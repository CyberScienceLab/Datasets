mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub in push lcall pop or adc ds repz sbb jo mov pop push dec bound arpl pop sbb mov shl jae insl add pcmpgtd mov jb popa arpl add lcall pushf int3 pop inc add inc and clc jmp idivl popa adc xor int3 inc mov in popf pop xchg xchg gs faddp (bad) loopne jno add shr or mov add cmp fcoms adc scas dec jo loope jmp shrd daa daa test mov daa pushf rcrb nop mov daa cmpb daa daa daa jo insb push fs int3 daa daa daa daa pusha pop in daa daa daa daa fcompl push clc lock daa dec push add mov (bad) outsl scas (bad) add sub je movzwl mov ss pop ret jb jb (bad) dec inc inc cmp jb jb xor sub out ds mov add push add (bad) sub enter add mov mov mov add lea mov mov mov inc cmp jne mov mov mov push nop mov out (bad) push inc add scas mov mov xchg insb test xchg mov mov pop jnp push or mov mov adc add (bad) aaa push mov push or and sub ret mov push mov mov mov mov add loope insl iret rcrl mov add cmp jne int ficompl inc mov or inc add adc mov push jne aaa sub jne (bad) mov ror sbb pop pop pop push mov mov je sti mov xchg cmp jb in jbe jo into add call ja and mov mov or mov dec ret mov in fucomi aas pop mov add pop repnz sub or pop push sub mov xchg sub mov aam or sbb scas sbb sti jne sbb jnp inc nop es mov cmp mov fwait push add ljmp fisubrl add add and push jg mov mov test je sbb and (bad) adc (bad) cmp mov and push mov sti ds pop data16 rol push lahf push lods push movsl jne icebp push push (bad) add xchg dec pushf cmpl in mov popa clc ret fucomip mov (bad) or or lret and call faddl lds mov push jg mov out ja mov add cmp ja cmp cmp jae or or sbb out dec mov inc or add xchg jecxz fild mov mov add adc sbb mov adc or push adc hlt mov mov mov and sbb jbe cmp xchg sub mov mov jle add adc jbe mov cmp or or jbe loopne xchg scas adc sti push push cmpl jmp ss daa cmpsl movsl loopne and push cs inc add xor sbb add sub sub or sbb mov add sbb add cmp nop movsb add add inc mov dec paddd fdivs clc mov (bad) aas or add mov (bad) repnz (bad) xor idivb inc xlat jl xlat ja movsb push movsb in je mov inc cmc shll xchg xor mov (bad) pop add jne pop stos sti mov and push inc in hlt icebp mov xchg insl pop mov add out cli jl add lock mov je cmp inc jle mov mov sub push stos mov std mov icebp xor lea jno pop shrl mov pop fcoms gs pusha push out arpl sbbb data16 xchg jo xlat adc int3 imul jne push fcmovb loopne cmp js sti inc cmpl sub inc popf adc or mov pop sahf push (bad) incl mov cwtl aaa jecxz add add ret jg cmp jae mov out rorl jge xor push test je aad rcll ret addr16 or js add adc jmp jecxz lock jl hlt pop sbb add push push mov xor push cmp fistl loopne or inc test adc push scas shr mov or adc aad leave jle hlt inc cmp in mov mov add rcrb xor push adc sub inc mov loop ret mov pop pop xchg dec pop xchg test shlb xchg sbb add in lds pop and gs inc je addr16 add xor adc jmp mov sbb xchg sahf sbb fistpl push cmp popa jne add adc ljmp insb cmp jg adc test jns add jne loopne sar test mov adc hlt mov add sbbb cmp mov dec fadd jb add or or cmp (bad) (bad) call adc xchg lea cmp jl movl pop repnz jb sahf es divb lret or mov and add out not sub test cld dec adc adc popf fist je insb or push or push sar mov xchg or ret decb fistpl (bad) xor adc call fisubl (bad) sub inc aas jg sti outsl enter je mov sub cmp xor popf popa cmp (bad) or cmp xor add fcmovnbe outsl out mov clc add and repz bound mov decb xlat cmc adc add dec xor dec (bad) mov jo add or sub cld jg stos jg test sub sub cmp jge mov xchg adc out insb jmp daa xlat or inc add mov in mov aad test fldcw (bad) lds stos clc add sti jae lea (bad) xor jnp or xchg (bad) cmc push sub mov add sub pop cmp aaa adc ds enter push sbb sbb cmp inc cmp inc adc push pop add sub cmp in cmp push test adc add pop (bad) sub mov sbb adc or mov push movb daa or adc sub or mov sbb call add mov inc mov mov loopne mov sbb push mov cmp pusha cld cltd adc xchg lods sub add adc repz xor sub sbb jl les adc add aaa out subl add or mov cld adc adc loopne pop mov pop mov sbb fadds pusha pop pop adc pop int3 (bad) rcl sbb pop ret pusha or xor pop mov sar cmp stos jg adc jne mov push xor ljmp xor mov sbb test in (bad) cmpsl lock pop mov pop ds pop jmp sub sbb push jne sbb mov mov jle fistpll jne movsb sub cmpl bound dec sbb hlt inc add xor dec (bad) loope sub je shrb xor mov pop inc and ljmp repnz jne xlat roll xor cmp adc test add mov loopne mov int3 sti clc stos jle jg jg inc cld jbe addr16 push push mov add or sti mov push mov add jg sbb pop or mov add pop inc scas (bad) jne push lock pop or xor mov cmp mov fcoml cmpsb push add or sbb jbe jmp loopne push lahf cmp sarl sub mov add arpl sbb das pop jmp inc (bad) arpl and ret pop pop push push sbb cmc sub or dec out sub jo xor or insb negb mov test jne test ja (bad) or movnti add push add loope push or mul mov add (bad) jge mov adc cmp icebp andl push int3 xchg mov cmp stos rolb pop in andl cmp fisttp mov testb sahf lock sbb cli scas ljmp inc (bad) or orl jmp mov cmpl jo in adc push adc or adc pusha (bad) sbb and pop or pop mov jg add pop jg add repnz fsub (bad) mov loop push (bad) jge loope add cmp cmp lock adc xchg adc sbbl notb clc xor mov jnp jge lea cmp add negl add sbb shll sbb sbb mov cmp imul (bad) sub fnsave cmpl iret adc in pop (bad) hlt xor dec daa add inc lahf add add dec or icebp mov pop pop test add cmp ret add orl pop mov rorb mov or lock lret pop sbb je add pop mov add ret add mov nop xchg in inc rolb sbb cmpsb push push ret hlt lret or mov movhps mov sbb jne,pt (bad) ss adc xchg ret (bad) mov push mov (bad) add mov ss adc mov add sub mov mov ret test call jge cmp or xor mov dec jae cmp je je mov loopne mov test je sbb enter dec jnp pop or add push jmp out xor add outsl jo xlat (bad) repz push mov loopne cmpl pop mov push mov ret rol add sbb mov dec lock pop or xor jg jge push out mov hlt jle mov mov jecxz cmp pop inc daa dec sbb push out das mov ja mov mov mov pop mov adc push enter daa pusha rcll roll pop jne xor pop mov xchg jp mov mov sub sbb ret loopne mov fdivrl sarl (bad) mov inc rep jmp mov fist in leave jmp mov jl pop cmp xchg hlt push lock pop adc loopew jno (bad) mov cmp divl adc js rep xchg subb inc je cld lea xor std xor jnp mov ds inc mov fldcw movnti pop push sub fist fwait pop pop xor push mov push test aad das mov shl cs (bad) mov add sub sub mov (bad) mov stos jmp fsubr sbb jmp mov sti jge je cmp and mov xchg adc inc (bad) or pop pushl mov cmp mov ja and idivb jb push sbb lock adc imul sti dec dec std movsl data16 call das mov cmp mov lret mov inc inc and xchg pop xchg push xor mov mov inc inc dec ja add push shr je mov cmpsb pop and cmp jne dec mov sbb aaa in aaa or jne jmp adc add adc (bad) loop je mov cmp jne push adc add adc outsl pop loopne add jne add cmp jne cltd push icebp or jmp add jl (bad) push mov shr or int3 in dec pop cmp shl mov inc pop and mov cmp jne dec dec inc sarl dec and pushf mov cmpb fcomp fdivl int loopne data16 stos pop aaa in popa adc pop daa push js jge fisttpl sub mov push inc pusha and add dec jae or je or je and je push imul xor dec and clc (bad) fsubp je jmp or or cmp ja lea mov add push es int or jge jmp inc jle mov jle dec pop sub jmp inc inc jmp mov jbe push je (bad) popa jb xchg and jbe push adc or pop add aad cwtl pop xor mov xorl (bad) mov mov push cmp cmp push inc mov dec xchg jecxz loop repz decb inc into into pop repz mov fist sbb fs je adc fbstp mov adc lea fldt jbe (bad) fisub add je das sbb cmp je push and jmp movsb xor mov xor xchg push cmpsb stc sbb jmp fstp fldt loope call (bad) xchg arpl (bad) sub adc dec push repnz add add pop stc in or ret mov adc jl and mov out sbb das (bad) in xchg xchg and inc mov mov lock jle fistpl es test out sub pop iret scas cld lret add leave sbb mov iret (bad) cld jbe imul cmp mov (bad) mov bound aaa jmp fild xlat fadds outsb xor xchg push or (bad) mov test into sbb rorl mov push pop test enter ljmp outsl movsl push inc push and daa (bad) lret into pop inc test xchg clc js aas sbbl or mov addr16 leave repnz bound and cld gs sahf mov (bad) pushl test lds iret decl js inc mov stos mov cmp (bad) (bad) (bad) jmp xchg test stos pop out sub imul (bad) divl jl xor cmp (bad) ljmp (bad) call mov sti jmp stos push inc mov push sbb sarb (bad) jmp int3 repnz test nop fildl daa movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov (bad) (bad) (bad) jmp fs aam imul loope jp iret inc bound ds push cmpsb scas (bad) (bad) (bad) jmp pop or addl cmp xor in cmp (bad) out cli lcall mov mov popa movsb mov and addr16 repz mov mov outsb fwait xchg and and outsb bound xor jmp or pop adc clc add jne push pop and add xor mov jg cmp movzwl mov (bad) lea push push inc or cmc or xor push push cld (bad) mov mov movl out ds cmpsb data16 add mov mov test (bad) mov mov jmp push clc pop aas outsw xor or leave mov adc inc push (bad) (bad) (bad) call push inc pop inc outsl jb popa outsb fs inc gs jo imul push dec popa jae push sahf jo loope insb jne fninit fwait sub (bad) mov loopne decl mov inc ret or clc jg ljmp or dec cld jne dec mov xor mov fbstp lcall jo insl inc fcompl fcmovu fisttp and sbb pop aaa push (bad) and or fsubrs rorb decb and push jp cmp (bad) repnz pop and mov jbe xor pop mov incl push cld fimul dec fdivs rclb mov push clc add stos pop (bad) mov or push mov cmp mov jmp cmp je pop mov add (bad) es sbb movb jnp mov push sbb pop test cmp outsl lods (bad) mov mov dec xorl fdivrs cld push inc jmp stc cmpsb jae lgdtl push std (bad) jb shufps and loope (bad) aad mov add add pop jo lahf inc (bad) push or mov or mov dec frstor adc fimul fcom and xor add mov (bad) mov add push mov push add pop (bad) ret in pop push sbb and out cmp push (bad) dec setne lahf pop mov in dec popf lock xor push push mov aaa rcrl jne jb cmp mov push or jne or ret cwtl push inc inc fcoml mov das and add adc call pusha sbb rclb rorl mov leave jne loope loop mov ret nop push xchg jmp lret xchg fwait mov push add repnz je pop in jno incl sbb pop add sub mov pop cs neg jno xchg add mov out mov sbb pushf sbb cmp mov mov jp les lods mov xchg xor cld pop inc mov (bad) rclb lods pop pop clc push mov icebp pop mov popa lock pop dec out dec add decl bound je movb dec push cmp sbb add dec jne icebp cmpsb jmp sbb add sbb jecxz sub cmp scas lahf push popf enter cmp push sbb imul call in push pop add mov jl call add hlt xor (bad) adc mov mov movl or or ficompl push movsb sub sub or cmpsl cmpsl pop adc mov push (bad) pop test push jo adc push clc pop sbb fwait inc jg jg mov xchg cmpb icebp pop rolb pushf (bad) in push call mov pop pop push pusha push push lcall or add jns,pn add or imul data16 xlat pop push push and mov mov cmpb je or jne movsbl inc insb pusha push inc jmp add (bad) xor shll jecxz popw add add (bad) popa addl cmp (bad) clc dec aaa insl jecxz pop (bad) mov add test faddl push ss ljmp cli and jmp orb icebp pop lods test (bad) sub cmpl je dec je aaa lock ja inc jbe add add arpl mov enter adc jne push jne push lea or jo cli push jns je orl movsl rolb cli push sbb pop sbb cmp sub movsb or mov imul outsl or jl dec movl pop (bad) jmp jle das hlt cmpsl lahf mov mov or aam or cmp xchg push add lret push mov cwtl or pop push or je add lds mov out fbld mov addb cmp jne inc pop test mov xchg in (bad) or mov jg pushw jno mov push (bad) xor out loop outsl inc jmp sbb sbb imul sub adcl shll mov add xchg aaa pop adc inc loope or dec or jo inc icebp mov arpl popf pop popa xor add cmp push (bad) test mov and std iret cs push push push push push mov push jns and pop es mov sahf sub or pusha add (bad) or sbb dec fistp (bad) ss aaa mov pop mov mov cmc lea jae mov hlt mov pop and xor push loope xor loop mov xchg ret das mov add sub sub pop cmp push sub fbld xchg jmp add sub jb je jmp cmp xchg push adc sub adc jmp sub std sbb es mov jmp mov jmp mov jmp mov jmp loopne (bad) jg sbb into jmp mov jmp mov jmp mov jmp mov aam or xchg push or dec inc mov pop ss mov jecxz lea (bad) je lods push insl jb outsl jp idivb mov test mov or inc sbb cli pop out in rorb sti and sbb mov sub xor push daa je xor pop xchg (bad) inc or cmpl cmp mov sub sbb cmp jbe push xor (bad) aaa repnz cmp jne and (bad) mov mov mov mov and incb loopne and mov inc fiadd adc dec (bad) call and mov adc pop add mov shll les dec mov mov xor in fnop cmp jle add (bad) sbb sbb in mov mov adc add out add jp cmp lcall mov mov push test xor pop xchg repnz subb jp cmp sbb xchg add add in pop ss jne pop pop pop inc pop sbb cmp add out icebp popa sar add mov xchg or mov icebp nop mov lods jg cmp mov add add rcr cmp mov es jne mov sbb add sarb mov mov push push ss ja push rcrl out xor sbb add movsl pop sbb ja add dec aad hlt mov mov leave pop push data16 adc cmpw clc adc cmp mov mov xor stos jmp push push add pop adc add cmp xor jbe xor jecxz adc pusha cwtl outsb add sub push or pop sbb cmpb push addl test sarb or call out dec and xchg sub or jne pop ret mov hlt lock sub icebp xor add jecxz rorl out fsub or cmp fldl es insl inc popa insb jne mov push add mov push jo inc (bad) adc lock testb ffree pop push sub push fwait out insl sbb popl je hlt pushf mov pop jp std push mov adc decl push lea aaa nop adc daa push out (bad) mov popa xchg inc jle sbb add or into mov fcmovu dec and sti pop jbe inc jg cmp cmp mov pop push jmp std dec dec sbb insb xchg adc test mov push je testl rcr (bad) push sub pop movw add xchg pop mov sub insl rorl and iret mov das roll loopne ds cmp and mov das or cmp mov (bad) xchg push push mov push push adc push cmp sarb rol lret mov (bad) cmp addr16 (bad) cld leave clc fdivrs bound jmp lea cmp push jnp addps into mov ds jne out jbe cld jmp fldl fistpl xor fmuls negb sbb add cmp test push mov mov sahf mov nop xor ret cmp je lcall add mov loopne call pop sub jmp pop cmpsl pop sub and mov pop or or addr16 in inc jnp,pt add push or mov add cli repnz pusha rcrl rcrl xlat pop stos clc mov push and in mov push cmp jl aam inc mov pop add (bad) xchg aas pop add jle add mov loope or jns push cld add cmp imul add and mov adc xchg cmp das sub jne out popa cmpl je cmp subl pusha sub mov scas rorl add (bad) fisttp dec mov cli lds push mov mov sbb dec clc cmpb lret or mov jle xor mov fmuls mov dec jmp aaa ret mulb sub add cmp fs dec jne add or pop out ja jge ljmp add dec jmp and inc pushf sbb loopne ret mov ss add pop dec jne dec pop lds mov or add jo pop or xchg jmp xchg hlt push rolb push pop jo imull (bad) imul pop enter dec and (bad) je cmp cmp xchg push and or pop and jmp aam mov mov movsl repnz push clc inc das lods out add add lahf cmp lds push (bad) cmc mov mov sti pop adc dec inc daa add mov pop mov out fdivr sbb xor cmpsb sub (bad) aaa pop es jl cmp jge sub scas sbb jg push fnsave add shr in jmp and jecxz mov int3 xor mov out xor sub jge mov in loopne sub stc add lea inc dec or sbb movsb push push cli mov push or lahf cltd mov push mov (bad) jle inc dec jge cmp adc imul add sbb or fsubs push mov lea lock add mov dec jmp jmp xor mov push insb dec js mov inc or insl jb adc adc roll (bad) xor pop faddl mov mov (bad) out inc nop pusha xlat push add clc jg dec out and sbb mov loopne clc pop sub xor adc lods jmp out stos pop in insl (bad) arpl cli pop cmp fisubrl test icebp pop and ret push push test jb fildl push sub das in rorb scas loopne mov mov movsl cmpsl cmpsl in push and call inc shrb shrb in jno jle add xor jmp js jae pop dec jle fcoms ffree aaa xor loopne sbb push lock dec push lock push das int3 mov add orb and ret add add add dec pusha ss outsl add add push inc sbb add jb adc jl push push inc adc orb in fcmove cmpsb add pushaw and push cvtps2pd or sar sbb loope push sarb jge (bad) lock dec cmp nop pushf lcall sub cmp push lods add add or sub xor lcall adc stos add in jne add xchg mov fmull or add je mov adc inc pop sbb mov aaa aaa test dec cmc sbb mov mov xor mov std (bad) (bad) cmp je cmp je cmp je cmp je cmp je cmp into cmp je mov stos fwait dec mov clc jmp adc or out mov jmp xchg aad push or pop jo,pn cs adc cmp pop jmp cmpsb cmp repnz push pop in inc xchg mov (bad) or pop call adc mov xchg push xchg cmc ret out sahf out and push pop (bad) push mov sti dec xor bound push je and lret cmp addb xor push and sbb jmp in jl mov inc cmp pushf subb test test dec mov cmp stos vpmulhw sbb jmp ljmp adc mov lea fldl add clc push push add sarl inc push mov add loope lods loope lds pop push mov cmp xor sbb pop dec or sbb rorl jo pusha add adc and jo sbb mov in add popa pop or jmp and in lea cmpb push js add inc dec (bad) fimul cmp pop jmp aas add rcrl cwtl xor xlat inc adc les ds cmp scas in jne add mov add mov clc sub imull mov in mov push popa jge xor push pushf clc in imul mov cmp imulb test in std adc les mov add es ja sti add jno popf fiaddl aaa inc ljmp out js inc add add je cmp push rorb dec ror or and int3 lock adc in pop mov nop mov xlat rcr pop imul rcrl sbb lahf adc adc pop pop ret sbbl mov xchg cmp dec (bad) jne cmp lock mov hlt add inc push mul push mov repnz mov sbb mov test jg cs mov mov ss lods in cmp inc push lock inc scas push push fiaddl add (bad) cld push xor call add push je test mov imull dec in in cmp inc popa fdivs adc cmp jne mov cmp jge pop sbb mov xchg add mov loope loopne sub add lea mov mov pop jmp decl stos scas mov rcl adc in xchg jge or push in test jnp mov dec in push pushf adc into stos inc int inc in dec push dec (bad) mov mov xrelease mov mov fbstp adc cmpl jle adc mov xchg dec jo and bsr paddq cmp mov inc push dec jne enter mov cmp mov push adcl and inc xor decl jne inc cwtl data16 push in xchg bound sahf adc pop dec adcl cmp scas adc dec lock pop loopne push push lock out pop pop mov and add in sbb cltd jecxz loope enter lcall mov jp dec (bad) ds add js inc jnp jne push clc daa and mov mov andl or pop inc adc jbe pop sbb mov push push xor aad or or popf (bad) jmp ret adc jecxz jmp sbb push jge cli pop jne ds mov js shr clc popa xchg ficomp cmp pop push push dec lock and or pop test je mov rcll lods cltd add sub ja fildl sbb js pop fwait scas jecxz and jl pop add mov mov out xor shlb insb jnp jge add inc add xor jno (bad) sub add inc notb mov cmp inc push push gs (bad) xor imul int or and je ja daa (bad) xor (bad) cwtl lea ret fwait mov fstpt push movb ret dec push push mov inc mov mov push repnz (bad) aas shrl jae imul gs xor cs insb jo incl inc gs outsl outsb addr16 popa je dec popa insl gs daa pop mov mov sbb neg pop ret fnstsw movb int3 push sbb add xchg mov and addb jl out jne cmp push mov call push out inc stc cmpsl (bad) popf int aas iret faddl mov repnz jl inc xchg sti and popf std xlat xor repz js push xor cmpb test nop jge call xlat or push sarl and cmpsb pop xchg sbb add cmp stos pop cmp mov lock inc xor mov adc rcrb (bad) rorb push sub mov push je das outsl repz bound push xor cmc add mov mov (bad) outsl data16 popa jb int and outsl mov jae aaa (bad) in pop pop cmpsl inc and add cltd inc in ja or addb (bad) mov shrb add xor dec pop mov push mov sbb mov adc lds (bad) push mov mov add mov fdivrs (bad) dec sub mov mov dec or lods push (bad) fnstcw push fsubrp (bad) cli mov and xor sub pushf ret inc dec add cmp inc cltd or les xchg (bad) push mov dec popa mov (bad) int3 loop jno cmp insb cmp aas and mov jne in jmp ret mov adc push cld jne sbb cmpsb cmpsb ljmp pushl and sbb mov push sub or mov insl fwait test sahf je sbb cwtl mov xchg push push mov lahf add pop mov dec pop sbb fimul pop pop ret sbb or xor sbb loope mov push test fidiv mov mov xor mov ss add insb mov (bad) mov mov dec js inc (bad) or sub loope adc addr16 xlat movsb mov pop sub addr16 imul sbb add dec inc cmp ja mov inc jmp cmp and lea cmp ja fcmovb jmp or jg mul mov adc sbb and lret sarb and and (bad) dec jnp pusha rolb mov or cmp jb or dec movb loopne adc mov dec rcrl add cmp lea test roll mov hlt mov mov mov pop (bad) push mov hlt inc dec adc inc das clc das fdivrs push hlt cli mov inc test je or jae adc je cmp adc repz add cmp jne std cmpps loope or mov std ja mov dec dec cld mov or push and push adc inc lcall ds jo adc or xlat pop fdivrl inc inc inc mov sub and mov ss cli xorb sbb test xchg inc sbb inc mov mov scas mov loope pop pop cs das cmp dec xchg adc mov loop aas (bad) jbe and pop xor inc push and cmc xchg dec xor pop pop add mov dec xor fldenv jmp adc or stc push add rcl push popf pusha mov and or sbb add ss and pop repnz mov inc xor dec inc inc xor outsb sbbl in sbb xor or mov cmp add (bad) cmp insb lahf or sbb test inc bound cmpl clc jge push add shrb mov divps icebp or add jo cmpl sbb lock pop push js std pop lea push push mov mov push mov or sbb es je push fdivrl add jae popa loop out xchg add fs pushl and mov bnd adc inc or mov (bad) subl push sbb movb fldt xlat xor inc add dec pop sbb lods mov data16 xlat out mov inc call cmp mov jl add in sub stos iret cmp jbe mov dec jmp jge and ds mov adc mov clc inc loope in hlt (bad) in push push cmc rolb dec or loope mov inc cmpl or clc loop mov and jmp push mov out call or sti test leave jne mov jns push sbb add mov fmull movsb inc xchg enter cmp arpl in fsubl test cmp sahf imul push das (bad) dec repnz pop xor adc cmp cmp xor mov and (bad) mov or out rolb enter jb mov dec push or test xorb fwait clc add xor cs (bad) ljmp push gs into gs (bad) adc inc imul inc push pop imul outsl arpl inc gs jne je dec outsl je out jbe dec imul mov gs outsl inc arpl xor adc ret or jb (bad) mov pop xor (bad) outsl insl bound outsl js imul ljmp outsl ja nop jo cmp andps outsb dec inc xor xor js push je dec add or mov stc (bad) add or add dec clc (bad) jb jb lock call in fnop aas dec push in aam int3 enter dec (bad) sarb mov test dec dec dec movsb mov dec dec xchg nop mov test dec dec je insb push fs pop pop dec dec dec dec push push dec dec dec dec dec dec inc inc cmp dec dec dec dec xor sub dec dec dec dec and sbb xchg inc dec dec adc push daa and unpcklps or outsb daa daa add dec clc pmuludq call pushf loopne fcom pushf pushf pushf pushf ror enter pushf pushf sarb mov test pushf pushf pushf pushf mov pushf pushf pushf nop mov pushf cmpb pushf pushf pushf jo push pushf pusha pop pop push pushf pushf pushf pushf push dec dec inc pushf pushf pushf pushf inc cmp xor pushf pushf pushf xor and dec inc sahf nop push mov dec je insb jl dec dec dec mov dec pusha pop pop push dec dec dec dec push dec dec inc dec dec dec dec inc cmp xor dec dec dec xor and dec dec dec and adc dec dec dec adc add and add push clc hlt daa daa daa daa lock call daa loopne fcom dec outsb daa daa ror mov dec dec sarb mov test dec dec dec dec mov dec dec dec nop mov dec cmpb dec dec dec jo push dec pusha pop pop push leave leave in inc push cmovl enter inc cmp pushf pushf pushf pushf xor sub pushf pushf pushf pushf and sbb pushf pushf pushf pushf adc or inc sahf pushf pushf add cld push clc dec dec dec dec hlt lock call in fnop dec dec dec dec aam int3 enter dec (bad) sarb mov test dec dec dec movsb mov dec dec xchg nop mov test dec dec je insb push fs pop pop dec dec dec dec push push dec dec dec dec dec dec inc inc cmp dec dec dec dec xor sub dec dec dec dec and sbb (bad) pop movzwl shl or ret inc dec inc mov inc popf cmp or push and push cmp dec (bad) or xor es fbstp and scas push mov movswl add inc and dec pop data16 frstor mov pop and dec push (bad) push xor scas pop jg xchg into pop or cmovle push cld aam pop add jle mov rorl adc repz adc sbb and mov push pop push xor jmp xchg outsb daa hlt mov xchg pop ret jo fiaddl nop scas cmpsl add push and out stc imul or inc mov xorl push arpl mov push cs push mov jmp (bad) push gs adcl fs (bad) in inc pop or pop call push add add gs push mov dec push push dec inc inc dec add outsl inc pop jle sti (bad) and dec push inc push dec pop and mov dec push push pop sub push inc dec pop dec and (bad) (bad) dec dec inc push das mov imul and dec movsb pop sub xchg xchg xchg dec xor icebp repnz xchg xchg xchg hlt cmc div xchg xchg xchg xchg clc stc cli sti xchg xchg xchg xchg cld std (bad) call loope jecxz xchg xchg xchg in out xchg xchg xchg xchg call xchg xchg xchg in in out out xchg xchg xchg xchg rcl rcl xchg xchg xchg xchg aam (bad) xlat xchg xchg xchg xchg fcomp fcmovu xchg xchg xchg xchg (bad) (bad) xchg xchg xchg xchg rol ret xchg xchg xchg xchg (bad) (bad) xchg xchg xchg xchg enter xchg xchg xchg xchg int3 int iret xchg xchg xchg xchg mov mov xchg xchg xchg xchg mov mov xchg xchg xchg xchg mov xchg xchg xchg mov xchg xchg xchg mov xchg xchg xchg movsb movsl cmpsb cmpsl xchg xchg xchg xchg test stos stos shll outsb aas jl xchg sub sahf aas jl sub add daa and xorb push xor push (bad) aas (bad) hlt sbb xchg or arpl je outsl outsb sub jmp fldl jg adc dec sub js mov popa jo pop mov mov mov jg or dec jne dec dec gs outsl jb stos in mov sti std outsb add or outsb mov push int insl cmp scas ds push pusha cmp push mov scas xchg scas push leave xchg mov xchg xlat hlt mov hlt or sbb fs outsb dec outsl idivb xchg jl test or imul lods inc ficoml mov push jle popa outsb addr16 scas cld add pop orl jecxz cmp out jo movsb mov dec inc sti inc and scas inc add leave mov jo xchg push imul ds movsb pusha scas (bad) insl inc fidivl scas pusha dec popa jo (bad) rcll mov mov nop adc xchg or (bad) movsbl xchg subb outsl imul sub div inc cmpsb or popa jae fmulp mov sub inc xchg sbb orl and shrb sub xchg adc sub pop clc jae push adc sbbl add push jb insb add fsubrl mov imul xchg dec jbe cmp mov ret adc fbstp inc inc popa mov (bad) nop scas ds dec push popa sbb push and insl in mov js push sub mov popa sub mov dec jne push aam sarl dec add push shlb test data16 bnd mov jbe sub adc inc push stos subl ds sub (bad) popa data16 fist (bad) je adc cs xor push add or push inc insb jae cwtl inc cmp das and pop mov inc or jbe xchg xchg enter push push icebp pop adc xchg jne int3 add mov mov bsf mov jbe add adc out jge inc sbb int3 inc decb pop and sub mov test std (bad) jnp sbb push loopne sbb mov push cmpb push push xchg adc outsb and dec (bad) imul and mov fdivs lods outsb arpl cmp inc push inc fdivs lods ret or div push mov add hlt scas and mov mov mov dec pop ret sub cmp cmpsl cmp aas lock mov rcll jno add xor jae scas or pop mov xlat adc adc or mov mov mov enter in ja pop push mov adc scas imul mov mov add mov cwtl js cli sti popa test or aaa lock adc adc sar or push cmp ja sub mov inc inc dec shr cmp mov jg inc pop cmp inc rolb popa sub push mov cmp jbe (bad) aaa inc cmp leave repz je movzbl push push (bad) jmp decl inc loop add repz jne inc imul loop add ds mov sub or outsb mov (bad) (bad) out or cmp je loopne add in out dec imull lcall mov cmp push add sub xor sub jle push or push aam sub outsb push xor arpl mov fcoms mov movsl outsl and dec movsb cmpsb cs or jo add adc inc cld mov cwtl rclb scas fnstcw push adc adc ljmp lock inc in (bad) cmp jl cmpb jbe adc sbb jecxz imul clc push sub inc pop addl cmpsl lock (bad) mov mov add sub jb sub std pusha (bad) cmp jl inc mov ljmp ljmp adc or sbb aas mov inc dec jne fidivl icebp mov sarb jl (bad) mov inc dec xchg jle cmp ret mov (bad) div dec dec out mov jle cli cmp pop mov idiv call ljmp jbe add mov sub jmp mov dec jne push mov out in adc leave push outsb cltd mov addr16 or (bad) dec inc sub xor clc jg pushl pushl mov negl cmpl inc aaa xor pop (bad) xchg sub int mov and mov orw fldcw mov dec add jno jge mov daa andl xchg (bad) fildll fistp ret add add sub fwait mov mov insb rorl (bad) fdivr mov cmp adc lods push sub rcrl ja in jae fldcw dec ffree ffree ffree ffree pop and or aad aam jns add mov arpl insb sub pop jg cli mov mov dec aaa pop or push xlat fcmovu mov push lock cvtdq2ps popa sbb fs lret mov icebp popf or inc lock jnp rcrb insl imul sahf sbb push cwtl pop outsl mov dec ret pushf roll cmp insl mov jbe fbld (bad) cmp xor and and mov xchg mov inc das ffree add and lsl pop notb jge jo mov inc call and add add std lcall add push adc sub jecxz push sti pop add lea sbbb adc dec data16 das sbb fldt fcomps setne jmp xchg adc ss mov pop outsb dec mov addr16 inc mov dec ret test iret add xchg insl sbb bound stos and adc adc mov rcl and xchg daa orl std add enter add push fdivl jo loop (bad) (bad) inc ja or add dec push push in mov mov mov jmp insb sbb jae mov iret enter orb mov mov les jmp cwtl ds push dec sub (bad) scas negl bound in mov mov push adc fistp or arpl inc sbb shrl jge (bad) jae das add cld xchg push cmp lret aaa mov xor pop lock adc je add dec testb xor call fbld mov call lcall jo push sbb mov mov dec cmp stos orb pop cli pushf sarl mov push mov sbb mov push aas pop cmp les rcll movsb push push into sti dec cmp enter enter ss xchg out call sahf jbe (bad) notb hlt clc cld add lock insl clc leave or push and adc or mov push les aad lock and movsl or (bad) movsl pushl cmp mov mov ret das lea adc ret in add cld in dec mov (bad) jle rorl clc jecxz add movsl xchg xor dec cmp add lret pop lret ret push pop lret (bad) pop pusha lcall (bad) (bad) xor mov fistp (bad) pop adc pop outsl mov push ds cmp (bad) pmaxsw (bad) aas xor xor pusha jbe cld repz mov mov les pop cmp insb lahf inc pop cli ljmp lcall or pusha mov xchg mov or add inc push (bad) jne scas cld pusha sbb inc inc pop jb in outsl jo inc dec je mov mov pop sub jbe (bad) aas lods fcomps mov mov push add push dec sbb mov cmpsl mov jmp jb pop jne jo sub mov movsl sbb pushf inc dec cmp pop mov cmp xorb prefetcht2 cwtl cwtl xchg fmuls mov mov (bad) fcmovu pop jge cmp jne les movb les and and and ret je pusha and lcall mov add sbb (bad) mov ljmp xchg or sub push push call into (bad) out add das push adc mov (bad) or and insl pusha (bad) jne insb sub js sub mov lret test mov mov cmp (bad) fidivrl sub fsubrl jne cs and lods jmp iret mov test mov inc mov sub mov fnstenv pop scas call jae fildl pop outsl xchg or lret ror movsb xchg pop push lock mov rep sbb cmpl lcall je pop pop mov sub jb push decb cmp ja imul mov add and (bad) aad in dec cli cmp fwait or bnd pusha std add je xchg ret and mov jg imul pop jne lea mov cmp push add and adc pop fucomip jge (bad) pop xchg ja out idivb mov jo jge cmp xchg mov test inc dec fsubrs rcrl (bad) cmpsb mov fsubrl je inc sbb test push mov lahf shr mov push pop outsb adc mov hlt out push mov repnz jne xor cmpl jbe mov mov nop or jmp xor inc inc add and jmp mov out dec sahf add jne aas and mov js mov fst bnd push push in cmp ja or jmp jecxz mov mov cwtl pop ds leave push push mov jmp (bad) mov pushf mov outsb mov or je mov or mov adc cmpsl mov je dec jl mov mov lock ret mov mov adc fdivrl pop (bad) clc adc jp pop loopne mov inc iret dec jns mov xchg ret xor and pop cwtl int3 lahf ds or sbb pop daa and ret mov push push push jl mov jbe je lock mov lea push test dec call ror mov jg fistp mov ss data16 add fsubs loopne insl cmp push testb clc dec cld lea or ss jmp dec fisttp cmp jl jmp add sahf jge rol negl adc lea add dec mov lea loope xchg pop aas push xor sbb or jp pop cmc mov mov neg jmp or enter xchg push inc push lods rorb fs decl mov dec mov jmp cmp jne pop pop xor les pop aam mov mov mov mov cs mov repnz cmc rcll push aam adc sbb inc add (bad) jae sbb add pop mov adc jb (bad) mov inc (bad) movsb mov movzwl sub fidivl mov jp push cmp iret lea mov dec out sub adc mov outsl add ja movswl mov add lea jl fstpl sbb call dec imul jmp cmp (bad) cmp dec dec inc dec inc dec lods or dec fstpt (bad) in sub dec aam cld stos or adc jg cmp jl pop sbb stos cmpsb je mov stos neg sbb (bad) std jp stos jmp inc inc mov loop movlps sti inc stos pop pop inc clc dec test jne ss mov (bad) mov sbb adc dec sbb sub (bad) hlt (bad) aas inc add leave mov mov mov fwait sub mov insl cmp cli adc mov mov sub push fcomip pop scas je mov dec mov repz inc test dec je dec jne sbb test stos xor ficompl shr repnz sti add fidivr dec je inc jne pop mov ret xchg je lock repnz or repnz sub mov adc or lea mov (bad) push or inc je push push cmp (bad) fmuls sbb daa inc mov sub or jno pop inc loop inc roll push mov test (bad) lret sub sub and adc in outsb iret sub sub sub xor jnp mov sbb and sub scas sub or pop out repz sub xor fldenv loopne pop dec adc add aam repz (bad) adc mov ret movsb cmp testl ficoml add cmpl add movb jge fldt add ficom aas imul dec and dec push out incl ja fabs push adc pop frndint rcr cmc outsl call scas push fnstsw fwait mov testb je fidivl xor pop fbstp lea mov inc sub nop jnp jecxz shr and add push cmp xor stos mov sbb jle add jns lcall imul pushl jae cmpb jb movb js decb jo lock cmp jmp data16 pusha xor jmp mov cmp inc xor push or mov push shr mov add xchg out cli sbb or fs adc and mov cs or rorl test neg adcl test sub or (bad) fisttp das js adc jl mov cmpsl subl mov or sbb inc loopne push in mov fcmovu insl or jne or loopne cmp mov jecxz setnp jne mov scas das (bad) jne pushf and jne dec sub cmp and inc or ljmp dec adc sub movb cmpb (bad) or or jbe pop jmp mov js push sbb iret inc pop and push pop das sbb sbb jbe jns fwait mov pop add js fldz cmpsb dec mov mov cmp lods or testb jg hlt cmp or out (bad) in or dec and fistpll sub add jp cwtl jne mov sahf mov les add pop jmp mov xor add aas jmp fstpt dec test add dec mov add sbb test insl and push int and mov cmp jae fimull inc jmp mov mov negb add clc dec es push inc imul push cmp (bad) out jb aaa add stos rcrb inc rorb xchg push push cmp fmull push push adc sbb push cwtl fistp mov sub fwait hlt fwait inc addr16 mov shrb sbb aam int3 lods lcall fldt fstpl fwait push push cmp leave (bad) cmp fiaddl popa mov fcmovnb fldl inc jl test sbb mov sahf insl (bad) leave adc mov xor push adc add pop (bad) rcrb cmp out movsb xor fistpl or cmp inc stc inc es sahf jae das fisub add shlb data16 adc sarl adc (bad) or xchg sub pop jg or sbb mov lret movsb dec fistp ret mov xor sbbl cmc mov sub cmp ja hlt push jmp ljmp (bad) jg iret lcall inc jnp adc jge mov pusha push cmp daa xor out adc (bad) and jbe jp out mov roll test adc and mov mov add lods dec rcl mov add (bad) sti pop loop ffreep add std add movsb jg add in aas push lock incb jb jnp adc (bad) ja and jb or jp (bad) mov push sti insb cli (bad) cmp ja adc pop mov add inc dec jne ljmp mov aas cltd idiv imul pop sbb test repnz mov fildl add pusha ret or js jne inc std std xor sbb fnop mov adc (bad) pusha (bad) aaa add rolb lods pop sbb test dec xchg and daa jmp test jg mov insb push insl cmp clc hlt or movsl xor add test inc pusha xor cmp jl jbe or addl add push cmp repnz in (bad) cmpxchg add decw cmpl fisubl cmp fcoms ljmp add add int int3 adc inc inc xchg adc push test fidivrl adc pop enter insb pusha loop adc imul sub stos test fistpll sbb dec xor into hlt and hlt mov outsl addl add decb sbbl scas data16 mov clc (bad) mov enter rorl xchg lods dec sub push or fldt ficomp pop and sbb stos dec movsl sbb adc mov adc push add xlat fstpl lret (bad) mov push xchg and idivl je add push xchg sub rcrl fcmove jge sub sbb cmp cmc (bad) xchg adc in out cwtl xor pop ss pop (bad) xchg ret push or (bad) adc add push jb pusha in int test xor add test nop fldl adc sbb mov pop enter add js mov push cmp test in dec sti je rolb pop imulb hlt out push cmpb jne mov mov push lea or div cltd jp pop test jb inc lcall push in mov ljmp jecxz outsl call mov test cld notb sub inc xor int3 xchg call aas add (bad) repnz push push or inc or stos mov fs dec aas pop and mov lea dec sti lods jmp inc scas je or jne cmpsb add enter imul cmpl sub mov stos call add adc fdivp xor sbb adc fwait xor sbb ja movsl (bad) cs sbb imul in pcmpeqd push iret or xchg in ret out cwtl fldenv adc pop and cmp or clc or jne inc cmpb jne push and ret popa or adc add (bad) add add add sbb pusha fadds jp cltd mov test in loopne incb fsubrl pop incl mov adc jecxz movsb nop sbb push bt or jae pop mov jnp jmp mov mov jnp pause jns mov lahf popf or and mov or cmp jne mov xor data16 ja xchg fisub push mov psubd xchg xor stos cmp push or or pop mov sahf add or cmp iret or je ret push fnstcw lock sub pop mov icebp fs add dec ret jbe mov sti jb add sub jo mov or mov loop mov cltd test les das popf dec sahf into add push lea and pop xchg fmuls enter fcomps loopne mov lock fcoml in inc sub inc jnp xor leave (bad) mov mov add jmp shlb push lahf sbb js (bad) les mov shll dec and mov mov pop mov lds fs lods loope (bad) push cmp cmpsl or push pop jbe push jbe jl push add pop jl jg je mov add push jmp in outsl mov or je or je jmp cmpb dec mov aam and pop call add inc sub adc mov cmp xor mov xor gs pop push call ret jl or dec push data16 or inc adc movsb je call or dec out xor dec fcomip fcoms lea call mov xchg mov sahf and add add in adc xlat adc mov pushf mov jae push and inc xlat push jns add push xchg add jns stc push roll jmp and add outsl cmc xchg jb push cltd (bad) les add inc lret add dec or out ret push (bad) adc jmp adc sahf out call jge mov js enter jbe fidivr push pop mov ja xchg push stos pop daa jmp sbb push test fucomi add mov pop push subb mov loop jb (bad) mov push mov adc dec inc aad cli aam mov dec mov push xor (bad) cmc ja cmovno push dec adc in in popf or adc and adc cs xchg pushf cmp (bad) iret rolb add ret jne or mov and call (bad) mov andb mov ljmp jo aaa adc pop inc out and jg push jmp je push jp in mov or aad push (bad) dec movb push call cmp sub cmp xor jmp mov add das push jbe jo pop inc ljmp mov sarb add sub jae clc ret sti jb outsb sbb cmpxchg ret add vmwrite lcall and mov shlb mov orl pop xor into push sub lret movsb jle popf enter push mov and iret and adc and (bad) jge popa out (bad) stos ret jo fwait pop jl pop in lea add jne incl in mov mov sub jmp sub je dec je sub dec fs jg or push jmp mov jmp push push push es xchg les push inc mov jle fadd scas pop xchg add push std mov scas and divb or pop mov pop call ficomp bound outsl jl loope dec sub aam jb or or jl mov or jne xchg jno movsb inc dec test mov jne cmp jg mov pop or ret sahf incl push (bad) imul add cmpl jle cmp adc pop and out cld gs mov mov fmuls fadds pop lea loopne push jmp cmpsl or sarl and inc out and and push test adc pusha xchg popf xchg mov inc idivb push mov ds and xor xchg fcmovb push fsubl mov dec sub mov adc push mov xlat xchg dec fistp adc sti mov pop test xchg cmp es lods xchg pop stos test jo lahf add sub and pop ljmp in pop jmp adc add (bad) (bad) mov ret push mov and in call mov mov fcmovnu jmp aaa repnz sbb movsb jns jmp pop mov fisub or mov jmp cmpb ja fbstp je stos fsubrs (bad) push test mov pop data16 jnp mov lock add (bad) cmp jle and fs jne cmp add or adc ret ja aas or daa or cmpb rol mov cmp adc fwait pop mov and mov out loop insl in xor cmpb sarl stos push xor (bad) fistpl scas stos add fsubrl fiadd (bad) mov sub fcomps das xor loopne push out dec ret orl and enter aaa gs push push notb add push push cli ljmp iret mov sub lock (bad) mov inc and (bad) jmp js inc rclb xor enter push xchg jle push (bad) and imul inc add xor or and dec cmpsb xchg lret add not iret je orl inc push fadds add or orl push test inc push dec adc aad ret xchg mov jne,pt add add xchg or cmp push add push or pop adcb sahf mov mov div ret fcomip add xor xor xchg cmp sub jl xchg test inc pop out call int3 mov jno data16 lret cltd aam clc aaa jns (bad) mov adc xchg test popa jne dec cltd xor in dec cld bound fst fcomps or sbb fwait jmp sbb pop xchg jle les mov fstp push repz dec push push adc movsl xchg add in add mov sub jb or xchg cmp pop inc xorl cltd pop and mov lea xor orl or xor jg (bad) das fwait push or jns push addl or adc pusha loopne lods xor movsl lcall jle add cmp or leave pop dec push add lods xlat dec pop sbb shr test inc clc cmp push sub ss dec lea dec lret mov xor dec (bad) mov pusha inc lock cmp movl jb sti or shr cmp inc and pop add pusha dec xchg push in or add xor in ss out dec call (bad) jmp sbb or cmc add outsb xor je mov add lock mov inc idiv push jl je xchg cmp pop daa add add or mov fwait js pop jb and bound cmpsl push mov insl orb in lea (bad) imul in pop lods add (bad) rolb es xor cmp ss xorl xchg cmp add fildll (bad) pop pop in paddq pop sbb adc hlt push push push xchg sbb add push inc mov mov xchg jnp fs scas pop jns adc sub or add es test (bad) inc add sub cmpsb sar add mov jmp mov sarl sbb je scas ret add (bad) shrl hlt lcall jo negb rorl rcll cmpsl lea fnsave lods add jg test mov mov fildl mov mov xchg or jmp mov jl mov addl test cwtl xor pop je jne xor and cmp jmp in in pop cmp js mov dec scas in dec cs xor out sbb (bad) xlat add sub and pusha lea icebp xchg jns out sti xor outsb test cld and fcomp aas mov cmpl xor dec lods rcrb aaa ret mov pushf cltd inc out inc pop jmp sub push pop test rolb repz inc (bad) adc in mov jo and or adc clc push push sub pusha fsubs aaa icebp dec adc (bad) lcall subl sarb adc mov and sbbl mov out lods mov xchg and sbb lods jp out loopne add and mov mov push mov sarb jne jl mov stc push imul mov es data16 psubsb push or cmp test or push add enter lock jl and daa call mov dec mov cmp sarb clc inc clc rorl xor test or jge xor push jo adc movsb sub pop mov pop outsl lea adc lods mov xor lods fsts fcmovnbe dec mov or jno push xchg mov dec pop add dec or add dec les test pop adc pop loope fidiv add jnp mov shll test cmc mov jle adc js jmp and or add and dec inc mov push scas push mov sti push jg cmp frstor sbb sbb push push pop or cmpsb sbb ss and mov ja or lock pop pop mov movsb out sbb ljmp sar lret adc ljmp adc sub ljmp xchg cwtl and add inc or shrl jmp mov mov jnp aam mov add sbb subb scas pop or add aam push pop add cmp in int mov in or jge clc push in inc fimul push loopne push cmp repnz xor subl inc dec pop adcl int3 xchg loopne xchg stos insl add push les movsb test movsl xor into xor and das xchg xchg mov cmp lret leave pslld push xor inc xor sub jmp and add mov cmpsb imul cmpsb imul inc push daa movsl je mov or rcrb lods xor pop lret mov mov cld cmpl movaps test jae jecxz jg bound or arpl mov inc js dec sub sub dec mov scas sti loopne or pop mov add fild jnp jae xchg dec jnp or enter loopne fbstp cmp loope sub pop push cmp xchg jb pop sub cwtl mov mov cs add movsb aaa nop daa and jbe ror jb sub adc dec xor cmp pop aad xchg mov xchg mov adc std sub mov stos mov jae cmp cmpsb dec adc mov sbb hlt add mov nop xor sahf dec outsb xchg ret adc push sbb add jp sahf mov lea mov scas adc scas xchg and aaa xchg add les add pop or adc xor test sub gs sahf lahf ret das clc mov adc jge mov mov mov or gs aas in fidivr movb adc push add cmp cmpsb sbb cwtl adc pop inc sub ja jge hlt and adc stos sbb and adc push insb and and ret adcb addr16 lods rorb les adc enter adc andl das add push mov mov cs push adc adc sbbb (bad) cmp cltd jl pcmpeqw cmp loope mov ret or and lock cmp adc and sbb push dec movsb sbb (bad) and add mov or pushf mov and pop dec xor sub sub add xlat add or xchg fdivs fldt mov js pop loop pop call data16 and nop adc add dec or mov and dec jmp dec sbb mov and imulb jb mov sub and ret (bad) jns dec or inc cs add mov jle cmp push lock out and dec add je std in cmpsl jle shrb fstps xorb daa xor ja mov (bad) inc lock adc or or jl pushl jbe in cmp inc sub push inc in lock and roll and inc inc inc jge or lods hlt lret (bad) pusha or (bad) (bad) or sub add xchg sbb hlt jge jl mov and test in dec push lcall adc mov dec mov pop xchg sarb fildll push dec cli test inc mov push test lods jg dec jg xchg or or or and fwait (bad) nop push inc mov mov xchg mov jge pop mov std inc push push les ret sub daa push daa pop das sub (bad) fcomps jb popf add jo add dec sbb or cs push xor ret push ja push loope out pop inc adc inc push jmp inc mov rorl sbb addr16 adc outsb inc inc scas fldl je mov mov xchg dec mov sub call mov mov sub inc mov call ljmp je inc rol (bad) (bad) js jge jb test adc mov add cmp and rolb add adc clc mov daa aaa inc inc inc add cmp dec ret sub cld dec or sarb cli jbe dec sbb das das sarl movsb outsb xor lock adc mov daa mov xchg js bound jg jae adc test inc cwtl jbe xor add nop adc mov inc (bad) jne xchg iret adc jo cmp stc dec push jp sub xor pop out loope mov and mov hlt pop dec js test in push mov ret adc aaa push mov sub jb xchg stos (bad) sbb inc decl sbb lret jne sbb dec or push pop jne ret or pop ja inc or setb or pop fildll movl inc add add sbb dec data16 enter mov push sbb mov mov mov sub mov or cmc add test hlt mov in adc add fisttpll dec mov mov push cmp js je mov sbb fbstp push mov popa mov push lea inc cmp pop jne lea pop daa pushf bound scas movsl out add cmp xchg rorl dec sub dec jne fwait aad jmp add xchg shlb add arpl mov or add out cld sarl mov jne push rcl mov xor in fstpl cmp pushf (bad) lcall xor mov and lods cmp mov popf xorb mov sbb sub jb inc call pop mov (bad) mov cs xchg in in nop add mov mov mov aaa cmove fmull popf je mov and pop jo ds fcomp mov push mov xchg sarb sub in sarb inc xchg adc nop sub mov ljmp or enter fs lds jl and enter aas ret adc (bad) cmp pop hlt mov mov push cld push add popa hlt mov and mov cmp movsb sub dec add inc (bad) adc iret inc call jg or das fs mov fs sti test popa insl pop jp fwait dec jo push and pop fwait and cmp (bad) mov ds push cmp push and add pusha jne adc add push out subl xorl xlat adc daa sub js pop sub shrb push test pushl push mov test pusha cmp adcb push leave dec in dec mov ret cs cs pop dec add daa push out fcom (bad) xor sti test and or add cs push inc inc popa cmpb in push dec lods ret pop mov xor scas aaa mov (bad) cld add cltd lcall cld jp testl or and cmpsb sub cmp pusha jae mov ret test adc jg xlat rorb mov and out mov sbb fcmovnb jmp orb mov xor mov pop jns dec into adc pop jmp push add jmp push inc or aaa not mov xor test pop or push dec and (bad) divl mov gs jo inc js jp call jecxz lock inc sub call dec ret xchg xlat sbb mov xchg lock insb mov push int3 and mov mov sbb inc cmp jne (bad) inc in cli and and test jle adc mov scas mov sbb mov add inc jmp mov xchg mov mov mov scas outsb fdivrl add ljmp jnp cmp orb mov mov xor mov inc or mov mov mov inc mov scas sub cmp (bad) mov add mov rolb xor pop add sub lret cmpl sbbl test sub xor sbb outsb das popl (bad) stos aaa (bad) adc movsb movl sar add lods inc mov adc pop adc sbb fnstenv jne outsb add sub lods sub xchg push push sub inc gs rorb les in test aam std jle (bad) (bad) mov dec xor dec insb fcoms push aaa test cld mov jb out clc mov popa jnp push jnp ja je push mov inc mov mov mov ret mov lea sub sbb mov dec sbb call data16 cmp in aam orb mov clc pop lcall sete incl ret jb popa movsl fnstenv (bad) mov decl cmpl mov (bad) pop pop shr mov xchg mov inc dec inc mov inc or jle adc (bad) cmp or xor inc (bad) add xchg (bad) xor sbb inc dec mov das pusha jle emms aad and lock or dec out lock sbb mov stc rorl nop sub adc inc sub bound mov pop xor in nop jmp lcall add xor addl dec das int and add enter aas dec call cmp push jne cmp out and or sub lret mov dec inc je rol aaa ret (bad) and pop or movsb jae pop out stos xor push je fucomp repz roll and in ret int3 push orl lret pushf data16 cld and push ss repz push fs adc jae mov es xor das dec sub jnp les xchg mov iret cmp add out jns out xchg mov test and mov inc je loopne mov jle push pushf pop mov and inc jle cmp out jns pop push xor sbb mov repz sbb js fnop xlat add push insb xor cs popf cmp or lock mov mov add dec jae and rcrb cs or pop dec fmulp mov call repnz loopne fdiv mov fadds aam ss fmulp xor insb int3 cs enter repnz sub cs mov pushf mov cmp mov mov lods cmpsb jns fmulp or and leave cmp insb cmp cwtl xchg push or mov daa mov jbe cwtl cmp out xlat ss pusha sub nop jae (bad) sbb nop clc dec pop aas fiaddl push mov push cltd cmp mov es adc sub cmp dec in mov cmp les fs adc xor negb repnz jo inc cmpsl jge xor es or mov or cmp inc dec and nop inc push cwtl nop mov and cmp adc sti xor mov aaa or and decl sub adc sub into adc cmpb mov push cmp nop out add in jo add js imul push mov cmp mov rcr add in adc jg movsb xchg faddp mov dec cmpsb lods icebp dec rclb nop or in jb inc pop inc pop enter les mov or cltd jb test (bad) repz sar pop roll and sbbb xchg mov dec aam dec push test adc mov shll sub push jb mov insb test clc and adc jecxz sub stc clc lea outsb test sbb xchg pop mov je mov std test mov and xchg insb lock sbb adc adc xor sbb fcomp call jb (bad) sbb jecxz (bad) pop lods sub nop pop and push inc adc (bad) popa adc pop data16 in xchg mov subl adc push adc call stos nop (bad) lods and daa daa test mov in (bad) mov cld jmp push xchg push adc shlb es mov push cmp mov and dec sub andb cltd fs movsb js add dec es in lods mov cltd fs mov mov cltd fs dec mov dec es mov dec es les fs enter cltd rcrb rcl jb movsb jb loopne lock movsb lock fimull sbb enter dec repnz mov mov and inc dec push mov hlt ds jo sbb sbb cmc and jns or cld fisub dec add outsl je fs jne loopne add fisttpll sbb dec adc outsl fs cld cmp jb pop outsl jb inc insl jo jl (bad) xor jb insl push je pop push or enter rorb mov (bad) jns lcall jae pop dec add mov outsl repnz ja aas test clc inc jp inc dec mov clc mov (bad) xor sbb mov add and pop icebp aam icebp mov (bad) scas push mov pusha mov cmp or (bad) xlat sbb and js cmpsl std add out in add lock jl out sahf mov int3 js (bad) ds out bnd push sbb inc loopne les es push adc dec dec inc shrl cmp addr16 dec mov jae add movsb dec or jmp dec add fdivl inc je add mov mov insb (bad) push lock insb adc inc add es add and shlb (bad) xor pop xor inc and lret cwtl (bad) cwtl xchg out jmp inc popa fidivrl cld inc scas inc cs adc xchg fs pusha fmulp adc adc (bad) sbb adc outsl out and repnz enter ror enter adc popa add iret xor add (bad) sarb adc sbb or insl jo (bad) xchg sbb or xchg addr16 mov sbb and cld (bad) jae push icebp push outsb divb int jno icebp pusha loopne loopne roll movsl (bad) pop arpl jg dec cmp aam sbb jge jbe fsub rorl adc loopne mov (bad) in xor add in repnz lret cmp mov pusha or call inc mov mov dec push in xor loope inc ds (bad) in add sbb xchg mov fstpt leave dec loop aaa test pushf inc push loop loop daa fs xor ficom loop or sub mov in xor js or jg dec adc inc xor jle sbb clc sub pop cmp sub dec je mov or push lcall es dec mov loopne jbe add je inc ss cmp leave testl clc xor fidivl lret clc pop stos scas in in mov fnop mov inc cmp adc in mov sub in in sub sbb js dec call imul call jmp fisubrl pop repnz push mov dec fild mov or lcall adc fcompl jg call xor lods xor in shrb add in mov mov mov repnz aam jmp adc or (bad) ret enter sarl lret iret mov and in adc loopne xor xchg in mov inc jl sub pop decb call add mov add icebp mov xchg cmp je and jecxz jle mov push push repnz mov mov loop sub ja pushf (bad) xchg jne pushf xchg sbb xor test (bad) insl push dec imul imul cld loope add jne inc add (bad) loopne cs add push aam sub adc mov or test int3 xchg pop les push adc je dec cmp out aaa sbb jmp and mov lock jne popf or shrl (bad) push call imul inc (bad) xor test aaa adc imul pop pop adcl (bad) lret inc inc pop sahf jmp inc sbb xchg orl mov dec dec loopne fcomi push dec jnp movsb pop fcompl cwtl mov test sbb (bad) aaa cmp jne add ret push add (bad) xor dec sti xchg xchg (bad) adc or or (bad) pop dec add imul inc inc sub xchg lock inc or adc (bad) sbb xor div and xor and mov xchg jp repnz in arpl push mov or pop jb mov jbe sbb add lods je ret aas leave test fdivs dec hlt (bad) lea sarl nop mov out mov mov aaa jmp sbb adc loopne xchg sub inc in in adc xchg dec call add and movl sub adc pop or adc cmp xchg mov sbb cmp push cld push outsl inc ret outsl cmp xchg pop sub data16 jmp js mov out dec push adc push cwtl xchg inc push add dec fwait cmpsb sub decl push adc lcall hlt jmp sbb push and add dec jmp adc cmp bnd xor inc (bad) adc mov fcom jmp inc add enter sbb inc sub sbb sub pop xor pop dec lock in lock je pop jne push xchg mov mov add or or lahf (bad) (bad) int3 pop fisubl inc add xor enter xchg mov pop outsl test mov imul fisubl fildll cmp insb enter mov in popf cmp mov push mov mov or and add jmp cli adc (bad) iret int3 sar imul es xor out lock push adc inc repnz in lock push imul mov jp mov (bad) xchg mov inc mov and cmp (bad) mov pop (bad) (bad) hlt jae push test jg push jp add call inc xchg pop jo mov xor xchg cmp loopne add and cltd xor fdivrs dec iret xor ds repnz or jl xchg pusha imul es fistl pop add enter cmpb adc jbe add jno push push nop out jg lret pop daa mov sbb mov sub and push (bad) add cmp mov xchg clc aas or movzwl cmp ja test mov sbb pop jbe mov jns fcomi hlt and lock jae pop pop cmp or and es sbb or enter je and sbb dec pusha lods rorl scas movswl insb or es xor and push mov sub fistl mov leave rolb lock flds pushl add clc fistl call and xchg je cs jo or fadds in push fsubl and fcmovu add fnop movsbl pop adc mov es shlb pop inc sarb dec pusha and hlt call push enter sti lea cltd fmull pop cmp push in test sub incl dec je jmp sbb shrb sarb test add and inc push mov test sub iret jnp repz mov std and lret fwait imulb pop repnz outsl push sbb repz imul jecxz mov sbb or aaa cmp flds mov inc fnsave mov xlat xchg pushf je lods lods cmp sbb mov jo pop shlb xor movsb and pusha inc out popf movsb mov test pushf cmp pushf cwtl mov cmp sbb xor stos xchg jno dec rcll aaa nop je cmp dec mov fsubrl sub rcrb insb jl jl push mov mov mov mov cmpsl inc mov cmp dec imul pushfw xor mov mov add mov push jmp scas xchg hlt or ret in dec aaa test iret pop hlt jne test xor enter (bad) (bad) hlt in call hlt loopne xor inc rcl cwtl cmc sbb dec inc in push jne inc dec jb cmc out rclb mov popa ret cmc cmp sbb loopne dec loope daa pop nop dec push push pop cmpsb in push cli cli xor mulb test shl sbb notl pop mov mov push ds pop pop push je cmp repz nop stos leave xchg adc push ljmp push cmp or push xor insb xor es and push inc push stos or add es cmp in in ret jno aaa dec xor mov jnp aaa imul xor fstp aaa insb lcall aam xor dec or rcl mov test jno loopne pop adcb add insb enter xor cmp rolb aaa sti xor inc cli pop mov imul inc out cltd mov mov cmp test push loop dec clc cmp sbb shrb xor xchg mov mov aaa aaa mov mov int3 xorl xchg jne (bad) es cmp aaa mov popa test test pusha ret movsb aaa movsb pop rorb mov jno cmp nop dec pop jno cmp mov aaa cwtl jno lods or aaa outsl movsb jecxz icebp aaa dec mov lock cmp lret cltd aaa in mov test sti mov inc jmp rol test sbb and int3 loopne xchg jb mov sarb pop push (bad) xor or ret lock or inc xor mov jmp movw or push mov pop push xor jne xchg add inc mov and pop outsl and or adcl outsb adc pop into jb xlat scas sub pop or data16 pop push add js in shrb mov cmp mov push outsl dec xchg add stc call cld cmpl jb lods dec add mov sub mov insl jo jns or aas dec rcr pop (bad) and popa adc and fisubl xor dec stc jb inc push ds add (bad) decl inc outsl jne xchg jb outsb arpl pop or and dec pusha xchg and adc xchg rcl pop xchg jg sbbl or jl arpl (bad) xor iret push sbbl inc aaa or cmp xchg daa adc ss push clc sub dec add adc (bad) sti and dec xchg test lds test xlat es sub xchg lahf inc sti pop push jbe and mov aam lds (bad) das jmp lea iret mov cmp jl cld stc and xchg dec pop jne jg mov cmp or sbb pop sub or sbb xchg mov test in or nop xchg outsl and cmp sbb test pop xchg pop xlat scas in mov xchg repnz outsb jns and jmp push gs push ljmp hlt add mov jle sahf out sub sbb sahf push pushl xor push mov jne push addr16 outsl mov or int3 dec aad int ret aas fmuls ja mov hlt cwtl cmp jle inc aam pushl fsubrl xchg dec xchg out loopne ljmp and push fisttpl aam lds or jmp jecxz adc icebp xchg pop ja push loop test cmp je outsb (bad) mov loop adc repnz xchg ret jg sbb mov pop repz adc div (bad) imul inc hlt out pop (bad) call ret mov (bad) addl mov and sub push or adc ret movsb or xchg dec fmull sbb pusha loop inc cs dec add xchg and inc decl adc popa mov sbb test repz mov scas das jmp xchg jle push (bad) les push push xchg jo fist xlat rorl inc jg add jo (bad) mov cltd add pmullw push mov adc test incl pop sbb (bad) out push test aas xchg dec or cmp or jbe sub push adc push xchg cld rcrb fmul add jns xchg sti outsb outsl dec sub mov lahf jno add mov mov fnstenv sbb (bad) and movl xchg daa lock sbb js lock cmpsb add pop and daa mov fsubl jl inc xor inc sbb push enter cmp push jp js ficompl add jo cmpl subl loop loopne push faddl jne xchg nop add sbb and sbb and mov das add sbb jne pop jo arpl or les jecxz push incl lret xor xchg arpl cld lea cli fldcw insl xchg (bad) les fldenv pop jns sub out inc (bad) or mov loope and js mov cltd pop imul hlt ss out gs cld sbb push jmp mov xchg lret sub cmp jo lds push loopne and cmpsl xlat lods xchg xchg xchg fldt xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg cwtl cltd xchg xchg xchg xchg lcall xchg sahf lahf addb addl xchg ja icebp add xor xor mov (bad) popl add add add notb lea push push dec dec (bad) push hlt xlat xor dec add adc xchg mov mov push (bad) adc sbb test pop insb jecxz jne sub push cs dec xor push or cmp jle sub ret dec ja push (bad) mov pop imulb js cmp xor test cmp aaa sub lods add dec dec mov idivb fmuls or or mov and cmpsb fisttpl pop outsb sbb mov dec jl or cmpb mov mov cmp je mov and sbb inc add and jmp jle in rcll outsb je jmp cmp sbb test (bad) fistp jp dec jne notl cmp aas pop je in or lar pop mov push adc ja and jmp call jmp jle mov cmp (bad) fcoml cld push add add adc and or movsbl push pop push jle xchg pop mov push aaa mov in ds pop in push push adc setle mov mov cmpb ja jb add add decl (bad) out mov mov loope add or mov rorl sahf push lea adc ret mov call dec lcall cmp inc pop mov or lods cmp lcall and add les pop loope test loopne sub or push sub aaa mov jle mov xor test mov xlat lcall mov pop pop cltd sbb push jle dec sbb xchg or adc or repz or (bad) stc add sbb js push hlt dec xchg mov sbb push or movl mov push lret test push jp mov jge or stc pop jmp inc clc lds jne pusha enter jecxz lea dec cmp (bad) xchg add push lret add mov cld add mov adc or adc lods test add daa mov movb adc test faddl jnp cmp push aaa sbb inc or xchg jge mov ljmp insl or sbb fstl hlt dec dec call add fsubs adc or cmp or inc cwtl (bad) and pop lret add ss pop pop jge cmpsb fildl mov scas cmp add or insl jecxz repz cwtl lods (bad) loopne push inc (bad) fsts nop outsl lret push out sub fstpl in dec push fistpll pop (bad) sarb xor sub jmp std xadd push xor and popl jmp adc or jmp or inc loopne sbb inc fstpt adcl pop (bad) aaa loopne fidivr js jno pushl pop add add call js dec sbb mov pop or insl add sbb and pop mov enter adc dec or dec add fildll lret (bad) jg jbe fnstcw sti fxch inc cmpl mov fs xor mov inc fwait or sub sbb xchg pop popa xchg cmpsl fimull inc pop mov inc cmp outsl pop push push ja jb inc and (bad) adc xchg or inc sbb inc sub sbb jg add push inc insb imul lret clc sbb mull into dec gs popa lods mov jns sbb push lcall inc insb popa (bad) leave negl nop je gs xchg add mov pushf dec or inc imul fs out lods push outsl sbbl sbb adc in roll sub push sbb insb jns jns mov inc xchg (bad) pop jmp pop ss push mov je or jb or ss std mulb fs adc dec sub and pusha test or jae xlat add push dec decl and gs add imul jns xchg wbinvd aaa out sbb or dec gs sbb jae je cltd sbb cmpsl outsb lds je mov (bad) or insl mov adc or push fsubs and xor rcr out adc add xlat shrb sub shrb leave inc mov or mov inc inc and xor int3 push repnz ds jmp mov mov dec push pop mov lods outsb mov scas ds xchg fbld or and push bnd and fimull enter pop pop js adc idivb repz scas rcl sub ficom in and inc sbb nop sub mov adc mov pop in arpl mov push into dec imul dec and or adc add push pop push mov or subl mov cwtl rdpmc xchg add push mov push mov mov fisttpl arpl push adc xchg ds adc inc adc es pop inc mov rclb cld dec mov mov dec mov push cmp add push add adc aas adc scas pop and loopne or push in insl pop mov scas ds inc dec dec push cmp mov push shr scas xchg xorl ficoml lock push or add mov (bad) mov push add lods mov test ret or or fbld fidivrl xor sub int3 adc aad popf xlat jbe push sub outsl sub fnsave inc adc inc push in pop (bad) shl rclb je sarb arpl add inc mov adc adc jecxz out sbb pop xor lock dec push adc dec pushl push leave jae fs jo lds xor pushf jae push rclb sahf cmpsb xor and sti into pushf mov push subl add addl daa js inc xlat cmp stos int3 jle mov push inc dec mov add dec pop sub iret jno pop push jbe ss out in xor aam push enter inc dec imul fs xchg push call adc xchg test sbb sbb inc mov and dec ds test inc jmp push or (bad) inc rcrb bound xchg aas je pop fs adc xchg pop push sbb inc push push js adcb xchg int hlt push push push and pusha push aam outsl xchg push clc jbe push pop mov push xchg xor push sbb push pop jnp mov push jl int3 jle mov scas xor pushf push add adc and cmp por add xlat jl addb and jo loop dec (bad) mov sub push pop push cs idivb or pop sbb aaa cmp add xchg or cwtl sbb push pop push jl sub cmp test push or xchg pop lods arpl xor push leave sub mov out negb fs sub sahf mov xor js pushl sbb (bad) add loopne sbb dec sbb js out nop cmpsl divl pop inc movsb pop xlat repz divl and lods pop daa mov in jnp scas xchg pusha (bad) out add cmp (bad) dec inc mov int jb pop in push sbb maxps fisttpl andps and in or enter or adc enter sbb sbbb and rcl mov add xchg inc xchg in in stos and repz pushf adc repz repz or iret jae push orl cs (bad) pop mov ficom cmp add push pop shlb jl mov movsb (bad) out sahf mov movsl inc icebp dec pop sbbb mov shll aas or pop cmp push das xchg and xchg adc push fs bound push scas jle repz scas (bad) loopne bnd or inc push mov cmp pushf push rolb lahf (bad) mov in shrb push loopne mov inc (bad) ja push and jo sub gs dec and ret push ds pop and sti mov push data16 xchg inc jns push ljmp decl call rcll stos mov xchg sbb xchg movsb rorl out fsub lea or inc aam mov insb int3 movsl or push mov in inc add pop sbb inc (bad) int dec (bad) inc push in ljmp sar sub mov and push inc push inc and outsl sbb out bound pushf inc inc xchg inc mov das das clc cwtl rcrb fdivr fidivr jle call xchg or mov adc jmp cmp (bad) sti lcall idiv idiv cmc push push dec jnp (bad) repnz push incl cmp lods mov (bad) (bad) mov push mov push sbbb lds push or gs shlb mov jl nop xor inc (bad) jge push (bad) flds add cmp or scas jle (bad) pop add lock imul lcall adc mov sub inc pop xlat xchg pop push arpl je cmp jo fidivr mov xchg pop and mov mov mov ds push and into repz sub inc and mov push aaa sub sbb and imul sub dec dec orl or in push inc mov mov add dec inc loopne data16 push push insl dec push push cmp push loop fldt gs xchg (bad) dec orl sub cmp jne add je test cltd mov hlt and xor negb loopne add jb jne (bad) dec es pavgb sub or or and scas jg (bad) punpcklbw xor push mov dec (bad) xor sarb xlat bound je jb push ss dec je decb inc and jmp adc lds sub rorb je add push mov add or movsb divb push sub sub fcmovnu push xchg sbb and jmp pop push popa jae outsb jmp mov pop mov pop fild mov movsl inc nop cmp popf movsb add movsl sub fs pop sbbl inc add inc mov xorl inc jmp nop sbb loope dec lcall mov dec or mov add addr16 mov jge xchg inc rorb bound call push jnp scas imul and pop sbb pop push fimul pop mov xchg les cwtl jne (bad) push inc or (bad) (bad) (bad) fsubs jne inc or push xchg jb and and sub and cmp hlt xchg add jo add in mov push sub xchg lock inc mov sbb pop cmp dec repnz inc sbb add inc pop adc ljmp add sub nop fistpll arpl inc js add fadd das or outsl inc cmp push xchg (bad) and clc jecxz adc push repnz sub mov fstp pusha add addl lds imul fsubrs dec imul inc and je (bad) fsubrp jo adc imul xchg sbb icebp cmp pop icebp sbb adc mov es add push (bad) or pop dec lcall mov das fisub pusha fcmovbe cmp sub loope adc lds push lea dec dec mov jmp or jl inc push cli cmpsl push inc dec jne (bad) mov adc xchg mov inc js repnz push (bad) mov push rolb nop or xchg jbe sahf jmp adc dec outsb imul popf inc add xchg xor mov aas sub cmpsl dec pop add pop outsl dec (bad) mov and inc insl jb sub fldl xchg fucomip adc rorb xor loopne jl xor push inc notl mov mov jns xor cmp jl outsl mov inc push call leave arpl je or cmpb mov imul icebp cmp fidivl ficoml call fistpll jecxz (bad) (bad) dec call pusha shrb pop int3 movd mul mov adc push add sbbl int sbb out test adc xor es into (bad) hlt jnp sbb in int rclb lock (bad) mov mov pop mov xor push push jp mov ja xchg push lret mov mov mov sbb xchg pushf or mov lahf cli ss pop inc add pop das inc inc popa or jae (bad) or and xor xor pop leave enter pop mov ja sbb rolb xchg push rolb jb andb jmp jno subl jae cmp mov outsb pop cwtl in test mov mov mov and push aas loope (bad) sbb imul xchg das push sub or fwait pop add das sub and cmpsl or xor mov xor addl add pop sti js movsb xlat xchg xor jp add ja roll jg dec loope sbb mov push xor jno jo test popf cld out dec sbb xchg add adcb enter dec push repnz xor sbb jmp push je mov mov xor shll xor fildll fcom cltd mov cmp idivb das ss and fisubl into mov imul enter mov cmpsb in mov adc test test cmp ds xor xchg pop cmp push jg cmp jo mov addr16 add xor inc or or or push ljmp jecxz out mov xor adc hlt pop xchg fdivl adc loopne leave (bad) xor jp inc pop popa and cmp add or cmpsb mov cmp fstpl imul js sub xlat mov test add lea aam jecxz add xchg cld mov jmp ret rolb and loope in test push sub inc xchg call add sbb sbb inc movl out add jl pop nop lcall rcr mov sub pusha mov mov ja xor sub les cmp lahf pop mov or or call fildl jecxz add cmp dec dec adc xor and cli xchg adc dec pusha jl (bad) sahf push mov mov sub das jnp pop xchg dec push xor cwtl sbb popf push je pushf xor pop sbb mov (bad) mov xchg aam sub add mov nop daa dec and test fimul add outsb rorb jl aas shlb xlat arpl hlt mov jl insb mov out roll push xor dec icebp pop loope pop and mov push movsl cs or cmpl dec outsb or mov mov ds cld add aaa xor cli (bad) cld aam xor cmp je test adc mov xchg cmp into pop sub push hlt cmc cld pop add or in lock les dec addr16 pop jns lods mov sti pop rclb and in mov adc mov (bad) xchg and nop loopne inc push std sbb adc mov push add mov ror into das xor aas add sbb push (bad) dec idivl add cs sbb mov pop (bad) cmp sub jae loop inc adc ljmp int3 or leave mov fs fldl xchg or and testb adc sub das xchg inc lods inc mov inc sub std sub decl and or push idivl shl loop adc or notl cmc mov icebp mov or push inc test out rol push mov jl adc aaa addr16 jns inc outsb xchg and repnz dec cmp mov into test enter cmp xchg aam or popa jo dec int sbb fmuls or and cmp adc push fcom test jmp lock aas add mov aad pop sub add dec or add adc jne mov jne leave rcll std or xchg pop jle add jno sbb inc or pop jg add push hlt jecxz ljmp mov cmpsl test test mov cmp divb call mov add rolb mov add rcll rcll scas pop cmpl (bad) shl das push add and push fsubs in jns ss sbb lock or pop (bad) inc dec mov add test (bad) adc sub jg dec and daa xor dec dec inc add test cmp mov popl cs inc mov shlb dec pop clc pop (bad) call roll adc inc push emms or inc pusha icebp push sub push inc (bad) jmp pop add and adc lds cmp or cli inc jne sub jne lds adc or inc fist dec sbb inc (bad) loopne xchg movsl pop das aaa or and add fadd lds pop adc fild pop movsb add shr inc pusha or xchg mov mov rcr movsl sub outsb mov fisttp add xor mov nop ret cmp dec int3 ljmp add dec sbb call out je adc ss rcrl sbb cmp mov push nop push mov mov mov push mov cmp adc fsubs or and (bad) pop push cmp jae dec or je stos adc jp in ret btr push add mov jbe jp and push inc adc jmp lea dec jno rorb inc dec (bad) int3 pop add push fsubrp in mov xor or shrb jg pop ja and bt jb ja sbb ret pushl jmp inc cmp jne inc decl jne les and dec and pop dec push fadds jl xchg xor ret imul aaa in push aas ds add lock ds inc mov test mov add mov ljmp inc inc insl in aas add test out imul les and inc cmp sbb mov mov or xor or push (bad) adc or cmp pushl js inc xor jne inc adc xchg aaa pop loopne daa sub repnz adc push and sbb pop sbb pop (bad) jg mov jp leave add xchg xchg add inc xor or mov cmp or aam or fdivrl cmpsb fbstp jne cmp sbb mov repnz or imull pop or mov lret stc pop jns push sub and out pop shrl add in je jbe scas popa adc scas xchg sbb mov fcomps loope (bad) dec and sbb inc xchg pop enter inc add in xchg out xor sub clc icebp lock xor jb adc sub call sub sbb fiadd enter cmp in mov pushf mov xchg or and jno dec mov mov dec mov cmpb inc mov mov dec jae aaa push mov adc pop push push pop pop lcall inc and sub mov mov or inc and inc ja dec or sub ja divl daa daa (bad) dec clc rcll repz adc jecxz dec cltd push mov sub sub inc les push jecxz push aad push adc pop fidivr outsl sub mov les push mov (bad) jae push dec (bad) mov loopne cmp (bad) sub (bad) xor xor or fdivrs enter push pop in xchg ds push in sbb sbb inc rcll popa (bad) mov out xor ret xor sub mov jns out xor inc and les xor iret lds push inc lret inc cmpsl mov lock mov inc xchg xor or shlb hlt adc mov sbb fstpt (bad) sbb clc test inc and xchg inc xchg lock gs fistl xchg mov xchg mov push out test adc sub push add dec (bad) repnz mov sbb mov fstpt inc dec mov pop dec xor lea sbb xchg jp mov adc (bad) push push inc lret dec insl test push mov fucomp cmp fwait pop call mov call popf rol and cmp xchg or out cmc adc in cs loopne add or (bad) xchg inc push inc insl mov push mov mov cmp pop push cs aam ss mov push test sbb jne inc mov pop and lret hlt mov adc push cmpsb add clc lret jne inc hlt inc clc sub rolb xor or cmp fcoml sbb dec push push cld pop and ja sbb cmp and dec mov addr16 and mov inc mov insb or das call or cmp jo into and xchg fwait and sbb sete or movsb xchg es jae movsb clc les fildll lods dec in sbb dec and push pop cmp push out or pop mov mov push or shr loope pop xor push lret sbb cmpsb pop das or mov or test dec inc jb dec pop pop in pusha in clc clc sbb scas push and incl sub lea push push add loopne jg pop sub pop and dec jo cli pop enter (bad) pusha jno pop xor cmpb enter bound scas add fs movsb in repnz dec cmp push inc lret aaa popa fild jmp loope adc dec sahf sbb adc les les push push nop xlat mov movsl adc and js in and dec push inc faddp add mov scas daa dec testl xor ja js dec inc mov adc adc add mov dec test jb push fmuls pop (bad) (bad) mov outsb xchg adc xchg imul jecxz (bad) aas daa sbb pop pop dec sbb cmp bound cwtl push add (bad) std test push mov decl fs jmp push pop mov fdiv mov inc scas mov inc or je or lret xchg cmc mov sub or and movsl fldcw jne or add and push dec and mov sub daa cwtl movsb shll enter sub inc inc add and movsb adc notl (bad) hlt pushl cld loop mov lods and or lods xchg aaa iret sbb xor das dec push mov mov sbb xor push push mov in call pop push push je add pop push jl out aas testb cmp pop mov cmp jne testb orb or or pop and movaps ficoml test inc dec insb dec lahf push adc or std iret cmp xchg sub mov sub dec adc loope sahf into cs xchg mov add push dec push es push dec cmc sbb ss cmp xor mov mov ret xlat sbb fisubl data16 fcmovnu add (bad) xchg (bad) enter aaa sub sub adc int faddl xchg test and adc pusha int push add sub xchg jmp pusha mull pop lea cmp stos mov sbb adc or or mov pop pop ficoml jge dec leave iret push sub jo insb movsb mov push or dec inc dec rorb mov mov (bad) test pop pop pop pop add add inc mov mov dec jnp and adc cmp je jg mov xchg jnp (bad) jmp mov mov movl add sbb cmp xlat dec je add repz rorl or push loopne dec (bad) out push pop jp ss jmp mov xor aam add jle (bad) push sbb repnz in repnz adc add (bad) mov xor (bad) or es fidiv scas cmp mov test sbb push mov adc add gs pop and add test mov sbb sub popf iret cmpsl add ljmp xor orb nop jmp shll and (bad) xor (bad) dec push fisubr fnstcw in loope (bad) jl repz push aad adc dec nop pop xor subl andl jne add shr mov or insb inc sub lea push dec (bad) (bad) inc daa cmpl pushl cmp jne mov or or sbb dec inc jge sbb jle dec pushf pop push int pop inc mov adc jl mov add add lcall adc jbe nop add and rorl inc push pop or shll mov lret or enter js js sbb mov inc push jge or jle xor nop and dec out inc addb adc jo mov push mov inc mov pusha invd pushf jle pop (bad) xor arpl decb pop add rclb pop (bad) xlat and repz aaa insl ret jno dec sub fnsetpm(287 add mov fidivl cmpsl loope insb (bad) out push clc sub sub cmpl xorb add add jbe and pop push sahf movsl pop outsl mov mov add pop dec mov add lock arpl pop testl push mov dec jecxz xchg rcrb outsl lret cli add pusha testl cmp mov jg add pop pop mov bound xor push out enter cmpsl clc jecxz and lret lods je add inc push or sub mov adc pop leave sub rolb adc pop in imul adc xorl xchg ss jg pop pop or repz pop xor int inc or sbb ds push sbb packsswb icebp or push jl add add or out pusha mov negl add fbld mov pop cmp xchg inc popa sahf add rcrb xor add js das lds mov stc dec sbb into cld mov push dec xchg pop push mov cmp mov mov in shlb mov xchg mov add insb and push xor rorb push shrb in or test xlat pop clc adc fbld sub sti mov dec dec jno lea (bad) and clc pushl cmp jns sbb jo add and nop and xchg pop in inc in push push sub (bad) jg jl push dec test (bad) je mov xor cmp loope,pn imul or mov push faddl in and push cli cmc movsb xchg xor mov (bad) pop and test dec faddl mov jno cmp inc dec add in xor mov add addb enter nop testb insb jge enter es (bad) or xor and je adc movsb fsubrl inc jb into or add (bad) jo cmova or or aam inc sub mov push jo mov jae sub ficom cmp and test rclb inc into aas jae xchg jp jne iret data16 cld or dec or adc in out add sbb mov adc push and pop dec dec scas and dec out or lock clc xlat ss movsl inc sub cmp test out pop ljmp or (bad) pop popa adc and add sar cmp jge data16 sbb popa mov add or adc add test test inc sub xchg icebp ficom jne push fdivrs inc push adc adc lods cmp daa adc or imul add push adc rorb mov shll adc or cmp xor sbb (bad) in cmp jle or fldl sub test adc add popf xor mov and mov jnp jns add rcpps cwtl (bad) pop pop or xchg div xor (bad) jecxz and mov cmpsl cwtl pop ja or icebp inc (bad) popa mov clc fidivl jno adc cli jae inc stos add and (bad) and pop mov adc or call cmp pop (bad) jp jge dec sbb or or xor lods and adc dec xor inc gs mov negl test add int aam push orps (bad) enter popa push enter in test fdivrl or jb xchg arpl cwtl pop dec xorl push xor xchg and pop into pop add out xor adc cmp and ret pop add add mov pop adc push test pop add ss ret mov (bad) pop or stos mov movl xchg pop mov outsb sahf pushf or adc (bad) mov js ret hlt (bad) out clc pop inc xor mov and mov movsb add adc pop lahf (bad) jg or outsl jo imul mov push imul test sbb test xor mov xchg ret nop mov add adc pop mov lea test adc and daa pusha add ss ja fisubr push loopne fs sbb call sub mov mov jb push inc sbb imul insb mov push lret clc inc fiadd (bad) (bad) int3 ret cmpsb fbld dec and cs add add sub rolb mov (bad) and or add xor daa std sbb add dec leave fwait add dec pop gs sbb mov jmp mov sbb add addr16 into adc inc mov push cmp cmp dec pop movsb sbb add stc jp sub sub popa gs sbb adc les push ljmp shr push and fcmovu js jl inc sub outsw adc mov cltd mov add mov pop fwait adcb (bad) xchg outsb mov clc xor (bad) call add mov adc adc les xchg test ret sbb shrl jbe loope pop (bad) jecxz xor sub pop ss sub inc push push rclb cmp sub call pop fwait cli sbb popa jg jmp aaa mov inc cmp jl or and in inc cwtl mov loop sbb ficoml fs andl dec mov addr16 jae lea jge fs pushf movsl adc add aaa mov push inc mov push or sub (bad) orb cmp mov fstl pop cmp add xchg mov xchg inc push scas dec je inc pop jb inc (bad) sub sub add xlat dec (bad) or into testl xor mov aaa pop pop shlb pop mov or mov repnz push (bad) add pop add mov xchg outsl orl pushw jo leave ret test add loope lea out js cmp inc mov adc jns ret xlat les jle cmc push jo pop sub jo ficom add adc pop aad call jo jnp mov icebp cmpsl mov push jb dec mov pusha adcb jnp adc ds test lods inc mov stos cmpl js adc xchg sbb xchg push add xchg pop adc pop cmp push je hlt aaa stos addl test js cmp push (bad) mov pop or insl aas loop test arpl pop jmp push or push inc lret rcrb jp call sarb pop addr16 add fwait cmp cmp lock jecxz shr mov inc addr16 cltd push (bad) cmpsb sbb orb ret iret add sbb inc fldcw inc cs jne push mov jne add out push enter sarl push out inc xchg adc inc xchg shrl push mov sub (bad) call jo xchg sbb fdivrs or mov test sbb cmpl inc inc in inc loope xor movsl (bad) xor pop xor leave xor test xlat movsl inc jmp outsl cmp dec push mov insb cmp in outsl pop aam movsb pop mov and adc push push rorb add sub push xlat es js out cmp push ja nop ret add sub sbb call or lods test inc xor mov add push mov add int fbld cmp xor loopne nop pusha cmp push mov mov je ds and popa mov sbbb imul mov and movsl push sbb or bound sub ret jmp lcall add mov push mov cwtl dec pop stos pop (bad) jbe ja mov test fnstenv push sub push or dec mov mov cld std add clc or jne pop mov or adc loopne rcrb xor fistpll aaa adc outsb push cmp dec jle adc mov fildl outsl and scas (bad) mov int outsl sarl test popf jne or xor test arpl jae imul and jmp imul dec fwait cmp and imul mov or mov xchg icebp daa push push or repnz and and or sbb das mov dec pop shll je mov inc push adc mov (bad) pop cmp push add les out cmpsl xchg clc dec ljmp es pop push pop add jge decl dec add cwtl mov or pushf fs xor divl fucomi shlb sub int3 ret pop sbb mov jne cltd lock inc sub cmpsb add cmp cmp clc pop dec pop jmp push or aas pushf pusha lock test in imul jp sbb jae sub movsl sbb push adc sub scas add adc cmp inc ret and mov sub lock int fsincos loope xchg jo imul push xor push into pusha or in out pop iret push pop mov dec sbb adc addl imul or or and push mov xor pop das movsl mov push and in iret cmp jl popa adc or pop cld adc call xchg pop dec add pop in xor (bad) lret or je in pusha repz or jne in mov pop lahf jae jns test sub adc leave add fdivs mov adc mov sbb sub inc sub pusha sub xchg daa fsubs push lock jmp adc inc testl push mov jne in sub fcoml sbb fcomps mov lods dec (bad) (bad) jge push mulb or arpl pop jmp popa jo ss add aad cmp mov shll adc pop push mov in in out mov pop popf jne bound cmp add iret dec add jbe sbb inc sbb fwait add jbe jae inc mov adc pusha rcr lcall fisttp dec loope cmp fnsave in inc adc xor (bad) mov cltd pop aam aaa cmpsb adc test xor jp jne and or pop (bad) hlt nop aaa or cmp rcr sub fdivs (bad) out and dec lock cld adc fisttpll rorb add pop push push dec xlat test dec lea xchg xor add addr16 data16 pop rclb xor insl and xlat adc jmp cmp adc mov inc test iret sub dec lcall sub jns push ss cld imul js and jge popa sub and arpl pop sbb mov clc adc sub xchg in push add mov dec sbb loope mov cmp outsb jp mov or fildll push or adc js nop xchg gs hlt (bad) add frndint cmp add sbb add pop jb lock and and push mov fist call sub cmp adc mov push add or mov out or sahf mov add or or and mov mov or sbb lods sub push out and or incb ret add inc loopne sbb pop shrb inc cmp xor iret and das sbb dec cli mov iret adc pop aad loopne inc aas inc ret lahf shlb jnp jle test mov and ss push or and aas xorl mov int push adc mov pushf sbb cmp ret mov insl sqrtps sti out ja insl mov fisttpl loopne lahf mov mov and cmp sbb push mov mov popf mov fcompl jp popf fcoms jnp dec lods (bad) sbb dec fadd leave adc dec add adc and jl and shr in arpl (bad) lea sbb mov add in mov cmc xor dec dec inc push fsubrl pushf cmp stos pop jnp dec cmpsl xor aad test cmp mov cmp mov into or dec jge push push add inc das lea xor jl jmp mov push add das or and sti orl cmpb jne xor cli nop xlat sub mov cmp sarl out hlt adc call out push xchg std (bad) sahf pop pop cmpb mov jo inc jp dec sub clc or inc jmp sbb rcrl push adc lock outsb cld jmp mov cld pusha rcl lock mov add popa adc lds xor push cmovs dec push dec xor adc mov out js and jnp inc enter push jge inc test std fadds add push or popf (bad) call rorb lods jb push and stos daa mov add sbb test lock in pop mov repnz fstl mov fldenv lahf push pop jg mov arpl sbb orl fdivrs mov add nop repnz or and out xchg adcb (bad) repz sbb sbb jge pop pop xor dec clc out and jno dec push stc jle adc adc call push jo mov sbb or nop add xor inc inc daa add sub pusha mov clc jnp je cmp inc call std orl mov test aam jns (bad) push sbb mov out jnp rolb inc daa cwtl push movsb fsubs jmp mull push ret jns cmc sbb push jno xor enterw rolb loope lods lcall sbb cmp mov dec mov subb in mov cmp fsubl movsb cmp fmull arpl in cli sub add pushf and cmp push adc xchg push xor shrb pop add push sbb cmp and mov xchg loopne pop xchg mulb cld test gs adc lcall addr16 xchg mov aaa inc jnp push fnstsw pop insl inc cmp fistl aas loope pop xor jmp adc and fcoml scas dec enter sbb adc push out jmp jmp inc push jge sub sub jne jno loop (bad) imul mov push and ds mov xchg inc xor jae and push (bad) mov add fcomp scas arpl imul movsl lock dec and sbb in xchg push test out lret rorb dec cmp jp sub js add push fstl lods add cmp aad jmp mov fdivl jne sbb daa jmp sub lar rorb mov add les loopne sbbl mov pop push and je jge jbe movl je std pop je cmp xor adc mov sbb cmpsl jmp (bad) dec xlat jecxz adc sub enter pop lds add xor das xchg ret aam test testb in cmp push mov or mov fwait aam lock arpl push fistp dec je sbb in jecxz fsubs xchg dec jmp adc jb testl mov pop sub dec or push mov das nop hlt push cs mov inc mov movsb addr16 (bad) push inc or lea dec adc add or clc or mov mov jg loopne stos ret jmp lds add dec push mov and aad cmp and ss pop ret mov fwait sbb rolb (bad) or movsl negb notl add jo sub mov adc jmp aas and push je push adc mov dec push test sbb jb mov xchg sub in jg inc jb jae mov push pop or movsl int3 cmpsl sbb pop jmp jae rcrl jmp push xor or xor add dec or mov cmp xchg mov (bad) ret cmp adc mov out call mov call ja add ja mov xchg lock dec add outsl sub jg xchg push popl out adc add je lahf fisttpl and scas xor push scas cmp leave push bnd das pusha repz jo or mov test out mov push sub xchg mov dec lock cld push push and xor fsts insb cmp repz jp adcl repz push jecxz pop lret nop dec jp pop adc jb inc xor add xchg mov pop mov and xchg jmp das jle out pop push adc push (bad) mov rcrb pusha adc stos dec leave and mov loop in das cmp xchg cld xor adc ja hlt mov inc imulb test dec dec sub call and pop ds jo lock mov out jmp rclb test inc lea mov inc sub pop lock lods xchg out sbb mov aad dec inc xchg jo sbb or aad es inc inc dec xchg sbbb out jnp inc push call cmp jge insl or gs mov xor jg mov loopne push (bad) push (bad) iret rclb aaa add mov shlb push or inc ret pop add inc call push xor mov add add int cltd lea mov sbb push inc sbb jns sbb (bad) enter test pusha adc aam xor sarl mov loopne enter leave pop jno sar das je jle pop and cmp pop push sub mov or adc ss jg js (bad) dec cmpsl push in dec (bad) mov adc or inc sub pop and test and cli inc bound out mov add sahf enter mov aam add and sbb call push lods enter clc sbb pop cwtl dec lock fldt int3 lret loopne dec movsb jae mov popa daa loope jg jl jo inc cmp pop push clc inc and mov orb clc stc dec or and call or insb or ljmp aas mov sub aas sbb xor add mov sbb (bad) dec sti fidivr and xor cmp mov pop cld pop out jns (bad) addr16 movsb push iret pop dec inc adc cs repz cmpl rorb mov jmp push sbb rclb es xchg test pusha sbb mov lods and inc clc xor jmp std (bad) sbb cld jmp clc in cmpsl nop daa pop sub push dec test mov jb pop lea cld shlb shl cmp or pop loop cmp mov loopne mov in je xor dec or dec adc ret sub lods inc or inc dec int3 (bad) fsts add dec mov push pushw xchg mov loope push mov data16 dec jmp fs ret mov (bad) adc das jle jl xor jg sbb adc add insb or ds mov jl adc insl dec xor sbb mov jbe dec cmpsb mov imul (bad) cmpsl nop rclb das rcrb lahf jge mov xchg call dec fisttp or add add mov (bad) aaa or pop insb and (bad) mov daa dec xchg or xchg xchg ret icebp out js sbb (bad) push lock fcompl rcrl push mov push negl xor and cmp les fistl dec (bad) mov pop test imul pop out dec rorb cmp je sbb xchg sub test and xchg shr add movsl daa xor mov outsb xchg push push push cmp dec lea (bad) imul xor mov cmpsb mov movsl daa loopne pop dec and popa xchg sub add sbb ljmp or cmp in mov mov mov movsl loopne and nop rolb imul dec jno push xchg lahf jne mov and jle mov mov and shrb cmp xchg xor les jne inc mov shr sub mov sub or mov inc sbb xor mov cmp adc (bad) xlat iret add xchg movsb popa mov loope mov sbbl adc ret fdivl pop mov or fcompl jg cmp je sub dec pop xchg and or dec insl pop or sbb inc dec lock sti xchg dec sbb xchg cmc rolb mov jp iret rcrb daa sbb mov sbb fnsetpm(287 scas push sbb ja add adc pop add mov rcrb or pop adc dec push lds adc test sbb adc lahf jnp push testb (bad) and mov pop mov scas hlt dec data16 adc sbb push orb lock push (bad) jbe sti clc aam add mov int data16 jo sarb mov mov mov mov adc sub aam shrb movsb cltd cmp orl inc push cltd clc push adc mov or inc xchg adc sbb pop test pop stos adc cmp roll test and mov cmpsl (bad) lcall xlat and pusha fcoml dec and cmp jl test jge incl cwtl and imul push push fisttp ret jo push setne mov mov push (bad) inc mov out incb adc icebp dec and lahf insb add push outsl jo ja out and pop fisttp or sub arpl imul mov inc notl arpl mov push decb data16 push inc xchg lret scas bts pushl jbe sti dec jne cmp pop call daa call movsl pop xchg test call dec mov or push push lret or or push lea lcall data16 add inc pop dec fist sbb jg or dec mov sbb (bad) mov jo and sbb pop push inc dec jne inc ss rcrb mov or fnop outsl clc stc insb add dec push pop and sar mov ljmp (bad) stos sahf xchg jnp or dec mov pusha fisttp scas das (bad) adc add iret add pusha xor cmpsl xchg outsl add fs mov subb leave aas adc xor push fs push or test mov push push dec cmp (bad) xlat sub gs pop jp dec ret lock xlat clc add pop add aam dec in data16 andb jmp roll sbb jl inc push loopne ja and lea (bad) ljmp or add mov mov divl mov nop sub add cmp das dec and fcmovbe cmpxchg mov push or pushf jg subb xchg cmp and (bad) daa icebp and and fcmovnbe (bad) mull jg mov imul jne es jne scas mov and adc adcb inc and enter jle inc and lcall mov xchg and aas or dec nop sub or or test push pop out inc aam nop or nop adc mov ljmp inc nop dec push mov out xchg cmp lock insb sub (bad) repz sub cmpsl (bad) cld mov pop pop inc sub or or add (bad) in frstor clc pop pop outsl pop and add inc sub xlat insl jmp or cli iret sub ja pop inc lret out inc push pop movl jle mov cwtl sub or ja stos inc mov sub push sub arpl mov repnz pop dec sbb aaa or dec cmp cltd or not or inc je dec push out or pop xchg jge sub adc out add jmp popa sub xor push loop adc int3 or push push sbb dec add es fmulp call call scas in pop adc dec push xor add mov mov push shlb add sub and in adc cs inc jle inc addl adc and cmpsb inc mov xchg xchg btc add xorb dec mov lea xor pop or imul test in test sbb dec lock add iret inc sub out xor push xor jle inc inc or xor or es xor adc fs inc add mov xchg pop scas and xchg test xchg in loope mov push adc dec xor add lret int3 lds mov inc cli push pop iret movl popf movsb movl mov mov in ret movsb orl adc and xchg sbb outsb inc lret add clc jne sub xchg or mov dec cmp pop mov sbb jle aaa ja jle mov cld push ds jb jo or fwait or sti pop je pop scas adcl adc and and jl push loopne pop or sub push add sub pop ljmp push and pop push scas out sub adcl (bad) mov sbb push (bad) mov popf (bad) cld ja dec int cs insb cld and push sbb add test call cmp (bad) adc in rcll lds lds ret movsb lea pop pop ret xlat jmp mov ficompl mov in push aam daa aam sub sub cmc xchg je movl mov xor or sbb or xor fs mov (bad) arpl fildl mov xchg dec (bad) clc das leave pop pop push push add add call movsl and pop mov fs xor add stos add adc inc or add adc cmp cmp push test insb push xor lock inc arpl clc mov and in pmuludq push mov ffreep xor pop or add sti ja add pop or lea jge mov add cmp fcmovnbe out and mov push cmp or mov push or in xor xchg jge adc xor inc ret push pop jp cmc sbb addr16 add jle mov and gs cmp and push jl mov jbe pop jle mov pop inc pop inc insb push mov push xor push cmpsl pop cmpsb pop add mov or mov push cmp test add adc xchg push outsb imul push cld push xchg xchg mov jge iret cld push lret stc jo sbb push inc cmp addl enter test jge bound (bad) movb arpl fildll orl xor ja mov in push jmp mov call and push test enter pop loope sub add cltd push test adc mov mov pusha cmp push ja add sub pusha mov ret mov aad xchg ret sub daa daa daa popf jnp daa daa daa (bad) jo jb daa daa daa jae jne daa daa daa daa ja jns daa daa daa daa jnp jge daa daa daa daa jg popa bound daa daa daa arpl daa daa daa daa addr16 daa daa imul daa daa daa outsl push push push daa daa daa daa push push push push daa daa daa daa push pop pop pop daa daa daa daa pop pop pop pop daa daa daa daa pop inc inc inc daa daa daa daa inc inc inc inc daa daa daa daa inc dec dec dec daa daa daa daa dec dec dec dec daa daa daa daa dec xor xor daa daa daa xor cmp jns mov subb xor add xchg insb outsl adc or popf roll push (bad) add ret dec dec add push mov adc dec lods mov mov push xor dec add lods test inc sbb std xchg out push xor insb add dec cmp data16 dec imul fwait jae mov fild lret or outsb nop rcrb or orl je jbe and (bad) push je insb clc cmp adc jae lret push insb enterw je arpl adc fsub or adc gs arpl adc imul jae mov insb or shrb bound push outsb int in mov pop jo outsl sbb in mov jae add sbb or add add inc jl or imul dec aaa add jmp sbb sbb inc insb mov push push push je into insl dec outsl jo mov push push inc jns sbb mov aam addr16 and mov imul adc xor sbb xor aas add loopne xor loope or adc scas add jb fimull fs fiaddl add dec lods push jno jl jp or push jne fisubl inc inc xor mov inc outsl jb jae and or sub mov push pop cmp inc push sbb (bad) mov pop mov std (bad) cmp jle dec and aad mov mov cmpb fdivs pop subb aas addr16 ret sub and inc arpl mov cmpsl inc xchg insl mulb add pop leave and push es loopne mov xchg adc (bad) loopne shrb jl mov lret je add mov sbb mov and enter (bad) lock or (bad) int3 lds push add adcl ss aas out cmp dec fisubrl mov and xchg push add int3 cmp jmp push ss push add imul sub daa in addb lds mov mov xchg pop xchg push or push ficom add mov xchg in rol add sbbl lret lret bound js add xor cmc xchg add inc (bad) xor cmp adc aas mov les add push inc je push shll pop xchg push add xor insl fstpl push push cmp js in (bad) add add mov or xlat movsl lods into les add jp xchg pop pop pop daa ds test cwtl int3 aad test scas inc popa sbb das mov pop sbb call sbb mov imul daa and pop aas (bad) xlat push int3 push or push jbe dec or add pop xor adc in imul les in scas mov and sbb push movsb inc sbb fdivrl iret imul stos sub mov mov iret lret mov es into rorb dec or mov inc cs les sahf imul xor sub fs fcmovnb inc push dec jmp ljmp jmp in push in jae addr16 fs bswap int3 pop fadd (bad) fisub pop js sarb pop sbb enter clc xchg xchg lods mov add inc push mov enter hlt sbb or push xchg gs insl popa addr16 or mov outsl mov push pusha mov push loopne (bad) icebp loop mov mov jo insb js push sub out pop fdivrl cmp cmp mov jg cmp inc incl add test fnclex mov push call xor push sub mull dec aam sub push dec cld mov cmp adc push mov xchg call push pop sbb add pop xor (bad) nop adc (bad) hlt xlat out rolb push dec arpl mov mov and rcrl inc pop push xlat inc aas out or cld sub inc xlat jns inc ja push xlat rcrb enter jo faddl pop inc xchg sti mov cs sbb push xor or dec pop sbb cmp adc pop nop pushf mov (bad) ds push xor add mov and dec popa outsb nop add clc decl rorl rol xor dec jne push or loopne mov adcl loopne cwtl inc popa dec pop aaa test nopl out (bad) aaa dec jne mov lea jl shrb and add add adc dec ret je adc test popl xchg orb jp lds imul inc and sub add push adc add adc loopne xchg push inc cmp push dec or inc pop mov sbb pop xor or fmuls in mov jecxz imul xor xor mov lds mov mov jo loope dec sete popa (bad) sub cmp jo hlt dec cmp mov imull fisttp loopne sub shld test jmp push mov push push and cmp cmp pusha pusha and (bad) je (bad) loopne in std xlat cmp fisubl pop xor movsb mov add pop inc sbb inc push dec cmpsb or pop or stos movl (bad) adc cmp repz lock adc or cmpsl and jnp frstor add jns mov or in aas add mov push xlat insl pushf add xchg or lds in (bad) in jg mov ret mov loopne adc fistl (bad) push cmpsl or inc add or push call pop daa mov pop add or jb mov xorb pop sti or pop dec insb sbb push xchg dec decb jbe add jo add push gs insb pop xchg sarl cwtl ss imul ja cmpsb xchg add dec imul lret in rcrl or cld inc incb arpl imul inc js,pt pop pop or or add push imul and insl inc dec data16 add aaa inc dec mov das pfnacc (bad) inc popa fistp jo or push imul das jo icebp loop push addr16 (bad) sti inc das inc je inc push xchg dec notb or adc or add jg mov je or sub push sti adc mov fs lahf sbb jae jge dec inc pop or push sbb mulps push or jg gs mov repz adc mov (bad) pop adc imul aas outsw inc push (bad) and pop outsb jne adc or insb and repnz bswap or pusha sbb aas jne leave jno arpl add clc xor shrl rorb cmp and das test mov or sahf jge andb or push pop cld cmc xor and pop xor lahf or add mov mov loope lods jns pop pop addr16 inc dec push dec pop inc dec inc push push inc push add inc arpl inc inc inc inc push dec push xor inc dec rcrl mov arpl inc inc push sub dec dec inc push dec dec push mov and inc inc push xchg inc dec dec and es pop out inc inc xor xor adc or jbe mov xor xchg inc push inc inc dec notl mov sub dec mov imul push (bad) das sbb mov xor push push push jae adc test mov aas inc inc dec pop adc push push push dec jg push ret push inc scas dec inc dec push mov insl sbb inc pop (bad) mov mov inc add lock jl mov push into push jl push add sbb std data16 enter add dec or sbbb add add push inc or pop mov lea cmpl mov lods popf sbb inc or dec sbb insb lret or jle and inc data16 add add or jle mov dec pushl shlb fmuls mov daa and pop cmp shr mov sbb lcall adcb bound and mov mov and ds inc add loope add pop push loop pop or push mov push dec nop popa xchg arpl popa ret das cs or add xchg stos inc adc xorl jne dec fsts push stc mov push inc in clc pop mov repnz scas das sbb andb das cmp mov loopne jo cli das cwtl add movsl ss scas pusha xchg sub int3 das mov arpl enter or rclb or inc ret mov jg mov jbe cmpsb add mov add push (bad) inc adc or adc cmpsb xor and jbe xor dec out movsl adc xchg dec push pop repnz enter mov testb movl fnstcw xor inc lret enter inc aam add or outsl pop sbb mov adc lea incb ret mov mov cmp mov movaps leave jb jmp jo in xorl add fcoms sub flds jecxz push mov jg or or fisttpl jp cmp push push or adc orl sub dec pop out out andl mov adc loope repz movsl dec or ss mov adc js lock push mov push inc pusha (bad) popa movsb mul pop (bad) adc or pushl aam inc lea (bad) mov lock pop sub (bad) jbe sub (bad) pushf mov mov push push xor mov test fdivrs int mov das fdivp ficoml inc sbb mov mov ja sub ret pop (bad) xchg push cmp and push movb outsb inc sbb cmp xchg pop fisubrl adc sub loopne push mov (bad) pop shlb sbb add fdivr mov mov das lret cmp add mov fwait or inc lret andb add leave test rclb das jns lock je jo iret in push mov add jne fistpll lretw jne int3 mov sbb mov inc adcb mov inc sbb xor das ror pop jmp insl lret faddl xor or and fsubr push cmp and xor das sbb mov lods pusha jb or pop sbb sbb pop jb movsl or movsb loopne loopne pusha pop xorl int3 lret int3 vpmacssww sub test jno int3 lcall movsb mov nop cmp push pop aas popa int sbb add push xor mov mov mov sbb les inc mov fsubrs mov add or mov ja lock adc inc call cltd into fistpll test pop fldenv or data16 insb das movsb add adc fs mov mull adc mov sub jmp je cmp add push adc out ficomp gs repnz int3 mov mov aas mov enter popa inc stos fimul in add xchg je (bad) nop pop enter mov js (bad) hlt mov add or push cmp mov push adc inc inc sub movl js test ret int3 push test mov (bad) (bad) sbb (bad) pushf mov cmc push adc cmp mov pushf mov nop pop jge and lock adc ljmp test sbb and push or push adc mov pop or or mov push push or push push gs xchg add push jl sbb sub inc lea aas in (bad) xor and popa in jo aas mov roll (bad) mov shrl inc popf dec insb test fs and lods sub sbb cld imul dec jae pop sbb adc (bad) inc lahf pop je mov in enter push int3 test and imulb jge push xchg xchg (bad) ret insl push les or bound sar push sbb lea int3 fiaddl inc (bad) mov shrb mov add pop je push xchg dec roll pop push mov ja or iret sti out adcb cmove testb je push std dec iret mov pop add jge cmp pusha leave scas fwait xlat cs arpl push jle jle test ret lods inc add addr16 xor push jne mov arpl xlat pop inc outsl cmpsb mov adc or clc lods sbb add (bad) jbe mov fcmovnb lds xor pop pop test icebp push add cmp mov inc cmp insl sub cmpl xchg push add sub int xchg aas aam popa cmp decl xlat leave dec mov loopne (bad) out mov and sbb adc and sahf aas push mov mov adc cs and pop adc adc cmc push adc inc sub es lea xchg mov jb jge dec lds cmp jge mov ja jae (bad) std or mov and mov cmp je mov dec xchg sbb pushf pop aad mov mov add add sbb inc push add push or es test add test add arpl (bad) mov adc lea push mov clc mov not and mov je fcmovnb mov je inc xor movsb jne sub xor nop (bad) jo fistl push add in xchg callw sbb mov fs mov add push xor inc push mov out fdivrl push adc push in adc sbb pop push sbb lods lea test jnp mov sub add ror add rclb mov outsb je xor sti (bad) in ror ds jno mov negl lods inc add movsb stos in test pushf xor jb or inc add orl inc mov adc mov inc push ret shlb push xorl dec call adc mov cld das lea pop xorl inc add aaa scas rcll ljmp dec popa nop and add int3 es fisubl (bad) fsts imul lods inc in lcall sub loope cmovnp jo jmp add test mov pop mov cmc fwait or pusha loop jo aam pop cld fcompl mov bound push push cmp mov xchg cmpsl pop hlt sub fcomps in sahf ss lock jle das data16 push out pop push jl or mov arpl adc fldt mov ss aaa add notb mov fwait add lea add cmpsb mov pop inc pop pop in loopne dec idiv outsl adc xor not and lahf pop sar pop dec jle out mov mov mov add cmp imul sub add jae out add cmp sub xchg adc stc mov mov xor push push or imul sub lcall packuswb rcrl sbb subb pop inc pop xor cmpsb fdivrl or fstl jge xlat inc xchg lock mov xchg (bad) ficom cmpsl sbb and fsubr fsubrs push sub dec jmp clc js fstpt pop push in dec sub adc add cmp push das push jo mov in (bad) push dec fs push push ret bound pop mov add jns rcll loopne xchg movsb mov call add bsr pop cmpl test add inc push sbb or mov sti xchg lea add mov mov or dec pop sarl mov mov add dec (bad) sbb inc add lea fnstcw cmp adc dec out es push cmp sahf lcall mov pusha lcall add jne insl andb cmp jge jbe (bad) adc adc adc sbb insl mov push sub (bad) cmp sbb add jp test dec js and outsl push push and insb mov enter mov dec mulb jmp add (bad) mov sub shl mov mov jmp xor sldt adc int3 xchg cld push mov (bad) mov sbb in outsl jns push jno lock jl jnp jnp or pushf cmpl int aaa out push ds sub inc daa movsb imul movzwl lea and pop push cmp cs xchg xchg dec jnp push addr16 data16 iret popa inc fild ja (bad) icebp push add aas insb cmp cmp (bad) jo push xchg adc sbb add add (bad) orl push pop cs mov fldl inc rcr frstor mov lods xor loopne pop mov sbb test dec pop cmp int3 mov add pop push push dec clc xchg adc inc or or shll sar ss and adc dec mov pop push adc pushf scas lret mov pop imul fldl iret jae jo dec push xchg mov daa or in into and gs xchg or pop push push imul or ss push push stc sub and cmp cmc sahf test inc push adc dec stos bnd sbb (bad) xchg cmpsl dec les shlb rcll les mov add fmulp enter mov xchg add das test sbbl xor cmp shl dec fsubl shrb pop mov daa insb in addl add (bad) cld mov jb in hlt lock and xchg pop fnstsw mov add imul sub out xor js xor mov test pop pushf stos shrl movl mov xor int3 and add pop insb pop cld push push and mov add and dec add loop push sub add pop mov cwtl sub mov sbb or mov insb ret mull mov pop add or pop or mov sbb in pop cmp mov decl and mov (bad) cmp jg test jle mov int3 cmc cmp jl mov enter (bad) jg test pop clc jle movsb xchg pop test or adc xchg push enter pop push pusha push add dec shrb loopne sbb (bad) push ss mov pop mov pusha and repz push stos pusha pop jno nop out fsubs mov andb sbb scas mov test jbe in leave sbb inc vucomisd insb sub test bound xchg lods mov rclb sbb (bad) jne test sub xchg push fs ret xchg jg or jl push cmp cltd mov dec jo call test mov inc dec fs fnstenv cmp add mull xor adc xchg sbb (bad) js ss repnz add push inc and test pop mov add dec mov push mov sbb mov inc cs jbe nop pop cwtl (bad) mov mov insl mov push mov imul mov add xchg lret and xor xor popa pop je sarb add push push mov (bad) mov ret mov and outsl xor mov stos or and rorb aaa repnz pushf arpl pop pop or xchg arpl ljmp lods roll aaa lods int3 lret prefetcht1 push rcrb and aas ljmp out sub sub lret mov pop push out dec xchg loopne push movl push mov fiaddl cmovs push jle lock clc jb jmp xchg push mov out mov push mov jmp adc mov adc insb mov (bad) push xor inc and movsl (bad) add imul push push sub adc data16 icebp mov into adc push xchg leave jne aas cmc mov (bad) xorb or mov add and add sub adc aaa mov rcrl mov mov cmpsb push cwtl (bad) aad fldl xlat xlat hlt and leave adc add adcl aad jnp push push popf sbb insb sar inc ret scas push addr16 mov push sub adc inc jmp (bad) and jnp lods test add mov (bad) jg fwait pop orl inc mov pop cmp enter push sbb adc (bad) push inc jg add sbb sti loope push mov pop push push in hlt movsl jmp xor inc call cmp imul cmp call outsl sbb dec loopne fdivrl add mov faddl loopne dec adc fcmovb inc push xor add lock pop repnz sub mov outsl pop add dec jb iret or xor mov out in mov mov or lods data16 sbb insb mov lods and jp push outsb jle mov mov js add insl mov test mov lcall test loopne stos dec lcall mul xorb int3 sbbl dec es movsb pop aas test movb data16 and negl jmp cmpsl sbb pop push jns loop pop and push inc call or aam sti adc adc xor nop sti add es mov push adc push sub lock jmp inc lret addr16 dec aad popa xchg cmp lock adc sbb add lcall xor xor sbb and je sub insl jne jl shlb int3 iret add push iret in aas clc push cltd fsubs mov push and pop hlt rorb sbb add xchg lret pop jne cmp cmp push cmp push jo mov inc or add mov outsl (bad) cmp mov ja inc and cmpsl inc xchg inc xor push cmp inc enter sbb mov adc push adc xchg or cmp cmpsl pop rcll ret xchg push pop ret pushl rorb imul out pop xor cmp mov dec and add mov mov and mov (bad) push es or jmp movl adc mov add pushf (bad) shlb mov or cmpsl push cmpsl mov add xor ja pusha int3 xor out xor mov add mov mov sbb movsb pushl dec sub cwtl lea xchg in movsb mov imul mov sub outsb cld inc jb push sub cwtl add mov inc push cmpsl sbb push pushf xchg das add test es push out aaa add dec not pop test iret inc lahf shr lock inc loopne dec and adc (bad) xor and loope push pop pop mov inc sub lret and add inc add dec sahf pop sar pop (bad) or xor int3 adc idivb aaa hlt int3 xchg jo and repnz dec pusha loopne jmp and dec jo (bad) pop int3 push and jecxz andl pop pusha push loope nop andl jp push incl pop adcb (bad) icebp or dec add jne sbb in mov adc pop adc push jecxz adc cld dec rolb outsl dec pushf lea and mov aaa or push mov mov pop lcall ret adc test gs lods popa sub push mov jns mov xor or xchg shlb inc lahf shlb pop mov sub mov and lds push test jae sbb sbb test mov lods and push cld rcl xlat (bad) not add adc cmp es fisttp adc movl pop or loopne dec pop add sub mov adc popa pushf cmpsb or out bound loopne mov int (bad) les ret jl sbb adc and and sbb sub pop insb clc push or cmc add gs js dec mov int inc lds lcall fidivl ljmp stc pushf adc fdivr sub mov (bad) loopne fisttpll inc adc add aad or out or pop cwtl adc (bad) out iret aas adc ss aam mov nop sbb faddl int3 imul inc pusha pop cwtl add push pop mov add sub and xchg pop call mov jns ret sbb lea mov test in adc popw and insl inc fisttpl lods ss fistpl int3 test cmpsl push or lcall add or xor decb dec mov cmpsl hlt add pusha stos aad fiadd nop add je xor cmp fs cmp and or out sbb inc mov sub adc adc sub push fsubl jecxz imul loopne sbb inc mov adc leave stos in jne cwtl arpl daa mov cmp outsb cmp cmp jne mov xor test insb lods or xchg add lds jecxz in pop or mov jae sbb mov dec inc sub sbb outsl jg xor push xor or (bad) sbb mov inc xor push mov dec mov lret add adc or gs mov sub adc mov inc jae jnp (bad) lock or pusha add jmp arpl and popf mov xor jmp pop loopne pop jp fisttpll dec gs cmpsb adc push ja xor loopne aaa xor xor dec lcall adc and mov push jno (bad) arpl push inc xchg fwait inc mov dec out cmp loop sbb sub jmp (bad) lods xor mov icebp popa fs or lcall or pop loope and add jo pusha jo mov rorl xor push push das mov mov inc sbb sbb adc jo hlt roll js enter push jecxz and add sbb or sbbb mov addb xor pop out adc sbb (bad) mov adc sub test add pop adc js mov loopne lock dec aas ds pop in cmpsb pop fdivs aaa jno inc jnp jp repnz hlt mov sub sub inc out add adc mov mov lea add push xor adc in sub shlb inc in (bad) mov pop cmpsb lock imul inc cli and mov cmpb out xchg nop lret idiv hlt js sub xchg in popa popa or or lea aaa fsubs push arpl add cmp fisubl fistp mulps (bad) mov sub loope cmpb mov pop sti sub je (bad) repz inc push sbb and push movsb mov pop test shrl adc mov and pop cmp ret mov pushf add sub inc and and cmp jo sub and test es and sbb sub stos std test popa popa and or jns (bad) lods and jmp icebp inc sub push cmpsl movsb or xchg push mov sbb adc test mov imul cmp inc xor mov loopne aam add call or subb cmpsl jo ss in push test mov cld cld or dec call mov (bad) hlt clc add add fsubrs xchg (bad) aas lods push sbb adc cwtl pop and adc mov or fdivl pop and shll xor push nop or push test sbb in call sub inc ret lea js ret pop inc in adc movsb adc and sbb sub and xor sbb mov (bad) movzwl push insl or dec sub scas sar jle loop sarl and lds push paddsb loope cmp push dec push cmp dec push jmp sbb enter add and jl es add sub pop leave insb insb or int3 jne add inc outsb cwtl andb call nop adc dec inc xchg call sbb pop dec inc or inc imul inc sbb pop and push pop mov push fcoml addl dec add (bad) sbb mov ret adc das adc mov popf arpl subl sbb jo out loopne fs xchg addr16 subl rolb pop fadds jnp xorb push clc inc mov cmp fmuls and imul cltd sub (bad) (bad) das xchg sub xor or add adc add clc sbb daa call cli pop fildll pop lcall xor cltd adc inc xor insl pop rorl fldz cwtl inc add jl or adc pop (bad) ficom sbb incl test shr loopne lcall aaa push in sub das (bad) xor or sbb cmp xchg imul out add or ss rorl xor sub ja push loope and cli pop (bad) xor sbb pop sub mov cpuid sbb pop fiadd push jb cmp fist inc sbb int and test rolb pop movl cmpsb or mov into data16 fs adc push cmpb ja jae repnz inc inc icebp jmp mov xchg add cmpsl or mov (bad) aaa iret jne jl mov insb add add xchg or inc mov hlt mov int3 in ja ss dec fcompl pop pop sub add test pop lods (bad) ret jmp inc pop cwtl clc dec mov inc imul xor fcmovb (bad) test lock mov divb adc cmp inc xor push fist (bad) xor xchg sub adc cli mov mov adc mov in dec dec aam call and or loop xor ss mov xor pushf sub cli sub jne push push leave adc sub movsl shlb push sub ljmp push mov add movsb and fistpll sbb adc adc movb or popf stos adc add or jo int3 adc mov arpl rcrl sub scas roll movb icebp das cmpl inc imul jne sti mov out dec jmp enter bnd mov loope lea xchg and or rolb sub jecxz jp (bad) mov (bad) xor dec sub fcoml clc dec test lret adc insb xchg xor dec clc push test inc sub mov pop mov adc cwtl lea loop in mov mov insl pusha add movsl (bad) lock daa lods jne loopne out push ja jp push (bad) pop cmpsl loopne push pusha loopne (bad) pop add ljmp int ffreep fild jp ja (bad) loopne loopne or add sub mov inc mov or inc mov dec pop pop sub or mov mov push sbb cmp or jo rcrl or push shrb dec clc loopne cmp adc shlb push xchg cmp loopne pop and xchg enter push sbb clc lock enter inc dec mov adc enter sbb ja lret mov cmp out pop add (bad) js pusha inc divl dec lods sub ficompl loope mov loopne or call into or je loopne pop sbb sub (bad) pop popf push ljmp out vmovss adc mov adc mov clc sbb sub jp or rorl pushf dec and mov cmp aam adc pop fdivs or xchg xor dec popa xchg push sub (bad) lock inc pcmpeqd call test int imul in ret or bound cmp rorb sbb xor test or lods outsb sub aam addr16 xchg in sub cmp or jbe mov es jne inc sbb mov pop mov mov or mov mov add xchg movb adc or pop adc movsb and push int3 in pop ret rcl xchg mov stos stc dec mov loope fsubs (bad) xor cmp pusha inc in popa mov and xchg or cmp xchg (bad) in mov in out or mov jbe adc adc mov adc fs movsl add push and xchg adc sub movsl cwtl and or enter add jl push andb out in jb add inc xchg ss adc pushf mov fs rorb xlat push aam lds js jg mov push or pop mov movb xchg mov add sbb sub jle sub mov stc int test and push jle fildl sbb inc adc js jo mov cmp xor or cld arpl or imul pushf xor push jae cmp mov scas adc pop bnd fmuls test mov and pusha mov fcomps jmp (bad) push je jp jo mov popa mov cmp test (bad) fadds faddl dec xchg loop push fldl adc sub movups pop decl push jo xchg int sub ja xchg mov lea sahf mulb out dec adc into or adc je nop lea push sbb sbb mov lock test adc add pushf xor and mov sbb aas fiaddl pop lds cmp fimul orl mov push and dec cmp fadd movsl push adc cmp dec sub and rorl cmp cmp inc shl pop add pop loopne and pop movsl rorb adc inc mov lcall insb js lret (bad) jns (bad) jbe pop pop and shll aad sbb and das jp inc mov lret xchg xchg adc test pop iret push nop cmp orb std (bad) or sbb (bad) push leave inc xor nop dec sbb xchg cmp add cmpsb cmpl cmpsb mov and xchg mov cmpsl and out fbstp es lds clc rorb loopne jmp dec pop insb fbstp add jmp sub fwait jge outsb sub or dec (bad) dec sbb push mov or or and or and movsb ja,pt stos ss mov lahf mov add lcall jg adc or in dec sub and xchg iret (bad) (bad) sub xchg dec pop sub fs jbe or push sbb cmp cmp arpl cmp orl mov lods sub sub pop inc and into jo or adc or shll sbb adc sbb lahf test jae movsb jl xor je push in dec cwtl jbe and mov in jge dec jbe mov push add lret lock or lock push loope jle in adc test pop (bad) mov in jmp inc push xor xorl ss jns or mov mov cwtl ret test push push pop xchg (bad) inc sbb cmp mov and and rcr adc ljmp and stos push dec mov jmp jl mov fwait add lods inc addb mov adc cmp movsl sbb push add mov in je inc addr16 mov push aas rol loopne cmpsl push xor lock out pop movb add or cmc iret mov xor mov or in mov mov (bad) mov sti mov popf test ss push pushf jmp dec popf movsb (bad) jl add xor sbb test cmp add adc lahf call inc dec jns fistp stos xor ja punpckhdq dec push inc adc mov (bad) mov push inc nop or mov mov inc pop xor aam mov out add cmp mov jmp mov add mov jl mov mov adc sarl xor mov gs test (bad) or xchg inc or orl inc cmpsl push pop outsl fildl jle sbb adc movb jo xor xchg pop fmul rorb cld lea add lods adc jns cmp sbb add jecxz (bad) pop sub cmovnp pop mov jnp sbb rol stos pop lret cmp mov hlt mov or cmp pop and notl outsl je jo sub add ret fs cltd sbb adc (bad) subl sbb mov jns mov xor inc dec (bad) xor hlt push add add andl or mov (bad) mov daa fisttpll add push pop cmp je push push add jo inc mov nop pop fwait mov mov enter add out dec bound mov jecxz jle adc mov add pop and jnp daa cmpsb scas sahf cmp jo dec or dec mov xor js mov into or sub jne mov mov cmp inc mov mov lcall jb (bad) outsl adcl bound inc pop push or pinsrw add xor push movsb adc iret sub or sub test jo xchg sbb imul in lahf test and int cmp jne push mov sub adcb pop push add xor pop sub loopne and out out es adc and push adc test cmp fwait sbb or aaa mov push test xchg mov mov jo push mov jmp lds xchg mov pushl flds sarl idiv mov fwait dec or inc hlt iret xchg xchg sahf sbb inc cmp cmp popf jmp add lds jo jne loopne dec insl xchg ret enter or add xchg push pop pop leave add pop sbb hlt jecxz inc mov in sbb clc ret aad lret cld sub jl cmp je popa dec mov xadd pop add mov popa stc rcl pop mov icebp or imul int3 es mov andb xor pop fcoms faddl or xchg aam add add les fwait (bad) push gs and mov adc sub sbb pusha js out push push test in (bad) mov roll dec cld adc mov aam pop xchg mov pushf or inc sub les int3 mov (bad) mov add mov xor adc loop mov or (bad) mov and leave mov dec in sahf and mov ret or xor cmp and es mov lods push cmp jg dec insl pusha jmp pop inc push js ja mov ret shrb add ds cmp or pop jno or inc inc sub flds cmp iret inc sarl mov jnp rcr push or adc fs leave inc imul or push sbb push lahf movsb adc cmp mov das popa and lock arpl loopne xchg sbb cmpsl test jne adc add fldt test in ss adcb aas push test push add jne xor dec (bad) and lock cmpsb icebp dec or test xchg rcrb adc inc xsaveopt add sub nop aas outsl sub and and inc push xchg lock push xchg xchg xchg pop movups adc xchg xchg add push clc mov adc aaa cld push clc pmuludq cmp cmp in call cmp fnop aam cmp cmp int3 enter mov hlt gs cmp cmp lds gs adc cmpb dec pushf jbe cmp sub mov test (bad) sub mov or add (bad) stos add sub pop aas rolb dec arpl fwait xchg mov or jo test in imul or out movb add sbb add ja pop or inc imul pop or mov mov push jmp jmp xchg inc adc dec pop mov ljmp insb lods scas (bad) dec adc adc jmp jo nop push nop or sbb jle push arpl and (bad) (bad) pop adc dec adc ret addl jge sbb ja push test and js adcl cmp dec insb add rcrb jle and or in dec jo push popa cmp jle push pop cmp mov sbbb pop pop rol sahf in pop sahf (bad) cmpsl aam pop and and das cld dec add dec call push std daa jmp push sbb shr sub jg ljmp jmp mov sbb push adc inc cmpsb pusha (bad) daa adc scas loope orl push dec dec es add icebp push dec call xor push inc xor sub es sbb lods and lock out pop sarl (bad) aad xchg mov and adc xor nop (bad) lock rcll daa std mov sub cmp push incb shrb jb mov cmp dec jne adcl pop clc cmp lea lea fcomps inc and clc loopne (bad) ds jb push sub mov jge xor dec push lret leave push lock dec inc pop cmpsl and xchg or or add xor stos iret cmpsl es push jns sub push adc cltd and aam scas or movsb push stc in daa cs aaa xor xchg lods add fcoms sbb nop fcomps or test jg inc inc jne mov adc imul clc call adc fdivrs mov cmp ret mov add test ss sub in call jmp ds shrl mov adc push adc cli push adc adc outsb jne ret cwtl (bad) insb popa jns jae mov sbb inc or clc andl repnz mov xlat or es in stc xor adc sub mov push push inc push cmp dec inc into add popf sub dec mov or movsb sub or (bad) das add jle fldl and push loope jle prefetchw bndstx mov lcall jecxz xchg cld mov pop rcll mov pop pop jns cmp inc dec pop fisubr sub sub outsb or jl inc imul xchg movsl frstor adc xor and gs fbld loope add adc xor push and fs xor aam popa test pop dec lret or sbb jnp add sub xor insl add add push (bad) outsb add sbb rorl jo inc jnp cld mov outsl cmp test and add dec inc or sti add movsb push mov sbb adc xor xchg mov aam je mov pushf pusha loopne enter cld jns daa cmp push dec out sahf out sub xchg fwait push pop outsl ja (bad) aam jg ja xor mov jns mov sbb and sbb xchg lea loopne decl imul jo fwait cltd out or fsts sahf aaa cmp cmp mov jp ret das sub pop loopne cmp and scas mov ja enter mov dec mov or bound push dec ret or shrb sub testb lock add movsb lahf mov outsb leave insb fs xchg orl orl testl sbb lahf sbb inc sbb inc mov pop scas inc daa inc xor iret jmp and es mov sbb xchg push out fs sub pop mov test inc jmp flds (bad) adc aam stc mov dec xor (bad) adc hlt xchg dec and sbb pop sub push test dec add push repz sub push jno lahf xchg adc inc cli mov cmp mov idivb pop and prefetcht1 clc or add sbb xchg sub add lahf lock push jl jns pop bound jbe outsb (bad) addl xor (bad) je pop sbb fcoms xor and add in js aam faddl xchg mov or lock pop imul (bad) mov jo je (bad) xor sbb nop rorb cmp hlt jne out in mov adc rolb pop or inc xor sbb push sbb (bad) daa xchg aam dec sbb sub adc loop lods ds mov cltd mov xor push and je (bad) push xor (bad) mov and adc or inc sbb jle dec jne push ljmp rorl dec das or fwait cmp xchg inc xchg je xor pop xchg sbb inc push enter cmp mov inc lea adc cwtl outsb sti cmp pop (bad) das sbb bound rcl arpl mov jo flds adc ret jge pop dec lock sub adc and (bad) xor mov ja mov es nopl add add mov sub xor mov xchg push or inc mov cwtl push jmp scas push mov lcall add in pop inc sub adc add push and mov or jo das fdiv movsl and call scas sbb in sbb fdivrl cmp hlt shll dec lds lea jbe ljmp dec mov loopne pop push jle outsl inc fnop jmp dec in (bad) pushf mov or jno sti test shl fcmove vprotb call or push sbb mov aaa and idiv adc pop inc adc jne jno ljmp inc inc cmpsb jmp xchg lock mov push adc mov sbb test pop rolb call lcall pop (bad) je xchg push cwtl lock fisttpll add and mov fldcw cmpl sbb shll xor orb pop (bad) jne mov xlat push test xchg xchg cmp leave test lock addl xor push stos xor inc pop pop inc push xor pop push orb jmp repz mov sub inc jo aas test nop (bad) fildll add pop aas or inc push cmpsb jecxz cmp cld inc (bad) add sti dec je or icebp pop xor sbb and adc pushf jmp push orl insb ret mov pushf mov nop xchg cmp rol sub pop and lret push dec mov xchg adcl cmp jne sbb mov cmp sbb (bad) and cs out cmpl add lock push pop aam dec ljmp xchg iret xlat cmp jne rcrb jbe in pop cmp sub mov sub into and fs pop repnz cmp lret and sbb leave xchg enter cmp in aam pop push inc push idiv adc fcomps rcrb insb push dec insb push pop sbb (bad) push leave xchg imul dec push jo imul dec jo fs dec push je mov inc cmp sub mov out pop inc cmp mov dec fsubs lret push aam enter xchg dec in push rclb add push cmp push adc add sub cmp pop lock arpl arpl inc cltd xor movsb subl shrb push sub pop inc push adc jae repnz das push and loope outsb cld fcmovu mov ja mov dec das pop add outsl jae lods xchg or daa jg push sub enter pusha jo pusha xorl sarb add jo mov ds lock adc push aas push push push push push popl xchg lock (bad) cmp sbb out andl dec enter sbb adc imul or adc add mov pop outsl dec les cltd movsb mov add shll pop pop inc es push adc or inc xchg enter dec pop das fmul fild lcall push decl lods sub sbb pop mov sbb dec jl test nop xchg mov movsb mov mov mov mov aam mov mov hlt pop mov add mov mov and mov jg sbb push in xor pop (bad) daa mov adc fwait inc adc add loop pop arpl xor add xchg inc ret mov or xchg add enter push movsb xor sbb orb sub test pop movsb xor xchg pushf je mov adcb test push sbb dec gs sub mov sub inc mov inc shrb and dec push push movsb xor pop shrb lret jl inc sub push mov pushf test mov les and dec push push movsb in lock movsb xor xchg hlt adc and xchg push push cld xor adcb dec add push sbb je inc sub adc mov and xchg dec push push and dec sub push movsb xor sub xor xchg inc pushl inc inc fsubrs lds jne sub js push mov pushf add push sbb insb outsl jae mov mov sub and inc push xor pop test fcmovbe aas push popa jb cmp lods xor (bad) daa test je movsl mov dec jne insl mov mov dec imul or fs pop or clc popf dec arpl jae mov push fs mov jno lea or jns jp jae sub inc outsl imul pop pop xorb xor mov push ret pop xchg or or or adc push mov int pop mov or push (bad) loop mov pop iret ds daa fmuls or xor outsb mov sub add cmp (bad) outsb adc mov pop pusha push (bad) in inc (bad) ficom mov (bad) in pop xchg sbb pop pop xchg das jns dec or ja and rcll jns in icebp and xchg jne insl outsb jo mov das pop fs fcomps jo inc imul icebp mov mov inc outsl arpl and xor mov push xchg pop mov add sbb adc adc gs insl add dec fcomip mov outsb les xchg push add and jg jno mov jbe ja adc subl cmpsb add xchg push mov out test cmp mov outsl dec xchg add xchg dec dec jns dec push in orb push mov mov push jmp inc lock in dec jb dec pop sub fs xchg pop or xchg add pop jb push pop and cltd pusha sbbb mov fcmovbe outsl fdivs call mull jo nop push pop jg ss inc nop push mov dec aas dec ja loope icebp test addr16 (bad) adc (bad) jp (bad) js cmpsl jne es push test push push movsb or xchg insl add xchg add sub fiaddl xor jmp or call mov sbb in stos je je pop cmp cmp fs adc or loopne dec dec cmpb test inc push push notb inc inc push dec inc test shll lahf or dec jp or (bad) fcmovnb fs xchg adc test and sub (bad) dec xor cs jl and out out (bad) fiadd adc out xchg jae shrl jo ss testl jbe cld push pushf nop adc mov lods loopne dec dec jbe push xorl mov or inc pop enter ret mov adc pusha adc cmpsb ficoml pop push faddp out pop xor int3 pop xor loop or mov cmpsb lahf push inc or fcmovnbe mov inc and std fs cmp sbb ja fs or and pop adc hlt aaa mov scas add in xchg push adc clc adc sub dec mov xor dec push clc push inc mov xor sar aas ret loop add push or enter push jo loop cltd or adcl or sub cmp out or jb dec adc rolb push push inc mov and and movl loop add movb dec or xor dec adc sbb xor inc cmp test adc iret test ret nop xor cmp jg sbb loope lock rcll cmp cmp out or movsb es mov cs and scas adcl adc test es cmp leave jo (bad) or jge mov pop inc lds cmp test mov aaa or rcrb and pop push out xchg (bad) mov pop pop (bad) cmp adc cltd and clc or inc into adc add (bad) rolb push (bad) in insb call jg pop addb add push dec push rorb push dec (bad) mov (bad) mov cwtl add (bad) push add push sub pop xchg adc fwait cmpsl push adc aaa hlt pop fisttp xchg pushf mov mov sbb cmp dec push push push fbstp test add adc inc outsb iret pusha pusha dec pusha je (bad) mov nop push (bad) sub leave push mov pop mov sbb mov mov dec js fnstcw jecxz dec xchg mov lock xor push stos xchg xor ds cmc mov jne pop mov es and daa jcxz dec sbb (bad) out cs mov adc sbb cmp push jl add hlt push xchg mov movsl adc cld pop add dec sbb mov mov fstps pop or roll test or pop mov jl test testl or push inc cwtl or add stos add (bad) pop movsb lret test lods mov dec lret mov pop add enter test pop jae mov or inc mov mov cwtl loopne aam jo lcall loopne bound push xchg inc xor sbb add test xor fildl pop mov adc xchg nop ret ret add xor enter pop push pop add add dec and xchg push or (bad) call mov sub xor outsb inc xlat popa das popf dec jle pop push outsl pop adc enter and pop pusha mov shrb push mov xor push inc mov push mov (bad) cmp xor sub sub or add push and mov daa or sbb mov xlat pop cmp std insl fs addr16 push (bad) jo fsts mov adc add and arpl mov add mov mov aaa pushf cs iret leave xor inc jl xchg dec nop sar dec sahf xchg mov mov lock test push sbb sbb (bad) and dec mov mov jns inc push lods cmp jo inc dec lea rolb nop add sub push mov push daa outsb add mov or daa icebp (bad) dec jno mov push inc sub xchg xor adc push pushf adc mov mov push lods pop cwtl push push aad fisub push pop les inc loop push out imul testl adc add lock dec es add loopne cmp pop mov jns pop jl xor push xor mov cwtl jo je dec cld inc aaa outsb fs add jl outsl fimull pop dec push je jle jo and inc lahf insl cmp inc fs lods repnz add push sub fistpl rorb inc add pop nop mov mov and fsubrl in push and popa push shrl xchg (bad) mov sarl jl mov mov xchg inc dec insl cmpsb shrb in outsl push subb inc xchg and data16 out rcr fmul ds push jae in pushf insl mov int3 mov movsb movsl push and sarl sub test repnz jne shrb jno ja ret adc inc jge neg (bad) mov ljmp lock sbb or (bad) dec jae lock or icebp push mov into adc push jmp pop sub pop ss push rorl ret inc clc pop (bad) bswap les pop pop les divb cmpsb inc aam jp sub pop xchg imul test inc xorl pusha sbb mov add dec and cld and mov add test mov xchg mov faddl inc test hlt inc mov xchg adc decb adc jne xchg mov das jo rol pusha rolb movsl or cmp and loop dec adc in inc push sbb adc cwtl mov add adc movups fmuls jo push ds adc mov pop and test sbb jae cmp fild mov test xor imul and in insl sbb popa cwtl push mov adc gs cmpsb sbb mov and push push cmpsl xor sub mov inc iret adcb adc rorl xchg (bad) movsl fs into push xlat fisubl aas cmpsl sbb push adcb jae imul gs push test shll ds bound dec je pop inc hlt sbb inc pop ds inc cmpsl sub insb in dec fwait ret jae (bad) sbb dec pop enter pop inc pop cmp mov jno inc adc ss xchg push and cs sbb jo popa pop cmp dec push sub jb mov and cmpl jmp out push dec lret pusha push insb enter jge sbb or in ja int3 out push pop lcall xor (bad) lock pop mov shll pop or xor test bound dec mov sti xchg sbb es roll pusha daa mov in mov jle movsb insl sub push outsl jo jo jns and cwtl cltd cmp cwtl mov lea dec lods jecxz (bad) mov mov dec push mov and mov movsb and sub inc (bad) fiaddl push or mov sub imul push sub sub inc push stos add jae aad jp and push mov pop cs imul stos or das lock lea lahf adc xor push pop xor mov pop fsubl mov jb lds or es dec inc and popa or enter dec sub or mov and fadds dec xor fstl cs dec lock fldl or int3 or dec cli fs inc sbb aaa mov insl rolb bnd je inc fiaddl enter pop cmp inc js mov int3 test inc pop rolb cmp or xchg xor and pop bnd adc cmp daa and push jns and fdivrs stos adc or xchg loopne dec xor mov push jo clc cmp cs clc jo,pt out push jbe addl incl fnstcw xchg mov and adc inc in into movl frstor (bad) test inc push dec adc fnsave aaa cmpb daa rclb xor insb push daa insb orb daa cmp jb into nop into aam ja adc daa mov add inc push mov std pushl daa lcall jns in leave stos and push cwtl outsl inc push xor jg xor add les mov dec insb bound ret test arpl push jns xorl sub bound add loopne stc or nop or or cmp adc fistpl (bad) jne,pt outsb xor xor popf push jb pop adc mov inc leave adc xchg jb push push fisttpl or adcb adc jae adc test mov jae aad nop pop sbb (bad) rclb push sbb rorl jecxz add cs scas pop and and xchg inc nop and mov stos in sub sub or fs sub imul add inc dec dec mov into movsl movsl add inc std add or rolb lods and xchg cmc push ficompl in dec call in not (bad) jnp addr16 add cmp jae dec enter pop faddp in faddl lcall hlt andb mov mov mov aaa popf mov daa loopne dec push jle dec dec rorb pop pop sub mov mov xor push inc inc or out xchg cwtl rolb mov push les cmc enter cmp jle or or push in inc aas or xor inc or insl int nop loope pop xor and or and add jae jge xor aaa outsb (bad) out add push push outsb xor mov jae add sbb gs sbb inc push xchg mov pop xor add push ja enter lods loop push inc or or fwait mov wrmsr push mov pop movsl mov pusha and or cmp xchg or jmp sub dec mov jle or sti and jle mov or bound or shlb rorb sti mov xchg outsl push movsb mov xchg loop or mov mov cmp pop clc ss adc pop pop mov pop pop enter or popa fisttpll inc or add jo aam je xorl test or mov pop xor cmpb sbb data16 in or orl cld jmp int add dec inc or jle mov pop arpl or mov ss dec lret inc or xlat (bad) push shr test jo sbb addr16 pop call push or jmp pop imul adc mov sbb cmpb xchg dec dec inc jo cmp lret sbb je movsl cmp (bad) cmp pop push stos lock into xlat (bad) xchg out popf insb push adc lock (bad) aaa sbbb stos or sti cwtl popa adc stos dec in mov adc in mov das clc adc cmp int3 inc rorb add out shrb stos xor sbb unpcklps or add add mov (bad) jne and dec cld sbb sub (bad) lock jo xchg sbb jbe rcl xor das or mov xlat add movsb push add xchg xchg cmpl into daa mov les mov pop ret aam in sub rcll cli fcmovbe push push out fs inc hlt shrl sub xchg iret inc add mov jb adc push je lret loop mov cmp test jb pop adc nop cmp jecxz mov aas inc mov test xchg adc scas shr cmp xchg lret (bad) sbbb notl push jp and lods fucomip cltd neg mov nop xor les xor push test add pop mov and cmpb add jle mov movb (bad) mov je and mov lea lea (bad) repz pop fisubl jne movsb push iret or jp fwait inc dec in and hlt mov lock add jnp pop (bad) jb xor rorl inc sbb stc scas lods (bad) repz test dec arpl xor inc xchg hlt in enter data16 test js in jns push push xchg sub inc xchg js jmp das add sbb imul in out popa mov fistpll add iret inc (bad) xor sbb jecxz fiadd dec jne shlb inc push mov jmp sbb pop mov cmp daa lahf shrb push in pop out cwtl inc add ffree jnp jl sbb fdivrs add ja insb add jns sub inc cli inc nop xchg pop jns xchg inc pop add add xor (bad) mov add add add mov (bad) hlt pop cli mov push add adc je xor xchg jbe pop sub sbb push xor mov sub icebp push lock jno,pt out or sub sti aam xlat fs std gs pop pop mov or jp sub test inc push push add or mov push jge adc mov pop call mov dec and jae mov adc add adc sub mov push xchg lret movsl pop push add pop sbb int3 adc mov orb adc add sub jne movb bound daa es pop lock mov adc inc nop mov pop (bad) jne jecxz shrl mov mov loope xor push xorl push add cmc negl inc and (bad) leave rclb cmpb repz mov aam jg gs clc sub add jb clc and add and daa (bad) fadds cltd cmp or (bad) xor xchg sbb or jne mov cmp test inc push loop jno pop or into loope and fistp push dec loop movl and test or stos testb std mov sub and dec fidivrl adc insl inc adc mov jae aad shrl insb cltd cmp popa jmp cmp mov rcll push jo pop xor adc (bad) xchg das sub hlt enter xchg subl adc pop fisub scas mov push mov and or dec push insb lods jb stos add and sub xor outsl pop movsb sarb sub pop je stos mov (bad) adc leave or sub dec pop mov sub mov pop lods mov jnp js dec lea insb nop pop jle sub cmp imul test (bad) and sbb jmp mov dec (bad) test (bad) cmp sub and faddp movsl xchg xchg cli add xor jge mov adc mov lcall (bad) inc pop sub cmpsl (bad) push push mov pop in (bad) jge xchg stos shrl inc nop sub dec aam fistpl cmp je ljmp sub ljmp mov fnclex sbb pop in xchg inc dec inc outsb inc outsl push pop jp sahf in sbb lahf clc lds in xchg jp fmulp imul xor mov jecxz insl pop dec fistl je push pop sbb adc roll call pop imul decl ficom aam lock adc xchg ss pop push inc dec aaa nop ja mov (bad) and in ret or (bad) jb jns jbe cmp cmp ds and jb jb and and jb jb es sub jb jb sub sub jb jb cs adc jb jb adc adc jb jb push pop sbb jb jb sbb sbb jb jb push pop add jb jb add add jae jb push pop or subl xor insb jg sahf out decb dec and out sahf out adc or iret sarl and sub lock repz or add jns cmpsl stc clc jle lock sahf out loopne fdivs shrb jns out mov out sahf out mov out sahf nop push jns out js jo push inc pusha cmp sahf out sahf push sub inc sbb out cmp xor sub sahf out and mov sahf out sahf lock or add repz clc jge lock repz xchg mov dec mov das pop sbb je and pop jg (bad) dec pop xchg jne xchg es sbb mov jno sub xor mov orb test movl daa push es push cmp mov pop jle test xchg push fwait movb imul pop xchg cmp inc das cmp sbb mov add mov mov cmp and and or loop push (bad) cmp pop push sarb xchg xor pop push fs fwait cltd out pop je jbe cmp mov inc cmpsb insb aaa es enter cmp adcb mov jb pop sbb mov mov mov ret and pop je pusha sbb mov addr16 enter sahf jle shlb repz add cmp sbb inc les test (bad) enter dec inc push dec scas dec xchg add test mov je xchg mov pop xor mov mov ja mov add aam enter fadd rorb (bad) jbe (bad) pusha xchg test scas pop mov cmp xchg inc test add cmp jns (bad) mov and or mov mov push adc inc push cmpsl or popa je aas test scas xor jb out add imul mov adc xchg stos dec mov imul xlat roll int mov adc sub fmull loopne imul push sbb fsubrl push cmp js ret dec inc inc (bad) fcompl xchg jo,pt lahf out dec pusha mov push adc push shlb dec lods cmp cmp pushf push push mov sub jmp icebp and and xor xor push dec mulb dec imul add rorl movb add arpl mov push push or adc outsl pop mov aas bound pop es aam negl push jb popa or mov bound shrb mov scas gs mov pop addr16 jb divl mov mov arpl mov daa push jg out (bad) jge je outsb insb das je call sbb and outsb cmp daa mov (bad) pop je jo jb arpl testl out lods loope das add or xor cmp push adc sbb and xlat and lock outsb xor mov jne cmp not push add inc push lahf movsb lods movsb pop pop jns mov cs xchg pop das or int3 je movsb cmpl ret aam and and inc add pop std orl dec mov add xchg dec mov js or js push or cmpl mov push inc xchg pusha push insb push ret mov into mov mov mov sub fsubr push jne scas add or dec movsb sbb out icebp sub andnps roll pop push mov xchg nop das adc adc aas nop xchg xor push pop xchg stc add test cmpb dec sbb mov fcmovbe pop mov sub adc mov inc push aaa and fcoms data16 in imul lods cltd adc mov jecxz enter dec and cmp mov add adc lods aam (bad) mov sbb or jmp sbb inc mov and mov es sahf mov push xchg lret pop xor mov push test add sbb push add rolb sbb push rol scas adc pop dec adc sbb add or pop push insb or push mov inc out add (bad) xor roll add jg pop or or or or or or iret repz adc adc repz repz pop sbb sbb aas iret sbb and and fmuls jns cmpsl push (bad) mov sarl cmc push mov sub cmp repz pop insb jge repz repz mov shl cmp jnp hlt add cmp cmp repz push repz mov popa pop or jg fwait in lret and or movsb jb or pop push adc adc dec sub xchg lret or or jb in push or mov sub adc lret dec adc jb in cmp adc inc push inc pop xchg push cs and sbb xchg lret sbb xchg push jmp ja push popa cmpsl push jns imul sub and sub sbb and push add sub es insl sbb les rcll xchg inc add sub fdivl fsubs adc add std push lea bound add pop mov (bad) fiadd test and cmovl add push adc movsb int3 in fsubrs add pop testb mov shl jge jmp inc int3 mov push ja pop iret sbbb mov movsb cmp fdivrs cmpsl lock dec push sub dec int3 sub rcrb jno call mov push js out out jnp adc adc dec mov pop sahf inc and xchg in adc jge and fistpll sbb or cmpsb cmp pop fdivs repnz jno or rolb add push daa push hlt xchg add push dec popa xor lock cmpxchg mov js addr16 sub mov push je add xchg or popa jns test cmp sbb xor add adc fdivs nop mov mov push push jl mov xor sbb jo push clc mov push cmp daa push test fdivrs jg fnstenv test push sub push stos adc jg lret add inc xlat inc test jae cmc imul aad jg leave clc movb adc notb mov mov inc sarl call insb push test flds call rorl fadds push pop pop sub xor xor jno xor push sti mov jo xchg pop clts push stc nop scas pop sbb mov xor daa inc sbb adc in mov and jb add mov adc xchg adc and pop lea adc adc sub dec adc sbb mov push (bad) or gs add inc add sub sbb xor sub nop stos in mov sbb cwtl nop or jp sub ret ret jb fs iret sbb mov movsb dec jmp mov repnz push outsb loopne xor adc and and test and (bad) leave push jo mov mov leave add and outsl or pop xor sub test sub mov inc test js sbb das dec gs jbe orb xor inc push jbe dec fwait cs rcr xchg movsb (bad) mov dec or dec pop insb or jp adcl push dec lods pop add lods inc lods (bad) fnstcw mov scas pop push sarb or pop mov jp add std or fsubrl adc add xchg cmp fild pop imul daa movsb mov pop push fimul pushf adc imul and jbe lea lods add popf pop sub adc xchg pop fcompl and mov loopne pusha insb sahf test outsb or pop sarb js call dec pop or les fcompl push xor mov pop cmpsl pop cmp (bad) adc (bad) mov subl or cmp push fs ds push outsb dec cmp add jns out push push adc push js adc inc in dec fistpl push adc ss fiadd shrb cmp jnp mov pop call pop fist sahf ss cmp lahf or aaa fildl cmp pop and dec or fdiv adc or xchg mov mov mov sti mov dec push lods push shlb lahf out orb out inc mov or jbe xor push pop sub bound dec add and nop push shr sbbb jae inc pop jnp or imul test or adc ss fstps jne push ja mov sahf imul jl cmp xor scas js scas add adc and cmpsb xchg idivb pop cmpb in inc je jmp pop push xchg (bad) scas push mov mov ss push add mov mov decl sub add sldt fisubrl jl push test imul mov adc push pop sub xor (bad) mov jg mov inc add or jmp sbb movl mov mov dec lea xor jl pop jbe into push popa (bad) or pop scas aaa sub dec add jbe dec nop nop or adc and test bound mov pop femms out adc pushf jae dec arpl ljmp leave repz jp adc push aam and dec sbb jbe inc (bad) sub xchg adc adc out adc je and xor add xchg or test sbb dec scas sbb jmp adc inc add and imul test pusha cs test mov inc pop dec insl gs lcall jl pop sub outsl and cld popa cmp add or dec cmp jno int3 xchg jmp mov or pop inc or ficomp (bad) dec ljmp or js outsb addr16 dec and in pop and and add sub test adc inc dec rorl pop push push push gs nop pop jo sub lea movsb sub push push cmp push in mov inc dec out sub xor addb cmp pop imul cs aas or dec mov pop mov xchg jle push dec aaa test pop sti xor cwtl movsb push lret cmp cvtpi2ps test mov lcall test pop adc or mov inc loopne cmpsl ds and xchg call push call xor scas add jle pop dec xchg into jne inc fwait mov inc push test movsl das or adc inc inc pop add test cmp or inc rol dec pop nop shrb lods fiadd push adc ja lahf mov pushf js xchg sub mov push inc push cld out cltd lock lahf cmp rolb addr16 pop push jl jnp sub inc push sbb push cmp push js push mov lods out cmp mov pop or dec sub ficomp lods pop insb push xchg or nop insb mov push xor add or (bad) jmp adc xor orb addr16 loopne or sbb push add cmp add or dec insl js push xchg stos sbb jmp (bad) outsl pop sub mov scas fcompl scas in push push adc push and cmp push sbb pusha push out push or push inc or and adc mov pushl mov std push (bad) push pop incb xor pop roll pop icebp sahf xchg loop inc pop pop sbb jbe aam add data16 out popa cltd sub adc dec push xor jb jmp bound shlb subl mov test adc push jbe rorb mov ja (bad) sub cmp insb sub (bad) shrb jae jne test pop sbb add sub test pop aam and xor inc pop and xchg adcl mov and sbb mov in mov aad stos and leave push daa sub xchg pop sub or enter nop add inc xchg subl xor movq rclb into insb cltd inc or ja cmp arpl out sub push inc adc test push add cmp push enter mov mov push roll test xlat or cmovo pop js xchg decl adc push inc mov (bad) es cmp mov movsb (bad) mov lahf rcrb adc loope mov and (bad) popl sub lds inc icebp nop or mov mov pop add dec movsb sbb mov adc in aaa pop and js jne push and lods lock adc push inc (bad) mov mov or iret loope inc push sbb aad adc xchg or adc add ljmp dec or dec popa aad popf pop stc jns xor (bad) add adc insl pop jne adc mov xchg sbb mov sbb (bad) add sbb pop or fs enter and xchg or and inc movsb pusha mov orl sub cmpsb xchg stos in sub sub cmpsb xchg mov das add xor test xor jg fcmovb or mov outsl hlt ss mov movsb pop add jae adc lret add push insb add mov or push scas je fistl jl popa stos add and sub in or xchg movups or adc dec scas xchg adc push adc adcb std aad add push sbb push inc leave push xor and mov and add adc add add cs nop fwait sub cs add push inc cmpsb xchg xor xor sarb nop sub out cmpl lock ljmp movb add adc loope mulb push jo adc adc xchg and pop adc arpl cmpsl jno imul or test int3 add add pop ja lret or nop (bad) and add cmp push or hlt inc sbb dec pusha mov push pop clc and dec (bad) dec dec (bad) dec loopne inc adc cmp cmp push addr16 push sahf aas add in push add mov adc outsl sub ds adc rolb cmp rorb mov or imul scas lods or push push inc add add mov stos and adc cmp adc cld aaa adc mov inc in add and cmp cmp (bad) imul cli adc adc xchg adc xor or pushf (bad) jmp into outsb bound movsb or pop cmp cmp inc sahf sbb xchg (bad) fnstenv push test sbb sbb or add inc cs sti push adc push int3 lea pusha xor or xchg push int and pop inc inc add or and adc sub sub and es sub push xor and push or sub jo pop lds call nop mov xchg and or rorb xorb mov mov enter cwtl int pusha pushf inc in nop inc fildl add add dec adc push xchg xor pop (bad) lahf pop xor ret lret push mov xor enter inc imul test cld movl dec (bad) out sbb pop mov test push mov xchg xor pop fisttpll and cwtl pop lahf adc in popf insl andl ss mov in adc inc rorb sbb movl out test or push mov mov addb and rcll jnp xor sub inc test test test mov mov je sub or sub pusha pusha fnstenv push cmp fisttpll inc inc jmp sbb imul inc fistl adc xor fcomps xor xchg ret and xchg inc pop (bad) fistp out out test push push push fcmovnbe in push (bad) shll sub loope mov jmp or aam incl push repz pushf aam mov outsl cmp cmp loope das add push movsb movsb add pushf sub mov lods mov popf pusha mov cmp (bad) mov sub dec xchg aam dec mov jo clc inc sbb add in cmp inc add mov fild dec jecxz (bad) je imulb cmp jmp mov add or push mov cs ljmp into ds aas das mov test mov lods and pop sub rcrb push lea lea pop add mov clc dec push jmp adcb sub sub ret push nop xchg sbb inc je cs add push lea jo cmpb mov mov and (bad) dec add enter cli gs add cmp cwtl cld cld mov mov mov pop sub jno dec movl lea mov add add xor add pop daa sbb (bad) stos aam sbb rorb mov inc jbe leave je adc add add xchg jo jb xchg sbb popf and (bad) in pusha or add mov sbb xchg daa icebp jecxz add and test test add dec push sbb jo adc iret cmp jne pcmpeqb jno inc push cmp or jne or add and test and rclb rol ror push inc outsl (bad) xor cmp test jecxz rcrb and inc enter mov xor lods ja or addb pop pop shlb sub xchg add rcll fdivrs pushf outsl mov js inc add es inc daa insb adc sub clc sub scas dec (bad) outsb pop fsubrl stos adc movsb (bad) mov mov or movb pop pop pop and nop addl shlb mov fsubrs out inc and xchg dec sub jo xlat shrl adc (bad) cmpsl sbb xchg lods in push sbb cmp mov adc and in xor or xor xor mov mov mov sub jno mov fdivs enter pop inc js addl jmp dec cwtl add enter in nop inc dec loopne add or sbb or dec push and cmp enter xchg cmpsl je mov cmp inc push cmp lds rclb testb js pop and add mov xor pop pop scas jo add jo mov add and sbb sub jae mov in inc mov aas dec lods cmp mov sub dec mov out lret loopne add adc mov movl xchg xor sbb subl nop ret add fnstenv mov dec jnp add inc mov mov adcb inc les cmp fldenv mul push lock data16 adc cmpsl xchg sbb (bad) push inc and jl cmp push movb call outsb inc xchg sub push movsb mov jne add mov je xor fisttpl fldpi xchg xor (bad) notb push dec sbbl outsl add es add lods mov adcl xchg push popa je stc or fmull dec (bad) loopne loop insl cmpsb pop dec pop fsubl testl cmpsl lods sbb xchg jecxz ja testb and xchg ljmp dec stos xor lods shrb rclb inc dec jbe add pop fsubrl rcr fistl rolb push and mov stos or inc xor stos push adc jo mov pop fmull fbstp dec cmpsb add cmp rolb fcoml testl jnp outsl add or or (bad) cmp pop mov adc jb enter movsb aam test hlt push jo push dec add inc cmp (bad) movl loopne jbe add orl loope loope popf push push sbb mov mov adc adc push pop mov in push pop jo inc lods lea add or mov or mov adc sub dec add aas dec sbbl inc out add cmove aas push inc adc cltd pop or push data16 and sub divl cmp pop movb jns jp ljmp xor jnp cmc jecxz mov es movsl inc inc dec lahf mov and pop or xchg push adc adc jmp ss push mov mov mov push pop jnp sbb dec scas dec pusha add jl push ret cmpl loopne dec cmp ret push adc cmp mov xchg std fcmovnbe into and orl fbld (bad) push inc push test add xchg ret divl gs or jns jne pop or pop outsl mov mov pop sahf andl je inc adc xchg (bad) (bad) mov mov sub jle and mov outsl push mov inc pop jecxz arpl adc mov mov scas inc hlt xor sub je sub inc add jnp add push insb (bad) test and dec sbb mov or les or cmpsl mov sbb call fs pop sub (bad) push roll pop and daa mov push mov test cmp or je hlt push repnz out jecxz cmp mov dec je add and xchg scas lock pop mov dec push mov jl test ret lods sub add imul (bad) mov sub notl adc add fldl mov test mov mov fisubrl pop push call cli ss data16 pop push and push imul mov xchg push in shrl mov cmp push (bad) imul mov cmp je or push popf or jnp pop sub shll stos push lret add cmp inc sbb loope dec inc xchg imul dec out or hlt or bound dec jmp add mov loope cmp or pop xchg mov xor cltd or xlat dec jb cmp cmp mov and jns mov or cmp add mov fwait push xorb ret jmp xor push mov jne ds shlb std or lds rolb gs ja push gs and rolb and inc push cli or ret inc push cs mov aad dec jg mov add dec pusha add push jb outsb add pop add jge pop push ret inc push jge addl outsb inc xor sub pop pop cwtl enter mov jne cmpsb jle in push cwtl adc or or js dec fwait cld adc (bad) mov (bad) dec push and mov cwtl clc add and jnp loopne call je ds popf ja dec data16 xchg push xor xor (bad) popw mov enter xchg and xchg lock aaa dec inc mov test mov pop cmp or pop test or jne int3 (bad) rolb pop mov out sbb mov mov repnz jmp sbb sub fildl popa add and adc shl flds adc pop hlt or xor sbb sbb xchg sbb jmp in in pop leave cmp in or bound jo mov sbb or pop out test sar sub and adc xor sub and inc or mov xlat in outsb dec push jae and push ret cmp shll mov (bad) mov mov inc xor (bad) sub cmp adc mov pushf push lcall fs mov dec sub insb lods sbb ret xor xchg sub add inc outsb divl xor xchg xchg lret mov and cs adc push mov push mov xor dec (bad) xchg cs mov js jo lods fcomps adcl sbb outsl sbb push jnp movsb mov push add test mov dec pop mov add adc lock mov in sbb faddl jns jmp das push imul or loopne mov push mov lods das push roll scas xor jg jge sbb je sbb push jbe sbb gs push fdivr push cmp rol pop dec ss enter jmp shr pop lods dec clts sub mov das (bad) adc orl push adcl js cmp or add int3 fs clc out inc imul pop adc movb out insb add add inc popf adc dec xchg xchg lar pop cmp daa aaa jne cmp fldt cli mov mov jns push mov mov pop pop mov imul or aaa test lock pop mov mov sbb out and decl in in add or inc sbb cmp push shlb jg aad pop add xor pop mov xor cmp hlt pop adc cmpl jbe push jg jge and sub xlat outsb js mov sub jle add mov or imul xchg cld push fldl2t (bad) (bad) cmp push sub insl lcall add imul dec inc aaa fsubp (bad) movsl push andl pop test xor les in test mov jp mov (bad) cmpsl jno adc mov inc or push pushf inc xor push dec lcall lock and movl mov bound push push push or seta adc sub iret sbb outsb call lods mov je clc (bad) popf inc adc xor rclb xchg outsl mov ret xor in and hlt and jno sub push jo test out mov fs cmp fs xchg cmpsl or ret (bad) leave sub jle sub dec push pop mov out mov popa jge orb add push jne push js dec jno sub sarb or sub add call sub jne pusha rclb add vcvttps2dq sahf add sbb iret xchg mov or adc sub call xor pop mov jnp enter xchg clc and daa or (bad) (bad) jo push push sbb nop imul sub sub daa cs loope xchg mov popa inc jmp push adc les movsl les decb adc lahf inc imul mov popa data16 rolb sahf insl cmp test push pushf push movb jno test mov push inc sub jne lret cmp mov (bad) fwait cmp adc cmp test mov pop push jmp je mov cs jge inc adc mov cmp dec push insl ret inc movsl xchg (bad) xchg cli imul cmpl shrb sub test lods loopne mov loop fldl push cltd and adc mov scas push add pop mov lock ret mov xchg pop enter orl mov outsl cmpsl es (bad) int hlt mov lahf jne xchg or dec ss cmp ja push add in cmc dec cld or loop int setne xchg add inc loope lahf movsl leave cmp testl sub or inc sub jl dec addl mov sub dec inc popf mulb ret test icebp insb jge shll sbb push lea cmp popf jbe lds adc ret in mov xchg mov ret or pop mov mov lea sub repnz inc cmpsb mov push pop shrb test call iret add and adc stos mov and fdivrs dec fidivrl push push push sub lret (bad) mov sub in gs lods add adc or movsb dec fmuls (bad) or test dec sbb pop add jle adc pushf push sbb ljmp xchg inc sbb add push push sbb movsl pop push lock out mov xchg shlb mov add cmp call add jecxz aad dec add ss sub adcl adc add int js je pusha pop sub cmpl cwtl int3 je gs and sbb pop push add push pusha movsl push jae xchg adc icebp loop push (bad) fldl aam adcb clc xor ret mov xchg bound daa xchg add or cmpsl js gs adc cmpsl ret cmp inc js les push test xor in sbb sti and ret xor sbb add jle lods push xlat (bad) and pop mov push js nop mov dec mov andl sub pop push cwtl xchg lret add in cmp jo arpl push add cmpsl int3 dec int3 cmp scas scas enter cmp jbe inc scas xor fdivrp push movsl fcoml out mov fmull sub push xor lock ljmp push gs sub sub dec mov or lods aaa cmpsl sbb xor int addr16 xor dec lods clc orl pop (bad) loopne adc xor push lock mov stos repz xor enter and inc pop cmp movsb scas insb pusha mov pop xor gs inc add orb or sarl adc sbb arpl jmp mov adcl jg test inc jne movb pop push mov cmpsb shll rorb adc mov and (bad) je,pt int push inc push pop insb adc inc outsb inc jge inc pusha push pop jg test push push call or jmp lea in fidivl pop fwait pop pop jmp je dec fs push das jne add stc xor dec loope sbb stos aad or mov push cmp lcall inc cmp (bad) mov xchg push or xor test inc or pop xorb scas outsl test jns orl mov das inc dec bound or jle jg je int3 sti (bad) dec mov ret add (bad) add test and xor cmp scas cmpsb (bad) (bad) inc push and lock hlt loop adc (bad) mov lds fisttpll (bad) cmp fidivrl jecxz push push xchg ret (bad) adc push push jge sbb mov inc mov gs mov mov jg aam popl jmp mov addl push cld pop iret inc push push push dec dec xlat jae xor pop dec mov inc and or mov pop inc mov outsl popa movb add mov jne pop sbb jo test sti xor lret mov mov and movsb out sub mov push idiv and or (bad) (bad) std mov sarl int3 mov or sbb pop jmp jnp xchg repnz xor or out je push stos imul aad ja push ss push clc and mov add test out add xlat dec jg push pop in pop (bad) mov inc adc scas lret or cltd or ss (bad) jmp adc ret test xchg or fild test add cmp mov mov adc movsl cmp cwtl stos divl wbinvd sbb pop mov adc mov inc stos (bad) mov inc or or lret test jo arpl sbb mov addr16 add xor pop orl ret pop loope adc mov mov dec add lds cmc inc dec dec (bad) xor incl or dec adc ret xchg (bad) movsb jno enter (bad) lea outsl mov add jg and inc adc inc jns hlt js hlt xor add les mov xor int cmp faddl xlat cwtl nop cli fdivrs sub and cmp imul push sub xchg lods gs fldl inc or push dec jne scas les cwtl fstpl push and mov cmp sub aas and cmp insl test dec pushf in daa nop repnz movsl push fsts pop xor jns dec dec inc fnstsw add add inc (bad) jb add xchg pop add test in xor fs jp or mov lock or sub xchg pop ret xor xchg jmp fldl rcrb rorb fdivl push add fs cmp movl xchg into xchg sub lods outsb inc xchg shr pop lds out inc jno xchg mov jmp push orl jmp or xor add (bad) (bad) push enter cmpsb sbbb out inc inc push inc sbb jns sbb xchg xlat arpl test mov loope cmp mov add and les adc les shr pop faddl sub sbb mov xor sub loopne loop add fs inc cmp insl cmp xlat hlt mov sub paddd mov push dec dec adc imul test or xor or mov cmovbe daa or add and or jge cwtl cmp scas pop les add dec sar cmp jge mov add adc jp (bad) fwait adc fmull (bad) fnstenv nop js (bad) sub shl xor cmp pop rcrl push or pcmpeqw push ret inc loope jb or push les sbb (bad) mov add lods repz inc faddl decl cmp mov cmp cmpsb and push xchg push cs jmp sbb fstps fldt cs sti push dec popa pusha sub or imul scas lret iret loopne popa inc movsb pop bound xchg cmp xor push insl jle sahf xchg out mov pusha stos sub inc sub jns fmuls (bad) stc jmp outsl dec and mov and pop push lahf xorl pop dec cmpsb lahf push jge les sbb add add hlt mov je (bad) mov jecxz ja lock push jle adc mov xchg inc ret iret dec or clc xor and stc adc fmuls (bad) sub daa or mov test les cmpl xchg or nop cwtl or cwtl xor sbb lock inc pushf mov inc (bad) pop jno ret in xor pop and ds inc decl add movsl cs or xchg mov pusha das push xor push enter or cmp mov sbb aaa pop and sub sub cmp cmp fmuls add lea xchg loop aas mov aad daa iret stc adc xchg or loopne and push and addr16 loopne add mov dec punpckhbw jl dec mov lods sar dec data16 daa fsub jg add (bad) sar loopne xchg adc jns ja jle popl cltd cmp out push pop gs sahf out sahf jne sbb add jns add movsb cs aaa fs (bad) in adc inc push pop xchg mov and les push sub inc daa das mov sub push push imul adc fldt inc add cmp inc inc or int3 adc or mov push insb add sub mov decb adc pop and and movsb xchg or push sbb je xor les mov aam addr16 loopne or sub or adc mov aaa icebp add xor pushf add fcmovnb xchg mov cmp sub add xchg mov loop xlat adc shrl xchg cmpsl ret xchg je stos lock les rclb push jns scas cmp les jecxz lock jl outsb xchg add add (bad) mov cmp inc dec or push dec (bad) or pop adc push clc add movb pop inc hlt xchg pop mov push sub inc dec cmp arpl aaa test data16 sub aaa aas sbb adc adc push mov or arpl jne or dec inc in and jle dec mov mov inc lock pop fs mov mov mov or mov xchg (bad) sub or clc or call or mov pushl dec inc sub sub and sub push pop sbb cmp test xor and dec dec xor (bad) ja sub ret movb mov sbb add in adc notl sbb xcrypt-ctr cmpsl sbb mov add enter (bad) es adc inc or je pop nop test push repnz mov arpl cs adc das sarl mov push mov mov sub sub leave or repz (bad) stc inc les test dec xor dec jne jo inc call mov xchg pop xor xchg das or adc mov or adc ret jmp pop push pop je sbb push aaa pop outsb pop add imul and pusha ljmp cmpsb cmp and push out shrl movsb outsl jge cmp rorb outsl adc loopne vmwrite test xor sbb and add or dec push push xor jecxz pop fwait rcrb repz hlt xchg mov xchg inc add rcr jp lock fisub ficom add repz or mov es and sbb jb in push or xchg pop subl xchg and jb mov push out test add mov xor mov push pop push dec dec dec inc dec push add cmpb xor int3 jg lods insl mov add xor aaa aaa (bad) jmp dec mov push add inc push (bad) test mov mov adc and pop lret push out sub xor adc pop mov cmp jne sub push addr16 ss mov insl imul jmp lcall dec leave rcll mov fnstsw lea mov pop add ret dec pop inc icebp lahf lock mov inc les sbb ljmp cmp aam xor or (bad) push sbb (bad) leave clc mov (bad) xchg mov lock adc cs clc jnp ljmp cmp pop jbe shll (bad) xor cmc or inc pop or (bad) pop dec adc pop mov icebp shlb out and or enter jb fbld daa rolb (bad) sbb jne js dec mov or clc test adc fcoml movsb cmp int cmp pop or out and subl jae sahf inc pop pop loopne or sbb adc aaa cmp dec or mov sub aaa add xorl pop add ret sbb aaa add inc negb lar xor cs ja jbe sarb adc (bad) clts popa repz pop add add sub insb ss jb outsb adc call mov (bad) cmpsb push or inc lds fisub and cmp inc push enter es adc jp push push cmp dec sti push mov push jo fstpt xchg lock shll neg cmp pop and rorl and inc incl inc fdivrs inc push adc inc ret jb inc cmp call jl add cmp orb outsl cmp cmp test es bswap jo pushf ds fstps cwtl inc mov pushf in or jns xor sbb nop xchg sbb sbb inc push xor adc ja (bad) js xchg fiadd enter stos xchg fs inc mov and add cmp cmp dec mov enter in cmp fsubr pop sub push xor pop lock mov push sbb sbb xchg xchg xchg lock adc push xor (bad) ss lret test push pop add push inc outsl rcrb fist in cs push sbb nop movl pusha push jno adc mov mov or dec mov int3 sub sbb mov mov inc lock fcoml push pop leave mov inc insb and addl ret add push insl bound xchg and adc sbb or imul or jne sbb insl popa in cmp mov ja adc cwtl xor addb pop jbe add adc or stc sbb in push fs push dec or and xchg out (bad) pusha sbb ja mov push xor inc push ss and mov repz inc and add inc mov or outsb and pop or mov pop xchg sub add into fwait cmp or divl movsl add sbb mov cmpl pop inc sbb or and jge adc dec movl xor call loopne adc and inc sbb push stc inc or push or lea cmpsb fnstcw mov adc adc dec decl or pop hlt loopne jbe and cld push lea subl dec push insb or test lret add aas lods sbb sub dec pop pop push push xchg (bad) testl pop push add add inc mov fmull add add jno stos or pop add and inc adc and jnp andps lds movb push scas add or pop popf adc pop xchg push adcb loopne push repz adc jp clc cmp rdmsr rcll dec (bad) loop insl inc lret lea sbb and cmpsl dec dec dec mov das or inc pop arpl mov or sub push pop adc add ret and and mov mov leave scas roll and iret out sbb pop notl xchg pusha stos neg pop (bad) (bad) mov push cmp mov js gs jne enter add fndisi(8087 xor xor outsb sbb paddusb lds lods add nop xchg adc mov or sub bound inc adc cmc cwtl or or push test add js sbb fadds addr16 or inc in ret add push or or and push in mov (bad) fist push rolb mov lods lods scas out and and imul dec and push pusha adc addr16 and push push add or add lret pop xchg mov (bad) lds or sub dec movsb movhps loopne xchg loope les sbb out jbe clc and add mov xor mov adc jns pop bound pop add cmpb lret movb mov pop inc inc mov or inc (bad) jbe divps fist mov add push add ljmp sbb add add add or ds mov mov mov mov xchg mov mov mov mov mov push lcall in (bad) jmp ljmp jmp jmp jmp loope jmp jmp jmp jmp (bad) (bad) fdivrp (bad) fdivr (bad) fisubl fdivr xlat call call call call call call call dec add jg or dec dec dec (bad) sbb mov jbe sbb push push in or sahf lock pop push mov xchg adc out cmp push push lods in pushf mov push jns (bad) int3 aam push add fdivrl sti cmp push xchg push sub push dec fidivr out pusha ss mov xor ss in jnp les push xorl push sarb push movsb xchg fidivr dec sbb inc fs sub je jge call or call in jns add (bad) loopne pusha data16 data16 mov sahf int3 test mov cs popa outsb bound nop fdivl sbb ds gs test (bad) jb popa shrb leave nop pop fiaddl fwait (bad) aad jecxz or or adc fstpl mov sbb roll and inc sahf dec test pop bnd add dec int3 add inc inc sbb js clc ja mov push add aas incl mov mov pop nop add ret pop and jbe lret or imul push ret or inc je pop dec push movsb add and clc dec js jg jg,pn push xchg push jne pop in jg sub pop jo xor pop and addr16 fs add mov fwait clc sub imul push adc push push or xor or push inc cmp cmovle jno dec jb push dec popa je andl push insl fdivs les adc hlt jg,pn ss sub hlt jo xchg mov (bad) adc outsl stos jbe fldcw jge sbb bound (bad) push in or dec adc adc pushf adc xor rolb (bad) xchg test pop jmp jae in xchg fs or xchg in and or dec jmp es lods push or push loopne jle mov in cmp rorb push imul dec jnp dec nop daa or mov fnsave imul and pop inc jno std sbb fmuls mov outsb mov add xor xor (bad) cli (bad) xorb cmpsb jo adc add xchg mov mov mov ret xor adc and xor add and lldt add push clc inc pop adc adc es push ss jne pop add pop and adc das dec mov xchg add add add cmp push add aaa mov mov lock mov test mov nopl sbb sarb es mov mov mov add push mov sub xor cmp sbb repnz incl in decl ret inc inc inc fild std (bad) mov push ret sbb pusha sbb stc ret mov mov out cmp mov jl scas mov lahf out sahf jo mov clc sbb lahf out xor enter or mov push test dec les push push (bad) mov (bad) int3 in and jbe mov cmp je push and jle push xor mov mov sahf dec pop int3 out lret push jo sbb lret push jnp iret repz les idivb mov test adc push jge repz mov test mov frstor es add movsb stos (bad) xor in jnp jnp data16 ret push push mov loopne (bad) clc rcrb pop ds imul push cwtl or sub add sarb cmp (bad) mov (bad) mov es ds ss shll aad mov inc out fxch into inc push xorl sub push jl fidiv or adc mov loopne or jg pusha pusha push enter mov and xor icebp movl sub aas pushf xor test pop push jo inc dec roll adcb add push repnz in inc idiv repnz adc adc fsubrl push jne mov lahf aas pop xchg mov xchg bound jno xlat clc ss sub jb cmp aaa repnz sbb jmp mov (bad) mov fildl sbb inc in add push inc jmp mov jnp cmp mov add xor lods sub inc mov add and leave xorb (bad) sub jo ret jl adcl aaa popa inc xor pushf and add mov add or or and xor adc push and and jns hlt fiaddl jo mov cld cmpsb push cmp adc jns jnp push mov xchg cltd cmpsb lahf out sahf mov int out cmp loop in inc sbb and xchg push push push add aad mov lods sti xchg jecxz fdivrp push std push mov cs insb mov push jo je js sub add lock inc out push adc or add inc cmp lahf pusha push scas push mulb cmp cmp mov js xchg adcb mulb jo cmpsb paddsw (bad) out add xor das or aad mov and jecxz pop (bad) pushf (bad) outsl dec sub cld mov nop jmp jmp lcall or lock lods dec push push and mov mov sbb aaa adc add int3 add push sbb sti mov stc add inc movl mov pop sahf or icebp hlt sbb inc adc jne or add std mov pop mov aaa mull rcrl fisttpll ds and roll daa int3 cmp icebp pop lock andl xchg sub or dec jmp mov sbb ljmp xchg leave nop cmpsl jb mov addl ja pop xor inc sarb lods sbb fmulp int3 push xchg sbb or push dec dec push pop dec push leave push inc push inc daa push push cs jo daa or xchg or adc popa clts (bad) and mov xchg dec and insl xchg daa dec push jo imul mov mov popa push xchg or ffree add mov stos add inc lods das jo pop repz xchg xor subl jo mov fsubrs and xchg and nop push inc lret andl jg nop imul nop lea mulb adc adc in dec jle addl sub ficom adc xchg push adc out into push mov sub jp (bad) bound je out je mov mov scas dec inc (bad) cs out pop ds cmp xchg inc and or add fimul mov jmp adc test or push inc (bad) mov sub push or test sub (bad) push movsb fsubr or dec and fs lock or mov jne sub cwtl pop ja (bad) xchg jbe adc and or popf add push adcl add sbb and and dec arpl retw sub push or loopne sar dec jne ja mov jmp add sarb cmpsl add and popa pop and mov nop push or pop add lods sbb xor jne cli test mov or adc adc xor rcll sbb and xor and sub sub pop and pop scas pusha inc inc jl cmp sub sub add mov mov loope addb mov fidivrl test add aam mov dec push inc sub out sbb add xor sub dec je ja and cwtl xor push clc (bad) mov in ljmp cwtl adc jmp mov clc inc pop and adc mov xchg mov (bad) adc andl add les or pop mov xchg aas mov add (bad) rcl cmpsb mov lea mov cmp hlt (bad) jmp or push fstl dec imul inc adc or push lret and pop or lods lretw cmp test or xor movsb and cmp inc or movsl jl mov mov push xor sbb pushf xchg and rcll call and iret push sub push inc push push jp xorl sahf lretw sbb cmp in (bad) push daa add jmp in jle jne jae mov inc loopne mov mov shlb cmpsl push sbb leave inc pop adc cwtl fs or aaa sbb push mov mov ficoml push insb insb push into jnp sarb sbb lock sahf inc inc (bad) lds push mov add popa in sub add enter iret imul sbb orb mov or cld insb dec inc add or adc insl and mov aam adc xchg outsl inc add or adc mov and rcrb mul rol (bad) ficom or pop push mov ljmp xchg pop cmpsl aam xchg cmp std inc jecxz xlat fisttpl sbb push test jge mov add push rcr pop lsl add jb mov lcall movb jmp cmp jne cld adcl and adc movsl (bad) ficoml cmpsl jmp ljmp sti mov or adc cmp lcall xchg lahf sub inc add (bad) imull add inc dec mov nop fdivrl cmp inc test push xchg lock add and in sub pop (bad) test popa lea or dec loope les inc sti inc inc jmp sti or fsubrl inc jae shll xor and outsl ret mov scas fprem inc cmp les sarb std cmc es sub add pop das in and mov cmp je mov cmp movsl lds adc in lock loopne in lea (bad) xlat js ret jne jge pop lock or ss adc cmpl push fadds add nop iret xor cmp adc outsl dec scas mov mov dec aaa sub rcll mov pop sti push cmpb xor pop dec jp mulb push cmpsb jno (bad) push cmp xchg pop shll lahf xor sbb inc inc jo mov sub and adcb push imul fmuls dec in mov test sub sbb jno pop rol popa cmp push jno sti popa lock mov sbb mov (bad) mov ja je add es loope push (bad) cmp pop (bad) sti lcall fadds inc push cmp shlb inc inc lods add cmp fcmovnbe add xor jle jo in sbb cmp mov inc or data16 push cmpsb pop lods adc push push inc sbb lock shrb pop inc shlb test cmp in and push ret xchg add jmp or cltd cmp push lret lcallw mov fadds inc cmp jge xchg call xchg sbb cmp leave sub lods mov inc cli jbe adc mov cmp idivl sub cmp lods mov in or (bad) imul test jb inc xor sbb push xchg push xchg imul mov popa aaa adc jo fistpll add cmpb js push adc pop adc dec jne xchg lcall or je out ds jne test or mov (bad) rclb and cli popa adc repz lahf mov clc ret shrb out dec test (bad) dec jge mov push fiaddl sub add or imul lret jo cmpsl sbbl sbb out mov mov lea lea add adc jmp xchg (bad) aas cwtl popf add xor sti cmp je ja mov in out cmp lock mov sub pop jb jae pushf lods or insl mov inc pop js lea shll imul scas lds sbb jo cs adc in sbb mov mov movups inc loopne push or mov push push testb jecxz (bad) push ljmp xchg cmp mov int3 ret inc jmp mov xchg hlt ret loope,pt jmp pop loop movswl in aad mov pushf sub test push (bad) orl push cmp (bad) out pop outsb xor (bad) movsb cltd pop push push (bad) negl pop (bad) ficom pop or inc xchg fdivs mov jmp lods cmp and ret dec cld jbe dec out xor add mov fwait or xlat or pop loopne stos xor xor ret fdivrl das movsl and call push inc ja addl scas jns pop ja or aam adc aaa or inc push ja insb imul out push and sahf mov lea js or stc sbb scas mov mov push sbb (bad) cmp fistpl es (bad) sahf add stc fstpl fwait jmp sub add out and add push movsb jle (bad) ss sub imul mov imul pushf add jmp pop dec adc or cmp in jmp sub mov push adc sub lret jo dec shlb addb lods loopne loopne dec pop push push xor push inc dec rcl out sbb fiaddl inc stos mov movsb ret repz mov push add inc repz aam xor mov lock and jmp (bad) xchg jecxz sbb add xor jo mov dec jo mov pop and inc inc insb popf jne sub mov cmpsb lds pop mov jecxz lret inc test sub xchg loopne and mov es in cltd nop mov add in mov (bad) out mov sbb dec sub add mov add pop jno je popa push dec push sbb add pop and dec push push stc mov aas push adc mov (bad) in add adc rol inc es int3 dec movl push jne mov ret add jne jecxz and (bad) aas push cwtl push mov clc mov (bad) ds adc ret inc incb or mov add xor push fwait inc push cmp nop fbld inc xor adc and cltd xor cwtl xor and xor ret jo sbb ds inc insb cmc sub lret adc sub sub insb (bad) or cli jmp and or loop sub and push ljmp xchg or mov stc (bad) arpl cs push pop outsl je test pop out add jne and leave add mov push or pop leave jmp icebp or or and add out movl pop push movnti or add jne mov sub inc sub lahf pop fs push adc rclb adc adc add jb and dec jmp mov dec cli cmp rcr (bad) push and dec or cmc adc (bad) arpl push mov inc jb sub jge cs imul mov addb dec jne je ret jecxz fwait popl repz dec pop add imul lds imul add negl and mov add es adc enter jmp sahf aam mov ret dec lods sbb push cmp insb clc add nop pop pop add mov xor mov mov push std xchg lea mov (bad) push xor jnp je inc (bad) aad sbb (bad) adcl add insb or add adc xchg push xchg fldl aas jnp push push mov nop das jmp add out sub call insb test mov andl adc add nop lret ja sub rcrb rol stos mov imul xchg pop or or fwait sub mov scas pop loopne out popf dec (bad) enter sub addl lahf pop jge xchg jnp add inc push or and pop lea pop out mov pushf jae or pop adc jge pop lock pop add test test adcb add mov inc mov add or sbb sbb clc or pop (bad) jge mov dec adc cmpsb mull dec push orb push outsb sbb jg pop pop out shlb mov imul and jl and push adc lcall mov cmp adc test add rcll add jmp or dec or or adc cltd cltd (bad) or cmp push pop xchg lret adc pop je sti xchg or or cmp cmp or sbb insl sbb dec or test dec sbb popf mov pop sbb faddl lahf in in push or sbb xchg stc dec jbe sub lret test pop clc add fs push jl lods fisttp ljmp add sti cltd push xor push in dec insl (bad) mov cmpb aad jecxz and ret xor adcl stos ret nop in push push add sub lds in sub sbb cld adc adc push icebp or je push sbb sbb cmp les xor mov add and and jl sbbb outsl push sbb add jecxz cmp mov add mov add pushf inc mov stos cmpsb cmp lock mov pop cwtl and test mov vmaskmovdqu loope dec fldt aas jg (bad) xchg add rclb inc rorb loope adc (bad) xor or and xchg adc sbb xchg jne push sub lds push js add rcll cmp push popa xchg push jno sub xor out mov addr16 or in fimull loope inc mov push dec enter or mov mov daa jae mov outsb push rolb add popa push jmp add dec je sbb (bad) cmpsl std dec les js inc push add pop cmp push lcall push pop add jp jmp rorb or add pop test lods pop aaa loope psubb inc push das les aas sub dec sbb push adc sar cmp cld add adc aam dec int3 movsl push sbb pushf (bad) or push inc insb mov flds adc je push fs imul das add push negl jae je or (bad) xor and arpl mov or dec push pop mov xchg and mov cmp lock mov mov clc movmskps in xchg sbbb mov pushl aam or adc add mov xor mov push xchg cli or and xor sbb fwait lock andl cmc mov push subl push jge ds fldcw pusha push cmp (bad) add inc or (bad) repnz mov sarl out mov dec or pop into pop or inc add int3 ds pop jbe enter lret test dec sbb (bad) in divl xchg cld ss add xchg clc or mov inc das dec dec push (bad) xor sub aaa xlat adc addr16 mov fcoml (bad) into xchg repnz js or in pop or and nop or push pop cmpsl push lret rorb and jae clc cmp jne push pop mov out cmp clc jne sub xchg add loopne and pop inc loop test pop aas cmp nop jno push cmp sbb push fbstp or insb cmpl rcr adc (bad) push je pushf or insl ss dec mov std pop inc outsb adc cmp jne mov pop and pop add inc dec push push dec fist sub (bad) dec loope (bad) push xchg cs or mov mov (bad) insb je or jne (bad) je jb inc jbe jnp jne push shr sub push or outsl xchg sub bound ficompl inc inc mov or add add repnz add mov or cmpb and or push add mov popa mov cmp dec add nop sete sub xor push dec adc push mov dec mov push adc adc test sub jns dec push dec mov dec jo mov out imul push cmp incb or and (bad) xchg jg sbb addb jmp shlb xor push pop push sbb ret insl inc dec das pop dec xor and das les in loop inc loopne mov roll push or inc inc lret fistpl mov dec add push xchg (bad) or xchg push inc test xchg int dec xchg insb in push inc lods imul cwtl mov pop popf mov push and ljmp sbb and in ds test fcoms jmp xor (bad) cld mov in cmp cli clc out fidiv dec and mov push bound sti lds mov inc (bad) cli cmp jo xchg cmpb inc jg pusha push (bad) sti sub sub imul pop or push or add mov sarb test imul or cmpsb imull lcall test add xchg subl pop mov stos cmp jle lods call or add add pushf push adc cli imul push in pop pop ljmp adc and xor cmp push pop sub inc xchg push mov jne shlb add inc pop mov test mov test aam pop mov xchg push in (bad) (bad) mov hlt hlt pop add push mov out add pop iret loopne lret sub hlt je adc xor fiadd jno inc mov or add arpl repnz mov fdivr push add push xchg fsubs add push pop inc dec sub dec and cmp pop ret insb and jne lcall rcll sbb xchg mov imul and sbb dec mov sub imul ret pusha (bad) mov rolb dec cmp mov nop ret mov cmp xor pop ja (bad) test stos je jg push mov and js mov fcoms adcb movsb roll fildl inc xor fisttpll xchg inc pusha jmp sbb test cmp sbb sbb push mov stc sbb sub push mov adc popf out ja mov nop add pop ret rolb in or push xchg add pop rcl adc adc add mov fwait add (bad) jecxz xchg add sbbl pop movsb bound es adc in xchg (bad) rcrb pop jge mov dec sub jle ss movsb adc or inc (bad) lcall inc jg insb testb je dec sahf inc inc mov mov or ja jno add out xchg lock mov ret sub jno inc sub insb jg jo and push or inc xor cli add mov adc xor test sub pop cmp movups in mov pop aaa or icebp adc xchg mov sbb pop aaa cmp je pushf int push les jp mov sbb je mov xor or or pop push add shr inc pop sbb jle imul addl jl ret jo add test mov push mov push add mov imul or adc and mov stos call cmp js inc stc fs mov push dec in lea and and lock les js ret fistpl inc outsb pop je mov movb ja imul mov push add test xor popa popf bound mov and cmpsl sub iret push add push sarb xor aas mov xor rorb cs je mov ss je and or inc loope cmp addr16 mov dec and sbb ja and and jo mov push pop or cs pop pop dec dec jb or shll cmp js enter data16 movaps lock push das nop cmp sbb sahf adc (bad) insl cli cmp inc push xlat sbb jnp rclb pusha push out sbb mov sub incl cmpsb sbb stc insb mov add push pop pushf xor mov in nop xor mov das popa mov aaa out and mov je sti mov xchg stos shll leave je push cld std xor mov push pop bound loop rclb ret pop and and rdtsc loope loop dec jp add insb xor push adc and adc jno cmp dec test push mov pop pop sbb mov cmp cmpsl cltd adc adc dec mov jnp dec mov inc dec xor fidivrl and (bad) fmull xchg dec xor daa jno pop push les xor sbb repnz push dec mov ja mov lods adc nop jle xorl inc (bad) lods dec mov (bad) std add jge push pop aas mov or add cltd and popf adc jmp dec mov push pop ja add outsb xchg or mov add pop inc (bad) sbb adcl inc cmp frstor out push sar add inc or test bound or or dec add pop enter jne test mov (bad) sbb and pop psrld mov xor dec ret or test mov and (bad) xchg lods or xchg cld add push popa inc mov les push mov sbb clc fisubr ja mov xchg fcoml mov xor xchg adc addr16 mov jp add movsb daa mov das stos add add pop roll xor adc dec mov add imul (bad) mov idivb xchg (bad) sub cltd or (bad) lods and pushl dec pushf push js add ret pop push sti loopne jle mov rcrb jne into lods inc cmp pop and iret add sbb stos jne push add repnz sbb mov cmpl jle and lock ret mov ljmp aam ja call sahf lods jne push adc adc adc mov es xchg sbb mov dec sbb xchg push pusha or xlat sub cmpb test (bad) mov shll js decl fwait rcr mov inc or loope sti and mov and adc lea fucomp mov and in adc add mov add mov lea and gs dec sub inc xor sub add and jg mov push insb push mov mov pop and fldcw and xlat shll ss jno xchg xchg xor add add dec enter add add add add or push (bad) into push ss popa int3 rol push mov pop sbb notb mov lods roll push (bad) jne add mov shrb loopne sub mov ds or ficomp lea xchg sbb cltd rol fs adc loopne mov fs jmp xchg mov outsl ret inc push push cwtl add sub or ja jl and push or leave sbb (bad) inc inc adc add xchg dec cs enter dec jp shrb add push inc add nop mov shl loopne jmp sbb sahf inc ret mov and xchg imul mov jns push (bad) xor jne push hlt add loopne (bad) sub cmp push out ss mov push faddl sub mov push (bad) aaa call inc jne idivb push addl add pusha push push cmc fs test ret fildll icebp test or inc es xorb pop mov addl push add nop sbb mov jle jne aaa and xchg jo shlb je push sub jb je sbb sbbb mov ds sahf fs loopne repnz add or push mov inc adc fidiv loope lret mov jb xchg sbb es fiaddl pop inc data16 int3 pusha mov xchg scas sbb (bad) pop cmp sbb or inc or add addr16 push fcoms in jmp push outsb je sub or inc loope xchg adc loope lahf sbb stos adc daa aas fwait js shrb xor push pop mov in hlt out ds push sub stos fistpll insb loopne sti jmp loopne call jno adc pop sub (bad) js cmp cld and dec (bad) in hlt (bad) xor xchg iret jl or mov push push mov movsl inc pop pop js or push push jle push fistp js fmull stos jne,pn pop push imul ja lds es aam mov lret and icebp (bad) jl rolb inc mov addb clc mov popa xor pushf or fs cltd push pop xor clc xor sbb xlat ss (bad) jns imul into insb rcl nop push pop dec pop sbb add arpl rclb mov les les adc pusha jo cmpsl shll lock and pop add pop push xchg inc iret adc dec inc inc out cli push fmuls pop movsb inc or dec add data16 push fadds mov cwtl loope push (bad) jae xor mov cltd addl pop xchg pop xor cltd xor mov fisttpl push outsb loopne (bad) daa lods aas ja out (bad) daa xor or cltd int3 mov xchg sbb push jne mov adc push lcall pop add aas lods mov test add adc or add xchg adc mov (bad) jbe insb xor or adc jb (bad) out jmp sub sub ret in jb or test adc inc mov add adc popl jmp orl mov mov add out mov test jmp sub adc mov push or nop xchg pop rorl outsb cmpsb adc push movsl adc fsubs pop mov inc scas scas push xor das dec mov xchg sahf ljmp xchg push test mov inc jae addr16 jmp fisub pop fimul inc add inc or mov dec inc shrb dec push inc sub dec or jne push sub dec jmp pop out scas add jmp adc mov inc cld (bad) inc adc pushf xchg insl (bad) sbb sub aas jbe sub adc inc aaa xor mov xchg jle pop mov jle add add jb adc mov push xorb and or or es movsb sub jno (bad) xchg or sbb cmp xchg mov stos sub (bad) jne in sub push dec push add jle push or jecxz jmp xchg sub popa les cmp jne add add sub sbb push pusha inc and add pop add div mov js adc and test push pusha mov stos inc loope sbb mov in das adc nop les add cmpsb mulb jge clc jbe sahf or mov (bad) mov in insl fwait jb xor push mov mov pushl mov xchg and or addr16 push sbb test iret pop cwtl mov xor pop mov adc je and adc rolb pop push and inc push sub or mov pop js add outsb hlt or dec push or jo dec xor fisubrl xchg stos and pop mov and movsb jo push cmp adc dec sub ss cmp lds push movsb aaa mov arpl jbe lret mov sub push dec jp adc add std jge jecxz rcl shl movsb adc mov xor jg jg,pn adc pop rorb das push outsb addb or data16 inc mov out sbb or fcom aad inc push dec and dec or test inc jl scas iret (bad) jno or push mov add xchg add jle or or mov mov mov cld aaa je imul xor loop inc mov test xlat dec jno jle inc addb addr16 xchg pop jbe adc sbb add aam ret (bad) aam call dec inc or jne insl mov adc inc loope push js or fwait jne test add inc movnti jge popa dec xchg xchg jno scas fs inc pop leave in dec pop lahf add dec lahf outsl and sub cli fiaddl enter fnop jne adc push iret dec sbb in fs cmpl inc icebp bound sub pop or ret pop aam in and pop push rcrb dec or xlat in stc mov dec in mov imul shr call pop push dec or js lcall out icebp adcl daa or adc push push or cmp lahf ja mov mov inc aas xor add and test mov ret sub inc add push sbb and push lods mov cmp nop cwtl pusha addr16 and add adc adc repz ret mov lock mov xchg mov cwtl mov cmp adc lock push cmpsl cmp adc adc shrb lahf or adc or xchg cmpsb dec or dec outsb les (bad) divl pop stos and sub add sbb inc sbb xor rolb ficom dec add aam pop push jne dec shrb mov aas xchg je int3 pop push inc lock jae leave mov adc adc pop jl and and mov jb pop mov or lret sbb sbb data16 and or mov daa xor (bad) mov mov mov push mov mov xchg adc subb add aad jo sahf icebp inc mov add sub or rcrb cmpsl mov add orb xor mov cmp pop fsubrl popa mov pop push in fsubrl std dec push fmuls popa pop pop push jle xchg outsl (bad) insb ret nop in arpl loopew out pop fcmovnb das mov cmp adc mov test sub xor fdivrs (bad) iret jl adc fs and sbb and or push (bad) loopnew jo dec lret cld xchg push loop push inc or cmc into xchg adc push xor lods dec sub push je dec (bad) data16 lock rorb inc mov loop nop loopne hlt or dec int3 pop sub fdivl mov sub shld push add cli movsb loopne test push fwait adc pop sub js cli adc call loope ss xor cmpsb mov sub xchg jl fiaddl out (bad) dec bound (bad) lea push sbb dec pop push mov ret mov push cld mov push clc fstl aam lods ret fs incb xchg add hlt xorl inc fs cmpl mov jl loopne xlat xor cmpb or jnp ds or add loopne and or adc or int call cmp mov (bad) xchg sbbb dec pop mov mov cmp inc aas sub xchg mov cmp inc adc mov xor int3 sti push shrb add jb inc inc bound push aaa sbb jecxz (bad) aaa arpl and (bad) sbb inc roll cli xchg popf sbb pop mov daa and and sub popa push or add (bad) or ret aas fwait (bad) xchg in xchg fildll jecxz mov xchg icebp rcr add fcompl clc popa xchg mov adc inc and cmc sbb inc inc aad icebp xorb addb dec out adc mov add addl dec add add insl cmp push xchg gs ss mov fwait dec loopne popf imulb sub nop iret jae mov jl xor and and fwait outsb repz jg sub or je add jmp bnd jnp jmp in aam int3 push cmp fwait mov addr16 sbb mov fldl rol cmp adcb inc loop loope push dec push push dec adc pop xor push divl inc dec (bad) out xchg rorb ficoml ss add jecxz jmp mov add add and fwait mov adc mov mov push push mov push (bad) pop mov or out sbbb cmp js or push je jae test pop aam and jne fisubl pavgw fcmovb or adc (bad) xchg outsb cmp movsl lret les pushf nop adc cmp sub test cmp or pop movb adc mov jge (bad) jo push jne rcrb (bad) xor jnp sbb ss mov sbb sbb sub mov xchg inc push dec add js test inc movl sub xor sub push and roll sbb adc add call arpl inc je sbb adc mov pop shrb ja push inc dec test inc adc sub lea xchg fadds jecxz sbb test inc lea jnp lods push (bad) mov adc mov test movsb and add mov adc orl sub dec pop xchg inc es xorb cmp movsb cmp arpl lret jno outsb push jb dec pop xchg bound mov test test sbbb movb xor xchg lea inc aad js and lods cli dec cmp mov ret imul rclb sbb mov adc cld popa inc fisubl jne (bad) jo pop loop gs mov jne and outsl and pushf sub icebp dec mov pop or xchg lret hlt rclb sbbl dec dec into mov clc sub jbe xor seto out mov jbe (bad) pop jge enter mov sub shrl dec push data16 hlt mov sti sub out loopne and xlat xchg iret and lcall dec enter xchg inc push and in jbe aas cmp lahf pop jp push loop or adc loopne mov aam pushf fsubl pop mov out pop push mov mov ja,pn jmp repz mov daa iret mov push inc cmp setg jmp inc add lcall dec cmp setle cmp xor rcll dec inc dec mov mov sub cld (bad) pusha dec sbb xchg xchg rcl adc xor insb orb cmp pop mov or xor mov rdpmc je adc pop xchg out in dec stos fs push inc std sbb shlb mov push int3 in stos test pop xor xor push je imul add inc adc (bad) jp xor xchg sub (bad) adc sub imul push aaa sub sbb adc and mov lcall pushf or or xchg mov push cs aaa lock xchg xchg popa std add mov popf movb dec add js sbb fs pop lret push add loope mov adcb or dec sub aaa jl push cmpsl mov addl xchg pop or add jnp xchg mov dec pop add pop add lret ret (bad) lock scas scas push sbb mov ficompl fmul in jns ret jmp push sbb sbb sub lods or fs add sbb xchg xchg mov adc cmp push mov pop push adc mov test sub or in mov xchg push and lcall (bad) and inc lea movsb cs das int cmp cli add jns jge push fwait push mov lret push fucomip adc push sub jno add bound inc push daa insb mov dec or adc add pop test test adcl or dec or jbe and lods and pop sbb sub pop and sbb cmp jne in xchg call imul adc xor dec fs mov cmpb mov dec inc and cmp mov cmp je xchg dec or dec push pop fcomps cmp fisubr push flds inc out jge adc cmp enter outsb xchg les xchg sarl iret adc pop lret clc roll jnp xor cs inc hlt fisttp or int into incb mov cmpsl jne inc jns inc das add push adc rolb test (bad) pop insb test fcomps imul mov fcompl idivb push popa jne push pop mov test movsl pop popa adc xchg inc ljmp mov call adc push cli push push les sub pop xchg aas xor push ljmp popf movsb fstl and adc nop inc push sbb add adc arpl inc mov or repnz xchg cmpsb or test in nop scas adc and jbe pop mov gs pusha bswap jmp sti sbb stos push jnp sahf (bad) aaa scas mov push lods sbb fistp pusha push out lods call lahf incw std mov or jne and jb and mov bound xchg lahf xchg (bad) insb sub adc mov mov xchg (bad) hlt enter cmp and pop mov mov xor sub sub pushf mov pop (bad) dec movsl inc pop (bad) imul dec xor xchg cmp mov push in sbbb cmpsl pop adc cmp inc (bad) sbb mov arpl aad outsl mov insl in cs cli rcrl aas adc mov inc dec jne mov insb (bad) mov rorl loopne shrb push dec sarb cmp popf fs push fucomi ficom inc pop xor mov pop sbb mov into add add (bad) push dec mov rolb jne push dec movsl sarb outsl pusha cld lret clc or mov cmp xchg dec xchg movsb jge inc fcompl xchg jmp sbb push xchg sahf mov (bad) (bad) mov (bad) pop jne test sbbb xchg pop pop popf xchg scas xor (bad) aaa mov sub rcll clc stos jne push fist cmpsl jne inc adc or adc push in xchg icebp imul sub test push dec addr16 iret imul adc aas (bad) jmp loope rorb mov (bad) fildll movsb fstl test sub push sbb sub adc or pop cmp jle imul rcrl cmp or je add sbb or xchg pushf ret cmp mov insl daa xchg sub cmp push xchg sahf or ss mov popf sbb mov add imull push xchg scas lahf insb jecxz lea iret mov or dec sub or loop push pop and lods sub dec push outsb imulb pusha sti and pop fs and enter or pop pop mov andl sbb inc jge add sub sbb ret cmpsb cmp cmp ret ss mov mov xlat inc sti sbb mov add movl lea xchg or stos jne sub je orl sub sub cmp stos pop imul inc or inc adc cmpsb dec adc adc adc add xor rclb or sbb xchg loopne add inc sbb inc stos ss les cmp inc xor push xor push aad lds push dec (bad) jb mov nop mov dec push xchg and daa enter inc call adc insl and jnp addr16 cwtl xchg nop aam testb rolb add dec test stos cwtl js add cmp inc push test or movsb (bad) out add lea or mov jge dec xchg mov repz test out pop mov mov push inc je and mov (bad) aas push add imul shrb xchg dec add pushf or mov loopne xchg xchg popf fisttpl in and sub mov adc push lret enter scas ffree test xor iret sub movsl xor push inc adc xchg insb xor or aas popf in mov sbb cmp repz or adc dec mov fidivl inc push and adc (bad) dec sbb nopl or xchg (bad) mov in and inc and jb dec cmp std out cmp insl pop cmp xchg mov mov sbb inc pusha cmp mov or les push stos or push inc push pop and sbb faddl mov adc ret add push mov inc imul sub cmp js mov add mov dec xchg loopne lea or jle and jmp ja mov in jnp adc adcl jno push add repnz add sub and adc aaa or (bad) mov xor adc mov ja pop lcall clc dec jae enter fwait adc imul fsubrl push add test repnz and shrb pop andb inc shl ret sub xor std dec mov mov xchg or fidivr ret es sbb adc add in negl and push xor lahf addr16 mov andl sub xchg jnp push in pop fadds cmpsl push lcall test ret ret dec jns push gs inc and and mov ja lock mov lahf jne sbb (bad) out and sbb inc scas mov xor mov (bad) xor jg mov adc sbb mov xchg movsb pop mov arpl sbb or push or shll dec xor and hlt daa lds sbb or shll loopne push jmp dec mov movsl outsb je sbb mov and mov inc or mov jo movsl data16 xor mov add adc fsubrp or nop sub pop mov or mov incb das aas pop data16 outsb inc movsl xlat and je mull push aad arpl inc mov mov pop rcll les mov ss pop xor push inc mov mov mov daa add sub mov cltd sub ja cmp stos leave add cld jne jne out xor icebp xor or mov ds fwait dec loope iret push add push inc std xchg inc mov xor outsl push lods push pushl add lea hlt or fisub push adc inc push xor push adc dec add lods add xlat sbb xor enter add sbb push sbb leave or (bad) xor pop iret mov push notl cmpl pop pop aad or ret push shll dec test movsl pop sahf sbb add shl loop sub shll cwtl ret sbb xchg sub add sbb mov aad pop xlat test (bad) pop xor dec (bad) jmp rcrb sub pop adc ret sahf aam mov lods sbb mov test adc inc pop pop dec popl push roll and jge push push cmp call sub je push pop mov pop mov xor jb or inc pop insb testb sbb jmp pop adc outsb and test jno mov addb sbb in (bad) mov push inc shrb add test add pop and in jae adc rol mov jmp inc mov cmp inc sbb inc and mov mov incl add cmp jne mov add js jg nop xchg mov test push rcll outsb insb mov enter add jmp and xchg (bad) dec mov in fldenv jl nop push jb or ja fdivl sub jge cmp pop fwait sti jae pop and xor out pop or xor mov jne push hlt or icebp popf inc lret sbb mov inc sbb xor add inc (bad) shr addr16 arpl or pop adc inc dec xchg mov ss mov sbb mov sbb dec cmpl cmp dec mov add dec shlb popf adc cld mov or popf cmp push inc xchg fnstsw mov insl xor js mov inc push jmp out inc adc inc xor or ret push sub sub scas adc and sbb rclb pop (bad) repnz or adc mov push lods mov (bad) cwtl (bad) sbb movsl jno ret das loopne sbb jl rcll or sub push test mov call inc sbb xor pop (bad) fild cmp lods fistp adc call (bad) mov and add add add (bad) adc nop inc dec mov and sub push lcall (bad) stc push data16 sub cli dec jbe and jp add jno sarb (bad) cmpsl fsub sbb mov dec or mov pushf clc add ret and fidiv add jns (bad) dec shll loopne fldenv mov sbb adc sbb or xchg dec sbb dec lfs fcompl and adc fadds inc test popl int3 dec sbb les pop xlat fwait enterw push xchg (bad) push inc (bad) jmp cmp add nop sub mov push and jp jne bound rcrb fidivrl push negb in push inc pop rclb pop loopne pop roll loopne dec (bad) sbb mov add jno and xor rclb repz inc sbb mov and lock mov xor loopne cmpsl xchg sub sub pop xor roll dec or (bad) and adc mov pushf sbb fsubl add inc pushf push push sbb nop push sar push push bound lahf pop stc test into mov rorb sar pop mov jns cmp push push das cmpsl js sbb pop aaa push jnp add mov add rcl enter cld imul outsl sbb cmp xor push push stos es pop in mov mov inc rclb lods sbb and sub xchg mov mov adc jmp daa pop daa fsubs add stos nop rorb inc scas fs inc jg je or dec jg add adc push and and rclb fisubr jmp repz mov inc or add lea xor adc pop pop pop les je sbb jl ror pop fs add xor cmp push push movsb xchg inc enter inc add sbb and mov or jo or stos sbb fimul sbb push add mov gs pop mov mov adc pop pop sbb adc push mulb adcb push orl mov or mov pusha outsl ret adc nop fstps (bad) mov add pop aas cmp push push mov (bad) mov sbb jbe (bad) and cmp repnz sbb inc inc mov stos push dec mov sbb test call test (bad) js rclb sub je movswl and mov inc adc jle add add add pusha jecxz push cmpsl xchg xor loopne icebp insl lea int3 push xor sbb daa push jns das lods insb pop daa scas pop movb scas xor popa and loope xor xchg loope (bad) add xchg jo out ret shrd cmp adc ss (bad) aad dec cltd jo lea fsubs xchg test jbe adc adc push sub pop aad mov xchg xchg lret or adc jne mov xlat shl push roll jle je ret push push add adc popf inc cmp and orl mov bound in cwtl mov shlb push pushl and xchg cmp lret or adc adc icebp popa mov mov inc popa jl mov or or mov jge xlat js mov les mov loopne pop xchg adc stos dec nop mov sbb ret pop sbbl cmpsl (bad) fnop pop mov adc xlat loopne push hlt jmp pop sub push sarb sbb xorb nop enter push mov test nop ret cmp adc jg dec mov lock cmpb gs push adc clc mov mov xchg sub or out lock pop add push pop (bad) mov push mov inc adcl pop mov sub dec arpl pop shll jl xor push sti and daa adc loope add inc push (bad) mov test jne add ds sbb andl add pop adc fldl fbstp cmp cmpps and jne jle mov ljmp cmpsl inc push pop xchg push mov mov (bad) dec outsb or xor and cmpsb jno mov ret lods in dec scas rcl xor aad pop inc mov cmp inc cmp add imul ret jne (bad) mov add cmp add add insl xchg xor push pop push mov push or cmp or movsl sub inc lahf inc add dec ret iret inc clc push adc dec mov push push or xchg mov sti pop cmc push ds adc enter cmp test or shll xchg push inc xlat mov loop dec and mov nop mov int3 pinsrw inc ja out imul lods lods and sub jg push fdivs (bad) les inc data16 lods shrl mov cmp push mov add jne imul sub inc pop inc xchg adc mov push jp mov inc enter mov xchg push jg add in xlat xor mov addr16 nop lret xchg pop iret ljmp mov mov xchg or imul cmp call sub dec cmp aam loope sbb aaa pop adc dec push mov in (bad) shll push pop dec sbbl cmp das ret rolb add mov push rolb and loopne dec (bad) dec adc mov mov or outsl adcl imul mov aam adcl aaa dec and inc std icebp sub jge mov or je adc bound jae jns adc fnstcw pop inc pusha rorb inc push jbe adc xchg add fisttpl (bad) xor shrb jbe add ret add cmpsl xor and and push pop cmp sbb inc shlb ret xchg js lds xor xchg shrb jle jle fwait jno in xor push repnz in jne mov mov sbb out xor and sbb jne std js jne push pop inc or inc pushl (bad) adc adc inc sub rorl aas movsl add pusha les inc mov push std xchg xchg js outsl jp or dec lods iret fiadd roll push ss lahf pop push sub sarl add lds out xchg push aam and cmp mov xchg pop cmp ret dec adc fidivr es inc sbb pop add add loop and int3 jge jg test popf rcpps push mov fdivrs push cs (bad) cmp loop xchg xor inc sbb sbb add into xor pop add push fstpt push sbb push pushf mov shrb xchg outsb xor inc dec dec enter (bad) ret jae movsb and mov outsl dec and aas imul mov push inc pushf jo daa imul pop push mull push xor mov add inc jmp jl pop je dec and xchg adc xor push das in or jae pop adc dec jmp xor sbb or xor (bad) lock pop into jnp add add cmp pop xchg push jg jge pop imul mov sbb mov add jo stos jne lods roll out inc sbb jnp cmp pop ljmp int3 je inc cs xor sub shr mov inc push (bad) pop inc inc adc adc xchg jo icebp sarl mov stos dec sbb add add push subl out add mov addl jae sub mov add mov adc lods dec add jae,pn mov pushl inc lods dec shrl ficompl pusha cs imul push je pop pop jmp mov mull add adc fmul in sub mov loop subl push or xor mov adc xor sahf lock add gs popa add enter xchg or xchg nop pop (bad) dec push sbb por add push stos adc iret adc cmpsl movsl cmp mov (bad) mov mov add iret mov xor jne sti lock xor (bad) and and sbb sbb dec mov lret enter sbb les jecxz test jp jne push jg les jo js pop mov (bad) cmp inc aam jmp test les mov add xchg inc je js jnp cmp insl sbb add repz mov pusha icebp and inc movsb in lds or or and in ror das shrb arpl inc mov xorb push push cmp test pushf movsl cltd sbb cmpsl mov cmpsl popf rcrl imul out jl daa dec jo mov imul daa add out je xchg cmc rorb mov cltd xor mov mov xlat push mov mov mov inc jmp lret jne cmp out lods inc (bad) out add mov movsl push inc and jmp and xchg addb les fist inc mov test jb jbe sarb loopne add (bad) jg add lock dec ret xchg sbb cltd pushf rclb popa jmp dec test xor cmp mov xor adc fisttpl pop popf jmp sub and daa stc sub jge pusha pop push sub loopne xor outsb pop cmp push jo mov add pop cmc lret add add add nop xchg mov nop mov inc add mov jle adc dec dec and (bad) lcall dec add test arpl imul loope push (bad) jg pop pusha dec xor roll dec and sbb mov enter pop mov sub mov sbb mov and (bad) sbb ljmp xchg fistpll imul aaa shlb push add rclb fnstsw inc jp xor rolb mov add inc sbb xor daa push adc call cmp inc sbb not jle or xor inc sbb pop push les mov (bad) dec or int fwait aaa lds mov push and add pop push push insl mov clc adc sub repnz mov sub in adc adc sub sarb mov mov mov adc push lret push add mov pop imulb or dec jnp es es jbe cmp cmpsl sbb lock jge in add or sarl push pop sub sbb cmpb mov movsb nop leave adc shufps andb add shufps dec adc push add push (bad) push push push inc notl jbe lret xor sub mov adc add test sub pop adc jnp mov stos arpl mov adc divl into cmp pop add daa xchg adc inc xor push jo xlat scas fadds jl lret add inc add lcall (bad) ja ret test cmp fistl sub cmp lret and add sbb push cmp out rcrl or outsl clc jge repnz fcoms (bad) cmp push insl mov inc ds sub mov or inc sbb test adc ja or pop sti xor push xor pop shrb andl clc sub clc adc insb xchg es fstl dec ret or sub dec sub int3 sub add adc dec push sub (bad) incl lea and inc (bad) cmp fwait les sbb je cld inc push xchg cmp cmpsl test adc jecxz in mov or adc pusha push (bad) mov xchg mov sbb adc mov popf test or loope ret mov xor dec push out or ja mov pusha or push mov cmp loopne xchg adc cmp (bad) (bad) and or js adc into inc xor mov adc adc (bad) cmpsl add adc cwtl nop in hlt jg add sub sbb repnz pop insb sub cmp mov or mull in insb test jnp and xor jg fimull lods aaa sbb imul mov dec fimull push mov sbb fs test (bad) pop mov sbbl jns push xchg mov pusha pop adc sbb push insl test or push jbe push xchg test add movsb mov pop adc mov adc dec rorl adc cmc inc hlt or sbb or cmp sbb cmpsb outsb rcrb adc lds xchg xor shrb mov push lcall jb adc call mov insl inc add push dec push jp jg push rorb sub sub cmp les and sub sub push dec sub dec clc clc lock dec jae imul cwtl cld mov movsl sbb rorb fmul push push sub popf push xor and jl sub in in dec sub mov jmp jnp pop cmp cmpsb nop mov ficoml and push std pop inc or or push movb xlat pusha notb add cmp add pop push mov mov jle xor xchg out je lcall sub add cs jmp jno sahf loop add or rcll add (bad) xchg mov push push dec mov dec mov inc jl jns jl,pn mov mov (bad) repnz push dec or pop push mov mov sub imul jmp loop sbbl pop inc mov je jge adc or in inc jae loopne adc das cs xor push mov and jle adc or sub dec add add dec sub dec ja and push out outsb pop push adc fmul adc ja or mov into adc into adc dec add add (bad) mov dec push sbb jl fmuls mov cmp jle sbb (bad) xor pop cmp and mov int3 or dec sarl fdivrs enter jmp or dec xchg mov lcall or nop or or mov mov dec add xchg insb mov (bad) outsb push das mov in fistpll cmp pop xor (bad) add scas push mov mov mov inc xchg mov cmpsl dec pop enter inc jns js popa out sub hlt mov sbb pop adc mov fadds mov inc sbb jns sbb mov mov rolb mov push shrl push or les jge xor or or lock incb cmp dec sbb xlat xor jbe in loop sbb xchg push push movsl xor xor push ret xor adc sbb push test es inc dec or inc mov mov add inc xchg fwait inc jmp clc xchg sub test xchg cmpsb cmp inc gs sub hlt mov or mov add loop mov test cmp adc push ss lods jmp pop push test push push mov aam jmp inc mov fwait push fwait scas aam xor xchg sbbb out xor movsb js add fistl sbb mov mov or fdivrl dec mov add xor mov idivl rcrl sbb pop fdivl daa jnp insl mov lea outsl (bad) dec test and jne ret lea icebp push (bad) mov fwait jne lea pop add push pop inc push insl (bad) dec rorl pusha cmp aam ret sti sbb adc ffree inc sub add add popf sbb mov cs lret jg aam add nop stc or pop fdiv (bad) jae rclb add inc xchg dec or adc cs push iret and adc test ftst adc cwtl sub jb or jp orl or ret xor mov arpl push mov movsb inc es pop or xlat add out xor mov mov push aas adc (bad) hlt sbb adc sbb and push add add daa nop nop cmp add push adc scas or js hlt or xchg xchg cmpl inc lahf pusha add or or xor shr add adc cmp add inc mov sbb daa adc cmpl lock sub cmp insb gs inc out jmp movsb mov ret dec movsl push add enter xchg ja mov pusha xchg movsl insb jmp xchg lcall push pop push dec daa dec repnz ss pusha add sbb addr16 sub cmpsb je (bad) orl rorb or ret insl pop test push inc decl xor cmp test popa loop (bad) out das cmp imul cmp pop push dec popa jo push shr int sbb adc push rolb and inc jmp add daa add xchg inc inc mov movsb scas mov ljmp dec jbe loope int3 adc ljmp addr16 or stos adcl fiaddl push push shll sbb addl xor add mov pop or sbbb inc test mov out dec std test xor or (bad) jmp ja sbb hlt add bound orl insl cmpl cmp xchg inc push outsl adc xor scas cmp icebp and xchg mov inc add imul popa fdivl rorb add cmpl and pop dec sub aaa movsl jge rorb mov add mov addb lea xorb mov push add (bad) mov inc add xchg and cltd imul enter push loope in pop add and sub faddl sub pop and je inc jbe sbb add xchg mov mov xor cmp in or push jo daa mov ss loopne dec jae movsb call (bad) mov enter or sub mov (bad) mov jns sub mov dec pop pop mov js cli out sbb insb pop dec sahf push clc cmp jge out jno movaps push jne push cmc push aam sarb int inc rolb sbb sub ficomp push lcall cmpsb push jle sub insl and test jl stos dec adc sub call and xor popf sbb add sub cmp loop and adc in iret lock dec aaa push adc shrb aas dec aam adc iret sbb sbb mov orl imul add (bad) in dec or add dec mov xchg shrb mov add mov lret popf or jl push ds add es and ret adc and inc loope rclb add movsl xor orl mov call sbb push (bad) push in xor or pop hlt mov loopne shrb and add movsb push test out or push inc adc cmovo setb sub push jo add mov mov or add cmpsl arpl xor and inc xchg ucomiss adc jo out out scas je nop cmp sbb xchg push push mov cmp push cwtl mov and test ret scas dec popa iret mov jle loopne fwait inc jb pushf aam js aaa inc ret fsubp dec or push pusha loope jae adc and pop inc fimul ret lods ret aaa xor cmp ja push jg mov mov (bad) cmc aam pop test ret lret cmp mov ret mov or mov pop test pop sti push popa lods mov (bad) jbe cmp or xor fstl or mov adc (bad) adc les add inc stos lahf das or pop insb cltd pushf rorl movb dec inc pop idivl push jo (bad) pop mov sub or and or add xor sub jge (bad) (bad) pop iret xorb in stc sbbl mov cmp and and nop cs (bad) cmp les dec popf mov pop popf outsb (bad) bound test int3 pop or (bad) cmp mov add cmp cmpsl std dec iret iret cmpb push sbb inc fs js dec pop push sub add inc imul mov fildl clc in ficom xor or or imul push fdivrp add and jl cld dec in jbe sub dec cmp push pushf outsb mov cmp call fs lret test dec add fstpl jmp xor pusha leave es mov in xchg inc loope or sub in xor sbb and jne popf movsl xchg xchg adc mov loope cmpsl lock push jno arpl xor or xor sbb and insb daa (bad) into flds cwtl pop fs push mov xor je inc lahf inc outsl and xor out dec jne into inc inc out push pop add dec jmp xchg inc sbb ficom xchg mov fwait or push stos jo xchg sub jmp aam xlat pusha fsqrt ljmp lcall ret ss mov pop and jnp jo cmp xor push clc (bad) mov xchg sbb sarl and in push fldl push adc pop xchg adc pop add rorb daa pop or aad mov jp dec adc daa or sahf add outsl les mov es add popf sub adc sub inc (bad) out int sti or pusha xchg outsl lods sar test push cli (bad) prefetch or mov je adc je cmp jns push imull mov inc imul add dec or xor cwtl pop negl adc arpl lock cmp loopne dec sahf xchg rolb aad jno (bad) idivl stos test pop mov push add adc in popf jno sbb jp push test (bad) push in push adc push push fdivl fdivrs lock cmp out and ljmp mov fcompp nop adc jne push (bad) dec jno repz and xlat je add inc adc enter push push es pop jbe loope fs dec push or add dec push into mov and sbb push jmp add sbbl scas mov cltd mov scas lods push mov or mov mov or sbb ret mov lock jne (bad) mov or and addr16 js push xor or mov jne mov fmuls pop dec dec and adc fistl (bad) mov sbb testl in call fldcw rol xchg test pop sbb bound leave sbb push or fs fild pop pop and test add adc adc lahf mov cltd and mov mov mov jecxz adc jl dec ret fldlg2 adc push sti lds or add inc mov adc lock shl fs loope,pn inc movsl push xchg mov mov xchg xor cmp xor test (bad) pusha sbb cltd or mov insb or scas cmp mov push mov mov xchg or add inc mov xor cld adc (bad) scas and or addl nop mov or inc insb push dec insb pop jg cmp or add xchg add add mov inc fdivr mov pop clc add test sbb in push xchg in sub or mov cwtl mov inc (bad) (bad) xor leave icebp clc fs add mov xlat inc insb adc movsl xor insl (bad) push aam dec dec and mov and test out add adc xchg icebp add jp xchg pusha mov nop add ja daa in (bad) cmp xchg arpl push popa mov add je push mov push pusha lock cwtl cmp inc clc or loopne sbbl mov cs inc adc inc jge sub sti stos add add dec add inc popa inc loope dec pop and or out add add add sub (bad) push and dec je push (bad) rol pop mov lret xor inc xor cmp push (bad) xlat cmpsb sub jne sbb fdivr repz mov sbb lods pop sub or mov fild add cmp push jnp xor pop cmp inc or hlt sub lcall insb mov sti inc mov jmp push add rcll mov or jle jmp into push inc pusha jnp and add sbb xchg mov mov pop or sbb notl mov xchg imul es fcoms movsb and loope mov test enter cmp xchg inc scas pop xlat adc or inc dec and inc movl xor or pop add jo or add insb mov cwtl or push mov push pop icebp dec jmp xor and and testb inc dec inc mov (bad) add ret push inc dec stc or aas push lds (bad) xor loop or sbb dec (bad) mov pop or or sbb inc adc aas mov lock adc push mov sarl sbb or jmp mov daa sbb pop adc or sub adcb daa (bad) push pop add and dec mov adc adc adc sbb shll pop cmp push dec inc mov jmp pop mov cwtl sub xchg add cmp sbb inc fs (bad) and sbb mov pop or jno dec enter xor icebp dec (bad) flds and sub xor or pop movl dec sub cltd add mov testb loopne adc cmp shrb xchg cmp in jae jns out xchg xor pop mov jg lahf sbb add cmp xor push cmp js sbb pop add aaa or or mov or sub aas adc ja lret xor jo add add pop sub (bad) jg pop push jnp js dec cmp ss sbb fdivr (bad) loop add pusha pop push add push sti jmp cmc clc cwtl mov jne mov push push sbb jb pop dec xor jecxz xorb or clc hlt (bad) fdivs shrb or sbb jl addb pop cmp push dec push add and push add clc (bad) cmp sbb add mov pop les iret sbb loopne sbb or subl push xchg rclb lock jns push and sbb push daa jne add dec cltd lahf mov setno in jle xor popa ds adc orl out jmp out loopne sbb inc pop inc and les xchg scas add inc ss ret in inc mov mov data16 jge (bad) push iret xor and push jns cld repnz inc outsl jae pop mov pop inc sbb ljmp clc fisttp inc sbb cld jne sub mov fist imul or cmp mov cmpsl icebp inc add lea sbb xchg push and insl pop pop dec and jp or cmp mov cmpl jne ret imul sbb inc sub sbb lods add push xor inc sbb push in and (bad) negl inc inc pop sub push jecxz repz mulb movsl sub sbb aam out movsl cmp mov jecxz shrb xchg movsb jbe push mov faddp jmp add sub add lods inc cmp adc adc aaa cmp std pushf or xorb and lods ret xlat (bad) mov or inc pop bound adcb (bad) adc dec and inc and outsb movsb push mov test add (bad) dec pop sbb es faddl push sub sbb and inc (bad) xor dec movsb or jmp push jae or sbb mov inc pop pusha mov imul sbb add in dec or jo add add cmp imul xchg push adc cs fdivr in inc inc loope,pn dec mov fisubrl insb roll sbb fsubrl xor add or data16 cmp jne push push (bad) pusha mov and in or add sub adc inc lea (bad) call inc mov sub pop in push push (bad) in add arpl or add add adc pinsrw ficomp or inc sub loope lea arpl cwtl sbb cmp cmpsb and inc pusha int3 sbb and sub adcb mov bound test nop jno rclb and les fwait and ljmp sbb or clc mov mov es das add inc ljmp push lods jne inc add jae sbb stos dec dec push test xchg or (bad) jns test loopne adc inc frstor je or and push jne add or mov hlt add sub out insb mov icebp pop push das pop xor sub addr16 je outsl dec sti loopne psubusb es cmp stos xor je cmp pop xor leave inc mov mov test testb xchg or inc cmp sbb lea and xchg push jge aaa jp imul sbb add cmp add leave loopne test mov xchg xor mov add or aaa (bad) push nop inc (bad) lock or mov popa ljmp aam or mull movsl es sub adc mov sbb or push jne clc fistpl hlt mov sub js flds xchg fisttpl and (bad) adc push mov out mov das xchg pop or adc adc mov cli mov adc cmpsb adc testl out and and and enter xchg push mov sbb lcall pushf (bad) jmp addr16 sbb pushf cmp push or cmp pop pop sbb sbb sub or sub outsb shrl or sub cmp sub xchg mov dec (bad) and popa add iret cwtl stos sbb jle xlat ret arpl in push sub and adc jne sub sbb push xor ja cmp sub xchg pop mov adc jne sahf push push sbb std pop (bad) dec out xor pop rclb faddl jle sub xchg mov sub test (bad) fcoml or push fldt xor inc add inc dec (bad) mov add dec inc or or cld inc cmc sub aad adc lret mov xor add push mov jp jle icebp aaa jo ret mov push popf and out imul inc nop adc adc and mov pop (bad) aam add adc inc popa push repnz pop jl mov (bad) insb daa ja push aaa push adc lret pop xchg movsb in in mov xorb sbb adc rcrb pusha or push or push sbb add push adc pusha adc cmp lret pop je (bad) push imul in out or inc push mov xor and repnz sti addr16 xchg inc inc aaa mov sub adc sahf inc int3 movsb into mov mov push pop data16 adc dec pop jne mov mov and (bad) movsl dec jae cmp jne pop cmpsl sahf jo loope sbb jle pop mov and rclb cmpsl out add mov push sub fistpl addb lret mov test mov cmpsl cmpsb push xchg and push pop adc add xor icebp xchg push pusha shll xor sbb mov pop push or flds sti add rcll inc or pop daa add mov xchg cmp xchg test pop imul pop or add scas lods adc andl mov xchg and push mov and dec jp pusha out add jmp je minps push push sub adc dec jne ret fwait inc das xchg pusha (bad) daa push insb jbe mov push and inc inc or fcomps xor dec mov mov movsl (bad) mov rcll push jo movsl ds repz in mov xchg rcr xor push adc test shrl leave lret or push dec push fcoml stos inc mov cmp mov iret pop popa inc xor pop xor jecxz inc jae inc das loope arpl aad cmc xor lret mov push nop pop xchg inc (bad) jo xor mov and clc pusha sub or add shlb mov sbb sbb push std pop aaa inc insb mov xchg scas jle push pusha addb push or mov in inc bound or rcrl push xor lock jnp dec loopne ss ss es dec lods mov push lahf and in xor xchg mov and test cmp nop (bad) enter shrl adc push cmp insl iret pop unpckhps mov pop lcall cs repz and push sbb pop adc cmp cs sub sub jmp adc mov jbe add or ds cmp dec popa mov sub pop xchg and mov jecxz fwait mov and push aas cltd pop jmp sbb lods inc xorl lods inc jge fstps pop das fadds sbb or jb insl push js (bad) (bad) pushl jle inc xor pop lret and (bad) push push pop jmp adc dec mov aaa mov (bad) cmc xchg push dec loope lock es or push les xor push aaa fcomps add jg pop nop or add pusha pop ss sbb or cwtl pop cmp int in push jl or dec push pop mov sub repnz into xor jmp push push and and jg mov and fidivr mov fiaddl and dec and add sub jo dec or or sub mov add and movsb inc cmpsb xor pop (bad) sbb dec in js pop jp int3 jns cmp jp pusha outsb pop aas xor sahf dec fidivl push or xchg insl mov push dec or test adc cmp popa mov mov adc popf test inc inc dec push flds into xchg or popf hlt xchg sbb fld popf outsl mov jne int3 xchg pop fwait das adc mov or lcall movsl aad roll xchg add (bad) (bad) adc loope xchg lods cld adc mov push add add lock jno loope out jo adc out mov subl xchg pop outsb js dec sbb sbb mov push daa lret test adc sahf and mov inc add mov mov sbb mov imul pushf divl mov adc test cmp ljmp xchg lock and inc xor push xor adc sbb lret inc xchg mov mov call cmp jnp cltd pop mov xor jg sub sar loopne sub repz repz das test in pop addr16 pop int3 (bad) mov inc dec xchg mov or add js push daa mov data16 mov std or and call push enter mov aaa add mov (bad) sbb or jge ret inc cmp daa jg adc lock or inc or mov test sbb and (bad) or (bad) scas jmp es call test clc lea fsubs push cmp inc mov push sbb adc push (bad) cmpsl mov lea pop dec mov inc pop dec cs push sub (bad) mov pop inc jne mov adc call push sub push hlt fnstenv addr16 jmp popa movsb cmpb mov pop jo lock adc cs sub mov xchg inc jmp test or xchg xor (bad) je pop in imul sbb and or popa sbb sbb stos add and jmp outsb cmpsl jbe dec enter out add cmp fdivrs aaa lcall mov sub inc sub insb fs test xchg movsb jb xchg js jl lret cs adc nop hlt mov sub cltd adc fistl sbb xor dec dec push add xchg pop dec dec inc add insl lret fadds inc gs (bad) pop push gs and inc out test das popf or add push insl jo pop adc pop das insl lea out fadds outsl mov jae pop cmp jno das mov jo cmc sbb push enter mov not adc adc out adc rclb lods adc mov sbb popa iret jno mov test pop mov or (bad) leave ret sub push mov jmp sub fdivrs jmp push adc dec movsb mov hlt dec and (bad) mov or (bad) dec mov inc and inc push add mov je loopne or push sbb inc sbb pop sub sub jge mov add mov and or and or jb xor push cmovne (bad) mov inc leave sbb xor mov pusha insb pusha pop cmp push or repz mov dec ss icebp inc mov mov cs and loopne mov add jg rcrb les iret pusha js std out movsb sub cmp or fcmovne inc xor flds out pop lea inc push mov aas xor das dec outsl sti pop push mov cld or or pop insb xlat mov push push or cwtl sub cs inc stos out lock push andl icebp popa add jnp movsl popf (bad) sub das leave cmc mov outsb pop mov dec sub xchg add or mov dec mov loop sbb mov inc or adc mov dec (bad) cmp mov movsl push ja in inc jp iret subl int mov add sbb mov addr16 cmp cld pop test cmp leave or sbb out adcb push pop daa xchg icebp cmp pop sub setb sub mov inc mov mov cmpb das clc (bad) out jnp sbb jnp sahf or fdivrp push adc imul xchg xor cmp push jle emms pop sub add decl push xor rcll xchg sub lea xchg leave sbb fnsave loopne lock jo jb adc mov or ja lds pop adc jae stc adc or fidiv hlt pop les ficom xchg icebp push push bswap xor inc mov dec or xor push inc sbb mov out mov jb push push mov in pop sub mov mov sub mov mov push xor mov or incl and mov sub or sbb xor push icebp popf push sbb add (bad) fist out mull bound pop push mov test sbb test aaa jnp add lea jnp mov pusha inc or push inc dec movsl pop (bad) out fstl fs sahf hlt sub pop (bad) cltd fsubrs pop mov and dec sbbb cmp sbb or adc movl sub scas mov fs test xchg push aam xchg test add dec add inc xchg fcmovne pop xchg add scas insl shrb cmp pusha sbb lahf pop sub add and orl stos out nop sbb dec fs mov enter pop pop add mov jns push push push je out jl test pop xchg push mov cs outsl pop lsl push std add lods aas add and push push xor add mov aaa int3 notl lods (bad) mov xor arpl lcall iret push push mov mov mov mov xchg aas add xor xor push add imul push lea push (bad) mov add jnp and sub lret fstps xor jo inc out mov mov (bad) leave (bad) (bad) movsb jnp push xchg adc inc adc cmp xchg add xor icebp jle ja add inc (bad) push adc sub inc aas add lea scas enter lock jo lret aas (bad) les inc xchg outsl xorb xor jp or cmp test xchg add bound iret inc xor adc sub (bad) ja arpl sub xor and addr16 inc mov lahf repnz andl loopne add or lret aas fsubl scas adc mov aad and leave cmp pop je dec (bad) out rorl cmpsl cmp jo fidivrl test mov adc sbb ret hlt and sub add lea sub jle mov and adc lock arpl sub js push lret sarl sub loopne pop pushf dec cmp push jmp xchg mov inc loope mov call les ret das adc mov (bad) mov inc inc (bad) out inc adc push (bad) in xchg pusha xchg or or xor popa add lcall (bad) sbb call sub cmp ljmp sub loope aam or cmp mov jmp lea insb and and test xor push dec (bad) aas push push push scas sub and jge inc gs push jbe push adc aad xor inc mov and je add cmp inc aad ficoml rcl cmp mov and add push adc (bad) dec sbb sbb std data16 inc mov add outsb cmc inc adc inc arpl jnp push daa inc and xchg xchg xchg push push (bad) mov test dec sub add mov incl inc dec adc rcrb inc out add (bad) or xchg cmp cwtl out int3 les andl in xor (bad) sbb loope sub adc push je mov ror adc rcrb sub inc mov or inc add xchg addl lcall dec dec cmp dec pop mov and daa or or (bad) in push xchg or daa push out or adc outsb jo dec pop push dec out fmull scas scas sub pop xchg or js jecxz and scas out push inc into inc aaa sub pop imul fstl sub jnp inc call sbb mov adc pushf jns cwtl dec jne test sti add out insb jnp (bad) mov pop dec and clc movsl inc pop aas insl popa inc jnp call aam andb pop and insb mov popa rol rcll xor xchg add lods push cmpsl and pop sti cmpsb cmc xchg mov or sub add add adc add mov rcr and loopne xor js lods xor icebp sub pop mov out adc aad sub into js int inc or pop (bad) cmp (bad) jb (bad) je test (bad) fsubp je aas enter jl jl cmp push outsl or inc pop nop orl insb jns push (bad) mov mov lea mov sub mov mov vmovdqu pop pop cmp sbb repz je (bad) repnz rorl sldt xor cmp imul xchg test or out pop push or (bad) je sbb daa add mov orl pusha or and pop jno mov imull ljmp mov imul adc or mov inc (bad) out or pop add mov jne jns adc add jo loopne fbld push jge and clc mov xor inc (bad) adc xlat mov mov sbb mov daa inc ds pop sbb sbb xchg es xchg sbb pop jmp das adc movsl cmp fsubrl add mov stc push sub popa fisttpll js add cmp push jmp jo imul jle and dec pop outsl fimull cmp negb mov jne (bad) int dec dec inc inc daa lcall inc push sub dec push aam push sbb jg pop push adc push jb imul aaa pop xor and scas pop cmpsl adc pop sahf push and je dec rorb mov mov push inc or push aas and dec push aas cld movl and xor inc and sub stos dec and sub dec inc sub pop rcll push das xor jge mov push mov call aad cs test (bad) adc clc jl cmp stos push push xor jnp xchg (bad) pop xor hlt js inc cmp inc add jo and xor daa jbe jne dec or les xor stos and fnstsw mov push add mov call cmpsl dec jecxz mov aas mov mov xor dec aam test mov or and xchg ret (bad) and jge xor push sub out or dec jns lock dec and icebp pop xor or pop dec out xor push call sbb (bad) add pop push pop in adc mov lods push mov iret test sub mov rol jae inc xchg sahf adc push in ja pop mov jns cmp (bad) dec push das movsl js or sahf inc inc fs icebp or dec mov movsl xor cmp push mov mov adc je aas inc int3 loop mov xor call jno cmp pop dec mov call mov mov fisttp ja jecxz cmp dec sub js xor fmull sub mov xchg xor in hlt inc hlt mov inc cmp jecxz leave inc adc push stos or xor push dec mov rcl inc cmp xor adc inc adc and push decb or test jno xor dec push adc pop (bad) mov and push dec jle jo push mov adc test inc cmp xlat ret xor dec jae sub popa pusha inc inc pop test sbb add or adc jg rcr aam dec fsubs loop aad imul js repz insl gs inc xor add fcomps imul push sbb push xor adc adc cli xchg pop jg add jl (bad) mov xor (bad) jo inc add insl add mov insb rorl push pop or add push pop adc lcall adc mov rcr mov mov inc push adc pusha push in cmp in ud2 popf fs sub inc pop loop outsl push xchg stc push xchg out sbb fwait adc jae cltd xchg inc pop dec sbb cmpsl adc cmp inc push inc mov inc add mov add xlat cs and shlb inc es (bad) adc popf aam or or imul and mov xor sbb bound dec push es mov sbbl mov inc and movsl mov stos ja sub lock clc adc xchg add fbstp int3 negl in mov fadds add lcall mov adc ret or and and xor xor icebp ljmp inc cmp jno pop xchg and sbb pop mov das jbe mov sti xor subb mov cmp add clc andb ljmp inc or mov cmc push nop or inc inc ret cmp or jmp sub insb push xor pop inc mov ror dec loope sub inc imul les arpl inc mov or push or arpl mov mov sub dec xor sbb insb jl pop sub sbb shrl jo roll scas push je mov ret cmp adc ja lret add test fildll mov xor out pop xchg aam pushf jg push and sbb lea shlb aas mov mov sub mov (bad) cs and xor dec inc xchg and or pop stos dec ljmp inc rorb popa roll test cmpsb cmp pop pop cmp or xor xchg push cmpsl mov mov out scas movl les cwtl cmp cs sarl adc xchg add and stos adc dec mov dec hlt mov adc push das test xchg decl push dec sub les and test or add xchg inc xchg add lahf rclb pop popf iret add fsubl inc sbb mov in adc xchg movsl (bad) ds scas sarb jne mov add test cmc sbb fwait jo cmpsl sub inc xor sbb push xchg add inc or mov jge lock adc mov in cmp mov sbb test xchg (bad) ss rclb xor or dec xor mov movsb mov call push fidivr push cltd imul mov push movsl mov rolb xlat lock ret cmc inc fadds and lret stos sub add mov or fs dec in inc xor imul push jmp inc mov das cmp mov loopne pop lock xchg pushf pusha xchg ja xchg aam sbb pop in push fsubr pop xchg and lods add mov clc push xor sub ret sbb das in mov dec and push das test push loop sarl push push scas mov fcompp xchg icebp adc dec cmp pop test test (bad) lock fcmovnb cmp incb jne jmp es cmp es push mov out xchg out dec cmp or or push shlb lock dec mov push jecxz cmp les and out push arpl xor int inc jmp sub mov mov and mov jbe jecxz pop lahf in xchg (bad) xor cmp jne out add adc dec dec int test in add and lea cmpsb sub in inc mov xlat and sub fmuls jb push mov push adc add mov popa orl cmc fxch push call add dec sbb cmp push sub adc cmp dec test push mov xchg fdivl imul aad inc aam xor or mov xor inc pop ret or inc jle decl cmpb xchg add pop movb imul les add outsb xchg jo mov add lods push mov xchg sbb mov cmp jno add push out push mov adc or inc pop push (bad) dec ss sbb add data16 and push aaa int3 inc imul mov push push scas pop or lcall jb add sub (bad) jle adc cmpl add push bound insb fs aaa sbb dec inc push into push sbb mov adc add mov add and adc sarl or icebp push mov les mov out aaa pop and push inc fs arpl or push and or and subl add movsb mov add subl mov fcmovnbe pop mov (bad) adc mov push or addr16 sub cmp or faddl adc lds (bad) ftst pusha dec or or imul add cmp inc mov inc inc scas fcoml adc inc loop mov clc xor pusha hlt nop push dec rorb fs cwtl hlt inc loop jl push push push jns cmp je nop push mov aam adc pop out shrb cmp rcrl pop cmp pop push sbb cmpsb mov jno sbb cmp aas cmpsb jo xchg mov ja pop inc pop nop xchg je inc mov adc mov out mov xor dec push lahf pop scas fistl xchg stos in pop in jmp mov in push push inc pop mov pop sbb in sbb fs mov inc movsb pop inc test bound (bad) adc or daa rol or mov push adc cmpsl jnp dec sub gs dec cmp sub lock add cld ss sub nop push or sub sbb sbb jnp inc mov add xchg push sub pop mov cmp pop and jns mov insb lea paddsb pop push jne cmpsl inc xchg shl xchg cmp lahf cs xlat cmp mov or cmp nop or inc aas nop sbb sbb or add push test es inc or sbb dec ljmp ret push jae enter clc insb and test cmp hlt lock mov int arpl nop mov mov lea hlt mov and sbb inc pop sub test jo bound das mov push dec cwtl adcb dec fdivrl in and mov add pop cmpsb jmp push (bad) pop daa clc sbb dec sti push sub or push push pop cmc inc dec jne hlt sahf sbb jl or inc mov ds lahf mov cmpsl mov jp pop es push push cmp lods rcll adc jl add xor out popf cmp xchg test mov movl adc mov out add mov lods mov and or (bad) cmpsl and jle sub stos dec mov adc call inc add movsl aad rolb xor icebp cmp nop orl cmpsb pop movsb inc leave add in (bad) lds pop adc fmul jg iret or inc inc mov lods loopne mov enter cmp sbb fwait pop out andps jle xchg dec inc cmp jo mov or jo and jg pop and pop xchg push iret or fldcw xor jg (bad) out loope jb fstp jae mov push sahf add sub popa imul rcpps sbb jo loope imulb sbb and push sbb int xor push push add (bad) xchg ss mov xchg mov js,pt cmp aad dec mov fdivs xorb imul nop call inc pop daa (bad) fsts or adc and and popa pop or and loopne dec xchg mov pushf mov mov inc xchg push push popa and imul jecxz or sub or push jo roll push imul add add in xchg out or mov dec fimull les iret movsb jno push push lods out into inc sti xchg nop movsb xlat mov adc push push push and cmp inc cmp pop (bad) (bad) mov xor xor xor inc sub ja mov dec dec dec dec dec dec dec addb push push push pop pop pop push lcall push cvtpi2ps xchg (bad) popf and xchg fcompl adc aam shrb sbb sub xor inc test mov rcl or and testb data16 and cs in add add xlat mov jns adc pusha test insb cmp push mov pop push pop dec adc incb iret loope pop jb mov mov and sbb jge add in fcmovnb adc jnp push dec mov add push (bad) iret mov jge dec jnp imul or sarb adc pop cli push sbb sbb call movsb das inc push xchg mov adc rcr orl jmp loope add out mov jmp inc inc std jo mov dec pusha sub fs and sbb loope aam or jb leave xor cmp cmp sub mov add add and dec mov dec sbb adc pop xchg xor lock hlt mov inc adc push push cvtps2pd cmp hlt pop lahf mov push ljmp fcmovnb add imul aas xchg mov mov pcmpgtd push sbb inc idivb dec rcl adc sbb into sbb out mov rorb out inc jmp popa inc xor dec sub pop xchg add lcall adc incb or jmp inc (bad) sti push add dec adc add or pop lods iret inc add or dec shl and and mov out and loope (bad) xor nop mov mov mov adc inc pushl sbb mov lock jmp add pop incl or mov popf or cmp jg mov ret mov add rorb imul adc (bad) insl clc mov dec outsl add pop sbb add adc push call add es sub or in outsl sub (bad) rcll cmp ja jo fdivl push dec pop xor jmp ss xor in xchg sub xor fildl leave pop nop pushl aaa in or adc in inc sbb (bad) cmp and inc iret in popf (bad) in dec cld leave add mov dec out enter xchg (bad) test cmpsb mov xor daa and inc sbb cmpsl add xchg add mull inc imul mov xchg push xchg add cmp xor add push push mov pop fisubl xor mov xchg clc cmpb fnop mov or sbb movzbl cmp fisttp or test inc daa xchg ss push mov push inc mull movsl aad leave or cmp sbb dec js dec dec cmp in add and xchg mov ja dec lea adc mov imul push aaa mov and sbb cmp inc push jo mov aas or jl das setbe push fwait mov ret jns dec sbb adc ds inc add cmp add aas sub add sbb int3 mov push inc mov test sub (bad) jp not mov and sbb aad sarb jmp rolb in (bad) mov jle (bad) adc sbb das cmp lcall sbbb rclb mov and loop dec pop add xchg pusha and test or add jl sbb fdivrp or sahf cmpb dec das leave adc pushl add push dec xchg or popa shrb or fucomi dec pop pusha sub mov adc pop push adc fs fs add sub mov pop mov push dec rolb repz and inc sti (bad) push sub (bad) push adc aas jno lock push aam cmpb and or sbb dec in jo sbb push xorb lock mov add adc mov push cmp cbtw pop leave mov or imul in sbb addb xor pop cmp sub xor inc into pop xlat or fistp sub jecxz jmp and xor or (bad) push ss and push pop push pop or test pop (bad) jae pusha sti cmp pop dec sub sbb std in adc pop mov into adc pusha or inc push adcl and lds and inc test pop sub dec dec dec sti push fwait nop mov mov aas or ds jne inc push cltd je jle push fdivl xchg mov xchg loopne adc mov jmp and or mov es sub movsl (bad) loopne xor mov mov outsl ds push dec pop lods testb or jb stos fildl cld fnstcw dec repnz mov mov sbb mov shrb dec daa mov dec mov xor ficompl push push adc sub jnp mov es call test adc je mov mov out pop je adc and lcall loopne clc or push popa decb inc pushf test pop negb xor sub jg push mov jo add push and pop ds daa xor lret fadds or lds sbb add flds les dec cltd shrl out inc cmp adc fldl ljmp mov mov and dec out xorl or mov ss push loopne mov or into xor rcrl pop or rol or or hlt jge sti cmp mov inc mov mov pushl push add test sbb ljmp add dec sbb xchg xchg hlt jae movb xchg adc call dec loope mov mov xor jecxz insl sbb ret push and pop cmp aaa add orl je jae subb div jb or sub sbb xor and enter rcrb addl push xor shrl in lock adc arpl call jle hlt adc iret mov mov pop scas or inc cmp clc add jne addl sbb xchg nop icebp adc orl pop and mov (bad) mov and and in and out cmp push addr16 jae sbb add or and dec push dec add movsl xchg inc mov or mov push push (bad) or fistpll jge lea sbb mov adc arpl pop fsubs insb stos mov lods sarl sbb mov pop xor xlat or xchg cmc adc xchg lahf xchg movb mov pop adc flds mov iret dec pop das loopne enter lock hlt fcoms frstor jge das std xchg jo add xchg mov inc mov cmp inc cltd pop inc cltd clc outsb mov jle sbb rclb sub les push sbb ss hlt loope mov mov or dec out popa inc dec push inc xchg ret hlt mov es or lock inc xor jl add sub xor pop and inc es dec sbb cld jno sbb pop mov push dec and cmp decl push fmuls jns imul addr16 fsubrs dec push mov dec xchg loopne mov xchg xchg test lock inc cwtl pop cmp lds dec jge mov popw push push inc adc pop (bad) std mov push fsubrs adc imul add mov pushf sub pop dec jge inc insb arpl xor mov cltd add add mov fwait pop push or loope dec or sub add push add inc push sub adc add lock roll rcrb or ret enter mov add lea or imul cmc sub rol dec mov cmp add sbb mov insl (bad) mov xor iret es lret hlt cmp hlt xor into hlt sub inc add je add rep or imul test (bad) jo xor or mov leave lock rcll add lret jp ds pop inc inc negb fildll push nop xchg cmp dec insb loopne sti fsubrs adc xchg lea ja add clc loopne mov test and outsl ja ss jge aaa fistp dec push je sub sub test sbb add daa call mov in das ja or pop mov dec jg jl iret push inc mov imul mov sbb add or jp pusha dec loopne and xor ret fisttpl dec push adcb xlat xchg pushf or (bad) or movsb add xor bound mov sub jmp and lea ret sub repnz push add pusha mov cmp test or pusha data16 or call fsubs ret or dec inc out imul push in sbb stos adc and popl adc jo mov leave adc push jns call in mov sub sub xchg cmp je clc xor add lods lods nop xchg lret clc sub inc ds xor inc enter dec lock dec clc jb mov or xchg dec fcom test fnop arpl loop pop sub push pop xchg subb pop cs sub pop clc lock dec call test inc mov movsb leave test iret mov pushf sbb and or or mov cmp daa jnp loopne mov push dec adcw jl imul sbb sbb incb add adc fs mov imul and adc insb cmp mov mov fwait jae inc sbb nop jl jge add push nop push in push sbb pop adc cmc cmpsb lcall lea and int (bad) mov fsubrs push pop sbb js inc push fidivl inc push sbbl and adc xchg lea outsl fs insl fs test or bswap push fs xor fs jl hlt lock mov pop jl or sub fidiv push dec je mov test push or pop mov sub or xchg out nop sbb dec loope pop inc das pop fmull sub outsl push (bad) adc xor mov mov lock sbb xchg (bad) mov mov hlt mov test popf imul mov adc (bad) incl mov ret je decl inc add (bad) push push iret xchg inc dec arpl dec sub xchg jmp dec sub push or addr16 pop mov push or stc icebp mov or ds out inc repz adc add pop cld mov push (bad) pusha and test loopne add in ja or dec sbb (bad) and jae fdivl jge or movsb push adc cs dec inc push and add cmp push add xchg and sub jb aas aad or sbb in inc pop incb add sub imul mov movsb fstl lods sub xor ret adc dec sbb cmc or push ret insl pop xor adc sub lock pop mov dec js cmp clc imul mov lods test leave adc adc pop jp aas fildll in fsubs pop (bad) xor cmp xchg or je inc push adc add imul mov pop push xchg jo or cmpb jl or je and ret pop xor inc nop dec and (bad) cmp add dec add push mov and mov inc out aas je popl pop push aaa je mov push divb adc pop movsb inc mov test inc int xor mov or repnz push ds dec pusha push fmull pop mov outsb fidivr shrb push inc inc adc dec je push (bad) lock mov mov push ret push arpl add jnp sbb test fwait mov mov jno cmp clc imul xor lcall outsl pop in je lahf cwtl (bad) pop cmp cmp pop lcall gs and leave pushf (bad) or sbb fsubs fimul pop lods xchg es adc mov push push mov push xorps push cmp icebp push add dec pop mov and popl adc shrb je inc rcr aas mov aas jbe and repz dec aas popa loope subb pop popa bound hlt adc and and push push test push add adc dec insl mov xor cmpb sub xchg or insb imul sub cmp sahf gs or rcll jecxz inc and push add ret rolb push in test lahf and rcrb or cmp rorl xor scas cmpsb inc inc inc adc push arpl sbbb jo adc jmp sub (bad) lret insb sub mov add dec repnz xor push sbb and push jo pusha xchg pop mov jnp ss js sub dec xchg jmp pop xor mov push adc loopne pop and sub jmp xlat stos lock jno xlat or js les test jno inc dec fs lods ret rcrb mov insb adc dec mov out lret enter inc inc or mov cmpsl addr16 adc ljmp ja mov mov mov cld and lods out scas out cmpl add jo iret int jge xor xchg cmp adc or cmp loopne dec popf cmp pop mov mov xlat jle stos movsb pop inc lret push cmp hlt or cmp jnp sub js pop add adc or xchg and pop mov lods mov jb shlb mov rolb xor sti rcl arpl ja mov mov inc (bad) push pop pop mov inc sbb movsl pop emms adc xor jge inc pushl jle dec (bad) xchg jne jl and or jle push push data16 mov mov je mov xchg adc push sub dec jne pop xlat mov dec pop and dec scas and mov and cs xor xchg mov and push adc je inc and pop or mov and inc in inc imul add movsb push jnp bound cs out xor or dec jge mov xor mov jmp push sub jl pop push mov add xor ja add imul adc mov into sbb xorl xchg aam lods ja mov inc nop mov jmp jmp incl add add mov jecxz and xchg inc or add cmpsb pop xchg dec ret xor sub or pushf xor movsl fwait insl (bad) sar call cmp int3 mov loopne out jge dec jle push outsb xchg ljmp inc add repz mov mov push inc jmp loope or out ret dec mov (bad) push jne fadds fildl inc sbb repnz inc test nop cmp sub push mov mov push or cld push pushf jns push inc pop push sbb aaa pushl dec inc add adc xchg icebp pop mov mov outsb and aaa cs xor sbb or xchg xor cmpsb add rol loopne mov call adc inc out out imul testl in ss mov repnz mov or pop adc inc es loopne test cmpsb jbe rolb enter lret out add pusha jmp jle fs ss (bad) bound dec lds mov adc mov or adc aam pushf jbe and jne dec push pop dec xor outsb je cwtl loopne fs sbb outsl push aam je push sbb clc jne repz xor ret cltd shrb test lret xlat ret sub enter lea movsl adc dec fwait jl data16 int3 push stos push imul lds inc push gs mov push (bad) xor pop cmp add test and popa jl dec add js loope jnp sbb dec mov add xor and push xchg (bad) xor add dec push ss mov sbb mov inc mov add xor sbb inc insl cmp bound inc fcmovnb jl movsb loope add sub sbb jle test adc adc dec pop fstp and cmp adc push xor or loopne pop iret and test inc add adc imul ret clc pop sbb shll addr16 add (bad) rcl jne in push sub add call or sbb add push sub jno and aaa cmp aad mov sbb bound mov pop bnd mov mov jmp movsb imul out xchg test pop into mov add in pop cmp pop cmp mov mov cmp add pop mov cli sbb outsl nop js lcall adc mov dec pop xor jmp pushl sti jl inc test cmp mov and addr16 movb dec add mov imulb pop inc sbbl in testl or inc test inc mov dec daa add adc xchg popa pop jne outsb loope add aad mov fs jle,pn aaa dec and dec inc jne mov pop push imul mov fs adc pop cmpl lea cs aaa (bad) push ret add add xor push cmp push and or inc lock adc xchg xor sbb aaa aam idivb mov clc jb xor inc mov sbb mov lds adc cld fdivrs inc cmp sbb rcrb dec add xor inc xchg xchg sub jae xchg fs repz xor xor outsl xsha1 cmpsb or and movl into pop push xchg clc bound xchg push push lahf pop pop xor daa pop ret inc or push cwtl ret cmp mov or nop daa fs or mov push pusha xchg push je das hlt xchg mov adc sbb mov movsb sub sbb (bad) (bad) xchg rolb hlt lret sahf push add mov jecxz (bad) and loope push pushl ret add data16 pushf pop rol push or call out mov pusha shl scas aam sbb int3 sbb addr16 js int3 js sub lret fldl push dec (bad) mov call jbe inc loope divl rcl jno cmp cmp dec pop sbb lock fwait ret push adc push out xchg sbb or add nop dec xor les cmp cmp in add push loope or and dec sub sbb loopne push ret cmpsb rcrb pop (bad) and adc push push inc xchg insl ljmp ss sub rcll or mov adc popf or add push add mov movsl es push add xchg jbe mov clc mov and sarb lea fcoml pop sub cld in mov lods mov insb rorl ror xchg sub inc je (bad) jecxz leave push pop add aas xor add test (bad) add sbb cmp jp add into or daa aad add lret xor or push call cld push pop mov pop and push rol cltd and jmp jo inc inc mov mov inc loop push cli pop or or add push jge mov mov inc sub push and inc or je sbbb in mov add cmp cmp mov fiaddl dec push push cmp push dec sbb push or repz inc addr16 lret (bad) repnz mov and add inc push sbb roll pop clc mov xor pop andb bound inc jmp cmpsl fwait mov add or jo iret add xor push sub lcall pop cwtl shrb pop jge lock bound inc je sbb inc cmp mov xor and (bad) cwtl dec pushf mov ret ret mov cmpsb lea pop push xchg movsl adc pop pop push cli ss lea hlt adc dec lea xor jmp cs jno test mov dec and into daa imul sub inc mov cmp push lahf pushf test pop movb inc push add je inc add or jg dec push inc cmp pop clc jb pop mov int mov jl mov das (bad) sbbb sbb pop bswap adc imull iret cmp sbb fisub or shrb xor add or outsl or push (bad) testl aaa aaa imul mov jbe jmp pop sbb cmpsb adc inc js push cltd inc pop aaa pop test out push xor out das mov adc bound (bad) mov mov cld mov cmp jle jmp xchg pop insb cld ss outsl pop lds or xchg xchg push sbb insb adc cmp xchg pop xor out cmp aas enter pop nop iret dec inc aaa sbb xor dec jno xchg loope iret pop adc mov nop or test addr16 sahf or adc sbb mov test add xor adc push sub xchg cmp cmp xor insb ret xchg add jg push subl (bad) jmp xor out push (bad) mov (bad) in xchg push daa jo fnstsw jecxz and mov clc mov jns or loope jmp hlt pop pop adc pop cli imul lock xor lds push mov xlat push and call daa (bad) aam or mov sub in fimul xor into ja mov jb mov insl test mov or cli xchg clc inc adc movsb push or push sarb (bad) hlt jmp hlt xchg jne sbb out int3 or adc subb mov or jl adc sbb sbb decw mov lcall or imulb (bad) mov fwait jmp and jge dec or or icebp add xor add push int3 push icebp std push push in aaa in jge sub push or xchg inc je pusha pop sbb push ss leave push clc pushf lods push jp addr16 lahf add dec push rol test adc add xchg add dec or cmp test ss test movsb cmpsl cmp jp sbb xor rcl lahf push mov pop addr16 inc push loopne cmp push aaa sbb in push mov pop push pop fcoml mov push xor pop mov jmp xchg mov je pop mov push xor int3 lcall dec test leave mov adc sub or add inc mov fild (bad) sub (bad) cmp cmp add ss rolb lret orl mov push xor fmuls mov pop aam lock xchg push inc adc arpl jg dec push or idivl aam xchg ret movsb jno aaa push pop add mov setle repnz dec ucomiss push and outsl mov xorl cmp call sub test insb dec or push scas scas sub sub je sub je or pusha sti inc pop add sub adc xchg es push and push pop movsl dec (bad) (bad) into nop mov leave rorb add loope pop movsb jb imul std mov testb add add jl jl add les movzwl or adc fisttpll add xchg and mov sti leave hlt ljmp daa int3 adc or das dec mov mov xor popa cmp imul ja shrb leave sub jge aam loopne adc enter inc add xor xchg xchg inc or dec jge cwtl ret insb imul push dec rorb mov cmp testb and pop enter add lock dec cmp mov and xor (bad) test pushf sub fmull mov cmp mov mov lea push add cmpsb test call xchg rclb int3 idivl ss cmp ljmp lea jno sbb movsl mov arpl mov pop cmp (bad) push cld push adc dec (bad) pop insl (bad) push leave xorl and add cli and push or lea jmp mov fcmovu aad aam jb dec sub dec cmp dec pop mov or push andb inc push xchg jns mov cmp bound inc (bad) fdivs push test xchg push dec mov insl or aad pop dec in pinsrw xorb dec add mov cmpsb sbb lds xor int3 adc mov or mov or add das push push adc add push lods inc jecxz jnp or adc mov (bad) mov cmp or jg add add push movl xor lcall xor cmp inc push jg add inc cmp inc popa add mov xor cmpsl fisttp fnstsw lock divb fbstp push push je mov adc add add (bad) or xchg aaa pushl jo addr16 push in cli rclb cmp std jmp jge xor ret sbbb or sahf cmp push xchg or mov xor or push pop lcall ret test dec cmp mov push xlat pop cld jle clc loop std pop std mov dec pop cmp inc xor xor xchg test xchg sub gs sub xchg std sbb pusha lcall sub jl jae sub mov pop imul ja inc and push dec push stos lds and push dec stc popf and xor and push adc and sub (bad) adc loopne das sbbb call xor xor or test dec stc or fwait mov testb scas xor add cld inc lods sbb or dec mov add mov xorb dec es aaa pop adc push mov ss or bound inc add mov jo sbb mov orl cmp nop je (bad) jne icebp lea or ret daa insb cwtl inc scas enter sbb (bad) mov adc push add jmp fdivrs pop inc jg mov sbb pop out daa sbb push shl sti jl mov and adc and and ljmp test (bad) insl test inc js ret mov pop adc dec rolb cmpsb test sbb movsl test repnz aaa mov jae xor cld xchg test jge out dec inc mov cmp jns push ds xor ss cmp sub sub aam sahf idivl test inc sbb sahf jnp cmp adc push adc mov fdivrl in out push roll xlat (bad) insb nop lods mov movsb test xchg adc outsl scas shl mov jae mov js jge lar cmpsl dec push ret jo xor hlt repnz aas and pusha inc or cmp pop popa add dec mov or js add sbb xchg cmp sbb push jae pop push xchg repnz insb or jae inc jle or dec outsb arpl (bad) inc xchg out dec pop mov test push stc xor lods mov jne ss adc ficoml je lock in ror push adc xlat inc les loope loope fsubrl jmp and arpl out mov xor jo push call test push cmp and mov add nop xor jns mov dec cld pop sub arpl iret lods or je out push pop shlb aas or or fisubr sbb stos add sbb in lahf or enter pop inc xchg (bad) vpmacsdd or aaa cmp or cmpsl sbb testb int in push ret push push and lds pop mov push insl outsl mov jns push out mov movsb lods (bad) cmp jmp out fildl or push fadds sbb inc jl add mov pop cwtl (bad) mov xlat pop dec lcall adc mov imul subl mov cwtl mov push sbb repnz movsl xlat inc call cmp out cld out mov sbb (bad) orb cmpsl jo (bad) imul jmp aam inc ja jo or fistpll (bad) fsubs mov fadds insb out mov bound push adc adc jp ret xor nop xchg pop xor ljmp add mov xor mov je xchg dec or cwtl or or out loop dec adc inc mov mov dec mov cmp bound or notl sub adc loop add es outsl or push outsl mov call jl (bad) out sub movsb sbb mov adc imul std mov dec movsl sbb out mov jnp das mov popa ja insl adc or cmpsb sub ror ja sub imul rorl out in in rcll and adc mov cld (bad) or mov outsb fstl sbb or test addl xor mov outsb jne sbb adc lret push adc mov test push or add loopne iret inc (bad) lret pop adc mov pop adc in adc (bad) in rolb cwtl into inc and push gs cld push or lea mov cs xor (bad) test inc imul mov pop dec lds pop push (bad) mov cmp fs mov push jb clc and xchg jns adc out jns cmpsl mov scas push js test lods xor int3 insb pusha and sub test xlat sbb inc or pop ds rol and outsl clc (bad) imull movl xchg mov or imul or iret inc rcrl (bad) andl rcr lret add xchg push jne jns pop test pop sub sbb xchg add mov dec adcl dec jae push push push dec rorl inc add sub js ret (bad) lock outsl add pop lahf inc loopne fcomps adcl inc popa lea sbb jae dec pop xchg mov sbb test mov jbe add mov cs jl mov out mov push cmp inc inc test inc jg js movsb repz pop fs add lahf add push lods testb and and inc les outsb cld out faddl cld inc clc push mov and in (bad) es fs cmpsb andps xchg mov int3 adc sub push call jl add push inc fidivr pusha xchg push inc dec and hlt ss fsts add aaa (bad) icebp push push xor sbb add fstps jns jge cmp mov mov push adc push fstp aaa add add add add ljmp add add ret or (bad) sub add xchg add mov push imul push mov lea mov pop sub fimul add or rolb pusha loopne push bound add lods lret adc or (bad) stos cmp roll pop dec xchg and xor mov and and ds jl dec push test push mov and pushf xor push push mov negl aaa sub cmp out fidivl je push pop addb push into idivb cld sbb sub xchg xor mov repz mov adc push fdivs aaa fstpt cli inc push in push aas sahf xlat je sti les in or cmp fdivrl push popw mov and cmp faddp jnp or inc or pop adc add (bad) lahf pop and lret pop add outsb inc out lods (bad) pop mov xor pop ret push pop xchg outsl pop sbb cmp pop lret push andb add std js or insb or pusha cmp cld out inc orl pop xor lret loopne pop adc mov cmp aas add cmp push push dec loope mov xchg dec outsl jb dec adc add insb dec jo pop add ret inc xor les jo (bad) adc call movsb push rcll xchg jl xchg pop lcall repz dec shrb dec add pop les add das fisubr inc add xor fwait sbb xchg push lcall es adc cld cmp sbb xchg and (bad) sub std pop ret sbb dec fnsave mov repnz sbb pop mov xchg in push dec jo xchg das push add xchg daa pop test mov aam shll push (bad) pop mov test mov push and pop push adc icebp and mov es or inc dec pop enter xor das int3 mov or jmp adcl (bad) add pop push mov adc inc addr16 and jmp (bad) imul addb sub lcall shrl adc test divl enter ja pop enter aaa fwait (bad) dec sub shlb divb dec (bad) popa call dec jecxz test push mov or push popa daa add scas inc mov mov xchg fmuls lock xor js jae pop aaa inc or mov push sub add inc mov jb and xor jo push dec (bad) xor jl add and (bad) pop cmpl dec (bad) xor mov pop roll cltd or pop xor jo aaa jae repz mov in lods dec dec cmp gs sbb fildl faddl inc int3 orb jb imul mov test or jo jbe jle (bad) push scas cmp aad pop fs or cmp mov out rcrb cmp shll or xor cmp decl repnz pop cmp nop fcoms aas jecxz push in inc cwtl cwtl stos xor pop insl inc insl sbb mov repnz outsb dec jnp cli sarb aaa push call or inc inc shrl fdivs pop pop enter dec pop push bnd clc jns mov add popa cmc dec cmp inc add inc or pop loope and dec dec and push add dec inc sub dec push jbe inc or mov and out pusha ja push test push xchg dec inc adc scas add dec cmc inc or pop inc push and dec push ret subl push sub pusha or or scas sbb (bad) or mov cmp mov mov pop repnz push rorb sahf cmp dec imul das mov mov push fcomps mov lcall ja in orl and orl add es mov rorl aam inc push js aas unpcklps add ds inc pushf cmp cs test cmpl inc or adc mov push inc aas imul inc test out push ss cmp or out pop sub jb mov rorb or or nop and (bad) ds mov or inc pop (bad) scas loope in pop lods push int3 iret mov push or loopne inc or adc xchg mov inc sub add push mov dec inc test adc in and (bad) das testb (bad) (bad) jne loopne test rcl scas push adc rcrb push cmp sti (bad) clc push sub inc pop pop push movlps jb data16 pusha ret jo mov xor sbb pop or mov dec xor fmuls out mov in or inc add loopne sub mov or je and or push inc push cld mov dec xchg mov mov inc dec movb loopne sub shrb int3 mov arpl dec sub les scas mov lock test dec jge pushf pop outsb repnz sub rorb dec or push pushf or mov pop into and lods es ret push hlt mov lock xchg sbb lret jb xlat inc cltd mov addl sub ret adc aaa push repz mov xor ret std (bad) leave fdivrl or fisubr push into or adc mov sbb fwait jo outsl ret or inc dec outsl ja mov or dec xor ss push sbb jle sbb or sub or sbb mov mov push adc pop hlt or stc xor fcomps ret mov dec inc sbb call cmp outsb adc scas cld sarl mov enter fwait rorb adc test ret mov dec fldl cmp sbb sbb adc call xor sub sbb dec iret and sbb inc sbb xchg cmpsl mov jae mov and mov add cmp loopne lret inc xlat lds mov (bad) xchg imull int3 add add in cmp or adc ret sub adc cltd xchg xor sbb sub cmpsl in add loopne mov cltd dec adc aad das ja imul sbbb jae adc add insl xchg out add add xchg and outsb loope dec mov cmp xchg xor insb pop pop addr16 and pop pop xchg fstpt add dec xchg or fstps lcall test push mov cmp push jo imul inc pop mov mov xchg ret das fdivs inc jl out js lahf sbb push mov sbb mov or push inc or pusha sbb sbb mov or add or insb insb fistl ds push inc add hlt inc aaa pop mov out vmwrite mov mov aad push sarb or adc add push adc les jno lock dec rcrb push sbb cmpsb andl ficom rcl ss aas fwait push lea dec xor sub mov fucomi inc sub add (bad) fldl inc popa mov lcall mov inc add jne fistpl mov xor push movsl ret hlt mov cltd ss je xlat dec jbe mov leave out sub xor inc shlb dec dec test call popa mov movsb test add pusha push ret test icebp inc outsl mov push ret xlat jge rol aas cmpb push add xchg cmp mov int sub fsubrl dec outsl (bad) testb mov int3 add adc aad pop popa dec push inc fadds sub and cmp add test mov xchg mov ficom mov sbb outsl fadds and cmpsb rclb pusha adc push xchg rorb sbb (bad) iret adc pushf movsb adc addr16 divb neg jmp arpl je gs (bad) push dec psubd push push test adc mov cmp xlat repnz and lods int pop stos insl jne ss pop xor fisubl in sbb adc cmp test add sbbb push sbb adc movsb ds or aad ret mov push movsb enter in mov adc mov daa (bad) jnp shrl pop pop cmpsb adc outsl inc mov orl xor or jmp fs lods sub xchg inc inc out loopne xchg stos (bad) and dec icebp jmp inc inc or hlt out insl out cmp adc dec or dec loop xchg lret popa das push and negb (bad) mov add push push ret rclb pop sub icebp sti and jge test out aad or jmp (bad) xor push jmp fnstenv and rcll pop mov dec (bad) decl dec mov xchg lret ss scas shrl vmovntps jo mov test pop add xchg loop mov int repz repz sub mov icebp daa xchg std and and inc out test cmp movsb das jbe mov add das mov jle push inc sarb xor out fs push push and push sbb jno mov and (bad) xor push movsl adc and pop inc inc fdivrs push and jecxz cld mov jne adc jmp sub sbb push (bad) adc jle add fisubl insl push sub and inc fisttpll movb dec inc adc add das sub add sahf sub test jo or shlb ds fs xor jmp jae mov and rclb lcall fisubr mov pop das fadds (bad) std shll leave (bad) mov insb pop mov jb loop adc cmp lods or (bad) push cmpl sbb (bad) jb loopne popa add xlat cmp stos and xor test jb inc push pop inc ret ds or es loopne lods mov das mov cmp (bad) stos cmp test xor xor xor push add cmp dec or fld and ret xor lahf test ds adc inc sahf pop xchg (bad) and pop fstpl pusha push cmpl sub xchg popa adc or nop inc cmp nop add xor sbb rcrb or xlat pop and and lret ljmp adc loopne sarb push rcll and push jp sub push mov clc sbb sub push enter loop shl sahf nop inc push xchg notb aam xor ljmp fwait pop out sbb and aas or notb insl mov test adc add mov or jo test adc or add stos add cmp xor or xchg dec adc je xchg outsl xchg adc or repnz push adcl xorl xor in push movaps aad gs or push or popl push movsb inc add pop and xchg pop inc mov xchg sbb jge cmpl and lods jno jno call mov push adc inc fs mov xchg (bad) lock sbb sbb pop nop inc mov lea push test ret dec or sub pop in push xchg andl cmpsb adc add ss pop lods sbb xor and inc xor push icebp je roll mov imul data16 fidivr mov jns xor mov cmp sub (bad) or stos outsl adc sbb sbb pop or mov outsb add gs out sbb cltd fucomi lret push sbb xchg sub fisttpll xor rcrb sbb or arpl sbb (bad) mov mov pop jb inc fisttpl or xor pop and dec (bad) or (bad) icebp lcall aaa out (bad) mov adc sbb sub pop cmp cld jbe mov rcll insb ljmp sbb nop or sbb mov sbb push ret sbb adc in into mov adc push push lea push mov push xchg clc inc push and (bad) out xchg addb fstl jge sbb out sbb pop mov jno push jle mov into dec ja mov inc (bad) or sbb pop mov mov add dec mov mov pop shll push outsl adc outsl test ss adc push sub push mov inc fiaddl sbb fcompl shrb and lds and in or add pop xchg dec mulps or hlt inc adc es sub out mov stos aam add push sbb sbbl dec stos mov cld add xchg mov rorb pop dec ja stos mov dec mov xchg xlat pop sub add out fisttpl cmpsb cmp popa fstpl jg mov mov push mov ds mov pop insb ret inc or dec push mov mov pop xchg mov dec push adc sub mov ss int cmp rcll fisubrl or push mov pop or mov inc cmp js push mov pop int adcl xchg or or cmp fs aam sub and xorl adc add or pusha popf adc xchg push (bad) push mov icebp adc je mov and jbe xor add insl popf sbb jecxz push push jno add scas sarl test arpl or adc daa xor jbe loopne imul mov das addb mov xor psllw nop xchg sbb mov xchg mov add outsb outsl in inc movsl xchg (bad) sub cmc bound dec adc xor mov cmpl popf dec inc andb ljmp js das cmp fsub add int3 pusha adc add lock mov cmpl xor cmp mov int xor orl sub sbb adc inc and adc js cmp sub push or adc out sbb add add push push mov mov es into or out in ret out cmp test mov les or mov or roll xchg dec mov (bad) stos iret fmulp and sbb cs jl out and xor lods dec imul cmp fsubrl fadds and fcoms inc scas outsb xchg sbbb or cmp xchg xchg fwait insb pop fist dec inc arpl nop xor lods (bad) scas fdivrs mov inc or sbb addr16 inc pop jne sub push es test mov movsl gs pop (bad) ja inc lret xchg mov lods xchg movsl inc mov xchg outsl add add fs mov fiaddl cmc lret sbbb pop inc bound and stos jmp xchg pop andb sbb sbb push or lds movsl daa test addr16 and add sub fsubrs out fwait pop jl mov cmpl pop sub out jnp inc mov insb dec jp jle jne pop (bad) mov frstor cld add mov ljmp inc pop push cs sub and mov pop rcrb jbe and fsubs movsl add mov iret push cmovb xlat xchg inc mov cmpsl inc mov stc cmpsl mov rcl push mov and (bad) cmp and fcom das xchg test xchg stc jbe sarb adc adc and dec adc sbb mov das daa push pop sub ss mov xchg mov ret sbb movsb adc xchg daa mov or ljmp (bad) ds test ja fnstsw jo shrb je jnp push adc sbb aad pop or cltd nop sub dec test and lcall adc mov repz lea sub js ficoml cwtl fdivl xlat or mov sbb and (bad) jmp or xlat leave das xor mov push pop xor mov test in sbb stc pushf les fwait mov add mov and inc aas jae sub jno daa xchg and inc nop adc dec adc mov xlat scas aam inc jg add or xor jge xor cmp push xchg aam cli je push sub pop mov lahf inc ljmp xor inc xlat pop stc add sbb pop dec in fdivrl cmpsb cmpsb and or imul dec xchg add push test xor inc js fnstsw cmpb test push cmp adc pop push mov arpl add loopne jmp cwtl xchg cmpb sbb xor jle orl loope inc (bad) ja popf mov mov add adcl cmpsb xchg add or cmpsl scas mov lods pop mov add jb fdivrs int3 enter mov frstor cmp sarb aam push cmpl sahf add cmp dec jge addb sbb dec xor and (bad) mov scas (bad) mov mov arpl insl sub fisubr int lods mov clc cmp and sub xchg icebp jl or aad dec add (bad) xchg jl ss adc ret ret xor call or pusha jae popf test push fs add subl ret js cmovl imul ljmp addr16 (bad) dec mov mov shlb movsb idiv push rcl sub adc adc push sbb pop movb mov mov or mov (bad) ljmp ret cmp rcrb or adc aas mov adc call andb out lock imul inc dec punpcklwd (bad) pushf xchg lods popf xor mov or sbb xor mov mov movsb push movsl out adc sarb and xor mov push leave mov mov add mov imul nop rorb pop add and jg mov rol xchg jb or and mov push or dec test lret xrelease lcall dec je daa cmpb xchg add cmp jne aaa dec mov sbb aad js test jne inc clc mov sub imul adc or and fs xchg leave adc stos push movsb xrelease xor fs gs out inc push movsb or and push (bad) (bad) xchg add or and rcll mov pop jecxz add adc fmul (bad) push dec sbb inc sub or lods aam inc push lea sub test dec or push bound mov dec jnp loopne pand or shll dec push stc mov in (bad) (bad) inc mov hlt aaa pop dec sub dec hlt sarl and in mov dec (bad) xchg dec adc andw sbb sbb ds test nop add test lock and push mov (bad) xor in lock (bad) xor lock push dec or pop sbb adc pop bound daa jmp or ljmp mov inc repnz and and xor or adcb fwait mov lea fcompl adc adc jnp pop jbe sbb mov and out popf or inc inc mov mov or dec mov add mov or jbe call cmovs in dec push loope xor inc loope push inc shlb repz pop mov mov ljmp push xchg nop xor stc sqrtps sub ja inc push sbbb lcall xchg sbb add movsb xchg sbb xchg mov add dec mov jo dec (bad) inc cmp pop shl shrb call (bad) ret push jo or sub xor lods addl testb mov push sbb movsb leave out mov xor inc or fldcw fsts mov xor sbb xor push lock sti in mov daa (bad) jo xor xchg aas add lret sti sub jle sub push adc cmp jp dec push push push daa sub or shll popa or insb cmc daa push insb xor mov or lea cmp mov mov inc jbe add sbb imul and stc jge mov jmp or std cld (bad) (bad) mov xchg add in jne push pop (bad) xchg rolb js mov mov pop dec clc out jo xchg (bad) mov sbb sbb cwtl mov jmp shr movsb cmpsl xor sub or dec and pop sahf test lods dec (bad) cli pop mov pop mov mov out (bad) loop dec testb pop (bad) lock xchg xor jnp pop rcrb fisttp cmpsl test inc fdiv and xor sub xor cmp inc add and bound mov add push add xchg pop push clc cmpsl cmpsb jp push movsl and nop dec add sub jo push mov jo xlat aas aaa cmp imul inc adc mov and or mov cmp movl xorb and or iret fs or adc jmp popf sbb cmp cmp mov out inc xchg add js xchg pop imul nop into daa xor push adc test fldt and dec sbb shrb or fucomi sub adc or pusha or ja in sbbl and out add movsl (bad) scas femms add jno add xchg pop inc cmovle xchg lahf fcmovne insb push mov movl je lock hlt ljmp (bad) sbb push jnp mov add sbb cltd jbe push arpl loope mov out iret icebp inc jecxz fild mov pop adc xchg fnsave and adc mov mov lds push push xchg pushw test push lcall fimull adc test cmp adc jnp pop inc cmp test mov ret cmp lock dec daa movsl jmp cld cmp lods pop imul cmp fistl jno cmp dec or xor lock push push and mov xchg enter sbb or adc lret xchg enter push cmp shll adc push iret lods test mov sub push dec je add mov jno ret scas or push clc je cmp mov push in sbb jmp int push pop lahf iret popa add and push jmp aaa (bad) cs loopne pop lahf popf data16 sub mov sub inc fiaddl sar inc add cmpsl push push lock adc andl jg cmp mov shll (bad) and adc roll cmpsl pop cmp sbb xlat (bad) cmp sbb xchg test enter add and das and adc lods lods inc subl ja add jg mov mov jo daa fmull and jnp pop adc pop mov fisubr pop push pusha or jmp sbb add sub mov cltd xchg jmp pop and sbb inc lods stos xchg xor or movsb push push (bad) divl or and pop inc dec adc mov dec mov cs mov movsb inc ja add outsb mov jo cs push mov push cmp add xor gs mov xor movsl mov adc jae push leave cmp pop cmp pop and or sbb and mov fneni(8087 in adc test and mov add jp push add mov xchg daa push and sub lret cmpsb (bad) sarb pop add push cmp mov mov adc cmc add into pop push in in or jmp push sti rol and imul pop int3 jae sub push push shl cmp and ss xor sub in out je mov xchg cs push or inc mov stos or adc or sub divb movd inc popa jno adc push xor jne push cmpsl mov adc add add pop push fdivrs pop add add sbb and push ja mov sbb cld mov mov (bad) push mov add cmp lds rorl insb lea adc pusha xchg xor push add xor fsubrs leave add clc adc add xchg stc jnp inc add fild adc psadbw mov rcrb sbb jne jo mulb add or and jne adc jmp mov aas mov js sbb or lods lea xchg and dec adc push jbe loope inc adc mov fadds add aaa sub mov out push add xchg in ret push imul add enter pop push negl push add movb add mov cmp insb ret and adc adc repnz xchg add xchg ja push or add sbb mov jmp or sub pusha rolb add mov dec pusha cmp arpl in or mov test (bad) mov repz jecxz lret outsb push adc adc mov popf daa ds jae rcrb dec nop xor or bound and push mov and lock adcl loope sub dec xchg in inc ss push xor mov add ret add lcall orl decb in dec inc dec push aas loope mov push push ret xchg pop out pop test push or or sbb test cmpl mov dec mov and (bad) in sbb rcr loopne,pn xor xor xor or adc xor sbb push or imul (bad) and sti jb mov pop mov add aaa orb cmp push cli mov pop (bad) clc rorl add decl xor icebp xor xor es cld aad dec xchg in jle addl (bad) adc xor add dec pop pop sub push pop inc cmpl jne adc inc add fmuls in fdiv cmp cmp add lods inc fsub push pushf mov stos cmp aad pop sbb cmp je lock or xor add out dec and je mov mov iret or rorb push lahf mov inc xlat adc les xchg and stos inc jns and xchg xor sahf test out sarl dec sahf cs cs inc xchg dec ror pop hlt mov incl nop insl jne int3 xorl xchg (bad) jno mov jb adc dec mov into (bad) je pop pop sbb pop inc push cmp jno dec test nop or and insl dec test decl cwtl leave notl add lods dec ret sbb mov ss js push ljmp js (bad) insb sahf mov leave pop lds insw out shrl add dec push setl lds adc mov inc jmp and movsb mov adc sbb loopne,pt mov mov mov ss ss lret cmp ficoml push inc add sbb jne pop punpckhwd imul fdivs and aad dec add pop sti lea dec xchg sahf pusha cmpsb xor pop mov cmpsl add adc xor shlb push push pop mov or push mov mov sbb enter and dec push mov pop outsb inc movsb lock aas push pop mov and mov xchg xor sub aaa cmpl fistpl cmc sbb gs mov add or xchg mov cmc addl dec push and dec sarl sbb sbb dec (bad) push adc popf or push adc or mov shlb pop pop aas sti decb dec iret je cmp je jg sbb mov loopne push cmp mov sbb aad push mov xchg inc pusha mov dec cmc cmpsb cwtl (bad) cmpsl rcrb adc mov inc sub lahf mov ds cmp or in adc adc mov xchg push mov insb movsb xor jbe lea gs mov dec cmp mov or xor es hlt dec cs xchg arpl cmp testb cmp jno sub cmp sub lods dec xor movsl xlat dec push adc lods rcl sub and add insb jl scas or xchg inc mull gs adc sarb dec rolb das xchg fdivp test or xchg inc stc je cmp in (bad) and sti inc mov push cmp mov push sub shlb mov xor inc icebp xor sub js sbb jmp push mov lock cmp insb inc push lods loopne hlt push insb or std pcmpeqw mov add xor test adc add nop adc or pop mov inc arpl push inc or pop sub (bad) xchg push mov dec pop cmc xchg scas xor push inc lcall test and push dec jl pop push hlt mov les inc xchg xor es and and fistl dec insb inc mov xor push sbb or xor arpl (bad) aaa add mov mov xchg daa popf ret mov cld mov loope adc adc mov jne fwait add xchg fistl pop popf adc mov arpl and (bad) sub dec stos cwtl ret dec fs and adc rorb dec push sub adc add sbb mov pop aaa or inc xor mov adc mov mov mov in sbb nop jmp inc cli add test int3 dec and pop roll jae imul mov int leave adcl ja ds and insb dec xor add jp (bad) call mov sub adc adc push (bad) and adc jns test mov inc add mov cmp inc popa cmp xor lods data16 aad and push add adc sub pop dec rclb scas inc pop clc (bad) push push mov lret mov add xchg (bad) nop or add xchg sub dec push inc sub mov rcl mov and or pop test push xchg call pop aam mov push insb dec or mov and movsl mov push push add outsb dec lea sub or lock dec adc lret inc fcoml mov add jno and imul pop adc in inc adc or fcoml aad es jmp pop into movb fldenv xor nop adc jmp cmp fidiv adc scas lea add push cmp xchg add mov stc cmp xor iret inc sbb push and push adc (bad) dec add (bad) adc pop and movsb ret es add les pop push leave neg lds dec xlat fildll inc out add add sub (bad) jo jbe test xor cmpsb (bad) outsb xor push pop push push lods push add cvtps2pd popa imul or push or lcall test outsl movb jne outsb adc jp sbb xor jne ret push sarl adc mov or adc pop cwtl mov dec dec sub fiaddl lahf pop xor mov add cmc out idivl dec sbb mov fcompl xchg sub sbb push add jmp clc sub outsb fwait cli pop mov jb mov or cltd mov test xchg adc cmpsb jne in mov and dec and mov jo clc and aad adc add lock movsb mov pop add and mov dec cmp push out dec xchg and mov leave movsb or les (bad) mov lods insb sbb adc mov sub or fiaddl push push and sbb add lcall push cmp pop pcmpeqw add sub ss mov add popa (bad) int3 jge sub mov sub arpl scas fcoml cmpb inc adc inc jns sbbb jne cmp ficoml push push and stos std fsts sbb aas or imul gs and loope and lods lock adc mov mov and mov adc cmc (bad) hlt test jl xchg mov push and movsb lret in jbe xor jcxz pop (bad) lret jl sub setge mov push cltd sarl int sbb movsb push cli daa mov lock adcl xchg imul bound sbb xchg jge mov mov push enter cmp or std add imul mov xor addb popa leave xorl add sub push movsb mov sbb xchg xor pop push push add inc adc sub pusha pop jne pop add add pop dec sar xchg lods xlat ss roll aaa pop xor enter ss loope mov xor sub xchg bound shrb dec enter outsb daa jmp icebp adcb lods jbe push inc das imul or loopne add jo jmp jne xchg sahf test push sub mov (bad) add add xor (bad) aaa pop pop jb or leave mov sub inc popf and cwtl pop sbb (bad) adc xchg lret ss sbb and icebp nop (bad) addl adc (bad) pop inc mov ja imul or cltd js inc mov or test pop out dec in add nop lods aaa jo scas mov insb in or stos xchg or mov dec loope pop push jmp sub jmp pop repz cmpsl icebp push in dec sub jo sub mov (bad) (bad) (bad) test adc (bad) jo dec rolb mov call inc fadds add inc jmp icebp inc jge jmp mov addl xchg lret ss pop or mov jle loop or push and sub into subl ja out repnz xlat jns add push sub jmp cmc insl pop and cmp sbb or or aad inc insl jb rolb ja mov xchg jp jmp or out aam mov mov int add adc sub daa mov inc jmp sbb jne cmp clc mov or (bad) into cmp cs add sbb mov and pushf push xor lcall and cwtl popf enter xchg stc and imul lock test iret and adc fisttpl test cmp jmp cwtl or je inc lret mov jb ror jg sbb ret and test addr16 add push data16 xor inc iret loope ljmp and and test outsl mov jbe andb insl add xchg (bad) aas je or or dec bound leave and loopne mov loopne jne add je mov sbb or mov call inc rol aad cli add rcrl xor push out xor popl cmp pusha mov pop rorb lea add std sub in xor lds dec push xor adc aad sbb mov mov adc sbb cmp add pop daa dec leave testl fcoms adc mov jge sub mov dec push cmc fs cmp notb sbb into mov popa pop jl push lret shrl push iret or inc pop or jecxz call (bad) jno in lock jecxz dec or jno loopne lcall cmpsb (bad) pop or and xchg inc jno pop xchg add sbb and mov adc fistpll pop clc fsubl pop insb rcrb adc fsubl fwait lcall es adc xor lret adc imul mov inc shl fistpl pop sbb cmp and push mov cmp jne xchg adc or cmp rorb repz (bad) cmp or add xchg adc lock mov xchg adc and mov loop xor negl and stos ds imul test or insl dec inc enter lock push xor sub orb sub add addb lock xor lret in outsl cmp inc imul add dec dec sub (bad) ss adc mov jb shl rorl jbe xchg shrb cwtl add xlat loop push stos addw andnps mov das addr16 push mov loopne or jp and lea xchg xor sbb movsb andb inc xchg xor mov je cmpsl sub (bad) int3 pop cli insb test (bad) jp ffree mov clc add add mov movsl ret mov add into mov xchg lods xchg je testl orps js add data16 sub (bad) call cmc push mov call and and and test push lea sub fdivp sarb movsb xor loope nop in in ficompl push dec call xor and inc lcall push lea adc and add mov in lret mov adc (bad) jmp les clc lea dec jg or add mov mov inc mov stc divl pop push insb aaa pop add test daa rorl dec push sub cmp or clc dec xor into (bad) fiadd and cld ds scas lock cld rorb xorl pusha and add xlat xor lds xchg jo out add es add das mov mov or or pop (bad) in mov daa (bad) aaa mov push test pusha push lea push mov jb or (bad) movsb outsb pop fnstcw mov pop mov cwtl add inc and aam add push push add or mov sub outsb adc and aad popa std add jnp cmp and fstl add inc inc negb mov mov rolb pop inc in test push imul cmp push sub mov sbb outsb sbb xchg cmp cld cld xor je push cld cld push cld or mov scas add xor lea mov pusha xor mov xchg adc (bad) jno add pop dec jmp mov add xchg rcll cmp pop push das or lahf push jnp dec xlat fcmovb and aad mov bound jmp jle pop adc mov sbb lcall sub and ds sbb pop xor (bad) cltd pop mov sub test jl push and push dec adc inc int inc or inc sub jbe imul lahf sti rol sti add movl xor mov mov dec add dec fisubl in in inc push (bad) dec xor in xor pop add mov sbb mov pop int3 sub popa and lds test push cs mov or repnz (bad) popa mov out push fcmovnb (bad) mov dec dec dec call popl pop pop mov jne push push xor xchg addr16 pop xor dec dec ss (bad) jb inc inc push sbb mov sbb inc fs dec repnz jo sub pop iret sub add mov dec imul jo mov sbb dec ss or sbb loope lret adc mov add mov xor das pop xchg iret call pop inc pusha mov cld mov out jl or jle xor test fiadd cmc xchg lock mov loop and jne out push pop cmp imul clc or add push jmp adc sub loop mov mov fs sub inc hlt adc pop jg shrl xchg jle jo or fstps mov ja adc inc mov js sub sbb (bad) (bad) fld1 jne and xchg pop sbb xchg test xor in inc cmp add aas das mov pusha sarl pop aam std mov cmp popa pop sbb sbb adc inc (bad) xchg mov jb push pop pop inc sbb lock cmp sbb in popf sbb loopne xchg mov loope jmp leave fwait (bad) adc or xor (bad) cmp push out pushf add ficompl aaa rorb pop push xorb hlt in push pop negb mov inc sbb popa inc mov xor sbb push into (bad) cmp push fsubrs dec xor pop out or je adc and cmc xchg dec xor inc or jle outsb insb sbb adc xor test inc imul (bad) sti add pusha pushf cmp cmp int3 (bad) std mov lea pop xchg dec jp lahf cmpsl push push xor cmpsl cmc leave cmp call clc mov jbe lods and sub test dec adc add xor jae cmpsb data16 pop rorb or adc orb mov call fwait call andl push loope or fldcw jp and lock incl aaa add mov iret insb xor jge sub rorb gs mov sbb cs test pop ret or push pop sub xchg xchg cmp pop inc sbb (bad) and sbb jmp mov lret dec mov movl es add popf sbbb mov and xchg movsl nop dec mov outsb arpl dec inc pop adc mov pop push mov icebp or cli repz xor ja jmp into and push mov or (bad) (bad) aas call inc add mov and addb xor dec testb and jmp and insl add das jecxz xorl fildl xchg adc mov jmp push movb jbe mov xor out popf es sub test test cltd inc clc (bad) out jl dec rolb push sub and es lods cmovb sub movsl xchg lret clc hlt push outsb inc adc rolb aas mov imul popa mov push lock or adc outsl je jmp sbb xor mov sub push into push int3 xchg in mov pusha or push or push (bad) sub sub and lock or ds cmp je scas pop imul je test iret stos loop push pushf lods mov into xlat mov inc lock push or xor lock sub pop add sbb lods sbb add add imul hlt roll test sub push cmp dec fdivs mov adc push rcll lock aad ds inc stc inc mov inc cmp out mov mov rcll not add iret and je clc sbb adc cmp shr xlat cmp lahf sub (bad) adc subl mov dec shll sub inc pop insl fild lahf mov rcll dec imul sysret test pop dec mov pop lea gs sub lods dec movsl imul adc in adc adc lcall (bad) mov bnd push dec inc add add enter add jmp jle scas inc sub mov xor cmc or jmp sbb rcrb shlb rclb or mull mov in push inc les inc or pop push inc inc and repz adc bound sbb xchg push xchg jg xchg sbbl add adc pop cmp inc push push ret (bad) sub add imul mov movsb out adc mov adc sub cli (bad) cmp push pop loop nop sbb cmp sub pusha add aam mov les cmp adc adc test jmp mov into adc dec jbe je adcb or cmpsl push aas push fcompp xchg adc push jae push das jbe rolb add push aam cmp inc les loop cmp xchg mov push xchg mov jp fs mov callw mov leave je insl dec add push stos mov xorl sub outsb in out int3 push fcomps sbb test jl ret fmuls ret push or leave or rcl push lods in jno adc es cmpsl hlt xor adc jp mov dec dec inc add ljmp inc les add jb cmc and and adc ret pop xor or jne pop int out mov xor xor imul xor and shll (bad) mov movzwl and inc pop sbb fistpl fwait (bad) js mov ja inc pushf fwait and les dec or inc add add mov (bad) xor sub push out push mov stos jnp mov add jo jnp xor or jmp pop daa and mov pop mov mov push add insb inc cmp cmp sub sbb or inc sti pushf (bad) jmp and stc das subb mov inc shll test inc pop enter into sahf adc push mov or arpl decl dec dec dec inc inc push inc inc outsb inc xor (bad) mov ss pop cltd enter jp mov or ret jb leave inc sbbl out sbb sbb cmp and and out or lret pop (bad) std push (bad) jo cltd push push andl add mov mov pop outsb popa sub xor adcl addl adc icebp jecxz pop adc sarl dec das (bad) or cld sub adc dec xchg nop bound sbb hlt sbb inc add xor pushf es sub dec loopne int inc fsubrl or or dec (bad) xor popf aam je xor ret inc test and sbb mov lret loopne pop sub nop enter into or add test sub mov sbb inc jl add push cmp and nop push enter rcrb repnz inc xor out add rorl (bad) aam mov rolb ja pop push fistpl sbb push je test sbb sbb int add sbb insb inc js inc cmpsl or rcrl daa add mov into inc adc mov fadds aaa lea js cs mov dec jmp mov dec cli outsb jge dec mov jg adc push cmpsl fcoms stos dec xor xchg mov fwait repz mov loopne cmp lock pop cs add test xchg mov and lret jno mov cmp sub outsl pop les add and jbe mov mov aad add out or or push loop movsb dec mov add pop jb xor sarl mov inc lock cld bsf xor pop and adc imul aas jne test and mov js lret sbbl jno or or sbb push or pusha fimull fdivl sub dec (bad) mov test adc daa aas lret stos or pop pop adc and and es push push (bad) jo pop xor arpl les addb push xlat loopne,pt and pop inc add dec pop jnp mov dec popa push mov in and shlb push push lods inc popa push or pop aad das mov scas popa clc cmp or mov ss sub daa mov xor pop add adc xor cmp nop add sbb ljmp push push jg adc test push cwtl pop mov popa push popf pop lahf popa dec cmpsb pop out daa push (bad) pop imul jo and call sbb rcrl cwtl jle cltd sbb stos adc sub test cmp loopne dec push imul sub out or lods (bad) or and insl inc pushf insb js add mov adc pop mov imull sbb add jbe inc xor lret test lods je sahf pop stos sub adc lods sbb push cvtps2pi rorb pop xor mov call in aaa dec lret or movsb pop jg movl adc sub mov dec xor mov adc pop and xchg add or inc stos outsl mov xchg and mov dec inc mov xor lods cltd adc pop inc ret daa inc sub add sub scas add bound or jbe insl mov add mov xchg popf inc xor add lsl pop fdivs subb inc push fidivr add push pusha ficomp lahf adc dec and and pop mov dec out push dec pop xchg inc mov mov push sti xor mov (bad) mov clc imul and pop push inc outsl push jg loope cmp xchg push mov cmc mov cmp movsl and int out dec xor adc sti and ljmp pushf sub movsb shrb adc jmp push add and int jnp insb add pop push cmp jb add cmpsl in and fwait rcrb add xchg xchg imul dec or cmpsb xor ret faddl pop pop sbb push add sti ja sub sbb cmpsl xchg and xchg push push add and test sbb push rcrb (bad) mov push sub push pushf push imul in mov jmp xor mov mov ss in cld imul out bound sbb and ret push sbb jp jmp test sbb pop push rcll mov or jbe insb je push xchg cmp push repnz lods mov sbbl pop aas rorl lods pop stc xlat inc pop cmp cwtl pop mov mov xor test and inc inc ret mov dec adc je push sbb test (bad) testl dec xchg (bad) sbb jmp std cltd or xchg fcompl mov xor sbb mov test push cmp fs andl pop icebp rcrb sub or push and loope dec iret adc xchg orps js out cmp adc pop jo or loopne pusha shrl mov out pop dec mov punpckhbw or movsl inc add dec sbb xchg lods popf pop and xor xor mov enter inc loope pop xlat shr jne mov test dec in mov inc das sbb cltd cmp loopne jae jne subl sub das arpl xchg push imul add mov jb xchg popf fucom push imul mov sbb test fildl ss push adc mov push (bad) out popf add pusha jmp and cmpsl add mov pop imul push pop push adc adc push mov ret add inc pop cli fisubr test adc faddl add arpl ljmp mov in pop int3 mov cwtl fistl or inc pop (bad) iret adc nop outsb ret loop or (bad) pop push fistp add shll push daa mov or mov jle ja xchg fcomps aad inc xchg and mov and rcll or inc imul mov outsb pop (bad) mov mov push adc sbb xor cli rolb shld inc lea movsl adc sbb jle scas loope sub rorl jmp rolb jb sub or add push add popf out sbb xor (bad) jne cmp sbb test hlt xor mov mov mov mov stos inc call nop je cli jmp enter dec add mov jecxz xor add push adc call jle xchg ret inc add mov xchg sti mov les mov aas jo inc cld ds test imul out cmpl or fadds in cmp add jecxz fs or push add aam inc adc lret lods jne mov mov or rorb xor sahf mov add cmp adc sub dec or fsubs aad xchg sbb gs lcall sub fstpl sbb push dec mov sbb popa dec (bad) mov hlt push hlt in adc std sub iret add mov inc mov fisubrl and addb pop ljmp sbb pusha (bad) les lret add and (bad) mov or mov add add sbb inc rclb in mov lret and sbb imul test dec rorb add mov test mov dec or push pop push hlt xchg xchg pushf in (bad) and add push sub movsb clc adc mov imul loope test mov test adc xchg ds jle sbb jbe xor push mov stc push mov push dec xchg xor pop mov shlb incb dec or clc add inc push push add insb sub adc js adc or stos ds arpl and push cmp xchg movb dec in cmp dec mov ja adc xchg dec mov sub add aas out movl fdivrl inc not inc sti push cmp loop cmpsb xorl scas add jae or lods mov mov cmp pop (bad) dec loopne xchg ss dec dec das inc adc push mov xchg sbb jg pop jnp cmp bound cmpsl les dec movsl sub or push inc adc xor pop xor aam arpl fcmovne xchg dec cmpb sbb push xchg push cwtl add push (bad) enter cmp mov push enter (bad) cmpsb xchg sbb out cmp inc add and aas loope leave sbb mov loopne push push ficompl mov int3 add jmp push adc inc shlb sbb test jo cmp (bad) pop xchg jno and test or and mov mov adc fwait inc stc push dec xchg lock scas clc adc inc fldcw cmp je orl xor sub push push cmp jne sbb dec pop inc dec xchg add mov (bad) dec lret imul rcll jno popa movsl mov jns test ljmp (bad) aam mov nop hlt adc sub push or push aas jnp mov add lcall shr add jbe pop hlt xchg add nop push xchg adc cmp push (bad) insl sub pusha xor dec and arpl sbb (bad) adc push dec adc xchg dec jp mov (bad) and sbb and pop das push jp fist pop cmp add cmpsb lods rorl leave adc add movsb or sti xchg mov adc (bad) and sti int3 jno and movsl pop cmpsl adc push ja incb cmp cmp es inc movsl aaa jo hlt clc jl xlat fisubrl aad aam pop pusha xchg mov or insb loope add xchg push jno xor and mov daa push inc je imul push xchg pop push adc or xor jmp roll ret in sub nop pop xor les iret dec or arpl push les mov loopne mov xor dec (bad) rol cmpsl (bad) push xor lock fstpl aad push push mov (bad) sub dec popa stc popa or loopne add cltd sbb or inc stos pop testb mov mov mov stc or sti outsl and pop pusha jne xchg shl mov movsb ds push fnstcw inc pop mov mov idivl pop rolb aam push cltd cmpb add mov sub pop daa orl sub mov sub lock sbb movsl dec mov loope fsubl pop lock push out or and xchg mov mov pop sbbl jecxz fldt inc dec and adc int pop push cmp xchg movsl mov scas xlat cmc add jp daa dec dec pop addl lods (bad) or adcb xlat lahf (bad) imul or jg add jo push jbe sub daa ds push mov enter imul or rolb pop clc inc jne dec iret dec xor dec and add inc pop test (bad) mov push add and cltd add pop addl mov in sub jge,pn mov sub cmp sar push pop jbe inc sbb aam rolb mov stos insl sub add std insb cltd idivl sub sub push push aam jge lahf sbb inc call jmp sbb ret push or pop sub (bad) mov inc ja push stos fdivs pop jbe negl sub sub mov das jo mov push pop jne jbe jg rcrl and aas mov ret jne xor mov mov lock or cwtl nop scas (bad) lret sub stc cld js adc add mov xchg add lods jle,pt mov mov or (bad) mov adc inc add nop xor and popf hlt aas fldenv arpl js pop (bad) aam jnp idivb add fcoms or add jecxz adc push fstpt leave pushf into add xchg jo cmp int3 xor adc (bad) inc or gs je aam push ja mov pop and andb or xchg push adc in sub enter daa xor aas je ret das jo,pn fstpl fwait adc xchg xchg sbb scas leave fisubl loop movsb push lea into int neg rorb repnz movsl adc push fsubl mov xor shrl lret inc inc stos mov (bad) mov icebp cs and mov add nop js pop jecxz jge mov mov das sbb jecxz (bad) arpl xor stc xchg xchg xor push add sbb inc pop xchg rep scas and adc push clc push pusha pop repz pop hlt imul sbb or stc ret sub inc pop dec repnz add imul ss pop cld sub or xchg or mov mov adc rolb jmp rcrb in (bad) imul jle popa les push jnp xor or sub push pop dec push aam sbb stos popf les std imul andl inc xor mov btc (bad) push popa ljmp pop rep xchg mov jl jp insb sub dec add xchg inc rolb imul je test aaa lds add sub pop inc pop pop sbb adc imul scas sub dec adc jmp or sbb pop nop lret int3 enter inc add rolb adc sub mov cmp (bad) nop and or jg inc je bound int sbb dec (bad) jmp call movl sti test mov jecxz dec popf or sub push adc mov mov lcall popa es cmpb sahf add push jge dec pushf loopne xchg add mov sbb sarb push jo sub (bad) pop fsts ljmp prefetch push add cwtl sub ds mov mov fs hlt mov xchg popf pop hlt dec push mov sysexit jg inc dec and movsb push scas dec mov insb pop pop jle pop icebp fiadd insb push push into push cwtl mov loopne xchg scas inc mov adc cld imul xchg or (bad) out xchg mov xor dec addr16 sbb leave leave leave or in in icebp repnz in in cmc div clc in in stc cli sti cld in in std (bad) jmp in in loope jecxz in in in out in in jmp in in out out shl in in rcl aam in in (bad) xlat fsub in in fcmovu fsub in in (bad) shl out rol roll aam adc mov mov daa movsl add scas aas cmp adc ficoml xor or je (bad) movl adc and and dec cld addl jmp mov cs dec cs setns mov adc push jae dec test ljmp add movsb in jge test xorl or es into or add nop iret testb (bad) cwtl jg jmp xchg inc add add cs add in or cs or or cs or in adc cs adc adc cs adc in sbb cs sbb sbb cs sbb in and cs and and cs and in sub cs sub sub cs sub in xor cs xor xor cs xor in cmp cs cmp cmp cs cmp in inc inc cs cs inc inc inc cs inc inc in cs dec dec cs cs dec dec inc cs dec dec in cs push push cs cs push push inc cs push push in cs pop pop cs cs pop pop inc cs pop pop in cs pusha popa cs bound inc cs gs cs push cs insb inc cs insl outsb mov daa in push push inc inc mov jne sub arpl bound out pop aaa addr16 gs push outsl outsb outsb mov mov or sbb insb daa addr16 jo int3 mov gs sub jl fisttpl jo (bad) mov fucomip mov pop popa fs outsb xor pusha inc je insb loop sbb call maxps jbe pcmpgtd pop jae fiadd subps or xlat out jae jne pushf mov mov (bad) pop das push incl imul xchg xchg pop jnp xor pop push jo ljmp gs daa mov mov jae pop sarb pop inc dec jae enter or add outsl fsubrs daa dec push add pop es sub rclb jae arpl push inc jns das push xlat adc scas das push ja shrl das iret aaa fcoml pop dec pop (bad) das inc (bad) mov cmp jno stos clc pop xor notl pop pop and mov insb pusha es and lea frstor mov pop cmpsl cmp pop inc testb jne gs inc daa mov inc jp push ja popa push scas sbb in out xchg stos xor daa push xor jo jg add pop push insb popa jo fs adc push pop das push jp sbb mov push dec sub test jae pop dec outsl lods dec lods popw sbb mov dec sub lret cmp aaa xchg jae inc gs cmp insl jae push jne outsl daa insl js mov outsl pop imul daa pop pop cmpsb pop push xor fld inc outsl outsl ret int xor and lods jbe in unpckhps inc daa out (bad) hlt dec dec clc mov inc dec xor es outsb push das push pusha orl bound inc dec and fldt xor add push xlat insl xchg add mov add div sub das aaa pop mov xchg inc cmp inc add dec hlt aaa push iret test int3 loope lock jp push cmp in push inc pop cmpsb mov push imul inc lods add (bad) and popl inc js xor or (bad) mov jne pop cld cmp adcl dec pop call add push jle insl mov insl pop mov adc or jle sub mov leave mov dec call addb jno mov mov dec arpl xor outsb or clc jmp (bad) out rcr nop cmpl fisubrl mov dec push push loop inc inc roll mov nop mov loopne or adc push rorl xor stos (bad) jo or pop fldt push je fsts mov adc add adc js scas mov test xchg pop add leave clc pop fistpl daa jg sbb sarb dec jecxz cwtl in jne jb out and movntps (bad) dec pcmpeqb inc into test mov popf jne cmp xchg cmp ss mov add (bad) jg or pop or imul out xchg es and add jnp inc iret jl push insb mov mov adc push cmpsl pop lcall pushf mov xor call orl xchg addr16 xchg add sub mov (bad) or mov mov jp gs adc inc enter jl adc sarb inc inc jne inc adc mov inc jmp push lret mov sbb and cmp mov lods xchg jge mov and jge mov jno mov cwtl aaa outsb mov push in and inc add outsb push add and das call cld add nop adc xchg lods push xchg jbe cld orl add ja in stos fsubr fcoms daa and or mov aas sub jns out push pusha jno xchg movsb out sahf out (bad) xlat call int cwtl sbb repz adcl fsubrp cli les out cltd push and ret pop mov mov and jbe cs cmp jb hlt sub insl dec xchg cmp leave lds inc xor in push dec cs sub fdivs cwtl and cmp cmp inc (bad) xor aam cmpsl and cmp ja xchg shlb jmp les ja mov outsb pop sbb pusha std out nop addr16 aaa push push adc iret and and test sub and and int3 or je mov xor loope and or or xchg push popf mov imul cltd xchg pop dec and inc or daa push adc adc sbb subl and lcall aas push lcall lcall cs imul xlat mov add stos push mov subl fwait movsl movsl cmp ds mov das lcall out cmpsb int jge clc mov in sahf pop insb fdivrp cmp pop lahf mov fidivr roll push dec push cmp mov xchg insb push fsubrs loopne mov inc call sbb xchg test loope cmpsl mov push movntps sbb (bad) and adc mov adc push push jl popa popf icebp (bad) mov xor sbb inc xor test inc and inc add mov mov orb mov add lds pop int3 ljmp dec adc lods xchg push mov insl xchg pop mov popf sub xchg (bad) xor inc dec fidivl es add clc clc jns dec lcall push xor mov or aas push push mov push shlb and add iret in rcrl cmc in push pop out gs mov jo or pushf mov mov xchg cmp or fcmovnu mov ljmp push or aas ficoml sub add add nop mov lret loopne cmp cmp xor sub mov mov out mov or or pop mov push test mov insl daa pop cwtl and cmp sbb sbb rcrl in hlt repnz mov and mov push push add mov lahf xor sub adc test lods mov inc add add xor add leave pop addr16 mov fistl jg and mov mov or jle adc iret nop cwtl popf in nop add mov test dec pusha popa jl dec xchg ret mov add in add sbb add mov xchg mov mov sub xlat iret xor enter inc jbe add out test cltd or mov adc mov mov orb sub sbb fcmovnu sub sbb icebp sub fisub mov xor jle enter hlt mov xchg lods aam push mov cltd inc fisttpll pop mov xchg shlb stos cld add pop xor imul add pop or pop fiaddl test add std and pop outsb bound xchg imul dec fisubl (bad) push sbb xorl jbe push mov (bad) and cld push lahf js adc mov shlb sbb adc (bad) and xor xor add mov leave sub xor xchg into outsl outsl sbb or pop mov (bad) sub test inc std and xor adc push mov mov clc andb inc sub inc jns push inc mov mov cmpsl xchg xchg sub movsb or imul loopne shll shr in sub insl inc fisubr inc cmpl cmp pusha aaa test inc hlt mov movsb rcrl add cli fwait daa cmp adc cs loopne inc mov push dec nop mov test pop fstl xor pop sub xor ss repnz push pop and inc rcl mov jg roll mov scas or movsb fldt push lock push mov add leave push pop mov les pop movsl nop cltd mov frstor push add pop mov inc jg sbbb sbb popa call dec sbb mov movq jmp lea adc js xchg jecxz xor hlt fidivl mov sub add lea mov or (bad) xchg or loopne sbb xchg dec hlt cli xchg push push push sbb cwtl or pop mov push (bad) jle nop dec inc pop inc sub pop (bad) or inc test fsub je daa frstor xor js mov pxor nop cmpsl rclb mov dec loope pop rcrl mov sub lods pop icebp negb cmp push hlt inc add lock dec in lock in cli into adc add pop or push call xor iret sbb imul cmp (bad) lahf aas push mov push inc and (bad) call test out push repnz test call dec aas and test test mov aaa in hlt mov insb scas test lcall xchg pop cld scas lret ficoml cmp inc addr16 inc nop pop outsb jg push stos dec jb add dec mov insb pop nop or jecxz popa and jae sarb jo dec leave add adc or roll push (bad) pop add adc loopne inc sub jl adc stos or sbb sub lea ret push pop jmp jmp jns cmp lds inc add xchg lods adc push mov lods std fisttp mov outsb and jae mov (bad) dec xchg or jbe add (bad) xchg cmpsb insb fbstp mov movsb mov mov lea sbb push jne add dec outsl push jne das sti and stc push gs add popa je popa inc bound popa jb inc jo jns dec imul pop push insb pop jne sahf in rcl gs dec arpl jbe xchg dec dec jg cwtl lods test lods pop mov std fst (bad) jg fs insb outsl bound mov xor bound inc pop aam add add add jmp sbb mov mov ret add inc push cmp push xchg or pop (bad) mov and fmul movsl dec sbb add cmp jno pushf negl popf test lock pop mov insb sbb push lahf add xchg and fistp inc sbb addr16 cmp sub or loopne adc push cmpsl sub add push jl push aam cmp clc jmp sbb cwtl mov push test mov movb inc xlat jmp xchg add test (bad) scas sahf cmp jmp pusha adc aas push jo stc iret xchg mov stos sub (bad) mov rorb jne (bad) mov fchs pop dec pop les repnz sbb adc mov pop xchg dec cs push and jmp mov inc ss mov outsl mov sub add daa and sar sub cld aaa notl (bad) repnz xor fs mov movl or je (bad) push and imul test add xchg inc test dec xchg add push xchg xchg cli das push push sbb inc inc xor sahf mov cmp xor stos das out nop adc push adc ret daa mov sarl add dec pop in xor cmp dec js rorb mov scas jb das lods mov mov add movsb into or adc sbb pop in xor inc jl and mov pop add sub cmp mov add pop (bad) jbe aam test sbb add mov cmp ds mov inc daa mov inc repz fadds in cld ret mov mov push addb push lods roll leave prefetch or mov mov add inc add add inc mov cld dec adc stos mov add aam or mov bound add lret jecxz xor and dec mov lods insb cmp jne mov pop daa push pop int3 adc icebp add in inc add cmp pop sarb pop cwtl nop into inc xor cmp xchg inc or push imul inc mov pop xchg shrb fisttp cmp cwtl adc fnstenv jo and sbb in pop inc push aas dec das xor mov dec daa xor stos xchg dec inc dec mov insl sbb outsl and jb adc jb or mov mov add xor iret xor jl pop push lea shl push cmpsl xchg xchg push dec (bad) scas sbb cmp iret and adc inc add and loope push xchg push inc inc xchg fidivl fadd rcr cmp fisttp and fcoml cmp dec mov ret pop push pop repnz js add sbb mov push pop cmp (bad) test adc aam ds jg cs mov jg dec outsl cmpsb nop pop pop and push pusha mov sbb add mov nop push mov aam jno (bad) cmp add and pop add add push cmpsl add aas or das push or inc push dec inc nop fildll mov test in pop frstor lea ficompl xor dec add bound (bad) and add add clc rorl mov inc xor xchg decl or aas flds bnd or sahf mov push popa movsl mov ficom dec jl rcr aam outsl arpl push dec mov push fsubrs pop adc test sbb cmp dec in leave jns bound cmc into jmp jge adc push cld xlat in mov (bad) xor push repnz arpl in insb cmp and in (bad) call aas fsubl loopne mov and mov movsl cmp push dec fisub lcall push fisttp mov and add jl mov insb mov adc arpl push adc adc ss gs mov mov or es sub mov test xchg orl mov loope loopne mov loopne mov mov test (bad) mov dec mov jp jb xlat or sbb xchg (bad) ds sub in add or add stos or das adc mov jle xchg test adc ljmp enter insb add push (bad) mov jb in pop adc mov mov enter push and inc rorb pusha lds pop cmp or test xor dec mov cld ret insb test push or xor push or xor add or subl jnp sbb or add movsb fbstp adc push repnz icebp mov pop jp jnp cmpsb bound sbb sbb cmp push and mov and hlt xchg mov mov xor add arpl mov fnstenv push test push hlt jnp cmp pop insl addr16 or addr16 adc push ret mov fiaddl lock rolb nop cmp fwait xchg pop imul mull nop mov mov sub pop add add adc pop mov nop pop andl pop xchg ss push sbbl push loope dec inc sub add ja sbb gs push sti jg mov mov xchg pop fcmovu pop cli push dec push push or or aas jg lcall push push jbe icebp inc repz xchg pop dec imul and push or dec dec idiv ja iret sub int3 mov dec xchg std (bad) dec not sub xchg push loop daa adc cmovl pop ljmp pop pop add jns fisttpl notb dec inc negb mov idiv push gs and jg lcall xchg bound xor push add jle mov mov xchg arpl xchg out out xor sub mov push je xchg fwait jp add cmp fbstp dec and scas push aas divl push jg in inc xchg xchg xchg jecxz (bad) or xor inc cmp ficoml fwait ret pop nop neg imull rorl or movsb out cmpl xchg pop push notb and mov inc xchg pop push pop out lret outsb sub xlat fstpl divl paddsb and jecxz loope ret mov (bad) push pushf gs xlat lock push in std pop cwtl jno je imull sbb adc mov and mov in dec xchg repnz divb lret inc nop adc or fcompl adc or xlat add and aas mov push idivl ror popf fcoms pop xchg inc or das push adc popf arpl sbb insb jmp daa inc enter pop cmp and sub mov sbb daa pop pop negl call xor (bad) push imulb enter clc adc push adc dec add mov push and in adc xor and and sub mov iret std add imull sahf xor cwtl mov push pushf lahf lcall adc idiv (bad) cmp mov mov aam and sbb scas loop dec cmpsl jp,pn pop cmpsb adc xchg xchg xchg add mov mov jecxz sub mov pop sti jl sbb adc pop jns lcall dec adc aam rcrb xchg mov loop int3 psadbw sbb pop je pop or sahf fisub or jbe sahf negl jg mov push dec testl sbb pop cld xor ds je inc imull adc sub xor fisttpl xchg shl mov xchg (bad) or test imul pushf mov push adc addr16 mov insl push fldt cmpsb popa push and mov cmc out sbb sub imul push outsl pop pushf mulb mov sbb loopne mov mov stos clc std dec sub jp or je out es jns push mov add xchg or sbb es mov mov mov dec add push cld cld xor fwait dec popf gs test pavgb out add loope fidivl ja negb out dec test jge push push dec cmpsl pop hlt cmc adc or sahf add pushf pop (bad) clc xchg sub imulb mov hlt lret fldcw sub ljmp negb fcoms push out xor cltd notl cmpsb jo sbb add inc lahf je xor cli enter push adc arpl decb pop push nop das sbb fsts movhps notl inc mov pusha bound clc test mov cmp ss out les push sbb dec mul adc fldcw xchg xchg dec mov stos add decl das xchg push adc pop cs fnsave pop std jle xor add or mov pop fwait int3 divl add mov cltd sub sbbl in pop sub pop xor jo push sub inc inc lock xor testl cmpsb sub and pop js test pop pop xor push push jg outsl dec (bad) or dec je mov js push loope push es (bad) or push mov jb adc lds out leave stos hlt ljmp push loope cmp dec xor sub sbb nop adc xchg fwait mov lds or jge outsb divl sub std or je push lock adc jg hlt or repnz push jl pop lock (bad) les div fildl mov das ret push clc cmp repnz jmp roll pop push push test (bad) mov inc push scas and jmp in jle popf mov int3 push cmp fistp inc test sub imull dec mov sub pop mov mov aad or (bad) out dec dec xchg imull pop pusha pop pop negl (bad) loopne les cmp add das mov ljmp bound test repnz js jmp in mov fsqrt out popf jp xor add cmpb add mull clc mov jge inc repnz popf xor fwait decl pop scas xor sti icebp push rol jp pop mov jbe cs shlb (bad) and shlb fidivl inc dec flds imul js out sub je adc or clc push ret sbb sub and in js add adc mul xor ret cmpsl push lret ret mov lock xor mov adc repnz es lock enter mov or jle test pusha jno sbb sbb pop aas sbb adc inc imul iret out cmpsl jbe cmpsb addb and jno fisubrl xchg fdiv int3 pop jl jbe xchg push cwtl fs cmp mov sub add fsubr jg dec divl and jbe cmp cmp ljmp or push repnz dec or in rorl add dec fdiv shlb frstor das sbb inc pop dec (bad) repz sub ss test idiv out cmp test (bad) xor loope push ret rorl repnz mov imull adc popf add mov fimul mov xor pop lods xor les add pop add cmp out notl (bad) pop lods daa xor xchg cmpsb stos push out scas adc (bad) out inc jb xchg rorl je inc or notl scas lock sti outsl loop pop cmp ret cwtl ja mov cmpsl xlat mul add mov cmp das and xor (bad) xchg mov sub mov dec xchg negl js mov and xchg mov leave ss icebp add and sbb out add ss addr16 pop orl mov outsl dec testl imul ljmp xchg push fsts (bad) or push push adc push adc das cmp cmp divb aas lea sbb scas adc inc daa testl popf je sub mov les or fldt in mov inc ret add lock neg jecxz outsb lods xlat mov test add pop or sbb sbb and clc lds xchg xchg push cmp xor fisttp add xor or bound fiaddl push mov dec jl ret popf fbstp dec adc bound loope dec and jg mov jecxz push xchg (bad) notl test add insb icebp in outsl mov add mov loop sub jae push les outsb cmp lock negl lcall (bad) xchg cmp xor js sub inc adc hlt in xor fsubs ret or and pop pop negb pop xor pop mov inc push add mov inc adc xchg pop mov cmp jmp loopne loopne divb xchg push (bad) negl add cmp into and cmpsb int3 cmp cmp shrl inc adc jmp subl les inc pop mov int3 or (bad) dec ja ret add adc maskmovq negl push adc xor add movsb adc int pop aam pop and sbb cs mov sbb or mov divl jge pop jo loop call stos mov hlt jnp insb idivl pop dec sub mov cmp lea cmpb es out add fs imulb xchg (bad) dec jmp push (bad) xor lahf (bad) xchg jb xchg lahf xacquire dec je js mov pop repz jl mov divl mov inc or divl (bad) jno inc sub sub push add ret divl shrl xlat daa dec scas cmpsb or xchg arpl mov push mov mov xchg pop sub mov js out xchg xor push jp mulb sbb push addb sbb push push outsl or (bad) lret loopne and sub mov test sti dec push adc sub inc xchg fist xlat xrelease outsb adc xor out sub imull pop sub cmpb call jo js into test and xor pop neg (bad) jbe in dec jmp stos in fucomp aaa push pop jbe sub and idivb cmp addr16 xor xchg sahf fcomps sbb and loop xor and icebp ret cs xor cld jl clc rorl cli inc divl lods div mov (bad) not jmp negb pop inc sub cli icebp add jae dec not xchg sub cmp xor jb xor je,pn bound daa pop call aad sub push outsb lret mov dec sarb rol test cmp cmp and negb xor je lret mov push fcomps pop data16 test shlb mov pop scas lock push shl pop or inc in inc test fwait hlt cmp out (bad) sbb orl adc stc je mov xorb jne cltd inc sbbb cmpsl call jmp push (bad) dec or xchg or inc adc push dec outsl push lock js repnz bound ret cmp xchg (bad) testb iret xlat shl jbe pushf fmuls fsubrp dec push sbb scas shlb in jns sub nopl sub aaa push je add jo mov lock test int xchg fimull popf mov pop add xor or in jge les in repnz jl jnp in mov jl jp jb loop dec jmpw fiadd jo dec sbb mov xchg pop push pusha push dec mov push inc cmp inc imull loop ret add and adc nop xor out hlt ret out mov shl mul pop cmpsb (bad) xor les ret rorb lea cmp movsb (bad) fisttpl adc fimull test dec dec divl lds fcomps sub imull and push inc mov das xor in ds daa adc loope pop xor shrd je js jne out push cmpsb in mov sbb in (bad) push mov inc idivl shl leave inc xlat ja push push dec (bad) jp sbb xor xchg lds notl ret inc or aas iret jb iret rcrl push fsubs rol add (bad) leave xor popf (bad) movsb mov jno dec fstl add sub bnd or dec adc or sbb das je xchg in xchg loope inc cmpl push dec fdivrl nop out fadds and insb mov loopne mov push (bad) ret lock sarb and xchg and mov or (bad) xor and xchg in mov pop jp inc jmp in pop xchg push push xor popf loope adc jl dec mov add (bad) mull lret sbb sbb popf sub scas div (bad) jno cmpsl push je pushw bound add pop push push cwtl insl pop mov gs cmp sbb cli push push cmp roll mov ljmp inc and xor into xchg jl divb inc idiv mov add mov inc dec add outsb push movsl and sub sub jmp and push fnclex inc or neg mull loop imul add push enter loopne hlt pop stos negl adc pop sub cmp mov mov push xchg inc or mov ret fiaddl inc cmp inc test test add add lods (bad) mov or xchg xchg cmp adc scas xor or (bad) mov jb sub jbe outsb into insb push test rolb xchg adc punpcklbw fist push scas (bad) (bad) cmp push repz push pop sti mov pop push jge and push (bad) add pop sub inc dec jno into inc pop repnz mov jge jno jno (bad) push push push loop div cmp or cmp mov sbb or sub loop loopne jmp push ljmp imul addb push out sbb movb repnz or push add xchg imulb xor cmc iret mov out mov mov sbb or js pop add into mov je inc rol dec adc (bad) cli scas mov cmp dec xchg push cmp dec dec inc add push sbb arpl pop jp cs inc mov ret fbld ljmp inc sti xchg testl dec (bad) or bound add mov push shll mov dec arpl es push cwtl aad cmp jb xor rorb pop inc jb add inc in mov add dec sahf and jle out popf mov cmpb sub inc dec dec sub mov (bad) xchg stos into loopne idiv mov push loop mov std push repnz mov (bad) outsl jo ds insb xor idivb out sbb mov cmp adc ret push or (bad) idiv sbb cltd std cmc add dec dec je jb jo ds mov pop arpl je,pn pop add in cmp cmc scas std div ds daa arpl not daa xchg adc aaa daa daa and mov mov fsubs jno or divb mov dec push xor push out clc aad ds movsl aam push cmp pop hlt sarl sub idivb (bad) shl adc jne outsb testl xchg imul xor je popa cs idivl bound push jl xor push add insb div xor aam je or pop jns mov jecxz inc arpl xchg fnstcw test push inc mov loop sbb stos mov mov lret negl inc pop pop xchg adc (bad) imulb adc xor ret scas sbb (bad) ljmp xchg or clc dec inc sub sub lret pusha pop cmp cmp jbe xchg xchg xchg pushf data16 jne sub shlb es gs aaa dec and popa inc mov adc fcmovbe inc stc inc mov (bad) lret roll popa add (bad) jae and das xchg arpl idivb add jle jo lcall push add not lret push or sti mov jb mulb xor (bad) neg cmpxchg jp sub div dec mov dec sub sub xor ds mov test or js ja roll out pop call jle out in sbb call and inc fnop jmp rcrb (bad) imull insb cmp (bad) outsb call lds scas andb sub sub shrb cmp data16 add xchg sbb out pusha shr inc ret mov ljmp insl icebp dec or int fiaddl sub push xchg pop scas mov mov pop push sbb and cmp pop inc insl fisubr loopne out js gs and sbb adc dec lods inc mov and lock out mov insb sti iret mov dec imulb lock and jae dec out notl add enter sbb out and cmpl mov mov or out divb (bad) aaa aaa test mull mov cld call fdivrs cli pop (bad) movsl push dec cmp sti xor aas in xchg outsb and popf repz add inc jo out stos dec rclb repnz lock daa pop data16 dec (bad) or scas enter push and mov cmp movsb or and push sbb cld xor inc popf add daa dec decl cwtl ja repnz xchg mov test notb or insl scas add outsb xchg sti imul daa std push mov out or adc (bad) mov rcrl cmp jbe sti fs cmp xor sbb daa mov divl aas push add add idiv add add int xchg lahf ja rorl sbb ds mov pop out imulb mov cltd mov sub pop sub or adcl cmpsb fwait push je inc inc hlt nop mov and and dec pop arpl hlt mov mull mov orl fisub push inc testl or rcrb mov stos sbb outsb dec cmpsb insb mov in pop adc adcl lods push mov cmp or movsl dec xor mov adc (bad) dec or push jmp ret mov xchg dec (bad) adc (bad) sbb or add add sbb push ljmp push sub mov add subl inc cmpsb repz jns and movsb (bad) (bad) movnti xchg lcall mov repnz cwtl jmp outsl ret addr16 cli and inc jae loope,pt sub je dec sub outsb fld pand inc div add mov adc pop push imull inc daa push adc add lock movsb dec jbe push xchg testb hlt and repnz je or pop repz xor jp into inc shrl add mov loope aam and mov mov not jo mov adc sub mov or cmp inc test sbb fsub lock scas negl test sbb jnp add sub push daa adc add out sbb mov jo lea stc shll dec sbb out ret outsl mov ret data16 sub inc into xchg inc sbb dec push out sbb and popa mov sahf iret (bad) adc cmp push cmpsb adc in (bad) (bad) mov sbb inc mov xchg inc ds outsb sbb testl in jecxz pop (bad) int3 push fucomi enter mov mov fstl testb lret jp dec add imul or gs enter test jo cli and dec sub int subl add fs addb xchg rcrl push in loope outsb lea out fwait call jl inc xchg push mov jge xchg arpl cmp daa adc subl cltd xor pop jns lahf fsubp lods mov leave add push xor jo out divb dec add adc xchg push push inc fdivl sub lock dec dec jns sbb mov call ret dec mov dec xchg sbb test push inc push xor cwtl in data16 enter vmwrite jne xchg clc mov testl jl in add pop mov push outsl mov pop scas mov adc cli mov arpl ret imul insb jnp jp sbb or cs aam mov enter sbb sub mov (bad) sbb xchg inc sbb ficomp negl imul negl sbb push cs pusha or jo dec jb xchg arpl loop dec adc sbb sub and adc fadds pop pop test ljmp negb into cld xchg inc inc lahf test push or jmp mov je (bad) or dec imul pop int3 aas mov jg outsb ja sub mov imull (bad) xor stc adc or adc push push or inc test jl add push jl inc push pop sahf out mov (bad) dec icebp pop or push adc push bound or pop call add in (bad) out jae cmp enter cwtl je or into ret add inc and movsl xor adc dec inc idivl adc adc imul mov test dec sbb call dec stos fadds (bad) sub fsubr test loopne cwtl out std mov or dec inc and add add sbb cmp jno inc push les imull add push lret mov push sbb ja xchg shrl jmp sahf stos in push hlt xchg mov jbe mov mov mov insb sbb and je mov dec push pop ret or mov mov into cli xor sbb lds jle (bad) or adcb cmp les pop adc out mov push xchg int push jle mov or jle repz divb sbb loop divl cmp lock and fldl xor inc sahf sbb lods cmpsl les jl imull imul pop jl imull in add or divl daa jo lock insb bound or inc clc push mov jo jo adc pop out popf negb inc fadds mov xor pop jnp daa (bad) lods adc lcall dec xor sub mov aas dec lock mov ret add inc xchg add cs push inc mov mov (bad) (bad) lock mov (bad) mov sub push dec outsl loopne mov out pop sbb jo cmp mov lods and push jecxz testb adc push ret adc jg jnp push (bad) sbb ss aas das push call and xlat sub xor push stos inc xchg sti add mov pop jo pushf mov loop in adc cmp cmp cmpsl push add orl int3 pop mov xchg popa (bad) sbb xlat inc ljmp push push testl cmp lcall clc dec and in jmp sbb fcomps inc push aaa dec adc divl adc scas mov aas mov sbb jbe jno cmc pop add dec call add ffree daa inc (bad) es jbe cld aas lcall or sub push hlt mov aad or imul sahf pushf mov fcompl imul jle mul lahf pop lea mov jge add adc fsubr jae negl ja (bad) inc inc cmp ds sub xchg movb inc mov shrb xchg maskmovq notl test pop and push loopne ds repz or stos add pop stos mov data16 vpavgb jle sbb je add divl jecxz sahf popf rcl ret push mov hlt addl and cmp scas pop fimull push jns je add add xor or mov xor mov mov movsb jns dec xlat pusha jl sub mov lret test push or movsb je mov aaa mov dec es mov sub mov cs push stos lret dec jecxz and xchg push lret push sub push mov loopne (bad) (bad) shll out xor mov add pop ljmp rolb movsb push jg insb and ds (bad) paddw (bad) jo xchg mov out testl xor add dec jmp inc je ljmp aas enter pop scas jge inc mov jb mov jl xchg (bad) imul push sbb outsl push outsb cmp and loopne mov dec or (bad) dec out jne xor (bad) pop adc or inc imul cmp (bad) pop test pop cmp mov ret push dec pop call jge testb lods icebp loop out mov push lahf mov dec cwtl adc cmp pop adc cmp cmpsb cmpsl jo loop add sbb js sbb into lods shrl mov sub sub aaa inc cmpl mov adc adc enter icebp add xor push aas push negl jo push lock push adc aas adc test stc push daa enter inc inc cmp (bad) xor pusha orl out out lret add cmp push mov jmp outsb cmpsl jns push ret out sub add mov imul dec push into or sbb add mov sub pop mov aaa adc js repnz lahf int fmuls mov inc imul push notb mov cwtl in imul push cmpl into mulb rol inc icebp mov sbb mov stc orb pop scas add imul adcl shrb xor sbb push jno int3 and in xor je notl sub adc mov addb xchg idiv dec sbb test cltd jecxz ret and cltd jbe test fwait adc mull js pop rclb wrmsr pop and mov pusha xchg and sbb xchg sbb jp xchg stos notb fwait xchg mov pop add push sbb jg dec dec push add pushf cwtl sbb push add jno and mov jle orl (bad) mov push mov pop add mov jb and and out shl adc scas mov xor negl je faddl pop sbb xlat xor push lods add sub sbb orb push jge xor xchg div mov test sub sbb dec xchg xchg scas lock or sub or lcall lret shrb ret repnz adc lahf cwtl xchg dec adc sbb (bad) fs inc or stos ret scas out pop sub jns sbb jo popa mov xchg in in test pop pop dec lods mov std mov lock add test je sub xlat jnp sbb fisubr das lock repz ficomp xor mov inc inc test loop push mov jo pop mov push cmpsb xor orb cmc sbb test push jbe sub dec repnz sahf fstpl lea xchg and rclb popf fldt cli add ss (bad) mov mov mov jp pop pop movsl mov mov jle inc dec sbb add dec push sahf and or mov js bound sbb dec or repz mov ss stos cli jmp scas push ds int jnp sbb test inc mov xchg lcall ds cltd jmp (bad) sti es mov adcl cld pop popf out test mov cmp arpl addb roll inc push ds pushf sbb negl adc scas aad rcrb mov push loopne mov jno testl fdivl adc (bad) pusha sub push (bad) das scas inc fstpl sub loopne and push adc cmc loope jno notl sbb in inc pop ja push ljmp mov jae (bad) stos xchg cmp je,pn push cwtl icebp or xor aam leave sbb adc loope test shrb imul divl push fisub jle es fld pop test test adc (bad) idivl std notb test mov xor loope jbe,pn adc mov mov mov push mov je and mov rcll fistl imull test mov and rolb call adc enter mov inc jne sbb scas loopne cmp jns xchg sbb orl cwtl xchg inc into popf in imull (bad) imul in add jp lcall and inc or (bad) aam dec inc int3 std adc pop ds aam xlat testl sarb dec jns add into mov (bad) adc int3 data16 je pop rcl xor ja lods je dec imul lock or inc sub mov loopne (bad) mov addr16 pop div lret ljmp dec repnz fldcw rclb cmp testl call xor cmc hlt es notl daa arpl jno mov stos aam inc imul xchg lahf and cmp rcr dec xor icebp aam pop call pop mov mov fadds scas test xlat inc cwtl sbb lcall test mov ret ljmp testl rcrb dec dec divl (bad) hlt adc sub jp or pushf jb mov insb add ret xchg push jle insl (bad) lea idivl push div or mov jo inc (bad) mov inc les fs bound cs rolb sahf xor adc shrb mov push (bad) push cmp (bad) dec xor fist jo sarb mov push popf adc push jb add mov inc dec js pop jne cmpsb mov push leave mov ret xchg lret stos mul cmpl mov fcompl xor push inc and inc stos in daa lret fdivrs dec jge out cld in and sbb je dec (bad) push sub out pusha inc sbb (bad) insb dec xchg or cmovne inc pusha jnp add or xor mov hlt je repnz (bad) pop mov xor out lds clc jmp imull inc imull inc gs xchg xor mov cmpsb push inc cmpsb daa shll sbb xor sbb aaa outsl sub xchg data16 pop cld mov add cmp ficomp sbb adc mov loope notl mov dec aas mov inc ss sbb or jnp aad mov and cli out shrb mov pop or subl jno test adc dec sbb fadds pushf in mov push xchg mov imull mov cmp inc dec mov popa out adc pinsrw adc inc lret (bad) jbe (bad) mov negl loop rcl push inc lock jp xchg xchg shr movsl mov insb mov scas xor or cmp lret test ljmp movsb scas inc fstpt rcr lcall mul pminsw inc js sbb cmp dec sti and jne das push in adc push xchg inc js push xchg icebp or or cmp mov movl mov rorb sbb jnp add jo push (bad) idivl popa pushf cs jp dec or push popa pop and xor das loop dec jb js mov inc jge cmp pop loop (bad) (bad) or jnp cmp pop cmp loopne cld dec insl cmp mov jne arpl xchg out mov mov push dec mov jae mov clc loop shld sbb adc negl dec popl mull pop push push notl and loope pop ret mov loopne out out mov inc xchg out (bad) enter fucom adcl fsubrl test roll jle mov xchg inc adc add push inc add cmp dec add xor sub cmpsb dec lcall lods push mov or adc lret jecxz sahf divl xchg push adc clc add lods xchg in or arpl mov xchg outsb xchg mov sbb mov fisttpll daa or sub dec mov outsb (bad) or xor and or cs pop or cmp sbb ret and cmp aad lock div aas push int mov mov imul xor lods aam cmc icebp ficom fcmovnb mov pop inc int insb stos sbb stos mov sbb pop clc add and sub mov subb gs je mov pop in fcomip scas mov jmp mov nop cli imul loope and loope mov mov mov add out lcall sarb shrb imul add adc cld push dec clc jg mov fist pop sahf dec test enter push les cli lock or mov add test inc into out orb sub pusha xchg imul out inc sbb rorl xchg int3 jle aad std mov arpl divl into lret (bad) jle out mov repz mov lock dec divb pop pop mov add loop add xchg (bad) mov sub lock inc (bad) js jb mov or je xchg adc outsl cmp sub cmp pop sbb xchg push lret push push push cmp xchg xchg popf dec add stos cmpsl pop mov ret push inc imull dec lahf ret popf mov add fsubl pop and daa in rolb jae pusha repnz imul sub stos push jp push mov idiv aad aad cmc nop stos gs cmp inc mov pusha sub xchg (bad) repz inc sbb sbb sub jle push and enter push mov in or pushf je cmp cmp push insl push cld dec inc call push push pusha mov sbb sbb call cli or into xchg mov fs lods into lcall int xlat xor cmpl push mov shr xchg jecxz jge stos jmp mov dec popa addl (bad) out dec negb lea out sub loopne das mov test loope inc cmp int3 arpl pop popf push and push inc push sbb mov or (bad) testb pop ljmp out test rol cwtl pop inc mov mov mov std mov notl xchg scas or pusha jge iret add add xor hlt mov dec movsb adc xlat pusha pop mov xchg mul (bad) lods leave mov jbe loope sbb gs cmc mov mov cmc pop mull dec mov cmp mull mov add lcall mov dec fwait push mov fdivrs pop and and hlt imull inc xchg mov xchg or inc xchg out sbb je xchg (bad) dec aaa (bad) pop iret jmp push sar imul lcall rclb test mov xor dec cmp mov cmp cmp pusha lea scas sbb sub repnz jns sbb orl in or push sbb out cwtl and data16 sub and js jecxz cmp loope sbb fcmovb lods fadds xchg aam sbb in ljmp dec mov ret lods xchg jle mov pop rcrb pop push xor dec sub (bad) pop inc icebp adc dec inc mov fs sub sbb sub cs loope mov (bad) cli cmpsb adc push cmp or iret ljmp imul popf or dec push mov sbb sarl jnp lds fistpl scas fistpl pop push xor sbb inc out xchg fstps or imul adc cmp outsl aam sub jno add and in imull sub sbb lret sbb int3 fidivrl mov daa dec pushf adc inc dec xor jl andb ret fcmovbe sub xchg testl sbb mov xor in enter ficom fisubrl pop push enter sbb test (bad) es xchg or jns insl adc shlb cwtl jg jmp outsl (bad) shrb notl sahf test mov cmc enter (bad) push lods call add xor adc mov adc mov sub mov out dec mov aam pushf fwait push fwait pop les aam psadbw call mov movsl and mov adc xchg inc lea or pusha push xor addr16 in mov (bad) dec loop je (bad) cmpsl js pop xor mov cs loopne pop test jno (bad) jecxz nop negl dec cmpsb fisttp push (bad) xor lock mov fisubr (bad) and jns divb arpl imul jmp inc xor xor dec mov scas and notb jne loopne xchg jo insb (bad) loope stc test cmpsb push les psubsb dec call push xchg add rolb scas xlat stos push mov sbbl cmc mov test or lret mov cmc mov in loopne test pop add bound loop test mov push push add or mov xchg or clc test divl and sbb jecxz lcall test lock (bad) je nop adc and pop notb push mov add cmpsb out dec js sarb dec fidivl lods sub adc sbb xchg fdivrs mov lods in scas adc add leave cmc movsl dec std fildl push ds mov fstl (bad) mov dec imulb or dec add aam pop pop rorl ror icebp sub sub cli cltd clc push shrb (bad) in adc bound jg test mull or scas or cld add cmp pusha mov cltd loop adc pop repnz fstps or or or or out mov mov sub mov and data16 xor sbb out test aam aas maskmovq (bad) dec jmp and or bound cli adc sbb cmp adc push push dec jmp mov arpl inc cwtl dec cmpsl cwtl stos sub and into inc hlt adc add jns stos dec pop lock outsb inc je decb clc inc negl std pop int3 out (bad) call lret add pop xor cmp xchg or popf cld adc and push pop push sub inc lds cmp mov es aas in pushf push fmuls ss dec push push pop mov iret ficompl ds test adc je bound je jp iret sub out sbb pop push mov pushf into mov cltd jb outsb sbb imulb adc mov pop sbb es sub jns pop out hlt addl je ds in (bad) lock mov push xchg repz lock push out imul dec add mov testb mov push jmp fcomps popf and xchg movsl xor inc testl xchg notl sub add push fsubrl or or jle movsb push movsl dec arpl ja,pt xor (bad) jne xchg fstp (bad) negl in xorl popf lcall mull pop ljmp test fstps adc rclb rol inc movsl (bad) cld call pop push mov popa add mull or loopne dec cld shr xor dec cmpsl aad fsubr xlat ds lahf and fldl cld jae xor or sbb cmpsl lcall daa jge ret pop cmpsb loop cltd jge icebp sub mov loop push mov adc ljmp movsb movd inc mov (bad) mov mov xbegin lahf adc sahf cltd push ret mov push mov subl push xor mov scas notb lds xor inc mov shrl dec ds mul xlat daa adc and insl sub mov jbe sbb (bad) ret sub pop mov mov sub repnz cmp xchg push les push test repz xor mov mov arpl xchg xor or ja shrl icebp insb cmp mov sbb pop cmp or popa stos das insb fwait pop and jb cmp adc inc cmp cmp push (bad) or mov jge daa push notl xor shlb insb mov mov and idivl or mov (bad) jno push inc (bad) sbb sbb mov test pop add sahf pop cli test ds sbb loop int enter mov cmp pop cld push jg cmp xor (bad) sbb sbb adc inc test out cmc lods mov mov mov insb or sub jbe sti mov jno int adc adc lahf push add or jle and out xor into (bad) idiv testb fdivrl push imul and xchg xchg sbb cmp out sbb mov int3 xor js push or arpl sub lret lock push jg sub cmp push nop jle and test sbb xor dec nop pop in or add mov push or xlat in out xchg inc mov mov mov mov in and pop jl mov sub adc add fidivl decl push ja jne inc ss add adc xor fcomps pusha ret imul repz mov inc jmp xchg ss inc int3 cltd mov rcrb jbe mov andps and imul mov mov mov popl add sarb in (bad) mov neg movsb jo repnz or inc pusha cmpsb jnp frstor nop sti lcall (bad) call test and add mov xor cmp daa bndstx flds outsb jbe sub lret mov daa add jne insb bound add inc (bad) xchg adc sbb outsl invlpg test sbb jns mov aad inc and dec jo xor (bad) push fild push inc push ja bound push ss popa outsb ss outsb xor pop outsb insl imul loope push xor fiadd sahf mov add push pop and ja ja movl stc adc mov test xor sti sahf mov pop push mov push sbb call sahf push and sbb cli or push jo push inc push and movsb rclb cmpsl pusha cmp rolb cld add fsubp push xchg push pop test cmpsl jl jl iret inc stos push xor add cmp out mov and clc push mov push push inc push push insb sbb jnp inc add call mov mov push and lock es dec repz mov dec hlt les test xor inc test (bad) iret jle or push sbb push call (bad) push and movsb inc je fmull lods push jnp in roll sbbb aam dec sbb int3 cmpsl jge adc out loopne push cwtl dec test sti into fadds js push imul ficomp push sarb add out or mov jge imul push mov les push push mov imul cmp push popf adc loopne ds push or mov push in mov sbbb test xor out js xchg les or mov sub or pushf mov ds loopne mov adcb ja out pop sub loopne addr16 push in mov push rclb push fnsave mov sbb aad pop mov bound frstor test popa adc popf (bad) das rolb push sub sub mov scas add xor mov fidiv ds dec call and js clc and xlat iret enter fcomp flds jno dec (bad) (bad) loopne jecxz in adc mov mov and and popa je xor leave rcrb xchg addl cmp push push aam insb pusha adc sub jbe adc push jg test adcb aaa sbb xchg dec add push push inc aam sbbb aas scas incb or push es adc repz sub cmp repz dec push pop pusha repz repz iret repz nop cwtl mov iret repz enter out iret repz sahf out sahf or sbb sub jb loopne cmp cmpsl add add add jb fs sbb movsb and pushf cld mov or enter mov in leave in leave test je fcoml leave inc in adc aaa stc add push pop and xchg insb call dec add popa or adc iret imul mov adc fs ss test test enter sahf out cld adc and inc out sahf out pusha insb adcb mov add cmp sub sahf push sub aas (bad) leave sub cmp jmp pop jbe add push and push add or popaw frstor mov jns xlat adc pop push or xorb sub xor push dec fdivrl mov pop push call aas jnp cmp push nop jg movsb aas add mov pop mov push enter jg lahf neg dec call mov mov mov push add jns out push out sahf cwtl adc adc adc popf out fmuls in add add push jns jnp sbb push sbb push adc sahf out jo test sahf out sahf pushf or int jns sbb rclb repz repz push inc sbb push pop insb rcr orb sahf out and mov add out sbb roll add repz dec rolb xor out sahf out mov mov sahf mov pushf jns out mov cld js out out cld (bad) mov imul add jbe (bad) cmp mov xor push punpckldq fldcw pop ret add jle jmp rolb or mov ret or test push mov fcomps push scas daa cmpsl jno stos add sub jns cmpsl les push test (bad) sarl aam hlt add cmp jnp and data16 inc dec pop out iret rep je jl sub rep add adc add std add mov lds jmp pushl jge dec (bad) jle out sti jmp out out add cmp cmp unpcklps cmp cmp adc xor ss prefetchw daa daa daa daa or adc es daa daa pop add jb or xlat jo jb push or iret repz push fmul aam pop iret repz hlt in add mov xchg push lock xor negb push faddl mov movl out pushf mov fsub repz out add adc iret repz dec pop pusha je xchg cmp repz mov ds add adc sub adc add inc mov or pop (bad) cltd lods outsl adc jge push pop int cmp (bad) push add or int3 out lsl insb jns out push std jl mov out sahf out stc mov les fdiv in cmc add cmp repz adc and repz repz dec lock iret repz out je mov cwtl cmp repz lods jmp ljmp add add inc xchg adc adc ret iret call (bad) roll outsb mov add or bound rolb push xchg adc iret mov inc adc nop pop lcall or add nop dec inc or or insl insl sbb mov mov adc pop add das (bad) inc ja add push arpl adc push loopne xlat ja fnsave inc mov pop pop jnp outsb pop add cmp roll stc mov cmp sti cld std (bad) incb ds repz test pushf out xchg push add mov pop loop pop push inc pop cs repz inc push mov fmul repz pop jo fs iret repz nop call iret repz xorb iret (bad) hlt cwtl sar movsb ds repz cld mov add shrl push add iret repz adc int3 and cmp repz adc inc adc cmp repz out cmp sbb jo add sahf out sahf andb sub sahf out mov out sahf out (bad) xor rcrb cmp cmp lock jns pop xor inc iret repz push dec cmp repz xor inc repz repz lods push pop mov pusha pop int3 jo fdivrl repz fs nop push or out sahf out cmp je sahf out sahf sarb loopne test out lock test iret repz fdivl nop in repz repz xchg clc push cwtl out sahf out mov adc sahf out sahf mov nop jns out lods dec mov sahf out mov sarb rcrb mov enter cmp adc int3 rclb rcr cmp repz aam xor data16 repz inc fmull push sahf out sahf push loopne pusha in jns out jo sub out nop lock mov hlt dec mov pusha (bad) xor out cld insb rolb dec js cmp repz test or jns iret nop add out sahf adc and xor out and inc sub repz out sub mov iret repz sub cmp cmp repz nop inc jo repz repz mov cmp rclb sarb repz pusha call jnp jle (bad) push insb and iret repz jo push and xor repz js test push cmp sbb pusha push mov mov adcb aas nop mov and mov push out (bad) ja cmp rclb (bad) rclb pop inc or add jg cs leave je (bad) dec adc cmp repz mov repz xor aaa jp cmp mov out sahf rcr call iret roll or and cmp repz dec push pusha insb js sahf (bad) int nop lods scas clc push add push adc sahf out sub dec pop out sahf out jo mov lods mov add mov add push cmp nop push nop imul mov aam nopl cmp push inc inc daa xor cmpl add push push negl push push sub mov adc inc cmpsl inc es xorl or mov pop mov push dec dec mov in push ja fidiv cmpsb hlt jle push cmpl push (bad) or or into out mov push dec push sbb and fdivl movsb jne cmc ds aam scas addr16 mov sbb xor cmpsb sub fistpll scas outsb je jo mov popf ja add push mov mov test sbb out mov sbb into or js cmp sbb cs test add scas jne es es jmp xor out cs adc mov dec (bad) or sub loopne jle sahf or pop inc add fidivr push hlt es mov sub mov lret and roll mov outsl jge rcrl test js adc or fildll inc sbb enter cs cmp outsb xor push push in test add mov push (bad) lods cs test add push fcomps sti push fiadd xchg in in add stos jnp sbb cmpsl push pushf inc je sti push add push xchg push icebp loopne xchg cmpsb jl dec (bad) ret cmp (bad) cld mov cmp xor push (bad) test cmc jecxz addr16 pop add iret call push add inc ja add icebp fidivr dec inc adc cs fimul movsb inc data16 out inc xor push mov jecxz jle inc scas iret dec lock (bad) push push iret ja insb fbld dec cs negl dec div mov es push pushf and cmp cwtl dec sbbb pop insb ds pop add out push sub push xchg dec int3 and inc add push testl stos pop shr mov scas ss xchg jbe rcrl push jbe pop inc mov lock out out dec pop lahf jp xchg jbe fs mov lock jbe mov mov cmp hlt lahf ds das jae loop scas lods mov dec xor vorps push out addr16 add push push mov pop cs or push mov jno pop movb add push imul xor (bad) mov mov push pop dec fbld jmp mov data16 dec aam je rclb icebp mov movsb out xor es mov push in outsb loopne add push push out enter aas data16 sahf pushf cmpsl push fidiv jp lods ljmp fsubs or insb sti pushf jb mov and xor popf inc xchg xchg stos and inc test inc add enter xchg push add andb out adc push pushf and nop in test mov and push adc add mov add fs or fiaddl pop add add out inc push dec add add pop dec add pop inc sbb inc and sti mov push and pop dec aaa push pop mov add sub sbb push dec xchg push loop imul imul mov mov push xchg neg std fimul ret inc push push push cs and inc push cs and sahf negl xor dec cmp testb push out imul push jbe dec or jge jmp push incb add adc sub sub ja adc iret mov sub rolb jnp ss sbb push mov xchg or enter pop es faddl cld jg clc daa iret xchg das aas push pop jmp rol cmpsl lods cmp add pop or push aas xor xchg (bad) jg add dec ds inc addr16 insb addr16 or push mov movsl mov pusha test fs data16 mov psubb jnp loop add push out lock int fwait neg out (bad) cmp mov mov add pop pop xchg lods rcrb clc pop push (bad) aas pop mov imul aas pop xchg addr16 jbe fsts pop std lock add sahf ss insb jl (bad) push data16 mov into repz sbbb arpl pusha cltd cmp mov rolb mov lock xor ds push xor out (bad) or push cltd pop (bad) cmp jg add ret cmc jns (bad) cmp (bad) decl cs cmpsb mov add add fwait int inc and cmp mov comiss dec pop sub (bad) aaa fnstcw pop std clc lock aas inc imul add insl jmp notb pop outsl clc popl shrb arpl sub add sub iret xor nopl xchg add cwtl shrl xlat pop in pop and adc jae pop cs add addr16 xor ja pop cld push cmp stos push fs fsubrl aaa adc das xchg pop lock or push sbb loop inc fldcw jge cmp sbb push sub sahf int mov add inc addl fsts xor sbb push push sbb dec rolb fldt loopne jne ret roll lock cmp xor fcompl jl sbb (bad) fstps sbb or test or push insb push shl xchg pushf out and xor dec and add mov addb rolb dec jnp push and add out push add mov jge aas cmp subl mov jnp iret mov repz and daa and mov es xor cmp orl push adc cmp dec push dec push mov neg xor push daa lret xor ficom push (bad) sbb out insl xchg lahf dec daa dec addl daa mov (bad) jnp jae ja push daa clc push (bad) cmc push ja mov ret jb mov adc jo nop daa cmp imul mov xor and daa inc scas mov daa dec sub leave fistpll aas push xor mov xor sub pop aas jns scas cmp push pop push es and int3 push and and out jo (bad) cmp jmp int3 je (bad) pop push (bad) cmp cmp xlat push lret fcomip cmpsl daa push and push mov adc (bad) push data16 xsavec jb ficom clc repz push addr16 or push xchg adc into incb inc inc inc or jmp std test ljmp or lret (bad) daa inc aad push push jle mov dec dec pop daa mov out in push test incb aaa and dec nop divb add daa fisttp mov daa or arpl dec pushf es adc mov or fild ss arpl daa leave ret (bad) cmc ds shll xor arpl or mov inc nop xor (bad) lahf and repz out fs subb daa push cltd add add daa mov xchg aas daa dec lret ljmp inc inc es mov jnp daa dec add jle xor lock out in repz adcl push test dec inc add adc fbstp xor adc xor push jo sbbl movsb sub push repz iret xchg mov arpl cmpl lcall arpl aas das es (bad) lret iret push out inc in push inc sub ret ret xor inc sub call fs enter pop outsb data16 inc push fwait gs cltd (bad) je push inc mov sti push jle and inc aas call or fsubrs lock cmp jmp dec sbb pop xor dec xchg leave and mov stos mov adc or mov jmp pop mov gs jne adc cmove or sub sar daa jle adc cltd xchg cmpsl (bad) cld test xchg sbb mov inc subl pushf rorl fstpt clc or sbb xchg es gs sub push (bad) daa dec xor mov outsb jnp xor dec daa dec daa jae fsub dec daa clc dec je dec cmp dec jl pop dec pop or rorl jo jl daa (bad) mov mov xor cltd mov call cltd cltd and imul aas mull adc xchg aaa fs popa or sbb movb jb push mov adc inc mov sub ja inc daa int jb shlb push stos sub cmpb adc xchg dec scas inc pusha and cmp pop popa and cmp shrb jmp je loop add pushf loopne xchg daa fcmovnbe ret and lret (bad) aaa into aaa push data16 outsb daa and sub pushf add cwtl stos sub aam cmp ja push insl mov push push pop add push and loop pushf es and stc es mov fnsave push and sub xchg pop dec lcall popa lock daa xchg add stos push into add push adcl aas test into adc aad and add xchg scas mov mov and cltd xor mov rcrb js xor mov pop stc pop mov lock in dec jns out xchg orl pop or repz push xor jmp sub cld push or sub lock mov add pop add push add iret in mov push or pop or andb push or out or pop push sub pop test add add add mov dec lds sub out iret lds or dec mov pop lahf and adc adc sahf out push and jnp out push and sbb fdivp sahf pop adc nopl mov sar push or pop pop add cmpsl adc inc das jg mov or push add add pop repnz cmp add jl dec jnp push push sub sbb jns roll push push push push jnp sub push ss dec inc push inc outsb cmp repz fidiv pop sbb sbb pop adc push out sub or loopne xchg cs pop jo jbe addr16 packssdw adc dec (bad) dec out (bad) and push pop fnstcw int or push sbb sbb sub lahf idivl pop push push sbb pushl mov mov jnp mov push adcl repz push push inc cmp jl jl and sbb adc adc push or daa (bad) jno mov add or inc sti lock (bad) add add pop and stc cmp data16 xor pop cmp mov sbb scas xchg and xchg adc add movsl adc mov cmpsb mov mov mov mov add adc mov inc scas push neg (bad) imul movsl es cmpsb xchg mov (bad) stc cmp xlat jnp push insb pop dec cmp dec fildl sbb push adc lret in mov push or mov inc cs adc sub out daa add jp int push bndstx and mov fidiv (bad) cltd (bad) decl sahf add cs push int cmp (bad) imul (bad) ljmp fdivrl cmp adcl test icebp jg cmp jns cmp je xor jno cs and fiaddl adc sub or sbb add push mov (bad) cmpsl insl fildll xchg sbb mov cld cmp addr16 inc xor and je sbb sub push pop outsb pop pop inc movhps int3 dec stos xor out fild add fldcw xchg mov push sbb repz cmpsl and dec push fs (bad) (bad) (bad) in xchg push lret add lods inc push adc lods jp hlt stos (bad) imul (bad) (bad) (bad) jmp jp lcall push decl pop inc incl push cmp (bad) (bad) in pushl pushl xor insl inc das push inc ljmp ljmp notl sbb xor enter mov (bad) fwait sbb mov jnp push push inc jo cmp xor sub push add sbb push sub or mov pop testl add xchg or out and pop adc fdivrs sub inc sbb pop jp xchg or out mov mov fidivrl xchg jle mov xchg cmp (bad) fist mov mov test jnp push jb call and popa dec incl dec cmp jmp sub popa ss pop xor ss fcomip in cmp popa cmp jmp (bad) push sub push rclb pop out jmp lcall push push inc xor leave repz push sbb adc pop cs mov inc jmp xor negl aaa pop in aad mov or out lcall xor push mov jg jg sub ljmp xchg call lods cltd call stos insl (bad) outsl push iret test dec movsb xchg inc mov push ret movsb push ret jg mov movsl push mov sahf xchg pushl xchg xchg fcomip pop mov cltd jp mov (bad) jl inc push (bad) decl xor cmp sbb push sub adc jmp (bad) icebp (bad) aas and bound and xor mov sbb fwait dec mov xchg sbb and es (bad) out cmp sbb loopne test add xchg xlat mov out movsl push femms aaa outsb or js cmpsl loop push out sbb sbb cmp (bad) mov mov pop adc out scas xchg (bad) fnsave movsb jmp mov scas push mov push les fcmovne ret push iret lret into fxch (bad) call (bad) sarb int mov leave mov ss mov inc mov pop push in out mov mov push lods mov mov cmp ja decl push inc out (bad) adc pop pushl cs pusha ss inc and icebp sub pop rcrl andl cs cmpb rcrb insb es push inc xor sbb adc or jbe inc cmove mov (bad) or sahf out adc fisubr sbb aaa (bad) pop (bad) jge (bad) js cmp shrl mov mov jle lret int3 mov jg ss int fnop push loope jmp (bad) jmp fcom push in pop mov into leave out les (bad) (bad) mov (bad) mov lcall scas xchg mov xchg mov mov push mov push mov les fwait dec mov (bad) mov (bad) mov mov mov push cmp pop xor pop xor jmp loope cli and outsb inc sub sbb adc sbb imul mov jne (bad) je sahf dec xor pop jne pop pop ja daa test cmc pop push scas and test negl xlat dec (bad) pop dec add pushl mov xchg sub inc popa adc add or pop icebp incl pushf mov push fidivl out (bad) lret push (bad) push loope (bad) out insl sti (bad) out es jmp (bad) (bad) (bad) ss inc sar jg mov test pushl test mov call jnp call insb push js pushf jl jmp pushl cmpsl test lods mov mov adcl (bad) (bad) ja shrl pop (bad) mov xchg mov jle das aad mov jle pop inc (bad) imul pushl call adc insl inc sub sbb add jle cmpsb jmp jnp fs xor roll push syscall sbb rorb add dec jne scas cs sub add stos inc push or out vpsrad mull sub incl push add jle push push stos ret fwait cmp xlat int3 scas adc fst push out push in in (bad) jmp push push adcl (bad) aad out les pop dec sarb xchg into lods out sahf xorl pop push mov pop dec pushl dec outsb push dec push pop push incl (bad) (bad) decl outsl popa lcall jge ljmp sbb nop jg mov movsb jle mov fbstp inc ret stos (bad) mov mov std (bad) cmp jge das incl dec xor sub push into (bad) lock (bad) mov subb or xchg cmp sub mov je pop or ljmp mov neg mov xchg pop inc rcll out sbb pop push jl and mov push sub mov out out out imul out out out (bad) fldt loope,pn lret (bad) mov push icebp push pop jbe inc movsb fwait out mov movsl test scas clc add push ljmp fisub push ret lods xchg mov push lcall xor cmp xchg jl dec mov ds imul js jle push lods mov je lea movsl xchg mov mov into ret scas mov mov test cmp push aaa incl xlat xchg mov push scas and dec sub iret repz sub sbb loop es incb pop inc xchg js (bad) daa subl shrl ds adcl xor xchg pop mov mov mov xchg shll in jmp out icebp fsubrp in clc scas mov in shll into (bad) (bad) fld mov push cld scas es stos mov pushl outsb mov push cld adc pushl dec jbe lods jle fisubr mov push jmp push fisubrl mov xchg sub bound inc dec aas jmp movsl out push dec incl call je cli loope outsb movsl jl push push mov jle cmc pop shrl test test ljmp (bad) mov test incl adc push mov xchg mov test push push dec sub and test inc enter jbe adc testl stos jo out and cmpsb or fimul cmp adc rcrl into (bad) leave mul fcomip out icebp mov mov jmp jecxz (bad) push aam xchg or mov lods push push inc cmpl cltd ja scas scas mov es incl (bad) out scas fcom (bad) jmp jmp xchg push leave mov push mov (bad) imul push xor arpl mov push jae ds jge sahf xchg mov fnsave mov jmp mov js xchg cli lret cmc pop shll (bad) push loope lahf xor (bad) mov mov jbe sbb shll dec mov mov popf andl pop sub cmpxchg pop mov add push les push sub iret loope popa adc push or adc mov out divb inc adc push sbb (bad) mov rol imul loop lock pop mov push lock fcmovbe jmp ror shlb (bad) mov ljmp xchg (bad) jmp jno js push jmp cmp pop out in (bad) out in jle call push mov push fcmove ljmp mov fwait jge int data16 inc (bad) cmp sbb arpl (bad) decl and pop cmp ljmp aaa pushl inc incl lds mov jle (bad) jl pushl mov mov in lods push mov mov jb test (bad) sbb pop enter call (bad) cltd push jnp ret push pop sub inc ss sub add jg arpl mov sub add idiv divb iret pop push loop data16 (bad) jle or jbe in loopne lcall repnz lock (bad) stos jo mov (bad) (bad) into (bad) fcmovnb ret call mov sbb scas stos push mov mov mov mov incl jbe mov jle cmpsl fdivrs (bad) ljmp icebp pop (bad) das jle (bad) inc cltd jp lcall repz xlat popf movsb outsl push incl (bad) cmp sbb push xor jmp xor outsl inc cmp mov (bad) jp test mov outsb pop (bad) sub cmpsb lods subl (bad) jns popf mov lods cltd mov mov movsl push xchg js jae (bad) push ss inc inc clc stc adc add cmpsb mov movsb (bad) nop jns mov jne push pop inc aaa add mov sahf pop inc add dec pop test add cmpsb dec push jo inc sub (bad) mov repz cli ljmp out (bad) jmp fdivr out aad loopne int push std outsl faddp ret mov test sahf lcall jp mov ljmp inc inc (bad) jle pop inc lret repz nop cmpsl bound out jle out out cmp hlt (bad) inc sahf cmp xchg outsb rcrl mov sahf push mov cmp pushl adc dec mov push cmp xor cmp ret pop bound xchg imul cmp jne push push pop (bad) xchg push cmpsb push mov (bad) cmc mov bound push loop add sbb lods and push push sbb lcall mov inc and add nop (bad) or pop push lods xor sub adc sbb sbb or lds (bad) fcmovbe (bad) outsb icebp in jmp out in idivb mov (bad) sar (bad) scas ret (bad) mov push icebp lcall mov mov out inc mov inc inc lcall outsb ljmp in in out out out stos js cmpsb (bad) shr popf orl xchg je jne pop outsl mov ja sahf iret push rclb sti or pushl sbb incl sbb pop xor (bad) xor jb cmp pop cmc dec pusha push inc jle call pop jmp mov xchg jg fbstp shrl mov mov pop outsb sbb push or (bad) (bad) mov mov adcl dec inc pusha leave leave repz push loope jne pop (bad) or pop jmp adc pop into sub aad mov push imul xchg fstpt jno xchg push scas into (bad) ljmp into ror call mov dec outsl stos jo cmpsb (bad) mov xchg (bad) subl push jbe inc adcl jbe call lds jmp in fcompl out repz hlt loopne (bad) (bad) sub fwait mov jb xchg jae mov xchg jbe xchg leave pop mov sbb xchg (bad) cmp push sbb pop push out out push cmp push sub incl decl nop push lcall mov outsb sbb stos add xchg jle stos xchg cmpb push xlat into mov inc sub sbb mov iret repz push dec cmp and dec sbb mov lods imul movsb pop mov aaa outsl add test sub inc pop imul test idivb and pop xchg mov xchg out jmp out jmp imul mov decl sub mov mov push ljmp pop insl lds push pusha pop ds cs in into test loop incb (bad) lcall hlt repz ja fidivl nop jle xchg jo mov mov es jae xchg pinsrw jg xlat push mov xor adc enter and pop cmp out push jns cmp outsb push clc cli (bad) jmp cmpsb jl xchg (bad) mov xchg sahf xchg ljmp adc (bad) pop sbb scas xchg jge addr16 mov push push inc cmp mov ud2 mov pop nop push mov aas incl inc adc mov aam fcomip adc loopne push sbb push test (bad) jno ds lret sahf out in movsl jle adc not int fadd ret push in jp dec scas cs (bad) lcall (bad) out arpl addr16 inc call clc push out fsubp ljmp jecxz out mov repz pop jnp insl sahf mov jbe push mov dec ret xchg ja rcrl jae aaa (bad) (bad) fbstp inc sub ljmp xor jbe cmp sbbl lea mov cld bound insb push jbe subl mov mov stos xchg cs sahf jae addr16 pop inc call test pushf cmpsl fnstenv push jae popa sahf out sahf dec inc xor fnstsw jns push aaa in fcoms pop iret pop add les xchg pop movsb mov test pop out pop push and xor adc test into mov inc xlat sar loop lret clc dec push add leave lods stos stos aam scas inc pushf fwait ljmp jp cld push in cli pop ljmp dec push lahf lcall mov into mul pop jecxz push enter div xlat jno pop mov ss mov dec repz insl xchg mov cmpsl push xchg xchg ret jp fnstcw xchg (bad) out cmp pop (bad) aas and call es (bad) faddl cmp adcl push loopne add push mov push jle int test scas jle push aaa (bad) sbb add adc es jg or sbbl pop sbb test pop add pusha add mov push (bad) (bad) ficom xor adc and aam or movsb mov jmp ror push int loop imul cmpsl inc cltd xchg jmp mov jo,pn push (bad) jns pop call mov pushw test incl fsubs jecxz sbb idiv hlt in mov pop mov imul lahf btr xchg outsl xchg jo xor sbb je out lds fcoms mov call and cmp fnstenv jmp bound ss aas push pop dec fist mov inc mov cmpsb les mov xchg push or push fidiv lahf movsw and mov es cmp fwait push (bad) push cs test shlb scas enter stos mov mov test ja (bad) push push and pop test push inc divb xor ret lret lods lcall (bad) fmull push mov mov out movsl mov jg mov push dec decl aam in xchg dec jbe out jecxz loop daa int jmp loop jecxz cmp fdiv shlb mov mov imul mov jne xchg jno ret xchg je,pn inc shrl mov push repz clc pushl sub lcall sub outsb es cmp mov in inc xchg mov jo paddb andl adc rolb andb push xor pop sahf popa push push inc xor shlb ja inc mov das pushl mov iret sub cmpl divb add lds (bad) xor jnp push or sarb push mov lds ljmp cmp jge xchg push ret dec dec ljmp jecxz jmp mov inc fiaddl call jmp (bad) jmp jmp push sub (bad) jecxz jecxz mov addr16 addr16 push jge into insl mov imul fldcw mov xchg ret cli mov dec fcoms xchg pop inc addb inc es pop xor or das pop ds cmp inc call cltd push mov mov neg mov iret (bad) cmc pop pop mov jns ret sub push dec push cmp xor adc subb test dec bound scas adc mov imull daa pop jle push mov cmp push pop push stos test pop (bad) int3 mov lret test outsb xor adc cmpsb mov push push pop lods ret adc push ss push sub jo ljmp fsubs pop pop pop popa adc push jmp mov sbb loop out iret repz cmpsb mov fs gs iret cmp push mov fiaddl ds mov in push rcll xchg cmp ja fldcw scas jae decl pop inc adc clc push xor jmp pushl aaa out push fisubl cmpsb jnp mov lcall mov popf or add lcall cs cmp cltd movsb imul scas adc add and das or (bad) flds pop push adc adc sbb cs insb push add movsl test cmpsb cltd out mov (bad) lcall cmpsb jl imul mov lds call imul fsubp loopne dec pop add ljmp fucom aaa add (bad) ljmp das mov (bad) pushl shl arpl jle sahf scas (bad) push out mov mov pop ss pop (bad) scas adc les aad push push std ljmp xchg aas pushl sbb decl push jmp sub ss jbe aaa aaa xchg dec lods jle xchg scas lds out adc mov push roll mov dec xchg out insl pop push cs aaa adc (bad) xor and or dec and pop sbb imull out push adc adc repz and adc test aaa std outsl xchg mov xchg test jns jl pop jmp inc jmp aad out cwtl mov out inc jecxz fucom pop ljmp outsb and pop scas movsb pushl das call int sub adc repnz pop lcall in in repz mov jo (bad) pusha push test mov popa dec push mov push mov xorb aam dec scas xchg jge jle (bad) scas das es mov fldenv dec mov nop jno je out jbe rclb inc cld jg (bad) (bad) cmp adc dec sub pusha cmp pushl sbbl lcall push sbb mov (bad) scas and fwait es nop (bad) je ret push push fstpl adc loop pop push aas pop cmpsb sbb cmpsb ljmp sub jns (bad) and sbb mov jg sbb sbb (bad) jo inc outsb push dec mov stos inc call fsubp mov mov out faddl fist push in mov xchg pop das push jnp or jmp pop call rcl out push push pop rcrl (bad) cli sti call jns scas xchg push mov popa push rorb sbb aad sub (bad) les mov (bad) mov mov push push mov push ret les (bad) fistl mov dec sub incl sbb sub pop sub outsb xchg xchg arpl cmpsl push mov out ds cmpsl stc roll xchg daa mov jmp sahf jl bound sahf out sahf cmp es sbb in (bad) dec dec das pop daa push cmpb mov cs push or push sbb sub outsb ss int and mov test jo imulb pop out (bad) jge push fsubrl icebp call out loop fsub push fucomip sub sub sar jg mov mov xor jmp push call (bad) stc sbb nop loop sti cmc ljmp scas sbbb push mov cmp mov mov mov push insb inc and pop xor mov adc dec jbe cmp ret mov mov rorw (bad) aas mov movl inc xchg ficoml pusha cs cmp es das in and push rolb pop cltd push mov and mov pop push push cmpsb adc and leave sbb test add aaa adc pop testl loope add test cmp sahf cmp stos es jp xchg (bad) scas jns dec jmp cmp lcall (bad) in in in inc dec cs jecxz in fstpt in faddp mov sub pop sub mov xor xchg ds aam sar repnz and sti cld jecxz pop loope jbe,pn jg sbb (bad) push mov pop pop imul adc lock xchg pop cs je xor mov xchg jecxz mov mov sahf dec imul cmpsb push jbe push aad aas mov aas (bad) cmp pushl cmp sub pcmpeqb lds iret (bad) mov in (bad) jno pop es mov outsl cmp pop pushf (bad) pop movl dec pop pop sub dec scas add bound adc out (bad) mov push notl sub and outsl mov mov add inc push mov in stos test imul out out sub (bad) mov (bad) lahf mov pop in mov ffreep out push jmp hlt mov outsb stos in imul push sbbl test inc push jne cmp xchg fdivr jb push ds mov lret push push rol (bad) (bad) and jecxz cs sahf sar inc fcoml lahf push and push xor mov add xchg pop pop stos push lcall xorl pusha xor cmp push pop push inc cmp sbb push jo in pop pop xor push (bad) mov push stos out pop push testb sahf pop sub cmp imul icebp scas add lods sbb adc sarb inc push mov fsubp out loopne mov jecxz in (bad) lds adc or pop push mov shl (bad) out mov mov mov sub lods jl ljmp push mov minps cmpsl xor (bad) mov enter cwtl jp mov (bad) mov push mov push add es fcoml clc push mov sub aam out les pop call sbb jl mov xorb cs inc (bad) xor (bad) ss sbb cs popa addr16 pop push repnz das add out xor cs push pop or sbb or xlat jle xor inc jecxz sbb xchg mov fwait push xchg test sub shr (bad) sti jmp (bad) out lds loop pop imul jecxz sub fstp loop in out jle lods outsb add and pop cmpb (bad) fnstsw cmc adc xchg jp ljmp pop jle mov pop push pop jmp shrd push jno xor dec mov rorl ret push lds movsl sbb pusha push lret xchg pop add out clc dec iret mov dec and jl dec loopne (bad) push pop mov push nopl out push sahf xchg mov pop out add fs dec push ds and xor push adc pushl adc div or insb ds sbb and jnp out jnp and mov jmp stos jle scas (bad) pop loopne lds out pop out fnop loope mov dec xchg fdivrp pushf test pop test push push pop (bad) mov adc sar (bad) fsubp sbb std inc mov mov jns ljmp jg inc in push push pop (bad) (bad) mov jg popa cmp jmp xchg pop (bad) icebp jp pop push pop ret push les jmp jmp push insb lret push into mov aam loopne jg ds mov sub add lds mov shl stos mov jl jl jbe popa mov rclb sbb das (bad) ljmp mov fmulp or xchg cmpsb push adc xchg stos mov mov (bad) push pop neg jp mov adc pop mov out inc loop in into loope loopne (bad) (bad) aad test out imul in cmc call mov jl fimul or push sub (bad) cmc addr16 ds loopne push pushf daa sbb cmc in out test lods xlat ljmp (bad) jl mov adc xchg sbb xchg push lcall dec (bad) (bad) lret int daa lock rolb frstor or lds mov cs mov test repz mov das jecxz sub imul sbb adc aas outsb aad aad movl neg push sbb xor mov push push clc mov push adc sub and in fldl outsb mov (bad) pop ljmp xlat loopne sub stos sahf sahf cmp sbb iret adc rcl aam lock clc jb and (bad) cmc in call inc sti movsl incb scas jp mov (bad) pop insb or dec cmc push lods clc sub mov mov mov data16 push push movl fnstsw pop into xchg je fildll cmp ss push mov sub or push mov scas sbb repz cmpsl popf xchg xchg roll dec xchg gs scas dec sub push adc mov popa dec pop aas mov pop mov bound xchg mov ds mov dec sahf std stos or push (bad) imul call push or fimul mov add (bad) fldl (bad) (bad) loopne sub (bad) cwtl jge pop loopne test sub cmpsb adc bound arpl incb pop jmp (bad) fstp out fwait fwait out (bad) out scas test push js (bad) pop push push push mov mulps lea aaa adc es lahf (bad) movsb jmp push jb mov cmp cmp jo push iret jne push jl xchg push out mov sar fcoms and aam adc cmp pop jle mov cmp cltd mov jne mov and imul ds add movsl imull add and cmp arpl js add lea xlat fdivr xlat fild pop (bad) push fldl fadd pop orl push cmp push jno mov sbb call (bad) pushf pop push jno call in xchg lods stc incl ljmp scas jns cwtl xor (bad) insl inc pop testl pop clts pop scas ljmp push xchg (bad) pushf cmp rorl push jle es inc (bad) mov (bad) divb (bad) aad cltd push xchg jae cmpsl arpl (bad) gs in add mov stos int3 jne sahf mov or mov pop mov push sub sbb outsl and add add dec add sbb inc pop push push (bad) js sbb xchg fcmovnb mov loop (bad) fcmovu pop aad faddl mov lock fcmovbe frstor pop pop divb fbld (bad) push out cmp daa cmp bound inc sahf cmpsb bnd ja icebp inc lds jg les push imul cltd test shrl adc pop stmxcsr xchg jae push aam push ljmp mov (bad) ficompl int pop hlt and add scas xor aas test xlat pushf push popl mov and xlat xchg dec push sub (bad) ljmp sub push aaa or cs xor push iret lods (bad) scas mov or push sbb dec mov or movsl call fdivr aad (bad) aam pop (bad) ficompl (bad) out faddl out ss sub loop xchg js mov fnop sub cmp pop jns push movl in in (bad) jmp out jmpw add iret push push scas push scas push lcall mov sti cmc shr pop adc jge xlat outsl inc jne scas fwait out jbe push pop popf clc (bad) insl pop int jno je jne cmp pushf lcall xchg outsl (bad) pop xor enter mov inc mov and pop cmp data16 pop in push cmpsb movsb push dec sbb mov pop adc lods pop incb cs push add fidivl push pop jg jno into push inc mov push add jae xchg out bound nop lret out (bad) out xlat pop fcomps (bad) fcmovu rcr pop adc jmp inc iret dec sbb je iret push fdivrp andb imul data16 pop je in sbb ljmp inc adc fdivrp fnsave dec in jmp mov je jne scas jbe pop sub (bad) ja pop add jp xor out orb movsb stos xchg das in (bad) rolb rcl cld (bad) and ss pop flds add test cli shrb push push and dec mov imul gs pop mov sbb sbb add (bad) (bad) add mov add iret fistp sbb dec jl clc lcall sbb je mov fmuls or flds fcmovu rcr stos test lahf jmp out scas mov xchg push adc out adc imul addr16 pop cmp pop cmp mov imul call (bad) imul ljmp movsl jno ljmp add incb pop (bad) mov sbb pop pop jg xchg pop mov cmp lods xchg sbb jno push int3 xchg (bad) or out fwait pop popf ss in roll (bad) lcall or pop call jl pop movsl (bad) cli aam push pop or cmp cs jmp pop daa pop adc push mov xor into insb mov out pop sbb dec (bad) pop pop dec dec mov rcl cmpl fsub fcmovnbe fimull shl fadds out xor mov data16 bound testb push mov lcall roll scas sub (bad) (bad) jae mov div in (bad) push (bad) jmp jae scas pop jne stos (bad) outsb call out pop sbb sbb aas inc dec pop outsb call (bad) adc es ja (bad) mov cs lock jge clts scas inc scas daa testb pop clc mov inc popf push loopne pushf fcoms sbb es sbb xchg ja push push test xor dec sub push ss push sub pop stos add lahf outsl pop test push idiv jne fistpl incb and cmp xor pop out add lea (bad) (bad) mov push pop out mul rolb iret or test xlat ljmp adcl cs push (bad) iret jnp pop adc pop pop mov (bad) out in or int3 out push cld pushl movsl arpl push stos jb scas push ljmp sti loop xchg dec pop xchg jo xor mov iret rcrl sbb push push push pop loopne pop (bad) sbb jp cmp adc sub lds dec dec into iret in add push jbe (bad) fiadd loope fistpl dec xchg push cmp lea incb insb jae fs inc cs add sub jne pop fisubrl add push or call sbb dec sarb (bad) push mov neg pop jmp xor out push (bad) iret xlat scas jmp push out test (bad) daa xor aas sub out lods js adc push and call ret push aaa fs pop xor (bad) jns cmp xchg or mov fisub aas pop repnz cmpsb jo sbb scas (bad) push pop test lock cmp pop enter es push pop daa adc dec cmp pusha or mov pop (bad) pop add fdivl gs inc mov repz pop (bad) cltd jbe out dec ja (bad) lahf jecxz ficomp push jp jecxz push push mov lahf mov push es sub pop dec cs (bad) shrl sub add adc aaa daa clc js adc and lret pop push inc jecxz lret repnz fsub adc lds rclb out pop in ljmp sbb mov jp lods idiv arpl pop adc test push push bound adc and pop push stos push stos pop icebp push jno (bad) push pop pushl testb or je xor pop jb xor rcll cs and loope ja pop and pop push push sbb in cmp push xor push sub mov (bad) push dec and outsb (bad) aam int cmp push iret push pcmpeqd cmpsb add push ja sub mov in push popf je mov dec and pusha adc dec cs xor push sub adc test jb daa (bad) (bad) pushl and or (bad) fstps rcr rcr insb mov jo xlat into (bad) (bad) out push add (bad) (bad) mov mov test adc and out mull lods out jmp out imul mov adc xlat push out pop pop mov and push jle inc pop (bad) cld addr16 push ljmp scas pop push incl stos xchg ss out call fiadd out loopne xorl div and and sarl pop push and sbb ret push pop dec pop sub rorl test push jae int or (bad) push fstps lds (bad) loope push in out lahf xchg movsb ja mov push into into imul dec sub dec adc decl add pop je push add push push inc cmp jmp into iret in out rolb flds fmul xlat (bad) loop imul outsb out mov inc test adc out mov and sbb hlt ljmp sahf mov mov sub (bad) ficom push cld decl cmpsb inc (bad) (bad) decb cmp scas scas push outsl (bad) scas decl mov inc mov pushl mov jb sub and cmp inc pop and and pop push cmp jecxz push sbb add aas push push adc mov scas adc jnp mov push cltd jns movsl fabs push push xlat lcall fild loop mov sbb ret mov dec idiv sub das adc inc scas sub add pop lea fiadd (bad) add aam hlt cli repnz pop not fcom xlat mov fist pop aam lret incl adc inc xchg inc push mull adc (bad) sub leave mov outsb xchg test ja mov cs mov and (bad) (bad) out add (bad) outsb dec std jp mov scas push jo pop jo jne pop pop in xchg cmpsb mov je out ficomp decl test out loopne dec ds and and cmp loope inc aas push (bad) emms or cs xlat pop (bad) xchg jb xor cmp mov call fstpl mov xchg outsl stc sub or mov dec out inc (bad) aaa cmp pop add or mov in fmull pop out aad push iret xlat notl sub out mov testb push imul mov insb push (bad) ljmp cmp incl int3 mov cwtl jl pop xchg pop lret pop adc fcomip push mov push (bad) loope hlt push mov push pushf xlat addl sar lret jb and imulb sub enter in lea ljmp es (bad) push dec cmp jmp and and xor dec rcrb cmpsl mov mov pop push pop in xchg jle faddp cmpsb xchg jbe cltd je fiadd loope std das cmp in fcompl adc and sub shlb aas lds ljmp add ror sub incb adc pop pusha lds (bad) fist subb sbb inc outsl push aad push div das clc or jmp dec jp ret fwait jg jae das pop fistpl clc cli mov insb push daa sub shl call rep dec pop out test dec decb jno aam pop (bad) pop jle pop inc incl sub outsb test jmp sbb call imul sbb dec pop add push pop push cmp js push mov mov dec jnp out das bound mov stc ficompl mov mov jmp push (bad) jecxz jno sub jl push sub jmp ss pop subl push aas out enter (bad) out into pop inc push cli (bad) (bad) (bad) sarl sahf and mov cmp push out mull xchg andl cld orb dec (bad) das or pushl xor mov pop out mov jbe ljmp daa decb in lret rcl (bad) gs push scas push (bad) jo icebp add push mov xchg xchg mov cltd push movsb add mov mov xor sbb push pop (bad) lret jmp dec das fs push adc mov popa add sbb xchg cmpsl (bad) or rolb data16 jnp adc jne orb push lahf jnp dec repz (bad) loope jbe jge and (bad) push decl cmp pop add or ret mov sub mov mul xchg or faddl iret int3 rcrl inc aam stos xchg jg test loopne mov ret mov loope push mov out in (bad) mov add xchg (bad) jmp push cmp outsl add into (bad) mov incb sahf imul rcl out lcall insb (bad) repz push lods push scas scas push arpl lcall pop outsl mov jp ss pop icebp push inc mov push xor pop xchg jb das jno (bad) (bad) mov push xor cmpsb insl mov jno rorl and push sbb enter sbb mov jno push (bad) bound out pushf jle sub lcall mov xchg and jmp ljmp lcall arpl xor push das or (bad) imul mov out sarl rcrl pusha xor inc mov iret lods or mov mov ljmp imul imul pop dec outsb inc sub mov sub sbb dec adc jl stos mov loop mov xchg hlt repnz mov push scas push (bad) (bad) jb scas clc lea outsl cmpsb sbbl xchg rorl sahf subl out (bad) push xor rcll das add mov ds scas push push and and xchg cmp pop pop sub ficom call ret xchg push (bad) fcompl test pop cmp imul pop inc jo mov pop add das incb lds aam cld jge,pn fisttpll mov mov vmovhps xlat cs mov pop fcomip jne add inc fidiv clc or scas jo mulb icebp js mov rcrl outsl (bad) lret test loope call hlt push out aad je call mov jae jmp (bad) out add mov imul das mov sbb cmpsb xchg punpckhdq inc es repz sahf push push and sbb push fiadd sbb aas lods pop xchg push xor lea pusha in or jae repz mov pop (bad) push dec cmp daa and aas adc ror mov into aam sar mov lret (bad) mov scas pop sbb adc test jg aas jl or fst lahf lcall es fs xchg pop out adc inc mov shl add (bad) push mov imul inc (bad) lods push scas push mov decb fistp mov xor mov fsubrs mov loope mov movd sub (bad) in (bad) xchg sbb inc jo ds loop add push xor scas test int (bad) mov mov pop xchg push les inc pop and leave sub sbb aas adc push incl fldt not lret rolb ss ljmp movsb cmpsb (bad) xor adc xchg and addr16 into sti cli stc jg data16 aad (bad) out es mov mov jmp idiv jno out fs inc inc mov mov je mov out xchg pop and aas sbb push stc div decl push push into inc sar outsl push pop pop pop pop xchg pop into sbb push push dec pop cmp pop (bad) pop mov dec cs cmpsb jg (bad) jns fldcw aam (bad) (bad) out or jle aad push idiv cmp push mov xor pop sete or aam cmpsb loop loop fcmove (bad) lret sar aam add mov addr16 xor out fdivrl hlt xchg sbbl outsl inc push int3 mov push testl call leave mov mov push pushl sub or adc push rcl (bad) jecxz pop lods jecxz arpl lods scas xchg mov jae push push ja loop mov push mov (bad) fmul ret incb call cmp (bad) xor sysret (bad) outsl rorb push pop cli loop jns (bad) fcomps out dec test dec inc cmp call jg sub repnz mov rcr aad popf push mov scas dec push sub sub mov jle dec push loop sub fcmovbe (bad) (bad) les mov jne fwait mov lock pop xor lea das pop testl mov pop sub sahf add xchg push out lods push (bad) push scas or add in push jb mov cmc mov (bad) sbb (bad) fst lret mov sub mov xchg out das push adc outsb inc and (bad) (bad) pop call push mov dec xchg je incb xlat (bad) fsts or (bad) inc inc mov call mov ljmp push call in xlat roll call out decl or out xchg mov xor fwait pop sbb mov jbe mov imul pop push mov pop out mov xchg out not inc jb call push call (bad) (bad) push lret push imulb idiv push mov pop popa and pop jg jecxz sbb insl outsb imul xchg fisubr jle incl jg decl sbb js adc pop ss mov rcll outsl pop (bad) fsubl xorl jae outsb xchg push daa or and inc es pushl and push or push jge pop out std ljmp add fdivrp mov jle sbb stos mov mov clc mov bound aad mov pop not les sbb inc rcrl push insb mov lds mov jle (bad) decl jl aam fucomi jecxz jl pop cld pushl xchg addr16 (bad) push push lods sub mov push pop add rorl insl pushw mov and sub leave mov push setge inc mov movsl aas rol mov movsb push pop mov sub aaa call (bad) mov fwait inc sub mov xchg imul adc adc mov cs in (bad) iret push idiv push sbb cmpsl fnstsw addr16 idivl inc cmpsb mov jmp mov scas add out jne xor rclb jo mov lahf out or div sub cmp aad cs hlt incl mov sub pop enter imulb test inc pop cld push mov dec (bad) clc idiv enter mov (bad) fmul ret (bad) mov pop pop jb (bad) idiv sbb push adc das dec dec out mov call (bad) sahf jb insb sahf xchg out incl sqrtps sub push jns,pn adc aas push jb decb rcrb in rclb call sbb pop or jae pop push or inc mov fist es push jecxz jmp loopne and jge cmp sbb add push cmc mov (bad) mov add mov ljmp ss xor sub stc div lcall gs sub incl mov call roll pop ljmp cmpsb out mov inc incl inc xor push dec mov push icebp (bad) adc insl aaa je,pn jbe lahf pushl mov insb push sbb jns stos push aas (bad) aaa das sub daa in and pop loopne lock (bad) pop lock pop (bad) iret (bad) out pop dec orb pop inc adc aaa cwtl jbe lret xchg or out mov out inc sub dec xchg xchg idivl mov mov andb insl dec sub daa int out hlt vunpckhps test inc push inc (bad) scas push popa enter xlat and and jne scas (bad) jnp lret inc cltd jl cmpsl (bad) jl mov xchg jl fucomip outsb push fwait adc (bad) aad xlat fwait jno jno sahf out push and sub jne sub add icebp int push loopne iret incl rorl popa dec aas outsl or (bad) mov pop mov pop daa lods (bad) jmp push fisttp xor cmpsl lea adc out aam pop push dec sub push jne mov cs inc and sub (bad) dec cs mov in stc pushf push in clc jg arpl loope mov lods imul je and xchg test pop jmp (bad) (bad) into add clc mov mov (bad) outsb mov inc out pop clc aas mov inc xor iret lcall outsl push push fcos cwtl add adc orb push cmp cs sub mov (bad) bound and int jno into int add (bad) mov pop negb push rcrb push lea push fmull mov rorb cld loop arpl mov push pop stos shrl push pop cmp negb push dec jb sbb addr16 push test mov repnz sub fcomp loope push ret jmp movsb bound pop test inc xchg test shrd jle sub pop xor add mov jne mov xchg mov aas push iret addb popf jg push adc add mul mov sub (bad) outsl mov outsl push cltd fnstcw jo insb outsb pop cmp test mov shrb xchg out iret ret int or fdivs lds push and out test test (bad) mov pop test aad pop push arpl lahf subl out imul fiadd (bad) xchg es mov out movsb push add mov or ja push mov test div testl push idiv out cmc idiv mov pop jmp js jecxz fs gs addr16 es pop fmull orb pop push add inc xlat je ret mov push daa (bad) divl insb jp arpl sub xchg js scas (bad) mov outsl jmp inc sahf xchg push cmp out mov cwtl outsb push outsl jmp bound xor pop jmp idiv ret push notl in into ret int3 int or loopne out fcmove shrb mov test push idiv insb inc daa xchg adc imul lcall inc test xor aam js inc and push xor (bad) divl scas adc push and adc into fs test test mov ljmp out mul add ljmp xchg (bad) mov jmp push inc jo jle scas push cltd pop cmp pushf rorb cs out sbb mov (bad) and push cmc repz sbb push ds ret fisttpll jp add push and pop (bad) aaa and jno outsb cs outsb outsb push outsb dec stos lea test lock pop ffreep mov rol lret testl test lcall pop decl push (bad) out jge or (bad) testb add xor push mov div sbb negl sarb fiadd (bad) lods scas lods mov out incl jns sub ljmp insl js xchg mov arpl movsl cmpsb pop lods mov iret das mov iret push lds lret mov adc mov cs inc xchg loop insb push out (bad) js cmp cli xchg mov xor pop mov outsl (bad) xchg out xlat cltd insl push xchg das (bad) imul jno lds sub divb incl or dec adc aad lret lret mov mov push xor adc jbe ret mov xchg scas (bad) enter imul inc (bad) out out and fwait sarb ss xchg push mov fwait (bad) fsubp in (bad) (bad) push sbb xchg mul imul repz iret (bad) cmp test push add jecxz pop cmp pusha cmp ds inc push stos push scas push mov outsb ss es ss push fs adc pop pop push sbb mov jno pmaxsw sbbb xchg test mov data16 pop mov ds test shll insb (bad) lods test push fldcw mull add and pop mov (bad) jmp test mov (bad) mulb (bad) xor pop andl adc addl xchg mov pushf jne push out inc mov fistp cs jl pop pop push push (bad) xlat mov mov (bad) mul aas pop cld (bad) idiv cld cld sti mov dec sbb scas mov aaa repnz fnstenv mov inc sti mov lods addr16 push inc out lock add xchg pop es dec dec daa inc add out add jbe out (bad) daa pop je aam push mov push push xor cmpsl subb xchg push pop or test enter and sub lods adc es inc sub ret pop out leave add iret enter not movl iret aam xchg xchg add jnp scas xor lret mov aad jno out and not mov adc lds inc outsb mov fsubp out mov loop loop loope (bad) fcomip (bad) xchg adc pushf in (bad) jnp stos das out idiv out movhps cld sti xchg mov cmpsb mov pop push mov and mov jmp inc es orl inc test inc (bad) call sbb test mov adc (bad) push (bad) popf (bad) mov test neg xchg push aad push adc sahf mov push sub sub sub mov or ror add push loopne push fcmovbe lds fisttpll xchg mov cmc imul inc aas and or daa out test xchg sbb (bad) add cmpsl fstl mov push loopne cmc aad (bad) imul repnz mov incl sbb outsb addr16 out xchg movsb nop out inc push je arpl push mov cli cmp jbe ds cmpsl stos data16 ficompl pop jo pop inc mov push pop xor (bad) maskmovq push mov dec das ds push subl outsb pop notb ljmp push lret lea xor pop sub pop out and (bad) movsl nop stos imul pop mov sbb (bad) or push das sbb sahf fdiv (bad) (bad) call xchg leave xchg (bad) sub cs shlb ss inc pop sub pop (bad) lods stos push add inc push pop xchg enter and mov fstp call jmp daa daa fucomip (bad) idiv sti or add fcmovnbe outsb jo sbb push es pop dec sub inc push loop xor stos imul jno aas pop imul stos pop pop inc push or xchg push push cmpsb push call xchg imul or addr16 push stos xor mull mov icebp pop rorl iret lds loop leave shll pop inc leave (bad) jno add sub sub lds outsl hlt xchg sbb dec xor pop mov (bad) mov in out fcmovnu in fsub cwtl cmp adc mov jecxz repnz (bad) push fwait mov gs cli (bad) fnstcw enter push cmp mov ret cmpsb jbe jmp insb dec pop gs (bad) jns sub inc or test pusha push xchg push push sub fwait scas jp dec notb imul out push aam add (bad) push pop xor cmp or and inc lods mov adc in xor mov mov (bad) fcmovne (bad) jo pop into push add test out pop sub sahf stos stos and ror shlb fsubrp into fsub push push fcomi dec push icebp aad neg fucomip (bad) loopne fsubl imul push cli sti cld out lods les sbb inc (bad) mov cmpsb imul pop mov jle arpl pop cmpsl test add dec pop dec push sbb into pop addr16 sub call mov push inc fisubr mov into mov loopne mov sub sub push lods and and outsl xor mov mov (bad) (bad) adcl push pop testl pop lods cmpsb outsl out push pop mov jle push fcmovnbe out fisubl das jbe push fcmovu (bad) fnsetpm(287 fiadd fsub popa sub add xlat arpl push xchg lret clc (bad) movntq out rclb repnz adcl mov inc push test icebp dec jle cmpsb dec incl das das daa push daa push fs pop pop lahf sbb fs stc jmp add leave mov fs mov push xchg pushw sbb out das stos inc enter decl mov mov pushl loope push (bad) addr16 dec push daa pusha xor add (bad) or hlt jg data16 mov add aam mull mov pop (bad) in mov fucomi (bad) fbld out pop std std (bad) out cs sub pop sti pop and mov mov aam test sahf pop cmp aas pop test stos fidivl ret jbe lods insl dec push jo lcall mov daa aas pop pop addl mov inc inc xchg enter imulb pushw mov xchg push cmp or adc pop out sbb pusha cmp jo mov leave addps mov ss inc into inc pop test sbb jbe jmp pop cld addr16 inc mov flds scas in pop mov fcomip fsub jecxz neg fucom sub jmp (bad) clc mov lahf mov scas mov jne sti clc mov mov mov lock rcrl neg ds and icebp pop pop lods push jmp and push mov and jg add add sahf addb pop mov jg jmp pop push mov lahf pop cmp inc push pop fildll or mov ss leave mov (bad) enter lret push int3 inc dec aaa divb mov aam imul sahf cwtl (bad) push je fist jbe not faddl (bad) out sub aad (bad) (bad) neg fsubp scas test mov out cmc xchg lahf add enter mov rol mov adc (bad) push inc xor psrad (bad) (bad) pushw mov popa pushw inc (bad) repz pop test mov cmpsb mov dec sub mov dec sub cmp mov inc ret test push int3 xchg push out test dec push mov notl sub mov xor insl repz lret pop inc jbe,pn and test lahf std icebp iret jp jbe jp dec xchg (bad) loope dec leave add mov fcomp xchg jbe push out in out add std mov push add loopne cwtl jle out cmp scas xchg dec cmc adc in roll stc add mov cs daa stc div mov jle mov and outsb stos push sbb xchg add xchg pop jle,pt cmpsb mov call push push push mov xlat pop add roll jne mov scas push mov test fist dec cs push call lret fcmovnb (bad) rorb lods cmpl mov ds out mov loop rcr (bad) int push aad idiv stos stos xchg fnop fcomi fucomp in in push clc cli pop push dec test out arpl icebp in push push cmp pop cwtl in cli loop push lods xchg (bad) scas out out es iret testl pop scas negl add jle xchg jmp lret push (bad) mov fsts dec push pop imul inc jp insl mov dec xor cmp push outsl adc aaa and mov mov addl push stos sub iret and (bad) cmp lods shl pop int incl in mov ret fisub ja push mov adc push jle jmp movsb test call into push pop stos dec cs out fldz fsts neg fcom fsubp fild adc cld jecxz push repz mov mov (bad) cld xchg mov or dec into xor shlb adc shlb jne xlat jbe test sahf jbe repz hlt pop sbb or (bad) cmovae int3 rcrb movsb clc sbb mov push fs inc sbb push lods outsb pop mov ret arpl shrb jg jbe pop push mov pop jmp jle rolb pop dec mov mov sub (bad) pop fbld add mov imul (bad) sbb stos push adc add push mov xchg jbe push out data16 (bad) jae jl jbe (bad) fnop adc fisubr in lock cld inc movsl xchg push fisttp (bad) fcmovbe vcvttps2dq es xlat pop pop pop aam aam jl aas pop dec imul imul add out dec push lret dec sahf outsl scas mov repnz jae sbb clc jge,pn inc scas rolb roll mov je mov push inc push push dec stos push imul idivb test jle mov dec mov mov xor pop insb mov jmp jle mov pop arpl jge stos stos orl loop mov mov (bad) (bad) (bad) (bad) sahf test inc fwait (bad) push sub inc sub xchg mov int3 aad aaa push test idiv (bad) cmp (bad) pop in jmp mov idiv fcomip xchg fnstsw xchg rcrb jo pusha daa (bad) push sub add xor test nop push add jae daa out shll cmpsb jg lds das in jbe loopne push iret mov pop sti cli lock out push rcll xlat pop cmpsl addr16 push push xchg out jb test ja sub bound xchg outsb mov jge mov bound pop inc add cli (bad) das adc push div stos stos mov loopne mov out (bad) mov mov sub xchg (bad) xchg (bad) sub dec pop mov call iret pop push mov lret aad fcmovne rcrb push neg pop sbb in lock xchg pop push out aaa div fwait sarb daa push xchg add lcall mov sbb sahf sbbb pop mov add cmp (bad) lock xchg int dec push cld in sti in cli andl lock xchg push in inc loopne mov push movsl cs jo sbb addps out push push inc ja out stos notb dec xor pop aas (bad) aaa mov mov mov jl out adc cmpb sub adc stos (bad) ffreep jg bound adc daa and jecxz mov adc xchg sub jns into mov mov roll int fcmovnbe fcomps test dec (bad) (bad) push sahf in push cli fbld std (bad) aad mov (bad) jnp cmp dec jg sahf xchg jnp xchg dec bound cld and and (bad) mov add ds xor divb and mov push cmp leave mov out enter ljmp aaa mov jmp icebp out mov clc ja jle stos cltd xor stos aaa shld cmpsl push xorl push push insb inc push add cmc inc insl jle xor xchg push push das push jge mov jle (bad) mov push jg cmp ljmp popa and push out pop push imul (bad) jmp (bad) loop test jle jne scas or pop dec pop aas out mov test loope (bad) (bad) (bad) or fcmovnbe xlat (bad) idivl cmp ss pop mov cmc cmc out std std divl or (bad) adc jo sahf out jp or push xchg test ss adc clc data16 fwait mov (bad) or sub cwtl scas dec loop dec clc ljmp push mov iret mov fistl fisubrl (bad) into ss push std jmp out push test (bad) ud2 push rorl sti hlt outsl in fdivrp mov mov movsb push cmpsb push cmpsb imul insl outsb dec push jae ds inc lcall mov sub je inc (bad) mov push jl je outsl jno (bad) jnp das xor or gs pop mov mov ffree ret mov cmpsb insl popa xchg sub ss pop ds loope rcr cs leave roll lret rcrb push rcl not aad fcoml adcb out dec sti divl pop cvttps2pi cld fwait scas ljmp mov jg pop aad add jae xor cmpsl rorl jbe inc cmp aaa dec or mov pop cmpsb or inc mov pop les sahf test mov (bad) or movsl outsb push mov jl jle mov push jno enter out out in fsub (bad) push not mov add es push int sbbl push push insl outsb jl sub push stos dec stos outsb and mov out mov jnp bound adc push push (bad) mov (bad) mov xor or imull push jl push call ljmp fcmovnb mov decb adc inc cwtl nop mov push aad mov testl pushf addr16 rclb xlat fistl jmp jno sub mulps cmp lds jg fwait lock lods xchg cs cmc repz (bad) loopne shrl mov mov push xchg (bad) xchg mov out pop cs add insl outsl testl xor imul jecxz sahf dec mov aaa inc mov mov sub aad out fmull mul push mul lock push inc cmc in fdiv jne push out out es test sub dec mov adc movsl (bad) movsl cs dec shr sbb outsb dec jo pushl popf push xchg imul mov loopne (bad) lahf mov jle push mov adc mull (bad) call sbb push pop loop cs faddp int popa icebp jecxz iret daa fdivp ss in push not fistl (bad) shl dec pop ss out std mov out pop das das or sbb add mov mov call dec adcb or adc cltd and pop pop xor rcll je cs adc adc inc inc out iret mov scas inc mov jecxz test enter push lock outsb sbb dec mov push sbb push insl (bad) cmpsb mov mov dec push jle xor jne push je scas ja jbe fsubrs ss push mov xchg add or lret out mov sbb inc fisubl jb push fildl push (bad) aas movsb adc mov push lret shlb pushf adc (bad) jne dec fwait (bad) fcomp xchg lds push sub neg out fmul lock aas aaa loop jle jne push xchg sub (bad) push test sbb mov dec aad lahf les out insb inc cmpsl mov add pop test and jle push lods fsts inc push std or jno xchg mov mov fisttpll addr16 or js inc xchg jo pop mov pop fsub bnd mov hlt pop stc nop clc repz stc stc mov pop jnp je outsb push dec push xor lock test dec andl mov and mov mov cs cmp mov or out sub add out lcall inc leave lret movsl dec jmp shl mov stos scas loop sti div out cli stos and mov cld pop sti out imul pushl xor (bad) xor cs mov icebp mov stos aas add mov mov dec add out jmp cmp sbb into pop mov into xchg push (bad) das repnz (bad) xlat fisttpl movhps clc (bad) mov push hlt in xchg xlat jecxz das pop icebp push lock (bad) loope push hlt (bad) aaa or dec push cmpsb mov mov push decl cs push dec cmpsb (bad) test jae xchg aas int scas js jnp cmpsl bound adc sub fwait inc mov fcmovb rol jns dec leave enter xchg and in fidivrl test xor out xor cli (bad) cli ret add data16 xor sbb (bad) adc test test mov lds movl gs loope imul jbe (bad) jne rcrb dec pop xor xor push aas loop mov scas (bad) jb pop push pusha mov (bad) je pop sub mov std out fiadd (bad) out mov push cmc jmp cwtl ret push in (bad) loop mov insb (bad) mov cmpsl (bad) cmpsb cmpsl push test stos jne and mov jp jl push add xchg (bad) stc subl mov fsts pop add inc imulb fidivl leave push leave lret lret out out jno sub in out push fdivrp (bad) mov pop out (bad) pop stc rolb cmpsb xchg xchg pop movsb xchg js mov inc in out mov or not inc bound pop imul outsl push cld std lahf loop js cmpsl ds mov push dec xchg rolb cmc repz mov inc aas adc add mov clc sahf xchg data16 test jmp jb jge std in fldl fdivr fistl mov imul xor (bad) out mov lods jl mov push movsb outsl dec push cmpsb (bad) pusha inc dec loopne je jns and jle jnp scas outsb dec fmuls jmp jns add ret fld mov adc (bad) enter ljmp cmpsb iret xchg out dec (bad) out cli sti stc cltd enter rorb js jmp loope fwait subb or addr16 (bad) popa dec lock imull pop stos mov adc iret out and (bad) push arpl (bad) mov stos popf scas outsl inc daa pop test cmc xlat push addr16 add shrb sbb mov ja (bad) mov enter addr16 sub xlat faddl sbb push outsl fwait jp mov ret aad pop push (bad) jmp xor faddl (bad) jmp fmuls out loop mov push div mov icebp push les (bad) imul mov (bad) cmpsl adc sbb push stos js inc adc data16 jmp addb faddp mov fadd mov (bad) push in out adc jmp out nop dec or cli clc inc adc dec fdivp mov mov es cmpsb pop mov push rclb (bad) xor cmpsb ret adc mov pop cmp jmp sahf rclb aaa out dec sub fs aas arpl lea test mov add push push push mov inc adc or jmp idivb inc add outsb mov int movsl outsb adc push mov jl out vpackssdw iret push (bad) ljmp mov daa xlat (bad) cs adc das mov (bad) scas and add and dec test stos pop ja sti scas sub push push add xchg test mov fdivrs adc (bad) leave into sahf clc hlt test adc lods out imul loop call push jns cmp lahf (bad) data16 stos rclb out test sbb popa add xadd es (bad) push mov outsl out pop setae outsb or push (bad) jae sub lods xchg andl and mov movsb scas xchg mull ja ljmp xlat rorl iret outsl push mov xchg jae loope loopne sbb adc sbb push scas cs jns mov scas scas lret scas xchg out fldenv (bad) xlat push out push aam out addb rcrl out scas popl in shrb push adc movsl push test mov imul dec push fildl xlat mov jl out clc lock push mov xchg clc pop out jmp lds fcomip pop clc cmc das pop push or push add test pop das test jmp out mov push push (bad) ficom ds jne push nop ret mov mov icebp in ljmp idivb pop add jmp scas mov std bound pop inc ljmp out out xchg lcall dec ds mov icebp ret (bad) out cmpsl mov lds bound (bad) sub add sahf test push outsl sub jg ror dec out negl xchg pop mov (bad) faddp lods mov add cld in push fwait cmpsl mov ror in pop fdivrl int (bad) dec mov out iret les add inc cwtl xorb lds jbe mov push or in jbe sbb cld or scas pop iret negb clc pop loop test loop mov lahf xchg out loope mov push fimul cld bound movsb mov les sbb loopne outsl (bad) fisubr sbb out fcmovnbe leave addr16 ret mov sahf scas nopl mov mov push pop jge aas xchg mov lahf (bad) outsb decl mov pop js inc pop push jle mov xchg loopne test mov lods dec sbb cmp jle out mov out jg andb mov mov out push in push sarb iret inc jecxz jecxz int3 push loop lret ds ret aad jle fidiv cmc pushl push and incb push fcmovb idiv lock sti movsb xor jle push neg imul out loope add jmp dec sub out jp cmp ss repz imul (bad) sub push rorb sub dec ds mov cmpsl scas xchg call (bad) cmp fildll pop ljmp jnp cmpsl add in pushf mov ja mov jg out push add jp cmp test pop and (bad) jle mov xor fistpll adc loope das mov mov bound testb xor pushf into (bad) cld loope loopne (bad) mov movsl xchg ret push loope data16 loope push (bad) fsubrl and clc or mov cld sahf cli push sti rolb enter ss push call pop scas dec pop add sbb jbe adc lds int3 mov out mov das push and add rorb or rol push add jbe and add jge (bad) cmpsb test jp add mov outsb inc xchg cmp push cmpsb jg lret gs xchg push pop jns fildl jbe and ja mov addl xchg sub data16 movsb mov cmp inc mov (bad) iret into int loopne lret fcomps faddp (bad) fstp loopne pop mov push fisttpl clc (bad) push call mov dec ja fnstcw adc test aad std icebp in repz outsl xchg out hlt lock sti cmc hlt cld es cli aas inc cmp jne popa jmp push sub addb aad cmp inc imull sub lea (bad) pushl sub pop pop es jg push pop rol mov sete add shrl lds fidivr mov sbb add nop insl test mov or mov shl gs test inc outsb sbb clc inc mov scas sbb pop push jle inc cmpsl mov pushf sbb push pop popa cmp or into mov iret (bad) mov lret push fmulp movl ffree ret out (bad) mov hlt aad aam xlat cmpsb adc xor out dec (bad) out fnop std movsl pop and lock (bad) cli repnz push repz test cld pop cmpsb pop add push mov js add jbe call icebp icebp popa in push sub pop movsb mov jnp ds rorb fild lock punpckhwd lods incl add dec inc jne adc fidiv fimul into sti stc clc popa insl cmp lahf das push (bad) pop outsl mov incb adc add pushf outsb adc rolb sbb hlt not jmp pop lods out (bad) jge inc inc je cld sub cmpsb cwtl xor or divb cs push out sbb ja push cltd jle (bad) fld mov cmpsb pop add loope neg js fwait imul leave (bad) jg addr16 clc fmull neg lds ljmp cmpsl cs or in fldenv cmpsl pop mov outsb cli icebp in push repnz sti push in popa and cld repnz xor inc aaa lcall fidivl sub xchg mov sbb mov repnz pop dec pusha cwtl outsl enter inc pop mov push or pusha push pop es lret push sbb sahf fs add sub js inc call push fiadd rolb pop sbb testb mov xchg aaa addb pop decl dec xchg add cmpsl (bad) bound movsb test push js push out push adc pop xlat dec sub loop lods sub out fistl (bad) into out aaa xor lds idiv (bad) pop mov clc push (bad) testl adc std sub fnstenv out fcomip std dec cli lock leave and lods nop icebp inc mov fwait or pusha dec sub push cmp add movsl jl outsl xor jmp setae call hlt or mov lahf test sbb jg outsl out outsl data16 aaa add mov push push add jbe inc mov mov packuswb (bad) jbe inc sub mov mov jbe inc xlat fadds nop out fisubl cld fistp xchg mov or (bad) movd push mov lret into cli ja adc mul fimul lods push es pop dec pop mov vmread faddl jle rcr std out or pop sbb (bad) mov ljmp sub div xchg mov movsl cs outsb push pop jle cs ss cmp inc or fwait dec loopne jno loop scas xchg jns mov sub jp pop into jg pop sub (bad) jbe xor adc jge mov xchg dec cmp push mov idivb (bad) cmpsl dec push fimul into push es and mov aaa add sub pop or pop push jp (bad) outsb mov ljmp push test div fs out (bad) stc ret cmp es and add push mov mov fsubl scas cld out lods sub jmp stos add data16 es icebp aam incl es (bad) jp pusha push sbb xchg sahf popa outsb cmp (bad) jno push daa addl cs je pop out pop lods daa mov dec or subl xchg mov inc cltd ret out neg int sahf test pop push loopne mov push inc and adcl pop pusha imulb cs push mov or into mov fcoms iret out pop into outsb xor out roll mov inc and or pop sbb push mov adc xchg (bad) in (bad) es out xor jnp pop std dec out call imull push ror ret daa jno test push and cld les decl sbbl loopne jl test js push fwait popa cmpl js sahf mov out (bad) pop adc hlt and adc push (bad) outsb mov pushf mov in push adc and ret pop xor mov xchg and loope notb (bad) lret jmp out (bad) sahf in xor out jg xor push int fsubp roll clc clc loopne (bad) (bad) (bad) not or roll add push pop es pop pop es push jmp hlt in scas leave call fdivs sub push data16 mov dec adc pop push inc addr16 xchg loopne add out clc div add or dec mov sahf push dec jg dec outsb pop cmpsb mov xchg mov xchg jle push ss cs js lahf adc fild fisub pop inc shll mov pop int int3 int stos rolb loop (bad) in rclb or aas mov fildl fnstenv iret (bad) in xor popl push adc imulb pop pop push push dec xchg sahf xchg mov xchg clc adc dec sub pmulhw push js jg,pn push shlb xchg mov and inc dec and pop lea test stos dec ja sahf mov inc shrl sub mov loopne sub xchg es pop (bad) pop push out jb push xchg andl jmp (bad) int int3 ja in jecxz fdivrp in push inc inc add mov stc adc and stos pushf lods call push loope in in jo dec or in in mov icebp push outsb out aaa jbe mov xchg pop dec push cs mov jno inc test cmp mov mov dec lods pusha mov mov (bad) mov ss jb add or sahf xchg mov not xor orb mov loopne lock push out sti in cld in mov dec repz in push sar push rorl push rcrb xlat jl test mov mov cmc push fnstsw loop ret mov pop jecxz dec mov push pop ljmp mov push es dec push aaa addr16 sub (bad) fcoml add and ljmp mov pop mov scas push (bad) lret push and mov sub add xchg shrl and subl es in out out fcmovne cmpl out push js ja dec in push (bad) shr adc sarb lahf (bad) mov jmp add ljmp outsb jmp loop adc xchg in outsb jmp pop mov push int mov adc addr16 cmp jbe fmuls inc movsl outsb popa (bad) lret inc test xlat (bad) outsb in sbb cmp dec aas arpl jno jg dec mov mov pop mov pop inc icebp notl sarb cmpsb in xlat stos mov push out ja push lcall sub inc cmpl xor push mov es push in loopne pop ljmp pop fmul ror xchg pop inc test push push lret les push xor jecxz add ss pop mov scas mov lods scas out aas add cmpsb outsb outsb push fwait subl std cmpsl out pop mov mov rolb mov sub lahf dec mov xor push xlat neg outsb lcall cld jmp pop (bad) out es in inc sbb add mov arpl adc outsl pop jl mov test je lods cs inc sub aas sub sahf sub movsl movb cmpsl int push and int into testl push pxor adc jg add push aad stc js mov fildl fistl fcomp push call es movsl mov adcb mov jns and addr16 outsb mov out pop add lea pop inc cmpsb xchg pop xor out xchg nop cmpsl test lret lret addr16 fmulp faddl rorb out call push add mov mov js pop flds push fadds sti out push cmpsb ss mov rorb scas mov xor icebp addl ja xchg es dec push cmp neg (bad) mov (bad) lds (bad) out and es mov inc sub push inc xlat push rcrb mov inc and push sti cs lds cld out mov aad push xchg ljmp scas incl push sub jbe xchg leave (bad) cmc xchg in fmuls stos xchg pop dec pop mov mov es add inc pop xchg push xlat mov sbb adc rorl push popa push in (bad) dec cmp jle pop aam lds mov dec xchg mov cs movsl out dec out dec dec cld adc ss add pop push push je jg test inc addr16 pusha jl les cmp cld insb or out pop rcll std pop (bad) ljmp insb xchg mov fild fmulp push cmp and inc and or xchg insl icebp lcall out push shrb rolb iret testb test test stos and lahf inc or test call push ficom orl mov push icebp cmpsb out incb idiv (bad) mov imul mov lds add into add out mov pushl jecxz inc adc push push jg inc test out add loopne dec repz (bad) scas neg ret mov ffreep inc (bad) jg and arpl lods pop push add add sbb clc inc sbbb cmp pop rolb add testl pop jnp fldenv fs pop sub add es pop pop andb add pop rclb xchg or addb xchg cmp pop jg aas dec es pop pop cld ucomiss fs pop add leave inc cld mov (bad) sub test add or (bad) cltd insb jg inc enter aas add mov push in cs aas jg jb das push add and jb pop cmovle inc jb aas or and in or and clc dec sbb enter ret inc add sarl push test outsl sub fninit fldt fninit fninit insl fcmovnbe mov jecxz jecxz pop (bad) fninit lret (bad) mov fninit fninit fcmovnu (bad) pop jecxz jecxz dec addr16 nop xchg pusha les adcb sub das daa push add sub or or movups in push adc adc cs push (bad) je push fisttp outsb xor push cli out iret push mov inc sub jecxz xchg add sahf mov add push and inc sbb (bad) sub cmp push jp leave cmp xor mov (bad) xor sub adc xchg xchg mov add mov (bad) inc xlat movsb je stos sub mov and cltd rclb sub test dec sbb sbb cmp and jg sbbb fidivr jns jb pop pop repz mov aas push xor and sub or adc sub add push dec add jne add push push or jl sahf adc into cmp imul mov mov negb add push enter adc and invd mov cmp add push stos push mov xchg hlt jns scas jb pop inc and xchg aam scas and push add push and rolb rcl add lock (bad) out adc ficomp aaa xor xchg outsb push dec js into xchg (bad) (bad) fbld pop or leave mov loope addr16 lock jno cld (bad) mov push decb incl push cmp jne iret (bad) xor push es pop sub or sbb add mov mov (bad) xchg jle data16 dec add push and push push or and push (bad) push leave sub push js xchg xchg pop dec iret xchg dec inc (bad) sbb xor or das push dec sbb sbb fnop jg add sahf xor hlt mov xor jnp,pt mov jbe jo stos xor sahf je ficom sbb fwait test jmp inc xor cmpsl test xor std ja cmp push sbb cmp or cmp xchg test movsb sbb bound hlt inc jecxz and mov add or xchg out xor inc xchg xchg adc cmpsl call or dec dec ret and out ds dec (bad) decl nop push xlat into movsl mov shrl xor stos lret (bad) inc push (bad) test fstpt xchg pushl callw dec je nop outsb pop es add push push inc sub aaa sbb adc pop xor cmp out pop insb cli sti dec and (bad) push add ja cmpsl pop andb pop and xor lahf adc lahf push or dec inc pop sub testb sbb jg mov dec ss add (bad) stos or in scas divb jmp xchg test into jmp aam es call enter mov inc stos mov (bad) mov sub fwait inc test aaa enter cmp ret xchg cmp or test mov std lds mov pop and inc sbb mov push xchg test js ss movsb xchg je xchg adc lahf pcmpeqb pop adc adc shll or prefetcht2 dec out mov pushl or in mov icebp ror push fcmovnbe mov adc nop jle sub (bad) loope sar fsubr iret mov xchg (bad) mov xchg (bad) (bad) jne add testb pop xchg mov mov and xchg xchg test (bad) leave and lahf data16 movsl call mov mov mov push rorb inc es ljmp mov es ss or dec or inc add mov nopl aas dec add jmp mov push cs mov test std in and loopne push jmp addb mov xchg data16 mov lret mov mov cwtl out jbe (bad) jnp push into pop dec std jmp (bad) js dec ljmp inc (bad) jns dec push pop call dec mov jno scas sub or divb mov mov pop inc jbe incb add and (bad) data16 sbb push cmpsl sbb xchg mov push sbb inc dec xor adc push xlat or data16 sbb sbb sub inc or outsb pop cmp mov mov push fstpt in add jbe pop ljmp (bad) fcmovne sar mov pusha jle mov (bad) jmp popa (bad) jae mov into mov aam enter ja pop xchg dec sub mov xchg ret mov mov sar lcall ljmp pop int mov cmp mov mov rcr lcall std sub or pushf jp rorl cmpsb push sub sbb or and push and in testl push xlat jg ret xlat cmp sbb pop inc sahf xchg (bad) or lock call (bad) or inc mov ss sar sarl or outsl out push dec pushl push fdivs push cmp repz mov out mov movsl test push and (bad) aaa sub and cmovs dec insb push aam xlat cltd push cmpsb jge mov push mov lds popa fnstenv cmpsl mov test dec mov std sbb inc push push pop inc pushf dec ja push and cs sbb inc xchg (bad) pop mov xchg lcall push dec out xchg push sbb xor or sbb lock hlt in xchg lock mov loop loopne inc fildll xlat sarb cmpsl mov jle insb lcall outsb jae fnstenv out hlt fist jbe into mov add mov je movsb es cmp pop sub cmp or xor fs pop xchg stos add push aad in (bad) cmpsb jge incl add push mov pop jno xchg push xor mov and xor sbb sub test xlat (bad) adc incl (bad) ficomp adc sub sgdtl addr16 mov out loopne imul jmp and xor pop or xlat xchg aad mov (bad) test andb dec and inc xchg jle je jmp out repz nop (bad) cmpsb les jmp mov xlat es movsb enter jns int jbe inc and sub mov (bad) xor cmp xchg push xor inc mov dec out inc orl cmpsb xchg insl jecxz cwtl (bad) fnsave dec push into jns and movsl xchg lds dec mov push push and sbb sub sub (bad) fiaddl add jp push pop fimul js pop dec out popa outsl inc es mov push (bad) inc iret adc (bad) sarb dec xchg sahf jl fimull xor jle mov inc lock out incl outsb xchg in push jmp rcr mov xchg je ret add and (bad) shr mov or das cs sub (bad) and rcl sub push inc ss inc decl test into lea jge xchg xchg push fistpll lcall aaa dec xor or notb cwtl push jl pop push (bad) xor mov xor nop add pop inc adc inc outsl (bad) mov or mov es inc sbb xchg jl icebp out add xchg mov and (bad) mov jg xchg xchg je ljmp dec outsb outsb imul xlat ss jmp sbb sbb out out je mov cmc xchg (bad) divb push xchg jb mov dec sbb into popf jge insl jmp sub aaa sbb shrb into xor outsb dec fidivr decl test movsb jbe mov es cs (bad) mov jecxz push jg xor push mov sahf (bad) jle ja outsb (bad) xor xchg scas push aas das repnz and or push mov inc scas jmp div (bad) hlt sub sbb mov pop outsl cmp (bad) mov jmp test sub shlb insl pop add xchg mov jecxz scas out ds dec out (bad) in ret jns hlt test je test outsl xlat sub lods iret setne mov cmpb adc or js fildl push xchg pop or mov movsl mov fnstenv dec push outsl push (bad) cmp or cs dec and jg inc inc jmp xchg nop dec push adc xor inc adc jmp stos movb ja pop push (bad) jns jge imul fcmovnbe push push loopne inc loope pop and mov jbe add (bad) movsl test pop ficomp push mov xor sbb ljmp xchg loop jecxz clc mov ss rol xlat mov mov dec dec aam test pop mov test push push incl mov test xchg xchg mov test push fild gs jmp push pushf sub cmpsb nop insw cmp inc sbb sbb int3 xchg imul es sub mov push nopl (bad) add mov loope xchg dec sub xchg outsb xlat shrb xlat scas push adc mov cwtl xchg call les jbe,pt push outsb jle ror or out out mov rorb imul or jecxz stc aam and je (bad) push or iret jae inc nop mov (bad) ret xchg pop clc enter aaa sub (bad) hlt push pop xor call cmpsb test mov mov (bad) push add mov dec pop es push push inc mov xor pop add mov xchg pop incl imull add outsl jbe xchg sub xor dec sub mov sarb rcr neg ret cmpsl mov divb imul loope xchg rolb out out or sub out loop cwtl lock (bad) adc jmp ror push addr16 mov (bad) (bad) imul or rcll mov aam jp cmp dec push jbe push xor (bad) jg cmp test jp movsb (bad) mov cmpsl jnp ljmp sysret leave push or mov cmp fildll xchg and pop add add cs or sbb lahf rcl (bad) cmp add cmp int lret scas push add or mov jo gs jne out mov sbb mov in add fisubr in loop sti or or xor fs xchg mov mov xchg jo push (bad) xchg js movsb pop or push cmpsb pop sbb daa idivb test es push testb test pop adc outsb mov push movsb es dec inc dec xchg (bad) xchg outsl cmp jae dec push sub pushf or popa or imull or cs sbb pop sbb sub dec push add and mov mov jle es or imul les out bound xor mul out xor loop fidivr les loopne call lds (bad) stc stc cld (bad) call push popa xor mov mov notb (bad) mov xchg mov sbb jle push aam jnp jg stos jo cmp sub cmp pop inc xor rolb jle xor data16 hlt (bad) pushf push lea push jbe xor sbb inc imul mov dec cs je shlb sub ss iret sbb es pop or fsub adc rep mov push push sbb (bad) jl (bad) mov enter sahf add out neg icebp jo mov pusha pushl imul in sbbl out std xchg scas cmpl mov push mov mov push or ds or not push andl dec call rolb out push (bad) js cmp and and jbe cwtl push and dec imul dec cli test das popa aaa cmp imul adc push pop dec repnz testl sub pop inc inc xchg jle inc adc pusha dec testb outsb push dec push cwtl in rcl push out fidivr push jmp sahf into mov dec push and cs out inc dec int sbb call insb in outsb (bad) scas sbbb push mov mov (bad) jnp xor push into jle es addb jg fldl mov and mov adc dec jbe or cld xlat mov jno es (bad) mov lahf cmpsl xchg push cmp cmp push add sbb pop shll aaa (bad) dec sub daa data16 fidivl dec out cmpsb imul add xor jns push out call out das inc push dec (bad) fistl scas adc test jmp (bad) inc repnz scas pushf sbb pop ss inc jmp stc or mov lods or or data16 pop stos dec jmp xor ss sarb popl xlat fucom aam mov dec das and adc out movd mov jns xchg xorl push push xor xchg adc das sub pop jae adc pop sub pop pop dec push outsb jae icebp cli aaa sbb scas xchg mul aad fiadd fucom pop cli lea (bad) call rol mov cmp adc jp loope jmp out incb cwtl sub push data16 ret sbb int iret pop add pusha mov mov daa dec out shrb lea insl leave stos or mov js loopne nop into aaa sbb out outsb ret shlb mov pop cmp push mov push lock pop push dec cs and mov mov cs int data16 or inc inc add jg xor clc cmpsb jbe pop shr fidiv call es xchg into push pop push adc ja push sub les jg pop mov xchg cmpsl loopne loope dec jno push (bad) stos cmp (bad) mov jl test (bad) jg inc or jge mov mov scas mov ret cmpsl push lret add push fnstenv inc xchg jp dec xor inc enter xchg mov pop pusha mov popl push addr16 daa adc inc ret pop mov negl sub pop pop aaa out sub cmp push call add cmpsb (bad) mov pushf in fcoml out into loopne and ret movlhps ljmp jb lods add incl lock cmovb dec cld out js xlat sbb pop and mov lods lods test jge pop pop fdivl stos mov int3 mov rcll ret push test push leave lret cs or push fidivl outsb dec jmp push add add es mov repz mov push inc imul dec fcmovbe mov inc cmp fnsave pop push das push hlt loopne push sub cmp or or aaa insb adc sub sbb jecxz mov or loopne pop movsl mov push in test test jbe aaa xor mov push adcl pop inc inc outsb push out jmp dec loopne jmp jbe jnp mov pop decl fisub test movsb mov sahf sub sub push les pop sbb jo call divl adc outsb mov push mov push pushf add or inc pop outsb sub sub adc aas addl xchg das sbb loope das adc test ss xchg push xchg push add out xlat pop and fist loopne or (bad) pop fmulp ss dec cmp scas fisubr adc incl xchg lret fsubp repz jmp data16 js scas mov pop or xor mov push pop lahf mov mov cmp cmp lds cmpsb and cmp lahf pop jg mov jb insl ss sarl int add mov xchg sbb hlt xchg cmp and xchg push xchg jg add testl ds dec pop (bad) xor fimul inc call push mov xchg xlat jecxz cs pop pmaxub call call outsb test cltd (bad) aaa call mov add (bad) jnp cmp je (bad) testb std cmpsb jne test xchg jbe bound push daa jbe call pop xor pop cmpsb xchg insl add push push xor je xchg sbb cmpsb rclb xlat pop addb xchg xchg scas fs in jns jbe add mov sahf (bad) roll pusha pop add fstpl cs adc test adc stc je ficomp and das dec adc push adc ficoml jp jecxz mov adc push push movntq addl ss jmp fidivr pop mov xchg test (bad) pop inc incl call movsl test jo mov push lods mov push inc cmp mov pop dec loopne nop cs cmpsb mov sbb pop xorb push cli adc mov pop jg ficompl daa sysret mov outsb cmpsl pop cwtl int3 shlb (bad) xchg ja push mov cmpsl adc or rolb inc inc cmpsb wbinvd add jmp incl out out sub push lahf in call cld fst (bad) faddl mov data16 out lcall scas lods dec sbb xchg push stos inc rolb out incb inc (bad) out add inc loop xlat sahf inc mov push mov (bad) push dec shrb movsl (bad) jp mov stos iret pop pop add sbb aas ja push and add rcrb pop (bad) sub mov (bad) mov sub dec fwait roll xchg pop push and pop mov outsb dec sub pop or inc aaa str adc pop (bad) jnp cmc daa cs add (bad) sub loop xlat out sahf cmp fnstcw in out xchg xorl sub jge and idiv fsub fucomp push in or fxch das test push lods or sar pop dec mov sqrtps pop add and mov data16 rclb jg jmp js cltd es pop cmp call add sub jbe jb bound add jbe push add into or and cmp ficom sarb (bad) sub xor daa shr loopne loopne ss ror adc fucomip and dec bound xchg push cli dec sahf cmpsl (bad) adc jmp loop (bad) incb lods push mov sbb or jg pop das adc adc jb scas sbb test inc adc cmpsl mov add pop push inc or mov int jbe orb add ja fild decl (bad) int3 sbbl andl and dec jbe rorb sub es pop lods add mov add (bad) xchg sub dec inc imul and hlt into int ffree das sub bound add mov inc and pop jmp mov xorb jnp ds cmp scas pop mov or xchg pushf loope outsb orl push movsl jbe (bad) pop xchg lods cwtl mov sahf or imul cmp bound lds push sub push or add aad test cs or mov fwait std (bad) sahf push fsts pop mov movb sub mov and xchg loop scas pop jge ljmp add xchg es into (bad) sbb lock push mov adc sahf aaa xorb xchg push pop mov lock jle imul and push sub push andl dec idiv fdivrp lret rclw jno jne es test jbe ss imul jo sub push (bad) cmpsl and daa sbb mov push lahf cs cmp sarb loop ds test push push je sub dec xchg xchg inc test add push fist mov xor add adc sub xchg or xchg decl ds dec inc adc lret enter push je mov add dec aaa jbe pop inc jg add adc setae mov lock je divl and sub inc jle dec mov je jo jle xchg dec push das call sbb xorb pop das je das call jno sub pop out pop inc (bad) or cmp mov mov gs jne cmpsl pop cs xchg xchg pop adc nop adc sbb movsl sbb cli int push movl int jbe ja loope add adc sub push lods pop std aaa bound fiadd fcmovb mov cli out lcall mov xor pushf adc xchg xor outsb cmp pusha pop cmpsl pop incb sarl fidivr cmp mov mov test push sbb fs (bad) jle dec push in inc call lds (bad) in (bad) cmpsl out test (bad) push mov outsb test inc xchg mov add xchg setbe out es sbb and out lahf outsb aaa mov lahf outsb dec outsb mov jae inc adc push jne call jo into pop jle xchg outsl clc sub ds es ja in dec pop (bad) outsb sub jmp shrb rol add ds push cli lahf scas (bad) (bad) (bad) popf xchg inc add lret pop fisttp xchg js add sysret (bad) pusha inc arpl js xchg sub loopne (bad) loop subb outsb dec xlat mov push push and sub and aaa aas lcall clc fmuls insl inc sub mulb pusha sub add sbb shlb addr16 pop push test fsubrl jmp jmp ficomp or insl daa incl push addb std mov xor loop aas (bad) xchg or adcl (bad) (bad) loope js fwait inc das fiadd fdiv sahf call fadds add pop jmp push add xchg cmp (bad) fst rolb rol mov push incl jg dec (bad) mov mov cs rclb jecxz add pop pop ja push pop fsubrl push les sub jg mov sub xchg pop jp test push inc jno adc xor addr16 cmpsb mov pop cmpsl pop rorb inc mov ds mov mov or pop mov add out test cmp clc mov mov xchg jb iret cmpsl xor sahf add daa or andb in jo (bad) repnz adc rep insl dec dec dec cs popa add xchg xchg popa jbe mov lock jle mov push add push adc lahf push shrb sbb pop cmp fild enter push jmp mov fidivr cmp (bad) mov jmp addb cli add (bad) fadd roll into ret iret aaa fist or imulb inc bound xlat push out push cwtl jnp addl inc push sub mov (bad) push test jmp loope outsl dec sub add lods push mov (bad) imul dec dec pop or out out sti and pop push mov and sbb das or (bad) push sbb xchg xchg (bad) fistpl arpl mov cli inc cmpb cs and or jg add add cmp cli int js iret aas jmp adcb push add or sbb dec pop sub call jo arpl jmp sahf andl jmp loope xchg das jns in (bad) insb inc dec adc xor cmp mov (bad) xor lcall cmpsl data16 jle or mov jns stos push sbb cmpsl popl fdivrl dec and xchg sahf ja icebp add incb jle pop cmp lret jbe sub popa shlb stos dec inc push lock ret xchg int xchg insl rolb fisubl loope mov or scas xlat push push pop ss push mov test nop pusha call xchg or lret movb push xlat (bad) dec sbb test inc push mov (bad) (bad) mov sub dec xlat cmpsb mov pop pop mov out outsl or mov adc xchg aad push add jge outsl push data16 mov pop (bad) std lods inc stos and push adc and lds jp add lea dec testl sbb mov jo mov jb sub lcall dec rdpmc adc in daa gs idiv in int f2xm1 stos outsb dec (bad) imul dec dec test lea sbb jnp addr16 mov push mov hlt xor sbbb mov ficompl dec out jno and sub xor incl inc push push frstor (bad) mov inc dec inc incb test xor nop scas bound cwtl fmuls imul sar incb push (bad) sbb out outsb add mov pusha and mov ja pushf and les mov (bad) lods lds cmp loope and outsl inc es cs sub ss inc and pop cmp ret rol cmpsb xchg ljmp pop xor inc neg and push flds imul rcrl incb mov inc outsl (bad) sbb addr16 fdivl fisttpl mov push idivb pop ss mov ds stos xchg adcl dec movq inc (bad) dec into inc adc mov outsb divl out inc (bad) mov imul push test or stos pop aaa push dec inc and imul lods push ss pop adc and (bad) sbb xor cli mov push data16 icebp mov enter outsb inc push (bad) je mov (bad) xchg or push ror out aas loopne cld dec push jae dec aaa sbb (bad) (bad) mov mov adc scas hlt ds rclb sahf lea test mov push lcall and and jno jecxz ljmp mov jo mov lds dec pop push pop xor inc call mov popa addr16 jbe (bad) push sbb ss dec jo ds popf inc mov fsin int pusha jmp or aas ja incb xor xlat rolb out int lods sub inc push and outsb push inc popa sbbl add xchg (bad) lods xchg (bad) jmp pop xchg xchg fimull mov sbb sub pop add incb inc out mov aaa (bad) test inc fild insl cmp push test pushl or and (bad) cmp dec call imul ljmp push lcall pop xor fnop pop xchg (bad) jmp iret add pop cmp cmp rorb gs ss bound aaa xchg clc sbb jg add jbe pop and push mov ficomp notl lcall stos ret decl cmpsl out cmpsl xchg or iret aad xchg (bad) dec sub pop inc jmp inc imul pop shrb scas jae or out outsb adc btc and pop cmp cmp cwtl cmp loope outsl (bad) pushf xchg push push sub push dec shlb and mov sbb (bad) lock mov popa ret packsswb dec ret inc sub jbe out cmpsb (bad) icebp loopne adc scas cwtl xchg jecxz cmpsb mov jg outsb sub dec incb push daa add xchg add jmp pushl cld xlat out gs xor gs mov (bad) outsl sbb nop push and pop aad sub xchg (bad) je sbbl pusha pusha cmpsb dec sub loopne out (bad) xor cwtl outsl push push shl mov aas daa pusha sub adc movsl and adc pop jne or int mov loopne aaa fcmovb mov shlb pop push mov test xchg sahf ss mov sarl jp aaa out pop push xor imul xor movsl out cmp dec sbb out call not mov bound push scas mov lea xchg pop out imul lfs xor mov mov pop addr16 cld lahf xchg xchg (bad) outsb pop ret insl xchg test push xor mov xchg rcll push mov xor outsl push sbb mov or mov imul fmulp aas fistl lea mov mov int3 mov es or (bad) adc xchg imul notl mov push xchg push out jne mov jle rcr mul (bad) fst mov push pop cmp fildll push push inc push sbb adc xchg pop and mov jbe mov cmpsl mov mov dec xor adcb mov pop (bad) insl ds push insl call xor push xor sub div xchg push xchg addr16 scas pusha adc lock (bad) inc fdivrl fdivl adc jbe (bad) (bad) lret or shrl sbb divl add sbb xor movsb sahf fildll mov out mov pop mov es adc in call outsb jle push (bad) pusha add dec fidivr test test push loope cltd pop das pop test outsb sbb sbb or add jg inc pop and cmc out cmpsb scas xorl rcr (bad) xchg insl jg clc sahf clc test push xor pop and mov mov mov gs ss pop idiv daa sbb jle scas cltd mov int sbb adc out addb inc out add (bad) (bad) icebp lock hlt jbe clc mov sub loope in sbb cli cld dec lock sub or push cmp mov popa das sbb push bound rcll pop jle and xor lahf or xor dec mov test and lcall nop mov xchg jbe fild idiv pushf pop cmp sub popf push push mulb xchg or pop (bad) jg leave mov aas xor decl lahf xchg xchg call adc outsb push arpl cmp mov sub cmp pop inc arpl insb mov inc mul and mov jge faddp mov adc mov dec movsl (bad) aas cmpsl lods push mov xchg inc (bad) dec sub cmpsl aas aad inc (bad) and push push shr movsb jle mov jp notb fwait movsb xchg dec mov add dec xchg in leave mov aas add xor push xchg mov das inc adc mov push inc adc stos pop iret ljmp sbb mov cmpsb fmuls loop mov loope insl add push in imul repnz jecxz std into ljmp cltd ret shlb xor dec movsl out sahf pop xchg inc push sbb dec les popa and inc pop aas mov mov sub ret ds xor nop push rcll mov scas inc scas and mov imul and ret jg ljmp dec push js jmp cmpb adc pop stos xchg fistpll test mov xcrypt-ctr cmpsl (bad) (bad) out fdivr ljmp xor call rcr pop xlat pop adc insl add out mov (bad) sahf out pop cmp sbb xchg mov pop pop jbe push xor xchg mov add (bad) lock xchg (bad) (bad) iret imul mov dec shrb pop (bad) sysexit pop add mov (bad) (bad) xlat mov add jne div fs mov aaa xor fld push movb arpl fndisi(8087 sub out icebp repz leave pop insb xchg pmulhuw adc es fcmovb ret or mov (bad) jns es jmp movsb mov stos es sahf or je xchg mov mov aas out mov aaa aaa push sub jle lea mov pop pop (bad) jg jae ror inc push push out push xchg mov jg leave mov es leave out jp pop nop (bad) adc notb sarb dec push fmulp xchg outsb xor aaa fnop lret (bad) fcmovbe loopne and fimull cmc add out jmp repz lds lret iret add (bad) jbe dec (bad) sahf int lcall pop cmp mov scas (bad) rorb scas (bad) pop cmp sub cmc dec ja das cmpsl scas xchg adc and clc movsl mov jp loope xlat test push pop sub push add divl adc loop (bad) neg ret es jae push nop/reserved dec fucomip stos mov jecxz xchg adc push leave pmulhuw fucom rcll mov out mov mov out int3 mov sub cli out hlt es incb dec loope xchg testb pop into es test mov cmpsb push jl sub addl clc sbb inc sbb outsl mov ret sbbl xor sbb push ljmp in rolb leave ret sti aaa add add incb insb push inc add and idivb daa dec or ja fimul xchg jno aam push neg faddl sbb cs icebp hlt adc adc shrl jecxz pusha data16 push loop shlb orl nop inc xchg stos movb jno jmp jmp stos push dec inc xchg and xchg pusha inc jle sahf inc test lahf pop pop and push les push inc and sbb or out xor adc mov sub sti rol aam int dec cmp xor aaa pop negl or xchg mov je loop jecxz xor aam psubusb loope xor and jmp lods sbb cmp add in fs sbb push jg jp push mov fs (bad) divb or stos (bad) test cmc cs cmpsl xchg outsb inc sub fs jle push push add xchg mov pop and test test mov aaa adc cmpsl out pop pop inc sbbl into popa sbb xor sub pop jb xchg push jo call enter mov and rol push popa inc xor ja lret ror scas sahf cltd dec (bad) xchg xor jno inc fdivrs cwtl cli or loop push push div div ljmp imul sub test jno (bad) (bad) clc out add push aaa insl or ja mov out pop (bad) sub cld hlt mov mov mov mov test dec (bad) stos insb dec outsl sahf lods push pop inc jae es mov ds or (bad) xor in xchg push jo and icebp (bad) or (bad) in (bad) mov ffree ret mov aas fdivr lret mov xchg loopne sub inc test icebp pop jbe jns call jbe or fistpl (bad) dec pop subb (bad) push orl inc stc adc push push pop gs aaa mov dec les not push jo sub popf inc mov push outsl jg inc jbe mov xchg icebp rolb xchg inc pop fdivrs inc (bad) es or and lahf imul and lea cmpsb daa fcomps and push popa cmp enter pop sbb or jg sub out popa xorb testb out enter shll mov cmpsb mov pop cmp cmp mov xor ss fdiv aad loope add out jmp mov sbb pop (bad) inc mov jecxz jle jl mov jmp adc or mov rol add mov (bad) cmpsb mov xchg xor movl sti jmp stc push stc in add popl lret clc shll cmp lds lahf insb push inc (bad) pop mov mov (bad) dec jl es cmpsb aaa pop xor mov xor fwait or mov push sub add or mov (bad) popa fcmovnb sub add inc mov out sbb push mulb fcmovu loope (bad) aam dec and (bad) fisubrl loope push or inc sbb inc popa bound clts and es mov xchg push out mov cmovs mov xchg mov outsb and jp cmp push adc dec fmull scas xchg add xchg test ja fcmovb push sti jmp add sub aaa jmp js jecxz out push xchg test add jg bound outsb adc push mov mov (bad) mov notb or data16 popa sub out mov cmc or les clc (bad) loopne,pt mov shr call out test (bad) mov sahf into lret sub or daa shrb inc mov ss in (bad) mov (bad) dec pop ret ljmp leave (bad) jbe das loop andl jno jp add lahf (bad) scas pop lea pop mov repnz mov pop mov add or cs lods xchg inc mov popa (bad) mov jno or out testb xor out cld mov xor (bad) mov sub push insb pop mull (bad) out test cmp inc dec pushw lcall cld sub mov pop cmp mov mov add notb shll add cmp ljmp or inc mov push lcall push loop stos jne jecxz shrb fisttpl push cmpsb mov in insl insl std pop add into scas mov cmp (bad) push mov adc das mov (bad) add into test jle sub movb push fs loop aaa sbb and mov orl lahf mov pusha loop ja or adc cld sti call dec jecxz hlt inc outsb adc out dec ljmp lahf mov xor xchg xor (bad) test pop je pushf imul mov push jg jg xlat or xor add cs or pop (bad) add ret mulb int3 es faddp int3 xchg add sbb aaa inc loopne test push fmul shrl cmp mov fstpl cwtl pusha pxor ret movsb loop push orb xchg cld inc imul sarl mov pop dec (bad) or orl ljmp and pop sub mov outsb out js fld cltd insl jno es repz repnz std cmpsl out out pop and add mov sub pop (bad) cmpsl outsl ss divb jbe outsl add and mov stos popa inc mov or xor xor lcall mov lds jbe pop cmp int3 push es call jle out iret pushf sbb es das add mov dec push mov mov xchg or adcl xchg rol mov les (bad) xchg pop inc es outsb fmull fsubs test mov pop (bad) es jo and jg dec insb adc aaa dec jl mov std cmpl lock call mov es mov (bad) push mov mov jae adc roll push jg call gs leave je xor test (bad) mov ss imul call (bad) es out mov repz icebp movsl insl cmpsl das pop mov push out ret dec iret fdivp mov mov outsb inc jmp mov mov xor insl div aaa movsl pop adc addl jecxz jge decl in dec sbb in jmp sbb add call jl sub mov mov pop (bad) fsubrl insb loope outsb add sub jle mov scas jo mov lods push mov pusha loopne pop inc imul xor les call outsl push sbb loopne fadd mov aas (bad) push jecxz sbb sbb lods clc mov aaa sub orl inc sahf push sub xchg dec fwait pop jbe loop sub add ljmp push xchg lahf testl and push sahf mov mov fisubr test jg sub lods push out aaa jbe jle scas rol aad out push mov (bad) scas mov (bad) ret push in fildl es inc xchg inc xchg cmpsb clc jle jecxz sbb mov cwtl movsb jle jbe xchg mov push in ja add daa add lcall (bad) jmp out inc loop pusha xor and lret push pop test out test inc add and pop cmp negl (bad) jmp sub mov xorl (bad) loop sbb scas out call jo js mov lea inc out cmpsb loopne movsb xchg mov xor jno jl inc lahf jle inc adc jecxz jmp push aad aaa push cmpsl push in call push scas rcr cmpsb out mov sahf push stos inc fs jbe push cli inc inc stos cld pop fcmovnb mov xlat mov push inc testl idiv cmovs add imull out in lock ss out sub hlt add daa cmpsb inc cli or ja jne xor mov push and mov lea faddp inc ds ffreep rclb sahf mov xchg xor imul out pop je sub aaa mov aas (bad) pop add inc and push sahf add inc sbb pusha adc (bad) sahf pop mov mov cmp inc (bad) clc push or mov cs push rcll rcrl out movsb clc or push enter js xchg push jbe sgdtl (bad) fadd mov mov cli out cwtl fdivrs dec ds pop mov sub lret push pop ret dec mov inc dec mov dec into aas add andl add out ss lock mov es pop and sbb (bad) push xchg js mov push mov sub push ror push movsl test xor xchg repz mov push inc test add push je mov fcmovbe leave ja pop pop loop push inc pop icebp hlt pop inc out jg cmp int cwtl push fsubrs mov loop (bad) push std pop push je adc out mov dec add and lods jns aas inc xchg mov pop neg into hlt cld inc popa (bad) repz out aaa rcrb push (bad) leave das mov sahf ss or test call jecxz aaa push mov dec xchg and into movl push cmpsb pop dec sbb imulb and inc mov sbb and dec push push xchg jp aas sarb stos pop pop xchg icebp into call dec insl push xchg cs xchg push inc mov (bad) fdivrl test int loope vpinsrw ffreep sahf ds aam out rol cs adc inc inc (bad) js mov xchg hlt faddp out xor ss pop cld xor dec call scas es cmp movsl lea ss test add jecxz (bad) ficom pop push inc cmp add and adc xlat lahf jo xchg or dec (bad) mov aas test mov or ljmp and pop imulb dec push daa pusha xor movsb push inc xchg aaa out jecxz fidivr pop push push daa pop add inc push into repz imul jle lret loop (bad) fstpt sbb sti out cmpsb lods push aam xchg clc aaa xchg xchg sti repnz hlt sti push cld push stc add fadd icebp in scas cs mov pop inc sub pop push jle lahf add adc fiadd xchg cmp (bad) push popl inc sub popl dec sbb xor bsf sbb xorl sahf (bad) insl sbbb aaa mov mov sbb jo scas mov sbb push pop je jb mov mov dec sbb mov push andl arpl push mov int inc loop dec mul shlb out xchg outsl aaa in xchg stc fcmovnb mov mov data16 mov out (bad) out (bad) add adc imul sti xchg les aaa sti push cld mov xor push cmp rorb cmp sub inc sbb aaa inc mov mov push or mov (bad) push call xchg scas add inc (bad) lahf test pop xchg mov aaa fdivrs xlat pop sub cs je div hlt fstl pusha sub dec inc rol mov xor xlat push mov daa and pop jno and (bad) mov notl cmp out (bad) pop and out es dec (bad) mov cmpsl inc and cmpsb ds sar ss adcb cs dec js push inc stos mov lock adc das or xchg (bad) jbe daa adc cmp adc pop (bad) and pop push pop fcoms lds push das fimul xchg (bad) into mov pusha dec loop cs outsl pop pop and xchg cmpsb test bound mov push pinsrw xchg mov jbe sub ffreep cmpsb mov rol dec loop push pop (bad) in loope mov clc fmulp scas push sub push aam pop xchg clc sbb std out loop mov inc cmp push ljmp in push hlt jmp jne fidivl bound sbb sbb inc aaa es lods add mov fs int mov out cmp addr16 add sbb cmpsl call (bad) iret cmp sub sbb iret (bad) mov mov push and out les add mov jno ret setbe mov mov test dec mov sti insb popa inc loope into stc add fidivrl pop cmpsl mov push jmp nop jmp ficoml call push jmp mov xchg or jns push cwtl mov add ja jle cmpsl (bad) daa jae mov popfw into sahf mov popf and mov les sahf es rcr inc fisub cmpsl loopne loope adc je (bad) mov (bad) out push divb adc leave mov mov add pop pop mov inc lahf xchg js push (bad) int neg int3 push testb and inc (bad) jmp fdivrp in mov mov loop push call and imul (bad) call decl push lcall jg scas adc lret ror push mov repz jbe movsb (bad) push jbe out cmp arpl and mov and or inc push scas mov rclb mov mov sub mull lahf pop out (bad) (bad) repnz lds jno push nop xchg cmpsl shrb and cmp ret daa cwtl (bad) pusha pop sub push add xlat mov aam sbbl pusha xlat sahf scas xchg js outsl xchg cmpsl push pop mov jp (bad) sahf or xchg xorb test out xlat mov cli cmpsb bound inc fcmovnb mov sub pop shr cmpsb or sbb adc iret mov mov xchg push dec outsb xchg sahf mov push (bad) nop es fidiv sub push repnz rcll jp (bad) mov or inc (bad) aas popa cmp mov adc out pop add into and les dec xor rorb add es push cmp mov into xchg (bad) sub jns xchg mov and mov js stc inc repz xchg into or jmp add and rcl popw pop shl jmp push cs lods push inc scas pop data16 clc pop pop outsl dec mov xchg (bad) xor ret push lods out adc outsl cmpsl xchg jg out loop xchg aaa jbe mov shlb lcall movups cmpsb xlat pxor scas pop out adc mov loopne fsub roll add and movlps mov add (bad) mov lock fistp sbb rol add xchg loop sbb sahf scas fiadd pop sarl cmp loope outsb out (bad) push insb jmp ja and xchg loope out xor out out out adc pop into neg leave mov mov jno adc push aad stc adc jmp out push rol mov xchg cmpb sub adc cmp es push sbb fmull mov or loop into fsubrs mov push xlat push adc jg jecxz cli neg movl and (bad) adc into pop ljmp neg enter inc pop out cmp mov movsb xchg (bad) (bad) dec xor (bad) sub dec pushf std es ret outsb ss pushl sub xlat in push loop lock add push out je or push sarl inc pop ret (bad) (bad) aad out cli sbb fnsave test push inc xchg pop nop ss (bad) fcmovb mov out dec in shr rcl out in pop sub out pop loope loopne inc inc jo adc mov jle cmpsb aam dec xor push sbb cmpsw imulb adc mov call push cmp adc incb int3 lahf (bad) and add or jle or xor push shr (bad) out into xlat mov lret clc es adc or lds inc aad fiadd and jmp jo jmp int3 out dec sub daa jg cld (bad) jg std loopne add loope dec cmc fld mov fadd mov faddp dec adc out (bad) inc push add insb xchg jl jnp shl push imul add mov pop pop add aam insl inc jg pop leave dec xchg or jg mov aas cld clc sbb lock add xchg or fiaddl pop clc mov adc aaa pusha sub push daa ja leave rolb pop loopne pop jb add enter add and dec or inc leave jg out add dec adcl ja (bad) scas cmpsb push xorb jg clc mulb and pop pop stos aas pop fcmovne mov lock icebp insl outsl jnp mov bound mov shlb icebp popf lret sub push push and push and push adc and ss ds or testb or adc (bad) mov or sbb outsl push add or adc sbb sub xor and mov cmovns js fidivr pop xor adc mov fisttp lea addr16 cmpsl loope or or xor sub sbb jo mov push es clts xchg push lcall mov jnp mov popf adc xchg outsb mov outsb mov push out outsl pop data16 dec mov mov sbb xchg nop daa cmpsl scas add or shrl sbb sub or jno xor push mov (bad) aas in mov sub jge sub pop insl aas sub xor fnstcw cs std pop or and add push sahf repz xor and sub and and pop add popa popa outsl or pop das and jecxz lock adc inc adc jb jmp cmp lgs mov mov sbb loopne mov jb lods (bad) push mov aam push push jnp cmp je outsb and rcl subps sbb dec and fcomps ss cli (bad) mov push jo xchg xor xchg dec adc or lret pop out loopne mov (bad) adc sub clc mov push ficomp xor ljmp inc pop push and mov xchg jnp xchg cmpb rorl stos adc mov call ss call lret mov inc scas movsl xchg mov mov sub lcall adc data16 pusha cmp xor mov outsb xor or loope or mov xchg dec loope (bad) inc imulb dec add pop adc pop fistp add jo push out or addl mov imul decl lods (bad) ljmp fcom push pop aaa mov loopne rorb ret jo sub scas mov sbb nop (bad) mov mov data16 mov lret push mov add sub sub notb ss pop rclb (bad) sbb out jns xor push (bad) xor pop adc pop inc push sbb add xchg (bad) ja cmp and jle push fcomip push lahf jg push imul stos (bad) cwtl cli out rol enter push outsb bnd mov (bad) dec (bad) (bad) mov push stos push mov mov outsl mov outsb pusha push incl push or test rcrl pop mov xlat mov mov push inc add push ljmp lock pop add xchg xorl sub out push mov inc add sub sub imul and cmp push fidivrl mov in in (bad) or pop inc fisttp iret xchg push pusha inc push ss lds xchg movsb mov fbld jge push decl mov (bad) (bad) push ss inc aaa aaa push jne xchg dec jle sahf cwtl jb inc inc add scas push test pop fdivs push adc je js fs fisubr add and add sbb iret (bad) lock xchg and and lcall jb mov sub jl add or aas cmpsl xor pop pop xor lods test sbb push or fstp ss call pop inc jne xchg outsl dec inc fstps xor or push jnp jmp add fs push inc (bad) gs and popa push push insl or fwait (bad) jl push sub stos dec inc mov sub mov scas out jle mov stc pop push les push lods decb mov and sub xor pop imul add cwtl ret pop inc (bad) aas rclb sub add dec aaa sbb xchg (bad) mov mov xchg pushf call fisubl incb pop push pop ss mov inc (bad) mov mov xchg inc xchg xchg lcall ljmp enter jnp rolb jl fiadd pop arpl inc cmp mov mov lahf je xchg or push lds fnsave push jecxz push mov dec xor or or pop mov and mov adc cwtl movl mov jg call (bad) sbb mov (bad) cmp jbe nop jne hlt jmp (bad) lock (bad) ror cmpsl fsubrl mov sub dec mov push mov popa mov push icebp out hlt xor or call mov push out ds sub lcall outsl or push sub arpl xor aas mull lcall xchg jge push xchg mov xchg xor test ss cmpsl loope inc jno,pn xchg and sbbl cwtl mov mov xchg mov or push jg (bad) or mov cmp into hlt out out mov inc dec pop in fcmovnb insb and fwait mov jl add push into jp add scas repz jg sub jg repz push pop push into mov push ror (bad) jno adc and (bad) cmp push dec sub push test pop push sahf stos push sbb mov fnsave pushf outsb mov sbb imul dec lcall rcl or les (bad) jg inc sbb aaa adc add cwtl jge icebp add xchg scas xchg loopne push cmp in xchg lret scas lods cs add test jmp cltd push jmp push sahf jle pop add in mov hlt sahf sub xchg mov pusha push push (bad) xor (bad) mov ljmp and stos lcall xchg (bad) mov stos cmp mulb mov and out ja (bad) je push sub test pop pop add add dec aaa clc pop jecxz and mov lds mov rcl pop inc enter stos test scas (bad) (bad) cmpsl mov adc push or push jecxz mov jmp ret or lret mov adc rorb fistpll ret jge rcl es jle xor into inc sub out notb pusha xor mov mov mov imul push add push mov (bad) out push dec cmp push shlb mov addr16 sub mov push sub jbe mov inc mov pop inc loopne neg daa or ret scas fs xor cs cmpsb jo dec in ljmp lahf jle jecxz and stc loop idiv sahf mov outsl mov mov mov adc push iret xchg mov push sbb and cmp xchg add inc das nop pusha dec das test inc mov adc test sahf jmp xchg jnp pusha mov nop movsb inc pop or repnz pop lsl bound or mov data16 pop cmp jbe mov les gs outsb fcompl dec push adc sbb inc mov pusha add mov pop xchg ret jg sti push lret mov push (bad) out add sbb push lds test into mov push mov xchg sahf mov testb xor cmpsl lea pusha cmc xchg scas xor adc jle dec pop jo add out inc cs pop adc aad push mov xlat adc and dec adc add mov mov xchg mov mov jp cmp out jmp jl loop call xchg loopne in popf add cmpl mov pop push arpl loopne pop mov inc stos sub or push lds push ffree (bad) dec sub push sahf jb adc xchg mov into adc xor dec xor cs cmpsb es lcall push imul sub ret add icebp es push adc pop xor push pusha es lcall mov pop push jo,pn fxch lret or das sbb cmp cs jo or xchg jg aad xchg dec adc push push jle fisub mov pcmpgtb push push and test sahf rcll dec xadd ret mov mov pop or pusha push jbe xor out adc aas stc int3 dec loope mov or and pop cmpsb dec popf and pop ds fs or (bad) ja pop ret push xlat adc scas add jo es push jb adc adc test outsb pusha push dec lcall push jmp outsl and in out pop mov adc push mov xchg out idivb mov outsl outsb push push adc push inc mov dec or jge and in cmovle mov call aas into xchg sahf nop je adcl dec cs xor shrb push scas mov xchg adc push daa outsl test test mov pop pop push pop push cmp xor mov ja jbe scas pop lret pop data16 add (bad) push js mov pop ljmp fiadd call sbb xchg mov push (bad) or pop incb aas cwtl rcll jle jnp push push call xchg scas xor es sub add out dec cmp inc (bad) mov push sub out jle push adc push je or cli inc add stos push mov test push sahf mov jne xor (bad) incl and test sub and jne sbb sub cmpsb push shr adc mov sarb mov jle out out ret outsl (bad) addr16 push nop clc into mov or out mov in push or fs mov outsl mov add add xchg ret popw clc mov lea mov push jg insb push xchg test inc daa sahf xlat cmpsb rcrb cmp cli rol pop add aas scas and jmp (bad) outsb sub mov lcall (bad) mov dec or iret out cld outsl aam ss jae xchg dec cmp out loopne cld out xchg ret loope daa das and in xchg lret sahf pushf test sarl pop jmp rcrb stos sub push mov insb ret lea xchg jg dec insl call adc fisubl (bad) push xor adc mov sahf lret fadds fisttpll int outsl outsb adc mov rclb pop lods push rcl sahf mov cli sub push inc xor movsb dec adc jg gs out outsb sbb popa dec outsl ja mov into ss push push lock jb add xchg cltd jle shl fcmovu push add (bad) (bad) (bad) dec xchg jle out aam lret mov mov dec fistpll ds push ret jb (bad) jg dec adc nop mov ss mov add (bad) sahf or js inc jbe cmp mov or pop cmp sbb cmpsl pushf push xchg (bad) xor push mov jae js test mov pop inc xchg stos sub scas push or add sub push add pop push divb push decl push push or xchg enter loop rolb (bad) (bad) into cmpsb mov mov inc dec rcrb push jmp ss xor inc add ret jg jae negl xchg test call mov loope jns mov pop pop cmp das ja loopne int les movl pop not xchg push (bad) jne out sbb add inc mov and mulb lock xchg cmpsb sub push xor add sub cmp dec ljmp lock sub stc (bad) xor loop adc push fwait (bad) jo mov mov jno adc pop (bad) stc and fnstcw in xchg inc daa ljmp mov or push mov mov jg sbbb pushf (bad) ds sahf test mov bswap mov adc push mov xor ss inc push adc nop scas sbb clc mov data16 push push shrb dec or cmpsl je xor add push mov movsl adc sub dec sbb (bad) imulb fist in dec mov les sub or jg pop push sub ja jae add xor (bad) jo sbb pop dec pop or stos xor sahf mov pop inc loope rclb into leavew xchg popa inc (bad) out add mov inc cli mov shrl pop movsl xchg jbe and xor xor and (bad) xor insl inc stos ds adc insl lret scas adc adc cmpsl (bad) fcmovnbe (bad) mov add fstl loopne mov cwtl or dec ja push adc in pop jle arpl mov outsb (bad) mov push cmp push sbb pop xlat xor mov scas mov sahf mov inc and mov jns pushf push add cs jb jecxz pop add add cmp dec dec movsl inc sub pop push dec xor mov jle and pop push push push cmp sahf aas cmp scas repz or sbb aas add sbb (bad) in push xchg jp iret and stos pop dec dec sbb push int3 mov data16 push and loopne mov push ds pop jg sub push add push push pop mov imul xchg je fs push (bad) iret mov testb dec push mov fldl cmpsb mov sbb movsl xchg and sub xchg jo push sub inc stos xlat nopl push sub and inc insb std test loop xchg outsl fdivs inc pop push mov push out pop pop xor rcrb lock pop in testl call ret mov mov enter xchg jge xchg es ret rorb mov aad jg loopne push mov add push (bad) imul sub and ss and iret outsl clc add mov sbb shr sbbb jae inc rorl ljmp and add (bad) pop push dec xchg (bad) push sub incb jle fnstsw sub sbb out push mov jle aaa call outsl dec sub lahf arpl inc es push rorb pop or add pop movsl inc sahf push pop lea xlat movsl mov mov jp out or pop aas mov add push sub mov pusha pop jg push jg inc ss add xor decl push shlb pop cmp mov pop pop inc pusha push dec scas nop push (bad) push pcmpgtb aas cld fdivs push jle ja add repz loopne xchg push jle mov cmpsb nop jle lds out dec mov je xor and lcall test sbb fsubs aad call sbb scas out pushf jp cltd data16 adc mov rolb xchg adc mov and call inc ret mov rolb fimul add or push pop push jecxz sub dec cmpsb ret out mov je (bad) iret sub pop pop outsb out mov loopne ror out xchg push push push ret ja jg loope rclb stos leave add jmp fidiv push xchg xchg addr16 push push (bad) lds dec sbb (bad) mov pop lahf fdivrs and lds dec add cs je lock jg jno xor add or jbe (bad) push pop test movsl lahf in fcom push pop in movsl (bad) (bad) fxch ja fst add cmp push pop sbb popf fbld push ds iret pop xlat sarb push fisub out (bad) rcrl add xor loope loop es push push outsl xchg orb daa push pushw lea hlt xchg xor insl fsubl xor push and popa xor rcrb out or xor sub jle movsl xchg outsb sahf jae add outsb xchg sub (bad) fimul outsl or ret aad jg cmpb mov rorl dec xchg push test jo xchg inc dec movups outsb pop pop pop or dec aaa in jg sub push clc fadd jnp lahf push jecxz stc mov (bad) jg and dec aad xchg xor inc imul xchg sub addr16 add pop sbb out outsl or xchg xor jbe add fcompl mov lock pop outsb arpl adc jbe movsb push add sub pop jg pop adc jmp jg sub stos and push test and sub ja ja cmpsl ss add push add and aas ds add mov jg inc clc mov jo decl push jnp jle addr16 mov addr16 (bad) shrb push imul lods and aaa or inc daa inc pop xor cmpsb jg (bad) cmp call jg inc jle xchg or repnz loopne push cmpsl hlt int3 mov inc add add jmp inc sub es jp aaa ja push inc outsb xchg (bad) push data16 or bound popa cmp jo ja jg sbb jecxz sar out push mov mov jne mov push out xchg je xchg lahf mov lock ja xor sbb inc mov out xchg xchg fnstsw rcrb mov or pop data16 cmp xor out icebp mov mov inc mov add lods addr16 out movsl sbb jae test (bad) dec sub sbb xchg pop repnz insl cs loop js js mov push cmp imul mov pop push out or add rorl dec es les mov pop pop pusha cs cmp dec sub lds fdivrl pushf in dec push dec pushf ss inc add aas shrb push add (bad) mov xchg sbb aaa test inc aam (bad) aam lahf popa dec insl sahf cmpsl movd xchg and jg push xorl adc repnz jnp into or xchg push xor jbe cmpsl test outsb pop push or xchg stos jno dec pop (bad) pop push mov xchg out popa cmp push or mov lcall dec rorb mov sbb sbb xchg out sbb and ja test lods out pop movsb mov in push ja out and wrmsr (bad) addr16 (bad) sub mov mov stos mov xchg popa inc cmc movsl push jge cmp mov fmull mov sahf xor mov push (bad) mov pop push fistp and lods pop adc ror ss xchg rcl inc lahf shr loope adc pop jg ret add pop cmp adc icebp cmpsb mov push push out ds fdiv jg out sti ret ret dec jmp out mov inc jle (bad) lock xor xchg xchg stos push test lahf pop outsb pop jl inc xchg jl fiadd add jne (bad) ja int test jle fistp mov xchg jl clc inc ljmp test and mov xchg aam adc getsec sbb outsl push ja dec mov scas pop scas pusha clc mov mov mov outsl scas imul ss push (bad) lea dec or inc (bad) xor push sahf push shlb ret lahf popfw jne jle lcall (bad) cmp mov add pop or out enter xchg lock cltd mov jbe (bad) jo pop movsl mov arpl dec imul test movsb push imul jo cmc push push and lcall movsb popa cmp sbb push lea add cmpsb inc cmp adc (bad) scas adcl (bad) push outsl in mov xchg outsb push testl mov les (bad) pop add test (bad) jg and jg aad add int clc (bad) movsb in fnstsw cmpl out scas inc fs js nop dec mov ja aam pop into (bad) imull sbb or jbe lock lret data16 lcall pop aaa xchg push jle pusha cmp adc inc or or movb or jg fwait push lea push pushf push scas push rcll subb pushf xchg jg cmc xchg mov loope lret std inc sub jle mov es jge mov (bad) and cltd jnp lds sub out adc test or or imulb jmp dec and sbb pop faddl pop or loope lahf push xor (bad) test xlat inc lcall inc and bswap ret ja push cs scas jbe or addr16 fisttp lds inc sahf je sarb rclb push cmp lock dec xchg jmp xor iret repnz mov (bad) aam dec inc (bad) incb divl out xchg xchg sahf addl jne jbe test sbb out jno call iret aam adc pop inc pop pop ja xchg out loope mov sahf xchg and subb lods mov xchg inc notb mov sub int sub popl jle dec (bad) (bad) pop movq push test push or rcrb test sbb loopne sub adc jbe je repz ja js flds arpl add xchg (bad) popf mov dec out sbb and or push push mov test pop daa test mov in icebp decb jmp add mov and rclb stos xchg jne (bad) add pop aas adc (bad) fiaddl pop dec add js scas test loopne jb,pn ss jno inc xor push push sub mov mulb add xor icebp lds add mov cmpsl bound push push mov jbe clc sbb xor (bad) popa push lcall push jecxz dec subl xchg xchg mov scas idiv cli mov in enter nop rorb xor leave dec xchg pop ss adc adc pop and aaa pop inc insl dec xchg add mov into pop or jle sahf cmp pop fs sub sahf ja mov out (bad) mov fcmovne leave push cltd or jg push push cmp outsb sbb testl adcb (bad) or adc mov addr16 (bad) jmp popa daa push out adc xor pop mov add mov es cmpsb pop lods addl push inc jle dec or subl add ja addl lahf addr16 cs nop data16 or inc sub and or movl mov push (bad) fnstenv lret rol inc das pop arpl pop aaa push ss jmp jne cmpsl (bad) jmp pop int out cmpsl call ss cli sti lahf aad xchg test pop add pop cmp push sbb inc jg insl push inc inc xor mov jbe mov or das lods jg mov dec ds (bad) mov and xchg or xchg sbb or dec in lds push jle and mov aad mov mov dec sbb lret rol pop in sbbl loop fnstenv mov aaa hlt lods arpl out lcall push loopne mov popf ss dec push pop clc sbb stos push mov sub sbb or out xchg out int3 mov sbb outsl mov ja mov les and mov fld mov ja stos scas mov xlat add sub sbb inc loope call mov lcall es fcomp loopne add dec or mov dec push dec int jp out test mov pop dec and daa xchg iret mov jle lods aam add mov mov push or pop jl cmpsb adc push xor gs lret inc mov (bad) popa cmp add les adc and mov pop xor dec pop scas sub icebp add orl fidiv rcr fcomp mov jecxz in gs or scas sub pop data16 stc movsb (bad) push add and push xchg scas lahf dec or sbb xor fst jbe add int3 fisub popa xor inc imull scas lods xchg enter jg inc popa xor mov push lds ret fwait divb push notl push fisub adc out mov roll mov pusha mov dec pop jle mov xor ret jle add out aad add rolb fsubrs loopne jmp push dec mov aaa xlat int3 shrl mov rorb sub (bad) lret stos sbb pop pop repz mov ret sub fnop mov (bad) pop mov arpl inc adc ja imul mov pop subl add jg mov imul data16 rcll ds inc (bad) fdivp jg les push inc loopne test dec sbb mov inc daa (bad) fadd or push es fiadd test xchg mov xlat cmp jo add in cwtl jge mov add jae pop xchg mov ret xchg fdivrs xchg jp data16 orl or hlt pop (bad) pop push fdivrp cmc cmpsl jbe test add mov mov flds dec ficomp push and jle or jbe xchg fs shrb test ja out or jmp mov loopne mov lret mov jb lock mov mov or into into push loop jle cmp out ja (bad) fsubl shll rcr ja popa xor call xchg sbb jg push cmp call and sub or add je mov xchg pop lret dec pop xchg loop add std push adc jg in fnop jle xchg lods stos jno cmp rorb pop ja pop pop add test xchg mov mov mov jle push fidivr lea xor sbb dec sub faddp mov sbb add cmpl dec je aaa (bad) mov loope,pt loopne fcom push or fiadd loope xor (bad) sbb xchg loopne loopne out push aaa outsl add xor (bad) lock cs repnz mov mov inc iret dec sbb add add mov pop or mov cmpsb stc jmp push (bad) mov xchg outsb lret sti pop movsb adc or mulb fsubrp add sub out test inc outsb ljmp sub adcl addr16 jg std (bad) nop pop cli aaa adc adc cmpsl fwait aam (bad) xlat (bad) leave mov jecxz fcmovnb push (bad) loope xchg loopne pop and xchg jp push iret jmp push sub sbb test out dec cmp insb nop adc scas out and out push js clc pop dec lahf cmpsb jle cmp push mov mov adcb popf (bad) sbbb dec ja dec movq xchg paddusb les aaa (bad) mov jo outsl add cmc in fst mull lret movsl xchg mov ret mov push push xchg test dec dec divb add or jp ss adc leave int3 dec and (bad) mov fmull inc ss fs lret and int3 sarl fbstp jp xchg or out jnp xor iret mov outsl push movsl addb outsb ljmp and (bad) mov aas pop mov xchg rclb inc outsb insb xor test inc mov mov cli add push mov sbb jle ret hlt adc in repnz inc push and add or out test fisubr data16 xor test xor xor sub add icebp (bad) mov mov and jno and fimul and cmp mov (bad) or cmpsl stc ljmp inc daa inc bound dec scas push mull mov dec out ds loopne mov cmpsb data16 sub movl dec jp jbe or out add add repnz in xchg lahf rcrb xchg push pop xchg cs push sti jmp outsl pop adc jecxz std scas popf mov stos js ds sub add or push xchg dec data16 aam push data16 cmp cmp incl mov out les ds imul push movl cli and js (bad) aaa rcrb addr16 mov xchg push cmp outsb (bad) js or inc lock mov js jbe loopne xorb pop inc dec push inc insl pop ss inc add out inc cltd jl add pop (bad) pop push mov mov mov add add pop scas mov mov push in cmp scas repnz (bad) adc (bad) mov js out cmpsb or je jle loopne add addl jg scas loop xlat out enter ss insb (bad) inc xor aad imul in movl lock cmp out xlat mov sbb dec sahf outsl xchg adc cmp cs outsl fisttp dec test or add add pop data16 add loopne mov xchg rolb aaa ret and les jle lahf (bad) into nop outsb push jle ss xchg (bad) shrl addb jle mov rol outsl xchg data16 mov pop aas adc jno in (bad) jne mov jmp std push fmulp leave hlt jecxz add cmp push ja add adc js cmc jo outsl pop mov push inc clc inc mov dec jo jno mov pop inc (bad) and sub icebp and mov or out sbb lock push ss dec es adc ds push pop pop pop jbe lds enter mov inc addl mov pusha mov repnz lahf ljmp out mov (bad) push add add push mov xchg loope mov jbe mov jnp ja cmpsb push cmp pusha sub jg lds cld push cmp jo mov xor out clc cli (bad) push add stos sti mov push loopne pop push cs movl addl (bad) into js add push loope les mov adc pop aam inc pusha sub pop xchg into les sub mov and sahf gs sbb dec aam test ja sub push hlt daa stos pop add pop cli push add mov inc pop inc addr16 rcll rorb mov xor jle,pt cwtl outsb movsl ficomp clc xchg repz mov add out cld clc cmc pop outsb ss decb sti inc sarb add gs outsb add sbb mov xchg and xchg aaa movsb pop mov push loopne mov mov lahf and dec (bad) (bad) popa xor inc add xor pop out lods xchg or ret shlb adc movsl je mov sbb and idiv pusha mov pop adc out fnop push jle push into scas xchg prefetch mov int ljmp sbb (bad) loop mov aas inc ret push jns clc aam pop push loop or repnz cmpsb ror ret rorl aaa inc dec and jbe sub (bad) dec sahf xor (bad) jbe adc push jmp packsswb cwtl pop mov movl xor outsb stos out mov imulb push inc add inc dec fmull mov movl mov (bad) sahf (bad) loopne sarb test loope outsb ljmp sbb outsl leave push ffree out sub fld std test xchg movsb push lods jo and mov push mov cld icebp out repnz ja mov jecxz pushf popl lock xchg mov pop push push xchg add dec dec ja xchg movsl (bad) notl mov sbb adc (bad) out into inc jg mov xchg ljmp add pop ss (bad) mov stc xchg (bad) mov xchg jne xor push xchg out cli je arpl xchg jb aad stos mov out xor enter ret sti in iret mov dec xor inc imul pop mov sti out dec lea dec xor lcall mov mov push push sub push and or outsl pop xchg clc cmpsl jl mov inc pop or arpl cmpsb (bad) test adc pop inc loopne and push cmpsb sub (bad) pusha test icebp mov xchg loope bound pop outsb inc add loop mov cmp (bad) push and outsl sahf and push call loopne outsl push neg vpaddsw mov push add jmp adc fiadd (bad) mov fimul push aaa (bad) push mov mov mov push add es cmpsl push and push arpl mov out lahf test push cwtl jp das push ja je mov mov (bad) scas cmp jo mov push xchg mov rclb adc divb fprem aad push and mulb add xchg adc jge daa push mov hlt fld (bad) test pusha mov mov movsl sbb push add les in call test bnd mov mov and sbb push sbb push or into aam add sahf addl lea addb push ss loopne es out jbe xchg xchg ud2 jg sahf lock push ss ja pusha mov ds and pop ss jp idivb (bad) out fildl push into add fldl out aad mov test scas clc xlat adc lea loope aaa sub add cs jo add jg outsb mov push daa pop mov outsl pop sbb xchg jbe cmpsb inc pop jo xchg jne,pn and ds adc push mov orb add cmpsb push adc scas into adc sahf (bad) mov push (bad) outsb adc (bad) mov aas lds or and push (bad) xor pop xchg pop jecxz outsb stc shrb ret rcll sub adc pop pop ljmp out and cmp xchg xor push push fisub scas loop push imul xorl loope aas mov ds imul sub or ljmp outsb push aas sbb jo outsb cmp or sarl fadds daa mov (bad) pop inc mov pop rcrl dec jbe in dec xchg aaa jecxz scas ss iret bnd pushf (bad) incl sbb loope push cmp mov add sarb rorb push out (bad) lahf mov pop inc or jne push push arpl sbb insl fcmovnb cs in push in sarb testl data16 xlat les push and incl or (bad) call movsl rol mov aaa test hlt in mov sub push mov pusha loope and mov loope popa mov xchg push inc add daa jmp push out mov sahf (bad) dec push addl sarl or shlb aam ds push fsubr lret dec daa fcoml dec dec stc call test (bad) mov addr16 xchg dec incb es subl mov test and push xchg jle adc loopne ljmp mov out data16 mov dec dec scas cmp aam dec dec xchg cmpsl push xchg incl mov nop jns jmp and dec push ljmp loopne pop push icebp (bad) add data16 fisubr xchg xlat cmc fmul mov outsb aas or or push (bad) shlb xchg (bad) push mov adc inc scas dec clc inc fcoml stos xchg (bad) clc xchg in and iret adc push dec lret (bad) std mov jbe cmpsl test mov mov inc cmpsl outsb mov movsb push (bad) rclb add and pop (bad) mov xchg dec lret idiv loopne and mov or push or bound jmp (bad) into outsl in dec stos add pop (bad) mov mov int3 dec cmc fcmovb enter (bad) std loopne push adc addl or xchg flds pop pop lock leave and jbe add in pop pop (bad) jg das mov mov pop movsl (bad) push nop pop mov inc and pop pop loopne add inc add and les inc pushf insl adc pop ss adc nop out or pop shlb jg add or out mov xchg mov mov in pop push lock je jb stc cmpsl pop pop fisubr clc mov jnp pop stos (bad) lock pop cld or incl in int into dec nop pusha push test push adc add iret fwait xlat adc adc cmp mov cs add (bad) or xchg pop adc inc push dec cmovp sub imul xor dec push or inc dec pop pop js out mov inc push cmp pop push add mov cmp lahf pop inc and pop adc sub and inc and or sbb inc inc (bad) ja (bad) outsl add push cltd push push cmpsb jbe ret and pop mov mov push and ds pop push aaa adc scas xchg cmpl or daa das pop adc out enter scas adc push and xor lods notb sbb xor pop cmp (bad) jg sbb movsb push sub ret aaa fsubl jo stc xchg imul pop inc (bad) jg call ret data16 push negb sbb dec pop aad or push xlat sub add push push push xchg jl pop add jns pop xchg cmp sub aas or adcb es mov ss xor pop sbb es jg adc fnsave sahf xchg (bad) es push sub mov es mov jge movsl xorl xchg out push mov pop out inc sub adc xor sbb mov xchg sahf jbe loope and xor and push add push sbb pop das dec add lahf and mov pusha sbb add ficomp fistpl push loop mov (bad) mov xchg imulb leave out mov xchg ljmp mov test push cmpsl fwait (bad) mov (bad) jle xchg jo roll cmp xchg (bad) sbb inc sbb int inc test sbb repz and or xchg outsl inc inc and iret dec add mov sbb gs and cwtl imul rcll repz out in dec loope popa xchg mov les out push lcall push lcallw ret push cs xchg mov int pushf lds shlb into mov lahf and out xor inc sbb call inc inc je inc jp out dec inc sub sbb pop push adc or or (bad) (bad) or or add inc das mov cmp jecxz push into out sbb add fcom or sahf shlb push jnp jle push (bad) sub js dec inc adc sahf cmp fisubrl xchg push lcall push xchg (bad) lods in mov sahf mov inc inc inc or negl add fisub jnp pop sub sbb add outsb add aaa inc add sub cmp clc jg pop cmp lods faddp mov clc in jmp aas outsb in fcmovnb mov sar int cwtl xchg jb pushl cmpsb xchg mov sti ds mov inc (bad) jo inc rcll push rorb sahf mov jg dec push push sahf arpl mov les add fisubrl fistpll rclb xor out sbb sbb outsb dec and inc sub out and ss mov mov pop dec cmp sub fsubrs stc dec repz or jbe iret add leave sahf mov or (bad) pop xchg out insl xor es icebp cmc inc out out clc lods test (bad) lret mov ds js inc loopne add cmp out (bad) dec xchg imul mov loopne add push out cmpsl pop mov icebp sbb dec push mov mov inc pop bound test inc push sub jne jne or adc jo cld mov inc in xchg ss outsb loope into add cmpsb mov test mov aam test inc cmc das mov in cmc jg mov (bad) jo inc daa mov ret inc and xor inc pop ffree cmp (bad) mov stos insb xor iret into jecxz fidivr dec arpl adc into scas and dec lea inc sub adc cwtl and clts daa jg and cmp mov mov inc and int3 lret (bad) inc adc jp js or push movsb (bad) mov fwait add ja push mov pop inc jmp lds push xchg ja fwait jnp sbb pop insl push adcl call adc jno add into xchg int3 push fnsave cli lcall add addl cs (bad) xor mov jno pop movaps cwtl les ja pop inc jb out adc pop das mov xchg jl mov test outsb call mov (bad) mov mov insl outsb mov sbb shrl icebp insl scas add out push xorb add es xor rolb outsb dec sub outsb add aaa out in push loope lcall (bad) cmpsl nop ss sbb out repz aas xchg xor pop and and push mov and pop arpl mov cmp or fadd push out aad xor dec out shll xchg xchg adc in shll fsubr add pop inc imul ja add out pop rcrb add add jle add mov out mov sub fcmovu mov scas pop inc dec push (bad) push into adc hlt data16 (bad) pusha inc stc outsb mov lret sahf xlat pop dec (bad) xor cmpsb inc cs xor push adc cs in xchg cmc ucomiss inc sub mov (bad) test mov push out nop cmp inc dec sub sarl loop out cmc scas xor push sub mov mov mov (bad) xchg xchg lret mov jle aas incl outsb adc and push adcb test push xchg or xchg data16 push pop sub and cmp sbb jg push mov xchg push rolb push sbb xor scas inc das imul enter push jno push mov push into or cmpsl cmp push mul jmp add aas mulb jo inc cmpsl add fisub enter inc pop addb mov add out sarl adc dec push push xor test cmp cwtl imul dec rcll cmp (bad) stos lcall imul or add adc icebp mov adc pop das cli sub jnp jae repnz into test ljmp add push pop shrl jmp add push add jo ret mov (bad) test scas mov pop mov lea ret ds outsl imul jnp mov inc pop pop inc std rcrb pop xor sub mov call dec call mov mov out into jne push xor jg mov bound dec push or pop rcrl jle pop adc mov popa dec mulb popa fadds loop mov (bad) xor jbe icebp into add pop les insb sub out clc ja in sub fcomi (bad) imull pop fiaddl jne outsl xchg fs orb (bad) mov cs aad scas push lret jns imul mov out pop es adc inc or out ds daa outsl imul adc pop dec pop mov mov adc ss iret adc sub pusha mov mov nopl cmp mov in in imul faddl or adc push adc inc cld fucom call (bad) or xchg jl dec aas arpl mov scas dec mov or mov inc or outsb js nop outsb out rcrl das mov xchg icebp inc adc cltd dec pop shrb es cmp pandn cmp mov mov js mov push bound lcall inc sbb movb iret sub or popl gs push push mov add inc out in out ljmp push call xchg mov push cmp pop notb xor fucomip divl mov push mov add scas nop push mov mov add push mov push leave (bad) out mov push cmp sbb fistpll jo popa pop test xchg cmpsb push shrb inc dec les adc inc aaa out mov outsb (bad) ja lahf sub out adc ds mov (bad) (bad) stc out mov pushf jle loop jl out mov popf xchg outsb adc pop jg jecxz sbb in out cli clc or outsb xor jbe jns dec (bad) pop aas push (bad) gs adc inc cmpsb test jl test or lahf fmulp xchg scas rolb push arpl or iret push add ret rorb add pop jg adc mov or cs add popl test ficomp mulb xchg imul (bad) jbe ftst loope xchg shr xchg lahf nop je sahf push in push mov insl dec fiadd movsb inc stc xchg insb lds ds cmp push ret (bad) aaa xchg nop insl insb loopne test xorl lods xchg data16 (bad) pop dec mov fisubl mov iret inc scas mov adcl sbb xlat and popl mov and cmp andb (bad) call pop pop xchg mov loope js adc push out int3 push mov ret fdivp ret stos xchg aas aas xchg jge and out mov inc call push aas mov jne cmp aas mov jp mov mov (bad) jle inc xchg pop mov adc int mov mov inc stos push xchg and mov test pop dec dec xor sub or or add ss pop cmp es push hlt (bad) fiadd fmull aaa push (bad) outsb jmp lods cwtl mov add out (bad) xchg popa fsubs aas jecxz inc cmp divb inc arpl xchg pop jle mov scas sub das rcll pusha push cmpsb andl (bad) and xchg cmpsb inc mov xchg mov cmp fimul xchg shlb stos sbb in sub lock sbb xor ljmp push xor clc pop out andb jecxz fldcw stos mov rcr call into sahf xor sbb inc cmovge pop mov jle loop aas mov add (bad) rcrb (bad) mov pop lea cmpsb mov add mov push inc sub xchg mov lahf jle sub loope int3 inc rcrl xor push test lds inc pushf dec lahf stos or sub fisubr sub mov dec vpshaw sub mov (bad) sub sub mov xchg lret push cmpb jno sbb in lds xchg das call add mov sub ret ds jle in fstl xchg cli cmpsb outsl dec out mov pusha push or add setns xor xchg orb inc add inc add pushf push sub inc fcoms add xchg xchg jp push pushf aad popa xchg dec jg jecxz or shll cmp shlb add dec fwait push addr16 jle cmpsb movsb mov lods scas jg adc and inc cwtl pop adc xchg jbe (bad) loope pop xchg jle ds test sahf xchg out cmpsl mov add push inc into mov jp push pop outsb lds adc xor ret push jle xor mov xchg adc add sbbl xchg aaa push or and lock push jle inc sub and decl (bad) push dec jecxz xor adc mov in inc and adc fisubrl (bad) iret rol push cmp sub mov inc test sbb jbe jle out rolb xchg insl dec popf add push outsl mov out in add fsubp mov pop cmp scas cmp push pop push push pop or test mov (bad) iret xchg fwait jnp xchg dec mov mov push and dec sbb movsb outsb sbb into (bad) (bad) jg adc mov (bad) fdivr psubb sbb out mov dec sbb pop xor or out xchg adcb aaa add mov jns aas ss xorl lods add add sub mov ds add cmp (bad) cmp dec sub leave rcrb mov push scas xlat test testl mov mov pop rcrb lock pop cmp sub rorb cld cmovo jmp roll sarb cmpsb cmp fiadd fstps inc dec divb call push jno outsl push jbe imul bnd jecxz (bad) cld push lock mov mov xchg mov scas push ss loope (bad) je aam aas stos (bad) xlat lret ret xor push fidiv sbb adc mov xchg pusha adc jbe loopne xchg sbb push mov push inc sbb out or xchg xor pop mov xchg loopne xchg inc push aam mov inc jno test call dec stos ja ljmp pop aad inc and jg push sub jg lds push xchg xorl aas xchg jno xchg aaa dec rclb add (bad) push mov jp rcl push add aad cmpsb xchg add push dec xorb or xchg cmp ret jae (bad) sbb movsb jg daa pop add adc push in fcom add jno lock rol into jl xor aad push scas add dec out mov pop sbb movsb inc jo aas sub movsl icebp mov xchg mov push add (bad) xchg and jbe ljmp xchg pop push data16 lea mov (bad) adc jle and jg aas mov jmp mov fidiv sub inc jbe mov push inc popf cmp sahf cmp mov push aam push mov push dec jg dec stos and sbb rorb cmp leave mov pop inc outsb sbb jno pop (bad) rol dec out ss inc sbb rclb ret mov popl lods gs aas or (bad) jb repz loope loope rclb scas mov mov ds fdivrs mov jp and push and mov ja clc push sarl bound imul pop inc add xor inc das adc fidivr roll and nop cmpsl xchg push add xchg or xor das mov lods add into int3 jmp push aam out add push add xchg sahf push and es nop dec pop pushf dec cmp scas aas ds or pushf xchg and push or push xorl mov sahf enter (bad) mov into negb daa shlb dec aas xchg insl dec (bad) aam (bad) push test (bad) lea jle adc push or xchg inc or push xor jecxz into (bad) into dec or cmp (bad) dec xor mov aaa cmpsb push push rol add pop stos dec jl scas popf (bad) add scas mov jg lahf pop push mov cltd daa lahf xchg push out loop in test inc pusha sahf gs cwtl imul add push scas fwait lock rolb cmpsb (bad) sub aas inc xor in jo and or sub insl xchg cli cs mov sub push (bad) dec pop or jg dec mov (bad) sar fdivrs in add ss sub aas fwait dec sub (bad) mov das xchg jae cmovae push pop jae das out lods push add sbb cld jg rolb or aas out (bad) mov out pop cmp add insl cmp out fcomi xchg into pop out ja dec xchg (bad) call inc push lret ds std daa mov push adc jecxz mov cmp call or std enter into shlb stos adc into aas into js mov lock lock (bad) das shrl push mov push and scas popa roll icebp aas std xchg mov fs xchg xor add add into rolb ss cs jne sub push push ss mov xchg jg subl lcall mov bound xchg and or clc leave mov fmul into ficompl mov add push jp adc push iret out pop sub leave mov pusha sub das mov dec add mov nop jg or inc rolb add sbb xchg pop xor inc push arpl pop xchg (bad) adc mov mov add movsb jle push push mov mov jb mov movsl and sahf jo push ja mov addr16 pusha jecxz cmc (bad) mov fcmovne into (bad) mov lods decl sbb ljmp pop cli cmp ss pop add es outsl push dec push sbb xchg cmp sbb mov sub ds mov aas notb lock out divl push inc popl nop and dec cld inc sbb je add testb add mov push pop cld dec ret inc cmpsb mov ds nop dec sub dec call mov or mov (bad) push les iret lods mov cmpsb sub inc xchg jb add jmp loopne pusha and fmuls xchg outsb ja sub mov scas inc mov xchg jle xchg sahf loop movsl cmp (bad) jmp aas cld out mov inc inc pop mulb mov daa jg xchg mov pop push push les mov mov ss adc int jg jnp fwait jno push test mov sub aas or psllw mov fxch int3 inc xor mov or xchg mov pop lock pushl mov mov scas jo fs out (bad) sbb das adc in repnz daa ljmp push pop push add add adc mov pop cmp push xor jbe fistpl (bad) out push xor xchg push mov lcall or out ret mov xchg fidivr inc inc xchg cmc lcall (bad) (bad) out addr16 adc adc jmp scas mov pop (bad) rorb mov add (bad) stos cmpsb push repz hlt divl mov push shll pop mov xchg add jo pop xor push jns (bad) gs jb arpl decl aam mov pop jl pop push aam ds adc aas stos pop xor int and pop in les mov add rol jno test fcoml (bad) cmpsl and sub mov pop inc mov jge aam xlat pop add pop out push mov mov hlt outsl mov icebp mov (bad) mov jle sub pusha (bad) ds rolb add adc inc inc decl mov sub sbb cs mov (bad) xchg insl cmp fistp jg arpl and pop clc inc adc mov pop mov je cwtl adc adc and push (bad) mov fiadd jg loopne rorb lahf sahf add sbb pop sbb icebp call mov pop cmp orl aaa add jl sub pop sbb cli jo dec adc cmpl xchg push mov adc ja hlt mov int3 ret les add push jg int ret inc ja dec inc and dec add xlat xchg mov adc jmp sub call out push xchg add aad out jecxz or push mov cmp mov sbb mov mov fist pop dec jns lods inc pusha xchg mov shrb sub jno aad sbb or xchg in ret or lds sbb ja,pt push ss test loope,pn push xchg test xor mov loope fnstcw fsub push in out hlt aad (bad) and out xchg inc aas adc jo jo negl rcl lods in inc insl dec push insb push adcl mov add jmp ds mov hlt popl inc jns in sub or hlt mov rolb lds cmp inc rcl push sbb jb jle lahf add push adc jle cs adc (bad) jbe aaa in mov ss das adc add out test lahf mov sub push scas push xor in rclb rol push lods sub je mov adc inc jl and mov lock ficomp les out ss adc pusha pop std aam add (bad) mov cli fnstcw ret push push cmp ret jbe (bad) test out outsl push xchg jle scas ror lods mov xlat aas xchg ror xlat sahf loop push hlt test icebp add fnop lds xchg stos mov xchg bound xchg pusha sbb xor or loope cmp cli push (bad) mov popw add scas scas lods (bad) lea xchg mov pop xchg adcb sub pop dec xchg (bad) pop idivb or ja movsl mov mov (bad) add fstl ds mov icebp add push jp inc mov scas push loop pop and and fcompl ljmp into call aas (bad) cwtl add push popf subl adc inc outsl xchg push push xor (bad) push cmpsb dec insl sti dec add push in ja mov (bad) imulb pushf lahf sahf iret stos cwtl sbb mov cmp add outsb into outsb in fcomps cmpsl pop (bad) and js add or pop lods cmpsb (bad) jle push and and scas sub xchg (bad) int mov push std popa mov mov adc cmpsb push imull cmpsl xchg mov flds popf xchg jecxz clc rclb inc sbb mov mov xor jo and addr16 jp jmp (bad) (bad) mov pop pop mov xchg mov add lods xchg subl loopne ds push cli (bad) cmc roll into sbb push pop fnop scas bound fildll imulb (bad) jg sbb jle cmp fildll je roll das inc sub add sub dec loopne jecxz hlt enter ret ret into xor adc push xor daa mov imul jecxz fmull (bad) (bad) aaa sbb icebp icebp repnz aas arpl das add ja cmp pop pop pop ficom and (bad) mov loopne mov mov data16 arpl gs mov mov add xchg pop ja xorb leave mov movsb out je fucom (bad) (bad) stc pop ljmp adc ja (bad) xchg cmpsb pop jnp add stos outsl dec push outsb push adcl mov xor xor inc ud2 xchg cmp ss cmp add das push pop adc jle les mov push push mov stos (bad) ss xchg jmp push cmp push loope xlat jle add adc fiaddl pop push shl fldenv incb jbe push (bad) (bad) fimul (bad) movups pop push add or mov push daa mov popa jno mov dec out mov or sahf add sarb mov jmp add jle jmp int3 cmpsb jle mov xchg movsl imul outsb cmpsl outsb dec jb mov inc pushf imul jl inc xchg add ja xchg push cmp xor sub xlat jle clc inc in ret mov inc (bad) cwtl push add mov push aad shrb in lret (bad) mov adc (bad) es add lea and (bad) sbb test add pop pop ss mov adc push adc xchg sbb xchg add xchg push inc mov es dec xchg sahf andb add iret cmpsl stos add cs lea mov add aaa lea mov aad mov cmp or and pop mov jmp mov dec ret les leave adc into test js xchg aam daa or movsb adc (bad) jle adcb and xor into lods test inc cmp (bad) jo adc sahf inc inc cmovge out inc and cmp mov ja mov push dec pop cs dec pop add mov fisub add loop fisubl fcmovnb jbe jo mov test (bad) adc scas ja cmc fistpll pop cmp cmp add jle xchg scas jmp xor mov add pop sbb nop or ja (bad) jno sarl inc and pop (bad) sahf inc (bad) dec fwait (bad) ss es inc or sbb sub (bad) jle or mov push sbbl subl xchg out add lcall pop jp push pop icebp loope cmc into (bad) mov (bad) xlat (bad) cmp pop push push jl add movsl pop inc xchg pop and idivl add int out scas mov adc push mov mov pop xor mov lock ss addb lea add add xchg inc add pop mull mov sbb sbb das into push addl xchg out imul (bad) (bad) push leave pop sub cwtl jp jbe je,pt clc sbb mov outsl pushl ds inc mov push popa push call mov out mov clc into stos jns jbe cmpsb fistpll loop jno ja mov cli add fmulp (bad) lock bound in lahf mov repz scas test jg popa arpl mov add in call inc (bad) es and mov rcr pop inc imul push xchg and into pop cs add popa add loopne push and mov add push xchg xor push mov push out dec push mov test fucomip lock mov push add lahf add call inc cmp fisubr sub imul mov js add in mov out cli mul adc jg addb xor or pusha ss loope mov pop pop dec insb mov push or sarl notb js shrb out es add xor loop xchg in es test jl adcb xorb inc cmpsl loope fisubl pop add sahf dec sbb or pop (bad) pcmpgtd add ss adc xor (bad) push push int3 mull repnz sub adc cmpsb test pop scas js add (bad) clc icebp mov pop sarl jbe inc ss testb and aaa mov push cmp add jl out mov or decl add sbb rcr ds pop mov xlat es movb andb mov pop cmpsb ret mov addl sub je lcall sbb faddl fimul test outsb add addb cmpxchg8b movq call pop mov addb ret leave push rcl insb add mov sahf fild inc mov rcl call ljmp (bad) jle in shlb mov xchg mov inc sub or pop arpl ss in outsl add or sbb (bad) (bad) mov test xchg das mov mov stos push sbb mov jnp rorb pop inc lods mov aaa jbe imul scas add xor data16 (bad) jge or out lret mov (bad) cmc fmul ss add inc jecxz inc (bad) jne inc mov push mov add addl mov sbb paddb adc dec pinsrw push sub and mov testb push mov out add mov fisttp xchg pop mov jle push cmpsl or js add add or out xchg sbbb (bad) mov pop popf subl cmp cli mov add lcall shlb xlat mov cmpsb fmulp pop clc fsubl imul int jne fadd iret je js into or inc add add call lea mul data16 mov mov xor lea dec dec out jle test aam insb xor xchg or daa sbb mov scas or add scas or sbb or ds xor dec rcrb push jne adc inc fimul sahf push test sbb mov shlb cmpsl enter outsl cmc fildl mov enter adc push ficom call push fdivr cs sbb add jo pop nop pop subl call mov std fs jo sub adc js lods add mov lock sbb xor xchg push into adc and outsb xchg jg mov gs mov xchg mov dec in push out fistpl or sti mov aad rorl sub shrb daa (bad) jmp inc add scas push add jg sub (bad) pop add add jo sahf data16 (bad) pushf mov or cmp out testl mov mov aas push xor push sub lea sahf ret add push add repz xchg iret mov inc pop mov cmpsb jo shll push mov add clc out xor xchg adc dec and jo jle push mov xchg out pop loope clc pop addb xor inc outsb (bad) sbb cltd inc mov (bad) jbe sub cmp ss mov enter (bad) dec sbb jbe and inc rclb out mov sub clc out xor inc mov add (bad) cmpsb out ficomp test dec inc stos scas imul or clc inc sahf xchg push mov mov scas xchg jo (bad) or inc arpl dec mov es shrb fmul fbld (bad) sar jle push add lds inc outsb sub cmp scas push scas repz scas jnp dec pusha sub mov es (bad) pop add push movsb mov dec mov add fiadd aam cmpsl and out sarb outsl inc rolb andnps push mov push push faddl push fistpl iret sti jmp xor inc push sbb pop push out fprem ret xchg jge ret inc xchg cmp fimull daa mov clc sbb test add add inc sub sub es (bad) out out add xlat outsl sbb mov decl mov lock add mov cwtl psrad out sahf push iretw push sub push push add jo je xor iret int push shll scas pop negb or push push mov into daa dec (bad) (bad) xor leave shll sbb add add adc js aam out pop add icebp jo loopne lahf push pop incl add (bad) loopne pop sti fadd mov adc xor ffree fdivrp faddp mov lahf sbb iret mov lock lcall lock push pop lret ror lcall adc push add dec pop aas in inc cs (bad) sub jns pop loopne sub in add pop push mov pop pop sbb cs dec push add ud1 in dec pop aas jg cltd inc incl pop lock cld repnz cmp movsb psubb (bad) and das insl inc pop fcomps pop stos fcoml dec jb mov aas sub bound cmpsb inc xor mov (bad) mov popa and mov cmp sbb pop or outsb jmp out adc aaa sahf add push or or scas xchg xor xchg mov sub and dec sub cmp push jle mov cmpsb jo jbe dec inc insl push sbb (bad) xor (bad) dec scas aaa and xor push xor mov push pop mov ja inc or out cli data16 fisub mov or std pushl inc push sub iret dec and rolb adc adc ret inc xchg mov push test insl jge jp and pop cmp (bad) xor cli outsl adc pop mov pop push aaa daa pop mov (bad) aas rol xchg cmp outsb adc add lods je pop dec loop out xchg scas test movsb jnp outsb pop shrb dec cmp (bad) mov mov cmpsb divl jl decl fisubr push add inc mov pop and cmp push cmovne iret push xchg (bad) pop xchg pop push sahf xor mov and jbe adc add stos xchg cli xlat mov pop mov out rolb lret inc or (bad) mov xor out scas mov stos inc cltd js je mov pop dec (bad) sub pop xor mov in xor push mov dec mov (bad) sub dec shrb add lods push and js jge (bad) or sbb pop adc movsl aam xchg cmc in into rcl cs fistpl popa pop rol into enter mov (bad) push jnp test push outsb test xchg mov or push test mov scas pop aas add push xor adc ss xor push scas xchg sbb scas jp or add mov sbb adc adc pop push jne incl loopne scas push sahf repz mov mov mov push test xchg add pop push outsb scas push add ds push push call sbb cmpsb xchg (bad) fldenv mov or mov repnz add mov imul push shrl mov push sar cmp pop out and scas in mov iret mov (bad) push add incb pop cmp out pushf xchg test pop push mov scas cmpsl mov push adc (bad) ss popa inc test pop (bad) xchg imul js out jmp test loopne push mov insl mov push add (bad) popf out mov lgs gs movsb nop push mov cltd push or (bad) popf (bad) out inc inc pop adc adc sub (bad) lods mov enter (bad) pop mov adc test test add sub testb icebp stc mov ss push divb mov jne movsb mov pop cmp dec and push pop push pop inc or scas test es mov lods in (bad) mov cs pop mov fnop pop ja pop adc pop sub mov lods push loope pusha sbb sub push xchg jl jp or xchg scas out sbbl insl xchg testb aad (bad) jg loopne inc es in cmc mov (bad) mov lcall dec and inc je enter mov outsb arpl inc out mov jle js inc adc push movsb into je pop and shll sub cmpsl push jg (bad) xor cs xor adc and sar xor inc ret sbb inc jo sbb cmp mov fistp ret mov mov dec jbe (bad) push push pusha or js cmc andb out js push add xchg es lods sbb ret dec jp ds push adc lock mov push (bad) sbb mov xchg xchg data16 insb imull add sbb sub push (bad) pop add imul and bound cli insl out in jecxz mov mov mov lods scas or test repz stos mov in mov test add aad enter inc mov scas cmpsb pop mov arpl es sbb (bad) dec lea ja jbe pop lcall xor xchg xor lods xchg (bad) xchg xor pop sub sub cmp pop nop (bad) call addl int3 mov std loopne cs popa mov xchg xchg into arpl add push rcr call js (bad) repz outsb mov adc push imul frstor xchg jb aaa (bad) insl bound push repnz pop jge xor push and push xchg je ss (bad) movsb imul pop test inc movsl in sub or or inc inc sub stos rclb lods sbbb xchg mov aad cmp pushf cltd push ljmp cmpsl out lods jp out into loope outsb dec or cmpsl loope adc out (bad) inc ret lods dec pushw push mov lahf mov pop dec cmpsl popa sarl sub xchg mov shrb es inc clc push lea sahf lahf incb jl xor xchg adc iret cwtl sbb jne pop add add rolb pop imul xchg out addr16 mov dec into mov ss mov lret mov scas mov outsl (bad) mul push std call mov dec xchg push mulb cmc fsubs xchg push mov xchg jne (bad) insl out ljmp sbbl jge jecxz push imul pop add mov js (bad) mov pusha adc pop mov inc and cmpsl imul adc rol sbb je cmp (bad) fs xchg or (bad) xchg ja jmp out mov xchg jmp adc mov xchg jge sbb imul out cli (bad) icebp idiv lods jl roll out push mov leave fcmovb scas mov push hlt scas (bad) ss xchg jbe xchg jns (bad) outsb mov push xor ja or ret mov xchg and pop dec mov pop pop mov push push scas notl scas pop (bad) mov pop into mov test mov into loope mov pop daa scas (bad) mov pop push inc pop adc mul in or fcomip aad subb scas stos jp (bad) popa movb xor sahf jnp adc movsb jo cwtl jns lret sbb xchg mov fsubl stos rcrw rcr (bad) lds (bad) inc xchg mov jp mov imul (bad) iret and pop dec int dec movzwl jg push dec push sahf jge add test jmp sub imul fsubrp sysenter cmc push mov movsb outsb mov ja pop push inc mov (bad) loopne ret in lock fisttpl mov lea test xor push lods data16 jle jle mov test inc les (bad) ss jae push js jp or int (bad) out dec pop lahf push mov pop bnd dec sub sbb jmp adc add fistp xor push adc add and test loop lret into inc pop loope in mov mov movsb mov into pop dec imul fdivrp rcll faddl cmpsl into mov pop (bad) pop ds imul and (bad) (bad) inc pop pop dec mov incb push flds cmp or or sahf xchg cwtl addb fidivrl mov cmp push or roll push cs cmpsb sub out into jns push dec mov add ljmp adc xchg push cmpsb nop (bad) xchg jns (bad) sarb fwait xchg and cmp add push pop xor push cmp (bad) push enter lods sub rcrl or xor insb movntps xchg jns bound xor inc das das push or out das sub imul sbb lar ja xchg mov loopne fstpl adc pusha jmp loopne jmp scas (bad) aam sub (bad) jne mov pop pop lcall in (bad) out shlb es arpl das adc push arpl push fstl jle xchg sarb adcl mov cmp adc mov popf and sbb outsl insl xchg inc add sbb add pop outsl xor mov or and cmp sbb shrl jge mov fdivp dec ljmp jmp dec sub js push sub sub add (bad) fnstsw ror mov (bad) pop cmpsl push push insl lea out shrb mov pusha lods es fwait js (bad) pop lock pop stos icebp sub push mov xchg and popa out sarb iret ret add push aaa xchg pop ficomp inc dec inc xchg loope sar call (bad) loope mov mov xlat push iret mov xor nopl mov loop imul cs ror pop push (bad) pop (bad) pop cmp (bad) push fwait sub push cmpsl sbb cmp out das mov pushf push rolb iret pop outsl dec sbb jmp add outsb cld data16 sbb adc xchg (bad) push and and pusha cltd cmp fbld ja or pop add adc cmc movsl mov lock enter xlat movsb xchg pop or xchg adc and inc push fimull dec (bad) lcall (bad) call aam test test scas mov ss dec xor test push pop popa add mov inc loopne pop sub xchg out mov xchg (bad) pop loopne adc movsb pop cmp ss pop dec sbb (bad) push sub and or rol cli mov aas out sub dec mov lahf add add inc adc jle aas ja roll js popf loop cmc cli (bad) aad push pusha loope jbe pop movsl das sub (bad) call call xor and adc push xchg xchg mov fadds sbb mov mov loope es inc ret add ss js incb daa rcrb and and ljmp adc ret push call (bad) (bad) fildl dec adc pop adc sbb into into add inc or sahf push out lcall sti sbb imul shll into xchg js jl add push push popa dec sbb jle xchg pop out ss jns ljmp out adc jne lret fnstcw adc addr16 dec sub pop push or inc sbb pop in mov fxch int (bad) add pop pop (bad) lret mov dec aas xchg lldt sub notl adc mov cmp mov cmp jo out jmp fbstp (bad) (bad) mov inc je jb ljmp in loope xlat mov xchg mov jle push cmp jle es pop cmpsl sbb pop push pop push andb push fbld pop das add dec pop push jbe sub mov xor and pop jmp outsl jmp loop lods cmp rcl cld fidiv sub and and xlat scas adc lock xor outsl dec pop push insb inc and pop daa adc fidivr stc pushf mov in not addr16 dec inc mov outsb call or jmp inc outsb mov inc cmpsb lret mov push sub (bad) sub inc and into push mov outsb cmc jno and mov inc cmpsl and ljmp lds (bad) jnp adc cmpsl (bad) pop cmp scas aam adc es sahf xchg mov jle mov mov out cld and cmpsb movsl es ret inc mov lahf outsb mov inc xchg xchg aaa test xor fwait mov aas fistpll data16 roll push jle push sbb (bad) ds (bad) xor sub shlb or jle lret (bad) fdivrp mov adc pusha (bad) mov (bad) pop (bad) iret aam jle,pn mov jmp sahf iret fst int3 aas push or dec scas inc jmp jmp loope mov outsb scas mov dec out test jp xlat cmpsb (bad) mov cwtl jl aaa (bad) fwait mov sahf sub push push (bad) popa out into push mov dec jmp icebp ret daa xchg mov aas notl idivb sub pop (bad) and (bad) lret (bad) push rorb add addr16 iret pop pop daa mov loope and xchg scas xchg test lds or movl incl mov mov lret add push xor es sbb aad jnp out push mov outsb jnp shrd mov xor jl,pt sahf (bad) push pop cmpsb pop cmp daa pop (bad) das sbb xchg and enter fldcw mov outsb push je dec jle aaa gs push out (bad) test sbb lahf (bad) xchg scas (bad) arpl incl idiv std fdivs (bad) insl inc xor aaa adc push adc loope out in aad add gs mov imul into jle fdivrs pop jae xor jmp imulb and dec movsl push (bad) aam pop je icebp mov mov movsl into insl push cmp adc jg lret in fmull xlat mov js xchg mov ja adc or inc mov or popa cmp pop lret jo mov cmpsl jno (bad) mov sbb mov push inc out push nop push and mov add push ss cmc add and add leave mov and push imul call mov add std aaa jnp cmp (bad) mov imul dec inc inc call mov sbbl jp pop aaa mov inc jo ret push xor pop and leave mov loopne mov lods push fdivrp dec dec daa into mov inc sub into xchg jae fild adc (bad) jne int push push add add cmpsb mov imul or int3 (bad) mov cmpsb push jne scas lea push aaa mov out (bad) imul mov popa inc cs and or pop xchg aam (bad) mov (bad) xchg pop idiv movsl ljmp sahf fsubrs dec dec imul pop scas outsl dec lock daa jle inc iret sub pop add loopne sbb lcall push ficompl jo jnp fsin das sub mov dec lods xchg (bad) mov adc shl push lods dec push (bad) into pop inc ja add ss lea loopne or push stos dec pop pop jle pop mov xlat adc push pop imul out mull jmp cli jo mov aam mov jl and pop scas orb adc dec aam (bad) leave (bad) ret (bad) mov pop mov andb pop mov push ficoml adcb or adc sub lods add idiv into ret shl adc lret (bad) push mov es (bad) ficomp xor mov push ss insb pusha adc imul daa aad or pop lahf mov in cmc das out and int xchg mov ljmp sbb ret lcall inc out sbb stos shufps sub push push xor mov sbb int pop in inc sbb xor or mov das (bad) adc mov cld push add adc mov test mov xlat test enter cs mov xchg jle aad fistl jne cli (bad) push fild add testb mov cli js inc (bad) (bad) pop aaa pop inc fsubr xchg data16 push mov scas loop nop mov push jbe ret stos dec fist loopne dec rcr jle pop repz and xor (bad) jl std das hlt ret mov (bad) out popf popf jae sub push adc push mov test pop inc jg js mov cli push ds mov jbe xchg xor fnstsw in mov daa dec pop dec loope cmpsb mov fs stos es adc push mov pop sbb pop add or test xchg xchg imul xor (bad) or stc les push add xchg nop add mov (bad) push imul mov mov fsubl push jno out in inc bound jne xlat pop fisubrl dec xor pop das aam cmpsl jmp mov scas inc aad mov inc dec in xchg incb add inc push xchg push pop (bad) out sub xlat gs cmpl test inc loop adc bnd mov out lcall cs pop dec jge add aam jg mov ljmp (bad) mul movsb xchg or setb flds daa inc lock gs std rcll cmp push test mov daa mov lods (bad) bound jg adc lret stc mov divb sub testl ficoml xchg sbb bound pop push xlat outsb mov rcrb js sbb push jp nop mov aas (bad) leave pop or pop mov add lds (bad) cmpsb fisub mov xchg mov test aas lods push fs insl and jo sub mov lret jmp lcall and aad inc sub jg cli sarl mov fld (bad) jbe iret sti xchg adc data16 add iret aas je cs fsubr in out icebp cli stos clc movsb jmp out jmp dec pop outsb outsb pop aam add fwait out sbb (bad) frstor fs lahf cmpl out ret stos jle push mov inc push scas insl (bad) or push aaa inc pop int or jge,pt cmp (bad) mov xor adc or and (bad) in ret fcmovb roll divb (bad) dec adc lods ss loope (bad) xlat mov in clc stc stc pop or stos fiaddl push imul (bad) mov icebp xchg xor out mov mov jmp icebp dec inc clc pop (bad) std cmc xchg jl mov xchg inc mov jle dec sub xlat or aas jne loopne daa inc faddp test pop cmp push mov cmpsb shrb scas xchg daa sbb ficompl ret push loop pop dec iret fs adc inc jge sub loope iret jo pop int3 xchg cs xchg pop cmp rcl (bad) outsb popf movsb mov es mov push out icebp xchg xor pop iret push es jne int3 mov xchg (bad) icebp stc ljmp ljmp add or outsb nop pop cmp sbb cmpsb loop loop push mov push mov mov (bad) sub push sbb iret call shrb adc jle dec cmp mov mov aad mov mov ljmp out lods hlt adc pop outsb and and dec fild push stos outsb outsl lret mov shr mov pusha sub mov push mov js ljmp sbbb dec push inc fisttpl push ja,pt jo movsb cmpsb fidivl xchg scas mov fsubrl mov inc ret xor add add push (bad) out lahf inc adc dec mov push add push mov pop push and in loop push sub fisttp and fistl jmp rclb and std pop dec (bad) fildl iret outsb push ljmp dec mov negb cmc dec insl cmpsb in aaa jb,pn mov out jecxz pop jne xor inc or adc inc mov mov mov int mov clc adc or cmp and jecxz mov (bad) faddl inc adc imul (bad) lret xlat scas test push daa test test enter cli pop decb add loop imul pop aaa (bad) xchg adc jge (bad) and mov cmp fidivr mov movd push mov mov mov sbb and out inc insl jg dec faddp mov xor push sahf inc stos jae push sarb mov dec fbld adc mulb or loopne mov (bad) push enter adc in loop aam mov or (bad) jne mov add scas outsl push dec imul das adc push rclb fidiv sub fs xchg daa lods add sub add popa dec push jp js push ss pop pop scas outsb mov scas aam cmpsl dec shrb call addr16 fisubr andl test aaa fildll out lahf add mov mov mov es adc inc mov addr16 sub xchg popa popf inc pop out sbb mov lock pop daa jo mov mov pusha loopne adc push lods daa or into push movsl ja shrb sahf pop fisubl jmp rdpmc je dec out xchg ret testb dec xchg jb (bad) iret mov loopne jno,pn cmp xlat (bad) mov (bad) add mov (bad) (bad) mov pop clc outsl imul fdivrl out mov clc sbb jecxz (bad) repz add sahf (bad) pop xchg fwait (bad) cs push add (bad) movsb mov and pop inc dec ret cmovle push outsb sbb fs adc sub aas sub iret daa and (bad) inc push mov ss subl nop jle lock add xchg jp mov sar sub mul jg (bad) imul add leave sar xchg inc nop test add decb div mov subl xor fiadd fbld (bad) push ret js mov enter ja cmpsb cwtl pop cmp lods sbb lock mov add push pushf subb mov sar push lcall mov adc (bad) ds popa cmp mov aam fbstp rclb pmuludq or mov inc jmp loop mov fdivrp add adc (bad) (bad) out and cmpsl loopne rorl scas ficom push sub gs decl xchg mov pop in mov lret xorl out pop pop mov fist add ljmp push jmp jg test (bad) ss cmp push (bad) das adc lds (bad) jecxz xchg xchg cmpsb dec (bad) lret (bad) loop outsb loop cmpsb lea mov pop decl in cmp jmp nop in movsl fwait or lods imul xor or sbb push jg mov mov pop ret das cmpsb xor sbb jo stos pop lock adc lock clc push cmp iret cmpsb je,pt xor sub fwait ja sub cmpsb (bad) cmp ds jp inc jp scas mov dec (bad) fdivrs popa jmp push mov int movsb lock pop fwait test sub sbb xchg cld daa mov hlt out in sti out mul scas push test hlt inc mov pop dec rolb jnp test inc push push mov mov (bad) (bad) les andb push sub out rcll push xchg daa mov scas mov pop push push push clc pop mov dec mov add add (bad) repz sarl inc inc or dec adc das rolb out jno in loopne es cli hlt loopne and lret addr16 cs cltd cli cmp aas push xchg icebp test lods lock mov add mov cmpsb xlat jbe or push ss (bad) xchg add in (bad) fisub pop add adc mov rcl rol sti ljmp (bad) loopne sarb or je mov out inc es std xlat (bad) mov ds lods push (bad) imulb xlat jle mov mov xchg add orl cmp (bad) pop insl loopne cmpsb mov (bad) and mov (bad) rcll adc pop cmpsb pop cmp cmpsb fidivr mov add out call add in aam mov lret pop and pop shr fdivs and fdivrs ret (bad) stos sbb aad mov daa (bad) mov rclb lods pop xor inc loop dec mov xchg neg fwait jp testb push or leave mov outsb sarb sete mov test out repnz add sbb aam outsb lock push dec cli inc mov push sub lods cwtl (bad) insl sahf dec and test mov aaa add (bad) (bad) jle adc cmovno (bad) push es mov rorb outsb push es sti ljmp inc push std add neg (bad) in ljmp sahf aas push nop rolb or inc xchg into push push cmpsl cmc adc xlat push int inc rclb aad or test jmp pop (bad) scas cwtl mov fadd mov jmp (bad) cmc fadd into out movsb inc mov inc xchg sbb cmpsl sbb or dec lock nop test movsl cs mov (bad) pop mov inc cmpsb cmpsb (bad) movsl or fucomip mov mov (bad) mov aad aad test aas mov cmc rorb push jle clc mov scas push or les mov daa lret loopne and std loope add or sub jmp pop and (bad) enter (bad) iret leave out push pop inc test cmpsl sub jg inc neg ret fadd es test sub (bad) xor and clc fiadd dec outsl sbb imul add mov enter pop popl lock loopne inc es rolb inc and rol lsl leave leave leave test pop aas xor enter incl adc das pop pop jnp movsl mov lds cmp adc jg sbb push mov jb add and cmpsl in dec xor cmp in and mov adc sbb mov adc or lahf or pop out lea sub or mov shlb mov cltd adc sbb jge push js pop divb dec les mov pop or pop ja sub sti aaa push sub lods incb inc mov adc call cli lahf xchg sarb jmp ja stc lahf jb std nop gs (bad) decl xchg cld insl inc sub dec and jecxz adc enter outsl shrl push out inc push sbb pop xorb addr16 addb imul inc sub or test outsl fadd neg sub mov (bad) dec into mov adc es mov inc idivb xchg ja xchg and xor or insl or bound mov adc sub cltd inc decl add (bad) out imul cld test fstl loope or push stos nop xchg test mov xchg jno lods (bad) scas mov ja mov movsb aaa adc xchg jl scas popa sub in add xchg jbe xchg sbb test add add or inc mull arpl pop incl push ds fmul (bad) out stos nop cmp mov scas roll pushf mov int jno pop mov jae ds (bad) cmp cs sub fildl mov cld jb jge es mov add jns fist add orl ficom add (bad) mov xchg out int3 jbe add mov call (bad) push mov push shrb mov cs loope ss ret xchg je fldl sub mov insb fiadd hlt or jp pop (bad) ret inc stos mov or out mov es push adc leave mov outsb call stos mov arpl lods pop jg xor stc idiv jg hlt or push int rorb das and ss mov push cmpsw jge pop gs jbe xchg jbe repz sbb (bad) xor out mov sub xchg or mov push push or (bad) sub out xor mov (bad) mov jp xchg shl add sahf aad dec rcl in jmp out std or into xchg aam fwait xchg shlb outsl (bad) (bad) xor lret push push inc cmc nop jbe cmp mov fisttpll jp mov in test push or dec daa sub sub push das jle adc adc das ss (bad) fs aad ror xchg sbb jbe sub gs in into call jle out mov movl test mov add inc sub cmpb and mov pop lods jbe imul loopne add adcl aas mov or sub push xchg jle outsb (bad) jle inc pop mov (bad) mov mov movsl or (bad) out rcl adc loop xchg popa loope push push jg rolb inc faddl add sbb xchg sahf xchg cs add cli pop and pop std cmp push (bad) push push shrb (bad) idivl xor sbb sub adc mov das rolb add jg push xchg out mov mov sbb push lds dec call mov add push cs mov inc mov sub add (bad) mov push dec test adc pusha inc xlat roll pusha jle mov arpl mov push or xchg outsb ja sbb aaa sub aaa push pushf rclb push jbe or sub push jbe cltd xchg js sti loopne inc call jecxz daa out pusha push sbb int ja xchg cvttps2pi int adc insb dec js or cmpsl push mov xchg pop gs push les scas mov pop mov ds inc ss out mov xchg and es mov mov adc pop cwtl or test xor xchg jp aad test je dec loop call or (bad) mov xchg mov sbb ljmp lret stos xchg bound inc add add rclb popa outsb inc dec sbb les stos mov in xchg push push iret repz xor ss inc (bad) fistpl dec add and or mov mov call or loop,pt ret ss fnstsw popa addl mov jns movsl (bad) fsubp jg stos sub inc test scas cltd push ret lahf pop push pop mov jle ja pop inc lahf push mov jo int3 je push and or mov inc lcall sub inc pop mov iret das push inc sbb out sbb cwtl dec dec ss xchg loopne into clc sbb adc scas in lret mov sysret pop mov push pop and jle out loopne adc pop leave test je jle inc pop ja xor adc ds adc mov push rclb pop inc shrl push clc push and rorb fwait inc jae pop notb xor pop adc ret pop mov push mov aam pop lock xor jbe stos xchg mov test or lahf das jle pop inc rcrl test inc jg insl sub mov push (bad) rcrb jecxz (bad) fcompl leave mov adc lods movsb inc rolb sub in inc dec iret and and fwait rcr inc popl out data16 mov push shr insb push and adc lcall sbb fiaddl push add loope cld jg jle popa or sbb dec push inc out push sbb mov lcall mov jno fisubl add inc push es dec or sbb (bad) xchg mov into mov shrb movsb outsl inc test int mov not mov out outsb push lcall and cbtw arpl adc outsl xchg out pop inc push sbb lret or push nop and fcompl mov dec iret pop lds xlat xchg push cwtl mov mov adc adc cli fisub mov mov idivb fdivs out mov out ljmp into xchg lock stos negb (bad) xor das add outsb and xchg shrb push xchg test rcrb mov mov frstor jmp pop push gs xor test outsb and ret jg mov fisubr nop (bad) (bad) int3 sar test neg pop test stos xchg lods mov xchg xor int lcall sbb inc into daa inc stos or adc push adc mov jb jno sbb movsb pop (bad) aaa (bad) paddd mov (bad) mov xor movb pusha push dec jg lods sbb aas jg sbb lock mov out jecxz push lcall sub jbe fwait enter inc daa cmpsl iret (bad) into les (bad) aas rcrl out mov test (bad) and rcll and mov add lods pusha mov mov daa pop and lods dec lahf inc adc add pusha jg out fwait iret or stos outsb dec pop cmp cmp jg xchg int3 add push xchg (bad) cmp xor (bad) arpl mov mov pop icebp inc rcll repz fimul pop jle fwait mov loope jo out outsl rorb sbb scas fmul scas mov test ljmp cmp adc adc (bad) fcmovu mov negl js xchg loopne jecxz out test pop jg push sub es add mov inc cltd mov jg mov rolb (bad) mov mov mov pop xorb xchg pusha jg,pt jmp cmpsl test lahf ss pop xchg xor xchg xchg inc xchg sbb out push pop lock pop ss jle,pn sub xchg xchg cmpsl and or int or lock mov cwtl test aaa mov push push test dec dec mov cmpsl aaa push cmpsb lock jmp das call push cmp push pop scas cmp sub xchg mov xor mov scas cmp add xchg adc pop push clc dec sarb lret out ret mov xchg mov fdiv into lcall jo pop notl daa or inc lods pop rcrb neg sub pop (bad) jg inc mov cltd pop aaa outsb aas lods les outsl xchg lret pop ljmp sub aad pop mov cmpb pop sbb inc mov fistpll lahf lcall and ret test inc mov popf push lahf (bad) ja outsl sbb inc movsl adc pop cmp or add iret ret inc popa dec add les (bad) fcoms stos or incl pop and ficompl data16 lret sbb push sbb cld pop pop pop jg lds leave fiaddl pusha inc jl mov jg dec or mov mov sub jg lock outsb and daa out jo mov (bad) mov lea lods push pushf lcall daa mov popa les call inc les fadds or or jg sub in sub inc xchg mov das out lcall aam addr16 jmp ja pop ret mov js into loope or cmpsl arpl fisub test outsl push push sbb mov movl int xchg (bad) inc jl loop cmp cmp or or ljmp orb test loope mov fmull push outsl push cmp cmpsl outsl pop mov (bad) push pop inc xchg movsb jle roll (bad) pop fucom call push aaa add and xchg aaa xlat das outsb popa imul mov or and and mov or ds xlat imul call push jmp inc sub cld jg loope testl loopne (bad) repz cmp jp,pn or scas push nop mov ret adc scas imul inc outsb movb add xchg test mov out sub jmp hlt in jmp movsb out arpl or ds ret pop pop (bad) inc jmp jo test sbbl dec sub mov idivl repz inc test cld iret mov sub aas outsl pop dec mov xor xlat cmpsb fnstsw out hlt div inc mov ja and aas push pop cmpsl icebp movsl mov pop ffree int3 and ja ds insl xor stos pop sbb xchg cmpsw push (bad) push xor cmp scas mov mov pop std shrl push dec add movlhps jg ret fmulp enter insb jecxz inc out mov jge rcr addr16 in into std dec cmpsb shrb cs pop lods adc inc pop testb xchg je push aaa hlt and or (bad) out mov loope (bad) scas stos ficompl shr movsb (bad) and pop jl cltd es jle das (bad) (bad) idivb std mov cmp arpl inc call jg or push rcrb jmp push (bad) mov call rol push push xchg inc je push or push bswap xchg ss xsha1 cmpsb mov jmp cmpsl loop jecxz jmp cltd test ret gs imul cs push aam outsb mov mov or mov test sahf sub fcoml xor pop loopne push loop fsts imul fimul add add je pop and mov data16 adc jle adc out idiv imul test dec fisttpll cmpsb lahf in xorb dec lods jne jecxz inc inc mov cmc add add xor out in push pop (bad) xor mull loope mov test xor je aaa lahf add add mov decl xchg pusha inc cmpsb shrb repnz stc in out mov cmp lcall sbb mov pushf or pop in mov or cld mov adc scas call add movsb out push xor test aaa xchg outsb out add imul cs aam mov fdivrp xchg lock mov dec sti (bad) je js out ret stos mov in fild mov addr16 repz pop out xchg movsb push aaa lahf bound push xlat pop inc mov out jg mov inc inc inc icebp test outsb add mov dec out (bad) mov loop jp outsl jg inc or cmc (bad) mov roll or sarb xchg fs sub push sub or push push dec adc sbb push or outsl loop jno andl mov and dec arpl fsubp ret mov lahf jbe sbb dec and sarl push inc xchg add ljmp mov jg movsb mov (bad) push mov stos xchg pop lcall pop sbb hlt xchg xchg jbe out shrl out push adc (bad) in lret out sahf xor scas test mov (bad) icebp call adc daa enter pop sub andl test push lcall popl xchg es mov pop dec std fidivr xchg or add mov push or sbb call out fisubl scas outsb jnp xor xor ss pop pop inc sbb outsl pop mov push push inc cmpsb mov jmp (bad) lock add cmc fcmovnb ljmp mov inc xchg (bad) mov jno or cmp hlt mov rcrl gs daa (bad) xor les aaa es jecxz ss mov loop fadd out sarl cwtl shlb xchg sbb cmpsb mov (bad) stos out call xchg fcmovne ljmp mov push sahf push xchg mov push movlhps lods cwtl add or jp out mov (bad) push clc mov into lods fwait adc or push out mulb lods pop (bad) repz movsl xchg mov pop aam cmpsb dec rorl in aam stc add lods (bad) mov push adc test add loopne data16 je ljmp dec ljmp std ffree add dec loopne std loop xlat jg subl lret cwtl mov push arpl ds cwtl sbb mov aas scas pop pop js ret out femms lock insl push ret pop (bad) bswap insl pusha push lock pop lsl jb xor add sbb addb cs add cmovb dec pop pop jg xor cwtl loopne pop jo cmp sarb fs scas add scas in sub aas movd mov inc and sub sbb sbb stos test push inc mov out cmp push mov addl cmp cltd adc iret add adc adcb pop pop sbb add (bad) decl fist cmp push mov shll push sbb inc cmpsl push mov sahf push or cmp cltd lcall push sarb cmp scas inc cmpsl loop gs sahf push jle cmp ds or mov subl xchg dec sahf or push lock pop push mov jle lcall lahf xor stos inc xchg xor pop dec add movsb fs fwait mov clc sub cmp inc sub sbb cwtl lock test push push test mov or adc sbb jmp inc mov fistpll push xchg jne inc mov (bad) inc xor inc pop pop insb mov mov push push fisubr les push xchg xor outsb adc rcrl dec jmp push adc mov fcmovu scas pop push cmpsl lea dec mov lret cmpsl fs mov imul add mov mov adcb outsb sub add mov bound add fmull jmp enter mov pop push ds cld mov dec mov add xchg jae cmp add push xor es pusha es push mov dec pop or inc sub mov and lcall mov outsl ret cs popf (bad) mov inc rol cmpsb push mov xchg les insb ds pop mov outsb inc push pop and push jno movsb sub mov xchg adc (bad) sbb fistp push xor mov hlt inc add ja test push cli outsb cmpsl mov (bad) mov or nop mov push xchg push rolb mov loope daa jo xchg out pop movb pop jmp pop pop out push js push mov dec imul xchg mov es mov jne out lahf xchg es inc pop aam fidivr xchg jno jl mov adc sbb or repnz outsl and or iret push sbb mov pop gs out ds sahf xchg fbld dec (bad) (bad) mov add aaa aad sub push and pop inc xchg out xchg movsb add fidiv fwait push add ljmp adc cmp or inc pop xlat mov mov mov es jl xor mov add popa inc js andb xor test shlb fdivl incl cmp push mov sub push push pop scas lahf popf add mov int mov mov inc (bad) ds pushl xor xchg jge dec add add jp xor iret in dec mov sub insl sub scas lahf add fmul add jne (bad) (bad) ret les lret pop and idiv mov xor loopne xchg jnp push sub jbe push cld sbb movsl pop inc sahf sub ja pop ja ret rolb lahf in ss (bad) mov fwait pop cmp clc fild inc sub mov inc stos sub std add xor or loop mov adc (bad) mov cmp jbe pop xor aas xchg xchg sub push or and and mov mov mov rcll add mov mov dec mov aaa pop or push lock mov ret loopne xchg xchg xlat fchs ljmp dec (bad) lahf pop xor jl daa int3 xchg insb outsb dec lds and es or mov or add mov mov sbb mov mov stos xor test aad daa (bad) mov push xchg bound pop cs dec jg mov ret dec iret push or adc pop dec ds adc or fnstcw mov xchg add push shrl scas sarb xor daa or leave movsb xchg fimull xor push das cs cmpsb sbb (bad) inc jo (bad) (bad) jg test add dec push fistpll lcall js rorb scas (bad) fimul in out push add aam (bad) mov pop jmp xlat mov into cmpsl popa popfw adc xor mov or ja mov dec fisubr ud2 or or fldt fdivrl popa cmpsb push push xchg mov popa xor icebp repz shlb imul loopne jmp aaa (bad) fcmovnb mov and or push aas mov pop xchg dec sub outsl dec out or out or out (bad) push idiv div or mov arpl lret mov test test xchg test pop imull lods shrb scas xchg pusha aas fisubr cwtl sub mov xor testb fisttp mov jb (bad) mov dec jmp rcl scas add (bad) clc div push jecxz pop fsubr iret mov call add mov sbb pop (bad) dec aam push jae cs scas xchg ud2 call lret dec je outsl jg (bad) std xchg add mov int3 ljmp mov int3 (bad) jecxz sbbb pop fnop enter test mov add clc xchg mov (bad) mov add (bad) mov (bad) lods js cld mov push repz xchg les sbb jmp push push test mov das inc inc pop (bad) dec test movb cmpsb sbb mov pop rep test mov scas inc dec data16 push addb inc aas push scas sub incl dec pop dec mov mov and lds push js shlb pop push jbe push sbb rorb adc pop and (bad) loopne mov sub mov cltd lds add mov pop push cmp mov gs enter lds jmp das outsb les out mov out out xlat dec es mov dec iret mov and es jecxz fisttpl ds xchg (bad) addr16 and int lahf movsb xchg incb call inc fcmovnb jno mov push rorl sub in xlat lds jnp mov leave clc shr out out inc xchg sub push and fcmovnu dec mov mov sarl mov imul rolb or inc outsb ss add rorb test popa lret addb push testb addb push test xchg in cmpb fcmovb cmpps sbb sbb pusha mov adc pop cwtl (bad) je pop cmp cmpsb jbe scas add inc pop aam mov push adc (bad) sbb and mov xchg ja lods subl jae stc xchg addr16 stc pop xor stc (bad) and add adc cmp push imul pop outsb sbb push lods icebp loope (bad) fdecstp lods dec mov data16 pusha ret pop out mov (bad) das movsb pop jge sub sbb dec mov push pop call ss mov mov mov loopne add lcall les or jg pop aad arpl cwtl shlb push out and test mov popf and jmp test mov push aas push push hlt push dec pop mov dec (bad) out sahf inc cltd mov stos push adc aad jg or push (bad) in in scas lret rol mov flds inc aad (bad) sbb mov dec push mov or mov pop or ss or xchg push sbb xchg sahf and clc iret rol in data16 popf xchg pop std out sub (bad) movsb jne pop lahf jne sub mov shrb sahf aas adc ss xchg jp pop sahf and mov das outsl dec inc pushf jmp out dec lods movsl (bad) es jne (bad) pop pop mov add mov mov pop inc dec jle xchg jae imul (bad) lds inc dec jle (bad) xchg adc adc loop subb lret rol xor add les push mov and das mov mov jbe xor xchg xor mov or lea sahf cmp or inc mov cmpsb js loopne xchg test dec mov push sbb sarl mov ret mov xchg inc outsl inc roll pop push xor push mov adc mov repnz enter mov mov imul (bad) out pop int sarb push lock xorl adc push push and (bad) inc jg test mov lahf push mov or das lods push mov lods jg lcall push sub ret incl mov call and push xchg out hlt xchg mov dec sahf lds inc ss sub movsb push popa (bad) ds fsubrs sarl push dec sbb mov xor mov (bad) jecxz ds jne xchg scas outsl inc and sbb add mov scas popf xorl cmpsb pop mov cmpsb scas outsb mov mov jg push mov pop lcall loop mov sub mov jne add adc adc into in loop mov (bad) xor and mov lahf insl pop dec xor mov lea add xlat ret shll pop in lfs pop test inc outsl test fistp and faddp (bad) in aam fst (bad) (bad) inc lods xorl push (bad) pop fcmovnb mov lock mov out rolb stc ljmp (bad) cmc out repz mov jne aaa push mov and sbb (bad) shr movsb mov orl aas jo mov push add pop (bad) out ret popf mov mov test not inc les das adc mov movsb xchg in mov rcl lcall out dec pop (bad) scas inc es scas jecxz mov mov lret mov and mov add test movsl ljmp inc sub stc loope lods clc ffree in pop add sub or adc add ss mov stc sbb add rclb pop add pop push setge xor ret add inc sub push adc inc jns cmpsb sbb and push cwtl xor stos cmp add aaa cmp push cli push mov sub pop xchg pop mov outsb xchg outsl pop (bad) ja and push inc popa or ja or jno fs xchg xchg sahf push mov xchg sahf jbe xor ret and xchg sbb or push cmp lret mov mov mov jbe sbb mov mov ljmp mov adc pop aad mov add jle inc sub mov xchg push andl push add sbb (bad) sub ja les arpl clc ret (bad) divl adcl imul incl adc xchg outsb clc gs inc cld xor or sub pop loopne iret mov and (bad) sahf pop jg (bad) pop and popw divl xchg insl sti xor push and jb ds push xchg jg andb ret rcl or sbb into jg loopne fcos imul pop mulb jg scas sub data16 out outsl pop out fistpll sub fnsave sbbl inc sbb add shl push incl imul imul mov xchg orb or add sbb cwtl pop cmp jg inc ds mov add outsl xor mov xlat gs cmpsb xlat ficom icebp pop ds add imul cs xor inc push sahf loopne inc (bad) sub pushl (bad) aad or (bad) mov ss dec aad push scas ja sbb and xchg jno lret mov lahf stc in movsl jl in mov flds pop xchg jne shlb movsl out mov dec aas xchg (bad) incl or cs loopne test fprem fld push insl cmp jne dec pop lock cmpsb xchg lret mov cmpsl sbb rorb clc andb out and ret (bad) (bad) ljmp inc or mov push icebp and push mov cmpsl mov jg (bad) jge shr clc ja je leave sbb cmc mov jns push add ds xor cmpsb (bad) (bad) (bad) cmp pop add push out ds dec pop mov sbb and (bad) (bad) jns aaa pop adc push and jecxz into sar fimull inc xchg mov hlt (bad) sub (bad) (bad) (bad) jmp cmp jmp push sbb adc dec test cli or test pop dec pop (bad) (bad) (bad) (bad) dec cmc sub (bad) push mov dec dec xor push jecxz mov or sbb mov pop aaa mov adc cmc outsb sub mov xchg pop (bad) (bad) lcall pop mov mov add xor mov mov (bad) (bad) call cmp add fwait mov leave rcl jae in mov lock jl (bad) (bad) (bad) call outsl mov mov pushf xchg sub (bad) jecxz aad imul (bad) (bad) (bad) call fwait adc mov in add lret adc in xor pop push cmp (bad) decl hlt ret inc ret int add push xchg inc fstps and sub and dec inc sar ljmp push sti jb fldenv stc (bad) xor hlt (bad) (bad) (bad) jg icebp dec aad mov in sti and or (bad) leave es sub (bad) (bad) (bad) cmp ds sub push int stc inc repz mulb and psubusw mov sub ljmp xchg gs hlt or inc pop push out push jp cmp pop jmp gs dec jl bound outsl (bad) (bad) (bad) ljmp mov mov je lahf pushf cmp cmp div enter sub (bad) inc push test cltd inc push xor sub cmp mov addr16 cs (bad) (bad) incl fild pop shll (bad) out aad data16 lods fsubrs push fdiv sbb xor sbb je mov sbb std mov adc iret jne (bad) (bad) (bad) jmp rorb stos push cmp inc cmp or sub jg loop or mov or scas (bad) (bad) cld bound ret dec inc dec inc pop pushf out nop sbb xchg or orl call add imul push cmpsl (bad) xor sub cmp mov (bad) mov loop add stos adc in xchg insl imul (bad) (bad) ljmp or loope lods jge outsb les push cmp (bad) mov ret jae out clc (bad) inc loop rorl mov jnp popf aaa es inc das cmpsl sbb das lcall shlb cmp jp mov out xchg xchg std mov xchg test xchg and (bad) (bad) (bad) pushl mov leave negl data16 xor in sbb faddl xchg sub es (bad) (bad) ljmp out xchg push das and imul or mov adc (bad) (bad) (bad) decl sbb or incb mov pusha int3 cmp out sub sub dec adc push mov (bad) (bad) (bad) mov out movb popa pop decb add jbe mov jecxz (bad) lcall and test pop out xor xchg addb stc xor (bad) lcall add inc sbb xchg scas push (bad) jne inc pop fwait push int3 data16 jne aam and sbb pop ret jmp rolb bound mov (bad) je (bad) (bad) jmp mov insl push xor jnp or fcomip lcall and imul mov cs sbb movsb (bad) (bad) (bad) jmp and inc sbb pop fsubl sbb aad jl pop ljmp (bad) (bad) incl data16 and mov xchg inc adc cwtl out dec sbb jge sbb xchg mov xchg ljmp popf rcll sub lret dec popf movsl mov (bad) inc stos xor xchg mov insl popf add daa nop adc ljmp push in mulb fidivr jecxz xlat or repnz cld pop clc das shr and inc push sub or xchg (bad) and sub (bad) call lods sub scas lcall mov mov aaa adc movl xchg das imul outsb xchg add jb mov add adc mov dec mov (bad) pop and jmp lods push test jmp mov rolb (bad) (bad) (bad) decl fisub popf (bad) popa mov xchg add push aad testb push fs (bad) (bad) pushl dec jno and inc pop pop fwait mov xchg pop push insb js pop mov push or lea (bad) mov xchg in push lods cld lret pop xor lods imul mov jno addr16 pop imul outsb mov push loop jmp adc in (bad) (bad) (bad) (bad) cld insl or adc cmp jne imul xchg rolb mov mov decl pop addr16 mov lock xchg xchg int3 inc jnp rclb pop ds out rcr icebp (bad) (bad) fcomp test (bad) repz dec xchg stos inc int pop sbb (bad) (bad) (bad) (bad) jge jb mov out add pop into test inc jns cmc stos cmp (bad) (bad) (bad) lcall sub jg jle lods test inc and sti push cmpsl insb push jbe inc insl jmp (bad) lcall xchg adc imul sbb sbb (bad) (bad) (bad) mov or mov ja enter in lds fs push jg (bad) (bad) (bad) (bad) out sbb lds cmp pop jmp mov jns or cli xchg (bad) (bad) (bad) incl inc (bad) xchg sbb adc mov orl ffree jl out (bad) (bad) in dec add addl push add out mov daa xlat fcmovnb fwait cld (bad) (bad) call adc xchg int sarb fidiv lods int fmull int outsl pop or pusha ret (bad) call test outsl jmp test jnp adcb mov push jecxz xchg jle (bad) (bad) jmp cmpsb push xchg insb out in cltd out adc xchg pop and cmc sbb push loope js sahf hlt clc (bad) (bad) (bad) incl add mov (bad) cmpsl pop xchg lcall sub fucomip call add aas (bad) negb insl xor loop mov mov fsubrs idiv (bad) (bad) ljmp cld xchg push fidivrl fs sbb adc and aas mov mov (bad) aas lret push jns iret addr16 sub cltd add xchg dec mov outsb das iret js add or (bad) (bad) dec cmp fyl2xp1 and stos push int popa sqrtps int and xchg mov (bad) (bad) (bad) call mov jp sbb movsb mov cmpsl sahf mov pop pop jecxz mov push dec and (bad) ljmp jle dec (bad) (bad) adc jge mov imul xchg and sti cmp jle sub lock rcrb add divb (bad) (bad) incl and incl xchg lock push ficoml movsl ja cmp aad adc (bad) (bad) (bad) lcall push sahf fs mov call adcl fsts add clc scas (bad) lcall std dec rclb mov xchg into add fcoms add ljmp push pop add xor dec inc sti cmp adc cmp gs (bad) (bad) pushl pop xchg push sbb adc and outsb add add jl (bad) lcall (bad) lret or inc loope cltd cmpsb into pop fistpl clc cmc outsb gs push js (bad) (bad) pushl pop adc push ss xchg inc lods inc mov lock xchg add (bad) jmp push ja cltd mov mov add jecxz fs out add aas jl (bad) jg or sahf cli push imul mov cltd pop or mov lahf mov fildll sbb mov in vmovaps addr16 mov mov add cmpsl out mov fsubrs fimul dec push inc call add adc pop xor loope sbb sbb data16 xor (bad) (bad) incl into pop mov xchg out gs bound mov cld push dec and out fbstp aas sbb mov jle sti mov aaa aad sbb js jb jo shrl lcall jmp sbb dec (bad) (bad) (bad) lcall sub ret out ds in cmp xor cmp sbb mov push out sub loopne insl mov jp rcrb and idivl cli sar push mov jecxz imul push push cli fcoml (bad) call (bad) iret loope jmp iret movsl jb bound add cltd sarb dec insb insl pop sbb (bad) mov sti sbb fiadd negl mov xchg inc outsl int ds add jae xchg (bad) (bad) (bad) call adc in in mov fisub ret idiv or push cmpsb or sbbl fldcw (bad) (bad) (bad) (bad) jns addr16 psadbw sub sub shrb mov stos enter cmpsb ljmp sar jp mov add and fnstenv push mov xchg roll icebp (bad) incl push mov push stos or inc lret inc mov and in inc add int3 and in xchg (bad) fnstcw daa outsb inc sbb in pop cmp (bad) (bad) pushl pop inc dec xchg outsb fist xchg mov pop (bad) pusha or lahf lea (bad) out push xchg bnd lods (bad) mov inc cmp movsb insb out inc pusha scas std iret fldcw or pop jne mov cmp pop out fcompl je mov arpl mov pop pop jno notb xchg push cmp push dec test pop in sbb incl push push xor xlat and aas sub cld adc (bad) fcomip (bad) fcmovnu into adc adc test ret mov jb xabort fdivl (bad) (bad) pushl (bad) or adc (bad) pusha repnz push sbb loop mov xor decl sbb xchg dec out fisubrl mov inc inc xchg fiaddl aaa fwait mov (bad) (bad) decl in inc in cmp inc pop leave add inc mov je (bad) call inc pop pop repnz add enter and daa push data16 dec fcmovb bound (bad) (bad) pushl dec scas imul cmpsb fnsave sti add dec popf testb or add (bad) (bad) decl mov sbb addr16 movsl sub adc out mov das in in mov outsl icebp (bad) (bad) push int3 mov xchg pop scas sbb xor cmc rcll push xchg out (bad) (bad) aaa pop into xchg pop mov xchg mov inc (bad) outsl dec in mov test (bad) cwtl repz (bad) (bad) ljmp add bound or xor jo call (bad) (bad) (bad) jmp xchg arpl call mov rol lock inc imul call call push fnstsw push and inc lea mov mov mov (bad) mov cmp mov push movsl fadd fldlg2 mov orl (bad) mov xchg fdivrl loopne pop mov mov popa jnp cmp mov lret stc (bad) (bad) (bad) ljmp xor lods out push bswap adc inc pop xrelease enter cmp mov lods pushf lea mov push lods dec inc (bad) sbb fistpll cmp ret push addr16 jg pop lock fwait mov xchg fld lods stos jns xorl mov (bad) (bad) decb pop (bad) xor dec mov stc xchg jo pop dec in sbb mov cmpsl push (bad) (bad) (bad) (bad) js out nop push bound mov aam lea push clc xchg jno mov lcall ljmp outsb shll insl cmp out inc stos mov ds fnop push (bad) (bad) (bad) pushl imul jnp fisubl jne fdivrs sub in mov fmul (bad) (bad) mov add cmpsl sub jle lcall mov movsl inc mov (bad) cmp pop and scas xor stos push adc int3 iret inc cltd hlt jg insb in sbb mov mov xor cmpsb ret std es sar movsb pop gs int scas lods add jl cld xchg stos in adc mov insb movsb and (bad) in lcall mov cld mov push xlat lcall sub jne adc push cmp pop lock jg dec fcompl push call dec pop jmp (bad) into mov fsubr std (bad) (bad) lcall push outsb cmp cmp adc mov pop mov fst movsl dec pop (bad) call test inc cmp xchg mov mov xor pushf int3 (bad) (bad) (bad) call sarb sub lret add lock cs adc push dec mov adc sub js xchg pusha and out fcos (bad) (bad) push jns leave rcrb bnd nop int3 lahf add iret jae mov addr16 out daa in mov xchg adc pop cmc pop add sahf js cmpl ss jg (bad) mov out lret outsl popf sub sbb mov inc sub and sarl fcompl aad mov loop add fimull out push push sbb mov dec (bad) (bad) fcomip pop sbb xor leave mov insb nop jnp cmpsb and loopne mov js pop cmp idiv decl mov jo mov enter in sub (bad) (bad) (bad) mov mov fisubl dec aas add ret insb inc lock jl sbb (bad) (bad) (bad) lcall xchg insb movl jno or daa movsb mov loopne ss out mov dec push or push pop pop nop outsb mul mov test sahf or movsb (bad) (bad) (bad) call std pop xrelease (bad) sub lods mov pop roll push pushf insb loopew jl clc repnz es clc mov mov int lods dec js or push (bad) (bad) (bad) ljmp loopne pop addr16 fs pop mov stos lock adc mov xor (bad) in jb stos push xorb pop mov xor pop xchg pop fcmovu call add incl adc int sbb (bad) (bad) dec or add cli mov mov (bad) (bad) push sarl add cld push push xor pop repnz xor stos aaa ror sbb out jns leave int3 dec add (bad) (bad) (bad) (bad) cmp loop or cmpl icebp sub jo cmp repz enter (bad) call or pop flds pusha ljmp shll xlat (bad) call sub sarb xor (bad) or fsubl test iret (bad) (bad) (bad) (bad) out daa in shlb pushf adc repz xchg and push jo (bad) ja add sub fadds push xchg adc lret (bad) (bad) ljmp sub movsb jnp mov dec xor mov int3 nop or (bad) (bad) incl jae fiaddl dec lods stos pop stos inc add add adc ret lcall (bad) (bad) jmp push jg (bad) fbstp rcrl ret repnz push insl push xchg jmp cmc mov movsl (bad) (bad) jmp or les scas adc cmp fisubr dec sbb xor or cli cmp sub insl sub and add call loopne mov or lea stos scas jnp jae imul call (bad) mov fs mov sbb xorl cmp sub out and (bad) (bad) lcall les adc stos mov fidiv xchg dec pop (bad) (bad) ljmp mov and les mov push push push push mov xchg or jge inc nop mov cmp int3 jp mov scas clc lcall dec jb or and fisubl sbb pop adc stos notb (bad) (bad) (bad) inc loop sub adc jmp sbb dec (bad) fcoms sbb es xchg pop fistl pop loopne fistpl mov xchg movsb repnz xchg in dec std mov (bad) lcall insb mov adc and clc (bad) in fist push aas xchg sbbl pushl mov jg jmp (bad) inc fnstenv sub mov jb lea (bad) call and pop cmp or cwtl repnz push jno je mov mov cmpsb pop les (bad) pop testb data16 js adc mov sub lods test cmp (bad) (bad) incl push push add ficomp push mov iret inc and in mov (bad) lcall imul shrb repz xlat inc popf fwait (bad) (bad) lcall stos xor insl mov in xchg les aam adc sbb xor movsl and cmp popa inc pop je (bad) jl (bad) and popa enter pop push bound loope ljmp jnp cmp int3 jb pop jbe (bad) xor out adc sbb ljmp fcoms (bad) outsl insl cmc (bad) pop (bad) outsb cmpl js sub (bad) (bad) mov in std popa sub lods in stc gs hlt cmpsl inc imul scas dec push movsl inc (bad) jg sbb xchg push in sub aas insb or cwtl je inc cmp mov mov inc mov fincstp jnp adc lcall push xor add xor das dec les out push sbb fstpt decl (bad) mov sbb jns orl shr (bad) adc (bad) (bad) (bad) (bad) in rcl clc int3 push daa pop mov mov dec push push adc icebp je inc xorl jae jmp xchg jmp cld into add mov into clc add (bad) pop sub (bad) (bad) mov loop daa xchg jle sti imul xchg andb pop and mov xchg cmpsl addl out (bad) stc xchg sbb cmp mov enter mov (bad) lcall hlt add aad fdivrl xchg adc xchg jle adc or mov dec pop insb push cmpsl mov lret push in mov out mov inc sbb ljmp mov or stc sbb dec (bad) (bad) (bad) (bad) inc pop add pop and shl mov push add pop sub sbb les (bad) (bad) call div addl je push mov fstl push xchg add (bad) ljmp cmc xor mov push xor jmp cmpsl and outsl (bad) (bad) decl sbb add sub mov xor inc insl loop (bad) (bad) (bad) call or xchg sub lea jae mov cmp popf xchg cmp adc xchg (bad) push (bad) decl addr16 jmp data16 jmp mov or clc lcall int3 (bad) inc lahf rorl push cmc inc call push add data16 pop mov decb (bad) fisttp loop test mov out adc sbb sbb sbb aas iret cmp movb dec mov movsb xchg ret imul lcall (bad) (bad) call cmp ds jb aad mov outsb and fsubrp cmpsl xchg call add cs js stos xor ror add xor inc push cltd outsb inc sub (bad) (bad) (bad) (bad) cmp or mov lret insl xor sbb jns and jmp clc test pop outsb stc dec in lock test and add pop aaa cmp mov (bad) (bad) mov and ss or push out inc aas (bad) sahf dec xor loop aad adc std enter decl cli out sbb es nop adc xor mov add std sahf das (bad) (bad) jmp push push rcrb in jmp std sub (bad) (bad) ljmp cmp or adc push rorb test adc decl add (bad) out adc (bad) (bad) (bad) incl or cmpsb shrl mov pop pop pop mov repz hlt cmp inc mov mov insb and jne push (bad) push fisttp jge cwtl inc pusha loope call fbstp xor cmp jmp (bad) pop push add jnp fimull (bad) fs push or ljmp inc dec fnstcw repz push mov mov cmp (bad) (bad) fcomip xchg cmp mov jge jp fiadd (bad) sti mov cmp mov callw pushl cmp (bad) jo mov pop lcall cltd xchg clc mov aam (bad) (bad) mov push rcll cltd test je mov pop imul (bad) (bad) (bad) pushl in lock xchg cwtl adc in dec loope es sub xchg push mov xlat loop add (bad) (bad) (bad) inc outsl mull leave sub or cmpsb lods out push sti sub jbe aas sub cmp (bad) inc ljmp cmp movsb fsubrl pop push sub mov or mov mov or test xchg mov in popl dec shlb call cld (bad) (bad) std scas mov cmpsb fldl pop pop cld call xchg pushl cld jmp scas sbb cmc aaa out ds cwtl mov data16 pop lcall je push or mov shlb sub (bad) call out jns adc cli mov dec sbb lahf lock (bad) push sub jbe (bad) sub or adc (bad) popf mov (bad) jmp cmp fildll xchg dec sub inc and pop enter xchg mov lcall in lds cmp arpl leave or ljmp rcrb (bad) decl lock and sbb lock cmp push scas xor notl incl sahf or enter and push (bad) dec fbstp (bad) inc std ljmp ss xchg xchg int jmp push sbb decl cld (bad) dec xchg mov add push push data16 (bad) (bad) sahf and (bad) (bad) push sub lds dec and adc push imul movsb test orl dec inc (bad) (bad) (bad) (bad) mov cmpl andl pop clc mov test shlb (bad) decl jle std cli mov cmp xlat ret mov inc pavgw scas push mov or ret aas mov lods jmp push cmp (bad) (bad) (bad) inc dec xchg sbb les xlat cmp xchg ret mov imul pop push out lret add lcall pop pusha shll adc (bad) (bad) lcall out addb sub popa jmp xchg pop jle jnp scas clc (bad) (bad) std xchg mov lods or sbb fadds lock ret fisubl (bad) jmp lock jo aad fnstenv mov icebp fwait xchg (bad) ljmp jno (bad) fwait sub and bound and in (bad) (bad) (bad) decl lods shlb ja iret adc cs fwait out jns sub jnp ds lock clc (bad) (bad) ljmp adc hlt mov jl xchg jge dec push and or or sbb das lods jmp pop mov ja pop cmp loopne xor jp or jge (bad) (bad) (bad) jg dec dec aaa ja add andb js pop out mov sub mov pushf ror (bad) sub popa inc push scas mov push sbb jg push sahf mov movsb (bad) xadd das (bad) pusha jb mov mov cmp (bad) (bad) jmp in or jne inc mov cmpsl sbb or pushf loope arpl jae mov dec fcmovnu mov (bad) (bad) call cmc mov ficompl pop fistl (bad) push mov mov cs and cmp rcll les jl jbe arpl outsb and js negb push bound fcoms call pop shrl ss jb mov (bad) (bad) (bad) jg push xor pop ds aas nop movsl mov roll cmpsl in stc xchg repnz xor incl dec push aad add pop pusha loopne and xchg daa repnz jae cs jo pushf mov (bad) mov add jno xor outsl sbb xchg mull clc jae jge (bad) (bad) pushl aam xor call fdivrs pushf (bad) shlb stos outsb cltd arpl jmp ljmp nop dec sub sub icebp popf inc clc int3 mov cmp clc (bad) (bad) dec xor adc stc or cmp jle adc xorl das lcall lods std gs ljmp xchg jne inc cmp outsl fcomi sbb imul dec test js in (bad) (bad) (bad) ljmp loopne addr16 js fisttpll cs sbb xor js fidiv (bad) call loopne ds aam faddl stos xchg mov add xchg pop out xchg (bad) (bad) lcall push cwtl push btl mov jle lods push jl jl xchg mov mov cltd dec push inc hlt addr16 inc out test mov mov (bad) dec mov je sub jnp (bad) enter xlat cmc mov ljmp out int mov add adc mov add jnp sbb or push test fisubrl pushl pop insb push fadds scas ds imul in cld aaa hlt fs dec fsubrs push pop repnz pop lock sbb jle imul cli push andl (bad) (bad) (bad) ljmp cmp sarb dec fsubl lods lahf mov xchg push imul xchg (bad) (bad) cmp fwait push or push out (bad) xchg cli mul ficompl jbe sbb (bad) (bad) cmp loope jg pop xchg arpl out sbb in int3 cmp (bad) (bad) (bad) lcall test cmp leave in add insb rorl mov sub (bad) (bad) pushl mov pop scas loopne testb cwtl lods pop punpckhdq nop pop loope sub xor (bad) (bad) (bad) jmp mov pop mov fwait out mov into aaa jg dec mov pop mov mov in and ss fiadd jmp pop jl xor mov pop pop nop dec and sbb mov (bad) (bad) decl notb stos xchg data16 ret mov adc add hlt mov call ss push repnz xchg mov lret movl (bad) jns jmp aas lret aas or rorb xchg bound orl or jbe das cli pushl clc cmp jp push mov (bad) je (bad) imul adc (bad) (bad) decl pop clc lock push movsb lea out cmp outsl sub cmp icebp loop ljmp and inc xchg (bad) call and and outsl and cmpsl inc pop pop es pop inc xor incb ret cmp mov pop push in jbe nop in jmp scas lock mov (bad) (bad) mov mov cmp fs jne iret dec pop push clc idivb std (bad) call in arpl push sahf outsb dec xchg mov (bad) pop add and push mov outsl dec pmuludq lahf test xchg ljmp adc test jbe jl addl mov (bad) jg and push out aad sub repnz dec int mov (bad) (bad) lcall push je pop cwtl add rsm leave lret sbb data16 inc mov (bad) (bad) (bad) (bad) ljmp jno jp adc subl sbb cld cmp jnp sub (bad) push push in xor (bad) (bad) pushl pop inc rcrl bswap rol jmp int fdivrl aas inc sbb jecxz pusha mov aad (bad) (bad) cmp xchg dec mov mov jns sar inc cwtl mov add (bad) jg inc div dec add lret pop (bad) mov shl cmpsb loope ret fsubl xor add (bad) (bad) fsubs cltd push test iret cmc jle out adc sbb std (bad) (bad) mov add je dec mov mov or push xchg nop xchg (bad) pushl out dec sub xchg lret push dec int3 mov inc sarb loop out cmp (bad) (bad) (bad) mov mov ret imul (bad) mov jno icebp inc loop out push faddp sahf scas jg inc int3 std test push jmp lds (bad) (bad) (bad) jmp mov out mov cld cwtl jns lret pop in pop gs push les jo das cmp std fstpt xchg jp nop mov jmp dec xor fisubrl (bad) lret jnp ret or xchg mov xchg mov mov pusha ljmp sar into xchg sbb pop xor jb scas pop mov mov push in xor (bad) (bad) lcall jmp mov in movsb xchg ljmp pop les cwtl rol pop xchg adc inc pop mov dec inc xchg insl cmpsb sub inc fidivrl daa sbb push or fdivrl (bad) incl mov (bad) and lods test add push lds (bad) loop jae mov and lock loopne inc sub inc ret dec and (bad) orl js sub add dec in js xor xchg cltd xchg adcl cld cltd sub mov clc adc insl addr16 add shrb cld (bad) (bad) (bad) lcall daa out jl cltd cmpsl and scas ss mov jo pop dec lock mov mov jno (bad) (bad) (bad) call cmp fsubl out rcl jmp sub fistpll int adc (bad) (bad) lcall xchg sub mov enter icebp push jmp scas inc addr16 (bad) (bad) mov sbb xor cld adc mov sub push clc adc jmp (bad) (bad) (bad) lcall mov aad dec daa mov pop xchg repnz popa mov ss (bad) (bad) incl sub inc mov dec push stos fcompl mov jmp push pop (bad) (bad) mov bound mov movl cs (bad) (bad) pushl ud1 cmp adc jg lret ss add lds push mov jne xor andl enter jnp xchg (bad) push inc lock rcl xor into add cltd mov or (bad) ljmp (bad) (bad) icebp fstpt pop enter out add dec add mov (bad) pushl adc xchg pop stos stos xor xor jp lds lods sti mov sbb xchg (bad) and mov lcall std push mov loopne jle pop lock push jp in inc (bad) jg (bad) jp add stos nop test daa xor movsl jmp add xor sbb ffree inc adc mov jne outsb (bad) (bad) (bad) mov scas out sti inc nop movsl sub xchg jae add cmpsb jge mov lret mov aam mov add mov push mov sahf imul (bad) call rol cwtl xor and or or (bad) jo (bad) lcall cmc aam and fcoms fsubr aas out pop inc fistp shll (bad) (bad) decl pushf movsb adc jg outsl ds xchg sbb ret loopne pop in enter mov (bad) cmp xlat adc data16 cmp (bad) jne les fcoml (bad) (bad) (bad) jmp rorl inc mov seto mov cwtl push call cmp inc ret stos (bad) ds sub and sub aas into int3 mov rol jbe lcall fisubrl dec mov inc dec jns jg inc mov je scas or (bad) (bad) pushl xor sub sbbl mov out mov dec inc and cld xor aad pop and insl cmp inc push xchg ds pop lock popa cld (bad) (bad) jnp or pusha pop sbb clc mov or xchg cmp mov mov jnp jns dec lcall (bad) incl push movsl mov test dec xor xor es jecxz imul cltd sbb cmp mov scas mov hlt xor jnp mov lcall sub lds out lcall fs pop sti lock paddd xchg loopne,pn mov loope lods push jmp (bad) (bad) jmp xchg fistpl sysret movb (bad) dec or es push jecxz cmpsb and (bad) (bad) lcall push jo cmp mov push mov or jne int sub xor (bad) (bad) (bad) (bad) jg popa test xchg imulb daa jne outsb (bad) outsl outsb cltd xchg pop inc xchg (bad) sub jp dec lds dec ss jnp (bad) (bad) mov sbb les cmp loope push mov add fldt lds frstor push loope stos xor data16 call lret jbe jne pusha nop add push mov addr16 repz add (bad) (bad) std mull xor push pop hlt mov je push mov in ds ds (bad) mov std mov aas hlt fdivrl cmp xchg or imul stc fdivrs sub repz jo cmp dec movsl imul dec popf push dec lcall push ljmp rcll loop imulb cmp mov fwait (bad) (bad) (bad) ljmp cli jmp stos ds (bad) and jb scas adc daa fisubrl out push dec (bad) (bad) (bad) incl adc xor stc mov arpl int jge xchg mov add (bad) hlt mov (bad) mov jbe int and enter aad jge into (bad) movsb and (bad) lcall xor cltd and xor test sbb or movsl fild pop (bad) (bad) (bad) ljmp push popf inc jno inc in shrl sbb rcr sbb ljmp ret (bad) (bad) jmp and ja or fidivrl cld dec mov (bad) (bad) jmp xchg jge call dec fisttp mov cwtl pop jge arpl js (bad) push aaa xrelease call out (bad) mov jl and test test mov add xchg (bad) (bad) call mov inc loopne mov pop ljmp push inc jmp (bad) ss int3 ss and cmp sub (bad) or mov das fisttp mov push clc (bad) call jae add sahf sub jge es mov fbld decl icebp pusha in imul les jne push pop xchg or fidivrl (bad) decl xor inc ret rclb pop mov loop into jnp iret fwait lea stos (bad) (bad) (bad) call dec mov adcb xlat or fmuls xchg roll push and mov in (bad) (bad) (bad) incl jge test rorl jns mov jl test scas scas jmp cmp imul sbb (bad) (bad) jmp and jbe lret sub push insl mov lock icebp or pop jecxz notb and (bad) out pop icebp jbe mov in bound pop mov dec fldcw insl gs (bad) (bad) (bad) cmp cs lret nop mov (bad) mov xchg fisttpll jmp stos mov pop xchg out loop imul mov inc dec int aaa xor xchg (bad) rolb (bad) (bad) jmp test mov cmp add jmp call xorl (bad) (bad) ljmp movsl sbb mul jns push xchg movsb rorl repz gs mov (bad) (bad) (bad) decl mov iret sti jge push and cmpsl outsl cmp pusha dec mov sbb fwait out add pop icebp lcall js xor dec repnz cmp mov pop add sarl (bad) (bad) (bad) fist in inc xchg sbb data16 pop pop nop (bad) inc dec stos mov sbb sub js mov (bad) fcomip pushl pushf movsl dec enter mov mov int cwtl or mov (bad) inc movsb sbb fdiv jmp mov mov sbb inc loopne dec ds add (bad) (bad) inc jno xchg inc cmp sahf mov cmp mov lret dec jnp in jae (bad) jmp fdivp lahf sarl or xor inc jb cs iret popf push rorl out lock lea stos jg lret (bad) jg xchg fsubrl daa dec and cmpsb fcomi inc mov dec cmpsb pop call ret push inc popf clc (bad) (bad) (bad) mov xchg fild test push cld cli mov out push push (bad) (bad) incl cmc inc idivb adc xchg outsb ret ljmp decl mov mov push call sbb test or iret sbb add (bad) (bad) (bad) out mov std push pop inc or jg ret ffree mov es imul test (bad) ljmp rorl and ret cmc (bad) outsb (bad) pushf pop out add daa push lcall out call test sub mov mov mov sbb add cmp mov dec (bad) push das dec popa adc dec mov movsl outsb cmp (bad) lcall rcll movsl xchg mov ss mov cli das in mov cmp inc dec std les adc call outsb jmp (bad) aaa push es xor arpl into cmp lods loope cwtl test aam push decl aad xchg add hlt fimull sub loopne xor aas test stos (bad) ljmp lret test dec enter adc dec sub out (bad) (bad) dec push pop cmp sbb push ds jb xchg mov and fildl (bad) (bad) (bad) stc ret jb fstpl mov subl inc pop push lods sub mov jb adc hlt jbe (bad) call sbb dec inc (bad) punpckhwd js push (bad) (bad) inc inc push jno out cmp (bad) incl inc stc dec das push (bad) dec mov inc cmc jo mov leave push loope repnz and mov lods sub pop sub adc rcrl stos cmp stos adc ret mov (bad) lea mov (bad) (bad) (bad) jle push xlat int3 int jl insb mov push lods pop inc in out mov das mov push pop fwait add imul jmp pop cmp pop aad out rcll jo ss das fdivs int3 fist cli sub int3 aas (bad) (bad) (bad) call sub (bad) mov inc add jnp cltd push test lods mov stos in adc xchg (bad) pushl insb es dec jge sbb inc adc andb xchg (bad) mov push pop cli cmp mov out mov das jo xchg and fidivr icebp or sub sbb adc pop dec dec sbb cmp std lcall test lcall stos mov push movsl push sahf push int3 outsb dec push sbb pusha inc in data16 loopne inc adc push (bad) (bad) (bad) dec out add mov jg add jl pop adc xchg adc jp pop (bad) (bad) (bad) decl cs insb out (bad) loopne fnstcw pop test mov (bad) (bad) rclb xchg frstor (bad) (bad) fcomip ds xchg or dec xchg loop fxch inc jmp in mov (bad) (bad) (bad) jmp add mov repz adc cmp movsl inc call rolb cmc subl cmp adcl dec fs movsb mov dec neg and jg adcl dec pop mov push (bad) ljmp (bad) mov in out jbe lock or dec (bad) and cmp (bad) (bad) (bad) push and jmp push or mov inc mov dec rcll movsl sub (bad) (bad) (bad) (bad) mov or dec std imul jo dec mov cmp inc sub jle int repz (bad) icebp (bad) (bad) (bad) jmp lea data16 lcall lret les bound cwtl adc or jo incl incl cmp (bad) movsb sbb ret lcall int scas rcr (bad) (bad) (bad) decl data16 push mov xchg push dec pushf nop mov insl pop je loop lods ds mov call ss xor test scas into leave xor push or push in xor (bad) (bad) call push pop mov cwtl aaa or cli inc mov orl cmp (bad) push movsb jecxz shlb daa sub rolb mov jns and js or (bad) sub dec cmp popf add add push ljmp (bad) scas aad cld (bad) (bad) lcall (bad) inc mov pusha cld fnop cs dec adc pop (bad) jno (bad) (bad) incl in mov cmp jg lods addr16 gs ret xchg push xchg sar (bad) jmp lods nop jnp fs mov repnz xchg (bad) (bad) (bad) jg cli ret and mov (bad) std sbb mov add push pushl jmp (bad) (bad) (bad) inc in jo aas inc aas arpl xor mov xchg sbb cwtl pop cmp xchg stos popa jl (bad) mov inc daa or bnd icebp testl jge or in (bad) idiv (bad) (bad) pushl and scas xchg lea ret loopne push mov sub sbbl adcl (bad) (bad) (bad) jp insl stos loopne mov bound fiaddl push jo cmpsb or and (bad) (bad) dec outsb out rclb sub sbb mov movaps inc xor lret jbe sbb (bad) ljmp inc popf pusha jle mov iret mov mov adc xor sbb xchg xor (bad) (bad) (bad) (bad) aas xor mov and cmp cmc loope and and (bad) (bad) (bad) call rep cmc ret inc jl sysexit arpl push cli mov ss cmpsb pop aad dec jmp (bad) xor jmp movsl lret or jge (bad) (bad) fstpt je ficomp mov mov andl pop add push (bad) (bad) lcall (bad) ds mov jecxz push inc in mov jbe dec stos aad scas dec mov pop mov jmp lcall jae adc push xchg (bad) (bad) (bad) (bad) ljmp loopne mov shlb mov test or push jno (bad) (bad) (bad) pushl gs xor sub inc adc out push (bad) pop push mov sbb inc inc xor (bad) (bad) ljmp sar dec int test xor push and or daa adc dec mov mov roll (bad) add push mov int fsts loope fs (bad) (bad) lcall cli add lea pop or gs out push add inc pop mov dec xchg loop xchg (bad) mov popa sub (bad) pushl out adc sub andl add mov xchg sub in imul and icebp push in movsl cmpsb push les dec mov inc xchg aad jb repz xor mov lock pop fcomip andb (bad) out mov imul jae and xchg or and mov add (bad) (bad) (bad) (bad) cmp or stc int xor jnp shlb and lcall stos repnz (bad) cmp call add pushf sbb sar add js into inc (bad) (bad) (bad) incl inc mov inc pusha (bad) fildll outsb sbb arpl bswap dec push mov push cmp sahf sar (bad) (bad) lcall jl insb or cmp aaa cmp sub lods gs jge mul shll or call insl das mov mov and mov scas loopne incl inc sbb test mov adc decl (bad) (bad) (bad) call dec sub pop mov xor cmpsb pop add out mov mov push (bad) (bad) call push test and mov daa scas sub stc je push or movsb sar (bad) lcall mov nop xlat push push cwtl stos mov pop push add mov cmp lret cwtl inc jge ljmp popf bound repnz das mov pop aaa fstpl aad dec (bad) fbstp outsl (bad) (bad) call mov popl in xchg mov scas fbstp push sahf sti test (bad) (bad) incl sbb adc cmpsl add shr cmp sbb dec mov and (bad) jmp adc ljmp lods pushf dec push negb aam cmp mov mov (bad) call or stos mov ret jno aas lods es inc test je xlat (bad) (bad) (bad) push jb stos (bad) or enter cmpsb mov xchg and lea les mov ljmp jmp into ret mov adcl pop pop inc mov jmp ret repnz inc (bad) jnp iret mov aaa adc nop lods fdivrp (bad) (bad) jmp pusha push mov add das (bad) pop insl pop pop int3 pushf jg and mov dec stos (bad) (bad) (bad) dec gs cmp mov lahf inc shrb cmpsl adcl ret sub lret (bad) (bad) dec nop mov xchg add clc or adc scas idivl hlt movsl inc sar pushl ds and rcl fsub push pop fsubs int3 mov (bad) (bad) mov jb aas mov jno hlt adc pop shrb test add (bad) (bad) (bad) aas dec dec bound push outsl xchg push mov (bad) xor sub shll pop cmp xlat jg (bad) lcall inc lahf cmp (bad) xor and sbb aas xchg leave loope leave jmp clc (bad) (bad) (bad) fistl inc mov fs cmp in leave push add enter cmpsl cmc xchg (bad) (bad) call mov sbb es push scas inc (bad) mov pop fisttpll jle jne clc pcmpeqd lcall (bad) out push xchg repnz pop in sub dec out lods pop mov scas (bad) fcomip (bad) jg clc popl cltd adc sub mov pop clc sar mov jg idivb sub mov fwait adc (bad) mov pop std xchg fwait stc in int3 (bad) test pop mov (bad) (bad) (bad) (bad) (bad) inc ret mov inc add adc jmp pop push mov lcall sar decl addr16 rol (bad) adc xchg jb fs add (bad) (bad) ljmp out cwtl jg je xor mov cli out mov daa pop lret mov add orb push add xor scas rcll (bad) call mov jg mov jb pop es movsb sub bound cwtl inc loope jmp dec jne xor loope aad pop mov push out (bad) (bad) lcall pushf ljmp loope jmp xor pop int3 in mov (bad) (bad) (bad) jmp add push or sbb mov xor lods outsl push lcall aaa lods xor ljmp jne enter in jne or sti xor mov shll (bad) (bad) jnp cmp (bad) stc dec fiadd mov insb mov inc sti aaa enter das xor rorb push jg jbe and gs (bad) lcall sub adc pop hlt scas loope fs pop or mov repnz addr16 push jmp test mov test repz push dec mov and fcomip call in lcall lods mov test cmp sbb in ds call pop dec sbb xor and mov jmp ljmp data16 sarl adc addr16 and sahf mov incl call mov les add scas push add push divl lods mov cmc jne add and dec (bad) (bad) (bad) mov jge inc or js daa push xor mov mov jle (bad) (bad) (bad) inc jecxz inc mov sub and xchg scas jecxz inc adc pop rcrb mov or pushl popa sub dec inc fwait xchg cli jg (bad) (bad) inc lods cmp sahf sub lea add mov jle loop mov mov cld dec pusha add lret pop pop fmuls sar (bad) incl xor add out out dec inc (bad) sbb aad test push jbe xor and into lods lahf lret sub fdivr (bad) (bad) ljmp lock adc ja loopne pcmpgtb inc shrb pop xchg inc push sbb dec cmp (bad) ljmp adc test out fimul aad or adc dec or pop or (bad) cmp std (bad) (bad) jmp push xchg shll (bad) out fstps in and jecxz (bad) (bad) call lret xchg cmp mov fsubr push inc xor test sbb mov ds dec add push xor dec xchg pop cltd out test out fdivl ud1 sub (bad) cmp xchg movsl popf adc movsb xor leave sub rcrb mov adc pop lock dec imul movsl scas add nop in jnp fstpl (bad) (bad) incl stos inc (bad) and dec mov or mov lret movsb or int3 cltd idiv (bad) (bad) (bad) call lods divl or and bound mov (bad) mov jo inc int3 fcomps fs (bad) (bad) pushl in jae cmp mov cmp xor mov addr16 (bad) lods (bad) (bad) incl push inc dec inc cmp test sub mov ljmp push pop cmp mov and inc cld push sub (bad) jg enter jns inc ficomp lock gs xchg cmp (bad) incl lea inc jle mov out mov jno sbb (bad) call hlt mov out jns shl js push inc push movsl or mov (bad) (bad) std cmc inc insl mov lret test aas lahf cmpl sub jae call xchg and xlat and pushf int dec ss js insl jae inc lea outsl adc int (bad) (bad) (bad) jmp lahf push repnz jno and fimull adc sti fsubrs or inc push mov and cmpsl cmp cmp add add fst shrb mov xor adc ds (bad) (bad) (bad) jmp (bad) cmc inc cmp fadds mov mov push cwtl push test rcl (bad) (bad) (bad) inc lcall lea dec sbb xor cs insl rcr mov ljmp (bad) or jle inc movsb js lcall or repnz int je add (bad) (bad) (bad) call ret (bad) sbb push and pop pop and fcmovb test loopne (bad) mov and rcll inc out mov (bad) mov sbb dec orl push (bad) lcall (bad) sti mov movsb mov xchg cltd (bad) push gs movsl fcomp jb mov (bad) cmp jb jp stos jg xor cmp lods push jne (bad) loopne jge scas mov (bad) (bad) (bad) lcall popf sub fs or mov jns dec mov mov (bad) mov cmp out js xchg ret cmpsb mov (bad) incl es pop add test mulb adc arpl (bad) mov jg sbb xor lcall jo es xor (bad) (bad) call dec sbb pop and pop mov push cmc cli fstl and xor fcomip xor xchg (bad) (bad) (bad) (bad) mov aad push xchg test mov int add cmc data16 jno sahf daa sahf stc (bad) (bad) (bad) call out pushf cld xorb mov xchg inc xchg add xor fsubrl adc stc or inc fldenv enter pop out xor xor add fisttpl add je shll dec loop (bad) (bad) (bad) cmp pop pop xor mov out jecxz (bad) mov inc into jb pop bound loopne (bad) fisubl int jo outsb lcall mov jb jecxz (bad) (bad) push adc ljmp push xchg (bad) (bad) cmpsb sbb push jns test mov inc mov out ds mov mov cmp out add fcmovb and sarb (bad) xor (bad) (bad) ljmp mov js cmp lods push or cmp sti jg mov xchg (bad) jg shlb cmpb mov inc inc out ss and mov repnz pushl out movsl xchg nop jae inc roll push int3 aam sub mov (bad) (bad) incl jb push fdivl fs das ja (bad) adcb push inc movzwl pop lods xchg and and out or cmpsb push push ds (bad) (bad) jg pop pop push jmp mov aam incb (bad) int3 imul inc out dec sub cmp (bad) (bad) pushl test lods movsl jns sub ret inc test push out dec mov xor jns (bad) (bad) (bad) decl push adc mov out das cli daa movsb adc rcrl sub lea (bad) call pop add add add sub mov xchg jl insl or in (bad) (bad) (bad) jmp add dec bt loop sbbl lahf bound lret movsb mov mov aaa cld (bad) call ret jns sbb add movsl pop push jo or mov or call std sbbb pusha lret push push flds push jo fstpt cmpsb jns js (bad) (bad) pushl mov sbb fcomps adc xor rcrl jo xchg add mov cmp xor enter fs mov call mov pop shrl call jns sbb mov inc push pop cld loop ds xor push adc mov ficompl roll les xchg cmpsb lcall sbb std add dec jle sti (bad) (bad) call sahf mov adc or lcall cvttps2pi cld imul (bad) jg mov inc addr16 and cmp inc jl and sub (bad) daa mov adc cld (bad) je lret mov xchg pop mov loop and leave inc cmpb sbb jnp push aad add loop dec fisubr enter dec add (bad) (bad) pushl xor iret test xchg addr16 cltd addb sub mov shll lcall call pop add sbb lahf ss sbb lret xlat mov jle jnp pop (bad) cltd jae add pop fcmovbe loope mov and push sbb (bad) (bad) ljmp lret aam sbb or dec scas or test push lahf push into test xor cmp (bad) lcall xchg push cmp xlat lock ss mov ficom mov mov lcall mov je add dec inc fs (bad) (bad) (bad) jmp fxam jb movsb dec cmp pop imul in mov mov scas dec and xor ljmp and lahf js aaa rcll in and jns mov jns (bad) (bad) push cmp call and mov xor jmp popa daa or (bad) (bad) ljmp xlat addr16 xchg cmp roll clc fstpt rcrl xchg jne mov (bad) lcall pop sub push je xchg and out loop cmc inc (bad) (bad) (bad) incl out sbb (bad) cmc dec cmpsb icebp lcall pop stos imul aad test ljmp push add sbb movsb (bad) loope and lret and (bad) (bad) (bad) pushl pop inc mov stos in gs imul mull int test or lret (bad) (bad) (bad) push cmp dec push int3 cmp inc ror lcall mov ja stos loope ds jmp add fwait test and into pop inc xor fisttpll fs aas dec cltd dec sahf jecxz cmc outsl sub jl aad mov add jg push (bad) icebp stc sbb mov ljmp aam scas push js inc icebp dec std aam cli outsb pop cmp aam into ja pusha (bad) (bad) mov lcall insb mov cli imul inc out enter bound mov popf add jno dec cmc ljmp (bad) (bad) fstps out in std pop jae mov cld clc (bad) cli enter and mov fcmovnbe (bad) jmp xor int ror jo push sti or cmpl out cmp test (bad) (bad) lcall test or call mov arpl cli test in lcall (bad) (bad) push jo pop rolb (bad) adc pushf push mov (bad) loopne cld push push dec mov push leave inc cmp shll (bad) (bad) (bad) ljmp jnp dec sbb test leave cmovg jg mov cmp arpl xchg fidivrl mov ljmp decb push or data16 mov insb repnz (bad) (bad) lcall inc sub int lahf cmp insl repnz push scas adc sbb push xchg sbb xor (bad) (bad) jmp sub das jle adc ret inc pop mov inc loope ret leave adc xor adc movsl test (bad) (bad) (bad) out xchg nop mov jecxz or sahf shlb ljmp push enter jle scas ljmp cli ss stc std (bad) pop mov scas (bad) (bad) fbld out dec and or push sbb cmp lea jecxz (bad) (bad) (bad) pushl bound pop (bad) pop dec inc out dec outsl (bad) push in xchg hlt push push in xlat mov xchg (bad) (bad) (bad) ljmp cmp sub cmovl ret ret sbb loope das or (bad) notb ds sub mov hlt cli repnz int3 xlat jno xchg cmp movsl jns (bad) fistpll mov std sub (bad) mov adc cmp ss mov ret pusha mov std test dec faddp lahf pop xor lock popf xchg pushf cltd bound cmc dec (bad) (bad) (bad) (bad) fistpll jb sub add mov jns,pn add jo mov pop (bad) out out cli push adc cmp imul inc and repnz das insl (bad) aam cmpsb mov hlt imulb shrb int or sbb dec or (bad) (bad) (bad) call mov push adc cmp out inc and rcrb dec push (bad) cmp test (bad) (bad) call pop pop (bad) pushf movsl and inc fistl icebp pop sahf ret cmp cli popa xchg push mov (bad) mov push addr16 adc mov mov fistl cli std lahf cmpsb clc cmp mov (bad) jg in mov sbb sbb adc xlat push loop (bad) (bad) jmp inc lock testb inc dec das xchg popa jnp jp pop and (bad) mov cmc mov (bad) pop or mov ret (bad) (bad) (bad) out fsubrs sti mov mov das cltd ljmp sbb (bad) (bad) (bad) push push or xchg (bad) xchg push adc (bad) cld or nop loope hlt loope call xlat mov icebp xor je mov enter ja inc inc xchg rorb clc (bad) call movl test inc dec sub ret and rcll test inc inc pop in push mov inc repnz scas cmpsb and es faddl bound push lods (bad) (bad) call mov cmp sbbl mov mov sub lcall inc adc pop mov pushf pushf add pop mov sub dec add add (bad) (bad) incl mov subl outsl lcall sub (bad) (bad) (bad) ljmp int3 inc sarb push loopne aad pop (bad) loope pop push cld scas sub sbb imul xor cmp dec mov call mov jg dec xor call stos aad out push adc insl mov mov cmp (bad) imul (bad) push cltd add dec int aam insb int3 fisubrl xchg add inc repnz mov (bad) (bad) (bad) pushl (bad) mov jns adc pop fidivrl jne jnp lret push or sbb sub sub adc cmp sbb push hlt rcl cmp (bad) (bad) call dec jl imull sar xchg cs mov leave imul cmpsl adc jmp add dec imul xchg jno push sahf (bad) lock pop jecxz push (bad) (bad) (bad) lcall hlt sub push movsl sbb push arpl dec pop fs jmp mov andl dec roll add cwtl scas xor pop add rorb (bad) (bad) decl insb xchg popa fnsave sar outsl into mov mov into inc data16 jg nop mov adc lahf push push (bad) (bad) (bad) decl std cmp jnp push daa pop jb fldenv loopne mov lds mov or inc test into xor dec cld es mov xor lret mov cmp xchg fwait (bad) (bad) (bad) jmp dec (bad) cmp inc lods negl mov ret add mov mov sub (bad) pushl cld (bad) insl pop fisub arpl and mov mov (bad) lcall dec int sub xchg ja xor (bad) dec lods rol dec xor sbb repz lret (bad) (bad) (bad) (bad) cmp jae gs sub test mov jmp push pop loopne (bad) xor (bad) (bad) jmp fsubrs cmp in inc ss (bad) rep fnstcw jg (bad) fstl push sbb subl xor adc and (bad) (bad) (bad) (bad) out shl es sbb int3 loopne mov in push xor xor xor adc test pop mov sahf pop cmp xchg pop popa mov in mov add dec lcall or adc pop fnstenv inc jecxz repz fildl mov fimull (bad) cmp nop xchg outsb xor inc nop dec jae add xchg inc clc js (bad) (bad) ljmp in insb test push jg xor or movsl mov ljmp jmp dec sbb lods xchg mov sub mov fcoms (bad) (bad) (bad) call add enter lea jae shld testb pushf push cmp add ljmp stos jle dec pop dec push cmp and call sub ljmp adc aaa test lock jg xchg imull cmc sbb mov fs int3 jge out cli decl push ret lock adc dec fimul scas leave in jo (bad) (bad) (bad) lcall arpl and mov rol xchg sbb movsb mov outsb xchg sub mov mov (bad) incl aad sbb push lea sub es or bound dec popf and push adc jg (bad) (bad) incl out mov subl adc fwait (bad) daa xlat fnstsw jmp xchg (bad) (bad) call dec lods pushf jmp iret dec loop insl icebp test dec pop cmpsb out insb sbb lcall mov call lahf movsb leave xor (bad) pushf inc (bad) jecxz mov cmp cmc cwtl push imul mov (bad) (bad) ljmp push ret mov pop adcb mov cmp fisttp jno or pop hlt (bad) (bad) inc popa int3 rcrl mov xchg inc add jno or repnz je add jmp sub mov dec inc mov insb xor mov mov jl jle sbb cmpsl push lods in lock mov push sbb (bad) (bad) pushl test scas scas inc div addr16 popa xor out std nop push (bad) mov xchg lea pop (bad) xor push data16 sub js mov or xchg jmp xor (bad) jmp dec std sub sub in push mov daa and in xchg fs fsubp int3 fmuls pop cmp push xchg insl ss inc jl mov lea in mov (bad) (bad) lcall movsl push test popf xchg mov mov xor scas adc sub dec sahf insb adc cmp (bad) (bad) fidiv xor sbb cmpsb jp pushf stc adc cmp push and mov push arpl or dec jnp adc leave out sub cmc add and dec lahf sbb (bad) mov outsb or sahf push rcll enter pop mov loopne dec lods push and (bad) (bad) incl dec imul push in fcoml inc push (bad) sub fstpl in pop pop jmp scas (bad) (bad) (bad) call shr jne pop xor or data16 sti call bound fcoml dec jp (bad) fcomip adc ljmp call aad stos mov or (bad) (bad) (bad) incl out push sub popa pop sub xchg repnz pusha pop leave (bad) (bad) xchg ljmp push add xor sub push idivl pop outsb (bad) lock (bad) (bad) mov and or (bad) push xchg sbb inc sub pop and push int3 jg das pop rorb lea jno stc mov mov popf loop fdivrp (bad) (bad) ljmp xchg les mov cmp mov xor iret xor sbb jae dec (bad) (bad) (bad) ljmp mov clc lods mov jo mov das xor popf push int3 test nop cmp (bad) decl inc xchg or stc icebp xchg in pop xchg adc cltd shrl scas cli inc faddp inc cmp popa imul and sahf mov std add loopne jg aaa push and cmp (bad) (bad) mov lods jns adc (bad) (bad) (bad) incl movsl xor cmp inc push mov es push sub add (bad) (bad) fcomip mov push add and mov rolb or jp xor and jns xor or mov push das (bad) (bad) scas popf mov repz inc jns scas pop (bad) (bad) (bad) (bad) mov or xchg or cmpsl jb fsubrs add movsb push mov incl leave cs cld aas addl push mov pop call (bad) pushl inc xor out jmp add dec mov (bad) and mov (bad) (bad) lcall push and or cmpsl cmp pop pop cmpsb push stos inc sbb scas pop lock incl xchg repz fs ret or adc pop xlat push cmp pushl mov adc fdivs mov cmp and adc (bad) lock cltd cwtl enter les pop dec rol test call sahf dec sbb xchg into (bad) shll mulb jl movsb ja call (bad) (bad) stc pop jb ljmp cmovp pop outsb rclb sub scas cmp fnstsw (bad) lcall jnp xor (bad) cmc xchg mov push stc xor out or pop jge (bad) (bad) (bad) ljmp mov shrb jl imull arpl outsb jb dec jb jno cmp pusha out and xlat jg (bad) inc ss sbb pop inc jnp in and stc cmp push imul (bad) incl ret cmp push push inc arpl xchg inc into cld fdivl mov loope ficompl (bad) jmp cmp out or xlat dec jb dec mov cmp adc (bad) testl mov (bad) lcall xchg sub mov mov xchg add repnz (bad) lcall outsb cld rcll pop jecxz and mov lahf scas cmp (bad) push test lret push lcall fstl push (bad) and mov mov mov inc (bad) jbe int push enter sub (bad) (bad) call imul test inc sbb (bad) sub inc inc ljmp xor and mov repnz push xchg push mov std ljmp lret adc call dec daa push aaa cmp push jo jbe loope mov (bad) incl and pop pop sbbb repz (bad) (bad) lcall cmpsb fxch mov jno mov mov cld dec add or mov mov insl or (bad) (bad) call fsubrs stc pop jns (bad) push insb push mov enter pop es fsubr sub arpl shrl (bad) (bad) (bad) decl xor dec jno inc fwait xchg add pop sti test mov pop (bad) (bad) jmp and mov into sbb sub es sbb loope mov and (bad) (bad) decl mov and jle stos scas loopne and movsl push mov mov push outsl mov int (bad) (bad) jmp sbb pop or addr16 push push mov xchg arpl in cwtl sbb loop cmp mov sbb or sub std xchg mov je cli (bad) in (bad) incl xchg imulb dec mov xchg les cmp mov aas or (bad) pop mov sbb sbb mov test test call int3 (bad) (bad) (bad) decl mov jno,pt in outsl fsubp push xor mov (bad) xchg xchg and movsb cld (bad) (bad) incl xor fstpl mov sti shlb int3 movsl scas out mov (bad) ss xchg mov cmpsb pop ret jb pop cmp out mov mov stos wrmsr or xor dec add jbe enter sbb (bad) (bad) (bad) cli jb and or mov push shr insl mov dec (bad) call add mov sbb inc out call decl inc fnsave ds fadd fchs out pop adc sar (bad) (bad) dec mov popa test in cli xor sbb into data16 mov pop divl test (bad) jg cmpsb jo mov mov mov enter (bad) (bad) pushl repnz pop dec outsb sub push mov dec cs pop sahf add xchg je out bnd loopne jmp (bad) aam dec adc lods cmp pop xor lods pop bound (bad) (bad) (bad) (bad) fsts aad cwtl out push and mov xor pop mov sub outsb or (bad) (bad) call and push bound jbe addl shr mov add add (bad) (bad) call or push ss sbb xchg fwait int adc mov (bad) jo fs pop not ljmp mov push cwtl cltd jl rclb pop xor xor lods adc push mov (bad) mov (bad) (bad) (bad) jmp loop push jl jae xchg push xor int3 arpl or and cmp (bad) (bad) call les cli (bad) xor (bad) jl scas nop cmp pop scas (bad) (bad) (bad) (bad) cmp add pop in dec push int3 aam mov clc fmulp mov mov repnz (bad) (bad) (bad) (bad) jns ja in scas jb adc jle loope arpl fsts std test or pop or (bad) (bad) dec mov inc adc mov xchg jae mov nop hlt pop pop ljmp jb jg push xchg sar vpsubsw xchg repz std pop pop loope mov pop xor (bad) (bad) (bad) jg pop inc mov das mov out sbb dec fldl (bad) (bad) outsl sbb lods xor iret aaa cld aaa cld or mov cmp pop pusha push adc push jp (bad) (bad) (bad) lcall dec pusha jnp inc (bad) and icebp daa addr16 std cmp mov outsl jnp inc jmp (bad) (bad) (bad) call in test cmpsb (bad) and xchg cmpsb xor pushf ds hlt or pop (bad) (bad) (bad) jmp xchg inc mov dec cmp scas je iret jne cmc scas lods and js lcall decl cmc inc dec mov push mov cmp sbb sbb std dec (bad) cli mull or lds cmc fadd inc mov mov rolb (bad) (bad) (bad) fsub rcr rcrb adc adc add rolb push cwtl out push pop sar aas ljmp enter jl int3 pop (bad) mov xchg push mov xchg lock repz push xor mov shll in or cli ret push test xchg and testl dec aaa mov pushl mov arpl and sbb xchg ss jl mov outsl data16 (bad) leave adc mov das in pop pop div imul (bad) cmpsl pop outsb add punpcklwd sub and icebp xor (bad) (bad) (bad) jg lods mov cltd popf std lds lahf push fidiv lahf fidivrl ljmp (bad) or inc hlt sbb cmp xor cmp cltd inc cs (bad) (bad) jmp mov call adc fwait out sub xchg popa mov (bad) cmp or pop call insb or mov or popf xchg jmp (bad) (bad) lcall stos (bad) fmulp pop cmp insb aad inc jecxz das xor gs xchg scas lret (bad) (bad) (bad) (bad) mov ss xchg cmpsb add inc (bad) xlat mov mov cmc fdivp pop xchg popa jnp (bad) (bad) (bad) out mov insb loop js sti cmp xlat sub ja outsl jecxz xchg or outsl mov decl scas push add sub dec or jb dec pop and dec (bad) decl lock or xchg and add sub or in (bad) (bad) lcall dec pop fldenv out ss adc mov mov push jno push xchg xchg rorl out mov sub and (bad) (bad) (bad) lcall ljmp movsl push ficoml mov scas inc push int3 push jmp aad (bad) (bad) call les add aam insl and test loop iret inc sub cmp incl cmp push (bad) xchg mov daa sub loopne cs pop mov push jnp add (bad) mov jp pop and enter add (bad) jge mov (bad) ljmp loopne aaa loope fucomip movsb or jecxz and sub xchg dec xchg (bad) (bad) pushl mov jg arpl or jp inc pop scas std orl or sbb xor (bad) (bad) pushl ficompl das sub cmp add mov lret ljmp fcomp les push mul fsubrl push arpl add add sub dec (bad) (bad) (bad) (bad) ds rorl jne mov and inc (bad) hlt fild add adc sbb (bad) (bad) (bad) fnsave ret aas mov xchg aaa xor add xchg xchg mov xchg (bad) (bad) call xor ret (bad) push xor ja sub add sbb adc aam arpl dec ret xchg xor pusha inc xor mov pop lahf cmp loope (bad) decl add add in jne jnp enter mov neg movsl (bad) (bad) (bad) decl xor mov scas (bad) ss jne xor scas cmp call ret cmpsb (bad) (bad) ljmp enter negl inc push cli sub or cmpb and incl into or mov sbb out add movsb sub sub push xor loopne in mov (bad) jmp ja movsl dec stos push xlat std ljmp daa dec and xchg cwtl sbb (bad) jg lcall das es (bad) adc sub popf fstps sti cli (bad) (bad) ljmp mov pop fidivl je sbb xor ret mov (bad) (bad) out rol dec ljmp xchg or je mov in (bad) (bad) (bad) fsubrl je das test pop jmp add (bad) jae fisubrl jge (bad) (bad) (bad) (bad) mov lods pmullw ret add in cli stos push and lods lahf mov (bad) (bad) (bad) jmp fidiv push mov xchg insl gs les (bad) push (bad) (bad) (bad) (bad) mov mov inc push addl inc leave jbe and xchg das xlat (bad) (bad) call pop push fidiv lods mov xor push mov outsl hlt mov cli (bad) (bad) jg movsl xchg push and xlat dec push jns inc cmpl cmp cmc lods mov mov test jno push adc decl rcr xor (bad) cmp (bad) testb jns mov dec aam daa fidiv (bad) (bad) push lahf in mov sbb int mov (bad) dec (bad) cmp call or jmp jecxz fstpl mov rcll mov mov test (bad) mov xor adc imul jl sbb loope (bad) incl test sub jno (bad) enter dec (bad) jg (bad) cltd loopne test add pop fdivrs lret arpl mov (bad) (bad) (bad) (bad) ljmp push ret pushf ret mov fsubrs scas xchg jecxz cmp ja (bad) (bad) (bad) dec xchg xchg cli dec mov pop or daa hlt mov sbb dec dec inc dec mov push adc decl (bad) mov pop lds mov repnz ds in cmp and pop adc test std (bad) (bad) (bad) fistpl cmp xchg jg popf mov sub sbb into mov hlt imul lods jo push imulb call fadd and xchg pop lds ret mov jo (bad) (bad) (bad) (bad) js pop out adc adc scas fmuls int das pop sbb icebp out sbb mov lods arpl (bad) (bad) (bad) (bad) mov stos movsb jmp mov push imul (bad) jbe pop popf inc std (bad) sarb call popa jno divl pop insl mov testl scas ljmp (bad) mov outsb mov test dec xor sub repnz sbb push cld loop push mov sbb push sahf js mov mov (bad) push (bad) in cmp in xchg stc mov and imul dec (bad) ss and dec repz (bad) push xor gs decl ficomp xor add and ljmp push int3 mov add das fdivrs inc movsl sbb sbb incl popf xchg push out popa pop enter clc fiadd xchg add jg sbb out and cmpsl cltd movsl mov std mov incl sbb enter add pop xchg or mov popa fs (bad) (bad) pushl lcall (bad) sub outsb dec xchg xchg dec (bad) mov dec aas push add ljmp inc mov test icebp adc cmp (bad) jae (bad) jg push lds xor lds out pop adc js adc jl ss (bad) mov les repz ljmp mov rol out cmp (bad) (bad) call inc xor lcall ljmp iret pop xor dec in stos inc call shlb les jecxz cmp sbb ficompl cmp leave sub test rolb xor mov (bad) (bad) jmp or xchg push inc lret outsl das fwait inc mov inc cmp jg cld into xor out (bad) (bad) jg std (bad) and jae or and out pop aas mov cmpsl loope in pop (bad) (bad) (bad) inc fmuls fadds pop popa xchg xchg outsb and insb fs aam movsl adc dec mov and (bad) (bad) incl xorl arpl xor xchg dec jno lock jmp (bad) (bad) decl inc push dec sub and xchg shlb cs lcall mov mov sub fmuls push out ljmp pop add jmp and jnp or sti mov out mov (bad) (bad) (bad) call lods popf stos xchg xchg lcall cmpsb lcall in inc dec inc inc les (bad) jmp fcmovu insl sbb pop xchg or stos add cmc pop lahf and sti sbb cmp (bad) (bad) (bad) ljmp jns jb cwtl mov cltd add push sbb pop mov push adc lock js cmp cmp aaa movsb rcr inc (bad) sahf and insl add pop cld ljmp xchg nop or loopne jb jno ficomp pop imul (bad) ljmp adc inc push enter or cs lahf outsb cmp xchg xchg pusha xor xchg and xor or jo pusha jmp add push mov decl stc sub pop cmc inc mov ret jp jecxz roll cwtl push adc decl pop mov ds js add jmp xchg jge inc and repnz (bad) psubb or xchg inc (bad) (bad) cmp outsb sbb (bad) into pop fwait cmpsb mov sbb cs loope and ljmp sbb jb xchg jno mov (bad) jne xor pop rolb add pushf mov stos xchg mov (bad) push hlt stos (bad) jg add mov jecxz shll psraw decl cmp (bad) enter push mov and out mov inc daa pop (bad) (bad) (bad) push testl out fnsave pop push add cltd xor xor or mov pop or sti jns sahf sahf mov aas push (bad) out test push cwtl lock dec insl cmp xchg cwtl loope and (bad) (bad) decl call movsb lock jbe aas pop sbb inc dec jo mov mov and fcos lcall rol (bad) loopne aam nop lahf inc es fs dec stos int imul lcall stos or xchg and in sub cli insb mov out or cwtl sub fcmovu sti and (bad) call mov mov (bad) fdivrs insb push mov push (bad) jg in popa popa dec aaa and (bad) dec repz sar (bad) lcall loopne sarl dec mov fwait push sbb or cs push sub call jae lea ss imul in in mov dec jge sbb (bad) (bad) (bad) in into and incb mov call fmull cmp jb fstl (bad) xchg sar (bad) ljmp fwait sahf xchg and nop and mov stos pop insb movl je sbb fnstsw rcl inc mov (bad) jae inc dec clc ljmp jbe lcall adc scas sbb and icebp cltd inc inc (bad) (bad) jmp ds sbb pushf movsb enter xchg cwtl mov and loopne pop cmc (bad) incl xor push and fild stos or sbb (bad) (bad) (bad) ljmp fdivl dec jg cli mov xchg nop and add pusha push xlat pop (bad) (bad) (bad) pushl test jg call or sub jns mov into add js (bad) (bad) call cmp lds aad push movsb movsl jbe inc shr push nop (bad) (bad) (bad) jg push cwtl aad sub pop mov sbb mov pop adc xorb lret stc push into pop hlt (bad) pushl das test ja inc arpl push cmc xchg jb mov mov lock (bad) pushl jne push cmpsb lcallw aam repz jge aam cmpsl cmp insb js jp hlt cmp movsl fxch stos xchg popa fwait pusha imul (bad) (bad) jmp cwtl xor ja test daa jne xor or idivb inc dec scas clc (bad) mov add lods (bad) ljmp cmp jl lcall (bad) (bad) ljmp cmpsb stos push ficomp movsb push cmpsl jp xor and mov cmp sti mov (bad) (bad) (bad) (bad) clc xchg test add (bad) loopne scas cmc mov mov push pop mov (bad) call sub or xor or imul aam xchg push popf pop pand jg lcall daa sbb rol xor mov mull pop pop mov (bad) incl test popf rcll in push pop jbe out or lock mov pop add push push and cmp (bad) (bad) incl add lcall xchg shr in arpl mov mov cli cs (bad) (bad) decl jle sbb inc jb jge scas call xchg jecxz std fs push (bad) (bad) (bad) cmp xchg xchg icebp insl jo loope pop inc ficom mov or out call decl cmpsb add (bad) mov fidivl jle pop call sbb loopne call inc lock cmp repnz fisubl je mov stos adcl jl inc test pop ret pop push xchg mov (bad) (bad) jg lahf sbb not and lods leave xlat insl fwait mov dec jo lock aas loope cmp mov (bad) (bad) (bad) aas mov in sti jno sbb sub ljmp cwtl mov push cld lock cmp lea les int in push xor (bad) (bad) sbb dec test (bad) (bad) (bad) (bad) mov inc and sub inc in dec call andl mov sub nop incl icebp inc cld or pop pushf sub (bad) (bad) (bad) incl out pop adc jg or dec cmc out and aaa xchg test (bad) fcmovnu inc mov ret inc mov in adc out int3 dec in (bad) (bad) (bad) jmp ficoml add sbb jecxz lea fwait pop pop movsl mov or mov (bad) (bad) (bad) jmp mov outsb jb sbbb (bad) and sbb mov xchg icebp add mov xor xchg (bad) (bad) call pusha push push inc jmp mov mov lods stos inc scas add xchg inc cld call into adc sbb shrl jbe lret es cmp fcoms sub (bad) (bad) (bad) ljmp mov cmp push (bad) xchg sbb inc sbb popa pop idiv lock mov (bad) incl into and (bad) rol push jb dec jb dec dec jge fidivrl dec (bad) push push mov hlt push roll xchg popa or (bad) cli pop (bad) (bad) (bad) (bad) call xchg xor pop inc xchg cld push add nop fsubs push pop std jo sbb (bad) (bad) call leave inc sbb jg loop mov cltd pushf lock lret jns jmp add (bad) pushl scas in popa insl inc ds movlps xchg jmp std pop pop cltd cmpsl sti mov lods (bad) (bad) (bad) jmp sub dec inc jmp std add pop cmp test mov (bad) pop (bad) xchg jg pop icebp dec mov add xlat sahf push popa mov push cmpsb lods ror in out cmp (bad) (bad) jmp (bad) cmp fsubr pop jae sbb mov in pop fstl (bad) or (bad) jg lcall add fcom daa lret loop fidiv lods mov punpckhdq ljmp inc push mov test or in call (bad) (bad) (bad) incl mov in out add fucom push icebp push push sahf fs mov cmpsl inc lds loope loopne cwtl in xor or mov icebp mov arpl lret leave repnz sub sarl jge xchg xor mov xor cwtl pushf cmp xchg stc pop lods inc sub lock (bad) incl pushf sbb and mov and mov pop ss inc push (bad) mov dec lea in sahf andb inc sbb pop decl incl push mov pop mov xchg in scas inc jo xor mov (bad) (bad) cli jae cmp pop jnp cli xor jae jl (bad) imul add decl lret ljmp subl inc or cwtl ds xchg and cmp push ljmp in xor pop mov ficomp cmc popf ds rolb leave into push fcoms mov scas (bad) lret or mov sub (bad) mov (bad) (bad) jg xor popf cmp dec add gs sub ljmp bound adc adc xchg xor inc xor mov int3 jnp je,pt xchg push adc clc (bad) (bad) jmp test cmp hlt jg xchg repz shrb lahf dec insb cmp dec pop add and fiadd ret (bad) (bad) (bad) lcall (bad) jmp mov sbb lds jb xchg inc lahf cmp out fisttpl push pushl scas int sahf sub lods test sub jge arpl (bad) (bad) decl xchg into ljmp fmuls adc sub (bad) pop pop scas cli test inc cltd (bad) ljmp test bnd clc arpl cld (bad) or pop imul clc push sub mov stc enter inc lods fbld sbb pop insl pop int stos (bad) pop or stc sub outsl cli (bad) decl push push das add or inc sub sbb in (bad) rcll ljmp daa mov cmc sbb stos pop push leave mov ss mov (bad) (bad) (bad) (bad) fisttpll and pushf sub mov or in sub push in fistpl ljmp cs sarl call fisttp (bad) lcall sbb jne lds sbb call std ljmp xchg cmp lret leave adc bound inc dec or cmpsl sbbb lods test sub and and hlt xor sarl lcall mov xchg cmpsb mov gs (bad) sub jae and out loope cs pop push add es adc ja mov mov je scas mov mov (bad) or fxrstor jmp sti (bad) pushl mov jecxz sbb popa repz bound (bad) (bad) lcall (bad) pusha dec pop jmp lods data16 push sarl adc lods (bad) lock popa push lret out (bad) (bad) call aas nop push mov sub add daa jecxz loopne data16 push fwait sbb insb mov (bad) (bad) jmp mov add mov aad fldenv sti inc call (bad) (bad) (bad) push data16 pop cmc fsubl rolb push mov push mov mov (bad) (bad) (bad) ljmp fsub mov xchg and pop jns sti stos vaddpd pop xchg push push xor cwtl (bad) (bad) cmp loop mov fcomps lods dec daa push jecxz cli fbstp mov (bad) call cmp cld rcrl mov push push inc dec loope mov and mov lcall sbb xchg mov stos sbb std (bad) (bad) lcall mov nop loop std test or stos add (bad) cli pop push in cmpsb pusha jne push inc cmp mov fstpt pop and sbb adc adc std ret sahf (bad) ret mov jmp add popf pop nop sbb test fnstcw fldl2t dec pop adc (bad) (bad) (bad) mov push xchg pusha jo mov ficompl mov cwtl lahf lret sahf addr16 (bad) (bad) (bad) incl and cmpl sbb fidivl cmp aad fildll jl (bad) (bad) jmp xor or sbb mov jmp addr16 dec outsl xor xor add (bad) decl pop bound push inc or xchg mov push (bad) (bad) incl jecxz stos mov mov popa dec imul add lcall lret in xchg popf jmp cs pop dec daa pop stos popa adc dec js or cmc jns adc jno add inc ss (bad) (bad) (bad) flds das adc sub xor mov enter sbb push (bad) (bad) (bad) mov mov into mov add les (bad) push mov push inc (bad) (bad) (bad) jmp or xor pop shl push xor or sub adc in push stc loopne bound mov (bad) (bad) mov stos sub fildll aam call lret (bad) mov ljmp adc insb iret pop pop out out imul (bad) (bad) jmp xchg fisttpl cmp pop (bad) sarb lock push std out (bad) (bad) (bad) ljmp add sub cmp imul cmc cmp loop cwtl (bad) sbb (bad) pushl lods xor ret std mov ds stos bound or push inc adc (bad) jg out pop cmp cmp movsb jp cld xor cli (bad) jg rol loopne lds sub lods shrl sti xchg pop (bad) adc (bad) ja ja lcall ret or mov (bad) (bad) (bad) (bad) fsubr cmp and jg jne addl paddsb int3 jecxz int jo push in push mov sbb je inc xor mov or mov lods ret sarl cmp icebp (bad) (bad) call add mov mov test imul dec (bad) decl push out push sbb mov mov push cmpsb jno icebp or aaa dec ds popf dec xchg lods inc test mov xchg or mov fcomip lcall loope push push popa xchg data16 cld inc in cmp fcos (bad) (bad) lcall xchg in scas mov jl fdiv sbb cmpsb xor out adc jle ror (bad) (bad) (bad) jmp insl mov mov push out xor adc push ja (bad) xchg add mov mov cmp in out mov mov in lcall xchg imul in sti mov xor push sub icebp shll cmp out jnp ss mov test (bad) stos (bad) (bad) ljmp ficompl popf jno sarb lret cs mov stos dec sbb aad pop ljmp (bad) (bad) (bad) xor push sahf fisubrl bound sub dec ret out xchg sbb fisttp add lahf ds mov (bad) (bad) js jns sub xchg fs mov pop lret push sbb std sbb int fisubr adc pop inc jb (bad) (bad) (bad) jmp mov movsl popl pop in inc xchg pushf add dec (bad) icebp push fs jl dec sarb (bad) jmp pop mov jmp cmpsb lret add sbb push cs (bad) (bad) lcall pop test or dec imulb mov jg ret data16 (bad) (bad) decl mov inc dec inc (bad) stos xchg pop in movups mov addr16 pop arpl mul (bad) (bad) pushl push push xchg daa cmovnp insb imul negl xor (bad) mov (bad) (bad) jmp pop mov adc or inc lret push iret push mov (bad) or (bad) and cld (bad) (bad) out cmpl or stos push push dec mov (bad) sub xor fdivp call sub mov mov mov imul jno fisubl (bad) (bad) lcall push (bad) lods push add leave idivl mov push jb mov (bad) call call dec xlat sub das sub mov les and inc sub enter std fcompl sub mov fisttpll add (bad) incl dec outsb and sub or or xchg ljmp jmp sub adc outsb insl pop jecxz cwtl mov jp (bad) jl jne (bad) (bad) (bad) pushl cltd or movsb insb lock dec popa in mov rcll mov cmp jmp push pop sub int3 loopne adc adc (bad) pop (bad) lcall or mov scas mov push xchg sub cmp test xchg popa mov call cmpsb data16 clc jp add mov xlat sub fdivr (bad) ljmp or sub push ret fs (bad) pop dec xchg add negl out push (bad) (bad) incl ret and aam in ret jmp aam mov mov (bad) incl and (bad) xchg push test shlb and leave jb lock inc (bad) (bad) (bad) (bad) std mov loopne test push aam rorl pop mov pop in out test lcall incl push cmp jl loopne push lret test adc (bad) ljmp neg cwtl xlat movsl leave es stos or cmp cmp mov jmp cmpsb (bad) (bad) (bad) ljmp xchg pushf push insb pop and pop xor push pop or jle inc inc push mov (bad) (bad) (bad) call into insb pusha lret mov sbb or xor inc out or mov lock xor (bad) (bad) incl dec fistp repnz push pop fwait adc jle mov xor add sub outsb imul or pop lcall sbb dec cmp cmpsl push shll test (bad) (bad) incl and std adc out and sbb in adc cwtl call popa (bad) jg call sbb adc mov cmp jnp xchg mov push loope cmp (bad) inc enter inc fwait xchg pusha rcll outsl cmp dec xor stc mov lea (bad) (bad) (bad) pushl adc in jle je jl cwtl cmc lods dec fistp cwtl rorb cmp jmp ljmp mov hlt mov fcmovne lcall movsb jecxz cmp fmull jmp pusha adc xchg stos imul sbb out (bad) (bad) mov rorb fcmovb scas fcompl and and ret (bad) (bad) ljmp sbb jge jns pop ds add test push repz jnp sti mov pop mov pop mov mov cltd pop sub sub sbb fdivrl (bad) (bad) call enter fsubrs and cmp adc popa cmp mov insl (bad) (bad) (bad) incl mov lcall loop cmp (bad) ljmp aas fistp out (bad) mov sbb jmp cmc stos inc dec fcompl mov out rcrb (bad) (bad) incl or inc push adc movsb mov push les call rorl (bad) (bad) call loop xchg and pop ja push mov and repz repnz dec pop lcall (bad) cmp mov push loope jmp adc mov (bad) (bad) lcall mov mov enter adcl add mov cld decl jg cwtl adc xchg loop mov (bad) sahf std push adc (bad) (bad) decl popa js and out aas adc sub leave add incl sub clc (bad) push cmp and lods sub sbb jmp ss or inc xchg jge sub test xchg push out mov in mov xchg (bad) cmc (bad) push mov das xor lds push sub fs in sub or fmull pop into xor js fs sti (bad) (bad) decl rorl inc xchg (bad) mov test or scas cli (bad) jg or stos dec push outsb or lods lea fildll popl (bad) incl out into push movsl add cltd mov out je push (bad) (bad) decl (bad) aas mov push mov mov xchg stos movsl dec xor roll (bad) incl movsb int inc sbb fsub dec dec test scas es insl jns dec test xor cmc (bad) (bad) call rcrl mov sub add (bad) ljmp (bad) incl push cli or enter dec mov xor (bad) (bad) jl mov movsb (bad) or ljmp js and hlt xchg (bad) jecxz outsb add (bad) incl sbb fisttpll dec dec xchg adc lods adc mov popf inc inc adc cmp jns fwait xchg cmp adc outsb pop adc test lods ljmp mov sub xor sub inc std sarl jbe push (bad) (bad) dec icebp or push jno dec decb sbb arpl or hlt das addr16 idiv mov stc call jmp loope xchg int3 sbb dec add rorb (bad) ljmp popa adc loopne sbb jle out popa insb push out outsl jae lret xchg mov idiv (bad) (bad) (bad) jns inc sbb and inc jecxz movsb xor mov lock mov jo js (bad) (bad) lcall data16 call sbb test mov pop sar (bad) (bad) fisttp punpckhbw fstps mov popf ret add loop cld xchg pop (bad) (bad) (bad) jg nop and imul into loope mov push into sbb aad movsb push inc test out les decl xchg add pop push inc (bad) popa jnp insl jp (bad) (bad) (bad) (bad) fisubl push popa cmp aam lret dec or pushf into add sarl mov (bad) shll mov ret fmul ds inc mov aam cld (bad) decl sahf outsl mov aad sti lret push scas jle mov add call inc rclb xchg enter or mov sbb or mov cltd cmp fs ds fs (bad) (bad) (bad) (bad) cmp and movsb xlat push inc cmp jecxz (bad) pop lcall jo lahf push incl (bad) pushl and and (bad) lea xor add nop jl outsl mov sub sar (bad) incl stos call pop dec std fldl cmp scas into push inc pop push in imul aas adc (bad) (bad) (bad) jmp mov rolb mov jae adcb xlat jmp jg lods fnstcw (bad) (bad) (bad) ljmp sub inc and dec loop xor xchg arpl movsb jo das fcompl and popf jge test and cmp sti push data16 test push xchg jle lock clc das clc in or xchg mov leave xchg subb jg (bad) mov ffree outsb mov lock pushf xor popa les (bad) aaa std sbb outsl dec jl and mov repz jl imul jae lldt sbb push pushf jp jbe mov jl or ret and les mov pop cmp mov cmpsb mov loop xor aad je mov iret (bad) (bad) (bad) inc dec cmp out fnstenv lcall in pop repz push test push (bad) (bad) (bad) (bad) ljmp jecxz in mov into test mov out stos dec mov imul ljmp fwait xlat sbb cmp pop ret cmp mov fdivrs cmp pop bound sbb mov pushf inc ffreep cmpsl ss leave pushf cmp sahf (bad) cltd sbb (bad) adc lds cmpsb xchg std sbb jle xchg jecxz or mov mov call mov sarb and (bad) push ret xlat popa test inc aam (bad) (bad) (bad) call mov sbb jmp pop dec mov sbb test lods cli repnz (bad) ljmp mov dec or loop es add xor outsb mov bound (bad) lcall test dec fsts loopne push lods jmp sar test add lahf gs sbb ret mov call mov fcomps test aam push mov add mov inc cmpsb push (bad) mov ja lea xchg inc cld and mov add sbb jno (bad) (bad) (bad) call sub add shrl popa es push inc or (bad) ror push test pushf gs icebp decl sbb comiss mov stc sbb ss dec add xchg incl and test iret call leave push cld in mov leave jbe xor aaa and add sbb fdivs (bad) (bad) pushl nop (bad) repnz mov adc clc repz jl adc (bad) mov nop enter cmpsl cmp loop mov (bad) pushl daa popa and repnz adc pop imul add xor pop lock cs xchg cmp out mov enter cs lret mov int inc sarl push cmp cmp cmp ret adc inc cli (bad) (bad) (bad) ljmp inc test pushf fisubr add or or inc add data16 dec push fdivs sbb popf jo push pusha into mov popf xor cmp loopne cmpsb push cmp loope cmp mov lcall jo das sarb (bad) mov sub inc sub jl fs inc subl pushf cmp sar mov lcall in inc fs ljmp xchg adc (bad) xchg (bad) (bad) (bad) lcall dec nop lods cmp dec gs (bad) mov loop mov bswap sub jle cmp (bad) call pop bswap mov stos inc jge xchg xchg and inc jmp add push (bad) call mov sbb repnz test mov (bad) incl xor cmp xor lahf or sysenter xor mov mov (bad) (bad) dec xchg data16 std fimul (bad) mov and add pop xor mov inc into stos (bad) (bad) push mov scas jmp cwtl inc or dec mov pop stos pop xchg ret movsl loope add in bound (bad) (bad) (bad) (bad) cmp gs sti mov adc fadds leave pop mov in mov adc or (bad) (bad) dec lock cld inc cli lcall push jg sbb bound xchg inc jecxz cmc sarb (bad) jmp dec call movsl int pop iret mov or jle or daa pop (bad) fs aad xchg in ljmp clc pushl adc fldt cmp ror or or sahf mov addl je (bad) (bad) (bad) jmp sbb inc adc sbb (bad) fbld (bad) xchg and pop mov lcall sub (bad) mov add dec shrb mov cmp push xchg (bad) (bad) (bad) (bad) mov mov mov aad test outsl ds push cmp push mov (bad) ljmp lds mov or adc aam outsb sbb leave xorl insb data16 (bad) jbe ljmp mov mov lods mul ss cmp and mov cli outsb (bad) (bad) (bad) jg cmpsb or leave lret data16 xchg (bad) pop fsubrl pop sti inc repnz rol mov add (bad) (bad) (bad) incl (bad) push outsb dec pop outsl mull jp push or mov dec adc mov incl push add ret mov sbb call dec in dec stc jbe (bad) (bad) pushl adc push or rclb loop int stc pop inc sti push (bad) (bad) (bad) ljmp jo in jo mov hlt or xchg cmpsb data16 imul aaa mov xor (bad) (bad) (bad) jge cmp mov cmp punpcklbw nopl sbb out lock xorl dec pop cmp (bad) (bad) call pop push (bad) push xor lods mov fs lahf rcr enter fwait div popl adc sub (bad) (bad) lcall ror cmp xor mov daa stos fimull and or pop xchg (bad) (bad) (bad) fistpll add mov fimull or mov jg data16 outsl mov fild (bad) (bad) jno das fsub popf sahf sti hlt xlat js cli (bad) ljmp data16 mov lcall xor decl in jmp cmpsl out in and mov or pop cmp enter je mul mov divb lock push gs shl (bad) imull mov pop pop or fcmovnu in (bad) jmp rcl clc mov sub (bad) notb mov (bad) (bad) push decb cmpsl or in mov inc inc in lret jecxz jg fidivl cmp (bad) (bad) decl lret fxch ret fsubrs (bad) repnz in or and lods mov pop push mov (bad) (bad) (bad) jmp pusha mov out nop divb sti pop nop sbb ffree daa jo adc dec jg adc (bad) mov lcall jl push mov stc movsb and aam mov (bad) aas jecxz inc mov ljmp xor dec cmp sub inc xor (bad) (bad) inc shlb rcll out aad cld jnp cmp cmpsb push and ljmp (bad) (bad) inc nop sbb ficom jmp loope pop dec jmp cmp test pop fsubrl inc imul mov jns std add scas (bad) (bad) lcall or jp mov adc xor dec (bad) (bad) (bad) (bad) mov pop fdivrl xor test mov fdiv sbb dec das bswap mov xchg ja sarl pushl icebp std lds adc pop adc dec (bad) (bad) (bad) jg jb enter push fbld and popf pop in or in inc (bad) (bad) xor push stos outsl fsubr push (bad) cmp cmpsl adc and or popf fsubrl dec cmpps les add hlt adc cltd repnz sbb insb xor (bad) (bad) (bad) (bad) jmp lahf xchg dec pop mov and stc pop dec aas xor imul (bad) (bad) (bad) (bad) cld mov jbe lret sub sbb dec imul enter jge cmpsb dec (bad) (bad) (bad) pushl sbb mov xchg iret in cltd cmp xor ja scas jae jp ja (bad) (bad) jmp xorl adc inc shll xchg sbb mov jmp xor jg sub cmp push dec pusha shlb (bad) (bad) (bad) decl jo lds movsb enter jge in jae sub test (bad) (bad) (bad) decl dec sub sbb loope mov repz iret xchg jge nop aam fiadd lods movsl jnp (bad) (bad) ljmp and lahf mov pusha int3 scas mov and and push pop xchg or decl sbb sbb xor jl cltd and mov pop leave dec pop jle jl mov std pushl addr16 dec test test jns or loope cmc ljmp (bad) (bad) cmp mov mov and pop arpl in (bad) jbe cltd mov push xor push mov fucomp leave add mov mov add leave sub (bad) (bad) jmp jecxz and into and xchg and pushf jl sub inc cmp in dec push sbbl mov jbe sub xor xchg es dec cmc push xchg jmp (bad) (bad) mov popf mov ret xchg xchg xor (bad) in and mov call jne mov stc lods test dec push ficompl mov addr16 (bad) ljmp ficomp push adc adc test lret mov (bad) (bad) ljmp fs sbb jge popf xor and mov fistpl lret cmp (bad) (bad) incl xchg mov lahf cmp fsub ret cmpsl aam and pop push (bad) decl stos in add xor xchg jae xor mov daa popf sbb int mov movsb fsubl addr16 imul cwtl ret (bad) (bad) (bad) (bad) mov mov lahf jae xchg xchg or sbb fsts gs push (bad) (bad) (bad) xchg mov xor daa push stos cmp jns call and ret (bad) (bad) (bad) incl and repz in and aad xchg out sar ss push nop mov aas (bad) (bad) (bad) (bad) in ja out mov clc sti and mov cmp pop push sbbl xchg push mov cli call aad push push dec pop (bad) jl pusha insl mov jl dec jmp les clc call (bad) aam pop enter in ljmp stos (bad) pop jno mov outsl mov fwait inc fiadd test ss inc lods lds cmp inc mov (bad) shrl mov fs iret lret jg ds and imul xor push xchg xlat ret dec mov iret push push cmpsl add loop sub rorb xor xchg sbb into (bad) les dec fistp pop inc or ret mov (bad) (bad) lcall and insb jecxz ja fisttpl pop sbb cmc add and lcall call outsb bound push sbb add mull pop sub (bad) call or sub sub push out (bad) (bad) (bad) jmp std mov insl jmp add test outsb or dec xchg dec pop mov sub ljmp loope dec and psadbw sbb scas xor sub push add inc nop sub setp call lods inc xlat xchg push jns scas (bad) iret or lcall push out or adc jns aam (bad) (bad) incl test cwtl icebp or xor jecxz inc (bad) in push fildl out mov sbb lods out popa or nop outsb out shl xchg sbb adc in int (bad) (bad) jmp mov mov imul mov and sub iret insb mov pop je and adc jge xor into (bad) xor mov push mov cli add leave xchg ret gs (bad) (bad) (bad) dec inc and add or dec in xor imul mov popf popf push insb cwtl (bad) (bad) (bad) (bad) cmp xchg or lock push loope mov loop scas mov lods adc sub sbb dec jmp in aas and xchg (bad) jg decl jno and mov (bad) fisubrl insl sbb sub (bad) jg xor cmpsl sbb stos negb cmp jg sahf ss test rorl (bad) (bad) fild jnp fstpt scas jge movsb xor into (bad) jb cmpsb inc daa cmp push inc popa push std and mov or jae into jae adc adc mov (bad) das incl iret cltd cmp mov or or jns jle mov aas mov mov xor (bad) jo adc enter fsubrl test sti test (bad) stc rcrb dec (bad) mov outsl push (bad) decl pop aam xor in pop cmp xchg std mov mov bound pop lock decl pop insb sub add xlat xchg dec aas cmp adc shrb js sub (bad) lcall xor sti jae das repz inc leave loopne stc cmp xor fsubl fcomip (bad) in mov pop lds push (bad) adc adc imul jno cmp mov xlat (bad) incl addr16 aad aam sar pop into push ret inc push (bad) cmpsl jbe (bad) in (bad) (bad) aas into pushf je loopne inc mov popf mov data16 dec (bad) push ds pop inc lock (bad) (bad) (bad) ljmp out shll xchg xchg sbb test ljmp adc lds aad fst inc sbb mov jno cmp adc repz sti push pop bnd (bad) (bad) (bad) jmp dec mov sbb lods mov sbbb in mov adcb cmp sbb (bad) (bad) call cmp ret mov push pop in pop stos sahf or dec push jle (bad) xor (bad) (bad) mov andl cmc adc es sbb and loopne or aaa sub lods or inc mov scas cli (bad) ljmp jmp sti mov scas xchg test je movsb (bad) (bad) incl and lea pop nop jbe les in dec ret sbb sbb jp (bad) pushl cmp jl aas mov xlat push and popa sar (bad) (bad) js loop orb mov mov into fsubp sbb sub gs inc fdivr decl xchg and add mov (bad) (bad) pushl dec jae jns sbb cmp bound pushf jmp jle pop xlat push sub (bad) (bad) pushl hlt and lds in iret mov shr and jmp (bad) pop test (bad) (bad) (bad) (bad) jp fdivrl lcall scas lret mov (bad) fnstenv scas jne sub (bad) decl jmp rorb or add mov dec shll (bad) (bad) js aaa lea sbb jl push loope scas stos adc xchg push pop pushl std incl cmp push (bad) rcrb inc jmp loopne hlt loopne repnz outsb jns (bad) (bad) incl mov lret aad mov ss fildll scas sbb inc mov and les (bad) cmp mov jmp or adc push (bad) sub repnz enter sub (bad) jge adc pop inc sub (bad) notl cltd sub enter (bad) push in cld or (bad) mov lcall pushl xor xchg nop dec or xchg repnz sbb aad out xor pushl dec xor ret mov lahf jb dec in fcmovnb (bad) (bad) (bad) lcall inc xor mov push lods mov mov sub mov movsb jnp mov jbe add sbb jp jge (bad) ret (bad) ljmp dec adc fisubrl adc test jmp lcall push ljmp test mov imull jbe (bad) (bad) (bad) call jg fdiv outsl jns aad mov cmp mov outsl jnp sbb mov dec jl je incl (bad) js mov sub mov xor push xchg cld adc (bad) (bad) push push rolb add or mov xchg (bad) pop insb cmp lods jg mov sbb cli mov or xlat jp (bad) (bad) (bad) fcomip pop in into lea jbe std xchg repz mov das (bad) inc rcll imul stc ds sub mov push mov push scas adc mov pop cmp lcall das cli call jne cmpsb outsl daa mov cmp pop aam and repnz sbb sub adc je aaa adc stos push js repnz (bad) (bad) (bad) mov jnp pop pop je inc jno cmc js mov adc (bad) rcll (bad) out cli call xchg jnp inc and push jb and mov fcmovbe (bad) (bad) (bad) (bad) mov mov mov pop add (bad) or int push mov (bad) (bad) cmp mov loope and xchg jns adc aam stos (bad) (bad) call test sbb fbstp ljmp pop xchg ljmp sbb dec pop dec imul add dec pop xchg mov rorl test mov jnp gs jne cwtl loopne (bad) stos (bad) pushl and adc pop cmp ds mov jo arpl xor mov data16 mov cmp out jne ffree lret ja cmp (bad) (bad) (bad) decl (bad) lods ja arpl pop cmp inc insb inc arpl lret mov fisubl lea (bad) incl inc mov fldcw test inc sub test push movsl add fs dec mov test push pop add rorb mov (bad) (bad) (bad) decl out icebp bound cltd sub inc fsubrl inc fisub mov notl sub pop int3 (bad) ljmp cli mov inc mov in scas mov sti in outsb mov cmpsb loope lahf mov lret (bad) (bad) (bad) dec test push icebp leave dec sbb clc popf jae fwait enter lcall push pop stos (bad) (bad) (bad) lcall inc xor cmc icebp push pop sbb outsl insb into or leave pop dec hlt or cld (bad) (bad) lcall jb xor out imul pop mov fildll kortestw icebp call ljmp int3 sub aad inc scas movsb inc ds fwait adc in jo mov lahf fs push add cli (bad) inc iret mov mov inc aas adc sub bound adcb xor (bad) decl in aad cmc jg mov or and (bad) stos out (bad) (bad) (bad) pushl inc (bad) mov dec shrl in mov leave (bad) pusha pop scas dec push andl jne (bad) (bad) decl out cmp or push das mov cmpsb hlt fs outsb sub adc (bad) (bad) jmp addr16 cld (bad) mov in push or sbb cmp pop dec (bad) (bad) (bad) dec sub pop je ja pop xchg mov outsb les popa xor cmpsb and add push movsl scas pop sbb (bad) (bad) (bad) jmp lea insl pop clc push pop loopne and jb (bad) ss (bad) adc inc lods incl cld lcall (bad) (bad) mov sbb mov mov cmp into push push (bad) (bad) call add (bad) cli shl and xchg dec push sti aam ror je fdivs (bad) (bad) lcall sub les (bad) insl bound push xchg dec int jb aas fwait sar adc and (bad) (bad) (bad) (bad) (bad) (bad) ljmp ret mov mov aam mov add lcall (bad) jmp in mov rclb lea or mov xlat mov (bad) (bad) (bad) decl xlat add add test mov xchg call pop lods (bad) (bad) (bad) ljmp in lret cmp xchg push shrb or push cwtl sub inc jle mov push aam ficomp add les loopne inc (bad) mov mov sub test xchg hlt push loop (bad) (bad) fnop outsl mov inc movsl pop inc adc push push inc repz inc (bad) sub icebp xchg mov fbstp arpl (bad) ds outsb mov hlt nop stc mov inc (bad) ljmp and lods mov nop sub gs stc mov (bad) call xor lahf stos jne movsl and jnp icebp adc (bad) call cld lcall sbb gs cmp fidivr movsb xor add mov fs loop test scas push loope scas leave inc pop stos jae insl xor arpl ljmp or jbe cld lea mulb xor scas lret sub push jge (bad) (bad) lcall nop data16 pop sub xor inc ret and push shlb fwait cmp push jno push in (bad) incl ljmp outsl sti inc rcll in pop add (bad) jge cmpsl adc les (bad) cmp (bad) ljmp adc in pushf insb pavgb xor in cmp loop xor xlat jmp cmp dec (bad) (bad) (bad) incl or bound or aad fcomip dec lret push loopne leave push inc add (bad) ljmp aas push inc cld ja data16 xchg sti test hlt xchg xchg lea pop int rorb mov inc jle jb xor pop outsb push or call dec imul mov mov adc (bad) (bad) (bad) (bad) call cwtl notl cld push mov outsb mov xchg xchg fs (bad) (bad) (bad) call cli adc push (bad) mov mov out inc lds ficompl cld dec stc pop inc adc addr16 ljmp in adc jo loope push push sbb (bad) fistpl xlat (bad) (bad) call mov repz insb inc (bad) add inc inc daa jbe jecxz clc test xor (bad) (bad) jg inc cmpsl xor mov xchg into mov es inc pop sub pop sub pop (bad) int3 (bad) incl mov clc out fistp jae sbb xor fidiv adc sbb mov jnp mov pushf iret inc mov pop mov cmc das lcall (bad) (bad) (bad) call xor sub stos or addr16 (bad) mov pop js je (bad) (bad) (bad) call sti (bad) aad fmuls das and cmp pop (bad) cld push icebp adc inc or jmp (bad) (bad) (bad) (bad) (bad) cmc xchg (bad) sub (bad) push ss insb jb shrl adc std (bad) (bad) ljmp xlat (bad) mov sub mov inc jge sbb jne andb cmp pop jne and push sarl (bad) (bad) (bad) call jmp mov xlat and cmp fiaddl and sub cld jne test or in and adcl cmp pop xchg cmp daa paddd (bad) (bad) ljmp push nop push adc ficomp add nop sub je mov adc sub mov jne push mov push fsubp xchg call loopne je mov ds (bad) (bad) (bad) incl jne icebp out cld repnz cmp pop sahf mov xor gs jno (bad) mov add fwait roll fisttp lock pop add inc push aaa or clc lcall inc pop pop call sbb pop cmc aam (bad) (bad) (bad) stc xor sub out jmp inc sbb aad gs (bad) sbb (bad) (bad) jmp in xchg xchg xchg outsl push add (bad) fcompl int lret add xchg adc (bad) mov add nop sbb jge (bad) ja push mov mov lahf mov movsb cmpsl aad xchg mov pop repz test lret (bad) (bad) ljmp push imul or xchg daa aam sti pushf lret xchg imul lcall sub mov mov adc (bad) adc sbb push in idivb (bad) (bad) (bad) incl sub imul popa inc pop int3 mov xor add xor (bad) (bad) jmp rcr lahf pusha in or fwait mov add inc or (bad) mov jno (bad) mov cmpsb lahf inc (bad) sub pop jl mov es pop push (bad) and stos pushl (bad) cmp jo or cmp mov ss mov (bad) mov jmp sbb popf xchg sbb (bad) cmpsl andl ret (bad) jg adc stc incb pmuludq cmpsb pop mov dec jne fst inc test (bad) (bad) (bad) ljmp xchg cltd fs sbb jle (bad) dec mov and ljmp xchg xchg push sub shl adc (bad) cmp ljmp cwtl sub in mov lret sub xchg mov inc adc arpl sbb rorb inc or aaa (bad) jg pushl or call mov mov inc popf leave mov push lcall call xchg int repnz mov inc xor cli dec lods inc decl sbb sub fild hlt (bad) (bad) (bad) (bad) fcoms roll add push jae jmp cmc cmpsb jae int3 pop hlt leave or pop xor sub mov jge dec aad test (bad) lods js xor insl mov (bad) (bad) (bad) fistpll mov mov push xlat cmp mov jnp mov jb adc (bad) (bad) (bad) (bad) jmp lods and xor daa (bad) sub xchg cmc decb arpl push fs pop push (bad) (bad) (bad) call inc call xor leave sub mov rorl mov in xchg bound sbb ljmp sub (bad) or sub lahf sub jns icebp cld clc mov (bad) jmp add cld out fsubrl mov and inc inc int (bad) cmp movsb pop aas push into aad cmp scas dec cmp cltd lea add lods mov rorb out cli xor xchg mov iret or dec sahf imul movb sti sti xlat or daa pushl std ljmp sbb mov ds or pop jmp ds (bad) (bad) jmp mov or and ficom and outsb imul push testb fwait in ljmp cmp out clc test jo rol cli sahf (bad) xchg loope in inc xor (bad) in lcall ret aam pop or ficoml pusha shlb mov fsubr fwait xor (bad) lcall outsl jnp je sub pop jl dec xor int (bad) (bad) call mov sub cltd mov cmp int3 inc jp psubd (bad) (bad) (bad) (bad) mov push popa int3 mov cld add rcll in rep xchg (bad) (bad) decl rcrl fiaddl dec add or pop push push in pushf (bad) (bad) (bad) jmp lods cmp dec cmp popf aam imul add out sub pop cmpsb cmp (bad) ljmp sub shrl stos push sbb mov enter pop icebp call adcb push sti and aaa push pusha add push xlat lods and cmc movsb xchg incl sbbl lret stos scas push pop test outsb (bad) call test lahf inc inc (bad) pushl std lcall insb adc lret mov and (bad) (bad) pushl ret imul xor add in sub ss mov fisttp mov clc (bad) (bad) pushl aas jno loope (bad) xor push or aaa inc push icebp dec iret jge (bad) incl movsl lret stc mov add mov adc (bad) (bad) (bad) mov adc dec pop xchg (bad) out mov test push movl call mov das sbbb stc ret and or (bad) xchg mov lret (bad) (bad) (bad) out ds popf inc xchg inc or mov jg push add and sub jnp in mov pushl and lds jbe push mov (bad) call pop cmp pop enter jp adc mov mov inc gs (bad) (bad) (bad) (bad) cld nop pop arpl cmpsl sub cmp jae rorb and lock hlt xor incl scas mov shrb lds pop (bad) out cmp adc or out mov ja repnz pop std (bad) (bad) fdivrs lock cmp jns ja popf (bad) pop js pusha mov mov insb ja jb adc inc mov pop sbb mov cmpsb mov repnz ljmp inc add inc or das mov push jno decb (bad) dec jbe daa cli out jne hlt rcrb (bad) (bad) mov (bad) jecxz pop xchg mov (bad) mov jno inc push sub cmpsb (bad) jle rcr stos (bad) (bad) (bad) (bad) call incb ret mov ret fisubr in aas out xor cmc sub adc int3 lock jmp repz dec clc cltd out std jae add jmp xchg das xor xor xlat cmp fwait (bad) fbld mov add jl aam (bad) mov dec jae inc pop push sub arpl jg mov jge (bad) cs aaa std shll jmp inc mov push or rcrl sub xor cmp xchg in aam sbb movb xchg fistpl or inc popa cmp aaa into mov shrl ret (bad) hlt test (bad) (bad) (bad) ljmp jp adc mov ja pop cmp or lret (bad) jmp sbb cmpsl sub jmp hlt add push test lock jnp aaa sti adc (bad) (bad) (bad) in test (bad) jle rcll or es mov xlat out pop sbb add (bad) (bad) (bad) push mov push pop push or lret cmpsb push xchg leave mov gs call (bad) incl pop dec cmpsb outsl sub inc gs data16 loopne sbb es mov cmpsb and (bad) (bad) lcall iret add adc outsl or (bad) push sub sahf outsb pusha xchg dec xlat adc (bad) (bad) incl scas leave xor cli fist jno or testb ljmp rcl mov sti mov repz cmc int negl dec pushf or mov (bad) (bad) (bad) dec scas fisubr sbb sbb dec pop sbb mov xlat aas int ljmp sbb loope or sub cmp xchg cmc cmp sub ffree add push pushf inc loop scas (bad) (bad) fistp std push fsubrs mov call pushf fistpll xchg pop mov lock ds sbb (bad) sbb adc sub xchg daa hlt lcall mov icebp push fnstenv mov jnp jle,pt adc (bad) repz dec adc pop daa movsl xchg (bad) (bad) (bad) in and adc outsl pop jns insl mov imulb xchg sub (bad) (bad) pushl ja pop in mov (bad) leave jne mov mov in in inc mov (bad) push mov cmp (bad) (bad) (bad) incl (bad) xchg pop in test loope jge sub ljmp sub xor addr16 dec cmp inc fisubl cltd inc (bad) ljmp jg call fs dec fwait cmp daa pop pop test loopne stos lock push dec mov mov inc jae fimull (bad) mov ret sbb adc adc js mov jecxz add aad xchg mov adc fwait jb xor leave sbb shrl loop aaa pop push xor ljmp adc mov xchg pop push add and fdivrs pop inc loop inc clc or mov ja (bad) (bad) (bad) mov fsubr pop pop mov (bad) and arpl push bound jp mov (bad) decl or or sbb adc repz ret (bad) (bad) lcall add dec sub pop inc in push cmp sbb dec icebp loop loopne (bad) (bad) jg xchg scas mov add mov js movsb andb mov push mov fcomip lcall mov fbstp scas pop adc or mov (bad) call (bad) dec stc ds sahf fcmovne addb ljmp or and sub push push cmp or adc adc add cmp (bad) (bad) jmp movsl mov cmpsb xor or cli shr imul das adc (bad) (bad) jmp into test lea insb fadd xlat xacquire adc xchg stos sbb scas cli (bad) (bad) lcall adc test inc pop fmulp loop sbb sub test adc or sub (bad) out call mov popf push bsf xor jb pop int3 arpl mov mov arpl mov xchg mov sbb pushf lods mov xchg pop pop lret (bad) (bad) jmp pop jmp sub add adc in or pop jnp (bad) jne lods aam mov ljmp mov sahf cmp pop lcall fsubs pop das rolb stos clc inc (bad) (bad) (bad) jmp dec fdivrl (bad) pop insb jp mov negl rcl add jno mov mov std and (bad) push inc add pop neg (bad) cmc mov js das sar outsl cmp popf mov hlt das xchg aas pop mov and (bad) (bad) (bad) decl xchg into lret pop pop icebp ret xchg adc mov adc cmp jbe scas fldl (bad) (bad) pushl pop xor xchg sahf or (bad) cmp push jnp mov inc adc (bad) incl fldl or dec fucom popa pop movsb (bad) push xor (bad) (bad) (bad) call pop loope clc test cmp mov or sub adcl popa cmpsl mov mov sub roll jne test ds and add ja jo rorl rol mov pop into fstpt jns mov (bad) jae dec inc (bad) ja sbb pop jge call in cltd mov outsb repnz xchg negl mov rorl stc add data16 fcmovne jecxz jecxz ljmp (bad) (bad) mov and mov call sbb ds add add (bad) leave mov sub call nop pop mov dec movsb aam sti dec mov jns xor xchg cmpsb jne (bad) (bad) (bad) jmp dec hlt xchg ret inc add test pop mov repnz inc sub rclb call adc push mov lds adc jmp dec and (bad) inc push mov subb lea dec xor xor xchg jle push loopne mov xchg (bad) jg pushl dec xchg push push fdivrl ret jnp aam aam cmp (bad) sti (bad) (bad) ljmp mov test dec (bad) cmpsl mov push roll pop ficom ljmp arpl mov xchg mov add mov fcomip dec incl xor and jmp mov (bad) (bad) incl movsl xchg lea ds leave bound jg mov ljmp mov call aas fisubr mov mov dec xor ficom loop (bad) (bad) (bad) (bad) decl dec lahf je (bad) dec fcomip sub and and (bad) call adc (bad) (bad) (bad) (bad) mov sbbl arpl ja inc jp push push jne insb add icebp leave jg (bad) (bad) ljmp xchg pop and dec arpl in push push cmp iret pop pop (bad) (bad) (bad) (bad) fsubl or sub call iret sysexit add (bad) cmp je push add sub push bound scas (bad) call push insb inc push fistpl pop xchg cs nop mov jne (bad) (bad) (bad) ljmp and xorl adc push popf dec jae or pushf (bad) cmp sar (bad) lcall mov push jle lahf cmpsl in scas fwait jno pop push test lcall leave lcall inc fadds inc adc imul mov push mov jmp (bad) (bad) (bad) decl sbb movl jns jle mov push mov jno xlat insb (bad) (bad) (bad) jmp adc add repz aaa sub (bad) mov mov jno or (bad) arpl outsl cli (bad) (bad) jnp mov (bad) mov or and pop sbbl fadds ljmp or popf lods xchg cwtl mov inc jl in cltd lcall daa arpl sub jl insl out stc aam push out ljmp cwtl adc (bad) bnd leave pushf lcall test incl xchg ret ja mov inc popf lods inc sub add cmp icebp outsl insb pusha lock dec mov sub fcomip (bad) push dec pop sub cmp push rorl mov aad pushf push lret (bad) (bad) (bad) (bad) mov scas inc add and (bad) mov dec (bad) mov shl mov (bad) (bad) lcall pop test mov sbb loope insl mov add aad mov out (bad) (bad) (bad) cmp rcrl adc fdivr xchg pushf in lods push iret sub pop testb jo lcall (bad) (bad) push movsb and sub scas ror mov mov xor jecxz sahf int arpl lcall jge or xlat in (bad) xor mov sub leave mov (bad) cmc jns inc mov in popa (bad) (bad) lcall pop hlt cmp or or fwait inc inc js xchg insl adc (bad) (bad) (bad) jmp enter clc inc (bad) rclb fiadd mov pop dec sbb xor mov hlt popf inc mov add loop pop int3 js (bad) (bad) call mov xlat mov aam mov cmp pop rcrb ljmp data16 (bad) ljmp xchg lods xchg cmp pop jl pusha or ret xchg subl inc or add sub add push gs push inc shlb fsubrs mov (bad) lcall and mov pop mov lods aad fimull fbstp std aad xchg iret addb add adc aas cmpsb outsb push fs (bad) lcall dec lcall rcrl push addr16 inc mov xchg push xchg (bad) (bad) (bad) (bad) decl sahf addr16 lcall xlat lods mov scas out faddl xchg sub es jo (bad) (bad) (bad) call mov sub mov nop mov lock loope xor cmp dec mov loop aaa (bad) (bad) (bad) incl lock jae dec negl mov cs mov pop push mov (bad) (bad) (bad) (bad) jge jl flds or inc (bad) in sub cmc mov imul pushl xchg jns inc (bad) mov dec push fistpl inc (bad) jae shrb mov jns xchg jl sbb (bad) (bad) (bad) incl dec les das lcall jns shlb add xor (bad) js nop (bad) (bad) (bad) (bad) fadd push mov aas (bad) sbb test cwtl dec (bad) pop inc jb cmp pop inc notb ljmp icebp push insb add (bad) lea or and incl and jp xchg daa xor cmp mov and int imul (bad) (bad) fcomip cmp js out jmp and push jae adc jp mov fcom mov (bad) mov aas (bad) xor mov ret push inc xchg in in insb mov jmp mov jbe mov jbe cmpl stos cmp xchg or repnz push mov mov pop push mov jnp in int incl xor add pushl mov mov and push (bad) xor repz (bad) (bad) (bad) jmp push jno stc pop pop pop repnz sub das sub or adc in fldcw clc pop sar pop aas inc mov out jmp sub (bad) (bad) (bad) out scas mov rolb sarb and (bad) mov jp gs std (bad) lcall cmp xchg mov or aad mov call xor ret lock subl dec aaa std (bad) call push dec mov mov xor sbb xor dec xchg and xchg cli popf lea (bad) lret mov (bad) fbld pop mov mov sub stc mov or (bad) (bad) (bad) ljmp xor mov sbb dec jle jg xchg pop and push cwtl mov pop mov (bad) mov (bad) (bad) pushl (bad) stos fwait adc xchg lods sub insb jb dec jmp mov cwtl push dec jns pushl lods cli lcall pop movsb sub shl pop clc mov (bad) (bad) call and loop xchg dec fld1 js xorb fucom call popa icebp xlat adc jg lods enter jp les mov scas cs out adc sub lods int (bad) (bad) jmp add fcomps jg mov push repnz jo ds mov push add dec cmpsl aaa mov mov fmull xor xchg dec sbb push mov outsb fcomps fs (bad) (bad) (bad) mov arpl cmpsb stc add test sub lds push push ljmp call fdivrl jno ja push add push jg (bad) decl inc hlt std mov mov xchg pop xor push push or xor lcall ljmp inc xorl mov scas sbb inc mov movsl cmp std jb (bad) (bad) jmp xchg lcall and aad or test sbb insb dec (bad) mov fdivr xor fdivrs cmp cmpsb (bad) cmc adc (bad) (bad) (bad) jmp ret jge mov int3 les andl scas lods dec adc sbb ss mov and seta mov push pop (bad) ljmp (bad) fsubrs lret sbb mov and insb iret xchg decb inc sub aas imul call stos jle dec je sbb dec or and pop adc fcmovne (bad) (bad) (bad) (bad) call xor leave ficom dec mov mulb lods dec cwtl xor dec push mov dec add sub (bad) (bad) call scas mov lods leave rcll movsl ds icebp cmp icebp in jge add (bad) call leave int data16 pop xchg in lret and test inc xor rcrb xor (bad) xor xor js (bad) adc (bad) mov add mov cmp ljmp ljmp mov mov fs pop xchg xlat (bad) ljmp clc add movsl mulb out xchg mov or das clc (bad) ljmp inc jl push fcoml push push mov push mov cmp and and push pop gs or (bad) pop jle jp push out jle xor (bad) (bad) ljmp add lret mov pop mov aad fstps (bad) ljmp cli aaa lock (bad) pop repz test adc dec add dec fcompl addr16 iret (bad) lods jns mov xor outsb jecxz repnz push xchg sub lahf mov mov (bad) (bad) (bad) (bad) jl xor inc or mov ss adc fsubrl pop mov jg xchg addr16 std (bad) (bad) mov or mov cmpsb sbb add movsl cmp ss add rcrl (bad) adc dec jo xchg mov push jg lcall mov stos pop or jp jo in loopne fcmovu icebp (bad) jmp jns sub pop les dec pop fs outsb pop fucomi jecxz imul pop adc nop mov pop jmp iret (bad) loope int3 pop pusha popa mov push cmpsb mov sub xchg decl int3 sbb adc mov mov imul (bad) lcall mov mov stos sbb jl sub insl or adc jae add icebp (bad) call push xor mov lock fstpl fdivrl jg or (bad) (bad) (bad) jmp gs rol sbb das addr16 xchg mov icebp lea inc das dec imul (bad) (bad) mov dec insb bound pop repnz int3 and push cmpsb out in push jnp clc xlat aad pop adc inc hlt movsl out fucomip inc (bad) mulb roll pop pop cmovle push xchg enter out (bad) (bad) (bad) decl add lahf pop inc out dec add imul jbe pop push mov insb ret clc (bad) fisttp push jae (bad) into lods jb dec inc lds sub clc dec fcmove (bad) (bad) ljmp (bad) push sbb divb aaa jb sbb pop sbb les out clc stos adc les (bad) (bad) (bad) decl sub xor adcl insb jecxz mov sbb xchg test xchg xchg (bad) (bad) (bad) (bad) ds hlt sarb push jp es pop xchg cltd lds stos icebp ja push inc pop loopne idivb push adc in mov jae je mov lcall ljmp mov arpl out jl xchg (bad) (bad) (bad) (bad) jmp xor imul adc sarb gs pop int fisubrl loop adc scas mov fnsave mov ret mov sbb or (bad) jg mov xchg repz mov mov xor xchg jle xor popa and push sub call pop dec jg mov (bad) je dec sub (bad) (bad) decl gs jne aam repz push jo ret cld decl add cwtl pop lret (bad) js mov mov test cmp mov fwait (bad) jg mov jo aad ljmp into push lret xor xchg fcom mov in cmp lahf xchg mov cmp inc hlt jns cs inc push mov (bad) fcomip call lea nop mov dec sbb add lret inc (bad) cmc xchg jb jne jg (bad) (bad) (bad) (bad) fcmovnbe push and outsb lds lahf and fsubs adc lcall push test (bad) (bad) (bad) ljmp andl ljmp pop xchg fiaddl xchg cmc add divb (bad) (bad) (bad) mov push pusha xor movsl ja lock mov jecxz mov jne sub out (bad) (bad) (bad) (bad) cli sub gs lds fldenv jno inc das andl dec mov stos aad (bad) decl (bad) push in dec ret aam dec mov cmpsl fcomps std xchg mov mov add mov (bad) or push mov (bad) (bad) (bad) cmp inc mov mov adc xchg cmp jmp mov (bad) or (bad) (bad) incl loope pop and adc pop lock push push ss out negl in js (bad) (bad) (bad) incl mov jmp mov mov pop or add les or mov les (bad) scas or in (bad) (bad) push mov mov mov mov inc fcmovnu cli out cltd mov add or (bad) (bad) jg ljmp sbb pop lods sub add sbb (bad) pushl std (bad) jbe jne jmp sub mov mov dec lods (bad) sub push popl mov cli mov mov rolb loopne insl lods (bad) (bad) (bad) call or cmp mov add pop mov cmp ljmp push mov dec hlt push pop sub pop sbb scas cmp mov mov mov sahf and add scas push xor sbb push adc cld es call sbb pop mov jp xchg dec mov pop mov aaa mov lret (bad) (bad) (bad) pushl iret lods stos push or notb (bad) int3 pop out lods cmc xchg cld fidivrl test aam (bad) (bad) (bad) (bad) fmuls or dec fucomi push cwtl insb push cmpsl imul add int3 push (bad) (bad) (bad) (bad) (bad) jl enter mov and dec lods movsb pop movsl icebp and out inc mov add cmpsb das (bad) (bad) (bad) push sub iret es jo pop mov push pop pop sbb push jns cmc or xchg pop addr16 pop dec xchg (bad) pushl outsb cmp in test fiaddl (bad) (bad) incl (bad) push cmpsb mov inc int3 (bad) aaa dec gs push mov pop (bad) mov mov push lret je pop fprem add repnz (bad) cli cmc loopne into popa and cltd inc out cltd mov outsb fcmovne xchg fadd in out mov pop cld mov mov dec mov cmp push ficomp leave jns (bad) (bad) pushl mov push lret test xchg out (bad) data16 inc jno and cmp (bad) test (bad) (bad) (bad) call loop xor leave sahf sub adc icebp mov call test (bad) (bad) incl inc test push adc (bad) mov add lret adc and out pop aad add (bad) (bad) (bad) jmp mov aad ss rcl adc mov out and (bad) (bad) (bad) ffreep (bad) or rcl lahf cmp xor push push or insl pushf in or dec adc (bad) (bad) fcomip inc (bad) mov push xchg fwait inc aaa or int std pop pop pop pop movl (bad) (bad) mov mov pop mov mov jno jb cld push mov insl xchg sarl xchg ja outsl xchg and test jb outsl pusha (bad) (bad) (bad) jg (bad) mov jecxz das rcll test (bad) lods aad repz fs (bad) (bad) (bad) jnp and mov adc (bad) in cmc fistpll adc add (bad) (bad) ljmp pop je movsl dec pop or stos xchg ret fimul xor mov push jl (bad) mov (bad) decl adc imul push cs ja and push jnp mov icebp repnz (bad) (bad) lcall add lret leave sub push in icebp mov or daa std pop inc ljmp repnz dec lock into mov mov push mov adc pushl push xchg inc in jecxz mov aad insb incl add sub rcl jb xor or (bad) lcall fisubrl mov push sub aam sbb or (bad) (bad) (bad) (bad) sti jl nop mov fwait out push push mov pop sar stc adc mov ljmp decl xor adc jp pop push aad xor inc fnstsw shl mov decl ret in mov rolb std ds add popa aam lods (bad) aaa (bad) (bad) (bad) (bad) call push movsl xchg inc xor xchg or xchg xchg push and fidivrl mov push (bad) (bad) (bad) incl xlat es inc pop or hlt lret std mov xchg jb or imul mov pushl xchg jle and pushf sbb xchg insl and or dec jne ljmp xor movsb sbb out das ljmp (bad) pushl inc stos sub cmp test fcmovnb insl addr16 ss (bad) decl push and or adc add movsl popa (bad) daa pop (bad) ja push xchg (bad) ljmp in jecxz cmp adc inc popa jl gs sbb test dec pop xchg cmp (bad) push adc cmpsl lret imul inc clc fcoms (bad) mov in xor (bad) (bad) call (bad) (bad) mov daa mov test pop xor or push mov stos sub mulb (bad) decl sbb sbb mov mov jb outsl xorl add pop test sbbl call and cs loopne nop lahf jns push cmp repz das and out clc (bad) (bad) js in inc lret add cltd scas xor push adc mov cmp (bad) pushl sbb jns push fild sub sbb adc repnz push repz cwtl dec mov lcall (bad) sbb sbb xlat roll dec and je (bad) (bad) lcall mov xchg mov jmp rcrb push fisttpll scas daa (bad) (bad) (bad) jmp mov sub clc jo push mov fiadd mov (bad) mov dec inc sub or jmp pop in xchg iret sub dec sub repnz (bad) (bad) (bad) lcall mov lret insl in mov rcrb jp mov mov fmull sbb stos jg loop lods lds cld ficom (bad) in fldl2e mov jns mov xchg (bad) (bad) (bad) incl icebp call ja subb out adc pop or add inc jg adc das sar sub inc je cwtl outsb and in faddl or (bad) (bad) (bad) jl push cld xchg xor sub jns popf mov int3 sbb movsb leave mov into nop (bad) pop (bad) (bad) (bad) (bad) call test jmp mov jmp pusha ret cmc sti pop shrl xor (bad) mov clc mov xchg sbb dec xor lock (bad) jmp push int3 xchg call sbb sub xor lds daa (bad) dec jp jnp enter (bad) fist or pushl test stc ret (bad) xchg stos pop cld (bad) (bad) mov call mov icebp cmp mov sbb (bad) (bad) (bad) fucomip xor notl and loopne sub ds inc sub test sbb scas clc ljmp ficoml adc mov andl sbb mov dec inc div (bad) (bad) incl xor fldl inc lret fcomi push repnz cmc sub lret dec shrb adc lret gs fwait jo iretw (bad) mull (bad) (bad) ljmp sbb sti xchg dec (bad) arpl fnsave xor mov add loopne sbb pop inc jge data16 out mov aam mov (bad) (bad) incl cmp mov icebp addr16 pop fs (bad) push (bad) mov jl (bad) (bad) (bad) (bad) (bad) sbb mov je pop sarl mov dec cli mov jns (bad) (bad) (bad) pushl pop dec and out mov hlt jb mov frstor mov cmp jmp incl jae dec data16 adc test fnsave bound (bad) adc pop cmc xor (bad) fcomip (bad) mov and mov or das add add push sub mov sti jb nop lea sahf test cmpsl mov hlt insl xchg fimull (bad) decl mov (bad) pop jp pop jno jno ficompl out lcall aad mov (bad) lcall rep enter inc and sbb aas ljmp push jg jne lds outsl adc pop popa dec fnstenv (bad) (bad) lcall iret add push loopne xchg adcb xchg push inc mov sub push enter pop lcall or sbb subb sbb enter das pop and loop dec push xchg pop fcmovne out cmp cwtl inc lret les (bad) (bad) cmc jo add clc (bad) ljmp (bad) jb jnp imul jns inc mov add fdivrs loopne mov (bad) inc inc xor mov imul (bad) ljmp hlt movsl nop or ss pop lcall in ret or cld (bad) (bad) cmp fwait out arpl stos cs fcompl xchg iret mov dec add push push scas mov stos push pushf inc cmp out and out inc call inc (bad) jg adc in lods lock xchg fcomip adc cli inc repnz push lcall cmc push or jg lcall test notl cld out dec call xchg xchg or push decl leave daa fcoms es in mov clc fcmovnu arpl lods ja fwait jp movl push fnstsw and aaa mov out les sub cmc xchg inc lret das cli (bad) jbe xor xor inc adc cmp into mov (bad) (bad) lcall js incl or sub sub les add loope mov jl (bad) (bad) (bad) incl popf in bound js push dec sbb lret int lret sbb lret pshufw (bad) lcall mov fnstenv test push gs xchg jae sbb xchg (bad) (bad) (bad) jmp dec jns call das fisubr xor sbbl (bad) (bad) (bad) dec dec adc push mov and sub pop sub insl loop enter call and add ljmp lahf lcall mov (bad) mov je mov repnz scas adc inc aad (bad) pop lods test mov inc lock pop or jo sbb mov je (bad) (bad) (bad) pushl dec add repnz cs mov jl fdivl out mov scas mov inc clc and jmp jo fstps into cli cmp ljmp push imul fbstp (bad) (bad) cmp rep dec jne dec cmp cmpsl lds mov rcrl cld int3 jb adc add (bad) jmp out mov cmp xchg dec jns out popa in xor sub scas add and jnp lock xchg lret mov sub dec or (bad) (bad) ljmp ljmp rcll fisubl mov in addr16 outsb mov (bad) (bad) lcall jbe shrl push sbb dec ret inc xor ja add and (bad) (bad) (bad) call xchg movsb jg cmc andb stos pop (bad) adc movsb fisubr out mov jb femms jl (bad) (bad) (bad) dec sub aaa dec insb mov cmp jbe sbb mov mov lret pop shr dec mov (bad) (bad) call ret enter int pop mov test lods mov inc add rcrl loopne cwtl cmc push fwait mov movsb stc fucomip xor out rorl sbb inc cmp add lret jle out insb push in push out in xor lahf out xchg sar jg pushl shll ret or mov out sti lcall out clc incl ficomp (bad) sbb push mov (bad) cmp stos sbb outsb enter (bad) (bad) (bad) jmp jge mov inc jle xor (bad) push mov pop enter push sub (bad) (bad) incl sbb std idivl mov mov jge mov and mov mov fisttp daa pop mov pop push jo (bad) aaa mov (bad) mov mov jne pop cmc jle mov add dec jle mov jp jo (bad) (bad) (bad) lcall stos mov imul cmc sbb gs jae or dec xor and lret (bad) (bad) push push (bad) scas test jne (bad) adc push in daa jnp sbb jle xchg in jbe fwait inc (bad) (bad) (bad) (bad) jnp sub pusha mulb sbb dec loope add or icebp loop dec addb leave sbb (bad) (bad) dec sub sub out aas push add arpl sub fs or icebp cmp mov sahf movsl dec mov std out rol test pop jg bound adc out xchg (bad) (bad) incl add xchg fimul xchg jns mov (bad) (bad) jmp incl in popa repz sbb imul pop pop mov cmpsb (bad) (bad) lcall and shlb nop dec or cmp dec fidivr push inc sub (bad) (bad) (bad) ljmp adc xchg jno add add and mov aad push adc fdiv (bad) (bad) call dec dec pop lret call xchg push (bad) jae out xchg (bad) outsl lcall scas lcall fidivr jg popf cmp or pop mov pop es push idiv (bad) mov mov or jge cwtl or jbe jecxz decl xor test sub sbb mov sbb mov add shl (bad) ljmp jl rorb push dec (bad) rorb fcoml (bad) push push sub (bad) (bad) (bad) ljmp mov orb mov push outsl loop (bad) jo adc or mov stos (bad) (bad) (bad) incl mov fisttp xchg gs dec cmc test cmpsl ja cmp subb dec cli mov mov push xchg jg test pop ja pop cmp out xor dec subl fwait and (bad) (bad) (bad) incl fiadd mov outsl lea sti xchg fwait jae dec cmc push mov push jge jo adc (bad) (bad) cmp inc or fist jo (bad) (bad) (bad) jnp add add (bad) sbb lods nop inc imul push or add ret add aas mov (bad) call repz cmp ret nop out sub xor sub ds (bad) imul ficoml std pop add mov mov mov scas mov (bad) jg xor adc daa pop jb out or pop push sbb into fisubl pushl ret mov stc add mov (bad) mov shl cld mov dec mov xchg sub mov movlps fwait mov call cmp pop push jmp jne xor cmp dec daa lods jb subl outsl jmp jbe add lret (bad) jmp adc mov and pushf rolb lods bnd (bad) (bad) (bad) call scas fnstcw and adc xor std mov je imul (bad) (bad) jmp xchg and mov subl fildll fdivrl fdivrs jl (bad) inc std mov mov adc mov and dec lahf aam icebp test add inc in pop sub mov fisubr sarb mov or xor cs add mov xchg (bad) (bad) lcall cmpsb imul aas mov sub push jo movb out push xchg (bad) (bad) (bad) (bad) mov cmp leave lea add or xchg adc jg add fs cmp das mov and imul and cwtl dec mov cmp inc scas jecxz iret jnp or dec call (bad) (bad) (bad) (bad) jp xchg adc push ret xchg sub (bad) add or mov add jge (bad) (bad) (bad) call std (bad) ja inc clc jmp ret adc mov fwait int jl mov in in (bad) inc (bad) (bad) (bad) ljmp jmp loope pop sarb dec sahf loopne pop jo (bad) cmc imul xor (bad) (bad) lcall jbe push rcl mov dec aad mov mov cmovno jo (bad) (bad) decl fsts dec sub loope ljmp and fwait cltd in jp push sbb (bad) fcomip pushl xchg pop dec mov stc loop or lret mov jmp (bad) (bad) push jg push or loopne (bad) mov out fdivs inc sbb scas lds mov inc aas xorb add repnz stos add mov push jbe int xchg mov or rorl subb ljmp xor push pop icebp nop dec icebp popa ss mov (bad) (bad) (bad) cmp add arpl inc dec pop pop sbb or or aas (bad) push ljmp clc pushl cmp mov ret mov cmp lret movsl lods es (bad) (bad) incl jmp xor sahf mov shrl fcomip (bad) lcall cmpsb push jle sahf mov icebp outsb leave xor hlt or pop cmp imul out sub ja movsl jb jecxz ljmp pop bound outsb mov ja,pt inc fnstcw lea (bad) (bad) (bad) jmp inc inc mov out sub pop aam loopne cmpsl mov pop jmp mov (bad) (bad) lcall imul pushf xchg lods lret adc cmp cltd in ja inc loope adc sub jp jbe pusha into sub inc and arpl push and and (bad) (bad) pushl pop push sub rcr pusha loopne and dec (bad) jge in jle cmp aad dec mov out (bad) (bad) mov pop dec pop rorl or cmpsb pusha xchg xchg (bad) pop jo pop in daa (bad) (bad) (bad) incl fwait xchg jle mov push fisttp aam pop push mov pcmpeqb mov xchg mov ja (bad) lcall mov ss lock cmp adc (bad) decl pop sub in sbb out (bad) in daa push ja jns enter (bad) call loopne mov inc pop inc movntq daa and sbb stos xchg icebp (bad) jmp icebp xor adc adc fprem1 das push popa pop xor fdivs mov test into movsl inc movsl mov aaa xchg xor mov inc jnp nop pop clc (bad) pop inc xchg dec sub das imul add cmp lcall jne jne (bad) shl xor daa jns rcrl pop jg (bad) fistpll xlat mov pop insb cmpsb cmp pop hlt jmp movsb and ja sub xchg ljmp imul xchg mov push stos dec xor repnz test sar (bad) call lahf and data16 es test xchg (bad) jo aaa cmc aaa lods xchg adc xchg mov or (bad) jmp mul mov or and pop hlt jns inc inc cwtl sbb pop (bad) (bad) (bad) ljmp mov dec int3 fucomp sbb inc lea fwait lcall data16 sbb movsl lock cltd dec jns dec cltd call cld je adc (bad) call mov test mov mov or (bad) (bad) jg icebp inc (bad) fnstsw sub idivl fisubrl xor mov or sti jg ret bound push std add dec push ret push inc push jg sbb imul stos int3 daa (bad) sbb insb into push or cmpb (bad) decl or arpl pop test hlt in xchg popa mov sub out lods aam icebp cwtl (bad) (bad) jmp es inc xchg ss mov jmp xchg add (bad) ljmp mov js lods pop sar and add fldenv (bad) (bad) (bad) ljmp inc inc push jae scas pop pop shrl sub sahf cld xchg js in mov inc out dec (bad) (bad) fcomip loopne repnz test push inc cmpsb inc in pop cld lds rcrl mov (bad) (bad) (bad) incl cmp jecxz test jp adc xchg inc mov add push mov lock ljmp movsb idiv daa and lods sbb or inc fisttpll mov jg mov mov inc dec mov popl (bad) (bad) inc lret les (bad) fdivrp push js dec mov push lret xchg and xchg shlb sub stos repnz rclb icebp (bad) jmp std cmp dec inc sbb mov dec sbb cmp fmull push out jle jbe das popa adc jno or out xchg test icebp or ljmp popa pop pop and stos xchg mov mov sub pusha adcl lock stc insl out xlat scas int rorl jecxz push ljmp push pushf stc call lods cli xor mov dec dec dec sub sbb sub mov jmp jmp les xchg xor test stos ja shl repz std (bad) (bad) decl cmc repnz popl lock js je or jb mov xor stc sub (bad) (bad) pushl mov xlat stc xlat loop push incb pushf leave test aas imul dec out xchg dec (bad) (bad) (bad) (bad) push out ret iret inc lcall test cltd outsb iret ds sub lods and push (bad) (bad) (bad) call popf pop adc dec and int3 push jne jnp lock cli fucomi test repnz cmp ja (bad) incl dec lahf adc sub iret dec jge lret dec pop pop imul (bad) and mov or push xlat (bad) std lods jp pushf loopne (bad) (bad) (bad) (bad) mov push mov fbld add inc sbb mov jg cmp adc sbb cmp lods sbb lret (bad) (bad) (bad) dec arpl data16 imull push repz aad dec mov arpl std push das js sbb cmpsb arpl (bad) (bad) lcall pushf jmp xchg daa pop nop imul das mov in push loop ljmp (bad) xor push pushf inc add sub movsb (bad) pop jecxz (bad) (bad) (bad) jmp sub or jns cmpsl pop xor sbb jae loope fs (bad) (bad) (bad) incl loope jnp xor cmp pushf call fidiv push pop xchg aad mov (bad) mov outsl cwtl fidiv dec bound push pop adc mov jne or jnp (bad) lock dec sbb cmp stos (bad) cmp pusha cmp lahf (bad) decl mov pop mov xchg cmp adc jp (bad) (bad) jmp insl (bad) dec test fs mov std iret mov outsb test mov shrb cmp call xchg lods ss jbe sarb sub or inc cmpsb jl pop add jg (bad) mov mov pusha inc xor inc sahf xchg mov ret pop push and (bad) (bad) (bad) push out push out bound test out xchg push sbb push jae enter mov mov pop iret mov push mov pop add xchg fisttp and mov (bad) (bad) (bad) ljmp lcall cltd pop inc rcrb sbb jnp jp lret popa (bad) idivl (bad) ljmp or lret shrl (bad) ss xor jno ja jns (bad) jg and cld (bad) imul mov jb mov call sbb dec xchg pop dec (bad) sbb xchg test ret ret or test cs mov xchg sbb sti inc mov dec outsb xchg inc int mov mov dec (bad) leave dec mov add roll sub stc dec jo mov jne dec popf bound adc popf ja cli and mov xor pop mov dec addr16 xchg inc pop mov mov je das cli (bad) incl js fimul pop out ss dec fcoms sbb cmp (bad) (bad) pushl cmp loope (bad) sbb mov in inc adc (bad) clc jbe sub je pop and push xchg or add push jae mov in sahf jle mov leave inc arpl ljmp (bad) (bad) out lds sbb inc mov sbb xchg jle push pop outsb pop and push rclb lock jno stos outsb clc (bad) (bad) ja push jg adc and sbb mov mov ficomp pop fwait (bad) (bad) decl lret mov arpl iret dec jb sbb les fs shll ljmp (bad) adc enter sbb in mov pop daa pop mov aad (bad) (bad) call int3 xor daa and pop mov cmpsb push mov mov inc sub (bad) pushl sub out mov add adc repz add in (bad) (bad) call (bad) push xor int3 xor aaa push mov fisttpl hlt shl cmc (bad) (bad) ljmp xchg fwait cmp xchg jecxz and fisttpll in out and (bad) ljmp mov and int int3 dec out xchg and xchg jae jo lcall (bad) (bad) call mov test aam mov ss test int aam mov cld (bad) (bad) (bad) jg call cltd (bad) cltd les mov lods inc fs sarl fdivrp (bad) (bad) call int cmp push int3 jge push aaa fisubrl stc ljmp mov (bad) (bad) pushl jmp xor jnp add mov or mov sub popf negb (bad) (bad) jnp dec daa popa lds mov ret lods lods js xchg ret stc adc lock out dec xor stos (bad) (bad) decl std (bad) and ret pop fildll scas lret lret int fisub outsb mov adc or les (bad) int3 xchg mov stos ss inc xor mov pop sahf pop inc sar pop (bad) add push in xchg add jae (bad) (bad) call mov inc sub loope and push (bad) or sbb xchg xchg adc ret sub sar (bad) (bad) decl data16 xchg mov mov aas movsb cmp adc fidivrl aad les or (bad) (bad) ljmp mov push or addb mov or (bad) lcall cli or and sub loop add cmc pop jge jnp (bad) (bad) (bad) call and repnz iret push int3 int adc jnp scas mov pop (bad) insb lock (bad) call aas std adc push shr cltd xchg lret pusha daa and push or jns mov (bad) (bad) (bad) ffreep sub bound push loop mov xor test jno (bad) push pop insl sbb mov cld (bad) jmp sbb xchg in lods imul and xchg jno (bad) (bad) (bad) lcall or or add pop and (bad) test rcr call inc test jg and dec lcall clc maskmovq xchg mov xchg mov les (bad) scas sub sbb dec (bad) mov in mov mov jae mov in push xorl (bad) incl adc mov sar pop pop jnp mov fwait lea stos (bad) jg ljmp xor arpl ret mov push pop (bad) out std xor add (bad) (bad) jmp cli outsl inc aam mov in insl jmp jge jle enter inc jg loope sub (bad) jmp add cmpsl sahf and shl pop test (bad) fisub dec mov jg (bad) mov outsl sbb pusha sbb inc outsl (bad) mov (bad) decl xor fs sub ss xorl sahf enter or xor prefetch or (bad) rolb dec popl push subl mov inc mov mov or jg mov lods out push scas mov popf jb gs ret pop outsb clc sbb (bad) mov andl or loope xor sar (bad) (bad) decl pop mov inc incb mov mov ja and push push xor mov mov (bad) (bad) ljmp cmp aam mov mov ffree or sub daa gs push dec loopne and test jmp out push jecxz and jmp adc orl cmc adc (bad) (bad) pushl das mov sti ja jns,pt jne lret jb add mov dec aas jecxz (bad) pop (bad) ljmp mov nop btr pop mov test jl (bad) mov pop cmpsb hlt xlat jl imul cwtl (bad) (bad) (bad) lcall out jns mov jg andl sti xchg mov push push insl or jne call mov push sbb xchg xchg (bad) call stos f2xm1 repz (bad) (bad) pushl xchg add mov jo std aaa dec aaa scas jl in adc pushf push mov (bad) call adc sub adc or pop (bad) jecxz mov push xlat ljmp add dec (bad) mov mov jmp data16 (bad) (bad) incl inc lods push sub push pushl (bad) mov inc jmp xor decl inc and mov mov sahf bound mov ljmp ss push sbb mov sbb pop cmp in cmpsl in stc (bad) (bad) (bad) (bad) in mov in icebp jge bnd inc inc aaa addb mov sub fidivr jnp adc je mov mov add mov mov (bad) (bad) decl pop call or jne test rcll push cmpb pusha std (bad) pushl cmp push rcrl fildl mov (bad) jg xchg ret lock (bad) mull pop or cli popa mov ret or (bad) inc pop sbb shr and jnp sbb cltd dec loop and cmp sub (bad) mov mov incl call sub aad (bad) pusha or es mov data16 xor jl mov mov (bad) decl out mov jne in rorl ret pop push in jb jae add (bad) jmp sahf pusha dec xlat jne sbb sarb fmull pop dec push pop pop cld ja fdivr (bad) (bad) lcall dec pop dec adc ja test cmp and xchg imul xchg (bad) (bad) (bad) lcall or adc hlt cltd por in dec mov push inc dec roll xor sbbb (bad) (bad) (bad) lcall cmp outsl cmpsb cmp mov cmpsl xor xchg fisttpll cmpsb lcall dec out or stc adc and int in es sbb pop cli pop ljmp push inc xor fidivr shr dec mov fdiv push jle xchg cmpsl insb in jmp add call mul in fistp shrl pop mov (bad) mov mov insb mov add push mov mov adc push or test mov (bad) (bad) fsubrp pushf outsb or xor or pop out jnp frstor and lea imul incl pop jp push (bad) lods push (bad) jb pop jbe jns test fbstp adc (bad) (bad) call in mov ss inc mov ss icebp pop add xchg jmp lcall (bad) (bad) push pop and frstor (bad) mov lea (bad) push js mov xchg xchg push imul push mov jge dec in cs inc inc aaa pushf adc mov (bad) (bad) lcall inc je jne,pn xchg ror mov leave xor addr16 pop stc in xchg stos (bad) ljmp subb or push push pushf cmp add (bad) (bad) (bad) sti push mov mov in inc sbb jmp add xor fcoms loope fcmovnb (bad) call lahf cwtl pop cs mov stos xchg inc (bad) jmp push pop push sti push stos ss mov mov (bad) mov repnz (bad) (bad) lcall or pop and jge jp xchg (bad) mov dec inc int3 out in lods adc and movsb add (bad) (bad) (bad) cli or imul mov push jecxz jle sti or sti adc in (bad) (bad) in jmp loopne xorb lds add mov sub jge outsb icebp hlt mov jno (bad) ljmp cli gs xchg xchg ror out imul xchg jp loop add (bad) lcall dec add xor dec mov lds mov sub rcll (bad) in mov aas rcr test add sahf fwait js mov push repz stos xchg lds std lret (bad) incl fsubs shll insl in dec les add sbb dec ds repz (bad) (bad) ljmp nop rcll iret out mov cwtl inc in and pusha xchg push gs add ret scas and or scas nop (bad) (bad) (bad) decl or fcompl adc inc cli imul aaa xor mov icebp (bad) (bad) clc out pop fucomip adc cmp call ret push jg sbb enter add (bad) decl jne pop jmp dec iret mov push ret roll push movsb (bad) (bad) (bad) jg movsl (bad) mov jg arpl lret (bad) jg rcrb pop cld test iret popa jle pop (bad) (bad) (bad) jmp imul in loopne push mov leave mov cmc mov inc or arpl (bad) call adc inc clc insl fst sbb popa xchg and repz mov movsl mov sub lods stos shlb and cmp (bad) (bad) call hlt div push lds imul les sub jbe cli repnz pop (bad) mov pop dec cmp (bad) (bad) decl jp scas adc mov mov repnz pop lods jmp in sbb xchg inc test cmp jp push cltd data16 cmp mov and idivb mov push mov dec pop (bad) inc aad ret push push or lods push in popa (bad) (bad) (bad) cmp and ja jle adc adc lret icebp pop test xchg adc push out xchg mov fnstsw jecxz ds (bad) jle scas xor ss (bad) (bad) (bad) cmp imul jne (bad) test aad bound aaa stos lods jnp dec cmp jg (bad) (bad) fbld add inc xchg arpl mov pop pushf dec jne xchg bnd or (bad) decl fidivrl aam sub lods clc mov and add add cmp jl repnz mov mov (bad) icebp loop mov cmpsl (bad) int (bad) (bad) (bad) jmp jb xor mov or jmp xchg out stos pop (bad) sbb out jo mov popf xchg (bad) jmp push dec pop push and ss jmp aad jp scas popa xchg xchg (bad) decl dec adc push sub sub scas pop divb (bad) (bad) (bad) ljmp cmp dec mov ja int jl sarb dec rcrl mov inc sbb (bad) (bad) (bad) call jmp sub das jmp popf push jae cmp fstpt cmpsl mov ljmp jg (bad) dec (bad) gs test pop cmp push loopne lret push scas xchg mov enter std sbbb ret jl and and cmp data16 test loopne or mov cltd pop sahf daa mov ret add cmp arpl movsl and ljmp call fstps sarb pop notl jae jle loop std int3 (bad) (bad) (bad) ljmp std adc adc repz dec clc sbb stos sbb es (bad) (bad) (bad) decl movsb hlt stos inc sub inc scas leave imul xor mov jle test (bad) incl data16 and and xchg mov and inc inc jecxz (bad) call jns mov subl xchg mov pop and inc pop inc inc mov or inc sbb lds cli ljmp mull sbbl (bad) and xchg fcom rolb daa (bad) push pushf hlt xchg jae mov fs xor sub orl test mov add xor mov sub fisttp mov (bad) (bad) decl pop testl sbb rcl insb notl push and (bad) (bad) pushl pop in inc inc push inc repnz in sti xlat fbld (bad) andl daa sbb jl jo push insl mov bound bound xor loop jp pop lock ds mov jae jnp mov sub loop mov rolb xchg mov (bad) pushl pop leave xchg jle and fstps mov sub rorl cmpsl dec decl push sub lods sub and shrl pushf xchg aad stc fldl enter incl sarb push in add jg adc push outsl inc pop es call pop mov fiaddl pop in xor mov jecxz cmp inc inc rclb loopne je icebp arpl xchg xchg movsb mov pushl inc lret adc and stos ljmp fldt leave sar (bad) lcall or cmpl cmc xor pop jp push add push fcmovbe xchg std fwait outsb fs or mov movsl add scas iret push jae sbb pop push fistl lahf mov (bad) (bad) (bad) cmp mov jno scas (bad) mov leave or add out clc nop fisub (bad) lcall incb pop fwait mov mov jge and inc lock adc pop in push das sub ret imul das sub sub je sti xchg hlt (bad) (bad) (bad) incl cs xchg and pop lea cmp jg fildll or cld pop cld (bad) jmp dec (bad) je sbb mov test les (bad) (bad) (bad) decl fs xor xchg push jmp fdivrs scas jl in lahf lret lret (bad) (bad) (bad) lcall jge xchg adc (bad) jb movsl and or out leave push (bad) jge pop (bad) mov (bad) jmp repnz xor (bad) cmpsb or les pop pop dec testl lock and hlt sbb sub xchg mov imul addr16 inc push inc and cli xchg mul mov lock mov out cli (bad) jmp fisubr (bad) mov test stos push int3 jbe or xchg (bad) jg decl daa sub or mov pop pop adc xchg gs popf and inc pusha fistl inc sbb cwtl jns jae xchg (bad) insl rcrl mov aad ljmp or mov aad movsl in jp and xchg fdivrp mov mov push jle sbb aaa push jo and adc mov fwait cmpl xchg mov jns int test fwait ja dec scas lret iret sub cmp cltd fidiv cmp mov out dec icebp lods test std (bad) ljmp inc lea cmp int3 in pusha test sbb (bad) (bad) decl hlt clc in xchg push movl int3 (bad) mov sbb sti std adc (bad) (bad) (bad) call fldenv fstl xor mov pop sarl gs xchg mov (bad) (bad) (bad) call dec xor arpl out int cltd sub xchg pop xchg sub loope (bad) decl int3 (bad) pop xchg mov test pop movsl repnz cwtl adc (bad) aaa push popa cli xor cmp in xchg (bad) (bad) ljmp mov stc cmp jge mov imul or or (bad) (bad) (bad) (bad) ds stos cmp fmuls inc cmpsl sbb lods cs push or dec (bad) fidivl mov lret insb or incl or mov mov lods stos adc sti sbb test cld imul xor xor mov fcompp out cwtl icebp or decl std imul out pop jb xchg xor inc add push sub cmc (bad) (bad) (bad) lcall mov outsl and xor into xchg jl (bad) (bad) (bad) (bad) incl pop jp cs xchg sbb dec ljmp das jp xor ljmp xor rorb and push (bad) cmc add jne jg lock dec lods incl incl in inc cli fiaddl push (bad) (bad) (bad) dec out sub xorl cld cmpl mov das inc pop (bad) (bad) (bad) incl push jge lret mov stc dec mov xor mov pop pushf into cli (bad) (bad) (bad) cmp pop sahf clc sahf cld lahf jno out sub dec mov aaa fmull and push push jge (bad) ljmp scas inc sbb test not cmc or test icebp cmpsb iret sub inc pop (bad) (bad) (bad) inc imul sub inc mov dec sbb mov push test (bad) decl ret sub xchg aad mov in int3 xor mov ret xor or (bad) (bad) decl (bad) push lds pop lods orl mov add jno jp (bad) (bad) ljmp aam out nop std clc scas inc dec and (bad) push add cltd inc or cmpsb repnz (bad) (bad) call enter test jecxz xor jae sub push aam jo out arpl or adc hlt inc mov mov test inc jno xor shlb jo pop adc dec xchg test (bad) loop pop cmp shlb repz js clc jnp add pop mov ss dec pusha mov and xor fcomip stos sbb lret cmp arpl cmp pop call (bad) (bad) pushl lds loopne jl rcrl (bad) rorb jb int3 jmp in ss (bad) (bad) ljmp push cmp aas jne outsl mov (bad) stc addr16 jbe lret faddp cltd hlt pushl mov or xchg sahf loop loop or push adc fldl (bad) jg or pop sti mov jecxz mov sub push (bad) call insb icebp js mov xor jns jae aad daa sub int3 and sub lret stos jae push xlat lock jae (bad) (bad) ljmp mov fnstsw cmpsb push imul andl jle mov decl outsb cmp push ljmp cld fcomps mov fdivl (bad) call xor daa movl jo and mov dec mov and loop (bad) std adc mov xor pop inc jno je xchg pop xchg (bad) pushl jge pop push push lds jmp xlat mov cltd xchg fisttpl (bad) pushl dec xchg or les int xor sub xlat (bad) jmp pop push or push imul cmpsl idiv push (bad) dec sub (bad) rclb mov (bad) decl adc adc es fmulp dec jmp mov rorb movsl cmp mov push lds xchg ucomiss (bad) ljmp xchg repnz adc xor std stos hlt or rorb (bad) outsl pop (bad) dec daa add (bad) (bad) inc mov inc or mov sbb jo fs or inc or lods stos fs mov rcrl mov lock into push sarl sbb (bad) jg lock adc mov and pop and (bad) (bad) jg and mov lds pushf das xor ds adc sbb divb (bad) (bad) (bad) decl iret mov jae les pop fist push cmp push inc negb jmp sbb aaa dec xchg sbb jl popa and out adc mov decl scas or js insb pushf and mov push js jecxz pushl mov aam mov push xor sahf jns (bad) (bad) (bad) call incb loop and mov addl nop stos cmp push hlt fdivrp pop cmc (bad) in int push testb sub stos stos (bad) int3 test jp fs cli (bad) (bad) incl pop (bad) (bad) lods mov pop push and (bad) (bad) ljmp jne adc or fiaddl stos add inc addr16 push cmc loopne pop enter (bad) in (bad) incl sbb out (bad) add adc mov scas mov cld (bad) (bad) jmp lret lret (bad) mov pusha les xchg fdivs pop arpl sbb (bad) (bad) call xchg lods jmp imul fmull mov aam xchg push mov xchg cwtl ffree (bad) (bad) incl into sbb or push rcll and pop test (bad) jo inc lods in ret clc hlt cmp call sbb mov movsb fstl dec or cmp lock xor jmp aas (bad) mov imul mov pop sub popf mov jge ret mov sbb (bad) (bad) (bad) inc insl lret inc lds std add lods outsb outsl mov mov jae adc popf sub jecxz xor (bad) (bad) decl adcl xor cmpsb jmp xchg pop mov push push movsl out into add (bad) jecxz fwait add outsl mov pushf scas xchg hlt jnp (bad) (bad) lcall or and roll or xor adc (bad) (bad) (bad) lcall std xlat (bad) test lock ficoml mov ja sbb pop lods mulb (bad) call xchg std pushf cmp xchg imul hlt adc clc or mov insb cli mov test clc (bad) (bad) (bad) jg ds sahf lea (bad) mov jo arpl gs or mov pop hlt jg (bad) xor jnp ds movsb jns push loopne jl sti dec (bad) ljmp lret or mov lea and jmp daa test adc gs icebp rorl lods push idivb mov xor pop (bad) out cli decl aad add mov push (bad) hlt imulb fs dec fcompl jecxz fisttp stos not jmp mov imulb loop jno pop pop pop cmpsb aas push (bad) (bad) (bad) mov push fdivl jno add xchg cmpsb inc nop mov jno adc add fsubl icebp adc lret push ds enter cmc jg cmp xchg push sub sub pop jge iret mov out clc xlat fs aam fcom mov add mov inc sti ret jb xor hlt (bad) ljmp pushf mov cld xor iret lahf cmp rcl (bad) (bad) (bad) pushl pop cltd scas popf cmp (bad) adc std sub fdivp xlat jno dec je mov (bad) (bad) fisubrl pop sub pushf jg into aam or clc lahf popa out je adc lods sub (bad) (bad) (bad) dec les sbb std aas or out sbb cmp mov push sub push cmc cmpsl (bad) (bad) (bad) (bad) ljmp ret pop sbb sub cmp gs sbb xchg sub (bad) push imul in (bad) mov icebp lcall cmp cmovo ret stc inc cld mov xor popf test (bad) push decb insb sahf mov je or mov push jge inc mov mov (bad) (bad) call mov dec into jno mov sti ds out je inc mov enter (bad) xchg xlat (bad) (bad) (bad) sti adc and mov cld cmpl mov mov (bad) (bad) jg arpl clc inc cmp clc cmp pop ja es jmp mov (bad) (bad) incl jbe or mov mov jp scas lcall (bad) jmp jno xchg nop into (bad) (bad) (bad) incl xor das out xchg fcoms adc or push imul and adc pushl or mul les jp jmp (bad) ljmp mov adc jmp (bad) fcmovnu test cmp mov fdivr mov adc mov popf and xchg out scas or bnd (bad) (bad) jmp xor xchg enter pop lcall add stc scas lret insb cltd adc notb mov sub cmpsl fst (bad) dec clc mov and popf push out aam lret (bad) ja mov loop (bad) push arpl pop (bad) jmp jns jg outsb push adc aaa xchg call adc push jae or mov pop xchg (bad) (bad) pushl mov (bad) pop pop scas add adc repnz out js (bad) movsl lods or lock incl std arpl ffree aas jecxz add loopne dec xchg clc sub ljmp icebp das mov or push gs cmpl jb adc test nop inc test xor call (bad) incl cmp sbb cmp sbb fwait pop fildl mov lahf inc lret std cli (bad) (bad) lcall jmp rcll aas xchg lds dec pop sub cmp add (bad) out rol xor mov lds jge add add and jmp sti pop (bad) ret push or and jge (bad) mov push pop into pop sahf (bad) (bad) (bad) (bad) pushl or push cmc imul lahf cmp sub (bad) xchg and (bad) (bad) jmp mov mov jle adc pop arpl js repnz add and sub sbb (bad) out das loop xchg lea cltd stos (bad) ss scas pop (bad) movsb int3 into dec test movsb enter (bad) (bad) out cli test (bad) fidivr push outsl dec mov xchg loop xor popf iret call or cmpsl imul mov lahf adc inc xchg sahf arpl data16 xor int3 push (bad) (bad) (bad) ljmp ficomp mov mov popf fisubr insb push mov mov pushl sar in pop mov dec and mov pop (bad) (bad) (bad) jmp jbe and mov sbb xchg (bad) addr16 hlt pop lret mov aad aad pop or dec pop jb jle adc adc push mov jno add test xchg jo (bad) decl call loopne fist dec enter lcall cwtl ret (bad) lcall movsl scas jbe fisttpll sahf xchg dec jmp call xchg and cli pop and repnz scas push cld pop in pop jno js jg imul xchg and js mov mov (bad) (bad) in sahf mov test mov sbb xchg mov add (bad) les ret incl arpl pop dec test (bad) mov in call jg lret add in push mov jmp into xor mov stos scas clc inc imul and pushf lea and fcoms mov mov mov pop rorb mov cmpsl adc pop cld cwtl sahf mov push pop aad fwait mul sbb clc (bad) call add fcomps dec mov add les cli mov insl icebp xor stos sbb es (bad) call (bad) shlb mov (bad) call std adcb sbb mov lods sbb push cmpsb lret sbb mov (bad) incl adc sub in and test test (bad) fild repz and or xchg icebp je pushf test and pop aad push lods arpl jg add out repnz sti push xor lret xchg dec loopne and pusha sub sarb shl lock sbb mov sub subb sbb push (bad) (bad) (bad) mov and data16 mov push (bad) ja dec lahf and loope movsb jl xor andl ss xchg popf loopne jb push dec sub inc sbb xchg int3 mov enter (bad) jg jmp add out pop sub (bad) das das jmp lds jl pushl decl ret pop jne mov xchg inc pop or xor pop (bad) (bad) (bad) (bad) js imul stos fcmovbe or stos movsb pop fstps push out in push (bad) (bad) (bad) (bad) mov nop or int push cmp inc sub lods sahf jcxz in cmpsb xchg cltd enter adc (bad) (bad) (bad) (bad) jno cli fisub push jmp js fadds or jb add inc xor or dec or (bad) (bad) jmp adc or mov sbbl xchg mul fwait (bad) (bad) (bad) (bad) ficom out lahf lods pop cmp pop and data16 call pminub xchg das (bad) (bad) (bad) decl mov fsubs and add test orl mov fsubrl (bad) (bad) (bad) (bad) mov mov lods adc repnz ds (bad) xchg fsts (bad) jne rorb jmp and cltd pop dec push daa nop mov sbb cmpb (bad) lcall push xchg fs insb cmp jb (bad) gs sbb push test (bad) (bad) (bad) incl bound mov push das pusha das mov sbb lods mov xor inc call xchg jns fidivrl sti and or xor fldl push xor pop rorl or sub cmpsl and mov fld or (bad) jg gs repz inc adc sub jmp js test dec xchg adc dec scas push cmc xor aaa addr16 decl xchg loope inc mov xlat std sub loopne sub mov xor and test and call cli inc xchg in mov fnstenv or ljmp cli cmp pusha in ljmp mov inc sub dec push pop cmp mov mov cwtl cmpsb push mov push andl in lock test outsb fwait dec out push clc mov pop jae cmpsl and movsl fstps (bad) (bad) (bad) lcall mov dec sarb push sbbb add dec test fwait lods pushf dec in fs mov push mov mov jbe cld movsl sahf enter insl (bad) (bad) (bad) inc mov or inc aad outsb pop in push orb mov inc adc (bad) stos mov call dec arpl jge dec cmpsl mov sbb das cli pushl push shrl aas test leave icebp adc clc enter or mov rol (bad) (bad) (bad) decl punpcklwd and inc js or pop inc inc pop pop sbb add (bad) pushl movsw mov and mov dec and test inc or pop jae ret dec adc (bad) jg sbb pop (bad) xor repz lods push in loopne aad fildl xor push sarl cmp (bad) dec cmpsl mov out xlat (bad) mov std mov or fstp andl int3 mov sar decl xchg push cmp sub jge fisttpll pushfw ds (bad) ds pop add or pusha and ds dec add ja sub (bad) call fidiv hlt into cs cmp cmc jnp pop movsb arpl and (bad) (bad) (bad) call push jnp and nop push out sub sub mov fcmovu xorl sub (bad) (bad) cmp sbb rorl jl out roll mov (bad) (bad) (bad) incl sahf fcoms inc or xchg sbb xor testb cmp aad push bnd (bad) mov adc adc dec iret fisubr fsubrl aam (bad) (bad) jmp jbe jge dec in dec jg jae sbb repnz pop andb nop mov (bad) ljmp inc sub pop adc jbe cwtl inc xchg int3 xorps sub (bad) lds fwait (bad) (bad) (bad) fldt loopne std test sub jl xor xor lcall mov test xchg push sub add ret adc mov fsubp and int3 pop jno jle mov fmull xchg adc or or repz aas test jne pop int3 bound pop mov out hlt call xchg sar (bad) (bad) (bad) jmp test daa add lret mov imul fsubl in std decl add ret push sub sbb in xor cli mov mov xor jae mov ret xchg push clc xor clc (bad) ljmp push out pop mov repnz jnp mov jecxz in jb das push icebp incl cmp xor test or ret (bad) (bad) (bad) ljmp outsl dec int jl into sti mov pop jecxz jne daa fnstsw fwait sbb bound xchg (bad) jg lcall (bad) inc addr16 adc int3 arpl xor xchg (bad) (bad) (bad) incl insb xor sbb nop fimull divl adc (bad) sbb add (bad) (bad) (bad) ljmp jge movsl lock xchg adc fisttpll jg pop add inc add insl call (bad) es (bad) jp hlt jbe mov pushf lds test repnz push xor aas out imul movsl jns aaa mov jns xchg lods sbb lods cwtl loope mov dec (bad) (bad) lcall cmp ss mov int sahf jb mov push incl (bad) movsb push add fnsave (bad) cmpsb mov (bad) (bad) (bad) ljmp stos lahf mov test xchg and iret ss enter (bad) jl negb flds ds and loop rorb out mov gs cli dec pushf inc pop cld (bad) (bad) cmp push (bad) cmc sbb in cmpsl adc push dec mov clc (bad) decl sbb ljmp scas or xchg add pop pop (bad) (bad) (bad) jecxz,pt rcrb popa mov inc int3 mov xor xchg ss les lahf jo fwait (bad) inc adc out ret pop addb popf jl push lret (bad) (bad) cli adc push sbb dec arpl xor sbb int3 inc adcl xchg or mov jmp adc out cmp push aas inc inc shl dec (bad) (bad) jg mov mov sahf scas shld xchg out sub and loope aas jns xchg jmp add push xchg pop lcall lods in hlt jns imulb sub pop outsl jnp leave mov cli push orl incl add jg jl outsl or aaa rol dec sahf (bad) jg (bad) sub mov aam mov or sub cmp (bad) call cli test test jo mov jmp lcall or (bad) loopne das cmpsb sub (bad) (bad) call push jbe xor insl lret aam pop xchg jg push inc push or add pop pop (bad) (bad) (bad) decl into dec aaa insl imul mov lahf pop nop lcall push aam (bad) (bad) sub in inc mov push push xor movsb shlb aad pop jno mov hlt jecxz (bad) (bad) (bad) pushl aad cli inc ljmp jbe sbb add sbb out dec inc idiv ja jmp lea mov or fistpl (bad) mov sbb clc imul je lock push leave scas push xchg xchg cmp lds jno mov (bad) call mov out mov repz dec aas adc fildll idivl insl inc lods dec (bad) or (bad) rcrl pop imul lods mov inc jb call cmpsl outsb sarb pop jmp enter push adcl inc pop mov inc mov push les add (bad) dec cld inc push cmp inc lods in daa mov push add sarb (bad) (bad) jg (bad) scas push in sub inc lea cmp dec repz mov mov leave push ltr mov push inc add sbb push bound (bad) (bad) call rorb lds and test fisttpl push jb sbb xchg (bad) (bad) (bad) (bad) (bad) dec fildl push nop sub jae fsubs cmp rorb (bad) pop sub imul aam test test es push cwtl insb mov es mov lret scas insl scas (bad) (bad) (bad) jmp and pop mov xor test jmp inc mov and sbb repnz fild (bad) (bad) (bad) call pusha xchg or mov add out and cmpsl test lock mov (bad) (bad) cli clc dec adc mov mov fwait sub iret bound (bad) (bad) cmp fsts push mov hlt add sub mov (bad) call outsb and pop push test pop cwtl iret mov fadds dec fwait cmpsl or adc inc jl add add ret scas fmul bt ss (bad) pop fwait add cmp (bad) jmp (bad) mov push repz inc jbe push or jne xor push adc inc mov (bad) (bad) ljmp dec outsb call aas xchg xchg aas ret sbb daa ss addr16 (bad) (bad) (bad) lcall fcomp pushw fcmovnb popf add add gs jl xor cmp addl (bad) (bad) jmp adc dec mov ret loope nop push pop ficomp sahf (bad) (bad) (bad) decl mov add adc sbb imulb push dec cld out pop cmp neg jmp and jecxz cmp dec je push adc jg (bad) decl xchg out and pmulhuw sahf imul pop dec (bad) (bad) (bad) (bad) fstl sbb pop dec jmp push (bad) jo push (bad) jecxz dec pop sti pop dec imul pop decl (bad) addr16 pop roll cmp inc sar (bad) pushl jge movsl mov (bad) mov mov repnz fdivrl cmp mov (bad) (bad) jg inc cmp popf dec add (bad) mov mov ss inc xor int3 loope loope xchg (bad) (bad) (bad) ljmp dec dec mov or push xlat xchg jecxz push ret pop aam push lcall or fistp (bad) (bad) (bad) incl adc insl idivl and mov sbb jno and pushl jb rolb popf (bad) ss leave out jmp mov clc leave xchg cmp mov mov (bad) (bad) incl outsl mov lret dec ljmp mull call repz jle into dec pop addl and mov inc das add or (bad) (bad) push xor das sub std or mov test xchg pop xchg xlat pop or mov pushl cld jmp mov mov cli loop sub ss dec add sbb dec lcall and sub aam mov lods dec mov sub decl sbb call mov jbe iret movsb mov sbb sbb call int3 test pop cmp shrl out push mov inc or push (bad) (bad) jmp sbb scas cwtl mov push aas aaa bound cwtl (bad) and and mov adc add in sub imul (bad) hlt fcoms mov ds lock inc jmp jnp cmp out push (bad) sti inc sub clc (bad) lcall sbb cmp imul imul adc stos ljmp out (bad) gs insb jg scas push xchg (bad) cmp jo jl ss jo push (bad) (bad) (bad) call sub dec stc js adc add lock push lcall lods xchg (bad) (bad) (bad) incl jb (bad) push sbb fnstsw or or imul (bad) (bad) in sbb sub pop popf jmp xchg loop std inc or icebp xor fimull addr16 pop jge in sub test cld inc cwtl xchg aas dec cmp inc jge pop popf adc ljmp cli lcall mov mov push xchg cmp inc lret and jbe push cld (bad) (bad) jmp sub dec es ret dec and divl (bad) (bad) (bad) incl popf adc into pop xchg pop daa sbb jns lahf add cmp js (bad) (bad) push movsb adc ss jmp enter mov in xchg jle incl push push cmpsb add mov das sti loopne sub mov test mov (bad) (bad) (bad) dec in aad sub stos cmp in fidiv loop lahf repnz inc inc mov int3 pop outsl (bad) or (bad) call cmpsl leave scas dec (bad) cli mov dec pop pop int3 jl lea sti fiadd nop (bad) dec (bad) (bad) (bad) pushl sub add jmp adc inc dec xchg (bad) pop push xchg jb scas (bad) (bad) (bad) lcall (bad) icebp and cwtl aam loope add mov inc fild sub mov (bad) decl daa dec mov bound jmp push bound roll ss or (bad) in punpckhbw push cmp xor loopne dec mov push sub (bad) (bad) jmp or xchg mov mov ds sti push adc (bad) imul (bad) (bad) incl out test mov pop out das mov jg cmpsl xor (bad) (bad) ljmp xor pop ljmp xor xor ljmp movsl xchg fs (bad) (bad) decl sbb rcr or scas rcll in inc dec add cli arpl dec xchg stos (bad) (bad) (bad) push adc xor dec xchg inc cmp arpl mov push cmp (bad) (bad) ljmp mov sbb lret push aad push mov repz push ljmp push stc incb dec negl jne sahf (bad) incl jl adc test sub sub (bad) lock (bad) (bad) ljmp fwait in pop aas insl in inc pushw dec mov xchg xchg push out pop outsb mov dec add (bad) (bad) lcall or pushf addl jno and sbb (bad) (bad) (bad) incl jge and test sub mov cmc jp sub mov (bad) int mov (bad) (bad) incl in cmp or loopne scas inc dec dec test dec out cmp popa loope (bad) jmp dec pop les lods aad test push fsubs push arpl (bad) std xchg fdivrp (bad) (bad) mov outsl outsl push mov (bad) jecxz lods pop push xor add ret pop in push (bad) (bad) (bad) incl icebp daa daa insl cmp jl mov ret inc lea push scas push cmc (bad) pushl pusha fs sahf xor mov mov pop fnop lret ljmp add je imul sti rep jae sbb (bad) or push daa (bad) fistpl out loopne pop arpl jno lods jbe ljmp arpl pop dec mov (bad) (bad) (bad) (bad) jnp divl shrb add mov retw sbb adc (bad) (bad) (bad) pushl adc shr cmp sbb fcomps cmp mov sbb dec jg (bad) jmp xchg insb fsubs mov sarb xchg loope les pushf (bad) (bad) (bad) call cmpsb (bad) fbstp push in outsb iret jmp pushf inc add jne mov arpl (bad) (bad) call adc cmpsb push sti insb jge cmp or repnz dec imul mov lock (bad) ljmp add pop jmp lahf jne adcb cmc lock cmp lret (bad) (bad) jg ret cmp fistl dec cmpsl fdivs adc lock int (bad) (bad) lcall inc ret rep dec outsb mov mov scas jecxz rcrb xchg dec sub (bad) (bad) (bad) mov mov test jbe jbe xlat lods push pop pop rcll mov or push (bad) (bad) (bad) (bad) mov gs add pop push xchg and cli test out lea (bad) dec aas push sti push dec sbb jnp scas idiv push orl sbbl add insl or fcoml and call xor es adcb jge inc mov sub lock fucom stos icebp les insb cld (bad) jmp jb stc insb xor pop push clc push and cli pushf jecxz mov ret leave nop mov mov xchg push (bad) (bad) (bad) ljmp sub xchg or jle push rcr mov sbb xorl pusha (bad) call (bad) call add xchg push inc and xor and aaa push mov aad (bad) (bad) (bad) decl cli aaa xchg add test adc jg or lret hlt pop fdivrs lret imul stos int3 mov mov sbb into imul cltd mov ljmp dec sub enter rclb cmp push std inc lahf popa aas sub out std cltd sbb stos mov inc push pextrw pop iret idiv ja decl xor enter repnz mov es (bad) call hlt jae popa jp mov push and and dec or mov (bad) jmp movsb dec sbb stos push mov test pop popa pop fisubr out adc xlat xor sti (bad) call call lock gs ss mov lods (bad) stc xchg adc or inc add sub dec add lret ficom jne sbb mov cmp stos inc pop sub (bad) out clc outsl stos ds jae mov outsb pop cmp mov push icebp cltd cli std repnz (bad) (bad) inc and gs scas add or mov ret mov mov lcall and (bad) xchg shlb sbb and xchg inc rcrb (bad) sahf ljmp lcall xorl insl push xchg cmp and cmp ret in (bad) (bad) (bad) push cmp loop sub add dec in or sysexit mov cmp scas cmc inc lock or (bad) (bad) dec sbb pop sub add and ret dec cli es xor fsts decl pop mov dec pop fiaddl loope mov (bad) (bad) (bad) jmp xor pop pop stos adc sbb jecxz (bad) mov out mov push dec mov and (bad) (bad) ljmp leave popf cmp push es sbb frstor das lea inc ss or cli pusha imul dec sub fcomip test mov pop xor sbb leave or ds (bad) (bad) pushl rorl jo in adc cltd pop fidivl cmp (bad) popa sbb (bad) (bad) (bad) lcall insl enter jb pop sbb adc dec adc add adc lsl (bad) (bad) (bad) decl and pusha js in pop fidivrl cwtl lahf and outsl lcall aad add fcompl mov inc pop and ret inc jmp loop inc (bad) (bad) decl xor sbb mov cwtl fildll mov xchg (bad) (bad) (bad) call and sub test sbb pushl and xor (bad) cmp imul sub fsts ret stc sub sbb (bad) mov (bad) (bad) (bad) decl sbb cld jecxz ja scas inc xor (bad) sub mov lahf adc sub sar and pop fsts outsb push jb adc mov arpl adc dec dec pop dec int inc sbb sti mov jmp repnz mov mov arpl jmp (bad) enter push dec movsb call add add mov in mov mov (bad) (bad) ljmp mov subb shrl cmp push lods sti jbe leave flds andl stos ja mov and cltd (bad) pushf fwait pop arpl cmp mov mov mov inc inc sahf jbe sar and cmpsb lock add add (bad) incl mov mov scas mov push repz mov dec (bad) lcall jb mov xor and pop aad mov fwait gs (bad) (bad) (bad) incl cltd insb roll mov mov (bad) movsb pushf (bad) cmp mov push adc incl cmp inc js jns in xor idivb cmp sbb test mov push fidivl and or incl les mov jle mov push cmp scas clc (bad) mov int3 xor arpl xlat shr inc inc and mov mov cli dec push xchg lea cmp scas dec mov xor jnp aam fcmovu (bad) (bad) call loope pop stos xlat add jnp adc ss pushf sub shlb dec test out dec inc ficoml imul stc lcall xor insl negb into repz std add push push pop aam pop in dec rcll call fisttp int3 push xor xor stos adc and jno push pushf push inc push (bad) (bad) (bad) (bad) in repz loop sbb adc xchg sub and jle test pop sbb (bad) sub fbstp jns pop inc dec cmp jno out add (bad) (bad) jg in sbb adc movsl jecxz loope xor (bad) repnz (bad) (bad) (bad) cld xchg aas mov fstpt jae dec mov mov (bad) xor mov (bad) incl jae dec movsl loope (bad) into fiaddl lods inc rcl scas roll out aam gs (bad) (bad) (bad) decl jbe lds fs in mov adc pop dec subl hlt (bad) (bad) jmp rcll jo jne push dec lock test sahf mov jp in push enter inc dec test sub add repz inc in pushf bound (bad) (bad) cmp mov mov sbb dec inc sbb sahf movsl aas adc sbb (bad) pop cmp push cmp jge ja and (bad) insl inc push sbb es or outsb inc mov push fild movsb sbb test aas and push sar fwait and in cltd (bad) lcall mov (bad) (bad) lcall pop or mov mov into mov icebp lods pop stos jecxz imul (bad) mov dec pop bound jl push ljmp xor rorb dec imul (bad) (bad) (bad) cmp sub ret lret cmp mov push mov mov icebp lahf aaa cmp mov (bad) (bad) (bad) decl mov adc ds xchg mov mov movsb loop outsl jl sub mov (bad) (bad) jmp or int or dec fs lds jno fs mov push imul (bad) pushl mov lods in dec push jl lret pop repnz mov or ret lret data16 test (bad) (bad) (bad) (bad) decl lods pop pop xor jb ja mov out cmp push sbb repz (bad) (bad) (bad) (bad) mov push imulb or xor pop sbb movsb ss aam (bad) dec nop in add ljmp rol je xor addr16 xor jmp in jbe xchg (bad) (bad) incl aam mov ljmp mov push test (bad) (bad) (bad) std sahf push sub arpl (bad) pop js xchg add xchg and in enter std ds dec (bad) (bad) (bad) inc insl lcall adc mov das iret add or loop,pt ds (bad) (bad) (bad) fnstcw fnsave pop mov add xchg arpl (bad) (bad) inc lods mov cs icebp (bad) (bad) call ja js into sub ja xor adc jne mov ret lcall sub push js jns adc sbb imul (bad) (bad) (bad) jmp (bad) hlt fstps cmp imull pop inc jmp fwait mov insb adc mov ds jge push inc push pop mov (bad) (bad) (bad) lcall sub bound xchg xlat pop repnz icebp mov xor adc movsl popf cmp outsb pop cmp (bad) push fstl mov ja sub cmp (bad) jg mov and dec adc cmp mov push mov ljmp and sub jnp push xchg mov scas test rclb jmp pusha jo dec sbb mov xor jno or mov jo fstpl xchg cmp addr16 and lcall (bad) out cmp in ret xor mov aaa repnz mov (bad) (bad) (bad) call cld jo pop cmpsb and mov jle fstpt out cmp repz pop sub pop fisttp (bad) in lcall cmp (bad) mov sub xor adc hlt test jns call lcall xchg pop aad lahf dec add mov fdivrs mov cmp cmp xor pop lock data16 jge and (bad) sahf popa push stc jnp fidivl xchg enter ss (bad) mov shlb imul test push (bad) mov sahf or mov (bad) (bad) pushl outsb dec popa lea add xor push test xchg mov push or adc lods out (bad) (bad) (bad) ljmp lock ja jne pop subl sbb inc push fidiv push sub (bad) jg incb pop cmpsl fisubrl push mov out and sarb xor (bad) (bad) jmp pop loop sbbl cld sbb fdiv cmp add jecxz sar out clc call mov jle arpl test xchg jnp add gs and cltd test (bad) (bad) (bad) jle in xor je jnp pop push xor stc popf cli mov cmp imul sbb sar cwtl and and lcall loop xlat repnz jge jb (bad) (bad) (bad) aas cmp push sub or mov cld jge movsb mov int cltd cli push pop dec test in mov testl push jl insl pop test gs xchg sub loop div fbld call (bad) das and push push loopne cmp sbb and adc jmp xchg sub fwait (bad) aam (bad) (bad) call inc fs pop add in mov jbe je or mov cmp (bad) (bad) incl (bad) sbb dec sub dec mov fsubrl push dec pop popf mov std or cmp (bad) (bad) ljmp or jae pop xor sub cmp xchg lea (bad) jmp and (bad) mov add sbb mov push push stc sub jecxz or sub mov adc lds test and jle decl jno lcall fstl (bad) push into cmp xor cs (bad) jmp lret inc sahf push popf jp pop ret xor push jl sahf jmp (bad) (bad) fild hlt insb cmp or sti mov or repnz lcall jmp mov bound ss movsl or sti in cmp cmpsl (bad) dec cmc call loopne ja out xchg loop fsubrs jne test inc pop push out fdivrl or je xchg es sub test add (bad) stc xor (bad) mov out rcrl pop cld (bad) (bad) lcall lods in cmc and xchg mov loope sahf pushf shrl (bad) cld fidivr jmp jnp sub push arpl aas pop sbb pop pop (bad) (bad) (bad) (bad) jge test sub xor or ss (bad) in mov out jb xor mov pop pusha stos fcoms jns fsubrs cld sub mov xlat add (bad) (bad) incl mov ljmp pusha pop ss cmpsl add jge scas pushf add mov das xor pop mov mov clc add (bad) imul decl cs mov les adc pop pop mov sub test pop jle sub (bad) ljmp jo das mov clc jb add xor xor lods xor loopne inc loop inc (bad) (bad) (bad) (bad) cld cmp int jo lret and dec (bad) ret cmpsb push jb,pt mov (bad) cwtl cmpsl xor das sar mov ja daa xchg sbb fstps xlat cmc cmp fucomip xchg jg (bad) incl xor cmovbe sub add cmpsl (bad) xchg ja fs (bad) (bad) lcall setno adc ja nop push inc push rcrl mov stos int3 cmp fwait mov ret inc cwtl push ret jmp add mov les jno aam dec (bad) (bad) (bad) jmp jne cmp pusha ret push outsl dec pop jne dec or aaa cli or (bad) (bad) (bad) std xchg jnp outsb sbb jecxz mov pop jecxz sar inc push enter push inc (bad) (bad) (bad) jmp pop cmp cwtl ficom mov xor cli int3 push outsl lock or jmp (bad) pushl leave xchg mov pop or pushf mov insl call pusha xor xor add daa (bad) (bad) (bad) ljmp aaa mov pop data16 les mov test addr16 leave mov xchg pop lret (bad) lcall arpl negb rol aam dec dec jns mov femms mov popa sarb ljmp inc dec aaa stc into out in adc mov mov jnp stos sbb pop cmc push adc xchg out inc mov hlt (bad) jmp cltd add leave sti arpl scas adc dec aad jecxz pop mov (bad) (bad) dec sahf repz loope jne inc leave pop repnz ret and mov mov or (bad) (bad) decl sbb ret int mov dec imul fdiv lods into sub cmp cmp (bad) ljmp out pop xchg outsl mov into jns mov pop lds (bad) (bad) pushl imul mov jecxz jmp je add fwait xor loopne sbb lcall and sbb in cvttps2pi out clc (bad) (bad) clc incb out push loop dec movsb inc xor add xor (bad) (bad) pushl fidivr lods lods aad sahf pop jp adc xchg or shl jnp (bad) or hlt (bad) (bad) lcall sub mov cmp push dec call xor ficompl (bad) lcall test push push out mov lock add js scas lahf (bad) (bad) (bad) (bad) jl jle add inc jge mov xlat fistl mov les xor mov jo push stc push xchg pusha stos (bad) push out push das jmp xchg inc scas mov ja fisub pop insl loop arpl ds or sbb add (bad) (bad) (bad) (bad) cmp mov jle jle inc push loope lods pop mov hlt pop mov pop and cmp scas int3 push mov imul inc insb pop fldcw jl push xlat sub dec clc and pop sarl icebp scas (bad) (bad) (bad) decl cmp inc and aam cmp cltd aad aam loop xchg je inc negl (bad) jg xor pop movsl jge and adc pop divb leave stos (bad) jp (bad) lcall mulb pop stos icebp rolb (bad) lret push popl (bad) (bad) inc push into mov add lock scas addr16 pusha in mov (bad) (bad) mov aam and sbbb jmp dec dec jmp imul or push (bad) (bad) incl aaa mov pop jecxz push adc adc call sbbl fwait cmp jge lds sub or clc xchg inc (bad) (bad) mov dec add pop sbb jbe xchg or jo les scas and mov push xor (bad) jecxz cld gs (bad) (bad) jmp icebp mov (bad) dec (bad) jp jmp cmp jb ficom sarb (bad) in jae das jnp xchg or les and sub add mov mov cwtl xchg pop mov ret dec hlt mov add mov push sbb dec les (bad) repz mov (bad) mov es subl jnp xor fwait mov or dec and into repnz mov jl nop jns mov cmc pushl sub dec (bad) je jno cmp mov adc (bad) (bad) ljmp fs (bad) cmp leave xor cmp dec add or sub mov lods cwtl das pop icebp (bad) js faddp imulb push xchg mov push into movq cs int3 xchg hlt loopne add dec mov add daa stos ds in je cmpsb stos (bad) incl xor (bad) mov dec and push cli imul out in popf mov decl shr lock (bad) mov inc jmp fcmovu inc push pop jae jnp (bad) jg pushf mov sub lods imul push (bad) (bad) (bad) ljmp push and jmp sub out ret jle push call (bad) (bad) (bad) (bad) fisubrl rcrl fcomps mov nopl out xchg jl (bad) (bad) dec ds (bad) iret mov cmp and push pop arpl (bad) ljmp lds sub push fiaddl pop cmp push sub (bad) ljmp mov push push lahf int3 mov ja fdivs rcr xchg or (bad) (bad) (bad) (bad) ljmp cmp jnp push lods mov repz xor xor mov insb xchg add (bad) cld mov (bad) (bad) jbe mov inc scas (bad) (bad) lcall loop popa ja stos pop mov sbb arpl ljmp aad mov decl cli mov inc sbb jb shr leave fldt adc dec dec (bad) (bad) (bad) call mov lock cmp inc ret push and xchg xor icebp ja mov mov (bad) (bad) mov add jl iret xchg fadds mov stos xchg sbb movsl jg xchg or (bad) daa jbe pushw dec movsl adc les mov sub ss sub adc clc (bad) (bad) ljmp shrb out push test xor imull mov and out and fstp loope (bad) ljmp lods mov push aam sbb leave add xchg roll inc stos sub jmp and fwait push insl outsl cmp sahf int3 mov sbb (bad) psllq popa add and call (bad) call and cmp sub jl cmc fucomp rcll xchg pop push add mov lcall jge sbb sbb or xor ljmp (bad) jle popf or dec push jge in mov cmp std sbb mov (bad) ljmp push pop daa loopne aaa mov das cmp ja aas sbb mov sub mov mov mov out pop sbb sub fnsave pop add hlt fwait mov adcb test fdivr in jae in fstpt (bad) inc sbb mov inc (bad) clc adc pop jns cmp (bad) push outsl jae test mov add (bad) ffreep out xchg sub sahf outsl add test popa pop mov lret dec test push (bad) (bad) (bad) decl add stc mov cld dec ja mov movsl pop ja arpl (bad) (bad) mov ljmp aam int3 sub mov test (bad) (bad) (bad) (bad) (bad) mov aad pop inc movl test js and adc stos movsl jns inc pop sbb mov (bad) cmp and arpl xlat inc lods pop int3 insl push and pushl test scas jl test les sub mov lock je jle mov scas clc (bad) call cld inc mov adc and jne icebp out mov xor pusha (bad) mov lods sub (bad) pop jne (bad) (bad) out jp jmp cli or fcoms popa fdivp jmp fidivl in fwait jo or (bad) (bad) (bad) jmp cmp stc pop (bad) scas cmc mov sbb adc dec dec in hlt lea (bad) (bad) call xchg mov sti sub stc rcrb ljmp jle daa clc int3 ljmp xchg ret dec ja (bad) aam inc mov fldcw sub loop lret (bad) stos aas jg push sbb sbb mov dec jge fnstenv lahf es adc in ds loopne (bad) (bad) (bad) (bad) (bad) (bad) aam sarb adc fwait outsl pushf int ss dec popf dec int mov fcomps add int3 push (bad) (bad) (bad) (bad) lcall sub sub stos rcl fistpll jnp mov (bad) rclb (bad) (bad) lcall jmp stos mov sbb push inc roll push or mov mov adc aaa cld (bad) sti sbb xchg lret ja inc xchg adc test (bad) or push idiv (bad) out cli pushf divb hlt repnz add lret loope aas stos add fistpl add push std call enter sub enter adc bound movsb mov (bad) (bad) lcall lods mov sbb push rolb pusha mov mov xor (bad) decl pop sarb fldenv repz or ret mov stos (bad) xor mov (bad) incl xor jae adc push push sub push or test (bad) (bad) push mov dec inc fiadd in mov cli cwtl push or js push jle test mov pushl clc push fisttpl cmp (bad) lock jl (bad) je push (bad) (bad) (bad) lcall xchg push test push sahf ret gs push pushf dec push mov andl push dec (bad) (bad) (bad) pushl push or scas push fsubrl sub fnsave inc pop test mov (bad) (bad) (bad) mov add shr add test push (bad) mov clc fnstsw inc sar dec mov push out adc in (bad) mov or (bad) (bad) pushl add je jbe mov ret outsl lret (bad) jb fwait mov lcall lods inc and and test push xchg scas xchg xor lcall mov call lock roll jnp ficoml and repnz sub jg andb clc test xor sbb les (bad) (bad) inc enter fcmovnbe or sarl es imul jmp js (bad) (bad) decl aad cmp (bad) sbb dec add mov add mov repnz xlat movsb inc incl mov ds sub sbb or jg dec inc add (bad) (bad) (bad) ljmp movsl dec dec pop sbb adc push lods stc stos int push and into and fcos (bad) (bad) (bad) ljmp pop scas ret xor or je stc xchg fadd dec mov cs (bad) (bad) incl test sbb xchg pop clc js lret pop jno cmp mov push fisttp pushl leave lahf sub aam xlat (bad) (bad) (bad) jmp movsb nop shll inc mov outsl sub mov mov jl cmp (bad) fcomip jmp pop mov pop cmp push and xor imul pushf mov popa imul cmp in jle movsl fbstp pushf xor push jnp mov scas jne xchg ja (bad) (bad) decl and or (bad) outsl pop pop lret and icebp stc xchg gs or lret xchg (bad) (bad) (bad) ljmp sahf jns or iret loope lods pop lcall jle sbb leave mov (bad) mov into mov in jp iret (bad) mov push movsl movsb xor inc js jo gs jbe inc test nop outsb jno inc movsl and (bad) (bad) lcall test xchg addr16 xchg fcmovu mov mov sbb sti jl insb cmp (bad) jmp dec xor dec gs popf addr16 add ja aas cwtl pop dec lret xchg (bad) (bad) jmp (bad) mulb mov or sub xchg jg cs js imulb in sub test pop inc cmp mov (bad) (bad) (bad) call mov icebp gs mov inc addr16 into je (bad) out sahf call test popf cmpsb jge (bad) (bad) call xor cltd push inc sbb mov jp mov int3 addr16 mov sarl es das js xor (bad) mov jb or in enter stc sub (bad) (bad) (bad) stc adc sti inc scas dec roll add xchg test cmp je and lret popf and xchg cmp push xlat inc bound lds incl ror jnp dec cmp and out icebp or sbb xchg decl popa xor mov movsl lret mov push fadds shrb (bad) (bad) ljmp adc in lcall inc push mov pop loop lock push inc sbb pop hlt (bad) dec jp stc or fstl adc imul jle inc (bad) (bad) pushl (bad) cmp jle sub jge mov sbb and (bad) (bad) pushl or (bad) jg adcl pusha frstor mov cli in push jbe or mov popa call pusha into or (bad) (bad) dec xor cmp fidiv int mov sarl pop adc pop cld shr sub (bad) ljmp cmpsl jg stos aad cmp (bad) lret test dec mov int add sub (bad) (bad) (bad) incl push repnz cs lahf xor (bad) lret pop mov je inc (bad) mov xor inc in mov sbb lock aaa sbb data16 loope into into aad add imul adc cli (bad) call jl push out fbstp test lahf iret pop orl sub rol arpl (bad) jno lcall and push mov jg stos insb adc push xor clc loop lock loop add aaa negb stc inc (bad) sub pop aaa (bad) mov lahf sub sub mov cmp ficom xlat (bad) (bad) decl out sbb push fcoms jle,pt ficoml sti shrl (bad) (bad) jg out aam loopne in cmp push dec and insl fisttpl inc cltd js repz cmp (bad) (bad) (bad) jg mov in decb bound sbb mov dec mov push cld (bad) (bad) (bad) mov adc mov fsubs push sbb mov mov add (bad) incl in pushf aad dec add mov lcall in sbb int adc pop cmp dec pop test imul cmp loop or adc (bad) (bad) incl mov cmp add pop jbe mov and sub imul aaa sub es repnz dec stc repz into dec xchg mov mov rcll mov xor pop icebp jle add (bad) pushl jmp push jg mov (bad) push into jbe test mov (bad) (bad) (bad) call scas aam xor imul lea dec call jmp int xchg shrl (bad) (bad) (bad) jmp movsb mov pop pop pop aad dec inc cmp sahf hlt adc xchg repz xor popa mov call add lods lods mov xchg pop gs sub fwait sbb xchg xor dec lret pop cmpsl mov push or (bad) (bad) (bad) lcall loope sub cmpsl in sti imul sbb cmpsb or adc xor (bad) (bad) jg out inc popa mov cwtl das gs or inc mov (bad) (bad) (bad) inc jle test dec fstpt add (bad) icebp orl lcall sbb ja sar call jg push mov push xchg out inc scas pop jmp (bad) (bad) (bad) jg inc lods out cltd jg lret pop lock popf fs je insl dec push sub (bad) ljmp aas in nop daa mov dec enter adc cmp in repz dec (bad) incl dec mov jo jmpw add lea mov (bad) call jbe enter push rcll stos repnz mulb pusha inc aas jns dec cmp int3 stos mov fcompl clc test xchg aad insb dec nop or cld pop inc sbb adc mov inc mov jae (bad) (bad) inc stos push mov pop fsts jns lods loop push (bad) jne bound pop pusha (bad) cmc (bad) (bad) call lahf inc shll lds fcomps or into mov push pop mov (bad) add loopw imul (bad) hlt das stos mov mov (bad) (bad) fcomip push lods xor iret mov movsl cmp dec jp ret ds ljmp jl into outsl cmp mov lock stc cmc mov (bad) (bad) (bad) lcall xor and rorl adc mov mov cli in loope jg (bad) (bad) cli mov mov iret jns fistl imul movsb (bad) (bad) (bad) decl scas and push jp,pt mov pop adc jbe jae fldcw mov xor rcrb or push ss (bad) jo xor imul mov int3 repnz or mov cmp test (bad) in sub cli (bad) push lret add test test insb fwait jne sbb push icebp jae clc jmp bound in sbb cmp lea int3 push sar jg sbb nop xlat cmpsl jl repz (bad) cs mov mov aas or jmp pusha mov inc mov scas cli or stc mov lahf (bad) jl rcrl pop jns (bad) (bad) jmp cwtl add mov or push loop and int push imul or (bad) (bad) decl fwait stos out es mov mov mov mov je mov (bad) (bad) (bad) call out popf inc sub mov pop cltd aas sub pop xchg fsubrl in (bad) inc rcll xor std or jmp iret jb add (bad) incl les fidivr sub and jbe xchg jne cmpl (bad) ljmp mov mov sbb repnz gs xor scas lcall sub dec push push es inc subb jo loopne (bad) push std xchg (bad) (bad) mov xchg (bad) (bad) (bad) incl jae mov sti add cmp fwait pushf sahf testb fstps int3 (bad) (bad) incl (bad) xchg lods lret imul lret les aaa data16 rcrl outsl fcomip push stos out push inc adc pusha push bound outsb inc or les push jae mov add std dec sbb outsl call push in mov cld pop cmp (bad) pushl arpl or setle push fistpll aaa lret sbb aas (bad) add fdivs cmp addl pop push fisubrl lahf mov push cmp dec std cmp loope sti push pop mov mov pop pop mov push lods push jge xchg xor inc mov aad inc pop les cmpsb cmc push aad jge cs inc test adc lcall imul cld or pusha pop (bad) shll xor cmpsl das push test clc call (bad) jge mov sbb in fcoms cld jbe call std jg pop rclb mov sub adc cmp icebp (bad) (bad) ljmp push pop push es push rolb rclb (bad) pop pop (bad) jg fucomip insl ret xor lea xor xor lret outsb xor (bad) mov das sbb inc movsl cs mov push add cwtl leave sub clc jge jge mov ljmp cmp jg pop repz push push ljmp adc (bad) mov or out xchg inc or das push sub loopne lahf jmp pop (bad) popf mov (bad) ljmp dec xor xchg push jno sbb add adc sub lds xlat shlb (bad) (bad) (bad) (bad) mov or fnstcw (bad) repz cli cld dec fnstcw xchg and push (bad) call xchg cwtl inc stc lds (bad) stos cmpsl (bad) fnsave mov call (bad) jge hlt dec sbb pop mov cs mov push pop cltd loope or fsubrl (bad) pushl addr16 divl pushf xchg mov mov jge insl mov or (bad) (bad) cmp lods inc mov push sub outsl aam lea cmpsl (bad) (bad) (bad) mov pop addb xlat push outsb addl pop push xor in (bad) (bad) (bad) incl mov lcall cmpsb lock mov ret inc mov das ljmp add pop addr16 mov adc xlat (bad) (bad) push xor push rorb xchg mov (bad) jg jg or sbb and hlt fbld movsl fstps fisub lds xchg add cltd lret mov fs mov push xlat out push mov or ds jecxz fcomip lods fdivl insb and push inc mov cmpl int3 (bad) xor (bad) (bad) mov inc int (bad) xor mov dec or jb out cmp int jg lods out pop pop (bad) cmc call jp cmpsl push je inc clc fnsave jns (bad) pop ljmp (bad) push mov leave (bad) sbb adc inc insb aaa out lods xor (bad) jmp andl mov xor aam das xchg xlat pusha add ljmp repz fbstp fsub fildll dec mov shrb adc dec in (bad) cli fcomip decl adc addl stos jno push dec outsl xor hlt mov cmp ret (bad) es cmp cmp cmp sub pop lret in push and push mov sub jl mov cmp mulb fsubs and insl inc jp (bad) lcall push adc popa jbe jb adc pusha mov (bad) (bad) (bad) pushl aam cmp fldenv cmc sbb pop cld xor pop add xor jno dec movsb mov (bad) (bad) (bad) decl dec adc ja xchg dec aad in mov in jl cmc hlt ss or in (bad) (bad) (bad) jmp push movsb cmp push pop loop loop xchg or out dec mov cld outsl mov pushf aad es pop push (bad) (bad) call and jae cmc sub jbe cmp out int3 lret insl push or pop jnp iret adcl dec sahf scas dec (bad) dec loop inc dec icebp sub mov (bad) repnz mov out insb sbb fcos (bad) jg out adc cmc outsb (bad) cmp ss adcb push and xorps dec and into fsubl pop sbb push push cli incl cs std call icebp xchg cmp (bad) (bad) (bad) lcall and les or pop inc arpl mov in aaa xlat (bad) loope inc stos xchg (bad) (bad) (bad) (bad) ljmp jo (bad) inc jns mov inc rcrb dec add stos in xor pushl inc jns sahf lock xor pop push shrb loop lds lea test cmp scas xchg shll loop xor lahf xchg mov test mov pop xor daa (bad) (bad) (bad) (bad) ficompl cmp movsl clc jnp aas xor cli push es xchg mov ljmp lods leave pop stos movsb and push xor jecxz scas mov and fcomip ljmp movsb mov push cld scas out aad data16 xchg outsl addr16 (bad) push push sbb lcall (bad) ja mov jbe xor imul andl leave ljmp or in mov stc or mov addr16 (bad) (bad) (bad) call jnp ret sub sbb nop in jb pop sub and jb out jbe loop (bad) (bad) mov aam dec mov mov addr16 sub or dec xchg stos mov pushf adc adc lods fldl mov cmp lock sar rcrb lret mov dec inc push xchg sub cld js nop adc aad imul push cmp push push dec in lea (bad) (bad) (bad) jmp lock or outsl jl lahf imull adc (bad) notb repz cs sar (bad) call inc bound fcmovnb pop loope jle jp aaa bound sub js stos mov test lahf mov call xor xchg (bad) (bad) (bad) (bad) clc divl pop shrl push and or xchg push ret and mov add icebp (bad) mov xchg das std loope sbb fadds jo daa fs (bad) (bad) fistpll push lods cltd push sbb pop xchg push pop insl pmaddwd mov (bad) (bad) (bad) pushl in and lret mov mov and fincstp lods push dec and sub inc cld mov mov les out sub inc inc insb (bad) jg lcall or mov jmp lock gs mov or (bad) (bad) jmp inc in ljmp add and jno cmpsl ret les in stc inc fnstenv (bad) decl in or cld mov sbb mov and ret push mov pop cmc (bad) jmp fsts aad push icebp lock xor push adc rorb lcall incl adc mov cmp xchg das loop aam scas xlat inc ret mov jmp daa in fcoms mov sub test stos arpl (bad) (bad) incl adc jo sti xor jle lea sbb (bad) ljmp xchg adc or fisub sbb jb inc adc subb arpl (bad) (bad) jmp adc jg dec rolb cmc adc shr fsub fidivr mov mov call out push mov pop adc and xchg jmp movsl (bad) xor dec mov in das cmc scas push sub or adc push les in and add (bad) ljmp arpl enter add or out inc iret sbb dec (bad) rcr jae sub cmp xchg jbe imul imul dec xchg outsb nop pop aas cs sub and jg out pop in popa data16 test cmpsb lcall mov inc je mov andl in jnp je jmp iret je inc mov (bad) (bad) (bad) incl in aaa fwait adc mov ja cmp fidivl stos mov fcomip cli push adc jae mov pushf movsb xchg jo mov adc (bad) pop ss adc lcall pop and sub mov sti push xchg cmp out lods mov ljmp add les aas jge ljmp xchg lcall mov cmp add mov lahf imul mov dec (bad) (bad) (bad) lcall sarb ss sbb ret in cmp push xor push fwait (bad) (bad) out sbbl sub pop xchg ret adcl jl das adc (bad) (bad) (bad) dec fwait mov mov cs push adc jae xor movsl mov add xchg push fwait (bad) push jmp icebp xchg (bad) xchg rclb adc addr16 xor das clc jmp xchg mov in insb pop mov jge dec adc push or cmp xchg push jge xor mov cld sub cmp lcall into ljmp (bad) (bad) (bad) jmp popf arpl inc fwait pop inc mov pop mov gs push shrl (bad) (bad) ljmp add clc push jno sbb inc inc or xor pop dec stc xchg sub mov adc mov (bad) (bad) ljmp fidivrl sbb arpl out sub mov dec cltd mov mov in dec inc (bad) (bad) (bad) (bad) jns jo cld popa adc cld pusha pop js cmp loopne or das lods orl (bad) (bad) (bad) incl push adc pop push sarl test (bad) mov shlb or jg pushl inc mov ja scas dec jge stos cmp arpl mov pop jne das jnp ret jg dec xabort cmp lea jo push mov jecxz or pop pop xor adc and mov ret adc (bad) (bad) jg lock movsl pop mov les imul sbb insl push ljmp fidivr dec jl xchg xorl mov aad mov stos inc sbbb jmp inc mov mov (bad) es push lcall xchg xchg repz icebp xor insl sub and lock (bad) (bad) ljmp jno pop pop fmul fldcw jge pop xor clc (bad) add (bad) jg sahf ja xor inc std hlt ja push pop mov sub adc ss mov aam cmc dec sar inc (bad) mov loope bound push std cli cmp (bad) ljmp (bad) jbe add fsubs rcrl mov js pop cmp (bad) ljmp movsb sub mov test repz push pop mov or (bad) cmp loope pop mov sub and mov xchg mov negb sbb cmp jg aas xor ficompl mov (bad) (bad) pushl ja (bad) push ret jo popf sub lret jmp mov or (bad) lcall push call ret inc cltd inc mov xor movb int3 mov pop ljmp sar jge ds mov (bad) loop lret lret negl cmc or mov popa fisttp lret cmpsl lods adc add imul (bad) (bad) incl (bad) lods aad or fisttpl pop mov pop scas mulb (bad) (bad) (bad) cmp cmp dec movsb andb ljmp add fmuls (bad) ljmp push cld inc inc in (bad) mov arpl cmp lock (bad) jmp xlat andnps jbe dec xchg push cmp outsb fs lods and jle stos (bad) lcall fisubrl std inc mov xchg imul sub out push add (bad) fucom (bad) mov jmp mov faddl inc jo (bad) (bad) call jg (bad) mov fstl imul jo jecxz sarl (bad) add (bad) out clc mov jge xchg clc iret jae mov sbb popf (bad) ss adc jle loopne ja clc jmp xchg xchg cmpsl cmp lahf fiaddl (bad) (bad) (bad) ljmp aam popa pop xchg cltd adc push jb repz add add (bad) ljmp cli mov and ficoml dec aas jle loopne xchg inc (bad) (bad) (bad) (bad) call lds sarb jmp jns icebp jns mov inc mov fistl (bad) lcall push and dec fld mov add fsub inc cmpsl packssdw push inc xor pop test (bad) jmp and in int3 ss ljmp or inc pop lret inc rorb lea sbb dec (bad) (bad) decl add sahf xor push mov jne sub push xor mull dec xchg adc pop adc mov (bad) (bad) jg (bad) loope adc xlat mov mov mov popf jge pop push ss in sar (bad) ljmp pop imull inc bnd ja bound cld or data16 and (bad) (bad) ljmp jnp jge stos mov (bad) lcall imul jp mov (bad) (bad) (bad) (bad) mov sub and int inc pusha in enter jne idivb outsb mov (bad) (bad) (bad) lcall pop sti (bad) or pop cmpsl add mov jno lock pusha jle (bad) lds (bad) (bad) jmp arpl je test roll xchg (bad) (bad) jg mov xchg les addr16 jmp cmp adc sub (bad) (bad) (bad) decl sbb cmpsl push cmp mov scas jns loop pop data16 mov dec cld inc push or or xchg mov pop jl and pop jge mov movsl std pop loopne (bad) fwait xchg notb ret mov mov and or xor cmc lods out addr16 xchg sub cmpsb sub lret enter out clc (bad) incl sbb xor aaa inc or cmp movsb cs pop adc in mov repz sub ret dec frstor mov js (bad) (bad) mov lret mov idivb and add and (bad) (bad) (bad) pushl orl mov mov jle das cmp stc sub scas test sti data16 (bad) (bad) jmp jge popa test push ja inc jg cmp mov jmp sub inc std (bad) (bad) mov in dec insl sub sub mov sbbl (bad) (bad) (bad) (bad) pushl or ja push ror xchg push inc scas fstpl and xorb (bad) incl dec notl jae or mov cltd cltd sbb test jge pop (bad) dec arpl sar (bad) (bad) (bad) jp cmpsl stos lret lcall add into push imul popl adc insl inc push popf (bad) (bad) fcomip fist cmp add stos (bad) cli add pop inc mov (bad) (bad) incl rcll repz push mov es sbb scas les inc add (bad) fcomip cmc mov mov test das ret bound xor (bad) (bad) decl mov and pop fnsave jae mov push pop lahf and adc (bad) (bad) (bad) decl in scas mov or (bad) not loope push inc jl pop add push push (bad) aas cli scas adc insl out xchg in enter idivl ljmp lret (bad) decl mov xchg mov xor mov leave cmp add jmp (bad) (bad) (bad) call cltd adc loop mov sub jge test lock push mov movsb dec pop mov enter or push mov rcl lock mov lods push (bad) (bad) (bad) jmp dec (bad) out or shr or repnz mov and sti push sbb mov xchg xor (bad) (bad) (bad) inc fstl insl jg jmp pop mov cmp shrl fcomp mov (bad) (bad) (bad) inc mov inc or and push sbb and mov (bad) (bad) incl pusha fwait and cmp aas pop add aaa push pushf rorb outsb mov das sar adc test je aas mov and stos ficomp sbb sar (bad) pushl mov inc lret sub (bad) hlt clc repnz sub std (bad) mov and cmp dec aam jnp bound cmpsb loopne sbb jmp mov sbb inc and mov fistl adc (bad) mov faddl sub xor mov (bad) scas repz inc xchg fildl test jge sahf inc in adc lret jg mov subb (bad) daa xchg adc (bad) (bad) (bad) lcall or jo xchg mov or pusha data16 nop clc test (bad) (bad) decl (bad) xor jp rolb xor int ljmp dec daa adc pop mov (bad) (bad) ljmp inc cmpsl and jnp mov (bad) call sub xor jae insl hlt (bad) or pop sub push mov imul fsubl add aam (bad) mov or mov mov dec jno dec xor popa sahf sbb mov xor in ffreep fbld hlt mov cmp test sub jmp adc aaa cld (bad) call pop and ret adcl jb pop repz cwtl (bad) (bad) mov inc (bad) ss test outsl pop adc test notb fldpi fs (bad) pushf (bad) (bad) (bad) (bad) (bad) mov sbb dec push mov scas test (bad) sti fadds and (bad) (bad) pushl pop cmp inc pop fistl in push pop and aaa jecxz cmp (bad) (bad) (bad) jmp cmc jne mov mov fs xchg inc mov jecxz and das cli jmp or (bad) aas and insl fwait cmp (bad) in sbb mov inc lock subb mov sub sub iret jg bound sbb sbb mov (bad) ljmp mov sbb or enter popf xor int mov (bad) (bad) (bad) (bad) std dec fisubl test pop sbb (bad) and sub rorl mov (bad) stos (bad) (bad) (bad) incl push push rorb scas jnp mov xor cmp jae es nop int pop add (bad) (bad) (bad) jmp dec xchg inc (bad) std mov push stos rorl mov mov (bad) (bad) incl add push dec fildl movswl sub push div ss mov nop adcl mov push cs iret mov nop jnp movsb pop lret add and outsb mov scas arpl fist out or leave mov or sbb repnz insl jb mov es add (bad) lcall xor loop or mov aam loope and add (bad) (bad) mov xchg sbb sub push cmp (bad) dec and addr16 arpl in (bad) cmp loope jmp fdiv not int cmc cmpsb or (bad) mov aas mov jp call mov xchg (bad) (bad) pushl jnp push rcll jne fwait mov outsb mov iret push negl xchg mov xchg jno leave inc (bad) arpl push lret pop inc in push bound mov fcomip push sbb cmpsl int3 pop loopne jle shrb cmp and incl add stos cmpsl lock mov push test sub scas (bad) (bad) (bad) call gs push into mov test jae inc insl and push xor test add in xor out add (bad) (bad) incl push (bad) loopne mov xchg (bad) push push (bad) popf xchg ret push push dec ljmp jno (bad) (bad) (bad) mov ds (bad) repz test push and jp jo (bad) (bad) (bad) ljmp ja or sub inc inc jmp jmp shlb int lret in loopne (bad) (bad) (bad) call (bad) leave mov test (bad) das xor mov faddl in mov mov outsb dec dec add adc test sbb mov insl jg (bad) dec into pop sti lods mov orl (bad) cli cmpsl nop inc stc (bad) xor (bad) (bad) incl insl push imul pop xchg stc int out xor insl cmp cmpsl mov mov or fimul jo int3 cld mov jecxz (bad) mov std scas dec sbbl test outsl stc xchg jecxz outsl (bad) ds sarb and ss add iret lods (bad) (bad) decl or in xorb movsb xor mov hlt mov stos (bad) (bad) (bad) jg cmp imul clc into cmp sahf lahf adc data16 adc mov das cli (bad) stc lock out pop push ja jb cvtps2pd pop adc data16 (bad) (bad) (bad) js mov push call and sub (bad) and push cmp lds call cld jmpw adc sub in ljmp fnsave (bad) (bad) fbld outsb push xchg in adc fistpll pop and das push lods jns jge push mov outsb pop jge xor (bad) decl int mov pushf fwait (bad) leave shrb repz out bound (bad) decl fstl aad add aam cld inc test and iret (bad) (bad) (bad) pushl or movsb mov mov ret sbb insb sahf mov push sbb (bad) (bad) (bad) (bad) cmp jns push pop movsl xor pop xchg mov jb xor cmp adc (bad) (bad) fbstp add mov add push sub outsl rcll es push rcr (bad) (bad) (bad) jmp xchg popa in add cmp xor inc add sub and (bad) call test addr16 mov mov pop xchg or (bad) pop cmp mov nop loopne push xchg adc mov call xchg xchg pusha cs sahf (bad) (bad) (bad) call fwait insb cmp xchg fisubrl cmp push test cmc dec popf (bad) ja mov cmp rcll and lcall test into dec mov mov push and decl adc rcrb and clc mov and or stos inc imul (bad) (bad) std mov iret out mov adc mov sti inc add scas push test jl test jae (bad) (bad) ljmp lock lretw outsl cmp cmp aad ds inc shl sbb pop popa aaa std (bad) fldt jmp adc mov adc mov imul cmp xor aad mov movl hlt fimull jle add fs (bad) (bad) jg and mov inc xlat into jecxz jle cmp shrb (bad) (bad) out clc scas pop decb out sahf or jbe in mov adc call mov lods lcall call xor sarl or mov cmpsb inc inc jl fs and decl push test ret push fimul (bad) ljmp cli xor or dec ljmp dec (bad) (bad) mov ss push ss (bad) (bad) (bad) call mov (bad) jo ficoml loop adcb mov or lea loopne push std (bad) (bad) (bad) ljmp inc fwait xchg aas sub sub mov jge iret imul dec sub mov (bad) jecxz inc fidivrl add jle dec das mov stc cmp pop hlt (bad) mov lods mov loop pop jb dec rolb loop fsubrp push idivb jecxz or in lcall es testb cmp clc lret adc push cli incb (bad) fisttp out imul (bad) cmc xor add push xchg jecxz push fsubs mov mov push int push aas adc mov adc jnp (bad) out (bad) jg lcall cwtl fist ret lods dec add mov dec stos add mov (bad) decl cmp mov loopne sbb sub sbb ljmp in push pop lods sub dec lcall and jne call (bad) ljmp (bad) jl pop push jmp enter cmpsl testb jg jg jbe fdivs add mov mov sti mov jmp (bad) (bad) (bad) lcall inc and lods ja shrl cmp pop movsl inc aad jg lahf dec lret jae (bad) (bad) (bad) (bad) cmp mov rolb sub (bad) jb std aam fdivrp aam pop mov call shll adc ljmp arpl mov movsl xor fdivrp (bad) (bad) decl inc lods repz mov push sbb dec ljmp cmp (bad) (bad) (bad) incl in inc adc sti insl jne cltd icebp adc xchg cmpsl fsubs (bad) outsl clc (bad) jmp daa dec int mov adc outsb xor dec sbb mov out cmp pop cld pop cmc pop loopne pop pushf loope inc dec ja in adc or mov (bad) incl das mov inc scas sbb std jmp lock int3 mov repnz cmp push (bad) in mov or call les pop rol rolb pop ror scas pop loop dec imul (bad) call jl sbb sub idivl subl mov scas cltd xor jo (bad) (bad) call push dec cmp lea sub aas adcl fdivrl (bad) (bad) jle dec in call gs dec lock insl cmpsb push add ret sbb cmpsb (bad) cltd and ja dec jae mov pop test sub movsl sub das les dec clc fcmovu mov or pusha daa fild mov mov cmp adc inc and pop (bad) (bad) (bad) decl push and ss sbb insb push addr16 into test ja mov and stc ljmp clc pushl out inc jle call fcomps je mov aas xchg (bad) (bad) (bad) decl xchg or xor xor inc iret aaa mov pop push xchg or test (bad) decl push adc add xor test (bad) incl negl cmpl leave (bad) xor jp xor insb or mov jl mov add mov js mov (bad) scas dec sbb jbe xchg cmp mov lret lcall call mov mov insl sbb int mov (bad) (bad) mov push dec loopne xchg push js jecxz xchg adc pop hlt int insb gs call aam mov xchg mov pop movsb pop jns sbb call insl lock (bad) (bad) ljmp (bad) mov pop (bad) idivb sub push pop loop imul in cld or dec mov xchg sar loopne icebp push lret xchg jg mov (bad) inc (bad) incl jnp sub mov push cli aam out sbb mov (bad) (bad) decl (bad) aad dec adc scas mov adc ja sbb (bad) lcall or (bad) adc xor cwtl sbb and (bad) (bad) (bad) incl mov mov sar push out xchg divb or and (bad) (bad) decl mov stc add cmp adc pop mov add (bad) (bad) (bad) decl mov enter cltd imul mov stos push ljmp inc xchg cld adc xor or mov in (bad) (bad) jmp push inc and mov test sbb or mov add ret stos push lcall mov adc add imul mov (bad) inc sub inc repnz jo mov loopne ret sub in (bad) (bad) lcall mov push outsl scas mov bound loope in xchg and jno into mov fnstsw daa fisubl push loopne lds (bad) lcall mov dec cltd sub ljmp cmp das push cmc inc push and pop aas push stos (bad) pushl std repz (bad) outsl add daa push and mov xchg ljmp (bad) (bad) fsub mov cmp out call fldenv sar (bad) mov xchg dec pusha or fisubr xor xchg inc js pop jae cmp (bad) pop mov lods ret (bad) adc popf adc (bad) jg movb jno sub mov ret ret aas std outsl clc mov push xchg popf xor dec pop out ljmp (bad) std xchg repz jno xchg pop mov inc pop pop call push xchg hlt clc arpl inc adc scas xor add test adc pop (bad) (bad) (bad) jmp adc frstor scas aas cmp repz mov loope je sar cltd jno call clc xchg pop imul jg mov stos adc lahf shrb inc mov xlat test or mov call (bad) lods mov gs pop loope addr16 sub xor icebp sbb (bad) (bad) (bad) pushl push popa or jp push lods mov cmovge fstl btrl arpl (bad) (bad) incl jne lahf sub jb or mov dec loop inc mov sbb or (bad) (bad) call mov les dec dec jecxz jecxz lahf lret pop into mov dec fistp mov int das inc dec pop add jmp ds (bad) (bad) ljmp push cltd xor paddb mov add out das pop pop (bad) dec sbb (bad) (bad) call and or or xchg loop or std jg mov push test inc pop push mov (bad) jmp cmc jns aas stc mov adc std mov fs outsb jg das cli cmp fstpt jnp pusha mov sbb pop ror (bad) (bad) (bad) (bad) cld mov mov fisttpll je movsb push add enter jl fstpt test jp or dec int cwtl push std cmp cs and mov into adc (bad) frstor pop xchg imul (bad) dec lods pusha xor pop and mov inc push pop add (bad) (bad) (bad) call ja cmpsl adc movsb icebp imul rcr aam jnp xchg cmpsl xchg sub loope and mov ljmp loop sbbl hlt jmp les idiv call cmp fs cltd je cli add iret fwait jecxz daa inc daa adc jne mov adc jb das push cmp mov dec insb dec (bad) (bad) (bad) (bad) jp add cmc (bad) scas popf add popf rcrl lea (bad) (bad) jns or jbe fs mov dec inc je xchg sti or pop adc fucomip fbstp hlt (bad) ljmp loop into stos neg xorl out aam imul divb mov mulb out dec cmp andl lods xor pop imul (bad) insl nop aad xor mov lret int3 dec cmp xchg (bad) fidivrl fildll dec sub jg rcll dec push loop push adc cmp pop and call call or dec pop imull daa popa pop lock xchg cmp xor hlt arpl push mov dec lahf fstl scas jl (bad) movsl lcall dec ds cltd lods (bad) (bad) pushl jmp out roll insb (bad) icebp je adc xlat cltd xchg inc cld jg incl pop stos aas cltd ds aaa scas sub pop cmp ficom adc (bad) lcall fs pop dec sti jno fidivl mov in inc rorb (bad) (bad) call pop mov call dec xchg cltd push ja jb inc pop and dec outsl inc inc inc cld (bad) lcall es ds out dec push pslld dec dec cmp sbb (bad) lcall into mov mov out pop inc cwtl in or pop and jge (bad) (bad) call lret sbb add or sbb int inc mov lcall pop (bad) add inc inc or mov test xor (bad) lcall gs adc mov xor popf daa out pop or (bad) jg cmp and repnz push push pop jno add (bad) decl sub pop pusha cwtl adc movsb or fdivrl sbb (bad) (bad) (bad) jmp adc push sbb das (bad) sbb sbb mov jle pop jl cmp icebp (bad) (bad) jmp dec rcrb xchg sub inc nop sbb bound jl inc (bad) ljmp pop popf pop xchg roll (bad) sbb cmc dec mov (bad) (bad) call xor arpl out dec add mov push pop arpl xchg cmp jmp leave test dec jl mov mov xchg fidivrl call cmp sub adc out inc les stos repnz lea and mov scas sub mov (bad) and (bad) (bad) decl jle mov scas addr16 jno mov xchg and mov mov hlt cmp (bad) (bad) (bad) ds (bad) and (bad) lret out imul bound inc xor popa leave imul jecxz dec in mov sbb lcall jmp (bad) ljmp xor int3 xor push daa (bad) mov (bad) (bad) (bad) ljmp (bad) jo and fsub clc pmulhuw test sub (bad) (bad) cmp insb out pop das scas aam rcll mov call cmp mov mov (bad) (bad) (bad) dec in push in mov shll push popa push repz mov or (bad) (bad) decl pushf adc push ds adc jns in clc mov lods xor jle (bad) (bad) jmp pop xor inc push inc sub repz cltd xor jl mov xor decl mov insb adc xor mov add cmp (bad) (bad) (bad) jnp sti out jmp in clc call push sub pop xchg clc push jg hlt sub arpl (bad) (bad) (bad) (bad) addr16 jnp and insb dec or cmp cmpsb pop jae rcl and mov mov ja icebp xor lret push xchg (bad) (bad) (bad) mov sar lock (bad) ljmp adc sbb mov fiadd imul incl mov sti jecxz dec (bad) mov cmp les xchg xor jmp (bad) pop xor sub cs sbb sbb rcrl dec push adc aaa sbb shlb lock pop (bad) (bad) incl push push popf mov cmpl mov int push aad adc sbb dec mov mov sub je adc sub xchg add fadd add hlt pop sar (bad) (bad) lcall loope pop fistp and aaa sub in cwtl mov add (bad) call inc icebp cmp inc (bad) xor adc xchg and lea add ljmp sub ret test jg (bad) repz pop pop cltd cwtl daa lds (bad) pushl scas add icebp jle call or cmp xor pusha sub arpl (bad) ljmp add inc test jno (bad) outsb subb mov dec insb xchg aad fidivl ljmp jb sbb add int3 push clc andl dec mov mov cmpsl and add pop and (bad) cli mov cs jg pop cmp cmp mov sub cltd push faddp fadd loopne inc call (bad) out fisubl (bad) (bad) (bad) call je jge mov dec sbb pop out inc adc mov imul pop (bad) cmc (bad) aas and (bad) sbb pop pushf mov mov mov jae adc (bad) je ljmp mov test in loope mov fwait fwait test adc cmpsl popa out add or movnti (bad) (bad) ljmp stos jns call push dec es adc or adc in shll rcl in mov pop shlb dec mov or pop inc sbb lcall cmp pop mov lock fistpll (bad) (bad) ljmp repnz (bad) or jbe push stc das sbb cwtl mov jp (bad) mov sub adc push imul mov dec or repz adc (bad) and inc scas gs push icebp sbb jp cmpsb mov push ds inc jae (bad) (bad) (bad) jmp add mov inc mov push push mov (bad) xchg sbb aas or pop push pcmpeqb (bad) call (bad) push dec lahf ret in jge lods pushf xor jp pushf iret jbe mov dec dec movsb aad ljmp lock dec out mov pusha (bad) xor mov sub pop pop (bad) lcall ret mov pop test into jns adc insb call xchg outsb mov pop cs mov repz jecxz pop pop (bad) pushl std decb sysret add push dec pop into pop lret pop lcall cmp (bad) (bad) lcall sbb xorl out lods inc scas mov cmp push cld jg xor jp lcall (bad) lcall push aaa (bad) mov mov push push icebp jns call mov mov ljmp (bad) dec xor scas nop add es lahf (bad) mov dec add xor (bad) (bad) (bad) lcall (bad) in mov or ds (bad) fdivrl inc mov dec sub (bad) (bad) lcall xchg sbb mov in fildl mov (bad) int cs arpl pushf (bad) (bad) (bad) (bad) fistpl ret cltd imul test mov push scas mov lods shr jnp (bad) (bad) (bad) (bad) fistpll mov mov sub in pop lock dec (bad) enter out mov dec jmp cmpsl or (bad) pushl cmp adc (bad) mov mov push jnp xlat inc cld incl sbb aam lcall call jmp add inc cmc insl and (bad) cmp sbb ja loope mov cmp mov mov pop add push call (bad) (bad) mov adc shlb mov dec imul das push mov (bad) ljmp test or test mov push (bad) les and frstor setl (bad) (bad) dec push add ja add fs (bad) popa push push es (bad) (bad) call dec pop pop push ja mov (bad) cmp lret and inc (bad) mov xchg lods mov loope in sbb std mov pop mov or pop xchg mov clc rcrb repz std int ds (bad) ja xorl (bad) (bad) jge xor jmp pop xchg adcl add xchg call or (bad) (bad) ljmp mov add pop pop xor xchg adc push or mov sub sub sahf or (bad) (bad) (bad) (bad) mov in fsubs xor add and mov or call in xchg (bad) mov rorb lods xchg insb imul lret inc cmc leave (bad) (bad) jg jo sahf ret inc sub adc inc add push and mov arpl cmp adc adc lds inc (bad) decl xorb (bad) call inc loop (bad) (bad) (bad) lahf push and insl (bad) cli fs and dec jno inc push pushf or xor (bad) (bad) decl push xor icebp scas out xor push stos add and scas enter test loopne and dec jecxz mov mull adc (bad) (bad) decl pop mov cmpsl pop hlt mov jne adc out bound (bad) (bad) (bad) (bad) jge jecxz mov (bad) mov or pop jno xor sar push pop adc test push (bad) (bad) (bad) mov mov lahf jbe stos insl or hlt int pop lahf or dec mov js das pop push push (bad) (bad) (bad) (bad) cmp dec adc mov inc out adc adc les sub rorl clc inc cmpsl iret icebp arpl lret sub cli inc xchg xchg xchg push stc (bad) (bad) (bad) jb les jg outsb jg push adcb (bad) hlt push lds clc dec divb xlat (bad) (bad) (bad) ljmp mov mov mov cmp les pushf aaa pop push cmp or out mov push jb loopne (bad) (bad) (bad) decl ja add or in rorb sarb xor push sbb add (bad) (bad) call sbb inc (bad) jmp and dec mov rol ss sbb repz fdivr (bad) (bad) jmp push test nop mov fstpt xchg and (bad) push sbb or jmp and shr push insb and lahf pop fstpt (bad) fisubl (bad) and pop xchg aad inc cmp (bad) (bad) incl push movsb mov (bad) xor inc repz lods daa sub stos sbb int je loop inc jmp jmp inc rcr pop pop jg popa push (bad) sbb (bad) (bad) call cs aad mov pop sub das cmpsb mov in fisubrl lret stos and sub jecxz,pt call fidiv sbb push sti in gs cmp adc sbb sub pop ja test loopne adc dec push (bad) (bad) (bad) call pop mov movsl mov cld roll out inc add mov cli jnp in (bad) (bad) (bad) lcall out pop add cmp (bad) dec inc cmp xchg out fwait cmp pushl std inc lcall sub xchg lret movsl in clc sub (bad) (bad) (bad) jge mov js pop push subl sbb inc adc pusha dec ficom or loop jbe inc (bad) lock or inc inc xor aas cltd (bad) (bad) mov cwtl out pop ficomp inc or sbb lret nop (bad) sub cmp (bad) ljmp mov push jmp push jb add jno loope jb scas mov fisttp decl sub rorb pop in and push mov push popf or adc insb jne mov inc jne (bad) fdivs or test cli push mov pusha or out mov mov (bad) les mov inc (bad) cmp int3 mov push cwtl cmpsl xchg fs scas test add dec inc mov (bad) (bad) (bad) lcall xchg lret dec je xchg dec movsl inc mov jnp sbb call xor in xchg cmp (bad) (bad) (bad) incl out aas inc leave mov test xchg repz ss mov or mov std lods std (bad) (bad) ljmp add push adc sahf inc jo popf mov mov call mov enter jne decl or fcmovb jp scas out sub mov stc (bad) (bad) (bad) call and ret sub inc lahf lret or rclb mov cwtl jbe call push xor (bad) push (bad) pushf cmp and test xor (bad) (bad) (bad) dec push addb pop in pop mov pushf lcall int3 les das test fcomip (bad) fmuls and and cmp pop (bad) fdivr jnp xchg cmp adc ljmp or enter and mov adc aad pop lret je jmp adc xor popa (bad) (bad) (bad) dec sbb xorl cwtl or jne lods fisttpl push xor (bad) lock (bad) lcall arpl adc data16 pop mov cmpsl ret xchg bound cs (bad) (bad) incl cmp repz xor pop cmp xchg or fsubs enter adc push js mov (bad) pop (bad) in (bad) (bad) aas dec adc mov daa dec jbe fsubp les int3 sbb insl cmp jne mov (bad) (bad) call lahf push inc xchg mov xor stc sub adc inc xchg loope or lea or mov sub clc aam decb add push int3 dec or adc clc (bad) call mov (bad) fiadd icebp fs popf pushf dec popf cmp sahf (bad) mov call mov inc insl pop lods pusha push out (bad) (bad) (bad) ljmp pop imul mov ss mov aam and sbb push (bad) (bad) (bad) js das cmp sub and push nop sbb movsb out jl mov lret clc (bad) (bad) (bad) call stc sbb mov bound mov cmp cmp or movsl cmpb push ret or je mov incl mov aaa icebp cmp adcl aas (bad) xor jmp (bad) (bad) (bad) dec loopne push cltd in fwait jle divl and mov adc fidivr int3 cld (bad) (bad) incl enter sbb mov dec stos or fimul idiv sbb add mov pop mov incl xor fldenv xchg aaa cmpb idivb imul jle (bad) (bad) (bad) incl mov ja das (bad) and pop mov or sbb or xor (bad) (bad) fistp lcall pusha lahf sbb hlt out dec lds addb pop out mov (bad) incl inc xlat xchg (bad) jp xchg stos mov ss jno pop cld cli (bad) (bad) pushl jmp outsl ficoml imul pop xor js push sbb (bad) (bad) ljmp xchg inc mov cld push push mov jbe sarl pop mov sar (bad) (bad) cld xor xchg fwait iret mov inc shrb sub arpl loopne and (bad) (bad) (bad) mov mov pop xor xchg add sub pop mov and aam (bad) (bad) pushl cmp faddp gs add scas pop sub mov xor add sub (bad) (bad) (bad) ffreep rcrb frstor xchg push pushf mov mov mov cld movsl scas cwtl cmp sbb mov lcall pop cmp cmp jle (bad) (bad) (bad) jmp xor xchg inc push jecxz insb xchg lods and jg stos adc jnp lds fsub outsl (bad) (bad) in sti fdivrl nop icebp (bad) cmpsb std shrl cmpsl mov (bad) (bad) (bad) mov jge mov test push enter cmpsl inc pusha pop fistp scas adc jmp (bad) ljmp inc cli leave out adc fldl aam inc xchg dec outsl mov (bad) lcall ds leave jg pop mov push incl cmp (bad) (bad) (bad) ljmp inc fadds testb es jl and sbb pop mov or jnp sub js push sub adc xchg inc lea loop push pop mov adc imul call idivl pop or inc cmp inc mov std fldl lret push jp (bad) (bad) (bad) jmp cmp xchg add pop (bad) sahf repz jb mov push lahf xchg cmp sub cli jmp stc (bad) and sub push xor mov xchg sub mov cs pop add xchg ret adc mov (bad) call subl xchg sbb (bad) (bad) (bad) lcall mov push mov lea push or dec jae lea in or bound (bad) (bad) ljmp xchg xchg xlat jecxz insl in push mov loopne mov or push push sar (bad) (bad) ljmp pop mov xchg mov ds sub lcall arpl imul aad mov inc clc mov test repnz ficomp jg cmp jge jnp push mov fcomps lea cltd arpl push (bad) (bad) (bad) call icebp movsb pop imul mov in and mov push sub loope fbstp push mov or je mov (bad) pushl adc adc outsw xchg xchg xchg mov add cli pop and and pop insb mov mov (bad) (bad) incl jg push mov (bad) or nop (bad) push (bad) cwtl stc fstps adc xchg xorl ljmp loopne enter dec outsl add jl xchg rcll fs cwtl cli mov (bad) (bad) lcall or movsb scas mov dec mov xor and xchg mov (bad) hlt (bad) (bad) (bad) fcmovu stc gs out sbb jmp test xor movsl std mov (bad) mov pop lret cli cmp (bad) subl (bad) jmp pop int3 insl les stos sbb sbb scas mov fwait sbb fsubs lcall in add mov out mov inc dec and inc push xor lea pushf ret enter (bad) (bad) jl fcoml push mov hlt pushf pop loopne repnz ss mov push movsl sbb scas dec pop sbb (bad) (bad) incl lcall jl add sahf or out icebp and (bad) (bad) decl mov jg mov mov push adc push imul mov pop lock (bad) (bad) call into lret xchg pop mov rcll mov sbb outsb inc loope lahf iret (bad) (bad) (bad) call clc stos and mull imul call jns movsb xor sbb jne push (bad) (bad) (bad) dec repnz aaa dec aaa pop out sbb add fnstsw les subl (bad) (bad) (bad) inc arpl cld sarb mov mov (bad) cmc divb pusha push mov sbb push enter dec hlt push pop mov xchg xchg movsl adc adc adc popa or (bad) cmp inc pop pop fstpl xlat mov and cmc (bad) (bad) incl sbb jge divl adc mov roll inc inc test out iret in cld (bad) pushl ja (bad) pushl cmp jmp sub fnsave shrl xchg mov or sti bound fwait lret push mov dec aaa xchg dec jg xchg dec pop (bad) (bad) (bad) (bad) cld js cmp jne xchg out fisubl fistp lcall mov pop (bad) jp cmp fild push stos leave stos cmp mov xor (bad) jle loop out (bad) (bad) in pushl xor jle jo into xchg mov xchg cmpsl clc mov pop in push sub mov (bad) jnp iret xchg int movsl mov lock repz das shrb adc test addr16 clc jae adc push (bad) (bad) (bad) lcall jnp add in cmp jae std pushf ja jmp cmc and fmull push (bad) call mov add mov (bad) int pminub (bad) es jno repz shr (bad) (bad) jmp push xor mov into jg ret cmp add call (bad) (bad) (bad) (bad) decl xchg fidiv jnp lahf cmpl sbb aas cmp sbb stos and into cmp (bad) (bad) call sbb pop and and xchg loope mov sub push (bad) call popf or adc addr16 push sbb inc les insb (bad) aad jne stc aaa sbb pop loopne dec in dec clc int push sbb push xor jge jae inc lret aam push mov call std inc adc or inc mov daa mov iret pop dec cmp xor (bad) (bad) ljmp lods lods sub iret cmc sbb jns daa mov aas sub (bad) push mov jl mov (bad) (bad) (bad) (bad) js ficompl xor fsubrs jle int and sub pop add lcall jmp movsb pop sahf andl mov inc lret (bad) (bad) (bad) fbstp js mov push negb loopne sub mov xor xchg (bad) (bad) (bad) call xor lods movsb fiadd mov (bad) dec lea (bad) jmp in sbb (bad) (bad) (bad) jmp movsb xchg mov sub xchg mov adcl lea pop cs (bad) (bad) pushl sub jl cmc push jbe in subb mov add jmp out cmpsl mov lods pop adc incl lds fildll mov cltd xchg pop push outsl jnp out les ret test mov xor fwait insb imul loopne sti (bad) (bad) lcall int out punpcklwd sub notb (bad) cs iret js cli insl lods push sahf mov loop fildll out mov adc (bad) (bad) pushl aam and pop cmpsb imull cltd xor fsubs lret in and (bad) mov push std leave mov pop insl lock nop inc out mov sub dec sub (bad) pushl enter out ja cmp imul stos lods ret mov xor jne,pn lcall leave (bad) jg (bad) js aad adc rcrb lods arpl (bad) and jp outsl aam ja pushl mov mov inc xor repz stos cmp sbb mov iret mov (bad) (bad) (bad) incl call fisubr fs or add push jnp jbe fstl push stos out xchg decl out sarb jp int xchg mov (bad) lcall data16 sbb mov icebp cli incl idiv stos (bad) (bad) jns imul nop or push test dec sub or jb (bad) (bad) (bad) pushl pop mov (bad) jne pop (bad) jmp mov mov jecxz push xor es pusha movsl jg scas clc cmp lret cmc cmp iret cmp push push ljmp (bad) (bad) (bad) decl test scas mov xchg cmp xchg xor mov jae cwtl (bad) (bad) (bad) (bad) fild xor jnp adc inc jl mov adc cld jmp (bad) (bad) ljmp xchg adc adc into repnz xchg aaa push sar adc ret (bad) and mov adc (bad) pushl clc gs and aam pop lea sbbl xor andl das cli (bad) std mov and loopne jb cwtl cld je inc in push in xor xchg lods aaa xchg xor incl push std pop aad cltd mov mov into fs jmp out dec mov mov cld divb sbb inc push (bad) mov push push (bad) out clc call icebp jno test lcall js mov mov xchg cmp (bad) incl inc mov pop or stos mov cli xchg pop out mov (bad) mov movsb sub adcb cltd fs int mov ret call (bad) cmc push mov xchg call out mov pop push fisub push loop bound loop fneni(8087 ja movsl sub jno pop cmpsb xor addr16 (bad) (bad) clc (bad) out aaa cli lods sbb loope xchg imul dec xor dec je (bad) (bad) (bad) (bad) incl sub inc lea fs mov (bad) dec dec mov inc notb jg cld cmp sub out mov mov ljmp lods int lcallw add xor out stos pop pop push and jg mov loopne pop pop hlt (bad) dec (bad) mov push andl stc adc bound sarl lcall (bad) rcrl int3 push xchg pop enter inc je movsl mov rorb sar cld adc push scas pop cmp into dec and insb adc pop (bad) (bad) cmp xor jmp loope dec test sub (bad) jmp xchg xor es jecxz mov lahf pop int sbb (bad) jmp push mov (bad) mov xchg stos adc stos mov ja fcmovnu inc jg jp pop cmc lds jmp jb loopne aam rol cmp cmpsb test jmp add push xlat xor push pop cmp mov call call cmc mov pop lods adc and cld mov pop popa (bad) (bad) (bad) inc inc out fsubrs jmp addr16 push push scas imul push repnz mov repz cs mov fmuls push dec aam fwait lahf clc insb test (bad) (bad) jg pop imul pop subl inc cmp in pop jecxz xorl (bad) (bad) (bad) incl mov lock jne xlat jbe xchg loopne or lock inc ss sub inc (bad) (bad) (bad) in or (bad) divl xchg loop movsb stos std inc pop cmp fimull push cmp ds inc test or test ds or iret add pop push pop pop call or xor cwtl (bad) (bad) decl inc cltd (bad) out xlat cmpsb xchg (bad) dec cmc rcll jae icebp call jo cmpsb jne jle inc ret xchg aaa das and cld (bad) (bad) (bad) decl jae pop and sahf pushf xchg push in adc in fiaddl inc lock loop sbb or std (bad) dec and sbb not inc (bad) les pop mov xor jle scas mov call (bad) js jmp jmp in rclb cmp jl sti jg mov jns push xchg pop gs adc mov xor and (bad) jmp mov sub mov pop out inc mov decl inc pop mov mov push pushf pusha sub loope,pn dec cwtl jp js incb and jb xor int jle sbb das int xchg cli mov pop cmpsb adc push mov mov (bad) (bad) jmp mov mov mov ljmp iret icebp dec pop jbe pop mov pop add scas (bad) jmp and and dec jg push ret mov aam xor jns in roll xchg orb clc mov pushf adc sbb add imul xchg mov inc xchg bound test xchg mov lock rorl (bad) jg pop add scas inc cmpsl test inc sub adc lock (bad) (bad) (bad) call jbe add jne xor and pop jge xchg or sbb inc push (bad) (bad) (bad) (bad) lcall jbe scas aad out xchg inc rorb in ljmp lds add pop cmc (bad) (bad) cmp push xchg out mov xor scas dec mov fs (bad) fstl sbb in (bad) (bad) (bad) jmp xor push cmpsl (bad) in ja and dec or sub cmp jp (bad) (bad) lcall (bad) rclb das mov lcall and mov (bad) (bad) ljmp lcall cmp lods aam (bad) aaa jnp ljmp xchg dec (bad) (bad) pop pop cli aam xchg xchg outsl imul inc shr mov notb repz into mov jl scas push pop sbb and (bad) (bad) call jmp clc fbld sahf xchg jae cmp cmp imul mov mov je ss jns sub (bad) in lock or mov decl jge jmp (bad) mov dec iret pop dec sarl ljmp jl lods push imul loopne mov jp out clc aaa std jmp push mov dec loop aaa push inc leave add fcmovnbe dec (bad) (bad) (bad) (bad) call mov add into in aas push add arpl jge ds adc jae and (bad) (bad) (bad) lcall fcompl jle push pop inc xchg fsubr repnz mov inc xchg loope xlat cmp (bad) ljmp or cmp and int3 jmp push in or fscale lcall (bad) (bad) (bad) pushl ret mov lods bound push mov jg mov outsl push jp mov pop in jbe dec cwtl pusha repnz movsl cmc cmp hlt mov sbb cmpsb (bad) lcall (bad) hlt scas mov jbe ret pop test pusha leave je stos pop lock mov xor and adc ja (bad) (bad) ljmp cmpsb (bad) fidivrl and add add (bad) (bad) jmp daa movb add adc (bad) cli aas sarl lods test jg or rolb (bad) pushl repz inc lods cltd sub repz push jbe ret pop out loopne (bad) (bad) (bad) pushl or jp ret and rcl je not fs jge out or lock jo rcl decl inc call test arpl pop lods lcall loop leave mov das mov jbe (bad) (bad) lcall sub dec cmp cli rclb cmc mov (bad) (bad) (bad) pushl (bad) cli hlt lds lret mov and xor mov (bad) lcall mov gs sti xchg sub or push hlt outsl sub aam (bad) (bad) (bad) call out divl (bad) sbb cmp push lahf xor aaa jmp (bad) stos jns (bad) (bad) (bad) jmp cltd inc cmp mov aaa adcl ljmp jmp dec fs mov jg decl rorl inc (bad) mov cmp sbb pop imul pop mov mov add leave xchg shl cmpsb lret mov (bad) (bad) pushl push in fwait mov loopne inc out scas inc jno (bad) int scas mov sbb (bad) (bad) decl jae adc fmuls mov jo jae jne and push in dec imul cld (bad) call cmp jno (bad) lret xchg mov and fiaddl ljmp pushl scas fild mov push dec push rclb popf scas jmp (bad) decl cmc dec mov lock jb sbb pop mov mov (bad) jns add cld lahf pop lcall shlb hlt test xor clc ret mov jnp push inc cmp (bad) int stc mov imul (bad) (bad) lcall xor movsb cmp in mov daa ud2 sub lea sub (bad) (bad) (bad) ljmp stc xchg mov cmp inc sbb inc cmp mov out cltd fdivrs arpl add mov rolb cli ja add push fildll sbb pop inc sub dec mov das pop push nop popa movsl daa gs (bad) (bad) decl mov pop cmpsl ja lods cmp stos cwtl mov xchg ss call repnz jge pop cmp xchg into sbb ret das (bad) (bad) mov dec xor or xchg jnp and adc sub cld (bad) pushl push fcmovbe nop push and cmp imul add (bad) flds data16 xor mov add in mov inc sbb and push (bad) decl loopne add test inc ja lods test icebp cmp xorb sbb inc mov mov pop es dec push push dec inc sbb sbb fistl ljmp ds and call dec into sub jnp outsb (bad) xor (bad) ljmp xchg xchg jnp enter cmpsb sbb mov and clc pop aam push stos or (bad) (bad) (bad) call inc xchg jecxz movsb orl test decl das in test (bad) (bad) call inc loop sub dec add mov xchg mov or push jmp dec ret (bad) jg inc cld icebp sub int3 xor inc je inc incl mov fisttpl sub ja push inc xchg in (bad) and out sbb std (bad) incl mov mov test (bad) dec lock add ja nop sbb aad clc xor decl inc push xchg mov sahf mov push pop scas push fcoml in mov (bad) (bad) (bad) ljmp dec inc inc shrl cmpsl dec pop adc fsubrl mov mov sbb cli popa lret aam hlt adc (bad) jns inc les (bad) ljmp sub xor adc cmp popf jo out in xchg fmul jae mov hlt (bad) fcomip gs icebp imul sbb and cmpsb inc mov sbb cmp loop pop ret (bad) fcom popf je mov mov (bad) (bad) (bad) (bad) jnp pop inc cmp pop dec jno push cmp and jnp xorl xlat adc pushf outsb stos inc (bad) decl pop imul mov aam out addl (bad) mov (bad) adc adc fsubrs add jg mov aaa xor ljmp clc call dec xor and shl imull enter out pushf jns (bad) (bad) (bad) jmp pop cmpsl shll into adc jae dec shlb pop pusha pop cmpsb or mov cmp or pop add pushf (bad) (bad) (bad) call mov mov push ret pop loopne inc dec mov push push pop sub repnz cmpsb inc sub into dec loopne inc xorb mov (bad) call std out jg jecxz out jmp insl imul lret add sbb (bad) in cmpsb jecxz out ret mov (bad) ljmp push (bad) fimul dec nop mov aad hlt cmpl sti nop outsl stos pop inc or pop cld pop cmc insl cltd mov notb lret push or out (bad) fcomip jmp inc jns repnz fimul or jp cltd dec mov (bad) (bad) cld xchg mov bnd adc arpl sbb cmp or sub (bad) (bad) (bad) ljmp dec popf sahf cli ds iret or repz out push stc aaa cmc test and dec scas call jmp cmc xor sbb fbld inc pop mulb cld and ret (bad) (bad) (bad) call fild std rorb test js lret out push mov fwait (bad) repz (bad) jmp loope popf bound and es mov cs cld jne xchg imul mov mov movsb push lcall and mov into mov (bad) ljmp pop stc sbb stos mov pushf leave idiv sbb mov fist out outsb push hlt popf xchg les loopne fldcw shrl cmp inc sub push push aaa scas clc (bad) lcall test add pop mov (bad) cltd jno je mov lret mov mov test pop lcall fwait adc std (bad) (bad) jmp test mov xlat hlt (bad) out popa jmp fldcw or push (bad) mov (bad) incl adc mov pop (bad) cli adc cmc in int minps (bad) (bad) pushl push dec xor lret jnp or inc mov (bad) inc out (bad) (bad) (bad) incl stos jae,pt ds cmp loop and js jne inc push mov arpl test inc mov out xor sub nop sbb addr16 (bad) (bad) (bad) pushl or mov sub pop (bad) mov inc mov sub lods out fcomip pushl rcll (bad) sub and insb mov faddl inc aas data16 in insb mov jbe mov or decl xchg in es inc add loope push or iret mov mov or insl in addl (bad) pop jno or dec adc mov mov mov sub dec (bad) (bad) lcall ficompl mov push (bad) mov xchg hlt into mov and (bad) (bad) pushl popf test or das aas test mov xchg push imul (bad) (bad) (bad) jnp add mov fnstsw jp test gs int3 pop dec cli cmp pop cld (bad) (bad) fcoms inc sub popf dec lea aam inc lahf cmpb stos imul xchg mov mov mov sbb aas inc inc push dec nop dec mov jno sahf lret add (bad) (bad) cmp jbe adc xchg nop arpl jp (bad) (bad) call mov xor fstpl movsl cmp cmp and out cmp push mov mov (bad) (bad) fstps cmpsb sti outsl insb pop add insb lahf mov ret push arpl adc xor je shll (bad) (bad) (bad) jmp mov in or aam and ds push push popf inc lds lds add (bad) lcall dec add cmpsl sub xor inc adcl mov inc jno addr16 call loop sbb hlt mov and es stos adc (bad) (bad) decl mov mov loopne mov dec jo adc push aad adc pop repz or sub mov test call (bad) cs cmc sub (bad) (bad) jg (bad) imul outsl lock pop inc divb js cs insl call enter pop or sbb add test push mov mov and scas (bad) (bad) (bad) inc insb mov shl fcoml lret ret aaa pop add in sti stos ret pop aad cmp decl pop pop add mov mov fldenv xchg pushl jbe mov add cwtl xchg add test rcl and mov fnstenv adc lock and pop arpl push (bad) (bad) (bad) jmp scas mov repz call push ja sub daa repnz xor mov jnp data16 xchg incl xchg mov mov (bad) (bad) mov lret cwtl fdiv mov bound xchg lea (bad) (bad) jge ss lret (bad) rolb fmull xor xor dec rorb pop inc (bad) (bad) (bad) jmp mov add scas lods out loop adc lret mov pop dec push enter in outsb sub pop lock sub out es fdivrs or decl or add int3 leave nop je xchg ljmp push ljmp iret mov les cmp pop jo test test out hlt (bad) push adc (bad) in movsb test jle cmp (bad) aaa mov in subl (bad) (bad) (bad) ljmp aad xor cmc mov loope inc mov sbb push ret or jmp aad or mov icebp in mov jp (bad) lahf sarb mulb (bad) (bad) incl into scas sbbl (bad) jnp fild sub inc or lret mov mov shl mov fdivp xchg mov mov push cmp pop sub push mov (bad) (bad) (bad) mov sub fnstenv sub aad stos mov insl lods or sbb inc cmpsl hlt (bad) (bad) inc in push push (bad) scas xor addr16 xor (bad) push insl ljmp sub (bad) (bad) fild cmpsl push rcrb mov (bad) lock (bad) push xchg xchg jns fsts popa (bad) (bad) (bad) (bad) decl loop std add mov lea add jl jno lret mov xchg aaa fdivrp (bad) (bad) jmp pop rclb imul cmp sbb pop (bad) adc aaa insl fisttpll mov (bad) (bad) (bad) jmp adc stos cmpsl sbb cmp inc pop xchg or lds xchg mov jg (bad) (bad) (bad) incl push int3 fs das inc push rolb push sahf fnstsw inc js cld cmp popf lock push mov xchg push mov dec fiaddl pop push nop pop lret out fs mov (bad) (bad) lcall adc aad mov dec ficoml mov cmpsl or mov cmp xchg dec gs (bad) mov dec xchg pop insb mov scas pop aad xchg clc jl mov xlat inc cmp xor or ja loopne (bad) ljmp mov push adc arpl imul shrb mov push insb dec mov add daa int3 (bad) (bad) mov and inc icebp sbb inc jo pushf xchg inc xlat fistpll ja movsl (bad) (bad) (bad) inc scas mov es mov cmp cmp loope xor stc (bad) xor xor (bad) (bad) decl iret lret in mov jo pusha repz (bad) fs jecxz inc push (bad) jmp jae inc mov mov adc xchg repnz mov mov mov mov fwait (bad) (bad) (bad) incl fs outsb outsl dec xor fwait loop loope cmp and sti jne pop adc (bad) (bad) (bad) (bad) cli dec lret es mov adc mov icebp out dec adc xor insb pop xor test loop add out lret push out mov lcall inc mov mov add jne,pn call arpl mov (bad) (bad) lcall pop mov dec pop dec lds sbb out lea cmp cltd add jb and (bad) dec cmpl jmp xchg push xor lret pushf xor clc (bad) decl fsub xor jl sub push mov mov fcoms (bad) (bad) jmp sub jae fwait in cli iret adc (bad) mov jp aad cmp (bad) pushl push mov cmp add fbstp add mov push push decl lds dec mov push sub ret mov lds ljmp push dec addr16 (bad) mov xorl dec aas js adc push xlat mov incl dec cmp fild enter call sbb jno push cmp insl (bad) (bad) (bad) call push mov mov adc mov aam jb push lea (bad) (bad) (bad) jmp bound adcl mov addr16 lahf lcall sbb decl inc dec and aas aaa add push jle hlt mov stos pop lds (bad) (bad) incl sbb inc xchg adc neg jb mov mov xchg das (bad) pop jle sahf and push das cmp (bad) (bad) call push push jne out movsl ficom pop mov mov sbb or cld mov (bad) (bad) call cmp inc push or in nop xchg cmp aaa pop nop or adc (bad) lcall (bad) cmp dec add and fstps jmp jg (bad) ljmp ss cmp pop stos hlt jg inc lret push push add sbb (bad) (bad) (bad) push mov pop rol leave mov into mov lods cmpsl cmp dec fcomps inc loop nop jge out clc (bad) (bad) (bad) fmull pop add push add jecxz and repnz (bad) ljmp out ret and dec (bad) push adc fstpt sub adc jecxz (bad) (bad) jl lock fwait jecxz sub (bad) dec std inc das add adc mov leave mov mov mov popf les sti and mov sub int3 and push and pop or mov data16 mov clc cmpsl cwtl (bad) (bad) (bad) pushl mov popf mov out mov jbe in dec jl stos daa in hlt inc fnstenv aad imul js cltd inc shrb arpl sti loope jmp pop xchg xchg dec les incl out jo cs fiaddl pop dec fild jno xchg mov mov jl jle (bad) (bad) fcomip aam imul add out rol jg js rorb jb shlb push (bad) (bad) (bad) decl inc fisub shrl xor daa nop notb imul leave jbe in popa shlb hlt (bad) jl (bad) xchg xchg (bad) not xchg mov lret (bad) jg push pop fwait add leave xchg mov (bad) lock repz arpl push pop daa sub (bad) push ljmp lret mov mov push jle imul nop (bad) (bad) fisttp repz bound sbb loop hlt enter (bad) in (bad) incl andb push mov pop test and cmp aaa inc add (bad) (bad) decl dec andb dec mov cmpsl ja es pop mov and movsb lock incl clc stc imul and int3 inc mov ja adc (bad) (bad) decl xchg and dec imull scas lret sbb scas scas ds gs imul sub push sbb int inc test (bad) lcall cli pop sub insl jecxz cmpsl (bad) sub inc jmp xor cli (bad) incl pop cmpsl rorb jbe mov (bad) les sbbl mov lret mov jle xchg in push jle (bad) (bad) decl add loop add xor and out pop and js jns aad (bad) ljmp test adc adc mov lahf out sti xchg insl and dec dec (bad) (bad) (bad) (bad) mov insb out cs into imul in jl ficompl sub (bad) (bad) (bad) pushl inc pop jnp repnz jne adc vmwrite or or cmp lcall xchg popf ja jmp mov movsl xchg fwait pusha push clc or fldenv and (bad) (bad) (bad) incl xor es test xor cwtl popa jl xchg mov sbb (bad) (bad) (bad) incl xchg nop jo (bad) mov int3 add xchg cltd pushf cmp insb add (bad) enter pop cli fimull out ja aas sbb jno jg cs (bad) mov xchg sti sarl xchg (bad) pushl (bad) jecxz xchg jle or sbb scas int jecxz bound aas (bad) (bad) fcompl (bad) out clc xchg add rcrl add pop lea adc arpl mov (bad) jmp pop mov popa out xlat out pop js dec add inc rorb outsb pop loop (bad) (bad) (bad) call push add mov loope shrl mov and inc dec aas popa push jmp fs shll mov addr16 stc push or cwtl iret (bad) call mov sarl cmpsb mov fcoml dec xchg inc (bad) (bad) (bad) (bad) lcall jge cltd cmp add xor cltd sub inc movsb les cld out js lock push inc mov and mov mov cmp push add popf mov pop (bad) (bad) xor mov xor add (bad) (bad) (bad) decl inc lret pop out push nop inc aaa fstpt lret outsl push jmp shrb mov mov (bad) (bad) call in xchg push cmp sahf je mov jmp push add aaa or repz dec shlb (bad) pushl in mov mov int3 adc cmpsl insl (bad) sub mov cmp lcall scas cmpsl add sti das pop lods movsb test out jnp lret mov jmp repnz rol std inc mov (bad) call push fwait pop dec lea mov es cli lods or (bad) (bad) jg mov into fnop rcrb pxor popa insl call lock and rcll cmp mov xchg cmp std pop push ljmp lcall mov lock mov sbb pop cmp out in cmp pop and (bad) (bad) (bad) (bad) jp push and icebp jmp into cmp adc xor mov jo je es hlt (bad) (bad) decl push inc in shll leave xchg or xlat call pop mov jne test (bad) mov test xchg lcall adc rclb in (bad) (bad) call je sbb test movsl add es incb dec sub (bad) ljmp pushf cmpsb sub gs lds jbe jmp dec push xor jmp and scas jp jb push insl repnz ret ljmp push (bad) push mov inc out scas push lahf xor xchg add xchg push je mov or loopne mov (bad) (bad) (bad) decl mov xor dec cmpsl dec loopne in cmp repnz pop cmp ljmp mov stos outsb jnp test and push bound push sbb (bad) and ret std ljmp leave push popf push scas dec push pop sub sbb lods je and mov push (bad) jmp sbb sbb dec xchg jmp sub xchg repnz test (bad) (bad) ljmp stc mov push jle jnp inc loop sarl fs mov pop cmpsl incb int3 pop cmp call or imul mov inc jnp xchg inc xchg movsl mov ljmp sub sub pop (bad) fs iret add pop push (bad) (bad) (bad) call inc dec dec popa dec pushf fs imul rolb inc leave cmp movsl push repz mov (bad) (bad) (bad) push mov mov dec adc repnz mov dec dec shlb psllw clc hlt (bad) jg insl movsb dec sbb in movb pusha or add aas hlt (bad) (bad) fbld (bad) jbe inc gs or orl outsb xlat xor cmp jbe (bad) (bad) (bad) fild xor xchg mov shl in adc cmp xor rep idivb aad imul push mov or jb push js fwait in push addr16 (bad) (bad) push push in cmc jae mov mov data16 nop sub addl dec out dec cli xchg (bad) (bad) incl xor (bad) imul sub fwait popf pop push xchg cmp rep mov inc xchg adc (bad) (bad) call jne testb lcall daa mov mov in aas in aam jg (bad) jle test mov movsb sub fbld mov (bad) mov push lods fisubr pop (bad) decl jl jp mov imul sahf out scas and daa (bad) (bad) (bad) lcall adc or cmp cmp iret push imul add xlat rorl fdivr (bad) incl adc insl movl push in mov movsb push (bad) sub lcall xchg js out mov loop jbe mov dec fidivrl adc icebp add ljmp dec sbb or in push jmp ret sbbb fsubrs jge (bad) incl aad adc mov punpcklbw insb sub pusha and and cmovno jno push push jns repz or fsubrs add mov (bad) (bad) pushl testl lock lret jp data16 ret je sbbl (bad) jmp inc push fistp sbbb and into test je jo push popf data16 decl lock dec ds jle mov stc mov into mov mov jg (bad) mov xchg cltd popa insb (bad) ds (bad) pop fmull mov popa xor cs (bad) (bad) decl (bad) push lret push lret adc adc sbb (bad) int mov pushl je (bad) bound sbb xor mov adc mov insl rep push data16 jmp xchg pop add sbb cmpsl stc insb mov or jmp push dec call cwtl fisttpl movsl loop mov sbb push test (bad) (bad) jmp jge fildl mov mov popa or add ret int and incl out jge mov adc and mov xchg inc or xchg clc lods push (bad) (bad) jg cmc je push jne xchg xor (bad) sub sti stos adc hlt xchg adc sbb cmpsb repnz dec and mov cmp jmp or (bad) (bad) out ss pop mov mov pushf lea jmp iret xlat cmp cld (bad) push adc mov dec or add subl repz (bad) (bad) (bad) jmp insl imul xchg xchg dec fnstenv jle pop xor icebp adc add rcrl push pop add (bad) (bad) (bad) decl test pop test rorl mov dec lods in mov pop out ret ficomp fimul jno cmp sbb xlat fadd fwait sbb gs mov jnp jae in jg movsl inc gs xchg jnp je sahf vmaxpd nop hlt call mov ss dec fsubrl mov ret stos mov unpckhps add icebp adc int dec lods fdivrp decl xchg pop test ds imul movsl int3 mov jecxz aad (bad) (bad) (bad) decl xor std inc orb or mov repz push or mov ss mov lcall out jo inc das mov xor rcrl incl push add dec ss call rcrl test scas clc incl xchg outsb fstps je xchg or and sub push decl dec scas rorb in xchg sbb cmp sub (bad) (bad) (bad) mov lods sub ret adc popf (bad) fcoml loope push frstor push ret lret (bad) (bad) (bad) (bad) inc sahf (bad) xor js fs repz cmp pusha mov mov or outsl clc (bad) inc aam push les sub push mov cwtl jp les pop xor (bad) (bad) decl fs xor popa cmpsb cmp testb cmp ret pop (bad) imul xlat (bad) mov fs pop mov add repz bound pop cmp jg xchg insb sub inc or jb and (bad) sub pop adc call mov and or (bad) aad in rorl xchg cmp (bad) (bad) pushl fcmovb or jle pop sbb in xchg mov (bad) (bad) (bad) jmp pushf call inc xchg sbb cmpsb pop xlat xchg jae cmp mull (bad) pop cmc ljmp aad sar daa call rcrb sti into loop and adc sub mov cld ljmp xchg and decl js fldcw shll mov cmc aam call pop aas (bad) mov ret out scas (bad) mov lea sar (bad) (bad) mov pop inc sub jmp cli cltd fs imul mov aad cmp cmp (bad) (bad) decl inc sub movsb jne movsl inc movsb add gs dec ret pushf aas add xchg test push stos scas mov lods mov pop (bad) mov cli (bad) incl push imul pop call push (bad) in test lods ja clc jmp push mov mov (bad) jecxz (bad) (bad) jmp adc mov mov cmc cltd mov xor shll mov (bad) out cli sbb mov jle out inc xor sbb sarl inc enter pop pop icebp xchg lods (bad) ljmp sub bound aaa mov inc and hlt and jg in inc aam (bad) push mov inc adc loop pop mov inc jecxz (bad) (bad) (bad) (bad) push test mov aas ret inc (bad) lcall imul jnp lcall cmp adcl jae int3 inc (bad) cmp scas jno fisubrl mov (bad) (bad) (bad) fist or ljmp jle lahf dec stos inc mov jmp int inc ds (bad) in cmp stos movsl xchg cwtl ret sahf sub ja sbb dec inc call negb out gs push sbb jbe outsb push pop and idiv inc dec sarb fistpll call adc iret gs repz mov push das mov fnstenv pop pop (bad) (bad) (bad) jmp dec pop enter cmc push ss xor sbb call mov pop int inc lods cmp cmp popa adc (bad) (bad) dec fsub insl imul and pusha xor sub push xchg in mov or (bad) mov imul lock mov pusha fnstsw dec xchg cmpsl xchg add push ljmp (bad) incl push lret cld sbb loopne xchg aaa xchg in adc adc jne mov cmp dec movsl ror adc push dec push adc jl fstps pop pop xchg jae (bad) (bad) (bad) lcall mov lret das call sbb nop xchg fnstcw adc dec (bad) (bad) (bad) inc mov bound jecxz inc insl or lods stos push imul imul inc sbb mov cmp popa cmp scas or mov out push mov (bad) (bad) call jo sbb lret and mov dec adc ljmp out (bad) (bad) (bad) ljmp dec push add mov out addr16 (bad) sbb fdivrs fnstsw xor adc call decl pusha daa scas repz sti sbb jp stc test or fldenv (bad) pushl push cmpsl jb push inc (bad) push pop aam xchg cmpl add movsl jb mov lcall repnz insb aaa movsb popa sarl jns sbb (bad) mov pop adc out jge test rorb addr16 inc (bad) (bad) (bad) call inc push mov imul push mov stos cmc lahf icebp cmp adc add mov out or cmp or mov xlat lahf (bad) (bad) (bad) lcall push xor movsl mov scas sahf mov (bad) aam imul jmp add jno sahf jge adc loopne jl stc sbb or mov ljmp cmp xchg dec push outsl sbb push dec sub das push jne lea (bad) (bad) (bad) ljmp outsb cmp adc sti xor clc add ficom mov div sbb lcall ror mov sub mov xchg repnz mov ljmp mov push jns lret xchg push and or push sahf sbb imul inc mov jmp cmp mov push fild jae dec daa mov lahf lock push ret jmp mov pop loopne cmp lret mov ja pop (bad) out mov (bad) mov ds lret adc xor in sub daa insb rorb (bad) incl ficomp nop cli fsubl loopne mov das pop add js or cld idiv incl stos mov sub jnp push negl inc mov cmp (bad) (bad) call mov jbe mov sbb mov mov decl pushf jmp popa sub daa adc or xchg xchg (bad) call ljmp mov cltd leave out xor push addr16 xchg decl sub add mov dec sub adc sub je js fwait (bad) (bad) jmp mov and sub sbb (bad) out das subl add or inc es mov mov es test jecxz sub (bad) decl fidivl cmp lods fwait add xchg mov fcomip (bad) fistp sbb dec lock add movsb insb mov lds (bad) (bad) (bad) pushl sub xor int jmp mov lcall lea leave scas clc (bad) (bad) in shr aas mov sbb cmp les push mov outsb cmp (bad) (bad) jmp stc pop and bound lret stos add loop js or jg (bad) jg mov lcall fcompl insb sub decb inc mov enter fmul mov xlat out stc sub call (bad) (bad) cmp cmc scas push pop sbb push repnz sub cli in mov jnp stos test sub (bad) (bad) decl sbb dec jl ret sbb lods or es cmp outsb (bad) (bad) (bad) inc mov mov xchg rcrl shlb lock mov mov cld (bad) (bad) pushl dec imul inc and addb or pop add pop mov or lods xchg daa (bad) ljmp cli inc stc fildll push data16 flds push cmc aad (bad) (bad) fcomip adc dec imul push stc or fsubs scas mov adc int3 (bad) (bad) (bad) (bad) out and mov jg mov loop or fstpl sub mov in jg (bad) (bad) (bad) lcall jb cli sub mov push jne mov into es and xor sbb sarl (bad) push icebp add sub rcl jmp (bad) (bad) (bad) jg dec or pop or jb cli xor ficoml pop xor imul pop les ficompl cmp aad push xchg cmp dec sbb sbb xchg or popa jae push mov push sub (bad) incb cli cmp pop fs bound and and cmpsl out addr16 je in (bad) ljmp pop bound cmp mov inc outsb xchg pop mov add fwait out push test or push ss lods xor adc popf daa ja jecxz pushl jno fcoml xlat inc sbb (bad) sub call or enter leave inc fstp enter (bad) mov mov pushf les add (bad) call xor loop cmp pop jnp mov enter jne (bad) (bad) (bad) ljmp sub jp fdivrl loopne loope shlb hlt xor repz pop lock fsubrs sbb mov xchg sbb pop into mov pslld mov add sar ja adc dec orb inc ja mov pop int3 xchg inc loopne call andb xor jno dec iret iret ret shll (bad) fbld mov out es mov lahf push jl addr16 ds outsb clc cwtl xor (bad) loopne pop lea fcmovbe (bad) (bad) mov push pinsrw or push sbb sbb (bad) call jge add out hlt mov cld imull xlat in inc jnp scas scas push stos inc (bad) (bad) jg xor ret clc scas jl fldt push call inc cmpsb adc xor (bad) out cli adcb leave xor xor cltd ret popa and outsl xor dec xchg jmp call ljmp loope fnsave stos bound mov daa stos cmp (bad) (bad) (bad) cli sub pop xchg fiaddl pop and insb dec call pop mov (bad) or fildll sub (bad) sahf out push mov ja sub inc cmp repz sbb les inc std repz jns push nop stos mov lcall (bad) clc xchg adc ret jnp jbe dec pop insb xchg pop sbb pop cld inc dec arpl int (bad) dec bswap inc mov adc adc dec ds sbbl xchg movsl cli pop cmp dec leave cmp pop hlt out jbe sbb (bad) into push stc mov lret mov adc jp add cmpsl (bad) jg dec inc cmp adc punpckhdq int3 subl imul call dec (bad) jmp pop jg (bad) dec leave adc xchg inc rolb popa dec rorl (bad) call ja jle lods push outsl (bad) sub and fsubs test mov data16 adc loopne mov adc (bad) (bad) (bad) mov fmull inc (bad) call aaa into add mov fmull (bad) (bad) call ret popf pushf test add inc pop iret pop xchg and inc (bad) or clc (bad) (bad) ljmp movsl out or in pop cs pop daa pop mov fisubl cs and push (bad) mov das out dec testl out lods add xchg inc lret (bad) (bad) (bad) incl cmc je je push lock nop pop js int icebp adc (bad) aad xchg mov pop decl (bad) call dec xchg loop rclb mov xor pop loop pop adc call cld push cwtl pusha push push (bad) sub pop pop xchg inc push out out jmp repz cmp fs (bad) (bad) (bad) aas adc jbe push or cli (bad) or mov adc jbe adc ret cmpsb sbb xor mov push hlt add mov push insb sub (bad) pushl mov data16 in movsb mov jns out sbb loope in jbe mov cwtl cmp cmc sbb rcl jo divl xchg fbld (bad) (bad) (bad) std xchg xchg cmc xchg xlat js xor out int3 (bad) int3 cmp lea inc stos push repnz or decl call dec xchg sahf dec in or sbbl scas lcall icebp lcall movsl jo icebp imul mov pop sub dec popf enter movsl int3 add (bad) (bad) (bad) decl push jge mov jl dec fs std ret pop mov es sbb stc das lcall (bad) (bad) in outsb in (bad) dec int3 ficompl in pop or cmpsl movsl push inc push pop jge stos insl rolb xor outsl (bad) decl xor or jmp pop adc bound pop add (bad) dec sar (bad) (bad) jmp stc xor mov mov lcall je push out (bad) scas gs outsl ss sub call cld test lods movsl jle xchg mov jge sbb ja (bad) jb or into arpl lock lods enter arpl test (bad) (bad) jp jo mov pop mov cmc and sbb push pop mov (bad) (bad) incl in or jp pop add push roll ret jp push mov cld movsb and mov lcall pop movsl arpl add dec and jle and xor nop push push push mov inc dec dec pop mov jp gs mov fimul sti and in insb cmp pop (bad) (bad) (bad) call aaa xchg fistpl subl xchg (bad) jo ljmp (bad) pushl lods xchg jecxz lock or insl in je cmp (bad) call call inc arpl cmc add or in jae push movsb pop push xchg fnstcw cmp cmp jb call xor movsl in cmp mov cmp mov mov mov test (bad) (bad) pushl dec cld outsb sahf lods adc mov fucomi dec test cltd xor stos cmp lea jle cmp (bad) (bad) (bad) cmp cmc push adc in nop idivb adc push int in das addr16 push dec (bad) sub (bad) (bad) (bad) ljmp mov pop pop sub mov aaa mov mov arpl (bad) (bad) (bad) fsubrs ja aam xlat inc sbb pop sbb cli add pop add adc bound int (bad) (bad) (bad) incl nop rcrb icebp mov inc cli mov mov (bad) push ss cli (bad) pushl je ficoml adc or call enter sbb push pop out notl inc imul (bad) incl fbstp loop in faddl or dec pop js dec dec ljmp (bad) dec pop xlat or mov adc mov adcb repnz pop push fwait ljmp test sbb add jne imulb loop and jns pop jnp (bad) (bad) (bad) decl and jge or lods fwait cmp mov xchg ret sbb inc mov or in (bad) (bad) (bad) call add loopne (bad) les xchg dec cmp xorb cmp cmovno xchg jle (bad) (bad) (bad) (bad) out xor mov pop jne dec push pop add inc mov jb ds das lods scas jmp lahf push (bad) (bad) incl push (bad) mov xor les mov rolb test fwait xchg (bad) fisttpl lock (bad) (bad) mov sub xchg xchg push loopne es pop jbe inc in or ljmp imul lret adc mov in sub cs pop pop push mov jg incb mov mov lods cmp xchg aas test ja (bad) (bad) (bad) stc test pop cmp and mov cmp repz lret les adc jecxz sahf jle out mov lea xchg xor ljmp pop cmp jne fstl pop push push sbb push aas (bad) (bad) lcall lret cmp rcrb jo push xchg push out dec stos pop dec xor sbb ds aam ss jg call movsb lods lahf push mov mov hlt (bad) sub (bad) (bad) (bad) ljmp pop test out pop (bad) (bad) push shl xchg mov or subl (bad) (bad) decl or mov and andl sbb sub xlat ljmp iret push cli push dec xor mov addr16 xchg stos (bad) (bad) (bad) jg imul push (bad) push jmp leave mov mov test sbb (bad) (bad) (bad) (bad) dec (bad) cwtl rcr nop xor mov mov cmc and hlt in fsubr rcrl pop in push ficompl fnstsw sti fldt cmp js jle pushf xchg (bad) jg jge cmpsl insl ud1 mov adc inc scas sbb mov adc daa pop add (bad) call lods xchg stos pop inc lret adc (bad) fcomip or xchg xor mov dec iret mov cs jo (bad) (bad) (bad) inc sbb sahf sub dec push pop push mov push int in pop roll sbb mov fcoms or push (bad) (bad) jmp push (bad) sbb loope fisub out (bad) cltd lret inc lods mov lahf push or (bad) aaa xchg mov rolb cmpsb arpl lock loope sbb (bad) (bad) (bad) pushl jmp adc inc loope popa mov popa inc fdivp icebp addr16 stos jl popl (bad) adc pushl rcrl test mov dec xchg fs or or push mov lds hlt mov enter icebp xchg mov adc push (bad) cli mov jecxz into and (bad) (bad) jmp push int3 fistpll fistpl addps and mov cmp xor incl clc add push push mov mov xchg dec lahf pop push and movsl ja inc repz ja orl push (bad) ljmp lock jmp rep out into xor int lods sbb mov cmp xchg jo cli insb in cmp (bad) xstore-rng cmpsl inc cltd mov and and jmp sbb int3 xor (bad) (bad) ljmp inc add pop jle data16 (bad) jae (bad) jo les sar mov dec sahf (bad) (bad) (bad) pushl xchg or into add pop int stc mov push sti push shrb and (bad) (bad) (bad) lcall out sbb cmp (bad) loopne cwtl push insl std mov and je sbbl (bad) incl inc mov xor pop or cs jl ja fist movsl and dec push imul scas jbe jns mov adc repnz addl pop xor pushf jne rorb or xorl or jo push or call loopne mov iret push enter mov jl mov mov repz call fldl jle add add loop adc fnstenv call dec out jns push fwait (bad) (bad) (bad) jnp lods lahf out add jmp push clc mov (bad) shrb lock repnz (bad) (bad) ljmp push xchg xchg dec mov or clc and mov adc xor sub cmp call iret lds cmc (bad) mov dec xchg scas adc mov cmp pop mov pusha adc scas fiaddl ret ljmp jb rclb mov (bad) (bad) fsubrp cltd jne xor movsl movl push leave dec adc cmp ficompl loop out clc (bad) jle loop int3 lds and push out bound inc stc fadds add sbb jge js outsl (bad) (bad) (bad) jmp loop (bad) std (bad) cli and js adc addr16 test jno xchg (bad) mov (bad) ds aad (bad) decl push into mov fbstp movb mov xor xchg push stos jge (bad) (bad) (bad) jg adc icebp xor pusha or imul add adc xchg test (bad) (bad) ljmp cmp and ret int3 (bad) daa fwait out aam enter or (bad) push int3 movswl or (bad) (bad) jnp sti fs test and ds xor nop (bad) jae jmp (bad) jmp lea mov cmp sahf mov mov and mov inc adc (bad) (bad) incl scas insb jecxz jb je xchg (bad) call (bad) dec hlt inc jle lock push jae jg outsb fildl daa sbb xchg inc (bad) out clc pushl mov push cmp jecxz mov mov pop dec xlat (bad) xor adc inc mov add pop sub int dec adcl mov cmp das (bad) (bad) (bad) inc cmp and mov jg loop adc xchg mov push cmp inc push jne nop (bad) cmp inc adc pop test sbb lret ss lock pminsw (bad) call dec cld in cmp mov cmc xlat bound add inc xchg xchg mov cmpsb push (bad) (bad) mov pop push adc and repnz pop aaa pop mov sub hlt jmp dec pop lret mov (bad) (bad) (bad) (bad) fistpll push adc xor rcrb addr16 mov pop xor add rcll xor inc cmp (bad) (bad) xor and shlb shrl mov lods cmp push jle incl insb inc imul cli jnp mov mov mov sbb dec cmc cmpsb test push jbe in int sbb ss (bad) (bad) jmp pop sbb sti mov (bad) loop das jno movsb inc dec outsl popa (bad) jnp (bad) (bad) (bad) jmp jp int je pop sbb loop imul sbb push and mov (bad) (bad) (bad) jp int3 cmp in ret repz out xchg out jl rcrl jnp ljmp lahf and mov fdivr (bad) (bad) jmp jmp push mov inc jbe lcall in jecxz mov inc and mov (bad) (bad) (bad) dec rol jo lahf dec inc std ficomp or xorb xor add ljmp sar inc pushf outsl add loop loop mov clc pop sbb (bad) (bad) ljmp movb dec (bad) inc cmp xor mov icebp cmp (bad) push cmc (bad) stc fbld (bad) jle gs (bad) pop int3 in aam sbb (bad) jg add or nop (bad) mov fdivrl (bad) or call (bad) (bad) lcall sub cmpsb and call popf dec in and fsubrl icebp mov sub (bad) lcall jo imul push or mov push out repz xchg ss mull (bad) in call add hlt scas cltd mov les test int3 sub call (bad) (bad) ljmp aas in pop test call pop mov test test test lcall movsb mov cmp xchg sbb into adc jp inc call xor sbb jge mov (bad) (bad) (bad) pushl dec cmpsl daa mov iret or (bad) jae mov mov push dec jg (bad) incl adc mov jnp addr16 outsl mov inc inc xchg outsl call (bad) aam (bad) jg pop mov fbld mov ljmp clc test jns mov push rolb psllq daa dec xchg pop (bad) (bad) (bad) (bad) out mov sub add mov jno and dec push jns pop not lcall rcrb hlt aam idivb loope inc imull es pop xor jnp data16 (bad) (bad) (bad) js ret aaa mov inc pop xor pusha push mov sbb xchg lods pop cmc cltd add and push mov push popf out cmp in ret push sar pusha dec cmpsl jo mov add cld (bad) jg cmp cmc xor jbe fidivl pop xlat sbb addr16 mov mov xor dec and rol in (bad) (bad) lcall daa stos jae jnp into leave inc out inc dec inc mov mov sbb push ror lock out (bad) (bad) decl jl cmp test cmp (bad) mov jbe (bad) jge out out mov std outsl clc (bad) mov dec sbb je movsb sbb adc mov adc add frstor packsswb xor sbb lcall pop mov in push or mov xor mov mov in jbe lret cmp (bad) jmp sahf pop lds aad cmp sbb mov rol inc pop cmp (bad) (bad) (bad) fcomps orb mov cmp dec insb inc subl cwtl mov (bad) (bad) std push fildll mov mov mov loopne add pop push add fldcw sarl mov (bad) js pop xchg out mov or xor arpl mov lret ss loope sub pushf arpl xchg cmp int3 add repnz mov xor insl cmc xchg and (bad) cld sub xor sbb aad jb mov inc add xchg push dec lods (bad) (bad) (bad) (bad) jle rcll mov insl repz push aaa dec pop xor mov inc fisub into test xlat push sbb xchg push call mov out lods test cmp sbbl (bad) mov xor insb sub push (bad) not mov pop aam decl add clc js and cmp (bad) (bad) (bad) lcall inc sbb decl mov nop in push lret push mov cmp fdivrs test call add jae,pn or mov int3 sahf daa (bad) (bad) fildll and cmp add scas sbb incl std pushf imul push lods push dec fsubrs pop jge push pushl mov push je sbb popa aaa hlt mov lret inc sbb adc mov (bad) and and (bad) pop mov mov outsl cli pushl ljmp fcmovnbe jbe lahf cmpsb or xor (bad) (bad) decl xchg sarl fwait cld mov scas jge stos enter pop ret out clc ja sar push loopne xor mov insb jnp fcomip lcall popf inc and cmc subl mov out in (bad) (bad) (bad) jg mov andl sti add mov testb fs cli in (bad) jmp mov arpl movsb hlt inc mov rclb test pushl out or fildl xchg push ds cmc adc sub xor and jns (bad) (bad) call fsubr cmpsl or into sbb mov push jno jne fcompl add mov rcl cmp jns lret lea pop sahf lret test cltd std sbb aam (bad) call jnp addb aaa inc inc adc add mov (bad) mov pushf adc shr sahf js rorl xlat xchg add sar (bad) (bad) jmp cwtl test lret dec cmp sti mov adc shrl adc fisub cltd cmpsb addr16 mov sbb pop mov mov lahf cmc inc pusha daa loopne popf push (bad) (bad) (bad) (bad) (bad) xor lahf mov push insb push mov mov test sar call jl dec lcall push cltd cmp mov add (bad) (bad) ljmp clc inc xchg in xor dec rcl xor fist mov ds jo dec test pop jle and hlt jmp fucomp repz (bad) incl cmpsb jb xchg mov loopne mov pusha in push jmp (bad) (bad) push out (bad) sbb loop jl xor decb aaa lods (bad) lock push (bad) shl mov xor test rcrl mov pop mov cmp pop lcall decl insl ss mov rorb loope out cmp mov fcomip call dec mov xchg popa bound dec mov outsl iret daa imul fdivrl out mov test scas ds dec sti jg or jl (bad) mov stos (bad) (bad) (bad) lcall and xor xor mov push mov loopne lock sub and (bad) jmp (bad) loope mov jno cmp mov hlt (bad) decl push rcr aad add cmp cli ror sbb sub (bad) decl loope dec je jg daa mov stos jno or (bad) (bad) call (bad) or sub pop outsb fidivrl out mov pusha mov stos aas cmp les je xor mov mov in imul popa add je (bad) lcall jae rol inc imul (bad) xor mov push enter dec mov or lcall shl jo stos mov push inc lea xchg (bad) lcall sub (bad) lret lods jo les rolb jmp clc add mov and (bad) (bad) (bad) pushl pop mov xchg pop dec lret call pop frstor push pop push test loop fiaddl insl insl push push std call nop xchg inc cmp jp inc lea push loop jle (bad) (bad) call fs jge lret inc fbstp and into fidiv pusha dec inc stos pop jb loope (bad) (bad) ljmp lock cmpl sub sbb mov xor pop mov in push (bad) jg pop cld dec lret dec outsl mov adc (bad) aaa stos aaa mov mov aas ss (bad) (bad) (bad) pushl ret and xor dec enter movl mov iret and xor (bad) (bad) (bad) cmp repz cmp int push sbb loop mov mov dec pop jb ss mov (bad) sub inc inc iret pcmpeqd xchg mov ss add sub inc mov arpl mov test xlat imul jb mov cmp pop xchg (bad) ljmp cs loop or add jne xchg scas xchg lds (bad) (bad) call outsb add mov mov mov cwtl pushf imulb js lahf arpl cmp incl lret loope jge sti xchg xlat dec or add sbb jno push cmp (bad) incl roll mov xchg outsb xchg int pop xchg int3 insb lds dec jnp sub mov jne (bad) (bad) (bad) pushl sub adc lock rcrb and mov lods cmova popf test stos jb (bad) (bad) (bad) pushl add aas push push les push dec mov repnz sub addr16 andb (bad) decl pop outsl loop mov jl xor fisub mov pop lahf (bad) into pop (bad) (bad) ljmp ds (bad) xchg lret xor dec test sbb in xchg pushf test or (bad) (bad) (bad) call fstps aas inc popa hlt ss pop adc repnz xchg ret jl dec add mov (bad) (bad) call repz rcl adc mov xchg mov nop xor xor cmp push (bad) (bad) (bad) lcall push notl rol or les pushf fnstsw jno shrb mov imul lret adc stc (bad) (bad) (bad) ljmp neg std adc adc sbb sbb or adc flds mov ljmp movl in lahf ds cmp dec jmp push idiv (bad) ljmp mov jne aaa subl push dec pop in loop xchg push (bad) or push (bad) (bad) (bad) call cmp out sub dec jmp mov mov mov push (bad) mov mov (bad) (bad) decl sbb negb push and jne pop adc icebp push aad movsl cmpsb mov (bad) lcall jno mov fwait mov dec rcrl push dec push sub cmpsb add (bad) (bad) (bad) frstor outsb jge inc and out in add cmc push scas mov (bad) xchg int dec pop dec fdivr (bad) (bad) call inc bound cmpsl in pop jg cmc fildll dec inc adc and (bad) (bad) decl and daa in jg mov loope and inc (bad) adc (bad) (bad) (bad) (bad) fmulp and pop movsb lret in push mov call imul jnp jno jne js sbb mov outsl (bad) (bad) (bad) (bad) jns cmp dec loop (bad) mov mov jmp int3 xchg push xlat (bad) xchg xchg loopne cltd int cmp ljmp shrl sub mov fsubp cmp ds repnz popf xchg mov (bad) frstor fnsave push ds inc mov sti (bad) sbb lcall (bad) (bad) (bad) lcall mov daa or nop enter fbld gs dec mov xor enter dec cmc (bad) (bad) incl arpl cmp pop xchg push or out mov push cmp ljmp lea xchg outsb test rol fdivrp mov (bad) (bad) push lods mov das lds (bad) or push mov fmul in insl xor cli (bad) (bad) inc das push sar dec aad js sbb out popf xor inc cmp dec xorl pop data16 cltd cmp insl push rclb (bad) (bad) lcall je jns nop pop call repnz insl daa add dec loop in nop movsb gs inc sar (bad) (bad) ljmp pop addr16 stos cmp lahf lods xchg sbb and ds jl (bad) jmp lahf mov mov popf mov or xchg pop mov outsl (bad) mov lods lods (bad) (bad) (bad) pushl cld lds dec js or data16 cmc fsub pop xor les test (bad) (bad) (bad) pushl ljmp and mov or push sarb pusha stc ret push (bad) (bad) (bad) incl jnp pop rclb sub inc adc mov xchg sub mov dec mov mov lods (bad) mov mov imulb pushf and mov rorb incl scas popa ljmp or pop pusha (bad) xor pop ljmp cli ljmp daa jae out inc dec mov ss aaa or ljmp mov (bad) (bad) incl out mov pop mov dec inc mov inc xor add mov add (bad) (bad) (bad) incl mov xchg xor call (bad) ret push out ror lret cs (bad) (bad) ljmp xchg sarb push int adc jge or popa pop fs lret xchg ss mov jmp (bad) incl lods pop jl dec (bad) mov mov lret (bad) xor push (bad) outsb sub outsb aam lcall dec jg add in jecxz (bad) (bad) jmp popf les cld mull lret push enter cs sbb (bad) (bad) (bad) (bad) cmp xchg out popf inc sbb add mov in or mov xor (bad) mov (bad) ljmp in aam mov sub xor lret popf stos and (bad) (bad) decl jbe in das bound int and fist inc ret xchg add cmp sar es hlt (bad) in cwtl pop xor (bad) (bad) (bad) jg cmp cld (bad) mov cmp (bad) incb xchg fdivrl int3 cwtl push add test addb jl jb add mov clc mov mov (bad) cmp out aas sarl cmp (bad) mull and jle and ss and dec stos mov mov push js and imul stc (bad) (bad) (bad) (bad) fistl jo pop sbbl inc jnp test (bad) dec pushf adcl cmpsl push (bad) inc fs lods add add push dec pop adc adc jmp xchg xor (bad) mov mov adc jo adc add faddl xchg (bad) mov (bad) (bad) (bad) ljmp mov xor pop add cltd push pushf cmp mov cmp sub push xlat mov dec bound lcall cmp mov movsb les inc add paddb insb push lahf lock (bad) out icebp (bad) (bad) (bad) jmp sbb psubd scas aad icebp adc xchg sub je icebp outsb xchg jno sbb sahf (bad) (bad) (bad) pushl aas sub jp inc sub mov xchg push lcall das dec aas ds mov inc in (bad) (bad) (bad) (bad) lcall rcrl outsl mov xor negb js sbb mov test sbb popl fst hlt mov jmp call (bad) jg scas lock pop and xchg inc mov mov std cmp mov decl test dec imul xchg jge inc mov mov aaa (bad) (bad) (bad) call ror mov pushf push xchg mov and mov push insl ja dec pop arpl mov repz mov fimull rcll lds icebp push and cmp jp pushf sbb adc test or out cwtl mov in push ret jbe jmp cs (bad) (bad) (bad) jmp xchg sbb fcmove (bad) push mov (bad) aam aam fstpt mov mov fcomps call call scas mov mov push pushf or add mov addr16 (bad) (bad) pushl cld jge (bad) adc out push push sub xchg ret daa mov gs or and jno pushl (bad) ss mov hlt xor (bad) mov or sub orl (bad) decl jp pop cltd out xchg jecxz fsubrs inc jno xchg jo sbb (bad) ljmp cmpsl (bad) out test sub xchg fiaddl pop adc and (bad) (bad) decl mov xorl dec sbb jle insl dec inc mov jns imul (bad) (bad) call in jp mov xor or or xor jae aas xlat cli cmp std (bad) (bad) pushl scas loop orl call inc rcll xor jo jge (bad) pop pop or pushl hlt jl cld fnstsw rclb repz shrb xchg xchg cli jg mov push xlat pop clc pop imul icebp (bad) ljmp sbb mov jbe fcmovne cmpsl ret aad std jp (bad) (bad) fist dec fisubl sub xor iret jb sub insb push cmc repnz insl sbb (bad) (bad) ljmp fwait jo repz xchg lock js into js jnp mov cmc aad in mov std mov sub call push push sti or xchg leave xchg mov sar (bad) mov fldcw dec xor sub clc rcrb jmp (bad) (bad) (bad) jmp add in mov sbb data16 loopne or or rcr jnp xchg mov decl add jl mov das (bad) insb mov cwtl icebp mov (bad) (bad) ljmp xchg movsl ss into sti pop out rcrl rol push mov push mov cmp pop jo rcrb cltd cli ss test je gs dec cs js (bad) lcall cltd ljmp in or daa mov cmp mov mov incl adc negl add lock jb out push and inc mov cli jg fmuls mov cmp popa xchg sub or (bad) ljmp xchg mov (bad) fisttpll push out xchg in (bad) shll jbe (bad) (bad) (bad) call sahf inc insb loopne push fpatan adc sahf dec push lret mov test xchg pop mov scas (bad) (bad) mov mov ljmp loopne jae push add mov scas dec pop repz cmpsl mov or aaa ljmp stos sbb ja jns (bad) (bad) out and cmp adc (bad) (bad) ljmp stc lret dec sbb or inc dec rcrb popfw test fildll push sub test mov test push movsl pop fsubs call je pushf (bad) (bad) (bad) call mov subl lods (bad) arpl xor stc adc xchg movsl push inc lods xor (bad) (bad) (bad) mov sbb aaa jge ret inc jbe cmpsb push and testl decb jne push dec adc jbe pop dec mov cmp cmp cmp loop add (bad) fistp outsl cwtl add in bound cltd push subb jg (bad) lea jmp mov (bad) (bad) jg push or out and mov adc clc mov sti fcmovbe in (bad) (bad) (bad) (bad) in push dec or repnz xorl dec xor push add (bad) jg (bad) js jle push add scas loope push sub mov and shll mov (bad) cld scas out jp lret mov sbb and fcmovu (bad) or ret call and and mov adc scas clc idivb and jae dec adc lahf pushf mov push inc mov (bad) (bad) decl scas mov bound inc add (bad) fs xor sbb xor ss into (bad) (bad) (bad) decl lahf (bad) xor iret sbb xor pop es lcall loope idivl mov (bad) lcall dec pop mov cltd push mov aad mov fisubrl mov dec lahf or sbb jl in sub out pop movsb jg cmp jge sti adc stc xor nop test stos (bad) (bad) (bad) incl jmp xor gs psubusw xor fisttpll inc sahf (bad) mov xor (bad) (bad) (bad) ljmp xchg and imul fcoms dec xor jmp cli sub (bad) incl daa or pop les fisubr ret imul call mov ljmp aaa leave add clts imul or push (bad) jg or push sub dec add int3 ja (bad) (bad) jmp cmp lret divl lods hlt sub pushf out and test in (bad) lcall or fiaddl movsb and cmp mov scas aam mov adc call adc movsl inc mov outsl pop (bad) (bad) (bad) lcall repz xor stos movsb mov out push mov lods fildl (bad) (bad) ljmp sub xchg and sub je and lcall aas push and (bad) (bad) (bad) mov xchg xchg add (bad) test (bad) xchg pop push leave mov add cmc ljmp inc lds xorl lea cmc (bad) (bad) lcall mov sub jp enter pusha fdiv enter test rclb (bad) (bad) (bad) decl jbe (bad) lock cmpsb mov mov xor fimul repz inc (bad) push add jg test ds push stos sub cs rorl fwait (bad) jmp mov cmp loop jl scas dec dec loopne (bad) (bad) stc fsts jb gs push out mov inc in int3 push and (bad) in pusha outsb jo (bad) (bad) mov xchg loope or cmp jno,pt ffree inc and (bad) (bad) (bad) inc (bad) sbb inc addr16 call mov lods int xor push push pop mov in (bad) (bad) (bad) (bad) mov loop dec inc inc in sub push cli xchg add mov xchg inc mov push jmp push cld jmp aam das mov test sbb pop pop stc aas cmp cli (bad) fistp scas mul les mov jmp sbb imul sti imul lahf in mov xchg jg push xchg mov mov (bad) (bad) dec mov sti loope (bad) mov sub rorb icebp mov rcll (bad) int cmp (bad) (bad) (bad) fcomps inc pop leave cmpsl in sub lock fcmovne xchg lock pop sbb jecxz jg stos xchg ret sub cmpsl scas push sub pop (bad) cmp ret fsubrl mov jbe test cli cmpsb adc insb jmp mov mov xchg out xchg js jbe or jo pop cmp int3 and jnp cld (bad) call push test or sbb pushf adc nop cmpsb gs jl mov lds push (bad) push sub cmp mov sub jnp repnz xchg aam clc sahf or (bad) (bad) jl sbb pushf fs and seto jg xor aad jno (bad) pop pop jl test jg lock jbe mov popa mov hlt test loopne jo mov jo jg outsl hlt (bad) fstpt outsl dec (bad) inc outsl pop enter daa jmp loope sub call dec lock in cld flds addr16 repz inc jno mov repnz cmpsl add xchg das push (bad) mov mov sbb mov dec sbb push add rcr test and push stos mov adc add jmp dec cmp or ljmp out jnp push lcall sti arpl mov loop push jno pop iret loopne adc adc leave (bad) (bad) (bad) (bad) in sub cwtl xor inc mov bound fisubl fcmovnu xchg cs xchg or ret clc adc mov jae jmp daa and xchg pop cmp (bad) decl adc stos push push mov cld popa popf pop lret xor pushl jp add shr divl ss jb cmp ret stc roll lcall (bad) jmp sub add pushf push add lret push inc ja outsl cs pop std imul xlat (bad) (bad) (bad) push les inc or mov inc adc xchg jmp adc mov add xchg out test (bad) jg xchg xlat call jne xchg pushf in push sbb dec lds shll inc mov (bad) (bad) decl xchg or bnd push mov inc sub push aas les hlt in mov dec xchg jge scas sbb pop cmp jp mov sahf (bad) xchg jae out dec out jne pop add inc bound call add jp mov pop xchg mov testb jae negl jns (bad) (bad) mov js stos mov push adc mov push inc testb das cli pop jmp cmp jmp sbb pop jbe loope inc imul add pushl (bad) mov mov jae stc jnp pop pop pop push and sti in (bad) mov and cmc mov sub sahf and adc (bad) (bad) (bad) inc sti mov mov enter stos lahf lret cmp mov dec dec out (bad) (bad) (bad) jmp leave fcomp mov xor enter lods les sub dec iret fildl xchg lea dec cld jmp aad ds out loopne xchg mov (bad) (bad) (bad) jg hlt sub xchg bound jp aam out lcall out mov (bad) ficomp insl push loop sarl inc and sub (bad) incl loope shl fnstsw fwait test mov pop and out in lcall (bad) call std dec (bad) aaa arpl ret jae ljmp (bad) pop call (bad) (bad) (bad) (bad) mov push inc inc inc dec lahf das frndint lahf aas mov test divb inc mov stos add pushl xchg scas shll js in mov ds das cli push ja lods cmp (bad) fdivrl test xchg pop pop mov nop fdivp out idiv (bad) inc push fmuls cwtl jo inc int mulb sub mov mov xor das cli (bad) in into sbb les cs cmp (bad) dec xchg loope cmp je ja mov leave jb hlt sbb popa outsl (bad) lcall push and loop mov popf ds cld data16 gs (bad) (bad) (bad) jle pop pop imul mov mov lahf push inc outsb pop add (bad) lahf cs pop xor (bad) incl mov repz sahf (bad) iret push stos sti pshufw (bad) ds mov (bad) (bad) (bad) call inc scas or cmp and test lds pop cmpsb or repz test loop (bad) push ffree enter push aas mov (bad) (bad) (bad) out push sub cmp inc mov daa (bad) nop jbe dec pop lret pop adc rcl xor cmp icebp mov cmp mov fcmovnb roll pop dec int3 mov pushf test pop lea fidivl push sbb inc pop xlat mov pop gs (bad) (bad) call fs push std or decb sbb lcall icebp xchg add mov (bad) (bad) incl out insb xor mov jp fidiv xorl clc (bad) (bad) lcall push int add push mov xor jnp lea mov xor dec mov xchg or dec rolb fcoml add repnz pcmpgtw aaa cld (bad) (bad) cmp loop inc int3 (bad) ret inc mov insb bnd and (bad) (bad) lcall sbb jne (bad) hlt mov cmp and ds jp mov test test push cs cmpsl rcrb bound scas sbb idivb sahf pop in (bad) jg mov xchg jnp cmp sbb and push in test decl push aas mov lcall incl andl das cltd fcomps xor jbe pop rcrl in (bad) (bad) pushl roll cmp jle incl xchg mov sub (bad) (bad) ljmp fild mov xchg jae,pn or mov jno cld (bad) cmc xor int3 addr16 mov rcrb (bad) (bad) pushl pop rcll cmp pop fcmovnb add xor mov or xchg (bad) (bad) in (bad) je cld out add (bad) clc movsl shll push ljmp stc fsubp cwtl push sub add call mov sub stos add lock popa sbbl adc (bad) (bad) (bad) (bad) (bad) (bad) cmp inc push test pushl jae ret and negb out or outsb and dec pop cmp jp xchg push out sub into in dec xor xchg (bad) loopne jbe cmpsb mov lret xchg call sbb enter and cmp pop or pushf clc fildl adc (bad) (bad) (bad) fnsave (bad) lock xchg shrl test ss ja into xor jg adc (bad) (bad) (bad) aas inc jle xchg jge or push dec movsl jecxz sahf ljmp mov (bad) (bad) (bad) inc cmpsl je jp add jmp popw or addr16 out loop sbb daa mov (bad) xor cli (bad) pushl jo inc sti pop lds bound loop repnz (bad) call insl pop leave add (bad) negl mov cltd cltd loop imul jno (bad) (bad) ljmp adc std adc addr16 cltd mov stc enter stc (bad) (bad) (bad) ljmp lock push push fldcw and pop cli sub mov and lods inc or jle or dec (bad) (bad) (bad) jmp fsubl in or stos inc (bad) mov dec or xchg cmp (bad) jmp callw fadds icebp shlb stc mov movsb mov je fwait paddsw sti sbb (bad) (bad) sti jnp inc sbb (bad) mov in inc jp fimull inc out arpl jmp (bad) (bad) pushl and (bad) daa cmp xchg inc adc hlt jl xchg push das aaa gs sub (bad) (bad) call xchg scas xchg and ja inc cmp push loopne fwait shll imul sub (bad) (bad) (bad) ljmp loopne lret push xlat out (bad) add mov cli push xchg cmp mov stc aaa push js (bad) (bad) (bad) inc xchg sbb lret mov (bad) fmull cwtl in (bad) aam xor push (bad) mov movsl mov sub out int sub push inc das adc adc lock (bad) lcall xor (bad) push popf aad imul sarb out leave outsb adc add (bad) (bad) jmp shll cmc pop cs push dec or into xlat (bad) (bad) dec rclb mov insl xorl ror lods les (bad) (bad) (bad) jg out cmpsb in pop shll out lds mov hlt ds mov fisttpll jecxz (bad) (bad) (bad) jmp sub mov fistpl std sbb inc push fiaddl cmp into stc stc cmpsb add (bad) (bad) jmp push or repnz adc in cmp add (bad) xchg nop out or or mov cmp xor aas mov cs out cwtl data16 ficom xchg mov sahf insb popa sbb sbb (bad) (bad) incl repnz push jo mov xchg sarl jb adc aam shrl js xchg and (bad) (bad) lcall push loopne push xor or jle xlat jp and xchg lock add out (bad) (bad) (bad) inc or sbb pop cmc js or push push fild imul mov arpl outsl dec xor (bad) (bad) (bad) in cmp cmp ret movsb mov lods iret lret sbb out stc or (bad) (bad) (bad) mov lcall sub mov jno dec mov js fimull jno xchg and (bad) (bad) jp clc jns pop inc sub arpl in push xchg jb rorb xchg dec add or sbb xchg (bad) decl es cwtl enter pop adc sub xlat adc sub das cli (bad) jg xor dec xchg mov push data16 imul in mov (bad) pushl dec sub pop shll cmp dec adc je faddl mov incl cld call loopne loope sub lahf sarb movsl mov and cmp (bad) (bad) pushl (bad) roll ja ds push adc icebp mov ljmp mov cmp sbb test jbe into lcall sbbb and (bad) (bad) (bad) lcall xlat mov sbbl and push (bad) xor leave sub (bad) (bad) jmp inc pop xchg xchg test test inc fs ret push lea mov dec int dec adc sahf fcomip (bad) lcall out cmpsl jecxz nop mov push jle xor sbb test inc adc jo cmc (bad) (bad) (bad) (bad) mov das cmp push mov mov repnz adc pop mov insb std sub (bad) (bad) (bad) call jne (bad) orb mov pushf mov ret scas jge popa xchg mov dec (bad) (bad) jg lret inc bnd and decb movsb arpl pop sub pop hlt (bad) (bad) inc jge sbb fs inc mov jecxz ss fdivrs loopne mov or pop push sub adc inc and fstl jne in les (bad) out or mov addr16 mov and xchg stc in in jecxz sbb push cmp nop (bad) (bad) (bad) call (bad) loopne mov xchg sbbl in mov xchg (bad) pushl das mov stc jnp movsb sub std int3 add aad or cld adcl fisubl inc nop lods sub (bad) mov js or std pop mov mov mov (bad) incl and xchg push fmuls pavgb ja popa push xor stos (bad) fbstp notb enter xor imul data16 iret sub pop (bad) (bad) (bad) call inc jb roll sbb mov push movsb vpmacssdd sub fist subl adc cmp std jmp push jl push mov decl and mov out rcl (bad) (bad) (bad) call xchg sub punpcklbw fadds pop shrd xchg inc mov pop (bad) (bad) (bad) inc inc cmpsl or (bad) jle clc out fimull incb cld cmp cld (bad) (bad) lcall scas adc andl pop out enter (bad) sbb (bad) inc or sti dec add fwait aam sbb (bad) mov xor (bad) (bad) jmp int3 cmp int sbb loopne aam sbb fs push idiv (bad) in lods jbe sbb add add xchg push cmp dec dec arpl inc add cld cmp inc or xor out inc mov push jbe mov push and inc pop add sub push pop hlt push adc xor mov adc (bad) lcall adc pop test mov and imul lds stos lcall add lret pop ret dec mov fcomip fs stos add cmp jb repnz push sub (bad) mov add call (bad) in dec cmp lret ds mov iret lds xchg out mov imul (bad) (bad) lcall or sti pop pop jecxz cmp jo outsb adc outsb sbb jg lcall jmp les iret sub sbbl test gs mov aam mov add xchg ror mov (bad) (bad) (bad) aas push gs xor imul or adc in addl rcl pop mov mov and sbb aaa ret fstps push clc mov (bad) lock call mov es (bad) mov stos dec stos imull mov ljmp scas aad inc or scas push push mov aam stos out or (bad) (bad) (bad) ljmp notl sub xor mov (bad) push arpl pop cmp out addr16 aas pop stos das adc incl pop std fwait int and add mov (bad) (bad) (bad) pushl or jae aas sbb ret test adc cmc test scas in mov ja (bad) (bad) call pop and xchg (bad) loope insl mov xchg cmpsl pop (bad) insb pop ficomp (bad) (bad) jmp cwtl mov fidivl sbb xchg lahf leave cmp cltd and or xchg pop ss ret or lods aad jb pop inc stos (bad) mov sub hlt aam or das dec and sar (bad) (bad) jmp popa ds loop and push mov xorl cwtl pop sub (bad) (bad) (bad) jmp mov jb cs jns (bad) arpl cmc mov popf mov pop std add mull pop adc dec gs cmp mov xor jmp jl fsubl jg fisubr or inc neg test aad push in (bad) decl incb push clc xchg stos lahf inc mov (bad) js and xor (bad) (bad) (bad) decl data16 push mov jne test mov rorl pop (bad) and hlt movsb mov mov mov xor lahf pop pop std cmp pusha sub xchg (bad) (bad) (bad) (bad) ljmp cmp data16 push sbb popa std push dec mov adc mov mov cmp cmc mov je out dec pop adc clc sarl fcomip incl icebp jle aas xchg xor mov lock mov (bad) decl ds roll cmp add or (bad) (bad) push fildll xor add fsubrs clc jo mov (bad) (bad) (bad) mov adc inc and fmul pushf mov icebp pop out xor icebp imul (bad) incl cmovnp cltd pop inc jmp notb and insb mov (bad) call stos xchg das sar cmp je arpl jecxz mov in in jo push ret (bad) cli rorl xlat push shll lret addr16 pop mov pop (bad) call into inc in inc push dec out stos sti xor cmc pop nop lods pusha xchg cmpsl dec (bad) (bad) (bad) call adc pop cmpsl arpl das adc ret nop fcomp mov addr16 fildll pushl adc jbe bound xor (bad) pushl inc in adc stc mov sub adc outsl (bad) (bad) decl in xor or sbb nop add cmp std test sahf (bad) mov xchg push inc fldt (bad) shrl lock call dec cltd sbb js (bad) mov (bad) (bad) (bad) jmp setae mov mov dec int add mov push mov dec mov lcall jl pop int idivl nop loop mov ret bound sbb or dec push cli cmp fwait outsb mov loopne adc sarb sub test scas and (bad) call sub add sbb fcoml add sub aam xchg ja,pt sbb inc movsb ds loop cmp int3 in sarl in out call loop ret fisttpll dec roll mov cmc das inc es call mulb and (bad) call ret jnp imulb and push repz jo (bad) (bad) fistpll and cmpsl xor mov mov (bad) pop leave test adc lea inc data16 sbb gs in push ja or push add xchg cmc mov cs lret movsl ret (bad) (bad) jmp cs dec stos inc out jno xor mov stos cli gs jnp (bad) (bad) (bad) inc cld cwtd lcall push int mov (bad) xor test int3 dec dec cmc xor dec xchg inc jae aad fs cmp bnd (bad) (bad) (bad) jmp xchg incl adc vmread mov pushf inc enter je call (bad) (bad) decl mov sti pop and pusha cltd jge test scas cmc xchg push sar call jl shl sub mov jle and xchg scas mov dec aad (bad) (bad) (bad) ljmp pusha mov repz out xchg dec fisttpl ljmp push pop mov mov mov (bad) (bad) lcall outsl cld stos cmovno jns fmull jmp mov out add (bad) ljmp repnz mov dec sbb mov out (bad) (bad) call pop in pop out orb sub fcmovnbe sbb xor xchg xor cmp sbb fwait jge lea push movsb xor and push jo push dec daa cmpsb sub (bad) (bad) dec xor sub fimul cmp or lcall dec fs mov push cmp pop and push icebp ljmp lods aad xchg addl movsl adc loopne jnp cmp int fwait jae (bad) (bad) (bad) (bad) out out mov xchg ja push sub es sub ljmp (bad) incl ss pop mov std pop (bad) xor sub add pop mov js in mov (bad) pop adc dec js (bad) iret and cltd aaa outsl orl xchg pop std aad pushl jg (bad) incl dec pop in cld cmpsl and mov (bad) (bad) (bad) incl mov lods aas cld cltd mov pop dec push addl or (bad) lret sub add cli and (bad) (bad) mov ljmp xchg jmp jmp cmpsb add dec std test rorb xchg (bad) xchg pop outsl sub in sub loop inc (bad) ds xor xor (bad) (bad) (bad) decl and or hlt int cmp pop insl xor pop hlt xor (bad) (bad) in pop into push xchg into bound inc mov xchg (bad) jns jae (bad) (bad) fbstp loop gs cmc fcoml mov ret mov push or mov fwait clc (bad) jmp (bad) leave or movsb into aas or pop (bad) (bad) (bad) jg mov test je adc cld xchg sbb jne xchg enter sahf (bad) (bad) (bad) (bad) call mov test ja int ret imul mov (bad) mov mov mov in cs adc inc dec lods stos adc mov aad (bad) in dec test movups xchg leave mov repnz and pushf int3 xor mov (bad) pushl mull mov xchg mov bnd mov xor jge xchg ljmp jecxz and or aam push or and mov push (bad) (bad) (bad) pushl inc dec xor or sub cmp fsubrs into inc std jbe dec pop sub loop inc scas adc cmpsb js test mov leave aas test outsb xor or (bad) (bad) (bad) lcall jo call andl scas mov push repnz inc inc scas sub (bad) mov fildl sbb (bad) xor or inc (bad) (bad) (bad) jmp repz test or aaa addr16 data16 cmp and xlat sarb cmp jg (bad) insb mov rol fsubrp and inc fisubl jmp cmp aam loopne stos neg fcomip (bad) pushl dec and arpl push fsubl pop push ds mov push inc fistpll lcall cmp pop inc mov ret adc stos push (bad) out cli jmp (bad) iret xor push test lahf pop je jns std or mov aaa cmp addr16 mov ds mov (bad) (bad) cmp in incl cmp pop movsl call mov or data16 fcomip ja jae dec mov pop clc adc jg or (bad) call adc mov xor imul adc call adc lea mov push outsb jmp mov cmp sub or in push je or (bad) (bad) jmp (bad) (bad) sub (bad) or and mov or or rcll jmp (bad) (bad) inc cmc outsb clc pop jae and test dec movsl (bad) fwait bound jns push sbb aam std (bad) (bad) (bad) call cld mov cmp pop cmc mov pop inc jg aam xor xchg int insl aam sar pushl cmp inc push hlt in int3 sub repnz (bad) aad ja ljmp mov fdivrp dec les cwtl mov sti jp mov or inc fadds lock (bad) incl ja jmp fmuls das xchg sub outsl (bad) (bad) call repz out cmc inc das sbb and push mov stos out sub push rcll rcll idivl (bad) pushf adc fucomi mov lret jne (bad) xor sbb fstps xchg movsb pop push (bad) xor mov hlt in (bad) (bad) jmp pop fwait lret icebp lds jne xchg or repz inc or (bad) (bad) decl pop or shr adc insb cmp imul xchg push test add clc (bad) (bad) mov adc jg test popf idivl or call or stos sbb mov cmc sbb aam (bad) pop push iret fcomip (bad) incl xchg mov test push mov ja pop sahf pop das push xchg cmp (bad) call or mov out pop add mov cmp fcomp imul sbb (bad) cmc push daa (bad) (bad) incl mov (bad) in in or bound sbb mov inc ds (bad) (bad) incl ret mov movsb ss mov scas or ja cli adc (bad) (bad) fimull push enter ds or xchg sarl stos js ss pop pop (bad) (bad) (bad) jmp inc out test leave jo xchg dec xor push add fiadd aam test aaa jl (bad) (bad) ljmp add push fwait jo push xor push shll test dec xchg (bad) arpl enter add in (bad) lcall (bad) (bad) (bad) ds push in xor scas cmp sbb cwtl leave not (bad) ljmp hlt lcall cs dec (bad) inc push fcomps pop mov pusha jae (bad) stos sub into (bad) (bad) (bad) decl mov sti dec insb add dec out daa xor push popa pop es out sub pop push jmp call dec leave popa jle and add cmc xchg js xchg push push (bad) xor icebp (bad) (bad) (bad) call (bad) add pop push adc or cmp xor xchg test (bad) (bad) (bad) mov sub dec push fcoml rorb seto cmp adc and xchg adc stos pop cmp cwtl dec psrad cmp fnstcw popa das popl push (bad) loopne scas cmpsl mov mov repnz pop sub cmp push sti cmp sub add mov mov pop (bad) fisubl inc (bad) (bad) (bad) dec mov adc ljmp dec sbb inc pop mov inc xchg jg cmp (bad) (bad) (bad) jmp push dec inc xchg cmp dec icebp aas shll es sarb arpl add cld (bad) decl pop cmp (bad) adc andb mov addr16 (bad) (bad) (bad) call dec ret jle test mov pop out cmp push push pop sbb adc jne (bad) lcall pushf ja cltd add test imul nop (bad) fwait hlt test mov (bad) (bad) (bad) lcall mov aaa sbb inc movsb add outsl fisttp es fwait and clc mov ss (bad) (bad) (bad) pushl cmp imull add adc sbb (bad) je jle cmc in jbe iret (bad) (bad) (bad) call dec leave dec (bad) pop cmp mov in add das lret jge decb push bound adc (bad) jg cwtl (bad) adc dec mov and stos pusha (bad) (bad) (bad) jg daa addr16 stc lods cli add outsl (bad) mov jae movsl test cmc (bad) (bad) (bad) ljmp lds pop outsl loop xchg loopne push jmp sbb (bad) stos (bad) (bad) (bad) incl jae push sbb jecxz adc sarl fisubl mov inc fbld roll push or inc mov push stos int3 mov lea and fild call and das mov lds mov imul xlat mov (bad) jmp or cmc xchg push scas js lcall mov lock (bad) (bad) sti int adc adc aad pushf or in in lds popf or or (bad) (bad) lcall pop add js arpl ss add xor clc dec (bad) (bad) (bad) lcall mov jb cmpsl cmpsb push pushf aam lcall paddb mov lret push pushl sub lahf inc xor popf adc mov dec sub imul sbb (bad) ljmp pop pusha out mov in xchg or cmc mov cmp pop fmulp dec (bad) (bad) (bad) (bad) fdiv stos aad stc test sbb push std mov or sbb stos push bound sub (bad) (bad) (bad) mov scas sbb lods test jb test xor int3 int sub add xchg and (bad) incl mov dec and sbb mov imul out idivb push mov (bad) jecxz out (bad) (bad) (bad) jmp push push cmp mov push (bad) and mov xchg xor scas lcall ljmp lret out dec stos mov (bad) dec iret inc inc into jl sub (bad) dec into mov (bad) (bad) mov add mov shlb inc or outsl in js pop pop and (bad) (bad) lcall xchg popf pop in mov mov add inc inc outsb test loope sahf push aaa inc (bad) (bad) (bad) (bad) mov xchg mov xchg dec jns scas jl and xchg aaa test jnp (bad) out cli inc pop dec inc dec in je mov imul adc sub test (bad) (bad) pushl or inc xchg test sbb push cmpsb movsb cmp (bad) (bad) lcall lods jge repz cmp pushf inc or arpl in cmp (bad) (bad) (bad) (bad) fstpl gs sub adc ficoml loope ds cltd pop std ficompl (bad) (bad) (bad) decl int inc out mov notl xchg test cltd mov call (bad) jmp rcll push adc hlt int3 sub xorl jo xchg add das sar cmp pop test iret and and leave xor es (bad) (bad) ljmp test mov push aaa xor fmulp aaa (bad) in movsb lods dec and (bad) (bad) jmp jb,pt clc adc loop jge mov scas adc mov xchg add mov (bad) std mov sub fsubs add cli std repz lea fisubl add (bad) ljmp cmp out inc jmp push fdivrl es or and (bad) (bad) jmp mov mov jmp mov cmp inc xor xor pop inc fdivl inc mov lea movsb dec out lahf (bad) roll cld (bad) (bad) fisttpl mov adc or movsl movsl xor adc mov pop ljmp pop lret ljmp incl sub lods mov repnz add inc data16 or or sub mov icebp pop ret lock imul sar (bad) ljmp add (bad) aad pusha loope xor dec test and je rcrl mov xchg cli (bad) (bad) jg lock lret aad xchg and lret std xchg jecxz mov (bad) pushl rol (bad) outsb je int mov dec xchg mov xchg (bad) (bad) fcom mov popa lock dec jns dec cld mov cmc leave popa iret xchg (bad) (bad) (bad) call xchg jnp cltd mov shlb dec dec xor insl push xor test inc inc mov (bad) call out adc dec jp popa pop ljmp (bad) pushl add pusha xchg push pop (bad) mov cmpsl dec sbb mov and sub dec ffree lcall out dec ds (bad) (bad) (bad) dec lods fisttpll lods in adc int3 outsl repnz into stos mov sbb push sahf sar out mov or and mov mov mov fnstenv icebp lcall jge add cmpsl imul (bad) jp mov add pop fidivl int3 push leave mov data16 je inc adc xchg (bad) (bad) (bad) ljmp jb xchg push fdivs jg scas lcall mov pop shlb lock ljmp mov pop lds mov inc sbb or leave (bad) (bad) (bad) cmp popa in (bad) (bad) dec or loopne mov icebp pushl xor decl (bad) ficom imul adc jne push push lods inc mov cli and popa leave test adc incl push cs xchg add aad outsb dec pop mov pop icebp mov leave leave rolb push xlat std cli mov cmpsl lock (bad) jmp hlt lods adc jno andb dec xlat adc dec rorl mov mov mov push (bad) mov mov cld pop xchg fidivl (bad) (bad) inc mov aaa (bad) lea fcmovbe sub inc xchg lds popa inc pop sub idivb (bad) clc and jmp (bad) repnz dec dec mov mov cmpsl mov out cli dec lcall enter (bad) bound inc call sahf subl (bad) (bad) ljmp push mov cmp mov insl jbe sti jmp pop add fcoml leave sub adc insl push cld incl out int3 inc jmp mov fdivrl hlt (bad) (bad) pushl fldt xchg mov mov (bad) mov fnstsw dec jge outsb movb (bad) (bad) (bad) mov test jmp xchg outsb xor mulb punpckhwd (bad) (bad) out jp ja mov inc rol or mov xor js test outsb (bad) (bad) (bad) ljmp mov dec jo (bad) jmp and gs addr16 or sbb (bad) (bad) (bad) call xchg fistl aam mov outsb push stc ds leave mov mov imul repz pop hlt (bad) (bad) movsb xchg cmp and js std test in sub lock (bad) incl push movsb cmpsl cmp or fldt iret pop stc mov jmp (bad) (bad) decl ret fisub sbb sbb and and adc out cmpsb imul (bad) fnsave (bad) jae jp xor js cwtl dec scas test push pop jp sub decl int (bad) stc push push add scas mov mov ljmp (bad) icebp cmp lds repnz in cmpsb mov fidiv scas jnp ret inc sbb pop sbb cli in push lret adc push dec cmp fnsave popf cmpsb inc cld add (bad) jg mov dec clc fwait pop js pop cmp test movsl push (bad) (bad) (bad) jmp repnz bound xor and push fisttpll mov add incl cmp push mov jne dec sbb mov fiadd in lret jo (bad) (bad) out cli test out cltd ja cmp mov adc hlt cs mov cmpsb fmull (bad) (bad) (bad) cld arpl sbb aad addr16 push or dec jg jecxz push mov rorb and or ljmp (bad) xchg xor mov jns insb add (bad) ja cmp (bad) (bad) call mul movsl ret pop and fistp ss fcomps mov int3 pop cmpsl dec ja aaa inc cli sahf push sbb clc ljmp xchg decl ljmp mov (bad) jae pop fimul adc (bad) incl add ret incl mov data16 into cli fidivrl fiaddl repz sbb fcomip incl jle and (bad) jl lods and push lea fwait inc (bad) (bad) (bad) fild cmp sub cwtl add clc mov fistp cmpsb (bad) (bad) lcall arpl pop bndstx loop dec xchg idiv sahf sbb push (bad) (bad) (bad) push inc mov pop push std lods outsb test push push (bad) sbb pop in and and jbe jnp in (bad) into or rcr push sti add lds fisubrl rcrl sub mov addl inc (bad) (bad) (bad) lcall in cwtl mov sbb loopne dec (bad) aad xor mov cli (bad) cmp sahf sbb (bad) dec hlt push fidivr dec or jg mov xchg (bad) ljmp cld pop jae push call xor pop jo rcl mov mov pop lock jge pop sbb mov js or xchg bound add subl incl int or dec dec das ds (bad) fnstsw mov or sbb (bad) (bad) lcall mov cmp out and out imul lahf imull sbb out repz push xchg cmp pushf xchg adc mov push cmc call lahf data16 call adc lock aad (bad) (bad) inc lret xor ret lcall sbb push push jbe jae jnp jnp (bad) incl cld insb xor inc pop lods or inc stos inc jmp ljmp mov sbb xor push (bad) into loop push xchg fadds jmp aad mov jbe sbb xchg cmc nop sbb out adc outsl dec rcll ficom enter sbb xor daa lret imul (bad) xor fsubrl lcall decl scas pushf inc cmp lods xor hlt bound (bad) pop inc pusha or js (bad) (bad) call sbb xor test adc jmp or out dec adc (bad) dec mov push sbb and adc mov aam push push (bad) xor (bad) mov fldcw jg xchg enter cmp nop out das dec xchg push sbb (bad) push imul dec mov addr16 pop (bad) (bad) pushl mov sub jbe cmp (bad) aam ret adcl mov adc mov inc fwait hlt mov pusha push cmc add ret das (bad) out outsb test (bad) (bad) (bad) cli xchg push or push mov push or cwtl jnp push xchg xchg (bad) (bad) decl push adc inc or insb mov and aas pop js outsb pop add push mov mov into mov popa (bad) lcall mov xchg pusha mov out arpl mov addr16 stc adcb (bad) incl out mov sbb jae int mov fcompl shrl mov (bad) (bad) call add out cwtl scas adc xchg in sub xor jle shll lahf popf and (bad) (bad) (bad) call xchg jl call daa pop ret and pusha std out sub fsubrl out mov sbb jl mov sub push xlat add cltd nop xchg scas adc add sub (bad) (bad) (bad) lcall das cmp call or out int subl inc mov icebp (bad) jg pushl push pop ljmp movsl out scas inc out inc jns lret adc lcall push lret mov mov mov ss nop adc (bad) (bad) jmp pusha addr16 lods push test sbb test (bad) mov sub ljmp push xor or push xchg out mov lea std (bad) (bad) (bad) ds xchg mov aad fisttpll movsl and sub pop movsl and ds pusha sbb scas mov inc iret loopne cwtl jge repnz adc mov je adc lret jmp cmp inc (bad) pop dec dec iret (bad) pop sahf add push movsl out popf outsl mov rcrl out call cld call mov jno jae add mov lahf (bad) stc and push push dec aas add dec pop test or jg or sub mov imul test push daa pop scas add mulps cli cmpsl cmc mov les (bad) (bad) jmp fs cmp cmp hlt int3 or and decl xor fldl mov or enter pop call mov mov (bad) (bad) lcall movsl xor xchg lea int mov mov xlat and push jmp add add or push sbb mov add add cmp imulb xor sbb aaa pop add or fcoml ret lahf lds les inc fs and mov loopne pop outsb (bad) (bad) (bad) (bad) cli mov pop stos repz dec jb mov and cltd (bad) adc out push cld (bad) incl iret xor leave dec fiadd nop lods call fucom mov (bad) (bad) jmp lea xor (bad) sub sub xchg pop dec dec lods mov out or hlt (bad) incl hlt push mov jno sbb sbb (bad) cli dec lea add popa (bad) (bad) decl adc xlat or adc std inc cmp loop mov ja push call ljmp dec xchg mov in mov fist mov insl movl mov jp out or je or cmp (bad) in mov mov (bad) (bad) ljmp loop cmpsl xchg popa pusha sarl xchg movsl das popa mov pop pop dec sub fldt push push xchg (bad) (bad) ljmp mov or xor lods mov out popf fprem push jg hlt outsb into mov (bad) (bad) (bad) jmp fistp inc xlat cmpsl pusha lods (bad) (bad) sbb bound cwtl xchg sbb push sbb jmp dec dec mov clc adc incl add jmp adc pop push icebp fidivrl jae dec daa sub out mov push push push int push and ljmp in push aad (bad) decl (bad) jmp xlat pop stos fucomi hlt xchg inc jae ds fild cmpsb (bad) mov (bad) (bad) jg cwtl test pop lret add daa jb jbe xchg ja mov push and mov test jg fsub jecxz push jl fstpt cwtl push (bad) daa (bad) (bad) mov inc test fs sbb call cmp lods push (bad) (bad) (bad) pushl pop arpl xchg cmpsl add popa add xlat push add jecxz lcall xchg jmp cmp mov xchg push out test das mov xchg adc loope push lods cmpsl mov test gs jbe (bad) dec jmp push sub lcall inc pop in sub pop ret mov sub test mov ljmp inc mov data16 jge mov push out pop loopne ljmp add dec add roll insb int (bad) ds inc ljmp cwtl or rclb (bad) push push lea sahf (bad) (bad) (bad) pushl pop sub je cmp es fistp addl mov push push in hlt jmp (bad) (bad) (bad) call (bad) mov dec jl call and ds xor lods mov out loope std push pop aad and cli sbbl jp je jecxz sbb pushl stos push outsl enter andb pop pushf and std push jle lcall or add iret or cmpsb (bad) dec jmp mov fmull insb mov pop clc hlt pushf add cmc or lcall mov shr sbb push push ljmp mov jo test fistl aas aas sbb mov dec sbb (bad) dec fs arpl push stos lcall mov inc xchg sub mov negl pop subb test call cmp js jmp and or (bad) (bad) (bad) pushl jae ret mov inc xchg and push loope inc mov add test adc (bad) jl outsb daa xor push cltd fisubl shll jg ljmp mov adc and (bad) nop xor data16 lret (bad) (bad) (bad) ljmp or push sbb testl lea mov jmp mov testb sub add jge jmp jge xchg (bad) lcall fcomi jge (bad) cmc jns aam push repnz jbe mov mov and lods out dec gs pop lret rorl (bad) push inc push outsb imul decl sbb adc xlat mov or jg (bad) clc out mov mov and fisubr sbb add repz mov fdivr hlt jge push mull add test imul add (bad) inc push (bad) (bad) (bad) call out cmp lret and clc cltd pop sub jb sub cmpsb out sbb mov inc in jle (bad) (bad) call jl loop,pn dec mov xor fcom add add mov mov (bad) fistpll in xor jo mov bound push xchg xchg (bad) (bad) (bad) incl inc lds cmp les movsl inc xchg push cmpl pop mov (bad) (bad) fcoml je mov aaa add repz mov adc cmp test sub mov (bad) (bad) (bad) cmc mov mov mov jge in (bad) (bad) ljmp jecxz mov pushf outsb mov in fsubs sahf cltd js je cltd cmc aam lcall dec cmpsb jae push and scas popa push loope inc outsb pop (bad) (bad) (bad) lcall inc fnstsw xor bound adc nop in lret pop mov rcrb dec in int aad (bad) (bad) (bad) call inc jns add jb es sbb repz push in or sub pushl cmp das cli (bad) (bad) in cmp outsb push rorb in add call (bad) (bad) call push sub sub in outsb hlt xor inc out xor (bad) jnp (bad) (bad) (bad) inc xor xchg std in mov lods jae xchg (bad) pinsrw dec sbb inc push (bad) (bad) (bad) call adc mov inc lds xchg inc in and cmp les into loope cmp das clc (bad) ljmp jp jl es jne push lock pop popa sbb pop or mov sbb hlt dec mov jo fsubrs mov push es popf (bad) dec addr16 xor (bad) ljmp (bad) sbb (bad) pop fsubl jg les push inc mov outsb xchg dec mov (bad) jmp lods dec aam outsl ret and and mov jecxz cmpb clc (bad) incl xor sbb cmpsl stos xchg imul (bad) decl ds es mov ret sub imul sub jnp je (bad) (bad) jmp ret mov jb mov popf inc dec xchg pop sub aas adc sbbl adc aam (bad) ja mov mov push inc cs data16 and lcall add fcomip (bad) fistpll aaa xor std lret dec insl lds push adc jno jp scas fcmovnu cmp jg (bad) cmp andl aam out stos jg pop push jb cmp cmc mov jns icebp clc or inc fwait dec mov (bad) incl mov mov stos movsb or (bad) xor insl xchg or cmp fdiv jecxz ljmp shrl aaa inc or jmp ss sub sar cld incl (bad) fbstp rcl sub add (bad) or (bad) call rcrb jo sub (bad) and and (bad) sub adc aaa adc mov loop push arpl loopne (bad) mov push rclb push add add xchg mov jmp cmpsl mov ja adc mov mov jb call adc mov fldl loop loop mov (bad) (bad) ljmp or cmpsb mov fnsave popa inc movsb sbb fsubl sbb inc jmp dec rol cmp clc sub (bad) (bad) jmp push (bad) lret xor inc movsl cmpsb xchg adc or mov (bad) lcall dec lcall push into jecxz mov cwtl jecxz int add call jb add aam pop sbb les mov push inc xor (bad) (bad) mov shrb fmull push mov jns sbb fcomps pop cld (bad) decl add dec inc mov sbb dec icebp jns mov push and std (bad) (bad) jmp push cmc mov mov mov mov loopne dec (bad) (bad) (bad) (bad) jmp xor mov jge inc cmp lret and mov push out stc mov cld (bad) ljmp adc adc fnop andl mov (bad) lcall enter std add jle (bad) sub (bad) xor pop pop dec (bad) (bad) icebp (bad) decl cmpsb or jge cmc aad dec cli sbb xchg fistpll adc push loopne xchg ljmp add mov mov outsl cmp jg decl cmp mov and ss loop ja fstl (bad) incl mov mov xchg dec cmp push ss sub popa xchg and out inc xor sub xchg mov sbb (bad) (bad) jmp sti jae sub add mov cltd mov jns cli cmp xchg in xchg flds cwtl push mov xor xor jno shrb (bad) (bad) cmp push ror scas imul xchg and (bad) mov cltd inc mov sbb lret mov and (bad) call pop mov les jnp fisttp and adc mov pushl fwait cmpsb ljmp inc and push dec (bad) rcl out jp cmp mov sub push dec pop jb (bad) jnp push sti inc cwtl jle loope nop xor xor movsl (bad) (bad) (bad) call out sub sub fwait xchg pushf and sub push mov fwait pop pop mov xchg pushl call fldl sbb cmp and xchg and clc or imul sar (bad) decl jno push mov sbb bound mov adc mov lcall clc je push mov iret (bad) imul ljmp out mov mov lods test testb cmpsb add push mov (bad) fnstsw mov mov idiv cwtl daa adc clc incl aad add jno bound jae mov cli js loope jb sar test andl mov mov (bad) call cmp test cwtl jl dec mov cld mov inc lahf xor fcomip (bad) (bad) fidivr fs inc repnz lds pop ss (bad) mov (bad) (bad) (bad) xchg lcall fildll sbb aaa in mov and fs (bad) (bad) (bad) (bad) out dec inc (bad) iret mov xchg (bad) jl,pt ret lds insb cmpsb jbe adc cli or (bad) (bad) decl mov imull lods fcom leave rorb xchg ret jns sahf into das sub mov sub (bad) (bad) jmp jge xchg xor push adc ret lret ja test decl mov inc lods cli (bad) mov sbb mov xor psubsb addb in (bad) (bad) (bad) out and xchg add insl mov mov inc mov mov inc inc out popf jne inc push and (bad) (bad) (bad) lcall sub mov or aas imul xor dec pushf and aam jp (bad) (bad) (bad) jns or cmpsl mov loope (bad) cwtd cmp outsb insl loop fsts jl shl cmp scas mov add fstpt dec add or scas ds cmpsl xchg pop sbb (bad) (bad) pushl inc xchg call xor gs icebp stos outsl clc rcrl in fsts xacquire (bad) lcall out dec lods gs adc pop lods cmp xlat icebp fist or das mov inc or daa cld jle push push repnz push mov (bad) (bad) mov (bad) jmp cmc bound inc aaa mov (bad) hlt fdiv cmp ret addr16 ja cli decl sbb cld ret daa mov inc mov (bad) (bad) push jbe popa insl das jmp mov add dec cli or and pop dec push ljmp (bad) jp pop test insb xchg js mov sbb pop push and sbb dec fmull (bad) cmp enter lahf fiaddl push or pop adc les ss lods inc and (bad) (bad) (bad) jmp testl xor rorl add xor sti stos pop mov (bad) (bad) cmp and andl (bad) lret mov (bad) (bad) pushl jo jbe and and xor mov dec fstl and xor xor ret fwait out fs mov (bad) (bad) ljmp cmp push inc out lock out mov adc ja xchg js int3 enter call sub stos into or mov inc dec xchg sub add and mov sub test das arpl (bad) (bad) call movsl or (bad) stos adc inc add es pushf or mov (bad) push xchg xchg adc sub dec dec add (bad) jp bound test lods and ljmp das or push insb nop fsts xchg (bad) xor pop imul (bad) (bad) cmp xor sbb adc insb pusha xor sub out (bad) (bad) (bad) incl inc stc fmull call and ret (bad) sbb loopne cwtl cwtl inc out decl repz mov (bad) stc or mov scas aam popf fwait (bad) (bad) (bad) mov dec fnop mov test push pop fbld xchg mov mov (bad) (bad) (bad) call push jnp not sub mov mov sbb aas pop and jle lret pushf sub adc (bad) (bad) in mov cmp (bad) cld dec pop sahf sbb lock inc inc movsl ret aaa imul jg push movsb xchg pop out push loopne out mull mov jbe and scas das (bad) (bad) (bad) call mov push pop xchg pop sub imul xor stos lret arpl repz incl or jns sub mov pop xor (bad) (bad) (bad) jmp fnstsw pop dec loope xchg rolb shr (bad) sahf mov push jl (bad) (bad) (bad) fimul fstpt loop (bad) sbb movsl loope imulb scas and mov add add std xchg (bad) mov leave (bad) (bad) (bad) mov movsb hlt nop inc std or (bad) sub cmp hlt add out push rorl push jg,pn ljmp sbb cwtl and ret mov rol push xor insb mov jle pop sar (bad) jmp insb aaa jg lea rcrb jmp fmuls add neg xchg jne (bad) (bad) mov cmpsb cwtl add imul int3 push hlt lods icebp leave mov loopne mov lcall decl pop loope cltd sub orl jle cmp pop rcl jbe xor (bad) (bad) (bad) (bad) fldcw stc fwait inc bound rorl int icebp jb scas lods outsb in push mov (bad) (bad) lcall sbb cli and adc movsb clc sarb mov out push mov (bad) call xor pop push in sub pop xor loopne and decl enter dec and dec or das cld fsubrs inc imul test test (bad) (bad) (bad) (bad) mov mov pop (bad) mov js pusha mov cmc in das cmp (bad) (bad) jmp cwtl xchg fnsave add lret xchg pop dec jno xor cmp sbb (bad) (bad) pushl gs cs and data16 enter push mov xchg repz repnz jmp repnz repnz jnp addr16 (bad) (bad) lcall pusha lret test aas mov inc sub inc mov (bad) (bad) jmp mov cmp mov xchg pop lret mov sbb ss dec mov adc (bad) (bad) dec xchg imul rcrb pop imul repz pop inc mov pop pop fcompl mov gs dec jno mov ja ljmp mov cmp loop mov inc jb fnstcw out adc das mov mov sub fidivl fwait (bad) (bad) mov stos adc outsb (bad) jns je pop dec ret or adc xor lods ja (bad) (bad) lcall repz fsubrs insl es jne adc xor cltd inc (bad) jg mov jge stos mov xlat test pop out clc decl mov cwtl mov jnp xchg add (bad) (bad) (bad) call mov xchg dec xchg and stos in lcall aaa mov dec mov pop dec (bad) (bad) (bad) out dec scas adc add pop into cs jae pop shr idivb xor (bad) push xchg or or pop xchg cli stos lea mov jp sti in fdivr (bad) (bad) incl nop in dec js mov sub (bad) xor sub inc cmp adc sub pushf sbb (bad) (bad) incl subb out subl in insl insl out fcomi addr16 xchg pop jmp sti (bad) (bad) pushl jns adc (bad) data16 insb movsb xchg fs xchg mov sub (bad) (bad) cmp into jle xlat xor fisttp push add sub xchg add push xchg cmp mov mov jmp or rcrb in pushf scas (bad) jle pop mov mov jbe xor mov mov sub mov fiaddl push xchg mov mov ljmp cmpsl sti push test lcall test dec in and (bad) (bad) lcall add imul dec out gs mov dec mov pop push sbb lea (bad) lcall mov bound mov xchg test mov (bad) (bad) lcall adc inc mulb ljmp out mov insl jae (bad) (bad) (bad) (bad) mov adc mov cwtl xchg lds cwtl mov sahf stc cmp cmpsl int3 jg test mov test ret jmp inc mov add stc or xchg mov fstpl incl insl adc push dec pusha push sbb xor cmpsl mov mov das push test add pop cltd pop (bad) (bad) (bad) fistpll outsb inc jno push bound pop sbb scas arpl sub gs test sti out scas or adc orb data16 shlb jge pop dec mov (bad) (bad) jmp pop and outsl addr16 (bad) sub push jmp mov lahf inc mov into (bad) decl (bad) pop aas outsl cmp mov je adc sbb (bad) ss xchg ret xor movsb adc pop cmc call mov sub out in mov (bad) (bad) ljmp aaa (bad) shr loope cmp imul xlat lods mov xor push in add (bad) (bad) (bad) call int dec xchg divl add add push dec ret cmp inc cmp sub (bad) mov sti xor and xlat shr (bad) insb daa divb pop jg push jbe icebp sahf fwait (bad) (bad) (bad) inc push cmp adc inc sbb xchg cmp xchg push lods inc pop stos jns cmc and cmp das xchg cmp das sub xchg mov mov (bad) (bad) (bad) jmp lcall rorl in adc scas jns sahf imul xchg sarb mov (bad) (bad) cli into jns inc mov xor lods lcall notl mov pusha outsb (bad) (bad) (bad) incl orb test gs in mov cmp sub add loop (bad) int3 and push cld (bad) jmp cmp fcompl mov fimul ds call (bad) jg lcall popa ljmp xor aam movsl dec mov (bad) (bad) (bad) lcall jne cmc popf cmp dec jge in pop lret leave jno je xchg stc and cmp incb call insl jg nop dec rolb (bad) pop mov jb add pushl jp or sub aas (bad) (bad) lcall ja push dec xor xor enter icebp sbb jae or call sub bound and sub jmp mov loopne (bad) call inc sub rorl xlat mov sbb cmp adc sar cwtl lock push pushf dec jle,pn pop fisttp rorb mov inc lret push repz mov and sub je mov (bad) (bad) jmp fdivrp inc popf adc out cltd popf jge adc out pushf sub cli cs jle dec call into mulb mov (bad) outsl xchg mov (bad) jg and aad idiv cmp jmp scas pop dec mov stc out outsb add decl dec cmpsb ficoml shlb adc push shrl hlt sbb cs add (bad) (bad) fisttp (bad) mov or pop nop outsl mov fmul or (bad) (bad) (bad) decl je push ja inc arpl pop xchg add clc inc xchg cmp arpl mov add (bad) mov add lret pop sub outsb data16 addr16 add (bad) jmp xor sub int3 shrb out sub in adc push add (bad) (bad) mov mov fist inc jb (bad) mov cltd (bad) adc mov shll cmc jmp (bad) mov lea fisttpll xchg and (bad) (bad) jg mov out xchg sbb xor inc adc (bad) (bad) (bad) fistp fsubr (bad) sbb into mov out ret xchg push rcr aaa in lock jg mov (bad) pushl std mov xchg jbe push loope jo test iret mov mov sbb lcall mov xor test xchg mov ja (bad) (bad) cli push pop in adc jbe pop mov fadds jno dec jmp add xchg (bad) (bad) (bad) incl or cs or testb arpl mov fiadd push mov (bad) clc jmp jl dec test bound sar (bad) (bad) (bad) jmp dec test xchg icebp (bad) inc das jle jno pop rorb pop (bad) (bad) (bad) pushl int3 mov xor mov mov in xchg dec or ds (bad) (bad) call test arpl insl adc cltd frstor jbe jge add outsl aam lock lock out movsl fwait leave xorl je das sar lcall inc lds aad jmp (bad) (bad) (bad) (bad) fcmovu (bad) pushf in and int cmpsl ret fmuls push cmp (bad) (bad) (bad) (bad) (bad) ja jnp mov repz hlt es test dec stc rorb int3 and ss sub or pop (bad) jmp arpl repz movsl (bad) jne or and mov sbb jnp mov (bad) (bad) push flds cmp mov mov js xor pop rcl inc mov jns cs (bad) (bad) ljmp imul jle aam cmp lods sub in loope sub dec sub mov dec jae dec cmp xor mov lods lcall fsubrs pop std (bad) mov push fidivrl lret icebp xor int3 jle loop pop jbe fwait repnz rcrb (bad) (bad) jg push sahf or mov cwtl mov cmpsb imul and (bad) (bad) (bad) inc jp push mov inc push push jbe sub insb mov sub stos and les (bad) (bad) jg mov nop cwtl clc ljmp jecxz push mov sub roll call loopne adc push adc and (bad) (bad) decl mov dec mov leave loop pop mov lods sar dec mov test pushl pusha or add push pop mov loopne imul int lret pop jmp dec dec mov addl cld sub icebp mov lahf in add pop cwtl test xor cltd jne aaa cld lcall inc mov lea jae cli (bad) icebp inc cmpsl mov (bad) decl xchg push test mov mov call inc (bad) jb mov jecxz jmp lea or icebp mov popa cmp sbb inc call xchg scas mov rclb lcall jae dec (bad) mov and jge mov test sub (bad) std pop inc pop aad aad pop enter xchg je push mov (bad) push rorb pop leave es in iret push xchg jmp jno ljmp loopne lock xchg movsb dec push das pop add jne push stc lods pop rorl lock mov xchg mov icebp ds sbb test lcall incb lret xchg inc dec push (bad) rorl pop daa outsl lock (bad) (bad) cmp or add lods or bound xchg xchg xchg in mov jg cmp fisubrl and and fwait call repz ds popa (bad) (bad) (bad) inc xchg mov or adc pop mov xor sti pop pmaxsw fldcw push push push push pop mov mov ljmp nop insl pop jbe (bad) mov sub mov or (bad) (bad) (bad) jmp in jg gs clc in inc outsb and inc jo sbb pop (bad) lock mov das clc (bad) (bad) fimull jp fwait jo jae sub mov clc in adc push popa (bad) (bad) (bad) lcall cmc lds mov mov xchg push ret in mov gs out xchg inc dec pxor (bad) (bad) ljmp push cltd mov pop cwtl enter or lock mov push lock pop or (bad) (bad) lcall jbe dec ds mov cmp loopne cmp cmp add sub aaa jge mov (bad) (bad) (bad) (bad) cmp loopne cmp es and adc clc xor ja push jmp push (bad) xor jmp mov stc stos jp loop,pn mov adc ljmp inc adc loope nop scas pop shll shrb popa data16 (bad) (bad) jg or out scas xor sbb sub push mov push test fcomip mov inc clc jecxz fwait mov mov aaa xchg fisttp (bad) cmp (bad) push mov aaa in jl fwait push into loopne inc ss mov es jb in lret or dec (bad) (bad) (bad) lcall incb push roll cmpsl subl xor bound push cmp xchg pop (bad) mov jmp inc mov imul fchs add push fprem (bad) (bad) stc sbb stos cmp cpuid xchg jnp inc out cmc scas inc test decl jle cmp pop add mov add das add pop mov cltd xor enter es clc (bad) je pop sti mov pop es (bad) (bad) jmp xchg lcall ds call pop repnz mov mov (bad) jmp jmp mov cmp mov dec rcll gs (bad) (bad) push adc jne xlat ret and add ds stos loope fisttp sbb xor mov xchg mov cmc (bad) pushl mov sbb cltd jmp insl sbb insb jl ljmp pop xchg dec cmc mov pop stc icebp and jo popf insl push cmp push and cld (bad) (bad) incl or adc ljmp orb cli pop pusha cvttps2pi incl nop enter into fdivp (bad) dec fisubrl push xchg (bad) (bad) incl mov mov mov jne cs xchg jg mov cmp adc xor (bad) jmp das stos mov gs adc mov xchg sub mov mov add in (bad) (bad) lcall sub cltd jns inc fildl push mov imul xacquire sub xchg jge test (bad) (bad) decl clc or cwtl cmpsb sub add push aaa xor rcrb add xor push hlt movsb or (bad) repnz xlat inc out add (bad) (bad) (bad) call jo pusha pop dec rcpps aad jmp test inc sti or jmp arpl bound pop int3 fwait test lcall jns pop sub (bad) (bad) (bad) pushl jle or enter mov adc rcrl inc in sub or (bad) (bad) pushl (bad) outsb (bad) and inc (bad) adc push je leave test fmulp and (bad) jmp xchg cmp in fadd push or das (bad) lcall movsb fidivl adc jbe ja jno or inc enter push sbb push ljmp sar dec (bad) xor (bad) (bad) jmp inc xchg jge orl cmpsb mov jecxz cmp insl in inc js push cli (bad) (bad) inc (bad) (bad) lret pop cmpsl mov stos dec cld mov and inc cmc push lods imul ljmp (bad) nop jne sub xor in or (bad) and cmpsb mov sbb (bad) (bad) push cmp in add dec xchg out fimull scas xchg jo (bad) (bad) (bad) call ss cwtl pop mov inc ljmp in bound sub and inc outsl ljmp pop mov and js sub cmc mov push cmp rclb push fwait xorb fsubrs out insl jbe or (bad) (bad) push dec add insb ds cs call dec cmp stos leave push sub out jnp inc jae in pop movsb mull xchg push push (bad) (bad) (bad) call popf push iret dec pushf or add sub sbb (bad) loopne aad (bad) jno mov cs xor (bad) (bad) ljmp add push mov ljmp in (bad) dec mov ljmp aam js cmp (bad) das ss mov sub or sub fsubs sbb (bad) pushl clc mov inc xchg adc lret push (bad) (bad) (bad) cmp inc outsl fstl mov mov jbe pushf insl push dec fdivrp (bad) mov mov sbb ret add pop dec push ds adc icebp call mov add fnsave adc (bad) decl cmp les imul push mov jge addr16 (bad) (bad) mov je mov and dec mov sti sahf pop in fcomps std lret push pusha stc (bad) incl adc and jle xchg lods lahf das mov inc jge (bad) (bad) (bad) lcall jo sbb mov aaa pop mov jmp testl sub mov mov lods loopne enter test xchg inc cmp dec add and fcomip mov rorl jp stc pop in jnp aad mov in (bad) (bad) jg incb pop inc pop sub xchg (bad) lahf xor lret test movsb mov push sub out or mov loop add mov pushf fdivr (bad) (bad) pushl pushfw mov sub repz xor add in fldt pop dec sbb inc (bad) (bad) (bad) out jo mov loope add mov jae sub xor (bad) (bad) incl int pop jle sub push shlb dec lds mov gs dec sub test xchg sar inc mov sbb dec adc stc xchg (bad) push lret adc jecxz push lcall pushl mov movsl in sub cmp mov fcomip (bad) out cld cs and notl loope jl hlt imul mov or lret mov mov addr16 mov or fidivr cld (bad) (bad) lcall jae pop xor clc imul aad int mov xchg movsl divb ja inc sahf mov mov cmp push leave mov xchg pop cmp lret in mov outsb sub les in sub out aam rclb adc adc (bad) (bad) ljmp jle pop repz jecxz jbe inc cmpsl mov addr16 mov in lods int mov (bad) pushl aaa sti adc and mov mov cmp pushf lds jb (bad) (bad) lcall (bad) xchg fidivl mov (bad) push xchg xchg outsl adc fisttpl sti ror adc pushf (bad) (bad) (bad) decl push scas mov add mov testb ja jae bound (bad) pop cmpsl sbb and mov sub fstl mov sub (bad) (bad) incl jge xchg inc mov push cmpsb add (bad) jns fwait mov mov into and jo ja (bad) jmp inc xchg mov in xchg xor or decl add fcoml ljmp int3 jb ret es push sub jb jp fdivrl loope jle pop push add inc ret sbb movsb cli cltd dec inc setp mov hlt pop cmpl subb mov or inc push sbb (bad) dec adc (bad) jae les cmp sbb ret addr16 sub push sbb les mov mov pop (bad) (bad) (bad) jmp nop test mov test pop jmp cmp outsb cmp insb or ret mov mov (bad) pushl jno push push jl cmp sub inc aas push adc icebp pop xlat adc adc add scas ret (bad) (bad) (bad) decl in dec pusha add pusha fdivs fldenv xchg aad jmp into (bad) (bad) (bad) (bad) jp lret mov inc push lahf hlt cmp pop (bad) jo jmp inc jmp mov sub loope cs (bad) (bad) (bad) jg mov rcl cmp cmp mov repnz dec ret (bad) (bad) (bad) jmp dec int3 cmpsl xchg adc inc jbe repnz dec ss adc xor test sbb ljmp add (bad) (bad) stc in rol imul shl pop mov add dec inc add dec push aas repz shr ret dec in pop sbb insb add sub iret push in sbbl mov dec cmp sub and fistp adc (bad) ljmp mov and inc mov or mov (bad) (bad) (bad) mov test mov fistp push sahf cmp lret ret ror (bad) (bad) (bad) call lea push sbb jnp jg inc push es and sub (bad) (bad) (bad) incl scas mov pop pop fidivl data16 divl mov add mov push add push aaa sub mov mov ds adc dec popf dec je (bad) lret aas rcrb lods popa (bad) (bad) (bad) (bad) jmp push ja les xchg fldcw dec dec rdrand sub lock sbb aam (bad) call mov jmp test outsl push (bad) stos fildl lahf inc movl mov mov test push push (bad) insl fstps pop mov adc (bad) pop cmp loopne push xchg add cmp enter ljmp jle and jg aaa adc jp mov into mov push mov mov enter (bad) (bad) incl and xlat pop xchg add divl push arpl xor sbb mov mov xchg (bad) (bad) (bad) pushl lock and icebp nop mov (bad) ja mull jo out sbb mov insl ja push out push mov lock repnz push sbb int3 fs mov dec cmp ret jle push mov daa push gs jl mov jle jb lock xor xchg (bad) call lock adc in clc adc push sub (bad) (bad) (bad) jns pop xor inc cs xchg jecxz sbb pop cmp mov test sub (bad) fisttp sahf lcall push (bad) jg mov (bad) (bad) (bad) ljmp leave pop data16 cld ss in into (bad) mov adc bound lea (bad) insl (bad) incl cld pop pop lcall mov outsb into sub inc in push mov xor outsb lods cmp xlat cwtl call aaa xchg mov jae jle (bad) (bad) (bad) (bad) cmp sbb andb add fsubl fidivl mov sar (bad) (bad) cmp xchg ret std xchg std jo dec and dec sub inc (bad) mov and loope frstor inc aas das (bad) (bad) (bad) lcall fisttpl inc mov sub inc test stos (bad) mov jge jae mul mov mov (bad) lcall jns bound and mov sahf pop aas add (bad) (bad) (bad) (bad) call aas jb push adc aad jmp cli sbb xor jo lret lahf xchg enter jmp rcl sbb fisub in dec pop lock lret stc (bad) push dec (bad) or sti mov (bad) incl mov ss mov mov mov jg (bad) ljmp ret scas test icebp cmp outsl leave int3 aas fs adc out stos (bad) (bad) (bad) ljmp nop and mov dec sahf stos test cmp loope xor dec out loop push aam bnd (bad) lcall dec or push roll out adc mov lods jg mov (bad) call out loopne and and cmp imul fcoms enter cmpb pop and (bad) ljmp out inc loop std daa enter pop popf xor jns cltd cmp lret mov cli (bad) (bad) call movsl sbb cli popw push ucomiss jp pop fisubl (bad) fiaddl add push (bad) (bad) (bad) pushl fucom int fisttpll sbb imul data16 xchg pop fucomi ja adc sub mov sahf js push sarb inc jno lcall cmp (bad) pushl ja mov bound rcr ret mov (bad) xlat sahf sbb scas outsl loope lret inc (bad) (bad) jmp push cmp push das ficom pop scas pop cmc sti inc xchg movsb sbb jle and (bad) (bad) call cmp (bad) pop push call adc xor push pxor xchg movups stos insl loopne pop lea lea cmp into xor (bad) (bad) (bad) (bad) pop icebp (bad) mov out int mov or les lods mov decl lods das (bad) loop pop fcomps cmp cmc mov cli inc (bad) std sub (bad) mov into loopne popa test (bad) ljmp (bad) je dec and lds lret push and sbb (bad) (bad) faddl cli aad jo inc inc lret adc movsb stos std mov (bad) (bad) (bad) (bad) jmp mov (bad) push addr16 sbb sbb icebp stc push iret addr16 fsts or xchg push jg imul pop cmp cmpsl xchg inc (bad) mov mov lcall adc jno jp or iret cmpsb pop sarb faddl (bad) lcall xlat xchg movsb pop ljmp in xchg ret fisubl cmp push jne dec mov add or mov sub pop xor xor fscale loop jbe (bad) (bad) (bad) call mov (bad) cmp pop fstl pop sar xor sub and lret push fimul ljmp (bad) mov dec or jp outsl mov sbb insb je lahf cmp add clc decl pop jnp pop iret aaa loop mov scas add (bad) (bad) (bad) out shrb cmpsl pop sbb pop mov xor and and hlt (bad) (bad) pushl out in add ret push jle add dec (bad) and jmp in (bad) (bad) (bad) fist icebp mov push cmp sub mov lret (bad) call (bad) incl out dec sub adc pop daa (bad) lock cmpsb (bad) sbb rcl (bad) (bad) ljmp lds xchg sub pop nop bound (bad) and mov pusha dec (bad) (bad) (bad) jg sub ret mov inc mov pop iret xor jmp and or or dec mul jg (bad) pushl mov push push daa sbb (bad) xchg dec mov push (bad) jno cmp (bad) sub scas sahf jo cmp sar mov cwtl (bad) in adc fldcw in push (bad) jmp sub insl cmpsb faddl push outsl mov addps xchg dec nop movsl cmp outsl test sti pushf adc arpl (bad) (bad) ffreep popf mov sbb mov ret xchg sbb dec push les mov scas (bad) cli (bad) lcall dec out and jle adc jns mov (bad) (bad) call jl inc cmp cmp shlb fwait scas (bad) sub lret push lahf adc (bad) (bad) xor (bad) decl add daa aam (bad) mov push xchg adc call mov out mov cmc inc jae or xchg sahf rorb aaa (bad) (bad) (bad) ljmp cs pop roll jl xchg mov inc mov inc jo std jg (bad) cmp cwtl pop xchg dec add out ret out pop lret xchg xor push test cli dec (bad) mov std imul pop dec cmp je or mov xor icebp call sub cli stos stos out sub push mov outsl aad (bad) (bad) (bad) decl pop xor dec adc cmp pop mov (bad) (bad) repnz scas pop xor outsl pop in mov mov pop mov (bad) xchg sbb sub hlt add imul fisttpll jge aad lahf add add mov (bad) decl push outsb jmp xchg xor sbb lret test add mov (bad) pushl stos icebp mov aam lahf add fmuls cmpsb jmp inc hlt dec cwtl lods je (bad) (bad) (bad) jns call inc sti sub push clc gs xchg je fistp cmc or (bad) (bad) std out adc xchg ss mov std aas pop jecxz sub rcll (bad) (bad) call idivl and les (bad) iret pop outsb push sti push dec push mov dec loopne incl pop mov test add xchg cs mov (bad) call cmp imul or adc xor mov loop (bad) jmp inc stc inc dec cmc xchg sarb faddp xor outsl aaa mov xchg push jmp (bad) (bad) (bad) jne,pt xor push arpl adc cmp jno jae rsm sar fs mov incl incl xor in sub mov ror shrb cmp inc add cld (bad) (bad) (bad) jg or push add pushf lods movl ss pusha adc (bad) pushl bound insb cmp mov mov inc icebp mov inc aas add inc enter cmc sub test dec sbb (bad) push push xchg add push mov mov lcall adc jecxz lahf popf out or sub int3 dec test (bad) (bad) (bad) incl pushf adc push xchg pop sbb sub ficoml cs outsl jo std into movsl cmpsl aas push popl es adc loopne (bad) repnz and (bad) push in cmc jecxz inc adc (bad) (bad) (bad) incl pop xor and mov xor pop (bad) lret jecxz aaa inc repnz jmp int3 hlt fildll lahf repz (bad) (bad) out push lock stos jns sarb aas aad dec xchg mov pop (bad) xor imul xor (bad) (bad) lcall adc pusha sbb addr16 int sbb jecxz mov or in (bad) (bad) (bad) pushl push ds test test fisttp fsubrp mov xlat and fwait cmpl (bad) (bad) (bad) (bad) fdivrp mov stos push jp (bad) mov loop mov bound xchg xor in and mov scas (bad) (bad) (bad) incl cmpsb lret dec (bad) jae ds xor andnps pop loop cmpl hlt adc rol and (bad) (bad) (bad) decl lret scas jle mov xchg bound adc cmp pop movsb sub (bad) (bad) (bad) lcall mov enter gs sub loopne and xor cmp scas cli lcall (bad) ds mov aam xchg rcll pop cmp fpatan ja stos (bad) (bad) jmp cmp mov xchg xlat mov and cmpb (bad) mov stos cmpl xchg daa dec aad lods sbb adc ret ljmp cmp jnp lret (bad) (bad) out cli mov add inc xchg icebp xor repz in mov cmc mov xlat aam and movsl lods shr ret cmp fdivr lds incl jle pop mov scas fcmovu dec fsub dec mov cli cld push xchg and jp (bad) into cmpb (bad) incl jp push movsb out add inc cmpsl sub out mov mov jg (bad) mov outsb xchg movsb rorb imul inc (bad) decl sbb mov imul push xor mov (bad) (bad) (bad) dec pusha int3 jle xchg sbb fcoms inc ret mov pop lods or jle jp gs add mov jb ret out rorb mov out xor pop xchg inc sbb (bad) (bad) (bad) inc stos dec xlat xchg inc mov mov push sbb (bad) or fs jecxz int push out loopne loope (bad) ljmp fldt ds mov push addl or (bad) (bad) mov adc lds std cmp pusha mov add xor test aam xchg (bad) (bad) (bad) ljmp mov adc sbb lods or adc das lock dec pop cmp (bad) (bad) dec fsts jb cmp ja pusha push movsb lds xchg (bad) mov fisttp cs (bad) push stos push add pop roll fmuls shlb sbb jns imul adc movsl adc xchg cwtl test pop fcos (bad) (bad) jmp mov inc or pushf pop sarb cld test mov aad lahf and (bad) (bad) (bad) ljmp pcmpgtw xchg cld cmp fisub push scas pop mov dec xorl jb jo adc lret (bad) (bad) (bad) push inc (bad) push dec jns dec sbb out shrb ds call xchg inc mov dec stos mov cltd (bad) mov inc dec cmp js ret mov je fcmovbe pop into pop mov mov sbb sbb and mov out int3 dec mull out mov cmp and test outsb xchg sbb sub (bad) incl push std sarb loope pusha or loope push lret icebp lret dec iret pusha int3 loopne add sub push sub mov inc divl (bad) les xor test les into leave adc jg in xchg and jmp xchg pop mov mov sub push clc push out mov (bad) (bad) (bad) decl icebp sub mov push and cmp js jne ret sbb addl test or aas pop out decb push adcb inc mov test ljmp mov fstpt aaa dec push int push scas (bad) (bad) (bad) decl xorl frstor and int3 pop scas push pop xchg cs inc mov decl es test int imull cmp data16 lea (bad) (bad) (bad) pushl xlat mov repz cmp (bad) mov xchg ljmp stos mov lock out xchg (bad) (bad) incl imul pusha shrb outsl pop ja push int3 (bad) and mov (bad) (bad) (bad) push cmp lods into cs cmp daa add mov rcrl (bad) (bad) (bad) (bad) fdivs push push adc xor add dec xchg mov xchg les inc orl lcall (bad) mov mov sbb fstpl push fsubr pop lsl mov (bad) (bad) (bad) push push movsb push insl das lahf pop outsl or push stc lods je aam pop sti or imul les add jnp lea jl push mov pop popf fs or (bad) aad and xchg jle enter (bad) or xchg xchg mov inc je sarl (bad) mulb add shlb adc pop mov loop addps imul out (bad) (bad) ljmp mov mov lcall cmpsb lret cld pop rcll (bad) call jo mov mov cmpsb int inc mov fisubl sub pop pop push bound nop dec rcl pop pushf jb sarb arpl call (bad) (bad) out nop push mov jae pop sub stos jb test (bad) loop (bad) pushl pop mov or xlat add adc xor mov (bad) (bad) (bad) mov mov ret insl adc je add loope imul stos (bad) push jne,pn mov (bad) (bad) decl jmp (bad) arpl xor pop lea test andl adc int3 iret (bad) (bad) (bad) lcall popl mov fwait repnz lea inc jp aas sbb (bad) (bad) (bad) (bad) call push iret arpl jno popf popa int3 pop outsb xchg mov stos lret icebp test pop add (bad) (bad) pushl sbb inc sub or push dec (bad) push aas mov or das pop leave mov dec jmp pushf jle mov mov (bad) (bad) ljmp adc jae adc push dec cmp pusha add arpl (bad) (bad) (bad) ds (bad) inc lahf orb movsl je mov mov mov aaa pop sbb xchg arpl stos jecxz inc popf pushf lahf clc dec xchg xchg adc xchg popa outsl dec arpl (bad) (bad) call (bad) mov xor xor inc add push xor loope pusha jg inc (bad) (bad) (bad) fbld pop int int3 jne out nop mov jne mov shlb dec pusha pop inc call or push repnz pop dec or repnz call ret jne mov ja adc repz push enter xlat sarb add add or (bad) (bad) decl leave and or lret aaa (bad) inc xchg test adc push add sub nop fcompl sar fcomip (bad) jg xchg das dec data16 inc push cmpsl movb push dec sarl shl xor pop leave (bad) aam xchg adc (bad) (bad) incl add xchg inc pusha pop push repnz push movsb std movsb test (bad) mov pop and cmp sub adc cs jnp sub push jb (bad) (bad) (bad) decl lret mov push mov icebp stos and idivb nop (bad) mov and sbb and (bad) (bad) (bad) lcall insl in pop int3 clc enter ds xchg adc imul mov jg inc lods js repz dec aas sub inc fistp into sbb jnp sbbl mov or (bad) or ljmp hlt inc sbb cmpsl lods scas pop jns mov (bad) decl dec push rolb ds out mov xchg mov cmpsb (bad) (bad) (bad) lcall repz adc insb push movsl dec jno push addr16 jp dec cwtl mov mov (bad) push incl sbb mov sbb call lods mov cmpsb push push inc popf mov push xor xchg ds jae or mov (bad) jg jmp (bad) fisttp fstpl inc movsl push xchg cltd ja scas in loop dec xor mov (bad) (bad) (bad) jl mov mov sub fstpl and add xor out (bad) pushf jge lds jl (bad) (bad) decl mov fsts (bad) rol mov and dec cmc mov mov hlt jmp push inc sub pinsrw cmp test test mov dec popa sub dec out dec xor insb pop add pop jnp shlb xor (bad) jg addr16 lea adc scas or rcr nop mov push lods and jb out and (bad) (bad) (bad) ljmp xchg add inc pushf or xor test outsl jge and movsb popa (bad) (bad) (bad) (bad) fisubr jns add bound jle movsl mov dec lahf mov (bad) (bad) pushl decb or mov jno sbb (bad) fcomip adc cmpsl (bad) cld mov cmovp fs stos mov mov out dec out add int3 cmp call rclb stos subl xor (bad) (bad) jg pushf jmp or xor sub aad jmp ret xchg sbbl or repz stc leave (bad) (bad) (bad) push push mov outsl aaa adc mov int3 test mov (bad) iret cmp sar mov aam inc dec mov or (bad) lcall add rorb adc mulb mov add add lock hlt (bad) (bad) pushl xchg into mov pop cmc xor js cmp pop or or (bad) lcall fcomip sbb jo lcall loop cwtl cmpsb call push aad imul (bad) mov (bad) rolb xor mov clc and (bad) (bad) (bad) js je sbb mov in popf cltd insb lret leave jg outsl push xchg adc cmp call adc adc xchg jl or inc cmp pop loope sbb (bad) (bad) (bad) call mov fidivl js dec dec or xchg xchg or popa das and in insl imul mov outsb push or dec icebp aaa and packsswb mov fsubrl adc ficom inc xchg cmp (bad) dec add fwait test push out xchg lock outsl ljmp pop dec fbstp xchg and adc fdivrs inc pop jle xchg adc lret and (bad) incl sub out test pop icebp inc movsb sub sub roll ret sub and imul ljmp pop movsb mov xchg dec sub hlt fcompl mov imul clc (bad) incl dec dec xchg movsb mov dec ds es inc push (bad) (bad) (bad) (bad) jns sbb orl mov lods leave push adc mov inc or mov call clc lea cwtl and and aas add jecxz int addr16 sbb (bad) mov loop sahf ret or jmp mov xchg dec mov (bad) jg movsb ds movsl movl add push call mov cmp cmpsl es js mov push iret cmp mov add movsl mov (bad) (bad) jmp imul stos xchg call test aam lret jecxz idiv (bad) push add (bad) leave loop ljmp jge push in out dec pop sbb pop icebp (bad) (bad) jmp out rcrl mov es jnp test lcall fsts (bad) out xor rcl nop dec jecxz fs aad xchg xchg andl dec ljmp mov and push and pop cli sbb ljmp ljmp aaa daa cs jnp (bad) (bad) (bad) pushl inc pop in xchg loope fmull jmp fstps sub jg std (bad) (bad) (bad) ljmp inc repnz test dec imul and leave leave jge lret (bad) (bad) jmp nop sub inc fwait jle xor mov ljmp scas push xchg (bad) (bad) (bad) ljmp dec mov loope (bad) in insb add clc dec mov push out (bad) xchg rclb (bad) (bad) (bad) call ljmp mov xor push movsb inc jbe jne sbb cwtl sarb sub test mov loopne insb jne dec push mov (bad) (bad) lcall shrl ljmp insb jo mov test dec data16 jg (bad) lcall cmp imul cmp or jo sbb sub mov clc (bad) dec mov push xor (bad) jns sub outsl fidivr push popf push inc mov pop (bad) cmp mov (bad) call dec jle aas cltd push mov mov daa test xchg mov daa cmpsl lahf sti adc push (bad) (bad) (bad) pusha dec pop lds and ss cmpsb aad aaa scas xor mov out loopne lock ja mov imul mov xor push flds and adc insl jmp (bad) (bad) (bad) inc in roll pop add (bad) mov mov into repz jns cwtl mov inc hlt mov call std jne out outsb and (bad) mov gs sbb mov pop sbb aad add (bad) sub loopne nop push fisub aam in (bad) (bad) lcall dec push cltd dec rorb cwtl cmp adc fadd icebp int (bad) (bad) (bad) (bad) lcall (bad) divl xor lret mov lret (bad) mov and call xchg (bad) jp fsts mov and pop loope cmp out or mov jbe cmp rcrb mov call lea sub xor mov cmpsb (bad) (bad) (bad) (bad) call repz cs out aas xchg pushf add mov das (bad) ficomp imul dec cmpsb pop mov sub ljmp sub inc jae add lret xor call loopne scas or push sbb (bad) (bad) (bad) decl mov lret jo (bad) iret sahf dec adc lods cs hlt mov in jbe add adcl jmp xchg ja push sub int or dec add arpl js inc sar (bad) call nop or mov loopne push lods and inc popa lret les mov ljmp iret pop cmp out push sub jp cwtl das xchg sbb push mov (bad) (bad) (bad) ds jl out sub mov mov mov pop xlat (bad) xor stos (bad) (bad) bound sbb pushl add pushf jno jb jge inc into xor push push xchg sub (bad) (bad) (bad) mov jne fs int jp mov fistpll pop adcb jl lcall and movnti pop cmp inc pop push pop jbe xlat or mov imul and mov or addr16 in push push mov (bad) (bad) (bad) (bad) decl mov ss mov pop sub dec stos es cld fwait ja add or inc push (bad) push outsl jae gs jge push ud2 fmul mov mov (bad) mov aad pop jns dec push stos sarb test push rcrb (bad) (bad) jmp dec fstpl rcrb sahf pop xor xchg mov das pop cmp mov cmpsb add (bad) lcall and popa jbe dec cmp add mov loopne cld int rcrb insb mov sarb (bad) cmp add dec and test test mov mov and push dec out jnp insl lretw data16 jbe pop pushf repnz (bad) (bad) call jmp lea jns and sub adc nop std sbb (bad) (bad) (bad) decl mov jbe dec inc sbb lcall stos xor mov lret (bad) (bad) (bad) jmp imull push pop pop out insb xchg or cmp scas push cmpsb dec lea cmp cmp push gs in pop icebp xchg (bad) (bad) incl and into sbb pop inc test popa dec xchg mov (bad) sub lcall imul scas mov mov out xor outsl clc inc jns add fisubl lcall outsb rcll dec into cmp out and xchg lahf cs data16 out cmp adc jbe call incl cmp pop sub push push mov int lahf fcoml dec test (bad) (bad) ljmp ret fsubl shrl out in xor repnz sub push and mov nop pop dec jmp call cmp fstl mov mov cld sar in dec movq pop (bad) (bad) (bad) inc sbb xchg adc pop out inc push xchg aaa iret shr test pop out mov lea dec (bad) (bad) (bad) jmp and scas hlt xchg (bad) (bad) jne pusha cmpl bswap adc (bad) mov (bad) (bad) lcall push insb and pop rclb jns sub lea xchg nop movsl sbb mov sub (bad) (bad) incl add in mov inc cs cli fwait sbb loop jb (bad) (bad) ljmp mov mov sahf aad jmp ds push lods punpckhdq test (bad) lcall (bad) mov inc popf enter add lahf je out cltd out jae dec sub (bad) (bad) jmp adc jecxz scas or inc outsb ds cs pop jl stos bnd loopne das cli add (bad) incl push adc in xor mov sub mov ficom enter push test addr16 dec das push cmp pushf push pop jo mov movsl mov pop movsb decb xchg xchg xchg mov push dec gs dec (bad) (bad) (bad) (bad) call ss xchg and lea adc ds pop jmp (bad) (bad) incl movsb mov pop jge sub nop jb fiadd pushl lock inc rcl jno ja mov popf ds dec std (bad) call jnp xchg push shlb and stos sbb lret mov (bad) ljmp mov adc xor sbb lret pop (bad) hlt sub xor (bad) (bad) decl add and dec popa (bad) enter negl or lcall call ret mov add pop sti inc in dec outsl repnz mov sub cmp rclb (bad) (bad) in icebp ljmp cmp mov movl ret in out dec jp (bad) (bad) (bad) lcall xor push test negl pushf jbe scas insl int in jmp out mov pop fildl (bad) (bad) (bad) fimul pop cmp or adc scas push push ja rcrl jne loopne (bad) jg nop lock test pop addb (bad) daa and in push (bad) (bad) mov rcr lret mov mov mov lds sbb (bad) (bad) int mov inc (bad) (bad) (bad) dec and pop dec mov add adc cmp mov cwtl in cmc mov repz inc mov cmp cmpsl scas je inc or sub cmc mov mov pushl jb,pn sbb aad push lahf pop or mov mull pop mov dec dec fs (bad) (bad) (bad) jp jno sbb cmpb sbb sahf out ds sbb pusha dec mov flds das push lock mov cmp outsb (bad) cmpsl and fst add mov aam faddl add sub incl mov insb and cmp mov enter in (bad) (bad) (bad) call mov int3 sbb lea loopne add stc loope push adc (bad) (bad) (bad) call sub pop in jns testb jb mov mov mov inc push sbb mov sbb lret pop jecxz lods call dec ss das clc (bad) (bad) mov stos js or mov pushf adc pop cmp sar (bad) out jns sti inc (bad) mov add scas mov pop xor lahf xchg push (bad) mov xchg testl lods sub push adc push push repnz lods pop mov mov mov jmp xchg insl fdivrs or dec and ds pop (bad) push pop lcall clc jge je das inc xchg mov sub xor aam (bad) (bad) dec lret sti xor fildl lcall jmp insb aaa outsb ss into ret sub push cld call push cmpsb in mov mov lcall (bad) (bad) pushl xor fisubr adc add push mov (bad) (bad) call sub lahf aaa lret fwait sbb stos scas dec pop xchg jmp ljmp sbb je fmull test xor mov (bad) vmwrite push push jnp loop clc jg ljmp mov xchg mov lds pushl push mov mov mov fs sbb bsr mov (bad) es (bad) pushl sbb test mov push shll mov xor adc sbb mov aas xchg mov mov jno gs std mov outsl xor push jecxz (bad) (bad) jg inc test popf into fildl into mov repz mov arpl (bad) (bad) ljmp pop lcall push lock or nop andl in insb sbb push loopne das test cmpsl hlt pop scas cmp inc out pop dec cmp xor (bad) (bad) mov in adc mov add loope or and xchg xchg inc leave push je sub (bad) mov adc jge dec cmp and xchg cli lea stc fmulp push inc mov cmp dec das mov int3 js dec sub incl cld push ds add pop inc dec leave pusha movsb cs (bad) (bad) (bad) ds imul imul pop cmp rcrl or xor sahf mov xor fs sbb pop shl je lods popa or sbb sbb lahf scas sub (bad) ljmp dec pop das pop roll xchg dec inc mov mov lret (bad) (bad) lcall mov jmp into pop xor mov stos sti ja data16 dec jnp decb (bad) lcall xor push lods mov mov hlt aaa (bad) (bad) (bad) call mov ret nop mov pushf jmp and adc (bad) push xchg loope incl push (bad) push xchg fildl mov xor (bad) gs rorb cmp daa mov lcall js jbe adc (bad) (bad) (bad) decl jae cs cmc repz popa or lea mov cmp (bad) decl mov lret test imul out icebp and mov mov (bad) (bad) jmp sbb cmp sub inc je in xchg repnz or mov adc xchg (bad) cli adc adc add dec pop mov cwtl mov (bad) (bad) fbld jp mov lret (bad) sub shrb imul leave movsb ret or pushf icebp data16 pop sarl inc (bad) (bad) call ds test lea pop test and repnz aas sete (bad) (bad) (bad) decl cwtl add popf je mov stos insl cmp js jmp xor xor jp das xor (bad) decl mov push xchg test jae xlat (bad) hlt mov fbld xchg std (bad) (bad) jmp jecxz loopne cmpsl push push inc mov popf rorl pop aaa and repnz ds (bad) (bad) out mov mov adc and mov cltd lods xchg repz dec jmp xor cmp (bad) (bad) (bad) fistp test aas fcoml add dec test in push pop xchg ret add mov push jecxz loope mov repnz je sbb xor cmpsb call (bad) hlt gs xchg lcall (bad) (bad) (bad) (bad) (bad) mov iret les mov inc (bad) and inc adc or xchg (bad) (bad) (bad) cmp lret pop cmp sahf not aas in add pusha pop add data16 addr16 stc aam (bad) (bad) (bad) call dec sbb adc mov xor push inc mov out pop stc sahf mov mov jg (bad) (bad) ljmp pop sarl lret jb mov inc pusha add cmp adcb (bad) (bad) (bad) pushl cmp fiadd mov and fdivrl in xchg lea mov and daa lret test cmpsb inc cmp nop (bad) xor jp lret idiv stc add (bad) (bad) jmp add insl popf and fsubrp xchg rcll pop repnz mov xor sub pop cmp inc mov loop in inc xor icebp rcl push cmp into in (bad) sbb xchg or std (bad) (bad) decl or jbe lods nop rolb mov jae (bad) inc out dec (bad) movsb fldl xchg inc cld movb mov dec (bad) mov (bad) decl clc gs xor cs push mov les scas divl xor (bad) (bad) decl fdivr (bad) fistpl cltd pop push pop roll cmp iret pop push pushf out mov or mov fcomps iret mov xlat xchg dec dec out clc (bad) push pop jl mov out jb jno loop in and jle aad add push jg mov cmp dec cmp mov mov add dec and mov pop cmp and ss (bad) (bad) mov or pop jle xchg sahf out movsl mov mov mull (bad) (bad) (bad) call xchg rclb mov jp mov cmp ficoml mov mov (bad) (bad) std lahf (bad) das pop (bad) cmc pop xor rolb xchg pop out sbb popa sbb or lcall int3 aad lock imul jle (bad) dec mov (bad) (bad) jg add js dec sbb cmp cltd cmp shrl aam dec pop aas aad and cld lcall sbb or std lret mov popa insb cmc adc in (bad) (bad) decl test or jne js movsb and fs push loopne pop push (bad) (bad) (bad) push in push cld insl pop push pop mov repnz movsl js pushf push or cmp in (bad) (bad) call inc jle sbb lcall xchg push (bad) mov push shr dec ret dec or (bad) (bad) fisttp enter push cli repnz cmpb mov cltd sub ds out inc cwtl lcall and (bad) (bad) ljmp cli push andl inc cld and xor daa (bad) (bad) (bad) pushl jmp cmp scas in mov cmp jne lret sbb cmp (bad) (bad) (bad) ljmp adc repz nop lods fidivrl or xchg call (bad) xchg cmp (bad) jbe push sub xchg sub nop in push dec aas xchg push pop adc pop lds xchg adc add xchg sub out or mov incl add jbe lcall push into add (bad) lock xor add (bad) (bad) (bad) push mov lret je xor inc inc jne mov .byte mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub in push lcall pop or adc ds repz sbb jo mov pop push dec bound arpl pop sbb mov shl jae insl add pcmpgtd mov jb popa arpl add lcall pushf int3 pop inc add inc and clc jmp idivl popa adc xor int3 inc mov in popf pop xchg xchg gs faddp (bad) loopne jno add shr or mov add cmp fcoms adc scas dec jo loope jmp shrd daa daa test mov daa pushf rcrb nop mov daa cmpb daa daa daa jo insb push fs int3 daa daa daa daa pusha pop in daa daa daa daa fcompl push clc lock daa dec push add mov (bad) outsl scas (bad) add sub je movzwl mov ss pop ret jb jb (bad) dec inc inc cmp jb jb xor sub out ds mov add push add (bad) sub enter add mov mov mov add lea mov mov mov inc cmp jne mov mov mov push nop mov out (bad) push inc add scas mov mov xchg insb test xchg mov mov pop jnp push or mov mov adc add (bad) aaa push mov push or and sub ret mov push mov mov mov mov add loope insl iret rcrl mov add cmp jne int ficompl inc mov or inc add adc mov push jne aaa sub jne (bad) mov ror sbb pop pop pop push mov mov je sti mov xchg cmp jb in jbe jo into add call ja and mov mov or mov dec ret mov in fucomi aas pop mov add pop repnz sub or pop push sub mov xchg sub mov aam or sbb scas sbb sti jne sbb jnp inc nop es mov cmp mov fwait push add ljmp fisubrl add add and push jg mov mov test je sbb and (bad) adc (bad) cmp mov and push mov sti ds pop data16 rol push lahf push lods push movsl jne icebp push push (bad) add xchg dec pushf cmpl in mov popa clc ret fucomip mov (bad) or or lret and call faddl lds mov push jg mov out ja mov add cmp ja cmp cmp jae or or sbb out dec mov inc or add xchg jecxz fild mov mov add adc sbb mov adc or push adc hlt mov mov mov and sbb jbe cmp xchg sub mov mov jle add adc jbe mov cmp or or jbe loopne xchg scas adc sti push push cmpl jmp ss daa cmpsl movsl loopne and push cs inc add xor sbb add sub sub or sbb mov add sbb add cmp nop movsb add add inc mov dec paddd fdivs clc mov (bad) aas or add mov (bad) repnz (bad) xor idivb inc xlat jl xlat ja movsb push movsb in je mov inc cmc shll xchg xor mov (bad) pop add jne pop stos sti mov and push inc in hlt icebp mov xchg insl pop mov add out cli jl add lock mov je cmp inc jle mov mov sub push stos mov std mov icebp xor lea jno pop shrl mov pop fcoms gs pusha push out arpl sbbb data16 xchg jo xlat adc int3 imul jne push fcmovb loopne cmp js sti inc cmpl sub inc popf adc or mov pop sahf push (bad) incl mov cwtl aaa jecxz add add ret jg cmp jae mov out rorl jge xor push test je aad rcll ret addr16 or js add adc jmp jecxz lock jl hlt pop sbb add push push mov xor push cmp fistl loopne or inc test adc push scas shr mov or adc aad leave jle hlt inc cmp in mov mov add rcrb xor push adc sub inc mov loop ret mov pop pop xchg dec pop xchg test shlb xchg sbb add in lds pop and gs inc je addr16 add xor adc jmp mov sbb xchg sahf sbb fistpl push cmp popa jne add adc ljmp insb cmp jg adc test jns add jne loopne sar test mov adc hlt mov add sbbb cmp mov dec fadd jb add or or cmp (bad) (bad) call adc xchg lea cmp jl movl pop repnz jb sahf es divb lret or mov and add out not sub test cld dec adc adc popf fist je insb or push or push sar mov xchg or ret decb fistpl (bad) xor adc call fisubl (bad) sub inc aas jg sti outsl enter je mov sub cmp xor popf popa cmp (bad) or cmp xor add fcmovnbe outsl out mov clc add and repz bound mov decb xlat cmc adc add dec xor dec (bad) mov jo add or sub cld jg stos jg test sub sub cmp jge mov xchg adc out insb jmp daa xlat or inc add mov in mov aad test fldcw (bad) lds stos clc add sti jae lea (bad) xor jnp or xchg (bad) cmc push sub mov add sub pop cmp aaa adc ds enter push sbb sbb cmp inc cmp inc adc push pop add sub cmp in cmp push test adc add pop (bad) sub mov sbb adc or mov push movb daa or adc sub or mov sbb call add mov inc mov mov loopne mov sbb push mov cmp pusha cld cltd adc xchg lods sub add adc repz xor sub sbb jl les adc add aaa out subl add or mov cld adc adc loopne pop mov pop mov sbb fadds pusha pop pop adc pop int3 (bad) rcl sbb pop ret pusha or xor pop mov sar cmp stos jg adc jne mov push xor ljmp xor mov sbb test in (bad) cmpsl lock pop mov pop ds pop jmp sub sbb push jne sbb mov mov jle fistpll jne movsb sub cmpl bound dec sbb hlt inc add xor dec (bad) loope sub je shrb xor mov pop inc and ljmp repnz jne xlat roll xor cmp adc test add mov loopne mov int3 sti clc stos jle jg jg inc cld jbe addr16 push push mov add or sti mov push mov add jg sbb pop or mov add pop inc scas (bad) jne push lock pop or xor mov cmp mov fcoml cmpsb push add or sbb jbe jmp loopne push lahf cmp sarl sub mov add arpl sbb das pop jmp inc (bad) arpl and ret pop pop push push sbb cmc sub or dec out sub jo xor or insb negb mov test jne test ja (bad) or movnti add push add loope push or mul mov add (bad) jge mov adc cmp icebp andl push int3 xchg mov cmp stos rolb pop in andl cmp fisttp mov testb sahf lock sbb cli scas ljmp inc (bad) or orl jmp mov cmpl jo in adc push adc or adc pusha (bad) sbb and pop or pop mov jg add pop jg add repnz fsub (bad) mov loop push (bad) jge loope add cmp cmp lock adc xchg adc sbbl notb clc xor mov jnp jge lea cmp add negl add sbb shll sbb sbb mov cmp imul (bad) sub fnsave cmpl iret adc in pop (bad) hlt xor dec daa add inc lahf add add dec or icebp mov pop pop test add cmp ret add orl pop mov rorb mov or lock lret pop sbb je add pop mov add ret add mov nop xchg in inc rolb sbb cmpsb push push ret hlt lret or mov movhps mov sbb jne,pt (bad) ss adc xchg ret (bad) mov push mov (bad) add mov ss adc mov add sub mov mov ret test call jge cmp or xor mov dec jae cmp je je mov loopne mov test je sbb enter dec jnp pop or add push jmp out xor add outsl jo xlat (bad) repz push mov loopne cmpl pop mov push mov ret rol add sbb mov dec lock pop or xor jg jge push out mov hlt jle mov mov jecxz cmp pop inc daa dec sbb push out das mov ja mov mov mov pop mov adc push enter daa pusha rcll roll pop jne xor pop mov xchg jp mov mov sub sbb ret loopne mov fdivrl sarl (bad) mov inc rep jmp mov fist in leave jmp mov jl pop cmp xchg hlt push lock pop adc loopew jno (bad) mov cmp divl adc js rep xchg subb inc je cld lea xor std xor jnp mov ds inc mov fldcw movnti pop push sub fist fwait pop pop xor push mov push test aad das mov shl cs (bad) mov add sub sub mov (bad) mov stos jmp fsubr sbb jmp mov sti jge je cmp and mov xchg adc inc (bad) or pop pushl mov cmp mov ja and idivb jb push sbb lock adc imul sti dec dec std movsl data16 call das mov cmp mov lret mov inc inc and xchg pop xchg push xor mov mov inc inc dec ja add push shr je mov cmpsb pop and cmp jne dec mov sbb aaa in aaa or jne jmp adc add adc (bad) loop je mov cmp jne push adc add adc outsl pop loopne add jne add cmp jne cltd push icebp or jmp add jl (bad) push mov shr or int3 in dec pop cmp shl mov inc pop and mov cmp jne dec dec inc sarl dec and pushf mov cmpb fcomp fdivl int loopne data16 stos pop aaa in popa adc pop daa push js jge fisttpl sub mov push inc pusha and add dec jae or je or je and je push imul xor dec and clc (bad) fsubp je jmp or or cmp ja lea mov add push es int or jge jmp inc jle mov jle dec pop sub jmp inc inc jmp mov jbe push je (bad) popa jb xchg and jbe push adc or pop add aad cwtl pop xor mov xorl (bad) mov mov push cmp cmp push inc mov dec xchg jecxz loop repz decb inc into into pop repz mov fist sbb fs je adc fbstp mov adc lea fldt jbe (bad) fisub add je das sbb cmp je push and jmp movsb xor mov xor xchg push cmpsb stc sbb jmp fstp fldt loope call (bad) xchg arpl (bad) sub adc dec push repnz add add pop stc in or ret mov adc jl and mov out sbb das (bad) in xchg xchg and inc mov mov lock jle fistpl es test out sub pop iret scas cld lret add leave sbb mov iret (bad) cld jbe imul cmp mov (bad) mov bound aaa jmp fild xlat fadds outsb xor xchg push or (bad) mov test into sbb rorl mov push pop test enter ljmp outsl movsl push inc push and daa (bad) lret into pop inc test xchg clc js aas sbbl or mov addr16 leave repnz bound and cld gs sahf mov (bad) pushl test lds iret decl js inc mov stos mov cmp (bad) (bad) (bad) jmp xchg test stos pop out sub imul (bad) divl jl xor cmp (bad) ljmp (bad) call mov sti jmp stos push inc mov push sbb sarb (bad) jmp int3 repnz test nop fildl daa movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov (bad) (bad) (bad) jmp fs aam imul loope jp iret inc bound ds push cmpsb scas (bad) (bad) (bad) jmp pop or addl cmp xor in cmp (bad) out cli lcall mov mov popa movsb mov and addr16 repz mov mov outsb fwait xchg and and outsb bound xor jmp or pop adc clc add jne push pop and add xor mov jg cmp movzwl mov (bad) lea push push inc or cmc or xor push push cld (bad) mov mov movl out ds cmpsb data16 add mov mov test (bad) mov mov jmp push clc pop aas outsw xor or leave mov adc inc push (bad) (bad) (bad) call push inc pop inc outsl jb popa outsb fs inc gs jo imul push dec popa jae push sahf jo loope insb jne fninit fwait sub (bad) mov loopne decl mov inc ret or clc jg ljmp or dec cld jne dec mov xor mov fbstp lcall jo insl inc fcompl fcmovu fisttp and sbb pop aaa push (bad) and or fsubrs rorb decb and push jp cmp (bad) repnz pop and mov jbe xor pop mov incl push cld fimul dec fdivs rclb mov push clc add stos pop (bad) mov or push mov cmp mov jmp cmp je pop mov add (bad) es sbb movb jnp mov push sbb pop test cmp outsl lods (bad) mov mov dec xorl fdivrs cld push inc jmp stc cmpsb jae lgdtl push std (bad) jb shufps and loope (bad) aad mov add add pop jo lahf inc (bad) push or mov or mov dec frstor adc fimul fcom and xor add mov (bad) mov add push mov push add pop (bad) ret in pop push sbb and out cmp push (bad) dec setne lahf pop mov in dec popf lock xor push push mov aaa rcrl jne jb cmp mov push or jne or ret cwtl push inc inc fcoml mov das and add adc call pusha sbb rclb rorl mov leave jne loope loop mov ret nop push xchg jmp lret xchg fwait mov push add repnz je pop in jno incl sbb pop add sub mov pop cs neg jno xchg add mov out mov sbb pushf sbb cmp mov mov jp les lods mov xchg xor cld pop inc mov (bad) rclb lods pop pop clc push mov icebp pop mov popa lock pop dec out dec add decl bound je movb dec push cmp sbb add dec jne icebp cmpsb jmp sbb add sbb jecxz sub cmp scas lahf push popf enter cmp push sbb imul call in push pop add mov jl call add hlt xor (bad) adc mov mov movl or or ficompl push movsb sub sub or cmpsl cmpsl pop adc mov push (bad) pop test push jo adc push clc pop sbb fwait inc jg jg mov xchg cmpb icebp pop rolb pushf (bad) in push call mov pop pop push pusha push push lcall or add jns,pn add or imul data16 xlat pop push push and mov mov cmpb je or jne movsbl inc insb pusha push inc jmp add (bad) xor shll jecxz popw add add (bad) popa addl cmp (bad) clc dec aaa insl jecxz pop (bad) mov add test faddl push ss ljmp cli and jmp orb icebp pop lods test (bad) sub cmpl je dec je aaa lock ja inc jbe add add arpl mov enter adc jne push jne push lea or jo cli push jns je orl movsl rolb cli push sbb pop sbb cmp sub movsb or mov imul outsl or jl dec movl pop (bad) jmp jle das hlt cmpsl lahf mov mov or aam or cmp xchg push add lret push mov cwtl or pop push or je add lds mov out fbld mov addb cmp jne inc pop test mov xchg in (bad) or mov jg pushw jno mov push (bad) xor out loop outsl inc jmp sbb sbb imul sub adcl shll mov add xchg aaa pop adc inc loope or dec or jo inc icebp mov arpl popf pop popa xor add cmp push (bad) test mov and std iret cs push push push push push mov push jns and pop es mov sahf sub or pusha add (bad) or sbb dec fistp (bad) ss aaa mov pop mov mov cmc lea jae mov hlt mov pop and xor push loope xor loop mov xchg ret das mov add sub sub pop cmp push sub fbld xchg jmp add sub jb je jmp cmp xchg push adc sub adc jmp sub std sbb es mov jmp mov jmp mov jmp mov jmp loopne (bad) jg sbb into jmp mov jmp mov jmp mov jmp mov aam or xchg push or dec inc mov pop ss mov jecxz lea (bad) je lods push insl jb outsl jp idivb mov test mov or inc sbb cli pop out in rorb sti and sbb mov sub xor push daa je xor pop xchg (bad) inc or cmpl cmp mov sub sbb cmp jbe push xor (bad) aaa repnz cmp jne and (bad) mov mov mov mov and incb loopne and mov inc fiadd adc dec (bad) call and mov adc pop add mov shll les dec mov mov xor in fnop cmp jle add (bad) sbb sbb in mov mov adc add out add jp cmp lcall mov mov push test xor pop xchg repnz subb jp cmp sbb xchg add add in pop ss jne pop pop pop inc pop sbb cmp add out icebp popa sar add mov xchg or mov icebp nop mov lods jg cmp mov add add rcr cmp mov es jne mov sbb add sarb mov mov push push ss ja push rcrl out xor sbb add movsl pop sbb ja add dec aad hlt mov mov leave pop push data16 adc cmpw clc adc cmp mov mov xor stos jmp push push add pop adc add cmp xor jbe xor jecxz adc pusha cwtl outsb add sub push or pop sbb cmpb push addl test sarb or call out dec and xchg sub or jne pop ret mov hlt lock sub icebp xor add jecxz rorl out fsub or cmp fldl es insl inc popa insb jne mov push add mov push jo inc (bad) adc lock testb ffree pop push sub push fwait out insl sbb popl je hlt pushf mov pop jp std push mov adc decl push lea aaa nop adc daa push out (bad) mov popa xchg inc jle sbb add or into mov fcmovu dec and sti pop jbe inc jg cmp cmp mov pop push jmp std dec dec sbb insb xchg adc test mov push je testl rcr (bad) push sub pop movw add xchg pop mov sub insl rorl and iret mov das roll loopne ds cmp and mov das or cmp mov (bad) xchg push push mov push push adc push cmp sarb rol lret mov (bad) cmp addr16 (bad) cld leave clc fdivrs bound jmp lea cmp push jnp addps into mov ds jne out jbe cld jmp fldl fistpl xor fmuls negb sbb add cmp test push mov mov sahf mov nop xor ret cmp je lcall add mov loopne call pop sub jmp pop cmpsl pop sub and mov pop or or addr16 in inc jnp,pt add push or mov add cli repnz pusha rcrl rcrl xlat pop stos clc mov push and in mov push cmp jl aam inc mov pop add (bad) xchg aas pop add jle add mov loope or jns push cld add cmp imul add and mov adc xchg cmp das sub jne out popa cmpl je cmp subl pusha sub mov scas rorl add (bad) fisttp dec mov cli lds push mov mov sbb dec clc cmpb lret or mov jle xor mov fmuls mov dec jmp aaa ret mulb sub add cmp fs dec jne add or pop out ja jge ljmp add dec jmp and inc pushf sbb loopne ret mov ss add pop dec jne dec pop lds mov or add jo pop or xchg jmp xchg hlt push rolb push pop jo imull (bad) imul pop enter dec and (bad) je cmp cmp xchg push and or pop and jmp aam mov mov movsl repnz push clc inc das lods out add add lahf cmp lds push (bad) cmc mov mov sti pop adc dec inc daa add mov pop mov out fdivr sbb xor cmpsb sub (bad) aaa pop es jl cmp jge sub scas sbb jg push fnsave add shr in jmp and jecxz mov int3 xor mov out xor sub jge mov in loopne sub stc add lea inc dec or sbb movsb push push cli mov push or lahf cltd mov push mov (bad) jle inc dec jge cmp adc imul add sbb or fsubs push mov lea lock add mov dec jmp jmp xor mov push insb dec js mov inc or insl jb adc adc roll (bad) xor pop faddl mov mov (bad) out inc nop pusha xlat push add clc jg dec out and sbb mov loopne clc pop sub xor adc lods jmp out stos pop in insl (bad) arpl cli pop cmp fisubrl test icebp pop and ret push push test jb fildl push sub das in rorb scas loopne mov mov movsl cmpsl cmpsl in push and call inc shrb shrb in jno jle add xor jmp js jae pop dec jle fcoms ffree aaa xor loopne sbb push lock dec push lock push das int3 mov add orb and ret add add add dec pusha ss outsl add add push inc sbb add jb adc jl push push inc adc orb in fcmove cmpsb add pushaw and push cvtps2pd or sar sbb loope push sarb jge (bad) lock dec cmp nop pushf lcall sub cmp push lods add add or sub xor lcall adc stos add in jne add xchg mov fmull or add je mov adc inc pop sbb mov aaa aaa test dec cmc sbb mov mov xor mov std (bad) (bad) cmp je cmp je cmp je cmp je cmp je cmp into cmp je mov stos fwait dec mov clc jmp adc or out mov jmp xchg aad push or pop jo,pn cs adc cmp pop jmp cmpsb cmp repnz push pop in inc xchg mov (bad) or pop call adc mov xchg push xchg cmc ret out sahf out and push pop (bad) push mov sti dec xor bound push je and lret cmp addb xor push and sbb jmp in jl mov inc cmp pushf subb test test dec mov cmp stos vpmulhw sbb jmp ljmp adc mov lea fldl add clc push push add sarl inc push mov add loope lods loope lds pop push mov cmp xor sbb pop dec or sbb rorl jo pusha add adc and jo sbb mov in add popa pop or jmp and in lea cmpb push js add inc dec (bad) fimul cmp pop jmp aas add rcrl cwtl xor xlat inc adc les ds cmp scas in jne add mov add mov clc sub imull mov in mov push popa jge xor push pushf clc in imul mov cmp imulb test in std adc les mov add es ja sti add jno popf fiaddl aaa inc ljmp out js inc add add je cmp push rorb dec ror or and int3 lock adc in pop mov nop mov xlat rcr pop imul rcrl sbb lahf adc adc pop pop ret sbbl mov xchg cmp dec (bad) jne cmp lock mov hlt add inc push mul push mov repnz mov sbb mov test jg cs mov mov ss lods in cmp inc push lock inc scas push push fiaddl add (bad) cld push xor call add push je test mov imull dec in in cmp inc popa fdivs adc cmp jne mov cmp jge pop sbb mov xchg add mov loope loopne sub add lea mov mov pop jmp decl stos scas mov rcl adc in xchg jge or push in test jnp mov dec in push pushf adc into stos inc int inc in dec push dec (bad) mov mov xrelease mov mov fbstp adc cmpl jle adc mov xchg dec jo and bsr paddq cmp mov inc push dec jne enter mov cmp mov push adcl and inc xor decl jne inc cwtl data16 push in xchg bound sahf adc pop dec adcl cmp scas adc dec lock pop loopne push push lock out pop pop mov and add in sbb cltd jecxz loope enter lcall mov jp dec (bad) ds add js inc jnp jne push clc daa and mov mov andl or pop inc adc jbe pop sbb mov push push xor aad or or popf (bad) jmp ret adc jecxz jmp sbb push jge cli pop jne ds mov js shr clc popa xchg ficomp cmp pop push push dec lock and or pop test je mov rcll lods cltd add sub ja fildl sbb js pop fwait scas jecxz and jl pop add mov mov out xor shlb insb jnp jge add inc add xor jno (bad) sub add inc notb mov cmp inc push push gs (bad) xor imul int or and je ja daa (bad) xor (bad) cwtl lea ret fwait mov fstpt push movb ret dec push push mov inc mov mov push repnz (bad) aas shrl jae imul gs xor cs insb jo incl inc gs outsl outsb addr16 popa je dec popa insl gs daa pop mov mov sbb neg pop ret fnstsw movb int3 push sbb add xchg mov and addb jl out jne cmp push mov call push out inc stc cmpsl (bad) popf int aas iret faddl mov repnz jl inc xchg sti and popf std xlat xor repz js push xor cmpb test nop jge call xlat or push sarl and cmpsb pop xchg sbb add cmp stos pop cmp mov lock inc xor mov adc rcrb (bad) rorb push sub mov push je das outsl repz bound push xor cmc add mov mov (bad) outsl data16 popa jb int and outsl mov jae aaa (bad) in pop pop cmpsl inc and add cltd inc in ja or addb (bad) mov shrb add xor dec pop mov push mov sbb mov adc lds (bad) push mov mov add mov fdivrs (bad) dec sub mov mov dec or lods push (bad) fnstcw push fsubrp (bad) cli mov and xor sub pushf ret inc dec add cmp inc cltd or les xchg (bad) push mov dec popa mov (bad) int3 loop jno cmp insb cmp aas and mov jne in jmp ret mov adc push cld jne sbb cmpsb cmpsb ljmp pushl and sbb mov push sub or mov insl fwait test sahf je sbb cwtl mov xchg push push mov lahf add pop mov dec pop sbb fimul pop pop ret sbb or xor sbb loope mov push test fidiv mov mov xor mov ss add insb mov (bad) mov mov dec js inc (bad) or sub loope adc addr16 xlat movsb mov pop sub addr16 imul sbb add dec inc cmp ja mov inc jmp cmp and lea cmp ja fcmovb jmp or jg mul mov adc sbb and lret sarb and and (bad) dec jnp pusha rolb mov or cmp jb or dec movb loopne adc mov dec rcrl add cmp lea test roll mov hlt mov mov mov pop (bad) push mov hlt inc dec adc inc das clc das fdivrs push hlt cli mov inc test je or jae adc je cmp adc repz add cmp jne std cmpps loope or mov std ja mov dec dec cld mov or push and push adc inc lcall ds jo adc or xlat pop fdivrl inc inc inc mov sub and mov ss cli xorb sbb test xchg inc sbb inc mov mov scas mov loope pop pop cs das cmp dec xchg adc mov loop aas (bad) jbe and pop xor inc push and cmc xchg dec xor pop pop add mov dec xor fldenv jmp adc or stc push add rcl push popf pusha mov and or sbb add ss and pop repnz mov inc xor dec inc inc xor outsb sbbl in sbb xor or mov cmp add (bad) cmp insb lahf or sbb test inc bound cmpl clc jge push add shrb mov divps icebp or add jo cmpl sbb lock pop push js std pop lea push push mov mov push mov or sbb es je push fdivrl add jae popa loop out xchg add fs pushl and mov bnd adc inc or mov (bad) subl push sbb movb fldt xlat xor inc add dec pop sbb lods mov data16 xlat out mov inc call cmp mov jl add in sub stos iret cmp jbe mov dec jmp jge and ds mov adc mov clc inc loope in hlt (bad) in push push cmc rolb dec or loope mov inc cmpl or clc loop mov and jmp push mov out call or sti test leave jne mov jns push sbb add mov fmull movsb inc xchg enter cmp arpl in fsubl test cmp sahf imul push das (bad) dec repnz pop xor adc cmp cmp xor mov and (bad) mov or out rolb enter jb mov dec push or test xorb fwait clc add xor cs (bad) ljmp push gs into gs (bad) adc inc imul inc push pop imul outsl arpl inc gs jne je dec outsl je out jbe dec imul mov gs outsl inc arpl xor adc ret or jb (bad) mov pop xor (bad) outsl insl bound outsl js imul ljmp outsl ja nop jo cmp andps outsb dec inc xor xor js push je dec add or mov stc (bad) add or add dec clc (bad) jb jb lock call in fnop aas dec push in aam int3 enter dec (bad) sarb mov test dec dec dec movsb mov dec dec xchg nop mov test dec dec je insb push fs pop pop dec dec dec dec push push dec dec dec dec dec dec inc inc cmp dec dec dec dec xor sub dec dec dec dec and sbb xchg inc dec dec adc push daa and unpcklps or outsb daa daa add dec clc pmuludq call pushf loopne fcom pushf pushf pushf pushf ror enter pushf pushf sarb mov test pushf pushf pushf pushf mov pushf pushf pushf nop mov pushf cmpb pushf pushf pushf jo push pushf pusha pop pop push pushf pushf pushf pushf push dec dec inc pushf pushf pushf pushf inc cmp xor pushf pushf pushf xor and dec inc sahf nop push mov dec je insb jl dec dec dec mov dec pusha pop pop push dec dec dec dec push dec dec inc dec dec dec dec inc cmp xor dec dec dec xor and dec dec dec and adc dec dec dec adc add and add push clc hlt daa daa daa daa lock call daa loopne fcom dec outsb daa daa ror mov dec dec sarb mov test dec dec dec dec mov dec dec dec nop mov dec cmpb dec dec dec jo push dec pusha pop pop push leave leave in inc push cmovl enter inc cmp pushf pushf pushf pushf xor sub pushf pushf pushf pushf and sbb pushf pushf pushf pushf adc or inc sahf pushf pushf add cld push clc dec dec dec dec hlt lock call in fnop dec dec dec dec aam int3 enter dec (bad) sarb mov test dec dec dec movsb mov dec dec xchg nop mov test dec dec je insb push fs pop pop dec dec dec dec push push dec dec dec dec dec dec inc inc cmp dec dec dec dec xor sub dec dec dec dec and sbb (bad) pop movzwl shl or ret inc dec inc mov inc popf cmp or push and push cmp dec (bad) or xor es fbstp and scas push mov movswl add inc and dec pop data16 frstor mov pop and dec push (bad) push xor scas pop jg xchg into pop or cmovle push cld aam pop add jle mov rorl adc repz adc sbb and mov push pop push xor jmp xchg outsb daa hlt mov xchg pop ret jo fiaddl nop scas cmpsl add push and out stc imul or inc mov xorl push arpl mov push cs push mov jmp (bad) push gs adcl fs (bad) in inc pop or pop call push add add gs push mov dec push push dec inc inc dec add outsl inc pop jle sti (bad) and dec push inc push dec pop and mov dec push push pop sub push inc dec pop dec and (bad) (bad) dec dec inc push das mov imul and dec movsb pop sub xchg xchg xchg dec xor icebp repnz xchg xchg xchg hlt cmc div xchg xchg xchg xchg clc stc cli sti xchg xchg xchg xchg cld std (bad) call loope jecxz xchg xchg xchg in out xchg xchg xchg xchg call xchg xchg xchg in in out out xchg xchg xchg xchg rcl rcl xchg xchg xchg xchg aam (bad) xlat xchg xchg xchg xchg fcomp fcmovu xchg xchg xchg xchg (bad) (bad) xchg xchg xchg xchg rol ret xchg xchg xchg xchg (bad) (bad) xchg xchg xchg xchg enter xchg xchg xchg xchg int3 int iret xchg xchg xchg xchg mov mov xchg xchg xchg xchg mov mov xchg xchg xchg xchg mov xchg xchg xchg mov xchg xchg xchg mov xchg xchg xchg movsb movsl cmpsb cmpsl xchg xchg xchg xchg test stos stos shll outsb aas jl xchg sub sahf aas jl sub add daa and xorb push xor push (bad) aas (bad) hlt sbb xchg or arpl je outsl outsb sub jmp fldl jg adc dec sub js mov popa jo pop mov mov mov jg or dec jne dec dec gs outsl jb stos in mov sti std outsb add or outsb mov push int insl cmp scas ds push pusha cmp push mov scas xchg scas push leave xchg mov xchg xlat hlt mov hlt or sbb fs outsb dec outsl idivb xchg jl test or imul lods inc ficoml mov push jle popa outsb addr16 scas cld add pop orl jecxz cmp out jo movsb mov dec inc sti inc and scas inc add leave mov jo xchg push imul ds movsb pusha scas (bad) insl inc fidivl scas pusha dec popa jo (bad) rcll mov mov nop adc xchg or (bad) movsbl xchg subb outsl imul sub div inc cmpsb or popa jae fmulp mov sub inc xchg sbb orl and shrb sub xchg adc sub pop clc jae push adc sbbl add push jb insb add fsubrl mov imul xchg dec jbe cmp mov ret adc fbstp inc inc popa mov (bad) nop scas ds dec push popa sbb push and insl in mov js push sub mov popa sub mov dec jne push aam sarl dec add push shlb test data16 bnd mov jbe sub adc inc push stos subl ds sub (bad) popa data16 fist (bad) je adc cs xor push add or push inc insb jae cwtl inc cmp das and pop mov inc or jbe xchg xchg enter push push icebp pop adc xchg jne int3 add mov mov bsf mov jbe add adc out jge inc sbb int3 inc decb pop and sub mov test std (bad) jnp sbb push loopne sbb mov push cmpb push push xchg adc outsb and dec (bad) imul and mov fdivs lods outsb arpl cmp inc push inc fdivs lods ret or div push mov add hlt scas and mov mov mov dec pop ret sub cmp cmpsl cmp aas lock mov rcll jno add xor jae scas or pop mov xlat adc adc or mov mov mov enter in ja pop push mov adc scas imul mov mov add mov cwtl js cli sti popa test or aaa lock adc adc sar or push cmp ja sub mov inc inc dec shr cmp mov jg inc pop cmp inc rolb popa sub push mov cmp jbe (bad) aaa inc cmp leave repz je movzbl push push (bad) jmp decl inc loop add repz jne inc imul loop add ds mov sub or outsb mov (bad) (bad) out or cmp je loopne add in out dec imull lcall mov cmp push add sub xor sub jle push or push aam sub outsb push xor arpl mov fcoms mov movsl outsl and dec movsb cmpsb cs or jo add adc inc cld mov cwtl rclb scas fnstcw push adc adc ljmp lock inc in (bad) cmp jl cmpb jbe adc sbb jecxz imul clc push sub inc pop addl cmpsl lock (bad) mov mov add sub jb sub std pusha (bad) cmp jl inc mov ljmp ljmp adc or sbb aas mov inc dec jne fidivl icebp mov sarb jl (bad) mov inc dec xchg jle cmp ret mov (bad) div dec dec out mov jle cli cmp pop mov idiv call ljmp jbe add mov sub jmp mov dec jne push mov out in adc leave push outsb cltd mov addr16 or (bad) dec inc sub xor clc jg pushl pushl mov negl cmpl inc aaa xor pop (bad) xchg sub int mov and mov orw fldcw mov dec add jno jge mov daa andl xchg (bad) fildll fistp ret add add sub fwait mov mov insb rorl (bad) fdivr mov cmp adc lods push sub rcrl ja in jae fldcw dec ffree ffree ffree ffree pop and or aad aam jns add mov arpl insb sub pop jg cli mov mov dec aaa pop or push xlat fcmovu mov push lock cvtdq2ps popa sbb fs lret mov icebp popf or inc lock jnp rcrb insl imul sahf sbb push cwtl pop outsl mov dec ret pushf roll cmp insl mov jbe fbld (bad) cmp xor and and mov xchg mov inc das ffree add and lsl pop notb jge jo mov inc call and add add std lcall add push adc sub jecxz push sti pop add lea sbbb adc dec data16 das sbb fldt fcomps setne jmp xchg adc ss mov pop outsb dec mov addr16 inc mov dec ret test iret add xchg insl sbb bound stos and adc adc mov rcl and xchg daa orl std add enter add push fdivl jo loop (bad) (bad) inc ja or add dec push push in mov mov mov jmp insb sbb jae mov iret enter orb mov mov les jmp cwtl ds push dec sub (bad) scas negl bound in mov mov push adc fistp or arpl inc sbb shrl jge (bad) jae das add cld xchg push cmp lret aaa mov xor pop lock adc je add dec testb xor call fbld mov call lcall jo push sbb mov mov dec cmp stos orb pop cli pushf sarl mov push mov sbb mov push aas pop cmp les rcll movsb push push into sti dec cmp enter enter ss xchg out call sahf jbe (bad) notb hlt clc cld add lock insl clc leave or push and adc or mov push les aad lock and movsl or (bad) movsl pushl cmp mov mov ret das lea adc ret in add cld in dec mov (bad) jle rorl clc jecxz add movsl xchg xor dec cmp add lret pop lret ret push pop lret (bad) pop pusha lcall (bad) (bad) xor mov fistp (bad) pop adc pop outsl mov push ds cmp (bad) pmaxsw (bad) aas xor xor pusha jbe cld repz mov mov les pop cmp insb lahf inc pop cli ljmp lcall or pusha mov xchg mov or add inc push (bad) jne scas cld pusha sbb inc inc pop jb in outsl jo inc dec je mov mov pop sub jbe (bad) aas lods fcomps mov mov push add push dec sbb mov cmpsl mov jmp jb pop jne jo sub mov movsl sbb pushf inc dec cmp pop mov cmp xorb prefetcht2 cwtl cwtl xchg fmuls mov mov (bad) fcmovu pop jge cmp jne les movb les and and and ret je pusha and lcall mov add sbb (bad) mov ljmp xchg or sub push push call into (bad) out add das push adc mov (bad) or and insl pusha (bad) jne insb sub js sub mov lret test mov mov cmp (bad) fidivrl sub fsubrl jne cs and lods jmp iret mov test mov inc mov sub mov fnstenv pop scas call jae fildl pop outsl xchg or lret ror movsb xchg pop push lock mov rep sbb cmpl lcall je pop pop mov sub jb push decb cmp ja imul mov add and (bad) aad in dec cli cmp fwait or bnd pusha std add je xchg ret and mov jg imul pop jne lea mov cmp push add and adc pop fucomip jge (bad) pop xchg ja out idivb mov jo jge cmp xchg mov test inc dec fsubrs rcrl (bad) cmpsb mov fsubrl je inc sbb test push mov lahf shr mov push pop outsb adc mov hlt out push mov repnz jne xor cmpl jbe mov mov nop or jmp xor inc inc add and jmp mov out dec sahf add jne aas and mov js mov fst bnd push push in cmp ja or jmp jecxz mov mov cwtl pop ds leave push push mov jmp (bad) mov pushf mov outsb mov or je mov or mov adc cmpsl mov je dec jl mov mov lock ret mov mov adc fdivrl pop (bad) clc adc jp pop loopne mov inc iret dec jns mov xchg ret xor and pop cwtl int3 lahf ds or sbb pop daa and ret mov push push push jl mov jbe je lock mov lea push test dec call ror mov jg fistp mov ss data16 add fsubs loopne insl cmp push testb clc dec cld lea or ss jmp dec fisttp cmp jl jmp add sahf jge rol negl adc lea add dec mov lea loope xchg pop aas push xor sbb or jp pop cmc mov mov neg jmp or enter xchg push inc push lods rorb fs decl mov dec mov jmp cmp jne pop pop xor les pop aam mov mov mov mov cs mov repnz cmc rcll push aam adc sbb inc add (bad) jae sbb add pop mov adc jb (bad) mov inc (bad) movsb mov movzwl sub fidivl mov jp push cmp iret lea mov dec out sub adc mov outsl add ja movswl mov add lea jl fstpl sbb call dec imul jmp cmp (bad) cmp dec dec inc dec inc dec lods or dec fstpt (bad) in sub dec aam cld stos or adc jg cmp jl pop sbb stos cmpsb je mov stos neg sbb (bad) std jp stos jmp inc inc mov loop movlps sti inc stos pop pop inc clc dec test jne ss mov (bad) mov sbb adc dec sbb sub (bad) hlt (bad) aas inc add leave mov mov mov fwait sub mov insl cmp cli adc mov mov sub push fcomip pop scas je mov dec mov repz inc test dec je dec jne sbb test stos xor ficompl shr repnz sti add fidivr dec je inc jne pop mov ret xchg je lock repnz or repnz sub mov adc or lea mov (bad) push or inc je push push cmp (bad) fmuls sbb daa inc mov sub or jno pop inc loop inc roll push mov test (bad) lret sub sub and adc in outsb iret sub sub sub xor jnp mov sbb and sub scas sub or pop out repz sub xor fldenv loopne pop dec adc add aam repz (bad) adc mov ret movsb cmp testl ficoml add cmpl add movb jge fldt add ficom aas imul dec and dec push out incl ja fabs push adc pop frndint rcr cmc outsl call scas push fnstsw fwait mov testb je fidivl xor pop fbstp lea mov inc sub nop jnp jecxz shr and add push cmp xor stos mov sbb jle add jns lcall imul pushl jae cmpb jb movb js decb jo lock cmp jmp data16 pusha xor jmp mov cmp inc xor push or mov push shr mov add xchg out cli sbb or fs adc and mov cs or rorl test neg adcl test sub or (bad) fisttp das js adc jl mov cmpsl subl mov or sbb inc loopne push in mov fcmovu insl or jne or loopne cmp mov jecxz setnp jne mov scas das (bad) jne pushf and jne dec sub cmp and inc or ljmp dec adc sub movb cmpb (bad) or or jbe pop jmp mov js push sbb iret inc pop and push pop das sbb sbb jbe jns fwait mov pop add js fldz cmpsb dec mov mov cmp lods or testb jg hlt cmp or out (bad) in or dec and fistpll sub add jp cwtl jne mov sahf mov les add pop jmp mov xor add aas jmp fstpt dec test add dec mov add sbb test insl and push int and mov cmp jae fimull inc jmp mov mov negb add clc dec es push inc imul push cmp (bad) out jb aaa add stos rcrb inc rorb xchg push push cmp fmull push push adc sbb push cwtl fistp mov sub fwait hlt fwait inc addr16 mov shrb sbb aam int3 lods lcall fldt fstpl fwait push push cmp leave (bad) cmp fiaddl popa mov fcmovnb fldl inc jl test sbb mov sahf insl (bad) leave adc mov xor push adc add pop (bad) rcrb cmp out movsb xor fistpl or cmp inc stc inc es sahf jae das fisub add shlb data16 adc sarl adc (bad) or xchg sub pop jg or sbb mov lret movsb dec fistp ret mov xor sbbl cmc mov sub cmp ja hlt push jmp ljmp (bad) jg iret lcall inc jnp adc jge mov pusha push cmp daa xor out adc (bad) and jbe jp out mov roll test adc and mov mov add lods dec rcl mov add (bad) sti pop loop ffreep add std add movsb jg add in aas push lock incb jb jnp adc (bad) ja and jb or jp (bad) mov push sti insb cli (bad) cmp ja adc pop mov add inc dec jne ljmp mov aas cltd idiv imul pop sbb test repnz mov fildl add pusha ret or js jne inc std std xor sbb fnop mov adc (bad) pusha (bad) aaa add rolb lods pop sbb test dec xchg and daa jmp test jg mov insb push insl cmp clc hlt or movsl xor add test inc pusha xor cmp jl jbe or addl add push cmp repnz in (bad) cmpxchg add decw cmpl fisubl cmp fcoms ljmp add add int int3 adc inc inc xchg adc push test fidivrl adc pop enter insb pusha loop adc imul sub stos test fistpll sbb dec xor into hlt and hlt mov outsl addl add decb sbbl scas data16 mov clc (bad) mov enter rorl xchg lods dec sub push or fldt ficomp pop and sbb stos dec movsl sbb adc mov adc push add xlat fstpl lret (bad) mov push xchg and idivl je add push xchg sub rcrl fcmove jge sub sbb cmp cmc (bad) xchg adc in out cwtl xor pop ss pop (bad) xchg ret push or (bad) adc add push jb pusha in int test xor add test nop fldl adc sbb mov pop enter add js mov push cmp test in dec sti je rolb pop imulb hlt out push cmpb jne mov mov push lea or div cltd jp pop test jb inc lcall push in mov ljmp jecxz outsl call mov test cld notb sub inc xor int3 xchg call aas add (bad) repnz push push or inc or stos mov fs dec aas pop and mov lea dec sti lods jmp inc scas je or jne cmpsb add enter imul cmpl sub mov stos call add adc fdivp xor sbb adc fwait xor sbb ja movsl (bad) cs sbb imul in pcmpeqd push iret or xchg in ret out cwtl fldenv adc pop and cmp or clc or jne inc cmpb jne push and ret popa or adc add (bad) add add add sbb pusha fadds jp cltd mov test in loopne incb fsubrl pop incl mov adc jecxz movsb nop sbb push bt or jae pop mov jnp jmp mov mov jnp pause jns mov lahf popf or and mov or cmp jne mov xor data16 ja xchg fisub push mov psubd xchg xor stos cmp push or or pop mov sahf add or cmp iret or je ret push fnstcw lock sub pop mov icebp fs add dec ret jbe mov sti jb add sub jo mov or mov loop mov cltd test les das popf dec sahf into add push lea and pop xchg fmuls enter fcomps loopne mov lock fcoml in inc sub inc jnp xor leave (bad) mov mov add jmp shlb push lahf sbb js (bad) les mov shll dec and mov mov pop mov lds fs lods loope (bad) push cmp cmpsl or push pop jbe push jbe jl push add pop jl jg je mov add push jmp in outsl mov or je or je jmp cmpb dec mov aam and pop call add inc sub adc mov cmp xor mov xor gs pop push call ret jl or dec push data16 or inc adc movsb je call or dec out xor dec fcomip fcoms lea call mov xchg mov sahf and add add in adc xlat adc mov pushf mov jae push and inc xlat push jns add push xchg add jns stc push roll jmp and add outsl cmc xchg jb push cltd (bad) les add inc lret add dec or out ret push (bad) adc jmp adc sahf out call jge mov js enter jbe fidivr push pop mov ja xchg push stos pop daa jmp sbb push test fucomi add mov pop push subb mov loop jb (bad) mov push mov adc dec inc aad cli aam mov dec mov push xor (bad) cmc ja cmovno push dec adc in in popf or adc and adc cs xchg pushf cmp (bad) iret rolb add ret jne or mov and call (bad) mov andb mov ljmp jo aaa adc pop inc out and jg push jmp je push jp in mov or aad push (bad) dec movb push call cmp sub cmp xor jmp mov add das push jbe jo pop inc ljmp mov sarb add sub jae clc ret sti jb outsb sbb cmpxchg ret add vmwrite lcall and mov shlb mov orl pop xor into push sub lret movsb jle popf enter push mov and iret and adc and (bad) jge popa out (bad) stos ret jo fwait pop jl pop in lea add jne incl in mov mov sub jmp sub je dec je sub dec fs jg or push jmp mov jmp push push push es xchg les push inc mov jle fadd scas pop xchg add push std mov scas and divb or pop mov pop call ficomp bound outsl jl loope dec sub aam jb or or jl mov or jne xchg jno movsb inc dec test mov jne cmp jg mov pop or ret sahf incl push (bad) imul add cmpl jle cmp adc pop and out cld gs mov mov fmuls fadds pop lea loopne push jmp cmpsl or sarl and inc out and and push test adc pusha xchg popf xchg mov inc idivb push mov ds and xor xchg fcmovb push fsubl mov dec sub mov adc push mov xlat xchg dec fistp adc sti mov pop test xchg cmp es lods xchg pop stos test jo lahf add sub and pop ljmp in pop jmp adc add (bad) (bad) mov ret push mov and in call mov mov fcmovnu jmp aaa repnz sbb movsb jns jmp pop mov fisub or mov jmp cmpb ja fbstp je stos fsubrs (bad) push test mov pop data16 jnp mov lock add (bad) cmp jle and fs jne cmp add or adc ret ja aas or daa or cmpb rol mov cmp adc fwait pop mov and mov out loop insl in xor cmpb sarl stos push xor (bad) fistpl scas stos add fsubrl fiadd (bad) mov sub fcomps das xor loopne push out dec ret orl and enter aaa gs push push notb add push push cli ljmp iret mov sub lock (bad) mov inc and (bad) jmp js inc rclb xor enter push xchg jle push (bad) and imul inc add xor or and dec cmpsb xchg lret add not iret je orl inc push fadds add or orl push test inc push dec adc aad ret xchg mov jne,pt add add xchg or cmp push add push or pop adcb sahf mov mov div ret fcomip add xor xor xchg cmp sub jl xchg test inc pop out call int3 mov jno data16 lret cltd aam clc aaa jns (bad) mov adc xchg test popa jne dec cltd xor in dec cld bound fst fcomps or sbb fwait jmp sbb pop xchg jle les mov fstp push repz dec push push adc movsl xchg add in add mov sub jb or xchg cmp pop inc xorl cltd pop and mov lea xor orl or xor jg (bad) das fwait push or jns push addl or adc pusha loopne lods xor movsl lcall jle add cmp or leave pop dec push add lods xlat dec pop sbb shr test inc clc cmp push sub ss dec lea dec lret mov xor dec (bad) mov pusha inc lock cmp movl jb sti or shr cmp inc and pop add pusha dec xchg push in or add xor in ss out dec call (bad) jmp sbb or cmc add outsb xor je mov add lock mov inc idiv push jl je xchg cmp pop daa add add or mov fwait js pop jb and bound cmpsl push mov insl orb in lea (bad) imul in pop lods add (bad) rolb es xor cmp ss xorl xchg cmp add fildll (bad) pop pop in paddq pop sbb adc hlt push push push xchg sbb add push inc mov mov xchg jnp fs scas pop jns adc sub or add es test (bad) inc add sub cmpsb sar add mov jmp mov sarl sbb je scas ret add (bad) shrl hlt lcall jo negb rorl rcll cmpsl lea fnsave lods add jg test mov mov fildl mov mov xchg or jmp mov jl mov addl test cwtl xor pop je jne xor and cmp jmp in in pop cmp js mov dec scas in dec cs xor out sbb (bad) xlat add sub and pusha lea icebp xchg jns out sti xor outsb test cld and fcomp aas mov cmpl xor dec lods rcrb aaa ret mov pushf cltd inc out inc pop jmp sub push pop test rolb repz inc (bad) adc in mov jo and or adc clc push push sub pusha fsubs aaa icebp dec adc (bad) lcall subl sarb adc mov and sbbl mov out lods mov xchg and sbb lods jp out loopne add and mov mov push mov sarb jne jl mov stc push imul mov es data16 psubsb push or cmp test or push add enter lock jl and daa call mov dec mov cmp sarb clc inc clc rorl xor test or jge xor push jo adc movsb sub pop mov pop outsl lea adc lods mov xor lods fsts fcmovnbe dec mov or jno push xchg mov dec pop add dec or add dec les test pop adc pop loope fidiv add jnp mov shll test cmc mov jle adc js jmp and or add and dec inc mov push scas push mov sti push jg cmp frstor sbb sbb push push pop or cmpsb sbb ss and mov ja or lock pop pop mov movsb out sbb ljmp sar lret adc ljmp adc sub ljmp xchg cwtl and add inc or shrl jmp mov mov jnp aam mov add sbb subb scas pop or add aam push pop add cmp in int mov in or jge clc push in inc fimul push loopne push cmp repnz xor subl inc dec pop adcl int3 xchg loopne xchg stos insl add push les movsb test movsl xor into xor and das xchg xchg mov cmp lret leave pslld push xor inc xor sub jmp and add mov cmpsb imul cmpsb imul inc push daa movsl je mov or rcrb lods xor pop lret mov mov cld cmpl movaps test jae jecxz jg bound or arpl mov inc js dec sub sub dec mov scas sti loopne or pop mov add fild jnp jae xchg dec jnp or enter loopne fbstp cmp loope sub pop push cmp xchg jb pop sub cwtl mov mov cs add movsb aaa nop daa and jbe ror jb sub adc dec xor cmp pop aad xchg mov xchg mov adc std sub mov stos mov jae cmp cmpsb dec adc mov sbb hlt add mov nop xor sahf dec outsb xchg ret adc push sbb add jp sahf mov lea mov scas adc scas xchg and aaa xchg add les add pop or adc xor test sub gs sahf lahf ret das clc mov adc jge mov mov mov or gs aas in fidivr movb adc push add cmp cmpsb sbb cwtl adc pop inc sub ja jge hlt and adc stos sbb and adc push insb and and ret adcb addr16 lods rorb les adc enter adc andl das add push mov mov cs push adc adc sbbb (bad) cmp cltd jl pcmpeqw cmp loope mov ret or and lock cmp adc and sbb push dec movsb sbb (bad) and add mov or pushf mov and pop dec xor sub sub add xlat add or xchg fdivs fldt mov js pop loop pop call data16 and nop adc add dec or mov and dec jmp dec sbb mov and imulb jb mov sub and ret (bad) jns dec or inc cs add mov jle cmp push lock out and dec add je std in cmpsl jle shrb fstps xorb daa xor ja mov (bad) inc lock adc or or jl pushl jbe in cmp inc sub push inc in lock and roll and inc inc inc jge or lods hlt lret (bad) pusha or (bad) (bad) or sub add xchg sbb hlt jge jl mov and test in dec push lcall adc mov dec mov pop xchg sarb fildll push dec cli test inc mov push test lods jg dec jg xchg or or or and fwait (bad) nop push inc mov mov xchg mov jge pop mov std inc push push les ret sub daa push daa pop das sub (bad) fcomps jb popf add jo add dec sbb or cs push xor ret push ja push loope out pop inc adc inc push jmp inc mov rorl sbb addr16 adc outsb inc inc scas fldl je mov mov xchg dec mov sub call mov mov sub inc mov call ljmp je inc rol (bad) (bad) js jge jb test adc mov add cmp and rolb add adc clc mov daa aaa inc inc inc add cmp dec ret sub cld dec or sarb cli jbe dec sbb das das sarl movsb outsb xor lock adc mov daa mov xchg js bound jg jae adc test inc cwtl jbe xor add nop adc mov inc (bad) jne xchg iret adc jo cmp stc dec push jp sub xor pop out loope mov and mov hlt pop dec js test in push mov ret adc aaa push mov sub jb xchg stos (bad) sbb inc decl sbb lret jne sbb dec or push pop jne ret or pop ja inc or setb or pop fildll movl inc add add sbb dec data16 enter mov push sbb mov mov mov sub mov or cmc add test hlt mov in adc add fisttpll dec mov mov push cmp js je mov sbb fbstp push mov popa mov push lea inc cmp pop jne lea pop daa pushf bound scas movsl out add cmp xchg rorl dec sub dec jne fwait aad jmp add xchg shlb add arpl mov or add out cld sarl mov jne push rcl mov xor in fstpl cmp pushf (bad) lcall xor mov and lods cmp mov popf xorb mov sbb sub jb inc call pop mov (bad) mov cs xchg in in nop add mov mov mov aaa cmove fmull popf je mov and pop jo ds fcomp mov push mov xchg sarb sub in sarb inc xchg adc nop sub mov ljmp or enter fs lds jl and enter aas ret adc (bad) cmp pop hlt mov mov push cld push add popa hlt mov and mov cmp movsb sub dec add inc (bad) adc iret inc call jg or das fs mov fs sti test popa insl pop jp fwait dec jo push and pop fwait and cmp (bad) mov ds push cmp push and add pusha jne adc add push out subl xorl xlat adc daa sub js pop sub shrb push test pushl push mov test pusha cmp adcb push leave dec in dec mov ret cs cs pop dec add daa push out fcom (bad) xor sti test and or add cs push inc inc popa cmpb in push dec lods ret pop mov xor scas aaa mov (bad) cld add cltd lcall cld jp testl or and cmpsb sub cmp pusha jae mov ret test adc jg xlat rorb mov and out mov sbb fcmovnb jmp orb mov xor mov pop jns dec into adc pop jmp push add jmp push inc or aaa not mov xor test pop or push dec and (bad) divl mov gs jo inc js jp call jecxz lock inc sub call dec ret xchg xlat sbb mov xchg lock insb mov push int3 and mov mov sbb inc cmp jne (bad) inc in cli and and test jle adc mov scas mov sbb mov add inc jmp mov xchg mov mov mov scas outsb fdivrl add ljmp jnp cmp orb mov mov xor mov inc or mov mov mov inc mov scas sub cmp (bad) mov add mov rolb xor pop add sub lret cmpl sbbl test sub xor sbb outsb das popl (bad) stos aaa (bad) adc movsb movl sar add lods inc mov adc pop adc sbb fnstenv jne outsb add sub lods sub xchg push push sub inc gs rorb les in test aam std jle (bad) (bad) mov dec xor dec insb fcoms push aaa test cld mov jb out clc mov popa jnp push jnp ja je push mov inc mov mov mov ret mov lea sub sbb mov dec sbb call data16 cmp in aam orb mov clc pop lcall sete incl ret jb popa movsl fnstenv (bad) mov decl cmpl mov (bad) pop pop shr mov xchg mov inc dec inc mov inc or jle adc (bad) cmp or xor inc (bad) add xchg (bad) xor sbb inc dec mov das pusha jle emms aad and lock or dec out lock sbb mov stc rorl nop sub adc inc sub bound mov pop xor in nop jmp lcall add xor addl dec das int and add enter aas dec call cmp push jne cmp out and or sub lret mov dec inc je rol aaa ret (bad) and pop or movsb jae pop out stos xor push je fucomp repz roll and in ret int3 push orl lret pushf data16 cld and push ss repz push fs adc jae mov es xor das dec sub jnp les xchg mov iret cmp add out jns out xchg mov test and mov inc je loopne mov jle push pushf pop mov and inc jle cmp out jns pop push xor sbb mov repz sbb js fnop xlat add push insb xor cs popf cmp or lock mov mov add dec jae and rcrb cs or pop dec fmulp mov call repnz loopne fdiv mov fadds aam ss fmulp xor insb int3 cs enter repnz sub cs mov pushf mov cmp mov mov lods cmpsb jns fmulp or and leave cmp insb cmp cwtl xchg push or mov daa mov jbe cwtl cmp out xlat ss pusha sub nop jae (bad) sbb nop clc dec pop aas fiaddl push mov push cltd cmp mov es adc sub cmp dec in mov cmp les fs adc xor negb repnz jo inc cmpsl jge xor es or mov or cmp inc dec and nop inc push cwtl nop mov and cmp adc sti xor mov aaa or and decl sub adc sub into adc cmpb mov push cmp nop out add in jo add js imul push mov cmp mov rcr add in adc jg movsb xchg faddp mov dec cmpsb lods icebp dec rclb nop or in jb inc pop inc pop enter les mov or cltd jb test (bad) repz sar pop roll and sbbb xchg mov dec aam dec push test adc mov shll sub push jb mov insb test clc and adc jecxz sub stc clc lea outsb test sbb xchg pop mov je mov std test mov and xchg insb lock sbb adc adc xor sbb fcomp call jb (bad) sbb jecxz (bad) pop lods sub nop pop and push inc adc (bad) popa adc pop data16 in xchg mov subl adc push adc call stos nop (bad) lods and daa daa test mov in (bad) mov cld jmp push xchg push adc shlb es mov push cmp mov and dec sub andb cltd fs movsb js add dec es in lods mov cltd fs mov mov cltd fs dec mov dec es mov dec es les fs enter cltd rcrb rcl jb movsb jb loopne lock movsb lock fimull sbb enter dec repnz mov mov and inc dec push mov hlt ds jo sbb sbb cmc and jns or cld fisub dec add outsl je fs jne loopne add fisttpll sbb dec adc outsl fs cld cmp jb pop outsl jb inc insl jo jl (bad) xor jb insl push je pop push or enter rorb mov (bad) jns lcall jae pop dec add mov outsl repnz ja aas test clc inc jp inc dec mov clc mov (bad) xor sbb mov add and pop icebp aam icebp mov (bad) scas push mov pusha mov cmp or (bad) xlat sbb and js cmpsl std add out in add lock jl out sahf mov int3 js (bad) ds out bnd push sbb inc loopne les es push adc dec dec inc shrl cmp addr16 dec mov jae add movsb dec or jmp dec add fdivl inc je add mov mov insb (bad) push lock insb adc inc add es add and shlb (bad) xor pop xor inc and lret cwtl (bad) cwtl xchg out jmp inc popa fidivrl cld inc scas inc cs adc xchg fs pusha fmulp adc adc (bad) sbb adc outsl out and repnz enter ror enter adc popa add iret xor add (bad) sarb adc sbb or insl jo (bad) xchg sbb or xchg addr16 mov sbb and cld (bad) jae push icebp push outsb divb int jno icebp pusha loopne loopne roll movsl (bad) pop arpl jg dec cmp aam sbb jge jbe fsub rorl adc loopne mov (bad) in xor add in repnz lret cmp mov pusha or call inc mov mov dec push in xor loope inc ds (bad) in add sbb xchg mov fstpt leave dec loop aaa test pushf inc push loop loop daa fs xor ficom loop or sub mov in xor js or jg dec adc inc xor jle sbb clc sub pop cmp sub dec je mov or push lcall es dec mov loopne jbe add je inc ss cmp leave testl clc xor fidivl lret clc pop stos scas in in mov fnop mov inc cmp adc in mov sub in in sub sbb js dec call imul call jmp fisubrl pop repnz push mov dec fild mov or lcall adc fcompl jg call xor lods xor in shrb add in mov mov mov repnz aam jmp adc or (bad) ret enter sarl lret iret mov and in adc loopne xor xchg in mov inc jl sub pop decb call add mov add icebp mov xchg cmp je and jecxz jle mov push push repnz mov mov loop sub ja pushf (bad) xchg jne pushf xchg sbb xor test (bad) insl push dec imul imul cld loope add jne inc add (bad) loopne cs add push aam sub adc mov or test int3 xchg pop les push adc je dec cmp out aaa sbb jmp and mov lock jne popf or shrl (bad) push call imul inc (bad) xor test aaa adc imul pop pop adcl (bad) lret inc inc pop sahf jmp inc sbb xchg orl mov dec dec loopne fcomi push dec jnp movsb pop fcompl cwtl mov test sbb (bad) aaa cmp jne add ret push add (bad) xor dec sti xchg xchg (bad) adc or or (bad) pop dec add imul inc inc sub xchg lock inc or adc (bad) sbb xor div and xor and mov xchg jp repnz in arpl push mov or pop jb mov jbe sbb add lods je ret aas leave test fdivs dec hlt (bad) lea sarl nop mov out mov mov aaa jmp sbb adc loopne xchg sub inc in in adc xchg dec call add and movl sub adc pop or adc cmp xchg mov sbb cmp push cld push outsl inc ret outsl cmp xchg pop sub data16 jmp js mov out dec push adc push cwtl xchg inc push add dec fwait cmpsb sub decl push adc lcall hlt jmp sbb push and add dec jmp adc cmp bnd xor inc (bad) adc mov fcom jmp inc add enter sbb inc sub sbb sub pop xor pop dec lock in lock je pop jne push xchg mov mov add or or lahf (bad) (bad) int3 pop fisubl inc add xor enter xchg mov pop outsl test mov imul fisubl fildll cmp insb enter mov in popf cmp mov push mov mov or and add jmp cli adc (bad) iret int3 sar imul es xor out lock push adc inc repnz in lock push imul mov jp mov (bad) xchg mov inc mov and cmp (bad) mov pop (bad) (bad) hlt jae push test jg push jp add call inc xchg pop jo mov xor xchg cmp loopne add and cltd xor fdivrs dec iret xor ds repnz or jl xchg pusha imul es fistl pop add enter cmpb adc jbe add jno push push nop out jg lret pop daa mov sbb mov sub and push (bad) add cmp mov xchg clc aas or movzwl cmp ja test mov sbb pop jbe mov jns fcomi hlt and lock jae pop pop cmp or and es sbb or enter je and sbb dec pusha lods rorl scas movswl insb or es xor and push mov sub fistl mov leave rolb lock flds pushl add clc fistl call and xchg je cs jo or fadds in push fsubl and fcmovu add fnop movsbl pop adc mov es shlb pop inc sarb dec pusha and hlt call push enter sti lea cltd fmull pop cmp push in test sub incl dec je jmp sbb shrb sarb test add and inc push mov test sub iret jnp repz mov std and lret fwait imulb pop repnz outsl push sbb repz imul jecxz mov sbb or aaa cmp flds mov inc fnsave mov xlat xchg pushf je lods lods cmp sbb mov jo pop shlb xor movsb and pusha inc out popf movsb mov test pushf cmp pushf cwtl mov cmp sbb xor stos xchg jno dec rcll aaa nop je cmp dec mov fsubrl sub rcrb insb jl jl push mov mov mov mov cmpsl inc mov cmp dec imul pushfw xor mov mov add mov push jmp scas xchg hlt or ret in dec aaa test iret pop hlt jne test xor enter (bad) (bad) hlt in call hlt loopne xor inc rcl cwtl cmc sbb dec inc in push jne inc dec jb cmc out rclb mov popa ret cmc cmp sbb loopne dec loope daa pop nop dec push push pop cmpsb in push cli cli xor mulb test shl sbb notl pop mov mov push ds pop pop push je cmp repz nop stos leave xchg adc push ljmp push cmp or push xor insb xor es and push inc push stos or add es cmp in in ret jno aaa dec xor mov jnp aaa imul xor fstp aaa insb lcall aam xor dec or rcl mov test jno loopne pop adcb add insb enter xor cmp rolb aaa sti xor inc cli pop mov imul inc out cltd mov mov cmp test push loop dec clc cmp sbb shrb xor xchg mov mov aaa aaa mov mov int3 xorl xchg jne (bad) es cmp aaa mov popa test test pusha ret movsb aaa movsb pop rorb mov jno cmp nop dec pop jno cmp mov aaa cwtl jno lods or aaa outsl movsb jecxz icebp aaa dec mov lock cmp lret cltd aaa in mov test sti mov inc jmp rol test sbb and int3 loopne xchg jb mov sarb pop push (bad) xor or ret lock or inc xor mov jmp movw or push mov pop push xor jne xchg add inc mov and pop outsl and or adcl outsb adc pop into jb xlat scas sub pop or data16 pop push add js in shrb mov cmp mov push outsl dec xchg add stc call cld cmpl jb lods dec add mov sub mov insl jo jns or aas dec rcr pop (bad) and popa adc and fisubl xor dec stc jb inc push ds add (bad) decl inc outsl jne xchg jb outsb arpl pop or and dec pusha xchg and adc xchg rcl pop xchg jg sbbl or jl arpl (bad) xor iret push sbbl inc aaa or cmp xchg daa adc ss push clc sub dec add adc (bad) sti and dec xchg test lds test xlat es sub xchg lahf inc sti pop push jbe and mov aam lds (bad) das jmp lea iret mov cmp jl cld stc and xchg dec pop jne jg mov cmp or sbb pop sub or sbb xchg mov test in or nop xchg outsl and cmp sbb test pop xchg pop xlat scas in mov xchg repnz outsb jns and jmp push gs push ljmp hlt add mov jle sahf out sub sbb sahf push pushl xor push mov jne push addr16 outsl mov or int3 dec aad int ret aas fmuls ja mov hlt cwtl cmp jle inc aam pushl fsubrl xchg dec xchg out loopne ljmp and push fisttpl aam lds or jmp jecxz adc icebp xchg pop ja push loop test cmp je outsb (bad) mov loop adc repnz xchg ret jg sbb mov pop repz adc div (bad) imul inc hlt out pop (bad) call ret mov (bad) addl mov and sub push or adc ret movsb or xchg dec fmull sbb pusha loop inc cs dec add xchg and inc decl adc popa mov sbb test repz mov scas das jmp xchg jle push (bad) les push push xchg jo fist xlat rorl inc jg add jo (bad) mov cltd add pmullw push mov adc test incl pop sbb (bad) out push test aas xchg dec or cmp or jbe sub push adc push xchg cld rcrb fmul add jns xchg sti outsb outsl dec sub mov lahf jno add mov mov fnstenv sbb (bad) and movl xchg daa lock sbb js lock cmpsb add pop and daa mov fsubl jl inc xor inc sbb push enter cmp push jp js ficompl add jo cmpl subl loop loopne push faddl jne xchg nop add sbb and sbb and mov das add sbb jne pop jo arpl or les jecxz push incl lret xor xchg arpl cld lea cli fldcw insl xchg (bad) les fldenv pop jns sub out inc (bad) or mov loope and js mov cltd pop imul hlt ss out gs cld sbb push jmp mov xchg lret sub cmp jo lds push loopne and cmpsl xlat lods xchg xchg xchg fldt xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg cwtl cltd xchg xchg xchg xchg lcall xchg sahf lahf addb addl xchg ja icebp add xor xor mov (bad) popl add add add notb lea push push dec dec (bad) push hlt xlat xor dec add adc xchg mov mov push (bad) adc sbb test pop insb jecxz jne sub push cs dec xor push or cmp jle sub ret dec ja push (bad) mov pop imulb js cmp xor test cmp aaa sub lods add dec dec mov idivb fmuls or or mov and cmpsb fisttpl pop outsb sbb mov dec jl or cmpb mov mov cmp je mov and sbb inc add and jmp jle in rcll outsb je jmp cmp sbb test (bad) fistp jp dec jne notl cmp aas pop je in or lar pop mov push adc ja and jmp call jmp jle mov cmp (bad) fcoml cld push add add adc and or movsbl push pop push jle xchg pop mov push aaa mov in ds pop in push push adc setle mov mov cmpb ja jb add add decl (bad) out mov mov loope add or mov rorl sahf push lea adc ret mov call dec lcall cmp inc pop mov or lods cmp lcall and add les pop loope test loopne sub or push sub aaa mov jle mov xor test mov xlat lcall mov pop pop cltd sbb push jle dec sbb xchg or adc or repz or (bad) stc add sbb js push hlt dec xchg mov sbb push or movl mov push lret test push jp mov jge or stc pop jmp inc clc lds jne pusha enter jecxz lea dec cmp (bad) xchg add push lret add mov cld add mov adc or adc lods test add daa mov movb adc test faddl jnp cmp push aaa sbb inc or xchg jge mov ljmp insl or sbb fstl hlt dec dec call add fsubs adc or cmp or inc cwtl (bad) and pop lret add ss pop pop jge cmpsb fildl mov scas cmp add or insl jecxz repz cwtl lods (bad) loopne push inc (bad) fsts nop outsl lret push out sub fstpl in dec push fistpll pop (bad) sarb xor sub jmp std xadd push xor and popl jmp adc or jmp or inc loopne sbb inc fstpt adcl pop (bad) aaa loopne fidivr js jno pushl pop add add call js dec sbb mov pop or insl add sbb and pop mov enter adc dec or dec add fildll lret (bad) jg jbe fnstcw sti fxch inc cmpl mov fs xor mov inc fwait or sub sbb xchg pop popa xchg cmpsl fimull inc pop mov inc cmp outsl pop push push ja jb inc and (bad) adc xchg or inc sbb inc sub sbb jg add push inc insb imul lret clc sbb mull into dec gs popa lods mov jns sbb push lcall inc insb popa (bad) leave negl nop je gs xchg add mov pushf dec or inc imul fs out lods push outsl sbbl sbb adc in roll sub push sbb insb jns jns mov inc xchg (bad) pop jmp pop ss push mov je or jb or ss std mulb fs adc dec sub and pusha test or jae xlat add push dec decl and gs add imul jns xchg wbinvd aaa out sbb or dec gs sbb jae je cltd sbb cmpsl outsb lds je mov (bad) or insl mov adc or push fsubs and xor rcr out adc add xlat shrb sub shrb leave inc mov or mov inc inc and xor int3 push repnz ds jmp mov mov dec push pop mov lods outsb mov scas ds xchg fbld or and push bnd and fimull enter pop pop js adc idivb repz scas rcl sub ficom in and inc sbb nop sub mov adc mov pop in arpl mov push into dec imul dec and or adc add push pop push mov or subl mov cwtl rdpmc xchg add push mov push mov mov fisttpl arpl push adc xchg ds adc inc adc es pop inc mov rclb cld dec mov mov dec mov push cmp add push add adc aas adc scas pop and loopne or push in insl pop mov scas ds inc dec dec push cmp mov push shr scas xchg xorl ficoml lock push or add mov (bad) mov push add lods mov test ret or or fbld fidivrl xor sub int3 adc aad popf xlat jbe push sub outsl sub fnsave inc adc inc push in pop (bad) shl rclb je sarb arpl add inc mov adc adc jecxz out sbb pop xor lock dec push adc dec pushl push leave jae fs jo lds xor pushf jae push rclb sahf cmpsb xor and sti into pushf mov push subl add addl daa js inc xlat cmp stos int3 jle mov push inc dec mov add dec pop sub iret jno pop push jbe ss out in xor aam push enter inc dec imul fs xchg push call adc xchg test sbb sbb inc mov and dec ds test inc jmp push or (bad) inc rcrb bound xchg aas je pop fs adc xchg pop push sbb inc push push js adcb xchg int hlt push push push and pusha push aam outsl xchg push clc jbe push pop mov push xchg xor push sbb push pop jnp mov push jl int3 jle mov scas xor pushf push add adc and cmp por add xlat jl addb and jo loop dec (bad) mov sub push pop push cs idivb or pop sbb aaa cmp add xchg or cwtl sbb push pop push jl sub cmp test push or xchg pop lods arpl xor push leave sub mov out negb fs sub sahf mov xor js pushl sbb (bad) add loopne sbb dec sbb js out nop cmpsl divl pop inc movsb pop xlat repz divl and lods pop daa mov in jnp scas xchg pusha (bad) out add cmp (bad) dec inc mov int jb pop in push sbb maxps fisttpl andps and in or enter or adc enter sbb sbbb and rcl mov add xchg inc xchg in in stos and repz pushf adc repz repz or iret jae push orl cs (bad) pop mov ficom cmp add push pop shlb jl mov movsb (bad) out sahf mov movsl inc icebp dec pop sbbb mov shll aas or pop cmp push das xchg and xchg adc push fs bound push scas jle repz scas (bad) loopne bnd or inc push mov cmp pushf push rolb lahf (bad) mov in shrb push loopne mov inc (bad) ja push and jo sub gs dec and ret push ds pop and sti mov push data16 xchg inc jns push ljmp decl call rcll stos mov xchg sbb xchg movsb rorl out fsub lea or inc aam mov insb int3 movsl or push mov in inc add pop sbb inc (bad) int dec (bad) inc push in ljmp sar sub mov and push inc push inc and outsl sbb out bound pushf inc inc xchg inc mov das das clc cwtl rcrb fdivr fidivr jle call xchg or mov adc jmp cmp (bad) sti lcall idiv idiv cmc push push dec jnp (bad) repnz push incl cmp lods mov (bad) (bad) mov push mov push sbbb lds push or gs shlb mov jl nop xor inc (bad) jge push (bad) flds add cmp or scas jle (bad) pop add lock imul lcall adc mov sub inc pop xlat xchg pop push arpl je cmp jo fidivr mov xchg pop and mov mov mov ds push and into repz sub inc and mov push aaa sub sbb and imul sub dec dec orl or in push inc mov mov add dec inc loopne data16 push push insl dec push push cmp push loop fldt gs xchg (bad) dec orl sub cmp jne add je test cltd mov hlt and xor negb loopne add jb jne (bad) dec es pavgb sub or or and scas jg (bad) punpcklbw xor push mov dec (bad) xor sarb xlat bound je jb push ss dec je decb inc and jmp adc lds sub rorb je add push mov add or movsb divb push sub sub fcmovnu push xchg sbb and jmp pop push popa jae outsb jmp mov pop mov pop fild mov movsl inc nop cmp popf movsb add movsl sub fs pop sbbl inc add inc mov xorl inc jmp nop sbb loope dec lcall mov dec or mov add addr16 mov jge xchg inc rorb bound call push jnp scas imul and pop sbb pop push fimul pop mov xchg les cwtl jne (bad) push inc or (bad) (bad) (bad) fsubs jne inc or push xchg jb and and sub and cmp hlt xchg add jo add in mov push sub xchg lock inc mov sbb pop cmp dec repnz inc sbb add inc pop adc ljmp add sub nop fistpll arpl inc js add fadd das or outsl inc cmp push xchg (bad) and clc jecxz adc push repnz sub mov fstp pusha add addl lds imul fsubrs dec imul inc and je (bad) fsubrp jo adc imul xchg sbb icebp cmp pop icebp sbb adc mov es add push (bad) or pop dec lcall mov das fisub pusha fcmovbe cmp sub loope adc lds push lea dec dec mov jmp or jl inc push cli cmpsl push inc dec jne (bad) mov adc xchg mov inc js repnz push (bad) mov push rolb nop or xchg jbe sahf jmp adc dec outsb imul popf inc add xchg xor mov aas sub cmpsl dec pop add pop outsl dec (bad) mov and inc insl jb sub fldl xchg fucomip adc rorb xor loopne jl xor push inc notl mov mov jns xor cmp jl outsl mov inc push call leave arpl je or cmpb mov imul icebp cmp fidivl ficoml call fistpll jecxz (bad) (bad) dec call pusha shrb pop int3 movd mul mov adc push add sbbl int sbb out test adc xor es into (bad) hlt jnp sbb in int rclb lock (bad) mov mov pop mov xor push push jp mov ja xchg push lret mov mov mov sbb xchg pushf or mov lahf cli ss pop inc add pop das inc inc popa or jae (bad) or and xor xor pop leave enter pop mov ja sbb rolb xchg push rolb jb andb jmp jno subl jae cmp mov outsb pop cwtl in test mov mov mov and push aas loope (bad) sbb imul xchg das push sub or fwait pop add das sub and cmpsl or xor mov xor addl add pop sti js movsb xlat xchg xor jp add ja roll jg dec loope sbb mov push xor jno jo test popf cld out dec sbb xchg add adcb enter dec push repnz xor sbb jmp push je mov mov xor shll xor fildll fcom cltd mov cmp idivb das ss and fisubl into mov imul enter mov cmpsb in mov adc test test cmp ds xor xchg pop cmp push jg cmp jo mov addr16 add xor inc or or or push ljmp jecxz out mov xor adc hlt pop xchg fdivl adc loopne leave (bad) xor jp inc pop popa and cmp add or cmpsb mov cmp fstpl imul js sub xlat mov test add lea aam jecxz add xchg cld mov jmp ret rolb and loope in test push sub inc xchg call add sbb sbb inc movl out add jl pop nop lcall rcr mov sub pusha mov mov ja xor sub les cmp lahf pop mov or or call fildl jecxz add cmp dec dec adc xor and cli xchg adc dec pusha jl (bad) sahf push mov mov sub das jnp pop xchg dec push xor cwtl sbb popf push je pushf xor pop sbb mov (bad) mov xchg aam sub add mov nop daa dec and test fimul add outsb rorb jl aas shlb xlat arpl hlt mov jl insb mov out roll push xor dec icebp pop loope pop and mov push movsl cs or cmpl dec outsb or mov mov ds cld add aaa xor cli (bad) cld aam xor cmp je test adc mov xchg cmp into pop sub push hlt cmc cld pop add or in lock les dec addr16 pop jns lods mov sti pop rclb and in mov adc mov (bad) xchg and nop loopne inc push std sbb adc mov push add mov ror into das xor aas add sbb push (bad) dec idivl add cs sbb mov pop (bad) cmp sub jae loop inc adc ljmp int3 or leave mov fs fldl xchg or and testb adc sub das xchg inc lods inc mov inc sub std sub decl and or push idivl shl loop adc or notl cmc mov icebp mov or push inc test out rol push mov jl adc aaa addr16 jns inc outsb xchg and repnz dec cmp mov into test enter cmp xchg aam or popa jo dec int sbb fmuls or and cmp adc push fcom test jmp lock aas add mov aad pop sub add dec or add adc jne mov jne leave rcll std or xchg pop jle add jno sbb inc or pop jg add push hlt jecxz ljmp mov cmpsl test test mov cmp divb call mov add rolb mov add rcll rcll scas pop cmpl (bad) shl das push add and push fsubs in jns ss sbb lock or pop (bad) inc dec mov add test (bad) adc sub jg dec and daa xor dec dec inc add test cmp mov popl cs inc mov shlb dec pop clc pop (bad) call roll adc inc push emms or inc pusha icebp push sub push inc (bad) jmp pop add and adc lds cmp or cli inc jne sub jne lds adc or inc fist dec sbb inc (bad) loopne xchg movsl pop das aaa or and add fadd lds pop adc fild pop movsb add shr inc pusha or xchg mov mov rcr movsl sub outsb mov fisttp add xor mov nop ret cmp dec int3 ljmp add dec sbb call out je adc ss rcrl sbb cmp mov push nop push mov mov mov push mov cmp adc fsubs or and (bad) pop push cmp jae dec or je stos adc jp in ret btr push add mov jbe jp and push inc adc jmp lea dec jno rorb inc dec (bad) int3 pop add push fsubrp in mov xor or shrb jg pop ja and bt jb ja sbb ret pushl jmp inc cmp jne inc decl jne les and dec and pop dec push fadds jl xchg xor ret imul aaa in push aas ds add lock ds inc mov test mov add mov ljmp inc inc insl in aas add test out imul les and inc cmp sbb mov mov or xor or push (bad) adc or cmp pushl js inc xor jne inc adc xchg aaa pop loopne daa sub repnz adc push and sbb pop sbb pop (bad) jg mov jp leave add xchg xchg add inc xor or mov cmp or aam or fdivrl cmpsb fbstp jne cmp sbb mov repnz or imull pop or mov lret stc pop jns push sub and out pop shrl add in je jbe scas popa adc scas xchg sbb mov fcomps loope (bad) dec and sbb inc xchg pop enter inc add in xchg out xor sub clc icebp lock xor jb adc sub call sub sbb fiadd enter cmp in mov pushf mov xchg or and jno dec mov mov dec mov cmpb inc mov mov dec jae aaa push mov adc pop push push pop pop lcall inc and sub mov mov or inc and inc ja dec or sub ja divl daa daa (bad) dec clc rcll repz adc jecxz dec cltd push mov sub sub inc les push jecxz push aad push adc pop fidivr outsl sub mov les push mov (bad) jae push dec (bad) mov loopne cmp (bad) sub (bad) xor xor or fdivrs enter push pop in xchg ds push in sbb sbb inc rcll popa (bad) mov out xor ret xor sub mov jns out xor inc and les xor iret lds push inc lret inc cmpsl mov lock mov inc xchg xor or shlb hlt adc mov sbb fstpt (bad) sbb clc test inc and xchg inc xchg lock gs fistl xchg mov xchg mov push out test adc sub push add dec (bad) repnz mov sbb mov fstpt inc dec mov pop dec xor lea sbb xchg jp mov adc (bad) push push inc lret dec insl test push mov fucomp cmp fwait pop call mov call popf rol and cmp xchg or out cmc adc in cs loopne add or (bad) xchg inc push inc insl mov push mov mov cmp pop push cs aam ss mov push test sbb jne inc mov pop and lret hlt mov adc push cmpsb add clc lret jne inc hlt inc clc sub rolb xor or cmp fcoml sbb dec push push cld pop and ja sbb cmp and dec mov addr16 and mov inc mov insb or das call or cmp jo into and xchg fwait and sbb sete or movsb xchg es jae movsb clc les fildll lods dec in sbb dec and push pop cmp push out or pop mov mov push or shr loope pop xor push lret sbb cmpsb pop das or mov or test dec inc jb dec pop pop in pusha in clc clc sbb scas push and incl sub lea push push add loopne jg pop sub pop and dec jo cli pop enter (bad) pusha jno pop xor cmpb enter bound scas add fs movsb in repnz dec cmp push inc lret aaa popa fild jmp loope adc dec sahf sbb adc les les push push nop xlat mov movsl adc and js in and dec push inc faddp add mov scas daa dec testl xor ja js dec inc mov adc adc add mov dec test jb push fmuls pop (bad) (bad) mov outsb xchg adc xchg imul jecxz (bad) aas daa sbb pop pop dec sbb cmp bound cwtl push add (bad) std test push mov decl fs jmp push pop mov fdiv mov inc scas mov inc or je or lret xchg cmc mov sub or and movsl fldcw jne or add and push dec and mov sub daa cwtl movsb shll enter sub inc inc add and movsb adc notl (bad) hlt pushl cld loop mov lods and or lods xchg aaa iret sbb xor das dec push mov mov sbb xor push push mov in call pop push push je add pop push jl out aas testb cmp pop mov cmp jne testb orb or or pop and movaps ficoml test inc dec insb dec lahf push adc or std iret cmp xchg sub mov sub dec adc loope sahf into cs xchg mov add push dec push es push dec cmc sbb ss cmp xor mov mov ret xlat sbb fisubl data16 fcmovnu add (bad) xchg (bad) enter aaa sub sub adc int faddl xchg test and adc pusha int push add sub xchg jmp pusha mull pop lea cmp stos mov sbb adc or or mov pop pop ficoml jge dec leave iret push sub jo insb movsb mov push or dec inc dec rorb mov mov (bad) test pop pop pop pop add add inc mov mov dec jnp and adc cmp je jg mov xchg jnp (bad) jmp mov mov movl add sbb cmp xlat dec je add repz rorl or push loopne dec (bad) out push pop jp ss jmp mov xor aam add jle (bad) push sbb repnz in repnz adc add (bad) mov xor (bad) or es fidiv scas cmp mov test sbb push mov adc add gs pop and add test mov sbb sub popf iret cmpsl add ljmp xor orb nop jmp shll and (bad) xor (bad) dec push fisubr fnstcw in loope (bad) jl repz push aad adc dec nop pop xor subl andl jne add shr mov or insb inc sub lea push dec (bad) (bad) inc daa cmpl pushl cmp jne mov or or sbb dec inc jge sbb jle dec pushf pop push int pop inc mov adc jl mov add add lcall adc jbe nop add and rorl inc push pop or shll mov lret or enter js js sbb mov inc push jge or jle xor nop and dec out inc addb adc jo mov push mov inc mov pusha invd pushf jle pop (bad) xor arpl decb pop add rclb pop (bad) xlat and repz aaa insl ret jno dec sub fnsetpm(287 add mov fidivl cmpsl loope insb (bad) out push clc sub sub cmpl xorb add add jbe and pop push sahf movsl pop outsl mov mov add pop dec mov add lock arpl pop testl push mov dec jecxz xchg rcrb outsl lret cli add pusha testl cmp mov jg add pop pop mov bound xor push out enter cmpsl clc jecxz and lret lods je add inc push or sub mov adc pop leave sub rolb adc pop in imul adc xorl xchg ss jg pop pop or repz pop xor int inc or sbb ds push sbb packsswb icebp or push jl add add or out pusha mov negl add fbld mov pop cmp xchg inc popa sahf add rcrb xor add js das lds mov stc dec sbb into cld mov push dec xchg pop push mov cmp mov mov in shlb mov xchg mov add insb and push xor rorb push shrb in or test xlat pop clc adc fbld sub sti mov dec dec jno lea (bad) and clc pushl cmp jns sbb jo add and nop and xchg pop in inc in push push sub (bad) jg jl push dec test (bad) je mov xor cmp loope,pn imul or mov push faddl in and push cli cmc movsb xchg xor mov (bad) pop and test dec faddl mov jno cmp inc dec add in xor mov add addb enter nop testb insb jge enter es (bad) or xor and je adc movsb fsubrl inc jb into or add (bad) jo cmova or or aam inc sub mov push jo mov jae sub ficom cmp and test rclb inc into aas jae xchg jp jne iret data16 cld or dec or adc in out add sbb mov adc push and pop dec dec scas and dec out or lock clc xlat ss movsl inc sub cmp test out pop ljmp or (bad) pop popa adc and add sar cmp jge data16 sbb popa mov add or adc add test test inc sub xchg icebp ficom jne push fdivrs inc push adc adc lods cmp daa adc or imul add push adc rorb mov shll adc or cmp xor sbb (bad) in cmp jle or fldl sub test adc add popf xor mov and mov jnp jns add rcpps cwtl (bad) pop pop or xchg div xor (bad) jecxz and mov cmpsl cwtl pop ja or icebp inc (bad) popa mov clc fidivl jno adc cli jae inc stos add and (bad) and pop mov adc or call cmp pop (bad) jp jge dec sbb or or xor lods and adc dec xor inc gs mov negl test add int aam push orps (bad) enter popa push enter in test fdivrl or jb xchg arpl cwtl pop dec xorl push xor xchg and pop into pop add out xor adc cmp and ret pop add add mov pop adc push test pop add ss ret mov (bad) pop or stos mov movl xchg pop mov outsb sahf pushf or adc (bad) mov js ret hlt (bad) out clc pop inc xor mov and mov movsb add adc pop lahf (bad) jg or outsl jo imul mov push imul test sbb test xor mov xchg ret nop mov add adc pop mov lea test adc and daa pusha add ss ja fisubr push loopne fs sbb call sub mov mov jb push inc sbb imul insb mov push lret clc inc fiadd (bad) (bad) int3 ret cmpsb fbld dec and cs add add sub rolb mov (bad) and or add xor daa std sbb add dec leave fwait add dec pop gs sbb mov jmp mov sbb add addr16 into adc inc mov push cmp cmp dec pop movsb sbb add stc jp sub sub popa gs sbb adc les push ljmp shr push and fcmovu js jl inc sub outsw adc mov cltd mov add mov pop fwait adcb (bad) xchg outsb mov clc xor (bad) call add mov adc adc les xchg test ret sbb shrl jbe loope pop (bad) jecxz xor sub pop ss sub inc push push rclb cmp sub call pop fwait cli sbb popa jg jmp aaa mov inc cmp jl or and in inc cwtl mov loop sbb ficoml fs andl dec mov addr16 jae lea jge fs pushf movsl adc add aaa mov push inc mov push or sub (bad) orb cmp mov fstl pop cmp add xchg mov xchg inc push scas dec je inc pop jb inc (bad) sub sub add xlat dec (bad) or into testl xor mov aaa pop pop shlb pop mov or mov repnz push (bad) add pop add mov xchg outsl orl pushw jo leave ret test add loope lea out js cmp inc mov adc jns ret xlat les jle cmc push jo pop sub jo ficom add adc pop aad call jo jnp mov icebp cmpsl mov push jb dec mov pusha adcb jnp adc ds test lods inc mov stos cmpl js adc xchg sbb xchg push add xchg pop adc pop cmp push je hlt aaa stos addl test js cmp push (bad) mov pop or insl aas loop test arpl pop jmp push or push inc lret rcrb jp call sarb pop addr16 add fwait cmp cmp lock jecxz shr mov inc addr16 cltd push (bad) cmpsb sbb orb ret iret add sbb inc fldcw inc cs jne push mov jne add out push enter sarl push out inc xchg adc inc xchg shrl push mov sub (bad) call jo xchg sbb fdivrs or mov test sbb cmpl inc inc in inc loope xor movsl (bad) xor pop xor leave xor test xlat movsl inc jmp outsl cmp dec push mov insb cmp in outsl pop aam movsb pop mov and adc push push rorb add sub push xlat es js out cmp push ja nop ret add sub sbb call or lods test inc xor mov add push mov add int fbld cmp xor loopne nop pusha cmp push mov mov je ds and popa mov sbbb imul mov and movsl push sbb or bound sub ret jmp lcall add mov push mov cwtl dec pop stos pop (bad) jbe ja mov test fnstenv push sub push or dec mov mov cld std add clc or jne pop mov or adc loopne rcrb xor fistpll aaa adc outsb push cmp dec jle adc mov fildl outsl and scas (bad) mov int outsl sarl test popf jne or xor test arpl jae imul and jmp imul dec fwait cmp and imul mov or mov xchg icebp daa push push or repnz and and or sbb das mov dec pop shll je mov inc push adc mov (bad) pop cmp push add les out cmpsl xchg clc dec ljmp es pop push pop add jge decl dec add cwtl mov or pushf fs xor divl fucomi shlb sub int3 ret pop sbb mov jne cltd lock inc sub cmpsb add cmp cmp clc pop dec pop jmp push or aas pushf pusha lock test in imul jp sbb jae sub movsl sbb push adc sub scas add adc cmp inc ret and mov sub lock int fsincos loope xchg jo imul push xor push into pusha or in out pop iret push pop mov dec sbb adc addl imul or or and push mov xor pop das movsl mov push and in iret cmp jl popa adc or pop cld adc call xchg pop dec add pop in xor (bad) lret or je in pusha repz or jne in mov pop lahf jae jns test sub adc leave add fdivs mov adc mov sbb sub inc sub pusha sub xchg daa fsubs push lock jmp adc inc testl push mov jne in sub fcoml sbb fcomps mov lods dec (bad) (bad) jge push mulb or arpl pop jmp popa jo ss add aad cmp mov shll adc pop push mov in in out mov pop popf jne bound cmp add iret dec add jbe sbb inc sbb fwait add jbe jae inc mov adc pusha rcr lcall fisttp dec loope cmp fnsave in inc adc xor (bad) mov cltd pop aam aaa cmpsb adc test xor jp jne and or pop (bad) hlt nop aaa or cmp rcr sub fdivs (bad) out and dec lock cld adc fisttpll rorb add pop push push dec xlat test dec lea xchg xor add addr16 data16 pop rclb xor insl and xlat adc jmp cmp adc mov inc test iret sub dec lcall sub jns push ss cld imul js and jge popa sub and arpl pop sbb mov clc adc sub xchg in push add mov dec sbb loope mov cmp outsb jp mov or fildll push or adc js nop xchg gs hlt (bad) add frndint cmp add sbb add pop jb lock and and push mov fist call sub cmp adc mov push add or mov out or sahf mov add or or and mov mov or sbb lods sub push out and or incb ret add inc loopne sbb pop shrb inc cmp xor iret and das sbb dec cli mov iret adc pop aad loopne inc aas inc ret lahf shlb jnp jle test mov and ss push or and aas xorl mov int push adc mov pushf sbb cmp ret mov insl sqrtps sti out ja insl mov fisttpl loopne lahf mov mov and cmp sbb push mov mov popf mov fcompl jp popf fcoms jnp dec lods (bad) sbb dec fadd leave adc dec add adc and jl and shr in arpl (bad) lea sbb mov add in mov cmc xor dec dec inc push fsubrl pushf cmp stos pop jnp dec cmpsl xor aad test cmp mov cmp mov into or dec jge push push add inc das lea xor jl jmp mov push add das or and sti orl cmpb jne xor cli nop xlat sub mov cmp sarl out hlt adc call out push xchg std (bad) sahf pop pop cmpb mov jo inc jp dec sub clc or inc jmp sbb rcrl push adc lock outsb cld jmp mov cld pusha rcl lock mov add popa adc lds xor push cmovs dec push dec xor adc mov out js and jnp inc enter push jge inc test std fadds add push or popf (bad) call rorb lods jb push and stos daa mov add sbb test lock in pop mov repnz fstl mov fldenv lahf push pop jg mov arpl sbb orl fdivrs mov add nop repnz or and out xchg adcb (bad) repz sbb sbb jge pop pop xor dec clc out and jno dec push stc jle adc adc call push jo mov sbb or nop add xor inc inc daa add sub pusha mov clc jnp je cmp inc call std orl mov test aam jns (bad) push sbb mov out jnp rolb inc daa cwtl push movsb fsubs jmp mull push ret jns cmc sbb push jno xor enterw rolb loope lods lcall sbb cmp mov dec mov subb in mov cmp fsubl movsb cmp fmull arpl in cli sub add pushf and cmp push adc xchg push xor shrb pop add push sbb cmp and mov xchg loopne pop xchg mulb cld test gs adc lcall addr16 xchg mov aaa inc jnp push fnstsw pop insl inc cmp fistl aas loope pop xor jmp adc and fcoml scas dec enter sbb adc push out jmp jmp inc push jge sub sub jne jno loop (bad) imul mov push and ds mov xchg inc xor jae and push (bad) mov add fcomp scas arpl imul movsl lock dec and sbb in xchg push test out lret rorb dec cmp jp sub js add push fstl lods add cmp aad jmp mov fdivl jne sbb daa jmp sub lar rorb mov add les loopne sbbl mov pop push and je jge jbe movl je std pop je cmp xor adc mov sbb cmpsl jmp (bad) dec xlat jecxz adc sub enter pop lds add xor das xchg ret aam test testb in cmp push mov or mov fwait aam lock arpl push fistp dec je sbb in jecxz fsubs xchg dec jmp adc jb testl mov pop sub dec or push mov das nop hlt push cs mov inc mov movsb addr16 (bad) push inc or lea dec adc add or clc or mov mov jg loopne stos ret jmp lds add dec push mov and aad cmp and ss pop ret mov fwait sbb rolb (bad) or movsl negb notl add jo sub mov adc jmp aas and push je push adc mov dec push test sbb jb mov xchg sub in jg inc jb jae mov push pop or movsl int3 cmpsl sbb pop jmp jae rcrl jmp push xor or xor add dec or mov cmp xchg mov (bad) ret cmp adc mov out call mov call ja add ja mov xchg lock dec add outsl sub jg xchg push popl out adc add je lahf fisttpl and scas xor push scas cmp leave push bnd das pusha repz jo or mov test out mov push sub xchg mov dec lock cld push push and xor fsts insb cmp repz jp adcl repz push jecxz pop lret nop dec jp pop adc jb inc xor add xchg mov pop mov and xchg jmp das jle out pop push adc push (bad) mov rcrb pusha adc stos dec leave and mov loop in das cmp xchg cld xor adc ja hlt mov inc imulb test dec dec sub call and pop ds jo lock mov out jmp rclb test inc lea mov inc sub pop lock lods xchg out sbb mov aad dec inc xchg jo sbb or aad es inc inc dec xchg sbbb out jnp inc push call cmp jge insl or gs mov xor jg mov loopne push (bad) push (bad) iret rclb aaa add mov shlb push or inc ret pop add inc call push xor mov add add int cltd lea mov sbb push inc sbb jns sbb (bad) enter test pusha adc aam xor sarl mov loopne enter leave pop jno sar das je jle pop and cmp pop push sub mov or adc ss jg js (bad) dec cmpsl push in dec (bad) mov adc or inc sub pop and test and cli inc bound out mov add sahf enter mov aam add and sbb call push lods enter clc sbb pop cwtl dec lock fldt int3 lret loopne dec movsb jae mov popa daa loope jg jl jo inc cmp pop push clc inc and mov orb clc stc dec or and call or insb or ljmp aas mov sub aas sbb xor add mov sbb (bad) dec sti fidivr and xor cmp mov pop cld pop out jns (bad) addr16 movsb push iret pop dec inc adc cs repz cmpl rorb mov jmp push sbb rclb es xchg test pusha sbb mov lods and inc clc xor jmp std (bad) sbb cld jmp clc in cmpsl nop daa pop sub push dec test mov jb pop lea cld shlb shl cmp or pop loop cmp mov loopne mov in je xor dec or dec adc ret sub lods inc or inc dec int3 (bad) fsts add dec mov push pushw xchg mov loope push mov data16 dec jmp fs ret mov (bad) adc das jle jl xor jg sbb adc add insb or ds mov jl adc insl dec xor sbb mov jbe dec cmpsb mov imul (bad) cmpsl nop rclb das rcrb lahf jge mov xchg call dec fisttp or add add mov (bad) aaa or pop insb and (bad) mov daa dec xchg or xchg xchg ret icebp out js sbb (bad) push lock fcompl rcrl push mov push negl xor and cmp les fistl dec (bad) mov pop test imul pop out dec rorb cmp je sbb xchg sub test and xchg shr add movsl daa xor mov outsb xchg push push push cmp dec lea (bad) imul xor mov cmpsb mov movsl daa loopne pop dec and popa xchg sub add sbb ljmp or cmp in mov mov mov movsl loopne and nop rolb imul dec jno push xchg lahf jne mov and jle mov mov and shrb cmp xchg xor les jne inc mov shr sub mov sub or mov inc sbb xor mov cmp adc (bad) xlat iret add xchg movsb popa mov loope mov sbbl adc ret fdivl pop mov or fcompl jg cmp je sub dec pop xchg and or dec insl pop or sbb inc dec lock sti xchg dec sbb xchg cmc rolb mov jp iret rcrb daa sbb mov sbb fnsetpm(287 scas push sbb ja add adc pop add mov rcrb or pop adc dec push lds adc test sbb adc lahf jnp push testb (bad) and mov pop mov scas hlt dec data16 adc sbb push orb lock push (bad) jbe sti clc aam add mov int data16 jo sarb mov mov mov mov adc sub aam shrb movsb cltd cmp orl inc push cltd clc push adc mov or inc xchg adc sbb pop test pop stos adc cmp roll test and mov cmpsl (bad) lcall xlat and pusha fcoml dec and cmp jl test jge incl cwtl and imul push push fisttp ret jo push setne mov mov push (bad) inc mov out incb adc icebp dec and lahf insb add push outsl jo ja out and pop fisttp or sub arpl imul mov inc notl arpl mov push decb data16 push inc xchg lret scas bts pushl jbe sti dec jne cmp pop call daa call movsl pop xchg test call dec mov or push push lret or or push lea lcall data16 add inc pop dec fist sbb jg or dec mov sbb (bad) mov jo and sbb pop push inc dec jne inc ss rcrb mov or fnop outsl clc stc insb add dec push pop and sar mov ljmp (bad) stos sahf xchg jnp or dec mov pusha fisttp scas das (bad) adc add iret add pusha xor cmpsl xchg outsl add fs mov subb leave aas adc xor push fs push or test mov push push dec cmp (bad) xlat sub gs pop jp dec ret lock xlat clc add pop add aam dec in data16 andb jmp roll sbb jl inc push loopne ja and lea (bad) ljmp or add mov mov divl mov nop sub add cmp das dec and fcmovbe cmpxchg mov push or pushf jg subb xchg cmp and (bad) daa icebp and and fcmovnbe (bad) mull jg mov imul jne es jne scas mov and adc adcb inc and enter jle inc and lcall mov xchg and aas or dec nop sub or or test push pop out inc aam nop or nop adc mov ljmp inc nop dec push mov out xchg cmp lock insb sub (bad) repz sub cmpsl (bad) cld mov pop pop inc sub or or add (bad) in frstor clc pop pop outsl pop and add inc sub xlat insl jmp or cli iret sub ja pop inc lret out inc push pop movl jle mov cwtl sub or ja stos inc mov sub push sub arpl mov repnz pop dec sbb aaa or dec cmp cltd or not or inc je dec push out or pop xchg jge sub adc out add jmp popa sub xor push loop adc int3 or push push sbb dec add es fmulp call call scas in pop adc dec push xor add mov mov push shlb add sub and in adc cs inc jle inc addl adc and cmpsb inc mov xchg xchg btc add xorb dec mov lea xor pop or imul test in test sbb dec lock add iret inc sub out xor push xor jle inc inc or xor or es xor adc fs inc add mov xchg pop scas and xchg test xchg in loope mov push adc dec xor add lret int3 lds mov inc cli push pop iret movl popf movsb movl mov mov in ret movsb orl adc and xchg sbb outsb inc lret add clc jne sub xchg or mov dec cmp pop mov sbb jle aaa ja jle mov cld push ds jb jo or fwait or sti pop je pop scas adcl adc and and jl push loopne pop or sub push add sub pop ljmp push and pop push scas out sub adcl (bad) mov sbb push (bad) mov popf (bad) cld ja dec int cs insb cld and push sbb add test call cmp (bad) adc in rcll lds lds ret movsb lea pop pop ret xlat jmp mov ficompl mov in push aam daa aam sub sub cmc xchg je movl mov xor or sbb or xor fs mov (bad) arpl fildl mov xchg dec (bad) clc das leave pop pop push push add add call movsl and pop mov fs xor add stos add adc inc or add adc cmp cmp push test insb push xor lock inc arpl clc mov and in pmuludq push mov ffreep xor pop or add sti ja add pop or lea jge mov add cmp fcmovnbe out and mov push cmp or mov push or in xor xchg jge adc xor inc ret push pop jp cmc sbb addr16 add jle mov and gs cmp and push jl mov jbe pop jle mov pop inc pop inc insb push mov push xor push cmpsl pop cmpsb pop add mov or mov push cmp test add adc xchg push outsb imul push cld push xchg xchg mov jge iret cld push lret stc jo sbb push inc cmp addl enter test jge bound (bad) movb arpl fildll orl xor ja mov in push jmp mov call and push test enter pop loope sub add cltd push test adc mov mov pusha cmp push ja add sub pusha mov ret mov aad xchg ret sub daa daa daa popf jnp daa daa daa (bad) jo jb daa daa daa jae jne daa daa daa daa ja jns daa daa daa daa jnp jge daa daa daa daa jg popa bound daa daa daa arpl daa daa daa daa addr16 daa daa imul daa daa daa outsl push push push daa daa daa daa push push push push daa daa daa daa push pop pop pop daa daa daa daa pop pop pop pop daa daa daa daa pop inc inc inc daa daa daa daa inc inc inc inc daa daa daa daa inc dec dec dec daa daa daa daa dec dec dec dec daa daa daa daa dec xor xor daa daa daa xor cmp jns mov subb xor add xchg insb outsl adc or popf roll push (bad) add ret dec dec add push mov adc dec lods mov mov push xor dec add lods test inc sbb std xchg out push xor insb add dec cmp data16 dec imul fwait jae mov fild lret or outsb nop rcrb or orl je jbe and (bad) push je insb clc cmp adc jae lret push insb enterw je arpl adc fsub or adc gs arpl adc imul jae mov insb or shrb bound push outsb int in mov pop jo outsl sbb in mov jae add sbb or add add inc jl or imul dec aaa add jmp sbb sbb inc insb mov push push push je into insl dec outsl jo mov push push inc jns sbb mov aam addr16 and mov imul adc xor sbb xor aas add loopne xor loope or adc scas add jb fimull fs fiaddl add dec lods push jno jl jp or push jne fisubl inc inc xor mov inc outsl jb jae and or sub mov push pop cmp inc push sbb (bad) mov pop mov std (bad) cmp jle dec and aad mov mov cmpb fdivs pop subb aas addr16 ret sub and inc arpl mov cmpsl inc xchg insl mulb add pop leave and push es loopne mov xchg adc (bad) loopne shrb jl mov lret je add mov sbb mov and enter (bad) lock or (bad) int3 lds push add adcl ss aas out cmp dec fisubrl mov and xchg push add int3 cmp jmp push ss push add imul sub daa in addb lds mov mov xchg pop xchg push or push ficom add mov xchg in rol add sbbl lret lret bound js add xor cmc xchg add inc (bad) xor cmp adc aas mov les add push inc je push shll pop xchg push add xor insl fstpl push push cmp js in (bad) add add mov or xlat movsl lods into les add jp xchg pop pop pop daa ds test cwtl int3 aad test scas inc popa sbb das mov pop sbb call sbb mov imul daa and pop aas (bad) xlat push int3 push or push jbe dec or add pop xor adc in imul les in scas mov and sbb push movsb inc sbb fdivrl iret imul stos sub mov mov iret lret mov es into rorb dec or mov inc cs les sahf imul xor sub fs fcmovnb inc push dec jmp ljmp jmp in push in jae addr16 fs bswap int3 pop fadd (bad) fisub pop js sarb pop sbb enter clc xchg xchg lods mov add inc push mov enter hlt sbb or push xchg gs insl popa addr16 or mov outsl mov push pusha mov push loopne (bad) icebp loop mov mov jo insb js push sub out pop fdivrl cmp cmp mov jg cmp inc incl add test fnclex mov push call xor push sub mull dec aam sub push dec cld mov cmp adc push mov xchg call push pop sbb add pop xor (bad) nop adc (bad) hlt xlat out rolb push dec arpl mov mov and rcrl inc pop push xlat inc aas out or cld sub inc xlat jns inc ja push xlat rcrb enter jo faddl pop inc xchg sti mov cs sbb push xor or dec pop sbb cmp adc pop nop pushf mov (bad) ds push xor add mov and dec popa outsb nop add clc decl rorl rol xor dec jne push or loopne mov adcl loopne cwtl inc popa dec pop aaa test nopl out (bad) aaa dec jne mov lea jl shrb and add add adc dec ret je adc test popl xchg orb jp lds imul inc and sub add push adc add adc loopne xchg push inc cmp push dec or inc pop mov sbb pop xor or fmuls in mov jecxz imul xor xor mov lds mov mov jo loope dec sete popa (bad) sub cmp jo hlt dec cmp mov imull fisttp loopne sub shld test jmp push mov push push and cmp cmp pusha pusha and (bad) je (bad) loopne in std xlat cmp fisubl pop xor movsb mov add pop inc sbb inc push dec cmpsb or pop or stos movl (bad) adc cmp repz lock adc or cmpsl and jnp frstor add jns mov or in aas add mov push xlat insl pushf add xchg or lds in (bad) in jg mov ret mov loopne adc fistl (bad) push cmpsl or inc add or push call pop daa mov pop add or jb mov xorb pop sti or pop dec insb sbb push xchg dec decb jbe add jo add push gs insb pop xchg sarl cwtl ss imul ja cmpsb xchg add dec imul lret in rcrl or cld inc incb arpl imul inc js,pt pop pop or or add push imul and insl inc dec data16 add aaa inc dec mov das pfnacc (bad) inc popa fistp jo or push imul das jo icebp loop push addr16 (bad) sti inc das inc je inc push xchg dec notb or adc or add jg mov je or sub push sti adc mov fs lahf sbb jae jge dec inc pop or push sbb mulps push or jg gs mov repz adc mov (bad) pop adc imul aas outsw inc push (bad) and pop outsb jne adc or insb and repnz bswap or pusha sbb aas jne leave jno arpl add clc xor shrl rorb cmp and das test mov or sahf jge andb or push pop cld cmc xor and pop xor lahf or add mov mov loope lods jns pop pop addr16 inc dec push dec pop inc dec inc push push inc push add inc arpl inc inc inc inc push dec push xor inc dec rcrl mov arpl inc inc push sub dec dec inc push dec dec push mov and inc inc push xchg inc dec dec and es pop out inc inc xor xor adc or jbe mov xor xchg inc push inc inc dec notl mov sub dec mov imul push (bad) das sbb mov xor push push push jae adc test mov aas inc inc dec pop adc push push push dec jg push ret push inc scas dec inc dec push mov insl sbb inc pop (bad) mov mov inc add lock jl mov push into push jl push add sbb std data16 enter add dec or sbbb add add push inc or pop mov lea cmpl mov lods popf sbb inc or dec sbb insb lret or jle and inc data16 add add or jle mov dec pushl shlb fmuls mov daa and pop cmp shr mov sbb lcall adcb bound and mov mov and ds inc add loope add pop push loop pop or push mov push dec nop popa xchg arpl popa ret das cs or add xchg stos inc adc xorl jne dec fsts push stc mov push inc in clc pop mov repnz scas das sbb andb das cmp mov loopne jo cli das cwtl add movsl ss scas pusha xchg sub int3 das mov arpl enter or rclb or inc ret mov jg mov jbe cmpsb add mov add push (bad) inc adc or adc cmpsb xor and jbe xor dec out movsl adc xchg dec push pop repnz enter mov testb movl fnstcw xor inc lret enter inc aam add or outsl pop sbb mov adc lea incb ret mov mov cmp mov movaps leave jb jmp jo in xorl add fcoms sub flds jecxz push mov jg or or fisttpl jp cmp push push or adc orl sub dec pop out out andl mov adc loope repz movsl dec or ss mov adc js lock push mov push inc pusha (bad) popa movsb mul pop (bad) adc or pushl aam inc lea (bad) mov lock pop sub (bad) jbe sub (bad) pushf mov mov push push xor mov test fdivrs int mov das fdivp ficoml inc sbb mov mov ja sub ret pop (bad) xchg push cmp and push movb outsb inc sbb cmp xchg pop fisubrl adc sub loopne push mov (bad) pop shlb sbb add fdivr mov mov das lret cmp add mov fwait or inc lret andb add leave test rclb das jns lock je jo iret in push mov add jne fistpll lretw jne int3 mov sbb mov inc adcb mov inc sbb xor das ror pop jmp insl lret faddl xor or and fsubr push cmp and xor das sbb mov lods pusha jb or pop sbb sbb pop jb movsl or movsb loopne loopne pusha pop xorl int3 lret int3 vpmacssww sub test jno int3 lcall movsb mov nop cmp push pop aas popa int sbb add push xor mov mov mov sbb les inc mov fsubrs mov add or mov ja lock adc inc call cltd into fistpll test pop fldenv or data16 insb das movsb add adc fs mov mull adc mov sub jmp je cmp add push adc out ficomp gs repnz int3 mov mov aas mov enter popa inc stos fimul in add xchg je (bad) nop pop enter mov js (bad) hlt mov add or push cmp mov push adc inc inc sub movl js test ret int3 push test mov (bad) (bad) sbb (bad) pushf mov cmc push adc cmp mov pushf mov nop pop jge and lock adc ljmp test sbb and push or push adc mov pop or or mov push push or push push gs xchg add push jl sbb sub inc lea aas in (bad) xor and popa in jo aas mov roll (bad) mov shrl inc popf dec insb test fs and lods sub sbb cld imul dec jae pop sbb adc (bad) inc lahf pop je mov in enter push int3 test and imulb jge push xchg xchg (bad) ret insl push les or bound sar push sbb lea int3 fiaddl inc (bad) mov shrb mov add pop je push xchg dec roll pop push mov ja or iret sti out adcb cmove testb je push std dec iret mov pop add jge cmp pusha leave scas fwait xlat cs arpl push jle jle test ret lods inc add addr16 xor push jne mov arpl xlat pop inc outsl cmpsb mov adc or clc lods sbb add (bad) jbe mov fcmovnb lds xor pop pop test icebp push add cmp mov inc cmp insl sub cmpl xchg push add sub int xchg aas aam popa cmp decl xlat leave dec mov loopne (bad) out mov and sbb adc and sahf aas push mov mov adc cs and pop adc adc cmc push adc inc sub es lea xchg mov jb jge dec lds cmp jge mov ja jae (bad) std or mov and mov cmp je mov dec xchg sbb pushf pop aad mov mov add add sbb inc push add push or es test add test add arpl (bad) mov adc lea push mov clc mov not and mov je fcmovnb mov je inc xor movsb jne sub xor nop (bad) jo fistl push add in xchg callw sbb mov fs mov add push xor inc push mov out fdivrl push adc push in adc sbb pop push sbb lods lea test jnp mov sub add ror add rclb mov outsb je xor sti (bad) in ror ds jno mov negl lods inc add movsb stos in test pushf xor jb or inc add orl inc mov adc mov inc push ret shlb push xorl dec call adc mov cld das lea pop xorl inc add aaa scas rcll ljmp dec popa nop and add int3 es fisubl (bad) fsts imul lods inc in lcall sub loope cmovnp jo jmp add test mov pop mov cmc fwait or pusha loop jo aam pop cld fcompl mov bound push push cmp mov xchg cmpsl pop hlt sub fcomps in sahf ss lock jle das data16 push out pop push jl or mov arpl adc fldt mov ss aaa add notb mov fwait add lea add cmpsb mov pop inc pop pop in loopne dec idiv outsl adc xor not and lahf pop sar pop dec jle out mov mov mov add cmp imul sub add jae out add cmp sub xchg adc stc mov mov xor push push or imul sub lcall packuswb rcrl sbb subb pop inc pop xor cmpsb fdivrl or fstl jge xlat inc xchg lock mov xchg (bad) ficom cmpsl sbb and fsubr fsubrs push sub dec jmp clc js fstpt pop push in dec sub adc add cmp push das push jo mov in (bad) push dec fs push push ret bound pop mov add jns rcll loopne xchg movsb mov call add bsr pop cmpl test add inc push sbb or mov sti xchg lea add mov mov or dec pop sarl mov mov add dec (bad) sbb inc add lea fnstcw cmp adc dec out es push cmp sahf lcall mov pusha lcall add jne insl andb cmp jge jbe (bad) adc adc adc sbb insl mov push sub (bad) cmp sbb add jp test dec js and outsl push push and insb mov enter mov dec mulb jmp add (bad) mov sub shl mov mov jmp xor sldt adc int3 xchg cld push mov (bad) mov sbb in outsl jns push jno lock jl jnp jnp or pushf cmpl int aaa out push ds sub inc daa movsb imul movzwl lea and pop push cmp cs xchg xchg dec jnp push addr16 data16 iret popa inc fild ja (bad) icebp push add aas insb cmp cmp (bad) jo push xchg adc sbb add add (bad) orl push pop cs mov fldl inc rcr frstor mov lods xor loopne pop mov sbb test dec pop cmp int3 mov add pop push push dec clc xchg adc inc or or shll sar ss and adc dec mov pop push adc pushf scas lret mov pop imul fldl iret jae jo dec push xchg mov daa or in into and gs xchg or pop push push imul or ss push push stc sub and cmp cmc sahf test inc push adc dec stos bnd sbb (bad) xchg cmpsl dec les shlb rcll les mov add fmulp enter mov xchg add das test sbbl xor cmp shl dec fsubl shrb pop mov daa insb in addl add (bad) cld mov jb in hlt lock and xchg pop fnstsw mov add imul sub out xor js xor mov test pop pushf stos shrl movl mov xor int3 and add pop insb pop cld push push and mov add and dec add loop push sub add pop mov cwtl sub mov sbb or mov insb ret mull mov pop add or pop or mov sbb in pop cmp mov decl and mov (bad) cmp jg test jle mov int3 cmc cmp jl mov enter (bad) jg test pop clc jle movsb xchg pop test or adc xchg push enter pop push pusha push add dec shrb loopne sbb (bad) push ss mov pop mov pusha and repz push stos pusha pop jno nop out fsubs mov andb sbb scas mov test jbe in leave sbb inc vucomisd insb sub test bound xchg lods mov rclb sbb (bad) jne test sub xchg push fs ret xchg jg or jl push cmp cltd mov dec jo call test mov inc dec fs fnstenv cmp add mull xor adc xchg sbb (bad) js ss repnz add push inc and test pop mov add dec mov push mov sbb mov inc cs jbe nop pop cwtl (bad) mov mov insl mov push mov imul mov add xchg lret and xor xor popa pop je sarb add push push mov (bad) mov ret mov and outsl xor mov stos or and rorb aaa repnz pushf arpl pop pop or xchg arpl ljmp lods roll aaa lods int3 lret prefetcht1 push rcrb and aas ljmp out sub sub lret mov pop push out dec xchg loopne push movl push mov fiaddl cmovs push jle lock clc jb jmp xchg push mov out mov push mov jmp adc mov adc insb mov (bad) push xor inc and movsl (bad) add imul push push sub adc data16 icebp mov into adc push xchg leave jne aas cmc mov (bad) xorb or mov add and add sub adc aaa mov rcrl mov mov cmpsb push cwtl (bad) aad fldl xlat xlat hlt and leave adc add adcl aad jnp push push popf sbb insb sar inc ret scas push addr16 mov push sub adc inc jmp (bad) and jnp lods test add mov (bad) jg fwait pop orl inc mov pop cmp enter push sbb adc (bad) push inc jg add sbb sti loope push mov pop push push in hlt movsl jmp xor inc call cmp imul cmp call outsl sbb dec loopne fdivrl add mov faddl loopne dec adc fcmovb inc push xor add lock pop repnz sub mov outsl pop add dec jb iret or xor mov out in mov mov or lods data16 sbb insb mov lods and jp push outsb jle mov mov js add insl mov test mov lcall test loopne stos dec lcall mul xorb int3 sbbl dec es movsb pop aas test movb data16 and negl jmp cmpsl sbb pop push jns loop pop and push inc call or aam sti adc adc xor nop sti add es mov push adc push sub lock jmp inc lret addr16 dec aad popa xchg cmp lock adc sbb add lcall xor xor sbb and je sub insl jne jl shlb int3 iret add push iret in aas clc push cltd fsubs mov push and pop hlt rorb sbb add xchg lret pop jne cmp cmp push cmp push jo mov inc or add mov outsl (bad) cmp mov ja inc and cmpsl inc xchg inc xor push cmp inc enter sbb mov adc push adc xchg or cmp cmpsl pop rcll ret xchg push pop ret pushl rorb imul out pop xor cmp mov dec and add mov mov and mov (bad) push es or jmp movl adc mov add pushf (bad) shlb mov or cmpsl push cmpsl mov add xor ja pusha int3 xor out xor mov add mov mov sbb movsb pushl dec sub cwtl lea xchg in movsb mov imul mov sub outsb cld inc jb push sub cwtl add mov inc push cmpsl sbb push pushf xchg das add test es push out aaa add dec not pop test iret inc lahf shr lock inc loopne dec and adc (bad) xor and loope push pop pop mov inc sub lret and add inc add dec sahf pop sar pop (bad) or xor int3 adc idivb aaa hlt int3 xchg jo and repnz dec pusha loopne jmp and dec jo (bad) pop int3 push and jecxz andl pop pusha push loope nop andl jp push incl pop adcb (bad) icebp or dec add jne sbb in mov adc pop adc push jecxz adc cld dec rolb outsl dec pushf lea and mov aaa or push mov mov pop lcall ret adc test gs lods popa sub push mov jns mov xor or xchg shlb inc lahf shlb pop mov sub mov and lds push test jae sbb sbb test mov lods and push cld rcl xlat (bad) not add adc cmp es fisttp adc movl pop or loopne dec pop add sub mov adc popa pushf cmpsb or out bound loopne mov int (bad) les ret jl sbb adc and and sbb sub pop insb clc push or cmc add gs js dec mov int inc lds lcall fidivl ljmp stc pushf adc fdivr sub mov (bad) loopne fisttpll inc adc add aad or out or pop cwtl adc (bad) out iret aas adc ss aam mov nop sbb faddl int3 imul inc pusha pop cwtl add push pop mov add sub and xchg pop call mov jns ret sbb lea mov test in adc popw and insl inc fisttpl lods ss fistpl int3 test cmpsl push or lcall add or xor decb dec mov cmpsl hlt add pusha stos aad fiadd nop add je xor cmp fs cmp and or out sbb inc mov sub adc adc sub push fsubl jecxz imul loopne sbb inc mov adc leave stos in jne cwtl arpl daa mov cmp outsb cmp cmp jne mov xor test insb lods or xchg add lds jecxz in pop or mov jae sbb mov dec inc sub sbb outsl jg xor push xor or (bad) sbb mov inc xor push mov dec mov lret add adc or gs mov sub adc mov inc jae jnp (bad) lock or pusha add jmp arpl and popf mov xor jmp pop loopne pop jp fisttpll dec gs cmpsb adc push ja xor loopne aaa xor xor dec lcall adc and mov push jno (bad) arpl push inc xchg fwait inc mov dec out cmp loop sbb sub jmp (bad) lods xor mov icebp popa fs or lcall or pop loope and add jo pusha jo mov rorl xor push push das mov mov inc sbb sbb adc jo hlt roll js enter push jecxz and add sbb or sbbb mov addb xor pop out adc sbb (bad) mov adc sub test add pop adc js mov loopne lock dec aas ds pop in cmpsb pop fdivs aaa jno inc jnp jp repnz hlt mov sub sub inc out add adc mov mov lea add push xor adc in sub shlb inc in (bad) mov pop cmpsb lock imul inc cli and mov cmpb out xchg nop lret idiv hlt js sub xchg in popa popa or or lea aaa fsubs push arpl add cmp fisubl fistp mulps (bad) mov sub loope cmpb mov pop sti sub je (bad) repz inc push sbb and push movsb mov pop test shrl adc mov and pop cmp ret mov pushf add sub inc and and cmp jo sub and test es and sbb sub stos std test popa popa and or jns (bad) lods and jmp icebp inc sub push cmpsl movsb or xchg push mov sbb adc test mov imul cmp inc xor mov loopne aam add call or subb cmpsl jo ss in push test mov cld cld or dec call mov (bad) hlt clc add add fsubrs xchg (bad) aas lods push sbb adc cwtl pop and adc mov or fdivl pop and shll xor push nop or push test sbb in call sub inc ret lea js ret pop inc in adc movsb adc and sbb sub and xor sbb mov (bad) movzwl push insl or dec sub scas sar jle loop sarl and lds push paddsb loope cmp push dec push cmp dec push jmp sbb enter add and jl es add sub pop leave insb insb or int3 jne add inc outsb cwtl andb call nop adc dec inc xchg call sbb pop dec inc or inc imul inc sbb pop and push pop mov push fcoml addl dec add (bad) sbb mov ret adc das adc mov popf arpl subl sbb jo out loopne fs xchg addr16 subl rolb pop fadds jnp xorb push clc inc mov cmp fmuls and imul cltd sub (bad) (bad) das xchg sub xor or add adc add clc sbb daa call cli pop fildll pop lcall xor cltd adc inc xor insl pop rorl fldz cwtl inc add jl or adc pop (bad) ficom sbb incl test shr loopne lcall aaa push in sub das (bad) xor or sbb cmp xchg imul out add or ss rorl xor sub ja push loope and cli pop (bad) xor sbb pop sub mov cpuid sbb pop fiadd push jb cmp fist inc sbb int and test rolb pop movl cmpsb or mov into data16 fs adc push cmpb ja jae repnz inc inc icebp jmp mov xchg add cmpsl or mov (bad) aaa iret jne jl mov insb add add xchg or inc mov hlt mov int3 in ja ss dec fcompl pop pop sub add test pop lods (bad) ret jmp inc pop cwtl clc dec mov inc imul xor fcmovb (bad) test lock mov divb adc cmp inc xor push fist (bad) xor xchg sub adc cli mov mov adc mov in dec dec aam call and or loop xor ss mov xor pushf sub cli sub jne push push leave adc sub movsl shlb push sub ljmp push mov add movsb and fistpll sbb adc adc movb or popf stos adc add or jo int3 adc mov arpl rcrl sub scas roll movb icebp das cmpl inc imul jne sti mov out dec jmp enter bnd mov loope lea xchg and or rolb sub jecxz jp (bad) mov (bad) xor dec sub fcoml clc dec test lret adc insb xchg xor dec clc push test inc sub mov pop mov adc cwtl lea loop in mov mov insl pusha add movsl (bad) lock daa lods jne loopne out push ja jp push (bad) pop cmpsl loopne push pusha loopne (bad) pop add ljmp int ffreep fild jp ja (bad) loopne loopne or add sub mov inc mov or inc mov dec pop pop sub or mov mov push sbb cmp or jo rcrl or push shrb dec clc loopne cmp adc shlb push xchg cmp loopne pop and xchg enter push sbb clc lock enter inc dec mov adc enter sbb ja lret mov cmp out pop add (bad) js pusha inc divl dec lods sub ficompl loope mov loopne or call into or je loopne pop sbb sub (bad) pop popf push ljmp out vmovss adc mov adc mov clc sbb sub jp or rorl pushf dec and mov cmp aam adc pop fdivs or xchg xor dec popa xchg push sub (bad) lock inc pcmpeqd call test int imul in ret or bound cmp rorb sbb xor test or lods outsb sub aam addr16 xchg in sub cmp or jbe mov es jne inc sbb mov pop mov mov or mov mov add xchg movb adc or pop adc movsb and push int3 in pop ret rcl xchg mov stos stc dec mov loope fsubs (bad) xor cmp pusha inc in popa mov and xchg or cmp xchg (bad) in mov in out or mov jbe adc adc mov adc fs movsl add push and xchg adc sub movsl cwtl and or enter add jl push andb out in jb add inc xchg ss adc pushf mov fs rorb xlat push aam lds js jg mov push or pop mov movb xchg mov add sbb sub jle sub mov stc int test and push jle fildl sbb inc adc js jo mov cmp xor or cld arpl or imul pushf xor push jae cmp mov scas adc pop bnd fmuls test mov and pusha mov fcomps jmp (bad) push je jp jo mov popa mov cmp test (bad) fadds faddl dec xchg loop push fldl adc sub movups pop decl push jo xchg int sub ja xchg mov lea sahf mulb out dec adc into or adc je nop lea push sbb sbb mov lock test adc add pushf xor and mov sbb aas fiaddl pop lds cmp fimul orl mov push and dec cmp fadd movsl push adc cmp dec sub and rorl cmp cmp inc shl pop add pop loopne and pop movsl rorb adc inc mov lcall insb js lret (bad) jns (bad) jbe pop pop and shll aad sbb and das jp inc mov lret xchg xchg adc test pop iret push nop cmp orb std (bad) or sbb (bad) push leave inc xor nop dec sbb xchg cmp add cmpsb cmpl cmpsb mov and xchg mov cmpsl and out fbstp es lds clc rorb loopne jmp dec pop insb fbstp add jmp sub fwait jge outsb sub or dec (bad) dec sbb push mov or or and or and movsb ja,pt stos ss mov lahf mov add lcall jg adc or in dec sub and xchg iret (bad) (bad) sub xchg dec pop sub fs jbe or push sbb cmp cmp arpl cmp orl mov lods sub sub pop inc and into jo or adc or shll sbb adc sbb lahf test jae movsb jl xor je push in dec cwtl jbe and mov in jge dec jbe mov push add lret lock or lock push loope jle in adc test pop (bad) mov in jmp inc push xor xorl ss jns or mov mov cwtl ret test push push pop xchg (bad) inc sbb cmp mov and and rcr adc ljmp and stos push dec mov jmp jl mov fwait add lods inc addb mov adc cmp movsl sbb push add mov in je inc addr16 mov push aas rol loopne cmpsl push xor lock out pop movb add or cmc iret mov xor mov or in mov mov (bad) mov sti mov popf test ss push pushf jmp dec popf movsb (bad) jl add xor sbb test cmp add adc lahf call inc dec jns fistp stos xor ja punpckhdq dec push inc adc mov (bad) mov push inc nop or mov mov inc pop xor aam mov out add cmp mov jmp mov add mov jl mov mov adc sarl xor mov gs test (bad) or xchg inc or orl inc cmpsl push pop outsl fildl jle sbb adc movb jo xor xchg pop fmul rorb cld lea add lods adc jns cmp sbb add jecxz (bad) pop sub cmovnp pop mov jnp sbb rol stos pop lret cmp mov hlt mov or cmp pop and notl outsl je jo sub add ret fs cltd sbb adc (bad) subl sbb mov jns mov xor inc dec (bad) xor hlt push add add andl or mov (bad) mov daa fisttpll add push pop cmp je push push add jo inc mov nop pop fwait mov mov enter add out dec bound mov jecxz jle adc mov add pop and jnp daa cmpsb scas sahf cmp jo dec or dec mov xor js mov into or sub jne mov mov cmp inc mov mov lcall jb (bad) outsl adcl bound inc pop push or pinsrw add xor push movsb adc iret sub or sub test jo xchg sbb imul in lahf test and int cmp jne push mov sub adcb pop push add xor pop sub loopne and out out es adc and push adc test cmp fwait sbb or aaa mov push test xchg mov mov jo push mov jmp lds xchg mov pushl flds sarl idiv mov fwait dec or inc hlt iret xchg xchg sahf sbb inc cmp cmp popf jmp add lds jo jne loopne dec insl xchg ret enter or add xchg push pop pop leave add pop sbb hlt jecxz inc mov in sbb clc ret aad lret cld sub jl cmp je popa dec mov xadd pop add mov popa stc rcl pop mov icebp or imul int3 es mov andb xor pop fcoms faddl or xchg aam add add les fwait (bad) push gs and mov adc sub sbb pusha js out push push test in (bad) mov roll dec cld adc mov aam pop xchg mov pushf or inc sub les int3 mov (bad) mov add mov xor adc loop mov or (bad) mov and leave mov dec in sahf and mov ret or xor cmp and es mov lods push cmp jg dec insl pusha jmp pop inc push js ja mov ret shrb add ds cmp or pop jno or inc inc sub flds cmp iret inc sarl mov jnp rcr push or adc fs leave inc imul or push sbb push lahf movsb adc cmp mov das popa and lock arpl loopne xchg sbb cmpsl test jne adc add fldt test in ss adcb aas push test push add jne xor dec (bad) and lock cmpsb icebp dec or test xchg rcrb adc inc xsaveopt add sub nop aas outsl sub and and inc push xchg lock push xchg xchg xchg pop movups adc xchg xchg add push clc mov adc aaa cld push clc pmuludq cmp cmp in call cmp fnop aam cmp cmp int3 enter mov hlt gs cmp cmp lds gs adc cmpb dec pushf jbe cmp sub mov test (bad) sub mov or add (bad) stos add sub pop aas rolb dec arpl fwait xchg mov or jo test in imul or out movb add sbb add ja pop or inc imul pop or mov mov push jmp jmp xchg inc adc dec pop mov ljmp insb lods scas (bad) dec adc adc jmp jo nop push nop or sbb jle push arpl and (bad) (bad) pop adc dec adc ret addl jge sbb ja push test and js adcl cmp dec insb add rcrb jle and or in dec jo push popa cmp jle push pop cmp mov sbbb pop pop rol sahf in pop sahf (bad) cmpsl aam pop and and das cld dec add dec call push std daa jmp push sbb shr sub jg ljmp jmp mov sbb push adc inc cmpsb pusha (bad) daa adc scas loope orl push dec dec es add icebp push dec call xor push inc xor sub es sbb lods and lock out pop sarl (bad) aad xchg mov and adc xor nop (bad) lock rcll daa std mov sub cmp push incb shrb jb mov cmp dec jne adcl pop clc cmp lea lea fcomps inc and clc loopne (bad) ds jb push sub mov jge xor dec push lret leave push lock dec inc pop cmpsl and xchg or or add xor stos iret cmpsl es push jns sub push adc cltd and aam scas or movsb push stc in daa cs aaa xor xchg lods add fcoms sbb nop fcomps or test jg inc inc jne mov adc imul clc call adc fdivrs mov cmp ret mov add test ss sub in call jmp ds shrl mov adc push adc cli push adc adc outsb jne ret cwtl (bad) insb popa jns jae mov sbb inc or clc andl repnz mov xlat or es in stc xor adc sub mov push push inc push cmp dec inc into add popf sub dec mov or movsb sub or (bad) das add jle fldl and push loope jle prefetchw bndstx mov lcall jecxz xchg cld mov pop rcll mov pop pop jns cmp inc dec pop fisubr sub sub outsb or jl inc imul xchg movsl frstor adc xor and gs fbld loope add adc xor push and fs xor aam popa test pop dec lret or sbb jnp add sub xor insl add add push (bad) outsb add sbb rorl jo inc jnp cld mov outsl cmp test and add dec inc or sti add movsb push mov sbb adc xor xchg mov aam je mov pushf pusha loopne enter cld jns daa cmp push dec out sahf out sub xchg fwait push pop outsl ja (bad) aam jg ja xor mov jns mov sbb and sbb xchg lea loopne decl imul jo fwait cltd out or fsts sahf aaa cmp cmp mov jp ret das sub pop loopne cmp and scas mov ja enter mov dec mov or bound push dec ret or shrb sub testb lock add movsb lahf mov outsb leave insb fs xchg orl orl testl sbb lahf sbb inc sbb inc mov pop scas inc daa inc xor iret jmp and es mov sbb xchg push out fs sub pop mov test inc jmp flds (bad) adc aam stc mov dec xor (bad) adc hlt xchg dec and sbb pop sub push test dec add push repz sub push jno lahf xchg adc inc cli mov cmp mov idivb pop and prefetcht1 clc or add sbb xchg sub add lahf lock push jl jns pop bound jbe outsb (bad) addl xor (bad) je pop sbb fcoms xor and add in js aam faddl xchg mov or lock pop imul (bad) mov jo je (bad) xor sbb nop rorb cmp hlt jne out in mov adc rolb pop or inc xor sbb push sbb (bad) daa xchg aam dec sbb sub adc loop lods ds mov cltd mov xor push and je (bad) push xor (bad) mov and adc or inc sbb jle dec jne push ljmp rorl dec das or fwait cmp xchg inc xchg je xor pop xchg sbb inc push enter cmp mov inc lea adc cwtl outsb sti cmp pop (bad) das sbb bound rcl arpl mov jo flds adc ret jge pop dec lock sub adc and (bad) xor mov ja mov es nopl add add mov sub xor mov xchg push or inc mov cwtl push jmp scas push mov lcall add in pop inc sub adc add push and mov or jo das fdiv movsl and call scas sbb in sbb fdivrl cmp hlt shll dec lds lea jbe ljmp dec mov loopne pop push jle outsl inc fnop jmp dec in (bad) pushf mov or jno sti test shl fcmove vprotb call or push sbb mov aaa and idiv adc pop inc adc jne jno ljmp inc inc cmpsb jmp xchg lock mov push adc mov sbb test pop rolb call lcall pop (bad) je xchg push cwtl lock fisttpll add and mov fldcw cmpl sbb shll xor orb pop (bad) jne mov xlat push test xchg xchg cmp leave test lock addl xor push stos xor inc pop pop inc push xor pop push orb jmp repz mov sub inc jo aas test nop (bad) fildll add pop aas or inc push cmpsb jecxz cmp cld inc (bad) add sti dec je or icebp pop xor sbb and adc pushf jmp push orl insb ret mov pushf mov nop xchg cmp rol sub pop and lret push dec mov xchg adcl cmp jne sbb mov cmp sbb (bad) and cs out cmpl add lock push pop aam dec ljmp xchg iret xlat cmp jne rcrb jbe in pop cmp sub mov sub into and fs pop repnz cmp lret and sbb leave xchg enter cmp in aam pop push inc push idiv adc fcomps rcrb insb push dec insb push pop sbb (bad) push leave xchg imul dec push jo imul dec jo fs dec push je mov inc cmp sub mov out pop inc cmp mov dec fsubs lret push aam enter xchg dec in push rclb add push cmp push adc add sub cmp pop lock arpl arpl inc cltd xor movsb subl shrb push sub pop inc push adc jae repnz das push and loope outsb cld fcmovu mov ja mov dec das pop add outsl jae lods xchg or daa jg push sub enter pusha jo pusha xorl sarb add jo mov ds lock adc push aas push push push push push popl xchg lock (bad) cmp sbb out andl dec enter sbb adc imul or adc add mov pop outsl dec les cltd movsb mov add shll pop pop inc es push adc or inc xchg enter dec pop das fmul fild lcall push decl lods sub sbb pop mov sbb dec jl test nop xchg mov movsb mov mov mov mov aam mov mov hlt pop mov add mov mov and mov jg sbb push in xor pop (bad) daa mov adc fwait inc adc add loop pop arpl xor add xchg inc ret mov or xchg add enter push movsb xor sbb orb sub test pop movsb xor xchg pushf je mov adcb test push sbb dec gs sub mov sub inc mov inc shrb and dec push push movsb xor pop shrb lret jl inc sub push mov pushf test mov les and dec push push movsb in lock movsb xor xchg hlt adc and xchg push push cld xor adcb dec add push sbb je inc sub adc mov and xchg dec push push and dec sub push movsb xor sub xor xchg inc pushl inc inc fsubrs lds jne sub js push mov pushf add push sbb insb outsl jae mov mov sub and inc push xor pop test fcmovbe aas push popa jb cmp lods xor (bad) daa test je movsl mov dec jne insl mov mov dec imul or fs pop or clc popf dec arpl jae mov push fs mov jno lea or jns jp jae sub inc outsl imul pop pop xorb xor mov push ret pop xchg or or or adc push mov int pop mov or push (bad) loop mov pop iret ds daa fmuls or xor outsb mov sub add cmp (bad) outsb adc mov pop pusha push (bad) in inc (bad) ficom mov (bad) in pop xchg sbb pop pop xchg das jns dec or ja and rcll jns in icebp and xchg jne insl outsb jo mov das pop fs fcomps jo inc imul icebp mov mov inc outsl arpl and xor mov push xchg pop mov add sbb adc adc gs insl add dec fcomip mov outsb les xchg push add and jg jno mov jbe ja adc subl cmpsb add xchg push mov out test cmp mov outsl dec xchg add xchg dec dec jns dec push in orb push mov mov push jmp inc lock in dec jb dec pop sub fs xchg pop or xchg add pop jb push pop and cltd pusha sbbb mov fcmovbe outsl fdivs call mull jo nop push pop jg ss inc nop push mov dec aas dec ja loope icebp test addr16 (bad) adc (bad) jp (bad) js cmpsl jne es push test push push movsb or xchg insl add xchg add sub fiaddl xor jmp or call mov sbb in stos je je pop cmp cmp fs adc or loopne dec dec cmpb test inc push push notb inc inc push dec inc test shll lahf or dec jp or (bad) fcmovnb fs xchg adc test and sub (bad) dec xor cs jl and out out (bad) fiadd adc out xchg jae shrl jo ss testl jbe cld push pushf nop adc mov lods loopne dec dec jbe push xorl mov or inc pop enter ret mov adc pusha adc cmpsb ficoml pop push faddp out pop xor int3 pop xor loop or mov cmpsb lahf push inc or fcmovnbe mov inc and std fs cmp sbb ja fs or and pop adc hlt aaa mov scas add in xchg push adc clc adc sub dec mov xor dec push clc push inc mov xor sar aas ret loop add push or enter push jo loop cltd or adcl or sub cmp out or jb dec adc rolb push push inc mov and and movl loop add movb dec or xor dec adc sbb xor inc cmp test adc iret test ret nop xor cmp jg sbb loope lock rcll cmp cmp out or movsb es mov cs and scas adcl adc test es cmp leave jo (bad) or jge mov pop inc lds cmp test mov aaa or rcrb and pop push out xchg (bad) mov pop pop (bad) cmp adc cltd and clc or inc into adc add (bad) rolb push (bad) in insb call jg pop addb add push dec push rorb push dec (bad) mov (bad) mov cwtl add (bad) push add push sub pop xchg adc fwait cmpsl push adc aaa hlt pop fisttp xchg pushf mov mov sbb cmp dec push push push fbstp test add adc inc outsb iret pusha pusha dec pusha je (bad) mov nop push (bad) sub leave push mov pop mov sbb mov mov dec js fnstcw jecxz dec xchg mov lock xor push stos xchg xor ds cmc mov jne pop mov es and daa jcxz dec sbb (bad) out cs mov adc sbb cmp push jl add hlt push xchg mov movsl adc cld pop add dec sbb mov mov fstps pop or roll test or pop mov jl test testl or push inc cwtl or add stos add (bad) pop movsb lret test lods mov dec lret mov pop add enter test pop jae mov or inc mov mov cwtl loopne aam jo lcall loopne bound push xchg inc xor sbb add test xor fildl pop mov adc xchg nop ret ret add xor enter pop push pop add add dec and xchg push or (bad) call mov sub xor outsb inc xlat popa das popf dec jle pop push outsl pop adc enter and pop pusha mov shrb push mov xor push inc mov push mov (bad) cmp xor sub sub or add push and mov daa or sbb mov xlat pop cmp std insl fs addr16 push (bad) jo fsts mov adc add and arpl mov add mov mov aaa pushf cs iret leave xor inc jl xchg dec nop sar dec sahf xchg mov mov lock test push sbb sbb (bad) and dec mov mov jns inc push lods cmp jo inc dec lea rolb nop add sub push mov push daa outsb add mov or daa icebp (bad) dec jno mov push inc sub xchg xor adc push pushf adc mov mov push lods pop cwtl push push aad fisub push pop les inc loop push out imul testl adc add lock dec es add loopne cmp pop mov jns pop jl xor push xor mov cwtl jo je dec cld inc aaa outsb fs add jl outsl fimull pop dec push je jle jo and inc lahf insl cmp inc fs lods repnz add push sub fistpl rorb inc add pop nop mov mov and fsubrl in push and popa push shrl xchg (bad) mov sarl jl mov mov xchg inc dec insl cmpsb shrb in outsl push subb inc xchg and data16 out rcr fmul ds push jae in pushf insl mov int3 mov movsb movsl push and sarl sub test repnz jne shrb jno ja ret adc inc jge neg (bad) mov ljmp lock sbb or (bad) dec jae lock or icebp push mov into adc push jmp pop sub pop ss push rorl ret inc clc pop (bad) bswap les pop pop les divb cmpsb inc aam jp sub pop xchg imul test inc xorl pusha sbb mov add dec and cld and mov add test mov xchg mov faddl inc test hlt inc mov xchg adc decb adc jne xchg mov das jo rol pusha rolb movsl or cmp and loop dec adc in inc push sbb adc cwtl mov add adc movups fmuls jo push ds adc mov pop and test sbb jae cmp fild mov test xor imul and in insl sbb popa cwtl push mov adc gs cmpsb sbb mov and push push cmpsl xor sub mov inc iret adcb adc rorl xchg (bad) movsl fs into push xlat fisubl aas cmpsl sbb push adcb jae imul gs push test shll ds bound dec je pop inc hlt sbb inc pop ds inc cmpsl sub insb in dec fwait ret jae (bad) sbb dec pop enter pop inc pop cmp mov jno inc adc ss xchg push and cs sbb jo popa pop cmp dec push sub jb mov and cmpl jmp out push dec lret pusha push insb enter jge sbb or in ja int3 out push pop lcall xor (bad) lock pop mov shll pop or xor test bound dec mov sti xchg sbb es roll pusha daa mov in mov jle movsb insl sub push outsl jo jo jns and cwtl cltd cmp cwtl mov lea dec lods jecxz (bad) mov mov dec push mov and mov movsb and sub inc (bad) fiaddl push or mov sub imul push sub sub inc push stos add jae aad jp and push mov pop cs imul stos or das lock lea lahf adc xor push pop xor mov pop fsubl mov jb lds or es dec inc and popa or enter dec sub or mov and fadds dec xor fstl cs dec lock fldl or int3 or dec cli fs inc sbb aaa mov insl rolb bnd je inc fiaddl enter pop cmp inc js mov int3 test inc pop rolb cmp or xchg xor and pop bnd adc cmp daa and push jns and fdivrs stos adc or xchg loopne dec xor mov push jo clc cmp cs clc jo,pt out push jbe addl incl fnstcw xchg mov and adc inc in into movl frstor (bad) test inc push dec adc fnsave aaa cmpb daa rclb xor insb push daa insb orb daa cmp jb into nop into aam ja adc daa mov add inc push mov std pushl daa lcall jns in leave stos and push cwtl outsl inc push xor jg xor add les mov dec insb bound ret test arpl push jns xorl sub bound add loopne stc or nop or or cmp adc fistpl (bad) jne,pt outsb xor xor popf push jb pop adc mov inc leave adc xchg jb push push fisttpl or adcb adc jae adc test mov jae aad nop pop sbb (bad) rclb push sbb rorl jecxz add cs scas pop and and xchg inc nop and mov stos in sub sub or fs sub imul add inc dec dec mov into movsl movsl add inc std add or rolb lods and xchg cmc push ficompl in dec call in not (bad) jnp addr16 add cmp jae dec enter pop faddp in faddl lcall hlt andb mov mov mov aaa popf mov daa loopne dec push jle dec dec rorb pop pop sub mov mov xor push inc inc or out xchg cwtl rolb mov push les cmc enter cmp jle or or push in inc aas or xor inc or insl int nop loope pop xor and or and add jae jge xor aaa outsb (bad) out add push push outsb xor mov jae add sbb gs sbb inc push xchg mov pop xor add push ja enter lods loop push inc or or fwait mov wrmsr push mov pop movsl mov pusha and or cmp xchg or jmp sub dec mov jle or sti and jle mov or bound or shlb rorb sti mov xchg outsl push movsb mov xchg loop or mov mov cmp pop clc ss adc pop pop mov pop pop enter or popa fisttpll inc or add jo aam je xorl test or mov pop xor cmpb sbb data16 in or orl cld jmp int add dec inc or jle mov pop arpl or mov ss dec lret inc or xlat (bad) push shr test jo sbb addr16 pop call push or jmp pop imul adc mov sbb cmpb xchg dec dec inc jo cmp lret sbb je movsl cmp (bad) cmp pop push stos lock into xlat (bad) xchg out popf insb push adc lock (bad) aaa sbbb stos or sti cwtl popa adc stos dec in mov adc in mov das clc adc cmp int3 inc rorb add out shrb stos xor sbb unpcklps or add add mov (bad) jne and dec cld sbb sub (bad) lock jo xchg sbb jbe rcl xor das or mov xlat add movsb push add xchg xchg cmpl into daa mov les mov pop ret aam in sub rcll cli fcmovbe push push out fs inc hlt shrl sub xchg iret inc add mov jb adc push je lret loop mov cmp test jb pop adc nop cmp jecxz mov aas inc mov test xchg adc scas shr cmp xchg lret (bad) sbbb notl push jp and lods fucomip cltd neg mov nop xor les xor push test add pop mov and cmpb add jle mov movb (bad) mov je and mov lea lea (bad) repz pop fisubl jne movsb push iret or jp fwait inc dec in and hlt mov lock add jnp pop (bad) jb xor rorl inc sbb stc scas lods (bad) repz test dec arpl xor inc xchg hlt in enter data16 test js in jns push push xchg sub inc xchg js jmp das add sbb imul in out popa mov fistpll add iret inc (bad) xor sbb jecxz fiadd dec jne shlb inc push mov jmp sbb pop mov cmp daa lahf shrb push in pop out cwtl inc add ffree jnp jl sbb fdivrs add ja insb add jns sub inc cli inc nop xchg pop jns xchg inc pop add add xor (bad) mov add add add mov (bad) hlt pop cli mov push add adc je xor xchg jbe pop sub sbb push xor mov sub icebp push lock jno,pt out or sub sti aam xlat fs std gs pop pop mov or jp sub test inc push push add or mov push jge adc mov pop call mov dec and jae mov adc add adc sub mov push xchg lret movsl pop push add pop sbb int3 adc mov orb adc add sub jne movb bound daa es pop lock mov adc inc nop mov pop (bad) jne jecxz shrl mov mov loope xor push xorl push add cmc negl inc and (bad) leave rclb cmpb repz mov aam jg gs clc sub add jb clc and add and daa (bad) fadds cltd cmp or (bad) xor xchg sbb or jne mov cmp test inc push loop jno pop or into loope and fistp push dec loop movl and test or stos testb std mov sub and dec fidivrl adc insl inc adc mov jae aad shrl insb cltd cmp popa jmp cmp mov rcll push jo pop xor adc (bad) xchg das sub hlt enter xchg subl adc pop fisub scas mov push mov and or dec push insb lods jb stos add and sub xor outsl pop movsb sarb sub pop je stos mov (bad) adc leave or sub dec pop mov sub mov pop lods mov jnp js dec lea insb nop pop jle sub cmp imul test (bad) and sbb jmp mov dec (bad) test (bad) cmp sub and faddp movsl xchg xchg cli add xor jge mov adc mov lcall (bad) inc pop sub cmpsl (bad) push push mov pop in (bad) jge xchg stos shrl inc nop sub dec aam fistpl cmp je ljmp sub ljmp mov fnclex sbb pop in xchg inc dec inc outsb inc outsl push pop jp sahf in sbb lahf clc lds in xchg jp fmulp imul xor mov jecxz insl pop dec fistl je push pop sbb adc roll call pop imul decl ficom aam lock adc xchg ss pop push inc dec aaa nop ja mov (bad) and in ret or (bad) jb jns jbe cmp cmp ds and jb jb and and jb jb es sub jb jb sub sub jb jb cs adc jb jb adc adc jb jb push pop sbb jb jb sbb sbb jb jb push pop add jb jb add add jae jb push pop or subl xor insb jg sahf out decb dec and out sahf out adc or iret sarl and sub lock repz or add jns cmpsl stc clc jle lock sahf out loopne fdivs shrb jns out mov out sahf out mov out sahf nop push jns out js jo push inc pusha cmp sahf out sahf push sub inc sbb out cmp xor sub sahf out and mov sahf out sahf lock or add repz clc jge lock repz xchg mov dec mov das pop sbb je and pop jg (bad) dec pop xchg jne xchg es sbb mov jno sub xor mov orb test movl daa push es push cmp mov pop jle test xchg push fwait movb imul pop xchg cmp inc das cmp sbb mov add mov mov cmp and and or loop push (bad) cmp pop push sarb xchg xor pop push fs fwait cltd out pop je jbe cmp mov inc cmpsb insb aaa es enter cmp adcb mov jb pop sbb mov mov mov ret and pop je pusha sbb mov addr16 enter sahf jle shlb repz add cmp sbb inc les test (bad) enter dec inc push dec scas dec xchg add test mov je xchg mov pop xor mov mov ja mov add aam enter fadd rorb (bad) jbe (bad) pusha xchg test scas pop mov cmp xchg inc test add cmp jns (bad) mov and or mov mov push adc inc push cmpsl or popa je aas test scas xor jb out add imul mov adc xchg stos dec mov imul xlat roll int mov adc sub fmull loopne imul push sbb fsubrl push cmp js ret dec inc inc (bad) fcompl xchg jo,pt lahf out dec pusha mov push adc push shlb dec lods cmp cmp pushf push push mov sub jmp icebp and and xor xor push dec mulb dec imul add rorl movb add arpl mov push push or adc outsl pop mov aas bound pop es aam negl push jb popa or mov bound shrb mov scas gs mov pop addr16 jb divl mov mov arpl mov daa push jg out (bad) jge je outsb insb das je call sbb and outsb cmp daa mov (bad) pop je jo jb arpl testl out lods loope das add or xor cmp push adc sbb and xlat and lock outsb xor mov jne cmp not push add inc push lahf movsb lods movsb pop pop jns mov cs xchg pop das or int3 je movsb cmpl ret aam and and inc add pop std orl dec mov add xchg dec mov js or js push or cmpl mov push inc xchg pusha push insb push ret mov into mov mov mov sub fsubr push jne scas add or dec movsb sbb out icebp sub andnps roll pop push mov xchg nop das adc adc aas nop xchg xor push pop xchg stc add test cmpb dec sbb mov fcmovbe pop mov sub adc mov inc push aaa and fcoms data16 in imul lods cltd adc mov jecxz enter dec and cmp mov add adc lods aam (bad) mov sbb or jmp sbb inc mov and mov es sahf mov push xchg lret pop xor mov push test add sbb push add rolb sbb push rol scas adc pop dec adc sbb add or pop push insb or push mov inc out add (bad) xor roll add jg pop or or or or or or iret repz adc adc repz repz pop sbb sbb aas iret sbb and and fmuls jns cmpsl push (bad) mov sarl cmc push mov sub cmp repz pop insb jge repz repz mov shl cmp jnp hlt add cmp cmp repz push repz mov popa pop or jg fwait in lret and or movsb jb or pop push adc adc dec sub xchg lret or or jb in push or mov sub adc lret dec adc jb in cmp adc inc push inc pop xchg push cs and sbb xchg lret sbb xchg push jmp ja push popa cmpsl push jns imul sub and sub sbb and push add sub es insl sbb les rcll xchg inc add sub fdivl fsubs adc add std push lea bound add pop mov (bad) fiadd test and cmovl add push adc movsb int3 in fsubrs add pop testb mov shl jge jmp inc int3 mov push ja pop iret sbbb mov movsb cmp fdivrs cmpsl lock dec push sub dec int3 sub rcrb jno call mov push js out out jnp adc adc dec mov pop sahf inc and xchg in adc jge and fistpll sbb or cmpsb cmp pop fdivs repnz jno or rolb add push daa push hlt xchg add push dec popa xor lock cmpxchg mov js addr16 sub mov push je add xchg or popa jns test cmp sbb xor add adc fdivs nop mov mov push push jl mov xor sbb jo push clc mov push cmp daa push test fdivrs jg fnstenv test push sub push stos adc jg lret add inc xlat inc test jae cmc imul aad jg leave clc movb adc notb mov mov inc sarl call insb push test flds call rorl fadds push pop pop sub xor xor jno xor push sti mov jo xchg pop clts push stc nop scas pop sbb mov xor daa inc sbb adc in mov and jb add mov adc xchg adc and pop lea adc adc sub dec adc sbb mov push (bad) or gs add inc add sub sbb xor sub nop stos in mov sbb cwtl nop or jp sub ret ret jb fs iret sbb mov movsb dec jmp mov repnz push outsb loopne xor adc and and test and (bad) leave push jo mov mov leave add and outsl or pop xor sub test sub mov inc test js sbb das dec gs jbe orb xor inc push jbe dec fwait cs rcr xchg movsb (bad) mov dec or dec pop insb or jp adcl push dec lods pop add lods inc lods (bad) fnstcw mov scas pop push sarb or pop mov jp add std or fsubrl adc add xchg cmp fild pop imul daa movsb mov pop push fimul pushf adc imul and jbe lea lods add popf pop sub adc xchg pop fcompl and mov loopne pusha insb sahf test outsb or pop sarb js call dec pop or les fcompl push xor mov pop cmpsl pop cmp (bad) adc (bad) mov subl or cmp push fs ds push outsb dec cmp add jns out push push adc push js adc inc in dec fistpl push adc ss fiadd shrb cmp jnp mov pop call pop fist sahf ss cmp lahf or aaa fildl cmp pop and dec or fdiv adc or xchg mov mov mov sti mov dec push lods push shlb lahf out orb out inc mov or jbe xor push pop sub bound dec add and nop push shr sbbb jae inc pop jnp or imul test or adc ss fstps jne push ja mov sahf imul jl cmp xor scas js scas add adc and cmpsb xchg idivb pop cmpb in inc je jmp pop push xchg (bad) scas push mov mov ss push add mov mov decl sub add sldt fisubrl jl push test imul mov adc push pop sub xor (bad) mov jg mov inc add or jmp sbb movl mov mov dec lea xor jl pop jbe into push popa (bad) or pop scas aaa sub dec add jbe dec nop nop or adc and test bound mov pop femms out adc pushf jae dec arpl ljmp leave repz jp adc push aam and dec sbb jbe inc (bad) sub xchg adc adc out adc je and xor add xchg or test sbb dec scas sbb jmp adc inc add and imul test pusha cs test mov inc pop dec insl gs lcall jl pop sub outsl and cld popa cmp add or dec cmp jno int3 xchg jmp mov or pop inc or ficomp (bad) dec ljmp or js outsb addr16 dec and in pop and and add sub test adc inc dec rorl pop push push push gs nop pop jo sub lea movsb sub push push cmp push in mov inc dec out sub xor addb cmp pop imul cs aas or dec mov pop mov xchg jle push dec aaa test pop sti xor cwtl movsb push lret cmp cvtpi2ps test mov lcall test pop adc or mov inc loopne cmpsl ds and xchg call push call xor scas add jle pop dec xchg into jne inc fwait mov inc push test movsl das or adc inc inc pop add test cmp or inc rol dec pop nop shrb lods fiadd push adc ja lahf mov pushf js xchg sub mov push inc push cld out cltd lock lahf cmp rolb addr16 pop push jl jnp sub inc push sbb push cmp push js push mov lods out cmp mov pop or dec sub ficomp lods pop insb push xchg or nop insb mov push xor add or (bad) jmp adc xor orb addr16 loopne or sbb push add cmp add or dec insl js push xchg stos sbb jmp (bad) outsl pop sub mov scas fcompl scas in push push adc push and cmp push sbb pusha push out push or push inc or and adc mov pushl mov std push (bad) push pop incb xor pop roll pop icebp sahf xchg loop inc pop pop sbb jbe aam add data16 out popa cltd sub adc dec push xor jb jmp bound shlb subl mov test adc push jbe rorb mov ja (bad) sub cmp insb sub (bad) shrb jae jne test pop sbb add sub test pop aam and xor inc pop and xchg adcl mov and sbb mov in mov aad stos and leave push daa sub xchg pop sub or enter nop add inc xchg subl xor movq rclb into insb cltd inc or ja cmp arpl out sub push inc adc test push add cmp push enter mov mov push roll test xlat or cmovo pop js xchg decl adc push inc mov (bad) es cmp mov movsb (bad) mov lahf rcrb adc loope mov and (bad) popl sub lds inc icebp nop or mov mov pop add dec movsb sbb mov adc in aaa pop and js jne push and lods lock adc push inc (bad) mov mov or iret loope inc push sbb aad adc xchg or adc add ljmp dec or dec popa aad popf pop stc jns xor (bad) add adc insl pop jne adc mov xchg sbb mov sbb (bad) add sbb pop or fs enter and xchg or and inc movsb pusha mov orl sub cmpsb xchg stos in sub sub cmpsb xchg mov das add xor test xor jg fcmovb or mov outsl hlt ss mov movsb pop add jae adc lret add push insb add mov or push scas je fistl jl popa stos add and sub in or xchg movups or adc dec scas xchg adc push adc adcb std aad add push sbb push inc leave push xor and mov and add adc add add cs nop fwait sub cs add push inc cmpsb xchg xor xor sarb nop sub out cmpl lock ljmp movb add adc loope mulb push jo adc adc xchg and pop adc arpl cmpsl jno imul or test int3 add add pop ja lret or nop (bad) and add cmp push or hlt inc sbb dec pusha mov push pop clc and dec (bad) dec dec (bad) dec loopne inc adc cmp cmp push addr16 push sahf aas add in push add mov adc outsl sub ds adc rolb cmp rorb mov or imul scas lods or push push inc add add mov stos and adc cmp adc cld aaa adc mov inc in add and cmp cmp (bad) imul cli adc adc xchg adc xor or pushf (bad) jmp into outsb bound movsb or pop cmp cmp inc sahf sbb xchg (bad) fnstenv push test sbb sbb or add inc cs sti push adc push int3 lea pusha xor or xchg push int and pop inc inc add or and adc sub sub and es sub push xor and push or sub jo pop lds call nop mov xchg and or rorb xorb mov mov enter cwtl int pusha pushf inc in nop inc fildl add add dec adc push xchg xor pop (bad) lahf pop xor ret lret push mov xor enter inc imul test cld movl dec (bad) out sbb pop mov test push mov xchg xor pop fisttpll and cwtl pop lahf adc in popf insl andl ss mov in adc inc rorb sbb movl out test or push mov mov addb and rcll jnp xor sub inc test test test mov mov je sub or sub pusha pusha fnstenv push cmp fisttpll inc inc jmp sbb imul inc fistl adc xor fcomps xor xchg ret and xchg inc pop (bad) fistp out out test push push push fcmovnbe in push (bad) shll sub loope mov jmp or aam incl push repz pushf aam mov outsl cmp cmp loope das add push movsb movsb add pushf sub mov lods mov popf pusha mov cmp (bad) mov sub dec xchg aam dec mov jo clc inc sbb add in cmp inc add mov fild dec jecxz (bad) je imulb cmp jmp mov add or push mov cs ljmp into ds aas das mov test mov lods and pop sub rcrb push lea lea pop add mov clc dec push jmp adcb sub sub ret push nop xchg sbb inc je cs add push lea jo cmpb mov mov and (bad) dec add enter cli gs add cmp cwtl cld cld mov mov mov pop sub jno dec movl lea mov add add xor add pop daa sbb (bad) stos aam sbb rorb mov inc jbe leave je adc add add xchg jo jb xchg sbb popf and (bad) in pusha or add mov sbb xchg daa icebp jecxz add and test test add dec push sbb jo adc iret cmp jne pcmpeqb jno inc push cmp or jne or add and test and rclb rol ror push inc outsl (bad) xor cmp test jecxz rcrb and inc enter mov xor lods ja or addb pop pop shlb sub xchg add rcll fdivrs pushf outsl mov js inc add es inc daa insb adc sub clc sub scas dec (bad) outsb pop fsubrl stos adc movsb (bad) mov mov or movb pop pop pop and nop addl shlb mov fsubrs out inc and xchg dec sub jo xlat shrl adc (bad) cmpsl sbb xchg lods in push sbb cmp mov adc and in xor or xor xor mov mov mov sub jno mov fdivs enter pop inc js addl jmp dec cwtl add enter in nop inc dec loopne add or sbb or dec push and cmp enter xchg cmpsl je mov cmp inc push cmp lds rclb testb js pop and add mov xor pop pop scas jo add jo mov add and sbb sub jae mov in inc mov aas dec lods cmp mov sub dec mov out lret loopne add adc mov movl xchg xor sbb subl nop ret add fnstenv mov dec jnp add inc mov mov adcb inc les cmp fldenv mul push lock data16 adc cmpsl xchg sbb (bad) push inc and jl cmp push movb call outsb inc xchg sub push movsb mov jne add mov je xor fisttpl fldpi xchg xor (bad) notb push dec sbbl outsl add es add lods mov adcl xchg push popa je stc or fmull dec (bad) loopne loop insl cmpsb pop dec pop fsubl testl cmpsl lods sbb xchg jecxz ja testb and xchg ljmp dec stos xor lods shrb rclb inc dec jbe add pop fsubrl rcr fistl rolb push and mov stos or inc xor stos push adc jo mov pop fmull fbstp dec cmpsb add cmp rolb fcoml testl jnp outsl add or or (bad) cmp pop mov adc jb enter movsb aam test hlt push jo push dec add inc cmp (bad) movl loopne jbe add orl loope loope popf push push sbb mov mov adc adc push pop mov in push pop jo inc lods lea add or mov or mov adc sub dec add aas dec sbbl inc out add cmove aas push inc adc cltd pop or push data16 and sub divl cmp pop movb jns jp ljmp xor jnp cmc jecxz mov es movsl inc inc dec lahf mov and pop or xchg push adc adc jmp ss push mov mov mov push pop jnp sbb dec scas dec pusha add jl push ret cmpl loopne dec cmp ret push adc cmp mov xchg std fcmovnbe into and orl fbld (bad) push inc push test add xchg ret divl gs or jns jne pop or pop outsl mov mov pop sahf andl je inc adc xchg (bad) (bad) mov mov sub jle and mov outsl push mov inc pop jecxz arpl adc mov mov scas inc hlt xor sub je sub inc add jnp add push insb (bad) test and dec sbb mov or les or cmpsl mov sbb call fs pop sub (bad) push roll pop and daa mov push mov test cmp or je hlt push repnz out jecxz cmp mov dec je add and xchg scas lock pop mov dec push mov jl test ret lods sub add imul (bad) mov sub notl adc add fldl mov test mov mov fisubrl pop push call cli ss data16 pop push and push imul mov xchg push in shrl mov cmp push (bad) imul mov cmp je or push popf or jnp pop sub shll stos push lret add cmp inc sbb loope dec inc xchg imul dec out or hlt or bound dec jmp add mov loope cmp or pop xchg mov xor cltd or xlat dec jb cmp cmp mov and jns mov or cmp add mov fwait push xorb ret jmp xor push mov jne ds shlb std or lds rolb gs ja push gs and rolb and inc push cli or ret inc push cs mov aad dec jg mov add dec pusha add push jb outsb add pop add jge pop push ret inc push jge addl outsb inc xor sub pop pop cwtl enter mov jne cmpsb jle in push cwtl adc or or js dec fwait cld adc (bad) mov (bad) dec push and mov cwtl clc add and jnp loopne call je ds popf ja dec data16 xchg push xor xor (bad) popw mov enter xchg and xchg lock aaa dec inc mov test mov pop cmp or pop test or jne int3 (bad) rolb pop mov out sbb mov mov repnz jmp sbb sub fildl popa add and adc shl flds adc pop hlt or xor sbb sbb xchg sbb jmp in in pop leave cmp in or bound jo mov sbb or pop out test sar sub and adc xor sub and inc or mov xlat in outsb dec push jae and push ret cmp shll mov (bad) mov mov inc xor (bad) sub cmp adc mov pushf push lcall fs mov dec sub insb lods sbb ret xor xchg sub add inc outsb divl xor xchg xchg lret mov and cs adc push mov push mov xor dec (bad) xchg cs mov js jo lods fcomps adcl sbb outsl sbb push jnp movsb mov push add test mov dec pop mov add adc lock mov in sbb faddl jns jmp das push imul or loopne mov push mov lods das push roll scas xor jg jge sbb je sbb push jbe sbb gs push fdivr push cmp rol pop dec ss enter jmp shr pop lods dec clts sub mov das (bad) adc orl push adcl js cmp or add int3 fs clc out inc imul pop adc movb out insb add add inc popf adc dec xchg xchg lar pop cmp daa aaa jne cmp fldt cli mov mov jns push mov mov pop pop mov imul or aaa test lock pop mov mov sbb out and decl in in add or inc sbb cmp push shlb jg aad pop add xor pop mov xor cmp hlt pop adc cmpl jbe push jg jge and sub xlat outsb js mov sub jle add mov or imul xchg cld push fldl2t (bad) (bad) cmp push sub insl lcall add imul dec inc aaa fsubp (bad) movsl push andl pop test xor les in test mov jp mov (bad) cmpsl jno adc mov inc or push pushf inc xor push dec lcall lock and movl mov bound push push push or seta adc sub iret sbb outsb call lods mov je clc (bad) popf inc adc xor rclb xchg outsl mov ret xor in and hlt and jno sub push jo test out mov fs cmp fs xchg cmpsl or ret (bad) leave sub jle sub dec push pop mov out mov popa jge orb add push jne push js dec jno sub sarb or sub add call sub jne pusha rclb add vcvttps2dq sahf add sbb iret xchg mov or adc sub call xor pop mov jnp enter xchg clc and daa or (bad) (bad) jo push push sbb nop imul sub sub daa cs loope xchg mov popa inc jmp push adc les movsl les decb adc lahf inc imul mov popa data16 rolb sahf insl cmp test push pushf push movb jno test mov push inc sub jne lret cmp mov (bad) fwait cmp adc cmp test mov pop push jmp je mov cs jge inc adc mov cmp dec push insl ret inc movsl xchg (bad) xchg cli imul cmpl shrb sub test lods loopne mov loop fldl push cltd and adc mov scas push add pop mov lock ret mov xchg pop enter orl mov outsl cmpsl es (bad) int hlt mov lahf jne xchg or dec ss cmp ja push add in cmc dec cld or loop int setne xchg add inc loope lahf movsl leave cmp testl sub or inc sub jl dec addl mov sub dec inc popf mulb ret test icebp insb jge shll sbb push lea cmp popf jbe lds adc ret in mov xchg mov ret or pop mov mov lea sub repnz inc cmpsb mov push pop shrb test call iret add and adc stos mov and fdivrs dec fidivrl push push push sub lret (bad) mov sub in gs lods add adc or movsb dec fmuls (bad) or test dec sbb pop add jle adc pushf push sbb ljmp xchg inc sbb add push push sbb movsl pop push lock out mov xchg shlb mov add cmp call add jecxz aad dec add ss sub adcl adc add int js je pusha pop sub cmpl cwtl int3 je gs and sbb pop push add push pusha movsl push jae xchg adc icebp loop push (bad) fldl aam adcb clc xor ret mov xchg bound daa xchg add or cmpsl js gs adc cmpsl ret cmp inc js les push test xor in sbb sti and ret xor sbb add jle lods push xlat (bad) and pop mov push js nop mov dec mov andl sub pop push cwtl xchg lret add in cmp jo arpl push add cmpsl int3 dec int3 cmp scas scas enter cmp jbe inc scas xor fdivrp push movsl fcoml out mov fmull sub push xor lock ljmp push gs sub sub dec mov or lods aaa cmpsl sbb xor int addr16 xor dec lods clc orl pop (bad) loopne adc xor push lock mov stos repz xor enter and inc pop cmp movsb scas insb pusha mov pop xor gs inc add orb or sarl adc sbb arpl jmp mov adcl jg test inc jne movb pop push mov cmpsb shll rorb adc mov and (bad) je,pt int push inc push pop insb adc inc outsb inc jge inc pusha push pop jg test push push call or jmp lea in fidivl pop fwait pop pop jmp je dec fs push das jne add stc xor dec loope sbb stos aad or mov push cmp lcall inc cmp (bad) mov xchg push or xor test inc or pop xorb scas outsl test jns orl mov das inc dec bound or jle jg je int3 sti (bad) dec mov ret add (bad) add test and xor cmp scas cmpsb (bad) (bad) inc push and lock hlt loop adc (bad) mov lds fisttpll (bad) cmp fidivrl jecxz push push xchg ret (bad) adc push push jge sbb mov inc mov gs mov mov jg aam popl jmp mov addl push cld pop iret inc push push push dec dec xlat jae xor pop dec mov inc and or mov pop inc mov outsl popa movb add mov jne pop sbb jo test sti xor lret mov mov and movsb out sub mov push idiv and or (bad) (bad) std mov sarl int3 mov or sbb pop jmp jnp xchg repnz xor or out je push stos imul aad ja push ss push clc and mov add test out add xlat dec jg push pop in pop (bad) mov inc adc scas lret or cltd or ss (bad) jmp adc ret test xchg or fild test add cmp mov mov adc movsl cmp cwtl stos divl wbinvd sbb pop mov adc mov inc stos (bad) mov inc or or lret test jo arpl sbb mov addr16 add xor pop orl ret pop loope adc mov mov dec add lds cmc inc dec dec (bad) xor incl or dec adc ret xchg (bad) movsb jno enter (bad) lea outsl mov add jg and inc adc inc jns hlt js hlt xor add les mov xor int cmp faddl xlat cwtl nop cli fdivrs sub and cmp imul push sub xchg lods gs fldl inc or push dec jne scas les cwtl fstpl push and mov cmp sub aas and cmp insl test dec pushf in daa nop repnz movsl push fsts pop xor jns dec dec inc fnstsw add add inc (bad) jb add xchg pop add test in xor fs jp or mov lock or sub xchg pop ret xor xchg jmp fldl rcrb rorb fdivl push add fs cmp movl xchg into xchg sub lods outsb inc xchg shr pop lds out inc jno xchg mov jmp push orl jmp or xor add (bad) (bad) push enter cmpsb sbbb out inc inc push inc sbb jns sbb xchg xlat arpl test mov loope cmp mov add and les adc les shr pop faddl sub sbb mov xor sub loopne loop add fs inc cmp insl cmp xlat hlt mov sub paddd mov push dec dec adc imul test or xor or mov cmovbe daa or add and or jge cwtl cmp scas pop les add dec sar cmp jge mov add adc jp (bad) fwait adc fmull (bad) fnstenv nop js (bad) sub shl xor cmp pop rcrl push or pcmpeqw push ret inc loope jb or push les sbb (bad) mov add lods repz inc faddl decl cmp mov cmp cmpsb and push xchg push cs jmp sbb fstps fldt cs sti push dec popa pusha sub or imul scas lret iret loopne popa inc movsb pop bound xchg cmp xor push insl jle sahf xchg out mov pusha stos sub inc sub jns fmuls (bad) stc jmp outsl dec and mov and pop push lahf xorl pop dec cmpsb lahf push jge les sbb add add hlt mov je (bad) mov jecxz ja lock push jle adc mov xchg inc ret iret dec or clc xor and stc adc fmuls (bad) sub daa or mov test les cmpl xchg or nop cwtl or cwtl xor sbb lock inc pushf mov inc (bad) pop jno ret in xor pop and ds inc decl add movsl cs or xchg mov pusha das push xor push enter or cmp mov sbb aaa pop and sub sub cmp cmp fmuls add lea xchg loop aas mov aad daa iret stc adc xchg or loopne and push and addr16 loopne add mov dec punpckhbw jl dec mov lods sar dec data16 daa fsub jg add (bad) sar loopne xchg adc jns ja jle popl cltd cmp out push pop gs sahf out sahf jne sbb add jns add movsb cs aaa fs (bad) in adc inc push pop xchg mov and les push sub inc daa das mov sub push push imul adc fldt inc add cmp inc inc or int3 adc or mov push insb add sub mov decb adc pop and and movsb xchg or push sbb je xor les mov aam addr16 loopne or sub or adc mov aaa icebp add xor pushf add fcmovnb xchg mov cmp sub add xchg mov loop xlat adc shrl xchg cmpsl ret xchg je stos lock les rclb push jns scas cmp les jecxz lock jl outsb xchg add add (bad) mov cmp inc dec or push dec (bad) or pop adc push clc add movb pop inc hlt xchg pop mov push sub inc dec cmp arpl aaa test data16 sub aaa aas sbb adc adc push mov or arpl jne or dec inc in and jle dec mov mov inc lock pop fs mov mov mov or mov xchg (bad) sub or clc or call or mov pushl dec inc sub sub and sub push pop sbb cmp test xor and dec dec xor (bad) ja sub ret movb mov sbb add in adc notl sbb xcrypt-ctr cmpsl sbb mov add enter (bad) es adc inc or je pop nop test push repnz mov arpl cs adc das sarl mov push mov mov sub sub leave or repz (bad) stc inc les test dec xor dec jne jo inc call mov xchg pop xor xchg das or adc mov or adc ret jmp pop push pop je sbb push aaa pop outsb pop add imul and pusha ljmp cmpsb cmp and push out shrl movsb outsl jge cmp rorb outsl adc loopne vmwrite test xor sbb and add or dec push push xor jecxz pop fwait rcrb repz hlt xchg mov xchg inc add rcr jp lock fisub ficom add repz or mov es and sbb jb in push or xchg pop subl xchg and jb mov push out test add mov xor mov push pop push dec dec dec inc dec push add cmpb xor int3 jg lods insl mov add xor aaa aaa (bad) jmp dec mov push add inc push (bad) test mov mov adc and pop lret push out sub xor adc pop mov cmp jne sub push addr16 ss mov insl imul jmp lcall dec leave rcll mov fnstsw lea mov pop add ret dec pop inc icebp lahf lock mov inc les sbb ljmp cmp aam xor or (bad) push sbb (bad) leave clc mov (bad) xchg mov lock adc cs clc jnp ljmp cmp pop jbe shll (bad) xor cmc or inc pop or (bad) pop dec adc pop mov icebp shlb out and or enter jb fbld daa rolb (bad) sbb jne js dec mov or clc test adc fcoml movsb cmp int cmp pop or out and subl jae sahf inc pop pop loopne or sbb adc aaa cmp dec or mov sub aaa add xorl pop add ret sbb aaa add inc negb lar xor cs ja jbe sarb adc (bad) clts popa repz pop add add sub insb ss jb outsb adc call mov (bad) cmpsb push or inc lds fisub and cmp inc push enter es adc jp push push cmp dec sti push mov push jo fstpt xchg lock shll neg cmp pop and rorl and inc incl inc fdivrs inc push adc inc ret jb inc cmp call jl add cmp orb outsl cmp cmp test es bswap jo pushf ds fstps cwtl inc mov pushf in or jns xor sbb nop xchg sbb sbb inc push xor adc ja (bad) js xchg fiadd enter stos xchg fs inc mov and add cmp cmp dec mov enter in cmp fsubr pop sub push xor pop lock mov push sbb sbb xchg xchg xchg lock adc push xor (bad) ss lret test push pop add push inc outsl rcrb fist in cs push sbb nop movl pusha push jno adc mov mov or dec mov int3 sub sbb mov mov inc lock fcoml push pop leave mov inc insb and addl ret add push insl bound xchg and adc sbb or imul or jne sbb insl popa in cmp mov ja adc cwtl xor addb pop jbe add adc or stc sbb in push fs push dec or and xchg out (bad) pusha sbb ja mov push xor inc push ss and mov repz inc and add inc mov or outsb and pop or mov pop xchg sub add into fwait cmp or divl movsl add sbb mov cmpl pop inc sbb or and jge adc dec movl xor call loopne adc and inc sbb push stc inc or push or lea cmpsb fnstcw mov adc adc dec decl or pop hlt loopne jbe and cld push lea subl dec push insb or test lret add aas lods sbb sub dec pop pop push push xchg (bad) testl pop push add add inc mov fmull add add jno stos or pop add and inc adc and jnp andps lds movb push scas add or pop popf adc pop xchg push adcb loopne push repz adc jp clc cmp rdmsr rcll dec (bad) loop insl inc lret lea sbb and cmpsl dec dec dec mov das or inc pop arpl mov or sub push pop adc add ret and and mov mov leave scas roll and iret out sbb pop notl xchg pusha stos neg pop (bad) (bad) mov push cmp mov js gs jne enter add fndisi(8087 xor xor outsb sbb paddusb lds lods add nop xchg adc mov or sub bound inc adc cmc cwtl or or push test add js sbb fadds addr16 or inc in ret add push or or and push in mov (bad) fist push rolb mov lods lods scas out and and imul dec and push pusha adc addr16 and push push add or add lret pop xchg mov (bad) lds or sub dec movsb movhps loopne xchg loope les sbb out jbe clc and add mov xor mov adc jns pop bound pop add cmpb lret movb mov pop inc inc mov or inc (bad) jbe divps fist mov add push add ljmp sbb add add add or ds mov mov mov mov xchg mov mov mov mov mov push lcall in (bad) jmp ljmp jmp jmp jmp loope jmp jmp jmp jmp (bad) (bad) fdivrp (bad) fdivr (bad) fisubl fdivr xlat call call call call call call call dec add jg or dec dec dec (bad) sbb mov jbe sbb push push in or sahf lock pop push mov xchg adc out cmp push push lods in pushf mov push jns (bad) int3 aam push add fdivrl sti cmp push xchg push sub push dec fidivr out pusha ss mov xor ss in jnp les push xorl push sarb push movsb xchg fidivr dec sbb inc fs sub je jge call or call in jns add (bad) loopne pusha data16 data16 mov sahf int3 test mov cs popa outsb bound nop fdivl sbb ds gs test (bad) jb popa shrb leave nop pop fiaddl fwait (bad) aad jecxz or or adc fstpl mov sbb roll and inc sahf dec test pop bnd add dec int3 add inc inc sbb js clc ja mov push add aas incl mov mov pop nop add ret pop and jbe lret or imul push ret or inc je pop dec push movsb add and clc dec js jg jg,pn push xchg push jne pop in jg sub pop jo xor pop and addr16 fs add mov fwait clc sub imul push adc push push or xor or push inc cmp cmovle jno dec jb push dec popa je andl push insl fdivs les adc hlt jg,pn ss sub hlt jo xchg mov (bad) adc outsl stos jbe fldcw jge sbb bound (bad) push in or dec adc adc pushf adc xor rolb (bad) xchg test pop jmp jae in xchg fs or xchg in and or dec jmp es lods push or push loopne jle mov in cmp rorb push imul dec jnp dec nop daa or mov fnsave imul and pop inc jno std sbb fmuls mov outsb mov add xor xor (bad) cli (bad) xorb cmpsb jo adc add xchg mov mov mov ret xor adc and xor add and lldt add push clc inc pop adc adc es push ss jne pop add pop and adc das dec mov xchg add add add cmp push add aaa mov mov lock mov test mov nopl sbb sarb es mov mov mov add push mov sub xor cmp sbb repnz incl in decl ret inc inc inc fild std (bad) mov push ret sbb pusha sbb stc ret mov mov out cmp mov jl scas mov lahf out sahf jo mov clc sbb lahf out xor enter or mov push test dec les push push (bad) mov (bad) int3 in and jbe mov cmp je push and jle push xor mov mov sahf dec pop int3 out lret push jo sbb lret push jnp iret repz les idivb mov test adc push jge repz mov test mov frstor es add movsb stos (bad) xor in jnp jnp data16 ret push push mov loopne (bad) clc rcrb pop ds imul push cwtl or sub add sarb cmp (bad) mov (bad) mov es ds ss shll aad mov inc out fxch into inc push xorl sub push jl fidiv or adc mov loopne or jg pusha pusha push enter mov and xor icebp movl sub aas pushf xor test pop push jo inc dec roll adcb add push repnz in inc idiv repnz adc adc fsubrl push jne mov lahf aas pop xchg mov xchg bound jno xlat clc ss sub jb cmp aaa repnz sbb jmp mov (bad) mov fildl sbb inc in add push inc jmp mov jnp cmp mov add xor lods sub inc mov add and leave xorb (bad) sub jo ret jl adcl aaa popa inc xor pushf and add mov add or or and xor adc push and and jns hlt fiaddl jo mov cld cmpsb push cmp adc jns jnp push mov xchg cltd cmpsb lahf out sahf mov int out cmp loop in inc sbb and xchg push push push add aad mov lods sti xchg jecxz fdivrp push std push mov cs insb mov push jo je js sub add lock inc out push adc or add inc cmp lahf pusha push scas push mulb cmp cmp mov js xchg adcb mulb jo cmpsb paddsw (bad) out add xor das or aad mov and jecxz pop (bad) pushf (bad) outsl dec sub cld mov nop jmp jmp lcall or lock lods dec push push and mov mov sbb aaa adc add int3 add push sbb sti mov stc add inc movl mov pop sahf or icebp hlt sbb inc adc jne or add std mov pop mov aaa mull rcrl fisttpll ds and roll daa int3 cmp icebp pop lock andl xchg sub or dec jmp mov sbb ljmp xchg leave nop cmpsl jb mov addl ja pop xor inc sarb lods sbb fmulp int3 push xchg sbb or push dec dec push pop dec push leave push inc push inc daa push push cs jo daa or xchg or adc popa clts (bad) and mov xchg dec and insl xchg daa dec push jo imul mov mov popa push xchg or ffree add mov stos add inc lods das jo pop repz xchg xor subl jo mov fsubrs and xchg and nop push inc lret andl jg nop imul nop lea mulb adc adc in dec jle addl sub ficom adc xchg push adc out into push mov sub jp (bad) bound je out je mov mov scas dec inc (bad) cs out pop ds cmp xchg inc and or add fimul mov jmp adc test or push inc (bad) mov sub push or test sub (bad) push movsb fsubr or dec and fs lock or mov jne sub cwtl pop ja (bad) xchg jbe adc and or popf add push adcl add sbb and and dec arpl retw sub push or loopne sar dec jne ja mov jmp add sarb cmpsl add and popa pop and mov nop push or pop add lods sbb xor jne cli test mov or adc adc xor rcll sbb and xor and sub sub pop and pop scas pusha inc inc jl cmp sub sub add mov mov loope addb mov fidivrl test add aam mov dec push inc sub out sbb add xor sub dec je ja and cwtl xor push clc (bad) mov in ljmp cwtl adc jmp mov clc inc pop and adc mov xchg mov (bad) adc andl add les or pop mov xchg aas mov add (bad) rcl cmpsb mov lea mov cmp hlt (bad) jmp or push fstl dec imul inc adc or push lret and pop or lods lretw cmp test or xor movsb and cmp inc or movsl jl mov mov push xor sbb pushf xchg and rcll call and iret push sub push inc push push jp xorl sahf lretw sbb cmp in (bad) push daa add jmp in jle jne jae mov inc loopne mov mov shlb cmpsl push sbb leave inc pop adc cwtl fs or aaa sbb push mov mov ficoml push insb insb push into jnp sarb sbb lock sahf inc inc (bad) lds push mov add popa in sub add enter iret imul sbb orb mov or cld insb dec inc add or adc insl and mov aam adc xchg outsl inc add or adc mov and rcrb mul rol (bad) ficom or pop push mov ljmp xchg pop cmpsl aam xchg cmp std inc jecxz xlat fisttpl sbb push test jge mov add push rcr pop lsl add jb mov lcall movb jmp cmp jne cld adcl and adc movsl (bad) ficoml cmpsl jmp ljmp sti mov or adc cmp lcall xchg lahf sub inc add (bad) imull add inc dec mov nop fdivrl cmp inc test push xchg lock add and in sub pop (bad) test popa lea or dec loope les inc sti inc inc jmp sti or fsubrl inc jae shll xor and outsl ret mov scas fprem inc cmp les sarb std cmc es sub add pop das in and mov cmp je mov cmp movsl lds adc in lock loopne in lea (bad) xlat js ret jne jge pop lock or ss adc cmpl push fadds add nop iret xor cmp adc outsl dec scas mov mov dec aaa sub rcll mov pop sti push cmpb xor pop dec jp mulb push cmpsb jno (bad) push cmp xchg pop shll lahf xor sbb inc inc jo mov sub and adcb push imul fmuls dec in mov test sub sbb jno pop rol popa cmp push jno sti popa lock mov sbb mov (bad) mov ja je add es loope push (bad) cmp pop (bad) sti lcall fadds inc push cmp shlb inc inc lods add cmp fcmovnbe add xor jle jo in sbb cmp mov inc or data16 push cmpsb pop lods adc push push inc sbb lock shrb pop inc shlb test cmp in and push ret xchg add jmp or cltd cmp push lret lcallw mov fadds inc cmp jge xchg call xchg sbb cmp leave sub lods mov inc cli jbe adc mov cmp idivl sub cmp lods mov in or (bad) imul test jb inc xor sbb push xchg push xchg imul mov popa aaa adc jo fistpll add cmpb js push adc pop adc dec jne xchg lcall or je out ds jne test or mov (bad) rclb and cli popa adc repz lahf mov clc ret shrb out dec test (bad) dec jge mov push fiaddl sub add or imul lret jo cmpsl sbbl sbb out mov mov lea lea add adc jmp xchg (bad) aas cwtl popf add xor sti cmp je ja mov in out cmp lock mov sub pop jb jae pushf lods or insl mov inc pop js lea shll imul scas lds sbb jo cs adc in sbb mov mov movups inc loopne push or mov push push testb jecxz (bad) push ljmp xchg cmp mov int3 ret inc jmp mov xchg hlt ret loope,pt jmp pop loop movswl in aad mov pushf sub test push (bad) orl push cmp (bad) out pop outsb xor (bad) movsb cltd pop push push (bad) negl pop (bad) ficom pop or inc xchg fdivs mov jmp lods cmp and ret dec cld jbe dec out xor add mov fwait or xlat or pop loopne stos xor xor ret fdivrl das movsl and call push inc ja addl scas jns pop ja or aam adc aaa or inc push ja insb imul out push and sahf mov lea js or stc sbb scas mov mov push sbb (bad) cmp fistpl es (bad) sahf add stc fstpl fwait jmp sub add out and add push movsb jle (bad) ss sub imul mov imul pushf add jmp pop dec adc or cmp in jmp sub mov push adc sub lret jo dec shlb addb lods loopne loopne dec pop push push xor push inc dec rcl out sbb fiaddl inc stos mov movsb ret repz mov push add inc repz aam xor mov lock and jmp (bad) xchg jecxz sbb add xor jo mov dec jo mov pop and inc inc insb popf jne sub mov cmpsb lds pop mov jecxz lret inc test sub xchg loopne and mov es in cltd nop mov add in mov (bad) out mov sbb dec sub add mov add pop jno je popa push dec push sbb add pop and dec push push stc mov aas push adc mov (bad) in add adc rol inc es int3 dec movl push jne mov ret add jne jecxz and (bad) aas push cwtl push mov clc mov (bad) ds adc ret inc incb or mov add xor push fwait inc push cmp nop fbld inc xor adc and cltd xor cwtl xor and xor ret jo sbb ds inc insb cmc sub lret adc sub sub insb (bad) or cli jmp and or loop sub and push ljmp xchg or mov stc (bad) arpl cs push pop outsl je test pop out add jne and leave add mov push or pop leave jmp icebp or or and add out movl pop push movnti or add jne mov sub inc sub lahf pop fs push adc rclb adc adc add jb and dec jmp mov dec cli cmp rcr (bad) push and dec or cmc adc (bad) arpl push mov inc jb sub jge cs imul mov addb dec jne je ret jecxz fwait popl repz dec pop add imul lds imul add negl and mov add es adc enter jmp sahf aam mov ret dec lods sbb push cmp insb clc add nop pop pop add mov xor mov mov push std xchg lea mov (bad) push xor jnp je inc (bad) aad sbb (bad) adcl add insb or add adc xchg push xchg fldl aas jnp push push mov nop das jmp add out sub call insb test mov andl adc add nop lret ja sub rcrb rol stos mov imul xchg pop or or fwait sub mov scas pop loopne out popf dec (bad) enter sub addl lahf pop jge xchg jnp add inc push or and pop lea pop out mov pushf jae or pop adc jge pop lock pop add test test adcb add mov inc mov add or sbb sbb clc or pop (bad) jge mov dec adc cmpsb mull dec push orb push outsb sbb jg pop pop out shlb mov imul and jl and push adc lcall mov cmp adc test add rcll add jmp or dec or or adc cltd cltd (bad) or cmp push pop xchg lret adc pop je sti xchg or or cmp cmp or sbb insl sbb dec or test dec sbb popf mov pop sbb faddl lahf in in push or sbb xchg stc dec jbe sub lret test pop clc add fs push jl lods fisttp ljmp add sti cltd push xor push in dec insl (bad) mov cmpb aad jecxz and ret xor adcl stos ret nop in push push add sub lds in sub sbb cld adc adc push icebp or je push sbb sbb cmp les xor mov add and and jl sbbb outsl push sbb add jecxz cmp mov add mov add pushf inc mov stos cmpsb cmp lock mov pop cwtl and test mov vmaskmovdqu loope dec fldt aas jg (bad) xchg add rclb inc rorb loope adc (bad) xor or and xchg adc sbb xchg jne push sub lds push js add rcll cmp push popa xchg push jno sub xor out mov addr16 or in fimull loope inc mov push dec enter or mov mov daa jae mov outsb push rolb add popa push jmp add dec je sbb (bad) cmpsl std dec les js inc push add pop cmp push lcall push pop add jp jmp rorb or add pop test lods pop aaa loope psubb inc push das les aas sub dec sbb push adc sar cmp cld add adc aam dec int3 movsl push sbb pushf (bad) or push inc insb mov flds adc je push fs imul das add push negl jae je or (bad) xor and arpl mov or dec push pop mov xchg and mov cmp lock mov mov clc movmskps in xchg sbbb mov pushl aam or adc add mov xor mov push xchg cli or and xor sbb fwait lock andl cmc mov push subl push jge ds fldcw pusha push cmp (bad) add inc or (bad) repnz mov sarl out mov dec or pop into pop or inc add int3 ds pop jbe enter lret test dec sbb (bad) in divl xchg cld ss add xchg clc or mov inc das dec dec push (bad) xor sub aaa xlat adc addr16 mov fcoml (bad) into xchg repnz js or in pop or and nop or push pop cmpsl push lret rorb and jae clc cmp jne push pop mov out cmp clc jne sub xchg add loopne and pop inc loop test pop aas cmp nop jno push cmp sbb push fbstp or insb cmpl rcr adc (bad) push je pushf or insl ss dec mov std pop inc outsb adc cmp jne mov pop and pop add inc dec push push dec fist sub (bad) dec loope (bad) push xchg cs or mov mov (bad) insb je or jne (bad) je jb inc jbe jnp jne push shr sub push or outsl xchg sub bound ficompl inc inc mov or add add repnz add mov or cmpb and or push add mov popa mov cmp dec add nop sete sub xor push dec adc push mov dec mov push adc adc test sub jns dec push dec mov dec jo mov out imul push cmp incb or and (bad) xchg jg sbb addb jmp shlb xor push pop push sbb ret insl inc dec das pop dec xor and das les in loop inc loopne mov roll push or inc inc lret fistpl mov dec add push xchg (bad) or xchg push inc test xchg int dec xchg insb in push inc lods imul cwtl mov pop popf mov push and ljmp sbb and in ds test fcoms jmp xor (bad) cld mov in cmp cli clc out fidiv dec and mov push bound sti lds mov inc (bad) cli cmp jo xchg cmpb inc jg pusha push (bad) sti sub sub imul pop or push or add mov sarb test imul or cmpsb imull lcall test add xchg subl pop mov stos cmp jle lods call or add add pushf push adc cli imul push in pop pop ljmp adc and xor cmp push pop sub inc xchg push mov jne shlb add inc pop mov test mov test aam pop mov xchg push in (bad) (bad) mov hlt hlt pop add push mov out add pop iret loopne lret sub hlt je adc xor fiadd jno inc mov or add arpl repnz mov fdivr push add push xchg fsubs add push pop inc dec sub dec and cmp pop ret insb and jne lcall rcll sbb xchg mov imul and sbb dec mov sub imul ret pusha (bad) mov rolb dec cmp mov nop ret mov cmp xor pop ja (bad) test stos je jg push mov and js mov fcoms adcb movsb roll fildl inc xor fisttpll xchg inc pusha jmp sbb test cmp sbb sbb push mov stc sbb sub push mov adc popf out ja mov nop add pop ret rolb in or push xchg add pop rcl adc adc add mov fwait add (bad) jecxz xchg add sbbl pop movsb bound es adc in xchg (bad) rcrb pop jge mov dec sub jle ss movsb adc or inc (bad) lcall inc jg insb testb je dec sahf inc inc mov mov or ja jno add out xchg lock mov ret sub jno inc sub insb jg jo and push or inc xor cli add mov adc xor test sub pop cmp movups in mov pop aaa or icebp adc xchg mov sbb pop aaa cmp je pushf int push les jp mov sbb je mov xor or or pop push add shr inc pop sbb jle imul addl jl ret jo add test mov push mov push add mov imul or adc and mov stos call cmp js inc stc fs mov push dec in lea and and lock les js ret fistpl inc outsb pop je mov movb ja imul mov push add test xor popa popf bound mov and cmpsl sub iret push add push sarb xor aas mov xor rorb cs je mov ss je and or inc loope cmp addr16 mov dec and sbb ja and and jo mov push pop or cs pop pop dec dec jb or shll cmp js enter data16 movaps lock push das nop cmp sbb sahf adc (bad) insl cli cmp inc push xlat sbb jnp rclb pusha push out sbb mov sub incl cmpsb sbb stc insb mov add push pop pushf xor mov in nop xor mov das popa mov aaa out and mov je sti mov xchg stos shll leave je push cld std xor mov push pop bound loop rclb ret pop and and rdtsc loope loop dec jp add insb xor push adc and adc jno cmp dec test push mov pop pop sbb mov cmp cmpsl cltd adc adc dec mov jnp dec mov inc dec xor fidivrl and (bad) fmull xchg dec xor daa jno pop push les xor sbb repnz push dec mov ja mov lods adc nop jle xorl inc (bad) lods dec mov (bad) std add jge push pop aas mov or add cltd and popf adc jmp dec mov push pop ja add outsb xchg or mov add pop inc (bad) sbb adcl inc cmp frstor out push sar add inc or test bound or or dec add pop enter jne test mov (bad) sbb and pop psrld mov xor dec ret or test mov and (bad) xchg lods or xchg cld add push popa inc mov les push mov sbb clc fisubr ja mov xchg fcoml mov xor xchg adc addr16 mov jp add movsb daa mov das stos add add pop roll xor adc dec mov add imul (bad) mov idivb xchg (bad) sub cltd or (bad) lods and pushl dec pushf push js add ret pop push sti loopne jle mov rcrb jne into lods inc cmp pop and iret add sbb stos jne push add repnz sbb mov cmpl jle and lock ret mov ljmp aam ja call sahf lods jne push adc adc adc mov es xchg sbb mov dec sbb xchg push pusha or xlat sub cmpb test (bad) mov shll js decl fwait rcr mov inc or loope sti and mov and adc lea fucomp mov and in adc add mov add mov lea and gs dec sub inc xor sub add and jg mov push insb push mov mov pop and fldcw and xlat shll ss jno xchg xchg xor add add dec enter add add add add or push (bad) into push ss popa int3 rol push mov pop sbb notb mov lods roll push (bad) jne add mov shrb loopne sub mov ds or ficomp lea xchg sbb cltd rol fs adc loopne mov fs jmp xchg mov outsl ret inc push push cwtl add sub or ja jl and push or leave sbb (bad) inc inc adc add xchg dec cs enter dec jp shrb add push inc add nop mov shl loopne jmp sbb sahf inc ret mov and xchg imul mov jns push (bad) xor jne push hlt add loopne (bad) sub cmp push out ss mov push faddl sub mov push (bad) aaa call inc jne idivb push addl add pusha push push cmc fs test ret fildll icebp test or inc es xorb pop mov addl push add nop sbb mov jle jne aaa and xchg jo shlb je push sub jb je sbb sbbb mov ds sahf fs loopne repnz add or push mov inc adc fidiv loope lret mov jb xchg sbb es fiaddl pop inc data16 int3 pusha mov xchg scas sbb (bad) pop cmp sbb or inc or add addr16 push fcoms in jmp push outsb je sub or inc loope xchg adc loope lahf sbb stos adc daa aas fwait js shrb xor push pop mov in hlt out ds push sub stos fistpll insb loopne sti jmp loopne call jno adc pop sub (bad) js cmp cld and dec (bad) in hlt (bad) xor xchg iret jl or mov push push mov movsl inc pop pop js or push push jle push fistp js fmull stos jne,pn pop push imul ja lds es aam mov lret and icebp (bad) jl rolb inc mov addb clc mov popa xor pushf or fs cltd push pop xor clc xor sbb xlat ss (bad) jns imul into insb rcl nop push pop dec pop sbb add arpl rclb mov les les adc pusha jo cmpsl shll lock and pop add pop push xchg inc iret adc dec inc inc out cli push fmuls pop movsb inc or dec add data16 push fadds mov cwtl loope push (bad) jae xor mov cltd addl pop xchg pop xor cltd xor mov fisttpl push outsb loopne (bad) daa lods aas ja out (bad) daa xor or cltd int3 mov xchg sbb push jne mov adc push lcall pop add aas lods mov test add adc or add xchg adc mov (bad) jbe insb xor or adc jb (bad) out jmp sub sub ret in jb or test adc inc mov add adc popl jmp orl mov mov add out mov test jmp sub adc mov push or nop xchg pop rorl outsb cmpsb adc push movsl adc fsubs pop mov inc scas scas push xor das dec mov xchg sahf ljmp xchg push test mov inc jae addr16 jmp fisub pop fimul inc add inc or mov dec inc shrb dec push inc sub dec or jne push sub dec jmp pop out scas add jmp adc mov inc cld (bad) inc adc pushf xchg insl (bad) sbb sub aas jbe sub adc inc aaa xor mov xchg jle pop mov jle add add jb adc mov push xorb and or or es movsb sub jno (bad) xchg or sbb cmp xchg mov stos sub (bad) jne in sub push dec push add jle push or jecxz jmp xchg sub popa les cmp jne add add sub sbb push pusha inc and add pop add div mov js adc and test push pusha mov stos inc loope sbb mov in das adc nop les add cmpsb mulb jge clc jbe sahf or mov (bad) mov in insl fwait jb xor push mov mov pushl mov xchg and or addr16 push sbb test iret pop cwtl mov xor pop mov adc je and adc rolb pop push and inc push sub or mov pop js add outsb hlt or dec push or jo dec xor fisubrl xchg stos and pop mov and movsb jo push cmp adc dec sub ss cmp lds push movsb aaa mov arpl jbe lret mov sub push dec jp adc add std jge jecxz rcl shl movsb adc mov xor jg jg,pn adc pop rorb das push outsb addb or data16 inc mov out sbb or fcom aad inc push dec and dec or test inc jl scas iret (bad) jno or push mov add xchg add jle or or mov mov mov cld aaa je imul xor loop inc mov test xlat dec jno jle inc addb addr16 xchg pop jbe adc sbb add aam ret (bad) aam call dec inc or jne insl mov adc inc loope push js or fwait jne test add inc movnti jge popa dec xchg xchg jno scas fs inc pop leave in dec pop lahf add dec lahf outsl and sub cli fiaddl enter fnop jne adc push iret dec sbb in fs cmpl inc icebp bound sub pop or ret pop aam in and pop push rcrb dec or xlat in stc mov dec in mov imul shr call pop push dec or js lcall out icebp adcl daa or adc push push or cmp lahf ja mov mov inc aas xor add and test mov ret sub inc add push sbb and push lods mov cmp nop cwtl pusha addr16 and add adc adc repz ret mov lock mov xchg mov cwtl mov cmp adc lock push cmpsl cmp adc adc shrb lahf or adc or xchg cmpsb dec or dec outsb les (bad) divl pop stos and sub add sbb inc sbb xor rolb ficom dec add aam pop push jne dec shrb mov aas xchg je int3 pop push inc lock jae leave mov adc adc pop jl and and mov jb pop mov or lret sbb sbb data16 and or mov daa xor (bad) mov mov mov push mov mov xchg adc subb add aad jo sahf icebp inc mov add sub or rcrb cmpsl mov add orb xor mov cmp pop fsubrl popa mov pop push in fsubrl std dec push fmuls popa pop pop push jle xchg outsl (bad) insb ret nop in arpl loopew out pop fcmovnb das mov cmp adc mov test sub xor fdivrs (bad) iret jl adc fs and sbb and or push (bad) loopnew jo dec lret cld xchg push loop push inc or cmc into xchg adc push xor lods dec sub push je dec (bad) data16 lock rorb inc mov loop nop loopne hlt or dec int3 pop sub fdivl mov sub shld push add cli movsb loopne test push fwait adc pop sub js cli adc call loope ss xor cmpsb mov sub xchg jl fiaddl out (bad) dec bound (bad) lea push sbb dec pop push mov ret mov push cld mov push clc fstl aam lods ret fs incb xchg add hlt xorl inc fs cmpl mov jl loopne xlat xor cmpb or jnp ds or add loopne and or adc or int call cmp mov (bad) xchg sbbb dec pop mov mov cmp inc aas sub xchg mov cmp inc adc mov xor int3 sti push shrb add jb inc inc bound push aaa sbb jecxz (bad) aaa arpl and (bad) sbb inc roll cli xchg popf sbb pop mov daa and and sub popa push or add (bad) or ret aas fwait (bad) xchg in xchg fildll jecxz mov xchg icebp rcr add fcompl clc popa xchg mov adc inc and cmc sbb inc inc aad icebp xorb addb dec out adc mov add addl dec add add insl cmp push xchg gs ss mov fwait dec loopne popf imulb sub nop iret jae mov jl xor and and fwait outsb repz jg sub or je add jmp bnd jnp jmp in aam int3 push cmp fwait mov addr16 sbb mov fldl rol cmp adcb inc loop loope push dec push push dec adc pop xor push divl inc dec (bad) out xchg rorb ficoml ss add jecxz jmp mov add add and fwait mov adc mov mov push push mov push (bad) pop mov or out sbbb cmp js or push je jae test pop aam and jne fisubl pavgw fcmovb or adc (bad) xchg outsb cmp movsl lret les pushf nop adc cmp sub test cmp or pop movb adc mov jge (bad) jo push jne rcrb (bad) xor jnp sbb ss mov sbb sbb sub mov xchg inc push dec add js test inc movl sub xor sub push and roll sbb adc add call arpl inc je sbb adc mov pop shrb ja push inc dec test inc adc sub lea xchg fadds jecxz sbb test inc lea jnp lods push (bad) mov adc mov test movsb and add mov adc orl sub dec pop xchg inc es xorb cmp movsb cmp arpl lret jno outsb push jb dec pop xchg bound mov test test sbbb movb xor xchg lea inc aad js and lods cli dec cmp mov ret imul rclb sbb mov adc cld popa inc fisubl jne (bad) jo pop loop gs mov jne and outsl and pushf sub icebp dec mov pop or xchg lret hlt rclb sbbl dec dec into mov clc sub jbe xor seto out mov jbe (bad) pop jge enter mov sub shrl dec push data16 hlt mov sti sub out loopne and xlat xchg iret and lcall dec enter xchg inc push and in jbe aas cmp lahf pop jp push loop or adc loopne mov aam pushf fsubl pop mov out pop push mov mov ja,pn jmp repz mov daa iret mov push inc cmp setg jmp inc add lcall dec cmp setle cmp xor rcll dec inc dec mov mov sub cld (bad) pusha dec sbb xchg xchg rcl adc xor insb orb cmp pop mov or xor mov rdpmc je adc pop xchg out in dec stos fs push inc std sbb shlb mov push int3 in stos test pop xor xor push je imul add inc adc (bad) jp xor xchg sub (bad) adc sub imul push aaa sub sbb adc and mov lcall pushf or or xchg mov push cs aaa lock xchg xchg popa std add mov popf movb dec add js sbb fs pop lret push add loope mov adcb or dec sub aaa jl push cmpsl mov addl xchg pop or add jnp xchg mov dec pop add pop add lret ret (bad) lock scas scas push sbb mov ficompl fmul in jns ret jmp push sbb sbb sub lods or fs add sbb xchg xchg mov adc cmp push mov pop push adc mov test sub or in mov xchg push and lcall (bad) and inc lea movsb cs das int cmp cli add jns jge push fwait push mov lret push fucomip adc push sub jno add bound inc push daa insb mov dec or adc add pop test test adcl or dec or jbe and lods and pop sbb sub pop and sbb cmp jne in xchg call imul adc xor dec fs mov cmpb mov dec inc and cmp mov cmp je xchg dec or dec push pop fcomps cmp fisubr push flds inc out jge adc cmp enter outsb xchg les xchg sarl iret adc pop lret clc roll jnp xor cs inc hlt fisttp or int into incb mov cmpsl jne inc jns inc das add push adc rolb test (bad) pop insb test fcomps imul mov fcompl idivb push popa jne push pop mov test movsl pop popa adc xchg inc ljmp mov call adc push cli push push les sub pop xchg aas xor push ljmp popf movsb fstl and adc nop inc push sbb add adc arpl inc mov or repnz xchg cmpsb or test in nop scas adc and jbe pop mov gs pusha bswap jmp sti sbb stos push jnp sahf (bad) aaa scas mov push lods sbb fistp pusha push out lods call lahf incw std mov or jne and jb and mov bound xchg lahf xchg (bad) insb sub adc mov mov xchg (bad) hlt enter cmp and pop mov mov xor sub sub pushf mov pop (bad) dec movsl inc pop (bad) imul dec xor xchg cmp mov push in sbbb cmpsl pop adc cmp inc (bad) sbb mov arpl aad outsl mov insl in cs cli rcrl aas adc mov inc dec jne mov insb (bad) mov rorl loopne shrb push dec sarb cmp popf fs push fucomi ficom inc pop xor mov pop sbb mov into add add (bad) push dec mov rolb jne push dec movsl sarb outsl pusha cld lret clc or mov cmp xchg dec xchg movsb jge inc fcompl xchg jmp sbb push xchg sahf mov (bad) (bad) mov (bad) pop jne test sbbb xchg pop pop popf xchg scas xor (bad) aaa mov sub rcll clc stos jne push fist cmpsl jne inc adc or adc push in xchg icebp imul sub test push dec addr16 iret imul adc aas (bad) jmp loope rorb mov (bad) fildll movsb fstl test sub push sbb sub adc or pop cmp jle imul rcrl cmp or je add sbb or xchg pushf ret cmp mov insl daa xchg sub cmp push xchg sahf or ss mov popf sbb mov add imull push xchg scas lahf insb jecxz lea iret mov or dec sub or loop push pop and lods sub dec push outsb imulb pusha sti and pop fs and enter or pop pop mov andl sbb inc jge add sub sbb ret cmpsb cmp cmp ret ss mov mov xlat inc sti sbb mov add movl lea xchg or stos jne sub je orl sub sub cmp stos pop imul inc or inc adc cmpsb dec adc adc adc add xor rclb or sbb xchg loopne add inc sbb inc stos ss les cmp inc xor push xor push aad lds push dec (bad) jb mov nop mov dec push xchg and daa enter inc call adc insl and jnp addr16 cwtl xchg nop aam testb rolb add dec test stos cwtl js add cmp inc push test or movsb (bad) out add lea or mov jge dec xchg mov repz test out pop mov mov push inc je and mov (bad) aas push add imul shrb xchg dec add pushf or mov loopne xchg xchg popf fisttpl in and sub mov adc push lret enter scas ffree test xor iret sub movsl xor push inc adc xchg insb xor or aas popf in mov sbb cmp repz or adc dec mov fidivl inc push and adc (bad) dec sbb nopl or xchg (bad) mov in and inc and jb dec cmp std out cmp insl pop cmp xchg mov mov sbb inc pusha cmp mov or les push stos or push inc push pop and sbb faddl mov adc ret add push mov inc imul sub cmp js mov add mov dec xchg loopne lea or jle and jmp ja mov in jnp adc adcl jno push add repnz add sub and adc aaa or (bad) mov xor adc mov ja pop lcall clc dec jae enter fwait adc imul fsubrl push add test repnz and shrb pop andb inc shl ret sub xor std dec mov mov xchg or fidivr ret es sbb adc add in negl and push xor lahf addr16 mov andl sub xchg jnp push in pop fadds cmpsl push lcall test ret ret dec jns push gs inc and and mov ja lock mov lahf jne sbb (bad) out and sbb inc scas mov xor mov (bad) xor jg mov adc sbb mov xchg movsb pop mov arpl sbb or push or shll dec xor and hlt daa lds sbb or shll loopne push jmp dec mov movsl outsb je sbb mov and mov inc or mov jo movsl data16 xor mov add adc fsubrp or nop sub pop mov or mov incb das aas pop data16 outsb inc movsl xlat and je mull push aad arpl inc mov mov pop rcll les mov ss pop xor push inc mov mov mov daa add sub mov cltd sub ja cmp stos leave add cld jne jne out xor icebp xor or mov ds fwait dec loope iret push add push inc std xchg inc mov xor outsl push lods push pushl add lea hlt or fisub push adc inc push xor push adc dec add lods add xlat sbb xor enter add sbb push sbb leave or (bad) xor pop iret mov push notl cmpl pop pop aad or ret push shll dec test movsl pop sahf sbb add shl loop sub shll cwtl ret sbb xchg sub add sbb mov aad pop xlat test (bad) pop xor dec (bad) jmp rcrb sub pop adc ret sahf aam mov lods sbb mov test adc inc pop pop dec popl push roll and jge push push cmp call sub je push pop mov pop mov xor jb or inc pop insb testb sbb jmp pop adc outsb and test jno mov addb sbb in (bad) mov push inc shrb add test add pop and in jae adc rol mov jmp inc mov cmp inc sbb inc and mov mov incl add cmp jne mov add js jg nop xchg mov test push rcll outsb insb mov enter add jmp and xchg (bad) dec mov in fldenv jl nop push jb or ja fdivl sub jge cmp pop fwait sti jae pop and xor out pop or xor mov jne push hlt or icebp popf inc lret sbb mov inc sbb xor add inc (bad) shr addr16 arpl or pop adc inc dec xchg mov ss mov sbb mov sbb dec cmpl cmp dec mov add dec shlb popf adc cld mov or popf cmp push inc xchg fnstsw mov insl xor js mov inc push jmp out inc adc inc xor or ret push sub sub scas adc and sbb rclb pop (bad) repnz or adc mov push lods mov (bad) cwtl (bad) sbb movsl jno ret das loopne sbb jl rcll or sub push test mov call inc sbb xor pop (bad) fild cmp lods fistp adc call (bad) mov and add add add (bad) adc nop inc dec mov and sub push lcall (bad) stc push data16 sub cli dec jbe and jp add jno sarb (bad) cmpsl fsub sbb mov dec or mov pushf clc add ret and fidiv add jns (bad) dec shll loopne fldenv mov sbb adc sbb or xchg dec sbb dec lfs fcompl and adc fadds inc test popl int3 dec sbb les pop xlat fwait enterw push xchg (bad) push inc (bad) jmp cmp add nop sub mov push and jp jne bound rcrb fidivrl push negb in push inc pop rclb pop loopne pop roll loopne dec (bad) sbb mov add jno and xor rclb repz inc sbb mov and lock mov xor loopne cmpsl xchg sub sub pop xor roll dec or (bad) and adc mov pushf sbb fsubl add inc pushf push push sbb nop push sar push push bound lahf pop stc test into mov rorb sar pop mov jns cmp push push das cmpsl js sbb pop aaa push jnp add mov add rcl enter cld imul outsl sbb cmp xor push push stos es pop in mov mov inc rclb lods sbb and sub xchg mov mov adc jmp daa pop daa fsubs add stos nop rorb inc scas fs inc jg je or dec jg add adc push and and rclb fisubr jmp repz mov inc or add lea xor adc pop pop pop les je sbb jl ror pop fs add xor cmp push push movsb xchg inc enter inc add sbb and mov or jo or stos sbb fimul sbb push add mov gs pop mov mov adc pop pop sbb adc push mulb adcb push orl mov or mov pusha outsl ret adc nop fstps (bad) mov add pop aas cmp push push mov (bad) mov sbb jbe (bad) and cmp repnz sbb inc inc mov stos push dec mov sbb test call test (bad) js rclb sub je movswl and mov inc adc jle add add add pusha jecxz push cmpsl xchg xor loopne icebp insl lea int3 push xor sbb daa push jns das lods insb pop daa scas pop movb scas xor popa and loope xor xchg loope (bad) add xchg jo out ret shrd cmp adc ss (bad) aad dec cltd jo lea fsubs xchg test jbe adc adc push sub pop aad mov xchg xchg lret or adc jne mov xlat shl push roll jle je ret push push add adc popf inc cmp and orl mov bound in cwtl mov shlb push pushl and xchg cmp lret or adc adc icebp popa mov mov inc popa jl mov or or mov jge xlat js mov les mov loopne pop xchg adc stos dec nop mov sbb ret pop sbbl cmpsl (bad) fnop pop mov adc xlat loopne push hlt jmp pop sub push sarb sbb xorb nop enter push mov test nop ret cmp adc jg dec mov lock cmpb gs push adc clc mov mov xchg sub or out lock pop add push pop (bad) mov push mov inc adcl pop mov sub dec arpl pop shll jl xor push sti and daa adc loope add inc push (bad) mov test jne add ds sbb andl add pop adc fldl fbstp cmp cmpps and jne jle mov ljmp cmpsl inc push pop xchg push mov mov (bad) dec outsb or xor and cmpsb jno mov ret lods in dec scas rcl xor aad pop inc mov cmp inc cmp add imul ret jne (bad) mov add cmp add add insl xchg xor push pop push mov push or cmp or movsl sub inc lahf inc add dec ret iret inc clc push adc dec mov push push or xchg mov sti pop cmc push ds adc enter cmp test or shll xchg push inc xlat mov loop dec and mov nop mov int3 pinsrw inc ja out imul lods lods and sub jg push fdivs (bad) les inc data16 lods shrl mov cmp push mov add jne imul sub inc pop inc xchg adc mov push jp mov inc enter mov xchg push jg add in xlat xor mov addr16 nop lret xchg pop iret ljmp mov mov xchg or imul cmp call sub dec cmp aam loope sbb aaa pop adc dec push mov in (bad) shll push pop dec sbbl cmp das ret rolb add mov push rolb and loopne dec (bad) dec adc mov mov or outsl adcl imul mov aam adcl aaa dec and inc std icebp sub jge mov or je adc bound jae jns adc fnstcw pop inc pusha rorb inc push jbe adc xchg add fisttpl (bad) xor shrb jbe add ret add cmpsl xor and and push pop cmp sbb inc shlb ret xchg js lds xor xchg shrb jle jle fwait jno in xor push repnz in jne mov mov sbb out xor and sbb jne std js jne push pop inc or inc pushl (bad) adc adc inc sub rorl aas movsl add pusha les inc mov push std xchg xchg js outsl jp or dec lods iret fiadd roll push ss lahf pop push sub sarl add lds out xchg push aam and cmp mov xchg pop cmp ret dec adc fidivr es inc sbb pop add add loop and int3 jge jg test popf rcpps push mov fdivrs push cs (bad) cmp loop xchg xor inc sbb sbb add into xor pop add push fstpt push sbb push pushf mov shrb xchg outsb xor inc dec dec enter (bad) ret jae movsb and mov outsl dec and aas imul mov push inc pushf jo daa imul pop push mull push xor mov add inc jmp jl pop je dec and xchg adc xor push das in or jae pop adc dec jmp xor sbb or xor (bad) lock pop into jnp add add cmp pop xchg push jg jge pop imul mov sbb mov add jo stos jne lods roll out inc sbb jnp cmp pop ljmp int3 je inc cs xor sub shr mov inc push (bad) pop inc inc adc adc xchg jo icebp sarl mov stos dec sbb add add push subl out add mov addl jae sub mov add mov adc lods dec add jae,pn mov pushl inc lods dec shrl ficompl pusha cs imul push je pop pop jmp mov mull add adc fmul in sub mov loop subl push or xor mov adc xor sahf lock add gs popa add enter xchg or xchg nop pop (bad) dec push sbb por add push stos adc iret adc cmpsl movsl cmp mov (bad) mov mov add iret mov xor jne sti lock xor (bad) and and sbb sbb dec mov lret enter sbb les jecxz test jp jne push jg les jo js pop mov (bad) cmp inc aam jmp test les mov add xchg inc je js jnp cmp insl sbb add repz mov pusha icebp and inc movsb in lds or or and in ror das shrb arpl inc mov xorb push push cmp test pushf movsl cltd sbb cmpsl mov cmpsl popf rcrl imul out jl daa dec jo mov imul daa add out je xchg cmc rorb mov cltd xor mov mov xlat push mov mov mov inc jmp lret jne cmp out lods inc (bad) out add mov movsl push inc and jmp and xchg addb les fist inc mov test jb jbe sarb loopne add (bad) jg add lock dec ret xchg sbb cltd pushf rclb popa jmp dec test xor cmp mov xor adc fisttpl pop popf jmp sub and daa stc sub jge pusha pop push sub loopne xor outsb pop cmp push jo mov add pop cmc lret add add add nop xchg mov nop mov inc add mov jle adc dec dec and (bad) lcall dec add test arpl imul loope push (bad) jg pop pusha dec xor roll dec and sbb mov enter pop mov sub mov sbb mov and (bad) sbb ljmp xchg fistpll imul aaa shlb push add rclb fnstsw inc jp xor rolb mov add inc sbb xor daa push adc call cmp inc sbb not jle or xor inc sbb pop push les mov (bad) dec or int fwait aaa lds mov push and add pop push push insl mov clc adc sub repnz mov sub in adc adc sub sarb mov mov mov adc push lret push add mov pop imulb or dec jnp es es jbe cmp cmpsl sbb lock jge in add or sarl push pop sub sbb cmpb mov movsb nop leave adc shufps andb add shufps dec adc push add push (bad) push push push inc notl jbe lret xor sub mov adc add test sub pop adc jnp mov stos arpl mov adc divl into cmp pop add daa xchg adc inc xor push jo xlat scas fadds jl lret add inc add lcall (bad) ja ret test cmp fistl sub cmp lret and add sbb push cmp out rcrl or outsl clc jge repnz fcoms (bad) cmp push insl mov inc ds sub mov or inc sbb test adc ja or pop sti xor push xor pop shrb andl clc sub clc adc insb xchg es fstl dec ret or sub dec sub int3 sub add adc dec push sub (bad) incl lea and inc (bad) cmp fwait les sbb je cld inc push xchg cmp cmpsl test adc jecxz in mov or adc pusha push (bad) mov xchg mov sbb adc mov popf test or loope ret mov xor dec push out or ja mov pusha or push mov cmp loopne xchg adc cmp (bad) (bad) and or js adc into inc xor mov adc adc (bad) cmpsl add adc cwtl nop in hlt jg add sub sbb repnz pop insb sub cmp mov or mull in insb test jnp and xor jg fimull lods aaa sbb imul mov dec fimull push mov sbb fs test (bad) pop mov sbbl jns push xchg mov pusha pop adc sbb push insl test or push jbe push xchg test add movsb mov pop adc mov adc dec rorl adc cmc inc hlt or sbb or cmp sbb cmpsb outsb rcrb adc lds xchg xor shrb mov push lcall jb adc call mov insl inc add push dec push jp jg push rorb sub sub cmp les and sub sub push dec sub dec clc clc lock dec jae imul cwtl cld mov movsl sbb rorb fmul push push sub popf push xor and jl sub in in dec sub mov jmp jnp pop cmp cmpsb nop mov ficoml and push std pop inc or or push movb xlat pusha notb add cmp add pop push mov mov jle xor xchg out je lcall sub add cs jmp jno sahf loop add or rcll add (bad) xchg mov push push dec mov dec mov inc jl jns jl,pn mov mov (bad) repnz push dec or pop push mov mov sub imul jmp loop sbbl pop inc mov je jge adc or in inc jae loopne adc das cs xor push mov and jle adc or sub dec add add dec sub dec ja and push out outsb pop push adc fmul adc ja or mov into adc into adc dec add add (bad) mov dec push sbb jl fmuls mov cmp jle sbb (bad) xor pop cmp and mov int3 or dec sarl fdivrs enter jmp or dec xchg mov lcall or nop or or mov mov dec add xchg insb mov (bad) outsb push das mov in fistpll cmp pop xor (bad) add scas push mov mov mov inc xchg mov cmpsl dec pop enter inc jns js popa out sub hlt mov sbb pop adc mov fadds mov inc sbb jns sbb mov mov rolb mov push shrl push or les jge xor or or lock incb cmp dec sbb xlat xor jbe in loop sbb xchg push push movsl xor xor push ret xor adc sbb push test es inc dec or inc mov mov add inc xchg fwait inc jmp clc xchg sub test xchg cmpsb cmp inc gs sub hlt mov or mov add loop mov test cmp adc push ss lods jmp pop push test push push mov aam jmp inc mov fwait push fwait scas aam xor xchg sbbb out xor movsb js add fistl sbb mov mov or fdivrl dec mov add xor mov idivl rcrl sbb pop fdivl daa jnp insl mov lea outsl (bad) dec test and jne ret lea icebp push (bad) mov fwait jne lea pop add push pop inc push insl (bad) dec rorl pusha cmp aam ret sti sbb adc ffree inc sub add add popf sbb mov cs lret jg aam add nop stc or pop fdiv (bad) jae rclb add inc xchg dec or adc cs push iret and adc test ftst adc cwtl sub jb or jp orl or ret xor mov arpl push mov movsb inc es pop or xlat add out xor mov mov push aas adc (bad) hlt sbb adc sbb and push add add daa nop nop cmp add push adc scas or js hlt or xchg xchg cmpl inc lahf pusha add or or xor shr add adc cmp add inc mov sbb daa adc cmpl lock sub cmp insb gs inc out jmp movsb mov ret dec movsl push add enter xchg ja mov pusha xchg movsl insb jmp xchg lcall push pop push dec daa dec repnz ss pusha add sbb addr16 sub cmpsb je (bad) orl rorb or ret insl pop test push inc decl xor cmp test popa loop (bad) out das cmp imul cmp pop push dec popa jo push shr int sbb adc push rolb and inc jmp add daa add xchg inc inc mov movsb scas mov ljmp dec jbe loope int3 adc ljmp addr16 or stos adcl fiaddl push push shll sbb addl xor add mov pop or sbbb inc test mov out dec std test xor or (bad) jmp ja sbb hlt add bound orl insl cmpl cmp xchg inc push outsl adc xor scas cmp icebp and xchg mov inc add imul popa fdivl rorb add cmpl and pop dec sub aaa movsl jge rorb mov add mov addb lea xorb mov push add (bad) mov inc add xchg and cltd imul enter push loope in pop add and sub faddl sub pop and je inc jbe sbb add xchg mov mov xor cmp in or push jo daa mov ss loopne dec jae movsb call (bad) mov enter or sub mov (bad) mov jns sub mov dec pop pop mov js cli out sbb insb pop dec sahf push clc cmp jge out jno movaps push jne push cmc push aam sarb int inc rolb sbb sub ficomp push lcall cmpsb push jle sub insl and test jl stos dec adc sub call and xor popf sbb add sub cmp loop and adc in iret lock dec aaa push adc shrb aas dec aam adc iret sbb sbb mov orl imul add (bad) in dec or add dec mov xchg shrb mov add mov lret popf or jl push ds add es and ret adc and inc loope rclb add movsl xor orl mov call sbb push (bad) push in xor or pop hlt mov loopne shrb and add movsb push test out or push inc adc cmovo setb sub push jo add mov mov or add cmpsl arpl xor and inc xchg ucomiss adc jo out out scas je nop cmp sbb xchg push push mov cmp push cwtl mov and test ret scas dec popa iret mov jle loopne fwait inc jb pushf aam js aaa inc ret fsubp dec or push pusha loope jae adc and pop inc fimul ret lods ret aaa xor cmp ja push jg mov mov (bad) cmc aam pop test ret lret cmp mov ret mov or mov pop test pop sti push popa lods mov (bad) jbe cmp or xor fstl or mov adc (bad) adc les add inc stos lahf das or pop insb cltd pushf rorl movb dec inc pop idivl push jo (bad) pop mov sub or and or add xor sub jge (bad) (bad) pop iret xorb in stc sbbl mov cmp and and nop cs (bad) cmp les dec popf mov pop popf outsb (bad) bound test int3 pop or (bad) cmp mov add cmp cmpsl std dec iret iret cmpb push sbb inc fs js dec pop push sub add inc imul mov fildl clc in ficom xor or or imul push fdivrp add and jl cld dec in jbe sub dec cmp push pushf outsb mov cmp call fs lret test dec add fstpl jmp xor pusha leave es mov in xchg inc loope or sub in xor sbb and jne popf movsl xchg xchg adc mov loope cmpsl lock push jno arpl xor or xor sbb and insb daa (bad) into flds cwtl pop fs push mov xor je inc lahf inc outsl and xor out dec jne into inc inc out push pop add dec jmp xchg inc sbb ficom xchg mov fwait or push stos jo xchg sub jmp aam xlat pusha fsqrt ljmp lcall ret ss mov pop and jnp jo cmp xor push clc (bad) mov xchg sbb sarl and in push fldl push adc pop xchg adc pop add rorb daa pop or aad mov jp dec adc daa or sahf add outsl les mov es add popf sub adc sub inc (bad) out int sti or pusha xchg outsl lods sar test push cli (bad) prefetch or mov je adc je cmp jns push imull mov inc imul add dec or xor cwtl pop negl adc arpl lock cmp loopne dec sahf xchg rolb aad jno (bad) idivl stos test pop mov push add adc in popf jno sbb jp push test (bad) push in push adc push push fdivl fdivrs lock cmp out and ljmp mov fcompp nop adc jne push (bad) dec jno repz and xlat je add inc adc enter push push es pop jbe loope fs dec push or add dec push into mov and sbb push jmp add sbbl scas mov cltd mov scas lods push mov or mov mov or sbb ret mov lock jne (bad) mov or and addr16 js push xor or mov jne mov fmuls pop dec dec and adc fistl (bad) mov sbb testl in call fldcw rol xchg test pop sbb bound leave sbb push or fs fild pop pop and test add adc adc lahf mov cltd and mov mov mov jecxz adc jl dec ret fldlg2 adc push sti lds or add inc mov adc lock shl fs loope,pn inc movsl push xchg mov mov xchg xor cmp xor test (bad) pusha sbb cltd or mov insb or scas cmp mov push mov mov xchg or add inc mov xor cld adc (bad) scas and or addl nop mov or inc insb push dec insb pop jg cmp or add xchg add add mov inc fdivr mov pop clc add test sbb in push xchg in sub or mov cwtl mov inc (bad) (bad) xor leave icebp clc fs add mov xlat inc insb adc movsl xor insl (bad) push aam dec dec and mov and test out add adc xchg icebp add jp xchg pusha mov nop add ja daa in (bad) cmp xchg arpl push popa mov add je push mov push pusha lock cwtl cmp inc clc or loopne sbbl mov cs inc adc inc jge sub sti stos add add dec add inc popa inc loope dec pop and or out add add add sub (bad) push and dec je push (bad) rol pop mov lret xor inc xor cmp push (bad) xlat cmpsb sub jne sbb fdivr repz mov sbb lods pop sub or mov fild add cmp push jnp xor pop cmp inc or hlt sub lcall insb mov sti inc mov jmp push add rcll mov or jle jmp into push inc pusha jnp and add sbb xchg mov mov pop or sbb notl mov xchg imul es fcoms movsb and loope mov test enter cmp xchg inc scas pop xlat adc or inc dec and inc movl xor or pop add jo or add insb mov cwtl or push mov push pop icebp dec jmp xor and and testb inc dec inc mov (bad) add ret push inc dec stc or aas push lds (bad) xor loop or sbb dec (bad) mov pop or or sbb inc adc aas mov lock adc push mov sarl sbb or jmp mov daa sbb pop adc or sub adcb daa (bad) push pop add and dec mov adc adc adc sbb shll pop cmp push dec inc mov jmp pop mov cwtl sub xchg add cmp sbb inc fs (bad) and sbb mov pop or jno dec enter xor icebp dec (bad) flds and sub xor or pop movl dec sub cltd add mov testb loopne adc cmp shrb xchg cmp in jae jns out xchg xor pop mov jg lahf sbb add cmp xor push cmp js sbb pop add aaa or or mov or sub aas adc ja lret xor jo add add pop sub (bad) jg pop push jnp js dec cmp ss sbb fdivr (bad) loop add pusha pop push add push sti jmp cmc clc cwtl mov jne mov push push sbb jb pop dec xor jecxz xorb or clc hlt (bad) fdivs shrb or sbb jl addb pop cmp push dec push add and push add clc (bad) cmp sbb add mov pop les iret sbb loopne sbb or subl push xchg rclb lock jns push and sbb push daa jne add dec cltd lahf mov setno in jle xor popa ds adc orl out jmp out loopne sbb inc pop inc and les xchg scas add inc ss ret in inc mov mov data16 jge (bad) push iret xor and push jns cld repnz inc outsl jae pop mov pop inc sbb ljmp clc fisttp inc sbb cld jne sub mov fist imul or cmp mov cmpsl icebp inc add lea sbb xchg push and insl pop pop dec and jp or cmp mov cmpl jne ret imul sbb inc sub sbb lods add push xor inc sbb push in and (bad) negl inc inc pop sub push jecxz repz mulb movsl sub sbb aam out movsl cmp mov jecxz shrb xchg movsb jbe push mov faddp jmp add sub add lods inc cmp adc adc aaa cmp std pushf or xorb and lods ret xlat (bad) mov or inc pop bound adcb (bad) adc dec and inc and outsb movsb push mov test add (bad) dec pop sbb es faddl push sub sbb and inc (bad) xor dec movsb or jmp push jae or sbb mov inc pop pusha mov imul sbb add in dec or jo add add cmp imul xchg push adc cs fdivr in inc inc loope,pn dec mov fisubrl insb roll sbb fsubrl xor add or data16 cmp jne push push (bad) pusha mov and in or add sub adc inc lea (bad) call inc mov sub pop in push push (bad) in add arpl or add add adc pinsrw ficomp or inc sub loope lea arpl cwtl sbb cmp cmpsb and inc pusha int3 sbb and sub adcb mov bound test nop jno rclb and les fwait and ljmp sbb or clc mov mov es das add inc ljmp push lods jne inc add jae sbb stos dec dec push test xchg or (bad) jns test loopne adc inc frstor je or and push jne add or mov hlt add sub out insb mov icebp pop push das pop xor sub addr16 je outsl dec sti loopne psubusb es cmp stos xor je cmp pop xor leave inc mov mov test testb xchg or inc cmp sbb lea and xchg push jge aaa jp imul sbb add cmp add leave loopne test mov xchg xor mov add or aaa (bad) push nop inc (bad) lock or mov popa ljmp aam or mull movsl es sub adc mov sbb or push jne clc fistpl hlt mov sub js flds xchg fisttpl and (bad) adc push mov out mov das xchg pop or adc adc mov cli mov adc cmpsb adc testl out and and and enter xchg push mov sbb lcall pushf (bad) jmp addr16 sbb pushf cmp push or cmp pop pop sbb sbb sub or sub outsb shrl or sub cmp sub xchg mov dec (bad) and popa add iret cwtl stos sbb jle xlat ret arpl in push sub and adc jne sub sbb push xor ja cmp sub xchg pop mov adc jne sahf push push sbb std pop (bad) dec out xor pop rclb faddl jle sub xchg mov sub test (bad) fcoml or push fldt xor inc add inc dec (bad) mov add dec inc or or cld inc cmc sub aad adc lret mov xor add push mov jp jle icebp aaa jo ret mov push popf and out imul inc nop adc adc and mov pop (bad) aam add adc inc popa push repnz pop jl mov (bad) insb daa ja push aaa push adc lret pop xchg movsb in in mov xorb sbb adc rcrb pusha or push or push sbb add push adc pusha adc cmp lret pop je (bad) push imul in out or inc push mov xor and repnz sti addr16 xchg inc inc aaa mov sub adc sahf inc int3 movsb into mov mov push pop data16 adc dec pop jne mov mov and (bad) movsl dec jae cmp jne pop cmpsl sahf jo loope sbb jle pop mov and rclb cmpsl out add mov push sub fistpl addb lret mov test mov cmpsl cmpsb push xchg and push pop adc add xor icebp xchg push pusha shll xor sbb mov pop push or flds sti add rcll inc or pop daa add mov xchg cmp xchg test pop imul pop or add scas lods adc andl mov xchg and push mov and dec jp pusha out add jmp je minps push push sub adc dec jne ret fwait inc das xchg pusha (bad) daa push insb jbe mov push and inc inc or fcomps xor dec mov mov movsl (bad) mov rcll push jo movsl ds repz in mov xchg rcr xor push adc test shrl leave lret or push dec push fcoml stos inc mov cmp mov iret pop popa inc xor pop xor jecxz inc jae inc das loope arpl aad cmc xor lret mov push nop pop xchg inc (bad) jo xor mov and clc pusha sub or add shlb mov sbb sbb push std pop aaa inc insb mov xchg scas jle push pusha addb push or mov in inc bound or rcrl push xor lock jnp dec loopne ss ss es dec lods mov push lahf and in xor xchg mov and test cmp nop (bad) enter shrl adc push cmp insl iret pop unpckhps mov pop lcall cs repz and push sbb pop adc cmp cs sub sub jmp adc mov jbe add or ds cmp dec popa mov sub pop xchg and mov jecxz fwait mov and push aas cltd pop jmp sbb lods inc xorl lods inc jge fstps pop das fadds sbb or jb insl push js (bad) (bad) pushl jle inc xor pop lret and (bad) push push pop jmp adc dec mov aaa mov (bad) cmc xchg push dec loope lock es or push les xor push aaa fcomps add jg pop nop or add pusha pop ss sbb or cwtl pop cmp int in push jl or dec push pop mov sub repnz into xor jmp push push and and jg mov and fidivr mov fiaddl and dec and add sub jo dec or or sub mov add and movsb inc cmpsb xor pop (bad) sbb dec in js pop jp int3 jns cmp jp pusha outsb pop aas xor sahf dec fidivl push or xchg insl mov push dec or test adc cmp popa mov mov adc popf test inc inc dec push flds into xchg or popf hlt xchg sbb fld popf outsl mov jne int3 xchg pop fwait das adc mov or lcall movsl aad roll xchg add (bad) (bad) adc loope xchg lods cld adc mov push add add lock jno loope out jo adc out mov subl xchg pop outsb js dec sbb sbb mov push daa lret test adc sahf and mov inc add mov mov sbb mov imul pushf divl mov adc test cmp ljmp xchg lock and inc xor push xor adc sbb lret inc xchg mov mov call cmp jnp cltd pop mov xor jg sub sar loopne sub repz repz das test in pop addr16 pop int3 (bad) mov inc dec xchg mov or add js push daa mov data16 mov std or and call push enter mov aaa add mov (bad) sbb or jge ret inc cmp daa jg adc lock or inc or mov test sbb and (bad) or (bad) scas jmp es call test clc lea fsubs push cmp inc mov push sbb adc push (bad) cmpsl mov lea pop dec mov inc pop dec cs push sub (bad) mov pop inc jne mov adc call push sub push hlt fnstenv addr16 jmp popa movsb cmpb mov pop jo lock adc cs sub mov xchg inc jmp test or xchg xor (bad) je pop in imul sbb and or popa sbb sbb stos add and jmp outsb cmpsl jbe dec enter out add cmp fdivrs aaa lcall mov sub inc sub insb fs test xchg movsb jb xchg js jl lret cs adc nop hlt mov sub cltd adc fistl sbb xor dec dec push add xchg pop dec dec inc add insl lret fadds inc gs (bad) pop push gs and inc out test das popf or add push insl jo pop adc pop das insl lea out fadds outsl mov jae pop cmp jno das mov jo cmc sbb push enter mov not adc adc out adc rclb lods adc mov sbb popa iret jno mov test pop mov or (bad) leave ret sub push mov jmp sub fdivrs jmp push adc dec movsb mov hlt dec and (bad) mov or (bad) dec mov inc and inc push add mov je loopne or push sbb inc sbb pop sub sub jge mov add mov and or and or jb xor push cmovne (bad) mov inc leave sbb xor mov pusha insb pusha pop cmp push or repz mov dec ss icebp inc mov mov cs and loopne mov add jg rcrb les iret pusha js std out movsb sub cmp or fcmovne inc xor flds out pop lea inc push mov aas xor das dec outsl sti pop push mov cld or or pop insb xlat mov push push or cwtl sub cs inc stos out lock push andl icebp popa add jnp movsl popf (bad) sub das leave cmc mov outsb pop mov dec sub xchg add or mov dec mov loop sbb mov inc or adc mov dec (bad) cmp mov movsl push ja in inc jp iret subl int mov add sbb mov addr16 cmp cld pop test cmp leave or sbb out adcb push pop daa xchg icebp cmp pop sub setb sub mov inc mov mov cmpb das clc (bad) out jnp sbb jnp sahf or fdivrp push adc imul xchg xor cmp push jle emms pop sub add decl push xor rcll xchg sub lea xchg leave sbb fnsave loopne lock jo jb adc mov or ja lds pop adc jae stc adc or fidiv hlt pop les ficom xchg icebp push push bswap xor inc mov dec or xor push inc sbb mov out mov jb push push mov in pop sub mov mov sub mov mov push xor mov or incl and mov sub or sbb xor push icebp popf push sbb add (bad) fist out mull bound pop push mov test sbb test aaa jnp add lea jnp mov pusha inc or push inc dec movsl pop (bad) out fstl fs sahf hlt sub pop (bad) cltd fsubrs pop mov and dec sbbb cmp sbb or adc movl sub scas mov fs test xchg push aam xchg test add dec add inc xchg fcmovne pop xchg add scas insl shrb cmp pusha sbb lahf pop sub add and orl stos out nop sbb dec fs mov enter pop pop add mov jns push push push je out jl test pop xchg push mov cs outsl pop lsl push std add lods aas add and push push xor add mov aaa int3 notl lods (bad) mov xor arpl lcall iret push push mov mov mov mov xchg aas add xor xor push add imul push lea push (bad) mov add jnp and sub lret fstps xor jo inc out mov mov (bad) leave (bad) (bad) movsb jnp push xchg adc inc adc cmp xchg add xor icebp jle ja add inc (bad) push adc sub inc aas add lea scas enter lock jo lret aas (bad) les inc xchg outsl xorb xor jp or cmp test xchg add bound iret inc xor adc sub (bad) ja arpl sub xor and addr16 inc mov lahf repnz andl loopne add or lret aas fsubl scas adc mov aad and leave cmp pop je dec (bad) out rorl cmpsl cmp jo fidivrl test mov adc sbb ret hlt and sub add lea sub jle mov and adc lock arpl sub js push lret sarl sub loopne pop pushf dec cmp push jmp xchg mov inc loope mov call les ret das adc mov (bad) mov inc inc (bad) out inc adc push (bad) in xchg pusha xchg or or xor popa add lcall (bad) sbb call sub cmp ljmp sub loope aam or cmp mov jmp lea insb and and test xor push dec (bad) aas push push push scas sub and jge inc gs push jbe push adc aad xor inc mov and je add cmp inc aad ficoml rcl cmp mov and add push adc (bad) dec sbb sbb std data16 inc mov add outsb cmc inc adc inc arpl jnp push daa inc and xchg xchg xchg push push (bad) mov test dec sub add mov incl inc dec adc rcrb inc out add (bad) or xchg cmp cwtl out int3 les andl in xor (bad) sbb loope sub adc push je mov ror adc rcrb sub inc mov or inc add xchg addl lcall dec dec cmp dec pop mov and daa or or (bad) in push xchg or daa push out or adc outsb jo dec pop push dec out fmull scas scas sub pop xchg or js jecxz and scas out push inc into inc aaa sub pop imul fstl sub jnp inc call sbb mov adc pushf jns cwtl dec jne test sti add out insb jnp (bad) mov pop dec and clc movsl inc pop aas insl popa inc jnp call aam andb pop and insb mov popa rol rcll xor xchg add lods push cmpsl and pop sti cmpsb cmc xchg mov or sub add add adc add mov rcr and loopne xor js lods xor icebp sub pop mov out adc aad sub into js int inc or pop (bad) cmp (bad) jb (bad) je test (bad) fsubp je aas enter jl jl cmp push outsl or inc pop nop orl insb jns push (bad) mov mov lea mov sub mov mov vmovdqu pop pop cmp sbb repz je (bad) repnz rorl sldt xor cmp imul xchg test or out pop push or (bad) je sbb daa add mov orl pusha or and pop jno mov imull ljmp mov imul adc or mov inc (bad) out or pop add mov jne jns adc add jo loopne fbld push jge and clc mov xor inc (bad) adc xlat mov mov sbb mov daa inc ds pop sbb sbb xchg es xchg sbb pop jmp das adc movsl cmp fsubrl add mov stc push sub popa fisttpll js add cmp push jmp jo imul jle and dec pop outsl fimull cmp negb mov jne (bad) int dec dec inc inc daa lcall inc push sub dec push aam push sbb jg pop push adc push jb imul aaa pop xor and scas pop cmpsl adc pop sahf push and je dec rorb mov mov push inc or push aas and dec push aas cld movl and xor inc and sub stos dec and sub dec inc sub pop rcll push das xor jge mov push mov call aad cs test (bad) adc clc jl cmp stos push push xor jnp xchg (bad) pop xor hlt js inc cmp inc add jo and xor daa jbe jne dec or les xor stos and fnstsw mov push add mov call cmpsl dec jecxz mov aas mov mov xor dec aam test mov or and xchg ret (bad) and jge xor push sub out or dec jns lock dec and icebp pop xor or pop dec out xor push call sbb (bad) add pop push pop in adc mov lods push mov iret test sub mov rol jae inc xchg sahf adc push in ja pop mov jns cmp (bad) dec push das movsl js or sahf inc inc fs icebp or dec mov movsl xor cmp push mov mov adc je aas inc int3 loop mov xor call jno cmp pop dec mov call mov mov fisttp ja jecxz cmp dec sub js xor fmull sub mov xchg xor in hlt inc hlt mov inc cmp jecxz leave inc adc push stos or xor push dec mov rcl inc cmp xor adc inc adc and push decb or test jno xor dec push adc pop (bad) mov and push dec jle jo push mov adc test inc cmp xlat ret xor dec jae sub popa pusha inc inc pop test sbb add or adc jg rcr aam dec fsubs loop aad imul js repz insl gs inc xor add fcomps imul push sbb push xor adc adc cli xchg pop jg add jl (bad) mov xor (bad) jo inc add insl add mov insb rorl push pop or add push pop adc lcall adc mov rcr mov mov inc push adc pusha push in cmp in ud2 popf fs sub inc pop loop outsl push xchg stc push xchg out sbb fwait adc jae cltd xchg inc pop dec sbb cmpsl adc cmp inc push inc mov inc add mov add xlat cs and shlb inc es (bad) adc popf aam or or imul and mov xor sbb bound dec push es mov sbbl mov inc and movsl mov stos ja sub lock clc adc xchg add fbstp int3 negl in mov fadds add lcall mov adc ret or and and xor xor icebp ljmp inc cmp jno pop xchg and sbb pop mov das jbe mov sti xor subb mov cmp add clc andb ljmp inc or mov cmc push nop or inc inc ret cmp or jmp sub insb push xor pop inc mov ror dec loope sub inc imul les arpl inc mov or push or arpl mov mov sub dec xor sbb insb jl pop sub sbb shrl jo roll scas push je mov ret cmp adc ja lret add test fildll mov xor out pop xchg aam pushf jg push and sbb lea shlb aas mov mov sub mov (bad) cs and xor dec inc xchg and or pop stos dec ljmp inc rorb popa roll test cmpsb cmp pop pop cmp or xor xchg push cmpsl mov mov out scas movl les cwtl cmp cs sarl adc xchg add and stos adc dec mov dec hlt mov adc push das test xchg decl push dec sub les and test or add xchg inc xchg add lahf rclb pop popf iret add fsubl inc sbb mov in adc xchg movsl (bad) ds scas sarb jne mov add test cmc sbb fwait jo cmpsl sub inc xor sbb push xchg add inc or mov jge lock adc mov in cmp mov sbb test xchg (bad) ss rclb xor or dec xor mov movsb mov call push fidivr push cltd imul mov push movsl mov rolb xlat lock ret cmc inc fadds and lret stos sub add mov or fs dec in inc xor imul push jmp inc mov das cmp mov loopne pop lock xchg pushf pusha xchg ja xchg aam sbb pop in push fsubr pop xchg and lods add mov clc push xor sub ret sbb das in mov dec and push das test push loop sarl push push scas mov fcompp xchg icebp adc dec cmp pop test test (bad) lock fcmovnb cmp incb jne jmp es cmp es push mov out xchg out dec cmp or or push shlb lock dec mov push jecxz cmp les and out push arpl xor int inc jmp sub mov mov and mov jbe jecxz pop lahf in xchg (bad) xor cmp jne out add adc dec dec int test in add and lea cmpsb sub in inc mov xlat and sub fmuls jb push mov push adc add mov popa orl cmc fxch push call add dec sbb cmp push sub adc cmp dec test push mov xchg fdivl imul aad inc aam xor or mov xor inc pop ret or inc jle decl cmpb xchg add pop movb imul les add outsb xchg jo mov add lods push mov xchg sbb mov cmp jno add push out push mov adc or inc pop push (bad) dec ss sbb add data16 and push aaa int3 inc imul mov push push scas pop or lcall jb add sub (bad) jle adc cmpl add push bound insb fs aaa sbb dec inc push into push sbb mov adc add mov add and adc sarl or icebp push mov les mov out aaa pop and push inc fs arpl or push and or and subl add movsb mov add subl mov fcmovnbe pop mov (bad) adc mov push or addr16 sub cmp or faddl adc lds (bad) ftst pusha dec or or imul add cmp inc mov inc inc scas fcoml adc inc loop mov clc xor pusha hlt nop push dec rorb fs cwtl hlt inc loop jl push push push jns cmp je nop push mov aam adc pop out shrb cmp rcrl pop cmp pop push sbb cmpsb mov jno sbb cmp aas cmpsb jo xchg mov ja pop inc pop nop xchg je inc mov adc mov out mov xor dec push lahf pop scas fistl xchg stos in pop in jmp mov in push push inc pop mov pop sbb in sbb fs mov inc movsb pop inc test bound (bad) adc or daa rol or mov push adc cmpsl jnp dec sub gs dec cmp sub lock add cld ss sub nop push or sub sbb sbb jnp inc mov add xchg push sub pop mov cmp pop and jns mov insb lea paddsb pop push jne cmpsl inc xchg shl xchg cmp lahf cs xlat cmp mov or cmp nop or inc aas nop sbb sbb or add push test es inc or sbb dec ljmp ret push jae enter clc insb and test cmp hlt lock mov int arpl nop mov mov lea hlt mov and sbb inc pop sub test jo bound das mov push dec cwtl adcb dec fdivrl in and mov add pop cmpsb jmp push (bad) pop daa clc sbb dec sti push sub or push push pop cmc inc dec jne hlt sahf sbb jl or inc mov ds lahf mov cmpsl mov jp pop es push push cmp lods rcll adc jl add xor out popf cmp xchg test mov movl adc mov out add mov lods mov and or (bad) cmpsl and jle sub stos dec mov adc call inc add movsl aad rolb xor icebp cmp nop orl cmpsb pop movsb inc leave add in (bad) lds pop adc fmul jg iret or inc inc mov lods loopne mov enter cmp sbb fwait pop out andps jle xchg dec inc cmp jo mov or jo and jg pop and pop xchg push iret or fldcw xor jg (bad) out loope jb fstp jae mov push sahf add sub popa imul rcpps sbb jo loope imulb sbb and push sbb int xor push push add (bad) xchg ss mov xchg mov js,pt cmp aad dec mov fdivs xorb imul nop call inc pop daa (bad) fsts or adc and and popa pop or and loopne dec xchg mov pushf mov mov inc xchg push push popa and imul jecxz or sub or push jo roll push imul add add in xchg out or mov dec fimull les iret movsb jno push push lods out into inc sti xchg nop movsb xlat mov adc push push push and cmp inc cmp pop (bad) (bad) mov xor xor xor inc sub ja mov dec dec dec dec dec dec dec addb push push push pop pop pop push lcall push cvtpi2ps xchg (bad) popf and xchg fcompl adc aam shrb sbb sub xor inc test mov rcl or and testb data16 and cs in add add xlat mov jns adc pusha test insb cmp push mov pop push pop dec adc incb iret loope pop jb mov mov and sbb jge add in fcmovnb adc jnp push dec mov add push (bad) iret mov jge dec jnp imul or sarb adc pop cli push sbb sbb call movsb das inc push xchg mov adc rcr orl jmp loope add out mov jmp inc inc std jo mov dec pusha sub fs and sbb loope aam or jb leave xor cmp cmp sub mov add add and dec mov dec sbb adc pop xchg xor lock hlt mov inc adc push push cvtps2pd cmp hlt pop lahf mov push ljmp fcmovnb add imul aas xchg mov mov pcmpgtd push sbb inc idivb dec rcl adc sbb into sbb out mov rorb out inc jmp popa inc xor dec sub pop xchg add lcall adc incb or jmp inc (bad) sti push add dec adc add or pop lods iret inc add or dec shl and and mov out and loope (bad) xor nop mov mov mov adc inc pushl sbb mov lock jmp add pop incl or mov popf or cmp jg mov ret mov add rorb imul adc (bad) insl clc mov dec outsl add pop sbb add adc push call add es sub or in outsl sub (bad) rcll cmp ja jo fdivl push dec pop xor jmp ss xor in xchg sub xor fildl leave pop nop pushl aaa in or adc in inc sbb (bad) cmp and inc iret in popf (bad) in dec cld leave add mov dec out enter xchg (bad) test cmpsb mov xor daa and inc sbb cmpsl add xchg add mull inc imul mov xchg push xchg add cmp xor add push push mov pop fisubl xor mov xchg clc cmpb fnop mov or sbb movzbl cmp fisttp or test inc daa xchg ss push mov push inc mull movsl aad leave or cmp sbb dec js dec dec cmp in add and xchg mov ja dec lea adc mov imul push aaa mov and sbb cmp inc push jo mov aas or jl das setbe push fwait mov ret jns dec sbb adc ds inc add cmp add aas sub add sbb int3 mov push inc mov test sub (bad) jp not mov and sbb aad sarb jmp rolb in (bad) mov jle (bad) adc sbb das cmp lcall sbbb rclb mov and loop dec pop add xchg pusha and test or add jl sbb fdivrp or sahf cmpb dec das leave adc pushl add push dec xchg or popa shrb or fucomi dec pop pusha sub mov adc pop push adc fs fs add sub mov pop mov push dec rolb repz and inc sti (bad) push sub (bad) push adc aas jno lock push aam cmpb and or sbb dec in jo sbb push xorb lock mov add adc mov push cmp cbtw pop leave mov or imul in sbb addb xor pop cmp sub xor inc into pop xlat or fistp sub jecxz jmp and xor or (bad) push ss and push pop push pop or test pop (bad) jae pusha sti cmp pop dec sub sbb std in adc pop mov into adc pusha or inc push adcl and lds and inc test pop sub dec dec dec sti push fwait nop mov mov aas or ds jne inc push cltd je jle push fdivl xchg mov xchg loopne adc mov jmp and or mov es sub movsl (bad) loopne xor mov mov outsl ds push dec pop lods testb or jb stos fildl cld fnstcw dec repnz mov mov sbb mov shrb dec daa mov dec mov xor ficompl push push adc sub jnp mov es call test adc je mov mov out pop je adc and lcall loopne clc or push popa decb inc pushf test pop negb xor sub jg push mov jo add push and pop ds daa xor lret fadds or lds sbb add flds les dec cltd shrl out inc cmp adc fldl ljmp mov mov and dec out xorl or mov ss push loopne mov or into xor rcrl pop or rol or or hlt jge sti cmp mov inc mov mov pushl push add test sbb ljmp add dec sbb xchg xchg hlt jae movb xchg adc call dec loope mov mov xor jecxz insl sbb ret push and pop cmp aaa add orl je jae subb div jb or sub sbb xor and enter rcrb addl push xor shrl in lock adc arpl call jle hlt adc iret mov mov pop scas or inc cmp clc add jne addl sbb xchg nop icebp adc orl pop and mov (bad) mov and and in and out cmp push addr16 jae sbb add or and dec push dec add movsl xchg inc mov or mov push push (bad) or fistpll jge lea sbb mov adc arpl pop fsubs insb stos mov lods sarl sbb mov pop xor xlat or xchg cmc adc xchg lahf xchg movb mov pop adc flds mov iret dec pop das loopne enter lock hlt fcoms frstor jge das std xchg jo add xchg mov inc mov cmp inc cltd pop inc cltd clc outsb mov jle sbb rclb sub les push sbb ss hlt loope mov mov or dec out popa inc dec push inc xchg ret hlt mov es or lock inc xor jl add sub xor pop and inc es dec sbb cld jno sbb pop mov push dec and cmp decl push fmuls jns imul addr16 fsubrs dec push mov dec xchg loopne mov xchg xchg test lock inc cwtl pop cmp lds dec jge mov popw push push inc adc pop (bad) std mov push fsubrs adc imul add mov pushf sub pop dec jge inc insb arpl xor mov cltd add add mov fwait pop push or loope dec or sub add push add inc push sub adc add lock roll rcrb or ret enter mov add lea or imul cmc sub rol dec mov cmp add sbb mov insl (bad) mov xor iret es lret hlt cmp hlt xor into hlt sub inc add je add rep or imul test (bad) jo xor or mov leave lock rcll add lret jp ds pop inc inc negb fildll push nop xchg cmp dec insb loopne sti fsubrs adc xchg lea ja add clc loopne mov test and outsl ja ss jge aaa fistp dec push je sub sub test sbb add daa call mov in das ja or pop mov dec jg jl iret push inc mov imul mov sbb add or jp pusha dec loopne and xor ret fisttpl dec push adcb xlat xchg pushf or (bad) or movsb add xor bound mov sub jmp and lea ret sub repnz push add pusha mov cmp test or pusha data16 or call fsubs ret or dec inc out imul push in sbb stos adc and popl adc jo mov leave adc push jns call in mov sub sub xchg cmp je clc xor add lods lods nop xchg lret clc sub inc ds xor inc enter dec lock dec clc jb mov or xchg dec fcom test fnop arpl loop pop sub push pop xchg subb pop cs sub pop clc lock dec call test inc mov movsb leave test iret mov pushf sbb and or or mov cmp daa jnp loopne mov push dec adcw jl imul sbb sbb incb add adc fs mov imul and adc insb cmp mov mov fwait jae inc sbb nop jl jge add push nop push in push sbb pop adc cmc cmpsb lcall lea and int (bad) mov fsubrs push pop sbb js inc push fidivl inc push sbbl and adc xchg lea outsl fs insl fs test or bswap push fs xor fs jl hlt lock mov pop jl or sub fidiv push dec je mov test push or pop mov sub or xchg out nop sbb dec loope pop inc das pop fmull sub outsl push (bad) adc xor mov mov lock sbb xchg (bad) mov mov hlt mov test popf imul mov adc (bad) incl mov ret je decl inc add (bad) push push iret xchg inc dec arpl dec sub xchg jmp dec sub push or addr16 pop mov push or stc icebp mov or ds out inc repz adc add pop cld mov push (bad) pusha and test loopne add in ja or dec sbb (bad) and jae fdivl jge or movsb push adc cs dec inc push and add cmp push add xchg and sub jb aas aad or sbb in inc pop incb add sub imul mov movsb fstl lods sub xor ret adc dec sbb cmc or push ret insl pop xor adc sub lock pop mov dec js cmp clc imul mov lods test leave adc adc pop jp aas fildll in fsubs pop (bad) xor cmp xchg or je inc push adc add imul mov pop push xchg jo or cmpb jl or je and ret pop xor inc nop dec and (bad) cmp add dec add push mov and mov inc out aas je popl pop push aaa je mov push divb adc pop movsb inc mov test inc int xor mov or repnz push ds dec pusha push fmull pop mov outsb fidivr shrb push inc inc adc dec je push (bad) lock mov mov push ret push arpl add jnp sbb test fwait mov mov jno cmp clc imul xor lcall outsl pop in je lahf cwtl (bad) pop cmp cmp pop lcall gs and leave pushf (bad) or sbb fsubs fimul pop lods xchg es adc mov push push mov push xorps push cmp icebp push add dec pop mov and popl adc shrb je inc rcr aas mov aas jbe and repz dec aas popa loope subb pop popa bound hlt adc and and push push test push add adc dec insl mov xor cmpb sub xchg or insb imul sub cmp sahf gs or rcll jecxz inc and push add ret rolb push in test lahf and rcrb or cmp rorl xor scas cmpsb inc inc inc adc push arpl sbbb jo adc jmp sub (bad) lret insb sub mov add dec repnz xor push sbb and push jo pusha xchg pop mov jnp ss js sub dec xchg jmp pop xor mov push adc loopne pop and sub jmp xlat stos lock jno xlat or js les test jno inc dec fs lods ret rcrb mov insb adc dec mov out lret enter inc inc or mov cmpsl addr16 adc ljmp ja mov mov mov cld and lods out scas out cmpl add jo iret int jge xor xchg cmp adc or cmp loopne dec popf cmp pop mov mov xlat jle stos movsb pop inc lret push cmp hlt or cmp jnp sub js pop add adc or xchg and pop mov lods mov jb shlb mov rolb xor sti rcl arpl ja mov mov inc (bad) push pop pop mov inc sbb movsl pop emms adc xor jge inc pushl jle dec (bad) xchg jne jl and or jle push push data16 mov mov je mov xchg adc push sub dec jne pop xlat mov dec pop and dec scas and mov and cs xor xchg mov and push adc je inc and pop or mov and inc in inc imul add movsb push jnp bound cs out xor or dec jge mov xor mov jmp push sub jl pop push mov add xor ja add imul adc mov into sbb xorl xchg aam lods ja mov inc nop mov jmp jmp incl add add mov jecxz and xchg inc or add cmpsb pop xchg dec ret xor sub or pushf xor movsl fwait insl (bad) sar call cmp int3 mov loopne out jge dec jle push outsb xchg ljmp inc add repz mov mov push inc jmp loope or out ret dec mov (bad) push jne fadds fildl inc sbb repnz inc test nop cmp sub push mov mov push or cld push pushf jns push inc pop push sbb aaa pushl dec inc add adc xchg icebp pop mov mov outsb and aaa cs xor sbb or xchg xor cmpsb add rol loopne mov call adc inc out out imul testl in ss mov repnz mov or pop adc inc es loopne test cmpsb jbe rolb enter lret out add pusha jmp jle fs ss (bad) bound dec lds mov adc mov or adc aam pushf jbe and jne dec push pop dec xor outsb je cwtl loopne fs sbb outsl push aam je push sbb clc jne repz xor ret cltd shrb test lret xlat ret sub enter lea movsl adc dec fwait jl data16 int3 push stos push imul lds inc push gs mov push (bad) xor pop cmp add test and popa jl dec add js loope jnp sbb dec mov add xor and push xchg (bad) xor add dec push ss mov sbb mov inc mov add xor sbb inc insl cmp bound inc fcmovnb jl movsb loope add sub sbb jle test adc adc dec pop fstp and cmp adc push xor or loopne pop iret and test inc add adc imul ret clc pop sbb shll addr16 add (bad) rcl jne in push sub add call or sbb add push sub jno and aaa cmp aad mov sbb bound mov pop bnd mov mov jmp movsb imul out xchg test pop into mov add in pop cmp pop cmp mov mov cmp add pop mov cli sbb outsl nop js lcall adc mov dec pop xor jmp pushl sti jl inc test cmp mov and addr16 movb dec add mov imulb pop inc sbbl in testl or inc test inc mov dec daa add adc xchg popa pop jne outsb loope add aad mov fs jle,pn aaa dec and dec inc jne mov pop push imul mov fs adc pop cmpl lea cs aaa (bad) push ret add add xor push cmp push and or inc lock adc xchg xor sbb aaa aam idivb mov clc jb xor inc mov sbb mov lds adc cld fdivrs inc cmp sbb rcrb dec add xor inc xchg xchg sub jae xchg fs repz xor xor outsl xsha1 cmpsb or and movl into pop push xchg clc bound xchg push push lahf pop pop xor daa pop ret inc or push cwtl ret cmp mov or nop daa fs or mov push pusha xchg push je das hlt xchg mov adc sbb mov movsb sub sbb (bad) (bad) xchg rolb hlt lret sahf push add mov jecxz (bad) and loope push pushl ret add data16 pushf pop rol push or call out mov pusha shl scas aam sbb int3 sbb addr16 js int3 js sub lret fldl push dec (bad) mov call jbe inc loope divl rcl jno cmp cmp dec pop sbb lock fwait ret push adc push out xchg sbb or add nop dec xor les cmp cmp in add push loope or and dec sub sbb loopne push ret cmpsb rcrb pop (bad) and adc push push inc xchg insl ljmp ss sub rcll or mov adc popf or add push add mov movsl es push add xchg jbe mov clc mov and sarb lea fcoml pop sub cld in mov lods mov insb rorl ror xchg sub inc je (bad) jecxz leave push pop add aas xor add test (bad) add sbb cmp jp add into or daa aad add lret xor or push call cld push pop mov pop and push rol cltd and jmp jo inc inc mov mov inc loop push cli pop or or add push jge mov mov inc sub push and inc or je sbbb in mov add cmp cmp mov fiaddl dec push push cmp push dec sbb push or repz inc addr16 lret (bad) repnz mov and add inc push sbb roll pop clc mov xor pop andb bound inc jmp cmpsl fwait mov add or jo iret add xor push sub lcall pop cwtl shrb pop jge lock bound inc je sbb inc cmp mov xor and (bad) cwtl dec pushf mov ret ret mov cmpsb lea pop push xchg movsl adc pop pop push cli ss lea hlt adc dec lea xor jmp cs jno test mov dec and into daa imul sub inc mov cmp push lahf pushf test pop movb inc push add je inc add or jg dec push inc cmp pop clc jb pop mov int mov jl mov das (bad) sbbb sbb pop bswap adc imull iret cmp sbb fisub or shrb xor add or outsl or push (bad) testl aaa aaa imul mov jbe jmp pop sbb cmpsb adc inc js push cltd inc pop aaa pop test out push xor out das mov adc bound (bad) mov mov cld mov cmp jle jmp xchg pop insb cld ss outsl pop lds or xchg xchg push sbb insb adc cmp xchg pop xor out cmp aas enter pop nop iret dec inc aaa sbb xor dec jno xchg loope iret pop adc mov nop or test addr16 sahf or adc sbb mov test add xor adc push sub xchg cmp cmp xor insb ret xchg add jg push subl (bad) jmp xor out push (bad) mov (bad) in xchg push daa jo fnstsw jecxz and mov clc mov jns or loope jmp hlt pop pop adc pop cli imul lock xor lds push mov xlat push and call daa (bad) aam or mov sub in fimul xor into ja mov jb mov insl test mov or cli xchg clc inc adc movsb push or push sarb (bad) hlt jmp hlt xchg jne sbb out int3 or adc subb mov or jl adc sbb sbb decw mov lcall or imulb (bad) mov fwait jmp and jge dec or or icebp add xor add push int3 push icebp std push push in aaa in jge sub push or xchg inc je pusha pop sbb push ss leave push clc pushf lods push jp addr16 lahf add dec push rol test adc add xchg add dec or cmp test ss test movsb cmpsl cmp jp sbb xor rcl lahf push mov pop addr16 inc push loopne cmp push aaa sbb in push mov pop push pop fcoml mov push xor pop mov jmp xchg mov je pop mov push xor int3 lcall dec test leave mov adc sub or add inc mov fild (bad) sub (bad) cmp cmp add ss rolb lret orl mov push xor fmuls mov pop aam lock xchg push inc adc arpl jg dec push or idivl aam xchg ret movsb jno aaa push pop add mov setle repnz dec ucomiss push and outsl mov xorl cmp call sub test insb dec or push scas scas sub sub je sub je or pusha sti inc pop add sub adc xchg es push and push pop movsl dec (bad) (bad) into nop mov leave rorb add loope pop movsb jb imul std mov testb add add jl jl add les movzwl or adc fisttpll add xchg and mov sti leave hlt ljmp daa int3 adc or das dec mov mov xor popa cmp imul ja shrb leave sub jge aam loopne adc enter inc add xor xchg xchg inc or dec jge cwtl ret insb imul push dec rorb mov cmp testb and pop enter add lock dec cmp mov and xor (bad) test pushf sub fmull mov cmp mov mov lea push add cmpsb test call xchg rclb int3 idivl ss cmp ljmp lea jno sbb movsl mov arpl mov pop cmp (bad) push cld push adc dec (bad) pop insl (bad) push leave xorl and add cli and push or lea jmp mov fcmovu aad aam jb dec sub dec cmp dec pop mov or push andb inc push xchg jns mov cmp bound inc (bad) fdivs push test xchg push dec mov insl or aad pop dec in pinsrw xorb dec add mov cmpsb sbb lds xor int3 adc mov or mov or add das push push adc add push lods inc jecxz jnp or adc mov (bad) mov cmp or jg add add push movl xor lcall xor cmp inc push jg add inc cmp inc popa add mov xor cmpsl fisttp fnstsw lock divb fbstp push push je mov adc add add (bad) or xchg aaa pushl jo addr16 push in cli rclb cmp std jmp jge xor ret sbbb or sahf cmp push xchg or mov xor or push pop lcall ret test dec cmp mov push xlat pop cld jle clc loop std pop std mov dec pop cmp inc xor xor xchg test xchg sub gs sub xchg std sbb pusha lcall sub jl jae sub mov pop imul ja inc and push dec push stos lds and push dec stc popf and xor and push adc and sub (bad) adc loopne das sbbb call xor xor or test dec stc or fwait mov testb scas xor add cld inc lods sbb or dec mov add mov xorb dec es aaa pop adc push mov ss or bound inc add mov jo sbb mov orl cmp nop je (bad) jne icebp lea or ret daa insb cwtl inc scas enter sbb (bad) mov adc push add jmp fdivrs pop inc jg mov sbb pop out daa sbb push shl sti jl mov and adc and and ljmp test (bad) insl test inc js ret mov pop adc dec rolb cmpsb test sbb movsl test repnz aaa mov jae xor cld xchg test jge out dec inc mov cmp jns push ds xor ss cmp sub sub aam sahf idivl test inc sbb sahf jnp cmp adc push adc mov fdivrl in out push roll xlat (bad) insb nop lods mov movsb test xchg adc outsl scas shl mov jae mov js jge lar cmpsl dec push ret jo xor hlt repnz aas and pusha inc or cmp pop popa add dec mov or js add sbb xchg cmp sbb push jae pop push xchg repnz insb or jae inc jle or dec outsb arpl (bad) inc xchg out dec pop mov test push stc xor lods mov jne ss adc ficoml je lock in ror push adc xlat inc les loope loope fsubrl jmp and arpl out mov xor jo push call test push cmp and mov add nop xor jns mov dec cld pop sub arpl iret lods or je out push pop shlb aas or or fisubr sbb stos add sbb in lahf or enter pop inc xchg (bad) vpmacsdd or aaa cmp or cmpsl sbb testb int in push ret push push and lds pop mov push insl outsl mov jns push out mov movsb lods (bad) cmp jmp out fildl or push fadds sbb inc jl add mov pop cwtl (bad) mov xlat pop dec lcall adc mov imul subl mov cwtl mov push sbb repnz movsl xlat inc call cmp out cld out mov sbb (bad) orb cmpsl jo (bad) imul jmp aam inc ja jo or fistpll (bad) fsubs mov fadds insb out mov bound push adc adc jp ret xor nop xchg pop xor ljmp add mov xor mov je xchg dec or cwtl or or out loop dec adc inc mov mov dec mov cmp bound or notl sub adc loop add es outsl or push outsl mov call jl (bad) out sub movsb sbb mov adc imul std mov dec movsl sbb out mov jnp das mov popa ja insl adc or cmpsb sub ror ja sub imul rorl out in in rcll and adc mov cld (bad) or mov outsb fstl sbb or test addl xor mov outsb jne sbb adc lret push adc mov test push or add loopne iret inc (bad) lret pop adc mov pop adc in adc (bad) in rolb cwtl into inc and push gs cld push or lea mov cs xor (bad) test inc imul mov pop dec lds pop push (bad) mov cmp fs mov push jb clc and xchg jns adc out jns cmpsl mov scas push js test lods xor int3 insb pusha and sub test xlat sbb inc or pop ds rol and outsl clc (bad) imull movl xchg mov or imul or iret inc rcrl (bad) andl rcr lret add xchg push jne jns pop test pop sub sbb xchg add mov dec adcl dec jae push push push dec rorl inc add sub js ret (bad) lock outsl add pop lahf inc loopne fcomps adcl inc popa lea sbb jae dec pop xchg mov sbb test mov jbe add mov cs jl mov out mov push cmp inc inc test inc jg js movsb repz pop fs add lahf add push lods testb and and inc les outsb cld out faddl cld inc clc push mov and in (bad) es fs cmpsb andps xchg mov int3 adc sub push call jl add push inc fidivr pusha xchg push inc dec and hlt ss fsts add aaa (bad) icebp push push xor sbb add fstps jns jge cmp mov mov push adc push fstp aaa add add add add ljmp add add ret or (bad) sub add xchg add mov push imul push mov lea mov pop sub fimul add or rolb pusha loopne push bound add lods lret adc or (bad) stos cmp roll pop dec xchg and xor mov and and ds jl dec push test push mov and pushf xor push push mov negl aaa sub cmp out fidivl je push pop addb push into idivb cld sbb sub xchg xor mov repz mov adc push fdivs aaa fstpt cli inc push in push aas sahf xlat je sti les in or cmp fdivrl push popw mov and cmp faddp jnp or inc or pop adc add (bad) lahf pop and lret pop add outsb inc out lods (bad) pop mov xor pop ret push pop xchg outsl pop sbb cmp pop lret push andb add std js or insb or pusha cmp cld out inc orl pop xor lret loopne pop adc mov cmp aas add cmp push push dec loope mov xchg dec outsl jb dec adc add insb dec jo pop add ret inc xor les jo (bad) adc call movsb push rcll xchg jl xchg pop lcall repz dec shrb dec add pop les add das fisubr inc add xor fwait sbb xchg push lcall es adc cld cmp sbb xchg and (bad) sub std pop ret sbb dec fnsave mov repnz sbb pop mov xchg in push dec jo xchg das push add xchg daa pop test mov aam shll push (bad) pop mov test mov push and pop push adc icebp and mov es or inc dec pop enter xor das int3 mov or jmp adcl (bad) add pop push mov adc inc addr16 and jmp (bad) imul addb sub lcall shrl adc test divl enter ja pop enter aaa fwait (bad) dec sub shlb divb dec (bad) popa call dec jecxz test push mov or push popa daa add scas inc mov mov xchg fmuls lock xor js jae pop aaa inc or mov push sub add inc mov jb and xor jo push dec (bad) xor jl add and (bad) pop cmpl dec (bad) xor mov pop roll cltd or pop xor jo aaa jae repz mov in lods dec dec cmp gs sbb fildl faddl inc int3 orb jb imul mov test or jo jbe jle (bad) push scas cmp aad pop fs or cmp mov out rcrb cmp shll or xor cmp decl repnz pop cmp nop fcoms aas jecxz push in inc cwtl cwtl stos xor pop insl inc insl sbb mov repnz outsb dec jnp cli sarb aaa push call or inc inc shrl fdivs pop pop enter dec pop push bnd clc jns mov add popa cmc dec cmp inc add inc or pop loope and dec dec and push add dec inc sub dec push jbe inc or mov and out pusha ja push test push xchg dec inc adc scas add dec cmc inc or pop inc push and dec push ret subl push sub pusha or or scas sbb (bad) or mov cmp mov mov pop repnz push rorb sahf cmp dec imul das mov mov push fcomps mov lcall ja in orl and orl add es mov rorl aam inc push js aas unpcklps add ds inc pushf cmp cs test cmpl inc or adc mov push inc aas imul inc test out push ss cmp or out pop sub jb mov rorb or or nop and (bad) ds mov or inc pop (bad) scas loope in pop lods push int3 iret mov push or loopne inc or adc xchg mov inc sub add push mov dec inc test adc in and (bad) das testb (bad) (bad) jne loopne test rcl scas push adc rcrb push cmp sti (bad) clc push sub inc pop pop push movlps jb data16 pusha ret jo mov xor sbb pop or mov dec xor fmuls out mov in or inc add loopne sub mov or je and or push inc push cld mov dec xchg mov mov inc dec movb loopne sub shrb int3 mov arpl dec sub les scas mov lock test dec jge pushf pop outsb repnz sub rorb dec or push pushf or mov pop into and lods es ret push hlt mov lock xchg sbb lret jb xlat inc cltd mov addl sub ret adc aaa push repz mov xor ret std (bad) leave fdivrl or fisubr push into or adc mov sbb fwait jo outsl ret or inc dec outsl ja mov or dec xor ss push sbb jle sbb or sub or sbb mov mov push adc pop hlt or stc xor fcomps ret mov dec inc sbb call cmp outsb adc scas cld sarl mov enter fwait rorb adc test ret mov dec fldl cmp sbb sbb adc call xor sub sbb dec iret and sbb inc sbb xchg cmpsl mov jae mov and mov add cmp loopne lret inc xlat lds mov (bad) xchg imull int3 add add in cmp or adc ret sub adc cltd xchg xor sbb sub cmpsl in add loopne mov cltd dec adc aad das ja imul sbbb jae adc add insl xchg out add add xchg and outsb loope dec mov cmp xchg xor insb pop pop addr16 and pop pop xchg fstpt add dec xchg or fstps lcall test push mov cmp push jo imul inc pop mov mov xchg ret das fdivs inc jl out js lahf sbb push mov sbb mov or push inc or pusha sbb sbb mov or add or insb insb fistl ds push inc add hlt inc aaa pop mov out vmwrite mov mov aad push sarb or adc add push adc les jno lock dec rcrb push sbb cmpsb andl ficom rcl ss aas fwait push lea dec xor sub mov fucomi inc sub add (bad) fldl inc popa mov lcall mov inc add jne fistpl mov xor push movsl ret hlt mov cltd ss je xlat dec jbe mov leave out sub xor inc shlb dec dec test call popa mov movsb test add pusha push ret test icebp inc outsl mov push ret xlat jge rol aas cmpb push add xchg cmp mov int sub fsubrl dec outsl (bad) testb mov int3 add adc aad pop popa dec push inc fadds sub and cmp add test mov xchg mov ficom mov sbb outsl fadds and cmpsb rclb pusha adc push xchg rorb sbb (bad) iret adc pushf movsb adc addr16 divb neg jmp arpl je gs (bad) push dec psubd push push test adc mov cmp xlat repnz and lods int pop stos insl jne ss pop xor fisubl in sbb adc cmp test add sbbb push sbb adc movsb ds or aad ret mov push movsb enter in mov adc mov daa (bad) jnp shrl pop pop cmpsb adc outsl inc mov orl xor or jmp fs lods sub xchg inc inc out loopne xchg stos (bad) and dec icebp jmp inc inc or hlt out insl out cmp adc dec or dec loop xchg lret popa das push and negb (bad) mov add push push ret rclb pop sub icebp sti and jge test out aad or jmp (bad) xor push jmp fnstenv and rcll pop mov dec (bad) decl dec mov xchg lret ss scas shrl vmovntps jo mov test pop add xchg loop mov int repz repz sub mov icebp daa xchg std and and inc out test cmp movsb das jbe mov add das mov jle push inc sarb xor out fs push push and push sbb jno mov and (bad) xor push movsl adc and pop inc inc fdivrs push and jecxz cld mov jne adc jmp sub sbb push (bad) adc jle add fisubl insl push sub and inc fisttpll movb dec inc adc add das sub add sahf sub test jo or shlb ds fs xor jmp jae mov and rclb lcall fisubr mov pop das fadds (bad) std shll leave (bad) mov insb pop mov jb loop adc cmp lods or (bad) push cmpl sbb (bad) jb loopne popa add xlat cmp stos and xor test jb inc push pop inc ret ds or es loopne lods mov das mov cmp (bad) stos cmp test xor xor xor push add cmp dec or fld and ret xor lahf test ds adc inc sahf pop xchg (bad) and pop fstpl pusha push cmpl sub xchg popa adc or nop inc cmp nop add xor sbb rcrb or xlat pop and and lret ljmp adc loopne sarb push rcll and push jp sub push mov clc sbb sub push enter loop shl sahf nop inc push xchg notb aam xor ljmp fwait pop out sbb and aas or notb insl mov test adc add mov or jo test adc or add stos add cmp xor or xchg dec adc je xchg outsl xchg adc or repnz push adcl xorl xor in push movaps aad gs or push or popl push movsb inc add pop and xchg pop inc mov xchg sbb jge cmpl and lods jno jno call mov push adc inc fs mov xchg (bad) lock sbb sbb pop nop inc mov lea push test ret dec or sub pop in push xchg andl cmpsb adc add ss pop lods sbb xor and inc xor push icebp je roll mov imul data16 fidivr mov jns xor mov cmp sub (bad) or stos outsl adc sbb sbb pop or mov outsb add gs out sbb cltd fucomi lret push sbb xchg sub fisttpll xor rcrb sbb or arpl sbb (bad) mov mov pop jb inc fisttpl or xor pop and dec (bad) or (bad) icebp lcall aaa out (bad) mov adc sbb sub pop cmp cld jbe mov rcll insb ljmp sbb nop or sbb mov sbb push ret sbb adc in into mov adc push push lea push mov push xchg clc inc push and (bad) out xchg addb fstl jge sbb out sbb pop mov jno push jle mov into dec ja mov inc (bad) or sbb pop mov mov add dec mov mov pop shll push outsl adc outsl test ss adc push sub push mov inc fiaddl sbb fcompl shrb and lds and in or add pop xchg dec mulps or hlt inc adc es sub out mov stos aam add push sbb sbbl dec stos mov cld add xchg mov rorb pop dec ja stos mov dec mov xchg xlat pop sub add out fisttpl cmpsb cmp popa fstpl jg mov mov push mov ds mov pop insb ret inc or dec push mov mov pop xchg mov dec push adc sub mov ss int cmp rcll fisubrl or push mov pop or mov inc cmp js push mov pop int adcl xchg or or cmp fs aam sub and xorl adc add or pusha popf adc xchg push (bad) push mov icebp adc je mov and jbe xor add insl popf sbb jecxz push push jno add scas sarl test arpl or adc daa xor jbe loopne imul mov das addb mov xor psllw nop xchg sbb mov xchg mov add outsb outsl in inc movsl xchg (bad) sub cmc bound dec adc xor mov cmpl popf dec inc andb ljmp js das cmp fsub add int3 pusha adc add lock mov cmpl xor cmp mov int xor orl sub sbb adc inc and adc js cmp sub push or adc out sbb add add push push mov mov es into or out in ret out cmp test mov les or mov or roll xchg dec mov (bad) stos iret fmulp and sbb cs jl out and xor lods dec imul cmp fsubrl fadds and fcoms inc scas outsb xchg sbbb or cmp xchg xchg fwait insb pop fist dec inc arpl nop xor lods (bad) scas fdivrs mov inc or sbb addr16 inc pop jne sub push es test mov movsl gs pop (bad) ja inc lret xchg mov lods xchg movsl inc mov xchg outsl add add fs mov fiaddl cmc lret sbbb pop inc bound and stos jmp xchg pop andb sbb sbb push or lds movsl daa test addr16 and add sub fsubrs out fwait pop jl mov cmpl pop sub out jnp inc mov insb dec jp jle jne pop (bad) mov frstor cld add mov ljmp inc pop push cs sub and mov pop rcrb jbe and fsubs movsl add mov iret push cmovb xlat xchg inc mov cmpsl inc mov stc cmpsl mov rcl push mov and (bad) cmp and fcom das xchg test xchg stc jbe sarb adc adc and dec adc sbb mov das daa push pop sub ss mov xchg mov ret sbb movsb adc xchg daa mov or ljmp (bad) ds test ja fnstsw jo shrb je jnp push adc sbb aad pop or cltd nop sub dec test and lcall adc mov repz lea sub js ficoml cwtl fdivl xlat or mov sbb and (bad) jmp or xlat leave das xor mov push pop xor mov test in sbb stc pushf les fwait mov add mov and inc aas jae sub jno daa xchg and inc nop adc dec adc mov xlat scas aam inc jg add or xor jge xor cmp push xchg aam cli je push sub pop mov lahf inc ljmp xor inc xlat pop stc add sbb pop dec in fdivrl cmpsb cmpsb and or imul dec xchg add push test xor inc js fnstsw cmpb test push cmp adc pop push mov arpl add loopne jmp cwtl xchg cmpb sbb xor jle orl loope inc (bad) ja popf mov mov add adcl cmpsb xchg add or cmpsl scas mov lods pop mov add jb fdivrs int3 enter mov frstor cmp sarb aam push cmpl sahf add cmp dec jge addb sbb dec xor and (bad) mov scas (bad) mov mov arpl insl sub fisubr int lods mov clc cmp and sub xchg icebp jl or aad dec add (bad) xchg jl ss adc ret ret xor call or pusha jae popf test push fs add subl ret js cmovl imul ljmp addr16 (bad) dec mov mov shlb movsb idiv push rcl sub adc adc push sbb pop movb mov mov or mov (bad) ljmp ret cmp rcrb or adc aas mov adc call andb out lock imul inc dec punpcklwd (bad) pushf xchg lods popf xor mov or sbb xor mov mov movsb push movsl out adc sarb and xor mov push leave mov mov add mov imul nop rorb pop add and jg mov rol xchg jb or and mov push or dec test lret xrelease lcall dec je daa cmpb xchg add cmp jne aaa dec mov sbb aad js test jne inc clc mov sub imul adc or and fs xchg leave adc stos push movsb xrelease xor fs gs out inc push movsb or and push (bad) (bad) xchg add or and rcll mov pop jecxz add adc fmul (bad) push dec sbb inc sub or lods aam inc push lea sub test dec or push bound mov dec jnp loopne pand or shll dec push stc mov in (bad) (bad) inc mov hlt aaa pop dec sub dec hlt sarl and in mov dec (bad) xchg dec adc andw sbb sbb ds test nop add test lock and push mov (bad) xor in lock (bad) xor lock push dec or pop sbb adc pop bound daa jmp or ljmp mov inc repnz and and xor or adcb fwait mov lea fcompl adc adc jnp pop jbe sbb mov and out popf or inc inc mov mov or dec mov add mov or jbe call cmovs in dec push loope xor inc loope push inc shlb repz pop mov mov ljmp push xchg nop xor stc sqrtps sub ja inc push sbbb lcall xchg sbb add movsb xchg sbb xchg mov add dec mov jo dec (bad) inc cmp pop shl shrb call (bad) ret push jo or sub xor lods addl testb mov push sbb movsb leave out mov xor inc or fldcw fsts mov xor sbb xor push lock sti in mov daa (bad) jo xor xchg aas add lret sti sub jle sub push adc cmp jp dec push push push daa sub or shll popa or insb cmc daa push insb xor mov or lea cmp mov mov inc jbe add sbb imul and stc jge mov jmp or std cld (bad) (bad) mov xchg add in jne push pop (bad) xchg rolb js mov mov pop dec clc out jo xchg (bad) mov sbb sbb cwtl mov jmp shr movsb cmpsl xor sub or dec and pop sahf test lods dec (bad) cli pop mov pop mov mov out (bad) loop dec testb pop (bad) lock xchg xor jnp pop rcrb fisttp cmpsl test inc fdiv and xor sub xor cmp inc add and bound mov add push add xchg pop push clc cmpsl cmpsb jp push movsl and nop dec add sub jo push mov jo xlat aas aaa cmp imul inc adc mov and or mov cmp movl xorb and or iret fs or adc jmp popf sbb cmp cmp mov out inc xchg add js xchg pop imul nop into daa xor push adc test fldt and dec sbb shrb or fucomi sub adc or pusha or ja in sbbl and out add movsl (bad) scas femms add jno add xchg pop inc cmovle xchg lahf fcmovne insb push mov movl je lock hlt ljmp (bad) sbb push jnp mov add sbb cltd jbe push arpl loope mov out iret icebp inc jecxz fild mov pop adc xchg fnsave and adc mov mov lds push push xchg pushw test push lcall fimull adc test cmp adc jnp pop inc cmp test mov ret cmp lock dec daa movsl jmp cld cmp lods pop imul cmp fistl jno cmp dec or xor lock push push and mov xchg enter sbb or adc lret xchg enter push cmp shll adc push iret lods test mov sub push dec je add mov jno ret scas or push clc je cmp mov push in sbb jmp int push pop lahf iret popa add and push jmp aaa (bad) cs loopne pop lahf popf data16 sub mov sub inc fiaddl sar inc add cmpsl push push lock adc andl jg cmp mov shll (bad) and adc roll cmpsl pop cmp sbb xlat (bad) cmp sbb xchg test enter add and das and adc lods lods inc subl ja add jg mov mov jo daa fmull and jnp pop adc pop mov fisubr pop push pusha or jmp sbb add sub mov cltd xchg jmp pop and sbb inc lods stos xchg xor or movsb push push (bad) divl or and pop inc dec adc mov dec mov cs mov movsb inc ja add outsb mov jo cs push mov push cmp add xor gs mov xor movsl mov adc jae push leave cmp pop cmp pop and or sbb and mov fneni(8087 in adc test and mov add jp push add mov xchg daa push and sub lret cmpsb (bad) sarb pop add push cmp mov mov adc cmc add into pop push in in or jmp push sti rol and imul pop int3 jae sub push push shl cmp and ss xor sub in out je mov xchg cs push or inc mov stos or adc or sub divb movd inc popa jno adc push xor jne push cmpsl mov adc add add pop push fdivrs pop add add sbb and push ja mov sbb cld mov mov (bad) push mov add cmp lds rorl insb lea adc pusha xchg xor push add xor fsubrs leave add clc adc add xchg stc jnp inc add fild adc psadbw mov rcrb sbb jne jo mulb add or and jne adc jmp mov aas mov js sbb or lods lea xchg and dec adc push jbe loope inc adc mov fadds add aaa sub mov out push add xchg in ret push imul add enter pop push negl push add movb add mov cmp insb ret and adc adc repnz xchg add xchg ja push or add sbb mov jmp or sub pusha rolb add mov dec pusha cmp arpl in or mov test (bad) mov repz jecxz lret outsb push adc adc mov popf daa ds jae rcrb dec nop xor or bound and push mov and lock adcl loope sub dec xchg in inc ss push xor mov add ret add lcall orl decb in dec inc dec push aas loope mov push push ret xchg pop out pop test push or or sbb test cmpl mov dec mov and (bad) in sbb rcr loopne,pn xor xor xor or adc xor sbb push or imul (bad) and sti jb mov pop mov add aaa orb cmp push cli mov pop (bad) clc rorl add decl xor icebp xor xor es cld aad dec xchg in jle addl (bad) adc xor add dec pop pop sub push pop inc cmpl jne adc inc add fmuls in fdiv cmp cmp add lods inc fsub push pushf mov stos cmp aad pop sbb cmp je lock or xor add out dec and je mov mov iret or rorb push lahf mov inc xlat adc les xchg and stos inc jns and xchg xor sahf test out sarl dec sahf cs cs inc xchg dec ror pop hlt mov incl nop insl jne int3 xorl xchg (bad) jno mov jb adc dec mov into (bad) je pop pop sbb pop inc push cmp jno dec test nop or and insl dec test decl cwtl leave notl add lods dec ret sbb mov ss js push ljmp js (bad) insb sahf mov leave pop lds insw out shrl add dec push setl lds adc mov inc jmp and movsb mov adc sbb loopne,pt mov mov mov ss ss lret cmp ficoml push inc add sbb jne pop punpckhwd imul fdivs and aad dec add pop sti lea dec xchg sahf pusha cmpsb xor pop mov cmpsl add adc xor shlb push push pop mov or push mov mov sbb enter and dec push mov pop outsb inc movsb lock aas push pop mov and mov xchg xor sub aaa cmpl fistpl cmc sbb gs mov add or xchg mov cmc addl dec push and dec sarl sbb sbb dec (bad) push adc popf or push adc or mov shlb pop pop aas sti decb dec iret je cmp je jg sbb mov loopne push cmp mov sbb aad push mov xchg inc pusha mov dec cmc cmpsb cwtl (bad) cmpsl rcrb adc mov inc sub lahf mov ds cmp or in adc adc mov xchg push mov insb movsb xor jbe lea gs mov dec cmp mov or xor es hlt dec cs xchg arpl cmp testb cmp jno sub cmp sub lods dec xor movsl xlat dec push adc lods rcl sub and add insb jl scas or xchg inc mull gs adc sarb dec rolb das xchg fdivp test or xchg inc stc je cmp in (bad) and sti inc mov push cmp mov push sub shlb mov xor inc icebp xor sub js sbb jmp push mov lock cmp insb inc push lods loopne hlt push insb or std pcmpeqw mov add xor test adc add nop adc or pop mov inc arpl push inc or pop sub (bad) xchg push mov dec pop cmc xchg scas xor push inc lcall test and push dec jl pop push hlt mov les inc xchg xor es and and fistl dec insb inc mov xor push sbb or xor arpl (bad) aaa add mov mov xchg daa popf ret mov cld mov loope adc adc mov jne fwait add xchg fistl pop popf adc mov arpl and (bad) sub dec stos cwtl ret dec fs and adc rorb dec push sub adc add sbb mov pop aaa or inc xor mov adc mov mov mov in sbb nop jmp inc cli add test int3 dec and pop roll jae imul mov int leave adcl ja ds and insb dec xor add jp (bad) call mov sub adc adc push (bad) and adc jns test mov inc add mov cmp inc popa cmp xor lods data16 aad and push add adc sub pop dec rclb scas inc pop clc (bad) push push mov lret mov add xchg (bad) nop or add xchg sub dec push inc sub mov rcl mov and or pop test push xchg call pop aam mov push insb dec or mov and movsl mov push push add outsb dec lea sub or lock dec adc lret inc fcoml mov add jno and imul pop adc in inc adc or fcoml aad es jmp pop into movb fldenv xor nop adc jmp cmp fidiv adc scas lea add push cmp xchg add mov stc cmp xor iret inc sbb push and push adc (bad) dec add (bad) adc pop and movsb ret es add les pop push leave neg lds dec xlat fildll inc out add add sub (bad) jo jbe test xor cmpsb (bad) outsb xor push pop push push lods push add cvtps2pd popa imul or push or lcall test outsl movb jne outsb adc jp sbb xor jne ret push sarl adc mov or adc pop cwtl mov dec dec sub fiaddl lahf pop xor mov add cmc out idivl dec sbb mov fcompl xchg sub sbb push add jmp clc sub outsb fwait cli pop mov jb mov or cltd mov test xchg adc cmpsb jne in mov and dec and mov jo clc and aad adc add lock movsb mov pop add and mov dec cmp push out dec xchg and mov leave movsb or les (bad) mov lods insb sbb adc mov sub or fiaddl push push and sbb add lcall push cmp pop pcmpeqw add sub ss mov add popa (bad) int3 jge sub mov sub arpl scas fcoml cmpb inc adc inc jns sbbb jne cmp ficoml push push and stos std fsts sbb aas or imul gs and loope and lods lock adc mov mov and mov adc cmc (bad) hlt test jl xchg mov push and movsb lret in jbe xor jcxz pop (bad) lret jl sub setge mov push cltd sarl int sbb movsb push cli daa mov lock adcl xchg imul bound sbb xchg jge mov mov push enter cmp or std add imul mov xor addb popa leave xorl add sub push movsb mov sbb xchg xor pop push push add inc adc sub pusha pop jne pop add add pop dec sar xchg lods xlat ss roll aaa pop xor enter ss loope mov xor sub xchg bound shrb dec enter outsb daa jmp icebp adcb lods jbe push inc das imul or loopne add jo jmp jne xchg sahf test push sub mov (bad) add add xor (bad) aaa pop pop jb or leave mov sub inc popf and cwtl pop sbb (bad) adc xchg lret ss sbb and icebp nop (bad) addl adc (bad) pop inc mov ja imul or cltd js inc mov or test pop out dec in add nop lods aaa jo scas mov insb in or stos xchg or mov dec loope pop push jmp sub jmp pop repz cmpsl icebp push in dec sub jo sub mov (bad) (bad) (bad) test adc (bad) jo dec rolb mov call inc fadds add inc jmp icebp inc jge jmp mov addl xchg lret ss pop or mov jle loop or push and sub into subl ja out repnz xlat jns add push sub jmp cmc insl pop and cmp sbb or or aad inc insl jb rolb ja mov xchg jp jmp or out aam mov mov int add adc sub daa mov inc jmp sbb jne cmp clc mov or (bad) into cmp cs add sbb mov and pushf push xor lcall and cwtl popf enter xchg stc and imul lock test iret and adc fisttpl test cmp jmp cwtl or je inc lret mov jb ror jg sbb ret and test addr16 add push data16 xor inc iret loope ljmp and and test outsl mov jbe andb insl add xchg (bad) aas je or or dec bound leave and loopne mov loopne jne add je mov sbb or mov call inc rol aad cli add rcrl xor push out xor popl cmp pusha mov pop rorb lea add std sub in xor lds dec push xor adc aad sbb mov mov adc sbb cmp add pop daa dec leave testl fcoms adc mov jge sub mov dec push cmc fs cmp notb sbb into mov popa pop jl push lret shrl push iret or inc pop or jecxz call (bad) jno in lock jecxz dec or jno loopne lcall cmpsb (bad) pop or and xchg inc jno pop xchg add sbb and mov adc fistpll pop clc fsubl pop insb rcrb adc fsubl fwait lcall es adc xor lret adc imul mov inc shl fistpl pop sbb cmp and push mov cmp jne xchg adc or cmp rorb repz (bad) cmp or add xchg adc lock mov xchg adc and mov loop xor negl and stos ds imul test or insl dec inc enter lock push xor sub orb sub add addb lock xor lret in outsl cmp inc imul add dec dec sub (bad) ss adc mov jb shl rorl jbe xchg shrb cwtl add xlat loop push stos addw andnps mov das addr16 push mov loopne or jp and lea xchg xor sbb movsb andb inc xchg xor mov je cmpsl sub (bad) int3 pop cli insb test (bad) jp ffree mov clc add add mov movsl ret mov add into mov xchg lods xchg je testl orps js add data16 sub (bad) call cmc push mov call and and and test push lea sub fdivp sarb movsb xor loope nop in in ficompl push dec call xor and inc lcall push lea adc and add mov in lret mov adc (bad) jmp les clc lea dec jg or add mov mov inc mov stc divl pop push insb aaa pop add test daa rorl dec push sub cmp or clc dec xor into (bad) fiadd and cld ds scas lock cld rorb xorl pusha and add xlat xor lds xchg jo out add es add das mov mov or or pop (bad) in mov daa (bad) aaa mov push test pusha push lea push mov jb or (bad) movsb outsb pop fnstcw mov pop mov cwtl add inc and aam add push push add or mov sub outsb adc and aad popa std add jnp cmp and fstl add inc inc negb mov mov rolb pop inc in test push imul cmp push sub mov sbb outsb sbb xchg cmp cld cld xor je push cld cld push cld or mov scas add xor lea mov pusha xor mov xchg adc (bad) jno add pop dec jmp mov add xchg rcll cmp pop push das or lahf push jnp dec xlat fcmovb and aad mov bound jmp jle pop adc mov sbb lcall sub and ds sbb pop xor (bad) cltd pop mov sub test jl push and push dec adc inc int inc or inc sub jbe imul lahf sti rol sti add movl xor mov mov dec add dec fisubl in in inc push (bad) dec xor in xor pop add mov sbb mov pop int3 sub popa and lds test push cs mov or repnz (bad) popa mov out push fcmovnb (bad) mov dec dec dec call popl pop pop mov jne push push xor xchg addr16 pop xor dec dec ss (bad) jb inc inc push sbb mov sbb inc fs dec repnz jo sub pop iret sub add mov dec imul jo mov sbb dec ss or sbb loope lret adc mov add mov xor das pop xchg iret call pop inc pusha mov cld mov out jl or jle xor test fiadd cmc xchg lock mov loop and jne out push pop cmp imul clc or add push jmp adc sub loop mov mov fs sub inc hlt adc pop jg shrl xchg jle jo or fstps mov ja adc inc mov js sub sbb (bad) (bad) fld1 jne and xchg pop sbb xchg test xor in inc cmp add aas das mov pusha sarl pop aam std mov cmp popa pop sbb sbb adc inc (bad) xchg mov jb push pop pop inc sbb lock cmp sbb in popf sbb loopne xchg mov loope jmp leave fwait (bad) adc or xor (bad) cmp push out pushf add ficompl aaa rorb pop push xorb hlt in push pop negb mov inc sbb popa inc mov xor sbb push into (bad) cmp push fsubrs dec xor pop out or je adc and cmc xchg dec xor inc or jle outsb insb sbb adc xor test inc imul (bad) sti add pusha pushf cmp cmp int3 (bad) std mov lea pop xchg dec jp lahf cmpsl push push xor cmpsl cmc leave cmp call clc mov jbe lods and sub test dec adc add xor jae cmpsb data16 pop rorb or adc orb mov call fwait call andl push loope or fldcw jp and lock incl aaa add mov iret insb xor jge sub rorb gs mov sbb cs test pop ret or push pop sub xchg xchg cmp pop inc sbb (bad) and sbb jmp mov lret dec mov movl es add popf sbbb mov and xchg movsl nop dec mov outsb arpl dec inc pop adc mov pop push mov icebp or cli repz xor ja jmp into and push mov or (bad) (bad) aas call inc add mov and addb xor dec testb and jmp and insl add das jecxz xorl fildl xchg adc mov jmp push movb jbe mov xor out popf es sub test test cltd inc clc (bad) out jl dec rolb push sub and es lods cmovb sub movsl xchg lret clc hlt push outsb inc adc rolb aas mov imul popa mov push lock or adc outsl je jmp sbb xor mov sub push into push int3 xchg in mov pusha or push or push (bad) sub sub and lock or ds cmp je scas pop imul je test iret stos loop push pushf lods mov into xlat mov inc lock push or xor lock sub pop add sbb lods sbb add add imul hlt roll test sub push cmp dec fdivs mov adc push rcll lock aad ds inc stc inc mov inc cmp out mov mov rcll not add iret and je clc sbb adc cmp shr xlat cmp lahf sub (bad) adc subl mov dec shll sub inc pop insl fild lahf mov rcll dec imul sysret test pop dec mov pop lea gs sub lods dec movsl imul adc in adc adc lcall (bad) mov bnd push dec inc add add enter add jmp jle scas inc sub mov xor cmc or jmp sbb rcrb shlb rclb or mull mov in push inc les inc or pop push inc inc and repz adc bound sbb xchg push xchg jg xchg sbbl add adc pop cmp inc push push ret (bad) sub add imul mov movsb out adc mov adc sub cli (bad) cmp push pop loop nop sbb cmp sub pusha add aam mov les cmp adc adc test jmp mov into adc dec jbe je adcb or cmpsl push aas push fcompp xchg adc push jae push das jbe rolb add push aam cmp inc les loop cmp xchg mov push xchg mov jp fs mov callw mov leave je insl dec add push stos mov xorl sub outsb in out int3 push fcomps sbb test jl ret fmuls ret push or leave or rcl push lods in jno adc es cmpsl hlt xor adc jp mov dec dec inc add ljmp inc les add jb cmc and and adc ret pop xor or jne pop int out mov xor xor imul xor and shll (bad) mov movzwl and inc pop sbb fistpl fwait (bad) js mov ja inc pushf fwait and les dec or inc add add mov (bad) xor sub push out push mov stos jnp mov add jo jnp xor or jmp pop daa and mov pop mov mov push add insb inc cmp cmp sub sbb or inc sti pushf (bad) jmp and stc das subb mov inc shll test inc pop enter into sahf adc push mov or arpl decl dec dec dec inc inc push inc inc outsb inc xor (bad) mov ss pop cltd enter jp mov or ret jb leave inc sbbl out sbb sbb cmp and and out or lret pop (bad) std push (bad) jo cltd push push andl add mov mov pop outsb popa sub xor adcl addl adc icebp jecxz pop adc sarl dec das (bad) or cld sub adc dec xchg nop bound sbb hlt sbb inc add xor pushf es sub dec loopne int inc fsubrl or or dec (bad) xor popf aam je xor ret inc test and sbb mov lret loopne pop sub nop enter into or add test sub mov sbb inc jl add push cmp and nop push enter rcrb repnz inc xor out add rorl (bad) aam mov rolb ja pop push fistpl sbb push je test sbb sbb int add sbb insb inc js inc cmpsl or rcrl daa add mov into inc adc mov fadds aaa lea js cs mov dec jmp mov dec cli outsb jge dec mov jg adc push cmpsl fcoms stos dec xor xchg mov fwait repz mov loopne cmp lock pop cs add test xchg mov and lret jno mov cmp sub outsl pop les add and jbe mov mov aad add out or or push loop movsb dec mov add pop jb xor sarl mov inc lock cld bsf xor pop and adc imul aas jne test and mov js lret sbbl jno or or sbb push or pusha fimull fdivl sub dec (bad) mov test adc daa aas lret stos or pop pop adc and and es push push (bad) jo pop xor arpl les addb push xlat loopne,pt and pop inc add dec pop jnp mov dec popa push mov in and shlb push push lods inc popa push or pop aad das mov scas popa clc cmp or mov ss sub daa mov xor pop add adc xor cmp nop add sbb ljmp push push jg adc test push cwtl pop mov popa push popf pop lahf popa dec cmpsb pop out daa push (bad) pop imul jo and call sbb rcrl cwtl jle cltd sbb stos adc sub test cmp loopne dec push imul sub out or lods (bad) or and insl inc pushf insb js add mov adc pop mov imull sbb add jbe inc xor lret test lods je sahf pop stos sub adc lods sbb push cvtps2pi rorb pop xor mov call in aaa dec lret or movsb pop jg movl adc sub mov dec xor mov adc pop and xchg add or inc stos outsl mov xchg and mov dec inc mov xor lods cltd adc pop inc ret daa inc sub add sub scas add bound or jbe insl mov add mov xchg popf inc xor add lsl pop fdivs subb inc push fidivr add push pusha ficomp lahf adc dec and and pop mov dec out push dec pop xchg inc mov mov push sti xor mov (bad) mov clc imul and pop push inc outsl push jg loope cmp xchg push mov cmc mov cmp movsl and int out dec xor adc sti and ljmp pushf sub movsb shrb adc jmp push add and int jnp insb add pop push cmp jb add cmpsl in and fwait rcrb add xchg xchg imul dec or cmpsb xor ret faddl pop pop sbb push add sti ja sub sbb cmpsl xchg and xchg push push add and test sbb push rcrb (bad) mov push sub push pushf push imul in mov jmp xor mov mov ss in cld imul out bound sbb and ret push sbb jp jmp test sbb pop push rcll mov or jbe insb je push xchg cmp push repnz lods mov sbbl pop aas rorl lods pop stc xlat inc pop cmp cwtl pop mov mov xor test and inc inc ret mov dec adc je push sbb test (bad) testl dec xchg (bad) sbb jmp std cltd or xchg fcompl mov xor sbb mov test push cmp fs andl pop icebp rcrb sub or push and loope dec iret adc xchg orps js out cmp adc pop jo or loopne pusha shrl mov out pop dec mov punpckhbw or movsl inc add dec sbb xchg lods popf pop and xor xor mov enter inc loope pop xlat shr jne mov test dec in mov inc das sbb cltd cmp loopne jae jne subl sub das arpl xchg push imul add mov jb xchg popf fucom push imul mov sbb test fildl ss push adc mov push (bad) out popf add pusha jmp and cmpsl add mov pop imul push pop push adc adc push mov ret add inc pop cli fisubr test adc faddl add arpl ljmp mov in pop int3 mov cwtl fistl or inc pop (bad) iret adc nop outsb ret loop or (bad) pop push fistp add shll push daa mov or mov jle ja xchg fcomps aad inc xchg and mov and rcll or inc imul mov outsb pop (bad) mov mov push adc sbb xor cli rolb shld inc lea movsl adc sbb jle scas loope sub rorl jmp rolb jb sub or add push add popf out sbb xor (bad) jne cmp sbb test hlt xor mov mov mov mov stos inc call nop je cli jmp enter dec add mov jecxz xor add push adc call jle xchg ret inc add mov xchg sti mov les mov aas jo inc cld ds test imul out cmpl or fadds in cmp add jecxz fs or push add aam inc adc lret lods jne mov mov or rorb xor sahf mov add cmp adc sub dec or fsubs aad xchg sbb gs lcall sub fstpl sbb push dec mov sbb popa dec (bad) mov hlt push hlt in adc std sub iret add mov inc mov fisubrl and addb pop ljmp sbb pusha (bad) les lret add and (bad) mov or mov add add sbb inc rclb in mov lret and sbb imul test dec rorb add mov test mov dec or push pop push hlt xchg xchg pushf in (bad) and add push sub movsb clc adc mov imul loope test mov test adc xchg ds jle sbb jbe xor push mov stc push mov push dec xchg xor pop mov shlb incb dec or clc add inc push push add insb sub adc js adc or stos ds arpl and push cmp xchg movb dec in cmp dec mov ja adc xchg dec mov sub add aas out movl fdivrl inc not inc sti push cmp loop cmpsb xorl scas add jae or lods mov mov cmp pop (bad) dec loopne xchg ss dec dec das inc adc push mov xchg sbb jg pop jnp cmp bound cmpsl les dec movsl sub or push inc adc xor pop xor aam arpl fcmovne xchg dec cmpb sbb push xchg push cwtl add push (bad) enter cmp mov push enter (bad) cmpsb xchg sbb out cmp inc add and aas loope leave sbb mov loopne push push ficompl mov int3 add jmp push adc inc shlb sbb test jo cmp (bad) pop xchg jno and test or and mov mov adc fwait inc stc push dec xchg lock scas clc adc inc fldcw cmp je orl xor sub push push cmp jne sbb dec pop inc dec xchg add mov (bad) dec lret imul rcll jno popa movsl mov jns test ljmp (bad) aam mov nop hlt adc sub push or push aas jnp mov add lcall shr add jbe pop hlt xchg add nop push xchg adc cmp push (bad) insl sub pusha xor dec and arpl sbb (bad) adc push dec adc xchg dec jp mov (bad) and sbb and pop das push jp fist pop cmp add cmpsb lods rorl leave adc add movsb or sti xchg mov adc (bad) and sti int3 jno and movsl pop cmpsl adc push ja incb cmp cmp es inc movsl aaa jo hlt clc jl xlat fisubrl aad aam pop pusha xchg mov or insb loope add xchg push jno xor and mov daa push inc je imul push xchg pop push adc or xor jmp roll ret in sub nop pop xor les iret dec or arpl push les mov loopne mov xor dec (bad) rol cmpsl (bad) push xor lock fstpl aad push push mov (bad) sub dec popa stc popa or loopne add cltd sbb or inc stos pop testb mov mov mov stc or sti outsl and pop pusha jne xchg shl mov movsb ds push fnstcw inc pop mov mov idivl pop rolb aam push cltd cmpb add mov sub pop daa orl sub mov sub lock sbb movsl dec mov loope fsubl pop lock push out or and xchg mov mov pop sbbl jecxz fldt inc dec and adc int pop push cmp xchg movsl mov scas xlat cmc add jp daa dec dec pop addl lods (bad) or adcb xlat lahf (bad) imul or jg add jo push jbe sub daa ds push mov enter imul or rolb pop clc inc jne dec iret dec xor dec and add inc pop test (bad) mov push add and cltd add pop addl mov in sub jge,pn mov sub cmp sar push pop jbe inc sbb aam rolb mov stos insl sub add std insb cltd idivl sub sub push push aam jge lahf sbb inc call jmp sbb ret push or pop sub (bad) mov inc ja push stos fdivs pop jbe negl sub sub mov das jo mov push pop jne jbe jg rcrl and aas mov ret jne xor mov mov lock or cwtl nop scas (bad) lret sub stc cld js adc add mov xchg add lods jle,pt mov mov or (bad) mov adc inc add nop xor and popf hlt aas fldenv arpl js pop (bad) aam jnp idivb add fcoms or add jecxz adc push fstpt leave pushf into add xchg jo cmp int3 xor adc (bad) inc or gs je aam push ja mov pop and andb or xchg push adc in sub enter daa xor aas je ret das jo,pn fstpl fwait adc xchg xchg sbb scas leave fisubl loop movsb push lea into int neg rorb repnz movsl adc push fsubl mov xor shrl lret inc inc stos mov (bad) mov icebp cs and mov add nop js pop jecxz jge mov mov das sbb jecxz (bad) arpl xor stc xchg xchg xor push add sbb inc pop xchg rep scas and adc push clc push pusha pop repz pop hlt imul sbb or stc ret sub inc pop dec repnz add imul ss pop cld sub or xchg or mov mov adc rolb jmp rcrb in (bad) imul jle popa les push jnp xor or sub push pop dec push aam sbb stos popf les std imul andl inc xor mov btc (bad) push popa ljmp pop rep xchg mov jl jp insb sub dec add xchg inc rolb imul je test aaa lds add sub pop inc pop pop sbb adc imul scas sub dec adc jmp or sbb pop nop lret int3 enter inc add rolb adc sub mov cmp (bad) nop and or jg inc je bound int sbb dec (bad) jmp call movl sti test mov jecxz dec popf or sub push adc mov mov lcall popa es cmpb sahf add push jge dec pushf loopne xchg add mov sbb sarb push jo sub (bad) pop fsts ljmp prefetch push add cwtl sub ds mov mov fs hlt mov xchg popf pop hlt dec push mov sysexit jg inc dec and movsb push scas dec mov insb pop pop jle pop icebp fiadd insb push push into push cwtl mov loopne xchg scas inc mov adc cld imul xchg or (bad) out xchg mov xor dec addr16 sbb leave leave leave or in in icebp repnz in in cmc div clc in in stc cli sti cld in in std (bad) jmp in in loope jecxz in in in out in in jmp in in out out shl in in rcl aam in in (bad) xlat fsub in in fcmovu fsub in in (bad) shl out rol roll aam adc mov mov daa movsl add scas aas cmp adc ficoml xor or je (bad) movl adc and and dec cld addl jmp mov cs dec cs setns mov adc push jae dec test ljmp add movsb in jge test xorl or es into or add nop iret testb (bad) cwtl jg jmp xchg inc add add cs add in or cs or or cs or in adc cs adc adc cs adc in sbb cs sbb sbb cs sbb in and cs and and cs and in sub cs sub sub cs sub in xor cs xor xor cs xor in cmp cs cmp cmp cs cmp in inc inc cs cs inc inc inc cs inc inc in cs dec dec cs cs dec dec inc cs dec dec in cs push push cs cs push push inc cs push push in cs pop pop cs cs pop pop inc cs pop pop in cs pusha popa cs bound inc cs gs cs push cs insb inc cs insl outsb mov daa in push push inc inc mov jne sub arpl bound out pop aaa addr16 gs push outsl outsb outsb mov mov or sbb insb daa addr16 jo int3 mov gs sub jl fisttpl jo (bad) mov fucomip mov pop popa fs outsb xor pusha inc je insb loop sbb call maxps jbe pcmpgtd pop jae fiadd subps or xlat out jae jne pushf mov mov (bad) pop das push incl imul xchg xchg pop jnp xor pop push jo ljmp gs daa mov mov jae pop sarb pop inc dec jae enter or add outsl fsubrs daa dec push add pop es sub rclb jae arpl push inc jns das push xlat adc scas das push ja shrl das iret aaa fcoml pop dec pop (bad) das inc (bad) mov cmp jno stos clc pop xor notl pop pop and mov insb pusha es and lea frstor mov pop cmpsl cmp pop inc testb jne gs inc daa mov inc jp push ja popa push scas sbb in out xchg stos xor daa push xor jo jg add pop push insb popa jo fs adc push pop das push jp sbb mov push dec sub test jae pop dec outsl lods dec lods popw sbb mov dec sub lret cmp aaa xchg jae inc gs cmp insl jae push jne outsl daa insl js mov outsl pop imul daa pop pop cmpsb pop push xor fld inc outsl outsl ret int xor and lods jbe in unpckhps inc daa out (bad) hlt dec dec clc mov inc dec xor es outsb push das push pusha orl bound inc dec and fldt xor add push xlat insl xchg add mov add div sub das aaa pop mov xchg inc cmp inc add dec hlt aaa push iret test int3 loope lock jp push cmp in push inc pop cmpsb mov push imul inc lods add (bad) and popl inc js xor or (bad) mov jne pop cld cmp adcl dec pop call add push jle insl mov insl pop mov adc or jle sub mov leave mov dec call addb jno mov mov dec arpl xor outsb or clc jmp (bad) out rcr nop cmpl fisubrl mov dec push push loop inc inc roll mov nop mov loopne or adc push rorl xor stos (bad) jo or pop fldt push je fsts mov adc add adc js scas mov test xchg pop add leave clc pop fistpl daa jg sbb sarb dec jecxz cwtl in jne jb out and movntps (bad) dec pcmpeqb inc into test mov popf jne cmp xchg cmp ss mov add (bad) jg or pop or imul out xchg es and add jnp inc iret jl push insb mov mov adc push cmpsl pop lcall pushf mov xor call orl xchg addr16 xchg add sub mov (bad) or mov mov jp gs adc inc enter jl adc sarb inc inc jne inc adc mov inc jmp push lret mov sbb and cmp mov lods xchg jge mov and jge mov jno mov cwtl aaa outsb mov push in and inc add outsb push add and das call cld add nop adc xchg lods push xchg jbe cld orl add ja in stos fsubr fcoms daa and or mov aas sub jns out push pusha jno xchg movsb out sahf out (bad) xlat call int cwtl sbb repz adcl fsubrp cli les out cltd push and ret pop mov mov and jbe cs cmp jb hlt sub insl dec xchg cmp leave lds inc xor in push dec cs sub fdivs cwtl and cmp cmp inc (bad) xor aam cmpsl and cmp ja xchg shlb jmp les ja mov outsb pop sbb pusha std out nop addr16 aaa push push adc iret and and test sub and and int3 or je mov xor loope and or or xchg push popf mov imul cltd xchg pop dec and inc or daa push adc adc sbb subl and lcall aas push lcall lcall cs imul xlat mov add stos push mov subl fwait movsl movsl cmp ds mov das lcall out cmpsb int jge clc mov in sahf pop insb fdivrp cmp pop lahf mov fidivr roll push dec push cmp mov xchg insb push fsubrs loopne mov inc call sbb xchg test loope cmpsl mov push movntps sbb (bad) and adc mov adc push push jl popa popf icebp (bad) mov xor sbb inc xor test inc and inc add mov mov orb mov add lds pop int3 ljmp dec adc lods xchg push mov insl xchg pop mov popf sub xchg (bad) xor inc dec fidivl es add clc clc jns dec lcall push xor mov or aas push push mov push shlb and add iret in rcrl cmc in push pop out gs mov jo or pushf mov mov xchg cmp or fcmovnu mov ljmp push or aas ficoml sub add add nop mov lret loopne cmp cmp xor sub mov mov out mov or or pop mov push test mov insl daa pop cwtl and cmp sbb sbb rcrl in hlt repnz mov and mov push push add mov lahf xor sub adc test lods mov inc add add xor add leave pop addr16 mov fistl jg and mov mov or jle adc iret nop cwtl popf in nop add mov test dec pusha popa jl dec xchg ret mov add in add sbb add mov xchg mov mov sub xlat iret xor enter inc jbe add out test cltd or mov adc mov mov orb sub sbb fcmovnu sub sbb icebp sub fisub mov xor jle enter hlt mov xchg lods aam push mov cltd inc fisttpll pop mov xchg shlb stos cld add pop xor imul add pop or pop fiaddl test add std and pop outsb bound xchg imul dec fisubl (bad) push sbb xorl jbe push mov (bad) and cld push lahf js adc mov shlb sbb adc (bad) and xor xor add mov leave sub xor xchg into outsl outsl sbb or pop mov (bad) sub test inc std and xor adc push mov mov clc andb inc sub inc jns push inc mov mov cmpsl xchg xchg sub movsb or imul loopne shll shr in sub insl inc fisubr inc cmpl cmp pusha aaa test inc hlt mov movsb rcrl add cli fwait daa cmp adc cs loopne inc mov push dec nop mov test pop fstl xor pop sub xor ss repnz push pop and inc rcl mov jg roll mov scas or movsb fldt push lock push mov add leave push pop mov les pop movsl nop cltd mov frstor push add pop mov inc jg sbbb sbb popa call dec sbb mov movq jmp lea adc js xchg jecxz xor hlt fidivl mov sub add lea mov or (bad) xchg or loopne sbb xchg dec hlt cli xchg push push push sbb cwtl or pop mov push (bad) jle nop dec inc pop inc sub pop (bad) or inc test fsub je daa frstor xor js mov pxor nop cmpsl rclb mov dec loope pop rcrl mov sub lods pop icebp negb cmp push hlt inc add lock dec in lock in cli into adc add pop or push call xor iret sbb imul cmp (bad) lahf aas push mov push inc and (bad) call test out push repnz test call dec aas and test test mov aaa in hlt mov insb scas test lcall xchg pop cld scas lret ficoml cmp inc addr16 inc nop pop outsb jg push stos dec jb add dec mov insb pop nop or jecxz popa and jae sarb jo dec leave add adc or roll push (bad) pop add adc loopne inc sub jl adc stos or sbb sub lea ret push pop jmp jmp jns cmp lds inc add xchg lods adc push mov lods std fisttp mov outsb and jae mov (bad) dec xchg or jbe add (bad) xchg cmpsb insb fbstp mov movsb mov mov lea sbb push jne add dec outsl push jne das sti and stc push gs add popa je popa inc bound popa jb inc jo jns dec imul pop push insb pop jne sahf in rcl gs dec arpl jbe xchg dec dec jg cwtl lods test lods pop mov std fst (bad) jg fs insb outsl bound mov xor bound inc pop aam add add add jmp sbb mov mov ret add inc push cmp push xchg or pop (bad) mov and fmul movsl dec sbb add cmp jno pushf negl popf test lock pop mov insb sbb push lahf add xchg and fistp inc sbb addr16 cmp sub or loopne adc push cmpsl sub add push jl push aam cmp clc jmp sbb cwtl mov push test mov movb inc xlat jmp xchg add test (bad) scas sahf cmp jmp pusha adc aas push jo stc iret xchg mov stos sub (bad) mov rorb jne (bad) mov fchs pop dec pop les repnz sbb adc mov pop xchg dec cs push and jmp mov inc ss mov outsl mov sub add daa and sar sub cld aaa notl (bad) repnz xor fs mov movl or je (bad) push and imul test add xchg inc test dec xchg add push xchg xchg cli das push push sbb inc inc xor sahf mov cmp xor stos das out nop adc push adc ret daa mov sarl add dec pop in xor cmp dec js rorb mov scas jb das lods mov mov add movsb into or adc sbb pop in xor inc jl and mov pop add sub cmp mov add pop (bad) jbe aam test sbb add mov cmp ds mov inc daa mov inc repz fadds in cld ret mov mov push addb push lods roll leave prefetch or mov mov add inc add add inc mov cld dec adc stos mov add aam or mov bound add lret jecxz xor and dec mov lods insb cmp jne mov pop daa push pop int3 adc icebp add in inc add cmp pop sarb pop cwtl nop into inc xor cmp xchg inc or push imul inc mov pop xchg shrb fisttp cmp cwtl adc fnstenv jo and sbb in pop inc push aas dec das xor mov dec daa xor stos xchg dec inc dec mov insl sbb outsl and jb adc jb or mov mov add xor iret xor jl pop push lea shl push cmpsl xchg xchg push dec (bad) scas sbb cmp iret and adc inc add and loope push xchg push inc inc xchg fidivl fadd rcr cmp fisttp and fcoml cmp dec mov ret pop push pop repnz js add sbb mov push pop cmp (bad) test adc aam ds jg cs mov jg dec outsl cmpsb nop pop pop and push pusha mov sbb add mov nop push mov aam jno (bad) cmp add and pop add add push cmpsl add aas or das push or inc push dec inc nop fildll mov test in pop frstor lea ficompl xor dec add bound (bad) and add add clc rorl mov inc xor xchg decl or aas flds bnd or sahf mov push popa movsl mov ficom dec jl rcr aam outsl arpl push dec mov push fsubrs pop adc test sbb cmp dec in leave jns bound cmc into jmp jge adc push cld xlat in mov (bad) xor push repnz arpl in insb cmp and in (bad) call aas fsubl loopne mov and mov movsl cmp push dec fisub lcall push fisttp mov and add jl mov insb mov adc arpl push adc adc ss gs mov mov or es sub mov test xchg orl mov loope loopne mov loopne mov mov test (bad) mov dec mov jp jb xlat or sbb xchg (bad) ds sub in add or add stos or das adc mov jle xchg test adc ljmp enter insb add push (bad) mov jb in pop adc mov mov enter push and inc rorb pusha lds pop cmp or test xor dec mov cld ret insb test push or xor push or xor add or subl jnp sbb or add movsb fbstp adc push repnz icebp mov pop jp jnp cmpsb bound sbb sbb cmp push and mov and hlt xchg mov mov xor add arpl mov fnstenv push test push hlt jnp cmp pop insl addr16 or addr16 adc push ret mov fiaddl lock rolb nop cmp fwait xchg pop imul mull nop mov mov sub pop add add adc pop mov nop pop andl pop xchg ss push sbbl push loope dec inc sub add ja sbb gs push sti jg mov mov xchg pop fcmovu pop cli push dec push push or or aas jg lcall push push jbe icebp inc repz xchg pop dec imul and push or dec dec idiv ja iret sub int3 mov dec xchg std (bad) dec not sub xchg push loop daa adc cmovl pop ljmp pop pop add jns fisttpl notb dec inc negb mov idiv push gs and jg lcall xchg bound xor push add jle mov mov xchg arpl xchg out out xor sub mov push je xchg fwait jp add cmp fbstp dec and scas push aas divl push jg in inc xchg xchg xchg jecxz (bad) or xor inc cmp ficoml fwait ret pop nop neg imull rorl or movsb out cmpl xchg pop push notb and mov inc xchg pop push pop out lret outsb sub xlat fstpl divl paddsb and jecxz loope ret mov (bad) push pushf gs xlat lock push in std pop cwtl jno je imull sbb adc mov and mov in dec xchg repnz divb lret inc nop adc or fcompl adc or xlat add and aas mov push idivl ror popf fcoms pop xchg inc or das push adc popf arpl sbb insb jmp daa inc enter pop cmp and sub mov sbb daa pop pop negl call xor (bad) push imulb enter clc adc push adc dec add mov push and in adc xor and and sub mov iret std add imull sahf xor cwtl mov push pushf lahf lcall adc idiv (bad) cmp mov mov aam and sbb scas loop dec cmpsl jp,pn pop cmpsb adc xchg xchg xchg add mov mov jecxz sub mov pop sti jl sbb adc pop jns lcall dec adc aam rcrb xchg mov loop int3 psadbw sbb pop je pop or sahf fisub or jbe sahf negl jg mov push dec testl sbb pop cld xor ds je inc imull adc sub xor fisttpl xchg shl mov xchg (bad) or test imul pushf mov push adc addr16 mov insl push fldt cmpsb popa push and mov cmc out sbb sub imul push outsl pop pushf mulb mov sbb loopne mov mov stos clc std dec sub jp or je out es jns push mov add xchg or sbb es mov mov mov dec add push cld cld xor fwait dec popf gs test pavgb out add loope fidivl ja negb out dec test jge push push dec cmpsl pop hlt cmc adc or sahf add pushf pop (bad) clc xchg sub imulb mov hlt lret fldcw sub ljmp negb fcoms push out xor cltd notl cmpsb jo sbb add inc lahf je xor cli enter push adc arpl decb pop push nop das sbb fsts movhps notl inc mov pusha bound clc test mov cmp ss out les push sbb dec mul adc fldcw xchg xchg dec mov stos add decl das xchg push adc pop cs fnsave pop std jle xor add or mov pop fwait int3 divl add mov cltd sub sbbl in pop sub pop xor jo push sub inc inc lock xor testl cmpsb sub and pop js test pop pop xor push push jg outsl dec (bad) or dec je mov js push loope push es (bad) or push mov jb adc lds out leave stos hlt ljmp push loope cmp dec xor sub sbb nop adc xchg fwait mov lds or jge outsb divl sub std or je push lock adc jg hlt or repnz push jl pop lock (bad) les div fildl mov das ret push clc cmp repnz jmp roll pop push push test (bad) mov inc push scas and jmp in jle popf mov int3 push cmp fistp inc test sub imull dec mov sub pop mov mov aad or (bad) out dec dec xchg imull pop pusha pop pop negl (bad) loopne les cmp add das mov ljmp bound test repnz js jmp in mov fsqrt out popf jp xor add cmpb add mull clc mov jge inc repnz popf xor fwait decl pop scas xor sti icebp push rol jp pop mov jbe cs shlb (bad) and shlb fidivl inc dec flds imul js out sub je adc or clc push ret sbb sub and in js add adc mul xor ret cmpsl push lret ret mov lock xor mov adc repnz es lock enter mov or jle test pusha jno sbb sbb pop aas sbb adc inc imul iret out cmpsl jbe cmpsb addb and jno fisubrl xchg fdiv int3 pop jl jbe xchg push cwtl fs cmp mov sub add fsubr jg dec divl and jbe cmp cmp ljmp or push repnz dec or in rorl add dec fdiv shlb frstor das sbb inc pop dec (bad) repz sub ss test idiv out cmp test (bad) xor loope push ret rorl repnz mov imull adc popf add mov fimul mov xor pop lods xor les add pop add cmp out notl (bad) pop lods daa xor xchg cmpsb stos push out scas adc (bad) out inc jb xchg rorl je inc or notl scas lock sti outsl loop pop cmp ret cwtl ja mov cmpsl xlat mul add mov cmp das and xor (bad) xchg mov sub mov dec xchg negl js mov and xchg mov leave ss icebp add and sbb out add ss addr16 pop orl mov outsl dec testl imul ljmp xchg push fsts (bad) or push push adc push adc das cmp cmp divb aas lea sbb scas adc inc daa testl popf je sub mov les or fldt in mov inc ret add lock neg jecxz outsb lods xlat mov test add pop or sbb sbb and clc lds xchg xchg push cmp xor fisttp add xor or bound fiaddl push mov dec jl ret popf fbstp dec adc bound loope dec and jg mov jecxz push xchg (bad) notl test add insb icebp in outsl mov add mov loop sub jae push les outsb cmp lock negl lcall (bad) xchg cmp xor js sub inc adc hlt in xor fsubs ret or and pop pop negb pop xor pop mov inc push add mov inc adc xchg pop mov cmp jmp loopne loopne divb xchg push (bad) negl add cmp into and cmpsb int3 cmp cmp shrl inc adc jmp subl les inc pop mov int3 or (bad) dec ja ret add adc maskmovq negl push adc xor add movsb adc int pop aam pop and sbb cs mov sbb or mov divl jge pop jo loop call stos mov hlt jnp insb idivl pop dec sub mov cmp lea cmpb es out add fs imulb xchg (bad) dec jmp push (bad) xor lahf (bad) xchg jb xchg lahf xacquire dec je js mov pop repz jl mov divl mov inc or divl (bad) jno inc sub sub push add ret divl shrl xlat daa dec scas cmpsb or xchg arpl mov push mov mov xchg pop sub mov js out xchg xor push jp mulb sbb push addb sbb push push outsl or (bad) lret loopne and sub mov test sti dec push adc sub inc xchg fist xlat xrelease outsb adc xor out sub imull pop sub cmpb call jo js into test and xor pop neg (bad) jbe in dec jmp stos in fucomp aaa push pop jbe sub and idivb cmp addr16 xor xchg sahf fcomps sbb and loop xor and icebp ret cs xor cld jl clc rorl cli inc divl lods div mov (bad) not jmp negb pop inc sub cli icebp add jae dec not xchg sub cmp xor jb xor je,pn bound daa pop call aad sub push outsb lret mov dec sarb rol test cmp cmp and negb xor je lret mov push fcomps pop data16 test shlb mov pop scas lock push shl pop or inc in inc test fwait hlt cmp out (bad) sbb orl adc stc je mov xorb jne cltd inc sbbb cmpsl call jmp push (bad) dec or xchg or inc adc push dec outsl push lock js repnz bound ret cmp xchg (bad) testb iret xlat shl jbe pushf fmuls fsubrp dec push sbb scas shlb in jns sub nopl sub aaa push je add jo mov lock test int xchg fimull popf mov pop add xor or in jge les in repnz jl jnp in mov jl jp jb loop dec jmpw fiadd jo dec sbb mov xchg pop push pusha push dec mov push inc cmp inc imull loop ret add and adc nop xor out hlt ret out mov shl mul pop cmpsb (bad) xor les ret rorb lea cmp movsb (bad) fisttpl adc fimull test dec dec divl lds fcomps sub imull and push inc mov das xor in ds daa adc loope pop xor shrd je js jne out push cmpsb in mov sbb in (bad) push mov inc idivl shl leave inc xlat ja push push dec (bad) jp sbb xor xchg lds notl ret inc or aas iret jb iret rcrl push fsubs rol add (bad) leave xor popf (bad) movsb mov jno dec fstl add sub bnd or dec adc or sbb das je xchg in xchg loope inc cmpl push dec fdivrl nop out fadds and insb mov loopne mov push (bad) ret lock sarb and xchg and mov or (bad) xor and xchg in mov pop jp inc jmp in pop xchg push push xor popf loope adc jl dec mov add (bad) mull lret sbb sbb popf sub scas div (bad) jno cmpsl push je pushw bound add pop push push cwtl insl pop mov gs cmp sbb cli push push cmp roll mov ljmp inc and xor into xchg jl divb inc idiv mov add mov inc dec add outsb push movsl and sub sub jmp and push fnclex inc or neg mull loop imul add push enter loopne hlt pop stos negl adc pop sub cmp mov mov push xchg inc or mov ret fiaddl inc cmp inc test test add add lods (bad) mov or xchg xchg cmp adc scas xor or (bad) mov jb sub jbe outsb into insb push test rolb xchg adc punpcklbw fist push scas (bad) (bad) cmp push repz push pop sti mov pop push jge and push (bad) add pop sub inc dec jno into inc pop repnz mov jge jno jno (bad) push push push loop div cmp or cmp mov sbb or sub loop loopne jmp push ljmp imul addb push out sbb movb repnz or push add xchg imulb xor cmc iret mov out mov mov sbb or js pop add into mov je inc rol dec adc (bad) cli scas mov cmp dec xchg push cmp dec dec inc add push sbb arpl pop jp cs inc mov ret fbld ljmp inc sti xchg testl dec (bad) or bound add mov push shll mov dec arpl es push cwtl aad cmp jb xor rorb pop inc jb add inc in mov add dec sahf and jle out popf mov cmpb sub inc dec dec sub mov (bad) xchg stos into loopne idiv mov push loop mov std push repnz mov (bad) outsl jo ds insb xor idivb out sbb mov cmp adc ret push or (bad) idiv sbb cltd std cmc add dec dec je jb jo ds mov pop arpl je,pn pop add in cmp cmc scas std div ds daa arpl not daa xchg adc aaa daa daa and mov mov fsubs jno or divb mov dec push xor push out clc aad ds movsl aam push cmp pop hlt sarl sub idivb (bad) shl adc jne outsb testl xchg imul xor je popa cs idivl bound push jl xor push add insb div xor aam je or pop jns mov jecxz inc arpl xchg fnstcw test push inc mov loop sbb stos mov mov lret negl inc pop pop xchg adc (bad) imulb adc xor ret scas sbb (bad) ljmp xchg or clc dec inc sub sub lret pusha pop cmp cmp jbe xchg xchg xchg pushf data16 jne sub shlb es gs aaa dec and popa inc mov adc fcmovbe inc stc inc mov (bad) lret roll popa add (bad) jae and das xchg arpl idivb add jle jo lcall push add not lret push or sti mov jb mulb xor (bad) neg cmpxchg jp sub div dec mov dec sub sub xor ds mov test or js ja roll out pop call jle out in sbb call and inc fnop jmp rcrb (bad) imull insb cmp (bad) outsb call lds scas andb sub sub shrb cmp data16 add xchg sbb out pusha shr inc ret mov ljmp insl icebp dec or int fiaddl sub push xchg pop scas mov mov pop push sbb and cmp pop inc insl fisubr loopne out js gs and sbb adc dec lods inc mov and lock out mov insb sti iret mov dec imulb lock and jae dec out notl add enter sbb out and cmpl mov mov or out divb (bad) aaa aaa test mull mov cld call fdivrs cli pop (bad) movsl push dec cmp sti xor aas in xchg outsb and popf repz add inc jo out stos dec rclb repnz lock daa pop data16 dec (bad) or scas enter push and mov cmp movsb or and push sbb cld xor inc popf add daa dec decl cwtl ja repnz xchg mov test notb or insl scas add outsb xchg sti imul daa std push mov out or adc (bad) mov rcrl cmp jbe sti fs cmp xor sbb daa mov divl aas push add add idiv add add int xchg lahf ja rorl sbb ds mov pop out imulb mov cltd mov sub pop sub or adcl cmpsb fwait push je inc inc hlt nop mov and and dec pop arpl hlt mov mull mov orl fisub push inc testl or rcrb mov stos sbb outsb dec cmpsb insb mov in pop adc adcl lods push mov cmp or movsl dec xor mov adc (bad) dec or push jmp ret mov xchg dec (bad) adc (bad) sbb or add add sbb push ljmp push sub mov add subl inc cmpsb repz jns and movsb (bad) (bad) movnti xchg lcall mov repnz cwtl jmp outsl ret addr16 cli and inc jae loope,pt sub je dec sub outsb fld pand inc div add mov adc pop push imull inc daa push adc add lock movsb dec jbe push xchg testb hlt and repnz je or pop repz xor jp into inc shrl add mov loope aam and mov mov not jo mov adc sub mov or cmp inc test sbb fsub lock scas negl test sbb jnp add sub push daa adc add out sbb mov jo lea stc shll dec sbb out ret outsl mov ret data16 sub inc into xchg inc sbb dec push out sbb and popa mov sahf iret (bad) adc cmp push cmpsb adc in (bad) (bad) mov sbb inc mov xchg inc ds outsb sbb testl in jecxz pop (bad) int3 push fucomi enter mov mov fstl testb lret jp dec add imul or gs enter test jo cli and dec sub int subl add fs addb xchg rcrl push in loope outsb lea out fwait call jl inc xchg push mov jge xchg arpl cmp daa adc subl cltd xor pop jns lahf fsubp lods mov leave add push xor jo out divb dec add adc xchg push push inc fdivl sub lock dec dec jns sbb mov call ret dec mov dec xchg sbb test push inc push xor cwtl in data16 enter vmwrite jne xchg clc mov testl jl in add pop mov push outsl mov pop scas mov adc cli mov arpl ret imul insb jnp jp sbb or cs aam mov enter sbb sub mov (bad) sbb xchg inc sbb ficomp negl imul negl sbb push cs pusha or jo dec jb xchg arpl loop dec adc sbb sub and adc fadds pop pop test ljmp negb into cld xchg inc inc lahf test push or jmp mov je (bad) or dec imul pop int3 aas mov jg outsb ja sub mov imull (bad) xor stc adc or adc push push or inc test jl add push jl inc push pop sahf out mov (bad) dec icebp pop or push adc push bound or pop call add in (bad) out jae cmp enter cwtl je or into ret add inc and movsl xor adc dec inc idivl adc adc imul mov test dec sbb call dec stos fadds (bad) sub fsubr test loopne cwtl out std mov or dec inc and add add sbb cmp jno inc push les imull add push lret mov push sbb ja xchg shrl jmp sahf stos in push hlt xchg mov jbe mov mov mov insb sbb and je mov dec push pop ret or mov mov into cli xor sbb lds jle (bad) or adcb cmp les pop adc out mov push xchg int push jle mov or jle repz divb sbb loop divl cmp lock and fldl xor inc sahf sbb lods cmpsl les jl imull imul pop jl imull in add or divl daa jo lock insb bound or inc clc push mov jo jo adc pop out popf negb inc fadds mov xor pop jnp daa (bad) lods adc lcall dec xor sub mov aas dec lock mov ret add inc xchg add cs push inc mov mov (bad) (bad) lock mov (bad) mov sub push dec outsl loopne mov out pop sbb jo cmp mov lods and push jecxz testb adc push ret adc jg jnp push (bad) sbb ss aas das push call and xlat sub xor push stos inc xchg sti add mov pop jo pushf mov loop in adc cmp cmp cmpsl push add orl int3 pop mov xchg popa (bad) sbb xlat inc ljmp push push testl cmp lcall clc dec and in jmp sbb fcomps inc push aaa dec adc divl adc scas mov aas mov sbb jbe jno cmc pop add dec call add ffree daa inc (bad) es jbe cld aas lcall or sub push hlt mov aad or imul sahf pushf mov fcompl imul jle mul lahf pop lea mov jge add adc fsubr jae negl ja (bad) inc inc cmp ds sub xchg movb inc mov shrb xchg maskmovq notl test pop and push loopne ds repz or stos add pop stos mov data16 vpavgb jle sbb je add divl jecxz sahf popf rcl ret push mov hlt addl and cmp scas pop fimull push jns je add add xor or mov xor mov mov movsb jns dec xlat pusha jl sub mov lret test push or movsb je mov aaa mov dec es mov sub mov cs push stos lret dec jecxz and xchg push lret push sub push mov loopne (bad) (bad) shll out xor mov add pop ljmp rolb movsb push jg insb and ds (bad) paddw (bad) jo xchg mov out testl xor add dec jmp inc je ljmp aas enter pop scas jge inc mov jb mov jl xchg (bad) imul push sbb outsl push outsb cmp and loopne mov dec or (bad) dec out jne xor (bad) pop adc or inc imul cmp (bad) pop test pop cmp mov ret push dec pop call jge testb lods icebp loop out mov push lahf mov dec cwtl adc cmp pop adc cmp cmpsb cmpsl jo loop add sbb js sbb into lods shrl mov sub sub aaa inc cmpl mov adc adc enter icebp add xor push aas push negl jo push lock push adc aas adc test stc push daa enter inc inc cmp (bad) xor pusha orl out out lret add cmp push mov jmp outsb cmpsl jns push ret out sub add mov imul dec push into or sbb add mov sub pop mov aaa adc js repnz lahf int fmuls mov inc imul push notb mov cwtl in imul push cmpl into mulb rol inc icebp mov sbb mov stc orb pop scas add imul adcl shrb xor sbb push jno int3 and in xor je notl sub adc mov addb xchg idiv dec sbb test cltd jecxz ret and cltd jbe test fwait adc mull js pop rclb wrmsr pop and mov pusha xchg and sbb xchg sbb jp xchg stos notb fwait xchg mov pop add push sbb jg dec dec push add pushf cwtl sbb push add jno and mov jle orl (bad) mov push mov pop add mov jb and and out shl adc scas mov xor negl je faddl pop sbb xlat xor push lods add sub sbb orb push jge xor xchg div mov test sub sbb dec xchg xchg scas lock or sub or lcall lret shrb ret repnz adc lahf cwtl xchg dec adc sbb (bad) fs inc or stos ret scas out pop sub jns sbb jo popa mov xchg in in test pop pop dec lods mov std mov lock add test je sub xlat jnp sbb fisubr das lock repz ficomp xor mov inc inc test loop push mov jo pop mov push cmpsb xor orb cmc sbb test push jbe sub dec repnz sahf fstpl lea xchg and rclb popf fldt cli add ss (bad) mov mov mov jp pop pop movsl mov mov jle inc dec sbb add dec push sahf and or mov js bound sbb dec or repz mov ss stos cli jmp scas push ds int jnp sbb test inc mov xchg lcall ds cltd jmp (bad) sti es mov adcl cld pop popf out test mov cmp arpl addb roll inc push ds pushf sbb negl adc scas aad rcrb mov push loopne mov jno testl fdivl adc (bad) pusha sub push (bad) das scas inc fstpl sub loopne and push adc cmc loope jno notl sbb in inc pop ja push ljmp mov jae (bad) stos xchg cmp je,pn push cwtl icebp or xor aam leave sbb adc loope test shrb imul divl push fisub jle es fld pop test test adc (bad) idivl std notb test mov xor loope jbe,pn adc mov mov mov push mov je and mov rcll fistl imull test mov and rolb call adc enter mov inc jne sbb scas loopne cmp jns xchg sbb orl cwtl xchg inc into popf in imull (bad) imul in add jp lcall and inc or (bad) aam dec inc int3 std adc pop ds aam xlat testl sarb dec jns add into mov (bad) adc int3 data16 je pop rcl xor ja lods je dec imul lock or inc sub mov loopne (bad) mov addr16 pop div lret ljmp dec repnz fldcw rclb cmp testl call xor cmc hlt es notl daa arpl jno mov stos aam inc imul xchg lahf and cmp rcr dec xor icebp aam pop call pop mov mov fadds scas test xlat inc cwtl sbb lcall test mov ret ljmp testl rcrb dec dec divl (bad) hlt adc sub jp or pushf jb mov insb add ret xchg push jle insl (bad) lea idivl push div or mov jo inc (bad) mov inc les fs bound cs rolb sahf xor adc shrb mov push (bad) push cmp (bad) dec xor fist jo sarb mov push popf adc push jb add mov inc dec js pop jne cmpsb mov push leave mov ret xchg lret stos mul cmpl mov fcompl xor push inc and inc stos in daa lret fdivrs dec jge out cld in and sbb je dec (bad) push sub out pusha inc sbb (bad) insb dec xchg or cmovne inc pusha jnp add or xor mov hlt je repnz (bad) pop mov xor out lds clc jmp imull inc imull inc gs xchg xor mov cmpsb push inc cmpsb daa shll sbb xor sbb aaa outsl sub xchg data16 pop cld mov add cmp ficomp sbb adc mov loope notl mov dec aas mov inc ss sbb or jnp aad mov and cli out shrb mov pop or subl jno test adc dec sbb fadds pushf in mov push xchg mov imull mov cmp inc dec mov popa out adc pinsrw adc inc lret (bad) jbe (bad) mov negl loop rcl push inc lock jp xchg xchg shr movsl mov insb mov scas xor or cmp lret test ljmp movsb scas inc fstpt rcr lcall mul pminsw inc js sbb cmp dec sti and jne das push in adc push xchg inc js push xchg icebp or or cmp mov movl mov rorb sbb jnp add jo push (bad) idivl popa pushf cs jp dec or push popa pop and xor das loop dec jb js mov inc jge cmp pop loop (bad) (bad) or jnp cmp pop cmp loopne cld dec insl cmp mov jne arpl xchg out mov mov push dec mov jae mov clc loop shld sbb adc negl dec popl mull pop push push notl and loope pop ret mov loopne out out mov inc xchg out (bad) enter fucom adcl fsubrl test roll jle mov xchg inc adc add push inc add cmp dec add xor sub cmpsb dec lcall lods push mov or adc lret jecxz sahf divl xchg push adc clc add lods xchg in or arpl mov xchg outsb xchg mov sbb mov fisttpll daa or sub dec mov outsb (bad) or xor and or cs pop or cmp sbb ret and cmp aad lock div aas push int mov mov imul xor lods aam cmc icebp ficom fcmovnb mov pop inc int insb stos sbb stos mov sbb pop clc add and sub mov subb gs je mov pop in fcomip scas mov jmp mov nop cli imul loope and loope mov mov mov add out lcall sarb shrb imul add adc cld push dec clc jg mov fist pop sahf dec test enter push les cli lock or mov add test inc into out orb sub pusha xchg imul out inc sbb rorl xchg int3 jle aad std mov arpl divl into lret (bad) jle out mov repz mov lock dec divb pop pop mov add loop add xchg (bad) mov sub lock inc (bad) js jb mov or je xchg adc outsl cmp sub cmp pop sbb xchg push lret push push push cmp xchg xchg popf dec add stos cmpsl pop mov ret push inc imull dec lahf ret popf mov add fsubl pop and daa in rolb jae pusha repnz imul sub stos push jp push mov idiv aad aad cmc nop stos gs cmp inc mov pusha sub xchg (bad) repz inc sbb sbb sub jle push and enter push mov in or pushf je cmp cmp push insl push cld dec inc call push push pusha mov sbb sbb call cli or into xchg mov fs lods into lcall int xlat xor cmpl push mov shr xchg jecxz jge stos jmp mov dec popa addl (bad) out dec negb lea out sub loopne das mov test loope inc cmp int3 arpl pop popf push and push inc push sbb mov or (bad) testb pop ljmp out test rol cwtl pop inc mov mov mov std mov notl xchg scas or pusha jge iret add add xor hlt mov dec movsb adc xlat pusha pop mov xchg mul (bad) lods leave mov jbe loope sbb gs cmc mov mov cmc pop mull dec mov cmp mull mov add lcall mov dec fwait push mov fdivrs pop and and hlt imull inc xchg mov xchg or inc xchg out sbb je xchg (bad) dec aaa (bad) pop iret jmp push sar imul lcall rclb test mov xor dec cmp mov cmp cmp pusha lea scas sbb sub repnz jns sbb orl in or push sbb out cwtl and data16 sub and js jecxz cmp loope sbb fcmovb lods fadds xchg aam sbb in ljmp dec mov ret lods xchg jle mov pop rcrb pop push xor dec sub (bad) pop inc icebp adc dec inc mov fs sub sbb sub cs loope mov (bad) cli cmpsb adc push cmp or iret ljmp imul popf or dec push mov sbb sarl jnp lds fistpl scas fistpl pop push xor sbb inc out xchg fstps or imul adc cmp outsl aam sub jno add and in imull sub sbb lret sbb int3 fidivrl mov daa dec pushf adc inc dec xor jl andb ret fcmovbe sub xchg testl sbb mov xor in enter ficom fisubrl pop push enter sbb test (bad) es xchg or jns insl adc shlb cwtl jg jmp outsl (bad) shrb notl sahf test mov cmc enter (bad) push lods call add xor adc mov adc mov sub mov out dec mov aam pushf fwait push fwait pop les aam psadbw call mov movsl and mov adc xchg inc lea or pusha push xor addr16 in mov (bad) dec loop je (bad) cmpsl js pop xor mov cs loopne pop test jno (bad) jecxz nop negl dec cmpsb fisttp push (bad) xor lock mov fisubr (bad) and jns divb arpl imul jmp inc xor xor dec mov scas and notb jne loopne xchg jo insb (bad) loope stc test cmpsb push les psubsb dec call push xchg add rolb scas xlat stos push mov sbbl cmc mov test or lret mov cmc mov in loopne test pop add bound loop test mov push push add or mov xchg or clc test divl and sbb jecxz lcall test lock (bad) je nop adc and pop notb push mov add cmpsb out dec js sarb dec fidivl lods sub adc sbb xchg fdivrs mov lods in scas adc add leave cmc movsl dec std fildl push ds mov fstl (bad) mov dec imulb or dec add aam pop pop rorl ror icebp sub sub cli cltd clc push shrb (bad) in adc bound jg test mull or scas or cld add cmp pusha mov cltd loop adc pop repnz fstps or or or or out mov mov sub mov and data16 xor sbb out test aam aas maskmovq (bad) dec jmp and or bound cli adc sbb cmp adc push push dec jmp mov arpl inc cwtl dec cmpsl cwtl stos sub and into inc hlt adc add jns stos dec pop lock outsb inc je decb clc inc negl std pop int3 out (bad) call lret add pop xor cmp xchg or popf cld adc and push pop push sub inc lds cmp mov es aas in pushf push fmuls ss dec push push pop mov iret ficompl ds test adc je bound je jp iret sub out sbb pop push mov pushf into mov cltd jb outsb sbb imulb adc mov pop sbb es sub jns pop out hlt addl je ds in (bad) lock mov push xchg repz lock push out imul dec add mov testb mov push jmp fcomps popf and xchg movsl xor inc testl xchg notl sub add push fsubrl or or jle movsb push movsl dec arpl ja,pt xor (bad) jne xchg fstp (bad) negl in xorl popf lcall mull pop ljmp test fstps adc rclb rol inc movsl (bad) cld call pop push mov popa add mull or loopne dec cld shr xor dec cmpsl aad fsubr xlat ds lahf and fldl cld jae xor or sbb cmpsl lcall daa jge ret pop cmpsb loop cltd jge icebp sub mov loop push mov adc ljmp movsb movd inc mov (bad) mov mov xbegin lahf adc sahf cltd push ret mov push mov subl push xor mov scas notb lds xor inc mov shrl dec ds mul xlat daa adc and insl sub mov jbe sbb (bad) ret sub pop mov mov sub repnz cmp xchg push les push test repz xor mov mov arpl xchg xor or ja shrl icebp insb cmp mov sbb pop cmp or popa stos das insb fwait pop and jb cmp adc inc cmp cmp push (bad) or mov jge daa push notl xor shlb insb mov mov and idivl or mov (bad) jno push inc (bad) sbb sbb mov test pop add sahf pop cli test ds sbb loop int enter mov cmp pop cld push jg cmp xor (bad) sbb sbb adc inc test out cmc lods mov mov mov insb or sub jbe sti mov jno int adc adc lahf push add or jle and out xor into (bad) idiv testb fdivrl push imul and xchg xchg sbb cmp out sbb mov int3 xor js push or arpl sub lret lock push jg sub cmp push nop jle and test sbb xor dec nop pop in or add mov push or xlat in out xchg inc mov mov mov mov in and pop jl mov sub adc add fidivl decl push ja jne inc ss add adc xor fcomps pusha ret imul repz mov inc jmp xchg ss inc int3 cltd mov rcrb jbe mov andps and imul mov mov mov popl add sarb in (bad) mov neg movsb jo repnz or inc pusha cmpsb jnp frstor nop sti lcall (bad) call test and add mov xor cmp daa bndstx flds outsb jbe sub lret mov daa add jne insb bound add inc (bad) xchg adc sbb outsl invlpg test sbb jns mov aad inc and dec jo xor (bad) push fild push inc push ja bound push ss popa outsb ss outsb xor pop outsb insl imul loope push xor fiadd sahf mov add push pop and ja ja movl stc adc mov test xor sti sahf mov pop push mov push sbb call sahf push and sbb cli or push jo push inc push and movsb rclb cmpsl pusha cmp rolb cld add fsubp push xchg push pop test cmpsl jl jl iret inc stos push xor add cmp out mov and clc push mov push push inc push push insb sbb jnp inc add call mov mov push and lock es dec repz mov dec hlt les test xor inc test (bad) iret jle or push sbb push call (bad) push and movsb inc je fmull lods push jnp in roll sbbb aam dec sbb int3 cmpsl jge adc out loopne push cwtl dec test sti into fadds js push imul ficomp push sarb add out or mov jge imul push mov les push push mov imul cmp push popf adc loopne ds push or mov push in mov sbbb test xor out js xchg les or mov sub or pushf mov ds loopne mov adcb ja out pop sub loopne addr16 push in mov push rclb push fnsave mov sbb aad pop mov bound frstor test popa adc popf (bad) das rolb push sub sub mov scas add xor mov fidiv ds dec call and js clc and xlat iret enter fcomp flds jno dec (bad) (bad) loopne jecxz in adc mov mov and and popa je xor leave rcrb xchg addl cmp push push aam insb pusha adc sub jbe adc push jg test adcb aaa sbb xchg dec add push push inc aam sbbb aas scas incb or push es adc repz sub cmp repz dec push pop pusha repz repz iret repz nop cwtl mov iret repz enter out iret repz sahf out sahf or sbb sub jb loopne cmp cmpsl add add add jb fs sbb movsb and pushf cld mov or enter mov in leave in leave test je fcoml leave inc in adc aaa stc add push pop and xchg insb call dec add popa or adc iret imul mov adc fs ss test test enter sahf out cld adc and inc out sahf out pusha insb adcb mov add cmp sub sahf push sub aas (bad) leave sub cmp jmp pop jbe add push and push add or popaw frstor mov jns xlat adc pop push or xorb sub xor push dec fdivrl mov pop push call aas jnp cmp push nop jg movsb aas add mov pop mov push enter jg lahf neg dec call mov mov mov push add jns out push out sahf cwtl adc adc adc popf out fmuls in add add push jns jnp sbb push sbb push adc sahf out jo test sahf out sahf pushf or int jns sbb rclb repz repz push inc sbb push pop insb rcr orb sahf out and mov add out sbb roll add repz dec rolb xor out sahf out mov mov sahf mov pushf jns out mov cld js out out cld (bad) mov imul add jbe (bad) cmp mov xor push punpckldq fldcw pop ret add jle jmp rolb or mov ret or test push mov fcomps push scas daa cmpsl jno stos add sub jns cmpsl les push test (bad) sarl aam hlt add cmp jnp and data16 inc dec pop out iret rep je jl sub rep add adc add std add mov lds jmp pushl jge dec (bad) jle out sti jmp out out add cmp cmp unpcklps cmp cmp adc xor ss prefetchw daa daa daa daa or adc es daa daa pop add jb or xlat jo jb push or iret repz push fmul aam pop iret repz hlt in add mov xchg push lock xor negb push faddl mov movl out pushf mov fsub repz out add adc iret repz dec pop pusha je xchg cmp repz mov ds add adc sub adc add inc mov or pop (bad) cltd lods outsl adc jge push pop int cmp (bad) push add or int3 out lsl insb jns out push std jl mov out sahf out stc mov les fdiv in cmc add cmp repz adc and repz repz dec lock iret repz out je mov cwtl cmp repz lods jmp ljmp add add inc xchg adc adc ret iret call (bad) roll outsb mov add or bound rolb push xchg adc iret mov inc adc nop pop lcall or add nop dec inc or or insl insl sbb mov mov adc pop add das (bad) inc ja add push arpl adc push loopne xlat ja fnsave inc mov pop pop jnp outsb pop add cmp roll stc mov cmp sti cld std (bad) incb ds repz test pushf out xchg push add mov pop loop pop push inc pop cs repz inc push mov fmul repz pop jo fs iret repz nop call iret repz xorb iret (bad) hlt cwtl sar movsb ds repz cld mov add shrl push add iret repz adc int3 and cmp repz adc inc adc cmp repz out cmp sbb jo add sahf out sahf andb sub sahf out mov out sahf out (bad) xor rcrb cmp cmp lock jns pop xor inc iret repz push dec cmp repz xor inc repz repz lods push pop mov pusha pop int3 jo fdivrl repz fs nop push or out sahf out cmp je sahf out sahf sarb loopne test out lock test iret repz fdivl nop in repz repz xchg clc push cwtl out sahf out mov adc sahf out sahf mov nop jns out lods dec mov sahf out mov sarb rcrb mov enter cmp adc int3 rclb rcr cmp repz aam xor data16 repz inc fmull push sahf out sahf push loopne pusha in jns out jo sub out nop lock mov hlt dec mov pusha (bad) xor out cld insb rolb dec js cmp repz test or jns iret nop add out sahf adc and xor out and inc sub repz out sub mov iret repz sub cmp cmp repz nop inc jo repz repz mov cmp rclb sarb repz pusha call jnp jle (bad) push insb and iret repz jo push and xor repz js test push cmp sbb pusha push mov mov adcb aas nop mov and mov push out (bad) ja cmp rclb (bad) rclb pop inc or add jg cs leave je (bad) dec adc cmp repz mov repz xor aaa jp cmp mov out sahf rcr call iret roll or and cmp repz dec push pusha insb js sahf (bad) int nop lods scas clc push add push adc sahf out sub dec pop out sahf out jo mov lods mov add mov add push cmp nop push nop imul mov aam nopl cmp push inc inc daa xor cmpl add push push negl push push sub mov adc inc cmpsl inc es xorl or mov pop mov push dec dec mov in push ja fidiv cmpsb hlt jle push cmpl push (bad) or or into out mov push dec push sbb and fdivl movsb jne cmc ds aam scas addr16 mov sbb xor cmpsb sub fistpll scas outsb je jo mov popf ja add push mov mov test sbb out mov sbb into or js cmp sbb cs test add scas jne es es jmp xor out cs adc mov dec (bad) or sub loopne jle sahf or pop inc add fidivr push hlt es mov sub mov lret and roll mov outsl jge rcrl test js adc or fildll inc sbb enter cs cmp outsb xor push push in test add mov push (bad) lods cs test add push fcomps sti push fiadd xchg in in add stos jnp sbb cmpsl push pushf inc je sti push add push xchg push icebp loopne xchg cmpsb jl dec (bad) ret cmp (bad) cld mov cmp xor push (bad) test cmc jecxz addr16 pop add iret call push add inc ja add icebp fidivr dec inc adc cs fimul movsb inc data16 out inc xor push mov jecxz jle inc scas iret dec lock (bad) push push iret ja insb fbld dec cs negl dec div mov es push pushf and cmp cwtl dec sbbb pop insb ds pop add out push sub push xchg dec int3 and inc add push testl stos pop shr mov scas ss xchg jbe rcrl push jbe pop inc mov lock out out dec pop lahf jp xchg jbe fs mov lock jbe mov mov cmp hlt lahf ds das jae loop scas lods mov dec xor vorps push out addr16 add push push mov pop cs or push mov jno pop movb add push imul xor (bad) mov mov push pop dec fbld jmp mov data16 dec aam je rclb icebp mov movsb out xor es mov push in outsb loopne add push push out enter aas data16 sahf pushf cmpsl push fidiv jp lods ljmp fsubs or insb sti pushf jb mov and xor popf inc xchg xchg stos and inc test inc add enter xchg push add andb out adc push pushf and nop in test mov and push adc add mov add fs or fiaddl pop add add out inc push dec add add pop dec add pop inc sbb inc and sti mov push and pop dec aaa push pop mov add sub sbb push dec xchg push loop imul imul mov mov push xchg neg std fimul ret inc push push push cs and inc push cs and sahf negl xor dec cmp testb push out imul push jbe dec or jge jmp push incb add adc sub sub ja adc iret mov sub rolb jnp ss sbb push mov xchg or enter pop es faddl cld jg clc daa iret xchg das aas push pop jmp rol cmpsl lods cmp add pop or push aas xor xchg (bad) jg add dec ds inc addr16 insb addr16 or push mov movsl mov pusha test fs data16 mov psubb jnp loop add push out lock int fwait neg out (bad) cmp mov mov add pop pop xchg lods rcrb clc pop push (bad) aas pop mov imul aas pop xchg addr16 jbe fsts pop std lock add sahf ss insb jl (bad) push data16 mov into repz sbbb arpl pusha cltd cmp mov rolb mov lock xor ds push xor out (bad) or push cltd pop (bad) cmp jg add ret cmc jns (bad) cmp (bad) decl cs cmpsb mov add add fwait int inc and cmp mov comiss dec pop sub (bad) aaa fnstcw pop std clc lock aas inc imul add insl jmp notb pop outsl clc popl shrb arpl sub add sub iret xor nopl xchg add cwtl shrl xlat pop in pop and adc jae pop cs add addr16 xor ja pop cld push cmp stos push fs fsubrl aaa adc das xchg pop lock or push sbb loop inc fldcw jge cmp sbb push sub sahf int mov add inc addl fsts xor sbb push push sbb dec rolb fldt loopne jne ret roll lock cmp xor fcompl jl sbb (bad) fstps sbb or test or push insb push shl xchg pushf out and xor dec and add mov addb rolb dec jnp push and add out push add mov jge aas cmp subl mov jnp iret mov repz and daa and mov es xor cmp orl push adc cmp dec push dec push mov neg xor push daa lret xor ficom push (bad) sbb out insl xchg lahf dec daa dec addl daa mov (bad) jnp jae ja push daa clc push (bad) cmc push ja mov ret jb mov adc jo nop daa cmp imul mov xor and daa inc scas mov daa dec sub leave fistpll aas push xor mov xor sub pop aas jns scas cmp push pop push es and int3 push and and out jo (bad) cmp jmp int3 je (bad) pop push (bad) cmp cmp xlat push lret fcomip cmpsl daa push and push mov adc (bad) push data16 xsavec jb ficom clc repz push addr16 or push xchg adc into incb inc inc inc or jmp std test ljmp or lret (bad) daa inc aad push push jle mov dec dec pop daa mov out in push test incb aaa and dec nop divb add daa fisttp mov daa or arpl dec pushf es adc mov or fild ss arpl daa leave ret (bad) cmc ds shll xor arpl or mov inc nop xor (bad) lahf and repz out fs subb daa push cltd add add daa mov xchg aas daa dec lret ljmp inc inc es mov jnp daa dec add jle xor lock out in repz adcl push test dec inc add adc fbstp xor adc xor push jo sbbl movsb sub push repz iret xchg mov arpl cmpl lcall arpl aas das es (bad) lret iret push out inc in push inc sub ret ret xor inc sub call fs enter pop outsb data16 inc push fwait gs cltd (bad) je push inc mov sti push jle and inc aas call or fsubrs lock cmp jmp dec sbb pop xor dec xchg leave and mov stos mov adc or mov jmp pop mov gs jne adc cmove or sub sar daa jle adc cltd xchg cmpsl (bad) cld test xchg sbb mov inc subl pushf rorl fstpt clc or sbb xchg es gs sub push (bad) daa dec xor mov outsb jnp xor dec daa dec daa jae fsub dec daa clc dec je dec cmp dec jl pop dec pop or rorl jo jl daa (bad) mov mov xor cltd mov call cltd cltd and imul aas mull adc xchg aaa fs popa or sbb movb jb push mov adc inc mov sub ja inc daa int jb shlb push stos sub cmpb adc xchg dec scas inc pusha and cmp pop popa and cmp shrb jmp je loop add pushf loopne xchg daa fcmovnbe ret and lret (bad) aaa into aaa push data16 outsb daa and sub pushf add cwtl stos sub aam cmp ja push insl mov push push pop add push and loop pushf es and stc es mov fnsave push and sub xchg pop dec lcall popa lock daa xchg add stos push into add push adcl aas test into adc aad and add xchg scas mov mov and cltd xor mov rcrb js xor mov pop stc pop mov lock in dec jns out xchg orl pop or repz push xor jmp sub cld push or sub lock mov add pop add push add iret in mov push or pop or andb push or out or pop push sub pop test add add add mov dec lds sub out iret lds or dec mov pop lahf and adc adc sahf out push and jnp out push and sbb fdivp sahf pop adc nopl mov sar push or pop pop add cmpsl adc inc das jg mov or push add add pop repnz cmp add jl dec jnp push push sub sbb jns roll push push push push jnp sub push ss dec inc push inc outsb cmp repz fidiv pop sbb sbb pop adc push out sub or loopne xchg cs pop jo jbe addr16 packssdw adc dec (bad) dec out (bad) and push pop fnstcw int or push sbb sbb sub lahf idivl pop push push sbb pushl mov mov jnp mov push adcl repz push push inc cmp jl jl and sbb adc adc push or daa (bad) jno mov add or inc sti lock (bad) add add pop and stc cmp data16 xor pop cmp mov sbb scas xchg and xchg adc add movsl adc mov cmpsb mov mov mov mov add adc mov inc scas push neg (bad) imul movsl es cmpsb xchg mov (bad) stc cmp xlat jnp push insb pop dec cmp dec fildl sbb push adc lret in mov push or mov inc cs adc sub out daa add jp int push bndstx and mov fidiv (bad) cltd (bad) decl sahf add cs push int cmp (bad) imul (bad) ljmp fdivrl cmp adcl test icebp jg cmp jns cmp je xor jno cs and fiaddl adc sub or sbb add push mov (bad) cmpsl insl fildll xchg sbb mov cld cmp addr16 inc xor and je sbb sub push pop outsb pop pop inc movhps int3 dec stos xor out fild add fldcw xchg mov push sbb repz cmpsl and dec push fs (bad) (bad) (bad) in xchg push lret add lods inc push adc lods jp hlt stos (bad) imul (bad) (bad) (bad) jmp jp lcall push decl pop inc incl push cmp (bad) (bad) in pushl pushl xor insl inc das push inc ljmp ljmp notl sbb xor enter mov (bad) fwait sbb mov jnp push push inc jo cmp xor sub push add sbb push sub or mov pop testl add xchg or out and pop adc fdivrs sub inc sbb pop jp xchg or out mov mov fidivrl xchg jle mov xchg cmp (bad) fist mov mov test jnp push jb call and popa dec incl dec cmp jmp sub popa ss pop xor ss fcomip in cmp popa cmp jmp (bad) push sub push rclb pop out jmp lcall push push inc xor leave repz push sbb adc pop cs mov inc jmp xor negl aaa pop in aad mov or out lcall xor push mov jg jg sub ljmp xchg call lods cltd call stos insl (bad) outsl push iret test dec movsb xchg inc mov push ret movsb push ret jg mov movsl push mov sahf xchg pushl xchg xchg fcomip pop mov cltd jp mov (bad) jl inc push (bad) decl xor cmp sbb push sub adc jmp (bad) icebp (bad) aas and bound and xor mov sbb fwait dec mov xchg sbb and es (bad) out cmp sbb loopne test add xchg xlat mov out movsl push femms aaa outsb or js cmpsl loop push out sbb sbb cmp (bad) mov mov pop adc out scas xchg (bad) fnsave movsb jmp mov scas push mov push les fcmovne ret push iret lret into fxch (bad) call (bad) sarb int mov leave mov ss mov inc mov pop push in out mov mov push lods mov mov cmp ja decl push inc out (bad) adc pop pushl cs pusha ss inc and icebp sub pop rcrl andl cs cmpb rcrb insb es push inc xor sbb adc or jbe inc cmove mov (bad) or sahf out adc fisubr sbb aaa (bad) pop (bad) jge (bad) js cmp shrl mov mov jle lret int3 mov jg ss int fnop push loope jmp (bad) jmp fcom push in pop mov into leave out les (bad) (bad) mov (bad) mov lcall scas xchg mov xchg mov mov push mov push mov les fwait dec mov (bad) mov (bad) mov mov mov push cmp pop xor pop xor jmp loope cli and outsb inc sub sbb adc sbb imul mov jne (bad) je sahf dec xor pop jne pop pop ja daa test cmc pop push scas and test negl xlat dec (bad) pop dec add pushl mov xchg sub inc popa adc add or pop icebp incl pushf mov push fidivl out (bad) lret push (bad) push loope (bad) out insl sti (bad) out es jmp (bad) (bad) (bad) ss inc sar jg mov test pushl test mov call jnp call insb push js pushf jl jmp pushl cmpsl test lods mov mov adcl (bad) (bad) ja shrl pop (bad) mov xchg mov jle das aad mov jle pop inc (bad) imul pushl call adc insl inc sub sbb add jle cmpsb jmp jnp fs xor roll push syscall sbb rorb add dec jne scas cs sub add stos inc push or out vpsrad mull sub incl push add jle push push stos ret fwait cmp xlat int3 scas adc fst push out push in in (bad) jmp push push adcl (bad) aad out les pop dec sarb xchg into lods out sahf xorl pop push mov pop dec pushl dec outsb push dec push pop push incl (bad) (bad) decl outsl popa lcall jge ljmp sbb nop jg mov movsb jle mov fbstp inc ret stos (bad) mov mov std (bad) cmp jge das incl dec xor sub push into (bad) lock (bad) mov subb or xchg cmp sub mov je pop or ljmp mov neg mov xchg pop inc rcll out sbb pop push jl and mov push sub mov out out out imul out out out (bad) fldt loope,pn lret (bad) mov push icebp push pop jbe inc movsb fwait out mov movsl test scas clc add push ljmp fisub push ret lods xchg mov push lcall xor cmp xchg jl dec mov ds imul js jle push lods mov je lea movsl xchg mov mov into ret scas mov mov test cmp push aaa incl xlat xchg mov push scas and dec sub iret repz sub sbb loop es incb pop inc xchg js (bad) daa subl shrl ds adcl xor xchg pop mov mov mov xchg shll in jmp out icebp fsubrp in clc scas mov in shll into (bad) (bad) fld mov push cld scas es stos mov pushl outsb mov push cld adc pushl dec jbe lods jle fisubr mov push jmp push fisubrl mov xchg sub bound inc dec aas jmp movsl out push dec incl call je cli loope outsb movsl jl push push mov jle cmc pop shrl test test ljmp (bad) mov test incl adc push mov xchg mov test push push dec sub and test inc enter jbe adc testl stos jo out and cmpsb or fimul cmp adc rcrl into (bad) leave mul fcomip out icebp mov mov jmp jecxz (bad) push aam xchg or mov lods push push inc cmpl cltd ja scas scas mov es incl (bad) out scas fcom (bad) jmp jmp xchg push leave mov push mov (bad) imul push xor arpl mov push jae ds jge sahf xchg mov fnsave mov jmp mov js xchg cli lret cmc pop shll (bad) push loope lahf xor (bad) mov mov jbe sbb shll dec mov mov popf andl pop sub cmpxchg pop mov add push les push sub iret loope popa adc push or adc mov out divb inc adc push sbb (bad) mov rol imul loop lock pop mov push lock fcmovbe jmp ror shlb (bad) mov ljmp xchg (bad) jmp jno js push jmp cmp pop out in (bad) out in jle call push mov push fcmove ljmp mov fwait jge int data16 inc (bad) cmp sbb arpl (bad) decl and pop cmp ljmp aaa pushl inc incl lds mov jle (bad) jl pushl mov mov in lods push mov mov jb test (bad) sbb pop enter call (bad) cltd push jnp ret push pop sub inc ss sub add jg arpl mov sub add idiv divb iret pop push loop data16 (bad) jle or jbe in loopne lcall repnz lock (bad) stos jo mov (bad) (bad) into (bad) fcmovnb ret call mov sbb scas stos push mov mov mov mov incl jbe mov jle cmpsl fdivrs (bad) ljmp icebp pop (bad) das jle (bad) inc cltd jp lcall repz xlat popf movsb outsl push incl (bad) cmp sbb push xor jmp xor outsl inc cmp mov (bad) jp test mov outsb pop (bad) sub cmpsb lods subl (bad) jns popf mov lods cltd mov mov movsl push xchg js jae (bad) push ss inc inc clc stc adc add cmpsb mov movsb (bad) nop jns mov jne push pop inc aaa add mov sahf pop inc add dec pop test add cmpsb dec push jo inc sub (bad) mov repz cli ljmp out (bad) jmp fdivr out aad loopne int push std outsl faddp ret mov test sahf lcall jp mov ljmp inc inc (bad) jle pop inc lret repz nop cmpsl bound out jle out out cmp hlt (bad) inc sahf cmp xchg outsb rcrl mov sahf push mov cmp pushl adc dec mov push cmp xor cmp ret pop bound xchg imul cmp jne push push pop (bad) xchg push cmpsb push mov (bad) cmc mov bound push loop add sbb lods and push push sbb lcall mov inc and add nop (bad) or pop push lods xor sub adc sbb sbb or lds (bad) fcmovbe (bad) outsb icebp in jmp out in idivb mov (bad) sar (bad) scas ret (bad) mov push icebp lcall mov mov out inc mov inc inc lcall outsb ljmp in in out out out stos js cmpsb (bad) shr popf orl xchg je jne pop outsl mov ja sahf iret push rclb sti or pushl sbb incl sbb pop xor (bad) xor jb cmp pop cmc dec pusha push inc jle call pop jmp mov xchg jg fbstp shrl mov mov pop outsb sbb push or (bad) (bad) mov mov adcl dec inc pusha leave leave repz push loope jne pop (bad) or pop jmp adc pop into sub aad mov push imul xchg fstpt jno xchg push scas into (bad) ljmp into ror call mov dec outsl stos jo cmpsb (bad) mov xchg (bad) subl push jbe inc adcl jbe call lds jmp in fcompl out repz hlt loopne (bad) (bad) sub fwait mov jb xchg jae mov xchg jbe xchg leave pop mov sbb xchg (bad) cmp push sbb pop push out out push cmp push sub incl decl nop push lcall mov outsb sbb stos add xchg jle stos xchg cmpb push xlat into mov inc sub sbb mov iret repz push dec cmp and dec sbb mov lods imul movsb pop mov aaa outsl add test sub inc pop imul test idivb and pop xchg mov xchg out jmp out jmp imul mov decl sub mov mov push ljmp pop insl lds push pusha pop ds cs in into test loop incb (bad) lcall hlt repz ja fidivl nop jle xchg jo mov mov es jae xchg pinsrw jg xlat push mov xor adc enter and pop cmp out push jns cmp outsb push clc cli (bad) jmp cmpsb jl xchg (bad) mov xchg sahf xchg ljmp adc (bad) pop sbb scas xchg jge addr16 mov push push inc cmp mov ud2 mov pop nop push mov aas incl inc adc mov aam fcomip adc loopne push sbb push test (bad) jno ds lret sahf out in movsl jle adc not int fadd ret push in jp dec scas cs (bad) lcall (bad) out arpl addr16 inc call clc push out fsubp ljmp jecxz out mov repz pop jnp insl sahf mov jbe push mov dec ret xchg ja rcrl jae aaa (bad) (bad) fbstp inc sub ljmp xor jbe cmp sbbl lea mov cld bound insb push jbe subl mov mov stos xchg cs sahf jae addr16 pop inc call test pushf cmpsl fnstenv push jae popa sahf out sahf dec inc xor fnstsw jns push aaa in fcoms pop iret pop add les xchg pop movsb mov test pop out pop push and xor adc test into mov inc xlat sar loop lret clc dec push add leave lods stos stos aam scas inc pushf fwait ljmp jp cld push in cli pop ljmp dec push lahf lcall mov into mul pop jecxz push enter div xlat jno pop mov ss mov dec repz insl xchg mov cmpsl push xchg xchg ret jp fnstcw xchg (bad) out cmp pop (bad) aas and call es (bad) faddl cmp adcl push loopne add push mov push jle int test scas jle push aaa (bad) sbb add adc es jg or sbbl pop sbb test pop add pusha add mov push (bad) (bad) ficom xor adc and aam or movsb mov jmp ror push int loop imul cmpsl inc cltd xchg jmp mov jo,pn push (bad) jns pop call mov pushw test incl fsubs jecxz sbb idiv hlt in mov pop mov imul lahf btr xchg outsl xchg jo xor sbb je out lds fcoms mov call and cmp fnstenv jmp bound ss aas push pop dec fist mov inc mov cmpsb les mov xchg push or push fidiv lahf movsw and mov es cmp fwait push (bad) push cs test shlb scas enter stos mov mov test ja (bad) push push and pop test push inc divb xor ret lret lods lcall (bad) fmull push mov mov out movsl mov jg mov push dec decl aam in xchg dec jbe out jecxz loop daa int jmp loop jecxz cmp fdiv shlb mov mov imul mov jne xchg jno ret xchg je,pn inc shrl mov push repz clc pushl sub lcall sub outsb es cmp mov in inc xchg mov jo paddb andl adc rolb andb push xor pop sahf popa push push inc xor shlb ja inc mov das pushl mov iret sub cmpl divb add lds (bad) xor jnp push or sarb push mov lds ljmp cmp jge xchg push ret dec dec ljmp jecxz jmp mov inc fiaddl call jmp (bad) jmp jmp push sub (bad) jecxz jecxz mov addr16 addr16 push jge into insl mov imul fldcw mov xchg ret cli mov dec fcoms xchg pop inc addb inc es pop xor or das pop ds cmp inc call cltd push mov mov neg mov iret (bad) cmc pop pop mov jns ret sub push dec push cmp xor adc subb test dec bound scas adc mov imull daa pop jle push mov cmp push pop push stos test pop (bad) int3 mov lret test outsb xor adc cmpsb mov push push pop lods ret adc push ss push sub jo ljmp fsubs pop pop pop popa adc push jmp mov sbb loop out iret repz cmpsb mov fs gs iret cmp push mov fiaddl ds mov in push rcll xchg cmp ja fldcw scas jae decl pop inc adc clc push xor jmp pushl aaa out push fisubl cmpsb jnp mov lcall mov popf or add lcall cs cmp cltd movsb imul scas adc add and das or (bad) flds pop push adc adc sbb cs insb push add movsl test cmpsb cltd out mov (bad) lcall cmpsb jl imul mov lds call imul fsubp loopne dec pop add ljmp fucom aaa add (bad) ljmp das mov (bad) pushl shl arpl jle sahf scas (bad) push out mov mov pop ss pop (bad) scas adc les aad push push std ljmp xchg aas pushl sbb decl push jmp sub ss jbe aaa aaa xchg dec lods jle xchg scas lds out adc mov push roll mov dec xchg out insl pop push cs aaa adc (bad) xor and or dec and pop sbb imull out push adc adc repz and adc test aaa std outsl xchg mov xchg test jns jl pop jmp inc jmp aad out cwtl mov out inc jecxz fucom pop ljmp outsb and pop scas movsb pushl das call int sub adc repnz pop lcall in in repz mov jo (bad) pusha push test mov popa dec push mov push mov xorb aam dec scas xchg jge jle (bad) scas das es mov fldenv dec mov nop jno je out jbe rclb inc cld jg (bad) (bad) cmp adc dec sub pusha cmp pushl sbbl lcall push sbb mov (bad) scas and fwait es nop (bad) je ret push push fstpl adc loop pop push aas pop cmpsb sbb cmpsb ljmp sub jns (bad) and sbb mov jg sbb sbb (bad) jo inc outsb push dec mov stos inc call fsubp mov mov out faddl fist push in mov xchg pop das push jnp or jmp pop call rcl out push push pop rcrl (bad) cli sti call jns scas xchg push mov popa push rorb sbb aad sub (bad) les mov (bad) mov mov push push mov push ret les (bad) fistl mov dec sub incl sbb sub pop sub outsb xchg xchg arpl cmpsl push mov out ds cmpsl stc roll xchg daa mov jmp sahf jl bound sahf out sahf cmp es sbb in (bad) dec dec das pop daa push cmpb mov cs push or push sbb sub outsb ss int and mov test jo imulb pop out (bad) jge push fsubrl icebp call out loop fsub push fucomip sub sub sar jg mov mov xor jmp push call (bad) stc sbb nop loop sti cmc ljmp scas sbbb push mov cmp mov mov mov push insb inc and pop xor mov adc dec jbe cmp ret mov mov rorw (bad) aas mov movl inc xchg ficoml pusha cs cmp es das in and push rolb pop cltd push mov and mov pop push push cmpsb adc and leave sbb test add aaa adc pop testl loope add test cmp sahf cmp stos es jp xchg (bad) scas jns dec jmp cmp lcall (bad) in in in inc dec cs jecxz in fstpt in faddp mov sub pop sub mov xor xchg ds aam sar repnz and sti cld jecxz pop loope jbe,pn jg sbb (bad) push mov pop pop imul adc lock xchg pop cs je xor mov xchg jecxz mov mov sahf dec imul cmpsb push jbe push aad aas mov aas (bad) cmp pushl cmp sub pcmpeqb lds iret (bad) mov in (bad) jno pop es mov outsl cmp pop pushf (bad) pop movl dec pop pop sub dec scas add bound adc out (bad) mov push notl sub and outsl mov mov add inc push mov in stos test imul out out sub (bad) mov (bad) lahf mov pop in mov ffreep out push jmp hlt mov outsb stos in imul push sbbl test inc push jne cmp xchg fdivr jb push ds mov lret push push rol (bad) (bad) and jecxz cs sahf sar inc fcoml lahf push and push xor mov add xchg pop pop stos push lcall xorl pusha xor cmp push pop push inc cmp sbb push jo in pop pop xor push (bad) mov push stos out pop push testb sahf pop sub cmp imul icebp scas add lods sbb adc sarb inc push mov fsubp out loopne mov jecxz in (bad) lds adc or pop push mov shl (bad) out mov mov mov sub lods jl ljmp push mov minps cmpsl xor (bad) mov enter cwtl jp mov (bad) mov push mov push add es fcoml clc push mov sub aam out les pop call sbb jl mov xorb cs inc (bad) xor (bad) ss sbb cs popa addr16 pop push repnz das add out xor cs push pop or sbb or xlat jle xor inc jecxz sbb xchg mov fwait push xchg test sub shr (bad) sti jmp (bad) out lds loop pop imul jecxz sub fstp loop in out jle lods outsb add and pop cmpb (bad) fnstsw cmc adc xchg jp ljmp pop jle mov pop push pop jmp shrd push jno xor dec mov rorl ret push lds movsl sbb pusha push lret xchg pop add out clc dec iret mov dec and jl dec loopne (bad) push pop mov push nopl out push sahf xchg mov pop out add fs dec push ds and xor push adc pushl adc div or insb ds sbb and jnp out jnp and mov jmp stos jle scas (bad) pop loopne lds out pop out fnop loope mov dec xchg fdivrp pushf test pop test push push pop (bad) mov adc sar (bad) fsubp sbb std inc mov mov jns ljmp jg inc in push push pop (bad) (bad) mov jg popa cmp jmp xchg pop (bad) icebp jp pop push pop ret push les jmp jmp push insb lret push into mov aam loopne jg ds mov sub add lds mov shl stos mov jl jl jbe popa mov rclb sbb das (bad) ljmp mov fmulp or xchg cmpsb push adc xchg stos mov mov (bad) push pop neg jp mov adc pop mov out inc loop in into loope loopne (bad) (bad) aad test out imul in cmc call mov jl fimul or push sub (bad) cmc addr16 ds loopne push pushf daa sbb cmc in out test lods xlat ljmp (bad) jl mov adc xchg sbb xchg push lcall dec (bad) (bad) lret int daa lock rolb frstor or lds mov cs mov test repz mov das jecxz sub imul sbb adc aas outsb aad aad movl neg push sbb xor mov push push clc mov push adc sub and in fldl outsb mov (bad) pop ljmp xlat loopne sub stos sahf sahf cmp sbb iret adc rcl aam lock clc jb and (bad) cmc in call inc sti movsl incb scas jp mov (bad) pop insb or dec cmc push lods clc sub mov mov mov data16 push push movl fnstsw pop into xchg je fildll cmp ss push mov sub or push mov scas sbb repz cmpsl popf xchg xchg roll dec xchg gs scas dec sub push adc mov popa dec pop aas mov pop mov bound xchg mov ds mov dec sahf std stos or push (bad) imul call push or fimul mov add (bad) fldl (bad) (bad) loopne sub (bad) cwtl jge pop loopne test sub cmpsb adc bound arpl incb pop jmp (bad) fstp out fwait fwait out (bad) out scas test push js (bad) pop push push push mov mulps lea aaa adc es lahf (bad) movsb jmp push jb mov cmp cmp jo push iret jne push jl xchg push out mov sar fcoms and aam adc cmp pop jle mov cmp cltd mov jne mov and imul ds add movsl imull add and cmp arpl js add lea xlat fdivr xlat fild pop (bad) push fldl fadd pop orl push cmp push jno mov sbb call (bad) pushf pop push jno call in xchg lods stc incl ljmp scas jns cwtl xor (bad) insl inc pop testl pop clts pop scas ljmp push xchg (bad) pushf cmp rorl push jle es inc (bad) mov (bad) divb (bad) aad cltd push xchg jae cmpsl arpl (bad) gs in add mov stos int3 jne sahf mov or mov pop mov push sub sbb outsl and add add dec add sbb inc pop push push (bad) js sbb xchg fcmovnb mov loop (bad) fcmovu pop aad faddl mov lock fcmovbe frstor pop pop divb fbld (bad) push out cmp daa cmp bound inc sahf cmpsb bnd ja icebp inc lds jg les push imul cltd test shrl adc pop stmxcsr xchg jae push aam push ljmp mov (bad) ficompl int pop hlt and add scas xor aas test xlat pushf push popl mov and xlat xchg dec push sub (bad) ljmp sub push aaa or cs xor push iret lods (bad) scas mov or push sbb dec mov or movsl call fdivr aad (bad) aam pop (bad) ficompl (bad) out faddl out ss sub loop xchg js mov fnop sub cmp pop jns push movl in in (bad) jmp out jmpw add iret push push scas push scas push lcall mov sti cmc shr pop adc jge xlat outsl inc jne scas fwait out jbe push pop popf clc (bad) insl pop int jno je jne cmp pushf lcall xchg outsl (bad) pop xor enter mov inc mov and pop cmp data16 pop in push cmpsb movsb push dec sbb mov pop adc lods pop incb cs push add fidivl push pop jg jno into push inc mov push add jae xchg out bound nop lret out (bad) out xlat pop fcomps (bad) fcmovu rcr pop adc jmp inc iret dec sbb je iret push fdivrp andb imul data16 pop je in sbb ljmp inc adc fdivrp fnsave dec in jmp mov je jne scas jbe pop sub (bad) ja pop add jp xor out orb movsb stos xchg das in (bad) rolb rcl cld (bad) and ss pop flds add test cli shrb push push and dec mov imul gs pop mov sbb sbb add (bad) (bad) add mov add iret fistp sbb dec jl clc lcall sbb je mov fmuls or flds fcmovu rcr stos test lahf jmp out scas mov xchg push adc out adc imul addr16 pop cmp pop cmp mov imul call (bad) imul ljmp movsl jno ljmp add incb pop (bad) mov sbb pop pop jg xchg pop mov cmp lods xchg sbb jno push int3 xchg (bad) or out fwait pop popf ss in roll (bad) lcall or pop call jl pop movsl (bad) cli aam push pop or cmp cs jmp pop daa pop adc push mov xor into insb mov out pop sbb dec (bad) pop pop dec dec mov rcl cmpl fsub fcmovnbe fimull shl fadds out xor mov data16 bound testb push mov lcall roll scas sub (bad) (bad) jae mov div in (bad) push (bad) jmp jae scas pop jne stos (bad) outsb call out pop sbb sbb aas inc dec pop outsb call (bad) adc es ja (bad) mov cs lock jge clts scas inc scas daa testb pop clc mov inc popf push loopne pushf fcoms sbb es sbb xchg ja push push test xor dec sub push ss push sub pop stos add lahf outsl pop test push idiv jne fistpl incb and cmp xor pop out add lea (bad) (bad) mov push pop out mul rolb iret or test xlat ljmp adcl cs push (bad) iret jnp pop adc pop pop mov (bad) out in or int3 out push cld pushl movsl arpl push stos jb scas push ljmp sti loop xchg dec pop xchg jo xor mov iret rcrl sbb push push push pop loopne pop (bad) sbb jp cmp adc sub lds dec dec into iret in add push jbe (bad) fiadd loope fistpl dec xchg push cmp lea incb insb jae fs inc cs add sub jne pop fisubrl add push or call sbb dec sarb (bad) push mov neg pop jmp xor out push (bad) iret xlat scas jmp push out test (bad) daa xor aas sub out lods js adc push and call ret push aaa fs pop xor (bad) jns cmp xchg or mov fisub aas pop repnz cmpsb jo sbb scas (bad) push pop test lock cmp pop enter es push pop daa adc dec cmp pusha or mov pop (bad) pop add fdivl gs inc mov repz pop (bad) cltd jbe out dec ja (bad) lahf jecxz ficomp push jp jecxz push push mov lahf mov push es sub pop dec cs (bad) shrl sub add adc aaa daa clc js adc and lret pop push inc jecxz lret repnz fsub adc lds rclb out pop in ljmp sbb mov jp lods idiv arpl pop adc test push push bound adc and pop push stos push stos pop icebp push jno (bad) push pop pushl testb or je xor pop jb xor rcll cs and loope ja pop and pop push push sbb in cmp push xor push sub mov (bad) push dec and outsb (bad) aam int cmp push iret push pcmpeqd cmpsb add push ja sub mov in push popf je mov dec and pusha adc dec cs xor push sub adc test jb daa (bad) (bad) pushl and or (bad) fstps rcr rcr insb mov jo xlat into (bad) (bad) out push add (bad) (bad) mov mov test adc and out mull lods out jmp out imul mov adc xlat push out pop pop mov and push jle inc pop (bad) cld addr16 push ljmp scas pop push incl stos xchg ss out call fiadd out loopne xorl div and and sarl pop push and sbb ret push pop dec pop sub rorl test push jae int or (bad) push fstps lds (bad) loope push in out lahf xchg movsb ja mov push into into imul dec sub dec adc decl add pop je push add push push inc cmp jmp into iret in out rolb flds fmul xlat (bad) loop imul outsb out mov inc test adc out mov and sbb hlt ljmp sahf mov mov sub (bad) ficom push cld decl cmpsb inc (bad) (bad) decb cmp scas scas push outsl (bad) scas decl mov inc mov pushl mov jb sub and cmp inc pop and and pop push cmp jecxz push sbb add aas push push adc mov scas adc jnp mov push cltd jns movsl fabs push push xlat lcall fild loop mov sbb ret mov dec idiv sub das adc inc scas sub add pop lea fiadd (bad) add aam hlt cli repnz pop not fcom xlat mov fist pop aam lret incl adc inc xchg inc push mull adc (bad) sub leave mov outsb xchg test ja mov cs mov and (bad) (bad) out add (bad) outsb dec std jp mov scas push jo pop jo jne pop pop in xchg cmpsb mov je out ficomp decl test out loopne dec ds and and cmp loope inc aas push (bad) emms or cs xlat pop (bad) xchg jb xor cmp mov call fstpl mov xchg outsl stc sub or mov dec out inc (bad) aaa cmp pop add or mov in fmull pop out aad push iret xlat notl sub out mov testb push imul mov insb push (bad) ljmp cmp incl int3 mov cwtl jl pop xchg pop lret pop adc fcomip push mov push (bad) loope hlt push mov push pushf xlat addl sar lret jb and imulb sub enter in lea ljmp es (bad) push dec cmp jmp and and xor dec rcrb cmpsl mov mov pop push pop in xchg jle faddp cmpsb xchg jbe cltd je fiadd loope std das cmp in fcompl adc and sub shlb aas lds ljmp add ror sub incb adc pop pusha lds (bad) fist subb sbb inc outsl push aad push div das clc or jmp dec jp ret fwait jg jae das pop fistpl clc cli mov insb push daa sub shl call rep dec pop out test dec decb jno aam pop (bad) pop jle pop inc incl sub outsb test jmp sbb call imul sbb dec pop add push pop push cmp js push mov mov dec jnp out das bound mov stc ficompl mov mov jmp push (bad) jecxz jno sub jl push sub jmp ss pop subl push aas out enter (bad) out into pop inc push cli (bad) (bad) (bad) sarl sahf and mov cmp push out mull xchg andl cld orb dec (bad) das or pushl xor mov pop out mov jbe ljmp daa decb in lret rcl (bad) gs push scas push (bad) jo icebp add push mov xchg xchg mov cltd push movsb add mov mov xor sbb push pop (bad) lret jmp dec das fs push adc mov popa add sbb xchg cmpsl (bad) or rolb data16 jnp adc jne orb push lahf jnp dec repz (bad) loope jbe jge and (bad) push decl cmp pop add or ret mov sub mov mul xchg or faddl iret int3 rcrl inc aam stos xchg jg test loopne mov ret mov loope push mov out in (bad) mov add xchg (bad) jmp push cmp outsl add into (bad) mov incb sahf imul rcl out lcall insb (bad) repz push lods push scas scas push arpl lcall pop outsl mov jp ss pop icebp push inc mov push xor pop xchg jb das jno (bad) (bad) mov push xor cmpsb insl mov jno rorl and push sbb enter sbb mov jno push (bad) bound out pushf jle sub lcall mov xchg and jmp ljmp lcall arpl xor push das or (bad) imul mov out sarl rcrl pusha xor inc mov iret lods or mov mov ljmp imul imul pop dec outsb inc sub mov sub sbb dec adc jl stos mov loop mov xchg hlt repnz mov push scas push (bad) (bad) jb scas clc lea outsl cmpsb sbbl xchg rorl sahf subl out (bad) push xor rcll das add mov ds scas push push and and xchg cmp pop pop sub ficom call ret xchg push (bad) fcompl test pop cmp imul pop inc jo mov pop add das incb lds aam cld jge,pn fisttpll mov mov vmovhps xlat cs mov pop fcomip jne add inc fidiv clc or scas jo mulb icebp js mov rcrl outsl (bad) lret test loope call hlt push out aad je call mov jae jmp (bad) out add mov imul das mov sbb cmpsb xchg punpckhdq inc es repz sahf push push and sbb push fiadd sbb aas lods pop xchg push xor lea pusha in or jae repz mov pop (bad) push dec cmp daa and aas adc ror mov into aam sar mov lret (bad) mov scas pop sbb adc test jg aas jl or fst lahf lcall es fs xchg pop out adc inc mov shl add (bad) push mov imul inc (bad) lods push scas push mov decb fistp mov xor mov fsubrs mov loope mov movd sub (bad) in (bad) xchg sbb inc jo ds loop add push xor scas test int (bad) mov mov pop xchg push les inc pop and leave sub sbb aas adc push incl fldt not lret rolb ss ljmp movsb cmpsb (bad) xor adc xchg and addr16 into sti cli stc jg data16 aad (bad) out es mov mov jmp idiv jno out fs inc inc mov mov je mov out xchg pop and aas sbb push stc div decl push push into inc sar outsl push pop pop pop pop xchg pop into sbb push push dec pop cmp pop (bad) pop mov dec cs cmpsb jg (bad) jns fldcw aam (bad) (bad) out or jle aad push idiv cmp push mov xor pop sete or aam cmpsb loop loop fcmove (bad) lret sar aam add mov addr16 xor out fdivrl hlt xchg sbbl outsl inc push int3 mov push testl call leave mov mov push pushl sub or adc push rcl (bad) jecxz pop lods jecxz arpl lods scas xchg mov jae push push ja loop mov push mov (bad) fmul ret incb call cmp (bad) xor sysret (bad) outsl rorb push pop cli loop jns (bad) fcomps out dec test dec inc cmp call jg sub repnz mov rcr aad popf push mov scas dec push sub sub mov jle dec push loop sub fcmovbe (bad) (bad) les mov jne fwait mov lock pop xor lea das pop testl mov pop sub sahf add xchg push out lods push (bad) push scas or add in push jb mov cmc mov (bad) sbb (bad) fst lret mov sub mov xchg out das push adc outsb inc and (bad) (bad) pop call push mov dec xchg je incb xlat (bad) fsts or (bad) inc inc mov call mov ljmp push call in xlat roll call out decl or out xchg mov xor fwait pop sbb mov jbe mov imul pop push mov pop out mov xchg out not inc jb call push call (bad) (bad) push lret push imulb idiv push mov pop popa and pop jg jecxz sbb insl outsb imul xchg fisubr jle incl jg decl sbb js adc pop ss mov rcll outsl pop (bad) fsubl xorl jae outsb xchg push daa or and inc es pushl and push or push jge pop out std ljmp add fdivrp mov jle sbb stos mov mov clc mov bound aad mov pop not les sbb inc rcrl push insb mov lds mov jle (bad) decl jl aam fucomi jecxz jl pop cld pushl xchg addr16 (bad) push push lods sub mov push pop add rorl insl pushw mov and sub leave mov push setge inc mov movsl aas rol mov movsb push pop mov sub aaa call (bad) mov fwait inc sub mov xchg imul adc adc mov cs in (bad) iret push idiv push sbb cmpsl fnstsw addr16 idivl inc cmpsb mov jmp mov scas add out jne xor rclb jo mov lahf out or div sub cmp aad cs hlt incl mov sub pop enter imulb test inc pop cld push mov dec (bad) clc idiv enter mov (bad) fmul ret (bad) mov pop pop jb (bad) idiv sbb push adc das dec dec out mov call (bad) sahf jb insb sahf xchg out incl sqrtps sub push jns,pn adc aas push jb decb rcrb in rclb call sbb pop or jae pop push or inc mov fist es push jecxz jmp loopne and jge cmp sbb add push cmc mov (bad) mov add mov ljmp ss xor sub stc div lcall gs sub incl mov call roll pop ljmp cmpsb out mov inc incl inc xor push dec mov push icebp (bad) adc insl aaa je,pn jbe lahf pushl mov insb push sbb jns stos push aas (bad) aaa das sub daa in and pop loopne lock (bad) pop lock pop (bad) iret (bad) out pop dec orb pop inc adc aaa cwtl jbe lret xchg or out mov out inc sub dec xchg xchg idivl mov mov andb insl dec sub daa int out hlt vunpckhps test inc push inc (bad) scas push popa enter xlat and and jne scas (bad) jnp lret inc cltd jl cmpsl (bad) jl mov xchg jl fucomip outsb push fwait adc (bad) aad xlat fwait jno jno sahf out push and sub jne sub add icebp int push loopne iret incl rorl popa dec aas outsl or (bad) mov pop mov pop daa lods (bad) jmp push fisttp xor cmpsl lea adc out aam pop push dec sub push jne mov cs inc and sub (bad) dec cs mov in stc pushf push in clc jg arpl loope mov lods imul je and xchg test pop jmp (bad) (bad) into add clc mov mov (bad) outsb mov inc out pop clc aas mov inc xor iret lcall outsl push push fcos cwtl add adc orb push cmp cs sub mov (bad) bound and int jno into int add (bad) mov pop negb push rcrb push lea push fmull mov rorb cld loop arpl mov push pop stos shrl push pop cmp negb push dec jb sbb addr16 push test mov repnz sub fcomp loope push ret jmp movsb bound pop test inc xchg test shrd jle sub pop xor add mov jne mov xchg mov aas push iret addb popf jg push adc add mul mov sub (bad) outsl mov outsl push cltd fnstcw jo insb outsb pop cmp test mov shrb xchg out iret ret int or fdivs lds push and out test test (bad) mov pop test aad pop push arpl lahf subl out imul fiadd (bad) xchg es mov out movsb push add mov or ja push mov test div testl push idiv out cmc idiv mov pop jmp js jecxz fs gs addr16 es pop fmull orb pop push add inc xlat je ret mov push daa (bad) divl insb jp arpl sub xchg js scas (bad) mov outsl jmp inc sahf xchg push cmp out mov cwtl outsb push outsl jmp bound xor pop jmp idiv ret push notl in into ret int3 int or loopne out fcmove shrb mov test push idiv insb inc daa xchg adc imul lcall inc test xor aam js inc and push xor (bad) divl scas adc push and adc into fs test test mov ljmp out mul add ljmp xchg (bad) mov jmp push inc jo jle scas push cltd pop cmp pushf rorb cs out sbb mov (bad) and push cmc repz sbb push ds ret fisttpll jp add push and pop (bad) aaa and jno outsb cs outsb outsb push outsb dec stos lea test lock pop ffreep mov rol lret testl test lcall pop decl push (bad) out jge or (bad) testb add xor push mov div sbb negl sarb fiadd (bad) lods scas lods mov out incl jns sub ljmp insl js xchg mov arpl movsl cmpsb pop lods mov iret das mov iret push lds lret mov adc mov cs inc xchg loop insb push out (bad) js cmp cli xchg mov xor pop mov outsl (bad) xchg out xlat cltd insl push xchg das (bad) imul jno lds sub divb incl or dec adc aad lret lret mov mov push xor adc jbe ret mov xchg scas (bad) enter imul inc (bad) out out and fwait sarb ss xchg push mov fwait (bad) fsubp in (bad) (bad) push sbb xchg mul imul repz iret (bad) cmp test push add jecxz pop cmp pusha cmp ds inc push stos push scas push mov outsb ss es ss push fs adc pop pop push sbb mov jno pmaxsw sbbb xchg test mov data16 pop mov ds test shll insb (bad) lods test push fldcw mull add and pop mov (bad) jmp test mov (bad) mulb (bad) xor pop andl adc addl xchg mov pushf jne push out inc mov fistp cs jl pop pop push push (bad) xlat mov mov (bad) mul aas pop cld (bad) idiv cld cld sti mov dec sbb scas mov aaa repnz fnstenv mov inc sti mov lods addr16 push inc out lock add xchg pop es dec dec daa inc add out add jbe out (bad) daa pop je aam push mov push push xor cmpsl subb xchg push pop or test enter and sub lods adc es inc sub ret pop out leave add iret enter not movl iret aam xchg xchg add jnp scas xor lret mov aad jno out and not mov adc lds inc outsb mov fsubp out mov loop loop loope (bad) fcomip (bad) xchg adc pushf in (bad) jnp stos das out idiv out movhps cld sti xchg mov cmpsb mov pop push mov and mov jmp inc es orl inc test inc (bad) call sbb test mov adc (bad) push (bad) popf (bad) mov test neg xchg push aad push adc sahf mov push sub sub sub mov or ror add push loopne push fcmovbe lds fisttpll xchg mov cmc imul inc aas and or daa out test xchg sbb (bad) add cmpsl fstl mov push loopne cmc aad (bad) imul repnz mov incl sbb outsb addr16 out xchg movsb nop out inc push je arpl push mov cli cmp jbe ds cmpsl stos data16 ficompl pop jo pop inc mov push pop xor (bad) maskmovq push mov dec das ds push subl outsb pop notb ljmp push lret lea xor pop sub pop out and (bad) movsl nop stos imul pop mov sbb (bad) or push das sbb sahf fdiv (bad) (bad) call xchg leave xchg (bad) sub cs shlb ss inc pop sub pop (bad) lods stos push add inc push pop xchg enter and mov fstp call jmp daa daa fucomip (bad) idiv sti or add fcmovnbe outsb jo sbb push es pop dec sub inc push loop xor stos imul jno aas pop imul stos pop pop inc push or xchg push push cmpsb push call xchg imul or addr16 push stos xor mull mov icebp pop rorl iret lds loop leave shll pop inc leave (bad) jno add sub sub lds outsl hlt xchg sbb dec xor pop mov (bad) mov in out fcmovnu in fsub cwtl cmp adc mov jecxz repnz (bad) push fwait mov gs cli (bad) fnstcw enter push cmp mov ret cmpsb jbe jmp insb dec pop gs (bad) jns sub inc or test pusha push xchg push push sub fwait scas jp dec notb imul out push aam add (bad) push pop xor cmp or and inc lods mov adc in xor mov mov (bad) fcmovne (bad) jo pop into push add test out pop sub sahf stos stos and ror shlb fsubrp into fsub push push fcomi dec push icebp aad neg fucomip (bad) loopne fsubl imul push cli sti cld out lods les sbb inc (bad) mov cmpsb imul pop mov jle arpl pop cmpsl test add dec pop dec push sbb into pop addr16 sub call mov push inc fisubr mov into mov loopne mov sub sub push lods and and outsl xor mov mov (bad) (bad) adcl push pop testl pop lods cmpsb outsl out push pop mov jle push fcmovnbe out fisubl das jbe push fcmovu (bad) fnsetpm(287 fiadd fsub popa sub add xlat arpl push xchg lret clc (bad) movntq out rclb repnz adcl mov inc push test icebp dec jle cmpsb dec incl das das daa push daa push fs pop pop lahf sbb fs stc jmp add leave mov fs mov push xchg pushw sbb out das stos inc enter decl mov mov pushl loope push (bad) addr16 dec push daa pusha xor add (bad) or hlt jg data16 mov add aam mull mov pop (bad) in mov fucomi (bad) fbld out pop std std (bad) out cs sub pop sti pop and mov mov aam test sahf pop cmp aas pop test stos fidivl ret jbe lods insl dec push jo lcall mov daa aas pop pop addl mov inc inc xchg enter imulb pushw mov xchg push cmp or adc pop out sbb pusha cmp jo mov leave addps mov ss inc into inc pop test sbb jbe jmp pop cld addr16 inc mov flds scas in pop mov fcomip fsub jecxz neg fucom sub jmp (bad) clc mov lahf mov scas mov jne sti clc mov mov mov lock rcrl neg ds and icebp pop pop lods push jmp and push mov and jg add add sahf addb pop mov jg jmp pop push mov lahf pop cmp inc push pop fildll or mov ss leave mov (bad) enter lret push int3 inc dec aaa divb mov aam imul sahf cwtl (bad) push je fist jbe not faddl (bad) out sub aad (bad) (bad) neg fsubp scas test mov out cmc xchg lahf add enter mov rol mov adc (bad) push inc xor psrad (bad) (bad) pushw mov popa pushw inc (bad) repz pop test mov cmpsb mov dec sub mov dec sub cmp mov inc ret test push int3 xchg push out test dec push mov notl sub mov xor insl repz lret pop inc jbe,pn and test lahf std icebp iret jp jbe jp dec xchg (bad) loope dec leave add mov fcomp xchg jbe push out in out add std mov push add loopne cwtl jle out cmp scas xchg dec cmc adc in roll stc add mov cs daa stc div mov jle mov and outsb stos push sbb xchg add xchg pop jle,pt cmpsb mov call push push push mov xlat pop add roll jne mov scas push mov test fist dec cs push call lret fcmovnb (bad) rorb lods cmpl mov ds out mov loop rcr (bad) int push aad idiv stos stos xchg fnop fcomi fucomp in in push clc cli pop push dec test out arpl icebp in push push cmp pop cwtl in cli loop push lods xchg (bad) scas out out es iret testl pop scas negl add jle xchg jmp lret push (bad) mov fsts dec push pop imul inc jp insl mov dec xor cmp push outsl adc aaa and mov mov addl push stos sub iret and (bad) cmp lods shl pop int incl in mov ret fisub ja push mov adc push jle jmp movsb test call into push pop stos dec cs out fldz fsts neg fcom fsubp fild adc cld jecxz push repz mov mov (bad) cld xchg mov or dec into xor shlb adc shlb jne xlat jbe test sahf jbe repz hlt pop sbb or (bad) cmovae int3 rcrb movsb clc sbb mov push fs inc sbb push lods outsb pop mov ret arpl shrb jg jbe pop push mov pop jmp jle rolb pop dec mov mov sub (bad) pop fbld add mov imul (bad) sbb stos push adc add push mov xchg jbe push out data16 (bad) jae jl jbe (bad) fnop adc fisubr in lock cld inc movsl xchg push fisttp (bad) fcmovbe vcvttps2dq es xlat pop pop pop aam aam jl aas pop dec imul imul add out dec push lret dec sahf outsl scas mov repnz jae sbb clc jge,pn inc scas rolb roll mov je mov push inc push push dec stos push imul idivb test jle mov dec mov mov xor pop insb mov jmp jle mov pop arpl jge stos stos orl loop mov mov (bad) (bad) (bad) (bad) sahf test inc fwait (bad) push sub inc sub xchg mov int3 aad aaa push test idiv (bad) cmp (bad) pop in jmp mov idiv fcomip xchg fnstsw xchg rcrb jo pusha daa (bad) push sub add xor test nop push add jae daa out shll cmpsb jg lds das in jbe loopne push iret mov pop sti cli lock out push rcll xlat pop cmpsl addr16 push push xchg out jb test ja sub bound xchg outsb mov jge mov bound pop inc add cli (bad) das adc push div stos stos mov loopne mov out (bad) mov mov sub xchg (bad) xchg (bad) sub dec pop mov call iret pop push mov lret aad fcmovne rcrb push neg pop sbb in lock xchg pop push out aaa div fwait sarb daa push xchg add lcall mov sbb sahf sbbb pop mov add cmp (bad) lock xchg int dec push cld in sti in cli andl lock xchg push in inc loopne mov push movsl cs jo sbb addps out push push inc ja out stos notb dec xor pop aas (bad) aaa mov mov mov jl out adc cmpb sub adc stos (bad) ffreep jg bound adc daa and jecxz mov adc xchg sub jns into mov mov roll int fcmovnbe fcomps test dec (bad) (bad) push sahf in push cli fbld std (bad) aad mov (bad) jnp cmp dec jg sahf xchg jnp xchg dec bound cld and and (bad) mov add ds xor divb and mov push cmp leave mov out enter ljmp aaa mov jmp icebp out mov clc ja jle stos cltd xor stos aaa shld cmpsl push xorl push push insb inc push add cmc inc insl jle xor xchg push push das push jge mov jle (bad) mov push jg cmp ljmp popa and push out pop push imul (bad) jmp (bad) loop test jle jne scas or pop dec pop aas out mov test loope (bad) (bad) (bad) or fcmovnbe xlat (bad) idivl cmp ss pop mov cmc cmc out std std divl or (bad) adc jo sahf out jp or push xchg test ss adc clc data16 fwait mov (bad) or sub cwtl scas dec loop dec clc ljmp push mov iret mov fistl fisubrl (bad) into ss push std jmp out push test (bad) ud2 push rorl sti hlt outsl in fdivrp mov mov movsb push cmpsb push cmpsb imul insl outsb dec push jae ds inc lcall mov sub je inc (bad) mov push jl je outsl jno (bad) jnp das xor or gs pop mov mov ffree ret mov cmpsb insl popa xchg sub ss pop ds loope rcr cs leave roll lret rcrb push rcl not aad fcoml adcb out dec sti divl pop cvttps2pi cld fwait scas ljmp mov jg pop aad add jae xor cmpsl rorl jbe inc cmp aaa dec or mov pop cmpsb or inc mov pop les sahf test mov (bad) or movsl outsb push mov jl jle mov push jno enter out out in fsub (bad) push not mov add es push int sbbl push push insl outsb jl sub push stos dec stos outsb and mov out mov jnp bound adc push push (bad) mov (bad) mov xor or imull push jl push call ljmp fcmovnb mov decb adc inc cwtl nop mov push aad mov testl pushf addr16 rclb xlat fistl jmp jno sub mulps cmp lds jg fwait lock lods xchg cs cmc repz (bad) loopne shrl mov mov push xchg (bad) xchg mov out pop cs add insl outsl testl xor imul jecxz sahf dec mov aaa inc mov mov sub aad out fmull mul push mul lock push inc cmc in fdiv jne push out out es test sub dec mov adc movsl (bad) movsl cs dec shr sbb outsb dec jo pushl popf push xchg imul mov loopne (bad) lahf mov jle push mov adc mull (bad) call sbb push pop loop cs faddp int popa icebp jecxz iret daa fdivp ss in push not fistl (bad) shl dec pop ss out std mov out pop das das or sbb add mov mov call dec adcb or adc cltd and pop pop xor rcll je cs adc adc inc inc out iret mov scas inc mov jecxz test enter push lock outsb sbb dec mov push sbb push insl (bad) cmpsb mov mov dec push jle xor jne push je scas ja jbe fsubrs ss push mov xchg add or lret out mov sbb inc fisubl jb push fildl push (bad) aas movsb adc mov push lret shlb pushf adc (bad) jne dec fwait (bad) fcomp xchg lds push sub neg out fmul lock aas aaa loop jle jne push xchg sub (bad) push test sbb mov dec aad lahf les out insb inc cmpsl mov add pop test and jle push lods fsts inc push std or jno xchg mov mov fisttpll addr16 or js inc xchg jo pop mov pop fsub bnd mov hlt pop stc nop clc repz stc stc mov pop jnp je outsb push dec push xor lock test dec andl mov and mov mov cs cmp mov or out sub add out lcall inc leave lret movsl dec jmp shl mov stos scas loop sti div out cli stos and mov cld pop sti out imul pushl xor (bad) xor cs mov icebp mov stos aas add mov mov dec add out jmp cmp sbb into pop mov into xchg push (bad) das repnz (bad) xlat fisttpl movhps clc (bad) mov push hlt in xchg xlat jecxz das pop icebp push lock (bad) loope push hlt (bad) aaa or dec push cmpsb mov mov push decl cs push dec cmpsb (bad) test jae xchg aas int scas js jnp cmpsl bound adc sub fwait inc mov fcmovb rol jns dec leave enter xchg and in fidivrl test xor out xor cli (bad) cli ret add data16 xor sbb (bad) adc test test mov lds movl gs loope imul jbe (bad) jne rcrb dec pop xor xor push aas loop mov scas (bad) jb pop push pusha mov (bad) je pop sub mov std out fiadd (bad) out mov push cmc jmp cwtl ret push in (bad) loop mov insb (bad) mov cmpsl (bad) cmpsb cmpsl push test stos jne and mov jp jl push add xchg (bad) stc subl mov fsts pop add inc imulb fidivl leave push leave lret lret out out jno sub in out push fdivrp (bad) mov pop out (bad) pop stc rolb cmpsb xchg xchg pop movsb xchg js mov inc in out mov or not inc bound pop imul outsl push cld std lahf loop js cmpsl ds mov push dec xchg rolb cmc repz mov inc aas adc add mov clc sahf xchg data16 test jmp jb jge std in fldl fdivr fistl mov imul xor (bad) out mov lods jl mov push movsb outsl dec push cmpsb (bad) pusha inc dec loopne je jns and jle jnp scas outsb dec fmuls jmp jns add ret fld mov adc (bad) enter ljmp cmpsb iret xchg out dec (bad) out cli sti stc cltd enter rorb js jmp loope fwait subb or addr16 (bad) popa dec lock imull pop stos mov adc iret out and (bad) push arpl (bad) mov stos popf scas outsl inc daa pop test cmc xlat push addr16 add shrb sbb mov ja (bad) mov enter addr16 sub xlat faddl sbb push outsl fwait jp mov ret aad pop push (bad) jmp xor faddl (bad) jmp fmuls out loop mov push div mov icebp push les (bad) imul mov (bad) cmpsl adc sbb push stos js inc adc data16 jmp addb faddp mov fadd mov (bad) push in out adc jmp out nop dec or cli clc inc adc dec fdivp mov mov es cmpsb pop mov push rclb (bad) xor cmpsb ret adc mov pop cmp jmp sahf rclb aaa out dec sub fs aas arpl lea test mov add push push push mov inc adc or jmp idivb inc add outsb mov int movsl outsb adc push mov jl out vpackssdw iret push (bad) ljmp mov daa xlat (bad) cs adc das mov (bad) scas and add and dec test stos pop ja sti scas sub push push add xchg test mov fdivrs adc (bad) leave into sahf clc hlt test adc lods out imul loop call push jns cmp lahf (bad) data16 stos rclb out test sbb popa add xadd es (bad) push mov outsl out pop setae outsb or push (bad) jae sub lods xchg andl and mov movsb scas xchg mull ja ljmp xlat rorl iret outsl push mov xchg jae loope loopne sbb adc sbb push scas cs jns mov scas scas lret scas xchg out fldenv (bad) xlat push out push aam out addb rcrl out scas popl in shrb push adc movsl push test mov imul dec push fildl xlat mov jl out clc lock push mov xchg clc pop out jmp lds fcomip pop clc cmc das pop push or push add test pop das test jmp out mov push push (bad) ficom ds jne push nop ret mov mov icebp in ljmp idivb pop add jmp scas mov std bound pop inc ljmp out out xchg lcall dec ds mov icebp ret (bad) out cmpsl mov lds bound (bad) sub add sahf test push outsl sub jg ror dec out negl xchg pop mov (bad) faddp lods mov add cld in push fwait cmpsl mov ror in pop fdivrl int (bad) dec mov out iret les add inc cwtl xorb lds jbe mov push or in jbe sbb cld or scas pop iret negb clc pop loop test loop mov lahf xchg out loope mov push fimul cld bound movsb mov les sbb loopne outsl (bad) fisubr sbb out fcmovnbe leave addr16 ret mov sahf scas nopl mov mov push pop jge aas xchg mov lahf (bad) outsb decl mov pop js inc pop push jle mov xchg loopne test mov lods dec sbb cmp jle out mov out jg andb mov mov out push in push sarb iret inc jecxz jecxz int3 push loop lret ds ret aad jle fidiv cmc pushl push and incb push fcmovb idiv lock sti movsb xor jle push neg imul out loope add jmp dec sub out jp cmp ss repz imul (bad) sub push rorb sub dec ds mov cmpsl scas xchg call (bad) cmp fildll pop ljmp jnp cmpsl add in pushf mov ja mov jg out push add jp cmp test pop and (bad) jle mov xor fistpll adc loope das mov mov bound testb xor pushf into (bad) cld loope loopne (bad) mov movsl xchg ret push loope data16 loope push (bad) fsubrl and clc or mov cld sahf cli push sti rolb enter ss push call pop scas dec pop add sbb jbe adc lds int3 mov out mov das push and add rorb or rol push add jbe and add jge (bad) cmpsb test jp add mov outsb inc xchg cmp push cmpsb jg lret gs xchg push pop jns fildl jbe and ja mov addl xchg sub data16 movsb mov cmp inc mov (bad) iret into int loopne lret fcomps faddp (bad) fstp loopne pop mov push fisttpl clc (bad) push call mov dec ja fnstcw adc test aad std icebp in repz outsl xchg out hlt lock sti cmc hlt cld es cli aas inc cmp jne popa jmp push sub addb aad cmp inc imull sub lea (bad) pushl sub pop pop es jg push pop rol mov sete add shrl lds fidivr mov sbb add nop insl test mov or mov shl gs test inc outsb sbb clc inc mov scas sbb pop push jle inc cmpsl mov pushf sbb push pop popa cmp or into mov iret (bad) mov lret push fmulp movl ffree ret out (bad) mov hlt aad aam xlat cmpsb adc xor out dec (bad) out fnop std movsl pop and lock (bad) cli repnz push repz test cld pop cmpsb pop add push mov js add jbe call icebp icebp popa in push sub pop movsb mov jnp ds rorb fild lock punpckhwd lods incl add dec inc jne adc fidiv fimul into sti stc clc popa insl cmp lahf das push (bad) pop outsl mov incb adc add pushf outsb adc rolb sbb hlt not jmp pop lods out (bad) jge inc inc je cld sub cmpsb cwtl xor or divb cs push out sbb ja push cltd jle (bad) fld mov cmpsb pop add loope neg js fwait imul leave (bad) jg addr16 clc fmull neg lds ljmp cmpsl cs or in fldenv cmpsl pop mov outsb cli icebp in push repnz sti push in popa and cld repnz xor inc aaa lcall fidivl sub xchg mov sbb mov repnz pop dec pusha cwtl outsl enter inc pop mov push or pusha push pop es lret push sbb sahf fs add sub js inc call push fiadd rolb pop sbb testb mov xchg aaa addb pop decl dec xchg add cmpsl (bad) bound movsb test push js push out push adc pop xlat dec sub loop lods sub out fistl (bad) into out aaa xor lds idiv (bad) pop mov clc push (bad) testl adc std sub fnstenv out fcomip std dec cli lock leave and lods nop icebp inc mov fwait or pusha dec sub push cmp add movsl jl outsl xor jmp setae call hlt or mov lahf test sbb jg outsl out outsl data16 aaa add mov push push add jbe inc mov mov packuswb (bad) jbe inc sub mov mov jbe inc xlat fadds nop out fisubl cld fistp xchg mov or (bad) movd push mov lret into cli ja adc mul fimul lods push es pop dec pop mov vmread faddl jle rcr std out or pop sbb (bad) mov ljmp sub div xchg mov movsl cs outsb push pop jle cs ss cmp inc or fwait dec loopne jno loop scas xchg jns mov sub jp pop into jg pop sub (bad) jbe xor adc jge mov xchg dec cmp push mov idivb (bad) cmpsl dec push fimul into push es and mov aaa add sub pop or pop push jp (bad) outsb mov ljmp push test div fs out (bad) stc ret cmp es and add push mov mov fsubl scas cld out lods sub jmp stos add data16 es icebp aam incl es (bad) jp pusha push sbb xchg sahf popa outsb cmp (bad) jno push daa addl cs je pop out pop lods daa mov dec or subl xchg mov inc cltd ret out neg int sahf test pop push loopne mov push inc and adcl pop pusha imulb cs push mov or into mov fcoms iret out pop into outsb xor out roll mov inc and or pop sbb push mov adc xchg (bad) in (bad) es out xor jnp pop std dec out call imull push ror ret daa jno test push and cld les decl sbbl loopne jl test js push fwait popa cmpl js sahf mov out (bad) pop adc hlt and adc push (bad) outsb mov pushf mov in push adc and ret pop xor mov xchg and loope notb (bad) lret jmp out (bad) sahf in xor out jg xor push int fsubp roll clc clc loopne (bad) (bad) (bad) not or roll add push pop es pop pop es push jmp hlt in scas leave call fdivs sub push data16 mov dec adc pop push inc addr16 xchg loopne add out clc div add or dec mov sahf push dec jg dec outsb pop cmpsb mov xchg mov xchg jle push ss cs js lahf adc fild fisub pop inc shll mov pop int int3 int stos rolb loop (bad) in rclb or aas mov fildl fnstenv iret (bad) in xor popl push adc imulb pop pop push push dec xchg sahf xchg mov xchg clc adc dec sub pmulhw push js jg,pn push shlb xchg mov and inc dec and pop lea test stos dec ja sahf mov inc shrl sub mov loopne sub xchg es pop (bad) pop push out jb push xchg andl jmp (bad) int int3 ja in jecxz fdivrp in push inc inc add mov stc adc and stos pushf lods call push loope in in jo dec or in in mov icebp push outsb out aaa jbe mov xchg pop dec push cs mov jno inc test cmp mov mov dec lods pusha mov mov (bad) mov ss jb add or sahf xchg mov not xor orb mov loopne lock push out sti in cld in mov dec repz in push sar push rorl push rcrb xlat jl test mov mov cmc push fnstsw loop ret mov pop jecxz dec mov push pop ljmp mov push es dec push aaa addr16 sub (bad) fcoml add and ljmp mov pop mov scas push (bad) lret push and mov sub add xchg shrl and subl es in out out fcmovne cmpl out push js ja dec in push (bad) shr adc sarb lahf (bad) mov jmp add ljmp outsb jmp loop adc xchg in outsb jmp pop mov push int mov adc addr16 cmp jbe fmuls inc movsl outsb popa (bad) lret inc test xlat (bad) outsb in sbb cmp dec aas arpl jno jg dec mov mov pop mov pop inc icebp notl sarb cmpsb in xlat stos mov push out ja push lcall sub inc cmpl xor push mov es push in loopne pop ljmp pop fmul ror xchg pop inc test push push lret les push xor jecxz add ss pop mov scas mov lods scas out aas add cmpsb outsb outsb push fwait subl std cmpsl out pop mov mov rolb mov sub lahf dec mov xor push xlat neg outsb lcall cld jmp pop (bad) out es in inc sbb add mov arpl adc outsl pop jl mov test je lods cs inc sub aas sub sahf sub movsl movb cmpsl int push and int into testl push pxor adc jg add push aad stc js mov fildl fistl fcomp push call es movsl mov adcb mov jns and addr16 outsb mov out pop add lea pop inc cmpsb xchg pop xor out xchg nop cmpsl test lret lret addr16 fmulp faddl rorb out call push add mov mov js pop flds push fadds sti out push cmpsb ss mov rorb scas mov xor icebp addl ja xchg es dec push cmp neg (bad) mov (bad) lds (bad) out and es mov inc sub push inc xlat push rcrb mov inc and push sti cs lds cld out mov aad push xchg ljmp scas incl push sub jbe xchg leave (bad) cmc xchg in fmuls stos xchg pop dec pop mov mov es add inc pop xchg push xlat mov sbb adc rorl push popa push in (bad) dec cmp jle pop aam lds mov dec xchg mov cs movsl out dec out dec dec cld adc ss add pop push push je jg test inc addr16 pusha jl les cmp cld insb or out pop rcll std pop (bad) ljmp insb xchg mov fild fmulp push cmp and inc and or xchg insl icebp lcall out push shrb rolb iret testb test test stos and lahf inc or test call push ficom orl mov push icebp cmpsb out incb idiv (bad) mov imul mov lds add into add out mov pushl jecxz inc adc push push jg inc test out add loopne dec repz (bad) scas neg ret mov ffreep inc (bad) jg and arpl lods pop push add add sbb clc inc sbbb cmp pop rolb add testl pop jnp fldenv fs pop sub add es pop pop andb add pop rclb xchg or addb xchg cmp pop jg aas dec es pop pop cld ucomiss fs pop add leave inc cld mov (bad) sub test add or (bad) cltd insb jg inc enter aas add mov push in cs aas jg jb das push add and jb pop cmovle inc jb aas or and in or and clc dec sbb enter ret inc add sarl push test outsl sub fninit fldt fninit fninit insl fcmovnbe mov jecxz jecxz pop (bad) fninit lret (bad) mov fninit fninit fcmovnu (bad) pop jecxz jecxz dec addr16 nop xchg pusha les adcb sub das daa push add sub or or movups in push adc adc cs push (bad) je push fisttp outsb xor push cli out iret push mov inc sub jecxz xchg add sahf mov add push and inc sbb (bad) sub cmp push jp leave cmp xor mov (bad) xor sub adc xchg xchg mov add mov (bad) inc xlat movsb je stos sub mov and cltd rclb sub test dec sbb sbb cmp and jg sbbb fidivr jns jb pop pop repz mov aas push xor and sub or adc sub add push dec add jne add push push or jl sahf adc into cmp imul mov mov negb add push enter adc and invd mov cmp add push stos push mov xchg hlt jns scas jb pop inc and xchg aam scas and push add push and rolb rcl add lock (bad) out adc ficomp aaa xor xchg outsb push dec js into xchg (bad) (bad) fbld pop or leave mov loope addr16 lock jno cld (bad) mov push decb incl push cmp jne iret (bad) xor push es pop sub or sbb add mov mov (bad) xchg jle data16 dec add push and push push or and push (bad) push leave sub push js xchg xchg pop dec iret xchg dec inc (bad) sbb xor or das push dec sbb sbb fnop jg add sahf xor hlt mov xor jnp,pt mov jbe jo stos xor sahf je ficom sbb fwait test jmp inc xor cmpsl test xor std ja cmp push sbb cmp or cmp xchg test movsb sbb bound hlt inc jecxz and mov add or xchg out xor inc xchg xchg adc cmpsl call or dec dec ret and out ds dec (bad) decl nop push xlat into movsl mov shrl xor stos lret (bad) inc push (bad) test fstpt xchg pushl callw dec je nop outsb pop es add push push inc sub aaa sbb adc pop xor cmp out pop insb cli sti dec and (bad) push add ja cmpsl pop andb pop and xor lahf adc lahf push or dec inc pop sub testb sbb jg mov dec ss add (bad) stos or in scas divb jmp xchg test into jmp aam es call enter mov inc stos mov (bad) mov sub fwait inc test aaa enter cmp ret xchg cmp or test mov std lds mov pop and inc sbb mov push xchg test js ss movsb xchg je xchg adc lahf pcmpeqb pop adc adc shll or prefetcht2 dec out mov pushl or in mov icebp ror push fcmovnbe mov adc nop jle sub (bad) loope sar fsubr iret mov xchg (bad) mov xchg (bad) (bad) jne add testb pop xchg mov mov and xchg xchg test (bad) leave and lahf data16 movsl call mov mov mov push rorb inc es ljmp mov es ss or dec or inc add mov nopl aas dec add jmp mov push cs mov test std in and loopne push jmp addb mov xchg data16 mov lret mov mov cwtl out jbe (bad) jnp push into pop dec std jmp (bad) js dec ljmp inc (bad) jns dec push pop call dec mov jno scas sub or divb mov mov pop inc jbe incb add and (bad) data16 sbb push cmpsl sbb xchg mov push sbb inc dec xor adc push xlat or data16 sbb sbb sub inc or outsb pop cmp mov mov push fstpt in add jbe pop ljmp (bad) fcmovne sar mov pusha jle mov (bad) jmp popa (bad) jae mov into mov aam enter ja pop xchg dec sub mov xchg ret mov mov sar lcall ljmp pop int mov cmp mov mov rcr lcall std sub or pushf jp rorl cmpsb push sub sbb or and push and in testl push xlat jg ret xlat cmp sbb pop inc sahf xchg (bad) or lock call (bad) or inc mov ss sar sarl or outsl out push dec pushl push fdivs push cmp repz mov out mov movsl test push and (bad) aaa sub and cmovs dec insb push aam xlat cltd push cmpsb jge mov push mov lds popa fnstenv cmpsl mov test dec mov std sbb inc push push pop inc pushf dec ja push and cs sbb inc xchg (bad) pop mov xchg lcall push dec out xchg push sbb xor or sbb lock hlt in xchg lock mov loop loopne inc fildll xlat sarb cmpsl mov jle insb lcall outsb jae fnstenv out hlt fist jbe into mov add mov je movsb es cmp pop sub cmp or xor fs pop xchg stos add push aad in (bad) cmpsb jge incl add push mov pop jno xchg push xor mov and xor sbb sub test xlat (bad) adc incl (bad) ficomp adc sub sgdtl addr16 mov out loopne imul jmp and xor pop or xlat xchg aad mov (bad) test andb dec and inc xchg jle je jmp out repz nop (bad) cmpsb les jmp mov xlat es movsb enter jns int jbe inc and sub mov (bad) xor cmp xchg push xor inc mov dec out inc orl cmpsb xchg insl jecxz cwtl (bad) fnsave dec push into jns and movsl xchg lds dec mov push push and sbb sub sub (bad) fiaddl add jp push pop fimul js pop dec out popa outsl inc es mov push (bad) inc iret adc (bad) sarb dec xchg sahf jl fimull xor jle mov inc lock out incl outsb xchg in push jmp rcr mov xchg je ret add and (bad) shr mov or das cs sub (bad) and rcl sub push inc ss inc decl test into lea jge xchg xchg push fistpll lcall aaa dec xor or notb cwtl push jl pop push (bad) xor mov xor nop add pop inc adc inc outsl (bad) mov or mov es inc sbb xchg jl icebp out add xchg mov and (bad) mov jg xchg xchg je ljmp dec outsb outsb imul xlat ss jmp sbb sbb out out je mov cmc xchg (bad) divb push xchg jb mov dec sbb into popf jge insl jmp sub aaa sbb shrb into xor outsb dec fidivr decl test movsb jbe mov es cs (bad) mov jecxz push jg xor push mov sahf (bad) jle ja outsb (bad) xor xchg scas push aas das repnz and or push mov inc scas jmp div (bad) hlt sub sbb mov pop outsl cmp (bad) mov jmp test sub shlb insl pop add xchg mov jecxz scas out ds dec out (bad) in ret jns hlt test je test outsl xlat sub lods iret setne mov cmpb adc or js fildl push xchg pop or mov movsl mov fnstenv dec push outsl push (bad) cmp or cs dec and jg inc inc jmp xchg nop dec push adc xor inc adc jmp stos movb ja pop push (bad) jns jge imul fcmovnbe push push loopne inc loope pop and mov jbe add (bad) movsl test pop ficomp push mov xor sbb ljmp xchg loop jecxz clc mov ss rol xlat mov mov dec dec aam test pop mov test push push incl mov test xchg xchg mov test push fild gs jmp push pushf sub cmpsb nop insw cmp inc sbb sbb int3 xchg imul es sub mov push nopl (bad) add mov loope xchg dec sub xchg outsb xlat shrb xlat scas push adc mov cwtl xchg call les jbe,pt push outsb jle ror or out out mov rorb imul or jecxz stc aam and je (bad) push or iret jae inc nop mov (bad) ret xchg pop clc enter aaa sub (bad) hlt push pop xor call cmpsb test mov mov (bad) push add mov dec pop es push push inc mov xor pop add mov xchg pop incl imull add outsl jbe xchg sub xor dec sub mov sarb rcr neg ret cmpsl mov divb imul loope xchg rolb out out or sub out loop cwtl lock (bad) adc jmp ror push addr16 mov (bad) (bad) imul or rcll mov aam jp cmp dec push jbe push xor (bad) jg cmp test jp movsb (bad) mov cmpsl jnp ljmp sysret leave push or mov cmp fildll xchg and pop add add cs or sbb lahf rcl (bad) cmp add cmp int lret scas push add or mov jo gs jne out mov sbb mov in add fisubr in loop sti or or xor fs xchg mov mov xchg jo push (bad) xchg js movsb pop or push cmpsb pop sbb daa idivb test es push testb test pop adc outsb mov push movsb es dec inc dec xchg (bad) xchg outsl cmp jae dec push sub pushf or popa or imull or cs sbb pop sbb sub dec push add and mov mov jle es or imul les out bound xor mul out xor loop fidivr les loopne call lds (bad) stc stc cld (bad) call push popa xor mov mov notb (bad) mov xchg mov sbb jle push aam jnp jg stos jo cmp sub cmp pop inc xor rolb jle xor data16 hlt (bad) pushf push lea push jbe xor sbb inc imul mov dec cs je shlb sub ss iret sbb es pop or fsub adc rep mov push push sbb (bad) jl (bad) mov enter sahf add out neg icebp jo mov pusha pushl imul in sbbl out std xchg scas cmpl mov push mov mov push or ds or not push andl dec call rolb out push (bad) js cmp and and jbe cwtl push and dec imul dec cli test das popa aaa cmp imul adc push pop dec repnz testl sub pop inc inc xchg jle inc adc pusha dec testb outsb push dec push cwtl in rcl push out fidivr push jmp sahf into mov dec push and cs out inc dec int sbb call insb in outsb (bad) scas sbbb push mov mov (bad) jnp xor push into jle es addb jg fldl mov and mov adc dec jbe or cld xlat mov jno es (bad) mov lahf cmpsl xchg push cmp cmp push add sbb pop shll aaa (bad) dec sub daa data16 fidivl dec out cmpsb imul add xor jns push out call out das inc push dec (bad) fistl scas adc test jmp (bad) inc repnz scas pushf sbb pop ss inc jmp stc or mov lods or or data16 pop stos dec jmp xor ss sarb popl xlat fucom aam mov dec das and adc out movd mov jns xchg xorl push push xor xchg adc das sub pop jae adc pop sub pop pop dec push outsb jae icebp cli aaa sbb scas xchg mul aad fiadd fucom pop cli lea (bad) call rol mov cmp adc jp loope jmp out incb cwtl sub push data16 ret sbb int iret pop add pusha mov mov daa dec out shrb lea insl leave stos or mov js loopne nop into aaa sbb out outsb ret shlb mov pop cmp push mov push lock pop push dec cs and mov mov cs int data16 or inc inc add jg xor clc cmpsb jbe pop shr fidiv call es xchg into push pop push adc ja push sub les jg pop mov xchg cmpsl loopne loope dec jno push (bad) stos cmp (bad) mov jl test (bad) jg inc or jge mov mov scas mov ret cmpsl push lret add push fnstenv inc xchg jp dec xor inc enter xchg mov pop pusha mov popl push addr16 daa adc inc ret pop mov negl sub pop pop aaa out sub cmp push call add cmpsb (bad) mov pushf in fcoml out into loopne and ret movlhps ljmp jb lods add incl lock cmovb dec cld out js xlat sbb pop and mov lods lods test jge pop pop fdivl stos mov int3 mov rcll ret push test push leave lret cs or push fidivl outsb dec jmp push add add es mov repz mov push inc imul dec fcmovbe mov inc cmp fnsave pop push das push hlt loopne push sub cmp or or aaa insb adc sub sbb jecxz mov or loopne pop movsl mov push in test test jbe aaa xor mov push adcl pop inc inc outsb push out jmp dec loopne jmp jbe jnp mov pop decl fisub test movsb mov sahf sub sub push les pop sbb jo call divl adc outsb mov push mov push pushf add or inc pop outsb sub sub adc aas addl xchg das sbb loope das adc test ss xchg push xchg push add out xlat pop and fist loopne or (bad) pop fmulp ss dec cmp scas fisubr adc incl xchg lret fsubp repz jmp data16 js scas mov pop or xor mov push pop lahf mov mov cmp cmp lds cmpsb and cmp lahf pop jg mov jb insl ss sarl int add mov xchg sbb hlt xchg cmp and xchg push xchg jg add testl ds dec pop (bad) xor fimul inc call push mov xchg xlat jecxz cs pop pmaxub call call outsb test cltd (bad) aaa call mov add (bad) jnp cmp je (bad) testb std cmpsb jne test xchg jbe bound push daa jbe call pop xor pop cmpsb xchg insl add push push xor je xchg sbb cmpsb rclb xlat pop addb xchg xchg scas fs in jns jbe add mov sahf (bad) roll pusha pop add fstpl cs adc test adc stc je ficomp and das dec adc push adc ficoml jp jecxz mov adc push push movntq addl ss jmp fidivr pop mov xchg test (bad) pop inc incl call movsl test jo mov push lods mov push inc cmp mov pop dec loopne nop cs cmpsb mov sbb pop xorb push cli adc mov pop jg ficompl daa sysret mov outsb cmpsl pop cwtl int3 shlb (bad) xchg ja push mov cmpsl adc or rolb inc inc cmpsb wbinvd add jmp incl out out sub push lahf in call cld fst (bad) faddl mov data16 out lcall scas lods dec sbb xchg push stos inc rolb out incb inc (bad) out add inc loop xlat sahf inc mov push mov (bad) push dec shrb movsl (bad) jp mov stos iret pop pop add sbb aas ja push and add rcrb pop (bad) sub mov (bad) mov sub dec fwait roll xchg pop push and pop mov outsb dec sub pop or inc aaa str adc pop (bad) jnp cmc daa cs add (bad) sub loop xlat out sahf cmp fnstcw in out xchg xorl sub jge and idiv fsub fucomp push in or fxch das test push lods or sar pop dec mov sqrtps pop add and mov data16 rclb jg jmp js cltd es pop cmp call add sub jbe jb bound add jbe push add into or and cmp ficom sarb (bad) sub xor daa shr loopne loopne ss ror adc fucomip and dec bound xchg push cli dec sahf cmpsl (bad) adc jmp loop (bad) incb lods push mov sbb or jg pop das adc adc jb scas sbb test inc adc cmpsl mov add pop push inc or mov int jbe orb add ja fild decl (bad) int3 sbbl andl and dec jbe rorb sub es pop lods add mov add (bad) xchg sub dec inc imul and hlt into int ffree das sub bound add mov inc and pop jmp mov xorb jnp ds cmp scas pop mov or xchg pushf loope outsb orl push movsl jbe (bad) pop xchg lods cwtl mov sahf or imul cmp bound lds push sub push or add aad test cs or mov fwait std (bad) sahf push fsts pop mov movb sub mov and xchg loop scas pop jge ljmp add xchg es into (bad) sbb lock push mov adc sahf aaa xorb xchg push pop mov lock jle imul and push sub push andl dec idiv fdivrp lret rclw jno jne es test jbe ss imul jo sub push (bad) cmpsl and daa sbb mov push lahf cs cmp sarb loop ds test push push je sub dec xchg xchg inc test add push fist mov xor add adc sub xchg or xchg decl ds dec inc adc lret enter push je mov add dec aaa jbe pop inc jg add adc setae mov lock je divl and sub inc jle dec mov je jo jle xchg dec push das call sbb xorb pop das je das call jno sub pop out pop inc (bad) or cmp mov mov gs jne cmpsl pop cs xchg xchg pop adc nop adc sbb movsl sbb cli int push movl int jbe ja loope add adc sub push lods pop std aaa bound fiadd fcmovb mov cli out lcall mov xor pushf adc xchg xor outsb cmp pusha pop cmpsl pop incb sarl fidivr cmp mov mov test push sbb fs (bad) jle dec push in inc call lds (bad) in (bad) cmpsl out test (bad) push mov outsb test inc xchg mov add xchg setbe out es sbb and out lahf outsb aaa mov lahf outsb dec outsb mov jae inc adc push jne call jo into pop jle xchg outsl clc sub ds es ja in dec pop (bad) outsb sub jmp shrb rol add ds push cli lahf scas (bad) (bad) (bad) popf xchg inc add lret pop fisttp xchg js add sysret (bad) pusha inc arpl js xchg sub loopne (bad) loop subb outsb dec xlat mov push push and sub and aaa aas lcall clc fmuls insl inc sub mulb pusha sub add sbb shlb addr16 pop push test fsubrl jmp jmp ficomp or insl daa incl push addb std mov xor loop aas (bad) xchg or adcl (bad) (bad) loope js fwait inc das fiadd fdiv sahf call fadds add pop jmp push add xchg cmp (bad) fst rolb rol mov push incl jg dec (bad) mov mov cs rclb jecxz add pop pop ja push pop fsubrl push les sub jg mov sub xchg pop jp test push inc jno adc xor addr16 cmpsb mov pop cmpsl pop rorb inc mov ds mov mov or pop mov add out test cmp clc mov mov xchg jb iret cmpsl xor sahf add daa or andb in jo (bad) repnz adc rep insl dec dec dec cs popa add xchg xchg popa jbe mov lock jle mov push add push adc lahf push shrb sbb pop cmp fild enter push jmp mov fidivr cmp (bad) mov jmp addb cli add (bad) fadd roll into ret iret aaa fist or imulb inc bound xlat push out push cwtl jnp addl inc push sub mov (bad) push test jmp loope outsl dec sub add lods push mov (bad) imul dec dec pop or out out sti and pop push mov and sbb das or (bad) push sbb xchg xchg (bad) fistpl arpl mov cli inc cmpb cs and or jg add add cmp cli int js iret aas jmp adcb push add or sbb dec pop sub call jo arpl jmp sahf andl jmp loope xchg das jns in (bad) insb inc dec adc xor cmp mov (bad) xor lcall cmpsl data16 jle or mov jns stos push sbb cmpsl popl fdivrl dec and xchg sahf ja icebp add incb jle pop cmp lret jbe sub popa shlb stos dec inc push lock ret xchg int xchg insl rolb fisubl loope mov or scas xlat push push pop ss push mov test nop pusha call xchg or lret movb push xlat (bad) dec sbb test inc push mov (bad) (bad) mov sub dec xlat cmpsb mov pop pop mov out outsl or mov adc xchg aad push add jge outsl push data16 mov pop (bad) std lods inc stos and push adc and lds jp add lea dec testl sbb mov jo mov jb sub lcall dec rdpmc adc in daa gs idiv in int f2xm1 stos outsb dec (bad) imul dec dec test lea sbb jnp addr16 mov push mov hlt xor sbbb mov ficompl dec out jno and sub xor incl inc push push frstor (bad) mov inc dec inc incb test xor nop scas bound cwtl fmuls imul sar incb push (bad) sbb out outsb add mov pusha and mov ja pushf and les mov (bad) lods lds cmp loope and outsl inc es cs sub ss inc and pop cmp ret rol cmpsb xchg ljmp pop xor inc neg and push flds imul rcrl incb mov inc outsl (bad) sbb addr16 fdivl fisttpl mov push idivb pop ss mov ds stos xchg adcl dec movq inc (bad) dec into inc adc mov outsb divl out inc (bad) mov imul push test or stos pop aaa push dec inc and imul lods push ss pop adc and (bad) sbb xor cli mov push data16 icebp mov enter outsb inc push (bad) je mov (bad) xchg or push ror out aas loopne cld dec push jae dec aaa sbb (bad) (bad) mov mov adc scas hlt ds rclb sahf lea test mov push lcall and and jno jecxz ljmp mov jo mov lds dec pop push pop xor inc call mov popa addr16 jbe (bad) push sbb ss dec jo ds popf inc mov fsin int pusha jmp or aas ja incb xor xlat rolb out int lods sub inc push and outsb push inc popa sbbl add xchg (bad) lods xchg (bad) jmp pop xchg xchg fimull mov sbb sub pop add incb inc out mov aaa (bad) test inc fild insl cmp push test pushl or and (bad) cmp dec call imul ljmp push lcall pop xor fnop pop xchg (bad) jmp iret add pop cmp cmp rorb gs ss bound aaa xchg clc sbb jg add jbe pop and push mov ficomp notl lcall stos ret decl cmpsl out cmpsl xchg or iret aad xchg (bad) dec sub pop inc jmp inc imul pop shrb scas jae or out outsb adc btc and pop cmp cmp cwtl cmp loope outsl (bad) pushf xchg push push sub push dec shlb and mov sbb (bad) lock mov popa ret packsswb dec ret inc sub jbe out cmpsb (bad) icebp loopne adc scas cwtl xchg jecxz cmpsb mov jg outsb sub dec incb push daa add xchg add jmp pushl cld xlat out gs xor gs mov (bad) outsl sbb nop push and pop aad sub xchg (bad) je sbbl pusha pusha cmpsb dec sub loopne out (bad) xor cwtl outsl push push shl mov aas daa pusha sub adc movsl and adc pop jne or int mov loopne aaa fcmovb mov shlb pop push mov test xchg sahf ss mov sarl jp aaa out pop push xor imul xor movsl out cmp dec sbb out call not mov bound push scas mov lea xchg pop out imul lfs xor mov mov pop addr16 cld lahf xchg xchg (bad) outsb pop ret insl xchg test push xor mov xchg rcll push mov xor outsl push sbb mov or mov imul fmulp aas fistl lea mov mov int3 mov es or (bad) adc xchg imul notl mov push xchg push out jne mov jle rcr mul (bad) fst mov push pop cmp fildll push push inc push sbb adc xchg pop and mov jbe mov cmpsl mov mov dec xor adcb mov pop (bad) insl ds push insl call xor push xor sub div xchg push xchg addr16 scas pusha adc lock (bad) inc fdivrl fdivl adc jbe (bad) (bad) lret or shrl sbb divl add sbb xor movsb sahf fildll mov out mov pop mov es adc in call outsb jle push (bad) pusha add dec fidivr test test push loope cltd pop das pop test outsb sbb sbb or add jg inc pop and cmc out cmpsb scas xorl rcr (bad) xchg insl jg clc sahf clc test push xor pop and mov mov mov gs ss pop idiv daa sbb jle scas cltd mov int sbb adc out addb inc out add (bad) (bad) icebp lock hlt jbe clc mov sub loope in sbb cli cld dec lock sub or push cmp mov popa das sbb push bound rcll pop jle and xor lahf or xor dec mov test and lcall nop mov xchg jbe fild idiv pushf pop cmp sub popf push push mulb xchg or pop (bad) jg leave mov aas xor decl lahf xchg xchg call adc outsb push arpl cmp mov sub cmp pop inc arpl insb mov inc mul and mov jge faddp mov adc mov dec movsl (bad) aas cmpsl lods push mov xchg inc (bad) dec sub cmpsl aas aad inc (bad) and push push shr movsb jle mov jp notb fwait movsb xchg dec mov add dec xchg in leave mov aas add xor push xchg mov das inc adc mov push inc adc stos pop iret ljmp sbb mov cmpsb fmuls loop mov loope insl add push in imul repnz jecxz std into ljmp cltd ret shlb xor dec movsl out sahf pop xchg inc push sbb dec les popa and inc pop aas mov mov sub ret ds xor nop push rcll mov scas inc scas and mov imul and ret jg ljmp dec push js jmp cmpb adc pop stos xchg fistpll test mov xcrypt-ctr cmpsl (bad) (bad) out fdivr ljmp xor call rcr pop xlat pop adc insl add out mov (bad) sahf out pop cmp sbb xchg mov pop pop jbe push xor xchg mov add (bad) lock xchg (bad) (bad) iret imul mov dec shrb pop (bad) sysexit pop add mov (bad) (bad) xlat mov add jne div fs mov aaa xor fld push movb arpl fndisi(8087 sub out icebp repz leave pop insb xchg pmulhuw adc es fcmovb ret or mov (bad) jns es jmp movsb mov stos es sahf or je xchg mov mov aas out mov aaa aaa push sub jle lea mov pop pop (bad) jg jae ror inc push push out push xchg mov jg leave mov es leave out jp pop nop (bad) adc notb sarb dec push fmulp xchg outsb xor aaa fnop lret (bad) fcmovbe loopne and fimull cmc add out jmp repz lds lret iret add (bad) jbe dec (bad) sahf int lcall pop cmp mov scas (bad) rorb scas (bad) pop cmp sub cmc dec ja das cmpsl scas xchg adc and clc movsl mov jp loope xlat test push pop sub push add divl adc loop (bad) neg ret es jae push nop/reserved dec fucomip stos mov jecxz xchg adc push leave pmulhuw fucom rcll mov out mov mov out int3 mov sub cli out hlt es incb dec loope xchg testb pop into es test mov cmpsb push jl sub addl clc sbb inc sbb outsl mov ret sbbl xor sbb push ljmp in rolb leave ret sti aaa add add incb insb push inc add and idivb daa dec or ja fimul xchg jno aam push neg faddl sbb cs icebp hlt adc adc shrl jecxz pusha data16 push loop shlb orl nop inc xchg stos movb jno jmp jmp stos push dec inc xchg and xchg pusha inc jle sahf inc test lahf pop pop and push les push inc and sbb or out xor adc mov sub sti rol aam int dec cmp xor aaa pop negl or xchg mov je loop jecxz xor aam psubusb loope xor and jmp lods sbb cmp add in fs sbb push jg jp push mov fs (bad) divb or stos (bad) test cmc cs cmpsl xchg outsb inc sub fs jle push push add xchg mov pop and test test mov aaa adc cmpsl out pop pop inc sbbl into popa sbb xor sub pop jb xchg push jo call enter mov and rol push popa inc xor ja lret ror scas sahf cltd dec (bad) xchg xor jno inc fdivrs cwtl cli or loop push push div div ljmp imul sub test jno (bad) (bad) clc out add push aaa insl or ja mov out pop (bad) sub cld hlt mov mov mov mov test dec (bad) stos insb dec outsl sahf lods push pop inc jae es mov ds or (bad) xor in xchg push jo and icebp (bad) or (bad) in (bad) mov ffree ret mov aas fdivr lret mov xchg loopne sub inc test icebp pop jbe jns call jbe or fistpl (bad) dec pop subb (bad) push orl inc stc adc push push pop gs aaa mov dec les not push jo sub popf inc mov push outsl jg inc jbe mov xchg icebp rolb xchg inc pop fdivrs inc (bad) es or and lahf imul and lea cmpsb daa fcomps and push popa cmp enter pop sbb or jg sub out popa xorb testb out enter shll mov cmpsb mov pop cmp cmp mov xor ss fdiv aad loope add out jmp mov sbb pop (bad) inc mov jecxz jle jl mov jmp adc or mov rol add mov (bad) cmpsb mov xchg xor movl sti jmp stc push stc in add popl lret clc shll cmp lds lahf insb push inc (bad) pop mov mov (bad) dec jl es cmpsb aaa pop xor mov xor fwait or mov push sub add or mov (bad) popa fcmovnb sub add inc mov out sbb push mulb fcmovu loope (bad) aam dec and (bad) fisubrl loope push or inc sbb inc popa bound clts and es mov xchg push out mov cmovs mov xchg mov outsb and jp cmp push adc dec fmull scas xchg add xchg test ja fcmovb push sti jmp add sub aaa jmp js jecxz out push xchg test add jg bound outsb adc push mov mov (bad) mov notb or data16 popa sub out mov cmc or les clc (bad) loopne,pt mov shr call out test (bad) mov sahf into lret sub or daa shrb inc mov ss in (bad) mov (bad) dec pop ret ljmp leave (bad) jbe das loop andl jno jp add lahf (bad) scas pop lea pop mov repnz mov pop mov add or cs lods xchg inc mov popa (bad) mov jno or out testb xor out cld mov xor (bad) mov sub push insb pop mull (bad) out test cmp inc dec pushw lcall cld sub mov pop cmp mov mov add notb shll add cmp ljmp or inc mov push lcall push loop stos jne jecxz shrb fisttpl push cmpsb mov in insl insl std pop add into scas mov cmp (bad) push mov adc das mov (bad) add into test jle sub movb push fs loop aaa sbb and mov orl lahf mov pusha loop ja or adc cld sti call dec jecxz hlt inc outsb adc out dec ljmp lahf mov xor xchg xor (bad) test pop je pushf imul mov push jg jg xlat or xor add cs or pop (bad) add ret mulb int3 es faddp int3 xchg add sbb aaa inc loopne test push fmul shrl cmp mov fstpl cwtl pusha pxor ret movsb loop push orb xchg cld inc imul sarl mov pop dec (bad) or orl ljmp and pop sub mov outsb out js fld cltd insl jno es repz repnz std cmpsl out out pop and add mov sub pop (bad) cmpsl outsl ss divb jbe outsl add and mov stos popa inc mov or xor xor lcall mov lds jbe pop cmp int3 push es call jle out iret pushf sbb es das add mov dec push mov mov xchg or adcl xchg rol mov les (bad) xchg pop inc es outsb fmull fsubs test mov pop (bad) es jo and jg dec insb adc aaa dec jl mov std cmpl lock call mov es mov (bad) push mov mov jae adc roll push jg call gs leave je xor test (bad) mov ss imul call (bad) es out mov repz icebp movsl insl cmpsl das pop mov push out ret dec iret fdivp mov mov outsb inc jmp mov mov xor insl div aaa movsl pop adc addl jecxz jge decl in dec sbb in jmp sbb add call jl sub mov mov pop (bad) fsubrl insb loope outsb add sub jle mov scas jo mov lods push mov pusha loopne pop inc imul xor les call outsl push sbb loopne fadd mov aas (bad) push jecxz sbb sbb lods clc mov aaa sub orl inc sahf push sub xchg dec fwait pop jbe loop sub add ljmp push xchg lahf testl and push sahf mov mov fisubr test jg sub lods push out aaa jbe jle scas rol aad out push mov (bad) scas mov (bad) ret push in fildl es inc xchg inc xchg cmpsb clc jle jecxz sbb mov cwtl movsb jle jbe xchg mov push in ja add daa add lcall (bad) jmp out inc loop pusha xor and lret push pop test out test inc add and pop cmp negl (bad) jmp sub mov xorl (bad) loop sbb scas out call jo js mov lea inc out cmpsb loopne movsb xchg mov xor jno jl inc lahf jle inc adc jecxz jmp push aad aaa push cmpsl push in call push scas rcr cmpsb out mov sahf push stos inc fs jbe push cli inc inc stos cld pop fcmovnb mov xlat mov push inc testl idiv cmovs add imull out in lock ss out sub hlt add daa cmpsb inc cli or ja jne xor mov push and mov lea faddp inc ds ffreep rclb sahf mov xchg xor imul out pop je sub aaa mov aas (bad) pop add inc and push sahf add inc sbb pusha adc (bad) sahf pop mov mov cmp inc (bad) clc push or mov cs push rcll rcrl out movsb clc or push enter js xchg push jbe sgdtl (bad) fadd mov mov cli out cwtl fdivrs dec ds pop mov sub lret push pop ret dec mov inc dec mov dec into aas add andl add out ss lock mov es pop and sbb (bad) push xchg js mov push mov sub push ror push movsl test xor xchg repz mov push inc test add push je mov fcmovbe leave ja pop pop loop push inc pop icebp hlt pop inc out jg cmp int cwtl push fsubrs mov loop (bad) push std pop push je adc out mov dec add and lods jns aas inc xchg mov pop neg into hlt cld inc popa (bad) repz out aaa rcrb push (bad) leave das mov sahf ss or test call jecxz aaa push mov dec xchg and into movl push cmpsb pop dec sbb imulb and inc mov sbb and dec push push xchg jp aas sarb stos pop pop xchg icebp into call dec insl push xchg cs xchg push inc mov (bad) fdivrl test int loope vpinsrw ffreep sahf ds aam out rol cs adc inc inc (bad) js mov xchg hlt faddp out xor ss pop cld xor dec call scas es cmp movsl lea ss test add jecxz (bad) ficom pop push inc cmp add and adc xlat lahf jo xchg or dec (bad) mov aas test mov or ljmp and pop imulb dec push daa pusha xor movsb push inc xchg aaa out jecxz fidivr pop push push daa pop add inc push into repz imul jle lret loop (bad) fstpt sbb sti out cmpsb lods push aam xchg clc aaa xchg xchg sti repnz hlt sti push cld push stc add fadd icebp in scas cs mov pop inc sub pop push jle lahf add adc fiadd xchg cmp (bad) push popl inc sub popl dec sbb xor bsf sbb xorl sahf (bad) insl sbbb aaa mov mov sbb jo scas mov sbb push pop je jb mov mov dec sbb mov push andl arpl push mov int inc loop dec mul shlb out xchg outsl aaa in xchg stc fcmovnb mov mov data16 mov out (bad) out (bad) add adc imul sti xchg les aaa sti push cld mov xor push cmp rorb cmp sub inc sbb aaa inc mov mov push or mov (bad) push call xchg scas add inc (bad) lahf test pop xchg mov aaa fdivrs xlat pop sub cs je div hlt fstl pusha sub dec inc rol mov xor xlat push mov daa and pop jno and (bad) mov notl cmp out (bad) pop and out es dec (bad) mov cmpsl inc and cmpsb ds sar ss adcb cs dec js push inc stos mov lock adc das or xchg (bad) jbe daa adc cmp adc pop (bad) and pop push pop fcoms lds push das fimul xchg (bad) into mov pusha dec loop cs outsl pop pop and xchg cmpsb test bound mov push pinsrw xchg mov jbe sub ffreep cmpsb mov rol dec loop push pop (bad) in loope mov clc fmulp scas push sub push aam pop xchg clc sbb std out loop mov inc cmp push ljmp in push hlt jmp jne fidivl bound sbb sbb inc aaa es lods add mov fs int mov out cmp addr16 add sbb cmpsl call (bad) iret cmp sub sbb iret (bad) mov mov push and out les add mov jno ret setbe mov mov test dec mov sti insb popa inc loope into stc add fidivrl pop cmpsl mov push jmp nop jmp ficoml call push jmp mov xchg or jns push cwtl mov add ja jle cmpsl (bad) daa jae mov popfw into sahf mov popf and mov les sahf es rcr inc fisub cmpsl loopne loope adc je (bad) mov (bad) out push divb adc leave mov mov add pop pop mov inc lahf xchg js push (bad) int neg int3 push testb and inc (bad) jmp fdivrp in mov mov loop push call and imul (bad) call decl push lcall jg scas adc lret ror push mov repz jbe movsb (bad) push jbe out cmp arpl and mov and or inc push scas mov rclb mov mov sub mull lahf pop out (bad) (bad) repnz lds jno push nop xchg cmpsl shrb and cmp ret daa cwtl (bad) pusha pop sub push add xlat mov aam sbbl pusha xlat sahf scas xchg js outsl xchg cmpsl push pop mov jp (bad) sahf or xchg xorb test out xlat mov cli cmpsb bound inc fcmovnb mov sub pop shr cmpsb or sbb adc iret mov mov xchg push dec outsb xchg sahf mov push (bad) nop es fidiv sub push repnz rcll jp (bad) mov or inc (bad) aas popa cmp mov adc out pop add into and les dec xor rorb add es push cmp mov into xchg (bad) sub jns xchg mov and mov js stc inc repz xchg into or jmp add and rcl popw pop shl jmp push cs lods push inc scas pop data16 clc pop pop outsl dec mov xchg (bad) xor ret push lods out adc outsl cmpsl xchg jg out loop xchg aaa jbe mov shlb lcall movups cmpsb xlat pxor scas pop out adc mov loopne fsub roll add and movlps mov add (bad) mov lock fistp sbb rol add xchg loop sbb sahf scas fiadd pop sarl cmp loope outsb out (bad) push insb jmp ja and xchg loope out xor out out out adc pop into neg leave mov mov jno adc push aad stc adc jmp out push rol mov xchg cmpb sub adc cmp es push sbb fmull mov or loop into fsubrs mov push xlat push adc jg jecxz cli neg movl and (bad) adc into pop ljmp neg enter inc pop out cmp mov movsb xchg (bad) (bad) dec xor (bad) sub dec pushf std es ret outsb ss pushl sub xlat in push loop lock add push out je or push sarl inc pop ret (bad) (bad) aad out cli sbb fnsave test push inc xchg pop nop ss (bad) fcmovb mov out dec in shr rcl out in pop sub out pop loope loopne inc inc jo adc mov jle cmpsb aam dec xor push sbb cmpsw imulb adc mov call push cmp adc incb int3 lahf (bad) and add or jle or xor push shr (bad) out into xlat mov lret clc es adc or lds inc aad fiadd and jmp jo jmp int3 out dec sub daa jg cld (bad) jg std loopne add loope dec cmc fld mov fadd mov faddp dec adc out (bad) inc push add insb xchg jl jnp shl push imul add mov pop pop add aam insl inc jg pop leave dec xchg or jg mov aas cld clc sbb lock add xchg or fiaddl pop clc mov adc aaa pusha sub push daa ja leave rolb pop loopne pop jb add enter add and dec or inc leave jg out add dec adcl ja (bad) scas cmpsb push xorb jg clc mulb and pop pop stos aas pop fcmovne mov lock icebp insl outsl jnp mov bound mov shlb icebp popf lret sub push push and push and push adc and ss ds or testb or adc (bad) mov or sbb outsl push add or adc sbb sub xor and mov cmovns js fidivr pop xor adc mov fisttp lea addr16 cmpsl loope or or xor sub sbb jo mov push es clts xchg push lcall mov jnp mov popf adc xchg outsb mov outsb mov push out outsl pop data16 dec mov mov sbb xchg nop daa cmpsl scas add or shrl sbb sub or jno xor push mov (bad) aas in mov sub jge sub pop insl aas sub xor fnstcw cs std pop or and add push sahf repz xor and sub and and pop add popa popa outsl or pop das and jecxz lock adc inc adc jb jmp cmp lgs mov mov sbb loopne mov jb lods (bad) push mov aam push push jnp cmp je outsb and rcl subps sbb dec and fcomps ss cli (bad) mov push jo xchg xor xchg dec adc or lret pop out loopne mov (bad) adc sub clc mov push ficomp xor ljmp inc pop push and mov xchg jnp xchg cmpb rorl stos adc mov call ss call lret mov inc scas movsl xchg mov mov sub lcall adc data16 pusha cmp xor mov outsb xor or loope or mov xchg dec loope (bad) inc imulb dec add pop adc pop fistp add jo push out or addl mov imul decl lods (bad) ljmp fcom push pop aaa mov loopne rorb ret jo sub scas mov sbb nop (bad) mov mov data16 mov lret push mov add sub sub notb ss pop rclb (bad) sbb out jns xor push (bad) xor pop adc pop inc push sbb add xchg (bad) ja cmp and jle push fcomip push lahf jg push imul stos (bad) cwtl cli out rol enter push outsb bnd mov (bad) dec (bad) (bad) mov push stos push mov mov outsl mov outsb pusha push incl push or test rcrl pop mov xlat mov mov push inc add push ljmp lock pop add xchg xorl sub out push mov inc add sub sub imul and cmp push fidivrl mov in in (bad) or pop inc fisttp iret xchg push pusha inc push ss lds xchg movsb mov fbld jge push decl mov (bad) (bad) push ss inc aaa aaa push jne xchg dec jle sahf cwtl jb inc inc add scas push test pop fdivs push adc je js fs fisubr add and add sbb iret (bad) lock xchg and and lcall jb mov sub jl add or aas cmpsl xor pop pop xor lods test sbb push or fstp ss call pop inc jne xchg outsl dec inc fstps xor or push jnp jmp add fs push inc (bad) gs and popa push push insl or fwait (bad) jl push sub stos dec inc mov sub mov scas out jle mov stc pop push les push lods decb mov and sub xor pop imul add cwtl ret pop inc (bad) aas rclb sub add dec aaa sbb xchg (bad) mov mov xchg pushf call fisubl incb pop push pop ss mov inc (bad) mov mov xchg inc xchg xchg lcall ljmp enter jnp rolb jl fiadd pop arpl inc cmp mov mov lahf je xchg or push lds fnsave push jecxz push mov dec xor or or pop mov and mov adc cwtl movl mov jg call (bad) sbb mov (bad) cmp jbe nop jne hlt jmp (bad) lock (bad) ror cmpsl fsubrl mov sub dec mov push mov popa mov push icebp out hlt xor or call mov push out ds sub lcall outsl or push sub arpl xor aas mull lcall xchg jge push xchg mov xchg xor test ss cmpsl loope inc jno,pn xchg and sbbl cwtl mov mov xchg mov or push jg (bad) or mov cmp into hlt out out mov inc dec pop in fcmovnb insb and fwait mov jl add push into jp add scas repz jg sub jg repz push pop push into mov push ror (bad) jno adc and (bad) cmp push dec sub push test pop push sahf stos push sbb mov fnsave pushf outsb mov sbb imul dec lcall rcl or les (bad) jg inc sbb aaa adc add cwtl jge icebp add xchg scas xchg loopne push cmp in xchg lret scas lods cs add test jmp cltd push jmp push sahf jle pop add in mov hlt sahf sub xchg mov pusha push push (bad) xor (bad) mov ljmp and stos lcall xchg (bad) mov stos cmp mulb mov and out ja (bad) je push sub test pop pop add add dec aaa clc pop jecxz and mov lds mov rcl pop inc enter stos test scas (bad) (bad) cmpsl mov adc push or push jecxz mov jmp ret or lret mov adc rorb fistpll ret jge rcl es jle xor into inc sub out notb pusha xor mov mov mov imul push add push mov (bad) out push dec cmp push shlb mov addr16 sub mov push sub jbe mov inc mov pop inc loopne neg daa or ret scas fs xor cs cmpsb jo dec in ljmp lahf jle jecxz and stc loop idiv sahf mov outsl mov mov mov adc push iret xchg mov push sbb and cmp xchg add inc das nop pusha dec das test inc mov adc test sahf jmp xchg jnp pusha mov nop movsb inc pop or repnz pop lsl bound or mov data16 pop cmp jbe mov les gs outsb fcompl dec push adc sbb inc mov pusha add mov pop xchg ret jg sti push lret mov push (bad) out add sbb push lds test into mov push mov xchg sahf mov testb xor cmpsl lea pusha cmc xchg scas xor adc jle dec pop jo add out inc cs pop adc aad push mov xlat adc and dec adc add mov mov xchg mov mov jp cmp out jmp jl loop call xchg loopne in popf add cmpl mov pop push arpl loopne pop mov inc stos sub or push lds push ffree (bad) dec sub push sahf jb adc xchg mov into adc xor dec xor cs cmpsb es lcall push imul sub ret add icebp es push adc pop xor push pusha es lcall mov pop push jo,pn fxch lret or das sbb cmp cs jo or xchg jg aad xchg dec adc push push jle fisub mov pcmpgtb push push and test sahf rcll dec xadd ret mov mov pop or pusha push jbe xor out adc aas stc int3 dec loope mov or and pop cmpsb dec popf and pop ds fs or (bad) ja pop ret push xlat adc scas add jo es push jb adc adc test outsb pusha push dec lcall push jmp outsl and in out pop mov adc push mov xchg out idivb mov outsl outsb push push adc push inc mov dec or jge and in cmovle mov call aas into xchg sahf nop je adcl dec cs xor shrb push scas mov xchg adc push daa outsl test test mov pop pop push pop push cmp xor mov ja jbe scas pop lret pop data16 add (bad) push js mov pop ljmp fiadd call sbb xchg mov push (bad) or pop incb aas cwtl rcll jle jnp push push call xchg scas xor es sub add out dec cmp inc (bad) mov push sub out jle push adc push je or cli inc add stos push mov test push sahf mov jne xor (bad) incl and test sub and jne sbb sub cmpsb push shr adc mov sarb mov jle out out ret outsl (bad) addr16 push nop clc into mov or out mov in push or fs mov outsl mov add add xchg ret popw clc mov lea mov push jg insb push xchg test inc daa sahf xlat cmpsb rcrb cmp cli rol pop add aas scas and jmp (bad) outsb sub mov lcall (bad) mov dec or iret out cld outsl aam ss jae xchg dec cmp out loopne cld out xchg ret loope daa das and in xchg lret sahf pushf test sarl pop jmp rcrb stos sub push mov insb ret lea xchg jg dec insl call adc fisubl (bad) push xor adc mov sahf lret fadds fisttpll int outsl outsb adc mov rclb pop lods push rcl sahf mov cli sub push inc xor movsb dec adc jg gs out outsb sbb popa dec outsl ja mov into ss push push lock jb add xchg cltd jle shl fcmovu push add (bad) (bad) (bad) dec xchg jle out aam lret mov mov dec fistpll ds push ret jb (bad) jg dec adc nop mov ss mov add (bad) sahf or js inc jbe cmp mov or pop cmp sbb cmpsl pushf push xchg (bad) xor push mov jae js test mov pop inc xchg stos sub scas push or add sub push add pop push divb push decl push push or xchg enter loop rolb (bad) (bad) into cmpsb mov mov inc dec rcrb push jmp ss xor inc add ret jg jae negl xchg test call mov loope jns mov pop pop cmp das ja loopne int les movl pop not xchg push (bad) jne out sbb add inc mov and mulb lock xchg cmpsb sub push xor add sub cmp dec ljmp lock sub stc (bad) xor loop adc push fwait (bad) jo mov mov jno adc pop (bad) stc and fnstcw in xchg inc daa ljmp mov or push mov mov jg sbbb pushf (bad) ds sahf test mov bswap mov adc push mov xor ss inc push adc nop scas sbb clc mov data16 push push shrb dec or cmpsl je xor add push mov movsl adc sub dec sbb (bad) imulb fist in dec mov les sub or jg pop push sub ja jae add xor (bad) jo sbb pop dec pop or stos xor sahf mov pop inc loope rclb into leavew xchg popa inc (bad) out add mov inc cli mov shrl pop movsl xchg jbe and xor xor and (bad) xor insl inc stos ds adc insl lret scas adc adc cmpsl (bad) fcmovnbe (bad) mov add fstl loopne mov cwtl or dec ja push adc in pop jle arpl mov outsb (bad) mov push cmp push sbb pop xlat xor mov scas mov sahf mov inc and mov jns pushf push add cs jb jecxz pop add add cmp dec dec movsl inc sub pop push dec xor mov jle and pop push push push cmp sahf aas cmp scas repz or sbb aas add sbb (bad) in push xchg jp iret and stos pop dec dec sbb push int3 mov data16 push and loopne mov push ds pop jg sub push add push push pop mov imul xchg je fs push (bad) iret mov testb dec push mov fldl cmpsb mov sbb movsl xchg and sub xchg jo push sub inc stos xlat nopl push sub and inc insb std test loop xchg outsl fdivs inc pop push mov push out pop pop xor rcrb lock pop in testl call ret mov mov enter xchg jge xchg es ret rorb mov aad jg loopne push mov add push (bad) imul sub and ss and iret outsl clc add mov sbb shr sbbb jae inc rorl ljmp and add (bad) pop push dec xchg (bad) push sub incb jle fnstsw sub sbb out push mov jle aaa call outsl dec sub lahf arpl inc es push rorb pop or add pop movsl inc sahf push pop lea xlat movsl mov mov jp out or pop aas mov add push sub mov pusha pop jg push jg inc ss add xor decl push shlb pop cmp mov pop pop inc pusha push dec scas nop push (bad) push pcmpgtb aas cld fdivs push jle ja add repz loopne xchg push jle mov cmpsb nop jle lds out dec mov je xor and lcall test sbb fsubs aad call sbb scas out pushf jp cltd data16 adc mov rolb xchg adc mov and call inc ret mov rolb fimul add or push pop push jecxz sub dec cmpsb ret out mov je (bad) iret sub pop pop outsb out mov loopne ror out xchg push push push ret ja jg loope rclb stos leave add jmp fidiv push xchg xchg addr16 push push (bad) lds dec sbb (bad) mov pop lahf fdivrs and lds dec add cs je lock jg jno xor add or jbe (bad) push pop test movsl lahf in fcom push pop in movsl (bad) (bad) fxch ja fst add cmp push pop sbb popf fbld push ds iret pop xlat sarb push fisub out (bad) rcrl add xor loope loop es push push outsl xchg orb daa push pushw lea hlt xchg xor insl fsubl xor push and popa xor rcrb out or xor sub jle movsl xchg outsb sahf jae add outsb xchg sub (bad) fimul outsl or ret aad jg cmpb mov rorl dec xchg push test jo xchg inc dec movups outsb pop pop pop or dec aaa in jg sub push clc fadd jnp lahf push jecxz stc mov (bad) jg and dec aad xchg xor inc imul xchg sub addr16 add pop sbb out outsl or xchg xor jbe add fcompl mov lock pop outsb arpl adc jbe movsb push add sub pop jg pop adc jmp jg sub stos and push test and sub ja ja cmpsl ss add push add and aas ds add mov jg inc clc mov jo decl push jnp jle addr16 mov addr16 (bad) shrb push imul lods and aaa or inc daa inc pop xor cmpsb jg (bad) cmp call jg inc jle xchg or repnz loopne push cmpsl hlt int3 mov inc add add jmp inc sub es jp aaa ja push inc outsb xchg (bad) push data16 or bound popa cmp jo ja jg sbb jecxz sar out push mov mov jne mov push out xchg je xchg lahf mov lock ja xor sbb inc mov out xchg xchg fnstsw rcrb mov or pop data16 cmp xor out icebp mov mov inc mov add lods addr16 out movsl sbb jae test (bad) dec sub sbb xchg pop repnz insl cs loop js js mov push cmp imul mov pop push out or add rorl dec es les mov pop pop pusha cs cmp dec sub lds fdivrl pushf in dec push dec pushf ss inc add aas shrb push add (bad) mov xchg sbb aaa test inc aam (bad) aam lahf popa dec insl sahf cmpsl movd xchg and jg push xorl adc repnz jnp into or xchg push xor jbe cmpsl test outsb pop push or xchg stos jno dec pop (bad) pop push mov xchg out popa cmp push or mov lcall dec rorb mov sbb sbb xchg out sbb and ja test lods out pop movsb mov in push ja out and wrmsr (bad) addr16 (bad) sub mov mov stos mov xchg popa inc cmc movsl push jge cmp mov fmull mov sahf xor mov push (bad) mov pop push fistp and lods pop adc ror ss xchg rcl inc lahf shr loope adc pop jg ret add pop cmp adc icebp cmpsb mov push push out ds fdiv jg out sti ret ret dec jmp out mov inc jle (bad) lock xor xchg xchg stos push test lahf pop outsb pop jl inc xchg jl fiadd add jne (bad) ja int test jle fistp mov xchg jl clc inc ljmp test and mov xchg aam adc getsec sbb outsl push ja dec mov scas pop scas pusha clc mov mov mov outsl scas imul ss push (bad) lea dec or inc (bad) xor push sahf push shlb ret lahf popfw jne jle lcall (bad) cmp mov add pop or out enter xchg lock cltd mov jbe (bad) jo pop movsl mov arpl dec imul test movsb push imul jo cmc push push and lcall movsb popa cmp sbb push lea add cmpsb inc cmp adc (bad) scas adcl (bad) push outsl in mov xchg outsb push testl mov les (bad) pop add test (bad) jg and jg aad add int clc (bad) movsb in fnstsw cmpl out scas inc fs js nop dec mov ja aam pop into (bad) imull sbb or jbe lock lret data16 lcall pop aaa xchg push jle pusha cmp adc inc or or movb or jg fwait push lea push pushf push scas push rcll subb pushf xchg jg cmc xchg mov loope lret std inc sub jle mov es jge mov (bad) and cltd jnp lds sub out adc test or or imulb jmp dec and sbb pop faddl pop or loope lahf push xor (bad) test xlat inc lcall inc and bswap ret ja push cs scas jbe or addr16 fisttp lds inc sahf je sarb rclb push cmp lock dec xchg jmp xor iret repnz mov (bad) aam dec inc (bad) incb divl out xchg xchg sahf addl jne jbe test sbb out jno call iret aam adc pop inc pop pop ja xchg out loope mov sahf xchg and subb lods mov xchg inc notb mov sub int sub popl jle dec (bad) (bad) pop movq push test push or rcrb test sbb loopne sub adc jbe je repz ja js flds arpl add xchg (bad) popf mov dec out sbb and or push push mov test pop daa test mov in icebp decb jmp add mov and rclb stos xchg jne (bad) add pop aas adc (bad) fiaddl pop dec add js scas test loopne jb,pn ss jno inc xor push push sub mov mulb add xor icebp lds add mov cmpsl bound push push mov jbe clc sbb xor (bad) popa push lcall push jecxz dec subl xchg xchg mov scas idiv cli mov in enter nop rorb xor leave dec xchg pop ss adc adc pop and aaa pop inc insl dec xchg add mov into pop or jle sahf cmp pop fs sub sahf ja mov out (bad) mov fcmovne leave push cltd or jg push push cmp outsb sbb testl adcb (bad) or adc mov addr16 (bad) jmp popa daa push out adc xor pop mov add mov es cmpsb pop lods addl push inc jle dec or subl add ja addl lahf addr16 cs nop data16 or inc sub and or movl mov push (bad) fnstenv lret rol inc das pop arpl pop aaa push ss jmp jne cmpsl (bad) jmp pop int out cmpsl call ss cli sti lahf aad xchg test pop add pop cmp push sbb inc jg insl push inc inc xor mov jbe mov or das lods jg mov dec ds (bad) mov and xchg or xchg sbb or dec in lds push jle and mov aad mov mov dec sbb lret rol pop in sbbl loop fnstenv mov aaa hlt lods arpl out lcall push loopne mov popf ss dec push pop clc sbb stos push mov sub sbb or out xchg out int3 mov sbb outsl mov ja mov les and mov fld mov ja stos scas mov xlat add sub sbb inc loope call mov lcall es fcomp loopne add dec or mov dec push dec int jp out test mov pop dec and daa xchg iret mov jle lods aam add mov mov push or pop jl cmpsb adc push xor gs lret inc mov (bad) popa cmp add les adc and mov pop xor dec pop scas sub icebp add orl fidiv rcr fcomp mov jecxz in gs or scas sub pop data16 stc movsb (bad) push add and push xchg scas lahf dec or sbb xor fst jbe add int3 fisub popa xor inc imull scas lods xchg enter jg inc popa xor mov push lds ret fwait divb push notl push fisub adc out mov roll mov pusha mov dec pop jle mov xor ret jle add out aad add rolb fsubrs loopne jmp push dec mov aaa xlat int3 shrl mov rorb sub (bad) lret stos sbb pop pop repz mov ret sub fnop mov (bad) pop mov arpl inc adc ja imul mov pop subl add jg mov imul data16 rcll ds inc (bad) fdivp jg les push inc loopne test dec sbb mov inc daa (bad) fadd or push es fiadd test xchg mov xlat cmp jo add in cwtl jge mov add jae pop xchg mov ret xchg fdivrs xchg jp data16 orl or hlt pop (bad) pop push fdivrp cmc cmpsl jbe test add mov mov flds dec ficomp push and jle or jbe xchg fs shrb test ja out or jmp mov loopne mov lret mov jb lock mov mov or into into push loop jle cmp out ja (bad) fsubl shll rcr ja popa xor call xchg sbb jg push cmp call and sub or add je mov xchg pop lret dec pop xchg loop add std push adc jg in fnop jle xchg lods stos jno cmp rorb pop ja pop pop add test xchg mov mov mov jle push fidivr lea xor sbb dec sub faddp mov sbb add cmpl dec je aaa (bad) mov loope,pt loopne fcom push or fiadd loope xor (bad) sbb xchg loopne loopne out push aaa outsl add xor (bad) lock cs repnz mov mov inc iret dec sbb add add mov pop or mov cmpsb stc jmp push (bad) mov xchg outsb lret sti pop movsb adc or mulb fsubrp add sub out test inc outsb ljmp sub adcl addr16 jg std (bad) nop pop cli aaa adc adc cmpsl fwait aam (bad) xlat (bad) leave mov jecxz fcmovnb push (bad) loope xchg loopne pop and xchg jp push iret jmp push sub sbb test out dec cmp insb nop adc scas out and out push js clc pop dec lahf cmpsb jle cmp push mov mov adcb popf (bad) sbbb dec ja dec movq xchg paddusb les aaa (bad) mov jo outsl add cmc in fst mull lret movsl xchg mov ret mov push push xchg test dec dec divb add or jp ss adc leave int3 dec and (bad) mov fmull inc ss fs lret and int3 sarl fbstp jp xchg or out jnp xor iret mov outsl push movsl addb outsb ljmp and (bad) mov aas pop mov xchg rclb inc outsb insb xor test inc mov mov cli add push mov sbb jle ret hlt adc in repnz inc push and add or out test fisubr data16 xor test xor xor sub add icebp (bad) mov mov and jno and fimul and cmp mov (bad) or cmpsl stc ljmp inc daa inc bound dec scas push mull mov dec out ds loopne mov cmpsb data16 sub movl dec jp jbe or out add add repnz in xchg lahf rcrb xchg push pop xchg cs push sti jmp outsl pop adc jecxz std scas popf mov stos js ds sub add or push xchg dec data16 aam push data16 cmp cmp incl mov out les ds imul push movl cli and js (bad) aaa rcrb addr16 mov xchg push cmp outsb (bad) js or inc lock mov js jbe loopne xorb pop inc dec push inc insl pop ss inc add out inc cltd jl add pop (bad) pop push mov mov mov add add pop scas mov mov push in cmp scas repnz (bad) adc (bad) mov js out cmpsb or je jle loopne add addl jg scas loop xlat out enter ss insb (bad) inc xor aad imul in movl lock cmp out xlat mov sbb dec sahf outsl xchg adc cmp cs outsl fisttp dec test or add add pop data16 add loopne mov xchg rolb aaa ret and les jle lahf (bad) into nop outsb push jle ss xchg (bad) shrl addb jle mov rol outsl xchg data16 mov pop aas adc jno in (bad) jne mov jmp std push fmulp leave hlt jecxz add cmp push ja add adc js cmc jo outsl pop mov push inc clc inc mov dec jo jno mov pop inc (bad) and sub icebp and mov or out sbb lock push ss dec es adc ds push pop pop pop jbe lds enter mov inc addl mov pusha mov repnz lahf ljmp out mov (bad) push add add push mov xchg loope mov jbe mov jnp ja cmpsb push cmp pusha sub jg lds cld push cmp jo mov xor out clc cli (bad) push add stos sti mov push loopne pop push cs movl addl (bad) into js add push loope les mov adc pop aam inc pusha sub pop xchg into les sub mov and sahf gs sbb dec aam test ja sub push hlt daa stos pop add pop cli push add mov inc pop inc addr16 rcll rorb mov xor jle,pt cwtl outsb movsl ficomp clc xchg repz mov add out cld clc cmc pop outsb ss decb sti inc sarb add gs outsb add sbb mov xchg and xchg aaa movsb pop mov push loopne mov mov lahf and dec (bad) (bad) popa xor inc add xor pop out lods xchg or ret shlb adc movsl je mov sbb and idiv pusha mov pop adc out fnop push jle push into scas xchg prefetch mov int ljmp sbb (bad) loop mov aas inc ret push jns clc aam pop push loop or repnz cmpsb ror ret rorl aaa inc dec and jbe sub (bad) dec sahf xor (bad) jbe adc push jmp packsswb cwtl pop mov movl xor outsb stos out mov imulb push inc add inc dec fmull mov movl mov (bad) sahf (bad) loopne sarb test loope outsb ljmp sbb outsl leave push ffree out sub fld std test xchg movsb push lods jo and mov push mov cld icebp out repnz ja mov jecxz pushf popl lock xchg mov pop push push xchg add dec dec ja xchg movsl (bad) notl mov sbb adc (bad) out into inc jg mov xchg ljmp add pop ss (bad) mov stc xchg (bad) mov xchg jne xor push xchg out cli je arpl xchg jb aad stos mov out xor enter ret sti in iret mov dec xor inc imul pop mov sti out dec lea dec xor lcall mov mov push push sub push and or outsl pop xchg clc cmpsl jl mov inc pop or arpl cmpsb (bad) test adc pop inc loopne and push cmpsb sub (bad) pusha test icebp mov xchg loope bound pop outsb inc add loop mov cmp (bad) push and outsl sahf and push call loopne outsl push neg vpaddsw mov push add jmp adc fiadd (bad) mov fimul push aaa (bad) push mov mov mov push add es cmpsl push and push arpl mov out lahf test push cwtl jp das push ja je mov mov (bad) scas cmp jo mov push xchg mov rclb adc divb fprem aad push and mulb add xchg adc jge daa push mov hlt fld (bad) test pusha mov mov movsl sbb push add les in call test bnd mov mov and sbb push sbb push or into aam add sahf addl lea addb push ss loopne es out jbe xchg xchg ud2 jg sahf lock push ss ja pusha mov ds and pop ss jp idivb (bad) out fildl push into add fldl out aad mov test scas clc xlat adc lea loope aaa sub add cs jo add jg outsb mov push daa pop mov outsl pop sbb xchg jbe cmpsb inc pop jo xchg jne,pn and ds adc push mov orb add cmpsb push adc scas into adc sahf (bad) mov push (bad) outsb adc (bad) mov aas lds or and push (bad) xor pop xchg pop jecxz outsb stc shrb ret rcll sub adc pop pop ljmp out and cmp xchg xor push push fisub scas loop push imul xorl loope aas mov ds imul sub or ljmp outsb push aas sbb jo outsb cmp or sarl fadds daa mov (bad) pop inc mov pop rcrl dec jbe in dec xchg aaa jecxz scas ss iret bnd pushf (bad) incl sbb loope push cmp mov add sarb rorb push out (bad) lahf mov pop inc or jne push push arpl sbb insl fcmovnb cs in push in sarb testl data16 xlat les push and incl or (bad) call movsl rol mov aaa test hlt in mov sub push mov pusha loope and mov loope popa mov xchg push inc add daa jmp push out mov sahf (bad) dec push addl sarl or shlb aam ds push fsubr lret dec daa fcoml dec dec stc call test (bad) mov addr16 xchg dec incb es subl mov test and push xchg jle adc loopne ljmp mov out data16 mov dec dec scas cmp aam dec dec xchg cmpsl push xchg incl mov nop jns jmp and dec push ljmp loopne pop push icebp (bad) add data16 fisubr xchg xlat cmc fmul mov outsb aas or or push (bad) shlb xchg (bad) push mov adc inc scas dec clc inc fcoml stos xchg (bad) clc xchg in and iret adc push dec lret (bad) std mov jbe cmpsl test mov mov inc cmpsl outsb mov movsb push (bad) rclb add and pop (bad) mov xchg dec lret idiv loopne and mov or push or bound jmp (bad) into outsl in dec stos add pop (bad) mov mov int3 dec cmc fcmovb enter (bad) std loopne push adc addl or xchg flds pop pop lock leave and jbe add in pop pop (bad) jg das mov mov pop movsl (bad) push nop pop mov inc and pop pop loopne add inc add and les inc pushf insl adc pop ss adc nop out or pop shlb jg add or out mov xchg mov mov in pop push lock je jb stc cmpsl pop pop fisubr clc mov jnp pop stos (bad) lock pop cld or incl in int into dec nop pusha push test push adc add iret fwait xlat adc adc cmp mov cs add (bad) or xchg pop adc inc push dec cmovp sub imul xor dec push or inc dec pop pop js out mov inc push cmp pop push add mov cmp lahf pop inc and pop adc sub and inc and or sbb inc inc (bad) ja (bad) outsl add push cltd push push cmpsb jbe ret and pop mov mov push and ds pop push aaa adc scas xchg cmpl or daa das pop adc out enter scas adc push and xor lods notb sbb xor pop cmp (bad) jg sbb movsb push sub ret aaa fsubl jo stc xchg imul pop inc (bad) jg call ret data16 push negb sbb dec pop aad or push xlat sub add push push push xchg jl pop add jns pop xchg cmp sub aas or adcb es mov ss xor pop sbb es jg adc fnsave sahf xchg (bad) es push sub mov es mov jge movsl xorl xchg out push mov pop out inc sub adc xor sbb mov xchg sahf jbe loope and xor and push add push sbb pop das dec add lahf and mov pusha sbb add ficomp fistpl push loop mov (bad) mov xchg imulb leave out mov xchg ljmp mov test push cmpsl fwait (bad) mov (bad) jle xchg jo roll cmp xchg (bad) sbb inc sbb int inc test sbb repz and or xchg outsl inc inc and iret dec add mov sbb gs and cwtl imul rcll repz out in dec loope popa xchg mov les out push lcall push lcallw ret push cs xchg mov int pushf lds shlb into mov lahf and out xor inc sbb call inc inc je inc jp out dec inc sub sbb pop push adc or or (bad) (bad) or or add inc das mov cmp jecxz push into out sbb add fcom or sahf shlb push jnp jle push (bad) sub js dec inc adc sahf cmp fisubrl xchg push lcall push xchg (bad) lods in mov sahf mov inc inc inc or negl add fisub jnp pop sub sbb add outsb add aaa inc add sub cmp clc jg pop cmp lods faddp mov clc in jmp aas outsb in fcmovnb mov sar int cwtl xchg jb pushl cmpsb xchg mov sti ds mov inc (bad) jo inc rcll push rorb sahf mov jg dec push push sahf arpl mov les add fisubrl fistpll rclb xor out sbb sbb outsb dec and inc sub out and ss mov mov pop dec cmp sub fsubrs stc dec repz or jbe iret add leave sahf mov or (bad) pop xchg out insl xor es icebp cmc inc out out clc lods test (bad) lret mov ds js inc loopne add cmp out (bad) dec xchg imul mov loopne add push out cmpsl pop mov icebp sbb dec push mov mov inc pop bound test inc push sub jne jne or adc jo cld mov inc in xchg ss outsb loope into add cmpsb mov test mov aam test inc cmc das mov in cmc jg mov (bad) jo inc daa mov ret inc and xor inc pop ffree cmp (bad) mov stos insb xor iret into jecxz fidivr dec arpl adc into scas and dec lea inc sub adc cwtl and clts daa jg and cmp mov mov inc and int3 lret (bad) inc adc jp js or push movsb (bad) mov fwait add ja push mov pop inc jmp lds push xchg ja fwait jnp sbb pop insl push adcl call adc jno add into xchg int3 push fnsave cli lcall add addl cs (bad) xor mov jno pop movaps cwtl les ja pop inc jb out adc pop das mov xchg jl mov test outsb call mov (bad) mov mov insl outsb mov sbb shrl icebp insl scas add out push xorb add es xor rolb outsb dec sub outsb add aaa out in push loope lcall (bad) cmpsl nop ss sbb out repz aas xchg xor pop and and push mov and pop arpl mov cmp or fadd push out aad xor dec out shll xchg xchg adc in shll fsubr add pop inc imul ja add out pop rcrb add add jle add mov out mov sub fcmovu mov scas pop inc dec push (bad) push into adc hlt data16 (bad) pusha inc stc outsb mov lret sahf xlat pop dec (bad) xor cmpsb inc cs xor push adc cs in xchg cmc ucomiss inc sub mov (bad) test mov push out nop cmp inc dec sub sarl loop out cmc scas xor push sub mov mov mov (bad) xchg xchg lret mov jle aas incl outsb adc and push adcb test push xchg or xchg data16 push pop sub and cmp sbb jg push mov xchg push rolb push sbb xor scas inc das imul enter push jno push mov push into or cmpsl cmp push mul jmp add aas mulb jo inc cmpsl add fisub enter inc pop addb mov add out sarl adc dec push push xor test cmp cwtl imul dec rcll cmp (bad) stos lcall imul or add adc icebp mov adc pop das cli sub jnp jae repnz into test ljmp add push pop shrl jmp add push add jo ret mov (bad) test scas mov pop mov lea ret ds outsl imul jnp mov inc pop pop inc std rcrb pop xor sub mov call dec call mov mov out into jne push xor jg mov bound dec push or pop rcrl jle pop adc mov popa dec mulb popa fadds loop mov (bad) xor jbe icebp into add pop les insb sub out clc ja in sub fcomi (bad) imull pop fiaddl jne outsl xchg fs orb (bad) mov cs aad scas push lret jns imul mov out pop es adc inc or out ds daa outsl imul adc pop dec pop mov mov adc ss iret adc sub pusha mov mov nopl cmp mov in in imul faddl or adc push adc inc cld fucom call (bad) or xchg jl dec aas arpl mov scas dec mov or mov inc or outsb js nop outsb out rcrl das mov xchg icebp inc adc cltd dec pop shrb es cmp pandn cmp mov mov js mov push bound lcall inc sbb movb iret sub or popl gs push push mov add inc out in out ljmp push call xchg mov push cmp pop notb xor fucomip divl mov push mov add scas nop push mov mov add push mov push leave (bad) out mov push cmp sbb fistpll jo popa pop test xchg cmpsb push shrb inc dec les adc inc aaa out mov outsb (bad) ja lahf sub out adc ds mov (bad) (bad) stc out mov pushf jle loop jl out mov popf xchg outsb adc pop jg jecxz sbb in out cli clc or outsb xor jbe jns dec (bad) pop aas push (bad) gs adc inc cmpsb test jl test or lahf fmulp xchg scas rolb push arpl or iret push add ret rorb add pop jg adc mov or cs add popl test ficomp mulb xchg imul (bad) jbe ftst loope xchg shr xchg lahf nop je sahf push in push mov insl dec fiadd movsb inc stc xchg insb lds ds cmp push ret (bad) aaa xchg nop insl insb loopne test xorl lods xchg data16 (bad) pop dec mov fisubl mov iret inc scas mov adcl sbb xlat and popl mov and cmp andb (bad) call pop pop xchg mov loope js adc push out int3 push mov ret fdivp ret stos xchg aas aas xchg jge and out mov inc call push aas mov jne cmp aas mov jp mov mov (bad) jle inc xchg pop mov adc int mov mov inc stos push xchg and mov test pop dec dec xor sub or or add ss pop cmp es push hlt (bad) fiadd fmull aaa push (bad) outsb jmp lods cwtl mov add out (bad) xchg popa fsubs aas jecxz inc cmp divb inc arpl xchg pop jle mov scas sub das rcll pusha push cmpsb andl (bad) and xchg cmpsb inc mov xchg mov cmp fimul xchg shlb stos sbb in sub lock sbb xor ljmp push xor clc pop out andb jecxz fldcw stos mov rcr call into sahf xor sbb inc cmovge pop mov jle loop aas mov add (bad) rcrb (bad) mov pop lea cmpsb mov add mov push inc sub xchg mov lahf jle sub loope int3 inc rcrl xor push test lds inc pushf dec lahf stos or sub fisubr sub mov dec vpshaw sub mov (bad) sub sub mov xchg lret push cmpb jno sbb in lds xchg das call add mov sub ret ds jle in fstl xchg cli cmpsb outsl dec out mov pusha push or add setns xor xchg orb inc add inc add pushf push sub inc fcoms add xchg xchg jp push pushf aad popa xchg dec jg jecxz or shll cmp shlb add dec fwait push addr16 jle cmpsb movsb mov lods scas jg adc and inc cwtl pop adc xchg jbe (bad) loope pop xchg jle ds test sahf xchg out cmpsl mov add push inc into mov jp push pop outsb lds adc xor ret push jle xor mov xchg adc add sbbl xchg aaa push or and lock push jle inc sub and decl (bad) push dec jecxz xor adc mov in inc and adc fisubrl (bad) iret rol push cmp sub mov inc test sbb jbe jle out rolb xchg insl dec popf add push outsl mov out in add fsubp mov pop cmp scas cmp push pop push push pop or test mov (bad) iret xchg fwait jnp xchg dec mov mov push and dec sbb movsb outsb sbb into (bad) (bad) jg adc mov (bad) fdivr psubb sbb out mov dec sbb pop xor or out xchg adcb aaa add mov jns aas ss xorl lods add add sub mov ds add cmp (bad) cmp dec sub leave rcrb mov push scas xlat test testl mov mov pop rcrb lock pop cmp sub rorb cld cmovo jmp roll sarb cmpsb cmp fiadd fstps inc dec divb call push jno outsl push jbe imul bnd jecxz (bad) cld push lock mov mov xchg mov scas push ss loope (bad) je aam aas stos (bad) xlat lret ret xor push fidiv sbb adc mov xchg pusha adc jbe loopne xchg sbb push mov push inc sbb out or xchg xor pop mov xchg loopne xchg inc push aam mov inc jno test call dec stos ja ljmp pop aad inc and jg push sub jg lds push xchg xorl aas xchg jno xchg aaa dec rclb add (bad) push mov jp rcl push add aad cmpsb xchg add push dec xorb or xchg cmp ret jae (bad) sbb movsb jg daa pop add adc push in fcom add jno lock rol into jl xor aad push scas add dec out mov pop sbb movsb inc jo aas sub movsl icebp mov xchg mov push add (bad) xchg and jbe ljmp xchg pop push data16 lea mov (bad) adc jle and jg aas mov jmp mov fidiv sub inc jbe mov push inc popf cmp sahf cmp mov push aam push mov push dec jg dec stos and sbb rorb cmp leave mov pop inc outsb sbb jno pop (bad) rol dec out ss inc sbb rclb ret mov popl lods gs aas or (bad) jb repz loope loope rclb scas mov mov ds fdivrs mov jp and push and mov ja clc push sarl bound imul pop inc add xor inc das adc fidivr roll and nop cmpsl xchg push add xchg or xor das mov lods add into int3 jmp push aam out add push add xchg sahf push and es nop dec pop pushf dec cmp scas aas ds or pushf xchg and push or push xorl mov sahf enter (bad) mov into negb daa shlb dec aas xchg insl dec (bad) aam (bad) push test (bad) lea jle adc push or xchg inc or push xor jecxz into (bad) into dec or cmp (bad) dec xor mov aaa cmpsb push push rol add pop stos dec jl scas popf (bad) add scas mov jg lahf pop push mov cltd daa lahf xchg push out loop in test inc pusha sahf gs cwtl imul add push scas fwait lock rolb cmpsb (bad) sub aas inc xor in jo and or sub insl xchg cli cs mov sub push (bad) dec pop or jg dec mov (bad) sar fdivrs in add ss sub aas fwait dec sub (bad) mov das xchg jae cmovae push pop jae das out lods push add sbb cld jg rolb or aas out (bad) mov out pop cmp add insl cmp out fcomi xchg into pop out ja dec xchg (bad) call inc push lret ds std daa mov push adc jecxz mov cmp call or std enter into shlb stos adc into aas into js mov lock lock (bad) das shrl push mov push and scas popa roll icebp aas std xchg mov fs xchg xor add add into rolb ss cs jne sub push push ss mov xchg jg subl lcall mov bound xchg and or clc leave mov fmul into ficompl mov add push jp adc push iret out pop sub leave mov pusha sub das mov dec add mov nop jg or inc rolb add sbb xchg pop xor inc push arpl pop xchg (bad) adc mov mov add movsb jle push push mov mov jb mov movsl and sahf jo push ja mov addr16 pusha jecxz cmc (bad) mov fcmovne into (bad) mov lods decl sbb ljmp pop cli cmp ss pop add es outsl push dec push sbb xchg cmp sbb mov sub ds mov aas notb lock out divl push inc popl nop and dec cld inc sbb je add testb add mov push pop cld dec ret inc cmpsb mov ds nop dec sub dec call mov or mov (bad) push les iret lods mov cmpsb sub inc xchg jb add jmp loopne pusha and fmuls xchg outsb ja sub mov scas inc mov xchg jle xchg sahf loop movsl cmp (bad) jmp aas cld out mov inc inc pop mulb mov daa jg xchg mov pop push push les mov mov ss adc int jg jnp fwait jno push test mov sub aas or psllw mov fxch int3 inc xor mov or xchg mov pop lock pushl mov mov scas jo fs out (bad) sbb das adc in repnz daa ljmp push pop push add add adc mov pop cmp push xor jbe fistpl (bad) out push xor xchg push mov lcall or out ret mov xchg fidivr inc inc xchg cmc lcall (bad) (bad) out addr16 adc adc jmp scas mov pop (bad) rorb mov add (bad) stos cmpsb push repz hlt divl mov push shll pop mov xchg add jo pop xor push jns (bad) gs jb arpl decl aam mov pop jl pop push aam ds adc aas stos pop xor int and pop in les mov add rol jno test fcoml (bad) cmpsl and sub mov pop inc mov jge aam xlat pop add pop out push mov mov hlt outsl mov icebp mov (bad) mov jle sub pusha (bad) ds rolb add adc inc inc decl mov sub sbb cs mov (bad) xchg insl cmp fistp jg arpl and pop clc inc adc mov pop mov je cwtl adc adc and push (bad) mov fiadd jg loopne rorb lahf sahf add sbb pop sbb icebp call mov pop cmp orl aaa add jl sub pop sbb cli jo dec adc cmpl xchg push mov adc ja hlt mov int3 ret les add push jg int ret inc ja dec inc and dec add xlat xchg mov adc jmp sub call out push xchg add aad out jecxz or push mov cmp mov sbb mov mov fist pop dec jns lods inc pusha xchg mov shrb sub jno aad sbb or xchg in ret or lds sbb ja,pt push ss test loope,pn push xchg test xor mov loope fnstcw fsub push in out hlt aad (bad) and out xchg inc aas adc jo jo negl rcl lods in inc insl dec push insb push adcl mov add jmp ds mov hlt popl inc jns in sub or hlt mov rolb lds cmp inc rcl push sbb jb jle lahf add push adc jle cs adc (bad) jbe aaa in mov ss das adc add out test lahf mov sub push scas push xor in rclb rol push lods sub je mov adc inc jl and mov lock ficomp les out ss adc pusha pop std aam add (bad) mov cli fnstcw ret push push cmp ret jbe (bad) test out outsl push xchg jle scas ror lods mov xlat aas xchg ror xlat sahf loop push hlt test icebp add fnop lds xchg stos mov xchg bound xchg pusha sbb xor or loope cmp cli push (bad) mov popw add scas scas lods (bad) lea xchg mov pop xchg adcb sub pop dec xchg (bad) pop idivb or ja movsl mov mov (bad) add fstl ds mov icebp add push jp inc mov scas push loop pop and and fcompl ljmp into call aas (bad) cwtl add push popf subl adc inc outsl xchg push push xor (bad) push cmpsb dec insl sti dec add push in ja mov (bad) imulb pushf lahf sahf iret stos cwtl sbb mov cmp add outsb into outsb in fcomps cmpsl pop (bad) and js add or pop lods cmpsb (bad) jle push and and scas sub xchg (bad) int mov push std popa mov mov adc cmpsb push imull cmpsl xchg mov flds popf xchg jecxz clc rclb inc sbb mov mov xor jo and addr16 jp jmp (bad) (bad) mov pop pop mov xchg mov add lods xchg subl loopne ds push cli (bad) cmc roll into sbb push pop fnop scas bound fildll imulb (bad) jg sbb jle cmp fildll je roll das inc sub add sub dec loopne jecxz hlt enter ret ret into xor adc push xor daa mov imul jecxz fmull (bad) (bad) aaa sbb icebp icebp repnz aas arpl das add ja cmp pop pop pop ficom and (bad) mov loopne mov mov data16 arpl gs mov mov add xchg pop ja xorb leave mov movsb out je fucom (bad) (bad) stc pop ljmp adc ja (bad) xchg cmpsb pop jnp add stos outsl dec push outsb push adcl mov xor xor inc ud2 xchg cmp ss cmp add das push pop adc jle les mov push push mov stos (bad) ss xchg jmp push cmp push loope xlat jle add adc fiaddl pop push shl fldenv incb jbe push (bad) (bad) fimul (bad) movups pop push add or mov push daa mov popa jno mov dec out mov or sahf add sarb mov jmp add jle jmp int3 cmpsb jle mov xchg movsl imul outsb cmpsl outsb dec jb mov inc pushf imul jl inc xchg add ja xchg push cmp xor sub xlat jle clc inc in ret mov inc (bad) cwtl push add mov push aad shrb in lret (bad) mov adc (bad) es add lea and (bad) sbb test add pop pop ss mov adc push adc xchg sbb xchg add xchg push inc mov es dec xchg sahf andb add iret cmpsl stos add cs lea mov add aaa lea mov aad mov cmp or and pop mov jmp mov dec ret les leave adc into test js xchg aam daa or movsb adc (bad) jle adcb and xor into lods test inc cmp (bad) jo adc sahf inc inc cmovge out inc and cmp mov ja mov push dec pop cs dec pop add mov fisub add loop fisubl fcmovnb jbe jo mov test (bad) adc scas ja cmc fistpll pop cmp cmp add jle xchg scas jmp xor mov add pop sbb nop or ja (bad) jno sarl inc and pop (bad) sahf inc (bad) dec fwait (bad) ss es inc or sbb sub (bad) jle or mov push sbbl subl xchg out add lcall pop jp push pop icebp loope cmc into (bad) mov (bad) xlat (bad) cmp pop push push jl add movsl pop inc xchg pop and idivl add int out scas mov adc push mov mov pop xor mov lock ss addb lea add add xchg inc add pop mull mov sbb sbb das into push addl xchg out imul (bad) (bad) push leave pop sub cwtl jp jbe je,pt clc sbb mov outsl pushl ds inc mov push popa push call mov out mov clc into stos jns jbe cmpsb fistpll loop jno ja mov cli add fmulp (bad) lock bound in lahf mov repz scas test jg popa arpl mov add in call inc (bad) es and mov rcr pop inc imul push xchg and into pop cs add popa add loopne push and mov add push xchg xor push mov push out dec push mov test fucomip lock mov push add lahf add call inc cmp fisubr sub imul mov js add in mov out cli mul adc jg addb xor or pusha ss loope mov pop pop dec insb mov push or sarl notb js shrb out es add xor loop xchg in es test jl adcb xorb inc cmpsl loope fisubl pop add sahf dec sbb or pop (bad) pcmpgtd add ss adc xor (bad) push push int3 mull repnz sub adc cmpsb test pop scas js add (bad) clc icebp mov pop sarl jbe inc ss testb and aaa mov push cmp add jl out mov or decl add sbb rcr ds pop mov xlat es movb andb mov pop cmpsb ret mov addl sub je lcall sbb faddl fimul test outsb add addb cmpxchg8b movq call pop mov addb ret leave push rcl insb add mov sahf fild inc mov rcl call ljmp (bad) jle in shlb mov xchg mov inc sub or pop arpl ss in outsl add or sbb (bad) (bad) mov test xchg das mov mov stos push sbb mov jnp rorb pop inc lods mov aaa jbe imul scas add xor data16 (bad) jge or out lret mov (bad) cmc fmul ss add inc jecxz inc (bad) jne inc mov push mov add addl mov sbb paddb adc dec pinsrw push sub and mov testb push mov out add mov fisttp xchg pop mov jle push cmpsl or js add add or out xchg sbbb (bad) mov pop popf subl cmp cli mov add lcall shlb xlat mov cmpsb fmulp pop clc fsubl imul int jne fadd iret je js into or inc add add call lea mul data16 mov mov xor lea dec dec out jle test aam insb xor xchg or daa sbb mov scas or add scas or sbb or ds xor dec rcrb push jne adc inc fimul sahf push test sbb mov shlb cmpsl enter outsl cmc fildl mov enter adc push ficom call push fdivr cs sbb add jo pop nop pop subl call mov std fs jo sub adc js lods add mov lock sbb xor xchg push into adc and outsb xchg jg mov gs mov xchg mov dec in push out fistpl or sti mov aad rorl sub shrb daa (bad) jmp inc add scas push add jg sub (bad) pop add add jo sahf data16 (bad) pushf mov or cmp out testl mov mov aas push xor push sub lea sahf ret add push add repz xchg iret mov inc pop mov cmpsb jo shll push mov add clc out xor xchg adc dec and jo jle push mov xchg out pop loope clc pop addb xor inc outsb (bad) sbb cltd inc mov (bad) jbe sub cmp ss mov enter (bad) dec sbb jbe and inc rclb out mov sub clc out xor inc mov add (bad) cmpsb out ficomp test dec inc stos scas imul or clc inc sahf xchg push mov mov scas xchg jo (bad) or inc arpl dec mov es shrb fmul fbld (bad) sar jle push add lds inc outsb sub cmp scas push scas repz scas jnp dec pusha sub mov es (bad) pop add push movsb mov dec mov add fiadd aam cmpsl and out sarb outsl inc rolb andnps push mov push push faddl push fistpl iret sti jmp xor inc push sbb pop push out fprem ret xchg jge ret inc xchg cmp fimull daa mov clc sbb test add add inc sub sub es (bad) out out add xlat outsl sbb mov decl mov lock add mov cwtl psrad out sahf push iretw push sub push push add jo je xor iret int push shll scas pop negb or push push mov into daa dec (bad) (bad) xor leave shll sbb add add adc js aam out pop add icebp jo loopne lahf push pop incl add (bad) loopne pop sti fadd mov adc xor ffree fdivrp faddp mov lahf sbb iret mov lock lcall lock push pop lret ror lcall adc push add dec pop aas in inc cs (bad) sub jns pop loopne sub in add pop push mov pop pop sbb cs dec push add ud1 in dec pop aas jg cltd inc incl pop lock cld repnz cmp movsb psubb (bad) and das insl inc pop fcomps pop stos fcoml dec jb mov aas sub bound cmpsb inc xor mov (bad) mov popa and mov cmp sbb pop or outsb jmp out adc aaa sahf add push or or scas xchg xor xchg mov sub and dec sub cmp push jle mov cmpsb jo jbe dec inc insl push sbb (bad) xor (bad) dec scas aaa and xor push xor mov push pop mov ja inc or out cli data16 fisub mov or std pushl inc push sub iret dec and rolb adc adc ret inc xchg mov push test insl jge jp and pop cmp (bad) xor cli outsl adc pop mov pop push aaa daa pop mov (bad) aas rol xchg cmp outsb adc add lods je pop dec loop out xchg scas test movsb jnp outsb pop shrb dec cmp (bad) mov mov cmpsb divl jl decl fisubr push add inc mov pop and cmp push cmovne iret push xchg (bad) pop xchg pop push sahf xor mov and jbe adc add stos xchg cli xlat mov pop mov out rolb lret inc or (bad) mov xor out scas mov stos inc cltd js je mov pop dec (bad) sub pop xor mov in xor push mov dec mov (bad) sub dec shrb add lods push and js jge (bad) or sbb pop adc movsl aam xchg cmc in into rcl cs fistpl popa pop rol into enter mov (bad) push jnp test push outsb test xchg mov or push test mov scas pop aas add push xor adc ss xor push scas xchg sbb scas jp or add mov sbb adc adc pop push jne incl loopne scas push sahf repz mov mov mov push test xchg add pop push outsb scas push add ds push push call sbb cmpsb xchg (bad) fldenv mov or mov repnz add mov imul push shrl mov push sar cmp pop out and scas in mov iret mov (bad) push add incb pop cmp out pushf xchg test pop push mov scas cmpsl mov push adc (bad) ss popa inc test pop (bad) xchg imul js out jmp test loopne push mov insl mov push add (bad) popf out mov lgs gs movsb nop push mov cltd push or (bad) popf (bad) out inc inc pop adc adc sub (bad) lods mov enter (bad) pop mov adc test test add sub testb icebp stc mov ss push divb mov jne movsb mov pop cmp dec and push pop push pop inc or scas test es mov lods in (bad) mov cs pop mov fnop pop ja pop adc pop sub mov lods push loope pusha sbb sub push xchg jl jp or xchg scas out sbbl insl xchg testb aad (bad) jg loopne inc es in cmc mov (bad) mov lcall dec and inc je enter mov outsb arpl inc out mov jle js inc adc push movsb into je pop and shll sub cmpsl push jg (bad) xor cs xor adc and sar xor inc ret sbb inc jo sbb cmp mov fistp ret mov mov dec jbe (bad) push push pusha or js cmc andb out js push add xchg es lods sbb ret dec jp ds push adc lock mov push (bad) sbb mov xchg xchg data16 insb imull add sbb sub push (bad) pop add imul and bound cli insl out in jecxz mov mov mov lods scas or test repz stos mov in mov test add aad enter inc mov scas cmpsb pop mov arpl es sbb (bad) dec lea ja jbe pop lcall xor xchg xor lods xchg (bad) xchg xor pop sub sub cmp pop nop (bad) call addl int3 mov std loopne cs popa mov xchg xchg into arpl add push rcr call js (bad) repz outsb mov adc push imul frstor xchg jb aaa (bad) insl bound push repnz pop jge xor push and push xchg je ss (bad) movsb imul pop test inc movsl in sub or or inc inc sub stos rclb lods sbbb xchg mov aad cmp pushf cltd push ljmp cmpsl out lods jp out into loope outsb dec or cmpsl loope adc out (bad) inc ret lods dec pushw push mov lahf mov pop dec cmpsl popa sarl sub xchg mov shrb es inc clc push lea sahf lahf incb jl xor xchg adc iret cwtl sbb jne pop add add rolb pop imul xchg out addr16 mov dec into mov ss mov lret mov scas mov outsl (bad) mul push std call mov dec xchg push mulb cmc fsubs xchg push mov xchg jne (bad) insl out ljmp sbbl jge jecxz push imul pop add mov js (bad) mov pusha adc pop mov inc and cmpsl imul adc rol sbb je cmp (bad) fs xchg or (bad) xchg ja jmp out mov xchg jmp adc mov xchg jge sbb imul out cli (bad) icebp idiv lods jl roll out push mov leave fcmovb scas mov push hlt scas (bad) ss xchg jbe xchg jns (bad) outsb mov push xor ja or ret mov xchg and pop dec mov pop pop mov push push scas notl scas pop (bad) mov pop into mov test mov into loope mov pop daa scas (bad) mov pop push inc pop adc mul in or fcomip aad subb scas stos jp (bad) popa movb xor sahf jnp adc movsb jo cwtl jns lret sbb xchg mov fsubl stos rcrw rcr (bad) lds (bad) inc xchg mov jp mov imul (bad) iret and pop dec int dec movzwl jg push dec push sahf jge add test jmp sub imul fsubrp sysenter cmc push mov movsb outsb mov ja pop push inc mov (bad) loopne ret in lock fisttpl mov lea test xor push lods data16 jle jle mov test inc les (bad) ss jae push js jp or int (bad) out dec pop lahf push mov pop bnd dec sub sbb jmp adc add fistp xor push adc add and test loop lret into inc pop loope in mov mov movsb mov into pop dec imul fdivrp rcll faddl cmpsl into mov pop (bad) pop ds imul and (bad) (bad) inc pop pop dec mov incb push flds cmp or or sahf xchg cwtl addb fidivrl mov cmp push or roll push cs cmpsb sub out into jns push dec mov add ljmp adc xchg push cmpsb nop (bad) xchg jns (bad) sarb fwait xchg and cmp add push pop xor push cmp (bad) push enter lods sub rcrl or xor insb movntps xchg jns bound xor inc das das push or out das sub imul sbb lar ja xchg mov loopne fstpl adc pusha jmp loopne jmp scas (bad) aam sub (bad) jne mov pop pop lcall in (bad) out shlb es arpl das adc push arpl push fstl jle xchg sarb adcl mov cmp adc mov popf and sbb outsl insl xchg inc add sbb add pop outsl xor mov or and cmp sbb shrl jge mov fdivp dec ljmp jmp dec sub js push sub sub add (bad) fnstsw ror mov (bad) pop cmpsl push push insl lea out shrb mov pusha lods es fwait js (bad) pop lock pop stos icebp sub push mov xchg and popa out sarb iret ret add push aaa xchg pop ficomp inc dec inc xchg loope sar call (bad) loope mov mov xlat push iret mov xor nopl mov loop imul cs ror pop push (bad) pop (bad) pop cmp (bad) push fwait sub push cmpsl sbb cmp out das mov pushf push rolb iret pop outsl dec sbb jmp add outsb cld data16 sbb adc xchg (bad) push and and pusha cltd cmp fbld ja or pop add adc cmc movsl mov lock enter xlat movsb xchg pop or xchg adc and inc push fimull dec (bad) lcall (bad) call aam test test scas mov ss dec xor test push pop popa add mov inc loopne pop sub xchg out mov xchg (bad) pop loopne adc movsb pop cmp ss pop dec sbb (bad) push sub and or rol cli mov aas out sub dec mov lahf add add inc adc jle aas ja roll js popf loop cmc cli (bad) aad push pusha loope jbe pop movsl das sub (bad) call call xor and adc push xchg xchg mov fadds sbb mov mov loope es inc ret add ss js incb daa rcrb and and ljmp adc ret push call (bad) (bad) fildl dec adc pop adc sbb into into add inc or sahf push out lcall sti sbb imul shll into xchg js jl add push push popa dec sbb jle xchg pop out ss jns ljmp out adc jne lret fnstcw adc addr16 dec sub pop push or inc sbb pop in mov fxch int (bad) add pop pop (bad) lret mov dec aas xchg lldt sub notl adc mov cmp mov cmp jo out jmp fbstp (bad) (bad) mov inc je jb ljmp in loope xlat mov xchg mov jle push cmp jle es pop cmpsl sbb pop push pop push andb push fbld pop das add dec pop push jbe sub mov xor and pop jmp outsl jmp loop lods cmp rcl cld fidiv sub and and xlat scas adc lock xor outsl dec pop push insb inc and pop daa adc fidivr stc pushf mov in not addr16 dec inc mov outsb call or jmp inc outsb mov inc cmpsb lret mov push sub (bad) sub inc and into push mov outsb cmc jno and mov inc cmpsl and ljmp lds (bad) jnp adc cmpsl (bad) pop cmp scas aam adc es sahf xchg mov jle mov mov out cld and cmpsb movsl es ret inc mov lahf outsb mov inc xchg xchg aaa test xor fwait mov aas fistpll data16 roll push jle push sbb (bad) ds (bad) xor sub shlb or jle lret (bad) fdivrp mov adc pusha (bad) mov (bad) pop (bad) iret aam jle,pn mov jmp sahf iret fst int3 aas push or dec scas inc jmp jmp loope mov outsb scas mov dec out test jp xlat cmpsb (bad) mov cwtl jl aaa (bad) fwait mov sahf sub push push (bad) popa out into push mov dec jmp icebp ret daa xchg mov aas notl idivb sub pop (bad) and (bad) lret (bad) push rorb add addr16 iret pop pop daa mov loope and xchg scas xchg test lds or movl incl mov mov lret add push xor es sbb aad jnp out push mov outsb jnp shrd mov xor jl,pt sahf (bad) push pop cmpsb pop cmp daa pop (bad) das sbb xchg and enter fldcw mov outsb push je dec jle aaa gs push out (bad) test sbb lahf (bad) xchg scas (bad) arpl incl idiv std fdivs (bad) insl inc xor aaa adc push adc loope out in aad add gs mov imul into jle fdivrs pop jae xor jmp imulb and dec movsl push (bad) aam pop je icebp mov mov movsl into insl push cmp adc jg lret in fmull xlat mov js xchg mov ja adc or inc mov or popa cmp pop lret jo mov cmpsl jno (bad) mov sbb mov push inc out push nop push and mov add push ss cmc add and add leave mov and push imul call mov add std aaa jnp cmp (bad) mov imul dec inc inc call mov sbbl jp pop aaa mov inc jo ret push xor pop and leave mov loopne mov lods push fdivrp dec dec daa into mov inc sub into xchg jae fild adc (bad) jne int push push add add cmpsb mov imul or int3 (bad) mov cmpsb push jne scas lea push aaa mov out (bad) imul mov popa inc cs and or pop xchg aam (bad) mov (bad) xchg pop idiv movsl ljmp sahf fsubrs dec dec imul pop scas outsl dec lock daa jle inc iret sub pop add loopne sbb lcall push ficompl jo jnp fsin das sub mov dec lods xchg (bad) mov adc shl push lods dec push (bad) into pop inc ja add ss lea loopne or push stos dec pop pop jle pop mov xlat adc push pop imul out mull jmp cli jo mov aam mov jl and pop scas orb adc dec aam (bad) leave (bad) ret (bad) mov pop mov andb pop mov push ficoml adcb or adc sub lods add idiv into ret shl adc lret (bad) push mov es (bad) ficomp xor mov push ss insb pusha adc imul daa aad or pop lahf mov in cmc das out and int xchg mov ljmp sbb ret lcall inc out sbb stos shufps sub push push xor mov sbb int pop in inc sbb xor or mov das (bad) adc mov cld push add adc mov test mov xlat test enter cs mov xchg jle aad fistl jne cli (bad) push fild add testb mov cli js inc (bad) (bad) pop aaa pop inc fsubr xchg data16 push mov scas loop nop mov push jbe ret stos dec fist loopne dec rcr jle pop repz and xor (bad) jl std das hlt ret mov (bad) out popf popf jae sub push adc push mov test pop inc jg js mov cli push ds mov jbe xchg xor fnstsw in mov daa dec pop dec loope cmpsb mov fs stos es adc push mov pop sbb pop add or test xchg xchg imul xor (bad) or stc les push add xchg nop add mov (bad) push imul mov mov fsubl push jno out in inc bound jne xlat pop fisubrl dec xor pop das aam cmpsl jmp mov scas inc aad mov inc dec in xchg incb add inc push xchg push pop (bad) out sub xlat gs cmpl test inc loop adc bnd mov out lcall cs pop dec jge add aam jg mov ljmp (bad) mul movsb xchg or setb flds daa inc lock gs std rcll cmp push test mov daa mov lods (bad) bound jg adc lret stc mov divb sub testl ficoml xchg sbb bound pop push xlat outsb mov rcrb js sbb push jp nop mov aas (bad) leave pop or pop mov add lds (bad) cmpsb fisub mov xchg mov test aas lods push fs insl and jo sub mov lret jmp lcall and aad inc sub jg cli sarl mov fld (bad) jbe iret sti xchg adc data16 add iret aas je cs fsubr in out icebp cli stos clc movsb jmp out jmp dec pop outsb outsb pop aam add fwait out sbb (bad) frstor fs lahf cmpl out ret stos jle push mov inc push scas insl (bad) or push aaa inc pop int or jge,pt cmp (bad) mov xor adc or and (bad) in ret fcmovb roll divb (bad) dec adc lods ss loope (bad) xlat mov in clc stc stc pop or stos fiaddl push imul (bad) mov icebp xchg xor out mov mov jmp icebp dec inc clc pop (bad) std cmc xchg jl mov xchg inc mov jle dec sub xlat or aas jne loopne daa inc faddp test pop cmp push mov cmpsb shrb scas xchg daa sbb ficompl ret push loop pop dec iret fs adc inc jge sub loope iret jo pop int3 xchg cs xchg pop cmp rcl (bad) outsb popf movsb mov es mov push out icebp xchg xor pop iret push es jne int3 mov xchg (bad) icebp stc ljmp ljmp add or outsb nop pop cmp sbb cmpsb loop loop push mov push mov mov (bad) sub push sbb iret call shrb adc jle dec cmp mov mov aad mov mov ljmp out lods hlt adc pop outsb and and dec fild push stos outsb outsl lret mov shr mov pusha sub mov push mov js ljmp sbbb dec push inc fisttpl push ja,pt jo movsb cmpsb fidivl xchg scas mov fsubrl mov inc ret xor add add push (bad) out lahf inc adc dec mov push add push mov pop push and in loop push sub fisttp and fistl jmp rclb and std pop dec (bad) fildl iret outsb push ljmp dec mov negb cmc dec insl cmpsb in aaa jb,pn mov out jecxz pop jne xor inc or adc inc mov mov mov int mov clc adc or cmp and jecxz mov (bad) faddl inc adc imul (bad) lret xlat scas test push daa test test enter cli pop decb add loop imul pop aaa (bad) xchg adc jge (bad) and mov cmp fidivr mov movd push mov mov mov sbb and out inc insl jg dec faddp mov xor push sahf inc stos jae push sarb mov dec fbld adc mulb or loopne mov (bad) push enter adc in loop aam mov or (bad) jne mov add scas outsl push dec imul das adc push rclb fidiv sub fs xchg daa lods add sub add popa dec push jp js push ss pop pop scas outsb mov scas aam cmpsl dec shrb call addr16 fisubr andl test aaa fildll out lahf add mov mov mov es adc inc mov addr16 sub xchg popa popf inc pop out sbb mov lock pop daa jo mov mov pusha loopne adc push lods daa or into push movsl ja shrb sahf pop fisubl jmp rdpmc je dec out xchg ret testb dec xchg jb (bad) iret mov loopne jno,pn cmp xlat (bad) mov (bad) add mov (bad) (bad) mov pop clc outsl imul fdivrl out mov clc sbb jecxz (bad) repz add sahf (bad) pop xchg fwait (bad) cs push add (bad) movsb mov and pop inc dec ret cmovle push outsb sbb fs adc sub aas sub iret daa and (bad) inc push mov ss subl nop jle lock add xchg jp mov sar sub mul jg (bad) imul add leave sar xchg inc nop test add decb div mov subl xor fiadd fbld (bad) push ret js mov enter ja cmpsb cwtl pop cmp lods sbb lock mov add push pushf subb mov sar push lcall mov adc (bad) ds popa cmp mov aam fbstp rclb pmuludq or mov inc jmp loop mov fdivrp add adc (bad) (bad) out and cmpsl loopne rorl scas ficom push sub gs decl xchg mov pop in mov lret xorl out pop pop mov fist add ljmp push jmp jg test (bad) ss cmp push (bad) das adc lds (bad) jecxz xchg xchg cmpsb dec (bad) lret (bad) loop outsb loop cmpsb lea mov pop decl in cmp jmp nop in movsl fwait or lods imul xor or sbb push jg mov mov pop ret das cmpsb xor sbb jo stos pop lock adc lock clc push cmp iret cmpsb je,pt xor sub fwait ja sub cmpsb (bad) cmp ds jp inc jp scas mov dec (bad) fdivrs popa jmp push mov int movsb lock pop fwait test sub sbb xchg cld daa mov hlt out in sti out mul scas push test hlt inc mov pop dec rolb jnp test inc push push mov mov (bad) (bad) les andb push sub out rcll push xchg daa mov scas mov pop push push push clc pop mov dec mov add add (bad) repz sarl inc inc or dec adc das rolb out jno in loopne es cli hlt loopne and lret addr16 cs cltd cli cmp aas push xchg icebp test lods lock mov add mov cmpsb xlat jbe or push ss (bad) xchg add in (bad) fisub pop add adc mov rcl rol sti ljmp (bad) loopne sarb or je mov out inc es std xlat (bad) mov ds lods push (bad) imulb xlat jle mov mov xchg add orl cmp (bad) pop insl loopne cmpsb mov (bad) and mov (bad) rcll adc pop cmpsb pop cmp cmpsb fidivr mov add out call add in aam mov lret pop and pop shr fdivs and fdivrs ret (bad) stos sbb aad mov daa (bad) mov rclb lods pop xor inc loop dec mov xchg neg fwait jp testb push or leave mov outsb sarb sete mov test out repnz add sbb aam outsb lock push dec cli inc mov push sub lods cwtl (bad) insl sahf dec and test mov aaa add (bad) (bad) jle adc cmovno (bad) push es mov rorb outsb push es sti ljmp inc push std add neg (bad) in ljmp sahf aas push nop rolb or inc xchg into push push cmpsl cmc adc xlat push int inc rclb aad or test jmp pop (bad) scas cwtl mov fadd mov jmp (bad) cmc fadd into out movsb inc mov inc xchg sbb cmpsl sbb or dec lock nop test movsl cs mov (bad) pop mov inc cmpsb cmpsb (bad) movsl or fucomip mov mov (bad) mov aad aad test aas mov cmc rorb push jle clc mov scas push or les mov daa lret loopne and std loope add or sub jmp pop and (bad) enter (bad) iret leave out push pop inc test cmpsl sub jg inc neg ret fadd es test sub (bad) xor and clc fiadd dec outsl sbb imul add mov enter pop popl lock loopne inc es rolb inc and rol lsl leave leave leave test pop aas xor enter incl adc das pop pop jnp movsl mov lds cmp adc jg sbb push mov jb add and cmpsl in dec xor cmp in and mov adc sbb mov adc or lahf or pop out lea sub or mov shlb mov cltd adc sbb jge push js pop divb dec les mov pop or pop ja sub sti aaa push sub lods incb inc mov adc call cli lahf xchg sarb jmp ja stc lahf jb std nop gs (bad) decl xchg cld insl inc sub dec and jecxz adc enter outsl shrl push out inc push sbb pop xorb addr16 addb imul inc sub or test outsl fadd neg sub mov (bad) dec into mov adc es mov inc idivb xchg ja xchg and xor or insl or bound mov adc sub cltd inc decl add (bad) out imul cld test fstl loope or push stos nop xchg test mov xchg jno lods (bad) scas mov ja mov movsb aaa adc xchg jl scas popa sub in add xchg jbe xchg sbb test add add or inc mull arpl pop incl push ds fmul (bad) out stos nop cmp mov scas roll pushf mov int jno pop mov jae ds (bad) cmp cs sub fildl mov cld jb jge es mov add jns fist add orl ficom add (bad) mov xchg out int3 jbe add mov call (bad) push mov push shrb mov cs loope ss ret xchg je fldl sub mov insb fiadd hlt or jp pop (bad) ret inc stos mov or out mov es push adc leave mov outsb call stos mov arpl lods pop jg xor stc idiv jg hlt or push int rorb das and ss mov push cmpsw jge pop gs jbe xchg jbe repz sbb (bad) xor out mov sub xchg or mov push push or (bad) sub out xor mov (bad) mov jp xchg shl add sahf aad dec rcl in jmp out std or into xchg aam fwait xchg shlb outsl (bad) (bad) xor lret push push inc cmc nop jbe cmp mov fisttpll jp mov in test push or dec daa sub sub push das jle adc adc das ss (bad) fs aad ror xchg sbb jbe sub gs in into call jle out mov movl test mov add inc sub cmpb and mov pop lods jbe imul loopne add adcl aas mov or sub push xchg jle outsb (bad) jle inc pop mov (bad) mov mov movsl or (bad) out rcl adc loop xchg popa loope push push jg rolb inc faddl add sbb xchg sahf xchg cs add cli pop and pop std cmp push (bad) push push shrb (bad) idivl xor sbb sub adc mov das rolb add jg push xchg out mov mov sbb push lds dec call mov add push cs mov inc mov sub add (bad) mov push dec test adc pusha inc xlat roll pusha jle mov arpl mov push or xchg outsb ja sbb aaa sub aaa push pushf rclb push jbe or sub push jbe cltd xchg js sti loopne inc call jecxz daa out pusha push sbb int ja xchg cvttps2pi int adc insb dec js or cmpsl push mov xchg pop gs push les scas mov pop mov ds inc ss out mov xchg and es mov mov adc pop cwtl or test xor xchg jp aad test je dec loop call or (bad) mov xchg mov sbb ljmp lret stos xchg bound inc add add rclb popa outsb inc dec sbb les stos mov in xchg push push iret repz xor ss inc (bad) fistpl dec add and or mov mov call or loop,pt ret ss fnstsw popa addl mov jns movsl (bad) fsubp jg stos sub inc test scas cltd push ret lahf pop push pop mov jle ja pop inc lahf push mov jo int3 je push and or mov inc lcall sub inc pop mov iret das push inc sbb out sbb cwtl dec dec ss xchg loopne into clc sbb adc scas in lret mov sysret pop mov push pop and jle out loopne adc pop leave test je jle inc pop ja xor adc ds adc mov push rclb pop inc shrl push clc push and rorb fwait inc jae pop notb xor pop adc ret pop mov push mov aam pop lock xor jbe stos xchg mov test or lahf das jle pop inc rcrl test inc jg insl sub mov push (bad) rcrb jecxz (bad) fcompl leave mov adc lods movsb inc rolb sub in inc dec iret and and fwait rcr inc popl out data16 mov push shr insb push and adc lcall sbb fiaddl push add loope cld jg jle popa or sbb dec push inc out push sbb mov lcall mov jno fisubl add inc push es dec or sbb (bad) xchg mov into mov shrb movsb outsl inc test int mov not mov out outsb push lcall and cbtw arpl adc outsl xchg out pop inc push sbb lret or push nop and fcompl mov dec iret pop lds xlat xchg push cwtl mov mov adc adc cli fisub mov mov idivb fdivs out mov out ljmp into xchg lock stos negb (bad) xor das add outsb and xchg shrb push xchg test rcrb mov mov frstor jmp pop push gs xor test outsb and ret jg mov fisubr nop (bad) (bad) int3 sar test neg pop test stos xchg lods mov xchg xor int lcall sbb inc into daa inc stos or adc push adc mov jb jno sbb movsb pop (bad) aaa (bad) paddd mov (bad) mov xor movb pusha push dec jg lods sbb aas jg sbb lock mov out jecxz push lcall sub jbe fwait enter inc daa cmpsl iret (bad) into les (bad) aas rcrl out mov test (bad) and rcll and mov add lods pusha mov mov daa pop and lods dec lahf inc adc add pusha jg out fwait iret or stos outsb dec pop cmp cmp jg xchg int3 add push xchg (bad) cmp xor (bad) arpl mov mov pop icebp inc rcll repz fimul pop jle fwait mov loope jo out outsl rorb sbb scas fmul scas mov test ljmp cmp adc adc (bad) fcmovu mov negl js xchg loopne jecxz out test pop jg push sub es add mov inc cltd mov jg mov rolb (bad) mov mov mov pop xorb xchg pusha jg,pt jmp cmpsl test lahf ss pop xchg xor xchg xchg inc xchg sbb out push pop lock pop ss jle,pn sub xchg xchg cmpsl and or int or lock mov cwtl test aaa mov push push test dec dec mov cmpsl aaa push cmpsb lock jmp das call push cmp push pop scas cmp sub xchg mov xor mov scas cmp add xchg adc pop push clc dec sarb lret out ret mov xchg mov fdiv into lcall jo pop notl daa or inc lods pop rcrb neg sub pop (bad) jg inc mov cltd pop aaa outsb aas lods les outsl xchg lret pop ljmp sub aad pop mov cmpb pop sbb inc mov fistpll lahf lcall and ret test inc mov popf push lahf (bad) ja outsl sbb inc movsl adc pop cmp or add iret ret inc popa dec add les (bad) fcoms stos or incl pop and ficompl data16 lret sbb push sbb cld pop pop pop jg lds leave fiaddl pusha inc jl mov jg dec or mov mov sub jg lock outsb and daa out jo mov (bad) mov lea lods push pushf lcall daa mov popa les call inc les fadds or or jg sub in sub inc xchg mov das out lcall aam addr16 jmp ja pop ret mov js into loope or cmpsl arpl fisub test outsl push push sbb mov movl int xchg (bad) inc jl loop cmp cmp or or ljmp orb test loope mov fmull push outsl push cmp cmpsl outsl pop mov (bad) push pop inc xchg movsb jle roll (bad) pop fucom call push aaa add and xchg aaa xlat das outsb popa imul mov or and and mov or ds xlat imul call push jmp inc sub cld jg loope testl loopne (bad) repz cmp jp,pn or scas push nop mov ret adc scas imul inc outsb movb add xchg test mov out sub jmp hlt in jmp movsb out arpl or ds ret pop pop (bad) inc jmp jo test sbbl dec sub mov idivl repz inc test cld iret mov sub aas outsl pop dec mov xor xlat cmpsb fnstsw out hlt div inc mov ja and aas push pop cmpsl icebp movsl mov pop ffree int3 and ja ds insl xor stos pop sbb xchg cmpsw push (bad) push xor cmp scas mov mov pop std shrl push dec add movlhps jg ret fmulp enter insb jecxz inc out mov jge rcr addr16 in into std dec cmpsb shrb cs pop lods adc inc pop testb xchg je push aaa hlt and or (bad) out mov loope (bad) scas stos ficompl shr movsb (bad) and pop jl cltd es jle das (bad) (bad) idivb std mov cmp arpl inc call jg or push rcrb jmp push (bad) mov call rol push push xchg inc je push or push bswap xchg ss xsha1 cmpsb mov jmp cmpsl loop jecxz jmp cltd test ret gs imul cs push aam outsb mov mov or mov test sahf sub fcoml xor pop loopne push loop fsts imul fimul add add je pop and mov data16 adc jle adc out idiv imul test dec fisttpll cmpsb lahf in xorb dec lods jne jecxz inc inc mov cmc add add xor out in push pop (bad) xor mull loope mov test xor je aaa lahf add add mov decl xchg pusha inc cmpsb shrb repnz stc in out mov cmp lcall sbb mov pushf or pop in mov or cld mov adc scas call add movsb out push xor test aaa xchg outsb out add imul cs aam mov fdivrp xchg lock mov dec sti (bad) je js out ret stos mov in fild mov addr16 repz pop out xchg movsb push aaa lahf bound push xlat pop inc mov out jg mov inc inc inc icebp test outsb add mov dec out (bad) mov loop jp outsl jg inc or cmc (bad) mov roll or sarb xchg fs sub push sub or push push dec adc sbb push or outsl loop jno andl mov and dec arpl fsubp ret mov lahf jbe sbb dec and sarl push inc xchg add ljmp mov jg movsb mov (bad) push mov stos xchg pop lcall pop sbb hlt xchg xchg jbe out shrl out push adc (bad) in lret out sahf xor scas test mov (bad) icebp call adc daa enter pop sub andl test push lcall popl xchg es mov pop dec std fidivr xchg or add mov push or sbb call out fisubl scas outsb jnp xor xor ss pop pop inc sbb outsl pop mov push push inc cmpsb mov jmp (bad) lock add cmc fcmovnb ljmp mov inc xchg (bad) mov jno or cmp hlt mov rcrl gs daa (bad) xor les aaa es jecxz ss mov loop fadd out sarl cwtl shlb xchg sbb cmpsb mov (bad) stos out call xchg fcmovne ljmp mov push sahf push xchg mov push movlhps lods cwtl add or jp out mov (bad) push clc mov into lods fwait adc or push out mulb lods pop (bad) repz movsl xchg mov pop aam cmpsb dec rorl in aam stc add lods (bad) mov push adc test add loopne data16 je ljmp dec ljmp std ffree add dec loopne std loop xlat jg subl lret cwtl mov push arpl ds cwtl sbb mov aas scas pop pop js ret out femms lock insl push ret pop (bad) bswap insl pusha push lock pop lsl jb xor add sbb addb cs add cmovb dec pop pop jg xor cwtl loopne pop jo cmp sarb fs scas add scas in sub aas movd mov inc and sub sbb sbb stos test push inc mov out cmp push mov addl cmp cltd adc iret add adc adcb pop pop sbb add (bad) decl fist cmp push mov shll push sbb inc cmpsl push mov sahf push or cmp cltd lcall push sarb cmp scas inc cmpsl loop gs sahf push jle cmp ds or mov subl xchg dec sahf or push lock pop push mov jle lcall lahf xor stos inc xchg xor pop dec add movsb fs fwait mov clc sub cmp inc sub sbb cwtl lock test push push test mov or adc sbb jmp inc mov fistpll push xchg jne inc mov (bad) inc xor inc pop pop insb mov mov push push fisubr les push xchg xor outsb adc rcrl dec jmp push adc mov fcmovu scas pop push cmpsl lea dec mov lret cmpsl fs mov imul add mov mov adcb outsb sub add mov bound add fmull jmp enter mov pop push ds cld mov dec mov add xchg jae cmp add push xor es pusha es push mov dec pop or inc sub mov and lcall mov outsl ret cs popf (bad) mov inc rol cmpsb push mov xchg les insb ds pop mov outsb inc push pop and push jno movsb sub mov xchg adc (bad) sbb fistp push xor mov hlt inc add ja test push cli outsb cmpsl mov (bad) mov or nop mov push xchg push rolb mov loope daa jo xchg out pop movb pop jmp pop pop out push js push mov dec imul xchg mov es mov jne out lahf xchg es inc pop aam fidivr xchg jno jl mov adc sbb or repnz outsl and or iret push sbb mov pop gs out ds sahf xchg fbld dec (bad) (bad) mov add aaa aad sub push and pop inc xchg out xchg movsb add fidiv fwait push add ljmp adc cmp or inc pop xlat mov mov mov es jl xor mov add popa inc js andb xor test shlb fdivl incl cmp push mov sub push push pop scas lahf popf add mov int mov mov inc (bad) ds pushl xor xchg jge dec add add jp xor iret in dec mov sub insl sub scas lahf add fmul add jne (bad) (bad) ret les lret pop and idiv mov xor loopne xchg jnp push sub jbe push cld sbb movsl pop inc sahf sub ja pop ja ret rolb lahf in ss (bad) mov fwait pop cmp clc fild inc sub mov inc stos sub std add xor or loop mov adc (bad) mov cmp jbe pop xor aas xchg xchg sub push or and and mov mov mov rcll add mov mov dec mov aaa pop or push lock mov ret loopne xchg xchg xlat fchs ljmp dec (bad) lahf pop xor jl daa int3 xchg insb outsb dec lds and es or mov or add mov mov sbb mov mov stos xor test aad daa (bad) mov push xchg bound pop cs dec jg mov ret dec iret push or adc pop dec ds adc or fnstcw mov xchg add push shrl scas sarb xor daa or leave movsb xchg fimull xor push das cs cmpsb sbb (bad) inc jo (bad) (bad) jg test add dec push fistpll lcall js rorb scas (bad) fimul in out push add aam (bad) mov pop jmp xlat mov into cmpsl popa popfw adc xor mov or ja mov dec fisubr ud2 or or fldt fdivrl popa cmpsb push push xchg mov popa xor icebp repz shlb imul loopne jmp aaa (bad) fcmovnb mov and or push aas mov pop xchg dec sub outsl dec out or out or out (bad) push idiv div or mov arpl lret mov test test xchg test pop imull lods shrb scas xchg pusha aas fisubr cwtl sub mov xor testb fisttp mov jb (bad) mov dec jmp rcl scas add (bad) clc div push jecxz pop fsubr iret mov call add mov sbb pop (bad) dec aam push jae cs scas xchg ud2 call lret dec je outsl jg (bad) std xchg add mov int3 ljmp mov int3 (bad) jecxz sbbb pop fnop enter test mov add clc xchg mov (bad) mov add (bad) mov (bad) lods js cld mov push repz xchg les sbb jmp push push test mov das inc inc pop (bad) dec test movb cmpsb sbb mov pop rep test mov scas inc dec data16 push addb inc aas push scas sub incl dec pop dec mov mov and lds push js shlb pop push jbe push sbb rorb adc pop and (bad) loopne mov sub mov cltd lds add mov pop push cmp mov gs enter lds jmp das outsb les out mov out out xlat dec es mov dec iret mov and es jecxz fisttpl ds xchg (bad) addr16 and int lahf movsb xchg incb call inc fcmovnb jno mov push rorl sub in xlat lds jnp mov leave clc shr out out inc xchg sub push and fcmovnu dec mov mov sarl mov imul rolb or inc outsb ss add rorb test popa lret addb push testb addb push test xchg in cmpb fcmovb cmpps sbb sbb pusha mov adc pop cwtl (bad) je pop cmp cmpsb jbe scas add inc pop aam mov push adc (bad) sbb and mov xchg ja lods subl jae stc xchg addr16 stc pop xor stc (bad) and add adc cmp push imul pop outsb sbb push lods icebp loope (bad) fdecstp lods dec mov data16 pusha ret pop out mov (bad) das movsb pop jge sub sbb dec mov push pop call ss mov mov mov loopne add lcall les or jg pop aad arpl cwtl shlb push out and test mov popf and jmp test mov push aas push push hlt push dec pop mov dec (bad) out sahf inc cltd mov stos push adc aad jg or push (bad) in in scas lret rol mov flds inc aad (bad) sbb mov dec push mov or mov pop or ss or xchg push sbb xchg sahf and clc iret rol in data16 popf xchg pop std out sub (bad) movsb jne pop lahf jne sub mov shrb sahf aas adc ss xchg jp pop sahf and mov das outsl dec inc pushf jmp out dec lods movsl (bad) es jne (bad) pop pop mov add mov mov pop inc dec jle xchg jae imul (bad) lds inc dec jle (bad) xchg adc adc loop subb lret rol xor add les push mov and das mov mov jbe xor xchg xor mov or lea sahf cmp or inc mov cmpsb js loopne xchg test dec mov push sbb sarl mov ret mov xchg inc outsl inc roll pop push xor push mov adc mov repnz enter mov mov imul (bad) out pop int sarb push lock xorl adc push push and (bad) inc jg test mov lahf push mov or das lods push mov lods jg lcall push sub ret incl mov call and push xchg out hlt xchg mov dec sahf lds inc ss sub movsb push popa (bad) ds fsubrs sarl push dec sbb mov xor mov (bad) jecxz ds jne xchg scas outsl inc and sbb add mov scas popf xorl cmpsb pop mov cmpsb scas outsb mov mov jg push mov pop lcall loop mov sub mov jne add adc adc into in loop mov (bad) xor and mov lahf insl pop dec xor mov lea add xlat ret shll pop in lfs pop test inc outsl test fistp and faddp (bad) in aam fst (bad) (bad) inc lods xorl push (bad) pop fcmovnb mov lock mov out rolb stc ljmp (bad) cmc out repz mov jne aaa push mov and sbb (bad) shr movsb mov orl aas jo mov push add pop (bad) out ret popf mov mov test not inc les das adc mov movsb xchg in mov rcl lcall out dec pop (bad) scas inc es scas jecxz mov mov lret mov and mov add test movsl ljmp inc sub stc loope lods clc ffree in pop add sub or adc add ss mov stc sbb add rclb pop add pop push setge xor ret add inc sub push adc inc jns cmpsb sbb and push cwtl xor stos cmp add aaa cmp push cli push mov sub pop xchg pop mov outsb xchg outsl pop (bad) ja and push inc popa or ja or jno fs xchg xchg sahf push mov xchg sahf jbe xor ret and xchg sbb or push cmp lret mov mov mov jbe sbb mov mov ljmp mov adc pop aad mov add jle inc sub mov xchg push andl push add sbb (bad) sub ja les arpl clc ret (bad) divl adcl imul incl adc xchg outsb clc gs inc cld xor or sub pop loopne iret mov and (bad) sahf pop jg (bad) pop and popw divl xchg insl sti xor push and jb ds push xchg jg andb ret rcl or sbb into jg loopne fcos imul pop mulb jg scas sub data16 out outsl pop out fistpll sub fnsave sbbl inc sbb add shl push incl imul imul mov xchg orb or add sbb cwtl pop cmp jg inc ds mov add outsl xor mov xlat gs cmpsb xlat ficom icebp pop ds add imul cs xor inc push sahf loopne inc (bad) sub pushl (bad) aad or (bad) mov ss dec aad push scas ja sbb and xchg jno lret mov lahf stc in movsl jl in mov flds pop xchg jne shlb movsl out mov dec aas xchg (bad) incl or cs loopne test fprem fld push insl cmp jne dec pop lock cmpsb xchg lret mov cmpsl sbb rorb clc andb out and ret (bad) (bad) ljmp inc or mov push icebp and push mov cmpsl mov jg (bad) jge shr clc ja je leave sbb cmc mov jns push add ds xor cmpsb (bad) (bad) (bad) cmp pop add push out ds dec pop mov sbb and (bad) (bad) jns aaa pop adc push and jecxz into sar fimull inc xchg mov hlt (bad) sub (bad) (bad) (bad) jmp cmp jmp push sbb adc dec test cli or test pop dec pop (bad) (bad) (bad) (bad) dec cmc sub (bad) push mov dec dec xor push jecxz mov or sbb mov pop aaa mov adc cmc outsb sub mov xchg pop (bad) (bad) lcall pop mov mov add xor mov mov (bad) (bad) call cmp add fwait mov leave rcl jae in mov lock jl (bad) (bad) (bad) call outsl mov mov pushf xchg sub (bad) jecxz aad imul (bad) (bad) (bad) call fwait adc mov in add lret adc in xor pop push cmp (bad) decl hlt ret inc ret int add push xchg inc fstps and sub and dec inc sar ljmp push sti jb fldenv stc (bad) xor hlt (bad) (bad) (bad) jg icebp dec aad mov in sti and or (bad) leave es sub (bad) (bad) (bad) cmp ds sub push int stc inc repz mulb and psubusw mov sub ljmp xchg gs hlt or inc pop push out push jp cmp pop jmp gs dec jl bound outsl (bad) (bad) (bad) ljmp mov mov je lahf pushf cmp cmp div enter sub (bad) inc push test cltd inc push xor sub cmp mov addr16 cs (bad) (bad) incl fild pop shll (bad) out aad data16 lods fsubrs push fdiv sbb xor sbb je mov sbb std mov adc iret jne (bad) (bad) (bad) jmp rorb stos push cmp inc cmp or sub jg loop or mov or scas (bad) (bad) cld bound ret dec inc dec inc pop pushf out nop sbb xchg or orl call add imul push cmpsl (bad) xor sub cmp mov (bad) mov loop add stos adc in xchg insl imul (bad) (bad) ljmp or loope lods jge outsb les push cmp (bad) mov ret jae out clc (bad) inc loop rorl mov jnp popf aaa es inc das cmpsl sbb das lcall shlb cmp jp mov out xchg xchg std mov xchg test xchg and (bad) (bad) (bad) pushl mov leave negl data16 xor in sbb faddl xchg sub es (bad) (bad) ljmp out xchg push das and imul or mov adc (bad) (bad) (bad) decl sbb or incb mov pusha int3 cmp out sub sub dec adc push mov (bad) (bad) (bad) mov out movb popa pop decb add jbe mov jecxz (bad) lcall and test pop out xor xchg addb stc xor (bad) lcall add inc sbb xchg scas push (bad) jne inc pop fwait push int3 data16 jne aam and sbb pop ret jmp rolb bound mov (bad) je (bad) (bad) jmp mov insl push xor jnp or fcomip lcall and imul mov cs sbb movsb (bad) (bad) (bad) jmp and inc sbb pop fsubl sbb aad jl pop ljmp (bad) (bad) incl data16 and mov xchg inc adc cwtl out dec sbb jge sbb xchg mov xchg ljmp popf rcll sub lret dec popf movsl mov (bad) inc stos xor xchg mov insl popf add daa nop adc ljmp push in mulb fidivr jecxz xlat or repnz cld pop clc das shr and inc push sub or xchg (bad) and sub (bad) call lods sub scas lcall mov mov aaa adc movl xchg das imul outsb xchg add jb mov add adc mov dec mov (bad) pop and jmp lods push test jmp mov rolb (bad) (bad) (bad) decl fisub popf (bad) popa mov xchg add push aad testb push fs (bad) (bad) pushl dec jno and inc pop pop fwait mov xchg pop push insb js pop mov push or lea (bad) mov xchg in push lods cld lret pop xor lods imul mov jno addr16 pop imul outsb mov push loop jmp adc in (bad) (bad) (bad) (bad) cld insl or adc cmp jne imul xchg rolb mov mov decl pop addr16 mov lock xchg xchg int3 inc jnp rclb pop ds out rcr icebp (bad) (bad) fcomp test (bad) repz dec xchg stos inc int pop sbb (bad) (bad) (bad) (bad) jge jb mov out add pop into test inc jns cmc stos cmp (bad) (bad) (bad) lcall sub jg jle lods test inc and sti push cmpsl insb push jbe inc insl jmp (bad) lcall xchg adc imul sbb sbb (bad) (bad) (bad) mov or mov ja enter in lds fs push jg (bad) (bad) (bad) (bad) out sbb lds cmp pop jmp mov jns or cli xchg (bad) (bad) (bad) incl inc (bad) xchg sbb adc mov orl ffree jl out (bad) (bad) in dec add addl push add out mov daa xlat fcmovnb fwait cld (bad) (bad) call adc xchg int sarb fidiv lods int fmull int outsl pop or pusha ret (bad) call test outsl jmp test jnp adcb mov push jecxz xchg jle (bad) (bad) jmp cmpsb push xchg insb out in cltd out adc xchg pop and cmc sbb push loope js sahf hlt clc (bad) (bad) (bad) incl add mov (bad) cmpsl pop xchg lcall sub fucomip call add aas (bad) negb insl xor loop mov mov fsubrs idiv (bad) (bad) ljmp cld xchg push fidivrl fs sbb adc and aas mov mov (bad) aas lret push jns iret addr16 sub cltd add xchg dec mov outsb das iret js add or (bad) (bad) dec cmp fyl2xp1 and stos push int popa sqrtps int and xchg mov (bad) (bad) (bad) call mov jp sbb movsb mov cmpsl sahf mov pop pop jecxz mov push dec and (bad) ljmp jle dec (bad) (bad) adc jge mov imul xchg and sti cmp jle sub lock rcrb add divb (bad) (bad) incl and incl xchg lock push ficoml movsl ja cmp aad adc (bad) (bad) (bad) lcall push sahf fs mov call adcl fsts add clc scas (bad) lcall std dec rclb mov xchg into add fcoms add ljmp push pop add xor dec inc sti cmp adc cmp gs (bad) (bad) pushl pop xchg push sbb adc and outsb add add jl (bad) lcall (bad) lret or inc loope cltd cmpsb into pop fistpl clc cmc outsb gs push js (bad) (bad) pushl pop adc push ss xchg inc lods inc mov lock xchg add (bad) jmp push ja cltd mov mov add jecxz fs out add aas jl (bad) jg or sahf cli push imul mov cltd pop or mov lahf mov fildll sbb mov in vmovaps addr16 mov mov add cmpsl out mov fsubrs fimul dec push inc call add adc pop xor loope sbb sbb data16 xor (bad) (bad) incl into pop mov xchg out gs bound mov cld push dec and out fbstp aas sbb mov jle sti mov aaa aad sbb js jb jo shrl lcall jmp sbb dec (bad) (bad) (bad) lcall sub ret out ds in cmp xor cmp sbb mov push out sub loopne insl mov jp rcrb and idivl cli sar push mov jecxz imul push push cli fcoml (bad) call (bad) iret loope jmp iret movsl jb bound add cltd sarb dec insb insl pop sbb (bad) mov sti sbb fiadd negl mov xchg inc outsl int ds add jae xchg (bad) (bad) (bad) call adc in in mov fisub ret idiv or push cmpsb or sbbl fldcw (bad) (bad) (bad) (bad) jns addr16 psadbw sub sub shrb mov stos enter cmpsb ljmp sar jp mov add and fnstenv push mov xchg roll icebp (bad) incl push mov push stos or inc lret inc mov and in inc add int3 and in xchg (bad) fnstcw daa outsb inc sbb in pop cmp (bad) (bad) pushl pop inc dec xchg outsb fist xchg mov pop (bad) pusha or lahf lea (bad) out push xchg bnd lods (bad) mov inc cmp movsb insb out inc pusha scas std iret fldcw or pop jne mov cmp pop out fcompl je mov arpl mov pop pop jno notb xchg push cmp push dec test pop in sbb incl push push xor xlat and aas sub cld adc (bad) fcomip (bad) fcmovnu into adc adc test ret mov jb xabort fdivl (bad) (bad) pushl (bad) or adc (bad) pusha repnz push sbb loop mov xor decl sbb xchg dec out fisubrl mov inc inc xchg fiaddl aaa fwait mov (bad) (bad) decl in inc in cmp inc pop leave add inc mov je (bad) call inc pop pop repnz add enter and daa push data16 dec fcmovb bound (bad) (bad) pushl dec scas imul cmpsb fnsave sti add dec popf testb or add (bad) (bad) decl mov sbb addr16 movsl sub adc out mov das in in mov outsl icebp (bad) (bad) push int3 mov xchg pop scas sbb xor cmc rcll push xchg out (bad) (bad) aaa pop into xchg pop mov xchg mov inc (bad) outsl dec in mov test (bad) cwtl repz (bad) (bad) ljmp add bound or xor jo call (bad) (bad) (bad) jmp xchg arpl call mov rol lock inc imul call call push fnstsw push and inc lea mov mov mov (bad) mov cmp mov push movsl fadd fldlg2 mov orl (bad) mov xchg fdivrl loopne pop mov mov popa jnp cmp mov lret stc (bad) (bad) (bad) ljmp xor lods out push bswap adc inc pop xrelease enter cmp mov lods pushf lea mov push lods dec inc (bad) sbb fistpll cmp ret push addr16 jg pop lock fwait mov xchg fld lods stos jns xorl mov (bad) (bad) decb pop (bad) xor dec mov stc xchg jo pop dec in sbb mov cmpsl push (bad) (bad) (bad) (bad) js out nop push bound mov aam lea push clc xchg jno mov lcall ljmp outsb shll insl cmp out inc stos mov ds fnop push (bad) (bad) (bad) pushl imul jnp fisubl jne fdivrs sub in mov fmul (bad) (bad) mov add cmpsl sub jle lcall mov movsl inc mov (bad) cmp pop and scas xor stos push adc int3 iret inc cltd hlt jg insb in sbb mov mov xor cmpsb ret std es sar movsb pop gs int scas lods add jl cld xchg stos in adc mov insb movsb and (bad) in lcall mov cld mov push xlat lcall sub jne adc push cmp pop lock jg dec fcompl push call dec pop jmp (bad) into mov fsubr std (bad) (bad) lcall push outsb cmp cmp adc mov pop mov fst movsl dec pop (bad) call test inc cmp xchg mov mov xor pushf int3 (bad) (bad) (bad) call sarb sub lret add lock cs adc push dec mov adc sub js xchg pusha and out fcos (bad) (bad) push jns leave rcrb bnd nop int3 lahf add iret jae mov addr16 out daa in mov xchg adc pop cmc pop add sahf js cmpl ss jg (bad) mov out lret outsl popf sub sbb mov inc sub and sarl fcompl aad mov loop add fimull out push push sbb mov dec (bad) (bad) fcomip pop sbb xor leave mov insb nop jnp cmpsb and loopne mov js pop cmp idiv decl mov jo mov enter in sub (bad) (bad) (bad) mov mov fisubl dec aas add ret insb inc lock jl sbb (bad) (bad) (bad) lcall xchg insb movl jno or daa movsb mov loopne ss out mov dec push or push pop pop nop outsb mul mov test sahf or movsb (bad) (bad) (bad) call std pop xrelease (bad) sub lods mov pop roll push pushf insb loopew jl clc repnz es clc mov mov int lods dec js or push (bad) (bad) (bad) ljmp loopne pop addr16 fs pop mov stos lock adc mov xor (bad) in jb stos push xorb pop mov xor pop xchg pop fcmovu call add incl adc int sbb (bad) (bad) dec or add cli mov mov (bad) (bad) push sarl add cld push push xor pop repnz xor stos aaa ror sbb out jns leave int3 dec add (bad) (bad) (bad) (bad) cmp loop or cmpl icebp sub jo cmp repz enter (bad) call or pop flds pusha ljmp shll xlat (bad) call sub sarb xor (bad) or fsubl test iret (bad) (bad) (bad) (bad) out daa in shlb pushf adc repz xchg and push jo (bad) ja add sub fadds push xchg adc lret (bad) (bad) ljmp sub movsb jnp mov dec xor mov int3 nop or (bad) (bad) incl jae fiaddl dec lods stos pop stos inc add add adc ret lcall (bad) (bad) jmp push jg (bad) fbstp rcrl ret repnz push insl push xchg jmp cmc mov movsl (bad) (bad) jmp or les scas adc cmp fisubr dec sbb xor or cli cmp sub insl sub and add call loopne mov or lea stos scas jnp jae imul call (bad) mov fs mov sbb xorl cmp sub out and (bad) (bad) lcall les adc stos mov fidiv xchg dec pop (bad) (bad) ljmp mov and les mov push push push push mov xchg or jge inc nop mov cmp int3 jp mov scas clc lcall dec jb or and fisubl sbb pop adc stos notb (bad) (bad) (bad) inc loop sub adc jmp sbb dec (bad) fcoms sbb es xchg pop fistl pop loopne fistpl mov xchg movsb repnz xchg in dec std mov (bad) lcall insb mov adc and clc (bad) in fist push aas xchg sbbl pushl mov jg jmp (bad) inc fnstenv sub mov jb lea (bad) call and pop cmp or cwtl repnz push jno je mov mov cmpsb pop les (bad) pop testb data16 js adc mov sub lods test cmp (bad) (bad) incl push push add ficomp push mov iret inc and in mov (bad) lcall imul shrb repz xlat inc popf fwait (bad) (bad) lcall stos xor insl mov in xchg les aam adc sbb xor movsl and cmp popa inc pop je (bad) jl (bad) and popa enter pop push bound loope ljmp jnp cmp int3 jb pop jbe (bad) xor out adc sbb ljmp fcoms (bad) outsl insl cmc (bad) pop (bad) outsb cmpl js sub (bad) (bad) mov in std popa sub lods in stc gs hlt cmpsl inc imul scas dec push movsl inc (bad) jg sbb xchg push in sub aas insb or cwtl je inc cmp mov mov inc mov fincstp jnp adc lcall push xor add xor das dec les out push sbb fstpt decl (bad) mov sbb jns orl shr (bad) adc (bad) (bad) (bad) (bad) in rcl clc int3 push daa pop mov mov dec push push adc icebp je inc xorl jae jmp xchg jmp cld into add mov into clc add (bad) pop sub (bad) (bad) mov loop daa xchg jle sti imul xchg andb pop and mov xchg cmpsl addl out (bad) stc xchg sbb cmp mov enter mov (bad) lcall hlt add aad fdivrl xchg adc xchg jle adc or mov dec pop insb push cmpsl mov lret push in mov out mov inc sbb ljmp mov or stc sbb dec (bad) (bad) (bad) (bad) inc pop add pop and shl mov push add pop sub sbb les (bad) (bad) call div addl je push mov fstl push xchg add (bad) ljmp cmc xor mov push xor jmp cmpsl and outsl (bad) (bad) decl sbb add sub mov xor inc insl loop (bad) (bad) (bad) call or xchg sub lea jae mov cmp popf xchg cmp adc xchg (bad) push (bad) decl addr16 jmp data16 jmp mov or clc lcall int3 (bad) inc lahf rorl push cmc inc call push add data16 pop mov decb (bad) fisttp loop test mov out adc sbb sbb sbb aas iret cmp movb dec mov movsb xchg ret imul lcall (bad) (bad) call cmp ds jb aad mov outsb and fsubrp cmpsl xchg call add cs js stos xor ror add xor inc push cltd outsb inc sub (bad) (bad) (bad) (bad) cmp or mov lret insl xor sbb jns and jmp clc test pop outsb stc dec in lock test and add pop aaa cmp mov (bad) (bad) mov and ss or push out inc aas (bad) sahf dec xor loop aad adc std enter decl cli out sbb es nop adc xor mov add std sahf das (bad) (bad) jmp push push rcrb in jmp std sub (bad) (bad) ljmp cmp or adc push rorb test adc decl add (bad) out adc (bad) (bad) (bad) incl or cmpsb shrl mov pop pop pop mov repz hlt cmp inc mov mov insb and jne push (bad) push fisttp jge cwtl inc pusha loope call fbstp xor cmp jmp (bad) pop push add jnp fimull (bad) fs push or ljmp inc dec fnstcw repz push mov mov cmp (bad) (bad) fcomip xchg cmp mov jge jp fiadd (bad) sti mov cmp mov callw pushl cmp (bad) jo mov pop lcall cltd xchg clc mov aam (bad) (bad) mov push rcll cltd test je mov pop imul (bad) (bad) (bad) pushl in lock xchg cwtl adc in dec loope es sub xchg push mov xlat loop add (bad) (bad) (bad) inc outsl mull leave sub or cmpsb lods out push sti sub jbe aas sub cmp (bad) inc ljmp cmp movsb fsubrl pop push sub mov or mov mov or test xchg mov in popl dec shlb call cld (bad) (bad) std scas mov cmpsb fldl pop pop cld call xchg pushl cld jmp scas sbb cmc aaa out ds cwtl mov data16 pop lcall je push or mov shlb sub (bad) call out jns adc cli mov dec sbb lahf lock (bad) push sub jbe (bad) sub or adc (bad) popf mov (bad) jmp cmp fildll xchg dec sub inc and pop enter xchg mov lcall in lds cmp arpl leave or ljmp rcrb (bad) decl lock and sbb lock cmp push scas xor notl incl sahf or enter and push (bad) dec fbstp (bad) inc std ljmp ss xchg xchg int jmp push sbb decl cld (bad) dec xchg mov add push push data16 (bad) (bad) sahf and (bad) (bad) push sub lds dec and adc push imul movsb test orl dec inc (bad) (bad) (bad) (bad) mov cmpl andl pop clc mov test shlb (bad) decl jle std cli mov cmp xlat ret mov inc pavgw scas push mov or ret aas mov lods jmp push cmp (bad) (bad) (bad) inc dec xchg sbb les xlat cmp xchg ret mov imul pop push out lret add lcall pop pusha shll adc (bad) (bad) lcall out addb sub popa jmp xchg pop jle jnp scas clc (bad) (bad) std xchg mov lods or sbb fadds lock ret fisubl (bad) jmp lock jo aad fnstenv mov icebp fwait xchg (bad) ljmp jno (bad) fwait sub and bound and in (bad) (bad) (bad) decl lods shlb ja iret adc cs fwait out jns sub jnp ds lock clc (bad) (bad) ljmp adc hlt mov jl xchg jge dec push and or or sbb das lods jmp pop mov ja pop cmp loopne xor jp or jge (bad) (bad) (bad) jg dec dec aaa ja add andb js pop out mov sub mov pushf ror (bad) sub popa inc push scas mov push sbb jg push sahf mov movsb (bad) xadd das (bad) pusha jb mov mov cmp (bad) (bad) jmp in or jne inc mov cmpsl sbb or pushf loope arpl jae mov dec fcmovnu mov (bad) (bad) call cmc mov ficompl pop fistl (bad) push mov mov cs and cmp rcll les jl jbe arpl outsb and js negb push bound fcoms call pop shrl ss jb mov (bad) (bad) (bad) jg push xor pop ds aas nop movsl mov roll cmpsl in stc xchg repnz xor incl dec push aad add pop pusha loopne and xchg daa repnz jae cs jo pushf mov (bad) mov add jno xor outsl sbb xchg mull clc jae jge (bad) (bad) pushl aam xor call fdivrs pushf (bad) shlb stos outsb cltd arpl jmp ljmp nop dec sub sub icebp popf inc clc int3 mov cmp clc (bad) (bad) dec xor adc stc or cmp jle adc xorl das lcall lods std gs ljmp xchg jne inc cmp outsl fcomi sbb imul dec test js in (bad) (bad) (bad) ljmp loopne addr16 js fisttpll cs sbb xor js fidiv (bad) call loopne ds aam faddl stos xchg mov add xchg pop out xchg (bad) (bad) lcall push cwtl push btl mov jle lods push jl jl xchg mov mov cltd dec push inc hlt addr16 inc out test mov mov (bad) dec mov je sub jnp (bad) enter xlat cmc mov ljmp out int mov add adc mov add jnp sbb or push test fisubrl pushl pop insb push fadds scas ds imul in cld aaa hlt fs dec fsubrs push pop repnz pop lock sbb jle imul cli push andl (bad) (bad) (bad) ljmp cmp sarb dec fsubl lods lahf mov xchg push imul xchg (bad) (bad) cmp fwait push or push out (bad) xchg cli mul ficompl jbe sbb (bad) (bad) cmp loope jg pop xchg arpl out sbb in int3 cmp (bad) (bad) (bad) lcall test cmp leave in add insb rorl mov sub (bad) (bad) pushl mov pop scas loopne testb cwtl lods pop punpckhdq nop pop loope sub xor (bad) (bad) (bad) jmp mov pop mov fwait out mov into aaa jg dec mov pop mov mov in and ss fiadd jmp pop jl xor mov pop pop nop dec and sbb mov (bad) (bad) decl notb stos xchg data16 ret mov adc add hlt mov call ss push repnz xchg mov lret movl (bad) jns jmp aas lret aas or rorb xchg bound orl or jbe das cli pushl clc cmp jp push mov (bad) je (bad) imul adc (bad) (bad) decl pop clc lock push movsb lea out cmp outsl sub cmp icebp loop ljmp and inc xchg (bad) call and and outsl and cmpsl inc pop pop es pop inc xor incb ret cmp mov pop push in jbe nop in jmp scas lock mov (bad) (bad) mov mov cmp fs jne iret dec pop push clc idivb std (bad) call in arpl push sahf outsb dec xchg mov (bad) pop add and push mov outsl dec pmuludq lahf test xchg ljmp adc test jbe jl addl mov (bad) jg and push out aad sub repnz dec int mov (bad) (bad) lcall push je pop cwtl add rsm leave lret sbb data16 inc mov (bad) (bad) (bad) (bad) ljmp jno jp adc subl sbb cld cmp jnp sub (bad) push push in xor (bad) (bad) pushl pop inc rcrl bswap rol jmp int fdivrl aas inc sbb jecxz pusha mov aad (bad) (bad) cmp xchg dec mov mov jns sar inc cwtl mov add (bad) jg inc div dec add lret pop (bad) mov shl cmpsb loope ret fsubl xor add (bad) (bad) fsubs cltd push test iret cmc jle out adc sbb std (bad) (bad) mov add je dec mov mov or push xchg nop xchg (bad) pushl out dec sub xchg lret push dec int3 mov inc sarb loop out cmp (bad) (bad) (bad) mov mov ret imul (bad) mov jno icebp inc loop out push faddp sahf scas jg inc int3 std test push jmp lds (bad) (bad) (bad) jmp mov out mov cld cwtl jns lret pop in pop gs push les jo das cmp std fstpt xchg jp nop mov jmp dec xor fisubrl (bad) lret jnp ret or xchg mov xchg mov mov pusha ljmp sar into xchg sbb pop xor jb scas pop mov mov push in xor (bad) (bad) lcall jmp mov in movsb xchg ljmp pop les cwtl rol pop xchg adc inc pop mov dec inc xchg insl cmpsb sub inc fidivrl daa sbb push or fdivrl (bad) incl mov (bad) and lods test add push lds (bad) loop jae mov and lock loopne inc sub inc ret dec and (bad) orl js sub add dec in js xor xchg cltd xchg adcl cld cltd sub mov clc adc insl addr16 add shrb cld (bad) (bad) (bad) lcall daa out jl cltd cmpsl and scas ss mov jo pop dec lock mov mov jno (bad) (bad) (bad) call cmp fsubl out rcl jmp sub fistpll int adc (bad) (bad) lcall xchg sub mov enter icebp push jmp scas inc addr16 (bad) (bad) mov sbb xor cld adc mov sub push clc adc jmp (bad) (bad) (bad) lcall mov aad dec daa mov pop xchg repnz popa mov ss (bad) (bad) incl sub inc mov dec push stos fcompl mov jmp push pop (bad) (bad) mov bound mov movl cs (bad) (bad) pushl ud1 cmp adc jg lret ss add lds push mov jne xor andl enter jnp xchg (bad) push inc lock rcl xor into add cltd mov or (bad) ljmp (bad) (bad) icebp fstpt pop enter out add dec add mov (bad) pushl adc xchg pop stos stos xor xor jp lds lods sti mov sbb xchg (bad) and mov lcall std push mov loopne jle pop lock push jp in inc (bad) jg (bad) jp add stos nop test daa xor movsl jmp add xor sbb ffree inc adc mov jne outsb (bad) (bad) (bad) mov scas out sti inc nop movsl sub xchg jae add cmpsb jge mov lret mov aam mov add mov push mov sahf imul (bad) call rol cwtl xor and or or (bad) jo (bad) lcall cmc aam and fcoms fsubr aas out pop inc fistp shll (bad) (bad) decl pushf movsb adc jg outsl ds xchg sbb ret loopne pop in enter mov (bad) cmp xlat adc data16 cmp (bad) jne les fcoml (bad) (bad) (bad) jmp rorl inc mov seto mov cwtl push call cmp inc ret stos (bad) ds sub and sub aas into int3 mov rol jbe lcall fisubrl dec mov inc dec jns jg inc mov je scas or (bad) (bad) pushl xor sub sbbl mov out mov dec inc and cld xor aad pop and insl cmp inc push xchg ds pop lock popa cld (bad) (bad) jnp or pusha pop sbb clc mov or xchg cmp mov mov jnp jns dec lcall (bad) incl push movsl mov test dec xor xor es jecxz imul cltd sbb cmp mov scas mov hlt xor jnp mov lcall sub lds out lcall fs pop sti lock paddd xchg loopne,pn mov loope lods push jmp (bad) (bad) jmp xchg fistpl sysret movb (bad) dec or es push jecxz cmpsb and (bad) (bad) lcall push jo cmp mov push mov or jne int sub xor (bad) (bad) (bad) (bad) jg popa test xchg imulb daa jne outsb (bad) outsl outsb cltd xchg pop inc xchg (bad) sub jp dec lds dec ss jnp (bad) (bad) mov sbb les cmp loope push mov add fldt lds frstor push loope stos xor data16 call lret jbe jne pusha nop add push mov addr16 repz add (bad) (bad) std mull xor push pop hlt mov je push mov in ds ds (bad) mov std mov aas hlt fdivrl cmp xchg or imul stc fdivrs sub repz jo cmp dec movsl imul dec popf push dec lcall push ljmp rcll loop imulb cmp mov fwait (bad) (bad) (bad) ljmp cli jmp stos ds (bad) and jb scas adc daa fisubrl out push dec (bad) (bad) (bad) incl adc xor stc mov arpl int jge xchg mov add (bad) hlt mov (bad) mov jbe int and enter aad jge into (bad) movsb and (bad) lcall xor cltd and xor test sbb or movsl fild pop (bad) (bad) (bad) ljmp push popf inc jno inc in shrl sbb rcr sbb ljmp ret (bad) (bad) jmp and ja or fidivrl cld dec mov (bad) (bad) jmp xchg jge call dec fisttp mov cwtl pop jge arpl js (bad) push aaa xrelease call out (bad) mov jl and test test mov add xchg (bad) (bad) call mov inc loopne mov pop ljmp push inc jmp (bad) ss int3 ss and cmp sub (bad) or mov das fisttp mov push clc (bad) call jae add sahf sub jge es mov fbld decl icebp pusha in imul les jne push pop xchg or fidivrl (bad) decl xor inc ret rclb pop mov loop into jnp iret fwait lea stos (bad) (bad) (bad) call dec mov adcb xlat or fmuls xchg roll push and mov in (bad) (bad) (bad) incl jge test rorl jns mov jl test scas scas jmp cmp imul sbb (bad) (bad) jmp and jbe lret sub push insl mov lock icebp or pop jecxz notb and (bad) out pop icebp jbe mov in bound pop mov dec fldcw insl gs (bad) (bad) (bad) cmp cs lret nop mov (bad) mov xchg fisttpll jmp stos mov pop xchg out loop imul mov inc dec int aaa xor xchg (bad) rolb (bad) (bad) jmp test mov cmp add jmp call xorl (bad) (bad) ljmp movsl sbb mul jns push xchg movsb rorl repz gs mov (bad) (bad) (bad) decl mov iret sti jge push and cmpsl outsl cmp pusha dec mov sbb fwait out add pop icebp lcall js xor dec repnz cmp mov pop add sarl (bad) (bad) (bad) fist in inc xchg sbb data16 pop pop nop (bad) inc dec stos mov sbb sub js mov (bad) fcomip pushl pushf movsl dec enter mov mov int cwtl or mov (bad) inc movsb sbb fdiv jmp mov mov sbb inc loopne dec ds add (bad) (bad) inc jno xchg inc cmp sahf mov cmp mov lret dec jnp in jae (bad) jmp fdivp lahf sarl or xor inc jb cs iret popf push rorl out lock lea stos jg lret (bad) jg xchg fsubrl daa dec and cmpsb fcomi inc mov dec cmpsb pop call ret push inc popf clc (bad) (bad) (bad) mov xchg fild test push cld cli mov out push push (bad) (bad) incl cmc inc idivb adc xchg outsb ret ljmp decl mov mov push call sbb test or iret sbb add (bad) (bad) (bad) out mov std push pop inc or jg ret ffree mov es imul test (bad) ljmp rorl and ret cmc (bad) outsb (bad) pushf pop out add daa push lcall out call test sub mov mov mov sbb add cmp mov dec (bad) push das dec popa adc dec mov movsl outsb cmp (bad) lcall rcll movsl xchg mov ss mov cli das in mov cmp inc dec std les adc call outsb jmp (bad) aaa push es xor arpl into cmp lods loope cwtl test aam push decl aad xchg add hlt fimull sub loopne xor aas test stos (bad) ljmp lret test dec enter adc dec sub out (bad) (bad) dec push pop cmp sbb push ds jb xchg mov and fildl (bad) (bad) (bad) stc ret jb fstpl mov subl inc pop push lods sub mov jb adc hlt jbe (bad) call sbb dec inc (bad) punpckhwd js push (bad) (bad) inc inc push jno out cmp (bad) incl inc stc dec das push (bad) dec mov inc cmc jo mov leave push loope repnz and mov lods sub pop sub adc rcrl stos cmp stos adc ret mov (bad) lea mov (bad) (bad) (bad) jle push xlat int3 int jl insb mov push lods pop inc in out mov das mov push pop fwait add imul jmp pop cmp pop aad out rcll jo ss das fdivs int3 fist cli sub int3 aas (bad) (bad) (bad) call sub (bad) mov inc add jnp cltd push test lods mov stos in adc xchg (bad) pushl insb es dec jge sbb inc adc andb xchg (bad) mov push pop cli cmp mov out mov das jo xchg and fidivr icebp or sub sbb adc pop dec dec sbb cmp std lcall test lcall stos mov push movsl push sahf push int3 outsb dec push sbb pusha inc in data16 loopne inc adc push (bad) (bad) (bad) dec out add mov jg add jl pop adc xchg adc jp pop (bad) (bad) (bad) decl cs insb out (bad) loopne fnstcw pop test mov (bad) (bad) rclb xchg frstor (bad) (bad) fcomip ds xchg or dec xchg loop fxch inc jmp in mov (bad) (bad) (bad) jmp add mov repz adc cmp movsl inc call rolb cmc subl cmp adcl dec fs movsb mov dec neg and jg adcl dec pop mov push (bad) ljmp (bad) mov in out jbe lock or dec (bad) and cmp (bad) (bad) (bad) push and jmp push or mov inc mov dec rcll movsl sub (bad) (bad) (bad) (bad) mov or dec std imul jo dec mov cmp inc sub jle int repz (bad) icebp (bad) (bad) (bad) jmp lea data16 lcall lret les bound cwtl adc or jo incl incl cmp (bad) movsb sbb ret lcall int scas rcr (bad) (bad) (bad) decl data16 push mov xchg push dec pushf nop mov insl pop je loop lods ds mov call ss xor test scas into leave xor push or push in xor (bad) (bad) call push pop mov cwtl aaa or cli inc mov orl cmp (bad) push movsb jecxz shlb daa sub rolb mov jns and js or (bad) sub dec cmp popf add add push ljmp (bad) scas aad cld (bad) (bad) lcall (bad) inc mov pusha cld fnop cs dec adc pop (bad) jno (bad) (bad) incl in mov cmp jg lods addr16 gs ret xchg push xchg sar (bad) jmp lods nop jnp fs mov repnz xchg (bad) (bad) (bad) jg cli ret and mov (bad) std sbb mov add push pushl jmp (bad) (bad) (bad) inc in jo aas inc aas arpl xor mov xchg sbb cwtl pop cmp xchg stos popa jl (bad) mov inc daa or bnd icebp testl jge or in (bad) idiv (bad) (bad) pushl and scas xchg lea ret loopne push mov sub sbbl adcl (bad) (bad) (bad) jp insl stos loopne mov bound fiaddl push jo cmpsb or and (bad) (bad) dec outsb out rclb sub sbb mov movaps inc xor lret jbe sbb (bad) ljmp inc popf pusha jle mov iret mov mov adc xor sbb xchg xor (bad) (bad) (bad) (bad) aas xor mov and cmp cmc loope and and (bad) (bad) (bad) call rep cmc ret inc jl sysexit arpl push cli mov ss cmpsb pop aad dec jmp (bad) xor jmp movsl lret or jge (bad) (bad) fstpt je ficomp mov mov andl pop add push (bad) (bad) lcall (bad) ds mov jecxz push inc in mov jbe dec stos aad scas dec mov pop mov jmp lcall jae adc push xchg (bad) (bad) (bad) (bad) ljmp loopne mov shlb mov test or push jno (bad) (bad) (bad) pushl gs xor sub inc adc out push (bad) pop push mov sbb inc inc xor (bad) (bad) ljmp sar dec int test xor push and or daa adc dec mov mov roll (bad) add push mov int fsts loope fs (bad) (bad) lcall cli add lea pop or gs out push add inc pop mov dec xchg loop xchg (bad) mov popa sub (bad) pushl out adc sub andl add mov xchg sub in imul and icebp push in movsl cmpsb push les dec mov inc xchg aad jb repz xor mov lock pop fcomip andb (bad) out mov imul jae and xchg or and mov add (bad) (bad) (bad) (bad) cmp or stc int xor jnp shlb and lcall stos repnz (bad) cmp call add pushf sbb sar add js into inc (bad) (bad) (bad) incl inc mov inc pusha (bad) fildll outsb sbb arpl bswap dec push mov push cmp sahf sar (bad) (bad) lcall jl insb or cmp aaa cmp sub lods gs jge mul shll or call insl das mov mov and mov scas loopne incl inc sbb test mov adc decl (bad) (bad) (bad) call dec sub pop mov xor cmpsb pop add out mov mov push (bad) (bad) call push test and mov daa scas sub stc je push or movsb sar (bad) lcall mov nop xlat push push cwtl stos mov pop push add mov cmp lret cwtl inc jge ljmp popf bound repnz das mov pop aaa fstpl aad dec (bad) fbstp outsl (bad) (bad) call mov popl in xchg mov scas fbstp push sahf sti test (bad) (bad) incl sbb adc cmpsl add shr cmp sbb dec mov and (bad) jmp adc ljmp lods pushf dec push negb aam cmp mov mov (bad) call or stos mov ret jno aas lods es inc test je xlat (bad) (bad) (bad) push jb stos (bad) or enter cmpsb mov xchg and lea les mov ljmp jmp into ret mov adcl pop pop inc mov jmp ret repnz inc (bad) jnp iret mov aaa adc nop lods fdivrp (bad) (bad) jmp pusha push mov add das (bad) pop insl pop pop int3 pushf jg and mov dec stos (bad) (bad) (bad) dec gs cmp mov lahf inc shrb cmpsl adcl ret sub lret (bad) (bad) dec nop mov xchg add clc or adc scas idivl hlt movsl inc sar pushl ds and rcl fsub push pop fsubs int3 mov (bad) (bad) mov jb aas mov jno hlt adc pop shrb test add (bad) (bad) (bad) aas dec dec bound push outsl xchg push mov (bad) xor sub shll pop cmp xlat jg (bad) lcall inc lahf cmp (bad) xor and sbb aas xchg leave loope leave jmp clc (bad) (bad) (bad) fistl inc mov fs cmp in leave push add enter cmpsl cmc xchg (bad) (bad) call mov sbb es push scas inc (bad) mov pop fisttpll jle jne clc pcmpeqd lcall (bad) out push xchg repnz pop in sub dec out lods pop mov scas (bad) fcomip (bad) jg clc popl cltd adc sub mov pop clc sar mov jg idivb sub mov fwait adc (bad) mov pop std xchg fwait stc in int3 (bad) test pop mov (bad) (bad) (bad) (bad) (bad) inc ret mov inc add adc jmp pop push mov lcall sar decl addr16 rol (bad) adc xchg jb fs add (bad) (bad) ljmp out cwtl jg je xor mov cli out mov daa pop lret mov add orb push add xor scas rcll (bad) call mov jg mov jb pop es movsb sub bound cwtl inc loope jmp dec jne xor loope aad pop mov push out (bad) (bad) lcall pushf ljmp loope jmp xor pop int3 in mov (bad) (bad) (bad) jmp add push or sbb mov xor lods outsl push lcall aaa lods xor ljmp jne enter in jne or sti xor mov shll (bad) (bad) jnp cmp (bad) stc dec fiadd mov insb mov inc sti aaa enter das xor rorb push jg jbe and gs (bad) lcall sub adc pop hlt scas loope fs pop or mov repnz addr16 push jmp test mov test repz push dec mov and fcomip call in lcall lods mov test cmp sbb in ds call pop dec sbb xor and mov jmp ljmp data16 sarl adc addr16 and sahf mov incl call mov les add scas push add push divl lods mov cmc jne add and dec (bad) (bad) (bad) mov jge inc or js daa push xor mov mov jle (bad) (bad) (bad) inc jecxz inc mov sub and xchg scas jecxz inc adc pop rcrb mov or pushl popa sub dec inc fwait xchg cli jg (bad) (bad) inc lods cmp sahf sub lea add mov jle loop mov mov cld dec pusha add lret pop pop fmuls sar (bad) incl xor add out out dec inc (bad) sbb aad test push jbe xor and into lods lahf lret sub fdivr (bad) (bad) ljmp lock adc ja loopne pcmpgtb inc shrb pop xchg inc push sbb dec cmp (bad) ljmp adc test out fimul aad or adc dec or pop or (bad) cmp std (bad) (bad) jmp push xchg shll (bad) out fstps in and jecxz (bad) (bad) call lret xchg cmp mov fsubr push inc xor test sbb mov ds dec add push xor dec xchg pop cltd out test out fdivl ud1 sub (bad) cmp xchg movsl popf adc movsb xor leave sub rcrb mov adc pop lock dec imul movsl scas add nop in jnp fstpl (bad) (bad) incl stos inc (bad) and dec mov or mov lret movsb or int3 cltd idiv (bad) (bad) (bad) call lods divl or and bound mov (bad) mov jo inc int3 fcomps fs (bad) (bad) pushl in jae cmp mov cmp xor mov addr16 (bad) lods (bad) (bad) incl push inc dec inc cmp test sub mov ljmp push pop cmp mov and inc cld push sub (bad) jg enter jns inc ficomp lock gs xchg cmp (bad) incl lea inc jle mov out mov jno sbb (bad) call hlt mov out jns shl js push inc push movsl or mov (bad) (bad) std cmc inc insl mov lret test aas lahf cmpl sub jae call xchg and xlat and pushf int dec ss js insl jae inc lea outsl adc int (bad) (bad) (bad) jmp lahf push repnz jno and fimull adc sti fsubrs or inc push mov and cmpsl cmp cmp add add fst shrb mov xor adc ds (bad) (bad) (bad) jmp (bad) cmc inc cmp fadds mov mov push cwtl push test rcl (bad) (bad) (bad) inc lcall lea dec sbb xor cs insl rcr mov ljmp (bad) or jle inc movsb js lcall or repnz int je add (bad) (bad) (bad) call ret (bad) sbb push and pop pop and fcmovb test loopne (bad) mov and rcll inc out mov (bad) mov sbb dec orl push (bad) lcall (bad) sti mov movsb mov xchg cltd (bad) push gs movsl fcomp jb mov (bad) cmp jb jp stos jg xor cmp lods push jne (bad) loopne jge scas mov (bad) (bad) (bad) lcall popf sub fs or mov jns dec mov mov (bad) mov cmp out js xchg ret cmpsb mov (bad) incl es pop add test mulb adc arpl (bad) mov jg sbb xor lcall jo es xor (bad) (bad) call dec sbb pop and pop mov push cmc cli fstl and xor fcomip xor xchg (bad) (bad) (bad) (bad) mov aad push xchg test mov int add cmc data16 jno sahf daa sahf stc (bad) (bad) (bad) call out pushf cld xorb mov xchg inc xchg add xor fsubrl adc stc or inc fldenv enter pop out xor xor add fisttpl add je shll dec loop (bad) (bad) (bad) cmp pop pop xor mov out jecxz (bad) mov inc into jb pop bound loopne (bad) fisubl int jo outsb lcall mov jb jecxz (bad) (bad) push adc ljmp push xchg (bad) (bad) cmpsb sbb push jns test mov inc mov out ds mov mov cmp out add fcmovb and sarb (bad) xor (bad) (bad) ljmp mov js cmp lods push or cmp sti jg mov xchg (bad) jg shlb cmpb mov inc inc out ss and mov repnz pushl out movsl xchg nop jae inc roll push int3 aam sub mov (bad) (bad) incl jb push fdivl fs das ja (bad) adcb push inc movzwl pop lods xchg and and out or cmpsb push push ds (bad) (bad) jg pop pop push jmp mov aam incb (bad) int3 imul inc out dec sub cmp (bad) (bad) pushl test lods movsl jns sub ret inc test push out dec mov xor jns (bad) (bad) (bad) decl push adc mov out das cli daa movsb adc rcrl sub lea (bad) call pop add add add sub mov xchg jl insl or in (bad) (bad) (bad) jmp add dec bt loop sbbl lahf bound lret movsb mov mov aaa cld (bad) call ret jns sbb add movsl pop push jo or mov or call std sbbb pusha lret push push flds push jo fstpt cmpsb jns js (bad) (bad) pushl mov sbb fcomps adc xor rcrl jo xchg add mov cmp xor enter fs mov call mov pop shrl call jns sbb mov inc push pop cld loop ds xor push adc mov ficompl roll les xchg cmpsb lcall sbb std add dec jle sti (bad) (bad) call sahf mov adc or lcall cvttps2pi cld imul (bad) jg mov inc addr16 and cmp inc jl and sub (bad) daa mov adc cld (bad) je lret mov xchg pop mov loop and leave inc cmpb sbb jnp push aad add loop dec fisubr enter dec add (bad) (bad) pushl xor iret test xchg addr16 cltd addb sub mov shll lcall call pop add sbb lahf ss sbb lret xlat mov jle jnp pop (bad) cltd jae add pop fcmovbe loope mov and push sbb (bad) (bad) ljmp lret aam sbb or dec scas or test push lahf push into test xor cmp (bad) lcall xchg push cmp xlat lock ss mov ficom mov mov lcall mov je add dec inc fs (bad) (bad) (bad) jmp fxam jb movsb dec cmp pop imul in mov mov scas dec and xor ljmp and lahf js aaa rcll in and jns mov jns (bad) (bad) push cmp call and mov xor jmp popa daa or (bad) (bad) ljmp xlat addr16 xchg cmp roll clc fstpt rcrl xchg jne mov (bad) lcall pop sub push je xchg and out loop cmc inc (bad) (bad) (bad) incl out sbb (bad) cmc dec cmpsb icebp lcall pop stos imul aad test ljmp push add sbb movsb (bad) loope and lret and (bad) (bad) (bad) pushl pop inc mov stos in gs imul mull int test or lret (bad) (bad) (bad) push cmp dec push int3 cmp inc ror lcall mov ja stos loope ds jmp add fwait test and into pop inc xor fisttpll fs aas dec cltd dec sahf jecxz cmc outsl sub jl aad mov add jg push (bad) icebp stc sbb mov ljmp aam scas push js inc icebp dec std aam cli outsb pop cmp aam into ja pusha (bad) (bad) mov lcall insb mov cli imul inc out enter bound mov popf add jno dec cmc ljmp (bad) (bad) fstps out in std pop jae mov cld clc (bad) cli enter and mov fcmovnbe (bad) jmp xor int ror jo push sti or cmpl out cmp test (bad) (bad) lcall test or call mov arpl cli test in lcall (bad) (bad) push jo pop rolb (bad) adc pushf push mov (bad) loopne cld push push dec mov push leave inc cmp shll (bad) (bad) (bad) ljmp jnp dec sbb test leave cmovg jg mov cmp arpl xchg fidivrl mov ljmp decb push or data16 mov insb repnz (bad) (bad) lcall inc sub int lahf cmp insl repnz push scas adc sbb push xchg sbb xor (bad) (bad) jmp sub das jle adc ret inc pop mov inc loope ret leave adc xor adc movsl test (bad) (bad) (bad) out xchg nop mov jecxz or sahf shlb ljmp push enter jle scas ljmp cli ss stc std (bad) pop mov scas (bad) (bad) fbld out dec and or push sbb cmp lea jecxz (bad) (bad) (bad) pushl bound pop (bad) pop dec inc out dec outsl (bad) push in xchg hlt push push in xlat mov xchg (bad) (bad) (bad) ljmp cmp sub cmovl ret ret sbb loope das or (bad) notb ds sub mov hlt cli repnz int3 xlat jno xchg cmp movsl jns (bad) fistpll mov std sub (bad) mov adc cmp ss mov ret pusha mov std test dec faddp lahf pop xor lock popf xchg pushf cltd bound cmc dec (bad) (bad) (bad) (bad) fistpll jb sub add mov jns,pn add jo mov pop (bad) out out cli push adc cmp imul inc and repnz das insl (bad) aam cmpsb mov hlt imulb shrb int or sbb dec or (bad) (bad) (bad) call mov push adc cmp out inc and rcrb dec push (bad) cmp test (bad) (bad) call pop pop (bad) pushf movsl and inc fistl icebp pop sahf ret cmp cli popa xchg push mov (bad) mov push addr16 adc mov mov fistl cli std lahf cmpsb clc cmp mov (bad) jg in mov sbb sbb adc xlat push loop (bad) (bad) jmp inc lock testb inc dec das xchg popa jnp jp pop and (bad) mov cmc mov (bad) pop or mov ret (bad) (bad) (bad) out fsubrs sti mov mov das cltd ljmp sbb (bad) (bad) (bad) push push or xchg (bad) xchg push adc (bad) cld or nop loope hlt loope call xlat mov icebp xor je mov enter ja inc inc xchg rorb clc (bad) call movl test inc dec sub ret and rcll test inc inc pop in push mov inc repnz scas cmpsb and es faddl bound push lods (bad) (bad) call mov cmp sbbl mov mov sub lcall inc adc pop mov pushf pushf add pop mov sub dec add add (bad) (bad) incl mov subl outsl lcall sub (bad) (bad) (bad) ljmp int3 inc sarb push loopne aad pop (bad) loope pop push cld scas sub sbb imul xor cmp dec mov call mov jg dec xor call stos aad out push adc insl mov mov cmp (bad) imul (bad) push cltd add dec int aam insb int3 fisubrl xchg add inc repnz mov (bad) (bad) (bad) pushl (bad) mov jns adc pop fidivrl jne jnp lret push or sbb sub sub adc cmp sbb push hlt rcl cmp (bad) (bad) call dec jl imull sar xchg cs mov leave imul cmpsl adc jmp add dec imul xchg jno push sahf (bad) lock pop jecxz push (bad) (bad) (bad) lcall hlt sub push movsl sbb push arpl dec pop fs jmp mov andl dec roll add cwtl scas xor pop add rorb (bad) (bad) decl insb xchg popa fnsave sar outsl into mov mov into inc data16 jg nop mov adc lahf push push (bad) (bad) (bad) decl std cmp jnp push daa pop jb fldenv loopne mov lds mov or inc test into xor dec cld es mov xor lret mov cmp xchg fwait (bad) (bad) (bad) jmp dec (bad) cmp inc lods negl mov ret add mov mov sub (bad) pushl cld (bad) insl pop fisub arpl and mov mov (bad) lcall dec int sub xchg ja xor (bad) dec lods rol dec xor sbb repz lret (bad) (bad) (bad) (bad) cmp jae gs sub test mov jmp push pop loopne (bad) xor (bad) (bad) jmp fsubrs cmp in inc ss (bad) rep fnstcw jg (bad) fstl push sbb subl xor adc and (bad) (bad) (bad) (bad) out shl es sbb int3 loopne mov in push xor xor xor adc test pop mov sahf pop cmp xchg pop popa mov in mov add dec lcall or adc pop fnstenv inc jecxz repz fildl mov fimull (bad) cmp nop xchg outsb xor inc nop dec jae add xchg inc clc js (bad) (bad) ljmp in insb test push jg xor or movsl mov ljmp jmp dec sbb lods xchg mov sub mov fcoms (bad) (bad) (bad) call add enter lea jae shld testb pushf push cmp add ljmp stos jle dec pop dec push cmp and call sub ljmp adc aaa test lock jg xchg imull cmc sbb mov fs int3 jge out cli decl push ret lock adc dec fimul scas leave in jo (bad) (bad) (bad) lcall arpl and mov rol xchg sbb movsb mov outsb xchg sub mov mov (bad) incl aad sbb push lea sub es or bound dec popf and push adc jg (bad) (bad) incl out mov subl adc fwait (bad) daa xlat fnstsw jmp xchg (bad) (bad) call dec lods pushf jmp iret dec loop insl icebp test dec pop cmpsb out insb sbb lcall mov call lahf movsb leave xor (bad) pushf inc (bad) jecxz mov cmp cmc cwtl push imul mov (bad) (bad) ljmp push ret mov pop adcb mov cmp fisttp jno or pop hlt (bad) (bad) inc popa int3 rcrl mov xchg inc add jno or repnz je add jmp sub mov dec inc mov insb xor mov mov jl jle sbb cmpsl push lods in lock mov push sbb (bad) (bad) pushl test scas scas inc div addr16 popa xor out std nop push (bad) mov xchg lea pop (bad) xor push data16 sub js mov or xchg jmp xor (bad) jmp dec std sub sub in push mov daa and in xchg fs fsubp int3 fmuls pop cmp push xchg insl ss inc jl mov lea in mov (bad) (bad) lcall movsl push test popf xchg mov mov xor scas adc sub dec sahf insb adc cmp (bad) (bad) fidiv xor sbb cmpsb jp pushf stc adc cmp push and mov push arpl or dec jnp adc leave out sub cmc add and dec lahf sbb (bad) mov outsb or sahf push rcll enter pop mov loopne dec lods push and (bad) (bad) incl dec imul push in fcoml inc push (bad) sub fstpl in pop pop jmp scas (bad) (bad) (bad) call shr jne pop xor or data16 sti call bound fcoml dec jp (bad) fcomip adc ljmp call aad stos mov or (bad) (bad) (bad) incl out push sub popa pop sub xchg repnz pusha pop leave (bad) (bad) xchg ljmp push add xor sub push idivl pop outsb (bad) lock (bad) (bad) mov and or (bad) push xchg sbb inc sub pop and push int3 jg das pop rorb lea jno stc mov mov popf loop fdivrp (bad) (bad) ljmp xchg les mov cmp mov xor iret xor sbb jae dec (bad) (bad) (bad) ljmp mov clc lods mov jo mov das xor popf push int3 test nop cmp (bad) decl inc xchg or stc icebp xchg in pop xchg adc cltd shrl scas cli inc faddp inc cmp popa imul and sahf mov std add loopne jg aaa push and cmp (bad) (bad) mov lods jns adc (bad) (bad) (bad) incl movsl xor cmp inc push mov es push sub add (bad) (bad) fcomip mov push add and mov rolb or jp xor and jns xor or mov push das (bad) (bad) scas popf mov repz inc jns scas pop (bad) (bad) (bad) (bad) mov or xchg or cmpsl jb fsubrs add movsb push mov incl leave cs cld aas addl push mov pop call (bad) pushl inc xor out jmp add dec mov (bad) and mov (bad) (bad) lcall push and or cmpsl cmp pop pop cmpsb push stos inc sbb scas pop lock incl xchg repz fs ret or adc pop xlat push cmp pushl mov adc fdivs mov cmp and adc (bad) lock cltd cwtl enter les pop dec rol test call sahf dec sbb xchg into (bad) shll mulb jl movsb ja call (bad) (bad) stc pop jb ljmp cmovp pop outsb rclb sub scas cmp fnstsw (bad) lcall jnp xor (bad) cmc xchg mov push stc xor out or pop jge (bad) (bad) (bad) ljmp mov shrb jl imull arpl outsb jb dec jb jno cmp pusha out and xlat jg (bad) inc ss sbb pop inc jnp in and stc cmp push imul (bad) incl ret cmp push push inc arpl xchg inc into cld fdivl mov loope ficompl (bad) jmp cmp out or xlat dec jb dec mov cmp adc (bad) testl mov (bad) lcall xchg sub mov mov xchg add repnz (bad) lcall outsb cld rcll pop jecxz and mov lahf scas cmp (bad) push test lret push lcall fstl push (bad) and mov mov mov inc (bad) jbe int push enter sub (bad) (bad) call imul test inc sbb (bad) sub inc inc ljmp xor and mov repnz push xchg push mov std ljmp lret adc call dec daa push aaa cmp push jo jbe loope mov (bad) incl and pop pop sbbb repz (bad) (bad) lcall cmpsb fxch mov jno mov mov cld dec add or mov mov insl or (bad) (bad) call fsubrs stc pop jns (bad) push insb push mov enter pop es fsubr sub arpl shrl (bad) (bad) (bad) decl xor dec jno inc fwait xchg add pop sti test mov pop (bad) (bad) jmp and mov into sbb sub es sbb loope mov and (bad) (bad) decl mov and jle stos scas loopne and movsl push mov mov push outsl mov int (bad) (bad) jmp sbb pop or addr16 push push mov xchg arpl in cwtl sbb loop cmp mov sbb or sub std xchg mov je cli (bad) in (bad) incl xchg imulb dec mov xchg les cmp mov aas or (bad) pop mov sbb sbb mov test test call int3 (bad) (bad) (bad) decl mov jno,pt in outsl fsubp push xor mov (bad) xchg xchg and movsb cld (bad) (bad) incl xor fstpl mov sti shlb int3 movsl scas out mov (bad) ss xchg mov cmpsb pop ret jb pop cmp out mov mov stos wrmsr or xor dec add jbe enter sbb (bad) (bad) (bad) cli jb and or mov push shr insl mov dec (bad) call add mov sbb inc out call decl inc fnsave ds fadd fchs out pop adc sar (bad) (bad) dec mov popa test in cli xor sbb into data16 mov pop divl test (bad) jg cmpsb jo mov mov mov enter (bad) (bad) pushl repnz pop dec outsb sub push mov dec cs pop sahf add xchg je out bnd loopne jmp (bad) aam dec adc lods cmp pop xor lods pop bound (bad) (bad) (bad) (bad) fsts aad cwtl out push and mov xor pop mov sub outsb or (bad) (bad) call and push bound jbe addl shr mov add add (bad) (bad) call or push ss sbb xchg fwait int adc mov (bad) jo fs pop not ljmp mov push cwtl cltd jl rclb pop xor xor lods adc push mov (bad) mov (bad) (bad) (bad) jmp loop push jl jae xchg push xor int3 arpl or and cmp (bad) (bad) call les cli (bad) xor (bad) jl scas nop cmp pop scas (bad) (bad) (bad) (bad) cmp add pop in dec push int3 aam mov clc fmulp mov mov repnz (bad) (bad) (bad) (bad) jns ja in scas jb adc jle loope arpl fsts std test or pop or (bad) (bad) dec mov inc adc mov xchg jae mov nop hlt pop pop ljmp jb jg push xchg sar vpsubsw xchg repz std pop pop loope mov pop xor (bad) (bad) (bad) jg pop inc mov das mov out sbb dec fldl (bad) (bad) outsl sbb lods xor iret aaa cld aaa cld or mov cmp pop pusha push adc push jp (bad) (bad) (bad) lcall dec pusha jnp inc (bad) and icebp daa addr16 std cmp mov outsl jnp inc jmp (bad) (bad) (bad) call in test cmpsb (bad) and xchg cmpsb xor pushf ds hlt or pop (bad) (bad) (bad) jmp xchg inc mov dec cmp scas je iret jne cmc scas lods and js lcall decl cmc inc dec mov push mov cmp sbb sbb std dec (bad) cli mull or lds cmc fadd inc mov mov rolb (bad) (bad) (bad) fsub rcr rcrb adc adc add rolb push cwtl out push pop sar aas ljmp enter jl int3 pop (bad) mov xchg push mov xchg lock repz push xor mov shll in or cli ret push test xchg and testl dec aaa mov pushl mov arpl and sbb xchg ss jl mov outsl data16 (bad) leave adc mov das in pop pop div imul (bad) cmpsl pop outsb add punpcklwd sub and icebp xor (bad) (bad) (bad) jg lods mov cltd popf std lds lahf push fidiv lahf fidivrl ljmp (bad) or inc hlt sbb cmp xor cmp cltd inc cs (bad) (bad) jmp mov call adc fwait out sub xchg popa mov (bad) cmp or pop call insb or mov or popf xchg jmp (bad) (bad) lcall stos (bad) fmulp pop cmp insb aad inc jecxz das xor gs xchg scas lret (bad) (bad) (bad) (bad) mov ss xchg cmpsb add inc (bad) xlat mov mov cmc fdivp pop xchg popa jnp (bad) (bad) (bad) out mov insb loop js sti cmp xlat sub ja outsl jecxz xchg or outsl mov decl scas push add sub dec or jb dec pop and dec (bad) decl lock or xchg and add sub or in (bad) (bad) lcall dec pop fldenv out ss adc mov mov push jno push xchg xchg rorl out mov sub and (bad) (bad) (bad) lcall ljmp movsl push ficoml mov scas inc push int3 push jmp aad (bad) (bad) call les add aam insl and test loop iret inc sub cmp incl cmp push (bad) xchg mov daa sub loopne cs pop mov push jnp add (bad) mov jp pop and enter add (bad) jge mov (bad) ljmp loopne aaa loope fucomip movsb or jecxz and sub xchg dec xchg (bad) (bad) pushl mov jg arpl or jp inc pop scas std orl or sbb xor (bad) (bad) pushl ficompl das sub cmp add mov lret ljmp fcomp les push mul fsubrl push arpl add add sub dec (bad) (bad) (bad) (bad) ds rorl jne mov and inc (bad) hlt fild add adc sbb (bad) (bad) (bad) fnsave ret aas mov xchg aaa xor add xchg xchg mov xchg (bad) (bad) call xor ret (bad) push xor ja sub add sbb adc aam arpl dec ret xchg xor pusha inc xor mov pop lahf cmp loope (bad) decl add add in jne jnp enter mov neg movsl (bad) (bad) (bad) decl xor mov scas (bad) ss jne xor scas cmp call ret cmpsb (bad) (bad) ljmp enter negl inc push cli sub or cmpb and incl into or mov sbb out add movsb sub sub push xor loopne in mov (bad) jmp ja movsl dec stos push xlat std ljmp daa dec and xchg cwtl sbb (bad) jg lcall das es (bad) adc sub popf fstps sti cli (bad) (bad) ljmp mov pop fidivl je sbb xor ret mov (bad) (bad) out rol dec ljmp xchg or je mov in (bad) (bad) (bad) fsubrl je das test pop jmp add (bad) jae fisubrl jge (bad) (bad) (bad) (bad) mov lods pmullw ret add in cli stos push and lods lahf mov (bad) (bad) (bad) jmp fidiv push mov xchg insl gs les (bad) push (bad) (bad) (bad) (bad) mov mov inc push addl inc leave jbe and xchg das xlat (bad) (bad) call pop push fidiv lods mov xor push mov outsl hlt mov cli (bad) (bad) jg movsl xchg push and xlat dec push jns inc cmpl cmp cmc lods mov mov test jno push adc decl rcr xor (bad) cmp (bad) testb jns mov dec aam daa fidiv (bad) (bad) push lahf in mov sbb int mov (bad) dec (bad) cmp call or jmp jecxz fstpl mov rcll mov mov test (bad) mov xor adc imul jl sbb loope (bad) incl test sub jno (bad) enter dec (bad) jg (bad) cltd loopne test add pop fdivrs lret arpl mov (bad) (bad) (bad) (bad) ljmp push ret pushf ret mov fsubrs scas xchg jecxz cmp ja (bad) (bad) (bad) dec xchg xchg cli dec mov pop or daa hlt mov sbb dec dec inc dec mov push adc decl (bad) mov pop lds mov repnz ds in cmp and pop adc test std (bad) (bad) (bad) fistpl cmp xchg jg popf mov sub sbb into mov hlt imul lods jo push imulb call fadd and xchg pop lds ret mov jo (bad) (bad) (bad) (bad) js pop out adc adc scas fmuls int das pop sbb icebp out sbb mov lods arpl (bad) (bad) (bad) (bad) mov stos movsb jmp mov push imul (bad) jbe pop popf inc std (bad) sarb call popa jno divl pop insl mov testl scas ljmp (bad) mov outsb mov test dec xor sub repnz sbb push cld loop push mov sbb push sahf js mov mov (bad) push (bad) in cmp in xchg stc mov and imul dec (bad) ss and dec repz (bad) push xor gs decl ficomp xor add and ljmp push int3 mov add das fdivrs inc movsl sbb sbb incl popf xchg push out popa pop enter clc fiadd xchg add jg sbb out and cmpsl cltd movsl mov std mov incl sbb enter add pop xchg or mov popa fs (bad) (bad) pushl lcall (bad) sub outsb dec xchg xchg dec (bad) mov dec aas push add ljmp inc mov test icebp adc cmp (bad) jae (bad) jg push lds xor lds out pop adc js adc jl ss (bad) mov les repz ljmp mov rol out cmp (bad) (bad) call inc xor lcall ljmp iret pop xor dec in stos inc call shlb les jecxz cmp sbb ficompl cmp leave sub test rolb xor mov (bad) (bad) jmp or xchg push inc lret outsl das fwait inc mov inc cmp jg cld into xor out (bad) (bad) jg std (bad) and jae or and out pop aas mov cmpsl loope in pop (bad) (bad) (bad) inc fmuls fadds pop popa xchg xchg outsb and insb fs aam movsl adc dec mov and (bad) (bad) incl xorl arpl xor xchg dec jno lock jmp (bad) (bad) decl inc push dec sub and xchg shlb cs lcall mov mov sub fmuls push out ljmp pop add jmp and jnp or sti mov out mov (bad) (bad) (bad) call lods popf stos xchg xchg lcall cmpsb lcall in inc dec inc inc les (bad) jmp fcmovu insl sbb pop xchg or stos add cmc pop lahf and sti sbb cmp (bad) (bad) (bad) ljmp jns jb cwtl mov cltd add push sbb pop mov push adc lock js cmp cmp aaa movsb rcr inc (bad) sahf and insl add pop cld ljmp xchg nop or loopne jb jno ficomp pop imul (bad) ljmp adc inc push enter or cs lahf outsb cmp xchg xchg pusha xor xchg and xor or jo pusha jmp add push mov decl stc sub pop cmc inc mov ret jp jecxz roll cwtl push adc decl pop mov ds js add jmp xchg jge inc and repnz (bad) psubb or xchg inc (bad) (bad) cmp outsb sbb (bad) into pop fwait cmpsb mov sbb cs loope and ljmp sbb jb xchg jno mov (bad) jne xor pop rolb add pushf mov stos xchg mov (bad) push hlt stos (bad) jg add mov jecxz shll psraw decl cmp (bad) enter push mov and out mov inc daa pop (bad) (bad) (bad) push testl out fnsave pop push add cltd xor xor or mov pop or sti jns sahf sahf mov aas push (bad) out test push cwtl lock dec insl cmp xchg cwtl loope and (bad) (bad) decl call movsb lock jbe aas pop sbb inc dec jo mov mov and fcos lcall rol (bad) loopne aam nop lahf inc es fs dec stos int imul lcall stos or xchg and in sub cli insb mov out or cwtl sub fcmovu sti and (bad) call mov mov (bad) fdivrs insb push mov push (bad) jg in popa popa dec aaa and (bad) dec repz sar (bad) lcall loopne sarl dec mov fwait push sbb or cs push sub call jae lea ss imul in in mov dec jge sbb (bad) (bad) (bad) in into and incb mov call fmull cmp jb fstl (bad) xchg sar (bad) ljmp fwait sahf xchg and nop and mov stos pop insb movl je sbb fnstsw rcl inc mov (bad) jae inc dec clc ljmp jbe lcall adc scas sbb and icebp cltd inc inc (bad) (bad) jmp ds sbb pushf movsb enter xchg cwtl mov and loopne pop cmc (bad) incl xor push and fild stos or sbb (bad) (bad) (bad) ljmp fdivl dec jg cli mov xchg nop and add pusha push xlat pop (bad) (bad) (bad) pushl test jg call or sub jns mov into add js (bad) (bad) call cmp lds aad push movsb movsl jbe inc shr push nop (bad) (bad) (bad) jg push cwtl aad sub pop mov sbb mov pop adc xorb lret stc push into pop hlt (bad) pushl das test ja inc arpl push cmc xchg jb mov mov lock (bad) pushl jne push cmpsb lcallw aam repz jge aam cmpsl cmp insb js jp hlt cmp movsl fxch stos xchg popa fwait pusha imul (bad) (bad) jmp cwtl xor ja test daa jne xor or idivb inc dec scas clc (bad) mov add lods (bad) ljmp cmp jl lcall (bad) (bad) ljmp cmpsb stos push ficomp movsb push cmpsl jp xor and mov cmp sti mov (bad) (bad) (bad) (bad) clc xchg test add (bad) loopne scas cmc mov mov push pop mov (bad) call sub or xor or imul aam xchg push popf pop pand jg lcall daa sbb rol xor mov mull pop pop mov (bad) incl test popf rcll in push pop jbe out or lock mov pop add push push and cmp (bad) (bad) incl add lcall xchg shr in arpl mov mov cli cs (bad) (bad) decl jle sbb inc jb jge scas call xchg jecxz std fs push (bad) (bad) (bad) cmp xchg xchg icebp insl jo loope pop inc ficom mov or out call decl cmpsb add (bad) mov fidivl jle pop call sbb loopne call inc lock cmp repnz fisubl je mov stos adcl jl inc test pop ret pop push xchg mov (bad) (bad) jg lahf sbb not and lods leave xlat insl fwait mov dec jo lock aas loope cmp mov (bad) (bad) (bad) aas mov in sti jno sbb sub ljmp cwtl mov push cld lock cmp lea les int in push xor (bad) (bad) sbb dec test (bad) (bad) (bad) (bad) mov inc and sub inc in dec call andl mov sub nop incl icebp inc cld or pop pushf sub (bad) (bad) (bad) incl out pop adc jg or dec cmc out and aaa xchg test (bad) fcmovnu inc mov ret inc mov in adc out int3 dec in (bad) (bad) (bad) jmp ficoml add sbb jecxz lea fwait pop pop movsl mov or mov (bad) (bad) (bad) jmp mov outsb jb sbbb (bad) and sbb mov xchg icebp add mov xor xchg (bad) (bad) call pusha push push inc jmp mov mov lods stos inc scas add xchg inc cld call into adc sbb shrl jbe lret es cmp fcoms sub (bad) (bad) (bad) ljmp mov cmp push (bad) xchg sbb inc sbb popa pop idiv lock mov (bad) incl into and (bad) rol push jb dec jb dec dec jge fidivrl dec (bad) push push mov hlt push roll xchg popa or (bad) cli pop (bad) (bad) (bad) (bad) call xchg xor pop inc xchg cld push add nop fsubs push pop std jo sbb (bad) (bad) call leave inc sbb jg loop mov cltd pushf lock lret jns jmp add (bad) pushl scas in popa insl inc ds movlps xchg jmp std pop pop cltd cmpsl sti mov lods (bad) (bad) (bad) jmp sub dec inc jmp std add pop cmp test mov (bad) pop (bad) xchg jg pop icebp dec mov add xlat sahf push popa mov push cmpsb lods ror in out cmp (bad) (bad) jmp (bad) cmp fsubr pop jae sbb mov in pop fstl (bad) or (bad) jg lcall add fcom daa lret loop fidiv lods mov punpckhdq ljmp inc push mov test or in call (bad) (bad) (bad) incl mov in out add fucom push icebp push push sahf fs mov cmpsl inc lds loope loopne cwtl in xor or mov icebp mov arpl lret leave repnz sub sarl jge xchg xor mov xor cwtl pushf cmp xchg stc pop lods inc sub lock (bad) incl pushf sbb and mov and mov pop ss inc push (bad) mov dec lea in sahf andb inc sbb pop decl incl push mov pop mov xchg in scas inc jo xor mov (bad) (bad) cli jae cmp pop jnp cli xor jae jl (bad) imul add decl lret ljmp subl inc or cwtl ds xchg and cmp push ljmp in xor pop mov ficomp cmc popf ds rolb leave into push fcoms mov scas (bad) lret or mov sub (bad) mov (bad) (bad) jg xor popf cmp dec add gs sub ljmp bound adc adc xchg xor inc xor mov int3 jnp je,pt xchg push adc clc (bad) (bad) jmp test cmp hlt jg xchg repz shrb lahf dec insb cmp dec pop add and fiadd ret (bad) (bad) (bad) lcall (bad) jmp mov sbb lds jb xchg inc lahf cmp out fisttpl push pushl scas int sahf sub lods test sub jge arpl (bad) (bad) decl xchg into ljmp fmuls adc sub (bad) pop pop scas cli test inc cltd (bad) ljmp test bnd clc arpl cld (bad) or pop imul clc push sub mov stc enter inc lods fbld sbb pop insl pop int stos (bad) pop or stc sub outsl cli (bad) decl push push das add or inc sub sbb in (bad) rcll ljmp daa mov cmc sbb stos pop push leave mov ss mov (bad) (bad) (bad) (bad) fisttpll and pushf sub mov or in sub push in fistpl ljmp cs sarl call fisttp (bad) lcall sbb jne lds sbb call std ljmp xchg cmp lret leave adc bound inc dec or cmpsl sbbb lods test sub and and hlt xor sarl lcall mov xchg cmpsb mov gs (bad) sub jae and out loope cs pop push add es adc ja mov mov je scas mov mov (bad) or fxrstor jmp sti (bad) pushl mov jecxz sbb popa repz bound (bad) (bad) lcall (bad) pusha dec pop jmp lods data16 push sarl adc lods (bad) lock popa push lret out (bad) (bad) call aas nop push mov sub add daa jecxz loopne data16 push fwait sbb insb mov (bad) (bad) jmp mov add mov aad fldenv sti inc call (bad) (bad) (bad) push data16 pop cmc fsubl rolb push mov push mov mov (bad) (bad) (bad) ljmp fsub mov xchg and pop jns sti stos vaddpd pop xchg push push xor cwtl (bad) (bad) cmp loop mov fcomps lods dec daa push jecxz cli fbstp mov (bad) call cmp cld rcrl mov push push inc dec loope mov and mov lcall sbb xchg mov stos sbb std (bad) (bad) lcall mov nop loop std test or stos add (bad) cli pop push in cmpsb pusha jne push inc cmp mov fstpt pop and sbb adc adc std ret sahf (bad) ret mov jmp add popf pop nop sbb test fnstcw fldl2t dec pop adc (bad) (bad) (bad) mov push xchg pusha jo mov ficompl mov cwtl lahf lret sahf addr16 (bad) (bad) (bad) incl and cmpl sbb fidivl cmp aad fildll jl (bad) (bad) jmp xor or sbb mov jmp addr16 dec outsl xor xor add (bad) decl pop bound push inc or xchg mov push (bad) (bad) incl jecxz stos mov mov popa dec imul add lcall lret in xchg popf jmp cs pop dec daa pop stos popa adc dec js or cmc jns adc jno add inc ss (bad) (bad) (bad) flds das adc sub xor mov enter sbb push (bad) (bad) (bad) mov mov into mov add les (bad) push mov push inc (bad) (bad) (bad) jmp or xor pop shl push xor or sub adc in push stc loopne bound mov (bad) (bad) mov stos sub fildll aam call lret (bad) mov ljmp adc insb iret pop pop out out imul (bad) (bad) jmp xchg fisttpl cmp pop (bad) sarb lock push std out (bad) (bad) (bad) ljmp add sub cmp imul cmc cmp loop cwtl (bad) sbb (bad) pushl lods xor ret std mov ds stos bound or push inc adc (bad) jg out pop cmp cmp movsb jp cld xor cli (bad) jg rol loopne lds sub lods shrl sti xchg pop (bad) adc (bad) ja ja lcall ret or mov (bad) (bad) (bad) (bad) fsubr cmp and jg jne addl paddsb int3 jecxz int jo push in push mov sbb je inc xor mov or mov lods ret sarl cmp icebp (bad) (bad) call add mov mov test imul dec (bad) decl push out push sbb mov mov push cmpsb jno icebp or aaa dec ds popf dec xchg lods inc test mov xchg or mov fcomip lcall loope push push popa xchg data16 cld inc in cmp fcos (bad) (bad) lcall xchg in scas mov jl fdiv sbb cmpsb xor out adc jle ror (bad) (bad) (bad) jmp insl mov mov push out xor adc push ja (bad) xchg add mov mov cmp in out mov mov in lcall xchg imul in sti mov xor push sub icebp shll cmp out jnp ss mov test (bad) stos (bad) (bad) ljmp ficompl popf jno sarb lret cs mov stos dec sbb aad pop ljmp (bad) (bad) (bad) xor push sahf fisubrl bound sub dec ret out xchg sbb fisttp add lahf ds mov (bad) (bad) js jns sub xchg fs mov pop lret push sbb std sbb int fisubr adc pop inc jb (bad) (bad) (bad) jmp mov movsl popl pop in inc xchg pushf add dec (bad) icebp push fs jl dec sarb (bad) jmp pop mov jmp cmpsb lret add sbb push cs (bad) (bad) lcall pop test or dec imulb mov jg ret data16 (bad) (bad) decl mov inc dec inc (bad) stos xchg pop in movups mov addr16 pop arpl mul (bad) (bad) pushl push push xchg daa cmovnp insb imul negl xor (bad) mov (bad) (bad) jmp pop mov adc or inc lret push iret push mov (bad) or (bad) and cld (bad) (bad) out cmpl or stos push push dec mov (bad) sub xor fdivp call sub mov mov mov imul jno fisubl (bad) (bad) lcall push (bad) lods push add leave idivl mov push jb mov (bad) call call dec xlat sub das sub mov les and inc sub enter std fcompl sub mov fisttpll add (bad) incl dec outsb and sub or or xchg ljmp jmp sub adc outsb insl pop jecxz cwtl mov jp (bad) jl jne (bad) (bad) (bad) pushl cltd or movsb insb lock dec popa in mov rcll mov cmp jmp push pop sub int3 loopne adc adc (bad) pop (bad) lcall or mov scas mov push xchg sub cmp test xchg popa mov call cmpsb data16 clc jp add mov xlat sub fdivr (bad) ljmp or sub push ret fs (bad) pop dec xchg add negl out push (bad) (bad) incl ret and aam in ret jmp aam mov mov (bad) incl and (bad) xchg push test shlb and leave jb lock inc (bad) (bad) (bad) (bad) std mov loopne test push aam rorl pop mov pop in out test lcall incl push cmp jl loopne push lret test adc (bad) ljmp neg cwtl xlat movsl leave es stos or cmp cmp mov jmp cmpsb (bad) (bad) (bad) ljmp xchg pushf push insb pop and pop xor push pop or jle inc inc push mov (bad) (bad) (bad) call into insb pusha lret mov sbb or xor inc out or mov lock xor (bad) (bad) incl dec fistp repnz push pop fwait adc jle mov xor add sub outsb imul or pop lcall sbb dec cmp cmpsl push shll test (bad) (bad) incl and std adc out and sbb in adc cwtl call popa (bad) jg call sbb adc mov cmp jnp xchg mov push loope cmp (bad) inc enter inc fwait xchg pusha rcll outsl cmp dec xor stc mov lea (bad) (bad) (bad) pushl adc in jle je jl cwtl cmc lods dec fistp cwtl rorb cmp jmp ljmp mov hlt mov fcmovne lcall movsb jecxz cmp fmull jmp pusha adc xchg stos imul sbb out (bad) (bad) mov rorb fcmovb scas fcompl and and ret (bad) (bad) ljmp sbb jge jns pop ds add test push repz jnp sti mov pop mov pop mov mov cltd pop sub sub sbb fdivrl (bad) (bad) call enter fsubrs and cmp adc popa cmp mov insl (bad) (bad) (bad) incl mov lcall loop cmp (bad) ljmp aas fistp out (bad) mov sbb jmp cmc stos inc dec fcompl mov out rcrb (bad) (bad) incl or inc push adc movsb mov push les call rorl (bad) (bad) call loop xchg and pop ja push mov and repz repnz dec pop lcall (bad) cmp mov push loope jmp adc mov (bad) (bad) lcall mov mov enter adcl add mov cld decl jg cwtl adc xchg loop mov (bad) sahf std push adc (bad) (bad) decl popa js and out aas adc sub leave add incl sub clc (bad) push cmp and lods sub sbb jmp ss or inc xchg jge sub test xchg push out mov in mov xchg (bad) cmc (bad) push mov das xor lds push sub fs in sub or fmull pop into xor js fs sti (bad) (bad) decl rorl inc xchg (bad) mov test or scas cli (bad) jg or stos dec push outsb or lods lea fildll popl (bad) incl out into push movsl add cltd mov out je push (bad) (bad) decl (bad) aas mov push mov mov xchg stos movsl dec xor roll (bad) incl movsb int inc sbb fsub dec dec test scas es insl jns dec test xor cmc (bad) (bad) call rcrl mov sub add (bad) ljmp (bad) incl push cli or enter dec mov xor (bad) (bad) jl mov movsb (bad) or ljmp js and hlt xchg (bad) jecxz outsb add (bad) incl sbb fisttpll dec dec xchg adc lods adc mov popf inc inc adc cmp jns fwait xchg cmp adc outsb pop adc test lods ljmp mov sub xor sub inc std sarl jbe push (bad) (bad) dec icebp or push jno dec decb sbb arpl or hlt das addr16 idiv mov stc call jmp loope xchg int3 sbb dec add rorb (bad) ljmp popa adc loopne sbb jle out popa insb push out outsl jae lret xchg mov idiv (bad) (bad) (bad) jns inc sbb and inc jecxz movsb xor mov lock mov jo js (bad) (bad) lcall data16 call sbb test mov pop sar (bad) (bad) fisttp punpckhbw fstps mov popf ret add loop cld xchg pop (bad) (bad) (bad) jg nop and imul into loope mov push into sbb aad movsb push inc test out les decl xchg add pop push inc (bad) popa jnp insl jp (bad) (bad) (bad) (bad) fisubl push popa cmp aam lret dec or pushf into add sarl mov (bad) shll mov ret fmul ds inc mov aam cld (bad) decl sahf outsl mov aad sti lret push scas jle mov add call inc rclb xchg enter or mov sbb or mov cltd cmp fs ds fs (bad) (bad) (bad) (bad) cmp and movsb xlat push inc cmp jecxz (bad) pop lcall jo lahf push incl (bad) pushl and and (bad) lea xor add nop jl outsl mov sub sar (bad) incl stos call pop dec std fldl cmp scas into push inc pop push in imul aas adc (bad) (bad) (bad) jmp mov rolb mov jae adcb xlat jmp jg lods fnstcw (bad) (bad) (bad) ljmp sub inc and dec loop xor xchg arpl movsb jo das fcompl and popf jge test and cmp sti push data16 test push xchg jle lock clc das clc in or xchg mov leave xchg subb jg (bad) mov ffree outsb mov lock pushf xor popa les (bad) aaa std sbb outsl dec jl and mov repz jl imul jae lldt sbb push pushf jp jbe mov jl or ret and les mov pop cmp mov cmpsb mov loop xor aad je mov iret (bad) (bad) (bad) inc dec cmp out fnstenv lcall in pop repz push test push (bad) (bad) (bad) (bad) ljmp jecxz in mov into test mov out stos dec mov imul ljmp fwait xlat sbb cmp pop ret cmp mov fdivrs cmp pop bound sbb mov pushf inc ffreep cmpsl ss leave pushf cmp sahf (bad) cltd sbb (bad) adc lds cmpsb xchg std sbb jle xchg jecxz or mov mov call mov sarb and (bad) push ret xlat popa test inc aam (bad) (bad) (bad) call mov sbb jmp pop dec mov sbb test lods cli repnz (bad) ljmp mov dec or loop es add xor outsb mov bound (bad) lcall test dec fsts loopne push lods jmp sar test add lahf gs sbb ret mov call mov fcomps test aam push mov add mov inc cmpsb push (bad) mov ja lea xchg inc cld and mov add sbb jno (bad) (bad) (bad) call sub add shrl popa es push inc or (bad) ror push test pushf gs icebp decl sbb comiss mov stc sbb ss dec add xchg incl and test iret call leave push cld in mov leave jbe xor aaa and add sbb fdivs (bad) (bad) pushl nop (bad) repnz mov adc clc repz jl adc (bad) mov nop enter cmpsl cmp loop mov (bad) pushl daa popa and repnz adc pop imul add xor pop lock cs xchg cmp out mov enter cs lret mov int inc sarl push cmp cmp cmp ret adc inc cli (bad) (bad) (bad) ljmp inc test pushf fisubr add or or inc add data16 dec push fdivs sbb popf jo push pusha into mov popf xor cmp loopne cmpsb push cmp loope cmp mov lcall jo das sarb (bad) mov sub inc sub jl fs inc subl pushf cmp sar mov lcall in inc fs ljmp xchg adc (bad) xchg (bad) (bad) (bad) lcall dec nop lods cmp dec gs (bad) mov loop mov bswap sub jle cmp (bad) call pop bswap mov stos inc jge xchg xchg and inc jmp add push (bad) call mov sbb repnz test mov (bad) incl xor cmp xor lahf or sysenter xor mov mov (bad) (bad) dec xchg data16 std fimul (bad) mov and add pop xor mov inc into stos (bad) (bad) push mov scas jmp cwtl inc or dec mov pop stos pop xchg ret movsl loope add in bound (bad) (bad) (bad) (bad) cmp gs sti mov adc fadds leave pop mov in mov adc or (bad) (bad) dec lock cld inc cli lcall push jg sbb bound xchg inc jecxz cmc sarb (bad) jmp dec call movsl int pop iret mov or jle or daa pop (bad) fs aad xchg in ljmp clc pushl adc fldt cmp ror or or sahf mov addl je (bad) (bad) (bad) jmp sbb inc adc sbb (bad) fbld (bad) xchg and pop mov lcall sub (bad) mov add dec shrb mov cmp push xchg (bad) (bad) (bad) (bad) mov mov mov aad test outsl ds push cmp push mov (bad) ljmp lds mov or adc aam outsb sbb leave xorl insb data16 (bad) jbe ljmp mov mov lods mul ss cmp and mov cli outsb (bad) (bad) (bad) jg cmpsb or leave lret data16 xchg (bad) pop fsubrl pop sti inc repnz rol mov add (bad) (bad) (bad) incl (bad) push outsb dec pop outsl mull jp push or mov dec adc mov incl push add ret mov sbb call dec in dec stc jbe (bad) (bad) pushl adc push or rclb loop int stc pop inc sti push (bad) (bad) (bad) ljmp jo in jo mov hlt or xchg cmpsb data16 imul aaa mov xor (bad) (bad) (bad) jge cmp mov cmp punpcklbw nopl sbb out lock xorl dec pop cmp (bad) (bad) call pop push (bad) push xor lods mov fs lahf rcr enter fwait div popl adc sub (bad) (bad) lcall ror cmp xor mov daa stos fimull and or pop xchg (bad) (bad) (bad) fistpll add mov fimull or mov jg data16 outsl mov fild (bad) (bad) jno das fsub popf sahf sti hlt xlat js cli (bad) ljmp data16 mov lcall xor decl in jmp cmpsl out in and mov or pop cmp enter je mul mov divb lock push gs shl (bad) imull mov pop pop or fcmovnu in (bad) jmp rcl clc mov sub (bad) notb mov (bad) (bad) push decb cmpsl or in mov inc inc in lret jecxz jg fidivl cmp (bad) (bad) decl lret fxch ret fsubrs (bad) repnz in or and lods mov pop push mov (bad) (bad) (bad) jmp pusha mov out nop divb sti pop nop sbb ffree daa jo adc dec jg adc (bad) mov lcall jl push mov stc movsb and aam mov (bad) aas jecxz inc mov ljmp xor dec cmp sub inc xor (bad) (bad) inc shlb rcll out aad cld jnp cmp cmpsb push and ljmp (bad) (bad) inc nop sbb ficom jmp loope pop dec jmp cmp test pop fsubrl inc imul mov jns std add scas (bad) (bad) lcall or jp mov adc xor dec (bad) (bad) (bad) (bad) mov pop fdivrl xor test mov fdiv sbb dec das bswap mov xchg ja sarl pushl icebp std lds adc pop adc dec (bad) (bad) (bad) jg jb enter push fbld and popf pop in or in inc (bad) (bad) xor push stos outsl fsubr push (bad) cmp cmpsl adc and or popf fsubrl dec cmpps les add hlt adc cltd repnz sbb insb xor (bad) (bad) (bad) (bad) jmp lahf xchg dec pop mov and stc pop dec aas xor imul (bad) (bad) (bad) (bad) cld mov jbe lret sub sbb dec imul enter jge cmpsb dec (bad) (bad) (bad) pushl sbb mov xchg iret in cltd cmp xor ja scas jae jp ja (bad) (bad) jmp xorl adc inc shll xchg sbb mov jmp xor jg sub cmp push dec pusha shlb (bad) (bad) (bad) decl jo lds movsb enter jge in jae sub test (bad) (bad) (bad) decl dec sub sbb loope mov repz iret xchg jge nop aam fiadd lods movsl jnp (bad) (bad) ljmp and lahf mov pusha int3 scas mov and and push pop xchg or decl sbb sbb xor jl cltd and mov pop leave dec pop jle jl mov std pushl addr16 dec test test jns or loope cmc ljmp (bad) (bad) cmp mov mov and pop arpl in (bad) jbe cltd mov push xor push mov fucomp leave add mov mov add leave sub (bad) (bad) jmp jecxz and into and xchg and pushf jl sub inc cmp in dec push sbbl mov jbe sub xor xchg es dec cmc push xchg jmp (bad) (bad) mov popf mov ret xchg xchg xor (bad) in and mov call jne mov stc lods test dec push ficompl mov addr16 (bad) ljmp ficomp push adc adc test lret mov (bad) (bad) ljmp fs sbb jge popf xor and mov fistpl lret cmp (bad) (bad) incl xchg mov lahf cmp fsub ret cmpsl aam and pop push (bad) decl stos in add xor xchg jae xor mov daa popf sbb int mov movsb fsubl addr16 imul cwtl ret (bad) (bad) (bad) (bad) mov mov lahf jae xchg xchg or sbb fsts gs push (bad) (bad) (bad) xchg mov xor daa push stos cmp jns call and ret (bad) (bad) (bad) incl and repz in and aad xchg out sar ss push nop mov aas (bad) (bad) (bad) (bad) in ja out mov clc sti and mov cmp pop push sbbl xchg push mov cli call aad push push dec pop (bad) jl pusha insl mov jl dec jmp les clc call (bad) aam pop enter in ljmp stos (bad) pop jno mov outsl mov fwait inc fiadd test ss inc lods lds cmp inc mov (bad) shrl mov fs iret lret jg ds and imul xor push xchg xlat ret dec mov iret push push cmpsl add loop sub rorb xor xchg sbb into (bad) les dec fistp pop inc or ret mov (bad) (bad) lcall and insb jecxz ja fisttpl pop sbb cmc add and lcall call outsb bound push sbb add mull pop sub (bad) call or sub sub push out (bad) (bad) (bad) jmp std mov insl jmp add test outsb or dec xchg dec pop mov sub ljmp loope dec and psadbw sbb scas xor sub push add inc nop sub setp call lods inc xlat xchg push jns scas (bad) iret or lcall push out or adc jns aam (bad) (bad) incl test cwtl icebp or xor jecxz inc (bad) in push fildl out mov sbb lods out popa or nop outsb out shl xchg sbb adc in int (bad) (bad) jmp mov mov imul mov and sub iret insb mov pop je and adc jge xor into (bad) xor mov push mov cli add leave xchg ret gs (bad) (bad) (bad) dec inc and add or dec in xor imul mov popf popf push insb cwtl (bad) (bad) (bad) (bad) cmp xchg or lock push loope mov loop scas mov lods adc sub sbb dec jmp in aas and xchg (bad) jg decl jno and mov (bad) fisubrl insl sbb sub (bad) jg xor cmpsl sbb stos negb cmp jg sahf ss test rorl (bad) (bad) fild jnp fstpt scas jge movsb xor into (bad) jb cmpsb inc daa cmp push inc popa push std and mov or jae into jae adc adc mov (bad) das incl iret cltd cmp mov or or jns jle mov aas mov mov xor (bad) jo adc enter fsubrl test sti test (bad) stc rcrb dec (bad) mov outsl push (bad) decl pop aam xor in pop cmp xchg std mov mov bound pop lock decl pop insb sub add xlat xchg dec aas cmp adc shrb js sub (bad) lcall xor sti jae das repz inc leave loopne stc cmp xor fsubl fcomip (bad) in mov pop lds push (bad) adc adc imul jno cmp mov xlat (bad) incl addr16 aad aam sar pop into push ret inc push (bad) cmpsl jbe (bad) in (bad) (bad) aas into pushf je loopne inc mov popf mov data16 dec (bad) push ds pop inc lock (bad) (bad) (bad) ljmp out shll xchg xchg sbb test ljmp adc lds aad fst inc sbb mov jno cmp adc repz sti push pop bnd (bad) (bad) (bad) jmp dec mov sbb lods mov sbbb in mov adcb cmp sbb (bad) (bad) call cmp ret mov push pop in pop stos sahf or dec push jle (bad) xor (bad) (bad) mov andl cmc adc es sbb and loopne or aaa sub lods or inc mov scas cli (bad) ljmp jmp sti mov scas xchg test je movsb (bad) (bad) incl and lea pop nop jbe les in dec ret sbb sbb jp (bad) pushl cmp jl aas mov xlat push and popa sar (bad) (bad) js loop orb mov mov into fsubp sbb sub gs inc fdivr decl xchg and add mov (bad) (bad) pushl dec jae jns sbb cmp bound pushf jmp jle pop xlat push sub (bad) (bad) pushl hlt and lds in iret mov shr and jmp (bad) pop test (bad) (bad) (bad) (bad) jp fdivrl lcall scas lret mov (bad) fnstenv scas jne sub (bad) decl jmp rorb or add mov dec shll (bad) (bad) js aaa lea sbb jl push loope scas stos adc xchg push pop pushl std incl cmp push (bad) rcrb inc jmp loopne hlt loopne repnz outsb jns (bad) (bad) incl mov lret aad mov ss fildll scas sbb inc mov and les (bad) cmp mov jmp or adc push (bad) sub repnz enter sub (bad) jge adc pop inc sub (bad) notl cltd sub enter (bad) push in cld or (bad) mov lcall pushl xor xchg nop dec or xchg repnz sbb aad out xor pushl dec xor ret mov lahf jb dec in fcmovnb (bad) (bad) (bad) lcall inc xor mov push lods mov mov sub mov movsb jnp mov jbe add sbb jp jge (bad) ret (bad) ljmp dec adc fisubrl adc test jmp lcall push ljmp test mov imull jbe (bad) (bad) (bad) call jg fdiv outsl jns aad mov cmp mov outsl jnp sbb mov dec jl je incl (bad) js mov sub mov xor push xchg cld adc (bad) (bad) push push rolb add or mov xchg (bad) pop insb cmp lods jg mov sbb cli mov or xlat jp (bad) (bad) (bad) fcomip pop in into lea jbe std xchg repz mov das (bad) inc rcll imul stc ds sub mov push mov push scas adc mov pop cmp lcall das cli call jne cmpsb outsl daa mov cmp pop aam and repnz sbb sub adc je aaa adc stos push js repnz (bad) (bad) (bad) mov jnp pop pop je inc jno cmc js mov adc (bad) rcll (bad) out cli call xchg jnp inc and push jb and mov fcmovbe (bad) (bad) (bad) (bad) mov mov mov pop add (bad) or int push mov (bad) (bad) cmp mov loope and xchg jns adc aam stos (bad) (bad) call test sbb fbstp ljmp pop xchg ljmp sbb dec pop dec imul add dec pop xchg mov rorl test mov jnp gs jne cwtl loopne (bad) stos (bad) pushl and adc pop cmp ds mov jo arpl xor mov data16 mov cmp out jne ffree lret ja cmp (bad) (bad) (bad) decl (bad) lods ja arpl pop cmp inc insb inc arpl lret mov fisubl lea (bad) incl inc mov fldcw test inc sub test push movsl add fs dec mov test push pop add rorb mov (bad) (bad) (bad) decl out icebp bound cltd sub inc fsubrl inc fisub mov notl sub pop int3 (bad) ljmp cli mov inc mov in scas mov sti in outsb mov cmpsb loope lahf mov lret (bad) (bad) (bad) dec test push icebp leave dec sbb clc popf jae fwait enter lcall push pop stos (bad) (bad) (bad) lcall inc xor cmc icebp push pop sbb outsl insb into or leave pop dec hlt or cld (bad) (bad) lcall jb xor out imul pop mov fildll kortestw icebp call ljmp int3 sub aad inc scas movsb inc ds fwait adc in jo mov lahf fs push add cli (bad) inc iret mov mov inc aas adc sub bound adcb xor (bad) decl in aad cmc jg mov or and (bad) stos out (bad) (bad) (bad) pushl inc (bad) mov dec shrl in mov leave (bad) pusha pop scas dec push andl jne (bad) (bad) decl out cmp or push das mov cmpsb hlt fs outsb sub adc (bad) (bad) jmp addr16 cld (bad) mov in push or sbb cmp pop dec (bad) (bad) (bad) dec sub pop je ja pop xchg mov outsb les popa xor cmpsb and add push movsl scas pop sbb (bad) (bad) (bad) jmp lea insl pop clc push pop loopne and jb (bad) ss (bad) adc inc lods incl cld lcall (bad) (bad) mov sbb mov mov cmp into push push (bad) (bad) call add (bad) cli shl and xchg dec push sti aam ror je fdivs (bad) (bad) lcall sub les (bad) insl bound push xchg dec int jb aas fwait sar adc and (bad) (bad) (bad) (bad) (bad) (bad) ljmp ret mov mov aam mov add lcall (bad) jmp in mov rclb lea or mov xlat mov (bad) (bad) (bad) decl xlat add add test mov xchg call pop lods (bad) (bad) (bad) ljmp in lret cmp xchg push shrb or push cwtl sub inc jle mov push aam ficomp add les loopne inc (bad) mov mov sub test xchg hlt push loop (bad) (bad) fnop outsl mov inc movsl pop inc adc push push inc repz inc (bad) sub icebp xchg mov fbstp arpl (bad) ds outsb mov hlt nop stc mov inc (bad) ljmp and lods mov nop sub gs stc mov (bad) call xor lahf stos jne movsl and jnp icebp adc (bad) call cld lcall sbb gs cmp fidivr movsb xor add mov fs loop test scas push loope scas leave inc pop stos jae insl xor arpl ljmp or jbe cld lea mulb xor scas lret sub push jge (bad) (bad) lcall nop data16 pop sub xor inc ret and push shlb fwait cmp push jno push in (bad) incl ljmp outsl sti inc rcll in pop add (bad) jge cmpsl adc les (bad) cmp (bad) ljmp adc in pushf insb pavgb xor in cmp loop xor xlat jmp cmp dec (bad) (bad) (bad) incl or bound or aad fcomip dec lret push loopne leave push inc add (bad) ljmp aas push inc cld ja data16 xchg sti test hlt xchg xchg lea pop int rorb mov inc jle jb xor pop outsb push or call dec imul mov mov adc (bad) (bad) (bad) (bad) call cwtl notl cld push mov outsb mov xchg xchg fs (bad) (bad) (bad) call cli adc push (bad) mov mov out inc lds ficompl cld dec stc pop inc adc addr16 ljmp in adc jo loope push push sbb (bad) fistpl xlat (bad) (bad) call mov repz insb inc (bad) add inc inc daa jbe jecxz clc test xor (bad) (bad) jg inc cmpsl xor mov xchg into mov es inc pop sub pop sub pop (bad) int3 (bad) incl mov clc out fistp jae sbb xor fidiv adc sbb mov jnp mov pushf iret inc mov pop mov cmc das lcall (bad) (bad) (bad) call xor sub stos or addr16 (bad) mov pop js je (bad) (bad) (bad) call sti (bad) aad fmuls das and cmp pop (bad) cld push icebp adc inc or jmp (bad) (bad) (bad) (bad) (bad) cmc xchg (bad) sub (bad) push ss insb jb shrl adc std (bad) (bad) ljmp xlat (bad) mov sub mov inc jge sbb jne andb cmp pop jne and push sarl (bad) (bad) (bad) call jmp mov xlat and cmp fiaddl and sub cld jne test or in and adcl cmp pop xchg cmp daa paddd (bad) (bad) ljmp push nop push adc ficomp add nop sub je mov adc sub mov jne push mov push fsubp xchg call loopne je mov ds (bad) (bad) (bad) incl jne icebp out cld repnz cmp pop sahf mov xor gs jno (bad) mov add fwait roll fisttp lock pop add inc push aaa or clc lcall inc pop pop call sbb pop cmc aam (bad) (bad) (bad) stc xor sub out jmp inc sbb aad gs (bad) sbb (bad) (bad) jmp in xchg xchg xchg outsl push add (bad) fcompl int lret add xchg adc (bad) mov add nop sbb jge (bad) ja push mov mov lahf mov movsb cmpsl aad xchg mov pop repz test lret (bad) (bad) ljmp push imul or xchg daa aam sti pushf lret xchg imul lcall sub mov mov adc (bad) adc sbb push in idivb (bad) (bad) (bad) incl sub imul popa inc pop int3 mov xor add xor (bad) (bad) jmp rcr lahf pusha in or fwait mov add inc or (bad) mov jno (bad) mov cmpsb lahf inc (bad) sub pop jl mov es pop push (bad) and stos pushl (bad) cmp jo or cmp mov ss mov (bad) mov jmp sbb popf xchg sbb (bad) cmpsl andl ret (bad) jg adc stc incb pmuludq cmpsb pop mov dec jne fst inc test (bad) (bad) (bad) ljmp xchg cltd fs sbb jle (bad) dec mov and ljmp xchg xchg push sub shl adc (bad) cmp ljmp cwtl sub in mov lret sub xchg mov inc adc arpl sbb rorb inc or aaa (bad) jg pushl or call mov mov inc popf leave mov push lcall call xchg int repnz mov inc xor cli dec lods inc decl sbb sub fild hlt (bad) (bad) (bad) (bad) fcoms roll add push jae jmp cmc cmpsb jae int3 pop hlt leave or pop xor sub mov jge dec aad test (bad) lods js xor insl mov (bad) (bad) (bad) fistpll mov mov push xlat cmp mov jnp mov jb adc (bad) (bad) (bad) (bad) jmp lods and xor daa (bad) sub xchg cmc decb arpl push fs pop push (bad) (bad) (bad) call inc call xor leave sub mov rorl mov in xchg bound sbb ljmp sub (bad) or sub lahf sub jns icebp cld clc mov (bad) jmp add cld out fsubrl mov and inc inc int (bad) cmp movsb pop aas push into aad cmp scas dec cmp cltd lea add lods mov rorb out cli xor xchg mov iret or dec sahf imul movb sti sti xlat or daa pushl std ljmp sbb mov ds or pop jmp ds (bad) (bad) jmp mov or and ficom and outsb imul push testb fwait in ljmp cmp out clc test jo rol cli sahf (bad) xchg loope in inc xor (bad) in lcall ret aam pop or ficoml pusha shlb mov fsubr fwait xor (bad) lcall outsl jnp je sub pop jl dec xor int (bad) (bad) call mov sub cltd mov cmp int3 inc jp psubd (bad) (bad) (bad) (bad) mov push popa int3 mov cld add rcll in rep xchg (bad) (bad) decl rcrl fiaddl dec add or pop push push in pushf (bad) (bad) (bad) jmp lods cmp dec cmp popf aam imul add out sub pop cmpsb cmp (bad) ljmp sub shrl stos push sbb mov enter pop icebp call adcb push sti and aaa push pusha add push xlat lods and cmc movsb xchg incl sbbl lret stos scas push pop test outsb (bad) call test lahf inc inc (bad) pushl std lcall insb adc lret mov and (bad) (bad) pushl ret imul xor add in sub ss mov fisttp mov clc (bad) (bad) pushl aas jno loope (bad) xor push or aaa inc push icebp dec iret jge (bad) incl movsl lret stc mov add mov adc (bad) (bad) (bad) mov adc dec pop xchg (bad) out mov test push movl call mov das sbbb stc ret and or (bad) xchg mov lret (bad) (bad) (bad) out ds popf inc xchg inc or mov jg push add and sub jnp in mov pushl and lds jbe push mov (bad) call pop cmp pop enter jp adc mov mov inc gs (bad) (bad) (bad) (bad) cld nop pop arpl cmpsl sub cmp jae rorb and lock hlt xor incl scas mov shrb lds pop (bad) out cmp adc or out mov ja repnz pop std (bad) (bad) fdivrs lock cmp jns ja popf (bad) pop js pusha mov mov insb ja jb adc inc mov pop sbb mov cmpsb mov repnz ljmp inc add inc or das mov push jno decb (bad) dec jbe daa cli out jne hlt rcrb (bad) (bad) mov (bad) jecxz pop xchg mov (bad) mov jno inc push sub cmpsb (bad) jle rcr stos (bad) (bad) (bad) (bad) call incb ret mov ret fisubr in aas out xor cmc sub adc int3 lock jmp repz dec clc cltd out std jae add jmp xchg das xor xor xlat cmp fwait (bad) fbld mov add jl aam (bad) mov dec jae inc pop push sub arpl jg mov jge (bad) cs aaa std shll jmp inc mov push or rcrl sub xor cmp xchg in aam sbb movb xchg fistpl or inc popa cmp aaa into mov shrl ret (bad) hlt test (bad) (bad) (bad) ljmp jp adc mov ja pop cmp or lret (bad) jmp sbb cmpsl sub jmp hlt add push test lock jnp aaa sti adc (bad) (bad) (bad) in test (bad) jle rcll or es mov xlat out pop sbb add (bad) (bad) (bad) push mov push pop push or lret cmpsb push xchg leave mov gs call (bad) incl pop dec cmpsb outsl sub inc gs data16 loopne sbb es mov cmpsb and (bad) (bad) lcall iret add adc outsl or (bad) push sub sahf outsb pusha xchg dec xlat adc (bad) (bad) incl scas leave xor cli fist jno or testb ljmp rcl mov sti mov repz cmc int negl dec pushf or mov (bad) (bad) (bad) dec scas fisubr sbb sbb dec pop sbb mov xlat aas int ljmp sbb loope or sub cmp xchg cmc cmp sub ffree add push pushf inc loop scas (bad) (bad) fistp std push fsubrs mov call pushf fistpll xchg pop mov lock ds sbb (bad) sbb adc sub xchg daa hlt lcall mov icebp push fnstenv mov jnp jle,pt adc (bad) repz dec adc pop daa movsl xchg (bad) (bad) (bad) in and adc outsl pop jns insl mov imulb xchg sub (bad) (bad) pushl ja pop in mov (bad) leave jne mov mov in in inc mov (bad) push mov cmp (bad) (bad) (bad) incl (bad) xchg pop in test loope jge sub ljmp sub xor addr16 dec cmp inc fisubl cltd inc (bad) ljmp jg call fs dec fwait cmp daa pop pop test loopne stos lock push dec mov mov inc jae fimull (bad) mov ret sbb adc adc js mov jecxz add aad xchg mov adc fwait jb xor leave sbb shrl loop aaa pop push xor ljmp adc mov xchg pop push add and fdivrs pop inc loop inc clc or mov ja (bad) (bad) (bad) mov fsubr pop pop mov (bad) and arpl push bound jp mov (bad) decl or or sbb adc repz ret (bad) (bad) lcall add dec sub pop inc in push cmp sbb dec icebp loop loopne (bad) (bad) jg xchg scas mov add mov js movsb andb mov push mov fcomip lcall mov fbstp scas pop adc or mov (bad) call (bad) dec stc ds sahf fcmovne addb ljmp or and sub push push cmp or adc adc add cmp (bad) (bad) jmp movsl mov cmpsb xor or cli shr imul das adc (bad) (bad) jmp into test lea insb fadd xlat xacquire adc xchg stos sbb scas cli (bad) (bad) lcall adc test inc pop fmulp loop sbb sub test adc or sub (bad) out call mov popf push bsf xor jb pop int3 arpl mov mov arpl mov xchg mov sbb pushf lods mov xchg pop pop lret (bad) (bad) jmp pop jmp sub add adc in or pop jnp (bad) jne lods aam mov ljmp mov sahf cmp pop lcall fsubs pop das rolb stos clc inc (bad) (bad) (bad) jmp dec fdivrl (bad) pop insb jp mov negl rcl add jno mov mov std and (bad) push inc add pop neg (bad) cmc mov js das sar outsl cmp popf mov hlt das xchg aas pop mov and (bad) (bad) (bad) decl xchg into lret pop pop icebp ret xchg adc mov adc cmp jbe scas fldl (bad) (bad) pushl pop xor xchg sahf or (bad) cmp push jnp mov inc adc (bad) incl fldl or dec fucom popa pop movsb (bad) push xor (bad) (bad) (bad) call pop loope clc test cmp mov or sub adcl popa cmpsl mov mov sub roll jne test ds and add ja jo rorl rol mov pop into fstpt jns mov (bad) jae dec inc (bad) ja sbb pop jge call in cltd mov outsb repnz xchg negl mov rorl stc add data16 fcmovne jecxz jecxz ljmp (bad) (bad) mov and mov call sbb ds add add (bad) leave mov sub call nop pop mov dec movsb aam sti dec mov jns xor xchg cmpsb jne (bad) (bad) (bad) jmp dec hlt xchg ret inc add test pop mov repnz inc sub rclb call adc push mov lds adc jmp dec and (bad) inc push mov subb lea dec xor xor xchg jle push loopne mov xchg (bad) jg pushl dec xchg push push fdivrl ret jnp aam aam cmp (bad) sti (bad) (bad) ljmp mov test dec (bad) cmpsl mov push roll pop ficom ljmp arpl mov xchg mov add mov fcomip dec incl xor and jmp mov (bad) (bad) incl movsl xchg lea ds leave bound jg mov ljmp mov call aas fisubr mov mov dec xor ficom loop (bad) (bad) (bad) (bad) decl dec lahf je (bad) dec fcomip sub and and (bad) call adc (bad) (bad) (bad) (bad) mov sbbl arpl ja inc jp push push jne insb add icebp leave jg (bad) (bad) ljmp xchg pop and dec arpl in push push cmp iret pop pop (bad) (bad) (bad) (bad) fsubl or sub call iret sysexit add (bad) cmp je push add sub push bound scas (bad) call push insb inc push fistpl pop xchg cs nop mov jne (bad) (bad) (bad) ljmp and xorl adc push popf dec jae or pushf (bad) cmp sar (bad) lcall mov push jle lahf cmpsl in scas fwait jno pop push test lcall leave lcall inc fadds inc adc imul mov push mov jmp (bad) (bad) (bad) decl sbb movl jns jle mov push mov jno xlat insb (bad) (bad) (bad) jmp adc add repz aaa sub (bad) mov mov jno or (bad) arpl outsl cli (bad) (bad) jnp mov (bad) mov or and pop sbbl fadds ljmp or popf lods xchg cwtl mov inc jl in cltd lcall daa arpl sub jl insl out stc aam push out ljmp cwtl adc (bad) bnd leave pushf lcall test incl xchg ret ja mov inc popf lods inc sub add cmp icebp outsl insb pusha lock dec mov sub fcomip (bad) push dec pop sub cmp push rorl mov aad pushf push lret (bad) (bad) (bad) (bad) mov scas inc add and (bad) mov dec (bad) mov shl mov (bad) (bad) lcall pop test mov sbb loope insl mov add aad mov out (bad) (bad) (bad) cmp rcrl adc fdivr xchg pushf in lods push iret sub pop testb jo lcall (bad) (bad) push movsb and sub scas ror mov mov xor jecxz sahf int arpl lcall jge or xlat in (bad) xor mov sub leave mov (bad) cmc jns inc mov in popa (bad) (bad) lcall pop hlt cmp or or fwait inc inc js xchg insl adc (bad) (bad) (bad) jmp enter clc inc (bad) rclb fiadd mov pop dec sbb xor mov hlt popf inc mov add loop pop int3 js (bad) (bad) call mov xlat mov aam mov cmp pop rcrb ljmp data16 (bad) ljmp xchg lods xchg cmp pop jl pusha or ret xchg subl inc or add sub add push gs push inc shlb fsubrs mov (bad) lcall and mov pop mov lods aad fimull fbstp std aad xchg iret addb add adc aas cmpsb outsb push fs (bad) lcall dec lcall rcrl push addr16 inc mov xchg push xchg (bad) (bad) (bad) (bad) decl sahf addr16 lcall xlat lods mov scas out faddl xchg sub es jo (bad) (bad) (bad) call mov sub mov nop mov lock loope xor cmp dec mov loop aaa (bad) (bad) (bad) incl lock jae dec negl mov cs mov pop push mov (bad) (bad) (bad) (bad) jge jl flds or inc (bad) in sub cmc mov imul pushl xchg jns inc (bad) mov dec push fistpl inc (bad) jae shrb mov jns xchg jl sbb (bad) (bad) (bad) incl dec les das lcall jns shlb add xor (bad) js nop (bad) (bad) (bad) (bad) fadd push mov aas (bad) sbb test cwtl dec (bad) pop inc jb cmp pop inc notb ljmp icebp push insb add (bad) lea or and incl and jp xchg daa xor cmp mov and int imul (bad) (bad) fcomip cmp js out jmp and push jae adc jp mov fcom mov (bad) mov aas (bad) xor mov ret push inc xchg in in insb mov jmp mov jbe mov jbe cmpl stos cmp xchg or repnz push mov mov pop push mov jnp in int incl xor add pushl mov mov and push (bad) xor repz (bad) (bad) (bad) jmp push jno stc pop pop pop repnz sub das sub or adc in fldcw clc pop sar pop aas inc mov out jmp sub (bad) (bad) (bad) out scas mov rolb sarb and (bad) mov jp gs std (bad) lcall cmp xchg mov or aad mov call xor ret lock subl dec aaa std (bad) call push dec mov mov xor sbb xor dec xchg and xchg cli popf lea (bad) lret mov (bad) fbld pop mov mov sub stc mov or (bad) (bad) (bad) ljmp xor mov sbb dec jle jg xchg pop and push cwtl mov pop mov (bad) mov (bad) (bad) pushl (bad) stos fwait adc xchg lods sub insb jb dec jmp mov cwtl push dec jns pushl lods cli lcall pop movsb sub shl pop clc mov (bad) (bad) call and loop xchg dec fld1 js xorb fucom call popa icebp xlat adc jg lods enter jp les mov scas cs out adc sub lods int (bad) (bad) jmp add fcomps jg mov push repnz jo ds mov push add dec cmpsl aaa mov mov fmull xor xchg dec sbb push mov outsb fcomps fs (bad) (bad) (bad) mov arpl cmpsb stc add test sub lds push push ljmp call fdivrl jno ja push add push jg (bad) decl inc hlt std mov mov xchg pop xor push push or xor lcall ljmp inc xorl mov scas sbb inc mov movsl cmp std jb (bad) (bad) jmp xchg lcall and aad or test sbb insb dec (bad) mov fdivr xor fdivrs cmp cmpsb (bad) cmc adc (bad) (bad) (bad) jmp ret jge mov int3 les andl scas lods dec adc sbb ss mov and seta mov push pop (bad) ljmp (bad) fsubrs lret sbb mov and insb iret xchg decb inc sub aas imul call stos jle dec je sbb dec or and pop adc fcmovne (bad) (bad) (bad) (bad) call xor leave ficom dec mov mulb lods dec cwtl xor dec push mov dec add sub (bad) (bad) call scas mov lods leave rcll movsl ds icebp cmp icebp in jge add (bad) call leave int data16 pop xchg in lret and test inc xor rcrb xor (bad) xor xor js (bad) adc (bad) mov add mov cmp ljmp ljmp mov mov fs pop xchg xlat (bad) ljmp clc add movsl mulb out xchg mov or das clc (bad) ljmp inc jl push fcoml push push mov push mov cmp and and push pop gs or (bad) pop jle jp push out jle xor (bad) (bad) ljmp add lret mov pop mov aad fstps (bad) ljmp cli aaa lock (bad) pop repz test adc dec add dec fcompl addr16 iret (bad) lods jns mov xor outsb jecxz repnz push xchg sub lahf mov mov (bad) (bad) (bad) (bad) jl xor inc or mov ss adc fsubrl pop mov jg xchg addr16 std (bad) (bad) mov or mov cmpsb sbb add movsl cmp ss add rcrl (bad) adc dec jo xchg mov push jg lcall mov stos pop or jp jo in loopne fcmovu icebp (bad) jmp jns sub pop les dec pop fs outsb pop fucomi jecxz imul pop adc nop mov pop jmp iret (bad) loope int3 pop pusha popa mov push cmpsb mov sub xchg decl int3 sbb adc mov mov imul (bad) lcall mov mov stos sbb jl sub insl or adc jae add icebp (bad) call push xor mov lock fstpl fdivrl jg or (bad) (bad) (bad) jmp gs rol sbb das addr16 xchg mov icebp lea inc das dec imul (bad) (bad) mov dec insb bound pop repnz int3 and push cmpsb out in push jnp clc xlat aad pop adc inc hlt movsl out fucomip inc (bad) mulb roll pop pop cmovle push xchg enter out (bad) (bad) (bad) decl add lahf pop inc out dec add imul jbe pop push mov insb ret clc (bad) fisttp push jae (bad) into lods jb dec inc lds sub clc dec fcmove (bad) (bad) ljmp (bad) push sbb divb aaa jb sbb pop sbb les out clc stos adc les (bad) (bad) (bad) decl sub xor adcl insb jecxz mov sbb xchg test xchg xchg (bad) (bad) (bad) (bad) ds hlt sarb push jp es pop xchg cltd lds stos icebp ja push inc pop loopne idivb push adc in mov jae je mov lcall ljmp mov arpl out jl xchg (bad) (bad) (bad) (bad) jmp xor imul adc sarb gs pop int fisubrl loop adc scas mov fnsave mov ret mov sbb or (bad) jg mov xchg repz mov mov xor xchg jle xor popa and push sub call pop dec jg mov (bad) je dec sub (bad) (bad) decl gs jne aam repz push jo ret cld decl add cwtl pop lret (bad) js mov mov test cmp mov fwait (bad) jg mov jo aad ljmp into push lret xor xchg fcom mov in cmp lahf xchg mov cmp inc hlt jns cs inc push mov (bad) fcomip call lea nop mov dec sbb add lret inc (bad) cmc xchg jb jne jg (bad) (bad) (bad) (bad) fcmovnbe push and outsb lds lahf and fsubs adc lcall push test (bad) (bad) (bad) ljmp andl ljmp pop xchg fiaddl xchg cmc add divb (bad) (bad) (bad) mov push pusha xor movsl ja lock mov jecxz mov jne sub out (bad) (bad) (bad) (bad) cli sub gs lds fldenv jno inc das andl dec mov stos aad (bad) decl (bad) push in dec ret aam dec mov cmpsl fcomps std xchg mov mov add mov (bad) or push mov (bad) (bad) (bad) cmp inc mov mov adc xchg cmp jmp mov (bad) or (bad) (bad) incl loope pop and adc pop lock push push ss out negl in js (bad) (bad) (bad) incl mov jmp mov mov pop or add les or mov les (bad) scas or in (bad) (bad) push mov mov mov mov inc fcmovnu cli out cltd mov add or (bad) (bad) jg ljmp sbb pop lods sub add sbb (bad) pushl std (bad) jbe jne jmp sub mov mov dec lods (bad) sub push popl mov cli mov mov rolb loopne insl lods (bad) (bad) (bad) call or cmp mov add pop mov cmp ljmp push mov dec hlt push pop sub pop sbb scas cmp mov mov mov sahf and add scas push xor sbb push adc cld es call sbb pop mov jp xchg dec mov pop mov aaa mov lret (bad) (bad) (bad) pushl iret lods stos push or notb (bad) int3 pop out lods cmc xchg cld fidivrl test aam (bad) (bad) (bad) (bad) fmuls or dec fucomi push cwtl insb push cmpsl imul add int3 push (bad) (bad) (bad) (bad) (bad) jl enter mov and dec lods movsb pop movsl icebp and out inc mov add cmpsb das (bad) (bad) (bad) push sub iret es jo pop mov push pop pop sbb push jns cmc or xchg pop addr16 pop dec xchg (bad) pushl outsb cmp in test fiaddl (bad) (bad) incl (bad) push cmpsb mov inc int3 (bad) aaa dec gs push mov pop (bad) mov mov push lret je pop fprem add repnz (bad) cli cmc loopne into popa and cltd inc out cltd mov outsb fcmovne xchg fadd in out mov pop cld mov mov dec mov cmp push ficomp leave jns (bad) (bad) pushl mov push lret test xchg out (bad) data16 inc jno and cmp (bad) test (bad) (bad) (bad) call loop xor leave sahf sub adc icebp mov call test (bad) (bad) incl inc test push adc (bad) mov add lret adc and out pop aad add (bad) (bad) (bad) jmp mov aad ss rcl adc mov out and (bad) (bad) (bad) ffreep (bad) or rcl lahf cmp xor push push or insl pushf in or dec adc (bad) (bad) fcomip inc (bad) mov push xchg fwait inc aaa or int std pop pop pop pop movl (bad) (bad) mov mov pop mov mov jno jb cld push mov insl xchg sarl xchg ja outsl xchg and test jb outsl pusha (bad) (bad) (bad) jg (bad) mov jecxz das rcll test (bad) lods aad repz fs (bad) (bad) (bad) jnp and mov adc (bad) in cmc fistpll adc add (bad) (bad) ljmp pop je movsl dec pop or stos xchg ret fimul xor mov push jl (bad) mov (bad) decl adc imul push cs ja and push jnp mov icebp repnz (bad) (bad) lcall add lret leave sub push in icebp mov or daa std pop inc ljmp repnz dec lock into mov mov push mov adc pushl push xchg inc in jecxz mov aad insb incl add sub rcl jb xor or (bad) lcall fisubrl mov push sub aam sbb or (bad) (bad) (bad) (bad) sti jl nop mov fwait out push push mov pop sar stc adc mov ljmp decl xor adc jp pop push aad xor inc fnstsw shl mov decl ret in mov rolb std ds add popa aam lods (bad) aaa (bad) (bad) (bad) (bad) call push movsl xchg inc xor xchg or xchg xchg push and fidivrl mov push (bad) (bad) (bad) incl xlat es inc pop or hlt lret std mov xchg jb or imul mov pushl xchg jle and pushf sbb xchg insl and or dec jne ljmp xor movsb sbb out das ljmp (bad) pushl inc stos sub cmp test fcmovnb insl addr16 ss (bad) decl push and or adc add movsl popa (bad) daa pop (bad) ja push xchg (bad) ljmp in jecxz cmp adc inc popa jl gs sbb test dec pop xchg cmp (bad) push adc cmpsl lret imul inc clc fcoms (bad) mov in xor (bad) (bad) call (bad) (bad) mov daa mov test pop xor or push mov stos sub mulb (bad) decl sbb sbb mov mov jb outsl xorl add pop test sbbl call and cs loopne nop lahf jns push cmp repz das and out clc (bad) (bad) js in inc lret add cltd scas xor push adc mov cmp (bad) pushl sbb jns push fild sub sbb adc repnz push repz cwtl dec mov lcall (bad) sbb sbb xlat roll dec and je (bad) (bad) lcall mov xchg mov jmp rcrb push fisttpll scas daa (bad) (bad) (bad) jmp mov sub clc jo push mov fiadd mov (bad) mov dec inc sub or jmp pop in xchg iret sub dec sub repnz (bad) (bad) (bad) lcall mov lret insl in mov rcrb jp mov mov fmull sbb stos jg loop lods lds cld ficom (bad) in fldl2e mov jns mov xchg (bad) (bad) (bad) incl icebp call ja subb out adc pop or add inc jg adc das sar sub inc je cwtl outsb and in faddl or (bad) (bad) (bad) jl push cld xchg xor sub jns popf mov int3 sbb movsb leave mov into nop (bad) pop (bad) (bad) (bad) (bad) call test jmp mov jmp pusha ret cmc sti pop shrl xor (bad) mov clc mov xchg sbb dec xor lock (bad) jmp push int3 xchg call sbb sub xor lds daa (bad) dec jp jnp enter (bad) fist or pushl test stc ret (bad) xchg stos pop cld (bad) (bad) mov call mov icebp cmp mov sbb (bad) (bad) (bad) fucomip xor notl and loopne sub ds inc sub test sbb scas clc ljmp ficoml adc mov andl sbb mov dec inc div (bad) (bad) incl xor fldl inc lret fcomi push repnz cmc sub lret dec shrb adc lret gs fwait jo iretw (bad) mull (bad) (bad) ljmp sbb sti xchg dec (bad) arpl fnsave xor mov add loopne sbb pop inc jge data16 out mov aam mov (bad) (bad) incl cmp mov icebp addr16 pop fs (bad) push (bad) mov jl (bad) (bad) (bad) (bad) (bad) sbb mov je pop sarl mov dec cli mov jns (bad) (bad) (bad) pushl pop dec and out mov hlt jb mov frstor mov cmp jmp incl jae dec data16 adc test fnsave bound (bad) adc pop cmc xor (bad) fcomip (bad) mov and mov or das add add push sub mov sti jb nop lea sahf test cmpsl mov hlt insl xchg fimull (bad) decl mov (bad) pop jp pop jno jno ficompl out lcall aad mov (bad) lcall rep enter inc and sbb aas ljmp push jg jne lds outsl adc pop popa dec fnstenv (bad) (bad) lcall iret add push loopne xchg adcb xchg push inc mov sub push enter pop lcall or sbb subb sbb enter das pop and loop dec push xchg pop fcmovne out cmp cwtl inc lret les (bad) (bad) cmc jo add clc (bad) ljmp (bad) jb jnp imul jns inc mov add fdivrs loopne mov (bad) inc inc xor mov imul (bad) ljmp hlt movsl nop or ss pop lcall in ret or cld (bad) (bad) cmp fwait out arpl stos cs fcompl xchg iret mov dec add push push scas mov stos push pushf inc cmp out and out inc call inc (bad) jg adc in lods lock xchg fcomip adc cli inc repnz push lcall cmc push or jg lcall test notl cld out dec call xchg xchg or push decl leave daa fcoms es in mov clc fcmovnu arpl lods ja fwait jp movl push fnstsw and aaa mov out les sub cmc xchg inc lret das cli (bad) jbe xor xor inc adc cmp into mov (bad) (bad) lcall js incl or sub sub les add loope mov jl (bad) (bad) (bad) incl popf in bound js push dec sbb lret int lret sbb lret pshufw (bad) lcall mov fnstenv test push gs xchg jae sbb xchg (bad) (bad) (bad) jmp dec jns call das fisubr xor sbbl (bad) (bad) (bad) dec dec adc push mov and sub pop sub insl loop enter call and add ljmp lahf lcall mov (bad) mov je mov repnz scas adc inc aad (bad) pop lods test mov inc lock pop or jo sbb mov je (bad) (bad) (bad) pushl dec add repnz cs mov jl fdivl out mov scas mov inc clc and jmp jo fstps into cli cmp ljmp push imul fbstp (bad) (bad) cmp rep dec jne dec cmp cmpsl lds mov rcrl cld int3 jb adc add (bad) jmp out mov cmp xchg dec jns out popa in xor sub scas add and jnp lock xchg lret mov sub dec or (bad) (bad) ljmp ljmp rcll fisubl mov in addr16 outsb mov (bad) (bad) lcall jbe shrl push sbb dec ret inc xor ja add and (bad) (bad) (bad) call xchg movsb jg cmc andb stos pop (bad) adc movsb fisubr out mov jb femms jl (bad) (bad) (bad) dec sub aaa dec insb mov cmp jbe sbb mov mov lret pop shr dec mov (bad) (bad) call ret enter int pop mov test lods mov inc add rcrl loopne cwtl cmc push fwait mov movsb stc fucomip xor out rorl sbb inc cmp add lret jle out insb push in push out in xor lahf out xchg sar jg pushl shll ret or mov out sti lcall out clc incl ficomp (bad) sbb push mov (bad) cmp stos sbb outsb enter (bad) (bad) (bad) jmp jge mov inc jle xor (bad) push mov pop enter push sub (bad) (bad) incl sbb std idivl mov mov jge mov and mov mov fisttp daa pop mov pop push jo (bad) aaa mov (bad) mov mov jne pop cmc jle mov add dec jle mov jp jo (bad) (bad) (bad) lcall stos mov imul cmc sbb gs jae or dec xor and lret (bad) (bad) push push (bad) scas test jne (bad) adc push in daa jnp sbb jle xchg in jbe fwait inc (bad) (bad) (bad) (bad) jnp sub pusha mulb sbb dec loope add or icebp loop dec addb leave sbb (bad) (bad) dec sub sub out aas push add arpl sub fs or icebp cmp mov sahf movsl dec mov std out rol test pop jg bound adc out xchg (bad) (bad) incl add xchg fimul xchg jns mov (bad) (bad) jmp incl in popa repz sbb imul pop pop mov cmpsb (bad) (bad) lcall and shlb nop dec or cmp dec fidivr push inc sub (bad) (bad) (bad) ljmp adc xchg jno add add and mov aad push adc fdiv (bad) (bad) call dec dec pop lret call xchg push (bad) jae out xchg (bad) outsl lcall scas lcall fidivr jg popf cmp or pop mov pop es push idiv (bad) mov mov or jge cwtl or jbe jecxz decl xor test sub sbb mov sbb mov add shl (bad) ljmp jl rorb push dec (bad) rorb fcoml (bad) push push sub (bad) (bad) (bad) ljmp mov orb mov push outsl loop (bad) jo adc or mov stos (bad) (bad) (bad) incl mov fisttp xchg gs dec cmc test cmpsl ja cmp subb dec cli mov mov push xchg jg test pop ja pop cmp out xor dec subl fwait and (bad) (bad) (bad) incl fiadd mov outsl lea sti xchg fwait jae dec cmc push mov push jge jo adc (bad) (bad) cmp inc or fist jo (bad) (bad) (bad) jnp add add (bad) sbb lods nop inc imul push or add ret add aas mov (bad) call repz cmp ret nop out sub xor sub ds (bad) imul ficoml std pop add mov mov mov scas mov (bad) jg xor adc daa pop jb out or pop push sbb into fisubl pushl ret mov stc add mov (bad) mov shl cld mov dec mov xchg sub mov movlps fwait mov call cmp pop push jmp jne xor cmp dec daa lods jb subl outsl jmp jbe add lret (bad) jmp adc mov and pushf rolb lods bnd (bad) (bad) (bad) call scas fnstcw and adc xor std mov je imul (bad) (bad) jmp xchg and mov subl fildll fdivrl fdivrs jl (bad) inc std mov mov adc mov and dec lahf aam icebp test add inc in pop sub mov fisubr sarb mov or xor cs add mov xchg (bad) (bad) lcall cmpsb imul aas mov sub push jo movb out push xchg (bad) (bad) (bad) (bad) mov cmp leave lea add or xchg adc jg add fs cmp das mov and imul and cwtl dec mov cmp inc scas jecxz iret jnp or dec call (bad) (bad) (bad) (bad) jp xchg adc push ret xchg sub (bad) add or mov add jge (bad) (bad) (bad) call std (bad) ja inc clc jmp ret adc mov fwait int jl mov in in (bad) inc (bad) (bad) (bad) ljmp jmp loope pop sarb dec sahf loopne pop jo (bad) cmc imul xor (bad) (bad) lcall jbe push rcl mov dec aad mov mov cmovno jo (bad) (bad) decl fsts dec sub loope ljmp and fwait cltd in jp push sbb (bad) fcomip pushl xchg pop dec mov stc loop or lret mov jmp (bad) (bad) push jg push or loopne (bad) mov out fdivs inc sbb scas lds mov inc aas xorb add repnz stos add mov push jbe int xchg mov or rorl subb ljmp xor push pop icebp nop dec icebp popa ss mov (bad) (bad) (bad) cmp add arpl inc dec pop pop sbb or or aas (bad) push ljmp clc pushl cmp mov ret mov cmp lret movsl lods es (bad) (bad) incl jmp xor sahf mov shrl fcomip (bad) lcall cmpsb push jle sahf mov icebp outsb leave xor hlt or pop cmp imul out sub ja movsl jb jecxz ljmp pop bound outsb mov ja,pt inc fnstcw lea (bad) (bad) (bad) jmp inc inc mov out sub pop aam loopne cmpsl mov pop jmp mov (bad) (bad) lcall imul pushf xchg lods lret adc cmp cltd in ja inc loope adc sub jp jbe pusha into sub inc and arpl push and and (bad) (bad) pushl pop push sub rcr pusha loopne and dec (bad) jge in jle cmp aad dec mov out (bad) (bad) mov pop dec pop rorl or cmpsb pusha xchg xchg (bad) pop jo pop in daa (bad) (bad) (bad) incl fwait xchg jle mov push fisttp aam pop push mov pcmpeqb mov xchg mov ja (bad) lcall mov ss lock cmp adc (bad) decl pop sub in sbb out (bad) in daa push ja jns enter (bad) call loopne mov inc pop inc movntq daa and sbb stos xchg icebp (bad) jmp icebp xor adc adc fprem1 das push popa pop xor fdivs mov test into movsl inc movsl mov aaa xchg xor mov inc jnp nop pop clc (bad) pop inc xchg dec sub das imul add cmp lcall jne jne (bad) shl xor daa jns rcrl pop jg (bad) fistpll xlat mov pop insb cmpsb cmp pop hlt jmp movsb and ja sub xchg ljmp imul xchg mov push stos dec xor repnz test sar (bad) call lahf and data16 es test xchg (bad) jo aaa cmc aaa lods xchg adc xchg mov or (bad) jmp mul mov or and pop hlt jns inc inc cwtl sbb pop (bad) (bad) (bad) ljmp mov dec int3 fucomp sbb inc lea fwait lcall data16 sbb movsl lock cltd dec jns dec cltd call cld je adc (bad) call mov test mov mov or (bad) (bad) jg icebp inc (bad) fnstsw sub idivl fisubrl xor mov or sti jg ret bound push std add dec push ret push inc push jg sbb imul stos int3 daa (bad) sbb insb into push or cmpb (bad) decl or arpl pop test hlt in xchg popa mov sub out lods aam icebp cwtl (bad) (bad) jmp es inc xchg ss mov jmp xchg add (bad) ljmp mov js lods pop sar and add fldenv (bad) (bad) (bad) ljmp inc inc push jae scas pop pop shrl sub sahf cld xchg js in mov inc out dec (bad) (bad) fcomip loopne repnz test push inc cmpsb inc in pop cld lds rcrl mov (bad) (bad) (bad) incl cmp jecxz test jp adc xchg inc mov add push mov lock ljmp movsb idiv daa and lods sbb or inc fisttpll mov jg mov mov inc dec mov popl (bad) (bad) inc lret les (bad) fdivrp push js dec mov push lret xchg and xchg shlb sub stos repnz rclb icebp (bad) jmp std cmp dec inc sbb mov dec sbb cmp fmull push out jle jbe das popa adc jno or out xchg test icebp or ljmp popa pop pop and stos xchg mov mov sub pusha adcl lock stc insl out xlat scas int rorl jecxz push ljmp push pushf stc call lods cli xor mov dec dec dec sub sbb sub mov jmp jmp les xchg xor test stos ja shl repz std (bad) (bad) decl cmc repnz popl lock js je or jb mov xor stc sub (bad) (bad) pushl mov xlat stc xlat loop push incb pushf leave test aas imul dec out xchg dec (bad) (bad) (bad) (bad) push out ret iret inc lcall test cltd outsb iret ds sub lods and push (bad) (bad) (bad) call popf pop adc dec and int3 push jne jnp lock cli fucomi test repnz cmp ja (bad) incl dec lahf adc sub iret dec jge lret dec pop pop imul (bad) and mov or push xlat (bad) std lods jp pushf loopne (bad) (bad) (bad) (bad) mov push mov fbld add inc sbb mov jg cmp adc sbb cmp lods sbb lret (bad) (bad) (bad) dec arpl data16 imull push repz aad dec mov arpl std push das js sbb cmpsb arpl (bad) (bad) lcall pushf jmp xchg daa pop nop imul das mov in push loop ljmp (bad) xor push pushf inc add sub movsb (bad) pop jecxz (bad) (bad) (bad) jmp sub or jns cmpsl pop xor sbb jae loope fs (bad) (bad) (bad) incl loope jnp xor cmp pushf call fidiv push pop xchg aad mov (bad) mov outsl cwtl fidiv dec bound push pop adc mov jne or jnp (bad) lock dec sbb cmp stos (bad) cmp pusha cmp lahf (bad) decl mov pop mov xchg cmp adc jp (bad) (bad) jmp insl (bad) dec test fs mov std iret mov outsb test mov shrb cmp call xchg lods ss jbe sarb sub or inc cmpsb jl pop add jg (bad) mov mov pusha inc xor inc sahf xchg mov ret pop push and (bad) (bad) (bad) push out push out bound test out xchg push sbb push jae enter mov mov pop iret mov push mov pop add xchg fisttp and mov (bad) (bad) (bad) ljmp lcall cltd pop inc rcrb sbb jnp jp lret popa (bad) idivl (bad) ljmp or lret shrl (bad) ss xor jno ja jns (bad) jg and cld (bad) imul mov jb mov call sbb dec xchg pop dec (bad) sbb xchg test ret ret or test cs mov xchg sbb sti inc mov dec outsb xchg inc int mov mov dec (bad) leave dec mov add roll sub stc dec jo mov jne dec popf bound adc popf ja cli and mov xor pop mov dec addr16 xchg inc pop mov mov je das cli (bad) incl js fimul pop out ss dec fcoms sbb cmp (bad) (bad) pushl cmp loope (bad) sbb mov in inc adc (bad) clc jbe sub je pop and push xchg or add push jae mov in sahf jle mov leave inc arpl ljmp (bad) (bad) out lds sbb inc mov sbb xchg jle push pop outsb pop and push rclb lock jno stos outsb clc (bad) (bad) ja push jg adc and sbb mov mov ficomp pop fwait (bad) (bad) decl lret mov arpl iret dec jb sbb les fs shll ljmp (bad) adc enter sbb in mov pop daa pop mov aad (bad) (bad) call int3 xor daa and pop mov cmpsb push mov mov inc sub (bad) pushl sub out mov add adc repz add in (bad) (bad) call (bad) push xor int3 xor aaa push mov fisttpl hlt shl cmc (bad) (bad) ljmp xchg fwait cmp xchg jecxz and fisttpll in out and (bad) ljmp mov and int int3 dec out xchg and xchg jae jo lcall (bad) (bad) call mov test aam mov ss test int aam mov cld (bad) (bad) (bad) jg call cltd (bad) cltd les mov lods inc fs sarl fdivrp (bad) (bad) call int cmp push int3 jge push aaa fisubrl stc ljmp mov (bad) (bad) pushl jmp xor jnp add mov or mov sub popf negb (bad) (bad) jnp dec daa popa lds mov ret lods lods js xchg ret stc adc lock out dec xor stos (bad) (bad) decl std (bad) and ret pop fildll scas lret lret int fisub outsb mov adc or les (bad) int3 xchg mov stos ss inc xor mov pop sahf pop inc sar pop (bad) add push in xchg add jae (bad) (bad) call mov inc sub loope and push (bad) or sbb xchg xchg adc ret sub sar (bad) (bad) decl data16 xchg mov mov aas movsb cmp adc fidivrl aad les or (bad) (bad) ljmp mov push or addb mov or (bad) lcall cli or and sub loop add cmc pop jge jnp (bad) (bad) (bad) call and repnz iret push int3 int adc jnp scas mov pop (bad) insb lock (bad) call aas std adc push shr cltd xchg lret pusha daa and push or jns mov (bad) (bad) (bad) ffreep sub bound push loop mov xor test jno (bad) push pop insl sbb mov cld (bad) jmp sbb xchg in lods imul and xchg jno (bad) (bad) (bad) lcall or or add pop and (bad) test rcr call inc test jg and dec lcall clc maskmovq xchg mov xchg mov les (bad) scas sub sbb dec (bad) mov in mov mov jae mov in push xorl (bad) incl adc mov sar pop pop jnp mov fwait lea stos (bad) jg ljmp xor arpl ret mov push pop (bad) out std xor add (bad) (bad) jmp cli outsl inc aam mov in insl jmp jge jle enter inc jg loope sub (bad) jmp add cmpsl sahf and shl pop test (bad) fisub dec mov jg (bad) mov outsl sbb pusha sbb inc outsl (bad) mov (bad) decl xor fs sub ss xorl sahf enter or xor prefetch or (bad) rolb dec popl push subl mov inc mov mov or jg mov lods out push scas mov popf jb gs ret pop outsb clc sbb (bad) mov andl or loope xor sar (bad) (bad) decl pop mov inc incb mov mov ja and push push xor mov mov (bad) (bad) ljmp cmp aam mov mov ffree or sub daa gs push dec loopne and test jmp out push jecxz and jmp adc orl cmc adc (bad) (bad) pushl das mov sti ja jns,pt jne lret jb add mov dec aas jecxz (bad) pop (bad) ljmp mov nop btr pop mov test jl (bad) mov pop cmpsb hlt xlat jl imul cwtl (bad) (bad) (bad) lcall out jns mov jg andl sti xchg mov push push insl or jne call mov push sbb xchg xchg (bad) call stos f2xm1 repz (bad) (bad) pushl xchg add mov jo std aaa dec aaa scas jl in adc pushf push mov (bad) call adc sub adc or pop (bad) jecxz mov push xlat ljmp add dec (bad) mov mov jmp data16 (bad) (bad) incl inc lods push sub push pushl (bad) mov inc jmp xor decl inc and mov mov sahf bound mov ljmp ss push sbb mov sbb pop cmp in cmpsl in stc (bad) (bad) (bad) (bad) in mov in icebp jge bnd inc inc aaa addb mov sub fidivr jnp adc je mov mov add mov mov (bad) (bad) decl pop call or jne test rcll push cmpb pusha std (bad) pushl cmp push rcrl fildl mov (bad) jg xchg ret lock (bad) mull pop or cli popa mov ret or (bad) inc pop sbb shr and jnp sbb cltd dec loop and cmp sub (bad) mov mov incl call sub aad (bad) pusha or es mov data16 xor jl mov mov (bad) decl out mov jne in rorl ret pop push in jb jae add (bad) jmp sahf pusha dec xlat jne sbb sarb fmull pop dec push pop pop cld ja fdivr (bad) (bad) lcall dec pop dec adc ja test cmp and xchg imul xchg (bad) (bad) (bad) lcall or adc hlt cltd por in dec mov push inc dec roll xor sbbb (bad) (bad) (bad) lcall cmp outsl cmpsb cmp mov cmpsl xor xchg fisttpll cmpsb lcall dec out or stc adc and int in es sbb pop cli pop ljmp push inc xor fidivr shr dec mov fdiv push jle xchg cmpsl insb in jmp add call mul in fistp shrl pop mov (bad) mov mov insb mov add push mov mov adc push or test mov (bad) (bad) fsubrp pushf outsb or xor or pop out jnp frstor and lea imul incl pop jp push (bad) lods push (bad) jb pop jbe jns test fbstp adc (bad) (bad) call in mov ss inc mov ss icebp pop add xchg jmp lcall (bad) (bad) push pop and frstor (bad) mov lea (bad) push js mov xchg xchg push imul push mov jge dec in cs inc inc aaa pushf adc mov (bad) (bad) lcall inc je jne,pn xchg ror mov leave xor addr16 pop stc in xchg stos (bad) ljmp subb or push push pushf cmp add (bad) (bad) (bad) sti push mov mov in inc sbb jmp add xor fcoms loope fcmovnb (bad) call lahf cwtl pop cs mov stos xchg inc (bad) jmp push pop push sti push stos ss mov mov (bad) mov repnz (bad) (bad) lcall or pop and jge jp xchg (bad) mov dec inc int3 out in lods adc and movsb add (bad) (bad) (bad) cli or imul mov push jecxz jle sti or sti adc in (bad) (bad) in jmp loopne xorb lds add mov sub jge outsb icebp hlt mov jno (bad) ljmp cli gs xchg xchg ror out imul xchg jp loop add (bad) lcall dec add xor dec mov lds mov sub rcll (bad) in mov aas rcr test add sahf fwait js mov push repz stos xchg lds std lret (bad) incl fsubs shll insl in dec les add sbb dec ds repz (bad) (bad) ljmp nop rcll iret out mov cwtl inc in and pusha xchg push gs add ret scas and or scas nop (bad) (bad) (bad) decl or fcompl adc inc cli imul aaa xor mov icebp (bad) (bad) clc out pop fucomip adc cmp call ret push jg sbb enter add (bad) decl jne pop jmp dec iret mov push ret roll push movsb (bad) (bad) (bad) jg movsl (bad) mov jg arpl lret (bad) jg rcrb pop cld test iret popa jle pop (bad) (bad) (bad) jmp imul in loopne push mov leave mov cmc mov inc or arpl (bad) call adc inc clc insl fst sbb popa xchg and repz mov movsl mov sub lods stos shlb and cmp (bad) (bad) call hlt div push lds imul les sub jbe cli repnz pop (bad) mov pop dec cmp (bad) (bad) decl jp scas adc mov mov repnz pop lods jmp in sbb xchg inc test cmp jp push cltd data16 cmp mov and idivb mov push mov dec pop (bad) inc aad ret push push or lods push in popa (bad) (bad) (bad) cmp and ja jle adc adc lret icebp pop test xchg adc push out xchg mov fnstsw jecxz ds (bad) jle scas xor ss (bad) (bad) (bad) cmp imul jne (bad) test aad bound aaa stos lods jnp dec cmp jg (bad) (bad) fbld add inc xchg arpl mov pop pushf dec jne xchg bnd or (bad) decl fidivrl aam sub lods clc mov and add add cmp jl repnz mov mov (bad) icebp loop mov cmpsl (bad) int (bad) (bad) (bad) jmp jb xor mov or jmp xchg out stos pop (bad) sbb out jo mov popf xchg (bad) jmp push dec pop push and ss jmp aad jp scas popa xchg xchg (bad) decl dec adc push sub sub scas pop divb (bad) (bad) (bad) ljmp cmp dec mov ja int jl sarb dec rcrl mov inc sbb (bad) (bad) (bad) call jmp sub das jmp popf push jae cmp fstpt cmpsl mov ljmp jg (bad) dec (bad) gs test pop cmp push loopne lret push scas xchg mov enter std sbbb ret jl and and cmp data16 test loopne or mov cltd pop sahf daa mov ret add cmp arpl movsl and ljmp call fstps sarb pop notl jae jle loop std int3 (bad) (bad) (bad) ljmp std adc adc repz dec clc sbb stos sbb es (bad) (bad) (bad) decl movsb hlt stos inc sub inc scas leave imul xor mov jle test (bad) incl data16 and and xchg mov and inc inc jecxz (bad) call jns mov subl xchg mov pop and inc pop inc inc mov or inc sbb lds cli ljmp mull sbbl (bad) and xchg fcom rolb daa (bad) push pushf hlt xchg jae mov fs xor sub orl test mov add xor mov sub fisttp mov (bad) (bad) decl pop testl sbb rcl insb notl push and (bad) (bad) pushl pop in inc inc push inc repnz in sti xlat fbld (bad) andl daa sbb jl jo push insl mov bound bound xor loop jp pop lock ds mov jae jnp mov sub loop mov rolb xchg mov (bad) pushl pop leave xchg jle and fstps mov sub rorl cmpsl dec decl push sub lods sub and shrl pushf xchg aad stc fldl enter incl sarb push in add jg adc push outsl inc pop es call pop mov fiaddl pop in xor mov jecxz cmp inc inc rclb loopne je icebp arpl xchg xchg movsb mov pushl inc lret adc and stos ljmp fldt leave sar (bad) lcall or cmpl cmc xor pop jp push add push fcmovbe xchg std fwait outsb fs or mov movsl add scas iret push jae sbb pop push fistl lahf mov (bad) (bad) (bad) cmp mov jno scas (bad) mov leave or add out clc nop fisub (bad) lcall incb pop fwait mov mov jge and inc lock adc pop in push das sub ret imul das sub sub je sti xchg hlt (bad) (bad) (bad) incl cs xchg and pop lea cmp jg fildll or cld pop cld (bad) jmp dec (bad) je sbb mov test les (bad) (bad) (bad) decl fs xor xchg push jmp fdivrs scas jl in lahf lret lret (bad) (bad) (bad) lcall jge xchg adc (bad) jb movsl and or out leave push (bad) jge pop (bad) mov (bad) jmp repnz xor (bad) cmpsb or les pop pop dec testl lock and hlt sbb sub xchg mov imul addr16 inc push inc and cli xchg mul mov lock mov out cli (bad) jmp fisubr (bad) mov test stos push int3 jbe or xchg (bad) jg decl daa sub or mov pop pop adc xchg gs popf and inc pusha fistl inc sbb cwtl jns jae xchg (bad) insl rcrl mov aad ljmp or mov aad movsl in jp and xchg fdivrp mov mov push jle sbb aaa push jo and adc mov fwait cmpl xchg mov jns int test fwait ja dec scas lret iret sub cmp cltd fidiv cmp mov out dec icebp lods test std (bad) ljmp inc lea cmp int3 in pusha test sbb (bad) (bad) decl hlt clc in xchg push movl int3 (bad) mov sbb sti std adc (bad) (bad) (bad) call fldenv fstl xor mov pop sarl gs xchg mov (bad) (bad) (bad) call dec xor arpl out int cltd sub xchg pop xchg sub loope (bad) decl int3 (bad) pop xchg mov test pop movsl repnz cwtl adc (bad) aaa push popa cli xor cmp in xchg (bad) (bad) ljmp mov stc cmp jge mov imul or or (bad) (bad) (bad) (bad) ds stos cmp fmuls inc cmpsl sbb lods cs push or dec (bad) fidivl mov lret insb or incl or mov mov lods stos adc sti sbb test cld imul xor xor mov fcompp out cwtl icebp or decl std imul out pop jb xchg xor inc add push sub cmc (bad) (bad) (bad) lcall mov outsl and xor into xchg jl (bad) (bad) (bad) (bad) incl pop jp cs xchg sbb dec ljmp das jp xor ljmp xor rorb and push (bad) cmc add jne jg lock dec lods incl incl in inc cli fiaddl push (bad) (bad) (bad) dec out sub xorl cld cmpl mov das inc pop (bad) (bad) (bad) incl push jge lret mov stc dec mov xor mov pop pushf into cli (bad) (bad) (bad) cmp pop sahf clc sahf cld lahf jno out sub dec mov aaa fmull and push push jge (bad) ljmp scas inc sbb test not cmc or test icebp cmpsb iret sub inc pop (bad) (bad) (bad) inc imul sub inc mov dec sbb mov push test (bad) decl ret sub xchg aad mov in int3 xor mov ret xor or (bad) (bad) decl (bad) push lds pop lods orl mov add jno jp (bad) (bad) ljmp aam out nop std clc scas inc dec and (bad) push add cltd inc or cmpsb repnz (bad) (bad) call enter test jecxz xor jae sub push aam jo out arpl or adc hlt inc mov mov test inc jno xor shlb jo pop adc dec xchg test (bad) loop pop cmp shlb repz js clc jnp add pop mov ss dec pusha mov and xor fcomip stos sbb lret cmp arpl cmp pop call (bad) (bad) pushl lds loopne jl rcrl (bad) rorb jb int3 jmp in ss (bad) (bad) ljmp push cmp aas jne outsl mov (bad) stc addr16 jbe lret faddp cltd hlt pushl mov or xchg sahf loop loop or push adc fldl (bad) jg or pop sti mov jecxz mov sub push (bad) call insb icebp js mov xor jns jae aad daa sub int3 and sub lret stos jae push xlat lock jae (bad) (bad) ljmp mov fnstsw cmpsb push imul andl jle mov decl outsb cmp push ljmp cld fcomps mov fdivl (bad) call xor daa movl jo and mov dec mov and loop (bad) std adc mov xor pop inc jno je xchg pop xchg (bad) pushl jge pop push push lds jmp xlat mov cltd xchg fisttpl (bad) pushl dec xchg or les int xor sub xlat (bad) jmp pop push or push imul cmpsl idiv push (bad) dec sub (bad) rclb mov (bad) decl adc adc es fmulp dec jmp mov rorb movsl cmp mov push lds xchg ucomiss (bad) ljmp xchg repnz adc xor std stos hlt or rorb (bad) outsl pop (bad) dec daa add (bad) (bad) inc mov inc or mov sbb jo fs or inc or lods stos fs mov rcrl mov lock into push sarl sbb (bad) jg lock adc mov and pop and (bad) (bad) jg and mov lds pushf das xor ds adc sbb divb (bad) (bad) (bad) decl iret mov jae les pop fist push cmp push inc negb jmp sbb aaa dec xchg sbb jl popa and out adc mov decl scas or js insb pushf and mov push js jecxz pushl mov aam mov push xor sahf jns (bad) (bad) (bad) call incb loop and mov addl nop stos cmp push hlt fdivrp pop cmc (bad) in int push testb sub stos stos (bad) int3 test jp fs cli (bad) (bad) incl pop (bad) (bad) lods mov pop push and (bad) (bad) ljmp jne adc or fiaddl stos add inc addr16 push cmc loopne pop enter (bad) in (bad) incl sbb out (bad) add adc mov scas mov cld (bad) (bad) jmp lret lret (bad) mov pusha les xchg fdivs pop arpl sbb (bad) (bad) call xchg lods jmp imul fmull mov aam xchg push mov xchg cwtl ffree (bad) (bad) incl into sbb or push rcll and pop test (bad) jo inc lods in ret clc hlt cmp call sbb mov movsb fstl dec or cmp lock xor jmp aas (bad) mov imul mov pop sub popf mov jge ret mov sbb (bad) (bad) (bad) inc insl lret inc lds std add lods outsb outsl mov mov jae adc popf sub jecxz xor (bad) (bad) decl adcl xor cmpsb jmp xchg pop mov push push movsl out into add (bad) jecxz fwait add outsl mov pushf scas xchg hlt jnp (bad) (bad) lcall or and roll or xor adc (bad) (bad) (bad) lcall std xlat (bad) test lock ficoml mov ja sbb pop lods mulb (bad) call xchg std pushf cmp xchg imul hlt adc clc or mov insb cli mov test clc (bad) (bad) (bad) jg ds sahf lea (bad) mov jo arpl gs or mov pop hlt jg (bad) xor jnp ds movsb jns push loopne jl sti dec (bad) ljmp lret or mov lea and jmp daa test adc gs icebp rorl lods push idivb mov xor pop (bad) out cli decl aad add mov push (bad) hlt imulb fs dec fcompl jecxz fisttp stos not jmp mov imulb loop jno pop pop pop cmpsb aas push (bad) (bad) (bad) mov push fdivl jno add xchg cmpsb inc nop mov jno adc add fsubl icebp adc lret push ds enter cmc jg cmp xchg push sub sub pop jge iret mov out clc xlat fs aam fcom mov add mov inc sti ret jb xor hlt (bad) ljmp pushf mov cld xor iret lahf cmp rcl (bad) (bad) (bad) pushl pop cltd scas popf cmp (bad) adc std sub fdivp xlat jno dec je mov (bad) (bad) fisubrl pop sub pushf jg into aam or clc lahf popa out je adc lods sub (bad) (bad) (bad) dec les sbb std aas or out sbb cmp mov push sub push cmc cmpsl (bad) (bad) (bad) (bad) ljmp ret pop sbb sub cmp gs sbb xchg sub (bad) push imul in (bad) mov icebp lcall cmp cmovo ret stc inc cld mov xor popf test (bad) push decb insb sahf mov je or mov push jge inc mov mov (bad) (bad) call mov dec into jno mov sti ds out je inc mov enter (bad) xchg xlat (bad) (bad) (bad) sti adc and mov cld cmpl mov mov (bad) (bad) jg arpl clc inc cmp clc cmp pop ja es jmp mov (bad) (bad) incl jbe or mov mov jp scas lcall (bad) jmp jno xchg nop into (bad) (bad) (bad) incl xor das out xchg fcoms adc or push imul and adc pushl or mul les jp jmp (bad) ljmp mov adc jmp (bad) fcmovnu test cmp mov fdivr mov adc mov popf and xchg out scas or bnd (bad) (bad) jmp xor xchg enter pop lcall add stc scas lret insb cltd adc notb mov sub cmpsl fst (bad) dec clc mov and popf push out aam lret (bad) ja mov loop (bad) push arpl pop (bad) jmp jns jg outsb push adc aaa xchg call adc push jae or mov pop xchg (bad) (bad) pushl mov (bad) pop pop scas add adc repnz out js (bad) movsl lods or lock incl std arpl ffree aas jecxz add loopne dec xchg clc sub ljmp icebp das mov or push gs cmpl jb adc test nop inc test xor call (bad) incl cmp sbb cmp sbb fwait pop fildl mov lahf inc lret std cli (bad) (bad) lcall jmp rcll aas xchg lds dec pop sub cmp add (bad) out rol xor mov lds jge add add and jmp sti pop (bad) ret push or and jge (bad) mov push pop into pop sahf (bad) (bad) (bad) (bad) pushl or push cmc imul lahf cmp sub (bad) xchg and (bad) (bad) jmp mov mov jle adc pop arpl js repnz add and sub sbb (bad) out das loop xchg lea cltd stos (bad) ss scas pop (bad) movsb int3 into dec test movsb enter (bad) (bad) out cli test (bad) fidivr push outsl dec mov xchg loop xor popf iret call or cmpsl imul mov lahf adc inc xchg sahf arpl data16 xor int3 push (bad) (bad) (bad) ljmp ficomp mov mov popf fisubr insb push mov mov pushl sar in pop mov dec and mov pop (bad) (bad) (bad) jmp jbe and mov sbb xchg (bad) addr16 hlt pop lret mov aad aad pop or dec pop jb jle adc adc push mov jno add test xchg jo (bad) decl call loopne fist dec enter lcall cwtl ret (bad) lcall movsl scas jbe fisttpll sahf xchg dec jmp call xchg and cli pop and repnz scas push cld pop in pop jno js jg imul xchg and js mov mov (bad) (bad) in sahf mov test mov sbb xchg mov add (bad) les ret incl arpl pop dec test (bad) mov in call jg lret add in push mov jmp into xor mov stos scas clc inc imul and pushf lea and fcoms mov mov mov pop rorb mov cmpsl adc pop cld cwtl sahf mov push pop aad fwait mul sbb clc (bad) call add fcomps dec mov add les cli mov insl icebp xor stos sbb es (bad) call (bad) shlb mov (bad) call std adcb sbb mov lods sbb push cmpsb lret sbb mov (bad) incl adc sub in and test test (bad) fild repz and or xchg icebp je pushf test and pop aad push lods arpl jg add out repnz sti push xor lret xchg dec loopne and pusha sub sarb shl lock sbb mov sub subb sbb push (bad) (bad) (bad) mov and data16 mov push (bad) ja dec lahf and loope movsb jl xor andl ss xchg popf loopne jb push dec sub inc sbb xchg int3 mov enter (bad) jg jmp add out pop sub (bad) das das jmp lds jl pushl decl ret pop jne mov xchg inc pop or xor pop (bad) (bad) (bad) (bad) js imul stos fcmovbe or stos movsb pop fstps push out in push (bad) (bad) (bad) (bad) mov nop or int push cmp inc sub lods sahf jcxz in cmpsb xchg cltd enter adc (bad) (bad) (bad) (bad) jno cli fisub push jmp js fadds or jb add inc xor or dec or (bad) (bad) jmp adc or mov sbbl xchg mul fwait (bad) (bad) (bad) (bad) ficom out lahf lods pop cmp pop and data16 call pminub xchg das (bad) (bad) (bad) decl mov fsubs and add test orl mov fsubrl (bad) (bad) (bad) (bad) mov mov lods adc repnz ds (bad) xchg fsts (bad) jne rorb jmp and cltd pop dec push daa nop mov sbb cmpb (bad) lcall push xchg fs insb cmp jb (bad) gs sbb push test (bad) (bad) (bad) incl bound mov push das pusha das mov sbb lods mov xor inc call xchg jns fidivrl sti and or xor fldl push xor pop rorl or sub cmpsl and mov fld or (bad) jg gs repz inc adc sub jmp js test dec xchg adc dec scas push cmc xor aaa addr16 decl xchg loope inc mov xlat std sub loopne sub mov xor and test and call cli inc xchg in mov fnstenv or ljmp cli cmp pusha in ljmp mov inc sub dec push pop cmp mov mov cwtl cmpsb push mov push andl in lock test outsb fwait dec out push clc mov pop jae cmpsl and movsl fstps (bad) (bad) (bad) lcall mov dec sarb push sbbb add dec test fwait lods pushf dec in fs mov push mov mov jbe cld movsl sahf enter insl (bad) (bad) (bad) inc mov or inc aad outsb pop in push orb mov inc adc (bad) stos mov call dec arpl jge dec cmpsl mov sbb das cli pushl push shrl aas test leave icebp adc clc enter or mov rol (bad) (bad) (bad) decl punpcklwd and inc js or pop inc inc pop pop sbb add (bad) pushl movsw mov and mov dec and test inc or pop jae ret dec adc (bad) jg sbb pop (bad) xor repz lods push in loopne aad fildl xor push sarl cmp (bad) dec cmpsl mov out xlat (bad) mov std mov or fstp andl int3 mov sar decl xchg push cmp sub jge fisttpll pushfw ds (bad) ds pop add or pusha and ds dec add ja sub (bad) call fidiv hlt into cs cmp cmc jnp pop movsb arpl and (bad) (bad) (bad) call push jnp and nop push out sub sub mov fcmovu xorl sub (bad) (bad) cmp sbb rorl jl out roll mov (bad) (bad) (bad) incl sahf fcoms inc or xchg sbb xor testb cmp aad push bnd (bad) mov adc adc dec iret fisubr fsubrl aam (bad) (bad) jmp jbe jge dec in dec jg jae sbb repnz pop andb nop mov (bad) ljmp inc sub pop adc jbe cwtl inc xchg int3 xorps sub (bad) lds fwait (bad) (bad) (bad) fldt loopne std test sub jl xor xor lcall mov test xchg push sub add ret adc mov fsubp and int3 pop jno jle mov fmull xchg adc or or repz aas test jne pop int3 bound pop mov out hlt call xchg sar (bad) (bad) (bad) jmp test daa add lret mov imul fsubl in std decl add ret push sub sbb in xor cli mov mov xor jae mov ret xchg push clc xor clc (bad) ljmp push out pop mov repnz jnp mov jecxz in jb das push icebp incl cmp xor test or ret (bad) (bad) (bad) ljmp outsl dec int jl into sti mov pop jecxz jne daa fnstsw fwait sbb bound xchg (bad) jg lcall (bad) inc addr16 adc int3 arpl xor xchg (bad) (bad) (bad) incl insb xor sbb nop fimull divl adc (bad) sbb add (bad) (bad) (bad) ljmp jge movsl lock xchg adc fisttpll jg pop add inc add insl call (bad) es (bad) jp hlt jbe mov pushf lds test repnz push xor aas out imul movsl jns aaa mov jns xchg lods sbb lods cwtl loope mov dec (bad) (bad) lcall cmp ss mov int sahf jb mov push incl (bad) movsb push add fnsave (bad) cmpsb mov (bad) (bad) (bad) ljmp stos lahf mov test xchg and iret ss enter (bad) jl negb flds ds and loop rorb out mov gs cli dec pushf inc pop cld (bad) (bad) cmp push (bad) cmc sbb in cmpsl adc push dec mov clc (bad) decl sbb ljmp scas or xchg add pop pop (bad) (bad) (bad) jecxz,pt rcrb popa mov inc int3 mov xor xchg ss les lahf jo fwait (bad) inc adc out ret pop addb popf jl push lret (bad) (bad) cli adc push sbb dec arpl xor sbb int3 inc adcl xchg or mov jmp adc out cmp push aas inc inc shl dec (bad) (bad) jg mov mov sahf scas shld xchg out sub and loope aas jns xchg jmp add push xchg pop lcall lods in hlt jns imulb sub pop outsl jnp leave mov cli push orl incl add jg jl outsl or aaa rol dec sahf (bad) jg (bad) sub mov aam mov or sub cmp (bad) call cli test test jo mov jmp lcall or (bad) loopne das cmpsb sub (bad) (bad) call push jbe xor insl lret aam pop xchg jg push inc push or add pop pop (bad) (bad) (bad) decl into dec aaa insl imul mov lahf pop nop lcall push aam (bad) (bad) sub in inc mov push push xor movsb shlb aad pop jno mov hlt jecxz (bad) (bad) (bad) pushl aad cli inc ljmp jbe sbb add sbb out dec inc idiv ja jmp lea mov or fistpl (bad) mov sbb clc imul je lock push leave scas push xchg xchg cmp lds jno mov (bad) call mov out mov repz dec aas adc fildll idivl insl inc lods dec (bad) or (bad) rcrl pop imul lods mov inc jb call cmpsl outsb sarb pop jmp enter push adcl inc pop mov inc mov push les add (bad) dec cld inc push cmp inc lods in daa mov push add sarb (bad) (bad) jg (bad) scas push in sub inc lea cmp dec repz mov mov leave push ltr mov push inc add sbb push bound (bad) (bad) call rorb lds and test fisttpl push jb sbb xchg (bad) (bad) (bad) (bad) (bad) dec fildl push nop sub jae fsubs cmp rorb (bad) pop sub imul aam test test es push cwtl insb mov es mov lret scas insl scas (bad) (bad) (bad) jmp and pop mov xor test jmp inc mov and sbb repnz fild (bad) (bad) (bad) call pusha xchg or mov add out and cmpsl test lock mov (bad) (bad) cli clc dec adc mov mov fwait sub iret bound (bad) (bad) cmp fsts push mov hlt add sub mov (bad) call outsb and pop push test pop cwtl iret mov fadds dec fwait cmpsl or adc inc jl add add ret scas fmul bt ss (bad) pop fwait add cmp (bad) jmp (bad) mov push repz inc jbe push or jne xor push adc inc mov (bad) (bad) ljmp dec outsb call aas xchg xchg aas ret sbb daa ss addr16 (bad) (bad) (bad) lcall fcomp pushw fcmovnb popf add add gs jl xor cmp addl (bad) (bad) jmp adc dec mov ret loope nop push pop ficomp sahf (bad) (bad) (bad) decl mov add adc sbb imulb push dec cld out pop cmp neg jmp and jecxz cmp dec je push adc jg (bad) decl xchg out and pmulhuw sahf imul pop dec (bad) (bad) (bad) (bad) fstl sbb pop dec jmp push (bad) jo push (bad) jecxz dec pop sti pop dec imul pop decl (bad) addr16 pop roll cmp inc sar (bad) pushl jge movsl mov (bad) mov mov repnz fdivrl cmp mov (bad) (bad) jg inc cmp popf dec add (bad) mov mov ss inc xor int3 loope loope xchg (bad) (bad) (bad) ljmp dec dec mov or push xlat xchg jecxz push ret pop aam push lcall or fistp (bad) (bad) (bad) incl adc insl idivl and mov sbb jno and pushl jb rolb popf (bad) ss leave out jmp mov clc leave xchg cmp mov mov (bad) (bad) incl outsl mov lret dec ljmp mull call repz jle into dec pop addl and mov inc das add or (bad) (bad) push xor das sub std or mov test xchg pop xchg xlat pop or mov pushl cld jmp mov mov cli loop sub ss dec add sbb dec lcall and sub aam mov lods dec mov sub decl sbb call mov jbe iret movsb mov sbb sbb call int3 test pop cmp shrl out push mov inc or push (bad) (bad) jmp sbb scas cwtl mov push aas aaa bound cwtl (bad) and and mov adc add in sub imul (bad) hlt fcoms mov ds lock inc jmp jnp cmp out push (bad) sti inc sub clc (bad) lcall sbb cmp imul imul adc stos ljmp out (bad) gs insb jg scas push xchg (bad) cmp jo jl ss jo push (bad) (bad) (bad) call sub dec stc js adc add lock push lcall lods xchg (bad) (bad) (bad) incl jb (bad) push sbb fnstsw or or imul (bad) (bad) in sbb sub pop popf jmp xchg loop std inc or icebp xor fimull addr16 pop jge in sub test cld inc cwtl xchg aas dec cmp inc jge pop popf adc ljmp cli lcall mov mov push xchg cmp inc lret and jbe push cld (bad) (bad) jmp sub dec es ret dec and divl (bad) (bad) (bad) incl popf adc into pop xchg pop daa sbb jns lahf add cmp js (bad) (bad) push movsb adc ss jmp enter mov in xchg jle incl push push cmpsb add mov das sti loopne sub mov test mov (bad) (bad) (bad) dec in aad sub stos cmp in fidiv loop lahf repnz inc inc mov int3 pop outsl (bad) or (bad) call cmpsl leave scas dec (bad) cli mov dec pop pop int3 jl lea sti fiadd nop (bad) dec (bad) (bad) (bad) pushl sub add jmp adc inc dec xchg (bad) pop push xchg jb scas (bad) (bad) (bad) lcall (bad) icebp and cwtl aam loope add mov inc fild sub mov (bad) decl daa dec mov bound jmp push bound roll ss or (bad) in punpckhbw push cmp xor loopne dec mov push sub (bad) (bad) jmp or xchg mov mov ds sti push adc (bad) imul (bad) (bad) incl out test mov pop out das mov jg cmpsl xor (bad) (bad) ljmp xor pop ljmp xor xor ljmp movsl xchg fs (bad) (bad) decl sbb rcr or scas rcll in inc dec add cli arpl dec xchg stos (bad) (bad) (bad) push adc xor dec xchg inc cmp arpl mov push cmp (bad) (bad) ljmp mov sbb lret push aad push mov repz push ljmp push stc incb dec negl jne sahf (bad) incl jl adc test sub sub (bad) lock (bad) (bad) ljmp fwait in pop aas insl in inc pushw dec mov xchg xchg push out pop outsb mov dec add (bad) (bad) lcall or pushf addl jno and sbb (bad) (bad) (bad) incl jge and test sub mov cmc jp sub mov (bad) int mov (bad) (bad) incl in cmp or loopne scas inc dec dec test dec out cmp popa loope (bad) jmp dec pop les lods aad test push fsubs push arpl (bad) std xchg fdivrp (bad) (bad) mov outsl outsl push mov (bad) jecxz lods pop push xor add ret pop in push (bad) (bad) (bad) incl icebp daa daa insl cmp jl mov ret inc lea push scas push cmc (bad) pushl pusha fs sahf xor mov mov pop fnop lret ljmp add je imul sti rep jae sbb (bad) or push daa (bad) fistpl out loopne pop arpl jno lods jbe ljmp arpl pop dec mov (bad) (bad) (bad) (bad) jnp divl shrb add mov retw sbb adc (bad) (bad) (bad) pushl adc shr cmp sbb fcomps cmp mov sbb dec jg (bad) jmp xchg insb fsubs mov sarb xchg loope les pushf (bad) (bad) (bad) call cmpsb (bad) fbstp push in outsb iret jmp pushf inc add jne mov arpl (bad) (bad) call adc cmpsb push sti insb jge cmp or repnz dec imul mov lock (bad) ljmp add pop jmp lahf jne adcb cmc lock cmp lret (bad) (bad) jg ret cmp fistl dec cmpsl fdivs adc lock int (bad) (bad) lcall inc ret rep dec outsb mov mov scas jecxz rcrb xchg dec sub (bad) (bad) (bad) mov mov test jbe jbe xlat lods push pop pop rcll mov or push (bad) (bad) (bad) (bad) mov gs add pop push xchg and cli test out lea (bad) dec aas push sti push dec sbb jnp scas idiv push orl sbbl add insl or fcoml and call xor es adcb jge inc mov sub lock fucom stos icebp les insb cld (bad) jmp jb stc insb xor pop push clc push and cli pushf jecxz mov ret leave nop mov mov xchg push (bad) (bad) (bad) ljmp sub xchg or jle push rcr mov sbb xorl pusha (bad) call (bad) call add xchg push inc and xor and aaa push mov aad (bad) (bad) (bad) decl cli aaa xchg add test adc jg or lret hlt pop fdivrs lret imul stos int3 mov mov sbb into imul cltd mov ljmp dec sub enter rclb cmp push std inc lahf popa aas sub out std cltd sbb stos mov inc push pextrw pop iret idiv ja decl xor enter repnz mov es (bad) call hlt jae popa jp mov push and and dec or mov (bad) jmp movsb dec sbb stos push mov test pop popa pop fisubr out adc xlat xor sti (bad) call call lock gs ss mov lods (bad) stc xchg adc or inc add sub dec add lret ficom jne sbb mov cmp stos inc pop sub (bad) out clc outsl stos ds jae mov outsb pop cmp mov push icebp cltd cli std repnz (bad) (bad) inc and gs scas add or mov ret mov mov lcall and (bad) xchg shlb sbb and xchg inc rcrb (bad) sahf ljmp lcall xorl insl push xchg cmp and cmp ret in (bad) (bad) (bad) push cmp loop sub add dec in or sysexit mov cmp scas cmc inc lock or (bad) (bad) dec sbb pop sub add and ret dec cli es xor fsts decl pop mov dec pop fiaddl loope mov (bad) (bad) (bad) jmp xor pop pop stos adc sbb jecxz (bad) mov out mov push dec mov and (bad) (bad) ljmp leave popf cmp push es sbb frstor das lea inc ss or cli pusha imul dec sub fcomip test mov pop xor sbb leave or ds (bad) (bad) pushl rorl jo in adc cltd pop fidivl cmp (bad) popa sbb (bad) (bad) (bad) lcall insl enter jb pop sbb adc dec adc add adc lsl (bad) (bad) (bad) decl and pusha js in pop fidivrl cwtl lahf and outsl lcall aad add fcompl mov inc pop and ret inc jmp loop inc (bad) (bad) decl xor sbb mov cwtl fildll mov xchg (bad) (bad) (bad) call and sub test sbb pushl and xor (bad) cmp imul sub fsts ret stc sub sbb (bad) mov (bad) (bad) (bad) decl sbb cld jecxz ja scas inc xor (bad) sub mov lahf adc sub sar and pop fsts outsb push jb adc mov arpl adc dec dec pop dec int inc sbb sti mov jmp repnz mov mov arpl jmp (bad) enter push dec movsb call add add mov in mov mov (bad) (bad) ljmp mov subb shrl cmp push lods sti jbe leave flds andl stos ja mov and cltd (bad) pushf fwait pop arpl cmp mov mov mov inc inc sahf jbe sar and cmpsb lock add add (bad) incl mov mov scas mov push repz mov dec (bad) lcall jb mov xor and pop aad mov fwait gs (bad) (bad) (bad) incl cltd insb roll mov mov (bad) movsb pushf (bad) cmp mov push adc incl cmp inc js jns in xor idivb cmp sbb test mov push fidivl and or incl les mov jle mov push cmp scas clc (bad) mov int3 xor arpl xlat shr inc inc and mov mov cli dec push xchg lea cmp scas dec mov xor jnp aam fcmovu (bad) (bad) call loope pop stos xlat add jnp adc ss pushf sub shlb dec test out dec inc ficoml imul stc lcall xor insl negb into repz std add push push pop aam pop in dec rcll call fisttp int3 push xor xor stos adc and jno push pushf push inc push (bad) (bad) (bad) (bad) in repz loop sbb adc xchg sub and jle test pop sbb (bad) sub fbstp jns pop inc dec cmp jno out add (bad) (bad) jg in sbb adc movsl jecxz loope xor (bad) repnz (bad) (bad) (bad) cld xchg aas mov fstpt jae dec mov mov (bad) xor mov (bad) incl jae dec movsl loope (bad) into fiaddl lods inc rcl scas roll out aam gs (bad) (bad) (bad) decl jbe lds fs in mov adc pop dec subl hlt (bad) (bad) jmp rcll jo jne push dec lock test sahf mov jp in push enter inc dec test sub add repz inc in pushf bound (bad) (bad) cmp mov mov sbb dec inc sbb sahf movsl aas adc sbb (bad) pop cmp push cmp jge ja and (bad) insl inc push sbb es or outsb inc mov push fild movsb sbb test aas and push sar fwait and in cltd (bad) lcall mov (bad) (bad) lcall pop or mov mov into mov icebp lods pop stos jecxz imul (bad) mov dec pop bound jl push ljmp xor rorb dec imul (bad) (bad) (bad) cmp sub ret lret cmp mov push mov mov icebp lahf aaa cmp mov (bad) (bad) (bad) decl mov adc ds xchg mov mov movsb loop outsl jl sub mov (bad) (bad) jmp or int or dec fs lds jno fs mov push imul (bad) pushl mov lods in dec push jl lret pop repnz mov or ret lret data16 test (bad) (bad) (bad) (bad) decl lods pop pop xor jb ja mov out cmp push sbb repz (bad) (bad) (bad) (bad) mov push imulb or xor pop sbb movsb ss aam (bad) dec nop in add ljmp rol je xor addr16 xor jmp in jbe xchg (bad) (bad) incl aam mov ljmp mov push test (bad) (bad) (bad) std sahf push sub arpl (bad) pop js xchg add xchg and in enter std ds dec (bad) (bad) (bad) inc insl lcall adc mov das iret add or loop,pt ds (bad) (bad) (bad) fnstcw fnsave pop mov add xchg arpl (bad) (bad) inc lods mov cs icebp (bad) (bad) call ja js into sub ja xor adc jne mov ret lcall sub push js jns adc sbb imul (bad) (bad) (bad) jmp (bad) hlt fstps cmp imull pop inc jmp fwait mov insb adc mov ds jge push inc push pop mov (bad) (bad) (bad) lcall sub bound xchg xlat pop repnz icebp mov xor adc movsl popf cmp outsb pop cmp (bad) push fstl mov ja sub cmp (bad) jg mov and dec adc cmp mov push mov ljmp and sub jnp push xchg mov scas test rclb jmp pusha jo dec sbb mov xor jno or mov jo fstpl xchg cmp addr16 and lcall (bad) out cmp in ret xor mov aaa repnz mov (bad) (bad) (bad) call cld jo pop cmpsb and mov jle fstpt out cmp repz pop sub pop fisttp (bad) in lcall cmp (bad) mov sub xor adc hlt test jns call lcall xchg pop aad lahf dec add mov fdivrs mov cmp cmp xor pop lock data16 jge and (bad) sahf popa push stc jnp fidivl xchg enter ss (bad) mov shlb imul test push (bad) mov sahf or mov (bad) (bad) pushl outsb dec popa lea add xor push test xchg mov push or adc lods out (bad) (bad) (bad) ljmp lock ja jne pop subl sbb inc push fidiv push sub (bad) jg incb pop cmpsl fisubrl push mov out and sarb xor (bad) (bad) jmp pop loop sbbl cld sbb fdiv cmp add jecxz sar out clc call mov jle arpl test xchg jnp add gs and cltd test (bad) (bad) (bad) jle in xor je jnp pop push xor stc popf cli mov cmp imul sbb sar cwtl and and lcall loop xlat repnz jge jb (bad) (bad) (bad) aas cmp push sub or mov cld jge movsb mov int cltd cli push pop dec test in mov testl push jl insl pop test gs xchg sub loop div fbld call (bad) das and push push loopne cmp sbb and adc jmp xchg sub fwait (bad) aam (bad) (bad) call inc fs pop add in mov jbe je or mov cmp (bad) (bad) incl (bad) sbb dec sub dec mov fsubrl push dec pop popf mov std or cmp (bad) (bad) ljmp or jae pop xor sub cmp xchg lea (bad) jmp and (bad) mov add sbb mov push push stc sub jecxz or sub mov adc lds test and jle decl jno lcall fstl (bad) push into cmp xor cs (bad) jmp lret inc sahf push popf jp pop ret xor push jl sahf jmp (bad) (bad) fild hlt insb cmp or sti mov or repnz lcall jmp mov bound ss movsl or sti in cmp cmpsl (bad) dec cmc call loopne ja out xchg loop fsubrs jne test inc pop push out fdivrl or je xchg es sub test add (bad) stc xor (bad) mov out rcrl pop cld (bad) (bad) lcall lods in cmc and xchg mov loope sahf pushf shrl (bad) cld fidivr jmp jnp sub push arpl aas pop sbb pop pop (bad) (bad) (bad) (bad) jge test sub xor or ss (bad) in mov out jb xor mov pop pusha stos fcoms jns fsubrs cld sub mov xlat add (bad) (bad) incl mov ljmp pusha pop ss cmpsl add jge scas pushf add mov das xor pop mov mov clc add (bad) imul decl cs mov les adc pop pop mov sub test pop jle sub (bad) ljmp jo das mov clc jb add xor xor lods xor loopne inc loop inc (bad) (bad) (bad) (bad) cld cmp int jo lret and dec (bad) ret cmpsb push jb,pt mov (bad) cwtl cmpsl xor das sar mov ja daa xchg sbb fstps xlat cmc cmp fucomip xchg jg (bad) incl xor cmovbe sub add cmpsl (bad) xchg ja fs (bad) (bad) lcall setno adc ja nop push inc push rcrl mov stos int3 cmp fwait mov ret inc cwtl push ret jmp add mov les jno aam dec (bad) (bad) (bad) jmp jne cmp pusha ret push outsl dec pop jne dec or aaa cli or (bad) (bad) (bad) std xchg jnp outsb sbb jecxz mov pop jecxz sar inc push enter push inc (bad) (bad) (bad) jmp pop cmp cwtl ficom mov xor cli int3 push outsl lock or jmp (bad) pushl leave xchg mov pop or pushf mov insl call pusha xor xor add daa (bad) (bad) (bad) ljmp aaa mov pop data16 les mov test addr16 leave mov xchg pop lret (bad) lcall arpl negb rol aam dec dec jns mov femms mov popa sarb ljmp inc dec aaa stc into out in adc mov mov jnp stos sbb pop cmc push adc xchg out inc mov hlt (bad) jmp cltd add leave sti arpl scas adc dec aad jecxz pop mov (bad) (bad) dec sahf repz loope jne inc leave pop repnz ret and mov mov or (bad) (bad) decl sbb ret int mov dec imul fdiv lods into sub cmp cmp (bad) ljmp out pop xchg outsl mov into jns mov pop lds (bad) (bad) pushl imul mov jecxz jmp je add fwait xor loopne sbb lcall and sbb in cvttps2pi out clc (bad) (bad) clc incb out push loop dec movsb inc xor add xor (bad) (bad) pushl fidivr lods lods aad sahf pop jp adc xchg or shl jnp (bad) or hlt (bad) (bad) lcall sub mov cmp push dec call xor ficompl (bad) lcall test push push out mov lock add js scas lahf (bad) (bad) (bad) (bad) jl jle add inc jge mov xlat fistl mov les xor mov jo push stc push xchg pusha stos (bad) push out push das jmp xchg inc scas mov ja fisub pop insl loop arpl ds or sbb add (bad) (bad) (bad) (bad) cmp mov jle jle inc push loope lods pop mov hlt pop mov pop and cmp scas int3 push mov imul inc insb pop fldcw jl push xlat sub dec clc and pop sarl icebp scas (bad) (bad) (bad) decl cmp inc and aam cmp cltd aad aam loop xchg je inc negl (bad) jg xor pop movsl jge and adc pop divb leave stos (bad) jp (bad) lcall mulb pop stos icebp rolb (bad) lret push popl (bad) (bad) inc push into mov add lock scas addr16 pusha in mov (bad) (bad) mov aam and sbbb jmp dec dec jmp imul or push (bad) (bad) incl aaa mov pop jecxz push adc adc call sbbl fwait cmp jge lds sub or clc xchg inc (bad) (bad) mov dec add pop sbb jbe xchg or jo les scas and mov push xor (bad) jecxz cld gs (bad) (bad) jmp icebp mov (bad) dec (bad) jp jmp cmp jb ficom sarb (bad) in jae das jnp xchg or les and sub add mov mov cwtl xchg pop mov ret dec hlt mov add mov push sbb dec les (bad) repz mov (bad) mov es subl jnp xor fwait mov or dec and into repnz mov jl nop jns mov cmc pushl sub dec (bad) je jno cmp mov adc (bad) (bad) ljmp fs (bad) cmp leave xor cmp dec add or sub mov lods cwtl das pop icebp (bad) js faddp imulb push xchg mov push into movq cs int3 xchg hlt loopne add dec mov add daa stos ds in je cmpsb stos (bad) incl xor (bad) mov dec and push cli imul out in popf mov decl shr lock (bad) mov inc jmp fcmovu inc push pop jae jnp (bad) jg pushf mov sub lods imul push (bad) (bad) (bad) ljmp push and jmp sub out ret jle push call (bad) (bad) (bad) (bad) fisubrl rcrl fcomps mov nopl out xchg jl (bad) (bad) dec ds (bad) iret mov cmp and push pop arpl (bad) ljmp lds sub push fiaddl pop cmp push sub (bad) ljmp mov push push lahf int3 mov ja fdivs rcr xchg or (bad) (bad) (bad) (bad) ljmp cmp jnp push lods mov repz xor xor mov insb xchg add (bad) cld mov (bad) (bad) jbe mov inc scas (bad) (bad) lcall loop popa ja stos pop mov sbb arpl ljmp aad mov decl cli mov inc sbb jb shr leave fldt adc dec dec (bad) (bad) (bad) call mov lock cmp inc ret push and xchg xor icebp ja mov mov (bad) (bad) mov add jl iret xchg fadds mov stos xchg sbb movsl jg xchg or (bad) daa jbe pushw dec movsl adc les mov sub ss sub adc clc (bad) (bad) ljmp shrb out push test xor imull mov and out and fstp loope (bad) ljmp lods mov push aam sbb leave add xchg roll inc stos sub jmp and fwait push insl outsl cmp sahf int3 mov sbb (bad) psllq popa add and call (bad) call and cmp sub jl cmc fucomp rcll xchg pop push add mov lcall jge sbb sbb or xor ljmp (bad) jle popf or dec push jge in mov cmp std sbb mov (bad) ljmp push pop daa loopne aaa mov das cmp ja aas sbb mov sub mov mov mov out pop sbb sub fnsave pop add hlt fwait mov adcb test fdivr in jae in fstpt (bad) inc sbb mov inc (bad) clc adc pop jns cmp (bad) push outsl jae test mov add (bad) ffreep out xchg sub sahf outsl add test popa pop mov lret dec test push (bad) (bad) (bad) decl add stc mov cld dec ja mov movsl pop ja arpl (bad) (bad) mov ljmp aam int3 sub mov test (bad) (bad) (bad) (bad) (bad) mov aad pop inc movl test js and adc stos movsl jns inc pop sbb mov (bad) cmp and arpl xlat inc lods pop int3 insl push and pushl test scas jl test les sub mov lock je jle mov scas clc (bad) call cld inc mov adc and jne icebp out mov xor pusha (bad) mov lods sub (bad) pop jne (bad) (bad) out jp jmp cli or fcoms popa fdivp jmp fidivl in fwait jo or (bad) (bad) (bad) jmp cmp stc pop (bad) scas cmc mov sbb adc dec dec in hlt lea (bad) (bad) call xchg mov sti sub stc rcrb ljmp jle daa clc int3 ljmp xchg ret dec ja (bad) aam inc mov fldcw sub loop lret (bad) stos aas jg push sbb sbb mov dec jge fnstenv lahf es adc in ds loopne (bad) (bad) (bad) (bad) (bad) (bad) aam sarb adc fwait outsl pushf int ss dec popf dec int mov fcomps add int3 push (bad) (bad) (bad) (bad) lcall sub sub stos rcl fistpll jnp mov (bad) rclb (bad) (bad) lcall jmp stos mov sbb push inc roll push or mov mov adc aaa cld (bad) sti sbb xchg lret ja inc xchg adc test (bad) or push idiv (bad) out cli pushf divb hlt repnz add lret loope aas stos add fistpl add push std call enter sub enter adc bound movsb mov (bad) (bad) lcall lods mov sbb push rolb pusha mov mov xor (bad) decl pop sarb fldenv repz or ret mov stos (bad) xor mov (bad) incl xor jae adc push push sub push or test (bad) (bad) push mov dec inc fiadd in mov cli cwtl push or js push jle test mov pushl clc push fisttpl cmp (bad) lock jl (bad) je push (bad) (bad) (bad) lcall xchg push test push sahf ret gs push pushf dec push mov andl push dec (bad) (bad) (bad) pushl push or scas push fsubrl sub fnsave inc pop test mov (bad) (bad) (bad) mov add shr add test push (bad) mov clc fnstsw inc sar dec mov push out adc in (bad) mov or (bad) (bad) pushl add je jbe mov ret outsl lret (bad) jb fwait mov lcall lods inc and and test push xchg scas xchg xor lcall mov call lock roll jnp ficoml and repnz sub jg andb clc test xor sbb les (bad) (bad) inc enter fcmovnbe or sarl es imul jmp js (bad) (bad) decl aad cmp (bad) sbb dec add mov add mov repnz xlat movsb inc incl mov ds sub sbb or jg dec inc add (bad) (bad) (bad) ljmp movsl dec dec pop sbb adc push lods stc stos int push and into and fcos (bad) (bad) (bad) ljmp pop scas ret xor or je stc xchg fadd dec mov cs (bad) (bad) incl test sbb xchg pop clc js lret pop jno cmp mov push fisttp pushl leave lahf sub aam xlat (bad) (bad) (bad) jmp movsb nop shll inc mov outsl sub mov mov jl cmp (bad) fcomip jmp pop mov pop cmp push and xor imul pushf mov popa imul cmp in jle movsl fbstp pushf xor push jnp mov scas jne xchg ja (bad) (bad) decl and or (bad) outsl pop pop lret and icebp stc xchg gs or lret xchg (bad) (bad) (bad) ljmp sahf jns or iret loope lods pop lcall jle sbb leave mov (bad) mov into mov in jp iret (bad) mov push movsl movsb xor inc js jo gs jbe inc test nop outsb jno inc movsl and (bad) (bad) lcall test xchg addr16 xchg fcmovu mov mov sbb sti jl insb cmp (bad) jmp dec xor dec gs popf addr16 add ja aas cwtl pop dec lret xchg (bad) (bad) jmp (bad) mulb mov or sub xchg jg cs js imulb in sub test pop inc cmp mov (bad) (bad) (bad) call mov icebp gs mov inc addr16 into je (bad) out sahf call test popf cmpsb jge (bad) (bad) call xor cltd push inc sbb mov jp mov int3 addr16 mov sarl es das js xor (bad) mov jb or in enter stc sub (bad) (bad) (bad) stc adc sti inc scas dec roll add xchg test cmp je and lret popf and xchg cmp push xlat inc bound lds incl ror jnp dec cmp and out icebp or sbb xchg decl popa xor mov movsl lret mov push fadds shrb (bad) (bad) ljmp adc in lcall inc push mov pop loop lock push inc sbb pop hlt (bad) dec jp stc or fstl adc imul jle inc (bad) (bad) pushl (bad) cmp jle sub jge mov sbb and (bad) (bad) pushl or (bad) jg adcl pusha frstor mov cli in push jbe or mov popa call pusha into or (bad) (bad) dec xor cmp fidiv int mov sarl pop adc pop cld shr sub (bad) ljmp cmpsl jg stos aad cmp (bad) lret test dec mov int add sub (bad) (bad) (bad) incl push repnz cs lahf xor (bad) lret pop mov je inc (bad) mov xor inc in mov sbb lock aaa sbb data16 loope into into aad add imul adc cli (bad) call jl push out fbstp test lahf iret pop orl sub rol arpl (bad) jno lcall and push mov jg stos insb adc push xor clc loop lock loop add aaa negb stc inc (bad) sub pop aaa (bad) mov lahf sub sub mov cmp ficom xlat (bad) (bad) decl out sbb push fcoms jle,pt ficoml sti shrl (bad) (bad) jg out aam loopne in cmp push dec and insl fisttpl inc cltd js repz cmp (bad) (bad) (bad) jg mov in decb bound sbb mov dec mov push cld (bad) (bad) (bad) mov adc mov fsubs push sbb mov mov add (bad) incl in pushf aad dec add mov lcall in sbb int adc pop cmp dec pop test imul cmp loop or adc (bad) (bad) incl mov cmp add pop jbe mov and sub imul aaa sub es repnz dec stc repz into dec xchg mov mov rcll mov xor pop icebp jle add (bad) pushl jmp push jg mov (bad) push into jbe test mov (bad) (bad) (bad) call scas aam xor imul lea dec call jmp int xchg shrl (bad) (bad) (bad) jmp movsb mov pop pop pop aad dec inc cmp sahf hlt adc xchg repz xor popa mov call add lods lods mov xchg pop gs sub fwait sbb xchg xor dec lret pop cmpsl mov push or (bad) (bad) (bad) lcall loope sub cmpsl in sti imul sbb cmpsb or adc xor (bad) (bad) jg out inc popa mov cwtl das gs or inc mov (bad) (bad) (bad) inc jle test dec fstpt add (bad) icebp orl lcall sbb ja sar call jg push mov push xchg out inc scas pop jmp (bad) (bad) (bad) jg inc lods out cltd jg lret pop lock popf fs je insl dec push sub (bad) ljmp aas in nop daa mov dec enter adc cmp in repz dec (bad) incl dec mov jo jmpw add lea mov (bad) call jbe enter push rcll stos repnz mulb pusha inc aas jns dec cmp int3 stos mov fcompl clc test xchg aad insb dec nop or cld pop inc sbb adc mov inc mov jae (bad) (bad) inc stos push mov pop fsts jns lods loop push (bad) jne bound pop pusha (bad) cmc (bad) (bad) call lahf inc shll lds fcomps or into mov push pop mov (bad) add loopw imul (bad) hlt das stos mov mov (bad) (bad) fcomip push lods xor iret mov movsl cmp dec jp ret ds ljmp jl into outsl cmp mov lock stc cmc mov (bad) (bad) (bad) lcall xor and rorl adc mov mov cli in loope jg (bad) (bad) cli mov mov iret jns fistl imul movsb (bad) (bad) (bad) decl scas and push jp,pt mov pop adc jbe jae fldcw mov xor rcrb or push ss (bad) jo xor imul mov int3 repnz or mov cmp test (bad) in sub cli (bad) push lret add test test insb fwait jne sbb push icebp jae clc jmp bound in sbb cmp lea int3 push sar jg sbb nop xlat cmpsl jl repz (bad) cs mov mov aas or jmp pusha mov inc mov scas cli or stc mov lahf (bad) jl rcrl pop jns (bad) (bad) jmp cwtl add mov or push loop and int push imul or (bad) (bad) decl fwait stos out es mov mov mov mov je mov (bad) (bad) (bad) call out popf inc sub mov pop cltd aas sub pop xchg fsubrl in (bad) inc rcll xor std or jmp iret jb add (bad) incl les fidivr sub and jbe xchg jne cmpl (bad) ljmp mov mov sbb repnz gs xor scas lcall sub dec push push es inc subb jo loopne (bad) push std xchg (bad) (bad) mov xchg (bad) (bad) (bad) incl jae mov sti add cmp fwait pushf sahf testb fstps int3 (bad) (bad) incl (bad) xchg lods lret imul lret les aaa data16 rcrl outsl fcomip push stos out push inc adc pusha push bound outsb inc or les push jae mov add std dec sbb outsl call push in mov cld pop cmp (bad) pushl arpl or setle push fistpll aaa lret sbb aas (bad) add fdivs cmp addl pop push fisubrl lahf mov push cmp dec std cmp loope sti push pop mov mov pop pop mov push lods push jge xchg xor inc mov aad inc pop les cmpsb cmc push aad jge cs inc test adc lcall imul cld or pusha pop (bad) shll xor cmpsl das push test clc call (bad) jge mov sbb in fcoms cld jbe call std jg pop rclb mov sub adc cmp icebp (bad) (bad) ljmp push pop push es push rolb rclb (bad) pop pop (bad) jg fucomip insl ret xor lea xor xor lret outsb xor (bad) mov das sbb inc movsl cs mov push add cwtl leave sub clc jge jge mov ljmp cmp jg pop repz push push ljmp adc (bad) mov or out xchg inc or das push sub loopne lahf jmp pop (bad) popf mov (bad) ljmp dec xor xchg push jno sbb add adc sub lds xlat shlb (bad) (bad) (bad) (bad) mov or fnstcw (bad) repz cli cld dec fnstcw xchg and push (bad) call xchg cwtl inc stc lds (bad) stos cmpsl (bad) fnsave mov call (bad) jge hlt dec sbb pop mov cs mov push pop cltd loope or fsubrl (bad) pushl addr16 divl pushf xchg mov mov jge insl mov or (bad) (bad) cmp lods inc mov push sub outsl aam lea cmpsl (bad) (bad) (bad) mov pop addb xlat push outsb addl pop push xor in (bad) (bad) (bad) incl mov lcall cmpsb lock mov ret inc mov das ljmp add pop addr16 mov adc xlat (bad) (bad) push xor push rorb xchg mov (bad) jg jg or sbb and hlt fbld movsl fstps fisub lds xchg add cltd lret mov fs mov push xlat out push mov or ds jecxz fcomip lods fdivl insb and push inc mov cmpl int3 (bad) xor (bad) (bad) mov inc int (bad) xor mov dec or jb out cmp int jg lods out pop pop (bad) cmc call jp cmpsl push je inc clc fnsave jns (bad) pop ljmp (bad) push mov leave (bad) sbb adc inc insb aaa out lods xor (bad) jmp andl mov xor aam das xchg xlat pusha add ljmp repz fbstp fsub fildll dec mov shrb adc dec in (bad) cli fcomip decl adc addl stos jno push dec outsl xor hlt mov cmp ret (bad) es cmp cmp cmp sub pop lret in push and push mov sub jl mov cmp mulb fsubs and insl inc jp (bad) lcall push adc popa jbe jb adc pusha mov (bad) (bad) (bad) pushl aam cmp fldenv cmc sbb pop cld xor pop add xor jno dec movsb mov (bad) (bad) (bad) decl dec adc ja xchg dec aad in mov in jl cmc hlt ss or in (bad) (bad) (bad) jmp push movsb cmp push pop loop loop xchg or out dec mov cld outsl mov pushf aad es pop push (bad) (bad) call and jae cmc sub jbe cmp out int3 lret insl push or pop jnp iret adcl dec sahf scas dec (bad) dec loop inc dec icebp sub mov (bad) repnz mov out insb sbb fcos (bad) jg out adc cmc outsb (bad) cmp ss adcb push and xorps dec and into fsubl pop sbb push push cli incl cs std call icebp xchg cmp (bad) (bad) (bad) lcall and les or pop inc arpl mov in aaa xlat (bad) loope inc stos xchg (bad) (bad) (bad) (bad) ljmp jo (bad) inc jns mov inc rcrb dec add stos in xor pushl inc jns sahf lock xor pop push shrb loop lds lea test cmp scas xchg shll loop xor lahf xchg mov test mov pop xor daa (bad) (bad) (bad) (bad) ficompl cmp movsl clc jnp aas xor cli push es xchg mov ljmp lods leave pop stos movsb and push xor jecxz scas mov and fcomip ljmp movsb mov push cld scas out aad data16 xchg outsl addr16 (bad) push push sbb lcall (bad) ja mov jbe xor imul andl leave ljmp or in mov stc or mov addr16 (bad) (bad) (bad) call jnp ret sub sbb nop in jb pop sub and jb out jbe loop (bad) (bad) mov aam dec mov mov addr16 sub or dec xchg stos mov pushf adc adc lods fldl mov cmp lock sar rcrb lret mov dec inc push xchg sub cld js nop adc aad imul push cmp push push dec in lea (bad) (bad) (bad) jmp lock or outsl jl lahf imull adc (bad) notb repz cs sar (bad) call inc bound fcmovnb pop loope jle jp aaa bound sub js stos mov test lahf mov call xor xchg (bad) (bad) (bad) (bad) clc divl pop shrl push and or xchg push ret and mov add icebp (bad) mov xchg das std loope sbb fadds jo daa fs (bad) (bad) fistpll push lods cltd push sbb pop xchg push pop insl pmaddwd mov (bad) (bad) (bad) pushl in and lret mov mov and fincstp lods push dec and sub inc cld mov mov les out sub inc inc insb (bad) jg lcall or mov jmp lock gs mov or (bad) (bad) jmp inc in ljmp add and jno cmpsl ret les in stc inc fnstenv (bad) decl in or cld mov sbb mov and ret push mov pop cmc (bad) jmp fsts aad push icebp lock xor push adc rorb lcall incl adc mov cmp xchg das loop aam scas xlat inc ret mov jmp daa in fcoms mov sub test stos arpl (bad) (bad) incl adc jo sti xor jle lea sbb (bad) ljmp xchg adc or fisub sbb jb inc adc subb arpl (bad) (bad) jmp adc jg dec rolb cmc adc shr fsub fidivr mov mov call out push mov pop adc and xchg jmp movsl (bad) xor dec mov in das cmc scas push sub or adc push les in and add (bad) ljmp arpl enter add or out inc iret sbb dec (bad) rcr jae sub cmp xchg jbe imul imul dec xchg outsb nop pop aas cs sub and jg out pop in popa data16 test cmpsb lcall mov inc je mov andl in jnp je jmp iret je inc mov (bad) (bad) (bad) incl in aaa fwait adc mov ja cmp fidivl stos mov fcomip cli push adc jae mov pushf movsb xchg jo mov adc (bad) pop ss adc lcall pop and sub mov sti push xchg cmp out lods mov ljmp add les aas jge ljmp xchg lcall mov cmp add mov lahf imul mov dec (bad) (bad) (bad) lcall sarb ss sbb ret in cmp push xor push fwait (bad) (bad) out sbbl sub pop xchg ret adcl jl das adc (bad) (bad) (bad) dec fwait mov mov cs push adc jae xor movsl mov add xchg push fwait (bad) push jmp icebp xchg (bad) xchg rclb adc addr16 xor das clc jmp xchg mov in insb pop mov jge dec adc push or cmp xchg push jge xor mov cld sub cmp lcall into ljmp (bad) (bad) (bad) jmp popf arpl inc fwait pop inc mov pop mov gs push shrl (bad) (bad) ljmp add clc push jno sbb inc inc or xor pop dec stc xchg sub mov adc mov (bad) (bad) ljmp fidivrl sbb arpl out sub mov dec cltd mov mov in dec inc (bad) (bad) (bad) (bad) jns jo cld popa adc cld pusha pop js cmp loopne or das lods orl (bad) (bad) (bad) incl push adc pop push sarl test (bad) mov shlb or jg pushl inc mov ja scas dec jge stos cmp arpl mov pop jne das jnp ret jg dec xabort cmp lea jo push mov jecxz or pop pop xor adc and mov ret adc (bad) (bad) jg lock movsl pop mov les imul sbb insl push ljmp fidivr dec jl xchg xorl mov aad mov stos inc sbbb jmp inc mov mov (bad) es push lcall xchg xchg repz icebp xor insl sub and lock (bad) (bad) ljmp jno pop pop fmul fldcw jge pop xor clc (bad) add (bad) jg sahf ja xor inc std hlt ja push pop mov sub adc ss mov aam cmc dec sar inc (bad) mov loope bound push std cli cmp (bad) ljmp (bad) jbe add fsubs rcrl mov js pop cmp (bad) ljmp movsb sub mov test repz push pop mov or (bad) cmp loope pop mov sub and mov xchg mov negb sbb cmp jg aas xor ficompl mov (bad) (bad) pushl ja (bad) push ret jo popf sub lret jmp mov or (bad) lcall push call ret inc cltd inc mov xor movb int3 mov pop ljmp sar jge ds mov (bad) loop lret lret negl cmc or mov popa fisttp lret cmpsl lods adc add imul (bad) (bad) incl (bad) lods aad or fisttpl pop mov pop scas mulb (bad) (bad) (bad) cmp cmp dec movsb andb ljmp add fmuls (bad) ljmp push cld inc inc in (bad) mov arpl cmp lock (bad) jmp xlat andnps jbe dec xchg push cmp outsb fs lods and jle stos (bad) lcall fisubrl std inc mov xchg imul sub out push add (bad) fucom (bad) mov jmp mov faddl inc jo (bad) (bad) call jg (bad) mov fstl imul jo jecxz sarl (bad) add (bad) out clc mov jge xchg clc iret jae mov sbb popf (bad) ss adc jle loopne ja clc jmp xchg xchg cmpsl cmp lahf fiaddl (bad) (bad) (bad) ljmp aam popa pop xchg cltd adc push jb repz add add (bad) ljmp cli mov and ficoml dec aas jle loopne xchg inc (bad) (bad) (bad) (bad) call lds sarb jmp jns icebp jns mov inc mov fistl (bad) lcall push and dec fld mov add fsub inc cmpsl packssdw push inc xor pop test (bad) jmp and in int3 ss ljmp or inc pop lret inc rorb lea sbb dec (bad) (bad) decl add sahf xor push mov jne sub push xor mull dec xchg adc pop adc mov (bad) (bad) jg (bad) loope adc xlat mov mov mov popf jge pop push ss in sar (bad) ljmp pop imull inc bnd ja bound cld or data16 and (bad) (bad) ljmp jnp jge stos mov (bad) lcall imul jp mov (bad) (bad) (bad) (bad) mov sub and int inc pusha in enter jne idivb outsb mov (bad) (bad) (bad) lcall pop sti (bad) or pop cmpsl add mov jno lock pusha jle (bad) lds (bad) (bad) jmp arpl je test roll xchg (bad) (bad) jg mov xchg les addr16 jmp cmp adc sub (bad) (bad) (bad) decl sbb cmpsl push cmp mov scas jns loop pop data16 mov dec cld inc push or or xchg mov pop jl and pop jge mov movsl std pop loopne (bad) fwait xchg notb ret mov mov and or xor cmc lods out addr16 xchg sub cmpsb sub lret enter out clc (bad) incl sbb xor aaa inc or cmp movsb cs pop adc in mov repz sub ret dec frstor mov js (bad) (bad) mov lret mov idivb and add and (bad) (bad) (bad) pushl orl mov mov jle das cmp stc sub scas test sti data16 (bad) (bad) jmp jge popa test push ja inc jg cmp mov jmp sub inc std (bad) (bad) mov in dec insl sub sub mov sbbl (bad) (bad) (bad) (bad) pushl or ja push ror xchg push inc scas fstpl and xorb (bad) incl dec notl jae or mov cltd cltd sbb test jge pop (bad) dec arpl sar (bad) (bad) (bad) jp cmpsl stos lret lcall add into push imul popl adc insl inc push popf (bad) (bad) fcomip fist cmp add stos (bad) cli add pop inc mov (bad) (bad) incl rcll repz push mov es sbb scas les inc add (bad) fcomip cmc mov mov test das ret bound xor (bad) (bad) decl mov and pop fnsave jae mov push pop lahf and adc (bad) (bad) (bad) decl in scas mov or (bad) not loope push inc jl pop add push push (bad) aas cli scas adc insl out xchg in enter idivl ljmp lret (bad) decl mov xchg mov xor mov leave cmp add jmp (bad) (bad) (bad) call cltd adc loop mov sub jge test lock push mov movsb dec pop mov enter or push mov rcl lock mov lods push (bad) (bad) (bad) jmp dec (bad) out or shr or repnz mov and sti push sbb mov xchg xor (bad) (bad) (bad) inc fstl insl jg jmp pop mov cmp shrl fcomp mov (bad) (bad) (bad) inc mov inc or and push sbb and mov (bad) (bad) incl pusha fwait and cmp aas pop add aaa push pushf rorb outsb mov das sar adc test je aas mov and stos ficomp sbb sar (bad) pushl mov inc lret sub (bad) hlt clc repnz sub std (bad) mov and cmp dec aam jnp bound cmpsb loopne sbb jmp mov sbb inc and mov fistl adc (bad) mov faddl sub xor mov (bad) scas repz inc xchg fildl test jge sahf inc in adc lret jg mov subb (bad) daa xchg adc (bad) (bad) (bad) lcall or jo xchg mov or pusha data16 nop clc test (bad) (bad) decl (bad) xor jp rolb xor int ljmp dec daa adc pop mov (bad) (bad) ljmp inc cmpsl and jnp mov (bad) call sub xor jae insl hlt (bad) or pop sub push mov imul fsubl add aam (bad) mov or mov mov dec jno dec xor popa sahf sbb mov xor in ffreep fbld hlt mov cmp test sub jmp adc aaa cld (bad) call pop and ret adcl jb pop repz cwtl (bad) (bad) mov inc (bad) ss test outsl pop adc test notb fldpi fs (bad) pushf (bad) (bad) (bad) (bad) (bad) mov sbb dec push mov scas test (bad) sti fadds and (bad) (bad) pushl pop cmp inc pop fistl in push pop and aaa jecxz cmp (bad) (bad) (bad) jmp cmc jne mov mov fs xchg inc mov jecxz and das cli jmp or (bad) aas and insl fwait cmp (bad) in sbb mov inc lock subb mov sub sub iret jg bound sbb sbb mov (bad) ljmp mov sbb or enter popf xor int mov (bad) (bad) (bad) (bad) std dec fisubl test pop sbb (bad) and sub rorl mov (bad) stos (bad) (bad) (bad) incl push push rorb scas jnp mov xor cmp jae es nop int pop add (bad) (bad) (bad) jmp dec xchg inc (bad) std mov push stos rorl mov mov (bad) (bad) incl add push dec fildl movswl sub push div ss mov nop adcl mov push cs iret mov nop jnp movsb pop lret add and outsb mov scas arpl fist out or leave mov or sbb repnz insl jb mov es add (bad) lcall xor loop or mov aam loope and add (bad) (bad) mov xchg sbb sub push cmp (bad) dec and addr16 arpl in (bad) cmp loope jmp fdiv not int cmc cmpsb or (bad) mov aas mov jp call mov xchg (bad) (bad) pushl jnp push rcll jne fwait mov outsb mov iret push negl xchg mov xchg jno leave inc (bad) arpl push lret pop inc in push bound mov fcomip push sbb cmpsl int3 pop loopne jle shrb cmp and incl add stos cmpsl lock mov push test sub scas (bad) (bad) (bad) call gs push into mov test jae inc insl and push xor test add in xor out add (bad) (bad) incl push (bad) loopne mov xchg (bad) push push (bad) popf xchg ret push push dec ljmp jno (bad) (bad) (bad) mov ds (bad) repz test push and jp jo (bad) (bad) (bad) ljmp ja or sub inc inc jmp jmp shlb int lret in loopne (bad) (bad) (bad) call (bad) leave mov test (bad) das xor mov faddl in mov mov outsb dec dec add adc test sbb mov insl jg (bad) dec into pop sti lods mov orl (bad) cli cmpsl nop inc stc (bad) xor (bad) (bad) incl insl push imul pop xchg stc int out xor insl cmp cmpsl mov mov or fimul jo int3 cld mov jecxz (bad) mov std scas dec sbbl test outsl stc xchg jecxz outsl (bad) ds sarb and ss add iret lods (bad) (bad) decl or in xorb movsb xor mov hlt mov stos (bad) (bad) (bad) jg cmp imul clc into cmp sahf lahf adc data16 adc mov das cli (bad) stc lock out pop push ja jb cvtps2pd pop adc data16 (bad) (bad) (bad) js mov push call and sub (bad) and push cmp lds call cld jmpw adc sub in ljmp fnsave (bad) (bad) fbld outsb push xchg in adc fistpll pop and das push lods jns jge push mov outsb pop jge xor (bad) decl int mov pushf fwait (bad) leave shrb repz out bound (bad) decl fstl aad add aam cld inc test and iret (bad) (bad) (bad) pushl or movsb mov mov ret sbb insb sahf mov push sbb (bad) (bad) (bad) (bad) cmp jns push pop movsl xor pop xchg mov jb xor cmp adc (bad) (bad) fbstp add mov add push sub outsl rcll es push rcr (bad) (bad) (bad) jmp xchg popa in add cmp xor inc add sub and (bad) call test addr16 mov mov pop xchg or (bad) pop cmp mov nop loopne push xchg adc mov call xchg xchg pusha cs sahf (bad) (bad) (bad) call fwait insb cmp xchg fisubrl cmp push test cmc dec popf (bad) ja mov cmp rcll and lcall test into dec mov mov push and decl adc rcrb and clc mov and or stos inc imul (bad) (bad) std mov iret out mov adc mov sti inc add scas push test jl test jae (bad) (bad) ljmp lock lretw outsl cmp cmp aad ds inc shl sbb pop popa aaa std (bad) fldt jmp adc mov adc mov imul cmp xor aad mov movl hlt fimull jle add fs (bad) (bad) jg and mov inc xlat into jecxz jle cmp shrb (bad) (bad) out clc scas pop decb out sahf or jbe in mov adc call mov lods lcall call xor sarl or mov cmpsb inc inc jl fs and decl push test ret push fimul (bad) ljmp cli xor or dec ljmp dec (bad) (bad) mov ss push ss (bad) (bad) (bad) call mov (bad) jo ficoml loop adcb mov or lea loopne push std (bad) (bad) (bad) ljmp inc fwait xchg aas sub sub mov jge iret imul dec sub mov (bad) jecxz inc fidivrl add jle dec das mov stc cmp pop hlt (bad) mov lods mov loop pop jb dec rolb loop fsubrp push idivb jecxz or in lcall es testb cmp clc lret adc push cli incb (bad) fisttp out imul (bad) cmc xor add push xchg jecxz push fsubs mov mov push int push aas adc mov adc jnp (bad) out (bad) jg lcall cwtl fist ret lods dec add mov dec stos add mov (bad) decl cmp mov loopne sbb sub sbb ljmp in push pop lods sub dec lcall and jne call (bad) ljmp (bad) jl pop push jmp enter cmpsl testb jg jg jbe fdivs add mov mov sti mov jmp (bad) (bad) (bad) lcall inc and lods ja shrl cmp pop movsl inc aad jg lahf dec lret jae (bad) (bad) (bad) (bad) cmp mov rolb sub (bad) jb std aam fdivrp aam pop mov call shll adc ljmp arpl mov movsl xor fdivrp (bad) (bad) decl inc lods repz mov push sbb dec ljmp cmp (bad) (bad) (bad) incl in inc adc sti insl jne cltd icebp adc xchg cmpsl fsubs (bad) outsl clc (bad) jmp daa dec int mov adc outsb xor dec sbb mov out cmp pop cld pop cmc pop loopne pop pushf loope inc dec ja in adc or mov (bad) incl das mov inc scas sbb std jmp lock int3 mov repnz cmp push (bad) in mov or call les pop rol rolb pop ror scas pop loop dec imul (bad) call jl sbb sub idivl subl mov scas cltd xor jo (bad) (bad) call push dec cmp lea sub aas adcl fdivrl (bad) (bad) jle dec in call gs dec lock insl cmpsb push add ret sbb cmpsb (bad) cltd and ja dec jae mov pop test sub movsl sub das les dec clc fcmovu mov or pusha daa fild mov mov cmp adc inc and pop (bad) (bad) (bad) decl push and ss sbb insb push addr16 into test ja mov and stc ljmp clc pushl out inc jle call fcomps je mov aas xchg (bad) (bad) (bad) decl xchg or xor xor inc iret aaa mov pop push xchg or test (bad) decl push adc add xor test (bad) incl negl cmpl leave (bad) xor jp xor insb or mov jl mov add mov js mov (bad) scas dec sbb jbe xchg cmp mov lret lcall call mov mov insl sbb int mov (bad) (bad) mov push dec loopne xchg push js jecxz xchg adc pop hlt int insb gs call aam mov xchg mov pop movsb pop jns sbb call insl lock (bad) (bad) ljmp (bad) mov pop (bad) idivb sub push pop loop imul in cld or dec mov xchg sar loopne icebp push lret xchg jg mov (bad) inc (bad) incl jnp sub mov push cli aam out sbb mov (bad) (bad) decl (bad) aad dec adc scas mov adc ja sbb (bad) lcall or (bad) adc xor cwtl sbb and (bad) (bad) (bad) incl mov mov sar push out xchg divb or and (bad) (bad) decl mov stc add cmp adc pop mov add (bad) (bad) (bad) decl mov enter cltd imul mov stos push ljmp inc xchg cld adc xor or mov in (bad) (bad) jmp push inc and mov test sbb or mov add ret stos push lcall mov adc add imul mov (bad) inc sub inc repnz jo mov loopne ret sub in (bad) (bad) lcall mov push outsl scas mov bound loope in xchg and jno into mov fnstsw daa fisubl push loopne lds (bad) lcall mov dec cltd sub ljmp cmp das push cmc inc push and pop aas push stos (bad) pushl std repz (bad) outsl add daa push and mov xchg ljmp (bad) (bad) fsub mov cmp out call fldenv sar (bad) mov xchg dec pusha or fisubr xor xchg inc js pop jae cmp (bad) pop mov lods ret (bad) adc popf adc (bad) jg movb jno sub mov ret ret aas std outsl clc mov push xchg popf xor dec pop out ljmp (bad) std xchg repz jno xchg pop mov inc pop pop call push xchg hlt clc arpl inc adc scas xor add test adc pop (bad) (bad) (bad) jmp adc frstor scas aas cmp repz mov loope je sar cltd jno call clc xchg pop imul jg mov stos adc lahf shrb inc mov xlat test or mov call (bad) lods mov gs pop loope addr16 sub xor icebp sbb (bad) (bad) (bad) pushl push popa or jp push lods mov cmovge fstl btrl arpl (bad) (bad) incl jne lahf sub jb or mov dec loop inc mov sbb or (bad) (bad) call mov les dec dec jecxz jecxz lahf lret pop into mov dec fistp mov int das inc dec pop add jmp ds (bad) (bad) ljmp push cltd xor paddb mov add out das pop pop (bad) dec sbb (bad) (bad) call and or or xchg loop or std jg mov push test inc pop push mov (bad) jmp cmc jns aas stc mov adc std mov fs outsb jg das cli cmp fstpt jnp pusha mov sbb pop ror (bad) (bad) (bad) (bad) cld mov mov fisttpll je movsb push add enter jl fstpt test jp or dec int cwtl push std cmp cs and mov into adc (bad) frstor pop xchg imul (bad) dec lods pusha xor pop and mov inc push pop add (bad) (bad) (bad) call ja cmpsl adc movsb icebp imul rcr aam jnp xchg cmpsl xchg sub loope and mov ljmp loop sbbl hlt jmp les idiv call cmp fs cltd je cli add iret fwait jecxz daa inc daa adc jne mov adc jb das push cmp mov dec insb dec (bad) (bad) (bad) (bad) jp add cmc (bad) scas popf add popf rcrl lea (bad) (bad) jns or jbe fs mov dec inc je xchg sti or pop adc fucomip fbstp hlt (bad) ljmp loop into stos neg xorl out aam imul divb mov mulb out dec cmp andl lods xor pop imul (bad) insl nop aad xor mov lret int3 dec cmp xchg (bad) fidivrl fildll dec sub jg rcll dec push loop push adc cmp pop and call call or dec pop imull daa popa pop lock xchg cmp xor hlt arpl push mov dec lahf fstl scas jl (bad) movsl lcall dec ds cltd lods (bad) (bad) pushl jmp out roll insb (bad) icebp je adc xlat cltd xchg inc cld jg incl pop stos aas cltd ds aaa scas sub pop cmp ficom adc (bad) lcall fs pop dec sti jno fidivl mov in inc rorb (bad) (bad) call pop mov call dec xchg cltd push ja jb inc pop and dec outsl inc inc inc cld (bad) lcall es ds out dec push pslld dec dec cmp sbb (bad) lcall into mov mov out pop inc cwtl in or pop and jge (bad) (bad) call lret sbb add or sbb int inc mov lcall pop (bad) add inc inc or mov test xor (bad) lcall gs adc mov xor popf daa out pop or (bad) jg cmp and repnz push push pop jno add (bad) decl sub pop pusha cwtl adc movsb or fdivrl sbb (bad) (bad) (bad) jmp adc push sbb das (bad) sbb sbb mov jle pop jl cmp icebp (bad) (bad) jmp dec rcrb xchg sub inc nop sbb bound jl inc (bad) ljmp pop popf pop xchg roll (bad) sbb cmc dec mov (bad) (bad) call xor arpl out dec add mov push pop arpl xchg cmp jmp leave test dec jl mov mov xchg fidivrl call cmp sub adc out inc les stos repnz lea and mov scas sub mov (bad) and (bad) (bad) decl jle mov scas addr16 jno mov xchg and mov mov hlt cmp (bad) (bad) (bad) ds (bad) and (bad) lret out imul bound inc xor popa leave imul jecxz dec in mov sbb lcall jmp (bad) ljmp xor int3 xor push daa (bad) mov (bad) (bad) (bad) ljmp (bad) jo and fsub clc pmulhuw test sub (bad) (bad) cmp insb out pop das scas aam rcll mov call cmp mov mov (bad) (bad) (bad) dec in push in mov shll push popa push repz mov or (bad) (bad) decl pushf adc push ds adc jns in clc mov lods xor jle (bad) (bad) jmp pop xor inc push inc sub repz cltd xor jl mov xor decl mov insb adc xor mov add cmp (bad) (bad) (bad) jnp sti out jmp in clc call push sub pop xchg clc push jg hlt sub arpl (bad) (bad) (bad) (bad) addr16 jnp and insb dec or cmp cmpsb pop jae rcl and mov mov ja icebp xor lret push xchg (bad) (bad) (bad) mov sar lock (bad) ljmp adc sbb mov fiadd imul incl mov sti jecxz dec (bad) mov cmp les xchg xor jmp (bad) pop xor sub cs sbb sbb rcrl dec push adc aaa sbb shlb lock pop (bad) (bad) incl push push popf mov cmpl mov int push aad adc sbb dec mov mov sub je adc sub xchg add fadd add hlt pop sar (bad) (bad) lcall loope pop fistp and aaa sub in cwtl mov add (bad) call inc icebp cmp inc (bad) xor adc xchg and lea add ljmp sub ret test jg (bad) repz pop pop cltd cwtl daa lds (bad) pushl scas add icebp jle call or cmp xor pusha sub arpl (bad) ljmp add inc test jno (bad) outsb subb mov dec insb xchg aad fidivl ljmp jb sbb add int3 push clc andl dec mov mov cmpsl and add pop and (bad) cli mov cs jg pop cmp cmp mov sub cltd push faddp fadd loopne inc call (bad) out fisubl (bad) (bad) (bad) call je jge mov dec sbb pop out inc adc mov imul pop (bad) cmc (bad) aas and (bad) sbb pop pushf mov mov mov jae adc (bad) je ljmp mov test in loope mov fwait fwait test adc cmpsl popa out add or movnti (bad) (bad) ljmp stos jns call push dec es adc or adc in shll rcl in mov pop shlb dec mov or pop inc sbb lcall cmp pop mov lock fistpll (bad) (bad) ljmp repnz (bad) or jbe push stc das sbb cwtl mov jp (bad) mov sub adc push imul mov dec or repz adc (bad) and inc scas gs push icebp sbb jp cmpsb mov push ds inc jae (bad) (bad) (bad) jmp add mov inc mov push push mov (bad) xchg sbb aas or pop push pcmpeqb (bad) call (bad) push dec lahf ret in jge lods pushf xor jp pushf iret jbe mov dec dec movsb aad ljmp lock dec out mov pusha (bad) xor mov sub pop pop (bad) lcall ret mov pop test into jns adc insb call xchg outsb mov pop cs mov repz jecxz pop pop (bad) pushl std decb sysret add push dec pop into pop lret pop lcall cmp (bad) (bad) lcall sbb xorl out lods inc scas mov cmp push cld jg xor jp lcall (bad) lcall push aaa (bad) mov mov push push icebp jns call mov mov ljmp (bad) dec xor scas nop add es lahf (bad) mov dec add xor (bad) (bad) (bad) lcall (bad) in mov or ds (bad) fdivrl inc mov dec sub (bad) (bad) lcall xchg sbb mov in fildl mov (bad) int cs arpl pushf (bad) (bad) (bad) (bad) fistpl ret cltd imul test mov push scas mov lods shr jnp (bad) (bad) (bad) (bad) fistpll mov mov sub in pop lock dec (bad) enter out mov dec jmp cmpsl or (bad) pushl cmp adc (bad) mov mov push jnp xlat inc cld incl sbb aam lcall call jmp add inc cmc insl and (bad) cmp sbb ja loope mov cmp mov mov pop add push call (bad) (bad) mov adc shlb mov dec imul das push mov (bad) ljmp test or test mov push (bad) les and frstor setl (bad) (bad) dec push add ja add fs (bad) popa push push es (bad) (bad) call dec pop pop push ja mov (bad) cmp lret and inc (bad) mov xchg lods mov loope in sbb std mov pop mov or pop xchg mov clc rcrb repz std int ds (bad) ja xorl (bad) (bad) jge xor jmp pop xchg adcl add xchg call or (bad) (bad) ljmp mov add pop pop xor xchg adc push or mov sub sub sahf or (bad) (bad) (bad) (bad) mov in fsubs xor add and mov or call in xchg (bad) mov rorb lods xchg insb imul lret inc cmc leave (bad) (bad) jg jo sahf ret inc sub adc inc add push and mov arpl cmp adc adc lds inc (bad) decl xorb (bad) call inc loop (bad) (bad) (bad) lahf push and insl (bad) cli fs and dec jno inc push pushf or xor (bad) (bad) decl push xor icebp scas out xor push stos add and scas enter test loopne and dec jecxz mov mull adc (bad) (bad) decl pop mov cmpsl pop hlt mov jne adc out bound (bad) (bad) (bad) (bad) jge jecxz mov (bad) mov or pop jno xor sar push pop adc test push (bad) (bad) (bad) mov mov lahf jbe stos insl or hlt int pop lahf or dec mov js das pop push push (bad) (bad) (bad) (bad) cmp dec adc mov inc out adc adc les sub rorl clc inc cmpsl iret icebp arpl lret sub cli inc xchg xchg xchg push stc (bad) (bad) (bad) jb les jg outsb jg push adcb (bad) hlt push lds clc dec divb xlat (bad) (bad) (bad) ljmp mov mov mov cmp les pushf aaa pop push cmp or out mov push jb loopne (bad) (bad) (bad) decl ja add or in rorb sarb xor push sbb add (bad) (bad) call sbb inc (bad) jmp and dec mov rol ss sbb repz fdivr (bad) (bad) jmp push test nop mov fstpt xchg and (bad) push sbb or jmp and shr push insb and lahf pop fstpt (bad) fisubl (bad) and pop xchg aad inc cmp (bad) (bad) incl push movsb mov (bad) xor inc repz lods daa sub stos sbb int je loop inc jmp jmp inc rcr pop pop jg popa push (bad) sbb (bad) (bad) call cs aad mov pop sub das cmpsb mov in fisubrl lret stos and sub jecxz,pt call fidiv sbb push sti in gs cmp adc sbb sub pop ja test loopne adc dec push (bad) (bad) (bad) call pop mov movsl mov cld roll out inc add mov cli jnp in (bad) (bad) (bad) lcall out pop add cmp (bad) dec inc cmp xchg out fwait cmp pushl std inc lcall sub xchg lret movsl in clc sub (bad) (bad) (bad) jge mov js pop push subl sbb inc adc pusha dec ficom or loop jbe inc (bad) lock or inc inc xor aas cltd (bad) (bad) mov cwtl out pop ficomp inc or sbb lret nop (bad) sub cmp (bad) ljmp mov push jmp push jb add jno loope jb scas mov fisttp decl sub rorb pop in and push mov push popf or adc insb jne mov inc jne (bad) fdivs or test cli push mov pusha or out mov mov (bad) les mov inc (bad) cmp int3 mov push cwtl cmpsl xchg fs scas test add dec inc mov (bad) (bad) (bad) lcall xchg lret dec je xchg dec movsl inc mov jnp sbb call xor in xchg cmp (bad) (bad) (bad) incl out aas inc leave mov test xchg repz ss mov or mov std lods std (bad) (bad) ljmp add push adc sahf inc jo popf mov mov call mov enter jne decl or fcmovb jp scas out sub mov stc (bad) (bad) (bad) call and ret sub inc lahf lret or rclb mov cwtl jbe call push xor (bad) push (bad) pushf cmp and test xor (bad) (bad) (bad) dec push addb pop in pop mov pushf lcall int3 les das test fcomip (bad) fmuls and and cmp pop (bad) fdivr jnp xchg cmp adc ljmp or enter and mov adc aad pop lret je jmp adc xor popa (bad) (bad) (bad) dec sbb xorl cwtl or jne lods fisttpl push xor (bad) lock (bad) lcall arpl adc data16 pop mov cmpsl ret xchg bound cs (bad) (bad) incl cmp repz xor pop cmp xchg or fsubs enter adc push js mov (bad) pop (bad) in (bad) (bad) aas dec adc mov daa dec jbe fsubp les int3 sbb insl cmp jne mov (bad) (bad) call lahf push inc xchg mov xor stc sub adc inc xchg loope or lea or mov sub clc aam decb add push int3 dec or adc clc (bad) call mov (bad) fiadd icebp fs popf pushf dec popf cmp sahf (bad) mov call mov inc insl pop lods pusha push out (bad) (bad) (bad) ljmp pop imul mov ss mov aam and sbb push (bad) (bad) (bad) js das cmp sub and push nop sbb movsb out jl mov lret clc (bad) (bad) (bad) call stc sbb mov bound mov cmp cmp or movsl cmpb push ret or je mov incl mov aaa icebp cmp adcl aas (bad) xor jmp (bad) (bad) (bad) dec loopne push cltd in fwait jle divl and mov adc fidivr int3 cld (bad) (bad) incl enter sbb mov dec stos or fimul idiv sbb add mov pop mov incl xor fldenv xchg aaa cmpb idivb imul jle (bad) (bad) (bad) incl mov ja das (bad) and pop mov or sbb or xor (bad) (bad) fistp lcall pusha lahf sbb hlt out dec lds addb pop out mov (bad) incl inc xlat xchg (bad) jp xchg stos mov ss jno pop cld cli (bad) (bad) pushl jmp outsl ficoml imul pop xor js push sbb (bad) (bad) ljmp xchg inc mov cld push push mov jbe sarl pop mov sar (bad) (bad) cld xor xchg fwait iret mov inc shrb sub arpl loopne and (bad) (bad) (bad) mov mov pop xor xchg add sub pop mov and aam (bad) (bad) pushl cmp faddp gs add scas pop sub mov xor add sub (bad) (bad) (bad) ffreep rcrb frstor xchg push pushf mov mov mov cld movsl scas cwtl cmp sbb mov lcall pop cmp cmp jle (bad) (bad) (bad) jmp xor xchg inc push jecxz insb xchg lods and jg stos adc jnp lds fsub outsl (bad) (bad) in sti fdivrl nop icebp (bad) cmpsb std shrl cmpsl mov (bad) (bad) (bad) mov jge mov test push enter cmpsl inc pusha pop fistp scas adc jmp (bad) ljmp inc cli leave out adc fldl aam inc xchg dec outsl mov (bad) lcall ds leave jg pop mov push incl cmp (bad) (bad) (bad) ljmp inc fadds testb es jl and sbb pop mov or jnp sub js push sub adc xchg inc lea loop push pop mov adc imul call idivl pop or inc cmp inc mov std fldl lret push jp (bad) (bad) (bad) jmp cmp xchg add pop (bad) sahf repz jb mov push lahf xchg cmp sub cli jmp stc (bad) and sub push xor mov xchg sub mov cs pop add xchg ret adc mov (bad) call subl xchg sbb (bad) (bad) (bad) lcall mov push mov lea push or dec jae lea in or bound (bad) (bad) ljmp xchg xchg xlat jecxz insl in push mov loopne mov or push push sar (bad) (bad) ljmp pop mov xchg mov ds sub lcall arpl imul aad mov inc clc mov test repnz ficomp jg cmp jge jnp push mov fcomps lea cltd arpl push (bad) (bad) (bad) call icebp movsb pop imul mov in and mov push sub loope fbstp push mov or je mov (bad) pushl adc adc outsw xchg xchg xchg mov add cli pop and and pop insb mov mov (bad) (bad) incl jg push mov (bad) or nop (bad) push (bad) cwtl stc fstps adc xchg xorl ljmp loopne enter dec outsl add jl xchg rcll fs cwtl cli mov (bad) (bad) lcall or movsb scas mov dec mov xor and xchg mov (bad) hlt (bad) (bad) (bad) fcmovu stc gs out sbb jmp test xor movsl std mov (bad) mov pop lret cli cmp (bad) subl (bad) jmp pop int3 insl les stos sbb sbb scas mov fwait sbb fsubs lcall in add mov out mov inc dec and inc push xor lea pushf ret enter (bad) (bad) jl fcoml push mov hlt pushf pop loopne repnz ss mov push movsl sbb scas dec pop sbb (bad) (bad) incl lcall jl add sahf or out icebp and (bad) (bad) decl mov jg mov mov push adc push imul mov pop lock (bad) (bad) call into lret xchg pop mov rcll mov sbb outsb inc loope lahf iret (bad) (bad) (bad) call clc stos and mull imul call jns movsb xor sbb jne push (bad) (bad) (bad) dec repnz aaa dec aaa pop out sbb add fnstsw les subl (bad) (bad) (bad) inc arpl cld sarb mov mov (bad) cmc divb pusha push mov sbb push enter dec hlt push pop mov xchg xchg movsl adc adc adc popa or (bad) cmp inc pop pop fstpl xlat mov and cmc (bad) (bad) incl sbb jge divl adc mov roll inc inc test out iret in cld (bad) pushl ja (bad) pushl cmp jmp sub fnsave shrl xchg mov or sti bound fwait lret push mov dec aaa xchg dec jg xchg dec pop (bad) (bad) (bad) (bad) cld js cmp jne xchg out fisubl fistp lcall mov pop (bad) jp cmp fild push stos leave stos cmp mov xor (bad) jle loop out (bad) (bad) in pushl xor jle jo into xchg mov xchg cmpsl clc mov pop in push sub mov (bad) jnp iret xchg int movsl mov lock repz das shrb adc test addr16 clc jae adc push (bad) (bad) (bad) lcall jnp add in cmp jae std pushf ja jmp cmc and fmull push (bad) call mov add mov (bad) int pminub (bad) es jno repz shr (bad) (bad) jmp push xor mov into jg ret cmp add call (bad) (bad) (bad) (bad) decl xchg fidiv jnp lahf cmpl sbb aas cmp sbb stos and into cmp (bad) (bad) call sbb pop and and xchg loope mov sub push (bad) call popf or adc addr16 push sbb inc les insb (bad) aad jne stc aaa sbb pop loopne dec in dec clc int push sbb push xor jge jae inc lret aam push mov call std inc adc or inc mov daa mov iret pop dec cmp xor (bad) (bad) ljmp lods lods sub iret cmc sbb jns daa mov aas sub (bad) push mov jl mov (bad) (bad) (bad) (bad) js ficompl xor fsubrs jle int and sub pop add lcall jmp movsb pop sahf andl mov inc lret (bad) (bad) (bad) fbstp js mov push negb loopne sub mov xor xchg (bad) (bad) (bad) call xor lods movsb fiadd mov (bad) dec lea (bad) jmp in sbb (bad) (bad) (bad) jmp movsb xchg mov sub xchg mov adcl lea pop cs (bad) (bad) pushl sub jl cmc push jbe in subb mov add jmp out cmpsl mov lods pop adc incl lds fildll mov cltd xchg pop push outsl jnp out les ret test mov xor fwait insb imul loopne sti (bad) (bad) lcall int out punpcklwd sub notb (bad) cs iret js cli insl lods push sahf mov loop fildll out mov adc (bad) (bad) pushl aam and pop cmpsb imull cltd xor fsubs lret in and (bad) mov push std leave mov pop insl lock nop inc out mov sub dec sub (bad) pushl enter out ja cmp imul stos lods ret mov xor jne,pn lcall leave (bad) jg (bad) js aad adc rcrb lods arpl (bad) and jp outsl aam ja pushl mov mov inc xor repz stos cmp sbb mov iret mov (bad) (bad) (bad) incl call fisubr fs or add push jnp jbe fstl push stos out xchg decl out sarb jp int xchg mov (bad) lcall data16 sbb mov icebp cli incl idiv stos (bad) (bad) jns imul nop or push test dec sub or jb (bad) (bad) (bad) pushl pop mov (bad) jne pop (bad) jmp mov mov jecxz push xor es pusha movsl jg scas clc cmp lret cmc cmp iret cmp push push ljmp (bad) (bad) (bad) decl test scas mov xchg cmp xchg xor mov jae cwtl (bad) (bad) (bad) (bad) fild xor jnp adc inc jl mov adc cld jmp (bad) (bad) ljmp xchg adc adc into repnz xchg aaa push sar adc ret (bad) and mov adc (bad) pushl clc gs and aam pop lea sbbl xor andl das cli (bad) std mov and loopne jb cwtl cld je inc in push in xor xchg lods aaa xchg xor incl push std pop aad cltd mov mov into fs jmp out dec mov mov cld divb sbb inc push (bad) mov push push (bad) out clc call icebp jno test lcall js mov mov xchg cmp (bad) incl inc mov pop or stos mov cli xchg pop out mov (bad) mov movsb sub adcb cltd fs int mov ret call (bad) cmc push mov xchg call out mov pop push fisub push loop bound loop fneni(8087 ja movsl sub jno pop cmpsb xor addr16 (bad) (bad) clc (bad) out aaa cli lods sbb loope xchg imul dec xor dec je (bad) (bad) (bad) (bad) incl sub inc lea fs mov (bad) dec dec mov inc notb jg cld cmp sub out mov mov ljmp lods int lcallw add xor out stos pop pop push and jg mov loopne pop pop hlt (bad) dec (bad) mov push andl stc adc bound sarl lcall (bad) rcrl int3 push xchg pop enter inc je movsl mov rorb sar cld adc push scas pop cmp into dec and insb adc pop (bad) (bad) cmp xor jmp loope dec test sub (bad) jmp xchg xor es jecxz mov lahf pop int sbb (bad) jmp push mov (bad) mov xchg stos adc stos mov ja fcmovnu inc jg jp pop cmc lds jmp jb loopne aam rol cmp cmpsb test jmp add push xlat xor push pop cmp mov call call cmc mov pop lods adc and cld mov pop popa (bad) (bad) (bad) inc inc out fsubrs jmp addr16 push push scas imul push repnz mov repz cs mov fmuls push dec aam fwait lahf clc insb test (bad) (bad) jg pop imul pop subl inc cmp in pop jecxz xorl (bad) (bad) (bad) incl mov lock jne xlat jbe xchg loopne or lock inc ss sub inc (bad) (bad) (bad) in or (bad) divl xchg loop movsb stos std inc pop cmp fimull push cmp ds inc test or test ds or iret add pop push pop pop call or xor cwtl (bad) (bad) decl inc cltd (bad) out xlat cmpsb xchg (bad) dec cmc rcll jae icebp call jo cmpsb jne jle inc ret xchg aaa das and cld (bad) (bad) (bad) decl jae pop and sahf pushf xchg push in adc in fiaddl inc lock loop sbb or std (bad) dec and sbb not inc (bad) les pop mov xor jle scas mov call (bad) js jmp jmp in rclb cmp jl sti jg mov jns push xchg pop gs adc mov xor and (bad) jmp mov sub mov pop out inc mov decl inc pop mov mov push pushf pusha sub loope,pn dec cwtl jp js incb and jb xor int jle sbb das int xchg cli mov pop cmpsb adc push mov mov (bad) (bad) jmp mov mov mov ljmp iret icebp dec pop jbe pop mov pop add scas (bad) jmp and and dec jg push ret mov aam xor jns in roll xchg orb clc mov pushf adc sbb add imul xchg mov inc xchg bound test xchg mov lock rorl (bad) jg pop add scas inc cmpsl test inc sub adc lock (bad) (bad) (bad) call jbe add jne xor and pop jge xchg or sbb inc push (bad) (bad) (bad) (bad) lcall jbe scas aad out xchg inc rorb in ljmp lds add pop cmc (bad) (bad) cmp push xchg out mov xor scas dec mov fs (bad) fstl sbb in (bad) (bad) (bad) jmp xor push cmpsl (bad) in ja and dec or sub cmp jp (bad) (bad) lcall (bad) rclb das mov lcall and mov (bad) (bad) ljmp lcall cmp lods aam (bad) aaa jnp ljmp xchg dec (bad) (bad) pop pop cli aam xchg xchg outsl imul inc shr mov notb repz into mov jl scas push pop sbb and (bad) (bad) call jmp clc fbld sahf xchg jae cmp cmp imul mov mov je ss jns sub (bad) in lock or mov decl jge jmp (bad) mov dec iret pop dec sarl ljmp jl lods push imul loopne mov jp out clc aaa std jmp push mov dec loop aaa push inc leave add fcmovnbe dec (bad) (bad) (bad) (bad) call mov add into in aas push add arpl jge ds adc jae and (bad) (bad) (bad) lcall fcompl jle push pop inc xchg fsubr repnz mov inc xchg loope xlat cmp (bad) ljmp or cmp and int3 jmp push in or fscale lcall (bad) (bad) (bad) pushl ret mov lods bound push mov jg mov outsl push jp mov pop in jbe dec cwtl pusha repnz movsl cmc cmp hlt mov sbb cmpsb (bad) lcall (bad) hlt scas mov jbe ret pop test pusha leave je stos pop lock mov xor and adc ja (bad) (bad) ljmp cmpsb (bad) fidivrl and add add (bad) (bad) jmp daa movb add adc (bad) cli aas sarl lods test jg or rolb (bad) pushl repz inc lods cltd sub repz push jbe ret pop out loopne (bad) (bad) (bad) pushl or jp ret and rcl je not fs jge out or lock jo rcl decl inc call test arpl pop lods lcall loop leave mov das mov jbe (bad) (bad) lcall sub dec cmp cli rclb cmc mov (bad) (bad) (bad) pushl (bad) cli hlt lds lret mov and xor mov (bad) lcall mov gs sti xchg sub or push hlt outsl sub aam (bad) (bad) (bad) call out divl (bad) sbb cmp push lahf xor aaa jmp (bad) stos jns (bad) (bad) (bad) jmp cltd inc cmp mov aaa adcl ljmp jmp dec fs mov jg decl rorl inc (bad) mov cmp sbb pop imul pop mov mov add leave xchg shl cmpsb lret mov (bad) (bad) pushl push in fwait mov loopne inc out scas inc jno (bad) int scas mov sbb (bad) (bad) decl jae adc fmuls mov jo jae jne and push in dec imul cld (bad) call cmp jno (bad) lret xchg mov and fiaddl ljmp pushl scas fild mov push dec push rclb popf scas jmp (bad) decl cmc dec mov lock jb sbb pop mov mov (bad) jns add cld lahf pop lcall shlb hlt test xor clc ret mov jnp push inc cmp (bad) int stc mov imul (bad) (bad) lcall xor movsb cmp in mov daa ud2 sub lea sub (bad) (bad) (bad) ljmp stc xchg mov cmp inc sbb inc cmp mov out cltd fdivrs arpl add mov rolb cli ja add push fildll sbb pop inc sub dec mov das pop push nop popa movsl daa gs (bad) (bad) decl mov pop cmpsl ja lods cmp stos cwtl mov xchg ss call repnz jge pop cmp xchg into sbb ret das (bad) (bad) mov dec xor or xchg jnp and adc sub cld (bad) pushl push fcmovbe nop push and cmp imul add (bad) flds data16 xor mov add in mov inc sbb and push (bad) decl loopne add test inc ja lods test icebp cmp xorb sbb inc mov mov pop es dec push push dec inc sbb sbb fistl ljmp ds and call dec into sub jnp outsb (bad) xor (bad) ljmp xchg xchg jnp enter cmpsb sbb mov and clc pop aam push stos or (bad) (bad) (bad) call inc xchg jecxz movsb orl test decl das in test (bad) (bad) call inc loop sub dec add mov xchg mov or push jmp dec ret (bad) jg inc cld icebp sub int3 xor inc je inc incl mov fisttpl sub ja push inc xchg in (bad) and out sbb std (bad) incl mov mov test (bad) dec lock add ja nop sbb aad clc xor decl inc push xchg mov sahf mov push pop scas push fcoml in mov (bad) (bad) (bad) ljmp dec inc inc shrl cmpsl dec pop adc fsubrl mov mov sbb cli popa lret aam hlt adc (bad) jns inc les (bad) ljmp sub xor adc cmp popf jo out in xchg fmul jae mov hlt (bad) fcomip gs icebp imul sbb and cmpsb inc mov sbb cmp loop pop ret (bad) fcom popf je mov mov (bad) (bad) (bad) (bad) jnp pop inc cmp pop dec jno push cmp and jnp xorl xlat adc pushf outsb stos inc (bad) decl pop imul mov aam out addl (bad) mov (bad) adc adc fsubrs add jg mov aaa xor ljmp clc call dec xor and shl imull enter out pushf jns (bad) (bad) (bad) jmp pop cmpsl shll into adc jae dec shlb pop pusha pop cmpsb or mov cmp or pop add pushf (bad) (bad) (bad) call mov mov push ret pop loopne inc dec mov push push pop sub repnz cmpsb inc sub into dec loopne inc xorb mov (bad) call std out jg jecxz out jmp insl imul lret add sbb (bad) in cmpsb jecxz out ret mov (bad) ljmp push (bad) fimul dec nop mov aad hlt cmpl sti nop outsl stos pop inc or pop cld pop cmc insl cltd mov notb lret push or out (bad) fcomip jmp inc jns repnz fimul or jp cltd dec mov (bad) (bad) cld xchg mov bnd adc arpl sbb cmp or sub (bad) (bad) (bad) ljmp dec popf sahf cli ds iret or repz out push stc aaa cmc test and dec scas call jmp cmc xor sbb fbld inc pop mulb cld and ret (bad) (bad) (bad) call fild std rorb test js lret out push mov fwait (bad) repz (bad) jmp loope popf bound and es mov cs cld jne xchg imul mov mov movsb push lcall and mov into mov (bad) ljmp pop stc sbb stos mov pushf leave idiv sbb mov fist out outsb push hlt popf xchg les loopne fldcw shrl cmp inc sub push push aaa scas clc (bad) lcall test add pop mov (bad) cltd jno je mov lret mov mov test pop lcall fwait adc std (bad) (bad) jmp test mov xlat hlt (bad) out popa jmp fldcw or push (bad) mov (bad) incl adc mov pop (bad) cli adc cmc in int minps (bad) (bad) pushl push dec xor lret jnp or inc mov (bad) inc out (bad) (bad) (bad) incl stos jae,pt ds cmp loop and js jne inc push mov arpl test inc mov out xor sub nop sbb addr16 (bad) (bad) (bad) pushl or mov sub pop (bad) mov inc mov sub lods out fcomip pushl rcll (bad) sub and insb mov faddl inc aas data16 in insb mov jbe mov or decl xchg in es inc add loope push or iret mov mov or insl in addl (bad) pop jno or dec adc mov mov mov sub dec (bad) (bad) lcall ficompl mov push (bad) mov xchg hlt into mov and (bad) (bad) pushl popf test or das aas test mov xchg push imul (bad) (bad) (bad) jnp add mov fnstsw jp test gs int3 pop dec cli cmp pop cld (bad) (bad) fcoms inc sub popf dec lea aam inc lahf cmpb stos imul xchg mov mov mov sbb aas inc inc push dec nop dec mov jno sahf lret add (bad) (bad) cmp jbe adc xchg nop arpl jp (bad) (bad) call mov xor fstpl movsl cmp cmp and out cmp push mov mov (bad) (bad) fstps cmpsb sti outsl insb pop add insb lahf mov ret push arpl adc xor je shll (bad) (bad) (bad) jmp mov in or aam and ds push push popf inc lds lds add (bad) lcall dec add cmpsl sub xor inc adcl mov inc jno addr16 call loop sbb hlt mov and es stos adc (bad) (bad) decl mov mov loopne mov dec jo adc push aad adc pop repz or sub mov test call (bad) cs cmc sub (bad) (bad) jg (bad) imul outsl lock pop inc divb js cs insl call enter pop or sbb add test push mov mov and scas (bad) (bad) (bad) inc insb mov shl fcoml lret ret aaa pop add in sti stos ret pop aad cmp decl pop pop add mov mov fldenv xchg pushl jbe mov add cwtl xchg add test rcl and mov fnstenv adc lock and pop arpl push (bad) (bad) (bad) jmp scas mov repz call push ja sub daa repnz xor mov jnp data16 xchg incl xchg mov mov (bad) (bad) mov lret cwtl fdiv mov bound xchg lea (bad) (bad) jge ss lret (bad) rolb fmull xor xor dec rorb pop inc (bad) (bad) (bad) jmp mov add scas lods out loop adc lret mov pop dec push enter in outsb sub pop lock sub out es fdivrs or decl or add int3 leave nop je xchg ljmp push ljmp iret mov les cmp pop jo test test out hlt (bad) push adc (bad) in movsb test jle cmp (bad) aaa mov in subl (bad) (bad) (bad) ljmp aad xor cmc mov loope inc mov sbb push ret or jmp aad or mov icebp in mov jp (bad) lahf sarb mulb (bad) (bad) incl into scas sbbl (bad) jnp fild sub inc or lret mov mov shl mov fdivp xchg mov mov push cmp pop sub push mov (bad) (bad) (bad) mov sub fnstenv sub aad stos mov insl lods or sbb inc cmpsl hlt (bad) (bad) inc in push push (bad) scas xor addr16 xor (bad) push insl ljmp sub (bad) (bad) fild cmpsl push rcrb mov (bad) lock (bad) push xchg xchg jns fsts popa (bad) (bad) (bad) (bad) decl loop std add mov lea add jl jno lret mov xchg aaa fdivrp (bad) (bad) jmp pop rclb imul cmp sbb pop (bad) adc aaa insl fisttpll mov (bad) (bad) (bad) jmp adc stos cmpsl sbb cmp inc pop xchg or lds xchg mov jg (bad) (bad) (bad) incl push int3 fs das inc push rolb push sahf fnstsw inc js cld cmp popf lock push mov xchg push mov dec fiaddl pop push nop pop lret out fs mov (bad) (bad) lcall adc aad mov dec ficoml mov cmpsl or mov cmp xchg dec gs (bad) mov dec xchg pop insb mov scas pop aad xchg clc jl mov xlat inc cmp xor or ja loopne (bad) ljmp mov push adc arpl imul shrb mov push insb dec mov add daa int3 (bad) (bad) mov and inc icebp sbb inc jo pushf xchg inc xlat fistpll ja movsl (bad) (bad) (bad) inc scas mov es mov cmp cmp loope xor stc (bad) xor xor (bad) (bad) decl iret lret in mov jo pusha repz (bad) fs jecxz inc push (bad) jmp jae inc mov mov adc xchg repnz mov mov mov mov fwait (bad) (bad) (bad) incl fs outsb outsl dec xor fwait loop loope cmp and sti jne pop adc (bad) (bad) (bad) (bad) cli dec lret es mov adc mov icebp out dec adc xor insb pop xor test loop add out lret push out mov lcall inc mov mov add jne,pn call arpl mov (bad) (bad) lcall pop mov dec pop dec lds sbb out lea cmp cltd add jb and (bad) dec cmpl jmp xchg push xor lret pushf xor clc (bad) decl fsub xor jl sub push mov mov fcoms (bad) (bad) jmp sub jae fwait in cli iret adc (bad) mov jp aad cmp (bad) pushl push mov cmp add fbstp add mov push push decl lds dec mov push sub ret mov lds ljmp push dec addr16 (bad) mov xorl dec aas js adc push xlat mov incl dec cmp fild enter call sbb jno push cmp insl (bad) (bad) (bad) call push mov mov adc mov aam jb push lea (bad) (bad) (bad) jmp bound adcl mov addr16 lahf lcall sbb decl inc dec and aas aaa add push jle hlt mov stos pop lds (bad) (bad) incl sbb inc xchg adc neg jb mov mov xchg das (bad) pop jle sahf and push das cmp (bad) (bad) call push push jne out movsl ficom pop mov mov sbb or cld mov (bad) (bad) call cmp inc push or in nop xchg cmp aaa pop nop or adc (bad) lcall (bad) cmp dec add and fstps jmp jg (bad) ljmp ss cmp pop stos hlt jg inc lret push push add sbb (bad) (bad) (bad) push mov pop rol leave mov into mov lods cmpsl cmp dec fcomps inc loop nop jge out clc (bad) (bad) (bad) fmull pop add push add jecxz and repnz (bad) ljmp out ret and dec (bad) push adc fstpt sub adc jecxz (bad) (bad) jl lock fwait jecxz sub (bad) dec std inc das add adc mov leave mov mov mov popf les sti and mov sub int3 and push and pop or mov data16 mov clc cmpsl cwtl (bad) (bad) (bad) pushl mov popf mov out mov jbe in dec jl stos daa in hlt inc fnstenv aad imul js cltd inc shrb arpl sti loope jmp pop xchg xchg dec les incl out jo cs fiaddl pop dec fild jno xchg mov mov jl jle (bad) (bad) fcomip aam imul add out rol jg js rorb jb shlb push (bad) (bad) (bad) decl inc fisub shrl xor daa nop notb imul leave jbe in popa shlb hlt (bad) jl (bad) xchg xchg (bad) not xchg mov lret (bad) jg push pop fwait add leave xchg mov (bad) lock repz arpl push pop daa sub (bad) push ljmp lret mov mov push jle imul nop (bad) (bad) fisttp repz bound sbb loop hlt enter (bad) in (bad) incl andb push mov pop test and cmp aaa inc add (bad) (bad) decl dec andb dec mov cmpsl ja es pop mov and movsb lock incl clc stc imul and int3 inc mov ja adc (bad) (bad) decl xchg and dec imull scas lret sbb scas scas ds gs imul sub push sbb int inc test (bad) lcall cli pop sub insl jecxz cmpsl (bad) sub inc jmp xor cli (bad) incl pop cmpsl rorb jbe mov (bad) les sbbl mov lret mov jle xchg in push jle (bad) (bad) decl add loop add xor and out pop and js jns aad (bad) ljmp test adc adc mov lahf out sti xchg insl and dec dec (bad) (bad) (bad) (bad) mov insb out cs into imul in jl ficompl sub (bad) (bad) (bad) pushl inc pop jnp repnz jne adc vmwrite or or cmp lcall xchg popf ja jmp mov movsl xchg fwait pusha push clc or fldenv and (bad) (bad) (bad) incl xor es test xor cwtl popa jl xchg mov sbb (bad) (bad) (bad) incl xchg nop jo (bad) mov int3 add xchg cltd pushf cmp insb add (bad) enter pop cli fimull out ja aas sbb jno jg cs (bad) mov xchg sti sarl xchg (bad) pushl (bad) jecxz xchg jle or sbb scas int jecxz bound aas (bad) (bad) fcompl (bad) out clc xchg add rcrl add pop lea adc arpl mov (bad) jmp pop mov popa out xlat out pop js dec add inc rorb outsb pop loop (bad) (bad) (bad) call push add mov loope shrl mov and inc dec aas popa push jmp fs shll mov addr16 stc push or cwtl iret (bad) call mov sarl cmpsb mov fcoml dec xchg inc (bad) (bad) (bad) (bad) lcall jge cltd cmp add xor cltd sub inc movsb les cld out js lock push inc mov and mov mov cmp push add popf mov pop (bad) (bad) xor mov xor add (bad) (bad) (bad) decl inc lret pop out push nop inc aaa fstpt lret outsl push jmp shrb mov mov (bad) (bad) call in xchg push cmp sahf je mov jmp push add aaa or repz dec shlb (bad) pushl in mov mov int3 adc cmpsl insl (bad) sub mov cmp lcall scas cmpsl add sti das pop lods movsb test out jnp lret mov jmp repnz rol std inc mov (bad) call push fwait pop dec lea mov es cli lods or (bad) (bad) jg mov into fnop rcrb pxor popa insl call lock and rcll cmp mov xchg cmp std pop push ljmp lcall mov lock mov sbb pop cmp out in cmp pop and (bad) (bad) (bad) (bad) jp push and icebp jmp into cmp adc xor mov jo je es hlt (bad) (bad) decl push inc in shll leave xchg or xlat call pop mov jne test (bad) mov test xchg lcall adc rclb in (bad) (bad) call je sbb test movsl add es incb dec sub (bad) ljmp pushf cmpsb sub gs lds jbe jmp dec push xor jmp and scas jp jb push insl repnz ret ljmp push (bad) push mov inc out scas push lahf xor xchg add xchg push je mov or loopne mov (bad) (bad) (bad) decl mov xor dec cmpsl dec loopne in cmp repnz pop cmp ljmp mov stos outsb jnp test and push bound push sbb (bad) and ret std ljmp leave push popf push scas dec push pop sub sbb lods je and mov push (bad) jmp sbb sbb dec xchg jmp sub xchg repnz test (bad) (bad) ljmp stc mov push jle jnp inc loop sarl fs mov pop cmpsl incb int3 pop cmp call or imul mov inc jnp xchg inc xchg movsl mov ljmp sub sub pop (bad) fs iret add pop push (bad) (bad) (bad) call inc dec dec popa dec pushf fs imul rolb inc leave cmp movsl push repz mov (bad) (bad) (bad) push mov mov dec adc repnz mov dec dec shlb psllw clc hlt (bad) jg insl movsb dec sbb in movb pusha or add aas hlt (bad) (bad) fbld (bad) jbe inc gs or orl outsb xlat xor cmp jbe (bad) (bad) (bad) fild xor xchg mov shl in adc cmp xor rep idivb aad imul push mov or jb push js fwait in push addr16 (bad) (bad) push push in cmc jae mov mov data16 nop sub addl dec out dec cli xchg (bad) (bad) incl xor (bad) imul sub fwait popf pop push xchg cmp rep mov inc xchg adc (bad) (bad) call jne testb lcall daa mov mov in aas in aam jg (bad) jle test mov movsb sub fbld mov (bad) mov push lods fisubr pop (bad) decl jl jp mov imul sahf out scas and daa (bad) (bad) (bad) lcall adc or cmp cmp iret push imul add xlat rorl fdivr (bad) incl adc insl movl push in mov movsb push (bad) sub lcall xchg js out mov loop jbe mov dec fidivrl adc icebp add ljmp dec sbb or in push jmp ret sbbb fsubrs jge (bad) incl aad adc mov punpcklbw insb sub pusha and and cmovno jno push push jns repz or fsubrs add mov (bad) (bad) pushl testl lock lret jp data16 ret je sbbl (bad) jmp inc push fistp sbbb and into test je jo push popf data16 decl lock dec ds jle mov stc mov into mov mov jg (bad) mov xchg cltd popa insb (bad) ds (bad) pop fmull mov popa xor cs (bad) (bad) decl (bad) push lret push lret adc adc sbb (bad) int mov pushl je (bad) bound sbb xor mov adc mov insl rep push data16 jmp xchg pop add sbb cmpsl stc insb mov or jmp push dec call cwtl fisttpl movsl loop mov sbb push test (bad) (bad) jmp jge fildl mov mov popa or add ret int and incl out jge mov adc and mov xchg inc or xchg clc lods push (bad) (bad) jg cmc je push jne xchg xor (bad) sub sti stos adc hlt xchg adc sbb cmpsb repnz dec and mov cmp jmp or (bad) (bad) out ss pop mov mov pushf lea jmp iret xlat cmp cld (bad) push adc mov dec or add subl repz (bad) (bad) (bad) jmp insl imul xchg xchg dec fnstenv jle pop xor icebp adc add rcrl push pop add (bad) (bad) (bad) decl test pop test rorl mov dec lods in mov pop out ret ficomp fimul jno cmp sbb xlat fadd fwait sbb gs mov jnp jae in jg movsl inc gs xchg jnp je sahf vmaxpd nop hlt call mov ss dec fsubrl mov ret stos mov unpckhps add icebp adc int dec lods fdivrp decl xchg pop test ds imul movsl int3 mov jecxz aad (bad) (bad) (bad) decl xor std inc orb or mov repz push or mov ss mov lcall out jo inc das mov xor rcrl incl push add dec ss call rcrl test scas clc incl xchg outsb fstps je xchg or and sub push decl dec scas rorb in xchg sbb cmp sub (bad) (bad) (bad) mov lods sub ret adc popf (bad) fcoml loope push frstor push ret lret (bad) (bad) (bad) (bad) inc sahf (bad) xor js fs repz cmp pusha mov mov or outsl clc (bad) inc aam push les sub push mov cwtl jp les pop xor (bad) (bad) decl fs xor popa cmpsb cmp testb cmp ret pop (bad) imul xlat (bad) mov fs pop mov add repz bound pop cmp jg xchg insb sub inc or jb and (bad) sub pop adc call mov and or (bad) aad in rorl xchg cmp (bad) (bad) pushl fcmovb or jle pop sbb in xchg mov (bad) (bad) (bad) jmp pushf call inc xchg sbb cmpsb pop xlat xchg jae cmp mull (bad) pop cmc ljmp aad sar daa call rcrb sti into loop and adc sub mov cld ljmp xchg and decl js fldcw shll mov cmc aam call pop aas (bad) mov ret out scas (bad) mov lea sar (bad) (bad) mov pop inc sub jmp cli cltd fs imul mov aad cmp cmp (bad) (bad) decl inc sub movsb jne movsl inc movsb add gs dec ret pushf aas add xchg test push stos scas mov lods mov pop (bad) mov cli (bad) incl push imul pop call push (bad) in test lods ja clc jmp push mov mov (bad) jecxz (bad) (bad) jmp adc mov mov cmc cltd mov xor shll mov (bad) out cli sbb mov jle out inc xor sbb sarl inc enter pop pop icebp xchg lods (bad) ljmp sub bound aaa mov inc and hlt and jg in inc aam (bad) push mov inc adc loop pop mov inc jecxz (bad) (bad) (bad) (bad) push test mov aas ret inc (bad) lcall imul jnp lcall cmp adcl jae int3 inc (bad) cmp scas jno fisubrl mov (bad) (bad) (bad) fist or ljmp jle lahf dec stos inc mov jmp int inc ds (bad) in cmp stos movsl xchg cwtl ret sahf sub ja sbb dec inc call negb out gs push sbb jbe outsb push pop and idiv inc dec sarb fistpll call adc iret gs repz mov push das mov fnstenv pop pop (bad) (bad) (bad) jmp dec pop enter cmc push ss xor sbb call mov pop int inc lods cmp cmp popa adc (bad) (bad) dec fsub insl imul and pusha xor sub push xchg in mov or (bad) mov imul lock mov pusha fnstsw dec xchg cmpsl xchg add push ljmp (bad) incl push lret cld sbb loopne xchg aaa xchg in adc adc jne mov cmp dec movsl ror adc push dec push adc jl fstps pop pop xchg jae (bad) (bad) (bad) lcall mov lret das call sbb nop xchg fnstcw adc dec (bad) (bad) (bad) inc mov bound jecxz inc insl or lods stos push imul imul inc sbb mov cmp popa cmp scas or mov out push mov (bad) (bad) call jo sbb lret and mov dec adc ljmp out (bad) (bad) (bad) ljmp dec push add mov out addr16 (bad) sbb fdivrs fnstsw xor adc call decl pusha daa scas repz sti sbb jp stc test or fldenv (bad) pushl push cmpsl jb push inc (bad) push pop aam xchg cmpl add movsl jb mov lcall repnz insb aaa movsb popa sarl jns sbb (bad) mov pop adc out jge test rorb addr16 inc (bad) (bad) (bad) call inc push mov imul push mov stos cmc lahf icebp cmp adc add mov out or cmp or mov xlat lahf (bad) (bad) (bad) lcall push xor movsl mov scas sahf mov (bad) aam imul jmp add jno sahf jge adc loopne jl stc sbb or mov ljmp cmp xchg dec push outsl sbb push dec sub das push jne lea (bad) (bad) (bad) ljmp outsb cmp adc sti xor clc add ficom mov div sbb lcall ror mov sub mov xchg repnz mov ljmp mov push jns lret xchg push and or push sahf sbb imul inc mov jmp cmp mov push fild jae dec daa mov lahf lock push ret jmp mov pop loopne cmp lret mov ja pop (bad) out mov (bad) mov ds lret adc xor in sub daa insb rorb (bad) incl ficomp nop cli fsubl loopne mov das pop add js or cld idiv incl stos mov sub jnp push negl inc mov cmp (bad) (bad) call mov jbe mov sbb mov mov decl pushf jmp popa sub daa adc or xchg xchg (bad) call ljmp mov cltd leave out xor push addr16 xchg decl sub add mov dec sub adc sub je js fwait (bad) (bad) jmp mov and sub sbb (bad) out das subl add or inc es mov mov es test jecxz sub (bad) decl fidivl cmp lods fwait add xchg mov fcomip (bad) fistp sbb dec lock add movsb insb mov lds (bad) (bad) (bad) pushl sub xor int jmp mov lcall lea leave scas clc (bad) (bad) in shr aas mov sbb cmp les push mov outsb cmp (bad) (bad) jmp stc pop and bound lret stos add loop js or jg (bad) jg mov lcall fcompl insb sub decb inc mov enter fmul mov xlat out stc sub call (bad) (bad) cmp cmc scas push pop sbb push repnz sub cli in mov jnp stos test sub (bad) (bad) decl sbb dec jl ret sbb lods or es cmp outsb (bad) (bad) (bad) inc mov mov xchg rcrl shlb lock mov mov cld (bad) (bad) pushl dec imul inc and addb or pop add pop mov or lods xchg daa (bad) ljmp cli inc stc fildll push data16 flds push cmc aad (bad) (bad) fcomip adc dec imul push stc or fsubs scas mov adc int3 (bad) (bad) (bad) (bad) out and mov jg mov loop or fstpl sub mov in jg (bad) (bad) (bad) lcall jb cli sub mov push jne mov into es and xor sbb sarl (bad) push icebp add sub rcl jmp (bad) (bad) (bad) jg dec or pop or jb cli xor ficoml pop xor imul pop les ficompl cmp aad push xchg cmp dec sbb sbb xchg or popa jae push mov push sub (bad) incb cli cmp pop fs bound and and cmpsl out addr16 je in (bad) ljmp pop bound cmp mov inc outsb xchg pop mov add fwait out push test or push ss lods xor adc popf daa ja jecxz pushl jno fcoml xlat inc sbb (bad) sub call or enter leave inc fstp enter (bad) mov mov pushf les add (bad) call xor loop cmp pop jnp mov enter jne (bad) (bad) (bad) ljmp sub jp fdivrl loopne loope shlb hlt xor repz pop lock fsubrs sbb mov xchg sbb pop into mov pslld mov add sar ja adc dec orb inc ja mov pop int3 xchg inc loopne call andb xor jno dec iret iret ret shll (bad) fbld mov out es mov lahf push jl addr16 ds outsb clc cwtl xor (bad) loopne pop lea fcmovbe (bad) (bad) mov push pinsrw or push sbb sbb (bad) call jge add out hlt mov cld imull xlat in inc jnp scas scas push stos inc (bad) (bad) jg xor ret clc scas jl fldt push call inc cmpsb adc xor (bad) out cli adcb leave xor xor cltd ret popa and outsl xor dec xchg jmp call ljmp loope fnsave stos bound mov daa stos cmp (bad) (bad) (bad) cli sub pop xchg fiaddl pop and insb dec call pop mov (bad) or fildll sub (bad) sahf out push mov ja sub inc cmp repz sbb les inc std repz jns push nop stos mov lcall (bad) clc xchg adc ret jnp jbe dec pop insb xchg pop sbb pop cld inc dec arpl int (bad) dec bswap inc mov adc adc dec ds sbbl xchg movsl cli pop cmp dec leave cmp pop hlt out jbe sbb (bad) into push stc mov lret mov adc jp add cmpsl (bad) jg dec inc cmp adc punpckhdq int3 subl imul call dec (bad) jmp pop jg (bad) dec leave adc xchg inc rolb popa dec rorl (bad) call ja jle lods push outsl (bad) sub and fsubs test mov data16 adc loopne mov adc (bad) (bad) (bad) mov fmull inc (bad) call aaa into add mov fmull (bad) (bad) call ret popf pushf test add inc pop iret pop xchg and inc (bad) or clc (bad) (bad) ljmp movsl out or in pop cs pop daa pop mov fisubl cs and push (bad) mov das out dec testl out lods add xchg inc lret (bad) (bad) (bad) incl cmc je je push lock nop pop js int icebp adc (bad) aad xchg mov pop decl (bad) call dec xchg loop rclb mov xor pop loop pop adc call cld push cwtl pusha push push (bad) sub pop pop xchg inc push out out jmp repz cmp fs (bad) (bad) (bad) aas adc jbe push or cli (bad) or mov adc jbe adc ret cmpsb sbb xor mov push hlt add mov push insb sub (bad) pushl mov data16 in movsb mov jns out sbb loope in jbe mov cwtl cmp cmc sbb rcl jo divl xchg fbld (bad) (bad) (bad) std xchg xchg cmc xchg xlat js xor out int3 (bad) int3 cmp lea inc stos push repnz or decl call dec xchg sahf dec in or sbbl scas lcall icebp lcall movsl jo icebp imul mov pop sub dec popf enter movsl int3 add (bad) (bad) (bad) decl push jge mov jl dec fs std ret pop mov es sbb stc das lcall (bad) (bad) in outsb in (bad) dec int3 ficompl in pop or cmpsl movsl push inc push pop jge stos insl rolb xor outsl (bad) decl xor or jmp pop adc bound pop add (bad) dec sar (bad) (bad) jmp stc xor mov mov lcall je push out (bad) scas gs outsl ss sub call cld test lods movsl jle xchg mov jge sbb ja (bad) jb or into arpl lock lods enter arpl test (bad) (bad) jp jo mov pop mov cmc and sbb push pop mov (bad) (bad) incl in or jp pop add push roll ret jp push mov cld movsb and mov lcall pop movsl arpl add dec and jle and xor nop push push push mov inc dec dec pop mov jp gs mov fimul sti and in insb cmp pop (bad) (bad) (bad) call aaa xchg fistpl subl xchg (bad) jo ljmp (bad) pushl lods xchg jecxz lock or insl in je cmp (bad) call call inc arpl cmc add or in jae push movsb pop push xchg fnstcw cmp cmp jb call xor movsl in cmp mov cmp mov mov mov test (bad) (bad) pushl dec cld outsb sahf lods adc mov fucomi dec test cltd xor stos cmp lea jle cmp (bad) (bad) (bad) cmp cmc push adc in nop idivb adc push int in das addr16 push dec (bad) sub (bad) (bad) (bad) ljmp mov pop pop sub mov aaa mov mov arpl (bad) (bad) (bad) fsubrs ja aam xlat inc sbb pop sbb cli add pop add adc bound int (bad) (bad) (bad) incl nop rcrb icebp mov inc cli mov mov (bad) push ss cli (bad) pushl je ficoml adc or call enter sbb push pop out notl inc imul (bad) incl fbstp loop in faddl or dec pop js dec dec ljmp (bad) dec pop xlat or mov adc mov adcb repnz pop push fwait ljmp test sbb add jne imulb loop and jns pop jnp (bad) (bad) (bad) decl and jge or lods fwait cmp mov xchg ret sbb inc mov or in (bad) (bad) (bad) call add loopne (bad) les xchg dec cmp xorb cmp cmovno xchg jle (bad) (bad) (bad) (bad) out xor mov pop jne dec push pop add inc mov jb ds das lods scas jmp lahf push (bad) (bad) incl push (bad) mov xor les mov rolb test fwait xchg (bad) fisttpl lock (bad) (bad) mov sub xchg xchg push loopne es pop jbe inc in or ljmp imul lret adc mov in sub cs pop pop push mov jg incb mov mov lods cmp xchg aas test ja (bad) (bad) (bad) stc test pop cmp and mov cmp repz lret les adc jecxz sahf jle out mov lea xchg xor ljmp pop cmp jne fstl pop push push sbb push aas (bad) (bad) lcall lret cmp rcrb jo push xchg push out dec stos pop dec xor sbb ds aam ss jg call movsb lods lahf push mov mov hlt (bad) sub (bad) (bad) (bad) ljmp pop test out pop (bad) (bad) push shl xchg mov or subl (bad) (bad) decl or mov and andl sbb sub xlat ljmp iret push cli push dec xor mov addr16 xchg stos (bad) (bad) (bad) jg imul push (bad) push jmp leave mov mov test sbb (bad) (bad) (bad) (bad) dec (bad) cwtl rcr nop xor mov mov cmc and hlt in fsubr rcrl pop in push ficompl fnstsw sti fldt cmp js jle pushf xchg (bad) jg jge cmpsl insl ud1 mov adc inc scas sbb mov adc daa pop add (bad) call lods xchg stos pop inc lret adc (bad) fcomip or xchg xor mov dec iret mov cs jo (bad) (bad) (bad) inc sbb sahf sub dec push pop push mov push int in pop roll sbb mov fcoms or push (bad) (bad) jmp push (bad) sbb loope fisub out (bad) cltd lret inc lods mov lahf push or (bad) aaa xchg mov rolb cmpsb arpl lock loope sbb (bad) (bad) (bad) pushl jmp adc inc loope popa mov popa inc fdivp icebp addr16 stos jl popl (bad) adc pushl rcrl test mov dec xchg fs or or push mov lds hlt mov enter icebp xchg mov adc push (bad) cli mov jecxz into and (bad) (bad) jmp push int3 fistpll fistpl addps and mov cmp xor incl clc add push push mov mov xchg dec lahf pop push and movsl ja inc repz ja orl push (bad) ljmp lock jmp rep out into xor int lods sbb mov cmp xchg jo cli insb in cmp (bad) xstore-rng cmpsl inc cltd mov and and jmp sbb int3 xor (bad) (bad) ljmp inc add pop jle data16 (bad) jae (bad) jo les sar mov dec sahf (bad) (bad) (bad) pushl xchg or into add pop int stc mov push sti push shrb and (bad) (bad) (bad) lcall out sbb cmp (bad) loopne cwtl push insl std mov and je sbbl (bad) incl inc mov xor pop or cs jl ja fist movsl and dec push imul scas jbe jns mov adc repnz addl pop xor pushf jne rorb or xorl or jo push or call loopne mov iret push enter mov jl mov mov repz call fldl jle add add loop adc fnstenv call dec out jns push fwait (bad) (bad) (bad) jnp lods lahf out add jmp push clc mov (bad) shrb lock repnz (bad) (bad) ljmp push xchg xchg dec mov or clc and mov adc xor sub cmp call iret lds cmc (bad) mov dec xchg scas adc mov cmp pop mov pusha adc scas fiaddl ret ljmp jb rclb mov (bad) (bad) fsubrp cltd jne xor movsl movl push leave dec adc cmp ficompl loop out clc (bad) jle loop int3 lds and push out bound inc stc fadds add sbb jge js outsl (bad) (bad) (bad) jmp loop (bad) std (bad) cli and js adc addr16 test jno xchg (bad) mov (bad) ds aad (bad) decl push into mov fbstp movb mov xor xchg push stos jge (bad) (bad) (bad) jg adc icebp xor pusha or imul add adc xchg test (bad) (bad) ljmp cmp and ret int3 (bad) daa fwait out aam enter or (bad) push int3 movswl or (bad) (bad) jnp sti fs test and ds xor nop (bad) jae jmp (bad) jmp lea mov cmp sahf mov mov and mov inc adc (bad) (bad) incl scas insb jecxz jb je xchg (bad) call (bad) dec hlt inc jle lock push jae jg outsb fildl daa sbb xchg inc (bad) out clc pushl mov push cmp jecxz mov mov pop dec xlat (bad) xor adc inc mov add pop sub int dec adcl mov cmp das (bad) (bad) (bad) inc cmp and mov jg loop adc xchg mov push cmp inc push jne nop (bad) cmp inc adc pop test sbb lret ss lock pminsw (bad) call dec cld in cmp mov cmc xlat bound add inc xchg xchg mov cmpsb push (bad) (bad) mov pop push adc and repnz pop aaa pop mov sub hlt jmp dec pop lret mov (bad) (bad) (bad) (bad) fistpll push adc xor rcrb addr16 mov pop xor add rcll xor inc cmp (bad) (bad) xor and shlb shrl mov lods cmp push jle incl insb inc imul cli jnp mov mov mov sbb dec cmc cmpsb test push jbe in int sbb ss (bad) (bad) jmp pop sbb sti mov (bad) loop das jno movsb inc dec outsl popa (bad) jnp (bad) (bad) (bad) jmp jp int je pop sbb loop imul sbb push and mov (bad) (bad) (bad) jp int3 cmp in ret repz out xchg out jl rcrl jnp ljmp lahf and mov fdivr (bad) (bad) jmp jmp push mov inc jbe lcall in jecxz mov inc and mov (bad) (bad) (bad) dec rol jo lahf dec inc std ficomp or xorb xor add ljmp sar inc pushf outsl add loop loop mov clc pop sbb (bad) (bad) ljmp movb dec (bad) inc cmp xor mov icebp cmp (bad) push cmc (bad) stc fbld (bad) jle gs (bad) pop int3 in aam sbb (bad) jg add or nop (bad) mov fdivrl (bad) or call (bad) (bad) lcall sub cmpsb and call popf dec in and fsubrl icebp mov sub (bad) lcall jo imul push or mov push out repz xchg ss mull (bad) in call add hlt scas cltd mov les test int3 sub call (bad) (bad) ljmp aas in pop test call pop mov test test test lcall movsb mov cmp xchg sbb into adc jp inc call xor sbb jge mov (bad) (bad) (bad) pushl dec cmpsl daa mov iret or (bad) jae mov mov push dec jg (bad) incl adc mov jnp addr16 outsl mov inc inc xchg outsl call (bad) aam (bad) jg pop mov fbld mov ljmp clc test jns mov push rolb psllq daa dec xchg pop (bad) (bad) (bad) (bad) out mov sub add mov jno and dec push jns pop not lcall rcrb hlt aam idivb loope inc imull es pop xor jnp data16 (bad) (bad) (bad) js ret aaa mov inc pop xor pusha push mov sbb xchg lods pop cmc cltd add and push mov push popf out cmp in ret push sar pusha dec cmpsl jo mov add cld (bad) jg cmp cmc xor jbe fidivl pop xlat sbb addr16 mov mov xor dec and rol in (bad) (bad) lcall daa stos jae jnp into leave inc out inc dec inc mov mov sbb push ror lock out (bad) (bad) decl jl cmp test cmp (bad) mov jbe (bad) jge out out mov std outsl clc (bad) mov dec sbb je movsb sbb adc mov adc add frstor packsswb xor sbb lcall pop mov in push or mov xor mov mov in jbe lret cmp (bad) jmp sahf pop lds aad cmp sbb mov rol inc pop cmp (bad) (bad) (bad) fcomps orb mov cmp dec insb inc subl cwtl mov (bad) (bad) std push fildll mov mov mov loopne add pop push add fldcw sarl mov (bad) js pop xchg out mov or xor arpl mov lret ss loope sub pushf arpl xchg cmp int3 add repnz mov xor insl cmc xchg and (bad) cld sub xor sbb aad jb mov inc add xchg push dec lods (bad) (bad) (bad) (bad) jle rcll mov insl repz push aaa dec pop xor mov inc fisub into test xlat push sbb xchg push call mov out lods test cmp sbbl (bad) mov xor insb sub push (bad) not mov pop aam decl add clc js and cmp (bad) (bad) (bad) lcall inc sbb decl mov nop in push lret push mov cmp fdivrs test call add jae,pn or mov int3 sahf daa (bad) (bad) fildll and cmp add scas sbb incl std pushf imul push lods push dec fsubrs pop jge push pushl mov push je sbb popa aaa hlt mov lret inc sbb adc mov (bad) and and (bad) pop mov mov outsl cli pushl ljmp fcmovnbe jbe lahf cmpsb or xor (bad) (bad) decl xchg sarl fwait cld mov scas jge stos enter pop ret out clc ja sar push loopne xor mov insb jnp fcomip lcall popf inc and cmc subl mov out in (bad) (bad) (bad) jg mov andl sti add mov testb fs cli in (bad) jmp mov arpl movsb hlt inc mov rclb test pushl out or fildl xchg push ds cmc adc sub xor and jns (bad) (bad) call fsubr cmpsl or into sbb mov push jno jne fcompl add mov rcl cmp jns lret lea pop sahf lret test cltd std sbb aam (bad) call jnp addb aaa inc inc adc add mov (bad) mov pushf adc shr sahf js rorl xlat xchg add sar (bad) (bad) jmp cwtl test lret dec cmp sti mov adc shrl adc fisub cltd cmpsb addr16 mov sbb pop mov mov lahf cmc inc pusha daa loopne popf push (bad) (bad) (bad) (bad) (bad) xor lahf mov push insb push mov mov test sar call jl dec lcall push cltd cmp mov add (bad) (bad) ljmp clc inc xchg in xor dec rcl xor fist mov ds jo dec test pop jle and hlt jmp fucomp repz (bad) incl cmpsb jb xchg mov loopne mov pusha in push jmp (bad) (bad) push out (bad) sbb loop jl xor decb aaa lods (bad) lock push (bad) shl mov xor test rcrl mov pop mov cmp pop lcall decl insl ss mov rorb loope out cmp mov fcomip call dec mov xchg popa bound dec mov outsl iret daa imul fdivrl out mov test scas ds dec sti jg or jl (bad) mov stos (bad) (bad) (bad) lcall and xor xor mov push mov loopne lock sub and (bad) jmp (bad) loope mov jno cmp mov hlt (bad) decl push rcr aad add cmp cli ror sbb sub (bad) decl loope dec je jg daa mov stos jno or (bad) (bad) call (bad) or sub pop outsb fidivrl out mov pusha mov stos aas cmp les je xor mov mov in imul popa add je (bad) lcall jae rol inc imul (bad) xor mov push enter dec mov or lcall shl jo stos mov push inc lea xchg (bad) lcall sub (bad) lret lods jo les rolb jmp clc add mov and (bad) (bad) (bad) pushl pop mov xchg pop dec lret call pop frstor push pop push test loop fiaddl insl insl push push std call nop xchg inc cmp jp inc lea push loop jle (bad) (bad) call fs jge lret inc fbstp and into fidiv pusha dec inc stos pop jb loope (bad) (bad) ljmp lock cmpl sub sbb mov xor pop mov in push (bad) jg pop cld dec lret dec outsl mov adc (bad) aaa stos aaa mov mov aas ss (bad) (bad) (bad) pushl ret and xor dec enter movl mov iret and xor (bad) (bad) (bad) cmp repz cmp int push sbb loop mov mov dec pop jb ss mov (bad) sub inc inc iret pcmpeqd xchg mov ss add sub inc mov arpl mov test xlat imul jb mov cmp pop xchg (bad) ljmp cs loop or add jne xchg scas xchg lds (bad) (bad) call outsb add mov mov mov cwtl pushf imulb js lahf arpl cmp incl lret loope jge sti xchg xlat dec or add sbb jno push cmp (bad) incl roll mov xchg outsb xchg int pop xchg int3 insb lds dec jnp sub mov jne (bad) (bad) (bad) pushl sub adc lock rcrb and mov lods cmova popf test stos jb (bad) (bad) (bad) pushl add aas push push les push dec mov repnz sub addr16 andb (bad) decl pop outsl loop mov jl xor fisub mov pop lahf (bad) into pop (bad) (bad) ljmp ds (bad) xchg lret xor dec test sbb in xchg pushf test or (bad) (bad) (bad) call fstps aas inc popa hlt ss pop adc repnz xchg ret jl dec add mov (bad) (bad) call repz rcl adc mov xchg mov nop xor xor cmp push (bad) (bad) (bad) lcall push notl rol or les pushf fnstsw jno shrb mov imul lret adc stc (bad) (bad) (bad) ljmp neg std adc adc sbb sbb or adc flds mov ljmp movl in lahf ds cmp dec jmp push idiv (bad) ljmp mov jne aaa subl push dec pop in loop xchg push (bad) or push (bad) (bad) (bad) call cmp out sub dec jmp mov mov mov push (bad) mov mov (bad) (bad) decl sbb negb push and jne pop adc icebp push aad movsl cmpsb mov (bad) lcall jno mov fwait mov dec rcrl push dec push sub cmpsb add (bad) (bad) (bad) frstor outsb jge inc and out in add cmc push scas mov (bad) xchg int dec pop dec fdivr (bad) (bad) call inc bound cmpsl in pop jg cmc fildll dec inc adc and (bad) (bad) decl and daa in jg mov loope and inc (bad) adc (bad) (bad) (bad) (bad) fmulp and pop movsb lret in push mov call imul jnp jno jne js sbb mov outsl (bad) (bad) (bad) (bad) jns cmp dec loop (bad) mov mov jmp int3 xchg push xlat (bad) xchg xchg loopne cltd int cmp ljmp shrl sub mov fsubp cmp ds repnz popf xchg mov (bad) frstor fnsave push ds inc mov sti (bad) sbb lcall (bad) (bad) (bad) lcall mov daa or nop enter fbld gs dec mov xor enter dec cmc (bad) (bad) incl arpl cmp pop xchg push or out mov push cmp ljmp lea xchg outsb test rol fdivrp mov (bad) (bad) push lods mov das lds (bad) or push mov fmul in insl xor cli (bad) (bad) inc das push sar dec aad js sbb out popf xor inc cmp dec xorl pop data16 cltd cmp insl push rclb (bad) (bad) lcall je jns nop pop call repnz insl daa add dec loop in nop movsb gs inc sar (bad) (bad) ljmp pop addr16 stos cmp lahf lods xchg sbb and ds jl (bad) jmp lahf mov mov popf mov or xchg pop mov outsl (bad) mov lods lods (bad) (bad) (bad) pushl cld lds dec js or data16 cmc fsub pop xor les test (bad) (bad) (bad) pushl ljmp and mov or push sarb pusha stc ret push (bad) (bad) (bad) incl jnp pop rclb sub inc adc mov xchg sub mov dec mov mov lods (bad) mov mov imulb pushf and mov rorb incl scas popa ljmp or pop pusha (bad) xor pop ljmp cli ljmp daa jae out inc dec mov ss aaa or ljmp mov (bad) (bad) incl out mov pop mov dec inc mov inc xor add mov add (bad) (bad) (bad) incl mov xchg xor call (bad) ret push out ror lret cs (bad) (bad) ljmp xchg sarb push int adc jge or popa pop fs lret xchg ss mov jmp (bad) incl lods pop jl dec (bad) mov mov lret (bad) xor push (bad) outsb sub outsb aam lcall dec jg add in jecxz (bad) (bad) jmp popf les cld mull lret push enter cs sbb (bad) (bad) (bad) (bad) cmp xchg out popf inc sbb add mov in or mov xor (bad) mov (bad) ljmp in aam mov sub xor lret popf stos and (bad) (bad) decl jbe in das bound int and fist inc ret xchg add cmp sar es hlt (bad) in cwtl pop xor (bad) (bad) (bad) jg cmp cld (bad) mov cmp (bad) incb xchg fdivrl int3 cwtl push add test addb jl jb add mov clc mov mov (bad) cmp out aas sarl cmp (bad) mull and jle and ss and dec stos mov mov push js and imul stc (bad) (bad) (bad) (bad) fistl jo pop sbbl inc jnp test (bad) dec pushf adcl cmpsl push (bad) inc fs lods add add push dec pop adc adc jmp xchg xor (bad) mov mov adc jo adc add faddl xchg (bad) mov (bad) (bad) (bad) ljmp mov xor pop add cltd push pushf cmp mov cmp sub push xlat mov dec bound lcall cmp mov movsb les inc add paddb insb push lahf lock (bad) out icebp (bad) (bad) (bad) jmp sbb psubd scas aad icebp adc xchg sub je icebp outsb xchg jno sbb sahf (bad) (bad) (bad) pushl aas sub jp inc sub mov xchg push lcall das dec aas ds mov inc in (bad) (bad) (bad) (bad) lcall rcrl outsl mov xor negb js sbb mov test sbb popl fst hlt mov jmp call (bad) jg scas lock pop and xchg inc mov mov std cmp mov decl test dec imul xchg jge inc mov mov aaa (bad) (bad) (bad) call ror mov pushf push xchg mov and mov push insl ja dec pop arpl mov repz mov fimull rcll lds icebp push and cmp jp pushf sbb adc test or out cwtl mov in push ret jbe jmp cs (bad) (bad) (bad) jmp xchg sbb fcmove (bad) push mov (bad) aam aam fstpt mov mov fcomps call call scas mov mov push pushf or add mov addr16 (bad) (bad) pushl cld jge (bad) adc out push push sub xchg ret daa mov gs or and jno pushl (bad) ss mov hlt xor (bad) mov or sub orl (bad) decl jp pop cltd out xchg jecxz fsubrs inc jno xchg jo sbb (bad) ljmp cmpsl (bad) out test sub xchg fiaddl pop adc and (bad) (bad) decl mov xorl dec sbb jle insl dec inc mov jns imul (bad) (bad) call in jp mov xor or or xor jae aas xlat cli cmp std (bad) (bad) pushl scas loop orl call inc rcll xor jo jge (bad) pop pop or pushl hlt jl cld fnstsw rclb repz shrb xchg xchg cli jg mov push xlat pop clc pop imul icebp (bad) ljmp sbb mov jbe fcmovne cmpsl ret aad std jp (bad) (bad) fist dec fisubl sub xor iret jb sub insb push cmc repnz insl sbb (bad) (bad) ljmp fwait jo repz xchg lock js into js jnp mov cmc aad in mov std mov sub call push push sti or xchg leave xchg mov sar (bad) mov fldcw dec xor sub clc rcrb jmp (bad) (bad) (bad) jmp add in mov sbb data16 loopne or or rcr jnp xchg mov decl add jl mov das (bad) insb mov cwtl icebp mov (bad) (bad) ljmp xchg movsl ss into sti pop out rcrl rol push mov push mov cmp pop jo rcrb cltd cli ss test je gs dec cs js (bad) lcall cltd ljmp in or daa mov cmp mov mov incl adc negl add lock jb out push and inc mov cli jg fmuls mov cmp popa xchg sub or (bad) ljmp xchg mov (bad) fisttpll push out xchg in (bad) shll jbe (bad) (bad) (bad) call sahf inc insb loopne push fpatan adc sahf dec push lret mov test xchg pop mov scas (bad) (bad) mov mov ljmp loopne jae push add mov scas dec pop repz cmpsl mov or aaa ljmp stos sbb ja jns (bad) (bad) out and cmp adc (bad) (bad) ljmp stc lret dec sbb or inc dec rcrb popfw test fildll push sub test mov test push movsl pop fsubs call je pushf (bad) (bad) (bad) call mov subl lods (bad) arpl xor stc adc xchg movsl push inc lods xor (bad) (bad) (bad) mov sbb aaa jge ret inc jbe cmpsb push and testl decb jne push dec adc jbe pop dec mov cmp cmp cmp loop add (bad) fistp outsl cwtl add in bound cltd push subb jg (bad) lea jmp mov (bad) (bad) jg push or out and mov adc clc mov sti fcmovbe in (bad) (bad) (bad) (bad) in push dec or repnz xorl dec xor push add (bad) jg (bad) js jle push add scas loope push sub mov and shll mov (bad) cld scas out jp lret mov sbb and fcmovu (bad) or ret call and and mov adc scas clc idivb and jae dec adc lahf pushf mov push inc mov (bad) (bad) decl scas mov bound inc add (bad) fs xor sbb xor ss into (bad) (bad) (bad) decl lahf (bad) xor iret sbb xor pop es lcall loope idivl mov (bad) lcall dec pop mov cltd push mov aad mov fisubrl mov dec lahf or sbb jl in sub out pop movsb jg cmp jge sti adc stc xor nop test stos (bad) (bad) (bad) incl jmp xor gs psubusw xor fisttpll inc sahf (bad) mov xor (bad) (bad) (bad) ljmp xchg and imul fcoms dec xor jmp cli sub (bad) incl daa or pop les fisubr ret imul call mov ljmp aaa leave add clts imul or push (bad) jg or push sub dec add int3 ja (bad) (bad) jmp cmp lret divl lods hlt sub pushf out and test in (bad) lcall or fiaddl movsb and cmp mov scas aam mov adc call adc movsl inc mov outsl pop (bad) (bad) (bad) lcall repz xor stos movsb mov out push mov lods fildl (bad) (bad) ljmp sub xchg and sub je and lcall aas push and (bad) (bad) (bad) mov xchg xchg add (bad) test (bad) xchg pop push leave mov add cmc ljmp inc lds xorl lea cmc (bad) (bad) lcall mov sub jp enter pusha fdiv enter test rclb (bad) (bad) (bad) decl jbe (bad) lock cmpsb mov mov xor fimul repz inc (bad) push add jg test ds push stos sub cs rorl fwait (bad) jmp mov cmp loop jl scas dec dec loopne (bad) (bad) stc fsts jb gs push out mov inc in int3 push and (bad) in pusha outsb jo (bad) (bad) mov xchg loope or cmp jno,pt ffree inc and (bad) (bad) (bad) inc (bad) sbb inc addr16 call mov lods int xor push push pop mov in (bad) (bad) (bad) (bad) mov loop dec inc inc in sub push cli xchg add mov xchg inc mov push jmp push cld jmp aam das mov test sbb pop pop stc aas cmp cli (bad) fistp scas mul les mov jmp sbb imul sti imul lahf in mov xchg jg push xchg mov mov (bad) (bad) dec mov sti loope (bad) mov sub rorb icebp mov rcll (bad) int cmp (bad) (bad) (bad) fcomps inc pop leave cmpsl in sub lock fcmovne xchg lock pop sbb jecxz jg stos xchg ret sub cmpsl scas push sub pop (bad) cmp ret fsubrl mov jbe test cli cmpsb adc insb jmp mov mov xchg out xchg js jbe or jo pop cmp int3 and jnp cld (bad) call push test or sbb pushf adc nop cmpsb gs jl mov lds push (bad) push sub cmp mov sub jnp repnz xchg aam clc sahf or (bad) (bad) jl sbb pushf fs and seto jg xor aad jno (bad) pop pop jl test jg lock jbe mov popa mov hlt test loopne jo mov jo jg outsl hlt (bad) fstpt outsl dec (bad) inc outsl pop enter daa jmp loope sub call dec lock in cld flds addr16 repz inc jno mov repnz cmpsl add xchg das push (bad) mov mov sbb mov dec sbb push add rcr test and push stos mov adc add jmp dec cmp or ljmp out jnp push lcall sti arpl mov loop push jno pop iret loopne adc adc leave (bad) (bad) (bad) (bad) in sub cwtl xor inc mov bound fisubl fcmovnu xchg cs xchg or ret clc adc mov jae jmp daa and xchg pop cmp (bad) decl adc stos push push mov cld popa popf pop lret xor pushl jp add shr divl ss jb cmp ret stc roll lcall (bad) jmp sub add pushf push add lret push inc ja outsl cs pop std imul xlat (bad) (bad) (bad) push les inc or mov inc adc xchg jmp adc mov add xchg out test (bad) jg xchg xlat call jne xchg pushf in push sbb dec lds shll inc mov (bad) (bad) decl xchg or bnd push mov inc sub push aas les hlt in mov dec xchg jge scas sbb pop cmp jp mov sahf (bad) xchg jae out dec out jne pop add inc bound call add jp mov pop xchg mov testb jae negl jns (bad) (bad) mov js stos mov push adc mov push inc testb das cli pop jmp cmp jmp sbb pop jbe loope inc imul add pushl (bad) mov mov jae stc jnp pop pop pop push and sti in (bad) mov and cmc mov sub sahf and adc (bad) (bad) (bad) inc sti mov mov enter stos lahf lret cmp mov dec dec out (bad) (bad) (bad) jmp leave fcomp mov xor enter lods les sub dec iret fildl xchg lea dec cld jmp aad ds out loopne xchg mov (bad) (bad) (bad) jg hlt sub xchg bound jp aam out lcall out mov (bad) ficomp insl push loop sarl inc and sub (bad) incl loope shl fnstsw fwait test mov pop and out in lcall (bad) call std dec (bad) aaa arpl ret jae ljmp (bad) pop call (bad) (bad) (bad) (bad) mov push inc inc inc dec lahf das frndint lahf aas mov test divb inc mov stos add pushl xchg scas shll js in mov ds das cli push ja lods cmp (bad) fdivrl test xchg pop pop mov nop fdivp out idiv (bad) inc push fmuls cwtl jo inc int mulb sub mov mov xor das cli (bad) in into sbb les cs cmp (bad) dec xchg loope cmp je ja mov leave jb hlt sbb popa outsl (bad) lcall push and loop mov popf ds cld data16 gs (bad) (bad) (bad) jle pop pop imul mov mov lahf push inc outsb pop add (bad) lahf cs pop xor (bad) incl mov repz sahf (bad) iret push stos sti pshufw (bad) ds mov (bad) (bad) (bad) call inc scas or cmp and test lds pop cmpsb or repz test loop (bad) push ffree enter push aas mov (bad) (bad) (bad) out push sub cmp inc mov daa (bad) nop jbe dec pop lret pop adc rcl xor cmp icebp mov cmp mov fcmovnb roll pop dec int3 mov pushf test pop lea fidivl push sbb inc pop xlat mov pop gs (bad) (bad) call fs push std or decb sbb lcall icebp xchg add mov (bad) (bad) incl out insb xor mov jp fidiv xorl clc (bad) (bad) lcall push int add push mov xor jnp lea mov xor dec mov xchg or dec rolb fcoml add repnz pcmpgtw aaa cld (bad) (bad) cmp loop inc int3 (bad) ret inc mov insb bnd and (bad) (bad) lcall sbb jne (bad) hlt mov cmp and ds jp mov test test push cs cmpsl rcrb bound scas sbb idivb sahf pop in (bad) jg mov xchg jnp cmp sbb and push in test decl push aas mov lcall incl andl das cltd fcomps xor jbe pop rcrl in (bad) (bad) pushl roll cmp jle incl xchg mov sub (bad) (bad) ljmp fild mov xchg jae,pn or mov jno cld (bad) cmc xor int3 addr16 mov rcrb (bad) (bad) pushl pop rcll cmp pop fcmovnb add xor mov or xchg (bad) (bad) in (bad) je cld out add (bad) clc movsl shll push ljmp stc fsubp cwtl push sub add call mov sub stos add lock popa sbbl adc (bad) (bad) (bad) (bad) (bad) (bad) cmp inc push test pushl jae ret and negb out or outsb and dec pop cmp jp xchg push out sub into in dec xor xchg (bad) loopne jbe cmpsb mov lret xchg call sbb enter and cmp pop or pushf clc fildl adc (bad) (bad) (bad) fnsave (bad) lock xchg shrl test ss ja into xor jg adc (bad) (bad) (bad) aas inc jle xchg jge or push dec movsl jecxz sahf ljmp mov (bad) (bad) (bad) inc cmpsl je jp add jmp popw or addr16 out loop sbb daa mov (bad) xor cli (bad) pushl jo inc sti pop lds bound loop repnz (bad) call insl pop leave add (bad) negl mov cltd cltd loop imul jno (bad) (bad) ljmp adc std adc addr16 cltd mov stc enter stc (bad) (bad) (bad) ljmp lock push push fldcw and pop cli sub mov and lods inc or jle or dec (bad) (bad) (bad) jmp fsubl in or stos inc (bad) mov dec or xchg cmp (bad) jmp callw fadds icebp shlb stc mov movsb mov je fwait paddsw sti sbb (bad) (bad) sti jnp inc sbb (bad) mov in inc jp fimull inc out arpl jmp (bad) (bad) pushl and (bad) daa cmp xchg inc adc hlt jl xchg push das aaa gs sub (bad) (bad) call xchg scas xchg and ja inc cmp push loopne fwait shll imul sub (bad) (bad) (bad) ljmp loopne lret push xlat out (bad) add mov cli push xchg cmp mov stc aaa push js (bad) (bad) (bad) inc xchg sbb lret mov (bad) fmull cwtl in (bad) aam xor push (bad) mov movsl mov sub out int sub push inc das adc adc lock (bad) lcall xor (bad) push popf aad imul sarb out leave outsb adc add (bad) (bad) jmp shll cmc pop cs push dec or into xlat (bad) (bad) dec rclb mov insl xorl ror lods les (bad) (bad) (bad) jg out cmpsb in pop shll out lds mov hlt ds mov fisttpll jecxz (bad) (bad) (bad) jmp sub mov fistpl std sbb inc push fiaddl cmp into stc stc cmpsb add (bad) (bad) jmp push or repnz adc in cmp add (bad) xchg nop out or or mov cmp xor aas mov cs out cwtl data16 ficom xchg mov sahf insb popa sbb sbb (bad) (bad) incl repnz push jo mov xchg sarl jb adc aam shrl js xchg and (bad) (bad) lcall push loopne push xor or jle xlat jp and xchg lock add out (bad) (bad) (bad) inc or sbb pop cmc js or push push fild imul mov arpl outsl dec xor (bad) (bad) (bad) in cmp cmp ret movsb mov lods iret lret sbb out stc or (bad) (bad) (bad) mov lcall sub mov jno dec mov js fimull jno xchg and (bad) (bad) jp clc jns pop inc sub arpl in push xchg jb rorb xchg dec add or sbb xchg (bad) decl es cwtl enter pop adc sub xlat adc sub das cli (bad) jg xor dec xchg mov push data16 imul in mov (bad) pushl dec sub pop shll cmp dec adc je faddl mov incl cld call loopne loope sub lahf sarb movsl mov and cmp (bad) (bad) pushl (bad) roll ja ds push adc icebp mov ljmp mov cmp sbb test jbe into lcall sbbb and (bad) (bad) (bad) lcall xlat mov sbbl and push (bad) xor leave sub (bad) (bad) jmp inc pop xchg xchg test test inc fs ret push lea mov dec int dec adc sahf fcomip (bad) lcall out cmpsl jecxz nop mov push jle xor sbb test inc adc jo cmc (bad) (bad) (bad) (bad) mov das cmp push mov mov repnz adc pop mov insb std sub (bad) (bad) (bad) call jne (bad) orb mov pushf mov ret scas jge popa xchg mov dec (bad) (bad) jg lret inc bnd and decb movsb arpl pop sub pop hlt (bad) (bad) inc jge sbb fs inc mov jecxz ss fdivrs loopne mov or pop push sub adc inc and fstl jne in les (bad) out or mov addr16 mov and xchg stc in in jecxz sbb push cmp nop (bad) (bad) (bad) call (bad) loopne mov xchg sbbl in mov xchg (bad) pushl das mov stc jnp movsb sub std int3 add aad or cld adcl fisubl inc nop lods sub (bad) mov js or std pop mov mov mov (bad) incl and xchg push fmuls pavgb ja popa push xor stos (bad) fbstp notb enter xor imul data16 iret sub pop (bad) (bad) (bad) call inc jb roll sbb mov push movsb vpmacssdd sub fist subl adc cmp std jmp push jl push mov decl and mov out rcl (bad) (bad) (bad) call xchg sub punpcklbw fadds pop shrd xchg inc mov pop (bad) (bad) (bad) inc inc cmpsl or (bad) jle clc out fimull incb cld cmp cld (bad) (bad) lcall scas adc andl pop out enter (bad) sbb (bad) inc or sti dec add fwait aam sbb (bad) mov xor (bad) (bad) jmp int3 cmp int sbb loopne aam sbb fs push idiv (bad) in lods jbe sbb add add xchg push cmp dec dec arpl inc add cld cmp inc or xor out inc mov push jbe mov push and inc pop add sub push pop hlt push adc xor mov adc (bad) lcall adc pop test mov and imul lds stos lcall add lret pop ret dec mov fcomip fs stos add cmp jb repnz push sub (bad) mov add call (bad) in dec cmp lret ds mov iret lds xchg out mov imul (bad) (bad) lcall or sti pop pop jecxz cmp jo outsb adc outsb sbb jg lcall jmp les iret sub sbbl test gs mov aam mov add xchg ror mov (bad) (bad) (bad) aas push gs xor imul or adc in addl rcl pop mov mov and sbb aaa ret fstps push clc mov (bad) lock call mov es (bad) mov stos dec stos imull mov ljmp scas aad inc or scas push push mov aam stos out or (bad) (bad) (bad) ljmp notl sub xor mov (bad) push arpl pop cmp out addr16 aas pop stos das adc incl pop std fwait int and add mov (bad) (bad) (bad) pushl or jae aas sbb ret test adc cmc test scas in mov ja (bad) (bad) call pop and xchg (bad) loope insl mov xchg cmpsl pop (bad) insb pop ficomp (bad) (bad) jmp cwtl mov fidivl sbb xchg lahf leave cmp cltd and or xchg pop ss ret or lods aad jb pop inc stos (bad) mov sub hlt aam or das dec and sar (bad) (bad) jmp popa ds loop and push mov xorl cwtl pop sub (bad) (bad) (bad) jmp mov jb cs jns (bad) arpl cmc mov popf mov pop std add mull pop adc dec gs cmp mov xor jmp jl fsubl jg fisubr or inc neg test aad push in (bad) decl incb push clc xchg stos lahf inc mov (bad) js and xor (bad) (bad) (bad) decl data16 push mov jne test mov rorl pop (bad) and hlt movsb mov mov mov xor lahf pop pop std cmp pusha sub xchg (bad) (bad) (bad) (bad) ljmp cmp data16 push sbb popa std push dec mov adc mov mov cmp cmc mov je out dec pop adc clc sarl fcomip incl icebp jle aas xchg xor mov lock mov (bad) decl ds roll cmp add or (bad) (bad) push fildll xor add fsubrs clc jo mov (bad) (bad) (bad) mov adc inc and fmul pushf mov icebp pop out xor icebp imul (bad) incl cmovnp cltd pop inc jmp notb and insb mov (bad) call stos xchg das sar cmp je arpl jecxz mov in in jo push ret (bad) cli rorl xlat push shll lret addr16 pop mov pop (bad) call into inc in inc push dec out stos sti xor cmc pop nop lods pusha xchg cmpsl dec (bad) (bad) (bad) call adc pop cmpsl arpl das adc ret nop fcomp mov addr16 fildll pushl adc jbe bound xor (bad) pushl inc in adc stc mov sub adc outsl (bad) (bad) decl in xor or sbb nop add cmp std test sahf (bad) mov xchg push inc fldt (bad) shrl lock call dec cltd sbb js (bad) mov (bad) (bad) (bad) jmp setae mov mov dec int add mov push mov dec mov lcall jl pop int idivl nop loop mov ret bound sbb or dec push cli cmp fwait outsb mov loopne adc sarb sub test scas and (bad) call sub add sbb fcoml add sub aam xchg ja,pt sbb inc movsb ds loop cmp int3 in sarl in out call loop ret fisttpll dec roll mov cmc das inc es call mulb and (bad) call ret jnp imulb and push repz jo (bad) (bad) fistpll and cmpsl xor mov mov (bad) pop leave test adc lea inc data16 sbb gs in push ja or push add xchg cmc mov cs lret movsl ret (bad) (bad) jmp cs dec stos inc out jno xor mov stos cli gs jnp (bad) (bad) (bad) inc cld cwtd lcall push int mov (bad) xor test int3 dec dec cmc xor dec xchg inc jae aad fs cmp bnd (bad) (bad) (bad) jmp xchg incl adc vmread mov pushf inc enter je call (bad) (bad) decl mov sti pop and pusha cltd jge test scas cmc xchg push sar call jl shl sub mov jle and xchg scas mov dec aad (bad) (bad) (bad) ljmp pusha mov repz out xchg dec fisttpl ljmp push pop mov mov mov (bad) (bad) lcall outsl cld stos cmovno jns fmull jmp mov out add (bad) ljmp repnz mov dec sbb mov out (bad) (bad) call pop in pop out orb sub fcmovnbe sbb xor xchg xor cmp sbb fwait jge lea push movsb xor and push jo push dec daa cmpsb sub (bad) (bad) dec xor sub fimul cmp or lcall dec fs mov push cmp pop and push icebp ljmp lods aad xchg addl movsl adc loopne jnp cmp int fwait jae (bad) (bad) (bad) (bad) out out mov xchg ja push sub es sub ljmp (bad) incl ss pop mov std pop (bad) xor sub add pop mov js in mov (bad) pop adc dec js (bad) iret and cltd aaa outsl orl xchg pop std aad pushl jg (bad) incl dec pop in cld cmpsl and mov (bad) (bad) (bad) incl mov lods aas cld cltd mov pop dec push addl or (bad) lret sub add cli and (bad) (bad) mov ljmp xchg jmp jmp cmpsb add dec std test rorb xchg (bad) xchg pop outsl sub in sub loop inc (bad) ds xor xor (bad) (bad) (bad) decl and or hlt int cmp pop insl xor pop hlt xor (bad) (bad) in pop into push xchg into bound inc mov xchg (bad) jns jae (bad) (bad) fbstp loop gs cmc fcoml mov ret mov push or mov fwait clc (bad) jmp (bad) leave or movsb into aas or pop (bad) (bad) (bad) jg mov test je adc cld xchg sbb jne xchg enter sahf (bad) (bad) (bad) (bad) call mov test ja int ret imul mov (bad) mov mov mov in cs adc inc dec lods stos adc mov aad (bad) in dec test movups xchg leave mov repnz and pushf int3 xor mov (bad) pushl mull mov xchg mov bnd mov xor jge xchg ljmp jecxz and or aam push or and mov push (bad) (bad) (bad) pushl inc dec xor or sub cmp fsubrs into inc std jbe dec pop sub loop inc scas adc cmpsb js test mov leave aas test outsb xor or (bad) (bad) (bad) lcall jo call andl scas mov push repnz inc inc scas sub (bad) mov fildl sbb (bad) xor or inc (bad) (bad) (bad) jmp repz test or aaa addr16 data16 cmp and xlat sarb cmp jg (bad) insb mov rol fsubrp and inc fisubl jmp cmp aam loopne stos neg fcomip (bad) pushl dec and arpl push fsubl pop push ds mov push inc fistpll lcall cmp pop inc mov ret adc stos push (bad) out cli jmp (bad) iret xor push test lahf pop je jns std or mov aaa cmp addr16 mov ds mov (bad) (bad) cmp in incl cmp pop movsl call mov or data16 fcomip ja jae dec mov pop clc adc jg or (bad) call adc mov xor imul adc call adc lea mov push outsb jmp mov cmp sub or in push je or (bad) (bad) jmp (bad) (bad) sub (bad) or and mov or or rcll jmp (bad) (bad) inc cmc outsb clc pop jae and test dec movsl (bad) fwait bound jns push sbb aam std (bad) (bad) (bad) call cld mov cmp pop cmc mov pop inc jg aam xor xchg int insl aam sar pushl cmp inc push hlt in int3 sub repnz (bad) aad ja ljmp mov fdivrp dec les cwtl mov sti jp mov or inc fadds lock (bad) incl ja jmp fmuls das xchg sub outsl (bad) (bad) call repz out cmc inc das sbb and push mov stos out sub push rcll rcll idivl (bad) pushf adc fucomi mov lret jne (bad) xor sbb fstps xchg movsb pop push (bad) xor mov hlt in (bad) (bad) jmp pop fwait lret icebp lds jne xchg or repz inc or (bad) (bad) decl pop or shr adc insb cmp imul xchg push test add clc (bad) (bad) mov adc jg test popf idivl or call or stos sbb mov cmc sbb aam (bad) pop push iret fcomip (bad) incl xchg mov test push mov ja pop sahf pop das push xchg cmp (bad) call or mov out pop add mov cmp fcomp imul sbb (bad) cmc push daa (bad) (bad) incl mov (bad) in in or bound sbb mov inc ds (bad) (bad) incl ret mov movsb ss mov scas or ja cli adc (bad) (bad) fimull push enter ds or xchg sarl stos js ss pop pop (bad) (bad) (bad) jmp inc out test leave jo xchg dec xor push add fiadd aam test aaa jl (bad) (bad) ljmp add push fwait jo push xor push shll test dec xchg (bad) arpl enter add in (bad) lcall (bad) (bad) (bad) ds push in xor scas cmp sbb cwtl leave not (bad) ljmp hlt lcall cs dec (bad) inc push fcomps pop mov pusha jae (bad) stos sub into (bad) (bad) (bad) decl mov sti dec insb add dec out daa xor push popa pop es out sub pop push jmp call dec leave popa jle and add cmc xchg js xchg push push (bad) xor icebp (bad) (bad) (bad) call (bad) add pop push adc or cmp xor xchg test (bad) (bad) (bad) mov sub dec push fcoml rorb seto cmp adc and xchg adc stos pop cmp cwtl dec psrad cmp fnstcw popa das popl push (bad) loopne scas cmpsl mov mov repnz pop sub cmp push sti cmp sub add mov mov pop (bad) fisubl inc (bad) (bad) (bad) dec mov adc ljmp dec sbb inc pop mov inc xchg jg cmp (bad) (bad) (bad) jmp push dec inc xchg cmp dec icebp aas shll es sarb arpl add cld (bad) decl pop cmp (bad) adc andb mov addr16 (bad) (bad) (bad) call dec ret jle test mov pop out cmp push push pop sbb adc jne (bad) lcall pushf ja cltd add test imul nop (bad) fwait hlt test mov (bad) (bad) (bad) lcall mov aaa sbb inc movsb add outsl fisttp es fwait and clc mov ss (bad) (bad) (bad) pushl cmp imull add adc sbb (bad) je jle cmc in jbe iret (bad) (bad) (bad) call dec leave dec (bad) pop cmp mov in add das lret jge decb push bound adc (bad) jg cwtl (bad) adc dec mov and stos pusha (bad) (bad) (bad) jg daa addr16 stc lods cli add outsl (bad) mov jae movsl test cmc (bad) (bad) (bad) ljmp lds pop outsl loop xchg loopne push jmp sbb (bad) stos (bad) (bad) (bad) incl jae push sbb jecxz adc sarl fisubl mov inc fbld roll push or inc mov push stos int3 mov lea and fild call and das mov lds mov imul xlat mov (bad) jmp or cmc xchg push scas js lcall mov lock (bad) (bad) sti int adc adc aad pushf or in in lds popf or or (bad) (bad) lcall pop add js arpl ss add xor clc dec (bad) (bad) (bad) lcall mov jb cmpsl cmpsb push pushf aam lcall paddb mov lret push pushl sub lahf inc xor popf adc mov dec sub imul sbb (bad) ljmp pop pusha out mov in xchg or cmc mov cmp pop fmulp dec (bad) (bad) (bad) (bad) fdiv stos aad stc test sbb push std mov or sbb stos push bound sub (bad) (bad) (bad) mov scas sbb lods test jb test xor int3 int sub add xchg and (bad) incl mov dec and sbb mov imul out idivb push mov (bad) jecxz out (bad) (bad) (bad) jmp push push cmp mov push (bad) and mov xchg xor scas lcall ljmp lret out dec stos mov (bad) dec iret inc inc into jl sub (bad) dec into mov (bad) (bad) mov add mov shlb inc or outsl in js pop pop and (bad) (bad) lcall xchg popf pop in mov mov add inc inc outsb test loope sahf push aaa inc (bad) (bad) (bad) (bad) mov xchg mov xchg dec jns scas jl and xchg aaa test jnp (bad) out cli inc pop dec inc dec in je mov imul adc sub test (bad) (bad) pushl or inc xchg test sbb push cmpsb movsb cmp (bad) (bad) lcall lods jge repz cmp pushf inc or arpl in cmp (bad) (bad) (bad) (bad) fstpl gs sub adc ficoml loope ds cltd pop std ficompl (bad) (bad) (bad) decl int inc out mov notl xchg test cltd mov call (bad) jmp rcll push adc hlt int3 sub xorl jo xchg add das sar cmp pop test iret and and leave xor es (bad) (bad) ljmp test mov push aaa xor fmulp aaa (bad) in movsb lods dec and (bad) (bad) jmp jb,pt clc adc loop jge mov scas adc mov xchg add mov (bad) std mov sub fsubs add cli std repz lea fisubl add (bad) ljmp cmp out inc jmp push fdivrl es or and (bad) (bad) jmp mov mov jmp mov cmp inc xor xor pop inc fdivl inc mov lea movsb dec out lahf (bad) roll cld (bad) (bad) fisttpl mov adc or movsl movsl xor adc mov pop ljmp pop lret ljmp incl sub lods mov repnz add inc data16 or or sub mov icebp pop ret lock imul sar (bad) ljmp add (bad) aad pusha loope xor dec test and je rcrl mov xchg cli (bad) (bad) jg lock lret aad xchg and lret std xchg jecxz mov (bad) pushl rol (bad) outsb je int mov dec xchg mov xchg (bad) (bad) fcom mov popa lock dec jns dec cld mov cmc leave popa iret xchg (bad) (bad) (bad) call xchg jnp cltd mov shlb dec dec xor insl push xor test inc inc mov (bad) call out adc dec jp popa pop ljmp (bad) pushl add pusha xchg push pop (bad) mov cmpsl dec sbb mov and sub dec ffree lcall out dec ds (bad) (bad) (bad) dec lods fisttpll lods in adc int3 outsl repnz into stos mov sbb push sahf sar out mov or and mov mov mov fnstenv icebp lcall jge add cmpsl imul (bad) jp mov add pop fidivl int3 push leave mov data16 je inc adc xchg (bad) (bad) (bad) ljmp jb xchg push fdivs jg scas lcall mov pop shlb lock ljmp mov pop lds mov inc sbb or leave (bad) (bad) (bad) cmp popa in (bad) (bad) dec or loopne mov icebp pushl xor decl (bad) ficom imul adc jne push push lods inc mov cli and popa leave test adc incl push cs xchg add aad outsb dec pop mov pop icebp mov leave leave rolb push xlat std cli mov cmpsl lock (bad) jmp hlt lods adc jno andb dec xlat adc dec rorl mov mov mov push (bad) mov mov cld pop xchg fidivl (bad) (bad) inc mov aaa (bad) lea fcmovbe sub inc xchg lds popa inc pop sub idivb (bad) clc and jmp (bad) repnz dec dec mov mov cmpsl mov out cli dec lcall enter (bad) bound inc call sahf subl (bad) (bad) ljmp push mov cmp mov insl jbe sti jmp pop add fcoml leave sub adc insl push cld incl out int3 inc jmp mov fdivrl hlt (bad) (bad) pushl fldt xchg mov mov (bad) mov fnstsw dec jge outsb movb (bad) (bad) (bad) mov test jmp xchg outsb xor mulb punpckhwd (bad) (bad) out jp ja mov inc rol or mov xor js test outsb (bad) (bad) (bad) ljmp mov dec jo (bad) jmp and gs addr16 or sbb (bad) (bad) (bad) call xchg fistl aam mov outsb push stc ds leave mov mov imul repz pop hlt (bad) (bad) movsb xchg cmp and js std test in sub lock (bad) incl push movsb cmpsl cmp or fldt iret pop stc mov jmp (bad) (bad) decl ret fisub sbb sbb and and adc out cmpsb imul (bad) fnsave (bad) jae jp xor js cwtl dec scas test push pop jp sub decl int (bad) stc push push add scas mov mov ljmp (bad) icebp cmp lds repnz in cmpsb mov fidiv scas jnp ret inc sbb pop sbb cli in push lret adc push dec cmp fnsave popf cmpsb inc cld add (bad) jg mov dec clc fwait pop js pop cmp test movsl push (bad) (bad) (bad) jmp repnz bound xor and push fisttpll mov add incl cmp push mov jne dec sbb mov fiadd in lret jo (bad) (bad) out cli test out cltd ja cmp mov adc hlt cs mov cmpsb fmull (bad) (bad) (bad) cld arpl sbb aad addr16 push or dec jg jecxz push mov rorb and or ljmp (bad) xchg xor mov jns insb add (bad) ja cmp (bad) (bad) call mul movsl ret pop and fistp ss fcomps mov int3 pop cmpsl dec ja aaa inc cli sahf push sbb clc ljmp xchg decl ljmp mov (bad) jae pop fimul adc (bad) incl add ret incl mov data16 into cli fidivrl fiaddl repz sbb fcomip incl jle and (bad) jl lods and push lea fwait inc (bad) (bad) (bad) fild cmp sub cwtl add clc mov fistp cmpsb (bad) (bad) lcall arpl pop bndstx loop dec xchg idiv sahf sbb push (bad) (bad) (bad) push inc mov pop push std lods outsb test push push (bad) sbb pop in and and jbe jnp in (bad) into or rcr push sti add lds fisubrl rcrl sub mov addl inc (bad) (bad) (bad) lcall in cwtl mov sbb loopne dec (bad) aad xor mov cli (bad) cmp sahf sbb (bad) dec hlt push fidivr dec or jg mov xchg (bad) ljmp cld pop jae push call xor pop jo rcl mov mov pop lock jge pop sbb mov js or xchg bound add subl incl int or dec dec das ds (bad) fnstsw mov or sbb (bad) (bad) lcall mov cmp out and out imul lahf imull sbb out repz push xchg cmp pushf xchg adc mov push cmc call lahf data16 call adc lock aad (bad) (bad) inc lret xor ret lcall sbb push push jbe jae jnp jnp (bad) incl cld insb xor inc pop lods or inc stos inc jmp ljmp mov sbb xor push (bad) into loop push xchg fadds jmp aad mov jbe sbb xchg cmc nop sbb out adc outsl dec rcll ficom enter sbb xor daa lret imul (bad) xor fsubrl lcall decl scas pushf inc cmp lods xor hlt bound (bad) pop inc pusha or js (bad) (bad) call sbb xor test adc jmp or out dec adc (bad) dec mov push sbb and adc mov aam push push (bad) xor (bad) mov fldcw jg xchg enter cmp nop out das dec xchg push sbb (bad) push imul dec mov addr16 pop (bad) (bad) pushl mov sub jbe cmp (bad) aam ret adcl mov adc mov inc fwait hlt mov pusha push cmc add ret das (bad) out outsb test (bad) (bad) (bad) cli xchg push or push mov push or cwtl jnp push xchg xchg (bad) (bad) decl push adc inc or insb mov and aas pop js outsb pop add push mov mov into mov popa (bad) lcall mov xchg pusha mov out arpl mov addr16 stc adcb (bad) incl out mov sbb jae int mov fcompl shrl mov (bad) (bad) call add out cwtl scas adc xchg in sub xor jle shll lahf popf and (bad) (bad) (bad) call xchg jl call daa pop ret and pusha std out sub fsubrl out mov sbb jl mov sub push xlat add cltd nop xchg scas adc add sub (bad) (bad) (bad) lcall das cmp call or out int subl inc mov icebp (bad) jg pushl push pop ljmp movsl out scas inc out inc jns lret adc lcall push lret mov mov mov ss nop adc (bad) (bad) jmp pusha addr16 lods push test sbb test (bad) mov sub ljmp push xor or push xchg out mov lea std (bad) (bad) (bad) ds xchg mov aad fisttpll movsl and sub pop movsl and ds pusha sbb scas mov inc iret loopne cwtl jge repnz adc mov je adc lret jmp cmp inc (bad) pop dec dec iret (bad) pop sahf add push movsl out popf outsl mov rcrl out call cld call mov jno jae add mov lahf (bad) stc and push push dec aas add dec pop test or jg or sub mov imul test push daa pop scas add mulps cli cmpsl cmc mov les (bad) (bad) jmp fs cmp cmp hlt int3 or and decl xor fldl mov or enter pop call mov mov (bad) (bad) lcall movsl xor xchg lea int mov mov xlat and push jmp add add or push sbb mov add add cmp imulb xor sbb aaa pop add or fcoml ret lahf lds les inc fs and mov loopne pop outsb (bad) (bad) (bad) (bad) cli mov pop stos repz dec jb mov and cltd (bad) adc out push cld (bad) incl iret xor leave dec fiadd nop lods call fucom mov (bad) (bad) jmp lea xor (bad) sub sub xchg pop dec dec lods mov out or hlt (bad) incl hlt push mov jno sbb sbb (bad) cli dec lea add popa (bad) (bad) decl adc xlat or adc std inc cmp loop mov ja push call ljmp dec xchg mov in mov fist mov insl movl mov jp out or je or cmp (bad) in mov mov (bad) (bad) ljmp loop cmpsl xchg popa pusha sarl xchg movsl das popa mov pop pop dec sub fldt push push xchg (bad) (bad) ljmp mov or xor lods mov out popf fprem push jg hlt outsb into mov (bad) (bad) (bad) jmp fistp inc xlat cmpsl pusha lods (bad) (bad) sbb bound cwtl xchg sbb push sbb jmp dec dec mov clc adc incl add jmp adc pop push icebp fidivrl jae dec daa sub out mov push push push int push and ljmp in push aad (bad) decl (bad) jmp xlat pop stos fucomi hlt xchg inc jae ds fild cmpsb (bad) mov (bad) (bad) jg cwtl test pop lret add daa jb jbe xchg ja mov push and mov test jg fsub jecxz push jl fstpt cwtl push (bad) daa (bad) (bad) mov inc test fs sbb call cmp lods push (bad) (bad) (bad) pushl pop arpl xchg cmpsl add popa add xlat push add jecxz lcall xchg jmp cmp mov xchg push out test das mov xchg adc loope push lods cmpsl mov test gs jbe (bad) dec jmp push sub lcall inc pop in sub pop ret mov sub test mov ljmp inc mov data16 jge mov push out pop loopne ljmp add dec add roll insb int (bad) ds inc ljmp cwtl or rclb (bad) push push lea sahf (bad) (bad) (bad) pushl pop sub je cmp es fistp addl mov push push in hlt jmp (bad) (bad) (bad) call (bad) mov dec jl call and ds xor lods mov out loope std push pop aad and cli sbbl jp je jecxz sbb pushl stos push outsl enter andb pop pushf and std push jle lcall or add iret or cmpsb (bad) dec jmp mov fmull insb mov pop clc hlt pushf add cmc or lcall mov shr sbb push push ljmp mov jo test fistl aas aas sbb mov dec sbb (bad) dec fs arpl push stos lcall mov inc xchg sub mov negl pop subb test call cmp js jmp and or (bad) (bad) (bad) pushl jae ret mov inc xchg and push loope inc mov add test adc (bad) jl outsb daa xor push cltd fisubl shll jg ljmp mov adc and (bad) nop xor data16 lret (bad) (bad) (bad) ljmp or push sbb testl lea mov jmp mov testb sub add jge jmp jge xchg (bad) lcall fcomi jge (bad) cmc jns aam push repnz jbe mov mov and lods out dec gs pop lret rorl (bad) push inc push outsb imul decl sbb adc xlat mov or jg (bad) clc out mov mov and fisubr sbb add repz mov fdivr hlt jge push mull add test imul add (bad) inc push (bad) (bad) (bad) call out cmp lret and clc cltd pop sub jb sub cmpsb out sbb mov inc in jle (bad) (bad) call jl loop,pn dec mov xor fcom add add mov mov (bad) fistpll in xor jo mov bound push xchg xchg (bad) (bad) (bad) incl inc lds cmp les movsl inc xchg push cmpl pop mov (bad) (bad) fcoml je mov aaa add repz mov adc cmp test sub mov (bad) (bad) (bad) cmc mov mov mov jge in (bad) (bad) ljmp jecxz mov pushf outsb mov in fsubs sahf cltd js je cltd cmc aam lcall dec cmpsb jae push and scas popa push loope inc outsb pop (bad) (bad) (bad) lcall inc fnstsw xor bound adc nop in lret pop mov rcrb dec in int aad (bad) (bad) (bad) call inc jns add jb es sbb repz push in or sub pushl cmp das cli (bad) (bad) in cmp outsb push rorb in add call (bad) (bad) call push sub sub in outsb hlt xor inc out xor (bad) jnp (bad) (bad) (bad) inc xor xchg std in mov lods jae xchg (bad) pinsrw dec sbb inc push (bad) (bad) (bad) call adc mov inc lds xchg inc in and cmp les into loope cmp das clc (bad) ljmp jp jl es jne push lock pop popa sbb pop or mov sbb hlt dec mov jo fsubrs mov push es popf (bad) dec addr16 xor (bad) ljmp (bad) sbb (bad) pop fsubl jg les push inc mov outsb xchg dec mov (bad) jmp lods dec aam outsl ret and and mov jecxz cmpb clc (bad) incl xor sbb cmpsl stos xchg imul (bad) decl ds es mov ret sub imul sub jnp je (bad) (bad) jmp ret mov jb mov popf inc dec xchg pop sub aas adc sbbl adc aam (bad) ja mov mov push inc cs data16 and lcall add fcomip (bad) fistpll aaa xor std lret dec insl lds push adc jno jp scas fcmovnu cmp jg (bad) cmp andl aam out stos jg pop push jb cmp cmc mov jns icebp clc or inc fwait dec mov (bad) incl mov mov stos movsb or (bad) xor insl xchg or cmp fdiv jecxz ljmp shrl aaa inc or jmp ss sub sar cld incl (bad) fbstp rcl sub add (bad) or (bad) call rcrb jo sub (bad) and and (bad) sub adc aaa adc mov loop push arpl loopne (bad) mov push rclb push add add xchg mov jmp cmpsl mov ja adc mov mov jb call adc mov fldl loop loop mov (bad) (bad) ljmp or cmpsb mov fnsave popa inc movsb sbb fsubl sbb inc jmp dec rol cmp clc sub (bad) (bad) jmp push (bad) lret xor inc movsl cmpsb xchg adc or mov (bad) lcall dec lcall push into jecxz mov cwtl jecxz int add call jb add aam pop sbb les mov push inc xor (bad) (bad) mov shrb fmull push mov jns sbb fcomps pop cld (bad) decl add dec inc mov sbb dec icebp jns mov push and std (bad) (bad) jmp push cmc mov mov mov mov loopne dec (bad) (bad) (bad) (bad) jmp xor mov jge inc cmp lret and mov push out stc mov cld (bad) ljmp adc adc fnop andl mov (bad) lcall enter std add jle (bad) sub (bad) xor pop pop dec (bad) (bad) icebp (bad) decl cmpsb or jge cmc aad dec cli sbb xchg fistpll adc push loopne xchg ljmp add mov mov outsl cmp jg decl cmp mov and ss loop ja fstl (bad) incl mov mov xchg dec cmp push ss sub popa xchg and out inc xor sub xchg mov sbb (bad) (bad) jmp sti jae sub add mov cltd mov jns cli cmp xchg in xchg flds cwtl push mov xor xor jno shrb (bad) (bad) cmp push ror scas imul xchg and (bad) mov cltd inc mov sbb lret mov and (bad) call pop mov les jnp fisttp and adc mov pushl fwait cmpsb ljmp inc and push dec (bad) rcl out jp cmp mov sub push dec pop jb (bad) jnp push sti inc cwtl jle loope nop xor xor movsl (bad) (bad) (bad) call out sub sub fwait xchg pushf and sub push mov fwait pop pop mov xchg pushl call fldl sbb cmp and xchg and clc or imul sar (bad) decl jno push mov sbb bound mov adc mov lcall clc je push mov iret (bad) imul ljmp out mov mov lods test testb cmpsb add push mov (bad) fnstsw mov mov idiv cwtl daa adc clc incl aad add jno bound jae mov cli js loope jb sar test andl mov mov (bad) call cmp test cwtl jl dec mov cld mov inc lahf xor fcomip (bad) (bad) fidivr fs inc repnz lds pop ss (bad) mov (bad) (bad) (bad) xchg lcall fildll sbb aaa in mov and fs (bad) (bad) (bad) (bad) out dec inc (bad) iret mov xchg (bad) jl,pt ret lds insb cmpsb jbe adc cli or (bad) (bad) decl mov imull lods fcom leave rorb xchg ret jns sahf into das sub mov sub (bad) (bad) jmp jge xchg xor push adc ret lret ja test decl mov inc lods cli (bad) mov sbb mov xor psubsb addb in (bad) (bad) (bad) out and xchg add insl mov mov inc mov mov inc inc out popf jne inc push and (bad) (bad) (bad) lcall sub mov or aas imul xor dec pushf and aam jp (bad) (bad) (bad) jns or cmpsl mov loope (bad) cwtd cmp outsb insl loop fsts jl shl cmp scas mov add fstpt dec add or scas ds cmpsl xchg pop sbb (bad) (bad) pushl inc xchg call xor gs icebp stos outsl clc rcrl in fsts xacquire (bad) lcall out dec lods gs adc pop lods cmp xlat icebp fist or das mov inc or daa cld jle push push repnz push mov (bad) (bad) mov (bad) jmp cmc bound inc aaa mov (bad) hlt fdiv cmp ret addr16 ja cli decl sbb cld ret daa mov inc mov (bad) (bad) push jbe popa insl das jmp mov add dec cli or and pop dec push ljmp (bad) jp pop test insb xchg js mov sbb pop push and sbb dec fmull (bad) cmp enter lahf fiaddl push or pop adc les ss lods inc and (bad) (bad) (bad) jmp testl xor rorl add xor sti stos pop mov (bad) (bad) cmp and andl (bad) lret mov (bad) (bad) pushl jo jbe and and xor mov dec fstl and xor xor ret fwait out fs mov (bad) (bad) ljmp cmp push inc out lock out mov adc ja xchg js int3 enter call sub stos into or mov inc dec xchg sub add and mov sub test das arpl (bad) (bad) call movsl or (bad) stos adc inc add es pushf or mov (bad) push xchg xchg adc sub dec dec add (bad) jp bound test lods and ljmp das or push insb nop fsts xchg (bad) xor pop imul (bad) (bad) cmp xor sbb adc insb pusha xor sub out (bad) (bad) (bad) incl inc stc fmull call and ret (bad) sbb loopne cwtl cwtl inc out decl repz mov (bad) stc or mov scas aam popf fwait (bad) (bad) (bad) mov dec fnop mov test push pop fbld xchg mov mov (bad) (bad) (bad) call push jnp not sub mov mov sbb aas pop and jle lret pushf sub adc (bad) (bad) in mov cmp (bad) cld dec pop sahf sbb lock inc inc movsl ret aaa imul jg push movsb xchg pop out push loopne out mull mov jbe and scas das (bad) (bad) (bad) call mov push pop xchg pop sub imul xor stos lret arpl repz incl or jns sub mov pop xor (bad) (bad) (bad) jmp fnstsw pop dec loope xchg rolb shr (bad) sahf mov push jl (bad) (bad) (bad) fimul fstpt loop (bad) sbb movsl loope imulb scas and mov add add std xchg (bad) mov leave (bad) (bad) (bad) mov movsb hlt nop inc std or (bad) sub cmp hlt add out push rorl push jg,pn ljmp sbb cwtl and ret mov rol push xor insb mov jle pop sar (bad) jmp insb aaa jg lea rcrb jmp fmuls add neg xchg jne (bad) (bad) mov cmpsb cwtl add imul int3 push hlt lods icebp leave mov loopne mov lcall decl pop loope cltd sub orl jle cmp pop rcl jbe xor (bad) (bad) (bad) (bad) fldcw stc fwait inc bound rorl int icebp jb scas lods outsb in push mov (bad) (bad) lcall sbb cli and adc movsb clc sarb mov out push mov (bad) call xor pop push in sub pop xor loopne and decl enter dec and dec or das cld fsubrs inc imul test test (bad) (bad) (bad) (bad) mov mov pop (bad) mov js pusha mov cmc in das cmp (bad) (bad) jmp cwtl xchg fnsave add lret xchg pop dec jno xor cmp sbb (bad) (bad) pushl gs cs and data16 enter push mov xchg repz repnz jmp repnz repnz jnp addr16 (bad) (bad) lcall pusha lret test aas mov inc sub inc mov (bad) (bad) jmp mov cmp mov xchg pop lret mov sbb ss dec mov adc (bad) (bad) dec xchg imul rcrb pop imul repz pop inc mov pop pop fcompl mov gs dec jno mov ja ljmp mov cmp loop mov inc jb fnstcw out adc das mov mov sub fidivl fwait (bad) (bad) mov stos adc outsb (bad) jns je pop dec ret or adc xor lods ja (bad) (bad) lcall repz fsubrs insl es jne adc xor cltd inc (bad) jg mov jge stos mov xlat test pop out clc decl mov cwtl mov jnp xchg add (bad) (bad) (bad) call mov xchg dec xchg and stos in lcall aaa mov dec mov pop dec (bad) (bad) (bad) out dec scas adc add pop into cs jae pop shr idivb xor (bad) push xchg or or pop xchg cli stos lea mov jp sti in fdivr (bad) (bad) incl nop in dec js mov sub (bad) xor sub inc cmp adc sub pushf sbb (bad) (bad) incl subb out subl in insl insl out fcomi addr16 xchg pop jmp sti (bad) (bad) pushl jns adc (bad) data16 insb movsb xchg fs xchg mov sub (bad) (bad) cmp into jle xlat xor fisttp push add sub xchg add push xchg cmp mov mov jmp or rcrb in pushf scas (bad) jle pop mov mov jbe xor mov mov sub mov fiaddl push xchg mov mov ljmp cmpsl sti push test lcall test dec in and (bad) (bad) lcall add imul dec out gs mov dec mov pop push sbb lea (bad) lcall mov bound mov xchg test mov (bad) (bad) lcall adc inc mulb ljmp out mov insl jae (bad) (bad) (bad) (bad) mov adc mov cwtl xchg lds cwtl mov sahf stc cmp cmpsl int3 jg test mov test ret jmp inc mov add stc or xchg mov fstpl incl insl adc push dec pusha push sbb xor cmpsl mov mov das push test add pop cltd pop (bad) (bad) (bad) fistpll outsb inc jno push bound pop sbb scas arpl sub gs test sti out scas or adc orb data16 shlb jge pop dec mov (bad) (bad) jmp pop and outsl addr16 (bad) sub push jmp mov lahf inc mov into (bad) decl (bad) pop aas outsl cmp mov je adc sbb (bad) ss xchg ret xor movsb adc pop cmc call mov sub out in mov (bad) (bad) ljmp aaa (bad) shr loope cmp imul xlat lods mov xor push in add (bad) (bad) (bad) call int dec xchg divl add add push dec ret cmp inc cmp sub (bad) mov sti xor and xlat shr (bad) insb daa divb pop jg push jbe icebp sahf fwait (bad) (bad) (bad) inc push cmp adc inc sbb xchg cmp xchg push lods inc pop stos jns cmc and cmp das xchg cmp das sub xchg mov mov (bad) (bad) (bad) jmp lcall rorl in adc scas jns sahf imul xchg sarb mov (bad) (bad) cli into jns inc mov xor lods lcall notl mov pusha outsb (bad) (bad) (bad) incl orb test gs in mov cmp sub add loop (bad) int3 and push cld (bad) jmp cmp fcompl mov fimul ds call (bad) jg lcall popa ljmp xor aam movsl dec mov (bad) (bad) (bad) lcall jne cmc popf cmp dec jge in pop lret leave jno je xchg stc and cmp incb call insl jg nop dec rolb (bad) pop mov jb add pushl jp or sub aas (bad) (bad) lcall ja push dec xor xor enter icebp sbb jae or call sub bound and sub jmp mov loopne (bad) call inc sub rorl xlat mov sbb cmp adc sar cwtl lock push pushf dec jle,pn pop fisttp rorb mov inc lret push repz mov and sub je mov (bad) (bad) jmp fdivrp inc popf adc out cltd popf jge adc out pushf sub cli cs jle dec call into mulb mov (bad) outsl xchg mov (bad) jg and aad idiv cmp jmp scas pop dec mov stc out outsb add decl dec cmpsb ficoml shlb adc push shrl hlt sbb cs add (bad) (bad) fisttp (bad) mov or pop nop outsl mov fmul or (bad) (bad) (bad) decl je push ja inc arpl pop xchg add clc inc xchg cmp arpl mov add (bad) mov add lret pop sub outsb data16 addr16 add (bad) jmp xor sub int3 shrb out sub in adc push add (bad) (bad) mov mov fist inc jb (bad) mov cltd (bad) adc mov shll cmc jmp (bad) mov lea fisttpll xchg and (bad) (bad) jg mov out xchg sbb xor inc adc (bad) (bad) (bad) fistp fsubr (bad) sbb into mov out ret xchg push rcr aaa in lock jg mov (bad) pushl std mov xchg jbe push loope jo test iret mov mov sbb lcall mov xor test xchg mov ja (bad) (bad) cli push pop in adc jbe pop mov fadds jno dec jmp add xchg (bad) (bad) (bad) incl or cs or testb arpl mov fiadd push mov (bad) clc jmp jl dec test bound sar (bad) (bad) (bad) jmp dec test xchg icebp (bad) inc das jle jno pop rorb pop (bad) (bad) (bad) pushl int3 mov xor mov mov in xchg dec or ds (bad) (bad) call test arpl insl adc cltd frstor jbe jge add outsl aam lock lock out movsl fwait leave xorl je das sar lcall inc lds aad jmp (bad) (bad) (bad) (bad) fcmovu (bad) pushf in and int cmpsl ret fmuls push cmp (bad) (bad) (bad) (bad) (bad) ja jnp mov repz hlt es test dec stc rorb int3 and ss sub or pop (bad) jmp arpl repz movsl (bad) jne or and mov sbb jnp mov (bad) (bad) push flds cmp mov mov js xor pop rcl inc mov jns cs (bad) (bad) ljmp imul jle aam cmp lods sub in loope sub dec sub mov dec jae dec cmp xor mov lods lcall fsubrs pop std (bad) mov push fidivrl lret icebp xor int3 jle loop pop jbe fwait repnz rcrb (bad) (bad) jg push sahf or mov cwtl mov cmpsb imul and (bad) (bad) (bad) inc jp push mov inc push push jbe sub insb mov sub stos and les (bad) (bad) jg mov nop cwtl clc ljmp jecxz push mov sub roll call loopne adc push adc and (bad) (bad) decl mov dec mov leave loop pop mov lods sar dec mov test pushl pusha or add push pop mov loopne imul int lret pop jmp dec dec mov addl cld sub icebp mov lahf in add pop cwtl test xor cltd jne aaa cld lcall inc mov lea jae cli (bad) icebp inc cmpsl mov (bad) decl xchg push test mov mov call inc (bad) jb mov jecxz jmp lea or icebp mov popa cmp sbb inc call xchg scas mov rclb lcall jae dec (bad) mov and jge mov test sub (bad) std pop inc pop aad aad pop enter xchg je push mov (bad) push rorb pop leave es in iret push xchg jmp jno ljmp loopne lock xchg movsb dec push das pop add jne push stc lods pop rorl lock mov xchg mov icebp ds sbb test lcall incb lret xchg inc dec push (bad) rorl pop daa outsl lock (bad) (bad) cmp or add lods or bound xchg xchg xchg in mov jg cmp fisubrl and and fwait call repz ds popa (bad) (bad) (bad) inc xchg mov or adc pop mov xor sti pop pmaxsw fldcw push push push push pop mov mov ljmp nop insl pop jbe (bad) mov sub mov or (bad) (bad) (bad) jmp in jg gs clc in inc outsb and inc jo sbb pop (bad) lock mov das clc (bad) (bad) fimull jp fwait jo jae sub mov clc in adc push popa (bad) (bad) (bad) lcall cmc lds mov mov xchg push ret in mov gs out xchg inc dec pxor (bad) (bad) ljmp push cltd mov pop cwtl enter or lock mov push lock pop or (bad) (bad) lcall jbe dec ds mov cmp loopne cmp cmp add sub aaa jge mov (bad) (bad) (bad) (bad) cmp loopne cmp es and adc clc xor ja push jmp push (bad) xor jmp mov stc stos jp loop,pn mov adc ljmp inc adc loope nop scas pop shll shrb popa data16 (bad) (bad) jg or out scas xor sbb sub push mov push test fcomip mov inc clc jecxz fwait mov mov aaa xchg fisttp (bad) cmp (bad) push mov aaa in jl fwait push into loopne inc ss mov es jb in lret or dec (bad) (bad) (bad) lcall incb push roll cmpsl subl xor bound push cmp xchg pop (bad) mov jmp inc mov imul fchs add push fprem (bad) (bad) stc sbb stos cmp cpuid xchg jnp inc out cmc scas inc test decl jle cmp pop add mov add das add pop mov cltd xor enter es clc (bad) je pop sti mov pop es (bad) (bad) jmp xchg lcall ds call pop repnz mov mov (bad) jmp jmp mov cmp mov dec rcll gs (bad) (bad) push adc jne xlat ret and add ds stos loope fisttp sbb xor mov xchg mov cmc (bad) pushl mov sbb cltd jmp insl sbb insb jl ljmp pop xchg dec cmc mov pop stc icebp and jo popf insl push cmp push and cld (bad) (bad) incl or adc ljmp orb cli pop pusha cvttps2pi incl nop enter into fdivp (bad) dec fisubrl push xchg (bad) (bad) incl mov mov mov jne cs xchg jg mov cmp adc xor (bad) jmp das stos mov gs adc mov xchg sub mov mov add in (bad) (bad) lcall sub cltd jns inc fildl push mov imul xacquire sub xchg jge test (bad) (bad) decl clc or cwtl cmpsb sub add push aaa xor rcrb add xor push hlt movsb or (bad) repnz xlat inc out add (bad) (bad) (bad) call jo pusha pop dec rcpps aad jmp test inc sti or jmp arpl bound pop int3 fwait test lcall jns pop sub (bad) (bad) (bad) pushl jle or enter mov adc rcrl inc in sub or (bad) (bad) pushl (bad) outsb (bad) and inc (bad) adc push je leave test fmulp and (bad) jmp xchg cmp in fadd push or das (bad) lcall movsb fidivl adc jbe ja jno or inc enter push sbb push ljmp sar dec (bad) xor (bad) (bad) jmp inc xchg jge orl cmpsb mov jecxz cmp insl in inc js push cli (bad) (bad) inc (bad) (bad) lret pop cmpsl mov stos dec cld mov and inc cmc push lods imul ljmp (bad) nop jne sub xor in or (bad) and cmpsb mov sbb (bad) (bad) push cmp in add dec xchg out fimull scas xchg jo (bad) (bad) (bad) call ss cwtl pop mov inc ljmp in bound sub and inc outsl ljmp pop mov and js sub cmc mov push cmp rclb push fwait xorb fsubrs out insl jbe or (bad) (bad) push dec add insb ds cs call dec cmp stos leave push sub out jnp inc jae in pop movsb mull xchg push push (bad) (bad) (bad) call popf push iret dec pushf or add sub sbb (bad) loopne aad (bad) jno mov cs xor (bad) (bad) ljmp add push mov ljmp in (bad) dec mov ljmp aam js cmp (bad) das ss mov sub or sub fsubs sbb (bad) pushl clc mov inc xchg adc lret push (bad) (bad) (bad) cmp inc outsl fstl mov mov jbe pushf insl push dec fdivrp (bad) mov mov sbb ret add pop dec push ds adc icebp call mov add fnsave adc (bad) decl cmp les imul push mov jge addr16 (bad) (bad) mov je mov and dec mov sti sahf pop in fcomps std lret push pusha stc (bad) incl adc and jle xchg lods lahf das mov inc jge (bad) (bad) (bad) lcall jo sbb mov aaa pop mov jmp testl sub mov mov lods loopne enter test xchg inc cmp dec add and fcomip mov rorl jp stc pop in jnp aad mov in (bad) (bad) jg incb pop inc pop sub xchg (bad) lahf xor lret test movsb mov push sub out or mov loop add mov pushf fdivr (bad) (bad) pushl pushfw mov sub repz xor add in fldt pop dec sbb inc (bad) (bad) (bad) out jo mov loope add mov jae sub xor (bad) (bad) incl int pop jle sub push shlb dec lds mov gs dec sub test xchg sar inc mov sbb dec adc stc xchg (bad) push lret adc jecxz push lcall pushl mov movsl in sub cmp mov fcomip (bad) out cld cs and notl loope jl hlt imul mov or lret mov mov addr16 mov or fidivr cld (bad) (bad) lcall jae pop xor clc imul aad int mov xchg movsl divb ja inc sahf mov mov cmp push leave mov xchg pop cmp lret in mov outsb sub les in sub out aam rclb adc adc (bad) (bad) ljmp jle pop repz jecxz jbe inc cmpsl mov addr16 mov in lods int mov (bad) pushl aaa sti adc and mov mov cmp pushf lds jb (bad) (bad) lcall (bad) xchg fidivl mov (bad) push xchg xchg outsl adc fisttpl sti ror adc pushf (bad) (bad) (bad) decl push scas mov add mov testb ja jae bound (bad) pop cmpsl sbb and mov sub fstl mov sub (bad) (bad) incl jge xchg inc mov push cmpsb add (bad) jns fwait mov mov into and jo ja (bad) jmp inc xchg mov in xchg xor or decl add fcoml ljmp int3 jb ret es push sub jb jp fdivrl loope jle pop push add inc ret sbb movsb cli cltd dec inc setp mov hlt pop cmpl subb mov or inc push sbb (bad) dec adc (bad) jae les cmp sbb ret addr16 sub push sbb les mov mov pop (bad) (bad) (bad) jmp nop test mov test pop jmp cmp outsb cmp insb or ret mov mov (bad) pushl jno push push jl cmp sub inc aas push adc icebp pop xlat adc adc add scas ret (bad) (bad) (bad) decl in dec pusha add pusha fdivs fldenv xchg aad jmp into (bad) (bad) (bad) (bad) jp lret mov inc push lahf hlt cmp pop (bad) jo jmp inc jmp mov sub loope cs (bad) (bad) (bad) jg mov rcl cmp cmp mov repnz dec ret (bad) (bad) (bad) jmp dec int3 cmpsl xchg adc inc jbe repnz dec ss adc xor test sbb ljmp add (bad) (bad) stc in rol imul shl pop mov add dec inc add dec push aas repz shr ret dec in pop sbb insb add sub iret push in sbbl mov dec cmp sub and fistp adc (bad) ljmp mov and inc mov or mov (bad) (bad) (bad) mov test mov fistp push sahf cmp lret ret ror (bad) (bad) (bad) call lea push sbb jnp jg inc push es and sub (bad) (bad) (bad) incl scas mov pop pop fidivl data16 divl mov add mov push add push aaa sub mov mov ds adc dec popf dec je (bad) lret aas rcrb lods popa (bad) (bad) (bad) (bad) jmp push ja les xchg fldcw dec dec rdrand sub lock sbb aam (bad) call mov jmp test outsl push (bad) stos fildl lahf inc movl mov mov test push push (bad) insl fstps pop mov adc (bad) pop cmp loopne push xchg add cmp enter ljmp jle and jg aaa adc jp mov into mov push mov mov enter (bad) (bad) incl and xlat pop xchg add divl push arpl xor sbb mov mov xchg (bad) (bad) (bad) pushl lock and icebp nop mov (bad) ja mull jo out sbb mov insl ja push out push mov lock repnz push sbb int3 fs mov dec cmp ret jle push mov daa push gs jl mov jle jb lock xor xchg (bad) call lock adc in clc adc push sub (bad) (bad) (bad) jns pop xor inc cs xchg jecxz sbb pop cmp mov test sub (bad) fisttp sahf lcall push (bad) jg mov (bad) (bad) (bad) ljmp leave pop data16 cld ss in into (bad) mov adc bound lea (bad) insl (bad) incl cld pop pop lcall mov outsb into sub inc in push mov xor outsb lods cmp xlat cwtl call aaa xchg mov jae jle (bad) (bad) (bad) (bad) cmp sbb andb add fsubl fidivl mov sar (bad) (bad) cmp xchg ret std xchg std jo dec and dec sub inc (bad) mov and loope frstor inc aas das (bad) (bad) (bad) lcall fisttpl inc mov sub inc test stos (bad) mov jge jae mul mov mov (bad) lcall jns bound and mov sahf pop aas add (bad) (bad) (bad) (bad) call aas jb push adc aad jmp cli sbb xor jo lret lahf xchg enter jmp rcl sbb fisub in dec pop lock lret stc (bad) push dec (bad) or sti mov (bad) incl mov ss mov mov mov jg (bad) ljmp ret scas test icebp cmp outsl leave int3 aas fs adc out stos (bad) (bad) (bad) ljmp nop and mov dec sahf stos test cmp loope xor dec out loop push aam bnd (bad) lcall dec or push roll out adc mov lods jg mov (bad) call out loopne and and cmp imul fcoms enter cmpb pop and (bad) ljmp out inc loop std daa enter pop popf xor jns cltd cmp lret mov cli (bad) (bad) call movsl sbb cli popw push ucomiss jp pop fisubl (bad) fiaddl add push (bad) (bad) (bad) pushl fucom int fisttpll sbb imul data16 xchg pop fucomi ja adc sub mov sahf js push sarb inc jno lcall cmp (bad) pushl ja mov bound rcr ret mov (bad) xlat sahf sbb scas outsl loope lret inc (bad) (bad) jmp push cmp push das ficom pop scas pop cmc sti inc xchg movsb sbb jle and (bad) (bad) call cmp (bad) pop push call adc xor push pxor xchg movups stos insl loopne pop lea lea cmp into xor (bad) (bad) (bad) (bad) pop icebp (bad) mov out int mov or les lods mov decl lods das (bad) loop pop fcomps cmp cmc mov cli inc (bad) std sub (bad) mov into loopne popa test (bad) ljmp (bad) je dec and lds lret push and sbb (bad) (bad) faddl cli aad jo inc inc lret adc movsb stos std mov (bad) (bad) (bad) (bad) jmp mov (bad) push addr16 sbb sbb icebp stc push iret addr16 fsts or xchg push jg imul pop cmp cmpsl xchg inc (bad) mov mov lcall adc jno jp or iret cmpsb pop sarb faddl (bad) lcall xlat xchg movsb pop ljmp in xchg ret fisubl cmp push jne dec mov add or mov sub pop xor xor fscale loop jbe (bad) (bad) (bad) call mov (bad) cmp pop fstl pop sar xor sub and lret push fimul ljmp (bad) mov dec or jp outsl mov sbb insb je lahf cmp add clc decl pop jnp pop iret aaa loop mov scas add (bad) (bad) (bad) out shrb cmpsl pop sbb pop mov xor and and hlt (bad) (bad) pushl out in add ret push jle add dec (bad) and jmp in (bad) (bad) (bad) fist icebp mov push cmp sub mov lret (bad) call (bad) incl out dec sub adc pop daa (bad) lock cmpsb (bad) sbb rcl (bad) (bad) ljmp lds xchg sub pop nop bound (bad) and mov pusha dec (bad) (bad) (bad) jg sub ret mov inc mov pop iret xor jmp and or or dec mul jg (bad) pushl mov push push daa sbb (bad) xchg dec mov push (bad) jno cmp (bad) sub scas sahf jo cmp sar mov cwtl (bad) in adc fldcw in push (bad) jmp sub insl cmpsb faddl push outsl mov addps xchg dec nop movsl cmp outsl test sti pushf adc arpl (bad) (bad) ffreep popf mov sbb mov ret xchg sbb dec push les mov scas (bad) cli (bad) lcall dec out and jle adc jns mov (bad) (bad) call jl inc cmp cmp shlb fwait scas (bad) sub lret push lahf adc (bad) (bad) xor (bad) decl add daa aam (bad) mov push xchg adc call mov out mov cmc inc jae or xchg sahf rorb aaa (bad) (bad) (bad) ljmp cs pop roll jl xchg mov inc mov inc jo std jg (bad) cmp cwtl pop xchg dec add out ret out pop lret xchg xor push test cli dec (bad) mov std imul pop dec cmp je or mov xor icebp call sub cli stos stos out sub push mov outsl aad (bad) (bad) (bad) decl pop xor dec adc cmp pop mov (bad) (bad) repnz scas pop xor outsl pop in mov mov pop mov (bad) xchg sbb sub hlt add imul fisttpll jge aad lahf add add mov (bad) decl push outsb jmp xchg xor sbb lret test add mov (bad) pushl stos icebp mov aam lahf add fmuls cmpsb jmp inc hlt dec cwtl lods je (bad) (bad) (bad) jns call inc sti sub push clc gs xchg je fistp cmc or (bad) (bad) std out adc xchg ss mov std aas pop jecxz sub rcll (bad) (bad) call idivl and les (bad) iret pop outsb push sti push dec push mov dec loopne incl pop mov test add xchg cs mov (bad) call cmp imul or adc xor mov loop (bad) jmp inc stc inc dec cmc xchg sarb faddp xor outsl aaa mov xchg push jmp (bad) (bad) (bad) jne,pt xor push arpl adc cmp jno jae rsm sar fs mov incl incl xor in sub mov ror shrb cmp inc add cld (bad) (bad) (bad) jg or push add pushf lods movl ss pusha adc (bad) pushl bound insb cmp mov mov inc icebp mov inc aas add inc enter cmc sub test dec sbb (bad) push push xchg add push mov mov lcall adc jecxz lahf popf out or sub int3 dec test (bad) (bad) (bad) incl pushf adc push xchg pop sbb sub ficoml cs outsl jo std into movsl cmpsl aas push popl es adc loopne (bad) repnz and (bad) push in cmc jecxz inc adc (bad) (bad) (bad) incl pop xor and mov xor pop (bad) lret jecxz aaa inc repnz jmp int3 hlt fildll lahf repz (bad) (bad) out push lock stos jns sarb aas aad dec xchg mov pop (bad) xor imul xor (bad) (bad) lcall adc pusha sbb addr16 int sbb jecxz mov or in (bad) (bad) (bad) pushl push ds test test fisttp fsubrp mov xlat and fwait cmpl (bad) (bad) (bad) (bad) fdivrp mov stos push jp (bad) mov loop mov bound xchg xor in and mov scas (bad) (bad) (bad) incl cmpsb lret dec (bad) jae ds xor andnps pop loop cmpl hlt adc rol and (bad) (bad) (bad) decl lret scas jle mov xchg bound adc cmp pop movsb sub (bad) (bad) (bad) lcall mov enter gs sub loopne and xor cmp scas cli lcall (bad) ds mov aam xchg rcll pop cmp fpatan ja stos (bad) (bad) jmp cmp mov xchg xlat mov and cmpb (bad) mov stos cmpl xchg daa dec aad lods sbb adc ret ljmp cmp jnp lret (bad) (bad) out cli mov add inc xchg icebp xor repz in mov cmc mov xlat aam and movsl lods shr ret cmp fdivr lds incl jle pop mov scas fcmovu dec fsub dec mov cli cld push xchg and jp (bad) into cmpb (bad) incl jp push movsb out add inc cmpsl sub out mov mov jg (bad) mov outsb xchg movsb rorb imul inc (bad) decl sbb mov imul push xor mov (bad) (bad) (bad) dec pusha int3 jle xchg sbb fcoms inc ret mov pop lods or jle jp gs add mov jb ret out rorb mov out xor pop xchg inc sbb (bad) (bad) (bad) inc stos dec xlat xchg inc mov mov push sbb (bad) or fs jecxz int push out loopne loope (bad) ljmp fldt ds mov push addl or (bad) (bad) mov adc lds std cmp pusha mov add xor test aam xchg (bad) (bad) (bad) ljmp mov adc sbb lods or adc das lock dec pop cmp (bad) (bad) dec fsts jb cmp ja pusha push movsb lds xchg (bad) mov fisttp cs (bad) push stos push add pop roll fmuls shlb sbb jns imul adc movsl adc xchg cwtl test pop fcos (bad) (bad) jmp mov inc or pushf pop sarb cld test mov aad lahf and (bad) (bad) (bad) ljmp pcmpgtw xchg cld cmp fisub push scas pop mov dec xorl jb jo adc lret (bad) (bad) (bad) push inc (bad) push dec jns dec sbb out shrb ds call xchg inc mov dec stos mov cltd (bad) mov inc dec cmp js ret mov je fcmovbe pop into pop mov mov sbb sbb and mov out int3 dec mull out mov cmp and test outsb xchg sbb sub (bad) incl push std sarb loope pusha or loope push lret icebp lret dec iret pusha int3 loopne add sub push sub mov inc divl (bad) les xor test les into leave adc jg in xchg and jmp xchg pop mov mov sub push clc push out mov (bad) (bad) (bad) decl icebp sub mov push and cmp js jne ret sbb addl test or aas pop out decb push adcb inc mov test ljmp mov fstpt aaa dec push int push scas (bad) (bad) (bad) decl xorl frstor and int3 pop scas push pop xchg cs inc mov decl es test int imull cmp data16 lea (bad) (bad) (bad) pushl xlat mov repz cmp (bad) mov xchg ljmp stos mov lock out xchg (bad) (bad) incl imul pusha shrb outsl pop ja push int3 (bad) and mov (bad) (bad) (bad) push cmp lods into cs cmp daa add mov rcrl (bad) (bad) (bad) (bad) fdivs push push adc xor add dec xchg mov xchg les inc orl lcall (bad) mov mov sbb fstpl push fsubr pop lsl mov (bad) (bad) (bad) push push movsb push insl das lahf pop outsl or push stc lods je aam pop sti or imul les add jnp lea jl push mov pop popf fs or (bad) aad and xchg jle enter (bad) or xchg xchg mov inc je sarl (bad) mulb add shlb adc pop mov loop addps imul out (bad) (bad) ljmp mov mov lcall cmpsb lret cld pop rcll (bad) call jo mov mov cmpsb int inc mov fisubl sub pop pop push bound nop dec rcl pop pushf jb sarb arpl call (bad) (bad) out nop push mov jae pop sub stos jb test (bad) loop (bad) pushl pop mov or xlat add adc xor mov (bad) (bad) (bad) mov mov ret insl adc je add loope imul stos (bad) push jne,pn mov (bad) (bad) decl jmp (bad) arpl xor pop lea test andl adc int3 iret (bad) (bad) (bad) lcall popl mov fwait repnz lea inc jp aas sbb (bad) (bad) (bad) (bad) call push iret arpl jno popf popa int3 pop outsb xchg mov stos lret icebp test pop add (bad) (bad) pushl sbb inc sub or push dec (bad) push aas mov or das pop leave mov dec jmp pushf jle mov mov (bad) (bad) ljmp adc jae adc push dec cmp pusha add arpl (bad) (bad) (bad) ds (bad) inc lahf orb movsl je mov mov mov aaa pop sbb xchg arpl stos jecxz inc popf pushf lahf clc dec xchg xchg adc xchg popa outsl dec arpl (bad) (bad) call (bad) mov xor xor inc add push xor loope pusha jg inc (bad) (bad) (bad) fbld pop int int3 jne out nop mov jne mov shlb dec pusha pop inc call or push repnz pop dec or repnz call ret jne mov ja adc repz push enter xlat sarb add add or (bad) (bad) decl leave and or lret aaa (bad) inc xchg test adc push add sub nop fcompl sar fcomip (bad) jg xchg das dec data16 inc push cmpsl movb push dec sarl shl xor pop leave (bad) aam xchg adc (bad) (bad) incl add xchg inc pusha pop push repnz push movsb std movsb test (bad) mov pop and cmp sub adc cs jnp sub push jb (bad) (bad) (bad) decl lret mov push mov icebp stos and idivb nop (bad) mov and sbb and (bad) (bad) (bad) lcall insl in pop int3 clc enter ds xchg adc imul mov jg inc lods js repz dec aas sub inc fistp into sbb jnp sbbl mov or (bad) or ljmp hlt inc sbb cmpsl lods scas pop jns mov (bad) decl dec push rolb ds out mov xchg mov cmpsb (bad) (bad) (bad) lcall repz adc insb push movsl dec jno push addr16 jp dec cwtl mov mov (bad) push incl sbb mov sbb call lods mov cmpsb push push inc popf mov push xor xchg ds jae or mov (bad) jg jmp (bad) fisttp fstpl inc movsl push xchg cltd ja scas in loop dec xor mov (bad) (bad) (bad) jl mov mov sub fstpl and add xor out (bad) pushf jge lds jl (bad) (bad) decl mov fsts (bad) rol mov and dec cmc mov mov hlt jmp push inc sub pinsrw cmp test test mov dec popa sub dec out dec xor insb pop add pop jnp shlb xor (bad) jg addr16 lea adc scas or rcr nop mov push lods and jb out and (bad) (bad) (bad) ljmp xchg add inc pushf or xor test outsl jge and movsb popa (bad) (bad) (bad) (bad) fisubr jns add bound jle movsl mov dec lahf mov (bad) (bad) pushl decb or mov jno sbb (bad) fcomip adc cmpsl (bad) cld mov cmovp fs stos mov mov out dec out add int3 cmp call rclb stos subl xor (bad) (bad) jg pushf jmp or xor sub aad jmp ret xchg sbbl or repz stc leave (bad) (bad) (bad) push push mov outsl aaa adc mov int3 test mov (bad) iret cmp sar mov aam inc dec mov or (bad) lcall add rorb adc mulb mov add add lock hlt (bad) (bad) pushl xchg into mov pop cmc xor js cmp pop or or (bad) lcall fcomip sbb jo lcall loop cwtl cmpsb call push aad imul (bad) mov (bad) rolb xor mov clc and (bad) (bad) (bad) js je sbb mov in popf cltd insb lret leave jg outsl push xchg adc cmp call adc adc xchg jl or inc cmp pop loope sbb (bad) (bad) (bad) call mov fidivl js dec dec or xchg xchg or popa das and in insl imul mov outsb push or dec icebp aaa and packsswb mov fsubrl adc ficom inc xchg cmp (bad) dec add fwait test push out xchg lock outsl ljmp pop dec fbstp xchg and adc fdivrs inc pop jle xchg adc lret and (bad) incl sub out test pop icebp inc movsb sub sub roll ret sub and imul ljmp pop movsb mov xchg dec sub hlt fcompl mov imul clc (bad) incl dec dec xchg movsb mov dec ds es inc push (bad) (bad) (bad) (bad) jns sbb orl mov lods leave push adc mov inc or mov call clc lea cwtl and and aas add jecxz int addr16 sbb (bad) mov loop sahf ret or jmp mov xchg dec mov (bad) jg movsb ds movsl movl add push call mov cmp cmpsl es js mov push iret cmp mov add movsl mov (bad) (bad) jmp imul stos xchg call test aam lret jecxz idiv (bad) push add (bad) leave loop ljmp jge push in out dec pop sbb pop icebp (bad) (bad) jmp out rcrl mov es jnp test lcall fsts (bad) out xor rcl nop dec jecxz fs aad xchg xchg andl dec ljmp mov and push and pop cli sbb ljmp ljmp aaa daa cs jnp (bad) (bad) (bad) pushl inc pop in xchg loope fmull jmp fstps sub jg std (bad) (bad) (bad) ljmp inc repnz test dec imul and leave leave jge lret (bad) (bad) jmp nop sub inc fwait jle xor mov ljmp scas push xchg (bad) (bad) (bad) ljmp dec mov loope (bad) in insb add clc dec mov push out (bad) xchg rclb (bad) (bad) (bad) call ljmp mov xor push movsb inc jbe jne sbb cwtl sarb sub test mov loopne insb jne dec push mov (bad) (bad) lcall shrl ljmp insb jo mov test dec data16 jg (bad) lcall cmp imul cmp or jo sbb sub mov clc (bad) dec mov push xor (bad) jns sub outsl fidivr push popf push inc mov pop (bad) cmp mov (bad) call dec jle aas cltd push mov mov daa test xchg mov daa cmpsl lahf sti adc push (bad) (bad) (bad) pusha dec pop lds and ss cmpsb aad aaa scas xor mov out loopne lock ja mov imul mov xor push flds and adc insl jmp (bad) (bad) (bad) inc in roll pop add (bad) mov mov into repz jns cwtl mov inc hlt mov call std jne out outsb and (bad) mov gs sbb mov pop sbb aad add (bad) sub loopne nop push fisub aam in (bad) (bad) lcall dec push cltd dec rorb cwtl cmp adc fadd icebp int (bad) (bad) (bad) (bad) lcall (bad) divl xor lret mov lret (bad) mov and call xchg (bad) jp fsts mov and pop loope cmp out or mov jbe cmp rcrb mov call lea sub xor mov cmpsb (bad) (bad) (bad) (bad) call repz cs out aas xchg pushf add mov das (bad) ficomp imul dec cmpsb pop mov sub ljmp sub inc jae add lret xor call loopne scas or push sbb (bad) (bad) (bad) decl mov lret jo (bad) iret sahf dec adc lods cs hlt mov in jbe add adcl jmp xchg ja push sub int or dec add arpl js inc sar (bad) call nop or mov loopne push lods and inc popa lret les mov ljmp iret pop cmp out push sub jp cwtl das xchg sbb push mov (bad) (bad) (bad) ds jl out sub mov mov mov pop xlat (bad) xor stos (bad) (bad) bound sbb pushl add pushf jno jb jge inc into xor push push xchg sub (bad) (bad) (bad) mov jne fs int jp mov fistpll pop adcb jl lcall and movnti pop cmp inc pop push pop jbe xlat or mov imul and mov or addr16 in push push mov (bad) (bad) (bad) (bad) decl mov ss mov pop sub dec stos es cld fwait ja add or inc push (bad) push outsl jae gs jge push ud2 fmul mov mov (bad) mov aad pop jns dec push stos sarb test push rcrb (bad) (bad) jmp dec fstpl rcrb sahf pop xor xchg mov das pop cmp mov cmpsb add (bad) lcall and popa jbe dec cmp add mov loopne cld int rcrb insb mov sarb (bad) cmp add dec and test test mov mov and push dec out jnp insl lretw data16 jbe pop pushf repnz (bad) (bad) call jmp lea jns and sub adc nop std sbb (bad) (bad) (bad) decl mov jbe dec inc sbb lcall stos xor mov lret (bad) (bad) (bad) jmp imull push pop pop out insb xchg or cmp scas push cmpsb dec lea cmp cmp push gs in pop icebp xchg (bad) (bad) incl and into sbb pop inc test popa dec xchg mov (bad) sub lcall imul scas mov mov out xor outsl clc inc jns add fisubl lcall outsb rcll dec into cmp out and xchg lahf cs data16 out cmp adc jbe call incl cmp pop sub push push mov int lahf fcoml dec test (bad) (bad) ljmp ret fsubl shrl out in xor repnz sub push and mov nop pop dec jmp call cmp fstl mov mov cld sar in dec movq pop (bad) (bad) (bad) inc sbb xchg adc pop out inc push xchg aaa iret shr test pop out mov lea dec (bad) (bad) (bad) jmp and scas hlt xchg (bad) (bad) jne pusha cmpl bswap adc (bad) mov (bad) (bad) lcall push insb and pop rclb jns sub lea xchg nop movsl sbb mov sub (bad) (bad) incl add in mov inc cs cli fwait sbb loop jb (bad) (bad) ljmp mov mov sahf aad jmp ds push lods punpckhdq test (bad) lcall (bad) mov inc popf enter add lahf je out cltd out jae dec sub (bad) (bad) jmp adc jecxz scas or inc outsb ds cs pop jl stos bnd loopne das cli add (bad) incl push adc in xor mov sub mov ficom enter push test addr16 dec das push cmp pushf push pop jo mov movsl mov pop movsb decb xchg xchg xchg mov push dec gs dec (bad) (bad) (bad) (bad) call ss xchg and lea adc ds pop jmp (bad) (bad) incl movsb mov pop jge sub nop jb fiadd pushl lock inc rcl jno ja mov popf ds dec std (bad) call jnp xchg push shlb and stos sbb lret mov (bad) ljmp mov adc xor sbb lret pop (bad) hlt sub xor (bad) (bad) decl add and dec popa (bad) enter negl or lcall call ret mov add pop sti inc in dec outsl repnz mov sub cmp rclb (bad) (bad) in icebp ljmp cmp mov movl ret in out dec jp (bad) (bad) (bad) lcall xor push test negl pushf jbe scas insl int in jmp out mov pop fildl (bad) (bad) (bad) fimul pop cmp or adc scas push push ja rcrl jne loopne (bad) jg nop lock test pop addb (bad) daa and in push (bad) (bad) mov rcr lret mov mov mov lds sbb (bad) (bad) int mov inc (bad) (bad) (bad) dec and pop dec mov add adc cmp mov cwtl in cmc mov repz inc mov cmp cmpsl scas je inc or sub cmc mov mov pushl jb,pn sbb aad push lahf pop or mov mull pop mov dec dec fs (bad) (bad) (bad) jp jno sbb cmpb sbb sahf out ds sbb pusha dec mov flds das push lock mov cmp outsb (bad) cmpsl and fst add mov aam faddl add sub incl mov insb and cmp mov enter in (bad) (bad) (bad) call mov int3 sbb lea loopne add stc loope push adc (bad) (bad) (bad) call sub pop in jns testb jb mov mov mov inc push sbb mov sbb lret pop jecxz lods call dec ss das clc (bad) (bad) mov stos js or mov pushf adc pop cmp sar (bad) out jns sti inc (bad) mov add scas mov pop xor lahf xchg push (bad) mov xchg testl lods sub push adc push push repnz lods pop mov mov mov jmp xchg insl fdivrs or dec and ds pop (bad) push pop lcall clc jge je das inc xchg mov sub xor aam (bad) (bad) dec lret sti xor fildl lcall jmp insb aaa outsb ss into ret sub push cld call push cmpsb in mov mov lcall (bad) (bad) pushl xor fisubr adc add push mov (bad) (bad) call sub lahf aaa lret fwait sbb stos scas dec pop xchg jmp ljmp sbb je fmull test xor mov (bad) vmwrite push push jnp loop clc jg ljmp mov xchg mov lds pushl push mov mov mov fs sbb bsr mov (bad) es (bad) pushl sbb test mov push shll mov xor adc sbb mov aas xchg mov mov jno gs std mov outsl xor push jecxz (bad) (bad) jg inc test popf into fildl into mov repz mov arpl (bad) (bad) ljmp pop lcall push lock or nop andl in insb sbb push loopne das test cmpsl hlt pop scas cmp inc out pop dec cmp xor (bad) (bad) mov in adc mov add loope or and xchg xchg inc leave push je sub (bad) mov adc jge dec cmp and xchg cli lea stc fmulp push inc mov cmp dec das mov int3 js dec sub incl cld push ds add pop inc dec leave pusha movsb cs (bad) (bad) (bad) ds imul imul pop cmp rcrl or xor sahf mov xor fs sbb pop shl je lods popa or sbb sbb lahf scas sub (bad) ljmp dec pop das pop roll xchg dec inc mov mov lret (bad) (bad) lcall mov jmp into pop xor mov stos sti ja data16 dec jnp decb (bad) lcall xor push lods mov mov hlt aaa (bad) (bad) (bad) call mov ret nop mov pushf jmp and adc (bad) push xchg loope incl push (bad) push xchg fildl mov xor (bad) gs rorb cmp daa mov lcall js jbe adc (bad) (bad) (bad) decl jae cs cmc repz popa or lea mov cmp (bad) decl mov lret test imul out icebp and mov mov (bad) (bad) jmp sbb cmp sub inc je in xchg repnz or mov adc xchg (bad) cli adc adc add dec pop mov cwtl mov (bad) (bad) fbld jp mov lret (bad) sub shrb imul leave movsb ret or pushf icebp data16 pop sarl inc (bad) (bad) call ds test lea pop test and repnz aas sete (bad) (bad) (bad) decl cwtl add popf je mov stos insl cmp js jmp xor xor jp das xor (bad) decl mov push xchg test jae xlat (bad) hlt mov fbld xchg std (bad) (bad) jmp jecxz loopne cmpsl push push inc mov popf rorl pop aaa and repnz ds (bad) (bad) out mov mov adc and mov cltd lods xchg repz dec jmp xor cmp (bad) (bad) (bad) fistp test aas fcoml add dec test in push pop xchg ret add mov push jecxz loope mov repnz je sbb xor cmpsb call (bad) hlt gs xchg lcall (bad) (bad) (bad) (bad) (bad) mov iret les mov inc (bad) and inc adc or xchg (bad) (bad) (bad) cmp lret pop cmp sahf not aas in add pusha pop add data16 addr16 stc aam (bad) (bad) (bad) call dec sbb adc mov xor push inc mov out pop stc sahf mov mov jg (bad) (bad) ljmp pop sarl lret jb mov inc pusha add cmp adcb (bad) (bad) (bad) pushl cmp fiadd mov and fdivrl in xchg lea mov and daa lret test cmpsb inc cmp nop (bad) xor jp lret idiv stc add (bad) (bad) jmp add insl popf and fsubrp xchg rcll pop repnz mov xor sub pop cmp inc mov loop in inc xor icebp rcl push cmp into in (bad) sbb xchg or std (bad) (bad) decl or jbe lods nop rolb mov jae (bad) inc out dec (bad) movsb fldl xchg inc cld movb mov dec (bad) mov (bad) decl clc gs xor cs push mov les scas divl xor (bad) (bad) decl fdivr (bad) fistpl cltd pop push pop roll cmp iret pop push pushf out mov or mov fcomps iret mov xlat xchg dec dec out clc (bad) push pop jl mov out jb jno loop in and jle aad add push jg mov cmp dec cmp mov mov add dec and mov pop cmp and ss (bad) (bad) mov or pop jle xchg sahf out movsl mov mov mull (bad) (bad) (bad) call xchg rclb mov jp mov cmp ficoml mov mov (bad) (bad) std lahf (bad) das pop (bad) cmc pop xor rolb xchg pop out sbb popa sbb or lcall int3 aad lock imul jle (bad) dec mov (bad) (bad) jg add js dec sbb cmp cltd cmp shrl aam dec pop aas aad and cld lcall sbb or std lret mov popa insb cmc adc in (bad) (bad) decl test or jne js movsb and fs push loopne pop push (bad) (bad) (bad) push in push cld insl pop push pop mov repnz movsl js pushf push or cmp in (bad) (bad) call inc jle sbb lcall xchg push (bad) mov push shr dec ret dec or (bad) (bad) fisttp enter push cli repnz cmpb mov cltd sub ds out inc cwtl lcall and (bad) (bad) ljmp cli push andl inc cld and xor daa (bad) (bad) (bad) pushl jmp cmp scas in mov cmp jne lret sbb cmp (bad) (bad) (bad) ljmp adc repz nop lods fidivrl or xchg call (bad) xchg cmp (bad) jbe push sub xchg sub nop in push dec aas xchg push pop adc pop lds xchg adc add xchg sub out or mov incl add jbe lcall push into add (bad) lock xor add (bad) (bad) (bad) push mov lret je xor inc inc jne mov (bad) or adc sahf lahf rorb (bad) (bad) pushl arpl or jns incl jae cmp xchg int addr16 fcoms ds xchg (bad) (bad) (bad) incl mov jmp mov pusha mov mov pop jle decb decl loop int mov out mov xchg pop xor cmp mov (bad) jg add xchg push (bad) mov arpl imul (bad) jmp mov lcall and or mov repz shrl (bad) (bad) (bad) lcall dec movsb (bad) cmp push mov out sbb xchg (bad) cmc es aam out (bad) (bad) (bad) call test mov inc les inc ja out dec sub stc (bad) (bad) (bad) dec inc add rcll loop cmp pop lret std sti ret cmp lcall jnp pop mov insb push pop mov xchg lret push sahf jnp lcall push int out (bad) sti movsl sbbl (bad) (bad) call dec outsl add scas pop lods cltd mov sahf pusha lcall jl rol das xchg sahf sti repz outsl (bad) (bad) lcall lea push mov hlt cmp cmp mov push jae (bad) loopne test (bad) (bad) push jne xor loopne popa mov mov sti cwtl xor mov (bad) (bad) call pop (bad) jb sub std dec or mov mov cmc cwtl leave (bad) (bad) (bad) lcall mov push pop mov and popa andl or (bad) lock mov ljmp and adc iret mov mov dec movsb ret cwtl repz outsl clc (bad) call (bad) pop loopne mov sub add jl test shrb jmp (bad) jg mov pop xor cmp bound adc int jmp imul in pop jl pop arpl movsl movsb fwait push mov push cld jae (bad) mov (bad) (bad) (bad) lcall cmp pop mov xor dec insl pusha adc mov sbb cmc mov jbe (bad) (bad) (bad) ljmp int3 roll mov jbe test adc and mov jne das pusha cli pop movsb (bad) (bad) (bad) pushl icebp mov inc jns pushf adc mov in fisubl and clc call mov xchg adc and mov sbb mov jmp pop repz adc and int3 dec sub (bad) ljmp jge out inc pop cli dec lds inc aaa and xor sarb lds (bad) (bad) dec xchg call mov and (bad) adc mov (bad) (bad) mov xor call fimull push (bad) cmp (bad) dec fucomi dec out shrw test pop jg je mov cmp les int pop hlt (bad) decl jp shrl (bad) cld dec dec mov fisubl jmp clc lret dec inc cltd mov sub mov ror ja mov cwtl icebp mulb mov dec xchg add and inc jge mov js stc sbb inc push push and sub push cli aam outsl je std (bad) jmp cmp andb icebp aam lret mov ljmp imul std out cmp mov int3 xchg stos or mov dec loope mov inc xchg es cmp (bad) (bad) jg push stos (bad) stos dec ret enter test and sub test push cmpsb in test adc lcall pushf jge adc xor push xor popf jne in add sarl mov mov (bad) ljmp aas sub sbbb jmp inc sbb jp adc repz jg (bad) ljmp sbb xchg jnp fs movsb pop hlt sub add aam jle jl (bad) (bad) jmp je daa shr mov mov pop (bad) mov int3 xlat loopne in stc (bad) ljmp or lock or lahf movsl xchg cli mov pop inc sarb cld (bad) ljmp dec stos icebp mov mov xchg adc sbb addr16 ret (bad) (bad) call push loopne aas adc vshufps nop inc xchg and data16 ljmp js in push sub inc add jl jp push or adc cli push call xchg ffreep sbb jno gs (bad) (bad) fbld gs fcmovu xchg xchg mov scas jbe enter push js jae lcall jp gs sub pop test mov lods sub sahf mov jno rcll outsl push sbb fsts (bad) (bad) (bad) lcall push imul cmp iret fyl2xp1 ror aad mov in loop (bad) outsb sub or xchg movsl pushf mov das (bad) sbb dec xor call mov mov call pop jnp daa aaa jle mov cmpsb (bad) in (bad) (bad) ljmp stos shr (bad) cltd sub mov fdivrs xchg pushf pop jmp (bad) mov mov hlt (bad) (bad) push stc cmc lds test xchg adc mov ficoml adc mov xlat (bad) ljmp mov xchg (bad) sarb xchg (bad) (bad) decl sub sbb repnz mov pop hlt dec or or lds and incl mov inc dec jg pop rolb sbb pop jg push push and test adc push out sbb jb xchg xor clc call push jecxz adc add xor addl ja fsubs mov mov pop loopne adc popa fidivr js push jp and (bad) shll inc enter (bad) call in push xchg cmc int3 stc dec add das lods jl add lahf outsb fistp pop nop int and adcb xchg push jno mov cmp retw add push xor xor pushf in adc enter lock add push hlt pusha add (bad) (bad) (bad) incl jecxz divb inc loop jle push mov add sub dec std inc mov mov call nop jnp rorb mov jbe frstor lds pop xchg sarl or scas inc arpl enter lcall sahf negl iret mov mov push push ja mov add sahf ret jge cld mov cld xlat imul xlat cmp inc cltd scas test outsl mov xor cli (bad) call (bad) je sahf fidivr dec adc mov inc ret (bad) (bad) pushl and pop mov xchg (bad) out cmp pusha outsl or repz shll lcall decl push inc sbb (bad) inc loopne add shrb cmp sub lods lock (bad) ljmp lds inc jo push xor aam and leave hlt fimul or js popl mov mov sahf roll mov fistp popa inc add or sub out xchg fisubrl jl mov xchg in loopne rclb cmpsb mov arpl (bad) ljmp ds repz adc ret cwtl mov xchg vpunpckhdq std jo mov mov (bad) in jne xlat dec dec pushf xlat push push and sbb outsl in mov repz (bad) (bad) (bad) pushl test push adc outsl cmp dec jge test sbb sbb mov adc cwtl fidivr (bad) decl rolb cmp test xchg xchg mov cltd int iret (bad) (bad) (bad) pushl mov mov out (bad) lock xchg jge shrb out dec sti shr jno mov lea (bad) decl cli shll jmp ficoml or fs pushl add gs push lret loopne (bad) dec jne mov mov (bad) (bad) fistp mov sbb pop sub add dec adc and das xor xor xchg (bad) fcomip inc (bad) imul pop aad xlat dec pop cmp fcomps mov (bad) (bad) (bad) inc sbb inc jg inc and mov pop add ds mov pop fnsave push jo cmp pop cld cmpsb mov movsl scas jmp ljmp push test (bad) pushl push or cmp popf in sbb fwait adc cmp adc (bad) (bad) decl jnp adc test jnp add or lahf sub cld (bad) (bad) jmp cmc js insl mov sub test or xchg daa inc jnp scas cmpsb lock (bad) mov jb pop dec push mov (bad) ljmp lcall daa stos fcomps xor push lret add icebp test (bad) (bad) call cmp repnz (bad) scas or inc test xchg inc xor (bad) cmp aam int3 decl (bad) out fwait inc pop cmp xor iret adc (bad) jmp rdmsr pop cmp mov mov jb test push enter call (bad) call leave arpl lds xchg lds adc jae push xchg fmull aas (bad) pushl std fmull pop push mov aaa xor mov add cwtl rclb (bad) (bad) (bad) fmuls or push dec in addr16 pop mov popf loop pop mov or insl fisub mov jl sbb (bad) push (bad) (bad) (bad) (bad) ljmp outsl fisttpl fwait adc popa stos jge pop dec adc (bad) (bad) (bad) jmp cli mov stc mov adc xchg out lret or xchg dec sub (bad) (bad) call imul mov notl in out ficomp jmp xchg (bad) scas xchg out mov clc (bad) mov addl adc shll jmp stc mov loop (bad) pushl jmp add call test shl bound jbe add jo push (bad) (bad) (bad) mov xor stc (bad) into (bad) xchg jg bound jle inc jo out xchg test (bad) fidivr lret mov xor ror mov mov outsl ficoml aad xchg repz pop (bad) (bad) (bad) pushl sub xor sti jecxz loop dec dec repz rorl roll adc sub rcrb (bad) (bad) (bad) (bad) fstpt add xchg negb andl dec gs and push pop test lahf sub cltd jg sahf jmp ljmp (bad) lcall (bad) fdivrl (bad) popa push sub adc mov (bad) (bad) jg pop call mov dec and push xchg les xor inc lds mov stos rorl pusha pop (bad) call sub imul movsl js mov pushl (bad) pop push leave xor inc into pop jecxz cld popf pusha fcomps jle (bad) arpl sub loope sub sbb (bad) (bad) (bad) in cmpsl enter faddl hlt adc lahf imul rcrl xlat dec mov fs inc jmp pop hlt add cmp push addr16 out std adc jbe sbb cmp mov (bad) (bad) (bad) jmp ret adc or push bound insl sbb sub cmp mov out sti add push mov std cwtl test mov sub jae and push jle test ror fistpl jmp mov aaa fsub sub (bad) call mov cmp call push adc (bad) (bad) (bad) jmp cmpsb ljmp jnp mov std fsubr cmp xchg mull and (bad) (bad) lcall pop push rcrb ljmp mov in mov jg movsb (bad) (bad) (bad) (bad) mov lret (bad) in cltd mov jge mov mov cmp hlt mov inc (bad) (bad) ljmp adc iret mov lods in add jg rolb mov jle pop in ds jle (bad) mov fs pop sbb into cmp ds addr16 push cwtl or aad ret aam sub (bad) (bad) push fist mov and cmpsb xchg outsb and cmp and and test call std incl sub imul sarb xchg jl pop adc (bad) (bad) (bad) call out adc dec push out dec jne ja xchg add jmp xchg lea xchg fcoms (bad) ljmp cmp mov loop sahf rcrb (bad) (bad) (bad) (bad) mov xor jge push xor data16 mov push or jno (bad) (bad) (bad) ljmp adc mov xor jae mov mov in adc loopne (bad) call push cmp scas das cli and sbbb out inc or mov lahf (bad) (bad) mov xchg (bad) mov std inc int3 or sbb das (bad) (bad) call cld sub or or lds cmp add (bad) (bad) jmp push insl dec jne mov loop jecxz pop xorl rorb pop lcall daa scas (bad) (bad) (bad) pushl cmp sub popa insl inc cmp dec jl gs out jmp (bad) (bad) (bad) (bad) jmp divl mov jb (bad) aaa push test xor ds cltd or stos js fildl and inc cmp (bad) pushf or mov nop push mov hlt inc adc and pop inc (bad) (bad) (bad) pushl jo das jmp xor sub sub in xchg bound push sub into aad inc data16 dec dec push push or popa ss dec lock push pop sar call xor enter inc xchg add xchg test decl cltd push (bad) scas nop cmpsb fbstp pop ret stos push add cmp mov adc and pop movsl lods push in data16 sarl nop mov std pop xchg in inc or cmp mov add cwtl xor mov mov sbb (bad) (bad) pushl mov nop dec xchg repnz (bad) daa je orl push inc fiadd roll (bad) xchg and lods cwtl jae push stc test sbb (bad) (bad) call cli mov fistp idiv (bad) mov outsb (bad) jg push xchg xchg (bad) ljmp clc test loopne jle sub adc dec sub sbbl mov iret ljmp jmp cld aad mov out cs add pop fstpt movsb imul std jnp adc and mov dec mov repnz lea dec cltd repnz (bad) (bad) pushl xrelease dec or in inc (bad) lret xchg daa int3 jno,pt es cli (bad) (bad) (bad) decl ret subl cmpsl sahf sarb jae nop out jg fs mov (bad) inc mov pop (bad) adc (bad) das mov push mov ja cmp mov sbb mov fdivr adc hlt pop and xor mov or and cmp inc and (bad) cli push sub lahf and sub pop cld stos lcall mov inc sbb push in scas inc sahf das rorl (bad) (bad) decl cmp mov movsb or cwtl push push dec inc mov jmp xchg daa dec sub inc call pushl shrd jb push fild push shl dec stos jbe xchg ljmp les shrb jg inc std rorb mov fistp xor (bad) (bad) (bad) push lods pop ret pop test push xchg imul pop imul jmp sub xor shll mov sahf inc loop xor xor (bad) (bad) (bad) lcall daa cmp ja daa inc pushf ja das mov loopne sbb add xor sub cmpsb (bad) (bad) (bad) ljmp pop (bad) push adc shl xchg insb jns bound mov dec and test or cmp (bad) (bad) (bad) aas push mov xchg or and out or popa cmp mov outsl jns mov in fdiv outsb rep add push (bad) (bad) (bad) incl jecxz inc out les inc push sbb mov shll adc pop adcb addr16 add (bad) je add test xor ljmp repz pop mov (bad) (bad) decl stc ds cmc push arpl mov inc adc shlb xchg lods sbb cs sub pop scas call jp sahf fbld jmp or insb inc mov push pop jl fnstenv (bad) (bad) dec xchg sub cltd mov inc int and pushf ljmp dec dec jb lods jecxz das test das (bad) (bad) (bad) incl mov push call inc movsb out dec sub add pop mov cld (bad) (bad) pushl ret sahf ret es pop sub adc xor stos sub pushl push adc push scas and mov pop mov negb fcomip fcomip les enter cmc imul (bad) decl call add sbb rcl jecxz xlat icebp inc roll cmp popl push (bad) pushl inc pop and dec and insb (bad) push xchg je lds call mov and mov cmp xor xor or nop aas (bad) push push decl push jp in dec stos mov add mov add mov and jbe xorb hlt lcall dec sbb mov stc or dec or or sub fcoms cli inc cmp lcall mov pushl std (bad) fcomps mov cli jno fwait mov inc mov mov (bad) (bad) ljmp push mov hlt adc call decb subb aam (bad) (bad) (bad) ljmp jb lret lret pop and pop dec jl popf stc dec mov and mov or add dec (bad) hlt cmp dec aas out mov cmpsb (bad) (bad) (bad) ljmp insl gs xor mov int3 ficom xchg shll addr16 mov pop aas sub add lcall fs mov stos xchg inc mov pusha (bad) (bad) (bad) mov jo jo mov icebp push lret dec xchg xchg cwtl sbb jecxz jnp mov add inc fldl popa imul in and insl (bad) (bad) lcall sbb jno aaa pushf sbb mov mov lock jno mov (bad) (bad) (bad) call test pop pop lods imul dec add insb dec inc (bad) (bad) (bad) dec inc jno imul cli mov push mov scas ja shl mov jo or clc and sbb ret movb mov out cmp ja incl scas sti sti or mov cwtl ds out sar (bad) (bad) decl scas dec or adc adc push popa rcl in push mov jle (bad) push jecxz pop and push inc jmp daa test inc sbb scas pop popa and (bad) lcall test fwait imul movsl sarl sbb mov sar sub or clc rorb (bad) cmp inc (bad) jno jp push pop and pop or movsb outsl xlat mov aaa pop lret inc inc adc (bad) cld cltd push popl cmc js jg movsb (bad) (bad) (bad) fbstp push xor ja jmp ret pop fwait or xor adc (bad) call and notb mov mov mov dec add ret (bad) (bad) jg aas andl sbb cmp mov lret or jmp or pop mov dec pushf ds xchg ss sbb std call mov icebp cld leave inc push fidivrl xchg mov loopne movsb insl mov or into lret sub scas push leave and stos dec pop mov test mov (bad) (bad) pushl int3 je add jg add fstps or cwtl dec icebp imull inc loop or xchg xchg lods inc mov mov xor (bad) (bad) (bad) lcall sbb xchg insb gs lret lods xor push test xchg loop movd sahf in shrb scas stos add mov insl mov adc loopne (bad) and (bad) (bad) jg push ret mov xchg das lret outsb ret lret mov push inc andl or (bad) (bad) (bad) incl mov xor add fs xchg test lret or into iret adc and lea mov pop xchg mov adc enter push jmp push jg xchg pop mov mov pop mov (bad) incl ds cmp sarl and fwait not push ret fsts test xchg and pushf mov sub aaa push stos cli out arpl xor cmpsl arpl mov (bad) movsb and push (bad) mov (bad) (bad) lcall aaa mov clc push mov push dec mov in or aam sahf aaa mov fdivs int3 cmpsl das jmp sbb js ror sahf ds xlat stos and call int jo jbe (bad) or adc mov sub fmul stc add test fiadd push pushf js and xchg fsubrs test test (bad) decb jns add mov xor jb (bad) (bad) ljmp mov out fistpl xor xor pop imul mov mov jb push and jge data16 sbb sarl (bad) jg or mov jl ficom outsl inc (bad) (bad) (bad) push aad and fild pop dec int3 or es pushf pusha (bad) mov in cmp mov and ret ficompl sub cld incl mov and or lods or (bad) (bad) lcall addr16 lcall pushf jle lea pop insl inc cmp cmp add jg lcall xchg fmulp negl pop mov sbb or and test sar jg pushl stos push sbb xchg mov mov pop in jns pop mov into out jne (bad) (bad) (bad) jmp pop mov subl leave std daa or add xor int decl (bad) jmp fstl and lods fisub cwtl rol add pushl xchg xor and insl int3 push (bad) ljmp cs xor divb mov push dec pop and ds mull mov pop (bad) cmpsb (bad) pushl pop dec pop push sub fldenv mov out push and mov scas outsl fs repnz jg pop mov add (bad) (bad) (bad) (bad) jle in insb out cmp jnp ljmp mov adc add cmp (bad) (bad) lcall addl (bad) lods xor xor or pop jp dec scas adc fdivrp decl lock push bound jno inc enter lock fidivr sti cltd jnp (bad) (bad) call and xlat jg pop adc dec cwtl xor pop push imul mov cli jae sub mov (bad) decl mov xor clc enter mov adc faddl mov inc cmp repnz sar (bad) pushl push rcl pop or add cmp cmc cmp xor jae mov (bad) (bad) decl dec sub jns inc iret (bad) push imul scas adc dec out les (bad) (bad) (bad) jmp ss loope mov cmc or (bad) cltd fisubrl push dec es iret test sbb (bad) (bad) (bad) fcoms test jnp aas in incb sub les roll icebp jmp adc inc dec and mov idiv ljmp scas pop xor cmp inc sub test outsb pop and adc ja lret jb and insl mov in cmp and int bound add (bad) (bad) call or add cltd push mov sbb add fcmovnu sub (bad) (bad) (bad) mov jg (bad) int3 in and ds daa pop in and mov dec aas mov dec add loope sahf push aas lea in (bad) in pop xchg aam cli (bad) jmp inc mov mov outsb xchg repnz js js pusha jne mov (bad) (bad) (bad) (bad) cmp pop cs cmpl cmc orl pushf pop adc push xor add (bad) incl loop dec mov daa cmc int cmp cmc adc (bad) (bad) (bad) mov test mov cs out mov test mov cs cmp sar (bad) decl add sbb icebp mov xchg sub outsb (bad) (bad) (bad) jmp inc xchg and inc (bad) xor mov aas test shlb in mov sub (bad) (bad) jg jns lods xchg test xchg dec out fnsave mov add aas (bad) stos and loop sub lock push pop mov dec gs iret or xchg (bad) sub adc push lahf xor (bad) (bad) lcall push push repz and test cmp ja (bad) lods hlt push jg (bad) sbb (bad) ljmp xchg ds out cltd push fidiv rol mov sub ss push (bad) push sahf scas hlt mov push mov inc loop (bad) xor push mov (bad) (bad) (bad) ljmp xchg daa std jmp inc test push and jno test inc popf push (bad) jb dec lret (bad) (bad) call pop adc dec cltd pop add jae js or sub hlt fdivs jl and adc mov mov xchg jb rorl arpl aam sub std lcall (bad) lds movsl inc add push sbb pop lods mov (bad) cmp (bad) (bad) mov dec into mov adc lcall out push cmp mov outsl cli incl movsb dec lahf mov or dec sbb (bad) lcall ds sub rorl cld sbb mov jecxz mov (bad) (bad) ljmp scas sahf int3 aaa inc lcall outsl mov cmpsb mov and xor sbbb cld call or cltd sbb and call iret addl add ds mov jno cld (bad) (bad) (bad) jl out lods call adcl xor pop sub out ds jmp (bad) (bad) call cmp jns lods cltd rcll jb lcall push enter xchg (bad) (bad) (bad) jmp inc rcll mov and stos out rcl mov push stos dec rcl adc (bad) (bad) jmp clc add pop jbe iret into jg addr16 jle and push xchg (bad) (bad) incl sub lahf cmpsl call dec mov adc jl popa inc adc (bad) (bad) (bad) mov jno cmpsl pop jl adc mov cwtl cwtl int stos fnop rorb jg (bad) (bad) (bad) decl cmp pop loopne addl (bad) push jge pop arpl mov movsl fwait inc adc jle jb cmp (bad) (bad) lcall xchg add jne or mov loopne push and push jne ds cmp std and adc out inc adc and pop ret or inc (bad) (bad) (bad) incl jo (bad) sub repz cs fcompl mov mov icebp (bad) decl (bad) jmp ja mov and add mov cmc sub dec push xor pushf sar (bad) jg inc stc mov mov xchg xchg ljmp add pop cld (bad) (bad) ljmp and push cmp xchg cmpsb enter lahf dec cmp hlt (bad) jno or decl ror loope test leave fnstsw (bad) ljmp movsb int3 mov in clc int3 ss dec push mov adc jmp (bad) lcall cmp cmp bound sbb stos je xchg insb movsb aam cs (bad) (bad) call rol les jns jl xchg jge dec pop ret dec sub in jmp xchg out sub cmp add add or imul loope repnz lret fstl and jno xor (bad) (bad) incl sub mov adc mov push mov xchg add mov sbb adc cmp mov push aam bnd pop or cmp sub (bad) (bad) (bad) ljmp stos adc add fild arpl or sbbl mov out aaa loope,pt cmpsb mov dec sub mov (bad) (bad) (bad) (bad) jp je add mov loop jmp mov aaa jnp repz pop sbb (bad) leave xchg push add lock call dec mov xchg sbb inc data16 mov fdivp cwtl scas nop out ja mov iret pop orl cs inc sub pop lret sub pop stos (bad) push mov adc inc jmp dec adc out femms lock cmp pop jecxz,pt pushf repnz cli repnz adc pop sti xchg movsl in es dec cmp add jmp mov jl ret push out jnp pop fnstsw decl or lea or sbb stos add call inc pop cld in mov pop aas fadds and pop xchg call (bad) stc sbb (bad) (bad) call imull negb fadds mov aas inc sti jae lods add outsb dec cmp lcall inc pop pop mov add mov mov dec loopne leave xchg fdivp das xor (bad) sti test adc inc ss ds mov (bad) call mov or pop sub aam repnz pop sbb aam jp mov mov ja mov incb into (bad) cmp cmp pushf pop aaa mov fistpll repnz (bad) decl adc mov sbb shl push pop sbb jnp cwtl incl fild rcr dec push inc pushf push or add cmp lahf and mov jmp ret out fcoms sub or outsl in (bad) sub pop pop incl pop mulb ljmp mov loopne pop std jmp scas cmc jo ds jno xor std mov adc pop scas test (bad) (bad) mov test adcl mov movsl inc (bad) std cltd imul jmp mov (bad) pushw (bad) out xor pop mov lds std xor (bad) out cli and sbb push pop dec mov fcmovne mov (bad) (bad) (bad) ljmp sbb pushl or je frstor gs js or in jae lds dec (bad) (bad) (bad) incl push xchg jmp inc pop ret mov xchg pop push sub mov fcomip cmp push jmp dec pushf movl leave popf das (bad) in cmp pop xchg push pop or (bad) (bad) call inc aaa (bad) inc andb add enter inc repz adc mov fdiv loop inc out xchg mov jle and (bad) (bad) (bad) lcall incl mov add outsb icebp and enter xchg je popa xor push popf mov xchg (bad) (bad) (bad) (bad) mov in add je mov das enter mov cs lods xchg push mov (bad) (bad) jmp inc bound push lret aas mov mov xlat movsl mov jg jne shlb fs fdivrs pushl pop ds mov repnz pop cmp xor sbb mov out les outsl nop test (bad) into xchg jo mov (bad) (bad) (bad) jg cs mov clc sbb pusha fsubr xchg scas and pop and jle (bad) (bad) incl cmp xor ss push mov in cmp negl (bad) (bad) incl sub jbe jge cmc movsb aad xor push das cs jno in inc adc push (bad) (bad) (bad) call scas fs adc xchg das or push std sbb lock lds (bad) (bad) decl test enter es adc add int pop cld (bad) (bad) (bad) lcall aam int pop lcall test test xor mov cmp push (bad) (bad) jmp iret orl jge aad mov sbb enter in cli fbstp lahf ficompl inc mov adc (bad) jg (bad) mov jb mov mov push es sahf mov or mov ds mov pop pop mov add and (bad) (bad) (bad) inc imul or (bad) mov push mov mov sbb dec mov and insl push fbld nop add dec sub mov sub incl lock (bad) xor outsl mov inc (bad) (bad) (bad) jmp out pop add cmpsb xchg add insb cmp sbb jecxz js xchg lret iret lds sbb mov jg push sarb xacquire adcl loopne xlat inc gs mov (bad) (bad) (bad) (bad) fldenv adc dec enter sbb int (bad) neg xchg sbb or in aam mov jmp jnp lret popf gs loope (bad) jbe jb mov inc mov dec xchg data16 (bad) (bad) (bad) js (bad) ss pop pop ds mov ds sub cmp leave mov xlat sahf cmp pop lock pop cmp cmp mov dec or sub sub out mov ja (bad) lcall cmp call mov sub data16 and xor idivb in andl int lods scas (bad) mov popa xchg lret (bad) (bad) (bad) call dec fwait pop adc ret stos sbb jg push mov aaa rcrb (bad) decb mov (bad) (bad) (bad) pushl sti fs roll imul pop or je pop ljmp (bad) (bad) (bad) call jo jno adc xchg test sub jle,pn call icebp cli mov mov (bad) (bad) incl jmp ret (bad) test jg xor aas ret pop jae sbb inc xlat mov (bad) (bad) ljmp out rolb js scas adc stc cmpsb inc ss sbb cmp dec inc idiv (bad) (bad) call test scas sub and bound push fucomip jmp mov mov popl in adc inc push lods pushf cmp scas movsb test or dec outsl mov decl lcall sub insb out js je (bad) (bad) (bad) jl jge cmp mov xlat jb mov (bad) sbb mov xor cmp (bad) (bad) (bad) (bad) cmp andl (bad) rcrl int das mov fdivr jg fs dec pop fnsave (bad) ljmp jecxz inc test rcrb mov rcr adc mov aas adc cld jge cmc mov idiv (bad) (bad) decl cmp pushf in repnz push arpl sti adc pop bound aam xchg aas (bad) or mov into mov jl sbb fmul (bad) (bad) fildll frstor push and add (bad) (bad) (bad) (bad) cmp mov dec add (bad) movsl inc pop pop outsl mov push fs adc push push xor dec pop aaa decl popf (bad) lahf mov mov jg cwtl (bad) (bad) (bad) (bad) pushl xchg es mov push es sbb cmp mov jne adc mov lods xor mov icebp enter xor rolb es (bad) (bad) (bad) ljmp xchg insb nop dec adc and xchg scas ret xchg sub pusha xchg xor (bad) lcall rcl cmc (bad) pandn cmpsl inc (bad) negl movsb mov jg call int (bad) (bad) decl jb enter sbb cmp inc lahf in mov mov mov cmpsl (bad) (bad) (bad) decl fmuls pop into xor roll aad add sub (bad) (bad) incl and in xchg cwtl or fldl bound cltd inc cmpsl pop inc test (bad) (bad) incl push mov adc push ss nop and pop lcall fildll stos scas push (bad) (bad) aas lods lcall cwtl sbb xchg and or jl (bad) (bad) lcall jge pop aad push xchg cmp scas adc cmp inc std daa mov sub sub (bad) push cld call lea fistp and push mov movsb xor and test sub cmp cmc cmp cmp testl push repnz iret ss sbb dec pop mov (bad) incl push aam inc sbb adc bound dec cli pop (bad) mov push inc ljmp and jmp lcall push sub ljmp jbe (bad) (bad) aas sahf adc loope repz cmc mov push jge xchg loopne lods dec cmp (bad) (bad) (bad) (bad) fnop scas cmp push pop add mov or cmpsl (bad) cmpsl inc movsb mov sub jmp mov pop mov push push push popa and pop dec sbb repz outsb imul jmp mov inc pop in das cltd lods sub in (bad) (bad) call imul dec (bad) mov or int dec jb cmp mov pop repz (bad) (bad) inc add jns jae jmp ficomp into aaa adc in push cmpsb ds ss popf sahf bound les outsl xor in mov outsl ja add aad (bad) mov push mov inc mov jne cli or push push add sar (bad) (bad) dec fild adc cmpsb cmp sub sahf repz sub test xor popf (bad) (bad) (bad) lcall fstl adc lods cmp pusha pop scas test and into cmc cmp ret inc ss xchg dec or (bad) (bad) jmp lcall or sbb (bad) mov push mov dec test imul mov (bad) out xchg lahf (bad) je adc inc sub pop call dec ficompl jmp push mov jl (bad) push xchg sbb inc shr clc sahf stos jae xchg pusha out jg sub jns jo jp mov mov xor pop gs push aaa rcrb and fwait dec (bad) (bad) lcall sub mov mov xchg xor nop sbb in sbb out clc (bad) lcall and js (bad) sbb mov sub test sbb push fsqrt mov lret mov xor lret (bad) mov xchg mov xor (bad) jg mov dec aam js cmpsl movsl mov pop (bad) jnp push jmp (bad) (bad) (bad) decl adc lds jp xor pcmpeqw fsubrp xchg jl outsb (bad) jg lods ret ds loop or mov mov aam mov adc (bad) mov push int3 cmpsb push into jg (bad) incl push or adc sbb xchg pop xchg mov in push sub mov pop es (bad) decl xor push mov pop imul leave pop into ffree cmp mull (bad) xor lcall loop bound push add xchg pop sbb (bad) (bad) (bad) mov adc xchg dec js and add imul nop (bad) cmp fwait lret (bad) (bad) ljmp and (bad) xor mov dec jbe rolb (bad) (bad) mov cmp jecxz aas mov pop mov outsl cli test test orl xor fadds add data16 cltd out sti cwtl mov pop inc (bad) mov (bad) push lret mov cmpsl jp mov pop stc out adc lret aas test (bad) (bad) (bad) mov lea ljmp inc clc cmp cwtl insl and (bad) (bad) (bad) call xor jl dec pop iret dec push repnz push out aas in lret (bad) fcomip mov lcall cmpsl bound addr16 cmp (bad) (bad) pushl outsl mov jae sbb pop xchg jns and xchg xchg sub jecxz adc inc mov ja (bad) pushl push mov cmpl jb fstpt enter or popa (bad) (bad) (bad) lcall icebp xor adc ret xor mov or or mov (bad) (bad) (bad) jns xor or ss or adc and xchg scas cmp mov (bad) jmp jp cmc mov popf pop inc fisubl inc push pusha jle rolb repnz mov popf jl lret lea fiaddl mov mov pop dec pushl and test in mov xchg pop in sahf cmc (bad) (bad) (bad) call and jle outsb or loopne pop inc pop int3 and mov repnz divb push (bad) ljmp dec push cmp dec jnp clc arpl inc xchg repz fwait xchg jmp pop stos jmp (bad) lcall inc push mov sub or movsb popa push mov xchg fdivrl idiv (bad) (bad) pushl nop cmp arpl xor mov sbb out sbb cwtl add xor cmpsb (bad) ljmp mov icebp mov out dec pop sbb xchg (bad) (bad) mov jl add sahf xlat dec cs adc cmpsl lock and (bad) (bad) lcall mov push xchg insl push fstp sbb mov mov inc sbb xchg jne ljmp cld cli xor (bad) (bad) ljmp pop sbb fstpl dec mov sub data16 clc xor call bound jl mov mov loop (bad) incl repz jb push (bad) test pop xor cmp scas adc decl arpl push jmp xor (bad) ljmp insl push add ds pop pop pop (bad) fwait push adcl pusha fs (bad) and (bad) (bad) call mov insb in mov scas or idivb stos fcoms aam pop xchg outsb das aas xchg ret adc gs jno dec xchg enter xor xchg bound cwtl int cli or std pop dec cmp jl xchg mov mov xor lcall div jb add subl sahf rcll inc (bad) incl add scas fstpt (bad) lret shll push pop fsubr (bad) (bad) (bad) pushl mov xchg mov lahf jo mov in mov inc dec scas in dec pop dec or (bad) sar inc push out and enter sbb (bad) (bad) (bad) (bad) ljmp and jne sbb add movsb inc fmulp pusha cmp add nop and call pushl out add loopne pop int3 mov sbb lahf aas (bad) in pop (bad) (bad) (bad) pushl lock int cld sbb addr16 push (bad) jae xor jp mov jb (bad) (bad) (bad) pushl in mov or jns jge gs or mov ja repz mov mov adc outsl clc or ja (bad) cli and push sbb cltd push addl ja (bad) (bad) decl (bad) dec ds dec mov lods xor daa mov xchg and (bad) (bad) (bad) inc push add xchg out in inc adc jne jp jns push pushf mov sahf lahf jl (bad) lcall dec aaa pop mov shr cltd push jb jns mov xchg (bad) (bad) incl out (bad) sbb mov pop aad stc dec xchg cwtl hlt loop add inc ja rcrb (bad) clc lahf data16 xchg (bad) popa into stc xchg sbb push dec loop imul int ja dec fcos pop cld call stos add (bad) clc shr in clc outsb outsl mov scas xorl dec pushf mov lods lahf cs repnz xor gs (bad) (bad) lcall mov mov add or mov and (bad) (bad) (bad) call cli lcall mov xchg (bad) arpl mov inc push cmp jne rolb inc (bad) (bad) (bad) call jne mov adc fwait push insl ljmp outsl mov cmp cld dec cmp (bad) (bad) pushl push hlt push (bad) xor sub mov pop xchg cmp std inc jb or pushl pop (bad) pop shl and xchg sub and fadds mov rcrb pushl testl std ds sti xor (bad) (bad) (bad) dec sub push ja mov pop outsl mov and dec cmp pop push je dec hlt jg (bad) (bad) (bad) inc pop mov andl addr16 rclb test sti (bad) (bad) call and fdivrl imul out fild xchg mov cli xor ja ss aas sub xor mov (bad) fnop jmp sbb mov and jg or je movsl push inc pop xchg jmp rorb (bad) (bad) decl or ss movsb push iret or fbld sub cmp inc push loop mulb mov into jg mov repz sahf xor mov fdecstp nop popa mov in add pushf imul (bad) outsl clc incl call pop xchg mov xlat mov inc pop (bad) call es pop adc loope cmpsl scas jg sbb movsl (bad) (bad) (bad) decl adc mov adc fdivrl (bad) test (bad) push jb pop (bad) (bad) pushl xchg cli inc (bad) dec lcall jl sub dec ficompl pop add outsb arpl nop popa fs push push mov (bad) cmp sub cltd and inc (bad) (bad) ljmp rol mov jecxz test dec mov push test xor mov cmp data16 sar (bad) pushl adc pop movsl cmp test xchg add xor imul (bad) mov inc xchg lahf test ljmp cli ljmp arpl clc cmpsb into insl sbb popf aam fisttpll xchg sbb addr16 (bad) (bad) (bad) call mov add push inc cld lods lods outsb sbb lahf sarl cmp sub pop adc js adc arpl xor mov (bad) dec pusha mov sub jge xadd inc jmp aad cmpsl dec lcall mov shrl jno gs pushl insl cli (bad) sbb ja inc adc out or dec jle loope add lcall jno outsl pusha lea xor (bad) (bad) (bad) jg in rorl or xorb pop jmp xor in pop mov jge or sub decl testb std xor mov mov (bad) popf in test icebp cmp (bad) decl or dec mov aaa mov xorl adc cld (bad) (bad) mov jge je mov xor mov rdpmc fcomip (bad) decl (bad) imul out jae or sub and cmp push fsubs (bad) lcall pop lods popa iret mov cmp cmp sbb jbe push pop loop cld (bad) (bad) ljmp aad xchg mov mov fdivr out into inc mov test (bad) fcomip jnp (bad) neg mov fiaddl pop rcll in ljmp (bad) lcall js inc rcrl inc pushl mov lea cld jge adc and jne and dec cmp pop mov mov (bad) (bad) (bad) jmp (bad) icebp mov and movsb cmpsb in daa jge push xor add dec ds mov mov pop add add jmp pusha inc into rcrl mov mov xor lret pop mov cwtl inc cmc jns icebp mov jl stos pop inc pushf jle (bad) (bad) (bad) call push xchg insb adc sbb mov dec push dec xlat mov ret inc cmp (bad) (bad) call mov fildll pusha fstl mov push xchg bound inc (bad) (bad) (bad) jmp cmpsl push aad push jmp pop unpcklps dec mov in das loopne (bad) jmp clc sbbl sub lea in mov mov scas lret jg (bad) mov int3 xchg push xchg rcll dec stos mov stc push push (bad) (bad) (bad) lcall lcall cmpsl clc fnop push ss lea cmp jmp fcoml loopne pushl loopne clc cld inc adc test (bad) jne (bad) (bad) lcall inc movsl xchg repnz push in adc sti loopne mov jp (bad) ja cmpsb ret iret lock inc (bad) pushl or push pop mov mov pop in mov inc out fnstsw fimull or ljmp enter ss incb jl mov pop or sbb sbb xchg jmp (bad) (bad) jg push fucompp add out cmp hlt pushf jge jmp (bad) (bad) (bad) and dec aaa dec scas push es fwait dec cltd leave push or scas mov rorb (bad) (bad) pushl roll mov and clc inc sub bswap (bad) jle cltd ss nopl (bad) (bad) lcall pushf push sti push cmp jb scas add cli mov popf cmpsb mov mov xchg adc fimull xchg add inc (bad) push mov sub out mov jnp (bad) lcall sbb xlat inc dec push xor movq mov (bad) or mov (bad) mov push adc (bad) jle (bad) in loopne call dec xchg (bad) (bad) (bad) jmp xchg mov out lcall mov push xchg push add mov cmpsl and xchg mov lret mov fs jo and or sbb or bound cmpsl xchg jecxz ret and push sbb jmp jg xchg adc dec inc xchg lcall xchg adc jmp cmpsb repnz mul (bad) (bad) lcall dec jns adc jns pop inc adc push outsl xchg push cmp (bad) std sbb cmpsb add (bad) (bad) (bad) mov jb ja xor xchg iret bsr or int3 jg (bad) decl or std cmp xchg jnp fmuls insl xchg in mov shrl add in bound mov fistpll scas test loop pushf or imull repz and push and data16 or fldenv (bad) pushl movsl aad add jmp jl int3 sbb mov inc push push cmc jb sbb add aaa les xlat push xchg xor in xchg aaa aam cmc rcrl ljmp incl xorl push sbb mov call (bad) (bad) cmp pop in xchg mov cltd push in adc daa lcall pop or xchg push sbb (bad) mov (bad) (bad) (bad) jl and pop push movsb je dec loopne clc aas xor jge pusha pop mov std out pop pop and incl mov fidivrl push mov jg jno push rorl xor mov stos (bad) (bad) (bad) call jmp (bad) push jmp lock pop cwtl add mov xor (bad) (bad) (bad) sti fcom cmpsb cltd pop addr16 jmp jg testl push loope subb (bad) (bad) (bad) pushl push inc and aaa adc sti sub lds aad enter mov adc pushl divb imul adc inc mov and mov cmp loopne pop mov (bad) (bad) std fnsave push loop inc rorl add xlat sub inc (bad) ljmp lahf sbb mov add lret ljmp sti dec mov aad bound mov (bad) ljmp adc loop or cmp mov (bad) xchg sahf add (bad) sbb cld sahf dec jno loopne inc ljmp out pop sbb jg inc adc push jmp sbb or jmp or ds add popa mov fwait orl cmpsb in mov (bad) (bad) (bad) pushl (bad) jnp pop sti mov and xchg cltd outsb jg mov pop imul ljmp insb sub dec jp push dec and rclb add lahf imul ds adc jg inc jp out out loop cli popf pusha lcall jg fild test cmp xlat jl jne jo (bad) ljmp jmp leave movsb jno out mov cld push lret out mov xchg (bad) (bad) ljmp add lods in push lds fist pop das sbb sub (bad) (bad) mov ror sub and cmp push add mov decl rcll pop xor cmpsl bound into pop cmc les mov dec pop mov (bad) (bad) (bad) incl adc mov or mov call lret cmpsl or adc mov (bad) (bad) (bad) decl repnz sbbb and lret xchg inc andl call into and inc inc (bad) cmp jnp sbb (bad) ljmp rolb xchg dec test add push or mov call add fcmovne push aaa loop jae add lea inc jle movsl (bad) (bad) mov xchg in jne mov mov xchg call ret mov (bad) mov test repz (bad) (bad) (bad) jge pop test xchg or ja pop mov xchg add add (bad) (bad) mov cmp es movsb jnp pop (bad) leave cwtl (bad) sbb pop out fmull lcall jnp std add daa sub adc lret mov fild enter fdivrl jl fsubr lahf insl pop call fmuls ljmp mov adc xchg mov (bad) and test loopne enter (bad) (bad) out xchg mov mov mov add inc xorb sbb ljmp or insb push mov scas and adc loop outsl or sbb rep loope (bad) inc movsl mov insb cmp sub mov and push test ficom shrb repnz mov sub (bad) (bad) (bad) jmp cli mov sub test mov and mov (bad) incl dec xor mov mov push jg sub mov sub jne int mov add inc mov inc icebp in xor (bad) rcrl adc xor (bad) (bad) call test mov adc arpl popf push jne leave lods leave into movsl lcall (bad) incl cmpsl sbb or inc insl jmp (bad) popl cmp pushf aam inc int3 std (bad) pushl fistl mov or jns ljmp and out (bad) (bad) pushl enter out movsl jb pop jne imul bound lret mov sbb enter fwait mov push lods (bad) loopne imul mov mov inc pop aaa cmp (bad) adc or xchg xchg cs or push pop cwtl fwait dec ss xor and fisubr aam mov in (bad) mov (bad) (bad) (bad) incl inc aas das mov (bad) leave insb jae sub inc mov pusha adc imul incl pop in or (bad) mov pusha xchg test (bad) push xchg sub or push pop cmc daa mov imul bound inc (bad) pop or mov cmp push (bad) (bad) lcall xchg fdivr jno cwtl cmp daa mov cs (bad) xchg sub adc (bad) (bad) push mull xchg sbb ret mov test scas stos idivl mov mov lcall pop pavgw call or cmpsl test hlt mov mov (bad) ljmp sub dec push lock ss or mov fild and cmpsb (bad) (bad) std and push imul cmc (bad) (bad) xchg or mov cli stos popa xchg out (bad) (bad) (bad) incl sbb ret mov pop cmp add pop rcrb mov push lret pop push xor pop lahf lcall arpl mov cs add or mov jl pop adc (bad) movsl sar (bad) fildll add sahf mov sbb (bad) cwtl gs xabort (bad) scas scas mov mov and (bad) xor xchg (bad) arpl jecxz add call imul or test push insb mov jns adc in xlat sbb rdpmc add adc pop push jp xor (bad) mov imull clc (bad) aas movsb pop inc arpl scas mov repnz ljmp sbb push push xchg fldenv lahf sub (bad) lcall popf dec daa dec sub aas fnstcw dec adc (bad) mov daa sahf mov inc lock (bad) ljmp push inc nop ficom adc repnz mov test test cmp (bad) incl mov and add cmp sti fs or add pushf mov out data16 movl dec push (bad) fcomip (bad) mov (bad) sti inc das dec movsl ss push fldenv std mov sbb pop or (bad) (bad) (bad) or (bad) leave orl inc inc (bad) jp adc adc pushl stos push jno add sbb repnz orb jno popf (bad) (bad) (bad) ljmp arpl cmc push bound enter jnp hlt imul lcall imul test fdivrl lods pop (bad) sbb mov jle in mov adc cmp enter decl ljmp sahf adc sti sbb test scas dec dec call xor adc (bad) (bad) (bad) mov pop das sub jne mov js sarl lret orb (bad) (bad) pushl rep in push inc in mov mov push dec mov lcall ret jg sub insb out (bad) ds icebp xchg negl loopne popf mov and popa mov pop (bad) xor add orb int3 xor (bad) addr16 mov lcall loope cmc movsl pop lret ljmp cli sub inc nop jmp imul outsb inc push clc fdivr pop push dec pop dec xor xchg mov addr16 adc (bad) add xchg adc jbe lock (bad) (bad) mov dec mov pop lods scas (bad) cmp sbb mov (bad) (bad) (bad) (bad) mov and xchg stos imul xor jns sub cmc test mov mov shl rorb adc adc mov add movsb inc xchg ret or lcall mov add mov add xor int (bad) jge inc popa xchg jecxz add sahf pop cmp sub cmp daa push test adc pop pop add incl push sub jns xchg and mov in dec inc mov sbb xchg mov mov (bad) add int (bad) (bad) (bad) pushl cmc mov icebp cmp adc dec cmpsb test imul push xchg (bad) jg movsb mov dec jp jmp or clc jmp (bad) je pop dec movsl sbb cmpsb cmp jmp fwait xor (bad) (bad) (bad) cli (bad) in sub std mov xor sbb sahf and js xchg (bad) (bad) (bad) (bad) js lods push fstpt dec or add lret fdivrl aam xchg sbb jae xor (bad) mov mov imul mov dec ret enter or (bad) incl cltd imul mov pop in shl ret push push adc or (bad) (bad) (bad) fcoms bound lock dec fs pusha dec stos pop gs adc jb out jno pop or and push call (bad) dec or mov sbb stos out test fidivrl dec (bad) ljmp pop imul ret push clc mov cmpb xchg cmp push push pop fidiv dec mov xchg pop rcrb sbb mov lret aaa mov (bad) (bad) call bswap bound add pop pusha hlt incb dec mov lods pop mov xchg mov arpl mov cmp lcall lcall repz insl mov and lcall mov pop fstpl pop mov jmp lea aad mov mov push mov or adc movsb test dec (bad) call div dec ret cmpsl add enter add mov bound push (bad) (bad) (bad) incl mov test xor xchg (bad) lret push and daa sbb pop ss movsl das cli (bad) (bad) sti test pop test sbbl (bad) mov mov jnp or aas bound dec cltd sbb sbb fwait inc lcall call enter and je and cmc dec push es (bad) (bad) fistpll imul xorl je sub pop xor std cmp incl flds cmp sbb inc es dec push mov nop cmp push dec out dec lea mov fdivs push icebp jg lock cmp cmp xor sub (bad) jg pop into out daa mov add mov mov fmuls out (bad) fnsave rorl cltd mov ficom xchg into pop insl dec int stos orl mov fsubl shll mov xchg dec lods mov push (bad) incl cs and aas or or mov push ljmp repnz cld mov pop adc cmpsb (bad) call mov ss jns ljmp inc addr16 dec cmp dec mov add lret or cmp jno pop icebp incl pop add adc mov movsb in push (bad) (bad) ljmp dec lods lcall aam jl and adc jg inc and add decl dec ret pop int notb imul dec pop insl xor call jg lahf (bad) mov jl pop jmp (bad) jne mov aaa fbstp add into dec cmp push jnp jnp,pt jl adc int jae or (bad) (bad) (bad) dec cmp fwait cmp enter or jbe inc push rcrb addl (bad) (bad) (bad) decl push (bad) xor pop xor jbe mov push test scas lea add insl fstl scas incl in dec lret and rcll leave dec cmp add roll cmpsb aaa push mov xor jno jb stos lods mov repz hlt jns mov pushl int3 cmp (bad) pop push pop xor into adc rolb sarb into fldt push jmp rcll pop mov dec fchs lcall mov (bad) gs push xor mov xchg daa cmc mov cld lcall lock in xor insb mov mov add enter packsswb fildl and push call cli imul cwtl arpl (bad) (bad) call mov data16 pop mov add das inc push leave mov cmp outsb (bad) call (bad) ljmp adc adc ss aad jae mul cwtl mov xor enter incl xor pop dec pop lcall rcrl out fs icebp adc (bad) (bad) (bad) dec jp adc and dec cmp (bad) xchg jbe popa outsl and std inc cli icebp pushf sbb (bad) (bad) (bad) jmp ss in decl and (bad) sbb mov push mov pop sar fldl in adc sub dec adc fist adc mov (bad) decl push add mov or lcall jne outsl pop lock pop in out aas repz adc or insl xchg ja (bad) incl inc xor inc sub arpl movsl (bad) pusha je faddl mov (bad) jmp or or xchg outsl (bad) xlat mov jp outsl push adc add adc (bad) (bad) incl inc clc push clc dec push les jle xlat mov int3 pop das stos loopne mov add cli (bad) fcomip int3 push add cmp out sub add (bad) aas dec (bad) ljmp ds (bad) mov jnp out adc (bad) mov (bad) (bad) incl lcall adc mov scas fs in mov (bad) (bad) lcall xor adc mov mov call bound xchg adc ljmp sar jne in scas add notb test fldenv das movsb test push mov cmpsl std sbb inc mov nop (bad) (bad) (bad) pushl je cmp jmp adc fwait xlat lea scas in ret add pop pushf jl cmp incl nop jb xchg test shrb inc (bad) (bad) cmp jmp (bad) (bad) fcom loopne jg xchg jle add imul enter aaa inc les ret mov mov and adc cmp mov (bad) (bad) (bad) jmp ret mov in lret mov dec dec (bad) mov adc fbld orl ljmp xor test int inc in push fildll pop push (bad) out sti mov adc and and stos xorb scas clc lcall sahf xchg es je xor rorb jbe (bad) (bad) (bad) pushl adc inc cmpsl sub arpl or mov addr16 mov inc incl hlt icebp mov and (bad) pop aam cmp jge sub ljmp sbb mov leave pushf scas jnp or xchg inc xchg sub (bad) (bad) (bad) out orb cmpsb dec hlt addr16 js out pop xor xor repz negl outsb test (bad) (bad) (bad) (bad) aas sahf dec push lret mov lahf inc mov jno imul cwtl cmp test xor mov (bad) (bad) incl in test shll jmp pop stos inc lods clc or das outsl and dec call cmpsb popaw scas cmp pusha lcall pop mov dec sub (bad) (bad) (bad) (bad) jle daa lret cmp cltd add sbb roll inc out repnz cld mov adc (bad) push xchg (bad) out clc add movsl pop jo jae pop jp bound xchg push insb je out push jg hlt (bad) fldz xchg adc xchg inc stos ds (bad) jae mov (bad) jmp cmpsb and jecxz pop pop mov xchg imulb adc sbb or ja (bad) (bad) (bad) jmp shrl adc xchg mov xor mov or push or sbbb (bad) ljmp mov addl out mov push cmp scas push sub rolb fildll (bad) lcall test xor lods lds (bad) jecxz lock aad inc pop xor out cli sub (bad) mov mov mov xchg or rol jmp jno (bad) (bad) (bad) lcall in jne jno aad cltd adc repnz lret (bad) roll iret (bad) (bad) mov pop sahf fdivs mov cmp rcll sbb das sar popa dec stos fdivs cmpsb inc push cwtl in xor out sbb cli push (bad) (bad) (bad) decl ret push cmp cltd mov js cltd sub jge inc ja scas pop jns (bad) (bad) cmp std rcr mov cmpsl call fnop movsl adc mov (bad) mov pop mov stos push rcr cmpb push push aad lods sahf arpl mov (bad) (bad) (bad) ljmp or fucomi nop xchg pop xchg insb scas xor pop mov iret fcompl push test or arpl xchg xlat pop lret lods cli in xor es or xorl inc fmul sub mov mov cmp push pop andl mov cld (bad) (bad) cmp in or push inc call dec ds pop ds es insb rorl jmp adc rclb add mov add jns sub push push pushf pushf in std (bad) (bad) (bad) pushl jns sbb scas in or (bad) or scas daa pop jle js out (bad) decl lds mov mov sub ja stc jle es dec add inc push jge in je fwait ds (bad) (bad) jmp pop xor sbb mov jne jb int mov (bad) and in sub (bad) (bad) (bad) (bad) jp pop gs leave jb inc pusha (bad) outsl push daa pop sbb xor loopne sbb lcall jmp imulb addb jns cmp push fsubrs (bad) mov jecxz xor dec mov (bad) ljmp lock mov add ret mov outsl out mov mov xor (bad) (bad) (bad) decl test pushl xor stc (bad) jbe jp jp iret stc jns ficompl lcall outsl sbb pop lret mov pop ja pop cmp stos enter (bad) (bad) decl jns test cmp mov icebp push inc jecxz out ret dec cli cs decl sbb fistpll pop shrb xchg fcmovu and sub loope decl outsb pop int cltd lret xchg daa call (bad) (bad) (bad) (bad) fiadd adcb mov test mov fdivrs sbb dec inc (bad) ljmp lds imul jp sub inc std (bad) incl ds ds aas in loope and push pusha (bad) (bad) pop stos xchg add push movsb add jns sub (bad) arpl insl jmp ret inc jns std (bad) cmp inc aaa popf loop mov jne inc (bad) (bad) (bad) call dec fbstp dec (bad) xor sti pop add clc inc or mov (bad) (bad) (bad) push xor dec popa cmp fsubrs pop in pop pushf or xchg imul imul cli je (bad) (bad) call pop xor pop nop cld pop inc lods jg clc inc (bad) mov push mov movsl mov xor cmp cwtl jmp pop mov adc frstor xlat dec fldenv pop cltd xchg inc aaa je dec (bad) jne mov sub ljmp push xchg inc outsl dec mov xchg xlat (bad) sub mov add repnz jl icebp (bad) mov pop mov fidivrl roll lcall scas scas outsb cmpsl orl ljmp enter (bad) (bad) (bad) pushl add and jno das push (bad) imul loope idivl xor push ss adc decl incb fidivr or outsb dec mov imul cli or lret scas (bad) (bad) (bad) mov adc push int jae mov imul gs stos aaa imul push dec jge pop cmp jb cmp das adc mov aam xor cld pop (bad) (bad) (bad) incl sub in xor or jbe and into mov cwtl (bad) (bad) (bad) decl into incb pop push xor rcrl aaa in pushf or inc xor enter (bad) ds push xchg pop int3 (bad) adc mov inc sarl pop not xor or into push and dec int inc xchg jg (bad) lcall cmp ja dec push sub mov fldt (bad) (bad) (bad) jmp lahf rcr cmpsl and divb iret sbb dec loope out mov add lret sti jbe mov cmpsl and jle pop or and movsb (bad) jmp add in cmp int3 dec je mov (bad) (bad) decl mov inc repz lret xchg rolb push stc hlt mov loop inc ss jne adc jmp dec jcxz mov jb dec or decl dec imul (bad) pushl push xor pop out dec mov add jge in fnstcw sub push (bad) (bad) (bad) lcall (bad) aad mov popf adc (bad) adc insb dec mov inc mov rorl (bad) (bad) lcall cmp lods rol repnz mov imul sbb fcomip inc mov cwtl lahf addr16 out adc mov outsb push (bad) (bad) (bad) jmp pop inc addr16 pop mov lahf adc lret cmpsl imul and (bad) call jb xchg xor inc push aam mull or mov pop (bad) mov xor std incl push mov insl sbb fwait add jg jbe jl loope mov daa jne loop jmp jo inc call sub pop pop (bad) dec iret mov test (bad) (bad) mov or into dec lret sbb aas aam mov sbb sbb (bad) movsb movb push xor mov fwait mov inc pop push test into test outsl inc leave pop lahf (bad) (bad) (bad) decl (bad) pop adc (bad) popa adc mov aad scas sbb xor je (bad) (bad) decl cmp xlat dec pushf or mov rcl test mov (bad) insl in mov sub clc (bad) and (bad) (bad) (bad) cmp aaa es inc sub outsl mov inc cld inc adc fstl or fidivl pop stos adc outsl xor (bad) (bad) decl in adcb pushf mov mov mov cwtl mov inc nop outsl iret es (bad) ljmp mov jecxz aas push (bad) push jmp imul push jge sub sbb cmpl xchg pop popf sbb clc (bad) jg data16 mov push popa mov (bad) shrb push push in cs lcall mov xchg imul hlt call (bad) mov jno cmp lret xor divb cmpb lock pop cld push enter fcomip (bad) call aaa cli repz pushf jmp sub adc out cmpsb xchg js jg push orl icebp push (bad) imul pop shlb je cld (bad) ljmp (bad) in push push lahf cmp inc sar xor sub mov movsb (bad) (bad) (bad) jmp cmp jae aad pop lcall pop jmp mov sti mov (bad) (bad) (bad) jmp (bad) xor in and jnp or lods inc cmc push (bad) jmp ret pop (bad) mov sub xor aaa mov inc stos sbb iret push in (bad) (bad) incl imul shrl jbe js je add lea cmc (bad) (bad) ljmp dec shl insb jne jl mov push int3 (bad) enter int rorb sub aam adc pop cmc fcoml xor jnp or out inc lahf mov cmpsl mov push sbb (bad) (bad) (bad) fisubl pop sbb daa popa rorl pop rcrl pushl ds hlt push push mov jmp pop xor lods leave and (bad) (bad) (bad) jmp loop lcall addr16 into and lahf lock aas cmpsb cmc push push jb push cltd (bad) (bad) (bad) jmp lret jp adc fs fs push dec imul lret fucomi pusha mov into ret push repnz icebp decl cmp or sub mov fwait stos test xchg and jne inc push sti and jae xor adc cld (bad) (bad) (bad) ds out imul insl sti (bad) bound rcl pop (bad) (bad) call cmpps add mul (bad) jno sahf inc mov sub pushl pop sbb ret cmpsl push sub (bad) mov out enter dec lods mov pop jmp (bad) ret sahf xchg scas cli (bad) inc hlt imul cmpl in (bad) out mov mov (bad) (bad) call pushf jl iret cli sahf je inc pop lret sbb int pusha mov cmp dec repnz (bad) jg jmp (bad) mov (bad) stos add sbb push cmp pop pusha out and (bad) jg decl (bad) (bad) pop push popf cmc inc jp js add jnp loop pusha fs sbbb mov sti push inc jmp mov push out les jg je les jae enter (bad) ljmp pop sti imul xchg mov imul xchg mov popf pushf mov (bad) call sti pusha mov push icebp pop scas (bad) xor push jb adc stos loop loope (bad) (bad) inc les push or add or sbb dec and pop lcall mov adc icebp mov ljmp inc and int3 ss xchg mov sub dec adc stos push sahf sbb jmp xchg das lods (bad) jmp xchg outsl mov stos movsl push push imull fs std pusha les (bad) (bad) lcall call xchg (bad) sub inc cs aas repz stos dec insb pop push adc scas (bad) (bad) (bad) ljmp mov imull mov push outsb jmp into lods sbb push jecxz jne mov cs push clc (bad) decl push rorb cmp mov adc mov fisub aaa xchg (bad) (bad) ljmp or mov push xchg test mov pop cmp (bad) (bad) cmp jns fwait or cltd adc adcb mov jbe fldl jmp (bad) (bad) xlat insb add int3 xchg pop inc hlt sub ret xchg int xchg xchg mov lock push lret cmc (bad) (bad) (bad) clc imul jg or mov repnz jnp mov enter fistpll jns gs xchg cmpsl sbb push xor mov insl (bad) (bad) (bad) jmp int3 (bad) inc lret dec fldenv inc or xor push divl jb pop lea int add (bad) (bad) (bad) out out popa fwait insl in add cltd or lods add pop into lods or dec insl addr16 pop jne lods notb (bad) inc mov repnz add mov mov sub adc out ljmp call or aas mov fmuls and pop outsl insb mov (bad) incl pop sbb adc je push aam imul mov (bad) fbld pop es lret pop mov pop xor ljmp sar cld jmp movsl arpl jbe (bad) clc ret sub call ret jnp (bad) (bad) (bad) inc cs rcl insl add test mov or orl xchg inc or arpl sahf aaa (bad) fucomi cli (bad) test std mov cmp mov in adc lock lcall ds pop and xchg rorl sub push sub in loope (bad) decl into push inc sub mov dec push add nop aam test (bad) (bad) jg mov mov arpl test icebp mov loop mov sub scas and incl sub cwtl add mov jo mov (bad) pop in mov pushf fdivrl mov out push pop cmp sarb jl (bad) (bad) (bad) into push mov sarb sub iret jns mov out adc cld pop pusha clc (bad) (bad) jmp stos adc popf lods neg pop decl jnp outsl shrl (bad) (bad) (bad) out push fs popf add mov pop daa fiadd pop jnp test sub (bad) inc cmpsb dec sub sbb xchg cmp inc push data16 adc popf (bad) (bad) (bad) dec add insl pop iret xor xor lcall jae stc xor popf jnp and out clc inc mov test dec cwtl (bad) ds les sbb and lods int call ret mov mov fcoms (bad) (bad) jmp and aaa lret aad push sar push mov dec cwtl push push or sub (bad) (bad) sbb mov mov adc add adc (bad) (bad) (bad) adc sbb lock mov sbb xchg (bad) lahf xchg cmpsb int3 int sub (bad) (bad) pushl and dec cmpsl push daa mov mov jo es jne (bad) std subl ja pop and xchg push loop pop inc mov sub (bad) (bad) (bad) fdivrs cmp aam jge movsl push or (bad) mov cmp int3 jmp aam (bad) (bad) (bad) (bad) mov rolb lret push call sbbb mov xchg cmpsb sbb inc xor clc (bad) (bad) pushl mov pushf insb mov dec mov cmp data16 (bad) (bad) ljmp mov xlat mov aad popa push sbb bound push and pop sbb mov and (bad) incl inc dec add inc aaa in xor xchg mov test xor mov (bad) (bad) (bad) call jl pop jnp adc les sarb mov mov lea cmp adc fstl and cmpsb das test sub (bad) (bad) (bad) (bad) cmp cli mov clc arpl loop xchg sub cmp repnz cmpsl adc das xchg icebp push inc inc mov (bad) lcall jo movq lds adc fmull aad flds ret push adc incl cmp mov daa add push pop movb fsubrl jmp inc decl cmp or fnstenv jns (bad) (bad) jmp dec mov fisubl sub adc dec out jge imul (bad) jg ljmp insl (bad) fildll mov daa loope cmpsb and test pop out addl and cli sub xchg jne jle inc dec xchg lret xchg (bad) (bad) jg jbe test and test cmpsb insb movsb nop xorl mov mov sti arpl ljmp jno push xchg adc aas xchg rcrb or (bad) int3 jno clc (bad) inc out cmp inc or mov js inc fs bound pop inc pushl std (bad) mov add psrld push push mov dec data16 push pop mov mov mov lahf in stos push or cs cmp push in loop (bad) (bad) (bad) incl lods es stc push imull pusha les (bad) add mov clc inc add test call sbb mov nop frstor sbb shr out sahf xchg sahf (bad) lcall (bad) imul shrl fs lds xlat add cmp or (bad) (bad) (bad) dec push ficoml xchg inc sahf test mov ror stos cmp fdivrs inc adc call mov ja sbb imul push movsl enter mov (bad) lcall pop inc lretw nop adc ja xor pop add push outsl aam sahf (bad) jg out mov pop les pop and enter mov (bad) (bad) (bad) lcall data16 mov (bad) push jnp lock lret scas pop in lret sub loope lock stc sbb gs arpl pushw rcll (bad) decl mov adc or dec int or and jno (bad) (bad) (bad) (bad) jns test in cmp hlt dec loop cli les jle mov or aaa jbe xchg inc iret add (bad) (bad) call cltd (bad) add sub dec cmp mov js jg rcll loope in fadds (bad) (bad) call stc add popa in pop pop test (bad) out pop cmpsb jbe outsb dec arpl adc or addr16 pop xor je xchg jl jg push xchg ret sti pop lds scas inc arpl cmpsb sahf mov aam adc inc ds popa dec (bad) (bad) (bad) inc mov xor cwtl or repnz lock cmpsl lds xchg sub in add dec push stc sbb lcall imul or push clc mov pop mov xor insb es (bad) mov xchg sub lea xchg push pushf xchg ret cmpsb mov and shrb sbb sub (bad) (bad) pushl inc scas lahf lea fidivr mov lcall or sbb rcl push rclb (bad) (bad) (bad) jmp lods ds cmp test das mov outsb les sahf ret (bad) (bad) (bad) clc sti mov jl cmp jecxz xorl call mov and push stos (bad) (bad) (bad) ljmp mov cmp xchg sbb jg lret inc call cmovns in jbe clc (bad) jg call xchg pop repz jle aad pop daa xlat jbe and push cmpsl mov sbb pop (bad) fist aad push xchg in mov mov sti insl js in movsb out mov loopne,pn sbb ja adc outsb (bad) in ds lds pop mov and mov ja (bad) cld lahf xor pop out sub cs cmp cs xor mov and outsl stos mov cmp (bad) arpl sar jmp in push mov mov addr16 mov (bad) iret sbb (bad) decl into leave lahf mov adc stos or jge inc (bad) or xor (bad) call add xchg pushf notl inc xor aad xchg add jmp dec std call jns push lock pop jo lcall sbb pushf lcall into test xchg jb je clc cld mul cmpsl adc xor ljmp test sahf cmp and pop aas sbb (bad) (bad) call dec rcrl in in aad pop in mov in inc jle in mov cmpsb dec jo lret mov sbb sub rcl inc or fcoms stc and loopne dec push (bad) (bad) decl dec push repnz mov mov dec stos cmp sbb fucom sar (bad) jge xchg adc (bad) sub xchg jnp sti dec hlt sbb movsb or (bad) (bad) jg mov (bad) pop (bad) hlt xor aaa cs jb add fsubr jae mov pop ss emms call adcl (bad) mov mov adc xchg mov std (bad) ljmp push cli icebp push jae adc movsb xchg pusha pop into sbbb lods (bad) (bad) (bad) dec data16 loop cmc xor lds push cli imul adc lock movsl xchg fadd mov mov sar jecxz addr16 jmp sbb sub xchg cmp pop std lock imul push fisubr popf xor imul orl mov in cmp cld aas and cmp lahf icebp popf sahf mov jle and jmp lcall push int mov in adc inc pop outsl xchg lods mov sub (bad) (bad) ljmp jo dec sbb mov aas add push and or mov jne mov cmp and (bad) push in (bad) (bad) (bad) jmp dec dec out mov jb cmc cltd pop sbb iret rolb adc fs xor (bad) call xor pop ds loop sti xorb xchg jecxz aam repz and addb negl inc scas ja jp shlb in inc add xor (bad) fcoml add push ret pop fmul pop push adc sbb adc (bad) fildll mov (bad) (bad) incl in xchg (bad) out cmpsb push sti daa stos mov sub test cmp mov std pushf lock fcomip sbb xchg dec and mov mov mov lcall mov mov (bad) ljmp mov movsb test fcomip je push jb add aas inc ret xchg mov adc push mov sub (bad) cltd xchg xor mov cmpsl and (bad) decl or and mov in or popa ss pop push adc (bad) incl mov shr pop out mov dec sub xor fs fistl hlt ja out clc lret out mov cmpsb (bad) fabs xor loopne stc outsb or cmp adc xchg push pop inc mov mov ja ffreep movsl std (bad) (bad) (bad) decl inc cmp jge mov out push orl (bad) jno jg or and jge,pt add pop std (bad) (bad) jg mov shr pop in xchg xor inc insl jecxz (bad) insl insl rcll inc shr (bad) (bad) call dec dec js pop es sub sub mov and dec sub ret lds (bad) (bad) (bad) decb fwait nop inc push leave icebp lcall adc mov mov jp fcomip jmp (bad) xor ret jge fldt inc test daa or pushf cmc incl ljmp mov repz je mov adc loope cli incl push call push xchg lea push hlt sub mov (bad) mov inc dec ja mov cmp (bad) rcrl xchg outsb xchg hlt xchg loope (bad) int pop hlt (bad) jmp dec mov add dec (bad) testb movsb add jns (bad) (bad) (bad) (bad) cmp xlat push out bound dec adc xor and mov xlat lcall adc punpckldq mov jmp pop adc jb add imul (bad) jmp loop adc cmpsl jns jae mov add repz mov or push push or (bad) (bad) call sub jecxz cmp fisubrl cltd inc cmp sti jbe and faddl jmp cmp (bad) (bad) jle mov lods hlt dec mov and ret xchg lock (bad) decl lock push pop pop sbb mov jle jecxz or and fistl mov aas ss sbb mov movsl cltd mov dec sub (bad) (bad) incl xchg pusha add into imul int ljmp (bad) (bad) (bad) ljmp std outsb (bad) mov push shrl add (bad) pop outsb pop daa jne loope dec dec es repz iret test pushl (bad) fdivs mov mov clc ds mov (bad) adc out push cs (bad) (bad) (bad) ljmp mov mov xor jecxz (bad) fsubs lods je and shr push (bad) cmp (bad) jmp cmp insb pop adc aas dec fs sbb (bad) test inc sti cmpsl (bad) jg mov cmc dec cmp scas stos mov mov adc in ror in sub movsb (bad) test or roll (bad) mov add cmpsb shl stc add jecxz or (bad) xlat mov scas add insb adc cli fdiv test mov stos push ja (bad) call sbb xor or pusha outsl mov enter mov (bad) jmp sub xchg rcrb daa fwait push (bad) and adc dec (bad) (bad) (bad) ljmp jecxz or mov or mov dec mov jno test (bad) (bad) (bad) (bad) mov cltd js popa mov into jno adc clc (bad) mov adc movl call inc into inc out jle (bad) push leave rcl pusha daa (bad) (bad) (bad) decl and loope push fimull sub fisttp jbe push (bad) out xchg movsl mov sbb push (bad) (bad) (bad) incl andl (bad) xor sub or push sbb test adc xor inc outsb push adc data16 add es jg icebp shrl std pop (bad) mov out sti dec add sub call lcall xor repz popf pop jp in outsl dec jg push cmp (bad) (bad) (bad) fadds mov pop pop call jmp pop jo jl loop outsl (bad) (bad) dec (bad) xor pop or mov sbb sbb int inc bound loopne dec (bad) (bad) (bad) jmp sbb out pusha test push xor mov fwait dec sbb sub enter decl push aad xchg pop daa scas mov fs mov fadds (bad) fisttp ljmp arpl fisub pop popa call (bad) jmp dec mov cmpsb mov pop jno or mov mov mov mov push inc ds loop mov lods divl xchg push sarb (bad) call add test inc rcr (bad) addl xor mov lret inc incl inc cmp mov pushf cmp xor loopne xor iret sti out cmpsb testl (bad) cmc xor (bad) (bad) call mull leave int push pop (bad) mov sub dec sbb lret or fstpl int3 mov std push cmp int ja imul ljmp rol in or fdivr (bad) (bad) (bad) in mov sbb mul pop and adc dec sbbb repz xchg jg or shrb into std gs or adc (bad) (bad) inc popf aaa daa mov mov mov xchg xchg or dec xchg or push cltd enter (bad) stos xor (bad) (bad) (bad) clc ds cmp (bad) enter add sub inc jb (bad) std xor lcall adc (bad) (bad) decl inc mov divl lock and xchg xchg xchg lret dec mov add jle lods xchg call (bad) jl jno adc xor mov add mov pop sub (bad) (bad) (bad) call xchg sbb and mov jecxz and push push sbb inc movsw inc mov decl (bad) xor cs or sahf xlat cmp (bad) mov dec shl (bad) decl add jmp in jne adc adc pushf fiadd decl (bad) mov int and push jle xchg (bad) xchg stos dec sarb mov lret dec ss xchg js pop sub outsl or sarl xchg or (bad) (bad) pushl hlt xchg fidivr push cmpsl mov out rorb sbb loope dec popa (bad) (bad) (bad) call aaa sbb sub add nop scas ret loope pop push mov push call stos xor (bad) out xor mov into in and ret jg pop push xchg mov mov inc and movsl mov adc xor jg,pt mov push js popa lock fisttpll mov sub sar add mov sti insl (bad) (bad) (bad) ljmp cmpsl or xchg popa inc mov push adc add pop cltd iret icebp lock (bad) (bad) pushl jo addr16 xchg push mov shlb jmp (bad) lods jl sub decl (bad) dec xlat cmp dec add sahf dec push cld iret ja (bad) jb ss lock ljmp negb (bad) adc adc pop pop mov or jmp and mov cwtl in cs and call popf mov cltd lret (bad) (bad) incl jne cmpsb loop sbb into and push cltd mov mov xchg mov movsl add icebp mov incl (bad) aam xor mov lock jg and in add mov (bad) (bad) (bad) out in lahf adc or imul ret jl push mov fistp jmp mov outsb or mov cld sete pop enter or mov dec sbb aam inc scas jmp push xor mov (bad) pushl cmc (bad) jno push test lahf jge sbb pop (bad) (bad) (bad) fnop adc scas out mov aas daa and and add ljmp pop inc jle sbb inc lcall ss ljmp jmp scas push push add (bad) outsb in (bad) (bad) pushl in mov pop mov pusha outsb push cmpsb adc inc dec ret push call xchg sarl (bad) push or ljmp imul movsl mov xchg icebp jmp repnz jmp fistpl jmp hlt sarl lcall adc mov (bad) cmp xchg mov xchg or test jb addr16 das cli decl mov ss arpl outsl lods inc (bad) decl inc je xor jns icebp dec out in stos jecxz lea xchg cmp xor xchg adc loope sbb cmp adc jo mov jmp leave mov out iret xchg xchg jbe jmp (bad) (bad) cmp fwait cld push xchg hlt cwtl ret sbb cmp pop (bad) jge movsl or insb fisub mov (bad) jmp scas mov ret jae xor pop push aaa pop leave sub or mov (bad) (bad) cmp xor adc test add xchg jge dec in jmp popf push mov push popf shrb je cmpsb dec xor or hlt mov outsl mov je mov mov gs xor xchg jle (bad) xchg sbb mov jecxz (bad) (bad) cmp pop (bad) push jnp jb mov cwtl adc cli mov dec dec mov mov add imul cmpsl leave jb in enter (bad) (bad) dec int3 loope cmpsb jns js xor int3 (bad) imul pop add cmp mov lcall cmpb dec mov pop fimul jne mov outsl int3 cmpsl xor outsl cs cli push mov cmp lcall pop add add (bad) outsl mov icebp jecxz lahf arpl pushf (bad) (bad) (bad) ljmp and dec inc jg fmulp push gs and rcrb mov cld popa inc or (bad) (bad) incl les ret or into jmp inc fnop das cs xor es popa xchg and bound xor cmp inc pop mov mov xchg lea (bad) jne pushf jecxz call stc aaa stos cmp add mov inc push jmp es mov and fcmovb nop add push xchg push mov pop rolb mov psraw mov ret sarb push dec mov push xor (bad) (bad) (bad) fiadd jp lock jns pop push lret (bad) and jo popa mov (bad) (bad) (bad) (bad) dec fwait adc arpl mov mov repz int ja cmp in cmp inc push out (bad) fcomip hlt add test xor pop notl rcrb fistpl mov sub dec sub incl add add mov repnz insb xor mov (bad) pop insb cmp (bad) incl es scas mov insb int3 jns or mov (bad) (bad) (bad) ljmp inc movsb pop outsb jl inc xchg cltd jl out push dec xor lods popa add dec push sbb (bad) pushl leave sub mov fcomps lcall les and or pop lea mov mov cmp push push xchg pop pop sub aas outsb outsb pop xchg sbb (bad) mov inc or cmpsl sub dec fildl sub ja add decl adcb dec ret (bad) sub out rcl ret roll ja mov (bad) (bad) (bad) pushl mov mov je (bad) and mov leave jne stc fcoms xchg jns pop imul aam xchg (bad) (bad) (bad) decl test stos push xorl pop aas jg (bad) (bad) jmp ret (bad) pop mov adc mov mov fsubr ds aas int3 int aas mov ja jle or stos (bad) call mov sbb mov sbb ret mov divb ret addl in jecxz movsb stos adc jnp xchg xchg push push js add adc fwait mov sub (bad) (bad) cli push sbb push and imul shl stos sbb imul ljmp lcall gs push jnp inc push ret pop (bad) aad mov xchg into decl or int3 in xor xor adc out add cwtl adc push daa fs ljmp mov or cmpsb xchg adcb xchg and inc mov (bad) (bad) (bad) mov inc push mov lock push hlt sub mov inc enter movmskps dec push mov (bad) icebp (bad) sub (bad) (bad) decl fcompl pop imul sub inc and loope test (bad) fbstp or outsb cltd xchg (bad) clc pop or adc fnstenv push mov ret push lea xor and jb,pt adc call pop fmull inc cli in mov cld leave js imul test (bad) (bad) (bad) ljmp inc mov pop pop (bad) adc ds rclb ss repnz incl pop pop mov or lcall dec jl inc lret mov pop xor sbb fadd (bad) (bad) (bad) dec decb mov jnp sarb incl jle and in sub inc adc (bad) repnz mov dec and dec xor pop lret jl addr16 insl mul lock sub cltd lahf test repz sti push jnp cmp test dec int ret ficompl movsl inc dec xor fidivrl mov (bad) mov fs fwait dec fsub lods in and (bad) cmc (bad) call and dec and adc adc push (bad) mov pop dec es test (bad) in ja sbb push scas rclb add sbb pop lcall and (bad) incl mov cmp push sub aam push pop add loopne idivb cli ja sahf or stos mov pop ret xchg bound (bad) (bad) (bad) jmp dec jp push xchg test es ret inc sub jmp mov add int (bad) (bad) (bad) decl pop adc stos mov repnz jmp out sub sub inc push sarl (bad) (bad) lcall sbb test mov xchg sarl stc cli dec add and bound pop (bad) ljmp or jmp and or pop dec cmp sub (bad) dec daa inc and xor adc dec or cld (bad) (bad) out pusha mov sub mov mov ficom aam (bad) (bad) jg ds adc mov test call mov adc (bad) (bad) lcall fimul jle (bad) cmc xchg inc fidivr cld (bad) jl mov (bad) decl sub push into jmp pop enter lcall (bad) (bad) (bad) jle daa int and dec mov aad icebp jge pop fnstsw push sub jmp (bad) mov mov mov pop jg sbb (bad) (bad) (bad) jg adc adc push push inc into lgs xor cmp test movl bound loope (bad) enter adc sbb (bad) mov dec add mov inc je ljmp and dec xchg (bad) (bad) (bad) (bad) ljmp cltd xchg insl iret adc push add push or push mov pop add (bad) (bad) (bad) cmp in test adc jns popf push test ljmp (bad) (bad) (bad) inc pusha mov inc je or push sub and movsl mov adc mov and (bad) (bad) jmp mov xchg mov lock push ljmp or push and repnz xchg jecxz cltd (bad) (bad) lcall jge sub push arpl adc jmp cltd pop sbb (bad) decl sbb mov out push rclb mov mov scas mov fwait neg sub fs ret movsl test ljmp push xchg mov mov dec add cmp (bad) cmp cmovl stos xor outsb mov sub cs das (bad) (bad) (bad) dec sub cs aaa fisubrl insl scas fwait icebp or (bad) gs inc pop mov adc in loope push ret cld push inc sarl (bad) (bad) (bad) jg push iret push sahf cwtl in mov arpl or sub sbb insb (bad) (bad) (bad) (bad) jmp mov add xor lret pop mov add jecxz xor fnstcw jo inc xadd jne js cmpsb adc pop or sub ret shll xlat jecxz (bad) (bad) (bad) dec jp cmp pusha clc aad sub mov clc ss xor ret push test loop,pt mov fldt ljmp ss or (bad) (bad) (bad) dec in xor pop jb lret cld fiadd push shrl add add or jg (bad) ljmp outsb fs cmp aad mov push mov jae (bad) (bad) (bad) decl adcl dec clc or inc sbb rol mov std imul mov push rclb imul or stos xchg jle pop in cmc call inc cmp xchg out sbb cmp (bad) push out xor decl and outsb xorl mov fdivrp (bad) (bad) call jne cmc sub in jp inc xchg push inc je lds mov inc and loopne ja adc iret inc hlt in mov sbb xchg (bad) (bad) (bad) pushl mov jbe nop push mov mov call sub lret (bad) (bad) decl aas jae fisubl and in shrb or aaa addl add push (bad) mov loopne dec push jl and je loop sbb mov pop dec mov (bad) decl mov pushf insl push sbb icebp in mov ror cmp mov (bad) (bad) std pop leave inc pop mov xor or xchg (bad) int test stc inc je xchg test (bad) incl ljmp int3 or rorb scas xor in cmp (bad) cmp adc pushf sahf repnz fdivs inc aam mov inc jmp mov mov sub leave inc ja,pt dec (bad) adcl pop test (bad) mov gs pop gs es ds (bad) (bad) lcall mov add adcl xchg pop sbb inc (bad) (bad) (bad) jmp (bad) cld sbb fsubrl pop dec imul mov shll test lret (bad) (bad) cmp inc jae add addb add mov ret movsl dec xor dec jno movsb cmp mov sarb xor test dec jmp jns mov js leave (bad) (bad) (bad) (bad) jmp xchg push or (bad) out (bad) imul cld mov adc call cltd mov mov fst (bad) (bad) fcmovb mov cs adc jne jae xchg out test xchg loop cs ds hlt jecxz cmp in cmp mov add (bad) (bad) (bad) out ds push xchg pop inc (bad) mov iret or ss cmpsl inc out sub add add movsl mov cltd int3 dec loop imul and adc insl cmp sub pop jge (bad) mull push pop cltd lock (bad) (bad) (bad) fcomps into jo (bad) scas arpl mov push gs aas xchg push clc int3 aam inc sub pop mov (bad) lret stos ljmp sahf rcl xor fcomps mov push movsb inc jecxz jnp sar pop lods jbe test scas out pop or (bad) incl add stos mov or (bad) mov movsl (bad) (bad) (bad) (bad) fbld lods hlt (bad) lret jae fisttpll ficoml testb (bad) jmp cld int stos jae ss fdivs pop jae mov sub stos (bad) lods (bad) mov orl jae xor inc sbb and outsb jmp incl (bad) call nop scas jb xor repnz ret xchg dec push or decl icebp pop cmpsb or jne add fldt cwtl loopne jp cs add (bad) pushl cwtl addr16 xchg std repnz mov push push (bad) lcall xchg ret add jmp (bad) ljmp shrb sub data16 rolb dec lret out dec (bad) lcall test push mov sub jle ret xchg and rolb lods or stos mov shrb insl jl cltd test (bad) std decl repnz mov or xchg push dec outsl stos push pop mov insl and jae xor test jg je js fsub push push adc in sahf push mov (bad) (bad) mov cmp scas mov idivb popf dec pushf mov mov (bad) incl pop add sar or nop loop (bad) mov xchg cmp (bad) (bad) mov repnz call push or pop push pop adc mov pop lds insb adc outsb dec mov dec mov mov lret jb test lock decl pop or xor negb dec xchg jecxz (bad) (bad) jg sbbl mov push mov aam sbb out cltd popf stos lahf sbb (bad) (bad) lcall inc pop mov and inc in add fisubl mov xchg mov insl xchg icebp (bad) call mov jae scas inc fcoms das add inc (bad) (bad) decl dec daa push xor push xchg in out fs xchg inc lahf mov (bad) (bad) lcall mov mov mov or mov rcll (bad) (bad) pushl nop push and sti aam xchg xor clc dec jp mov inc dec loop jmp xorl pop std (bad) (bad) mov pusha mov das dec push add into sub sub xchg out jb push ret (bad) (bad) inc add or push add and jg lret sbb ret cli scas outsb inc clc jg add mov dec inc mov mov cli popa mov inc rolb ds xor clc ja (bad) mov loop jno xor out mov lcall les icebp aaa std (bad) cmp addr16 int push loop mov ds ss into (bad) call xorb movsl xchg or push mov xchg (bad) (bad) inc dec mov jns mov gs test cmp adc enter fild adc cmp (bad) mov dec (bad) (bad) (bad) call push push adc repz sub cmp add dec or push mov dec hlt (bad) (bad) lcall fwait push rcpps cmp out jno or (bad) (bad) lcall pop mov mov push pop int3 and sub jb dec cmp and sti (bad) call lret test add pushf xchg lds mov mov dec push stos int3 shrb (bad) (bad) (bad) call inc shrb call jg push fnsave imul out jno (bad) (bad) pushl cltd inc cmc cmp dec outsb js and lcall and mov and clc mov cmp arpl scas shlb lea cltd mov out push cwtl sahf xlat mov icebp adc dec lcall adc scas xchg mov adc dec aaa addl mov inc pop jg (bad) call xchg pop xchg mov xor add xor jno call (bad) lcall push cmp (bad) pushf aad shrb mov xlat or sbb fld dec mov (bad) out clc lods int3 xchg push movsb inc mov xchg clc xchg cmp aam pop pop ret cwtl cmp (bad) cmp pop icebp push pushf pushf test sbb out jae (bad) adc popw cli adc push push and mov (bad) (bad) (bad) jg dec or pop insb dec imul xor sub pop xchg push adc (bad) (bad) (bad) (bad) call inc enter ja andl or and jo (bad) pop loop mov push or cli test and lret push jl xor dec ss jg (bad) jl sub psubb mov add imulb (bad) (bad) (bad) (bad) jg mov aas popl pop push in inc loop (bad) out outsb cmp loopne cwtl loop pop in and inc (bad) (bad) jmp cmp dec sbb sti cmp xchg or lods inc mov lea mov add adc cmpsl dec mov decl enter inc pop mov shrl (bad) adc xchg cmp (bad) (bad) (bad) jmp mov (bad) mov andl push inc dec sub sbb stc sbb (bad) mov push es push (bad) cwtl add push jae jae out (bad) push sub leave clc fstpt and xchg ret imulb pop les loope je fmul adc (bad) (bad) pushl insb mov push adc add push jecxz test stos xchg (bad) (bad) (bad) decl xor mov xor loope inc fldl mov pop jmp sahf comiss dec js (bad) xchg xor ja rcrb fs xchg ret (bad) repz mov jmp imul pop mov push adc push adc (bad) divl into (bad) (bad) (bad) (bad) mov mov and add dec subl cmp pop mov cld cmp (bad) (bad) (bad) pushl mov mov dec sbb mov or mov and dec adc pop push (bad) (bad) (bad) incl roll inc out mov test push mov sbb dec loope cmp push mov mov adcb ds push out sbb (bad) call fdivs xchg mov sub into movsl divb push pop adc (bad) (bad) jmp outsb shrl stos cltd lahf xchg pop std aas mov loope jp gs imul mov dec imul pcmpeqw ljmp mov clc cmpsl and fcoms jb dec popa mov mov cli cmpsb ljmp jno push enter daa mov and (bad) or xchg pop leave loopne dec gs (bad) push leave (bad) push inc jmp (bad) call scas jo std inc adc nop icebp pop mov fmuls sub aas (bad) mov int mov sbb cltd cltd or shll pop test stos push push jmp mov fisubrl mov imul scas mov (bad) (bad) call (bad) das aas sub or cmp mov mov pop adcb call incl xchg test insl dec shrb sarb fcompl sti aaa pop sub (bad) (bad) (bad) pushl hlt cmp jae add stc add sbb imul aam dec mov pop adc (bad) jmp mov stos call icebp aaa xchg jp mov pop pop push jg (bad) call test and lock xchg push mov lods add jl imul pop cmc cmpsb inc es clc xchg and inc xchg xor mov dec mov incl call fbld dec lods addr16 mov (bad) sub push subl fcmovne jns mov lcall std mov mov mov push sub xchg pop add jnp push cmpsb (bad) (bad) (bad) (bad) in lret xor in (bad) aam cwtl mov xor ja sub repz xchg loopne jg adc pop outsb clc (bad) (bad) call push imul fcmovnu pop jne and add std pop test add (bad) ljmp mov call mov lods movsl fcomps inc xor cld incl je (bad) int3 stc and pop push xchg mov (bad) clc (bad) (bad) jg or push ljmp test or pop repnz subb js ljmp mov fstl sub mov ss (bad) ljmp push cmp or and jecxz dec pop mov mov popa imul (bad) jmp inc adc std mov dec in leave or and mov (bad) (bad) (bad) ljmp cmp ds push lods xor rcr sbb dec clc adc lea cmp decl arpl jnp clc mov and xor lods (bad) (bad) (bad) mov testb pushf jns (bad) mov sbb scas push pop add movsb ljmp (bad) (bad) pushl sub (bad) pushf mov sar sub sbb xor in pop xor (bad) (bad) (bad) dec clc out stc rcl stos pop inc test arpl aad pop ror out int push repnz and stos data16 mov pop (bad) lods insl lret cs inc mov dec inc push jo shl imul cmp (bad) (bad) (bad) (bad) jnp arpl add test lahf pop lahf nopl sub or les xchg movsb loope mov cmpsb (bad) inc pusha mov rorl lcall pop pop lret (bad) fisttpll fimull dec scas sbb add fcmovnbe loop jb ljmp (bad) (bad) lcall jge xor adc or mov mov fidivrl push ret call out insb adc mov inc mov dec add (bad) (bad) (bad) fxch ds mov inc aas pop ja mov xchg mov test repnz pop jb mov xor (bad) (bad) (bad) ljmp pop jb (bad) aaa inc jle push cmpsw repz adc xor pop popa (bad) fwait mov incl push add xchg sub mov mov in loopne js sub xlat (bad) inc xlat into sub cs je in cmp xor and (bad) mov enter sbb call dec adc push data16 (bad) (bad) (bad) jmp push push mov das sbb movsl mov mov cmp cmpsl or mov decl sbb ds dec rcrl mov (bad) lcall call out fcoml hlt adc push sub adc xor loopne inc jle inc adc fsubl add (bad) (bad) (bad) fldcw hlt xchg loope cltd and inc inc roll fs int jnp cmp xchg xor (bad) (bad) call loop (bad) std loope outsb push ret aam (bad) mov sub or mov lea mov outsl cli mov push fldt jae lods pop sbb (bad) (bad) lcall pop mov push iret aam push shll pop add shr or imul pop xor incb ss mov shrl xor (bad) ljmp or into xlat adc inc push cltd out fs push fist stos jo or les fs inc (bad) (bad) (bad) (bad) jp sub popf call and push enter jae lcall cmpsb mov stc ret in mov hlt (bad) in rcrl jge cmp pop clc outsl clc dec cmc aad pushw icebp cwtl dec sbb xchg into mov sbb sar (bad) incl adc into scas adc je bound cltd lcall (bad) cli and dec orl xchg popf test xchg sbb test (bad) (bad) cmp add cmp (bad) icebp mov sbb cmp nop jmp and jp sar (bad) fcomip test pop xchg hlt lret rol les adc not (bad) push lea (bad) (bad) (bad) lcall dec dec mov enter fxtract cmp jae jbe stos mov add mull jns or mov pop aam (bad) (bad) lcall mov add sub addl sarl pop xchg leave cmp mov push (bad) decl push mov push push or adc popf xchg hlt mov adc push xor loope and (bad) (bad) lcall mov hlt jp push divb dec mov sub hlt loopne (bad) ljmp sub pop icebp fistpll imul (bad) (bad) call imul call fadds addr16 jmp lahf xchg movq (bad) lcall push add adc xchg push or xor sbb cmc pop add imul adc push (bad) call add int3 push push mov jo movsb pop pop leave jle fnstcw insl sbb std pop lock ljmp lret in cmp add in mov testl aaa std (bad) (bad) or sar les sub xlat out add xchg ss in fwait aad hlt (bad) decl sub out push dec pop outsl or mov push sub lods hlt (bad) (bad) (bad) (bad) aas sub fidivl add outsl add and jns out mov cmp (bad) (bad) jmp (bad) scas in lods sbb or aad outsl pop out cli imul push ljmp clc jmp gs dec sbb hlt imul pop cmp jo xchg test inc mov jb and and add hlt shrb push rorb (bad) (bad) (bad) decl push xchg jle mov jno leave and mov cmp icebp xchg mov pusha fnstenv (bad) (bad) decl pop lock test in push (bad) mov inc and and bnd dec jae mov icebp loope (bad) (bad) (bad) fmuls aas loopne dec mov bound xor test push syscall mov (bad) call dec ljmp loop movsb int dec mov popf mov push int les xor xchg and sbb incb test dec lock ljmp pop (bad) jl cmp pop iret jmp add in add adc inc test jle pop rclb (bad) (bad) decl sahf xchg and cwtl js mov rol xor ss mov mov inc movsb or in or sti leave icebp xor mov lea aas lcall in xlat sbb leave lcall pop xor negb adc imull jg lock mov or jnp pop fisttp push pushl sub push ljmp (bad) (bad) (bad) push xchg scas mov sbb out adc popf mov or push xchg dec and nop (bad) decl and mov cmc outsb aam push (bad) push into les push xchg (bad) (bad) (bad) lcall mov xor gs imul fbstp dec push cmp lret imul and (bad) (bad) pushl jl jl js mov jl movsl mov jecxz cs popa pop cmc (bad) decl xchg adc (bad) mov push pop pop pop hlt dec loop xchg inc (bad) (bad) (bad) jmp iret xchg mov and mov scas imul repnz xor cmp or jp (bad) (bad) inc add outsb cmpsl push inc fidiv imul cmp pop arpl dec dec call aas push incb (bad) jmp popl scas aam pop lea lret add and lods rorb loopne pop cmpsl ljmp cli aas inc out aaa daa lock sbb (bad) jg dec jg out insb inc xor fwait jne ror or icebp or and or dec (bad) (bad) (bad) fldcw mov es popf cmpsl mov decl cwtl aad fsts decl iret cli cmpl fcomps mov lods mov call xor sub mov stos adc mov (bad) jg mov test and in fisttpll rcrl add in xlat pushl pushl mov mov mov loop xchg test js lahf jo test (bad) (bad) (bad) pushl pop pop pop mov or stos sarl dec cmpsb push sti jnp aaa jle jbe idivb xchg jl rolb or out imul adc aas cli out mov sbb mov cltd int3 jno jae lret ds (bad) (bad) (bad) ljmp jbe mov fs push ficompl inc push push out sbb and (bad) (bad) (bad) lcall fwait daa hlt sub cmp cmp insl aad dec sbb jl mov mov faddl popf lods xchg cmp sub and mov jg mov pop shrb mov sahf jg cmp mov (bad) (bad) call xchg daa int sub test pop stos add fadd sahf pop push cmp push sub (bad) (bad) push imul fsubr loopne fiadd push sub (bad) js dec inc call (bad) ljmp inc push orl adc arpl add pop (bad) pop fxch aas mov or (bad) (bad) incl and and nop xchg les pop (bad) scas out test jl pop push push in out clc (bad) call fdivl jne js fdivs lret ds push lret movsl (bad) mov mov add (bad) stos movl sbb lods mov (bad) (bad) (bad) mov sbb mov lret aam (bad) icebp add (bad) fildll call clc out sbb scas rcll push xchg mov jbe cmpsl jne icebp aaa mov into mov mov nop or leave pop adc adc (bad) (bad) call mov leave xchg xchg mov pop cwtl jle ss bound cmp call mov mov jl jb lock push jnp inc and add test nop ljmp xchg (bad) decl in scas cli sbb pop jle lahf inc (bad) (bad) (bad) (bad) sti cwtl arpl fidivrl sub mov aas aaa call out (bad) insb arpl add lods add test inc push mov sub xor shrl scas call mov in jge mov add hlt stos in movsl fdivl fstpt mov movsb hlt pop loopne lcall push scas out dec add or mov cltd ja adc adc ljmp cltd pop push pop jo inc into mov mov aas xchg scas or aam mov dec aas jmp (bad) (bad) decl mov jbe outsl xchg call or (bad) or loope add jle negl cmp (bad) (bad) lcall jns xchg jno fcomps ret pop and cld xchg mov ja (bad) (bad) cmp into loope mov cltd loop pop xlat cmpb mov (bad) cmp mov lds cmc lcall mov incl (bad) (bad) (bad) jnp dec leave aas into cmp mov mov mov das xor (bad) int lock sub mov (bad) (bad) pushl fstl sbb inc loope orb jmp iret fsubrl rcll leave pop sar (bad) ljmp fnstcw scas insl push jbe,pt and pop fmull sbb push jge test iret xor (bad) jl ss rcll cmp inc xchg fwait aaa dec xchg (bad) scas and (bad) (bad) in inc test jne popf pusha inc and pushf mov mov cmpsl mov jbe ret or lret dec mov outsl call dec stos ljmp vmovdqa bound iret ret jl adc fs pusha scas popa pop (bad) fdivrl xchg fcoml push dec push cmpsb pop (bad) (bad) (bad) call mov test lock pop lahf divb imul in xor (bad) jmp mov mov xor rcrb push push iret movsb (bad) push pop (bad) movsb addr16 ljmp jl lahf or out cmpsb je cmp dec jp clc invd (bad) (bad) (bad) mov xchg and jmp bound andps push (bad) mul pop cmp (bad) (bad) call out cs cmpsl ret sbb enter rclb (bad) fsts negl lds mov mov imul mov lcall jmp je jl ret inc outsl push iret lods add nop scas mov push fwait (bad) mov rclb rcrl shll sbbl add or icebp out loope fistp mov stos dec in (bad) (bad) (bad) call xorl xor sub fmuls ja add int mov lock ljmp addr16 je cwtl sahf cwtl aaa lahf lret (bad) sbb dec add sub inc ret sbb (bad) (bad) (bad) (bad) mov push (bad) sahf sbb add mov sub cmp and (bad) (bad) (bad) push jnp loope,pt ror xchg pushw int3 jb stc and or bound dec iret inc mov (bad) (bad) pushl daa add push pop and rolb adc test popf add cmp mov jmp (bad) in lock dec rcr mov repnz nop adc loopne (bad) (bad) (bad) pushl sbb (bad) addr16 cwtl xchg inc dec aaa mov idivl notb stos dec scas jae jmp pop mov (bad) (bad) (bad) inc insb adc sub out ja rcrl xor cmp mov mov (bad) jg adc aam dec mov mov les xchg cli mov (bad) sbb ds sti in pop adc xchg arpl adc mov (bad) out xchg icebp mov mov out add push cld sbbl ja (bad) dec mov jne ret xor mov mov sub int3 cmp jl push std call (bad) test outsb mov push std loop dec add les push push or xchg outsb push cmp adc mov mov push js arpl dec mov daa daa jecxz xlat js scas mov das scas fimull andl in pop icebp decl mov int testb or in insb push jbe sbb aas call push inc add shrl add (bad) and pop (bad) jecxz dec cli (bad) (bad) (bad) inc and loop mov fldenv test sbb mov pop jno jp pop (bad) (bad) (bad) jmp jge test fimull sub loop sub sarl lods add inc sbb ss (bad) (bad) call xor cs mov xor mov sub mov mov (bad) (bad) (bad) lcall jns xor lock lea inc inc or (bad) (bad) decl ret movl imul in xor adc jecxz (bad) (bad) lcall fwait mov pop std push mov int3 push repnz ss int3 push mov loopne imul (bad) incl dec mov jmp aaa and hlt movsl pusha mov out lret cmp mov cld pop lds (bad) call insl scas cli cwtl sub stos repnz mov sub inc and pop (bad) (bad) cmp inc and jno int stos mov dec adc (bad) (bad) (bad) call dec inc repz cmovl mov xor aas jmp cmp mov nop (bad) (bad) (bad) pushl cmp adc lret fscale cmp sar pop add icebp add (bad) loope adc push jg sbb lret les or xchg aam sarb dec (bad) (bad) (bad) push adc mov fildl push fwait xchg ret or jmpw pushf test mov cmp pop xor (bad) incl mov push (bad) inc or arpl cmp or cmp push xchg mov (bad) (bad) mov stc sbb lods sbb jmp mulb add sbbb jg popf jg mov lock in je and scas jge (bad) (bad) lcall jl ljmp in inc aad popa xchg stc jle outsb dec xor pop mov in out (bad) decl arpl rep data16 outsl sbb in in mov clc call mov xor xchg xor ss adc rolb push loopne mov ja xlat jg iret stos mov out dec aas sti mov push clc aas pop push push xchg adc lds stos cwtl mov sti mov adc mov sub roll jnp pop mov and push push cmc sar jp pop fistp call xor ret mov or int shr ss or pusha pop push in add (bad) (bad) inc bound and lds add and mov sub nop or mov rorl (bad) (bad) jp test adc inc test int in inc sub outsl xor adc hlt pop cmc (bad) call ds in pushf subps dec lret sub outsb inc jge call aaa push (bad) jg (bad) fld push movsl stc test mov jmp xor inc push push jg (bad) pushl or clc and pop loopne push adc ljmp pop (bad) (bad) (bad) (bad) fsqrt push repnz push (bad) rorb add mov sub scas jno or scas and hlt (bad) ljmp jg push inc cltd das sub into inc adc cmp (bad) (bad) ljmp arpl adc (bad) push pop cmp inc inc faddl mov icebp push in mov mov (bad) (bad) jmp (bad) sbb jns pop rclb sbb jmp (bad) enter jg add cld pop sbb incl test popf or or pop hlt (bad) pushl lea sbb int3 and dec xchg popa or call jbe inc xchg push jmp loop in jnp mov pop cmpsb dec xor xor (bad) (bad) (bad) dec dec push pop xchg outsl popa jge leave lcall xchg ljmp ss arpl dec idiv (bad) (bad) jmp jl (bad) cmc jg xorl xchg faddp movsb (bad) fdivrs movzbl (bad) (bad) jmp loope sub xor inc scas and xor stos pop cmp hlt or (bad) (bad) mov iret adc cmc fisub adc push and (bad) (bad) (bad) decl jns or sbbl and xlat divb insb in xor mov (bad) lcall pop scas mov imul mov pusha mov mov sbb (bad) (bad) (bad) mov (bad) lret hlt sbb push cwtl cs push outsl inc xor imul add dec jge or (bad) (bad) mov dec je lahf mov lods es and pushl mov mov (bad) out sbb cmc push (bad) (bad) (bad) (bad) out push jmp xor test jbe mov mov int3 lods dec icebp (bad) jo xchg les lods (bad) (bad) (bad) (bad) sti arpl sub mov (bad) inc add ret ja je dec (bad) in (bad) (bad) (bad) mov mov imul negl xlat inc push push dec or (bad) (bad) (bad) pushl xchg mov inc jb pusha push movsb test lret fcmovne or and (bad) mov and rolb out test push cmp mov adc cmp sub data16 jg cmpsb pop lret mov fwait pop mov sub (bad) (bad) pushl pop rol insl fwait nop fs aad adc xor test test nop and push (bad) (bad) (bad) jmp xchg imul pop cs imul in add push mov (bad) (bad) jmp adc (bad) fisubr sub jge push push fwait and push add xorl (bad) incl lea int das arpl mov sarl loop (bad) (bad) (bad) mov pop sub jno sbb mov mov jecxz jo insl mov xchg int pop pop (bad) lcall dec mov out into inc cmpsl push cmp mov outsb mov pusha les inc add leave shr mov (bad) (bad) in divb lahf in shr or inc mov pop int3 sub (bad) in sub mov and xor in jmp mov xchg (bad) (bad) ljmp daa call out and hlt mov xchg and push cld enter jnp adc fcomip jmp pop fiaddl adc push dec scas lret std fnstcw pop rclb pop push pop (bad) and push ljmp lcall sbb nop dec test and mov mov lcall pop fwait in popa dec out dec mov or push dec fcoms rcl dec mov outsb je (bad) (bad) jmp jle outsb movsl addr16 inc es shlb test mov and pop push (bad) (bad) (bad) mov cmpb adc mov mov mov mov (bad) (bad) aas pop cmp mov lcall aad lret mov int (bad) loope sub mov dec and adc cmp xchg cmp mov sbb pop test xchg mov cld lahf jae mov sub (bad) sahf cmp mov (bad) jg dec or enter jnp xchg es mov loop lret inc inc inc lods (bad) (bad) (bad) call cltd sbb rclb jae cmc arpl icebp sbb add (bad) (bad) (bad) inc aam mov repz push sub and or mov outsb (bad) mov push test inc mov js mov adc in decl data16 or sti loop scas jns (bad) push sbb mov jo sbb (bad) (bad) (bad) ljmp lahf dec scas xorl or pop cmp je repnz jl push fstpl (bad) (bad) (bad) (bad) mov stc mov outsl sbb mov insl mov mov stos aam stos (bad) (bad) jmp sbb mov imul (bad) aad ret or ljmp dec sub andb xlat mov pop outsb mov sti and test (bad) (bad) decl std shl and inc add in into push and call jg es (bad) and jge sbb mov and cmpsl dec stc ret out cld mov packsswb mov jle push xlat pop push dec dec lea adc rorl int3 push nop lock jle lods (bad) movsb and pop mov adc fstp push sbb ret (bad) imul outsb sbb xor cmpsl stc sahf into adc fistp add pushf add in pop cld mov sub (bad) (bad) (bad) ljmp lock sar xor in mov call clc push jmp pop xor aad or dec ljmp gs (bad) pop sbb sub (bad) call inc lcall inc jne int jmp pop aaa imull out (bad) incl dec mov adc pop inc jo mov lahf jg lret jmp sub out xchg dec cwtl xor or push out push mov and fadd (bad) (bad) (bad) fstpt inc mov xchg jg mov push (bad) inc (bad) mov jg (bad) (bad) (bad) jmp dec popf push orl sbbl add clc popf les inc (bad) mov rorl add xchg (bad) (bad) decl push test insl and mov fildll (bad) mov jmp inc inc faddl push (bad) (bad) (bad) fistl js xchg test ljmp leave daa dec pop sbb lcall (bad) (bad) decl in jecxz in nop mov adc push add sbb push sahf add scas xor test push mov repnz fidivl (bad) (bad) (bad) decl bound imul outsb inc cli out cmp fs bound sbb ficom cmpsl (bad) (bad) (bad) pushl ljmp add rcll push daa push (bad) inc inc ljmp sar pop js out pop xchg call (bad) into (bad) pushf notl sub hlt fbld push fdivrl pusha xchg fstl (bad) fild lret jg and add pop adcb clc (bad) jg pop sbb push pop call sub loopne (bad) inc and mov loopne loopne (bad) bswap mov out add int3 mov fwait out mov (bad) (bad) (bad) clc xor push test push in movsl ja lea push ljmp dec (bad) lcall or sbb sub mov (bad) or lahf cmp test pop (bad) xor or lcall aam sbb (bad) repz push (bad) (bad) (bad) decl add lahf pop inc pusha add mov sub insb xor pop test pop and (bad) (bad) incl push push fwait arpl lret push push inc iret pop test (bad) outsl loope cmp aas xchg (bad) sbbl add mov test sub daa (bad) (bad) (bad) jmp push and scas and add insl (bad) les mov and sbb (bad) call cmp sbb imull jo cwtl xchg mov pop mov repz fisttp (bad) cli (bad) decl cmp adc mov sub lods int3 push cmp jo out cmpsb lock inc inc loope,pt sti stos (bad) out cmp lcall gs sub sub inc popf fmull loop (bad) ljmp inc inc out push mov es push xlat jge add addr16 jg decl fs das push (bad) scas mov (bad) out into mov aaa cld (bad) call sbbl (bad) and loop mov inc adc (bad) sbb dec cmp rorb insb pushf das mov sub push into xor xor sbb (bad) (bad) (bad) pushl or push dec jp jno cmp push or test das xor mov inc and jle push sbb es push mov xchg pop xchg lods insl (bad) call loopne clc out cwtl sub lods dec ss ficompl dec movsl push xor (bad) (bad) fmull lock push push jle mov push cli and repz pusha push cs cmp jno stos dec test nop clc test aam repz fdiv mov sti mov xchg call mov ja xchg out iret jl mov pop xor fcoms mov std out ss mov dec sti repnz pushl pop movsl adc aam xchg fisubl xorl xchg xchg cmpl inc mov or cmp cwtl adc scas push cmp (bad) fdivrl add dec sub cs or inc xor nop sub ljmp addr16 sub jg mov lds mov pop es (bad) (bad) jg mov stos mov jb fildl in sub mov sub (bad) (bad) (bad) ljmp pop mov lods jo mov frstor enter mov mov (bad) (bad) pushl push shrb lods jnp addr16 xor jo out push xchg inc test lods or (bad) (bad) ljmp mov adc mov cmpsl push orb sub xchg in je out fs dec daa sbb push (bad) (bad) mov sbb mov xchg sbb rcrl out lcall or cmp jp push push fsubl lods movsb test (bad) mov jp (bad) (bad) incl imul mov clc icebp je gs fsubr xor in push jns std loopne (bad) (bad) (bad) (bad) out daa lods (bad) sbb push aad in or shr loop adc ss mov ljmp lods ret jbe or xchg es mov pop dec ljmp mov pushf loop decl ficom (bad) xchg (bad) pop cld add push adc pop cli ljmp pop repnz adc sub in loopne (bad) jmp push js adc xchg data16 xchg adc xlat mov aaa popf imul push push mov stos xor mov dec out icebp jb sti lds cmp xor (bad) (bad) push test xchg daa test popa mov add adcl jl fdivrp jg incl flds fsubs fldcw jecxz movsl rcl pop mov mov (bad) (bad) decl icebp xlat cmc popf dec sub ljmp mov stos cmp mov (bad) (bad) jg roll jb inc and push jp jae jns mov xor xor xchg je (bad) (bad) cmp adc pop lds cmc adc mov es inc sub mov (bad) stos ljmp and pop sbb xchg test pushl pop push in mov movsb ljmp push lods aad test (bad) (bad) incl adcl lea sub and out add test (bad) (bad) (bad) lcall movsb out sub clc (bad) daa jmp mov pop add (bad) mov pop lods cwtl xchg pop cmp (bad) (bad) jmp cmp imul in rcrl xchg or jns mov mov jg lret movsb (bad) js pop pop add test xchg (bad) (bad) (bad) (bad) cmp fucomip imul shll test lret popa insl sarl divl push shrb (bad) (bad) incl mov dec xlat fisttp mov cmp es (bad) ljmp out pop mov push int push add push clc dec inc dec loope push out dec cltd and xchg fwait xor (bad) ljmp adc mov aaa lock fisub out jo xchg int3 jnp (bad) (bad) (bad) call mov es mov sub push mov push mov xchg push sbb ret push adc pop in cmp bound inc in icebp adc lods pop dec enter insl test mov (bad) (bad) (bad) jp xchg cmp mov sbb dec pop xchg neg cld adc out fimull sbb (bad) (bad) (bad) mov jb fldenv bsf cmpsl fs push (bad) dec test xor inc and pop fs cmpsl jg pop outsl enter gs jae repz icebp jge outsl test (bad) (bad) decl nop cli lcall or outsb xchg inc mov popa inc sub fisttpll cmp (bad) (bad) jmp sub test add dec enter push stos mov rcrl mov loopne pop mov xchg mov mov sbb ret mov jg push and or mov inc adc push cli cmpsl shr std ljmp shrb sahf pop pop test data16 xor ja mov lcall je icebp (bad) mov sub mov frstor not movsl jb add out push dec xchg sbb loop (bad) (bad) xor js mov add mov mov (bad) (bad) lcall dec push pushf jo mov sub and jo and mov fbld sub adc fsts loopne sar lock jecxz xor (bad) (bad) decl jbe push je out cmp xor jl adc call cmpsb cmp (bad) ljmp data16 icebp rclb into loop adc push lods movsl inc mov dec push popa pop adc (bad) (bad) (bad) dec or xor jecxz or push ret adc sarl mov xchg mov xchg mov or (bad) push push je add inc sbb mov sbb aaa push xchg lahf sahf hlt lock fcomip stos inc adc and xchg inc shl or fdivr pushf (bad) (bad) (bad) (bad) jmp add push out pushf aad push ret pop jne sbb jbe aaa lret inc fwait std cmpsl addr16 pop sub or cld mov sti jae and mov mov incl outsl in sbb xor sti lcall in adc mov mov out into (bad) cld ds (bad) (bad) (bad) incl cmp inc mov (bad) dec mov sub cmp pop fst ss out sti or (bad) (bad) lcall xchg jl lods popf movhps xor jmp and loope ret push lds pop xchg test (bad) (bad) ljmp sub cmp and and test mov fildll test inc mov sub jb mov (bad) (bad) (bad) (bad) mov test cmpl int3 test int3 pop pop add pushl add das (bad) mov imul shlb inc jecxz or sbb imul ljmp and mov pop inc xor pop dec cmp je imul scas push and loopne jg (bad) push and sahf push lahf and mov aas mov gs push stc shll (bad) (bad) dec jno mov mov push (bad) xor shrb fnstsw push movsl int xor lcall mov pop dec fcmovb push out ljmp cs or jl jo add mov std dec xchg fwait lea (bad) (bad) call push inc pop repnz or dec jb push or jg push mov add push adc or inc popa mov push cltd xchg sbb add (bad) jle int3 ret cld loop mov rclb xor dec test xchg (bad) cmp (bad) (bad) incl sti push and aaa int adc mov mov ja es pop aam leave pop cmp rcl mov arpl pushf out (bad) (bad) pushl aaa mov (bad) adc cld mov dec fnsave test xchg (bad) (bad) mov lds jp mov fcoml inc mov mov (bad) dec fbstp out dec pop aad jbe fistl rorl xor jo mov jg cld icebp (bad) incl add dec (bad) and cmc andl add pop lock mov pop sub push jns sar sti data16 movsb and push push dec (bad) (bad) (bad) inc inc popa or add xor imul std mov out sub xchg hlt (bad) (bad) (bad) jmp pusha jmp push pushf scas mov out pop stos mov into pop xchg leave inc push lret icebp mov (bad) (bad) (bad) jp add dec ds adc lcall lret imul add and mov jno adc (bad) (bad) decl cmpsl sti mov adc lods daa add fimull push sbb loop std add (bad) (bad) cmp mov lods mov sub fucomip (bad) (bad) ljmp push mov adc imul stc movsb (bad) mov jmp xor arpl mov hlt push jne test xor (bad) (bad) (bad) cmp cmp cmpsl imul jge cmp pop dec (bad) mov jne ret shrb int3 xchg cmp adc lods and inc adc mov cmp popf enter mov xor movsl push mov xchg je adc out mov adc cmpl ljmp dec pop daa pop cmc mov addr16 sbb insl test and cmpb aas jle and xor (bad) (bad) incl sub fiadd (bad) imul mov and or jmp (bad) sub xchg lods pop sbb push xorl inc (bad) lcall (bad) js add push sti je pushf mov mov sub adc psubd pop adc popf mov std shlb (bad) lcall jnp ljmp xor push xorb (bad) mov push lds insb adc ja dec jb fdivrs aaa and test pop (bad) (bad) (bad) call xchg int3 divb int lret call enter pop and cmp push xchg adc (bad) (bad) (bad) decl cmp into xlat dec xor mul xlat sti cli insb mov and cmpb repz xor test lods int3 aad aam mov jmp add daa jge mov sbb cmp mov aam cmp rcrl iret mov (bad) (bad) (bad) (bad) (bad) sbb pop jge outsb mov pop fstl lahf (bad) jecxz je mov jecxz pop cwtl (bad) (bad) (bad) (bad) mov push popf js rol jnp mov scas mov adc inc mov jge (bad) (bad) jg cmc mov hlt fnsave (bad) mov adc sbb jns ja mov jg jl ret adc jg mov (bad) ljmp push push imul movsb hlt (bad) cmp hlt inc (bad) xchg cli cld pushl or jb lods pop add dec scas inc jno adc (bad) (bad) call mov out jmp jo insb mov addb sti and ret (bad) dec fildll sub stc mov stos pop movsl xchg mov (bad) sbb xchg ret pop (bad) fildll xchg gs sbb dec push mov popf (bad) (bad) (bad) ljmp pop aad and lahf cld mov outsl addr16 add cmp adcl inc test jge (bad) (bad) pushl ds insb sbb lock cmp popa insl mov pop movsl add (bad) (bad) mov xchg lret mov sbb outsb fdivr pop add dec cmpsl xchg aam (bad) (bad) ljmp push mov lcall push mov mov add mov and pop push addb stos or or (bad) lcall sub push sub test movsl xchg or pop xchg sti pop (bad) (bad) (bad) ljmp rolb bound pop addr16 xchg sbb scas lahf mov (bad) cld cmpsl pop pop jmp dec nop dec fmuls (bad) pushl cld jnp dec cmp aaa cli pop or (bad) sbb shr mov (bad) or add rorb push inc add imul (bad) (bad) (bad) fistp push sbbl adc sub lcall (bad) (bad) (bad) lcall mov mov ds arpl push (bad) fcmovnbe add push jb push test or (bad) (bad) (bad) jl jge test out cmp out or xchg enter ret ds lret sbb loope pushl or push popa dec aam movswl push dec cli pushf xchg fstpl idiv (bad) (bad) decl inc (bad) out cmpl xchg stc jge ret ds rolb mov pop lock lock dec jo (bad) jmp xor inc fisub xor add cmp (bad) jg (bad) cmp sbb adc jg xchg xchg nop mov sti xchg enter add pop xchg icebp xchg push dec push xor test (bad) (bad) decl xor fdiv mov sub jp ret xor adc mov lcall xor sbb in push (bad) (bad) (bad) (bad) call fwait in aaa nop lret cmp push xlat sub or pusha call stos sahf testb jmp add push xchg push mov repnz cmpb pushl clc (bad) add data16 in nop and add jmp mov rclb in mov insl ret pop loopne push jp xchg sub stos fild sarb (bad) (bad) lcall out mov mov imul jbe mov popf test xchg (bad) (bad) (bad) (bad) decl sahf test mov in les push lret lret pusha sbb lret jle mov (bad) (bad) (bad) stc mov (bad) mov fs scas and loopne mov aas xchg dec jge dec outsb outsl fbstp (bad) jmp rol xchg push mov rorb sbb call rorb fldpi popa sub (bad) pushl std sbb into mov jns addl sarl cmp dec inc test jle stos or (bad) cmp xchg sti sub xchg xchg xlat rcrb (bad) (bad) decl decl add mov in int sub xor jo jno rorb pop lock cmp jne sahf fmull repnz mov jmp int3 cmp and add push xor setl and data16 pop mov xchg push cld (bad) (bad) out mov add cmp test jge or fsubs inc cmpsb (bad) (bad) (bad) incl lds lea loop pop dec adc js gs xchg (bad) (bad) (bad) ljmp dec fdivs rcl jno mov mov fldt lahf jo sub (bad) mov or add push movsl adc cmc pop inc mov je dec mov mov mov push pop std sbb aad stc xchg push sub (bad) (bad) pushl pop and scas in fwait and in lea cmp xor ds movsl in pushl add ficomp rolb mov rcrl mov ret out mov js adc jmp push push sub sbb inc sbb adc mov inc (bad) (bad) (bad) ljmp dec fadd jae,pt psrlq stc out sbb sub or daa mov (bad) lcall mov les mov xor cmp sbb (bad) (bad) pushl xchg mov fs test in xchg xor (bad) leave pop (bad) jecxz (bad) jmp in jo aas xchg xlat rorb loope and mov jg (bad) mov insl (bad) xor inc lret mov lea (bad) fldl jmp je sub (bad) jb push lcall xor pop sti dec (bad) decl mov xchg inc out push out in mov stos (bad) (bad) jmp mov lods es mov xchg mov fsubl cmp mov add (bad) (bad) call fwait adc xor ljmp imul mov push cltd adc or xchg adc js and movsb cmp hlt sti cmpb ljmp imul cmp (bad) (bad) lcall gs dec aaa stos xor pop fs push call jg lcall bound dec or lds sbb (bad) cmpsb frstor cmp xchg or (bad) (bad) ljmp in or fildll jno fcoms (bad) stos test (bad) (bad) dec sbb cmp xor jge fstpl xchg lret pop or mov incl lea daa cmpsl mov outsl ds and push push xor push cmp add lahf adc hlt (bad) (bad) (bad) dec xor push mov jnp adc mov imul mov subl (bad) mov outsb cmp aam cmpsb pop mov es xchg inc mov pop or (bad) (bad) decl iret lock iret mov add sbb lret (bad) (bad) (bad) (bad) fildll push sbb mov rcll pop popa icebp cmp pushl cltd pop fsts xchg fsub test out xor sarl mov sub xor (bad) mov cltd push mov daa jb dec add (bad) (bad) decl ja sbb lds push (bad) stc jg jnp aad loop add incl xor (bad) orb ds jecxz cmp fs cwtl clc push sub (bad) fistpll das and cli out mov fimull scas push adc mov sub dec rclb pushl out pop lcall call addr16 xchg mov mov add (bad) (bad) mov or idivl sbb fstl or cmpsl adc jb (bad) (bad) (bad) call pop jle push idivb push add jp ret outsl and movsl xchg test cmp sbb xor ds (bad) xor xchg jo out stos pop cld (bad) pushl movsl test nop push push sub in jmp lret (bad) (bad) call or push je fisttpl lcall cli incl arpl jmp mov jno inc xor repnz add in in mov (bad) (bad) (bad) incl dec adc xor cmp lods jno int movsb inc adc pop cwtl lods daa les add andl mov (bad) ljmp push es mov adc stos repz iret (bad) call stos pop add inc leave (bad) in jnp sbb adc ljmp adc push loopne inc pop iret jo push pop or cs ja sub or cli (bad) (bad) ljmp lcall in pop test mov push jge cmp add pushf mov or hlt shlb adc (bad) (bad) cmp mov clc pushf cmpsl shl mov jmp mov enter push fwait rolb add inc std sbb (bad) (bad) inc loope decl mov mov mov outsb adc scas add cmp decl mov xchg (bad) fldcw push jl (bad) les das loope pop mov aaa gs mov int sub cmp fistp fs (bad) (bad) jg jno adc push mov fisubr fbld mov insb dec gs pop mov (bad) stos pop push push loop adc call loopne insb cmc pop pop or lods ret jne outsl lds push mov idiv cmp pop cmpsl popf push cmp push sub dec cld cltd xchg std ja push popa inc popa and pop pop (bad) (bad) pushl shlb cmpsb push lock fldl arpl xor mov mov arpl pop in (bad) (bad) ljmp ds in int adc mov cli ret in and out dec inc repnz jne (bad) (bad) (bad) ljmp jl ss mov mov mov or imul in xchg sbb shll (bad) mov js lea xchg dec repz mov jge hlt shrl jecxz add pusha lcall or (bad) ja mov ret jmp test mov xor sub out adc mov add (bad) incl jg scas notl subb stc dec daa inc outsl sbb sbb gs scas cmp imul iret jae push mov repz mov test js xchg in (bad) rolb (bad) (bad) decl rorl cmp inc push pop push lret pop mov mov xchg call cld (bad) ds xchg mov lret adc add lret pop int ja (bad) (bad) inc adc push inc push leave mov jns sbb xchg and xchg (bad) (bad) incl out push ja cmp in pop jle jbe lahf jl mov xchg mov mov cmp (bad) call pop sbb mov add jae aam jnp add in xchg fbld popf (bad) (bad) sub adc (bad) (bad) (bad) ljmp or push js sbb xor cmc dec mov flds in push loopne ss loop (bad) ljmp iret xchg mov test (bad) ljmp fisub push outsl scas inc mov jmp cmc call (bad) (bad) jg les aaa xor vshufps lret mov adc (bad) lcall fcos lock clc data16 sub mov fs into std outsl or dec xchg or call inc cwtl je xlat inc add ds cmc mov loop dec popf test cs sahf ret stos sbb aaa fadd lcall push in (bad) call (bad) jg (bad) stos outsb test mov xchg xchg sbb adc lret mov (bad) inc sub clc adc fwait inc or stos and mov shlb and xchg ja (bad) (bad) push push imul test jns jmp mov inc lea push cld shl popf mov push std ljmp xor push lcall xor pushf pop jb mov cmp (bad) (bad) (bad) call push (bad) hlt xchg pop adc fisubrl test add sub (bad) (bad) (bad) ljmp daa inc jbe mov (bad) xlat (bad) out ds sbb cmp cmc outsl das sbb (bad) (bad) dec xchg add or arpl cmp sarb fstpt mov mov cwtl and outsb lods les push jmp (bad) push or cmpsb jne push dec push iret fwait lock pushf insb mov fidivl cld loope inc xchg cmp mov push push adc imul cld sub call push int3 xchg dec test (bad) cld cmp rcll adc (bad) incl incl (bad) (bad) sbb test push xor xor mov mov adc pushf ljmp jle sti lret lods cwtl push imul ffree inc js or (bad) call inc dec (bad) mov lahf xchg and sbb icebp cmpsl repz add push or cld (bad) stc (bad) fisttp pop xor push (bad) mov (bad) ret xor mov (bad) (bad) call pusha lret sbb cmc pusha mov into jmp mov ret sahf mov push int3 leave movsl (bad) (bad) decl out imul lcall sub adc and lahf imul dec fidivrl test incl or sbb shrl cmp xor loope (bad) decl jp sbb and mov int3 imul pop jbe (bad) (bad) (bad) mov cmp std enter mov xchg jge mov xchg cmp fs (bad) (bad) (bad) call jg sbb cmpsb xchg shrl adc dec repnz add push mov mov fisttp ljmp jbe jg aad mov dec or aam enter rorl sahf adc mov pop push sarl cmpsb cmpsl cmp outsb xchg sub je fidiv movsb and cltd addr16 add ljmp arpl or sub sti mov xchg push leave pop cltd (bad) ja (bad) decl rcrb cs mov sahf pusha adc pop pop adc (bad) (bad) pushl adc and cmpsb lret lods loope loopne fs mov ljmp ret jmp ja fsts xor das cmp adc or mov popa add in in cmp sbb dec cmp iret fs (bad) (bad) incl mov mov sbb aaa addb inc mov xchg mov aaa (bad) (bad) (bad) (bad) (bad) mov in jae int3 lods data16 mov pop hlt fnstenv mov (bad) (bad) (bad) jmp out enter or shrb adc scas push xor imul pop mov (bad) call mov jns xor pop or js sub addr16 mov rcrl decl ss adc (bad) call mov mov lcall decl xchg sub gs push or popf xor push int3 imulb bound add (bad) incl mov dec or mov loopne jns cmpb jmp fldl aaa pop test out std ja jge imul rcrl daa mov add (bad) (bad) (bad) call dec fcoml push popf push mov sub (bad) ror fwait decb sub loopne push bound data16 or inc in lods nop fs xor push jae mov push or add leave xlat mov and repnz jmp push rorl clc aam mov xchg jg enter xchg int3 lret movsl test lcall shrl sub (bad) mov mov (bad) lcall ret jge pop jne int3 pop or add lock (bad) pushl outsb add popf mov sbb add jp xor and lock cmpsb out sub sbb arpl dec push mov and dec into leave and sub ljmp lock inc enter mov (bad) incl hlt sahf inc xchg push test mov inc inc mov (bad) (bad) decl clc sbb push mov test into mov mov (bad) (bad) xchg add sub (bad) mov adc push adc jp rclb sti imul cmpsb (bad) (bad) aad cld in pop jge dec push cltd or mov (bad) dec cltd (bad) ljmp pop mov push ret mov xor mov and (bad) (bad) pushl mov inc jmp push adc sub rcll rol cmp push jnp (bad) (bad) pushl sbb (bad) ret sbb lods dec out add push (bad) int xchg test (bad) (bad) (bad) jmp jb or jae ja inc ljmp sbb (bad) or (bad) (bad) inc cmpsl or push adc xchg repnz dec das sub mov dec push xchg stc shl (bad) decl sbb (bad) enter (bad) fcomip outsl xchg xor sahf xor popa lahf xor mov outsl stos jecxz cmpb and mov arpl (bad) (bad) call dec jne push jecxz in adc mov adc in popa fcompl push inc (bad) (bad) mov les mov mov pop scas xchg rcll pmaxsw pop loope (bad) (bad) incl xchg test lods rorb lea mov xchg lods hlt or mov (bad) out vcvtsd2ss (bad) (bad) (bad) call pop out add push mov xlat lar push mov and dec lea setbe loope ljmp lea sub push cmp insl pop (bad) jle xor ds fwait or cli sahf je insb push out loopne pusha dec insb or sbb lds hlt xor mov add sbb adc addl jb test ljmp add cmpsl mov popf push dec aam (bad) decl gs fs mov scas add fldlg2 sar lcall or sub lret insl or sub sahf sbb cmp (bad) (bad) lcall xchg in pop mov arpl pop or cmp or xor out loope cmp pushf (bad) (bad) (bad) decl gs popf dec jne pop fwait push fsubl jnp mov roll mov (bad) lcall xchg mov daa repnz and roll (bad) (bad) (bad) mov xchg pushf pcmpgtw inc in loop fucomip leave ror rorb loopne aad push dec sbb push (bad) (bad) (bad) (bad) fsubrs cs sarl ret pop cmp mov lcall (bad) test jle fcomip (bad) call pushf sar cmpsb and sbb mov nop (bad) push js ljmp (bad) call movsl add fistl inc out in fsqrt enter mov loopne jmp cmp aam and in jno das lods inc mov mov neg push rcr cmc (bad) call or sbb enter ss popa or jg jl mov rorb shlb popf adc pop xchg lahf addr16 xchg loope ja sbb ret xchg ja (bad) (bad) mov jnp hlt fdivp lods inc das sahf adc jl add xor inc add (bad) (bad) (bad) jmp and insl sti inc push jg dec mov ljmp xchg ret and sar jnp jne gs push push xor inc mov xchg jb mov mov lcall pusha xchg fdivp (bad) jb scas loopne jb adc dec in imul hlt (bad) (bad) jmp push sbb imull ljmp add (bad) ljmp clc (bad) pop iret test and fstl cltd movsb repnz jg (bad) (bad) dec outsl pushf mov inc mov xlat or incb push mov mov fimull (bad) (bad) jmp cld cmp mov (bad) and je mov or push inc repnz cmpsb push inc and jg incl arpl push pop (bad) jl push and aas in cs out xchg push ss aaa fst xchg jg hlt (bad) cli fisttpl dec inc adc mov rcrl iret mov push sarl daa fs cmp arpl pusha cltd in lods xor push and (bad) (bad) decl pop fistp adc ds mov push je sbb pop sub sub cmpsl mov jmp xlat popf pop fldenv imul jnp add mov (bad) (bad) cmp cltd push rorl imul mov mov cmp gs fnstcw adcl fsubs out mov dec sbb mov xchg (bad) call (bad) lcall insb push push iret hlt testl dec cmpl fnsave iret mov xor flds sahf adc enter aaa repnz mov (bad) (bad) (bad) jmp xor inc mov pop scas out pop push add pop ss xor (bad) call int3 loope in cmc sbbb rol or xchg jmp and xchg (bad) (bad) (bad) dec bound cmp fucomi pop dec lahf (bad) cmpsl xchg pop mov (bad) cli xchg shr push pop les stos mov (bad) (bad) decl ficompl clc bound les dec icebp call lods push faddl (bad) (bad) incl insl (bad) daa mov xor pop repz lods jp lods mov and adc jne and mov pop mov cltd cmpsb and std (bad) (bad) mov dec pop mov test loopne mov jle mov outsl movsl push push pop add ja in sbb and mov (bad) jmp std add cld mov xor xor fcmovnb or mov add pop arpl fcmovne fidiv iret rorl stos mov (bad) lcall lock negb decb cs xor dec sub icebp cwtl loopne ret dec out leave cli (bad) (bad) call out test int pushf dec imul inc mov dec inc lods sbb lcall loopne mov mov pop push mov cmc movsb xor lds mov pop jo pop or (bad) (bad) (bad) (bad) cmp outsb dec sbb imul xor mov xor movsb pop int3 and sub sub aas loopne (bad) (bad) (bad) ljmp xchg fldt jmp insw icebp mov ret push cwtl mov fabs jo add (bad) mov fsubs bound outsb dec inc or cmp add int3 fnstsw cmp jno push dec movswl add xor rcl int3 int xchg scas (bad) ljmp div pop fildll mov push push mov sub std push (bad) (bad) jg fwait push jb in push in stos sbb imul repz ss cld scas cli ljmp fucom push je jmp (bad) clts lods lds stos daa popf (bad) (bad) pushl fs pop sti jbe jnp adc jns xchg in or icebp xor pushl jo and or scas adc mov dec jmp lahf movsl loope xchg push nop dec dec outsb lods add or (bad) (bad) jmp test inc and inc test cmc adc push movsb scas movsl scas inc sbb dec incl dec out lret push jae mov dec mov (bad) and sub xor pushl fnsave pop pop mov pop push (bad) xlat add mov lcall mov and (bad) (bad) (bad) decl xorl and xchg test and fcoml xchg mov movsb mov movsb out cmp (bad) (bad) inc and mov (bad) ret cmp nop pop inc lret sbb (bad) imul and (bad) stos inc and adc push ja stos clc (bad) incl mov jns rorl into dec (bad) test hlt add (bad) enter sti mov popf mov push cmp add fxch sub (bad) jmp pop insb lods mov cld ja loop enter (bad) fistpll cs dec cmpsb sbb cmpsl sarb sti push pusha and mov sbb js mov cld arpl pop (bad) ljmp inc insb xchg mov ljmp mov rcrl pop sahf (bad) mov hlt or cmpsb (bad) (bad) cld (bad) (bad) (bad) inc push js (bad) fcmovnu jns sub mov pop nop push shrb jl divl sub push (bad) (bad) (bad) push or jne (bad) cld mov in (bad) repz fmul (bad) fcomi lcall popa cli (bad) decl (bad) adc (bad) ljmp loopne and (bad) (bad) fist and stos lock rcrl push or jg sbb mov (bad) call and adc repnz adc fist lcall adc (bad) (bad) lcall pop adc fistpll lods mov adcl and pushf or (bad) (bad) call jg or inc jecxz out xchg push outsb jae cmp push das mov pop test cltd into mov xor cmp jo and ljmp mov xchg xchg cli add mov movsb test and lods jmp incl loopne and test ror bnd adc (bad) jg and jle fwait bound fcoml or out adc jne lock (bad) (bad) mov mov fs aas sub xchg and movsb leave jecxz or jl (bad) dec push cmc daa (bad) (bad) lcall push hlt idiv mov jnp sarb push sub sbb jmp dec cli and (bad) (bad) ljmp mov and in rcrl pop push xchg out lcall xor (bad) (bad) (bad) mov aam mov aaa lcall mov and test (bad) lcall std rorl repnz (bad) int xlat add sahf cmp fist jo roll push adc (bad) (bad) (bad) incl (bad) in fstpt or sub ljmp push and jae orl clc outsb fisttpll stos insb ficomp lahf xchg test and mov mov out push push xchg repz (bad) (bad) jmp jno pusha shlb pop jmp sahf sub ret (bad) cmp stc mov mov (bad) pushl adc fiaddl jg call push ret (bad) fisttp std add pop sbb xchg ds cwtl in inc fdivr aad icebp sbb (bad) std mov leave or fwait jg and (bad) add push mov sbb xchg (bad) (bad) call mov mov cli dec push insb imul push loop push add or nop pushl jmp add cs stc imul sti lcall mov (bad) (bad) (bad) dec cs loope xor or int push push out pop ja lea sub dec push fcomi arpl cwtl mov pop add call daa es mov inc cmp in out std jne pop inc test fwait xchg lahf roll (bad) (bad) ljmp inc and mov cltd dec cwtl std xchg pop mov outsb icebp (bad) (bad) ljmp ds cltd sbb aad adc and clc es and pop xor sbb jb dec (bad) (bad) cmp pop adc cmpsb pushf mov (bad) popf mov sbb mov adc ljmp jbe std je jmp fadd pop cmpsl lcall scas sahf into icebp bound idiv (bad) (bad) pushl (bad) jne insb ja mov add cmp lods xchg sbb pop fadds sti (bad) call sub insb mov jnp adc xchg test fsubp sub dec lret jg mov push ficomp add and (bad) (bad) lcall out pop shlb adc or lahf pop lret jb (bad) cmc scas ds xor cmc inc sbb inc (bad) (bad) (bad) ljmp stc cmpsb addl add inc xlat mov mov pop jb pop pop (bad) aas dec jge dec std decl lea out fidiv fistl xchg mov (bad) (bad) jg mov sub pop repnz fnstsw arpl xor push or lods pop clc cwtl setbe (bad) (bad) lcall and add fs rcrb popf fildll sub jg dec popl xchg inc push fcmovnu das sar cmpl aam lcall xchg fdiv pop in fdivr (bad) (bad) (bad) jns or push lock mov lahf pcmpgtd scas mov fisubr push and jl push cltd adc dec in iret popl adc inc fnstsw stc sub (bad) xor lea daa inc mov cltd pop fidivrl ds flds repnz addr16 (bad) (bad) (bad) jmp fsubrl out mov imul in xchg (bad) test pop mov push fs sub (bad) cld mov and cmc push out mov xchg lods stc mov icebp das sub (bad) (bad) (bad) (bad) aad add (bad) xlat mov push adc xchg daa sbb ficompl cmp mov or icebp or pop add dec xor cli xchg repnz mov aas lss (bad) (bad) (bad) decb mov mov add push push mov test and dec mov lret (bad) outsl cli fcomip lahf subl es ljmp mov (bad) inc mov fistp inc out xor mov incb es sahf es test das inc pop sub xchg pop sub out andl mov jns inc ret sub (bad) (bad) pushl or push (bad) jle cmp pusha fsubrl mov ss test (bad) or lcall std jae sbb scas shlb aas call mov mov bound fist outsl ss inc adc jo sbb pop sahf fcomip lcall pop mov pop lret or push push enter mov imul dec rclb stc cwtl aad push cltd repz out movsl pop xchg loopne mov addl mov mov icebp mov (bad) pushl ja les adc mov xchg lret push sbb (bad) (bad) (bad) push in xor sbb mov push cmp pop and loopne pop xchg insl cmpsl mov sub (bad) (bad) call jmp test int aad and xchg sbbl ficom mov fsubl jle (bad) (bad) (bad) fldt sub xchg xchg mov xor cmpsb push pop ret add (bad) mov ret inc mov mov in ja loopne cwtl addr16 jb (bad) (bad) (bad) (bad) fisub push fwait jb fstpl adc add out lahf xchg pop adc mov xchg mov (bad) (bad) (bad) cli (bad) and lret pushf jmp lcall pop into jl sbb push (bad) stc nop ja (bad) or (bad) (bad) (bad) (bad) push test mov dec ficompl xchg mov scas cmpb cmpsl mov (bad) (bad) (bad) call push fistp pushf imul cli pop (bad) mov sti (bad) and roll repz pusha das pop add lcall push lods je cld mov jne mov cmpsb sbb (bad) add (bad) jns adc mov jle (bad) into repnz (bad) (bad) (bad) (bad) mov dec inc scas divb das dec mov push sbb dec daa aas out sbb fbld outsl adc (bad) ljmp push add cmpsb (bad) incl je in xchg aas xchg pop xchg (bad) outsb xor jb pop sub loopne nop mov jmp scas orl loopne lock fisubr adc jo push jno xchg ss cmpsl and xchg lds pushf bound scas movsb hlt lret cld sub ds add pop adc adc pop dec add test jo push mov pop (bad) lcall add outsl xchg add and jl test (bad) pop jbe (bad) (bad) (bad) jmp jbe dec and mov add mov fstl push (bad) pushf fimull and (bad) bound jmp mov lods push cmpsb fistpl cmp pushl mov aaa das ror add and out cli (bad) (bad) lcall jp lret lds pop stos sbb mov pop lods rcll jl sbb into sbb (bad) (bad) pushl mov int3 adc jbe dec mov cltd mov add add (bad) outsl clc (bad) lcall push or xchg sarb out adc in dec lahf (bad) fild or sub sbb lret cmc (bad) (bad) lcall pop jnp inc iret lds push repz movsb cmp mov incl inc xlat inc dec inc ss cs add jb dec pop lret mov inc add (bad) (bad) pushl lahf pop push or pop add jo mov xchg pop jae lcall es (bad) (bad) (bad) ljmp adc adc shrl or push inc push pushf push cmpsb xor mov mov loope (bad) lcall xchg (bad) xor imul xlat (bad) xor lock pop pop test ds or (bad) aaa pop dec dec or lcall call in mov rclb cmp mov dec (bad) rorl ja mov lds dec mov loopne enter pop jne mov jp add fwait mov stc jo xchg xor (bad) lcall sbb pop pushf lock push test inc jecxz gs pop or (bad) ja and jmp clc test test adc in arpl sarb mov sbb adc out xlat call sub (bad) mov call mov icebp cmc and or jo rcll outsl sbb repnz (bad) dec clc ja cmc pop mov leave mulb pop mov clc pop lret movsb shl and testb inc pop lods xor nop (bad) (bad) (bad) ljmp dec sbb mov jmp (bad) cmc xchg in jb inc (bad) mov mov decl sbb imul mov pop loopne insl push ds shrl out sbb mov (bad) decl mov and sahf xor xchg inc lcall jmp jns dec dec cmp or pusha jp add xchg imul sti imul fwait inc and and and sbb sub inc inc mov (bad) ljmp cwtl hlt (bad) mov test xchg add cmpsb mov (bad) decl es movsb sbb int3 push sti aas in call cmc (bad) adc and mov stos add (bad) jl dec jns xchg or and pop xchg xchg cmp imul add add pushl xor jnp add ds dec sarb loope lock sar (bad) ljmp and sarl xlat shll scas mov jmp mov jecxz add push mov loope cltd in cmp scas xor (bad) incl and jl mov faddl sbb hlt hlt leave mov jge and mov (bad) (bad) (bad) (bad) (bad) push loop jo sti inc ss daa dec scas inc mov and mov pop test pop bound (bad) (bad) jmp xchg test and mov stc mov push adc (bad) decl aam cld ficom cmp push dec repz inc mov int add (bad) (bad) (bad) inc add repnz pop push mov inc imul or sti pop dec pusha (bad) mov mov mov mov in or push push aam xor mov jp sub (bad) (bad) (bad) pushl push out jp repz push mov ds add lea bound jmp clc (bad) jmp adc cli hlt bound sahf push pop negl mov lret (bad) idivl sub loope xchg cmp int3 arpl cmp cmp cwtl and push (bad) (bad) (bad) decl lods push mov jae add cmpsl je mov faddl or adc (bad) push mov mov inc dec (bad) insl push leave jno ret addr16 ds dec lret mov idiv xchg xor (bad) (bad) call insl pop sti xchg xor es mov roll pop pop mov movswl mov lods cmp lods (bad) (bad) (bad) jmp hlt frstor js movsl add sbb xor push repnz dec push xchg xchg sbb mov or (bad) clc nop pusha xchg int3 movsl mov dec cmc mov sub int inc adc jns pop insb ljmp sbbl sub stos xor ja,pn mov mov out add cld (bad) (bad) ljmp in mov inc and sbb rorb xchg loopne cmc repnz xor push xor out mull pop push incb adc outsl jmp mov jmp (bad) es cltd pop test daa xor adc (bad) (bad) ljmp jl (bad) mov das xlat stc idivl xor aam and insl push or lret aad (bad) jg decl test and in cwtl lds mulb inc or sbb (bad) (bad) call push adc jnp push lcall (bad) inc fucomi test shll cmp clc (bad) (bad) jg and lods cmp pop popl jns or test iret jp,pt insl inc add mov ds je ror push outsl sti pop or (bad) jmp bound jae into lret mov frstor lock int outsl push scas int3 lea rorb sar stos decl xor inc cmp mov cmpsb lret leave cmp push (bad) (bad) (bad) lcall mov rcrl push rol mov jb jnp ss xlat sahf movsl das clc (bad) pushl xchg test (bad) ror cmp cmc loop js jle insb inc push adc adc lahf fisttpl mov ficom cmp and and pop cmpb mov mov js (bad) (bad) ljmp mov test lcall dec or inc sbb data16 dec in sbb jmp mov pop jns xlat jmp add mov or (bad) lcall aas rcrl rcrl movsb or cmpsb (bad) sub dec xor outsb cmpsl sahf xchg (bad) decl sbb into rcrb xchg push mov adc (bad) incl pop out fisub jb or dec and roll fidivl inc jg (bad) lcall out mov xor jmp movsl pop sub repz pusha or (bad) cld clc mov aaa mov in fcmovbe and jp lahf mov hlt iret cmovbe cmp (bad) loopne jns and incl sahf test xlat fidivrl mov mov icebp outsb add cmc (bad) jg sbb inc stc push mov pop sarb add cmp xorb mov and mov mov inc lods push int3 dec imul add jmp (bad) (bad) (bad) ljmp or insb cld fs xchg into push pop add out jp ljmp mov or and (bad) (bad) (bad) lcall ljmp xchg sbb andl xor in xchg aam das fisub jne jmp aad (bad) (bad) (bad) lcall jle xchg mov adc inc shr sub jle sub jl and (bad) ljmp bound mov jmp pop in imul pop mov (bad) (bad) (bad) pushl lea es mov jge sbb mov pop fwait sub es and lcall xchg sbb pop rol ret (bad) xchg sbb popa cmpl (bad) incl and sub js xor cmpsl xchg mov arpl cmpsb and adc xor mov xchg call add sbb aam and (bad) (bad) out cmpsb lret inc pop mov ffree movsl bound adc and fnop sarl lock (bad) pop lret xchg mov cmc addr16 cmp movsb xor cmp outsl clc call push mov aaa dec mov int3 mov fbstp push cli (bad) (bad) jmp adc adc mov cmp xor sub sub xor or (bad) jg push repz jb sub mov xor (bad) (bad) (bad) lcall scas adc sub and fcmove (bad) cmpsl mov (bad) pushl std cmp loopne,pn and mov push adc fstp inc (bad) stc sbb fisubl ljmp sar (bad) sbb lea dec mov aad mov and push dec (bad) (bad) lcall mov inc pusha xchg into dec aaa jae mull (bad) xchg test push fs cli pop sub in dec rclb in pop enter call cmp fbstp mov and dec push add push lret jl ficom push aaa ret rcrb scas mov rorb or ljmp push cs xchg das mov rcrb insl loopne mov ljmp in ljmp cs loop pop addr16 rcl adc (bad) call xor bnd divl mov pop sbb jmp stos mov add (bad) (bad) mov ret mov stos push inc cltd jae lret mov es (bad) call mov enter cli lret aaa xchg les lds scas lods mov (bad) jbe shrb aad shll mov int push call loopne rorb pop cs in xor (bad) out jbe and ficompl or (bad) or lock pop cwtl imull fisubl mov mov pop mov (bad) (bad) lcall lret shl inc bound mov jno fsubs out out cmp rorl (bad) call jmp push sbb push add jge push add incl or lahf sbb add pop movsb mov lock pop mov push xchg xor je aam jnp pop sbb (bad) cmpsl sub inc dec pop hlt (bad) (bad) incl ret out mov int mov xor ds dec adc pop out outsl int mov popf xor cmp lahf in arpl dec test repz ljmp mov dec push lret sahf loopne mov in push xchg cs ret bound mov ja xor lods mov xchg (bad) (bad) (bad) pushl mov out daa dec push notl sub pusha pushf lahf and sti adc or shll sarb bound or jae push cmp (bad) (bad) call subb mov push mov fimul decb icebp jge (bad) jg (bad) cmp jg lahf xor aas push mov (bad) ret (bad) jg addb xor (bad) int rcll cli (bad) (bad) (bad) jg shr scas cmpsl lret sub sarb cmp imul mov out fwait mov (bad) call cmp loop push jecxz call call loope int3 dec or movsb (bad) (bad) (bad) jmp xor adc jo test cmpsb xchg mov ror cmp mov (bad) mov (bad) cmp inc (bad) (bad) (bad) (bad) incl cmc jg aam lock mov add int3 xchg jnp div cmc sti cld sub pop add jmp add or dec addr16 jle mov out cli pop mov cmp push mov jno outsl jno (bad) jg decl fs push adc iret pop cmp and (bad) jmp push enter xchg mov fs inc pop or imul pop and pop ret (bad) (bad) (bad) incl loope wrmsr sbb mov add std push nop icebp push (bad) dec stc je fs cs adc cmp loop call pop or push iret and jg jae pop pop mov lds push sub mov inc lret inc lods gs cmc mov mov sub (bad) call cld aam repnz loop ljmp xor jbe ds (bad) lcall adc pop cli cmp cltd test js pop out adc mov (bad) (bad) decl repz (bad) add inc sub mov xor roll adc in mov lods jo clc pusha jle test mov cmpsb mov (bad) jmp cld sub xchg adc movsb aas cmp nop adc (bad) mov mov in adc sub jg inc xchg pop sub loopne or (bad) (bad) (bad) (bad) fildll push mov js scas ljmp dec bound xchg or inc aas hlt (bad) (bad) (bad) incl (bad) pusha lds insl rolb cmp pop push jnp scas je lock shr (bad) pushl add aad ja test lods cmp and dec dec mov xor (bad) (bad) (bad) call adc aam mov bound stos dec femms mov es dec jns test mov cmp jp imul movsb push push cmpsb push es lods pop sub call inc orl adc ljmp sar or mov mov pop push int cmc out add dec mov (bad) and out inc push movsb xor mov (bad) (bad) cmp adc jno mov inc popf fldl (bad) mov cltd es inc (bad) (bad) (bad) incl jmp inc xor push sahf nop xchg sbb cwtl ds cmp hlt jg add stos mov adc ret loop pop pop jge (bad) (bad) call aaa inc sbb sbb int adc fidiv jne pop xchg sbb out xchg inc sti jnp (bad) pushl or push push pop cmp cmp fwait bound shld mov xchg ds (bad) (bad) ljmp out mov sahf mov jbe adc fistp insb aaa nop or adc (bad) call call (bad) cli (bad) and xor cs xor test cmpsb daa (bad) scas pushl xchg (bad) push xor ja leave lret sbb inc clc push std (bad) (bad) (bad) xchg jbe (bad) movsl insl dec ret adc cld mov ret cvtps2pi std es scas popa sub dec push sbb (bad) (bad) pushl pop or sub das xchg inc dec out ljmp nop push iret cld lret lret xor (bad) (bad) inc stc add clc sti mov dec aas sub inc mov and or les (bad) (bad) lcall dec iret pop mov in push insb test mov xchg xchg jle les jno (bad) (bad) (bad) incl sbb mov jbe jge sub or pop sarb cmpsl dec xor ljmp fildll pop mov xor mov push push test adc cmpsb test dec sahf out add incl movsb adc sbb jp pop aam jb (bad) (bad) (bad) lcall into ja xor mov test sti test or cmp push std lcall sahf stos out stos dec in repz and sub pushf je stc jne xbegin sarb inc inc jnp pusha add xchg sbb pop dec mov add (bad) ljmp ja pop and pop cmp pop jnp mov cli pop adc (bad) pushl xchg push jbe xchg std or add out pop adc sbb or enter jmp push pop adc shlb loop dec pop insl jno test push (bad) push jno (bad) (bad) (bad) (bad) cmp jg test jle stc add and int3 mov jl sbb (bad) (bad) (bad) call sbb fiaddl pop xor xchg push push push loop jae inc push mov adc pop push orb mov add test scas das xor sbb movsl lods icebp aas jp mov mov (bad) (bad) lcall movsl (bad) inc adc inc repnz fidiv xchg lret lret lahf pop add add sub fcomip pop mov loopne arpl add (bad) (bad) mov cwtl or mov xor cmp (bad) (bad) cmp fs je hlt jmp popf xchg and shrb xchg mov sarl stos dec mov pop and xlat push fisttp mov add dec stos push sti cld cmpsb push cmp mov push rolb mov mov inc add dec outsb insl xchg sub push push inc cmc cs mov clc dec inc lds add jl rolb (bad) (bad) lcall mov xorb and fs ror push daa (bad) add ja (bad) (bad) (bad) call sbb outsl sbb std aaa out sti mov nop aas xor arpl call fidivrl (bad) fild daa mov mov inc test inc incb (bad) jmp mov leave or test dec int jae jno sbb mov lcall loopne testb aad dec (bad) pushl ds pop lret aas xor mov rorb (bad) lahf shrb cmp (bad) (bad) (bad) fldenv push cwtl ja stos cltd mov jo mov push rcl add jge rcll (bad) (bad) jnp cmp (bad) adc seto adc lahf (bad) cmp push pop inc xchg dec cld decl iret mov mov lods cmc fcomps repnz js pop das (bad) cltd mov and add push fadd imul cmp call mov adc sub jo loope stos (bad) (bad) (bad) fbld cli inc lds jl xlat aam mov call (bad) ljmp test inc sbb fadd js sub push push in (bad) mov cmpsb sbbl inc mov push mov call fsubp or setae pop stos lock xchg mov and xor bound (bad) (bad) inc ficom mov fs adc pushl and jne (bad) (bad) (bad) jmp add inc mov dec sarb test fwait sbb in imul iret xchg xor arpl mov cld aaa rorb imul ret sbb cs lock mov lcall cmc les mov in cmp (bad) ljmp inc xchg scas and pop xchg mov (bad) pushl lea jnp mov push aam sarl hlt or mov inc jnp (bad) (bad) (bad) ljmp and inc inc cs (bad) repnz sbb mov jo sbb fcomip adc jle cmc out cmpsl push inc jae xchg lret in adc xor (bad) (bad) (bad) jmp (bad) inc pop outsl je or stos lea add sub pop and sbb sbb shrb push (bad) cld jmp fiadd or stos (bad) out cli pushl (bad) in popf pop adc test sti inc pop stos jge nop jg pushl mov popa lods ds mov les (bad) (bad) (bad) (bad) clc sub xor scas cmp loopne cmp std mov jns int3 mov add es lahf and (bad) pushf cmc (bad) jg (bad) mov loop imul or sti inc dec push (bad) (bad) jg inc aam addl xchg pop ret (bad) sti ljmp add scas lods aam inc dec mov cmp jl mov jmp sbb das pushf jae lods add jg out das pop sub jg add mov push movsb in xchg fs or (bad) incl lock and sbb sahf movsb out std neg out movsl mov (bad) (bad) (bad) jmp fdivrl outsl pop xchg fcoml mov ret push loopne ljmp pop and (bad) (bad) mov inc mov mov xor arpl xor icebp pop pop mov cmp mov mov and pop cmc (bad) bound pop mov lcall mov enter out cltd push add loope cs xchg aas inc imul inc (bad) (bad) (bad) call mov scas enter or mov mov (bad) (bad) (bad) (bad) jnp int jg mov push mov ljmp out xor xor outsb loopne and cli call andl repnz and xor (bad) call push pusha jle adc addr16 nop jae cmpsl popa addr16 (bad) rcr incl add sub loopne ss popf out jecxz pop std mov lods cmp jmp dec clc inc inc scas scas sahf je outsl lcall (bad) decl lret mov mov sbb cmp lret mov xchg js cli mov sbb xchg jno sbb lcall das pusha mov pop lods adc sti push aas dec sarb jl (bad) (bad) (bad) (bad) jp scas movsb (bad) push xchg (bad) and cmp lods push outsl sbb and (bad) (bad) (bad) ljmp sti add scas cmp push mov xchg adc ret mov adc insl mov (bad) jg dec lcall (bad) idivb pop popa out adc (bad) (bad) call test cli enter jnp insl sub out xchg fcmovne xor lods sub mov sbb (bad) (bad) in mov pop insb repz mov mov adc lods fwait inc (bad) (bad) (bad) (bad) jg xchg mov inc addb jp add iret sbb insb mov imul jle mov test xor mov xchg movsl subl bound sbb (bad) sarb jne (bad) arpl xchg stc push push icebp mov ljmp clc jmp fsubp (bad) sbb call mov cld mov push sub out pop sbb movsl pop cmp xchg pusha cltd fidiv (bad) mov adc and and cmp popf inc add (bad) (bad) jmp js icebp ds test repnz cmp loope ds out push xchg loopne (bad) incl mov adc mov lahf xor cmp add (bad) (bad) aas xchg aas stos in push sbb add push stos movsb inc sahf push idivl ljmp cld (bad) ljmp dec scas arpl sahf push and out xchg es mov fs (bad) jg jmp jmp pop in test or pop jl (bad) pop jns cmp outsl (bad) (bad) dec cmc in mov int inc out jno xchg and cmpsl xor (bad) or negb pushl std call jmp push mov adc inc dec mov repz inc addl aaa add (bad) (bad) (bad) (bad) cmp mov lods lret gs xchg fdivrl out xor mov mov mov aad (bad) (bad) lcall in hlt ss fwait pop shrl push (bad) jb dec movsb (bad) frstor daa push out data16 (bad) (bad) ljmp roll jp cmp cmp das dec out adcb sub xchg imul jl clc ficom pop pushf ficomp (bad) (bad) (bad) decl jo fldl sbb in cli int3 xor movsl mov inc sti dec std cmp xchg (bad) (bad) (bad) jmp xchg sbb pop pop bound fxch push popw mov outsl fwait ret or (bad) cmp imul inc and jb sub (bad) jg repz imul dec pop mov pop dec cmp sub call clc inc adc xlat cmpb aaa popl test adc cmp jo rclb mov iret les inc shrb stos sub adc (bad) pushl mov das mov fmuls (bad) jmp test in mov bound imul ret std jge stos mov inc test stos lahf dec out xchg ret jle mov cmpl aaa (bad) ljmp mov lret ds pop es inc jae pop xor std mov push js (bad) (bad) lcall jno cld xor pop mov inc lahf sub stos lods je mov in lcall rol and sbb mov rorb cmp jb cmpl jge stos mov mov jp test jge ret mov xor int movsl sub sar inc test cmpsb aas mov mov (bad) (bad) pushl les cwtl xchg daa add sbb outsb push xor mov sahf jmp popf adc or decl push sub mov pop add mov or xor inc mov (bad) pushl jnp lods push push pop or (bad) cli rolb mov mov (bad) cmc bound add sub mov addl out sbb mov (bad) in pop pop mov mov ret jae xor subb (bad) (bad) pushl jns pop mov xchg lods cmpsl xchg and iret lock adc xchg cld dec pop negb cmc (bad) (bad) (bad) ljmp jnp sbb js fstpt subl dec jo insl pop push fs mov test and inc rol push outsl iret pop or (bad) lcall jp and cwtl mov xchg in mov mov icebp ljmp dec fidivl aaa dec push push ds in mov es cld js pusha jo (bad) (bad) (bad) fist clc add insb adc and (bad) cmp inc enter (bad) insl lret (bad) (bad) (bad) jmp jl jge push aaa jbe mov mov (bad) ret xor xchg lret fadd data16 stc (bad) (bad) (bad) call (bad) jbe cwtl mov mov sbb mov sbb jno jae addr16 pushl out ja and pop dec add mov (bad) (bad) ljmp push adc jb dec dec ss pop dec and mov faddl (bad) (bad) (bad) jmp call scas jb jne repnz dec lods inc adc pop xor xor (bad) in decl pop in rorl pop js movsb cmc sbb addl mov aas (bad) (bad) (bad) lcall or es cmc sub mov pop (bad) fs push mov fdivr jg hlt repnz nop (bad) dec enter loope xchg test (bad) (bad) (bad) lcall stos scas daa pushf dec out sbb cli sete movsl jno ds in pop leave lods int3 mov (bad) call jg xchg in dec ret das xchg or movsb (bad) xor mov (bad) (bad) (bad) dec pop je loopne sbb pushf jns insl cmpsb loopne das sbb sbb (bad) mov sub aam (bad) (bad) (bad) incl lret aad sbb push insl cli xchg sub xor repnz aam faddl (bad) (bad) incl mov or cli clc fisttpl mov pop sbb (bad) jbe cltd icebp xor push adc (bad) decl mov (bad) nop sbb xlat loopne pusha push jo xchg out xchg das sub icebp (bad) jg call pop data16 mov (bad) dec mov test movsb pop mov mov jg (bad) call js (bad) and sub dec mov xor xchg push push es (bad) mov add push adc pop mov lds lcall dec push lods rorb mov add sti shll insl (bad) decl push push cmp sub push cmp into cmpsb mov (bad) mov cld lds push mov pop push (bad) (bad) (bad) decl sbb in andl mov add ret mov (bad) (bad) (bad) (bad) out mov (bad) dec and sbb jno xor out jmp (bad) (bad) (bad) lcall and cmp std jae jecxz movsl fwait jge aad std loopne insl pop or push shr mov xor adc xor pop lods test mov mov (bad) (bad) (bad) dec lea shlb jae mov repnz cmp pop clc sub cmp (bad) call add sbb xor clc push sub (bad) or add jmp xchg jno xor or les movsb dec (bad) inc cwtl fild (bad) (bad) (bad) lcall faddp mov push nopl test fs outsl int mov mov (bad) (bad) (bad) pushl sbb mov cmp call xor test fsubp loopne pop jns or (bad) (bad) fadds xchg and jecxz ljmp mov pop test jo (bad) decl daa push mov xor (bad) fldl mov (bad) (bad) incl or cli and (bad) orb bound (bad) out (bad) (bad) fdivr fidivr cmp ds mov push test insb jae (bad) ljmp (bad) mov scas mov ljmp movl add xor mov inc inc ss je inc les std inc fcomps mov (bad) (bad) (bad) decl dec fucomp xchg (bad) int3 stos or loope (bad) push dec sub outsl and into lds mov mov stos and testb std and repnz lock into and jp sbb jns ljmp pop push sar (bad) cld cmp sbb mov mov add aaa (bad) mov dec orb pusha jmp cmp inc push inc jns pop mov fnsave cltd (bad) (bad) (bad) inc cmp jae cwtl inc popa loopne push xchg decl fbstp icebp or (bad) (bad) (bad) ljmp ss add movsl adc (bad) lock jmp aas clc mov repnz pop push mov cld call mov ret lock roll stos lods push call (bad) or (bad) mov les push pop insl or lahf sar mov int cmc icebp jg (bad) (bad) fnstcw dec stos test (bad) push fnsave sub repnz dec int3 adc xorl dec lea mov xchg cld das sar jg cmc push es lret adc pop add add cmp fsubrl sarl outsb das cli fcomip cmpsl sbb sub jb mov lock (bad) (bad) (bad) incl inc mov mov add push jmp cmp (bad) (bad) and clc (bad) (bad) incl or in in lahf faddp pcmpgtw sub cs jmp lcall mov clc (bad) (bad) jmp in push mov imul push ljmp pop repnz decl ds pusha xor add (bad) (bad) fdiv lods mov lcall fnstcw fdivrs (bad) (bad) (bad) lcall jns subb sub mov mov test and sahf inc xor cmp (bad) or lea std sub or cwtl inc out sbb (bad) mov fidivrl pop insb xchg jecxz shlb sar (bad) mov push cwtl (bad) adc and mov cwtl push xor mov lock mov loopne mov je push jecxz pop adc sbb icebp (bad) mov xor sahf ss sbb (bad) (bad) inc push push cli xchg or pop sub in mov test and std sub loopne ljmp movsl inc mov icebp in loop lods clc (bad) (bad) call xor inc stos lret (bad) bound pop mov clc mov sub jno data16 jp add (bad) (bad) out inc divl add rcrl xor jns gs fs adc adc ja mov fcomip (bad) (bad) in or push stos sbb mov clc out xor (bad) (bad) pushl pushf jl adc addl negl cltd mov pop (bad) jne out mov dec inc stos arpl (bad) (bad) jmp push rcr mov std mov dec in addr16 movsb inc and aaa leave cli incl or and addr16 loop (bad) incl ss jo pushf pop add mov stos ret mov mov (bad) mov cmp and push pop push into adc mov cld pop call (bad) jg (bad) mov add pop insb xchg inc xchg lret stc pushf and test xchg call loopne ds (bad) enter fcmovbe arpl in xchg cmc repz inc xchg push stos (bad) (bad) call ret testl jg nop jb (bad) jmp xor ljmp inc pop shl xor and cltd jecxz mov inc xchg fwait loop jno push imul (bad) out ss outsl call imul push mov xor mov push std (bad) (bad) jmp in mov fs arpl es mov mov lcall xchg cmp push sub adc add ljmp or xchg daa xchg outsb data16 into or (bad) in (bad) aas fiadd push loopne mov xchg in (bad) jns jns add (bad) (bad) decl xor dec xchg lds xchg push insl movsl mov push jecxz xchg pop fdivrl int3 clc (bad) (bad) decl mov mov push pop push mov test push jnp adc data16 add mov mov (bad) (bad) (bad) decl push xor sub sub jo aam cmpsb shll lret ja movsb (bad) (bad) (bad) call pop fcoms je and mov imul pop xchg std or (bad) (bad) ljmp call push mov or push lahf nop push addl jb nop sar adc fidivl mov push (bad) (bad) (bad) decl adc sbb sub pop les aad insl dec and das jbe jle jp cmc pop (bad) (bad) lcall sahf pushf fstpl xchg sbb loope in sub xchg xchg data16 sub std scas adc imul (bad) mov icebp push lahf fcompl lret and push in in fdivl adc (bad) (bad) (bad) std loopne cmp pushf test mov xchg cmpsb xor sub pop repz orb subl dec aaa adc sti jo push (bad) (bad) jg loope repnz add fwait jle pop push js inc int3 mov aam (bad) (bad) fstl ds xor pop (bad) insl push add insl lret jbe (bad) (bad) (bad) (bad) jmp xchg insb ljmp idivb fstps jae pop mov and (bad) (bad) (bad) inc call and std das test push mov xor adc hlt mov push movsl (bad) (bad) (bad) ljmp out aaa cwtl stos jl push xchg movsw ss roll xchg fbld dec xchg (bad) (bad) (bad) adc jns and cmp sti aam xlat lods xlat (bad) addr16 xor adc dec push das cli pop adcl ret sbb gs fcomip pop add daa pusha out pop sbb mov test push lods cltd pop icebp (bad) decl out adc jge or pushl xor adc lret int3 xlat xor (bad) (bad) in fucompp and dec nop fistpll repz test in pop pop frstor xor pushl xor icebp sub (bad) aaa dec (bad) icebp mov dec pushf push mov sub pushl jmp popf cmp loopne cmp cli sbb mov mov ja xchg xchg js imulb adc xor popf cmp (bad) push cmpl rclb jp push dec jg sbb (bad) cmc mov mov call (bad) xor push xor xlat lock aaa sar ljmp mov push add cmp lahf jb fild into inc xchg std mov (bad) (bad) call mov stos and fs jae or sbb mov in (bad) (bad) (bad) call sbb ret sti iret push ljmp clc add cmpsl or mov ret xor (bad) decl or stos fstl sub push jae mov pushl pushl sbb ja mov push fldl push int (bad) (bad) inc pop aam xchg add movsb dec jecxz push mov call repnz enter push and jg ret pop fsubl mov repz iret adc push sarb lds cmp xchg lret cmp jl (bad) (bad) decl (bad) add sub add xchg jge mov inc sahf (bad) cmp lret das push iret mov or mov mov jg fsubl sub shr push out mov pushf call dec test adcl mov loop xchg cmc iret mov inc adc decl lret notl pinsrw xlat adc lods inc cld (bad) decl ret xchg cmp pop add lret inc cmp cld jg mov imul jge push pop addl (bad) (bad) decl xor aaa lock xor adc pop (bad) mov cli (bad) lcall dec sbb das scas dec push mov add sub shrl jno dec ja icebp das hlt inc sbbl pop cwtl mov adc (bad) push ja xor jp cmc out mov xchg mov cmovae sbb int lret int3 cs ljmp (bad) mov inc and jmp test and stos inc fcomip (bad) incl xor push movsl sub loop out dec fimull incl (bad) sub into scas inc in jb push inc mov xchg (bad) push (bad) call push or repz stos iret outsl pushf pop hlt xchg lods clc fs pop fdivr cmpsb (bad) jmp jp jo pop cmc add and adc scas push js cmpsb or (bad) jmp repnz scas jno jb lahf dec hlt cwtl loop popa adc outsl ror push incw test mov jb adc dec test push xchg gs (bad) out xlat mov les es cmp push pop inc xchg (bad) (bad) jmp push mov jecxz out inc pop push cmc ret inc cmpsl and ljmp insb (bad) (bad) (bad) inc negl mov push push jnp fs ss bound mov jl push jno (bad) (bad) (bad) (bad) cmp xchg and jae cmp inc dec or mov jl sahf cmp je (bad) (bad) inc cltd mov test mov movsl mov jecxz sarb in lds insl pop push dec xor aam pop mov sub (bad) lret push in in dec loope mov outsl (bad) (bad) inc adc scas aad insb sti add int3 arpl cmp xor jnp stos inc (bad) (bad) lcall ja sub mov es mov cmp loope (bad) (bad) ljmp cwtl push jge adc mov rolb push inc mov jo mov or sub sub (bad) (bad) ljmp sub push mov inc mov out pushf fs dec ljmp mov xchg or sub lret push scas inc sbb (bad) (bad) (bad) jmp pusha xorb mov add push mov dec push jb subb das push in mov push push xor sub (bad) decl xchg mov sub lods push xchg rcrl adc pushf push jl mov aaa (bad) (bad) (bad) jmp and add mov cmpsb xchg push push (bad) stos out imul inc clc xchg popa (bad) and jo xorb jg (bad) (bad) (bad) (bad) cmp bswap fsubs dec adc cli xor cwtl (bad) lods test test sahf mov push mov roll loop xor push mulb or daa mov insl (bad) (bad) (bad) decl fistpl js imul add mov fcomp xor jae (bad) (bad) (bad) (bad) jmp dec repz push and or fbld add sbb lahf (bad) lret xor push mov lret jbe mov mov pop iret out mov scas loop sbb mov leave adc jbe call cli jo jg aad sbb imul sbb mov (bad) xor and call (bad) dec (bad) dec mov or cmp jne inc lods sub aas dec sbb inc lock bound (bad) jg inc xchg (bad) insl cld inc pop lahf or scas cmpsb ja mov js idiv push jl xor (bad) (bad) (bad) pushl repz jge push nop mov xlat jle stc and xor imul das (bad) (bad) (bad) (bad) fstps pusha push rorb fistpll adc pop repnz jmp stos icebp (bad) (bad) pushl aaa movsl jmp adc xchg xchg out outsb dec leave js incl mov (bad) fisttp std dec test xor xor adc jae jl arpl add scas clc jmp dec ja lods sbb xlat shrl inc lock repnz jo pop add add or mov loop ret aas mov push dec mov pop inc lods (bad) (bad) (bad) call inc jne je fimul jne jne xor aad jl xchg fadds cld dec dec mov stc push pop (bad) jmp lock (bad) (bad) cmp (bad) jl into insb xor mov clc push or push xchg movsl daa dec adc (bad) decl mov xchg mov js inc sbb test pop sbb fwait and ret (bad) ljmp mov push int push ret sbb outsb orb je dec or ret (bad) (bad) (bad) ljmp lds in or rclb mul and andl pop ljmp (bad) (bad) (bad) (bad) stc mov push mov notl ret (bad) pop call jle mov insb mov push call aad mov (bad) shlb push insb shrl jno xchg push mov add bound (bad) add jno fdiv cmp inc xor popa pusha dec inc (bad) mov fiadd iret mov mov jb and (bad) (bad) jmp leave sbb push jnp dec xchg add xchg xchg and add lds fwait (bad) (bad) (bad) ljmp arpl sub xor dec dec fwait rorb insl stos sbb jl scas add arpl cmpsl dec mov (bad) (bad) lcall outsb das nop lods add mov pop mov mov fdivr sti js (bad) mov pushl arpl shrl popa push std sub push cwtl ror (bad) (bad) (bad) (bad) in push out sahf push mov (bad) sub push icebp or add ss adc js insb negb xor cmp (bad) in out cmp (bad) fadds jg outsb ss (bad) ffree stc inc scas rorl (bad) jge push mov ljmp mov xchg fwait sbb dec rorl (bad) (bad) lcall decl jb inc inc dec ret sbb jns adc lret (bad) decl sti mov adc aaa push inc out test and pop mov mov in mov (bad) (bad) cld push jmp pop mov push std in fnsave (bad) repz xchg xor mov mov popf sub mov aam (bad) (bad) (bad) decl jno mov push mov dec jae sbb enter jo das out addr16 cmp xchg (bad) xor clc (bad) jmp push vpaddq mov repnz fisttpll incl inc clc int movsb pop cs xchg imulb lcall (bad) jae pop outsb sub cmp andl inc xchg (bad) ja aad pop xor loopne (bad) jle mov ret dec jo xchg fdivrp (bad) (bad) decl (bad) adc mov test pop dec and iret sti lock (bad) (bad) inc jbe xchg enter pop std xchg xchg mov (bad) mov (bad) (bad) jg mov call or cld xchg in mov sbbl push add mov jmp fsts xchg call sub mov add addr16 repnz jno add je loopne inc (bad) (bad) (bad) inc mov add cmp adc jne in js (bad) das push mov inc jl outsb stos testb mov rolb mov dec xchg add sarb (bad) (bad) (bad) (bad) jle andl (bad) cld sub lods mov rol fistpll ljmp mov test in dec nop (bad) (bad) call push ficompl mov xor and jo pushf and and mov add mov xor sub sarl or dec dec push out subl lea and daa (bad) (bad) (bad) out mov loope add mov xchg fldenv mov test or and (bad) (bad) (bad) dec push cld push add (bad) and mov xlat adc inc sbb xor ss inc sar (bad) (bad) decl ds je jno stc psubsw sub rcll stos mov jnp insl mov aad (bad) (bad) (bad) ljmp rorl fisubr and jo mov dec dec inc movsl cld sub mov aad lret (bad) (bad) cld push orl xor jne cs or (bad) out out hlt test or dec test sbb jg (bad) add ljmp mov (bad) movsb jg out inc sub sbb hlt sub decl sbb repnz pusha pop xchg ret (bad) (bad) call outsb cmp das popf adc xchg movsb mov ss (bad) movsl mov cli jmp xchg fdivrs pusha mov inc pop repz cmpsl ljmp sar sbb test out and bound mov mov (bad) (bad) (bad) inc sub fisttpll out fiadd stc ja test or lods dec mov pop xor add fbld popf nop add push daa je push out clc add rcl pop push rcrl (bad) (bad) call jge imul dec jbe and jl fsub mov (bad) (bad) (bad) sti cli insl mov inc sbb sbb (bad) popf lea (bad) cmp repnz (bad) and (bad) (bad) (bad) ljmp scas push fwait dec sub jmp test dec imul loope,pt sbb ret fcomip (bad) (bad) cli add es push xchg cmpsb jns sbb or inc pop push js divb push mov jmp adc (bad) fst cltd hlt out or in out int3 sti les call (bad) ds cld aad ljmp lcall push imul vxorps mov dec jle sahf out repz mov (bad) (bad) (bad) call popf lds lret lret push outsb xlat lods in xchg and mov dec mov (bad) (bad) pushl aad lea add mov int dec ret aad jmp push loope mov addr16 (bad) (bad) (bad) decl add mov shrl xchg sub fimull arpl or repnz push aam add sar pop add xchg and outsb loopne sbb mov (bad) jg push imul xor jle in dec or test movsl sbb or or pop hlt (bad) sarb lods pop dec mov mov or fiaddl test jl loope xchg pushf test fxam jl sub mov push (bad) (bad) (bad) (bad) mov fcmove xor xchg jae add into xchg (bad) and (bad) dec sbb lret (bad) (bad) (bad) fstl add in pop xorl fiadd test ljmp ja dec fistpl (bad) (bad) (bad) (bad) fldl pop ret inc push push push es mov aad icebp xchg out sar out mov xchg cmp jmp div mov and inc inc mov xchg push add (bad) jmp push xor (bad) dec insl stos divb fisubr mov inc iret pop fwait test push lds xor inc nop pop mov (bad) (bad) jmp sarb sbb aam mov loop repnz (bad) (bad) (bad) jmp in xor iret pop ds stos xchg or (bad) (bad) jmp stos pop pop mov mov pop test mov push xchg mov sbb (bad) (bad) lcall dec inc stc xchg jnp pop out xor test (bad) cs adc mov cmpsl pop or ljmp js jbe mov addr16 (bad) decl mov imul or xchg lock mov lods fdivrl (bad) pushl cld (bad) sub (bad) lret in push leave loope insb pop in leave sbbl cld incl fnsave xor pop xchg mov mov xchg outsl (bad) (bad) (bad) (bad) mov push clc call xchg adc js inc push mov jnp push aaa popa (bad) (bad) ljmp (bad) icebp jge sbb fbld sub xor je xor inc pop push or pop sbb iret dec in or (bad) lcall mov int3 pop mov xor cltd xchg (bad) mov test fistpll (bad) (bad) (bad) (bad) cmp test shld push neg add fmulp les jecxz jae jp sbb or lcall aad (bad) (bad) (bad) lcall inc aaa testb sbb (bad) loopne xlat xor push mov shrb sub movb jns (bad) (bad) (bad) jmp mov or daa jns sbb in inc jle push test jl mov add (bad) (bad) ljmp sub sbb test jnp inc adc mov (bad) (bad) (bad) (bad) mov mov lods imul xor out jbe push and adc (bad) or mov sbb (bad) (bad) lcall aaa xchg insb jno imul mov sbb adc mov (bad) cmc call cld aaa mov jae jns sbb pop cmp jbe push pop (bad) (bad) (bad) jg mov inc aad (bad) into sbb inc rclb leave outsl cmp (bad) mov mov xor dec pop push mov (bad) (bad) or (bad) (bad) jmp leave sub and inc cmpsl fwait dec shr and jae cltd and ds pop inc pushf and (bad) (bad) (bad) ljmp inc insl out xor lret leave ja ror lea xchg in insb ret ja jns jnp,pn (bad) (bad) (bad) mov es cmpsb mov aad jnp mov imul cld xor (bad) (bad) (bad) cld and mov cmp xor cmc push jbe mov mov std (bad) (bad) (bad) call rcll sti fistpll sbb int3 cltd out lret test arpl fucomi jmp push fnsave in lods push std decb scas jno sarb sbbl push repnz mov (bad) lock movsb add (bad) lcall mov jae repz cs lret int aaa push add dec int3 lret mov mov int subb mov dec sbb (bad) (bad) (bad) jns xor dec add movsl cmp and sbb cmp ffree mov jmp (bad) (bad) (bad) ljmp ljmp std cltd das fildll dec jl icebp gs ja mov or lcall ds xchg test mov std (bad) decl adc cmpsb jp xchg cmp iret imul enter inc adc pop (bad) (bad) int3 inc outsb lock out (bad) (bad) (bad) mov inc mov jmp and out pop loopne (bad) (bad) (bad) incl imul inc push (bad) jno dec push pusha dec in test or xlat das mov (bad) mov outsb mov out imul dec mov das clc (bad) pushl int xchg cmp in rorb dec pusha inc or xor pushl mov dec movsb (bad) cmp ja dec and mov js sahf mov sub xlat and mov call insl adc mov cmpb hlt jge cmpsl (bad) out nop popa mov push jecxz push jb add mov icebp (bad) cmp out movsb and (bad) (bad) (bad) call cmpsl cmp scas adc inc int3 mov outsb fnstenv cmp push incl loop or clc pusha cltd mov and mov (bad) (bad) call cmp or push sbbl sbb push insl jp mov mov test push cld (bad) call mov and xchg scas lods (bad) popf mov cmp jg lock fimul and fisttpll xor mov jae jle xchg clc es (bad) (bad) ljmp iret xchg dec in fcmovbe or mov movsb fistpl int3 roll push (bad) (bad) (bad) (bad) mov add nop fwait cltd jno inc fsubs dec mov scas inc ss and aas adc mov xor imul pop sub sbb orb out shrb or enter cmpsl das js (bad) out jmp dec leave lds pushf je or (bad) sub (bad) lcall cmpsl pop sbb (bad) ja ljmp rcrb jmp pop lock incl mov add shlb aad mov mov cltd outsb add cmc jp clc (bad) (bad) (bad) in push pushl mov xchg enter mov pop lret lods hlt or out dec stc (bad) (bad) (bad) out ss xor sub jae pop mul jg pop dec ret push add popf mov push xor mov push rcl mov add (bad) (bad) lcall xor jge arpl adcb pop jne lds call lock lds jne xor es sbb add jno icebp daa or mov (bad) push pop mov jge xchg (bad) incl aaa aam pop jne aas inc mov mov leave mov ret or movsl mov mov les dec push data16 out dec out outsb das fiaddl or lock mov pop inc shrl pop pop pusha mov cld mov cmc and jmp adc int3 movsb je adc cmp clc lcall test or lret (bad) ljmp sub xchg dec mov lock and rcrl (bad) (bad) (bad) ljmp add pop mov sub push cmp jno ljmp push aaa and (bad) ljmp cmp frstor outsb aam out and or xchg ret fwait jg decl ds sbb ret ret sub test jge inc fisub (bad) call mov aaa sbb cmp xchg add mov or mov pop push (bad) (bad) call ficomp mov stos out xorl add push lea or leave (bad) pushl cld inc std add nop fldt call lds pop pop jo (bad) (bad) call pop jno dec aad inc lds xchg icebp ret sbb fdiv pop std dec lea ret or mov mov jecxz call rclw jae mov xchg ljmp incl xchg pusha in xor jmp movsb inc insl push insb pop xor (bad) (bad) (bad) push popf add cmp pop sub imul fisttpll sbb jns adc movsb idiv ja mov mov dec jae xor scas pop sbb (bad) (bad) (bad) in movsb mov mov sbb repnz or jmp in or test scas incl push clc stos (bad) loop int pop stos sbb ja add (bad) (bad) (bad) pushl repz sub aaa jae mov inc rcr xchg sbb pop pushf add pop ja (bad) jmp ja jb jecxz (bad) sub push add sub dec add test or cltd mov loop lcall push inc rclb in popa (bad) (bad) (bad) incl cmp in sbb jp (bad) in je popf xor imul cmp mov and sbbb (bad) (bad) jg jp xor xchg fsts out dec fldt enter ja and adc (bad) or in lods loope jb mov xchg xor fs or cmpsb mov in cmp mov cmpsb add test lcall add cli test pop jecxz inc mov jg (bad) out mov adc jo push jmp jl lods cmp pop in das sar push (bad) js jb cmp xlat jns les adc lcall insb imul pop add popl cs push lcall (bad) jmp movsl fld adc jl and mov ss sub lret aad push (bad) (bad) fcomip arpl xor or into bound jecxz jge adc xchg loop int3 sub and sub dec (bad) (bad) aas xchg into sub and (bad) jg push cmp mov rclb rclb mov mov (bad) (bad) jmp lret sahf mov dec inc cltd or mov (bad) mov push sub (bad) (bad) (bad) call pop pop xchg (bad) xor push loope gs dec gs out outsb insl movsl dec mov pop lock (bad) (bad) dec (bad) inc cmpsl (bad) jle mov adc mov (bad) clc loop xchg or testb js scas dec movd ss xchg lods and sub sub stos repnz jg mov or (bad) (bad) (bad) (bad) cli fadds and fmuls scas push fistpll in lahf adc lret fistl pop cwtl (bad) (bad) (bad) (bad) cli hlt push dec imul dec sub inc ja dec add push cmc sahf sti push in fsubrs (bad) (bad) (bad) jmp fiaddl mov mov rcr xor in pop sti sbb cli in cmp lcall sbb clc push rolb mov ja xchg aad mov cmp decl mov cmp mov jmp (bad) mov cmp sub (bad) (bad) jmp xchg mov add xor adc (bad) cld fnstcw fistpl ja jne (bad) (bad) (bad) lcall adc pop inc pop arpl (bad) jmp xchg ds jp mov (bad) (bad) ljmp add cmp push push ret mov jg push aam sahf pop (bad) (bad) (bad) decl dec lods pushf mov fs adc xor mov call pop negl mov (bad) cmp das or insl cmp mov call or inc stos rol imul xchg push repz test mov jmp xchg outsb mov push repz scas mov sub cmp add xchg repnz movsl jge adc (bad) lcall imul dec cld sbb push movsl mov cmp (bad) dec inc xor mov (bad) mov loop mov mov mov std pop dec push ljmp (bad) lcall rolb insb push sbb scas (bad) fs xor (bad) (bad) ds into xchg test out out push dec or fidivl aas sub pusha dec push add incl mov adc mov pop cld jmp or aas or mov jge xor sti jb pusha cwtl xchg (bad) (bad) (bad) call jnp xor dec sbbl nop xor popf movsl push sub movsb and pop inc dec jle (bad) (bad) (bad) decl mov int icebp jp cld pop cmp hlt popa stos push cmp sbb add mov mov cmpsl mov push cmp gs cmc cltd sarl or cli (bad) (bad) incl cmp iret pop mov sbb mov push xchg (bad) adc pushf xor ljmp jle (bad) sub sbb sbb shrb rcll fcomip int (bad) lcall js sub dec fucomip outsl sbb (bad) ljmp notb loope (bad) mov push xor fdivl inc push icebp sub sbb fild mov std incl xor add hlt adcb pop mov (bad) (bad) (bad) jg into inc jbe fs stos std mov shll dec (bad) clc xchg or mov xchg sub pushl std int3 cmp sbb mov rcrl or (bad) (bad) (bad) incl enter mov loope pop or in ja ljmp mov inc cltd inc jb std (bad) (bad) (bad) (bad) mov jecxz adc xchg mov enter enter cmp sbb (bad) (bad) ljmp jge xchg iret or inc stos xor push mov inc xor dec fs scas notl rol popf pop xchg push mov (bad) mov (bad) (bad) (bad) fdivrp outsb addr16 jne inc scas das sbb cmp sti pop mov lcall lret and dec ds xchg xchg push ss mov push aaa jo jmp (bad) call sbb ds into imul or pop xchg inc sbb cmpsl sub incl mov (bad) jl into and int3 fidivrl xchg rcl out (bad) (bad) (bad) lcall add mov into adc mov insl pop inc movsb mov xor pmullw (bad) scas aad loop xor adc cmp rolb out push fstp rcr dec (bad) lcall (bad) jbe push sub inc xor dec (bad) lds mov xor fadds pop fwait (bad) (bad) (bad) dec insl push adc inc shll outsl xor pop aaa cs jo (bad) (bad) jle popf stos clc pop and (bad) (bad) lcall push sub pusha dec pop and adc and pushf cmpl jmp call pop dec cli push and lds adc (bad) sbb hlt mov outsb mov jmp (bad) call (bad) (bad) call xor xor flds push bnd sbb add mov (bad) (bad) jg push popa push shrb inc adc fisubr rcrb xor cmc (bad) (bad) ljmp orl movsl imul or sbb ljmp fdivrp (bad) (bad) ffreep aas mov nop and or ja push fmull movsb push popf repnz mov lods jmp aad dec aam cltd mov sar test nop xor or (bad) rol dec cmc lods sub out push dec xor or mov gs test sbb mov push jae loope inc cli (bad) ljmp fldcw sbb xor mov or rclb cli cmp xchg fisubr (bad) decl popf adc cmp loop (bad) jne jge dec xor idiv (bad) mov mov aaa xor adc mov cmp div mov fistp popf or insb jp inc fdivs xor mov (bad) (bad) fbstp push dec jp sti pop push adc cmp iret int mov cmp (bad) (bad) incl bound or negl orb (bad) lcall adc sbb push cmpsb cltd ja loop into data16 hlt fwait shl or movsl mov (bad) (bad) (bad) in xor xchg dec jl cwtl andb clc mov add sub stos or call mov jnp jecxz add adc mov das enter loope dec roll (bad) (bad) (bad) ljmp (bad) (bad) lds mov mov push lods bound mov idivb cmpsl mov popa sub pushl std fs mov dec mov add pop adc das fstps add out (bad) cli repnz inc ja push jge xor mov sbb icebp shrl lea in repnz push out pop mov add jp scas aaa mov push xor nop xchg daa pop (bad) lcall jbe sbb adc cmp lds stc js cmc mov mov clc jmp mov mov and dec aad inc and mov popf and push (bad) decl fsubs or jmp mov xor pop push (bad) (bad) (bad) ljmp sbb es sbb sub movsb and clc or ljmp cli movsb out rcll and imul (bad) (bad) aas pop int3 lahf push push outsl cwtl ret cli pop or pop daa popf out and dec dec icebp out pushl std jmp push popf adc jmp (bad) push push sbb stos ret stos enter (bad) lcall test fnsave cmc sbb nop aaa clc xchg xchg (bad) (bad) (bad) incl popa test nop push loopne xchg push xor add lcall (bad) (bad) fnstcw ficoml (bad) jne xor aaa ror andl pop repz rcl dec insl lcall pop pop cmp mov aam add iret adc mull shlb (bad) (bad) jmp pop dec adcl add mov pusha add jae mov frstor adc (bad) incl sub sub push adc sub cs (bad) mov outsl mov pop cmp mov lods cld outsl ss mov mov mov (bad) loopne dec movsb jae adc pop hlt lcall cmp sbb test xchg push dec sbb lock pop inc mov push fstpl xor push lods push ss hlt ds rcr jg (bad) jmp mov daa mov xor cmpl out lea in (bad) (bad) (bad) call and cmc dec inc arpl inc daa scas (bad) call cwtl (bad) jo cli test (bad) (bad) lcall xor pop (bad) ja addr16 cs stos adc inc jnp xchg (bad) repnz pop int3 (bad) (bad) decl mov push xchg dec add in or lcall push push (bad) idivb xor sahf sbb cli (bad) (bad) ljmp adc sub sbb stos or push out pop pusha into loopne (bad) das sahf mov mov jl call and jecxz xchg and dec fdivrp (bad) (bad) jg cmc bound outsb call adc xchg add sbb movsl and (bad) mov rorl mov cmpsl pop xor dec xor loop push clc xor mov and out imulb out adc sahf inc leave dec push je enter pop rcll (bad) int (bad) aas (bad) rolb push sub jne sti and aad (bad) (bad) (bad) mov orl pop sahf jne js lods jmp out lret movsb std mov mov cmp pop movsb je sub arpl push push out (bad) xor sahf out std test mov outsb mov rclb ret pop icebp push std pop (bad) push lods in fs fisttpl push (bad) mov repnz and mov cmp outsb (bad) and (bad) pushl jnp cs inc sub inc mov cmp test pop jae mov fdivl js lahf (bad) nop push adc jg xchg cmp leave add ds or (bad) (bad) pushl lea add mov in sahf negb xlat adc dec (bad) nop test call rclb inc test dec mov mov lods dec xor (bad) scas inc call and push bound pop jne (bad) call jo cwtl inc and sub daa jl inc mov mov icebp and add mov push jne (bad) call sub jae and sbb mov mov (bad) (bad) call ret or lods add or jae sub (bad) fwait mov and push xchg adc mov or add or jg int3 call xchg outsb add cwtl mov scas ret lcall pop jg xchg dec fnstenv add insb scas sub pushf repnz xlat pop loope mov (bad) (bad) jg jbe push mov mov xor (bad) sbb pop sbb jg mov (bad) (bad) (bad) incl push cli cli lods insb xlat adc mov dec loop and mov inc sbb (bad) in (bad) dec out lret cwtl push fmuls sub cmp out frstor xorl repz and lahf xchg or sub sub jl dec shl (bad) mov or and dec ja (bad) xor cmp (bad) (bad) ljmp adc loopne jge bound enter inc sub loop icebp (bad) (bad) (bad) (bad) out jae push ss pop sarb (bad) scas cmp das std hlt push ud1 call das (bad) adc dec int3 (bad) mov xlat jae sub adc rcr sahf jb mov sub (bad) pushl cld stos mov jl and mov mov push (bad) pushl (bad) sub sbb xchg push xlat mov mov or pop jge inc js data16 or sub rcrb push cltd mov test scas push ja mov scas in iret mov pop xchg sahf mov dec sbb ret repz mov fwait push push ret incl mov lret push pop icebp (bad) (bad) (bad) (bad) ljmp (bad) xor jno pop push mov cmp or fstpl ljmp jmp (bad) lret mov cmpsl cmp and and data16 (bad) (bad) jmp (bad) stos xchg dec dec insb xchg (bad) test xor xor push mov daa push adc (bad) (bad) incl aad icebp sub aaa outsl cmp push ja out ret mov (bad) mov int cli int sbb rcr push add xor gs adc incl pop ds sbb daa adc jle mov cmp (bad) xchg in cs dec jmp push add xchg xchg jge adc (bad) (bad) ljmp mov jnp jmp or mov pop popf popf ljmp (bad) (bad) (bad) decl push pop pushf decb xchg mov push loop pop leave xor mov (bad) (bad) (bad) dec sub cmpsl mov shr sbb lods jae mov lods cmc mov add (bad) (bad) (bad) (bad) cmp adc ret scas or insb std jnp out std fistpll xor repz xchg stos call pop imul sub fcomps sbb or insb mov stc dec pusha outsb sub xorl push ljmp test ds mov fwait pusha roll mov jne jno je mov jno pop lods pop in (bad) jecxz dec in es dec jns rol pop lea jg inc jg sahf and addr16 (bad) pushl outsb jnp lahf pop stc pop insb iret inc mov ret mov lods jg imul divb ds mov adc (bad) (bad) (bad) fistp pop cli push pop sub insb fs mov jno push jnp jo mov xchg pop add inc (bad) (bad) (bad) lcall push and outsb ret test fistl std loope cmp sti lcall (bad) (bad) mov mov daa mov xlat mov test dec scas (bad) (bad) (bad) lcall push stos pop dec sbb xchg push in cmp sub cmp cltd jno leave lock test (bad) (bad) (bad) call ljmp dec imul int3 and mov ja in (bad) (bad) (bad) (bad) pushl cmpsl mov mov xchg cs inc jp push mov push and cmpl (bad) (bad) (bad) (bad) fst loopne pop push movsl and sub test ds imulb repnz sarl (bad) (bad) (bad) call push cmp rolb mov arpl iret mov (bad) jge inc lods (bad) (bad) call add cltd aas int3 pop add push sahf daa mov fwait pop mov mov mov pop out inc cmpl xor sti (bad) (bad) (bad) pushl mov movsl push arpl jp cwtl sbbb cmp push fldcw jne inc pop mov cld mov pop push hlt daa rcll and rcrb (bad) pushl stos cmp cmp sub cmp popa rorl or jns popf xor push jmp xchg sub aad pop mov mov fdivs mov iret in addr16 sub push subl lds adcb or (bad) call je and pop in test or and jbe decb (bad) testl js pop das push inc cli (bad) (bad) (bad) (bad) fbld pop jnp xor pop sbb jno mov dec lds int3 cld hlt add (bad) jmp push movsl popf lods dec add jnp aaa pop pop sbb imul mov jecxz sahf add into loop ds add mov (bad) (bad) (bad) dec fwait sbb mov push divl fidivl nop (bad) lods adc pop lds pop cmpsl inc (bad) (bad) (bad) ljmp mov xor mov cmp shrb cmp insb (bad) cmp out mov (bad) mov (bad) cld (bad) lock adc repnz call sti inc adc cmp cwtl ret (bad) jae iret enter mov (bad) (bad) (bad) clc or out leave cmp outsb loop pop mov fisttpl bound or das in push insb scas call outsb jl jecxz cmp mov fildll (bad) add dec mov cli aaa xchg push and jo mov (bad) incl jge dec sbb pop dec adc fcmovnbe ret xorb (bad) (bad) push xchg pop scas mov sar cmc aad xor mov xchg mov adc add lock pop (bad) xchg rcrl cltd cmp scas xchg enter stos imulb call pop xlat (bad) ljmp (bad) jge psrad (bad) leave popa adc ljmp sahf scas inc fidivrl iret pop aaa dec mov (bad) (bad) (bad) jmp add jbe push push sub sub adc push mov ret cld out (bad) (bad) (bad) (bad) (bad) aas insb (bad) mov sbb inc push sbb stos pop stos mov iret sub mov ljmp push test cli (bad) xor push xorb fwait adc cmpsl out cli loope jnp (bad) (bad) (bad) in fucom pop hlt repnz mov popa mov cmc bound mov inc scas pushf xchg push sbb (bad) (bad) incl ds fcompl jp adc jge push jmp pop popf in lock ja dec sub (bad) jmp jl push out loopne sahf ds dec fstl (bad) (bad) pushl jmp in ja inc xchg insl adc (bad) xor jecxz and (bad) lcall jno (bad) lods stos inc shll xchg negb or inc dec dec (bad) (bad) cmp shrb stos fldt out cwtl insl ds (bad) (bad) lcall pop or es push ja or mov add cmpsb ja ljmp or or aas push cmp dec js aad nop (bad) in (bad) (bad) loopne (bad) ljmp std call sub sbb and jns sub (bad) (bad) mov and push jl mov mov jns mov adc or mov (bad) fstl jo outsl dec fwait loop mov inc lret mov es push aam shll (bad) outsb cmp (bad) mov lea pop ficomp dec test loope aam (bad) ljmp add in jae push (bad) xchg repz add into (bad) data16 add (bad) call pop inc fstl insl sbb insb cs jnp jmp stc jo xchg (bad) (bad) (bad) ljmp jmp pushf outsl repnz inc icebp dec and mov mov mov test xor ficom sub xlat jle mov dec lret lock fldt (bad) decl and add push fnstsw sub std stc sbb (bad) (bad) jmp orb push test jns dec lock mov xchg mov dec (bad) and icebp inc cmpsb (bad) (bad) (bad) push cli jge js (bad) mov icebp insb cwtl sub jle inc fsubrl ficoml outsl xchg (bad) lcall push or ja lods shr stc jecxz sub sbb daa jb push add mov xor jp pop add fisttp andl or incl pop cmp out fist (bad) (bad) mov cmc jg mov test fwait call (bad) clc xlat rorb outsb ljmp adc mov es sub mov (bad) (bad) call and push insl push (bad) out sbb in adc push movsl scas inc es cmp dec push std ljmp (bad) in cs mov mov ljmp mov mov repz icebp sub cmp xor jo mov mov andb jne mov pop int3 or jb jp cmp call popf std in xor pop (bad) or ja mov loop,pt cmp mov out mov push loopne insl movsb icebp (bad) (bad) cmp std cmp mov cmpsb and adc xor jo mov push inc push (bad) xlat ds sub (bad) (bad) pushl and cld mov mov (bad) cmp lcall es lret jp add (bad) call icebp mov sahf outsb push jg (bad) incl push js (bad) pop out gs pop out jg fdivrs adc jbe call int3 out pusha mov sarl daa push sub (bad) (bad) (bad) decl inc fbld cmp rcrl ljmp into fwait es dec jo stc (bad) (bad) (bad) inc inc dec fiaddl hlt add sub rorb cltd imul es jae dec or (bad) inc lods (bad) scas mov cli loop mov mov imul pop nop (bad) negl (bad) (bad) pushl cmp (bad) mov sub push xor pop js inc (bad) inc or pop pop and int3 (bad) jno xchg cld jmp inc mov xchg fiadd in fwait test pop sarl mov dec test (bad) (bad) lcall mov mov and add sbb cmp nop insl lods pushf ss (bad) (bad) (bad) fcoms sub out fwait in cwtl mov sbb std mov (bad) (bad) ljmp in xor xor or mov fcmovnu add data16 es lcall jae mov mov repz sbb lcall sahf or sahf (bad) in ret adcl and outsb (bad) inc adc incl sbb push es bound sar fidivr push push jb mov lods dec xor sbb xchg ds loope popa movsb fdivrs push (bad) shrb jle lret test (bad) mov jmp and (bad) mov mov jp (bad) call jp or push dec clc fstp add test stos cli sbb sub adc (bad) (bad) call in (bad) cmc jp int pusha pusha in cmp daa iret xor jge mov or lret cli decl mov into push add stos push mov (bad) mov (bad) ljmp mov and aas jle add add into (bad) (bad) jg mov (bad) and dec and js fucomp lds mov sbb and arpl addr16 sbb or fbstp adc or cmp (bad) (bad) (bad) sbb ds (bad) (bad) jg mov sub out cld push mov mov ficompl mov iret adc and data16 fcomip inc xor pop in adc aad push adc out (bad) (bad) call dec xlat xchg cmp cmpsl enter fs pop fcoms hlt pop ss mov lods (bad) (bad) (bad) (bad) lcall mov outsb hlt frstor or stos pop sub add jnp clc shr cltd loop cli mov aas incb mov ss pushf (bad) add jb imulb gs ffreep add jbe (bad) bnd aad loope mov dec movsl test fildll mov sbb pop (bad) mov test add in (bad) out and mov out in out in adc mov enter (bad) jmp dec jge adc or xchg and (bad) loopne int lock (bad) stos pushf sub mov push pop ficompl sti movsl inc cmc inc (bad) incl cmp and push xchg std add imul inc in or ja daa pop and push lds hlt (bad) jmp lret jo push int jnp shrl loop sbb inc push add (bad) (bad) (bad) cli mov jecxz xchg push aam shl mov aas xchg rorl mov out std popf mov ljmp add loope out mov (bad) mov adc (bad) (bad) (bad) (bad) cmp mov cmc xchg pop sti roll xchg leave imul mov inc mov cld daa imul sbb (bad) xchg leave inc in or call (bad) incl mov (bad) xor push mov sub push and dec (bad) in add jbe ror std call inc aam or pop lods (bad) ljmp aaa push pop and push mov ret cld scas dec enter ret into fsubrs (bad) (bad) decl ror jnp sbb orb adc rorl sub mov lcall xchg inc sub repnz sbb xchg or fwait aam iret pop cmc push mov dec rcll xchg jge (bad) (bad) call mov jns (bad) out jno cmp (bad) incl js cld inc fmuls (bad) dec push pop clc into cmp and arpl (bad) (bad) mov push add fs ja das mov xor sub roll aas cmp sbb push sarb (bad) ljmp adc std ret inc mov sbb (bad) clc cmp sbb fildll in sub (bad) incl popa adc fldenv and dec push cwtl movsl xor mov mov cmp cs rorb pop (bad) imul cmc xor addr16 (bad) (bad) jg or fsubr pop invd insb add lret push std cmpsb sbbl and mov cmp dec push test lock (bad) jmp xor adc and fildll xchg sub orl mov movsl dec push push in imul ss (bad) cmp out outsl ss xor call icebp or sbb pop mov pop add and shrb adc (bad) (bad) out xor jle loope xor lret int3 aaa jo mov or (bad) fninit out cmovge sbb cmpsb push sahf add push shl aaa or dec pusha cmpsb adc rorl mov mov (bad) (bad) call (bad) fwait xchg jecxz cli das loopne and adc lods (bad) (bad) (bad) pushl add xor ds test daa insb iret xchg outsl icebp mov or test (bad) (bad) decl popf and (bad) jo ljmp clc add clc jns es cmpsb (bad) (bad) (bad) decl sbb mov roll mov pop (bad) jae in cmp cmp (bad) (bad) call je sub mov ss roll pop xor lods adc mov pop adc sti dec test adc sub mov (bad) (bad) mov mov mov jae,pt dec mov pop push cli ljmp lods sub pop dec call (bad) idivl cld pop lods and (bad) (bad) ljmp adc inc sbb mov test sbb fsubrs sahf jo pop (bad) (bad) (bad) (bad) in dec pushf pop cs dec sbb test hlt xchg insl sub xor lahf pop data16 fstpt (bad) (bad) mov adc dec push aas sbb sbb mov dec rol adc (bad) (bad) pushl cmp xchg cmp rcl and pop (bad) scas cmp mov popa sbb outsb inc sbb cmp mov push insl sbb (bad) (bad) (bad) (bad) ljmp add fs mov insb ja ficomp in inc xchg xchg xor mov cmp pushl rcl ljmp das pusha adc aaa ljmp mov leave fild or dec testb sbb cmp add jg lcall mov or sub fimul and cld aaa dec movb jb inc sbb pusha (bad) (bad) pushl push jb xchg sub mov xchg xor lcall loopne mov repnz (bad) (bad) (bad) incl cmpb xchg mov je fnstenv xchg jl or jnp push (bad) idiv sbb pop jbe mov push cmp lods outsl add inc rclb sbb cmpsb adc (bad) (bad) push and (bad) lret or aas mov fs std xchg daa ficompl inc cmp and cmp (bad) (bad) xchg pop dec jno leave mov lcall jns addr16 (bad) (bad) (bad) (bad) jmp cli mov fsts fwait pop xor loopne pushf add (bad) aad daa mov rorl xchg (bad) (bad) (bad) decl cwtl scas cmp cmp mov ljmp add out sub xchg (bad) loopne add (bad) (bad) pushl bound xchg lret mov nop jnp pop lds xor mov jecxz addb icebp int xlat ljmp mov movsb aaa dec jmp imul xchg jecxz addr16 out leave lret iret push add daa pop es xchg jo insl call mov fistpl jp pusha movsb jmp pusha add mov dec push cmp push xchg cmpsl add fyl2x jae out (bad) mov inc aas outsl jbe sti (bad) dec add lock and mov ret inc int push xchg and js xor (bad) (bad) (bad) (bad) out mov adc test popf nop xor (bad) or add and jecxz data16 mov (bad) jne (bad) ljmp repnz add push sti (bad) cmp push cmp aam push ss (bad) call pop mov xchg out popf repnz inc push clc push pop xor icebp decl mov insb es pushf test test push jns (bad) (bad) call in jmp setp mov mov cmp add stos adc jg and leave cmp in (bad) (bad) call insl inc addr16 lea out mov adc js mov push (bad) (bad) (bad) ljmp mov shrb stos mov mov adc (bad) mov dec shlw imul push push repnz cmp je (bad) (bad) pushl or jnp fstp mov and xchg xchg stc repz call cld (bad) (bad) (bad) jmp dec pop jg out ret je cmp cld xor push arpl jo or (bad) fidivl out (bad) lcall xchg test mov dec inc cli pop sub pop and insb pushf or add (bad) (bad) js test xchg cmpsl xor and sti sub dec stos sbb jle xchg (bad) (bad) mov pusha iret pop adc and add mov sub fadds test (bad) (bad) (bad) ljmp push (bad) fadds mov and sub lds mov stc insb jl js xchg lods (bad) pushl mov jns push ret xor addl mov loope xor and push movsb jl (bad) inc out out fidivrl aaa cld dec repz imul outsb cs hlt mov jmp cmp (bad) jmp lahf (bad) cmp nop daa bound aam cmpsl mov adc std (bad) (bad) out jb mov add push mov dec popa push cmp jo stos fsin (bad) (bad) mov test add (bad) push loop inc mov arpl cmp std mov xchg mov sar cli inc xchg ljmp imul ja,pt call cmp mov sbb add (bad) lcall (bad) jge add pop mov cmp jecxz repz cli (bad) jg decl roll sub and std insb cmp xor imul (bad) (bad) pushl sbb pop mov sbb aaa sub hlt sbb xchg or push (bad) decl addr16 int inc js shlb xchg or adc (bad) (bad) (bad) lcall (bad) jl lcall add xor enter pop lock stos lcall lock inc add adc sub (bad) (bad) lcall adc (bad) and dec aad movb js jnp xchg dec movlps (bad) aad pop push (bad) (bad) (bad) lcall or xchg out sbb sbb adc push loope sti in jbe stos adc sti sar (bad) (bad) jmp (bad) stos cmpsb cli adc imul cmp jo loope mov and arpl and fcomip jmp pop cmp jmp ja jp repnz packuswb push loopne clc jg clc sbb jo jl ret jnp nop (bad) decl pop mov pop (bad) bound pop adc jle ret (bad) (bad) pushl fadd out push mov in dec jle add sub cmp push lods (bad) (bad) incl addl mov pusha fwait cmp mull in adc int3 push incl fdivs dec mov js cmp out repnz cmp aas hlt clc int3 es pushl pushf inc push aam out lock (bad) mov or fwait inc in popa or (bad) (bad) inc lea mov loop pop xlat cltd je cli dec dec pop push fwait scas jle jl call lods push and xor jl jo pop lods adc mov (bad) in call xchg jbe jb jbe cmpsb mov ret out addr16 dec in (bad) lcall cmpsb adc sub adc rol (bad) inc mov dec lea (bad) (bad) jmp sub out ds scas movsl sub in cld out (bad) (bad) (bad) cmp repnz xchg ret cmp or mov push test mov jne add mov call and jb fist mov rcrb repnz cld cltd sar incl jmp inc push cwtl pop mov cli (bad) lret fwait das pop loopne int3 int cld pushl pop xor mov cmp test and sarb (bad) jg idivb gs cmp into outsb cmp pushf mov mov dec call sub jmp (bad) (bad) (bad) dec ret or lods dec (bad) push pusha xchg mov outsl enter cmpsl insl popf mov lret iret jge or jmp sbb popa pop out fs jmp push and sub ret insl std pop pop fwait cmp add (bad) (bad) (bad) out pop aas dec ret pop dec sub sub popa stc mov sub or ret (bad) (bad) (bad) dec popf in scas jns adc and test (bad) mov mov xor andl dec sbb faddp dec xor adcb ficompl or or pop sub je int ja (bad) stos jne (bad) (bad) (bad) (bad) mov dec sub sub pop je sti adc leave aas adc mov js fmulp xor mov mov ret cltd adc adc jl (bad) (bad) lcall pop stc in repnz fistpll pop and cmp std (bad) fsubrl mov repz xchg ljmp mov jge insl sarl xchg call mov insl mov (bad) (bad) decl sbb popf insb aaa pop enter cwtl jnp dec popl ffreep sub xchg (bad) (bad) (bad) jmp (bad) mov xor pusha and in adc jmp lahf ljmp sar imul cmp dec leave inc outsb shll (bad) mov daa adc sbb or add mov jge (bad) (bad) (bad) decl fild push (bad) into sar iret sbb pop add sti cli cmpsl xchg das stos call (bad) (bad) (bad) push dec das push push and sub pop cmp jbe xchg push push push mov mov or adc call push mov jbe jne pop (bad) (bad) (bad) call repnz mov iret subb xchg pop and pop mov fsub (bad) (bad) (bad) (bad) cld adc pop xchg imul mov movsb mov xchg mov xor icebp jle (bad) ljmp leave imul jo dec push mov fistl movsb in and lods (bad) mov push push xlat int push fidiv sahf (bad) (bad) (bad) jg pop xor lahf mov add lods movsl int imul mov sub pop sbb popf (bad) (bad) (bad) (bad) jns mov insb sahf les notb std popf test test xchg xor push sub dec lock jnp xor repz int3 adc aas fimul (bad) (bad) (bad) inc lea fsubl bound in insb fs and dec mov (bad) or sbb in (bad) call loopne addps mov add icebp xlat mov (bad) push or xor (bad) (bad) (bad) (bad) jl push cmp fwait dec roll dec sub jns inc sub xchg mov (bad) (bad) (bad) (bad) jnp ljmp push sbb mov cmp movhps jp lcall decl dec outsb push pushf iret sbb addb add xor dec mov push (bad) (bad) (bad) call test scas dec adc rorl dec pop ljmp pop xchg scas sbb loope sti shrb hlt (bad) pushl fistp std xor or iret mov pop (bad) (bad) incl pop outsl cli cltd out rolb pop mov dec ljmp push mov inc inc je rcrb sub dec inc das or stc push fidivl push popf movb (bad) mov mov fucom outsb (bad) (bad) (bad) ljmp insb pop mov je clc sbb inc lds jo nop clc stc cmp pop xchg (bad) addr16 inc sti sub mov jbe call (bad) (bad) (bad) fistpll sub adc mov push in sbb and jg hlt leave lds movsl cmp mov inc xor (bad) (bad) decl imul mov jb mov insl sbb stos enter mov insb das add push or cli loopne call popf int mov push pop inc pop mov pop lret xchg into pop les fstl cld (bad) inc pop add jmp mov sarl jno repnz fcoml pop pop ljmp ljmp pop repnz cmpsb jge movsl outsl or mov stos jno cs add mov (bad) dec cmp mov push lahf inc (bad) sti sarb fldt xor pop (bad) (bad) (bad) (bad) jge cwtl mov add mulb lea aad add xchg outsb in aas stc out ja jge (bad) (bad) (bad) jmp sbb cld or jg rolb decl mov add sti sbb cmp (bad) (bad) decl sub and or cmc out scas js mov out jno cmp push pop sub lea (bad) (bad) (bad) lcall inc cli mov xchg dec loope sbb fdivrl imul js add sahf imul (bad) (bad) mov or jmp push cli ret add (bad) icebp test outsb and push jne pushl cld sbb jmpw xor (bad) movsb pushf cmpsl pushf mov rcr in lcall pop cli and sbb push ss cmpsl cmc ss cli (bad) (bad) (bad) lcall rorl stos push out xor jns xchg cmpsb sub mov (bad) cld push (bad) fstp mov (bad) mov mov xchg loopne pop pop (bad) jle inc out mov inc mov add xor shr and jle push xor mov jge bound (bad) decl adc add jp popf push xor mov (bad) mov jp (bad) (bad) (bad) js paddusb aam cli (bad) xlat xchg rorb into dec push mov xor jo sar (bad) decl fwait pop outsb and or test scas (bad) int insb sarl and jg in test daa loope jne mov not cltd icebp ret out imul (bad) (bad) (bad) inc cmp jp adc jnp cmpsb adc (bad) (bad) mov jb aaa mov pop jnp sbb aas (bad) (bad) (bad) decl pushf adc js xchg sub inc insb push xchg sbb out js fwait xor pop dec (bad) (bad) stc jge sbb enter fdivs inc gs xchg cmc ffree push xor pop sbb out push xchg fmuls cmp dec loopne xorl jecxz and rcr push pop (bad) (bad) decl adc loop mov cmpsl mov push rcrb push int3 (bad) enter clc (bad) decl decb xchg sbb jo test (bad) mov sbb js scas (bad) (bad) (bad) decl push jle scas loope or test cmp ljmp sub movsl sub icebp (bad) pushl aaa stos xchg cmp roll xor xchg lock push mov xor mov jg lcall dec adc imul dec pop xor push push loopne jg test sar (bad) (bad) lcall push push sbb std fmuls icebp movb ret fsubs test lcall scas mov xchg xor cli mov jg mov jbe mov repz or add mov out pop jbe out mov (bad) ljmp jo push add pop std push cmp sub enter clc lods test cltd or imul ds mov push dec nop (bad) adc ljmp movsl pushf std jnp push jle cld (bad) fisttp mov orb stc imul ret jo pop rorl pop xlat (bad) pushl dec imulb push dec fidivr and arpl lea mov (bad) (bad) decl jl arpl jge idivb cbtw mov adc scas (bad) (bad) (bad) lcall sarl sti int push inc mov mov sub pop sbb aad xchg pop push dec mov loope (bad) pushl mov lret sub inc lods rolb mov mov mov sar (bad) jmp fmull dec enter cltd (bad) mov pop dec mov xor sbb mov jg jl mov loope xor test daa dec xchg push bound (bad) push cltd xchg push mov sar (bad) (bad) pop mov xchg popa sbb cli and xor mov or jg (bad) out ss jo lcall dec pop push xor push sar (bad) call xchg and fnstenv shr outsb sarb cmc xor mov lds aam (bad) (bad) (bad) cld imul push and mov or (bad) jo add (bad) (bad) (bad) call cmp xchg jge mov sub xchg call jnp cmp adcl cmp dec mov add inc cmc push sbb dec or outsl scas push cmp pop stos ja (bad) (bad) mov je in scas mov push jp xchg imul (bad) (bad) lcall ds outsb (bad) cmp sbb jl lods cltd sub (bad) jp (bad) (bad) lcall add mov push and pushf dec mov jae lahf faddl adc (bad) (bad) mov jb dec fnsave and movsl rcrb loopne jmp push cmp pushf (bad) call stos fwait pop xchg int3 push sbb adc jnp stos (bad) push fadds pop hlt pushl and mov ficom hlt enter mov jo xlat (bad) push std (bad) ljmp or xchg in out mov das xor fsubs (bad) call ficompl mov lret gs dec add loopne xchg aam jbe xor mov imul (bad) (bad) call cmp fsubl cmc add fisubr push (bad) divl xor xchg cmp or into ja aam adc mov push icebp inc xchg inc push jecxz (bad) ljmp shll mov add fidivrl (bad) sbb inc clc sahf lcall (bad) mov and leave adc pop in sub mov mov test (bad) lcall mov jg arpl aaa negl jge push xor jecxz mov xor fcmovnb lcall jns mov movsl fcos (bad) (bad) call xchg sbb ret cmp inc movsl push mov lcall mov sbb dec scas pop and inc stos cmp push mov int3 inc icebp rorl out outsl (bad) jg push push test lahf cmp pusha call fbld lods jbe (bad) (bad) (bad) decl hlt jnp scas jl or aad adc xor inc (bad) pushl ds movsb leave repnz push in add jnp cltd mov jb or clc jl ret jecxz,pt in hlt rcr or rolb enter pop mov (bad) decl arpl add mov xor push dec jmp sub dec mov xchg aad (bad) (bad) jg out stos xlat sub stc add sub sahf jmp lcall (bad) (bad) (bad) call mov lahf add div sub mov les sbb jmp ja mov std or sarl (bad) fisttp xchg and xor (bad) mov ljmp hlt (bad) (bad) mov inc adc cli imul xchg jae in or ds pandn pop xchg ss add imul iret mov test (bad) decl fdivrl dec inc mov push (bad) negl push (bad) (bad) (bad) jmp push fwait push pop popa sub mov cmp push sub bound flds jmp ljmp imul (bad) mov imul push adc jmp in sbb mov and (bad) (bad) (bad) (bad) sti outsl pop add jne loop push and fcomi mov insl dec mov mov pop dec in (bad) (bad) (bad) jmp dec adc inc lds sbb push lcall call and clc xchg popf (bad) (bad) (bad) jmp inc inc inc clc (bad) jecxz sarl popf mov lea or cmp (bad) (bad) (bad) decl dec xchg into jbe push sarl mov cmp sub ret movsl lods cmp dec jbe mov jmp je jl pop dec ficom data16 dec push rcrb fcmovb and pop out mov aaa outsl loope xchg pusha push inc mov sar push cmc mov pop mov (bad) ljmp cmp loope xchg inc loop xor and sub scas jmp (bad) sub mull sbb call in or mov inc jnp in es call mov stos sbb (bad) ror or (bad) jmp pop push sbb lea push inc in aaa rorl (bad) ljmp popa pop popf mov jb,pt push push (bad) dec outsl lahf push ret fisubrl jl cltd adc decl (bad) push pop sub mov xchg mov and push dec stc jae dec movsb lret sub in (bad) ss lret pushf adc adc push xchg aaa adc mov outsl js (bad) fwait rorb (bad) (bad) push push cmp push mov adc sti push icebp mov movsb adcl aas pop (bad) mov test mov das imul xor std in (bad) (bad) incl lods lods cmp sub sahf fstl aam pop clc aas jbe out mov dec repz jae (bad) (bad) dec push cmpsb insb cmpsl xorl inc lds (bad) push btr shlb (bad) xchg repnz loopne xor dec push (bad) (bad) (bad) call lcall movl je dec icebp dec sbb ja pop pop cmp pushl inc ret fisubr aaa mov and xor ja call lahf test stc xchg aas (bad) or gs (bad) (bad) (bad) mov fwait mov adc outsl xor loop,pn (bad) fwait in add stos or mov pusha mov fcomp sub xchg nop lea add push jle insb mov push sub enter and dec icebp or push stos (bad) lcall jp push cmp push movl mov add add or sbb ljmp imul movsb aam xor out aas nop pusha push xchg stos push pop xor test mov mov xchg adc cli sub clc mov xchg movsb lods decl (bad) call aad call xor test cmpsb inc mov nop push dec mov cs push push push ds cmp and (bad) (bad) (bad) ljmp (bad) je in out xchg sub outsb les pop dec cmp cmp adc inc and incl dec ja out jg mov xchg popf mov mov inc idivl mov cli mov call mov xchg mov jecxz or sbb and (bad) incl jo fistp and aaa cmpsb jg inc xor (bad) (bad) (bad) (bad) jmp or or mov movsb inc and std out jp jno mov (bad) push rolb call push xchg xor add dec ja cs pop xor mov inc cmp mov mov push test cwtl loop je sbb (bad) out es (bad) incl mov ds test mov mov scas out lock cmc cli cmp incl add aad inc cmp sbb jo cmp jp pop or (bad) (bad) out sub mov jnp push arpl das mov shr push push outsl dec cld (bad) decl inc outsl test xchg push dec daa inc leave into adc nop pop mov (bad) (bad) (bad) aas push adc into cwtl mov daa xor adc mov dec (bad) (bad) (bad) (bad) cmp mov mov lods mov jo sbb jns adc mov decl clc pusha pop out into repz and shr std dec dec inc sub (bad) (bad) ljmp mov (bad) push mov push sub shlb (bad) cmpsb lods jp (bad) (bad) lcall (bad) fdivrs mov or pop push dec pop dec jmp xchg (bad) fdivrl dec xchg (bad) ljmp les or mov addr16 adc push mov pop adc and mov push (bad) (bad) (bad) incl in add jb jl daa out pop std (bad) mov inc js add ja inc inc sub fistpl outsl ljmp (bad) js (bad) (bad) (bad) (bad) ljmp dec mov add mov push loopne pop movsl sti push arpl inc std (bad) (bad) jmp (bad) mov xchg lea popf or fisubl xor shll (bad) cmp sub mov fsubl mov xor (bad) (bad) mov lea add (bad) (bad) (bad) pushl dec pop inc xchg jb sti (bad) xor sub shrb rcrb notl and mov (bad) (bad) stc cli mov or jecxz iret cmpsb xor pop xchg (bad) movsb (bad) rcrb pop add (bad) ljmp adc into int3 xor pop push (bad) sub push gs (bad) (bad) jg sbb mov inc sub push insl mov into push inc (bad) insl cmpsl cmp (bad) (bad) (bad) cmp cmp xadd stc inc adc jecxz mov add cld int3 push (bad) (bad) (bad) call jb (bad) xor repnz jns add ret imul ljmp inc aas mov es (bad) (bad) (bad) jl test cmp pop push pop cwtl addr16 int3 mov xchg xchg fcomi (bad) and inc push loop and (bad) pushl pop rclb jno xchg cld fcomp daa stos mov imul arpl out or (bad) icebp (bad) decl jle adc in sahf iret test mov xchg incl lahf lea xor mov nop pop jae lods fisubr inc dec mov (bad) sub or push jb (bad) (bad) jg mov push fldl mov mov jo sub cmp sbb (bad) sub popf sar mov aam jg testl pop ljmp call lret mov incl sbb jo lods cmp lcall into xchg rep sub mov inc test aas enter jl out insl push psllq mov sar (bad) decl xchg into hlt jno aad out gs mov loop xchg push or (bad) (bad) mov js addr16 mov jne aas popa loopne int3 imul (bad) (bad) (bad) call pusha pop aad push add pop aam out pop stos imul fistl push adc out (bad) (bad) (bad) call mov sahf movsb adc xchg fidivr rorl fsubrl in xchg in jae add (bad) jmp lock mov data16 data16 (bad) (bad) mov sub xlat sub mov lcall pop xlat lret mov addr16 sub ljmp lret cmp and push pop pop aam popf cmp ljmp and cmpsl dec fadds sti lock mov xchg cld sar push insl or pop jmp es jge arpl lret ljmp fs inc rclb aam iret nop cmp mov imul sbb (bad) decl inc shlb cmp add enter push mov mov (bad) (bad) inc inc fcmovu or adc push mov mov push mov cmp mov xchg (bad) fnstcw mov mov inc add mov sub ljmp imul nop add xchg ja sub shrb ror (bad) (bad) (bad) lcall add cmp pushf pusha sub cmpsl mov ret insb cmpsl jle add (bad) (bad) mov fcoml inc fcomps cmpl rcrl xchg mov arpl scas adc push or and (bad) je mov fnstsw dec addr16 adc add fisttp (bad) lcall adc inc mov sub mov (bad) (bad) decl jmp movsb cwtl xchg inc cmc shrb fsubr jno nop jb adc (bad) pushl test call test int3 aaa icebp orb sub inc mov decl lock jle loopne and or stos aaa mov pop nop out (bad) (bad) (bad) incl cltd mov dec inc pop clc (bad) roll pop in dec mov out mov mov jno sub xchg repnz mov pusha pop mov (bad) (bad) decl shrb sbb mov push into nop adc sub inc inc scas xor mov (bad) (bad) (bad) incl cmp jp pop add fstpt (bad) xchg cs or aas push iret stos rcrb ds cmp (bad) jge sti iret or sbb jl or test sub inc sub mov sbb adc push lds sbb test rolb pop pop (bad) (bad) (bad) incl jnp jb lret test xorb pop cmp push in daa arpl sub (bad) lcall adcl mov sub aas ja je clc sbb fdivrs test push loope (bad) jmp nop enter mov or ffree xchg sti icebp mov (bad) mov cli stos and pop cmp into cltd clc (bad) ljmp mov xchg pop lock (bad) jmp (bad) (bad) incl insl movsl hlt ror arpl cli adc pop cld insb (bad) ret (bad) jmp mov mov push pop (bad) lea fmul add push push fdivrl cwtl add xchg scas mov adc push enter les inc loopne (bad) (bad) call popa in push xchg cltd add xchg int3 popf fdivrl fbstp inc js out add sub xchg cmp mov lret inc (bad) jne inc inc jle aam loope cmp mov nop jle (bad) decl xchg cld stos or je dec cmp call xchg jecxz and xchg (bad) mov sbb push and mov pusha mov pop pop hlt (bad) ljmp mov cmp loope dec xchg repnz movsb fimull call test mov ds nop fs mov cs aaa fsub push lock pushl mov mov push and inc sub inc sub dec dec stc xchg cmp or dec or (bad) out fisttp dec inc gs push pop mov and xor xchg stos inc stc xchg out or scas mull outsl test hlt add (bad) (bad) (bad) call jns out xor lcall (bad) pushf mov mov sub (bad) (bad) in hlt and adc outsb and loopne mov dec fld (bad) adc mov push adc (bad) call sub cli je sub push insl cltd (bad) push nop adc (bad) loopne test (bad) (bad) lcall int3 js or push mov mov inc pop mov in jp mov dec ds inc dec repz mov jge in cmc jb dec ss and adc movsb jle or mov push add cwtl fcompl das mov out ljmp clc (bad) pop cmp lds stos addr16 (bad) (bad) incl (bad) movsl mov cmp les pop movsb or (bad) (bad) (bad) mov int3 cmpsb imul ljmp fstpl dec stos loopne push dec pop clc cmp imul push or aad adc aas aaa hlt cmp push and aas pushf xchg jb cmp mov ret fprem popa std (bad) jmp (bad) push jle dec scas dec std cmp insl add jg (bad) gs imul add imul loop mov xchg (bad) jg (bad) and pop sub push inc in cmp mov add pop mov adc std (bad) dec sub insl imul movsl inc adc test (bad) incl or and jle insb xor sbb outsb iret ret pcmpgtd daa test (bad) (bad) pushl in (bad) lahf adc test jecxz mov cs ss dec jnp add or xor push mov inc adc ss call push nop in movsl jle incl inc mov cmp inc xor pop pop (bad) (bad) (bad) jmp mov inc mov inc movsl cmp mov jae aas pop add sbb movsl sarb pop xchg jl xor adc fiaddl mov fistp movsb (bad) (bad) (bad) mov fs loope and mov xchg dec (bad) (bad) mov in nop mov xor inc mov aaa mov xchg leave cmpsl ljmp xchg dec aad sbb cmc push sbb lea sub mov sbb fnstsw and ds setb int3 (bad) lcall inc testb enter ss pop and inc cs pop cmp sub (bad) (bad) decl mov imul and aad lock stos xchg sbb jb fnsave ljmp mov (bad) (bad) pushl ret popf and fistp int3 mov (bad) aaa xchg cmp pop jae dec add pop or pushl (bad) mov movd arpl aad push xor adc aam push movsl sub idivb cmp and outsl xchg push ret (bad) (bad) pushl loopne clc in inc push lret dec bound mov aad or out sub bound (bad) jg fidivr repnz sub rorb jne das cli (bad) push or pop and mov arpl xchg add je (bad) (bad) (bad) call pop mov out out in mov lods sbb in fmuls cmp mov (bad) (bad) (bad) incl lods aad push mov ds (bad) enter dec lcall arpl pop fisttpl mov mov rol call roll adc test cmp add imulb jmp aad sub xchg add out xchg xor adc (bad) decl out fs dec lds inc and sbb les sub insb (bad) aam push lock push xchg shl mov push xor pop in and jge cmp or adcb (bad) stos shlb call sbb je (bad) ljmp mov add sub sarl jecxz aas jne (bad) (bad) (bad) (bad) cli cmp cmp mov or clc adc mov imul sub add and (bad) (bad) jmp lds add sahf rclb jmp test fcomps pop flds loope call sbb sub addl push (bad) (bad) (bad) (bad) mov fist fwait jg xchg jno loop and pop test inc enter ljmp sub mov cli mov icebp add jecxz mov ja popa ds sarb dec xchg out dec stos jo sub inc add sub lahf pop cwtl jp pop enter (bad) (bad) (bad) mov (bad) sub insl and test js push add insl inc outsl (bad) mov test pop inc add rclb int (bad) (bad) (bad) decl imul cmp test add testl in stos call ljmp div aas xchg pop jg aam jp xchg fadds lods or iret or aaa cld sub les cmp sub lock (bad) pushl mov ds repz fdivs icebp add mov jne outsl (bad) (bad) cmp cmpsb pop adc mov pop fsubs fisubr push decb mov cmp faddl push sub or notl push dec cs pop mov (bad) (bad) mov or (bad) mov in out (bad) (bad) decl jns out fstl leave sub pop lods sub adc mov out lods (bad) decl (bad) lods fisubr pop mov xchg test in mov adc xchg pushf sub xchg lret (bad) pushl sbb movsl (bad) loop pop and push mov jns dec lods adc out jae adc (bad) (bad) pushl sub add mov add cmp jg push jg in add mov fs jmp mov sub clc (bad) loope fs pusha push xor mov jnp testb lret inc (bad) (bad) (bad) jmp loopne outsl negb mov ds insl scas imul inc hlt mov mov dec jnp das out ss das inc lcall dec cmp lcall scas and (bad) decl push addr16 mov scas ret and sbb push (bad) (bad) lcall les mov xor push xchg test orb outsl mov aas or jne subb jl pop repz aad clc jmp and inc xchg xchg inc cld sarl out js dec ret mov pop mov or jmp cmc mov (bad) (bad) push xchg iret push icebp (bad) pusha pop shrl push imul call lods sbb inc push (bad) ljmp shlb adc lods int3 inc or jmp leave adc (bad) (bad) cmp inc sahf xchg outsl iret gs sbb mov push cmp (bad) (bad) decl ljmp cli push icebp dec hlt mov jns cli out inc pop out (bad) (bad) (bad) call mov jo push mov fisubrl add xchg or and inc je (bad) (bad) (bad) pushl jp add enter sub loopne jle (bad) fsubrs stos xor mov (bad) ljmp imul fwait push loop cltd sbb jp into loop clc pop lcall xchg mov andl push jo (bad) jp repz jb scas cmpsb mov mov push push ror (bad) (bad) (bad) jmp les push or push repnz incl pop cwtl and jae scas add (bad) xchg jno dec mov aas xor push adc (bad) (bad) lcall dec jmp shr mov cmp inc movsl or and pop stos dec std cmpsb or inc cld cmp imul or fiadd fdivp (bad) (bad) inc mov enter leave and mov call jl int jle std int outsl clc (bad) jmp stc mov jae data16 xchg fdivl les (bad) loope ljmp dec je (bad) and mov movsl pop jns xchg out loopne sub into dec sub jmp jecxz cmp call mov (bad) ficomp ss push daa js push push pop jg cld jl cmp pop or stc insb lock ja add mov (bad) push xor lods cmp (bad) (bad) lcall gs fimull jns cmp push push loopne xor fwait aam test adc mov (bad) push xchg lock (bad) xchg pop dec mov or mov dec pop stc jae sbb incb nop lds cltd adc cmp sahf sub dec (bad) (bad) (bad) incl stos bound test les sbb stos cmp inc and mov sbb (bad) jg pushl xor cmp shrb cmp sbb cmp je outsb sbb or leave fs test jbe cltd (bad) (bad) (bad) push adc mov pusha mov pop sbbl and shrb pop into fs pop add (bad) (bad) call push repnz push in push ss leave mov or test mov (bad) jmp sub loopne pushf inc jne mov adc test pop fdiv sub xchg (bad) sbb stos (bad) (bad) (bad) jmp ljmp or lds sbb sub sub aam adc jbe (bad) pop iret mov call sti sbb nop sbb (bad) pop jbe out dec add add pop adc gs mov pop pop out lods mov pop in mov jecxz sbb mov jl aam out mov and (bad) decl jle jbe in outsb pop jbe pop adc mov in inc jb lods mov mov mov testl sbb xor outsl lret xchg or mov mov sbb rcrl (bad) (bad) jg clc insb sbb inc dec inc sbb xor cltd mov bound out (bad) (bad) (bad) call mov mov mov or negl icebp pop sub jns push xor push cwtl jb hlt (bad) (bad) (bad) mov pushf mov pop movsb cmp je outsl outsl cmc inc imul subl in add scas pusha (bad) (bad) incl (bad) sarb adc dec inc dec sbbl lahf mov (bad) lcall xor lret sar push call test and sbb inc adc or xchg aad cmc ljmp arpl ret inc movsl (bad) loopne shll (bad) fcmovne je xor shll lret clc js jb iret aas mov fimul jle ss std (bad) dec add mov jo (bad) aam scas push jp jo nop bound call add or (bad) push cmp in cmp stos pop mov adc (bad) (bad) in repz (bad) (bad) rclb jae rorb xor and jbe lret mov incl lret pop mov and fs pop aas and shr pop lock (bad) mov jne pop sbb push mov enter mov pop cmc sub decl cwtl adc and mov mov and fdivr movsb (bad) (bad) (bad) fistpll es iret pop icebp stos movsl das push (bad) pop cmp xchg push jbe scas inc (bad) nop pop jle (bad) mov xchg sahf shrb nop enter (bad) (bad) mov adc popf aaa dec fs sbb jbe xchg sub aam push push ret (bad) lcall cmpl mov jb mov adc and xchg and cmp sar (bad) (bad) (bad) fld1 cmp lock cmp mov repnz or pop lock lcall incl mov test fisttpl jnp call aas stos popf adc (bad) (bad) incl mov or movsb push fbld test xchg adcl dec imul pushl nop (bad) decb jecxz dec dec push subl push stos mov mov aas into xchg out mov (bad) (bad) fdivl sbb push pop popl xorb shl js dec push adc jecxz (bad) (bad) (bad) ljmp das jnp call in and push movsl or sub push gs (bad) lcall jns lds sub lret push inc xchg clc lcall push add or cmp jmp aaa mov roll pop mov lock push lret jge fs (bad) (bad) inc pop jbe test test jg rolb (bad) mov addr16 incl test xadd jmp add jp cwtl and stos or mov adcl mov sti incl fidivl jle,pt test js cmp and or repnz arpl pop push int inc orl daa fsubr pusha ja cmpsb dec mov insb push xchg jo add mov movl dec lret fptan mov sbb dec xchg test call lcall ret xchg sti les stos je pop mov adc xchg (bad) adc dec dec xor stos or jg push (bad) cmp out xchg in xor and lret jle std (bad) into lret fimull jnp (bad) je (bad) (bad) (bad) jg sbb (bad) push jno mov test in test mov mov dec aas (bad) (bad) (bad) (bad) mov stc in and push je push es push movsl jecxz test cli imul (bad) dec push cmp (bad) in cmp jmp pop into test lret mov scas pop rorl std mov adc in fildl pop mov (bad) out fidivrl popf jle das push xchg push dec mov test enter lahf xor sarb (bad) mov mov scas mov aas aas xchg aam pop inc or hlt mov (bad) (bad) (bad) jmp push sub mov leave and test dec push cmp xor repnz (bad) jmp fwait mov add or xlat mov inc lret pop cmpsb test mov sub fwait jg int in ret out std (bad) (bad) fisttpl addr16 popf fs insb icebp sbb dec push push popa cmp leave (bad) (bad) call outsb imul aaa (bad) (bad) popf add imul inc inc sti inc mov out hlt leave lcall sbb dec lods (bad) dec jno aaa pushf adc and ret or popa loop cmc std stos enter inc mov pop (bad) xchg lret cltd pop enter (bad) (bad) (bad) (bad) jge ja dec xchg frstor addr16 or mov pop mov movsb (bad) pop sbb and repnz mov fisttp sbb xchg mov push and jecxz sbb sub pop dec cld xchg fnstenv ds int mov loope fs or cmp aaa cmp or (bad) (bad) ljmp mov aad add sbbb lret popf cmp mov mov dec ja push sub popaw int3 es fcmovnu iret pop inc dec xchg jge lods mov (bad) (bad) (bad) (bad) jmp movsb ss mov stos gs shll mov mov adc sub and stos xchg (bad) (bad) decl mov sbb bound push hlt aam or dec mov out xor adc jmp xchg out ljmp mov and repz femms pop xor or (bad) (bad) (bad) ljmp xor push out outsl into cmp push add dec pop fdivrs imul adc imul mov dec ljmp andl enter inc js (bad) (bad) lcall mov push scas idivb (bad) mov lods add daa (bad) (bad) (bad) (bad) cmp pop bound jge push add int aas dec aad lods mov push mov (bad) (bad) (bad) jle lretw shrb (bad) incl cmp or sub popf mov cli and sub add (bad) out inc or jmp dec sahf dec bound cmp pop subl (bad) dec repz push push lods mov ds xchg imul xor icebp mov (bad) (bad) cmp xchg nop jmp mov pop adc repz inc inc cmpsb imulb fcompl (bad) (bad) decl fbstp dec (bad) pop cmp jle dec (bad) xchg in dec (bad) (bad) (bad) (bad) fldl icebp jb or mov sbb sbbl lcall (bad) incl sbb sub pop inc fldl mov arpl jp push sti pushl pushl insl je nop fildl mov es jle jb pop pushf out push sub loope sub sub addr16 mov or jle fistpl add insb adc movsb push loopne push (bad) (bad) adc (bad) (bad) mov pop dec and add (bad) enter sbb push sti cld inc or cld mov push enter in mov xor movsb pusha xchg in addr16 loopne (bad) (bad) (bad) call add cmp adc mov jae sbb xor sbb flds adc ljmp mov inc add arpl sbb in imul (bad) (bad) out xchg xlat push add inc clc jl cmp fwait aad (bad) jbe jecxz arpl testl jmp pop repz mov xchg inc inc push mov mov ja adc push mov pop xchg std pop xchg xor (bad) incl push outsb adc out and jo repz call movsb mov cmp fistpll mov sbb mov jp or mov ljmp movsb fbld pop test mov mov adc (bad) inc inc mov jge bts mov cmp hlt sub pop mov test sbb int3 ds (bad) (bad) (bad) (bad) mov jns inc pop xor mov in mov cmp out cmpl ja (bad) (bad) (bad) jmp push stos jae push adc push int pop inc push aas fdivr cmc dec les adc decl iret add jmp sub pop push leave xchg xchg (bad) and jle in addr16 (bad) (bad) (bad) jge dec xchg outsl sub jne and test or scas jle aad cmpl (bad) cmp das (bad) scas movsl jno ret rorb enter cli std mov pop push (bad) (bad) (bad) ljmp cmc add pusha out push fs insl ror in lock xor jns fs xchg jns push hlt mov mov stos rcr cmp loopne (bad) decl push sub sub mov inc lods nop les insb mov pop dec lods add cld (bad) (bad) (bad) mov mov jg pop scas test movsb cmp cwtl sub (bad) loop into add negl (bad) ljmp ja popf sbb stc aas sbb fwait movzwl push rorb ds (bad) (bad) incl out insl push mov mov pop cwtl add lret fisubr mov jl add (bad) mov sbb lods add stos dec call mov testl adc (bad) (bad) call das dec dec (bad) mov out insl dec bound popa and aaa jl repnz std jg sub mov and jg xchg dec xchg (bad) (bad) mov mov (bad) adc jb in mov stos jp or (bad) (bad) (bad) (bad) fisttp cmp dec push clc add into add mov repnz or rcll sub and (bad) xchg push dec sbb ret sub pop js xor lret dec test (bad) (bad) incl (bad) js lods mov xlat push sub aad mov int3 sub decl lock or das cmp imul repnz popf and mov (bad) (bad) (bad) ljmp dec add sbb push in pop loop mov int3 or inc add lcall mov adc pop scas outsl cwtl iret inc sbb (bad) lcall cmc or or test pop adc xchg sbb fistpll sub in sub dec js fdivr jnp mov pushl mov mov popf ja jns hlt (bad) (bad) call mov (bad) xor jecxz sub ret push repnz add fild scas cmpsl js mov ljmp imul pop daa (bad) (bad) (bad) (bad) (bad) out into fdivs (bad) (bad) cmp shlb push in jo icebp push test out xchg adc jmp cld cli dec stos add xchg jp scas inc mov cmp push in adcl (bad) (bad) (bad) (bad) in mov cs test movsl sahf cmp and lret and adc in (bad) (bad) (bad) (bad) jns cmp sarb ret lret pop pop push push jl jo cwtl jbe call xlat xchg shr insl cs push xchg (bad) ljmp ds mov xor jmp jg jne cmc xchg js mov push leave (bad) (bad) (bad) pushl xor xor insb lcall sub adc sbb popa leave jp lret repz (bad) (bad) ljmp jno xchg cmp out scas jns and xchg add (bad) mov dec pop pop cld cmp fimull ljmp lods mov fsubs lea test in (bad) (bad) (bad) cld fdiv icebp aam cmp outsb in or jg ljmp sbb call mov (bad) (bad) decl loope mov push sbb pop (bad) out pop cmp lds (bad) push xor xchg icebp pusha roll icebp dec ljmp jl (bad) pop jle add and lret int jp inc push into xchg ljmp (bad) fstps mov mov (bad) fistpll nop inc adc push (bad) inc inc push sbb neg mov mov fldenv repz (bad) (bad) (bad) fbstp jbe and sub test cmp lock sub icebp sahf sub (bad) (bad) (bad) mov add les ds pop xor stos sub adc xchg mov ret push sub cmc lret clc pop loopne out inc mov pop inc test mov pop pop or sbb lods jg and loope ret xchg push fildll cld and mov leave jb mov fwait sti (bad) mov xor mov jmp xchg (bad) (bad) pushl inc fcmovnb clc mov fmuls sbb dec push sbb inc pop call out push push subl aam add stos xchg mov (bad) xlat jnp cltd cmc pushf loope lods pop sub ds pop (bad) ljmp or inc fldt adc lahf into pop mov daa (bad) (bad) (bad) push loopne sub stc ret xchg dec scas sbb sbb aaa inc adc add adc pushf sub (bad) (bad) incl xor adc mov and scas cs jb xor dec je xor cmp mov push xchg dec std mov push data16 jmp pop jns (bad) decl ds lret push loope repz cmc sub pop push push js pop (bad) lret inc sbb loopne xor xchg aas ss mov ja sub sbb add test add (bad) pushl or mov push push hlt sub and aas popa test incb cwtl cltd sub loopne (bad) mov (bad) mov iret mov arpl (bad) (bad) (bad) (bad) cld inc push mov cmc fmull daa jno and mov add mov (bad) ljmp sbb xchg das push fstps fidiv lock fildll push adc inc pop push mov mov or les xchg jle out (bad) (bad) (bad) jmp enter jmp add lods or les imul nop and (bad) (bad) call pop pop sbb fsubrl pop (bad) cmp shrl xor cmp outsl clc pop out rcr rcrl xor xchg (bad) mov mov les (bad) (bad) (bad) mov jbe add mov lods aam scas aam adc leave push sub add inc xchg loop incb ret mov int3 add ret jns arpl mov add mov cmp fidivr (bad) (bad) (bad) (bad) fisubr out aad push and adc dec addr16 (bad) dec and jge mov jle add (bad) decl jae inc outsl sahf mov inc cmpl add pop decl adc pushl or mov mov cmp (bad) (bad) (bad) mov sub inc dec popf arpl and aas loop js fistp or or xor (bad) (bad) decl adc out or or xor arpl aam pop mov fistp (bad) (bad) call ret xchg push adcl inc test es jge mov mov inc (bad) (bad) (bad) ljmp cmpsb mov cmp les sub scas or pop add or pop dec (bad) (bad) (bad) push jns sub jecxz sub out push jmp mov fcomi push lcall (bad) jmp xchg (bad) mov das fwait in gs mov add out (bad) (bad) fbld loope into cmpsl or in sub xor aaa mov (bad) ljmp pop inc stc gs dec in movsb int3 aad shld push ljmp sub xchg mov (bad) inc movsl mov mov jmp int mov xchg in pop js jmp dec push lcall movsl pop popf fmuls mov xor mov ljmp pop pop ljmp lcall loop mov loope (bad) std imul cmp repz (bad) (bad) lcall in xchg aam ret push test mov pop popf sbb in (bad) mov fcompl xchg es ja cs cmp popl mov adc shll std insb cmp xor bound ja lret (bad) pop (bad) (bad) (bad) (bad) mov jecxz repz (bad) iret mov xchg aaa lods out leave mov ja (bad) jg ljmp inc xor jne aas push and cmpsb pop fdivs cmpsb fisttpl scas (bad) ljmp fs iret pop notl roll (bad) (bad) mov pop and int3 adc push out hlt or das inc mov and pusha cld push inc loopne inc insl ds stos adc dec negb mov and xchg jnp (bad) lcall mov jp dec pop xchg pop lods fs lock dec or jmp sbb iret pop and cld scas jo xor mov xchg ds pop or dec and mov iret ret sbb xchg pushl cld call (bad) push mov and ds and dec les sbb mov (bad) (bad) (bad) fidiv sub movsl mov mov or leave jl rorb and fsts outsb mov incl fld dec push cld mov aam in in adc shr xchg sahf mov pop (bad) pop loopne in mov fwait pop sarb (bad) mov (bad) (bad) pushl daa or sbb out popf ss mov pushf aam std push mov inc adc inc pop sbb lds sbb pop icebp push es clc out inc mov mov mov (bad) (bad) call push mov mov repnz cld mov pop and sbb inc sub jl cwtl idivb (bad) incl xchg pushf mov and push sbb xchg xchg in cmp inc cli xchg dec xchg ret dec adc or in dec push popa insl popl (bad) (bad) jmp jb push enter cmp mov add pushf mov mov and adc xchg fist (bad) mov mov mov fwait pop and cwtl cmp xchg incl pop cmc mov mov (bad) out outsb lcall (bad) jl int jne cmp dec call cmp cmp add iret es (bad) (bad) cmp lcall add leave icebp xchg mov ss (bad) (bad) incl inc iret aad pop add loopne or imull pusha hlt lods push pop cli ljmp (bad) lcall inc aaa es (bad) mov push xor (bad) test out and sbb mov jmp xchg (bad) lret push rorb push jmp inc xor and mov cwtl loopne mov xor out push push ja (bad) (bad) (bad) jmp or pushf and repz shrl jl push push mov in dec lret scas sub fist (bad) (bad) jmp add insb mov jecxz mov cmp cmp pop sbb in (bad) call cld loope lods jge dec ljmp (bad) hlt aas loopne xlat jp push outsb push orb lock incl mov or es sahf fbstp mov andl mov rcll adc leave mov xor xchg adc (bad) mov xor jg cwtl ja xchg xor mov outsl inc jns jl idivl and fstp pop out mov jmp std (bad) (bad) ljmp ror jg jns add rol xor imul xor xor mov out push push jno add (bad) (bad) incl add xrelease xchg jp,pn mov or clc jno mov inc int3 aam cmovg fnstenv in cld ljmp clc ficom js ret (bad) decl (bad) and loope mov inc outsb sbb aad jmp pop push test (bad) mov inc mov jle mov lcall inc fildl add cmp pop mov xchg cmpsb test mov xchg outsl xor mov (bad) (bad) (bad) pushl loopne icebp lods dec das mov adc out add push test pop jbe std sahf mov (bad) ljmp mov and ret sti aad sti loop mov add cwtl add aad (bad) decl sub test cmp aam cmp daa sarb (bad) (bad) lcall dec test fldl pop nop push dec cmp (bad) sbb repz ficom inc int xlat xchg ljmp ljmp sbb loope or or lods out outsl add sbb xor dec scas xchg test fnstenv (bad) (bad) mov sbb jae fsubl insb mov adc push cli jmp lret inc pusha jo gs (bad) incl sbb test cmp inc add cmp cmc ret mov push jmp mov lcall inc cld mov imul dec jl or push out fwait sub (bad) (bad) ljmp adc test loope xchg push test mov mov add inc popa jle in (bad) (bad) call fbstp mov or mull jae insl or mov (bad) (bad) (bad) incl dec ljmp setl rcrb fisttpll xchg mov sub push (bad) xor stos pop (bad) (bad) jg pusha out add ret sbb (bad) lock dec insl lret ret je stos xchg xchg cmpsb (bad) fcomip jmp push nop fadds sub jl stos stos mov test mov das adc or or dec repz push xchg mov (bad) (bad) (bad) lcall cmp or push mov sbb mov mov mov xlat divb jnp cltd (bad) (bad) jmp sub or pop mov pop xchg sub push mov sbb loop fwait (bad) (bad) ljmp fmull mov cmpsb push push mov or ljmp repz rcrl pop cmp inc pop mov aaa (bad) xlat sbb ds outsl add sub das lea incl push jge out sti jp subl addb jmp clc (bad) cmp cmpsl xchg icebp push sbb sbb inc or inc shrl xchg push cwtl (bad) (bad) (bad) (bad) mov pop cld cmp fcoml test add or adc fisubrl (bad) (bad) (bad) push (bad) mov scas ficoml xor pop pushf jecxz sbb mov jle imul sar (bad) mov adc xorl in adc pop push out lahf adc (bad) jg sahf mov pop mov sbb (bad) shrb arpl ja (bad) (bad) jmp xchg dec adc mov mov in jbe movsl enter (bad) (bad) (bad) incl add sbb jp fwait xchg inc fsubr xor stc mov cmp push ror jle (bad) (bad) (bad) cmp scas pop xor mov jnp or divl or mov sbb scas decl sahf push daa add lret xor and push inc (bad) (bad) (bad) (bad) fldenv push icebp (bad) shlb out repz cmp cmp xor mov xlat (bad) (bad) (bad) inc add adc insb daa pop lret int xchg inc xor in inc lock xor in cwtl pop xchg (bad) (bad) call mov js in jno jmp jge mov jge fsubp jl movsl (bad) (bad) pushl pop sub aas (bad) aam xlat fwait lods adc lret dec adc aam (bad) (bad) lcall fisttp (bad) push add bound sahf insl shl in vminps cld or (bad) (bad) stc push jno mov xchg xchg push je cmp imul js sub negb mov push push lret mulb xlat or add jmp xchg in or inc js push cmpsl loop add mov loopne das sar pop fwait and jnp nop xor push mov pop popa fstpt adc sarl jo clc fisttpl pushf push jae icebp ret push inc adc mov mov movsb (bad) (bad) cld dec loopne sar or ffree pop (bad) jnp xchg test call fimul sub sti (bad) stos das adc mov je shrb sbb imul ficoml add or cld imul (bad) (bad) (bad) jmp (bad) hlt pop or add shl addr16 xor clc mov bound jae (bad) (bad) pushl fldt les add jl dec cmc push repz jne mov xchg jecxz das jg dec clc fs mov or (bad) (bad) (bad) jmp dec inc mov pop adc loopne add push adc (bad) aam pop icebp push pop inc (bad) ljmp xlat xchg fstpl (bad) stos cmp cs and rclb stos (bad) (bad) jmp repz test mov loop sub or sbb adc (bad) (bad) dec das into pop jae pop jae inc mov frstpm(287 mov clc dec xchg sbb dec lahf (bad) jg lcall xchg jmp sbb pop (bad) pop jbe jmp in lret mov lcall ret xchg dec mov sbb hlt es sbb sbb (bad) (bad) out mov jb ret call inc mov lea loope test (bad) (bad) jmp add fdivl adc inc lods movsl mov les es dec lcall (bad) (bad) jns sub push pop (bad) xor in add daa inc mov std push stc jbe or (bad) (bad) (bad) (bad) mov rol inc arpl js jge int3 fcomps and fwait inc (bad) push xchg push fwait push jecxz lcall mov push arpl jecxz sub or dec xor xchg aaa or (bad) mov jno mov pop stos or mov lcall pop fimull ss scas add shrl jno scas dec addr16 repz fwait cli imul pushl sbb sbb add cmp or out ret (bad) (bad) (bad) (bad) call iret jbe cmovnp inc pop jne js sub sbb and (bad) (bad) (bad) inc (bad) hlt test sbb scas cs into mov bound and addr16 pop add out or mov test stos mov stc insl mov sub add cli (bad) lcall cwtl imul (bad) jl jle js loope xchg mov ss (bad) (bad) decl fdecstp push jge adc ljmp pop rclb add std repnz (bad) jmp aam mov push inc lcall push push adc fstps orl add mov add pop pop jle adc ljmp jle sbb mov insb scas or xchg (bad) (bad) (bad) (bad) ljmp dec jae ret ficomp add add sub xor push rcrb (bad) (bad) mov push aaa les scas cmp sbb pop int jnp add sti mov (bad) (bad) ljmp (bad) push mov imul enter dec aas inc xor xchg pop test ds pop mov shl pop mov pop aad mov (bad) (bad) (bad) (bad) (bad) mov mov xchg fcomi cmp push xor loopne (bad) mulb mov call jne or xor jns bound dec push iret iret pop addr16 test (bad) (bad) (bad) jmp inc rclb add das out pushf mov leave cwtl mov lcall pop inc mov das rolb in inc (bad) in (bad) mov mov add lock lcall mull push sarl outsl lods rcl push cmp sahf (bad) (bad) incl es jmp or addr16 mov and testb ja rorb ds js dec jne xchg out xchg adc mov mov add adc mov xchg (bad) jg pushl xchg jo stos lods loopne outsl jp cmp pop pop imull lcall je rclb neg std push xchg mov iret xchg adc mov mov popa aas pushl shlb and das xor mov fistp pop hlt (bad) (bad) fbld je sbb jge adc pop cmp enter div (bad) (bad) (bad) pushl adc out sbb scas push add lcall sbb sub (bad) (bad) lcall mov jno push imul sti pop sub cmp test mov (bad) (bad) jmp cmp jno insb jle jmp lock cmp dec (bad) fcmovb jle pop call loopne stc jecxz loopne (bad) gs add jle xchg repz jo (bad) (bad) inc lock cmp jp iret scas out jae es cmc aam dec lret sub es mov pushl mov adc push gs pop pop lock sub (bad) (bad) ljmp nop mov inc pop xchg push leave xor pop imul cmp pop (bad) out dec dec inc push hlt loop movsl in cmp fbld xchg vandnps jo dec cmpl call cmpsl jge mov mov mov lret test inc fbstp push jnp pop lahf popf insb sbb (bad) (bad) (bad) ljmp pop insb fwait cmp aam cwtl lcall adc popf adc (bad) test cli decl icebp dec jecxz ljmp ds decl pop fldenv sub aaa xor cmpsb (bad) jg decb sbb das ljmp inc xchg dec inc sar stos push mov cmp sbb pop push ljmp and (bad) mov out pop (bad) int3 ret loop push icebp mov pop and ret jp (bad) ljmp fidivl push dec insb (bad) mov push xchg mov inc cmp adc enter (bad) (bad) ljmp mov mov xor pop xor ds das loope xor insl mov inc jmp jle push mov jle xchg inc mul cmpsl mov lcall (bad) or out in jle jno fmuls jp mov or add xor dec test flds arpl mov nop xchg call loopne int3 int3 mov fnsave jbe jle cmpsl sub jb mov xlat (bad) (bad) mov dec and mov and fmull fild jg nop (bad) (bad) (bad) call movsl (bad) adc mov out imul cmp push sub jg pushl xchg mov jns xchg ss aas sbb adc jae js sbb repz jns aam test pushf add inc mov jle pop subb std jg ds add sub loop mov call (bad) aas ret jmp adc or movsb jne push adc shr ljmp sarb xchg and inc je push lahf mov pop push (bad) jg (bad) pop sti mov push adc repnz (bad) lret imul (bad) (bad) (bad) lcall push xlat and in mov jp enter fstps mov and adc (bad) jl xchg push icebp repz push cld and leave jnp rorl (bad) cltd jge sbb cmp into stos and push mov call scas (bad) cltd aad cltd inc cltd mov aad enter push pusha xor cmp sahf pusha clc les cmpsb mov mov outsl hlt sbb sbb mov push jg xchg xor outsb adc enter pop test xor sub or roll xlat das iret fs sub add inc xor inc call (bad) (bad) (bad) pushl adc jo out xlat jne adc inc or out ss dec nop jp ljmp cmp fmuls not loop and and lret in push cmc popf (bad) aad (bad) (bad) (bad) cmp mov out aad (bad) and jo adc ror mov cltd test and (bad) (bad) (bad) dec sti sub (bad) int3 xor lret fistl fistpl push lcall dec scas outsb push (bad) (bad) (bad) lcall push insl insb mov jne movsl inc (bad) pop insl jnp lret pop mov adc and (bad) decl loopne popf es dec mov cld adc (bad) (bad) (bad) mov jo jns add shrb or xchg imul lods adc (bad) pushl icebp pusha and jo jo jo loope and xchg in js jl add inc (bad) (bad) mov out add sub je jge jmp adc pusha push (bad) pop dec mov (bad) decl jge xor and lock pop mov xchg ds or xor jno jae xor sarl ljmp adc and pop mov in rclb pop call ret ss (bad) (bad) (bad) jmp push sub push pushf lds pop test test inc adc mov (bad) pushl jno inc xchg jne mov xchg pusha xor pushf push lcall les fwait add mov test out mov cmpsb mov or jmp rcr sub test ds xor jl jbe xor rorb clc clc xchg (bad) ljmp mov mov inc ror push or jnp and dec lret push push movsl cmp (bad) (bad) call es lahf pop fdivrs int ja inc adc addr16 cmp and (bad) in movsl cmpsl adc clc (bad) call aas jp adc fidivrl int aam ficomp call mov sbb inc xchg sbb loope (bad) rorl andb (bad) (bad) (bad) lcall ds jp sub inc jae idiv xlat clc cmp add ret test sahf mov pop (bad) incl mov push lods adc xor mov push repnz cmp rolb cwtl setb xchg inc lcall stos outsl mov lea ds (bad) ss aad inc fiaddl fbld stos sahf push mov (bad) incl out int jb js xor in hlt daa daa or dec jl dec push (bad) sbb and das clc call mov rcll or out jmp push sub cwtl (bad) mov and mov std insb dec nop pop cltd out (bad) adc (bad) sar (bad) (bad) lcall mov mov add fcoml or pop test mov jmp ja sarb pop test add sbb jne jg insb mov je sahf lods jl mov inc jbe (bad) incl push cmpl mov fimull mov (bad) cmpsl fwait xor (bad) jg jle or repz cmpsl mov dec cs loop push push (bad) (bad) (bad) fcoms mov lock jb mov lret cmp xlat shl sub sar ljmp lea cwtl adc out lahf mov fistp xor rorb (bad) ljmp pop cmpsb xor xchg pop js repnz data16 xchg int bound in cmp bound sub add adc mov jno test mov sbb push rorb mov mov and sub (bad) jg jbe,pt scas dec mov clc or inc imul lret ret push push movsb xchg cld (bad) mov mov in lret push or int3 jb leave xor (bad) sub (bad) aaa xchg jne cwtl or mov push fwait sub mov (bad) (bad) ljmp divl cmp pop lods mov cli lea into jnp dec int cmp jg add rol jge sbb inc out jnp mov (bad) (bad) (bad) jmp mov jno iret pop push xchg fisubr xchg push daa adc pop lea fld lods xor imul pushl adc push mov sbb popa inc mov inc sub stc scas mov (bad) or dec ficoml jmp pop (bad) out fistp mov or xchg notb imul mov scas push mov ret pop cmp fmull (bad) (bad) inc pop ljmp lahf xchg sub hlt push jnp lods cmc inc aam pushl std (bad) cld cmc dec cs and adc pop adc add mov (bad) call pop xchg jecxz outsb xchg jnp icebp mov pop mov enter xor jne decl sbb (bad) (bad) dec jl xchg push and jg fisttp aas and (bad) enter pop mov test (bad) (bad) cmp imul lcall adc sbb outsl push (bad) (bad) jg sahf mov or (bad) fmull test jb adc jns (bad) xor (bad) (bad) pushl ret cmpsl mov lods imul push lret mov call gs jmp push aad nop imul mov mov (bad) mov ss jmp pop loopne test mov xchg xor dec outsb stos mov (bad) cli (bad) (bad) (bad) pushl mov pushf pop out ds (bad) xor sbb mov daa nop mov (bad) incl cld ljmp fistpl cli add xor xor push roll jge (bad) (bad) call popf fldln2 mov loope pop iret mov or xor sbb jbe xchg cli (bad) js jno jle fucompp mov pop enter rcrl inc movsl sbb push push aas (bad) add shll ficomp jle pop pushf mov mov and fwait mov push xor lea ds or push inc jae,pt mov nop or sar popf cmp sti lods cs iret cmp imul lock (bad) pop loop sahf hlt adc or add (bad) (bad) decl into sarb test mov inc cld dec ds pop (bad) pushl cld adc push pop adc dec xchg pop pushf enter jle,pt pop or shl lahf fdivr (bad) ljmp dec sub sbb and cmp jne fcmovnb out xor or fidivl inc and mov lea nop (bad) sar (bad) (bad) lcall jl xchg xchg sub test push ret and bound xor daa in push sbb cmp scas or aam cli aad and fcompl xorb cmp push pop cmpsb and or addr16 out push movsl in arpl add (bad) (bad) ljmp xor jnp pop fidiv sbb fwait and inc repz les in aam or lock pushl lds ficom inc sub jle (bad) imul mov hlt (bad) jmp adc mov push jmp fild add loopne mov insb mov sub jge or pop insb dec xor mov push ljmp mov lcall pop outsb daa roll dec sbbl (bad) mov sbb enter js (bad) shrb in stos adc pushf je adc push (bad) out mov mov (bad) (bad) (bad) jg (bad) xor leave sti dec and sbb lret xchg mov out xchg pusha out push (bad) (bad) (bad) (bad) mov xchg lea scas insb sar out test sub or lret adc mov mov jecxz scas scas push mov (bad) outsl jno adc loop cmp sub add xlat adc push loope pushf mov divl lcall (bad) ficom je add ljmp gs out mov mov adc (bad) (bad) jmp cwtl test sbb xor push sub std adc hlt or (bad) sbb stos and lret mov xor lds pop dec or in mov sbb jo push (bad) (bad) (bad) push jo cltd jbe and mov iret mov das shrl int (bad) (bad) (bad) decl insb jnp mov jbe imul insb call test xor popa insl (bad) (bad) fcomip sbb (bad) cmp dec mov push sub mov test icebp stc test test loopne leave push or mov ljmp stos dec mov lret mov mov push pop xchg decl ds ret mov mov pusha daa mov out (bad) (bad) call add mov dec sbb fcoms lcall stc xchg insl xchg stc push mov sub (bad) lcall add jae ret add decb add xchg ds loopnew cmpsb (bad) call inc (bad) cmc jle pushf into out das and out mov call xchg bound sub cli fstps sub (bad) mov mov mov es in in addr16 adc adc xchg repnz mov out lret outsl mov push (bad) out ja aaa gs cmp and pop sub or push mov push jo dec gs (bad) lcall jp ja push pushf jge xchg les mov std push pop (bad) cmp or (bad) decl sar leave (bad) fwait mulb test jge sub pusha pop mov adc inc jp jecxz cmpsl repnz pop mov test (bad) (bad) (bad) dec call cmp cmp bound xor pop lcall pushf or pop cmp rorl je push in sar decl in pop inc push out xchg inc lret jnp mov mov or je jg pop push fwait es lahf popf mov push (bad) add xorl mov into xlat (bad) ffree (bad) sub adc inc cld lcall (bad) leave mov mov cli ljmp cli or (bad) psrlw push adc aas or cmpl out push mov xchg je ret out stc xor insb cmpl jl (bad) (bad) jmp xor push add lods daa call testb movsb sti cmpsl mov and (bad) call inc jo dec jnp js xchg dec lock dec cmp jge (bad) (bad) decl ds xor push ss push faddl cltd test adc (bad) (bad) ljmp jbe pop ja mov fist jns je popa xor fidivr gs add cld dec xchg mov mov (bad) (bad) lcall and jno inc sbb sbb pop insl (bad) jp aam dec inc jmp int3 xchg rcll enter lcall or inc xchg je pop pop enter cwtl ficomp (bad) (bad) ljmp icebp rcrb rolb adc xchg (bad) roll (bad) (bad) (bad) lcall in (bad) push or out bound sub mov out out xchg lcall repz (bad) (bad) dec (bad) dec pop mov xor cmp cmp cltd and push movsb inc jne pop dec sar mov or loop (bad) jl (bad) adc fwait (bad) push in pop lock fidivrl pop dec (bad) sub sbb inc sub (bad) cs pop mov outsb mov stc or jb ss push data16 inc aam mov (bad) mov (bad) lcall imulb push ljmp push adc push dec and js and push jp (bad) (bad) ljmp jbe fldt lock (bad) and pop ret enter call dec les (bad) dec iret jecxz fcom sub int sbb pushf movsl mov lods mov out iret (bad) hlt mov ds sbb inc push cltd scas fwait inc cmp repnz mov test (bad) decl adc mov fwait jo mov loopne dec nop adc cld sti jge (bad) adc (bad) pushl add mov loopne and add mov repz (bad) (bad) pushl rol popf add cmp arpl sahf aam pop in jp add movsl mov rcl pushf pop and push (bad) (bad) (bad) push lds cld push cld outsb push mov mov (bad) jb mov xor push ljmp cmp cs fstpl (bad) decl mov pop aas out scas and push push and fistpl push push fwait pop sbb fsubp cmp movsl (bad) (bad) (bad) pushl dec mov (bad) mov mov sbb mov dec rcrl mov sbb outsl add cmp stos dec (bad) sbb jb sub icebp (bad) (bad) jmp cmp fldl or cmp or in les imul lds mov (bad) push adc and dec dec loope sbb (bad) pop add (bad) mov out cs stos daa fmuls pushl (bad) sbb or lcall mov sub test (bad) mov jl mov test add clc (bad) lcall js or mov int3 stos mov sbb int dec pop js (bad) (bad) jg xchg movsl fs ljmp xor popa pop inc add pushf hlt sar (bad) (bad) inc shr lcall (bad) inc push aam cmpb lahf scas xor loopne ljmp cmc fadd imul lods jno xchg sub aaa cld call push sub xchg insb nop jns insb or lock scas and xchg cli (bad) (bad) lcall shrb adc mov mov fsubp fcomps xchg inc lret mov fwait cld jp pushl ds xor ss stos imul adc (bad) (bad) lcall sub cltd lea loop lea sbb jbe mov outsl aas (bad) sti lock jmp scas (bad) (bad) jle fs loop add mov sbb or (bad) (bad) pushl mov mov adc add jg push jno or ja jbe lea in (bad) (bad) (bad) lcall jle (bad) jg ja out ret lods inc xor jg orl lret loope fdivr (bad) (bad) jmp xor xor ss xchg jge adc (bad) test add or sbb (bad) (bad) ljmp or sarb or or rolb ljmp xchg (bad) repz daa push push mov jg xlat pop or fsubrp inc push (bad) jg jmp arpl jne scas or ret fsubrl cmc jecxz push mov (bad) (bad) (bad) (bad) (bad) fldcw ret mov das and (bad) sahf mov add or aas aaa push movsb adc jb insl pop test (bad) in mov loop or xor call jp adc fsubrs dec data16 push dec cli call add xchg inc jecxz push pop cltd xchg (bad) (bad) lcall inc popf imul aas inc insl outsl jae lahf xor ss fsubrp mov xchg xchg ljmp jne cs push sub andl in adc push call es jp fisttpll test movsl mov outsb fldenv (bad) flds (bad) (bad) (bad) lcall or dec push lret mov add enter dec out arpl aaa cld (bad) (bad) js pushf xchg add xchg fs inc mov cmp lcall sahf sti sub cmc (bad) (bad) jmp sti call jbe push cmp popa cmp pop xchg push pop dec jle (bad) (bad) (bad) fild in mov loopne pop cmp rcrb mov mov (bad) (bad) (bad) incl pop jl scas std jecxz pop inc (bad) clc pop add push outsl frstor sub insb stc (bad) (bad) (bad) incl mov or mov fldcw test push loopne adc cli in mov fs (bad) call gs mov jo (bad) enter pop jo jecxz repnz mov notb lret ljmp mov or pusha in xor pop call cmp adc popa and cli js xor push (bad) pushl and inc (bad) or mov jo mov (bad) cwtl pop arpl fdivl icebp icebp inc add adc xor push icebp decl pop mov lds or inc and nop inc dec jae push lods rol or out jb jnp cmp call mov push aad mov sub push jge (bad) (bad) (bad) out xchg loopne mov jmp push (bad) repnz cs pop scas dec xchg (bad) (bad) (bad) incl pushf aas adc rol gs dec mov and mov push xchg push cld xchg xchg (bad) (bad) decl push cmp add or inc dec push sub movsl add xchg sub jg pop (bad) (bad) (bad) (bad) mov inc aad (bad) (bad) icebp xchg je sub xchg test cltd js arpl fild fwait stos stos scas clc incl aam and fsubrl inc gs mov xchg (bad) (bad) out cli mov add mov add inc pop out pop insb lods inc jl ljmp (bad) (bad) (bad) lcall pop out (bad) lods imul gs jnp pop imul jnp aad (bad) (bad) call flds mov insl movsl (bad) jne push pop nop dec loop or iret sub test imul (bad) pushl jae fistpll sbb std test fisubrl stos outsb stos les sbb mov jae aam adc pusha jne sbb add (bad) (bad) (bad) lcall xchg icebp jne jbe inc xor aaa push mov lock pop inc pop and dec push and sbbl cwtl mov inc cs xor jnp inc lret les (bad) (bad) jmp orl lock enter rcr pop xchg push mov mov int xor mov or decl cmp sbb jbe divb jl cld ret stos (bad) (bad) jg jbe stos dec push ljmp stos jns (bad) dec sbb test (bad) (bad) pushl js jnp sub push (bad) lcall sub xor push xchg imul add sbb repz pop sub jns mov inc cs scas (bad) call ds into stc out test xchg or rorl ljmp jne clc mov push mul and (bad) (bad) incl (bad) lea mov add add jmp out mov cltd push and stos mov std (bad) out cmp enter fldt call (bad) jg (bad) repz push jle jb aam or in inc cmp scas (bad) mov (bad) (bad) mov pop or lock mov bound lea push xchg (bad) dec cmp dec push or (bad) (bad) (bad) incl adc cld add mov cli ret pop ss mov mov or sbb add push mov lock jle insl pushf mov cs adc lock (bad) mov jle mov adc push mov jmp cmp mov inc (bad) mov jo in mov sub push push add or aam xchg pop cmp (bad) (bad) decl scas xor or mov out mull cmc push push push jo mov sar cmpsb dec inc xchg sub mov sbb or vpunpckhwd inc cmpb ljmp (bad) xchg adc cmpsb mov (bad) add scas and cmc pop mov xchg pop icebp cmp jmp and in push push lret icebp call fdivrs arpl aas int3 lcall inc or xchg fadds sahf stos pop insl mov jecxz aam (bad) sbb aaa rcrb es dec xchg pop or mov cltd popf dec adc (bad) jg mov mov (bad) flds push daa sub cmpl ljmp adc (bad) inc adc pop mov pop dec pop fwait sbb xchg fsub mov mov insb in (bad) (bad) (bad) out fdivrs fisttpl iret push xchg mov (bad) test ret xor push (bad) (bad) (bad) jmp fs test outsb pop mov bound cmpsb inc xchg push jo cmp frstor dec (bad) inc (bad) (bad) (bad) lcall insl (bad) xor adc mov dec dec clc fwait lods mov shrl sarl (bad) (bad) ljmp and out push sub call bound adc mov push enter mov and pop lret repz hlt add push and and (bad) ljmp arpl out data16 or int3 lods jecxz insb push arpl inc (bad) (bad) (bad) (bad) in and sub pop dec insl bound leave jne insl push stos sahf stos mov dec lock pop xchg add mov stos mov sbb mov outsl push test push nop lcall jno push enter (bad) pushl pop adc pop cmc es inc jb ret cmp add add in call push (bad) push adc arpl mov (bad) (bad) (bad) ljmp inc cld xchg jo fcoms (bad) fwait adc stc or sahf clc addr16 je call dec and or fstl das push (bad) and (bad) (bad) (bad) mov sahf addl rorb adc mov sahf mov (bad) (bad) ljmp repz and xor xlat test (bad) call sub sub push (bad) lcall std sub add dec out mov adc mov rorl ret (bad) (bad) call jecxz sbb imul mov mov mov (bad) lods (bad) (bad) jg imul add in subl lods lods (bad) (bad) jg fild lret sti pop or or sti aas xchg aad repz in ret (bad) (bad) push fstpt mov outsl mov pushf (bad) sub (bad) pusha cwtl xchg shr repnz inc int3 (bad) (bad) (bad) call mov int3 pop xchg sahf and cwtl pop je outsw test xchg cwtl (bad) (bad) (bad) (bad) (bad) cmp imul and add enter cwtl lods push and adc push dec (bad) (bad) ljmp aam xor push mov push mov mov (bad) (bad) (bad) fist adc fwait movsb inc outsb dec cmp adc xlat (bad) repz inc mov ljmp mov or xchg mov cmp push lret cmp fistpll (bad) (bad) (bad) std pop lock popa (bad) leave imul sti and and mov push test (bad) (bad) mov or dec and aaa clc dec mov fsubs and push movsl ret rclb jge and (bad) (bad) (bad) fdivr pop repz sbb sbb imul loop popa xor idivb ds (bad) mov mov repz push add pusha dec dec ja out pop cwtl or clc jp push (bad) (bad) (bad) lcall mov pop gs mov scas mov adc push push pop bound (bad) fcomip push movsl into inc fisubrl sub push pop inc mov sbbl sbb (bad) (bad) (bad) jmp lret mov fsubrs dec push xlat imul jne mov int3 movsb add pop and mov loopne mov es pop and pop aam data16 mov fnstsw std jg jmp or (bad) gs notb (bad) (bad) ljmp xor loopne fwait (bad) mov push (bad) pop jp dec test test xor (bad) (bad) (bad) call push in decl leave pop xlat mov (bad) insl jae cmp test sub cltd lret ljmp repnz pop xor addr16 das jmp jb sbb fcos (bad) (bad) jmp xchg into mov fnstsw in push cmc out jne sti popf ret pusha lret jle adc pop (bad) (bad) (bad) jmp mov push cmp sbb cmpsl fcompl shrl push (bad) (bad) mov test mov mov mov cli mov (bad) iret sbb decl jl jno (bad) and xor xchg mov (bad) (bad) (bad) call xor xchg push int jg mov mov nop ljmp mov add ja int3 imul mov sbb mov inc outsl clc (bad) ljmp xor aas dec dec adcl mov pop push fisttpll (bad) (bad) (bad) decl popl test and iret sbb and cmc ret in mov (bad) (bad) jg incl mov clc test in pop fwait arpl movsb sahf sti jbe pop xchg js dec sti xchg call loopne std push outsb inc ret inc sbbb loopne dec scas xchg lock arpl mov imul jbe xchg mov (bad) lcall xor cmp shrl fisttpll ds inc inc xchg mov pop testl xor imul int movsb js das sar fs fdivrl and nop mov sbb dec call push pop cld (bad) jmp mov sub lock rorl mov mov (bad) (bad) (bad) inc adc arpl adc mov cli xchg hlt jae xlat ljmp cmp jge (bad) (bad) ljmp or push ret lds dec dec pushf ret xchg sti sub pop outsb adc (bad) (bad) (bad) (bad) mov enter or daa stos mov cmp scas aaa jle repnz (bad) cli sbb dec sar (bad) (bad) decl leave dec mov sahf mov add push push lods mov mov and add call in xlat pop jns sahf in adc sarl push mov mov jge mov inc pop pushl pop add fldl sbb ja sbb fldcw fldcw ja adc mov decl (bad) xor scas cmp mov (bad) sub (bad) decl fptan insb and fldcw cmpsl test (bad) (bad) mov daa (bad) xchg ja (bad) lea nop rcl pop pop inc jg adc clc das cli test scas pop into dec or (bad) adc dec ret lock (bad) fisttpll pushf pop jl pop inc xchg push sbb cmp scas nop inc fcmovb cmp push adc clc mov (bad) (bad) (bad) (bad) jno (bad) xchg mov pop xor mov popf xor xchg mov xchg mov jg lahf pusha xor xor jo (bad) jns stos cmp (bad) (bad) (bad) fnstsw popf pop loop rcrl outsb push jns (bad) call pop ds jae shlb pop sub mov test mov lock or jbe dec xchg gs push mov decl (bad) ljmp shlb push jns push stc out cmp lahf dec mov jae push mov (bad) (bad) (bad) jmp fstl movsl push lods aam mov inc pop push sbb push int3 jnp stos stc ss (bad) ljmp jnp inc movsb test xor xor sti es (bad) (bad) out xor test dec push mov adc das and in cli inc decl cmp mov push (bad) xchg mov mov pop cmp (bad) out mov push and adc dec mov mov or and or fcmovnbe (bad) (bad) pushl xchg xchg outsl jne sbb inc dec jo clc mov add or mov gs outsl (bad) lret mov aas xchg (bad) (bad) lcall sbb mov loope neg jg jge bnd mov rclb mov inc (bad) fdivl mov outsb aas or sahf (bad) iret sub jg jmp lds leave sbb mov in out ficom lret jmp loopne dec sar (bad) decl xor or lock lret inc mov aaa jne popa jno fcmovnb push sub (bad) (bad) (bad) (bad) decl movsb sti mov inc and jnp aas ljmp leave inc fisubr mov fimul mov pop inc mov push loopne inc xchg inc insl outsb inc (bad) (bad) incl inc pop xchg or ret loope pop (bad) jbe mov push (bad) (bad) (bad) incl jnp jle push xlat (bad) repz adc fdivs adc fist lret dec (bad) imul rcl inc sbb sub adc aam mov mov in fs xor mov add adc dec rcll in inc out cmpsl aad jle decl (bad) ljmp sbb (bad) cmp jge ss or sbb inc enter loop pop mov inc imul xchg int enter fadd mov mov adc lods mov inc mov mov mov push data16 mov and loop lods mov xor sub cmp (bad) (bad) inc outsb sbb xor xchg or jecxz lea inc xor push (bad) insb push fs shl adc jno lahf adc clc xchg aaa mov mov cli (bad) fild mov inc repz mov mov idiv ljmp stos lret hlt into adcl fcmovnbe xorb mov (bad) jg call inc fistp aaa inc daa lret mov cmp outsb lock sarl gs cmpsl test (bad) (bad) (bad) jmp shll (bad) lea mov pop xchg mov or fistpll decl sar add incb outsb pop adc ret das clc (bad) ljmp push sarb mov clc push test and clc ret mov pushf sbb add mov repnz inc clc xor sub xor hlt cmc (bad) (bad) push ret and cmp icebp (bad) mov cmpsb test mov xchg stos stc dec inc and rcrb into insl ds (bad) in jmp arpl mov js dec aas pop mov jecxz aas push in sub scas jl xor psubusw xchg jp mov add or mov mov decl add mov lret jmp mov je xor pushf xor (bad) imul mov sbb push inc or aaa les and ljmp push test call decl cmpsb jo xchg movsl sahf fistpl ret daa push adc lahf aas cld sbb jo repnz (bad) (bad) call mov sub scas adcb push jecxz push pushf test cmpsb cmp mov sub loop lds into incb xchg mov push (bad) (bad) (bad) pushl push sub cmp faddl cmp lcall ja xchg out lret (bad) (bad) decl jno lea (bad) cmp outsb sbb scas jmp (bad) and ds push in jae sar (bad) (bad) pushl push dec (bad) cld fsubl inc add mov mov daa inc inc imul gs decl (bad) (bad) cmp dec cmpsl (bad) aaa aaa std lret stos and rclb adc sarb nop (bad) (bad) (bad) lcall aas aas aad stos pusha lea mov mov ret push xlat sbb fmuls test (bad) (bad) call lds bound xor dec xor sbb pop mov xchg popf addr16 (bad) (bad) decl xchg out sub mov adc jb and and mov (bad) (bad) (bad) lcall and mov lock mov loope xchg rep stos ds ret xchg and pushl cmp fs dec sub sar (bad) mov fisttpll shr sbb sbb adc mov pushf cs mov mov xor (bad) clc test inc cs and fdivp fimul aam lea xchg pop mov sbb clc (bad) (bad) push jne shr push lahf xor cmp xchg xor movsl aad and aam rclb mov loope (bad) mov rclb push hlt mov imul add xor jle cli sbb lock rolb pushf stos xchg out pop sbb (bad) (bad) jg insb cmp mov fcoml pusha cli or test imul in (bad) (bad) jmp push pop ret sbb mov mov cmp mov and (bad) (bad) (bad) decl int lcall call test stos cmp enter lret shll jecxz xor add mov jp loop sbb test jno xorl jmp ret jo dec (bad) cmp xor lahf jae add sarl push mov lret add (bad) (bad) dec and (bad) call stc jae in sbb lds jo test in (bad) (bad) (bad) ljmp xchg and cmc pusha cwtl repnz cwtl call fild movq mov push pushf fiadd outsl mov test and xor es (bad) and adc (bad) (bad) lcall ret clc pop mov aam cmp pop adc (bad) sub js mov (bad) (bad) (bad) (bad) cmp jbe dec jg fldl xor sti scas pop xor movsb pandn movsb jecxz fisttp adc nop sbb adc adc (bad) call push xlat cmc imul (bad) jb imul aaa inc sbb inc adc (bad) (bad) (bad) lcall xchg mov jmp sbb xor dec cmp ret mov push sbb jg (bad) pusha bound (bad) (bad) (bad) pushl fidivl mov decb pop fnsave cmc cmp test (bad) (bad) (bad) call pusha push sub mov pop xchg cmpsb sahf lret clc subb test jns in push or int mov sahf movsl or or mov subb pop xchg or xchg dec cmp (bad) (bad) jmp or (bad) xor ljmp dec outsb repz dec mov (bad) ljmp ds popf adc pop imul dec fdivp test int clc mov ja jb mov mov fwait dec stos sub xor movsl insl std test hlt inc (bad) incl fdivrs outsb aad adc xorb (bad) (bad) ljmp aaa adc or jb jmp adc movnti call mov daa movsl and cmp ss mov dec rorl jmp add out xor fcmovnbe push push call inc sahf inc adc jns rorb jnp (bad) lcall push sbb pop and cmc mov and mov orb and out xchg jl aas mov pop lods fcomip (bad) lcall mov fwait inc imul test out emms jbe daa add push pop jg loopne and icebp and (bad) fdivr out mov popf ds xchg mov loope mov (bad) ljmp clc add popf fwait pushf aad sub jns hlt pop int3 (bad) jbe jl fsubrl pushl iret and sbb fistp pop int3 cmp cmpsl mul mov adc (bad) (bad) in pop test lret sbb lods dec dec dec sub ja push ja (bad) ljmp mov decl roll jo cmc aam add and cmp (bad) (bad) dec scas negl jnp add scas lea loope sub xchg or push add out dec pop (bad) jbe rcl ss (bad) in cmpsw lret fdivs aad cmp ja xchg sub sub daa clc and jo xor or (bad) (bad) push push lods mov pop je fmuls rcrl (bad) cmp jmp fwait cltd adc add or mov sbb mov inc jne (bad) jg mov add cmp xlat or jle loope (bad) (bad) jmp push sub jge lret cli pop mov (bad) fcomip ja adc int3 dec (bad) jge xor dec push mov jmp (bad) pop (bad) incl mov fcmovu inc insl loopne ss hlt xlat mov push repnz cmc xchg xchg insb sbb jb nop adc insl push repnz mov mov (bad) (bad) push mov xor xchg mov mov je (bad) push pop inc and cs mov in mov pop push adc xchg (bad) and test push ljmp jnp (bad) xor and cld (bad) jmp repz cld cmc or into pop gs (bad) push cmp mov mov cli add imul data16 lcall lahf arpl (bad) (bad) jmp cmc mov mov call or dec in ja lods cmc mov lods jle (bad) (bad) (bad) ljmp jge mov lock cmpl ljmp inc or adc mov add pop adc cld and adc std es ja call or adc and fnsave rcr ja add or add pop aad push (bad) jg lahf fldenv (bad) daa arpl out sti jle iret subl (bad) sbb (bad) (bad) (bad) incl dec cld sub push dec jne sti push (bad) rcrl test dec popa mov xor mov mov (bad) (bad) pushl inc loopne add jb inc mov movl fisubl pop push dec (bad) lcall inc mov pop add sbb sbbl incl pop pop pop adc cmp mov xor stc xor dec push into mov mov cmp cmp icebp (bad) stos ljmp lock push out adc mov dec ds xchg mov pop pop sahf test mov jge scas or inc push push (bad) (bad) (bad) push push push in mov daa xchg test insb sub mov in add pop out loopne add in jl cpuid mov push and pop and outsl clc (bad) inc push xor mov mov sbb sbb cltd insb outsb (bad) (bad) (bad) (bad) call imul mov stos fwait outsl cld outsb cmp inc or or xchg (bad) insl (bad) (bad) (bad) pushl push std stos pushf or (bad) sub lock icebp push jnp mov sbb mov sub (bad) (bad) lcall lods test pop movsb js je mov pop push xor (bad) incl mov xor jbe,pt push cmpsl cmp es mov dec push stos push adc jb fcmovbe xor dec (bad) rcl cmp inc (bad) lcall sub mov adc mov cmp arpl (bad) (bad) cmp pop test hlt fwait ljmp stos or cmpsl ds clc mov (bad) (bad) (bad) (bad) mov jge xor xor dec in jle mov jmp or cmc (bad) (bad) (bad) jmp fldcw mov inc pop arpl cmpsb adc mov lea andb adc pop mov sahf or loopne mull cld inc push fadds jp test hlt (bad) jmp and rcll je enter xchg sub cmp fstpl sarl and nop gs lock adc lea test (bad) (bad) decl sub and lock or fisubl cmp test sahf mov sub icebp inc imul ljmp ljmp push mov fcompl dec inc xchg inc pushf add hlt or (bad) (bad) (bad) jmp jb jae fnstsw stos or aas cmp pop int3 dec sbb leave bound (bad) (bad) (bad) (bad) mov fsubs push hlt and fwait sub pop and mov jp popf clc addl inc pop movsl cmp clc (bad) ljmp mov sbb je stos sbb repnz mov (bad) imul lcall lcall lcall sbb pop aam or divb (bad) (bad) (bad) (bad) (bad) inc push pop in pop inc lods clc cltd cltd mov imul cmp sbb dec (bad) (bad) (bad) lcall push dec stc in xchg iret test or mov xor dec test (bad) (bad) (bad) lcall movsl jg mov call mov jge xor sbb mov (bad) (bad) (bad) call sub fidiv cmp jb lods aad out sbb jne push (bad) (bad) lcall in in out mov sbb (bad) repnz pop fcmovu dec jecxz mov mov (bad) (bad) (bad) ljmp cmp push subl dec enter jmp enter popa push cs decl iret push mov loope in jecxz jns je sub and sub mov scas mov ficoml pusha jecxz dec ret and js mov nop (bad) (bad) (bad) incl xor adc fnop mov (bad) imul mov pop pop xor push repz cmc insl aaa repz push (bad) mov and and push rorb loopne ja (bad) (bad) cld mov lret mov dec notb xor add loope repnz imul (bad) jmp stos push lret insb insl stos pop ja gs add call sub loopne adc inc lds repz sbb sub mov and xchg jmp hlt out sbb xchg add repnz int3 add fnclex (bad) (bad) (bad) lcall or fstl pop aad cmp insb in pop test stos adc adc add (bad) (bad) (bad) idiv arpl out outsb mov adc (bad) decl movsl push inc dec inc inc lret fiadd sbb scas jno mov (bad) mov ja or cmp jns add dec jl add dec mov mov mov (bad) xor and inc mov inc add outsl cli pushl and pop inc cmp decb leave or or ljmp (bad) fwait mov aad xchg push xlat scas mov dec das leave sub mulb je out cli incl and dec mov test mov insb (bad) cwtl (bad) (bad) (bad) push add xor jl add mov fistl rcrl xchg cmc out xchg pop (bad) call sahf xchg icebp aas mov mov jecxz sub icebp loopne and nop mov push outsb (bad) pusha inc out clc (bad) (bad) mov push cld sbb dec pop test addr16 inc sbb arpl (bad) (bad) pushl hlt jmp fisttp stos inc pop fnsave pop mov cmp decb sbb jmp (bad) ljmp mov xchg jo pop xor btsl push ds mov std (bad) ljmp imul and dec clc inc mov outsb push push mov sbbb mov or sbb (bad) (bad) (bad) ljmp cmp out js dec mov xchg push paddsw daa jbe fwait sbb push pop mov mov lock out stc pop clc xlat sub mov sahf ret (bad) jmp pop mov ds pop mov adc cmp push mov fcomps sar jp push incl mov out cmp mov or imul xchg push push pop fincstp clc mov jl ret lds fsubl and aaa sub xor (bad) (bad) incl mov cs mov mov jnp imul (bad) cmp je cmc ljmp roll push imul fcoml (bad) push lea xor xchg aas pop sarb inc stos jg dec pop push iret aam dec (bad) xor mov mov iret or fdivs sarb pop hlt (bad) lcall push and mov sub dec (bad) jecxz mov es (bad) (bad) inc int imul outsb idivl aas jp (bad) clc inc popa jne sahf xor push mov (bad) (bad) (bad) (bad) call test xchg sbb xchg and pop repnz mov jne cmp fcomip lcall inc xor cmp cmp push sub mov (bad) (bad) fbld push pop stc fs mov arpl not jle int3 loop sub jno and iret xchg aaa cmpsl rorb outsl cmp fbld add xor lret jne or fistpll pop fnop cvtpi2ps mov movsl lret enter pushf fcomps mov sar incl ss xchg jle (bad) arpl sti addl fcomip ljmp dec pop jg pop clc jge xchg (bad) xor cli sti out push mov (bad) (bad) (bad) lcall xor adc mov dec into sub stos es xchg (bad) xor ss sub pushl mov xchg jo pop sbb pusha xor cmp mov adc sbb movsb mov mov and test addl sbb call sahf sar (bad) (bad) jmp adc stos mov and das xor xchg push inc dec pop ret divl add shll pop loop jmp push and outsl ja cmp inc cmpl push sub fldenv loope jge (bad) jg loop sbb cli (bad) and stos mov cmp (bad) (bad) (bad) std jle and scas insb arpl movsl scas fs jge sub mov call (bad) (bad) (bad) jp das xchg test push (bad) jle cmc push (bad) push dec mov sub dec inc sbb insb cld jo push xchg xchg pop push into pushf jae (bad) dec jecxz (bad) out xor aam pusha push cld imul mov leave pop mov ja sbb hlt xchg aam lret fadds xor add mov lods jp push push mov cld (bad) (bad) (bad) mov add inc in mov test dec ds (bad) lret rcrl (bad) ja pop jecxz movsl xor xchg adc push adc pop test (bad) (bad) incl mov jno sbb call or pop sbb xor push jo xor jecxz add jo repz imul loop scas outsl sbb mov (bad) (bad) jmp sbb adc sbb imul mov popa bnd out adc xchg jp cmp (bad) call adc arpl push jb add xchg decb jge jl lret jge imul scas cmpsb mov scas pushf sbb inc sbb imul dec in mov or popa cmc (bad) (bad) fistpll mov das icebp jp arpl push popa push repz inc les sub mov (bad) (bad) lcall jo rcll fs sub mov cs push dec scas stos push cmc out xchg adc sub sub out std stc mov push loope fwait es dec jge (bad) (bad) inc cmp outsb hlt xchg mov outsb pop fwait imul ret je and adc decl call (bad) lock ljmp jl (bad) das cli pusha lock fimull xor mov sbb lock outsl clc fisttp dec stc stos scas into test mov or roll jg jle mov pop xchg leave adc gs es lcall sub clc lock sti mov je mov ds mov aad scas sbbb sbb mov push dec test call notl test or xor outsl mov sbb fcompl in (bad) (bad) pushl mov xor push gs (bad) aas out (bad) push je xchg xor push cmp (bad) (bad) (bad) pushl dec xchg xchg adc pop dec mov xor test test sub adcb and sub inc mov mov sub jbe rcl or dec divb jo add push push sahf imul mov xchg cmp (bad) (bad) jmp jecxz mov icebp pop imul outsl pop mov mov mov mov mov (bad) (bad) (bad) dec popa gs xchg cmp rcll int jbe jb inc das enter jmp xlat mov push aas (bad) repz xor fs mov mov xchg mov cmp xor mov into (bad) dec int3 add lahf (bad) incl mov jmp mov sbb mov push ja adc icebp test icebp out ret xchg mov mov fnop xchg mov (bad) (bad) jp jno loopne bnd pop mov (bad) fadds mov out adc loope xlat in xor scas decl cmc cmp dec stos mov cwtl pop mov add jmp (bad) ljmp mov sub cmp inc xchg lret and stc movsb int3 xchg mov das clc in (bad) jmp xchg out sub adc add and rol dec ljmp in mov xchg inc xchg dec push call hlt ret lock mov mov andl (bad) (bad) (bad) in jne mov jns fcomps mov push data16 jo xlat mov mov (bad) jg (bad) fisubrl push dec clc pop cmp sbb adc mov vcvtdq2ps loop cmpsl mov (bad) (bad) (bad) incl les mov add ret push cli sbb fisttpl hlt (bad) jno (bad) (bad) (bad) pushl jbe cmpsl rcrl inc jmp nop cmpb (bad) imul gs jg (bad) dec jno pop dec daa xchg clc or jge inc movsb call cmp (bad) (bad) (bad) ljmp dec add incl pop mov lods mov pop sbb lcall inc mov jbe cmpsl mov and out push ljmp xor loope (bad) (bad) decl test out mov jl pop movsb popa scas movsb aad dec push imul outsl lcall les cmp fisttpl inc mov xchg (bad) jb sbb push jmp decl loope cld sub jp pop in ret test lock jmp mov out shrl lahf mov ds (bad) out fidivrl ret inc enter scas loop movsb pop jo lret or lock (bad) (bad) decl mov push in mov stos iret sbb out ds add push imulb pop mov je dec (bad) mov aaa add sbb push and adc xor xor fnstsw inc lcall jle lods fdivrl push std jb outsb or xor (bad) dec sub push (bad) fdivrs outsb jbe mov std dec int fmull stc mov je jg insb cld mov push xor add (bad) incl andb dec add outsl and jmp jbe (bad) dec rol (bad) out adc xchg add xchg icebp jbe jns dec je adc test jg and xchg pop daa mov pop shlb (bad) (bad) (bad) (bad) dec nop add mov fcomps in adc gs aas adc cld mov sub (bad) cmpsl ss (bad) (bad) pushl aas dec in inc dec or outsb scas scas sbb icebp negl lahf mov (bad) jg or es imul aam and test xchg pop xorl inc jg subl pavgw mov and sbb out pop popa enter mov lcall (bad) (bad) sbb lock cwtl mov dec (bad) pop add inc mov ljmp in ja xchg jne lcall jmp mov jbe xchg sahf pop xor (bad) mov ret cmp and mov cmpsb mov lods xchg data16 (bad) (bad) (bad) jl or xor das add push cs cltd dec mov iret mov lahf dec sbb incl inc imul addr16 pop cmpsb push dec test jbe stos push loopne pop cmp sbb (bad) jg or adc dec leave sbb cld es dec (bad) jne jg (bad) call inc sbb test fbstp stc xor repnz jmp call xor xchg xor sub out push adcl lock loope pop orl jle inc out data16 int3 jle lock sbb mov jo aaa bound call insl cmp and cmp xchg xor lock or lcall jp cmpsb fs push sahf mov adc mov push pop jns shl sbb or imul (bad) (bad) (bad) decl xor ret xchg mov mov das scas mov jae add or mov xor sahf lret pop add cwtl sbb jg mov push xor xchg dec cmpsb jle cmp aad push mov (bad) (bad) fistl stos xor aas sahf adc mov (bad) negl daa adc hlt jge jb mov (bad) pushl xchg jg push or inc lahf xor jge mov mov pop popf ds cltd (bad) int addr16 sub loop sti xchg test inc rolb jp (bad) ljmp pop jne push fsubr xchg push pop adc adc cmp popa xchg sub cli in xlat cmp js inc push (bad) (bad) (bad) (bad) mov mov mov stc mov adc lret popa lahf jg inc push dec (bad) (bad) (bad) call sbb push divl inc aaa mov cwtl sbb mov dec icebp pop leave jno cmp pop xor mov pushf shll mov shrl (bad) (bad) (bad) jmp inc xchg outsb push test orl (bad) pushf cmc push sub mov mov (bad) (bad) jmp pop into fcomps xchg xor mov addl pop pop loopne cmp pop daa (bad) incl mov sub jmp push cmp or sbb pop minps insl adc aad fwait push fdivrl dec cmp pop cld incl mov dec jecxz ds stos adc (bad) add inc cmpsb in test fcoml add loop jb jp sub jmp jo mov pop cmp iret push psubsb test cwtl imul pushl ljmp fsubr pushf cmp loopne mov vmovhpd outsb (bad) (bad) (bad) ljmp enter sti insw xor lods push mov pushf ss cmp fstl lods jecxz (bad) lcall jno roll jne rcr rcl jl mov ja or (bad) mov inc sti mov (bad) mov add (bad) jg inc fisubr adc inc cmp (bad) (bad) ljmp (bad) inc pop pop outsb jns sub ss out cltd and cwtl inc cld sahf gs sub adc inc (bad) (bad) push fiaddl sub (bad) jno inc mov sub adc cmp idiv ljmp xor xchg loopne xchg les push (bad) adc xlat jp or mov (bad) (bad) call cmp mov cmp repnz sub adc bound or ljmp sahf jo lret int dec dec sbb mov or xor sbb in push fsts (bad) lcall pop (bad) cmp mov push pop xchg and mov lahf mov (bad) lcall mov add popa jle enter cmp xchg mov pop (bad) (bad) (bad) lcall sbb test push inc xchg rcr repz xor and xor call lds mov test clc jle mov stc dec add loope test pushf inc lock mov mov jle and dec lret or rcrb push sbb push (bad) bound and cmp push mov pop inc out stos mov jne inc cmp pusha cld push mov mov negl jno xorl out or fsubr cmp ds das pop insb (bad) (bad) (bad) jmp and and jns adc mov xor or push mov scas push fild cwtl xchg (bad) (bad) ljmp mov sbb int3 popl inc iret add inc cltd adc push idivb jg call mov pop push sbb cmp or cmc jecxz mov mov lcall xor cli test (bad) in sub stos add out mov (bad) lcall sub xor stc mov and jae push inc add add test adc ds sbb popa xlat hlt int lcall repnz fwait xchg mul push cmp (bad) (bad) incl stos dec clc jnp out and divb sub jg pop sahf dec mov cmp test (bad) (bad) jmp in or cmove loop test gs data16 cmp jmp je decl (bad) cld mov xchg fidiv pop xor mov cmp arpl test cmp (bad) dec outsb cmp fsubrs mov ret call mov mov stos repz push mov mov dec out mov (bad) (bad) (bad) lcall xor insl aas call or arpl dec xchg out addr16 (bad) (bad) (bad) ljmp jecxz sbb pop lret xor mov add jb into lods and lea (bad) push jmp (bad) ljmp (bad) cmp andb sub leave pop pusha or jecxz and clc sahf (bad) out cli jg push jnp jo push fstpt rorb dec cwtl test (bad) jmp je sub xor adc mov stos fcomp xlat mov call mov clc mov imul test cmpsb gs jle icebp mov test or aad jecxz push or test mov xor aam mov (bad) (bad) (bad) mov iret cli push mull pop adc ss lahf out lods ss jmp nop int or inc lock push lret cmp xlat shll pusha sub push gs stos sub or sub test (bad) (bad) (bad) jmp jle adc repz std mov xor scas int3 rorb and ja sbb xlat (bad) (bad) (bad) ljmp jo popf int test in stc or push inc mov adc push adc adc pop aam mov std jmp push les (bad) (bad) jg push sub in and stos xor mov daa sbbb (bad) jmp ficom add sarl (bad) lock inc pop mov (bad) (bad) (bad) jmp adc negb xchg aaa nop mov mov or imull lock ljmp mov pop pusha jmp inc out in jns shrl movsb lock dec sub mov out lcall (bad) push cmp fsubl test push pop negl mov repz pop or sbb shrl in aaa fsubr (bad) cmp dec ret ja pop and outsl sub (bad) jmp cmp sub dec push in sbb push pop (bad) (bad) jg sahf jbe pop push fidivrl test jne in ret jno dec sahf sbb pop (bad) (bad) incl out or or cs movsb jecxz int xor and (bad) (bad) pushl sbb push xchg pop mov cmpb js and inc leave and inc jb icebp pop inc cmc (bad) (bad) (bad) (bad) mov cmp xchg inc pusha push mov mov cwtl mov mov fstp xor (bad) (bad) (bad) (bad) call sbb out lods jnp jno mov sbb call xchg (bad) (bad) cmpsl loopne (bad) fisttpl or (bad) fstps sub pop ja imul lcall gs fmuls mov mov enter pop dec (bad) xor sbb cmpsb lock (bad) (bad) incl dec jae outsb pop cmpsb or ss push mov cmp enter clc mov cmp dec inc sbb mov stc sti (bad) (bad) lcall (bad) mov xlat inc iret in sub sub (bad) jbe cmp jg cmpsb cmpsb mov pop xchg sub xchg jg insl dec cmp (bad) call ds add inc push test xchg jne aad and std (bad) inc mov dec cmp xor stos loope cmp lret mov (bad) (bad) (bad) (bad) lcall ret js iret mov lock fwait cltd scas mov jns ret push (bad) sub mov mov (bad) jmp ds imul cmpsl int jg xor add and sbb lret (bad) movsb push sub pop (bad) jl imul out mov imul stos and ret js sub pop adc jne mov and dec mov mov dec push ret pop (bad) jne hlt adc scas (bad) (bad) (bad) (bad) mov fstps jmp (bad) daa mov xor pop int3 dec jnp pop xchg sbb loope (bad) (bad) ljmp or jnp jge ror inc inc jp outsb call aad cli jl popf loopne (bad) mov outsb pop xor test test aam icebp pop stos mov js jmp (bad) pushl push sub mov mov pop cld xchg jge xchg jno (bad) (bad) (bad) mov out or and or mov or out and add (bad) das and cli cmc ror ds pop xor mov push (bad) (bad) (bad) pushl add loope aad or xchg repnz and pop mov lret rolb jge fcoml es mov push mov out enter dec fucom jne adc lcall outsl sub ljmp and xorl mov push (bad) (bad) push mov aad lahf sub lods inc or cs mov push pop test out (bad) (bad) pushl lret xor int3 idivb addl add test (bad) (bad) incl mov mov faddp add ljmp pop mov dec dec imul hlt das (bad) (bad) (bad) dec mov mov gs scas jno mulb push out pop ret shrl icebp (bad) in insb cli sahf (bad) (bad) (bad) push sahf dec sub mov mov (bad) idivb cmp jle xchg (bad) jo push sbb cmp stos push lods cltd adc inc shlb mov fwait pop decl lock push jo add push xor dec add lods fwait sbb pop push ljmp das cmp setg jbe mov dec sbb jbe mov (bad) incl push cmp pop push jmp cs loope insb pop cmp pushf incl hlt (bad) adc std push movsb mov jg adc scas xchg movsb or or or andl dec add test mov jno jns cmp call (bad) dec popf push iret (bad) (bad) (bad) call push sbb xchg lret dec call mov fidiv popa pushf cltd inc pop or (bad) (bad) pushl sbb cmp std movsb fisubrl fbld push js idiv add add xor adc jb cmpsb in fsin pop xchg in push (bad) std fdivs add ret test scas bound test cltd push dec nop sub xor (bad) pushl leave popf test cmp jbe sub adc mov mov inc mov and add lcall mov arpl dec outsb cmc or call jne pop (bad) clc jp pusha sub sub insb dec cs int push test decl (bad) incl rcrb popf dec insb scas mov test add mov add mov (bad) lcall ja xchg adc fisttp dec xor and xchg (bad) es (bad) jmp mov cmp and (bad) sbb in sbb ljmp repz pop pop aam add repnz dec sub pop or pushl ficom pusha inc and pop jnp mov nop flds es push int enter (bad) push insb ret cmp add add pushf mov stos push sbb add (bad) incl pop pop loopne lcall ss fisubl stc out scas jge sti xor push (bad) (bad) (bad) (bad) jle pop push pop mov jmp mov mov cmp scas mov mov pop popa insb jb (bad) (bad) jmp sbb imul add iret out insl not inc cltd cltd mov (bad) (bad) mov mov fildll out mov sub pushl pop sbb sbbb (bad) fxch rcl pop push pop (bad) (bad) (bad) lcall xor jecxz pop mov xchg xor fmulp mov js test (bad) inc cmp stc imul dec inc jl xchg in (bad) jl aad sti icebp inc and test jbe ja aam mov push sub inc scas in (bad) (bad) (bad) ljmp dec xor jle cmpsl push sarb xor sarl xchg rcrl loopne,pt jp rclb lock test (bad) (bad) ljmp push (bad) cs or das ljmp fwait mov dec cs xchg and xchg sub (bad) jg pusha rcr addr16 dec push pop testb aam lret cmp push pop (bad) (bad) (bad) dec xchg fcoms ds lahf mov cwtl lret push fcoms (bad) xor lcall jae mov jmp test ret popa fstps mov aaa lahf adc arpl add pause mov add sbb add mov mov and aad dec mov aam fucomip outsl (bad) ljmp push (bad) out mov jecxz xchg hlt enter push call jle or cli jmp outsl mov xor mov mov lods dec loopne inc mov dec push xorl pop adc mov cmp or fisub add (bad) fcomip call xor inc dec push je and dec pop sbb out xor outsb in sub (bad) ljmp ret mov inc je sahf xchg cmp enter popa ret (bad) (bad) incl and movsb ja imul fisttpll test mov int3 notl sub jg jmp rol and cltd pop cmpsl jl in add and inc (bad) incl imul mov jl mov jg mov adc lret adc mov js xchg lock lock shlb add mov xchg cli jno jl add rcr (bad) (bad) (bad) ljmp mov test dec fistp insb cmp sub or dec (bad) mov jne push (bad) (bad) (bad) push cltd and push outsb dec push fcomp jne out insl add pop adc mov (bad) jg call or call inc idivb inc inc xor aas pop cmp add mov (bad) mov pop mov xchg jecxz lods dec jle jnp cmp jbe in mov mov (bad) insl mov aad (bad) test icebp mov stc add lods (bad) (bad) (bad) ljmp push inc (bad) out push test lahf (bad) adc cltd (bad) loop aas sub (bad) (bad) ljmp repnz adc jp ret sub mov pop out pop (bad) test (bad) (bad) incl mov mov mov lods in add adc out cli (bad) decl xchg mov dec test inc xchg mov add push lahf and inc (bad) cld (bad) (bad) (bad) (bad) stc xor sahf and lahf cmpsb lret ljmp xor mov lods add (bad) (bad) lcall rol (bad) adc sub inc mov (bad) lock or jmp les fimul call sbb test mov pop sub sbb in xchg mov or adc cli je in lcall xchg test ljmp adc ss movsl es and mov movsb lcall incl (bad) fdiv push push jns xchg int jo and mov cmp jg data16 outsl cmpl incl cld call jmp outsl mov cld (bad) int3 push or and jmp (bad) lret xor bnd jle push or sub mov mov loope outsl (bad) (bad) (bad) decl jg mov lret inc pop push out rclb stos call into adc cmp nop icebp data16 mov mov ljmp xchg inc pop sub das fnop (bad) sbb and call test adc mov jg sub or xchg mov jg sarl inc mov fisubr mov pop pop imul mov xor or outsb rcrb pop arpl (bad) js iret dec ficompl (bad) call xchg loopne fisttpl bound cmpsb repnz or fsts dec cmp cwtl jb dec mov jle adc pop cwtl daa mov inc in cld sti mov outsl cli pushl subb jbe loopne lret push xor in call fwait pop icebp push pop push stos pop inc sbb dec jnp xchg mov (bad) jmp and mov xchg push and iret lods jecxz rorb scas and gs ljmp call or pushf lods mov xor mov call (bad) or aam pushl xor jecxz lea (bad) mov inc and mov mov and (bad) mov test inc sub (bad) (bad) lcall push jecxz push lahf or mov sbb inc pop fisttpll jmp (bad) dec pop idivl (bad) fistp xchg sub movsl push sub jbe dec icebp mov xchg iret xchg (bad) (bad) pushl xor movd roll sbb daa (bad) mov fsub (bad) (bad) incl daa sbb and xchg inc push mov out (bad) cmp clc (bad) mov adc and mov jg in mov into (bad) push (bad) (bad) (bad) (bad) cmp push ret pop sub nop adc cmc cmovo stos mov pop pop outsl adc (bad) mov aas add xchg xor push rcll je mov (bad) mov cmpsl adc cli push mov jmp adc pushf mov outsb pop xlat (bad) (bad) (bad) (bad) cmp jg inc andl leave mov int jns sbb (bad) decl aas pop js mov fnop in jecxz test xlat hlt decl lock adc into jmp sbb movsb mov das hlt or jb (bad) (bad) lcall cmpsb and popa arpl pop push sbb loope adc sbb mov mov shll mov fwait inc fmull xchg mov inc xchg (bad) (bad) lcall fcomps out adc mov sub push inc cmp subb ss scas (bad) (bad) (bad) call test jne cmpsl push in jae enter sbb faddl jecxz lods mulb pop movsl add (bad) (bad) call jno jb rol jecxz insb pop fs inc xor push xchg fstps sub (bad) (bad) call lret mov ret aas (bad) xor cs ja mov icebp (bad) (bad) (bad) mov xor shrl mov cwtl jns ja and push ret sub lret cmpsl mov (bad) lcall imul loope rolb cwtl jl scas mov or das loope les push test pop insl fs (bad) dec shl cs outsl (bad) cli (bad) (bad) ljmp push and fwait push inc fcmovne add out lock push aam add js cs scas es and sub pop (bad) push dec pop addr16 andl enter out or xchg decl decb scas addr16 sahf mov mov lock add (bad) (bad) decl in inc mov loopne (bad) xor movsb xchg mov jne rcrl (bad) (bad) (bad) decl rclb or lods cmp mov (bad) jno iret dec and jecxz cmp (bad) (bad) (bad) fcomi jo mov aam insb shrl pop and aam cwtl hlt or (bad) (bad) jmp xlat mov sbb mov repz js pop decb push inc (bad) fcos (bad) (bad) jmp push ret xlat pop ljmp lahf pop add in mov dec shlb mov mov sti cmp loope adc invd outsl clc adc sarl (bad) (bad) (bad) (bad) mov hlt mov mov test pusha or fs mov adc (bad) mov (bad) (bad) (bad) (bad) fiadd pop push mov dec sub add lds hlt sahf cmp jbe lcall push fcomip (bad) pushl push (bad) jo mov test test mov dec mov das xchg or sub cmc cmpsb (bad) cli (bad) pop lahf cmp sahf mov (bad) (bad) out fdivrs cmp scas repnz mov mov fadds (bad) (bad) (bad) jmp popf shlb sub out push pop jne fnop mov nop ds jge stos in mov pop (bad) mov rolb push flds (bad) mov inc adc ficomp out lods dec lods push jg (bad) dec xchg push and sbb ficompl xchg push fnstsw (bad) jmp sub and imul test shlb dec mov jnp pop dec inc pop iret sbb jg lcall cmp mov mov sub sbb int3 (bad) (bad) (bad) pushl in outsl je pop mov ds daa xor fcomps xlat pop or fnstsw cmpsb mov es clc incl inc fidivl xchg push in inc (bad) mov sub or pop push pop mov cmpxchg xor jns not xchg (bad) (bad) (bad) push loopne pop xor pushf pop mov xor ja sbb lret sbb push mov xor pop and and add and inc dec adc jns roll (bad) incl jg lods sbb icebp insb test (bad) pop jne lret test push and icebp sbb (bad) (bad) pushl sarb xlat dec pop xchg popf mov and jmp cmp les and pop sbb jmp mov mov and mov or pop lahf adc inc out jbe ljmp dec (bad) adc jle call (bad) (bad) mov mov loop mov push jge loopne mov mov dec jg pushl sub push inc dec sbb mov ret pop insl shll jmp aad call jmp lock es fadds xchg mov jmp adc (bad) lcall in fcmovnu pop outsb inc adc push fstp shll lcall or add imul (bad) or outsl xor cltd (bad) pushl cmc clc js ds fsubrl dec mov jae (bad) (bad) (bad) decl sub ljmp xor pop add js jno stos iret je (bad) (bad) pushl xor and aas dec inc jne scas sub orl (bad) (bad) call xor int3 std mov rol lret (bad) ss inc xor lret mov xor (bad) icebp out adc jmp addb fsubrs test incl sub push idivl std sbb lock xor mov cmp rorb inc xchg out (bad) (bad) incl stc and jg push into xchg adc test jnp fisubrl icebp jbe out xor (bad) decl test lret stos clc popf mov dec cmpsb inc pushl call hlt (bad) (bad) mov movsb sbb jge adc push xchg mov das mov scas clc adc sbb dec cmp jg mov (bad) (bad) (bad) ljmp test xchg xchg push iret stc stos xor sbb inc int or sahf aas rcrl (bad) jmp mov push cmp sbb and push arpl andl inc inc dec shll mov pop dec (bad) cld sti or cmpsl adc mov pop jg (bad) pushl in out fidiv lahf rcl xor and add pop and iret mov (bad) (bad) decl pop cli ja xor mov not (bad) cmp (bad) push jmp icebp (bad) (bad) call add outsb cld jne repz gs (bad) xchg pop pop test outsb outsl (bad) ljmp fs xacquire sbb sar test xchg sar call data16 lea fwait ljmp mov (bad) (bad) decl cmp mov pop stos out or xor add mov ret (bad) decl and aad pop aas flds jge mov and sub add xchg xchg jle pop stc and jecxz push cmp inc add ror out dec lret adc stos jns sbb clc cmc jl (bad) and xchg and pop mov (bad) call and fisub xor cmc add (bad) (bad) (bad) jmp sbb std int3 jl aam jp je xor loopne addr16 outsl lahf ret lock pushl lea divb rcr aad lock add bound cmc test nop xchg xor (bad) (bad) (bad) (bad) mov nop insb fucomp dec push xchg or gs or fs (bad) (bad) mov cmp jbe js daa jne inc in xor (bad) (bad) jg mov ja mov leave repz outsb mov fcomps movsl pop fisubl in cmpsb adc mov mov add rorb add movsl lret sbb xchg movsb mov pushf cmp mov jbe and push aaa std (bad) pushl mov inc mov pushf arpl xchg xchg cwtd (bad) add jbe insb and mov and stos mov jb int movsb mov pop loope (bad) mov hlt insb dec xchg (bad) adc mov push jl add (bad) (bad) (bad) (bad) jmp xchg test fcoms add xor xor das lods aad mov rcll cltd inc gs (bad) jg shrl scas outsl sbb sahf xchg (bad) mov vpmacssdql mov xor mov les cld test mov (bad) (bad) (bad) mov jmp loope xchg fildll pusha mov sbb scas (bad) (bad) (bad) jg pop sbb mov jmp mov sahf sahf daa fwait push mov scas xor fwait sub call incl adc (bad) pop pusha les sbb jae gs (bad) (bad) jg mov rcr cmp xor dec das pop aaa scas sahf jbe stos jae pop cmc push inc mov (bad) pushl push mov or fcmovbe loopne jge inc ljmp fnstsw sub fwait sbb push aad xchg jecxz rorl push sahf inc clc ljmp add add jnp ds cltd mov lods (bad) (bad) (bad) decl mov push jl xor mov js add (bad) (bad) pushl inc mov push mov out xor jo fimull (bad) (bad) incl cltd xchg adc or xor ficoml adc cs xchg adc lahf cld int flds dec inc sbb scas in (bad) testl ds mov xchg pop test mov push cmp push jecxz push clc (bad) lcall ljmp or mov cltd pusha xchg mov (bad) (bad) ljmp dec xor out sahf data16 jp mov rcr loope (bad) ljmp popf fcoms popf mov xor imul lret aam cmc pop (bad) (bad) (bad) call and or sub ret dec xchg (bad) sbb add sub sahf mov add cmp imul (bad) dec ds fsubl jns (bad) mov aaa or mov dec bound jmp cli iret loopne and mov jnp and mov mov mov mov cs test gs xchg movb pushf test push (bad) (bad) (bad) dec jae iret mov outsb lods sahf not cmp add test xor mov out xchg daa lret dec lods (bad) lcall inc test (bad) aad dec dec mov cs cmp push cmpsb cwtl push in (bad) (bad) (bad) incl int jnp rcrl out pusha lahf mov mov jmp push popa idiv (bad) (bad) jmp cmp inc xor iret xor xchg stos sti sbb pop mov and dec (bad) (bad) (bad) jmp push stos aam js sbb cld loopne xchg mov (bad) or lcall pop cli inc jecxz lock add insb cmpsb das push push adc lcall or jo or out (bad) mov or sbb cli je adc (bad) (bad) (bad) (bad) aas cmp or ss cmc add push imul or mov adc (bad) (bad) lcall push mov mov pop popf pop ror jnp inc loop lahf addr16 (bad) jmp jne push jae call mov in lods xchg push pop imul sub ss jg (bad) lods repnz jg stos and push pop mov outsb je (bad) (bad) mov jl (bad) pop or pop clc loopne inc imul lds dec ljmp leave fcompl daa popf jg pop mov test pop iret and int3 mov and (bad) (bad) lcall mov iret icebp jg,pn pop jne xor adc mov xchg mov xchg cli int mov fs lcall sahf les dec push mov ljmp (bad) cmp mov mov popa mov push xor mov pushf push (bad) (bad) (bad) push jmp jp daa je jb in js ljmp mov ret (bad) (bad) (bad) ljmp cmc in lahf (bad) repz xchg push enter insl sub out jns cmp and xor (bad) (bad) push sti scas sbb pop pop mov sbb aaa mov xor js out ds popa (bad) (bad) (bad) (bad) in je popl negl rorl sbb int3 inc jns push lds (bad) inc xchg mov in insb pop outsl imul push pop jmp ss pop pushf or mov inc ds sahf in add mov (bad) (bad) mov leave inc int loope mov mov sti inc xor xchg xlat movsl cld pop pop cmp clc sbb mov mov xchg push jge lods mov js (bad) (bad) (bad) ljmp add sysret hlt bound and jns xchg inc inc inc aad pop stos mov ljmp imul pop cmpsl aas out mov mov xchg dec sub arpl (bad) (bad) incl mov fldlg2 ffree cmp lea mov jbe lds dec sbb mov cmp mov (bad) (bad) jp jp xchg hlt jmp mov and icebp jb loopne push jmp cs imul ljmp sbb lcall mov jmp hlt fnstsw pusha (bad) jo or xchg xor aad std call cld cltd xor jb outsb ds mov cmp add cmp std (bad) (bad) mov push mov dec mov fsub insl outsb cltd mov call adc dec (bad) (bad) call div in jbe mov mov and push sbbl pop cmp mov fwait das sub clc dec ret xor pop daa sahf in or daa mov fdivr jg (bad) hlt pop dec outsb ret mov jmp sub xchg cmpsl (bad) fcomip call adc pop add xor enter lidtl jne add je mov pop mov call push scas mov xor inc in insb mov cli (bad) incl stc loopne mov jmp push out in xchg fildl mov pushf jb loope xlat ret clc pop push (bad) (bad) decl cmp sub sarb xchg xchg test sub cltd clc cli inc cmp (bad) (bad) call repz lods xchg xor out mov xor cmpsl int jb (bad) (bad) inc outsl rolb pop xchg push pusha mov bound stos xorl in lods pop out mov jg ljmp add xlat sub inc aas fisubl lock mov dec jb adc jae xor sarl ljmp push fstpt in (bad) sarb sbb inc jp mov xchg pop sub (bad) pushl scas cltd pop ret mov and pop dec mov call fcomip cwtl and (bad) into aam andl cmp lcall fadds xor daa inc imul clc inc int sub fsubl fistp (bad) ljmp shr loop add mov cltd and stos jge xchg add shlb (bad) cmpsb mov xlat rorb and mov mov pushl push jb or jae fidiv loop dec add mov or jge out push (bad) (bad) (bad) (bad) clc lds popf bound out push scas pop adc push movb adc mov sbb fdivrs push ljmp int3 dec aaa out bswap ret mov jle (bad) jmp mulb stos xor repnz (bad) (bad) (bad) incl push jg inc stc ljmp mov inc stc in pusha das out xlat xchg sbb daa (bad) (bad) (bad) call fucomip sti rclb xlat pusha jbe lds cwtl pop adc xchg add stos leave xchg out sbb (bad) fcomip xchg sbb bnd pop fldt cli fisttpll xchg push push decb ljmp je lea mov (bad) (bad) call inc popf fadds out sbb dec and aas dec or mov into pop fdivrs (bad) (bad) (bad) call push mov aaa stc mov rolb push out fmul or cmpsl call push je jmp cwtl push lods mov xchg cmpl je mov popa fstpl shll hlt (bad) call cs fildll mov arpl loope fwait lock mov sbbb popa sar (bad) mov ss pop je add adc fcoml mov ret (bad) (bad) jge in cmpsl pop mov adc sbb lods push fsubl rol adc inc into mov scas imul cs (bad) addr16 push jl add push sahf popf insb inc xlat cmc cltd addr16 lds and out clc (bad) aas fimul hlt fs sub fs je fsub enter cld std (bad) (bad) ljmp mov xor adc (bad) mov call jns fisubl xor mov (bad) (bad) call pop scas out hlt cmp (bad) sbb hlt or loop push mov mov add add push fidivrl push (bad) (bad) (bad) call mov stos xor mov dec ja fs stc pop daa and insb leave (bad) jle mov (bad) (bad) (bad) in push cmp mov mov adc dec cmp insl add mov js pop dec add subl iret pop in enter mov ljmp mov xlat lea (bad) (bad) lcall ss aam (bad) push stos pop sub in out out out enter movsb std movsl test lock lcall call push mov (bad) xchg mov mov loop (bad) decl dec ljmp fisttp rolb mov cmp les inc dec mov roll jg jb mov (bad) in (bad) (bad) in pop xchg cmp mov lahf je cmp scas xchg sbb mov ret (bad) incl jnp testb sbb (bad) and push lods jnp push (bad) (bad) (bad) call (bad) movsb dec inc jo pop jbe imul adc inc dec mov fisttp aam add jg cmp fimull fcomip fistpll push leave stos ja push mov leave (bad) call inc lods repz mov pop stos inc xor loopne xor mov jmp fidivl out push mov dec sbb (bad) sarl (bad) (bad) fnstsw icebp add cmp and bnd pusha pop mov and or sahf mulb jle arpl (bad) call mov xor xchg test clc inc xor cmovne (bad) (bad) mov and sbb lods dec aas mov je pop dec sub nop incb add dec inc xchg outsl cmp in (bad) jno mov mov xchg dec into hlt push icebp pop cmc mov adc popl fcompl out sub cmpl mov ret pop (bad) out inc jl push jmp aas (bad) pop xchg adc (bad) (bad) (bad) jmp pusha aaa push jp sbb sahf adc jmp pusha sub xor adc test icebp (bad) (bad) (bad) jmp push cmp dec ret stos jl mov jnp xor ljmp (bad) (bad) (bad) call adc insl or mov stc loopne inc rorb (bad) imul out aad jae and (bad) (bad) jp jns adc or jbe sbb sbb mov mov or (bad) (bad) lcall xchg push rorb pop push out mov clc cmc lahf scas xchg daa or pop sti mov add or mov loop,pt scas lahf xchg (bad) fcomip cmp outsl xchg jl negl jp sub daa and or sbb mov (bad) (bad) mov test sub insl sub enter xor mov orb mov ds out adc pop cmp mov std cmp or insl add sub jns mov dec pop das inc pop dec inc aam sbb mov cld jmp (bad) incb rcrb or ds (bad) (bad) jg mov adc in sbbb imul sbb push or jno dec push or add (bad) adc xor sbb scas xor scas dec (bad) (bad) (bad) jg mov add mov push pop in mov aas inc jb inc sub movsl lods pusha push add (bad) (bad) decl mov loope jbe sub les out sub push mov inc adc (bad) (bad) (bad) call push pop popa add scas les dec test negl in adc xchg inc inc xor mov sbb cs ss mov mov or mov adc (bad) out into das mov fs mov aas dec aaa hlt and (bad) lcall sub jno iret jp jl xor add int jbe in (bad) (bad) ljmp ljmp adc es arpl xor lret stos mov jp (bad) (bad) (bad) pushl hlt ljmp int in push fwait cmp inc add (bad) jmp mov pop xor adcb ret xor hlt xchg enter mov jg mov jne sti jbe gs xchg es mov in pop sbb sbb movb repnz add push pop inc (bad) (bad) (bad) call cmp pop div push and (bad) sar ret imull jecxz push pop xchg popa cmp call cld call rolb ret inc push out sbb sub cmpsl out mov pop cld stos xor add ret and call imul test pop jns sub lcall push loope lret xor xchg paddsb dec mov subl icebp push add shr and pop jnp mov and mov in adc movsl inc mov dec dec mov (bad) jmp out aad xor loope adc add jmp dec xor sub push adcb pop push int cmp cmp (bad) incl sub iret mov dec repz dec push push daa fsts (bad) (bad) pushl stos nop dec jg sub in push sbb xor xchg test sbb loopne scas pop (bad) sub xchg in inc and in scas pop out dec pop cmpb sbb push push lcall pop nop jbe arpl mov mov daa dec lret lods jno mov dec lods mov pop pop insl lcall clc test mov insl js dec (bad) (bad) repz (bad) adc sbb ja mov data16 inc jo cld (bad) (bad) jg int mov dec sub mov jns adc mov sbb push adc (bad) incl fcoml popa clc jle xchg or and mov sahf jo std sub imul (bad) scas mov pop cmpl ficomp add cld lods dec aam aas sbb cmp (bad) popa jmp dec sbb adc sub leave aam inc cli into cltd aad or pushl cltd inc leave sbb or in lods add inc cwtl cmpsl inc aaa imul bound (bad) (bad) (bad) cmp mov fcomip into movsb icebp rorl pop jae inc lock and popf dec pop xchg mov jmp adc cs pop out shrl add stos dec cmp add into sub (bad) (bad) in incb pop repnz mov nop cmc les pop (bad) jb add es (bad) (bad) (bad) jmp lret mov lcallw mov iret (bad) jb pop bnd stc jno lock mov hlt aad mov hlt mov jg add mov fild push gs adc cmp loop pop mov xchg dec dec sub daa je mov popf sub (bad) (bad) (bad) decl push iret mov mov jmp pop inc sub jge test add aad cld int3 dec push icebp mov enter pop arpl mov loope xor or push cld shld ljmp stos or cld add fiaddl ss cmc jbe add popf pop stos punpckhdq decl mov roll mov stc lcall in movsb repz inc idiv (bad) jg cs es aad sub or and shlb pushf xchg out (bad) out clc incl jl out xchg aad sahf (bad) enter ljmp push pusha mov pop adc loope ret pop push stos ds fisubrl clc (bad) (bad) cmp (bad) icebp add sbb bound bound (bad) (bad) jmp mov cltd jle (bad) mov sub dec lods (bad) pushl mov jns loope cmp add adc call ss mov mov pop movsb jecxz jmp scas fisubl xor add (bad) dec and jecxz push inc out lret (bad) mov fistpll test xchg js movsl or push push mov sbb cmp das repz or dec mov dec int movsb xor dec nop rclb inc push in in ds (bad) (bad) decl sub stos ds cmc fsts pop jecxz rcrb pop fistp xlat (bad) jg dec ds loopne inc mov sbb out inc test inc sbb je test cmp daa imul data16 dec xchg daa popf dec push xchg loope (bad) (bad) (bad) pushl in mov imul sub sub inc gs (bad) (bad) (bad) jmp sbb add ret loop mov inc push push sbb int3 rolb test and dec mov sub (bad) (bad) jmp dec xor xor repnz add ljmp xchg dec inc rcr sub mov mov xlat jo outsb insl test lock pop mov clc (bad) push or push (bad) mov (bad) (bad) (bad) jmp idiv xchg fucomp jae push adc aaa mov xorl jl icebp ljmp clc (bad) out test addr16 fcoms push mov ljmp push cmpsb pop mov decl push jnp popa loopew push insb popl inc push push orb movsl sbb (bad) (bad) imul mov pushl rcll scas movsl in or jo xchg add mov or (bad) (bad) (bad) lcall clc cs sbb cmp rolb insl pop xlat push and dec add inc cld (bad) (bad) call mov out mov cwtl xchg xor arpl jge insl cwtl ret in sahf mov sahf or adc xchg pop (bad) mov xor int3 mov (bad) (bad) (bad) lcall xor sub cli inc stc sbb into mov xor dec and (bad) call imul loop jge negb ret lock pop les cmpsl mov (bad) xor sbb es sbb pop add cwtl sbb mov inc push pop data16 inc std or xor insb mov lock cld push (bad) (bad) (bad) (bad) cld and les add fsts cmp popf adc call xchg inc xor mov pushf dec aad lds (bad) (bad) (bad) (bad) insl leave out inc lods cs faddl insl dec insl std jecxz xchg push loope mov cmp (bad) pushl cmp cmp stos in scas cmp pop or sbb test inc and jg into ljmp cli ljmp inc cmp ja mov and inc int3 xchg mov push out cmpsl xor ljmp fcoml jle fistpll adc pop sbb ss ret stc cli mov mov (bad) (bad) (bad) push mov push xchg sti dec shrb or in lahf leave mov lods aaa loopne lds pop (bad) (bad) (bad) lcall loope push pusha pushf mov sub sbb fisubrl pop mov and out inc hlt (bad) (bad) decl push (bad) in xchg jp sub push pop sbb sarb jl mov xchg cmp (bad) (bad) (bad) fbld mov add lock aaa ss push jg pop adc cmp mov insl (bad) adc (bad) (bad) (bad) lcall xlat inc mov dec fnsave arpl (bad) lret sbb pop ljmp call cmc cs test or ret mov jg jmp inc pushf lods cmp movsl sub jmp cmc jmp push movsb orl incl scas test mov or shlb dec push incl ja jnp cmp cs lahf jge mov cwtl aas les fisttpll and inc push jecxz (bad) (bad) out ds push xor pop mov mov stc js pop pusha dec adc add insb and ljmp adc mov dec xchg jg cmpsb sbb aas adc (bad) (bad) mov (bad) ret xor xor cmp cld pop xor clc mov push (bad) daa xor ds decl out mov pop mov mov arpl lods push mov (bad) (bad) (bad) call push lods xlat lods pop sbb mov mov mov xor idiv (bad) (bad) ljmp mov sub xchg sbb and jle mov call stos (bad) (bad) (bad) (bad) lcall jne nop es bswap out std push jno dec pop sbb adc imul and (bad) (bad) (bad) ljmp pop dec adc pop mov ss jecxz cmpl mov test jae (bad) (bad) jmp scas mov insl fs mov ljmp mov dec (bad) xor sti mov push jmp int3 fisubr in sub sbb aad outsl aaa (bad) jg hlt hlt xor or dec aaa pop jne inc scas popa mov ljmp or in mov push outsl fs push (bad) ss cs ffree (bad) fcomip ljmp aam jl or fisubr stos dec pop icebp inc iret xchg daa sub push (bad) decl adc cmp (bad) xor add jmp arpl adc or cmc out imul push aas push pop cmc (bad) (bad) (bad) (bad) mov cwtl (bad) dec mov lock push daa and cmp test mov mulb fisttp push dec (bad) incl sahf insl andl enter xlat dec mov sbb ficoml (bad) (bad) jg mov cmp mov mov repz ret test push loopne inc inc test (bad) lock and stos je jmp scas inc insl xor add (bad) cli (bad) (bad) (bad) decl cmp (bad) mov lock lea or pop sbb sbb (bad) (bad) jmp scas test inc aad sub mov daa outsl mov add adc push std xor aaa icebp loop push aad shlb pop mov scas dec repz (bad) (bad) incl jno daa sub sub test add or addr16 or xchg (bad) sbb cmp scas (bad) (bad) (bad) push daa in sub cmp mov fs jl (bad) fdivs scas xchg xchg cmc sbbl jg lcall sbb cmc pusha sahf rcrb xchg ret pop icebp cmpsl cmpsb jae popf (bad) xchg mov xor aaa std xor out cmp loop repnz mov popf (bad) mov xor xor (bad) (bad) decl fsubrs xchg minps repz fildll jo mov push fiaddl lock jg sub mov jnp shl mov push dec (bad) fild ljmp enter daa mov ja sbb mov aad cmpsb call add jle (bad) stos lret inc out (bad) (bad) (bad) flds mov xchg ss lahf int dec inc or scas daa pusha js lock dec mov jg (bad) fisttpl in push mov inc dec adc pop sub stos inc aas loop les or add (bad) (bad) jmp mov lds and cmp mov out pop into scas ss inc push sahf outsw in jl or (bad) (bad) mov add adc mov mov xor sub and ss cmc jmp subl mov and jg ds into into call (bad) je xchg test addr16 mov xchg test and and adc or (bad) gs into incl or icebp xchg out sub pushl std lret (bad) dec stos or jns divl adc scas cli scas (bad) jmp lods push stos mov sbb and std sbb sahf add ljmp nop fistl xchg push iret dec pop push lock mov cmovge pushl add fsts std xor into mov rcrl (bad) icebp andl aas add aad fxch out int3 mov fild in test fisttpl adc inc pop jp pop xor xor call jecxz mov (bad) sub pop sbb mov inc test out lds adc (bad) (bad) (bad) jg fucomip xchg mov adc out inc push test mov cs (bad) (bad) ljmp rcrl push add xchg pop popa lea pop aad imul mov incl ret pop jno lds xlat mov cmp pop mov js and mov (bad) (bad) (bad) jmp daa int3 pushf pop xor negl or inc cmpsl push test int add iret hlt xchg jl (bad) (bad) jmp (bad) adc loope (bad) ja testl stos pushf iret mov push (bad) pushl adc push inc dec mov dec adc push mov popa cmp icebp (bad) (bad) dec mov out mov mov fiadd mov cmp mov sbb jge xor (bad) adc pop sub cmp push test ds xchg push aam xchg sahf (bad) (bad) (bad) (bad) mov les adc jns movq jg inc and xor jge mov push sub shr ljmp add inc jmp push jb fidivl cmp int3 test sbb loop xchg cmc (bad) (bad) (bad) call cmc outsb sbb iret gs adc sub pop lods push test adc js inc outsl ss mov (bad) (bad) (bad) (bad) cmp mov or sbb (bad) out sbb cmp adc or xor ds ds in sub (bad) (bad) decl mov or push adc jae jb das push inc dec popf xor jmp push xor fildl aaa cwtl cmp stos mov fwait xchg mov outsl mov movsb mov rcrb jb sub sub inc cmp dec (bad) (bad) (bad) lcall xor mov loopne inc cli add pop ss sub fbld decl fisubrl ret (bad) (bad) (bad) decl mov ds mov jb cmp mov aam in dec cwtl push stc (bad) (bad) (bad) incl cmp push mov leave jge push in cmp lahf xchg jnp sbb adc stos hlt popa sub test (bad) (bad) call cmc clc sub inc add out int xchg xchg jg ror inc clc push out push (bad) negb (bad) ljmp cmp (bad) cmp cmc pop sub mov pop mov jg push jl pop pcmpgtw cs decl jbe test rcrl pop jmp (bad) insb sbb mov (bad) (bad) (bad) jmp in or mov and aas in int3 movsl and inc (bad) lret movsbl imul icebp incl xchg add jp mov dec call lcall lods es ljmp pop or or fbld addr16 out xor (bad) (bad) (bad) jmp mov or lods insb (bad) inc fstl xor addr16 xchg jb mov (bad) (bad) (bad) (bad) jge cmp jge pop jo jp rcrb sub rorb jg or pushl (bad) mov fcoml cmp cmpsb xor adc sbb (bad) lcall mov push orl cmp pushf xor push xor (bad) (bad) pushl out jae leave arpl fwait das add imul and (bad) fdivrs (bad) (bad) (bad) decl repz imul sbb out inc cmp int3 push (bad) (bad) outsl pop rcrl jecxz (bad) (bad) pushl inc into fcompl ss cmp xor in aad xchg ja clc (bad) (bad) (bad) mov xor xchg mov fcmove mov add jno imul (bad) pushl add (bad) pcmpeqd sbb add sbb popa test push rorl (bad) (bad) (bad) lcall es ret add and dec xchg push aas xchg or fcmovne and inc dec clc push xchg (bad) in cmpb nop das jle cmc dec leave ds lods or lea cvtpi2ps xor mov js adc or xor lcall pop out cmp (bad) (bad) call in movsl dec dec sbb xchg clc int pop xor jp int3 adc (bad) mov insb addl decl insb stc in mov dec sbb and lea stos push sbb adc cmc addr16 mov mov jp dec mov movsb lahf leave daa out mov dec stc lock call add (bad) ljmp (bad) jbe dec mov cmp and outsb in cwtl fsubrs call jmp xchg mul mov xchg enter mov imul push inc cmpsl and repz ds cmpsl xor jno in icebp mov (bad) imul sbb mov or aad loope cmp dec adcb (bad) (bad) (bad) cmp lcall lret mov jo orl add cli xlat xlat sarb (bad) (bad) incl test cli arpl insl aas pusha out dec jle rcr xchg mov (bad) adc (bad) xchg cmp (bad) (bad) dec push fimul jmp jns lods out ljmp je sbb (bad) jmp mov pop ret mov test mov (bad) lcall in lret (bad) sarl jl xchg lock inc cmpsb xor addr16 ljmp push inc imul test (bad) mov pop hlt adc (bad) incl aam arpl inc scas leave lret and mov jne pop xchg addr16 (bad) (bad) incl mov les in xor out xor jmp cltd push xchg cmc stos and mov dec mov jae lock ret rorl rorb jb (bad) (bad) (bad) decl xchg or call fnstcw stc inc outsb mov nop cli scas cli (bad) ljmp bound (bad) sahf inc jbe pop (bad) push dec insl cs not xchg mov push es sbb addr16 movsb stc inc je in (bad) inc mov inc cmp mov aam (bad) (bad) int3 dec dec dec in pop lods push fildll mov and jge dec imulb (bad) (bad) decl mov ljmp mov cmpsb sbb insb jne lock dec clc dec sar (bad) call and dec icebp rcr cmp lret pop fidivr (bad) imul lds lcall incl push inc cs mov sbb mov adc and jb (bad) aaa jo and jnp mov push stos rorl mov (bad) ljmp push mov icebp (bad) cld cmp xor mov loopne cmpsl ficom in push xor int3 and (bad) (bad) call lret enter jnp xchg sbb mov dec test sbb shll hlt fwait (bad) (bad) push jle and lret rclb enter jbe sub call (bad) (bad) aas cs das fxch dec and (bad) hlt cli xchg jmp ficoml hlt pop adc mov das mov adc mov insl or xor push pushl adc nop mov mov sahf xor fidivrl lahf inc imul (bad) incl aad imul (bad) jg mov mov mov mov (bad) jmp jb xor xchg xor and add cmpsb cs pusha mov add out and (bad) pop (bad) sbb clc sub adc or (bad) ljmp or scas and dec insb int3 add cli dec mov (bad) (bad) pushl lahf push rorl out (bad) xor imul or mov es out add (bad) (bad) incl scas mov cmp pop sub sub and sub in lods popa lahf inc xlat sub loopne jle repz inc mov les lock idiv push lock dec push push aas inc (bad) rcll hlt (bad) hlt and lds (bad) (bad) (bad) (bad) clc cmp push je mov or lock pop stos mov inc xor mov (bad) (bad) decl divb push adc or pop gs imul jbe stc mov call stos jg xchg pushf dec (bad) cmpsb cs loope jne jg adc int3 jnp call jno inc test (bad) jmp mov gs push cli (bad) mov mov add push divps (bad) decl popf (bad) fdivs test rcll cwtl mov aam lock (bad) jnp (bad) fbstp sub scas jl jle shlb int3 arpl (bad) mov ds arpl dec rcr in mov sub jp mov mov cmp fiadd mov sahf ss lock mov push das jo mov and pop jg jbe (bad) ljmp in push lahf adc in mov daa vcvtss2si pop mov in call cmp jmp jno out push mov inc shrb dec xchg iret jns add pushl pop aaa xor and mov mov int3 jbe (bad) jg mov fld inc mov dec hlt outsl insb sbb (bad) repz add (bad) (bad) (bad) lcall (bad) stos mov pop (bad) aas xchg push repnz dec xor push cs inc movsb (bad) (bad) decl xchg ljmp or and pop pop sbb (bad) inc sbb xchg repz push shll fdivs jl imul mov inc pop jno or (bad) (bad) (bad) pushl lock jns imull into xchg rclb fldenv cmp lret add xchg icebp push sbb loope (bad) jmp sbb out xor rol adc ja sbb ds lcall mov fwait inc pop pop cmc stos mov sarb sbb push sahf fs ss incl clc pop mov ficom pop (bad) (bad) lcall add adc inc fstps repz pushl xchg call enter mov cwtl movsb jge sti mov push sar jle xor ja cli adc pop sbb mov ja (bad) xor sub out test push daa lods mov icebp gs call mov dec fdivrp ret mov push enter (bad) (bad) call mov idiv scas inc int leave jmp inc mov mov addr16 mov pop inc jne psrad lock aaa enter mov stc rol jns ljmp dec xor mov lods sub pop (bad) jl mov cld das push ds pop cs pop or (bad) jmp adc pop push int jo adc push loope pop cmp lcall ds and insb jg inc movsb js sbb pop adc inc pop (bad) (bad) fildll loope push (bad) adc jmp ds (bad) (bad) jmp iret push aam ljmp out xchg jmp (bad) xchg es cld ljmp (bad) (bad) (bad) (bad) cmp sbb mov imul andb inc arpl push xor add sarb (bad) (bad) (bad) out mov loop adc jg sbb lods je into jne pop cmp add aam and or arpl mov loope (bad) (bad) decl stos inc call cli sbb mov int3 fisttp add push mov bound pop (bad) mov and pushl cld sbb and loop cmp (bad) mov mov aam incl mov push pop and rclb ljmp (bad) (bad) lcall jp push or push outsb mov shl mul (bad) mov mul push mov fcoms es in sub incl jo mov or out cmp lods (bad) cmp mov (bad) cld cmc xor push and stc imul inc cmp adc cmpsb es sbb cmpsb push push pop add decl and in sub icebp lahf ret js rorl (bad) (bad) cmp jnp push popf sbb mov add jns mov cmp push (bad) xchg das sar xor roll in and fwait test dec pop fidivr mov push jae ficoml (bad) call push push repz cli dec les jo push jae sbb mov neg call add ret pop sti aaa cld xor (bad) and mov test cmpsl jo inc imul test call or insb aad and adc mov insb cmp fildl jmp std jns lds enter imul aam xlat mov stc inc mov mov lcall ds call ljmp xor out mov movsb (bad) jmp cmpsl push jb lahf push pop in add pop cmc (bad) pushl hlt aaa jnp inc push add mov insl lcall pop inc out aaa std mov xchg jnp (bad) dec mov lahf adc sbb js (bad) (bad) call punpckhbw jo in xor pusha es mov ficomp hlt nop add jg (bad) (bad) (bad) decl cmp imul loop sub cwtl pop add imul (bad) (bad) (bad) jmp mov mov mov adc outsb pop ret jb fcomi stc test (bad) (bad) (bad) (bad) aas pextrw and adc or (bad) pop pop fwait dec (bad) sarb xchg cmpsb jl out push hlt mov incl inc ret cmp cmp dec pop (bad) std daa cmp rolb insl xor (bad) call fcomp push inc xchg test mov push push push pxor ja shrb sub aad dec enter arpl (bad) (bad) ljmp mov inc cmp xchg mov cli aad clc cltd dec jne pop lahf mov sar (bad) (bad) decl mov sub push xchg push scas mov mov dec insb rorb add icebp daa xor stc push lods push xor fldenv popa and add daa mov cmp sarb jp enter (bad) (bad) jle lret repz lret sbb scas mov pushf mov fs xchg loopne jg orb jle dec mov xchg cmpsb xchg sbb das cmp pop scas add inc add push dec xchg movsl (bad) xchg sbb (bad) (bad) call dec or xlat out pushl xor lock mov pop scas pop mov mov lcall inc mov xor out jmp (bad) (bad) (bad) jmp jo mov bound dec cwtl add iret push call xchg mov loop mov xchg jg ljmp jp mov xchg mov push xorb jl outsb lds push loope (bad) (bad) (bad) ljmp push lea out sub frstor dec lahf jmp std adc xchg repnz add mov mov shrl decl ljmp dec inc push sbb testb (bad) jle insb cmp inc cld jno movsb pushl jae xchg cmp inc stc ds les or add jbe push das dec adc mov jae int3 aad inc dec and mov xchg arpl (bad) (bad) (bad) jmp int dec popa adc add (bad) imul sub push and sub (bad) mov clc inc mov (bad) test pop or pop dec add push in lods dec test pushl xchg jno xchg (bad) jne mov imul jecxz sar mov jg cmp ret fidiv cld pop in jmp movsl jmp loopne test jmp imul inc push pop lahf mov mov xorl mov andl scas xchg (bad) jo sar inc xor (bad) (bad) aas out dec fcompl in out mov out nop push inc shll cmp in inc scas xchg cmp clc (bad) (bad) (bad) jg push ljmp les xchg xor fcomip push cmpsl dec (bad) (bad) (bad) out inc mov clc dec fwait add jp xchg or and outsb inc (bad) int3 pop mov stos xchg ljmp or or ret and or jmp subl or int3 addr16 clc push xchg in (bad) arpl cli ds (bad) pop mov (bad) (bad) (bad) ljmp add dec pop mov ret popf pop ljmp mov push sbb icebp add push pop lods dec dec rcl pop movsb adc (bad) (bad) incl cmp lea incb mov dec cli mov loopne (bad) fist (bad) (bad) (bad) ljmp cmpsl in lret xchg mov pop int imul push adc push mov inc jmp js hlt fs ds je sbb jmp inc or push cltd and mov sbb (bad) (bad) (bad) call in fisubrl lock mov loop push add (bad) xor stos das fistpl mov fisttp and mov rcll lea xor dec test (bad) (bad) cwtl or pop enter add dec loope push jns outsl cli jmp mov dec mov loope and mov cmp (bad) ljmp adc jecxz push imul cltd mov (bad) jmp ds in pop fdivrs out repz pushf fwait cmpsl xchg add ljmp scas dec push lock insb repz out std and das fwait or call je lret (bad) decl inc sahf test aad cmp cltd pop push lret add scas (bad) (bad) (bad) (bad) in in js sub addr16 jns jae add lods pop je mov fs (bad) (bad) jmp pop divb cmp adc arpl mov sarl jbe xchg mov xchg inc inc dec in and rcl pusha pop inc hlt cld out cld ljmp lret mov lea out (bad) fcomip sti mov lahf into inc dec cmpsl test mov int3 das rorl inc xor (bad) pushl sbb inc mov fiaddl mov test mov lcall dec test mov dec xor fwait (bad) (bad) (bad) decl lret adc std jo decl mov stos ret sub imul xor jl,pt mov sbb fwait lea into je mov sub decl mov jmp xor push cmp jne jmp leave movsl mov insl lock (bad) (bad) jmp loop addr16 dec pop xchg ret sub test fs add in pop loopne pop cmp idivb (bad) (bad) (bad) decl push mov fnsave mov mov popa loope push xchg sbb cmp jg jmp cmp mov scas cmp (bad) je (bad) (bad) pushl ror jnp mov movsl pop push rcl xchg pop mov jge dec vmwrite divl xor (bad) ljmp jns lods das xor flds add aam das xor add dec insb outsb and add mov push stos push arpl fadd cli (bad) call movsb cmpsb decl cld xchg sarl test movsb (bad) (bad) ljmp lods jge push lds fstl lret jg jbe (bad) sti into (bad) (bad) (bad) (bad) mov xor push ja insl jbe cmpsb ret add lods jae shl js (bad) mov or mov adc cmp fidivrl (bad) (bad) (bad) lcall or sbb lea mov (bad) or movsb sub or xor (bad) (bad) (bad) jmp aam pop sti dec lret pop dec test cltd jne fsts fisubl pop jbe pop dec lcall call (bad) stc (bad) mov xchg (bad) and (bad) (bad) (bad) call movzwl hlt and adc rorb pause sti stos mov lcall loop xchg test test jecxz int3 mov sbb add stos (bad) mov and sbb cmp sbb sbb insl mov cmpb lahf aas fiaddl fdecstp jo in xor clc (bad) jmp test call mov (bad) mov addr16 (bad) (bad) decl (bad) in sub std mov mov test sub loopne or (bad) cmp test popf push xchg sbb pop dec mov inc jmp fsts or push loop (bad) loope ret fdivs mov (bad) push sub xor cmp (bad) call test xor pop mov lret xchg pop lret mov pop xor cli (bad) (bad) call dec imul push add push addr16 xchg pusha dec cwtl mov (bad) (bad) pushl ss into lret sub cltd cmpsl mov andl popf cmp pop imul add call push fwait subl mov loop (bad) (bad) (bad) call mov mov (bad) je cltd inc xchg lret add dec outsl mov or mov pop push cmp incl cld ljmp repz cmp xchg and adc add lock mov (bad) (bad) (bad) (bad) cmp inc clc mov jecxz pop loop out lret (bad) repnz scas dec cmc pop cmp mov push mov (bad) pushl outsl (bad) loopne adc inc dec fbld lcall fsubr mov jecxz stc lcall jmp dec std push (bad) dec or mov xor (bad) jle insl sub pop or pop push (bad) (bad) (bad) jg stc scas dec jmp adc xor cmp mov sbb repnz je mov loope icebp rcl jb rcr sub popf adc mov (bad) call lret nop lods jo repz lret lcall sbb xchg fldl out push ljmp int fptan lret ret (bad) (bad) (bad) incl faddp sbb outsb sub (bad) ds dec lcall aaa cs push sahf test (bad) incl (bad) mov dec pop sbb stos xchg bound aad js push std (bad) ljmp push int3 push xlat sub cmp inc lcall cmc pop add clc movsb fadds push fldenv cld (bad) (bad) lcall adc out pop (bad) sti cmp sub imul (bad) outsl scas inc (bad) jg aaa jl pop push mov xchg aas adc scas add js lahf stos xor mov lods sub jl cmp mov inc in add ja fisubr outsb dec (bad) and (bad) (bad) ljmp sahf lret repz aad add cmp push decl test out jg push mov dec jnp jnp cmp (bad) (bad) (bad) decl cwtl xchg inc jno clc pop lods roll xchg popf fcoml mov dec cwtl sbb add xchg xchg inc call inc outsl xor hlt in ds sahf clc mov int or (bad) (bad) (bad) push repnz cmp and xlat das repz pop movsl mov mov in cwtl xchg sbb add (bad) (bad) call pop xor mov test push add mov adc loopne in stc jecxz push lcall jmp fld popf jne sbb rcrb sub pop inc push mov outsl (bad) mov decl (bad) jo push rcrl adc pop dec fidiv (bad) xor (bad) (bad) (bad) fnstsw jae dec aas mov cltd mov clc xchg xor ljmp daa (bad) incl ds mov loopne aas cmpsb push mov lret (bad) (bad) (bad) pushl gs xorl mov fisttp jo xlat cwtl hlt pop loopne push out insl or jae loopne pop lods out lods outsl lock lret (bad) (bad) (bad) jmp jne fstpt daa mov sbb fwait lods scas scas xchg and mov (bad) (bad) incl int3 mov sub jae inc aad imul loop sar xor (bad) jmp xor mov add or add xchg sub mov xchg outsl clc movntq aam rcr ret (bad) ljmp cmp sbb push loopne pop sbb xchg lea scas lsl (bad) (bad) lcall sub inc pop cmpsl mov clc scas aad jne xchg stos jle xor xchg add pop sbb fstps fnop xor adc jp or das clc (bad) jg jle cmc insl lods call pop jb mov cmp jae inc lds (bad) (bad) ljmp arpl dec xor je aas pushf in out jnp into push adc call mov lcall test sahf push adc mov push and enter scas jne pop pop dec mov lods leave icebp lcall inc (bad) out mov dec into jbe cmp sub or (bad) (bad) lcall adc das xor cmpsl imul mov pop je ds aaa cld (bad) dec jnp outsl and mov xor dec push xchg xor (bad) stos and pop and dec sar mov (bad) (bad) jmp mov xor fnsaves push cmc rol jae imul jbe adc xor (bad) dec int3 test (bad) ljmp push cli sbb std gs rorb enter mov and sub (bad) movsl not imul (bad) sarb stos jg out xor jecxz (bad) in and mov (bad) (bad) (bad) jmp push and add push mov daa loopne jae sub movsl adcl xor mov outsb rorb repnz adc out (bad) call mov cmp adc lods movsb cmp aas mov add jmp leave inc inc repz sbb jno mov ss pop rorl fstpl cmp ljmp mov repnz sub sarw stos mov inc aad leave fs out mov (bad) (bad) jmp data16 lock dec inc repnz enterw (bad) jg mov cwtl ficomp pop enter and mov jg (bad) incl push inc stc adc jg leave daa idivl clc or dec mov out cmp add (bad) call aas xchg (bad) cmp mov inc in (bad) inc mov mov scas cmp mov (bad) (bad) pushl sahf and xchg dec mov in (bad) push sub push in sbb cld in sbb notb mov movsb sub and xor push add and pop mov cmp sarl pop cmc cmp mov push (bad) (bad) (bad) ljmp jmp adc fistpl and dec xor jb out mov aam fsubr mov jecxz lods sub subl hlt lret inc enter mov cltd mov fadds (bad) (bad) (bad) (bad) cmp mov ja or test test (bad) jae cmp adc add jmp test sub outsl inc push jbe (bad) fildll dec adc jg aad sbb pop sar idiv cmp fs divb mov push fimull pushl sub inc cwtl jecxz mov sbb ret (bad) (bad) (bad) incl mov push incl mov dec movsb xchg push adc mov stos cltd fisubrl add add jo arpl mov push inc call push pop jl test mov adc daa fwait test (bad) ljmp sbb xchg sub pop pop jbe out shrl mov (bad) repz ret inc out (bad) hlt sub cli dec dec or sar mov xchg hlt scas xor adc popf cli fcos incl sbb lods sbb stos fild jb mov (bad) sarl jecxz or xchg aam aad std mov sbb ljmp popf dec les push mov mov jo (bad) das jg loopne incl and xchg inc das adc out es cltd dec (bad) (bad) (bad) mov sti pop or loop in xchg bound nop adc sub dec pop (bad) decl lock adc mov jae rcrb sub lahf pushl sar lret pop je mov pop xor xchg lret (bad) (bad) (bad) ljmp mov clc (bad) jb std fsubrl cmp mov adc jb das mov mov (bad) (bad) (bad) (bad) mov xor jle mov test adc mov cmc negl (bad) jnp sbb adc inc pop pop lods cs loope lret mov mov jmp mov fdivl cmp sub aad xchg sub push pushf add mov sbb pop (bad) dec add (bad) (bad) (bad) call fwait test inc mov loop adc into movsb ja call and iret ja popa cltd sar (bad) fist popf in or dec lods jne fist (bad) sub (bad) jmp sahf xchg and stos fildl adc roll leave je daa xchg mov (bad) lcall pop and sbb mov scas push mov lcall (bad) call arpl lret mov mov loopne pop cs adc sub (bad) out mov xchg or test divb jb lods sub adc cld jle ds push xorl test cli mov xchg xchg pop loop push sub (bad) (bad) (bad) decl (bad) jbe xor pop sbb xor jg fisub in jb imul nop or (bad) jns jmp xchg or enter cmpsb insl aaa std incl push scas mov pop icebp and jnp cmp cmp xchg add adc mov cld cmpsb mov aad pop jno bound nop mov jnp (bad) jg fs icebp dec dec xchg addr16 push or (bad) (bad) out clc jb leave jae outsb pop fcoms ljmp popf cs pop jge add inc jle lcall xor sub mov and sub jmp data16 (bad) adc iret addr16 aam test mov fcomip das (bad) xor xchg mov les (bad) (bad) (bad) (bad) sti cmpsl push xor mov nop into xlat loop ljmp fistl inc (bad) sbb (bad) (bad) jmp aaa aaa mov aad test xchg dec xchg mov mov push mov bound mov push sbb rcrb movsl inc out add xchg xchg rclb psadbw hlt decl daa test xchg mov (bad) (bad) push stos insl pop sahf mov and xor movsb test mov imul test lret pop sub mov xchg test (bad) (bad) push ss jb and or insl push and scas in mov (bad) jmp sti (bad) clc (bad) (bad) inc adc inc fdivrs test rclb adc cmpsl (bad) xor inc lds mov lcall inc lcall jmp outsl stos (bad) ljmp jp out mov jg push mov and adc inc (bad) (bad) (bad) (bad) cmp scas xor xchg lcall pop ret xchg pop xor dec sbb pop pop sar ljmp mov movsb dec sbb and pop mov push loope sarb xchg adc lahf lds mov lock decl rcll js cmc arpl add ljmp loop test or cmp push and imul xchg loope lock (bad) (bad) ljmp xchg scas (bad) cmpsl cmpsb mov lea clc aad pusha xchg lds sub sub (bad) incl xlat adc das loope fsts into mov scas pop mov sbb iret pop arpl (bad) (bad) (bad) cmp push sarb inc pop pop lds ror mov mov gs pop test test (bad) mov mov xor scas pushf jbe andl (bad) xor int mov (bad) jg ljmp cmpsb clc sbb cmp insl leave pop dec je mov dec or jecxz (bad) (bad) incl mov movsb lds rolb xor out push jmp mov (bad) mov sbb add fisub adc mov dec out (bad) (bad) (bad) jmp pop xor jno push pop fiadd mov mov aad pop nop xchg (bad) (bad) (bad) lcall (bad) cmp sub push dec fildll arpl (bad) shlb arpl pop add cmp dec adc jl mov cli push add aad mov jmp fimull pop adc sbb jmp adc loope into (bad) pusha (bad) dec pop rolb xchg push int3 (bad) (bad) (bad) pushl or cmp push mov fxtract adc les loopne lods or cmpsl xor push (bad) dec xchg in pop cwtl jbe icebp lds ret das mov mov mov imul and sbb cmp pushf insb (bad) ds cli (bad) jmp jo into imul xchg inc bound or dec inc mov sar (bad) decl xchg adc out movsl popf into sbb dec or push leave sub loopne sar lcall into mov sub xlat mov stos and and enter or xor loop fdivs add fwait mov (bad) (bad) lcall ficomp mov fidivr mov jae std mov (bad) jg (bad) dec stos sub add mov scas (bad) mov xchg std lcall pushl leave scas loop cmc jle add scas enter stos aaa mov jb add decl lock hlt fstl mov mov adc cmp loope xor popa or int or call mov mov (bad) (bad) inc subl push ret test (bad) imul pop jne or inc (bad) mov mov dec les jge pop pushl std pushl ror jl enter out jmp mov inc xchg (bad) (bad) jmp add lret repz fptan popf data16 dec sub lods inc sbb mov jno decl push cwtl pusha cmp mov mov add xor xchg or dec std xchg (bad) imul gs dec in mov dec pop mov shrl dec (bad) or test fnstcw outsl ljmp arpl shrb xor ds sbb (bad) adc ljmp loopne push pushf mov and push xchg xchg sbb sbb add incl sti add lock nop cmp adc movsl and sub incl mov fs js adc popf xchg push pop rcl dec (bad) (bad) (bad) (bad) jmp mov cmpl cmpsb mov cmp in fimul dec jmp pop scas (bad) ljmp cld push jno cmpsl push mov pusha pop sarb dec loopne (bad) (bad) incl (bad) jo mov mov (bad) iret push dec xchg fcos (bad) (bad) (bad) fimull push fnsave daa iret lods inc jmp pusha or adc lods ret inc jbe inc (bad) (bad) (bad) lcall les inc popaw lcall dec jp jl pop clc mov dec insb push scas mov (bad) (bad) (bad) call test sbb xchg cmp lds aas sub cmp je dec test (bad) jl sub adc jb push rorb mov pop imul sub (bad) (bad) pushl movsb fwait stos (bad) fisubr fstps mov or jecxz jle lret call (bad) push fnsetpm(287 stos push and adc data16 mov int inc stos (bad) std lds jae mov ja imul loopne gs push int cmovbe sub test push arpl dec xchg sub popa push (bad) (bad) call fdivrs ja pop outsb je mov movb mov iret in push mov (bad) mov stos sub jle pop into xchg push sbb cmp inc andl ljmp sbb cli repnz xor call mov cwtl shll fmulp fs pop std jbe jl cmc adc jge loope inc and mov xchg (bad) incl inc (bad) loopne das fsubrl cli jle sub inc std mov inc xor pop fadds (bad) (bad) (bad) incl cmp push push es jge or adc sbb iret inc cmp xchg inc cmpsb mov roll aad mov into xor gs (bad) lcall repnz mov fbld stos xchg aad pop fdivl (bad) fcomip jno and mov jo xchg push jmp jo (bad) (bad) mov fildl inc mov inc xor mov pop nop xor test ds (bad) jmp ja and (bad) mov js popf bound lret push or add lcall out mov je arpl adcl cli (bad) lcall sub arpl repz xor in sarb mov sbb mov push rcll movsl (bad) (bad) (bad) inc xor jno out add xchg mov pop inc ss jmp sahf dec push (bad) (bad) lcall subl xchg ret out test or int3 inc aas adc add mov ficom push mov (bad) (bad) call aas mov adc jb cmp xor xchg push push xchg push xchg lahf push dec jbe icebp lea movsl (bad) jmp (bad) imul dec push push imul or xor (bad) (bad) (bad) call repz sub inc mov outsb shr inc sti les in xchg (bad) (bad) (bad) (bad) cmp pop jmp mov push sbb mov cmc fistl (bad) call lods xchg gs push movsb xchg mov or (bad) (bad) mov sub sbb xchg mov inc loope or das dec mov adc inc (bad) (bad) (bad) ljmp je loope loope fsts xor fcomps pop sbb movsb negl call cltd pop popf xor out (bad) into push sti or ja add data16 lcall (bad) call out fwait sub cmp loop clc fldl stc loope xlat ja sbb (bad) ljmp pop mov add fidivl gs dec xor dec pop or aas mov push test xchg (bad) adc xchg sub (bad) call (bad) outsb xchg sarl jmp add (bad) jl sar (bad) push fimull mov jecxz in jle and add js inc xlat pusha push jns pop add cli or xchg (bad) (bad) (bad) dec test xor aas push aas incb xor data16 gs inc xor shl jmp pop sti jp test xchg negb sbb lret loope rcrl adc (bad) pop sbb sub and (bad) ljmp push xchg jl in pop inc push popw pop mov jge jo jge add pop adc inc adc (bad) adc (bad) (bad) (bad) in inc negl pop (bad) mov loopne rcr shrb loope iret xlat je pop or lcall mov xchg lcall cmp scas rclb fisttp mov cli dec repnz mov aaa jo or dec bound push push xchg sbbl fistpll fnop jne jp dec or cmc jge inc mov movsl iret in (bad) (bad) (bad) ljmp scas push and xchg jnp scas sub stos fwait and mov inc fisttpll push push inc daa daa (bad) (bad) jg sahf or int (bad) adc mov push push push (bad) (bad) (bad) ljmp jno sub test stos inc cwtl hlt mov cmpsl sti xchg cmc jle xor testb (bad) (bad) decl push xlat cmp fnop push adc xor inc xor sub call jae mov sub lock pushf cmp jno sbb cmpsl and lods (bad) (bad) (bad) pushl lods mov popa rcrb jecxz stos outsl andl daa mov push (bad) (bad) (bad) call leave push push clc pop inc sti outsb xchg pop cmp in gs xchg jb aam mov call loopne (bad) push ret daa (bad) xor sbbl test cmp sub (bad) (bad) sbb aam pop adc lea pop xor repz add test outsl pop inc pop (bad) sbb jo das and push push roll mov addr16 lock jmp imul cld call jbe into push dec stos repz adc ds ret add mov fdiv outsb or loopne push inc push mov and andnps sub jne test and mov outsl (bad) (bad) (bad) (bad) stc std jp mulb push mov stos mov in rorb lods sahf call adc adc xor (bad) (bad) call xchg jno dec (bad) sahf out stc (bad) jno insl dec int3 pop xor (bad) push cmp (bad) ljmp dec mov (bad) push sub out or and adc cmp jns dec pslld pusha repz pop cmc decb imul aad adc pushf pop fs call daa and loopne mov mov mov mov movsb mov (bad) lcall pop dec pop adc push outsl cmp ret stos push jmp movsb jbe jne cmpsb call lea lock (bad) insl (bad) icebp add inc sti repnz adc cmp (bad) (bad) lcall and cmpl cmc out jge xchg cld iret mov pop xor sbb (bad) (bad) lcall or pop dec aaa rcr in imul add pop js out mov pop (bad) jg call sub xchg jno psubw pushf and sbb (bad) (bad) (bad) call (bad) pushf xchg sarb (bad) rolb pop mov jl adc push mov xor popf add leave cmp arpl pop xorl mov sub (bad) jp mov nop (bad) xchg outsl cltd cld sahf or sbb xor cmp sbb mov fst inc xor xchg jg add inc xchg add sub and loopne pushf call cld (bad) fmulp pop push push (bad) cmp and dec lret js xchg repz and mov (bad) (bad) (bad) pushl mov movsl mov mov jae adc icebp jle push cmpl out adc (bad) (bad) decl sbb outsb stos xchg outsb (bad) lahf jno insl or stos adc adc and sbb pop mov mov call loop daa test inc push xchg cmp ss and cmp mov push es (bad) (bad) ljmp test mov pop movsl out loope xchg lea mov jmp (bad) (bad) (bad) incl adc sbb clc or call in xlat xchg jle xor addr16 test mov (bad) (bad) ljmp icebp sti pusha adc jb in jg lcall sub pop (bad) lahf pop (bad) dec mov in ss cmc aaa std mov shrl sub jb xor pusha loope hlt mov pop pop dec insb or (bad) pushl in sub repnz dec dec movsb mov jne pop in iret cwtl ret (bad) (bad) incl dec push jmp cmp xchg add cs jg fsubrl mov (bad) (bad) (bad) out incb push inc nopl loop push int repnz aam xchg add cmp icebp jl loopne (bad) pushl mov inc sbb jp jle mov fsubrl ds jno stc inc push pop cmp mov ja push pop xchg sar inc (bad) mov jp ds dec mov cli mov fmulp cwtl sbb daa out jae (bad) fldt mov pop fs xor ret roll lret xor (bad) jg sub call cmc mov pop lcall cli bound daa adc pop ds dec mov cli inc push pushf jb call jle shll add cmp jle sbb lcall xorb mov repz lcall inc ds adcl test or xchg xchg lods mov xor xchg imul sub dec lods incl add es jnp repz notb sarl out lods test or lcall fdivrp add sub loope repz cmpsl xchg inc into xchg sub imul inc (bad) sbb mov sbb sbb (bad) (bad) inc add mov cmp (bad) (bad) (bad) lcall mov sub (bad) jmp pop lcall mov hlt lcall xchg rcrl lahf pop (bad) (bad) ljmp sub cltd mov xlat push xchg mov out scas (bad) in mov (bad) (bad) mov fisttp out lea dec das jne (bad) jg sbb add pop out inc push xchg mov repz sbb sahf ror adc (bad) (bad) pushl dec jo arpl aad xchg mov inc hlt or out sub pop mov push xchg test add sub scas in sahf push inc push jmp mov mov std dec jb push sub loopne stos fsubrl dec cmp jmp sub in inc jae sbbb fs (bad) aam lds insb movsb sbb push cs les cmpsl adc cmc (bad) (bad) decl sub and out add jnp mov (bad) das (bad) (bad) (bad) fistp mov sti inc addl cwtl mov push cmp (bad) incl pop adc (bad) push push dec or sar xchg ds loopne insl mov (bad) (bad) mov push mov mov mov add lret dec xor pop fdivrp (bad) push daa mov test outsb repnz push push sub faddl test pop cmc xor sbb mov jp dec add out lretw lret mov adc (bad) mov push fbstp stos lret stc pop xchg cmp es lock jmp jp fsubrl out push push aad imul dec jae rcll inc fiadd add (bad) jmp pushf jge pop jle,pn out bswap int outsb xor (bad) call and loop leave pop repz call and addl stc ss (bad) pushl add arpl test fcoml jmp xchg mov out das jle jecxz pusha rorl lcall ljmp and enter lea mov push mov xchg push std (bad) (bad) jmp mov imul dec xchg jns sbb inc mov fimull sub das call loopne sbbb add add sbb sub int3 test (bad) call test push sbb mov fs popf lahf test mov je mov (bad) (bad) (bad) push icebp mulb fcmovne sub jmp mov movsl insb sbb cs (bad) push cld (bad) (bad) clc jecxz sub inc cltd sbb adc push imul cmp gs mov xchg rorb jns dec (bad) ljmp call enter xchg pop aaa cltd and jmp testb push jo (bad) decl mov lock fcoms pop shll and add lea adc call out stos jae enter aaa aad cmp movlhps adc cld pop outsb fwait stc cltd cmp std aaa push repnz and xchg add push test xchg sub aam enter ret dec xor lock clc cltd dec (bad) (bad) ljmp jne mov xor outsl scas call lds (bad) (bad) call ds jo lret jne mov lds mov cmpb (bad) (bad) decl in insw out mov jb out xchg jno cmpl insl sbb test addr16 (bad) (bad) dec insb pop and jo sub push aam hlt out int3 xor mov adc lea dec sub aad jmp jbe sub rorl lods in (bad) pop notl lock dec jbe (bad) or sbb sub push jb mov stos les out push wbinvd mov cmp scas scas cmp jb (bad) (bad) pushl sahf sahf jbe mov adc or nop bound mov xchg jo iret add das xchg gs (bad) fidiv scas lahf mov sub jg ds mov inc and adc out (bad) (bad) (bad) incl push or xchg pop and add es adc push lret mov (bad) mov jl ljmp mov mov dec (bad) sti mov jae sbb cmp outsl and int (bad) (bad) (bad) ljmp imul add in dec arpl data16 jle xchg mov sbb mov popf add xchg fisttpl rcrb push loopne sti pop in mov or jae (bad) decl jne pop and sub pop xchg jb fnstsw movsl (bad) (bad) (bad) decl mov mov shl mov xor mov xchg pop xlat mov mov add loop outsl mov mov (bad) pop push neg jnp je xchg push mov xor push mov mov jno add mov pusha dec push xchg movsb sbb jmp mov (bad) lcall inc xchg pop pop push dec and sbb add add pop inc rorl mov push jecxz dec paddq (bad) pop xchg scas xchg jl pusha loopne je inc sbb (bad) (bad) (bad) inc dec (bad) inc jno sbb mov mov (bad) popf icebp mov es dec dec sub (bad) (bad) incl cwtl out jge enter push mov adc pushl out mov enter out mov jmp (bad) (bad) inc inc xchg inc mov arpl rorl sbb stos in (bad) jae (bad) (bad) (bad) (bad) (bad) cld and push cmpsl cmp aas xor js dec cwtl sbbb shrb fwait add push fcomps imul lahf in fdivrs (bad) (bad) pushl mov mov aas push repnz ficomp push xchg push bound roll nop lods lds push jae js (bad) (bad) jmp test (bad) mov out pop xchg jnp mov sbb lahf mov xchg clc cmc xchg clc (bad) (bad) lcall ret (bad) mov mov popa mov cs aad and sbb (bad) (bad) (bad) out sub cmp jne xchg scas jnp (bad) mov popa (bad) (bad) (bad) jmp test in ja in in inc sbb xor or push dec hlt (bad) cmp fwait dec mov xor insl add (bad) cmp lds clc pop test jo and dec (bad) lcall ds lods imul and xor imul add lea mov cmp inc sti test int push dec (bad) ljmp nop std jp cmp ret mov in lods push ss sarl fcoml push ret xchg mov cmp es fdivrl jg (bad) (bad) (bad) (bad) jmp push fwait jbe lds imul dec in xor add push mov (bad) (bad) jmp mov mov das mov add sbb mov adc std (bad) (bad) inc jp ret mov adc push in sub sub xchg leave addl jb jno call movsl dec outsb jl aam pop push xor mov pusha (bad) (bad) (bad) decl add pop sbb push jl dec push push out test mov aaa insb (bad) fistp xchg iret mov (bad) xchg jl jmp add (bad) (bad) fcomip mov pushl xchg loop cli push xchg add xchg in enter out lods or std (bad) dec stc arpl cmpl test inc cltd (bad) (bad) (bad) (bad) cmp stc cltd push or pop or pushf inc or jge cmp js and or (bad) (bad) lcall mov enter arpl dec mov push das pop loope addr16 push add mov xchg repz cli rcrl repnz ljmp add push das add scas mov (bad) popf or inc icebp (bad) jmp (bad) out jge rol lcall test push mov mov cld lcall (bad) ljmp (bad) icebp imul outsl lods pop xor and jecxz (bad) loope xchg xor xchg dec mov mov int3 mov or xlat aas sbb jmp fcoml sub sub push mov stos incb push cwtl mov xor lock mov imul (bad) (bad) decl imul dec daa fcmove clc (bad) fst add pop into dec popf cli decl jmp inc cmp cld jno add cmp inc adcb xchg adc add fwait and decl mov mov cmp fcmovnbe ljmp sub inc dec push out popa push lock (bad) ljmp push jecxz xchg popf xchg imull das xchg dec es xchg push sub sub add xchg (bad) (bad) aas mov push and out test and pop imul std (bad) (bad) (bad) (bad) dec jp xchg push mov fisubr (bad) mov xchg cmp fcomi insb out push mov cmp (bad) (bad) dec cmpl jns push mov push sbb int jno push inc aad mov icebp (bad) (bad) (bad) pushl dec push in xchg dec insl (bad) xor mov push test stos call mov push (bad) sbb in add jo pop mulb pushf pushf xchg das adcl (bad) insb nop or sbb rcl dec cltd ficompl out ret aad or (bad) (bad) ljmp push sti sbbl out push push xor add sub sbb mov rol ds xor bound xor sbb (bad) lea push jo (bad) loopne mov ljmp pop (bad) das lods int fdivrl incb test jge cmp loope cli or or test jecxz test xchg repz loopne and xchg enter push (bad) (bad) call jmp pusha inc aad jb clc adc jo sahf test add scas in sub hlt fildll sub jmp andl cmp (bad) (bad) decl dec dec pop fdivr inc orb pop mov jo xchg cld jo (bad) jne dec cltd or xchg outsb (bad) (bad) (bad) incl enter movzbl push mov cmp xchg cs jae insb (bad) (bad) (bad) jmp xchg call xchg loop mov int3 jnp movl cmp pop cld (bad) (bad) jmp jp (bad) xchg xchg jns add aad pop ds inc mov cmpsb das mov aaa pop push fcoml icebp les mulb rclb mov xchg inc ljmp (bad) (bad) jmp in (bad) lahf mov adc dec into push cmpsb inc inc orl jo jle xchg iret inc sub aam dec jo mov inc (bad) aad pop and lds (bad) out xchg ds fdivrl in test loopne (bad) call les loope cmc sbb xor mov jbe mov xchg xchg shrl add (bad) (bad) call pop call stc push xchg xlat dec cmpl lret (bad) dec daa mov stos push decl clc jle or inc sahf sub (bad) (bad) jmp mov (bad) mov mov xchg popf add pop jo jns or ja aas pusha jmp sar and in xchg notb xor mov cld dec (bad) aad push inc pop loop inc in leave push xor push stos mov ret sahf imul (bad) decl fild dec (bad) bound lcall mov (bad) (bad) push sarb inc or and xor lcall js pop insb ror cwtl xchg add ljmp cltd inc pusha repnz push xchg lret jecxz pop dec call fnstsw sbb mov (bad) fcmovnb pop push xor loope pop pop incb push pop (bad) lock data16 data16 subl add mov in pop inc cmp daa outsb ret mov dec dec lret push cmp (bad) (bad) (bad) decl push loopne subl xlat data16 and lods adc dec mov pop movsb push stos fnsave incl pushf cmpb mov inc hlt mov push popf int pop or (bad) (bad) (bad) sub mov mov cli inc loopne inc in mov imul repz ret mov adc pop cld rorb imul sarb decl mov and push jns in mov sbb call and jecxz fnclex ja bound inc insb inc mov lds (bad) jne fs clc decl lock inc stc push lcall and lret mov mov sub fmuls (bad) and push scas push fisubrl test ds sahf xor adc cmp call ret mov add mov (bad) jg movsl test push cmpsl push add bound fwait sub (bad) call movsb cmpl jo cmp out jl popl jp lods loop (bad) (bad) call outsb aaa sbb test xlat icebp cmpsl data16 dec pop in decl pop jo insb daa add (bad) (bad) fldt adc jne test push xchg (bad) jnp mov loope loop (bad) (bad) (bad) call sub sub cmp inc out in jp and bound movsl dec dec sbb mov (bad) (bad) jmp lretw sub xor scas and sbb fnstenv mov scas pop pushf mov aaa xchg ja (bad) ljmp icebp jge jns loopne jecxz lock rclb pop jp mov (bad) (bad) (bad) ljmp jmp xchg out int3 into cwtl mov xor sub inc jmp lret in lahf mov fdivrs sbb (bad) (bad) call mov cli adc push mov rclb cltd push xchg inc jecxz mov sbb sbb (bad) (bad) jmp scas add fs and sub sbb fwait lods stos ret push (bad) mov vrsqrtss in cmp and cmpsb js mov pop add insb xor test add (bad) (bad) (bad) (bad) cmp or leave mov or mov mov rcl es pop idivl (bad) decl hlt xor mov mov mov jae push lcall nop mov lds (bad) cmp (bad) movsl mov ror sub scas aam lods insb aam data16 cwtl lea inc mov (bad) lcall or nop pop push fistpl push jae sub pop pop icebp test (bad) (bad) (bad) (bad) call cmpl mov js outsl cltd sbb push lods and adc sub sbb ret sahf les pop lret inc push ds mov cwtl les xor dec inc pop popf push aas mov and (bad) (bad) (bad) dec mov cmc sahf (bad) sub popf das xchg jle and pop fiaddl mov ljmp out int in out dec in fbstp (bad) mov dec (bad) (bad) (bad) (bad) call dec xor xchg xor lret mov jo popa popf or add xor inc ljmp adc mov fdivrs pop insb (bad) (bad) lcall fstps dec out lock sub in xchg sbb sahf xchg mov jno jb (bad) (bad) pushl inc sbbl gs mov idivb mov xchg mov (bad) (bad) (bad) lcall call stos jl jge push ffreep and or push xor aas inc rcll (bad) lcall pop dec (bad) iret cwtl inc sub push mov add or int sbb fmuls stc fwait clc (bad) (bad) (bad) decl mov or jg mov jno push xchg js in push mov mov mov add pop cmp lahf push sub out lahf je jnp test (bad) ljmp sbb fdivrl mov push in push adc call (bad) pop loopne rolb jl and aas fcoml (bad) (bad) (bad) decl mov sub js adc dec lahf jo bound cmc sti dec pop cltd pop jge (bad) (bad) (bad) (bad) fsubs pop pop jp in cmp jno mov adc popf (bad) pushf push call (bad) jg fbld sarl sbb cwtl xchg push popa pop and bound (bad) (bad) (bad) (bad) std jl loop and push jg fcompl add mov push mov jecxz insl add sbb (bad) (bad) pushl iret push add sub or mov outsl sbb test (bad) (bad) (bad) (bad) jmp cltd (bad) dec imul dec in stos sbb xchg gs rcrb mov daa sub pushl cmc xchg sbb lret jns outsl push dec mov push sahf outsl punpckhbw (bad) int mov push test insl fcomps es test into pop dec mov cmp ljmp (bad) (bad) (bad) (bad) cmp or iret adc (bad) popf ljmp xchg cmpsb fdivl jge (bad) (bad) (bad) jmp cwtl mov mov movsl jno jne sbb xchg xchg (bad) lcall popf jmp test pushf adc lea jge xor stos mov cld mov (bad) adc aad cld inc shrl jae sub adc lock mov xor jmp mov scas mov outsb in jge sub test addr16 mov dec push push std aad mov setle roll mov incl inc push subl (bad) push popa pop cmp inc icebp (bad) (bad) call push mov out jo mov push adc stos mov repnz push sbb fidivl in xchg xchg inc mov add mov or (bad) ljmp les and scas jge cmpsl ret pop cli push pop or add xchg cld lcall mov cmc adc push xchg pusha ds xchg sbb es pop bnd mov push add xlat test (bad) (bad) (bad) fcoml ret fnstcw test push test add leave leave jmp aaa jbe cld (bad) (bad) ljmp inc push cltd add sub mov cmp call pop (bad) jg inc ds out jne xor mov jle (bad) decl push jg fldenv jge jno es lret cs ljmp mov or lods xor imul and (bad) jg dec pop xchg lods pop jle mov dec lods cmpsl inc (bad) call sub xchg adc adc pusha fcomip (bad) lcall pop stos pop sub sub mov sbb outsb ljmp (bad) (bad) decl in mov push pop sar and jbe xchg inc sti test pop cmp out lods aad call loopne lcall bound test leave or (bad) (bad) (bad) pushl out xchg and adc cmp ljmp das clc or adc jbe cmp enter clc (bad) mov iret xchg xor nop and negl enter sub add leave aam imul jno rcrl (bad) (bad) out add popa sarb dec fwait pop add sub (bad) pushl and int inc cltd stc xor dec add (bad) je adc test (bad) (bad) jg mov movsb pop push and fidiv mov out add push mov sbb (bad) (bad) decl and popl sbb insb lds in xchg or sbb (bad) (bad) lcall lods or fisub (bad) adc imul and outsl mov adc ret sbb cmpsb mov fwait stc dec (bad) pop xchg push sbb notl add and andl sub (bad) popf int3 sahf mov popf (bad) fwait movsl jne mov or cmc inc mov inc (bad) repz test (bad) (bad) (bad) call in xor arpl mov push jbe (bad) sbb fisttp inc and inc std (bad) in dec xchg push ret stos sbb push popf mov (bad) call (bad) add push xor jb icebp or cmpsb cmp or je push cli jbe sub ljmp fbstp jle push out cmc sbb int3 and aam mov test pop sahf cmpsb push or (bad) aas aad jae pop popa push sbb (bad) (bad) decl aam xlat xchg lea fidivr jns adc loope cli (bad) lcall jge out push out add lret into inc fsubr es jmp push mov (bad) (bad) (bad) call or sbb mov loope scas xchg mov incb pop fnstsw jle (bad) (bad) ljmp mov aas mov outsb (bad) lock cs xorb rol loop js (bad) (bad) dec sbb nop jp push xlat or std sub mov test lds fdivr ljmp pop (bad) insb daa mov ret idivb lock dec mov dec pop popa stc stos (bad) jle push mov in push mov hlt rorl fdivrs push std (bad) incl cmp mov (bad) pop pop sbb mov cmc xor call push push xor ds sarb ja loope mov popf cmp mov pop or call and lods test xchg ds mov (bad) pushl cmpsl inc cmpsl leave movsl mov push inc insb sahf add pop mov cmp bnd (bad) mov jg inc mov inc insb pop or clc dec and mov fldl (bad) push sahf xchg dec xchg lds jae subl repz in fcomip ljmp adc scas mov fist cmpsl or sub outsb fcompl hlt (bad) push popa pop cli icebp and push or lock movb js adc (bad) (bad) call fild (bad) cltd int3 jb lea les xchg sbb rorb jnp (bad) (bad) (bad) (bad) jnp pop std jnp rorb hlt addr16 and dec pop jbe add add (bad) (bad) incl pop ljmp xor outsb (bad) int3 cmpsb add cwtl movsb loop jbe icebp push (bad) (bad) decl push pushf mov aam jg push fnsave out outsb pop aaa in lret enter (bad) (bad) incl mov mull mov mov enter outsb jno pop (bad) std lds (bad) call cli ds xchg std adc xchg in imul mov psubsb pusha sbb (bad) (bad) fldz loope add or mov dec cmp add and leave mov inc or xor xchg (bad) (bad) ds in ljmp (bad) mov (bad) sahf in and scas adc lods cltd sbb xchg mov sti pop lods (bad) (bad) (bad) call imul xchg jg cs icebp (bad) cmp imul and dec adc fiaddl call adc pop ss sub and xchg pop adc cmpsb push push (bad) (bad) (bad) (bad) incl and les les mov stos push dec sahf iret lahf cmp (bad) out and xor adc mov jnp pop call (bad) (bad) (bad) push (bad) lds cmp fadds mov dec rorl inc lret add (bad) (bad) (bad) (bad) jp fldl pop test inc mov add jbe in or in ljmp sub (bad) (bad) (bad) incl inc (bad) pop cmpsl sahf arpl ret push sub dec jae pop lret aam cltd push sar dec sti push xchg pushf and test xchg lock xchg int3 les aaa aad pop and xor dec xchg fwait aaa and (bad) (bad) (bad) inc cmpsb pop aaa and mov sti lods stos test lods aad arpl cs mov adc and cld mov int sti (bad) fsubp or stos (bad) (bad) pushl inc mov (bad) je imul cltd push xchg cmp xor gs cmp jne cmpsl push notl push cwtl or add (bad) (bad) ljmp ficoml xor jp push sbb (bad) (bad) lahf adc roll sbb add les loop jne mov (bad) (bad) jp pusha mov mov pop es test jo (bad) xor xchg push (bad) (bad) (bad) (bad) jg pop xchg mov daa mov (bad) repz imul mov das clc ljmp push iret fisttpl inc push js roll cmp jb mov (bad) incl imul cmp sbb dec subb int insb test notl add nop popf dec in (bad) (bad) (bad) pushl xchg stos mov mov xor movsb xchg jae dec push outsl sbb leave jge pop inc nop imul cmpsb mov inc out cmp in hlt dec fimul call ss mov (bad) (bad) (bad) mov mov sti dec mov addr16 andb push imul std or lock push cmpsl into add ds xchg divb scas pop loop (bad) repz jb in scas incl movsl ds pushf jge xchg or inc (bad) (bad) (bad) (bad) cmp sbb xchg lea add lods xchg dec (bad) mov mov aam cmp (bad) (bad) mov mov push mov (bad) mov pop cwtl cltd je push enter (bad) call and popf mull push pop loop and or sbb cmc addr16 sbb sar (bad) (bad) push cmp inc ds repz pushf jne stc jp jne pop cmp mov jecxz mov cmc (bad) call fs rcl and cmpsb jg and (bad) decb arpl mov jg movsl out mov lahf sub xchg or pop cmp mov push scas push (bad) or int3 jl insl xchg int (bad) call mov clc popf sub imul adc and (bad) call mov das out dec and sbb mov decl cmp (bad) jle clc cli pop out dec dec (bad) aad mov cmp mov (bad) xor (bad) stc outsl jge adc (bad) loop jns pop push hlt (bad) decb lock outsb or addr16 adc push cmp dec mov (bad) ljmp lret test gs xchg ret mov sbb (bad) testb mov push adc int3 adc mov adc dec in sbb add (bad) (bad) pushl mov test inc call sub push xchg hlt xlat dec (bad) (bad) (bad) call call dec hlt mov lea push adc lahf jp fsubs jns or clc (bad) ds loopne lahf adc lds cmp lret (bad) (bad) ljmp adc mov fs mov popa sbb repnz mov xchg and ficoml std (bad) jmp outsl mov and jle mov push out movsl in jle jno jo jmp xor (bad) (bad) incl dec outsb xchg xchg fwait xor lds lahf lret aas out pusha xchg aam or jo or and ljmp mov fistpll in xchg (bad) das sar ja in push rep mov test mov push dec (bad) (bad) (bad) mov jl lahf jle push xor jne jg sti jns and out (bad) jg pushl out in into inc jno pop scas mov sbb fs decl jl pop and sbb clc (bad) rcrl sahf dec or fdiv cmp (bad) call add fisub ficoml cmp sub adc pop bound push mov fs dec popa jns push mov test dec cmp cld dec (bad) fistl test add inc aad cltd xlat call and cs lods inc inc enter and cwtl leave out pop dec sbb stos sub xor and gs dec loop lea mov insl fnstenv (bad) inc (bad) (bad) mov or add enter test and jge add mov aad xlat test xchg (bad) mov ss lods dec xor out fcmovne fs popf pop sub ljmp loop (bad) mov shl lret mov roll inc push xchg and lods add (bad) (bad) (bad) jmp ljmp jbe or loope in jb mov cwtl pop mov shll (bad) decl rorb (bad) into jge push in cwtl ret jb imull hlt lcall icebp insb dec cld fwait jle das fcompl inc es mov push (bad) (bad) jg mov pop and test aad movsl sub adc test (bad) (bad) jg pushf stos into out cwtl pop lret test mov jg jle jne aad mov (bad) (bad) (bad) lcall adcb cwtl cld fsts or (bad) pop push or mov inc ss fld pop fcomip (bad) jmp aaa or fcoms les dec lods sahf mov cmpsl push xchg incl ljmp sub bound pushf (bad) pop adc lret mov aam (bad) decl insb outsl mov push jnp inc aaa and addb movsl cld jg (bad) js jbe jno push cmpsl cli cmp add mov jns loope (bad) scas push or mov mov push adc pop inc inc sbb xor mov mov das mov (bad) mul cmp xchg fs clc in mov jmp mov lret and jg shl pop inc (bad) inc xor push jns ljmp cmp push mov lret les xchg ds scas cmpsb adc (bad) (bad) dec in adc adc fldcw cmp jmp push (bad) fnstcw sbb jno dec or and push out cmp shlb xor or (bad) (bad) jg mov pop je jo mov (bad) (bad) mov pusha (bad) (bad) (bad) incl movsb shr mov rep add push xchg add dec je jne push aad incl fisub pushf pop inc jl sbb sbbb (bad) (bad) (bad) (bad) lcall hlt loope daa dec mov lds mov js call mov shr sti sbb divl mov roll sub dec (bad) mov fimull popa add inc mov jns jp pop (bad) (bad) fistpll stc movsl cwtl dec dec (bad) push in mov xor sub (bad) ljmp incl (bad) cmp mov mov js pop xor jmp ss jle bound in (bad) call lcall jns mov lds shrb (bad) pushf test push xlat mov (bad) ljmp xchg icebp dec mov out push cmp mov imul cmp es hlt (bad) decl into jb ret add adc dec pop lods test mov dec mov lock sbb push aaa xchg icebp jno in (bad) (bad) ljmp ds mov aad in lds scas add sti imul (bad) (bad) pushl inc fdivs mov inc mov xchg pop sahf inc xchg xchg nop call fisttp jmp sbb je in lods xchg cmp dec mov movsb mov (bad) mov hlt pop aam mov push iret jb (bad) jb (bad) (bad) (bad) jmp add dec xchg movsb adc outsb xor adc dec and sub push pop popa add sub push nop sub (bad) jmp push inc xor jecxz sub cmp mov dec lods jo imul adc cltd jmp fdivrs (bad) mov jbe ss mov into ljmp push pushf ret push lcall (bad) jmp sub sbb mov or shrb pop mov cmp pop in stc sti ret (bad) mov cmp lahf cs dec lret xchg fsub push lods aad sub pop pop mov (bad) (bad) jmp imul test lds int3 sbb insb hlt sbbl (bad) ljmp jnp outsb cli adc mov dec xor imul (bad) (bad) (bad) call pxor out xor dec lcall mov mov (bad) (bad) in movsb or mov jnp pusha aam xlat mov in pop outsb dec (bad) leave push ds (bad) (bad) (bad) (bad) decl dec rclb fstps icebp (bad) fisubr lret xchg in dec xor pusha inc sarb clc mov add popf (bad) mov rorl mov repz jbe cs (bad) fbstp in movl cmp push in out imul xor inc mov sbb lahf lret sub mov sub cmpsb xchg cmc (bad) (bad) (bad) pushl jno push lahf push dec dec fstpt (bad) fwait cwtl inc jp mov js lcall aaa notl dec mov or (bad) (bad) hlt lds sub loop sbb mov pop pop je movsl xor in ficompl cmpsl cmp pop mov (bad) mov lcall mov stos mov scas mov cli lods mov adc popa pop jl int3 inc mov (bad) (bad) cld jb out imul adc (bad) mov mov add xchg or pop pop (bad) (bad) (bad) (bad) lcall les fidivl call mov mov jle (bad) push incl cli fwait out add add je test (bad) (bad) cmp mov dec and add add push inc jl js cmp fistl int mov sbb (bad) mov and xchg pop pop sbb mov aaa cwtl fs jl rolb xor (bad) mov jp push std cmp (bad) out ret mov decl xchg push imul push mov mov (bad) decl mov rclb hlt mov sbb dec loop mov cmc and (bad) incl (bad) or cmp add and leave scas jl sub lea cmc push jne call sbb sub (bad) (bad) mov jbe or rcrl inc jp ljmp jb aaa add sub and mov dec (bad) (bad) (bad) incl nop enter call (bad) aad xchg mov jg test loop addr16 fdiv cs addr16 scas cli (bad) (bad) (bad) movsb rclb jle mov push mov cmp sbb fcomip jmp sub adc jb imul add jmp insb push inc pushf mov popf sar lcall leave fildl pop xchg push pop jmp orl subb inc and leave or ret sar mov lahf mov fimull jle (bad) (bad) (bad) jmp dec into int frstor xchg xchg pop pop adc mov int inc (bad) inc insb aad cmp (bad) (bad) pushl cld sub jp inc add test dec mul xchg xlat sbb sbb (bad) (bad) out xchg adc pushf xchg mov sti inc sahf push add sti xlat mov scas cmpsb lock popl fcomps cmp dec sub (bad) (bad) ljmp addr16 xchg divl add repz xchg mov adc sbb xor (bad) mov cld push scas jmp xor aam fdivs mov (bad) (bad) (bad) jmp iret dec das lock or bound (bad) or mov and jp push (bad) (bad) (bad) lcall in in push pushf dec dec adc pop lahf sti mov cmp bnd fadds inc adc mov scas and stos (bad) les and pusha and inc or (bad) adc mov or (bad) (bad) ljmp ljmp jnp (bad) cmp lds dec lahf push pop ds ljmp (bad) (bad) mov mov mov repnz cmp push jae (bad) (bad) call inc adc push repnz xchg inc sahf adc imul fisubl sub insl movl (bad) jnp cld popa cmp stc and mov mov cmc xlat adc xor mov (bad) (bad) (bad) incl (bad) bound lods popf jb iret and cmp dec pop insl cmpsl rorl adc fs aas add push lea push jno lods ss (bad) (bad) call adc (bad) mov leave and mov scas push out mov or push add and (bad) hlt incl test decl (bad) (bad) out fmuls insl cmp and and xor mov pop test jae scas mov inc loopne bnd ds jnp add icebp iret cmc insb shrb push into daa mov int3 pop call and and jb mov dec sti aad xchg lods push push es mov aaa adc jl call mov (bad) ret daa sti jno (bad) mov js lea fsubl jo jg push xchg insb xlat fisub or sbb (bad) (bad) incl cmp out mov cmpsl jo and out mov add (bad) lcall mov push ret push addr16 fisub into xor mov add scas and (bad) (bad) (bad) jnp call add or (bad) sub xchg add cmp or outsb nop cmc call mov lock repz pop adc fisubr or lahf push test lret mov inc sbb ret xchg fwait sbb cltd loopne,pt pop xor scas mov push ds repz (bad) pop cmpsl sub hlt add daa jne xchg loop popa (bad) fdivrl (bad) (bad) mov stos test jle cmpsb cltd flds aaa das jp mov mov gs jmp mov push rclb test decl cmpl fisubr out (bad) sub (bad) ljmp sbbl add scas inc cmp and mov pop add (bad) (bad) lcall (bad) push or shrb loop lods cmpsl (bad) (bad) adc cld jmp pop mov push repz add (bad) push mov in pop mov xchg adc push mov jg ja pop jne mov mov ffreep xchg mov sub js xchg (bad) icebp cmpsb loopne and (bad) (bad) incl and iret mov js mov mov or loop es imul decl mov adc lahf cmp daa sub push decl inc cli stc popa sti in push mov stos pop xchg es adc push imul cwtl fldt enter bound cmpsb sub (bad) jg lock xor ljmp jae push pop or aad lahf and pop and ds out sub insl xor mov les xor push dec dec nop adc out (bad) or dec (bad) test xor sbb mov (bad) (bad) lcall outsl mov pminub std push outsl lods mov roll or (bad) (bad) mov mov out xchg xchg pop and insl xor mov fmulp pop mov clc (bad) (bad) (bad) incl (bad) sbbb cmpb push stc add lahf cmp sbb (bad) (bad) ljmp mov fldcw pop fwait leave xor jns pop jl jo iret adc cli (bad) (bad) jg ret push adc stc lcall cmpsl xchg pmullw ret aam adc ja (bad) jg les dec xor insl imul and mov outsb aas mov (bad) (bad) (bad) decl dec pop fidiv pcmpgtd inc (bad) jl cmc pop repnz sub popa call sbb popf stc jg lock push lds ds fisubl (bad) (bad) in push into mov sub jns mov jge jnp fsubr or leave xchg std mov xchg jmp adc shr sar das mov pop jp mov push pop push addr16 mov (bad) cltd mov jnp mov add cmpsl jecxz pushfw fldt sbb in cmc aam cmp arpl ret push mov inc adc jae sub outsb and (bad) (bad) (bad) ljmp sahf xchg xchg sbb pusha lea (bad) xchg push jno outsl arpl dec mov jg (bad) cmp mov mov cmpsb jae std push rcrb shrb dec xchg mov inc lcall adc sbb inc in and (bad) (bad) call (bad) (bad) (bad) js or jle rcrb ret add sub cs pop pop pop mov mov or mov lcall inc push push pop jg cmp lcall leave rcrl (bad) (bad) (bad) pushl arpl push pop shl iret pop mov mov xor decl pop inc addr16 fst (bad) int3 mov fildl rcll mov (bad) (bad) (bad) (bad) fldcw fbld insb push xor pop movsb jmp or inc sbb pop in (bad) cmpsb hlt incl shlb insl imul push or (bad) (bad) call loope xor in pop mov rorl push sub mov jne and rep sub std ljmp mov mov sbb push outsb or fistp and (bad) cmp xor int sbb cmp movsb leave and and ljmp xchg jo and jae jne adc dec xor ljmp inc mov mov out cli (bad) mov roll les xchg pop (bad) sahf mov icebp xchg ss inc ss (bad) scas lret (bad) mov arpl popf ret mov (bad) (bad) test call and mov imul and test clc pop addr16 nop sub (bad) (bad) (bad) fcoms push push add push lahf pusha add (bad) xor (bad) xor test ljmp test cltd decl ret add pushf adc les pop push (bad) (bad) (bad) (bad) jp repz and outsl inc mov pop rcrl push xchg cltd mov pop call dec outsb ret mov xchg sar or (bad) (bad) (bad) decl ljmp paddq push cmp mov xchg outsl ret pop mov pop std (bad) (bad) (bad) clc cmp dec test cmc pushf jecxz xchg sbb dec in dec fldcw inc jnp (bad) (bad) (bad) mov push pop imul mov leave into arpl sti xchg dec leave mov loopne pop daa (bad) (bad) (bad) dec and ja inc mov pop mov ret and dec (bad) pmaxub push pop (bad) cmc jmp sti push sbb daa cld mov add push hlt mov jno (bad) (bad) decl inc inc in xlat sahf and cmpsb cs sub dec je push cmp jno in mov sbb (bad) incl xor adc pop movsl pop xor mov adc addr16 or lds fstp jae push cld lahf add push adc ljmp pushl mov pop xchg sub outsb dec sbbl adc sti push jle mov idivl xchg clc add xchg (bad) (bad) jmp mov sbb das mov push inc cld add addr16 (bad) (bad) (bad) in inc dec add cmp test push xchg jbe fs jmp pop hlt and push mov movsl fild xchg popf loope mov das je (bad) (bad) (bad) lcall or push sti movsl (bad) int xor gs inc cltd out shrb idiv (bad) (bad) inc sbb lea pop dec jb mov mov add cmp sbb (bad) (bad) ljmp or imul mov mov cmp pop enter (bad) decl lds imull ficom shrl (bad) call fimul adc aaa push inc pop jnp mov pop and mov js addr16 (bad) (bad) ljmp int les cwtl sub pusha sub inc adc sub add ljmp pop loopne insl push xchg inc in enter arpl mov adcb call xchg cmp xor icebp cli (bad) (bad) out movsb (bad) stos or jle (bad) mov dec push jae and loope je shll mov (bad) pop lret ds push cld lods mov (bad) cmp sbb adc decl (bad) xor (bad) lea push (bad) rcrl cli mov or fistp (bad) ljmp sbb inc add jmp leave (bad) (bad) (bad) ljmp mov idiv cvtdq2ps fs rolb sbb lret xchg add (bad) decl xor outsb mov and xor pop mov (bad) jecxz loopne imul (bad) call fs cmp je or sub cld pop out and jge adc push cs (bad) (bad) pushl je lds xor jmp test jp sbb test dec cltd lret push or sbb (bad) incl js mov jno add es mov cltd or add shll ds push inc test fmuls cmc lcall loop mov add ljmp (bad) (bad) (bad) incl cmp aam sub mov xlat ret loope inc add js mull jle (bad) (bad) decl and fadds stc jnp and fcompl pusha aas push xchg inc ret push or (bad) jnp cli sbb jg mov (bad) incl and bound rcrb lahf dec or pop (bad) (bad) (bad) call leave in cmp je into ret jnp das mov xchg in jne rclb cmc scas test inc mov mov imul call imul inc sbb push xchg (bad) lcall push cmp add in jl cmp jg arpl imul (bad) (bad) (bad) jg sub mov fiaddl or xchg pop push dec cmp das sub cmp xor xcrypt-ctr cmpsl lcall int adc mov adc (bad) (bad) call cmpsb push pop loopne into inc or lret ljmp rcr cs push js cmp (bad) (bad) (bad) mov push dec push into sub pop in mov cmp cmc (bad) (bad) (bad) ljmp cmpsl mov jle fistp into mov mov adc mov jmp (bad) (bad) (bad) call in sarl dec mov xchg pop dec mov test nop cmp xor cmp movsb xchg insb lahf (bad) (bad) (bad) (bad) (bad) jl,pt sbb cs sti test xchg xchg add lcall sti clc js fidivr cmp pop ret inc shll mov push nop pop and pop lcall stos lds pop test test mov call dec (bad) cmp fildll push bound lods ds (bad) (bad) call add out push mov clc cmp inc in cmp sub (bad) leave addr16 loop mov add push push cmp dec (bad) dec fldcw pop (bad) call push sbb loopne jl dec dec imul push mov (bad) (bad) incl jnp adc xchg inc lcall notl dec xor push push add mov mov dec rcl xchg mov xor aad xor or sarl out or adc jae rclb mov in mov add push das sub cmp push aam pusha xchg cmovnp (bad) jg sub jmp sarb test (bad) (bad) (bad) jp mov or xlat jmp push adc jne pop mov shlb das incl lock ss bound xchg insb sub (bad) (bad) jmp icebp jb jmp mov cmpsb xchg jo (bad) cmp cmp imul cmp fdivrs xchg stc (bad) (bad) (bad) lcall dec mov insl fs mov (bad) les ficomp inc xchg add xchg (bad) jbe lahf sub push cmp in out incl mov sahf cmp iret add push jns (bad) (bad) jmp fdivp cld cmp pop mov mov cltd ficom repz jp iret mov xor das jle insb pop mov nop dec xor test hlt dec inc push push aaa rcrb outsl jns mov fbld rep pop ljmp sub bnd mov fisubrl (bad) call loopne xchg cld cli sti lret cmp push je (bad) sbb data16 (bad) (bad) decl ret sub movb cmp or or jg lods xchg movsl ret (bad) ljmp icebp lcall push scas mov and movsl adc mov mov pushl lcall out mov xor adc in mov xchg add pop scas aas rclb cld adc inc cmpsl (bad) pop or (bad) clc mov arpl enter les (bad) (bad) ljmp sub jbe ds cli xor or data16 loopne sbbl push ljmp es jecxz cmp add sbb inc adc cmp cld movsb nop push loope mov js jno fistl pop loopne mov call dec lock mov lods dec rcrl fisttp subb dec jge mov lods (bad) xor pop jp push xchg xor dec mov cs mov pop fmul mov xchg push fadds push add mov (bad) loopne jbe dec sbb push dec dec xorl out xchg je inc or mov fwait std rep loopne cmp or push and pop pop pushf (bad) (bad) (bad) jmp push (bad) ja push push mov in dec mov ljmp fstpl add pop pop out jbe outsb mov pusha cld fmulp inc pop add inc (bad) fnsave cmc and popf mov test jae fdivp (bad) (bad) call fnstcw (bad) imul mov neg (bad) aam sahf pop or enter mov es mov mov cld (bad) ljmp call mov sahf les aaa ljmp (bad) jg dec ds fs cmpsl nop or mov push xchg (bad) (bad) (bad) jmp aas dec pop movsb add out nop in mov in xchg jecxz cmc rcrl mov dec fcoml ljmp aad pop add inc dec iret adc xor jbe icebp push stc xchg xor bound popl repz add mov subl inc and mov sti adc (bad) (bad) cmp push jge in jmp loopne outsb pop xor call mov dec sbb sub jo ljmp js idiv (bad) call pushf inc xchg iret mov (bad) lods pop daa jmp imul cmp ljmp mov jno push sub fs int3 loopne add push out sub (bad) jg pop shll decb dec je loopne aam dec movb pop ds mov (bad) (bad) (bad) fcoml jne pop lods fdivl xor mov cmp stos mov add fildll (bad) (bad) (bad) jmp push and shlb sbb lahf popf lods rcrl std cmp (bad) (bad) decl jo repz cwtl cmpsb rclb clc dec and div xchg movsl outsb pop xor lret (bad) (bad) jmp pop add fldcw in loope cli shrb lea sub (bad) (bad) clc ds cltd inc xchg lcall push inc xchg outsb sti and mov test dec out xor lcall mov call lret out js jg dec repnz iret or sar (bad) (bad) fdivrl add fsubrl xchg sbb dec test loopne mull fisttpll jg loop dec js xor mov push scas lods dec sbb adc lods aad idiv ljmp test lret movsb scas sbb jb loopne loop (bad) (bad) (bad) decl push jle aaa and stos xor inc mov inc pop gs ret (bad) frstor int cmc std mov imul push sti cmp pop (bad) xor popf jmp pop or mov pusha lcall adc cli shll nop inc int3 std in ret hlt mov (bad) mov add faddl dec outsb pop mov mov popa ja addr16 (bad) (bad) lcall mov cli in push adc sub push push jl mov pop (bad) ja sar (bad) (bad) out mov dec clc sahf insb mov bound mov jo leave int lcall sub lods js inc pop pushl call mov arpl and scas iret mov push push (bad) (bad) call adc push jg (bad) std push (bad) enter sarb and call movsl (bad) lcall movsl scas insb aad pusha xor push movsl jns dec mov js mov (bad) (bad) (bad) jg repnz fsubrs pusha fsts stos (bad) rorb divl pop (bad) cs cmc and sar (bad) jmp inc inc imul jecxz push aaa popf xchg sbb out sbb mov push xor (bad) (bad) dec cmp mov cs sbb std mov adc jb (bad) incl loope inc aad (bad) enter (bad) fsubrl cmp jecxz (bad) (bad) pushl je mov pop jle inc test sbb inc cmp add ljmp cmpsb out mov push xor ret movsb inc or ss xchg xchg test mov mov push push hlt decl add xlat mov (bad) (bad) (bad) decl push iret das pop outsl and xchg mov dec add (bad) jg popf or mov or repz mov or xor (bad) (bad) (bad) (bad) pushl sarb and pop cltd and or push nop iret and push cmp sub clc xor call aam outsb test clc clc inc mov nop mov icebp test (bad) (bad) (bad) mov iret and in movsl out and arpl sarl arpl cmpb popa popf std nop icebp out inc aas andl xor add (bad) (bad) jmp push push pop jl xlat out test mov in jp inc stc arpl lods mov (bad) (bad) (bad) decl out pop xchg js mov fiaddl push cmpsl push push add push pop mov decl mov popa jb and pop inc sub sbb loop adc insb fsqrt (bad) jg inc ds mov fiadd or out (bad) adc imul outsb cmpsb mov rcr (bad) push call adc (bad) decl call popf dec aas loope ljmp (bad) pushl ds jns out sar push mov mov jb sub into outsb sbbl (bad) jl mov lcall fs xlat push fcoms xchg hlt fadds (bad) incl imul in aaa push cwtl and rclb cmp cld pop xorb mov (bad) aaa mov push jbe call xor mov (bad) (bad) jmp push jne mov lcall iret (bad) (bad) movsl cmpsb test lret mov fldl icebp (bad) pushl adc push outsl dec loop mov mov mov (bad) lcall inc push test es daa lods loop sub mov jb int cwtl add cmpsl pushl dec loope aad mov cmp sub (bad) (bad) (bad) fnsave mov addl mov mov jmp lods mov (bad) (bad) inc jmp xchg movsb push push cli test loopne xor in mov mov sarl iret sub sbb (bad) (bad) incl jecxz and sbb and xor (bad) sbb xlat mov pop mov loope (bad) (bad) (bad) inc mov lret out adcl cmp push jae das sbb inc xchg pop mov test cmp in out xor cwtl std pushf pop int3 dec rolb sar (bad) (bad) (bad) call imul push jl mov fwait pop insb mov lret pop daa mov les mov cmpsl push mov (bad) ljmp test sub jo inc push popa jecxz mov jno pop cmp (bad) dec push or xchg int xor xor add in push push xchg xor movsb inc lods adc in pop repz (bad) decl lock lea (bad) push ret arpl mov mov (bad) lcall mov cld leave jp test (bad) mov xchg ds mov test mov fild movsb iret mov sub dec jne hlt ljmp xor inc jge std xchg mov inc fisub out out sub std xchg (bad) (bad) jmp ror adc mov adc outsl (bad) (bad) incl mov fstl mov jne dec in xchg les push pop rorl cltd mov jmp jge (bad) (bad) pushl lock mov in xor cmp xchg aas inc les jno push std pop sbbb cli clc lods mov leave lds or int3 mov (bad) decl ds fsubs icebp ss lret push aad lret cmpl (bad) cmp xor arpl daa xorb or adc xchg out sbb (bad) (bad) call in and push xchg (bad) adc inc xchg in dec imul (bad) (bad) ljmp (bad) fistpll lret mov xor sub inc test xchg arpl test (bad) ljmp pop scas int3 adc phaddubw xor cmc in repz (bad) (bad) lcall iret sub sub ror outsb ds lret nop std cli mov ss (bad) decl in mov das mov add int and mov (bad) (bad) lcall mov or popf (bad) xchg jl (bad) dec xchg sbb (bad) ljmp cmp adc mov insb (bad) aaa xor cltd push (bad) (bad) (bad) decl adcl movd sub push cmp es push mov xchg arpl xchg gs (bad) lcall jg xchg cmp pushf jns aad inc dec pusha mov push out (bad) (bad) jmp insl adc xor dec out push outsb (bad) (bad) adc (bad) (bad) jmp cmp pop adc test stos adc ret add ja ja mov mov and ds fcompl out les and (bad) (bad) (bad) call int xchg outsb out out pop cmp push add setp insl mov (bad) (bad) (bad) (bad) cmp mov sbb test xor cli xchg loop mov dec pushf ds cmp fild add pop fsubrp push and mov push pop std (bad) inc test pop push addr16 cmp lahf mov dec loopne lea or sar and inc inc shll cs (bad) (bad) (bad) jmp sub lods xchg (bad) outsb lahf adc rorl dec adc cwtl outsl mov outsl cli pushl test mov sub decl arpl or jg pop lcall mov outsl fwait (bad) (bad) ljmp mov pusha add push pop sbb mov dec clc pushf (bad) xor insl pop stos aam (bad) (bad) jmp or xor cmpsb push lods hlt aad addl sub mov push (bad) (bad) (bad) incl push test lock popa fcoml lahf sbb inc and mov sahf jmp jmp sbb inc mov sahf (bad) call aas jo fwait or jbe or scas ds cs pushf cmp mov fcompl fiadd push inc dec push rcl leave or (bad) (bad) decl sub mov sub and idivl mov mov lret jmp stos dec adc std aam dec mov fbstp pop rcr and cltd sbb movsl jl (bad) (bad) jg xchg rclb sub cmp inc jo adc lea cmp add (bad) jmp cmc sub xlat adc ljmp dec push adc mov add (bad) (bad) (bad) ljmp idivl mov xchg vsqrtps mov loopne shl (bad) pop mov jmp jp (bad) (bad) lcall negb pop jb mov add inc dec push add sub loopne or (bad) (bad) out movsb dec and push es push daa mov adc out ret jp jmp jp adc out cmp lods mov jo sarb mov cwtl lcall mov jmp stc add push push jge add (bad) (bad) (bad) cld pop xor es pand rorl or frstor jl inc sub mov (bad) decl rcl jae and (bad) in (bad) mov push mov xor push xorl stos mov loop mov xchg stos sub jmp lret jno and add (bad) jmp (bad) dec rorb push lcall arpl push es adc xor cmc cmp (bad) mov jecxz rolb adc jmp lcall insl mov jnp (bad) mov call xchg jle enter add jecxz roll pop sbbl push mov incl xchg xlat arpl adc mov push pop (bad) (bad) call cld jnp sbb in jecxz imul sbb xor or lods push fwait out in jl subl (bad) (bad) jmp sbb (bad) (bad) repnz add mov push jmp dec pop xchg test cld or inc insb sahf cmp lcall icebp aaa adc add (bad) call xchg sti lret push xchg out in xchg arpl (bad) lcall cmpl mov lahf enter jo pusha cld inc dec adc inc stc push rcrl clc or aam add push cmc and imul outsb mov xchg test adc cmp addr16 lods fs pop lods jne int idiv (bad) (bad) ljmp mov out arpl mov fs jecxz xchg jge dec ljmp and stos lcall (bad) mov mov cmp fprem1 aaa mov pop loopne mov mov pusha ja sbb xchg sub or fidiv shl mov sti xchg sub or insl or inc ss decl insl fwait mov call jp (bad) mov add jmp pop lcall cmpsl imul (bad) sbb (bad) (bad) (bad) incl add dec cmpsl inc jmp mov mov or (bad) push dec pushf (bad) (bad) (bad) incl and shl lret in cltd dec add lock jbe pusha cmp xchg bswap and (bad) incl lret mov mov (bad) (bad) lcall inc int jno xchg jmp in add ja call push test mov (bad) inc mov dec mov jns fnstsw jl int sbb cs ficom dec pop aas fsubrp jmp dec push (bad) (bad) fidivr push xchg add pop mov (bad) (bad) jg xchg pop stc or dec daa adc xchg js test and movl lods pop push leave or clc (bad) fistl movsb or iret ds cmpsb or (bad) (bad) jns cmp nop push push xchg hlt int3 jmp scas jbe,pt (bad) mov (bad) mov mov add add cmp lods xchg jge daa (bad) je (bad) lcall mov call sbb lret gs subl or loope (bad) (bad) fdiv push repnz push fmull pop jge pop pop jle mov cli mov lcall push addb outsl movsb xchg std aas (bad) (bad) (bad) decl sub adc pop add jecxz fldenv gs (bad) (bad) (bad) lcall cmpsb xchg stos ss xor popf or fsubs add inc in mov pop adc (bad) (bad) (bad) jge,pt in in mov pop cltd (bad) cmp fcoml dec or pop fisubrl sbb lock decl in sbb in cmp xor pop ljmpw scas jbe (bad) (bad) (bad) jge test pop mov and scas dec xor test lea push xchg pop pusha test outsl mov add inc mov adc lcall loopne mov (bad) cld insl lea fadd cmp cld (bad) decl sbb in dec adc cli imul (bad) call add out out pop sub stc jecxz and repnz inc mov loop mov (bad) (bad) (bad) incl aam push jmp out shrb outsb fucomp daa neg pop into outsb jb jle mov (bad) jmp jb pop out int xchg hlt jbe or outsb aas jge ret sub stos add enter (bad) (bad) dec repz push xor mov int3 inc daa mov sub insl aas mov (bad) jg sub lcall negl fisub sub loopne std cmp movsb lret ret dec lahf (bad) call mov inc push out cltd cmp cltd adc jnp pop inc xor (bad) lcall orb (bad) dec sub sbb xor (bad) (bad) (bad) pushl mov sbb add jno mov mov sbb std and dec mov aad scas xor lret jmp ss mov mov shrb lcall jp sub xor sbb and stos (bad) (bad) lcall mov push pop ret push (bad) adc mov (bad) cmp mov sti imul add mov or pop aad dec pop cwtl fldl aam pop movsl (bad) movsb push pop xor and or stos shl and fdivl push add dec add fcomps subb cmp cld outsb add mov shlb mov (bad) pop cmc call in jae (bad) arpl (bad) outsb mov dec ljmp push ror shll daa (bad) cmp (bad) incl adc (bad) adc mov jo aaa das push dec xor arpl mov cmc ds pop icebp jg test enter mov sbb cmp stos xor (bad) (bad) mov (bad) imul daa mov roll rorl (bad) (bad) (bad) call jg ret mov loopne jg mov dec loop or mov in and (bad) (bad) incl sbb mov outsl dec out inc lods movsb in jge (bad) push jge xor jae push jg dec lcall aaa pushf pop mov sbb jge jmp push mov or mov (bad) jg lcall or and scas sti inc mov xor out sub mull pop (bad) (bad) (bad) push aam xor in je sub mov sub mov pop stc popf ljmp mov inc (bad) nop mov popf mov and dec adc dec clc mov imul lds inc cwtl and xchg fwait lcall jg push mov roll stos lods popf xchg pop dec push stos add xchg enter outsb fnop decl inc xor mov ds (bad) (bad) (bad) out movsl cmp test push add daa lds cmp movsb or dec (bad) (bad) mov push xchg push pop outsb dec push subl sbb div cmpsl (bad) fild inc jae,pt inc das adc int3 loopne test xchg ja (bad) jmp push dec (bad) xchg ss sub adc ret or sub pushl arpl push xchg add jb lahf stos jle outsl subl (bad) (bad) (bad) (bad) mov sti scas and sbb lahf int les mov inc dec or pop adc mov (bad) fildl mov mov cwtl popf (bad) leave mov ja outsl sub ret push add lea or (bad) (bad) ljmp sbb xor gs adc mov dec loopne sbbb or inc mov lahf daa lahf mov cld dec or cltd and xchg inc out (bad) inc leave pop mov (bad) inc loopne sbb jge rol popa add ret jmp push jo push pop repz cltd inc xchg aaa dec les mov enter decl and ljmp sahf (bad) and sbb repz mov insb (bad) mulb mov (bad) call ret cmp xor push lock int cld (bad) decl cmc fcoml fsubrl push test sub and and scas push aad inc out dec xchg lcall hlt dec dec ljmp mov gs jle (bad) decl (bad) pushl push lods cs (bad) mov or data16 cmp jmp pop sub mov jp aas jae cmp (bad) sbb jmp das pushl inc push test inc mov arpl fldcw (bad) adc into stc xchg xor mov adc inc cmp (bad) (bad) (bad) lcall sub xor lcall (bad) xchg test fwait push xlat fstl pop out icebp cmp lcall xchg mov mov mov lods sbbb push push mov cmpsl mov rcrl jmp pushf adc and es xor outsl sbb js inc push cmp (bad) (bad) (bad) cmp push and data16 scas lods xor sub push pop mov mov sbb ljmp movsl add push sbb enter (bad) call imul xor or mov ret jge stc mov mov outsl xchg mov (bad) and sbb sbb (bad) (bad) call subb insb mov scas cli xchg inc in mov jnp nop push cmc lcall inc mov jb aad or or cld ret pop push fsubp fiadd mov mov adc push inc ds test arpl add adc or xor (bad) loop xlat fmul and das add in and mov jg loop out sub fdivr inc aam push (bad) (bad) (bad) jmp jne inc add int3 leave shll lods sahf xor dec js adc jns push dec dec lea enter call fwait dec push or insl lods push lock pop xchg xchg sbb sti (bad) lods fdivr pop icebp ljmp in mov ffree cmpb js add fdivrl jns cmp outsl push repnz xchg xchg dec mov pop inc adc mov (bad) call int outsl jo fmulp (bad) jg jle stos das lret jno pop popa lea (bad) (bad) pushl adc insb mov mov push scas pusha in test jmp mov (bad) (bad) (bad) cmp inc gs xchg int3 adc jae int3 dec push mov or ss mov (bad) pushl or cmp push add pushf pop inc (bad) jnp xor and cli sub jae rorl lods mov sbb test fiaddl ljmp mov mov in clc dec ds add data16 lcall stos adc daa inc adc sbb push insb sbb roll leave cs pop cmp (bad) (bad) mov cmp arpl jecxz inc mov lods sbb and lcall pushl shrb cmp adc clc leave addr16 movsl cli insl mov or (bad) (bad) incl lret pop dec mov mov pop ret icebp aad es cwtl cmc sahf aad xchg lock (bad) (bad) (bad) ljmp push inc ja sbb dec (bad) sbb fsubs or jne jo jnp mov jmp adc pop sbb loopne dec jmp dec cmc clc fs (bad) mov add es dec mov add in decb pop mov enter jecxz ss leave xor lcall lret xor or mov outsl scas (bad) mov repz mov fs inc nop cmpsb hlt or push scas (bad) out cli lcall cmp mov ret mov sbb bound (bad) pushl inc call test adc (bad) (bad) lcall outsb fidivrl jecxz mov pop push mov cmp lahf sbb vmread or les pushl es xchg jmp mov sub call lcall inc mov (bad) mov insb jne fisub hlt mov fcomps ljmp pop pop mov out xor inc sbb clc pop sahf dec es cli mov inc lds sbb (bad) and lock (bad) decl in mov add in test (bad) hlt sahf cvtdq2ps in loopne xor pop stos cwtl sub jnp fcom adc clc cwtl les and cltd stc push adc (bad) (bad) (bad) inc or jp and xchg in rcll fwait movsl mov cwtl adc or pop mov sub (bad) (bad) incl pop ljmp pop in out fwait lea ret dec fdiv cmc adc in (bad) pop (bad) (bad) fcomip inc xor movsl dec call add shlb addr16 dec loope cli (bad) incl xchg or rcll int ret popa jp inc mov (bad) (bad) call clc das adc stos fwait inc fsubs dec xlat jp dec pop mov test mov adc sub pop rclb test inc cmc in jb mov loopne (bad) (bad) (bad) fcomi cld xchg lods bnd (bad) jle repz add mov mov (bad) jmp sti es hlt adc loopne pop into popf cmp sub cli data16 xchg movsl push xchg xor mov (bad) (bad) dec stc jnp or js jmp push scas test shlb mov lods fadd pop insb sti jns aaa jne lcall push frstor mov or call (bad) mov lret cmp movsl fprem1 addr16 inc adc js popf lret inc stc jecxz inc xchg mov iret fdivl xchg jle in jmp mov aas (bad) or jmp (bad) mov mov lret jnp mov cmc sbb arpl (bad) lcall cld (bad) (bad) (bad) incl cmp mov dec dec dec dec pusha inc out movsl cmp cmp rclb jb insb pushl pushl lahf (bad) ja cmpsb lea loopne mov out and ljmp dec cli les pusha sub loope dec add decl loopne jp jb pop pop pop and cwtl lock pop out cmp pop gs scas cli (bad) jmp dec decb mov popl test or pop push mov aas mov loopne das clc mov cmp dec out orl mov (bad) call mov popa mov lret or push cmp inc dec mov (bad) (bad) (bad) incl popf mov push jnp mov cmpsl push push or jnp sub andl (bad) (bad) (bad) pushl and ficom jne cmp enter inc mov out out jae or (bad) (bad) adc sub stc nop xchg xchg adc lds pop inc jmp jnp out adc jno pop loope xchg dec push cld ljmp lcall ds mov ds (bad) (bad) (bad) call fisttpll fnstenv mov loop mov push lock lcall jbe addr16 mov jnp lods sbb scas mov or or ja ret ds jl sbb add lea mov mulb mov sar incl lods fildl out mov sbb sub nop icebp mov (bad) (bad) (bad) dec lret cld mov xlat das mov ljmp mov jae (bad) lcall (bad) jns mov je xchg outsb test jp inc pop xlat leave ret (bad) call fldcw inc pop inc je mov sahf mov cmp mov or lcall insb xchg (bad) xchg hlt pop mov insl mov (bad) (bad) pushl (bad) aad mov add scas cmc or js (bad) (bad) (bad) jmp cmp or xchg sbb xchg xchg inc inc jae sbb and arpl (bad) (bad) (bad) jmp pop mov dec dec (bad) hlt inc insb popf cmp cltd mov jbe and sub (bad) (bad) (bad) pushl xchg sbb (bad) mov adc sahf push jo adc (bad) (bad) (bad) (bad) out inc icebp sbb (bad) jmp xchg inc movl cmp mov (bad) (bad) decl stos aam jbe bound jg cmp movsl cltd adc sbb loope (bad) (bad) lcall or mov add cmp and je test nop popf mov ret cli jns adc (bad) (bad) ljmp jo pop rol push and std pop cmp mov jnp jno jnp fcomip ljmp iret xor add adc add xchg in fistpl mov mov insl xlat mov sub adc jne cmp out cli (bad) jg mov cltd pop xchg pop fsubrl mov dec cmp push (bad) incl mov mov notl xor (bad) lcall or in ror repz adcl adc pop adc xchg or add lea inc sti pop mov ds sub jle mov cmp popa or sbb (bad) (bad) mov dec mov cmpsl sub pop (bad) lods sti dec sbb cltd enter dec jae push pop cmp ret (bad) jmp sbb inc in in dec mov pop xor cld xor (bad) inc insl xor and cmp inc mov xorl cwtl push add idiv mov (bad) in mov cmp aam repz sbbl cli cmp mov ljmp aam incl fisttpl fcoml hlt push dec adc cmp mov incl sbb jle cltd fbld push lcall pop mov mov lods jle or sar jmp pop and loopne arpl jecxz xchg or mov (bad) (bad) jmp jge loop inc jmp ds inc fwait adc insl call das (bad) cmp and pop xor repz lods (bad) (bad) (bad) (bad) jl js int3 notb push xchg sbb mov (bad) mov dec xchg (bad) in (bad) (bad) (bad) call mov lds mov fstp movsb fstl fadds mov xchg xor (bad) (bad) decl pop addr16 stos push es int and push sbb and xor sbb dec out vcvtpd2ps adc xor nop xchg cs pop fcmovnbe pushf cmp clc sahf cs (bad) (bad) (bad) incl push mov xlat mov mov dec stos addr16 fidivr xlat pop mov adc (bad) (bad) cmp sbbb and (bad) (bad) fnstsw push add test (bad) imul pop jecxz pop stos js push (bad) decl out jge outsb jns cmp jbe rolb (bad) je push movhps (bad) (bad) jmp mov sahf ja pop pusha loope inc int3 jge adc je (bad) (bad) (bad) fbstp dec inc stos push adc mov jle mov in fnstcw inc (bad) mov int3 and push xor sahf je sar xchg xor (bad) (bad) (bad) lcall fwait rcrl xor jae sbb popf sbb aad and or mov jns js jmp lcall cltd mov sub lock (bad) (bad) cmp setnp push imul jmp fstpt aaa add lods push mov ffreep insl ret loopne fidivrl mov fiaddl ds mov leave rorb xor lods mov pushf dec sub test ficoml in rcl sahf sahf cltd push dec jg jbe popa fdiv fldt xchg or data16 jo jns (bad) (bad) (bad) pushl inc les es sub out (bad) mov out cmpb incl ja fild sub lahf add incl hlt pop adc out sub out call lcall adc add cmp mov ja mov sbb cmp mov popa jns jecxz xchg mov call loopne sbb nop nop mov loopne jns outsl sbb jo movsl lahf aas call shrl xorl popa roll andl xor fnsave mov call lods add sub pop outsl jno nop (bad) or mov and add jns xor addr16 imul jo sub movsl repnz pop js inc aas pop adc pushl cmp jmp lahf bound inc (bad) jg (bad) pop or icebp loop xor mov stc fimul je cmpsb outsl push test mov (bad) (bad) call push xor sub mov stos fidivrl push add loopne cmp mov or in out icebp (bad) (bad) call in cmc (bad) mov sbb and adc jno (bad) aaa xchg add (bad) decl fidivrl xlat daa sahf hlt out jns pop inc add and (bad) (bad) (bad) incl sbb imul sbb loope xchg rorb mov pop sub (bad) (bad) (bad) ljmp adc mov int xchg fstpl adc ficom int3 lret ds (bad) (bad) jg mov dec sub fcoms add push ss mov outsl jae cld (bad) sbb (bad) call call lret jge leave pop pop or stc bound cmp xor pop out mov rcll mov xchg incl push jo insl daa clc std xor sbb lret shrl or out in (bad) dec mov adc cmp (bad) ljmp sbb inc xchg cmc fdivl jns loop pop movsl addl cmp rcl sub push mov mov (bad) mov lods push or es jmp in mov mov jb ja ffree sti int fistpl push sub call mov ds add aad scas mov dec bnd outsl xchg inc fldenv sbb mov mull call int add jnp sbb scas ror (bad) (bad) (bad) ljmp rcrl int and fwait xchg xor mov sub in pop sbb add jg mov lret and dec lds js lds mov xor mov or loop cwtl rclb jno cmp xchg jle iret add outsb mov (bad) mov cmp xchg imul (bad) ljmp pop scas mov fbstp test popa lock xor movsl pop aaa (bad) (bad) ljmp incl daa hlt adc movsb xor xchg mov popf decl lock fisub dec xchg pop out aam fstpl sub pop pusha orb popa pusha (bad) (bad) (bad) out cli add mov lcall jns mov sahf add jp sahf (bad) cmp fild orb and arpl popa add (bad) jmp outsl cwtl xor (bad) rcrb mov jle xor fcoml xchg insl sub inc imul (bad) jmp fs outsb mul lret repz jge add (bad) (bad) mov pop (bad) jp push pop push dec add data16 dec push mov fnsave and (bad) (bad) dec and mov mov fs loop,pn push fadd cli decl es push fnstsw sar (bad) clc in sbb jl outsb imul sbb cmp mov in stos out mov lea pop cmp cmp (bad) frstor jecxz sbb nop (bad) (bad) out xchg ds stos repz (bad) and xor adc rcrb sbb aad outsb cmp (bad) jmp jne xor mov lret insl push std mov sti dec arpl (bad) call repz xlat mov shll mov add scas scas mov ljmp jb xchg cs jg push inc testb cmp shr (bad) (bad) (bad) jmp loope loop inc or lods int fnop cmp cmp lods leave sbb cmpsl and add xchg daa in cld (bad) sub cmc (bad) (bad) jg jb dec mov inc test mov and in or xor scas popa loopne fisttp aad add pop repnz lods es mov cmp cmp lods mov lods mov cltd (bad) or (bad) cmp xchg iret stos push mov (bad) (bad) mov inc je dec jecxz lea and enter cmpsb push orl xor dec fdivs (bad) (bad) (bad) pushl stos xchg jo push ljmp out js sbb gs pop xchg pop or mov push divl jno inc por sar insl push pop clc adc popa cmpb prefetch dec and push ds mov and cld pop sbb pop mov outsb in scas rorb (bad) decl fdivl cmp ret mov ds mov push repnz xor (bad) ljmp pop xor xchg lods (bad) jns divps sbb push sarl pop insl lds incl dec sahf adc xchg sbb mov ljmp aas xchg out sbb (bad) (bad) lcall jp pop mov mov imul cmp inc fsubr paddusb cmpsb fcmovnb in (bad) (bad) (bad) call sbb call mov sub fldt pushf sub rclb cmp push lahf pushf (bad) call std xchg pop gs out cmp dec adc dec fstps psubsb add jl inc call loopne ljmp insb insl (bad) mov pushl shrb pop insb std cmp and (bad) call pop and sarl ja aam (bad) (bad) (bad) jg pop addr16 push push inc fsubrl or adc sub ret mov jecxz jno cmc (bad) call jmp ds lods incl push cmp out mov out xor pop out cmpsb jbe dec popa cmp je (bad) (bad) (bad) (bad) pushl push cmc sub call ss dec dec ds fdivrl push push aas incl adc std push adc mov rol shrb xor andb js mov arpl data16 shrb mov jg call adc (bad) and pop jno xor (bad) (bad) (bad) jg xlat jle push or mov andl lahf mov fwait adc aaa sti mov clc (bad) (bad) (bad) mov pusha cmpsl lock (bad) mov push xchg or int xor inc xor addl rcrl xchg pop movsl add jg xchg (bad) (bad) (bad) inc cmp js dec dec and jg xchg inc and sbb lcall (bad) (bad) incl out sti sbb in enter mov fcomps lods aam roll (bad) call add mov stc fwait xor mov sub jnp into add (bad) (bad) decl add rcrb jnp movsb loope jl sahf test mov repnz mov insl jmp mov notb or lcall hlt outsb in mov nop es xchg cmc loope (bad) (bad) xor das sar push adcl mov pop xor es xchg (bad) jmp lods push cli lahf xchg (bad) sbb mov sub xor inc sarb fldl mov mov rorl mov clc test push pop or fmuls hlt fwait jo scas ljmp mov std test cli dec push add sub add test (bad) inc je fs incl and adc pop adc jg jg cmp jp pop inc xchg xlat std iret mov cmp popa jno sub loopne mov (bad) (bad) lcall ss scas mov scas clc inc cmpsl shll pop (bad) ffreep pop sbb push dec mov push nop clc cmp clc pop test fsubl fidivl cmp iret jns inc mov iret clc dec cltd lret sbb out jp das push in inc inc loop cmp pop and (bad) (bad) jmp pop insl loopne sub stos pop fcmovnu fsts out cld fsub (bad) xor fcmovnb (bad) (bad) (bad) decl jo mov sub cmp lea sub stos jb jne imul fwait inc cmp xchg test push (bad) out push lock fcoml ret outsl push mov sti js clc push lahf fsubrl fndisi(8087 mov mov push (bad) div inc lret sub (bad) outsl int3 (bad) (bad) (bad) ljmp or daa inc scas xchg aas and mov dec iret push and pop mov (bad) lcall shrl stos fstl jae pop cmp in mov lcall add adc imul je and mov shll jmp (bad) (bad) (bad) decl js inc outsb (bad) in or adc sub cmp pusha mov xchg test in xchg xchg add mov orl mov pushl std dec stos pushf ss call rcll sbb inc dec cs sub adc lock cmp lea jbe adc rcl inc jp mov cmp inc xlat mov pop adc jne in clc push stc xorl mov jmp inc xchg jno (bad) call mov add or mov insb or cmp xor or test std (bad) (bad) (bad) mov push cmp or pushf xor sub xchg js sbb mov jg and push loop sbb sub dec (bad) (bad) incl xor roll out testl (bad) ljmp xor fadds bound fwait adc movsl repnz xor in fcos (bad) (bad) (bad) mov and ljmp cmp mov into out sbb mov jns ljmp stc out mov jnp pop dec inc jge or repz (bad) cmp test (bad) call jmp jle das inc jmp xchg jne mov (bad) (bad) (bad) (bad) jnp,pt imul enter ds mov cmc (bad) (bad) (bad) (bad) call out dec fldcw add test push aas xchg shlb add (bad) (bad) (bad) pushl incl push push sbb jno sbb (bad) push jb sub (bad) (bad) (bad) pushl or std add jae mov ljmp dec and scas lea push add cwtl and or add cmp ds (bad) (bad) (bad) mov fucom sbb mov jb push pop fldenv addl (bad) mov aad dec fistp int3 into dec cs test add mov call or xchg and aad inc pop lea cmp jmp ffreep addr16 dec sbb aas lret xchg (bad) fcomip aas ret cli aaa out ret inc mov adc lcall (bad) ja in js stos pop loopne cmp push sub test scas arpl add lret (bad) (bad) jmp push scas ljmp nop xchg imull mov adc pop dec push cli es popf xchg mov cmp enter stos inc and sub cli call lret movsl xor aam xchg out mov sahf xor mov xor pop xor lret push test outsl cmpsb lea lock or mov (bad) lcall dec sbb xor hlt xchg jbe mov inc mov adc (bad) (bad) (bad) pushl jns push jo (bad) push mov lcall mov xchg (bad) xor xchg das sub imull std and adc mov ja loopne mov test xchg jl jmp pop imul sub pusha mov mov (bad) (bad) jmp ljmp push fwait inc dec loope dec push mov xchg repnz (bad) (bad) mov je inc ret sub add (bad) fbld (bad) inc jnp dec sub (bad) (bad) ficom test pushf jp mov mov push or push fcom bound mov push xchg scas mov xor loope outsb inc fnstcw push xchg jb xchg fisttpll shr mov lret (bad) (bad) (bad) (bad) cmp inc or icebp xchg nop fimull xor shrl (bad) iret (bad) (bad) (bad) call fcmovb cld movsb aaa lea mov dec repz call divl mov mov arpl in imul push fs push leave pop inc sbb call int (bad) aaa cli fsubrl dec imul dec xchg lret sub dec or lods (bad) decl sti pusha add xchg adc jo (bad) lret (bad) (bad) (bad) ljmp aas or ret cli mov mov ret ficoml xor push inc scas jno scas push adc pop icebp mov mov shr icebp (bad) add pop std mov lahf ja pop leave pop cld aam (bad) (bad) jmp pop mov into xlat pop xchg mov jne add outsl cmp lahf daa fcmove or (bad) ljmp xchg inc sub jmp loop sub and or sahf (bad) pushl loop dec dec repz js out fist lds or iret and icebp (bad) (bad) (bad) decl mov inc jge mov mov adcl pop dec repnz ljmp repnz daa sbb inc (bad) dec or push mov lahf es aad decl mov inc sahf push push cwtl pop daa sub sub insb (bad) repnz lea scas dec clc jns inc enter pop js or shlb (bad) call sub fimul flds call cmpsl repz ljmp sti dec push pushl mov cmp in aaa xchg subb repnz cs dec xor mov cld adc dec outsb or imul divb pusha dec inc xchg into (bad) jg push sub add mov mov (bad) or (bad) in xlat mov xor mov sbb mov sub mov push xchg test (bad) (bad) (bad) lcall dec outsl xchg imul push dec inc mov cli xchg mov nop push sbbl (bad) (bad) (bad) jmp dec dec (bad) iret cmpsb cmp mov jle add inc stos jp push icebp push xchg pushf enter std pop lea sub inc je mov fs (bad) fildll mov loope in jnp inc mov aam (bad) (bad) (bad) decl and mov sbb mov movsb andl xor push loope insb or push incl insb popa and or jp mov xor decl mov sbb lods lods inc xorl mov xchg cmp xchg insb pusha sub or jge add ljmp into xchg pop and imul (bad) or mov sti cltd (bad) clc and (bad) incl push aad sti (bad) pop inc imul inc cli sub repz pop movsb loop (bad) ljmp sahf add mov jnp scas pop fcmovb out test ret test push sbb jle mov negb ja dec orl (bad) (bad) (bad) jmp mov gs out and mov jne add int and shr or decl or outsb or mov push fldenv icebp sbb das dec lods jmp (bad) inc arpl mov (bad) xor mov test imul mov call mov ja cmpsb or lahf pushf xor xchg mov (bad) (bad) call lds adc in push inc and ja or sti lock (bad) popf xchg adc loope cli (bad) decl divl mov or dec add cmp ljmp push lods insb mov in and push clc and inc in mov in mov ljmp rcrl sub je add out mov cli pop adc cmp (bad) (bad) ljmp jns fdivs rorb xlat fs insl sbb sub scas cld jo aaa ljmp add cmc pop dec icebp mov clc inc into xchg (bad) (bad) ljmp in add mov mov mov xor mov lea jb add (bad) call dec addr16 adc lret nop arpl inc jo bound fcmovb clc dec (bad) jg mov clc int3 or subl fmuls (bad) std lock mov mov loope xor fimull mov ret (bad) ljmp jmp (bad) push xor dec repnz mov fisttpll (bad) (bad) lcall mov inc and fs pop add push push jecxz (bad) mov inc ds adc inc mov in dec (bad) and stc divb mov and and lahf enter mov es xchg ds cmp (bad) call mov mov jno fldcw and pop mov dec inc xchg add lcall mov sbb test sbb sbbb hlt test mov push sahf jge jmp stos push inc fs popa xor (bad) xor incb ds (bad) mov mov (bad) (bad) (bad) lcall ffreep arpl emms mov daa mov jecxz je arpl inc lds mov lcall jecxz data16 sub jge mov or hlt add stc (bad) incl push pop cmp nop jl jle pop mov popa ret lods outsb outsl (bad) (bad) lcall jg jno jb pop and xor xchg cmp scas sub (bad) (bad) (bad) pushl stos cmp outsl bound cmp rclb push repz adc scas imulb inc (bad) (bad) (bad) (bad) call or xchg mov insl fsubrl cld push fcomps rclb xor ds cmc rorb fidivrl add push mov mov test (bad) decl mov test dec push xchg jp loope repnz sbb pop cltd sub pop xchg scas aaa and jmp mov mov and popf jle ds (bad) (bad) jg out push insb adc pusha nop push out (bad) negb es pushf dec mov (bad) (bad) (bad) lcall cmp inc adc sub out jecxz push (bad) pop jl stos hlt jl pop (bad) ljmp push (bad) mov out lahf mov ljmp (bad) (bad) call mov mov cmp mov fldz test push dec dec pushf aad ficomp imul (bad) sbb adc inc inc sub shlb mov clc or mov clc ljmp rcrb dec int3 pop aas rcrb addr16 mov (bad) (bad) jmp loopne or test repnz mov inc idiv popa divl aaa or or les dec xchg sbb mov loope mov jnp repnz inc and (bad) pcmpgtb (bad) (bad) jg mov jb jl aad dec adc test enter sbb (bad) (bad) cmp stos adc adc outsb fsts out xchg mov subl jo dec cli faddl ljmp mull sahf mov cmp (bad) dec xor pop jno adc fwait cld pop push (bad) (bad) (bad) incl loope popa and out push call dec adc mov sarl popf out xor decl mov jle mov out push or cs push jnp pop mov pop push sar ret dec call adc (bad) (bad) (bad) decl test push or das sbb imul (bad) hlt iret stc (bad) push push mov hlt repnz arpl mov imul fwait arpl rcr fsubl adc popa pop pop mov adc adc sbb sahf xchg iret mov pop fldenv imul lcall xor pop ds decl movsb add jbe cmp aam stc cmp leave movsb leave test in (bad) (bad) incl mov (bad) push adc into je rcll jecxz adcl mov or jg cmpsb call idivl cld incl mov pop shrb jbe (bad) inc clc (bad) incl call pusha add insb lret xchg faddp fs mov ljmp mov xlat rolb sub gs push (bad) (bad) (bad) ljmp (bad) xor jnp push aam or jae sbb popf mov xchg sbb (bad) jmp jecxz fidivrl adcl xchg test mov movsl (bad) (bad) ljmp dec adc pop sub clc push dec out xor mov mov test jnp scas mov pushf outsb sbb popa movl pop push sahf sti sbb jne (bad) (bad) out ds nop sbb inc lock sub (bad) fldl push cli int3 xchg (bad) (bad) (bad) pushl jmp xchg mov cpuid inc dec xchg fisub xor aas xor out rcrb jmp pop subl jle xchg (bad) (bad) jg,pt mov jg gs shll mov pop in xor (bad) call sbb sbb sbb sbb or insl out add xor push dec jne dec sbb xchg inc jne (bad) (bad) (bad) (bad) in xchg add push add stos mov add inc icebp xlat loope xchg imul daa (bad) (bad) cmp pushl loopne adc lea dec push fsubrs jnp icebp sahf (bad) (bad) (bad) lcall pop sub fistpll mov jnp add mov nop or test jmp or (bad) (bad) (bad) lcall loop or out push aaa jae insl lea push loop loopne mov imul loope movsb push mov lcall add jg js sbb lcall int inc xor ljmp mov or je orl push (bad) decl jb xchg int jmp cmpl mov lahf xor shl mov pop lcall (bad) cmp pop (bad) pop (bad) (bad) (bad) lcall add arpl fwait xchg ror pop (bad) in lds add (bad) lcall xchg mov fistl jmp mov sbb push das int3 jg lods decl push pop adc pavgb mov mov aaa std dec stc lods mov push push hlt add (bad) inc dec cmp sbb and xchg movsb (bad) mov push sahf insb push es idiv mov xchg sub xor push sbb lcall sub hlt (bad) out inc roll sbb push sub inc cmp aaa push std je jnp xchg adc data16 push sarl (bad) jmp push mov (bad) stc dec jp inc xchg pop pop and call lods mov lea jnp pop inc cwtl dec pop es lcall incl subb xor cld call mov pop mov (bad) jmp sbb cmp mov xchg add fistl add or xor (bad) sub (bad) ljmp add xchg aad div mov sbb xor test jmp jp push mov sarl dec aaa adc xchg jbe mov fdiv pop xor sub out outsl arpl incl sbb aad add (bad) dec sbb pushw fwait jo adc aaa lcall out mov decb imul and ljmp xor (bad) (bad) or stos hlt (bad) scas mov dec pop mov pushl pop bound ret sti mov pop dec (bad) lock jg push push sbb mov out mov jno fstpt leave mov jo in les ljmp rcrl xor in lods scas sub arpl fiadd sbb or (bad) (bad) lcall lds (bad) fist xchg push int addl movsb xchg hlt lock (bad) pushl (bad) into imul out xor and pop pop out inc add clc (bad) mov mov mov outsl push ret xor je jge (bad) (bad) (bad) (bad) cmp push loope es sbb je xchg fildll inc mov leave mov (bad) (bad) (bad) push jns mov xchg outsb mull (bad) xor push or xchg sahf iret mov sar (bad) (bad) (bad) out aaa mull cwtl or dec popf mov fcomps pop rorb (bad) (bad) (bad) (bad) clc push mov int mov mov cli push mov scas ficoml (bad) (bad) call cmpsb inc frstor push pop js jnp adc mov fidiv xor clc dec push (bad) decl out (bad) jmp pop lea dec xchg pop cli (bad) (bad) pushl inc cmp and mov mov mov sub mov sub ljmp cmc xor adc mov sub jp fildl or daa cld (bad) (bad) pushl cmpsb flds pusha aam or and add idivb stos mov add (bad) (bad) dec mov leave mov mov push cmp aam xchg movsl lods and (bad) aam (bad) (bad) decl sub sub stos cmp subl movsl jecxz push arpl (bad) (bad) (bad) out xchg adcl aaa sbb clc push lock pop inc fisubrl and frstor aam and (bad) (bad) (bad) cmp or out sub insl arpl or pop popf or (bad) jmp xchg out xchg mov pop xchg cmpsl or push adc ja mov (bad) (bad) (bad) jg inc mov dec lret ja xor xor fidiv pushf xchg inc cli (bad) call je rcrb mov cmp inc jecxz aas clc sarb jmp ds lret dec stos loop (bad) mov scas bound mov fildl push (bad) and insb cmpsb repz hlt nop cmc lret hlt decl xchg dec sbb cs sbb mov mov (bad) (bad) (bad) pushl add or movl arpl cwtl aas adc sbb adc outsl adc mov (bad) fidiv adc bound push push add cmp sti (bad) icebp (bad) (bad) (bad) dec sbb dec fwait and stos or fwait stc (bad) loopne jo jmp cmc dec arpl ljmp cli add cltd cmp daa aas fnstsw add lcall mov add xor pop rcrb adc sbb icebp cmpsb fwait jmp jle test adc (bad) ljmp xchg repz or imul es mov mov outsb adc (bad) clc lret jne hlt pop and cwtl int3 es (bad) pushl fstpl daa xchg cmp mov push nop test dec xor (bad) mov outsl sti jnp push xor popa and mov dec (bad) call cltd adcl fs or orl lcall ds aad mov inc outsl fs mov mov incl inc daa sub push stc mov sub iret fild (bad) xor or or mov call sahf (bad) stc or in dec cltd out lock (bad) or (bad) (bad) ljmp mov or or fxtract sub out xor imul imul and repnz stc (bad) iret aam fs test xchg out push test xchg lahf (bad) (bad) (bad) jmp or imul push sbb into push js ret jmp add jmp repnz pop sbb outsl push movsb sub or lret daa mov outsl add mov (bad) jnp adc add sbb jbe pop gs test sub xchg or or (bad) (bad) (bad) lcall fldl and inc jne lret add push jecxz shrb aam enter (bad) (bad) incl xchg dec adc jl int3 push sbb add sub gs (bad) decl push clc repz mov test hlt mov (bad) jg jb cs jecxz mov stos cmpsb mov push lahf jne insb lock (bad) call mov push int3 or pop jnp dec lret or dec mov out push mov sub sub or (bad) mov and sub inc movsl mov out mov mov addr16 incl sbb icebp es jle xor add xchg mov clc mov arpl jns jmp dec pop jmp cmp sbb mov and jmp (bad) je cmp in in stos pop jge mov out mov (bad) (bad) lcall dec inc shll in arpl mov rorl xchg nop inc (bad) aam andl pop pop lret (bad) inc scas push pop (bad) jnp fdivrl out lock inc cltd test mov adc outsl cli jmp je cmp lea mov push inc cmp dec push daa mov (bad) (bad) jmp cld addl and add das mov xchg inc and lds mov (bad) lcall dec dec imul jle xor sub dec mov lahf loop cmp xchg clc pop mov and sbb jbe mov push in out mull (bad) (bad) incl mov shrb lahf out rclb inc sbb lcall mov add xor or push add mov adc mov pushw and fistpl adcl push adc dec das cli decl lock enter sbb or push dec xchg and pop xchg (bad) (bad) (bad) jg or mov mov mov mov lods cltd icebp jge add xchg push (bad) (bad) jg fwait mov jmp movsl add xchg addr16 ret pop data16 jp,pt (bad) lcall shl mov out lods rcll rclb (bad) decl decb ret stc je jns push divl sub xchg push push imul adc (bad) (bad) decl or and adc pop adc out or mov and fs push cmp call add xchg shr imul ret ljmp adc jo (bad) sbb and jno leave push arpl repz (bad) (bad) dec icebp out nop ss push nop jl imul (bad) xchg adc and dec and out jno test and xchg cmp jae mov (bad) incl dec ret and push jle test jmp out or js mov hlt out inc push loopne imul mov popf mov jecxz lods inc repnz stc add lret and das add dec das xchg (bad) (bad) jg xor push jne adc cmc mov xlat pusha test rorl sbb dec repz (bad) jmp scas sbb jp and sub inc add xchg pop push (bad) (bad) mov pop in adc mov faddl push hlt xchg (bad) mull or icebp outsl cmpsb mov or scas push jmp push je hlt xor ficompl sbb (bad) and add sahf es decl lret mov jp movb mov pop iret ret dec xor test pushl cltd movsl test (bad) mov adc jb mov and (bad) (bad) pushl mov push cmp mov addr16 hlt in movsl clc (bad) mov and mov (bad) (bad) (bad) incl (bad) sub jle cmp push inc lds testb push (bad) (bad) (bad) sti add cmp pop in cmp sub xor sarl cmp (bad) (bad) jg dec movsw adc inc shll xor push fnclex cwtl or add imul sbb xorb pushf jmp mov push xchg inc les das sar inc div loope adc jge sarl mov ljmp nop inc rcll movsb (bad) pop stc add andl aas adc into sub (bad) (bad) push pop outsb pusha pop push xor mov push (bad) jbe and out mov add imul test xor mov (bad) ljmp dec mov imul cmp xchg add xchg shrl outsb call mov pop xor or mov and (bad) jns jbe or xchg (bad) loopne fwait ja sub mov or lea cmp sub ljmp ficompl push (bad) bound mov dec rcr sbb (bad) (bad) jg movsb inc (bad) leave pushf shl mov mov inc sahf adc decl adc cwtl cltd and outsb hlt add das lret insb pop jb sub stos (bad) (bad) (bad) (bad) ljmp out push cmp push inc dec cmpsl jne aas je mov sbb es mov mov (bad) lcall lock lret dec push xchg stos sti (bad) fdivr (bad) ljmp (bad) out lock in push adc mov into aas aas mov xor sub (bad) (bad) inc sub stos xchg adc repnz fneni(8087 and (bad) addr16 imul sbbl (bad) call std stc movl xchg sbb sbb and das sahf jne push mov mov push out pop popa sub imul add cmp or adc scas mov cmpsb dec push inc je ljmp inc stos decl pop jns cmp xchg jmp inc mov loopne dec ret pusha (bad) (bad) (bad) lcall popf adc add push sbb xor out stc sub (bad) (bad) (bad) (bad) fisubl sahf insb push pop in pop dec mov insb jg mov mov dec inc inc adc movsb insl clc (bad) decl or shr loope mov popa es inc cmpsl (bad) (bad) call addr16 mov cmp add jg dec adc cmpsl insl idiv (bad) (bad) pushl mov push cmp add push inc call and shl mov insb cmpsb mov (bad) (bad) call popf and add das and out mov jne movsb sbb jecxz scas daa (bad) (bad) pushl dec adc or fstpt subl (bad) mov lahf repnz test pop in mov test (bad) decl mov loop pop dec pop shrb iret not negb mov xchg and ja (bad) cmp (bad) repz xchg (bad) in dec fwait (bad) xchg mov jp xchg cmc xchg fwait sub inc cmp movsl xchg cmp or icebp (bad) cmp fs lock lret (bad) nop test pop adc sbb lods xor (bad) incl mov mov xchg aad cli pop fimul xchg (bad) call sbbl mov fldt daa and inc das adc jg sub xchg fsubrl or (bad) (bad) jmp (bad) pop data16 jnp inc sub nop iret std inc lea ficom adc lahf (bad) lcall (bad) or ret mov and mov movsl cmp (bad) (bad) decl mov inc sti xchg out and outsl pushl or sbb lret pop nop aam repz (bad) inc sbb cmovle int3 jecxz aad mov sbb jns (bad) subb ja jns jge jle jg and mov mov stos xor mov gs outsl and je mov fcmovbe ds (bad) (bad) jg push (bad) pop xor xlat mov xchg (bad) xchg aaa (bad) sbbl inc xchg xchg iret (bad) (bad) (bad) call outsb pushf das xchg ror lret clc dec pop jmp sbbb sbbl sti push xchg (bad) (bad) call in int3 andl (bad) test lods add icebp push stos push pop dec cmpsl (bad) (bad) (bad) pushl xchg adc pop scas add fidivr outsl jo inc jne pop mov inc test xlat sub lock sti test fwait enter rorb out xor or sbb (bad) (bad) mov sar lods int test add test jge (bad) or add repnz xor mov adc xchg dec xor sub inc test jecxz inc addr16 jo or (bad) (bad) pushl je mov sbb or mov scas cmpsb sbb add xchg arpl sbb or movsb lcall nop lea icebp fild (bad) (bad) fbld test pop es push mov outsl (bad) adc xor cli jbe sub mov or insl (bad) (bad) mov fiaddl and xchg inc pop mov mov adc mov aam call cld (bad) fimull pop aam std dec cmp sbb jne push jle les incl out popf loope jp dec outsl or pop lcall or insl in push mov dec adc fdivrp (bad) (bad) decl pop imul or sbb jp or std cmp sti inc push cli pop int add and xorl into mov (bad) decl xlat adc add (bad) mov out mov add jecxz add insb mov and mov (bad) (bad) incl mov xor sub jb (bad) or mov lcall jg xchg jnp jmp nop adc cmp pop xor out mov pop hlt das jp xchg lods mov incl add iret stc mov cltd (bad) (bad) (bad) call cmpsl sub dec mov scas jb ljmp jg addl icebp cmp (bad) (bad) cmp or sbb (bad) mov mov or pop ljmp addr16 pop imul xchg jg mov fcos jg test dec push adc hlt xor ja (bad) (bad) call push into xor sbb (bad) pop enter fistpl sbb pop fsubrl lahf cwtl mov rorl adc xor mov add mov gs (bad) (bad) incl loope cmp js push fisttp cltd pusha hlt jno inc shll add or (bad) (bad) (bad) lcall xor sbb push mov test repnz dec or mov jnp jle dec mov (bad) (bad) incl dec int3 ja xor ljmp test sarl bound inc push iret cmc push mov and jne mov sub inc fsubr es paddw dec xchg mov xchg mov out inc lahf sub test cs adc ret sar test and or push adc insb mov mov adc mov (bad) (bad) jp sbb xchg push dec arpl cld inc mov das cli bound cmc sub cmpsb incl pop clc cwtl lret jecxz repz imul int enter fs push push cmp dec in (bad) stc stos sub aaa sub mov test aam fcomip sub aaa mov out jg,pt pop sarl push scas mov (bad) pushl ds (bad) sbb cmp inc clc mov mov inc scas pushl loopne adc (bad) push lret dec sbb pop xor sbb test aas mov mov push lods fwait cmp pop xor (bad) xlat ret push xor dec insb cmpsb (bad) (bad) mov mov fcomi aaa jae jle out xchg fcmovu std or push aam mov imul mov (bad) call cmc or cmp jmp push das xor daa pop or popa pop mov mov cmc (bad) (bad) decl xor mov stos push into jecxz jp stos add test (bad) (bad) lcall popf rorl lods sahf add test rorl add inc xchg push rcrl dec mov repnz (bad) (bad) (bad) (bad) jg outsl call and (bad) popf out outsb (bad) stos loope sub sbb out pop lret insb (bad) (bad) (bad) ljmp lea push cmp adc pop (bad) cs lret xchg fistpll repz es (bad) mov jo mov dec jb xchg lret mov daa push rclb incl ljmp ja or sahf decl ds jo sti sub mov (bad) jmp (bad) jae adc adcb dec push mov mov (bad) (bad) incl sarb mov pushf adc scas sbb insl (bad) add pushf leave out pop loopne (bad) fisubl xor push pushf loop push pushf add into push add (bad) cmpsb push test movsb pop inc jne sub push shrl (bad) ljmp in dec or fisttpl jle faddl xchg lock jl sbb pusha (bad) (bad) (bad) dec fwait loope or xor (bad) neg mov add repz cltd scas outsl fmuls hlt jno cmp and fsubrl jmp sbb and (bad) (bad) jg push mov push cmc xor xor test enter jle lock (bad) (bad) mov inc pop (bad) xor sbb dec pop test or cmp test push dec pushf (bad) (bad) out mov pop nop enter sbb arpl (bad) mov ds push aam daa sub (bad) (bad) ljmp push pop cmp xor in cmp aaa test push pop iret inc aad (bad) enter (bad) decl dec mov jns data16 jo in or add sbb cwtl or add cmp sub in dec cmp jg sbb (bad) push mov rorb cmp lds vmovntdq loop adc adc cmp inc cmp (bad) (bad) (bad) (bad) decl jbe imul cmpsb mov cmp xchg insl cmp rolb cmp (bad) mov sub ss push mov pop jge (bad) xor pop jo (bad) (bad) (bad) call stc aad and lret xorl (bad) out pop add scas mov dec lahf hlt (bad) (bad) (bad) call shrl imul pop adc xor out dec sbb inc fisubr hlt xlat popf ljmp cmp pop ja mov popa sbb adcb (bad) (bad) jmp mov xchg push rolb mov push scas aas loop (bad) inc push or jae cmp enter sti jo scas cld call jg and jne stc hlt cmp push inc fistl call pop insl add sub fstpt out jne and dec push (bad) (bad) (bad) push pop repz push and mov push iret es sbb adc notb cwtl (bad) repz pop (bad) mov ljmp (bad) ljmp push mov push pusha mov adc sbb push ss cltd clc (bad) (bad) fbstp popa mov push cmp frstor cld daa popa xor ljmp inc adc out pushf push int3 cmp cmc ja cmpsb and ljmp lock (bad) pop jge mov cmp jl cld inc push push add xchg in out jo sar (bad) lcall push sub mov pop xor push sbb (bad) insb mov lahf or xor (bad) (bad) (bad) jmp dec jg mov lods or xchg dec mov dec and lret fcmove (bad) (bad) (bad) (bad) out or xor dec testb punpckldq mov mov hlt inc repz movsb dec sar (bad) call jno inc push pop mov popa mov pop loope test repnz fnop insl (bad) (bad) jg jbe and xor enter lret sbb cltd mov cmpsb push out cmpsb mov (bad) mov imul and popf icebp out icebp push inc sbb mov jge int popa add add mov mov xchg addr16 mov hlt mov fdivrs (bad) mov (bad) (bad) cs jle adc add inc fwait aam mov fwait (bad) (bad) (bad) decl int3 decl sub jmp popf andl fist (bad) cmc lret add (bad) cld xchg pop repnz int sahf xor (bad) (bad) jmp aas mov inc jb dec mov mov push add in icebp test add outsb inc mov insl inc mov mov mov data16 mov ret aam pop cmp jle sahf jle out gs xchg fmuls loop push xchg push xor int lods (bad) dec adcl adc icebp push cmpsl out in ds (bad) jg mov jp movsb lods std stc stos pop loope ror dec sub (bad) (bad) (bad) decl clc xchg jo cwtl rorb cmpsb nop lock xchg int in (bad) clc mov lods cmp ret (bad) jmp push adc cltd cmpl adc jb (bad) imul movsb inc jecxz std (bad) incl or incb pushl dec xor test push fs (bad) (bad) call sbb imul xlat cmpsl mov cmp mov repz movsl jne clc (bad) (bad) (bad) decl sarb push out into sbb ds cmpsb sub xor incl inc mov aas jns es aad int3 fcomp rolb in push mov lcall mov ss test stos push outsb aad es sbb in xchg jg pop add ror and call or int cmp imul xorl (bad) (bad) ljmp push cmp lods call outsb imul lahf and das sti mov cs push (bad) (bad) (bad) aas dec xchg cmp stc push js (bad) (bad) jmp out sub xlat mull dec ja stos clc les (bad) in dec (bad) mov (bad) (bad) ljmp jo cld popf xor sub add mov orl je jne cmp cmp cmpsl jl dec mov push adc pop push aam xor (bad) jmp lret js jbe sbb mov icebp push cmp daa pusha cmp fiaddl pushl (bad) (bad) std cwtl (bad) xor pop int3 inc add push imul add ret lret mov mov decl jp sbb push icebp jae sti sbb add mov decl icebp xorl (bad) cmp lea incl (bad) mov dec inc scas lock cmpsl pop lea inc das ret mov cmc cmpsb es push and (bad) call imul adc adc and scas add cld (bad) lods out xchg xor push sub jmp xchg inc cld arpl sub (bad) jle pop add (bad) call test push jl dec push ss call gs (bad) cmp push mov popl mov add or adc pop out in fstpt (bad) inc push dec icebp push js xchg xchg pop mov test jmp mov mov leave js inc mov (bad) decl dec js mov adc in js aam daa mov mov (bad) fist cmp enter ljmp mov out dec and mov (bad) (bad) jg fwait stos sbb outsb scas fwait mov cli sbb cs rcll inc cmpsb scas xchg test ds and adc in loop xchg pushaw les (bad) icebp mov iret (bad) dec add out push scas xchg pusha sti roll mov loop call fs cwtl inc int3 dec inc adc and mov lahf xchg std (bad) (bad) call (bad) lret mov lahf xor es mov arpl xor ljmp push pop and fidivl aad lahf jl ljmp pop (bad) mov dec pop icebp fwait sub (bad) (bad) incl or mov sub fxch push fs (bad) clc add sbb cmp (bad) (bad) (bad) (bad) sti xchg or stc out (bad) int daa jae sti or subl sbb sar scas test in insb push das loope xor test (bad) (bad) jmp inc nop mov xchg xchg notl or xor (bad) xor sub (bad) (bad) decl add adc mov mov xchg adc dec mov pop mov test repz rol out (bad) mov rcr adc xchg call jp jg mov (bad) aad adc enter bound adc xchg pushl loop addr16 jb push and add adc cmp fs (bad) (bad) push aaa inc ds lock pusha jl stos and rcll in push add mov (bad) (bad) pushl jae cli dec aaa std mov or push adc or jne mov into push (bad) lcall pop scas push xchg movsl or sub xchg push dec push cli rorl xchg cmovae mov dec vmovq jmp adc sbb jle add jmp fstps fs ret inc mov arpl ljmp mov jg,pt loope xchg and xchg das pop ret or stc orl fldenv sbb loopne jmp rcr push dec scas inc push (bad) mov jb fadds jbe insl mov orb xchg mov fbstp push and test xor jmp scas lret add xlat cltd pop mov std fistp mov dec cltd pop in cmpsl rol (bad) (bad) inc test mov cld call pop mov pop int stos ficomp pushf (bad) (bad) mov std jecxz ret sahf dec adcl push lock out insb (bad) (bad) (bad) (bad) cmp xlat popf push jb add ficoml push out cmc lret cmp test (bad) call dec xchg scas adc icebp subb sbb sub (bad) (bad) (bad) ljmp cmpsl mov insl xor jmp loope mov fsubl mov (bad) (bad) mov leave lock shl ret mov nop sbb (bad) ljmp cmp xlat push inc fst xor lock mov movsb ja lods (bad) (bad) decl cs mov test repnz js push xor push rorl pop jno call cld cmp pop inc stos xor pop sub push and inc bound xor std push ljmp or sti (bad) jno stos jmp mov sub push icebp mov leave add sbb repnz add mov jnp mov (bad) ljmp rclb adc add imul icebp enter inc outsl es loope sub push mov (bad) decl push jne mov rclb adc arpl xor (bad) ljmp push xchg jno jnp clc sub lret ja dec call scas xor stc (bad) (bad) (bad) call add movsl (bad) sti xchg pop loope,pn mov mov cs call mov cli movsl and es mov imul (bad) push or jl imul dec pop fisubl mov sub fisttpll lcall loopne fild (bad) fndisi(8087 push imul dec cwtl jbe xchg or mov xlat mov (bad) cmp or mov xchg test sbb je mov adc in xchg jl sub in in (bad) (bad) jmp and inc mov jge push dec fldt loope add mov repnz aaa cld push cmpsl sbb out bound push mov inc dec and or push (bad) (bad) (bad) call xlat add loop (bad) mov cmp add mov mov jno (bad) (bad) (bad) lcall ficompl sbb cmp push mov bound mov in jge or aam mov adc (bad) (bad) decl fstpt mov adc shlb das jle mov mov xor ljmp pop pusha sbb add mov adc cmc push xor or mov (bad) (bad) (bad) ljmp mov fiadd sahf sub cmpl pushf cmp adc jle inc add pop mov adc sti clc mov inc pusha lcall scas (bad) (bad) incl xchg sub mov xchg test (bad) (bad) (bad) incl add dec pop or clc lcall xchg shrl movsb dec dec (bad) (bad) lcall and insl cwtl inc jbe out cmp lahf mov or mov xor (bad) (bad) (bad) cmp mov pop in mov leave fs leave inc xor jns into sarb pop out lods cmp pop adc sub inc test (bad) (bad) (bad) fldenv push mov jge sbb (bad) les cli gs out cs or lea das mov mov incw mov xlat and inc arpl (bad) (bad) jmp dec paddusb jne lret xor inc lods and lods loope inc mov out lds adc adc adc or (bad) lea ficom fcom mov sub add lock jbe mov dec insl xor mov cld (bad) jecxz sub (bad) ljmp xor push xlat imul es pop psubusb enter outsb adc aas rcrl mov outsl adc mov mov jp jne pop fidiv mov (bad) (bad) (bad) incl sbb fcompl mov push imul (bad) fstl pop inc mov (bad) (bad) lcall sbb xchg xor pop mov aas inc mov repnz pop xor daa sub loop fsub es cs test mov lock incl pushf (bad) movsl je popa loopne (bad) clc loop mov dec mov cld sbb ja (bad) (bad) (bad) ljmp jae jne jl icebp sbb (bad) data16 bound inc adc and (bad) (bad) call pop shll mov jae ret mov int push pop aaa sti in fisubr pop (bad) (bad) cmp mov dec in insl lret out pop jecxz (bad) ljmp sub fsubl push mov push push outsb push adcl pop mov (bad) push inc add (bad) and or test loope inc (bad) (bad) (bad) call lock ret xor fisttp test mov imul imul decl popa not mov aam mov and gs (bad) (bad) (bad) (bad) fwait mov data16 leave dec xor aas xor jbe push add pop int3 testb (bad) mov inc sub mov cmpsl xor and mov (bad) (bad) (bad) incl sub jl dec out and dec pop adc subl add (bad) lcall adc scas jg data16 xchg jle sbb add das cmp cld add xchg fidivrl lods (bad) (bad) decl in xchg jge sub inc pusha pop shl dec dec adc iret ror cltd xchg inc (bad) cmp or sub cmpb xchg clc enter mov std (bad) mov mov xor xlat push and (bad) call inc mov test in mov ror repnz lret sbb cmp stos dec add aas jne (bad) mov mov repnz jnp pop inc inc mov mov icebp loopne ds testb das mov sar call mov push and and movsb pop push imul jno (bad) ljmp push out jo xchg aad adc rcrl adc jbe jmp jnp inc push (bad) (bad) (bad) (bad) stc ss pop (bad) xor mov jecxz std mov imull mov pop std pushl lret and cld xchg jmp mov (bad) (bad) jmp lret push jae daa add mov outsl jae fstpt daa jle in mov mov (bad) sbb (bad) (bad) (bad) xchg repnz int3 mov sbb mov (bad) decl (bad) sbb xor in rclb xor dec sub mov add mov (bad) (bad) ljmp pop ret sub push cltd or lea jp (bad) mov jmp push dec int3 je decb xchg fdivrl ret (bad) (bad) (bad) js pop pop push (bad) sbb movsb jl push inc and sbb imul (bad) (bad) fbstp add jl and jae mov fsts jg incb sarl movsl push (bad) pop jb jbe xor sbbb dec test mov (bad) pop push lret push cld dec rcrb sbb (bad) push add imul (bad) lcall clc jp popf in pop push cmp adc test or cmc sub jns adc push imul decl or out or and in (bad) xchg das mov push pop sti sub sbb dec adc mov mov sti (bad) decl jmp pop fnstsw jb push sbb mov cltd insl dec add and imul mov ljmp xlat sub ret and pop jcxz or inc cli inc push rcll in dec hlt mov sti int3 scas xor test movsbl js imul sub dec in xor cmp add std (bad) inc add repnz xchg fwait xchg inc push (bad) pop out int3 sbbl fwait mov mov inc mov (bad) (bad) ljmp adc lock je or hlt (bad) out pop adc cwtl dec les jmp movsb fild incl cs aas jl adc push inc sar (bad) lcall pop xchg out icebp push stos mov in xor scas add sbb or loop jle adc shrb (bad) (bad) call inc popf pushf mov clc stos pop fcmovnbe out cmp cltd stos jbe popf push out (bad) (bad) ljmp inc xchg xchg mov mov add add (bad) push push or xchg jo mov mov out sbb addr16 adc (bad) (bad) push leave jecxz pop xchg ret xchg into fucomip test test pop into scas jbe lret (bad) (bad) (bad) (bad) icebp dec xor int3 int3 pop mov jmp ficomp fdivs sub bound (bad) jns in (bad) xchg imul pop add ret mov mov jg pop hlt out pop xor (bad) (bad) (bad) (bad) cmp fcmove mov push mov mov (bad) movsb xchg sbb and jo test je jo rcll sbb decl inc sbb ds jae (bad) (bad) push (bad) mov or (bad) xchg jae inc push mov insl mov inc cltd ficom lahf out (bad) pop pop mov stc (bad) cltd adc and mov dec pop (bad) testb jae jae lea sbbb mov aad jne (bad) sbb and sub mov in sub cmp (bad) cmc xorl (bad) pushl imul clc repnz scas fcomps fndisi(8087 popa push xchg or lock stc sub and push insl mov pushl stos mov xor xor sub inc sbb fwait pop or mov add (bad) (bad) jmp mov push stc xchg ds push mov icebp or push (bad) (bad) mov loopne dec jecxz mov jle mov fadds push (bad) push bound mov mov push in mov mov push add and sbb je lret cmp mov or pop hlt call push shr cli mov push add and sub loope mov lret std pushf insl pop pop xchg sub lea mov inc insl pushf sahf fsts (bad) (bad) jmp in pop pop ror fwait pop push int fs push jb in hlt fwait and stos insb not test pop pop shrl clc movsb push jecxz rcrb rorl (bad) (bad) jp imul adcl and data16 lret pop mov (bad) (bad) in mul jno icebp (bad) scas pop sbb and cmp sub lcall adc int3 imul in call adc ljmp scas loope data16 pusha or dec jns call (bad) sub jg incb inc jns jbe inc loopne mov (bad) xlat xlat sti adc (bad) incl push jecxz push push or (bad) (bad) (bad) fistpll adc subl dec stc add mov mov (bad) imul mov (bad) (bad) jmp push rclb jne push lods icebp fimull lcall int mov incl pusha inc sbb sub sub push jmp pop pop dec addr16 (bad) mov sub int3 hlt xchg mov fs or into movsb cmc mov mov mov nop mov dec jae,pt sti fildll ljmp mov loopne jno dec cmp push pop lret (bad) call pop cs iret ja shll xor xor std cmp mov (bad) incl les dec shlb cmpsb sahf scas or in mov push push (bad) jmp adc dec pop clc jg sub mov icebp (bad) (bad) pushl out fs test mov orb out cmc popa rcl xchg dec movsl ret (bad) jmp pop lods sub xchg lcall jnp (bad) (bad) (bad) jg enter (bad) aaa and mov push insb cltd jmp sbb test push lock (bad) ljmp mov incl lds int loop aad repnz (bad) (bad) (bad) call push std jns das lret or cmp jb push or xchg pop (bad) (bad) (bad) push test (bad) shrl cmp (bad) cmp inc out rcrb lea (bad) pushl stos sbb mov jb cmp jg mov sbb pop popf mov or (bad) decl mov insl push mov xchg xchg and daa xorb mov (bad) lcall or rol cmp sub push mov dec (bad) (bad) call fidivr aam sbbb rcr lea sbb cmpsb mov movsb (bad) pushl insb out xor pop push ficoml dec lds ljmp aaa push mov sbb loop jne pop stos jnp fdivrs or movl mov (bad) pushl ret dec gs xor (bad) hlt mov js push mov popf mov mov sub dec jg daa andl rolb gs (bad) jl cs (bad) (bad) (bad) lcall jb xor fwait sub (bad) cmp movsb imul mov inc mov loop dec xor (bad) (bad) ljmp sbb cmp jg sbb dec add pop xor imul ret (bad) lcall sub (bad) lea xchg mov lret bound or (bad) jg pushl fs sbb inc fmuls mov and das in and push je mov cmp (bad) ljmp pop lahf sub (bad) or dec nop push inc jge xchg lock cmp push cmp (bad) cmp xor bound jmp cmp out pop in imul pop sub ljmp incl movsb rorl (bad) in jnp loopne mul loope (bad) fcomip mov xchg sub inc mov in popa in and pop (bad) jle jp insb stos imull ret adc (bad) (bad) inc push mov test js ljmp cmp push push pop xchg xor (bad) (bad) (bad) call push sbb sbb sub adc lcall ljmp (bad) (bad) decl push dec jl and jge fistpll add int pusha dec fwait out sarb lret fdivrp (bad) (bad) ljmp cmp into out jne sub sbb jl (bad) or sbb xchg inc leave shlb sbb ss imul add lods ljmp mov dec fnstenv fisubr mov cmpl inc sub je (bad) (bad) (bad) cli test loop sub repz (bad) aam inc inc fwait mov dec adc pop stos repz (bad) (bad) (bad) jp jmp mov mov mov lea push fsubrl das movsl mov subl (bad) cmp bound bnd cmpsb adc (bad) pushl xlat or fsts stc mov les add rcll sbb lcall xorl adc ljmp das out adc shrl jno (bad) (bad) (bad) fcoml dec test cmc cmpsl movsb pusha push and jge push mov pop adc imul pushf sub pusha sub dec jnp inc push test (bad) (bad) ljmp in popa xor in repnz mov xor hlt xchg popa lods xchg lods outsl mov (bad) (bad) lcall jae imul xchg or fucomi into pop mov (bad) pushf inc (bad) jmp aas and outsb divl ret cmpsb insb leave push ret jl aam scas hlt jle xchg or inc sbb xchg ljmp pop mov rcrb pushf or jmp mov shll in popf stos enter (bad) mov jne push mov push (bad) incl popf adcl out mov pop fdivp into (bad) (bad) lcall lret je (bad) or or mov lcall (bad) (bad) jmp push ds test adc xchg pop jo out mov incb (bad) and shll mov insb cmc lods add fucomp in pop mov (bad) mov push lods mov dec aaa cld (bad) push mov add lcall cmp lret dec or mov (bad) lcall imul icebp sbb mov (bad) (bad) (bad) jg iret imulb or int and je fsubl mov sub (bad) (bad) (bad) (bad) jl mov and rcll sahf adc rcrl xor loope in (bad) (bad) jmp out test lret jge enter jge push aad icebp inc jnp sub adc lcall mov scas cmp fistl mov push into mov (bad) lcall push pop mov rcrl (bad) push rcr push xor (bad) out fdivrp mov bnd pop mov add ja pushf lcall pushl test stc and scas cltd leave aam mov push dec adc mov cmpb lcall loope ds or enter pop push cmpsb push cmpsb test clc jg dec stc xor pop jge pop jb (bad) jmp xchg adc (bad) (bad) jmp cmc outsl notl das loope pop arpl fbld push dec pop cmp (bad) call je,pt sub mov jp jae fmulp das icebp (bad) stc sbb push (bad) pop adc sarl pop mov sbb ds dec cmp xchg aad bound in jmp call jg decl jecxz mov dec mov push aam sarb mov loop (bad) (bad) pushl pop pop into mov pop lcall (bad) xor notb lods push fadds jae std (bad) (bad) jmp ret stc clc enter mov test rol xor xor gs repz (bad) pushl cmp out push mov gs inc (bad) cmp int3 pop mov out xchg (bad) (bad) (bad) jg insb inc xor dec dec movsb jo ret push test sub addr16 cmp or inc je lock push jae mov push push xor insb sub ss dec mov hlt and (bad) xor or (bad) mov fsub jmp fdivrs cmp lret mulps rolb mov mov dec lods xorl mov dec (bad) (bad) (bad) pushl popf mov mov xor xor cmp mov cli (bad) in mov in mov sub orl (bad) (bad) jg decb jle int ljmp mov pusha call sbb jp push inc cli jmp leave insb adc in fsubrl (bad) hlt pop pop ds (bad) (bad) decl bound jb andb mov popf aas cmpsl ss movsl test orb xor idiv (bad) (bad) call mov test dec std mov out jbe (bad) and mov inc adcl xor wrmsr (bad) (bad) (bad) pushl adc iret xchg mov inc adc mov in mov cmp ds mov test lds push (bad) (bad) mov stc int3 lds gs fcoml lahf stos psubd pop mov adc (bad) (bad) decl and ret dec andl movsl xor inc stos inc call fcmovbe in mov cmpb adcl mov pop dec mov adc jl sbb enter les push xchg (bad) (bad) decl pop imul lock fadds shrl cmp decl aam movsbl add clc je xchg ret rolb (bad) iret push cmp (bad) adc mov loop (bad) adc mov inc lock (bad) lcall xor call movsb mov fisttpl lods cltd sub xor add ret pop xchg outsl out aas xchg jo lea push popf xchg xchg and fs adc sbb fwait insb dec push sahf lret test pop (bad) (bad) (bad) lcall shrb inc gs pop add jbe in repnz push mov jl dec mov pushl scas lods pop dec mov stc jbe xchg pushf and mov hlt xor (bad) (bad) (bad) (bad) jbe rcrl add or test (bad) xor or push jl (bad) out pop mov push test lods mov sbb xchg clc mov dec and orl xor mov (bad) (bad) jmp cmp cmc std inc xchg out jle push outsl (bad) stc xor and or (bad) (bad) decl mov daa sbb jmp into xchg int sbb cmpsl movsb pmullw pop add shl (bad) (bad) (bad) jmp shrl inc in ret scas or cwtl ret leave shll pushl mov mov into adc jae imul inc (bad) idivl (bad) (bad) aas int3 cmp xchg jmp sbb mov jp mov push xor pop pop cli jg ljmp fwait rcr xor stc popa iret mov scas mov jbe push mov lock cmpsl dec add imul mov ret movsl push jne jb (bad) dec movsb mov add lea xor (bad) (bad) dec pushf in imul xlat xor dec fcoml mov xor (bad) fnstsw movsb das xor jo call push sbb out (bad) (bad) inc outsl dec pop mov clc fwait jmp cwtl outsl (bad) jae cmp push mov xchg (bad) (bad) pushl enter xor xchg mov fildl mov testl xchg and pushf (bad) (bad) (bad) ljmp scas jmp inc mov dec in push lods mov mov jg sub pop mov fwait (bad) inc cli adc jmp out jg ss mov mov sbb dec int3 fs mov (bad) (bad) (bad) jp cmc mul jne fdivrs iret test xor add (bad) rcrb add push aam add je call outsl dec jno sbb jnp cwtl js xorb jmp out aad das (bad) mov cld (bad) (bad) fild and aam (bad) stc (bad) jge in fbld xchg cmp loope cmp xchg mov mul and popf (bad) jno sbb sar jg cmp addr16 sub pop adc pop cmp ja or popf xchg cmp mov je in js dec test pushf adc jno (bad) (bad) (bad) (bad) aam xlat dec sti repnz sbb and xchg popa and outsl sub add xchg add add sbb pop mov icebp decl shlb add cmpsl jge cld insb pop loope add popf cmp mov call aas adc outsl imul xchg jno and or xchg mov insb xchg push (bad) (bad) (bad) jmp (bad) and sub aad lahf repnz fwait sbb arpl sbb (bad) pushl mov mov mov outsl (bad) cmp push movsb pop mov out adc pop and inc scas call fcompl in mov xchg xor (bad) ljmp (bad) movsb fwait add add inc cmp xchg icebp clc addb lds hlt (bad) lcall js rolb in xchg addr16 jle xchg (bad) xchg cli xor and jle and jp (bad) outsl pop into in cmp lret xchg jae imulb mov adc mov ds (bad) (bad) call cmp jle xchg outsl popf mov dec insl cmp dec icebp insb (bad) into xchg dec inc (bad) lods cs cld (bad) (bad) pushl mov mov nop ds arpl fisubl sub adc mov (bad) jg aaa je dec jo dec dec (bad) pushf mov xchg (bad) lcall (bad) rorb xchg dec call movb lcall mov add push popa add insl aas mov xor je gs (bad) (bad) jg ds dec js sbb scas mov push pop pop cs adc loop jl ljmp mov push les imul lock decl and inc das mov pop pop ret pop and adc movsl sahf mov (bad) (bad) ljmp xor test scas mov push data16 lcall xor (bad) (bad) ljmp (bad) mov (bad) xor pop cmpb sub popf ror jp (bad) (bad) (bad) jmp movb or je sub push mov or shlb mov (bad) (bad) (bad) jmp out push rorb and cld and inc loope test jmp xchg xchg xchg clc dec mov sbb mov mov adcl cli jmp sahf lods (bad) cli xor insl pop ds dec stos movb dec mov add and inc (bad) push test mov pop jnp (bad) fisttp lea fwait sbb and idiv (bad) lcall scas or xchg cmp les imul push popa push xchg ficom (bad) (bad) (bad) lcall in into xchg lret or sub mov insb ja pop adc ds mul (bad) (bad) (bad) call loope cmp fdivrl std rcl aas pop or imul sub adc push mov rol xor adc addr16 (bad) mov push pop nop lods pop mov and adc cmp lret (bad) jg add out fs xor adc (bad) (bad) dec push sub xor scas divb repz or or incb xor call (bad) jecxz mov add ljmp lods fiadd cld push mov ja scas or ds jp jg dec cld cmp sahf or inc mov push insb dec pop add ljmp mov mov (bad) pushl adc lods dec dec sbb (bad) mov mov dec mov fadds incl cmp xchg das pushw mov xchg fwait mov aad push dec cmp (bad) (bad) push ja xchg loopne lcall scas jp pop lea push sbb cmpsl sub pop loopne and (bad) lcall imul (bad) lcall push adc fsubrp in (bad) (bad) mov fs pop push mov adc (bad) popa loopne (bad) int3 lock out cmc mov (bad) (bad) cmp loope sbb mov push adc adc mov mov mov jmp loopne mov out push mov or ljmp (bad) (bad) mov lea inc inc in pop xchg cmp js or jne lahf mov in mov (bad) call imul push inc push sti xchg (bad) (bad) call mov cmp sbb lock out jmp xor adc (bad) (bad) lcall mov je pop (bad) dec fisttpl into addr16 jecxz ss dec mov in dec arpl inc fs nop fnstsw insb xchg mov jbe push push push pop into nop lea xor push (bad) (bad) (bad) decl xchg pop inc jmp je mov (bad) repz mov push cmp pop jle (bad) js (bad) (bad) fcomip cli sti cmp dec rep inc jp in cmpsb stc stc sar inc scas icebp out sbb (bad) pushl mov and out in mov aad sub jbe pop pop push insl xor push mov stos (bad) (bad) decl aam ret jnp ret cmpsb sbb inc ja adc fsubs jg mov pop mov jle push cmpsl shrb test pushl push (bad) adc pop pop adc cmp fdivrp push adc test shrb adc (bad) incl cmp test sbb scas mov hlt decl fbld aad push lock pop add mov fistl js xor dec push stos aas aas jb sbb insb add pop loopne ds xchg sarl fnstcw js jle cltd push stc mov (bad) lcall mov (bad) xor pushf les inc and mov inc mov (bad) incl sbb pushw stos (bad) xchg out cltd push xor jnp incl incl out scas adc push cmpsb sub bound mov dec mov or (bad) (bad) inc mov mov dec pop ja lret (bad) fcmovu in in mov in cmp (bad) pushl jne fdivrs pop (bad) mov pop cli mov add lret xor (bad) call push pop push pusha jns fsts out out dec mov (bad) (bad) (bad) push mov stos push or lahf stos push lods movsl leave mov lods sbbl js mov andb mov ss inc push stos push fldl dec inc (bad) incl ds adc mov inc mov push jae mov loopne scas fmuls enter push aam incl and stc jbe int3 jo mov in pop sub and (bad) ljmp inc push mov hlt lock bound mov iret (bad) (bad) lcall out loop pop stos dec dec (bad) cmp cwtl xchg or or test push mov (bad) (bad) incl gs sub test pop mov aas stos pop mov test fcomi (bad) test mov (bad) decl bswap inc pop cmp aam mov (bad) (bad) ljmp push scas lcall fsub dec in daa pop pop xor push pusha mov push (bad) mov icebp sahf dec lea minps mov mov push lcall dec xor and insb out out inc insb out add decl sti sub lret jb cmp mov ret mov sub mov fstpt push ds cmp pusha mov sahf and (bad) (bad) (bad) fidivrl push inc popf inc outsb or mov xchg div jecxz (bad) incl mov xor jp pop sub test cmp cmpsb iret mov xchg add lock and nop inc (bad) (bad) (bad) incl add push popf xchg adc mov push push push mov add mov (bad) (bad) (bad) clc sbb loop mov (bad) sub adc sub mov mov orl pushl loope pop jecxz jns mov rol fs jb xchg pop movsl fcomps push js (bad) and test and xchg ja rcrb mov (bad) (bad) dec mov addr16 cmp mov clc push lods lock mov call sahf fcomi inc test std shrl jbe cmpsl and jno (bad) (bad) jmp push cmpsb mov fstps leave in cs (bad) mov push jle (bad) (bad) ljmp sub add loope cmp movsb mov cltd ret test cmp outsl cli jmp push mov rcr lds adc lcall adc adc jns sub mov or push ret decl fistpll in push es mov pop push adc lock stos mov mov fcomip mov push adc js fnsave adc (bad) fmulp pop dec mov add mov fwait cmp scas xor and daa add mov mov inc and fcmovb jnp iret cmp (bad) (bad) (bad) jmp jg movsb fdivr ljmp pop dec ficoml ljmp andl (bad) (bad) inc jmp xchg pop add or (bad) aas sbb push push test mov aam (bad) (bad) (bad) incl clc pop mov push test clc xor adc lods mov js mov cld (bad) mov pop sbb push fidivl adc loop (bad) jg sub enter pushf mov jns ljmp (bad) (bad) (bad) aas das inc ds insl push aas push pop and sbb icebp push adc pop jne or das xchg jo cmp xor hlt icebp (bad) (bad) (bad) jle push fs jle icebp and pop jae ja mov stc incl inc enter jg scas pop aam out into jl cli add andb cwtl subb (bad) (bad) jmp xor fsubrs mov out push fcompl pushf cmc out mov (bad) pushl adcb sbb mov add mov adc (bad) lcall adc push add xor cmp (bad) pushl outsl xor cmp xchg mov push test dec cmp mov sbb (bad) (bad) (bad) ljmp pop rcr mov shlb xchg inc insb and fcomip mov mov sub stc mov repnz xlat cli pop push or int3 xchg pop mov mov pop in mov adc movsl das clc outsl ror out bound pushf (bad) shr dec dec pop fwait imul outsl ss out sar into mov mov stos ret aas sub pushl jecxz arpl cmp jmp sahf jnp push cltd mov (bad) mov and lahf clc icebp out imul leave cli (bad) mov cmp (bad) pop loop ret (bad) sbb xchg push mov (bad) (bad) (bad) lcall rcr fs sarb imul dec add push xchg adc iret mov push xor jmp pop sub subl mov shlb decl cmpsl lret xor aas sbbl (bad) jg pop dec cmp icebp xchg push push sbb into inc push nop popf cmp push sar (bad) jmp lret sub loope push push xor pop jb jno (bad) call lcall jecxz fwait in mov mov push mov and xchg adc xlat push (bad) pusha (bad) gs lcall imul int (bad) (bad) (bad) call and sti mov mov addr16 xchg test lock sahf (bad) mov adc fadds inc out insb shl lret jmp (bad) (bad) (bad) jmp sub es fiadd add out jno jecxz lea std jb stc into or (bad) (bad) (bad) call mov xchg rcl cmc xchg jle jb xor push xchg pusha lret (bad) lcall push subb std in cmp outsl mov mov int cwtl or ja (bad) jmp punpckhwd loop inc mov jnp xor icebp push fimull (bad) decl pusha in inc mov lret jnp add push inc bound lcall and int jmp mov in mov stos push insb lds jmp repz sbb incl cmp ret loopne jb daa lods icebp xchg lcall test outsb jmp add bound (bad) (bad) lcall repnz outsl pop mov das add and jge call push ja ds push test fbld xor jge sbb push mov iret (bad) pushl push mov pop inc dec aam mov sarb sbb das clc (bad) lcall insl sbb fsts daa test mov (bad) (bad) (bad) call lcall ret out xchg sbb push adc cmpsb sub scas or add dec and mul loopne in fwait ds out in adc (bad) ljmp jl loop movsl adc shll dec mov inc mov (bad) (bad) (bad) mov stos mov or imul in pop lret jbe pop xchg xchg das pop xor out cli incl pop cmp pinsrw add lods stos xchg loop lcall jbe,pt fcomip lcall xchg (bad) mov lods icebp pop repz xor int sbb (bad) (bad) jg mov in cltd mov pop sub mov cmp js (bad) (bad) pushl (bad) mov cmp data16 sbb xor add insb jg mov stos adc decl jmp jnp add pop push ror outsl in mov loop std jbe rcll mov (bad) (bad) jmp addb dec jno inc or jbe xor shlb add decl bound (bad) mov movsb cmpsl (bad) scas lods (bad) or sbb xchg call dec into add dec push call mov je into fs in fsubs das sbb incl ljmp fisub fldt cltd loopne dec push mov aas stos xor ljmp jg mov dec xor adc mov mov inc push mov mov mov and bound dec or (bad) (bad) mov cmp sbb pop test fisubr sub and mov in push mov lea shrb or sub add popf push (bad) (bad) (bad) ljmp cltd pop ja cmc pop push test in jp cs xor pop sbb xchg or mov scas (bad) (bad) (bad) incl popa clc lods (bad) jb sti cmp clc or xlat jb pop pop fldcw and call (bad) decl or push fisub sub mov scas arpl les (bad) pushl std jl fbstp repnz jecxz push ljmp ja enter ja (bad) incl out and or dec loopne (bad) (bad) (bad) call mov lock (bad) jbe xchg andl inc jl loope repnz dec fcmovb pop sbbl mov sub incl inc icebp js add jae mov add add fist pop out (bad) (bad) (bad) mov push jo roll xchg xor mov inc dec inc fs dec jle (bad) (bad) (bad) call hlt lahf pop mov das mov into popa je imul dec cwtl jno xchg icebp add jg (bad) pushl fwait jl adc sbb (bad) int3 fnsave mov (bad) incl add mov test or mov out pop jp dec jb (bad) (bad) (bad) call or (bad) xchg cmpsb stos repnz or push mov repz xor push cld into dec jnp ror test in (bad) incl cmp imul scas repz adc (bad) push push (bad) (bad) mov shl xchg ds dec je (bad) andl cltd stc int mov add mov adc sysenter pop and fwait xchg and mov fwait xor jmp ljmp jl xchg (bad) (bad) mov rorl or xchg test mov ljmp mov (bad) (bad) (bad) lcall cmc fimul int dec push (bad) xor jg and jne add sbb mov dec incl sbb or in cs cmpsl in xchg movsl or xor clc pop lock enter add xor das movsb test mov lock ds mov out nop cmpsl sarb sub push cmpsb icebp enter mov lods push inc push adc pop popa dec mov pop rcll (bad) (bad) incl xor std std mov jno mov sti jne je scas dec cwtl jg arpl outsb mov jle je pop add pushl xor cmp xchg addr16 mov adc mull add aas push sbb incl mov adc addb cwtl sti and data16 (bad) loope js push (bad) (bad) (bad) decl sbb adc jne lret jo xlat xor (bad) dec or mov sbbl rorl (bad) decl les (bad) js add cmp sub imul (bad) xor mov sub aaa out push test pop mov ljmp or and js xor push pop scas xchg bound mov xchg mov in ficoml iret pop mov sarl adc (bad) jmp call int movsl fwait sub lods dec sti sub int (bad) add sub sbb push add aas rcl data16 inc cmp xlat decl mov pushf imul fstl mov cmp cmpsb int daa sbb (bad) hlt inc adc sbb (bad) call inc lock movsb fwait repnz or jns mov push xor ds mov out stc mov jmp cld adc push dec xchg scas sarb sahf jnp rolb sub mov enter out (bad) std je jge fs cmp mov pushl lods dec xor sbb rcr and or rolb shrl push es cmp std adc (bad) (bad) ljmp jae mov cmpsb insb jne andb int cld insb test xchg pop loope pop push lret or (bad) incl mov xchg dec jb mov mov mov cmpb (bad) jmp xchg pop hlt leave cmp mov gs add js dec loope adc xchg fwait in lret (bad) fmull jge push (bad) (bad) jmp inc (bad) mov sub shll fstl mov rorb push push or (bad) (bad) decl jl mov dec repnz stos pop rcrl stos and dec cs cmp ja lcall (bad) lcall adc lods nop sub mov xor cmpsb sub orl dec (bad) mov inc mov push adc cmpsl loopne and dec das mov (bad) decl je cmovns push mov movsl or in icebp pusha sbb cmp jle dec pushf icebp and das adc xchg insl mov xchg xchg mov add (bad) ljmp fimull lods adc xlat notl mov loopne pop (bad) cmp (bad) jmp inc cltd pop test fstpt mov outsl mov cmp dec push xor mov call push xor inc push movsb sbb cld mov sbb (bad) popf sbb scas fstpt jg push arpl out mov psubsb in (bad) (bad) (bad) cmp into fildl mov jo pop icebp sbb mov mov sub sbb adcl gs in stos mov cmpl mov fldl cmc stos push call jecxz stos rcll out les or mov insl jecxz sbb (bad) (bad) (bad) (bad) cmp dec adc mov xchg out insb fidivr xchg outsb inc sarl idiv cmpsb (bad) lcall arpl push cmp fcomps xor rorl cld pop sub push cmpsl (bad) (bad) (bad) mov jnp mov flds lds xchg es mov leave dec push add call inc shll pusha xchg cli inc xchg and enter (bad) (bad) decl mov adc in jecxz inc dec idivb ret cmp mov test push xor xor (bad) fidivl fist (bad) ljmp je cmp dec lods sbb mov ja jl incl icebp adc push pop ds pop sahf (bad) (bad) (bad) lcall inc nop daa cmp fcomps push loopne idiv outsb add jecxz stc cli scas cltd fs add dec and lret mov idivl outsb sbb jnp fbld mov mov movlps les aam xor (bad) pushl mov push stc mov out xchg rcrb sbb pop dec decb or push jbe (bad) (bad) lcall mov sub sbb lea sbb pop loopne into sub inc loopne cli (bad) pushl jo out int3 test out lcall cmp sub (bad) dec repz int cmp push mov loop (bad) (bad) jmp adc dec xor push pop sub lea and iret call (bad) incl insl xchg jp out xor scas into icebp mov mov fild and jo add jnp cltd cmp lahf pop mov cmc xor cmp sbb call and xlat adc push pusha inc (bad) jbe xor jbe pop stos out lahf cmp mov xchg lock xor lock pusha and out std outsb ljmp (bad) jle pop add xor cli pusha and repz shrb div test pop std (bad) pushl test int cli (bad) testb movsb test sbb cwtl inc sar out cli pushl inc xlat dec daa adc fcmovnb or repnz jno cli mov cli fcomip mov test xor loop out cli call mov dec ss sub xor inc aam pushf mov (bad) (bad) (bad) (bad) out xlat inc adc mov add inc fisubrl or inc outsb xlat push pop cmpsl dec frstor stc gs push cmp cmpsl (bad) fimul jle mov movsb cmpl or or sarl and (bad) lcall push jo stc hlt stos inc inc daa aas aas pop out jmp xchg subb xor jmp push stos xchg inc push imul inc (bad) (bad) (bad) jmp insl push fisub cmpl push fstps jge adc jo inc sar (bad) jp mov sbb repnz jns lret test sbb fsubr les (bad) (bad) jg lret mov sahf mov rol lret cmp ret pop jecxz push call imul (bad) ljmp sbb ljmp data16 fs js sub je (bad) (bad) jmp mov add rcll adc adc pop jge (bad) cmc mov (bad) (bad) (bad) jmp jp or dec adc mov or xchg scas xlat aad push mov fs mov mov (bad) push pop mov pusha ljmp jle pop jnp xchg xor rcrb push cmp and add jb lret and adc adc pop in add (bad) (bad) (bad) jmp push xchg insb xor call sahf clc cmp ret add add (bad) (bad) pushl (bad) lahf adc pushf mov movsb jno mov pop bound cmc in adc (bad) (bad) lcall std push out leave mov xor mov clc mov movsl nop lods scas xlat inc std (bad) scas sahf (bad) mov push mov jo (bad) fidivl into mov fcos (bad) (bad) incl and ds xchg fidivl lea lods cwtl xchg mov (bad) (bad) (bad) incl div xchg pop int mov inc cmpsb sub xor imull cmp (bad) (bad) call dec add inc popa ret mov xor (bad) push lods cmp cmp (bad) lcall scas loopne icebp mov and aas idivb jo movsb sahf push jo pop lahf es ljmp add jbe ss inc mov ss and insb imul (bad) (bad) jmp (bad) outsl imul sub (bad) popa push loope push pop das stos and pop leave (bad) push callw scas mov push fiaddl fnstenv cli fs sbb incl sub clc data16 repz (bad) (bad) (bad) call test and pop cmpsl mov movsb xchg test dec sbb in fimul jle (bad) (bad) (bad) call push repz adcl push (bad) push sti and and aaa inc dec jle (bad) ljmp inc int3 idivb inc jb sbb loope aas out dec loope pop cmp adc add sbb shlb repnz icebp js push mov jge (bad) (bad) (bad) lcall sar push ss mov mov movsb out test xchg cs out clc sub sub push imul gs mov (bad) (bad) (bad) cmp rorl icebp push (bad) fmuls adc add cmp xchg loopne repz dec adc mov dec cli lretw mov (bad) out xchg dec out inc cwtl out or pop lock pop daa in inc mov mov out mov mov mov add jmp lcall sub adc (bad) (bad) (bad) mov leave or rcll jp mov and mov pushl adc mov mov imul mov (bad) (bad) lcall cmp ret cmovne mov or xchg inc stos mov xor lcall push push clc ds xor pushl ja,pt and inc dec repnz push pushf cmp (bad) (bad) decl fist inc xchg dec cmpsl mov and icebp mov leave je add nop aaa nop dec mov (bad) (bad) (bad) (bad) in or dec test jp inc arpl pusha js shlb iret bound or sub inc xor ret rorb mov call cld jecxz sbb adc (bad) (bad) (bad) fmull shrl imul xchg (bad) call scas mov daa inc cmpsl inc dec sbb (bad) (bad) out xor (bad) jmp hlt inc xchg xor jne jle xor (bad) dec decl js mov int3 ss inc jp sub faddl dec lock icebp (bad) jge je int3 sub ds (bad) (bad) ljmp je sbb dec push mov adc mov stos sbb imul dec jb add hlt mov push lods imul into addl das inc xlat cltd adc movsl xlat mov in stos lods imul dec or incl out nop inc sbb (bad) push or (bad) (bad) (bad) incl into call scas shll aad dec lcall hlt add cmc dec icebp clc das push aaa inc ret sub bound sub (bad) aad lods fxch push and pushl and xchg mov jns imul aaa push sarb std xchg push dec xor (bad) (bad) jmp sbb jg insl mov xchg pop sub stos or imul lahf jbe or or mov xchg in addl rorb (bad) call cld cwtl (bad) mov into lock sti xor mov jb (bad) (bad) decl jg decb pop leave arpl xor add dec xor cltd adc mov add js insl out jge inc inc sysret pop xor ffreep cmp (bad) jmp addr16 add pop or push addl (bad) mov int3 xchg xchg lcall sbb sub inc in jb pop adc ret (bad) (bad) jmp clc dec pop cs das scas add loop lods push cmpsb xlat fdivl adc (bad) (bad) (bad) jg add (bad) in insl lcall cmp add xlat (bad) push mov aad inc mov sub pushl xor ja inc clc cmp fs cmp push jmp nop fnstsw (bad) loop xor xchg cltd loopne jmp sub sub dec repnz mov xchg mov fistpll xor jbe mov mov daa dec aam shrb mov fistpll adc push test sar (bad) pushl mov cmp (bad) jp lods lahf mov fisttpll and fwait pop mov sub out mov push xor pop fldcw push nop dec cwtl pop stos mov je xchg pop (bad) (bad) (bad) lcall ror mov dec xlat pop xchg inc les subl (bad) fcmovb mov iret pop pusha xchg jge incl mov in hlt lret xchg mov dec cmp fidivr mov jb fsubrs mov (bad) (bad) jmp cli bound mov icebp repnz mov mov mov fist or (bad) (bad) (bad) decl movsl jecxz fldl int mov cmp test (bad) lret (bad) call sub ss push or aas jge out or (bad) (bad) jg push lea mov mov and cli xor les mov daa cli jg insl ds mov (bad) inc mov pop (bad) decl pop aaa sbb arpl adcb push leave gs popa jmp mov push hlt push pushl jg sbb xor mov mov or mov int3 sub pop ret mov add xor (bad) (bad) (bad) mov je push and (bad) lret push cmp lcall data16 (bad) (bad) (bad) call add aaa add decl pusha push ja jb data16 std ret sub icebp (bad) mov xchg cltd or aas in jne lods jecxz jnp (bad) outsl mov decl fmulp jecxz ret into mov mov mov cmp xor (bad) pushl arpl mov (bad) stos shll mov (bad) out loopne pusha jge (bad) (bad) jmp out mov aas mov add mov mov pop daa out bnd insb pop mov jg ljmp cmp aad mov in movsb pusha cli xchg loope test lds jmp popa (bad) (bad) decl mov hlt (bad) cwtl and movsl out (bad) mov mov xor ja (bad) (bad) decl adc je ljmp xor xchg pop pushf and xchg jmp inc stc cmc (bad) (bad) incl and lock xor fcmovnbe ficom lock mov sub jmp pop mov aam stc cmp (bad) mov (bad) (bad) call sbb xchg ja pop aad enter xchg xor or xchg movsb (bad) (bad) (bad) ljmp adc lds push mov fcoms jb mov xorl gs add push (bad) (bad) (bad) lcall iret stos popf loop xchg pop imul test xchg pxor (bad) cmp movsb sbb (bad) decl add nop push iret cmp aaa test out xchg mov mov mov outsb movsl add inc mov daa hlt xor jo jae pop push (bad) (bad) (bad) decl jp adc aaa lods xchg xor mov push scas mov popa bnd push mov mov (bad) (bad) pushl push sub lcall adc pop or (bad) (bad) dec xor (bad) aad pop mov add and test cld xlat cmpl paddq movsb cmp fldcw (bad) call push jmp test mov mov bound testb aam or test test add scas jecxz jmp cmp (bad) (bad) jmp lret (bad) push aad fsubrs pushl in ficompl push (bad) (bad) xchg (bad) (bad) fimul lahf inc or out (bad) (bad) (bad) (bad) cld inc xor jbe lea add adc push fist sub movntps (bad) (bad) in mov outsb mov jnp add repnz pop (bad) cli popa lds mov or (bad) (bad) lcall cmpsb xchg xorl xchg mov mov (bad) ja xor push test mov push pushl rcll mov mov pop (bad) (bad) ljmp mov aaa (bad) ss jo dec pop rclb in data16 lcall test xor dec sub inc adc jmp decl shlb push mov movsl mov (bad) (bad) jg mov xor ds imul sti fisttp mov decl inc out sub fsubs lds lea jbe dec xchg ds pop sbb cmp add jne into out xor (bad) (bad) decl cltd aas ds scas jb aad pusha sub sub jmp jp (bad) (bad) (bad) out fadds jg insl sub jbe test xlat mov pushf out test rcrb (bad) (bad) decl (bad) lcall jecxz bsf xor and mov dec inc inc je jg (bad) jmp push lahf xor add push imul xchg (bad) (bad) (bad) pushl inc int3 pop ret out inc xor dec cmp pop test lods or orb (bad) (bad) dec xchg test sbb fildl stc xor divb dec add pop mov mov scas in pop lods inc mov arpl push sarb push cld push rol out (bad) (bad) (bad) decl ds dec clc fistpl pop add mov mov sbb xorl mov mov lock push lret shrl (bad) (bad) jmp cmpb lods add inc pushf lods outsl mov outsl cmp lods ret pop adc mov adc es jmp xchg sahf mov sbb or mov fs popf mov jae fs js popf mov (bad) ljmp inc cwtl leave dec pusha jb cmp das in jl push and push (bad) and (bad) lds lret jmp mov cvtpi2ps cli (bad) incl mov jo mov inc ficom lea loope cmp sar dec js,pt sub adc dec mov mov inc push decl pop mov pushl jb arpl fimul or push pop je pop lods jne aam into add inc (bad) (bad) (bad) incl out inc mov or cmp dec addr16 in pusha push pop lcall daa cmp (bad) ljmp adc jp div lock stc cld fisub mov or (bad) (bad) mov sub push icebp adc jmp in pop stos inc jae,pt (bad) xor jmp sbb xor xchg or aas adc mov dec fwait sub flds lret icebp (bad) (bad) mov rcr and rclb xchg pop push mov bound xor (bad) decl repz fcoml loopne fisttpll dec push fiadd xchg inc std decl jecxz stos je inc dec cmp push inc add (bad) ljmp rclb mov daa or daa cmp ja (bad) (bad) (bad) ljmp mov mov and jns andl aas add or dec arpl (bad) (bad) (bad) jmp or pushf sbb jmp adc inc int push out push in mov out (bad) (bad) aas and adc daa je,pt push push mov pop std (bad) jmp cmp fnsetpm(287 cmp push mov mov xor decl fsubl sub mov fcmovb arpl lret sbb mov ret sub xchg lret hlt imulb mov jae lods mov insb lret faddp lods popa push cmc (bad) (bad) (bad) call xchg (bad) xor jl in xlat dec cmpsb xor jge pop (bad) cmc addr16 call or cmp lahf divl add xor daa (bad) ds cmc dec out mov mov push ss cwtl adc std lcall out xor daa xchg mov jns jg (bad) (bad) mov scas imul pop lret mov stos (bad) (bad) (bad) (bad) jl inc adc std inc jge pop int3 xor jae fisubr or xchg mov mov sbb inc (bad) adc aad inc mov out xchg out push sar (bad) decl mov loope jg cli cli call inc xor call xchg push dec and pop lods mov sahf (bad) (bad) (bad) lcall hlt cmp push dec add pop scas fcoml fldl ds (bad) lcall fcompl or loop bound call jmp cld (bad) addr16 (bad) (bad) ljmp insb (bad) fildll push xor es fadd (bad) jns jmp inc std (bad) jnp outsl cmc mov lods imul or (bad) (bad) (bad) lcall or roll (bad) xchg push sbb daa out xchg out push mov stc stos dec jns adc clc insb cld (bad) (bad) call pop js leave sbb movsb inc fisttp dec sub push pop xchg or jno push cmp push sub pop rclb sbbl repnz xor and cmp xor aam xor sub popf (bad) pushl movsb mov fs scas pop inc pop xchg cmpsb lds xlat test jns adc (bad) call sbb mov dec popf rcll dec out stc (bad) (bad) ljmp ds sub out fcoml lcall xchg (bad) xchg xchg dec daa or jnp mov mov pop push sbb lcall or movsb mov xchg mov mov cs (bad) lcall pop mov xor jnp rorb jle cli xchg clc pusha repnz inc mov hlt (bad) (bad) (bad) ljmp add movsl (bad) lds mov jmp adcl xor sub iret (bad) lcall (bad) xchg jo lods and mov or inc adc mov call movsb icebp es fwait aaa add popa add mov cmpsl or fcomps das scas adc pop in xchg cld aad xchg xchg (bad) (bad) (bad) call cltd bound sbb int cltd out aas cmc inc orb mov out (bad) (bad) (bad) pushl out add ljmp push or mov dec lret popf dec pop cmp ljmp mov add push adc out iret aad shr aaa std jp adc (bad) (bad) call out arpl scas mov or subl loope fiaddl xlat sub add jg jp (bad) test push push push jmp cmp sbb aam sbb loop mov cmpsb cld pop or fcomip inc mov pusha in ss les fnstenv (bad) icebp mov (bad) inc cmpsl jg sbb mov xor cmpsl push lock pop jns rcrb lcall jnp adc (bad) lcall and jne mov ret loopne cmp int3 mov dec ds and outsl int3 lcall test ljmp add out adc (bad) (bad) ljmp pushf in inc pop inc xlat sub xchg test add push sub out pusha (bad) (bad) (bad) (bad) jg sub movsb pop jb (bad) repz pop gs in dec jg out adc xor in (bad) (bad) (bad) jmp out sub push pop test insb jmp (bad) cmp and jae cmpsl pop xchg adc mov lcall loop out xchg arpl dec (bad) pop jg pop cmp add add pop sbb jae std fild iret pop ljmp push (bad) (bad) jg push fnstenv insl lods jge inc mov sbb out movsl mov imulb and dec insb xchg outsb push push mov or mov jge loop push mov sub fnstcw je daa mov (bad) (bad) decl out ret cmp int3 mov shrb int push cld ds xchg nop lea pop mov pop jecxz fcompl loopne ret mov push mov jno and mov mov xor fsubs adc inc outsl in decl (bad) pop int3 ret scas scas sbb mov or js sar (bad) call and aad sbb sub mov cmpsl mov (bad) jg xchg cmp ret std jnp push and lods mov mov (bad) (bad) fbld popf adc mov (bad) stos or in mov cld pusha cmc in (bad) (bad) (bad) ljmp and add sub fcmovnu aam loopne inc pop clc mov clc xchg (bad) mov sarb (bad) incl loope adc mov and mov or mov scas movsb (bad) (bad) (bad) incl lahf push jle dec test (bad) leave push mov (bad) sub comiss and inc mov call sub add imul insb ror xlat scas mov (bad) (bad) (bad) jmp mov or jge hlt jl fistpl jae jge addr16 iret jne ss (bad) (bad) dec mov (bad) pop lret dec adc ljmp test add xor ds (bad) (bad) fistpll out (bad) pop inc pop loopne xchg xor cmp fiadd push inc pop or (bad) ljmp mov mov leave fsubrs ljmp faddp test and adc imul push adc jecxz (bad) ljmp pop lret mov pop scas rclb stc in inc mov dec or loope (bad) mov lcall push test inc pushf into stos sub sti outsl cmp mov sub pop adc jg insb xchg fadd add mov incl cmp add xor cli pop push mov jmp icebp push pop inc sub rolb sbb lret loop ja inc mov add (bad) (bad) push and and cmc xlat jge dec or sahf inc aaa out push cltd (bad) cmp sar (bad) (bad) (bad) cli adc rorl jno outsl in out add repnz mov cmpsb aam pop pop mov mov xchg inc mov cmp pop cmp rorb sbb (bad) (bad) ljmp daa jl mov imul movsl xor add sbb scas mov outsw clc pop push (bad) mov dec in es fldt push cltd (bad) (bad) (bad) (bad) out and in mov test xor movsl aaa and inc mov idivb fstpl jmp push sbb mov push rclb sbb inc lock icebp jg sub ds xor (bad) (bad) decl xor out in (bad) xchg dec clc je loope inc leave icebp (bad) int3 mov mov add xor add pop jl jae adc (bad) fist jl xlat jb push out or insb adc mov (bad) (bad) (bad) (bad) mov mov repnz adcl mov xchg sahf and mov decl mov sub mov fbld mov pop lret (bad) (bad) (bad) call sbb jle xlat data16 sbb mov mov out adc jno (bad) (bad) decl mov pop xor mov aad xchg in int3 lea or cli sub inc push inc jns (bad) (bad) (bad) dec dec dec inc outsl add imul push sbb dec test (bad) outsl sbb push (bad) (bad) (bad) call lods cmp push adc or mov add lods cwtl loop (bad) (bad) (bad) (bad) (bad) cmp lea stos call cmp mov cmc (bad) out and or stos mov push cmp (bad) jg lcall outsl movb mov jg mov scas adc movsl rorl pop mov (bad) decl les ret jo out lret cmpsl lahf popa mov add (bad) (bad) (bad) jmp adcl pushf inc xchg es cld scas fdivl lods mov outsl cli rcl (bad) (bad) (bad) pushl pop adc push push test lcall aad xchg inc pop in test mov (bad) decl sbb call iret sbb movsb xor jl fstpl jne (bad) (bad) decl fs mov jno push inc mov mov sbb and or and ljmp lcall popf sub hlt aas cmp push dec lock xchg testb inc or (bad) pop gs push scas call ret mov mov mov (bad) (bad) inc xchg (bad) push push pop ja mov sub xchg adc cmpsl push setge (bad) (bad) lcall mov leave stos xor inc mov push divb sbb outsb out sarl gs (bad) (bad) dec jb lgs pop sarb push mov ficomp xchg cmp maxps pop ljmp cmp and mov pushf mov add cmpl cmp sub (bad) (bad) (bad) mov xor (bad) shrl insl fsub int3 dec jp adc push mov sbb jmp pop enter aaa jne loopne cmp movsl mov mov mov es ljmp adc mov pop xor std call adc xchg in popf mov std movsb xor sub pusha or aaa or lea (bad) (bad) (bad) cmp imul or jne xor ret sbb leave adc xchg je inc jmp rcr pop icebp mov cli in fisubr ds ja mov stc movsb jmp dec sbb cli and out scas dec mov mul jae push mov sar decl inc or adc sar lret pop xchg rcrl lret leave leave (bad) (bad) ljmp dec scas leave jno jne outsb cmpsb fs add sbb in jnp ljmp (bad) cmpsl and test jg or cmp (bad) (bad) (bad) ljmp dec adc or clc in and int3 sbb sub (bad) bound in dec mov test lock incl cmp push jle,pn xchg data16 mov movsb pop or mov jp (bad) (bad) (bad) (bad) jns sub fwait or aas inc mov fidivrl jns inc fdivs mov add (bad) (bad) (bad) incl xchg add xchg jle sub cmpsl je and icebp ret mov (bad) sub lods mov ret push jns (bad) pushl mov push add or enter fisubl lea jmp sub add jmp cmpsb sbb xchg pop adc nop xchg push movsl loopne push xchg (bad) (bad) (bad) (bad) mov adc or cmp pop mov pop adc push jge xchg mov (bad) (bad) call movsb fadds lahf (bad) xor add mov cli add add (bad) (bad) (bad) pushl inc push xor (bad) dec sbb push fwait ss idiv rcrl inc xchg test fcomip (bad) (bad) (bad) ljmp shrb repz cli mov call jbe (bad) (bad) fild dec fnstsw mov movsb sbb cmp leave adc lcall pop xor gs loop sub cli xchg es fwait ljmp push push xlat add add je test (bad) dec and mov mov adc cli mov xor daa pop jb or mov stos or ja aas and cmc mov adc lcall push stos lahf dec jg decl ds xchg loop int3 inc dec lret and sub cmc push push mov add stos popf aas xchg fldt add push mov insb sbb (bad) (bad) (bad) cmp repz push sub cmp dec jo mov les (bad) xlat notb ljmp adc (bad) incl je push sub scas mov xor pushf adc in aaa jns (bad) lret mov test loop,pt (bad) imul cltd jmp xor (bad) pushl std (bad) ss es jns push fstl add sbb icebp stos mov inc pop pop loopne fisubr sub cltd jo das fs (bad) mov scas pusha push fcmovu or addl xchg in lret push xor repnz imul sbb adc lea push aad inc stos xchg pop mov loop movb (bad) and and sbb adc lahf xlat xor cwtl (bad) (bad) (bad) jmp call enter xchg push push xchg cwtl push cld call outsb lahf push fdivrs movsl call (bad) adc ret cmp pop int mov jl (bad) (bad) pushl rorl out loope sbb ret push inc (bad) stos imul sub push cmp push sbbl (bad) pushl (bad) xor inc fisttp xchg cmp not stc mov (bad) cmp imul mov mov or jmp jge push and xchg xchg mov (bad) (bad) (bad) jmp xchg imul dec mov pushf push leave or aam cli inc xor testb test outsl clc (bad) ljmp mov xchg xor add loope or jmp mov pop nop add ret xchg loop or mov data16 ljmp xchg mov cmpsl pop xchg xor outsl (bad) dec lea loope inc inc mov jo fiadd aad cmp inc lret jle mov mov pop or mov lea inc inc xchg (bad) (bad) (bad) pushl (bad) push pop add mov sub sbb adc pop test (bad) call push fwait xor and hlt mov icebp pop add cmp aam xor (bad) (bad) jg mov popa push mov lds insl cmp stc jns xor js jp xchg jno lods leave cld dec je pop std and sarl in mov pop out or dec add (bad) inc xchg dec enter hlt fstpl jo lahf push out fldt mov cld pushf adc cmp (bad) (bad) call das es cmc outsl push loop inc ret rorl mov mov cmpsb mov cmp out in imul mov roll pop mov (bad) lock mov sub mov test xchg ficom aad enter (bad) outsl in test (bad) (bad) ljmp cmp push push aas test cmc jmp or push mov pop insl ds inc push call cld jg je (bad) jbe ffreep xchg ficoml imul jge pop push adc fs out (bad) (bad) (bad) (bad) cmp jecxz xchg pop push add jle movsb fst inc pop bound add (bad) jmp scas in push gs xchg fadds inc int3 pop cltd inc mov cli (bad) leavew insl bound lret stos stos mov jae ret aam out cli (bad) out ss mov pop xor fdivrl xor (bad) mov fild sbb (bad) (bad) jmp jmp mov (bad) loopne out stos and sbb adc sub scas xor pop pcmpgtd incl test push loop jns ffreep or push fstpt pop mov cmpsb lahf dec jge jmp cmp mov adc (bad) jg mov mov xchg and pushf lods xchg jns stos cmp (bad) (bad) incl movsb mov jns loope iret jns xchg clc addr16 adc jecxz sti addr16 cld (bad) incl pop outsb (bad) in jo orb push in ret xor sub jne ds (bad) sbb (bad) and cmpsl jae dec and sbb mov push (bad) jae adc cmp (bad) (bad) cmp inc inc push inc cmp std jns and sbb cmp dec cwtl aaa test and into test fsubrp imull xchg jo mov es imul mov pop push xchg sbb subb jne (bad) (bad) mov lods and mov mov or enter jecxz or xchg loope mov aad adc stos pop and aad fstl lea (bad) ljmp rclb and cmp into out mov mov or ljmp xchg mov inc outsb ret cmp push lahf nop adc (bad) (bad) jmp in fistl xchg call mov dec or mov in (bad) in mov add (bad) fcomip and or cld inc cmp test sub (bad) clc rorl jne jbe bnd (bad) (bad) jmp fsubl inc cmpsb lea push lahf push pop sub clc cwtl popa mov mov sbb dec sub fcomip je cmp loop jg (bad) xchg jmp sbb sbb jmp mov (bad) cwtl scas mov cmc into mov xchg or decl cmp (bad) xor outsl cwtl test fnstcw in icebp (bad) jmp push pop out push and xorb (bad) cld popf dec ja std (bad) decl adc (bad) xchg push push adc mov cmpsl dec pushl push push xchg clc push mov in jns fnstcw jle add js cltd sbb mov cwtl mov lods (bad) or ud2 mov jge,pt ds push (bad) jno ds test loopne xchg or sbb cmpsl hlt xchg fnstsw ret call and mov arpl mov sub addr16 jge (bad) (bad) (bad) mov or pop xchg rorb sbb movsb jg rolb mov cmp (bad) (bad) lcall or pop pop out mov in mov (bad) out lret pop jb xor jmp and (bad) (bad) push lahf inc xchg sti xlat popa (bad) jmp mov idiv js mov inc ret (bad) call bound jge stos xorl outsl insb dec scas aas xor insl sbb sbb cmp mov mov sbb and jmp lahf (bad) mov dec mov mov mov xor and cld (bad) (bad) incl in (bad) das lds (bad) pop (bad) iret mov shrb jae fldenv (bad) incl push jg sbb outsb adc cmpsb ss or push loop fsubs incl dec add add stc mov cmp (bad) in jmp das sub (bad) cmp mov add push inc cltd adc cmc cmc or (bad) (bad) pushl push dec clc add idivl dec mov cmp cwtl push clc insb cmp push fwait inc call inc cmp mov mov (bad) (bad) (bad) fldln2 xor add and fcmovne outsb sub out call pop cmp jmp call repnz inc xchg jl iret lods sub adc (bad) stos mov lock mov fiaddl (bad) incl in bound inc or sbb stos mov mov fldenv fistpl pop adc add loopne test icebp in fs stc xchg test aam data16 test fstpt lock and lock adc jg inc sbb in js xchg cmc pushl (bad) hlt sub adc clc fwait incb and (bad) in push (bad) loope (bad) (bad) incl jbe or pop mov or test dec mov pop inc decl inc (bad) addr16 outsl xlat movsl push (bad) (bad) pushl push cmp aaa lret mov shl push push jl pop rcrl (bad) incl xchg loopne push call les mov rorl out cmp xchg sub jle lods mov xor mov mov dec adc call push cmp push ror inc cmpsl ss or daa add (bad) sbb repz xchg shrb in jmp icebp and inc xchg pop xor pop mov mov jne push adc pop test scas adc icebp dec outsl xchg adc movsb call pop es (bad) jns popa movsl mov add pop inc sbb mov (bad) (bad) call mov push xchg cs or in shrb add cmp cmc (bad) (bad) (bad) lcall and jp jg cmp pop push pusha movsl pop test scas setb test mov call adc dec std push pop cmp cmpl push daa ljmp icebp xor outsb clc fbld dec pushf sbb fcomip incl movsb jo sbb mov fldenv push sub incl (bad) pop test xor mov cmp push mov sar (bad) (bad) (bad) cmp jno and lods adc sarb dec cwtl repz xchg sub (bad) mov jmp popf lret cmp mov mov frstor mov mov popa loope cmc add (bad) ljmp jno,pt lds push enter out pop insl inc fidivl xchg rcl (bad) (bad) lcall je shrb clc xchg add mov adc fild xor jecxz out inc aas sar (bad) (bad) jmp jmp inc lcall stos imul cwtl scas lret int3 jae fsub jns (bad) (bad) lcall loop and (bad) cmp sbb mov test mull lea pushl roll (bad) and movsl xchg lods imul out outsb ljmp pop jl adc mov popa cltd push mov mov (bad) (bad) mov push mov in dec sbb shl rclb mov add je mov leave ja (bad) (bad) (bad) dec sbb pop sub in clc jle lds add ficompl fmul (bad) (bad) (bad) push ret ljmp dec lcall inc mov int js mov (bad) incb sub nop add in sbb (bad) call mov dec hlt add (bad) (bad) (bad) pushl pop mov push stos mov in dec sar xor lock (bad) out push adc dec (bad) (bad) (bad) (bad) fsubr in pop inc jle dec cli cld cmp loop mov fcomi mov inc loope xchg xor (bad) aas loop add jae fimul mov call inc ret mov inc jl fildll (bad) jmp imul test ljmp in je aas jmp jnp fsub sub jmp pop jmp mov (bad) (bad) mov inc out aad mov out aad pop je mov inc cltd mov dec inc mov push fiadd pop js outsl jge repnz fisttpl inc incl divl and test outsl mov mov prefetchwt1 or sbb or (bad) ljmp xchg call out inc mov (bad) lcall movsb and jae clc sbb dec out mov push mov sbb and out mov jns push (bad) das pusha sub cli mov outsb data16 adc sub pop pop lea repz lock in dec jmp cmpsb mov decl xor cli lea dec stc sbb cld popa add sti in (bad) incl xor inc pop lahf dec jg pop sub into aad xor mov ret pop xchg pmaddwd je cs xor mov (bad) mov sbb and cmpsl sbb sbb jbe add ss pop je sarl lods daa das sub call fidivrl xchg out gs cmp das sbb push push sbb (bad) jg mov subl mov push out pop mov adc (bad) lods mov cmpsb adc jecxz aaa out mov outsl dec sahf and xchg sti mov or sub pop push mov (bad) decl xlat scas repz fs dec ret dec xor rolb xchg pop loopne push mov pop sahf test fbstp fcmovbe adc outsb daa and notb insb (bad) ja jge lcall subl cmpsb dec push aad dec and (bad) (bad) mov imul dec scas sarl add mov mov test (bad) mov (bad) (bad) (bad) fisubr dec jno sbb lahf clc pop dec dec push mull repz popa push ja mov (bad) pushl cmp jge add repz dec lcall scas xchg add hlt (bad) (bad) (bad) (bad) js xor das cli xchg (bad) popa insl pop cmp and ja mov sarl xor (bad) call je mov aam mov mov dec lahf or sbb outsb xchg ror sub jne xor jmp inc jge or data16 and ds inc push xchg stos int3 dec push pop sbb fstpl pop aas or xor les ret lock fadd rclb sub push xor ljmp int sbb and jmp in in xchg jmp pop xor (bad) lcall pop or aam inc iret pop inc (bad) call sbb dec sbb mov ja jno jno xor sub lret lahf (bad) xor lods push mov push push (bad) (bad) (bad) incl pop mov shlb outsb fwait jecxz sub dec or (bad) fs fstpt (bad) pushl cs push mov xor rol ret sub (bad) mov (bad) (bad) (bad) inc adc (bad) mov movsb inc xchg aad mov pop mov es sti add pop pop mov or lcall lcall das mov (bad) mov push xor mov xchg push in lcall inc jae and xchg mov or imul fs fildll jmp (bad) jg lcall lret mov out out inc jne adc xchg loop dec cmp fs push xchg andl push out xchg hlt jmp out imul and js mov adc loop test push shlb cmp add lahf mov (bad) (bad) mov mov call pop dec add inc xor mov (bad) cmovp or std xchg mov lock and adc int cmc test das lock cltd adc aas push cli mov test fidivr adc in aas (bad) ljmp sar inc push repz sub jbe or fwait jns shrb decl ljmp out in outsb mov imul call enter (bad) sub icebp mov mov test mov xchg pop sarb (bad) adc movsb (bad) decl xchg inc pop movsl push jbe inc lods cs fs call ret adc dec push mov (bad) (bad) (bad) call mov dec push push xchg dec mov mov mov dec jp in mov cld mov mov mov (bad) lcall xor sarl pop mov adc insb jmp mov sub jmp adc dec daa and (bad) sti sahf jle incb ss adc sbb sbb sub xlat sbb je lods cwtl pop (bad) (bad) (bad) (bad) jmp mov xchg or out xor test movsb mov mov sub dec ds mov mov fwait jmp or xor jmp das outsb push dec lods jbe (bad) (bad) decl out pop pop cli pop adc in fdivs jmp pop mov clc (bad) incl popf mov (bad) sub out cmpsl popa das (bad) sub adc push xor adc jge inc cld jae rcrb mov (bad) (bad) jns xchg mov and sbb ja in lret mov lcall rcrb cmpsb xchg sub and xchg mov in inc or or (bad) mov insb mov push movb test cli les ret push addr16 and cld stos (bad) incl stc mov aas test adc dec aaa cmp dec loope mov test mov and (bad) incl out mov push mov xchg in jnp ret popw and mov pop out jecxz xor add cmp xor nop jne and cmc shrl add jb lods push (bad) (bad) (bad) (bad) call xchg dec mov xchg test xor insb adc loope hlt rolb xchg sbb dec out mov xor (bad) mov jle paddb iret lcall icebp (bad) incl pop loopne syscall arpl ret (bad) sub stos fdivr (bad) decl push adc lcall in xchg sbb aaa data16 fcoml mov aaa (bad) (bad) mov sarb into jnp fsubl mov and or inc xchg xchg dec push jae (bad) (bad) jg and (bad) ret cmp enter pusha mov inc in mov xor (bad) lcall leave out cmpsb xor mov inc xchg or or pop (bad) (bad) mov sarl jb gs outsl in out jae test cmp (bad) xchg pop mov (bad) jg and (bad) sbb mov (bad) (bad) (bad) ljmp mov cwtl mov insb jns add push mov mov cli sub lods (bad) lcall imul dec arpl stos add scas push fwait stos or incl xchg ljmp sub pop xchg mov leave cltd fsubrl (bad) incl mov jp mov shlb dec xchg in test bnd (bad) (bad) (bad) call adc cmp cmp imul jmp cmp sbb outsl clc (bad) decl cmc sub sub pop orl and popa jno (bad) (bad) (bad) call enter insb out test mov test inc (bad) ljmp ds or sbb into cmpsb enter out pop dec (bad) (bad) (bad) decl or and arpl push or sbb cmc adc cmp (bad) inc les and or push lds xor and cld repz aam cld dec incl cmpsl scas ds xchg jge sub jae enter out daa (bad) (bad) (bad) decl mov std dec das add and or fstpt cltd lea imul pop hlt decl sub int3 jbe hlt add xchg rolb and xorl push ffreep aad out dec inc cltd mov fs loop xor adc cmpsl cmp (bad) (bad) (bad) call xor xchg data16 scas add repz xchg xlat or lods das dec mov fdivrp (bad) (bad) pushl sub sbb pop inc dec adc rcll dec je pusha push dec adc imul jmp (bad) ljmp data16 push cli pop xor mov cmp lods inc sbb das push test jne dec in sub (bad) (bad) (bad) jmp icebp cltd (bad) in pop pop jno out push and push pop dec mov loop call std call mov lds (bad) leave shrb idivb mov test dec in jae (bad) (bad) (bad) incl fcom add sbb and and mov fsubs repnz or lret jno mov (bad) lcall (bad) test adc adc (bad) (bad) js pop or ljmp mov dec (bad) lcall mov and dec jecxz (bad) (bad) (bad) decl (bad) rol xchg outsl gs aad mov pop xchg or dec pop popf sbb cmpsb ja in xchg push repz mov push movsb dec push fs add mov or (bad) insl push nop and mov dec add (bad) (bad) fsubs add mov into (bad) (bad) or adc test xor cmp aaa sub mov loop fcomps (bad) push inc add mov ljmp jb stos mov aaa test xchg adc adc (bad) mov sbbb pop lret or in or inc sbb insl testb jne cmp pop cwtl jae ds (bad) (bad) call sbb and aaa and pop push (bad) mov dec jp inc imul pop cmp pushl sub cmp mov add movsb lcall lea sbb adc sbb movsl or xor push sbb lret pusha mov inc int jae les hlt push (bad) lods add inc out shr mov (bad) mov pop mov lcall and mov cld (bad) cmp cli jmp daa push xchg jno out js inc mov repz sub pushl repz data16 ss xchg (bad) (bad) call notl jmp push mov ss mov sub xchg cli dec (bad) (bad) (bad) lcall jns dec mov jnp sub add mov call sub dec (bad) (bad) (bad) jmp (bad) ja jno mul mov leave or push cmpsl xor mov fsts lret (bad) (bad) (bad) ljmp daa lret int3 repnz outsl dec inc fcomps xchg xchg pusha incb (bad) (bad) (bad) frstor outsl push int3 out aas sub insb aad fwait ret movsb or in mov and sub sahf mov dec cld (bad) (bad) jmp sar insb fs pushl add shlb ljmp loopne push pusha xchg (bad) jmp popa (bad) (bad) cmc mov int3 pop xchg fwait mov push hlt int add loope,pt xor (bad) call and mov jae and jnp inc mov mov ss sbb bound jb mov cmp (bad) mov mov or sbb mov mov mov call in push in pop inc test or mov mov cmpsl cmp add leave xor (bad) ficomp lahf mov rcrb and or cwtl xor sbb lods push (bad) (bad) (bad) cli and stos movsl mov inc aas jecxz in imul cltd push add scas jp dec mov in xchg sub jp mov jmp pop cmc pop ret ljmp and ret scas push cmp clc mov and popf adc (bad) jmp aam cmp das fist pop inc das push push (bad) (bad) call mov ss inc fldl mov int mov cmc mov fstl ret jg (bad) ljmp and (bad) lcall xchg or es jno jmp pop (bad) (bad) (bad) jmp movsb mov in js pop jbe push pop adc lds cli push mov test sti (bad) push stc sbb or sub roll inc mov (bad) jg jnp dec leave xchg xchg push cmp sub lret push repz imul jnp jle (bad) jg push mov ret jl mov mov inc xor lahf or jg mov sbb adc sahf inc ljmp jo push push pop ss ljmp dec popf es cmp sub xchg (bad) cmp fwait inc out mov cmc push cmpsl je xor add sahf cmp icebp hlt in out push inc int3 xor roll iret fsubrs cld (bad) mov je frstor das movsb fdivs cmc cltd push imul jmp cmpsl or mov ds sbb pop jae lock (bad) (bad) incl push test faddp lahf xchg (bad) mov jnp and ret iret hlt (bad) (bad) (bad) jg sub fildll mov out sti ficompl stc repnz aas dec fidivr and gs (bad) (bad) pushl ds push rclb jnp mov cld (bad) movsb decb (bad) sar jmp rcl mov mov jp or ret (bad) call jle shrb add lods xchg int3 inc scas fs xchg jns (bad) (bad) (bad) pushl push mov add aaa (bad) pop cmp aaa fs out dec sbbl push push push rcll inc aam push mov mov xlat jbe sub ss stc test nop xchg and cs decl adc leave or (bad) mov xor add bound adc xchg lcall dec and cmc dec scas cmp ret pop mov jmp cli fisubr enter inc xchg or adc hlt xchg inc mov add out mov add les mov pusha jbe mov sbb subl inc sti push push subb jp xchg (bad) or cmp (bad) (bad) fcomip inc (bad) pushw cmpsb aam cmp xor jno jo mov or jo mov test add (bad) push push out pop fwait ljmp dec mov mov (bad) jg out jp cmp mov arpl cmp into cmpsb (bad) mov inc lods fcomps das int3 cs push fucomp mov das mov and (bad) dec (bad) (bad) lcall ds rcrl fs (bad) mov xor imul lock (bad) (bad) decl jo das pop sahf jmp or adc lods ret pop xchg push or or sahf int3 popf xchg das sar sub dec push pop jne sub mov out add add sbb xchg fcomip (bad) (bad) jle mov jg xor sarl mov aam ret or (bad) jg sbb shlb scas xbegin das cmp mov pop push or decl inc cmpsb jae pop push (bad) cmpps push mov fbstp ds notb push push push sub and out cli lcall movsb mov jg mov sub insl adc (bad) jmp push nop and cmpsl sbb xor ljmp xchg (bad) fsubrl adc mov sbb sub sub adc and fildll mov sbb (bad) (bad) jg ds sbb addl push pop out xor mov ret jmp mov add ret push pusha iret add ret push dec pop data16 (bad) (bad) jg data16 aam loope gs adc aam ret inc mov in cmp enter (bad) (bad) (bad) decl test pop jb pop mov fwait dec inc pop test xlat jno pusha sbb (bad) and lcall adc jle jns mov aas and xchg add push push xchg fsts jl xor pushf lock incl cmpsl stos leave cmpsb push shll pop dec (bad) add adc xor mov (bad) (bad) fcomip jmp xlat sti popf mov addr16 xor cmp (bad) (bad) pushl (bad) push and ret cwtl popa pop loopne sub mov lods jle cltd in inc push dec push pushf mov decl dec divb ljmp adc or sti enter mov xchg sbb dec cld movntq or push sbb pop dec jbe lcall pop mov fwait (bad) scas ds mov mov pop dec inc or push xchg jp fstl scas fisttpl (bad) (bad) lcall jl inc aaa dec popa pop add mov sbb fdivrl (bad) sub mov daa (bad) ficoml xorl rcr mov pusha jne (bad) lret test je fmuls mov sahf lret mov pop xchg ljmp cli (bad) (bad) (bad) decl cmp pop dec js gs xor dec add popa aas aaa xchg es push and xor (bad) (bad) jg or fildl cmp mov fsubs addr16 mov inc or cmp ljmp sub xchg adc ds flds pop add adc xchg mov jmp (bad) sar sbb inc and sti test mov sbb (bad) (bad) (bad) incl lahf sub pop sbb cwtl stos lret push and and fisubr pop aad sbb sahf rol (bad) incl rcrb in nop hlt xchg dec test cmp aas (bad) (bad) call jae cltd push mov repnz arpl fs lret ret (bad) lcall pop out cli jne sbb out xchg aas add mov aaa sbb pop ljmp popa dec jmp mov mov int (bad) (bad) out cli jb cld dec add and movsl insl in push push jnp jne enter add inc clc dec mov jle fwait and mov lock xchg mov mov and mov (bad) (bad) ljmp mov push clc dec scas into pop out test pop pop (bad) (bad) decl sahf sbb push xchg jle aas das imul dec xchg outsl push cmp leave incb mov dec decl xor fs repnz xchg scas adc js and adc (bad) (bad) (bad) jmp lea jne frstor repnz dec xor ret (bad) and mov es (bad) lcall int into scas cltd movsb xlat xor das insl inc jnp stos pop aam pop jae pop mov dec loopw,pt lcall push imul daa cmpsb xor aad adc jns push dec loop pop and pusha or mov call jp insl push stc push cld inc pusha and push les loope xchg clc sbb lods add pop pop icebp dec js xor push inc fnstenv gs lods sbb movsb popa sub dec jp xor fcomip nop fwait mov adc std movb jecxz decb xor adc outsl pop and lcall lret pop push push adc push call es sbb movsl rcr inc fmuls movsl stos outsb adc lcall loopne xor mov push mov jne ja arpl xchg sub (bad) (bad) (bad) (bad) jl aaa mov add jne or aad int adc xchg sub ds dec clc xchg inc in lds sub (bad) (bad) pushl or adcl stos add cltd ffree fcoml jnp xchg call ljmp push (bad) dec test jne jns cmpsb in sti stos xor mov (bad) push (bad) (bad) decl adc jno inc push dec and pop cmp add inc inc (bad) (bad) incl inc ucomiss push xchg sub (bad) dec dec loope test test xchg cmc (bad) (bad) clc (bad) pop outsl subl adc scas rcl pop add mov lods repnz rcll (bad) (bad) mov sbb les mov or ljmp pop jnp insb fwait lea cmpb dec mov inc dec (bad) (bad) (bad) call xchg sub mov xchg scas mov loop dec pop mov lahf dec pop dec movb (bad) (bad) ljmp bound inc push mov mov pop xor mov and (bad) (bad) jmp xor adc sub shl out mov mov sbb inc repz lods in xor pushl (bad) mov add jp rorl mov ss xor (bad) (bad) jmp rcrl ja and into xchg test fcomps push je fild shlb xchg (bad) call jle sbb push sbb out jae (bad) (bad) (bad) mov dec sbb mov pop or dec inc add lods xor (bad) (bad) decl jecxz dec pop and fwait outsl call sub mov sbb pop mov mov dec pop push sub adc mov sub imul push xor pop xchg jns (bad) data16 push jo xchg cltd mov jp push mov xchg jmp ja popa and icebp add aad loope add ds push data16 jge sub mov xchg (bad) (bad) (bad) dec xchg xchg mov mov pushf ret lret fisub sub sti test add (bad) incl ljmp or mov (bad) xchg lea push inc pop mov jmp icebp mov mov adc mov or push mov enter icebp (bad) (bad) (bad) jmp dec cltd xchg push lds leave inc dec clc xor fcmovb (bad) dec jle sahf pop jbe inc in dec mov (bad) (bad) (bad) pushl dec inc pushf fild mov adc pop pop stos (bad) gs mov std (bad) (bad) (bad) mov push lds loope or sub jae ljmp mov (bad) mov les faddl add (bad) popf pop sarl rcrl or test adc mov ljmp pop lahf arpl (bad) lcall push pop in xchg lret imul jne jg pusha shll pop add cmp mov pop je sbb rep dec jecxz negb lahf add (bad) (bad) pushl or push jmp xor inc lock and mov call xchg bound call hlt xchg cltd popl aad in outsl xor insb sbb lret dec sti fwait (bad) (bad) decl mov jmp aaa add mov inc jno (bad) rcrb xchg (bad) (bad) (bad) (bad) inc add mov pushf stc push movsb mov adc and dec aam test out fisttpl (bad) jg ljmp daa jo jecxz pop fsubp mov mov jae loopne (bad) (bad) (bad) aas rorl ficoml pop sub xor cmp push ljmp jno jl (bad) (bad) jmp or pop xchg or mov insb cld (bad) mov inc ds test mul xor cld sahf and insl cmp (bad) mov cs (bad) out xchg andl pop mov cmc xchg paddq or outsb xchg (bad) pushl mov adc mov mov cmp jnp push clc (bad) (bad) ljmp sbbl loop xchg mov xchg mov lret mov and idiv (bad) (bad) (bad) out jp inc pusha adc xorl dec inc in out icebp mov ja add (bad) (bad) (bad) call sbb dec add dec and inc sub add rcll cmp rclb cmc (bad) outsb jns ljmp out bt icebp xchg and sub inc push fwait popf arpl jno out mov pop mov (bad) pushl sbb (bad) mov test adc sub lock in jp jo std dec les pop cs out dec (bad) push inc cli mov pop fs cltd rcll mov (bad) (bad) (bad) call or rolb jnp movsb push (bad) xchg ret aam test mov dec adc scas imul cli or test xchg dec or pop xchg addr16 frstor out mov cmp cmc sub mov stos (bad) (bad) (bad) decl sub mov mov jne xchg test xchg mov rcl push test pop cmp pop mov mov xchg cmpsb call jmp nop (bad) cmc ss xor push mov add (bad) push int (bad) (bad) (bad) (bad) out ljmp mov xor pop out es jecxz and pop adc movsb push popl (bad) jmp nop xchg aad es mov out pop cmp jge,pt jge mov pushf cld and fsubrs (bad) pop sub fstpl mov js lahf add jbe (bad) push adc sbb stos dec xchg leave add cli decl cmpsl imul xchg sahf dec cmc stos in daa (bad) (bad) (bad) (bad) jmp test cli arpl mov out dec (bad) das ror adc push add push inc cmp std cmpsl popf (bad) daa inc scas (bad) aaa (bad) (bad) (bad) dec das dec pop test and mov sub das mov mov pop sbb ss mov pop xchg adc or cmp leave mov popa fist cmp ljmp dec sub and inc stc rcrb or mov imul test ja,pt cs call xchg jle lods add sub loope (bad) push mov enter or pop fstpt rcr sub lods lahf (bad) (bad) (bad) incl into or adc inc push push test and inc push mov inc je ret pop adc sbb jle fwait out jle insl xchg add (bad) mov pop pusha lea mov jg mov bound cmc cmp (bad) (bad) (bad) decl xor cmp lcall fs xlat imul mov pop outsb jbe lret (bad) (bad) (bad) lcall dec mov mov mov in cmpsb orb ja inc jle mov (bad) decl scas mov clc dec mov inc and inc mov (bad) (bad) incl pop cs shrb push ret pop in inc jnp cmp (bad) (bad) jmp inc adc or add loope stos sub adc pop cwtl add (bad) inc xor add xor stc inc push mov xor mov push add sub hlt mov mov outsb mov sbb adcb (bad) ljmp (bad) cwtl (bad) leave lea lret cmc sub push sub mov decl jno adc fstpl leave inc dec or jp or pop sbb std (bad) cli (bad) icebp (bad) dec adc pop jmp or push loop mov adc (bad) push xchg and mov decl xchg and sub add pop scas (bad) xchg hlt (bad) jae mov into dec imul (bad) fild add sub xlat ficom rcrl pop xor xchg add jge pop push les sub bound mov cli (bad) sarl clc (bad) jg cli pop cmp mov mov fs loopne mov sub push lcall inc (bad) pop pop icebp or mov (bad) sbb ds push or adc repnz (bad) (bad) mov fsubs pop sub aas mov xor lock pop or or ds int3 fistpl inc jge lahf inc (bad) (bad) (bad) push or push adc cmp xchg std xchg adc (bad) dec push cmp (bad) loopne add jmp cld mov mov dec lret int3 xor data16 mov (bad) (bad) (bad) jmp lret mov cmp xchg lea xor ds mov (bad) fdivs mov cmp mov fisttp or test xchg shr xor test daa pop clc incl ss mov mov (bad) (bad) (bad) call jle and enter or cmp mov leave cli ja mov je lret (bad) (bad) (bad) pushl add in icebp punpckhwd movsb (bad) push inc pop xor sarl mov mov (bad) ljmp mov jle (bad) inc push out (bad) mov sbb pop shrb (bad) mov mov adcb lahf fdecstp (bad) (bad) (bad) (bad) out or popa jae push sahf pop mov push js pcmpgtw pop mov (bad) add xor int3 int jg lcall lock dec inc push inc push mov ljmp (bad) js add mov lea jo mov and push cmp (bad) lock adc (bad) shrl incl pushf mov int dec mov pop jmp xchg xlat lret push lock dec nop dec fild scas inc adc js stos fnop push (bad) decl pop sub push add pop push jmp mov pop mov sub (bad) (bad) call mov jle repz add ljmp lret add sub incl mov (bad) push cs and insl fnstcw lds decl pop add mov push xor lcall loope incl xchg xor lahf cwtl loope cs pop clc (bad) (bad) jg mov loop sbb jp out mov ja test ja pop lock cld pop dec in or pop roll sub sub lret push jg cli fld (bad) pushl jae push sub fs daa (bad) fcomip mov push sub jle cmp add mov ficoml (bad) (bad) jg movsl stos inc mov cmp inc sub jns add aas ljmp js and push cmpl (bad) adc jbe push or xor pop movsl add pushf fdivs (bad) call std xchg leave sub test xor and push shrl mov rolb outsb rol (bad) pusha gs sbb jns mov cmc call and gs fsub addr16 in jnp sub leave or jg mov (bad) (bad) (bad) (bad) cmp cmp fisttpll (bad) aam cmp mov pop enter xor jl xchg (bad) (bad) incl arpl and mov jl add movb jns cltd cmp (bad) (bad) mov jg xor inc mov push inc aad test add movsl cmpsl jmp pop test add popa int3 idiv (bad) cmp (bad) dec and int roll jle jns cmp cmp inc mov mov lock (bad) mov (bad) (bad) in or (bad) cwtl dec jo mov xor mov lcall (bad) movsl or repz jne adc xor push ret pushf mov (bad) (bad) incl lods inc jecxz add sbb in xchg adc lret xchg sub jmp (bad) (bad) call mov xlat in adc jmp push cmp cli in inc (bad) (bad) dec dec xchg sub inc sbb std ffree popa mov (bad) (bad) (bad) dec xor lahf adc inc push jmp xchg stc mov pop fwait loop pop fbld sub (bad) jmp lea sub sahf imul test fwait inc popa xchg rcll (bad) pushl push sub je push gs jno adc dec (bad) (bad) (bad) push or testb addl mov or jg dec xchg outsl mov (bad) (bad) (bad) jmp hlt xchg inc adc pop fdivrs inc imul (bad) (bad) jmp mov sbb cmp insb lahf xor add xchg sbb push add (bad) (bad) (bad) fldt or addr16 fistl ret loop add xchg push ret xor jmp fs and loopne sbb push ret iret repz and pop gs mov (bad) call rolb jg xchg jp test stos test inc fdivrs xchg mov dec test sub (bad) (bad) incl sbb fild cmp xchg es jbe cmp das pop adc (bad) in mov adc xchg daa add daa add sahf es cmp stc mov and (bad) (bad) decl jbe push je fmulp and or addl ja nop xchg ljmp jl (bad) stos jg dec inc lret lods (bad) lods pop fiadd mov decl hlt adc outsb in testl (bad) (bad) decl int insb loopne fisttp imull dec es push ds pop sbb stos push test xor inc icebp (bad) (bad) (bad) jmp inc test in sti inc outsb mov stos jl xor incb pop icebp cwtl jmp movsb out cwtl je int3 aaa xor push pop xchg xchg or insb nop or aaa cld jmp lock (bad) push (bad) ja iret xchg dec cmc int3 cmp ds mov test add cmc lea mov popf sahf das outsl enter aaa mov sarl or out xchg loop and or adc (bad) (bad) (bad) (bad) call or sub inc pop xor push pop jmp test jg sbb leave clc (bad) (bad) in xchg das sbb test mov seto (bad) (bad) (bad) jmp sbb mov adc push jecxz lea sub das int3 stos (bad) jg (bad) fsubs sub push mov mov data16 test nop sar pushl jnp ja cmp xchg mov (bad) fmuls (bad) (bad) mov mov arpl push insl dec (bad) sbb sub mov setp pushl and mov or push fwait (bad) jg or ljmp jp mov sbb (bad) (bad) (bad) pushl arpl push sub push cmp pop int3 insl mov sahf cli push jle iret dec push (bad) (bad) (bad) lcall add insl push movsb push test pop insb push ror xor icebp enter adc pusha addl mov or scas (bad) fidiv lea or push dec mov mov cmpsb adcb loop or test dec add cmp jmp pop push mov jbe lds jle pop pop loop cs movsl jecxz stc movsb push out adc cmp pop cmp adcl aaa pop xchg and arpl or (bad) (bad) call (bad) loop xlat sub (bad) andb das fcomi shrl js lcall and or scas fbld inc fsubl cmp push mov in (bad) (bad) jmp das hlt enter mov mov out mov xchg lds dec dec shll lods push mov mov lret inc xchg pop jns lods stos sub shl fsub ficompl add inc mov or adc (bad) decl lock leave fucompp rorb dec jle out popa sub es imul test (bad) and inc dec jl jecxz lret mov and xor mov shll add mov and rcll lds push xor (bad) (bad) call loope mov pop rorl cmp mov xchg in sub jl (bad) jg (bad) jns rcl adcl aam popf sub xchg jne shll popa std inc (bad) lcall inc test mov add out mov mov or pop (bad) (bad) fbld or jmp lahf mov aad jmp add ret xor mov add jb jg mov mov fcmovnb sbbb inc mov pop es sarb arpl (bad) (bad) jmp sbb fldcw cltd jecxz int adc push bound mov jno cmp xchg iret mov pop hlt push into jle push mov pop fstl pop jp sarb ljmp ljmp jb cltd cmp jmp lock aad icebp insb and pop add outsb push mov mov sub jecxz lret enter jo ja push dec dec or cli dec pop (bad) pushl mov pop push xchg lahf bound sub fucomi (bad) jmp and ds xchg lret sub xor jns inc or xchg nop bound (bad) (bad) (bad) incl inc pushf rcll divb jp (bad) or inc jo popf push push insl data16 mov arpl fbld aas out shlb (bad) pushl push sbb sub xchg push in js clc aad mov and sbb inc cs icebp mov jmp (bad) ljmp pop test mov loop push push jle (bad) call inc adc (bad) jbe mov mov mov std icebp sarl orb xchg mov out xchg jns or std fdivl in popa ljmp ljmp sbb (bad) js movb pop ret ficoml inc int3 (bad) (bad) (bad) inc jne in out (bad) fldcw ds int3 adc adc mov adc push mov and inc cmp addr16 lcall mov cmp lcall (bad) (bad) jg mov cld inc push fildll lret ds xchg push xchg xchg (bad) mov mov cmp and (bad) call xchg xchg inc xchg dec push ds insl xchg ljmp sar xchg shrb xchg subl mov ljmp push and scas sbb jo mov dec or repz outsl (bad) rcll aas cwtl lahf add ljmp loopne xchg fadds mov cltd push inc mov shrb sub sbb (bad) incl adc imul sbb lds inc aaa sbb clc adc enter mov pop and adc jb pop mov fdivl mov call mov push das fsave fstl pop mov das ds insb jb lcall xchg jbe jmp jg (bad) (bad) pushl dec push xor jge push xor ss jne mov (bad) (bad) mov fsubs movsb xchg xor lahf xchg adc add lahf ja mov fistp inc fsubl mov inc xchg xchg ja mov pop stos dec repz test mov aaa std decl jo fwait xor jb (bad) pop sub mov mov adc lret popf xchg pop repz lcall enter (bad) pushl (bad) mov lahf adc cmp scas stos sub cld test add movsb and std aaa (bad) (bad) (bad) call lcall or js scas adc pop xor push daa in in aas icebp push addr16 adc cmp (bad) call mov or mov mov movsb push mov cmc icebp xor (bad) (bad) jg jnp icebp jp cmp call inc or int jne mov adc cmc mov push pushl add rcrb addr16 pop enter mov add pop push xchg adc cmp jbe lea (bad) (bad) jg xchg divb in pop cwtl jno inc test inc clc cmp out (bad) (bad) (bad) ljmp xchg mov (bad) cmc lret into fnstsw cmp sbb shr jg lods movsl sub outsl cli (bad) cmp mov mov outsb dec repz repz std lcall (bad) dec mov subl dec cmp inc imul (bad) lcall loopne adc (bad) jnp mov outsl int3 jg push and scas or adc pop xchg dec push clc ljmp aam mov jns cmp ds (bad) (bad) incl mov push aad push mov (bad) movsb mov inc jo jo dec in sbb (bad) out stos push (bad) js sub xchg xlat sbb (bad) (bad) (bad) jmp fcoml clc push (bad) ja ficom push test repz or jo push xchg xor jg sar (bad) (bad) incl ljmp sub mov inc mov push test xchg hlt fwait (bad) scas xor (bad) (bad) pushl xchg mov pop jl hlt adc loop rclb xlat lods mov (bad) (bad) push std call in xchg xchg pmaddwd pushf inc ret popf inc call jmp aas mov (bad) (bad) call (bad) andl push add mov jge xor (bad) (bad) pushl ds icebp mov mov leave push aam loopne fistpl dec lea adc fcmovb (bad) (bad) (bad) pushl jns sqrtps stos mov fmull xchg (bad) sti jns lcall (bad) incl mov push push xor add cs add pop sub ljmp enter inc out mov add mov leave shr add aam pop jns adc (bad) (bad) incl mov enter add cmpsl adc xchg sbb test addr16 xor ja incl pop rcrb lcall scas dec push (bad) ljmp (bad) mov push shlb leave out popaw sub decl push mov jno cmpsl outsb (bad) (bad) jmp jge cs adc movsl push pop lods shll xchg fisubr fwait push gs mov movsb dec mov mov push cld call mov xor mov (bad) jg mov imul and pop clc (bad) mov lods cmpsb es and (bad) lods jae jge pusha add (bad) (bad) jmp mov imul mov pushf jge frstor scas fs shrb outsl cli (bad) decl and mov xchg sbb adc push add (bad) (bad) (bad) (bad) mov cmc jp push into call cmp jne mov mov jmp (bad) call cmpsl movl clc sarb fisubr mov adc sti (bad) (bad) (bad) call in xlat push imul repnz mov jmp scas (bad) jl pop neg mov pop outsl add or sub in pop ret enter aad sbb adc std repnz dec repnz jg pushl shll shrl test fwait pop repnz (bad) (bad) (bad) jl jmp mov cmp xchg lahf fs inc xor ja imul out repnz mov mov add addr16 mov fisubrl xor mov adc cmc (bad) call xchg test dec inc mov mov arpl shlb dec cld adc mov icebp ds movsl cmp int3 inc inc std lock scas fstl jmp sbb std (bad) fdiv icebp jg cwtl sbb mov aad add (bad) lcall movsb push jnp sbb into ss cmpsl sti adc sbb fstpt dec lret (bad) (bad) (bad) jmp lahf rolb hlt xor xchg clc loop scas dec add pop cmc pop ret (bad) (bad) (bad) call mov inc stos mov xchg shlb mov lahf (bad) daa xor leave push sub dec adc push (bad) into nop sub mov mov mov jecxz sbb (bad) pusha xchg mov in sar inc inc xor cmp ds (bad) (bad) call cmp dec adc cltd cmp xchg mov mov push std imul adc cmp (bad) (bad) (bad) (bad) mov mov in or lahf pusha lea (bad) pop dec test std outsl mov lcall xor sbbb repnz and add mov xchg push inc rep (bad) (bad) (bad) jmp add in call dec mov adc inc std or movsb mov (bad) (bad) (bad) call scas inc push sub (bad) jecxz imul add outsb sahf mov call outsl pushl mov test xchg mov sub mov xchg clc decl or cwtl push push call mov (bad) jp icebp (bad) lret fnstsw mov loopne loopne xchg int (bad) std (bad) call pop movsb xor pop xor fsubs cmp into stc adc outsb out jle,pt int3 clc incl dec pop jp ljmp jmp (bad) out inc mov lods mov cld inc xchg adc (bad) (bad) fistpll or mov mov repz call (bad) rorl mov (bad) (bad) jg hlt jecxz xchg nop mov sbb scas out and xor (bad) (bad) lcall xor sti rcrb cltd mov test dec hlt xchg cmp (bad) (bad) (bad) fbstp in add cltd (bad) pushf cli dec mov enter mov or xor decl xor ss fistpll mov (bad) mov arpl jnp xor lea or mov add dec xchg xchg (bad) mov adc dec add (bad) cmp add push jo cld (bad) pushl sbb cmp (bad) adc rolb xor adc jns sbb fdivrs (bad) pushl sub (bad) out push jb pop dec sbb pop cli xchg jnp lahf push aas fildll (bad) (bad) (bad) jmp rorl lahf int3 jmp mov mov dec xchg pop bound xchg jmp inc pop lea (bad) (bad) (bad) pushl inc ds outsb mov out lods shrb xchg mul jne sbb xor loope fcos (bad) (bad) call mov test mov loop iret jecxz push fldt idivb (bad) jp mov sub pushl push fwait gs xchg out cld mov mov and data16 into xchg (bad) (bad) (bad) ljmp add test xchg mov jnp sahf scas jno lret pop es mov (bad) (bad) decl je mov into ret xchg out mov mov cmp and sti mov (bad) cli add adc stos fdiv fwait adc adc push xchg (bad) (bad) test aam add mov (bad) (bad) inc sub (bad) adc clc mov sbb or sbb pop or (bad) mov jmp xchg popa aas xchg xor out jo mov jno out and nop mov cmpsl aaa (bad) loopne xchg jg ja (bad) stc jp jae mov (bad) (bad) call adc (bad) out dec sub inc xor loope sbb mov popa cwtl adc pop add (bad) (bad) (bad) call mov cmp nop inc lods faddl sahf rorb pop inc movsl mov pop jle jge push or or decl daa mov xchg outsl mov sub cmp (bad) (bad) (bad) call xchg pop aad xor push mov mov fisubr movsl lcall (bad) incl or out lahf add pop popa push leave clc (bad) lcall pop lahf in dec push sbb sub sub (bad) (bad) incl and jge jg mov das das sar lea xor in mov cmp xchg and idivb es push xor ss les fcom in repz jp push pop mov (bad) (bad) (bad) lcall in sahf outsl jle or xchg lock add pop fs hlt (bad) (bad) incl lock cwtl arpl jl lods jo inc xor push scas pop int3 jne das mov call ds push je ror push push push mov mov cmp mov add jns dec shlb mov rorb pop sahf repz add ljmp (bad) movsl dec lea mov mov xchg pop leave xchg test xlat inc mov mov (bad) (bad) call fwait aam mov mov mov fmul mov and sbb mov dec loope mov push dec outsb into andb je scas and js incl pop es imul jecxz push (bad) (bad) (bad) lcall or mov sub sub lret cmp or cmpsb aaa xchg mov je lret (bad) decl mov sub inc push dec test inc or xor or xor adc out cmpsb andl (bad) (bad) lcall push aas xor (bad) xor lcall lcall cmp mov loop flds outsl push mov xor cld push (bad) (bad) decl push fisttpll sub dec nop addr16 push bound jg (bad) fprem sub sub push cmp xchg push dec pop in add sbb std out xor pushf mov or clc jg gs cmpsl and roll xchg in rcrb sar lds pop push enter push rcr loopne mov outsl add enter divb ds sti xchg (bad) mov inc push mov adc scas insb orb arpl ljmp in jl lods add inc (bad) test cwtl clc mov xchg xchg push dec push mov xchg adc push mov pop stos aam cmp jp mov lcall (bad) call loopne pop nop jb push jae ss inc cmp outsl ret mov pushl (bad) mov dec inc cmpsb imul jbe hlt movsb cs jp mov iret mov cs fcmovu mov sub (bad) (bad) call push fs fsubrl adc or cltd xor pop stc cmp xor out test (bad) (bad) dec cmpsl in int3 mov aam in es clc inc js lcall or out push enter (bad) (bad) (bad) push ds mov test mov sti sarb push pop and lret rcrl loope (bad) (bad) (bad) decl pop mov xlat xchg pop mov imul mov scas vcomiss xor (bad) (bad) (bad) jmp ret dec fiadd xchg push mov fcompl pop scas inc fistpll sub (bad) pushl sub dec je push (bad) (bad) decl mov add xlat inc (bad) lds icebp xchg lret cmp fdivs jg (bad) pushl mov jle jno adc dec cmp iret nop loopne jg jmp repnz ret sbb insb cmpl test loopne jb mov lods mov jb nop lcall ljmp loopne leave int3 hlt sbb fildl push test jno jg adc push dec (bad) ljmp cli loope dec sub push push (bad) loopne mulb xchg nop loope repnz (bad) (bad) (bad) jmp adc mov jo dec mov in pop xchg jne js push mov clc lods adc ljmp clc (bad) decl rcrl (bad) sub repnz (bad) pushl jge add mov shrl add fild fild leave inc ret jbe mov mov clc imul setnp jmp clc pop cmp (bad) ffreep or and (bad) (bad) lcall adc negb dec addl lock xor out (bad) (bad) (bad) jmp xchg repz mov (bad) mov mov mov cmp mov mov clc jb fsub mov in sbb (bad) clc mov lods dec jno mov jecxz fdivl call movsl out jmpw ds ss (bad) incl or jns xchg icebp sbb add push mov insb test lds sbb enter (bad) adc sbb (bad) lcall roll stc push rcll std and sbb cmp popa jge popw (bad) (bad) (bad) call jne inc (bad) inc iret mov inc cmpl mov xchg gs sub dec (bad) pop add (bad) call adc ret fs test xor sti scas stos fnop ja repz daa movq jo (bad) pushl ds pop jnp adc nop mov fimull dec push inc call and lods imul mov or dec (bad) (bad) (bad) (bad) mov pop cmc int3 (bad) loope addr16 xlat sbb loope cmp ficom mov and mov push sub add dec jno cpuid fildl ljmp (bad) incl imul pop fwait fwait cs mov test outsb std dec pop imul sub arpl xchg and in test (bad) decl and test cltd fidivrl xchg or jns mov pushf cmp (bad) (bad) (bad) decl scas mov insb imul mov jnp (bad) loop (bad) pop loopne hlt xchg mov cli (bad) mov xchg in jae push sub mov (bad) inc fadds jle dec or sub ja xor decl xchg sub js dec or lahf add lds add dec (bad) (bad) lcall das cmp push (bad) (bad) dec push cmp out lret call cmpsb dec call decb and hlt je fisubr jmp jae mov mov xchg stos sub push xchg arpl dec sbb push mov or xor inc add mov out push or xchg dec sub out test push mov std lods ja dec sub cmp lock jg test and and arpl push es cltd fidivr and and insb xchg sbb mov pop pusha add cltd and push les popf xchg ds sub (bad) (bad) lcall cmp cmpsb or inc add jbe in mov movsb mov xchg (bad) (bad) (bad) pushl xchg daa in andl inc repz dec stc xchg adc stc pop mov imul add (bad) (bad) (bad) jns,pt jl sub inc ret sbb es and cmpsb es fcoms std pop (bad) (bad) (bad) inc sub and mov sysret inc fwait and inc fbld sub xchg (bad) (bad) call into hlt and pop sub icebp fucomp sub nop cmp or mov ljmp pop add xchg aas sub sbb jg push aad jg mov mov std adc stos into orb cmpsb (bad) (bad) jg cld sahf xor in out mov les fildll pop push (bad) in xchg xchg (bad) (bad) ljmp lret nop gs push inc push cmpsl jb iret test mov call or decl and gs inc xchg scas out pushf inc pop inc mov fcomip mov mov ljmp int int3 push stos or or in incl mov bnd mov ss lret int in dec stos jbe xor (bad) (bad) jmp jl,pt push pop xchg orb push adc inc sbb push divb mov call mov nop mov cmp push mov out icebp repnz out negb add roll scas clc inc xor xchg pop sub enter ja lret aam cmp (bad) ds adc aas adc mov jmp cmp inc sahf xchg inc add mov out sub lock repz push or push fdivl mov cmp ret mov or arpl (bad) jmp scas inc push lods out cmp mov ret adc mov add pop push or mov (bad) fcomp pop pop xchg imul mov stc cmp iret xor (bad) rcrl daa push jne lcall popf cmpsl jbe scas (bad) call rcl or add nop mov gs cli mov (bad) adc jg (bad) (bad) jmp les and pop addl inc sub inc test (bad) jg ja push jnp mov imul dec mov hlt ret jg loopne lcall ljmp aas pop les mov pusha notb (bad) mov sahf fstpl (bad) fldcw (bad) cmp fwait mov or (bad) (bad) pushl sbb dec push out fnstsw in lock jg aaa popf fwait test xlat aaa or (bad) (bad) (bad) decl es ret in loopne mov mov dec dec adc fwait jno (bad) call test pop mov daa (bad) call xchg popf (bad) (bad) (bad) dec jmp adc pop fcmovb adc movhps int3 xor sub movsl xchg sti push sub clc dec push insl repz cmp jbe test sar adc sarl mov sahf insl stos es call fstpt pop jbe les leave rorb fstl (bad) (bad) (bad) (bad) std mov nop popf push and sub inc fsubp sbb mov call push es (bad) (bad) call jg mov (bad) sbb mov jle cmp pop cmpsl mov mov xor mov push inc mov mov lret mov adc imulb push push shr xor (bad) jge insl add mov hlt sub sahf and adc jns popf stos data16 add call in xor es icebp dec mov add (bad) ljmp jmp lds call (bad) (bad) clc xchg fimul incl or and cwtl mov stc test mov cmp cmp (bad) mov add pop or jge push sub (bad) (bad) push mov (bad) adc sub sbb and dec or xchg (bad) jo loop (bad) incl pop imul sub cmpsb and push jge mov jmp mov fcomps pushl jle insl ret insl jmp xchg sti xorb sbbl (bad) (bad) (bad) decl jmp (bad) push pushf cld scas mov mov arpl xchg push cmp into cmp (bad) cmp mov pop test scas shrl imul pop xor xlat rorb unpcklps cvttps2pi (bad) (bad) incl pop push repz test sub mov leave add mov jle lods (bad) (bad) (bad) lcall repnz cmp inc idivl (bad) push gs mov in inc enter inc adc xlat xor (bad) jnp jmp add cmp lods sub and mov fiaddl test push sahf (bad) (bad) (bad) jmp mov ficompl mov mov push mov jmp lcall pop mov into lret (bad) mov je cmc movsl xlat outsb push or cld (bad) (bad) pushl mov mov sbb push xchg jo mov mov adc pushf xchg incl push into (bad) (bad) int3 jns and outsb test (bad) mov mov cmp sub mov enter push shrd jg sub mov sbb scas setb aad icebp fbld les ret mov (bad) (bad) (bad) jmp loopne add lea add lret mov sbbl (bad) jmp (bad) mov fmull sub cli and push inc jno out sub mov (bad) mov inc test scas out cs fsts jns rol call call adc jp mov (bad) or loope mov jle popf aas inc xchg out mov push cwtl push ljmp in dec push mov dec add push push shrb xchg inc xchg cli ja (bad) (bad) push (bad) in cmpsb jb mov stos xchg pop and out inc adc jl gs aaa movsb mov (bad) pushl sub adcl mov adc pop or adc jg or cs mov in subps adc mov repz mov xor (bad) ljmp fprem1 cmp ljmp sub jle xchg (bad) (bad) lcall aas (bad) movsb (bad) out xor jmp mull divb pop xchg adc (bad) sbb sbb mov rclb out pop cmp sub pop add xor mov adc fadd push xor or aam xor into cmc adc js mov clc shlb sbb (bad) dec scas test jnp or dec (bad) mov pushl (bad) rorb mov dec into inc imul fwait cmp pushf pop std (bad) (bad) jmp sbb xchg hlt inc push push mov jnp imul jge (bad) (bad) mov push inc push mov sbb outsl xchg push add lret or or (bad) pushl cmp sub adc push popf (bad) push xchg int3 fprem outsl push mov test or mov aam mov pop popa pop fbstp pusha imul (bad) (bad) call mov jmp out mov aas sub ss (bad) (bad) lcall je add pop pop mov sahf cmp sub push (bad) (bad) (bad) pushl adc mov (bad) (bad) into xor dec sub lods daa dec dec jl test push add sbb or mov inc scas sub out fnstcw scas lcall (bad) loope (bad) (bad) push push mov pop sahf inc stos pop fimul adc push sub fdivr dec movsb pop repz (bad) decl push std cwtl mov cli or xor jmp cmp mov aam lock inc cwtl cli sub out sarb (bad) (bad) fbld xor pop pop je (bad) jb movsl mov or cmpsb test (bad) pushl and mov leave mov daa cmp xchg test ret sar (bad) call pop jne inc sub xlat lahf mov (bad) call push out in repz pusha and lods pop out (bad) (bad) pushl pop mov jl cltd mov mov in mov (bad) (bad) (bad) (bad) clc xchg cmp cmpsb stc in cmp adc push into dec divl lods bswap fsts xchg (bad) (bad) (bad) decl or cmc xor pop popa push pop push mov and adc sub and xorb aas mov jmp lret fisubrl add jmp test test stos stos jg dec jl mov xchg cmpb mov (bad) (bad) (bad) push sub call ret mov pop cld mov push jmp shrb mov imul xlat out pop sahf fcoms cmp add int3 cmp test sub (bad) inc add out jbe imul rolb pop cmp test (bad) (bad) (bad) jmp ljmp xor mov std ja (bad) fcomip mov push cmp repz popf mov ds (bad) (bad) call aam sahf outsl leave lret and pushf (bad) das jge fcomps pushf mov (bad) (bad) (bad) jns jg sub mov ljmp in xor (bad) (bad) mov scas stos insl clc push out jl mov (bad) scas xchg adc pop nop push mul (bad) jl (bad) decl or push fs mov rcrb aas out adc leave icebp (bad) push sti lea and aaa lods dec xchg test or nop sbb lcall dec mov imul adc sbb mov (bad) std dec fucomi loopne test mov fstpl mov and cmc add iret loopne sti inc mov (bad) (bad) (bad) call mov ret pop ds out pop dec into xchg adc (bad) mov addb (bad) (bad) (bad) cld (bad) cld lret xchg ss out adc scas push ret push and dec mov scas (bad) (bad) (bad) pushl xchg sbb cmp lods pop sbb jle ds push and sub mov push stc pop loop dec pusha jle call fldl (bad) jg pushfw (bad) push das ds sbb jg mov jbe push pop sub incl fldl adc (bad) mov lock (bad) (bad) pushl shrb and adc sbb popf sub scas (bad) lahf jge imul (bad) incl xor adc mov loope mov daa mov jle jae sub mov (bad) jg (bad) call clc mov cli sub inc sbb push xor push fcmovb jnp dec call xchg ds xor ljmp scas in test push lret inc xchg cwtl inc into jne hlt jae (bad) (bad) (bad) pushl mov ljmp push push mov mov rol pop jmp sbb decl (bad) flds adc mov push xor cmpsl out xchg jae cli (bad) (bad) fsubrl xchg jnp jmp xchg fs or loopne push sub cmp (bad) (bad) decl fs outsl jg pop dec mov cmc mov mov shrl dec mov jne iret popl xchg (bad) imulb xor cld (bad) pop adc popa jo les mov sti (bad) (bad) jmp in inc sbb imul lods jecxz (bad) sbb jo mov and (bad) (bad) jg cs aad pop test in jecxz leave gs scas cmp flds (bad) (bad) ljmp cmp mov subl (bad) cwtl add sbb lds xor (bad) (bad) (bad) pushl xchg test (bad) cmpsl pop stos jmp pop orb jmp jo pusha fdivl movl into aas (bad) pop inc jnp sbb stos aam ret sub sbb xchg dec neg sub or xchg push mov add loope out clc (bad) cmp mov cmp mov mov (bad) fdivr call push addr16 mov or or es repz decl inc dec ds (bad) je lret (bad) (bad) (bad) jmp inc addl movsb pop ss xlat xlat int jle lods jne xchg cmp fstps cli and (bad) (bad) (bad) mov rcll jl aaa and leave decl mov in daa xchg push inc push popl (bad) (bad) (bad) jmp outsb mov in repnz adc jp test call push pop ja sbbl lds movsl dec inc cmp push adc (bad) (bad) (bad) dec pusha (bad) sub cmc jb xchg xchg sbb adc rcr or shrb lock pop inc in jnp xor mov cmp jge (bad) mov mov lret jg outsl ljmp pop jno cld cmp hlt and xor movsb arpl push (bad) call cmpsb inc (bad) or aas je (bad) adc cmp out push xchg inc (bad) mov fcom mov in mov lods push xchg inc jle (bad) push mov xor mov aas add mov repnz pusha dec inc sbb cmp (bad) ljmp in or lds xor mov enter outsl cld enter jg fistpll inc clc add jmp fwait je add mov cmp imul loopne (bad) incl fmull xor aaa push mov mov in push pop inc ljmp sub pop nop push (bad) mov (bad) mov and (bad) mov mov adc mov fcompp xchg into mov daa push (bad) (bad) (bad) jmp lds xor pop ret call (bad) je mov pop sbb (bad) (bad) (bad) call cltd jnp cmp in std pop push leave inc lahf mov pop jbe pop mov sbb pushl mov push lret icebp cmp jecxz insl xor inc cmp hlt (bad) mov push jno or mov mov (bad) (bad) pushl stos iret mov outsl pop (bad) pop in or orl mov call jb and (bad) (bad) call cmp das add bound cmp xchg and jns fbld add push xor sbb lcall pop enter icebp hlt es xor mov call cmc (bad) call jno aas adc repnz mov sbb je pusha clc (bad) incl shrl add movsb jmp cmp stos ret (bad) (bad) ljmp inc fst mov icebp mov aaa xchg dec imul cmp (bad) data16 mov (bad) (bad) push mov cs dec (bad) cmp and or inc fs (bad) mov adc push pop mov adc mov sbb std ljmp dec jge push popf cld bound (bad) std jo add sbb lods jp jl ja lcall (bad) and int xor mov inc std enter outsl gs (bad) (bad) mov stos adc sbb inc adc jnp les push mov repnz test ja dec (bad) (bad) push mov xlat cs mov dec imul adc sub stos jb call std int3 sbb or addl (bad) mov rolb push (bad) dec sbbb cmp xor (bad) or (bad) jmp movsl push ret aad aam pop stos mov mov loope (bad) (bad) out sub fnop mov arpl sbb jmp xchg insl dec sub dec jg and adc sahf popa and lcall aad and cmp pop in xchg aad (bad) (bad) (bad) pushl jo push sbb fisubl xchg nop adc lods std mov jns push or (bad) (bad) (bad) (bad) fmull inc int inc inc rcrl mov in inc test adc dec sbb (bad) (bad) (bad) call fucomi cmp (bad) push mov aam add scas fmuls shr sahf adc pushl std jmp call jns or mov int3 out aam data16 inc or inc jmp dec cld test push fimull dec loop (bad) (bad) (bad) cmp jecxz mov mov sarb dec jne add and (bad) (bad) mov jge mov sti outsb inc in insl popf push mov jecxz pop inc jnp and jnp mov jmp test daa jle mov mov inc aaa std jg mov xor shll inc (bad) (bad) (bad) decl test les inc xlat pop push push rcrb mov in sti mov (bad) (bad) (bad) lcall lods sub dec fdivl pop inc iret repz mov dec sti popf pop and (bad) (bad) lcall (bad) push xrelease dec add shrb aam jp sub cmc and and loop fldt sub fisttp push xchg repnz cwtl inc loopne jg (bad) (bad) (bad) (bad) in mov fcomi adc mul add imull pop int fadds (bad) call lcall inc imul jge inc mov leave pop lcall sbb xor mov mov adc rol dec (bad) (bad) incl ds pop out lcall dec (bad) inc outsl xchg shrl fwait (bad) decl (bad) dec pop clc mov (bad) fs dec pushl (bad) sbb pop pushf rcrl repz inc mov pushl adc push dec rorl xor pop mov dec sbb arpl addr16 jne pop jp cli mov mov decl pop and insl ss fstpl push dec xor ljmp (bad) (bad) (bad) lcall pusha pop insl daa cmp jp sbb sub je jecxz aaa (bad) aam cmc ds js cmp push std jmp mov xchg out cmc int3 test sbb imulb fmuls inc test mov (bad) incl (bad) cwtl dec jge jae add movsb aas fdivrs sbb sti in int cmp push sbb cli in in pushf notl jnp rorl dec out cmc xor cmp std (bad) jg push xor popf mov out in jmp jmp xchg (bad) incl mov mov jle and (bad) pusha push jbe xor (bad) incl push idivl add int jns xchg cmp in clc addr16 (bad) (bad) jmp dec xchg movsb hlt ljmp push daa mov pop (bad) sti (bad) (bad) (bad) fildll data16 sbb repz and je adc cmp aam and retw aas lds daa or inc (bad) cwtl jg les push call (bad) decb in xchg loopne in daa mov cwtl imul push cmp adc sbb cmc in dec inc pop dec loop mov jns add mov (bad) jmp cmp sahf adc int3 cmc cmpsl (bad) in (bad) mov imul (bad) add sbb mov pushl cmp cmpsb adc cmp xor sbb mov pop mov lock xlat mov pop stos xor jg jnp ss lcall (bad) jmp lods nop adc popa hlt mov jg lret arpl or es dec lods pop adc add mov (bad) (bad) jmp arpl lret or les add push inc adc leave dec (bad) (bad) (bad) (bad) cmp cmp dec xchg push insb ja int imul xchg (bad) ljmp int3 push push push fnstenv scas adc jb push cmp les inc sub jg incl insb jo loope pop scas and aam fdivl adc jmp dec inc sbb push jne dec lcall xor and mov (bad) mov inc pop mov (bad) push mov test pushl movsb insl test outsb mov dec xchg imul inc xor or xchg adc test dec les jns xchg lds mov test in pushl pop cli push xchg sub or adc sbb sub dec add (bad) (bad) decl mov pop aad inc mov push cltd mov cmp scas fnstcw roll ret (bad) (bad) (bad) decl pop cmpsb loopne add fisub mov mov sarl test mov iret lods test stos cli cmp icebp and addl sub (bad) fs or imul faddp sahf out and loopne,pt imul cli jns jmp outsl roll mov jle in pop addr16 test incl mov bound and popf pop push jo xchg cwtl sbb movsl cmpsl and (bad) (bad) lcall pop leave xchg xchg dec sbb fadd or jno mov pop ret mov imul (bad) (bad) jmp in shr cmp mulb es sub sarb mov (bad) (bad) (bad) cmp dec hlt test inc aaa dec jnp (bad) dec rol dec in and and xchg insl cmc jg add jae insl push add clc mov mov loop lcall jecxz sbb xchg scas or nop fisub imull (bad) (bad) mov and or sub int mov xor ljmp rcrb sbb xor sub lods negl fdivl insl stos repz or adc fcomip lcall jg cmp inc inc pushf outsl stos pusha aaa aas das xor pop lahf ja cli decl push push xchg jmp sub repnz inc xchg (bad) (bad) (bad) (bad) ljmp rcrb in dec rcl fnstsw mov les ret stc sub push dec test pop gs js rclb xchg sub adc dec jg popf mov cmp xor (bad) cmp cli flds scas mov push inc je rorl out mov pop mov jge push call popf arpl push jecxz xor add inc or cld sub mov fsubp and ss and jnp adc lds rolb push (bad) (bad) (bad) jg inc xchg push fadds (bad) outsb popa leave jge pop cmpsb fbstp xor jle add outsl mov ljmp scas adc repz incl inc sub jns and pop and jmp pop test ljmp add movb xchg mov scas vmovapd xchg pop sub aaa push mov (bad) (bad) lcall mov sub imul fnstsw mov lahf scas mov xchg cmp test test enter add mov repz sbb pop std popf mov inc pop idiv inc stos sbb mov clc (bad) (bad) (bad) clc sub xlat and mov sub iret fiadd mov pop push pushf pop sbb inc push sahf adc lds sbb (bad) (bad) (bad) jmp inc sub js ret fcoml (bad) int3 out cwtl pop or call push cmp (bad) mov xchg daa xchg rcll push lock mov pop cmpsl pusha pushf and das mov jl sub dec adc adc mov and xor xor or outsb in test cmpsb loop roll push mov (bad) decl xor or add mov sbb popf push icebp daa push (bad) jmp mov in leave jns sti xchg xchg push adc divb loope les and mov fsubrp push mov dec sub jnp,pt test pop or adc pushf pop cld je inc clc jns leave xlat call (bad) (bad) cmp jmp xchg jecxz lret xor sbb push cmp add sbb inc ljmp sbb xlat fcomp and ds arpl lds (bad) ljmp lret mov jp push mov (bad) (bad) jg pop (bad) xor xlat cmp in ret (bad) pop xchg jmp lock popf mov cwtl adc inc sar fs inc dec xor pop adc test dec mov (bad) mov call cmp push pop loope lods inc pusha dec shld mov push mov cmp ja clc push aam lds (bad) (bad) ljmp fldcw inc fwait (bad) icebp in jmp dec push mov imul sti (bad) (bad) (bad) ljmp imul mov mov stos xchg adc push cmpsl sarb mov aad cmp xchg rcrl outsb xor (bad) (bad) (bad) fidivr rolb jmp sub icebp sub (bad) ljmp or (bad) fisttpll pop mov mov mov sarb lcall inc lods lods and sbb mov loopne push mov pushf and jecxz sbb aad shll cld cmpsb pop out das sbb sub (bad) jg and xchg pop mov cmp lcall pop inc pusha (bad) (bad) (bad) jmp iret jb push sub inc ja lods movsl inc xor in or insl pop loopne pushl mov jo je scas jns je fidivrl std out mov ror (bad) (bad) (bad) jmp cld cmpsb je mov mov sub mov mov imul (bad) mov aad cltd in inc lcall imul loopne cmp cmp rol out (bad) (bad) (bad) mov daa and push inc lds xor cmp or (bad) (bad) (bad) call dec sub ret inc xchg xchg push ret cmp push pop mov push fucomp loopne and in fwait repz fmuls dec movd xor fstpl and (bad) sub mov (bad) (bad) (bad) fisubrl cmp push or dec jbe out fs into icebp fild test (bad) in add pusha sbb sti (bad) push push cli popf icebp inc pop clc add xchg sub (bad) (bad) (bad) fbld addr16 cvtdq2ps sub movsb rcrl lock fstpl test (bad) data16 mulb ds sub es inc fcoms sub xchg (bad) mov ja cld (bad) pushl sahf cmp inc and pop pop pop adc cmp dec adc clc xchg mov call sbb decl fistl into push and xlat push in pop es or (bad) (bad) ficomp jne mov push nop xchg fdivrl sbb adc jmp push arpl (bad) (bad) incl jae jmp xor mov and pop push std in enter (bad) (bad) (bad) ljmp pop cmp cmc lds xchg adc push fs mov mov mov (bad) (bad) (bad) mov fstl pop add ret push add dec ret iret jecxz or xchg js fisttp sar lcall push xor and out ret inc xor (bad) pushl aad les add xchg mov int3 mov sbb xor mov incl mov jl pop data16 sahf (bad) (bad) lcall xlat mov (bad) insl test or mov xor es inc mov and dec ja mov sar ljmp loopne icebp mov xor jp (bad) (bad) (bad) aas push adc insb pushf push xchg adc cltd test mov mov dec mov or icebp cli (bad) (bad) inc ds sahf cmp xor push jecxz cmp loope dec inc mov outsl pop sar outsb sarl loopne call je loopne cld pop (bad) mov dec mov sub inc sbb int3 ja (bad) (bad) (bad) pushl aam ficomp repz add sti adc arpl leave or sub or add xchg ds in (bad) aas imul pusha in int inc scas mov xchg mov lcall (bad) (bad) inc aam outsl pushf mov out imul sarl lret inc xor aas cmp sbb cld (bad) dec push and add loop mov xorl pop xor js (bad) push (bad) cmc (bad) pushl jbe pop adc xor pushf call pusha pusha es cli xchg pop hlt (bad) ljmp mov jae xor add jns ja fcomip (bad) jmp mov or jno xor jo dec jne or js push xchg out adc pop mov sub stc pop sub (bad) sahf inc sbb (bad) je or outsb test cmp push out flds loop call shr addl call icebp inc sub cmpl ljmp ss mov xor push xor push (bad) (bad) (bad) ljmp pop mov sbb push inc iret stos push (bad) pop in out pushf loopne xchg mov lret sub (bad) lcall jle rsm in pop adc mov xor inc bound jge push xchg ljmp sub (bad) lcall shrl ja std push or int pushl fisubr into sbb dec xorb loopne dec icebp xchg insl inc lcall hlt cs outsl cmp cwtl mull pop cmp or cld xor std aas (bad) (bad) (bad) (bad) mov jo in add ja and enter push lcall in incl jl es jmp mov xor ljmp cld scas call jnp mov ds std pop loopne push scas xor dec mov mov xchg adc std cs and hlt jp mov sbb clc or inc (bad) mov (bad) (bad) mov or pop ror inc inc notl jbe push arpl jle push and inc in xchg xorl int3 (bad) jg jg sbb push lahf iret ja cmp and hlt pop test pushf loope,pt (bad) (bad) cmp imul sbb mov mov (bad) mov sti pop adc rclb or inc jns movsb (bad) mov cmpsl out adc inc xchg (bad) incl sbbl adc into inc jl or pop xor (bad) in adc (bad) xchg (bad) hlt sahf dec dec xor pushl fdivrl pop push sub repnz lahf pop xchg ror and cld mov push mov fcompp ds (bad) (bad) jg lahf xor cs leave ret pop test out pop adc jle iret push daa jnp ds (bad) (bad) incl sub inc jne je and in cltd stos add fmull stos lock incl cld sub test cld cmp dec cmp lahf movl pushf pop inc jg test bound sub (bad) (bad) (bad) (bad) fbstp mov sbbl aad fsubrs les outsb mov (bad) (bad) (bad) jg add mov arpl and jecxz pushf and outsl addr16 dec (bad) call cmpsb (bad) loope mov call (bad) xchg xor mov or (bad) mov addb es outsl movsl out push inc addr16 xor shl push pop (bad) (bad) xchg ds xchg arpl cmp (bad) (bad) (bad) jg xor xor or loope inc pop or rcrb clc sub mov (bad) incl jecxz das lock add push adc les push pop sub ficoml (bad) jmp (bad) add jg push push int3 fiaddl (bad) mov mov lods (bad) xor push mov test adc out fcomps mov incl push pop mov cmp (bad) incl rorl stc cs push (bad) push lds enter lods jle lahf (bad) notb lods (bad) ljmp or arpl jmp (bad) xor xchg out ds cld pop lea inc push lret xlat and enter (bad) mov pop enter outsl mov ja test inc jle cmc mov pop push push jbe call fnop jne ds bound sti insl data16 (bad) (bad) (bad) mov aam rolb or and roll in xchg jb insl lcall mov lret out (bad) fdivs ret dec ljmp add shl adc and cwtl (bad) ss sbb clc (bad) lcall dec sub cmp jb mov adc xchg (bad) cli jae dec into pop pusha jae push xchg std mov pop jmp dec mov out loope lock (bad) inc dec ret cwtl push ss pop (bad) (bad) shrl enter out fsubrs dec adc and cmpsb and clc out adc lds push lock inc xchg jecxz,pt xchg loopne cld (bad) incl push adc mov xchg stos hlt dec lock ss ds push andb popa (bad) (bad) mov push int3 xor sar sbb jle (bad) in fildll sbb iret sub inc sbb inc mov pushl mov andl or adc movsb or in dec push int3 sti mov dec (bad) (bad) lcall les add mov lods inc sbb mov adc cmp pop sub fsts jbe (bad) (bad) ljmp aam leave or (bad) inc ljmp mov add pop lret xor aad les jae (bad) int3 mov sbb test cli xor and scas mov cs incl push cli adc repz in ret push fistpll sti push (bad) pushl cmp cs adc out xchg jecxz fcmovbe clc inc sub outsl mov fwait sbb (bad) (bad) (bad) aas mov ds lock and and insb or loope out mov in or (bad) jmp cmp or mov jns add ss lods or clc jge dec lahf mov ds xchg mov mov inc adc jns adc xor lods (bad) (bad) (bad) ljmp out out out movsl dec pop mov jecxz cld fisubl sbb pop addr16 test jg rclb push les xchg (bad) mov mov ja test int push dec gs mov ret cli fstl mov test sbb inc inc inc adc rcrl in (bad) pushl std mov inc es lret les mov cmc ja mov (bad) (bad) push in lods sbb mov dec pop outsb sbbb mov cli inc test ret insb std shl aad mov (bad) lods push pop mov cmp xchg addr16 bound and fwait out mov sbb cmpsb mov and push mov fnstenv fwait mov call ja jge outsl dec or es addr16 jp,pt daa shlb xlat mull mov add enter js (bad) jnp (bad) (bad) (bad) call aaa scas jbe das add push xchg or mov imul adc ss data16 decb je mov add insl sub push outsb (bad) lock lods adc das lret scas and (bad) (bad) (bad) call es fwait mov cwtl je fs push add scas push fldl cli (bad) (bad) call in add mov insl add cmp sub insl int3 cmp push cmpl ja push loopne leave pusha ja jne lahf (bad) (bad) (bad) incl loop pop in lret fmull or xor xchg push ss (bad) (bad) (bad) (bad) jmp jg jbe sahf adc inc and loop js cmp add pop jb xor popa mov cmp repnz add and jg xchg xchg adc aad rcll loope fwait cmc and dec iret and in icebp (bad) (bad) jmp inc sub imul jmp in sub into cmp ja clc pop (bad) jge,pt mov cld and lahf ficomp (bad) (bad) (bad) jg and push xchg daa mov mov divb scas gs fdivs stc xchg cwtl xchg lea xor xor (bad) (bad) out jns,pt test inc dec jns pop pop test pushf int3 xchg sbb leave push or movl ljmp cltd aaa adc dec cmpsw mov jbe pop in push dec mov fadds (bad) (bad) call jge or push pop xor inc push outsl repnz scas fcoms loopne xchg (bad) aaa loopne pop mov (bad) call add cmpsl push subl inc dec xor jle,pn jl (bad) shlb nop int3 sub outsb or (bad) (bad) push sub test fnstenv pop arpl ficoml lahf xor push movsb dec mov push xchg xchg or (bad) pop pop ficom xchg nop sbb inc mov push xor insb jae in jo gs in mov inc xchg cmp mov ss lds xchg mov into sbb test jnp sbb enter in (bad) (bad) lcall call push xchg xchg or xor icebp pop jnp bound (bad) (bad) decl pop dec mov sbb cltd das pop cli fisubr pop lahf enter outsb inc sbb cmpsb adc add cli push xchg jnp push inc inc mov int (bad) (bad) call mov and lcall jg lods jecxz inc das stos xor (bad) (bad) jmp cmpl movsb cmpsl jp enter mov (bad) mov xchg jno (bad) jg (bad) jnp xchg aad (bad) xchg jmp je popf popa cs fcmovnbe enter or and repz mov frstor or (bad) (bad) call sahf scas dec outsb les add icebp ljmp int3 pop pusha icebp mov icebp (bad) jmp mov pop scas pop push call cld mov cmc (bad) inc mov cli pop mov test lret (bad) (bad) lcall dec into pop push lods imul add sahf sbb cmp fcompl add mov push sbb sar inc inc adc mov lods (bad) (bad) jg mov lea push sti jl mov repz cli scas fwait sub fistp lcall mov outsb aam xlat (bad) ss sub aam dec lock push arpl rolb jle cld mov xchg push ds sar lea sbb dec and icebp sbbl pop jb lcall push mov data16 add ror jp cmc mov test sti dec or loopne add jge (bad) and cmpsl mov (bad) (bad) (bad) inc sub (bad) popa mov hlt andb popf cmpsb insb imul mov (bad) (bad) (bad) (bad) mov icebp adc dec inc jmp push mov sbb aaa int3 mov movsb addr16 lret (bad) push or or pop cld test mov push lret (bad) shr into into push fyl2x lock push inc gs push loop xchg xchg cmpsl loope sbb dec ja lods aam jns daa mov in mov dec (bad) (bad) (bad) jmp out ljmp enter dec test in (bad) or or test inc (bad) (bad) (bad) jmp or dec loope dec mov push sbb sti sbb sub lcall ds xlat bound sub jle mov inc xchg xor cld data16 lret ffreep xchg sbb (bad) (bad) pushl or nop xchg mov outsl sahf pushf jae xor int sbb push bound add sbb ljmp push push repz cmp aad fisubrl adc mov leave or (bad) scas (bad) (bad) fisttp jmp repz test dec (bad) ja add out adc push cld (bad) fcompl lock push loope je int3 cmp gs scas cltd fs mov jmp icebp (bad) (bad) jmp imul adc cmpsb add movsl push lret mov cmp in jae das shrb imul mov test jle fwait sbb incl mull in adc xchg (bad) je icebp mov aas (bad) in popa stos add mov std push bound jecxz mov mov dec (bad) (bad) (bad) dec inc jnp dec jbe (bad) faddl xor sub fidivrl inc and push mov and call cmpps stc dec rclb pop cmp pop sarl stos push arpl call das insl and mov aad dec sbb pop loopne into xchg xchg fldcw cmp cmpsb xor sar (bad) (bad) call dec push inc jle arpl and pushf outsl mov xor push (bad) faddl sbb incl sub sub xchg pop sub cmp mov (bad) fnsave mov lret ss ds (bad) (bad) call add jmp js lods ja push pop pop in int3 push and cmp jp jmp cli mov jae jl outsl jmp cltd cld (bad) (bad) jmp mov mov cltd mov jnp inc jmp js pop sbbb xchg (bad) jg sub and fdivl fsubr int arpl cld inc (bad) (bad) (bad) dec inc aaa out or xor lea jns jne push fadd cli sbb and jle call xor out shl (bad) fsqrt or pop (bad) fild mov jmp cmp fildll fcomip (bad) aas xchg je cmp rorl (bad) or dec int3 xchg aam addr16 (bad) (bad) (bad) jp xchg imul add adc repz stos pop scas lods cmp push (bad) xchg inc push or lcall into cmpsb ret stos push (bad) sbb xchg adc and (bad) dec or idivl cli cmp (bad) std push lds psrld shrb adc sbb lret (bad) jg or outsb cld pop mov inc sub cmp mov push (bad) incl js loope lods (bad) push or sub jmp cmpsl add insb xchg sbb xor cmpsl out ja andb mov sub sub lcall mov in fisttpll push cmc ror sti aaa lock (bad) decl je xor mov imul int3 inc push popf jl xchg mov xor leave repnz mov ss jecxz popf lock sbbl test push jmp mov mov sbb (bad) xchg test inc or mov daa xchg adc (bad) out cmp ljmp sar icebp cli in push (bad) jp sub mov sub cld dec nop push mov adc pop sbb (bad) (bad) mov cmp shl (bad) add sub mov push adc sbb pop pop aas mov lahf adc jno push cmc into (bad) loop test mov (bad) (bad) pushl popa incl sti in loop hlt loopne and (bad) mov mov cmp decl aad pusha daa xchg repnz in pusha mov test inc jl in enter decl sbb xlat iret ljmp js cli inc sbb leave jl (bad) (bad) (bad) (bad) (bad) in xchg loope into fmuls popa xchg (bad) jp outsl cs cs lret xchg pop or jle (bad) mov adc sahf out mov clc fimul adc (bad) (bad) (bad) incl xchg xchg popf mov push fwait outsb rorb outsb jp jg push dec add mov xchg inc inc xchg cmpsb (bad) (bad) (bad) xor int or xorl (bad) decl lcall adc mov and inc sbb ljmp add cmpsb insl xchg adc sahf test scas (bad) (bad) (bad) jmp (bad) mov stos shll xchg mov push je in push rcrb fildll (bad) ljmp sar enter jp mov (bad) dec dec dec pusha imul std in (bad) (bad) lcall cmpsb mov rorb pusha fidiv xchg add sti xorl (bad) push mov sub pushl dec mov fcompp andl clc movsl scas xchg pop insb fidiv cwtl xchg dec push hlt cld (bad) mov mov jnp cld xchg fwait test loop iret test call add jno pop push mov rolb std (bad) mov out subl jge or stos adc aaa jno movsl xchg lahf jg push enter jl inc stc pop sbbl mov outsb adc or cmp fsts lret xor in in push dec jnp mov inc sbb lea lcall std nop dec fwait dec call pop fidivrl add mov xor inc adc fs push (bad) (bad) (bad) (bad) mov sbb ret sub push test int and pop ret dec xchg (bad) (bad) jmp ret cwtl sarl mov mov (bad) jge xor inc mov (bad) (bad) (bad) call test mov fdivs jg add js jge xor decl out into out mov mov mov test rorl inc cld (bad) (bad) ljmp dec add inc fld xchg dec jmp clc push in mov shlb into stos decl lock and cmpsl (bad) mov sub mov jmp adc rorl dec insb scas adc inc mov xchg (bad) mov shlb lcall add cli lcall dec cmp incl nopl push fidiv jp mov (bad) lcall cltd dec adc mov mov or cmp mov lcall ds (bad) and sbb mov xchg inc stos mov fisttpl bound (bad) lcall (bad) mov mov rclb out add clc (bad) mov xor lea ret dec outsl add push cmpl xorl lds es popa xor (bad) call sub pop mov xor xor jb addl xchg dec add adc ds repz pushl xchg push inc js xchg fdivp or and push mov sbb (bad) (bad) (bad) pushl pop sbb mov mov fldl2t outsb lock or push pop ror (bad) (bad) (bad) call cmc xor scas sub inc mov dec mov fdiv inc cmp es and xchg jnp (bad) (bad) (bad) call mov lods int subl or xchg sbb std mov mov ja aam ja mov rol (bad) pop adc mov inc dec lods sahf push fwait (bad) (bad) (bad) (bad) call xor js jo xchg sub lock inc jl insb andl sbb lret pop cmp jbe inc pop in repz jb js (bad) (bad) (bad) lcall inc (bad) push or pop lret mov xchg mov iret loop cmp outsl loopne or test ret mov xor cwtl mov pop and movsb mov lret inc inc jmp ds add jg sahf int sub cmpsb test fnstsw jae int3 xchg sbb and xchg icebp fdivrl cmp xor fmul scas cmpsl mov adc pop scas (bad) inc call add (bad) xlat fdivr (bad) (bad) call jno dec xchg mov xor adc movsl sub pop imul adc mov mull mov mov daa int in pusha cli jnp xchg pushl (bad) (bad) fs xchg xchg mov loop mov sub movsl imul ds adc int3 sar (bad) decl cmc movsb repnz or inc ds nop or add decl sarb clc ds dec jnp (bad) (bad) jp mov xchg (bad) cli enter testl int3 out lock (bad) lcall push rcrb sub cmp mov mov js rcl jae cmc (bad) (bad) jmp mov add test test fdivrl inc or push jg mov cmpsl mov sti pop push jbe xor loope push (bad) (bad) (bad) call (bad) cmp mov dec dec lods mov imul cmp cltd dec fsubrl fs ds or int3 adcl mov std lret inc in lods pop in sbb fsubs fnsave and add (bad) (bad) (bad) (bad) (bad) jns sarl mov mov popa xchg xchg inc fdivrp repnz popf icebp inc push std (bad) (bad) cmp push push pusha outsl sahf in mov fstpt (bad) inc mov add lcall xor shlb inc xchg mov adc (bad) (bad) (bad) jmp dec daa ss push pusha (bad) jmp adc push (bad) imulb rclb sbb fs rolb xchg fstp lret in lcall lods mov mov push and les stos sbb or pop inc int pop int3 fisubr aam mov lea lock xchg scas cli adc jge std insl add or jge or gs (bad) (bad) (bad) (bad) ljmp icebp sub lock mov push addr16 test loop cs mov or sbb in clc fbstp cs push inc cwtl jae (bad) lcall stos pushw xchg push mov cmc push mov cli or (bad) jmp ret (bad) lea insl cmpsb std pusha mov bound fsubrl fsubrl sub mov (bad) and pop imul sbb (bad) xchg mov cmp (bad) (bad) (bad) in mov mov insl pop scas (bad) xor std xchg lret push stc push ret lret fs (bad) (bad) ljmp pusha dec jl mov ss int es lret jge nop mov (bad) mov dec jge sub je pushl sahf and xchg xchg mov (bad) dec mov sub or mov xchg mov (bad) hlt fsubl movsb and movsl inc (bad) (bad) movsb mov movsl push push lods out hlt jae outsb cmp pop pop movsb pop loopne decl (bad) pusha rcll adc adc leave cli (bad) (bad) (bad) fistpll cld cli loop and mov stc mov cld (bad) sahf jb dec (bad) (bad) ljmp je test add mov negb pushf push cld add js xchg dec std call mov imul xchg rclb (bad) or mov insb in xor xor push sbb daa rcll ljmp clc (bad) push add loopne mov or mov push cwtl roll (bad) lcall jmp out cld sbb jg mov push ljmp or push pop loop cs xchg cli jb cmp mov stos (bad) loopne inc icebp (bad) (bad) (bad) decl je inc sub icebp push out div popa bound push addl (bad) jg call outsl push mov xor adc outsb ss lds int3 push mov (bad) (bad) fcomip xor out je dec xchg cmp xchg ja jnp xor daa inc test hlt ljmp jb bound sbb xchg xchg stos in sub adc call (bad) adc mov xchg push stos push leave inc sarb ja clc scas cmpsb (bad) (bad) call cmp lock xchg aaa xchg mov lahf in test das mov sub mov cmpsb adc pop dec ljmp xor add nop data16 test mov inc dec pop push xor popf and ljmp test sbb jmp add ror cwtl xor orb icebp stos jae (bad) jge call or lahf test cmp ja mov stos (bad) mov sub dec cmp add fnop push call lock sbb cmc inc ljmp cli dec fnstcw or mov add imul test loopne push jb sub (bad) (bad) (bad) (bad) call bound bound mov or sahf jl xchg xlat lret jg aad xchg add xlat mov jne ret dec (bad) lret daa jmp call sti fdiv mov aas mov aad mov jecxz pop js mov out mov ss leave jg ljmp aaa std fisttp mov daa cltd mov add negb sub gs cmc cmp inc ds pop (bad) (bad) cs addl out mov and mov sbb mov push mov cwtl lea rol rorl bound daa popf cmpsb mov out pop mov sbb test bound cmp sbb push xor popf test xchg rcll jno jmp (bad) push int3 lods fs jns dec pop (bad) ljmp push fiadd mov (bad) ljmp mov push mov out stos adc (bad) aaa rorl mov (bad) cmp sub cmpsl bound (bad) decl sbb mov push jae fucomi dec push adc jnp lea adc test int3 pop xchg cmp mov mov cld add mov mov add or mov dec jecxz,pt add out and aas outsl clc mov int mov mov rclb xlat and jbe xchg inc fdecstp loop into add test (bad) (bad) (bad) call je cli push or nop add mov pop loope loope (bad) (bad) (bad) ljmp leave ja push inc lock and push or adc das sub (bad) jne (bad) (bad) pushl mov push imul or jae subb pop cmp into (bad) xchg (bad) (bad) call stos pop rclb add sbb (bad) incl test or xchg lock add mov (bad) mov fildll or mov mov (bad) mov repnz jmp subl cmc (bad) (bad) fstps (bad) jne mov jmp test fldl mov xchg (bad) (bad) (bad) push aaa adc stos ficom pop pushf repnz pusha imul loope and mov cli rorl call adc push mov (bad) fistp call xor mov push mov pop mov lods push cmp (bad) (bad) call jno xchg mov out ja jp js adc mov pop and je pop sub mov dec or push mov (bad) (bad) (bad) (bad) cmp loop fisttpll jg,pt lods int3 jecxz out inc in or (bad) fdivl ljmp (bad) incl fsubrl pop xchg sbb mov daa add pushaw cltd mov (bad) incl (bad) (bad) (bad) (bad) cmp mov stc push addr16 jne (bad) pushf cmpsl inc jecxz ficompl pop icebp cmp jecxz xchg call incl clc push mov (bad) movsl and pop fidivr mov sub mov lret jnp sub or jbe (bad) fcomip jmp hlt js int in adc scas inc xor enter adc jmp (bad) (bad) call xor mov cmpsl mov icebp sub stos leave xchg add (bad) ljmp xchg arpl and loope pop cmpb and sub pop pop mov inc insb cmp inc xor fsubrs jmp mov inc inc pop cmp mov (bad) push subb aam dec pop in std mov aas bound pop (bad) (bad) (bad) (bad) mov cmp mov fcomps hlt jno sub sub subb cmp push dec (bad) (bad) (bad) (bad) ljmp fiaddl cmp xor xchg lds (bad) (bad) (bad) in pop pop icebp adc or movsb adc mov stos ret repnz addr16 xchg aad das (bad) (bad) ljmp push cli xchg aad or and mov xor pop mov loopne xorl movsl (bad) (bad) (bad) (bad) (bad) mov mov jnp xlat mov dec imul fwait sub jl add (bad) (bad) call pop ss sub xchg pop jbe mulb (bad) clc pop xor jne cmpl ds (bad) (bad) ljmp in or dec jg mov pop jge stos in lea in sahf lret dec fwait (bad) (bad) call cmp sbb sub pop xchg push (bad) repz test icebp push pop stos (bad) (bad) (bad) (bad) inc daa in mov mov dec xchg jge and sub (bad) dec loop jo xor sbb repnz push xor jne in xlat mov push pop dec xor fsubp fcomps mov (bad) out popf pop ret gs bound loope xchg push jno (bad) rolb mov lret andl cmpsb cmp icebp es jle ds sub leave mov xchg fcos outsl es mov cmp xor mov adc stos mov lock cmp (bad) sti fimul cmpsb cmc ja mov mov or int mov lock fstpt stos mov mov mov stos pop jecxz (bad) pushl (bad) xchg out rolb or dec cltd lret add jb pop outsb cmc sub cli (bad) fisttp cmp and mov and pop xchg decl pop mov imul lahf jno mov rclb (bad) (bad) (bad) jmp mov or sbb ds xchg sub pop inc (bad) cwtl push pushl decl dec xor and pop test (bad) xchg ja cltd push xchg push lcall call imul cwtl dec xchg add sub ja lds (bad) incl push add and or imul and jbe dec mov sub xchg push dec or imul rcl and fs push push lcall fidivrl insb fwait jecxz xchg and sbb mov test shrb jp push push xchg xchg and ljmp xor adc (bad) jae mov pop test mov (bad) inc shlb pop iret out stos pop push sub mov dec xchg jge push inc out je movsl fsubr (bad) cmp in mov and pop mov int push lods jg (bad) (bad) (bad) lcall xchg pushf stos or loope iret mov mov mov stos mov pushl adc sbb xor dec xchg aas dec div repz fs mov inc jmp cmp cmpb inc test imul mov cmp repz std (bad) jmp dec rclb pusha shl xor sub repnz arpl xor push xchg mov push (bad) (bad) call mov inc repnz stos jae or lahf pop cmpsb stos leave (bad) (bad) (bad) fsubs pop lret pop fnstenv into push inc (bad) (bad) call mov aas mov (bad) in xchg sub pop or divb (bad) incl pop xor fidivl jnp lahf ss jmp call jnp stc or push (bad) (bad) (bad) decl pop or cmpsb int cltd (bad) pop pop in fs mov leave push (bad) out (bad) (bad) mov (bad) dec jnp jb cmp sub xor add in or jecxz sub stos mov mov mov or (bad) (bad) xchg sahf inc jg pcmpeqd sbb push lret add mov popf shl ds (bad) fild xor or fcom pop add cmp pop cmpsb cmp arpl mov loop hlt mov ss sbb lahf (bad) mov ret cs mov aaa std (bad) mov mov adc inc pop ret sub incb mov mov pop sub stos push jmp cmp jg test push hlt in mov cmp (bad) (bad) mov fistl ds fs lret sbb lahf orb lods call std inc scas dec jp dec mov and xchg mov (bad) (bad) aas movsb fiadd push mov mov or movsb test mov repz (bad) (bad) lcall scas js adc or icebp fildll pop insb incl xchg cli stos (bad) (bad) (bad) (bad) incl insb nop fdivr sti xchg add ja fs call test mov xor (bad) jno (bad) leave pushf mov fistpll push lds lret repz rorb stos sub mov push inc in (bad) (bad) (bad) call jle dec bound repz ss add fiadd es rclb aad or push (bad) in cmpsb and ja stos lds lret push xchg js jle jp (bad) (bad) (bad) mov pop inc nop jne lods ja push mov lods scas xchg mov adcb lahf mov dec mov pop rcl pop or aas aas xchg shll sbb (bad) (bad) (bad) jmp dec pop out lret (bad) shll (bad) insb mov pop cmp pop push push fbld ljmp out popa cmp (bad) notl add jb xchg sbb loopne imul push lds jle ljmp push push sbb pop push xor mov mov jb,pt xor cmp pop sbb jg divb push hlt lahf (bad) fcomp xchg rolb push mov lcall push and inc mov xor ficomp xchg jns mov add lea jecxz inc push xchg out xor jmp (bad) (bad) mov adc push mov mov outsb je dec icebp mov jae test jecxz and cmp (bad) (bad) mov pop xchg xlat mov sub icebp or mov cmp adc bt ljmp xlat xchg popf mov sub call xlat aam call jne mov ja pop adc ljmp pop out pop nop mov cld (bad) jmp ds popa cmp cmp popf (bad) adc (bad) ss xor in (bad) (bad) incl cs sbb and push das sub add imul or jmp mov mov xor xchg lcall pop pop fsubs xchg movups loop cli jb dec sub mov push ds (bad) (bad) (bad) jl lods sarb test loop jge ror jb ljmp int3 icebp (bad) jmp pop and cmc push aam rcrb outsb movsl pop add jg (bad) (bad) jmp aam mov bound adc mov popf sbb ja push shll negb cwtl clc pop lret insb (bad) call aaa (bad) (bad) (bad) pop movsl push jge pop repnz mov and mov ret sbb loopne cmp (bad) (bad) sti mov pop call xchg or lcall call push (bad) (bad) (bad) pushl fisttpl mov mov push add insl add cmpsl in sub mov mov cmp incb xchg imul add pop xchg ds xor (bad) (bad) jmp icebp sbb jecxz shrb mov divb das je cmp fild mov xchg mov pop (bad) (bad) (bad) decl jmp repnz fadds fldl es pop lret cmp movsb pop (bad) (bad) mov in mov mov nop inc cwtl rolb push or mov mov fcompl cwtl add xchg jge (bad) pop sub aaa in sar jge (bad) (bad) (bad) mov fwait scas push movsl lahf lock or mov dec daa je mov push rcl pop sti sbbb add mov imul insb lahf mov incl clc pop clc xor pop lret jge in leave test out xchg mov sbb (bad) (bad) (bad) incl pop mov add sbb int inc push xchg mov out dec mov or divl (bad) (bad) fcomip vpsubusb pop dec int pop ds and aas lcall (bad) pushl adc cld bound cli out imul mov mov jp mov xchg scas mov sub mov mov jecxz pop ljmp aad pop out jns fildl mov in add movsl ret leave dec (bad) (bad) jg jle into or cld in adc sbb fs sbb sub inc xor (bad) (bad) (bad) cli aam in mov xor pop jp repnz call in cli ja cli jg pop jl dec lds movsb ds lea clc mov sbb push push mov (bad) jge adc push xchg (bad) (bad) decl mov movsl bnd fsubrs lods xor cmpsb and or test fs (bad) (bad) jmp sub cmpsl push pop or ljmp jo test push pop in jno fnstcw (bad) (bad) jmp push rorl jmp jp aaa addr16 jae pop repz xor pop cmp (bad) (bad) (bad) jmp jge dec movsl cmpsl in out mov pop cltd push sbb mov cmp pop scas (bad) (bad) pushl add sbb nop ret xchg dec mov xor cmpsl xchg mov (bad) dec ret mov ficompl (bad) enter hlt sbb mov outsb cmc pop cltd cmp lcall cwtl dec fsub popa push leave xor jne aas cltd sbb mov pop jne (bad) (bad) (bad) (bad) sti sbb add xchg out dec aad fdivrs jbe add jge or scas mov cld (bad) (bad) (bad) incl test inc call dec jmp pop push sbb outsb inc cmpsl jge fwait (bad) mov (bad) (bad) (bad) jmp sarl xor pop fidiv mov mov adc (bad) mov xchg cmpsl dec pop idivl mov sbb inc test or mov (bad) lock (bad) (bad) (bad) ljmp lods (bad) arpl enter shlb and mov (bad) (bad) (bad) push and pop leave (bad) iret and rcrb or or and std mov (bad) (bad) (bad) jmp jl xchg add xchg inc call pop insl dec xchg jnp pop sbb dec enter popa movsl sbb inc push lock cwtl mov movsl loope add bound pop loopne push (bad) js add lea xor adc (bad) (bad) decl sbb rcrb mov inc loop push cs lret adc int or or jmp ds pop outsl mov fisttpll out stos add test fistpl je loopne insb mov dec xchg ljmp dec ds out clc (bad) (bad) mov lretw ror xchg dec mov aad dec iret out and cs test dec lcall add jmp subl or mov add pop pop (bad) cli cmp cmp mov cmp lret or (bad) jg mov ds (bad) popl aam call push outsb stos add xlat cld jb and xchg add mov jmp push mov es lret cmp inc (bad) jmp xchg mov pushf cmp sar (bad) lcall push repnz xor roll sarb jge scas lahf std inc test xchg dec movsb loope pop ljmp and jg inc xlat jmp loope fnop jmp icebp fwait loop sub and pop (bad) out mov hlt inc inc xor xchg add (bad) (bad) call fcmovu sbb mov add daa adc inc ljmp pop jle dec inc ds aaa (bad) (bad) (bad) call pop das adc and repz push pop (bad) mov ror cmpsl sti cmpsl push push js jl mov (bad) (bad) (bad) (bad) fdivrp adc fstps test cs in ficompl mov dec sbb pop (bad) incl cmp and xchg inc mov inc dec mov (bad) (bad) jmp jae (bad) xchg push push mov or fucom mov mov jecxz mov (bad) (bad) (bad) call mov adc inc inc ret push cmc std outsl ljmp fadds fcomi mov ljmp (bad) out adc or push jbe (bad) (bad) fistp imul inc xchg lcall cmp mov xchg mov hlt nop inc idiv (bad) (bad) jmp shlb addr16 jmp fmul aad je jne mov insb cli in nop sbb sbb test loopne jbe cltd lock jbe inc aas (bad) movsb sub (bad) pushl fldl push out cwtl mov push cmpsb cwtl push shr int3 iret popa mov xchg (bad) (bad) (bad) (bad) cmp mov jno inc inc adc xor inc and stc add mov ret jne jns mov test (bad) stc inc mov std dec push xchg push pop imul stos mov test ljmp xchg mov into imul pop push and xchg dec stos lods cmp mov gs lcall cmpsb sbb rolb mov xchg mov int3 jo jmp psllq add push mov pop push fdivl jo add mov (bad) (bad) mov into fcmovu xlat nop pop push fcompl (bad) (bad) call aas std adc aaa or fdivrs adc adc movsb add int3 aam movl (bad) (bad) ljmp les adc pusha add pushf sbb bound sbb ljmp test xchg (bad) mov (bad) (bad) (bad) call pop movsb int aad pop inc lds jae cmp mov pop out scas or mov dec push push mov scas pop enter sahf (bad) push call cmpsb dec mov mov mov and inc loop xor idiv jg test (bad) or test push sbb (bad) (bad) incl jb mov faddl fnstenv lahf pop push dec lret daa outsb push scas addl popa lret or pop dec cmp push sub sbb push out dec loopne out lea dec push or jnp sbb incl cmp sub dec fdivl sbb (bad) (bad) (bad) (bad) (bad) fcomp rcl dec jmp push pop mov mov cmpb lret idiv das cli dec jle fld cld sbb push sti dec sbb or adc pop mov aaa adc fistp ds sub (bad) (bad) incl in jb lahf push inc repz leave inc xchg iret dec cmp movsb mov movsb (bad) push cld (bad) (bad) incl fs notl adcl je fist adc adc lret jg pusha ds mov inc out mov out mov test inc outsl stos cmpsb fldt and mov pop jns sbb push (bad) pushl std stos outsl or pushf aad jae fcomp add outsl mov stos es (bad) (bad) (bad) (bad) cld xchg popf js inc (bad) fbld (bad) sbb mulb jl pop dec inc adc clc mov jecxz or mov and aaa adc mov stos sub or lcall or xlat (bad) lcall ljmp mov sbb pop pusha pop pop imull mov (bad) (bad) stc mov add or xor and jo stos andl int3 push mov (bad) jmp or xchg dec adc jg cld inc test aam nop sbb push (bad) mov add popf fwait insl test out bound aas push in mov jbe lret in (bad) (bad) (bad) pushl rol xchg clc outsb mov sub cltd cmc hlt scas mov ja inc fimul lods ret inc push (bad) (bad) (bad) call dec sbb mov mov xchg dec push scas xor xchg arpl adc cmp sbb out xor push push lea lea sbb fwait mov (bad) sbb (bad) (bad) call (bad) dec jae mov and dec jb outsb mov sbb push (bad) (bad) (bad) jmp sbb dec cli call popf jl xor sbb into mov pop cli pusha lods mov (bad) (bad) js or repnz mov sahf fwait lds mov in mov (bad) sbb incl mov cmpsl inc push out push insb jnp jp jge mov adc lcall mov dec std sub pop push leave lds push cmp popa lret jmp lcall inc xor pushl sbb adc ficompl in pusha std lcall data16 sub ds mov xor dec cmc jno sbb mov fistp dec jge ljmp test (bad) cmc and jmp mov lock mov jns fstpl (bad) insb (bad) out scas call sbb fs push lea jbe (bad) mov ds inc mov xchg mov shlb (bad) jmp popa pusha rclb cmp lahf addr16 subl mov ret scas mov xchg xor jmp dec sub js sarl and call sti (bad) (bad) (bad) mov aas scas pop push sahf cld insl mov or lahf cmp sub and (bad) (bad) jmp dec sbb (bad) and pop push popf sti ret je mov or sbb ljmp mov insb daa lods stos clc arpl cmp and fwait sub outsl aaa sub out cli (bad) aas out sbb leave inc outsb push fild (bad) hlt jno xor repnz pop push sub lcall inc mov scas dec call sub out lret fsubl jae or out sub nop push lods mov mov cmpsl jne xchg (bad) (bad) call lret dec lds or adc inc mov out (bad) ljmp xor xchg dec xchg sbb cli mov ljmp mov mov out xchg frstor ret push out decl lock call aam bound xchg jle inc movl jne xchg fisub add push idivb mov mov fisubr dec (bad) (bad) (bad) jg pushf pop inc mov and jmp adc push cmp xor pop aas adc inc imulb cmp mov (bad) (bad) (bad) lcall out add xchg mull addr16 loopne lea leave lods test fwait pusha adc dec data16 (bad) call idivb movsb mov imul ja mov (bad) repz aad out and jae xor movsl mov push cmp fistpll (bad) incl (bad) sbb nop add xor icebp push sti nop inc xor (bad) lcall push icebp sbb clc ficom fsubrl mov add ja insl cmp mov ds insb std (bad) incb (bad) call notb xchg mov pop loopne push js into mov bound dec (bad) (bad) (bad) push lods lret aas imul inc mov call sbb xchg jg pusha xor pop addb mov (bad) (bad) lcall adc int3 pop lods mov in bound pop repnz daa add sti lcall (bad) mov sub idivl or mov incb jmp jg xor stos outsb int test jp mov lahf ljmp mov mov imull sbb dec outsb (bad) mov push xchg mov jmp cmp xor ljmp cmpb and loopne enter push lret cmpsb pop test insb cld (bad) pushl loop divl aad mov leave adc (bad) (bad) jg ds inc aad jo loopne dec sub xchg notb lret jo dec popf lret (bad) jg ljmp cwtl adcb jns add popf and nop idivl jp (bad) decl test jo icebp or data16 xchg mov pop add decl dec jnp (bad) push (bad) push movsl rcr out pop stos mov fisubrl stos leave clc jl (bad) (bad) ljmp js mov (bad) lods lock add sbb (bad) (bad) ljmp ret call pop sbb fldl insb in or and cmc pushl adc (bad) mov (bad) jg push adc mov (bad) je jmp or push adc mov lcall or aam inc addb (bad) jmp cmp jmp mov jmp xchg mov (bad) (bad) (bad) out mov (bad) pop xchg or dec loopne movsb shrl in add cmpsl jg add push mov and lcall push add imul inc nop fmuls ret imul enter adc cld aaa mov scas loopne adc (bad) (bad) (bad) jg (bad) loopne push inc xchg out add xor xchg sbb sub pop or js xchg add (bad) dec cli pop mov push sbbl fisttp (bad) (bad) jg ds test push dec jo rolb mov clc inc xchg insl inc lea icebp jg incl sbb or nop repnz daa sbb dec mov decl ret push outsb mov sbb (bad) (bad) (bad) call aam or sahf pop inc sti push add xor dec fstps addl jmp insl loope mov mov outsl in sbb (bad) das mov call cmp or ds stos gs (bad) (bad) call jne and mov lock fistp outsb cmc push xchg outsl int3 or int (bad) (bad) call leave cmp jb cmp and arpl fcomps inc jecxz push cmp test (bad) push push out jmp cmc ja adc cmp mov scas adc xor (bad) (bad) std popa cmp pop (bad) out arpl add xchg inc shlb das rolb (bad) (bad) (bad) pushl sub push lahf lret xchg sbb adc mov push dec loopne andb pop sbb mov nop (bad) decl inc mov cmp lock mov test (bad) mov mov and movsl pop adc xchg push push mov dec lret sbb call add iret push clc pop js cmp (bad) (bad) pushl inc xchg sub or jl cmp out ret mov add push sbb jge,pn cmc lock arpl (bad) (bad) std pop mov mov movl xchg and (bad) das out fldt and xchg push in ja push sub mov incl jns lahf xchg fildl push std pop pushf jp mov and das (bad) (bad) (bad) inc das data16 xor push imul xor cwtl ds cltd dec sbb ret dec imul mov inc mov stc push insb lods dec or mov jae add xchg aam (bad) (bad) (bad) mov leave sarb adc mov lods sbb dec in cmp sbb (bad) (bad) jg gs or adc ret das test jne cmpsb cmp lods fidiv cli or in (bad) pushl mov faddl mov arpl dec (bad) pop (bad) (bad) jg or add addl inc jecxz (bad) in test push mov (bad) (bad) (bad) incl (bad) and into xchg jae (bad) clc mov scas jecxz xchg adcb xchg loopne lahf xchg loopne mov cld mov pop lahf fs cld jmp cmp mov test fistl mov cmpsl (bad) push es imul cmc mov (bad) jo mov add adc sbb xchg addl xor (bad) (bad) call cmp loop sbb insb and mov scas cmc pop repnz mov add fwait rep lea hlt mov outsl xor not sarb imul (bad) (bad) jmp and sub in xchg ss pop in in in (bad) lret lcall cld (bad) lcall mov xorl mov add test fdivs addr16 add cld jns fstpt push ret push add (bad) (bad) incl or subl mov test (bad) (bad) ljmp jmp jl mov inc inc jl iret xchg fadds stos cmp imul (bad) mov (bad) mov mov or xchg mov sbb add (bad) pushl cmp (bad) xor cmp mov dec jo fsubrs dec test jg adc decl mov sbb push inc imul aaa pop (bad) (bad) (bad) jmp lods fwait xor lea sahf rcrb xchg repnz or int3 mov rcrl dec imul mov stc mov test mov sbb mov and aad jbe add in ror clc (bad) jg jecxz cmp out aaa js mov cltd repz (bad) (bad) incl and rolb inc jl cmpsb mov test cmp xor add mov pop loopne push (bad) fmuls mov sbb xchg daa dec std (bad) jle mov mov fiaddl dec inc mov cmp sub and pushf mov and sbb out in daa add mov jns cwtl mov test scas movsl fmulp je pusha dec or cmpsl in outsb call arpl dec mov sti cmp pop sub (bad) (bad) jmp cmp and lock push add sub in int3 loopne push jbe mov or ds mov or push (bad) dec fnstenv test cs into and pop jbe jecxz pusha test cmp sarb lcall dec call ds jg ljmp mov mov jmp repnz dec adc movsl mov out (bad) (bad) jmp ljmp out (bad) mov rcr adc inc xchg cmc mov mov mov inc mov jne negl mov lret rcl ljmp outsl adc cmp fwait lods adc lret scas inc pop (bad) (bad) in mov loopne je push stos jecxz in mov (bad) (bad) fistpll outsb movsw and inc (bad) xchg int3 add stos ss js mov lret clc out or xor sbb sahf (bad) (bad) (bad) decl and rcr add andb imulb jle loope outsb movl inc cli xor insb mov push dec pusha sub mov push daa xchg push dec xor in ljmp (bad) (bad) lcall je sbb ss jp lea adc mov mov add ss xchg aam stos (bad) jg adc push dec movsb scas stc (bad) mov cmp add call xor jmp mov in sahf in dec sti outsl lret push push sub (bad) (bad) ljmp les lcall imul fstpl popf inc pop xchg (bad) insl hlt push clc lods clc (bad) (bad) (bad) decl xchg test xchg push or jae push rcrb (bad) jne rorl xor and dec (bad) (bad) (bad) ljmp in gs xor icebp cmp mov stos jmp xchg xor test das (bad) (bad) (bad) jmp xchg ret ret adc mov xchg bound xchg jmp dec (bad) (bad) (bad) ljmp stc xor popa fbld pop enter mov inc sbbb push ds (bad) (bad) (bad) lcall loopne adc ret (bad) jno sub pop ret add popa push out push pop dec pop (bad) (bad) (bad) (bad) pushl mov out bound xchg cmp mov and fdivrs (bad) (bad) (bad) mov mov imul into xchg pop cmp movsl lcall lcall pop daa fildll enter (bad) (bad) jmp ljmp inc popa mov adc std or pop push and std xchg inc js (bad) (bad) (bad) jmp jmp mov dec push mov cmp aam dec test das lock (bad) decl dec and les dec xlat or pop mov push mov (bad) pushl xchg pop mov jg fiadd mov (bad) xor out jmp out (bad) (bad) out push xlat outsl pcmpgtb rcl and int3 shl (bad) xchg mov insl jp jmp (bad) pushl lds xchg push or sub repz xchg nop lea sbbb hlt lods ja ds xor lcall cmp rorb arpl js cmpsb xlat fdiv mov (bad) jg cmp sub inc pop in pop out mov (bad) sub (bad) decl jge outsl (bad) jge test and pop jmp fild xor dec (bad) decl incb js bound andb adc add dec and (bad) flds sbb pop lahf add int mov push (bad) (bad) (bad) incl jbe push xor loop sub ret popf js dec (bad) and cmpsb lahf sub int addr16 loopne push stc bound sub mull out stc icebp (bad) (bad) pushl into std std or inc cmp jge mov adc and dec ja pushl ficom dec xor int rcl sbb ss decl dec adc lahf subl pop (bad) (bad) (bad) mov cs ss mov mov fnstsw (bad) mov pop push dec jns add cmp (bad) (bad) (bad) incl or cli sub mov or mov out xlat cmp stos insl loopne xchg jns inc cwtl and and aas mov mov incl inc js mov mov (bad) (bad) (bad) mov and push push in mov adc loope sbb mov (bad) and push push repz int inc hlt sbb and mov push pop outsl xchg dec sub incl xor sarl (bad) (bad) (bad) lcall (bad) sub dec jo jno inc sbb pop add sub cld imul sub lea and repnz repz testl mov stos frstpm(287 es icebp add or in in dec pop cld popf outsl xchg push jmp lea sub mov leave sbb (bad) lcall ds adc test sbb shrl sbb inc xchg sbb sbb ret call je sahf adc cmp cmp pop xchg lahf cmp mov loop dec stos mov mov js pop inc ja call sub das rol daa xchg cmp stos cmpsb mov (bad) pushl stos imul inc movsl aas int push gs shr int cmp (bad) (bad) mov cld add pop rorb push jb mov stos pop js jne mov movsb push mov mov ss and iret dec fwait or fildl (bad) (bad) dec mov aas inc xor lcall (bad) aas rcrl mov repz fs pop fldenv dec (bad) (bad) (bad) (bad) lcall push out sub mov xor and sub hlt test loopne (bad) inc inc inc sbb bound and cmp js sbb (bad) decl sub fnstsw decl jne xchg stos int clc (bad) call outsl ret lods repnz mov insl ljmp add mov aam loope mov mov movsb and xchg out add adc pop xchg mov (bad) (bad) decl cli dec cmp push cltd jmp cmpsb test mov and sbb adc rcrb cmpsb sub adc or (bad) xor movsl in scas into test and in dec or loop push xchg repz test inc call sub (bad) call jp pop sbb mov cmp fs call std sbb xchg ret xchg sub pop adc pop cli cmp push sbb mov adc ljmp or nop cmp pop sub lret add (bad) clc lcall movsb push arpl pusha jle std jnp imul jmp add sub das dec icebp inc aad (bad) (bad) lcall mov inc push jp inc test or (bad) xchg test gs (bad) ljmp sub pop mov jge adc inc test out (bad) (bad) (bad) ljmp rorb jg icebp sbb jmp cmp mov cli mov (bad) (bad) (bad) pushl push insb out push fndisi(8087 shll outsl jne mov shrl jg cmp push mov (bad) (bad) lcall pop leave jns dec mov pop sub mov and push mov cmpsb mov fisttpl sahf jb pop jbe xchg out sahf incb mov mov mov popf sbb pop mov pop fstpt xlat leave mov outsl jbe xchg mov gs in adc adc lods pushf in mov call (bad) pushl pop sbb jge push ds les pop ret mov out stos lcall xchg push jne (bad) (bad) (bad) decl jp mov add les mov int fadd push sub (bad) (bad) ljmp jle inc jecxz or push sbb adc and lcall xor aaa std jg es xchg xor arpl pop fisttp std enter leave sar (bad) jmp stc xchg mov outsb lahf fist dec pop iret adc push int mov jmp adc jecxz fist sbb (bad) (bad) (bad) (bad) (bad) call lahf lret inc shrb xchg sub loopne xor lret dec lods adc mov push cmp (bad) (bad) (bad) jmp jge shrb sbb add popf pop sub xor (bad) (bad) ljmp test cs movsb mov fimul push (bad) mov insb add (bad) (bad) (bad) cmp ds fs cltd cs loopne fbld int3 jmp sbb (bad) ss (bad) (bad) ljmp and push jne,pn es sbb (bad) wrmsr lret jb loop push add (bad) (bad) (bad) jmp inc push cmp mov mov adc xchg cmp add scas and sbb aad mov test (bad) mov mov cltd shrl jns ds (bad) (bad) call decb push outsb scas sbb repz cmp jmp inc sbb and dec jae fdivs jmp jecxz,pt add pop sbb ret aaa cmp adc lock in pop mov adc add into adc lahf xchg sbb fwait cltd dec sbb sub mov cmpsl lock (bad) call lcall pop (bad) fdivp pop mov cmp aad shll inc (bad) (bad) decl subb xchg outsb fistpll out mov fdivr inc jg scas add insb (bad) (bad) (bad) (bad) jl stos mov bound insb and push xchg insb das mov mov arpl ficomp (bad) (bad) jmp mov sub add xchg adc jg adc iret xchg shrl repz (bad) std lods call loop loope outsl pop pop sub (bad) sub (bad) mov mov ss push push dec inc sahf lcall (bad) (bad) (bad) pushl mov mov mov xor (bad) int3 xor jg ja leave (bad) (bad) (bad) (bad) cmp jns hlt fcmovbe std test push sahf mov adc lods in jne push fdivr (bad) (bad) ljmp dec aad das hlt xchg (bad) js pushf adc jbe push and xor inc (bad) (bad) mov imull mov mov cld xchg fbstp pop pop add cld (bad) ljmp icebp mov jl test test mov dec hlt mov data16 ljmp xor sar out addr16 test cld clc outsl lds imull daa movsl and in add (bad) decl lock or mov and jp stos and xor sbbl or mov jmp loope jne inc sbb (bad) sbb (bad) (bad) (bad) (bad) fisttpll rolb xchg pop mov enter xlat rcr mov mov shlb mov (bad) (bad) jnp push jae cmpsl (bad) mov arpl clc stos mov insl mov or adc adc xchg hlt das clc ljmp and push test stos sbb rolb (bad) (bad) lcall jg sub lahf stc lods cmp enter mov int mov int incl sahf xor xchg pop into repnz pop orl pop call (bad) lcall adc or cmpsb jmp adc fstpl orl pop (bad) (bad) (bad) incl xor loop fsubrs popa ljmp jp jmp sub push ret (bad) (bad) decl insl out enter push (bad) jne mov out jnp jg xchg clc sub add cld (bad) decl xorl xor scas sub ja xchg push rcl jmp aaa xor pushl cld cwtl enter orb add lods stc cmp insb data16 (bad) (bad) inc xchg pop xor insb xchg xor xchg aas push xor rcrl popf sbb mov stc std (bad) (bad) ljmp cltd stos xor lea sub and mov arpl mov mov jp xor call in dec sbb clc cmp aaa addr16 pusha inc or in push pop daa sub fcompl pushf cmp es (bad) lcall mov in cs addr16 push push dec aad clc (bad) out add mov pushw xchg (bad) (bad) (bad) ljmp std xchg sub or jb insl fnsave lods adc push mov add add (bad) (bad) call pop pusha (bad) fstl dec lret mov adc sbb (bad) jp dec dec push cli (bad) (bad) inc sahf lret cwtl loopne inc cmp stos ja or in sub in stos sub sbbb cmpsb (bad) out inc jnp repz leave mov js,pn mov pusha sub je aas cmp clc rclb jp mov mov loop int inc (bad) (bad) (bad) ljmp push xlat mov jno inc test je cmp xor cmpsl cmp push mov push aaa cld cmp xor push sub xor rol mov (bad) mov aas inc push cs rcrb outsl or push les rorb sbb inc mov cmp (bad) imul inc jmp pop inc cld jne sub cli xchg loope jp js pop loopne (bad) pushl push xchg das dec jbe fsts std fbld or test or mov mov xchg pop mov (bad) out inc in call add pop push addr16 xlat mov inc lods jge adc sarb sbb mov pop inc sbb (bad) stos pop repnz ds mov outsl mov clc clc add jo int3 ljmp outsl iret fdivr (bad) (bad) pushl add sub cwtl out adc outsb xchg inc roll dec mov sub jmp (bad) (bad) (bad) inc out mov add (bad) and (bad) jp xor or xchg fidivrl fdivs push dec cli and sahf inc in aad lret mov cmpsb decl dec mov push ss push add and xor jne or int3 push and popa mov sbb and andl sub push nop pop jae pop aaa ljmp fidivr (bad) call sahf outsl das dec adc or decl ss iret fimul xchg (bad) (bad) (bad) (bad) cmp sahf aaa nop ret lcall ret dec mov cld jg lock (bad) lcall inc fidiv cmpsb jp scas stos cmp push xchg inc out aam (bad) jg lea ds test dec pop pop add insl andl and sub cmp pusha scas repz cmc xor pusha ss outsb sahf or pop mov push dec mov test cmpsb xor (bad) (bad) ljmp jl jbe aam subl adc inc adc push xchg shrb xor inc (bad) decl es inc adc mov insl fldenv in (bad) (bad) (bad) push sub lods mov xchg mov xor push mov cmp mov sub add sbb inc sbb mov mov in movsb insb cmp fdivr pop cld call xor cld nop cmp inc jno (bad) imul xchg (bad) (bad) (bad) incl dec mov pop pop rorl mov aad neg and mov (bad) pushl enter test and add lds fwait lret adc mov xchg fldl xchg mov (bad) or xor push stos and cld sbb jge sti xchg (bad) in (bad) add add sbb mov sahf movsb xor (bad) (bad) (bad) incl sbb jo jno xlat sub cmpsb out dec mov mov cmc incl aad jl test or hlt or dec push xchg add (bad) (bad) incl jb cmp cmp sahf ret mov add mov repz bound (bad) (bad) inc push sbb fnop je into pop repz mov jb test (bad) (bad) (bad) mov adc notl inc cs sub add xchg stos jl test mov pop aam adc (bad) jg cs out jne push xchg (bad) mov ret ds and lds popa push (bad) jmp xchg push cmpsb std xor or cmpsb inc (bad) lcall imul aad xchg xchg cwtl stos (bad) ljmp inc jl mov cmpsb in sub inc fsubl adc sbb popa push inc (bad) lcall sbbl mov jecxz pop xchg shrl dec push arpl les mov mov jno rcrl ja inc xchg je push dec or daa cmpsb xlat (bad) (bad) fildll fwait lods or dec sahf lods outsb nop push loope incl jb mulb and sahf mov (bad) pop fist or xor fisttp mov les data16 mov (bad) in (bad) ljmp or mov lock dec inc call movsl rcrb xchg mov pushf cld (bad) sub dec mov mov or (bad) (bad) incl imulb stos jp call add or push leave sub dec (bad) pop test cmp jmp leave dec (bad) (bad) (bad) jmp mov cmp imul mov popa jecxz push cmp dec mov bound bound fbstp mov xchg (bad) hlt mov push mov xor fs and mov (bad) popa or xchg push stos (bad) sub mov fistpll and cmpsl fdivrs fistpll hlt loop push inc fistpll (bad) dec dec fs cmp (bad) call aad jp fucomp lock dec js adc jnp pop rcr aam mov hlt (bad) (bad) call add cmc ds arpl pop push or mov insb hlt ljmp mov xchg inc cwtl ds cli ds es add lock sti or xchg jmp inc push mov inc ss push out cli ljmp push jp xor or xor and aaa scas sarb pop and adc cwtl mov out dec aad fwait loop rclb jp movsb into icebp sarl xlat decl int3 inc mov and add sbb xchg or jno outsl cli call iret in js mov or (bad) stos inc sbbl fwait xor clc (bad) (bad) incl sbb and sarb sbb push pop icebp sub xchg leave xchg dec mov jnp cmp ljmp and mov xchg test stos (bad) stc cwtl enter add movsb (bad) xchg adc (bad) (bad) pushl mov or idivl int3 sbb test jno fdivs (bad) (bad) call ja inc ret cwtl (bad) jo test push sub scas inc or (bad) (bad) jmp mov sahf (bad) mov cmc dec int fstpt cmp and (bad) jg lods hlt xor je nop into mov dec imul xor mov (bad) cwtl push xor pop pop cli xor mov mov pop dec dec das adc sarl test mov (bad) decl int test das pxor mov test (bad) (bad) (bad) (bad) (bad) (bad) fldcw xchg mov sub jg push xchg sbb fs mov sar (bad) ljmp pop mov test lock dec out push call xchg mov lcall (bad) jmp mov mov loope push fs sub jb mov mov lock (bad) (bad) call fidivl inc add mov pop scas mov ss jae cs jl mov sti fistl lea ficoml pop inc test add inc (bad) (bad) (bad) cmp scas xchg addl (bad) dec repnz and push mov fstpt test jg mov into jbe inc cld push loope pusha pop dec (bad) ljmp ds insb jns sarb (bad) divl dec dec popw cmpsb icebp xorb ret (bad) jg out mov pop xorb sbb mov (bad) (bad) (bad) incl nop dec loope dec add loopne lret fldenv dec rcrb xchg roll (bad) pushl icebp inc push jge mov mov xor ss faddl dec mov mov or popf dec jb cwtl popa pop fcmove mov mov icebp (bad) or push stc std lods pop dec or sub (bad) (bad) (bad) lcall pusha mov hlt jg movsl xchg pop es cmp repz fidiv movsb (bad) (bad) decl mov leave sub cmp das adc lock or mov ljmp mov movsb cmp mov ja cli mov push push xlat pop int3 addr16 (bad) (bad) mov cmc or nop push test adc popf jnp push in (bad) cmpsl mov sti clc rolb mov (bad) cmpsb mov (bad) fadds into cld sbb (bad) (bad) mov xchg mov ja out push pop ret inc fwait dec push ret aam jbe (bad) (bad) (bad) cmp (bad) mov sbb add ja pushl out mov lret insb cld cmp fildl (bad) (bad) (bad) call es jae inc sbb in mov insb adc inc pop mov sub sbb rolb (bad) (bad) call pushf lret daa add int imul or mov sbb imul test jg (bad) pop cli fiaddl into stos stos xchg or insl sbb sub (bad) (bad) (bad) jmp pop hlt mov cltd or dec push lret fidivr test (bad) iret mov (bad) mov adc pushl cld xchg push jbe sbb xor lahf ds pushl jno inc std sub inc mov ljmp lret (bad) inc push cld cmp push pop lcall pop inc data16 (bad) in push inc push imul decl stc rorb loop push push sbb pop and or cmp decl (bad) cmp push jo je,pt int3 sbb and cld push mov in fsts scas repnz (bad) (bad) jg inc lods rorb sar lock xchg xchg dec insb fcoml or jb les sbb push xchg add cli add sbb insb mov cs fs cmp dec js (bad) (bad) out clc fnsave inc jns cmp sbb call push test mov xor outsl sub xor jnp or dec insl (bad) fistpl (bad) (bad) decl sub dec std push and hlt andl sahf mov shrb (bad) (bad) call test (bad) cmp aaa popa xor adcl mov adc iret sbb (bad) (bad) ljmp or jl out test lret sbb rcll js fbld sti mov sub (bad) cmp mov stos push cmp pop jg cmc (bad) (bad) (bad) clc cmpsl repnz inc test rol test sbb cmp gs dec mov sub sahf jo pusha lret (bad) (bad) popf test lcall xlat xor fs add pushf mov inc fsubs pop xlat jg (bad) (bad) (bad) ljmp outsb push add mov mov or imul jbe mov cli cmc mov sub ds test dec incl cmp mov sbb fucomi jbe imul add mov xor cmpsl (bad) cmp inc xchg xchg dec stos enter jns ja movb xor xchg (bad) (bad) decl popf mov int3 xchg fistp push (bad) (bad) (bad) (bad) cmp cmpsb and cmp out dec jb cmpsb mov dec movb clc push xchg repz or cwtl sub xor mov arpl dec scas (bad) (bad) (bad) incl cmpsb (bad) mov gs in xor (bad) fnsave decb xchg iret dec (bad) push dec ljmp sub xor imul aaa (bad) (bad) ss sarl fidivl dec dec jb fsubl xchg cmp push cld xor push cld lds scas mov andl leave outsl clc sahf (bad) inc outsb jle dec in lcall add pushf shr dec ljmp sbb add mov xchg mov in (bad) (bad) (bad) (bad) adc fwait rolb outsb mov popa loope test pop jno cmpsb jo (bad) out data16 (bad) (bad) jmp sub or daa insl (bad) into outsl xor cli push mul loop mov mov or int3 or mov xchg push fimul mov or mov add mov loop or jecxz pusha mov adc push das mov (bad) (bad) cli inc int3 push jne daa cmp loope cltd lods cmpl ret pop pushf jp add mov cld inc cltd and fistpll test mov inc add repnz negl dec ss mov (bad) sbb int3 add (bad) (bad) (bad) call adc cmp int gs hlt shrl (bad) pop aad mov xlat idivl arpl (bad) (bad) (bad) (bad) cmp or (bad) shll inc sbb xchg (bad) inc mulb ljmp fs ds and push sar dec jecxz aam jle xchg fildl xchg push push outsl mov lcall enter pushf (bad) clc push push sub flds cmp out cli inc stos je sahf lret ret sbb xor (bad) (bad) decl in jecxz xchg (bad) mov pop (bad) sbb xchg inc clc fistpll inc ljmp out mov jbe cmc bound js adc arpl sub mov mov (bad) (bad) pushl inc sub aaa test fidiv repnz pushf sbb push (bad) (bad) (bad) jmp aad mov and loope dec das mov rcrl es ss ljmp mov out push sbb loopne nop and (bad) (bad) decl out adc rcrb mov (bad) repnz fistl sar (bad) (bad) (bad) ljmp and loope mov int pop pop cli orl push fstp adc push push adc (bad) es icebp insl jle inc loopne call scas clc dec test call mov scas push mov dec pop jo jp cmpsb (bad) (bad) decl and scas push pop sbb pop xchg dec push test stos dec daa add hlt pop adc aad iret cltd jns ret movsb in xor (bad) mov add xchg out notb push mov xor pop cmp cmpsl in adc loope pop push or mov std dec test lcall in mov scas mov pop (bad) leave push rol gs lods lret das sti and jmp cmp (bad) pusha pushf or std outsl sti and (bad) xchg cli jno pop cmp (bad) (bad) inc xchg sub push loopne cmp mov test decl aas or and mov (bad) (bad) inc testl pop cs inc pusha stos jmp in cmp cmpsb (bad) (bad) (bad) jg add ss ret in stos (bad) pop std push mov clc jno ljmp or loopne daa das inc test pop cwtl xchg pop dec push cmp clc add cld lea mov (bad) (bad) (bad) decl aas mov lret in and mov mov xor lock xchg sarb push into (bad) (bad) (bad) (bad) jl (bad) cli dec push aaa mov add ret divl pop xchg dec incb (bad) (bad) (bad) incl test lret or sub js push mov fs fcmovbe mov adc sbb (bad) (bad) pushl or mov xchg lret mov (bad) xlat pusha sti mov jae mov ljmp inc dec cwtl or add fdivrl jmp dec mov mov cmpl out ret adc fst jns cmp (bad) ljmp inc in stc enter or cli fsts lds dec bound test lahf add (bad) cmpsl sub sub fwait cld fnstenv dec adc mov jb (bad) xchg (bad) (bad) (bad) (bad) stc ljmp js ds cmp dec jecxz and lahf mov rcll (bad) (bad) jmp jb push or loope lea xchg push cld fmul int3 icebp divl jmp or jg (bad) je dec xor xor xor add repnz mov enter decl lret aam out stos push ret test sahf in xchg sahf icebp inc ja mov mov adc jg sbb inc pop dec hlt popf push stc sarl lock (bad) (bad) mov inc push inc test jle mov mov xchg ds (bad) jb (bad) (bad) ljmp jg jnp shrl xor test loopne xchg xchg lret push mov ljmp pop cwtl pop mov dec ds (bad) (bad) (bad) incl mov pop adc xchg icebp jg xchg jmp aam subb dec ja fwait in call pop dec mov pop inc jbe xor adc es cmp pop ss cmpsb (bad) decl fisttp mov inc pusha icebp dec imul (bad) (bad) (bad) mov lods fstpt push (bad) cmpsb jno ret in cmp mov mov hlt mov jmp jnp aam std adcb out loop xchg arpl add lds js push xor push iret inc xchg loop push fwait inc adc data16 es (bad) (bad) mov mov scas push sub enter clc out lods clc xor test push lret xchg (bad) ljmp stos scas or lret in add cs xchg mov push imul pop mov lret loope push scas (bad) (bad) (bad) jmp sub in imul cs fistl fcmovne push test mov (bad) (bad) jmp clc hlt mov dec out mov cwtl mov lock leave hlt mov rolb cmp loop mov adc hlt imul ds stc sbb pop push inc clc (bad) cmp mov je pop int push stos (bad) mov cmp lock sbb sub mov mov lret and push and inc adc (bad) fld cmpsb push xchg mov add stc movsl ss or int decl pop cli inc hlt jge mov sub jns (bad) (bad) (bad) (bad) in jns les xor pop push (bad) pop sub jnp mov scas xchg cmp mov ljmp pop scas insl xlat flds cmp cmp loope and sub jecxz xchg add (bad) (bad) call dec (bad) jg cltd jbe sub aas adc mov inc jbe mov (bad) (bad) lcall sub push clc mull data16 adc es lea into out lahf mov cmp (bad) (bad) ljmp push (bad) and loopne adc mov dec bound xor or mov (bad) (bad) lcall sbbl dec fdiv xchg ja push mov stc stc sbb jl test sahf (bad) mov scas jo mov es ja sub daa jb push mov sbb push (bad) incl mov popa fs pop mov (bad) in adc js dec xchg call or or mov (bad) jg pushl loope jns icebp bound mov je adc push hlt (bad) (bad) lcall arpl outsb jae scas inc enter and fnstsw pop mov enter push push sahf decl xchg es in sahf fwait call cwtl ficomp (bad) (bad) call lea mov mov fimull xchg pop xchg ret sub pop les incl pop xor cwtl pop pop les pop enter jg mov faddl dec bound (bad) (bad) fcomip xchg push xchg rorb ss lods sbb inc std and daa repz (bad) call fidivr arpl inc fwait push jno or stos jecxz cmpsb cmp and cmp sar (bad) lcall lahf (bad) js test add and test enter jg xlat adc out outsb xchg xchg pop cmp xchg (bad) (bad) (bad) pushl push dec fdivr lahf xor popa js mov jl notb fimull mov (bad) call hlt add movsl (bad) mov gs sub adc mov cmp ljmp (bad) push lahf repnz xchg jb sub adc (bad) push and and (bad) (bad) (bad) (bad) decl or cmp (bad) adc je fiadd sti cmc jecxz les int (bad) (bad) call mov lahf cmp outsl in call pop outsb dec dec js cmp add aas ret sarb mov inc mov adc lods inc out push (bad) mov fldl xchg ret (bad) pop xchg (bad) mov xlat cmpsl repnz mov pop inc incl repnz ror leave push dec aaa cmpsb sbb pop cltd in (bad) (bad) (bad) jmp faddl gs sub test std sbb push rcr cltd xor add and (bad) jmp lret mov inc in dec xor add clc push cmp sub mov sahf lret adc and jbe mov arpl push push xor pop js outsb incl clc lock jae sahf lea or (bad) (bad) (bad) call sahf test push ret sarl ja inc jo push ret fwait sub cs aas xor xchg sbb (bad) (bad) call add outsl and and add lret in dec lret daa dec sbb mov (bad) (bad) call nop mov sbb inc jmp imull pop mov push xchg add shr (bad) (bad) (bad) (bad) mov mov add push pop or mov lcall test ss push enter cmp sub loope mov insl imul adc in icebp shlb and mov ds in call push cmp mov mov cmp xor rcrb lea mov (bad) (bad) (bad) incl into jge mov sub sub sub sbb add jb decl fdivp jnp mov sbb js leave mov xchg cli (bad) incl sbbl push pop sbb cmp mov imul (bad) jmp push ds insl add add xchg or xchg stos outsb leave (bad) pushl or pop or out cld popa push mov popf aaa ljmp into jno (bad) (bad) dec scas sub ret mov dec sub jmp push push (bad) movsb jmp loope stos mov sar or cmp xor (bad) call mov data16 and cmp cmc fwait push loopne fsts (bad) (bad) (bad) dec push jl pop push into js out pop sub ljmp mov sbb iret cs (bad) (bad) (bad) jns shrb int mov xchg xchg pop sub lock je dec in aam push sbb xchg sub add (bad) (bad) push jmp cmc fbstp cmp lcall (bad) push pop inc push aaa cs inc xor cmp movsb push and jnp sbb arpl shrl fisubl push inc pop inc inc (bad) (bad) push mov lock xchg xor (bad) jmp insb movsl mov testb aad jnp (bad) (bad) call or test and std jne (bad) sub mov les add fwait (bad) (bad) jmp xor add fmull push cmp ds mov dec fldcw (bad) (bad) (bad) ljmp data16 mov out ss int loopne adc ljmp (bad) (bad) incl lret insb dec aas mov xor push dec push or sbb (bad) call inc mov jns inc aad jae out dec cmp loope dec outsl cli (bad) call fldenv repz nop and dec jmp popf mov out mov (bad) (bad) (bad) (bad) call or imul arpl sbb add add dec cmp decl inc das dec sub ljmp clc pop ficompl or and idiv (bad) jmp adc enter mov mov out inc push dec (bad) (bad) (bad) (bad) jmp es and pop xchg (bad) das cmp scas jp outsl mov aam fisttpl (bad) (bad) (bad) call xorb mov mov cmp xor pop mov loopne nop or (bad) hlt decb push dec push ret les addr16 (bad) fcomip fistpll add call test lret push subl stc fmull adc stos iret lea or daa outsl add inc push ljmp ja cmpsl mov lods jmp andl faddp shrb (bad) (bad) (bad) ljmp pop dec xchg add dec hlt dec jmp adc lock mov inc lahf popf adc jmp lcall and and scas gs mov ljmp fcomp fstp mov (bad) (bad) call js fdivl (bad) fcoms loop push rorb or (bad) clc inc inc shl xor push mov jmp add mov sub aam add sbb outsb fcoml into divb jmp jecxz mov xor lcall cmpsb fisubr ja jle dec xchg daa loopne repz lods push jmp jbe sar (bad) jle mov scas stc test add call lock dec (bad) (bad) (bad) call and cmpsl pushf (bad) mov mov sub test int (bad) cmp daa test mov jne sbb push pusha adc movsl and (bad) (bad) ljmp sub cltd fdivrp sarb or call lcall in pushf dec (bad) xor cwtl and add xchg inc sub scas in xchg and (bad) (bad) decl lock shrb dec outsb dec and adc test clc (bad) (bad) dec adc outsl mov ret mov push add lret lods pop xchg xchg cmp push xchg cltd dec std hlt mov sahf bound fs or mov (bad) (bad) (bad) (bad) jns xchg stos and movl inc jmp push (bad) daa xor fistpl push decl inc in lahf dec stos mov (bad) (bad) (bad) ljmp repz mov mov pusha sbb pop push testl fistp fistp data16 pop mov jb lahf les mov ficompl jmp mov pop mov jmp stos pop arpl (bad) stc xor pop xchg cmc add icebp (bad) (bad) (bad) (bad) fsubs or pop dec inc jmp aas test jns adc mov pushl shlb jbe rol sahf sub ds cmc sar call rcrl pop adc ss push mov and xor cld mov mov repz mov (bad) (bad) (bad) call mov icebp gs push lret test out push pop pop fdivp pop enter icebp (bad) (bad) (bad) ljmp mov fs dec pop adc scas sbb stc stc mov sub mov (bad) incl in aad (bad) imul cmp pop xchg lret mov xchg xchg cmp pop cltd and (bad) inc aad shrb xor scas pop dec mov nop (bad) punpcklwd jg (bad) jmp gs cmpsb or or adc repnz (bad) jle push sub loopne call push pushl dec push pop and mov in rol pop imul mov (bad) (bad) call (bad) aas ret fstl pop push cmpsb push shrb push scas add leave enter mov inc push imul movsb xchg (bad) or scas cmp cli mov clc push cli jo (bad) pop lcall out fdecstp mov (bad) (bad) (bad) call adc mov dec inc jp pop pop int3 ds add xchg push mov adc mov (bad) mov lock lret into jecxz mov (bad) cmp xor insl test ret (bad) (bad) sti inc or xchg je xchg sub je jp cltd xchg test mov (bad) (bad) (bad) mov mov mov aaa xchg xchg test sahf push ds (bad) (bad) fsts mov mov into shrb (bad) jg sahf (bad) out push enter cmp sar push mov fnstcw push (bad) cmp sub ficoml lret lahf mov xor ja es sub push mov lods add fcoms insl mov xchg sub ret adcl mov push push mov adc call pusha out jne imul fisttp insb (bad) arpl adc (bad) (bad) (bad) pushl popf icebp fstl subl aam xchg sbb jg ljmp dec mov aad cltd bound xchg (bad) dec ljmp inc (bad) jg jmp push inc inc cmp iret mov mov test pop xorl lock pop sarl (bad) fcomip adc push js mov mov icebp bound xchg ja aam dec arpl jl sbb jp push mov (bad) (bad) incl push cltd sahf xchg dec dec sbb cmp mov jno mov push xorl pop notb inc scas ror test pop push frstor fcomps cwtl xor (bad) (bad) incl xor push adc test daa adc jns andl or or sub cld (bad) (bad) (bad) fstl mov pop or repz cmp aad lahf mov fnop lds loop adc rcr lahf (bad) push jns sub pop rcll mov and faddl mov pop cs fidiv (bad) (bad) call rorl je aaa in cmp repnz (bad) (bad) incl hlt (bad) nop out and jge add pop push inc push mov cmc movsb mov mov cmp pop and add fsts in sbb xor (bad) (bad) (bad) call int push xchg scas mov (bad) jo jns mov pop pop es (bad) jmp jmp movsl push sub lods (bad) divb pop out fdivr (bad) decl iret lahf mov mov js int3 inc cmp xor dec das popf cmc xor cmp sar ljmp insb incb or icebp repz sar mov mov mov push orb ljmp (bad) in pop cltd mov daa scas dec push fiaddl pop movsl (bad) (bad) (bad) lcall insb pop sbb fistpl (bad) sti mov sbb cmp mov pop pop pop sbb jno decl stos fs (bad) mov pop fcoml push push (bad) incl cld jo inc call xorl fldenv push insb dec inc xor mov mov clc mov or cmp cwtl fdivrp (bad) incl xchg mov in pop arpl and loopne xchg mov dec inc (bad) (bad) (bad) incl xor stos sbb ret ror push test add add mov (bad) pushl mov push mov dec lcall dec jle scas aad (bad) (bad) mov add pop (bad) enter lret inc push imul (bad) (bad) jg pushl mov out enter inc fdivr mov jl jns push push mov cld push stos aaa add fisttpl movsl xchg shrb ds out and jno push or (bad) decl jge lahf mov inc jg pop mov mov pop (bad) (bad) (bad) (bad) aas (bad) andb frstor and mov pop stos add adcl (bad) jmp or out jecxz lods jecxz repz std cmp xchg rcll (bad) fisubrl dec sbb lcall icebp rorl pop cli mov mov incl push sub sahf inc sub (bad) (bad) push cmp sbb dec jle or or lcall inc ds add scas cmpsl rcl dec lahf sarb adc incl ret add xchg pushf ss mov stc mov and icebp sub das std je std inc das clc call or sbb nop lret out ljmp les popf fwait int3 es icebp js test stos lock adc cmp fs (bad) insl hlt (bad) (bad) (bad) ljmp mov jb jns (bad) sub inc mov inc xchg loopne xchg or scas pop inc dec (bad) clc xor and lods (bad) ds (bad) cli int (bad) (bad) (bad) push adc xor out add sbb loop mov jns movl mov or adc mov mov (bad) incl imul xchg out sbb sbb and (bad) sbb add jnp push (bad) (bad) (bad) fcmovu cmp std out out mov xlat fildl sbb stc repnz cmp or decl (bad) (bad) call cmpl mov mov pop push pusha jle cmp aad xchg pop (bad) mov aam repnz loope (bad) (bad) call fistpl lcall fdivrs pushf lahf fnstsw sti xor popf das jmp (bad) call pushf cmpsl (bad) (bad) sub xchg mov or sub out pop out adc jg stos fs pop (bad) jo or (bad) ljmp int3 (bad) lret cmc cmp add stos cmp pop jne jae scas (bad) (bad) (bad) (bad) fildl mov xchg jl loope adc std xor sbbl jno inc imul push jno push packsswb sub sti or mov and adc pop pop cmc daa in ret (bad) (bad) (bad) pushl pop cmpsb out outsl (bad) or in and mov cmp cld push xor jbe (bad) outsb iret scas mov pushf pop jmp (bad) (bad) (bad) (bad) inc mov dec rcl xchg cli cs mov xor sbb adc pop inc push push movl cld or sbb outsl pop or lods out (bad) ljmp out jp mov in jbe lea xor addl add movsb inc pop std inc stc cmpsb out push lret mov je popf xor lea lcall add jb cmp test jle inc adc aaa xchg or inc jecxz call jl sub push (bad) (bad) (bad) pushl push push jne jno sbb sarb push pop mov popa pop in loope jge test cmp (bad) (bad) jmp jno clc test sub and xor rclb push jbe ljmp cli dec xor aad pop fmuls add pusha pop jg test push aaa cmp xor jl fwait mov dec sub or mov test sbb dec pop jmp (bad) ljmp dec xor jbe in or inc repz inc ret lahf (bad) call push push out lods jle xor std pop cs arpl (bad) (bad) jmp ret in loop mulb mov push inc xor and mov ret (bad) (bad) jg pop in jl sub sub add gs je rorb ljmp clc dec pop push sbb push mov (bad) inc inc es push pusha xor (bad) dec inc pop clc (bad) pushl into push clc imul test out in push int3 sar incl push and leave addr16 mov je iret mov cld (bad) lcall imul adc add mov fmull test lahf lods ja jg mov pop sub dec xor jo in lcall xor push sahf xchg shrb pop rol mov cld xchg mov (bad) pushl in (bad) mov jge fcmovne fs adc (bad) int push insl (bad) (bad) mov aaa or cmpsb adcb invd sub cmpsl ss push clc jmp sub out mov (bad) (bad) (bad) call adc cmp or repz lods xchg in fcoml mov jnp faddl mov (bad) (bad) dec in insl add push dec leave xchg or push jecxz xor add imul push fldl fsub mov pop cmp insl or mov cli (bad) (bad) (bad) cmp mov gs mov mov jl mov cmp cmp jns push inc (bad) incl xchg fnop pop lahf (bad) mov add push mov aad sbb scas xor pop sahf mov inc (bad) dec cmpsb ds out sub fidivrl add jbe push ljmp int3 pusha mov call mulb pop jno add inc aaa ds fucomi int3 and jp je sbb incl fisubr cwtl add stos cli les ficoml sahf icebp (bad) (bad) (bad) out or inc ss inc loop cli jnp dec frstpm(287 inc mov fcomip paddsb hlt or lcall loopne arpl inc pop xchg cmpsl jg and cwtl mov (bad) (bad) (bad) (bad) (bad) lcall test stos std or pop out insl lods jo push vphaddubd cmp dec adc (bad) call add fildll mov jle pop and xchg lock fiadd mov (bad) (bad) (bad) jmp push leave aas dec mov cmp jae push iret cmp in movsl pop mov call jg cmp pop fs jns sub out inc popa es and push test incl xlat jle push out aaa pop lea push mov das ds cmp (bad) incl or and mov jmp xchg mov hlt ret jge (bad) (bad) (bad) push and insl mov or lock iret lock ficompl insb mov push mov sbb sbb (bad) jmp andl lret test xor sbb es (bad) (bad) jmp int and xchg pop rol test rcrl mov aas rcl sbb nop push aas sbb xchg mov pop iret fidivr push push imul (bad) (bad) stc push xchg add xchg and cmp push mov stc daa loope into pop (bad) (bad) ljmp ds mov xor test gs ds sbb (bad) out clc lahf stc mov sub xor push dec mov push cmp inc ret add push xchg loopne adc lcall repz or clc mov (bad) ljmp in je mov orb sbb sti fsubrs mov (bad) (bad) (bad) inc mov mov pop xorb dec (bad) std or mov (bad) fldenv (bad) (bad) call std daa jmp repnz jle mov add pop cmp or fbstp or add mov popa push cmp inc cmp outsl adc xor loope push (bad) (bad) (bad) decl fcomps adc daa pushw pop mov test test dec idivl mov std andb movsb (bad) loop inc mov ds pop or and sub idivl inc jg mov out (bad) pushl jne int xchg sbb fstps mull out jg mov icebp (bad) call mov dec rorl xor out pusha (bad) mov cmpsb dec test fbld (bad) (bad) arpl pop jge fs mov loop jge data16 sub (bad) (bad) (bad) (bad) fimull xchg mov pop xchg int movsb and arpl jmp jg push and jmp mov jmp in int3 pop xchg out shll jecxz fwait xor ljmp mov mov pop adc (bad) (bad) (bad) ljmp imul es cvtps2pd fcmovu xor jp sbb pop ds lds push leave pushf pop das dec (bad) ljmp fmulp ret fwait and mov scas pushl pop hlt sbb mov popa lcall (bad) cmp cmp (bad) mov ds inc sbb stos popf cmovns cltd pop adc (bad) decl and fnop jg cmp mov cmc push cmp adc loopne (bad) (bad) (bad) pushl in jp sahf daa addl shlb jg mov stc jne imulb mov (bad) (bad) (bad) (bad) out mov shll scas and imull je into push fcmovne add push testl mov popf dec lea mov xor jmp push inc hlt mov sbb or pushl pop mov mov jae outsb fdivrp (bad) (bad) jg in push xor push xor cltd pop test je cs sbb icebp int (bad) (bad) (bad) incl stc lret (bad) xor (bad) idiv inc ljmp dec jmp gs es push push fcmovbe aad (bad) (bad) (bad) (bad) pushl jmp or push mov mov lret loope enter out addr16 (bad) inc fmul (bad) xor inc lahf mov arpl incb pushf push push push iret inc test adc repz out out inc out add mov in hlt outsl mov imul (bad) pushl adc imul je sbb inc push or std mov jo adc mov loope xor pop jne movsl (bad) (bad) (bad) call inc movsb inc xor push push std adc nopl jno and nop push js fistpl dec push dec adc call movsl gs mov ficompl (bad) (bad) mov (bad) (bad) lcall adc cmp dec pop dec lock sub cwtl adc mov outsb (bad) (bad) (bad) ljmp jnp gs cmp and xchg leave dec cmp sbb jbe cld xchg xchg (bad) ljmp push sub test push mov dec push jmp (bad) (bad) (bad) fucomip out in push popa or mov scas fstp loopne into sbb jmp (bad) (bad) hlt jmp cmpsb cmpl fcompl (bad) clc pop ss (bad) (bad) fbld popf cmp mov imul or pop pop insb clc pop jnp (bad) (bad) jmp dec dec das xchg xor popa dec les bound adc nop mov bound add (bad) (bad) jmp mov jns xchg mov lea je or cmp xchg mov stc (bad) or andb (bad) (bad) dec adc sahf std cmp imul out and repnz xor shlb mov in gs lret (bad) (bad) (bad) mov push push stos mov mov es push stos jb mov or mov mov mov (bad) decl and mov in jp xor add xor mov pop inc adc out xchg (bad) (bad) (bad) pushl xchg sti cltd in pop or je mov add aas pop loopne jns mov dec rcl (bad) jmp add xchg sub scas vrcpps popf ljmp add sub pop sarl mov lea addr16 or pusha std dec mov ds push (bad) (bad) (bad) ljmp je insl scas das iret mov je rcrb js test leave sbb insl sub lock incl jo sbbl scas imul sahf xchg decl inc lcall outsb outsb divb les add ret inc jns (bad) jg aad push push cmp int sbb or adc push or add (bad) (bad) jmp add xchg movsl lret insl and popf mov sbb xchg xlat fdivrp aaa leave fdivrp cwtl call xchg (bad) mov idiv scas xor les ds adc sbb (bad) (bad) decl dec or and xor mov iret pusha inc sbb sub xchg (bad) (bad) decl lods lcall roll inc inc cmc and lds ret scas (bad) mov mov cwtl xchg push scas mov xchg jp ror cmpsb inc das cli jg mov insl jmp or enter (bad) (bad) (bad) inc sahf xchg movsbl or jg (bad) je or sbb push sbb daa loopne stos (bad) (bad) (bad) jmp mov movsb sub cmp xchg jne or aad test push pop sbb push ljmp mov inc mov ss push aaa std fcomip sub test pop jbe jno lahf adc sbb add mov pop or or dec nop mov mov adc mov repz cmp add (bad) call test pusha test roll insb mov outsb rcr fnsave lock test xchg inc xor mov dec rcrb mov loope (bad) (bad) pushl (bad) sbb jae sbb inc pop dec xchg pop inc das xor mov ljmp sahf dec and popa sbb cmp add xchg add sbb inc inc xchg call (bad) sbb std xchg sub bound xchg or outsb hlt mov (bad) mov xchg lea test inc loop imul icebp imul sar (bad) fldl ds jle in mov sub rcll dec adc insl pop loop addr16 pop js adc sub fwait imul (bad) cmpl arpl call add sbb aas adc adc mov add xorl inc mov inc std scas cltd enter jecxz xchg insl popa sbb cmp push insb std add in ss ljmp push lret mov clc add insl sbb jne mov push xchg faddp (bad) pushf fwait test int3 insb out out dec dec sub (bad) ljmp movsb aam aam nop sbb lret fs movsb mov lcall mov scas cmp add sbb dec mov jp fist dec ret (bad) (bad) decl rcrl mov xchg mov push out iret ss cmpl (bad) (bad) jg fdivrl jbe pusha mov sbb jne test cmp push leave pop bound inc cmpsb mov (bad) (bad) pushl and cld adc (bad) push push and dec cli mov ds xor sbb mov mov cs pusha dec ljmp in je stos add ds hlt (bad) (bad) pushl lahf xchg es test insb and lcall lcall clc pop arpl jecxz ljmp outsl jecxz xchg (bad) pop push es push inc aad mov sbb cs (bad) (bad) ljmp jo or add mov pop lods cmp adc or sbb sub aaa sbb sub ds pop jl mov pop xor mov and mov lret loopne add (bad) popl jge gs movsb mov (bad) (bad) ljmp and sub dec clc lahf cmp xchg test (bad) (bad) call dec jp jmp lret or scas mov dec sbb (bad) (bad) (bad) jmp cmpsl fcoml movsl xchg pop (bad) pop sbb mov pop pop sarb test imul movsl or pop pop adcb (bad) cmp test movsb rcrl addr16 and enter (bad) (bad) (bad) (bad) in mov pop and xchg cltd jl fucomp sub mov clc xlat push xchg ljmp jmp cli pusha cmp outsb mov imul mov pop cmc (bad) pushl lock jp jle inc pop dec mov jo mov or inc imul jbe xchg dec jbe and int stos aad or or (bad) lcall popa arpl shll cmpsl xor jns or cld es xor jmp push xchg (bad) ljmp xor ret movsb mov jno fdivrl lcall int3 in (bad) fnstsw fdivl (bad) mov pop cmp (bad) incl cs cltd add enter stos add movsl jno fdivrs insb push clc (bad) (bad) jmp or es pop push fldt xchg jl jp push (bad) int3 imul mov ljmp dec addr16 stc pop pusha jno rorb ret lret push loope fidivl xor (bad) (bad) (bad) mov add lods and cmc sbb movsl push sub xchg loop push mov jb (bad) (bad) (bad) out clc xchg mov mov test fdivl add jl jnp in xchg movsb aad cmp (bad) call mov flds cmp (bad) xor pop mov pop push jge and mov inc (bad) mov loopne inc adc sub add out push int3 xchg data16 incl jmp outsb pushf pop insl sub adc aas gs (bad) incl add sbb jbe ss out sbb cmp stos lret fidiv (bad) (bad) jmp paddq jle rolb cmp insl (bad) and rorb inc pop loopne (bad) out adc and mov jns aas add sub jp in cmp shlb clc (bad) out clc fiaddl xor cmpsb xor clc (bad) mov sbb push mov xlat nop icebp mov mov push jae stos fcomip mov shlb adc jmp pop jmp push (bad) mov rcll push pop pop aaa jle into lock adc dec test (bad) pushl jbe (bad) cmp dec xchg inc inc sub cs (bad) outsl adc xlat flds add push pop jae in push les xchg dec lds dec (bad) lahf (bad) (bad) (bad) incl push test fistpl jo or jge pop (bad) or test popa outsl pusha out (bad) (bad) (bad) call imul sub xchg push lea or idivl pop test leave incl pushl mov adc popa add jbe (bad) pusha jb (bad) out clc ljmp (bad) rolb rorb dec pop shrb mov aaa add jno scas xlat (bad) cmp (bad) in dec pop lock test (bad) jmp mov xchg int cmpl mov xlat dec (bad) jbe (bad) ljmp and push and enter sub xchg leave test aaa idivl (bad) mov jbe sbb je inc (bad) pop xor clc (bad) (bad) jmp ja ljmp imul pop (bad) call dec bound sahf push push cmpsb into inc jp (bad) (bad) (bad) mov roll jge mov xor inc jo adc mov (bad) (bad) aas sub and lcall xlat sarb pop (bad) mov mov loope lock xchg and ret cmp nop xor jecxz (bad) pop or push pop sbb mov cmp inc divb (bad) xchg inc add imul outsl pop jb sub testb ljmp pop sarb loop mov decl and mov inc dec stc ds pop and jp (bad) (bad) ljmp out xor in mov mov outsb xchg inc or (bad) (bad) fisttp mov pop sub or jns (bad) loopne jl sub test cmc outsl jo mov lock mov dec daa test mov fcom and pop dec fcmovnb inc dec notl repz mov add xchg jns out cmpsb fidivr test outsl enter shll add cld push addr16 jg (bad) (bad) decl call sbb pop mov jmp sbb insb addr16 cmc cmp (bad) (bad) (bad) call repnz out pusha or das push mov test cmc pusha pop daa inc pop add and pop loopne hlt xor test mov sarl pop aas or xor jmp (bad) loopne adc test mov jmp dec imul dec xor nop xor sbb rclb xchg (bad) ds flds subl or lcall sbb and out dec xchg sbb sbb out into fcmovnu lret aad (bad) (bad) (bad) jmp fldl jo inc mov fs lret mov dec mov faddl sub mov js (bad) (bad) (bad) mov pop inc in or nop repz add out inc sbb (bad) lcall fdivp and xor (bad) mov loope jp jmp or add add les mov or and je adc adc sub (bad) (bad) (bad) call aas ret jns xchg repnz inc xchg push mov dec out inc cmp jb xor (bad) dec mov push pusha out push push push aam cld stos dec add outsl mov pop cmp xor cmp out dec ds hlt aad lret or rcll (bad) (bad) (bad) jmp sti xchg add stos pop (bad) pop or (bad) cld xor bound mov dec aas lds pushl jno js outsb jp mov test push int3 iret push dec repnz (bad) decl pop push call into lret out divl dec pop sbb jnp xor adc (bad) pushl cmp inc pop jbe xchg jne fcmovnu add std add jo pop ss movups out dec mov xchg push test test in jge add mov mov (bad) (bad) (bad) stc stos enter push lods jns xchg hlt mov cwtl (bad) xchg arpl inc sbb jg outsb jmp aad (bad) pushl dec mov (bad) ja xor sahf and push and std (bad) sbb (bad) fstpt scas fstpt rclb xor and outsl inc mov mov inc (bad) (bad) (bad) pushl gs jle movl cltd xor mov cwtl xchg jg (bad) (bad) call movhps adc lcall add ret mov outsl sbb fcomip jg aas xor je leave in mov push ja (bad) lcall add (bad) (bad) push and fbld push cmp mov mov outsb mov cmp jp call sbb cmp adc fwait aad out test je sub (bad) (bad) jmp pop dec lret stos inc jbe cli and out inc cmpsb sub dec pop icebp adc adc sbb pushl sbb sub stos cmp sbb jl mov xchg add addr16 (bad) (bad) (bad) mov pop dec (bad) dec dec jb add xchg jo cltd (bad) in call (bad) push inc movsl pxor pop inc insl pop test loope mov push add jg movsb cmp pop shrb mov das xchg dec (bad) (bad) (bad) jmp mov mov dec mov xor imull bound insl add mov movsl jl xor (bad) ljmp sub push mov mov mov ret add lods pushl xor pop data16 dec sub sahf push test iret sub pmuludq sbb add push sub cmc incb cld ljmp faddl sub xchg into fwait xlat test sbb xchg xchg push (bad) ds stos (bad) aaa cld push or cltd cmp fadds adc or pushl shrb ds sbb icebp mov (bad) jmp mov enter sbb lahf stos add (bad) or mov and jecxz lcall out clc (bad) cmp decl (bad) ljmp fwait sub fstps lds inc (bad) push add fldcw (bad) (bad) jmp or nop (bad) in pop fsubrl pop mov cmp loopne repnz mov sbb push sub decl jb scas lods fs xchg ss push sub inc pop mov sti sbb mov out cmp addr16 mov or mov ljmp pop (bad) (bad) (bad) call push (bad) mov scas mov in sbb movsl pop jns dec ret (bad) call jmp (bad) jmp cmp mov hlt stos daa inc fnsave xorl push call jle inc ds jo xor sar (bad) call adc or std and mov cmp andl jmp mov data16 call jo inc out ret aad pop testb (bad) decl dec scas aam lret mov cltd and jbe lods add jg or clc xchg or in imul aad add jmp lea repz inc jae rclb cli push (bad) (bad) (bad) dec inc test in ret dec inc lcall repnz pusha xor and (bad) (bad) jmp inc mov sahf sti movsl push jge leave into (bad) dec lret and inc inc (bad) mov clc (bad) (bad) cli adc push lcall out xor (bad) incl mov mov jne or push sub fwait out (bad) (bad) lcall cli inc sub adc push mov fwait cmp (bad) (bad) jg pop daa (bad) sub data16 pop push jb inc xlat mov jl dec lds sub pop rcl (bad) aad ret inc jecxz aas xchg fisttp orl rcl pop jmp push mov mov or and sbb aam (bad) shl (bad) (bad) (bad) (bad) cmp pop push clc jecxz jo lds add out fadd ljmp pop cld (bad) mov xchg sub add sub dec pop cmc and repnz sbb (bad) incl adc pushf clc mov cmc jmp insb out adc (bad) mov and mov stc mov icebp enter push (bad) jg test add aad sub aaa add mov aam xchg push mov push int3 push jle or test jno faddl (bad) (bad) (bad) (bad) mov and inc mov sarb mov add xchg xchg stos and aaa rol lock ds mov bound sar mov into inc xor pop clc fwait das sub call mov sbb xor mov ljmp add cli lcall aas xor mov sub mov adc std push xchg jl sti add imul (bad) mov xor jg imul jo add pop and (bad) (bad) (bad) jmp loopne cs push fidivl push mov mov lods mov sub inc arpl push pop (bad) cmp and and (bad) pop cmpb dec leave add dec out loope push loop xor gs jp leave (bad) adc cli jl cmp mov movsl mov push inc notl lock pop je jg (bad) pop ds aad fwait mov frstor adc pop mov or jecxz cmp (bad) (bad) (bad) jnp fimull xchg pop bound notb sbb outsb sbb mov daa fwait cld or out aaa (bad) (bad) (bad) inc bound cli add roll pop xchg mov jne pop aad lock push xorb (bad) sbb call push xchg mov mull clc mov vhaddps sbb or or mov or leave mov cs adc in outsb fcomi cli cmpsl push bound push (bad) (bad) (bad) jmp in sti int out movsl push adc push fldl jg xchg rorb (bad) (bad) (bad) (bad) out mov cld shll xor cmpsl cmp inc lods or js pop nop addl (bad) call jns shll leave inc add mov pushf inc mov addr16 scas mov pushf sub (bad) incl (bad) cmp aad adc add pushl mov lcall jp cli cltd jbe sbb cltd je (bad) mov (bad) fcomip lcall sbb cmp inc arpl mov fidivr fmul fwait mov sbb and jns lahf fldt pop mov xorps (bad) (bad) (bad) decl jp jl (bad) cli xchg in xchg adc out push dec adc hlt repnz adc stos insb ljmp hlt push (bad) jbe dec mov mov sub gs pop mov add sbb (bad) call cmpsb ds lret jae mov push cmp (bad) (bad) (bad) incl mov mov jmp and cmpsl cs lock bound cltd (bad) std dec std (bad) (bad) (bad) (bad) mov or inc xchg in and jge,pn cmp mov shrl jl (bad) fdivr scas (bad) pushl inc jmp clc fincstp mov lea outsl les add pop aad (bad) (bad) jmp dec std sarl test cwtl into int3 pop lret sbb pop js (bad) lcall mov mov hlt movsl les push repz je pop lock mov pop mov inc popa push pop mov xchg (bad) jg add lea aaa or ljmp sar imull pop hlt inc lods push out xchg fsubs or outsl mov std (bad) (bad) (bad) jmp inc scas jge (bad) repz jnp inc jp pop pusha sub cs sub cmp stc aas jle (bad) pushl xchg ret xor sahf mov xor xchg mov addb gs test mov int3 jge lcall inc fstpl (bad) (bad) ljmp movsb pop lcall imul (bad) (bad) pushl mov fs jb or xor add pop inc fcmovnu addr16 jne (bad) (bad) lcall stos sahf js popf fidiv stos sbb sbb inc punpcklwd jg cmpsb or push mov (bad) repnz push ds xchg (bad) pushl inc (bad) das dec xor inc leave loopne (bad) (bad) (bad) lcall lret cs mov out out push or (bad) sub call cld lcall addl orl dec pop fadds xchg loop aaa popa icebp lret lea dec (bad) mov mov push repnz dec popf and pop ret pop (bad) (bad) (bad) lcall test in jbe into xor adc nop loop arpl popa (bad) leave pop (bad) (bad) (bad) lcall adc les popf dec out mov lods icebp push cmc sbb test std fchs out (bad) ljmp (bad) mov (bad) sbb and shll call jge repz dec (bad) ljmp lods xchg scas pop sti push adc lds daa ss (bad) nopl test and cli ljmp xchg fisubrl or mov mov ds (bad) (bad) decl inc cwtl out mov dec lods cmpsl jle ret pop mov ficoml clc sar push jg (bad) incl push xchg pop scas mov mov dec sub (bad) mov mov clc mov aas (bad) jge jle stc mov das clc (bad) ljmp add aam ret outsb es mov cwtl or (bad) (bad) (bad) jmp loopne inc fstpt sub jo jo dec and stos movsl ss mov loope mov shlb (bad) (bad) jmp neg repnz xor fcoml fidivl loop mov sahf push enter (bad) (bad) (bad) ljmp and sub faddl add or xorb (bad) (bad) (bad) lcall (bad) sar mov rorl cltd jge nop mov xor mov lock addr16 mov add and aam lock xor add push dec ds mov leave es mov fistp test mov push rcrb rcr xor mov mov neg addb cmpsb xchg outsb push cmp cltd fmul mov fsubrl daa out std adc std hlt fnstcw addl out (bad) out ljmp sub loope adc xchg push (bad) (bad) pushl dec es mov icebp dec push mov popa inc lods xor push jae add je sub (bad) (bad) (bad) incl (bad) decl mov mov in enter dec pusha movups push jg push das gs (bad) lcall push or lods fcompl sarl stos dec out in in jmp sub jmp scas imul popl cmp add pop push jne (bad) pop das jmp pushf (bad) (bad) (bad) decl shr jg (bad) movsl adc mov sarb lret dec jbe push bound mov sub (bad) pushl stc (bad) out cld pushf adc xchg nop inc pop add jecxz jg add fidivrl hlt in (bad) mov (bad) pushl sub add xor jnp cld pop pop popf mulps rol mov in mov xchg incl add xchg push cmp pop sub out and hlt push outsl es incl out aas out sub insl aas jmp pop sahf dec jle (bad) (bad) jmp mov inc outsb jo aaa scas adcb add cmpsl iret mov inc aas (bad) (bad) (bad) push adc sarb pop pop sbb lcall inc mov inc cmp mov push punpckldq sahf jl xchg cld rcr or decb fcmovnb inc add mov incl ja xor fwait mov and and cld sub lahf outsl inc pop ljmp incl mov jb fstp mov pushl xchg in arpl int aad aas xchg mov insb jle cmpsl bound aam outsl cli out rorb pop pushf adc clc xchg jbe orl loopne add fnstcw inc fcoms inc into out ja sub incb cmpsl adc (bad) shr adc ljmp xorl (bad) mov decb ljmp out xor call dec cs je lea mov ljmp call pusha push mov pop adcl (bad) call ja inc ret (bad) shrl lock sahf fistpll ja pop and jl into pop mov jg (bad) cs aam outsl or cmp xor inc mov hlt dec pop outsb lods sub pop loopne mov (bad) incl inc mov test fcmovbe fild adc repnz andb push outsb loope pusha cmp (bad) roll push pop repnz jae mov clc push (bad) (bad) call mov hlt stos repz jns mov mov mov (bad) cmp dec xchg fadds gs outsb fsts hlt inc cmc ds xchg iretw jns (bad) (bad) (bad) jle pop sub xchg imul sub adc cmp dec lret (bad) decl ret arpl sub cmp pop (bad) cmp xchg add ret add dec jge push fcoms sbb ret cmp (bad) call (bad) lock shr push sahf and and cmp testl push inc lods aaa cld je (bad) (bad) popf push cmpl sbb mov roll mov mov jnp fwait mov cwtl stos sbb aam (bad) (bad) (bad) lcall (bad) (bad) xor xchg cmp dec or inc and push test mov (bad) aas adc jnp decl orl (bad) jns test sarl xchg and cmc xchg arpl xchg cmpsl sbb (bad) (bad) ljmp pusha mov es push loope sub xchg mov cmp mov push out movsb fild (bad) call jecxz fldenv mov ja sub inc ss (bad) lcall add pop mov scas push cli mov das je cmp (bad) ja pushl lcall add mov jmp stc into (bad) (bad) (bad) ljmp jg lock ja mov jl lret xchg dec stc or (bad) aad int3 (bad) shrb (bad) mov pop xor stos sbb aam or or xor ljmp or jno xchg and push cltd add mov mov xchg or jecxz (bad) (bad) lcall dec dec in xchg jns ja mov jno lahf jl cmp add idiv (bad) (bad) decl vdivss mov push daa push pop jle nop xchg jb das or (bad) (bad) out xor xchg inc add popf test pop mov (bad) (bad) dec mov clc xor mov repnz fcoms (bad) mov cmp cmp mov sub (bad) (bad) pushl imul lea inc leave xchg jne add cmc cmp mov pushl add lock xor out fs out lret inc arpl (bad) (bad) ljmp or mov sti pusha loope ret (bad) and test (bad) shlb ficompl cli decl cmp pop or scas fstpt ss cs jbe mov lock (bad) (bad) pushl xchg add movsb mov sub inc xor stc or ss mov dec mov (bad) ss rcl push lock xor sar jno js je mov cwtl mov xchg lock sar and insb cmp mov or jno stos fs (bad) xchg push fwait xlat sub in mov mov dec sarl inc loopne cmpsb (bad) (bad) (bad) lcall inc fldt and lahf imul mov (bad) sbbb daa jne push jno in call pop clc aas inc mov sahf call sub (bad) call mov jnp inc cld mov (bad) loop fildl repnz cmp mov (bad) mov and xlat inc push cmp sbbl dec dec jmp or push jp jno add cmc mov cld (bad) pushl mov (bad) push nop aaa stos dec loopne and mov (bad) (bad) jg mov pop in ljmp std push and jno lock (bad) dec jns (bad) (bad) jg mov fucomip icebp lea fildll jecxz rcrl push jle adc ror mov xor (bad) (bad) ljmp xor hlt sbb and ret push fisttpl mov jns fwait jecxz sbb ljmp jge out lods push mov xchg stos (bad) fsubrl pushf cs sti xchg fwait mov cmpb dec loopne (bad) cmp ret lock pushf and adc rol decl lcall push in int3 and dec or fldenv hlt (bad) mov cs into push push or rorb cmp sub mov call cmp xchg lea add pop jno lods bnd jl cmovge pushf pop movsb (bad) xlat and dec mov mov sbb mov ret (bad) (bad) incl xor ficomp cmp jne mov ret pop mov push enter (bad) call xor xor sahf sahf test popa jg inc push mov scas ljmp test mov add sbb inc cmpsb insb ja mov leave fs lea adc jbe mov fiadd fcoms jg sub xchg mov call add decl push ljmp ljmp dec fldcw or mov sbb stc setp mov mov in and pop sbb adc (bad) (bad) (bad) (bad) cmp or mov addb xchg clc fidivr lods mov push lret dec test (bad) mov pop dec lods mov outsb lahf xor push adc pop mov (bad) lcall mov mov pop push and in mov jmp imul mov (bad) popf mov loopne jns scas in emms gs fwait mov (bad) push jge xor jae mov movl (bad) call jae pusha addr16 (bad) cmc adc cmp shll jg cmpsb pusha shl push mov mov or (bad) call fcomi and inc mov rclb idiv (bad) pushl ds xchg loop dec xchg push or push popa cld jne sub inc sarb stos bound clc hlt xor int3 push loopne,pt ljmp push incl lret imull (bad) dec movsl dec pop xchg push (bad) jmp jmp push fwait pop es dec xor shlb xor adc into shl xchg pop lock decl jl dec in cmp daa sti mov mov bound ss jg repz test cmp lcall push jl (bad) or mov repnz push jl out fistpll mov xchg cli or adc imul cli loopne dec out jo mov js mov stos gs inc inc hlt stos pusha sub mov decl jl lcall bound sub push adc jnp decl push (bad) sbb stos dec xchg mov xchg push and (bad) push dec subb pushl mov insb sub sub js out inc adc (bad) lods insb xorl (bad) (bad) lcall negl mov stos rolb mov out or pop shrl add out imul cld out test jecxz sub push gs aad inc and mov lahf fsubr das (bad) (bad) (bad) incl jnp mov or cmp xor ja xlat shr pop jmp or push sbb ds pop mov ds test dec ret lahf jge xor mov sbb ljmp sbb pop and push sub inc mov rcl dec rorb out nop mov inc test dec fildll (bad) call fmull imul subl jb (bad) out shrl jns loop fwait sub incl das add sti cli (bad) lret in movb (bad) (bad) ljmp mov pop push mov add sub ljmp xchg (bad) fdivl lds (bad) call sub pop xchg push mov imul add (bad) ljmp add in jge das dec js mov test mov (bad) mov inc push bound ja pop pop add jno and (bad) (bad) ljmp jns mov decl push lret pop je xor jp call cli xchg aam (bad) (bad) lcall adc lret ror movsb ljmp and sbb sbb call stos push mov (bad) out mov (bad) lcall adc push (bad) (bad) (bad) (bad) mov xchg call call (bad) push xchg sbb mov mov jle popl clc (bad) ljmp pop xchg stos jns insb (bad) cmp dec incb inc mov push mov jecxz add jmp add mov pop add add cld mov lcall lret xchg movsb cmp push imul fwait add decl push imul jg pop xchg push push cmp adc push sbb (bad) (bad) (bad) jmp mov push enter fs dec (bad) aas push cld sbb xchg outsb outsl pop loopne (bad) (bad) adc ljmp sub out roll dec (bad) (bad) (bad) (bad) sti fcompl mov std outsb shrl cmc test jmp rcrl sub push addr16 idivb hlt pop cld push outsb aaa xor mov cmp push jecxz andl push scas mov dec cmpsl lods mov (bad) mov xchg xor inc and adc int sub stos mov push and (bad) (bad) (bad) jmp (bad) jbe dec mov loop subl testl sub jle ss (bad) (bad) ljmp or mov xchg pop insb lods movsl std (bad) ja sti aas call inc sbb pop inc rorb xchg mov dec fimul decl inc xchg es (bad) aam xchg fnstcw (bad) pushl xor arpl mov xchg pop sahf fild adc xor rsm aam pop (bad) (bad) (bad) (bad) jns mov xlat jge (bad) xorl cld stos hlt inc xor add ljmp inc jo sbb mov push dec xlat xor (bad) (bad) jmp pop mov cmp popa mov sub and mov xor (bad) lcall adc xchg xor jle movsb hlt sbb shll pop mov (bad) (bad) out cmp icebp fnsave roll mov (bad) fcoms adc insl mov ret xchg (bad) add (bad) and xor lcall and push jmp das cli test sbb in pushf imulb xchg cmpsl lods mov (bad) (bad) call adc lods add mov shrl aad push pop aad push sub sbb jl mov (bad) (bad) incl mov sti iret int outsb test dec daa xchg jbe ja icebp mov incl mov fs arpl ret cmpsb pushl leave ficomp sub push add jp mov xor out fisubr inc cmp ret pop jne mov inc jb and (bad) ljmp ds pop aam lahf inc sbb std pop rorb pushf pushl cld decl rcr sti pop xchg lret outsb in cli repnz fnstcw pop js mov (bad) incl cltd sbb test int sbbl and fstpt andl (bad) (bad) jmp xor (bad) xor xchg loop out inc stos arpl inc jnp test (bad) push sub das mov jmp mov xchg dec rclb push mov (bad) (bad) cmp push ja cltd aaa push push (bad) stos fnstsw scas fstl div stc popf sahf (bad) (bad) lcall loope lods inc jno lcall aam rolb stos sbbl jge mov and push sub ds (bad) (bad) jg scas inc daa lret addr16 cltd push sbb dec std and pop or pop inc add sub arpl mov rcrb jno lea jne les loop xchg loopne ret js (bad) and (bad) (bad) lcall dec sahf push mov pushf gs xchg xchg mov mov push insl dec push imul mov ja sti push cmp ds ret ss xchg cmp fwait je mov jp (bad) (bad) pushl jge dec out (bad) jne mov xchg in sahf ja add xchg test movsb in jmp lret mov (bad) paddsw aam dec and test cld pop sub (bad) fisttp adc ljmp bound fs mov (bad) daa push cli add (bad) mov int (bad) xor call (bad) mov (bad) loope cmp mov pop loopne ret test idiv jp cltd sbb add je cmpsb std cmpsb push (bad) (bad) (bad) decl xor cmp lea in movb fistpll inc adc stos sar (bad) (bad) jmp (bad) push fildll mov jmp mov xor js jp popa dec mov enter (bad) (bad) (bad) mov sarb and sahf repz xor push xchg jp mov dec mov rcrb mov sar (bad) pushl stos test mov pop aad daa cmpsl test pop xor bound call xchg mov jae adc or lods shll clc aaa cld jl leave pusha stc inc sub mov or mov ljmp sahf es lcall and pop (bad) (bad) (bad) (bad) cmp pop push add cmp sbb xor roll (bad) (bad) (bad) jmp inc call inc inc adc or rolb push cmpsl sar out popa push xlat dec (bad) mov idivb inc cld and outsl (bad) xchg pop mov js stc (bad) dec loope lods rcrb out outsl push pop mov push jne dec (bad) cmp (bad) jg sbb pop cmpsl mov fwait xor ljmp fs pop iret repnz rorl stos nop into lock insb sbb (bad) fbstp repz push mov (bad) (bad) lcall lret scas sbb js lret fdivl xchg pushf es clc mov movsb js or clc sbb gs or sahf inc out or adc clc inc mov ja sub push call dec (bad) inc test dec test pop dec dec xchg mov in movsl dec and (bad) mov mov mov into mov loop jg xchg xor sbbl sbb (bad) (bad) push ja and int mov (bad) pop insb (bad) push mov pop mov movsb das clc (bad) (bad) cmp push fnsave repnz (bad) mov and (bad) (bad) pushl jo sub adc mov xchg jl mov jnp jno insl (bad) mov jns cmp add sbb in dec mov (bad) (bad) lcall fsubrs pop xor int3 shlb fwait call adc fwait sub pop add js pushf outsb inc sarb pop cmc adc pop cmpsb ss inc push es nop sbb sbb add ljmp jecxz push mov mov outsb scas out push bsr test xchg cs mov hlt loop push in dec (bad) mov jg fisubl lods pop jns xchg add dec scas dec (bad) ljmp notl adc xchg mov jle loopne jmp push cmpb dec sti mov push push test pop hlt call loop cmpsb sub adc scas mov sub test (bad) (bad) (bad) in iret mov mov push mov pop mov leave add mov cli sahf ljmp out cli lcall mov xor movsb inc cltd in nop cmp mov adc (bad) (bad) lcall xchg imul insb rcrl inc xor jno xchg adc out push aaa mov (bad) (bad) (bad) lcall jbe into ficomp push pop jmp and test fcmovnbe and ret (bad) (bad) (bad) jmp fcoml xor pop (bad) pusha xchg xchg mov xlat aad jge loope sbb cmp (bad) pop (bad) (bad) (bad) ljmp std or aam fcoml les xchg lea scas jl (bad) (bad) call cmp insb or xchg xchg in test je fincstp or dec jecxz push xchg inc aas mov (bad) (bad) inc inc ret cmpsl lea or pushf dec in mov xchg cld and fcmove dec movsb pop jg incl mov fcmove outsb lret cwtl stc pop ficoml cs ds mov popf mov jo call xor in pop out mov cmp jle xchg mov mov sbb (bad) (bad) call lock pop dec pop call insb sarl fwait sub sbb in lock std lock (bad) (bad) jg and decb mov lahf je pop ret sahf mov mov js lock jg ds fnop fcmovu stos xor add fldt dec pushl cld fistp pop daa mov push ja jg ficoml pop (bad) (bad) (bad) call ds adc xor outsl mov (bad) and xchg adc mov out pop and fisubl pusha or xchg pop mov mov (bad) (bad) (bad) ljmp cld mov inc sbb jmp add movsb scas inc adc lret xchg add mov inc (bad) (bad) (bad) dec mov (bad) jge push mov ss das jo mov jbe test add (bad) (bad) pushl mov pushf mov mov fs in inc adc fldenv push add (bad) (bad) jmp mov jmp sbb mov or mov cmpsb pop (bad) (bad) decl jecxz (bad) mov pushf adc jbe (bad) out or iret fist jo aaa cld call (bad) negb mov int pop inc push mov xchg loop call addb (bad) adc call lds call pop lods stc (bad) xor (bad) negl popf xchg mov push xchg xchg arpl stos cltd mov stos arpl adc push hlt (bad) sub sub in (bad) (bad) call mov and lds sub cmp jmp scas adc mov (bad) (bad) (bad) lcall (bad) pop loope decl sbb pop or jmp or incl mov test push cmp cmp (bad) (bad) jg imul addps aad fnsave jo (bad) lock jmp jle sbb hlt stos sub jmp iret (bad) aaa and out es jmp lcall test mov cli jne inc mov or mov lock dec scas test imul pusha insb fnop (bad) fcomip lcall push xorb outsb rorb push test int3 cwtl call test (bad) (bad) (bad) cmp cwtl pop inc xor outsb dec xchg inc or pushf xchg or mov and mov (bad) (bad) decl sbb inc mov dec pop rorb mov cmc ljmp out test lcall aam jbe cmp jb in or push adc out push pop mov (bad) ljmp mov jo mov xchg call lcall add cld aas mov pop (bad) aam xor (bad) incl cli jle mov adc lock je loop add (bad) jmp ficom aaa insb sbb sub push ret or jl les push or xadd in or fisttp sbb mov call and jg pushl je mov nop dec mov scas xor pusha lret lcall fstps push xchg pop in mov xlat (bad) (bad) call ficomp outsb fimull mov clc push cld and cmp jae lret add (bad) jmp push sbb addb mov fiadd adc cmp jne ret cmp cs xchg lcall pushf js cmc ljmp es cs addr16 pushf fsubrl sbb (bad) lcall cmp pop aam rcrl sub dec in cli push hlt jbe lret or xor (bad) jmp xchg xchg pop xchg mov lcall push outsl ds aaa jp fmull inc xchg adc sahf scas jl orb sub (bad) (bad) jle loopne iret fldt ficomp (bad) push (bad) stos mov bnd add clc ljmp gs inc in pushf into mov sbb dec (bad) (bad) pushl les dec stc jl call mov inc inc repnz xchg xor and mov sbbl test insl fildl (bad) (bad) (bad) mov add shlb add movsl addr16 add mov push ret clc (bad) (bad) in sti scas test xor mov (bad) (bad) (bad) dec dec mov sarl mov mov jmp dec (bad) out lret pushf (bad) jg pusha ljmp lods hlt cli mov jae jo pop (bad) (bad) lcall push sbb mov mov pop leave dec lods dec mov pop pop jne outsl xchg hlt decl mov aaa pop nop jo fstpt incl lea mov mov push lahf push sub loope rcrl out xchg (bad) (bad) out int imul jg sbb test sub clc mov xchg cmp (bad) jmp call push mov (bad) push jl xchg loopne dec scas add pop hlt add (bad) lcall mov in sbb pop xchg lods movsl test cmp (bad) (bad) fistpll and cmp jmp scas mov and adc inc loope ret fcomip (bad) ljmp xchg scas popa clc adc jne pop jl push (bad) sbb int sti mov repz enter add push andl cmpl xchg stc hlt mov (bad) cli ljmp test daa (bad) add or pop mov idiv jg mov gs mov or frstor sti (bad) (bad) (bad) ljmp xlat ror push aad mov dec call cmp lcall fcomip decl mov jne xchg sti in add xor sarl call sar jg ds mov (bad) or loopne jmp repnz xchg xor dec cmc xor sub clc inc push xchg (bad) (bad) (bad) decl out or mov cmp mov inc mov xchg pop arpl cmc (bad) (bad) pushl xchg push push sub outsb clc push jns test movsw jg out mov ret jne ds xchg pop (bad) movb test dec inc push add push lcall shlb jp (bad) mov (bad) (bad) incl cltd pop hlt inc repz jg add push sbb js sub hlt pusha add lcall adc or or and ficomp int3 mov enter push mov clc and pop add arpl (bad) (bad) (bad) decl das xchg into dec adc mov test or pop imul out ljmp incl push pop cmpsl clc sub repnz in scas mov jle je fstpt ljmp cmp (bad) mov mov jg pop scas push add pop pop iret ret lock xchg lret mov mov mov jl lea jmp fisttp into mov outsl sti lret icebp in and incl dec cmp enter aad lods pop sub sti rclb fs lcall lods insb pop adc aas add push mov mov out daa cs jnp into or lods clc cmp mov cli push mov mov push fsub mov (bad) decl repnz imul mov or cmpsl lods (bad) (bad) (bad) ljmp pop mov subl icebp xchg add callw dec loope out hlt mov xchg push (bad) (bad) decl loope sbb mov lahf lea and mov push push inc out (bad) ljmp incb xchg dec test movsb pushfw mov sbb js (bad) (bad) mov aas add fisttp adc aad inc xor xchg or (bad) lcall dec sub das dec push cld add (bad) (bad) jmp mov pop inc pop sbb mov add lock or sbb sbb cmc sti leave out cmp jb mov lcall nop nop jns xor dec cmp dec mov mov or inc xor pushl into cs je arpl ret test lcall ds push or push outsl lret hlt cmc pushw mov out ja outsb in (bad) (bad) (bad) incl lcall pop nop int3 movsl fstl push mov test (bad) pushl pop lea test (bad) iret pop lds sub add leave call (bad) pop pop mov cmc lcall call push out je (bad) js mov mov xchg pop pusha jle xor (bad) int hlt cltd (bad) jne mov clc cmpsl fimul add cmp push sub push push out stc mov (bad) (bad) mov lds cmp add lds dec outsb xor (bad) (bad) call aas sub sub sbb add sti or in add sbb mov (bad) decl add xchg test adc pop or mov cmpsl jge xchg sub jb stos sub mov dec in sbb decl inc pop enter stos cmp mov mov sar (bad) decl das outsl or pusha xor push and push push or cmp (bad) lret xor (bad) decl or dec por and (bad) push addr16 and movsb sub rorl scas adc incb ret inc rolb (bad) (bad) stos sbb sbb mul xchg pop ja push mov aad pusha movsl lcall movsb data16 xchg xchg mov mov fcmovne mov and pop cwtl adc adc clc loope dec pop mov mov xchg in (bad) lcall add inc dec sbb add xchg xchg push cmp in (bad) (bad) mov aas into fdivl cltd pop stos scas mov push jnp fcmovu enter pop incb icebp incl xlat pop nop shl fldcw (bad) xlat add hlt popf cli dec lret sbb icebp jp lods imul fmull (bad) (bad) cmp cld inc jb and inc or xor sub dec xchg pushl mov ss mov jae jecxz or int daa and jno pop add mov mov or fcompl push pop cmp (bad) (bad) fcomip outsl mov sahf ret in pop clc add daa call adc mov incl pop (bad) (bad) push dec lods push or fnop (bad) (bad) lcall sbb jp jg mov popf (bad) repnz das (bad) (bad) (bad) fildll xor mov fdivrs cld mov cmp icebp cmp (bad) cmp lret push movsl scas pop je cmp cmpsb fbstp mov or xchg mov (bad) lcall popa sbb fmuls scas push (bad) mov sbb jo fisubl push add and pop insb and push lods out push mov (bad) cmp cmp (bad) jg xor inc inc mov fwait enter inc loop pop fs and add mov fs push adc xchg jle and int3 inc sbb sub push jp,pt dec push leave cmp scas mov pop fcoms dec mov mov mov adc ljmp out iret xor or push add mov xlat aaa popa jae aam bts mov xchg inc lahf xor xcrypt-cfb cmpsl jecxz lock (bad) (bad) mov adc and (bad) (bad) (bad) call xchg pop cmp pop jg notl xor clc ret adc mov in mov inc xchg lock push ds inc aam hlt mov xchg xchg (bad) (bad) (bad) push pop push sub int sbb inc in push flds adc lods aas nop jno xchg xor xor mov subb inc nop mov dec int pop ds sbb pushl xchg pop iret cmp (bad) stc dec jge jns and das sahf lcall ret mov xchg jecxz cmpb inc lahf std mov or imul inc (bad) (bad) (bad) jmp push add or lods add cmpsb mov push cli mov shlb dec outsl test and jmp decl lods inc stos and ret add push popf nopl stos mov pop inc lock mov (bad) xchg inc in (bad) (bad) inc add loope jae cwtl inc dec cmp insb mov mov pop (bad) leave xor cli (bad) decl aaa cltd and xchg out (bad) sub sarb push es loope fnop cmp mov lods sti push mov (bad) (bad) mov adc cmc icebp loopne xor js ljmp mov inc push mov decl test ljmp aam sub pop repnz sub je push cld stos inc jecxz sub lret dec cmc (bad) (bad) incl bound stos mov movsl ret dec sbb jb mov mov push daa jg (bad) (bad) (bad) in je dec hlt push mov repnz sbb jnp outsb imul mov mov test sub aaa cmp stc add push cmp into jo push mov fsts repz (bad) xor lods mov inc mov sti clc pushl imul fiadd add (bad) (bad) mov and mov pop jl xchg scas fs or repnz sub scas out pusha cmp test mov mov imul add inc dec jg ret repnz add (bad) push sahf das mov dec mov pop push push imul mov aaa xchg repz mov mov jg ss pop xchg inc (bad) mov (bad) (bad) (bad) (bad) js and in pop mov rorl scas (bad) mov scas jmp inc bound jle addr16 insb repnz dec cld jns mov fist cmp pushl push mov clc mov mov lret jae sbb std roll sbb (bad) (bad) incl sub push out mov std inc sarl test bound mov std icebp scas and les sub pop mov movsl adc leave lock mov (bad) mov inc iret test push pop or jmp mov repz push push sub icebp scas adc cli sahf dec stos les (bad) (bad) (bad) incl shll popf fistpll divl lock mov cmp (bad) dec or or sub aaa and sbb mov shll imul (bad) call repnz (bad) or jl push xchg push cltd pop shl outsb mov or movsb (bad) fdivr in (bad) call jnp mov mov dec fcmovnb xlat es or (bad) hlt enter (bad) (bad) ljmp sub insl dec mov jmp (bad) aam scas jp sysret lcall ret add (bad) call jmp push push and test push or sub (bad) iret xor ljmp cmc sbb pop mov push dec test cmp jle and push cmp (bad) sbb fldl (bad) (bad) jmp mov pop cwtl pop mov and inc mov xor ret sahf imul repz cmpsl xor cmp mov les fisttpl bound mov (bad) mov cmp (bad) (bad) incl cmp lds mov inc jno xchg mov call mov pop xchg pop nop je dec cmpsl movsb hlt fild mov dec mov (bad) inc push popf push mov add mov pop jb lcall sub movsl ds (bad) hlt arpl adc jl xchg (bad) lea mov pusha push mov (bad) (bad) (bad) dec mov inc sarb pop lret sub pop xchg sub mov jno push sar pop pop icebp mov subl aas sti aam cmp sar mov call inc addr16 mov pop (bad) (bad) (bad) call cld testl cmp inc xorl fucomi stc aaa fcoms iret sbb lcall movsb test hlt push push insb cld jo ret daa insb bound loop (bad) (bad) jp dec push aam test mov cld rclb andb pop push push (bad) (bad) mov stc sub adc iret jl xchg (bad) sahf popw pop push stos (bad) (bad) (bad) pushl ja inc in sbb xchg mov idivb mov xor out popf lds ja mov (bad) (bad) (bad) fmuls sbb popl imul jb scas mov les or add sub lods jg mov decl call mov test inc cli push and pushf cmovg or mov jne jge xchg ljmp sub push shll dec mov hlt xchg dec sahf sahf push (bad) (bad) (bad) (bad) dec jle sahf xor pop sub mov pop enter push add and (bad) (bad) sti hlt lahf (bad) in orl popa push fsqrt aas in adc arpl jge (bad) (bad) fistpl call sub cs ror (bad) (bad) mov jge pop inc mov xchg xchg ljmp in sar xchg jl (bad) push (bad) pop mov pushf push inc arpl aam lcall shll jno pop pop jmp jno mov jmp sbb add (bad) (bad) sti add jb sbb loopne lds or in cmc xchg add pop push sub (bad) call or dec jl loop imul dec dec cmpsl sbb xchg addr16 adc (bad) (bad) (bad) ljmp sub pop xlat in sar jge popa pmulhw in dec pusha iret jmp xor das cli (bad) dec cmp (bad) enter jae test add mov xchg insb shrb (bad) call sbb xlat adc push popf dec shlb push sarb push loopne xchg (bad) jg call push test movsl push mov adc inc sub das idiv (bad) call dec dec cmpsb sub mov imul icebp cltd lret rorl loop in cmp xor or mov push jae lods lcall add xchg popf das xchg js (bad) (bad) out mov inc adc xchg out mov mull or sub lds or jl push mov popf mov (bad) fidivrl and aas jg push inc inc dec leave push std dec out add jp cmp mov sar (bad) (bad) push inc push sahf scas out int fcoml rorl imul out movsb rorw arpl add mov decl clc adc mov pop subl lods jb decl push xchg or sub movb jb add mov inc (bad) (bad) (bad) fildl popf int out mov jne jle mov jp std mov cli (bad) (bad) jg dec cmpsl outsl lock xor inc pop (bad) lock xchg ja xlat adcl pop mov jmp (bad) mov mov dec faddl push or fistpll mov addl mov lods cwtl and popa xchg sbb addr16 in stos (bad) call add inc mov fisubl mov fstpl (bad) (bad) mov dec (bad) push xor insl dec inc pusha add pop or sub (bad) call push (bad) push call inc xor popf pop jl xchg inc mov and hlt (bad) (bad) pushl sahf cmp jp mov mov mov pusha je jp (bad) (bad) (bad) fistpll ret mov lea lcall (bad) les out dec pop (bad) (bad) (bad) jmp scas lret out dec lcall rcl daa cmp sarl mov push or cli mov mov add mov movsb fstl sbb aaa lods mov dec adc jns sub pushf inc dec mov test push rcll sub cmp sbb xor mov ds sahf adc insb jle push jne (bad) sbb (bad) (bad) call mov pop fnstsw inc inc push push jo mov ficomp push or (bad) pushl bnd cmc sub (bad) data16 icebp adc inc lods mov shll dec je fdivr (bad) (bad) jmp or pop repz es xchg jbe push jnp in adc mov mov add sbb test xchg mov or call and fs or cli cltd adc test std jmp sbb nop push ljmp jmp or cmp sub lods lea mov (bad) mov push sbb and fsub xor pop add (bad) jg jno jae das insb imul in lods fmuls int3 iret xorb mov js mov cmpsb mov jge flds push inc jae mov (bad) jmp jmp or push mov mov or jns call ds stos aam add data16 sbb movsb (bad) (bad) (bad) lcall or sbb fnsave sub add ret mov ds popa xchg pop push jle jle mov or (bad) pushl mov adc sbb mov xchg mov adc (bad) (bad) (bad) fistl sbb icebp frstor lock push scas in mov dec inc es imul lods imul test xlat cld mov enter pusha loop mov sti out sbb xchg mov das test ret inc movsb cmp inc sbb cmc mov pop bound dec lea (bad) (bad) (bad) jmp inc cwtl inc push and test or and xchg or push in add (bad) (bad) mov pop cmp dec in and (bad) lcall bound inc jbe xor or adc adc mov mov std jg push jg (bad) (bad) jg clc (bad) mov sub cli jns or or mov ss (bad) fdivrs mov (bad) movlps pop inc push fsubrp aas add lods adc test sarb in (bad) adc pushf lock jp jbe (bad) (bad) incl and inc js out mov xchg fs aad xchg mov mov mov push test pushl cmp add call jle or mov andl mov (bad) decl cmp hlt jg inc xchg mov icebp nop jle jg pop mov dec (bad) (bad) decl cli pop xlat mov pop ds ret mov ss fisttp cmc jo mov add test xchg icebp (bad) call stos aam leave cmp insl adc xchg push inc leave (bad) or (bad) (bad) (bad) push addr16 int mov cs daa and outsl subb mov lahf (bad) (bad) (bad) push mov jo xor mov cmp out std mov in adc or lret lcall push lods sbb mov and xor inc xchg call (bad) fnsave cmp icebp (bad) jg loopne sbb dec out sub mov fs mov cmpsb mov cmp arpl call idiv xchg mov push fisub pop scas sbb ljmp in clc inc jnp out dec int3 cmpsb xchg clc and out pop push sahf push (bad) rorb out js push jbe popf sbb xchg and inc cld xor fdivrp ja clc das ficomp xchg push ja repz je mov (bad) pushl test push sti loopne leave xchg and imul and xor call test pop mov ja icebp popa cwtl dec push inc or jo mov push fcomip (bad) mov push jecxz or sbb mov mov adc daa (bad) mov mov decl dec xchg js aam jle (bad) (bad) (bad) (bad) call ss addr16 nop stos imul cmpsl data16 jo out fidivrl adc mov adc lds popa pop xor sub sub (bad) jg cld popf repz adc test mov mov addr16 push (bad) (bad) (bad) (bad) fimull in clc movsb cwtl mov pop push sahf and ds movsb lahf or pop subb or xchg and push andl mov pop mov (bad) sbb (bad) (bad) call (bad) pushf sub or (bad) fcmovbe push aas adc cmc cmp incb add add (bad) push xor xchg add pop loop addr16 cmp pop addr16 and mov push jg hlt inc lods outsl adc sub jbe frstors and push (bad) (bad) pushl pop lcall lahf aaa notl out aaa mov push lcall cld mov pop mov (bad) (bad) (bad) mov lods daa ljmp push xchg stos enter and mov jno (bad) (bad) (bad) (bad) push push mov sbb into or mov std cmp mov push add mov (bad) jg ret wrmsr cmp or fisub fstp pop lods int3 (bad) (bad) jmp enter jns jne bound stos mov test insl sarl hlt mov (bad) (bad) pushl (bad) in ds aaa inc lret out (bad) (bad) pushl add mov sahf inc jge add insl xor js mov cld inc subb rcrb pop aam push ljmp sbb mov jnp push scas mov and sti stc jle jg jmp xchg push aaa (bad) mov out out add jno insl in cmpb jb stos lea or sbb sub and test stc (bad) (bad) pushl adc mov inc add jmp mov rcl cmc incl andl aas mov scas and cli (bad) incl out (bad) (bad) cmp mov mov cmp scas lcall cs addr16 dec cmp mov fst sbb jecxz jg push imul mov jmp pop arpl inc jb adc (bad) (bad) lcall fcom inc sbb inc dec js inc push jo andl jp ret lods jmp (bad) fcmovnbe cmp cmpsb js pmulhw jns mov stos dec mov (bad) (bad) jmp int3 inc mov loop loop in (bad) mov push push jg lock xchg mov jmp (bad) (bad) mov mov (bad) mov je xchg cmp imull andl push aaa (bad) (bad) decl push add and (bad) (bad) (bad) dec cs sbb (bad) idiv pop fstps (bad) in sub fisttpll mov mov incl mov mov dec mov in xchg (bad) lds les cs inc imul or jae ljmp call push pop in push cmp insb ror xlat insl insl push push push cmp or add (bad) (bad) incl dec sbb hlt and dec jns inc pop dec aas ret xlat push nop cli mov fildll xor int3 (bad) ljmp inc adc mov and mov rcll lock (bad) call cld xor movsb pop adc out mov mov (bad) (bad) cmc adc xchg mov push test jg pop add flds shrb cmp aas mov int (bad) (bad) incl les mov icebp je and jl loope loop cwtl cltd imul add (bad) inc xlat in pop pop jge push cmpsl dec and in enter pop test jg mov cmpsb jg movsb hlt (bad) xor sub (bad) jecxz mul test xchg (bad) (bad) (bad) (bad) cmp xlat enter ds (bad) cmp and cmp call add pusha shr fstpt sahf pop sub xchg pop jno (bad) (bad) pushl dec xchg roll sbb push pop stc mov cmpsl inc mov out int3 pop pop lods ja (bad) (bad) jg dec pop ds jle pop add jbe cmp faddp clc in test (bad) (bad) (bad) pushl (bad) shr or fidivrl cmp xor lods in hlt mov cmovge push pop fs incb xchg cmpsb jp push cmp (bad) (bad) lcall (bad) in mov adc es mov xor sbb mov push or (bad) (bad) dec popf and idiv xchg jae adc js fidivr sub xchg dec (bad) adc or popl pop push cli ljmp fnstenv (bad) (bad) hlt int rorl add lock incl and jge inc xchg enter pop or icebp hlt test lods (bad) (bad) (bad) (bad) jg call sti ror fwait outsb iret adc dec pop mov or jp es (bad) (bad) (bad) (bad) jmp push dec stos mov dec cmp cltd inc sti and scas shl in add or inc (bad) (bad) jl xchg mov outsl sub clc sti pop popa es insl jp cli les ljmp dec ja rcrl repnz (bad) and pushf dec (bad) pop xchg pop or (bad) std sbb loope (bad) call fdivrp inc add (bad) divb sarb xchg fcomip das xor shrl lds sub decl mov or iret jecxz or decl lock out out dec insl jae aad movsb mov xchg cld mov (bad) (bad) incl adc add js in fild mov cmp cmp (bad) (bad) (bad) (bad) jg push or lods mov push in test shrb rorl (bad) (bad) fstl arpl mov push loopne add aaa (bad) (bad) lcall mov lods mov adc ljmp (bad) repz (bad) pushl out xor add add sbb pop inc xchg mov addr16 xchg cli and ret cs jge clc fmulp xchg sub mov sbb xchg clc push ds test outsb xchg add (bad) mov orl dec jg (bad) pushl lret pop adc (bad) pop pop sub hlt std sub int3 dec mov in movsb (bad) (bad) (bad) pushl mov mov in push popa dec iret repnz jp rorl mov insb (bad) (bad) (bad) decl cwtl outsb and arpl pop fdivrs pop stos stc (bad) mov jbe fwait push mov sbb (bad) (bad) (bad) out imul push pushf dec jmp and add fs (bad) ljmp mov lahf dec adc adc inc jg aad aaa cld scas incl out aaa add jo lea jmp ret lcall (bad) jne (bad) std (bad) and mov and mov decl mov mov add and jmp xchg gs in jmp test loope xor cltd mov lcall push mov ss jb fisub dec cwtl lock jb and adc test (bad) cld jp adc pop pop adc fcompl or sar outsb xchg sahf add jns jg fidivrl (bad) jge jp dec lods in outsl cwtl xchg iret rorl adc jge (bad) (bad) jg mov xchg jae test mov inc inc xor pushl arpl ret out jae lcall mov (bad) mov push mov xchg sahf mov xchg hlt fstp mov dec cmpsl inc jp cs (bad) (bad) (bad) jmp dec jp jmp lcall sub and jne adc pop pop std (bad) incl or dec xchg sub jge xchg fucomp es in aam (bad) decl lock xchg pop jecxz out insl es repnz mov insl movsb sar (bad) cltd pop cmc add mov push sub xor pusha in pop (bad) push das add test leave out mov and data16 arpl popa cmovne (bad) (bad) (bad) (bad) fdivrs sub stc out mov aad push daa inc cli test adc (bad) incl scas sbb stos xor stc jo sbb je loopne push or adcl cli iret ret ds mov cli jae adc out xchg jle (bad) (bad) (bad) out pop (bad) mov clc xor clc popf std lahf inc xchg cmpsb aaa push cmc int3 pop shlb (bad) (bad) (bad) jmp xchg call cli arpl xchg imul rorb adc jl mov enter cmpsl and jmp sbb pop sbb push ljmp cmp push pop jmp sbb mov jl outsb lock rorb leave add adc je out jns sub (bad) das sar (bad) jne inc ja bound jl pop sub insl in jnp rcl incl xchg in and shrl ds (bad) (bad) ljmp cld push rol mov fildl cmp insl sahf mov out (bad) push push pop jmp (bad) (bad) (bad) (bad) (bad) (bad) fbld sbb sub mov xchg mov orb add (bad) ljmp mov cmp lret (bad) (bad) decl mov rorl pusha dec loope pop lea cltd bound rclb ljmp sbb add mov and cli lods mov mov sub dec adc jmp and out (bad) (bad) (bad) jmp or movsl enter inc in scas and dec pop scas push jmp push sahf or sti (bad) (bad) (bad) incl mov sub push mov mov scas mov xchg outsb int3 (bad) (bad) (bad) call xchg enter aam addr16 mov (bad) notl leave (bad) jmp (bad) (bad) pushl push push adc bound mov sbb ljmp mov out bound push inc and fs inc (bad) ljmp movsb xor in adc jle push loop fwait jge out mov cmp aam (bad) decl lods shr xchg movsl mov xchg xchg push adc clc add cltd je or push mov dec inc inc insl xchg gs add out jno push and call xor mov outsb xor (bad) (bad) fisttp in dec sbb fisttpl and (bad) (bad) (bad) jge adc gs jmp (bad) adc xor mov xchg sahf inc cwtl mov aam (bad) (bad) ljmp jns mov mov scas cmpsb adc pop mov popa stos xchg loop (bad) lcall mov fldl jp xor dec (bad) dec movsl jecxz,pn inc push loope sub mov cmp push xchg pop pop out (bad) call mov (bad) (bad) push icebp out mov out lahf es pop clc adc jae xor pop xor (bad) stos mov sub jo mov mov push pop inc ds test (bad) (bad) jmp fwait mov inc jp mov pop mov cmpsb mov sub outsl clc pushl xchg cwtl enter mov bound lock loope popf jae push (bad) (bad) cmp mov mov insb dec jmp pop (bad) nop lods push (bad) cmp call test mov dec lds clc scas push mov sbb out push dec std ds (bad) (bad) dec int3 mov inc cli pop push xor fnstsw popf in mov inc testl ljmp mov mov (bad) enter sti lea scas fs (bad) pop add (bad) (bad) incl test pop cwtl les sub les loopne cmpsl stc and push xor pushf inc adc inc scas sub jns out bound ljmp ja nop or add int mov (bad) (bad) jg movsl pop aam cmp push out cmp out mov push and (bad) (bad) (bad) jg or and insl mov fcmovnb sbb cmp xor std or sub jmp dec mov mov ror outsl pause out adc ja push repnz out fiaddl cmp (bad) (bad) (bad) jg pop add (bad) repnz mov sub xlat mov imul movsb lret les ja dec adc arpl or xorb add mov lds and icebp (bad) inc subb push cmpsl mov jmp cmp shrl shrl push (bad) adc pushf adc dec dec faddl mov pushl inc idiv cmp xchg (bad) pusha or (bad) fisubr dec mov push mov cmpsb mov fdivl sub (bad) decl rcrl jp adc roll sahf mov (bad) (bad) (bad) lcall shl xor sub add sub dec das cmpsl mov shll jmp loope (bad) sbbb (bad) push (bad) mov ljmp and popa jae sub test sub mov mov ret ljmp lds in push adc (bad) enter (bad) (bad) (bad) incl repnz cmpsb nop xchg jb mov jle nop in outsb dec iret sbb inc ds pusha adc or in (bad) (bad) pushl xor xchg insl das dec inc sub inc (bad) cwtl into movsl stos xor cld xor or incl jo test jae mov jbe mov sub push test sbb cmp pushf dec mov (bad) in lds test ret out iret shrl cmpsb lahf lods or cltd pusha aas mov js (bad) pushl and out aaa pop mov mov dec cmpsb hlt sub icebp push rorl sbb push (bad) ljmp call inc daa imul cmp or fwait xlat or push movsl hlt (bad) (bad) (bad) pushl xchg add push xchg (bad) pop ds mov std push scas xor sbb clc test aas sub in jno je in push sbb imul xchg or jo mov movsb mov sub pop (bad) (bad) (bad) lcall insl add mov mov sub mov lcall movsl inc jne loope shr xor dec test cs mov sbb mov (bad) (bad) jmp sbb iret cmpsb dec aas bound aas cmpsb mov dec in orb lds inc ljmp lock xorl in in pop jg adc push dec (bad) jg mov dec mov nop out divps in or jg push fbld das in aad xchg jno dec fdivrs jo (bad) (bad) ljmp lods into jnp das pop mov incb jg inc jg jle out pop imul sbb jmp lcall cmp inc ret test repnz cmc (bad) fistpll lret int xchg dec ret mov jmp or mov pop mov add add iret xor pop (bad) (bad) (bad) (bad) fildll aaa jmp xor (bad) cli je or cld pop and inc leave sub test (bad) ljmp (bad) lock sbbl pop lahf enter push (bad) test insb (bad) (bad) (bad) (bad) jmp in fstpt enter mov lock cs cs adc clc jmp sbb (bad) (bad) (bad) stc aad push cwtl das inc jmp aam lahf ret pop ficomp insl pop hlt and push mov out mov xchg sbb mov xor std (bad) decl in mov roll in push cli sub (bad) ljmp add jo mov loope rep inc rorl dec mov imul dec ret sbb sub add js mov ret (bad) incl je,pt mov sbb popf (bad) mov add ds (bad) xor data16 call ficompl shrl (bad) cs inc push stos scas outsl sti pop aad ja cmp mov (bad) lcall mov leave shlb mull inc pop cmp (bad) ljmp jo inc or fsubr mov push jp lock adc mov xchg (bad) lahf sbb (bad) lcall and add leave sub mov addb xlat pusha les jg sbb xorb mov lcall (bad) xchg pushf cmp (bad) push jle sbb rcrl incl and jecxz xchg pop cmpsl sub jle pop jecxz (bad) loopne push (bad) (bad) dec in out cmp lret push sub pushf inc nop fdivrl mov incl je (bad) test repnz push sbb arpl in cmp icebp mov pop sub divb jo mov cs ret loope push xor sbb repz dec dec lock (bad) mov add add jae pop (bad) jg inc outsb test arpl out mov jne scas data16 call int3 out xchg push push pop out fwait repz repnz sbb sbb dec loopne incl test fdivl dec mov add cmp cltd clc pop cmp mov in sahf incl pop sub lds adc pop mov (bad) push fcomip (bad) enter data16 (bad) (bad) jmp xor jg mov iret rol ret adc mov and inc outsl sub (bad) dec mov iret mov (bad) das jbe xor jno add adc call aad push loopne js xlat fisubr push subb (bad) cmc dec pusha or lcall inc pop mov push lock (bad) mul push cli and jb es pusha icebp ret in std aad xlat inc sub add iret lea out fdivl imulb add jmp jl loop pop cmp xor ds imul fs pop mov or jns in push cmpsl add (bad) (bad) mov les (bad) (bad) incl sti rolb jae clc xchg cli xchg std mov jae nop xor adc pop push sub (bad) (bad) ljmp cmc sub jae lret sub or inc dec jne jno or iret loop xor jp fwait (bad) pushl shll xor pop xchg js push sub (bad) (bad) (bad) dec mov stos fld xor adc call test popf lods test lcall (bad) incl xchg push rcr xor inc out and sbb outsb pop ret (bad) (bad) call out cmp xor lock fcoml daa ljmp inc insl in (bad) (bad) (bad) decl stc jl int3 mov xor and movsb pop inc dec add sbb add mov (bad) (bad) (bad) (bad) frstor xchg mov movsb add mov hlt add mov pusha loopne enter ljmp call push mov add out mov cwtl sar sbb pusha (bad) call cld xor mov rorb in dec xchg xchg sbb sub push sub (bad) (bad) (bad) cmp push dec pmaxsw aas push xorb and insl outsb nop mulb scas add jp add fsubrp mov imul push cld out adc cld jae jmp inc arpl mov (bad) mov imul xor add (bad) repz pop icebp sar or call (bad) sbb dec dec fdivs mov cmp mov jge mov add clc (bad) stos xchg mov (bad) (bad) ljmp inc das adc cmc adc cmc popa cmpsb addr16 (bad) (bad) (bad) call scas lods sbb push jl out pop cmpsl out lock inc sub or nop or and lahf (bad) (bad) (bad) call pop fstpl pop add mov aam sub addb cld insb mov (bad) (bad) (bad) jmp push (bad) std adc mov cmovbe dec xor popf push inc mov sahf xchg (bad) jmp es aas inc pop xor mov push ja cmp mov pop jnp adc cmovp lcall int mov (bad) out jp mov cmpsl clc dec hlt sbb loop and adcb xor lret xor pop lock pop roll stos add cmpsb dec add jns mov test lock cmpsl mov cmpsl fwait adc add (bad) (bad) decl inc iret jno or xchg mov call adc pop inc ljmp sbb pop push cmp xor in ljmp cmp ljmp xor mov data16 (bad) (bad) incl sbb xchg mov cmp cmpsb insb lret hlt mov push (bad) movsl add call pop out jne push je xchg jmp inc mov inc push pop push ds xsavec in cltd jp lahf lret dec pusha inc jg or cli jmp js inc ficompl sub (bad) pushl mov sub jp adc mov push pop mov (bad) pop sahf jg (bad) jg inc fsubrl insl ret inc ljmp push mov (bad) decl (bad) xor out pushf sbb adc (bad) (bad) lcall and jecxz std dec cmpsl retw jnp rep js dec xchg inc mov (bad) (bad) (bad) lcall ds sbb stc jne lret push dec (bad) jo push (bad) jle cmp lea sub push data16 (bad) (bad) (bad) dec mov inc repnz repnz outsl lods scas push mov pop adc (bad) (bad) (bad) (bad) jg (bad) lds or (bad) fisubr fwait adc cmc insl dec inc push inc adc pop cld (bad) (bad) ljmp shlb and jb xchg and inc adc cmp push test les pushl mov jo jl add dec icebp outsl in and pop movsl and (bad) (bad) jmp cld lcall call dec add imul jecxz cmp mov adc xchg outsb cld inc rcrl jmp jo (bad) xor xchg sbb or xor or jecxz jbe inc adc pop pop (bad) or jg decl jb mov dec sbb pop and roll dec and je (bad) (bad) jmp mov (bad) xor roll addr16 pop sub in aaa std incl jns in sbb sub movsl popa mov mov (bad) call or xor xchg mov inc (bad) (bad) (bad) jg jecxz push or add popa mov pop jge dec aas loope push rcll pop lock ljmp imul mov (bad) in cmp sub push (bad) pushl das fcmovne adc inc cmp pop pusha cli (bad) (bad) mov insb pop (bad) mov fs lret fwait cmc xrelease (bad) sbb (bad) ljmp sub mov xor ljmp or jno mov (bad) lcall fnstsw imul ror loopne (bad) pop inc sbb push inc inc bound daa pop cmp (bad) (bad) lcall (bad) or mov jnp fildl outsl stc pop cmp add inc jle sbb icebp mov call dec pop push xor add adc insb dec xchg add sar (bad) (bad) jge popa addl sbbl sbb cmp cmp mov stos ljmp out adc cwtl lods sbb (bad) call jmp mov pop sub loopne iret mov mov inc jg pusha push and dec enter (bad) (bad) (bad) fstpl mov (bad) mov xor call es push push out cltd push push lock (bad) fcomip leave sbb cltd dec movsl mov adc fistpll push scas cmp (bad) (bad) (bad) cli inc mov jns mov ret sub cmp mov mov es and (bad) call lret cmc push add out inc (bad) mov inc stos mov push jl mov inc ja stos adc (bad) (bad) (bad) stc popf cwtl sbb ret and insl add sbb pop push in (bad) fisub cmp (bad) ljmp clc cld and dec mov push add xchg cs (bad) out clc mov sbb pop dec and sub dec xor mov (bad) (bad) ljmp rcll sub dec or mov mov mov scas outsb imull dec push push hlt loopne xchg (bad) incl inc mov dec pop test mov or stc int3 pop push (bad) (bad) (bad) ljmp push inc pop pop add add test xchg cmp add jl cmp (bad) (bad) jmp ret sbb sub das ljmp xor cld xlat insb sub pop icebp dec push adc mov xchg test pop ds xchg and mov mov sahf or push sahf popf jmp jnp insb in mov pusha xor cmp mov mov call mov test out cmpsb (bad) call inc adc in adcl pop icebp push (bad) (bad) jg push mov insl mov daa aas (bad) mov adc ret imul pop xchg sbb lret icebp inc dec sbb cmp mov sti (bad) jmp scas push jmp mov inc jg xchg xchg pop int out icebp (bad) (bad) lcall sbb lods stc push push lahf push mov rorb jg clc fisubl aad sbb and (bad) push push push mull lret loopne (bad) mov ds jl sub sub cs incl daa arpl (bad) (bad) (bad) (bad) out sub rorb or cmpsl sub pop mov loop mov (bad) lcall gs pushl sub jae dec or push data16 cs or lods jge mov addr16 aas or (bad) jg push jno fstpt repz stc sbb (bad) dec push adc push sub push (bad) (bad) (bad) (bad) mov push sbb cmpsb jmp (bad) mov xor in mov cmpsb (bad) (bad) (bad) decl dec xor push fistpl add fiaddl sbb (bad) int rdmsr (bad) lcall cmc faddl imul movsl (bad) xchg enter push outsb inc daa mov adc sbb aaa enter (bad) (bad) jg push jge mov xor fildl repnz mov dec push cmp push (bad) (bad) (bad) (bad) aas jge pop pop mov dec xchg or (bad) mov cmp aaa cld call fcmovnu les adc jnp adc inc std sub aaa movsl dec and (bad) incl ja loope sbb push sbb dec dec xlat lds pop enter or push pop push push mov jnp sbb cmp push imul int and (bad) (bad) decl mov cltd dec mov inc push cld xor cmpsb jno push int mov scas sub mov scas (bad) (bad) jg mov mov mov mov jmp cmp arpl (bad) jp pop out stos mov lods std and jl lcall hlt cltd enter call arpl push setl (bad) jecxz add inc mov push (bad) (bad) cmp xchg add pop mov xorl push adc ret jg scas flds or (bad) lcall jmp adc inc dec push pop dec mov lcall mov roll mov (bad) loope fsubrs add (bad) (bad) (bad) jmp sub shlb mov clc mov sbb dec inc ljmp scas dec sub xchg fs (bad) (bad) call lahf jecxz loop or adc (bad) loopne push or jmp in jle mov mulb jmp pop mov pop sahf in push or repnz xchg jle mov mov (bad) dec add jle xor ds push mov add adc in in pop pushl mov xor rorb adc int (bad) outsl adc adc (bad) (bad) incl stc insl repnz dec movsl cmpsb or adc sahf (bad) arpl ret arpl push pop sti data16 sub addr16 arpl idiv inc movsb fnstcw pop imul (bad) (bad) (bad) incl mov sbb cltd mov loope fs xchg sti adc test adc sbb (bad) (bad) jmp mov dec lcall testl xor bound push stc (bad) test pushl sarl (bad) add lcall push pop ljmp dec ret cmc ljmp popa ret xchg or (bad) (bad) (bad) inc fcmovnb call cltd fcoms fnstsw into xor xchg (bad) out dec dec (bad) (bad) (bad) decl cmp jno add outsl mov inc gs push mov nop popa mov ss movsb dec test jle cmp cmp into xchg jle push jp mov pop mov ds mov mov (bad) call addr16 pop lret pop call mov pop scas movsb jne dec icebp aas cmpsw hlt dec sub xchg mov pop push aad jbe cmpsl sbb push add or xor (bad) mov fdivr test push clc pop mov loopne mov xchg dec test (bad) call push mov fadds mov cmp sar fcomip mov es mov push (bad) adc idiv stos xchg jno aas leave inc dec (bad) (bad) (bad) dec mov scas mov inc andb push xchg iret lahf icebp daa mov pop lods out cltd jg lock jbe (bad) (bad) lcall jle and lcall cmc mov inc mov hlt mov loop jge int3 sub adc or dec and jo mov ja (bad) (bad) (bad) fdivl rolb jns push movsl je out fwait cmp and jmp mov fsts dec mov pop mov aas mov decl and sahf inc inc pop add test push xchg movsb (bad) test mov outsl fimul (bad) imul idivb ds mov mov subb sbb pop cmp push outsl mov (bad) ljmp mov aad in adc mov pushl sub sti push (bad) jmp jnp dec (bad) mov cli es popa push jnp jmp cmp frstor mov lods fwait in pop jmp xor loopew fldenv and ljmp dec aaa in cmp (bad) leave loope push lcall push (bad) fild jg and aad movsb movsl enter (bad) xchg iret add (bad) (bad) (bad) js fucomi (bad) cli data16 push dec xchg adc insl xchg adc aas std and push gs jle (bad) (bad) (bad) ljmp bound popf jmp pop adc ss aam std es fwait sub inc enter (bad) (bad) (bad) decl xlat xor call dec mov ljmp cld outsl shrl mov (bad) (bad) (bad) jns (bad) xchg push and scas ds mov mov mov insb inc or adc pop inc (bad) (bad) ds mov or mov test sbb xor (bad) (bad) (bad) jmp xchg clc pop test pop (bad) pop xchg dec jge imul aas dec mov jae cli mov mov dec add ljmp push mov lds popa ljmp shrb inc adc mov dec int clc sahf xor les jp xchg adc jne pop (bad) (bad) (bad) call insl push jbe cli mov push mov insl inc test pop add shl xchg inc xchg insb lods test fidivr jbe mov jne decl pop js fisubl jge lcall xor sar aaa cld into ljmp nop loopne loope int pushf div xor (bad) jg les dec imul aaa es pop jo cltd movsb jmp sub es adc sbb aam (bad) (bad) (bad) aas cld jle in scas or adc int3 (bad) cwtl scas xor scas mov lcall mov bound dec adc mov sbb int (bad) (bad) incl xchg fcmovnbe pop xchg jmp fidivrl adc (bad) pushl (bad) xchg jae imull xor sbb loope sbb dec das dec (bad) leave shrl dec sub cmpsb hlt sbb jb jge cmp cltd add (bad) inc pop lea divl xchg cmp pop sbb cwtl jl cmpsl enter lock jg orl jl data16 decl popf sbb repz shrl roll xchg scas push and xor (bad) (bad) ljmp out jb,pt inc popf mov xchg faddl les xchg jmp sub (bad) push leave jmp or jb in ljmp repnz in push std (bad) decl stc mov mov aam sub imul jl (bad) (bad) (bad) call pop xchg xchg xchg (bad) lahf push repz jmp inc cltd or arpl in das adc andl xor (bad) incl mov push dec adc mov inc rcrb outsb aas xchg icebp mov (bad) adc (bad) cld jl jmp sub push movsl daa add (bad) call mov gs jg std push out sub iret xlat clc sbb inc jecxz jg lcall test mov popa add loop test mov popf (bad) mov (bad) pushl inc popa mov and pop pop and or fadd lods sub mov in (bad) (bad) (bad) (bad) jg in popf fcompl lods jle dec cmc and movsb jle or mull sahf (bad) test jle das popa clc dec inc cli lcall imul mov (bad) (bad) (bad) pushl cmp pop cs add or scas add rcrl aad or mov aam arpl mov int sub ds sbb push add (bad) pushl or pop mov mov fsubrp into std or lret popf xor movsl call aad aaa cmpsb adc lods rolb icebp (bad) cmp (bad) ljmp cli jmp leave pusha mov cs xchg mov sti in push mov das into out dec xchg scas xchg mov mov es or (bad) pushl xor add xchg fidiv jle push clc sbb mov hlt push (bad) mov mov push inc shl mov shll mov movsb addr16 lods and enter lock fbld mov insl sub dec jae (bad) mov call sbb and sub inc bound push (bad) (bad) (bad) jmp mov cs or outsl fisubl lds push test or fninit ja aaa cld dec add jg dec dec xor lds enter imul sbb dec nop iret test dec lods mov icebp mov sbb xchg xchg loope imul clc or jne movsb ds dec (bad) push iret aas cmp cmp out dec shlb pop jae decl aas mov cs cmp mov mov (bad) (bad) fmull sub jge mov hlt push lcall push repz mov fstps je lret fcoml xor jg (bad) (bad) (bad) dec add aas push mov sbb mov sbb pusha jbe xchg push fs (bad) (bad) ljmp adcl imul xchg gs shrb xor (bad) (bad) incl pop push test mov aam fdivl popf and mov or (bad) (bad) (bad) lcall pop fcmovnb in das in out add sbb stos sub sarb imul pop fwait cli (bad) cmp jo sahf adc ret ret iret pop sbb (bad) (bad) mov and dec jne mov ljmp cmp fiadd dec or popf push (bad) out xor das pushf mov mov (bad) (bad) (bad) lcall jbe mov mov push sbb lods mov or pusha scas divl xchg or (bad) (bad) clc pop data16 inc data16 jge inc xor icebp inc cmp dec lea outsl (bad) call xlat mov push into aad sub addr16 xchg fs loopne (bad) (bad) (bad) incl adc or stos dec dec mov test pop loop loope,pt xchg or cmp or pop cmc lcall ret repz jmp sahf cmpsb sub lds ds sar xchg push adc testb std lret mov pop setb in pop hlt lcall insl fcoms pop dec and pop jge fs fistpl and mov cmpsb jae cmp mov fldenv mov sbb sub (bad) (bad) push (bad) (bad) (bad) decl mov test out pop je imul inc stc pop sub outsl stc (bad) fisttp xor loop lret inc addr16 pushl decl jns adc pusha icebp adc fidivr int3 scas pop inc add xchg sub hlt pop add ja cmp inc push or int3 push in pusha sbb scas cld mov decl xlat push add adc popf fcoms faddl fwait (bad) jne cmpsl clc in dec mov popf lea incl mov bound lods mov pop hlt and mov (bad) (bad) jg cmpsb mov aas cltd or mov jb inc aaa addr16 xor sub shl mov xor jne incl cld decl push push lock push push adc out aam dec std jg call dec jmp mov std push mov push loope pop (bad) (bad) (bad) pushl lret les add pop (bad) pushf movsb cmc sti insb cmp mov push movsl or mov (bad) (bad) decl or adc ret scas sbbl pushf xor push jo mov loopne inc mov jg (bad) jmp pop test pop js mov das pop (bad) adc js cmp rep mov (bad) and andb fldpi and jmp add inc (bad) (bad) (bad) call and js iret mov imul jg enter loop cs jge (bad) (bad) lcall and cltd or xor inc popf push imull hlt pop stc push xchg (bad) jbe push stos (bad) (bad) (bad) decl pop xchg rcr pop cmp stos (bad) dec test repnz or adc xchg (bad) (bad) fcomip incl ljmp adc ljmp adc (bad) (bad) (bad) jnp sti mov gs inc pop out mov cwtl call fisttpl push repnz mov fildll and jmp xchg mov mov ret sub dec loopne (bad) (bad) std jmp push mov mov pop sbb push scas mov adc or jecxz (bad) (bad) mov fstl lods mov cmp les and (bad) ljmp mov outsl dec rcll xor (bad) mov (bad) (bad) incl ret fidivr cmpsl lds jno andl out dec mov dec ret (bad) call imul push sub notb daa (bad) inc cmp sahf sbb cmp jg mov pop cmpsb notl add int sbb mov add aas sub orl jne mov (bad) ljmp jle adc cmp sbb add es add fwait ljmp (bad) (bad) (bad) ljmp pop add or js es xlat (bad) not xor xchg sbb (bad) lcall cmpsb sub arpl (bad) mov nop lods jae dec lret push (bad) (bad) (bad) jmp sti cmp mov jno imul cmpsb or (bad) (bad) ds mov out dec mov loopne es pop orl xor and sub popa xor xchg fstps jne stos mov cli (bad) (bad) (bad) jle lods sub ret mov sbb mov mov push imul mov cwtl aam imul cltd jnp pop scas lock lock (bad) jg ds test (bad) (bad) imul inc insl sub ficomp lcall jmp not es enter (bad) nop mov jns imulb or pop aad inc (bad) (bad) fcomip aam arpl ret int3 data16 popf idivb shlb lret (bad) (bad) jmp xchg and jbe xchg pop or pop imul shlb pop rol add inc aam xlat dec push les outsl clc ljmp sbb mov xorl int3 stos jmp or mov imulb mov aam daa jg test pop dec fistpll lcall fadd add ret jns push mov out aam sub sub xor cwtl aaa aad push ljmp push lea (bad) stc jl (bad) lret push jmp sti loop xor jo mov cld (bad) call or jo cmc inc je mov std add push loope decl xlat sub cmp xchg mov ss jmp sub add dec outsb notb or add scas je xchg sahf sbb enter (bad) (bad) jg mov mov mov lods pop and mov cld std test xchg fwait cld sahf mov jne adc mov out add cmp les jnp ficomp js (bad) out (bad) mov mov sub cmp (bad) (bad) call (bad) aas or jns cmp mov test iret mov or (bad) decl push lahf push rorl fisub lea xchg mov loop mov loopne lock (bad) (bad) mov fild sbb int mov in or ja (bad) jg and push sub jg mov sbb insb scas scas inc jmp xor (bad) lcall loope inc mov icebp orl test dec (bad) (bad) fisub ret add dec nop dec pop std adc cmpsl cmp data16 inc jmp jp sbb (bad) (bad) fmull push imull add xchg mov or inc push (bad) xchg adc data16 int3 daa and sbb sub add iret jae push addr16 push ds jae mov inc or call mull imul insb mov mov cmp gs (bad) (bad) jmp pop (bad) mov push out out jo dec cmp cltd fnsetpm(287 adc lret fcos (bad) (bad) (bad) mov movsb out scas mov lret add mov out xor sub mov lcall mov std rorl xor call xchg push adc mov push in cmc sub out cmp xor sub mov or (bad) (bad) incl add push test adc fimul shufps hlt and or movsb mov cmp hlt lock dec in sub xchg mov (bad) incl push shl ret aaa sbb adc mov mov mov adc mov and push insb outsl shl (bad) (bad) ljmp ret decb (bad) mov pop aad xchg pop add fdivl and (bad) incl cs lret imul mov sbb push inc (bad) (bad) (bad) call lods mov fcoms sbbb inc jbe xchg pusha ror repz add xor les (bad) (bad) (bad) mov cmp xchg or (bad) popa fidivr movsb and mov jmp call test pushl aam (bad) xchg add out mov xchg jno xchg int (bad) (bad) decl push test jae rcll pop insl xor stos pop insl add cmp push sub ljmp push addb jg pusha ds mov js (bad) sti frstor das push inc (bad) xor pop lock call lea cmc or clc insl adc mov (bad) (bad) (bad) pushl lods ret cmp push cmp mov lahf dec lahf les aaa pop sarb (bad) rolb sar adc xchg lea inc add or mov (bad) incl mov pop lods cmpsl enter (bad) add xchg mov (bad) scas inc movsb icebp mov cmp lcall sub nop addl pop les and mov (bad) (bad) decl repnz pop sub lcall mov pop lahf cmpsl xor xchg aas lods fsubr and pushl xchg cmpsl cmp test nop lret xchg (bad) sarb arpl xchg or test (bad) (bad) (bad) incl sbb push mov icebp stc add in hlt or scas rorb inc popf lea cld (bad) decl pop in rorl pop mov dec lock nop repnz (bad) (bad) dec pop lods jp (bad) xchg inc movsb frstor loope and fcomi inc mov cmpsl mov pop ret mov call cli mov je pop or outsb xor mov jecxz (bad) sbb icebp enter out pop mov (bad) lcall mov sub push addr16 std loopne xlat mov nop jb xor andl dec sbb jbe out mov lea xlat sbb (bad) decl loop adcb sbb stos mov pop adc mov (bad) (bad) call sbb movsb jge dec mov xchg mov test and dec sub (bad) (bad) lcall mov pushf dec cmp inc xchg pusha stc pop xchg call decl stc aas fsubrl jae bnd ss ss dec call dec sbb xor cmp scas pop cmpsb iret dec push push inc pusha xor and cwtl mov (bad) (bad) (bad) fcompl sub inc mov xchg in out adc pusha test or jbe lea fidivrl arpl adc vpaddw cld add scas cmp lret test shrl (bad) decl gs enter js push arpl mov out sar (bad) (bad) push clc repz and jne flds or repz jnp (bad) mov xchg add mov ret enter jne push stos sbb mov xor (bad) (bad) ljmp les out repz sarl rorb movsb fwait pop push and (bad) orl add daa cwtl mov lret ds cmp xchg pop pop jnp,pt mov ljmp push insl inc pushf sub cltd mov test adc pop add decl sbb addr16 sub mov rolb mov xor test lds lret bound or fsubrs mov inc sub (bad) (bad) (bad) pushl dec mov fucomp sbb inc lret jl mov xchg pusha inc inc stos loopne inc jmp daa xor pop sti pop sub mov inc pop inc ds (bad) (bad) (bad) jg fisttpl (bad) into jp rclb loopne inc xchg mov cwtl cltd cmpsb inc push (bad) repz (bad) (bad) call xchg cmp mov mov addl push aad jp lock mov (bad) xor or or mov xor mov addr16 stos loope or call je sarb cwtl sbb xchg dec xchg clc dec (bad) jp sub mov mov decb decl jo,pt cmpsl addr16 fsqrt mov push jmp nop lock aad push repz push dec btc jne (bad) (bad) dec pop insl dec lods jbe and dec fwait jg pop adc push test mov fcomip (bad) inc std mov mov sbb dec push shrb cli cld (bad) (bad) lcall push and addb divl mov out and push lret imul xor out jae out cli (bad) (bad) (bad) lcall or stos cmp (bad) xchg popf mov lahf lods das xlat mov lahf sub sub (bad) mov movsl dec lea cmpsb fistpl movsb and sti lcall or (bad) jg (bad) mov xchg mov lock pushf stc xor xchg or dec mov cld lcall test dec or scas (bad) inc pop (bad) (bad) (bad) incl mov out adc mov inc fwait or add pop push xchg lcall in push push ja or (bad) daa arpl push mov dec mov inc test (bad) (bad) (bad) mov rol cmp out push mov mov pushf mov inc rcrl dec rolb cmpsl mov (bad) call subl sbbl mov sub dec mov push nop xor out ret and and (bad) jmp jge notl push lods flds push cmp mov bound test push incl jb ja push out jecxz mov jmp roll fistp jb sbbl ljmp stos fs mov xor pop mov out subl mov aas pop sbb ds cmp mov shl pop lret sbb les (bad) jg inc test mov scas mov pop jmp icebp pop pop add in js imul adc in pop movsl lea push mov outsl mov (bad) (bad) (bad) ljmp add add mov pop inc subps push mov push dec mov fstl lret mov insl mov movsl pop adcl (bad) ja into loopne movsl cli xor pop push sar stos ficompl xchg mov inc cmp mov (bad) (bad) jg test insb scas rclb push mov je test rorl aas ret daa cmp fisttp in (bad) lcall into adc mov (bad) push jns fisttp jmp xor data16 (bad) (bad) jmp xor mov or outsl add iret fidivl jb xchg add (bad) decl jnp xlat sbb (bad) icebp ljmp aam sub lret lcall xchg insb mov imul xor xor in dec les add pop (bad) in (bad) (bad) mov dec (bad) int3 fsubrs in xor cltd insb rcrl jmp les (bad) (bad) (bad) jmp push stos stos es fucomi push xchg mov enter push or lahf shrl sti decl xor or add jg cmc cwtl lretw std (bad) ljmp inc test sbb shll (bad) adc cli xchg (bad) sti add dec (bad) (bad) (bad) jmp insl and or sbb mov in es enter pop into gs (bad) jmp es push jmp pop pop and mov hlt dec xor (bad) lcall inc push das sarl loopne fisubr loope pop (bad) into cmp lds mov (bad) (bad) (bad) jge cli dec and cmpsl adc jae lds mov jnp lods lcall aas mov cld mov dec push cmp stos cmpsb out cli (bad) jmp or dec mov add test (bad) mov inc cmpsb lret jno sbb inc cmp mov insl stos popa add jl (bad) incl push mov ljmp jg jne pushf dec add lods mov pop fcmove jae fldt inc mov and inc or aam decb cmp mov loope adc test jb jl push in std lret in (bad) jo xor mov (bad) (bad) in aaa inc and adc loop inc or cs dec sub push (bad) decl push fidivl fs cmpsb test dec (bad) (bad) lcall pop insb stos in test daa jae or clc fs and inc test out (bad) pop fmulp and (bad) (bad) (bad) jnp push lods jg push (bad) clc jo mov arpl dec mov shrl sbb mov pop or mov dec push push pushf adc fistpll adc dec out cmp out fdivrl in in dec push cli push fidiv sub ljmp jno,pn add xchg and js mov (bad) incl or cli (bad) push xchg rcll jg loopne cwtl mov addr16 int aas xor push inc cwtl clc call pop sbb sub imul mov cmpsb (bad) jg or push lret dec popf mov (bad) (bad) jmp inc fistpll sbb and test xchg (bad) mov shrb repnz cmp pop xor (bad) (bad) pushl ljmp jp jno loope xor loop outsb fldcw (bad) mov xor cmp sbb mov adc mov clc fimul pop pop test int3 pop mov test (bad) (bad) (bad) decl ja mov nop xchg dec aam cmp cmpsb ljmp out nop xchg (bad) (bad) (bad) pushl setno xor stos popa mov popa push (bad) stc test sti xor mov (bad) ljmp (bad) repnz int3 lahf hlt jne jns mov insb lcall sti shll mov mov jnp (bad) cli inc sbb pop push pop pusha or xchg call xchg inc (bad) (bad) (bad) (bad) (bad) mov les pop mov xchg xlat dec ss loope,pt adc push xor (bad) (bad) (bad) (bad) lcall sub jl adc or push mov mov xor adc int3 imul negb jbe xchg clc and popa xlat pop cs outsb out mov mov jecxz xor ss cmpsl sti and (bad) decl dec inc cmpsl and xchg stc das xchg mov mov std fcoms aaa mov and sub or imul nop into xchg aaa pop (bad) incl (bad) mov mov mov test hlt sbb (bad) (bad) decl int shl pop fld or xchg jl jge sbb mov bnd (bad) in pushl test ljmp ja mov sar jg scas in sti add mov cs sbb (bad) (bad) mov loop pop push add xor daa xlat dec rclb push ds clc mov or adc cld mov insl dec (bad) (bad) decl sub movl aad xchg into push je jmp mov bound popa (bad) (bad) (bad) call fimul test xchg ds push (bad) lret xlat add out push jno push lock (bad) incl jb sub mull pop ljmp gs rorb test (bad) decl inc ret and les in (bad) jo rclb faddl std xor (bad) (bad) (bad) mov cmp loopne fs movsb lock or inc sarl rolb push sbb jns push mov (bad) pushl imul pop pop outsl jg and adc mov jl or aas sub mov nop dec lods sti push xor enter mov sbb push mov sub call pop ds ljmp xor or in mov and ljmp pushf pushf sar rclb sub mov (bad) loop rcll lods jl (bad) jg mov sahf lcall mov cltd dec rcrl test push mov outsb ret (bad) inc cmp adc imul popf lods pop mov popa pusha andl mov (bad) (bad) pushl jmp fadd xchg loope jb addr16 pusha jmp dec cmpsl gs rorl icebp mov sbb (bad) xor push adc dec xchg std sub cmp cli aaa sub push mov push (bad) jno mov mov call sbb mov push and sbb pop int3 xchg (bad) (bad) (bad) pushl (bad) adc mov cmp outsl inc js (bad) jge xchg xorl lahf adc inc (bad) hlt movsb lods ds popf cmpsb and sub mov push test rol shl xor sarb (bad) (bad) jmp xlat faddl scas rcrb xor ffreep sub (bad) lcall fsts sbb dec mov jae adc stos add aam fs aam adc (bad) lcall adc dec fistpll mov mov adc mov and out xor and in (bad) jg ds pushf sbb mov mov pop ret out mov test (bad) inc or nop sub pop push pop clc iret xor test movsb jg dec mov (bad) ds aam js jecxz (bad) (bad) ljmp ret mov inc loopne pop imul jecxz jne sbb test (bad) ljmp ret cwtl rolb loop (bad) xchg inc icebp pop mov or (bad) decl pusha loopne push sbb rcrb xchg sbb (bad) jae lock cmp (bad) lcall mov shlb sbbl inc mov (bad) inc add aas ja subl mov fucomi mov jmp lcall lods cwtl lret (bad) out add mov mov xchg add (bad) pushl test push push movsl pop or dec mov inc adc inc lock (bad) (bad) cld add mov out daa cld xor js push xchg jbe jle mov subb mov (bad) lcall mov int3 stc cmpsb mov aad jp sub arpl fisttpll loope mov adc ljmp lock mov add loop xchg pusha xchg dec jnp,pn pop mov pop jge and jmp adc sbb fcoms mov iret push or fdivp (bad) call adc add sarb (bad) jne daa adc loop add test ret (bad) (bad) (bad) mov pop std sub add sub xor or out jmp inc notl clc inc (bad) (bad) (bad) fbld test cmp jbe scas mov inc push mov dec (bad) aas ret scas (bad) (bad) (bad) push mov (bad) xor xor ljmp gs xchg adc sbb call mov adc sbb (bad) (bad) ljmp fiaddl lock cltd lret dec inc cmp push outsl enter je movsl ds lock jmp into xor test xchg ja sbb (bad) call lcall or mov aas mov decl ds lea in cmp jp (bad) push and dec mov (bad) pushl pop push sub fldenv push in jp push outsl pop fimull insl sub addb cmpsb and mov mov push test adc jae sub dec push movsl cs (bad) lcall mov add call mov or std pop fwait mov dec inc clc jmp or add ficomp sub (bad) incl ds adc pop imul mov and jae sbb (bad) (bad) (bad) jl or lret mov cmp mov shrb cmpsb dec (bad) (bad) (bad) lcall cltd and mov sub jmp pminub mov popa stos lods ret (bad) (bad) (bad) stc dec es sbb mov (bad) and pop test jecxz loop and (bad) (bad) jg sbb mov roll mov jbe xchg pop loop adc (bad) push cld (bad) (bad) jmp jns pop mov dec sbb lds dec pop aam (bad) (bad) call xchg ja out jmp pop sbb movswl cmp mov ja pop insl mov dec and inc lcall out xchg sub fs sub and jmp pop sub add jg jmp fmuls mov sub subl enter xchg mov pushl std out lea pop jnp outsb jb or shrb add mov jecxz iret jne arpl dec xchg (bad) cs aad in jo mov sbb pop icebp lcall leave xchg fildl push out jns xchg mov jg das stos adc in ret mov cmp repnz push clc cmpsb push mov (bad) decl sbb pop nop xlat sub fs rcll xchg add pusha sub loope insl mov (bad) mov add sub inc (bad) imul jnp icebp ret push (bad) (bad) (bad) jmp jnp push push gs push mov leave push sub dec inc test adcl imul jg ds jecxz lods ret xlat cmpsb xor shrb pop or es inc xchg jmp dec dec sub rcll jb (bad) ljmp arpl mov lea xlat imul pop or sub hlt xchg das mov mov fwait adc call ljmp out mov repnz js mov mov jns and inc shlb (bad) (bad) ljmp push xchg fst mov ret and dec mov icebp or inc ret and lcall aas mov xchg and push scas adc nop xchg sbb mov cmp (bad) jmp pop xchg daa imul mov inc or rcr inc pop addr16 (bad) (bad) jmp add cmp fs mov (bad) iret daa or mov xchg test cmp jmp mov sub cmp mov add (bad) (bad) fisttpl mov imul pop sub ret lret or (bad) jmp mov cmpsb outsl xchg pslld (bad) sub les add (bad) (bad) jl std int3 out int xchg inc call frstor push inc push mov (bad) (bad) jg mov mov loope sbb xor out jl out or pushl mov pop arpl fdivs push sbb push ljmp cli mov mov xorb jecxz or xor mov cmp mov (bad) cmp sbb jle fsubs xchg (bad) incl push cmp mov cmp (bad) mov inc mov movsb push and inc xchg sahf out pop adc (bad) cmc mov std mov repz mov rorl push mov mov fnsave pop loopne jg mov cmpsl lods fdivrl subl (bad) call add out rorb mov stos sbb dec lock push nop icebp (bad) call outsl les xor inc movsb dec or mov ss arpl in out pop test insb dec mov or (bad) cmp (bad) ljmp xor mov jne xchg cmp in xchg add jne incl push push mov xor out hlt (bad) daa js sub (bad) ss fidiv pusha ficompl (bad) (bad) (bad) jmp push inc cmpsb shrl fcompl mov lahf loopne fcmovnb adc scas sub and outsl out (bad) (bad) (bad) (bad) jns sbb ficompl jae (bad) dec shrl mov (bad) xor int adc lcall (bad) add jmp mov decl inc inc ja jno dec jecxz inc mov fnstsw mov and adc mov call and dec xchg (bad) ds add out (bad) (bad) (bad) call add fnsave imul out mov mov push inc lret xor push add (bad) (bad) ljmp jns dec mov pusha (bad) cld xor push fstl dec sbb cmp adc (bad) (bad) (bad) call (bad) mov cltd std push outsb mov sub js stc xchg pushf ss aaa lds push jns xchg (bad) (bad) call xchg jg mov outsb xchg sbb or fmuls loopne rolb sub incl mov in in js lods and (bad) (bad) decl and int jl test xor jg mov shrl cmpsb pop (bad) (bad) (bad) pushl shlb pop test mov les adc mov jge mov (bad) (bad) (bad) incl call aaa sarb (bad) fisttpl push cmpsb dec sbb push sub push rclb adc xor fcomps adc jnp test sar (bad) jmp std xor jbe and repz (bad) dec cmpsb pmuludq mov loop push cld jg ja jge add xchg mov nop es jg outsb icebp stos (bad) call inc aas xor outsb scas inc std sbb add sub add cli (bad) bound dec jl je repz lea (bad) ret mov ja or clc lcall xlat incl pushf adc (bad) scas fs jle aaa mov cmc sarl mov (bad) decl ljmp mov push jae cltd fwait mov mov inc (bad) test (bad) (bad) cmp pop sahf loopne mov push adc sub push fisttpll cli (bad) call repnz add mov inc inc enter pushf sub pop (bad) jo ds stos lahf pop push or (bad) jne (bad) lcall movsl ret scas scas fcmove (bad) xchg dec inc push fwait ljmp sub pushf je popa cli mov testl subl pop cli push pop test push imul sbb bound inc clc ljmp (bad) cmp push lcall int3 add cmp add and (bad) jg decl loop insb ret hlt mov xor inc or orl fdivrp (bad) mov pop jp dec test fldl or imul (bad) (bad) push je jo insb mov out sbb negb and ljmp ja,pn pop ljmp pop (bad) add cs rcrb iret jbe nop arpl xchg cmp movsb enter (bad) decl inc out pmaxub and fld icebp or pop adc mov shlb loop mov xor leave aad stos aad (bad) (bad) inc (bad) jbe jns mov pop into ljmp bnd (bad) cmp (bad) (bad) pop aam arpl fadds (bad) clc dec (bad) popf jo inc sbb ljmp (bad) inc cltd xlat mov fisubr push idiv adc push stos loop ljmp cmp pop movsl inc add lcall sub push ret mov dec xor lods dec mov add inc xchg xrelease push mov ljmp cli les daa popa divps call mov loop (bad) daa ret pushf cmp (bad) (bad) inc and xor into mov xchg in dec cmp cmp dec add pop (bad) (bad) (bad) ljmp mov sbb sarl rcl fs ret bound jg fs insl jg or sbb (bad) (bad) (bad) decl push sbb cld mov mov ss and sahf sub dec lcall inc std loopne cmc lock (bad) push pop xchg aam inc or push xlat (bad) (bad) decl and xor adc xlat adc jo sar sub popf cmp pop insb push in cmp fwait (bad) (bad) (bad) pushl test sub movsb ljmp add mov jp cmpsl xor rolb scas push cmpl inc push sub mov xor outsl js call sub pop (bad) ljmp mov or fs dec fxch push frstor sahf add shrb jmp aas scas dec mov shll in cmpsb inc lret mov pop popa jl ficomp cmp (bad) (bad) jmp out push cmp push dec push mov inc xor leave bound inc outsl adc (bad) (bad) (bad) pushl pushf mov arpl arpl jmp (bad) test cmp mov jmp (bad) (bad) (bad) in loope cmpsl jb mov pop in test jo in imul (bad) (bad) (bad) jg push frstor mov outsl out xchg fwait xor push cmp hlt test mov (bad) jmp mov cwtl lea ds (bad) (bad) decl mov inc outsb fs call rcrl fcmovne cs repnz jge popa push bound cmc push push push jbe data16 or adc inc js (bad) (bad) (bad) decl inc (bad) stos mov jae lret imull pop xchg fdiv jecxz sub jbe pop mov (bad) (bad) stc es addr16 imul push xchg jb lock xchg push mov cli (bad) (bad) lcall mov mov out xchg test fwait sti frstor mov sub pop xor and pop pop pop lock (bad) (bad) jmp lahf pop inc mov pop or test push pop mov pop xchg jns or cmp lret inc or in lea fbstp jne cmp lcall shl vmread jno mov push and xchg (bad) stos add (bad) (bad) (bad) pushl or fldcw and sub dec sbb push sbb cwtl pop inc adc (bad) lock mov pusha (bad) xchg adc (bad) jg call movsl sbb imul push repz leave dec cmp fistl pop xor pminsw (bad) (bad) (bad) call movsb mov or xchg push sub add lcall sbb xor insl in (bad) incl shrl and imul push adc (bad) (bad) (bad) mov arpl adc mov hlt aam jmp xor insl mov (bad) (bad) (bad) lcall xor inc jp inc iret lret pop mov dec adc push sbbl (bad) lock outsb hlt (bad) (bad) ljmp int mov lea jns shrl test (bad) decl mov inc xchg jmp data16 addl (bad) (bad) decl push stc popf push aas ljmp sub (bad) out sar xor mov lods push or fs add imul lea cmp mov (bad) (bad) (bad) fistpl xchg and dec repz outsl xor jmp mov cli (bad) jmp mov mov out xchg dec push add popa mov outsb bswap mov es mov lock xor or push (bad) (bad) (bad) decl sub pop jl ret push call and imul add push pushl xor out inc cmp sbb add mulb cmpsb mov (bad) (bad) pushl outsb repz rcll mov pop dec or dec sbb or stos inc cld and sahf sahf xor lock push cmp (bad) (bad) jmp or inc fcomps mov mov sub mov sub jne cli mov pop (bad) (bad) (bad) dec repz lods adc (bad) sub aad ljmp mov in aad fsubr clc (bad) jmp sbb popa jo gs sbb jl and push jae (bad) (bad) (bad) inc ss lahf imul (bad) sbb push aad enter icebp jbe leave repz add (bad) lcall cs (bad) sub pop outsl ret out inc mov fisttpl popa in test xchg (bad) lret dec test clc (bad) (bad) jmp stos popf jecxz out imul repz adc mov cmp fbstp (bad) (bad) fbld lret push iret pop pop inc sbb and jns loope pusha pop add xchg or (bad) pushl add jge daa inc cmp (bad) (bad) (bad) fistpll adc sub insb repnz test rolb inc dec (bad) mov (bad) xor xchg sub inc sbb decl movsl pop sub dec stos mov sahf in scas mov or adc sbb xchg mov out in xchg xor (bad) (bad) (bad) push jae xchg inc lahf hlt mov sbb ja imulb cmp mov jg (bad) (bad) (bad) lcall outsb sarb lret pop mov xor dec outsb movsl fstl cmp pop ja mov adc pop insl or adc adc xor stos mov test sbb pop cmpsb decb add jo add jnp (bad) idiv jmp sub pop mov popf push mov mov arpl scas mov xchg and ds bound (bad) (bad) (bad) incl (bad) int3 lods mov or movsl xor pop stc add bswap sbb cwtl adc push (bad) (bad) (bad) ljmp xchg cmp pop test jle pop cli ret iret mov sbb roll in mov sub xor (bad) add scas push mov (bad) (bad) fcomip out jmp lret mov ss (bad) ja sbb lahf in push xchg or push sbb mov pusha dec sub or sbb lds mov (bad) (bad) (bad) (bad) cmp loop sub test lret mov leave sbb inc loopne mov imul pop push (bad) (bad) in je inc xchg (bad) mov insb xor subl outsl adc call dec ficomp fldl lds (bad) mov lods jns push mov cwtl lds push imul mov (bad) dec lock lcall lret das xor hlt pop dec in adc push ficompl (bad) fistpll lret aam fs popl inc cmp jne lret vandps (bad) (bad) incl data16 inc cs jbe xchg sub xchg mov jb sub (bad) (bad) (bad) jmp mov inc dec jno push jmp fadd inc add jmp stos dec pusha (bad) (bad) (bad) (bad) ljmp vmaxpd push xchg mov add or imul out aaa dec cmpsl je fs movsb lret inc adc mov dec (bad) pop lret scas (bad) cli cmpsb fstpt mov mov xlat movsb pop cmp mov cld inc lods cli pop jne ds movsb jnp daa dec loop (bad) (bad) incl in ljmp out jnp lret push inc out insl icebp das (bad) (bad) xchg mov xchg mov inc sar (bad) (bad) (bad) jmp xor ja pop faddl std fstps mov cmp enter (bad) (bad) (bad) incl push push cmpsl sub (bad) (bad) mov scas inc movsl leave orl movsb daa (bad) (bad) repz outsb xchg sbb pop (bad) push fmull sub daa mov je lcall cmc inc sub (bad) icebp arpl stos sub mov push aaa cmp mov pop dec pop jl adc sbb test mov call or lds imul test out ds sub (bad) pushl in mov sub in mov mov dec adc lods xchg ficoml (bad) (bad) (bad) ljmp xor sbb or add xchg movsl test xchg (bad) fmul lods mov mov (bad) decl mov pop in inc push xchg scas pop sbb ss pop scas insl cs (bad) pushl clc push pop repz stc mov inc mov scas sub (bad) mov inc push decb cmc inc xchg sbb (bad) (bad) jmp sbb cmc cmp mov fsts pop mov (bad) cmc adc dec and pop push dec mov mov jmp inc and xchg lock nop test add pop jne inc fbstp jbe,pt dec mov aas daa pop je repz adc bound cmp les pop ret sub (bad) (bad) call int3 mov add push xor sub in or test (bad) mov je jecxz test cmpsl ja dec jo jne sub mov xor adc pushl aam add pop mov sbb movb (bad) (bad) jmp clc xchg repz dec mov in icebp aaa sbb mulb cltd in (bad) mov mov (bad) (bad) jg popf jnp jle lcall iret cmpsl aaa icebp je cmpb jae adc (bad) inc orl repz xchg and add lea jae push out repnz adc stos sahf in inc jp adc scas cli (bad) decl pop sub inc fnop mov cmp add add dec loope repz jle aas sti adc and call (bad) decl pop add cmp and leave movsl xchg xor enter insb add mov lea lock (bad) (bad) decl lods dec xchg or and popf test cwtl cmc dec scas inc xchg decb sbb push scas xlat add xor pop xchg mov (bad) xchg adc mov mov adc lret ljmp sahf iret xor push addr16 jg sub pop incb ficoml es adc out clc mov nop push fs lcall adc outsb aad mov lahf jnp sub out mov out adc mov pusha push or lcall cs pop bound es fiaddl (bad) (bad) (bad) push sbb inc or mov out lea push xchg mov xor ja (bad) pop lods and sub push adc call mov (bad) (bad) (bad) lcall fcompl push popf push mov in pop jle ret push repz loop push pop push (bad) sbb int lock std fs movsl sbb ds (bad) (bad) decl and out sub lods sahf jl xchg bound xor mov mov mov sub xchg cmp fxch cmp push arpl xor (bad) lcall cmp notl cmp clc jb push cmp pop xor cmpsl scas icebp incl mov dec adc mov cs (bad) (bad) fistp icebp rol jecxz lahf lcall lahf aaa mov push cmp jecxz (bad) (bad) jmp add jg ds dec jp jecxz sub (bad) rol pop dec inc (bad) lcall jne,pt xor mov fnop in test pop lock pushl mov mov push xor out fwait rorb sub (bad) (bad) ljmp scas lock jb int3 lods dec ficom pop das jns cmp insb push mov cmc push xor jae hlt (bad) (bad) pushl mov stos mov aam pop cmpsb mov xchg jmp gs stc (bad) (bad) (bad) lcall fs into and cmp push popf outsb dec jg clc mov cmp mov mov mov sub lods add xor das clc jmp lea fwait jbe aaa testl adc pop movsb inc fcmovnbe leave push inc xchg push arpl lcall int add push mov xchg cld aad sbb imul sbb (bad) (bad) (bad) lcall imul mov fnstenv sti cs push and ret fiadd (bad) call bound (bad) outsl fwait dec mov jo out fs or mov push (bad) ljmp cli das movsb ljmp jo sbb add mov add push loopne adc pop movsl out outsb lret pop xor pop mov sbb xor mov in cmc test (bad) scas and test mov mov sub xchg push out pop sub (bad) jge push mov inc (bad) out adc dec push mov imul test clc (bad) lcall pop scas or es mov fsubs lea add mov mov mov (bad) jg es ljmp imull pop xor sbb in lods sbb add sub ds cmp xchg (bad) (bad) (bad) decl bound test sub fcomps enter ds jo fwait push dec jge and (bad) (bad) (bad) decl mov or repz insl dec test std jno adc (bad) incl cmc sub pop scas gs aaa mulb in das mov jle ret pushf daa cld (bad) (bad) call mov test add in adc les xchg push insl mov cli data16 hlt pop jle inc inc stc faddl add (bad) cmp cmp and sbb (bad) (bad) cmp xlat lret mov xchg pusha jl mov mov stos pop (bad) stc pop jmp mov mov incb sub jl cmp or cmp fsubrl mov (bad) (bad) incl push (bad) sbb push bound das add out mov lahf movsb push jo push (bad) and adc incl ret and xor (bad) (bad) (bad) push xchg pusha je addr16 clc mov mov sub add (bad) (bad) mov je dec test ret in ficompl fstpt aaa hlt inc addl (bad) (bad) (bad) fnstenv addr16 aas add jo outsb add in fstps xlat cmp (bad) (bad) lcall pop sbb inc (bad) mov add pop call rcrb (bad) sti jae fcoms (bad) call rol or mov out push (bad) repnz sar (bad) mov popf pop nop aam xor (bad) jg fildll fwait mov add sahf add cltd xorl ljmp ds mov insl insl sub or (bad) pushl sub pop ds sub and jne (bad) (bad) jmp mov aas sub gs jmp pop and mov jg ds (bad) (bad) decl popl and pop sti mov cs (bad) mov incl aaa lret inc mov or cmp jnp outsl loop (bad) (bad) (bad) incl in dec dec mov add ja push data16 dec cmp lods cmp fildl (bad) (bad) out add jecxz fstpt sub pop fdivr or fistpll lcall shlb lahf out push push ja cmpsl inc mov sar std jp dec add sub aaa int3 jbe and mov ljmp lcall and inc add jecxz sbb aam ds push jbe or mov std pop test and (bad) pop call leave sbb dec test sub rolb lcall (bad) (bad) (bad) pushl jae insb (bad) jnp hlt outsl pop movsb adc adc cltd dec mov and (bad) (bad) mov lcall fldt sub lahf or mov push mov (bad) (bad) (bad) call pusha dec adc jo sub std lret addr16 jecxz mov ljmp fadds (bad) (bad) (bad) lcall out in lret cmovne es adc jns jp sarb xlat jno stos (bad) (bad) jmp ss xor dec mov mov fmuls pop lret adc pop mov call cld mov xadd shlb jecxz xchg ficompl (bad) (bad) (bad) decl push rcll push push fcoms pusha das mov mulb and xlat test push mov jmp aad push xchg call sub std mov movsl add iret push xor sbb decl stos cmp les clc es and jnp adc or in ja rcr js,pt outsl jns (bad) (bad) incl enter ret out andb sar (bad) ljmp scas cltd in cli cmp push inc out cmp mov push sub inc push push scas xchg insb jge in xchg daa dec xchg pop jbe cmp ds (bad) mov and cltd je data16 mov cltd shrb xchg test cwtl (bad) (bad) (bad) inc jae out test (bad) mov or and xorl jecxz clc scas sbb mov cld jmp loopne add aas mov sub push pop add mov push sub push (bad) lea aam mov call psllq adc mov cmp fwait outsl cli je outsb jne movsl push xchg cld repnz (bad) (bad) call clc jne sub xor jns jno pusha cmp jl and scas (bad) (bad) (bad) lcall jmp mov je sub cmp ja sub out mov andl aaa sbb (bad) xlat and mov (bad) cli clc jge xchg (bad) (bad) (bad) call xor pop subl stos add pop xchg xor push mov icebp cmc sub out (bad) (bad) out clc out popa cmpsl daa sbb cmp scas and idivl push pushf push xchg incl fadds add push xor cmp out mov xlat and or cmp push mov mov and xchg pop mov movsl into testl cld push push sub jne jl pop xchg xor das cmp (bad) (bad) fildll cmp push outsb add ret xchg (bad) rolb jecxz ljmp rol movsb (bad) insl xor pop shll aaa xor xlat ret outsb dec stc ret sbb jmp clc (bad) (bad) mov push push hlt mov mov or or sbb call jbe test inc imul out push mov imul gs mov (bad) out clc sbb movsb (bad) xchg add jp jg addr16 (bad) ljmp and mov mov dec xchg loopne sub mov adc mov (bad) ljmp mov pop pop ljmp bound or jno (bad) popf or arpl repnz (bad) (bad) cli scas jne sbb xor add adc hlt into jno mov nop clc add dec mov pop loopne and test mov test repnz arpl cmp into sahf xor lea adc push pop xchg xor mov jg (bad) ljmp push lret scas mov sub and mov mov (bad) push iret lods mov xchg out jg dec (bad) call js lcall jns inc cld jmp add test xor jo xor cltd aam xor ljmp push popa xchg std gs cltd xor popf popf daa sti (bad) (bad) (bad) (bad) dec cli and pop mov mov mov jmp sahf aam (bad) mov f2xm1 jnp (bad) xrelease push adc or std push icebp lods push mov out push mov dec xchg sbb jmp push in ds jo (bad) (bad) jg xchg sti scas outsb xchg cs add aaa pop mov jecxz mov fistl (bad) call hlt aaa das xor jae int3 xor call jne (bad) (bad) in aam arpl push sar (bad) (bad) (bad) in and sub or jmp or lret adc arpl jne (bad) (bad) pushl repnz sbb push ret pop imul xchg sbb ret and (bad) (bad) call mov shlb loopne jmp lahf fucomp lret (bad) dec adc icebp (bad) ljmp jp scas cmc (bad) aaa mov xchg (bad) (bad) ljmp mov sti nop loop cmp out inc and mov push sarl jnp (bad) (bad) incl lods pop xor dec (bad) fildl push jne push sahf push push imul idivb and xor (bad) (bad) (bad) fstps push mov jle push add repz jns inc xor xchg (bad) (bad) dec orb adc and fs sbb or cwtl out jmp mov fistp (bad) (bad) (bad) incl cmp stos bswap cwtl daa mov push iret es nop test sub in nop nop xchg inc iret add mov (bad) mov repz cmc dec movsl insl fldt sbb pop daa sbb xchg xchg xor incl adc shll fadds push dec mov mov (bad) (bad) jmp mov inc movsl and into mov clc xchg icebp cmp fs cmp adcl inc jmp test mov divl pop push mov add or (bad) pop sahf jg jae aaa rorb sub push call lcall push push repz scas mov aam stc pop sub mov imul scas clc (bad) pushl pop rep dec stos iret in shrl and gs out adcl jne add xor mov cmp dec loopne (bad) ljmp jbe out push mov fwait ja inc leave push push (bad) cli and mov (bad) (bad) (bad) jmp imul xchg adc loopne jbe add pop gs loope mov push jne (bad) jg out or pop dec jbe andb test fcmovnu mov jae pusha loop or mov xchg mov aam gs cmp les (bad) lcall inc ror xchg lcall je movsb cld out push (bad) jo cmpsb jg dec mov imul inc adc (bad) cmp fxch (bad) ds sbb mov (bad) (bad) sti je ljmp inc jge bound pop (bad) testb jg ds hlt fwait xchg aas test xor (bad) (bad) incl lcall imul add cwtl scas adc (bad) and imul (bad) (bad) (bad) (bad) jae,pt jo pop ss mov inc popa mov and fnstcw jne (bad) mov int3 aas sbb lret adc mov xor fsubl inc lahf pop adc (bad) (bad) (bad) call push lret jmp std jb icebp (bad) repnz dec rol test movsb mov insb mov js (bad) mov mov mov sbb jg fs (bad) (bad) incl cmp sahf inc cld lret lcall mov xlat mov lods adc (bad) (bad) inc push into lret inc sbb inc scas mov xchg adc and popf inc pop stos into arpl jecxz,pt (bad) (bad) push xor push or xchg lods cmp popf lcall dec xchg dec push (bad) jg (bad) mov pop xor pop sub out pop frstor jbe sub lcall cltd inc idivb cmp jae fsubl xchg jne push or rcrb std das (bad) xor clc ret std mov or fbstp mov (bad) clc inc movsb jb (bad) mov sub xchg mov sub negb jmp or adc sub decl mov pusha dec cwtl (bad) mov push or das dec cmpsl das shrl mov inc in fmul xor outsl cmpsl push pop mov mov (bad) (bad) out dec addr16 scas push mull xor out pop clc scas pop xchg das (bad) pop nop fsts push push (bad) jg incl cmp call mov jae insl aas js jb (bad) call inc mov xchg ficom push hlt sbb mov fs adc xchg (bad) (bad) (bad) (bad) stc fcoml inc fdivs cmp ficoml or sar arpl mov lods andl (bad) ljmp push cmp add mov push lret mov dec aad (bad) (bad) incl gs sbb les inc cmp cs (bad) (bad) mov jbe insb jl mov cmpb lods mov aad pop aad loope decl pop sub jg fildll insb jns (bad) (bad) (bad) (bad) fiaddl push in mov dec pop lds ljmp cltd xor cmc pop or mov fs dec orw inc ja int aaa rol addr16 push movsl lret imul ud2 cmp pop and jmp mov je aas jp cmp adc (bad) (bad) pushl in addb xor push shll inc mov into and pop sbb adc (bad) (bad) (bad) lcall fdivrl test fistpll repz xchg cmp int3 loop jg es hlt jbe or (bad) (bad) decl add mov out adc bound adc xor jb jl push and inc mov push ret mov nop jle fdivr pushl push mov dec aam sub out jnp dec sbbl subb stc mov repz dec aam dec jp jge loope imul (bad) (bad) ljmp jle leave inc and and sbb in inc ret adc mov (bad) (bad) decl pop sbb or insb xor cld fwait out mov push push test push mov adc cli lcall pop pop clc iret push push lret push mov pushf (bad) jecxz adc pop dec mov mov (bad) or pop fadd clc sub sbb jmp test call lock and inc jnp push adc inc sub enter ljmp and xor dec call rcl outsb mov in sub (bad) fcomip (bad) ret subl jg add and test add sub xor adc es sub lods bound or xchg cmp decl and gs xchg or and decl lods fildll clc cmpsl xchg dec bound or pusha dec movsl push sbb ljmp in and xorl inc mov dec ja add pop imul lea xchg pop (bad) (bad) ljmp dec sahf cs and outsl mov sub cmpsl jne mov bound std (bad) (bad) cmp int3 sbb cs shrl xchg sub (bad) into inc lcall iret dec pop das loopne in repnz icebp outsb int3 pop adc dec cwtl (bad) (bad) incl cmp aad lret adc or enter pop out add (bad) imul adc cmc (bad) dec mov adc push sbb adc mov (bad) lcall cmpsl dec inc xchg or stos out movsb jae repz mov popa cmp pop insb lcall jecxz (bad) sub push imull and (bad) (bad) (bad) decl popf fstpt outsl mov xchg je xlat mov push test out and mov (bad) (bad) jmp mov xor cmp mov mov or aam decl mov sub scas daa out outsl pop xchg mov (bad) (bad) (bad) (bad) ficompl adc pop xchg pop cmp (bad) das xchg cmc adc sbb xchg fistpll (bad) call je outsb movsb mov data16 test jg sbb pop xor (bad) lcall in stos (bad) sub das pop or (bad) jg dec daa popf lret aad inc mov lret daa outsb stc in sub pop or pop dec mov push stc sbb (bad) (bad) (bad) call roll jne lcall into (bad) and std sbb (bad) cmpsb pop (bad) aas fwait insl (bad) icebp cmpsl jmp jne,pt pop cld (bad) cmp dec cmpsl mov adc mov clc outsb pop stos cmp inc hlt (bad) pushl cmp shlb mov outsb mov pop mov cmp push ljmp add (bad) mov fdivr add sbb subl xchg (bad) (bad) (bad) pushl dec into icebp jmp (bad) fcomip inc cltd cli sub ljmp sub out mov cwtl dec push std decl fimull jo pop jle add and (bad) incl cld dec repnz cmp and mov into dec popa (bad) lds data16 (bad) (bad) jmp cmpsl jb lds inc sub dec cmc xchg or aad insb (bad) iret inc fwait mov pop lock xchg mov int3 push pop fwait push push in (bad) jg mov daa lret pusha xchg dec lret push not mov (bad) (bad) ljmp icebp jp stc test mov mov into jmp cmpsl push insb (bad) (bad) (bad) push push stc les ja insl dec imul outsb minps jne sbb mov cltd xchg int3 (bad) (bad) (bad) decl test (bad) jl sahf outsb mov bound ja (bad) mov test (bad) and and cwtl pop sbb inc push daa inc mov pop data16 rolb (bad) ljmp fdivrl push push fwait and and dec adc dec movsb mov fdivrp (bad) (bad) out sbb dec inc ret negb and gs push addb xor (bad) (bad) (bad) cmp testb ja cld hlt ss jae and cld into sub (bad) push push push pop js pop lock inc jmp andl cmp inc fldcw jg xor pop lock push stc push lahf mov movsb sbb out fmul fldl jecxz (bad) inc jmp jg cli cld in jg clc push stos pop dec sbb inc inc lods cmp jo (bad) (bad) (bad) (bad) std (bad) in dec push adc mov cmp xchg iret dec gs pop aam shl mov mov xchg mov xchg mov add pop int3 in or arpl sbb es lcall ficom and adc aad mov into sbb and adc adc js xlat out and (bad) lcall idiv and cwtl or jae test push jnp sahf inc mov (bad) mov (bad) stc push lock push cmp fwait aam out (bad) (bad) (bad) (bad) jmp popa add fcompl mov jecxz jae jg das aas sub test movsl add push inc push enter (bad) pushl inc mov ret and sbbb mov add addr16 insl cmp (bad) (bad) (bad) jmp sub lahf xlat test xlat jns pushf dec imul mov dec roll (bad) (bad) lcall or jge leave or cmc outsl outsb fidiv pop push inc cmpsb push in (bad) lret in (bad) (bad) (bad) call xchg cmp in out cmp fisttp jecxz ret stc ss lock inc clc (bad) jmp inc fsubs js sbb mov pop daa sti addr16 clc cltd (bad) (bad) incl (bad) hlt xor push lret jle cmp jne hlt sahf push push mov pusha scas (bad) (bad) (bad) (bad) pushl adc mov imul jns in (bad) ds nop les mov lret cmp sub repz add cwtl adc inc les cmp jae,pt sub pop mov out mov fsin push into jmp clc ljmp repnz lods outsl add into cmc mov leave (bad) (bad) ljmp ljmp call jbe cs in popf pop mov mov (bad) incl or insb cmp (bad) loopne es jns popf insb pop xor add hlt (bad) pushl mov out add cli arpl (bad) adc (bad) (bad) lcall nop mov clc adc mov add (bad) fistpl out adc jmp aam test or in jecxz,pt stos int3 (bad) (bad) (bad) call sub cs mov mov jb js pop cmpsb push fisub popf pop pop iret mov or dec hlt dec xor rorb das mov push rorl adc mov mov dec or popa popa jnp and (bad) fildll jecxz in stos pop aam xor inc xchg mov push (bad) (bad) decl inc or popf and sbb xchg (bad) mov xor dec pop lock ljmp fsubs mov and inc adc pop add pop lock repz subl (bad) (bad) (bad) ljmp jne dec aaa xor jmp ret dec dec ljmp jge ss (bad) (bad) incl dec xor or addr16 and and out push mov int3 pop rolb idiv (bad) (bad) (bad) out jl xor test jl (bad) bnd insl mov add (bad) (bad) jmp sbb and sbb sahf shll lea ret dec pop dec jg jg adc sub (bad) adc adc fildll ds inc pusha stos ja jecxz test jecxz and xchg lds test cmp lcall sub mov popa jl and pop sub call insb (bad) rcll daa lret sbb loope sahf dec dec sbb (bad) fnstcw cli xchg pop lods jno (bad) (bad) (bad) (bad) mov jmp xchg pop xor mov aaa scas mov fxch test pop (bad) xor rcl push add mov (bad) (bad) (bad) (bad) fdivrp test and neg in addr16 aaa outsb jg sti and xchg dec into inc sub shr dec mov loopne mov sbb and (bad) jg jle rcll in xor adc call decl leave push mov xchg mov jl jnp imul das lds pop cmp pop fsubrs xchg xor (bad) (bad) (bad) (bad) fstpl scas jge mov dec ja sbb xchg and jae adc js jl nop inc (bad) (bad) (bad) mov (bad) idivl xor and pushf sub mov jbe fs mov (bad) (bad) decl test mov mov in jne or inc push mov cmpsl adc cmc xor adc (bad) (bad) inc bnd pop push mov jae lds dec cmp gs lods cld fidiv pop push fcoms daa xor push aad adc cs push inc sub aad push dec popa (bad) (bad) (bad) lcall mov enter xlat jmp out cmpb ljmp pop (bad) lock fnop adc xor or (bad) (bad) call hlt push nop fistp xor sub inc cmpb pop mov sti cld decl (bad) jl lods cmp arpl inc push mov push xor std push call pop sbb daa adc sbb fisubl lret test (bad) dec repz push popa jns (bad) hlt xchg push and push jns mov clc aaa btc (bad) call repnz mov adc mov ret xchg lret xor out dec (bad) rcr test adc (bad) ljmp add push push xchg pusha push add movsb lds lcall xchg (bad) (bad) decl xor testb lock orl (bad) xor inc sub test dec or or (bad) (bad) (bad) incl (bad) jb add inc or xchg xchg repz mov fisub mov sbbl add (bad) (bad) (bad) in xor or jg gs aas mov push out fdivs mov popf (bad) (bad) (bad) incl mov push jb xlat (bad) jp xlat icebp xor fstps jge cmp (bad) (bad) (bad) jmp dec ja clc (bad) in push loop pusha dec mov lods repnz inc sbb jae (bad) (bad) call repz mov or or incl adcb adc int ficoml (bad) (bad) fnstsw rcl push (bad) mov mov repz jae sbbl add das cli fistp pop jne lock inc mov add push push std call fwait inc jmp push sarb add out sub jo add sub in or dec nop mov lret stos inc (bad) lcall into mov inc or rclb (bad) (bad) (bad) jmp pushf xchg pop cmp in adc bound hlt xor nop es daa pop ficomp decl call add imul fcmovu xchg xchg in jp lret pop pushf xor (bad) (bad) call fnstsw push lcall jge mov rcr daa ljmp xor (bad) (bad) (bad) (bad) jl push fs fldt popa mov std jnp outsl (bad) stc in fisubl cmp (bad) (bad) lcall scas xor imul mov inc cmpsl fisub daa lcall push push out lds jl dec (bad) jmp pusha std sub lret mov ret adc (bad) lcall scas add je pop rclb jg push jae mov mov mov add lcall inc movsl mov lret ds push fcmove xchg cmp pusha push (bad) (bad) (bad) (bad) fdivrl jecxz call push mov in jmp aad out test fs rorb (bad) (bad) lcall jecxz jnp dec mov pop cld nop push test insb pop lret test js decl incl cmp repz das (bad) jo scas aaa and mov fcmovnb jge insb sub inc out mov frstor addr16 gs cld arpl popf dec sbb and mov cli cmp scas xchg test jno mov add (bad) ljmp sbb inc sub sub mov nop dec movl mov inc xchg jecxz (bad) (bad) push lret popf aam std mov or mov add cmpsb icebp imul (bad) lcall popa pop inc jns mov push out cwtl aad daa test (bad) ljmp pop outsb hlt xor dec jmp in clc jo and push cwtl icebp inc and cmc jmp sub clc cs imul push pop std jg and aam frstor fcmovnb xchg cmp pop (bad) (bad) (bad) (bad) jnp push shrl or push xchg jne xlat fnstenv sbb xchg shll decb (bad) (bad) (bad) (bad) js stos test dec andb xor pop xchg outsl mov aaa test (bad) (bad) (bad) pushl fisubl das push dec sub loopne leave adc test icebp and inc sbb mov ret push mov mov jns mov out (bad) (bad) (bad) push dec jno outsl imul sbb mov cld insl rolb pop repnz pop fsubrl enter stos aam mov fidivr in pop mov (bad) (bad) (bad) (bad) jl or add add sub cwtl mov outsl ja stos mov mov (bad) call sub fwait daa sub inc fistpll xor ffreep outsb pop jg lods pop cld (bad) (bad) push lock sbb outsb popa xor imul hlt aaa mov (bad) (bad) call (bad) inc (bad) sbb mov adc sbb sbb pop int sbbb push push pop rcrb (bad) (bad) (bad) (bad) (bad) mov mov jne ret ljmp mov pushl cltd xchg add add (bad) icebp nop lods sahf arpl ret xor loop popf xchg mov and mov rolb xor (bad) jg inc mov xor xchg sbb leave mov ret jg pusha mov or sahf cmp (bad) (bad) jg push push push push insl pusha (bad) sbb adc add jg rorb popf iret out js movsb add push adc jp dec pop pop jp (bad) (bad) dec clc xchg fsub xchg iret daa inc cld bound movsb lds xor or movsl out sub or and test xlat lret mov (bad) adc adc call js out inc (bad) mov jle push fimull adc loopne pop cmpsb aaa mov repnz mov mov mov (bad) (bad) (bad) inc push xor add sub xchg mov ds pop sub jbe ja sub lret in (bad) (bad) incl test xchg inc sub xor pop push dec xchg mov ljmp ret adc inc or ljmp icebp imul scas test sub (bad) (bad) in mov and les add dec mov and popf sbb (bad) (bad) (bad) (bad) fisubr cld aad sub lods sbb jae into lock inc ficom mov (bad) (bad) decl orl (bad) arpl sbb leave rcrb scas xlat ret push das cli (bad) (bad) jge pop dec pop cs mov cmp in dec mov (bad) (bad) jmp jnp and int adc stos pop add int xchg jbe inc lcall pop mov mov xor (bad) clc dec adc mov lret mov mov jbe push jo adc das jno xor faddl jnp (bad) adc (bad) (bad) incl (bad) enter pop xchg fs outsl jns stos push push fldt ret fsubrs push or mov (bad) (bad) call fnop pop fcomp adc outsl add xchg ja add test ja mov je cmp hlt (bad) (bad) incl push xchg xchg push call jns jl push mov insb or cmp lcall pop jb and jl sub outsl cwtl pop jae xchg wrmsr (bad) (bad) (bad) decl mov bound fcoms mov xchg subb repz lock decl push mov or or (bad) pop xor pusha or sub sti (bad) push pop mov (bad) (bad) call iret xchg (bad) sub and pop inc cmc movsl jp dec outsb out lock add jae leave pop clc (bad) (bad) (bad) decl push xchg int3 xchg shll lds xchg xchg mov test push movl stos insb loop xchg cs adc fstps mov mov enter sbb out or pop adc aaa sarl jae dec pop out fldenv es (bad) lcall or loop inc xchg in push loope aaa cmpsl popf push add sbb (bad) fildll fs add cld repnz je push aas sub enter js movsl aas (bad) (bad) (bad) decl iret ds mov aas pop jo movsl add shrb pop adc stos or jge sti (bad) (bad) (bad) decl and sub ficom mov cmpsl repnz (bad) (bad) jmp add (bad) lods (bad) popa in pushf test adc insb test nop (bad) call pop cwtl pop and stos js xchg fstpl pop mov aad sbb arpl int cmp mov mov mov scas hlt (bad) lea push cmp adc mov push push stos mov xchg sbb int3 sarb sbb (bad) (bad) (bad) incl jns cmp loop or clc mov xchg sti xchg incl jl push add jg jecxz movsl dec jl and (bad) (bad) xor cmpsl jb (bad) (bad) lcall popf mov (bad) rorl fsubs adc test repnz jge ja movsb (bad) lcall mov sub fsubrl push imul pop imul mov push mov (bad) cs outsl rcll (bad) dec lahf (bad) out mov mov test dec mov rorl push pop (bad) (bad) (bad) ljmp fadd dec addl and dec out andl enter popa inc addr16 (bad) (bad) decl enter dec lds mov fcom dec cmpsb mov inc enter (bad) (bad) (bad) (bad) jmp iret icebp push leave sub fidivrl add add or jno mov decl and cld in pop adc outsl call sub sbb dec or repz mov or movsl inc sbb pop sbb (bad) (bad) (bad) (bad) out lea lcall sub xchg jge insb rolb mov inc ds xchg stc inc (bad) incl mov push push repnz pop sti and sti mov sar (bad) (bad) mov pop xor sub sbb mov out in inc mov mov dec pop jo fs adc inc mov pop ds movsb in into lret push sbb jecxz mov scas scas popf mull mov xor test sbb mov sti add incb cmp rcr ljmp pop clc imul loop jg mov pop cmp stos and sbb cmp test fsubs pop mov call sub out test and or jge jno sub (bad) (bad) pushl test call inc out or test cmp mov sbb mov push test cmp mov std ss pop lahf mov addr16 (bad) decl inc xor sub jge orl xlat mov jb repnz movsb xor (bad) (bad) (bad) mov ret fdivp mov in inc jge sub dec xchg enter mov movsl les (bad) ljmp add sub sub jae mov test pop rcrl push sub decl incl fidivl push mov pop jl (bad) (bad) jg testb mov add andl leave stos xor pop fistpll or stos (bad) (bad) call scas ret in lock xor adc xor outsl sub movsl inc or or fidiv es dec inc dec leave dec xchg and pushl or and (bad) pop xchg jae mov push adc shll pop lea inc sub jb sarl out in cmp or (bad) decl push mov test mov imul das (bad) (bad) (bad) mov adc movsb negb cld dec fistp es add cmp mov lock addr16 loopne sub sub (bad) shl pop jnp sbb mov scas fildll push in js cli mov loop ljmp (bad) enter jmp dec adc mov jns (bad) (bad) decl xor dec ret mov scas (bad) pop xchg dec mov ret (bad) icebp rorb das std out xor fs (bad) pushl je dec mov pop and aad dec (bad) mov das mov (bad) incl dec mov pop dec ret adc arpl jge fwait stos gs mov ds pop repz (bad) (bad) ljmp cli adc stc cmp push stc adc xor adc ja jge or (bad) (bad) (bad) (bad) js mov fistpl out push jg repnz aaa out dec test inc (bad) fs lcall (bad) mov inc stc lret test sub out dec push add dec test inc (bad) (bad) (bad) decl ffree (bad) fildll xchg and pop sbb dec stc daa xor and ljmp sar push dec mov fstpt sahf adc sti into rol mov (bad) incl xchg (bad) sub cmpsb pop dec rcr xlat (bad) (bad) sub push gs nop (bad) (bad) (bad) ljmp mov test ss cmp mov cmpsb and je jae cmpsb push int sbb fbld adc insl mov ss jnp mov mov push cmp shlb ljmp mov push insb mov mov add pop pop pop add pop icebp aam outsl insl into push rcrl cmp js sti sbb out (bad) ljmp gs cmp (bad) rcrb scas inc pop data16 inc fiaddl insb inc ja add add outsl pushf rorb (bad) sub jecxz mov es push mov (bad) pushl dec pop psrlq aad mov mov jle aam insl daa jbe or out (bad) (bad) (bad) jl arpl xchg (bad) mov xchg shlb cltd lahf (bad) bnd lcall push add cld (bad) out addr16 ljmp (bad) (bad) dec jge scas idivl mov ds dec mov test icebp mov or cmpsl popf mov jae mov cmp imul mov push mov dec mov sbb cmp pushf or aaa xor pop mov gs fs les mov inc (bad) jmp ljmp fsubl cmp pushf mov pop xchg adc xchg popf (bad) aaa mov loope pop dec jecxz lcall call cli push (bad) (bad) (bad) lcall inc cmp das xor push js cmp adc mov iret adc aad loope (bad) (bad) (bad) (bad) fdivs cli xchg xchg and inc mov out inc fadds loope cmc stos sub int3 clc pop rcrl (bad) lcall mov mov fildll (bad) mov inc adc sub decl add lock xor imul mov (bad) (bad) (bad) ljmp fdivs push rolb cmc and or loopne add mov pop scas mov jns pop push lret mov and sahf xor jg (bad) (bad) (bad) ljmp add and sbb aad (bad) mov push (bad) cmp out fimull sar decl push pop pop ljmp fisubr mov mov xchg xchg mov popf pop out add sub ficomp dec mov cmp mov mov (bad) (bad) decl push mov addr16 movsl or imul movsb add dec cmp ljmp xlat push movsl mov fistp adc rcll sbb ds inc (bad) es jp ds dec sub add fcomip pushl xchg fstl lret push and add xchg (bad) mov xchg popa call lea rolb icebp mov or (bad) mov repnz pushl in iret and aaa (bad) mov push sti (bad) add clc pushl imul add ljmp xor outsl icebp movzbl dec aam leave cmpsb invd lock and out test adc sbb ljmp call aaa xlat adcl (bad) cmp jle fwait mov scas ud2 jmp mov xor enter xchg fisubr (bad) lcall adc ret and scas movsl pusha push jge jmp stc jbe shlb popl mov clc mov mov test (bad) icebp (bad) (bad) (bad) jmp adc pusha mov xor cmp outsb in arpl mulps (bad) (bad) lcall (bad) test fwait push pop cltd xor jns neg adcb jb stos dec movsb mov lcall xchg scas push cwtl lahf enter repnz pop jle enter mov inc inc sub cmpsb mov ja add xchg push (bad) (bad) (bad) (bad) jmp jp xchg dec mov subl jle sub and subl insl pop aam (bad) (bad) incl fcompl std mov aad lcall pusha jo sbb inc call or sub mov mov rcrb (bad) jmp dec mov mov mov xchg andb das jmp lcall outsl mov inc mov ds mov xor push and xchg mov mov inc adc xchg popa pushf es pop cltd xchg shl jnp (bad) (bad) jg in and jmp lea scas fcmove leave lret xchg sub enter (bad) (bad) mov je sub cmpb hlt adc mov ret push mov inc call leave or (bad) out dec js lods nop in js xchg push std daa (bad) (bad) call adc xor outsb xchg rcrb movsl popf cmp jecxz pop insb gs int3 push add lcall jne mov inc (bad) lock jecxz cmp sbbb push or cmp add xchg js xlat out leave xchg jg decl faddl sub imul dec divl shrb (bad) dec xchg in and jge jp (bad) gs dec pop mov mov pop lret lret push ror dec jmp xchg pushl fmull xor or mov hlt (bad) (bad) lcall (bad) int3 xlat (bad) mov adc jne mov stos or jmp iret add (bad) call lea iret sbb mov pop sub aas into lods loop out push fmul mov sub jo (bad) (bad) decl cmc adc push add mov stos inc cmp lds dec dec incl pusha (bad) (bad) (bad) (bad) (bad) aam xchg loop pop das aad stos cld nop test pop mov test fbld clc mov (bad) xchg sarl jo xchg jg rcl rorb (bad) (bad) (bad) (bad) (bad) push out mull in push lods addr16 inc arpl movsl repz sbb (bad) insl sbb (bad) (bad) (bad) incl scas push or mov or push xchg rorl cmc (bad) lret lea mov pop add (bad) ljmp dec lds cmp ds aaa fwait les cmp mov movsb repz push popf mov jge inc cli sbbl push add (bad) incl pushf fiaddl sbb cmp or cmpsb fnop inc xor lcall sbb sahf adcl jge lcall cld pushl adc or int pushf popa test mov (bad) out push fisttpl sti push sbb mov xchg shrl (bad) (bad) call mov dec push sbb (bad) mov lds mov mov mov decl cli jecxz scas cmp jae out adc cli les and jmp das repz enter (bad) push (bad) (bad) (bad) jmp call pop int3 xchg xor pop add fbld push inc lahf out imul jle mov lock mov out (bad) xor push mov scas pushf jnp adc dec pop ljmp cmp jl lock mov (bad) (bad) (bad) pushl imul fild add mull subl fs sahf and (bad) decl cmc out dec mov pop mov mov out (bad) (bad) (bad) (bad) in inc lret test mov push pop or pushf fs pop xchg test (bad) (bad) (bad) call or sti dec sbb rcrl (bad) jns fdivp stc cmp scas xchg insb ret hlt (bad) jmp xor ret arpl xchg insl or xchg xor cwtl mov test sub loop lret loopne add clc inc std sub (bad) (bad) arpl dec inc std stos and ss je xchg cmc inc pop data16 (bad) (bad) jmp pushf lcall aas aad test and fimull mov mov mov cld (bad) (bad) call xchg sarb mov jo and dec gs movsl cmp push jle imul push push push push inc icebp xor addr16 test mov mov sti lret jne sbb enter mov pop frstor inc ljmp pop aam lds sbb loop push test cld mov or outsl inc incl aaa pusha mov jb pusha xchg pushf or repz mov cmp faddp pop (bad) mov dec shlb jmp cli (bad) lcall mov fmull mov mov and mov and bound loopne jp pop or (bad) push cmpb xor (bad) cmp cmp push xchg mov cmp movsl adc sbb nop shr cmpsb inc gs icebp adc test (bad) (bad) (bad) jmp lcall pop inc ret mov cmpsb xchg xchg mov or jnp jecxz and mov leave push movsl xchg or or out pop scas popf cmc mov dec add stos shrl cld cmp aad lcall decb and fstl mulb scas iret adc sti outsb and (bad) jmp ret sbb cmp lret out lods mov out xor int sub (bad) (bad) (bad) push scas dec and out nop outsl cli nop sbb sbb pop cli jmp mov mov bound (bad) (bad) (bad) incl cmp movsb imul pusha or cs frstor int3 insl out call lret (bad) pushl pop incb xchg mov pop idivb mov test sub aaa push les mov xchg jp and push (bad) (bad) (bad) (bad) ds insb cmp (bad) jmp in into sbb fbstp dec push rorl sub (bad) sub xchg (bad) (bad) (bad) decl in loope seto ret fidivl lea clc stos push mov cmpsb xor ret (bad) (bad) lcall push mov push cmp repnz mov add xchg mov (bad) (bad) jg test fadds mov mov mov adcw xchg das stos (bad) (bad) incl xchg jmp cmp push clc pusha or adc mov (bad) call inc adc xor sbb and movsl jbe cltd int3 push aad movsb (bad) (bad) call pushf loope enter rclb jns adc xor add arpl pop and jnp pop inc pop add int sbb push mov pusha out push fbld call mov cwtl xchg lds and icebp cli dec icebp pop ds adc sbb push adc sub cmp mov (bad) (bad) incl (bad) iret cli push and push mov push stos mov dec mov sbb mov push arpl xor adc aas in das lea sti movsb (bad) enter outsl push mov and stos loope pop subb mov lcall in ficompl push cmpsl xor jae sbb stc dec (bad) hlt mov test fwait lcall mov jmp ret arpl xchg outsl jnp sub add hlt outsb sarb add dec mov (bad) mov adc push and dec in addr16 mov (bad) dec add sub fsts fcomip ficomp arpl mov adc jle mov (bad) call mov lret or inc pop sub stos mov sbb pushl adc sbb inc pop xor js jno jle (bad) fildll and out xorb sub inc loope mov jns mov jo imul dec (bad) ljmp enter mov inc test push dec mov pop push (bad) mov cmp pop mov cld int3 ror jno addr16 mov stos dec (bad) and fwait cmp xor inc adc mov ds (bad) (bad) jg cs inc ret push inc inc or in lahf js push (bad) mov test (bad) pushl dec rcrl xchg dec or jmp loope in clc push xor push sarl frstor (bad) (bad) jmp pop cmpsl dec movsb cmc gs pop and test out cwtl and mov idiv icebp daa ret or mov (bad) jmp loope cmp outsl and test fidivl ss jg outsl sahf das test inc adc (bad) xchg in mov push add decl (bad) jmp hlt out loop sub push sub sub push inc mov outsl (bad) mov shr lcall ja inc lods sti (bad) mov lcall (bad) fiadd idivb negl inc cmpsl inc jnp cmc popf fidivl fucomi push add push (bad) (bad) (bad) out sub mov pop pop out jl lock cld pop xchg cmp cmpsb (bad) ljmp stos icebp cmp ret in (bad) negb xchg leave sbb xor push aaa mov (bad) js add fnstcw pop fwait insb loop ret jns scas lods outsb adc call pop mov push jae jo add (bad) (bad) (bad) decl lods jge inc xchg or cmc daa sar sbb movb pop outsb inc cwtl inc pop cmc (bad) lcall (bad) mov sub cmpsb (bad) mov stos psrlw lock jp and xchg and dec ret mov iret push lock (bad) jmp and mov push cltd or dec scas das push faddl sbb adc push dec in ss clc (bad) jg int inc mov (bad) sahf push inc lods push lods loop jns sbb (bad) (bad) push mov push mov mov push and subb imul push cli ljmp xor xor mov inc out xor hlt scas lcall pop dec dec loope (bad) inc fwait jno pop push jmp xchg push es (bad) pop icebp fild js dec mov shrb hlt call lret mov ja sub mov lea inc lds inc xchg (bad) xchg (bad) (bad) (bad) inc lea sbb adcl sahf xor dec js or insb cmp or sub (bad) (bad) (bad) in jo in push sbb mov enter fdivrp int lock mov xchg cmp or mov dec cmp cli aam addr16 popf adc (bad) (bad) jg pop mov fidivr lods lods fldt dec lahf fyl2xp1 fcompl mov enter push and notb out cmp mov adc popa test lret inc rolb mov adc ljmp fnstsw sarb (bad) (bad) lcall pop xchg outsb cmpsb (bad) nop lock outsl dec das or cmpsb popf test negb in outsl mov and pop pop mov inc adc (bad) (bad) jmp popa jne jl xchg inc (bad) mov jg cmp xor xorl mov shl ljmp (bad) ljmp mov adc cmpsl xchg push sub je fsubrl stos enter add (bad) insb ret lret cmp outsl sahf jp inc popf imul xchg sub out adc pushl lcall jae lea sub leave repz cli push jns popa cld sbb incl mov jb repz sub lret add jp or xlat mov pop mov lcall cmp ret jle jo mov pusha stos mov sub outsb and mov sub jg decl inc mov (bad) loope xchg mov push fldl es jae sbb pop loopne stc jo roll (bad) mov and imul add lcall ret mov int jae adc mov inc nop sub and aaa fsts rorl test or repz rorl dec push push sbb and idivb lock (bad) jg mov jge (bad) stos scas pop lods push adc pop push xchg sti out rcrb sbb pop (bad) (bad) out and mov popf lds adc stc mov repnz sti dec ret pop cli movsb in mov data16 lret push pop dec cli mov pop arpl icebp (bad) lcall or pop pop adc std enter pop dec mov aaa std xor inc out xchg push pop push xchg lret dec mov (bad) (bad) jmp xchg pop push imul cmc push sub mov push mov mov (bad) (bad) (bad) jmp sub and mov push push enter hlt sahf imul (bad) mov pushl sub push add stos sahf nop mov push mov push adc pop inc push adc and les (bad) jg std mov daa rclb (bad) mov outsl inc dec and (bad) inc jae jmp pop pop lea and jmp or shll inc inc cmp pop rcrl xor test jo fist push push (bad) (bad) lcall imull aas add sub push jne push lahf shl push stc push fist ljmp mov jl cmp mov fist dec jno (bad) (bad) (bad) incl add mov jbe roll push sti pop or mov cltd cmp cmp (bad) jmp pop jae sub clc jns scas push cltd xor and lods aaa and (bad) ljmp push xchg (bad) or xor mov ss add fmuls (bad) mov xchg es dec pop cmp mov (bad) (bad) (bad) incl out inc push jp add aaa jl aaa mov xchg test mov push (bad) (bad) call std leave scas lahf sbb adc pop nop (bad) mov push inc pop repnz adc sbb push xchg sahf shrb sets ljmp clc inc mov enter je jnp jnp enter fnstsw outsb repnz (bad) (bad) pushl adc daa cs insl dec lea dec jg lods mov inc fnstsw lock lods aad pop pusha jecxz (bad) mov xchg fadds fbstp clc or movsl xchg or (bad) ljmp mov push in in fcmovnbe repz fmuls or mov movsl (bad) (bad) (bad) (bad) jmp inc push js and (bad) dec add movsb adc mov mov add (bad) ljmp (bad) hlt sti mov (bad) es aam rcrb and aaa mov jae jbe clc (bad) jmp hlt fs jnp dec lahf jne jae add xor (bad) (bad) pushl ds cs fistl jae enter (bad) inc out push sbb mov (bad) (bad) (bad) cmp popl adc rol and inc cpuid and sbb mov jp (bad) (bad) (bad) pushl mov mov imul dec lcall mov or cld ljmp scas data16 sub (bad) popf mov nop lock int3 ds mov (bad) (bad) (bad) jg (bad) sti pop sbb bound scas icebp addr16 orl aad repz cmpsl pusha mul inc push popa cmp (bad) (bad) jmp sub mov (bad) lock ficompl add mov call ds (bad) push gs jae xchg jae xchg das push fwait push aad pop adc mov and dec mov pop jne jnp leave add push icebp dec mov jl dec cmp sbb mov or cmp cmpsl adc pop insl (bad) (bad) (bad) fisttp dec inc push adc add xlat sarl pop nop adc (bad) ljmp out aam out add dec adc xchg lock shrb loopne cwtl mov (bad) decl inc test or int pop es sbb jecxz pusha pushl movsb (bad) (bad) (bad) lcall (bad) sub hlt lea cld sub add push call cmp (bad) jmp xchg adc jns sbb or sbb or add int3 (bad) (bad) (bad) jmp add in add or lock icebp jge mov (bad) gs das mov pop mov jmp push inc mov inc jnp xchg nop das add leave (bad) push cltd add add insb repnz clc mov push sub sub test adc out adc xchg adc rorb ret lret or jecxz lds in xchg sub (bad) (bad) (bad) (bad) mov jl mov jmp cmp in daa sub adc xorl jle inc aam jecxz popf xchg cmp inc push jno insb add dec loop fistpl out and out jp mov incl (bad) (bad) xlat cmp enter add jno add (bad) jmp into dec sbb les xchg xchg dec jne pop fwait out (bad) (bad) ljmp fdivrp or int3 mov mov arpl add dec fnstenv je push xchg mov mov aaa pop pop jno aam (bad) mov inc xchg (bad) decl mov cli jno sub sbb imul popa (bad) fsubs pop (bad) cmp jmp adc faddp ds mov and cltd xchg outsl in loop mov (bad) ljmp or mov xchg dec dec push xchg add scas mov js jle push je ss push sub cli push notb mov (bad) in testb xchg add clc (bad) (bad) mov mov lret fbstp arpl add sub push mov arpl jge mov inc pop jns jle data16 mov nop aaa mov (bad) (bad) jg mov adc (bad) popa pop pusha jb hlt cmp movsb or test fwait and (bad) decl mov xor add cmpb cltd outsb loopne (bad) lcall ja pop inc sub mov jbe out dec push inc adc (bad) (bad) dec cmp test (bad) int3 dec sbb push adc (bad) arpl mul repnz and outsb cmpsl (bad) (bad) mov jbe cli insl scas dec mov and jecxz ds (bad) cmc lret test (bad) lcall push mov pop add mov mov cmc scas mov repnz jle shll (bad) (bad) jmp scas mov push pop xor imul jle inc pop (bad) jmp dec fidiv sub (bad) scas push pop mov (bad) (bad) jmp lcall sti mov pop lahf jns xor addr16 xlat xorb sub (bad) jns or in (bad) (bad) (bad) lcall inc ret pop movsb test adc cmp inc xor xchg int3 push push add jecxz push ret mov lcall mov pop add ljmp add repz xchg fldcw scas aad (bad) push and leave jno jmp fidivrl sarl mov xor aad inc fwait push popf js (bad) (bad) jg push mov fstl loope in stos mov inc shrb scas and ja xor xor (bad) sbb (bad) (bad) lcall push repnz push xchg mov (bad) push pop jmp xchg js xchg lahf je (bad) (bad) (bad) (bad) fiaddl aam mov xchg ret jne lret fadds xchg in add mov int3 pop fsubrs mov test ror int3 sub mov rorl lds cmp jbe movl pop int (bad) es pop xlat sbb cmp (bad) (bad) ljmp sub enter lahf push mov lret into pop sti in stos out setbe jb (bad) (bad) call inc ficoml hlt xlat cld adc gs jns rcpps inc sti cmp dec jns int3 ljmp es sbb out cmp (bad) jg popf lret in repz (bad) mov add ja inc dec adc ret and adc sti ja pushl dec xchg push out push test inc (bad) mov scas push jg aam pusha ss xchg cli and je call lods lock lds decl dec (bad) cmpsb sbb mov loop (bad) jns mov pop and mov iret repnz ret inc int incl dec mov xor (bad) (bad) inc push leave or xchg stc faddl cwtl mov jmp or or adc (bad) ljmp bnd (bad) adc or mov xlat dec push (bad) lods xor lock pushl adc mov mov inc sub or hlt (bad) ljmp dec sbb xchg pop stos sbb fwait imul mov negl add (bad) fildl sub ficompl xchg lods (bad) (bad) (bad) fistpll mov xor add dec jnp aad lret add fs (bad) pushl jp push (bad) psubb sub mov and lahf pop (bad) (bad) (bad) decl fisttp cltd jb mov (bad) insl adc fstl add (bad) call and inc outsb idivl pop inc mov push sub pop push repz decl sub imul and pushl pop mov insb bound outsb pop movsb dec (bad) incl mov xchg pop cmp pushf or (bad) (bad) stc stc arpl (bad) (bad) ljmp mov sahf xchg scas fldenv adc jg inc out inc cli cmpsb inc idiv (bad) (bad) push rorb cmpsl mov push nop push frstor repnz cwtl dec mov shrb movsl add out stc sub cmp call hlt fs add inc sub mov je push pop in push loopne repz jle fdivl cli sbb sahf xchg adc mov (bad) incl mov push push ljmp sbb jg pop jns cmp and pusha scas scas pushf decb out clc cmp add std pop mov jl xchg ret ret jae arpl inc and mov (bad) cmp jp out clc incl mov cmpsb adc repnz gs add mov pop call push jecxz inc jl xchg jnp jge pop hlt cmovg adc dec jmp (bad) lcall add imul jmp mov std (bad) inc stos js (bad) cld ficomp imul inc les ret ret cmp (bad) jne sbb push (bad) (bad) (bad) call call cli test add in das outsl addr16 push hlt pop adc scas cmp nop decb jge mov mov pushl int3 lcall or jo cmp xchg icebp (bad) jg (bad) (bad) insl dec pop mov cmp mov sbb iret es (bad) mov sbbb add hlt test aas jle sub (bad) mov (bad) (bad) pushl or add sub and test jmp stos das push (bad) (bad) (bad) (bad) call cs or incl cmp dec xor (bad) dec push in dec pop cmc clc sti jle (bad) (bad) incl or lods jl mov movsb (bad) leave xchg pop pop int dec roll mov lock (bad) (bad) (bad) incl xchg cmpsb and mov inc pop push xor or xchg (bad) fsubrl je mov xor (bad) lcall pop out ljmp test and pop mov into dec (bad) out mov adc xchg jne,pt adc adc mov (bad) jl repz sub mov sub and cmp rclb test icebp mov hlt (bad) (bad) stc leave jmp arpl scas mov mov (bad) int3 push inc lret jp ficom and (bad) (bad) call fsubl cmp jmp or (bad) cmpsl adc dec mov in ret int3 adc std adc jecxz push test stos daa or push cmp mov lods or push cld (bad) fadds sbb in pop sub imul cmc pop call sub ljmp sub and lods jne jl js dec ja mov (bad) (bad) (bad) jmp popl inc adc imul add push aad cwtl sub sahf es rcrb cmpsb mov (bad) (bad) incl and lcall mov push dec out stos add jnp call (bad) (bad) jmp mov out xor jb xchg stos cs xor cltd sbb xchg cmc lods mov (bad) (bad) (bad) inc xchg dec jge xorl outsb xchg adc mov xchg add mov cld (bad) (bad) scas test inc out push jmp xchg or mov mov decl clc sbb mov mov (bad) (bad) call fild adc sbb mov jl jb mov xchg aam sbb (bad) (bad) ljmp dec test rorl pop push lea rcrb pusha inc xor lahf pushf aaa push and sub and add push (bad) mov mov xchg ffreep xchg loope out (bad) (bad) (bad) ljmp xor shlb or pop push ss or divl (bad) (bad) (bad) fisubrl or jo addr16 xchg xchg lret movsl sub or incl mov cmp lds sahf ror (bad) (bad) (bad) jmp adc lods bound (bad) cli (bad) pop cmp aam xchg jg jge inc cs cmp (bad) incl insb pop inc iret adc mov cltd sub les adc lds ret repnz jno loop std pop add (bad) fisubr outsl pop (bad) loope sbb (bad) (bad) lcall jecxz cmc addr16 mov outsl sub jbe jb shl inc sbb add lcall (bad) push out sbb aad pop int3 jle leave mov dec mov inc aaa cltd rorl pushf aas ret mov testl mov jle in add inc rorl (bad) fcomip jnp pop jb or xchg sbb push xchg aaa and pop fidiv cmp add inc sbb test sbb scas std adc scas push into incb mov sbb (bad) (bad) mov daa (bad) (bad) (bad) pushl imul jae arpl fwait rcrb repnz rcrb xchg add pushl mov (bad) out sar fwait movsb int push mov lcall cltd mov int3 rcll (bad) (bad) fisttpll pop xchg pop sub in dec push in add or test push call mov mov mov in mov test inc mov inc inc adc in std and inc push popa fcomps movsb jl sub pop imul sarl ds sbb cmpsb sbb (bad) (bad) call aas fdivl or pusha int push push push movsb mov (bad) dec inc mov cmp scas cld xchg (bad) (bad) (bad) (bad) cmp inc jo sti pop outsl (bad) xor cmpsl or add movsb adc ror mov decl pop add cltd mov inc cmp mov jmp mov or mov pop loope out mov loope adc incl mov mov stc enter ret (bad) xor sub push add pop cld and mov arpl pop (bad) (bad) (bad) decl repnz movl or ljmp dec pushf jp lret ljmp (bad) pushl insb jb pop andl out nop sub cmc movsb cmc xchg in (bad) (bad) call sub or dec xor pop inc cmp cwtl fs (bad) lcall xchg mov jno and cmp pop mov (bad) sbb loopne xchg scas clc (bad) ljmp mov std repnz rcrb loop sarb insb in or clc (bad) cmp (bad) jge and ret aaa loop sub (bad) (bad) fdivrl jo push xchg pop out fild fs and lret mov jecxz iret mov mov iret scas xorl les push (bad) (bad) lcall push xchg pop in adc cmp (bad) push lock lods ret call jmp popa (bad) adc xchg mov mov rcl mov cwtl sar (bad) incl mov xchg xor sub pushl inc hlt cmp jmp inc out adc fidivl adc adcb xchg jmp outsb lods je jmp std call push mov pop jp loop rcr push (bad) (bad) (bad) lcall cmpsb rcll sub out push mov push or push or (bad) mov lods (bad) sbb jno bound cmpsb pushf clc fwait cmp (bad) cmc (bad) (bad) (bad) stc outsl imul mov jmp outsl xchg pop into mov roll movsb sbb (bad) (bad) (bad) pop pop (bad) mov ret call jo sub int cmpsb jae fildl mov mov (bad) aad cld inc pop cli cld jl inc mov mov pop mov loop push push sub or lret xor loop dec sahf fdiv (bad) (bad) jmp (bad) mov outsl or jb push imul pop (bad) call lcall jle scas (bad) mov jg movsb loopne adc and xor lds xor dec (bad) (bad) call xor jl (bad) in or sub pop jge stos fild das (bad) (bad) (bad) call push dec xchg mov xor inc test out insl mov in push mov fwait lds jmp out sbb jo (bad) (bad) lcall push lahf xchg adc popf je daa mov lea (bad) dec int cs (bad) decl xchg xchg push xor jno or inc inc or lock adc sbb fwait (bad) (bad) pushl jle add icebp mov xor cmp clc jmp mov lret (bad) and ret pop add into pop in (bad) (bad) jg jnp or jae pop pop cmpsl cmp loop or rcr pop in and (bad) (bad) incl sbb pop sub dec sarl xchg mov jg ljmp (bad) (bad) jmp ja or daa lds jnp xchg sbb mov jecxz imul aaa ljmp sar push cmovg iret adc mov out mov cmp lahf (bad) (bad) (bad) (bad) mov adc repz push or in fsubrs aam cmp jl jg sub movl mov imul adc push xlat enter jecxz adc loope scas push xorl stos imul push les scas adc sti pushf mov add (bad) (bad) dec mov xchg xchg gs loop rdpmc sub outsb push push stc or das xor dec sbb test (bad) incl mov rorb xchg dec data16 scas jo fwait dec jns dec loope mov out jbe sub test (bad) (bad) (bad) mov divl stos jae adc mov insl jecxz cwtl xor (bad) lret mov (bad) (bad) (bad) mov (bad) ja (bad) mov xchg jp xor mov lahf loope and test pushl pop (bad) jnp dec and or pcmpgtb inc (bad) cmp cwtl das shl sub lcall add xor sub push ror mov lds scas test mov lret addb test mov or lods xchg mov test mov pop (bad) (bad) (bad) dec ret les add inc inc inc mov jle mov leave sbb cmpsl loopne scas outsb loop adc jmp rcl sub ss rorb pop mov push jbe xor (bad) fimull xor dec aas cmp incl cld jmp fisubrl adc in movsl in xlat psubw jno sar (bad) (bad) ljmp lahf inc cli jecxz push aas cwtl mov pop hlt mov lds inc (bad) fnstcw (bad) (bad) (bad) lcall adc cmc pop (bad) sub popa pop lods mov mov or mov lock repz (bad) adc jmp mov sarl add (bad) adc loopne or leave sub jno not or push add (bad) (bad) pushl aas inc jge (bad) imul sbb add ret imul inc xchg push inc bound stc xchg pop outsl push ret (bad) mov inc icebp stos mov sub jno jne mov pop xchg (bad) (bad) (bad) mov cwtl test lods ds or out xlat ret outsl mov xchg adc (bad) (bad) (bad) jmp je inc in (bad) call mov nop jnp adc or test pushl aam leave ds (bad) imul cmp (bad) xor or xchg dec xchg and fwait jle or xor and call sub xor fldpi les xchg adc pop push fnsave (bad) cld xchg inc mov push sti out int3 sti cmp insb (bad) (bad) mov out test cld cwtl inc orb fmull stos insb dec cmp jle xchg cmp or adc movsl dec pop loopne sub fstpl jmp or repnz sbb sub cmpsb add or (bad) (bad) push mov lods and push into aas sbb jno fildll rcll or sbb cli aaa pop (bad) incl add mov lret xchg clc (bad) mov mov loope das inc ret (bad) xchg insl jbe dec xor test inc dec orb (bad) (bad) insb mov loopne xchg pop jo lock mov les or (bad) decl sub cmp fidiv sbb (bad) and pushf xchg icebp (bad) incl add mov test les push out inc pop (bad) (bad) lcall dec add jne dec (bad) dec xor fidiv repnz mov mov mov (bad) (bad) lcall and (bad) mov sub rorb (bad) into inc sub call sbb inc fdivr adc xlat cwtl rcrb cld or (bad) (bad) jmp mov cwtl cmp xchg xor pop (bad) xchg push jge lods gs loop pop ljmp repnz daa (bad) (bad) (bad) (bad) cmp (bad) sbb sub mov ret (bad) cmc mov xchg push mov mov dec (bad) (bad) (bad) decl test jns popf push or mov mov negb ljmp xchg test jl orl pop js push and orl mov add enter xor mov mov adcb push stos xor cwtl sub cmp pop iret xchg out dec movsl das push jmp pushf sbb in push in add sti push loope popf lret pusha cmc (bad) (bad) (bad) mov mov lcall push pop add pop cmp scas pop jecxz call (bad) decl aad push cmp push mov rcrb out inc call (bad) (bad) (bad) fbstp in jp pop mov jmp int3 icebp inc loop and xlat and adc (bad) (bad) lcall cs stos mov sub jmp cmp mov sub mov enter mov add scas pusha add (bad) (bad) ljmp movsl jmp lahf (bad) and cmp ja dec rolb test (bad) (bad) call cmp push addr16 xchg push adc jge jmp xor fisubl (bad) mov adc (bad) ljmp test mov mov inc xchg jecxz push push xchg mov loop adc test and ljmp sahf (bad) and out adc es scas sbb mov iret pop ficoml call out sub sbb jmp ljmp jb jbe,pt sahf adc or sub sbb and (bad) (bad) (bad) mov jne repz push xor and repnz out xor jnp insb (bad) (bad) (bad) pushl dec mov stos pop ficoml in mov aam (bad) (bad) fidivl or add adc insl (bad) cmp mov (bad) out clc ljmp out aas insb mov add inc (bad) or daa cmpsb add mov or (bad) pushl sub and in out lods push dec loope pop (bad) push add sbb ljmp xlat out mov mov or add (bad) (bad) jg ficomp rolb dec shrb (bad) mov (bad) cmp jmp inc (bad) ss rolb lcall push mov (bad) decl repz xor out sbb loope lret cltd jle stos jbe fidivl adc les in rcrb enter dec sub js mov ja outsl std rclb jg (bad) (bad) aas push notl cltd pushf pop jb pop sub ljmp inc mov movsl lods arpl add fldl add ss or dec mov in enter out mov pop gs inc je mov (bad) jg push stos cmp cltd mov aaa push xchg mov (bad) icebp bnd mov xor iret jns lret pusha rclb cmp cmp adc push xchg add pop (bad) push inc mov (bad) (bad) ljmp mov stc push inc sbb rclb cmp jecxz jne xchg ret in xchg sbb gs (bad) movsl rorb aad pop inc lds mov xchg add ljmp pop repz sbb mov (bad) jmp jae jecxz push les xchg push rcrl in lock fs (bad) jo xchg inc imul jecxz movsl mov cmpsl mov mov clc (bad) pushl xlat sub and xchg add mov cltd fs push decb add outsb mov jmp pop and lcall (bad) or fild imulb pop push mov dec (bad) (bad) (bad) lcall clc pop pop cmp ss repnz cmpb adc mov xchg mov lcall jmp imul jnp inc mov or sub add inc jle add adc arpl sbb mov mov pop xor mov pushl xor call in adc lret ret pop cli adc cmp out mov pop nop ret (bad) (bad) mov bound adcl push movsl outsb sbb mov mov and call pop inc insb popa and pop mov scas jbe cmp rorb ficoml cld ljmp inc pop push insb cli cmp dec cli push or adc insb xlat dec test inc sub aam jle inc (bad) jg popa mov (bad) (bad) and and and ljmp cli push push aam cmpsl push icebp ftst ljmp arpl mov jbe cmc pushl mov jns mov (bad) mov (bad) movsb pop adc fcmovbe pop or (bad) (bad) (bad) in mov inc mov out fdivrs mov add xchg pop pop or inc cli push clc push jl mov pop xchg lods int3 jns cli sub pop scas in (bad) decl mov mov mov insl scas (bad) (bad) (bad) (bad) js add push cs std imul stc dec and loopne fbld pop mov stos test call insl mov xor push std (bad) pushl (bad) push sbb insb inc add pop (bad) sarl inc cmp decl (bad) lcall int3 dec adc cmp cmpsl movsb xor loop aas push out fidivl pusha (bad) lahf loope daa xor aam leave cmc xchg or or sub jge decl or jno (bad) fisttpl inc inc sbb (bad) ljmp bound sub int or outsl (bad) lret xorl (bad) (bad) inc xor xor imulb xchg gs or fwait dec xchg daa pop jo add int3 mov std (bad) inc mov loop insl xor jo lock insb lea (bad) jb mov call mov popa jnp sbb std sbb lds es aas xor testb loop call sbb inc push xchg enter pop adc mov adc (bad) lcall pop mov add jno outsb push ret push pop es arpl or rcrl lock jb loopne pushl and jo dec mov jae pusha ljmp das scas add xchg repz mov arpl lret fimul clc mov adc jb ja mov xor add mov sahf mov int3 (bad) (bad) decl addl sbb in add xchg mov dec adc es xlat or ds lret sbb cli xchg xchg (bad) xor pop inc pop cmp jecxz push dec add das push cmp pop push or test add cmc add push cs (bad) je jnp call (bad) decl loopne or lret lcall jns (bad) or (bad) (bad) (bad) in in push cmp shll dec icebp xor fwait jae js mov cld pop lods sbb (bad) fild ljmp out dec hlt pop clc sbb (bad) call cld ljmp in cmc into push mov mov mov inc inc (bad) cmp lock push shrl jb je pushf jle jle (bad) (bad) jmp pop ret out loop ljmp pop (bad) loopne iret push outsb aam js mov add (bad) (bad) mov sbbl (bad) (bad) xor and aaa mov add mov lock mov lcall gs dec (bad) jg add sarl dec sbb fs jnp out jmp movsb and pushl jnp stos in mov pop jbe pop (bad) pop push inc es scas lcall (bad) jns ret in fwait inc mov mov adc jne push imul stos lock sub (bad) ljmp dec mov outsb add js je into pop fdivrp sub inc ret clc stos dec popa dec sahf dec stc enter (bad) stc and (bad) (bad) cmp sbbl fs (bad) das clc mov jno shrl and cmpb ljmp ljmp lahf push ret std sbb in add das xlat jl sub sub roll outsb hlt bnd (bad) (bad) out cli push repz test xchg scas dec (bad) ffree insl mov lds (bad) (bad) call inc lods xchg inc les jo push dec movsb pop add jno stos leave lahf jl incb inc pushl inc addr16 push lods xor or sub fistpll repnz and lods mov ret dec (bad) out bound and jb insl test mov jl or or inc out sbb add (bad) ljmp push std sbb xor cld (bad) incl test popf and ret jge lock (bad) aas pop mov sub cmpsb adc (bad) call in mov stc sub shrb cmp jbe inc xor popa jp cmp xchg dec imul mov mov (bad) call cmpsb rcr sbb (bad) sti cs cmp mov in jle out xchg (bad) (bad) lcall and adc out jg pop ret aaa test adc setge pop cld mov pop mov mov js cmp fdivr pop lcall or movsl movb (bad) (bad) push out in jns ljmp cmp mov jo (bad) ja andl outsb adc call std in inc lds dec out inc mov pop std js push repz fldenv popa mov scas cli das iret (bad) js cmc clc mov adc sbb add xchg movsl rcl aam xchg xchg imul mov (bad) popf mov inc add mov mov jg add test mov cmc add xchg mov sub (bad) (bad) lcall hlt (bad) mov (bad) loopne in xor in hlt jle (bad) xor mov (bad) (bad) incl cmp hlt repz push cli jecxz sahf mov (bad) das fs mov (bad) jmp call (bad) pop out cmpl adc pop adc pop cli mov or (bad) pop data16 or cli or jbe fs add ficomp (bad) ljmp cmpsl mov mov das and jbe cmpsb mov mov mov or sub ficompl dec inc pop fcmovnbe aam std (bad) (bad) call jle out or cmpsl add or or pop inc sub cwtl mov mov cmp (bad) jae in mov jg fldl xchg repnz fwait insb mov adc cmp pop fidivl (bad) (bad) jmp cmp push lea pop xorl cmpsl outsb sub jo into scas in (bad) (bad) pushl aaa dec lods (bad) (bad) cmp test push and mov xchg (bad) in mov fcoms sub cmpsl shrl enter or push into cmc xor mov cmp jg (bad) (bad) (bad) pushl loopne popf mov cwtl stos icebp int stos cmc (bad) xchg jp push dec sbb jle mov (bad) (bad) (bad) call int cmp pop adc jmp pop fsubrl fisttpl addr16 xchg or add jp gs jmp dec ds xor das negb mov mov std mov sahf sbb jmp mov clc lods cmp inc adc mov mov cmpsb imul in adc and push iret data16 scas jbe cli (bad) fbld aas pop imul pop pop int mov out xor jg outsl (bad) push pop push cltd xchg jbe addr16 sub faddp popf pushf jnp sbb mov ljmp or add add (bad) in pop js mov cmc jns cwtl fcoms pop mov ljmp pop lret inc (bad) icebp cld sub push aad insb ss lahf cli (bad) (bad) pushl jns adc xchg sub and sub xchg or sub adc xchg xchg ds inc popl jle ficompl jmp rcrb pop popa dec test inc lds ljmp jnp or jmp inc lret jno mov data16 mov orl mov lcall mov adc repz push add cld (bad) clc adc outsl sbb add inc movsb ja and fstp fs (bad) (bad) ljmp push mov dec adc (bad) jne dec aas (bad) mov lahf xchg add add lcall dec inc push cmp das stos push push pusha imul sbb ja and insl loop xor inc adc inc push (bad) ljmp mov jecxz loopne jnp int and lcall sbb jbe push call inc mov seta (bad) (bad) pushl push mov adc fcmovnu mov mov and decl lock cwtl add xlat movsb int3 sbb out jae decb mov repz pop xchg js jb ret ret ret jmp int3 or push (bad) (bad) (bad) lcall or addr16 dec xor lods out ret add popf (bad) (bad) (bad) (bad) cmp hlt inc xor inc inc fisubr xchg cwtl xchg into mov inc aaa imul (bad) (bad) clc jg fnstcw pop and je add loop push cmp stc xchg mov cli (bad) call rolb ljmp mov test (bad) (bad) (bad) call stos fcmovne fisub mov stos cwtl std jno push xor add repnz ds sub (bad) (bad) (bad) aas and inc xchg gs push in pop pop test lret je mov loopne lds pushl cld sti nop cmpsb rolb stos out outsb mov bound adc xchg in and (bad) (bad) mov aad test mov aad fldt lock scas sbb (bad) (bad) jg andl test and inc and pop xchg mov aad cld (bad) jg stc add fiadd leave ret repnz lea jle cltd (bad) jg imul inc addr16 xor (bad) (bad) ljmp loop lods lock lods inc or bound rorb jne ja pushf scas and cmp ret inc mov sbb (bad) jno movl adc push (bad) (bad) dec dec mov push (bad) mov fmull into cmp sub jns mov das mov cmc out pop xchg movsl mov mov (bad) fstpt add jecxz mov ss xor popa movsl adc xchg sbb mov divl sub fimull lret inc inc clc mov dec or push pop cwtl pop sub (bad) jmp xchg cmpsl xor push (bad) cli pop inc or (bad) (bad) mov aas (bad) mov mov and ljmp int dec xchg sar test sahf pop or aad or icebp test (bad) call xor rcr inc adc jecxz mov or mov scas test and imul mov push stos out pop or mov (bad) incl ja push mov xor dec pop gs sub idiv (bad) (bad) out xchg in push mov in xor jne out ss loope pop xchg popa rcr sbb (bad) (bad) (bad) jmp adc loop dec daa jb sti cld jg add lret mov mov or das push jmp (bad) lcall xor mov cli imul fisttp stos push decl popa movsb enter out or cmc (bad) (bad) js call orl sub pop mov pop xchg (bad) (bad) decl repz fistp addr16 loope cmp cmp jae pop mov cmc rorb (bad) (bad) call mov scas xlat inc mov adc rcll test dec fsubrl mov or push add ljmp daa inc xlat pop loope enter (bad) jg fstpl je xchg mov aas mov roll in mov mov mov (bad) (bad) (bad) pushl mov scas pop call xchg iret int stos aas xchg push adc jecxz lods stos js mov cs dec lea stos (bad) cmp mov lock xchg and add insb daa iret sbb cmp or incl cmpsb (bad) rolb into cmpsl hlt adc or (bad) incl mov subl (bad) iret shrb out push mov push std or mov push fld push sahf (bad) jg call and dec adc sbb lret lods dec pusha jge dec cmc adcl loopne xchg outsl (bad) (bad) (bad) call cmpsb pop es jl push adc inc pop dec push lds (bad) ficomp push lcall (bad) (bad) jl test imul mov ss dec inc adc jle xchg jp cmc jnp bound fidiv ds or (bad) decl xor or loope adc mov or sbb into in (bad) (bad) (bad) std xchg (bad) and outsb (bad) lret rol (bad) xor dec loope dec (bad) inc or add les fcoms inc dec mov add (bad) inc push add cmpsb es jns add cmp (bad) mov leave push lods inc shlb adc sub fisub call adc bound ds jb movsb rolb mulb mov pusha int3 mov outsb mov ss mov sarb fildll test or xchg xor rcl leave inc out mov xchg xor xchg mov loope mov stc arpl mov mov adc inc adc xorl adc adc fdivrs cmp mov cwtl movsl std pop icebp ljmp mov out out arpl add mov shlb add fimul test pop push and xchg mov out (bad) (bad) decl mov testb and cmpsb cmp fldt mov lea int sub repnz mov push push test push xor data16 pop (bad) (bad) (bad) inc mov inc sub jg sarl add and sub repnz cmp movsb incl cltd clc mov jb mov in jl in (bad) (bad) call pop cwtl xlat aas dec pop ret xor cmp inc dec lods jecxz out push jo (bad) (bad) (bad) call xchg stc dec jecxz jmp jmpw jecxz scas cwtl std pop faddl dec es inc xchg icebp or fdivl in movsl adc test (bad) (bad) (bad) call or movsb mov jae std push stos in roll push sbb movsl (bad) in cmp mov inc leave mov jle (bad) (bad) (bad) (bad) stc stc adc addr16 insl pop dec icebp scas rorb popa outsb movsb lahf lret inc mov push add (bad) cmp mov std sub int repnz loope outsl push cmp sbb icebp inc insl mov (bad) (bad) (bad) pushl lds xorl mov pop jbe xor pusha ja fdivrl cli pop leave ds mov lods loop daa cwtl outsl pop jne lahf or xor push (bad) add (bad) xchg inc xor add int3 in cmp outsb sbb pusha mov in push ljmp xchg xor js jecxz inc scas std lea movsb and sarl mov push lea mov fnstcw test aas ror jns xchg popa pusha and dec in cmp mov ret sbb (bad) pushl jmp pop mov jl xchg clc cmc jmp or or cli push pop sbb (bad) jmp inc push mov call daa lock sub stos arpl stos inc push push cmpsb (bad) (bad) (bad) fcom xchg out add push cmp xlat lock aas lcall jo push (bad) decl mov popf adc scas repnz test sub push minps (bad) (bad) lcall push add push sti scas aam clc push inc lret jp cmpsl (bad) cmc das jecxz push and fs jmp mov or push lea fbstp cmc loopne out (bad) (bad) push rcl faddp jno mov jmp push (bad) imul cmp outsl adc cmp cmp jns (bad) (bad) ljmp xchg mov ja inc icebp add test xlat add jbe sbb and loope sbb out out clc call lret cli and push aaa enter mov or pop into sbb (bad) lcall sti or (bad) mov mov mov lods inc es (bad) (bad) pushl adc sub mov xbegin or dec div decb jmp mov sub cmp mov fstpt push cmc mov (bad) (bad) inc jecxz test pop repnz xchg mov push dec mov ret icebp dec mov adc push loopne fnstenv (bad) jge pop xor (bad) (bad) lcall cmpsl sbb int3 cmpsb sbb mov mov (bad) xchg iret sub dec cmp jp stos pop sbb (bad) (bad) (bad) (bad) aas mov cmp mov mov and add mov (bad) (bad) (bad) call cs and es or and dec dec and cmpl pop xor mov out ficompl inc inc cmp add mov push cltd iret lods dec mov ja repz (bad) (bad) call (bad) enter and xor (bad) pop push (bad) mov ret inc outsb sub (bad) (bad) (bad) out jns fmuls push dec (bad) in enter inc dec pop pop (bad) jns mov int (bad) (bad) lcall push lea mov hlt arpl int3 popf aas push fldl fbld sub call pushl mov cmp test (bad) (bad) xor inc call out sub (bad) out add mov enter mov mov scas mov insb mov or jg mov aaa push and das pop sbb (bad) ljmp ja in pop dec add insl sbb mov movsb adc je dec (bad) (bad) (bad) (bad) jp cmpsl cmp jmp scas and test je jmp cwtl dec lret jns inc stos mov (bad) (bad) jmp jae (bad) xor mov fwait push mov sub add jge fisubr inc inc mov ljmp xchg rolb pusha push mov ja push fcmovnbe negb adc jno adc into mov lods (bad) xor (bad) (bad) ljmp mov aad lods test push add dec sub adc fs sbb pushl ret clc push sbb xchg cwtl cmpsb fcomip call jge ret ja push iret daa ja push xchg add lahf xchg rolb (bad) (bad) decl int push mov xchg loopne mov cmc xor retw dec inc dec pop sti add call lea inc push roll or mov lock mov xchg nop dec enter dec mov (bad) call lret loopne jno jge iret movsl insl sub or dec add lahf sub (bad) pop (bad) (bad) (bad) (bad) mov xorl fdivrs mov mov dec testb cmp fiaddl push scas cmp mov scas enter mov jnp les and repnz pop repnz cmpsb sbb pop dec mov (bad) ljmp adc sbb mov aaa (bad) (bad) ljmp mov enter jno push jle test xor inc std jmp dec mov pusha out mov (bad) call ljmp or addb adc sti (bad) mov lods (bad) (bad) decl pop jnp das add addb mov pop or pop mov scas lcall (bad) mov mov mov mov mov ljmp loope mov push jg xchg xor cmp ss sar push mov cli cmp mov and and incl sub push shlb inc or jl mov dec mov cld (bad) (bad) call xor jo jae cmp xchg pop fcoms (bad) aad test mov inc mov incl fsubs mov inc shr cld mov aaa mov lret (bad) rol mov xchg clc pop adc push inc aad lock (bad) (bad) (bad) incl cvttps2pi sub (bad) xchg ficomp and rcrb adcb push mov dec bound xchg push mov mov and ja mov cs nop add jl (bad) cmp (bad) (bad) (bad) incl cld js fs xor adc fdivrl pcmpgtb icebp and lds fcmovb ljmp sbb mov pop movsb mul ds mov pushl push (bad) iret iret inc ds jmp push cmp jl sar popf xchg ja lods imul inc mov ds (bad) stos out mov outsl and cmc xor sub cmp (bad) sbb in inc push (bad) fldcw ret lcall (bad) dec inc sbb dec sbb out sbb or scas cmpl sub push cmp mov (bad) (bad) (bad) clc cmc mov insb (bad) mov add xor adc rorb (bad) fstpt imul jmp inc ret mov (bad) lock xchg mov push (bad) inc gs sub mov (bad) jg mov push (bad) (bad) pushl mov jp icebp push outsl xchg cmp fbstp jno mov xlat enter xor (bad) (bad) inc into movsl mov stos rclb (bad) repz bt shll xchg jl sar (bad) adc (bad) (bad) incl xor das cmp inc or push sbb das imul test faddl arpl jno addb (bad) (bad) (bad) call dec sbb xor xor xor cs sti (bad) (bad) clc fadd lahf lods xor (bad) decl das test fisubrl sub test push clc mov mov (bad) (bad) (bad) (bad) cmp push cs stc das icebp lods call add xor mov data16 jge inc rcll sbb (bad) pushl mov sub pop xchg mov mov (bad) (bad) fild inc int jns jo xchg mov or push or (bad) (bad) cmp call mov aad dec aaa pop cmp add cmpsl push lcall roll pop stos and decl jo dec or cli lahf cmc cwtl insb movsb or rclb imul call rclb sbb leavew rolb rcr dec mov (bad) (bad) decl subb adc and or xchg ret imul push std mov stc (bad) mov fldenv inc mov (bad) test mov outsb push push loopne pushl mov mov and cltd cld repz push insb loop (bad) incl mov jnp mov sti gs push xlat lret inc (bad) movsl (bad) (bad) (bad) incl mov mov pop lea mov inc sub sbb cli (bad) out add inc pop mov xchg sahf int3 test pop sub std and or stos sbb lds popf sub stc ja pop pop outsl (bad) fcomip jmp mov rclb pushf add add sarl mov mov mov test pop mov aas pop mov adc subl dec fstps loopne das xchg xchg pop adc lods pop and loop lea popl (bad) (bad) cmp lods idivb test adc fwait xor stos push jg daa dec jne sahf icebp mov inc (bad) jg ljmp icebp adc fdivrl inc and cmp gs pop call inc ret sahf sbb xor in jle scas xchg imul popf lahf or loop and sti stos insb sub movsb cmp int3 adc incl ss push roll loop jbe gs icebp (bad) (bad) (bad) incl mov outsl mov fs scas pop (bad) sub mov out mov incl fmul push push mov xchg pop pop pop (bad) in pusha push dec aam xchg and fwait push iret or int loopne xchg pop jne xchg and add dec mov xor punpcklwd scas jg jne mov mov pop jns and inc add jno inc (bad) (bad) (bad) call lock sub (bad) cltd sar inc xchg (bad) lock cwtl push lock js mov jnp ja sub pop (bad) jmp mov loope dec ljmp inc call mov decl icebp xchg lds mov fstl add iret imul incl or insb loopne inc adc xchg pop (bad) (bad) (bad) pushl cmp adc push inc cli lret or xlat add dec fist test (bad) (bad) ljmp enter dec dec (bad) dec mov pop adc xor repnz movsl cmp (bad) push (bad) in (bad) je dec xchg addr16 ljmp add mov push push (bad) (bad) (bad) (bad) mov push add fbstp mov cmp shrl mov icebp pop add adc out in xchg lock xchg lcall std shrl outsb dec sbb pop jg sbb jle jl mov loop xchg outsb dec cli call mov fsubrs cmp jnp mov test dec in aaa (bad) mov jo mov insl call (bad) (bad) ljmp push imul stos lret jno sbb imul (bad) stc fwait add mov pushl rclb mov fdivl cs incl sbb xor call or mov sub jbe jle adc cmpsb inc in or mov adc sti cmpb outsl loope push xor sti in les fsubr (bad) (bad) (bad) decl inc js sbb and cli inc push out scas cmp sbb out push dec xlat in adc xor jl pop mov decl dec lods mov enter jnp mov (bad) (bad) ds mov pushf adc push mov (bad) rolb xchg (bad) lock push ljmp (bad) mov shl idivl shl ja,pn lret inc or push (bad) lcall sub and push push out cmp push push mov repnz pop orb jbe (bad) (bad) call aaa loope lods sbb fistp sbb shlb rclb aam ljmp push push cmp int pop es mov std (bad) (bad) dec push pop pop push in outsl mov arpl or push pushf dec aas inc in pushf cmp mov and push data16 mov jo mov push test ljmp ds out aas mov xchg mov pop fs lock xor dec (bad) lcall iret xor xor leave mov fist cmp and xchg mov stos sub in inc imul pushl add mov leave mov or (bad) (bad) mov push push icebp pop mov in out cli dec ljmp mov aaa iret insb fnstenv and (bad) (bad) pushl out repnz xchg sbb or popa inc (bad) hlt mov cmc push (bad) dec cmp mov cli sar jecxz lods ss scas add cmp fidivr repnz loop xchg mov jbe fcos (bad) (bad) (bad) jl notl movsl add inc dec mov ljmp or repnz adc (bad) (bad) (bad) ljmp dec das sti outsl std inc fwait dec jnp mov mov (bad) xchg jge addl (bad) ljmp ret lds jo int3 dec push sahf jno stos cmp and or and out push jl popf (bad) (bad) (bad) lcall lahf sti inc shrb sahf loop mov frstor cmp mov in movsb sbb push pop cli and in faddp repz xchg push (bad) fcomip (bad) mov cmp das jmp frndint in jg inc pop jns sbb pop fsubrl (bad) pushl pusha mov add push lahf movsb and call (bad) (bad) (bad) decl insl subl jle ret (bad) cmpsl mov mov dec fs mov lahf push xchg sub or mov push inc sbb inc lods pop xor out mov into and (bad) pop test hlt inc ret out sub out (bad) lcall push and inc jo jp fmull sbb pop dec dec mov jmp (bad) in (bad) mov lret xchg rolb dec in sarb mov iret inc fcomip (bad) (bad) (bad) jne xchg add test ror lahf push dec pop andl das clc mov nop test insl out bound lods dec sbb inc cmc adc cli (bad) (bad) (bad) (bad) jb pusha cwtl ja repz xor mov cld nop fwait adc js outsl daa movsb adc gs push lods orb (bad) call xchg inc (bad) adc or jg bound pop adc insb mov push or in dec (bad) or (bad) dec jp insl out mov sbb fiaddl shrl (bad) (bad) lcall add lgs and in mov and cltd push jg sub insb push sbb (bad) (bad) pushl mov and into mov aas clc addb hlt xor adc jmp inc pushl jne mov js add pop cmp dec jl dec ss negl xchg out bound xor (bad) (bad) (bad) lcall out cwtl jno in iret leave arpl sbb pop jmp repnz sbb adc pop mov daa fucomip push jmp in (bad) into jl lods push lret (bad) (bad) (bad) incl mov push sub testl repnz insl dec and (bad) (bad) (bad) mov push and fs add movsl data16 dec stos call (bad) jmp (bad) (bad) (bad) lcall out inc jo into sti xchg adc xor ret xchg sbb stos xchg rcrl (bad) clc cmp (bad) (bad) (bad) (bad) fdivrs aad and xchg stos (bad) loope imul push mov test mov inc ds shrb mov (bad) call adc xor mov sbb fsubrl sub adc cmp (bad) mov stos pop fisttpl xor pop cmp in out clc push std mov or add push dec dec dec fldt jne sar (bad) (bad) call repz adc test outsl or data16 jb mov sbbl xchg mov inc inc sub and (bad) jmp xchg mov out fs xchg arpl mov or into ds push arpl inc sbb std mov imul out xchg push movsb mov lods pcmpeqb adc lahf and daa lret pop xchg sbb insl inc aas jnp pushl decl rolb xor cld and (bad) (bad) incl into mov mov (bad) jae lret pop pusha stos (bad) cmc test add pop mov mov decl ror cli mov sarb cs pushl cmpsb pop jns and enter scas mov add je (bad) (bad) lcall sahf xor (bad) dec xchg push out data16 mov jae mov xor cmp popf dec pop icebp (bad) pushl fwait mov sub cmp xor (bad) call leave addr16 hlt pusha push out aam dec jb xchg adc pop mov jl pop std ja call pop mov lods adc ds mov js dec scas js inc sahf sub cmpsl les in adcl mov xchg push repnz mov cwtl sbb jmp push stc sbb push xchg pop (bad) push xchg adc xor xrelease mov mov pop das jl fadds jg sub and cmp cli (bad) lcall mov push movsb mov mov mov mov scas mov xchg andb pop fnstcw (bad) jg ljmp aaa and and cmp stos push int3 sub mov imul test les test add mov pop jbe sti rolb sbb (bad) call in fbld and mov or mov xchg add ljmp xor dec fs jmp (bad) dec mov dec out dec es mov scas mov push xor cmpsl dec clc pusha xor (bad) (bad) (bad) out adc inc adc cli cmp mov mov fdivl in pushf pusha ljmp das cwtl jmp scas jle (bad) jo sub mov dec test cwtl or decb lods les lds mov decl adc jne movsb push dec mov adc in int3 test outsl cli (bad) jns fisubl gs xacquire cmp mov out dec jg das mov sahf inc mov enter out dec xor (bad) ljmp les out mov pusha scas imul test (bad) sub ljmp adc add and mov xchg stc push flds xchg push sbb mov je les mov js add mov iret js (bad) xor and daa dec cld out loopne imul pop subb sbb ss fs xchg lock popf jae das loopne,pt dec pop insb pop cmp push imull dec xchg (bad) ss call mov add adc xchg lcall jmp icebp inc sub add pop ds xor jl repz cld pushl (bad) xor bound cmp (bad) in (bad) incl cli sbb jp into ret pop fnstenv jmp fisubr aad test arpl outsb lea pushl loop xchg sub or cmp test sub stos daa xchg sar stos cmc ja adc mov push pusha dec jl (bad) (bad) (bad) (bad) js cmp jmp lret xchg (bad) jp ds mov dec cmp push cld pusha add adc jle push or (bad) iret mov jnp pusha (bad) ljmp pop pop jo adc mov stos enter xor pop xchg pop icebp (bad) (bad) ljmp jne add (bad) movsb mov cmc (bad) mov imull and cli popf iret test loope xchg (bad) incl fistpll cmc mov xchg mov sti mov lret ds (bad) (bad) (bad) (bad) cmp cltd addr16 adc dec loopne dec adc xchg or mov dec scas nop sub pop out enter (bad) (bad) (bad) sub addr16 dec adc pusha pop pusha sbb dec in inc orb mov lods (bad) lcall sbb inc xchg fdivp rcrl sbb aaa std (bad) jg and inc sub std push push aas mov aas push fnstcw lcall insl data16 pop sbb or xchg fimull sbb adc (bad) (bad) (bad) cmp iret mov hlt cmc pop in mov mov pop aas popf mov cs es (bad) call adc outsl cmp fsubr imul push fdiv test imul out dec mov lret (bad) lods loop add data16 sbb or (bad) (bad) pushl fstl pop pop roll test xchg dec lds (bad) or mov std decl test aad cmp (bad) (bad) inc sub xchg nop lret int popa in jns std xchg cmp cld aas int (bad) (bad) dec les nop icebp xchg subb push mov ret sti inc ljmp inc add movsb iret gs mov leave pop xchg pushf adc sbb add lods push dec mov push add mov inc sub aas (bad) (bad) (bad) call pop cmp imul mov gs shlb in imulb (bad) call mov es lcall (bad) (bad) fistpll scas xlat fdivrl mov test push adc sbb cmp inc leave mov movb push sub dec int3 add adc and popf (bad) (bad) (bad) (bad) ds jecxz repz mov add pop mov jns mov ret adc (bad) (bad) (bad) incl fs movsl push xor add dec inc bound push (bad) push push (bad) (bad) (bad) decl lret add fnstenv loope push stos inc mov and and lods cwtl mov mov jmp push jle mov (bad) mov jmp ljmp clc scas out nop xlat clc mov inc push xchg (bad) (bad) (bad) incl in jl push je xchg add lock pop mov bound shrb (bad) (bad) push and ljmp add arpl mov aaa xchg (bad) decl ds inc int3 mov lea pop add mov inc xchg arpl outsl add and jmp movsl add jecxz (bad) (bad) (bad) jp cmpsb or xchg pop mov pop adc add sbb or (bad) (bad) (bad) ljmp jg ficom test dec pop and mov pop xchg inc arpl incl clc adc das or jns lods mov dec (bad) shl pop inc sub (bad) (bad) incl lods aad mov in xchg out lcall int3 mov mov cmp xor jnp in test (bad) mov outsl pop cmpsb decl inc mov lret sahf lret (bad) (bad) (bad) pushl inc insl icebp jle mov mov in cwtl stos pop cmc int jno mov mov pop (bad) (bad) (bad) ljmp js cli test es notb and mov imul xor jg xchg ficompl (bad) (bad) (bad) incl sbb (bad) mov daa rcl lods movsb ret shll sub cmp pop push dec fstps (bad) (bad) ljmp loopne xchg mov arpl inc push fs cs out ds and (bad) (bad) (bad) lcall mov or push cmp xor cmpsb sub jns mov sbb (bad) mov mov mov jae mov sub adc (bad) (bad) jg outsb pop fisubr pop jae test add lret or push push loopne (bad) (bad) (bad) (bad) cmpsb adc sti pop mov jp jecxz (bad) mov stos movsb sub mov call jnp rcl sahf inc fisttp data16 and sbb pop loopne jmp push push movsb fcmovnbe xchg push sbb pop arpl and mov (bad) inc stos cld jle idiv es push dec jl clc add mov lahf les (bad) xchg (bad) call ds scas (bad) dec inc and jmp sahf inc cwtl aaa xor cli (bad) (bad) ljmp inc ret xchg js sub mov js push test pop int3 fmuls out clc inc cld jnp je leave push xchg ja and pop out (bad) (bad) push pusha xchg mov inc sbb (bad) (bad) call or pop push cmp push fidivrl push out sub dec or jg pusha std into pop push inc or testb ds mov mov mov movb test sti sarl (bad) call push xor ja jae out cltd test dec aas add mov cmpsl mov (bad) pushl nop mov cmp test int imul sbb aaa cmp in pop popa sbb ret fisttpl aaa loop mov (bad) jg inc mov scas adc push into movl (bad) fildll mov fwait les sub aad aas (bad) jg (bad) aas sbb xchg xchg ret lods pop push call insl mov mov push or (bad) fidivr inc pop mov or (bad) (bad) decl int inc inc aam add pop imul jmp fildl jne push (bad) (bad) (bad) fist div jo les pop xor lea push je mov xchg in pusha mov (bad) (bad) pushl add fidivrl aam push testb inc and or and or mov scas xchg ret add inc push push test push jo cmp loop rcr sbb mov into call lcall pop xchg mov bt adc or lret mov xor gs leave (bad) (bad) (bad) incl adc jb clc cmp push xchg mov mov jbe push cmc (bad) (bad) incl mov ret out jne sbb lcall fstl (bad) jg pop rorl pop jnp and adc or dec fdivrl (bad) jp (bad) and adc mov xchg jb mov (bad) (bad) (bad) call pop test mov mov mov xor imul pop imul fcoms stos cmp (bad) fucompp addr16 add mov jmp push xchg mov jle adc (bad) (bad) call xchg ds addr16 mov cmp fadd int test insl cmp imul mov mov decl (bad) lcall inc cmp leave or shrl fdivrs (bad) (bad) (bad) (bad) cmp push sbb jno ficompl jle or mov lcall mov (bad) (bad) jmp mov (bad) (bad) test nop (bad) jae jnp scas push xor mov mov cli adc ljmp lods adc dec (bad) (bad) (bad) ljmp test mov inc adc jle and pop leave std fdivs jmp cmp push cli rcrl xchg xlat mov mov sbb pop ret mov into mov pop pop sti into cmc pop xchg xchg and sbb ds xchg mov (bad) (bad) (bad) (bad) fcoms out pusha cmp add lahf pop dec js mov xlat xchg popf mov lret (bad) (bad) (bad) decl xchg ret mov jb aam mov clc cmpsl mov enter jo dec pop jmp hlt and ds test (bad) inc cmc pop jp jp jmp mov insb pop popa sbbl and push arpl popf arpl inc sar (bad) jg cmpb jo imull lea mov dec loopne (bad) jmp push xor stos mov mov xchg push cmp sub (bad) or dec (bad) (bad) call xor out push pop jp out pop and dec mov cmp (bad) popa mov ljmp cli loope pushf and push mov pushf dec pop mov ss or insl mov (bad) mov jno sub pop jecxz add (bad) ljmp stc leave pop jnp mov das inc inc stc push (bad) (bad) mov sbb (bad) lcall repz lcall js loop cmpsl in test stos scas inc test xchg (bad) lcall mov xchg scas rcrl icebp cmpb inc out repnz pushf (bad) (bad) (bad) jmp (bad) fwait imul inc add fs xor cmp popa les mov dec test lret pop pop xchg roll sub dec xchg je jmp les (bad) decl dec mov lcall mov bound xchg stos xchg xorb ret es out inc (bad) (bad) (bad) ljmp xchg out arpl mov movsb mov add sti xchg icebp xchg adc fcomip decl dec mov add jg fist hlt ret imul (bad) (bad) pushl sarb test test sub mov mov push sbb lcall adc mov mov add mov pushf cmpsl sub xchg fcmovne js cs push arpl inc stos push cli adc lcall xor testb mov sbb das adc jnp test jmp (bad) decl xchg cs jns cltd xor xchg cmp or sbb sub sub sub dec dec cli jge mov ret xor (bad) (bad) jmp jo orl xor or mov leave mov fs xchg ja rolb ds (bad) lcall cltd mov js mov push mulb mov cmp dec ret jb mov nop cmc ficompl (bad) (bad) out sbb jp sarl call mov mov (bad) (bad) (bad) call cmpsl (bad) add (bad) mov sbb sarl dec xlat xor adc push arpl (bad) (bad) lcall dec repz cli jns push adc in ss cwtl imul jne mov (bad) push in es jns xchg push xor in lret movsl movsb lods je mov mov inc addr16 pop outsl fisub cli (bad) (bad) (bad) (bad) clc pusha jno mov xchg fild rclb jbe mov jae inc sbb out (bad) (bad) jmp cld and outsl repz data16 push xchg inc outsl das add popf dec icebp push mov add (bad) incl fldt inc push popa jmp add jl (bad) ljmp mov adc mov pop or ret push pop clc test jmp (bad) ljmp jb cmpsb ficoml xchg jne stos pop xchg roll (bad) (bad) (bad) decl sub movsb mov fdiv lock repz xchg inc arpl ljmp loope sbb xor lahf push (bad) (bad) jge pop sub or aas sub insb loope daa adc int3 inc push lahf pop hlt (bad) (bad) (bad) pushl push test loopne,pt mov jae lods jle pop pushl js mov in (bad) (bad) (bad) incl pop push fisubr mov aaa loopne out push dec stos pushf add pusha cld mov ljmp mov data16 mov inc xchg sub sub lock (bad) (bad) ljmp lock add jb jne fcomps aam xchg roll fcmovnbe xchg sbb adc pop loopne arpl int3 fnstsw jnp clc sub add mov xchg pop sub adc jle incl pop xchg cmp jno push (bad) adc cmp xchg outsb nop cmp imul or fbstp lret bound and clc inc popf imul mov fidiv pop push das lcall cwtl dec clc (bad) jmp xor std push shlb gs fisttp mov (bad) clc call dec mov cli inc dec cmp or (bad) (bad) ljmp mov in lock mov xlat sbb jecxz adc mov (bad) dec add out lods xlat pop cmp adc (bad) mov ss jmp xchg (bad) xor fldl (bad) (bad) (bad) cmp loopne jl les or xor nop pop and shll call (bad) jmp mov xor mov (bad) mov sub mov dec inc mov and les push mov mov (bad) (bad) sti add lahf adc cwtl (bad) jb cs inc mov fisub sub clc or sbb mov xor jmp xor (bad) arpl (bad) psadbw mov push aam loop (bad) pushl xor leave out and bound cmp daa jp mov xor mov lds xlat or jg xchg and adc (bad) (bad) (bad) fiaddl xlat xor sub jmp or add jle pop lea cmc call ret repz mov fstpl (bad) decl sti outsb aas int mov leave adc (bad) mov aad in mov faddl repz cmp adc pop lret (bad) jg jl (bad) das imul ljmp mov inc ljmp aas or inc inc je shrb int mov test inc (bad) (bad) mov mov adcl add (bad) pop (bad) cmp insb mov lcall imull mov daa ss into and jmp fcomps pop or decl cli lea or mov iret pop dec jne in pop inc ljmp ss push aam mov xchg dec (bad) jg dec sahf lea enter dec jg ret xchg dec (bad) (bad) (bad) jmp dec push outsl test mull ret in fwait and dec lret or jg pop add pop xor and dec push inc mull add xchg xor cmc add sbb repz jne pop jge (bad) (bad) (bad) jg call adc xor psubsw jp inc inc and lock test (bad) (bad) push out push add bound outsb ret push lret xor xchg repz daa add sahf inc dec std pop sbb fildll mov pop addr16 shlb (bad) (bad) (bad) jmp movsb xlat mov sub mov fcmovu jl jne jb cmc inc stos je lods mov (bad) (bad) (bad) jmp mov loope lret mov add dec pop enter sbb sbb xor dec outsb (bad) (bad) (bad) lcall pop (bad) jbe out or or xor push loop hlt (bad) nop addr16 loop lock mov cli mov sahf repz aaa fwait stos aaa or xchg mov add inc sar paddd shrl dec pop (bad) (bad) cmp lods (bad) hlt dec jns push out push ret into aad (bad) fistpll pop inc mov xchg mov (bad) fwait test rcll rol roll mov mov cmp jno jmp jg fnsave sub cmp das test leave push dec mov sub ds mov scas pop sub in test ret add jge cmpsb jb addl jg mov (bad) dec dec dec or sbb sub test mov sub fdivrp push mov (bad) (bad) (bad) jmp cmpsb cmp jno data16 subl sahf lds gs cmp inc fcmovnb mov insb (bad) (bad) (bad) (bad) sti lods imul cltd stos insb jne in rep lock cli jle cmc sbb jae stos lea jmp inc cmp ljmp pop cli adc mov pop sbb or (bad) (bad) jmp stos pop mov jno sbb pop adc push cmp popa sub ja test add mov incl dec insl movsb jmp xor sbb lcall sub testl push xchg jge or mov push mov arpl call cli sub jle add mov pop (bad) int3 dec sbb negl icebp cmp stos addr16 (bad) (bad) (bad) fisubl es stos adc jecxz call sub leave outsb adc push popf push repz (bad) (bad) incl push mov stos test mov inc jg shrl adc dec int sbb xchg mov incl cld jmp mov adc mov add xor jmp clc (bad) (bad) (bad) mov xchg pop (bad) outsb push inc (bad) or fisttpl rcl pop (bad) incl mov mov ss aam stos cmp (bad) (bad) (bad) ljmp clc (bad) not pop sbb lods orb daa sub mov scas mov (bad) fsts (bad) std inc (bad) lock fldl fildl adc in mov pusha aad lret sbb xchg (bad) (bad) decl bound jle mov cmp add push pop pop rcrl orl gs mov fmuls test jne jns in adcl repz (bad) jmp loopne jo mov sbb add into cli imul push repz dec insb or call cmp xchg xchg cli add or call sub dec in push sti hlt mov fisubrl (bad) ljmp scas push adc cwtl pop icebp add jg jecxz cld xor out dec ds pop push pushf jle in enter ljmp push or fmull cmp dec loop inc je pusha (bad) (bad) (bad) (bad) fstpl pop inc (bad) fnstsw loope mov pop jp or mov and lcall inc inc adc sbb xchg or loope jle push fldcw into inc aad cmp inc pop mov or xor and mov mov inc lods loope sbb pop push mov mov lcall mov iret cli mov (bad) (bad) (bad) (bad) fisubrl test jmp sbb push incl push inc mov cmpsb push xchg out mov ljmp push add aaa stc pop ds ja (bad) (bad) (bad) dec orl ljmp stc xor ficom inc mov cmc inc mov js cli (bad) jg aaa xor fbld popa cmpsl jb fsubl adc pop xor (bad) jmp pop sahf pop ljmp rol mov mov dec mov adc test repnz orb (bad) mov xchg xor (bad) out cli dec jle mov adc icebp hlt sbb addb rol out push decl ss pop popf add xorb iret scas dec test sarl push test add (bad) (bad) (bad) pushl cmp test jle xchg cwtl call (bad) push pop mov addr16 mov lcall inc or repz stos in adc dec fs sbb inc cmpsb arpl mov jge and dec or repnz and and nop add (bad) lcall pop popf push sub fwait les mov pop inc push inc dec dec (bad) (bad) (bad) (bad) fsubl insb (bad) jbe roll pop js outsb popl push adc push cmpsl cwtl adc std dec leave jae xchg repnz push adc (bad) (bad) mov stc mov adc cmp jl mov push lea add (bad) (bad) call inc and pop lret sahf xchg inc int mov cltd icebp nop stos movsl dec pop sub je loopne decl mov mov test mov (bad) decl mov movb outsb fldenv jl (bad) jno popa jae mov add int3 mov (bad) (bad) pushl push (bad) xor nop notb dec fstpt aam nopl inc sbb adc cwtl (bad) (bad) out cli mov and fidivr dec pop lcall mov (bad) (bad) (bad) call fldenv outsb mov add and add lods mov stc (bad) (bad) (bad) ljmp jmp xor mov xor push scas mov ss cmp (bad) pushl fsubrp sti lahf leave sti test xor jns pushf sbb jmp (bad) mov (bad) push fwait and (bad) push cld dec dec in cli push in in push mov cmp dec (bad) mov (bad) push jg mov add (bad) mov or cmp ds ljmp mov pop lahf adcb divb push mov adc es std dec iret sbb lcall rcrl insb add dec (bad) mov push out cmovnp loope dec push imul (bad) decl mov mov mov ds xchg push or jle rcrb lods inc daa (bad) (bad) (bad) decl mov mov mov or arpl mov or xchg jno push (bad) (bad) (bad) call mov adc inc negl stos pop lods or dec add mov pop cwtl out lcall ljmp xor iret adc popf pop push jle lret mov sbb fcomps fstpt push dec or mov (bad) dec pushl lods or rclb sbb call xor aaa cwtl ret dec jbe iret mov push mov testl test gs enter sbb popa pop sbb popf and jle std (bad) mov adc mov lock push sahf mov mov cmpl imul xor xchg pop pop push rcr ja es (bad) (bad) call jae outsb lret pop jg in shrl lret (bad) sbb adc jno popa fcomps jecxz (bad) (bad) (bad) decl mov into cs rorb cli aad (bad) lahf jl adc loope sub das shlb (bad) cmp and cmpsl pop lcall jmp mov ret les dec leave ja cmpsl xor lcall mov xor mov fwait setle inc lret (bad) (bad) (bad) pushl mov cs lods sbb nop push rolb mov lret jns ds sbb mov lret cmp sbb divl sub ds push mov or cmp outsl clc push cs sub add mov pop je mov jne dec (bad) hlt (bad) (bad) call test jbe sub jo pop lock dec daa orb addr16 pusha mov cmp mov sahf add or scas mov incl pop mov mov push stc mov iret adc into adc (bad) ljmp roll fsubr xor sub test fwait stc cli xlat rsm add cld jmp (bad) push fsubrl nop fwait cmp mov jg (bad) (bad) (bad) jg push js addr16 push xchg imul xchg in cmc js and (bad) (bad) (bad) call and mov mov out scas vpmaxub mov clc (bad) incl fwait pop (bad) adc dec inc xor add ja (bad) (bad) incl pop mov push or mov sbbl xlat or sbb insl stos cld (bad) incl add nop rcll or xlat into push icebp aas fldcw (bad) call in nop insb loop mov sbb and mov in add cmp decl icebp pcmpgtb pop sbbb mov jno inc je pop jno addr16 sbb (bad) (bad) pushl adc arpl sub mov push icebp subl push push fcomps stos mov lcall lcall adc es mov xchg clc mov push lret int3 dec stos mov and (bad) (bad) fmulp cmp shr jp fnstsw ss sar incl cmp lock mov sahf and jle std pop cwtl and (bad) (bad) (bad) jmp push outsb fmuls and and jbe pop xchg inc pop daa sub jns pop out (bad) (bad) (bad) (bad) out xor mov (bad) les jbe (bad) pop sahf cli (bad) pop call mov add lcall or test (bad) pushl pop mov cmpl sbb and es incl pop leave int xchg pop mov ja pop add sbb pop cmp (bad) incl or jae cltd jmp sbb negl xchg inc (bad) mov jmp xor mov test test jno into in mov cmp pop mov cmp insl sub inc movb sahf mov cwtl jecxz and outsb sub pop aaa int loope sub mov (bad) cmp mov negl je ja fisttp and and xchg loopne pop sbb loop push ljmp ds or add lret mov xchg clc jno stos cmpsb sar ljmp dec fcompl mov cwtl jmp lock out sahf sti pop or (bad) (bad) (bad) sti lret nop es dec jo daa sub outsl lods std ficom mov in inc push sbb shll sbb add (bad) mov cld dec ret ds test (bad) (bad) push rolb insb lret mov je jae data16 adc (bad) insl shlb sahf pop push xchg mov incl pop shrb popa lahf and insb int cs popf cld incb adc inc cmp jnp xchg cli lcall push ja lcall (bad) dec sahf inc (bad) (bad) call mov mov mov pop ret xchg into cmp fildll ds xchg aaa pusha sarl push pop push pusha lcall add inc (bad) call andl cs inc aas ss xchg and push daa add and sub mov fcomip (bad) jmp push cs jnp mov cmpsb dec pop nop jno mov decl sub popf or jp mov jg outsb out xlat mov ljmp mov in out cmp add sahf sub jne cwtl lret (bad) (bad) (bad) (bad) cmp xor jmp int3 mov inc mov sub outsl add push add dec ds clc (bad) (bad) (bad) dec mov lea out mov dec sub cld sub ja jae sub fcomip jns xchg xchg inc fcmovu rorb mov lods dec adc xlat (bad) and decl or shrb xor icebp cmp test or sub (bad) (bad) (bad) jmp out push fiaddl dec push daa (bad) mov cmp aam and jle andl std lds (bad) arpl addr16 mov lret stos (bad) (bad) (bad) (bad) (bad) jg add sbb cmp mov sahf and fdivr in out pop and fucom cmpsl dec inc (bad) (bad) (bad) ljmp cmc inc and les imul cmp fsubs jno fbld aas adc pop sub outsl sub xor loope (bad) ljmp movsl (bad) iret call fdivr mov in lret movsb dec cmc dec xlat cmp (bad) (bad) call fadd frndint scas mov and cwtl mov adc pop sbb or decl push ds add enter adc dec (bad) cmp fdivr (bad) (bad) jmp (bad) sti xor clc cmpsb add add cld mov loope (bad) (bad) jecxz or movsl inc fs push add je mov (bad) fstpt (bad) (bad) (bad) incl ljmp shrl push lret lea sti or ss push (bad) (bad) (bad) jmp (bad) mov adc dec or iret xchg cltd sub fdivl roll ror (bad) (bad) incl mov pop sbb inc sbb pop sub cmp fisttp (bad) (bad) (bad) dec cli pop push test fstps mov jg popf mov in enter mov push xchg adc jg (bad) ljmp inc cs cmp sbbb push xchg mov notl mov push cmp (bad) (bad) (bad) std out push stos test pop pop and jne movsb pop ss sub rcll ret cld mov jne add outsl cmpsb hlt ret aas jae fimul jle mov or dec lds jmp mov mov clc lock repz enter cmp (bad) incl cmp lods push aam rol imul ljmp incl pop cmp jne jle mov pop imul incb rcrb sub push repz in push mov (bad) (bad) (bad) incl (bad) jl mov ret stos imul cltd into mov test insl lret adc das mov mov mov push pop mov adc add xor xor (bad) sub subl xor (bad) decl cmp or movsl ret push mov push ljmp cltd add jecxz in xchg scas nop mov mov jbe mov mov aas (bad) enter pop jbe mov lds lock add sbb mov push mov pusha aaa dec stos insb test jnp sbb (bad) (bad) (bad) jg aaa movb adc ss mov jg mov and in (bad) (bad) lcall and pop (bad) xor sbb ret outsb mov sub (bad) (bad) (bad) decl ficomp jae mov test insb push cmpsb mov icebp mov sbbl (bad) (bad) mov movsb js test ret ret xchg sbb scas xchg and imul (bad) cmp cmpsl outsl sbb loop stos je mov sbb ret aaa arpl enter (bad) (bad) (bad) call das mov (bad) xchg and mov jne pushf jnp repz sub movsb (bad) lcall psrld cltd mov les inc sub sbb (bad) ljmp in mov xor jl inc mov sbb mov adc lods mov movsb fmul mov cwtl xchg into dec push (bad) (bad) mov or leave loop (bad) xchg ss mov aaa sub cmc aas dec pop (bad) (bad) (bad) call ja fs or sub pop pop dec pusha dec inc test fsts push and (bad) (bad) jmp mov add nop in and or dec orb cld (bad) (bad) lcall test std pop fwait xor and outsb sub imul xor pop mov dec mov cmp inc sub mov int mov (bad) (bad) (bad) (bad) jle std stos sub cmpsl mov ficompl idivb ret push inc rol lock lret (bad) (bad) (bad) push (bad) icebp sbb push mov jo mov inc sbb xor inc inc jmp shll xchg lret gs loop (bad) jg outsb sbb mov inc mov fucomi cmp je adc (bad) (bad) mov xchg bound popa out stc fwait pusha inc jo shrl daa xchg (bad) ljmp mov xchg lahf js cltd notb sahf adc (bad) xor push or xchg and or dec mov loopne xor pop dec xchg sub or mov (bad) (bad) (bad) mov adc push hlt sbb push test mov leave pop std jae (bad) lock in clc lcall rclb xor lcall adc xchg mov inc es adc (bad) mov lret loope (bad) (bad) dec pop dec cmp push push (bad) xchg and push gs sub fildl adcb push jne sbb or jmp rorl jl mov add arpl pushl lcall add (bad) leave jmp inc mov fnop clc (bad) (bad) lcall xorl xchg in or cld fdivrs push mov xchg pop sbb mov mov push dec in loopne aam adcl mov lock ret nop adc (bad) incl inc cld pop dec cmp pop roll mov (bad) push repnz pop lcall (bad) out (bad) inc fadds add xchg mov (bad) decl mov xor sahf dec adc addr16 mov scas push aad stc loope jns (bad) lcall decb xor fistpl ds insl clc sub mov popa loope (bad) fucomip sahf mov or out mov popf movsb idivl lock mov imulb mov sbb mov incl jb mov in xchg pushf cmp or adc test scas mov or dec or add enter scas or cvtps2pi adc add (bad) ja cmp lcall adc (bad) (bad) (bad) call cmp imul mov test jne inc pop mov out or imul inc jbe xor sbbb in and sbb cmc cmp add clc ljmp imul pop aam or pop jl add lds (bad) fisubl add inc xlat or xorl add ss or (bad) stc and fimul ret int lock (bad) jmp ds jae xchg jae dec push je push into rol loope dec dec (bad) int xor (bad) push or fistpl (bad) (bad) lcall push popf das cli (bad) out lcall push or lcall cmp mov jp dec repnz ss shr in stos icebp pushf mov lods loope (bad) call adc xchg jmp pop fstl push (bad) (bad) (bad) decl sahf or jp or inc repnz xchg push std imul repnz dec (bad) hlt (bad) test xchg and dec mov sub fcmovne or push jle pushl hlt lcall fwait or push xchg or pop dec dec les xchg sti loop (bad) jmp adc mov in nop cmp dec (bad) (bad) cmp aas sarb repz mov xorl test loopne cmpl arpl lret imul pusha push scas clc (bad) in mov lcall enter push stc pop xchg mov mov mov (bad) call cld mov pop test jns inc gs adc pushl mov mov insb in inc sahf xchg adc (bad) lcall ds or arpl repnz mov sub pop dec add (bad) (bad) jmp sub leave xchg cmp pop dec mov std rorb data16 pop mov (bad) call mov xor xchg popl dec jg in shrb fdivl push pop fsts fidivr push sbb (bad) or ret push movsb sbb bound add and fcomip call xor inc mov push mov sub pop scas adc add (bad) (bad) (bad) (bad) cmp mov test insb lret ficompl (bad) mov sub (bad) (bad) cli adc incl mov out sbb inc jmp ds imul jl jnp (bad) (bad) call mov jo imul or push out subl pop sub ds repnz cltd ret mov (bad) lret cwtl lcall (bad) incl imul repnz outsb call mov stos cmpsb jl mov xor jb jnp movsl mov and cld test (bad) (bad) inc std and in jns add dec cld rcrl fwait push and in inc adc push jo mov mov cwtl jnp add (bad) jl hlt mov pop mov es add (bad) (bad) (bad) fistp jns repz or lcall sbb ljmp ss or (bad) (bad) (bad) call xchg cmpsb push or loopne mov jb or ret jb aam je cmp dec and or sbb mov dec stos sub push inc inc push pop (bad) (bad) (bad) fcomi adc pop les icebp nop inc jo add test jnp movsl add and in dec sbb (bad) (bad) call fnstcw repz fwait pop nop sti push stos rorb sub adc incl or jo and xor jl pop test push adc shl pop jmp out sub or (bad) (bad) (bad) pushl jne sarb (bad) out mov loope outsb insl popf mov mov pop icebp rorb mov aad in push lcall jge bound xor popf (bad) cmpsb inc decl mov cld std pop into add fadds (bad) (bad) (bad) cmp call lds cwtl lds mov ss daa xlat sbb cmp or (bad) (bad) (bad) or xchg add or test sub std (bad) (bad) jg repz xchg arpl in mov push in cs push out add stos or (bad) (bad) out jo into (bad) (bad) xchg xchg int jb fcoms in aad add (bad) (bad) decl xchg pop inc xchg push push bnd je sbb sub lock dec jmp (bad) jg cmc jg adc mov fdivp ja cmp dec imulb jbe (bad) (bad) ljmp mov out mov mov movsl popf jg cmp jecxz dec icebp das push add out cld (bad) (bad) pushl int push xchg pop loope pop negl inc imull (bad) ljmp fcom das adc or lcall xlat int3 xchg out mov adc or (bad) xor (bad) jg ljmp sbb test icebp fidivrl cmpsb (bad) fidiv aaa dec (bad) (bad) (bad) decl or inc mov lcall push pushl rclb push mov mov (bad) lcall shrb mov test add cmpsl dec arpl jmp push lods and addr16 inc movsl inc call (bad) lcall mov cs mov jge push jne,pt bswap fidivr (bad) (bad) decl adc lret decb jmp sub enter push (bad) mov popf xchg loope inc daa dec test cwtl mov xchg mov (bad) mov xchg pop pop loopne dec cld or lcall lock push lcall lock ljmp mov aam cmp add (bad) pushl sbb mov mov lret xor lret mov lods xor jg pop jbe aam push loopne aad sahf pop mov xor scas ds cmpsl std (bad) (bad) jmp in inc rorl outsb in jecxz les mov jp dec lods jns dec cmp (bad) (bad) pushl imul push push xchg mov or mov sahf inc (bad) sbb pop ret sar in movsb loope ljmp mov decl mov jmp mov sbb fild add add sahf xchg ja ja add (bad) inc icebp bound sub jp dec cmp push xor mov push jmp movsl fstpl (bad) fistpll loopne mov mov mov dec sahf out popf test jae int enter ds jg pop cmc mov (bad) out orl xchg xchg bound stos pop enter (bad) push mov xchg incl lahf mov popf jb xorl jl rcll divb mov push jb mov out shr in test (bad) mov scas cld and push add loopne cmp mov jns jne repz out (bad) (bad) (bad) out and push dec fstpt cmp (bad) sbb clc sbb stos cmc sar insl ret outsl push sbb (bad) (bad) (bad) fistl in adc dec push mov ds sbb rolb adc cld dec sub (bad) (bad) lcall push cld push (bad) mov add cmpsb cmp push jl daa arpl loop (bad) (bad) (bad) push and mov icebp pop cmp mov fnsave sub (bad) fistl aaa lods jecxz jae (bad) xchg pop and push lods repnz (bad) (bad) (bad) fidivr jbe in mov cltd jne and dec insb add data16 inc jns push inc std mov (bad) aas cmpsl xor xor in pop pop insb cmp mov jmp movb (bad) (bad) (bad) (bad) jp,pt cs push add jmp rorb addb push push jp (bad) pop sbb (bad) (bad) incl fs ja dec sahf mov dec arpl fwait push pushl daa mov daa mov (bad) (bad) pushl mov aad pop sub mov sub jmp push dec ljmp cmp add jnp lock push mov adc std (bad) (bad) dec mov sbb dec push mov dec inc into ljmp pop mov (bad) repz lock cmp (bad) (bad) call push push sbb xchg popf add and sub ss aad push pop adc pushl shl xchg mov xchg test push xor (bad) jmp or jle jno cmc xchg idiv mov lret sti outsb jle sbb (bad) (bad) (bad) out dec xchg mov sub fiadd mov cmp xor test mov (bad) (bad) jmp mov dec sbb adc mov inc xchg or popa mov push and mov adc pusha sarb pop cmc inc fisubr mov adc sbbl xchg (bad) insl out pop pop jmp shrb cmc mov dec out rcrb adc (bad) (bad) incl mov cmpsl fldt xor add push jle jae push adc and inc movsl mov adc decl jle jo sti jo cmp xor lock sahf cmove cmc and roll (bad) (bad) jns cmc dec xor test shrb sbb sbb daa lds fbld push and lods jno aas jp jnp pop enter (bad) (bad) (bad) (bad) jp xlat addr16 mov dec cmp cli scas data16 stos and push fmuls inc jg adc jmp and arpl (bad) (bad) (bad) ljmp adc push push mov icebp imul sub aaa notb xor in mov ljmp call mov jge lahf pop and mov dec sbb mov fidiv (bad) (bad) (bad) (bad) jmp add pusha ds clc cmp scas push shrb mov fwait (bad) gs shrl (bad) (bad) (bad) lcall loop arpl fbld mov mov cmc mov nop cmp mov (bad) dec insb sbbl icebp lock cmp aad push sti xchg cmp mov xor mov (bad) (bad) call cs scas test cmp stos inc mov add push addr16 fisttp jecxz in pop pop in imulb aad xchg push and xchg sar (bad) incl push adc mov adc dec mov sbb or out jnp das lods dec test hlt cmpsl and inc ds scas pop xchg and sub (bad) (bad) (bad) decl cmp (bad) xor xchg adc shlb pop pop (bad) lods pushf (bad) fild sbb mov pop leave pop popa (bad) (bad) (bad) (bad) mov icebp add mov add jecxz in add arpl push adc call fisubrl xor imul jg jg mov lahf mov (bad) dec incl dec mov outsl xor leave xor sbb pop cmp mov pop aam pop out inc lea fsubl jae popa icebp push add fdivrp imul mov daa xorl sub (bad) (bad) (bad) ljmp push inc push and inc (bad) icebp dec sbb loop iret dec fbstp mov testl (bad) (bad) ds popf inc mov hlt rolb (bad) mov push xchg stc pop and xchg pop adc ds pop dec add mov sub iret xor aaa jbe push (bad) (bad) (bad) decl in orl outsl fs fimul adc push jmp pop fsub mov dec xchg mov or sub and adc or cmpsb jb fsubs ficom jle movsl and lcall (bad) incl pusha mov std xlat jbe push fwait push popf adc add shr incl lock out and stos jne and std ljmp clc aaa dec mov outsb mov scas jb push jp adc clc loop push mov jg and mov sub adc push and lret in pop mov ds decl jecxz pop mov and mov fnstsw sbb cmpsl outsb arpl jp xor into js les cmpl mov mov decb enter and sahf push sar (bad) (bad) incl jae (bad) lods jg clc clc xor out sub jns mov sub mov popf in sub sbb and cmp xchg cmp (bad) movsl add (bad) (bad) (bad) out jbe,pt jno dec fildll push sbb xchg mov adc push insl fisttp pushl stos adc movsb mov or movsb xchg lret (bad) jg mov pop pop stos pop mov nop add (bad) (bad) lcall call (bad) and sub pop mov dec out mov cmc addl adc jb lret mov (bad) out ljmp fwait arpl dec xchg mov lcall sahf inc (bad) (bad) (bad) mov sbbb andb add jg shrl packuswb adc mov sub out pop repnz push movsb hlt lret or mov rcr (bad) (bad) pushl lods sub dec dec mov cmpsl in xchg or add (bad) pushl fcomps sub nop in aam pop insl test (bad) (bad) call (bad) dec pop dec push call mov push dec xchg adc lea sarb (bad) pushl dec je iret fistpll (bad) push xchg inc jb pop mov mov mov movsl scas test xor (bad) incl mov jns jno jp xor nop xchg jg hlt inc xor ljmp jecxz inc and lods xor jb (bad) lcall dec rcll push movb (bad) mov dec js inc xor (bad) (bad) (bad) ljmp nop insl in pop mov cli shl inc and mov jno repnz les sahf push in fcompp (bad) (bad) (bad) (bad) fdivs jae imul jb cmpsb adc dec pop gs fidivrl mov ljmp mov xchg xor push and mov adc sbb call mov xchg cmpsb in adc and es jge pop (bad) ljmp sarl dec aaa and and jl int imul clc mov imul xor les add push push (bad) (bad) (bad) incl test and sub push cmp insl push int3 iret mov jnp cli mov cli sbb (bad) fildll ds inc aam (bad) inc icebp movsl add imul (bad) decl fidivrl mov xorl lcall ret out ret mov mov lcall sbb jle xchg (bad) (bad) (bad) push xchg push pop fistpll pop lahf dec jae mov cmp popa pushl jns les or ljmp subb sbb (bad) mov (bad) jmp mov mov xorb sub pusha repnz xor hlt bound cmp (bad) (bad) ljmp ds adc aas imul push jp xor cltd test cmp xchg popa std incl mov or sahf (bad) (bad) (bad) (bad) cmp xchg xor es inc js (bad) push loop add movsb xchg into xor dec mov (bad) pushl pop xchg pusha dec xchg shlb sarb repnz mov rorb jbe sbb loopne add movsb inc pop pusha stc aaa xchg aam push adc ds lea aaa add imul add wrmsr (bad) popw (bad) fcomip decl jns xchg mov hlt pop leave out inc call mov sbb adc js inc mov imul sbb cmp mov xchg pop dec lcall (bad) mov cmc decl arpl adc dec test ds cmp inc es sub push pop lock ljmp dec dec stos addr16 inc movsb sbb xchg xchg sarb sti scas inc xchg (bad) (bad) call dec ljmp mov stc lcall fdivs adc fwait cmp insl (bad) (bad) (bad) (bad) mov mov fsub test inc dec lret imul sub decb popa hlt mov add mov sub inc int xchg sbb mov (bad) fwait (bad) incl dec aad scas and test push in pop int jg sbb push outsb mov iret lock cmp popf lds das cli stos data16 lret mov movsb push (bad) popa loope (bad) jmp cmp (bad) pop cmp cmc sub push fsubl push push ss (bad) (bad) mov mov sub xchg and daa xchg mov loopw pop repnz ljmp (bad) pop addr16 add xchg mov xlat jle xor test jns outsb add dec (bad) (bad) (bad) lcall es or mov add icebp xor xor dec (bad) (bad) ljmp lods outsl stos push adc pop add cltd jl jb pop pop sbbl loop fsubl ds cmp and mov insb mov (bad) ljmp jecxz cmp fadds inc das divb stc mov adc clc cwtl lea inc mov addb mov cmp adc jns xor in bound out sub (bad) jp push cltd pop mov mov (bad) (bad) (bad) (bad) dec and movsb cmp push out xlat jbe mov xor cmp sti mov mov (bad) jmp lea jp push addr16 fldl xlat cmp adc aaa (bad) (bad) (bad) (bad) mov ss scas lods add fcomp (bad) push push jns rcrl cli and push (bad) decl (bad) push in imul push fnstcw fs sub sub add decl rep fs push inc jno,pt popf xchg and (bad) (bad) (bad) jge adc pop or mov ja data16 andl sbb jbe (bad) (bad) (bad) ljmp sahf movsb jge out sbb cmp jno pop push mov add cmpsb fisubrl cli xor sbb sub js sti (bad) (bad) call sti jp pushf into jno push push out shll mov sub cmpsl cmp and scas (bad) decl jmp push sub sar (bad) cmp addl arpl out and stos jle ss pop sbb mov xchg mov xor sbb mov inc int3 add (bad) (bad) jg subb ss test and ljmp es xchg push in iret (bad) (bad) (bad) fbstp mov push and int3 and test popa xchg rcll fsin in (bad) pushl push fs inc mov pop test pop xchg fucomip inc push rcll add jg divb inc fucomi cld sub sbb pop mov dec sub mov and std incl push sarl push loop xor cmp (bad) (bad) call cmc cmc sbb hlt ret cmpsl aaa inc cmpsl fadds ja (bad) mov and cmp insb outsl rcl (bad) fsubl loop mov call pushf enter in aam mov xchg jle mov (bad) (bad) (bad) mov xlat mov sub push int adc inc push (bad) jmp xlat sbb (bad) (bad) lcall push push aaa fidiv mov sub jne arpl dec loop xchg (bad) adc mov imul inc ds scas push fs loopne enter jnp add (bad) (bad) (bad) incl mov imul cmp fidiv shll or call jmp aas adc jns mov mov ds and jecxz outsl je (bad) call jle sub xchg xchg out and mov xchg dec and aad sbb sub mov repnz (bad) push fildll mov adc arpl sbb xchg mov or push adc mov (bad) (bad) dec and sbb jbe rcll aaa ret in inc pop sub call jne movb (bad) (bad) (bad) jmp out daa mov test pop loop mov jbe out jbe mov (bad) (bad) call cmp lret dec jl jecxz mov add push fwait jle or pop addr16 call cmp jnp (bad) fiadd push aad lods xor ret movsl jge mov (bad) mov xchg mov adc in sub mov sbb (bad) xor nop sub cld (bad) (bad) pushl outsb dec scas (bad) dec mov sahf movsl xchg fsub lahf test sbb xchg out sbb (bad) pushl clc pop mov into push pop mov cli add cld popa ss or pop xor (bad) (bad) (bad) jmp xchg outsl cwtl fwait or pop push rolb test test and mov call cmp fwait and fild imul imul outsl or pushl sub (bad) out and mov push mov add push pop sub push int3 jne jmp (bad) (bad) pushl sbb in mov loopne nop nop hlt dec mov mov jl and adc push (bad) (bad) (bad) lcall cwtl daa sbb cmc stos in or out sub cmp movsb pop sahf (bad) (bad) cld in xchg mov (bad) (bad) inc or insb incb xchg dec mov adc cmp (bad) pop (bad) (bad) (bad) call cltd (bad) fisubr mov ds js cli lcall lcall gs mov push jp sbb (bad) pushl cld jle rcrb jl xor mov lock sbb jbe cs clc lcall (bad) mov or push jmp (bad) (bad) (bad) pushl xchg xor int mov cmp pop dec sarl mov sub add sub pop (bad) (bad) fist mov pop jle loop dec enter (bad) fistpll dec idivb fsub int adc lea sbb stos mov das mov push mov pop incl mov sbb js cmp es outsl out push or mov xor adc (bad) mov fwait lret in or (bad) in mov dec mov jecxz (bad) (bad) (bad) (bad) ljmp xchg mov xchg adc loope repnz adc das inc and (bad) jmp loopne jno push fwait pop xchg gs iret lods sub jecxz fdivl (bad) and flds es aad mov jae aam add je (bad) pushl insl mov sti fdivr int3 xchg mul mov (bad) (bad) (bad) jmp stc pop fisttpl loope rolb jecxz std or call leave cli cwtl cmp jbe mov xor (bad) (bad) pushl adc jge not inc fidiv xchg or gs inc pop xor inc mov (bad) incl cmp cmp lods lods sar fwait adcl mov pinsrw mov mov (bad) (bad) mov rorb mov (bad) dec push pop enter add hlt movsl je (bad) push (bad) mov mov test lret mov ss inc loop cmp arpl lods xchg adc (bad) (bad) fild sarb mov fcmovu adc mov (bad) incl sti add push pop (bad) xchg jecxz cmp adc and xchg sub je and dec sub nop (bad) and out and push lock (bad) mov cmp mov adc inc nop inc mov or decl dec stc adc add fisttp jl jp or loope insb (bad) (bad) (bad) ljmp pop imul jmp xchg test cltd xor or jp pushf adc inc inc insl (bad) (bad) (bad) (bad) inc adc jle xchg dec pop inc dec aaa mov mov mov or call mov mov dec fstl pop data16 mov sbb fisubr adc xor repz (bad) (bad) stc outsb das mov jns movsb sub insl cwtl push or (bad) (bad) mov xor or push outsl (bad) (bad) (bad) pushl lcall mov mov xchg in adc mov aaa in (bad) (bad) (bad) dec cmp in jnp mov stos (bad) inc pop xchg push add cld jg enter daa lea cmp push mov outsl cli xlat mov inc (bad) pushw jle mov mov shlb (bad) (bad) decl mov in adc ja mov movsb cmpsb shlb sub mov push (bad) (bad) (bad) fildll jmp (bad) mov jg cld lds lods sub cmp cmpb ret push add enter jg inc cld pusha or mov mov (bad) scas cli pushl xchg outsb mov jb ficoml jno cwtl es sub loope cmp pop imul mov ds leave jo push ljmp and sbbl xchg mull repz xchg jnp dec enter and cltd rcll pop jecxz and popa aam (bad) (bad) out cli out pop mov xchg inc test sub addr16 test arpl (bad) (bad) lcall sbb imul (bad) xor cmpsl (bad) pop cltd cltd xchg std pop and je cltd gs (bad) (bad) (bad) decl (bad) xor outsb mov add add daa adc and idiv nop fst (bad) (bad) push sub fnop popa jmp divb in pop jle mov (bad) pop pop pop mov mov enter and (bad) inc inc mov cwtl rcl pop les incl cld aaa sub or pop movsb jns icebp xchg sub add add (bad) (bad) incl add icebp repnz or insl push data16 cmpsl pop ret sub arpl (bad) (bad) fcmovnbe cmp mov jnp add ljmp enter cmp pop or out popf addr16 xor popa and (bad) (bad) (bad) in pop iret mov adc mov out mov xor xchg fnstsw pop (bad) (bad) (bad) mov add movsw adc popf mov jmp jg pop leave sub add sbb fxch call (bad) adc ret cmc scas ds push adc mov stos dec insl jo sbb pop inc sbb add imul adc fldenv (bad) mov sbb call (bad) das dec negl cmp push push add jg mov lods (bad) pushf notl (bad) mov (bad) (bad) fild lods inc jecxz fnstsw lods out jae cmp inc iret lds inc (bad) decl inc cmp mov add pop cmp (bad) (bad) lcall sahf rorb stos sub xchg shlb iret push (bad) mov inc dec xchg inc (bad) sub out outsl loopne (bad) pushl sarl cli pop cmp inc mov pop jl xchg inc mov and xchg and call adc enter sbb movl call jns mov arpl inc jo jmp clc (bad) incl adc sbb or ret mov (bad) add xlat sahf xor mov push addl test jmp test cmp push mov ds aas push jmp push cmp pop jnp (bad) (bad) (bad) lcall sub jae jp mov test inc out int3 cwtl cmp sub mov pop loopne call nop or jl (bad) jge mov mov ret xchg imul (bad) call loop jg (bad) (bad) xchg fbld or out and or cwtl (bad) (bad) (bad) call and out inc (bad) jge inc pop mov clc (bad) (bad) push imul fwait fs lea mov jno (bad) std daa jmp mov jmp ficoml mov jno jbe (bad) (bad) (bad) incl test je shrb mov mov movsb push aad adc xor push out cli (bad) call jb (bad) push pop add cmpsb ja fistp push out cli (bad) pushl les bound and mov jecxz bound (bad) (bad) cmp xorb in rclb sarb cld lods xor test in jbe andl sub sarl movsl test cli (bad) out ss pop hlt sti and out sbb cmp mov push pop pushl std das sub mov mov xchg pop push pop cmpsb mov lcall xor mov xchg dec aad lds mov cmpl jle (bad) (bad) (bad) pushl lret xchg mov xchg std dec cli orb outsl xchg les out push (bad) lret jp stos (bad) and dec (bad) jg (bad) fcoml pop scas rep pop idivb mov ja inc popf fcomi and cmp push loope mov sub js mov xor push rcrb push (bad) (bad) fcomip and mov adc pushf or shrb ljmp clc movsb lods sti or mov (bad) (bad) (bad) (bad) sahf push int3 stos loope in and mov push jno pop pop xchg (bad) pop cli cmp aaa jne loop dec xor xchg jle les scas test fmull (bad) decl xlat cmp or inc ss mov pusha mov (bad) jg mov out bound mov daa dec mov mov fwait mov or sbb adc jg je mov mov add xchg test pop outsl ds dec into out aaa adc inc inc and scas scas mov lock (bad) mul mov pop ds mov mov in mov xchg sahf xor (bad) (bad) (bad) (bad) mov ljmp sub push jge or cmc add push (bad) (bad) (bad) (bad) mov in and in mov jns jle into xor icebp mov or ljmp div dec cmp lcall lret and mov (bad) push fidiv inc rcll inc nop shll push fldl2e dec and mov test std (bad) (bad) (bad) (bad) fisubl xor cltd adc bound add dec ror cmp sub push std in mov pusha icebp mov and in inc stc fiaddl push jb mov (bad) mov mov dec shrl lds insb mov jge cwtl cltd mov (bad) (bad) pushl in sub push dec sub std dec xchg pushf xchg pop pop out into push cmp bound daa (bad) mov push jne dec (bad) xchg inc f2xm1 pop fimull and cld jmp loopne jb popa pusha ds mov (bad) jns cmc lock fidivrl pop pusha call mov push fcompl (bad) (bad) pushl cmp outsb cmp lods stc jp addps mov lods iret sbb repz cli sbb movsb xchg (bad) (bad) (bad) cmp (bad) sub (bad) xchg pop push call jle pusha leave ds mov lret rcrb fidiv sub lret add lods dec repnz scas das (bad) (bad) incl sub in mov jmp (bad) lahf mov (bad) (bad) (bad) incl adc rcr mov arpl test outsb mov and add (bad) (bad) call sti xor xor popl xchg push jge test sbb add (bad) aaa add mov stc (bad) (bad) call sahf cmp insl and rol sbb mov inc push push mov loop orl (bad) (bad) ljmp (bad) xchg out add mov xor sbb insb and pop dec je sti iret sbb and sar (bad) (bad) jmp pushl adc jl mov and nop xchg add jg and pop cmp mov icebp pop int imul std inc test fcmovnu out pop sbb xchg sbb add es jge push push out mov pop (bad) (bad) (bad) decl adc mov push jns mov mov mov popa dec inc xchg xchg mov (bad) (bad) mov sahf mov hlt xor out ds and mov (bad) or (bad) (bad) decl aad mov pop jmp mov outsb sbb hlt mov js pop jp inc pop xor movsb stos or mov jg xor inc pop loop ret xchg imul (bad) (bad) (bad) jmp fwait cmpsb mov xchg clc shll ret test dec popf das mov adc add mov incl push jnp cmp xchg push not rcrb push or fcmovb int inc or fnstsw jle mov add (bad) (bad) (bad) incl (bad) stos jge push lds arpl mov pusha ljmp or std jmp mov lock jg mov orl pushl pop mov (bad) std sub arpl inc push inc dec je sbb test or pop in xor (bad) (bad) out test in or imul les cmc mov (bad) jmp sbb pushf hlt arpl jo jnp cli icebp out movsb fistp aad (bad) dec sbb push push pop push sbb sbb add nop andl dec xor shl sar outsl xchg repz adc sub mov psubw int3 xchg mov and xor jg and mov loop mov xchg xorb fist xor inc sbb jg insb std jb fsubr mov dec inc mov dec jmp add ds stos nop arpl (bad) (bad) call or push arpl out sbb cmp inc repnz jbe sub sbb icebp (bad) call jmp xchg dec lret mov cmc clc mov call lcall loop push pop hlt outsb in xchg fs dec rcll (bad) (bad) (bad) decl movsl cmpsb sbb and push pop and fsubr push call dec hlt mov (bad) jmp mov sahf adc lods pusha cld idivb xchg ds pop inc push adc fwait jbe dec stos mov std xor add (bad) (bad) (bad) (bad) ljmp fs dec fimul sub lea add cmp jnp adc jno out fcos (bad) (bad) call push aaa outsb or sub adc ret mov div test push cmp (bad) (bad) cmp mov pushf inc hlt sbb push int inc ret pop dec (bad) mov pop andb nop mov jge dec add sti push fisubr ljmp dec or lcall pop fidiv lahf xorl push in (bad) (bad) mov loopne or and testl mov mov nop iret das mov sub (bad) (bad) jmp add jmp es sti int3 sti jne js,pn stos dec jb aaa loope mov fs mov jecxz push loope add fnstcw push push and mov sbb dec (bad) (bad) (bad) jmp push inc hlt mov test mov jae and sbb push fimull int3 dec pop push mov lret cmp adc jge xorb out sahf loopne stos xlat jmp pop lods insl mov mov and (bad) inc repnz mov call out xlat pop jno scas xor aam jge out pop cmc (bad) pushl bound nop ficom push lahf cmp sbb mov int3 out jnp sub (bad) (bad) (bad) out mov (bad) push adc dec and adc fwait push dec outsl popl imul mov cmp (bad) (bad) incl cmp daa jecxz lods mov push pop lret rorl xchg pop add jno mov and (bad) (bad) decl mov dec imul iret inc jle,pt in inc mov ds aaa bound ficomp rcl sub mov cmc lds or sub mov jp (bad) sbb sti repz repnz outsb (bad) (bad) (bad) call arpl and jbe sub mov lock sbb iret leave data16 lahf mov clc or in test push icebp fwait sbb xlat int pop add arpl lods std jb ror push jmp mov adc dec (bad) loope dec add sbb jmp adc outsl cli inc and ja adc fwait jl and cmp sub push ljmp sub sbb fisub cli mov jmp mov sbb add fcoms jecxz je jne inc ljmp mov mov dec jle xchg loope or pop icebp lds mov xlat enter (bad) incl ds cmp ljmp shlb fs cwtl xor inc loop std (bad) (bad) lcall out mov shlb xor mov or jge mov lahf into ljmp or pusha movsl or sub xor fs jo cld lods (bad) mov (bad) fdivl push jmp dec popf movsl pop and inc test pop (bad) ret jne cld int insb mov pop sub (bad) (bad) (bad) (bad) cmp loop cmc xor pop xchg daa or aas push xrstor call sbb pushl cmp lods dec mov or pop imulb mov imul lahf stos xchg push jno (bad) fcomip inc loop inc jbe in cmpsb mov pop dec add lds xor rcl pop into or ror shr mov (bad) (bad) call inc push dec cmp or int lret push addr16 sahf dec jns inc and mov scas sub xchg ret scas cmp or xlat (bad) (bad) incl ror iret adc sbb xchg inc sub mov (bad) (bad) (bad) jg or dec push push inc imul int3 push imull rcll int arpl (bad) (bad) (bad) call ss je adc movsb cmp dec or jp int3 push or pop jb (bad) (bad) lcall sbb (bad) or cmp cmp jo sbb pop (bad) (bad) jg push dec cmpsl (bad) ljmp and bound mov jmp push std lea xor daa lret pop mov test xchg mov das cmc mov lcall jb out push stos sub push popf push iret dec jb daa jp out (bad) pop (bad) (bad) (bad) call (bad) testl insl dec in cmp call pop nop ljmp cld (bad) call aad jb aaa dec aad sub out fldl lods push outsb inc xor mov (bad) dec add jbe inc inc rcll xchg int3 jl or test mov enter (bad) pop dec scas (bad) mov and into mov out loope mov insb in loope or mov xor push out cmp fidivl sub clc (bad) mov rorb lret (bad) incl jmp sbb addr16 pop pop jns sbb iret loopne jo jns jb je rcr decl leave mov dec aas outsb test mov pop mov sub and (bad) ljmp idivb fdivrp outsl pop mov and mov push xor rcrb lcall or jmp fcomps cmp adc dec mov arpl gs push sub sub std (bad) pushl dec and pop sbb inc inc int ss mov fstpl call pusha mov and test cmp je outsl lret arpl je cmc cmp sub fsubl les push xor loope (bad) mov out scas sub imul xchg je or mov pushl sub and cmp movsb sbb fnstcw sbb cltd insb pop je test movsb xchg xchg push cmp push mov xchg (bad) (bad) or mov ds aad mov (bad) (bad) call dec lea loope pop ret lea test popa xor cmp and mov ret (bad) (bad) jg loopne inc cli inc xchg test int3 push ror jo cli movsb (bad) pushl ds sub testb in into mov clc ficompl (bad) (bad) inc data16 inc aas sub dec inc clc xchg js bound clc xor sub xchg (bad) sbb push in push mov inc pop mov xchg movsl pop cld (bad) (bad) jnp (bad) pop or (bad) sti out (bad) enter cwtl cwtl jecxz push cmp or (bad) (bad) call mov mov xchg dec ja dec adc pop aaa repz pop in add add cmp scas movsl stos clc (bad) (bad) incl xchg cmp leave push xor mov jmp mov (bad) ljmp and xchg mov sahf sti xchg fnsave imul cmp cmpsl sub cmp (bad) in push gs cli or ljmp fnstsw roll pop inc aam dec sahf test xor jmp cmp (bad) jl sbb insl mov sbb stc jns mov mov fdiv push jecxz inc (bad) stos lcall stos repnz adc and mov inc (bad) (bad) decl sbb cld pop inc fsts jg (bad) fistpl test sub (bad) call mov fbld faddl xor cmpb pop (bad) insl outsl popf and jmp (bad) in jae (bad) xlat mov incl loope test repnz adc (bad) (bad) (bad) mov scas push dec and in or pushf scas stos popl aas imul jp push (bad) (bad) nop fwait mov decl adc jns add pop xchg ja inc jl fadd mov (bad) (bad) (bad) cmp xchg push mov dec (bad) pop sbb stos cmp dec push fidivrl jge and mov lods adc jo and and (bad) jnp sub xchg pop imul (bad) decl ss clc pop xchg jl daa fiaddl fs repz leave sar adc (bad) fbld dec push in cmc push jle int3 insb (bad) rcr enter dec mov xor push leave (bad) (bad) (bad) (bad) lcall aam (bad) push mov mov shll loope fiaddl cli mov mov pop fbld or xchg je (bad) fildll aad andb mov push dec std sub mov test (bad) call xchg iret mov add dec mov (bad) fisubrl sub mov jae (bad) (bad) (bad) clc outsb sub outsl and imul into jb cmpsb ret pop les lcall into push xchg insl jo cmpb adc (bad) shlb push cmpsb imul in mov popf push or push ljmp cmp lcall push shrw jae rol adc lret push test je cltd jp push xchg (bad) (bad) (bad) incl push rolb fnstenv data16 cmp pop cmp pop mov icebp insb jmp (bad) pushl cmp sbb jmp mov imul rcr fcmovne aas lret dec cltd mov (bad) ljmp daa push aam xchg sbbb xor sub jecxz iret dec lock push in or int mov cmp (bad) (bad) lcall mov lea xchg pop xchg mov lcall mov test jae or jmp (bad) (bad) jle fdivrl xor (bad) xor and cmp jb jge jp in (bad) (bad) (bad) cld in popl xor cmp mov push lock xchg nop outsb xchg pop push les mov fdivr popf sar xchg sahf fcomps add mov stos mov and pop dec or mov repnz (bad) (bad) call mov adc inc xor stos out ss scas jo adc push inc scas adc add (bad) pushl data16 outsb push lea subl or sub (bad) (bad) (bad) ljmp mov shr xchg je xchg push cmp stos lcall movsb popa dec adc (bad) (bad) lcall sub or or xchg xchg push cmp rcll (bad) (bad) jmp sbb inc andl mov inc pop nop jecxz repz xchg adc dec or jo dec add int3 add push ljmp ljmp ret in shrb xchg lret mov lret insb iret (bad) mov or lret insb (bad) mov pushf out cmp ds test (bad) (bad) (bad) (bad) sti sti pop stc add je lret jl mov iret fbstp mov and sbb ljmp stos jle ss bound clc out cmp stos cmp pop mov sbb adc lcall nop mov mov out int3 jae (bad) (bad) (bad) (bad) stc sbb add scas (bad) mov je mov in mov cmp push add xor popa push (bad) (bad) (bad) (bad) cmp repnz cltd and adc mov cmpsb pop jle insb outsb inc (bad) sar mov movsb (bad) (bad) (bad) (bad) (bad) mov out and pop push mov xlat insb adc pop out cmp lcall ja and mov cld mov insl push inc lcall or push out inc push xor call xor fnstsw xorb cmp mov (bad) (bad) lcall fistp in imul push and iret dec imul nop mov incl cld pushl add movsb cmp cmpsb pop insb inc cmpsb (bad) negl cli test mov xchg xchg test mov (bad) decl xchg sbb les aaa sbb jecxz sti xor (bad) and fldt loopne add push lcall and stos push mov fsubs (bad) call mov addr16 jl push push push push jecxz adc mov sbb jbe xor js (bad) (bad) dec lcall xchg imul into lods pop adc push inc cs xchg aas push rorl pop push xor iretw push (bad) (bad) decl jo movsb stos hlt imul or add ljmp fcomps (bad) or incl bound movsl xchg (bad) jne push cmp es lret ret pop (bad) pushl cmp add jl je loope iret pop pop movsl in popa stos jecxz les ds jg add or sti les xchg sbb ss cmp sbb (bad) xchg (bad) (bad) (bad) call iret pop jb adc fmuls xchg mov push mov mov fistp add mov decb lock pop movsl cmp lea dec add mov dec cmp rolb xchg add ljmp cltd xchg mov (bad) fistpll add xlat aam es mov sahf mov ja faddl pop cltd iret insb mov pop pushl es mov mov lcall dec fnstsw pop pop and cmpsb push xchg (bad) push mov test stos push adc inc jmp leave mov inc mov jl mov loop scas jb push push xchg fcmovne iret mov sub add nop sarl lcall adc mov pop cmpsb dec xlat sub dec pop (bad) (bad) (bad) pushl xchg sub outsb pop mov test loope and pop jg (bad) call popa test into insb xchg hlt sbb stos sub incl fmul stos lret insl xchg loopne nop pop pushf jecxz jp mov (bad) call arpl lahf push jg dec in test call (bad) (bad) decl aam push in sbbb popa add inc pop fwait sub mov cli (bad) mov jmp xchg aas pop cltd push dec mov orl insb cmc mov rcrb add lcall or call sub (bad) in (bad) mov std ja jo cmpsb std das bound shrl inc and loopne mov aam cli (bad) (bad) decl out (bad) or popa cmpsb aaa lcall icebp faddl mov test scas popf hlt jg das sbbb and js (bad) out inc leave fisub jp (bad) decl in addr16 push add fisttpl (bad) ljmp rcrb mov (bad) int je rcrl iret jbe rcr repnz (bad) (bad) jmp push jmp loop nop fucomi in jo addr16 mov or in cli (bad) jmp fwait sar adc fisub jmp sbb dec add jg dec sahf push pop mov xorl or or jg inc popf or aam nop xchg xor int xor int3 aas add fdiv mov pop (bad) in into ficoml push and fistpll scas invd add mov leave sub int3 outsl loope push add pop es cmp push adc decl clc int3 fwait ljmp mov (bad) (bad) (bad) ljmp repz inc out or out dec and dec xchg fistpll pusha jns ljmp test or dec or (bad) (bad) (bad) (bad) mov outsl xor mov ja mov mov pop out mov sar (bad) push stos cli out lcall fiadd lock sbb jl ljmp nop/reserved ss mov jl xor (bad) (bad) (bad) lcall adc movsb or inc nop stos push mov lods idivl push int xor mov cwtl lds loopne bound push ds push lock call jecxz enter call cmp (bad) shufps (bad) mov adc mov cmc pop in push mov (bad) (bad) call std or (bad) jecxz imul pop fnstcw pushf inc out and pop cmpsl cld (bad) (bad) decl dec sbb push (bad) jge popa inc push aaa mov arpl cld loopne sbb push fdivr jg or and stc jae andl xchg (bad) (bad) mov sarb or mov cmpsl mov xor inc mov fcmovu loop in sub (bad) icebp mov cmp ljmp jb pop sbb gs int3 ja ljmp fmul imul test push ljmp test popa jp adc mov mov repnz js (bad) (bad) (bad) incl test sbbl insl jne push je xlat addr16 dec push mov rorb ja fdivs repz aam iret aas jmp dec sbb sub adc mov clc (bad) (bad) pushl jb mov or popa fidivr enter in or sbb inc push ds (bad) lcall push xchg loopne stos out int3 fcoml ljmp stc mov push pop add mov clc push or repnz iret and stc xorl jle (bad) fiaddl xchg or (bad) in inc xchg pop and push inc lahf mov out pop mov scas adc call ss aam push cmp ret (bad) lret pop es cltd repz (bad) call ret mov mov pop fmuls cli lret (bad) inc loop jg dec add push (bad) out je dec test mov cmp xchg push pushl sahf jmp jmp decl mov push icebp outsl rcrl (bad) lcall stc xor or andl push sbb ja mov in (bad) (bad) jmp sub adc scas cwtl ret (bad) mov sarb mov stc xor call cs mov addr16 adc pusha mov (bad) dec pop pushf push (bad) (bad) (bad) call xor notl daa lds inc call pop cmp sub notl insb mov inc sbb mov cmp push pop sub push pop mov adc jns inc (bad) jg or loope pop int3 aaa (bad) stc (bad) (bad) (bad) dec xchg pop push andl rcrb lods mov out xlat (bad) xchg es (bad) (bad) pushl ja xacquire mov push cmpsb pop nop imul or cmp (bad) (bad) lcall inc addr16 cmp aaa (bad) pushl bound out pop mov js in (bad) decl inc std jne adc mov xchg ror loopne (bad) jbe xlat jmp daa and shll xchg inc in imul mov (bad) (bad) (bad) jmp pop into shrb inc sub mov mov hlt insb int3 add (bad) fadds (bad) (bad) (bad) fildll ret imul xchg jp xchg sub add mov (bad) jmp sti cmp jp,pn add addr16 mov adc mov push stc mov jg cmc orb in mov fxch pop mov adc mov ljmp (bad) rol insb (bad) mov jmp ds (bad) (bad) jg aam cmp ds or inc (bad) sbb es xchg in lds xchg jae push (bad) (bad) (bad) cli lods cs pop dec jns or pop movsb out ss lods add call mov pop int3 in adcb je adc (bad) (bad) (bad) incl out sub (bad) push imul fdivs sahf fldcw mov jno test jmp fdivrs mov mov ret popl aas test das (bad) push inc inc and fs aam adc (bad) (bad) pushl (bad) dec sub out push aam pop push dec inc push sub mov lods and fiaddl (bad) decl loopne enter or daa das pop imul xor xchg dec fldl mov (bad) incl push sub sub fcmovnbe cmp mov in jle (bad) (bad) (bad) (bad) in fisubl jg inc insb data16 xchg (bad) cli lret lcall dec out int3 push stc mov scas or decl lret popa mov mov mov outsb adc jne in sti (bad) (bad) dec and sbb clc mov pop mov clc xor adc xlat (bad) rclb lahf notl xchg cld pushf xchg or xlat mov xor xorl inc out stos lock pop js mov rcr hlt (bad) decl mov push call inc rcl cmpsl fmull xchg (bad) out add push movsb sub data16 (bad) push fldenv dec mov adc decl inc (bad) scas xchg jae fdivl lcall call jg cmpl pop xchg push sahf rorb xchg push test push scas push xchg xchg lock xor jmp pop gs sahf mov out pop mov in xor pop lock mov sahf rcrl bound cwtl and (bad) (bad) (bad) pushl xchg aad stc imul mov pop xchg pop inc sub adc sahf ret nop les fwait dec push test xchg ret xchg out popf (bad) ljmp sub ljmp (bad) js aaa stc (bad) cmp sbbb je das push cmp subb and or popa mov stos xor fisub mov mov into pop lock jge popf (bad) (bad) (bad) call std fcomp rep dec mov inc movsb imul out dec push adc sti out ds (bad) (bad) jg or out jl jo push xor clc in mov cmp (bad) (bad) mov movsl add popl mov mov (bad) jge pop (bad) ds (bad) mov out enter mov (bad) movsb cld dec mov bound (bad) call or fst sahf loopne or inc movsl and and lcall pop (bad) (bad) jg sbb in lods xorb inc sbb or fisttp xchg ds adc push (bad) (bad) (bad) (bad) mov cltd mov push pop fs dec cld dec arpl mov out cmp dec adc (bad) lcall in dec ret stos mov mov fwait (bad) mov xorl mov (bad) mov pop push or enter push movsl and bnd xor xchg inc (bad) (bad) (bad) decl jnp mov mov inc or xor (bad) pusha mov leave xchg push (bad) jg incl and adc pop repz in outsb stos stos mov int3 bound popa dec cmp mov pusha sarl sbb int3 (bad) (bad) (bad) mov jg rcrb jg dec mov out stos ds pusha lods lea decl pop test lret scas adc pop (bad) adc pusha sbb mov std push insb dec scas scas ds fimull (bad) (bad) decl mov mov mov lret pop (bad) mov bound inc test mov (bad) decl cs rcl popf xchg int sub loope sub (bad) (bad) call pop (bad) aas arpl ret or dec pop (bad) std into (bad) (bad) (bad) jg or daa fwait dec inc mov lcall pop xchg mov xchg dec ficom jg lret inc cltd push and inc sub xor or xor mov mov popa ds sbb cmpsl stc and nop dec (bad) (bad) (bad) decl xchg and mov jno adc mov mov sti fistl stc sub xchg inc pop pop (bad) mov cmp and add mov (bad) (bad) lcall cmpsb lock add ss xchg (bad) push (bad) roll mov adc mov hlt gs (bad) (bad) (bad) jns in and nop xchg cmp shll inc addr16 imul (bad) (bad) (bad) jmp inc adc roll adc pop insl xchg pop out pop add or mov (bad) or xchg cmp jecxz pop mov jge stc fildll addl mov and sbb call cwtl loop sub push clc call inc jecxz (bad) cmp xchg imul std push into fisttpll (bad) decl mov pop sbb mov and (bad) (bad) decl or lock in fisubrl les lods sub pop ja sub in mov loope (bad) (bad) incl fist lods jl std ja ficomp rcll adc or mov in (bad) pushl cld test inc outsb and sbb test mov sbb cmpsb and mov jle nop push ja xchg imul sbb or (bad) (bad) call xchg sti stc jns push mov mov imul stos sti shlb mov sbb cmpsb push pop jbe push fiaddl aaa aas jno xchg (bad) jne cs fidiv pushf (bad) (bad) (bad) jmp imul mov (bad) addr16 out jmp xor (bad) (bad) (bad) (bad) fildll shrl (bad) lock sbb mov iret in pushf and lods xor or pop mov (bad) lcall and mov and stc mov jae lea movsb pop mov jmp scas xchg fildll pop cmp jne out daa push or xor (bad) mov dec jp aam inc fs cmp jle push cmc cltd sbb (bad) (bad) (bad) js mov jg cmpsb inc (bad) out lock idivb adc ja xor dec ds push xor lea hlt decl sahf scas sbb mov (bad) (bad) cmp scas cmp mov stc pop mov cmpsb leave pop push dec pop inc or js inc fdivr (bad) mov cmc jno insb and in cmp bound rclb cmp xchg jg inc cld lcall dec fidivl test (bad) (bad) (bad) decl or and push ljmp xchg pop fsubrl and jnp lock incl pop idivb stc cltd push bound inc call (bad) (bad) dec xor loope sub in and pop or movsb out sahf sub subl ljmp cld xchg les adc cmpsl mov lods xorl (bad) (bad) decl jg insb (bad) sbb std repz icebp push neg pop push and sub push (bad) jns sub mov nop dec fbld pop mov ret inc fbstp (bad) (bad) (bad) ljmp (bad) repnz or mov lods rolb cmp imull pop aam (bad) jg jne bound lods xor test lcall movnti xchg mov (bad) (bad) cmp xor (bad) adc addl jp sbb (bad) pushl and lods pushf cltd cmp dec icebp pop sub iret dec fs lcall dec nop popf stos sub ljmp or dec clc mov mov in pop hlt incl sahf xchg insb and sub std leave pushf jmp xor sbb ljmp ret scas jnp out lds cmp cmp (bad) ljmp fistp (bad) pop or adc std fs (bad) cli mov mov mov push cld pop fisub not test mov adc cmp (bad) incl add out cmp (bad) mov sbb ss inc sub xchg pushl aad sarl push and fimul jp inc jg dec or scas cli mov pop add adc (bad) ja jbe enter dec adc (bad) incl iret cmpsl xorl push sarb push mov mov sub ljmp loope addb call rorl push repnz lcall sti leave (bad) (bad) (bad) ljmp push (bad) fistp lods pop inc xchg iret sub fmuls mov mov xchg outsb outsb (bad) mov add push leave dec call test movsb ficompl in std mov outsl sarb (bad) (bad) fcomip jb test fisubl jnp mov pop pop in ret movsl add cli ljmp mov adc adc (bad) aas push add sbb sbb ljmp out dec sbb adc mov sti fisttpl dec fsubrl mov (bad) jg dec mov ja xchg sahf es jle adc dec (bad) (bad) (bad) pushl or mov imul mov fsubs push sub cmpsb (bad) (bad) (bad) (bad) out xor clc arpl push shr cs xchg jbe aas rcrl in mov sbb std bound decl pop dec inc mov mov pop repz jg dec rclb ljmp cmp jmp (bad) (bad) lcall addb jmp push (bad) lods push push jge and ficomp or mov push insb call lcall lahf mov push lds jnp jbe lcall (bad) (bad) (bad) call xlat mov sub lods shr (bad) lods mov pusha sub ss test cmpsb xor jmp rorl xchg pop (bad) cmp jae sub loop dec mov out (bad) ljmp ds insb rcrl or daa int3 subb lds push popf sub es adc push gs lahf (bad) dec lock mov cmpsb pop sub sub add stc scas mov and lret (bad) in dec fs popf rolb mov incl push inc hlt fldl2e push pop xchg adc mov stos xchg xor mov stc xor subl cld lahf negb rcll inc sbb (bad) push jge lret dec sahf movsl sub test inc (bad) lock (bad) call cld cld add les js std sbb repz (bad) mov sbb inc imul ljmp mov cmc xchg jne sub (bad) mov adc push jbe mov xor or ret shrb out out xchg sbb pop mov inc inc mov dec iret repz cld adc sahf ret incl movsb (bad) xchg subl rcll push jae sbb (bad) loope sbb fwait loope inc (bad) (bad) (bad) decl jp data16 adc dec push mov (bad) sub push rolb push push sarb call jle adc mov fwait xor lds xchg dec cld insl shr pusha decl lock mov out leave xchg jo iret leave jl mov push push mov jecxz jle pop (bad) dec adc (bad) (bad) (bad) incl add fxch or add inc xor jne dec sbb (bad) (bad) jmp xchg test sbb xlat ret ret es ds xor mov idivl data16 ret ljmp je cmpsl (bad) cli rorb aad jl xor lret mov jecxz jne (bad) (bad) (bad) ljmp movsb mov ds mov add jl flds loopne decl (bad) stos mov inc lret dec adc jle out push push adc or loope inc mov (bad) fs mov mov (bad) (bad) cmp dec dec fldenv outsl fisubr out cmp pop xchg into xchg bound fist lcall and imul push add mov (bad) dec out cmp (bad) lret add mov (bad) (bad) call shl stos dec mov mov mov dec add es mov hlt or mov xor or insb ret sbb pop jg in (bad) pushl aad and xchg mov shrl or out cs in (bad) incl push outsb add sbb xchg js or dec (bad) (bad) decl test (bad) cmp test adc mov ret popf (bad) (bad) (bad) incl sbb cmpsl aad mov jmp repz jnp cmpsl sub xor sub call mov sbb pop hlt in push into sar push std pushl jge insl push in add add jae pop cmp jl and and or cmp fisub cmpsl xchg es pusha push (bad) incl xor (bad) lahf aaa jmp jbe mov fbld lcall in lea out rcll or (bad) (bad) call inc setge xchg (bad) fidivr pushf inc lock push mov aas mov sar (bad) out fmul lret pushf sbb cmp adc cmp pop xabort lock or pop sub out jle mov aad cmpsb mov scas add inc mov adc xchg lods adc xchg cmpl jp imul mov data16 lcall inc ds mov push push jecxz int (bad) gs (bad) (bad) (bad) (bad) cli dec sahf leave clc lret (bad) add sub mov lods and subl push xlat push jb xchg cld pop sub test xor push daa add (bad) call sbb xchg sahf cmp mov xor icebp in mov and (bad) (bad) (bad) ljmp dec into movsl in fisub mov iret aam xchg clc cmp test ljmp fnstsw inc aam gs cmp ret pusha jo loop js outsl fdiv scas jecxz jecxz jmp fisub dec xchg dec mov mov xor (bad) decl xor xchg and sbb mov xor lea (bad) out notl jnp cmp outsl adc mov (bad) inc adc jae (bad) (bad) (bad) out jb cwtl mov cld (bad) sbb inc stos out or orb subb jb adc or je or mov jecxz pop cmc jmp jae mov sub lcall xchg movsl push aam mov fcomip lcall nop add lcall pop dec mov mov mov sar lock mov cmp call cmp or xchg jo xchg and clc (bad) (bad) call jg xor mov mov ja ss push mov jne jle xchg stos (bad) (bad) cmp add ret mov add enter xor lcall mov mov inc (bad) fwait sbb mov (bad) ja test ljmp pusha loopne push out pop xor add lahf ret mov push or mov loop pop mov (bad) in sbb bound out mov addr16 (bad) (bad) decl outsl cmp (bad) push mov push push mov xor fldenv dec sar imul sub fnstsw lods inc mov mov (bad) jl add stc dec dec adc out test add in add gs pop (bad) (bad) (bad) call (bad) pop or xchg popf pop mov and push mov mov mov out xor nop sbb (bad) (bad) pushl in lret jecxz insb cli mov (bad) sbb xorb scas cli (bad) call xor and xor (bad) pop fcoml test mov fsubrp divb xor shl lds loop push mov and hlt (bad) pushl cwtl loop das mul xchg xchg into outsl dec ss push incl inc scas jo xchg mov bound cmp xchg mov inc (bad) or cmp in loop ret mov ljmp ds adc add pop xchg fs dec ljmp movsb int mov enter xchg cmp pop ficompl dec or dec es arpl insl mov (bad) lcall xlat pop sbb dec (bad) movsl fstpl cmc mov mov cwtl mov push ljmp (bad) cmp icebp or mov outsl into popf pop rcll ljmp ds sub cmc dec (bad) dec lods test xor insb sbb push loopne adc (bad) ljmp inc jno jmp rcrb pop cmp dec lcall sbb inc (bad) (bad) (bad) (bad) call xchg dec xchg xor pop mov (bad) std dec sbb ljmp xor into push arpl (bad) (bad) (bad) lcall scas jnp add imul pop scas pop push xchg inc aaa (bad) mov mov jmp aas sbb dec mov aam ljmp or jns sub movsb (bad) (bad) (bad) pushl pusha push add sub lret jns scas adc sub mov (bad) (bad) (bad) lcall sub movsb push sbb ljmp inc (bad) movsb int3 clc mov call dec clc decl or test (bad) (bad) incl xor int ljmp pop lahf push in lods je (bad) pop cmp dec sub lahf jecxz lods stos jb call (bad) call mov cmc insb push and pop or cld add xlat xor loop fisttpll rcrb lea lods mov (bad) pop pop rcrb adc (bad) (bad) out ds cltd jl addr16 lods mov push dec push es idivb sbb outsb add pop mov add sti xchg sub data16 fldl2t mov pop out push lods mov outsl jg mov inc jno,pt xor insb pop fucomi xchg (bad) pushl inc mov loop jb fbld push dec mov mov jge aaa pop jae (bad) (bad) (bad) lcall sbb pop fadd or pusha fsubl aam addr16 xchg int3 out iret inc fdivr mov pushl insb inc loope add xor int push ljmp pop les push icebp fbld les std jb inc pop bound xor cmp push in pop sub pop jge fcmove push cwtl push int push clc add or dec sarl push sub lods xchg inc inc (bad) (bad) js xor mov stc in pop icebp mov ds cli add (bad) cli js dec test push sbb adc decb mov ds hlt imul mov pop mov scas dec imul sub sub mov add fist out push (bad) das fdivrs mov and cmc xchg (bad) (bad) (bad) call push push mov inc dec repnz inc lds movsl mov stos push add push ret mov (bad) decl jb arpl xchg imul jl pop cmp inc dec and dec (bad) (bad) jg sub mov and test xor mov lock mov xchg mov ja jbe mov loope cltd lahf movntq out jmp stos (bad) lcall mov clc popf aam lock or mov outsb aaa in adc mov jl push sbb pop mov inc int adc sub (bad) hlt pop push mov decl bound inc add decl (bad) bound mov sub (bad) (bad) (bad) decl push push call lods jnp jbe push mov and push outsl pop lret ja sarb std jp (bad) cmp adc (bad) pushl mov jle cmp mov ds or aad mov shrb (bad) (bad) (bad) (bad) stc xor addr16 inc lods adcl dec xchg push ret rcr add popf push lods cwtl mov xor (bad) decl pop idiv xchg cmp jbe ret in imul daa xor fisttp mov sbb push ljmp push ret mov push in daa adc sbb mov fcomip (bad) mov loope inc out lea or mov push mov outsb rcl dec cmp or dec add sub mov jle clc (bad) pushl xor jle mov repz enter fldt notl in mov mov xor inc in in and xor sti fiadd pop popa jecxz popf jns fs lods dec dec (bad) mov mov ret ficom cmp pop mov cmp or jp mov or mov fnstsw or (bad) pushl loopne mov inc or jae pop mov sbb sub (bad) fisttp jmp (bad) jg loope and cmc xchg and in inc outsb xor shlb dec clc and (bad) (bad) (bad) call stos ds jle xchg pop cmp lea dec scas loop fstl mov (bad) lcall jg lret adc jmp out (bad) mov cli incl ds fisttpll inc inc cmp jns and pushf adc (bad) (bad) jmp lahf stc inc mov push outsb stos enter arpl clc inc jecxz xchg dec dec movb je (bad) (bad) (bad) fdivrl shll pop mov stos or jb in aaa pop dec or daa mov ljmp pop inc sub mov outsl push pop push jbe inc adc push sbb mov mov push adc sub jo and jne mov cmpsb xchg pusha cld call xchg movsb out xchg jo mov fs ds scas add popa cwtl out movsl aas jno pop push xor scas fldenv loop (bad) call xchg shrl aam push decb imul push inc add jg insb cld pop sbb test mov gs (bad) (bad) ljmp cmpsb xchg jbe aas sbb fistpl scas sub cmc mov sbb adc (bad) (bad) fildl ret (bad) lock rclb jns mov adc push mov call andl clc dec stos ja (bad) lods inc mov in (bad) (bad) (bad) mov push sbb inc xchg stos bound scas xchg shrl pop add test call std sbb das movsl test inc data16 lods sbb lcall xchg mov (bad) (bad) (bad) decl dec dec push mov jnp adcl sub ljmp lock insb add call pop bnd in dec push mov pop cmc (bad) call push cmp pop jnp xorl dec fcmove sbb lret clc (bad) incl test stc mov lret roll outsb cmp jbe pop lock and cmp into movb (bad) (bad) incl inc mov insb and repz jl cli jg iret inc int sahf sbb fwait (bad) aaa into add mov or xchg mov cmova push or mov and adc cld (bad) (bad) fimul inc mov inc mov ljmp nop push (bad) (bad) jg sub inc les pop icebp arpl std nop daa pop in cwtl (bad) push ljmp (bad) dec mov roll sub sub dec sbb pop or push gs fs scas lock (bad) (bad) decl mov and in add push repnz sub push xor repz pop add sbb mov mov jnp push leave cltd mov jg es (bad) ljmp mov and insl mov sub add xchg cld mov (bad) jg (bad) std inc daa dec movsl rorb mov and fucomp jbe adc xchg clc (bad) call pop shll jne rcrb mov (bad) test std lcall pop (bad) push aam add dec clc repnz inc negb cld lea pop es rolb (bad) xchg xchg cmp mov fwait mov lahf test pushl std xor push jl call and fisttp xchg and jb stos (bad) mov xchg in cmp iret out (bad) (bad) lcall dec leave int cld cs aaa and pop sub call lret xchg sbb inc push fldt and mov add push or push jmp or xchg ja decl mov lcall xchg jecxz push ret xor (bad) inc sbb incl je mov cmp je subl (bad) jle push xor call or test addr16 xchg ror addr16 cmp outsl mov scas dec loope fidivr sahf (bad) cmpsb (bad) (bad) (bad) (bad) (bad) sbb xchg cmp push cmp lea inc or and shll jg dec mov (bad) pushl xchg pop cmc cwtl test add gs sbb outsb ds out les jae outsb dec pop mov pop sub xchg int push inc or bound (bad) (bad) jmp mov aad push bound xchg mov (bad) sub inc xor mov pop hlt (bad) call dec cmp in xchg add adc movsl xchg divb jmp cmp xchg (bad) (bad) (bad) (bad) mov dec sbb fldl jne int3 xchg jb pop inc outsl jg call aam fcmovnbe cmp or sub xchg in dec jno ss cmp pushl hlt rorl hlt sti xor push mov mov jg fidivr jbe (bad) ljmp aad mov inc jno jo fimull mov mov icebp sbb or sbb pop pop pop insb xchg les cltd (bad) (bad) (bad) push inc cmp mov rcl fidivr cmpb rclb ret sub arpl (bad) (bad) lcall insb mov pop aad mov jno dec pop fsubrs pop in xor mov (bad) incl xlat (bad) mov in mov fcoml shrb pop ret ljmp mov stc and lea stos mov add call std pop insl (bad) xor ljmp push fcmovnu sbb add decl jmp test inc add push xchg andl jbe jns out and add (bad) (bad) pushl jl clc sahf lods insb xchg push push int outsb sbb jbe data16 iret daa (bad) fimull jns adc (bad) decl shr pop push pop loop cwtl pop daa in out push cmpsl xor cmc lcall sub lret inc cld xlat hlt sbbl (bad) (bad) call ret dec xor mov xchg cmpb aas (bad) dec addr16 mov dec lods pop repnz int3 ljmp inc mov ret imul daa out jmp xor (bad) (bad) jmp push fisttpl int (bad) ljmp scas jg pop add rclb xchg mov (bad) (bad) (bad) decb js push dec fdiv xchg arpl sbb call sub call fcomip or loopne mov pop int3 mov sub pop scas adcl (bad) jnp cmp dec push mov jle movsl ds mov (bad) (bad) ljmp out in leave pop rcl (bad) (bad) sbb adc sbb sbb ljmp cli lahf sub push dec out es in inc jo mov ret xchg dec mov mov (bad) decl lret pop sbb (bad) sbb in (bad) call sarb pop adc and dec fsub jp sahf (bad) (bad) (bad) incl sbb test add (bad) shll push je jecxz add dec dec mov (bad) (bad) push cmp push sbb add into inc mov cmp cmpsl fstps stos and stc mov add aam (bad) decl out push scas jnp (bad) fsts xor or enter leave pop into sub (bad) pushl lret mov outsb push das fnstenv mov (bad) lcall dec jg lret mov add push jae icebp loop mov mov mov scas movsl mov push int xlat inc jle frstpm(287 leave pop mov mov incl loopne pop lea jmp bound mov lcall test pop xchg addb fwait ja inc sbb nop mov sbb aaa test sub je gs or xchg sub lods (bad) (bad) cmp pop (bad) cmc hlt lea jl ljmp xchg mov pop add loope aas jnp les sbb (bad) (bad) mov mov stc sbb mov (bad) fisub loope imulb cli and cli (bad) pushl pop push pop pop cmp stos mov fnsave add (bad) (bad) lcall sahf stos push aam (bad) outsl or mov flds adc mov push jl (bad) ljmp clc stos test push loop cmpsl arpl test xor push mov fs subb data16 cmc adc pop scas inc (bad) mov xchg out push jns iret mov mov mov and pop add ja fwait push std mov jle enter repz dec jne jp push loop leave ret out fistl push push fdivp adc xchg cmpsb (bad) test cmc pop mov dec jb push dec decl lock jge pop outsl add xchg fmull inc cmp loopne push outsl nop and (bad) (bad) call mov jmp push or xor jb sbb cmp imul outsb in scas xchg (bad) jmp sbb lods adc loop mov and xchg jns mov mulb sarl xchg add ljmp or les mov cmp lds (bad) (bad) (bad) cmp mov push lods inc cmc push sti mov pushf and sub adc (bad) dec sub inc xchg cmp (bad) ljmp jno jle pop rcrb pop adc call movq (bad) (bad) (bad) pushl data16 into mov mov stos sub pop jg imul mov inc out test das cli mov hlt sbb sbb mov into icebp mov inc int (bad) lcall fucomip (bad) fcomip decl sbb xchg sbb adc bound sub dec lods mov jecxz icebp jle js pop movsl fnstsw xlat (bad) (bad) (bad) push dec (bad) loop jge icebp adcb and je dec ja sub or (bad) (bad) (bad) (bad) fsts xor negb and aam push mov xor adc (bad) (bad) (bad) jmp int3 mov or mov jbe mov insb mov inc sti (bad) (bad) incl cmp movsl dec aas push inc or cmp adc fwait xchg pop inc cmpsl pop adc inc std add add test mov aaa dec shrl fcomps daa add jl mov negl add push scas mov and mov int3 gs mov pop push ja (bad) lock inc adc std push sbb add sbb mov inc (bad) dec aam xchg xlat push inc mov or cmp incl in iret sbb pop jl imulb jbe xor (bad) lahf jp (bad) (bad) (bad) decl pop and nop dec mov outsb xchg addr16 mov hlt inc fdivrs lret mov jo lret fldt jmp outsb or fnstsw or mov push (bad) mov sar push fs stc mov cmc (bad) ljmp sub xchg add adc cltd xchg mov xchg xor hlt cs hlt or mov aad adc push adc (bad) (bad) (bad) call movsl les jle pop ret psllw popa and popa divl adc (bad) call clc or jmp xchg scas adc call jg,pt xor data16 adc fadd loope std dec mov pop xor (bad) pushl mov xor js aas loopne mov std sub xor lret (bad) (bad) lcall aas mov xor sahf out xchg cmp in lds jb lret adc loopne cmp jge jle clc and mov inc pop adc ds add test fldenv mov ds cmpsb (bad) (bad) call imul fstps push and iret or (bad) (bad) (bad) ljmp jb (bad) jo daa xor pop pop jg xchg sub and (bad) (bad) lcall inc pop stos jecxz lock (bad) lret mov std cld test cld cs movsb daa sub call movaps (bad) pop aas std arpl rcl movsl add lcall jne (bad) clc lcall sahf jbe loopne cmpsb and loopne bound (bad) (bad) lcall push mov pusha jl jnp push adc jo xchg cmp lods sub movsb mov inc (bad) jg outsl ds dec cwtl sbb push ret xchg inc inc mov (bad) fcomip call mov sub cmpl and mov or (bad) mov in sahf fidivl add dec mov or (bad) fcomip (bad) clc cwtl lods add or outsl sub adc ret in arpl (bad) (bad) (bad) ljmp test xchg sti mov mov ds aad mov jmp dec xchg (bad) (bad) (bad) pushl push jmp in test outsb pop js push in es nop ja test (bad) icebp xchg pusha iret inc add leave pop sbb push (bad) mov (bad) (bad) (bad) jg mov jb ss mov inc xor dec cmp xor pushf loope jmpw jp sbb push mov fnstcw xchg scas sar in lcall and ret (bad) divb xchg dec sbb pop mov pop pop clc ljmp sub inc out inc adc outsb pop mov cmp (bad) (bad) jg pushl xchg ds aam xor hlt ja rcrb or jp int sub (bad) decl scas scas rol xchg or (bad) mov decl adc mov mov test sysexit pop (bad) aam scas clc jg lret adc cmp das jl jg rep rcrl adc cli (bad) (bad) (bad) mov dec into divps dec (bad) int call pop imul (bad) (bad) ljmp dec add dec jp inc inc add test or dec ret pop or cld lret add xchg or sbb mov jno adc cmpsl in incl xor cmp ficompl sbb cwtl pop jg jge fadd mov (bad) (bad) (bad) (bad) jmp addr16 (bad) fsubrp repz imul mov mov fnstcw xlat ds clc (bad) pushl push push jge out lock scas pop fldt test out ljmp push (bad) mov aam xchg in movsb push loope mov add mov xchg loope jno lahf mov js and jmp xlat iret jle hlt (bad) (bad) (bad) jp cli (bad) xor lods xor or mov fdivr (bad) (bad) fildll hlt pop lds or ja push push fdivrl add (bad) jg xchg xor fwait push (bad) mov sbb inc test popf cld sbb mov push sbb rorb xchg (bad) or (bad) (bad) (bad) ljmp sbb jnp cmp jle ljmp mov push (bad) (bad) pushl ljmp and out out mov int3 out add push mov out (bad) xor test (bad) (bad) jg shrl jl (bad) mov fsub pop lods push xchg (bad) incl ss sub data16 loopne (bad) xchg in cld shr xchg fwait xchg notb (bad) ljmp push jecxz es into lahf popf inc test jg push fldt in ss in push jg xchg adc sbb adc (bad) (bad) pushl into or dec pop repnz scas and sbb fs in jp dec jo in cmpsl mov push push pop mov xor push add aas or cltd cli cmpsl lea xchg mov int3 sub push (bad) (bad) (bad) push jne mov jl xor test push lds cmp xchg in (bad) (bad) inc mov je mov mov pop (bad) add rolb jbe loope test addl sbbb std fdivrs push mov cmp mov xchg push pusha or jp stos mov or in cmpsl out (bad) (bad) call sub mov add mov mov sbb inc fild (bad) (bad) cmp sub mov inc push adc mov sub cwtl sbb push push sbb mov xlat call (bad) incl jmp sub dec mov inc (bad) (bad) fs mov add pop pop cmp mov (bad) loop es sbb cmp sub (bad) (bad) pushl outsl fwait test lock jp fsubrl cmp in icebp loopne mov jns (bad) mov test dec ror mov add mov add cmp (bad) lds ret mov or (bad) fistpll insb or inc xlat jbe int3 xchg js adc es out (bad) (bad) (bad) lcall pop ss inc ja sub popf pop movsb mov cmc loope xor mov adc mov (bad) (bad) jmp xlat inc pop jp fwait mov iret mov scas mov movsb xchg insb cld (bad) fisttp pusha and add (bad) add mov in jns (bad) jg ds and mov dec jmp fscale movsl loope mov lods (bad) sbb (bad) (bad) (bad) jmp cmp sbb mov jns xchg sbb inc stos (bad) sub or or es (bad) (bad) (bad) call inc jmp mov mov inc push sar iret nop cld pop ss dec xor (bad) (bad) (bad) incl pop xlat xchg stc sarb nop jns scas xchg mov jge (bad) cld (bad) (bad) ljmp pop leave mov ret inc pop gs shrb in je cli inc jge mov mov scas pop add xor jp (bad) xchg inc push add cmp mov addr16 xchg aad (bad) (bad) (bad) pushl sub push xor scas enter cmp mov cld addl (bad) (bad) cmp stos and roll pop cmpsl mov jmp dec mov jg adcl xchg cmp push bound xchg ss cmp xlat fstps test (bad) (bad) pushl sti sbb fistpl sbb pop subl call loopne pushf dec xor stos mov add adc ljmp pop add aaa fmull lret cmp outsl movsb push push icebp (bad) decl cld jecxz clc dec or xor rcll outsl xor orl push pop jns iret in sub icebp adc xor cli push jp loope es int3 jo mov (bad) (bad) incl and and adc stos outsl sub into pop in pop (bad) mov in or pop mov pop das sub or (bad) arpl add mov inc (bad) (bad) (bad) (bad) jmp repnz (bad) dec inc ret mov fwait push (bad) dec xchg adc repz cmp (bad) (bad) aas pop test sub aaa rclb sarb movsb rcrl incl insl insl adc jecxz repz jmp mov jno (bad) (bad) (bad) decl mov inc pop in lods push adc add sbb aaa inc imul hlt bound sub popf out jne pop mov jecxz popl xlat jp (bad) (bad) (bad) jl lret lods inc sbb xchg mov xlat aas loope idiv test (bad) jno push in in nop jg add dec cmc mov mov pushf push or push mov mov aam je pop or shrl out (bad) (bad) (bad) (bad) cli cmpsl (bad) mov in cwtl inc frstor push and repnz fwait imull inc mov (bad) lcall test dec fcmovu jmp adc rol add cmp ret cltd jp adc add test repz sbb (bad) (bad) (bad) mov sub fwait xchg push mov fwait adc mov xor incl data16 pop (bad) loop and sbb in sbb jp push dec cmp sbb sub and test jnp xor mov push outsl out ds cmc int adc (bad) (bad) ljmp and and movsb mov test test lret xor mov (bad) (bad) (bad) jg hlt or mov movsl mov add jne es xchg mov dec std xchg cld call loop dec lock mov lret sbb pop lods dec pop pusha int3 andl push mov hlt add sarl sbb cld lcall cs jnp jno repz je out push cmp loopne (bad) pushl fldt negb fwait jno ds and fist daa push lahf outsl jne or mov push mov loopne push xchg inc fsubp test (bad) (bad) decl jg rorb subb (bad) pop data16 xor push xlat pop cmp inc pop jo lret out mov inc mov mov jo mov in sar (bad) (bad) (bad) fdivrl test and imull cmpsb sub jbe xor jecxz arpl inc sub (bad) mov int xchg dec in loope int pop ss jecxz je pop jno xor decl inc lcall push ret adc or std add and or (bad) repz xchg and jge jmp daa push addr16 sbb popf (bad) pop cmc (bad) inc sbb dec fs add js or pop outsb xor fldt js (bad) mov fiadd cmpsl mov mov pop jmp inc js inc jle (bad) (bad) inc xchg fmul loop lret add fist (bad) in xor movsb xor jg mov and jge push lcall cmpsl ljmp (bad) clc cwtl jg xor mov sub inc in mov test dec xor (bad) jle inc xchg int3 sub jp dec sbb pop daa dec daa in xchg stos mov or in mov mov adc push ja insl addr16 cmp (bad) in decl movsb gs mov dec loopne pop inc icebp test out sbb xchg cmpl and lcall jge int3 outsb insb jb xor inc scas (bad) jg inc mov aas add inc jb fisttpl (bad) (bad) pushl aad (bad) jbe rcrb (bad) mov sbb ss (bad) inc mov inc (bad) xlat or add (bad) xor rclb shl sahf (bad) decl mov (bad) je or sbb inc fsubl sti xchg (bad) sbb inc (bad) aaa mov push int3 pop cmp bound ljmp push mov ja call inc and mov or movsb or decl das inc xchg js sub repnz cmp xor (bad) (bad) mov mov fimull or mov push push pop pushf sub and (bad) (bad) (bad) call pop push xchg out sbb mov es dec xor enter clc daa pop cmp (bad) jmp (bad) sbb sti jp cmp fistp je cmp cmp add cmpl push mov lea stc std imul je pop clc (bad) decl in dec push xchg rol repz (bad) jmp push out mov ficomp loope cmp push call xor or xchg sbb jl loop in (bad) (bad) decl outsl das aad mov xchg test push and mov outsb and out adc jns or (bad) ljmp (bad) (bad) (bad) inc xor int3 mov pop aas jl rcrl dec mov jp mov (bad) (bad) ljmp jecxz push push sub xlat inc sub lret push adcb push sbb ret add (bad) ljmp leave mov push xor addr16 ret decl jae cli test mov in fisttpl jnp push and mov ljmp (bad) adc fs fistp inc fcomp test scas mov fisub pop or mov int3 push xchg mov adc mov mov out fcompl mov inc dec lods enter arpl mov ljmp pop dec test xor jns loope outsb dec leave push sbb xchg pop push (bad) (bad) (bad) (bad) call int3 pop push hlt fnstcw leave mov (bad) pop mov pop jecxz std push (bad) (bad) (bad) inc insb rorb fsubl mov jmp ljmp scas add xchg fcoml sahf int or xor pop xchg sahf lea dec popf cmc xchg lods mov sbb mov lock ljmp cld nop ffreep fbstp push ret dec test add mov sti xor aaa ds int3 push rclb mov fidivrl and adc (bad) (bad) pushl fisttpl xor enter fcompl test les jne and mull data16 mov push (bad) enter xor jb movsb mov adc jb xor sbb test out mov mov cmp ljmp call lret or push gs add (bad) (bad) (bad) (bad) jge call dec jl xchg or jl mov (bad) aam mov (bad) (bad) (bad) decl (bad) xor add sub lods mov xor sbb mov lods bound std pop hlt mov loopne sahf imul insb push cli jle jle lods pop cmp jge jb fldl (bad) pop sbb loope clc sahf movsb push movsl pop and dec and loope xchg stc in mov (bad) cmp outsl mov xorl (bad) imul xchg jb pusha roll mov (bad) pop (bad) (bad) (bad) (bad) clc xor (bad) mov lret fcomps lock fistpll fs lret mov mov mov bswap pop arpl push (bad) dec cmpsb xchg mov in fs mov dec (bad) (bad) (bad) mov enter adc stos ljmp int mov ljmp pop cmp scas push repz jg mov js out std or add (bad) (bad) (bad) (bad) cmp mov cmpsl pusha pop jo jns lds scas pop addr16 jno dec adc (bad) decl dec add mov or sub cmp sbb jb mov out or xchg pusha adc repnz add (bad) (bad) lcall out add mov insb inc repz mov mov arpl (bad) (bad) decl jmp loope sbb or cltd sbb loopne (bad) fildll loopne lock ds outsb push push in inc adc (bad) (bad) (bad) (bad) (bad) adc iret dec rorb sub mov (bad) sti mov cmp pop add sub pop xchg jge fistl push xchg mov cwtl (bad) (bad) call xor mov imul sbb xor dec or inc xchg inc cmp add repnz (bad) (bad) call mov (bad) sbb mov lcall pop xchg nop sbb (bad) (bad) incl lock and mov enter imul sub cltd dec sub (bad) (bad) decl sbb mov xchg (bad) push loopne repz stos xor loopne pop mov cmpsb xchg jo push cli (bad) (bad) dec (bad) ja dec mov xchg repnz jecxz cmpsl fldcw clc mov fwait or adc xor into mov lcall ljmp test ds das cmpsb (bad) call outsb dec cs push daa cwtl inc mov arpl add (bad) in ljmp out les mov xlat jnp push push pop sbb add (bad) (bad) jmp inc push xor mov xchg mov inc lods pop and out in xchg fisub and adc xor adc pop jbe jae mov (bad) (bad) push and xlat mov (bad) and and shrb xchg jbe pusha int3 popa dec push cld ljmp adc sbb pop xchg addl mov push xchg stc fcos (bad) (bad) (bad) mov mov out es push cmp lods mov pop mov sbb (bad) (bad) (bad) pushl cmp xor out sar test imul adc cwtl mov dec lret nop (bad) (bad) (bad) call adc push mov les (bad) (bad) out shlb mov movb mov jno fucomip adc je add pop ljmp add cld in mov (bad) pop fldcw mov push loop pop dec pop push push inc dec test cld mov pop in clc (bad) pushl or stos sub (bad) div add shl insb out outsl (bad) (bad) (bad) dec pop cmp mov or fcmovnu xlat push inc xor inc mov stos adcl or pop icebp push inc rorb imul clc (bad) (bad) call mov and fisubr aad jge je push rorl and test out sbb (bad) jnp jl or jne in inc subl push or (bad) (bad) pushl lock jecxz je xchg xchg jmp and push pop lcall in or (bad) mov jno fidivr lret addl jmp nop scas xor shrl inc jle in sbb (bad) (bad) (bad) lcall aad imul jmp or and daa mov insl fcmovu (bad) (bad) (bad) pushl jne jnp and pushf icebp jno push xchg test roll lock ljmp movsl pop data16 iret lock fisttp (bad) (bad) (bad) out jbe inc lock add push (bad) es mov add in lods jb,pn (bad) out cmp (bad) jle fnstcw add or loopne ds (bad) (bad) (bad) (bad) js movsb mov mov cmpsl mov out lods push ret xchg xor lods adc (bad) (bad) ljmp lea xor stos dec hlt jbe mov call push lcall (bad) (bad) jg inc inc (bad) mov int3 adc dec and mov sar push (bad) lcall rcrl lods jmp mov add cmp xchg mov fcomip incl cmp mov dec jne fisubr lds fcompl pop js (bad) (bad) (bad) call push xor lds cmp (bad) lcall sbb cmpsb xchg push (bad) (bad) (bad) pushl add mov (bad) or jns notl push loope (bad) (bad) (bad) incl icebp inc lods mov pop and cmpsl cmp push out adc pop mov mov xor rcll int3 into inc cwtl jecxz out test or mov pop xchg repz cltd sahf and (bad) (bad) lcall (bad) push jecxz lret out jbe xchg stos in mov push mov add push std jg xor pushf arpl stos aad cli cmp imul (bad) decl xchg push movsb sbb bound sub add in fdivl pop push (bad) (bad) (bad) jmp inc cmp jmp outsb add mov mov out xchg pop cmp pop mov mov test inc or adc (bad) (bad) (bad) ljmp pusha fs jge mov push leave and cs negl sub push pop fucomip mov sub inc mov jno jb or sub stc cmp lcall (bad) out aam test in out ljmp jg les scas jecxz jp (bad) (bad) (bad) (bad) jns std push aas sbb loope xchg add (bad) cli cmp mov rorl daa (bad) jg (bad) jl rorb lods xor orl in sti std call stc and (bad) (bad) pushl fildl add push fwait mov sti andl dec les jg push push or (bad) inc mov xchg in pop inc test fsubrl les (bad) stc adc xor jmp cmp jo push ja xchg sub push adc imul call add pop sahf (bad) pusha push adc out push hlt int3 mov mov daa mov decl ds mov scas call xchg sbb mov adc les pop xor push xchg and lcall mov sbb in xchg loopne inc clc or mov (bad) jns jo mov mov mov (bad) decl xor test adc repz or shrl in std push mov fdivrl xchg adc leave lret lods (bad) call mov jp stc rcr xor sbb mov sbb jecxz ds std xor push popa pop xor std (bad) dec inc or mov repnz jg or cli sub cli mov fisubr and pusha adc inc jae xchg and std (bad) inc xchg js mov and fldt in call repz call sahf in add mov add stos scas outsl cmc cmp (bad) ljmp aas sbb cmp push lret popf hlt mov lret aaa and pop cltd idiv (bad) (bad) (bad) incl pusha rcl rolb outsb loope or loop inc lods fsubl popfw push and lcall jg jl rcl pop xlat push stos (bad) xor les lcall lcall stc rorb je out cs jns xchg push mov xor (bad) lods pop (bad) cmc (bad) (bad) call fidivr je mov ficomp ds sub std pop (bad) fisubr cli (bad) fbstp movsb push cmc daa sar cmp (bad) inc lods xchg lds xor (bad) cs add lret hlt into cld icebp mov divb lcall jg inc enter jne lock das inc cwtl into leave jae out (bad) cld jge (bad) lcall out repz (bad) lea lea (bad) jbe mov push std jmp aad adc (bad) fildll faddl popf (bad) (bad) cmp gs pop xor cmp jg adc add xlat mov pushl jle lock lcall scas pop pop add jg jne aaa add mov push lock (bad) and inc jno fs jge (bad) or mov push (bad) call ds and fisubl cld jbe cli sbb scas and adc pop mov movsb ss imul call xorl xchg mov xor ja mov cmp mov dec cmp notb pop mov inc dec lock call mov add inc loop mulb js rcll lcall jle imull xchg fs shr pop push jmp sbb adc push inc sti push sar inc jecxz call cli adc push mov cmc push fdivr stos dec bound dec and add addr16 popa xor push xchg (bad) jmp insb sti popf cmc movsb daa fidivrl add loopne aas xchg sahf xchg shlb incl add dec fsubl sub xor pusha jecxz (bad) (bad) (bad) mov mov loopne,pn gs loop adc pop stos mov push ja das mov movsl or (bad) lcall aad xchg pop mov xchg dec mov adc fnstsw mov xchg sahf cmp and jg cli outsb pop cs inc lret rclb lcall inc leave int xchg mov mov sahf pop (bad) pop repnz adc fisubr mov lods fnstcw xor fcoml pop cmp loop (bad) (bad) (bad) jle out cmc fsubl aaa jp jo test push xlat and add cli pop (bad) (bad) fdivr xchg push lea (bad) mov mov add mov and (bad) (bad) ljmp sahf dec sti mov (bad) mov xor sti jle push jbe mov jmp jb mov (bad) (bad) (bad) jmp dec mov push nop lret cmpsl fild xor and or xchg mov (bad) (bad) decl mov adc jo cwtl mov pop imul (bad) (bad) (bad) fnop mov add adc push add fidivl aas xor inc ficom (bad) (bad) (bad) ljmp lock lea xchg mov rol test sti cmp popa push or (bad) fcomip div rcrb push mov pop add sbb int mov jnp jg (bad) cmp negl sbb aam into jns add add nop cmpsl aas push cmp (bad) (bad) jmp cmpsb jne cmc in scas pop rcl out int3 in mov in ja push fnstenv daa into jno (bad) pushl pop ja arpl push call add add test add adc jle xchg (bad) (bad) (bad) call and push sahf bound cmc (bad) hlt fmul sub mov jge,pn pushl sbb iret in imul mov dec push mov xlat fisttp decl jns mov pop icebp incl pop push loopne je cld cmpsl inc sahf inc or shlb (bad) out clc (bad) dec imul mov es adc inc push jle pop add mov stos (bad) (bad) lcall ss stos pop mov movsl sbb loop test xchg lcall jb (bad) (bad) (bad) ljmp sub dec scas or enter xchg pop call adc in jg (bad) fcomip ljmp fcompl lods loope and loopne cmp imul sub jae das clc (bad) jmp dec addr16 (bad) xchg jo cmpsl bound outsl fistpl lods mov cmp pop xor adc mov add sub inc xchg push pop and stos jle lods push ds pop iret out sbbl (bad) (bad) jg cmp sti cmpsl outsl pusha mov and xchg mov ret push jae or ds pop xchg inc loopne (bad) xlat adc xchg (bad) (bad) inc push inc bnd test bound bnd into sbb ljmp sub insb (bad) in (bad) (bad) (bad) in loope lds xchg pop jbe cltd jns xchg mov lods jo add pushl fdivrs xor xchg pop push js imul ljmp (bad) clc cwtl repnz mov mov mov add ljmp mov push mov stos push addr16 sbbb cmp stc mov aad (bad) (bad) pushl fwait and mov repz cmc sbb int cmp (bad) lods scas (bad) (bad) (bad) incl imulb jmp icebp int3 ja je inc pop mov xchg movsb jle pop (bad) (bad) (bad) jmp jecxz mov xchg mov sbb jbe ja int mov jp (bad) (bad) jmp lret test lods sub mov in fnstcw cmp xor mov sbb inc daa sbb mov aas das clc (bad) cmp (bad) (bad) (bad) mov (bad) mov hlt int3 cmp vandnps xchg lahf jb ljmp (bad) (bad) (bad) pushl stos mov into aam fidivr repz pop aaa cwtl and or sar (bad) jmp push fidiv sbb mov leave mov lock jp xchg jg jecxz cltd les pop jnp push rolb sbb xchg (bad) (bad) fistl xor icebp cmc mov inc xchg push mov (bad) (bad) (bad) stc loop mov and rcll push fcomip sbb mov decb xchg xchg mov sbb mov cs mov jae icebp out dec jno fs (bad) decl (bad) ds push push les inc mov mov (bad) (bad) (bad) (bad) mov insl lret jle fnstenv int dec push mov jno repz or fcomip ljmp inc aam xchg cmp repnz dec push xor (bad) lods pop jne fsubrs fsqrt (bad) js ljmp mov (bad) (bad) (bad) (bad) mov fsubr daa mov jns pop hlt cmc cmpsl fisttpll or es test (bad) (bad) pushl out jecxz mov test push dec cmc pop jae test lret push push ds (bad) (bad) inc cli lock ds add faddl loopne cmp xor jmp sti pushf jo sahf xchg leave lcall fnstsw call xchg dec repz sti (bad) mov mov cmp (bad) (bad) jmp inc repz fisubr mov sbb pop cmp xor xlat (bad) mov (bad) incl aaa arpl shll xchg mov out fist sbb (bad) (bad) decl dec leave add inc inc rcrb inc out push inc punpckhwd in mov or popf jo jg insb cmp pop scas or stc pop cld je rolb jne sub insb adc fidivrl adc aaa push mov leave inc leave orl clc adc mov sahf add pop mov sub insl enter (bad) les cmp dec dec jne mov dec fbld fisubrl push cld (bad) (bad) cmp cmp arpl out xlat in fsts bound add push out jmp pop jmp inc and pop int mov into divb xchg ret push das insl jecxz (bad) (bad) mov push adc arpl out (bad) mov and iret adc mov dec (bad) (bad) cmp mov (bad) fnstenv stos and mov test xor (bad) (bad) call pop adc clc (bad) adc pushf mov inc in jno mov push push xor mov pop notb jno add fldenv addb pop (bad) loop mov dec clc mov je push mov push (bad) (bad) lcall jge sti and and in pusha jmp cmp std add (bad) bound inc clc dec jp add sub lahf jmp das add xor pop cmpl xorb mov push cwtl add std ds lock sub mov fiaddl aaa popa lfs aas xchg mov pop dec adc xchg jbe (bad) sub jb (bad) ljmp jae,pt mov mov xor das (bad) cmpsb imul mov hlt std repnz in push subl mov (bad) mov mov jno inc add into cmpsb addr16 pop hlt (bad) incl add dec stos mov inc lahf fdivrp inc jmp xchg xor jmp jmp test pop dec scas sub mov (bad) xor incl cmpsb rep jno pop dec push add mov (bad) mov cmpsb (bad) sbb mov fwait stos jnp insl xchg mov cmpb inc int pop sarl scas bound cld stc adc xor push inc test or mov sbb jae mov add push or int3 andl jle in (bad) jmp add fisttp into lea sbb xor sub cmpsl dec cld decl push cwtl add ljmp popf push mov (bad) mov or sub sub or xchg mov mov std ljmp data16 mov jg cli and inc je jnp inc clc aaa movsb imul jg (bad) out ss int3 dec ds aad add mov lahf imul aas pop (bad) jmp mov mov imul hlt dec (bad) (bad) (bad) call push fdivl mov cli pop mov push nop or adc outsb adc loopne icebp cmpsl lret jne xor sbb pop push cmp jno pop gs daa outsb mov xchg cmp (bad) (bad) call mov iret jecxz sbb pop pusha mov xorb addr16 lock out and int3 pop ret mov jmp inc dec sbb sbb (bad) (bad) dec sbb popf pop cmc into in pop mov lret loope mov mov inc decl cmp popf lds push sti (bad) adc jge lret adc dec sbb cmp cmp leave (bad) int push jmp mov adc movsl jnp cli mov popa mov add xchg or bound jg cmc repnz addr16 jnp jg add insb mov je jg rol (bad) (bad) sti add and push add ljmp push xchg iret pop cmpsb in jo mov add out (bad) (bad) call cmp or lcall js ja stos pop fcompl pop mov (bad) decl mov xor dec adc push mov int xor push (bad) ja sbb jno lret xor push pop lahf pushf js (bad) (bad) mov in ret enter sub ja repz icebp clc out pop (bad) and clc (bad) (bad) sti jp jb lahf mov loopne mov jnp inc notb cmpsb sar (bad) (bad) ljmp xchg repnz or jle ret mov sub addr16 dec add pusha jne pop (bad) cmp hlt and ds or xor call pop mov mov xor push mov fsubr (bad) fcomip (bad) aas fcomps push dec sbb mulb jge inc and dec iretw hlt incl clc adc mov pusha push (bad) divb and (bad) (bad) ljmp fsubs rorl dec or scas or movsl scas daa or insb push out cmp and cld cmc (bad) (bad) incl mov scas mov xchg xchg ja xor test or (bad) (bad) fnsave inc adc jo jecxz sarl lea notb pop out mov cmpsl pop sbb push mov int3 loop mov mov mov (bad) (bad) (bad) decl jbe nop imul les lods lret movsb int3 mov fsubl xor jecxz xchg (bad) (bad) (bad) call adc mov repnz jns imul sub lods xor mov pop inc add outsl push pop je inc nop aaa insb jl lcall pop ret int3 inc (bad) xor xchg aaa dec xor int3 jmp mov scas inc pop xor cmp mov in arpl pushl mov lods dec and cmpsl into fsubrs (bad) movsb jno or daa mov ds in ja shrl sbb mov je stos add jge push (bad) incl mov lret dec mov add (bad) (bad) dec (bad) xchg lret mov mov data16 adc (bad) flds scas push popf sub ja bound clc xchg aam loop roll inc (bad) test gs mov (bad) pushl dec inc les sbb (bad) mov lcall test mov das sar cmp jae bound sti mov or stos outsb aad (bad) jmp inc jb cmc enter mov lds xor (bad) aaa add (bad) (bad) jg mov jg popf into repnz (bad) and popa mov xchg pop push pop and in pop inc jb adc movsl das xchg fcoml loope (bad) jg dec mov aam jecxz sbb fbstp mov jnp das jle aas add cli sbb xchg or (bad) jecxz cltd xor not and jbe xlat sbb (bad) (bad) (bad) (bad) sti inc mov mov cmp out pop jl jp loopne pop test xor (bad) incl cmc add jno cld ret sub sbb jbe xor mov mov dec pushl mov or add test jg jb push aaa mov leave ds std es cwtl in push into sbb push inc mov push dec xchg (bad) (bad) jg pop scas inc sbb adc adc rep pop (bad) pusha loop add (bad) ljmp (bad) ljmp js shrb mov js push lods (bad) (bad) call jo arpl scas jmp sbb xor in mov das cmpb inc je mov lea or sub ds push (bad) (bad) incl js int3 jge mov (bad) xchg addl pusha repnz mov and nop iret sub cs dec repnz (bad) incl ret (bad) xchg fnstcw stos add or popf xchg sarl (bad) (bad) jg cmp and inc xchg fs or inc std data16 (bad) and adc (bad) (bad) in adc out mov sub xchg jg pop mull fcoml (bad) (bad) jle jb dec outsb adc fisubrl pushf sub and xor (bad) lcall pop sub inc xor and push out push xor adc jae daa pusha fs (bad) jg ljmp out std ffree pop lcall fisubrl adc lahf fsts (bad) mov in xchg cmpsl pop mov xor (bad) dec xchg int jecxz inc fadds (bad) lcall iret lock and fnsave push arpl imul mov push sti mov (bad) (bad) call mov cmp mov repz loope arpl pop jge jmp cmp push xor pop shll js pop (bad) loopne xor pop push clc adc lret in add (bad) (bad) (bad) call (bad) pop cmp xchg fidivr mov and popl je jb out mov (bad) lcall js insb cmp bound cs in mov fldl (bad) (bad) jmp jae adc orl fidivrl dec (bad) iret and loopne and jbe adc (bad) (bad) lcall leave or ds aam ds push popf test (bad) fiaddl lahf jl (bad) (bad) (bad) dec sub pop (bad) call sub data16 and add test push pop pop fadd loop mov decl and int lcall aaa rclw insl out mov jp inc aad mov js,pt xchg xor mov jle pop mov cmpsl lea push or and (bad) xchg dec ljmp call rcl or or or fild sbb mov xor das aas enter (bad) decl pop test mov push cmc cltd xor push div ljmp mov repz leave push sahf lahf adc leave inc cli mov dec jecxz ret (bad) (bad) (bad) incl out das xlat dec sub xchg push xor pavgb les push (bad) (bad) (bad) decl add xchg popa add dec test pop add nop daa sti and xchg push push decl (bad) jle inc movsb xor outsl mov (bad) jecxz sbbl pop mov mov (bad) (bad) ljmp in jmp sbb mov jp dec xchg fnstsw (bad) xchg sub jecxz fnop mov mov jno jmp (bad) mov jne ljmp push sub and mov (bad) (bad) (bad) jg xor fld lret xchg pop mov ljmp out adc test (bad) (bad) decl or xor in in pop daa sub aas mov mov cwtl stos (bad) call mov mov in pop icebp push mov sbb js (bad) (bad) (bad) inc inc mov clc cmp adc fsubrl xchg loope adc ficomp sub sub clc mov sti adc and dec pop aam sbb das cli xchg push rorb (bad) (bad) (bad) dec mov fcompl jnp ret xchg stos js hlt adc aad imul sub push clc (bad) (bad) (bad) jl outsl mov mov lea cmp dec and aam (bad) cmpl (bad) mov inc loop outsl dec repnz cmpsb stc es jmp fiaddl sar pop ficom (bad) in (bad) and imul push or ljmp cmp push arpl insl lahf into fiadd push adc (bad) out xchg pop sub xor mov lock mov mov mov sahf xchg daa shl pop je sub (bad) (bad) (bad) cmp pop dec push outsl pop icebp xchg push adc jne icebp jp leave mov fisubrl jg jmp cmp mov test push (bad) (bad) call std jae cli fcmovb es xchg sub (bad) jg mov lods xchg xchg call cmp jg xor jno dec (bad) (bad) (bad) push leave adc xlat imul sub ficomp jne sbb mov std repz push xchg pop inc and in pop jmp loope cmp jmp sbb loop ret mull pop call loopne sub mov or add sti notl jge ljmp mov jne add xchg xor hlt push lret dec cs cmpsl pop push fs pop rcrl lcall xor aam movsb add les hlt mov push pop dec ds (bad) decl cmp sahf aaa aas pushf push and xor divl das sar jnp and mov test stos adc stc dec ret mov (bad) (bad) pushl push add adc sub repz repz jle mov mov or pop push std (bad) push dec inc ret cltd adc xor shrl (bad) cmp push dec dec lcall sub sbb ljmp and cmp sub and pushf xchg mov push add outsb test mov test and cmp xor mov lea lods daa push xor lea ja (bad) (bad) pushl popf negb (bad) xor mov std inc out and sub imul loopne push loopne rorl addr16 dec sahf fptan lods (bad) int3 sbb xor jle cmp (bad) (bad) jg mov add (bad) pop dec mov (bad) inc mov mov (bad) pushl cld ljmp adc lahf and aaa lds cltd sbb lock (bad) (bad) jmp mov inc (bad) imul inc cld cmp jecxz ss test sti pop sbb dec sbb push mov decb int inc insb pushf jo stos int push lahf mov or (bad) lcall adc cmpsb icebp pop cmp xor mov leave mov mov adc icebp (bad) ljmp xor adc xor in (bad) xchg push lods pop lock sbb aad (bad) (bad) (bad) ljmp push imul cwtl clc dec pop scas sub sub test inc pop adc xor sub dec xor loopne inc fdivrs xchg aas orl or dec out out xchg in (bad) (bad) lcall jecxz add stc lcall sbb ja fsub arpl incb sahf jae sbb (bad) (bad) mov loop pop pop mov cltd scas mov sub (bad) decl lahf out cltd add adc sti dec pop add rolb and cli and pushl std test es lock jnp and lcall push sar add xor inc push mov aas cmp cmc imul push (bad) (bad) (bad) decl mov daa (bad) gs jmp inc inc or push jg push sarb (bad) incl dec mov mov fstps fdivr xchg insb loopne movsb mov lea out (bad) (bad) (bad) decl and dec test cmp scas in loope outsl xlat aaa cld in xchg lods loope pop mov (bad) fnstsw (bad) (bad) dec rcrb dec pop xchg pushf mov lock xor push mov sar (bad) call (bad) add adc adc jl pop scas outsb (bad) repz push (bad) push (bad) (bad) (bad) (bad) (bad) cmp scas mov sub aam fisubrl inc or int3 xchg push dec xchg std packsswb (bad) (bad) (bad) incl (bad) add gs jmp mov (bad) cmp iret mov es push clc pushl push xchg sahf pop cmc mov cmp jnp call (bad) ljmp stos or or fndisi(8087 lret dec cmpb movsl cmpb and xchg dec insl ret cli or popf rorl (bad) jmp fs and aaa jecxz adc (bad) (bad) push xor aas lock (bad) (bad) (bad) mov out dec aaa pop pop jle cltd pop cltd cld adcl dec das sahf sbb jp xchg insl (bad) (bad) (bad) lcall push add out mov loope sbb mov pop mov test dec (bad) (bad) (bad) jmp mov in sub cmc dec (bad) insl mov xor add xchg loop (bad) (bad) incl and adc inc insb aaa jne int xchg sub mov aad stos (bad) outsl js xor add dec and xor or pop cmpsb inc rorb adc and pop pusha push mov idivb lock inc pop xchg and shlb ret call lea stos add lds rorb movsl sub push cmpsl jno (bad) (bad) (bad) (bad) stc popa pop xchg xlat (bad) fs sbb inc mov gs lods lahf (bad) (bad) (bad) (bad) cli mov int3 call pop imul leave inc adc lea pop cs mov nop add xchg fistpl xchg pop popw xor inc aaa stc loop pushf cmp xchg in pop pop jae dec (bad) ficompl ds dec lahf inc call (bad) (bad) (bad) pushl push cltd xor popf dec xchg jnp push jno cmp in mov adc sub pushl sbb into xchg ret xchg stos loop imul sub adc pop decl mov sbb xchg (bad) (bad) (bad) ljmp mov adc mov push int mov jnp cmpsl jg (bad) (bad) mov (bad) (bad) (bad) jl and fldl jno dec jae jb fisttp sahf in jp pop or mov es jp inc sub push lods fnsaves int cmp minps outsl push lods pop cmpsl pop mov (bad) (bad) ljmp xor test pop movsl (bad) cli cltd or rcr (bad) test repz push incl mov test fmul xor (bad) (bad) jmp cwtl xchg addr16 nop (bad) mov ror ljmp das jne dec inc scas clc (bad) fcmovnu inc jl sub pop maskmovq divl fnstsw cltd cmc sbb sar (bad) lcall insl inc arpl aas mov mov dec jnp adc (bad) (bad) jmp aaa cmc enter xchg repnz add cltd (bad) jo xor dec add decl sub cmp test mov out cli (bad) in out incb repnz (bad) jb sub lret jge in xor or mov xchg adc adc cs movsb (bad) lcall inc les pop (bad) xchg ror xchg cmp jecxz (bad) (bad) (bad) dec mov cmp inc jg stos sti jl xchg xchg repnz inc aad aam sbb (bad) (bad) js jmp dec int3 sub stc jnp xor push jnp (bad) inc or scas and cmp mov push mov or jp xor ljmp mov cmp fs repnz arpl sbb mov xchg ljmp mul add (bad) (bad) (bad) aas imul push sub xor aas jno adc xchg pop (bad) (bad) jg xchg inc jo dec adc and mulb insl inc or insb jecxz xor push push sbb (bad) pushl shll push and ret arpl xor adc (bad) jg movsb mov cmp outsl inc arpl and (bad) (bad) (bad) call inc hlt sub xchg jge dec jl lds out loop or xlat sub in push pusha jb (bad) (bad) (bad) jmp mov jge adc roll or adc ret push test mov ret cmp and (bad) (bad) (bad) (bad) mov incb in xor movsl ss outsb loopne add jns stc adc (bad) (bad) (bad) jmp cmp mov mov sub pop cmp xchg clc mov ljmp out add lods das mov ljmp (bad) (bad) clc (bad) (bad) call xchg les (bad) lock aaa das dec out fcomip add sti cs dec sub incl mov imul test or in (bad) incl mov scas mov pop push ljmp loop repnz out mov xor pushl (bad) (bad) (bad) jg es addl in mov pop dec outsb lahf add push cmp (bad) (bad) pushl jnp mov (bad) sub stos mov push test dec mov mov (bad) (bad) ljmp lret sub lret xor out jecxz jg mov ss (bad) (bad) dec inc jb cmpsb imul cmc stos add and xchg or outsl movsl adc leave inc pop jae cmp mov movsl dec cmp mov mov pop and out push lret sbb (bad) (bad) ljmp and in adc fst sub rorl ljmp pop adc xchg cs cmp xchg je std dec and (bad) (bad) decl sub and icebp jmp andl cltd dec sub insb push push repz lea cld ljmp cmp push (bad) adc and cmpsb icebp enter cs pushl xor add cmp notl (bad) (bad) (bad) (bad) aas xchg add mov or fcomp sbb xchg dec nop dec js js cmpb std pushl (bad) int3 jle mov je dec decl dec ds scas dec rcrl (bad) (bad) mov mov out jge or pushf or dec mov sbb inc js cmpsl lret (bad) mov call aad aas arpl xor lods lods fist mov push (bad) (bad) (bad) (bad) std (bad) mov xchg imul jb or or and ret add (bad) (bad) (bad) call sbb and inc das pusha test cmpsl ret jbe popf arpl push inc ljmp (bad) (bad) out cli ja lock or arpl xchg xchg shll pop adc (bad) (bad) lcall adc test stos daa int (bad) push clc mov inc loope,pt add inc add out inc ret xor data16 push mov (bad) cwtl (bad) (bad) (bad) pushl adc xor divl cmc mov or add pop cld (bad) incl xchg xchg fwait xchg mov xchg jne (bad) les imul idivb inc movsb sbb movsb mov inc dec hlt subl push sarl (bad) (bad) (bad) jmp xchg or add mul scas push inc mull adc sbb aas aad idiv (bad) (bad) in xlat cmp add movsb sbb pop dec (bad) sbb pushf jl mov push in (bad) (bad) jmp sbb inc lret into outsl inc xchg data16 mov pop push jp std push pop xchg (bad) (bad) (bad) (bad) jl mov int and sbb mov mov fwait jecxz shll or or pop push std leave pop das out jle inc jno fstps mov js cwtl movsl movsb and (bad) sbb mov cs lock sarb out das lea test push js repz (bad) (bad) incl js mov pop xor inc adc adc stos cmp and decl xor lahf jne jnp pop push into nop or xor pusha sbb sub or ret xor dec test js roll sub adc mov ds lret mov mov xor nop sub imul dec sbb lock lcall dec std lahf mov test xorl movsl inc in out sub cltd pop or and (bad) (bad) (bad) (bad) mov les cmp xor (bad) mov test dec xchg ret sbb test (bad) ds lret lods jmp loope cmp (bad) mov mov pop lret cmp jecxz mov sub and push outsl out cmpsb (bad) (bad) incl rep imul jg jae cli mov fsts outsb push dec incl cwtl (bad) xchg add dec aam aad xchg jge xor ljmp sbb dec sub fiadd jbe pop mov lret adc and sti cmp aad loope xchg add cmpsl lds fmul into push insl leave mov icebp (bad) jg sub sub out jae xchg test lods mov sbb (bad) (bad) (bad) (bad) (bad) fdivs mov pop pop jg inc std cwtl lock outsb inc repnz and ja in adc jle call (bad) mov repnz dec loope push add scas std cs int dec pop dec call loopne lods sub adc mov inc cs push (bad) (bad) decl cs mov mov jbe cmpsb test dec xor inc sar (bad) dec mov pop pushf negb and ss lret jb (bad) (bad) call jbe sbb dec push jnp mov sub enter push (bad) repnz (bad) decl ljmp dec pop jle fs xor pop push push push loopne cmp (bad) (bad) (bad) call in das repnz cmp adc xchg je ret cmp rclb lds dec insl (bad) (bad) (bad) (bad) mov or pushf xchg xchg sbb enter adc push dec (bad) stc pop xor rep cld (bad) (bad) call pmaxub outsb pop mov push mov fisubr repz mov incl mov sub int3 js mov (bad) addr16 loopne out (bad) (bad) (bad) fildll cwtl call cwtl jg xor inc addr16 add add or (bad) (bad) incl std fnstcw mov or sub aas push fnstsw in cmp jns jp jbe (bad) (bad) ljmp adc gs mov outsl jle inc jns mulb or test inc loopne jg movsl push mov pop inc aad sbb hlt inc adc add (bad) out xlat push add pop xchg imul inc stc aas xchg (bad) (bad) (bad) (bad) jge int3 mov daa imul xchg cmp ret imul pop ljmp sti aad int xlat (bad) dec jmp sbb (bad) ljmp push std popf clc arpl leave cmp outsb andl push fwait (bad) (bad) (bad) jmp and mov lret fsubrl xchg or lock pusha adc (bad) inc in loop inc jno dec ja int hlt jo (bad) (bad) (bad) mov cmp xchg cs push pop arpl mov sbbb mov mov ret out ds sbb fs xor sbb fwait pop ljmp das dec in xchg sahf adc jno (bad) (bad) (bad) (bad) (bad) cmp mov lret dec dec xchg fistpl popf or out imul (bad) dec mov adc adc dec dec bound ret xor push mov lret push (bad) (bad) pushl test jl lret or dec lock jne test dec sbb jo mov (bad) inc lods rolb pop aam in rcrl ret lods dec push inc arpl xchg inc (bad) (bad) mov mov lret sub test push sbb fsubl (bad) inc (bad) jmp out ss pop pop dec dec sti cli xor daa push mov das cs xor (bad) (bad) call cmp pop insl xchg pop (bad) adc sub (bad) (bad) (bad) dec adc ret sarb ret inc mov testb xor cmp (bad) (bad) call in jae xchg xor (bad) dec pop aam sbb xchg mov (bad) movsl in jg sub (bad) dec push mov mov test gs out mov jl (bad) fcomip cmp dec jl jo mov fmuls dec jns (bad) (bad) (bad) incl les popf or bound (bad) lcall les pop (bad) (bad) (bad) ljmp in jmp loop cmc inc test add push or (bad) (bad) (bad) (bad) mov bound and push inc mov aad fisttpl cmp (bad) (bad) jmp xor add jbe jl adc push dec (bad) mov push fild push and dec pop push nop push in inc cwtl sbbl adc jge cmpsl jmp (bad) decl or stos adc popa dec ss pop push or bts in sar mov xor pop xchg sbb das fildl (bad) cmp dec xor (bad) inc pop mov int3 sbb jb mov pop mov add sub (bad) (bad) (bad) (bad) clc xchg mov and mov mov imul fistpll xchg mov jmp mov lock cmpsb (bad) lods mov xchg js movb cmp mov jns outsl mov pop ds fidivr mov lret (bad) (bad) (bad) ds inc jle mov je or fwait add stos inc cmp lret pop lds icebp sbb (bad) jg push jl sub mov clc pop push lcall (bad) (bad) inc mov jecxz lret movsb xor aad and jp jp fwait xchg outsl mov push idiv (bad) jg icebp mov popf cmc xor or loopne or jb (bad) (bad) (bad) (bad) aas or daa aad aaa mov imul pusha cli mov outsb mov fwait (bad) decl sbb sub mov roll dec push test scas out xchg cltd jmp int push inc pop xchg sti scas in pop arpl add add push fcmove mov fs or (bad) (bad) ljmp and outsb sbb mov xchg mov jl push sbb ret jae cmp (bad) lcall cmp push jne movsl mov xchg and cmc ret pushf jbe adc and sub aas mov je cmpl mov dec sub and shlb repnz aas jmp xchg out cs popf or scas push pop dec in (bad) or std pusha push (bad) fistpll mov lods in and xchg aas lcall push gs push jle loop jle jp fs jno mov call data16 dec and jnp xor (bad) sub outsl push cmpsb xchg imul (bad) ljmp fisub outsl ret or gs mov (bad) mov (bad) (bad) decl jp pop lret push int and mov mov and mov data16 ja (bad) fcomip dec call jne imul xor mov (bad) (bad) (bad) (bad) sti push sub mov adc push cmp mov jle xchg leave pusha enter (bad) clc fs sub dec fidiv xchg cmp sub dec xchg (bad) (bad) (bad) (bad) cmp mov jmp add push rorb jge xor mov jmp sub fwait nop sbb (bad) jecxz jmp ret pushf or and xor adc cld aaa push mov and xchg mov hlt (bad) jg mov dec rcll mov xchg addr16 stos subl mov adc pop (bad) (bad) (bad) jmp jnp xor adc ficompl xchg pop jne mov mov insl xchg js (bad) (bad) ljmp mov cmc cmpsb cmp lock in je cmc and push mov incl pop into or fnstcw mov aas arpl inc push (bad) (bad) (bad) call lds mov push int3 fs dec fidiv mov mov (bad) fisttp mov xchg mov (bad) (bad) incl adc cli jg ret mov cwtl sahf lea ja dec subb frstor (bad) push shll fdivrl mov jecxz dec sbb adc mov les pop cld pop inc mov cmp jno sar lcall int cmp leave addr16 pop js pusha mov add (bad) dec subl jns lcall xchg push sbb test ljmp ds das cmp js sahf js pop xchg fwait mov mov push add adc jnp dec pop mov loop cld pop gs sbb pop insb mov mov (bad) jmp (bad) inc je push enter cld outsl hlt jp push inc lret push (bad) and mov cld (bad) call xchg adc fild pop arpl and mov push or sbb cmpsb jbe push or push inc pop dec mov outsl movl incl mov dec jo nop ret push test enter repnz push mov das (bad) hlt (bad) jnp jo scas rolb iret ret ss (bad) (bad) (bad) ljmp push (bad) sbb jne add xchg push and xchg cmp decl add enter fnstsw mov shrl xor ret mul int3 test call mov push jecxz adc shlb bound icebp jle dec popa test sbb ss (bad) je pop jno call cmp inc js sub mov (bad) insl and mov outsl jmp imul dec mov in lods lahf xchg hlt ljmp enter mov into (bad) xor dec (bad) (bad) (bad) incl push mov cwtl std adc sub adc inc lcall xor icebp sub xor cmp sbbl (bad) (bad) decl in fcomps aad push xchg out xor js jl mov (bad) (bad) (bad) (bad) mov jo mov mov add add pop cmp test int3 (bad) (bad) jmp loope push je inc jp pop adc adc or (bad) js (bad) (bad) (bad) dec sbb cmp and (bad) xor pop out xchg add sbb mov xchg ja jmp (bad) jg pushl in mov outsb jno or (bad) xchg stos pop jne out add pop int fwait dec jg fmul adc (bad) (bad) (bad) (bad) cmp push sub sub dec mov push cmp into mov pusha or sub jb cmp sti add fidiv outsl clc mov add incb fmuls lcall cmp xchg (bad) cltd out (bad) (bad) lcall loop stos add mov pop and and add sub (bad) insb add in ret (bad) jg cmpsl push stos mov idivl lods imul jb jecxz jecxz xchg pop (bad) sub and movsl ds mov lret mov (bad) incl (bad) repnz mov pop pop mov (bad) xor jnp (bad) mov mov or xchg dec xchg aaa ret xchg jbe sub xlat adc xor pop and (bad) (bad) call (bad) jne push lret add ret nop vprotd int3 xlat icebp movsb jns push ret (bad) (bad) (bad) incl push (bad) (bad) outsb sub and ds pop fist fsincos outsb jbe fs in insb lcall ljmp xchg movsl ds stc scas mov dec jae fcoml inc jb mov and pushl mov jl sbb lret inc lods fidivrl jb pop mov sbb mov lcall ja sbb adc in sbb dec (bad) mov clc add sub jb sbb cld push scas loopne (bad) lcall roll mov or push lcall (bad) cli hlt jne outsl mov call lcall mov pop cltd ss loopne mov stos lods incl xor loop cmp sub cli lahf jg (bad) (bad) jmp mov insb daa and sbb stos popf cmp jp pop inc xor cmc (bad) pushl cmp mov rol sbb lods mov sar add ds test xchg jnp jo push sbb std out rcl (bad) jns stc cli push mov (bad) (bad) incl dec sarb pop or xchg push repnz fs lock ljmp jge out lahf test add je out push (bad) (bad) (bad) decl loopne sbb pop ret sarl push xor jg clc pop sbb push jg (bad) mov insl push enter lock (bad) jg pop sahf sarl pop or inc push mov mov mov sub (bad) push movsl aaa pop mov xchg (bad) (bad) call out add sub push cmp mov (bad) or jg jae int3 sub jnp (bad) mov and mov insb pop into sub pop mov and (bad) (bad) jmp dec outsb xor sub push cmp dec decl inc mov out add hlt (bad) incl ds cmp inc cli enter fsubrp (bad) cld popf pop (bad) jns aas fdivrp call lahf call (bad) adc out fstpt cmp xchg aam adc cmpsb int outsl jne (bad) sub (bad) jg cmpsw pop scas lret mov sub sub and pop movsb dec ds pop loopne sar (bad) (bad) lcall sub mov les mov aaa leave mov push cmp xchg mov push mov negb stos repz mov idiv orl idivl mov rolb call addb and xchg cmc test inc (bad) (bad) (bad) ljmp pushf jns add mov cmp rcll icebp sti jmp in int3 loop fcos (bad) (bad) jmp xchg call ficomp pop hlt inc (bad) push xor sub sub sbb mov (bad) jmp sub mov mov xchg sbb mov (bad) mov ljmp xchg mov pop and popa cmpsb outsb mov loope (bad) (bad) push movsl dec lret cmc add jbe cmpsb aad adc into and popa lock cwtl push mov (bad) (bad) jmp add adc bound mov insb mov test nop (bad) pushl sbb cmp sbb fwait jp and addr16 (bad) (bad) pushl xchg out popa jg lods sti jbe jmp addl sub (bad) dec lret (bad) (bad) fdivrp lret shlb cld pop repz adc cmp scas jge pop cli aad add (bad) (bad) cmp inc mov push call arpl sbb cmp jg fbstp ss push adc mov test jp (bad) (bad) jmp push xor mov out lods jno inc jp loope incb mov out lret (bad) (bad) (bad) decl test sahf xor mov movsl sar push fiadd xchg xor push (bad) (bad) (bad) incl out jo int3 push nop add sub fmull pusha pandn sub lret ja mov (bad) (bad) (bad) decl jb test add xchg insb inc rcll imul xlat insb mov int3 aad mov (bad) mov rcr aaa ds mov mov imul cmp adc (bad) (bad) mov sarb cmp jns push xor inc stos outsb pop pop (bad) (bad) (bad) call je sub cmp mov outsb pop pop dec sbb ss cmp push cmp xor (bad) (bad) (bad) (bad) cld mov xor in imul cmp nop in jmp lods push in lcall (bad) jmp loopne xchg das mov sbb ret loopne sbb pop xchg jle push sti mov (bad) (bad) call aaa rorb jp dec adc sbb rcll loope (bad) (bad) jg ds out addr16 jno adc add fmull pushf mov call test fs cld in push (bad) out rol jp jne adc (bad) (bad) (bad) (bad) jns addr16 or sub and call cmpsl pop arpl cltd outsl jb (bad) (bad) (bad) lcall mov add jp ds insl mov cmp xor (bad) xchg mov (bad) (bad) (bad) (bad) cmp pop loop inc lods mov cmp ljmp sub popf jg (bad) jmp sar cwtl jb popf mov jnp test jae mov push mov std (bad) ljmp xlat add in pop inc imul lock leave xchg xor (bad) (bad) dec inc sbb adc fisttp or repnz pop inc jg jo pop mov int3 inc int xchg (bad) (bad) (bad) dec jmp adc inc sahf inc push mov sub fadds push pop cmp cmp (bad) (bad) pushl xchg xorb push (bad) sub mov or mov lcall cmp sub in or dec jp insb mov or repnz sbb (bad) xor iret call and pop fwait aam lret mov inc mov enter xor das (bad) jae call add xor insb xchg lcall test iret je mov imul sbb (bad) xchg pop int (bad) (bad) incl pop lds push push push insb pushfw mov sti or fxam xchg imull dec ja call inc pop fmuls jl std sub add pop daa rorb movl mov push adc pushl les mov mov cltd les loopne enter mov push pop int3 cmpsl (bad) (bad) (bad) jmp pop xor and arpl dec in mov xor and add (bad) mov into lods scas inc mov in hlt xchg test (bad) (bad) (bad) pushl mov arpl test ljmp push sub sti test mov xchg xchg (bad) (bad) (bad) (bad) jle sub push push sbb in and mov loop cmp (bad) (bad) mov sub out daa es cmp shrl xor stos cmpsb push in mov ds pop test sub mov (bad) (bad) (bad) ljmp outsb push maskmovdqu testl adc sub sbb cmpsl dec jmp hlt (bad) (bad) jmp cmp xchg and push pop nop out xchg xor iret stos ret movsl repnz xchg fnop cmpsb sub ds pop lret (bad) (bad) decl add pop inc xchg xlat out test fimul push xchg cmp xor les gs (bad) (bad) (bad) pushl mov adc and dec rol xor pushf test lock inc lret mov inc push push (bad) (bad) jg insl test push mov negl pop inc xchg sbb pop (bad) imul lcall (bad) int3 aaa loope and fsubrl or lcall jp or add mov loopne add mov xor push (bad) (bad) (bad) call mov and mov xlat xchg and sbb (bad) (bad) jmp sbb xorl add mov xlat inc sbb mov (bad) (bad) decl adc jae add (bad) mov jns sahf adc pop inc xchg (bad) (bad) (bad) decl lcall sub xchg orl adc and mov (bad) (bad) (bad) (bad) (bad) incl es iret repz test jecxz mov push sub xor cli ret mov (bad) push incl or leave mov add pop adc loop pop jp int3 push (bad) dec mov xchg mov jae gs dec je in movsb je (bad) dec ds dec (bad) (bad) (bad) (bad) ds pop movsl inc inc arpl cmp lahf dec xchg icebp mov cmp icebp rclb jp inc xchg inc fucomp adc call lock pop (bad) call clc out cmc mov movsl pop sub pop pop stc and (bad) (bad) incl dec out enter add dec dec xchg shrb mov push (bad) cmp jp addr16 call push mov (bad) outsl or cmc pop sbb popf outsl dec insl sar (bad) push xchg push push repnz stos xor mov adc clc lods and mov or incl lahf hlt call lret push fisub sbb (bad) (bad) incl push ficoml lcall adcb adc (bad) (bad) pushl nop and jo iret adc push fsubs call and dec adc lcall aam mov pop push mov (bad) mov ja outsl in xor and lahf fidivr decl pushf jbe jmp insl inc loop pop imul dec arpl (bad) (bad) inc les pop xor pop mov and mov inc push mov and push (bad) (bad) call movl in dec js jl lret inc les lods mov (bad) (bad) (bad) (bad) in sub pusha iret adc jb add loopne mov mov int3 adc lahf mov xor (bad) (bad) (bad) mov sahf sahf popa jg mov (bad) testb inc xlat ret subl popf ss jmp out sbb xchg aas mov imul (bad) mov lods add test adc sub mov aaa dec std (bad) inc jns mov popf pop aad pop xchg push dec movsl pushl test fsub fistpll (bad) xchg (bad) cmc adc ljmp (bad) (bad) call shl pop in mov shrb cmp pop mulb mov inc dec mov jmp pop mov mov sti mov add sub int3 rol in dec movsl mov pusha pop fld (bad) pop pop or das (bad) (bad) (bad) call (bad) xor push inc mov or loopne cmpsb jmp lahf jmp fnsave jne shl mov push sahf imul mov inc test or je lcall xor inc sahf out add ljmp adc xchg push push mov fwait clc pushl std roll jae mov (bad) (bad) incl loop and mov dec and mov arpl pushf sbb pop adc (bad) (bad) (bad) call das inc data16 and mov jl stos jecxz sarb push sti jo andl jmp call cld cli jge and test fldt imul (bad) (bad) lcall out lcall jae test sti jne dec rorl add inc pop cwtl xor jg (bad) fsts xlat jl sbb push and aas repz shlb or and (bad) cld mov ljmp push mov cli mov inc xchg pop xchg adc (bad) (bad) jmp bsf cmp or inc aam cli ror jecxz jge mov dec cmp mov (bad) (bad) (bad) (bad) cmp adcb insb add sbb jmp out aam sbb cmp mov (bad) pop lock inc add push inc mov outsb pop mov mov std fwait (bad) xchg xchg lock ret movsl inc lea stos arpl (bad) (bad) fcomip cmc adc push sbb dec in jge fsubl mov push rcrb pop cld mov jnp jle mov outsl inc clc mov pop jecxz fstpl mov mov (bad) (bad) stc push cmovae test pop pop push push shrb sub icebp fild (bad) (bad) jg add cmp xor dec xor mov das and push (bad) or sbb xlat es fild jmp sbb jge mov cli pop push xchg out (bad) (bad) (bad) (bad) (bad) jmp addr16 lods loopne dec sbb ret add mov int stos and (bad) (bad) call adc dec sahf mov xor movsb lds insb mov std (bad) jnp push cld decl fadd xchg xchg scas mov lock (bad) xor sbb xlat (bad) (bad) call sbb dec push out loope add xchg dec dec fist jg in cmpl jp lods es xchg cmpsb sbb rcl mov imul jbe mov jmp lret out call hlt add adc xlat pop rorl mov (bad) dec jbe icebp mov sarl dec sahf int3 dec addr16 daa (bad) (bad) ljmp mov leave and mov or cmp dec aaa sbb fisubr sub fcomip (bad) pushl or sbbb insl ljmp (bad) (bad) (bad) (bad) (bad) pop adcl rorl orl pop jp outsb mov pop push and frstor les lea (bad) incb push jecxz (bad) cmc mov dec mov mov xchg les mov add mov mov fistp test sarl cmp fidivl pop cmp push and jmp inc aad movb hlt pop dec dec rol aaa add inc push pop jo mov sbb in cmc in addl mov mov and test and jb int3 stos push mov cwtl and (bad) (bad) (bad) (bad) jmp movsl dec or in les fdivp outsl ss xchg jbe mov out (bad) push sub icebp jmp (bad) (bad) lcall mov ret in xor push pop pusha je rorl into pop cmp lods or (bad) (bad) jmp sbb arpl mov jp xchg (bad) mov jle pop or cltd (bad) jg dec mov cmp jecxz inc test xor (bad) (bad) (bad) jge in pop mov ljmp es in mov scas cmc ficomp and out cs neg push out repnz or div mov out xchg in mov test inc out xor mov mov (bad) shll cmp pushf jecxz add test sahf and mov sbb and xor pop movsl jbe mov cmp cmp loopne call push (bad) repz xchg adc sbb push lret dec (bad) test xchg cmp jno and fcoml mov das mov je cmp roll bound fistpl leave or cmp jmp nop mov push jmp test cli mov movsb jmp (bad) dec mov dec mov mov fdivs inc inc dec cld sahf sbb cmpsb (bad) (bad) mov test xchg cwtl mov rcrl fwait test das hlt iret insl hlt cmpsb fcomip (bad) (bad) mov xchg adc les lahf and inc dec and add mov (bad) (bad) pushl jge (bad) hlt inc cmp pop xchg pop hlt push jmp mov xor jmp decl jle mov (bad) mov (bad) dec jg push pushl inc sub jae push pop test js mov dec push and (bad) ljmp ljmp mov mov fcomps adc lahf arpl (bad) (bad) ljmp nop pop sub jno setne aad jmp loope (bad) daa jne adc inc rcrl adc pop stc mov jmp sti add cmp hlt (bad) (bad) sti mov stc dec dec nop inc jge aaa je sub cld push stc into (bad) call push int3 out pop adc call std push mov mov iret push popa mov (bad) (bad) jg ds (bad) icebp loope fisubrl stc mov pop dec loopne mov xlat xchg mov idiv decl fwait and add (bad) xchg pop push cmp insl jle sbb roll das jp jae (bad) ljmp cmp call jge add and sbb (bad) (bad) (bad) lcall pop mov jo push or jp sub loope (bad) (bad) xchg shrl (bad) (bad) (bad) call ljmp or mov mov mov xchg push and mov lcall dec sarl jl pop push mov call into cld and pop jge xor movsl lret ja fistp or sbb (bad) jp dec push fcmove test or and jmp flds movsb incl ljmp ret add xor aad jecxz (bad) (bad) inc push jo add jne std sub fnstsw sub sub or loope jmp ljmp test or jnp mov and mov add cmp lock in arpl mov (bad) pushl or movsl sbb and xchg mov fistp and (bad) rorl (bad) jg sbb stc xchg sbb imul (bad) lcall ja fcomp sahf sub mov (bad) fcomip stc sbb inc adc aas push jbe pop mov (bad) (bad) (bad) decl cmp mov lods add mov pop pop xchg insb loope les ret add int3 fistl fisttpll and mov (bad) pushl dec lea in stc jo push push add mov fisub cmp es outsb enter dec ja jbe (bad) (bad) (bad) jmp fbld (bad) (bad) in adc andb pop sahf and mov xchg test out popf movsb loope shrl pop sar (bad) (bad) ljmp leave roll lods or je cmp or or fs nop bound and (bad) (bad) (bad) fdivl dec mov mov fidiv jecxz push movsl mov or cmc pop jg adc movntps (bad) sub cwtl jl mov dec insb lret cmp (bad) (bad) jg or (bad) jne jecxz mov inc pop or xchg clc stc clc and or clc (bad) cmp mov je out pop scas ds (bad) (bad) incl ret punpcklbw cmp data16 and aad repnz jnp ret (bad) ljmp stos rol push cmp test repnz lret xchg dec hlt (bad) (bad) (bad) mov inc push addb js jecxz push movsl loope dec clc pusha outsb daa inc dec pushf and (bad) lcall cmp dec inc xchg jo cltd and mov adc adc icebp cmc ljmp leave (bad) pop push cltd pop mov gs cwtl std adc (bad) fcomip bound aaa mov pop loop repz out or sar pop (bad) (bad) in dec mov pop mov push stos (bad) dec inc and std xchg xor mov ljmp mov inc shll mov fild ficoml mov dec aad jns loope scas xor lahf jne cmpsb lods xlat xchg mov push stos cmpsb (bad) (bad) (bad) jg cli out movsb clc pop pop in sbb ret addr16 repnz sahf lock test (bad) (bad) (bad) fdivrs push lock add pop pop stc jecxz aaa fwait xor loop mov jnp jle xchg cltd (bad) fnsave fwait ds ret movsl pop mov (bad) ljmp stc call xchg inc sub stc pop out push mov dec or sbb cmc xchg (bad) mov (bad) (bad) (bad) (bad) (bad) out out mov jae lods mov test clc xchg sub sub add repnz pop fisttpl jb je,pt (bad) mov mov int3 outsl scas and jmp cmp pop jne lahf ds cltd loop mov test mov rclb push sbb sub and xchg inc xor pop pop add lds cs mov push xorl mov push in cs (bad) sahf xor jmp cmp or fiadd aaa mov add adc sbb sub addl sahf lret outsb jne dec daa iret loopne pop xor ficompl dec mov pop (bad) (bad) (bad) (bad) cmp rep xlat les jnp and add fild mov fmuls in fwait dec (bad) (bad) (bad) incl inc xor adc scas inc push nop enter cmp test sub and cltd cli add lods cmpl aaa ds movsl arpl adc mov mov mov rclb pop push sahf or (bad) jmp movsb loop jbe mov mov cmp dec test xor push std mov shlb lea sbb pop cmc scas cli cmp lcall lock or (bad) (bad) (bad) call shlb mov lea in cmc xchg sub sub cli icebp inc or mov jb test shrb (bad) (bad) jns adc popf inc mov mov jmp pop add aam xchg movsb adc (bad) push sar (bad) (bad) decl sbb xor adc ss mov pop adc adc rclb sub inc pop clc lret inc test (bad) pusha in mov xchg call je xor cld (bad) push (bad) (bad) mov ljmp decb add jnp (bad) xor xchg cmp es mov testb inc push out and mov (bad) hlt jno call or fldt add jbe or xlat es sbb or mov push adc pushf cmp jo dec (bad) dec pop hlt (bad) inc pop out out sbb aaa push push mov or (bad) shll (bad) pushl inc outsl (bad) mov fwait sbb xchg lods (bad) (bad) (bad) incl repz xor xor clc jo cmpsl xchg jle adc xchg cmp adc es push imul enter jmp (bad) call data16 arpl cmp mov fwait xchg imul inc push popa jns lock mov stos mov ret fdivrs lcall loopne shrl into jl and sbb adc jmp xchg loopne (bad) pushl sahf dec es inc jno mov and (bad) xor adc mov cmp (bad) (bad) (bad) pushl xchg mov popa arpl outsb push lock or dec mov sbb ficomp (bad) mov mov insb jae out mov pop mov or decl cmp clc adc insl lcall sub mov out inc pop cmpsb outsl jmp (bad) lcall add and outsb mov jmp mov loopne movsl (bad) (bad) mov loop pop push xor and xchg ficomp inc fdivr (bad) (bad) pushl mov dec les ss jecxz lcall test add (bad) int dec jb ds xchg mov adc and int (bad) push xchg and gs push div mov fistpl test imul rcrb stc dec sub dec fcomps outsb lock sub cmp jmp and (bad) pushl lcall jne out push popa dec jo divl into (bad) jg (bad) or jae popa sahf insb (bad) (bad) (bad) lcall sub xchg pop dec aaa xor test insb mov adc and enter xor adc and cmp mov jmp shll mov inc xor jle push fistpll insb (bad) jmp (bad) and outsl xor sub icebp cld mov (bad) (bad) (bad) incl scas dec lods pop pop lahf flds mov test cmpsb aaa movsb das xchg pop xchg enter (bad) ljmp insl insl sub inc daa je sub jno xchg cmp dec push lods neg push push jb jge (bad) (bad) call iret dec aaa test mov imul cmpsl mov (bad) sub jno ficoml (bad) fnop cmp xchg inc fnstcw xor cs sub push jo sub inc (bad) (bad) (bad) (bad) mov pop decl jno xor mov inc test jmp mov (bad) (bad) pushl rcrl xor dec pop inc xchg push fldl popa enter rorl repnz sbb mov (bad) (bad) call pop or push out pop lahf and mov xchg jne xchg cmp in cmp fs (bad) jmp push pop adc sub movsb cmpsl xchg (bad) (bad) (bad) inc sti je in fistp je adc ficompl int into jecxz scas daa insb add pushl aas lds fmul out mov sbb adc les pop daa aad cld cmpsl jg into push (bad) (bad) incl das mov call sbb add (bad) call (bad) call xchg push mov movsl jecxz mov addr16 push sbb (bad) (bad) call sub adc call dec stos mov in gs pushf xchg ficomp push (bad) (bad) (bad) (bad) fisub xlat fwait pusha shrb (bad) push push dec pop sbb sub cs hlt adc enter (bad) (bad) (bad) decl roll jbe xchg or (bad) decl and test lcall mov (bad) (bad) (bad) call or adc cmpsl pop push fistl sbb ljmp mov push (bad) (bad) decl sbb mov xor lcall dec sti lret fisttp out lret add aas adc (bad) (bad) (bad) ljmp fwait adc fistl mov xchg data16 scas pop lods and insb fwait cmp (bad) (bad) call js mov sbb out decb sub inc dec push data16 pushf cmc jg add cmc jbe dec adc xchg fildll mov xchg or adc orl call (bad) (bad) lcall sub jmp test sbb daa dec jg ret inc nop add cmp icebp push mov pop pop je xlat add cld call cli pop lea jbe push inc push (bad) (bad) (bad) mov jle jg inc push dec push sbb lods leave push and imul push sub and test jg nop movsb dec pop fs xor xor leave imul mov push popf sbb (bad) (bad) jmp test xchg (bad) xchg shrl outsl lock loope push sahf icebp push push pop jmp xchg inc cmp (bad) jg inc sbb enter in mov enter call jl mov std lahf sub loopne mov dec xchg mov jl cmp (bad) ljmp mov inc cmc in mov pop or dec push lods push jl mov insb push lret push sbb (bad) les (bad) imul stc sub dec and lret add movsl mov std call and inc cld in or daa (bad) lds lds in cld jg insl adc mov xchg ja (bad) aaa dec imul sar outsb dec adc adc inc testb xor (bad) mov xchg inc sub int mov es xchg (bad) repnz imul (bad) popa mov jmp jl lock ja (bad) (bad) (bad) cmp call inc aas leave or add out add lcall pop mov (bad) (bad) cmp fcmovbe in subb cmp jg repnz ffreep jg jb push imul cmp add outsl jo add push (bad) mov jge out insb sti out (bad) (bad) call push sbb dec jg mov sbb pop mov inc sbb inc jecxz incl imul ret sbb cmp sbb leave movsb cmp call arpl das dec and std (bad) ljmp jecxz sub sub shlb (bad) xchg aas stos adc clc dec mov outsb cmp xor dec clc cpuid sarb or jns add add xor add xor fildll (bad) cli (bad) (bad) decl js rdpmc adc and or adc mov cwtl push mov lods (bad) (bad) ljmp pop cmpsl rorb jno in aad adc lret ret cmp mov out test mov das inc lret sub out mov jmp imul jle dec xchg mov aaa and dec dec out sbb (bad) call decl fidivrl or dec and jnp dec sub in lret rcrb scas xchg out in pop fiadd jne int3 in insl mov mov repz into loop (bad) lods insw jae int (bad) (bad) (bad) incl adc fs sbb out sbb es mov mov incl mov cmp mov xchg mov ds mov shll insb and test (bad) (bad) pushl lea jb xchg and jmp push pop (bad) fdivr int3 (bad) movsl adc rol sub outsb cmp sub push sbb jno std mov (bad) (bad) (bad) push sarb popf mov inc xor dec popa dec mov or (bad) out push dec (bad) (bad) (bad) sub jae (bad) jge (bad) add dec xchg cmc in pushf std add js jle int add call cmp jbe test xorl mov (bad) (bad) (bad) jmp and dec xchg negb mov out pop cld jmp fistpll xor test daa test sub inc stos cli (bad) ljmp outsb xchg popa xchg pop incb gs dec cmp icebp incl mov push push in ljmp push fnsave insb sbb (bad) fisubl das (bad) into xchg jmp jle popf pop push out (bad) (bad) (bad) incl adc mov push outsb pop decb xchg cmp xor mov xchg dec push cli (bad) (bad) (bad) out (bad) xchg add loopne in sbb repnz repnz scas orps xchg (bad) push ret ds dec xor ds pop mov stos in and cli lcall lcall pop or addr16 mov inc pop push (bad) incl mov pushf outsb sub add div aas mov pushl mull xor xor fs and (bad) (bad) lcall dec fistpl cmovb hlt sbb fsubr testl rorl prefetch or lea rcll cld and xchg adc insl in es outsl ss je mov dec cmp gs (bad) (bad) (bad) (bad) (bad) jp fiadd or insb rcr bound xchg or dec aad (bad) (bad) (bad) (bad) aas (bad) cltd cmpsb scas jb ja adc push pop insl leave sub test mov cltd sbb push imul (bad) push push inc inc sbb mov inc movsl push pop mov mov jl mov mov cmpsl orb pop lret add in xchg sbb rcll insb lods jge add call int repnz mov mov xchg sahf xchg rcrb xchg (bad) (bad) decl mov ds inc fild int ret cmp push call (bad) ljmp (bad) sbb xchg scas fdivrl in jecxz inc pusha xor bnd (bad) (bad) (bad) fbld jecxz (bad) stos enter sub and icebp and mov mov popf dec cld (bad) (bad) (bad) ljmp xchg sahf stc js add dec jp pandn int pop inc loop and (bad) (bad) (bad) ljmp daa fwait aam je push jns mov iret push aad ret sahf fisubrl xchg (bad) (bad) (bad) push dec jmp or jmp push and and stc cmpsb or stos mov xchg or mov mov hlt jno pop cs (bad) (bad) ljmp xchg push add adc mov lcall pop sbb fild cmp mov pop jo (bad) decl lock or add das hlt jbe inc push pushf sub lcall mov jno push adc das pop cmc (bad) incl dec xor leave ja (bad) lods and gs cmp xlat cmpsl (bad) (bad) (bad) (bad) jmp jp enter mov aam dec stc dec sbb xchg sub ljmp cmp or or cmpsl pop ja inc mov xchg jnp daa es sbbl jno mov mov fmull sub (bad) in sbb (bad) mov fcoml cli (bad) incl in jle rorb sub out les decb cld xchg (bad) (bad) (bad) ljmp cltd and fadd out mov repz inc ja orl pushf jbe cmpsl (bad) add jb lret (bad) (bad) decl cmp adc sbb sahf movsl mov pop stos fdivl inc add enter mov aad xor sub imul jns (bad) (bad) (bad) (bad) jmp mov out sub sbb (bad) cmp mov mov les (bad) (bad) (bad) jmp loope ds mov enter nop out js les into push mov dec ss movsb (bad) (bad) (bad) lcall std jbe add xor adc fwait cmc add inc fwait jno mov ret push cmpsl push xor (bad) (bad) (bad) decl push (bad) mov test nop icebp jle xchg ret nop test and test shr (bad) (bad) (bad) incl cltd xchg adc add iret sbb adc cmp xchg call lods push jge jne jns jmp fild sarb or dec lds sbb pop xchg or jo fistp push jmp mov jecxz xchg dec add inc loope mov (bad) (bad) mov fisub int pop pop xor imul leave scas (bad) mov and mov jmp int3 andnps push in in cmp inc (bad) jbe daa lcall add pop into pop in into into test sbb push adc pop aam cmpsl inc je sbb dec in xchg inc xor inc jnp cmp dec mov cmp std ljmp add sub mov popa ret fcmovne jg add xchg jae int std fadds mov jmp mov (bad) idivl fadd mov sub sub cld loope sub (bad) cmp jg int3 mov push rolb test jg dec adc shrb (bad) jmp inc fdivl mov stc imul daa pop pop jne pop mov ret movl sarb sbb stos outsb xchg jbe sbb jg pusha lods mov mov xor loopne (bad) (bad) (bad) incl or jno ss mov jmp pop pushf lods fs adc movsb lcall jl bound mov pushf xchg and cs hlt and jmp adc mov pushf fdivr ljmp insl enter fdivp test les gs fdivs (bad) jne push std xchg in xor mov jne pop xchg call jnp fsubrs pop mov (bad) (bad) lcall dec lahf pop test jne scas add or dec (bad) in (bad) push lahf xchg call push (bad) cmp push dec lea dec dec sbb sbb mov pop or ficom jg pusha in enter mov dec data16 cmp (bad) (bad) decl inc fidivr ss or pop adc rcl mov (bad) (bad) jg mov (bad) pop push je out out std sbb jno fstl fistpll sub push aas (bad) hlt es (bad) lcall sbb (bad) test adc xchg decb (bad) decl (bad) xor jne mov rcr inc dec lods cwtl jbe test (bad) pushl cmp lea mov (bad) pop add or std fbld repz mov pop lods xor incl arpl pop add xor in lods push or outsl out push add pop das dec push lcall jg (bad) notb add xchg pop xchg jmp (bad) clc mov outsb test adc mov les (bad) (bad) incl mov shll cmpl mov je jecxz fwait gs outsb xor sbb jmp sbb push fildl int sub cmpsl inc mov xchg or mov ss cmp inc (bad) and enter aad fsubl xchg sub (bad) (bad) jmp mov es xchg in repnz push xchg xor test xor pop in push lret adc xor sub loop cld ljmp je add lcall ljmp movsl call shrb int3 mov mov lock and dec cmpsb inc inc fsub xor out mov or mov jecxz sub test add or shr ss int cltd rorl xlat jg pop fcmovbe jb jno or push wrmsr adc mov pop loopne or into push jae xchg push fisubrl xor insl xor idiv (bad) decl stos arpl xor or out pop nop pop jo sub sbb add (bad) (bad) (bad) pushl insl sub pop mov icebp xor sbb (bad) pushf (bad) aad mov loopne add fsubl imul lcall xor les les mov jp (bad) pop sti pop inc jmp (bad) lcall pusha add mov dec (bad) in repnz or dec mov loopne xor or mov shll bndstx roll mov (bad) (bad) mov cwtl fldl imul pop add pop lds (bad) (bad) lcall jle add mov mov loop popa mov mov (bad) jg push mov clc adc dec cmp out into sub test jge scas scas das cli lcall pop call pop sbb fisttp es repz push clc outsl mov adcb es mov ds add sbb (bad) (bad) (bad) incl fcmovbe inc lahf mov sbb and xchg push pop imul mov jnp ret (bad) (bad) decl or (bad) lock ljmp mov pop fildl aaa dec lret and pop mov pop sar xlat sbb insl ror movsb inc mov cmp add sbb xchg sti mov mov cltd pop add cmp push (bad) mov inc xor xchg cmpsl ja inc scas (bad) (bad) pushl sahf push fs push mov pusha repnz stos aad repz clc fdivs fiadd inc les addb jae cmp ss jbe scas shrb movsl loopne jns adc and insb xchg (bad) (bad) (bad) ljmp popa push cmpsb cmpsl pop push cltd dec sbb jae mov fwait nop mull out push ret test jge and jns shrl ds adc (bad) (bad) jmp sbb mov adc jge cli outsl and cmc xor stos js into mov mov outsb pusha sbb mov negb pushl jb mov lds iret xchg (bad) in pop jl loope dec mov stos mov (bad) pop xchg stos ret pop rorl ds mov dec scas (bad) (bad) (bad) (bad) jg sub mov push jno push lock (bad) sbb mov sub lcall fmuls jbe mov rol xchg test ret lret xchg cwtl (bad) jae jae mov push dec nop mov inc xor xorb xor loopne fsubl mov setnp test jmp jmp sub std mov pop insl rorl int pushf adc nop fstl (bad) (bad) fcomip and sub or in or push mov inc das mov cmpsl push pop mov mov jmp cmp pop sbb (bad) (bad) (bad) jmp fidivr lock xchg in inc imul or mov aaa out loope cmpsb popf es push jo out mov incl iret jg ss dec dec fadds jg fisubr push jae mov (bad) lock mov (bad) (bad) (bad) in sbb push push jp add sub jo popf test sub incl and (bad) mov mov pop jmp xchg adc xchg (bad) lret xor ja lds pusha (bad) (bad) (bad) lcall xor mov jp je cmc xor adc int iret dec popf mov (bad) (bad) (bad) pushl les mov out stos lret or jns sbb sub sub cwtl or outsl hlt xchg (bad) mov leave popf aad and sahf add clc (bad) inc xchg inc jl (bad) fdivr adc sub mov dec imul (bad) (bad) (bad) incl push fsubrl pmulhw cmpsb punpcklwd dec add mov in fs cmp pop (bad) (bad) (bad) (bad) aas add push pop sub adc sahf outsl icebp jg nop push call cltd or (bad) incl add and adc jae fimul (bad) (bad) decl int3 jns jmp push dec mov xchg icebp ljmp fidivrl add add add or enter sti push (bad) (bad) (bad) call xchg cmp mov int outsb or roll (bad) fimul cli jmp (bad) sub in roll sbb iret test or clc (bad) lcall fsubrl inc fcmovnb pop push push scas mov mov mov leave in jbe dec push xchg js or jno or incl mov and arpl jne js mov inc (bad) (bad) call (bad) arpl xor mov or out sub leave mov xor (bad) (bad) call xchg inc mov pushf lods mov movsb add mov lods shll pop scas inc xchg jmp rcrb rolb fisubr out dec js dec add (bad) decl pop ljmp in pop xchg dec call add adc mov sahf sbb sti (bad) (bad) (bad) lcall adc insl aad mov push test push sub test and and hlt mov (bad) call mov mov jns out int xchg fstpl xchg out call mov jne pop dec jp jno,pt test (bad) (bad) ljmp and mov mov loope or shl push mov inc bsf bound arpl imul inc push (bad) jmp (bad) (bad) mov jno lods xchg test fsubs sahf push cmp cmp ds and (bad) pushl fstpt add bound or mov test insb push es push push push pop insb lock push push loop pop (bad) mov mov es incl addr16 mov subl mov movq push and (bad) xor (bad) (bad) ljmp or fs out out test pop push shlb jbe xor pop stc jle out adc aam movsb roll jmp pop daa (bad) rol xor lock sbb (bad) (bad) lcall call adc dec stos movsb jne or sahf pop fldenv sbb popf sub (bad) pushl pop xor cmp xor or mov dec lock enter mov call push inc (bad) icebp fs outsl mov jg decb pop das repz mov (bad) stc jb aad movsb adc es sbb rcll jmp xor jns (bad) neg fbstp xor loopne xor in imul (bad) lcall aam addr16 and stc outsb lods dec jecxz pop jecxz iret hlt mov out mov inc pop pushl push ljmp mov jmp out xchg and or mov aas loopne mov insl jbe (bad) (bad) decl xchg in insl rcrb inc push loope int mov (bad) popf add gs je xor imul inc mov and and jmp mov enter adc (bad) (bad) (bad) in fidivr jle in (bad) fdivl lret mov or cmpsb or (bad) pop loop gs mov scas adc and in nop sbb addr16 jg ds sahf (bad) incl mov adcl aaa xchg insw inc mov xchg sub xchg (bad) (bad) fcomip inc cmc pop push adc adc out sub out mov out push pop clc pop (bad) jmp lsl (bad) std add pusha inc jl push mov or push stc test inc popf jle jns nop cmc or dec mov jno int and (bad) (bad) mov pop bound (bad) insb xchg mov mov pop rclb ds pop jb pop lods adc mov jge (bad) int3 out popf in insb add sub inc js lret inc daa sti rolb (bad) (bad) (bad) fistpll popa mov out insb xor add push test cmp xlat xlat pusha xchg sub fsub lret roll adc jne dec push jns cmp (bad) mov dec pop out push mov add mov enter bnd pop add das std outsl mov mov lock (bad) into push xor int3 mov mov addr16 or out (bad) into ja leave and test test cli lcall mov xor mov mov jnp push pop pop outsb cmp incl mov push xchg cmc pop jge (bad) sbb cmpsb mov xchg popa jle or ljmp pop inc test lahf fadd (bad) inc pop fldlg2 push mov or stos pop sbb adc stos dec adc (bad) es or hlt (bad) mov lcall jmp cmp repnz (bad) ljmp pushf fs mov sahf stos fdiv mov cmp dec rorb sub dec popa push dec fwait (bad) (bad) incl push push jmp and nop jns repz in and sbb jecxz psubq push and (bad) leave pushf or in xor nop pop (bad) (bad) (bad) decl mov out mul inc and fdivrs and lock (bad) (bad) call dec fdivs cli fnstsw jmp popa pop sub int3 or test (bad) (bad) (bad) dec or lret cli or dec sbb mov (bad) mov cli fisubl (bad) shll sub (bad) (bad) (bad) (bad) js out ret mov loop daa sub xchg fnstcw iret out or (bad) arpl or and aaa jnp push (bad) (bad) (bad) decl nop or pop cltd pop ret cld xchg jmp adc pop sbb jo imul ss (bad) jmp xor imul mov sub sbb jmp clc out mov (bad) (bad) ljmp pop mov mov std (bad) xor mov cmp repz jg pushl mov mov sub adc jp cmpsb adc sbb (bad) (bad) jmp cli dec mov cld imul pop cmp test jne lea (bad) (bad) (bad) decl or (bad) aam mov clc aas loop cmp mov mov mov js iret (bad) (bad) (bad) jmp push pop cmp sbb jo pushl test (bad) and or push and hlt add mov inc ljmp aas ror sbb or sub xchg add mov xor sti (bad) (bad) lcall pop mov jecxz das stos and push adc xchg mov sub lock (bad) (bad) push dec fsubl aas dec push push sbb jo mov lcall ret scas addr16 adc test sar (bad) mov push fwait pop pop xor pop sahf jp test lret sub fild imulb data16 rclb fwait xchg mov pop std call fdivs dec in adc test in in lahf and and ss into dec imulb dec pop add cmp push dec cltd daa sub cmp outsl adc jg mov (bad) (bad) decl adc fist insl movsb mov sbb xchg jecxz sbb ljmp or (bad) incl in add pop xlat lret add or das ja popa cs stos cli (bad) (bad) (bad) jmp push or xchg mov pop inc (bad) and or fisubrl dec lret sub mov outsb sahf hlt outsb add push xchg lods lds jg add push dec xchg or xchg ret mov (bad) aas in adc push outsl addr16 les xchg js data16 imul (bad) (bad) mov pusha sub jns jecxz pop push call movsl cwtl mov cmp dec loop popf ljmp mov ja inc repnz mov cli (bad) ljmp mov ret pop and and inc mov pop hlt push sbbb or imul lret mov push and pushl adc or (bad) ljmp ss ljmp (bad) repz push insl xchg xchg into gs out incl inc sub push sub std je ss jne mov or add ljmp sub mov mov mov sub insl dec jle ja adc push and xchg stos clc (bad) decl imul or jl lock jge adc outsl ljmp sbb iret push xchg or test sarb inc (bad) adc mov shrl rcrl jns test cmp push cmpsb or (bad) fistpl cmp fisttpl js (bad) (bad) jmp inc imul adc mov mov jle (bad) mov mov jns stos icebp dec pop mov (bad) mov into popf add sub cmp rorb fs (bad) (bad) (bad) lcall cld movsb es or jno pop leave inc xor cli std push popa ja and pop addl or xlat movsb xchg cs ja mov (bad) jg insb sbb mov fs es xchg cltd push mov jmp pushf es xchg outsl dec (bad) fild in jmp mov jecxz repz and cmc rolb dec dec pop cmc repnz add decl decl mov pop fidivr xor xchg (bad) push cltd (bad) (bad) (bad) incl push aam pop jp stos dec jb shl clc xor cs mov fmul add mov ret xor dec or cmp pop (bad) (bad) (bad) (bad) mov cmp xchg outsb fs mov shr nop add lcall inc scas (bad) (bad) (bad) (bad) fadds sbb sbb dec std test cmp push pop les mov sti (bad) (bad) (bad) call cmp mov inc enter sbb in data16 testl inc stos stc inc lods (bad) jmp (bad) mov aam jg jae outsl mull sub fistpll ret jnp mov popf xchg push add mov dec cwtl sar insb add (bad) (bad) call adc pop test inc mov dec shrb fmull xor sub inc adc test add lcall in fwait shll (bad) lret sbb out mov jmp outsl inc js add inc jle cli jmp aaa cmp or popf lods add (bad) (bad) pushl xchg (bad) fimull lds nop mov xor ja push jae fsubl lods xor ret or xchg gs imul push adc xor mov push test lcall ds pop and pop lcall fcom je sub pop pushf (bad) (bad) incl in push sbb push jno in in xchg mov inc decl std addl push js sbb in cmp (bad) (bad) call xchg push fcomi pop in mov scas push test insl sub pushf test icebp (bad) (bad) mov mov test mulb sbb aaa inc mov and mov mov and cmp xchg push leave jecxz xor push fistpll cld add push pop scas inc fsts faddl clc (bad) out clc decl hlt clc inc or add push mov repz fldcw mov ds xor in xchg pop jne iret mov into es pop adc stos lret sub (bad) (bad) (bad) fiaddl fs inc xor popf sbb mov adc ljmp mov adc fmul stos cmp fisub jl jo add (bad) js pop push lea jo test push shl or sub icebp pop and dec movsl bound repz xchg (bad) pop in fcomip fild push scas or xor mov jecxz loop dec nop mov sbb push sbb jecxz (bad) or std (bad) (bad) js dec mov adc sub sbb stc sbb (bad) jg ds pop rep sbbl push pop pop dec and dec test mov (bad) (bad) (bad) call add sbb adc jb xor sub leave scas or mov (bad) (bad) (bad) sti mov mov jl jno cmp inc cmp pop sbb pop dec xor (bad) pop loopne test xor jp in loope and inc push (bad) mov pop imul cmc pop repnz mov call mov sub xchg enter pop cmpsb push subb int3 fist (bad) fildll fimul mov fsub mov mov cld daa sub ds and (bad) (bad) (bad) (bad) sti fwait push jge aas fnop loope jg dec sub xchg dec loopne or dec outsb mov xor (bad) out adc cld mov dec push lods arpl (bad) ret cmpsl push sbb inc sbb xor push cmp (bad) in out mov adc inc repnz bound lods in pop in add (bad) (bad) cmp imul or cmpl jbe and cmpsb (bad) lcall ret jae insb sub pop fstpl enter test inc cld incl popf mov mov into in enter (bad) (bad) jg lds clc aad sub test xchg jle adc repnz add (bad) fbld xor xchg lock pop push push decl cli rolb inc dec cmpl and pslld inc pop pushl dec dec mov ds pop mov sbb (bad) (bad) call sub sbb mov inc xor jns jne daa lock jno cmp (bad) (bad) lcall push ds inc lahf popl push or xor and mov repz (bad) shlb xchg sub xor stos mov dec movsb cmp (bad) fbld leave lret cmpsl jp xchg lods push jecxz movsl add scas xor add test into mov in xchg and sbbl lahf imul or adc jge jmp mov repnz mov sbb nop dec es ljmp sahf pushf and dec sbb sti stos add jmp ds rol xorl (bad) pushl mov popa push mov es je jne,pt pop xchg cmp dec sub lcall inc test cmpsl je inc cli fmuls ljmp outsb add jle (bad) (bad) (bad) decl outsb je mov xor fs mov mov mov fwait cmp (bad) (bad) decl lods adc pop std stos sbb xor or in data16 std mov dec xchg add (bad) (bad) (bad) ljmp cltd fnstcw cmovne dec xor in aas hlt cmp and (bad) test push in imul imul inc and add data16 call fsubr es fsts inc xor adc mov ds xor ljmp mov mov aaa (bad) pop sbb int3 pop shll call stos in sub imul mov (bad) out pop nop jne sub jmp dec dec push test jmp push adc push sub inc fstpt repnz add push sbbb loopne (bad) call cld subl dec xchg or cs in loope ret cs cmpl or push mov ds iret std (bad) (bad) decl jnp or xchg mov loopne sbb add fstpl adc data16 mov add (bad) inc jg mov js and pop std outsl or mov pop (bad) ss and call ljmp pop std mov sub inc jae shll test push hlt push out cmp (bad) (bad) incl std dec dec xchg clc bound and call mov out cmpsl and popa pop (bad) (bad) jmp jno push (bad) mov aad nop (bad) loope call pushf or lods std add (bad) (bad) (bad) pushl ja cmpsb fucomip sbb cltd movsb cmp xor scas jbe repnz xchg (bad) (bad) mov mov (bad) dec inc negb dec test std mov (bad) (bad) (bad) mov enter imulb je int3 add mov or or outsl repz scas mov outsb mov (bad) mov (bad) (bad) (bad) mov mov jne xchg rcrl out add xchg cmc push test mov (bad) (bad) ljmp cmp inc repz pop sub repnz sub xor sub xlat (bad) jg (bad) and inc push insl lea (bad) jbe adc lods xor inc (bad) cli push push sbb mov (bad) (bad) (bad) ljmp iret shrl inc mov aaa sbb xor jb pop aaa xchg das icebp repz scas (bad) jae test or sbb call hlt dec ds jg test scas mov push dec cmpsl add inc add and (bad) ljmp mov ret test or mov and inc inc xor incl inc ret jb hlt mov into xor and insb adc (bad) (bad) lcall mov mov mull fs fdivs jns shr scas push dec out (bad) call or jbe add jae push or jno mov (bad) imulb fdivr jg jmp jo rol sub leave mov rcll ret sub and mov (bad) incl sub iret push add xor mov add leave mov add inc std mov mov adc jg xchg jbe out inc push je push stos rcr pusha pop mov add pop lock inc ds or inc sub aaa (bad) jg and cmp xor lcall (bad) fiaddl lods aaa repz xor jle cwtl inc test mov cmp jnp cmpsb (bad) (bad) (bad) lcall mov pop mov pop mov bound inc fmull dec add dec sub int3 hlt inc mov (bad) (bad) decl out jmp adc shl xchg gs imul loopne (bad) mov mov mov addr16 and mov add pusha jmp leave mov pushf test push (bad) mov out enter ljmp mov inc les ja (bad) (bad) (bad) jmp mov clc fwait hlt push je or push loopne xchg adc inc bound or (bad) (bad) jg mov add fsubl rol je arpl inc jae cld pop cs (bad) outsb pop iret arpl adc sbb mov dec push xchg and (bad) incl fstp aaa test push mov out sbb inc cmpl dec enter ds jnp out jo (bad) (bad) call or aaa adc mov pop mov push leave cmpsl lret mov xor jmp cmc push adc outsb push idivb inc mov adc (bad) xchg aas pop imul lods fdivl loope mov cmp cmp sbb mov sti jmp xor lahf rol insl push mov xchg (bad) (bad) (bad) ljmp pushl inc push and call (bad) and lret dec (bad) mov js push mov xchg cmp cmp (bad) (bad) (bad) out ds sub inc ret mov xchg fs aad aad lods (bad) cmp (bad) (bad) (bad) decl stos call mov jle mov xchg xchg push dec jbe inc addr16 adc dec lock (bad) (bad) pushl iret mov jbe std subl test xor sbb (bad) xchg sahf fwait push popf (bad) hlt (bad) pushl and stos mov xlat and loop es in push dec insl je or mov (bad) pop jmp xchg mov push jb or cld xchg scas sub cmpsb mov jmp js sub inc roll test fcoml aaa leave ds sub push cs xor cmp cmp (bad) (bad) out stos mov push mov mov adc cltd jle out scas jnp pop ret sbbl ret cmp jle call ds push bound inc sub xchg leave insl mov in outsb in sbb clc mov and and mov fcmovne or dec icebp jge xchg imul decl push ror adc test ret push fnstenv in fisubrl push jo (bad) (bad) ljmp out movsl add mov into hlt sbb ja and data16 adc xchg clc lock (bad) fcomip addr16 push mov xchg xor mov cmp das adc and push or decl add outsl ds inc (bad) jmp outsb mov add push xlat adc inc test scas repnz pop (bad) (bad) (bad) lcall (bad) call cmc pop mov sbbl test pop popl aas push fiadd add jns ljmp call inc cltd and js add ret sar (bad) (bad) ljmp cwtl test lcall dec pop incl shlb mov fimull (bad) incl lock sub mov sbb lods fistl aaa iret aad (bad) pop xchg je decl push cmp fcmovbe sub ret call push (bad) (bad) (bad) (bad) cmp xchg mov sub cmp movsl fidiv and (bad) pop (bad) (bad) (bad) (bad) fldl (bad) add (bad) or rorb mov adc and aad lcall xchg in das (bad) (bad) (bad) ljmp in ret dec dec jp dec or divl movsb movsl mov push jo les dec aad mov loopne jmp mov dec xchg jb mov push mov (bad) ja call jae push rorb adc mov lcall push xchg inc add mov inc dec push sahf cwtl or (bad) fisttp inc jecxz pop xchg or (bad) (bad) ljmp fidiv lcall mull sti pop sub and pop mov push jmp and add fiaddl adc (bad) (bad) incl out lock mov xchg mov sbb pushf aam pop jle cli das and packuswb or fmuls jge or int and pop jnp cmp scas pop or or ljmp mov mov in push jmp enter das adc icebp stc push xor ja lahf mov xor inc fwait es (bad) (bad) (bad) clc jl sbb (bad) ds rcl pusha cmpsb fs dec and xor popa or rcrl pop icebp push add inc dec cwtl xor and sbb push lcall loop mov pop add loop mov es iret cld push iret cmp mov aaa push pop fwait jecxz mov insb jmp push mov lods cli sbb pushf in inc mov (bad) (bad) call jecxz popa cmp ror sub push lcall mov testb movsl decl mov gs cmp loopne jecxz (bad) incl enter in fpatan xor push mov out sub sar decl mov jmp jg xchg jnp dec inc mov (bad) mov push lea and in stos cmpsb xchg (bad) (bad) call stos addr16 adc idivl cmp xor jecxz outsb sarb ds mov insl test jne push int lods pop lods popf xor (bad) cmp dec jns mov (bad) rclb xlat push xchg add adc push sbb ss (bad) (bad) incl sbb push jl in sbb mov popa sub jle lcall pushl dec inc (bad) aas fs fisubl dec pop sub add add fildll cmp xor fs dec push cmpsl mov adc nop (bad) das daa test inc jb pop (bad) loope sti cmp in out ret ret mov xchg fidiv rcrb inc pop mov cs (bad) pushl push mov xlat arpl push xchg jecxz push adc xor outsl cmp pop (bad) (bad) (bad) call inc call aad fnstenv xchg enter (bad) xor popa jae andl dec add sahf dec cs add push inc fnstenv ds sbb cmp (bad) incl outsb pop jecxz xor ds int pop pop mov (bad) fcos out mov jg repnz cmp xchg cmpsl popa data16 sub je enter inc std jnp pop mov cmp ds dec push push pop das or push cltd adc dec lock jle mov call aam sahf inc inc pop fimull mov (bad) (bad) (bad) (bad) ljmp popf add xchg mov xor and or mov sbb out test (bad) fsubl hlt data16 cmp cmp mov arpl adc mov lods dec adc cld lcall mov cmp jmp pop mov xor cli or (bad) pushl inc popa cli jno mov out (bad) aaa or cmc arpl (bad) (bad) incl (bad) mov dec ffreep (bad) imul (bad) int3 (bad) (bad) (bad) jmp gs outsl dec xorl fmull jle fcoms add stos inc mov (bad) rcl inc test aas inc cmp mov fstpl push inc pop and (bad) add inc and xor lea ljmp divl fsubrp push aad mov xchg dec fild aam leave xlat mov idiv lcall mov (bad) test adc mov sbb std push mov mov or jecxz call inc (bad) sbb inc xchg cwtl cmp cmp xchg push mov or cmp mov (bad) (bad) decl mov (bad) and push (bad) mov or fdivrs adc cmc or jae call das xor sub fwait repz les in jp pop repnz sub incb dec test cltd imul xor sub sub lcall loope mov inc xchg (bad) push shlb loope movsb dec sarb loope (bad) (bad) call jns sub fildll add outsl jle adc pushf loopne xchg pop pusha xchg add call adc mov out faddl lods push or das mov push mov pop movsl push push cmpsl jge mov in add (bad) dec pushf (bad) (bad) (bad) ljmp pop enter dec adc fwait mov inc mov test mov (bad) (bad) (bad) insb pop cwtl mov (bad) dec jno inc push test mov movsb int3 push or (bad) (bad) mov mov cmp cmp outsl xor xchg xchg jo (bad) (bad) call ds (bad) mov xchg jmp ss scas in add rcll push (bad) mov push (bad) insb cmp je jle inc mov (bad) dec (bad) rcr (bad) pushl icebp loop adc cmp pop (bad) mov jno and push cs jmp mov call cmpsb pop add std insl (bad) (bad) out cli adc xchg cmp pop mov push xchg repnz cmpsl adc cld mov (bad) xor fstpl (bad) jmp outsb orb lret (bad) pop mov jge or lret test pop repz mov (bad) call push lock popl add lea fcmovnb hlt sbb mov fdivrs mov dec or dec sbb sub (bad) (bad) (bad) ljmp ljmp test imul push cmpsl adc xor push jae mov pop lock jnp pusha cld popa cmp popa rolb mov (bad) lcall pop xchg out ficom decl cmpsl cmp inc and (bad) (bad) incl mov xchg pop (bad) cltd (bad) jo clc xor pop push push fdivs mov sar xor push mov jnp dec xchg loop mov jns or push mov (bad) (bad) call xor fist mov (bad) addr16 mov mov inc xchg mov (bad) (bad) decl mov jge xchg mul pop in inc dec arpl adc sbb (bad) (bad) incl cmpsb fcoml push lar lcall or (bad) lcall cwtl mov jb pop punpckldq scas mov cld repz dec (bad) (bad) (bad) (bad) jg xrelease sub dec jbe push pop xchg (bad) scas sub jge or imull (bad) (bad) push sbb jns jmp jno (bad) sbb js shlw pushf add mov xchg mov cmp rolb mov das es sub pop push insl xchg mov loope push jo (bad) decl dec xor int3 fldenv mov fcomps sub (bad) call loopne leave out (bad) aaa inc jle sub xchg fiaddl adc push cli sbb in (bad) lcall and andl lahf inc loop add inc jmp loope data16 or (bad) fcomip jmp push dec add call push push enter bound pusha push and lcall push mov push insl xchg mov cs cmpb ss pop into pusha popf cli (bad) fldt dec push (bad) (bad) (bad) in push mov mov sub mov jnp jle jl popf (bad) (bad) fildll and movsb jp sbb pop sub xchg add (bad) (bad) (bad) lcall cwtl xor mov jae jle dec cmp sbbb adc push es out cli stos pop hlt scas cwtl pop lret and mov das out inc sbb sahf (bad) (bad) ljmp ds sbb test mov or pop je xchg push xchg mov fisttp imul lcall lret scas dec flds rcr add scas mov xor sub cmp mov aam push sub xchg adc cmp movb icebp and stos dec loope jmp inc imul (bad) jl divb ds shrl adc lds btr movsl adc (bad) pop imul jns shrl fnstsw mov cmp push inc mov gs (bad) add mov lds (bad) (bad) (bad) (bad) mov adc adc insb sub mov imul (bad) das (bad) fcomip (bad) jns mov add inc clc mov jb imul icebp andl call repnz out mov jg enter (bad) fistpll jecxz or andb (bad) shll cmp outsl mov pop (bad) (bad) (bad) jmp xor (bad) (bad) add lds jne inc shrl scas js loop fxrstor aad push fs (bad) (bad) pushl into adc cltd or push in iret pushf or ret xchg fmuls sub mov scas pop pop ret mov das jne adc cli jns (bad) (bad) (bad) mov push adc std add sbb les cmp add pop lcall (bad) cmp (bad) mov or dec dec adc jb cmp int3 (bad) (bad) (bad) lcall jecxz or push in mov popa cwtl xor cmp stc aad lds out call sahf mov pmulhw cmp call mov or and cmp in mov (bad) (bad) (bad) cmp xchg add cmc pushf aas mov in xchg sbb aam and mov add pushf in cmp incl outsb fwait hlt mov dec ds (bad) (bad) (bad) jmp and mov push xchg int pop or cltd aam (bad) bound push xor mov adc jl outsb push mov push push or ljmp mov inc adc adc xchg lcall mov scas inc hlt dec out pushf push (bad) (bad) lcall push std stc pop push inc cli or (bad) mov popa push adc push lds sub dec ficomp push xchg shrb das push (bad) (bad) (bad) push out mov mulb insb push sub pop aas add push lcall (bad) cmp nop pop lock jbe in pop mov xor pop test iret fistl ds aam mov inc insl bnd push inc (bad) mov movsl add mov or movsb mov mov fisttp mov sbb cmp in test (bad) (bad) (bad) call in jnp xchg (bad) (bad) mov jl xor sahf out xchg mov (bad) (bad) inc push out xchg movsb es lahf (bad) scas lcall mov dec out rorl pop sbb clc ljmp fdivr dec (bad) ljmp pop push mov fisubr jle test stos xchg inc pushl les cmp sub pusha dec push cmp (bad) (bad) ljmp adc inc repnz mov or repnz inc cmpl adc dec in inc lret dec or (bad) stc (bad) pop push jp (bad) roll rorl (bad) mov es jp test shl or pop jecxz sub (bad) fcomip pushl rcrb mov (bad) dec pop xor pop adc (bad) (bad) (bad) (bad) sub sub add push jnp push lock push mov inc mov (bad) stc lcall imul xor adc xor (bad) (bad) (bad) (bad) (bad) jle aam or push inc decb dec mov stos js (bad) daa mov xor dec andb or mov mov cmpsb xor jg adc lcall xlat shrl notl push push loope push mov pop mov outsl cmpsl enter sbb mov fnstenv cmp mov rclb lcall decl popf test lods pop xchg mov in inc and or fildll mov fnstenv test (bad) (bad) (bad) (bad) mov lahf add out icebp sbb inc (bad) sti movsl push arpl pop or mull orl jmp subl mov mov mov mov icebp ds daa lods pop xor test (bad) xchg dec jns add fildll daa sti enter push clc pushl lret mov xor ficompl or daa mov (bad) ljmp js sti mov rclb shrl and cmovge mov (bad) (bad) incl pop cmp lcall dec into testb pop dec sub mov test jns (bad) pushl jg lods sbb out xchg xor adc fs cmp pop dec (bad) (bad) jmp (bad) xchg fsubrl xor fwait adc dec pop cltd push mov fdivrl sti mov decl aad int jb pusha xlat jns pop inc ja test sbb scas ret cmp xchg adc (bad) (bad) jmp call scas dec test lds ja ds (bad) jne or stos add stc dec jbe sbb (bad) (bad) (bad) lcall stos mov pop popf inc jge inc jle ljmp nop hlt cmp sub mov pop mov xor mov pusha fbstp cld (bad) (bad) (bad) call (bad) sub mov fsubrl xlat repz (bad) jg sub fwait in pop lret sbb pop (bad) mov int pop add pop cmp mov adc lret stos ss (bad) (bad) decl sbb mov addr16 into hlt lods mov add imul or (bad) (bad) (bad) decl jecxz fsqrt in mov and loop aam xlat in fsincos (bad) pushl mov lods jns (bad) mov iret pop data16 ret loopne pusha test sbb (bad) loopne inc cmp scas (bad) cld popw (bad) (bad) (bad) ljmp pushf loop pop push (bad) (bad) sbb pop push movsb inc add mov lea pushl dec ds adc mov sbb addr16 es pushl xchg bound add inc cmp arpl jp loope xlat push and inc push popl adc popa pop mov incl jl sahf pop and mov lahf pop push xor loop lea flds cli pushl xchg mov mov rcll inc mov jmp std xor mov aas adc cwtl sbb nop xor ljmp das movsl push aad xchg pop push dec jmp pop pop mov cli (bad) incl jp xor addl cmc test dec (bad) (bad) ljmp xor movsb scas jns jbe inc and pop pop jb xchg (bad) int jmp (bad) (bad) incl push pop mov sbb inc shrb cmp mov pop cmc pushl fimull aam push ds jge xchg add inc pop nop (bad) (bad) (bad) (bad) (bad) inc and xor xchg je add test pusha bswap jp pop or (bad) (bad) mov movsb cmpsb xchg and xor dec cltd inc sbb sub pop sub js ljmp xchg icebp mov mov fwait cld (bad) (bad) (bad) mov inc aad loopne pop cmp mov or and and dec mov jecxz fcoms lods cmp (bad) jnp (bad) decl mov je push xchg push cmp ja test int (bad) (bad) jmp inc pop or (bad) (bad) lahf jns psubd inc dec fcmovb and cmpsl sub (bad) (bad) (bad) call adc inc int3 pop cmp sub mov in xchg push je test (bad) (bad) ljmp adc mov rcll jae lods stos sarb pop dec int3 in nop les push xchg jns jp (bad) (bad) (bad) lcall int push mov outsl adc rolb bound (bad) mov aam pop mov (bad) decl pop sub pop insl int xor (bad) xchg cwtl mov stos mov out lret cmc xlat mov xchg adc xchg out test add sar (bad) decl jae xchg sbb mov cmc lods icebp into xchg inc xor push stc mov xor stos cli (bad) (bad) jg sub rcrb ficoml mov push fmuls xchg lds es pushl sbb das jne push (bad) mov loop push lret push (bad) incl popa lea sub sub pop notb shl jecxz (bad) jmp shr in jle repnz and jle mov aas ds (bad) push test loopne iret inc pushl (bad) incl mov sahf jl cmp in (bad) (bad) jg pop jmp xor xor xchg jno lea mov (bad) (bad) call jnp and (bad) xor mov push inc and fisttpl ljmp xor (bad) pushl mov cwtl mov push pop xchg cmp push pop cmp dec jbe mov mov cld test mov xchg push jecxz (bad) jg (bad) into rcrl pop lret add movsb js jl (bad) (bad) (bad) (bad) cmp les ret add jo jmp out push outsl in xchg adc add (bad) (bad) (bad) dec ja push push mov ret lret je xchg loop add ret fidivrl lods or (bad) (bad) decl rol pop and inc (bad) sbbl (bad) sbb adcl js xchg (bad) (bad) ljmp lret in cmp jp mov movl mov (bad) (bad) (bad) decl hlt mov pop into int3 pop hlt (bad) jae insb xchg cmc mov (bad) sbb ss push sti ljmp and icebp dec incl jmp setnp jge sub (bad) scas xor stos inc clc (bad) incl insl lods jg pop dec cwtl cmp aam sub imul (bad) scas mov sbb or mov push xlat rcl sub push jecxz (bad) (bad) push push jbe popa jl test sti push sbb xor jl jne (bad) jg add cmp dec je inc jp (bad) popf (bad) or jmp ds enter leave dec pusha (bad) (bad) call mov cmp inc loope cmp popf lret sub (bad) xchg popf sub mov (bad) jmp jae pop (bad) push iret jge xor cs mov lea xor arpl (bad) (bad) ljmp sub imul add stos adc and sub pop sub or (bad) ljmp sub popf pop out outsl inc out (bad) sub dec xchg mov aad mov mov das xlat (bad) and (bad) (bad) jmp lret mov push mov mov into xchg jns push (bad) icebp (bad) (bad) (bad) (bad) decl lahf push lea ja push and mov xchg xchg pop fbld imul ljmp ljmp test outsb push sbb data16 stos mov aad imul movsb cmp mov in ljmp stc and (bad) out pop out mov xchg mov cmp mov popa or popf inc (bad) (bad) (bad) inc xchg xor or scas or sub jne out cmpsl jno or (bad) push sbb (bad) decl add mov test int cld rcll jmp incl lea in pushf lcall (bad) mov (bad) dec das sbb lea gs fisubrl test scas pop jge pop js xor std in faddl (bad) (bad) (bad) decl sub fs ds ret ret loopne jecxz add cmpsl fwait mov pushl or push lods faddp push aam add lcall jecxz push mov fwait jno adc push push xchg xor insb in xchg (bad) (bad) (bad) inc movsl icebp mov js inc sahf imul (bad) fnstcw jno mov push clc mov in push sbb nop into (bad) loop les xchg ss mov push lcall xchg add cmpsb incl aas and and cmp rorb (bad) (bad) pushl (bad) xor gs imul into adc xor aaa jb jecxz (bad) lea dec les push push gs push ds (bad) out and adc lcall call sahf lcall xchg adcb sub or dec mov jnp dec pop aad (bad) (bad) (bad) ljmp idivb add fmul fistpl jns testl or stos sub (bad) mov jmp push add daa or adc loopne arpl cld or clc movsb lock icebp (bad) (bad) ljmp inc push into mov aaa mov and in inc mov (bad) aaa out xchg adc les (bad) jb imul pop (bad) (bad) ljmp sub xchg int loopne adc push fstpl mov in push movsb (bad) (bad) (bad) call jno adc mov pop lea add mov (bad) mov outsb mov (bad) (bad) lcall les sbb push sbb test popa cmp xchg push cld cld repnz lahf jp repnz nop fist xchg push call loopne push imulb dec out cmc xchg mov out pop in jnp fwait (bad) (bad) (bad) mov stc and jmp jg jb aas iret and xor cli push (bad) add (bad) ljmp xchg pop ficomp pop push inc sub cmp dec in dec sub dec testl (bad) xor daa (bad) adc sub adc rolb inc leave pop inc (bad) (bad) (bad) decl jbe or test cmp (bad) adc sub fadds sub (bad) call out hlt aaa pop cmp imul jo pop fwait jle leave push test or in ljmp iret (bad) jp xchg pop dec sbb (bad) iret js lods lcall lcall mov (bad) (bad) out xor aaa aas pop cwtl lcall mov xchg cmc (bad) (bad) jp push xor addr16 scas ss pop cltd inc loopne pop push std inc mov and or ret fistpl mov out (bad) (bad) (bad) (bad) mov sub inc (bad) xor mov mov pop cmpb dec mov or (bad) (bad) incl cli add jbe (bad) aad inc jecxz mov (bad) rcll pop jge pop in (bad) (bad) jmp (bad) and mov mov push arpl jbe xor xlat lods call (bad) (bad) (bad) (bad) in into loopne jg xor pop mov or pop add mov inc mov mov test incl pop aam cmc inc sbb rcll ret adcl pop add imul imul add sbb mov call jo add mov inc and jae mov rol (bad) cmp mov add adc inc out loopne aas fmull (bad) ljmp jne sbb push loop loop dec gs das pop adc arpl into (bad) (bad) (bad) ljmp or push fld scas pop out push cltd sti or xor xchg push and (bad) (bad) (bad) dec dec push cmc mov mov rorl dec dec shr adc in inc or cmp push (bad) in (bad) pushl mov fbstp jl mov data16 or xlat mov (bad) (bad) (bad) lcall jmp int3 stos push bnd mov sub xchg add inc sarb dec xor dec cld adc push cmpsb sbb fucom mov (bad) fist inc pop mov lods ljmp pop popa adc (bad) (bad) incl xor std flds mov jmp pop adc jmp jg sbb pushf push std xchg mov or (bad) (bad) ljmp mov imul add ficompl push lods mov (bad) lcall pushf adc xchg pop in xchg dec cld cmp inc test test js push (bad) (bad) (bad) (bad) mov adc test loopne mov pop mov popa sub and loop cmc es jo outsl (bad) subl dec pusha mov decl call push adc bound pop ds cmp loope mov push or movb sub xchg (bad) (bad) mov outsb lods (bad) xchg adc dec lods cmp sbb mov stos mov adc lods mov jmp test jae int3 or pop jb (bad) (bad) cmp sahf pop loop push add jb push push push mov pop cmc lret (bad) xor mov (bad) mov cmp and movsl int3 int3 sbb daa and ljmp js pusha mov inc cmpsl dec adc sar (bad) lcall mov push sub loope xchg pop jg xchg mov rclb xchg inc cld jg jp outsl jno loop mov push cs sub popf inc mov sbb xchg out sarb lds cli fs push xchg dec dec jle xchg cli pushl pop je mov and incl add push add jbe sahf push cli lods mov pushl (bad) mov sub adc iret (bad) mov arpl or lcall in test stos jl dec add out mov and jbe out dec das xchg pop lcall mov fcoml xchg mov jl lcall stos adcl (bad) (bad) (bad) inc cs lods repz sar push outsl mov push movsl sbb add (bad) loope jp lds cmp cmp je sub pushf lcall mov lcall fildll lods xor sahf and xchg lea lods (bad) (bad) (bad) call pop div and mov adc lods repnz and (bad) adc in out push xchg add pop icebp push push xor or cmp mov adc loop ljmp cli shll push inc iret adc sub imul sahf sub (bad) (bad) mov sbb icebp lock scas and test jb xchg scas bnd inc mov mov jns inc add ret cmp push sbb jo fbstp push pushf push xchg (bad) scas xchg ds movsb pop push ffree mov mov lea addr16 jle push pop stos xchg icebp xchg cld fidiv cs (bad) (bad) (bad) decl mov fwait mov ret jbe outsl push sbb and pop test (bad) (bad) inc and add jg dec hlt mov rorl and cmpsl imul (bad) (bad) (bad) pushl aas push scas adc fisttp ficomp sub jl aad fs lahf inc inc jne stos imul aad gs test cmp stc adc daa cmp mov outsb repnz sub inc cld add popa pop mov pop xlat add arpl (bad) (bad) (bad) mov dec inc icebp push fs std sub (bad) out sub adc int mov push in lds mov mov sub popl jb ja sub push add mov loopne (bad) (bad) call (bad) pop cmc cmp lods jb jb adc (bad) popa lret mov (bad) (bad) mov cmp mov xor subl sti lcall mov xchg (bad) (bad) (bad) pushl dec mov xor push sbb jg sub xchg in int (bad) lcall sub dec (bad) test je jecxz (bad) mov (bad) push add (bad) decl int inc cmp test outsl inc loopne cmp add (bad) (bad) mov and movsb sbb push xor jno (bad) and add and jl sbb (bad) mov fdivp orl pushl jns or les decb mov push popa sub jg add scas push lret fistpl fistpll add (bad) (bad) (bad) cli daa sbb jo cli xor jle cmp jb pop lret (bad) (bad) incl or fs js dec fistpl test insb cmpb popf cmp into pop movsb and int3 sbb mov push rcrl adc and incl cmpl (bad) lcall enter cmp and fidivrl mov (bad) (bad) incl sub push test ljmp xchg dec add outsl loope inc dec lea jo cmpsl (bad) (bad) (bad) pushl movsb sbb arpl (bad) repz dec mov fisttp pcmpeqd dec (bad) (bad) (bad) decl sub xchg and mov dec shr or xchg js or (bad) (bad) ljmp lcall cli subl mov lea (bad) in jbe sbb mov pop sbb (bad) pushl jae add imul (bad) mov sub sbbl sar fild je outsl icebp aad aad push mov sub mov mov call and sbb cmp mov stos or jecxz dec mov xchg xchg clc int3 sbb jmp cmpsb dec fcoml pop sar (bad) (bad) push lret xchg dec dec lcall cmp push negl pop mov push xchg add mov aas dec outsl xor (bad) and stos push decb mov call pushl push lds es (bad) add dec and mov sub cmpsl fimull std (bad) (bad) (bad) cmp cmpsb mov bound pop xchg adc insb mov (bad) mov imul mov int3 mov (bad) jg dec shrl orl jecxz mov out negb popa cs mov (bad) (bad) jmp dec sbb sbb pop aaa movb xchg (bad) out dec jae imul test (bad) (bad) (bad) pushl les ret in in fs stos or push lret mov add movsl xchg push es (bad) (bad) ljmp or adc adc int mov sub and dec stos loop movl das aad test (bad) mov fcmovnbe sub sub dec mov jp outsb adc or mov (bad) jmp mov outsb add sub int3 xor mov (bad) (bad) (bad) incl sahf mov xor and pop loop adc push (bad) cwtl into dec ljmp (bad) mov push cmp and out sbb dec cmp and jge aam (bad) ljmp jl pusha loop (bad) jmp pop dec fmul and aam or ljmp lcall mov out fstpt (bad) (bad) jmp push adc bound ss jae push sarl xchg andl xchg cmp (bad) (bad) decl jnp movsb xor test ljmp dec out mov cld repnz addr16 fdivl (bad) incl aas cli xor pop add (bad) jge xchg add jno clc repnz gs jb nop sbb inc xchg sub or sti pop pop cmp push in lea outsl dec mov pop adc dec cmp (bad) (bad) (bad) inc mov dec daa stos ljmp les lods ret pop and insl add and (bad) (bad) jmp imul lahf dec cmp jns jg bound lcall bound pushl xor out push adc mov mov sub sarl adc jecxz bound loop and cmp (bad) xor icebp sub jl jge mov push ljmp in pop jo (bad) call mov pop pop jne int orl loope mov mov mov rclb pop and dec insl ds or sub add cld (bad) jmp cmpsb jp xlat nop cmp add movsb sbb ret (bad) (bad) cmp lahf (bad) outsb dec outsb ret lds jns loopne out dec pop stc leave adcb xchg jl jge add mov xor movsb push dec mov cli push pop inc mov mov (bad) (bad) ljmp cmpsb out or jbe fcoms popf push mov ret insb xchg incb (bad) icebp mov sbb mov mov sub lea in jbe xchg sbb (bad) (bad) mov nop test (bad) pop out jp mov lods push icebp dec out jmp aas leave sbb lods mov sub loopne adc lock add xor cmp (bad) call mov adc push and inc cmc xor push push lock (bad) dec fcomip push sahf (bad) (bad) sub shll xchg rcl mov (bad) (bad) fildll push mov dec sbb stc loope jecxz int fnsave sbb pusha cli out jl xchg pop cld lods mov and rolb mov xchg negb sub sub inc and jnp cmp (bad) jmp ds scas mov mov es movsl pop (bad) call cmpl mov xchg xor cmp popa rolb (bad) (bad) push in fwait (bad) and fiaddl and nop add or mov movsl daa xor insl popf test (bad) (bad) (bad) (bad) jns adc sub push mov in fisub scas push addr16 hlt xbegin mov hlt jo xchg mov lds mov (bad) adc sbb incl push mov iret cmp ss call cld or sbb dec mov pop xchg inc jge,pt scas push insb jp (bad) (bad) push xchg mov daa add add imul push imulb lods xchg (bad) call popf dec clc addl inc popa lcall aam das jae outsl int3 cld inc aad out decl out sbbb and fldt push fwait mov cvtps2pi incl mull mov into jmp (bad) js ljmp xchg mov sahf or sub dec xor or rclb dec (bad) (bad) (bad) call sbbl out inc jo sub mov scas movsl mov and das cli (bad) cmp icebp sub je (bad) and or lret movsl popf adc leave (bad) (bad) lcall adc push mov cmpsb jb sub (bad) in sbbb mov dec mov xchg andb in dec sub mov pusha dec adc adc ds icebp (bad) (bad) jmp adc scas cld loop (bad) push aas cmp mov cmp loope aaa out mov add fbld jp mov or sahf lret or jbe ds int3 (bad) or gs lock out mov (bad) mov and dec test jge (bad) lcall lret add inc mov data16 cmp jl cmp mov pop (bad) ds cltd sbb sbbb mov cmp push push jge and xchg mov pop jmp (bad) (bad) (bad) (bad) jp dec adc sub rorl sbb in adc xchg jg sbb xor addl ds (bad) jg push out pop scas scas arpl lret mov clc lahf rorb (bad) (bad) incl lea jecxz mov sbb test sbb and out pop pop (bad) (bad) (bad) pushl sub sbb add loopne fwait inc movb pop sti out bound and sar dec sbbb ss cmp mov (bad) cwtl jmp jg sub nop xlat lcall or arpl and (bad) (bad) (bad) (bad) lock rcl mov sub rorl or xchg add push arpl (bad) (bad) (bad) ljmp cmpsl sub aaa and xorb xor bound fdivrs ror cli (bad) in mov cld leave aam pop fwait cltd cmp mov ja adc push adc and pop mov mov xchg punpckhwd cmp lcall nop jns inc (bad) add shrl stos add test xor (bad) (bad) lcall in lret cld sub daa (bad) ss in lret scas mov mov shrb loope jne mov (bad) (bad) ljmp (bad) imul stos jae in jb dec sahf ljmp and int std push dec je (bad) (bad) (bad) call add and enter push mov ss loop mov test xchg sub push imul (bad) (bad) (bad) inc jo arpl inc ljmp pop mov mov mov jmp or jp cmp adc mov fcomip (bad) jmp jne mov out dec imul push adc pop rol push dec scas aaa pop sti jae jl mov mov push sbb sti or loope pop clc mov cmc sti nop add cmp add lret (bad) aas pop xor jb cltd lcall mov cmp ja hlt test loope (bad) mov pop ficom aad call add (bad) bound ljmp (bad) mov std (bad) mov (bad) js push addl rcl dec icebp (bad) ficom gs bound rcr (bad) (bad) (bad) call scas stc in scas insb test jno mov sbb stc xchg imul sbb (bad) (bad) incl inc fdivl or mov xor xor mov push or in (bad) (bad) (bad) (bad) jg or mov fldln2 mov outsb mov pop cli scas data16 jbe lret fdivs nop (bad) hlt cld sub lcall cmp (bad) rcrl inc push (bad) (bad) jnp dec cmpsl push cmpsl pop hlt sub jl push pop mov lret push jecxz scas das inc mov or jmp or aas xchg (bad) or in popf xchg (bad) pop mov fdiv xor and mov (bad) cmp lea adc jb and inc mov popa xchg out xchg imul (bad) call stos dec pusha inc pop dec jb je push les xor movsl aaa push or pop sub mov sti push mov frstor mov jecxz iret iret cmc lcall (bad) (bad) (bad) in xchg aad sub fsub add xorl pop inc fwait jmp bound jno test mov mov (bad) (bad) call andb lcall (bad) fsubrl (bad) icebp xor outsb das loopne aad mov or add in add (bad) jg and sahf jl jmp lret shl mov (bad) mov push push add xchg mov jmp outsb insb mov cli or (bad) (bad) (bad) fisttpll xor mov jl dec inc fs dec pop dec pop or (bad) outsl sub or mov iret test cmpsb fimull xor sbb (bad) mov lods jnp test ljmp inc jbe jb shlb cwtl outsb stc out popa (bad) push cmp mov (bad) (bad) (bad) (bad) (bad) jp and xchg lods cwtl sub insb or dec fucom cli (bad) cmc xchg adc (bad) (bad) (bad) (bad) cmp sbb and jne mov add dec rcl pop push inc pop push push std (bad) (bad) lcall adc mov ja xor inc sti add dec out cmp sub adc jg push and add call in xor nop jl and (bad) push inc sub (bad) jg add incl jg mov cmp push sub cmp lret cwtl push in dec jl cmp icebp (bad) (bad) jmp sbb mov jg and push dec (bad) sbb mov pop pushf mov adc data16 mov mov ljmp and cmp jne (bad) (bad) (bad) cs lcall lret movsl or ds js xchg nop push repz int cmp stos mov fdivrs (bad) outsl andb (bad) (bad) (bad) ljmp (bad) sti mov (bad) ds push xlat xor fprem1 pop jo push inc out movmskps (bad) (bad) call loopne mov push out gs ds sub clc lret mov fsubrl pop inc ljmp and (bad) aaa push outsb jnp and add (bad) (bad) pushl cmpsl (bad) call inc movsl mov mov aam scas test nop (bad) pushl ret fdivr sbb outsb sbb mov lcall (bad) rcr jno (bad) (bad) (bad) lcall push sub mov lea testb dec inc addr16 xor ret xlat (bad) ljmp pop lahf jbe sbb outsl xchg cld jecxz sub push std jg xlat int3 pop mov or in jl push sbb xchg insb mov lcall in jp dec rcrb inc dec lds push jae lahf ficompl push pop (bad) (bad) (bad) (bad) fnstsw test push xor sub iret sub aam push int3 int3 pop out adc rol sbb add (bad) cmp push lcall mov inc rolb mov xchg or push cmc (bad) and (bad) decb rclb adc es dec inc mov js sbb inc gs (bad) (bad) decl inc into movsb loope add movsl add (bad) xchg xor inc js mov (bad) pushl mov insl push cmp repz add inc iret jbe mov sti cwtl adc (bad) (bad) pushl iret xor sub adc int jecxz outsb xor add aaa push out aad aas lret (bad) (bad) (bad) (bad) mov movsl dec insl repnz pause idivb fcmovbe mov es push imul ljmp mov jne leave test xor cmp and push mov push daa sahf mov adc xor or jbe jg movsl pop sbb xor divb mov cld cmp (bad) (bad) (bad) (bad) mov in arpl sbb sbb adc push xor sar lea sahf icebp movsb jb aas jecxz (bad) aas fiaddl inc mov inc push into sub (bad) (bad) (bad) jmp add imul test int3 pop je adcb (bad) mov ja dec pop mov cmp (bad) incl mov inc add jmp xor fdivs dec push cwtl or and mov shrb jmp sbb pop dec out ja fdiv test (bad) jg ds pusha scas aas xchg das fbstp add into and call ss (bad) into (bad) or mov adc add (bad) jg jle sahf fs test ljmp xlat fcmovnbe adc inc nop sbb xchg into dec cmp mov fdivs xchg cs (bad) (bad) (bad) call aad hlt gs mov and cmp jecxz repnz loope push lret in negb sub inc mov pop enter gs inc xchg cmp mov mov cmpsl sbb push mov mov das ds (bad) mov stos ret loope imulb in mov cmp (bad) (bad) ljmp fs sub or popf cwtl outsl ret mov (bad) (bad) (bad) fnstcw (bad) aaa enter test xor lea rorb jb lods (bad) leave cmp ljmp lcall xchg xchg mov ret mov mov xor xor lret (bad) pushl fstl dec jo add iret jg jno add pusha in add loope call mov loop dec cmpb iret in or inc es icebp (bad) mov xor fidivr jg jnp insl dec adc push (bad) (bad) (bad) jmp pop enter mov sbb pop sbb add xor pop fwait or notl add (bad) lcall ja,pt push or stc push cmp mov lcall in push pop loope mov add (bad) (bad) push stos addb mov dec shrl push jmp or jp xchg lcall (bad) (bad) decl dec push lods bound loopne inc ds or shl xor ljmp push movsl dec movsl sub inc and fwait test push xor lret ficomp int (bad) pushl aad push jp insb inc int3 call fidivl test mov aas insl les in inc (bad) (bad) (bad) call mov cwtl ss sbbl lcall cmp daa lret mov (bad) incl lret fdivrs cmpsl xchg (bad) inc dec addr16 (bad) out xchg fnstsw pop push ds and (bad) (bad) (bad) mov les sahf push xor inc pop mov mov sub jg outsl (bad) (bad) (bad) incl lds mov adcl int insl iret lea fsubs dec push and (bad) (bad) (bad) decl and icebp push das inc or daa cmpsb xchg jae adc add (bad) jg setge shrl xlat (bad) (bad) lcall cmp cmp mov cmpsb dec out mulb enter mov (bad) (bad) (bad) jg ss jns jmp ss inc jo xchg rcrb enter adc mov add cmc (bad) mov popa in es sbb mov (bad) jo jmp mov jne nop push mov lcall cmp dec or mov add ret push push hlt je inc cmpsb jne mov dec daa and push inc mov arpl inc scas dec cld (bad) (bad) lcall jne mov leave mov out push mov dec dec xchg or (bad) mov pusha cld pop pop mov cmc scas addl mov clc xor lret icebp lea insl ljmp subl popf mov lret lock ja shrb hlt iret push movsl jnp dec ret mov in mov push mov aam add mov (bad) (bad) jg pop outsl loopne les xchg jl jecxz scas push and lock call jb pop push xor cmp pop out pushf pop popa stos es lcall mov mov ljmp clc (bad) fldlg2 nop jnp add mov (bad) mov xchg xor in loope data16 insl dec ljmp es sub (bad) (bad) (bad) js je div aaa mov xor fnstenv xor ret jo and inc (bad) (bad) (bad) (bad) (bad) (bad) leave mov fwait fwait jns aaa mov mov add adc pop (bad) loope sar insb xor ja xchg lods or leave inc clc ds mov fs mov xchg or adc cmc lock (bad) jmp jge addr16 sbb xchg xchg push arpl into (bad) mov aaa in (bad) lcall sbb jge add or adc lods jo adc in fbld lcall mov push fs xor dec aam scas cmc arpl (bad) lcall fsubr xchg cli sarb fsubrl cmp push jne push (bad) jl xor sub in jmp aad decl inc pop imul sub pop or in imul jb dec bound outsl imul scas out (bad) (bad) (bad) ljmp outsl (bad) cmp xchg idivb mov dec fld push fcomip (bad) jmp fcmovb xchg ror pop int3 leave js fistp daa mov es mov mov (bad) (bad) (bad) pushl inc js inc cltd aaa xor and xor iret lods mov les (bad) (bad) (bad) (bad) cmp adc nop jb popa fnstcw dec out call mov sarl cli inc push mov call xor add ja inc or in ret jno xor ret or xor int jne xor fist xor inc aad mov pop mov jmp lahf clc push jbe add das dec dec or (bad) mov in adcb xor push out lods (bad) je ret xchg in sbb cli (bad) jmp sbb cmp sbb pop adc cmp (bad) (bad) incl ds (bad) (bad) std inc jle test cli (bad) (bad) lcall test inc cmp in lret test push cmp aaa sar ljmp ljmp call inc or xchg xchg (bad) and adc (bad) jg sub es imul lret (bad) mov add xchg cld stc mov sbb bound jge sub xor jg pushl pop dec cmp in and dec sub mov push xlat mov pop popf (bad) pop jbe sub pop or sti mov in in inc fdivrl outsb (bad) (bad) or xor loopne,pt loope mov mov das or (bad) shlb and sub imul jecxz pop dec sbb inc in mov jne shrb (bad) (bad) lcall add loopne adc bound cmp pop xor mov adc cwtl (bad) lcall adc movsl mov sbb je mull cmp incl or fildll outsl sbb jmp (bad) (bad) mov xchg push push lss mov les (bad) jno dec (bad) std or add (bad) mov mov (bad) (bad) (bad) call gs push mov jno loop adc dec pushf call sub and jecxz jae lds (bad) ljmp vmwrite ret pop in xchg mov and cmpsl or aam sar mov (bad) (bad) (bad) incl divb sub and orl out icebp mov lock (bad) pushl movsb inc out xorl stc les test in adcb xchg stos clc add (bad) (bad) (bad) (bad) mov ficoml sbb push cmpl inc lahf shl push call (bad) adc ret jge sub (bad) (bad) pushl mov (bad) stos stos push aaa sbb push fwait dec lea and (bad) (bad) jle sbb (bad) (bad) (bad) decl lret and xchg fwait or xchg inc fimul pop push ficoml test mov aas les hlt mov sub sbb jmp (bad) test cli and (bad) (bad) jg ds scas and dec sub pop scas xor (bad) ljmp iret xor sub aad mov adc lds cmp jge sti shr and mov mov enter push shrb imul movsb cmpsb lret dec mov and (bad) mov push push adc adc fistpl int or mov cld push fistpll sub (bad) call insb mov add insl push or push add daa (bad) repnz call sbb adcl mov (bad) std addr16 sbb mov stos adc mov dec adc jmp jno (bad) out push pushf or mov pushl stc adc xchg insb inc inc mov dec ss loop call adc (bad) (bad) call jnp (bad) test mov adc arpl bnd mov (bad) (bad) push ds pop sbb and out bnd stos test mov mov movsb fimul (bad) (bad) (bad) mov popf je jno sbb xchg xchg jo sbb inc mov outsl (bad) (bad) mov leave ficompl ss push lods jl cmp dec mov sbb (bad) gs sbb jle sahf lds (bad) (bad) mov call cli incl mov fimull pop fs mov (bad) (bad) js in push pushf in iret cltd sbb iret fwait shlb xchg in hlt in leave in js scas cwtl lods (bad) (bad) ljmp lods xor ss movsl push mov pop sub mov (bad) jge (bad) jbe sub cmp push es in xchg (bad) (bad) (bad) decl jo (bad) xchg pop and mov pop rcl mov add sbb push inc or ret mov cltd lods adc stos rolb enter push cmpsb insl lcall sbb mov cld (bad) xor and stos insb sub and enter (bad) call push imull neg push repz popa push and jecxz (bad) incl ret jmp aas lods (bad) cmc adc lcall sub (bad) (bad) mov or mov xchg fwait enter out roll sub (bad) (bad) (bad) decl jl ja inc add mov sub sbb inc adc jo pusha inc decl or repz (bad) (bad) (bad) incl lods xor inc cmp fldl mov je dec push sti or cmc cmovns dec cmp pop mov decl cmp push jg aas leave scas pop push aam mov (bad) inc mov push into mov sbb movsl js cltd jne jmp sub incl (bad) std xlat mov push scas insl das fidivrl imul aas adc orl and inc cmp test xor ljmp mov (bad) das and rcrl (bad) mov dec jecxz inc (bad) (bad) ljmp jl adc jbe ljmp jp mov dec add (bad) jmp imul scas mov jg (bad) xor sbb mov pusha push mov dec enter (bad) and sbb and pop jmp int3 daa mov (bad) call xorl rorb add xchg mov clc lcall fistpll fisubr (bad) scas (bad) mov aam test into nop into xor dec stc dec add xor or jae adc test dec test mov mov in in push cld pop push fwait lret push cmp sbb dec test (bad) pushl nop (bad) mov xchg movsl xor imul push test (bad) (bad) jg ja ja ss or mov es or sub sbbl ret adc add les mov pop icebp call inc les jg cld push sbb xor imul mov cmp push or cmc cmp mov (bad) call js xchg sti push into aaa out pusha (bad) (bad) ljmp rclb cmpl lods pop sbb sbb icebp cmpsb paddsw and (bad) clc fcoml (bad) push sbb push lcallw (bad) (bad) (bad) (bad) mov call lahf dec sub jbe xor ja (bad) push jmp (bad) push (bad) sub mov sub sub cld lds cmpsb test sti rcrl (bad) and incl leave jo popf or (bad) call mov mov pop aad mov sahf fiadd adc or (bad) call or data16 fldcw dec and sub push xchg dec (bad) (bad) decl push lock mov out lods add mov call (bad) outsl cltd sub rolb addb dec insb dec jl push in inc add nopl hlt dec ja loope dec fldenv adc and jns icebp sbb push sbb mov (bad) pushl (bad) jmp (bad) xchg lahf mov pop jl adc xchg aam dec lods jp jne shr clc call push mov scas stos push xor pop fisubrl fstps ret mov test mov adc (bad) pushl fnsave cmp mov and push shlb loopne je pop adc xorb pop add cli (bad) (bad) clc jo mov ret call (bad) or pop testl incl fimul push mov loop sub push aad outsb jo jmp gs (bad) dec lret cwtl mov aas movsb sbb int adc clc (bad) mov (bad) fbld stc scas xor sbb rcll ret leave es inc out lea (bad) (bad) dec or add jl ja sahf xchg mov jne imul out or (bad) (bad) pushl repnz rclb roll imul or cmc mov push pop pushf sbb (bad) (bad) call xlat dec mov cwtl outsl cwtl inc dec fldl or push pop cmc (bad) mov pop pop stc out xor (bad) js jns xchg rcl (bad) call xor push lods dec (bad) ljmp mov ljmp imul push or (bad) (bad) (bad) incl jno jno imul insl inc mov int xchg cmp push std (bad) jmp dec lock and jp mov (bad) sbb sbb (bad) (bad) incl sarb xor ja lock das or and dec add das ret adc (bad) (bad) (bad) fdivl test leave jne out out xor sub dec inc inc mov xchg js (bad) (bad) (bad) jg sbb push mov pop pop cmp test and and (bad) dec (bad) inc pop in cli bound xor ds stos gs fnstcw stc pop (bad) cltd outsb jecxz (bad) incl cli adc xor inc imul (bad) (bad) (bad) mov cmpsl push adcb out sbb sbb fcomps jae sbb dec xor dec (bad) (bad) jmp xchg shrb jb rorl mov (bad) (bad) fildll roll in sbb mov jbe pusha (bad) insb pusha xchg (bad) (bad) movsb incl mov in in sub (bad) aas mov xlat mov bt pusha cmp xchg mov decl into aas xchg in cwtl xchg mov adc dec push mov incl mov inc fcomip ds daa les imul ljmp push inc call sbb out cmp orb jl dec cmpsb imul dec pushl pop leave pop push inc push sub fbld (bad) jbe sahf inc cmp (bad) (bad) jg fsts mov (bad) out sbb pand insb lret sub cmp aaa add or mov jl sbb shlb adc (bad) (bad) fistpll inc inc cmpsb lahf fisubl out (bad) xchg mov sahf sarb mov sbb test pop sub sbb ss repnz out add rcr cmpsb pop in (bad) (bad) (bad) ljmp xor pop call insb stos ljmp enter insb inc xchg rclb xor mov and scas stos mov xchg xor inc xchg cmp (bad) (bad) (bad) jmp push movb sub push add popl adc sbb pop mov push in dec add lea dec xor sbb xchg jb mov or (bad) (bad) mov into lret xchg jle sub inc (bad) cmpsb (bad) (bad) (bad) fidivr push xchg inc (bad) push or enter push lods fcoml (bad) (bad) (bad) pushl mov xchg ret in xchg and jl add or pop out sbb (bad) (bad) (bad) jmp cmc and in jl or (bad) std push fstps xchg movsb xchg dec stos push aad repnz (bad) (bad) decl out sbb iret and adc test pusha cmp push loop sub pop (bad) fisttp ficom in jnp loop or (bad) (bad) decl mov jp gs sbb mov or mov (bad) (bad) mov out cmp lods into mov (bad) std inc jle pop icebp xchg inc mov jle cmp out cmp imul mov sub lock and push jmp and xor rcll pop mov insb pop lret idiv (bad) aas or xor (bad) fimul push out sahf (bad) ds or sub xchg (bad) xorl and (bad) (bad) incl inc test jmp mov xor add ret mov incl in jg dec fdivrl sbb stos popf (bad) mov (bad) decl cs lcall jo (bad) sub sbb xchg mov insl outsl jnp popa ljmp cmp test scas stos sub jo (bad) (bad) (bad) ljmp pop xchg pop stos jmp pop adc mov add add push lds test push adc in into add test hlt rcl and xchg or dec (bad) movsb (bad) call push mov adc mov jecxz jle (bad) add xchg lods (bad) (bad) jmp mov in jg into xchg dec rcrb adc pop aad cmpsb (bad) (bad) (bad) jnp inc sbb cmp push fidivr cmpsb push cld fdivr fisubr and pop and outsl (bad) loop enter mov test lock add pop lods lea loopne ljmp push into (bad) outsl incl jle ss scas jmp lret loopne mov xor pop push (bad) cld fs lcall decl lods adc inc mov cmp (bad) (bad) (bad) (bad) jmp lahf fwait stos and ss (bad) iret in jp lds push push sbb aaa std lcall or xchg mov cmp outsb adc cltd jne (bad) (bad) lcall or cmpsl nop (bad) icebp pmullw out (bad) push jo push (bad) rcrl push xor adc in inc divl (bad) mov pop sub (bad) (bad) (bad) call mov cmp movsb aam aaa ret arpl mov xchg shl xor pop faddp rsm push add test call or imul (bad) ds mov jbe xchg cmp mulb adc jnp push pop jl out clc lcall pop cmpsl test jecxz ja out lahf pop inc dec push mov mov (bad) (bad) (bad) pushl cmp xchg cmp dec mov or push aad iret pop sbb stos or repnz js insb and sbb mov jbe popa inc imul mov or popa mov sarl xchg lcall sbb sbbb outsl jno (bad) (bad) (bad) jge imul (bad) jg (bad) mov (bad) je movsb mov icebp mov data16 jns (bad) jmp fidivrl aam sub sub ret ret (bad) ljmp mov jne ret out popa mov sahf jl je xor inc test sub sbb and sbb test rolb les mov (bad) cmpsb jge adc in (bad) and es sbb push lret shlb imul insb lds cld adc jmp jmp ds xchg mov jnp add dec or enter (bad) (bad) jmp cmp shrl mov fildl in push lods sub rcl dec or fild jl sbb (bad) or (bad) (bad) (bad) jg xchg lcall add xchg mov jb rcll mov add pusha sub incl push sbb test popa into cmpsl outsb vmwrite (bad) (bad) inc stc or and push pop subb mov aas addr16 loop push test and addr16 (bad) (bad) (bad) flds fcomps dec dec push or ss dec sbb xor das stc negl jle icebp (bad) (bad) jmp sub xchg add jne insb adc je push test movsl sub (bad) fisubr arpl pop bound incl jecxz pop cmc mov aas les jne (bad) mov (bad) iret out inc adc loop pextrw mov and jmp mov sbb xchg leave (bad) decl (bad) pop cmp xchg outsb dec sub je out divl sub sub jle sub pop lock stc mov iret mov inc clc ljmp ds int3 repz sub ja pop test cmp (bad) (bad) ljmp pushf xchg add outsl out int fadd insl arpl jl and (bad) ljmp pop sub jns push or xor adc pop cltd and (bad) ljmp jmp lcall and cwtl push inc loope aam xchg lods (bad) ljmp mov js les jge fimull adc and (bad) (bad) (bad) jge mov sub adc or ljmp iret sub decl outsb push add pop sbbb push inc leave mov adc es fldl pop addr16 clc cltd jnp les test iret cmpsl mov sub xchg xorl xor adc xor stos sbbl dec lock and test cmpsb clc mov or push inc jmp cs xchg cmp mov (bad) (bad) (bad) jg mov (bad) jg addl sub fbstp lret jge fstpt (bad) call pop gs ss jecxz mov (bad) (bad) (bad) (bad) jge fimul xor imull ficompl fnsave mov std nop ljmp fwait enter sahf pop shrb (bad) pushl pop inc mov cmp inc imul cli jno mov cmp daa push mov cmp in outsl call or enter stos sub mov cs mov (bad) jmp bnd clc sti or jno aam push mov push jnp movsl cld jg push mov ds je inc mov jne cmpsl add sub lds (bad) (bad) (bad) cmp (bad) (bad) icebp or loopne,pt loopne pop out jbe rorb push (bad) bound in inc (bad) push pop outsb and fwait sahf movsb xchg cmp cmpl pop pop xchg stc cmp fsub movsl xchg add nop add adc (bad) (bad) (bad) inc movsb or or inc cwtl lds out out in add jne rclb aaa ljmp mov mov andb pop mov ja jnp mov jp mov jb mov jle push cmp dec movsl icebp aam sub sbb xchg mov dec lds mov aas jo or (bad) lcall lock xor jg (bad) (bad) lcall pop mov cltd pop addr16 inc lods pop sbb nop (bad) mov mov and pushl popf enter jno das mov xchg or iret in call icebp xor (bad) lcall rcll insl xor mov pop stc inc ljmp dec sub lret decl push lahf mov xchg add (bad) or hlt jge adc (bad) (bad) (bad) jmp dec cmp test push scas enter mov jbe (bad) (bad) fildll pop inc (bad) xor repz enter mov xchg xchg (bad) ljmp ror mov sti jecxz jbe pop pop fucomi cmp mov cld aaa cld (bad) cld ljmp jne push inc push outsb push leave dec jo mov (bad) (bad) call mov fsubrs jl js mov insl cmc inc mov sub js mov enter cmpsl push inc and aam or mov test (bad) fildl pop sbb fldl in dec xchg jp add xor lcall jge cs insl inc mov push pop (bad) fisubl cmpsl mov dec push push ret xchg pop (bad) (bad) (bad) call mov sub mov or out push shrb pop add push int3 lret pushf test andb xchg dec fisttpl mov adc in (bad) (bad) (bad) incl dec add arpl shrb or dec sbb loop (bad) lcall pop loop mov loopne mov and mov in jmp (bad) (bad) (bad) push sub xchg dec inc ljmp mov push push call arpl movsl dec push (bad) (bad) (bad) incl in sbb cmp xchg cld dec sbb sub loop loopne dec cltd ret mov loope xchg das lcall add ds sub cmp xor (bad) (bad) (bad) jmp jle out xchg mov mov lods call pop or push push and (bad) (bad) decl scas rcrb rolb dec hlt imul fild (bad) pop pop clc (bad) call fcoml dec cmp mov mov stos adc out (bad) decl mov or popa xchg inc adc (bad) (bad) xor jae stos insl mov not iret push icebp dec lea xor mov idivb (bad) pushf cmp (bad) (bad) call pop xchg lahf test lds mov (bad) pop inc xchg dec in sub pop jmp into lcall lcall cmovs sahf dec addl cwtl push cmp (bad) mov adc popf cld cmp mov xor mov movsl pop frstor inc test dec xlat ja xchg add jnp push sub (bad) (bad) ljmp xor xchg sahf fsubrs inc sbb fwait cmp sub enter test in cld xor popa test push (bad) (bad) (bad) incl out stc notb out daa ror push rol push xor mov data16 adc push (bad) fcoml sahf (bad) mov (bad) (bad) (bad) incl aad add aas dec sub cmp ja inc push inc adc dec (bad) fild inc lea adc lret cmp shlb out or pop fnstcw push cmp or push es sahf sub adc pushf push (bad) movsl pushf mov arpl movsl lcall call mov ret lcall sbb sbb xor std (bad) (bad) pushl fisubr and rorb lret idivb fisttp mov leave (bad) (bad) call or repnz xor pop cmp push dec jne jmp (bad) lcall js jo dec call mov cmp loope xchg inc stc inc xor pop (bad) (bad) (bad) call gs or imul sub mov xchg mov push (bad) lcall sub mov ljmp (bad) out cltd adc pop std pushl dec ds jp enter in mov jg popa mov jbe cmp je (bad) (bad) ljmp mov sub pop xor and mov cmpsb push fwait aad fiaddl int clc add (bad) (bad) (bad) dec mov cs push inc lods leave mov (bad) movsb aad in nop aas fnsave out cmp pop sar lcall js mov jmp lret repz call ds fildll push pop iret fwait mov jbe test xor shrl decl pop xchg fstps iret aaa test mov ja mov std decl clc xchg sbb and (bad) (bad) incl sub or ds push push add in (bad) mov cmpsl jl jbe idiv inc call and mov fist cmp or sbb jecxz out cvtpi2ps call mov ss xchg scas or lock dec lcall incl subb and dec je xor fdivp es lods call lods ja mov test shrl cli insb cmpsl mov (bad) (bad) decl nop mov mov push adc in stos dec mov push mov cmpsb (bad) incl out (bad) mulb xlat inc int jno shlb lahf pop push dec icebp fs jmp (bad) (bad) decl sahf ret out push sub rcrb ret mov sbb (bad) fsubr in mov jle (bad) (bad) (bad) push jge jns aaa rcll adc xchg std arpl and inc xchg fs icebp rcll bound mov ds jae mov xchg fnsave sbb mov call pop or jecxz mov adc cli push movsb call mov movsl jbe xchg (bad) (bad) incl push hlt sub repz arpl xor sub sbb jg cld xchg xchg sub mov push mov mov (bad) (bad) jg negl cli lods adc pop mov rorl ja clc fwait push std jl mov (bad) (bad) call add fwait nop test adc sbb sbb xchg stos and lods (bad) (bad) call lret xor lret shlb xor jbe psrad rclb (bad) (bad) (bad) cmp xchg push jne sub or mov xchg jge sti icebp push out inc adc pop cmc (bad) dec hlt pop add push dec xor das fnstcw outsl push lods insb sti fcmovnb mov data16 xchg add (bad) std outsl pop push push int pop test shl cmpsb jg ficom aas adc dec mov repz (bad) (bad) cmp fistpll addr16 xor add scas and and and adc xor (bad) (bad) (bad) pushl movsl aaa xchg hlt pop stos cwtl or into add mov (bad) (bad) sub imul xchg jg pushf shr xchg or lds cli sub ja inc xor fcmovu jmp cld call lret lcall jnp cmp (bad) sbb or cmpsl subb incl push (bad) in and inc adc (bad) (bad) (bad) decl shr jae pushf enter sbb mov sbb inc loopne sub repnz xchg (bad) incl dec and jle repz sbb or sarl dec (bad) arpl lret out ret popa repz cmpsb dec stos push dec lods xchg cld push aam jb test aas mov call (bad) cmp scas scas lcall shlb clc dec jp das or (bad) (bad) (bad) inc out les lcall sbb cmpsb cmp arpl push jo mov jno (bad) (bad) decl xchg out mov push vpsubusw and leave movsb sbb and sar (bad) fistpll out sub sub dec mov fisubrl outsb gs cli call mov loop xchg sbb cmp xchg sbb (bad) mov cmp push mov jae mov dec cmp jge fisttpll shrb ror add (bad) (bad) decl leave jl lods sub je mov arpl fmull jl fimull gs ja outsb lods (bad) (bad) (bad) pushl mov popf mov jecxz loopne pusha js movl xchg inc ja (bad) jmp ljmp jae ret adc leave mov mov and aad (bad) (bad) (bad) (bad) jns test (bad) mov popf lds cwtl or push ds ljmp (bad) (bad) (bad) ljmp (bad) int lods ret add xchg cmpsl inc push loop jmp pop adc in test mov test sarb fwait dec sub cmp and out iret popa (bad) lcall (bad) pushl push cmp (bad) adc fiaddl mov nop cli mov (bad) ss insl (bad) (bad) (bad) ljmp sbb loop clc ret dec jmp cmc jecxz cs mov insl bound (bad) (bad) decl xor push addl jmp and ret dec daa test cmp pop jb push iret xchg lcall incl cmp call mov adc (bad) arpl das popf cmp or cli (bad) incl jg sti pop imull cmp push mov push ds inc mov icebp mov push popf lcall jno lcall (bad) dec mov pop inc fimull xchg dec sti enter (bad) imul cmp (bad) (bad) (bad) cmp adcb push repz daa or inc or jae xchg out inc sbb fimull (bad) (bad) (bad) lcall and push inc es sbb adc sub das push lea (bad) jg ret inc shl shrb loopne in or ljmp and mov push cmc push jbe jge lods mov jg lcall movsb mov lods pop es cmpsl xchg addr16 (bad) mov dec jge mov (bad) (bad) (bad) (bad) in cltd (bad) ds mov push mov fidiv in pop stos lea mov adc xlat (bad) (bad) (bad) incl ss sbb mov cmp sahf mov add sub fisttpll xor (bad) inc dec push lock jge mov push (bad) (bad) out mov rcl outsb ss xchg aad sub pop cmc jmp push (bad) mov insb push adc loopne enter in out fdivs (bad) (bad) (bad) pushl ds nop std xchg aaa jp addl fcmovnu push sbb (bad) (bad) ljmp mov fsubp int jb adc mov gs push test dec std cmp pop adc push (bad) (bad) (bad) decl jne repnz (bad) or jp inc dec fistpl mov mov fisttpl mov mov adc test repnz jp call lcall popf cmpsb sub jmp mov push mov and gs sbb and mov (bad) (bad) mov loope sub add and add adc sub dec add clc add mov clc mov shrl inc push (bad) (bad) (bad) pushl mov sub ret ficom jns xor xchg sub fld popa or mov fdivl jle mov out and jmp into adc (bad) call push test in jp ss xor sub addl xchg sahf (bad) (bad) (bad) decl pop jnp adc cld jl (bad) popa aaa imul jg (bad) pop or jmp mov xchg push cmp aam mov outsl cli (bad) push adc xlat dec in xor jns loope subl lock (bad) (bad) cmp xor loope popa loope sbb mov aaa add sub xchg jno lret jmp adc (bad) push dec ljmp ss (bad) adc and jmp mov mov push add popf test (bad) lock ret je loop (bad) test mov sbb (bad) jg call mov adc add repnz es mov xchg (bad) (bad) (bad) lcall pushf (bad) movsb je cmp mov push push fs push push sbb jle mov inc lcall aas jp mov push inc push inc sub jno add inc clc (bad) jmp in addl mov jmp (bad) (bad) push sub pop jmp daa ljmp and xchg fadd in mov (bad) call leave mov int3 daa (bad) dec mov mov hlt pop test xor jp cli imul (bad) lcall jmp add in sub cmp jbe mov scas mov leave (bad) jp dec outsb pop jmp repz js mov push add aas mov xchg pop push in jns lret xor aas xchg fcoml xchg sbb xchg repnz (bad) (bad) (bad) mov mov (bad) loopne mov mov mov inc mov arpl dec std into push mov cmp inc adc or fistpll inc mov mov xchg incl add dec (bad) mov pop in mov aad mov in sar xchg movsb xor inc out push ds hlt incl xchg aam push sbb (bad) dec cmp push sahf inc sbb jmp lock jmp outsb mov sahf sbb ja dec nop fisttpll mov mov sub adc add fsts xchg imul push hlt inc cmp cmc (bad) decl adcl es sub or sub insb jno or sbb push xor (bad) (bad) pushl dec mov pop inc fildll cmpsb add in fdivrs loopne dec mov (bad) (bad) incl dec stos cld mov (bad) or mov mov xor hlt (bad) jg popa ds fldl sbb push mov (bad) (bad) ljmp rclb cmp fiaddl mov clc adc mov fcomps cmpsl mov ljmp lahf mov nop fldt fcomp adc int xchg and push (bad) mov imul loop dec lret (bad) ljmp cmpl jp ret push mov fcmovnbe push pushl sub cli cmp pop push jb push out xchg icebp pop cmpb mov icebp mulb adc decl add mov or mov in leave sub int3 adcl xchg test ljmp dec mov fldenv cmp (bad) ljmp aam imul inc add cmp sbb int inc addr16 (bad) (bad) (bad) (bad) stc lock sub add (bad) xor mov out int3 hlt and xchg cltd push ja fucomp lds popa adc jnp jp and jecxz dec stos js sub sub int lock (bad) (bad) incl sarl inc or es push negl dec mov push leave (bad) (bad) cmp ret pusha sbb (bad) std dec cmp ficompl sbb inc sbb hlt das and cli call sbb sub xor xlat popl lahf loope add or js or cmp sbb enter icebp dec jge fs fistl cld push cld push xchg inc insl cmp lret out push pusha lcall (bad) incl ja (bad) jne push fs push out clc inc mov inc jecxz sar push or or mov and icebp sub (bad) mov or xor adc mov (bad) jg mov and sub js push mov jnp lods mov (bad) (bad) push jns cmp adcl subl and or test sub jae mov (bad) ljmp inc inc ds ss or jb les in pop inc xchg dec shlb jg movsl jmp cwtl inc pop ds mov or shl or and mov mov sub inc mov clc jle (bad) pushl jecxz lods scas pop data16 jmp or and lea pushf es (bad) lcall sbb jg in pop mov fmuls push dec gs lods or xor xor (bad) (bad) (bad) decl cmp dec mov nop dec aam cmp sub push lcall (bad) (bad) decl icebp js incl andl mov cmp movsb inc fwait push jge sarb (bad) (bad) (bad) incl insb out mov mov stos xchg add daa fiaddl or mov pop pop (bad) (bad) (bad) pushl push push adc xchg jmp (bad) dec out xchg lret popf call test lods pop xlat or (bad) call loopne adc mov pusha push int push pop aad and add adc inc lret (bad) out int3 inc jecxz xor sbb push repz pop movsb dec loop mov (bad) mov (bad) adc jl or mov and (bad) (bad) jg ds and inc int andl push out sar call lock ss inc sahf int pushf bnd jecxz (bad) out pop xor sub ds (bad) call xchg sub data16 add pop (bad) fiaddl (bad) (bad) fildl inc out jb mov stos jnp out ja jp xor stos aas (bad) leave cmpsb (bad) ljmp push mov xchg inc dec dec scas aaa rcr fcompl out and push adc (bad) (bad) (bad) (bad) jp jp pop mov mov mov jne sub cmp sbb sub push ja int jge adc pop jmp cli pop lahf inc gs xchg dec pop adc or aam sarb mov xchg push rolb call jle clc aas test icebp dec (bad) mov (bad) cmp push in test mov xlat (bad) (bad) (bad) call sbb jge,pn or lret jbe test out mov loopne mov mov cmp inc rcrb in and mov sbb mov fldt xchg push push pushf shrl and xor push jmp lcall adc call lods cmp imull and dec mov adc mov jg pushl aam aad ret adcb enter es repz lea (bad) ljmp pushf mov in in jae bound sub mov fbld in stos cmp add or outsb bound movsl idivb outsb mov pop cltd (bad) (bad) (bad) incl pop mov or and jns jne dec xor imul jno push cld mov lcall adc nop jns loop sub popa pop (bad) (bad) jmp push xrelease pop lahf clc xchg inc push cmc fwait sbb and sahf add pop mov cli ds push bound (bad) (bad) fistpll fidivl jb outsl jo adc pop jg fwait xchg loopne cs jne inc fcmovu mov loope lock (bad) hlt mov enter mov ret (bad) (bad) mov cmp cmovle fs icebp clc lret pop daa mov (bad) jne hlt jg jg mov sub add adc (bad) (bad) fistpll (bad) in es push popa lods orl fadds xchg ror aaa cli (bad) (bad) jmp cmp (bad) rorb dec notb add mov (bad) je js (bad) (bad) (bad) out mov push cmpsl gs sahf in popf sub sahf sub adc jp inc test (bad) (bad) (bad) (bad) incl in outsl cwtl xchg jnp repnz pop inc rclb mov aam fsubs sub clc (bad) (bad) ljmp loope fdivr pop and mov push test adc sbb mov xor xchg sub aaa xor stos cld outsb fmuls cltd mov test mov add mov int3 rorb int3 sub add add cmpsb sti push roll mov pusha test (bad) xor stos rcr movsl sub addr16 mov adc pusha lret mov add (bad) jg push aad push dec ret outsb inc mov jg (bad) lcall lods stc push scas cmp int cmp xchg pop mov test fs (bad) ljmp outsl fs in repnz nop les inc (bad) mov mov lahf dec mov and (bad) (bad) incl lea fsubr pop into pop lret addr16 jbe aad cmp sub dec fiadd mov (bad) mov pop lea das or fidiv aaa xchg das push lcall notl sbb (bad) (bad) lcall (bad) or mov push cmp inc pop sbb pop sub sbb in (bad) (bad) (bad) jmp aam jg xlat loop scas pop pop lock jno loop ljmp popf cli sti (bad) (bad) (bad) lcall jne mov mov lret ds int3 add insb push push mov leave (bad) jmp call mov or add out lds sub and js (bad) fcomip rorl xchg aas negb jmp pop inc push inc ds (bad) mov (bad) (bad) (bad) out imul and hlt mov adc (bad) cmc and sahf cli cmp pop xor imul sbb js or ljmp lret mov pop add sbb (bad) (bad) or push adc inc orl push fstpt cmp push es dec cs sar (bad) ret xchg les xor push nop xchg iret lods mov xchg decl dec fs (bad) mov inc inc dec and cli mov or fdivrp (bad) (bad) lcall in mov inc mov aas mov scas fidiv shr shlb xor adc dec fadds and hlt add xchg decb fcompl (bad) (bad) (bad) (bad) mov pop fisubr pushf cmp (bad) pop sub jb adc cmp lcall dec dec mov and sub adc or mov in fimull inc sahf xor loopne (bad) decl jae xor test xchg inc daa push inc ds pop rcrb out pop and pop xor inc stos mov (bad) pushl mov movsl sub popa movsb push shrl cmp jae pop pop fmuls ljmp daa jge add mov sub loop lret jae rcll (bad) ljmp (bad) iret push mov es lock pop push lcall push jne std decb push sbb (bad) (bad) mov inc mov sbb insl out push iret mov (bad) ljmp sub lea dec xchg xchg pop sti in sub (bad) fisttp shll pop scas mov out add repnz mov and scas add test lea dec (bad) (bad) jg into fptan out iret out (bad) jae imul movsb pop cmp (bad) jmp (bad) mov dec loope loope and in xchg sahf mov fiadd aaa inc stc mov sbb lods fcmovb outsl jge mov xor mov (bad) (bad) (bad) mov or or lds addr16 (bad) les cmp inc adc ljmp fist add and and (bad) (bad) jg mov sub or push movsb adc fnsave stc repz jo (bad) lcall test adc pop lock jbe (bad) rorb (bad) cmp (bad) (bad) pushl and mov out jae or sarl cmpsl lret adc (bad) cmp dec cmpsl dec pop pop push mov rcr shll fimul sar (bad) jg orl sbb movsb sbb mov es or (bad) push sub sahf js push out ljmp push mov lods (bad) sbb adc push pop outsl xchg pop fcompl ljmp xor xor loope ljmp mov inc negb movsb jle enter cmpb ljmp xor shll jno add rep xorl daa xchg push sti jno inc sbb lds mov aad cmpsl or (bad) (bad) clc adc out mov mov jne pop repz adc push pop daa and (bad) jmp mov xchg pop insl cwtl adc aaa (bad) (bad) jg and sbb test pushl adc loope push fidiv xor call xor mov xchg dec add mov adc lock out add mov into int3 push mov add outsb mov lcall outsl push cwtl mov xchg les mov out mov lret (bad) (bad) jmp push pop aaa xor pop scas movsb pushf sbb xor cmpsl xchg (bad) (bad) (bad) ljmp cs iret icebp sbb lret into cmp leave mov lods test push add lcall lods cmpsl xchg pop mov and push jo xchg (bad) (bad) (bad) jmp stc shrb pop popf lea test xor sub ss or (bad) lcall push mov lods and inc xchg adc lods aaa hlt int addr16 inc std decl and ret sarl insl xor cs (bad) (bad) mov mov mov ljmp mov data16 adc push loopne dec sub stos shll test (bad) dec in pop cmpsb ss sbb pop sbb imul enter hlt (bad) (bad) (bad) jmp sahf jbe cmc pop push lret out insl gs mov mov les sbb pushf (bad) (bad) (bad) pushl (bad) mov cmc mov jmp push mov and jecxz (bad) lods mov enter (bad) mov push xchg mov ret add in xchg sub icebp call insl iret xchg mov outsl mov decl fidivr pop testl jp pusha xor (bad) (bad) (bad) jg ja mov cwtl test or add cmp push ret mov or (bad) and (bad) (bad) jg into cli into pushf xchg xor mov stc roll mov sub (bad) (bad) jmp dec (bad) iret push (bad) cmp pop or xchg (bad) mov sbb enter jne pusha std test neg out loope dec mov and clc aam pop jbe sub jg (bad) jmp mov ret sub lea pushl pusha nop mov lret fsts cmp inc or push pop scas add cmp dec or mov loop mov popf and hlt fcomp call (bad) ljmp cmpsl cmp movsb ljmp mov test (bad) cmp ljmp jne jae adc xchg js fmull jle inc insb jmp (bad) (bad) (bad) incl in add ljmp mov jmp push fsubr les (bad) (bad) lcall inc addr16 out repz inc loope js mov outsb fmull adc gs je (bad) (bad) incl imulb or mov icebp lret inc mov inc xchg hlt insl aaa ret loope xor (bad) (bad) (bad) decl pop insl imul in hlt jle xor mov and (bad) (bad) pushl or sbb pusha and mov fwait repz (bad) enter fisubl in lcall call push add sub jl jl (bad) insl (bad) sti or ljmp pop test jmp add (bad) (bad) lahf adc push imul in dec loopw (bad) call (bad) cli xchg adc sti outsb loope repnz std aaa repz clc cmp lea push lcall imul xor mov add mov adc ret arpl insb push nop rol cli aaa std pop pop and inc add xlat xor pop (bad) jae (bad) ljmp adc mov add mov (bad) lods pop xor jns (bad) xchg add lret push (bad) (bad) inc mov out daa push aaa test mov mov in scas cli or ljmp pop xchg testb in jae hlt add std (bad) (bad) inc adc sub pop and mov dec adc jg popa aam mov sahf test in cs adc jge jp dec sbb (bad) call loopne lahf cli lcall cmp mov fcmovbe outsb lock (bad) ja lcall lret fisttp cmp and sahf jno daa mov imul addb add xor push inc push mov decl mov int3 push (bad) inc loop or call testb push mov pop mov dec aas push dec mov insb (bad) jecxz (bad) out into dec xchg xchg cmp pop hlt push push push jl cmpsl les pop andl lcall and (bad) mov inc data16 ljmp arpl sbb cmp sub sahf test cwtl or (bad) and (bad) (bad) fisttp mov ss mov lahf cmp push (bad) cltd popa inc ret adc imul loop daa arpl mov (bad) call push (bad) sbbb push cmc fiadd add pop fwait data16 jnp xchg (bad) (bad) (bad) call testl add xchg add clc dec xchg push fnstcw js loopne (bad) pushl mov lret (bad) cld mov push iret cmp pushf (bad) sub lcall mov sbb xor or mov rorb stc cmp add and xchg pop inc nop test sbb cmpsb negb out pop mov (bad) (bad) (bad) cmp inc mov or sbb or (bad) and mov jecxz (bad) jmp xor mov lods gs mov fisub lcall scas inc or sub adc jg sbb mov std (bad) jmp rolb pop incl mov push mov dec cmp sub xor into faddp add (bad) (bad) fiadd mov lock punpckldq mull aad jmp decl inc adc or out lret and popa add mov jle cmp pushf pop (bad) (bad) fistpll mov mov jp sub mov (bad) fisttp xor xor or pushl jg inc icebp and jmp push aad shrb popa and or mov pusha mov jecxz (bad) (bad) ljmp fwait lods lods mov cmc outsb jo dec adc jno outsl sbb adc push lcall mov in jp push push adcb out lret mov adc lcall ljmp dec xor fistp je repnz lret ds push aam fsubrl arpl (bad) (bad) (bad) dec imul and or xor repnz sbb mov sbb sub cmp in les into or (bad) fnstsw jg jmp sub hlt roll (bad) (bad) lcall test cwtl sbb ja or sbb mov or (bad) push int3 (bad) (bad) (bad) call dec pop pusha jge rcrb pop fbstp jno xchg jge stos mov sub push adc (bad) call jl add push cwtl packsswb int3 jl pop in or imul imul fcoms dec adc jg ret pop rcll xchg std mov inc push fsts push xchg (bad) (bad) cmp data16 aas cs stc mov push lock jle rol jo in push decb (bad) pushl dec dec pop dec (bad) push nop add aaa xchg inc mov decl dec ret xchg xchg mov adc std mov (bad) sub or lcall lcall loop std addl dec adc add fild cmp jae clc (bad) mov (bad) (bad) jmp cmp fwait leave cld loopne or or push add adc push (bad) jmp call dec mov les mov inc incl push cltd mov push ficom mov stos sbb loope mov cld sar (bad) decl out clc imul mov lods jbe sbb (bad) (bad) jg lods in scas fwait loop into push stos lcall mov sbb (bad) (bad) (bad) (bad) mov xchg pop xchg mov jl mov mov fwait push jge xorb (bad) (bad) out jb ret cmc popf sbb cwtl jle in div inc xchg adc lahf pop repz imul xchg push fucomip and icebp es xor inc jg push inc jl cltd (bad) (bad) (bad) cmp mov sub push dec nop jecxz mov sub push or push pop inc (bad) (bad) (bad) pushl lcall adc mov add outsl lods test (bad) (bad) (bad) jmp test push xor sub xlat test sub (bad) (bad) (bad) in notb jnp sbb dec sub mov and js cld js fisttp lods (bad) adc (bad) mov aam cltd xor xor cmp fistpll lret mov (bad) (bad) (bad) jns popf mov pop xor insl lret scas ds pop aas jecxz cmp push pop mov push cld lock incl insl sub mov pop unpcklps cmp pop dec orl (bad) sub ret insl jecxz cmp sbb mov cmpsl and mov push fnstenv jp push mov adc mov scas dec (bad) xchg mov outsl dec mov mov mov ljmp pop adc insb pop out jecxz in adc xor xor divl (bad) in clc lds inc sar das jge pop xor push mov cmp (bad) (bad) pushl hlt test cs (bad) popa stos dec fcoml cmc dec loop xor cmp (bad) (bad) (bad) pushl ljmp mov cmpsl cwtl push mov cmpsl fmuls jno sub repnz or (bad) (bad) jmp arpl sub ret popa pop xor push jmp ss scas (bad) call mov push (bad) xchg xchg lcall (bad) in mov std or sbb dec inc (bad) cmp scas in mov pop xor lcall cmp lea mov out (bad) (bad) incl pop push (bad) mov test inc jo ret or push fimull (bad) (bad) (bad) fisttp mov fdivs cmp inc icebp dec push andl cmc pusha call mov out rol pop icebp fsubrp cmpsl jp out push scas lret js or mov mov rolb ss mov xchg out fnstsw mov push push push je xlat xchg mov and out pop out cmp and jnp data16 (bad) (bad) (bad) (bad) (bad) dec add xor test push nop popf adc pushf pop testl or (bad) (bad) lcall dec sti sti pop push rorb rclb push (bad) xor inc and popf fprem (bad) lcall add xor enter orl (bad) (bad) ljmp mov roll fscale outsb out cltd push mov outsb xor fistpll (bad) (bad) ds mov sbb jo push xchg mov into jmp xchg (bad) pop testl xchg pop mov fisub (bad) (bad) push sbb dec test mov fwait xchg in mov roll sahf jnp (bad) (bad) (bad) inc mov xor mov xchg cmc or (bad) mov ret scas jo decl or inc mov das mov pop aam cwtl cmp (bad) (bad) (bad) (bad) sbb leave out mov and lods cmp jecxz jns test xor push enter loopne push mov scas add in (bad) fisub lahf lcall sbb or push test xlat inc gs cld (bad) (bad) incl xlat mov popa xor dec pop mov or add call push sbb dec push or or aas push mov ret (bad) (bad) (bad) jmp pop jns xchg loope int sub adc subl and jne or or cltd outsl outsl xchg xchg mov add lret jne ja fstp cmc (bad) (bad) cmp mov inc push mov out xchg inc push ficompl mov push inc (bad) (bad) dec and and js pop in iret pop inc pop pop dec out cmp lret and xor mov mov jge adc add cmp pop inc ret (bad) incl pop mov and mov aas jle repz (bad) lcall pop push pusha neg dec add mov xor push and leave (bad) (bad) (bad) decl aam aam add dec lods jl lahf sbb sbb or icebp and aaa loope cld es lcall mov rolb mov addr16 ljmp jecxz push dec adc es push push push fcompl scas cmpsb (bad) (bad) mov subb cmp mov mov (bad) lcall iret push xchg mov add roll test loop (bad) (bad) decl ds ret sub (bad) lret add cli xchg xchg insl (bad) addr16 add (bad) lcall ljmp jp cmp shrl fdivr (bad) (bad) ljmp push mov insb cmpsb cmp jecxz mov lea (bad) int (bad) (bad) (bad) (bad) mov cld outsl jo pop dec dec jle cli xor pop movsb adcl dec mov (bad) fcomip ljmp sbb clc pop pop add cmp lret test sbb or xchg loopne out pop icebp mov lea aam push je or inc shll (bad) call sbb lds inc adc mov add mov jmp xchg (bad) jg adc inc inc lods push pop pushf loopne xor int push stos cmp data16 push addr16 pop cmp popf scas pop sub loope xchg mov inc jnp adcl adc out cmpsb lock pusha push pop mov inc fdivrs (bad) (bad) jg clc sbb inc mov ret mov sbb adc xchg add mov inc xchg lods pop push and push mov fldl jmp sbb out pop jns stos mov in loopne nop xor imul (bad) ljmp cmp fs pop popa sbb push add push mov adc (bad) mov mov scas das sar mov mov mov dec add (bad) (bad) fcomip fsub push jno ficoml or aad mov jge mov add pushl divl inc cmp inc shrl cmpsl loop popf and xchg mov (bad) mov jl mov mov inc xor add scas push mov dec pusha nop (bad) or mov iret sbb xchg fs jle dec ds xchg (bad) push ds ja call jp pop and addr16 adc sub mov jne je test mov xor cmp pop mov adc mov cmpsb ds or arpl add dec lods fisttp ds dec (bad) lock nop mov sub or imul xchg pop mov xchg mov stos jmp repz xchg mov sbb pop and imul cmpsb gs loop sub arpl imul leave xchg dec fildl fildl or sbb loopne (bad) (bad) jnp dec hlt rcrl mov dec int3 gs dec ja (bad) sbb and ret xchg pop sub fs sti jecxz sbb repz (bad) call lret shl test xchg (bad) adc jle lds (bad) (bad) (bad) call xor out xchg pop cmpsb mov cmp (bad) aas add push lds add dec and mov push ret int sub ficomp cwtl pushl (bad) (bad) mov leave xchg nop fsubl les iret push mov mov (bad) jmp add inc out pusha insl pop aam mov cmp pop (bad) incl dec sbb arpl adc (bad) (bad) (bad) fistpll fisttpl in cs xor jle enter pop xchg je outsb jle mov cmpsl icebp (bad) (bad) (bad) cmp add (bad) mov xchg decb adc imul test (bad) decl cs lret dec xor and lock cmpsl dec in (bad) (bad) (bad) (bad) call cmp mov cmp iret mov mov jle in dec cmp cmp sbb mov cmpsb lret decl lea jge cmpsl adc sub xchg vpaddb (bad) (bad) (bad) cld cmpsl inc mov ret cmp pop push arpl mov (bad) (bad) (bad) jg sbb push inc sahf cli rolb add mov xor pop and (bad) (bad) mov aad aam lret int aam in sub pop (bad) ljmp pusha scas loopne pop out xchg lea fistpll sbb push insl push stc ja loopne fwait or sub stos in jmp xchg cmc aad lock std imulb xor es (bad) (bad) (bad) (bad) fucomip sub mov sbb or xchg xchg push mov inc in and std out loop or push pop cld scas test pop sbb or arpl leave mov jge call push popf push sbb mov sub test sub (bad) ljmp fimul and sahf cltd jmp xor sbb mov adcb ljmp push pop dec adc lcall pop fiaddl outsl fist sar (bad) (bad) jmp mov test cmp mov push addr16 mov dec fs mov mov (bad) dec mov negb das sbb mov lahf and mov jle mov outsb add xchg and movsl jnp fcoml cmp lcall add shrb jmp inc mov mov (bad) (bad) (bad) ljmp mov stc add icebp jnp jge loopne fcmovnbe xchg jae adc test daa sub pop movsl pop mulb je dec jne and push outsb es and shlb mov icebp imul mov je (bad) (bad) ljmp movsl xchg (bad) fmul and scas clc lret sbbb jb pop push pushf loopne or inc and (bad) (bad) call inc (bad) mov push mov jo ljmp mov sbb ljmp cmpsb inc fsubrs fbstp and jne cmp scas adc movsb jle sar (bad) (bad) push rol sbb lock jns pop js xor mov ret test mov adc outsb in pop inc mov or or gs (bad) in (bad) int3 in stos xor mov icebp inc lods enter mov lods mov add push xor out sbb jecxz add push repz or js sub (bad) mov jl add and sbb addr16 (bad) (bad) (bad) (bad) call out div mov loop mov jns push loope mov adc xchg (bad) inc jb test cmpsl popa jle add or mov pop in call movsb cmc imul xor cld adc add inc or movsb xor incl mov push add loopne and (bad) (bad) pushl sahf xchg pop out and mov xor int sub rcll (bad) jg and and sub loop test outsl clc (bad) dec std mov in jcxz cs inc jmp cltd cmpsb call push cmp jl aam dec jl mov into inc and mov cld cmp pop jg (bad) fistpll sbb nop mov gs (bad) out lods jne and scas cli jmp int3 cmp out sahf mov jl adc fs (bad) (bad) (bad) ljmp fstpl pop sbbl jmp aas incb fimull (bad) push pop add scas arpl repnz loop and call mov sbb ds (bad) movhps jbe adc dec sbb adc push or test (bad) (bad) (bad) fnstenv movsb ss dec (bad) and lea mov push movsl (bad) (bad) lcall dec mov jecxz xor dec sbb jmp and pop aad decl stos je test jle jb jl jecxz lcall jg inc ss sub push bound cmp nop rclb jne mov lahf jbe sti (bad) (bad) (bad) (bad) fimull mov aas sub pop ret lcall mov xor (bad) (bad) decl in adc ljmp push aas roll push nop es (bad) (bad) incl inc mov test test andl cmc jg xchg (bad) (bad) fildll add rolb cmp leave and ljmp movsb hlt xchg ljmp (bad) (bad) (bad) ljmp aam push cmp add cmp jmp lock cmpsl fnstsw pop and scas mov lods outsb jns (bad) xor rolb (bad) mov add call add (bad) lret pop icebp (bad) incl mov sub in jnp stos stc and jl and add (bad) pushl push sbb mov add (bad) call mov hlt andb xchg sub sbb cmpsl pop push and (bad) (bad) fisub (bad) int3 outsb dec test mov mov insb lods cmp idiv jmp in (bad) ljmp roll pop dec das push xchg icebp (bad) (bad) in sub jg push push shll jmp xchg cmpsl ss sti cmpsb int (bad) and xchg mov push (bad) sahf and (bad) (bad) incl push mov jmp adc sub stos mov mov inc mov call adc mov and repz cmp popa insb movsl in lcall xchg inc outsl sub test (bad) (bad) incl cld loopne sub daa mov pop insl aas inc lods inc popf out mov inc jmp mov or xor out (bad) (bad) (bad) ljmp and bound jb jbe mov movsl mov lret jle outsl mov aaa cmp ljmp jbe (bad) (bad) call call mov xchg cmp dec fnstenv ret pushf pop push js and fscale (bad) (bad) lcall ffreep nop call lret bound push out ret es push outsl loop sub clc jg push adc xchg push fcoms test and xchg cmp inc mov mov (bad) incl xor sbb pop out stos push add test (bad) jg,pt aad xchg sarl stos mov (bad) (bad) inc jbe test (bad) fsubs imul push shll bound inc xchg outsb clc (bad) (bad) jmp in test cmp push sub push jmp loope gs insb adc pop mov ljmp jl inc cmp jnp sbb cmp inc sbb mov mov mov clc mov mov mov sahf nop (bad) (bad) (bad) lcall xchg or out in jo cmovle (bad) mov addr16 daa ss xlat mov ret idiv (bad) (bad) ljmp loope fldl push cmp mov sub push or xchg (bad) (bad) (bad) decl jbe xor mov cmp pop sbb pushl sbb (bad) (bad) incl bound mov jns ljmp ret int3 cmpsl ret push sbb (bad) mov cli (bad) jmp push iret out movsl jae fstpt mov adc lcall lock (bad) (bad) (bad) cld mov push in cmc jne or xchg sub hlt fiadd (bad) push scas out jecxz aad lods shrb loope ljmp popa (bad) fiaddl mov fs inc js (bad) (bad) (bad) fildll pop enter loopne push call test mov lds mov sub (bad) (bad) lcall bound fldl mov in sbb mov es inc aas (bad) (bad) (bad) incl outsb sahf fnstenv in je (bad) fnsave pop orb in aaa push xchg call cmp mov test pusha lret nop xor aad xorl mov (bad) (bad) incl pop ds or pop imul sbb jge mov aas leave cmp jns adc add fdiv decl out mov push mov in (bad) decl enter dec push lock lock push jb xlat (bad) ret (bad) ljmp movsl cmp rcrb (bad) xor lods pop push aaa jo dec iret sub mov decl adc nop jecxz fcmovbe mov (bad) (bad) (bad) call mov sbb and jle cmp in pop sbb mov inc (bad) pushl std mov push ljmp xchg pushf mov xor scas (bad) (bad) (bad) (bad) insl movb std dec push xchg add das pop push icebp sar sar mov push bound cmp inc or jb es fwait in mov (bad) (bad) ljmp out (bad) jne clc nop popa xchg cmpsb push icebp cltd mov test inc fnstenv je and repz int (bad) pushl js sbb lahf icebp sbb xchg sbb js and mov pop push or arpl fmull sub adc cmp jmp (bad) iret cld cmc cmp ds add data16 (bad) (bad) call xchg aam cmpsl inc test mov test sbb das dec cli xchg (bad) popa addr16 (bad) (bad) incl movsb inc jge xlat inc cld shrb arpl out cmp cmp cmp (bad) (bad) incl out mov aas jno out xchg xchg insb cmp jb mov xor imul std ss mov mov sub (bad) (bad) (bad) incl lret mulb mov dec test or js mov jecxz jae add (bad) (bad) std shll jbe or stos imul js fcmove or mov xchg scas inc leave xchg test lods add leave sar (bad) call cmp pop mov (bad) push sarb ret inc sti xchg push fs pop inc in add xchg es pop inc popa fimul clc sub jmp ja or popa scas cld out jb lcall pop cld incl cmc sti outsb xor insb dec sarl in xchg mov mov mov mov (bad) outsb lret (bad) (bad) (bad) jge sub ljmp pushf inc insl add imul xchg sbb pop cli (bad) jmp pusha ljmp jecxz add (bad) (bad) call cli push xor lret pop lods aam xor les dec bound fistpll mov int fidivrl dec and (bad) (bad) out shlb test std mov in pop enter int3 sub add (bad) mov xor in inc les call insl fldcw cld (bad) (bad) jg iret div (bad) xor cmpsb cmp repz aam in xor out fmuls and call pop adc das leave incb movsl fsubrs sar rclb pop (bad) (bad) (bad) ljmp lahf cmp jo int3 sub mov inc xchg loope outsl cmc inc aad (bad) call ja fs gs cmp add pop stc sarb fcomip jg and pop rorb xor sub push lcall mov xchg clc xchg mov dec xchg faddl mov std lods aas ljmp mov (bad) (bad) (bad) (bad) cmp sti jbe jns scas imul inc stos loopne cmp mov (bad) lcall mov or mov mov and cltd add adc (bad) call adc push roll roll sub dec (bad) (bad) mov int3 xchg push fidivr int xor sub cs cmp (bad) (bad) (bad) jl loope out add jno mov neg jmp test (bad) (bad) (bad) mov sub inc push pushf inc dec rorl daa into adc insl (bad) or mov pop std (bad) mov enter jb not sub outsl hlt xchg xchg cltd jae jg les sbb xor (bad) fcmovne fdivrl inc hlt mov or or cli (bad) (bad) (bad) inc inc sahf fistpl cmpsb xchg iret add jg sbb arpl mov sub idiv (bad) (bad) (bad) (bad) and mov pslld cld rorl and sub pop jp (bad) pop imul sub and aam and push xchg pop inc pop daa sarl stc xor (bad) adc mov arpl (bad) mov out pop jae jle test fwait pusha shrl mov jecxz (bad) rcrl ja leavew clc jmp add xchg mov bound xor push icebp inc dec insb mov scas (bad) jg incl cli mov orl es mov mov adc sub (bad) (bad) decl cld rcrl stos out das inc stc outsl (bad) outsb repnz std jnp cs dec pop or rorb (bad) fcomp fidivl pop add sarl push mov test stos and (bad) rcr roll fldenv movsl dec aad ljmp xor mov ljmp dec (bad) inc add test es xchg lock lret loope inc nop gs (bad) lcall in fwait jmp and nop cmpsb adc or add insl inc cld iret dec sbb (bad) (bad) (bad) mov or xchg jno hlt (bad) repnz iret shrb add mov lcall xlat (bad) (bad) (bad) push stos adc (bad) es jle jns lods orl pop inc mov or stos dec lahf jg and xor adc and add adc das cli fstps cmp les fs (bad) ljmp insl mov jbe pushf into sbb (bad) xchg xor mov cmc cmc clc in adc (bad) ljmp insb call ret cmpsl mov fidivrl mov lds dec push xchg fild dec insb push (bad) pop mov fs sti mov (bad) mov ja inc sbb mov pop mov ljmp (bad) in (bad) jmp and stos dec cs leave cmp or mov push imul (bad) ljmp test xor push test mov and popf sub ret xchg pop mov mov (bad) (bad) jmp cld dec mov mov jle or cmpsl jl aaa dec fdivrp outsl nop andl jp iret mov add out pop xlat int3 test mov insb lret cmp popf push std dec call loope add mov adc (bad) push mov mov mov daa xor mov push jp push mov pop mov (bad) (bad) (bad) dec loopne and ljmp outsl fwait push jb fwait inc ljmp (bad) cmc (bad) (bad) (bad) fucom movsl or push stc (bad) hlt xchg push mov cmc pop adc (bad) fsubrp mov sbb or mov jne mov (bad) decl (bad) inc push fsub jecxz xor cs inc mov cmpl adc (bad) (bad) call inc cmp nop cmp xlat sub adc sbb jl lea (bad) (bad) decl adc mov push icebp push mov fcoml mov push (bad) (bad) (bad) jmp (bad) cltd and les pop fiaddl clc (bad) and cmp and mov mov stc mov push movsl je and jmp xor or or mov loope xor negb pinsrw (bad) dec xor pop sub lret outsb add out sbb pushf loopne add xlat jb add les mov add je cwtl out out mov and dec xchg mov (bad) fbld fimul add push adc es (bad) dec and fdivrs imul fs int insb add (bad) mov dec push pop stc push jno add pop aad and xchg xlat lds aad scas test or (bad) stos dec cli push pop cld fdivr hlt lods cmpsl jbe add test mov mov lahf adc fnstsw push loop pop daa sbb and push sub push call adc lea and or aaa adc push sub cmp outsl sbb or cmp js fidivl or loopne lcall clc fadd jne lret and jb fwait shrd int3 ret sar call addr16 xor add mov xchg fwait das or and fdivs mov rcll push xchg scas pushf and cld (bad) aam in mov inc pop fstps cmp adc mov inc xchg jb mov cmc (bad) jno shlb fs sti (bad) call pusha arpl push cmp or mov mov out idiv (bad) (bad) jg fnstcw cmp adc xor sub addr16 fsubrl mov (bad) incl dec xor bnd mov mov sbb mov clc or insb cmp inc (bad) fmuls mov mov mov movsl cmp leave pop insl mov (bad) xor pop insl cld push imulb inc fisubr fdivr nop mov push das in dec dec (bad) call loop lods xchg outsl push jbe xchg mov fistpll subl sbb mov clc push mov xor pop jo lahf xlat divb xor dec lods xchg (bad) (bad) (bad) (bad) pushl mov pop flds movsb mov xor rclb sarl (bad) (bad) (bad) (bad) cmp ret vmovntps sub mov test mov fcmovbe call cwtl sarb mov (bad) sar (bad) adc (bad) mov or xchg cmp (bad) (bad) mov mov outsb mov mov jl xchg mov sahf (bad) stc jg ja (bad) call loopne add cli inc add push cli or push inc mov jg (bad) pushl sbb mov sub push (bad) lcall (bad) bound mov lahf push sub dec mov popf lods mov cwtl data16 sbb clc aaa pop aam and neg and (bad) (bad) ljmp sub enter cmp test (bad) jge leave adc inc (bad) (bad) (bad) call subl mov into pusha cli lods mov sti sbb xor mov jg (bad) decl pop clc xchg sti lds dec cmp jg outsl adcb in test sbb sub mov push sbb dec add push popf xchg fadds loopne (bad) jmp mov test pop pop arpl scas pop imul pop mov mov (bad) (bad) decl sbb leave cmp mov cmpsb mov (bad) (bad) (bad) call lcall sbb enter pop daa mov das cmpsl lods (bad) (bad) (bad) inc cmpsl popa push pushf pop dec enter push sbb xchg jmp js mov std (bad) lock jmp adc adc sub adc (bad) (bad) decl jp pop enter fistpll jo push loop jns int ret (bad) lcall insl lods xchg bound inc jmp test push out xchg sbb ja fldl cs faddp push sbb inc mov cmp mov cld (bad) (bad) (bad) jg mov cwtl lea shlb (bad) shrl mov dec sbb mov mov cltd test and (bad) mov push xchg stos mov mov (bad) (bad) call lret pop into lock xchg leave dec test (bad) std ret push cmp pop jno sarl and xor pop out jge sarb xchg mov mov decb jb (bad) (bad) incl xchg pop rcrl pusha dec insl dec sbb stc xchg movsl xor fcoml repnz rolb (bad) (bad) pushl lods pushl mov and mov inc outsb ret movl (bad) (bad) cmp adc jle repnz iret fisttp movsb hlt pop and (bad) (bad) call out xor dec xor fildll mov addl dec ret lds push adc (bad) jmp add mov div jp ja sbb sar ss (bad) incl sub inc mov clc mov adc nop or mov (bad) (bad) inc mov lock xchg js mov mov (bad) mov adc pushf pop inc jo out or (bad) mov stos or aaa mov cmp je cmp aas (bad) lods mov (bad) (bad) (bad) lcall fstps lahf cmp out add pop int mov add jne pushf std pop lock cmpsb mov mov inc es sbb incl or sub shrb bound xchg sar incl cld (bad) rcrl addr16 mov int3 jmp outsl mov (bad) (bad) (bad) fdivs in aad push mov mov dec pusha lea dec enter pop adc les xchg ja pop jo out (bad) inc cmpsl fucomip shrb jecxz popf xchg fstl mov out (bad) jl mulb pushl mov inc mov call arpl out lock sbb mov jo (bad) jg (bad) (bad) (bad) jmp mov pop dec push sbb jle aam cmp cwtl repz (bad) and push inc xchg scas clc push add sub in mov adc jmp cli dec mov ret les sbb adc jg ljmp hlt or rcll imul cli out add lds xchg sub gs cs ljmp jmp ljmp push adc outsl (bad) cld ljmp push (bad) (bad) (bad) incl rcrl cmp lock ljmp icebp mov or pushl sub inc in xor dec adc sbbl imul popa fwait int3 xchg callw lea lods pop jb mov pushl les lahf xor jne xor (bad) loop xlat loop sar (bad) ljmp mov lret (bad) faddl lahf (bad) out or push and mov (bad) (bad) stc sbb out mov cmp fs jg dec rep lahf push iret inc inc gs jg,pt (bad) mov lods push out or outsb lock pop adc stc ret jbe sub mov fisubrl (bad) (bad) lcall das je lret inc mov aad cmp inc sub push fyl2xp1 repnz lcall hlt frstor in jle (bad) clc lahf cmpsb lea cld (bad) lcall xor stos rcrb cmpsb lock ljmp (bad) (bad) call and bswap adc push enter (bad) bound xchg xchg jg imul dec sub mov insl push inc adc pushl cmp push inc enter (bad) ljmp test enter sarl bound pop mov leave pop push std (bad) (bad) fsubr pop ljmp dec pop sarl out sub mov pushl dec adc add out add fildl repnz mull (bad) (bad) jmp jecxz sbbl xchg push call mov iret (bad) xchg test (bad) (bad) call push std push ret xor insl add cmp mov movsl bound aaa cld jl dec push dec and mov bound inc xor (bad) (bad) lcall pop inc sbb aas rclb loope sbb sub je cmp clc (bad) (bad) jg (bad) cmp add loope push insb inc pop imul sti xor xor out rclb mov push mov int3 mov mov sbb mov or mov pop mov rcll xor mov aad (bad) (bad) (bad) (bad) std mov push mov mov lock mov jne outsb mov mov (bad) pushl push sbb mov lods dec push dec lahf cmp pop pop sub imul jp sti mov sub stos lock scas cmc gs ss pop ficoml mov adc (bad) mov mov dec cmp mov fldt xchg cmpsb ret cld sbb inc js (bad) (bad) (bad) (bad) fldl aas jle in push adc sahf jb es xlat jo cmpsl and push xchg std mov (bad) (bad) jmp scas shr mov and in in aam loope clc jnp jno inc (bad) (bad) (bad) incl xor add xorb sub pop mov push stc mov es lods mov push mov sahf xor rcl inc pop xor call mov cmp cmp pop dec ss add or loope hlt mov fldcw fs add lret push cmpsl fsubl dec les stos inc (bad) ds aas inc cmpsb sub loope sub (bad) decl je movsl xor ss orl ficoml js cltd fimul and push popa loopne and pop pushl mov or je and imul mov xchg (bad) (bad) lcall stos dec out sbb mov fstpl push std push inc or mov mov add inc add xor jae test sub sar lcall adc popa and cwtl inc mov pop out lea adc inc lahf pop and outsl out lahf addr16 push sub dec addr16 cmp xchg mov xchg clc (bad) ljmp test test mov and repz sbb loope (bad) ljmp stos (bad) lfs loop or subb inc (bad) js xorl fisttp push insb (bad) (bad) (bad) incl movsl aad mov mov push sub dec arpl push inc mov aad ret clc (bad) jmp loopne push sbb je shlb sahf xor (bad) jmp mov pushl ret adc inc pushf inc and xchg xor ds push xchg adc xor idiv das mov ja cmp ds out lea mov daa adc push imul lea movb push dec sahf dec add pushl pop int sbb fstpl inc les imul mov cmp clc mov mov out rcl test (bad) repz ss loopne lock adc incl cmp call pop imul mov sub mov mov imul add lcall add stos jl out cli hlt and test scas mov (bad) mov movsb out pop scas push inc (bad) sbb call (bad) (bad) inc and (bad) fwait mov cmp push (bad) aas mov in (bad) cli add imul add and jl mov xor icebp loope inc mov loope pop pushf mov call decl xlat push data16 or andl jo pusha xchg push jns pop test (bad) (bad) pushl sbb sahf ret inc mov adc mov xlat addr16 js xor (bad) (bad) ljmp xor pop jnp test push dec iret adc jno or fwait insl inc or cli (bad) jg lcall xchg push packssdw ret outsl sbb cld mov (bad) outsb adc pop mov shlb inc adc (bad) incl (bad) (bad) fisubl sub in cmp mov ljmp jbe push or outsb inc xchg hlt (bad) decl push or imul (bad) aaa pop dec xchg (bad) (bad) (bad) out mov loopne lods aaa lret and repnz or dec mov inc popa xchg out ljmp (bad) xor sbb mov js aas (bad) mov lods push mov call jmp lahf mov gs (bad) ljmp sahf (bad) daa adc jge fisubrl pusha out shrl (bad) iret mov xlat (bad) (bad) (bad) (bad) fcomps mov or mov sbb cs jp dec ror lret lret and (bad) jg pop sub push mov sti mov dec sbb (bad) (bad) (bad) ljmp out loop sub les (bad) adc (bad) dec cld xchg jnp (bad) stos lea mov mov ja jb (bad) loopne jno fwait jnp sbb aad dec (bad) repnz orl (bad) cmpsl es (bad) (bad) (bad) lcall sbb lret daa jle push push clc es jp mov dec clc jb loop adc jns (bad) (bad) decl fstpl insl test xchg dec xchg mov outsl fcoml nop fwait inc fs sar (bad) (bad) call cmp out sbbb clc pop push push or shlb arpl cltd mov aam add (bad) (bad) (bad) (bad) out test cmp ja or jmp mov mov add idivl cmp push adc cmp jge xorl or pop mov (bad) (bad) mov pop sahf outsb (bad) xor jge je mov mov or mov jmp jmp xchg jge xor loopne push add repz scas mov ret sub cmp pop test pop or (bad) jl fs fimull (bad) out movsb mov es jnp (bad) (bad) pop movzbl add (bad) ljmp xchg xor xor pop xchg and gs xor jg (bad) (bad) mov sahf and xchg subl pop mov pop or movsb push (bad) (bad) (bad) ljmp lahf push cmp xor mov lds bound or lcall decl dec pop clc ficompl fucomip push adc mov add cmp (bad) pop addl hlt push cwtl nop adcl leave cli push jbe ljmp rcrb stos in ss mov push dec fidiv sbb out add decl movsl nop inc mov push out (bad) ljmp or push mov cmp test adc sub lods mov cmp add adc mov dec inc or decl jg outsb inc cmp and xlat test mov mov cs subl test add pop jb cmp inc mov icebp cmc adc insb xchg ja test popf aaa dec pop insb fldt sbb ja call jmp cmpsb pop cmpsb lods jbe mov fild pop inc xor sbb (bad) (bad) (bad) pushl or shrl test push dec mov fcmovne pop pop mov das gs (bad) (bad) (bad) ljmp notb cmp and mov popf mov idivb ret (bad) and stos lahf jecxz sbb pop xlat mov stc jbe push pop fwait mov jg dec mov xchg push cwtl add (bad) (bad) (bad) decl lods int3 call lahf roll push and adc test mov (bad) repnz add (bad) fcomip (bad) xor xchg int3 mov adc dec jb xor xchg (bad) (bad) (bad) lcall cmp xchg pop scas (bad) popf mov rolb and mov inc add (bad) ljmp ret inc in or shrl inc mov (bad) xchg aas xchg fnsave shrb xchg pop imul (bad) (bad) (bad) mov das cmpsl xchg mov mov and add pop inc hlt mov in sti aaa hlt mov dec out test pop cmp lret fs jg cmc mov push mov dec mov (bad) (bad) incl ds sub mov sub mov repnz fs loop call lds repnz int stc jae pop jne je popf and lea sub loope (bad) call stos jb fisttp aaa adc fs mov xchg cmp cwtl adc fisub lretw mov dec arpl push sti or (bad) (bad) mov in andl push leave cmp je cltd ljmp jno mov and push nop ds ljmp insb jmp cmp jl xchg mov (bad) jmp mov (bad) sub xor and out cmpsl cld (bad) (bad) (bad) call mov (bad) pop push popa imul cmp pop sbb subl pop (bad) pushl scas xchg jge sahf mov ljmp cli mov mov add (bad) (bad) call negb into inc (bad) std negl pop sub inc push psrlq xor (bad) jg sub mov mov xchg fs fistpll (bad) jo cmpsb pop ss mov mov push push sbb sub pop stos mov mov bswap pop mov mov (bad) (bad) jmp mov inc sbb or (bad) mov repnz popa cmp push ret mov push std ljmp cld push ret pusha mov pushf inc push xchg push jmp not stc xchg inc aas fwait xchg (bad) (bad) (bad) pushl xchg push sub push stos popa sbb shl (bad) mov test pop xor (bad) clc rcrl outsb cs xchg outsb adc xchg roll xor pop push sub mov decl pop fadds cmp (bad) jo inc (bad) call cld xchg inc aam (bad) cmp sub push add mov mov bound gs out into daa sbb pusha xchg add loopne (bad) jp nop nop add (bad) (bad) (bad) pushl and sub jnp ja std mov shll rcrl pop adc mov fwait clc outsb fxam lret cs jo adc jl add ljmp pop ret jo dec mov add aam scas xor push push in lea jmp inc mov jge sbb roll jg clc mov inc test sub call lods mov (bad) mov or xchg adc imul or (bad) inc adc out sbb jl arpl (bad) (bad) lcall maxps fcoml mov jbe mov fmul test stos and add mov xchg xor pop and shlb rorl incl add push xchg adc (bad) mov pop and fwait mov pusha (bad) (bad) (bad) mov inc fwait adc dec addl sbb mulb dec dec xchg sahf addb ror pop adc lret std movsl and outsl mov jp cmc jg roll lds movsb mov mov movsl (bad) (bad) (bad) out ds ss jae movsb xor aad mov jmp fiadd xchg movsb (bad) (bad) mov (bad) pusha jecxz and mov cmpl adc outsl cli (bad) stc xchg push inc (bad) cmp cmp adc repnz (bad) mov or add sahf lcall aaa mov popa mov aaa or call fiaddl jo jecxz add inc lahf mov pop cs and pop gs mov xchg jl inc dec xor (bad) (bad) (bad) (bad) stos push insl push loope cmp push (bad) stos pop in mov lods repz mov (bad) mov xchg dec push add pop mulb add out mov mov (bad) (bad) call pushf xor inc mov mov jns inc fildll push pop pushf adc sahf sub aaa push mov inc xchg pop scas xchg push sub cmpsl in mov int mov lret cmp adc mov movsb (bad) (bad) (bad) call or ss jne or jo dec ss and push js sbb icebp movsb cld sarl call mov js mov mull push jge mov (bad) (bad) (bad) (bad) jmp push and jo leave nop cmp add int3 lea or push loop dec xor (bad) (bad) mov or ret adc jo lret jno sub jae (bad) (bad) out clc add mov insb mov insl cmp cmpsl lock xlat xor adc jle (bad) (bad) (bad) ljmp aam xor mov int insl push pusha jmp push xchg push or ret sti lcall inc mov icebp add add push or aad sub movsb inc xor (bad) jmp adc sbb mov jns push cltd imul outsl pop inc mov gs jle adc jmp adc add xor (bad) mov test mov popa (bad) and xchg dec call (bad) ljmp add and test push out mov mov mov mov adc cmpsb jbe decl roll jnp mov inc cmp push das in into fsub stos inc test (bad) (bad) (bad) lcall jno mov dec pushf adc mov xor push mov aas cmp cmc fstl dec arpl mov std and pop mov and lcall rorb stos js out das jb jmp push sbb (bad) (bad) (bad) mov jl roll add lds lgs sub loope fistp in jmp lock (bad) (bad) (bad) dec xchg pop push jae ss xor cmp fisubr adc jmp aaa cltd (bad) mov mov hlt out arpl pop popf add (bad) call push lahf mov and notl and push jl enter (bad) mov sbb mov (bad) push pop fistl cltd add addr16 jl inc dec fisubrl ja and (bad) inc stos mov adc (bad) jp popa xchg xor std ds ds loop sbb lock fwait xor (bad) cmc pop adc test (bad) (bad) (bad) decl (bad) push and mov push mov fsubr imul sub out lock test (bad) inc mov push xchg into mov cli cmp (bad) repz pop ds sub adc cmpb dec mov lea ss cli sarl into mov hlt sub sbb (bad) (bad) (bad) out mov ret cltd sbb sarb (bad) and xchg out or ja aam popa ds jb es jae jnp sbb imul movsl and mov pop sbb (bad) (bad) mov cltd insl ret mov mov dec aas and rcl mov sbb (bad) (bad) (bad) push sti aad xchg pop xor mov lahf jb pop sub add ret mov (bad) (bad) mov inc aad loop mov xchg mov cltd pop outsb or inc loop (bad) (bad) pushl push jg mov outsb iret add xchg gs jecxz sti mov test mov (bad) (bad) dec cmc dec test scas pop ret and decl lods inc mov and jecxz dec (bad) (bad) pushl repnz repnz sbb cmc mov mov movsb pushf sbb in rcrl mov push jns (bad) in or test cmp jmp and jp xor jb imul ficomp push (bad) (bad) (bad) (bad) incl jbe repnz xchg pushf push pushl into subb mov stos mov pop or lods sbb leave test jae or fstpt ss sahf xlat fsubrl sbb stos and dec popa push fsubl push (bad) call scas out call inc ds push and das es mov mov xchg out aas pop inc mov lcall or (bad) mov adc movsb sub inc clc dec fildl mov insl aaa movsl sub mov sti mov jbe jns les (bad) sbb movsb insl jecxz jo into jl push nop (bad) (bad) (bad) (bad) in jnp push or pop add sub push ficomp and in (bad) (bad) (bad) (bad) (bad) cmp test or lret jmp ljmp scas mov push stos (bad) (bad) (bad) jg lret add loop je fwait lock call out in xor pop daa jle test incl icebp sar pop das sbb (bad) (bad) in push jle insb aas lods es loopne idivl mov aas enter mov test (bad) (bad) (bad) call scas pop flds leave addl sub test movsb xor repz (bad) (bad) incl push inc and (bad) ja popf mov loopne insb push dec cmc dec nop push sbb dec movsb (bad) lcall (bad) das stos pop movsb cs test fwait rolb dec sub pop dec pop and dec das clc (bad) ljmp stc xlat out sti mov cmp adc cli xor push clc (bad) (bad) call ffree ljmp and inc dec pop insb mov cmp dec adc (bad) icebp orb or mov or (bad) (bad) (bad) mov sub lea cltd sti inc pop (bad) and mov mov xchg sub ljmp incl out les (bad) sub clc lock jno jbe pop mov xlat (bad) (bad) (bad) ljmp loop sbb inc add popa push xlat es in mov jne pop sub jae jg add jmp xchg dec sysenter out andl ljmp fsub sub jg lods cmp push push cld (bad) incl mov imul dec fdivs mov (bad) cmc push (bad) mov outsb (bad) je mov inc sbb js or lcall ss xchg ret dec mov (bad) (bad) (bad) jg xchg push aaa pop in insb leave rorb xchg mov mov xorl fs mov xchg bound (bad) dec mov rcrl fstpt or lcall mov gs pop rol push add (bad) jg xor mov lcall jmp mov (bad) (bad) mov or mov push pop ficoml loop test (bad) (bad) pushl sbb lret xor (bad) int fnsave jae icebp fldenv iret jecxz add ret push cwtl rcr mov dec sbb xchg bound mov sub stos movsb cli (bad) (bad) (bad) jp cmp cmpsl sbb push ljmp jne mov test (bad) ljmp ds int sbb lea in js mov icebp and jae and roll lcall ret dec rcrl (bad) (bad) decl add add cmp fdivr scas push bound sub dec outsb sarb jns (bad) mov (bad) mov ds sarb jae inc (bad) lods (bad) dec imul jle (bad) fisttpll lock cmc fcoms push or popa ljmp (bad) cmp mov fwait jle sbb mov dec dec mov std out cli stos aam (bad) lcall (bad) mov adc sahf (bad) pusha push rol (bad) cmc inc imulb (bad) ljmp (bad) push (bad) adc xchg lods lret cmp and (bad) jns jo mov xchg ret (bad) (bad) (bad) pushl (bad) in jns mov fadds in add cmp mov or fild pushl cld pushl (bad) aad ficom cmp repz push cmp enter neg jbe mov aas or dec and sahf fs adc sub sub fwait lcall add sbb inc pop pusha xchg mov (bad) (bad) inc inc jg add jg loope jo xor (bad) and lds faddl jecxz rorb mov fisttpl lret fsubrl add xor lea add dec lcall sub loope pop sbb mov ds icebp and fbld fildl aam jecxz sahf movsb push aam sbb scas test (bad) (bad) (bad) call lea jl mov add cmpsb mov inc aaa pop fnsave (bad) xor (bad) (bad) call lahf add push cld fldenv sbb ror pop mov ljmp cmp xchg ds lcall in (bad) (bad) fcomip xlat std lret rolb xor inc imull or insb das mov (bad) pop es cmp xchg out push mov pop jge cmpsl stos sbb cltd mov jb mov dec js push (bad) call or mov fiadd inc push pushl jg imul jne test (bad) cli mov mov mov sub fisttpl add stc mov lock cmpsb add adc adc (bad) adc popf jge push nop ja iret sub dec outsb xchg shrb push and enter xchg sub inc and rcr cld cld ds je (bad) jmp jecxz cmp mov xchg adc xor mov dec pop pushf fdivr inc (bad) (bad) (bad) call pushf leave enter lea mov rcll in mov hlt pushaw imul (bad) (bad) (bad) ljmp push fdivp cld xor xchg lcall cmp jp cld and (bad) in (bad) (bad) mov fucom adc mov mov das push (bad) sbb (bad) (bad) (bad) (bad) fstp inc nop add das popa insb push movsl add jecxz sub or scas cmpsb cltd in dec insw mov jg loope jl sarl gs jle int int3 loope add int3 mov push mov movb subl (bad) jmp test push xchg push mov jmp icebp xchg jecxz hlt das dec or (bad) (bad) jg outsl aam mov sbb adc xchg jo shrb mov lods mov push xor mov ds es (bad) mov push cmpsl cmp xchg cmp clc (bad) ljmp addr16 lds (bad) out push daa mov rolb jno (bad) lcall push lods lds sbb xor test fildll push jne cmp fmull adc clc rcrb int3 popa ljmp movsb cmp pop dec inc dec stc cmp add lods adc push fsubrl pop xchg xchg addr16 jge mov popf mov (bad) (bad) out scas jle lods std xor scas (bad) mov sub xchg xor xchg test ds jns cmc (bad) mov inc lret add dec inc fnstenv mov dec popf add dec add arpl adc add xchg push pop test dec pop mov xor mov fdivl lret mov xor (bad) (bad) decl dec pop mov sarl es sti stc (bad) (bad) cli fs popa push cmp add or (bad) ljmp fidivr jo pop jmp outsb mov lock (bad) pop inc cli fild and mov (bad) mov mov (bad) (bad) incl lock mov pusha lods push (bad) or cmp jno pop daa inc aaa jg (bad) (bad) (bad) lcall mov sub (bad) dec push in inc movsb mov outsb xchg lods xor mov scas test mov xor in push or (bad) decl adc aas test or pop cltd mov stc es xor jecxz sar (bad) push pushl cmp sub (bad) xor add fnstenv mov jmp ret incl mov roll fadds jnp movsl pop xchg ljmp (bad) in shrl and js bswap rcrb lods inc cwtl (bad) push (bad) (bad) (bad) decl (bad) aam push gs mov cld mov xor test lret clc add test jge xchg inc mov in or xchg loopne cs leave cwtl loopne sahf and test (bad) incl push xor cmp lods cltd push jl imul (bad) (bad) lcall mov sbb mov (bad) test ret sbb add jb mov lcall arpl (bad) (bad) incl mul or or (bad) mov clc pop loop mov push loop sub mov pop pop and (bad) lcall jne movl repnz (bad) fildll mov jge fistp sar (bad) (bad) call fwait psubusw es lea hlt repz sbb repnz mov aaa std pushl fldl2t aas cltd cmpsb mov pop popf inc imul and lods push repnz call stos xchg int mov arpl loop popa lods popf inc xor xor add jg cmp pop ret lret sub loopne lods loopne negl ja (bad) (bad) (bad) lcall lods aas and fs mov pop add ror negb cmpsl shlb jp call jns into mov call outsl dec lret cmp xor xor jne (bad) jg call popf cmp xor dec inc mov fistpll push inc repz (bad) (bad) lcall pop jae push xor fadds xlat add lods inc sbb in sub imul mov inc mov sbb xlat or nop add pop hlt (bad) ljmp sti mov scas adc dec into xchg cmp (bad) (bad) (bad) decl out add cs inc out jno or aas dec push insb lods bound sbbl or lds lahf inc pop and inc adc loope out ds (bad) aas ja lods push scas or (bad) call inc adc sahf int sbb sub pop or lcall pop jecxz mov adc lahf fdivs or in lcall (bad) push dec cmp xchg loopne cmpsb negb aas cmc insl jmp (bad) lret (bad) (bad) (bad) call cmp cmpsl xor jecxz mov lahf popa sub aas sbb (bad) (bad) (bad) decl pushf add out rol add jns jl or xchg pop ret mov and loop mov (bad) (bad) lcall aad xor xchg or inc mov and loope push in leave inc (bad) (bad) (bad) (bad) decl mov (bad) rcr rorl mov xchg cmp int ffreep into repnz cmp movsb ljmp jmp add xchg leave dec pusha pop sub (bad) sub cli fwait cmp jg decl sub out sbb frstor ret sbb hlt in mov (bad) (bad) jmp add mov movsl fadds mov (bad) call inc (bad) out pop (bad) out popf int push roll inc xchg mov sbb sbb ja je xchg mov mov cmp fwait mov or (bad) (bad) jg xchg mov sbb into les rcrl sysexit adc lea jmp mov outsl adc sarl mov adc dec xor scas cmpsb (bad) (bad) incl inc xor fnstcw xchg jae imul (bad) icebp jecxz mov pop sysenter xchg icebp xchg pushl mov inc adc fistl cmpsb in (bad) jg ds (bad) sbb aas fbstp mov iret sbb popa jae cmp mov sub cs outsb adc jge mov xchg xchg dec sar inc mov dec orl push iret (bad) (bad) call dec add push es loop mov cli fbld push ret rcrl (bad) (bad) decl out adc mov addr16 pop dec lods jle ds aas mov pop cmpsl cs inc mov pop xor mov movsl dec mov fs pop mov lock (bad) (bad) decl (bad) push xlat jle inc xchg xor movsl or mov add mov push inc pop in lcall jmp (bad) call das xchg dec iret or cmp notl and mov (bad) pop rol (bad) (bad) cmp xlat push out out sahf jns mov mov xchg arpl das pop cmc sbb test inc dec add pop out push dec stos cmpsb nop mov (bad) (bad) (bad) jmp lcall push (bad) fcoms out out nop xor xor or pop xchg sbb (bad) (bad) (bad) fld in imul sbb shrb xor sbb mov jo add lds cmp incl lret mov push lods inc mov mov stos dec insb stos add mov icebp (bad) pushl pop push push jl pop lret lea stos rolb and clc dec call and sbb (bad) (bad) call in push stc fdivr repnz pop sub sbb (bad) (bad) jmp nop add push int jmp daa jo xchg clc sbb (bad) call xor inc xor xchg jae aaa push lods adc daa or adc call std call jg dec pop add stos out push inc js fldenv xchg iret adc (bad) movsl sar (bad) (bad) (bad) mov mov inc push add shrl pop ja loopne push es sbb movsl pop jns (bad) (bad) jg sbb add pusha jmp sbb rorl mov dec idivb adc xor pusha fs or int3 bound aam (bad) (bad) jmp xor push and test (bad) ljmp pusha jecxz inc idivb xor jbe std (bad) (bad) (bad) ljmp xchg lcall add sbb jle adc (bad) lret nop mov sbb loopne inc jge sub in mov inc iret or push scas cltd (bad) (bad) (bad) (bad) call jmp mov xchg xor fldl shr pop jmp sbb push mov xorb clc call movsl jns out test fwait inc js or mov xor ja add mov sbb lret pop sub mov pop icebp fldl pushl xlat in jmp repz in mov jp out mov mov and pop das aas xchg test arpl int3 sbb es icebp into xchg rcrb cmp sbb push or imul test or cld push and mov dec mov sarb mov cs pop cmp jns cmp adc inc gs dec jne imul dec lret std pop lds (bad) aad (bad) pushl mov push (bad) push call (bad) (bad) (bad) ljmp roll fnsave cmpsl cmp jno les dec std movsb sbb pop mov (bad) (bad) (bad) decl jns repz sub sub inc sub (bad) lret cli sub (bad) cltd fldl fldenv outsb lcall mov pushf (bad) (bad) (bad) (bad) out xor cmc and fwait or and popf leave sbb adc aas sbb or out cmp lods xor cmp lret dec pushl cld pop lds lock (bad) (bad) call cmpsl data16 adc mov movsl std xor es nop lret (bad) (bad) call push loop push imul aam or lds pop adc icebp je mov mov pop lret xchg jmp add mov mov fwait les pop pop es lret sahf out and cli jno outsl pushf cmp jg push popa sbb icebp inc in sbb lret xor push xchg scas push std mov popf jb repz xchg jecxz popa xchg outsl insl add lods into int3 and aad icebp loope daa sahf ficom rorl leave add mov shrb inc cmp mov sbb lods mov or enter jmp xor push andl sub and mov mov add popf dec icebp test shll repnz add js scas imul adc adc xchg push sbb (bad) in cltd test push js dec mov mov dec cmpl ljmp and in cmp pop pusha xchg cmp ja jno mov call sti dec loopne stc xchg xchg inc xchg int3 (bad) (bad) jg fdivrs ljmp (bad) cmp xor (bad) (bad) ljmp cmc outsl and jg mov jnp (bad) mov (bad) (bad) (bad) jg push pop imul hlt xorl je adc lds xchg mov fildll and fild jmp push (bad) lea dec dec push and mov inc (bad) (bad) mov lret pop add mov pop dec insb inc jnp mov dec mov mov cli mov fwait inc xor pop jmp stos cli sbb loopne push pop mov xchg and mov es daa push cld (bad) (bad) fisttp mov cmp sahf ss pushf adc int3 push push into mov mov pop inc sub repz enter divb (bad) nop mov add mov mov dec mov mov bound mov (bad) dec andl mov sbb pop idivl jge inc xchg repz or (bad) out and cmpsb dec mov cmpsl mov add mov nop adc lea jne xchg aas (bad) (bad) (bad) decl in pusha cmp iret lock or push test mov dec mov or icebp (bad) (bad) jmp ljmp mov pop xchg dec ss push push subb int mov (bad) ljmp ds test jl cmp mov stos xchg adc mov sbbb adc cmp xor nop js loop fnstsw (bad) (bad) ljmp ret inc out pop ljmp mov jae arpl imul mov jg aaa loopne sti sub lahf pop cwtl add xchg arpl cmc mov (bad) (bad) cld push (bad) stc (bad) jbe test inc mov or mov cwtl (bad) imul adc push dec cli jle movsl mov adc jp (bad) cmc cmp (bad) (bad) (bad) (bad) cli mov push pop xchg jbe repz ret cmp xchg scas imul popf or jmp pop out and cmp cmpsb add jp push pop cltd inc call ljmp jl lods je jmp push add lods jbe aaa pop (bad) icebp pop mov mov sub mov xchg cld (bad) (bad) ljmp mov fsubp cmovne dec fimull sub jae ret adc (bad) (bad) call add out ret mov popf and lock (bad) (bad) (bad) incl out andb int mov or in xor fidivl xor push (bad) (bad) (bad) incl (bad) in and into push xlat lea int3 mov add push imul sub cmp (bad) push push loopne push repnz xor arpl (bad) xchg and jmp nop cli js scas icebp fcomps lret sbb nop outsl cli (bad) pushl out xchg lea jmp mov sub sbb (bad) (bad) jmp sbbl add mov ds add xor lcall decl mov sti cmpsb mov dec xchg pop data16 jns sub stc js insb xor pop xchg mov ret or div push xchg aad icebp stc mov and (bad) (bad) pushl cmc sub mov push cli and xchg fisubr in inc sti (bad) xchg sbb pop push xchg xchg inc or sub aam dec imul nop dec inc shr mov sbb in dec outsl hlt fs and push arpl mov push inc in and repz incl jp add mov add gs aam push cltd mov adc aam shll pushl mov adc and scas clc (bad) mov or cmp loope or push sbbb or mov arpl dec adc test out dec mov int3 xor mov int push sub xchg mov test pusha je out scas add mov (bad) fstl fnop arpl icebp sarb test sub test (bad) incl dec push cmp xor jecxz push push adc xchg and das xchg negl lahf repz sub cmc (bad) mov (bad) clc lcall std push inc cmp dec lcall stos jo push icebp and in (bad) (bad) ljmp push xchg dec push or sub mov inc xchg xchg pop mov out (bad) outsb rcr and xor (bad) (bad) ljmp push cmp loop (bad) imul cmp aaa cmp rcrb (bad) fnsave cmp inc sbb js pop leave fistpll (bad) xchg clc adc push push mov insb xchg adc jg subl inc mov aad cli (bad) jmp mov cmp insl insl pop mov in jbe and (bad) das fcomp daa movl sar (bad) jle repz inc in ret inc add mov xor fsubp xchg xchg (bad) mov jb sbb test mov and and int jle mov (bad) (bad) (bad) call push xchg rclb lods and jno aaa mov inc je mov je lock std incl call jle cmpsb push jg add xchg and or mov ret jg out adc lret sbb insl xor push pop mov cmc les popa ds add imul inc mov push or pop mov add mov out into cmp cmp cmp push mov pop or (bad) mov lods fwait pop xchg call sbb sub decl inc jo (bad) (bad) jmp adc lret jo dec pop lcall sub mov (bad) (bad) (bad) ljmp dec jns cmpsb loopne mov in call mov sbb addr16 (bad) (bad) call loopne mov cmp (bad) and in sub jp or and test (bad) fcomi enter ror imul jo sub adc dec neg jo pushf popa (bad) cmpsl cmp aaa cli (bad) enter mov push jle xchg cmpl adc enter or decl leave popa pushf push pushf arpl adc out pushf add aad (bad) lcall arpl lods hlt out fsubs xor mov je (bad) je inc cli xchg or (bad) incl push adc add aas (bad) xor fcmovnb cld (bad) (bad) decl (bad) js pop pop jbe and loopne inc push or out mov (bad) (bad) incl jmp test stos (bad) xor (bad) mov jecxz cmp insl aaa cltd mov (bad) (bad) (bad) incl movsb xorw sbb sti sbb out outsl dec shlb data16 sub jmp cwtl jl push lahf dec dec cs cli movsl sbb push pop popa pop or (bad) (bad) pushl mov inc cmp lcall adc push aad dec mov (bad) aas inc (bad) (bad) (bad) jmp jecxz mov xchg lods inc dec je dec shlb jle out jb xchg int3 jne sbb push mov add (bad) incl and inc cltd xor mov and mov lcall inc pop cmp pop or scas dec decl push (bad) pop ficom sbb and (bad) (bad) decl mov cmpsl add sahf mov movsb xchg sub lcall aaa sbb pushf adc scas clc adc ret jle inc push ja (bad) mov icebp pop mov call mov mov (bad) jmp push cmp jo push mov fbstp popw push jl ljmp (bad) das and daa or fldt or std mov jmp addr16 (bad) (bad) mov clc icebp jb push int lret push xor mov cli (bad) (bad) (bad) incl stos pop clc mov popf sub pusha (bad) fisub rcr inc cwtl test pop icebp call lret add lahf push cmp mov movsbl or mov jb (bad) (bad) (bad) pushl xor mov dec cmpsb xorb push and in lret lods dec clc xchg mov fnstsw pushf out xchg mov push adc pop adc mov lods lcall inc aaa xor popf mov push push lods cmpsl (bad) jo push inc sti fwait sbb scas cli jmp xchg pop outsb cmp lods lret bound jns jb aam xchg mov pop add jo cmp in cmc mov fild jg sbb jle inc mov faddp inc ficoml pushl inc sbb aad imul repnz cli jg dec out push fwait sbb jecxz loop dec push jno dec movsl aaa (bad) (bad) (bad) pushl jb jge lcall je adc xor dec and call loopne add pushf (bad) jae outsb adc jae xor (bad) dec out cld fcmovnu fdivr (bad) sub loopne mov in adc push jnp punpckhbw (bad) (bad) jmp leave pop inc imul dec mov arpl pop insb test (bad) (bad) (bad) pushl push add sbb fwait jecxz (bad) dec xor push rcr jo xor movsl lahf gs (bad) (bad) jmp mov das xor in negl mov adc push jge xor jmp mov (bad) sub xchg pop aas es push (bad) jg sahf cmp mov mov iret jp mov (bad) jmp jecxz xchg int pop mov imull lock sbb repnz mov es loope (bad) incl mov fstpt loope lds dec sbb (bad) call pop dec add and scas incl inc inc or xchg aad insb mov into sbb cmovl (bad) call scas adc add dec xchg aam sbb mov stc lock lcall cmp loop pop add or int3 fdivr aas and (bad) decl mov push (bad) call mov dec jns inc repnz aad incl pop adc push sub xchg aaa gs sub insb xlat repnz fst cmp adc mov cmp out pop fistpl lea icebp lahf mov mov (bad) mov pop mov add dec xor jno repz jnp push stc (bad) (bad) (bad) (bad) cmp mov xor jl cwtl (bad) and ja xchg pop sub pushl mov ljmp decl imul and xchg cmp add xor sub pop out jp pushl rolb std adc aas jb mov daa and or (bad) negl pop jl loopne (bad) cmp lret mov iret arpl test (bad) (bad) (bad) aas dec repz and xor mov ss jne fdivs xor aaa (bad) (bad) (bad) lcall testb pop mov cltd pop mov xchg rcl add mov bound divb (bad) (bad) (bad) fsubl jb pusha addr16 or mov sub dec outsl loop add (bad) je mov (bad) call (bad) lcall lea (bad) std (bad) xchg outsl (bad) movsl push mov xor in (bad) (bad) (bad) incl lods xchg add add xor das sbb in xor mov outsb lret mov dec pushl adc jmp fnstsw movb xchg mov push xchg mov pushf loope or (bad) (bad) (bad) ljmp mov sbb mov jle sbb cwtl lcall (bad) (bad) (bad) cmp xchg aad pop jo add inc pop mov cmp sub movsl clc js jmp adc (bad) (bad) lcall insl (bad) adc insl test jmp pop mov jne shl in add fbstp pop cmp shlw mov dec or pop jge xlat xchg gs sub inc daa stos fsts test mov jl push sub loope push xor cmp push mov test mov (bad) (bad) dec inc mov or test pop hlt lcall (bad) jmp jge aad fs dec mov xor jecxz int rcrl rcrl pop inc ja (bad) jg gs sub xlat xchg mov and jl push xor es loop (bad) xchg sbb (bad) ljmp add std push mov mov inc enter fsubrs pusha jge sub adc sbb push jnp decl push out (bad) push out popa inc cmpsl push (bad) sbb incl pop scas mov (bad) cmp mov xchg xchg push inc fidivl decl inc iret pop sub movsl xorl xchg cmp xor mov call cmpsb lods xchg push outsl adc clc gs mov in pusha or call std pushl adc icebp call push enter mov int3 and loop push dec (bad) (bad) lcall scas lock stos dec pop out sbb adc push fs (bad) xchg loop (bad) fildll (bad) fldt or and test out push gs mov (bad) (bad) jmp sub push inc jnp jp mov sub push jno inc movsl fstp into push dec xchg imull add call cld or insl lea pop lock loopne (bad) (bad) (bad) decl out dec sub loop repz arpl push xchg repz mov mov loopne mov xor pop or adc jmp (bad) (bad) (bad) pushl add test adc jno lcall mov pop adc inc mov (bad) jg fstpt adcb ficomp xchg jbe insl jle push lods inc and sarl push js mov ljmp pop sbb jmp gs stos jg das rcll cwtl test pop inc imul sbb (bad) (bad) push xchg cmpb pop shl push sub mov xchg enter cli pop icebp inc mov adc je or push push fcomip incl mov jns sahf and outsl outsl idivb (bad) out clc call push (bad) xchg mov mov lods lcall pop pop fcomi dec std (bad) cmp sbb imul mov xchg pop sbb movsl or stos ds jg sub adc lock ret mull aaa call cld jmp ljmp push (bad) movd xchg cmp pop dec outsb mov push cld sbb inc inc loop (bad) cmpsl ja add sub and push mov (bad) call imul mov xchg cmpsl pop or (bad) inc shrl cli imul fwait xchg jp mov fisubr xchg popa rcll xor xchg lods cmp or cmp inc pop insb mov push imul incl mov test push cwtl mov movsl dec xlat test notb cmp jecxz mov add xchg pop mov jno in push xor bound inc add jg pop inc dec mov pop (bad) mov into (bad) iret and mov mov mov and jne dec adc sub stos add (bad) (bad) lcall insl cmp jg or mov sahf insb mov inc lret cmc pop clc and ss xor ret cs out (bad) (bad) (bad) pushl outsl aad mov pushf pop lds movsl mov xchg jl cmpsb ret popa aad cltd (bad) (bad) (bad) ljmp lret push and and arpl mov jmp std (bad) loop (bad) (bad) dec mov or pop cmp sub ljmp out sbb mulb (bad) lcall sbb pop cmp adc mov pop xor (bad) lcall nop sbb (bad) mov inc cmp adc and inc and sbb pop ds add clc aaa std pushl gs fwait movsl xchg dec xchg into cmp mov ss ja incl ss or mov test push (bad) (bad) (bad) (bad) mov push add pop je jb mov scas out stos repz xchg mov push jne sar (bad) fcomip out es mov aam and ss ret cmp cltd cmp std (bad) (bad) out jp mov (bad) (bad) jno sub addl jmp inc jne (bad) pushl jp ret jnp insb scas loope bound cmpsl out (bad) (bad) int3 (bad) (bad) aas dec fimul cli push outsb sbb or jb xor das mov loope call into push popa jo push xchg cmp jbe (bad) lods adc (bad) mov xor sbb pushf fnsave inc push add lret iret rcrl push cmpsl out sub cld dec inc xchg (bad) (bad) jg movsb sbb ret data16 inc mov (bad) stos jb ja data16 (bad) (bad) (bad) decl fadds aaa (bad) clc cmp ficoml scas xchg xor add or dec (bad) cmc sub xor test pop xchg out and jp call sub clc les mov ljmp dec xor lods cmp sub mov rcrl jmp sub ljmp pop leave push lcall test lret ja in lock test std mov (bad) (bad) dec enter mov out mov test adc jmp (bad) push or fmul pop and push mov add sbb cmp and test pushl das pop jo jb dec push iret stos jb mov dec jb and cmp sbb incl or fnstcw inc ljmp movsl iret push and mov mov inc mov (bad) (bad) (bad) inc std sbb mov in fildll loope mov je incl enter xchg jns (bad) (bad) jmp cmp ljmp das movl aaa mov lock (bad) call (bad) inc sahf fs fisubr lret nop mov xchg add push adc sub (bad) decl inc (bad) xor stc dec xor clc jae lods and inc outsb (bad) (bad) (bad) cmp push shlb inc in stc dec sub ret int (bad) mov push aas fistpll mov xor push add (bad) (bad) (bad) jmp adc xor aad sub mov dec testb fs inc sar (bad) (bad) jmp rorb enter pop test sub fld1 pop sub js cmpsb mov push push (bad) jo shr lock imul test mov cli sbb fistl (bad) ljmp xor jo xor xchg cltd adc aaa (bad) (bad) mov mov pop dec loope xchg (bad) jg push sub mov idivl fcomip (bad) pushl enter xorb push lods jb xor jmp (bad) (bad) (bad) pushl xlat mov push das jo xor shrb pop ds js pop test rcrl (bad) decl adc pop or mov lahf mov jmp push push jb,pt sbb ljmp ds adc sub push test xor mov (bad) call adc sub adc push adc lds mov movsl pop inc rorb mov es mov cmpsb rcll push ds xchg sub sub cwtl (bad) sbb ds (bad) out mov push push mov loopne sub repnz lods dec sbb rolb (bad) (bad) lcall mov lock nop dec ljmp movsl sub (bad) (bad) mov add xor sti xchg in in sub stos cmp hlt fildl enter negb push (bad) pop lret xchg loop cmp jge pop ljmp xchg xchg add dec (bad) (bad) lcall imul (bad) jns not (bad) mov xchg inc jno ljmp ljmp mov jo popf cmp and pop out mov jmp xor (bad) (bad) jmp ret fcompl outsl loopne pop xor incl sub inc jmp mov sub lret (bad) (bad) call test insb jge stos (bad) (bad) mov inc fdivrl cltd dec dec add std push std cmp test stos iret cmp adc mov outsb int3 or and cli inc scas int sbb jae and (bad) pushl push mov mov in xchg aam mov out aam popa dec aaa sbb icebp (bad) aas (bad) popf pop sahf dec pop cmp dec and or mov and fucomp mov movsb movsl (bad) ss insl insb lds adc mov push (bad) jg jne pop xor stc out lods lret fstps add outsl mov fldenv (bad) jmp lods mov cmpsb mov repz inc pop or ds jp ja sti ret mov ret es (bad) (bad) (bad) fildll and xlat or jbe (bad) dec shrb pop push mov movsb lret ss pop mov js test (bad) aas and cmp iret jno (bad) push insl aad sar mov lret mov xchg or sbb frstor or dec (bad) (bad) (bad) jg mov jmp fmull push mov adc hlt sahf std stc es mov (bad) (bad) pushl in dec clc in lahf mov (bad) pushf sbb test dec fxch imul mov (bad) imul (bad) jnp addl mov (bad) or inc loopne lahf jnp out stc jne and cmc shrb dec dec jl (bad) (bad) (bad) incl push leave mov inc xor lret das mov (bad) cli test push es decb shll fild into sub data16 inc xlat push sbb jb mov sub (bad) outsl cli jg mov out jle fsubrl push cmpsb inc dec pop fwait sahf mov ds sub sub (bad) cltd andb repnz adc (bad) (bad) decl and add loope inc gs mov jno shrl dec sbb mov iret adc (bad) (bad) (bad) call jmp xor dec cmpsb out push loope mov jae repz pop lahf cmpsb stos std fmul clc jg sbb into jl jecxz mov dec mov decl mov ss int pop hlt ret pop stos (bad) daa jg das stos sar (bad) (bad) incl dec fldl adc fwait gs lds (bad) xor fiadd xor adc decl sbb xor mov (bad) (bad) (bad) decl push jge add into cltd adc aaa ja and movsl ficom mov jmp jmp incl cmp (bad) rcrl and mov sahf mul cmpsl jno loop xor pushl inc mov mov pop mov int3 pusha cmp push push push mov adc push pop stos ret fistl lret cmpsb pushf fcos (bad) (bad) (bad) mov mov inc rcl in test (bad) lahf test sub lea xchg mov sub (bad) decl xchg or mov std int3 pushf int3 xchg push nop loop (bad) (bad) (bad) (bad) out pop fisub adc push sub idivb push mov cmpsl rcrl dec lock movsb dec sarl pop cmp add aas add stos jp or push add add cmp sarb mov (bad) jmp enter aas inc or decb loop mov rclb and jmp scas movsb sahf mov adc (bad) (bad) mov pop std mov cmpsb cmp and lea int and pop cmp (bad) call mov xchg jo pop loope lods dec cmp push add mov in xchg (bad) mov cwtl (bad) sbb fwait insl (bad) (bad) (bad) incl xchg dec addr16 or pop aas dec cmc lods (bad) push push push fnstenv cltd outsb flds add mov aam rorl test call and dec jmp cltd jae decl imul sub cltd push cs mov (bad) jmp (bad) xor aaa sub dec testb dec xchg sub bound sub (bad) fadd or bound push push icebp lret cmp loope enter cli cmp push hlt (bad) fcmovnu mov (bad) pushl add xchg adc push mov lods inc cmp mov push pop mov (bad) addr16 mov jo jecxz and lret ja mov lcall inc push sub je sti frstor dec jbe xchg pop jb icebp in mov ljmp xor xor int push mov xorb sbb xor mov sbb insl mov xor (bad) (bad) jmp mov rcll out insb addl jns (bad) call ret mov in dec aad dec xchg jb (bad) repz mov add xchg cmp rcll jnp aad cmp cmp sbb pop fwait jmp sbb rolb mov (bad) (bad) in pop jge inc out aam fmull jne cmp xor ljmp xchg test incl (bad) mov test push adc loop out test dec in jns push loopne push lret cmp lock pushw cmpsb and pop (bad) (bad) (bad) push adcl or mov mov sahf jl sarl fnsave fcos (bad) (bad) cmp aad lock aam mov push sub out adc scas sahf dec (bad) (bad) (bad) ljmp test addr16 xor jecxz in js jb das add (bad) out aas (bad) and (bad) (bad) mov inc adc jnp mov and imul fdivrs inc data16 inc fsts mov arpl lds outsl out (bad) (bad) (bad) mov adc fdivp (bad) adc inc push iret pop cmpsl xchg jne pop test and pop adc lahf ds jg insl aas es imul imull rcrl fbld ljmp and (bad) pusha out nop hlt lea xor cs pop scas sub sar sbb add fildl (bad) popl (bad) xchg imull push icebp fcomip dec pop mov seta cwtl (bad) (bad) lcall cwtl mov arpl (bad) dec and (bad) ljmp add pop adc xlat pop jecxz push push push leave rorb (bad) (bad) call xor stc fistpll mov and cltd push loop lods adc aad incl cli jecxz dec lds popa dec push dec scas (bad) (bad) fcomip test xchg lock test hlt jns push aaa mov sbb pop and (bad) lcall mov adc pop push mov gs pop mov iret dec lret arpl subl and push stos testb mov jg out push sbb fwait inc addb inc (bad) xor dec (bad) xorl inc xchg fisub je fcoms xchg icebp loope icebp xchg push cmp add cltd inc (bad) loop test push sub bound push pop aaa loop daa movsb (bad) lcall (bad) in faddp jbe int leave jmp and js mov jno pop mov (bad) pushl inc int in fidivrl inc push nop jg pop mov aad xor loopne (bad) dec add xor test test pop shrb mov push fisubl mov hlt jno sub and pop stos orb rcll daa (bad) out mov dec sti inc enter jo icebp pop (bad) (bad) (bad) call lds jl xor push ss rcr push nop and inc and in sbb (bad) (bad) dec (bad) add mov in shrb sub test xchg clc int3 test jbe clc fwait insb mov push (bad) pop out imull (bad) call ss fcoms (bad) fisub repnz popf inc jmp (bad) (bad) (bad) (bad) ljmp adc mov adc push adc push imul adc or ret jne (bad) std sahf push push icebp add jno (bad) test (bad) (bad) pushl fmul cmpsl xlat dec pop movsl dec lock je stc fnclex imulb xchg (bad) (bad) lcall icebp mov pop test movsl push jle test mov and ret jg fcomip sahf mov jnp pop sub stos sub jb subl pop fs (bad) fsubrp xchg pop adc clc icebp ds push xchg xchg mov xor cmpsl mov decl lret pop nop inc sbb push xchg (bad) out ret push mov test mov pusha cmp lcall push push pop jno mov icebp cmp (bad) lcall xor in mov cmpsb jle lret mov xchg adc sub mov dec fcomip (bad) jmp pop mov and out jo mov (bad) je mov (bad) (bad) (bad) jmp or mov movsb xor pop fdivp in add mov inc and sub mov or push or sbbb out rcr (bad) (bad) (bad) lcall or stc dec adc ficompl setns lret mov sub lds mov ss mov inc or test lock fcoml (bad) (bad) incl outsb outsb hlt ds inc mov jbe xor pop push push sti sub and mov or dec jnp in cmpb (bad) call sti lret ja mov lret cwtl fs pushf in adc lcall mov cmp push lret push xchg leave pusha jecxz incl add ds dec xchg mov cmp cli (bad) (bad) ljmp cmp mov and pop add in cltd lock sbb (bad) (bad) ljmp dec loope int3 stos sbb adc fldcw fdivp mov fmul push int3 push mov add (bad) push dec mov insb push ljmp nop sub dec push jb icebp (bad) mov sbb add lods icebp (bad) cmpsb div daa dec pavgw (bad) (bad) (bad) fistp pop and cmp push xor enter int3 vmovntps xchg push push ljmp fst lcall push xor cld sbb and dec ljmp shrl cli (bad) cmp inc and cld sub ds push hlt adc out and cmc push test fnsave mov aad rorb jno adc (bad) jg and fstpt push out test mov (bad) adc repnz out fimul xchg xor dec jmp (bad) (bad) (bad) ljmp hlt push gs ljmp dec repz xor jmp popf (bad) data16 cmp mov jne je xor sub std je (bad) mov mov aad dec xor (bad) (bad) decl out (bad) push fnop lock xchg mov mov add loope dec data16 pop pusha clc mov mov xchg insl ljmp fstpl incl cld decl (bad) testb ljmp aad push sarb cmp (bad) (bad) (bad) incl jle lret insb adc fidivl or xchg adc inc call sub (bad) (bad) inc mov ljmp mov adc insb sbb pop in imul dec lahf clc (bad) add cmp xlat in jmp cmp mov pop adc jne roll aaa imul xor lret (bad) (bad) inc adc outsb stos adc mov pop pop shlb pop mov jnp (bad) enter ret or (bad) pushl movsb sti loope jne adc lock jl (bad) (bad) mov mov pushf push loopne jecxz leave mov and mov and (bad) stc cmpsw fcomps notl dec ds call dec movsl in mov xor jle jnp std dec int into sarb imul out call mov fistpll imul jp push xchg das fstps pop xor mov in sbb add decl sarb aad inc push inc and imul xchg xchg inc jae icebp pop je or mov mov xor cmp jecxz mov push mov (bad) fcomip lds cmpsl call imul sub jnp (bad) decl mov push sub insb leave xchg cmp xchg cmpl pushl inc mov fild ret movsb mov nop stos cmc jne sub in (bad) (bad) (bad) fldenv hlt sub sahf cltd (bad) jmp add sbb jg lds pop xchg insb std ljmp js movsl mov fisubrl insb jge pusha xor ds bound (bad) jg dec pop xchg jno jb mov xor je ret jp sti push push fildl push mov into inc ljmp clc (bad) jge inc jle and stos cld push jecxz cmp imul dec lods pop add pop sbb iret stc mov dec fdivr (bad) stos jle jae cmp mov (bad) lcall es das imul idivl jo test dec add xor dec cld xor mov fimul inc sub pushl sbb mov jp shll icebp (bad) js in (bad) divl and nop in movsl inc jle fcmovb (bad) (bad) (bad) incl adc xchg cli mul loope or push push push lahf jmp into outsb xlat insl daa mov mov pop (bad) (bad) (bad) call cmp xor addl jecxz stos dec mov leave mov mov outsl sbb fdivr (bad) (bad) ljmp and sahf (bad) leave adc and xchg inc test dec mov sub jecxz sbb (bad) (bad) (bad) call mov mov cwtl cmp add insl roll pop or (bad) (bad) (bad) lcall xor shrl xchg xchg cld push test dec mov (bad) sbb push fistpl (bad) (bad) (bad) cmp mov mov mov add inc fcompl xor inc (bad) or mov ds xchg push xchg (bad) (bad) ljmp push jae sarb add mov and (bad) (bad) ljmp push cld mov push add lcall clc in inc insl shrl out addl clc call and xchg popa fsts fwait (bad) jmp dec mov mov sub sub xchg ljmp pop pop cld ja xor add (bad) and xor xor push pusha sub mov cs jmp popa stc xor stos icebp pop mov in (bad) xlat push add (bad) (bad) (bad) (bad) cmp scas jl lahf outsl jae into add pop ror sub jne adc jle push mov aad (bad) (bad) pushl and sub into add repz xlat xchg lock jb mov sar jg sub cmp inc icebp (bad) (bad) incl dec xchg or cmpsl (bad) pop mov push in mov sar (bad) (bad) incl ret (bad) lock inc cmc xor and andb mov (bad) (bad) (bad) call ficomp mov inc pop jb mov xorb addb shlb or (bad) (bad) (bad) cmp aas shrb cmp lds dec push jge pop push stos xor mov movsl movsb aam dec scas and es in pop xchg sbbl (bad) (bad) (bad) (bad) mov out fs icebp icebp xor jg enter in jo pop or ljmp leave (bad) sbb or cli int and out fistpl inc (bad) jne mov xor ljmp sbbl add (bad) (bad) mov pop xchg mov jno in sub xchg in jmp ret add (bad) lcall xor and (bad) pop sbb pushl cmp dec nop setnp movl (bad) adc sub orl or lret enter sbb out sarl out loop jo push das clc call mov ljmp xor jb popa and ljmp push in repnz ljmp mov mov lods push inc dec pop pushf scas dec test or push mov or stos imul loope mov (bad) dec mov decl pop popf push cli mov lcall inc push add and movsb (bad) ljmp pop or push xor xchg xor push pop inc orl (bad) lcall push mov aam stos jns mov outsb daa cmp aaa std incl xor (bad) sbb sub sub (bad) xchg inc sbb incl mov add (bad) rcll jb mov inc xchg jo (bad) and cmp (bad) (bad) ljmp pop lods xor sarl jnp sub cmp push idivb cmp test insb mov (bad) mov sarb jnp jmp dec cmp mov push mov adc or scas test xchg ret xchg or lds out mov ret out xor (bad) (bad) lcall decl add add gs sti call or incl xor add mov sub (bad) cli and and inc loop cmp (bad) (bad) (bad) in dec xchg jle xchg fwait jecxz cs pop inc sbb out adc cwtl add decl sahf pushf cmpsl hlt mov adc mov (bad) lcall pop and or cltd lcall adc (bad) (bad) decl clc mov popa or das adc or loopne ljmp sub (bad) jge mov movsb push (bad) (bad) (bad) (bad) mov lods out and pop popf pop es jmp sub mov and (bad) (bad) inc add iret xor pop rolb xchg pushf lods dec out rorb pop adc push lret add lahf mov sbb fdivrs out call insb xor je (bad) (bad) lcall dec (bad) jns add push mov sbb xor or loope push imul leave std (bad) (bad) (bad) jmp push pop test or inc rcrl push inc xchg imul jp mov adc sub lcall insl call movsl sub and sub cmp movaps cltd rcrl aam ds (bad) mov or push add and lds call inc mov jo mov arpl pushf xor (bad) (bad) jmp ss in inc mov nop (bad) addr16 (bad) js addl pushl das mov ja insb mov ret mov out scas jecxz jbe push cld (bad) mov mov xchg or add test rcl outsl sub js xchg push addr16 (bad) (bad) pushl mov cmp sub aad jns,pt mov cmpsb sahf sub sub mov imul leave dec stc xchg push sbb push daa jmp in lahf push mov (bad) jmp add mov mov dec fistl test jo inc in out test jmp xchg (bad) lcall jne cmc push jne mov or lods push cltd push int3 xchg xor in in push pop adc cld aas add or xor mov sbb repz (bad) (bad) call mov sub mov ss mov xchg movsl cmpb and pushl out out add jmp cmp push lret inc outsl mov adc jnp xchg (bad) pushl add int3 mov fist adc (bad) call cmp jns jl jno sub push int sahf xor mov mov (bad) pushl mov jne (bad) sbb imull daa push add push repnz sub mov (bad) (bad) jmp and dec add sete ljmp enter stos aad xor (bad) (bad) (bad) dec or int ja mov jl dec cld into pushw push fsubp bound loop mov (bad) jmp (bad) lcall sub testb (bad) mov mov mov (bad) lcall sbb jmp std testb (bad) (bad) ljmp icebp inc xor clc and mov pop xor push sbb jnp sub push call les mov popa stos push and (bad) (bad) jmp enter xor mov inc mov xor fsubrs ret mov cmpsl jmp int3 popf xchg sub inc hlt aaa push (bad) out repnz les ljmp into cmp out xlat push imul outsl cli inc adc mov pop popa jb jle lret inc xchg sbb or mov push test inc xor cli (bad) (bad) lcall mov dec inc (bad) push negb mov xchg cmp aaa jne push mov xchg mov cld xor inc and (bad) jp (bad) fsts fbstp push cmp das pusha jecxz into (bad) mov inc movsb (bad) rcll aad adc stos lret (bad) (bad) cmp pop mov stos adc (bad) rcrl cmp and (bad) (bad) (bad) (bad) (bad) fsubl and shl fwait lea and fs inc out data16 xchg adc xchg lcall mov and dec mov mov outsl jp std popa pop mov (bad) call lods xchg cmc push xlat inc mov in jg in out xor jl out cld add ds sub call push stos leave adc push (bad) jmp ror cmp cwtl sbb sub (bad) (bad) jmp fstpt dec mov mov std jae out lcall push add lock jg (bad) hlt ds movsl rol add push push dec aad push (bad) (bad) (bad) ljmp adc flds lahf mov mov clc pop aam ja test jge cmp out cli (bad) incl sub fcomip add (bad) fildl and fldl jns adc add ret cmpsb pop stos and repz push fistp rcrb lock jp (bad) (bad) (bad) incl inc pop pop ret test push (bad) jb xor or mov jl mov push cltd les lock mov xor dec in push lea jp sub mov pop arpl fwait cmp sbb jmp add or faddl ljmp sar pminub iret mov pushf ret or aas mov (bad) out clc xchg lcall jnp mov fs pop add and push (bad) (bad) (bad) jmp mov insl iret js ljmp jge push ret test xchg jl sbb pushl xchg inc xchg mov mov mov in cmp mov xchg stos xlat clc (bad) (bad) (bad) (bad) fcomp lcall repz sbb pushf cli jmp lods sbb insl cmp (bad) ljmp test idivb repz cli gs (bad) (bad) (bad) jns out jae bound loopne mov inc je aam out xor inc adc pop mov testb inc cmpsl jmp nop push leave adc incl scas cmp inc mov cwtl cmc rcrl pop setne repnz (bad) push leave outsl xchg pop mov imul sbb or or add mov cmpsb imul outsb ljmp popa scas push push out lcall inc mov (bad) (bad) cmp mov push (bad) testl dec xchg xchg push mov lcall xchg and pop cmpsb rcrl loop jnp xchg add ret mov (bad) sbb pushl or sub sub imul push rcr and or xor (bad) (bad) jmp jg nop stos push sub sbb lahf mov lods (bad) (bad) (bad) call enter pop xchg clc push movsl mov or mov scas push leave inc mov decl fdivrp imul stos aaa pop ss push inc movsb pop hlt add out ljmp addr16 cmpsb out mov lcall xchg int3 icebp dec into mov loopne mov pop push cmc (bad) (bad) ljmp pushf push pop cli adc pusha mov inc or lcall cli mov add (bad) mov add mov ljmp clc arpl pop dec ds xchg inc mov jl outsb call ds pop imul adc pop dec adc jmp jo pop test movsl push adc pop push xor mov and gs push pusha scas lds jno xchg lock cmpsl out (bad) mov xchg (bad) ja push gs ja xchg (bad) (bad) (bad) jmp sahf mov xchg mov cmc pop dec dec push in ljmp nop mov (bad) (bad) pushl in clc push or movb faddl xchg inc scas sbb fisttp iret popf add (bad) xor cld andl xchg outsb (bad) (bad) jmp fidiv mov ss xchg imul pop push pop ret (bad) (bad) mov and aas fbstp cmp sub ret sub aam hlt rcrl mov incl mov adc dec xlat lods stos cmp (bad) cmp mov nop stos stc bound decl popf les mov loopne lcall lahf ret pop out pop test push (bad) call cwtl mov jmp ljmp ret into mov cwtl imul mov push (bad) ljmp cli inc (bad) inc fs sbb sub fs mov js inc mov rcll (bad) (bad) (bad) (bad) mov mov aam movsb fwait add movsb dec js mov pop fsubrp dec imull sbb loopne js int3 or fisttp (bad) jg sbb cmpsb cmpsb xor mov cmpsl lret or incb cltd insb decl xchg jbe movsb notl aaa cmp sbb lds push pop inc divb inc mov push fdivl mov loopne loopne xchg fisubl loopne pusha push je aaa std inc mov xor or cmp mov in jne (bad) jg and sbb xchg (bad) imul (bad) (bad) pushl (bad) adc or addr16 fwait xchg inc (bad) xchg mov mov cmc in (bad) (bad) (bad) decl adc int insb cmp push push inc movsb push (bad) dec scas add (bad) (bad) (bad) jmp pusha xor cmp add sub xlat mov or movsl adc (bad) (bad) (bad) (bad) fdivrl roll loopne fildl dec fiaddl ds push xlat aam loopne es (bad) lcall cmp repz push or insb in insb sbb push push push jmp pop mov (bad) (bad) pushl loop mov (bad) jnp sub int3 lea insl xchg nop out loop repz (bad) (bad) (bad) call add mov adc call push cltd jnp mov addr16 adc (bad) (bad) ljmp jno dec xchg out xchg lahf add (bad) movsl mov mov int dec sub scas inc sbb (bad) (bad) (bad) mov out push sbb mov cwtl lcall pop xor insl loop lcall xchg repnz es jg pushf adc dec sub (bad) lcall in test pop xor orb jnp lcall dec sub decl sub (bad) mov (bad) push and (bad) push mov adc jmp int aam xorl ds dec xchg rorb cmp lea negl inc (bad) std cs mov pushf inc jg and mov adc lods gs (bad) pushl pushf pop xchg aas sbb sarl add aaa (bad) (bad) (bad) (bad) incl daa push stc mov adc shlb and fistpl fmuls sub icebp insb push outsl rcrl mov jl lea jae add pop cmp ja into mov jmp mov jmp add out enter pop cmp push pop inc fist sbb sbb clc out (bad) inc out and sbb xlat int or ss mov (bad) jg (bad) imul mov pop lods repnz popa xchg (bad) cs push pop clc rorl lcall sti jge out cmp popf mov or mov sbb (bad) icebp pop (bad) incl mov and sbb sbb (bad) pop call jnp ja scas (bad) (bad) incl popf xor int3 pop adc sub inc pop gs inc cmp (bad) (bad) pushl jno sub aaa push out mov push aad pop push fcmovu sbb jns mov dec (bad) (bad) (bad) call push adc jo lock loope pop out inc mov aaa jmp push test cmpsb push pop subl lcall push adc cmp (bad) (bad) call popf inc js movsl orl cld cwtl cmp jne lods push sub xchg sub and out addb stc inc and stos sarb xor nop ret xor xchg loopne bound lcall lcall test dec into ja (bad) jge mov lret mov incl daa or repnz lods xor mov (bad) call inc ljmp xchg cld xor inc aaa adc divl xchg (bad) and (bad) cmp loop subb xor int and xchg leave rol inc jne adc (bad) (bad) lcall fwait sbb aam outsb pop mov ds das mov lcall test push xchg sub xchg adc loop (bad) (bad) call or inc data16 and inc pop add pop imul push push aam mov push pop cmc xchg xor or inc add (bad) std popa dec stos fdivrp (bad) (bad) decl out int loop and mov mov leave and movsb cmpsb nop jae mov popa outsb sbb cmpsb and inc pop inc sar ljmp lock xchg jne or mov and div mov mov (bad) (bad) (bad) lcall fildl pop fucomi xchg out sbb jo les and push mov inc jmp lods daa (bad) (bad) (bad) call add pop jp push mov push mov mov cmp subb xlat out and sub dec fwait xchg rol jne or fistl adc (bad) jmp arpl mov clc or imul push adc aas mov mov repnz in xor les (bad) mov mov (bad) (bad) ficom mov dec data16 jnp insb sbb lods xchg lods push sub hlt (bad) (bad) ljmp loopne lock ror pushf dec lahf jo add xchg mov dec (bad) (bad) lcall movsl mov mov loop lds pop mov lret jno icebp sbb lret and jg call push fcmovne dec hlt jecxz cmc (bad) cmpsb mov cmp inc fstpt mov in xchg orb dec push (bad) cli push sub push mov into sbb gs fwait cmp fild or (bad) (bad) (bad) cmp push dec inc lods iret mov or xor push cmp out inc lock cld xlat mov out roll inc mov popa xor (bad) movsb dec push (bad) lcall pop test pop daa gs pop in stc xor jae jnp rcrl fistl int scas sar (bad) jmp add sub sub in mov pushw (bad) or pop mov call xchg ds xchg addb mov jno lods fs (bad) (bad) ljmp add or add add repz push mov cs (bad) (bad) (bad) jmp cmp orl scas mov (bad) sbb lods and (bad) (bad) (bad) std or aad inc add pop sub xchg lahf sbb out gs pop mov test add mov fnstsw lods fcompl sbb icebp jg add inc jo sahf insl lret add sar pushl mov lods (bad) adc adc or cmp (bad) ljmp mov in xchg popa jle rcl or aas or arpl cli cmp sub call cli (bad) ljmp lods cld sahf cmc push loopne idiv movsb js xchg sbb data16 sub (bad) mov mov repz stos xor sbb fwait cmp clc cmp out push in or mov ljmp mov dec pop jge call decl xchg loop and dec es jae mov (bad) (bad) fcomip xchg pop outsb xchg loop movsb popa and mov fistpll (bad) (bad) (bad) lcall push (bad) sbb out call mov loopne mov mov out (bad) (bad) (bad) dec add push aam lahf xchg pushf orb mov sbb xor push inc addr16 movsl lock aas rclb and fldenv lock inc xchg pop cld (bad) call sbb mov xchg jp (bad) pop repz (bad) (bad) fnstenv mov test fidivr pop mov stos and xchg xor mov pop jo (bad) (bad) (bad) jns pop cmp fcmovnu pop movb outsb mov popf fcmovnb sarl jbe fstl sub sbb jbe lret mov aaa mulb outsb cmp adc (bad) mov jl mov adc mov xlat xor mov cmp sbb iret lret into ror inc xor dec or sub pushl cmp out xor adc add sub popa (bad) call pop lret mov int3 push pop cmp inc das cmc mov fs (bad) (bad) (bad) lcall rolb sahf lcall negb and je mov add daa je out xchg mov pushl jae cs fwait mov adc cmp popf (bad) (bad) (bad) call mov ds sbb mov iret pop push dec mov lods cmpsb call dec xchg clc int3 (bad) add pop and xchg jl push push and inc fimull (bad) (bad) (bad) lcall cli xchg add xchg mov loope repnz lret iret out in in std movsb xor (bad) (bad) (bad) (bad) faddl dec dec ror mov rcrl dec add fdivrs pop gs mov (bad) (bad) incl jb mov mov fimull clc sahf cmp dec jno popf into cmpl cld (bad) (bad) pushl inc xchg not dec insl pop les push (bad) pop jnp lret into jb xchg push or mov clc incl adc sub aad (bad) jmp add adc aam adc mov (bad) decl lock mov dec fdivrp ja cmp cs adc push pop ss add lcall push loopne shrl cmp (bad) call xchg fidiv add cmp andb aam (bad) decl loop pop inc jno icebp or mov sbb cli mov fimul (bad) sub stos cmp lcall inc pop or mov add ret jmp jecxz out or mov imul cmc arpl fdivl pop xchg inc rclb bnd pushl and pop sti cmpsb inc imul (bad) (bad) (bad) jmp lcall lret jbe inc add mov adcl push leave cmc (bad) (bad) mov mov test outsb dec dec and cltd xchg add sub (bad) (bad) (bad) (bad) stc jbe push enter cmpsl adc aam (bad) fs sub lods jle scas imul (bad) pushl mov test push in loope jns mov test ret call adc insl dec inc (bad) fcomp dec (bad) (bad) (bad) ljmp jmp adc leave dec das sub mov addr16 aad xchg pusha in sar (bad) (bad) decl adc data16 pop mov fidivrl xchg add ja mov (bad) ljmp lea fldpi repz push cmp in or es mov and or test aam jb pop jecxz or xor fstl pop sbb jbe (bad) (bad) inc daa (bad) test xlat mov insb fcmovnu sub or cmc sub insb (bad) call mov pop stos insl int3 cmpsb fs cmp mov outsl scas (bad) (bad) call mov dec xor fisub test add loop sub lret (bad) decl sub mov or mov lock lahf loopne std sbb mov (bad) (bad) out adc cmp xor fsubl (bad) (bad) (bad) mov mov jle mov idivl (bad) test scas add (bad) pop push in lcall ljmp fisttpll mov in dec dec ljmp mov push aaa jo (bad) (bad) dec movsl mov sti mov add adc bound stc xor in xchg xor rorl xor into xchg scas ja xchg cltd push jo gs add sub test xchg shl lret nop shrl mov push subl dec jno cld and pushf enter decl push mov dec dec xchg jg inc std lcall pop xor out push and dec sub fdivl (bad) (bad) jg roll adc push lea mov sbb (bad) (bad) mov test push cmp bound inc push xor nop stos sbb mov (bad) dec (bad) (bad) ljmp inc lret jno out inc xor inc pop mov cltd outsb (bad) (bad) fbld sub in cmp iret jbe gs fwait xor mov mov incl les xchg lret or jg mov push iret (bad) rorb and mov push icebp sbb (bad) (bad) jmp sub fistp cmp lock sbb xor (bad) lods fpatan mov push testl gs (bad) dec sbb jge ja xchg pop and push push (bad) mov sbb scas addr16 rcrb add (bad) (bad) jp pop push repnz repz add out pcmpgtw js mov (bad) ljmp rcrb mov xor and xchg jae mov scas cmp jno je out rcrl stc mov sub adc (bad) (bad) (bad) jle add xchg jae xchg std add sbb repnz mov ja imul dec mov (bad) ljmp stos xor in scas pop mov jo imul fldl mov lcall in or imul into ds jno pop cs and sarb push (bad) adc (bad) (bad) (bad) incl (bad) punpckldq and push and outsb mov adc out (bad) cltd dec lods sar (bad) (bad) in arpl pop pop imulb xor push scas add or xor jb (bad) (bad) inc sbb and ljmp and loopne mov pop (bad) jecxz in (bad) (bad) call cmp in movsl jp loopne mov mov add imul mov (bad) jg jmp cmp (bad) (bad) jae jns in aad pop test ret (bad) call push add mov mov cmp (bad) (bad) lcall mov cmp cmp addr16 adc sahf adc icebp sub xchg pop adc sar jmp out out sti mov (bad) push jb and pop (bad) stc sbb jbe iret movsl (bad) or test sbb ret mov int sar (bad) (bad) pushl push das add loop adc fidivl ds lea pop push loop sub pop je (bad) ljmp adc or and push (bad) xor aad fldl2t repz and lods (bad) (bad) incl popf push push das xorb mov sbb ret adc call add jmp mov push je rolb icebp push std out mov ror jp cld lcall sub inc das and xor aas sahf xor test xchg push out lods dec add or lcall pushl enter out or stos and (bad) or mov pushl dec jno push xchg sub or jmp sbb fs popf push cmc dec push sub cmp add out mov (bad) (bad) (bad) (bad) call xchg out int add cld push sbb jne mov sub out add or cmp jne mov mov pop push lcall stos in popf mov push clc xchg (bad) cmp push ds imul popa rclb aam pop dec pop xor push lcall or bound in call in pop (bad) incl xchg adc inc dec cld pop mull jmp popa pop jb push xchg adc pop fstpl scas inc jecxz lea (bad) (bad) (bad) mov xchg dec les or lods (bad) fisttpl jno mov incl loope test or mov sub lcall lret (bad) (bad) (bad) incl jnp movsb jbe repnz sahf outsl cld pop ret sub pop mov xor cld shll or popf inc insl jge or js inc (bad) xor mov add ljmp fcomi popa insl jecxz sub mov mov push (bad) ljmp (bad) sbb and into xchg mov outsb add sahf pop xchg (bad) (bad) (bad) lcall mov sbb adc mov dec hlt cmp test mov (bad) (bad) out clc dec fsubl lock lea mov loope sbbl xchg mov test das sar mov and adc (bad) (bad) aam pop ret (bad) (bad) mov nop xchg push lret sbb loope fwait pop loopne cmp cmp sbb (bad) (bad) call sbb es jp das xor xchg test adc (bad) mov incl push dec mov cmpl push rcrl scas sub mov incb sbb repz pop aam inc mov cld ja fs nop (bad) (bad) (bad) mov xor cmpsl imul jle xor mulb xchg xchg sbb test jnp data16 mov xor (bad) mov dec xchg lock jg or jg pushf add and xchg aad lea push jne jbe shrb incl test or pop dec mov push gs cs cmpsl lahf sbb (bad) (bad) (bad) lcall inc loope mov and add dec bnd mov stos xchg jecxz lods sub lock fucomi aaa xchg lods add es sti enter mov dec and test lcall not andb lret mov add ds or gs dec mov je mov scas pop repnz popf jns loope ljmp mov pop in xor idivl mov (bad) (bad) (bad) jg mov es and ret and mov adc mov jg test (bad) (bad) (bad) call ror cmp xor std (bad) jecxz scas out pop sar mov hlt fildll jg outsl sub push cmpl hlt jge nop sbb and test mov arpl mov cmp push repnz cltd add lret fdivrl lods and sub xor not sub jmp mov bnd lods pop jae lock (bad) lcall or jg push jmp push mov xchg xor insb out xchg push cmp call test out hlt repnz (bad) incl jecxz cmc daa jle fisubrl mov or das cmp insb insb and incl test cs scas dec imul jp xor incl pavgw psubw add xchg std outsl xlat pop ficomp inc sbb xor cld rcrb push leave dec jns pop test (bad) lret ja xor (bad) (bad) decl ja (bad) movsl push ja pop decl jb loop ljmp mov sbb and push or mul mov xchg sub (bad) (bad) (bad) lcall jns std popa cld test jb dec add dec ss les mov push (bad) out cli call jmp mov xchg ret and xchg icebp in and jmp adc jge push jns dec es lcall cmp mov pop push xchg push ror enter mov inc mov and and adc loope or pop add mov sub dec jecxz pop jbe xor (bad) (bad) (bad) fistpll pop loope mov jnp jno add and iret cmp sub ret stos aad (bad) pushl jl daa pop xlat xor jo sahf add xchg ss (bad) (bad) jg (bad) jns int fild mov sbb lcall lcall les (bad) (bad) fiadd ss add jae cmp xchg mov push push cmp cli daa call std ljmp ja int3 mov seta scas sub inc jbe in aas (bad) push imul pop data16 or leave (bad) mov sub jp add push mov (bad) (bad) (bad) aas add ds lods mov sub outsl stos cmpsl iret imul jbe stos pushf xchg mov (bad) (bad) (bad) f2xm1 inc mov cmp xor and mov xchg xor jne cmc mov jmp int cmp out in add arpl (bad) add push iret pop cmp mov jmp add rclb inc or jns ret xchg je pop jg (bad) (bad) (bad) push (bad) sub hlt pop lcall push pop mov xor mov pop movsb push (bad) (bad) (bad) (bad) (bad) fstl push xchg les jecxz das mov lea icebp jb pop sbbl mov inc stos push icebp adc adc ja (bad) (bad) call push inc push nop shrb mov mov lahf or lods push or call cmp inc stc test (bad) jo dec das lret icebp jl sbb adc icebp fs adc add lock repz jmp push jns sar add hlt (bad) decl inc ficom dec (bad) fwait ja,pn (bad) mov pop repnz jmp cmp test sar les cmp and fwait dec cld call push das inc cmp or lods ret pop (bad) (bad) (bad) (bad) lcall in sahf jecxz adc call mov add loope cmp das cli (bad) (bad) fcoms dec sub cmp int3 adc pop mov pop repz mov fistpll cld lods jae push cmp mov cmp push mov movsb and xor add subl sti cmc decl inc pop jl mov xor ds jge inc add cld add jg mov mov (bad) in sbb nop inc or lcall push jmp jb xchg out (bad) dec jecxz push fnstenv stc mov push incl (bad) (bad) decl insl test aas aaa xchg mov xchg mov ds ss call or mov push add adc adc sbb xchg push (bad) (bad) (bad) decl cmp lds jns add or fidivr dec or stos mov call pusha adc dec push mov adc jge (bad) (bad) pushl mov sti and push pop mov pop inc das or sti xchg or xor xor rcr mov dec cwtl and sti cmp cld jmp jle push hlt lret popf mov mov insb jnp xchg es add fldl2t jmp arpl sbb lahf sub je cmpb cmp (bad) mov mov and xchg add sbb out fs (bad) ds (bad) (bad) jg (bad) add xchg xor push add fcomps or imul push sub gs lcall popa cli add aaa std lods into dec fcomip push scas mov mov rcl aas jns pop mov (bad) pusha fcomip push pop cli (bad) (bad) pushl (bad) cmc movsb ror mov es jl xor cmp mov das inc mov jecxz or ficompl xor push cli fwait mov mov jg outsl addr16 mov (bad) (bad) pushl xchg jbe (bad) sbb push loopne cld jae cld insb call js mov (bad) (bad) pushl adc cli lds mov xor xchg xchg xor repnz icebp dec cmp lcall fs mov jge test (bad) pushl inc sbb mov jle inc mov into jg mov mov test out mov adc mov pop push adc jnp push push js dec cld mov sti addr16 lcall ljmp call bound pop ljmp (bad) mull movsb xchg sub dec sahf addr16 sbb mov dec ds and sti icebp (bad) (bad) (bad) incl lret (bad) mov stc cmp stos (bad) dec negb jmp pop xlat add (bad) out clc ljmp mov int3 lock jle rolb movl outsl push mov mov sbb xchg mov (bad) (bad) (bad) pushl fwait jbe and adc (bad) data16 xor aam mov mov xor mov (bad) aad or je stos rclb hlt bound lret (bad) ljmp xor xor pusha mov push dec push mov adc int3 das cs jb fwait push das clc ljmp je ljmp add int3 or bts leave aam fwait das cmp cwtl pop les or jmp push fistpll fcompl pop dec ss or inc fdivr outsb lret inc idivb sbb mov ja jae jns (bad) (bad) (bad) ljmp iret lret mov mov movsl sub cmp ja fwait cmp push fildll lret bound test (bad) call fadds and adc push imul mov (bad) jmp sub mov xchg aad (bad) imul in mov lret ds add movsb pop hlt (bad) (bad) (bad) cmp sti mov xchg imul inc movsl insl shlb nop xor push adc cli (bad) (bad) (bad) fisttp inc scas xchg sub vmread xor pop test xlat (bad) jg stos imul jmp stos or shl xlat cwtl mov cmc pop cmp mov and dec mov lea sub call shlb scas and test pmaxub (bad) in inc insb sbb jge and sub xor sbb xchg xlat cli (bad) (bad) (bad) cld cmp daa jbe mov ljmp mov clc imul mov and (bad) ljmp and jge adc dec jecxz cs mov outsl push (bad) dec insl insl pop inc sub (bad) (bad) (bad) jl xor push fdivl mov lahf int mov adc sbb ljmp and clc dec and add arpl mov addr16 cmc fwait enter insl mov rcll mov lret fwait jb add std into fsubl cmp lcall movsl xchg shrl sbbl inc (bad) pop cmp mov sbb (bad) adc mov icebp mov fiadd adc (bad) (bad) decl lock mov lcall and fidivrl or and inc clc cmp pop jl (bad) (bad) (bad) ljmp pop mov mov mov sub adc pop imul call jmp addr16 shll enter mov sub (bad) fidivr sbb sbb adc repnz inc repnz repnz test mov gs clc jns mov cvttps2pi (bad) (bad) (bad) jnp in add mov xchg outsb sti cmpsl pop add push push jge mov decl mov and push add mov cld test mov mov (bad) fstps out lods out mov xchg jle cmpsb repnz push sub xlat nop int xlat or (bad) (bad) (bad) incl stc sub (bad) dec sub mov jge clc push into lret pop adc and jbe adc ret (bad) incl sbb (bad) aaa push pushf adc mov add or xchg pop incl jmp inc rcl pushf cli fbld and hlt (bad) (bad) (bad) (bad) mov inc or add jne stc cmp mov shll int push ret adc pop std lcall lahf rcrl add pop jle jb xchg jae jl decl lcall push add lods jb inc dec clc lea mov mov imul clc add arpl fadd jb leave jecxz (bad) xor stc out cmp jmp inc push cwtl cmp push (bad) outsl sbb popa in cltd ror (bad) mov inc push out fisub jb fwait pop sub sbb dec push test pop imul jg add in (bad) sbb push (bad) hlt out (bad) ljmp mov movsb jb imul jnp mov xor mov xchg or (bad) ljmp sbb inc mov xlat imul mov xor cmp ljmp in mov jecxz dec in lahf xor pop ficoml rorb call sbb rorb jo add sar (bad) (bad) cli les push xchg (bad) (bad) sub test fisttpl jnp xor pusha mov stos jmp inc jno and inc jge mov and push push (bad) (bad) jmp add rcr addr16 adc inc arpl leave and pushl nop sahf cmpsb sahf (bad) lret sbbl cmp (bad) ljmp mov sahf fs xchg add addr16 movsl xlat les xchg lods test aam gs (bad) call jge sahf pop sbb js in cld (bad) (bad) fistp cmp and jno adc xor inc pop repz (bad) cmpsl pop or jg sub (bad) push xchg jle pop sahf aam inc cmp (bad) lcall jb mov (bad) enter adc mov cltd sbb push clc js mov das sub (bad) (bad) jmp lds or out aam cwtl rcrb inc ret xlat mov adc les xchg pop sbb dec (bad) mov mov jmp (bad) (bad) (bad) lcall add lds dec inc sbb pop stos (bad) push fmuls (bad) out dec aad loopne jg ljmp jo inc lcall mov fistpll mov (bad) fisttp lods or adc das stc mulb push pop ret xchg add (bad) movsl (bad) jno or pushl (bad) scas clc ljmp dec add sbb mov and enter (bad) (bad) lcall sub popf aaa xchg mov js sub and push sub aaa std (bad) call lds jnp scas out add sbb out push cltd clc dec enter out push js and mov mov ds arpl lods mov popa mov sarb enter cmp add or imul mov mov pop arpl call mulb xchg and push mov and (bad) (bad) pushl mov mov inc pop inc call fsubs mov adc call loopne lods xchg push leave cmp sub lret or ret pushl adc push pop push lods and rcll lcall dec test cmp cld mov insl popf sbb js (bad) (bad) (bad) cld xchg mov cmp out sbb inc fprem1 push (bad) mov aam push cmc es lahf pop in ljmp xchg out movsl sbb fisubr mov xor mov inc (bad) (bad) (bad) (bad) aas push iret pop inc (bad) jg stos jb rcrl push sub into push dec mov sahf and pusha or jne daa mov push sbb ficom (bad) (bad) ljmp dec out push mov je (bad) cmpsb adc ljmp xor lcall je inc test cmpsl ss rol jmp (bad) mov das push sahf sbb lcall fcmovne inc stos int3 lods (bad) (bad) mov fdivrl outsl dec mov dec rcr dec sti icebp cmp clc fnstsw mov inc loope push cmp (bad) (bad) (bad) (bad) jl xor jl (bad) jbe cld mov iret jno mov inc add loope mov sub cli pop and inc or mov xor lcall adc sarb lods xor add pop std xor dec jns sbb push mov hlt lcall and or pop int (bad) pushl jge lahf inc push dec sub outsl jne lods or jne notb mov popf jo pop in cmp xchg lcall jb in adc mov dec ret sbb (bad) (bad) (bad) lcall jg xchg jl pop xchg (bad) lds inc pop std insb dec test fs (bad) (bad) call mov rolb jae cli lcall mov (bad) fbld decb mov sub mov int cli loope (bad) call sbb sub and sarb mov jmp push and decb (bad) mov scas or scas jns out inc icebp in sub mov dec jecxz adc loop mov xor mov push push or aam (bad) ljmp ret fidivrl pop pop insl add pop decl dec mov dec mov pushf push pxor imul in lcall fidiv lahf mov rcrb dec jnp push cmp mov and inc pop cld lds loopne adc iret mov xchg inc xchg mov lret pusha (bad) (bad) (bad) (bad) decl fwait push mov mov pushf push daa jg mov aas xor fdivrp sub loop sahf add (bad) loope scas jecxz or ljmp sub pop mov movsb inc inc hlt int3 ja imul fcmovbe or (bad) pushl sahf loop es fwait cmp (bad) cli mov or jae mov pop (bad) mov xor cld mov (bad) in mov sbb in adc (bad) (bad) pushl cs add les (bad) mov inc xchg popa in clc jnp enter (bad) (bad) pushl addr16 mov cmp lret jb sbb sti xchg (bad) repnz push loopne aaa nop ret ds rcr and test (bad) (bad) (bad) incl adc pop (bad) lret dec inc dec pop add mov xor cmp std aad scas popa das add (bad) cmp clc test ret in enter xorl iret (bad) test (bad) (bad) pushl and or xor mov dec ficoml mov add arpl jl lret fnop xor (bad) (bad) ljmp cmp xchg notl in xor inc xchg sbb mov (bad) (bad) loopne (bad) aaa xchg mov test or lods js ss (bad) (bad) call lret stos push and inc sti xchg jmp lret jmp in pop inc call mov (bad) (bad) (bad) mov stos adc lahf les mov jne rorl in cli pop test test fcomip pushl sub fimull jae dec pop sar ja mov imul andl and (bad) cli sub mov inc and adc outsl (bad) (bad) pushl add push add inc repnz cmp lods mov mov (bad) jmp mov (bad) lods sub add in nop and lcall mov inc cld incl inc sbb sahf outsl das jl sahf popa lcall rcl ret jl lods mov jg mov es call (bad) (bad) (bad) jmp int3 jno idiv xlat (bad) loopne sub fwait adc mov jbe jnp rcrl (bad) (bad) pushl nop xchg stos outsl leave lods push int3 lret inc pop arpl loopne rorb pop jb fdivrl mov incl adc fsubl xorl push pop xor xor and fs jl mov loop or lcall cmp push sbb push shrl sbb cmpsl imul negb pop test (bad) (bad) jg mov popf mov fimul push jmp mov aad insb (bad) mov (bad) and in pusha (bad) cmp mov dec push mov mov in test (bad) mov faddl bound mov addl call ljmp ljmp lea jecxz bound pop repnz lcall or add lahf stos inc inc pop in or ret sarb lcall push and (bad) out sbb outsl push dec stos inc sub (bad) ljmpw loop sbb cmpsl jmp sbb in out pop push and (bad) (bad) (bad) (bad) fidiv cmp inc pop dec add inc mov fs pushw cmp or push js add and aam mov insb fnstcw pop mov and (bad) jg or sub loop xchg add aad aaa pop lock lahf addl imulb lret sub mov pop sub div mov jmp xlat sub insb jl les cmp inc mov or icebp mov pushf out add jecxz jg xor adc dec test jecxz add incl into icebp jecxz bound pushf adc mov (bad) dec mov (bad) incl xchg cmp push and (bad) fsubs rorb mov sub mov aaa lret mov xchg dec in ds push sbb incl adc push aad add (bad) (bad) inc and js or sti ljmp leave xor outsb out cld lods sbb aam cs gs dec out out (bad) call or xor inc (bad) jmp sahf fidiv rcrl push (bad) (bad) (bad) jmp imul jns and mov or fadds pop mov fimul xor sbb push popa push push lds xchg (bad) incl std arpl decl outsb imul int3 xchg adc xor addr16 sbb (bad) (bad) fistp and icebp es jno aaa in test jns jmp push sub fcmovb dec pop ret aam adc push movsb push (bad) sub (bad) (bad) (bad) jmp mov jns repnz sub sti (bad) jle arpl (bad) (bad) in or cmpsl mov dec and inc ljmp jp dec cmp ljmp xor lock sub lahf jp scas push adc mov lcall jle out insl sub mov (bad) std pop repz iret jl jg push aas mov mov dec sub cld in and addr16 jo (bad) (bad) push enter xor adc mov aam push mov aas fs and ds fistl dec insb loopne fcmovnbe mov loop rcl dec sarb jcxz loopne (bad) and push mov inc outsl inc jmp mov push imul mov xor outsl lret and push mov in jno and ret ljmp jmp call xor hlt test inc in (bad) (bad) incl (bad) dec test imul arpl aaa mov aam (bad) (bad) fild aad fs in je in das sub aaa je jbe inc ja mov mov push (bad) (bad) (bad) inc cmp cmpsb out in rclb mov push (bad) jbe xor dec xchg push addr16 push mov (bad) (bad) (bad) fmuls cmp pushf lahf dec inc (bad) inc or cltd and mov lock (bad) (bad) pushl lds iret fs push or push popf xchg nop int add test mov sar (bad) (bad) (bad) std sub je repz push sbb mov out add push dec mov out (bad) mov mov inc movsl pop mov lds mov cmpsb adc incl cmc bnd jecxz push cmp (bad) mov or mov fbld daa (bad) cli (bad) lcall (bad) mov xchg inc push arpl cmp mov and out cmpsb push mov mov scas jmp adc out adc test xor mov inc (bad) insl ficompl mov (bad) jmp stos sahf adc mov mov lcall (bad) (bad) incl (bad) call sbb popa cmc adc ret incl insl out mov push (bad) clc dec nop adc inc rcrb outsb mov lock adc (bad) lods ficoml fisttp mov mov fildll subl cmp fist add cs (bad) (bad) inc jne rolb xchg shr sbb adc add adc cwtl jge cltd jnp push cli call mov ret hlt movsb cmp adc scas test and lcall jg dec shll or outsb mov lret cmpsl test icebp (bad) in mov and sahf push fwait sbb (bad) (bad) jmp sbb mov jne (bad) mov mov aaa fcomip ja mov hlt cmp cltd lods (bad) jmp mov fs rolb pushf add add jae,pn and add loope,pt (bad) (bad) jge movsb imul (bad) add leave repz push pop scas xor jl dec (bad) mov aam sub mov cmp loop outsb pop sub and loop (bad) (bad) (bad) incl test inc insl xchg cmc stos jns scas lahf jbe rol mov adc mov cmpsb adc out es les sub cmp fdivr call ds xchg push ds pushf push jmp popa loopne mov and xchg arpl sub cs dec mov jno mov pop push cltd imul aam pop pop inc iret shrl (bad) ljmp (bad) decl mov pop insl pop lcall fdiv (bad) sbb (bad) push or outsl (bad) fcos (bad) (bad) (bad) fcmovnb je xor cmpsb gs or pop rcrb jmp fcmovnb adc ljmp in ja rclb movsb enter imul (bad) inc call adc xchg arpl (bad) (bad) jmp (bad) mov je cli lret cli aaa adc out sub (bad) and (bad) (bad) (bad) lcall ss popa es adc ljmp mov movsb xor jle (bad) (bad) (bad) incl jmp jnp dec (bad) mov or xor mov mov mov (bad) (bad) incl ds pop mov and mov and jns lods mov decl sbb push or add std mov test and nop push (bad) (bad) lcall inc mov mov mov cwtl arpl inc push pop outsl jmp test in add adc push idivl pop lret (bad) (bad) mov jecxz mov rclb int int decl jns dec addl (bad) (bad) (bad) decl mov movsl inc arpl pop add or aad inc fwait xlat inc enter ret (bad) (bad) lcall out mov sbb and cmp add xchg sub pop inc or cmc pushl xchg xlat movsl faddl mov jle (bad) (bad) jg ds lret xor fidivl bound dec dec cmpsl imul jnp cmpsl jbe (bad) push mov jae dec lcall add popa sbb lock dec sarl jg imull les out sub dec arpl cmp lcall lret mov pop push psraw inc ds pop push scas (bad) cli jno add (bad) (bad) mov xlat addl ja (bad) iret mov mov dec loope pushl test inc xchg shr (bad) (bad) cmp mov clc pop jns adc mov push lcall ds cli mov cmp mov dec pop fsubs int (bad) (bad) push jno fisttp jecxz repz xor xor aas bound adc mov xchg jle (bad) (bad) pushl mov jp clc (bad) jle mov data16 test and aam pop sub mov (bad) mov cmc out lock (bad) repz fisubr outsl cmc push xor or ljmp pushl or lods fnop hlt ds loope xor (bad) (bad) jmp xor or outsl jno inc mov xor (bad) cmpsl in gs add insb jge (bad) mov and test outsb das insb in repnz mov xchg sar loop (bad) lcall into jg push pop xor int add jecxz cld aaa outsb push incl mov sbb cmpsb ds cmpb cld lock ds fstpt jnp xor (bad) (bad) (bad) jl pushf dec mov mov (bad) fisubr popa xchg or insl rclb cmp movsl xchg push xchg lcall fyl2x incl lret mov cmp ret (bad) call inc cmpsb mov leave stos jmp ds mov iret add repnz xchg xchg (bad) (bad) (bad) incl fsubr sub les (bad) sarl int3 mov orb clc or push sbb cld dec lret sbb cwtl aam jae mov pop dec imul inc pop jmp fistpll (bad) (bad) (bad) (bad) (bad) mov sbb and dec in insb mov jo stc in push cmp dec (bad) (bad) mov xchg lahf cmp loopne,pt xchg xchg lret pop fwait mov inc (bad) jmp dec jae es cmpsl repnz ds (bad) (bad) ljmp jl or ret (bad) mov jge fadd cltd and push fs mov adc pop xchg mov inc jb and mov div mov les sar mov (bad) cmp pushf inc cmc arpl or sbb outsl lret mov movsl (bad) (bad) (bad) call imul mov mov fstl sahf mov dec jg pushl loopne daa push dec loopne inc push pop test sub jmp lods dec neg pop movsl inc cld les jo adc in (bad) (bad) daa jnp lock mov cld (bad) decl sub jmp push push shufps fadds (bad) jg mov adc xchg xchg xchg call xlat push sub dec out mov mov (bad) incl pop fcmove imul scas pushf fs std sbb dec push repz in dec xchg incl ja dec or pop fcmovnu ss adc test mov daa pushf pop jl (bad) (bad) push push js push sub pop add cmp movsl and dec cmpsb insl arpl add mov adc mov mov enter xchg add mov insb mov popa pop movl fnstenv xlat int pop mov (bad) ljmp sti sub pop xchg sbb push mov in stc popa jg mov insb xor adc out sbb jbe aaa std lcall pop pop in andb fwait sbb xor test fcomip decl mov in movsl pop stos adc out (bad) stc imul fistl mov lcall (bad) ljmp (bad) mov mov les dec arpl movsl and and setno cmc popa fldcw (bad) mov decl sahf cli mov cmp mov mov mov js stos std (bad) (bad) (bad) jge mov jmp pop in loopne jge in (bad) pop bswap cmpsl pushf add roll xor ret xor loop inc dec jg (bad) (bad) decl jge,pt mov sbb out xchg jns jl ss loopne dec push cwtl in pop push xchg cmp (bad) push ret cmp leave aam mov dec sbb enter stc add (bad) (bad) (bad) fisttpll dec push cmp cmp leave aaa pop and pop xor (bad) sbb cld add (bad) (bad) cmp lcall rorb rorb in shlb add daa popa cld sbb mov cli in mov adc dec repz push (bad) xchg pop jno daa inc adc aaa rcl pop add jno push and mov cmp cmp pop xorl jb mov shr (bad) ja jecxz adc lahf cmp fcmovnu pop mov cmp and sub lahf pop call lds jno ss (bad) (bad) jmp push pop mov dec out push mov mov adc sbb sbb add (bad) ljmp (bad) clc ss dec decl clc ret inc cld dec jge and movsl sti push fs call repnz movsl ss xlat adc or nop inc xor in (bad) (bad) decl dec jo (bad) sub or loopne test dec or cs mov (bad) fwait cmc jge sti cmp add dec movsb xchg enter mov (bad) dec les addr16 fldenv (bad) lret xor (bad) (bad) decl int pop jns or adc push or cmp and jns mov (bad) (bad) decl (bad) pop adc ljmp out jae xor add std mov cld mov jmp enter ret mov jg imul scas jns sbb and sub add sbb int testl ljmp adc pop sub jbe or and (bad) (bad) incl repnz inc cli inc sub mov sbb jnp xor pushl movsl jecxz push cmpsl push xor add xor sub mov xchg ja decl cld (bad) (bad) push cltd push xchg xchg dec mov jle sub (bad) dec or hlt pop fldt cmc scas mov (bad) call push xchg sti pop dec mov cmpsb mov cld sub (bad) lcall inc xor fisttpl clc shr xchg xor sub jl (bad) (bad) (bad) jmp xchg xor pop sahf jo mov push (bad) jae pop repz imul loope (bad) (bad) (bad) lcall mov in push pop movsl cmp hlt lea mov or sbb (bad) js lock cmc mov mov (bad) decl je cmp pop mov and or (bad) enter aaa std push inc lret jecxz mov mov fstps imul mov cltd sbb xchg mov sub add inc shl aaa fsubrs (bad) (bad) lcall mov das scas out jno xchg xchg lret movsb movsb pop mov or (bad) incl ss ja dec mov sub mov jns into push mov (bad) (bad) ljmp dec cmpsl scas dec subb scas repz ffree mov roll sub (bad) (bad) pushl xchg loopne push jae adc push or xor sub xlat and (bad) ljmp or mov out and aaa cmc dec add lock mov (bad) (bad) jmp xchg mov addl out sbb in sub xchg (bad) (bad) call pop inc mov testl pop icebp sbb lret cmp (bad) dec fs jns xor pop mov insl mov xlat inc cmc xor (bad) mov shl add cmp outsb mov (bad) aam jne pop mov out cwtl add sub or (bad) and xor ljmp cltd test (bad) decl fstl stc lcall outsl mov xchg sub add pop push movsl mov (bad) (bad) (bad) jp add icebp lret cmp jno test sbb jge loope sbb inc gs mov pushl hlt pop outsl push dec (bad) ljmp jb jne out pop test incl mov notb jmp xchg or mov ja inc in add cmp sbb or mov xchg push scas ds les push push xor dec cmpsb ljmp icebp icebp xchg sub add xor lcall or dec and fbstp js in sbb sub incl jne scas test iret fstps cmp cmp scas mov mov test dec std into (bad) in (bad) hlt pop add xor jnp pusha stos aam lret (bad) mov nop stos pusha jecxz sub adc mov rcrb sahf outsl rep pop sbb enter in fdivl aas (bad) sbb test or ljmp decb mov inc mov (bad) mov lret aam fild (bad) (bad) (bad) lcall das test inc (bad) or popf add inc push mov xchg mov repnz inc cmp rolb in pop repnz daa and out cli jecxz (bad) jle cmp imulb (bad) lcall adc pop pusha in (bad) (bad) (bad) decl mov mov sti sar push cmp or (bad) mov xchg stos clc fiaddl lds inc mov sub (bad) (bad) out ds movsl jnp dec jns mov mov mov movl leave std out mov loop vpsllw mov fistpll sub add adc pop mov (bad) call loope sbb ror cmp pop adc call inc add inc push (bad) push stc sbb jnp lahf or cmp imul cmc (bad) (bad) ljmp loopne jne cmp xor jno sbb outsl cmp ds xor pop stos xchg jb inc inc inc lea xor pop add sbb subb out in sub jg sub int3 mov inc loope pop (bad) (bad) (bad) call call mov push push sub cmp divl loopne outsb push dec pop jne das xchg test call (bad) psrld or ret xchg ja mov and push cmp xchg mov (bad) (bad) incl lock inc je jne loop mov popa mov sub cs rcr fisttp xchg (bad) mov sbb mov repnz outsl jb (bad) popf cmp cwtl call (bad) cli jg mov xor xlat add (bad) ret jno lahf bound sub nop cmc jg inc js (bad) leave push push repz std pop and icebp (bad) mov push ret fsub xchg and or push call push decl mov fstps lods dec pop out imul movsb (bad) jg xchg (bad) inc pop je push loop stos movsb les in (bad) (bad) out adc (bad) mov jbe fldcw cmpsb fdiv insl (bad) cld mov mov cld mov je dec clc (bad) (bad) (bad) cmp pop sbb jno repnz out mov enter stc aas dec mov mov push adc lock adc hlt ficoml or (bad) (bad) ljmp cmp cmc mov xchg outsl cmp fdivrs inc xchg arpl pop inc mov push call dec push and xchg (bad) xchg call incl add adc (bad) in mov inc cmp cltd jnp ss mov and ds fcoms push sbb js movsb icebp lcall sub mov lods iret (bad) outsl mov loop,pt dec xchg add ds jmp push lods xchg (bad) jg (bad) push mov mov mov fiaddl cmp (bad) fbld pop lds (bad) es jmp (bad) fldl jl add ja aam mov mov popf jne js adc lcall adc roll mov hlt jmp in jl mov inc rcrl xchg mov xor cltd push add (bad) (bad) (bad) stc or sbb ss fsubrp pop mov jp mov sti repz push aaa imul or pop clc inc (bad) (bad) jle rcll push in mov dec jo (bad) and inc pop fimul and or xchg fimul rol mov mov push sbb (bad) (bad) (bad) (bad) pushl and rolb gs sbb int fwait sbb push mov sbb cwtl fcomip sbb (bad) (bad) incl push popf or mov cmp loopne sahf pop jge xor out push xlat fisttpll loope pop and sub (bad) ljmp pushf fbld lret xor arpl enter test xchg push jecxz pop ret mov (bad) incl imul leave dec test (bad) dec xor jae arpl xor lcall jmp (bad) aaa add fwait pop insb mov mov shrb fcmovnbe ret (bad) (bad) (bad) jmp movsb xor inc mov repnz inc cmp cmc nop pop adc aaa mov mov pusha dec (bad) (bad) mov push insl cmp sub sahf jae lea fst jle pop fildll jae,pt lcall mov mov je jno mov (bad) iret pop (bad) (bad) (bad) pushl gs adc mov into pop jnp (bad) mov inc xchg ljmp lock ficompl mov nop fwait xchg nop push jle or adc or ret daa es xor popf rcrl (bad) ljmp jbe,pt insb push sub gs outsb daa mov sub ja jge adc lcall sub int3 xchg mov sahf mov mov call push add out mov loopne daa adc stos movsb jge xchg xor add jecxz lcall mov add jno adc idivb cmp out mov ljmp inc bound jl fistpl push sbb pop (bad) (bad) mov mov adc jl cmpsb pop subb pop cmp pusha movsb (bad) (bad) (bad) decl cli mov push cmp stc xchg jle or mov sbb pushf xor insl sar (bad) ljmp jne cli xor lcall or in sbb dec test pushl cld add jne leave icebp mov jo call or lock js lock mov jl adc mov dec lods cmc test call sbb sub scas fdivrp (bad) cmp ds adc (bad) (bad) jg ds lahf cmp shrb ffreep sarl mov call inc in ljmp dec cmp ja aad ss cmp (bad) (bad) call dec cmp xor cmp cld ds into stos pop jl jb les aad and and decl push xor cmp pop decl fstpt (bad) (bad) inc push jne inc cmp or stc jge pop jne in mov in mov loop pushl mov js adc test cmp sbb pushl add repnz lea out das cmp stc xchg mov stc sbb jne inc out (bad) (bad) pushl int adc pusha push push cmpsl mov xchg cmp test stos (bad) (bad) call and xchg das xchg jbe mov jns scas inc outsl das aaa mov sar mov xchg fisubl inc jne inc (bad) jg aas push xchg mov sbb das stos xchg sub cmpsl cmp dec decb lock cli decl sbb sub mov lods lcall inc mov mov pop and scas push js push pop mov pop ds aam (bad) (bad) (bad) (bad) in xchg sbb enter xchg cltd faddp cmc in mov aas dec out int3 addl (bad) inc ret imul js cli dec sahf aas push and cmc adc xchg stos (bad) xor pop pop (bad) (bad) (bad) lcall ret cmpb dec sub mov xor fcmovbe mov pusha inc mov ljmp out arpl push leave push ret pop mov add imul (bad) fsubrs stc loopne sbb dec (bad) (bad) xor hlt push mov inc inc lds into or (bad) cmpsb (bad) cmpsl test test inc (bad) fwait jmp jg and xor rclb jge xor imul sbb mov sahf xchg imul cmc ja dec gs (bad) (bad) (bad) (bad) fdivrp rol lods (bad) mov dec rcrl mov test pop loope cli mov jge push inc (bad) (bad) (bad) incl xor xchg in enter mov mov inc or cli pusha jno pop mov (bad) call dec mov lahf scas in ljmp sub xor lds (bad) (bad) (bad) jmp call or nop push and and in and ljmp mov mov pop (bad) rorl inc and shl xor fwait inc xchg cld or (bad) jg xchg push cwtl jb mov dec imul (bad) (bad) incl addr16 mov pop scas xchg daa (bad) fs jmp jg adc jmp inc jecxz (bad) incl scas mov add repz sbb std lcall sub lcall aam mov stos push ret scas ret mov jl mov lds (bad) fsubrl pop daa out rcrl dec pop sbb mov (bad) (bad) mov imul addr16 sub stc mov cltd sbb dec sbb (bad) call adc ljmp mov dec faddl outsl ds inc not jno (bad) (bad) ljmp push or repnz lcall jl (bad) lods xchg dec xchg icebp aam sub push loopne mov test lcall xchg and aas sbb (bad) fnstcw gs fistpl jae xor (bad) mov push mov add jp mov insl test mov stos ret bound inc pop mov (bad) (bad) call jno xor insw test popa sbb adc rorb repz cmpsl mov mov insb push push test ds (bad) (bad) aas movsb push dec mov sbb out fldt fs or jno out (bad) decl dec dec outsb mov test lea inc pmullw mov inc jnp sbb ljmp xor inc ficompl inc mov push pop xlat rclb adc insb jg mov mov and loopne and xor jno or jg mov push mov (bad) (bad) (bad) jmp cmp ffree cmpsb repz inc mov sbb mov stos lret fildl sar (bad) sti lods out push mov flds jge cmc add xchg pop fldl pop or (bad) (bad) ljmp pop xor test cmpsb out mov outsl push push fmull das pop mov xchg icebp (bad) mov inc lahf movsl mov enter (bad) pop dec loope (bad) arpl pusha clc add lcall bound je inc es repz out sti mov inc rcr (bad) (bad) (bad) jg setae push inc div mov and cli dec jnp in mov pop std jg loope cli pushf mov pop sub lods xchg mov enter lock adc (bad) (bad) pushl and xor lea jne mov mov ljmp (bad) (bad) push sbb (bad) jae movsb xor (bad) jg cmpsb inc mov mov xchg (bad) (bad) pushl xchg mov xchg jle xor lds (bad) cltd les test (bad) (bad) incl adc out or adc dec test pushf in cmp (bad) (bad) incl xchg xchg mov mov imul pop mov dec (bad) incl cmc jno xor imul adc out stos repnz or push mov lahf mov mov inc test lds ljmp push mov ret push mov sbb jbe int3 roll cmp dec adc movb repz idiv (bad) (bad) call or lods mov sti jnp movsl fisub adc (bad) mov mov insb mov or pop sub add lock out mov pop call pop icebp aas in scas imul aaa fdivs stc bnd mov or and cmpsl inc fildl xor loop (bad) (bad) ljmp mov test pushf divl or test inc cs jg (bad) (bad) out xor inc movsb fwait xchg xchg mov (bad) mov (bad) mov dec clc (bad) xlat mov cmp cmp inc push push (bad) (bad) mov push in cltd sub xchg test and lret pop jnp in sti sbb dec (bad) push outsb leave in mov push push mov cmp sbb push add mov mov adc lahf ja,pt xchg (bad) (bad) (bad) (bad) push xchg mov adc aas adc or and mov (bad) lcall mov dec fwait enter inc mov cli ljmp xlat pop xchg sbb je outsb (bad) (bad) (bad) call add popa lds in inc ds out push mov outsb and dec mov adcb fs (bad) fcomip xor (bad) mov and insb add xchg test popa stos loop (bad) (bad) (bad) pushl adc xchg push pop test xor xor and mov mov int icebp incl mov je push insl ds out adc pop je rcl loope add mov (bad) (bad) pushl daa (bad) popa xlat cltd adc lds repz sbb iret ljmp adc and decl lcall movups inc push (bad) sahf sub loop cmc push pop loopne in loopne add mov (bad) jmp mov dec pop subl addr16 addl cld inc mov xchg mov cmp jmp sti pushf cmp sub mov aas popf rol add ret fcomps cmc pushl ffreep sbb inc sbb mov cld decl loopne xor sub addr16 sbb (bad) jg mov jo mov jne repz roll mov cmp push mov adc jg sub adc pop std (bad) ret (bad) incl cltd ficompl stos inc loop mov cmp bound and mov mov jecxz push call xchg aam shrl (bad) (bad) jnp aad and sub aad push dec push jnp or jg jb add in pushf xor fidivl and push ficomp arpl pop hlt push sub and jo pop (bad) mov ja ds add ljmp into or push mull inc xor movsl xchg jecxz inc out mov jns xor jb or xchg add and clc (bad) (bad) (bad) call or push ficoml xchg mov imul (bad) (bad) ljmp sbb ffree (bad) mov fidivr test mov std mov (bad) dec dec mov vsqrtps (bad) mov mov or (bad) lcall dec and push push and jne ret mov ljmp mov call movsl adc or or push inc dec mov sbb (bad) (bad) (bad) (bad) cmp mov imul mov sahf push push mov leave mov (bad) (bad) cld mov pop fidivl add lss cld adc (bad) jg ds lret and out push inc push hlt push dec pop cmpsb repz mov mov pop imul mov jne (bad) in andb adc js mov mov sub add or jmp push arpl mov popf xor mov jmp sbb jo fs add jle or mov (bad) (bad) lcall mov jmp lea ss shl jns cmp bound push cmp in stos mov (bad) (bad) inc pop rorl es lea dec aad jl xchg sub lods out rcrl (bad) (bad) (bad) ljmp push add cmp pop ss mov stos das out sahf ds rcrl inc adc clc (bad) mov jno pop ss fwait pusha jb rorb push fcmovb sbb mov (bad) (bad) (bad) incl push sub fnop rcr cwtl mov loope into jle pop and push pop cmpsb pop movsl mov mov mov lods les mov jbe jmp lret lods sahf int3 pop (bad) (bad) mov in ljmp fstl mov lock pop sbb (bad) (bad) (bad) inc and dec sbb jge ret pop dec add stos sub (bad) jmp and fcomp mov ljmp imul sahf popf jge cmp add clc rcrl fs ja lods fistpll daa push xchg lret in lret jae repz das cli jmp popf scas jl add sbb inc and (bad) arpl mov call cld xor iret daa shl aad push inc inc push push mov jmp jb pop mov decl add xchg gs mov mov mov add pop nop ficoml xchg push inc divl fucomp cwtl jo pop out mov mov mov cld pop (bad) pop clc dec ss dec jecxz (bad) cmp jmp (bad) cmp orl mov ror mov xor rclb rcll in add in arpl mov jno jno jecxz (bad) (bad) (bad) ljmp push dec movsb imul (bad) call sub or stc adc xchg ret (bad) mov (bad) xor pop ret aaa cmp sub mov cli sbb adc jge adc fcmovnb push movsb ss hlt adc cmp enter (bad) ljmp inc aas out cmp pop (bad) cmovl sub and xchg shl into (bad) enter push sar adc inc cmp insb out (bad) (bad) (bad) (bad) (bad) and dec pop sbb gs frstor inc jbe in mov xor (bad) (bad) (bad) jmp fistpll insb dec mov mov negb mov jb xor pushf pop repnz (bad) (bad) incl jnp (bad) repz mov pop int lds push sbb fdivr (bad) imul dec push mul mov (bad) (bad) incl pop testl and adcl repnz mov (bad) jg ljmp out test or (bad) mov icebp adc aad push inc and loop jmp sbb push xor mov ds mov ss (bad) (bad) decl push dec dec add cwtl scas xor dec lret pop fildll pusha into out (bad) aas push push dec (bad) (bad) (bad) fisub pop and ret enterw or xchg mov in jecxz (bad) (bad) decl mov mov fs xchg scas scas xor cltd mov xchg and das int3 sbb xchg shll (bad) (bad) pushl mov sbb mov xor aad (bad) xor jmp mov out idivb ljmp dec xlat mov sub (bad) (bad) (bad) (bad) cmp scas int push leave mov (bad) mov cmp mov dec dec (bad) insb cmp std (bad) jmp pop in mov push mov in mov shll outsl clc (bad) pushl (bad) push mov into lock cmp push ja movb pop xchg lret (bad) (bad) jmp xor jno and cmp lret out pop icebp js fnsave decl pusha mov aaa outsb scas test jge xor mov cmp loop mov (bad) (bad) decl push cltd loop test ss jmp pop mov sarb push movsl out push mov cmp sbb mov (bad) lcall outsl icebp add sbb xchg sbb adc or sbb sbb call pushf sbb pushf loopne xchg lods clc lock inc rol cs (bad) incl pop mov sahf into ja push int sub sub shlb mov lock push mov sarb or jg jmp sub mov aad fnclex or (bad) int imul into jnp and cmpsl mov decl pop inc add pop fs add pushf rcrl repnz ss aad mov jns inc cwtl lock (bad) pushl push or mov mov insb (bad) loopne xor adc or add dec jecxz cmp (bad) (bad) (bad) decl test ja inc mov jbe icebp push ret fsub outsl into sti add scas mov stc (bad) (bad) (bad) jmp mov sbb daa scas xchg movsb fwait lock stc ljmp cwtl jg (bad) (bad) mov add subb lcall sbb (bad) (bad) fnsetpm(287 pop jmp mov jmp leave out inc mov repz mov push (bad) mov call push xchg ds cmpsb dec cli mov or xchg flds (bad) (bad) (bad) mov fcompl sti aam or cwtl lret cmp mov lds (bad) loope repz push incl add push iret (bad) jbe mov lcall or (bad) incl sub std pop fnstcw out push and dec fnstcw sub jl fwait and (bad) (bad) incl mov xchg pop xor mov iret add rolb mov or int3 xchg push decl add pop int lods add dec xor stos xor jge push (bad) (bad) outsl inc adc sahf add add inc sub jb sub adc cltd mov xor jmp loopne (bad) adc dec push fild xchg popa push inc pop adc adc dec or (bad) (bad) (bad) jnp decl xchg pushf lods sub or jnp jg (bad) or stos int3 arpl scas xchg jo inc (bad) (bad) (bad) incl sti inc (bad) cltd jae or push icebp int push pop ss into mov call call cmc aaa into bound sti test pushf loop cli xchg cmpsb test mov (bad) ljmp mov je sub cmp arpl clc push mov (bad) out ret sar (bad) incl xchg (bad) je jl pop popf fisubr dec pop lods int or xor (bad) scas in or (bad) (bad) jmp in mov and stc sahf xchg loope lret mov xchg lods mov int3 mov mov popf jno mov or xchg ljmp xchg mov mov test in inc add xor adc jmp sbb sbb inc or mov sub mov stos sar dec cli dec test fdiv in aaa movsb loope (bad) (bad) (bad) lcall mov inc or mov call adc jge (bad) (bad) jmp xchg mov cli jo sbb sub (bad) sub and and fwait xor mov sub cli xor mov cli push inc cld (bad) (bad) mov leave cmp fucom hlt rcll push mov jo mov test (bad) (bad) jmp imul mov mov bnd push and (bad) (bad) (bad) jmp mov sarl sub pop push in ds jbe push aam push (bad) pop stc adc sahf lret xor add inc outsl add mov push inc call arpl sub pop pop xchg mov mov (bad) (bad) decl xchg aaa sbb push out mov sbb je inc or into pop ds popf (bad) (bad) call cmp sti dec cwtl test mul mov lret mov inc (bad) adc into fwait push (bad) jmp jnp cmpsb dec negb inc fwait divb pcmpgtb mov icebp outsb js and decl test popa jne pop cltd out int xchg shrb cmp (bad) mov scas push pop mov adc fadds (bad) cmp (bad) (bad) (bad) ljmp mov sub out mov inc lcall pushf cmp loope adc cmp mov lea mov sbbl stos jle jg mov scas jecxz ds inc cltd sarb std (bad) (bad) pushl imul (bad) jbe out pop leave push insl imul roll cli (bad) rcl jmp test adc mov mov addr16 cltd xlat decl ficompl (bad) dec xchg fidivrl (bad) (bad) (bad) jg fs mov pusha pop jo idivl and pop inc pop out mov fldl or imul jl xchg cmpsl push shrb pop out mov jmp add aaa mov (bad) (bad) (bad) decb orl xor test mov sbb pop add inc pop arpl xor (bad) (bad) (bad) (bad) out dec dec or sub outsl xchg sbb push pop dec ds pop dec ret shll mov pop xor sub (bad) (bad) (bad) lcall mov cmp insl or mov int mov in cmp js cmp (bad) (bad) (bad) incl out ret pop mov cwtl jl mov (bad) jle mov roll sbb inc (bad) (bad) (bad) pushl pop insl jge dec cwtl jbe aas mov jg (bad) push mov fcmovu xchg xchg fisubr int3 mov in jno mov aad xchg imul outsl cmpsl hlt (bad) dec sbb xor mov jb xor test add (bad) imull pop mov cmp jnp aam (bad) call ret fstp cs adc (bad) mov pop jmp insb or (bad) pop push ds xchg sbb dec lahf xlat xor stc in adc (bad) incl fsubl mov dec test push sahf sbb outsb into push repz inc jo jae ljmp (bad) add dec jge push loopne int jp cmc cmpsb jns je cmpsb (bad) in (bad) incl jbe lods in jno or cld mov push dec imull xor (bad) (bad) lcall mov stc or jmp es mov out mov push push mov (bad) (bad) cmp xchg adc jmp gs bound pop pop add xchg pop scas adc fisubrl xor lods xchg gs xchg and rcll (bad) ljmp add push push push adc fisttpll movsl cmpsb popa mov stos (bad) sbb add lds add xchg cli dec pop fbstp mov cld lods dec cmc inc leave push mov clc (bad) ljmp sbb mov fwait test aad cmc repnz jae bound push or pusha mov add jo aam (bad) (bad) decl clc push mov test lds ret (bad) mov xor loopne (bad) (bad) (bad) (bad) jp insl popf inc in xchg inc sbb and movsl shll sub xchg add jae adc cmc stos push cmpsl cltd clc jmp ret js inc (bad) ljmp cs sub test mov (bad) icebp lea testl sub ret inc cmp jmp aad mov push scas (bad) (bad) (bad) incl dec loopne mov addl clc mov fcmovnb dec iret adc (bad) (bad) fcomip cmp mov cs aaa mov or fmuls cli pop (bad) jmp fimull test mov cbtw pop cmp enter cli lcall jmp push push mov sti mov (bad) pushl movsl pop das mull adc les movsl xor (bad) (bad) jmp addr16 mov sbb ret lods mov inc ds sub pop push nop (bad) (bad) (bad) (bad) jmp rolb adc adc add inc clc or mov (bad) (bad) (bad) ljmp cmc lahf lahf sbb xchg pop aaa aam mov mov cmpsl dec test loopne repz jge mov addr16 push cwtl jle push ljmp popa pop or stos add stos bound fbld imul lds mov jmp in mov (bad) cmp (bad) (bad) call in fidiv xor inc js inc and or jae hlt inc out lcall lods push (bad) (bad) pushl (bad) sarl shufps mov dec add shrb inc jne jg pop add stos cmp cld (bad) sub mov incl repnz sub cmc jnp pop jmp mov lcall fwait xchg fucom int3 pop cmp repz imul mov mov jno xchg cmp imulb jmp push cli cmp int3 jge mov (bad) mov mov outsb sub loope jno inc idivl (bad) (bad) (bad) ljmp mov clc es lcall dec mov inc divl dec mov or (bad) pop lock mov test jl dec dec cmp and jg lret add jnp mov sbb sbb int3 ret jl mov mov incl (bad) out mov adc sub adc jo inc mov add add (bad) (bad) pushl pop in and test imul cmpxchg push popa sbbb sub sbb (bad) (bad) (bad) call add jg lods sub cwtl mov je ja jmp mov mov (bad) (bad) call outsl push cmp outsl (bad) aad or incb push inc insl mov loop jae (bad) mov (bad) (bad) (bad) call pop cli (bad) push sub dec out ljmp push sbb sbb jno sti sbb incl dec shll ss ja pop pop cmp and fistl ret fimul cmp icebp add dec or and test outsb cmpl leave pop sbb pushl es into jl dec add clc lcall (bad) push or movsl push sbb xor int (bad) (bad) lcall test mov cmpl cli and dec add inc pop icebp (bad) pushl xor jmp jp sub xor lods jmp (bad) into jne lock movsl (bad) (bad) (bad) jmp cmpsl push or cmp es mov leave shl into mov (bad) rorl push sar (bad) inc fmull rcll add nopl push jmp or xchg es inc ret aaa push ja paddsb out dec sahf (bad) call loopne loopne dec mov adc xor cmp (bad) hlt jno (bad) (bad) (bad) push mov in sub pushf sbb jbe sarb hlt mov push imul lods xchg inc cmc out (bad) cmp (bad) and scas in je cmp or insb push sti shll pop and mov (bad) mov mov ds call addr16 mov sbb dec mov (bad) (bad) (bad) decl daa push pop les movsl ja xchg push sub movsb inc (bad) xchg test mov out and mov or sub (bad) jmp frstor xor jb ficompl jl js xor addr16 push (bad) (bad) ljmp lcall fstl mov jmp jnp int js ss incl sbb cltd mov jl xor add fstp cmp jle lods fsubs sbb pop jae mov std ret mov gs das sahf cmp mov mov ljmp xchg inc mov cs sahf fs (bad) pushl std mov dec adcl aas fnop in mov pop jne xchg (bad) dec xor sbb (bad) sahf ds loopne xchg mov ds (bad) (bad) lcall in jp mov cmp jecxz push xchg mov mov jg xchg lcall incl int3 sub je dec ljmp inc jo cmp push mov sub call cmpsb iret pop iret lcall sub loop dec mov mov mov rolb loopne pushl lret loope call subl pop je push add and ljmp aaa mov movsl cmc ds (bad) (bad) (bad) decl fistpl movsb cltd mov xchg sub popa jle xchg adc mov push clc leave out js sub (bad) (bad) incl mov arpl out or push vshufpd add data16 iret cwtl lahf (bad) std (bad) cmp adc dec mov aaa push gs sbb or shrl jo sbb mov shr add push lds xorl je adc inc mov add cs push test cwtl pop sbb std or (bad) (bad) jg add inc dec test jns mov test bound les push das jnp scas (bad) (bad) (bad) incl jb inc pop jge mov xor notb test cmp roll inc mov or (bad) (bad) (bad) mov test push or std inc jae stc daa imul cwtl pop add mov clc cmp mov inc mov inc scas (bad) dec fistpl mov mov ffreep or xor push mov repz aam (bad) cld xor xchg adc dec lods aas loop lods (bad) (bad) mov mov mov mov incl and mov jnp and (bad) (bad) ljmp fcomps int3 add xchg sbbb jp je push jge (bad) (bad) (bad) fstpl dec cmp jecxz sar cmp nop sub xor mov fbld add or mov rep lods xor fdivs xchg pop (bad) icebp in mov call mov lahf pushf push xlat test out pop jno shrl mov out rcr std (bad) (bad) ljmp outsb sub jecxz jle cld out sbb pop inc cld shll jnp cmc (bad) (bad) call cli sarb mov xchg mov xlat jle xlat int3 mov mov (bad) (bad) (bad) (bad) mov in adc cmp jmp add push jae cmpsb cmp mov arpl or (bad) (bad) (bad) decl adc into imul sbb lahf rclb xchg popa cwtl adc subb out xchg xchg outsb inc mov lcall mov ja jp in sti outsl or ror cmp in (bad) mov (bad) (bad) (bad) lcall inc outsb scas lea scas add outsb or sub stos repnz lods jl in dec mov dec aas (bad) (bad) (bad) ljmp or out movups xchg cmp sbb pop and push adc lcall or clc push lcall pop xlat xor (bad) lds jl mov dec xor stos nop adc mov call jbe and mov or pop aaa cld (bad) ljmp test (bad) test and test out ret fcomi cmp mov decl mov icebp xchg add int dec arpl add push bound mov (bad) (bad) (bad) call mov mov test sbb adc push lcall dec and push mov negl (bad) (bad) (bad) (bad) call xchg jne jno jecxz clc fnstcw inc aad ret adc mov dec or in pop mov js subb sub arpl adc ljmp sbb mov data16 faddl jnp or cmp fwait or das clc int adc sbb cltd cld or mov call (bad) (bad) call dec fdivrs nop sub jne test xor add xchg mov or (bad) data16 inc and mov sub sar mov lods ss loope mov in rcrl (bad) (bad) in jg add mov jnp add adc lret jns dec xchg (bad) (bad) jg lcall cltd push scas jbe lods pop push mov (bad) mov push cmp (bad) (bad) incl push cmpsb and rclb push mov ja xchg mov lock push or es (bad) (bad) add mov movb xchg or mov xchg std mov xchg popf xchg mov jecxz ljmp (bad) (bad) jmp and xchg hlt dec imul add mov fildl push or xor jnp aas mov adc outsl or leave mov decl push and lret scas idivb jns or xchg cmpsl mov push test (bad) (bad) incl jns jle sbb (bad) xor pop (bad) rorl mov jecxz cmpsl mov sub push aam mov xchg mov dec add fisttp mov call sahf adc lods js out jle mov adc (bad) (bad) ljmp push icebp and enter leave xor test jl mov mov cli xchg (bad) (bad) (bad) (bad) jg push clc cmpsl (bad) xchg lcall pop push fndisi(8087 shlb adc sarb (bad) (bad) pushl rcrl (bad) push in out inc inc adc in xor out stos push scas (bad) (bad) jg decl ljmp push sarl push push sub pop shrb xchg adc (bad) (bad) (bad) in mov and test (bad) jo lea rorl cld xchg mov or and mov decl insb roll pop cmpsb sub pushl sbb cli pop scas dec mov (bad) (bad) (bad) (bad) cmp punpcklbw lcall lret cmc pop int3 jle cmp decl lcall sbb xchg out add shrl ss mov movsb shrb ja and int3 mov or call sub (bad) (bad) (bad) jmp pop pop bound sub cmp rclb leave (bad) mov sub adc add cld (bad) (bad) (bad) mov mov cmp push jbe xchg push jp cmpb mov call push scas inc mov push mov adc out pop dec add inc ret iret repnz mov add ljmp sti (bad) lcall pop fldt cmp in imul mov das xchg mov (bad) adc out icebp daa js (bad) (bad) lcall sarl pusha mov loopne mov lahf xor jmp jge repnz (bad) mov lcall xor mov mov in sub scas add pusha hlt in sbb dec (bad) (bad) jg push push inc in mov movsl fmuls imul (bad) (bad) fsubrl cmp (bad) mov cmp or mov imul (bad) (bad) decl out in push icebp mov inc jecxz xchg fmull add xchg (bad) out add (bad) pushl xchg jge outsl push xor mov popf inc cltd loopne sahf lock mov and mov test jns stos cli (bad) (bad) fcomip jb mov mov loope mov xchg shrl cmpsb lcall arpl incl fwait cld lea int3 pop loope dec pop mov sbb xchg (bad) (bad) call ja aaa and inc and mov lods add adc aaa cmp (bad) (bad) ljmp lds test add mov and mov mov ja or or pop dec mov (bad) lcall insb adc ficompl les mov (bad) inc jnp jp dec sbbl repnz ret dec mov shlb dec lahf arpl hlt mul ret std (bad) (bad) decl sub inc hlt and cli inc mov pop mov sbb fs push mov (bad) lcall sbbl outsb mov nop loope or test decl jae dec sub adcl (bad) ljmp push les les insl jo bound outsl call (bad) (bad) pushl test lods out add mov push fsubrp pop sti cmp lcall (bad) movsb sbb mov cltd dec lods popf and adc jge pop push sbb inc dec push or movsb push mov (bad) jmp push jge xchg in mov loop jge and mov mov xchg scas clc jg dec lds scas jle es or dec jne mov incl push push add cmpl and out bound iret cmpsw (bad) decb (bad) (bad) (bad) lcall jmp lret (bad) aad inc std sbb pop incl dec mov pop mov aas mov dec push sahf dec (bad) lock sub fwait (bad) (bad) (bad) jmp cltd mov outsb xchg repz pop mov jl pop fs pop push sub jno (bad) dec jg test out or pop popf (bad) mov adc (bad) (bad) (bad) decl rclb cmp mov and movsl xlat push data16 shrb call pop lea mov cs repz push daa lods jge movsl cltd leave ret fidivr fimull mov stc inc dec call rcrl ja out inc fs push or decl inc jns fst xchg inc lea mov arpl sub in je call (bad) incl jbe lcall or clc pop jecxz push jg sbb jns mov add mov jmp fucom and loope xchg push push push ret xchg cmp je popf mov (bad) lcall movsl pop push rorb ljmp pushf mov pop lock (bad) loop les (bad) sti dec xor (bad) jae ds decl inc mov test into (bad) and mov dec (bad) (bad) call lret icebp dec ret dec cli or pop popf int3 fidivr (bad) or insb push inc sub mov mov dec jo pop mov dec in cwtl pop subl mov pop sahf push add (bad) jmp mov push gs push cmp sbb jno sar outsl cmp insb xchg (bad) jg sub ja mov jb jmp cmp incl pushf scas or and jne cmp das add pop sbb out add (bad) (bad) mov ja in jle xor add jb in and mov jae fdivrs dec popa (bad) mov xchg sub lahf add inc insl jg das pusha adc xchg js (bad) (bad) (bad) pushl (bad) call cmpsl jbe stos or pop jl push cmp pop jbe add (bad) (bad) (bad) (bad) (bad) cmp jo int3 fisubrl mov int3 and lcall js and or loopne jmp push jle push inc mov loope dec sbb out cmp sahf mov push sub dec dec sbb in outsb lcall jo jecxz fdivrl and shlb clc shrl jne pop subl (bad) pushl aaa sbb mov jge imul mov enter push sahf push xor or (bad) (bad) (bad) ljmp fwait lret push loopne mov (bad) jne call jb fstps mov hlt (bad) (bad) (bad) sub jns mov insb mov out (bad) sahf (bad) dec (bad) movsl xor fcomip outsl pop and jbe jmp pop push add pop test add (bad) decl cmp adc mov pop pop lret popf xchg scas pop hlt adc out shlb lea rcll fidivrl pusha enter lret int3 in insb sti adc or sbb stos pop scas ret lods xor xchg fsubrp repz std (bad) (bad) jp mov outsl js pop cmpsl fucomip lret mov es jns (bad) (bad) fistpll scas mov inc fsubl or or insl repnz (bad) jb movsl aas outsb pop int fbld add mov addb pop jnp lcall pop mov pop cli push cmpsb clc icebp daa push ret jne,pt (bad) (bad) mov jne mov xchg adc fwait lds aam ljmp mov push jno (bad) lcall inc pop add inc cmp inc test and aad (bad) jmp jnp scas aas movsl pop fstl push sbb mov pusha aam mov (bad) (bad) ljmp icebp pop (bad) push sbb pop push jno ds and sub movsb incb (bad) (bad) lcall aam lret cmp fdivrl xchg test test inc cli popa inc inc ja test std mov sub nop into je or cmp decl jb xchg (bad) in cld push sahf jecxz (bad) pushl mov shrl cltd and and clc (bad) incl xlat push stos stos dec push fisub inc (bad) test dec or or add dec std jmp cmc (bad) sub dec fidivr out mov and mov jg push mov out jg inc rcl push pop insl int lock inc sub pop nop ljmp dec or sub hlt mov mov inc dec mov in or mov or clc jmp jecxz push scas push sar cmpsl loopne pop push ja stos (bad) adc das cld and cmp inc sbb jns (bad) (bad) mov mov cmp out and repnz in in (bad) (bad) (bad) pushl leave cmp mov jl,pn pop cvtps2pd or mov les inc cmp shrl or daa out clc (bad) lcall mov daa cltd xlat nop jp scas xchg sbb dec (bad) lret (bad) ljmp decl clc cwtl jg,pn add cmc call mov movsb (bad) (bad) (bad) (bad) aas mov cmp fistp push pop mov jne rcl sti inc xchg call mov pushl inc fdivrl cmp jno push sahf add (bad) (bad) mov cmc cs pushl add iret mov das cli (bad) jg pop dec sub xorl or rcrl stos xlat sbb test pop mov mov fnstsw mov mov and ljmp add sub (bad) (bad) (bad) call insl xchg push lret out fmuls cwtl sub stc mov fs or (bad) (bad) push insb dec out pusha test fist xchg divb mov sahf test or xor (bad) call (bad) popl notb scas mov faddp mov icebp jb pop mov add dec std fcomip (bad) clc sarl scas (bad) lcall (bad) push ds int3 sbb faddp (bad) fnop mov es or sub out pushf lods add push mov imul xlat push lods lock sbb dec pop jle inc (bad) (bad) (bad) call pushf and inc jne or xor ss mov push flds test (bad) jmp into mov sub stc xchg adc jge dec outsl mov or mov mov xchg or mov into idiv (bad) (bad) (bad) call jmp dec out sarl pushf pop or xlat and cmp call call jno sahf cmp stos jnp push (bad) xchg or jl fwait (bad) and xor xor sub xor call and das leave outsl push sahf mov jmp sbb pop mov adc outsl cmp fild ds (bad) (bad) call sarb jns mov xor fisttp add mov shl mov pop test mov imul lret (bad) (bad) call and in pop cmpsb push jecxz call in push jne subl push inc test mov (bad) call pop dec into call or xchg mov cwtl arpl pop jmp mov adc (bad) (bad) (bad) decl jo fwait cmpsl das sub push mov (bad) jns add ror push inc insb (bad) (bad) (bad) (bad) call push in nop (bad) mov pop sbb dec jne push fiaddl cmpsb sub pop adc push adc jp push aaa sbb add adc ljmp xor pop adc scas aad push insb xor test push sahf aam sub mov pusha jg and insb lock push pop pop ds pop or fcoml clc (bad) (bad) (bad) std inc cmp (bad) mov mov pop cltd mov add pop jne insb sahf lds (bad) (bad) (bad) out mov out push repz lock xchg lcall mov out pop sbb fnstsw cmpsl aas sahf orb imul and lods adc lcall pop jg xor inc popf and inc cltd mov (bad) call fwait stc pop imul call cmp dec es or (bad) ljmp pop out sub or inc add push loopne adc mov mov clc and and mov or (bad) (bad) call fsub inc dec movsl lea shll aaa shll hlt push sub outsl loop (bad) xlat dec decl fs mov negl cwtl insl (bad) dec (bad) (bad) (bad) lcall scas lods or sbb sbb aad mov out test (bad) jmp push sahf pusha fwait push adc iret sbb sub add and inc mov pop fistl (bad) jg mov in fist sahf sub fstl imul inc sahf or push xor ror jo ja aaa xchg adc bound sbb lcall xchg test jbe and (bad) (bad) ljmp fcmovnu xor das cs insl lods jmp fstl push ljmp (bad) pushl je bound imul in test outsb fadds jge cmp loop test stc mov or lcall gs call mov (bad) jg pop sbb in outsl push mov inc add pop pushf add adc (bad) (bad) incl push add inc and cltd sbb or inc mov sbbl xchg repnz (bad) (bad) cld cmpl jmp ljmp loopne add mov (bad) (bad) (bad) lcall test add sbb mov daa stos call popa xor (bad) pop clc xchg or xor push fmulp and movsl adc inc cld lcall add test test int scas mov or push cmp aaa leave xor leave aam or mov or es (bad) (bad) (bad) push test cld fcomps les inc sub dec cs fdivr (bad) ljmp out pop pop lcall push mov pop out cmpsb add fcomp and push xchg scas outsb lcall add pop push gs mov roll push test (bad) (bad) call je dec mov cs out negl add repz notl dec std or pushl mov or xchg mov jno pop hlt loope (bad) pop in pop stc cld inc sub (bad) (bad) (bad) (bad) cmp xor scas jg insb and lret das or lret jb imul mov push (bad) testl and cmp loope sbb gs stos jecxz stc mov fdivrp test push xor mov ds test dec cmpl fcomip add push (bad) divb rcrb fdiv ja jg inc insl sbb sub lcall xor push mov rcll movsb (bad) (bad) (bad) decl push es mov je jb (bad) imul int3 pop bound addr16 xor sti xchg sti jb ds xchg fs mov xchg cltd mov lcall fldenv jmp lock (bad) (bad) (bad) pushl sub das ja and xchg rorb scas inc movsb or add in je lock out jne stos repnz (bad) (bad) ljmp dec rorl jne push cwtl std add pop shlb shrb cmpl push out sahf pop in fs mov std into sub inc call repz (bad) dec dec movsl jnp push aam (bad) fcomip inc js into xor pop sub sub loop les jae xchg (bad) (bad) (bad) incl jecxz pusha and lods (bad) fwait cld pop and xchg in stos lds sub cmp test mov aas jg,pt (bad) ljmp xor xchg lret das or fisttpl sahf cmp adc mov lock and aad mov lds (bad) jmp pop repnz jno cmpsl mov sbbl (bad) mov cmc jmp jp pop mov int3 scas mov std ljmp stos or push insb shrb pop mov cmp pop clc add jno movl (bad) pop pop loop hlt outsb inc mov stos push add add scas std and push fist dec repnz push jno (bad) in notb mov (bad) (bad) pushl sbb jge add push jmp or sub test xlat add (bad) xor adc (bad) (bad) (bad) ljmp mov mov insb pop loop shr mov fnstsw mov push ja adc mov cmc mov mov sub push ds inc movsb (bad) (bad) (bad) push xor aas cmp mov adc dec adc adc xlat sub in imul ja imul mov inc inc jmp push lahf mov mov out pop xor incl shrl pop push lds (bad) jmp jmp insb out or mov ljmp repz decl pop movsb test lret pop lds pop es inc jb test mov mov mov cwtl sti sbb test (bad) (bad) fidivr add fmul out sbb decl jns (bad) mov dec mov scas lret aas mov or inc fsubrl call ds (bad) pop mov shrb and sbb lahf lret inc sbb hlt dec pop dec mov int3 das bound dec insl sub test out adc (bad) cld and fdivrs xlat sbb cmp pop icebp ja sub (bad) nop aam loop (bad) ficomp xor out test notb fimull cmc (bad) (bad) (bad) jmp add mov jle jmp xchg outsb sub (bad) dec lahf lahf call loopne jle mov adc (bad) (bad) decl ds jbe pop dec ja (bad) in push test xor inc xchg pop mov (bad) decl sbb arpl pop out clc negl sarl arpl push fiadd or fcmovnb call jae push add push inc imul ljmp pop push imul mov sbb hlt mov xor pop into bound jp hlt out pop sub lcall jge lds fxch prefetcht1 pushf xchg adc inc (bad) imul pop sub in call mov std mov bnd mov ret mov mov mov icebp push cli lds cmovae pop fildl (bad) (bad) (bad) incl (bad) jg xor cltd aaa rcrb cmpsl test jle out pop jo sbb adc (bad) (bad) (bad) ljmp scas pop aam lret mov test mov outsb ja xor stc jno xchg xchg xor (bad) (bad) dec dec add das mov mov push mov iret scas negb (bad) loop outsb (bad) (bad) (bad) lcall pop add rep stos scas dec insb pop std js jge inc jecxz xor mov xor (bad) jo fildll push push (bad) pushl iret mov and push fbld pop test add fcmovnbe fcmovnbe punpcklwd das xchg cmp orb adc std pop cld sub call lcall fwait js ds jle (bad) (bad) (bad) decl mov cmc icebp push sub repz mov inc xchg mov scas (bad) jo je inc cld (bad) shr scas fidivr decl mov mov mov in dec movsl outsl fwait (bad) (bad) (bad) ljmp jnp mov or cs (bad) xor adc cmp push push stos xchg mov dec aas jg (bad) decl adc sahf xlat push sub mov pop dec repz cmpsl cmp xchg xchg icebp scas mov (bad) pop outsb push popa insl pop inc xchg out mov cmp insl inc clc pushl or gs (bad) (bad) jg daa call sbbl push jne andl and and (bad) (bad) push insl cmpsb pushf int3 aaa jae mov cmp jae (bad) mov mov stos inc out add test jmp jns mov adc mov (bad) call lock mov xchg popa imul enter and bound mov dec mov (bad) fbld xchg in add sahf ds and pop mov inc add (bad) incl rorb mov mov pop mov cmpsb add (bad) mov rorb out hlt imul xor fiadd lock xchg (bad) (bad) (bad) decl fnstsw cmpsl or xor pushf push lahf push rclb mov push xchg sbb mov repz pop mov pop push push repz xchg mov or out ds pop push push in pop mov (bad) jg dec mov fcomps xlat and pop les jge xor jecxz jmp incl in jmp lock int3 test fcompl ds and mov mov cmc xchg mov stos loope aam and ficom fisubr jo pushl nop mov pusha out push js pop mov jecxz jno inc ror inc pop lcall push push xchg (bad) mov xchg stos cld xchg xchg ljmp andl and sub inc mov test sbb lret out (bad) (bad) call mov imul (bad) sub cmp add scas (bad) aad std (bad) (bad) (bad) mov je mov sub arpl jg in cmpl lcall xchg sbb xor mov enter std adc cwtl push pushf sub loopne xor insl repnz mov jbe xchg bound cmc or adc lock ret jge icebp mov (bad) nop xchg ds std pop sbb sar (bad) lcall inc test addr16 cmp subl imul (bad) je fcomip (bad) dec in (bad) dec mov bound adc lea hlt xchg sub push jno in push push cmp pusha aaa test sub cmc ljmp rcl jge loope cld xchg mov (bad) fidivr loop bound add xchg xchg fcomp outsl inc mov idivb (bad) decl pop arpl push fs into lods loopne mov arpl cmp mov imulb jp (bad) (bad) pushl sbb cld mov (bad) and fdiv lret (bad) test lea (bad) (bad) call mov imul cmp push add (bad) (bad) jg ds or inc ror repz adc sub por ficoml lock mov out sub jle adc call pushf sbb je xor and int3 mov mov cmpsl (bad) mov mov imul dec fisubl aam imul addr16 mov xchg push xor (bad) (bad) pushl and lcall test lods or (bad) push (bad) (bad) mov lcall (bad) push mov mov mov fwait jnp outsl ret and je (bad) mov xor add dec add xchg ficoml push xlat out movntq out (bad) call (bad) and (bad) popf das outsl js test fnstenv mov cmp out sbb das add inc pusha notb scas adc sbb lods mulps add and lods in les jns,pt xchg or test sub mov (bad) (bad) (bad) decl pop adc mov ljmp rolb (bad) fcom movsl movswl (bad) ljmp cli popf sahf sub scas jae out dec paddsw pushf dec mov and ret clc add fmulp mov jnp cld addl mov xchg ljmp sub (bad) (bad) jg cmpsl mov or sbb jb jno add incb dec jbe add mov (bad) fwait test xchg imul scas into clc (bad) (bad) (bad) (bad) fist ljmp (bad) xor xor inc adc sub enter jl inc ret or sbb xlat mov jmp mov loopne mov ds movsb pop iret (bad) jg lcall addr16 test pop aad (bad) lock dec jle mov (bad) jg (bad) mov ds fimull movsb mov sub ret xor aas xchg (bad) (bad) (bad) incl mov cmpl (bad) ficoml or add pop and xchg jge mov loop das enter xchg adc add cmp mov sub mov push dec shrb xor adc (bad) mov push (bad) ljmp mov adc pop pslld loop cmpsb add jmp jmp cld leave (bad) (bad) and test js orl mov hlt mov aas rcrl sbb sbbb cmpl fcomip or scas mov sti mov out nop pop cs test scas int3 (bad) pushl mov sti int3 dec mov (bad) jb mov add xchg cmc (bad) cmp test aaa push subl and imul (bad) jmp cmp xchg mov notl cs pop push (bad) incl mov rol sahf jge and movsl mov jg (bad) call xchg icebp ret pop cld iret mov pop andl xor (bad) mov jnp insb push stos call dec and xchg jne pushf dec sbb aaa jbe cld decl imul pop ljmp mov fs xlat xor (bad) (bad) call jnp call fldt imulb push xchg cmc ds push inc push push mov xchg subb fs fwait data16 dec dec cmp jb mov lret (bad) lcall ds lock aad mov push push popa gs pushl xchg mov sbb and dec add in stos out xchg lea inc fldenv lock dec inc adc xchg inc repnz div jg int mulb nop fwait mov inc push and iret and (bad) jg lods (bad) xor xchg nop outsl mov sub repz mov mov lcall mov mov sbb cs push fwait sahf rolb dec out mov lock xor js (bad) shrl mov sbb jp (bad) (bad) decl in pop mov sub not xor jnp add pop dec xchg jle cltd xor cmpsb (bad) (bad) jmp sahf mov cmpsb xchg ret fcmovu jle pop les add std (bad) call jg dec push cmp adc adc daa sub clc mov dec ja or push outsb decl clc out mov xor add jb inc sub (bad) (bad) call movsb pop adc cmp lds mov pop sub push add push lahf and rcl (bad) pushl or and orl cli or sbb iret dec mov fwait inc popf pop push jmp ljmp (bad) inc pop push (bad) les pop cltd jae xchg mov imul das clc (bad) (bad) ds lea fistpl sar test call and lods jb mov mov imul mov mov pop fs in test (bad) decl xor insl (bad) dec cmp (bad) adc fwait pushf cltd push idivb loop dec mov aad or (bad) js ret leave mov scas xchg stc outsl popa cld xchg add inc add pop (bad) xchg dec cmp pop xlat push xlat in sbb lcall jo jle,pt sbb and dec add call cmp imul imul adc daa xchg adc (bad) (bad) mov dec lds pop divb frstor or icebp out andl and cmp pop pop dec dec pushl mov mov jne (bad) (bad) lcall int3 cmp cmp xchg xor mov (bad) mov jmp mov popf ljmp fisttp inc out gs dec rol lret jb mov jge (bad) (bad) (bad) lcall xchg mov je ja xlat jmp push addr16 mov jecxz lret insb dec push (bad) (bad) (bad) ljmp cwtl adc sbb jg adc dec adc lahf lret nop sbb jb aam aam dec lret insb jo std cmp and (bad) pushl ds cmc std jmp xor cltd int3 jecxz dec sti cmpsb roll (bad) (bad) (bad) decl (bad) xor inc lea loope loope adc push pop push je lods cmp fs jg jmp aaa inc xchg es ja (bad) aam push inc cmp rol inc push adc inc fwait or mov push std push pop mov (bad) (bad) (bad) ljmp aad sub clc push mov leave xlat stos data16 lcall pop hlt call cmpsb loope pop adc dec movsl mov (bad) xor sub sbb das mov sti lcall or adc sub js inc test add cmc lods js mov cmpsb mov or sbb loop (bad) (bad) (bad) jns sub sbb xor push mov push adc in inc sub lret inc inc lods sti lds (bad) ljmp sub fnstenv mov cmpsl add mov stos push rol inc mov outsl cli pushl xor xlat mov in adc fs repnz je lea mov dec sbb or incl fidiv inc push ret jb jbe (bad) xor mov (bad) lcall pop and scas or lea out cmpsl jecxz mov push add je push ljmp shl fdivs lods jnp adc icebp popf adc (bad) jmp sub jg mov cmp in xor mov (bad) mov pushl pop dec xchg cmp ljmp call sbb lcall int3 cmp xchg notl in pop xor notl out aas sar test test fwait sub push (bad) (bad) (bad) (bad) ljmp dec mov aam jnp nop adc mov pop add fnstsw (bad) out xor std (bad) (bad) (bad) (bad) mov mov rorb jmp fidivr fs cld dec subb adcl in jl es xchg sarl pop outsl xchg test (bad) scas xchg jmp push and jecxz decl (bad) incl repz lods inc lret mov int3 es stos in sarw lcall cmp cmp mov mov sub popf call inc fildll fsubl sub xchg js mov cmpl inc xchg pop sarb jecxz dec test mov sbb clc (bad) (bad) jp (bad) (bad) (bad) es jl dec pusha cld scas jb gs sbbl mov inc mov es mov mov outsb stos mov fdivr (bad) (bad) call and test xor pushl pop push pop in mov rcrl (bad) (bad) jmp mov and jno mov loop inc pusha clc sub cli (bad) (bad) (bad) push inc (bad) push addb push mov fisubrl in cltd push daa mov xor int3 dec mov lcall add cltd cmp mov jmp mov and rclb sar xchg add mov vcvttsd2si mov clc jmp inc inc es testl sbb into push loopne mov jmp ds adc dec cli mov out adc xor daa sub cmp pop add std cmp xchg jg in stc std sub pop icebp (bad) (bad) cmp jbe clc push mov outsl lcall (bad) data16 lock (bad) (bad) ljmp cmp jge aam scas fldt push inc lock cmp fidivrl call imul lods add push (bad) outsb rcpps inc (bad) (bad) (bad) mov and jae imul fistp push cwtl in push popa mov (bad) jge dec inc (bad) and mov pop xchg adc jl jmp inc test ret es jns or (bad) (bad) incl fistpl pop cmp cmpsb adc mov cmp loop in fmull mov ss das (bad) (bad) dec xchg call rcrb test (bad) (bad) (bad) mov lds mov sub sahf inc push inc xchg clc (bad) push add rcl add (bad) pushl mov mov xor popa pop popf scas mov aaa xor fistl cmp daa (bad) pop pop in lahf ljmp mov lahf fsubrp xlat test sbb mov sti (bad) (bad) pushl jg loopne adc xchg adc loopne sub js popf pop iret and dec dec mov pop pop push aaa das scas popa data16 cs mov cmpl std aam mov into cmpsl or jp jl int3 or (bad) (bad) jmp test sub or add stc ds push sti cmp stos (bad) fist leave cmp sub mov cwtl aad xlat addr16 lods adc (bad) (bad) jmp fcomi add bound push push mov and fdivrl addr16 (bad) (bad) (bad) decl xor pushf xchg (bad) xor in pop inc (bad) (bad) mov xor (bad) ljmp xchg leave (bad) jbe in popa ror repnz clc sbb pop sar call test repnz xor dec push in or or sbb cltd push fs pop (bad) pushl xchg lret dec jb (bad) mov xchg jo push pushf mov icebp js mov sub out stos cs notb rolb nop mov (bad) decl xchg gs push inc (bad) pop arpl daa push leave push add pop xchg (bad) (bad) (bad) fnstsw add sbb ret fnstenv sbb stos xor fwait jnp loopne roll bound cli call push fdiv orb inc ds (bad) (bad) (bad) cmp push pushf cltd xchg insl imul cltd negl cmpsb fild pop aad add sub bound pushf enter shll (bad) push shll push pusha sbb fildl int3 loopne xchg cmpl pushfw ja jno (bad) (bad) call jp imul jnp out mov mov mov dec jge into popa mov adcb jmp add inc stc (bad) (bad) (bad) incl jo movsl int3 loop and mov lret lock jne das xchg dec out jnp ljmp pop es xor fnstcw clc cmpsb mov bound sti sbb jge rolb (bad) jmp xchg mov push cmp jg enter dec jge or jo jnp mov or ljmp xchg cmpsb das subl pop cmp repz jbe mov pop lods xor add test (bad) (bad) pushl mov mov pushf jo push pop mov sub xor (bad) fbld (bad) jecxz xchg (bad) cmp call lds cwtl or imul xor pushl (bad) jo sub iret mov jae incl sti adc jns sarb sub insb mov and jge or call dec aam push shrb mov push hlt (bad) jg (bad) push scas jp in push mov adc fs (bad) xchg sbb jmp cwtl mov shll mov cmp inc pushf sub dec xchg (bad) (bad) (bad) (bad) mov out nop std inc add out sbb mov sub sub xor pop orb jmp adc xchg and loop (bad) (bad) fistp mov (bad) leave stos aaa fistpll or pusha xor les mov (bad) pushl xchg incl rcrb mov test dec rolb fs lods mov push push push sub fs add je xlat nop sub sar (bad) jmp jmp (bad) or xor pop or test in aam inc dec ds cmp (bad) incl enter mov or mov xchg sbb xor adc jle mov cmc out (bad) mov (bad) movsl leave sub jecxz mov cmp xchg push sub dec ljmp negl add dec ret out int3 bound imul (bad) (bad) (bad) lcall pop cli and lds dec push and bound and test dec push (bad) decl push mov and je mov add call ljmp aad mov mov jle dec pop push aaa push (bad) inc xor xor hlt sahf sub (bad) call lcall xchg ja lods mov movsl out cmp xchg out dec lahf add js push loope (bad) pushl xor imul nop dec fimul les das mov mov dec in sub repz jb fdiv fcoms pop mov out cmp cmp cmp int hlt (bad) (bad) (bad) ljmp pop jns add cmc push and mov mov das rclb (bad) sbb lock sbb and ljmp cmpsb push out or movsb (bad) stc cltd adc adc adc xor push out cs imul sub inc pop mov decl addr16 mov popa mov or sbb mov movsb jno fnop (bad) ljmp iret daa xor xor jmp hlt (bad) (bad) decl sarb inc lods jno arpl jecxz (bad) sti decb xlat sbb test xor (bad) jg aam push cmp movsw xchg repz out dec inc dec cld pusha movsl mov (bad) (bad) (bad) call or mov pop shl xlat cmpsl pop (bad) and sub mov (bad) (bad) (bad) incl (bad) dec add mov pop data16 (bad) sbb (bad) out xchg pusha sub out (bad) (bad) (bad) decl jns pop dec fxch or (bad) roll or mov pop divl push mov lret (bad) (bad) (bad) push mov adc popa jb jg bound in sub cld mov test mov sub cmp cmp testl sub fwait pop cmc lcall outsb and sub add jle jle fldt mov mov push sub (bad) (bad) incl into or imul add mov idiv mov add iret pusha add scas pop or inc push push (bad) (bad) lcall fidiv loopne outsb fldenv pushf pop std and inc cmp pop adc das cld fildll jmp dec mov or movsb rorb pushl and in (bad) jae sbb sbb push scas mov push sub pushf sahf xchg jo outsb jp (bad) (bad) ljmp das ja in loope insb out mov or add fsubrp jle incl push leave loop cli cmp loop jmp dec aaa add xor call xor int3 mov jne (bad) sbb test inc sub cli mov fnstenv int rolb (bad) fcomip scas inc push add cld call jb fmull jg (bad) pushl mov and inc dec in push pusha movsb (bad) ret outsl clc (bad) (bad) (bad) decl out loopne insb test icebp cs addr16 xchg hlt je leave push ja xor cmp (bad) sub and daa push cmp cmp (bad) (bad) jmp mov sbb push sub xor mov imul mov incl rcrl adc xchg fisub sbb xor imul in (bad) (bad) (bad) (bad) clc mov cmc pop pop gs pushf and mov xchg and jo add (bad) (bad) inc xchg cs or into mov pop xor cmpsb mov fcmovbe les mov cmp inc jl dec (bad) lods fwait xlat ss push pop mov (bad) nop add inc fsubrs rolb (bad) (bad) decl jb gs andl push pop (bad) cmc es jge xor jns,pt mov jg jge faddl pop mov sahf popa call and dec aaa ret and inc jae and fdivr (bad) (bad) decl mov inc mov out mov rorl xchg cmp (bad) (bad) (bad) jl and adc scas sub std sub add sub pop jne (bad) (bad) ljmp stos or cli mov nop je das fisubl gs (bad) (bad) push addr16 xchg (bad) mov in jmp mov sub xor stc cwtl push aaa cmc mov sar inc lret out jns and test pop inc jnp cli lock call push pushf aam cmp in bound jle out xchg or out push sbb (bad) fild clc dec lret leave mov mov add adc dec lock (bad) jg push adc xchg mov and mov in in daa hlt cmc (bad) (bad) (bad) mov loopne gs sub pop dec sarb cmp or in test out cli jg mov lret dec and ret test xchg dec jle inc (bad) lcall stos fwait add popa cs imul insb pushf dec mov cmp incl xchg repnz sbb dec ror add ds (bad) (bad) (bad) decl das sbb cwtl out jnp mov aas out jno (bad) jno add fistpl xchg dec jl sar add sbb cmpsb lods enter shl cli outsl js outsl clc (bad) lcall jge jmp out ret pop mov jecxz mov adc mov (bad) in dec cli decl xor leave cmpsl mov out clc mov popf cmpsl ss push mov pop lcall ret push je add and mov shl notl mov and (bad) (bad) decl das rcrl loopne mov add js pop xacquire loopne ds (bad) mov rep dec iret out and mov jo jecxz lahf aam ret (bad) (bad) (bad) dec adc dec adc mov (bad) icebp jbe je mov or negb dec gs and imul test icebp adc sbb cld mov jl mov cmp xchg mov cld roll jg hlt sbb test mov mov sarb mov push (bad) or out xor push add push cmp inc jo lahf je clc push push aad (bad) and call bound ficom (bad) (bad) fisubr outsl push xchg cltd andl icebp mov jbe lods in scas (bad) (bad) inc sbb imul mov mov cmpsl in xchg pop or adc (bad) (bad) call rorl cmp dec lods rorl inc sbb shlb push add xor rolb fwait cmp mov sbb leave push inc pop icebp mov rclb test clc ror (bad) std repnz sub (bad) pop imul enter into loop and (bad) xchg (bad) (bad) (bad) incl lcall das add leave loop hlt add mov mov lcall leave in jae inc inc outsl das jo divb flds pop mov xor xor mov call std rcrb (bad) jge sahf mov (bad) mov mov jo fs mov pop or test stos mov push dec pushf inc pop sarl adc clc in cli cmc fiadd dec scas (bad) (bad) (bad) call xor stos mov mov andl (bad) mov add fdivrs insb inc adc lea lock sub push adc cmp lcall add push mov stos pop push in add or mov dec outsb aaa adc adc cmp (bad) (bad) decl or into lods push rcrb or push sbb test jmp (bad) lcall and push fs or repnz cli dec test imul push pop std (bad) jmp xchg and and shll mov lret push insl das xor add repz cmpsb (bad) (bad) (bad) pushl ss es lcall out loopne ljmp lds pop cld jno cs pushw (bad) in cmp subl decl add (bad) dec fdivs add pushf jno fidivl fidiv (bad) mov cld out dec mov push sahf inc or cmp dec mov jle (bad) (bad) (bad) decl adc dec scas lock xchg push inc mov dec (bad) clc mov mov pushf and addr16 (bad) (bad) (bad) cli mov pop inc xor cmp lea inc add jl push mov (bad) push ret icebp ret mov ss or mov xchg test dec repnz lock sar dec ds push inc movsb sahf (bad) (bad) (bad) jmp pop aas adc movsb xchg (bad) and lods ss cmpsb mov or push push popf push fcos (bad) (bad) push movsb ret je sar jecxz rcrb sti pop std idiv aad (bad) jnp pushf sub (bad) ljmp clc inc icebp sub leave mov mov sar icebp cmp fldt (bad) (bad) ljmp xchg or js and dec rcll loope int lods test or sbb out (bad) mov stc push fmul mov and (bad) call inc out sbb xchg daa cmp xchg (bad) jbe pop aas and push outsl ljmp xor inc arpl xlat mov fidivr movsb (bad) (bad) (bad) (bad) cmp mov sbbl (bad) jbe pop mov (bad) das dec mov cmp (bad) (bad) (bad) pushl cwtl sbb nop mov push js sub push xor xor (bad) (bad) lcall mov xor and sbbl inc lea pop loopne pop std mov stos sub cmp cmpsb inc movsb inc add ljmp xor inc inc adc xchg arpl fmul xor mov (bad) (bad) call cmp push in fwait scas int xor adc push addps cli cmp mov xlat rcll (bad) incl mov outsb lcall icebp sub xchg xor imul jbe and (bad) (bad) (bad) dec data16 jb repnz cltd lods mov sbb cmp outsb or jnp arpl jno lods aam loope (bad) fcomip adc xor data16 lods in add and je pop xchg hlt in (bad) (bad) (bad) incl ficoml jns mov stos aad adc mov xchg or add (bad) cmp mov sbb jns bound mov xlat das int3 jbe jbe mov or sar std shrl mov leave push push lods mov (bad) (bad) (bad) inc (bad) jnp add ja xor out (bad) inc cmp inc inc push mov (bad) mov push sar xor std lods adc clc xchg sbb sti (bad) incl and mov pop rcrb aad imul enter (bad) jg subl out or and or movsl (bad) cmp (bad) call add fs sub inc leave sbb iret adc mov push cld (bad) pushl or lret cli add lds fisubr fs ljmp int into pushf push sub addr16 (bad) (bad) lcall sub adc mov xchg xor imul mov arpl nop xchg (bad) cli aaa cld (bad) cmp or dec inc bound in sub mov xchg mov (bad) out fdivrl inc and mov cmp lods add loopne (bad) (bad) (bad) (bad) in and mov (bad) cmp stos jp out cmp subl lock lcall push fimul adc or xchg or (bad) jg lcall (bad) xor test les decl movsb (bad) data16 cmpsl mov ljmp jecxz jbe,pn iret mull setge sub and push push mov sbb (bad) fistp fildl popa mov dec add test cmp (bad) fbld mov sbb rcr jp pop mov cmpsb mov mov repz (bad) (bad) (bad) lcall inc add push xor ret int3 in fcom cmp jle icebp cmp jg (bad) (bad) (bad) pushl mov sbb mov bound mov icebp (bad) pop loop,pt mov (bad) fwait jle dec inc sub (bad) (bad) mov aad mov sub sbb cld (bad) (bad) (bad) pushl call les mov inc comiss pop lret test mov ret mov sbb loopne xor ja insl inc fnstcw cmp loop (bad) jmp sti inc mov adc sarl sbb adc aaa mov (bad) incl jne jp sbb push xchg ss fwait test (bad) (bad) mov clc cli jno push imul fimul sub and (bad) lcall dec (bad) adc jecxz (bad) repnz lahf jno fbstp sahf ficompl mov jle (bad) sti mov mov addr16 js cmpsl popa int in and adc jmp popa mov inc sbbl ficom (bad) std and mov and dec (bad) mulb pop in scas mov pushl imul mov cld mov hlt (bad) (bad) (bad) ljmp xchg (bad) fidiv xlat push and add fisttpll jnp mov ret adc sbb lods sub ret jno (bad) (bad) mov fwait inc std xor adc lea dec mov push xor mov outsl jmp incl and pop mov xorb push repz push scas dec lock jle jnp or imul or (bad) (bad) lcall xchg out sub pop xor imul rcll push dec xor (bad) mov stc sub sarl and (bad) (bad) lcall push sub add push test (bad) incl push cmp adc and or data16 scas ds (bad) (bad) pushl js stos sbb xor jnp popf cmp xchg mov push lcall loop sub jg sub xor cli and cmp int (bad) (bad) (bad) mov mov scas inc or mov and test xchg icebp or push push pushl push mov mov mov (bad) sti adc mov pop hlt mov into insb arpl roll sti sbb es mov idiv jmp adc (bad) (bad) (bad) jp adc push (bad) pop rcrb cmp je add rclb cwtl (bad) lcall mov or mov dec mov sar in test mov outsb push cli cmp jge and and ljmp inc mov loopne cs mov (bad) (bad) mov inc push mov mov in aam std loope movsl inc push add (bad) (bad) call (bad) icebp mov repz xchg mov xchg dec mov fisubl (bad) aas std shrl sbb jg jno cmp bound jge sub (bad) ljmp rcrb lret (bad) xor inc xlat jns orl inc sbb dec ret test mov insb mov loopne sub or (bad) lcall and in push mov and push into into pop mov sbb popf inc push push fcompl clc jmp fidiv dec fiaddl in sti (bad) dec andb (bad) lcall mov push addr16 repz jno jp rcl scas sbb push (bad) (bad) mov dec pop outsb jb scas adc cmp add sbb outsl or decl mov mov scas cld sbb inc dec mov (bad) (bad) push adc lds stos cs xor scas andl pop loope sbb andb pushl lods cmp fwait pop pop inc stos ja ds scas das loop sar (bad) jg mov out or jbe sub jns lret inc (bad) pop sub mov push and (bad) jg push hlt shll sbb add jge clc (bad) (bad) (bad) cmp jno mov (bad) enter cltd pop cmp addr16 bound sarb xchg sub (bad) (bad) incl xor int3 cmp mov fnstsw jl inc push loope iret mov pop or incl cwtl mov mov mov (bad) js ret jg hlt add (bad) ds fild bound imul (bad) (bad) pushl push ret test scas dec push ret cmc sbb es mov dec mov xor (bad) decl imul subb fwait outsb insb (bad) mov (bad) call xor pushf mov loopne and pushf aad pop mov cld add rorl shrb (bad) (bad) (bad) fdivrp add nop and xor xchg pop loope repz in fdivl jo sbbb rclb pop js rcrl add xor (bad) decl jbe mov mov addr16 add iret mov inc call (bad) in sbb mov add es daa sub mov pusha add ljmp les sub add and sbb (bad) jg or sub sub dec inc mov inc add push rclb (bad) mov loopne push mov adc jb xchg lods in adc push dec jae (bad) out adc cltd int3 out dec or jg inc (bad) lds fmuls (bad) (bad) ljmp out sub add add dec imul adc fisttpl aaa xor jne scas cli lcall test push stos cmp xchg xor cmp in jmp stc enter adc ret test pop cli out hlt dec in loope cmc incl es jae out inc nop in mov sub call aad and sarb (bad) jmp or scas fldt mov xlat rol mov cltd jnp pop adc rolb mov push and test xchg inc or mov icebp push (bad) jae cld (bad) call ja xchg (bad) pop popf dec or mov pop xor or mov jmp mov fstp (bad) lret dec pop (bad) (bad) (bad) (bad) mov insl in in pushfw sbb test sub xor xchg push mov insb pop push dec ss (bad) (bad) pushl xor in jl adc add jl adc movsl mov dec or pop jne into repnz and mov outsb mov jne (bad) (bad) (bad) std mov repz mov and jnp mov or pop mov (bad) (bad) pushl push fcmovnbe inc push rcll or add lcall pop pushl adc (bad) xchg pushf push and mov call sbbl ds imul ds je les clc or or inc fbld mov jo mov (bad) mov mov dec xchg pop sub inc (bad) leave repz adc jne add pop cwtl fcomip (bad) jmp test dec push cmpsl mulb mov stc mov cli mov ret dec call lds in jnp or add mov push (bad) xchg mov xchg jmp inc mov cmpsl (bad) (bad) (bad) (bad) dec imul cld mov add pop loope incb xor (bad) pop pushf push ja icebp jns (bad) (bad) (bad) lcall orl push mov mov mov mov sar (bad) (bad) cmp jp lret inc jae fmuls addr16 add shr (bad) (bad) jg adc out inc inc inc mov movsb mov mov decl sarl xchg std jmp xchg mov sar sar std gs lods sub mov cmp fcomps push sub fs out cltd adc (bad) js std sbb cmp adc in cmpsb das and int3 and add leave cmpsl xor sub call xchg and aaa (bad) lret inc pop lret push dec push push push mov (bad) mov xor mov dec xchg (bad) jp and dec push adc push stos mov push mov inc je mov jb or mov notb cld adc ja das push mov jo insl push adc rcr enter (bad) (bad) (bad) decl lods int3 lods test and pop (bad) adc mov and cwtl (bad) add jl dec pop lock ljmp cli and ret in sti xor or and in loope and data16 (bad) (bad) (bad) (bad) frstor mov push in add mov pusha sbb or pusha rcr inc insl adc pop loopne mov sub pop ds push mov (bad) jg call lods mov cli xor mov dec push lods pop push ret sti lret das mov sub (bad) jmp mov imul adc ja ret mov lock fimul push cwtl stos (bad) imull ljmp mov ds fsubr (bad) nop sarb out iret cmp out test fild ds adc push jl pop movsb outsb bound imul xor (bad) (bad) (bad) decl and mov sbb mov scas stos divl inc sub add pop lcall pop insb insl loope std cmp add stos mov (bad) (bad) lea pop stos test sbb lret jns or push std fstp arpl pop adc outsl movsl push (bad) (bad) (bad) call sbb fcoml adc fisttpll imul push ret xchg (bad) (bad) out cli push cli scas and imul cmp mov pop xchg (bad) (bad) (bad) push fs push jg or fwait mov mov loopne mov fdivrs push (bad) (bad) (bad) dec mov mov jmp stc push mov in mov lods test mov fldenv or daa jae pushf inc or jle mov xor fsubrl lcall jmp push push mov andb add (bad) xor sbb inc and (bad) jg sbb cmpsb mov (bad) testl (bad) (bad) incl or mov add fwait push and jno dec sbb in adc (bad) (bad) (bad) lcall lret fisttpl (bad) push aad mov jmp loopne mov dec mov (bad) (bad) pushl test mov outsb or or pop add mov mov inc and insl lea imulb (bad) ljmp cmpsb cmc dec pop add loope movsb dec fisttpl push loopne pop js cmpsl or add (bad) fbld xchg adc js cs push (bad) cmc jmp fs dec ficomp insb cltd add decl push xchg add mov xchg mov mov xor imul mov adc loope bound out fwait out mov or (bad) (bad) (bad) fisubrl lods sar cs sbb add addl fs dec (bad) (bad) (bad) fcomip xorl (bad) xchg int3 cs loope sahf das sub xchg popa (bad) jb call cld call sub and into mov inc dec or jns (bad) (bad) (bad) jmp mov cwtl xor es jns fadd sub call (bad) (bad) jmp mov mov xor movsb lret xchg lcall mov xor mov cmp fmuls pop jo and add push hlt cmp fimul (bad) jp fistpll mov dec mov and or (bad) scas cmp ror and (bad) decl xor pushw aaa (bad) push out inc xchg mov adcl pop sbb (bad) (bad) fcomip mov xchg scas clc decb mov fnstcw mov mov (bad) movsl inc fnop int pop push push pop popf (bad) (bad) out mov fs xlat sub movsb imul mov (bad) (bad) (bad) lcall stos test push scas scas icebp or cmp adc xor movsl stc push in pusha and (bad) (bad) jmp xchg jp ljmp lret ljmp jne mov (bad) std decl pop and (bad) test (bad) mov mov dec (bad) (bad) (bad) pushl rcll mov movd sahf lea fcoml loope xlat jno or fs pop cmp in adc bound loop orb mov fs (bad) (bad) (bad) fdivrl daa xchg mov cmp arpl inc loop sbb cltd fdivrs arpl push (bad) jle pop push sub imul push rcrb pop or fiadd (bad) (bad) decl nop gs repz push int loopne xlat add push (bad) out jnp xlat iret jno (bad) (bad) decl outsb mov ja push test je das adc push inc or mov decl (bad) pop movsb push out (bad) enter ss (bad) dec inc jl addr16 push sub mov (bad) (bad) ljmp ret or and push lds push push (bad) (bad) (bad) incl imul push mov out mov dec mov das add jl xor bound inc mov movsb add xor adc push (bad) imul (bad) fidiv adc xchg inc std incl mov inc (bad) sahf (bad) decl jo out dec test fs jle add sbb (bad) lret rcll (bad) idivb (bad) pop mov hlt pushf movsl ds mov push cmc adcb fs subb decl mov mov mov pushf repz adcb call dec mov push scas xchg lea jno pop int jl and subb scas add test add mov jnp (bad) (bad) push into lds pop lret lock sbb jp pop dec out dec idivb or (bad) (bad) (bad) (bad) mov push add ljmp bound repz sub insl ja fistl jg cli dec ljmp sub jbe in js sub ret (bad) es ds jmp (bad) (bad) (bad) pushl out fstpl in das divb mov in xchg dec add movsb in ss subl inc out xor insl repnz call add shr inc (bad) into push mov jmp jno push sbb popa repnz iret mov insb aad xchg add rorl cli bound (bad) (bad) incl mov orl std int mov in jmp mov cs xor inc (bad) (bad) fcomip incl xchg and inc pop loope dec shrb adc sub mov jb mov pushaw ret (bad) (bad) pushl ds cmp rcll or inc pop mov not mov mov xor mov lock jmp insl xchg mov outsb inc in rorl (bad) xchg ljmp clc (bad) mov cli shr mov xchg push xor mov fs (bad) (bad) (bad) (bad) fcoml mov adc mov test je mov adc arpl outsb or dec adc pushl add cmpsb rorl outsl fisubl push xchg cwtl inc arpl push out ljmp push mov sbb lret xchg pusha jl fsubl add idiv (bad) fcomip lret pop scas adc insb scas movsl mov cs xchg or jbe xchg (bad) (bad) (bad) dec lea pop loope and out sub ds dec sbb xchg in lret inc jge (bad) (bad) (bad) decl test adc or clc iret in mov stc adc xor out (bad) (bad) (bad) ljmp sbb flds push iret pop pop pop mov jle into adc (bad) (bad) (bad) aas orl mov fidivl shr xchg lock dec iret arpl lret add mov jl (bad) and insb insl xor mov in (bad) (bad) push into popa cmpsb mov dec fisub leave inc out test fistpl cmpb sbb pushl leave dec add add int3 aaa rol pop push cmp jnp or mov (bad) (bad) jmp push rcll jbe push jno jmp pop pop mov je in inc xchg push (bad) mov pushf cs sub push adc inc jge mov popa xor iret ljmp and mov lahf (bad) (bad) in dec lret dec data16 push nop mov jbe cld repz ds cmpsb lahf std ss std out jns lock pushl cmpsl dec jns ljmp shrl add fidiv mov dec (bad) into mov dec jl ret mov repnz dec jg into out std dec cs add std movsb dec fwait jno,pt (bad) jg (bad) mov pop mov cmp neg scas jg lods and xor push (bad) xor shr repz popa sahf inc mov push xchg jmp cltd cmp popf lds (bad) and (bad) (bad) (bad) mov loopne jo mov xchg lock push jl inc (bad) lret aam (bad) xchg movsb pop fcomip (bad) lcall push int3 je es lods jbe push stc dec scas fwait and fnop and (bad) ljmp inc aaa push mov (bad) notl mov and dec sbb pop mov cmp notl push fbld (bad) (bad) incl jecxz ljmp mov xor mov add push adc (bad) (bad) (bad) incl call pushl popa scas cmpsl enter lds dec sahf sub std jl outsb aas jo sar (bad) (bad) (bad) aas cmp decl push mov sub mov std call shll (bad) (bad) (bad) call mov inc push push jbe xor mov cmp mov and (bad) (bad) (bad) pushl cmpb je jno xchg dec inc push cld outsb add (bad) je pushf add (bad) (bad) cmp ja fsts and fcoms icebp sbb cmp pop ret ds pop (bad) cmp lds dec loope jg push cmc cwtl call imul jns test pop sar call cmpsb call fs pop sub mov adc push sub (bad) ljmp push aaa xor test mov add out dec lcall jmp je mov es or push (bad) hlt lret ficom inc ret fnsave dec daa lret add and cmp (bad) incl in in jb and inc aam and cmp jg sbb xor jge or es push mov inc xor inc push adc push (bad) repz outsb addr16 jns enter out mov inc sahf orl in scas add (bad) (bad) (bad) decl or push cwtl je mov adc fsincos add cmp jecxz jb adc pop mov sar (bad) lcall pop enter pusha rorl cwtl data16 add cmp sub pop and cmp sarl xor lret sahf mov pop push xor sub add jmp lock lea aam xor mov jnp push fbld jl sbb out rolb in and pop (bad) jbe push inc inc loop dec cltd shr mov cmp jg (bad) cmp dec adc mov push lods push pop jg (bad) adc cmp addr16 (bad) (bad) (bad) (bad) mov pop (bad) sub xor and sub sbb jo or stos (bad) jmp in sbb fdivl jae push mov jnp adc outsl sub (bad) (bad) (bad) decl mov bound pop jmp xchg cmp add or fisttpl out sahf push xchg in and or jmp jnp xchg (bad) (bad) mov stos hlt pop je insl xor sub sbb cmp jge (bad) (bad) (bad) call js fwait shrl pop andb sub sbb xchg pusha xchg incl or xor movsb test dec outsl and mov icebp mov (bad) (bad) (bad) decl test std pop push cs loopne cmp or stos pop cltd cmpsb cmc adc xchg cmc nop mov (bad) (bad) (bad) fsubrs in pop das dec inc cmp pushf sbb push sub (bad) adc sbb fbstp in cltd pop orb push shrl pushw fwait mov mov jns je je cwtl fstpl jge mov in (bad) (bad) (bad) jmp hlt mov jmp icebp inc je scas and pop xchg sub adc jmp mov add iret push jne (bad) (bad) (bad) cmp rorl sub stc ficom test push cmc ss xchg addr16 mov xchg sbb lock dec aaa inc sbb mov xor das push mov out cld push mov mov mov sub (bad) (bad) (bad) incl push xchg or cltd imul adc sub imul (bad) (bad) std leave in push sub pop inc ja scas popa inc pusha lods adc push (bad) (bad) decl call mov dec jb mov fcmovbe test jg or syscall fisttp mov stos (bad) ljmp mov xchg xchg mov das inc cmp fs clc iret mov jnp jg test jp pop aas std lock fcmovnb (bad) fidiv ja cmpsb aam and pusha sbb lcall stc or pop sbb pop fsubs hlt (bad) lcall ficompl rcrb int cwtl push dec mov dec inc sub xor xchg mov xor sti mov fnstcw pop notb loopne out out push (bad) (bad) lcall and mov (bad) pop mov inc or jno dec bound mov call test repnz and jmp pusha xlat pushf cli dec lret out sbb fwait mov (bad) ljmp jmp dec out adc ret repz jecxz sub xchg into jae mov sbb xchg (bad) (bad) (bad) cmp movsb fidivl add mov gs xor mov cmp pop call add xchg push mov mov sbb push scas lcall jmp add push add push es (bad) das clc lcall fnstcw aaa imul into push iret push shll jmp sahf sub mov (bad) (bad) ljmp je (bad) jl fisttpll sub adc dec lds fsubrl add lahf in or sbb push or (bad) lcall mov test pop (bad) xchg in mov (bad) lret xor (bad) incl int3 lret xchg daa jno movsb stos sbb fiaddl push sarl sub mov xor imul stos bound out popl dec jno je imul jle jmp add fiaddl mov push testb pop xchg fistp scas insb adc das sbb popa sub push sarl (bad) (bad) jg xor dec mov mov faddp mov mov (bad) pop clc rorb lods mov lods outsl icebp std push dec sub sub pop cmp pop shll leave popa lcall daa lahf mov cmp mov xchg and (bad) repz pop xor sar jg addl je push push cmp repnz idiv lcall sub cs mov jne ret jg pop ja adc jb popf (bad) je loopne (bad) jmp fxch inc mov ja sbb popa xchg mov push or loopne sub fnstsw iret mov (bad) jg mov mov add dec jnp mov cli aam cmp (bad) (bad) pushl decb cmc or pushl xor out inc div enter push cmpsb (bad) (bad) adcl jg or pop inc cmp (bad) mov jg test out adc xchg (bad) (bad) ljmp mov movsb lcall jo lods dec arpl push adc rclb ja (bad) (bad) (bad) ljmp dec xchg dec dec lcall adc (bad) mov cmp dec (bad) in xor aaa clc or lods ss loope imul or popf sti and sti (bad) (bad) (bad) (bad) aas into (bad) cld (bad) sbb pop incl div insl xlat test sub (bad) lret push fsubp mov jo (bad) (bad) jmp pop jbe push xchg inc cmp or (bad) lea push pusha in ret jge push xor sahf pusha pop push cmpsl das (bad) (bad) incl loopne dec cmp (bad) sbb push mov xor mov (bad) pushl sbb stos shrb icebp nop jnp sub test mov xor push in mov pop inc add pop and stos sarl xor fsin repz (bad) (bad) lcall add outsb jbe fiadd xchg fcoml lods or out xorl mov call rcr mov hlt daa clc mov (bad) mov arpl inc xchg inc jle pop cmp mov and sbb sbb ds negl addr16 mov sahf cmpl fsubrl pop cmp (bad) (bad) ljmp sub push and aas neg add fnstenv xlat pop ljmp lea lock mov stos jl jns std mov ljmp mov push jae add mov (bad) (bad) (bad) (bad) (bad) test push addb adc scas imul stos add insl add push (bad) lcall lods mov bound hlt nop aas sbb imul cmp mov jnp call scas pop cmc notl iret cmp (bad) aam flds mov or xchg cmpsb xchg dec loopne cmp rolb inc dec jmp cmp icebp dec scas loopne mov (bad) (bad) (bad) lcall pop mov popf adc rclb popa call leave pushf insb rcrb pop rcr hlt (bad) (bad) fisubr xor ficom mov push lods adc popa ljmp dec ficomp pop (bad) dec ret mov jmp pushl fwait adc fmuls daa pushf xor inc and mov or xchg sbb stos pop sub test sbb ret cmc mov adc pop les xor iret lahf inc inc ds rolb (bad) ljmp pop andl push test ret loope or fdivrs pop xchg jb or (bad) fild sub jl repnz mov sbb (bad) inc and out push (bad) xor cmp das frstor mov in lods (bad) (bad) jmp mov sub (bad) xlat mov sahf ret xor bound in mov (bad) call xor push jmp idivb popf aaa sub hlt jo incl add dec jecxz sahf xor bound push mov or jg sbb or mov pusha push xchg rol incl jb sti aad int pushf jb lods (bad) (bad) pushl jle,pt into or outsl cmp jo push addps mov (bad) (bad) (bad) call (bad) pop stc adc push push fcomps leave aas stos jae insl cmp adc cs mov (bad) push call (bad) ror pop inc push scas enter or fnop sbb loope mov xchg lcall sti or lods sub xchg jns sub mov out fs (bad) (bad) (bad) decl cld add xchg cmp decl subl lods (bad) mov into pop cld fcomip jge mov mov jne cmp mov jg call iret icebp fstl imul and xchg cmp jbe adc js (bad) (bad) pushl ds loope out fstl imul xor (bad) (bad) (bad) incl popf sbb jbe cltd or cwtl mov mov bound jp mulb int (bad) (bad) (bad) pushl and and outsl cmp lea repz mov addr16 push pushf sub jge lret jns sbb ljmp test xchg dec pop cs clc incl sbb push dec jae push sub xlat sbb cmc (bad) (bad) incl sahf repz xor sarl mov stos (bad) (bad) (bad) decl xorb ds lret js (bad) jle xchg pusha sbb std cld out mov int jne fwait (bad) (bad) inc orl jb inc add loopne into imul out (bad) or ficomp or dec dec and ror shrb je or scas (bad) (bad) (bad) jmp outsb ljmp push fs jbe out ja (bad) aam es lods hlt and (bad) (bad) lcall imull cmpl fnstsw daa sbb lds out sub shrl (bad) insl or and pushl pop mov mov jg xor jmp mov mov (bad) mov mov mov repz (bad) (bad) decl adc mov lcall lods insl jae adc (bad) push in sbb adc lds sub mov (bad) mov popf cmp push sti (bad) sar push dec sbb or aaa pop xchg mov mov xor cmpsb (bad) jg mov push xchg inc mov lods mov dec cwtl sarl push pop and int3 xor sub (bad) mov cmp insl sbb xchg mov pop mov cmc mov ja adc lcall call adc jg cld (bad) (bad) (bad) cli dec or gs repz popa jg xor popf add or cs jb (bad) jg insl jae,pt pop adc ret incl jg (bad) fcoml and or je add icebp fidivl sbb pop (bad) ljmp inc cmp in outsb out push xchg repnz rolb sbb idiv aad lock and adc push pop and cld mov sub dec outsl pop jg arpl cmc (bad) lcall sub mov mov movsl mov icebp shll ja (bad) (bad) incl xor adc ss push in aas cld fnstenv mov cld in push sub leave mov mov (bad) stc rcll sub push add jnp and (bad) decl mov stos out mov cmpsb imul inc push insl lcall cmp test (bad) decl mov pop mov cmp imul push mov call sub lcall (bad) (bad) mov stos sbb jge popa (bad) or xor dec ljmp movsl (bad) cmp lods xor sarl mov mov xchg push sub in jecxz clc test and cmp or lds add imul insb ds (bad) (bad) (bad) incl jp mov inc cltd fsubrl push mov push test (bad) (bad) (bad) inc sbb negb or inc inc leave dec imul adc inc lret dec pushf es or fcmove jl (bad) (bad) (bad) (bad) jmp sub sub jecxz enter inc xchg adc loopne dec test dec hlt leave xchg (bad) (bad) (bad) incl push xchg (bad) mov insb jle add rorb aas rcll das adc rolb outsb xlat jge add in cmp pusha fldenv inc aad pop inc rcll ljmp or std aas pop ret fwait jp mov push pop mov adc or out stc lods push mov rcrl push sub ret push push jno clc (bad) jmp xor inc adc dec sarl cmpsb push jg fimul (bad) jg das mov cwtl dec push jo imul fxch mov std dec mov inc (bad) (bad) jmp (bad) or sub lea ret ljmp push xor incl lahf test dec and lods inc cmp cli (bad) mov mov (bad) (bad) call fild leave xor or hlt mov in inc out cmp pop xor jge push (bad) (bad) cmp inc hlt insl xchg flds cmpsb jo incb push inc shrb mov push in loopne ja mov lcall push xchg cli test and sbb ss (bad) (bad) aas and pop jo sbb mov dec cli lcall fdivrp cmp das aam (bad) or (bad) (bad) (bad) out int3 sbb jmp or xor in mov xor inc mov mov xchg or mov xor in xchg aam (bad) aas adc sbb mov (bad) (bad) push xchg mov jae jp std repz pop xor sub rcl outsb mov mov (bad) (bad) (bad) jmp dec lods repnz mov dec out sub (bad) ret add push dec bound dec pop (bad) (bad) (bad) jmp jecxz xor ret in dec sbbl sbb jl push jns in adc dec lds pop cmpsl imul sahf xchg jecxz xchg jmp push add insb sahf pop sbb popf xor xchg and stos sbb (bad) (bad) ljmp int sub je rorl sti stos (bad) cmc sbb cmp add mov and out and jbe mov (bad) (bad) jmp out insb sub pop sarb ret (bad) jno mov loop mov scas cmpsb sub rorl ds aaa movsb mov lock push test aas xchg shrb (bad) insl in mov xor ljmp (bad) xchg ficom mov fldl (bad) xchg imul jg ja ret push cmp sbb lods mov (bad) call hlt stos jmp nop jp xchg dec sub add andl mov (bad) pop int3 insl pop add (bad) (bad) (bad) ljmp mov popf lcall loopne jg addl mov lret xor push rcl mov incb or das pop pop cmp push (bad) (bad) decl sbb je imul fisub dec pop dec (bad) (bad) (bad) (bad) ficoml cwtl daa cmp addr16 xor outsb or sub clc mov add out push (bad) (bad) lcall insb fs cli ret mov call and (bad) (bad) (bad) incl mov ror sub js dec adc pop icebp xor loope and (bad) (bad) jmp (bad) pop add push xchg sbb sbb test fcmovnu pop test push (bad) (bad) (bad) out and push dec ja mov pop (bad) das sbb gs mov enter es (bad) (bad) inc lret add push iret push pop push jb test in aad sbb jbe (bad) hlt (bad) (bad) ljmp sub int xchg inc pusha test push inc (bad) mov out cmp outsl sbb (bad) dec xor push xchg sbb sub dec arpl sahf call mov loopne in sub pop lcall (bad) call or mov iret std and adc add lcall pusha (bad) (bad) add outsb ffreep pop std pop add pop jmp ret pusha nopl (bad) call fsubs pop mov dec jae inc inc cmp bound leave or mov (bad) nop (bad) (bad) (bad) pushl sbb ror pop jo out ds xchg push adc inc push fs (bad) (bad) (bad) jmp xchg pop jae xchg pop lods mov pop cmp xor aaa data16 mov sar (bad) (bad) decl insb pop leave jg mov scas xchg or pop rcrb xor mov scas es dec inc sahf pusha (bad) (bad) (bad) decl inc pop push inc or rcll xlat (bad) jbe (bad) pop int jp clc add jnp in (bad) (bad) (bad) call int in (bad) std xchg cwtl out fwait mov push (bad) notl out xlat stos enter inc jno lahf leave jl add (bad) (bad) incl out (bad) cmp push cmp push add mov inc sub decl sub lret rcll or sti nop fsts xchg xor jne dec ja dec (bad) cmc test (bad) (bad) (bad) call cld mov inc xlat add pop pushf clc stos mov hlt mov mov xchg scas sarl (bad) (bad) (bad) mov subb ljmp xorl std js aam add mov cmp dec daa add sbb pop cwtl lcall push mov or sarb pop insl or (bad) (bad) incl inc scas mov fs jge xchg (bad) popf aas lcall cmp mov or mov testl mov scas mov jp popf pop sbb push (bad) jg lahf fdivs in fnop lahf jo cmp fs and out cwtl stc fs adcb ljmp cmp out inc jnp fidiv pop cmp (bad) lcall inc sub inc fucomp jo xor add jae push stos push xchg push sbb (bad) (bad) ljmp cmpl ljmp jno pop jmp dec in (bad) (bad) (bad) lcall (bad) enter popa add aaa xor ja add inc imul or or mov inc jl mov add cld cli mov xchg insl fs dec dec adc add (bad) push lods push jbe mov dec mov arpl (bad) inc lock fwait pop mov js sub (bad) dec lods and jmp pushf test (bad) (bad) call dec mov lret sti mov adc mov push pop lret and repnz (bad) (bad) jmp pusha imul shrl or jno sub sub hlt dec xor pushf add inc adc dec das outsb int3 xchg pmullw cmpsl cmp cmc push (bad) incl pop out popf insb fsubl inc add jns clc (bad) inc push mov lods cld ror mov adc (bad) jmp push nop inc xor daa int decl mov (bad) (bad) (bad) ljmp add out loop mov or and xlat out cli xchg xchg imul call mov xchg jo in xor pushl call test mov mov lods cmc and imul inc and decl pop jne out insl mov lods cmp (bad) push popf add adc pop mov (bad) (bad) (bad) ljmp mov mov add jge fcoms cmp aas sbb push push lahf sahf (bad) jmp jg jbe adc in es mov gs in pop lods sar (bad) decl lret stos movsb and loopne pushf push push sub dec cli (bad) gs (bad) (bad) cmp mov (bad) mov rorl lea or pop (bad) in jnp mov (bad) (bad) (bad) decl lret and sub cmp and lahf mov sub mov js outsl sbbb jmp push add dec cld (bad) lcall push (bad) adc push insl cltd shll test mov bound pusha repnz (bad) jg add scas dec fdivs dec loope repnz call popa mov sub insb sbb sub clc cwtl jno add (bad) jb subl ljmp in icebp (bad) (bad) (bad) decl scas sub std xchg enter jecxz in hlt mov test add jl jg (bad) lcall ss jge jns push push gs mov mov (bad) (bad) (bad) call roll aaa fnstenv xlat mov pop scas jl jmp popa (bad) (bad) decl rorl repnz sbb fldenv lcall (bad) (bad) call cmc cmp mov mov cltd jbe enter sahf cmpsb stc outsl stos dec iret mov dec mov lock imul inc fstpt imul incl add mov (bad) mov cmc and loopne outsl fisubr test and test adc adc mov cmp (bad) call fdivp pop pop jbe lahf pop inc and fcomps push out cmp mov test mov loop inc add or clc call roll ljmp jg dec (bad) mov inc xor inc lret fsubs pop sbb inc (bad) mov (bad) push cmp fbstp ficoml cmp test adcb (bad) jmp in (bad) ljmp dec mov mov mov int lret and mov add xor (bad) incl fs sub xchg aaa push lds cmp push call mov fcoml pop xchg cld movsl outsb adc mov out xchg xchg (bad) (bad) (bad) out mov mov push call imul push push inc cld out push (bad) call adc setne test push sbb add outsl cli (bad) call pop mov daa in lock jae fcoms dec ret shlb addr16 mov (bad) call test movsb mov leave mov stos xor lcall pop xchg mov (bad) lock ljmp scas fmull dec inc jo loop add adc (bad) (bad) lcall xlat mov mov mov into std packssdw adc push push gs enter (bad) and in lock (bad) (bad) incl sub push lret addb push sahf jbe mov addr16 loopne or decl (bad) mov movsb xchg (bad) in mov lods mov pop jns loope aaa imulb es xchg popa jmp xorl loop jbe sbb cmp in (bad) (bad) (bad) ljmp add dec add push xor jbe test jle gs pop (bad) (bad) (bad) inc (bad) dec jnp and sbb xchg jp mov enter addb test jg dec cld call cmp fmul outsb repz ljmp dec and mov dec cld (bad) lcall aas dec ss add jns daa call (bad) (bad) jg ds adc pop dec bound sub adc mov push sar inc ljmp cs repz std lods popl mov (bad) push std ret icebp lcall cmpsb xchg popa movsl xchg lea sub and test decl repnz test out push ja (bad) and lret (bad) fildll aas rcl dec dec pop inc ret (bad) int3 scas pop xor (bad) in (bad) (bad) jl rol ljmp test push xchg push flds or push or xchg insb cld outsb mov ja inc stos mov loope add loop fsubrs sar xor insl push dec xchg popa pmaddwd call and pop (bad) sar (bad) fist dec mov mov sub and push jo (bad) (bad) (bad) jg xchg mov jns fwait aaa sbb mov je sub push mov lcall decb mov xor loope mov out out xor fcomi (bad) (bad) (bad) incl nop sub mov addr16 cmpl xchg outsb test stos lea xorl (bad) call scas xchg jo pop mov xor das imul insl mov pop prefetcht1 (bad) (bad) jmp mov push arpl imull adc decl fildll int lcall (bad) aas loopne pop imul adc (bad) xchg lahf es mov rclb xor pop adc (bad) lcall push push idivb or mov (bad) (bad) (bad) incl ljmp add (bad) pushf bound inc and out jmp es or (bad) (bad) incl pop in pop mov inc jle rorb das es in jb loop xchg (bad) (bad) inc shl mov cwtl inc es clc hlt scas (bad) lret jno pop and cmp jmp xor pop test loope aaa push sbb inc ja sbb je mov (bad) (bad) decl outsl and test cmc dec or sahf jae push mov gs (bad) decl into jbe fcomps pusha pop cmp pop inc outsb (bad) aad sbb pop xor cltd (bad) (bad) (bad) decl (bad) lret mov das in push imul bound mov jge (bad) (bad) (bad) ljmp bts data16 dec les pop sbb pop mov (bad) (bad) (bad) mov out int3 popf adc fbstp lahf daa rclb add (bad) (bad) cmp and inc dec push jb (bad) decb sbbb inc ja sbb dec or inc decl xor (bad) sarb adc inc movsl pop mov popf lds movsb mov jg loope,pt pop flds add scas mov (bad) (bad) (bad) jg ds or adc inc arpl push xchg frstor xlat cmp or loop in mov jns fildl in notl (bad) in call iret daa pop cmp adc mov cmpsl (bad) (bad) (bad) jmp mov inc jnp ret movl sub stos sub insb jae mov dec daa insb cld jmp ret loopne cmp lahf out push dec pusha mov and push test jo push sahf movl call sbb adc sbb lock (bad) ljmp scas cmp outsl repz (bad) sahf mov lods jb mov push xor scas clc (bad) cmp xor (bad) enter push mov aam out loopne lret decl (bad) dec aad ficomp mov mov pusha push xor sti (bad) (bad) (bad) ljmp jge push (bad) je hlt lock cmc fs decl jmp (bad) pushl std aad jns pop pop add sahf das cld vshufps push cmp pop xchg mov mov std add mov cltd push icebp xchg xchg xchg mov cli jg add in gs (bad) pop in pushaw push in jp (bad) (bad) (bad) push stos pop cmp sub scas jmp jmp ret jns xor xor xchg push test jmp mov push enter scas in jmp sub xor or adc movsb (bad) ljmp cmp sbb test add pop jl sahf mov mov mov sbb decl and mov push xchg dec add sub (bad) (bad) (bad) (bad) mov mov jne aam sahf and dec adc jmp loop jl jmp data16 out mov decl jg xchg fistpll sbb (bad) (bad) cmp fucomi insb test sbb stos push xor pop push fild loopne cwtl xchg pop mov add sub xchg into (bad) jmp (bad) cmpsl test fwait sub lock (bad) les xchg mov loope aam les repz push mov and jp xchg lock call (bad) (bad) decl iret add mov lods rorb pop jae loope mul inc jecxz jg clc push (bad) (bad) jmp or pop dec stos int3 repnz jo sbb inc clc daa rcrb call (bad) ljmp or scas scas and popa fcomip (bad) cmp mov movsb daa insl sbb aaa dec nop jo push xchg and outsb aaa jecxz cmc in adc (bad) jbe outsl pop push cld mov in loope (bad) cmp lea xchg jno sarb (bad) decl popf sub sahf (bad) lock test cmc ljmp (bad) decl pusha push xchg add arpl leave mov xchg push les sar (bad) subl call mov and jmp push ficoml popf or idivb dec jnp mov call cmpsb (bad) mov adc pusha jb es dec cmp push fild jmp inc lock cmp (bad) add mov maskmovq imull enter cs (bad) (bad) (bad) ljmp lret popf jne insl adc cs pushf inc mov icebp mov nop dec jl stc xlat lret (bad) fisttp (bad) mov out pop mov (bad) (bad) jle cmp popa cmp xchg (bad) bsr lods ss (bad) (bad) decl pushf sub push sbb mov (bad) mov push arpl (bad) or mov fcomip test test (bad) (bad) call cli ss inc cmp add adc adc or push movsl cmp jg dec jl (bad) (bad) (bad) call data16 out scas test aaa imul add xor pop dec pop (bad) loope add pop pop mov ljmp push je jmp xor push push (bad) (bad) inc clc mov les dec sti mov push dec sub (bad) std in push insl sahf jo (bad) ds (bad) (bad) jg lcall push (bad) ret pop out in mov lcall dec scas sub mov add cmp iret ja in dec jbe sub aad pop (bad) mov sub dec into aad popa xor mov and mov lock sbb push icebp (bad) (bad) push mov dec in push insl scas out adc mov sbb add loope jge inc (bad) (bad) fstl test push adc pop bound mov push imul test and mov add (bad) (bad) jmp inc adc nop (bad) es cli movsb push mov push subb mov (bad) (bad) (bad) (bad) cmp div sti pushf mov push outsb in orl add enter push cmpsb cltd jge push cld (bad) ljmp or (bad) insl xlat imul cmc cltd ret jb jle pop (bad) (bad) (bad) incl mov shl cmp xor and mov mov sbb or (bad) ljmp aas outsl or pop jb dec ljmp add lcall and data16 mov mov mov (bad) ljmp pop fldenv cmpsb jmp inc adc je outsb and and mov ljmp xchg sbb pop movl adc rcr repnz pop ljmp fcomip jg or xchg fdivrl add lss decl pop sub (bad) (bad) (bad) jmp jbe icebp sahf mov (bad) add aad popf inc es sub rcr mov (bad) incl nop xchg popf in mov arpl and xor out jecxz xchg mov fcmovnu push fidivl int pop sbb aaa insb inc mov sub decl jecxz sbb lods push or sahf push stos or imull jno adc jle dec (bad) pushl (bad) jmp pop les (bad) push (bad) dec fwait push daa repnz incl mov push inc or or repnz sahf int3 rcrb stos pop mov xor (bad) jmp fimul out push inc mov aaa mov cmp scas aaa pusha add (bad) dec push adc mov jl jae sub loopne hlt xor lcall decl mov jb sti pop jne cmp repz (bad) (bad) incl pop (bad) xchg cmp in inc out stos stos or sahf and leave cld (bad) (bad) (bad) jmp cld rcrl testl xchg mov xlat sub (bad) (bad) lcall test aam mov call ret add sbb rol out call or adc (bad) cltd pushf xchg mov (bad) (bad) (bad) mov xchg mov ret cs lds mov xor movsb xchg inc loop push bnd movsb incl sbb imul sub fsubrp test (bad) jmp (bad) cltd adc mov aaa mov sbb (bad) (bad) (bad) jmp and add and add jae aaa sub (bad) dec add xor xchg addl (bad) cmp subl and sbb adc in xchg nop mov dec fld (bad) inc (bad) (bad) (bad) inc icebp outsb pop and lea jle sbb cli push mov addr16 iret (bad) jmp cmp push std dec cwtl aaa dec clc xor pop (bad) (bad) (bad) call das sbb and imul (bad) adc fdivr je push jnp xchg cmc arpl ljmp lcall mov inc in test test add mov fstl add imul xchg add jb (bad) (bad) jg push rcrb outsl lds push mov (bad) gs jge std jl cmp cmp (bad) in mov sarb and sub mov jge call mov (bad) (bad) fildll fwait ss xor or jbe push inc nop jns jg jb daa cmc cwtl decb pushl cld pop cmp imul loope pop mov loope int3 jb (bad) (bad) (bad) jmp mov jg insl test sahf int repz sbb ljmp push xor add sbbl scas push jbe (bad) (bad) jg scas inc and (bad) xor xchg es fs push adc insl pusha cld mov push and (bad) (bad) (bad) decl cmpsb jno jns push or call inc mov push mov (bad) (bad) cld jle ds scas (bad) jmp cmp repnz in push mov jmp dec (bad) aad (bad) and jle (bad) push sbb cltd stc pop mov mov pop or incl or fldl push and repz sub iret push pop call xor dec mov ret xor stos std xchg (bad) (bad) jmp mov std mov cmp pop or jmp push mov fcomps dec (bad) ljmp loope hlt cwtl aam test sbb test pusha xlat dec (bad) jne mov jmp ljmp mov into sti aad or jb jle cmpsb push rolb (bad) sbb outsl clc jmp and sar test xor mov mov ljmp into mov inc sti test dec rcll push ss cmp push insl jbe (bad) ljmp cli aam rclb daa xor fcmovne jle or hlt das test pop jno pop ja pop mov fstps je int pop (bad) (bad) jg insb cmp stos jmp push pop jmp xchg aad sub (bad) xor ljmp enter (bad) jmp mov and out test mov pushf iret inc test pop stos add sub pop pusha jmp outsb fdivrl sahf imull jl mov (bad) in pop cmp add and jb (bad) (bad) (bad) pushl or lea xor push or mov aam lcall insb insl lea mov dec or gs adc fidivl (bad) (bad) call or mov out adc (bad) mov push and (bad) mov xchg mov pop lcall fdivr (bad) (bad) incl xor enter cmp test movsl ljmp call into jnp sub loop add sub pushf leave movsl (bad) aaa mov sbb ljmp cmp xchg and shlb mov (bad) fsubrl sti leave dec repnz jae dec inc pushf lcall mov dec (bad) fisttp inc xchg enter mov or fst adc loopne mov mov pop mov and pusha pop stos lods mov or scas cltd out pop mov mov imul pushf pop pop sahf (bad) (bad) (bad) ljmp lahf aaa out lahf loope push and mov lods jns aam int (bad) dec dec mov ljmp rcrl push or int3 inc jg lret dec xchg frstor cld ja insb jl jle mov sub mov add fs (bad) adc push (bad) (bad) (bad) decl jp leave ds lock es aas out lods out mov mov mov add inc enter ds mov pop mov pop adc push pop mov (bad) mov sar push mov or repnz in sub xchg fnop (bad) (bad) (bad) js (bad) int out je lret xchg push sbbl outsl mov gs les pop sahf cmc pop push (bad) stos imul xor (bad) (bad) ljmp xchg mov sub cli fstpt mov (bad) decl shll inc jb lcall mov ja jge (bad) (bad) (bad) ljmp add sbb or in ss pop inc mov xor pop jnp int3 icebp es popf sub (bad) (bad) push add or xor mov mov ss or push popf cmpsl movsl dec lods add in (bad) (bad) jmp adc push mov enter mov mul cli shl sub xor sahf jns jmp add fmul dec mov mov jnp xchg and mov mov inc sbb jo icebp sbb jg mov cli std mov jle out loope mov cld dec inc xor and (bad) (bad) (bad) cld (bad) pop in xchg (bad) cmp sub dec sub cld into cmpsl and clc mov mov ljmp repnz add cli into fisub stc out dec (bad) pop loopne cmp jo (bad) or xchg push das (bad) (bad) (bad) decl jnp adc push ret outsb mov or dec out inc mov add (bad) (bad) call inc mov pop das and mov test faddl sub (bad) (bad) mov push pop mov inc dec and loope sub xchg sar push add leave lahf lods movsb mov flds mov push into jl pusha pop pop ficomp repnz inc ds dec or (bad) (bad) (bad) call ljmp pushf mov mov push pushf jo fisubrl lock sbb mov icebp (bad) (bad) (bad) ljmp pop fsubs sbb int dec or imul and test call jecxz lock (bad) jmp les adc adc cli movsl sub mov xchg add jae (bad) fist mov mov pop pop js js stc pop dec test decl mov sub lret mov and sub jl pop fimul aaa (bad) adc out sahf mov popf xchg mov push (bad) (bad) mov sbb sub testb lds cmpsb lcall ja (bad) lcall xchg out mov mov pop and mov les or ljmp inc fnstsw inc push inc fucompp push mov push and arpl mov fisttpll mov (bad) incl pushf pop jo mov or cmp inc fdivrl insb (bad) fbld (bad) (bad) jmp push or mov mov cli push cs test sub xchg outsl pop xchg insl cld add jno pop xor incl mov pop lock in icebp mov push cs cmp fs (bad) call (bad) lds ds (bad) hlt push sub sbb (bad) (bad) (bad) ljmp cli xchg decl push mov cmp mov mov hlt mov xchg out cli (bad) fildl or (bad) cmpsl push lods cli (bad) adc int dec daa pop cmp (bad) (bad) (bad) incl cli sub push sub repnz movsb aas or mov cmc lods jle dec pushf and push int repnz cld (bad) (bad) ljmp vpmaxub scas sub jecxz push mov rcr push fcmovnbe inc (bad) sbb (bad) sarl ds les (bad) sbb (bad) (bad) (bad) decl movsb outsb outsb addl jle in jp and je mov pushl dec sub lahf add pop (bad) xchg xchg cmpsb fimul (bad) (bad) ljmp push cmp int3 mov xchg mov pop test xchg loope cmpsl repz mov das mov fstps ja ds (bad) (bad) jg loope aad mov cmp (bad) rcrb ret movsb xchg push nop sbb cmc scas sbbb cli inc lcall (bad) cmp decl int3 (bad) jb pop jmp xlat les (bad) and sbb (bad) pushl out stos add les or inc push clc cs (bad) fcomip ja sub add mov mov dec lods cmp int3 dec push loop hlt (bad) (bad) (bad) inc (bad) negb outsb push mov dec mov pusha xor or mov (bad) and paddd jg (bad) inc adcl push (bad) rclb cwtl jo pushf arpl bound call jg ror popa (bad) (bad) (bad) (bad) js sbb je sub out cmpsb (bad) mov lahf or cli jne push sbb insl cld fwait into xor (bad) (bad) fstpt jl bound and shrb leave int lahf xchg iret (bad) push sbb inc cmc xchg dec pop loopne clc pop lcall pop adc cli or lea sbb jne mov jl dec mov ljmp in stc xchg mov pop xchg jb (bad) (bad) (bad) cmp dec into mov pop push push out mov inc (bad) mov push jbe xchg mov int sti enter (bad) lcall xor scas dec lods sbb push data16 mov imul les (bad) (bad) incl push sub cmp out and xchg movsb repz imul data16 inc std push lret sbb repnz in push push (bad) (bad) (bad) lcall dec jb and add mov adc mov mov popa jle mov jecxz (bad) (bad) (bad) incl push and mov mov mov or xchg call or inc pop cmp mov fs nop lret mov mov cmp ds xchg (bad) sub and or pop sub je dec fisubl and xchg sbb and (bad) out jbe (bad) (bad) jmp jns mov fwait xchg shrl fnsave sbb sahf lods push sbb pop arpl (bad) lcall mov je push out (bad) rolb dec (bad) or movsb adc cmp dec clc jg xchg gs aam movsb push inc out push (bad) ljmp rorb in shl push adc sub and outsb cwtl mov dec mov je pusha decb cmp ret mov cmp insl adc inc push xchg jnp dec std pushl test push shlb mov hlt pushl loope shr mov sahf dec out in (bad) (bad) (bad) pushl hlt nop arpl mov out jmp sub jno xchg (bad) (bad) pushl jecxz sub adc int mov ret sub inc or jmp pushl adc (bad) xchg mov lcall lods lds les mov jmp mov cld ljmp dec loopne gs repnz mov dec mov (bad) push jmp (bad) (bad) pushl inc or hlt lahf xlat aaa in jle les loope mov mov (bad) jg ljmp pop dec jbe test scas orb sub cmc sbb mov jo dec popf test ret cmc add dec push inc xor lret xor out mov inc mov cli pop (bad) fsubr (bad) je addl lcall jl (bad) (bad) cmp push test sbb xchg hlt xchg insl fstpl pop mov in add or lods loopne mov push movsl ds (bad) (bad) call cwtl outsb lock mov lock enter sub jmp (bad) (bad) (bad) (bad) jmp aaa in push out scas xor dec (bad) lock or std dec push inc mov push lcall outsl clc loopne or lret xchg outsl rcrb jns and mov roll xchg xor sahf jbe mov jg pop adc jl jg ret ljmp or mov rcll rcll (bad) into cmc mov repz ljmp push shlb jmp mov ds pop call scas pop fadd sti pop pop aam jo loope (bad) (bad) lcall dec scas dec js mov xlat in xorl push cmp rcr jle (bad) inc and popa pop in and (bad) (bad) negl shrl (bad) (bad) call fidivl ret xchg pop add jg test jmp js mov (bad) mov (bad) (bad) decl lahf cmp sub repz mov lods cmp loope das inc push sar (bad) jmp or divb cli sbb test xchg rcrb rcrl adc pop js pushf insb push sub (bad) (bad) jg push out jmp add push cmc mov enter mov mov gs inc mov int3 pushf xor mov faddl mov adc mov jmp inc loopnew (bad) (bad) jg pop push mov int or pop xor lea lahf mov aaa ljmp sbb aaa cld decl sub xchg (bad) sti btc leave lds xorl add (bad) call jno (bad) stos gs xor sub shlb (bad) (bad) mov aam mov or das cli rorl gs mov outsl xor stc loope push test mov (bad) (bad) lcall fildll xchg inc inc popa pop xor sbb lock mov jg (bad) jle hlt rclb nop push sbb jge jae push cmpsb pop aas clc push nop pop (bad) (bad) (bad) call addr16 stos cld adc mov push and fisubr mov inc jne jbe xchg (bad) jmp fwait jle jl adc aam mov mov movsb xchg out les movsl (bad) (bad) jg xchg push fs cmp ret inc lock (bad) and pop inc push pushl (bad) (bad) jmp mov addr16 nop push cmpsl int pop xchg pop lods cmp pushf pop push add mov in dec inc pop push inc ljmp dec push or (bad) (bad) pushl lods rcr add fstps adc mov dec mov lods scas dec xor ljmp fdivl mov push xor std (bad) (bad) in cmp cmp es add iret push jne sbb (bad) (bad) lcall sti mov mov adc repnz lock xchg (bad) (bad) (bad) call cmp fildl fistl mov push je les jae das daa (bad) (bad) incl add xchg xor cmp pop lods popa imul and ljmp push cmp fadds stos out dec sbb addr16 ja push movsb lods push hlt (bad) (bad) lcall int ss hlt lods in jae out scas divb cmp sbb call negb jl hlt lcall stc xor test addr16 and mov (bad) decl push mov inc test scas lods jl cmpsl sub mov incl out mov inc jbe inc xchg (bad) sub (bad) (bad) idivl cmp ljmp (bad) dec mov cld ret mov inc repnz and jp jbe cmp mov push test incl ljmp cmp jno iret lahf push mov dec adc jecxz rcll call aas fldt out imull mov test subl inc mov fist mov jne hlt (bad) mov add xchg mov pusha data16 movsb dec add call (bad) (bad) mov inc sub or xlat sub ja in or das xchg mov dec push andl xor (bad) mov adc mov clc arpl clc add (bad) incl jnp push pop xor sahf xor es mov (bad) mov or jbe enter cmc or push mov std out sar (bad) mov adc es and xchg mov sub (bad) jmp pop scas mov jmp insl and cmp dec cld jmp push mov cmp aam in inc fdivrl adc pop ret cmp and (bad) jg jno cmpsl mov lock nop out mov call jne pusha mov addb es jmp pop sti pop stc xchg push movsl jnp mov xchg gs daa (bad) jg inc mov sarb push cmp flds mov adc pop inc pop (bad) (bad) (bad) decl (bad) fwait jecxz in scas ficomp aam cmpsb or repnz roll xor jns pop cld (bad) (bad) lcall adc fbstp inc je dec pop loopne pop cmp fnsetpm(287 loopne lods mov (bad) jg add movsl pop adc mov or dec mov sbb sbb dec xor lods jmp fisub into add (bad) jp xlat loope add mov push and jmp ss repz push movsl adc add ficoml insl xorb loop cmp aam mov xchg (bad) (bad) mov call loop xchg enter xchg push xchg dec jae dec rcll (bad) (bad) call lret push xchg adc fimul sbb fidivr data16 std (bad) (bad) incl push pop or out push lcall mov pusha test lock (bad) fdivrs incl (bad) push or mov push pop mov clc (bad) inc out popa add repnz jmp mov jae adc cmp xchg and (bad) ljmp lea and push lcall sbb cmc pop xor adcl or jg daa cmp fcmovbe aaa adc popa adc in mov loop mov fwait jae add mov (bad) call or (bad) out cmpsb push out and test test repnz (bad) (bad) lcall sub rolb xchg mov adc out ss mov cli decl push in push movsb adc push (bad) (bad) (bad) lcall scas xchg addr16 jne xor ror lock inc dec jne enter inc xor xchg mov cmp in sub testb das mov inc js icebp lahf sar push cld dec cltd (bad) mov ss push hlt jle sub imul cmpl cld fild push lods sbb or or and jnp lret and decl jnp es adc inc sbb (bad) (bad) (bad) incl test es imul cmp mov scas (bad) fs fcom nop lock cmp push stc adc fnsave out das nop mov fisubr movsb mov (bad) (bad) (bad) lcall bound test lea push sbb into add and dec fdivrp (bad) (bad) ljmp inc pushf pop add sub cmp mov sub scas sbb cmp cmpsl dec bound xor (bad) (bad) pushl fistpl fs int3 push or loopne pop jbe (bad) (bad) in mov lahf bound (bad) (bad) (bad) incl das mov jno cmp je outsl fsts xor xor or cld mov (bad) (bad) fiaddl cmp pop sbb ret mov (bad) decl push mov lds pop sahf add js lret (bad) (bad) (bad) push out popf aas dec jbe mov ss cltd test push adc ret ror aad (bad) (bad) (bad) jmp mov mov jbe ljmp push shrl xor adc incl push inc add sbb hlt push outsb mov pop jg (bad) call ret fiaddl mov pop fimul cmpsb hlt pop fldcw add repz mov mov add sub jb rorl mov (bad) adc or mov mov outsl (bad) decl (bad) in mov xchg xchg inc adc imul cmp xchg or icebp inc aas icebp and nop sub sub loope mov mov cmp dec das sarl add (bad) (bad) (bad) push sti pop loopne sbb jne ror insl dec add jg inc xchg or stos inc cmc push call (bad) xor ds mov jmp pop add dec sbb (bad) (bad) incl push cmp push mov (bad) lods jl xor pop jne cmovl jns jge sti imul (bad) (bad) jmp mov repz ja mov push shlb sbb bound pop xchg mov fs mov rcl aas xchg or (bad) (bad) jmp es dec sarb mov push xchg jo adc mov movsl dec sti xor (bad) (bad) ljmp mov mov ljmp andl mov gs std lods sar (bad) call pushf mov dec imul dec not xor xchg ja int mov icebp lds cmc xor out xchg je jg jg pop rorw aaa (bad) shll cltd cld add dec movsb mov pusha std or in out ret sbb mov mov jo ds jnp (bad) xor fnstenv inc adc add push (bad) decl sarl cmp xor push inc lea jo lret (bad) jmp mov mov add add lds cmp inc sub dec out mov (bad) jle or inc lock gs dec push (bad) jmp imul fmuls push (bad) jmp popa divl and push adc call push mov insb dec addl popf xor jg mov repnz push and jne mov adc js lods fwait mov jmp mov xchg call clc lods loope pop inc or leave push pop dec pop (bad) fdivrl inc sarl mov cld (bad) (bad) lcall mull mov (bad) pop sbb cmpsb mov (bad) ret pushf aas nop (bad) jg sub pop stos xor and pushf jp outsb mov int3 mov (bad) (bad) (bad) call and loopne or insb mov fcoms sub cmp xchg (bad) (bad) (bad) ljmp pop or flds or sub and stos and lods fs pop add (bad) pushl rorl mov test mov cmp out add push (bad) (bad) fcomps xchg pop ret stos ss xchg adc call loop (bad) ljmp scas mov push push rcr fs clc ds adc (bad) std push dec imul sub jbe clc mov push mov (bad) jl jecxz (bad) call cmp iret adc mov incl out push pusha cmp call faddp fdivl test dec push sahf fsubr mov or adc xor (bad) (bad) incl or les sti mov dec adc addl std dec xor mov jbe pop fwait pop dec xchg jae paddsb mov loope dec les pop ret add (bad) (bad) (bad) jmp fisubl mov icebp ficomp cmpsb cmpsl xchg jg outsl int3 and mov push jp out jecxz movsb and pop add jno jo pushf lret mov mov js mov outsb xchg mov or cmp xor cmp fcomip (bad) incl jb,pn jnp je cmpsb js enter subl call lcall fimull stos pusha jmp ds add dec lret mov (bad) jmp xor imul pop xchg sbb mov add and cmpsb sub popa xchg notl outsl (bad) je adcl bound nop sbb push (bad) (bad) sarl xor lret xor (bad) imul test xchg cmp dec jnp repnz lret addl pop fcmovnu ret divl push cs xchg (bad) (bad) aas stos aam push ret mov lock pop xchg push (bad) (bad) (bad) out cli (bad) pop daa sbb mov adc jb sub cmp (bad) (bad) jmp cmp push movsb sbb dec add cmpsl or jb mov popa imulb lods sahf adc (bad) (bad) call jbe out jno pushf adc ret sbb jb sbb jp daa or push fsubs (bad) jmp insb push stos ja mov mov mov cmpl dec leave lcall pop insb outsl aam cmp aad sahf sbb (bad) (bad) lcall mov sti sarl sbb inc or js jmp lock (bad) ljmp inc scas jb dec (bad) xor sub dec add or and std cmp adc xor add mov push push imul (bad) call push mov leave mov adc scas mov test adc sbb mov (bad) (bad) dec adc call or insb mov adc sub mov push push xchg mov and jg fs inc test lods pop fwait ds dec mov faddl mov cld rorb stc pop jno shrb xchg fldl push js mov (bad) (bad) (bad) ljmp add sbb pop sub xchg out in lret jmp test sub sbb jp mov and fdivs rcl fs (bad) incl dec mov dec stc nop mov js jb testl (bad) (bad) (bad) call push jp and adc jle (bad) in (bad) dec mov push jnp add nop lock mov rcrb jmp inc imul lahf in (bad) sub sub scas aaa in roll push (bad) hlt ljmp (bad) jns leave pop mov popf inc dec mov loope sub (bad) push mov inc ss notb mov jo loopne fwait (bad) das clc pop mov mov jne ss xor inc hlt fcomip push icebp fstl call add (bad) (bad) mov pusha pushf (bad) (bad) lcall nop push test in push mov mov call loop sub or cltd sbb (bad) (bad) call push push scas lcall lret sub jl fs and sbb test (bad) (bad) (bad) in imul cmp jb mov add mov jle xor adc push ja mov ljmp inc cs and rcrb into sbb cmp call dec cmpsb aad xchg les xor mov (bad) out leave and sub aad mul in bound das cmpsl mov or pop (bad) (bad) (bad) pushl jge sbb xlat cmp vorpd jns xchg push movsl cmpsl sar add inc lods lock (bad) (bad) pushl ja adc mov inc imul jae or sarb testl dec cmpsl mov cld add inc sarl test push push push int lds (bad) (bad) lcall cmpsl pop sti addr16 js arpl jne mov stc push sti xchg repz outsl mov (bad) (bad) (bad) decl xor test insl ljmp popa sarl sub or push (bad) (bad) jmp xor jl push jns mov xor add xor pusha cmp (bad) movsb sub (bad) (bad) (bad) ljmp cmpsb dec insb dec outsl lahf nop lods cmp xchg push in mov test ss pop into (bad) stos (bad) test or or mov add jns sbb xor and jnp cld in (bad) (bad) (bad) lcall fldl mov xchg inc popa lods xor jmp test fidivr orb (bad) push ljmp es mov je fidivrl mov push lods pop jecxz or push dec adc out inc push sbb xor jb ret es pushl ret pop jbe mov imul call decl pop push flds jno xchg sub leave xor (bad) (bad) (bad) mov jge mov ss sar lahf jnp adcb mov js std data16 enter stos adc mov sbb jge rclb (bad) (bad) call pop sbb into gs mov mov cmpl mov je pusha push rol xchg (bad) (bad) lcall adc inc test cmp push jo mov lret orb mov lds cwtl int3 mov push inc out (bad) (bad) (bad) decl test jne out cmpsb pop pusha aam scas push je xchg mov pop push jp (bad) (bad) (bad) (bad) aas jecxz jo iret pop popa xor xchg cwtl aas addr16 les sub mov sar (bad) (bad) fidivr pop cmp (bad) cltd outsl outsb xchg fwait inc mov jg sub jbe jbe data16 add sub mov mov int sbb decl inc push insb (bad) icebp dec cli fnop out push lods call gs jno cmp sbb (bad) (bad) js push enter ret adc jb pop out sbb (bad) (bad) incl push into std jg hlt jns test loopne cli je cmpsl xor add and add arpl lret decl jge sbb mov sbb addr16 sub xor (bad) (bad) (bad) incl (bad) or jl dec data16 pop mov fistpll jo mov push jno,pt mov xchg cmp ror push jns jmp sti clc (bad) decl pop insb insb and sub loop push and sub das mov (bad) (bad) mov or cmp jo mov push das mov pushl sub lds arpl sar stc stos sub mov jle add mov adcl cmp jge xchg xor pop lret mov and xlat fldenv push dec push (bad) ljmp xor inc lcall inc in mov jg fcomip es repnz xor sub xor test out repz (bad) (bad) jmp xor push (bad) mov mov loopne pop sub pop xchg inc mov sub add das push or jb adc stos ds pop mov jp sbb push push mov sub leave idiv inc popf clc mov insb cmp psubsb or pop (bad) les call bound push cmpsl mov int push sub inc cmp insl scas clc (bad) pushl int xlat aaa into xchg mov repz fist imull xor cmpsb mov lea popf roll xchg sbb (bad) and cli fwait ds dec popf jnp adc add xchg push mov mov movsb xchg mov addl mov dec rorb rcll dec fcmovnu jb cltd or push cli inc insb (bad) sub loop dec mov lcall inc decl outsb test dec jp adc add jo (bad) (bad) (bad) decl cmp cmpsl fdivrl hlt pop cmp movsl in popf sub stos mov fbld mov sbb stos inc pushl aam data16 mov (bad) xchg lahf (bad) ja (bad) (bad) incl pop (bad) jne icebp jnp sbb mov and cmp xchg das mov (bad) (bad) incl mov lahf push adc in out push ja jle adc lea call jmp mov jno lods mov cli out mov movsl inc sbb call lds cli add daa xchg call (bad) (bad) dec cmpsl inc sbb push push lods call or mov push out lods mov adc imul sub incl ds dec mov sbb cmc sar pushl mov repnz lahf aam mov pop js pop inc jecxz mov cld call cltd cwtl mov dec add daa out ret push stos add pop (bad) (bad) (bad) decl mov (bad) jne jae and hlt in and jbe hlt mov mov (bad) (bad) jmp jge push out mov inc mov lcall (bad) (bad) (bad) call mov aaa mov (bad) sub cmpb xor cmpl lock cmp nop ret add mov leave out adc ss mov call into mov cs ds fcomip (bad) pushl icebp cmpsl into lock push adc push notl xchg mov mov pop inc (bad) dec xor out lcall movsl ret aam (bad) xor (bad) fild or int test js outsb je mov (bad) jmp ds (bad) nop cmp xchg or and (bad) (bad) jmp enter int3 pop in daa push mov mov xchg inc sbb test test add pop lods ja adcl cmp jecxz rcrl gs enter pusha add (bad) (bad) (bad) (bad) aas lods push xchg add xlat xchg scas and imul gs xchg sub pushf fwait decb add test mov or aad cmpsl cmp cmp pushf push stc leave mov loopne and fdiv (bad) (bad) (bad) mov pusha fdivs jae jle lret cmp sbb and sub stos jb pop (bad) (bad) ljmp fnsave inc insl mov in sti in sbb rcrl or (bad) mov test pop add in push fdivl out stos (bad) (bad) push xchg lcall (bad) xor jnp pushf leave mov das jae lock aaa push std (bad) (bad) (bad) mov lds orl test out adc in (bad) (bad) pushl add insb push or adc cmc and rcr popa orl jno ret jmp mov mov in lock (bad) (bad) (bad) mov xor mov nop push into add ret aas push push js cmpsb add (bad) (bad) jmp lea inc sub mov outsb mov leave add jno stos mov lret decl dec (bad) cmpb lock dec or outsl cmp jmp fldcw or repz lods add mulb dec lds mov jno (bad) (bad) (bad) lcall aas data16 xor cs pop and pushf mov mov (bad) pop xchg sarb pushl std inc sub fimul add pushf adc scas adc sbb jns fnstenv (bad) jg mov inc adcl adc jbe xor ljmp out sbb lcall lcall hlt lahf aas mov inc push xlat loop aad pop loop ljmp decl pop jno stos in jge jns repz inc push sub int mov test imul cmp push or das xor outsl repnz bound enter cs (bad) (bad) incl add or xchg pop lods mov xchg xchg inc lret pop xchg xchg repz (bad) ljmp sbb std add jecxz stc loope imul hlt mov push in cli ss pop out and jmp fldt sbb ss (bad) (bad) lcall push pop into loop inc fistpll (bad) enter dec cmp push (bad) in (bad) decl xchg adc gs sbb popf not sub cmp or push (bad) decl repz aam cwtl ljmp stc or mov mov js pop dec in gs jns mov jmp sarl es xlat icebp lahf xchg pause xor mov inc aas ja push inc insb lds mov sbb mov lahf sbb jno mov fs mov sbbl (bad) (bad) (bad) ljmp (bad) pusha pushf pop pop jle arpl add sub test icebp ljmp and add (bad) test push jo mov jae mov js cmp inc je inc es fcomps add mov jmp in or sahf jb std lock jmp jmp mov imul lret incl jo scas out cmp cmp lret cmp ja (bad) mov mov inc idivl push mov (bad) mov dec inc push dec sub push cmp xor lods or mov and xchg adc scas cli mov arpl cli loopne dec movsb cltd dec cmp and inc daa and popa sbb ja js (bad) int3 sub fiadd cmp fprem (bad) (bad) incl mov test in jmp push out add dec pop and xor inc xor mov (bad) mov pop lea (bad) notl lea inc les roll add inc pop aas movsb stos push ljmp ds jae sub sbb and lea inc sub add xchg xchg dec dec mov (bad) (bad) (bad) jg js mov or add xor adc (bad) ja pop push xlat imul in add jge ljmp clc mov mov das test (bad) jno fldl adc push mov loope (bad) (bad) inc jg pop add movsl ss (bad) dec out xor stos out mov sbb mov scas jle dec pop xor (bad) cmp clc (bad) fild aam jg out xchg or lahf xor push ds jecxz (bad) (bad) ljmp mov loop add pushf mov aad jns cltd out dec jmp lock (bad) (bad) decl je insb mov mov jno lods cmp mov push cmpb call or je inc test adc (bad) (bad) (bad) lcall scas push jmp pop cmpsl push fs push lock cmpsl stos inc (bad) lahf out adc fild out jg push fidivr clc cmc xor popf ljmp movsb cmp sub fisubr decl push lods out ss notb cld ja or (bad) ljmp inc pop adc test call cmp pop xchg mov mov incl and cs adc cld xor cwtl adc (bad) jmp test (bad) aas popa or lahf pop mov (bad) mov lcall fstl jp (bad) jle or (bad) popf cmpsl and xor (bad) (bad) inc mov sbb (bad) mov (bad) xor adc jecxz jb (bad) (bad) (bad) fsubs sub jp xchg or dec ss test inc fs pushf push jb jbe (bad) (bad) mov js js rcrb or or orl (bad) decl xchg stos fildl (bad) dec pop test iret mov cmp dec ret mulb cli xlat ja das cli (bad) (bad) std xchg push mov xchg and in stos mov (bad) (bad) (bad) call push enter (bad) and mov aad fisubrl aad adc enter or (bad) (bad) jmp mov mov and outsl mov push xlat lcall pop (bad) (bad) (bad) dec fnstenv pop push movsl aad mov scas je or push pusha jecxz pop mov adc out popf pop push mov jne cld adc mov fcmovnbe cmp (bad) lcall sbb ds mov push mov sbb sub daa add mov clc (bad) (bad) mov ja cmp fmulp imul lcall (bad) (bad) jg sahf push add out lock jbe pop (bad) xchg dec scas daa push mov (bad) (bad) (bad) mov or cmp push outsl cli xor lds cmp pop stos (bad) (bad) (bad) call or xchg stos nopl fimull mov fisttp and dec xchg (bad) (bad) (bad) lcall test pop fnstenv loope js daa sbb (bad) pop mov pop (bad) (bad) (bad) decl cmc pop cmp dec popf inc or es popa dec out sbb push (bad) (bad) decl scas dec ret sbb pop in outsb repnz clc (bad) jo adc aad sbb mov inc mov or xchg cltd sbb xor imul (bad) incl out cwtl xor or jmp mov sub mov sbb ja (bad) (bad) mov pushf (bad) adc mov in jnp int3 div dec push es push xchg (bad) (bad) (bad) (bad) cli xor lret sbb mov xor fdivrp aas pop sub xor cli ljmp in add mov fcmovnu and push (bad) (bad) decl add mov pushf mov xor into stc add mov (bad) (bad) ljmp pop enter push test ret push enter into xchg sub in cmc fcomip decl sbbl cmp mov mov popf xchg mov pop (bad) (bad) fist shll cmp cwtl sub sar (bad) decl sbb xchg lods inc xor mov pop adc ja ds mov (bad) insl mov pop pop or jmp pop xchg stos cmc nop ja sbb jg push jge cmp ss jbe and mov mov imul pop inc pop popf adc icebp mov push (bad) ja adc xor hlt aas inc sar (bad) (bad) decl jl xchg movsl movsb mov sbb adcl (bad) hlt call add add (bad) (bad) (bad) call cltd nop dec outsl jne cmc in mov add jno mov imulb (bad) (bad) decl mov (bad) js push jnp test shrl sbb lods jno in xor test jg (bad) (bad) jmp mov or pop sub sub je cmc jle je adc (bad) decl add (bad) imul xor pop test adc gs int3 cmp (bad) (bad) incl fldt xor jmp fcomp mov icebp pusha mov incl add xchg lds or sub pop popa cmc pop and (bad) (bad) (bad) mov popf rcrl (bad) sub outsb insb insl push into jl test clc (bad) (bad) (bad) sti addr16 push pop ljmp je push call popf adc adc call mov mov es pop inc (bad) out pop add call cmp jb imul loop movsb mov (bad) (bad) incl cwtl xchg mov sub add aaa (bad) mov add leave xchg scas cli jg pushf cmc mov lcall lcall scas (bad) cld xchg pop cmp mov popf push add (bad) jnp xchg ficoml inc pop cwtl movsb pop out inc aad movsl int ljmp outsl fsubrs ds mov xor jmp (bad) (bad) (bad) (bad) fcompl (bad) faddl sub dec inc push (bad) push imul xor dec ja (bad) (bad) jmp and mov sub int3 (bad) repz push jp imul loopne sarb inc cli inc jmp cli push mov mov repz icebp pushl insb pop aam inc jg mov insl ds (bad) jg sub dec cmp mov sbb adc stos and ljmp and jl (bad) xor fild outsb cmp mov mov incl aad sub imul in (bad) xor mov daa js or pop in mov nop shl (bad) mov fwait pop jmp loopne (bad) mov enter xchg ret test xchg aad mov pop xchg call call mov lret jmp fistl frstor inc notb (bad) lcall jae int inc iret js jne jmp jne xor into fnstsw sub decl jbe push fs push ret pop push dec idivb or and (bad) ljmp sar call ficom dec inc nop push adc fdivrs xchg (bad) fwait into pushf scas call add repz push inc or pop mov (bad) (bad) (bad) (bad) call into je or aaa ja fs xchg mov cmp push ds xchg (bad) (bad) (bad) in imul ret rcr pop and push flds stos aaa xor mov cli imul movsb mov aam int int3 fmull xor dec pop les (bad) (bad) push push inc push and fstps push dec outsb cmp (bad) mov bound mov jl sbb in rolb inc imul dec call ret test insl (bad) and (bad) (bad) (bad) inc push std lea sbb mov aas lcall xchg sbb call ds mov out mov ja inc sahf sbb out sub cmpsb leave dec add (bad) jg sub inc add out mov push or data16 insb xchg (bad) (bad) (bad) decl pop ljmp iret jnp lock cmp mov scas out aad mov (bad) jmp dec jecxz jns mov and sbb fwait pop and mov cmpsl (bad) (bad) (bad) jmp mov jns rol adc (bad) cmp outsl pop xor adc fisttpll (bad) (bad) jmp inc ss ret push cmp ret ljmp and (bad) adc (bad) (bad) dec dec push lret mov aad cmp or sub repz movsb push xchg push jbe mov adc repz cmp jg incl rclb cmp js lret int3 sbb jb pop sub mov add jge divl xor mov outsl arpl mov adc push xchg mov dec dec stc jge lret fistpl add insl in xchg hlt loop mov test push out dec mov or icebp lret popf jae sarb repnz (bad) (bad) (bad) incl adc push mov pop jae mov mov adc shr es (bad) call jl cmp lahf sub ret (bad) lcall enter pop jnp inc mov cmpsl push cmp les cmpsb scas push pop repnz ljmp jg mov stos stc xor jmp xorb ret jg push dec or lret fwait xchg fcoml dec adc pop aam sbb test insl add add fs es (bad) (bad) (bad) (bad) cmp andb mov es sbb shl sarb cmp push xchg adc clc ficoml lret pop xchg in sbb sti jle sar (bad) (bad) jmp or mov out popa leave dec push xchg ljmp stos cmp in rol jle pop jmp sar stos pop sub (bad) stos cmp (bad) (bad) (bad) clc movsb (bad) fldenv scas adcl cwtl lods fbld daa push and add sbb lret sbb push inc cmpsb jl (bad) (bad) incl cmp xchg shrl jl test add sub or dec lea shl in xchg pop out js (bad) out inc imul out cs inc mov lret sti add (bad) (bad) call jp xchg or (bad) mov adc and cld fpatan dec dec pop inc clc cwtl scas cld push stos jbe cli or xchg mov mov std (bad) ljmp mov adc inc cs lock loope pmullw jmp subl jno test cmpsl inc mov ljmp and adc aaa arpl stos mov rcrl outsb push pop shlb pop movnti (bad) call loope fidiv cmc jl sbb or or mov sub fwait adc pop mov fcmovb je in je pop (bad) (bad) (bad) pushl adc sub mov jp and in or jecxz fstl (bad) (bad) (bad) (bad) sbb lods gs sbb adc jg stc sti adc mov out (bad) (bad) pushl movsb add movaps sbb and cli mov sti addb push xchg ret (bad) call mov fs dec pusha imul adc das ja add sbb push inc movsb aam inc fs (bad) (bad) (bad) (bad) cmp mov sub sub sub mov xor mov jg (bad) (bad) (bad) (bad) (bad) cmp push in movsl mov pop or ret loope push mov sub or adc push adc jg (bad) (bad) dec mov mov xor dec cmpsb mov icebp or out out mov mov cltd (bad) incl adc or push xchg push cli (bad) (bad) push mov pop insb test movsb icebp (bad) movsb cmp pusha fcmovb and xchg fidiv loopne pop jno and and cmc icebp mov dec mov push jg (bad) fcmovnu jle dec mov lahf test data16 mov (bad) pushl inc int3 insb mov sbb jno xor test mov test pop loopne incl lret sub jg (bad) in (bad) (bad) (bad) dec psrad (bad) jg inc pop data16 lcall jmp cmpsb sahf add dec (bad) push push lods and jne pop sbb push pop mov mov sti dec shll adc (bad) (bad) cmp jnp loop add fistp and adc inc fwait mov mov sub in loop jge clc pop sub ds lret or adc or (bad) jg push or sbb sbb jo in incl imul jge jmp ret and (bad) (bad) decl inc dec addr16 inc push ret nop mov icebp cmp pop loope js loop or cld (bad) (bad) jmp cmp lahf clc fstl imul ret std xchg (bad) mov mov jg and mov xor aad (bad) hlt xor pop hlt jmp cmpsb xchg cmpsb (bad) fcoms pop lret push loopne xor sbb (bad) (bad) (bad) (bad) cmp pop (bad) cld inc arpl mov jecxz dec pop and imul repnz sbb cli push cmp out push dec ds mov hlt jae (bad) (bad) call jno repnz pop imul test inc xor mov (bad) (bad) (bad) fmuls std data16 lahf shr std imul pop insb js gs cwtl jae inc sub je subb cltd sbb cmpsb ja dec jecxz jl (bad) (bad) ljmp lret pusha movsl insl incb pop mov push lea dec std hlt (bad) (bad) pushl in push call stos insb aad sti mov fwait cs xlat pop std dec xchg cld fbstp or rclb sbbl fwait dec mov and pop movsb inc hlt imul (bad) (bad) call leave inc push pop test push xor int3 push or xchg (bad) or out adc (bad) (bad) (bad) incl and jmp sbb xchg add mov int3 jno (bad) (bad) lcall fist pusha leave das dec imul lret push cmc dec iret pop mov cmpsb ss dec cli (bad) jmp mov push test mov mov (bad) (bad) cmp imul jo stc push cmpsb sub mov jns (bad) (bad) (bad) incl inc outsl into punpcklbw ficompl sbbl jmp mov push xchg adc (bad) (bad) (bad) ljmp les sbb dec cmp fnsetpm(287 or dec dec and or stos and pop bound cli mov sub ret mov fistpl jb movsl sub adc cltd bound inc inc push mov mov sbb (bad) (bad) mov fs clc mov mov xlat inc test test out jbe push sbb push (bad) push shlb ret mov push add ret call ret inc add (bad) pushl test jecxz loop andl mov icebp (bad) or mov shlb (bad) sub movsb cmp pushf xchg jno pop adc sub js and data16 pop arpl mov jg pushl fwait mov xchg cwtl mov xor adc stos cmp (bad) pushl jae sbb pop cmp and mov sbb cmp push inc sbb mov push push xchg pop in inc and jmp cld orb fcoms and nop (bad) test (bad) (bad) (bad) pushl ja fnstsw clc shrb jl cmc cwtl sbb adc pop jns add pop rclb (bad) decl jne xlat into ret push (bad) and in fs xchg (bad) (bad) ljmp call data16 test mov xchg dec inc movsb or dec loope sar push es adc mov or (bad) loope push cld fwait add lds jle inc inc inc jb (bad) incl pop iret mov fsubp repz sahf insb das (bad) out cwtl out jp,pt (bad) ljmp lea mov mov jbe mov push pop push sub in pop loopne sub xchg nop mov push adc ret (bad) mov fcompl xor test mov dec and leave sbb lcall inc and cld mov out add dec mov add fxch lds (bad) (bad) out insb clc sti inc ret sub or loopne in mov jmp inc ljmp das add cld fidiv add std (bad) jmp jbe repnz add mov gs xchg call pop aas lahf xchg (bad) (bad) (bad) lcall adc in call das lret pop stos sub sbb mov push rcrl pushl sbb out mov stos daa incb add adc stos inc sbb hlt inc xlat dec sbb push or int scas jp cli into ljmp ds sbb movsl pop push or nop add iret fimul jmp push xchg sbb inc add mov push (bad) (bad) ljmp (bad) mov xchg jne jo jb lret lods (bad) (bad) lock ljmp sub xor lret and insl rcrb mov jae cwtl enter push cld cld aam add insl outsb add lret int clc shufps mov mov xchg (bad) adc jno xchg sbb sub lret (bad) mov sahf enter mov sub (bad) (bad) (bad) jmp mov add pop mov loopne sbb into sub sar (bad) jmp into inc push int jnp mov hlt xor sbb das (bad) or mov (bad) incl mov jbe hlt and lock sub cmp push inc add scas (bad) mov pop mov push movsb daa out and dec addr16 (bad) loopne or aaa dec push gs sahf frstor fmull cmp lahf mov add mov push es jne repz hlt push (bad) (bad) (bad) (bad) fisttp lea jns das and ljmp jno mov movsb mov (bad) ljmp sub cld pop neg pop or xchg jae ja in (bad) (bad) incl adc std insl ret inc icebp push (bad) repz aas mov mov (bad) (bad) jmp mov dec in mov and enter inc jnp sbb cltd xlat popa and loope jg inc ds scas add push (bad) in vmaskmovdqu mov jb (bad) (bad) call in jmp mov insl mov lret out addl push test (bad) (bad) mov jnp outsb sbb popf push push adc jnp mov cmp (bad) (bad) call push inc mov out xchg ds lea insb or out ds outsb mov (bad) (bad) mov add xchg cmpsl mov pop sbb mov pop lock incl sahf sub das in push pop loop mov sbb rclb add or shlb aas add sbb xchg je (bad) (bad) ljmp xor mov nop mov mov inc loopne jle pop clc int (bad) jg ds mov fwait loop push in sbb add into inc pusha std aad sub aad aam push call outsb push (bad) (bad) fisttp xor xor arpl add xor (bad) xchg mov cli jb aam add lret dec mov mov (bad) (bad) lcall aaa xchg jecxz push mov leave adc out ret jmp (bad) (bad) jg gs xchg in jne movl mov cmc ret pop movsb ds or ret sarl dec xchg fwait jnp (bad) (bad) (bad) decl push lret xor sub lea jge xor mov xchg test sahf jl pop data16 cmp idivl (bad) (bad) (bad) ljmp ds mov or test dec push popf sub aas test push (bad) (bad) (bad) decl call aaa add cmp cmp pop mov xchg dec and icebp push std add or inc shlb aam ficompl jle (bad) (bad) (bad) ljmp dec js int inc jnp xor and push push push repz imul pop inc (bad) lcall sub cli test test mov je int lods adc std add adc (bad) incl adc xchg fcmovnu and fucom xor and sbb jg jns pop push das mulb dec sub mov sbb inc push cmpsl cmp daa jbe (bad) (bad) (bad) ljmp mov cmp cmovs xchg xor adc or mov cmp fdivl incl fs cltd lock fldcw loop out inc clc jmp jp sbb nop xchg jp xor sbb (bad) lcall add add shl loop jg mov ficoml dec push add cs push dec mov cli insl push pop pop (bad) (bad) (bad) decl add insl (bad) mov and (bad) mull mov and (bad) repnz cli (bad) (bad) ljmp std jnp test inc add cltd xchg mov push out sbb outsb stos js (bad) call dec ds imul mov push adc push and adc jl iret mov pop xchg fs push ror mov test ret ret mov mov fmull cmp (bad) (bad) push sub push dec pop inc xchg jecxz xchg lock or mov negb and (bad) xchg cld (bad) (bad) (bad) mov push in mov and rcl mov ffree fcompl lcall ja inc cld xchg jo mov aas sti (bad) das and sti daa clc hlt addr16 (bad) (bad) (bad) call and lea stos (bad) (bad) mov push jne xchg push enter das (bad) (bad) (bad) incl aas lea inc mov es lock pop sbb jg or cmp (bad) (bad) (bad) lcall jecxz dec add inc out lret movsl std mov lahf dec inc adc dec pop push fcmovnb adc (bad) pushl dec scas or adc in xor sub add leave push push jmp mov push test push sub daa cmpb es fwait add (bad) (bad) into lods pop outsb rolb xchg mov (bad) pushl aam fldl lret jmp pop (bad) lret sub lahf sbb mov cmpsb mov sahf aas cs lahf imul frstor cltd arpl inc cld mov inc out in xchg mov orb add decl adc jp inc (bad) mov das sub and stc in loope dec sbb fs stos fs aaa push sub (bad) call mov sbb adc inc dec imulb roll inc std jge jo and (bad) (bad) (bad) call mov pusha jns xorb jne or gs in mov imul inc xchg outsl (bad) (bad) jmp movsl rcrb jg and adc test sarl pop jo mov mov clc and add stos add test daa repnz scas in (bad) jp es (bad) (bad) pushl sub icebp push scas movsb sti mov arpl insl add add das sar loop mov call (bad) (bad) jnp daa sti pushw (bad) jae sbb dec (bad) cmc mov xor movsb inc cli (bad) (bad) cmp mov cld pop (bad) aad lret mov rorb test push ds and inc xchg aam inc xor xchg (bad) (bad) ljmp mov out fld bound outsb lds cld in or jp in jb and (bad) (bad) (bad) (bad) (bad) jo sbb sbb mov add push rcll pusha inc cld into cli inc repz pop imulb sar sahf into jbe adc dec outsb call (bad) sti cs mov out add (bad) sti popa inc push push movsl dec sbb fsts jp bound aad xchg push push neg adc call cli (bad) jmp jne loop cltd pop cmp je daa lahf xchg push sub mov xchg xchg inc push push jnp add pushf jg pop call or insb test jbe mov xlat and sahf ds stos test mov sbb (bad) (bad) (bad) incl arpl movsb sub inc and sbb xchg adc rorb fcomp cmp mov add jle outsl clc (bad) (bad) mov ljmp sbb ret pushf sbbl fisttpl mov (bad) mov xchg lock decl add mov or (bad) (bad) (bad) (bad) out ds push js xchg out ljmp adc lds push test mov or rorl fsubs and cmpsl loopnew clc cmp jae lock (bad) decl jns push xchg je aas js or dec xchg inc mulb lods scas mov aaa (bad) pop mov ret mov repnz sub dec jge pop sarl daa (bad) jb idiv lcall aas cltd sub ds and xor cwtl das sbb push orb push push push lock ljmp int3 mov movsl roll mov mov ror cld adc fdivrp (bad) (bad) call out adc push roll inc repz mov and sti loopne sar sbb push (bad) (bad) (bad) inc push cmp call inc pop sbb push cmp mov push movsb pop aas loopne and (bad) in cmp jb mov out push inc ja dec insl or aam insl mov call gs roll xchg sbb mov xchg sbb xchg cs lcall mov cmpsb or pushl cld aam pop cmpsb xchg test les push mov sbb push (bad) dec cltd iret into and inc mov inc fcomps pop repnz add sahf jmp jb sub (bad) mov cmpsb pop outsl add jb push jns inc or xchg add lcall jle or jg fdivr and aaa add das je ret jnp in (bad) idiv (bad) (bad) (bad) decl frstor cmp (bad) adc pop lods push outsb pop mov xor or dec mov (bad) (bad) incl sahf repz xor rcll xchg (bad) dec adc add push (bad) incl cltd jge and gs xchg cld out mov cli ljmp (bad) lcall cmp sti push or testb cmpsb loope xor add cmpsl pop mov cli test sub (bad) mov fcoms xor cmp mov xchg in out inc cmp (bad) (bad) (bad) ljmp cwtl mov push xchg jnp xchg ret xchg inc int3 or mov hlt (bad) ja jle push scas movsb mov ds push fistpll inc mov cli mov xor xchg loop popf cmp push sbb dec lods xchg pop jnp pop jmp imul mov (bad) (bad) (bad) call int fiadd icebp mov leave mov test jmp sbb (bad) (bad) (bad) cmp std scas std push xor sbb hlt dec or (bad) (bad) ss mov cmp or pop cmpsl jne scas shr push cli push adc (bad) insb sahf sub hlt (bad) jmp mov or shr mov mov cli decl xchg (bad) dec xor dec popf mov popf cli inc lds mov ljmp fcomip (bad) jg loop dec mov stos icebp lret fsts enter dec dec or call xchg (bad) arpl mov imul cmp mov (bad) (bad) lcall cmpsb imul cmc mov cmc mov and jnp (bad) (bad) incl mov rclb mov push js mov lock cmp or loop ljmp adc fimull pop mov test cltd mov or mov lret movsl imul sub fdivr (bad) lcall mov mov xchg stc shr stos mov jae (bad) mov (bad) je xor mov mov inc cmc cli pop (bad) mov mov (bad) pushl and jge mov out fdivrp fcmovnb out adc ret jecxz xor out cmp (bad) (bad) (bad) mov lret call enter in push mov xchg mov test inc xchg xchg mov (bad) (bad) incl mov and outsl pop decb jne fisubrl cmp jnp lods lock mov mov dec in push in addr16 outsb mov add incl pop xor push cmp sub mov (bad) ds mov lods add mov (bad) (bad) ljmp mov push xrelease add outsb inc mov out add add shrb ss mov jo pop cmp icebp (bad) (bad) (bad) pushl scas xor mov int3 es adc xorl mov jle mov lods push dec int3 fildll inc test movsb ss push push mov clc pop add (bad) jmp lods lahf fwait loope sub add cld cs adc xchg jns sbb loopne ret pusha sti pushl es push xlat test dec xlat cli cmp adc (bad) (bad) pushl sbb (bad) cmpsl push mov lret push jno outsb xchg jge fmul rcll push (bad) (bad) ljmp scas push nop lds neg xchg out rol push jmp adc jle xor (bad) (bad) (bad) inc in jns stc ss cmp mov shrd hlt lea add xchg mov inc mov (bad) (bad) (bad) dec ret mov mov sarl shrb mov or mov adc idivb or lretw clc test mov sub cmc jle lcall dec add (bad) (bad) in int mov js jmp xchg (bad) (bad) (bad) ljmp cmp push aad repz js dec fldenv mov xchg push sbb cmp repnz xor pop xlat (bad) (bad) jmp fildl xor xor dec pop inc test sub (bad) (bad) call int3 or push arpl les out in je jl mov cmp stc imul push mov push jl (bad) (bad) (bad) lcall in fnstenv popf xchg loop add add jno pop sub dec cmp (bad) (bad) (bad) stc mov dec jne mov movsl pop lock xchg push sahf sarb fdivrl (bad) cmp jg movsl cmp leave iret insl jo fistpll arpl mov test imul (bad) and inc mov cmc repz xchg lods cmc scas cmp sahf fwait cmc test stos push sub cli jno (bad) (bad) (bad) push fiadd cmp cmp test or xchg fnop and out adc mov mov (bad) ljmp lret stos mov popa inc daa int cmp or jbe add sub (bad) (bad) (bad) lcall sbb jo aas sub lahf fidivl mov sbb mov faddp sub lcall lcall push mov test lret repnz jle pop cmpsl (bad) cmp inc xor push mov (bad) ljmp rorb sub sub cmc fsubrs lret pusha mull add xlat (bad) (bad) pushl js add stos pop inc adc stos jecxz mov mov jmp mov adc mov xchg jb add jmp scas inc and (bad) jge ljmp cld insb push pop mov push and xor rorb xlat das mov rcrb ja add popa xchg ljmp mov in mov (bad) xor pop mov daa jb and and sbb dec sahf decl sarb cmp push (bad) in in scas cmp adcb xor ud2 adc xchg dec cmc lea outsb add cli out (bad) (bad) (bad) jmp dec rcrb aaa stos push xor fisub sti test fs dec ret (bad) (bad) (bad) jmp cmc inc adc add sarl lods mov cmp enter sahf loopne adc (bad) inc cmp popf das fwait lea jmp addr16 mov add lcall or cs jno out dec lcall ljmp adc or cltd mov jmp popf mov mov push (bad) lock test and inc inc or (bad) lcall push sbb push sbb pop jl ja in movsb rorl xor cmpb sahf loopne pop fs or insb cmc cmp dec push dec (bad) (bad) call sbb stos out fs lahf insl mov xchg cs mov xor sbb inc stc mov jp push lcall cs sub in (bad) (bad) (bad) mov fisubl sbb rorb and mov insl cmp pop lock ja enter call std mov jns mov and leave sub decl (bad) (bad) aas fidivr adc and mov cmpsl aaa dec inc (bad) sub repnz (bad) (bad) ljmp sub sbb sar sub cltd and imulb in dec mov (bad) jns sub decl inc mov insb mov mov mov iret cltd (bad) (bad) lock lret (bad) push loop (bad) lds outsb loope mov (bad) xchg xchg mov xor clc lcall (bad) pushl pop jo (bad) jno sarl (bad) xlat sub push fldenv sar mov mov xor mov or (bad) (bad) (bad) call aam or ret mov xor das test cmp out test arpl (bad) cwtl cld js (bad) (bad) (bad) jl inc sub push iret shlb sbb adc xchg add dec or cli cmpsl ret push mov (bad) (bad) decl inc lds sbb imul in push xchg inc stc fisubr out adc std loop (bad) (bad) jg or clc (bad) jmpw pusha scas and adc jb push ljmp mov outsl mov mov xor cmp fwait xor test sub inc call adc ss push ret pop mov pop (bad) ljmp rclb fistpll in mov call cmp test adc xor or je add call xchg rcll cmp or adc mov sub xchg push pop mov sar add das mov sbb movl adc (bad) (bad) call movsb mov (bad) xor and xchg mov ja mov pop fisub dec lods rcll and loop pushl (bad) fbld xchg leave ret dec pop push jl mov mov popl les roll std jg and sbb push bound in adc arpl mov std test mov mov nop ds sbb enter (bad) jmp lock sbb jg (bad) xor or clc inc ficomp jge (bad) (bad) lcall into cld shrb leave add pusha sbb dec outsb lret data16 mov inc jg mov ljmp inc sbb (bad) and sahf sub cwtl xchg jmp ret scas ljmp push enter les (bad) ljmp mov sub test (bad) pop mov (bad) (bad) decl push negb test test push dec mov push mov (bad) fidivl jne mov push or ljmp sub scas arpl mov pop add adc ret inc jl gs ljmp xchg jecxz mov repz leave aam (bad) (bad) lcall xchg dec (bad) jle jnp cmpsl pop inc pusha rcll xor pop rcrl (bad) call and cltd mov inc sbb dec and (bad) (bad) lcall mov xor pop and add popf (bad) (bad) (bad) jmp adcl iret pushf push repz xchg lods lods dec sub sbb jl xchg cmpsl arpl mov jp inc inc sub pop and push jge sahf ljmp jecxz add test jecxz incl fnstsw or and mov xor (bad) fistpll movsl pop fild lods test sub jns mov leave cmpsb in loopne (bad) jmp or loop int3 cwtl mov out inc int jns pop xchg mov pop decl or out addr16 cmp subb call (bad) (bad) (bad) mov into outsb stos adc loopne in inc ja fbld nop dec cld jae jg test ds sub pop fistp pop rorl aas ljmp cli lcall cmpsl dec lret xchg fldt sub test ljmp jecxz jp movsb inc inc popf mov pop xor lea daa inc fiadd inc repnz pop lock aas dec jg je ret incl pop int3 jae cs sbb (bad) (bad) (bad) pushl sub lea fidiv xchg movsl inc aas xor push dec dec mov jg pop inc cmpsb and jo ja incl cld mov stc mov fdivrl out xchg mov out mov mov dec out daa (bad) (bad) (bad) decl mov movsl sbb stos xchg inc adc iret fisttpl loop mov lret fldt jmp fisubr sub int3 push popf dec sbb aaa js int3 xchg push mov (bad) pop popa lods cmp (bad) (bad) std pop push call test sub fimul cmpsb inc fildll repz mov arpl (bad) jmp andb xor ret inc lock cmp jmp sub pop pop (bad) (bad) mov fnop imul and jle out shrb adc (bad) jns add jmp bound sub jecxz sahf mov lahf stc pop or (bad) incl ds adc and pop mov sub out arpl loop,pt inc fnstcw cmp fsubl in push fwait imul xchg hlt and push add jecxz,pt (bad) (bad) (bad) (bad) fbstp cmc jb daa cld pop dec inc dec loope and test sbb (bad) ljmp jo ss cmp xchg lea imul adc mov jno and add mov mov mov nop popf dec mov jbe add lcall repnz (bad) (bad) call rsm add mov fdivl push mov popa mov int (bad) out xor rcrb jbe movsl imul sbb cmpsl mov lcall inc mov cmp inc pop call pop in cmp (bad) (bad) (bad) (bad) clc std add scas (bad) fdivrl xchg and xor sub icebp mov mov cmc (bad) (bad) jnp jle cld ret insb aas loop leave xor in (bad) incl ficomp mov les cmp leave dec jecxz stos add movsl lcall addr16 sahf fimull cmp (bad) (bad) incl push loopne jo adc ret pop iret dec arpl in sbb cs ljmp add ret mov dec xor (bad) daa (bad) (bad) (bad) decl xchg lods xchg orl push mov rcll (bad) das int3 test pushf dec clc (bad) ljmp jns pop mov jmp fdivl inc dec inc orl sbb jg pop push (bad) cmp aaa fildl pusha or je or push sbb stos cli fmuls mov gs pop fwait jno (bad) jb lret lea call incl inc mov clc sbb adc ljmp sbb jle jmp sti and sbb loopne (bad) (bad) pushl pop xor push xor mov jb lds and fsubrs xchg or insb test outsl (bad) (bad) jmp stc inc inc lret std scas data16 push and clc (bad) scas cli (bad) lcall jge or repz push cli lods inc insl bound sub jp icebp clc sbb jb adc out stos jns push fimull xchg popf (bad) pop fnsave clc (bad) pushl jnp stc cld sahf out mov dec push stos sarb lahf jmp sbb mov mov addr16 xchg dec mov pop hlt lcall mov sbb lret std mov dec jp or adc decl or (bad) xchg and jb das popa mov ljmp int3 and pop mov mov es test or mov call fildl mulb pop aad fwait sarb (bad) (bad) in jbe inc pushf dec and push fcmovnbe jmp pop (bad) enter imull out cmpsb imul das into (bad) and mov loope int mov (bad) out mov push (bad) mov loope mov das clc lcall jns out jno xor test shll mov idiv addb mov mov push fimul jnp mov sbb jbe mov idivb fistl mov xor push push fcomi decl mov add mov lea jg std mov (bad) (bad) (bad) (bad) call sbb push jg fild or imul sbb hlt sbb out lock in imul pop inc jno out scas cmp fstpl pop sbb nop add pop dec popa or lds test loopne sahf jg dec cwtl mov cmp or ret jl loope mov and xchg cld into (bad) (bad) mov adc ds arpl xchg js sub shr jno pop rorb cmp push sub or or sub fcmovu in lahf fdiv mov or fisubr mov and repnz fcoms adc bound mov mov and jle lcall test sub add (bad) (bad) lcall out mov jmp lahf mov xchg adc mov loopne (bad) cvttps2pi mov pop hlt (bad) call mov popa arpl push loopne (bad) fcmovne lcall (bad) call xlat inc mov xor xlat sbb sbb es jle scas cli jg test subb (bad) and ds das and cmp pushl mov fmull jo addr16 pop les adc jo ffree or ljmp pop cmp xchg xlat adc mov (bad) push push adc push loop inc (bad) pushl lcall mov (bad) xor fwait mov jno (bad) aas rcrl jg ja xchg xchg sahf jne (bad) or cmc cmp inc sbb inc adc ds aaa clc pop cmp jle (bad) (bad) ljmp inc loopne sbb es hlt out flds mov mov stc or das cli decl loopne shrl xchg jno mov and jno inc or mov ljmp sbbl repz movsb cmpsl mov call push push incl jne or inc repnz (bad) push push jle (bad) push mov incl je push outsb or cmc push cmc mov cli or repz inc lret lods (bad) (bad) lcall cmp jne (bad) fnstenv sbb push das xchg mov icebp adc push mov ljmp dec sbb movsb sub fcoml add (bad) stc mov add sbb scas jg xor stc lret inc loope,pn jecxz inc xor imul ja inc por in inc cld ror or adc mov inc push in scas fcoml sub incl mov push notl movsl les lods jae out xchg faddl mov lods add sub adc jne cmp xchg je mov add ss inc idiv repz out and (bad) (bad) (bad) jg xor ds push test into pop or rclb ret mov xchg decl movsb xchg pusha mov xor (bad) (bad) incl xorb or popf dec or cmp in mov inc and (bad) (bad) jg lret jge aam (bad) loopne xchg and movsb mov std jmp daa pop (bad) pop pop xchg out aam (bad) (bad) call sbb dec lret xor shlb fmulp cld cltd call sbb fwait (bad) mov push js mov (bad) (bad) (bad) jmp xchg pop add sahf pop jne jbe (bad) mov add mov call xchg jno cltd (bad) mov dec jmp das hlt pop iret pop (bad) idiv (bad) (bad) incl cli mov int3 imul jecxz pop int3 icebp loop movsl adcl push jmp out clc (bad) fmull in gs mov jmp adc dec call pop add inc mov mov xor cmp mov in aam (bad) or cmpsb (bad) (bad) (bad) call ss push mov and std mov ficomp (bad) (bad) call sbb and xchg jle pop pushf adc adc mov xchg test fsubrp or and incl sub jge div popa mov (bad) (bad) (bad) ljmp jne test cmp mov jae push ret pop repnz cmp (bad) (bad) jmp cld dec jge push or aaa mov rcrl cmp lods lock ljmp push ds dec lahf call lcall mov adc dec mov jne xchg notl or lcall sahf enter int3 sahf (bad) decl xchg sub in jle xor sbb cmc xchg jno (bad) (bad) call push push mov popf push hlt jne in rclb adc or xchg int3 jne std decl add and or push pusha dec iret out push (bad) testl rclb or inc rcrl cmp (bad) (bad) (bad) fcomip xor enter insb jae (bad) ljmp cli push adc pop pop pop (bad) cltd dec mov hlt loope or (bad) jmp repnz imull int xchg test cmp nop mov xor rcrb (bad) std (bad) (bad) dec lcall and xchg andl data16 (bad) (bad) pushl sub int sbb mov in (bad) or repz ja sub pop add xchg and mov test mov jmp aaa inc gs sub icebp dec (bad) (bad) (bad) call sub pop leave movsb (bad) jbe xchg push pop mov es pop jge sub jns gs mov adc sahf xchg xchg cs push adc jmp notl cld (bad) sub add mov daa mov rolb push inc pop aaa or (bad) repnz pop (bad) (bad) (bad) jmp fucomip jp sarb and xor xlat mov ja jecxz push mov ret outsl js add jp sub adc mov in jnp insb lods pop xchg dec je inc sub (bad) (bad) (bad) ljmp cmpsb push aad mov aas ret jge jl xor push cmp mov push mov push push lods movb (bad) in (bad) (bad) (bad) incb mov mov xor add mov inc adc jnp (bad) mov jge iret sub pusha clc xchg mov mov (bad) (bad) (bad) (bad) stc sub insl or (bad) or outsl add dec sbb push mov (bad) (bad) lcall lds mov sub hlt xor gs jns or clc pop outsb pop hlt mov push shr repnz cmc adc sub push adc (bad) (bad) dec add fsubr adc pusha ret xor push add into inc fptan add sub (bad) jne scas mov add std pop data16 inc imul jmp mov and das lods leave and leave adc and push dec cmpsl (bad) adc pop hlt incl fild cmp repnz aad mov mov (bad) js out push mov xchg push jmp push lcall push aad xor stos (bad) (bad) (bad) jmp pop jecxz test add push adc lret and push pushl push or outsb ds aad push fcmovnb jne cmp popa hlt mov fcomip (bad) aas leave str (bad) jb int3 adc (bad) add xor or dec (bad) fildll cmp js mov call cwtl (bad) (bad) (bad) push jbe cld pusha shl lea int3 mov dec test icebp mov (bad) (bad) (bad) incl or cld push mov inc and pop and iret bound inc add adc dec pop (bad) out cli jmp mov and push cmp dec xor fadds aam popf add or xlat cmp jg (bad) aas adc xchg cli aad sub push mov cltd stos (bad) mov add gs clc (bad) fistl fild int3 roll dec adc xor and (bad) (bad) jmp mov scas mov mov movsl jge stos call xchg mov fldt mov shl mov loop popa pop pushl mov push cmc mov jae fdivr (bad) (bad) fistpll sub adc (bad) and jne or in fistpl xor (bad) sbb mov mov repz mov (bad) (bad) (bad) call test jecxz adc mov push fsts popa sarb sti push push ret cmp (bad) lcall xchg adc xchg aaa shrb jae scas test sbb in cs idivl js lahf mov dec aas inc adc pop ja and (bad) (bad) (bad) std pusha ret or jg and lret aaa dec push cmp mov sar (bad) (bad) pushl (bad) pop mov (bad) xor (bad) cmp lahf stos arpl (bad) jmp sub pop sub out push out mov inc mov adc sub or roll xchg into add scas in and (bad) bnd xchg in es pop mov cltd pop cltd jnp call or (bad) pushl shlb push sahf push sbb add jno idiv (bad) mov outsb or xchg push mov mul xchg lods icebp shl (bad) imul loopne jns xor (bad) ljmp xor dec hlt xor sub add and fcos (bad) mov cmpsl jb mov dec pop std (bad) (bad) fmull adc xchg pop ljmp aad aas pop aad pusha push and cmp call jecxz sti lret jecxz or xchg push xchg or lea jle pop sub dec xchg jne clc das cli mov push pushf xor test xor push rorb out xlat decl fwait mov fcomp or (bad) (bad) jg jnp mov push int sbb xchg jnp jo ret xor pop jl rol ja cwtl popf push vpsrad in mov (bad) pushl ds out mov and out aas std fldt cmc and std push pusha lret xchg sahf or or (bad) out cmc inc (bad) xchg imul ret pop ss (bad) (bad) fcomip (bad) leave scas dec (bad) sub lods inc adc lahf jecxz mov adc mov clc (bad) (bad) (bad) cld movsb push mov sub sbb sahf xchg dec aaa pusha mov push push cld jmp sbb mov call sub addr16 movsl pushl pop adc sbb xchg ljmp loopne,pt inc sub mov add cmp mov mov push mov mov adc jp (bad) jg sub (bad) and dec movsl or mov jmp or std xchg jl push xor jecxz (bad) (bad) incl stos ret insb or or sbb add jge lods js cld outsb xchg in jecxz or pop push push fwait add out inc aam push adc pop dec fcomps repnz stos stos inc sbb (bad) (bad) call aaa adc lods out jbe test xor (bad) inc inc push ja (bad) add shrb (bad) ljmp jp addl and imul scas test mov lcall incl and popa or push mov push mov movsb cmp dec ljmp xchg fbld adc and (bad) (bad) (bad) call lods in or pop xchg dec mov mov sbb aaa repz push pop pop rclb add push inc pop pusha mov (bad) (bad) (bad) fsubrl jge ljmp xor xor popa push gs mov (bad) (bad) decl sbb xchg in int3 insl cli jbe in outsb mov push jle push sub fimul out clc loopne dec popf inc pusha lods fistpl or jne add cld add xchg mov arpl lcall push ljmp push xor inc mov iret jnp imul lods ret (bad) jmp lret xor insb insl fisub (bad) (bad) (bad) fcomip stos rcrb pop lcall xor pop dec ret incl call sub incb mov shrl push pop (bad) fs leave fiadd incl xchg mov jb dec es test test xchg pop mov mov (bad) jmp es sbb or scas nop pop lods fdivrl or add (bad) decl mov fdivrl cli imul hlt push (bad) repz jo push xchg mov xchg (bad) imul (bad) aaa push cli mov mov pop inc sub add mov (bad) (bad) (bad) out leave mov dec sbb les sbb pop jge mov pop dec sbb lods mov call pop lea in insb clc pop mov mov je add or cmp (bad) (bad) jmp aas (bad) xchg pop pop mov repz shr movsl (bad) lret or std icebp (bad) (bad) incl mov mov out xlat nop jbe pusha mov cld jae jecxz out dec inc scas ja (bad) (bad) (bad) jmp mov add pop out pop inc in cmp jge add outsl js mov jge stos jg ljmp testl xchg (bad) ljmp xchg mov xchg fcompl adc sti int3 test mov pushl dec decb in pop xor cltd subl xchg ljmp adc push imul loop adc push dec addr16 push dec fs (bad) dec xchg jl stos in cmpsb jb fs lcall dec jle dec push (bad) decl push mov enter rol ljmp and push (bad) fdivrl incl cmp mov cmp mov dec jmp lahf cmp fs mov arpl and fcompl sbb (bad) jg push ljmp fs fstl fldcw mov lret mov push hlt stos ss stc outsb loop (bad) mov rcl inc mov jg (bad) (bad) (bad) decl scas or sub (bad) addl addr16 sub enter mov ljmp sarb mov inc xchg cmp rorb (bad) (bad) (bad) pushl mov in es jo fwait ss xchg gs add daa (bad) (bad) in (bad) fneni(8087 lds and inc stc push aad (bad) std div out sbb (bad) (bad) pushl or stos sbb adc es ds dec aam dec jp pop cmpl mov push cli add xchg ret sbb and jmp push (bad) (bad) (bad) lcall call daa adc (bad) cmp xchg sbb push sbb ficompl cmp (bad) mov hlt loopne lret dec test cmp mov (bad) (bad) (bad) (bad) aas or lret push sub jb cmp xchg inc scas sub and (bad) (bad) (bad) call mov mov jo dec adc idivb xchg movsb fist jp sbb (bad) (bad) pushl lret inc mov and test jo add call jbe orb (bad) (bad) incl adc and stos cmp push lret jnp sub cld fild out jno out ja add or add adc xchg inc mov jg (bad) ljmp xchg cmp fnstenv push and mov fs jnp imul xchg out mov jmp cwtl dec pop fs push ret scas mov dec cld pop add ret loop hlt pusha shll imul stc cmc sbb dec out sahf fstpt loop insb ss cs mov sub jg jle jecxz or pop clc dec and add cmpsb adc mov sarl test fstp stos pop test (bad) mov cvtps2pi mov mov pushf (bad) push jae inc push pop pop imul loopne lret add sbb cmp jl test (bad) ljmp insb cmp ror push dec mov cmpsl xlat iret mov ss (bad) cmp lock call and aad (bad) xor mov sbb test gs hlt js call lds mov inc inc cmp scas inc (bad) (bad) (bad) (bad) lcall (bad) sub (bad) push out or aad fcomi (bad) add dec xchg or (bad) incl lcall xchg dec ret dec std push fisubr fs (bad) pushl xchg sbb les ljmp and nop add seta dec dec xchg mov int3 jb (bad) (bad) (bad) decl mov outsb mov cmp ficom sbb push (bad) or inc fnstenv dec mov fadds decl pop jbe mov inc xchg sub (bad) (bad) (bad) ljmp jge aam push aas jnp xor rclb out adc ffree or sub push (bad) pushl jge (bad) cmp int sub (bad) and cs icebp inc jg (bad) call cmp sub rclb mov cld mov cmc pop sub repnz jno imulb sub gs daa push mov adc fsubrl int3 mov push sahf (bad) inc (bad) incl je pop ret sbb xor mov inc int3 fld add lcall xchg and and scas sar call jno mov outsb lods mov mov (bad) (bad) lcall sub shlb aad jbe int3 std aas out scas jno fwait mov je xchg mov incw mov inc punpckhbw jmp inc pop sub and mov pop jae add decl pop lret lret fs mov rcr sbb leave ret shrl test pop jecxz jl and or into mov pop inc adc (bad) std call ds scas adc push xor lods jne jno pop cmp (bad) call (bad) dec leave sbb fisttpll mov ret rorl and xchg lret out inc jg (bad) ljmp ret sub imul xor out dec and jl dec jno push (bad) (bad) (bad) jmp mov cpuid inc cmp xchg cmp fidivr rcrl int3 and out cli mov cli cs mov (bad) fidivr lahf push and pop inc or ljmp jp outsl fmuls enter decl jp rorl lret or adc pop push jge stos sbb insb sarl xchg bnd mov outsl xchg xlat mov shll dec ds in out (bad) lcall mov mov sub hlt push jmp shll rcll cmp (bad) fbld lahf out dec push and and loopne out aad loope (bad) ljmp dec push jg test sub in in dec out (bad) (bad) (bad) mov cmp inc xchg enter outsl xor std mov gs xor sbb ja rolb cmp push mov addr16 (bad) (bad) (bad) pushl nop jo lahf (bad) imul mulb xor sub xor cli jecxz mov test gs lea ds mov inc and ljmp mov sarb (bad) (bad) (bad) dec out or into outsl jl bound (bad) ja stc in mov push stos sarb (bad) incl scas movsb pop jg inc mov sbbl negl inc jge push pop popf and mov fwait mov inc arpl frstor clc (bad) mov inc out push sub ds lahf leave or inc andl clc popf (bad) lcall and or xor aam xchg ficom mov lahf inc adc pmaxub mov and sti je add mov jnp decl lock cld roll mov cli cs jg cmpb (bad) xchg mov mov adc lret mov pop dec call or mov sub (bad) lcall or data16 xchg sarb sub lcall incl arpl enter clc mov add ret jb mov outsl jp ljmp insb push push arpl addr16 rclb mov loop lret pop cmp pop mov and arpl ljmp loop mov repnz mov or push iret adc mov fldt (bad) (bad) (bad) jmp jae inc lock scas mov test je cmp sbb jmp (bad) (bad) (bad) jg sti mov sub mov loope nop cs (bad) sbb jp jp icebp cmpsb mov inc mov mov inc mov mov neg push inc outsb jae (bad) (bad) (bad) pushl pop (bad) fmull pop jmp rorb add cmp imul scas cmp lret sub (bad) dec xor cld mov fimull es sbb call pop test mov test xchg lock repz or jecxz (bad) lock or in sub sar repnz (bad) mov int3 pop addb loope call out dec arpl mov arpl rorb xchg mov cwtl lret inc sub outsb sbb fsub hlt (bad) (bad) jmp ja push or xlat (bad) stos and push jmp jmp push cmp decl ds (bad) pop (bad) sbb push cs dec outsb (bad) (bad) (bad) (bad) aas ret inc cs inc repnz pop mov dec fstpl (bad) jns outsl clc (bad) pushl stc xor syscall sbb cld not lcall jmp or xor mov dec mov xchg mov js (bad) (bad) lcall imul js (bad) adc aaa lods stc jl or push mov out cli ljmp int jns inc ret test imul in imul lcall sbb int in mov (bad) lods xor addr16 push lods std (bad) (bad) call cmp push nop sahf and into inc out fidivl cmpl es (bad) mov mov mov dec stos sub sub (bad) (bad) (bad) call idivl lret cltd loopne xchg sti stos and push lret addl jg jne out les sahf inc insb push popf std jns sbb incl pop sbb out or jl sub sub mov (bad) call test mov lret jns test xchg ja mull push (bad) (bad) (bad) incl fdivs push pop mov aam (bad) (bad) cmp lock insb in arpl add test idiv arpl lret inc and pop (bad) (bad) (bad) lcall cmp mov xchg fcompl (bad) jb mul lea mov mov lcall insl mov jae ja into inc and push mov ss or outsl cmpsb pop aam and icebp adc das jg and js and pop cmc test sub pop fs jne and inc xchg icebp (bad) cmp jg push arpl (bad) inc xor hlt sbb adc cmp mov (bad) adc daa fidivr (bad) call xor das sbb mov push (bad) popa orl ret (bad) (bad) (bad) jmp jl imul outsb bound cmp sbb out pop bnd pop pushf lahf mov jg (bad) lcall aas ret or mov mov (bad) mov inc xor fwait nop (bad) (bad) (bad) incl stc inc fldt nop je or push (bad) xor rorb flds push and fisttp pushl out xor dec sub shrb (bad) (bad) ficompl daa or es cmp inc mov sbb movsl mov fisubrl inc ljmp jl mov loop lea (bad) lcall pop in enter xchg test test inc or into lods cmp mov movsb sbb sti mov movsb test call and (bad) jae aad (bad) add and adc scas mov inc mov push fdivs mov hlt dec aas and (bad) lds pusha stos test cmp ret (bad) (bad) (bad) (bad) movsl pop sub je pop inc scas test mov sub lods out pop roll gs movsl (bad) decl cmpsl add or mov popa aas and cs fldenv lcall add in inc dec test cmp decl dec mov or lret cmc fidivl (bad) js imul cmp enter sbb sbb jnp rcll (bad) jg pop jb fbld jnp shrb loopne pop add mov push pop xor call (bad) (bad) ljmp adc les pop sub dec pop dec or shlb (bad) inc ficomp (bad) lock adc and xchg pop mov jl fsub stos (bad) (bad) (bad) incl pop jo (bad) mov xchg mov out pop add inc cld mov mov (bad) (bad) (bad) in dec arpl pop (bad) repnz mov jp fcmovnu test icebp inc mov push add jne (bad) (bad) (bad) call xor stos bound inc sub jno dec lods xor inc in add and mov incl mull ljmp test call daa sti cmp hlt int3 pop fnsave dec cli (bad) (bad) lcall jb mov aad ret out dec add out cs popf sbb aaa das mov and cli outsl aam inc xchg sub and (bad) (bad) (bad) (bad) decb sub xor outsb or push ja lahf adcb (bad) (bad) incl faddl dec xchg fiadd push (bad) mov jg mov (bad) (bad) (bad) ds (bad) lods xor nop sbb loop or call xor fwait aad es ret sub pop jne fdivs sbb popa add (bad) (bad) (bad) fisttpll mov sub test repz cmp hlt xorb lods sti adc (bad) (bad) jmp inc and nop (bad) xor test xchg inc hlt int adc fldl imul fisttp fs movsl cld adc in cltd in (bad) call std push loop push inc mov out xchg mov aas data16 pop stos loopne mov sub xchg ds aas int ret cmpsl mov arpl sub testl add insl mov jne ds pop loop ds lcall dec sahf cmp jmp pop mov test (bad) (bad) (bad) incl sbb loopne test lcall in xchg mov adc out (bad) das scas std xchg ljmp xchg xchg xlat push mov and leave ljmp pusha cmpsl inc pop ret xchg push lods jp mov iret cmp scas mov xor jmp arpl insb clc insb xchg data16 cld mov fs int loopne ljmp les xchg fs push test lret xor call sbb jbe jg mov es inc data16 and pop cmp mov ja lods cmp sbb neg cmp pop mov lahf or jg std mov inc adc (bad) mov or lret jns (bad) dec cmp loopne loop aam lret (bad) call (bad) jmp mov lock and sahf jnp dec jne fisttp (bad) xor sub mov ljmp dec idivb ja jmp sahf cmp clc push sub mov (bad) (bad) (bad) decl or fs cmp xorb mov sahf loope lods mov (bad) idiv outsl (bad) dec sub mov aam xor cmp mov and (bad) pushl jae repnz dec fstl in outsb pop outsb adc dec lods mov sti ljmp cld popa out cwtl xchg loop mov jle cmp pop gs cli aas mov in mov (bad) (bad) lcall adc fmull cmp pop fwait clc jecxz hlt add sub (bad) (bad) incl std mov xchg add out aad sahf xor lock loop repnz mov cmp xor bound push sbbb cli inc push jl (bad) jg mov xchg cld ljmp lret push daa cmpsb (bad) (bad) (bad) incl mov mov mov inc cld (bad) push jnp jg xchg (bad) pop pop jmp xchg fwait imul imulb ds cltd jns (bad) test (bad) jg cmp pop ret xchg mov ds jg (bad) dec scas adc pop jb jecxz cmp jne icebp into mov mov push jge addr16 std vmovaps mov xor gs add (bad) (bad) mov sub enter (bad) inc outsb divl and add mov fdivrl stos dec lret int sub lods repz jecxz (bad) (bad) push pop (bad) sbb add mov call pop out mov popa mov jecxz mov imul rolb idivl inc mov jg dec jns jmp xchg add enter push shrl inc (bad) lcall mov aad aas adc daa rcrb push jl mov (bad) ljmp add pop sub add xor lods mov or popl ret pop and in loopne test xor cmp and jp mov mov pop fiaddl lds insl or lcall inc sub mov mov mov mov xlat jnp jnp pusha or stc inc mov add mov mov stos fstpl adc or ret inc in daa sbb (bad) (bad) ljmp js lock loop inc adc test sbb les imul fcoms or mov icebp movsb lret xchg dec and fs fadds arpl repnz (bad) (bad) jmp inc add add leave xchg cmp mov inc (bad) incl lods pop jl push sbb adc movsb mov ret ljmp dec in addr16 inc test pusha xchg mov (bad) (bad) (bad) (bad) jnp pop lcall jecxz insl aas pop push hlt xchg enter int and out push mov mov stos fs push mov inc adc cltd or (bad) mov movb xor (bad) jmp cmpl cmpsb mov jecxz xlat jecxz mov imul sbb inc lahf out xor test js sub pushl cld ljmp adc in jb dec imul (bad) loopne pusha jg adc inc jg dec cld ljmp sahf jl mov (bad) (bad) (bad) (bad) jmp jb rcrb push stos dec mov ss fwait cltd ret mov dec lock (bad) (bad) (bad) incl imulb mov jp jno leave ret xchg push xor out lcall iret (bad) (bad) (bad) decl sbb jne and imul ror call add (bad) (bad) jmp js dec jne mov mov imul nop jno sti fidivrl addr16 or pushl cli ljmp imul or loope fstpt cli outsb dec mov ljmp adc popf pusha push out (bad) rorl outsl loop sub pusha clc ljmp in fstpt sti or xchg incl scas into sbbl test fisubrl ljmp and fnsave (bad) (bad) incl mov faddp inc xor jl inc ficom lret cmp (bad) out cli dec sub push fwait xor std and mov gs (bad) (bad) (bad) incl aaa inc add pop xor sbb cld negb jae xchg pop mov test ja (bad) ljmp dec jle data16 lahf lea lock push jecxz push repz or add incl nop add mov dec push pop (bad) pop mov pop pop cmp mov stos pop push hlt xor jo rorl lock and shr scas daa add icebp int jo,pt dec (bad) (bad) mov jl mov insb out out test dec push xchg add mov cmp sbb and sub sub lcall lods mov lret (bad) (bad) jmp aad inc inc lcall enter cmpsl (bad) mov lea insl sbb fmuls hlt (bad) (bad) (bad) ljmp movsl pop int mov lods rcrl call mov outsl aaa mov addl inc mov push sti (bad) jb push mov fildll ds je (bad) (bad) inc push adc lock jns scas repz pop repz pop movd add or push or jo jno movsb cmpsb inc inc (bad) int3 inc test pop pop xor lods (bad) call xchg les push jb push sbb and mov flds mov loope gs divb loope and mov inc cld lret shl or cli (bad) lcall push test inc aad addr16 (bad) jns mov pop roll adc mov adc sbbl adc xchg fdiv pop xor not js mov (bad) (bad) (bad) (bad) jge jecxz hlt nop push test icebp loopne cmp dec push aam lcall fs and fcomip (bad) call orl pop loop data16 cltd in mov (bad) (bad) (bad) push cwtl mov ljmp mov jbe fcmove mov sbb inc xchg lock scas or (bad) (bad) (bad) call pop repz adc test cld sbb dec lods mov sar push out imul pop add add (bad) (bad) incl pop (bad) and dec dec dec leave sarb sub pop lret mov test pop sub lcall aas sub call arpl cmc mov (bad) (bad) pushl aas stos xchg jge jl icebp and xchg cs dec cmp mov daa mov test push jmp sub dec mov enter fstl jg add xor inc aas jnp fstps mov fnstcw call imul and enter jg jle (bad) xchg lock (bad) aas fidivr sub cmovns pusha dec test aaa aam test popf movsb xor sahf outsl loopne cmc (bad) mov shlb cmp repz loop iret and jle out pop cli (bad) (bad) fist xor xor rorb lock inc mov push mov (bad) (bad) out sahf mov js out imull out sbb mov xchg inc jmp decb push (bad) mov sbb scas fwait ds inc lods push dec mov (bad) jmp mov cmpsb in mov in icebp sbb out sub add test push push clc (bad) (bad) ljmp or pop pop sbb ret mov ret or ss addr16 dec lcall pushf xchg fdivrp call cld stos adc lahf fs mov mov icebp ret or (bad) dec packssdw mov xor xor bound (bad) (bad) (bad) incl js fwait lahf enter movsb xor sahf inc lcall adc cmp (bad) (bad) jmp lret inc or mov xchg mov xchg add outsl insl repz daa inc pushf xor or lcall imul mov pop (bad) (bad) (bad) jg cmc aam cmpl pop and loopne push jg sar hlt dec popa sti sbb (bad) ljmp clc push mov repnz leave outsl xchg push sub xchg sub out icebp repz ljmp cli sub dec loop cmc test or mov pop pop cmpsl lea and call and lahf or mov (bad) call aam xor (bad) imul lods xchg call sub pop xchg push xor (bad) (bad) (bad) jg ds dec inc xor aad fldl in mov mov mov sbb (bad) dec loope mov push sbb inc lds loope ljmp cmp mov mov jmp rcrb insl ds push rclb sahf push dec movsb push fistp xlat fistl mov push mov adc pop jl push inc and jle pop imul leave xchg mov aaa std lcall test mov xchg push pop sub test (bad) (bad) (bad) (bad) cmp dec sbb or (bad) pop mov in xor in jle xor (bad) (bad) (bad) ljmp (bad) fwait cmp push sub push push mov xlat cmpsl jo sbb mov pusha insl daa dec sub stos icebp dec dec (bad) (bad) pushl cmc out movsb test pop push mov les mov loope and outsb mov adc mov test (bad) mov mov out adc cmp dec stos jo inc cltd push es sbb arpl fs dec decb add scas clc rcll (bad) test mov arpl jecxz (bad) (bad) mov push adc mov pop test cmp and movsb sarw (bad) fstpt sbb mov push aad aam mov lds insb lock mov pop mov pop cs (bad) (bad) ljmp cmc pop adc (bad) hlt pop cmp popf cli sub fneni(8087 sarb into push ljmp lret (bad) inc clc pop cld scas push sbb jne push addr16 pushf and inc sbb sbb (bad) aad dec (bad) (bad) (bad) incl adc mov shrl mov call repnz add (bad) lcall adc dec cmpl push pop inc jg add cmpsl out and (bad) (bad) jmp fidivr aad repnz xchg adc lret in mov lock test add (bad) cmp scas clc lcall repnz jbe inc jo jge push out cli lcall mov (bad) (bad) (bad) mov adc inc jl pop push into dec aaa mov dec jmp and sbb icebp cli (bad) (bad) (bad) incl outsb int fisttpll mov inc ret mov cmp push adc (bad) fs pop les push or arpl call pop ljmp add cli (bad) lcall xor add inc add xchg jnp mov (bad) ljmp or adc push xchg push dec lods hlt arpl mov pushf fs mov (bad) aam stc imul mov and das inc outsb mov cs sub adc (bad) out inc ds and hlt (bad) (bad) (bad) cmp ret xchg mov or aas pusha test fsts xchg fdivrl gs decl add pop aas out shll xchg test incl or inc pop outsl (bad) rol add add xchg out cmpsb push push jne sbb and xchg inc cld sbb push pop and push fwait cmp cs xchg iret pop and mov mov and in ja ds xor add add loopne jnp sub icebp outsb dec pushf sbb iret (bad) (bad) (bad) jmp pop pop pop mov fucomip flds inc or sub jecxz es push pop ljmp jp mov adc push mov xor out stos sbb dec mov stos xor jle and addl add mov data16 push inc nop push leave test cmp insl pop (bad) (bad) jg sbb mov aaa xlat gs mov sub push jmp (bad) decl (bad) xor add dec xchg subl cmc mov push jmp out and push dec lret mov in mov (bad) (bad) outsl mov xchg lock aas push adc cmpsb pop lcall mov (bad) (bad) (bad) jmp mov or xchg fmul ret cld xchg cld fs mov push mov jge sub pop test pop cmp in mov out cmp xor adc mov nop dec sub fadd lret loope in data16 cmp push movsl sbb bound xchg mov pop cmp (bad) out add fistpl cmp in or cli imul test jmp aas pop add mov ljmp (bad) mov mov mov movsl add jge movsl xchg and pop loope dec ljmp xor (bad) (bad) ljmp inc mov adc lea jns mov pop (bad) (bad) (bad) pushl xchg dec or (bad) fistp mov repz loopne push (bad) icebp popf addr16 mov dec popf mov int3 (bad) jp and outsb inc dec cli ja bound (bad) (bad) decl push pop out cs mov xlat xor lahf fcoml add in or out out int (bad) lock in gs cltd aam jnp test fs adc pop ret mov (bad) sub (bad) and (bad) (bad) (bad) (bad) clc jb jp mov mov pop add imul test push (bad) or cltd aaa sbb push sub (bad) (bad) (bad) ljmp push pop stos jae push jae pop divl daa addb xor in xor (bad) (bad) (bad) ljmp nop xchg pop addr16 cmpsl jbe pop adc lea bound ffreep (bad) out pop imul mov (bad) jns repz lock mov cmc out ljmp clc mov mov pop (bad) decl add push mov pop or dec cmpsb sbb jmp notb inc mov mov cltd add addr16 in pop mov push in (bad) mov clc test add std push or cli sbb (bad) and mov ljmp stos daa rcr dec inc xor out mov ret (bad) call bound pop andb lcall movsl pop repnz pop movsb sbb xchg (bad) (bad) (bad) lcall sbbb in cmp xchg cmove xchg fistl icebp gs (bad) decl movsl hlt or xor test aaa add push mulb sar xor xchg dec push xchg adc sub cmpsb repnz jmp fdivrp xor pop mov dec in (bad) (bad) (bad) ljmp rcl pop cmp fstl add adc ljmp ret sub hlt jno into subb (bad) jmp lock pop push jo push lds icebp mov mov jns lcall mov sub xor lahf sub int3 sbb jge mov decl and add jecxz (bad) (bad) (bad) (bad) mov lcall adcl insb pusha xlat sub sbb xchg and (bad) (bad) ljmp aas mov jae leave jg push fstpt fdivs sbb iret push insl nop cld lods jne dec or pushf mov pop mov and (bad) lcall fsubl aad adc sti dec (bad) adc adc fidiv (bad) fistp (bad) outsl clc (bad) out (bad) int3 add jp cmp imul or (bad) call sahf roll jmp out mov mov (bad) (bad) (bad) call sub out loope and push addr16 ds add dec pusha (bad) (bad) (bad) call adc cmc test xor push mov in jle or jmp push xor (bad) (bad) (bad) in fs enter test test or cmp cmp lret sub (bad) (bad) decl add jno push je std daa aaa mov iret std mov jl scas pop adc (bad) (bad) lcall imul xor mov nop (bad) dec or es sub hlt (bad) jg push in ficomp jp dec dec jl lcall mov (bad) or pop jns sbb (bad) sub rcr push pop and (bad) mov das loopne xchg jmp mov out sarl movsb cmc decl fdivp dec push cmp popf mov sub (bad) sbb lock (bad) (bad) dec xor test popf mov icebp iret push sub pop ljmp add sti mov xor add iret mov xor (bad) push decl push call inc fucom cld sbb mov test (bad) (bad) (bad) (bad) in xor lock call pop ds cwtl les lcall decb xchg clc mov mov cwtl (bad) data16 jge cmc sbb mov (bad) ljmp inc sbb enter add jp fdivl scas and int gs mov (bad) cmc lret cmp push pop fadd pusha inc push push xor (bad) ljmp mov mov xchg pushf (bad) ret int3 pusha dec add ret ljmp inc enter adc cmpsl push jmp aaa leave sar sti daa lock mov and sbb pushl cmp inc jne dec clc dec jae (bad) mov lods mov (bad) decl mov sbb int stos xchg sahf push adc push out out decb (bad) sbb sbb test iret mov sti cmc inc mov icebp cmp cltd (bad) (bad) (bad) lcall fistpll dec mov pop es dec scas int sahf xor lcall jp (bad) (bad) decl xor mov es and lods insl lahf test repz pop or (bad) (bad) (bad) decl and xor jnp insb cs mov movsl sub mov hlt in fidivl pop cltd cmp (bad) fadds ds nop mov decl ds pop iret loop jmp jg pop mov xchg sbbb cli fwait lret dec jmp enter dec xchg mov (bad) ljmp (bad) jbe and imul nop jno dec pop adc (bad) (bad) ljmp mov dec jg sbbb mov xor dec sbb or stos mov (bad) call pop add int3 popa adc xor nop pop jno js call sarb (bad) push pusha adcl getsec mov (bad) ljmp addr16 jle in fcmovu mov das stc inc mov xchg xchg gs cmpsb lock std cmp loopne ljmp (bad) mov movsl daa dec add nop stos jb pop addl (bad) mov clc (bad) (bad) ljmp hlt inc int3 clc cmpsb mov adc mov (bad) cli mov cmpsb dec mov and mov or sub inc mov (bad) (bad) pushl xlat es movsl outsl rcl repnz movq pusha js inc xchg inc inc cmp data16 imul xchg adc popa mov movsl lds enter lock (bad) fisttpl add aam dec sub mov mov (bad) jmp btr mov lret aaa add add jge sbb clc lods test pop dec xlat (bad) (bad) mov sbb xchg cli mov inc cs outsl je pushf xor orl mov xchg sub loope std sub xchg dec fstps mov lock add or decl loope or rolb cmp stc add mov mov xchg xchg std (bad) xor mov sub aam push stos dec sub (bad) in call cli sbb aad rcrb ja cmp pushl ds cld sub xor add jl ret jmp (bad) incl mov add cld and cs push out push stc xor add dec or ds pop mov push lcall pop insl push rcl push bound fucomi add outsb insl sbb fisub ds mov jmp fidivr pusha movsb pop ds test lcall decl xchg stos jge fildll and sub out pop mov in fisubr add mov push (bad) decb pop aad divl mov dec mov cmpsb (bad) jmp (bad) push aas xchg dec cmp sbb jnp xchg dec push jbe into lcall sbb mov cmp mov mov lahf jmp push cmp loop cmpsb inc in lea fucomp dec int mov fidivrl xchg icebp (bad) sub sub cld (bad) (bad) jle xchg jne scas (bad) leave pop mov jmp or push (bad) leave jp jmp das decb scas addr16 (bad) jmp mov inc jno repnz cs icebp imul (bad) loop sub xlat roll mov push mov aad aaa push (bad) push or cmc aad icebp push movl stc and inc xor rol push icebp in sub mov mov ljmp loop xchg daa je cwtl xchg out push sub cmp pop xor shrb ja jae (bad) ficomp rcrl add clc (bad) inc out aad xchg fs lea (bad) (bad) mov inc in cmp rclb (bad) ret xorl cmp cmp (bad) (bad) call mov dec mov (bad) mov mov mov mov ljmp push jmp decl (bad) repz mov lret imul sub sar (bad) (bad) fdivl push inc push xchg lds fisubl adc pop dec jge or xchg mov (bad) jmp push stc adc mov or jo,pt ss je xchg xor lock (bad) xchg aaa lods or mov push pop rcl lahf mov pop sbb cld aam mov insb addr16 sbb add hlt incl subl cmp sarb inc in jecxz pushl sbb fstpl xchg (bad) repnz and imul or and xor iret (bad) out push mov pop xor dec jmp pop and or adc sarl mov (bad) (bad) jg dec cltd adc mov or inc loopne inc xchg jmp fmuls mov lret (bad) (bad) (bad) (bad) in cmpsb xchg lahf jo int3 jnp pop mov repnz pushf dec insb sub jle (bad) ljmp fbstp dec xlat dec push adc cltd dec push mov mov xlat (bad) lcall mov fsubs jg repnz (bad) sbb lods data16 push out rcr jle (bad) (bad) (bad) jmp ret push mov jo adc sub out lahf sub pop push push add (bad) (bad) (bad) incl fcomip shlb stos cmp push andl or push mov outsb inc (bad) jmp mov ret std xor ds (bad) (bad) call xchg popa xchg (bad) clc dec pop or xchg jle fsubl (bad) xor test hlt xchg and fs in int3 sbb incl (bad) adcb adc pop or pop pop pop (bad) cmc cli cwtl sarb movsl (bad) lock pushl ret cli push cld adc scas mov into out scas outsl loopne fwait (bad) pop outsb jne xchg jmp pop cmp pushf add push mov nop xor clc js pop into mov (bad) cmc (bad) mov lahf aad jne xchg leave mov cmc dec popa mov (bad) push sahf scas jp test hlt and push mov add lcall push push dec or dec sarb daa push rcll fistpll sbb popf cmp loop int3 or inc loope mov jae jp (bad) (bad) inc push js push or dec fistpll leave enter fdivl scas scas jle paddsb call cld mov xor js lods xchg push sbb js outsl adc stos xchg ljmp stos test push pop push int ljmp push fcoms push mov push sbb mov fdivrs daa das imul es ljmp push js shrl jmp inc mov jle push jle ja mov pop mov mov (bad) (bad) (bad) (bad) cli lahf cmpsl pop xlat into add hlt inc dec mov and xor pop fdivr (bad) (bad) lcall pop adc shll xor rcl jo fcmovne xor scas in push dec sbb test movsb jno imul (bad) (bad) (bad) jmp lods cli out push call push inc jl (bad) sti push dec aas int3 sbb cmc add lcall dec aas bound iret xor sbb pop icebp dec add popa sub (bad) (bad) ljmp mov pop sbb cltd cmpsb sbb pop out (bad) xor mov aam sub (bad) (bad) (bad) jmp and add popl cld add mov pop imul (bad) (bad) (bad) ljmp scas add adc cmp rcrb (bad) lock push sahf out je insl jnp lahf push pop (bad) mov xchg cmp fxtract andb cwtl or xor mov aam imul (bad) jg mov xchg lret adc xchg into inc ljmp aas ret pop fld jmp lret add stc mov sahf mov sti (bad) (bad) (bad) inc mov imul push mov jg lods ss ljmp sbb cwtl mov push (bad) (bad) fst mov push jg pusha mov out or jp add and gs push sbb lcall movsl mov stc clc push icebp add jg pop insl dec jge add iret jnp stos xlat in mov (bad) out es test pop sahf and lahf mov ljmp cmp sbb sbb lods push cli hlt cli jnp stos mov hlt xor (bad) (bad) (bad) js mov popf lds lcall cld sbb cmp add xchg scas stos test sub jmp pop or push jno je pop fwait out xchg test cmc mov iret dec or inc test push lret (bad) call in mov fnop or inc pop adc jecxz sub pop xor mov pop (bad) (bad) (bad) jmp mov mov ret rcrb or das sub fbld adc lods cmpsb test (bad) jg aas jg aam cld push pop dec add cmp jo js sub mov mov adc or aaa ds lret test stc cmp inc push out fcompl and ljmp cmpsl movsb shlb cmp outsl clc (bad) lcall int3 hlt jne movsl jne cmp adc cmp (bad) (bad) (bad) pushl mov fs mov nop iret cmp sub (bad) sbb dec or jmp hlt pop jle or leave and (bad) in pop mov sbb sbb outsl mov sbb jecxz adc stos dec loopne (bad) (bad) pushl test (bad) push arpl jp fcmovnbe in shr in fcoms or (bad) (bad) mov adc ss mov pop es xchg call (bad) (bad) dec cwtl mov (bad) ljmp lcall xchg jmp aam sub add ficomp or in cld (bad) (bad) incl lret jae adc imul fcoms and mov sub (bad) (bad) pushl fidivr pop arpl (bad) icebp nop add xor lcall testb incl jle pop jmp rclb jge push (bad) mov add xor pushf sbb sbb cmp jns or fsts mov (bad) (bad) jmp sbbl cld or inc xchg (bad) les cmpsl enter stc mov lcall scas ljmp fiadd (bad) (bad) (bad) mov sbb lret adc roll mov cmpsb test ljmp fdivl iret out cld sbbb jmp pushf (bad) fsubl (bad) (bad) (bad) (bad) pushl mov aam es jb or add jae inc dec lcall mov lcall jno sub insl adc lcall fildl (bad) jb mov push ret or adc aaa push insl jne ja mov movsl addr16 insl shrb mov aaa cmpsb enter (bad) (bad) ljmp cmpsb clc (bad) xchg loope orl dec fisttp sub push lock mov fildl fsubrs enter xchg movb insb daa pusha sub (bad) ljmp fdivrs pop push mov xchg lahf clc add jae cmp xchg (bad) fistpll adc adc outsb lret cmpsl push cmpb lock nop push (bad) (bad) lcall scas jns adc mov enter push adc sbb (bad) aas add jmp outsb fcomps test (bad) repz (bad) (bad) (bad) js mov sbb scas ficoml ret std xor arpl cwtl call or push inc mov mov ds (bad) (bad) (bad) fdivrs iret outsl leave mov mov xor jp insl fisttp popf shrb sbb jp std (bad) (bad) call sub mov cmp cmp inc sub fldt dec into cmp mov mov adc fnstcw inc (bad) (bad) (bad) decl pusha in imul outsb in pop xorb add pop cmpsl xchg ret stos popf popa pop inc inc (bad) cmp adc mov inc xor push dec pop adc jecxz loop sbb aam mov jns into out mov jbe (bad) (bad) (bad) incl orb jmp pop push add out push pop ds movsb outsb mov (bad) test lods xchg hlt add jno pop add test aam cmpsb jl push insb xchg test add rcll jl xchg lea (bad) (bad) (bad) clc and cmp mov mov fs fcoms cmpsl loope (bad) (bad) lcall adc sub daa fs pop jae add out dec rorb xor (bad) (bad) mov loope into cmpb xchg dec lret aam repnz pop mov jb clc (bad) jmp pop cmp les sbb insl adcb cs insb sub (bad) (bad) call in ficom insb dec xchg mov inc loopne xchg imul out mov clc (bad) ljmp fstpt iret je xchg shll push xor lret icebp mov mov pusha jl mov ds and xchg sti int3 pop or sbb pop loop mov inc scas mov outsb bound icebp cli arpl or (bad) lcall mov scas (bad) in mov pushf pop jmp or insb xchg imulb insl icebp cmp (bad) (bad) (bad) pushl push and xorb std mov out call cs idivb movsl dec sti lock xor (bad) (bad) ljmp mov mov add push pop rorb inc test out xchg mov (bad) (bad) push nop push loope xchg loop and inc fs mov sbb (bad) ljmp (bad) rcrl jo call xor xchg adc xchg or inc cmp adc mov das jns or movsl pop pop pusha push mov fisub pop sub mov jns pop lods repnz das mov inc cld xchg jbe adc jmp pop sbb pop call (bad) (bad) pushl lods rclb mov sti pusha daa popa mov dec arpl sbb fnsave mov mov mov outsl xor inc jl sbb loop daa sub mov pushl and dec sbb sub lret mov cltd dec or dec dec lret and (bad) (bad) pushl lods rorl ds dec pop in dec sti xor mov or sbb inc jp (bad) mov ficompl dec mov in (bad) adc call pushf cmp (bad) (bad) mov leave add incl inc adc fcoml cmp sar bound roll cld out les xchg (bad) lods subb pop jo or jne push mov cmpsl (bad) jge pop push jle (bad) (bad) (bad) decl mov lret fldt fadd hlt xchg pop imul jecxz movsb xchg fcos or push mov jmp icebp jb inc cld push jle in xor ja lcall daa in and xor test mov popf cli (bad) popa xchg insl aaa push scas clc (bad) pushl dec mov xchg cmp out popf nop jb ss jns pushl pop (bad) jae jb push divl mov rol or fimul mov (bad) (bad) incl sub roll add xor dec inc fldt xchg push (bad) (bad) incl or mov push jne pop inc (bad) (bad) (bad) (bad) fild shll scas cwtl dec inc sarb xor add loopne pushf insl cmp (bad) (bad) (bad) decl repnz dec adc or imul pop adc movsbl stos cs xor stc adc (bad) (bad) jmp push ror mov insb add lcall les mov pop (bad) xor or hlt xchg mov mov stc ret jnp push jg ss lcall test adc cmp jne push outsl aas cmc push out jne test pop dec (bad) (bad) (bad) jg aam mov cmp inc leave (bad) mov mov repnz stos aaa in push (bad) (bad) (bad) dec test jl inc mov or push movsb mov int jmp hlt add lcall dec out adc (bad) gs xchg pop movsl aam mov jle,pt fwait sti xchg pop ds setnp dec test scas jnp cmp lcall (bad) ljmp push dec sub cmp cmp sbb push xchg popf xchg xor add arpl mov cli push vandnps (bad) jp add pusha dec cmp stos mov and inc test xchg insb push inc mov out fnop iret mov in sbb and pop xor ret adc inc leave jbe lcall sbb test int3 ficompl mov (bad) mov and incl sahf cwtl sbb push and pop mov push jg (bad) push pshufw jne addl lret ffree cwtl test ror jl (bad) (bad) inc das aam cltd outsb and aas das hlt sbb and mov sbb aad dec jle leave inc jmp imul scas rorb mov inc or cmp dec add mov test jp add sbb (bad) (bad) lcall mov enter push addr16 dec mov bound inc lds (bad) (bad) (bad) incl (bad) sbb (bad) xor cld arpl call xchg xor inc (bad) (bad) (bad) (bad) ficomp mov adc or xor in roll mov pop test lcall mov inc adc sub mov (bad) jmp sarb test aad hlt xor sbb xor jle into push sub (bad) (bad) (bad) call hlt push add gs ljmp xor adc movsl mov das (bad) (bad) mov push js add iret sbb arpl push adc mov push push cmp jg mov mov mov jae adc push repz je mov ljmp mov ds pop lock and mov in pop pusha std incl lds lcall inc in loopne pushl dec movsl inc pop push sub sub fcompl sar mov push or mov pop adc pushl mov in mov out sbb fbld mov fistl pop and (bad) pop jns movsb sarl add push outsb cmp (bad) incl movl int fiadd loopne push mov (bad) (bad) push xchg sub lahf or xorb push loope mov and xchg ljmp sbb jecxz loop adc test in cmpsl movsb mov sub (bad) jmp inc test dec cmc insl int dec js sbb sbb push ffreep decb sub (bad) call js out test lret mov add sub addr16 (bad) (bad) (bad) clc cmpsb outsb rcr int3 leave xchg outsb jmp xchg pusha fistpl jne ja cmp rclb (bad) jg ljmp pop mov xor adc sbb fsubr pop sub daa (bad) (bad) (bad) lcall frstor loop sub adc xor or hlt jmp stos rsqrtps push add int3 mov ret inc (bad) call gs add aad into and sub ljmp ds stos push imul inc inc jns leave add sub mov (bad) (bad) lcall (bad) sub test stc push jg scas pop sub jbe fsub sbb pop (bad) (bad) (bad) decl scas fstpl sub sub lret dec add sub or arpl push pop push ret pusha popf (bad) dec mov (bad) call mov adc lds or in pop lret popf inc (bad) (bad) (bad) ljmp pop xchg push (bad) idiv imul in lahf push icebp into pop in jge sub clc data16 push lahf aaa addr16 lea dec pop pop pop cmp (bad) sub dec push cltd jecxz (bad) out ds lret mov mov movsl push dec testb jge lods pop push pop add xor (bad) (bad) pushl rcrl dec push pop push push mov and mov (bad) (bad) (bad) push mov sbb add xchg mov out insl push and mov (bad) enter mov pop loopne mov loopne outsl add repz (bad) lods shrl (bad) (bad) cmp ss pop jae cli (bad) (bad) jmp sbb idivb dec pop int leave and jle in outsl dec inc stos popf mov push dec cwtl add addr16 sbb sbb mov push insl sub popa jecxz lock xchg xchg push testb cmp (bad) dec cmpsl cs movsl test push test outsb iret inc sahf sbb push dec fisttpl add mov sbb ds (bad) insb mov repnz (bad) (bad) (bad) cld mov or lea mov pushf dec ret push mov scas test lcall cmp hlt mov (bad) (bad) mov ret imul bnd or aad xchg jle ja or sub mov ss sub add (bad) aas movsb add or dec lahf into adc cld (bad) (bad) dec pop fwait jecxz inc rcl aam clc sbb ja xchg add xchg dec pop ss jbe fdivr (bad) incl push in push mov idivb inc cmp mov cmp jbe adc clc jmp pop pop cmp cmpsb leave aas outsl inc insl clc mov mov rorl sbb mov (bad) (bad) mov add aas loop popa test xchg icebp fstpt cmp cmpsl fs push enter xor (bad) (bad) ljmp fbstp (bad) gs (bad) lcall inc push pop sub mov in add adc push mov xchg popf sbb jecxz xor adc (bad) (bad) call add pop loopne cmp pop push cs lret sub (bad) (bad) call movsl or push pop mov or cli mov xor mov or ljmp mov mov xchg dec adc add mov rol cmp and cli or stos (bad) jmp loopne leave fisubrl cmp test mov pop push je (bad) (bad) (bad) (bad) lcall rclb fwait inc add pop adc or mov insb push imul push sbb cmc decl sbb fs or xor (bad) (bad) (bad) (bad) pushl sbb mov mov (bad) pop or aad dec frstor cmp inc daa fstpt mov mov fwait jnp jmp sbb stc sub out aam xchg std (bad) sti hlt xor (bad) ljmp push push bnd mov sub pop aad je dec push (bad) call pop ds adc ss jns inc gs xor add mov adc int3 and (bad) jb push lcall pushl push inc mov sub mov jmp and xchg icebp pop in sub (bad) (bad) cmp cs jl fisttp stc into movsb nop ss addr16 jno xchg dec sbb (bad) (bad) dec mov fsubp xchg mov ljmp dec push lock jg jmp cwtl mov push push insl jmp add loope xchg ss mov xorb add sub xchg (bad) aas call enter scas aaa inc loopne cs sub cli (bad) inc mov xor mov nop sub aad inc and loop mov fcos (bad) out clc xchg fcoml push insb dec in stc out cmp and mov arpl ljmp xchg push xor pop rcrb arpl (bad) sbb popa jo std lcall push pop pop les or pop xchg loopne cli or sbb ja shlb arpl xlat aaa fistl mov sub cmp adc lock (bad) jmp mov cmp add call mov mov inc pop push and xchg push sbb gs (bad) fildll push or in push xor in popa pushl call loope nop xchg into frstor (bad) loopne pop push (bad) (bad) decl inc sbb in xchg mov mov jo ds mov inc mov adc (bad) (bad) cmp mov dec ja outsb out bound popa pop popw pop or jg sahf (bad) xchg in push clc outsb pusha cmp arpl (bad) lcall mov pop lret int fcmovbe mov mov pusha movsl lock lds xchg clc cmp and (bad) pushl xor call sbb inc xor data16 scas cmp mov std (bad) lcall jmp icebp jno adc fimull fisttpll ss mov (bad) (bad) fnop pop stos cmp xchg in cmp (bad) aam inc mov rorl imul cmp (bad) (bad) (bad) mov test popf iret imul push scas sub addr16 arpl (bad) (bad) (bad) ljmp insl stos (bad) cmp push inc pop (bad) into xchg push or mov js aad jg rcll mov sub dec sbb lcall call xor or imul ds and or and adc (bad) (bad) ljmp mov inc jmp aam or cltd fisubrl sbb fsubl aaa outsl fstps push or add push (bad) (bad) decl cwtl mov cmp xchg lcall or lret (bad) (bad) lcall jns xchg dec leave jp (bad) mov (bad) int add repnz xchg add ja cs ljmp hlt add mov xchg dec mov out mov or enter les hlt inc jae in adc or pop int (bad) (bad) (bad) call inc xor ret jo jg js mov mov mov pop and or scas adc (bad) (bad) (bad) jmp cmp ljmp clc dec (bad) inc ret or lcall lahf push cmp mov (bad) mov push fsubrl in jbe inc mov lock jmp sti andb mov xchg daa hlt (bad) (bad) (bad) dec sub lcall sub xchg mov fdivl lock loop adc sbb (bad) ljmp push ss addl lret push aam sub loop lods arpl cmc (bad) mov pop cmp sub adcl or (bad) insl (bad) jmp rcrb cli popa mov jb sbb fcomps pop std (bad) (bad) decl imul std adc sbb mov dec xchg in inc pop xor sub (bad) call aam movsl adc adc jp call mov xchg push mov pop add stos fidivrl mov sbb sbb ds fiaddl lcall es leave arpl daa jmp pushl aas mov push mov in inc cmp add out (bad) decl adc sub pop test (bad) (bad) (bad) inc jmp pop mov in sbb fs sub lods std shlb sbb andb insl decl clc stc aaa mov push test dec mov (bad) jp sbb push adc icebp arpl pop push ds (bad) (bad) jg mov inc inc sahf sbb dec test std icebp popf mov pop mov lods in clc (bad) incl mov test shll inc cmpsl inc cmp hlt (bad) ljmp lods in sub std or test int3 xchg iret int3 xchg ficom dec leave ret and scas adc pushf pusha sbb jnp xor cld xchg lcall fistp (bad) scas cmpl jnp mov jns movsl sbb sarl fsubp dec inc iret jg dec adc leave adc call test fidiv icebp push sbb pop out int (bad) (bad) jmp scas rclb mov adc sub mov cwtl out cs (bad) (bad) ljmp lret jg negb repnz mov sbb cli mov dec in dec mov (bad) (bad) call inc cmp adc xor xchg pop data16 cmp or xchg call popa ss cmp imul cltd cwtl in jp orl mov idiv incl ret pusha sub mov add add jmp leave pop loope cmp mov (bad) (bad) (bad) dec push fistl xor arpl xchg adc stos mov icebp push lock shl jge (bad) (bad) (bad) jmp cmpb sti pop mull das mov mov (bad) decl inc pushf shll (bad) (bad) outsl mov cld xchg arpl push cmp (bad) mov ret (bad) mov pop fstps push (bad) aad std stc (bad) leave sarb mov nop or test mov ljmp clc notl scas mov jbe and scas daa cld (bad) or inc mov (bad) (bad) call sub push jmp sahf or sti or rolb lea (bad) push stos mov aam add cwtl outsl xlat add (bad) shlb adc (bad) (bad) jg ds xor cmp into das rolb fbstp fldl ljmp cli push (bad) mov mov and call xchg pop dec inc mov clc ret imul ds add ficompl pop outsb pmaxsw sub mov adc push std xlat or cmp add (bad) call loop shrb loopne cmc int std inc lds decl in jb gs push and pop out adc and cmp (bad) jmp jne (bad) test insb addl in (bad) cmp and inc das ffreep (bad) (bad) fcomip in out sub (bad) (bad) adc push pop and jecxz sbb sti cmpsb and sbb loopne (bad) in mov jns stc ret sub stos in mov inc push lcall pushl push repnz arpl push iret mov or jge xchg mov fwait out mov xor (bad) lods (bad) ljmp call ficompl cmp or stc mov inc mov mov imul (bad) (bad) cmp cmp push pop cld mov stc pop and push sbb out incl roll (bad) ljmp mov dec lods lret mov and jo push (bad) sub xchg (bad) (bad) ljmp ds mov out xlat stc out int3 lds divl push (bad) (bad) (bad) decl inc jp in sbb movsb inc or or mov dec outsb adc (bad) ljmp or dec inc andb jne cmc (bad) ljmp jbe sbb arpl aad es mov fdivrs loopne inc xchg inc clc call and sub jl sti sub (bad) (bad) (bad) (bad) out aam subl pop sbb movsb sbb mov sub and mov pop cmp sub in iret mov mov enter (bad) cld pop int3 or pop dec rolb ljmp mov fcomip jg mov mov xchg xchg test add (bad) mov ds and mov aas mov (bad) (bad) pushl in inc bound cmp adc push and into xchg (bad) in pop outsb iret outsb sti add (bad) (bad) decl repnz or lods push movsl push sbb cli leave test hlt mov dec pop rorb insb dec pushl notl and fistpll test adc (bad) ljmp mov xchg sbb push out pushf jmp shl pop scas or mov fyl2x incb sarl lock out mov scas or (bad) sub ljmp aam xor cmp fisub inc outsl clc (bad) jmp pop mov xor push les mov iret mov jnp repz (bad) jmp lret fdivrl cmp fmuls mov pop xchg fistp pop jne fisub outsb push icebp or faddp dec mov mov (bad) (bad) cmp das insl movsl adc stos add mov imul mov mov insl jle cmp cwtl jb insb ret ds (bad) mov sbb (bad) and je enter mov xlat xchg cmc cmp (bad) (bad) pushl ret mov and outsb pop insb xchg arpl jmp mov mov xor out (bad) (bad) fbld pop mov lret push sbb fnsave mov add fnstsw (bad) jmp mov fisub mov insb cmp ljmp inc sbb mov mov int3 outsb push and xor pusha lahf rcrl lea (bad) (bad) (bad) jg mov mov jo es je fnsave or jno inc aas imul pop inc dec int aas pushf adc mov gs ss jnp pop hlt (bad) decl daa (bad) xor out inc inc mov adc sti jle and (bad) (bad) (bad) pushl push andl cs pop gs cmpsb cli sbb push loop sar (bad) (bad) call stc pushf dec xlat or mov mov pop clc add test push pop jp dec cmpsb cwtl shrl sar pop (bad) pusha cmp arpl fsubr (bad) (bad) mov mov pop adc mov lock arpl (bad) (bad) ljmp sbb out inc jne and arpl call mov xlat (bad) bound pop cmc idiv outsl add push mov pop cwtl or push pop mov jl cmp xlat popf in push jmp (bad) jle dec (bad) (bad) (bad) decl fistpl out addr16 mov pop jo (bad) loope idivb cmp decl adc mov mov arpl adc mov mov add lahf xchg jle xchg cs cs xchg in cmp jbe jl pop shrb fwait int3 mov or mov jno and or (bad) (bad) (bad) (bad) lahf ret out lcall mov mov imul push (bad) lret aas (bad) (bad) (bad) lcall jne std or jo fdiv in inc or mov mov push cmpsl cmp cmpsl adc rcrl jle adc jne test in (bad) (bad) (bad) (bad) fstl arpl fstpt fstpl enter sarb out lods mov rcrl decl sti enter dec mov push arpl cld mov or notl aas ja pushf mov (bad) movsl ret xchg jmp aaa lods pop and in (bad) call rclb (bad) (bad) (bad) lcall rorb ret in (bad) mov pop jp out or (bad) arpl jecxz adc repnz mov pop ret lcall lods and (bad) out call sbb in sbb les repnz flds sub push inc insl or cli jmp loope jecxz js (bad) pop mov push lods mov test fstpl (bad) lcall inc mov int3 dec sub jne out jl (bad) (bad) pushl sub aad mov cmp xor scas loopne,pn das (bad) (bad) (bad) dec (bad) sti inc mov push sub or clc mov xchg int3 mov jb stc call jmp je mov sahf cmp add out xchg into scas add jg icebp jmp and pop adc inc jo xchg repnz (bad) lcall incb pop or xor sbb and mov (bad) mov jb xlat (bad) (bad) (bad) jmp ds pop (bad) (bad) xrelease out cmp into insl outsl cmp test sub (bad) (bad) (bad) call sti add inc push loopne aad jg pop mov rclb arpl add mov ljmp sbb roll cmp jecxz (bad) (bad) ljmp loop ss mov cmc cmpsb cmp (bad) lret add insb pop lock and xor jmp dec lds (bad) (bad) (bad) lcall dec xor dec adc mov mov adc sti test movsb push cmpsb sbbb jg mov push or adc push or cld (bad) decl decl jp mov sub or mov sbb (bad) (bad) (bad) decl test or mov out out popa jbe movsb and int3 xchg mov ds (bad) lcall (bad) jl mov push cs into xor inc adc jge pop mov das pop test (bad) call xchg sbb rolb aam mov int3 cltd mov pop add jmp pushf arpl ja jp mov lahf loop inc sarb inc cmp dec mov jo mov dec (bad) (bad) (bad) incl lods add pop stos add inc mov test cmp fwait icebp pop inc shlb cwtl push addr16 (bad) (bad) (bad) jnp pop mov sbb xor jp inc aas (bad) mov and sub sti pushf pmulhw adc jns in mov inc hlt popa or adc mov lcall xor pop adc push outsb dec enter push stc adc mov std lcall in inc pop test cld popa sub (bad) (bad) jg mov mov clc lods clc dec dec inc movl xchg mov inc ds cmp and pop jbe (bad) decl cmp aam (bad) fdivrs push sbb (bad) xor (bad) (bad) (bad) (bad) mov addr16 adc insl push mov and cli and (bad) mov lods jnp mov loopne sbb jge lahf in adc inc adc (bad) (bad) dec xchg sti outsl dec (bad) (bad) or pop xchg xchg aam mov lods stos enter les xchg pop incl jo movsb lcall cs test jg dec out pop xchg pop sub cli (bad) (bad) call lods adc subb adc or mov pop pop xchg hlt dec add xlat lds icebp jmp imul or add push cmp icebp ret sbb inc ds xchg push test jmp inc insb loope sbb lret mov aam test sbb pop and loope mov cmpsl hlt in fidivr scas xchg int3 fdivs in daa test pushf mov in test pop cmpsb imulb (bad) (bad) decl scas lods and ret adc imul jns sbb mov out int mov mov mov outsl push flds shlb inc shrl mov add lock jo push xchg enter cli (bad) (bad) call je (bad) adc mov mov dec adc jno incb stos cwtl lods inc dec mov mov add (bad) pushl (bad) jecxz mov loopne mov mov and (bad) xchg ds jp dec pop and mov mov mov cs (bad) (bad) mov cmp sarb pop xor mov sbb out pop sub mov xchg (bad) (bad) (bad) (bad) cmp jmp addr16 dec inc je ret cmp mov mov xchg or mov (bad) (bad) (bad) call pop mov and mov (bad) shl xchg push inc aaa fdivs ret jp test xchg adcl sbb push add (bad) (bad) lcall mov xchg cmp nop popf pop addr16 mov mov cwtl movl sar pushf lcall pop iret sub inc (bad) (bad) (bad) decl imul (bad) hlt and adc jecxz repz inc (bad) pop pushf mov ljmp lcall ret test xchg outsl jbe (bad) jl and (bad) (bad) incl lea xor mov je adc adc inc cmp pop sbb (bad) lcall mov out iret icebp inc mov sub in lea test cmp (bad) (bad) (bad) call lock mov ss in test sbb loop jo mov and ds lock pop cmc (bad) cli xor rep ficomp ret lock push xchg jmp int3 incl xor jg popf ja mov or loop fsts mov (bad) (bad) (bad) jg cmp jge xor mov or dec adcl cmpsl (bad) (bad) (bad) call pop scas and lock jns out out cwtl in xchg outsb push and cld orb sbb add incl mov mov aam mov mov pop sar cmp gs outsb (bad) mov and xor js pusha push cmp cmpsb jo or mov mov sahf shll cld movsl mov adc jmp icebp leave in insl push (bad) ja xor inc adc (bad) inc mov cs les (bad) (bad) decl mov int fcomi jle add out mov jo aam lea (bad) (bad) jmp sti ljmp mov sbb stos sbb cmpsb xchg aas push (bad) (bad) (bad) lcall icebp cli loop fcmovnbe loop icebp push dec jle xorl and insl call icebp mov push pop mov cmp mov inc in movsl fadd outsl push xor mov (bad) idivl ljmp dec fidiv (bad) xchg dec cmp xchg mov jmp sbb inc ds xchg add inc je jo inc fldenv dec sub add stos push stos mov xchg fwait (bad) (bad) (bad) call push jb out xchg push sbb in sub push cli jecxz jl add (bad) xor outsb mov (bad) (bad) (bad) ljmp xor (bad) mov mov jmp ja pop cltd addr16 push je sbb or loope xor pushl rol push mov sbb jae jge in (bad) (bad) decl rcll jo cmp mov and xchg pop xchg pop imul test (bad) (bad) (bad) call mov int dec clc int iret jge nop bnd popf sahf ds mov (bad) (bad) decl ja,pt sub cs mov jne cmpsl sub pop repz fwait pop (bad) (bad) jmp sbb cmp sub notl dec clc int3 sub (bad) (bad) pushl mov ds inc sbb stos push es inc jnp xchg add and sti (bad) (bad) fdiv and sahf dec mov fs lret or addr16 mov flds xchg mov fisttp push pushf outsl hlt lcall inc dec pmaxub mov (bad) mov pop inc (bad) or hlt add or cld push xchg push movsb xor into or push test inc testl (bad) (bad) ljmp test movsl gs pop (bad) xor popa repz inc jecxz cmp (bad) (bad) (bad) (bad) mov or (bad) push xlat mov jge jecxz ds mov sti dec fisubl (bad) (bad) push (bad) add lcall mov (bad) jbe sti jbe into jecxz jno (bad) mov jg dec loopne je roll in ficompl or (bad) mov xchg lcall mov pop cmpsl fsts (bad) and and out clc pushl mov dec fisttp xor mov mov sub aad (bad) (bad) (bad) dec xlat inc test pop movl xchg cmpsl inc dec jb cmp pop into inc ret incl pop lock or jmp and loope je,pt in fstpl ffreep pop lock dec add fwait bound inc adc pop cld (bad) (bad) pushl pushf sbb enter cmc gs jmp and inc fnstcw fwait dec mov imul inc lea adc mov jb (bad) out movsb mov add pop pusha push sub xor mov jle lock (bad) push scas xchg loop inc push pop cs es xor pop jbe cmpsl imul xorb xor inc (bad) pop ficom jnp mov dec imul fsub mov mov ljmp sahf loop test aam ds jmp (bad) decl dec js adc and cmp mov (bad) add sbb (bad) (bad) call mov test or lds cmpsb xor std es pop dec test push hlt lock stos dec pop fdivl mov (bad) decl pop aas pop cmp fsubs xlat mov sbb xchg push scas (bad) (bad) mov andb stos int aam cmc cmc jne je imul (bad) (bad) fstpt sub push mov sbb out mov lea clc jns and out xor ljmp sub push inc mov in decl sti jnp outsb add test inc xchg mov inc icebp add (bad) lcall scas inc sbb sub sub pop mov sbb jns (bad) ljmp mov mov fwait sbb cmp xor (bad) incl (bad) shl jl rcrl adc test xlat pop xchg arpl jg (bad) incl ja dec cmpsb in out xor mov mov mov (bad) mov (bad) (bad) cld mov pushl push adc mov popa inc mov mov inc jp jge test call jne stos and stos push fdivs and add ljmp test and mov mov fwait popf sub xchg dec sahf (bad) (bad) (bad) (bad) jl jo pusha and mov inc xchg mov mov mov fiaddl mov call mov jmp bound mov xchg inc sub mov aad into aaa cmp cmpsl (bad) (bad) pushf test call push dec or (bad) jg out push mov repz or outsb jno mov cs enter in mov cwtl stos mov (bad) (bad) call insl sti sbb xor aad push (bad) cltd mov mov pop out xchg push push xchg cli (bad) decl enter dec das insb fidivr orl adc (bad) (bad) decl pop push cmp add xchg sub sub sub aad xor mov lcall sub insb dec cmp xor push fdivr mov inc nop pusha mov pop cld dec aas jo scas in xor xchg ret jb xor dec lock sar push (bad) bound (bad) cmp dec mov inc pop sub cmp xchg fimul or adc jb (bad) (bad) (bad) cmp es movsl adc mov popf mov das push sub xchg sahf (bad) and movsl aaa jge imul ljmp mov ss gs or add cltd pop fbld sub clc jmp sarb cmp movsl xchg test out push mov test xchg xchg mov pop adcl mov addr16 inc sub dec fwait addr16 aas jo mov xchg mov inc lcall pop ds shrl loope loope (bad) mov fld and inc rclb int3 push mov xchg jmp (bad) (bad) (bad) ljmp (bad) xchg mov mulb jo setb sub cmp or (bad) (bad) call out (bad) cs push mov cwtl inc cli movsl push mov jo fnstsw jns (bad) (bad) ljmp mov nopl repnz jl es shll adc lods lock adc aas sub push pop pusha (bad) (bad) (bad) lcall push sbb in mov cmpl outsl cli mov or sub and pop dec rclb ret jns mov cmpsl test jg sbb subl movsl jo (bad) inc mov pop xor (bad) (bad) aas add (bad) pminsw sar enter mov jge jl lcall mov add mov and notl out adc arpl (bad) jg xor (bad) iret pop adc (bad) (bad) (bad) (bad) fcoml sub xchg mov fs mov and ret push push cmpsl pop mov popf push test jns sub mov inc xlat (bad) out insl out mov int (bad) mov mov aaa cli loope mov addr16 out adc lods sub movsb emms xor add (bad) pushl mov int3 pop jmp jl popa inc cmp push adc setle (bad) sbb (bad) incl sub jmp pop pop pop or xor inc (bad) add jg and jg jnp stc les jge sub or dec xor sub pop or jb or mov (bad) (bad) (bad) jg or pop mov cmp shl es sbb popa mov mov enter adc clc (bad) call push lods or adc xchg jb (bad) (bad) (bad) pushl cmp xchg push jns jmp js loopne inc xchg mov add mov (bad) in jle jo mov test js shll rorl inc and xchg std shlb cs lahf xchg sbb sbb cld cli out xchg jge push dec ljmp (bad) (bad) (bad) mov mov sahf (bad) push fistpl sbb adc adc pop sub imul jmp push jg pop push push stos adc in das add mov (bad) (bad) push (bad) (bad) (bad) call pop pop data16 ds inc scas adc or and cmpsb add cmpsb faddl lock incl or sbb ds arpl sbb sbb pushl fisttp lretw decb movb (bad) lcall mov cmp icebp (bad) fsts bound frstor push (bad) (bad) out cli loope stc int enter leave mov bound and add es pushf (bad) (bad) (bad) (bad) jge dec push or scas outsl ja jne insl jno enter mov icebp iret idiv (bad) (bad) jmp in push jo push dec dec and rorb mov pop into cmp xor ljmp dec mov xchg xchg mov es jb cmp (bad) (bad) ljmp sub dec adc ja cli add out ds jo cmp lcall cmp jmp stc inc sub jnp,pn stos (bad) mov in cmp int3 movsb rorl xor lcall mov leave sti cmpsb lds xchg adc sub jmp out mov (bad) call sub push imul mov or inc sahf cvttps2pi (bad) or stc lahf rclb loope (bad) fisttpl fiaddl add xchg dec push adc mov xchg pushl sahf inc mov fisubrl mov (bad) lcall movsb mov daa rcll ja sbb imul imul (bad) decl add inc and xchg mov popf ds pop pop stos xchg inc sbb addr16 jmp push cvtps2pi cmpb ds stos push pop jge outsl dec pop loope adc pop (bad) (bad) (bad) dec (bad) (bad) (bad) adc inc scas enter in mov mov sub cmp movsb dec (bad) (bad) (bad) incl push test test rcl decl cwtl andl cmc add je inc (bad) decl outsl mov mov adc fisub jl jno,pn lahf sbb cld jle xchg mov (bad) (bad) (bad) mov negb dec les xchg mov pop push into dec imul pop scas jbe lock (bad) (bad) pushl lods (bad) xchg ljmp fisttp arpl dec mov out push cld (bad) call adc adc mov repz sahf je aaa std das push fdivrl mov push je daa push push add inc and (bad) (bad) (bad) (bad) jnp xchg icebp jmp xor or movsl faddl test into test test mov jbe cmp (bad) (bad) pop js lcall or dec (bad) (bad) (bad) (bad) call ljmp pop out roll popf popa insl mov cs nop repnz inc cmp or (bad) ljmp cmpsb fsubp (bad) push (bad) lcall sbb incb mov and add aas imul rcl sbb out mov cmp adc xor (bad) lcall jae rcl cltd pop inc cmp sub stos cmp cmovs lret push shlb jb,pt and ds sub mov and out insl push popf cmp pushf cmp fwait lds (bad) (bad) ljmp aad lcall jl shl dec fdivrp sbb push data16 ret add sbb or mov aaa mov and (bad) (bad) (bad) call movb out rorl test in ds mov xchg test (bad) (bad) incl cmp mov inc stc dec dec sbb (bad) cmpsl pop in cltd xor (bad) push scas sbb (bad) pop in adc je pop stc divb cmp aaa sbb ds or clc adc xor in hlt lret jae mov aas pop sbb push jecxz push cs lret clc (bad) fucomip dec cmp mov push sbb xchg sbb movsl (bad) cmp adc outsb (bad) (bad) incl cmpsb dec into cltd xor (bad) push and jmp (bad) (bad) (bad) call sub mov dec testl pusha mov (bad) insb xchg (bad) (bad) jmp lcall adc fldl sbb or test sahf fdivrp call mov bound mov pushf in lock (bad) (bad) out mov pop sbb js dec fsubl xor mov push bound repz (bad) pushl les dec (bad) mov xchg gs or jmp add mov adc lock (bad) call ljmp aad in and push lods repnz scas lret and sbb (bad) fistpll test ljmp xlat aaa (bad) (bad) (bad) (bad) mov add mov push imul (bad) xor test cmc cmpsb xchg movsb mov add (bad) incl call or push lret in arpl mov or jecxz jns (bad) call insl cmp mov mov ljmp adc nop mov inc xchg not lea sti in aam mov test (bad) cmp decb out jns popf mov (bad) mov out (bad) (bad) (bad) lcall insl sbb divl jmp jno push sbb stos jle xlat pop cmc pusha insl mov (bad) ljmp xchg sub push out idivl fs mov std (bad) (bad) pushl dec sahf ja in call sub mov daa push and dec push outsb xor mov dec ret or les mov dec adc lcall (bad) es in fcoms mov (bad) (bad) lcall test roll sti pop jb push out incl fldl dec sub (bad) (bad) (bad) (bad) jmp test pop mov xchg call mov clc aaa cmp and ljmp call jecxz jle mov rcll aad adc (bad) (bad) incl mov sbb iret fbld mov or dec pop lret fcompl incl cld pop es inc dec inc flds jp cmp (bad) in (bad) aaa stos pop popa (bad) (bad) (bad) (bad) js daa cltd cmp sbb fstpt fiadd subb adc loope xchg sar (bad) decl ja or ficom xchg mov repnz dec jg jnp stos pop or push lret cmp scas dec and xor add arpl xchg pop jnp and movsb sar (bad) jmp das mov scas cmp and (bad) (bad) call mov out mov icebp insb mov pop push xchg leave pop (bad) pop cmp std (bad) (bad) (bad) (bad) stc sbb imul loope psubsw test xor movsl dec cmp or cld outsb (bad) jg and jge and add int mov (bad) (bad) call dec mov fnstcw mov and adc xlat mov (bad) (bad) (bad) fbld stos or mov sub (bad) and mov call mov (bad) (bad) (bad) (bad) push mov loopne outsl ret lods in sub loop adc nop inc cli cltd ret in jp xlat (bad) (bad) fcomip adc cmpsl je js lahf cmc xlat xor jmp adc sbb mov or (bad) (bad) pushl jp outsl in out mov je aad mov gs dec jmp (bad) xchg (bad) lcall jns push lret cld jbe cmc xor (bad) insb mov addl popf dec xor addr16 cmp (bad) insb sbb jnp mov rol (bad) (bad) (bad) (bad) incl push inc out dec test mov imul cmp cmpsl notl add call inc hlt or int mov or dec push sub and xchg cltd arpl pop cltd mov sub jp aaa xchg dec incl cwtl test and (bad) (bad) (bad) fistpll dec out outsl sti mov (bad) das mov shll xor cmp imul (bad) call jne pop pop add xchg pop test fsubrp cwtl or jne (bad) inc dec inc inc (bad) mov shrb inc lcall dec lods sub gs test cmp inc std adc sbb pop pop loop int adc (bad) decl mov ffreep cmp out out incl clc stc lods fsubrs sbb sub lcall mov lret jo mov sbb (bad) jmp push ds xor pop lahf out lds enter stos insl jmp add xor ss and (bad) (bad) (bad) lcall test or jae aas mov pop push add mov add pusha xchg ss (bad) (bad) call shrl dec jb push jb out test rcr dec out dec sbb (bad) jmp xor mov test js repz push iret or sar cmpsb dec cs pusha lcall jg lods and ds jno (bad) ljmp mov adc pop popa push jbe adc movsl dec clc xchg sahf rclb or pushl std add xor jg and loope xchg in jecxz call lds data16 (bad) (bad) call dec pop lcall addr16 lret xlat in icebp dec jnp test mul mov fwait sbb aad inc hlt das mul xor jmp push mov xchg jle addr16 push jb (bad) cmp pushl adc scas sbb imul or mov xor cltd lcall incl pop add subl out sub jl aaa pop add test (bad) (bad) (bad) incl sbb lock (bad) mov inc and popl mov xchg idivl loope pop jg push mov mov repnz push sti stos (bad) jmp fnsetpm(287 and xor mov lret scas sbbb jg jmp repz jl hlt (bad) test or xchg ds sub cmp (bad) call popa cmpsl movb ljmp push push mov arpl push xlat (bad) (bad) jnp push xchg jb sbb or das pushf pop mov or ljmp and pop dec repnz (bad) popa xchg cmp (bad) (bad) jg adc push jl mov dec aaa rcll jl xchg pop test jo or pop cmc adc dec push fcompl aam aas push insl push jne (bad) (bad) (bad) jmp add insb mov pop addr16 push popa call mov xor xchg ljmp in lea jp push inc push hlt sar (bad) (bad) dec dec jmp sub adc cmpsl in cmp and lea and cwtl jmp (bad) jmp xchg addb roll mov insb cltd push (bad) decl mov (bad) repz xor daa ljmp (bad) (bad) call bound jns sti jmp mov cwtl inc push leave les pop push loopne and jne sbb push in push enter roll hlt sarl enter sbb cmp inc iret xor movsb (bad) (bad) (bad) fistpll js arpl aaa outsb and negb inc les push xor pushl cmpsb and jge xchg lods je jmp jns and rorb adc (bad) (bad) (bad) (bad) call pop dec and (bad) adc enter fs out mov adc (bad) out clc call (bad) ja ret and movsl jecxz add xor sub xor mov repnz adc xchg (bad) (bad) (bad) mov (bad) imul xchg int or jb xchg pxor (bad) (bad) push fstl mov xorl xchg outsl cmp int3 pslld add lsl je pop leave mov aad jb mov sub (bad) mov and sub (bad) or into sbb sbbw inc pop mov xchg movsb lcall insb jae loop cmp dec inc clc pushl sub out or (bad) lcall scas fistpl push dec lods (bad) jmp (bad) jg cli pop adc (bad) call outsb loop lret jne lret mov lods clc call call inc mov jno mov jbe popf mov mov push fdivrs add dec (bad) (bad) (bad) (bad) mov jle mov adc daa or movsb jp fist mov incl xchg xlat and or xchg fisubl mov xor xchg add cmpsl cld sub mov mov pop stos rorb push leave scas ss xchg sbb adc stc rclb mov cmp enter mov fs (bad) mov push std xchg ficompl jno push lret stos mov repnz fidiv arpl arpl popf (bad) or dec (bad) sbb or lds cmp dec (bad) (bad) jg movsl jo nop shrl fs fist adc lahf push loop mov ret lcall (bad) jo jae and push and pop (bad) (bad) aaa in aaa cld lcall mov lea icebp sub loop movsb dec decb (bad) (bad) decl stc adc fsts stc cmp ss (bad) (bad) fild mov sub xchg (bad) daa aas xor xlat mov push aam dec leave lret (bad) decl into mov pop cmpsl (bad) repz sbb call push loop sbb (bad) (bad) (bad) fimul aam mov pusha and cmpl flds inc and (bad) (bad) (bad) cmp mov ja pusha cmc and jmp popa ss xor (bad) (bad) fcomip aam pop ror out out (bad) xchg pop mov inc sahf loope push bound add jecxz lcall aam xlat mov push movsb shld fwait (bad) jmp add insb inc int3 mov mov dec and orl call (bad) (bad) dec clc xor mov jl lcall pop cwtl outsb pop jne ljmp call jo xchg cs pand dec pop clc jmp mov outsl lahf stos loop clc xor cmp lock sub sub popa mov jecxz stos std adc (bad) push jne loop xchg decl arpl bound decb adc repnz sub (bad) fildll add sbb pop and (bad) iret (bad) (bad) (bad) decl arpl test sbb jle,pt cmpsb xchg jmp ds push xor mov hlt pop and mov inc movsb (bad) call pop test rcl jg push cs jb out (bad) (bad) (bad) mov out fcoml aaa pop pop mov push mov cltd popf out push xlat cs imul (bad) jmp mov inc sti lcall iret js or adc fisubl mov (bad) call mov and add add inc aad jmp mov mov (bad) (bad) call dec mov fwait xchg pop or flds lcall mov inc sbb lock jae pop xor (bad) call or cmpsl fisttp imul hlt (bad) decl xchg mov jb and xor push jmp sbb xchg inc lods loop (bad) (bad) fnop ffreep cmp into ja test outsb in repnz xor test das test sub push (bad) push push or adc std adc mov cltd sub xchg push sbb (bad) mov int lahf push add pop sub xchg jae mov sbb push xchg fisubl add call jnp incb dec or sub inc sub imul pusha add (bad) (bad) (bad) jmp mov xor loopne sbb mov lock pop lahf sbb jns jl push les mov fwait ds sub leave or std and cli dec (bad) mov fisttpl mov (bad) (bad) (bad) pushl sbb daa sub aad repnz movsb push jecxz pop loopne cmp int3 outsb inc mov pop jg (bad) mov jl ljmp mov jecxz lahf cmp dec xchg inc out inc ja cli jb ficomp adc cmp sbb pusha mov addr16 cmpsb test stos (bad) and popa mov imul push outsb ret cli inc cltd in or mov mov jmp sti mov or clc push and mov or out cmp insb mov xor mov cwtl xor jg ljmp inc jge sub cmpsl cmp sbb bound inc jl jle cmc (bad) inc cmp loope mov push cmp lcall mov cmp xchg dec push inc cmpsb mov hlt (bad) (bad) cld outsb jnp sub addr16 add fidivrl das test xchg lods (bad) dec pushl (bad) mov and jecxz outsb cld jo dec cli (bad) lods pop imul (bad) in out fdivrs (bad) inc sbb flds lret and push xchg jle xor adc pop (bad) fcomip (bad) call pop scas in and pusha (bad) mov push (bad) test lret addr16 (bad) (bad) (bad) fdivl hlt popa push lea xchg xor (bad) push pop cmpsb arpl popf inc loopne iret pop xlat (bad) (bad) (bad) pushl sub sbb lock rol pop dec xchg mov jne (bad) sar mov (bad) mov (bad) (bad) (bad) jmp add loop stos icebp push out jns inc stc adc or mov and dec sub push jns xlat incl xchg mov xchg aam pop mov adc mov lret bnd ds mov inc out adc or xor push dec clc faddl or call int es fildl test mov sahf jno jno xorl outsb push and ss rcrb and and jmp nop in sub hlt loop mov ret adc jecxz mov aad mov mov (bad) (bad) mov cmpsb int lods cmp ret add or (bad) (bad) jmp sbb sub ss rcll imul push mov push sti js (bad) (bad) call movsb das cmpsl and repnz push dec xor addl sahf ja jbe and pop (bad) pop (bad) sub outsl (bad) jg mov testl shll stos movsl mov iret cmp jge fs pop movsl adcl ja,pt (bad) (bad) (bad) (bad) fidiv data16 and in (bad) out mov stos sbb and xor (bad) lock add pushf xor movsb mov inc mov xor pop ret shlb pusha jno jecxz cmc das adc ljmp pop loop adc pop mov repnz xor (bad) mov cmp (bad) lcall int3 inc cli out jne adc lods gs jae xor inc mov incl hlt aas (bad) rorl xchg sbb insl xor into and (bad) push push aas (bad) (bad) (bad) incl pop mov fs inc insl mov xchg loop addr16 and mov outsl lcall (bad) call push inc push xchg pop pop loop dec dec or cmp or pop cmp cwtl (bad) (bad) (bad) ljmp cmpsb mov lock add and push aad or loope dec repz and call std jmp pop push cmpsb pop fnstenv inc aas sub push out xor dec cmpb mov decl mov inc or sub cwtl (bad) cli xchg loope and jmp pop sahf pop push xchg loopne cli mov sahf out test add (bad) lret add (bad) (bad) call bound pop cltd stc adc call pop das fst cltd aas mov xchg pop gs (bad) (bad) pushl mov sbb pop jp and push cmp mov sub in arpl add ds (bad) (bad) (bad) out stos mov inc and jns test stos js push and or push sub (bad) js mov imul mov adc (bad) pushl movl daa stos ret inc imul add xchg pop mull dec xor adc mov add lds (bad) insb mov ds insl add pop sbb leave icebp es sbb mov (bad) jg mov sbb (bad) repz fldt fiaddl int3 pop mov inc (bad) (bad) (bad) (bad) incl adc xor sub mov push xlat push fwait sbb (bad) (bad) lcall cmpsb sti scas sub jge shll cmp fldenv cmpsl pop push adc sbb inc int3 and mov xor jnp jno adc inc (bad) xchg (bad) (bad) (bad) call mov mov inc mov in cmp xchg xchg pop leave add addr16 (bad) (bad) (bad) decl dec and and test call loop push push or dec loope in (bad) (bad) (bad) jg sub orl (bad) pusha loopne mov mov mov cmc jmp js cmp (bad) call push fisttpll cmpsw dec push ret (bad) aad pop jbe mov rorb add or cmp mov pop ss jns scas inc jo (bad) xor scas mov (bad) ljmp adc (bad) mov push mov ficoml cmp fstpt mov push insl jno (bad) (bad) (bad) mov and pop mov lock inc add pop xor (bad) decl in inc arpl aam mov push and aaa test hlt (bad) (bad) jg pop jle imul pop sar push push sub or xor cmp lret mov (bad) (bad) fildll movsb scas push and in pop mov jbe push repz and mov arpl scas cli lcall repnz aam xor mov cli mov ja (bad) (bad) (bad) jmp movsl call xor ficoml push lret cmp add ret (bad) (bad) (bad) (bad) jp mov and mov int3 lods out xor jg cmpsb sbb les add lcall in es push dec outsl fiadd (bad) (bad) (bad) push jmp fidivl mov and push xor test xchg sbb sar (bad) decl sub pop in mov dec (bad) mov mov fsub (bad) (bad) incl lcall pop clc sbb out mov xchg (bad) loopne (bad) (bad) (bad) mov mov imulb adc idivb aam lock cld push mov mov nop pop push xor mov pop sbb ljmp cmp ljmp jmp pop mov mov pushf adc or (bad) xchg cltd (bad) leave add loopne sub jns (bad) call rcl dec fdivr sbb test xlat jle out xorl xchg xor lea (bad) (bad) pushl in mov in mov mov fbld mov mov dec pop jle rorb xor adc lahf push les (bad) (bad) mov cmp lods pop add mov cwtd dec mov push (bad) (bad) (bad) (bad) ficompl mov leave mov mov pop lds shl sahf dec scas insb sti scas bound ss into (bad) (bad) (bad) ljmp ficompl arpl mov or jle push aad dec push mov test inc jg scas (bad) (bad) (bad) decl pop movb and mov das pop gs rcrl (bad) jg adc mov xor fwait mov clc or cmc cmp adc stc fildll jmp jl ret (bad) test rcrb fimul mov test cmpsb call or xor enter cmp mov data16 xlat lahf add cli xchg jge cwtl push hlt push mov (bad) mov into repz mov notl pushf loopne aaa (bad) (bad) lcall dec push sbb aas dec add insl adc aam pop sbb sbb fisubr xchg (bad) (bad) (bad) (bad) aas divb adc xor repnz or pop jle mov jl jnp push fmull sub (bad) jmp and idivl adc popa rclb rcr pusha push xlat sub testb (bad) (bad) call rorl out and pop shrl in xchg sbb sub loopne lcall mov sahf movb mov fistl pop (bad) (bad) decl or mov mov in icebp fdivs dec adc jb (bad) (bad) dec mov pusha jbe mov cltd aam in sub lods icebp add or sbb sti inc push shr fsts dec ficomp js mov push dec ss mov inc test fcomip pop std outsl (bad) jecxz xchg (bad) xor cmpsb mov ficoml incb aam lods out (bad) (bad) (bad) mov push push rorb out mov mov xchg and sbb (bad) (bad) js fcmove std pop icebp dec arpl inc inc jge pop mov mov sbb mov add aam das clc dec mov stos sub mov cs or sub call sar (bad) (bad) jmp les test dec add xchg inc (bad) mov jae sbb sbb fildll sub or movsb dec lods ljmp pop mov lock stc ror mov fwait sub push je and sbb push push inc roll (bad) (bad) push repz sahf clc cli leave add sbb repnz mov adc ljmp jmp push jnp (bad) aad cmp push subl out popa mov jmp aas cmp or jecxz push jle sti mov repz push cwtl mov mov (bad) (bad) cmp mov adc push sub imul inc xchg cli jge je jecxz cmp mov incl add repnz adcl pop hlt mov and dec inc mov cltd (bad) (bad) (bad) inc pop push scas xor fcomps jne jecxz or stos push push ds push test movsb jo inc dec popl pop or je popf mov push (bad) adc out cmpsl ljmp fdivrs sbb loop sub (bad) jmp mov (bad) push mov mov lods hlt cmc mov outsl adc cmp (bad) cld bnd cwtl sahf lcall loope xchg fmull idivl pop cmpsl add xor lods aam ret popa mov out xchg mov mov movups shlb sbb mov (bad) jmp sbb sub lret (bad) outsb dec add sbb daa cmpsl and add leave pop ds (bad) (bad) (bad) cmp add xorl cltd mov cmp rcrb push sahf add adc (bad) (bad) (bad) decl add dec in ljmp sub mov pop push adc clc cld xchg push cmp lcall add mov jb int push aas lods xchg dec adc mov mov mov ljmp les inc pop xor xchg (bad) or (bad) or push sub (bad) mov push jp popa dec mov adc cltd hlt or jb (bad) (bad) pushl mov ret ret (bad) ret jb pop icebp dec adc mov inc ret (bad) (bad) (bad) jmp fcmovu inc or into mov cmp hlt adc fldcw mov xchg (bad) (bad) incl cwtl insl and add push or cmp add xor mov push pop inc orb and inc sbb jbe jecxz (bad) decl push jg lret pop sbb mov clc cmp (bad) mov inc mov out movsb or lock ja dec sar (bad) incl cmp xor ret mov xchg leave pusha sub cld (bad) (bad) lcall mov ds jnp adc dec dec mov arpl scas scas aaa jl mov data16 (bad) addr16 roll ret rclb sub decl cli mov mov out sub (bad) mov push lcall arpl dec (bad) (bad) (bad) call imul std sub in outsl mov cmp jb inc jecxz (bad) lcall jns xor sbb jns popf out jl xor sub (bad) mov dec int3 xchg fiadd loope mov je cmp and pop push mov (bad) cmp jp sub mov shl clc mov mov scas and mov (bad) pushl cld sub outsb in mov cmpsl jmp cld add xchg es (bad) (bad) call pop lahf shrl sub inc pop ret sbb mov sub push je pop ljmp lock pop jns test jmp clc decl mov mov int ds (bad) (bad) jmp add lcall ficoml mov or inc jnp sbbl adc push sub cld mov pusha movb (bad) (bad) call rcrb xor push fldenv jbe shll scas je leave xchg jg or (bad) call pop outsl fnstcw das jo rcrb icebp or enter pop mov mov cltd adc (bad) (bad) push (bad) sbb cld adc mov sub push mov test rorb sbb imul inc xchg pop fcoml out cli stos in push mov mov push cld cmc mov (bad) (bad) incl fldcw push or negl mov int sbb xor pop ss (bad) (bad) (bad) inc jnp fwait sub jg loop jbe not lcall insb and ret addl cld (bad) (bad) call xchg (bad) ja fsubrs sti roll mov faddp out sub (bad) decl push jmp (bad) jno das push jmp lds xchg mov ljmp mov cltd fisub (bad) (bad) (bad) pushl or fcomps inc push rcl loopne mov sub push add imul fwait (bad) and mov test adc xorl (bad) (bad) ljmp push and out mov mov pop lods pminub push push leave sbb fdivl inc (bad) (bad) adc fwait in xlat addr16 pop (bad) push mov lret fcompl js (bad) (bad) jmp dec pop out nop (bad) push push mov mov in cld jmp lock mov fwait (bad) jmp cmc cli in mov loop pop pop fidiv and fistpl decl and mov dec add xchg (bad) sti pushf push ljmp and fldl mov sbb sub sbb push popa pop orl dec iret inc in adc jb pushf push pop arpl movb (bad) ja jae,pt leave pop push (bad) lcall push mov outsb aam dec cmp test lahf rorb or (bad) (bad) (bad) ljmp mov xor movsb dec (bad) cmc leave push xorl sbb mov or outsl (bad) (bad) in cmp mov adc addr16 jns add sub xchg (bad) frstor cmc icebp sti lcall xlat leave dec stc (bad) cld (bad) (bad) pushl lock in scas loope outsl movsl aam mov aam loop push in inc cmp movsb (bad) (bad) call call dec das nop mov loope test notb ljmp mov ljmp inc mov repnz psubsw fisub icebp call or test (bad) (bad) (bad) jmp sbb cmpsl push fdivr mov or dec sbb fwait inc fcmovne lahf daa mov (bad) (bad) (bad) jmp dec addr16 rcrb xchg push shrb cmc jge sub in lock rcll add mov (bad) (bad) inc mov jp lods pop sub push add and and scas sahf inc repz (bad) arpl fcomip (bad) incl clc outsb loopne jb out aaa jmp ror and fst mov lcall and push ret push adc js (bad) (bad) call shld sbb mov inc xor psubsb adcb cmpsl mov rcrl loope sbb or mov push movl mov (bad) (bad) lcall dec xchg cmp dec repz shrb dec (bad) int dec add xchg decl (bad) cli sub rclb scas cwtl cli sbb fcomip insl pop jp ss mov imul std (bad) jmp mov imull popa inc lea shrb jg cmp pop and loopne roll xchg lods xchg xlat int3 lods std stos jbe inc sar ljmp loopne pusha mov into push mov stc (bad) (bad) (bad) jmp aam pop orl jae push lret and test jo sub (bad) repnz (bad) decl xchg mov jmp mov in jne mov jnp xor (bad) cmp pop mov sarl mov aaa xor bound xchg cmp (bad) (bad) decl adc jecxz in mov bound or test nop lock xor adc fbstp and es (bad) (bad) pushl push pushf andl push daa out jb test push ds sarb (bad) (bad) out ss outsl ljmp (bad) xchg mov jge mov addr16 push (bad) (bad) (bad) (bad) cmp outsl pop sbb lds pop push ss xor or mov (bad) (bad) (bad) (bad) cmp insl mov clc fsubrl aad scas nop mov insb adc jecxz (bad) (bad) lcall subl dec xchg inc sbb je icebp mov mov or cwtl and shll cltd sbb dec mov cwtl cmpsl mov jle lock fcomip and mov es dec push cmp lahf std (bad) (bad) fisttp xchg or pop or ljmp andl (bad) (bad) (bad) incl push movsb rorl stos dec roll jns rclb cmpsl imul cwtl dec xchg (bad) (bad) cmp dec lcall test jecxz ss mov stos (bad) add rcrb pop sub in notb add mov int3 insb inc (bad) jmp and jo sub cmpsl push sub jecxz cmpsb not orl loopne (bad) (bad) (bad) call divl sbb dec out inc xor dec sbb shlb enter stos ljmp (bad) lcall xor push cmp or adc push lahf in mov fwait test jmp dec sar push loopne repz mov (bad) (bad) (bad) aas push inc and and xchg (bad) add mov cmp fwait rcrl lret hlt (bad) (bad) call inc inc jne inc sub sbb imul push pop je inc inc jne inc xor stos aam arpl nop enter test enter dec cwtl test mov mov (bad) (bad) (bad) decl pop or inc imul rolb lahf outsl push (bad) jo xchg xchg mov (bad) dec (bad) (bad) (bad) incl loope xchg jle jl sar jle aam or adc and dec gs (bad) (bad) (bad) inc ds push dec mov and repnz ficom in cmc scas js sub gs popf mov aam jb jl movsl push fsin xor jno jp pop xor inc add fidiv daa ss (bad) jnp rclb jge jnp pop lock fcoms clc out xchg or sbb (bad) fisttp rorb jecxz in ja xor sbb call outsb lds jo imul in es enter mov call ja scas pop mov stc imul scas sub dec or jae push bnd push stos jne (bad) (bad) ljmp jg lret xchg pop and mov adc mov loope js outsl and mov jae push lcall data16 inc insl mov (bad) cld (bad) sbb and (bad) mov push mov lock shl or (bad) (bad) (bad) stc mov adc lock add aam leave mov es xchg out stos in out mov mov pop insb jecxz,pn scas push adc addr16 insb clc incl imull das xor hlt jae mov js sbb call xchg sarl pop ret pop mov push pushw fnstcw mov sbb cli (bad) (bad) pushl or cmp pop push loope push cltd lret adc sub sub and jp jecxz push or pusha or rcrb movsl mov sbb mov hlt pop lret pop ljmp mov xchg loop add add (bad) ja ret mov xchg and xor push (bad) lcall cmp cmp shlb cmp scas fimull mov dec add cwtl popf mov or imull ret les outsl ss push and popf cs mov fcoms icebp (bad) dec xor mov mov and out xor pop (bad) (bad) (bad) pushl inc dec xor add xchg xor push add mov jns xchg xor vmovaps stc jo incl leave push pop outsl mov ficoml addr16 cmc mov (bad) ljmp cwtl lods push scas popf sub or adc rcrl pushf cmp scas ds jmp xchg mov sbbl lods xchg (bad) loop dec mov jg and jecxz dec je scas mov adc (bad) (bad) decl fstpl stc mov lods cmc adc push dec jnp mov push lods (bad) (bad) (bad) ljmp cmp fs mov xorl mov add and pop lret push (bad) out (bad) mov dec leave xchg ficom clc (bad) adcl in fisub call mov push jle cld and cmpsl xchg or sahf push or adc adc aad adc cmp aaa cld jmp aaa mov cmp jb ja fisubrl cld mov pmuludq cmc loopne stos xor xchg pop sahf js push test loope dec fcmovnu (bad) (bad) (bad) jmp ss paddw pop mov into orb jg or icebp test jmp sahf (bad) mov fisubl mov test ljmp loopne push inc fmul xchg (bad) (bad) decl std pop iret mov adc leave push stos sbb sub push xchg dec xchg insl adc jmp pop stos movsl mov out inc (bad) (bad) (bad) mov in stc pop ret inc jae or xrelease mov (bad) push inc (bad) (bad) (bad) jmp jb add in dec mov (bad) pop bound adc dec xor (bad) decl popf aaa xchg (bad) fcmovne pusha lods testb (bad) popf sbb mov ja loopne xor aas mov into xchg xor dec mov pop iret or push cld jmp arpl add or push fdivrs insb xchg push aad dec xchg (bad) (bad) (bad) ljmp lock pop jmp cmp insl xor mov jmp push jbe sub jno rorl mov lods into add pusha (bad) repnz cld pusha out or dec popf testl insb lret mov ljmp mov out clc (bad) (bad) (bad) iret jae add xchg (bad) sbb jae insb jle add shrb push inc mov (bad) jmp and adc inc mov repz out sahf call sub insb xor (bad) (bad) mov mov (bad) lret xchg or push mov (bad) aas cmpsl aaa sbb (bad) (bad) (bad) fistpl sbb dec cwtl pop lds xchg rorb jne add (bad) (bad) incl pop xchg or xchg push int3 scas arpl lods mov test stos xor cwtl (bad) mov es enter add (bad) incl lahf sub push push mov test (bad) dec stos mov adc lock call popl mov mov cmp out mov (bad) (bad) fcomps roll dec fcomps rcrb add std mov popa push ret push (bad) lcall rclb outsl lods movsl movsl movsb sbb add (bad) call add pop sbb sbb (bad) rcl pop mov jo addr16 (bad) push ja jecxz (bad) (bad) (bad) lcall fdiv ficomp lds out (bad) ja cwtl faddl int sbb or add jg sub mov xor inc push or inc pop mov (bad) (bad) decl in hlt jne mov imul mov adc mov fidivl ja (bad) sbb and lods pop (bad) pop (bad) (bad) (bad) pushl mov cmp arpl jge jp dec and ds jb push rcrl inc (bad) jg jmp push cmp push imul xchg adc sbb incl inc sbbb or and cli cmp stos pop pop rorb (bad) (bad) decl (bad) mov mov jae (bad) or pusha out jmp jbe and xlat add xchg into inc fwait daa mov xor fdivrp (bad) (bad) (bad) clc std jl xor xchg lods bnd pop clc xchg call dec xlat je add cmp jmp cmp aas push (bad) sub (bad) (bad) (bad) (bad) mov xchg inc mov jp in mov in xchg dec inc xor or cwtl cltd fidivrl (bad) (bad) jmp adcw xor or dec pop xchg jnp outsl fmull bnd jge lock movsl dec jo mov xchg dec test cmp cmp mov jl stc cmp push sar or lahf sbb popa lcall call mov dec lods cmpl fsubrl dec in jg and and ljmp and je lret das std cmpsb loop sbb scas sub mov sub jecxz,pn das iret and sti pop push push imul fs add ljmp ljmp add loopne (bad) stc xlat mov in lock (bad) jmp sbb negb push mov out xorl (bad) (bad) in enter mov loop cwtl fidivr dec shlb adc xchg mov pop (bad) cld mov mov dec dec dec mov cld (bad) (bad) pushl js cmp push jne push fisttpl cmc stos mov xchg call (bad) jg dec sahf or mov icebp stc cmpsl mov fild mov mov ds loopne and mov push rorb push ret clc cltd lahf (bad) jmp mov mov dec cli add pusha xchg in mov dec xor lcall ljmp fcompl aam dec sbb adc (bad) popf inc rcrl leave (bad) repnz (bad) (bad) decl call pop es add xor iret out aam adc sub mov (bad) jmp and mov cmp cmp test mov adc (bad) mov mov and ficom (bad) (bad) (bad) jg push push lret and pop push sub and std nop es mov loop popf ret (bad) (bad) (bad) pushl daa mov ret mov mov pop push sbb lret push pop push mov fmull inc xor add or push test add fisubrl lcall pushl pop mov stos pop push cmp mov loop mov (bad) decb scas add (bad) (bad) (bad) cmp mov dec cld cmpsb inc leave xchg (bad) sbb dec inc pop popf decb sbb push rorb pushl ja xchg (bad) sbb pop sbb cmpsl adc sbb dec and incl stos jle push lds push (bad) (bad) ljmp movsl push mov (bad) inc fmull popf es lods mov jae cmp (bad) (bad) (bad) lcall fsts fdivr dec sbb (bad) js lea out xor fbld ds mov popa mov adc dec add inc cmp (bad) call dec pop mov and mov cmp mov sub insb mov jge (bad) (bad) jns cwtl fistp lock bound insl insl les jmp div loop das pop cmpsb lds scas ss xor pop pushf outsb mov aaa iret pop gs mov xchg push mov into and xor mov outsb fdivl mov (bad) (bad) incl pushf repz push es cmp pop sbb push cmp adc and (bad) call jge sbb clc out pop lret add jmp (bad) fsts push add sahf incl mov ds xchg js fcoms pushl scas daa adc sbb (bad) (bad) (bad) push sbb sub cmpsl adc and dec orl fstpt loop or dec cmpb lahf mov cmp std in mov push pop nop (bad) (bad) lcall add movsl and lds (bad) mov sbb shl and aaa mov or and pop loope sbb cmp sbb pop or mov mov xchg jb in (bad) (bad) (bad) mov and pushf mov xchg xchg mov arpl mov xchg rclb outsl test (bad) cmp jge and sub inc inc jne aas dec xchg add adc decl jp stos sahf cli sbb cli cmpsb sub (bad) ljmp dec sar add xchg mov add test xchg repz or mov icebp cs push jg adc xlat jge push sbb cli and imul cld pop jecxz (bad) (bad) (bad) mov data16 lcall std push and adc pop xor (bad) lcall incb sub aad mov jo xor mull rorb clc sbb nop fcompl dec push outsb add mov lret cmc jp and (bad) (bad) jmp mov or rcrb lds (bad) push scas xchg enter mov fldl mov dec cmpsb into add sti push sub cmp orb mov jae inc (bad) (bad) (bad) jg (bad) inc xchg cmp call dec jnp sti lods ljmp rcr sti inc sbb (bad) (bad) (bad) ljmp leave dec mov das gs xchg in scas lcall test cli cltd inc jecxz std mov fxam xchg ds sub add inc and mov fwait rcrb jno jmp dec sar (bad) mov cmp mov adcl push (bad) push xchg xlat fdivrl out nop scas (bad) (bad) (bad) (bad) jge pop pushf in mov sub loopne pop roll (bad) mov in push outsb or fwait (bad) (bad) (bad) incl inc out xor outsl mov sub aas out int pushf into and imul jmp lds mov repz rcll jg clc push jp adc (bad) xor jmp sbb push stc lret insb mov or xchg xor inc fsubrs pushf inc cld cwtl into jecxz cs sbb (bad) (bad) mov mov mov mov (bad) imul lret sbb inc mov mov incl ret sub out push jb (bad) in push popa jmpw push in inc int3 adc and mov add mov test add mov mov sub add (bad) (bad) (bad) call add enter inc sbb inc inc mov pop mov push cmp (bad) jo cltd clc ljmp test int3 mov cld test push mov ffree xchg pop loopne ds enter inc jg and xchg add repz negl fsts (bad) jg iret push movsb or fisub out lods inc sub jns push fisubr sti (bad) incl es in mov mov outsl mov xor dec test mov inc out jg pop (bad) (bad) (bad) inc sarb add sti jbe das orl lret int (bad) fdiv lcall push mov iret lcall push pop lret lock ja imul (bad) stos push ds frstor add aam and sti mov mov xor jmp (bad) (bad) inc mov sub es repz sahf mov adc scas popl ret (bad) (bad) (bad) pushl (bad) ja js ret xor adc jp push scas xchg pop dec xchg cld sar (bad) (bad) pushl decl add test ds dec lods jp,pn es add mov pushl sub ds (bad) sti dec js sub xchg cmp cmp xor pusha stos pop mov stos ret (bad) (bad) jg sub emms jb rcll jmp test ret loopne jle mov (bad) (bad) jg in call cltd jp (bad) scas cmp jg adc xchg dec sbb (bad) jmp cli mov pop sbb adc iret mov push cwtl in fcoms lcall imul pushf mov fwait bound (bad) incl roll xchg dec popf stc in sub (bad) sti pop xchg roll ljmp out xor push jle enter and stos popf sarl (bad) (bad) lcall adc sub loope out neg and outsb ret jecxz loopne or sbb (bad) jg inc int3 fs jle cli pop mov lahf fmul add mov imul xchg mov mov aam (bad) (bad) (bad) call clc inc cld js and lock cmp dec inc fndisi(8087 sbb ds rolb (bad) ljmp daa jno (bad) push rorb scas fs cmp adc (bad) (bad) (bad) jl mov out push out xor popf xor inc mov pop inc aaa mov push adc jmp stc out xor mov (bad) aaa xchg mov lahf mov loope (bad) adc pop inc adc scas cmp into jmp (bad) (bad) lcall flds xchg jae push jns xor stos iret fmul jnp or stos icebp add (bad) (bad) call push sub addl add popl inc push mov dec lcall push aas dec std (bad) daa xchg insl std (bad) (bad) (bad) call or pop lea mov mov dec jo fistpll out aad mov push fcoms xchg test lret xchg jmp xlat inc mov decl ljmp pop and js inc sub mov jbe (bad) (bad) fist add lds jnp dec repnz outsb sub dec std pop inc dec clc (bad) ljmp lods (bad) mov clc ljmp push lods pusha pushf lea sahf add xchg iret jl cmp jecxz imul sti jecxz std (bad) pop repz pop push lods cli stc cli ljmp popf pusha das call sbb xor in out gs test nop jne call std jmp outsb adcl dec call lods add push mov sbb (bad) call fs jb dec push int inc out dec pop cli pop push (bad) (bad) mov adc mov sbb jmp xchg testl dec (bad) (bad) (bad) (bad) sti pop pushf mov les loope xor ljmp insl and jecxz xor (bad) (bad) jmp push push mov mov push icebp mov cmp or ret enter clc cmp jno stc loopne mov sar outsl lcall pop or subl sbb sbb in (bad) (bad) (bad) ljmp jne jns lcall dec (bad) fisubr push test xor mov scas lcall add popf mov inc iret xchg adc mov (bad) cwtl js aaa ret das xchg mov lret ss loop fbld ljmp (bad) int fldcw pop adc out or mov test lea add pop add test mov mov (bad) (bad) fimul insb (bad) dec gs in add aas xor jmp out fwait stc pop mov outsl call sbb test or gs rcl decl or adc add insl pop (bad) (bad) (bad) incl jbe adc inc dec pop inc xor jge jmp jmp test mov call leavew lods dec inc int3 push push sub mov rcll push or (bad) ljmp mov push push pop pusha mov push inc sub xchg inc (bad) (bad) (bad) (bad) fldenv test cmp lds add repnz jbe shrl mov cld adcb iret inc dec sub mov (bad) call fwait xor sahf mov inc sub xchg jl sti test aam xchg out inc in (bad) ret pop push in and (bad) jae push ljmp in push in mov xchg pop inc outsb add (bad) (bad) (bad) pushl mov fmull push dec (bad) pop js cwtl addr16 adc pop subl (bad) (bad) ljmp enter pop xor mulb xchg sbb or loopne mov icebp lcall push add loope popa mov pusha dec jno (bad) (bad) in pop push pop mov fsubs mov push fsubs pop add movsl popa (bad) mov (bad) (bad) (bad) pushl mov jge mov push sbb decb sbb out inc cmpsl push jecxz jge lret (bad) pushl cld (bad) sti enter enter xchg mov push dec nop inc mov pop in stos pop (bad) int3 pop (bad) (bad) call aaa fdiv lds push ret sahf jl pop jo std ja stc mov (bad) (bad) (bad) aas and xor sarl fnsave sbb pop daa sahf inc xor push (bad) (bad) (bad) incl jg jecxz in clc xor mov push xor cmp clc cmp sbb jg ds push ds mov or adc mov int in mov cmp das (bad) (bad) (bad) pushl test mov sbb dec test fadds imul dec (bad) mov add mov lret (bad) cmp xchg jecxz test jge inc daa adc and loopne adc fisttp cmc data16 pushl jg adc inc mov cmp icebp push push or push mov (bad) incl cmc inc or mov scas sub mov hlt notl push push mov into pop dec (bad) jg dec ds sub add adc mov (bad) std mov les stc push into xchg cmp jmp push pop test or arpl cmpsb das xchg inc cmp fisubl std mov sbb sahf dec out daa mov push xchg ret ss outsb lahf in xchg pop mov sub jo mov sub inc mov pop adc pusha cmp xor repnz scas inc xor jg mov test enter jbe sbb pop fsubrs inc sbb scas adc (bad) jmp mov les cmp dec jae push xor (bad) (bad) cmp lock (bad) mov jg test fwait sbb sbb in xchg (bad) (bad) (bad) push addr16 inc xor popa and fwait lret ret dec out loope shll push loop mov jmp push add sbbl xchg test pop in push outsl in insb std sbb jb sbb in in dec jns (bad) jg ds jb push data16 xchg lock push dec movsl pop pop cli incl out cmp xchg fwait in and fiadd pop (bad) (bad) (bad) jmp scas adc cmc ljmp or pop push movsb add les iret dec movsl push mov loop jmp dec pop inc jnp addr16 sar (bad) mov push jg and inc adcl dec (bad) cmpsb into fistpl push sub clc (bad) incl push or push ljmp sarb mov add lret jne clc cmp dec xlat loop gs (bad) (bad) dec push call sbb leave pop aas in push in jo cmpsl mov (bad) (bad) push mov lahf add jle movzwl loopne xor (bad) pop add (bad) and lret pushf fistl or ljmp jge jg push lcall jle sbb int repz shrb mov (bad) pushl sahf jle cwtl popa test sub sub test outsl test mov imull sub inc adc lock xor mov mulb pop in (bad) idiv call dec ja sbb (bad) jmp fwait test aam adc mov aaa std fwait fs fisubrl roll xor in sti xlat pop add inc mov (bad) (bad) lcall rclb sub jae les push test cld push (bad) mov dec outsb fiaddl cmp (bad) call aam xchg mov push xchg pop cmp out mov or (bad) jmp mov xor es sub fcomp pop loop inc xor (bad) (bad) (bad) ds cmpsl fs sti cld imul adc jg mov rsm inc pop sar mov lcall pop lods cmpsl dec and fmuls insb xchg mov lods pusha aam pop pusha jmp es jecxz sbb sahf or sub cmpl add pusha and rcrl (bad) lcall fisubr mov gs std shlb jecxz sub insb and lahf cli pop mov cmp jmp mov fstl mov mov push outsb mov test daa js sub add xchg mov xor (bad) (bad) pushl insb shrb insl daa mov xchg xchg divb add call push pop mov scas call inc into and push test add (bad) mov add sub stos jo pop icebp outsl mov notb cltd es inc pop cmpsl cld pop (bad) fsqrt out mov (bad) (bad) pushl aad in mov sarb jae jb sub das in divb add push std (bad) ljmp adc inc repz xor add adc dec call (bad) jmp test lods inc xchg xchg xor cltd jb loop in or (bad) adc add cmp (bad) incl (bad) popf xor sub mov bound mov cmp and cwtl stos jo jb mov or (bad) (bad) jg mov out inc popa fs sbb jp js dec std push cmc (bad) (bad) pushl push dec mov les sti inc xchg movsb daa push fstps loop mov push stos cmp test lahf inc sub xor rorl pop cld sahf pop sub out popf jg arpl mov add (bad) (bad) (bad) mov fldenv sub ds jbe adc loopne adc mov jno test or pushl rcr test mov inc mull aam xlat das rcrl in stos fbld hlt ds (bad) (bad) lcall pop ss sbb andb lock push mov ret loopne mov ds into mov inc aaa pop sbb sti (bad) (bad) (bad) mov add pop outsl fwait rolb cli adc inc push fdivs scas or mov jmp jle and decb rcr fs in pop std orl mov push imul jg xchg xchg cmp ljmp adc sub xchg ss stos or fwait das mov mov mov adc adc (bad) ss ret mov mov lcall mov add loop fimull ss clc adc rcrl test andl jmp pop cmp out repz outsb mov cmp scas lcall mov movsl data16 add movsl loop push inc dec push lods and mov dec mov adc pop xor pushf add (bad) (bad) (bad) mov pop fild imul jecxz xchg popa mov aas adc cmp add push pop stc adc fdivr mov mov jne sbb push mov push int sub in imul addr16 dec out imul pop (bad) (bad) (bad) call xchg or lock lret mov ret xor jnp icebp lahf add sbb or pop loopne jmp test cli jp dec pop loope fistl cltd bound xor out add push xor mov push or int3 and jb insb aas subl ret mov push jecxz xor push jne data16 (bad) (bad) mov lret aad sarb xchg popa out mov or push jnp sar pop hlt mov fisttp lret dec jae ja repz fildll (bad) dec (bad) mov mov dec mov mov stc jo pop mov ljmp shrb (bad) (bad) lcall stos or scas push xor xlat nop (bad) insb dec sbb pop sbb sub mov jmp push cmpsb cmp aam sbb outsb fcomps lcall xor out movsl arpl jo add imul (bad) std outsb sti and jo inc (bad) (bad) (bad) call andb pop mov sti hlt dec insl mov fstl or jp mov push ljmp mov sahf push in cmpsl (bad) jno pop adc test fucomi add add sahf and pushf out pop inc lahf inc je fistpl (bad) outsl cmpsb fcos ljmp clc push mov sub sub test mov (bad) jg incl mov lock adc push and jo call loopne mov in out or mov adc sub add bound xor push push inc mov clc mov movsb loopne mov loop pushl pop push or pavgb mov add cmp or push fsts (bad) (bad) decl sbb xor lret and mov jae stos vpavgb sbb dec ret add (bad) pushl mov add adc xlat cmp sbb cmp mov or mov pop mov add or (bad) (bad) (bad) clc xchg in push push mov dec mov lret les pop or mov cmp (bad) (bad) fisttp cmp int3 cli pop push leave push xor or xor xchg (bad) (bad) incl add add sub mov pop into ja (bad) lcall mov xchg dec jns call in sbb mov mov aaa xchg es das les xchg mov insl cmpsl lret sbb mov fbld cmpb sub cltd jnp test (bad) pushl xor ret (bad) out push jmp add gs push test (bad) (bad) call sbb dec pop jp insl inc (bad) jge add sbb adc (bad) mov aad push int pop jb js xor mov lock adc lds pushf dec mov stos sti fstps aad push out adc push push ljmp clc pushl scas repnz sub lcall sub decl popf loope or enter incl fnstenv incl test inc cmp leave faddl ja js push jmp enter (bad) (bad) (bad) jmp outsl stos scas jo push sti (bad) ss xchg sbb jg sbb lods dec mov les das dec or mov inc cmpsl (bad) (bad) (bad) ljmp jns mov sub pushf insb push pop mov xor sbb mov (bad) outsb mov cmpsl bound jge les (bad) (bad) ljmp cmpsl in fcomip dec cs ror call ds leave clc mov (bad) pushl fcomi mov mov xor push das mov (bad) cld fsqrt (bad) jg xor out sub call aas pusha and sti push movsl push cmp shrb das mulb aaa cmp lea (bad) (bad) ljmp adc (bad) (bad) (bad) sarb mov cmp lods sub repz sbb loopne pushf push icebp aaa xlat mov fiadd pusha (bad) (bad) (bad) push pop or bound pop xchg mov aad fisttpl lret adc cmc das pop cs add (bad) (bad) inc lcall pop out push sub in icebp push dec adc jge addr16 fiaddl (bad) (bad) decl jp push sub cwtl sbb sub mov and inc scas pop jecxz mov xor (bad) ljmp lock sub out sub pop ffreep xchg int out in xchg sub push xchg jns mov popf (bad) (bad) push xchg pop aaa (bad) loopne not push mov pop (bad) mov add ficompl call jge (bad) stos jmp leave loop into lods in or add dec cmp dec ror xlat (bad) (bad) mov mov or mov in mov jle adc (bad) call iret out jl or or fxam xlat mov clc lods inc subl (bad) (bad) (bad) mov icebp add nop or dec jle cs aam xchg cmpsb jp mov lcall sahf xchg jmp jg sub mov int3 and add (bad) (bad) (bad) lcall pop jne aaa xchg add int lods xchg mov xchg dec call test xor jecxz push inc cli out stc (bad) pop adc js repnz sahf mov out or push aas sbb into push pop fidivl (bad) (bad) cmp addr16 dec loopne out or insb adc cli out and dec mov push std (bad) (bad) (bad) jmp cwtl pusha adc sbb ret mov and jb ffree outsl jle (bad) decl mov adc dec add lea outsl and (bad) (bad) decl adc inc pop cld pop xor inc mov pop push movsl fcomip fdivs jae test or in jno jbe fmul into xchg movsb (bad) (bad) (bad) incl xchg sbb adc iret or pushf lds pop mov lea (bad) push xor into cmp insb stos imul jg (bad) lcall inc movsb xor pop xor pop push jp mov (bad) mov jmp arpl sub (bad) (bad) decl xor push cmp popa (bad) (bad) sub jo mov dec sub (bad) pushl mov in dec mov mov inc lcall mov sar fsubl stc mov outsl mov (bad) pushf das lahf dec cmp (bad) (bad) dec in adc inc ret sbb fwait xchg mov xor loop sbbl mov (bad) (bad) mov loopne test arpl cli in subb lret pop add (bad) (bad) mov js mov rcl fadds push nop out iret mov ja fisttp mov std jp enter pop mov (bad) or sar mov lods or insb or das clc inc pop jp mov fidivl dec std sbb outsb sub (bad) (bad) (bad) jmp inc (bad) push std (bad) pop lods daa jge xchg cmpsl sahf xchg fildl jg je jmp sbb pop cmp leave cmc lahf (bad) (bad) dec pop xchg mov inc xchg cmpsl jg mov fisubl inc mov (bad) (bad) (bad) call xlat iret sbb loop clc ja and aas inc rolb std mov ljmp ljmp pop in xor sub xor adc cmp aas aaa movsl adc and pushl jnp or push aaa stos pop cmp loop push mov pop dec mov mov sub inc mov lods jge mov lock push xor pop in scas jg incl mov inc pusha pop rcl xor aaa dec push out mov mov jne add cmpb cs ret popa xor shrl cmp jns mov (bad) (bad) pushl mov or movsl mov nop mov sti (bad) fnsave jno fs fcomps clc (bad) lcall push xchg sahf ficompl mov jbe subb fadds divb sahf sub mov push lds nop (bad) (bad) (bad) (bad) mov pop mov mov adc scas out and je popf rcrb push ljmp jge cld add shll pmaddwd sub xchg sar (bad) (bad) incl jge cwtl (bad) pop xor int3 (bad) xor nop xor jb leave cmpsl test xor push jno (bad) (bad) decl cmp dec mov adc jae mov pusha outsl enter pushf inc test mov cld mov lret arpl or xor daa adc out push xchg mov lcall movsb insl mov aaa cld call adc sahf pusha es outsb insl (bad) jne test (bad) mov (bad) (bad) call push movsl pop sbbl hlt xchg mov dec push sbb add (bad) (bad) (bad) jmp inc test jl xor inc in outsb pop xchg xor dec out pop fildl lahf repnz and ja insl sti mov out outsl cmpl add lret clc decl mov hlt push mov cmp daa (bad) (bad) decl rolb jmp inc and sbb cmp insl mov fdivrp (bad) (bad) incl mov push mov push xchg xchg jae push bound jg mov in mov cmp aas and cld inc (bad) call sub xchg cmpsb mov (bad) mov jb cwtl in jecxz xchg jecxz ljmp push pusha pop jecxz imul xchg adc test addr16 (bad) (bad) dec inc addr16 in and xor scas jmp mov or sub (bad) (bad) ljmp xlat jecxz sbb jg dec mov ds pop cmp fdivrs inc rolb fild sbb pop mov dec or jb test xor adc xor aaa sbb ljmp push push xchg lds push aam (bad) (bad) ljmp mov leave jo push (bad) mov push (bad) sub xor shrb jno pop out ljmp push mov sbbb push sahf inc in mov adc mov decl les das lret js int3 add (bad) pop dec and orb outsl jp adc in dec mov loopne pop jnp inc mov outsl repnz (bad) (bad) jmp jae (bad) jmp jl mov jecxz je dec add call insb mov cld repnz ja pop (bad) ljmp push inc in xchg loopne xor mov adc inc dec dec call loopne xchg sub mov jmp xchg dec cmp aaa insl or (bad) pushl in adc aaa adc and loopne mov incl lock ds fwait mov dec (bad) (bad) (bad) call test ss test sbb mov add sbb addl or or dec clc fsubrl push mov sbbb jp sbb (bad) outsl ret aad js (bad) (bad) inc sbb fisub lock sub out (bad) (bad) (bad) dec sbb in pop out mov xchg cmp mov xlat stos bound and outsl dec (bad) (bad) (bad) ljmp sbb add negb and mov ret mov enter lock out fstl cs dec mov orl icebp jp push pop stos insb sub test call cld subl fdiv xor out jno stc std mov fcos (bad) (bad) decl fisttp or mov hlt mov (bad) std (bad) mov mov lock pop mov imul (bad) and leave nop or (bad) (bad) (bad) incl leave mov xor lahf push fwait inc lret dec cmpsl mov std pop adc jmp cmp (bad) jg (bad) jle rcrb mov mov stos inc jb dec sbb add and (bad) (bad) jmp sbb pop push dec cmpsl iret xor lods ljmp mov rolb stos (bad) (bad) (bad) fsubs fwait (bad) out cmp ss std and repnz sbb (bad) push mov roll imul sub xchg add imul call mov push es daa decl sub mov (bad) (bad) jg pop jge mov fidivr sti pop in aam mov test lods (bad) (bad) jg lcall adc hlt out jnp rol mov mov mov xor sub pop dec lret inc mov cmp es cmp mov and inc and mov icebp xchg (bad) add or (bad) (bad) ljmp mov addl cltd ret jae mov mov enter hlt (bad) mov push mov (bad) (bad) (bad) fcmovbe stos ret mov je cmp in aas push int xor leave cltd inc stos cmp push push sub int3 lds mov rorb mov ret ficompl add into cmp dec dec mov cmpsb inc mov mov lcall mov mov mov pop push adc sub movsl jge cmpsb (bad) (bad) (bad) jmp dec adc mov mov pop (bad) clc out xchg rcl lds popa jbe jmp jns pushf andl lcall dec ds push ret adc sbb out aam sbb sub or pushl pop lcall and (bad) (bad) (bad) ljmp mov sub lds push xchg cltd push jge mov mov pusha pop fcomip (bad) jmp cmp mov lret les and cmp enter cmpsb sti (bad) (bad) pushl xchg or add fldt nop addb xchg mov sbb add je arpl insb fdivrp movsl lods jg mov (bad) xchg lock sahf xchg daa mov (bad) (bad) call lret repz dec cltd popf mov adc push ret mov orl mov dec push jg jl int hlt sbb cmp cmpsb (bad) incl dec cmpsl xchg mov ret rorb mov xor or lcall call inc cmc sarb lahf movsl in cmp jmp cld sbb jbe in pusha decl push mov in mov sub (bad) (bad) jmp int and out cltd ja (bad) dec lock test mov jecxz leave data16 ljmp loop adcl (bad) jecxz sub call hlt (bad) xor (bad) (bad) (bad) incl xlat push addr16 neg iret inc aaa adc xor lds cmp push (bad) dec pop out mov into dec test or xor cs and inc imul in dec jo inc and ljmp sarb sbb das jle scas in fs scas adc (bad) (bad) (bad) pushl leave xor push adcl cmp mov je dec jbe xlat (bad) lcall mov je mov xchg pop pop sbb inc std cmpsl imul (bad) (bad) call push pop out data16 push clc sbb mov jle adc lds push jl clc (bad) sti mov test mov data16 mov push ds lret cmp aas mov imul pop lcall decl sbb popl popf mov adc cmp sbb inc in (bad) (bad) (bad) fld dec lret push clc cmc push jbe or jnp or outsb jmp mov mov psubb or lock clc call fnstcw pop shrl or sub ret mov decl ret mov (bad) xchg incb fs lcall (bad) (bad) aas mov ficom enter pop pop mov (bad) incl fiadd jecxz adc mov test decl negl aaa mov ljmp cli subl add mov push add lock push mov (bad) ljmp pop rclb fmuls sahf imul icebp pop fdivs fstps (bad) sarb ljmp jmp add pushf mov sbb insl mov (bad) (bad) (bad) pushl in cmp sti xorl adc in orl stos cmpl aaa add fxch mov faddl and (bad) xchg jo sub lahf pop push in (bad) mov fmulp xor popf cltd sub fldcw arpl sub ds (bad) decl arpl jb cltd std pop pop pop sbb mov mov add pop mov (bad) (bad) jg in lahf rorl xchg push data16 aas fucomi dec loopne dec fiaddl sub insl fstpt inc into inc jp and xchg pop add decl pop jg mov dec repnz mov nop outsl jge pusha mov adc loopne pushl xor aam jo jo jae cmp flds clc ljmp cmpsb push dec loopne popl jnp dec jp (bad) arpl repz jmp lods pushf jne fimul sub dec or sbb enter push lods aad xlat (bad) loopne add xor pop movsb mov loop call call addl aam push pop mov movsb (bad) jmp sub xor dec xchg ds mov divb adc (bad) pushl dec enter out test jae scas and add inc pop jmp ljmp dec or push dec pop mov cmp (bad) (bad) (bad) call int push mov jmp mov inc xor aam or mov (bad) mov ds ficomp sub xchg (bad) ss ret nop mov xchg sti stos repz pop inc lret mov dec (bad) fdivrp pop rol pushf mov sub add call (bad) (bad) aas push int3 (bad) dec imull xor in xchg mov xor in adc (bad) (bad) (bad) dec cmp mov outsb mov inc stos dec push or scas inc mov out adc ljmp dec ds loope and (bad) xchg inc push repz lods (bad) (bad) (bad) (bad) call enter inc push scas sub das cmp mov sbb and mov sahf mov and (bad) (bad) ljmp cmc stc cltd in ret pop insb push inc cmp xchg popf notl push pop movsb jo ror insl loopne pushl adc out mov add cmpsb xor (bad) jg mov cs mov push mov xchg leave push jne addr16 mov add div xchg xor lock xlat lods int3 cmp pushl (bad) sub int fdivrp (bad) dec aas or dec push mov imul pop xor ret leave or (bad) (bad) (bad) jmp sbb jbe and and lds scas lods loop nop inc scas adc add shr jae cld (bad) (bad) lcall pop jl imul or clc test bound mov (bad) jg popa sahf fidivr cmp andb adc inc stos fldt fdivs (bad) (bad) lcall pop icebp xchg push pop lahf and push hlt popa mov cmc sahf sbb sahf pop add inc jno xor loop sbb outsb lahf outsb or or (bad) mov (bad) decl ss adc sbb jns or in and les jp xlat or (bad) (bad) (bad) jle inc mov push clc (bad) hlt aas add add lods pop jl xchg imul pop adc loopne out std fisttpl idivb jb (bad) (bad) jg xor ss jno insl pop xchg xor mov cwtl xor sbb push (bad) decl mov mov lahf (bad) lret jno or loopne lcall ljmp sub sub mov clc out or decl or sub mull icebp add xchg pop test (bad) mov fidivl xchg mov mov push inc mov jp cwtl dec leave xor (bad) jmp adc sbb push pop mov (bad) (bad) out mov in push cmpsb sbb fidiv ljmp xor (bad) (bad) dec or out xchg xchg adcl mov mov and push jo push cmpsb sbb push dec mov cmpsl xchg inc add push dec mov js repz (bad) cs push pop cmp (bad) (bad) inc cmp cltd gs les fwait and push mov mov mov push call xchg repz fnstenv mov mov popa call in mov and cmpsb sbb enter add movsl imul sub mov outsl das lret (bad) (bad) (bad) call out inc pop adc pcmpeqw mov jmp loopne sbb mov subl jae (bad) (bad) incl sbb fsubs cmp inc sbb dec scas or jg mov jns addr16 push mov cli ret stos pop jg daa nop sub call inc mov xor mov fiadd lret aam ljmp rcll (bad) and sub jns sub pop and jle pop lahf jmp mov test pop cld mov xchg outsl or insl std scas arpl or (bad) lcall cmp into (bad) rclb dec daa es (bad) and fwait and push sarb mov (bad) pushl mov sbb subb pop xchg aam cwtl hlt pop dec and popl bound mov sbbl mov clc cld enter ficomp inc and pop (bad) ljmp ret mov add stos pusha mov cmpsl inc jg movsb test sbb cmp mov (bad) (bad) jmp repnz ret std pop mov lods push (bad) mov test (bad) (bad) (bad) incl cmp mov fstl scas adc cmp pushf ss mov test (bad) (bad) call icebp stc in (bad) stos xchg in rcrl (bad) cld jg inc inc mov lret (bad) (bad) cli jo idivb mov add pop das adc xlat addr16 jae aam cmp cld lds lahf insl lods loopne cmc (bad) jmp aas fsubr cmp pop cmp xchg mov cwtl dec fxtract ds std loop (bad) pushl es and pushf mov xor sub loope lods xchg repnz cmpb xchg mov sbb push (bad) mov (bad) or jmp ljmp and imul add bound dec sbb out rorb push (bad) (bad) (bad) dec cli dec rcrl out push mov pop loope (bad) lahf addl call (bad) (bad) (bad) jmp insb stos test in mov inc pusha insb jg mov in sbb (bad) (bad) jg (bad) divl cmp sub pusha push cmc jbe jae mov pushf aad dec pop aam clc push or adc cld les in call sbbl pop cld fisubl ficom xor jecxz lock (bad) (bad) (bad) js enter mov je icebp out xlat sub aaa roll insb insl or adc adc test adc mov mov push cmp adc mov cs mov pop imul adc mov xchg (bad) (bad) (bad) mov mov pop mov imul js pop push (bad) (bad) (bad) pushl inc cmp add mov mov pop cmp popa cmp out adc loop mov (bad) (bad) call (bad) adc xchg pop sbb lods subl nop loope (bad) xlat add inc ficomp idivb jp mov and push ss mov daa inc test jl insl scas lret (bad) and fistp pusha leave (bad) (bad) jg fiadd lods xchg fisubrl lcall push dec add xor and les (bad) lods mov pop (bad) (bad) (bad) dec aad mov es cmc cs jge imul loope fwait (bad) lods repnz cs (bad) (bad) push push ja jp and jbe,pn out fdiv daa mov ficoml jp iret rclb (bad) (bad) (bad) lcall mov sub and insl lds je push data16 cmp xchg popa mov (bad) call enter fildll in daa xchg loop dec sbb test mov aaa loop std nop xchg cmp adc jmp sbb cmp jb movl fist inc lahf int3 addr16 (bad) jmp (bad) push mov mov int sub add dec mov ljmp add add xchg mov xor decl shll xchg mov inc (bad) and pop in cmpsb cmp test cltd mov fisubl sub fidivr out mov arpl fnstcw cli aam mov cmpsb sbb inc or xor (bad) (bad) (bad) (bad) call jmp pop xor pop inc dec nop jbe mov cs mov push (bad) mov rorb push pop jge outsb (bad) scas in faddp push std push or or (bad) xchg fisubr or xor pushl movb ljmp popf xchg daa mov ljmp sbb pop inc jno fs add in mov inc hlt dec (bad) jmp mov (bad) (bad) pushl and push mov test out adc pushf push fisubrl mov or push decl add sahf dec pusha xorl mov int (bad) test andb rcrl cmpsb ds (bad) xorl out mov sub dec pop xchg or mov rcr call mov mov or mov ret mov insb xor repz add pop sub out lods leave or mov or mov fisttp mov push jecxz push jns (bad) ljmp cmpsb inc mov adc movsb std jp std dec test loop insb fistpl scas arpl sub sbb mov pop movntq out (bad) (bad) lcall scas lcall inc cmp pop jnp sbb leave cltd push rcrl das dec ljmp lahf mov jno inc push sti mov inc push lcall (bad) incl push add pop shl cmpl cmc popf stc sbb dec movsb inc (bad) jnp cmc pop jo arpl xchg test sub popl xor jne pop lock (bad) lcall inc push aaa add push add mov inc mov cmp ss push std adc pop lock ds lahf (bad) (bad) lcall call pop mov jmp insb ja in dec jl add push adc ret lea cmc jle fwait (bad) mov (bad) jg jg lock pop adc insb mov out jae mov (bad) jge mov aaa std incl push test jp in inc mov mov xchg sahf or clc lcall call call jl (bad) (bad) push pop jno fsubrs push mov sysexit jo,pn adc add (bad) aas (bad) (bad) (bad) jmp jg adc insb sub (bad) movsb inc mov mov arpl xchg inc ret call cmp xchg pusha sub mov add xor jmp lock xlat jmp xor jae outsb lcall (bad) (bad) ljmp aam cmpsb aad sub inc sahf jmp ja dec jle cmpsb pop mov int3 xchg mov hlt (bad) pushl je jbe mov dec adc mov push mov cmp cmp xor scas mov repnz test mov and mov pop adc push or xor mov (bad) dec jae mov push add or in jo dec xchg ror (bad) (bad) (bad) jg cmp subb lret gs fldcw sub mov fiaddl mov mov xor jg pop insb fcoms (bad) (bad) (bad) jmp cmp pushf xchg cmp and cmc arpl std fisubr cmp mov (bad) (bad) call dec push jp aad (bad) mov jmp pop (bad) inc jg pop aad clc fsubl lret xchg call sbb imul gs jle adc xor ss lcall test icebp (bad) dec stos (bad) jg cs push pop xchg adc dec nop dec xor fild fcomip (bad) outsl jbe (bad) fnstenv add lret pop je out xor cli (bad) (bad) decl sbb stos stos mov mov jecxz rcrl call scas les and add jnp push dec mov lcall (bad) (bad) ljmp (bad) popf call mov inc daa mov test or or or fbld dec mov (bad) rol ss sar call outsl jae les cmpsl dec movsb inc adc xor ja outsl push leave add cmpsb dec xchg (bad) jmp xor jecxz jp add (bad) (bad) decl je hlt lret bswap (bad) adc scas mov (bad) shr ds jb out pushl dec (bad) (bad) (bad) lcall sub mov mov sbb pop mov mov add jne cmp fcomip push mov insb imul push jl std or push cmpb sbb mov mov jbe fmull mov jmp ss repnz pop cs or jno mov cmp sub sub (bad) push pop cmp fnstenv pop movsb repnz popa jmp cmc (bad) push cmpsb add push and ds stos mov (bad) xlat fsubs std outsb lea (bad) (bad) call jns dec mov add leave xchg (bad) je sub jo adc cs divb jo test insl mov mov (bad) (bad) (bad) jns jbe test lahf cmc mov or xchg lods push jbe cmp (bad) das jmp sti (bad) (bad) (bad) mov lock lcall sahf add xor or pop data16 (bad) (bad) jg out arpl and data16 or adc mov lods push pop jge cmpsb mov (bad) jbe (bad) incl cld inc fsubrp popf mov xchg fs mov cli xchg mov sti jge lcall xchg mov cwtl mov (bad) (bad) (bad) jg and mov out out xchg in xchg jo mov inc dec cmpsl sbb push dec inc and mov pop call (bad) cmc cld addr16 jmp add (bad) (bad) jg or in jno aas dec inc mov (bad) jo inc outsb mov (bad) jb add sub (bad) (bad) jmp or cs aad sbb or cld jmp xor push push mov mov in inc xor pop push push js lds in dec std push mov jns (bad) (bad) (bad) cmp imull jbe and add repz push clc mov pop sarl push ds into xchg jae xlat (bad) push pop not xchg out sub cmp es cli (bad) (bad) jmp stc (bad) mov dec pop cmp jg scas jne dec imul xchg aaa cld pop lret mov jl xor jl jmp dec sub aaa test jge out scas fist in (bad) xchg aas mov fist clc cs (bad) (bad) (bad) dec mov mov pop or pop imul std cmpsb sbb loopne or das inc (bad) (bad) (bad) (bad) out sub jne fwait subl sbb js sub fstps jg mov inc adc lcall dec inc xchg mov (bad) mov pop popf xor hlt xor mov ljmp cmp add cmc out jnp pop out cmp (bad) orl (bad) decl xor add sbb (bad) lahf sbb shlb pop cmpsb (bad) (bad) (bad) pushl (bad) mov ljmp push mov push stos xchg cmpsl hlt lahf pop mov dec pop sarl (bad) fild fidivr ret lea nop pop incl movsb lods inc pop ret cli mov push (bad) int3 outsb stos mov (bad) aas xor into pusha cmpsl mov aad imul inc lret addr16 jne stc jae or stos aaa notb jp add cmp jns loop mov aaa jge jne (bad) (bad) ljmp out jle push clc sbb add adc popa lret sub ljmp daa jb enter cmp or (bad) (bad) ljmp push jp sub dec xor inc adc cmpsl xchg jb mov into add xchg dec out pop sbb inc (bad) (bad) (bad) incl jmp orb mov psrlw mov mov adc (bad) (bad) (bad) fucomp rol dec adc pop and xchg add pusha int mov rorb out add ljmp xor clc fldt xor fisub pop pushf mov (bad) jmp pop rolb int3 jg inc maskmovq mull jo add add (bad) pushl std jecxz dec aam inc cmp rcl push mov stos jb fs loope inc dec (bad) (bad) (bad) (bad) jns addr16 in lret or dec push movsb int push mov inc data16 pop push mov jg dec sub out push mulb scas cli incl das fwait lock jge stos into in daa cli pushf pop pop add add mov test mov mov fcomp xchg je std (bad) (bad) decl or pop aaa lods adc xlat jg add mov cld mov incb inc xchg xor push daa enter (bad) mov lods jmp pop cld jp xchg fdivl (bad) (bad) (bad) (bad) mov adc add push jp or icebp push xchg mov push cmpsl movsb ljmp (bad) (bad) call daa ret add cmp ljmp lds cmpsl lret aad fadds ds mov daa ror or and dec enter movsl mov inc dec sub xchg pop dec mul xor mov push jp or xor adc out cmp (bad) ljmp mov fimull sub fstpl xor dec and sub iret mov (bad) (bad) jmp pop (bad) hlt iret push mov mov cs adc add in jnp inc adc push push push (bad) (bad) jmp fnsave clc insb mov inc int3 fcomip (bad) call imul adc or cmp xlat cld xchg pushl push push fsubrl mov or mov or xor scas das mov jg pop (bad) (bad) (bad) incl loope (bad) in getsec arpl add lock imul dec mov iret outsl or mov iret pop out push (bad) (bad) (bad) (bad) in sub hlt inc aad xor adc aad mov dec pop mov adcl mov (bad) sub ftst cmp popf adc xchg loope pop fistpl clc sub push cmpsl mov loopne enter aas loopne insl adc (bad) fisubr fnop das push cmp pop cmpsl fidivrl lcall gs jmp aaa fucomip lcall in xchg push cmpsl cmp sbb mov fistl xchg xor stc repnz sahf sbb loopne push call (bad) incl out xchg pop or outsb jno mov add lds es inc outsb stc mov out xor pushl push mov cmpsl ds sub ljmp pushf repz in mov or mov (bad) (bad) (bad) (bad) pushl movsl pusha sub dec xor sbb cmc ja into or int3 mov dec sub test (bad) jg lea cmpsb (bad) adc push mov rol sarb (bad) fcomip push dec inc xlat mov mov dec mov popf mov pop shll scas (bad) jg adc pop fist repz (bad) mov (bad) (bad) (bad) lcall in arpl or dec enter push mov out and sub repz (bad) mov movsb aas (bad) (bad) (bad) (bad) mov cmc adc jp ljmp cmp adc bound into repz in decl mov mov inc movsb fsubr vpmadcswd xlat test cld outsl xchg ds das sbb cmp xchg add ds aad jae jg sbb mov in enter jmp (bad) mov in sub pop fs jp mov inc push xlat mov push (bad) push xchg lock push mov fdivr data16 (bad) (bad) lcall add popl (bad) cmpsl pop nop out adc test add dec lock test (bad) incl cmp push clc xor dec jb in test xchg jb (bad) (bad) jg int3 sbb out insb aam add lds dec in fs and (bad) jae jg sub fidivr das jmp sbb and cmp (bad) push mov mov sahf adcl cld lret pop sub rcr movsl xchg sarl mov decl lods or daa (bad) clc xchg sub les inc repz (bad) (bad) ljmp push xor std cmpsl adc pop jb imul adc xlat mov cld jge dec rep xchg imul cmpsb mov push not pop (bad) mov loop (bad) (bad) (bad) jmp dec stos in into and subb inc jnp hlt sub divb (bad) ja mov movsb stos or (bad) (bad) (bad) mov sub adc subb (bad) lret jnp xor (bad) (bad) (bad) decl inc aad dec out xor int les test mov popa mov (bad) (bad) decl add popf cli call xor daa inc push inc daa sub sbb sub ficomp fistpl cltd mov mov pop daa (bad) mov imul ss (bad) ljmp addr16 push jecxz jnp rcrb or mov (bad) ljmp addr16 nop mov push and cmpsb mov jbe xchg xor (bad) (bad) pushl (bad) mov mov in cmc sub sub adc adc mov (bad) (bad) lcall (bad) jl mov push sub mov pop adc cld jbe stos lea out xchg pushf cmp out mov xor popl pop (bad) ljmp xchg mov xor enter add and pushl das test (bad) push inc push daa dec pop ja jmp push testl shrl lods les jae or jp and test mov and out loop adc leave (bad) (bad) (bad) incl gs fnstenv (bad) mov int pop sarb xchg insl (bad) (bad) (bad) jmp adcl pop scas daa stos les mov lahf loop inc cmc jle test enter arpl stos (bad) call mulb mov repz es imul jbe pushl std (bad) jns mov jb bound adc mov hlt inc mov mov and out xchg (bad) (bad) dec mov insl in mov shl sub hlt into add cmc (bad) call mov push mov sti loope lds dec pop hlt mov cmpsb orl dec push int3 popa xlat add cmp mov add or jp or lods ds and jl inc (bad) cmp jl pop icebp (bad) in stos xor xor jnp dec inc pop cwtl and add mov les and jbe pop sub es pop addl stc (bad) repnz (bad) sbb adc cld fist mov pop enter out sbb lods imul sub (bad) (bad) ljmp dec test cmp pusha add push lea mov inc shrb (bad) (bad) (bad) mov jle shlb test mov insb cltd pop movsl ret xlat popa xor pop xchg add (bad) (bad) lcall xor sahf daa repnz jbe rcll cmp pop in push mov outsb mov mov rclb jae aaa lret cmc jne lret enter enter jle and pop sbb comiss int xor mov sahf loope out pop popa or aaa pop nop mov (bad) (bad) dec cmp or aas shld (bad) sbb std (bad) push out sbb repz in test sub rorl lock iret std (bad) (bad) jmp push loopne icebp outsl dec mov pop inc in ljmp ljmp mov leave push (bad) (bad) (bad) mov jl xchg inc gs leave dec pop aas jo movsl dec mov sub (bad) call repnz fwait in dec (bad) cmc bound aaa lock and push jmp icebp ljmp ror (bad) lahf insl in fsubp clc les (bad) jmp lock fdivs lcall data16 sub (bad) (bad) (bad) jmp test pop rorb or popa xor push push mov (bad) (bad) pushl inc inc adc xchg xor cmpl fiaddl jmp ljmp xor sub testb push loope push mov (bad) call lahf sub imul mov lock popf mov nop mov mov (bad) incl (bad) lcall out fcoms repz or and test xchg sar scas xchg sub push xchg fdivrl insl xchg push (bad) (bad) pushl or push mov pop sub gs sarl rcl inc fpatan (bad) rclb je test aad and and inc imul xlat (bad) xor jmp lret add jmp (bad) (bad) incl in in incb popf pop mov xor dec dec xchg dec adc ljmp clc push adcb dec mov adc push lcall jmp inc jp leave mov test sbb (bad) ret (bad) mov lret mov xor leave aad in push dec adc in xchg out addr16 pop xlat cmpb decl xchg push movsl pop loopne scas insb neg pop lock cli pop sbb mov lock (bad) decl pop push hlt cmp adc inc sbb mov popa adc cltd sub sti jmp xor fistpll cmp inc and sbb jmp jnp std leave (bad) les movsl xlat jg xchg leave lods bound pop les (bad) (bad) (bad) (bad) clc jnp push loopne and hlt mov cmc mov addr16 push loop xor stos mov adc sub jp test out mov pop cld dec call sbb xor fnsave xorl incl adc and xor (bad) jno inc gs dec push dec loope cmpsb mov (bad) (bad) (bad) aas pop mov popa cmpsl ret jmp (bad) imul movsl out test pop lea mov imul sbb and dec pop ds ljmp incl cld incl pop loop pusha int3 mov std cmpsb or data16 incl mov jno inc stos adc roll sub pushf pop test sarl fsubrl (bad) (bad) (bad) (bad) out mov frstor cs add or lret int3 (bad) loop pop xor and sarb andl sbb (bad) (bad) jns mov test mov xor cmp mov aas mov inc js std clc and lahf push sbb std lcall jbe sahf or push or fdivrs inc or jmp test fwait nop aaa ficompl sub sti cmpsl pop call add sbb dec jnp mov (bad) (bad) decl jg or roll add jle mov mov jo into dec fnsave nop (bad) (bad) lcall mov mov mov call cmp jae (bad) (bad) ljmp xchg lock and pop jp jl aam adc in (bad) ss fs add and add cli (bad) rcll jmp xorl jbe loopne jecxz inc mov dec cmp fnstenv lods mov ljmp cmp xchg add push mov push out or xchg loopne and cwtl pop loop mov (bad) (bad) pushl sarl xor cmpb jp mov jl (bad) lret (bad) (bad) call aas test fldl jae mov xchg jg or cwtl (bad) (bad) mov pop inc add (bad) push js xchg mov orl (bad) (bad) (bad) call jb imul sbb pop dec hlt jo repnz fisttp mov leave repnz (bad) (bad) (bad) cmp fisttpl pop xor test (bad) (bad) movsl popf negb fcos (bad) call cmp std (bad) ss fisubl out cmc clc xchg icebp mov call aaa adc cmpl push or scas mov js add (bad) pushl and idiv mov shll inc scas lea mov fildll gs push add mov popa or dec sub pop cmp cmc call in dec mov xorb xchg test xchg mov (bad) pushl movsb arpl je sti rclb mov mov rcll (bad) (bad) pushl inc dec loop and ja sti pop stos sbb xor mov loope es (bad) fisttp mov loopne adc (bad) in inc dec mov (bad) (bad) jg xchg lea sbb jbe fimull pop (bad) ljmp (bad) jecxz repz adc je fsubr jg fisubl inc cs das add mov fdivrs push mov (bad) (bad) (bad) jmp pop sbb imul dec andb and mov lods pop es ds sbb (bad) (bad) (bad) jg push adc (bad) push test push decb popf scas push daa popf mov je push mov das or jae push dec dec pop lods lahf (bad) (bad) (bad) decl lret (bad) setno dec ljmp adc inc leave int jns pushl mov dec mov loop mov (bad) cmp int dec test pop mov inc sti or inc ret xchg cmp pop dec aam mov xchg lods pop sbb mov xlat pushl pop (bad) sbb aas dec (bad) repnz mov cld icebp mov ds int3 adc dec mov ljmp adc (bad) (bad) incl xor jl xchg sub mov push daa imul xor ficoml cmc loopne movsl sub int mov inc add (bad) (bad) dec in adc sbb scas inc pusha test push mov push mov sar (bad) (bad) (bad) call dec arpl popa nop inc inc or jno lds dec aam mov lcall push sbb mov sbb adc cmp push xchg (bad) movsb or in ds (bad) fsubrs (bad) decl lock lea xchg popa out jmp push cmp add js jp fldcw dec pop mov adc nop test adc jle pop inc ret (bad) pop push push push adc inc jg (bad) (bad) fsub jmp jb inc jne fnstsw add adc push mov shlb rcll (bad) (bad) cmp int3 jno adc adc je nop xor jmp (bad) decl and sub mov add dec lea out pop std (bad) incl insl cltd out (bad) bound lret fistl mov loope (bad) mov sub jnp shlb adc mov mov ljmp jno (bad) (bad) (bad) jmp paddd mov xchg mov xchg hlt xchg out xchg int pop dec adc (bad) int (bad) aas sub push sbb scas pop mov cltd cli (bad) (bad) jmp dec je push int pop es xacquire aaa xchg xchg or iret jg lods cmpsb lcall push sub ja or fdiv inc popa daa aam inc aam loop mov pop mov or xor adc jnp mov cmpsl (bad) (bad) (bad) jmp jmp add mov adc add jb mov or pusha call testl push sahf popf jnp and fimull sbb insl into popf mov sti xchg ja sub jnp (bad) pop cmp cmp push jmp es (bad) nop sub sbb and pop ficompl push dec cmp (bad) stc (bad) (bad) ljmp inc popf popf sub sbb pop inc in pop bound setb mov cmpsl push rclb sub (bad) (bad) mov mov mov loop mov test (bad) (bad) lcall int3 cmp mov stc aam and cmp sti sub repz dec or dec fcompl (bad) (bad) pushl sti mov and jmp xchg test shrb arpl mov cmc adc arpl xor out (bad) lcall out mov mov mov cltd mov adc ficom es (bad) (bad) fistpll mov pop in sub pop int xchg gs (bad) les jmp aaa mov push imul in add dec inc iret movsl test or mov imull in insl lods shrb jno jmp inc enter test iret (bad) (bad) mov jl sahf sbb sub repz sti push rorl rcr adc roll or sahf shrl data16 stc cmp sbb (bad) (bad) lcall xor popf pop add xor adc negb jmp sbb fwait mov les add ljmp outsl push xor and out mov lock ss cld mov lds call fnstsw jb lcall cmp loope dec aas xchg lahf dec and jae pop mulb jae les (bad) decl rcrb and xor mov cmp (bad) mov cmp sub jo jb (bad) push jge xor imul (bad) pushl (bad) sbb pop pop testl (bad) (bad) cmp inc lret (bad) lahf push (bad) and repz enter and lds hlt push lock decl shlb add sbb ja xchg fwait lock lcall fmulp arpl sahf pop fstpl int3 daa pop test mov lcall mov neg pop aaa fucomip cmpsb cld out lods sar (bad) jmp pop mov mov (bad) lret mov loope ficompl mov (bad) (bad) jg push lret imul outsb inc bound into dec inc call mov je shrb mov mov (bad) or roll test (bad) clc mov insl xchg sarl xlat nop mov std (bad) inc sub fidivl mov test rcrl sti scas cs (bad) std pushf pop in (bad) (bad) (bad) decl stos sbb cmp dec sub jae sbb inc cld sbb (bad) call (bad) dec stos mov mov inc or in call jne mov pop aaa pop (bad) cmpsb stos pop dec pop jmp loop daa xchg add or jg dec cmp fnstcw cld dec cmc fsts jge (bad) decl or repz adc imul add (bad) (bad) (bad) pushl adc mov out xchg (bad) add test mov loopne (bad) (bad) lcall pop stos push lods fsubp fwait add sarl fisttp gs dec outsl clc fbld cmp rclb mov je and and add inc xchg addr16 pop or sbb (bad) (bad) (bad) mov movsl fldenv loope repz mov mov (bad) gs std (bad) (bad) fdivrl in xor repz movsl idiv xor pop imul leave nop (bad) (bad) (bad) lcall psubsw lds sub iret mov cmp cld scas sbb in push dec jno cs (bad) (bad) (bad) (bad) mov push imul inc mov clc fimul aas sbb (bad) (bad) (bad) jle outsb push loopne (bad) std cmpl mov push (bad) scas cwtl jno mov mov sub push or and pop sahf pop push int (bad) lcall sahf outsl mov and inc es dec stc mov nop lods outsb adc (bad) (bad) (bad) jmp push cmp sub cmp xor (bad) sbb mov mov lds mov (bad) lcall jp adc inc push nop ds lds imul es fcos (bad) (bad) pushl sub push push cmp and dec mov cmp pushf mov mov push (bad) (bad) (bad) jmp sub loop loop (bad) std insb fisttpl jnp pop shlb (bad) (bad) in lcall (bad) pop movsl movsl dec ror bound ret jl jb cmp rcll (bad) (bad) (bad) incl pop push lods loop mov and ret sbb out lcall sbb enter push (bad) mov (bad) (bad) inc mov push xchg sbb cmp jbe jp les push xlat xchg imul aam mov mov sbb call and hlt (bad) fisubr (bad) (bad) (bad) ljmp addl test imul scas lock jge sbb pusha push dec (bad) call lock jae push adc sti jp js,pt cmp (bad) (bad) (bad) jle clc xchg pop cwtl mov dec sbb nop (bad) and and dec icebp stos std (bad) (bad) (bad) mov sub adc sbb insl gs sub je mov ss push arpl mov jnp and mov insl (bad) js lods jle lds jge test (bad) mov adc scas movsl lea mov cmp clc decl mov stos data16 add test icebp movsl or lret (bad) (bad) (bad) fucomip inc outsl pop push outsl gs adc pop push mov fildl xchg lods dec jmp ljmp inc cs push lret jge jnp dec stc hlt out cmp mov imul stos fisub xchg cmp outsl push imul xchg sbb mov (bad) incl mov repz je push cmp (bad) mov pusha mov (bad) lcall cltd fwait and sbb daa and (bad) push ret ja rcl mov (bad) ljmp aaa ljmp aaa pop gs aam xchg (bad) (bad) (bad) out mov and cmp popf and mov iret test (bad) (bad) inc dec lea fld (bad) mov repnz or (bad) ret mov jmp sub (bad) (bad) (bad) inc xchg insb imul cmp fidiv push or icebp cld and adc loop pop pop or xchg mov mov mov jecxz (bad) (bad) push xchg adc cmp es inc cmp lods pop jnp sti and arpl cmp stc jmp jae ja movsb sbb adc or dec mov test bound and rolb (bad) (bad) mov scas jle dec outsb mov and dec cli pop negb cmpsl jg pop xorb push sub jle jp pop pop (bad) incl ljmp mov ljmp dec je mov (bad) decl out ror inc popa pop mov (bad) (bad) (bad) lcall js jmp imul mov lods data16 pop (bad) jbe mov (bad) (bad) (bad) lcall in insb xchg jecxz or idivb sub out (bad) add sti add lcall loope mov push jb shr inc jecxz sbb out test push cld inc shrb mov (bad) outsb mov or (bad) (bad) ljmp pop xor pop mov push (bad) push bound int jae xor add pop fldt mov add aam arpl imul (bad) pop outsl xor imul dec (bad) lock test (bad) out clc pop fs ja fsub sub cli enter les xchg jecxz (bad) sti pop int mov dec or jo mov andl jle pop adc leave and pop cmc repnz fndisi(8087 adc mov outsl jb push jbe insl adc ds (bad) lcall mov push jae pusha out cld sub lcall mov cmc (bad) (bad) lcall jo xor (bad) icebp mov push stos inc ljmp (bad) (bad) ffreep dec mov and mov (bad) xor mov leave (bad) lahf test incl ds insl jb pop jmp dec cmpsb das sarb jb jo mov out lcall or cmp pop out aaa clc mov call mov ret sarb push dec lret (bad) (bad) (bad) aas fmulp loope fnstsw (bad) xor jo cmpsb mov (bad) insl xor dec dec push cli nop push (bad) (bad) (bad) (bad) fsubrp dec xchg xor adc outsl fucomip aad ljmp in scas push outsb push jne cli cmpsl xchg sar (bad) lcall outsl and sarb adc jae leave sbb in add stos in ja mov imul (bad) (bad) (bad) lcall daa lret and or lods lods mov mov sub (bad) mov xchg (bad) sbb ljmp adc aaa dec inc mov sub imul add or std mov sub (bad) (bad) (bad) (bad) (bad) cmp jg add repz xor fist dec inc mov (bad) (bad) (bad) lcall push or xchg jg cwtl dec dec insb outsl pop sbb add dec (bad) xchg (bad) dec push clc (bad) fcoms pop xchg fcomps (bad) sahf pop cmp (bad) jg jg rcr (bad) xor es cwtl je incl sbb popa add pop xchg (bad) (bad) (bad) call and mov popf call stos fadds inc dec pop imul cmp mov scas add adc inc lret mov negl (bad) (bad) decl pushl loopne stos imul gs lods nop jne mov jg (bad) call sub fcmovnbe mov inc fs inc or es xor dec inc pop cmp (bad) (bad) ljmp shrl mov mov shr aad inc or movsb or mov add call gs jne scas je dec pop push pushf rclb icebp jge mov (bad) (bad) ljmp std cld in das xor and lahf push and icebp adc ljmp lock push adc adc sbb (bad) call cli xlat cmpsl outsl and jo clc mov in dec sarl xlat call mov (bad) sub inc (bad) (bad) jg or add pop push int3 xchg sbb xchg (bad) or (bad) (bad) call jbe aad aam outsl jl xchg xor mov pop jle (bad) dec xchg push shrb sbb inc (bad) ljmp incb clc mov outsl mov mulb fwait mov mov (bad) (bad) (bad) call pop add out ja (bad) push cmp push sbb xor or (bad) (bad) decl sarl fidivr sub stos call dec stos xor (bad) cmp lods mov lcall dec cltd call ds pop fimul push (bad) push dec cld push xchg mov push adc sbb (bad) (bad) pushl (bad) mov sub sub dec hlt mov pop stos jp xchg cli fcmovnu xor (bad) (bad) pushl bound in push or pop gs mov sbb sbb lret dec pusha loopne setge wbinvd pop loope mov jl mov cmp (bad) ljmp idiv dec out pop xor cltd leave out mov xchg push adc jle je cli (bad) pushl test push dec cmp je les pop mov aam (bad) ja orb (bad) incl cwtl negb inc insb ss push iret gs jl mov movb mov aam fsubl stos jecxz add mov dec pushl inc mov push push or loopne jnp jbe loope xor (bad) pushl mov cmpsl data16 imul push or inc add jno std pop ds jo (bad) (bad) in loopne jmp std repz cmpsl fsubrp shlb in inc or (bad) jnp sub (bad) fistpll sbb jmp inc xor cmpsl jo push scas and (bad) (bad) (bad) cld out cmp mov mov in cmpsb or fwait lahf test add xor outsl inc cmp push das sti dec cs cwtl fstpt jnp inc mov lods dec mov mov das xor sahf iret mov call inc adc and cmpsb xchg mov ret imul ds xchg (bad) inc adc cmpsb (bad) decl pop mov or ljmp jle sub fnstsw dec and (bad) jmp mov mov cmpsb mov sbb cltd in sub fnstsw ds ss jbe (bad) lcall gs stc mov in inc scas mov ds stc add jecxz mov push (bad) (bad) (bad) incl and dec in xchg sub sarl pop inc push push sbbl repz add fcomip pop xchg xchg stc cltd lret mov (bad) call fmulp sub or adcl int3 loope pop idiv mov (bad) jmp cs test xor inc mov (bad) call mov subl call sub mov (bad) (bad) (bad) fistpll dec xchg cmc mov cmp popl jae in sbb (bad) (bad) (bad) call xchg aaa mov fwait sarb mov rcr or lret test decl loopne mov pop push gs js ja xchg leave daa xchg clc (bad) ljmp or (bad) lret push jl adc sub dec pop out (bad) (bad) decl mov test in sbb sti les les adc movsb fdivrs xchg scas add dec mov cs (bad) (bad) call mov int call and cmp in rorl or (bad) out mov inc mov lahf dec xor mov mov call cmp jbe push sub xchg or dec daa daa push xchg xchg rorb jbe mov xor (bad) stc mov lods scas test fsubl dec outsb not cmp pop aas or pushl enter rclb addl mov fcos (bad) (bad) (bad) cmp iret daa push (bad) in (bad) adc xchg inc cmpsl pop jo orb shr mov out and (bad) add aaa test sbb fisttpl sbb sarb lea inc ljmp mov pop sti pop out jmp add cmp out xchg (bad) mov push test mov outsl call xchg push lret cmpsb call add pushl jb cmc jb pop cmp (bad) (bad) ljmp mov stos div fsts bsf push cltd (bad) cmp ret (bad) (bad) fbld std or and add jle push (bad) (bad) ljmp cmpsb loopne lods add push xchg cmp push (bad) xchg dec sbb mov (bad) icebp in ss jle aaa mov lcall push or mov (bad) (bad) jmp pop ljmp push dec jmp imul inc push push inc push and push xchg (bad) (bad) (bad) js rcrl cli dec sbb flds in loope ja mov fdivl ret (bad) (bad) (bad) ljmp xchg nop add sub adc jnp sub jle push sbb xchg pop xchg xchg jbe and mov cs je jge neg lcall push mov (bad) lcall add jnp push xor aad test (bad) mov adc js sbb cmpsl (bad) jo (bad) (bad) pushl ds std mov leave (bad) sbb call (bad) (bad) decl xchg or add mov and les pop sub test insl sbb push jl mov inc inc (bad) sbb pop mov decl test pop daa aas or ds pop or fidiv lret sbb push loope out (bad) (bad) call int3 mov out adc add ret scas stos clc inc stc test mov test sbb xor outsl clc incl inc leave push push mov push add loopne test into mov incb jae (bad) jo std jns daa or xchg and (bad) (bad) (bad) (bad) mov xchg iret and sub sbb lret aaa push add ds fnstsw (bad) (bad) decl dec pop into inc leave sub dec adc lds xchg add cld jmp out paddb outsb fdivrp bound (bad) decl fidiv inc push inc into pop loop mov (bad) (bad) (bad) push popf sbb popa (bad) or insl iret or xchg in mov dec mov push (bad) (bad) (bad) (bad) (bad) sbb cmpsb push test mov (bad) adc xor popa sbb cmp int and jmp sar int3 sahf mov and cmp gs (bad) (bad) ljmp pop gs mov fnsave enter inc pop adc add sub lcall test popa inc rcll loop movb pop aas outsl cli (bad) push bound mov lds fs mov sarl clc (bad) (bad) pushl stc sub loop push or clc test psllq lcall in adc inc pop mov mov call ficomp (bad) adc pop cwtl jnp add in movsb sahf mov aad ss sar (bad) lcall int xchg cmpsb xor icebp or mov and adc test jns (bad) (bad) (bad) decl add xor fcoml add popa add cmc scas call sti test lea or mov loope (bad) lock movsl daa orb shlb lock (bad) ljmp jl call pop fdivl and cmpsl cs scas repz pop ja (bad) shl (bad) call out mov cmpsl inc jmp lret fsub sbb (bad) cmp jo out test xor enter popa repnz mov inc fwait inc xchg insb mov xor (bad) (bad) lcall testl ret push insb sbb mov cwtl cmp mov (bad) (bad) (bad) jle cmp ds sub pop fwait mov mov xchg jle xchg push ss mov adc pop and (bad) movsl xchg mov outsb outsl mov add (bad) dec fnstenv dec add enter (bad) sbb call gs out leave test inc in add add outsl or or stos xor (bad) (bad) push gs cmpsl xchg aad adc cld loope jo add popa mov fildll sbb (bad) (bad) ljmp mov push adc xlat xchg cwtl lret lahf dec outsl je cmp or (bad) jg push mov loop sbb fsubrl inc (bad) call rorl add loop pop clc jl cmc push push std and lock ljmp (bad) dec dec test or imul into inc sti mov std (bad) jbe mov cwtl dec inc (bad) (bad) decl dec push (bad) xchg iret lcall stos outsl inc push mov inc sub call aam sub dec dec aam or ss xchg xor adc pop into jmp pushf int3 (bad) (bad) (bad) jmp inc popa in add mov or inc je std adc lods pop sub push ret (bad) jmp sub mov sbb call and loopne pop lock in and jnp jb daa fstpl stos out dec movsb xchg clc stos movl add leave lds add in pop cmpsb sub addr16 xor loope movsl pop push lock stos (bad) lcall add pushf imul test push dec inc xchg std sub (bad) (bad) pushl inc outsl dec fildll into inc fild (bad) js scas and in sub push adc lcall sbb in jbe push xor mov xor out cmpsb dec push pop ljmp test mov xor pusha int enter mov sarb sub inc int3 mov and or xchg xor push (bad) (bad) (bad) jns jne jne add xchg xchg movsb outsl pop sub sahf pushl sub xchg push mov inc scas (bad) imul stc jbe jp (bad) (bad) mov jp pop sub aad xchg push mov lods dec cmp mov (bad) call pop push stos ss dec iret fsubrl lods add sub decb sarl cmc out call pop daa xchg pop mov mov sbb xor sub mov cld (bad) mov adc push std movaps daa add adc (bad) incl cltd mov ljmp xor sub in xor (bad) mov ljmp cmp popf jg xchg dec andb and (bad) mov pop es (bad) call push push inc or jno lds inc mov out out add (bad) push mov loop scas dec inc ljmp ljmp cli push ds or loopne das movsl hlt and idivl subl jmp testb stos bound out dec lret aaa aas aas test adc mov (bad) (bad) (bad) ljmp repz adcl jmp cmp inc dec repnz fsubl jecxz xchg add (bad) or mov call gs mov pop in popa jecxz sub fst xor and inc cwtl mov loop (bad) (bad) (bad) pushl inc push fisttpll inc push push mov int mov hlt or decl int3 cmp pop jno mov cmpsb xor in pop add jecxz scas xorl cmp sub pusha mov xchg loopne outsl mov icebp xchg adc or aas mov (bad) push hlt ja inc xor ds push xor fs lret xchg out mov nop dec fdiv (bad) (bad) (bad) jg orl xchg jnp mov aam (bad) shl dec mov xor (bad) fidivl into sbb sub mov repz pop pop adc or fist call js incl mov insl push iret push add or incl adc roll sub clc xchg push out (bad) (bad) lret arpl lds (bad) (bad) lcall xor xchg cwtl pop test mov and mov cs dec (bad) (bad) (bad) (bad) lcall mov out cmp lds pop jg lahf loope mov cmp pop xchg negb jns popf adc cld add fiadd popf mov fmulp in xchg jb push (bad) incl cmp cmp subb (bad) (bad) fistpll lahf add jb (bad) fiaddl (bad) mov insl and out fadd jp test (bad) (bad) ljmp inc jg in pop jge bound mov sbb push or rcrb mov sub fsubrl cmpsl loop adc cmp mov (bad) jne (bad) notl xor or test sub sahf popw test shrl outsb call pushl sub stos jp je pop mov int3 add add jo (bad) (bad) call insl nop mov (bad) into je push push mov xchg adc hlt ljmp fsubrs (bad) (bad) pushl jo xchg les cmp push lret jae mov mov out fwait jno mov dec jle mov les or ja inc (bad) adc fdivrl arpl (bad) push sarb xor add cld stos or xchg (bad) fcomip incl jnp sbb add stos sahf dec and daa inc (bad) (bad) (bad) (bad) call inc imul sbb mov lds (bad) lea cmp jnp push and ljmp ss (bad) (bad) (bad) ljmp ret xor push lods lds cltd cmp gs (bad) in test (bad) (bad) (bad) (bad) cmp daa sbb (bad) mov out int adc loopne pop and mov aam (bad) (bad) (bad) jmp or xchg frstor stos fs jbe mov pop or aas fmull test xor mov sub add fstl sub out mov mov scas mov fsubp clc icebp addr16 xchg in insl inc fmulp add mov mov sub add cmpsb into jle xorb cmc mov cmpsb (bad) (bad) (bad) dec add mov orl xor xchg mov xor call mov jmp aaa adc mov les pop sub fstps pop inc xchg cld push imul dec pop in sub add scas mov (bad) pushl scas jp sub xchg js mov adc adc enter rolb cmp sarl stos mov out and sub add push das (bad) fmuls lock and dec aam test inc std (bad) (bad) lcall jecxz (bad) (bad) unpckhps xchg fsubs roll arpl (bad) xchg loope cmp sub mov rol (bad) xchg and and dec xor lcall fldt out adc dec sbb lret fldl (bad) (bad) (bad) dec test push pop icebp into cmp lods inc inc xor mov cmpsb loope jecxz jp xor inc add insb loop aad mov sub ja (bad) div mov outsl cli (bad) (bad) (bad) js fwait adc mov mov push sbb orb je lea ljmp dec ds sarb dec jp (bad) jae arpl sar (bad) call fisubl std push loop seto push mov inc (bad) mov (bad) (bad) jg inc (bad) dec pop add pop mov mov mov jb mov stos or (bad) pushl imul or xor rcl ss aaa add sahf jns push dec mov lahf inc pusha fs sub mov inc lcall sbb imul xchg daa loopne lds mov adcb and mov test xor sahf push add inc stos mov push lods jl ss sahf mov xlat hlt pop (bad) popf shl js mov pop insb sahf test push hlt (bad) (bad) jg repz fs incb aam lods dec loopne push push divl (bad) mov xchg sbb repz xor iret daa sbb cmp bound (bad) mov mov movsb dec and mov xchg xor ret pop andl mov add inc xor into fildll push cmpb inc add xor mov mov jle xchg adc sti lea incl sbb push dec jb inc adc (bad) pop sub subb outsl cwtl jo (bad) popf push cltd cld (bad) (bad) call mov xchg je daa adc jmp mov out mov mov mov pushl jmp outsb mov and xor dec lock clc jle test (bad) (bad) incl andl adc lcall push dec push stc movsb lods test incl cld jp nop in (bad) int3 mov or insb bound gs (bad) (bad) (bad) incl fisttpll negl ja mov push movsb lahf imul push (bad) (bad) lcall incl (bad) pop loop lods xor bound aam jne icebp mov pop cmpsl (bad) jmp insl xor mov push clc icebp cmpsb pop sub add pop push test push dec cs add and test add mov loope lea cmpsb pop mov xor in jmp pushl mov mov cld fiadd sub dec popa mov jg (bad) dec ljmp lds cmc stos pop dec xor clc pop rol mov sub jg test cmp pushf je arpl das sub cmp incl mov das xchg das out dec push outsl pop sbb adc cld nop int3 pop inc data16 xchg in cwtl push decl ds imul lcall in test xchg add xor cld jnp sbb das sarb outsl aam js or push ja or xor (bad) lcall test dec push bound je sub pop pop mov inc dec (bad) pushl les inc mov inc inc jg imul xchg outsl or lock pushf arpl sahf dec add jbe arpl (bad) (bad) lcall or cwtl rorl (bad) sbb jnp and adc hlt ret insl sbb (bad) call std mov data16 mov loope push sahf test push stc fimull (bad) decl mov popf (bad) cmp js and pop mov xchg ja (bad) mov jo push test nop or lock aaa pushf pop sbb incl (bad) xlat out adc inc jge mov (bad) incl or xchg movsb fsubrs in call push sub imul (bad) jg xchg inc cld sub add sarb jecxz xchg xchg cmp scas clc pop cmc or pop in add mov xchg or test pop mov decl mov das push rcrb sarb js in add in (bad) mov mov rorl (bad) decl ret lret lret inc pusha test xor test add jbe or or jb jmp push movsb test les imul add inc ret stc (bad) xchg std cld cmp (bad) (bad) lcall xchg xchg (bad) fs cwtl lret pop test in dec lret loop cld decl sti jmp lock dec lcall cmpsb fs incl mov adc fistpll pop inc popa cmpsb push jbe mov mov inc into add adcl loope sahf sub sbb sbb sbb pop push arpl hlt (bad) lcall mov aaa jbe pop dec cmp xor stos mov fdivs push std (bad) lcall or nop (bad) scas sbb (bad) cmp mov (bad) push add (bad) (bad) lcall xchg mov mov ljmp in sbb sbb (bad) (bad) (bad) mov int3 cmp gs adc mov cmp add out inc mov addr16 daa and lcall (bad) jne jae movsb or imul in pop sbb insb and sar (bad) pushl pop sahf ret pop or mov push lahf insl and js add jmp stos in outsb push mov adc ljmp pushl cmp dec fistpl mov jp pop les jge enter scas xchg pop jmp leave xor inc bswap jns sbb rol (bad) (bad) (bad) lcall jge jmp aaa stc xor pop stos fidivrl dec mov cs out sbb pushl push popf inc (bad) outsb inc jb mov xlat paddd (bad) fcomps test (bad) (bad) (bad) ljmp fiaddl jmp lds jnp mov add and jp nop jecxz mov call cld std test pop (bad) pop je mov scas jbe xor incl aad jl xor lea dec (bad) loope or jo iret mov (bad) (bad) decl popa adc sub mov aad add lock adcl pop fdivp (bad) (bad) jg mov fildll dec aad push mov mov sbb cmp cs negl (bad) fldt jge (bad) (bad) (bad) mov mov ja loopne ficomp and mov mov call in cmpsb (bad) lock out cmp sbb cmpb mov mov sub int fs arpl xlat pop adc jg mov outsl cli lcall add jo (bad) idiv scas dec xchg push xchg (bad) (bad) (bad) decl sub cmp pop dec shl lods mov cld adc xlat nop push fs or and inc (bad) out add ds push idiv mov (bad) (bad) (bad) lcall cli stos mov pop pop cmp or mov push xchg sti mov pushl cmp stos sub ret aad faddp mov punpckhdq (bad) mov (bad) decl vmwrite xor scas cmp out fwait inc pop mov or dec or (bad) (bad) (bad) fbstp loop enter in dec pop idivb push stc cld pop arpl mov iret cmp mov push (bad) (bad) (bad) jmp add mov mov inc add dec add addb daa stos daa enter (bad) (bad) cmp pop es cmp mov fcoml ljmp sahf cld mov shll (bad) in adc sub push test (bad) (bad) (bad) mov int3 mov gs push aad das (bad) adc gs and mov in sbb cmp cs repnz cmp jge orl xchg outsb rolb aas jb adc push add inc xor arpl int3 outsb (bad) cld ud2 jg or or fldl je (bad) cltd xchg and lea int3 and movsl iret ret mov cltd (bad) dec (bad) (bad) (bad) jmp and mov into je pop insl movsb int3 popa daa xor imul std in (bad) rcll push add sbb inc push clc jmp mov pop dec jmp (bad) (bad) lcall enter mov cltd pop jle aaa or vmaxss or and fstpl fcos (bad) (bad) lcall pop sbb or pop add iret fwait bound jle pusha inc test dec call sub xlat clc or int adc mov cmp mov sahf (bad) mov (bad) int mov cs cmp (bad) ljmp push clc jmp imul push stos (bad) ljmp and pop bound cmp dec pop ds push data16 lock test lds push inc add ja cmpsb or add xor sbb incl je addr16 jle cmp mov sbb ljmp scas repz repnz test dec dec cmp or xor fstpt jo mov ds les ljmp and pop and or lcall adc (bad) call into cmc std fdivrp inc shr jbe xchg insb jmp pop ljmp mov (bad) (bad) (bad) mov fdiv mov fs (bad) pop orl mov stc push sbb xor xchg pop jle sbb xchg pop loop clc fbld mov push call leave xor add fidiv fisttpl mov (bad) out ds addl iret ja pop fstpl addr16 mov (bad) mov cmc loopne dec imul xchg addr16 push or sahf dec in pop je jo mov add call das jns rcl fisubr dec stos pop notb mov adc xchg clc pushl dec mull mov clc push incl fldt cmp nop pop bound push sti ljmp xlat ds fcoml inc dec mov jle sbb ljmp cli lcall xchg mov daa (bad) sub cs add xchg pop repz (bad) (bad) (bad) incl stos xorb pop fcmovnb sbb xchg aam xchg mov lods in or imulb pop and cld incl insb sbb adc mov sbb scas cli jg inc es lds xor ljmp (bad) lcall cmc adc xchg push ljmp cmp (bad) (bad) ljmp and fs push enter fadds fisubr cmp adc stos into (bad) jmp cld jb mov test xor lock repz mov mov inc jl add icebp jle mov add push dec push (bad) sbb loopne (bad) (bad) (bad) call mov das insb push std jmp ds (bad) lcall ja cld sti sti jb movsb lock (bad) (bad) decl jge fimul push adc add loope rol ret outsl cmc (bad) (bad) ljmp xchg mov dec jne je loopne mov add addb lret inc dec or (bad) (bad) ljmp and sub lods aas xor dec shr sbb sbb stos popa movsb push ret cmp cwtl pop daa dec sti decb stos rorl (bad) (bad) (bad) jmp sbb fisubrl je test inc cmp dec add push (bad) ljmp std sti push xor (bad) cmp dec sbb mov push xchg popa rcrb int add (bad) mov xchg dec imul mov rolb sbb in (bad) mov fs cmp jns jle out sub pop add ret add cmp xor fdivs (bad) (bad) (bad) ljmp sub in movsb fsubs push je pop ret popf les mov xor sti es test addb adc fiadd or dec je jbe xchg (bad) (bad) lcall xchg add jmp xchg aam pop and mov fidivl xor jno (bad) in cmpsb push sub icebp leave lret scas clc (bad) int xchg pop divb call (bad) (bad) (bad) ljmp xchg push jns mov (bad) in or xor pop outsb das jno dec inc pop fsubrl (bad) (bad) ljmp fisub (bad) mov fidivl jl popa lock mov xlat xchg mov jg cmp mov (bad) neg jle test pop inc (bad) decl data16 sub ftst repz mov insl pand (bad) dec xchg incl jo sbb out mov insl (bad) fdivrs incl pushf out (bad) pushl mov bound outsl add cs insl aad add and in (bad) (bad) (bad) (bad) stc mov pop out jne notl fidivl dec push add cmpsb jecxz mov sar ljmp dec ret pop arpl adc xor dec and ds pop inc cmp jns (bad) incl mov es jg cmpsb fldcw les add out test add cltd popf movsl mov sub xor mov jb stc sub dec mov (bad) (bad) (bad) pushl rcrl mov adc scas lock mov adc negb scas ljmp (bad) sbb (bad) mov call inc fwait jb cmp ficomp ret enter (bad) cmp mov ret add mov add mov das mov mov roll cmp es (bad) (bad) dec jb gs mov hlt push dec ja pop ja mov dec leave inc or movsl jle gs (bad) (bad) (bad) jl jne or xchg xor jecxz xchg xor or xchg inc jp test (bad) (bad) (bad) call xchg xor push popa xchg mov push jb jmp ss mov (bad) shrb ret decl push push divb adc cmpsb mov test (bad) (bad) (bad) jg lret frstor loopne fucomp fistp lret cltd mov imul mov (bad) jmp daa mov xlat jl adc mov push dec jle insb inc mov (bad) (bad) fnop xchg mov pop fisubl mov out inc xchg pushf in sbb dec or (bad) incl mov cmpsl mov push sahf cmp (bad) lcall fstps bswap stos xorl push int3 lcall xor inc adc add pop pusha loope cmpsl xor push and cmc push ret sbb ret je mov and (bad) lret xchg (bad) mov fsubl push mov nop sar pushl fs sub (bad) jbe aam push lods and (bad) (bad) (bad) aas sahf arpl mov in add fild jb pop cmpsl push cs arpl out or shlb inc sbb imull add loop and mov popl call rcrl push imul xchg inc push stc (bad) xchg inc mov mov jns adc loop dec (bad) decl (bad) clc rcl popf cwtl jb pop pop clc jl repz je je in inc pop dec imull movl cmp test ds (bad) pop cltd out and (bad) (bad) (bad) jmp fdivs and cld lods or push mov jp xchg fidiv or xchg lcall inc jmp add lds lret mov dec stos xlat (bad) lcall loopne jmp xchg xor mov and push cs sbb aad inc popa fisttpl lods xchg add cmpsb jp (bad) js mov pushl xlat sbb or aaa sub cli add sub out adc mov (bad) (bad) (bad) decl mov mov cmp cli pop fstl push std jae add mov pop lret mov (bad) (bad) pushl push arpl inc jle lods (bad) add xor fisub mov shll int adc (bad) (bad) lcall fs cltd mov hlt out lods add and pop mov xor lcall mov (bad) (bad) ljmp insb divl mov stc cmp rorb lods (bad) shr fstps adc (bad) pushf xrelease sub (bad) (bad) call xlat (bad) insl push dec mov setle mov jg adc adc jle aaa (bad) (bad) (bad) (bad) jl outsl (bad) inc push das add cli (bad) inc bound mov sbb dec jo incb (bad) incl and or mov sub dec dec sub mov scas dec adc jge jne mov (bad) or cmp das clc (bad) (bad) fcomps fdivrl pop popa ret and xor jmp ljmp jg add jp mov push les iret iret xchg push pushf (bad) (bad) (bad) (bad) cmp jmp sub clc sbb les test nop dec mov in andl lcall hlt pop mov inc adc incl push clc stos sti pusha xchg jo in inc push mov add push xchg jecxz push sub or je sahf sub adc ja cwtl jbe (bad) (bad) lcall fisttpll loopne out push das imul sub pop pop lock cld pushl out push clc imul cmc cmpsb les inc cwtl push add (bad) (bad) dec fisubl sub sti jge xlat cmp movsl std mov imul pop cli addl sbb pop ds lcall inc mov xor (bad) lock inc push (bad) xchg jnp push outsl lahf xor repnz pop (bad) ljmp rorl insb push jns (bad) cmpsb xchg (bad) (bad) jg movsb add mull dec (bad) sub loop stc pop xor cld xchg push out repz lock dec sbb leave dec fs mov cmp cmc repnz loope and dec cmp mov jb sti pushl pop lock inc ja call fistp add mov (bad) (bad) fcomip push js fcoml inc or inc or jp jg imul mov push sub faddl pop leave inc fadds scas (bad) (bad) (bad) mov sub inc pop or and fmul int or sub xchg push (bad) (bad) (bad) pushl mov je loope dec mov xchg dec xor clc nop add jmp sbb xor dec push lret adc push stos sub push xchg mov and (bad) cmp push push (bad) xchg or inc jg cli cmc das jb mov int jmp pusha adc lds bound out cmc push cltd fwait ss fdivrl aas add call (bad) dec jns or cmp pop aam inc cmp (bad) (bad) decl mov sahf or xchg shr or jp imul (bad) (bad) (bad) pushl cmp dec mov popa movsl push enter pop or mov loopne scas test jbe pop inc and ljmp jae icebp or out inc das pop in loop adc rcr cmc cmp lahf dec mov aam ljmp lcall jno loopne addl ds mov in or daa ljmp xchg jp (bad) (bad) (bad) cmp popa xchg outsb outsb or pop movntps gs (bad) mov and mov and inc jo push loop add or call cltd push or mov cld pushl pop mov push leave mov ds sti jb outsl aas inc js decl cltd mov mov xchg (bad) push int3 mov (bad) ljmp inc sbb in ja or cltd ficompl cmp ret push inc sbb (bad) (bad) (bad) (bad) jl pop (bad) gs sbb push hlt iret or int3 push movsb addl inc sahf pop xchg fnstenv mov popa hlt stos add pusha mov and xlat fildl sbb cs and inc add push xor add lcall btrl stc into xchg cmpsb test (bad) movl mov icebp stos sbb push jp push in into or push (bad) decl mov in inc push jnp push orb mov or sahf (bad) mov out (bad) (bad) (bad) pushl out pop xchg pop out fcmovne fnstsw jecxz hlt stc add lock lahf sub dec sub (bad) (bad) lcall lods jae mov fidiv dec imul fiadd loopne pushl ja incl mov or in sub cli mov lret pop dec dec out jno,pn mov pop adc adc xor mov pop and cltd loop shll cmpsb int ds out add movsl je dec push dec fistp (bad) lcall push stos or aad ret test (bad) rclb scas or cmp imul mov dec ds scas ds (bad) (bad) jg aad mov mov cmp sbb push dec mov popf pop out rcr inc dec in dec stc jnp adc call xor test jns (bad) (bad) (bad) mov dec nop fs (bad) and int ss xlat (bad) pop pop push pop mov jo add mov xlat adc ds jnp cli (bad) incl inc push call inc outsb movl cmp inc mov (bad) (bad) call mov cmpsb cmp dec int js inc call cld call push insl enter (bad) (bad) inc icebp inc add push aas outsb dec js dec icebp adc inc lods push mov or out (bad) (bad) (bad) (bad) (bad) out icebp test or cs lahf shlb mov (bad) (bad) (bad) incl daa inc insb es ljmp cmp dec push loop (bad) ljmp cmc push cmp stos and mov imul dec ret sbb mov mov pop gs (bad) incl adc mov ret aas pop adc (bad) lcall (bad) xchg inc push jno icebp fs int xorl xchg cmpsl sbb mov sbb call cmp push mov mov mov mov mov jmp sbb pop and xor mov (bad) decl push (bad) int3 aad or push dec testb jbe inc adc dec test rcll and dec rolb (bad) fistpll mov or jno mov daa negb jne mov inc ds mov inc add mov (bad) xor in stos test mull sub (bad) decl jo jmp and ret arpl adc jge sti rolb (bad) call lods shll insb movsl adc test mov inc test lret insb arpl push cld dec repnz sub loope loopne addr16 iret lret hlt fwait ds xchg decl dec (bad) decl xchg fsubs or jmp xchg adc (bad) (bad) jmp test inc test call xor test push lock outsb sub add dec push (bad) mov int dec sbb jl lds mov jecxz adc lock loopne pop cwtl (bad) and pushl mov push inc std cmc pop cmc outsl mov fsubr ja mov outsl inc (bad) (bad) (bad) jmp lds pop fnsave xchg push iret sbb and (bad) (bad) std fwait stos xor dec mov mov popf jnp,pn mov cmp pop seto pop cld lods incl cmc cs pop sahf dec inc gs outsb xchg jae push xor cld lds cmpsb adc pusha jmp daa adc and loopne adc dec inc aad (bad) jmp push insl push cmpl test sbb ds in (bad) cmpsl outsb (bad) xor pop cmpb jae lcall push testl or (bad) pushl daa mov mov xchg push insl pop sub pop push jle add inc push mov (bad) (bad) (bad) (bad) in and leave aam ss mov int3 out lds or pop add xor or xchg cmp cld bound fs fsub pop cmp dec xchg jmp pop mov out adc mov dec pop fcmove mov mov fbstp push outsl insl aas aam jg outsl aas stos jmp stos xchg sub xor imul stos mov pop pop insb jg cmpb mov sbb adc pop mov nop jmp fistpll (bad) (bad) lcall mov imulb pop outsl inc stc cli outsl aam inc mov adc sub outsb jmp in aaa test insb sbb mov fisttp fldcw sarb push shr jns sub mov dec dec dec je jns (bad) xor xchg mov ja push (bad) (bad) (bad) jg es jns das pop jno int xor inc and jp mov jns lock clc (bad) (bad) call gs cs mov sub sbb addr16 xchg push adc mov push ds xchg lods in push out push lock (bad) (bad) in cmp mov stos and mov stos aaa daa or pusha rcl imul fwait (bad) (bad) decl xchg int3 test jb (bad) out mov lea dec adc ljmp pop mov fidivrl jbe pushf adc inc cmp add sbb (bad) jg in es inc mov loope jle js or mov mov jmp mov je,pt ret (bad) jbe pop dec cli leave sub xchg stc mov add sbb jne xchg mov scas inc and inc cmp ljmp adc cltd and and aad les mov shlb add xor decl xchg and cs mov push cmpsl popa and outsl (bad) (bad) ljmp ds jecxz push mov call dec sbb cwtl xor xor (bad) call xchg adcl mov call test and pop clc mov mov cmp inc (bad) (bad) (bad) push cmp or movsb jl lcall mov jbe test add incb fdiv mov push jecxz les scas sahf ja or sti (bad) mov cmp fistpl notl imul xchg pop push push fistpl dec jbe cld out ret or hlt and incl lock stos xor aas mov shl lret arpl (bad) xor test push sbb add pop push or (bad) (bad) call enter mov andb push sub xor iret and lock stc insl lret (bad) pushl push es xor cmp xlat out insb push hlt push std (bad) lcall jbe cmp mov sbb and jg mov (bad) dec stos es inc sub imull stos (bad) mov mov cmp imul loope outsb inc or call push dec into jne sarb lret lds xlat lods sti popl sbb (bad) lcall aas ret mov imul repz cli daa adc cmp mov ret sbbb pop mov pop mov and in jne imul jnp hlt divb call cli aad ds je jns inc out xchg fcmovnu pop stos test (bad) ljmp cmp lret dec pop fidivl out in sub shlb (bad) jg add xchg push ret pushf pushf push jo mov (bad) decl addl and pop mov jo outsb cmpsl loop push lcall sbb xchg push mov mov lcall ret mov ja rcrl out out mov or frstor cmp jecxz scas cli fbld ds repnz movsb insb cs leave mov adc dec es (bad) (bad) incl lahf jp jge pop and addr16 insl fistpl in in aam xlat push decl aas rol lea jo xchg jb cmc (bad) call (bad) (bad) (bad) pushl jmp shlb in jo aad push mov data16 insl push mov dec cmp test mov (bad) call jp enter pop or dec jl push add pop push cmpsb movsl xchg or sbb push cmp incl (bad) (bad) (bad) (bad) fcomps lret fistp inc jmp (bad) pop jnp pop and jbe xlat enter sbb (bad) (bad) ljmp loop jp leave push mov lahf (bad) lock out outsb sub aas xor pop movsl lcall (bad) jmp test insb movsl scas out mov mov mov bound xor (bad) fndisi(8087 jp test mov push add pop ret loopne movsl mov test jbe mov push mov decl xchg fwait repnz push add dec in jno jnp repnz xchg adc or sub jmp data16 or cld xor lds sbb lret (bad) cmp arpl or stos or push lahf xchg inc mov lret sbbl nop ds or cmc xchg push test das stc stos push outsl jecxz add xchg push cli (bad) std or dec in lds js mov mov out pop ret or inc push xchg and insl mov les rcrb (bad) lcall ljmp xchg test fcomip lods pop pop jle dec nop js in int fdivr sbb mov mov aad cltd mov arpl push sub dec sbb (bad) (bad) (bad) js push lock pop dec das rcl or push push mov fstl lods dec int (bad) decl (bad) cli jp gs inc daa or sbb cmp adc push (bad) dec push popa push ret add (bad) mov add inc jl cltd sub mov xor sbb mov inc add lods mov (bad) (bad) inc push mov sub aaa jb fdivrs inc mov adc ljmp cmp or add ljmp pusha sub ret fs adc rcr mov enter pop mov xor add pusha out cli incl stc test orl jo pop and call mov xor adc and (bad) pushl push sarl cmp cld jg movsl scas mov add (bad) pop loopne (bad) (bad) (bad) incl out js aas adc es cmp inc lret inc pop nop mov push fwait add mov push jl in inc cmp pop test (bad) repnz cmpsl mov hlt add (bad) lcall ret and xor adc and (bad) insl xchg mov pop mov xlat add jmp cltd mov ja (bad) adc loopne lock jnp insb loopne (bad) (bad) ljmp mov jmp jae cmp inc mov xchg rcll rclb icebp inc aaa subl pop jmp push adc test arpl in pop mov mov dec test mov loop adc sarl push (bad) (bad) (bad) jmp call je jl mov or inc xchg pop push clc out or (bad) (bad) (bad) jle inc and and cmc sar movsl leave ljmp fidivrl sub js sbb ljmp inc lret ret es test outsb sub pushw sub cs std cltd daa or ja (bad) lcall shrl mov add xor jecxz dec sbb ja add sbb mov or xlat sub movsb ljmp dec mov (bad) (bad) call cld push les sti jecxz (bad) xchg and lahf pop mov cli arpl (bad) (bad) ljmp aam sarb mov jae lret add xchg fcompl in add pop mov mov lcall pop mov loopne leave lock jg lds sbb mov ljmp jge pop icebp add add bound cltd inc adc imul cmp adc (bad) (bad) push dec bound cwtl add (bad) cmp js ja jmp out mov mov call pop or cmc (bad) dec and jg aaa fwait cmpsb push jge inc popf (bad) repz cmp call mov mov (bad) (bad) (bad) jmp sub decb or sbb mov xlat inc (bad) out (bad) data16 (bad) (bad) (bad) (bad) fucomp stos xlat mov dec in pop repz (bad) sbb iret std movsb or xchg (bad) (bad) cld sub push scas and and add ja ret mov daa sub mov pop hlt aas inc or mov nop (bad) lods loop push movsl mov push pop inc adc js (bad) (bad) (bad) incl insl out sub lcall insl push sub fwait xchg aam mov mov mov fwait mov mov aaa inc or jg faddl and (bad) int3 xlat cmp mov (bad) (bad) decl testb pop mov sbb adc (bad) xchg lea stos push call mov adc gs jecxz out (bad) (bad) decl cmp mov clc and push sbb (bad) aas sbb std sbb std (bad) mov lret push ss div cwtl inc adc sbb call mov mov mov mov movsb aad cmp nop (bad) (bad) (bad) pushl or maskmovq divl and fstpt fdivrs lret and xor sti subl (bad) lcall adc js mov sub insl push adc daa mov (bad) (bad) (bad) ljmp cmp ja jmp and sub in sbb jb and mov (bad) mov xor pop sbb adc and lods test (bad) mov xchg dec rorl scas movsl pop dec ficompl cli (bad) fcomip xchg shrl ret aaa js mov inc test daa jne rclb cmp mov outsl sub mov pop adc aaa pop dec xchg outsl out xchg test movsb jae gs xor sahf mov (bad) (bad) call push dec ret cltd dec outsb xchg fmull lahf add sub push es mov popf (bad) (bad) (bad) (bad) std (bad) push rcll xchg sahf or fwait mov dec mov (bad) out roll jg fwait pop mov into insl (bad) or pop push insl or xchg fsub imul (bad) cmpsb add dec loope,pt jne cmp (bad) (bad) jg jle stos dec cli mov aas nop mov (bad) call ds fdiv jne pop hlt add ret xor mov (bad) xor das (bad) (bad) out test ret in mov cmp dec xchg xchg (bad) ljmp or lcall in cltd pop mov push push cmpsl (bad) (bad) (bad) inc rorl outsb lret inc imul inc sbb repnz repnz call sbb das popf xchg movsl test mov and add mov push popf push out mov inc jge push mov dec add incl enter and cs mul (bad) (bad) (bad) mov sbb idivb enter and pop lods enter add sbb dec cmp push fidivl sub scas ss cli (bad) ljmp ror in popa mov loope sahf sbbb pop xchg stos and aam sub adcl xchg or aad dec arpl and pop sub pop (bad) (bad) (bad) push adc xor fimul subl out mov (bad) (bad) in decl lcall (bad) mov xchg outsb in (bad) mov jge mov mov (bad) (bad) (bad) cli push bound xchg sbb cmp and les and pop daa decl pop das cmp add js outsb mov or (bad) (bad) call mov push pushf or insb cmp arpl push adc popf cmp lods lcall jmp fdivrs xchg pushf pop xabort jmp (bad) sahf (bad) (bad) (bad) jg (bad) mov call push adc loopne add icebp cmp sbb jmp movsl (bad) (bad) (bad) jmp mov mov int3 cmp sbb in ljmp mov xor add ljmp ret adc sub (bad) out add int repnz xchg push pop sbb out (bad) (bad) push or mov addr16 int3 dec imul sbb rol paddusb sar test aam aaa loopne and leave sbb (bad) frstor xor cmp les mov xor lods sub jb ret repz adc cli movsl dec ret movb (bad) (bad) pushl cmp jge lahf fsts shl push pop mov clc andb rclb sbb (bad) (bad) incl adc scas fs or pop xchg mov es push lods outsb push (bad) je ds xchg xchg adc repnz (bad) (bad) dec lcall xchg bound enter out (bad) icebp dec int3 test push ret (bad) jmp clc ret in (bad) adc ret xchg or dec jg aas mov and pushl and xchg fisttp add add movsb mov cmc inc pop ja push lock jnp sbb pusha test in jno,pt test push mov hlt xchg (bad) (bad) lcall fs loop dec lods push cwtl adc shlb iret add dec jecxz dec enter mov ljmp ja mov fs (bad) (bad) mov cltd ret stos rcrl outsb mov xlat cld in lods stos xor dec mov mov repz adc test pop cmp cs dec or lcall scas and out fisttpl aad add clc (bad) (bad) fistpll cmpsb jb add mov loopne dec gs jbe xchg dec (bad) rolb mov adc scas and (bad) (bad) push les push mov lcall sbb mov es xchg roll ja dec inc cmp in dec ja or (bad) (bad) jmp hlt adc inc ret clc mov int sti push arpl dec imul dec mov pop hlt decl mov add mov call test fisubr in dec (bad) (bad) (bad) lcall mov add mov das add mov cmp jne push lods cmpsl push scas stc movsb in push xlat and sbb mov xchg std into stos (bad) add jge negb gs mov sub jae adc loop orb cmp fmul (bad) (bad) (bad) lcall test mov mov mov xchg pop add xchg mov xchg mov xchg in push xor cmpsb (bad) (bad) (bad) (bad) decl sbb mov fidivl les bound iret and call adc (bad) jns aam fsubrl loop xchg mov (bad) inc (bad) cmp leave bsr in movsl inc les cwtl add sbb sbb (bad) (bad) (bad) decl cmp dec fs in shll mov movl data16 push jmp decl dec xor cmp sbb stos xchg sub cmpsb popl dec leave int3 pusha cmp sar lahf test stos rorl add sahf popa lods (bad) ljmp clc push bound sbb call aaa rorb rcr inc push (bad) (bad) incl inc jl loop lcall sub jne jbe ss mov cli (bad) ljmp in (bad) xor pop push icebp nop mov fidiv adc (bad) (bad) ljmp sahf loopne xor pop and std loopne pop push cmp lret (bad) aas pop dec mov sub sbb cmp sbb nop push mov inc lret inc movsb pop add push fbld and (bad) (bad) incl dec addr16 adc pop in sub ficom xor lahf add push add arpl and pop add and js push pop mov push and leave int outsl sahf xor sahf fwait repz and dec icebp ffreep xchg jno and pop dec loopne mov xchg mov or lcall lcall mov cmp aas sbb xchg xor jg mov and js adc repnz and (bad) push dec loopne push xchg adc push jle lds bound ljmp or inc push mov insl aam xor sbb lcall outsb ficompl std mov jbe mov jo (bad) repnz in cltd int jmp jmp pushl es negb sbb jl dec fsubl and rcrl test cmpsl (bad) (bad) (bad) pushl inc mov mov jno add das inc mov (bad) sub add (bad) sbb cld call (bad) cs add stc roll ds call jle add das icebp sahf addr16 sbb fadd imull and outsb (bad) add jb jg (bad) (bad) (bad) jmp (bad) xor or (bad) frstor out add mov inc and sbb (bad) pushl jo movl mov outsb sbb or outsb ds movsb in clc (bad) sbb (bad) (bad) fistpll dec mov loope jg mov sbb loop test (bad) adc (bad) (bad) (bad) incl cs ret subl dec add push mov cs into pusha (bad) (bad) incl dec or push cmpsb xchg inc cmpl or daa xchg xchg ja sub call adcl repz add pop mov add or mov fisubl in add lret adc (bad) incl push mov cmpsl mov test xchg lock add and hlt mov (bad) incl mov daa or and mov into jb mov (bad) (bad) decl cli (bad) or push rcrl aad popf sbbl mov fmull daa inc jne loop jg gs xor pop nop mov lret (bad) fcmovnb jecxz movsl or xchg sbb enter mov imul sahf mov call gs and jl mov int inc push sub pushf movsb jno sub pop imul andb (bad) jmp push jae dec xor sbb ljmp ds add scas cmp fstl xchg xor push mov icebp aaa xorl or add (bad) (bad) (bad) (bad) (bad) fildl (bad) xor pop xlat ja inc aaa pop test fistp dec hlt popf sub out call clc lcall sub dec in mov (bad) (bad) (bad) jmp sbb out mov movsb jp popa (bad) jbe and add in and ljmp sub daa xchg cs mov movsb xor repnz push test adc fs mov lret xor sub in clc jecxz test repz mov mov repz push aam out pop dec out aas stos jns fldl add (bad) (bad) (bad) jmp loopne jo cmp adc pop sahf insb push sbb clc adc lock outsl (bad) dec sbb (bad) (bad) lcall clc clc or lds movsl jo inc xchg dec scas mov lcall (bad) pushl ds (bad) mov mov cmp jae or sub push cmp push jecxz dec fisubr lcall lret jl rcl test fstpl lcall (bad) fcmovnu jnp (bad) loopne nop (bad) jne mov mov cmp repz (bad) (bad) dec cmp jge xchg cltd int3 sbb xor test gs mov xchg add imul adc mov mov adcb sub imul mov sbb (bad) (bad) (bad) call xchg stos xchg xchg lahf mov dec add std mov imul cmpl inc pop lds mov and (bad) lcall in inc gs in xchg aaa sub jge mov repz mov rol fstl jmp (bad) (bad) incl mov push movsb pop mov xchg out stc mov out imul mov fsubr (bad) mov inc out adc or push jle xchg or fs (bad) xor repz fildll iret insl ljmp cs lods mov test ljmp and inc sbb aad and xchg adc mov leave ror or and (bad) (bad) (bad) decl (bad) adc and test cmpsl dec icebp cmp stc push push imul fbstp insb clc xor xchg fnstenv push jge out rcrl lock fsubrp xchg xchg inc repz push and mov test call loopne mov add outsl daa push mov bound fild call imul or inc (bad) jg lods push ds add push out pop push pslld inc (bad) inc js dec sbb jl mov sbb stos (bad) (bad) (bad) fdiv push (bad) out xchg mov pop repz daa dec or jns xlat int hlt out pop sar jmp and (bad) push adc lahf mov jbe mov ljmp jl mov test (bad) icebp jno add lods adc cmpsb test decl mov hlt fwait scas lret add mov ret addr16 add daa pop pusha popa add xchg sub mov test jg pusha idivb fisubrl cmp jnp jne push or cltd dec xor cmc (bad) (bad) lcall insl push sub test and (bad) in mov mov adc sbb mov add mov dec dec xor jmp add imul (bad) (bad) jmp movsl jae (bad) negb insl fwait loope sub aas dec lret (bad) cmc arpl dec inc and xor fcomip (bad) mov jl mov push lahf mov pushf sbbl push cmp (bad) adc (bad) (bad) incl lret lods inc aaa loope (bad) xor aas push sub mov pop push nop bound outsl (bad) lcall mov adc xchg cli into sub je ss outsb xor mov cmp push (bad) (bad) jg mov sub dec and insb sbbl and pop or push sub (bad) cmc pushl sub jne gs lcall xchg mov (bad) (bad) fdivr dec addr16 dec int pop dec mov fnsave push mov (bad) (bad) call mov pop adc cmpsl aas or test loope ds sub (bad) (bad) lcall jae cmp adc pop push hlt add jb xor icebp xor xor mov aaa push aaa test sub fistpl leave adc pop add mul mov mov mov mov fiaddl cmp inc push lock lods imul or (bad) pushl pop rcll adc int3 pop mov pop loopne mov mov (bad) (bad) decl lds xor das ret push (bad) test mov ds lahf sar (bad) (bad) decl pop xchg sbb (bad) out xchg das jmp adc lret sub mov ja inc pop in pop pusha adc xchg outsb fxch (bad) pop int jg lcall cmp xchg mov (bad) fs in iret push enter mov and call pop adc or inc loop lds hlt fiadd fist popf dec test stos cld das or jg add sti xchg xchg mov or in xchg gs test addl jge (bad) (bad) (bad) decl xor adc push mov (bad) xor mov mov push std sub std orl xchg sub fdivs inc or rolb lcall adc cmp adc sbb add loop cld inc or pop imul cs pop mov test jle add jae ljmp ja std int3 pop mov jecxz mov dec mov cwtl dec pop push repnz jmp and adc (bad) (bad) (bad) fnstsw das pop mov sysexit add out scas roll add sbb fnstsw xor (bad) scas xchg cmp push dec cmp pop sti push (bad) jbe xor fdivrp (bad) fild add stc lret aaa add (bad) (bad) pushl xchg sub jbe mov xchg inc push pop loope sub inc push in dec jbe xchg scas test (bad) (bad) incl add mov add inc xlat sahf rep and mov jae ljmp adc ret insb adc jl out rorl outsb daa jge js aaa cld pushl inc cltd int inc fwait sub mov jae iret pop mov (bad) decl pop cmpsb push dec pop in cmpl push nop lahf ret rorl mov ds out jmp push push mov ret adc aas xchg shl or cmp inc lods adc mov fwait (bad) sbb pop sub ljmp repz movsb jbe sbb xor (bad) decl sahf sbb int3 loopne outsb lea add and cwtl xor repnz xor ret ret popf adc sbb xchg jl leave shrb (bad) shr jmp rol ja push out out (bad) mov incl aas dec lods test (bad) (bad) aas push sbb ss xor (bad) and xchg iret inc cmp (bad) fistp mov xor add push push and insl fadds repz xchg cmp or xchg mov incl cmp jmp and xor push sbb xor lea (bad) pushl repnz aad imul or xchg (bad) xlat pop push push je arpl xlat xor mov or je add jb (bad) incl push mov aaa lods repz ljmp enter (bad) jl scas mov mov test hlt in enter stos iret out pop dec and lcall ljmp les lret xchg (bad) jecxz fnop mov mov aad cmp (bad) call jg and (bad) mov out cltd xor jb pusha mov lods dec xchg mov mov cli (bad) jmp lret adc out cmp dec cmp loop test out mov cmp pop dec sub mov out push mov stc imul (bad) inc (bad) xchg xor sti aad in inc shll or mov (bad) mov subl jecxz dec push call jbe sbb mov pushf inc andl js sbb outsb ficoml mov (bad) decl imul inc lret iret cmp dec lcall mov push popf or dec ljmp (bad) call cmp adc sbb (bad) add or or (bad) fcomip orb xchg fmull scas and push dec jns push and out dec imul (bad) (bad) (bad) cmp (bad) fimull arpl test push pop push xchg nop sbb sub iret (bad) and push les inc and das mov pop std mov hlt mov or dec jge les add ds mov psllq xor jl jno (bad) fisttp dec (bad) stc sbb push cmp rclb fist (bad) call decl lods outsb cmpsb mov pop sub (bad) lcall inc clc popl jl mov (bad) dec add ret cmp idivb (bad) (bad) jmp iretw xchg data16 adc fistpl sub in (bad) jne cmp add (bad) mov mov (bad) pop fildll cltd (bad) pop push (bad) xchg jg mov cmp cli fs inc or xchg rorb leave shrb ljmp jne lret test (bad) (bad) (bad) (bad) mov enter push cld mov dec adc stos iret shlb iret je add xchg repnz cld sub cli dec mov (bad) (bad) jmp gs fdivrl or or jle sbb xor (bad) (bad) mov aam mov into pushf sbbb mov pop shll lcall pop enter dec jecxz sbb insl addr16 xor ret call std lcall jnp xchg pop test inc aaa lcall mov repz (bad) (bad) pushl adc lods pusha sbb xchg idivb inc adc mov pop iret mov jne,pn loopne pop push xchg xlat xchg iret add push cmc (bad) add mov imul cmp ds rolb test and sti inc aad sub jno dec ljmp push ss pop imul ljmp (bad) mov add mov jb jge sbb and xchg cld lahf es std push sub add sbb jmp (bad) call out ret shrl or negl inc les aas push dec xchg jo add mov xlat stos cwtl dec stos dec mov push jo jp loop (bad) (bad) (bad) pushl jnp mov loop push stos fwait and mulb fisub mov jmp pop add fisubl cmpsl mov mov rcll fildll mov push pop aad jne hlt into sar add jmp and pushl (bad) jb adc sbb loopne enter leave imul jmp mov (bad) (bad) jg cltd lods pushf jns (bad) pop and stos sti mov and jp imul mov mov int3 jnp and outsl mov aaa sbb loope mov or mov out xchg (bad) je mov stos cmpsb cltd jg movsb shl push inc lret xor jecxz jo sbb dec lds jmp je push je and adc or cs dec mov fs add fcos cmp cli (bad) (bad) lcall mov rol mov aam cmp adc jb dec or push fcomip das mov xchg push sbb fidivr in mov mov xchg roll ficom xor test int3 jae,pt inc ret (bad) add lahf pop jp jns je sbb popa dec (bad) (bad) (bad) pushl xlat movsb and or add test push decl add sbb (bad) mov pop cltd mov clc fcoms test decl loope outsl xor outsl add xchg add decl inc sahf push loopne stos out mov cli mov cmpsb sbb add and insl dec cmp daa in mov mov aad sahf in enter into xchg or fisubr sub in movsl enter std (bad) incl fs negl insl adc in mov gs (bad) (bad) jg sahf push aam mov data16 inc add fldl shlb into mov (bad) (bad) (bad) call xor mov sar adc pop dec inc mov stos dec sbb sub loopne dec clc incl adc mov fnstsw inc sub add div bound pop inc mov push add pushf mov mov sbb xchg cmc or (bad) (bad) (bad) call adc dec sbb mov ljmp ljmp mov out xchg pop (bad) (bad) (bad) jmp pop les inc or scas mov push mov mov cmpsl mov das mov jp out scas test imul inc or (bad) and sbb push (bad) (bad) (bad) (bad) jle stos out pop mov and js fldl dec data16 cld sbb loop lods rcll sbb (bad) (bad) jmp push add push jne loop sbb aaa subb out and sbb test sarl fimul (bad) (bad) decl jmp cmpsl or mov push mov sbb fcmovbe push mov mov and (bad) lcall stc insb xor cld mov dec (bad) enter sbb nop stc add std sub mov (bad) (bad) (bad) call pop test xchg icebp add mov adc mov cwtl int inc push ds fisttp mov (bad) cmp lret (bad) ljmp jno das addr16 push mov dec imull xchg in sbbl into push (bad) (bad) (bad) lcall or add (bad) lea xchg test jl in push jmp and nopl jmp iretw ss xchg enter fstps rorl pop std les push (bad) pushl fstps lds add cmpl (bad) sbb pop xchg enter into xchg and hlt push jge jae loope inc outsb lahf and xor sub ds and mov adc mov pop lock (bad) call mov cmp jae in pop xchg dec inc jno xchg cmp xchg (bad) mov scas stc andb push or (bad) (bad) (bad) call pop orl push outsl jae inc dec or int add xchg jae (bad) mov add imul or jno pop pop sbb lea scas push xlat mov repnz jmp mov push jne (bad) (bad) ljmp ds cmp sbb js and faddl xor into mov add iret cmp movsl adc inc enter jae cmp hlt xlat push adc (bad) (bad) (bad) jmp leave pop imul jl adc notl xchg stos add sbb (bad) (bad) (bad) pushl repnz sub fcoml and test mov mov xchg (bad) (bad) (bad) (bad) ds lret in outsb popf das mov inc fcmovne mov adc mov push jbe add clc inc test push xlat stos push mov shl xor fs lcall sub aaa mull rclb in (bad) stc push je (bad) (bad) call xchg inc nop or push mov daa sbb sub adc pop cmp or imul jmp stos test icebp out cmp movsl subl mov mov (bad) outsb das in mov in rclb pop aad sti ja (bad) (bad) (bad) (bad) clc inc sub outsb inc movsb iret popf mov push push pop jle inc or out xlat mov (bad) ljmp inc rcl lea dec cmp fistl adc gs daa es fcomip add adc fcomp mov adc xchg ss pop adc jmp add xor call jge stc sbb loope (bad) call cmp add mov popa mov sub movb (bad) (bad) (bad) jg cmp int3 pop lret (bad) ss iret pop add jp sahf dec push (bad) pop inc adcl (bad) (bad) (bad) mov cmpsb push and rcrb push cltd add (bad) inc stc xchg lcall (bad) (bad) decl mov cmp mov les (bad) push call incl mov (bad) mov mov sahf lea cmp mov mov popf int jecxz (bad) and adcb jl ljmp dec pop mov loope jo arpl cltd xor sbb (bad) arpl jns push pushl or sub pop adc add pop or push popf iret pop rcr bound addl (bad) (bad) cmp jmp inc cmp sbb movsb fstpl jo int mov mov lret sar negb lret and pop adc and adc pop jo out (bad) mov movsb in clc jb out jnp mov fild jp lea (bad) call pop outsl fistl mov cwtl add fs (bad) fcmovu popf jb push insl mov mov decl adc shrl add inc pop test jg dec inc mov xor fsubrl jo mov sbb or movsl mov in (bad) (bad) (bad) (bad) jge in jae sti (bad) jp add xor or stos (bad) pushf sbb ret inc daa cmp dec imul adc fwait arpl pop sbb rclb sbb (bad) jmp lcall push in xchg pop inc jno loop mov cmpsl insl jg and aaa xor push mov jmp addr16 aam dec jo inc jbe popa out sub jmp mov jo or jb ds std (bad) jmp scas inc pop and pop das dec xlat jns sub test mov (bad) incl cld xor sbb cmp adc (bad) (bad) mov lret inc add and js in lods push jnp das adc (bad) call adc loopne rorl inc (bad) sub das mov (bad) lcall sahf rol adcl int jmp mov (bad) jmp lret xor inc jb daa das shr push and sub cltd lock inc push aaa mov (bad) (bad) mov andl mov sub xlat (bad) subl adc fistpll addr16 jg (bad) jg mov sbb cltd or je ja fs cli cli push insb mov ljmp jmp add adc arpl std jo jbe or push or inc (bad) cmp pusha cwtl mov sub (bad) lcall data16 (bad) (bad) (bad) decl scas inc xchg xchg scas push xor js push aad push sbb xor std (bad) fistl mov fistp (bad) xchg pushf pushaw popf fstpt mov adc mov mov adc stos (bad) (bad) jle and fnstsw mov dec cs mov fnstsw cld (bad) inc dec je mov jo adc lea mov mov (bad) (bad) call jmp adc mov pop jmp fucomip mov dec and movl outsb sti pop (bad) (bad) fcomip push mov cwtl xchg imul lock hlt cmp (bad) jb out (bad) (bad) (bad) pushl mov pinsrw mov mov xchg and sub daa insb xchg test mov (bad) ljmp cli fwait add xchg mov or aaa sahf and adc mov pushf mov jecxz xlat negl addb xchg pop test (bad) dec and repnz scas icebp cmp ja mov clc push jae sbb pop pop (bad) (bad) (bad) mov loopne,pn sarl cmp lcall push test dec xchg pop (bad) (bad) mov les jmp jnp out sub xchg cmp cli lods dec call (bad) jp xchg cmp jb hlt rcrb sbb test adc xor or pusha sbbb cwtl sbb enter adc (bad) (bad) (bad) repz mov ret jne movsl iret fidivrl sbb sub adc cmp sub (bad) incl xor mov shrl daa leave xchg loop sub mov or add jne,pt mov and dec daa loop movsb popf mov out cli fistpll jns mov outsb jbe add (bad) fmuls scas cli lcall pop mov push lea sub sarl adc mov (bad) (bad) (bad) jp outsl push jo das add jns (bad) add or stos pop push add es add call push repnz push dec aam mov add mov (bad) (bad) (bad) (bad) out lret fldt mov loope ret inc (bad) sbb xchg out mov out jle pop push xor (bad) decl xchg cmp lcall or cmpsb add clc push or das clc jmp add icebp sub jnp adc xchg mov pop dec lea test aaa dec rcl outsb mov pop mov pop or cmp cmp je das or pop imulb nop mov or (bad) (bad) ljmp das addr16 and mov cmpsb aas gs int3 rorb inc jnp stos pop (bad) fcomip dec mov std movsb sbb jmp leave jmp repz push dec mov sbb dec gs adc xor not xchg lods or and and icebp lret xor pusha (bad) mov mov (bad) adc xadd fdivrs daa jmp (bad) pushl in sti rcrl fs shlb hlt pop add loope dec int3 sbb scas imul orl sbb dec jbe inc inc inc xor cmpsb jg dec ds mov and jb clc (bad) ljmp cmp stos stos push ljmp out adc cld bound jmp mov adc mov clc lea and (bad) (bad) jmp mov or push add stos mov in jno mov push (bad) xor daa dec adc cld xor mov push fdivrp (bad) mov lcall out gs jecxz insl fdivr (bad) (bad) call loopne and jmp adc mov mov mov fsubr adc xor decl mov ja test lock sub test (bad) and sub call (bad) mov popf aas mov ficomp adc cwtl pop sbb xchg push (bad) xor or pop je sahf cli push ja mov push (bad) (bad) (bad) decl fcomps fdivrs fs hlt pop fwait scas arpl dec mov movsl into les jne (bad) (bad) (bad) pushl pop or rol sbb fcomps and cmp (bad) xchg pop push shlb push (bad) inc fdivrl and and aad cmpsb lods addr16 pop (bad) (bad) (bad) pushl mov cmp rorb lock or cmpsb mov pop sbb outsb (bad) (bad) (bad) (bad) clc jl sub aas jns add push out inc or mov call mov std mov mov scas mov cmp jb pop (bad) xchg pusha jle mov add orl ljmp (bad) (bad) sti jns pop sbb popa dec adc and ss and stc outsl lcall (bad) lcall xor repnz rorb (bad) xor xchg cld mov and (bad) jmp add mov mov fisttpll jo cld outsb test (bad) (bad) decl lods pop xchg or ja out and push (bad) (bad) (bad) cmp dec xchg insb (bad) jmp (bad) std addr16 push sbb fcoml lret sub lock (bad) (bad) (bad) std lods dec loopne dec cli inc xor imul lock ja mov ret adc sar cld lcall jecxz push mov fcomps scas shl mov xchg repnz rorl ja cmp clc push (bad) jl xchg popf mov push mov fdivr (bad) (bad) call stos mov imul loope (bad) push sbb adc pop jp cmp mov (bad) (bad) (bad) (bad) cld idiv sti hlt cwtl mov ds adc pop insl lahf in (bad) sahf aam test dec jbe test cwtl popa stos hlt (bad) (bad) decl mov les lret (bad) sub (bad) cmp xchg fldl sbb decl mov repz mov or fsts (bad) cmp es inc or add or (bad) pushl fptan int mov fidivrl jne out push js cmpsb sar (bad) jg mov dec adc fmull jecxz ss enter mov (bad) (bad) (bad) lcall in shl inc cltd into (bad) decb aam mov and mov or (bad) (bad) lcall pop xchg lahf jbe push pop insb inc pop (bad) lds addl int pop pop pop lret (bad) incl mov dec mov fdivs jae cmc adc js or notb and (bad) (bad) incl icebp jecxz adc dec rolb jmp out xchg push push pop in in dec (bad) (bad) (bad) inc jge push sub orl sahf jecxz fsubs xchg xchg or (bad) scas mov leave add daa push mov xchg les adc sbb push pop scas inc sub sar pop (bad) (bad) (bad) (bad) stc cmc pop pop mov mov push test in dec fnsetpm(287 pop sbb lea sbb push dec ljmp out lods sub ds loope insl mov jp add mov dec mov lds push dec sub gs aas jg cmp xchg pop leave outsb inc adc sbb (bad) (bad) (bad) js (bad) jb loopne sbb inc insb lahf xchg or test (bad) ds jmp cld mov test mov mov fidiv sub jmp xor arpl or lods icebp jae jecxz,pt xor cmp or lret mov add (bad) decl roll xchg cmpsb call jbe (bad) (bad) (bad) mov out repnz mov (bad) mov fwait cs mov lret (bad) (bad) (bad) incl jae das lret push pop in push inc ss (bad) pop roll cmp (bad) (bad) (bad) decl pop mov mov push jl movsb jecxz aaa sbb (bad) fsubrp popf and add decl lock das xchg push cli xor daa mov in mov cmc (bad) (bad) (bad) sbb add data16 mov xchg (bad) xchg out (bad) or sbb fsubs push pushl test xor dec xor dec cwtl dec in lret rolb daa (bad) (bad) (bad) incl mov out cmp pop push inc jl dec rcll into xchg fs cmpsb xor movsl (bad) (bad) (bad) incl pop mov jecxz outsl jnp icebp ljmp imul add pop mov jle cmp fldenv xlat mov mov xor sahf push push imulb (bad) (bad) (bad) fistpll std lds stos notl mov pop clc pop mov icebp lock lds nop clc call mov lret mov ret (bad) (bad) mov lcall mov inc lahf add or ds imul cld (bad) (bad) (bad) (bad) stc push mov inc ret lods inc and jb outsl data16 or out loopne adc push xchg mov clc roll lods sbb sub adc mov (bad) (bad) mov out lahf push pop mov jb mov mov call sar repnz loop dec push sbb xor sarb dec add imul mov jecxz in xor mov fcoml jne pop adc fsubrp (bad) mov adc ds lret (bad) (bad) lcall xor fidivl sahf cmp jmp shl movsb int3 mov pop push cs lds decl fdivs (bad) lods es or (bad) and insb jbe xor decl and imul add cmp popaw faddl mov cli (bad) (bad) jle jmp movsb mov inc lcall test mov ds mov popf sahf or dec inc mov xor (bad) (bad) (bad) (bad) ljmp (bad) cs jmp out leave xchg into aas ret and (bad) lods push aas test jmp ds (bad) (bad) lcall mov adc scas cmp dec cmp xor imul push (bad) aas mov sahf loop inc loopne pop add sbb (bad) (bad) (bad) sti cld mov jle negl adc pop and cmc or pusha push outsl jno jmp (bad) out cli leave adc sub xchg outsb lock mov (bad) (bad) (bad) call jp mov add lret stc sub flds in jge (bad) xlat jo rcll addl dec cmp or inc aaa nop mov cmc jns mov lahf and jle in mov adc jecxz jne add push movsl (bad) lret ret push push xchg repnz (bad) (bad) (bad) call (bad) xchg cmp (bad) jo xor pop mov das outsl pop push fyl2x jb (bad) adc jno (bad) (bad) fcomip mov push xor push movsb ljmp mov aam cli decl xlat adc in imul mov (bad) (bad) (bad) (bad) jns adc and xor leavew mov mov xor mov xor (bad) (bad) pushl pop aaa cmp xchg dec sub push mull subl pop mov mov (bad) (bad) (bad) cmp cs mov jmp (bad) iret jge ja test push mov mov (bad) (bad) jle jmp das fld jnp inc fnstsw cmp cs and in inc or push dec loop imul jle (bad) dec sbb cmc fsub cmp (bad) or add and sub mov cli (bad) (bad) call mov int movsl sbb psrad inc xchg jecxz dec lods push adc ss sub sbb inc mov scas ret fimull in jnp pop add xchg sahf mov negb mov daa repnz (bad) jmp or mov jecxz test mov or aaa mov push dec cmc adc incb ret pushl cmp inc leave mov aam add popa test and dec in sti (bad) (bad) ljmp mov push sub (bad) xor fdivrs sti lahf (bad) or insl and lods jg xchg js cmp pop out adc incl sub lret loop xchg stos fs (bad) jecxz or xchg or inc mov xchg add icebp (bad) xor psubusb adc fadds mov cli (bad) (bad) incl sbb mov xor mov leave xor jbe std cmp sub (bad) (bad) decl dec mov inc mov ja aas mov pop cli (bad) (bad) inc fistl mov adc stos dec mov sbb jno or pushf in pop mov pushl mov nop push sarl call pusha jb nop imul decl imul hlt and dec adc jle jg (bad) (bad) (bad) clc mov dec nop jno and sbb add push call std mov jns fnstcw pop (bad) jmp imul fstl mov icebp insl pop call and xor push mov cli fistpll sahf mov dec int3 data16 (bad) call push jb inc inc dec lret insb xor jbe cmpsb icebp cmp ljmp cmpl push lods pop ret pop push xchg ds cmp mov xchg (bad) mov loop sub cmc sub out cmc loop mov dec lods add inc jae aas repnz adc (bad) (bad) pushl jmp enter outsb hlt (bad) xor xor sub adc dec (bad) incl insb (bad) or mov or and incl fs xor leave inc cmp bound xchg pop (bad) (bad) jg add push shll ret jecxz aas dec sbb iretw (bad) mov (bad) (bad) (bad) lcall or add adc push stos xorb add lret mov loop xchg inc loop (bad) pushl mov out dec and (bad) out popa notl cmp pop cmc mov stos lahf xor xchg dec call dec stos pop jmp fs sbb (bad) mov imull fsubrp push sub imul or pop xchg mov and mov and aaa sarb xor lahf mov xchg fldt pusha xchg sbb mull loopne push insb popf pusha or (bad) mov loop adc jbe scas testb pop aaa pusha imul sbbl xchg jae xchg mov (bad) out popf int3 ja and add jne outsl cli aaa cld je in pop sarb stos dec jge add mov (bad) (bad) (bad) call mov imul xlat shll or add xchg cmpsl loope cmp jno (bad) (bad) (bad) lcall cmp adc dec pcmpgtb pop and mov andl jecxz push lcall data16 cld loope aaa inc xlat sub mov ds dec incl xchg lcall in add inc add (bad) fild cli or xchg mov and add daa aas fmul (bad) (bad) (bad) lcall pushf std mov push gs jmp sub jge frstor push adc inc dec (bad) call adc jnp dec cmp iret add (bad) (bad) lcall jns in addr16 adc insl movsb fistpll add ret outsl ret outsb daa ret pop (bad) (bad) call or scas mov mov or adc (bad) sub (bad) (bad) call scas adc xlat leave repnz dec inc push popf or jmp add aad and test or pop icebp hlt int mov sub lret or cmp inc sahf popa mov sbb call ds pop push mov inc pop jns in sbb mov ds cmp (bad) mov test push cs (bad) (bad) mov xor sbb daa test pop sbb lcall jbe rcrl (bad) (bad) (bad) lcall call ret inc cs sbb pop jl shl adc pop sbb fild inc cs and dec mov jmp cmovbe cmpsl sub ljmp mov (bad) mov mov subb dec xor lods movsb in (bad) (bad) (bad) fnstsw cld pop mov (bad) cmpsl xchg push icebp dec je or xor lret push (bad) pushl data16 pop inc ret insl insl xchg push js sahf pop cltd push mov pop addr16 lcall fs jg es lcall mov mov adc test es aad jge cltd jno jae mov stc rcrl sbb cmp (bad) call jmp fcomp lahf in cmpsl rol lret sbb cwtl mov es (bad) (bad) (bad) (bad) out jle insb inc mov inc mov (bad) cmp pop cmp ficom call jb loopne insl incl mov rolb pop sub and mov (bad) ljmp jnp sbb addl jae (bad) push loop sub lock jae call ss (bad) lcall mov xor addr16 lock (bad) jmp mov sti enter mov pop stos ljmp int3 lods xchg addl push stc test add (bad) (bad) cmp loop mov mov pusha mov (bad) and cmc incl push jb (bad) push pop into mov lcall (bad) cmp adc dec in push rcrl arpl mov ljmp shlb shr in sub aad iret push (bad) (bad) (bad) lcall mov mulb inc outsl pop push stos (bad) cmpb or call call stc fs nop test fwait adc jecxz mov (bad) (bad) (bad) incl xchg mov sbb sbb popa pop inc dec xor inc pop pop out push in pop icebp (bad) (bad) stc adc sbb fisubl popaw mov mov out xchg fs (bad) pushl pop jmp nop loope pop inc push repnz or or loopne xor xchg out stos sub (bad) lcall (bad) xor leave cmc (bad) insb testl adc icebp loop data16 cmp testl jno movq push cs jbe,pt sub pushl (bad) addr16 mov stos rcrb (bad) (bad) (bad) ljmp dec fnstenv rcll scas fld1 lret aaa sti xor jl loopne xchg mov rorb or popa xchg mov ret (bad) (bad) jmp ficoml cmp jno and mov add push mov add (bad) jg lahf data16 iret jo pop xchg adc and or icebp aam push mov (bad) (bad) incl outsl sbb lods mov push mov push in mov (bad) cmp test pop push out fcmovb sbb pop imul (bad) adc mov (bad) rclb lods mov and inc test (bad) call xchg mov int3 stc stos mov in and aam sub call (bad) jg sub in inc and cmp xchg bound push nop mov push insl push in (bad) (bad) decl pop mov jno adc js vmovsd dec inc hlt push pop ljmp push push enter rcl loopne ds jmp mov cld (bad) pushl scas daa stc add cmp push aas jo out ds mov cmp xor (bad) (bad) (bad) ljmp push (bad) dec lock (bad) data16 jne daa pop jae xor lock (bad) dec (bad) (bad) (bad) aas std mov orb mov cmpsl inc outsl and fisttp mov fucomip fbstp xor outsl xor rorb cmp (bad) push or mov push push sti xchg and dec icebp push ret mov rcll push (bad) (bad) (bad) (bad) mov xchg pop add xor and mov xorb jnp cmp mov inc mov (bad) sahf mov loopne xchg shrb inc lea mov imul mov leave push imulb je mov dec stc fwait ret pop rcrl (bad) (bad) pushl mov (bad) repnz xchg lods mov adc (bad) sbb aad out sub loopne scas in out (bad) (bad) call mov xor hlt movsb (bad) int xchg pop xchg punpcklbw inc movb jmp movsb sbb sub adc shlb jg (bad) jle lret mov outsb add xor roll das aam (bad) (bad) dec rcr mov fdivl push jbe or jecxz mov dec dec enter cmp push mov out pop cs and scas clc push jle,pt pop mov pop pop jge stos xchg test add (bad) (bad) (bad) (bad) call sti mov jmp push inc pop in mov fldt aaa push dec (bad) (bad) (bad) jmp jne sbb je bound push loope xchg cmc sahf ss arpl cli mov std ljmp push and add (bad) jg lods xor xlat inc aas aas pop jmp lds cld call pop sub fldcw iret mov xchg pop imul test pop sub push cmp mov push jae das and xchg mov pop pop mov loop hlt data16 aad mov push push repnz mov (bad) (bad) jmp xchg (bad) jbe xchg xchg add mov out pop clc ljmp mull jbe sbb add push sub xchg and scas xchg mov repnz fnstsw fstpl sar lcall dec inc gs sub xchg in leave mov xor (bad) mov dec lds std sub (bad) (bad) (bad) jg mov mov dec pop jno fndisi(8087 jns jbe int popa fwait in insl ds xor (bad) (bad) jl popf lret or or and mov and adc (bad) (bad) (bad) jmp mov jo cmp jge sbb (bad) das mov push in fdiv fs in pop adc incl cld pop insl adc out int cli cs push in (bad) pushl jl test hlt jle aaa insb adc sbb cmpb nop mov and out int jg movsl dec xchg movsb roll mov pop push mov push (bad) (bad) (bad) (bad) jns lods outsb das into jg gs jmp stc dec loop jo sub call idivb test xchg pop in shrl pushf mov mov add mov insl stos (bad) (bad) lcall or in inc push cld push xchg negb aas cmpsl cmp or mov xor ret (bad) (bad) (bad) jmp mov cmp jnp cmp ljmp jle dec adc movsb incl rcrb adc jne sbb sbb test xor sub xlat push jle add mov test pop xchg cltd fwait jbe inc mov std dec xchg loop icebp (bad) (bad) call xchg sub pop xchg rorb fildll push jns (bad) mov les mov sysret mov aaa outsb xor lds push mov sub mov roll inc inc xchg adc out or movsb fstp sbb imul (bad) (bad) decl ror movsb or push cmp stc test lock sub decl dec cltd imul in xchg dec xchg or jbe pop mov ljmp hlt (bad) (bad) (bad) dec sahf aam daa adc cltd jp int3 mov daa sub loop (bad) jbe enter push idivl (bad) icebp push hlt dec and sarl lock fcomip lcall push pop scas mov xchg lcall sbb xor out (bad) cmp mov add (bad) jg ja rcrl mov push push and ljmp mov push out push pop iret push pop xor addl xchg clc sbb push mov mov (bad) (bad) (bad) inc ja out popf call jb cmp mov fwait nop mov pop (bad) (bad) gs (bad) mov or addb sbb jmp mov mov xorl test ficomp cli (bad) mov rclb ret pop punpckhwd sahf pushf xor sbb stos mov imul sub out xor jl xchg scas ljmp lea xchg mov mov loopne xchg sub jg pop pop push mov mov xor jnp js leave (bad) (bad) (bad) (bad) mov push push pop stc jb xchg mov or mov or orl gs outsb test (bad) (bad) push push mov jmp push in std arpl sub mov test mov mov sarl and repz cld mov ljmp (bad) (bad) (bad) inc insl divb inc leave scas cwtl aas xchg bound in mov jne adc or clc (bad) ljmp xchg xor jp push or rcrl shlb push out dec and rclb (bad) (bad) clc xchg aaa xchg mov in dec gs (bad) push xchg fldt call test mov pusha mov adc push pop mov test decl xlat test cmp addr16 cmp dec add fmuls sbb into scas push inc mov rcl test cmp shl (bad) rolb (bad) call jmp adc mov gs inc and decb or bnd inc jp scas lods xor jno,pn repz inc fstps sub jg jo xchg xchg jge loop dec mov push lea fs pop and aaa xor lcall (bad) incl cmpsb xchg cmpsl mov and lret inc mov mov shrb lds (bad) (bad) ljmp cmc ja sbb aam fs xor imul fcmovnbe cmp nop ret (bad) (bad) pushl je repz popf mov or in fdivr (bad) pushl push xor pop and and adc mov ljmp mov mov psubsw (bad) (bad) jg pop push dec dec push stos arpl and adc ljmp cmpsl loope or fstpt fsubrl push loop,pt iret (bad) (bad) (bad) fnop (bad) test je testl jb mov mov iret out cld mov adc (bad) (bad) jmp jge jle rcrb mov cltd add inc addl scas pop inc pop cmpsb jnp cmp add cmp xlat xchg mov or mov add sub cld (bad) push sbb sub (bad) (bad) (bad) push icebp mov pop cltd pop add add or push cli xor in fsts iret adc add fnstenv movsb sub pop adc cld mov and xchg xorb lods mov push or (bad) (bad) (bad) mov mov add mov and jno xor xchg (bad) fwait xchg or (bad) and jmp mov daa jnp test mov fisttp repz movsb (bad) ljmp enter mov mov out push aas int shlb push mov pop test add cmovo cmp push int lods fistpll in lock call xchg mov cmc bound sbb out mov pop (bad) jg lds andl pop xor loop pop imulb (bad) pusha nop cmp xor (bad) call sar sbb push push dec adc test in popl xchg add (bad) (bad) (bad) ljmp mov int3 aam test mov dec jge negl mov movsb mov lods (bad) (bad) (bad) push cltd out or pop rcrb lret hlt mov loopne xchg adc push cwtl sar (bad) jmp xchg (bad) (bad) andb mov dec leave mov jnp jns xor and pusha and pushl jle pop push and cmp movsl fsubs jecxz dec sar xor mov sti cwtl mov sub adc inc cld (bad) (bad) cmp mov push sbb insl lret lea out inc and fnstcw nop ficomp out jge clc add push test mov (bad) ljmp push loop test cmp push sub push insl mov xor fnsave dec subb sbb jg ljmp push pop cs inc jecxz add cmp sbb sbb int3 mov add (bad) (bad) (bad) lcall pop mov aam testl mov out sbb aam ret iret jecxz or (bad) call into adc sub lret daa sub mov lret dec lcall loop inc (bad) xor call and test mov xchg mov notb lods or call pop loopne andb sbb outsl push sbb jne pop (bad) (bad) (bad) jmp dec push dec dec inc push decb dec push bound inc ljmp (bad) jno xchg ja (bad) (bad) fcomip decb mov hlt std idivb lea frstor rcrb dec sti xlat insb pop out incl enter push mov push sub push out (bad) out jnp (bad) (bad) (bad) push jg xorb inc cmp (bad) scas mov cmc mov add or out xor call xchg jbe pop mov jp or xchg xor mov inc call das sar push test inc dec cmp xchg add mov mov (bad) jmp add adc clc call xchg mov mov inc lods (bad) out shll (bad) lcall dec push xchg insb sbb bound out iret mov push sbb mov insb jecxz and mov sahf ds mov out stos xchg push aad pop jne xchg imul pop cmp or outsl xor or inc pop sub loop mov xchg imul sbb enter insl fcomps js push add jno pusha bsr (bad) (bad) (bad) incl sub or pusha fldenv sub jecxz or aaa test pop push stos (bad) (bad) (bad) lcall adc jge icebp dec (bad) push lret or cmp mov cltd int inc jl sbb (bad) decl loope aam (bad) mulb nop ds sub out adc ror jnp sti and aas dec add mov aam fs inc mov (bad) inc shrb test sub clc out enter and aaa jmp clc lahf push (bad) pop sahf mov mov incl roll pop repnz jo fadds lahf jmp ljmp inc mov loope (bad) (bad) call jns dec call das lea or xor scas ret jae mov mov sub jns jmp fs mov rcrb xor mov inc dec imul (bad) repz cld (bad) ljmp xchg fs mov jnp les add hlt add jle inc mov dec push mov jmp pop in (bad) (bad) dec pop jmp pushf add aad pop cld pusha add imul adc out out call inc cld mov xor lahf add inc jmp jecxz,pt mov sbb cs cld push and call ss mov movsb insb sbb sub or in (bad) push movsb cmc mov (bad) (bad) (bad) call ror xchg add and mov dec and arpl cld stos push ljmp loop ret pop ss mov movsl js mov add and jno add test adc test movsl (bad) call std add imul mov mov pop add (bad) aas (bad) (bad) (bad) (bad) jge jb add push lods push fstpl pop add (bad) aam push add (bad) push and aaa push es scas out push shrl sub mov (bad) ljmp (bad) (bad) (bad) dec (bad) mov andl mov daa das lods and cltd sub (bad) scas test mov jle cmp mov or adc mov (bad) lcall add xchg scas cmp inc pop or lret push gs jle cmpsl adc mov aas mov andl sti scas insb sahf cli jnp icebp (bad) ljmp mov sub pop rcll sbb adc (bad) fild testb add and call clc pushf push mov loop xor xlat jg inc (bad) out dec pushf (bad) inc add sub imul mov movsl and (bad) (bad) pushl mull pushf dec test cmpsb dec lds xchg cli loop mov fistpll loope (bad) (bad) fmul mov pop shl scas xchg and idivb mov test mov sar (bad) mov adcl mov fstp rcll out or (bad) call mov lods data16 lret and inc test pop hlt out (bad) (bad) pushl xchg cwtl push xor js add aam mov and test push dec loop clc jnp (bad) (bad) call ljmp mov in cmovbe add xchg push out int3 mov lret cli (bad) mov xlat pop xchg pop subb cld mov pop xchg mov (bad) incl cmc adc int3 adc ret mov push cmp pop dec jo mov std (bad) inc rcrl jb repz cmpsl inc cli sahf sbb (bad) mov insl pop icebp jg mov push add (bad) push incb (bad) decl jmp and cmp nop mov (bad) mov enter incl incl aam and push roll add cld movsb add and cld jnp (bad) (bad) (bad) jge xchg dec mov cmp jno,pn dec hlt adc xlat dec pop xchg mov adc pop inc push (bad) pushl bound xor loop pusha jle notl (bad) fcomps pop cmp push popf dec xchg push roll ret sub stos pusha cmp arpl sar jo xchg adc mov mov pmuludq cli cmpsl cmp enter lcall and cmp add pop repnz shrl je add adc (bad) (bad) decl xor push or sbb sti mov sbb jle (bad) (bad) jmp notl sub or sbb test mov or pop push adc (bad) (bad) lcall xor dec lods iret adc xor pop and xchg rcll stc mov adc clc push cld (bad) (bad) lcall sahf cmp mov xor cmp pop (bad) outsl mov std call loopne cli gs lret add dec fmuls xchg decb xor (bad) (bad) pushl or (bad) sub cmp cs insb cmp ret rcrb (bad) (bad) (bad) aas adc or mov and ds cmp mov sahf jns lret decl fsubp mov cltd or add sar call aad faddl and jae (bad) (bad) pushl ds dec pop mov sbb cli lret jg movsb mov rclb dec push fwait push inc inc pop xchg cmc (bad) (bad) pushl add fs cltd add cmp add push or push loopne popl push daa pop mov inc inc mov pop into mov push (bad) cmp jno lock add jg mov out movsl jb (bad) incl inc inc shlb mov stos fcomp movsb cli pop fmull pushf mov pop mov inc sahf push add imul jecxz xchg dec std jnp adc (bad) (bad) (bad) (bad) pushl xchg stc loop pop mov lock popaw jge orl fcmove (bad) (bad) (bad) decl cmp push ret or lods pusha into xlat repnz fs jl rol push jne mov inc xor pop (bad) (bad) (bad) ljmp lahf in daa inc lock mov cmp mov aaa mov and (bad) (bad) (bad) lcall push insb jo pop sub mov cmpsb out nop lods (bad) std push fldenv inc in leave je (bad) and (bad) (bad) lcall jge clc pusha stos repnz bound mov aas mov dec jge adc es insl xchg xchg es (bad) (bad) (bad) fucom out pop mov sbb sub inc imul pushf (bad) (bad) (bad) incl ret roll int3 fimull fsubl lock pushf add (bad) (bad) (bad) pushl notb jne (bad) mov adc (bad) jge in outsl pop (bad) xor int and faddl dec xor and ljmp jmp movsb sbb pop mov outsl mov insl insl icebp enter nop dec pop adc rcl cltd and mov (bad) (bad) (bad) lcall lret sahf push and pushf fcomps or pop xor jae inc stos (bad) int scas pop inc std (bad) call add fdivrl and cltd jo clc mov xchg (bad) ljmp xor jp lods int3 dec ljmp (bad) mov ss fistpll inc fcos mov cmp popa stos bound pop out (bad) nop cmc test cmpb (bad) jle shrb (bad) pop mov ss mov mov or mov jle stos (bad) (bad) (bad) incl cli cmc mov les mov mov out mov adc je mov mov (bad) jmp adc popf ret int3 add push or and mov or jnp (bad) mov xchg dec adc inc sub fdivs jle and adc ds mov jle in pop (bad) dec imul pusha mov sbb jmp outsl jecxz enter inc inc mov mov add pushf int pop xacquire (bad) xor lcall leave sub push dec movsl (bad) or mov sbb pop and cli and inc pop (bad) ret adc decl mov cld add jecxz out aam mov cmp inc imul stos adc insl (bad) (bad) (bad) lcall jne aas jb sbb add lods insl lret test fildl arpl jb sbb stos into aas inc adc dec or xor mov adc pop jnp lock scas nop inc arpl call (bad) mov mov insb repnz dec fisttpll sahf sub pop add aaa fs push mov pushl sbb shl pop (bad) cmp gs enter and lcall mov pop out ss loopne sub adc test les aam pop das adc bound fdivrp ffree aad pop imul imul fld xchg inc fisub xchg ds jnp (bad) (bad) (bad) incl aas adc mul pop out xor stos int3 mov add pop cmc (bad) (bad) (bad) inc pop (bad) pop dec fildll mov mov incl (bad) (bad) decl lods sub push inc icebp xchg fdiv xlat xor add popf rcl push xlat dec (bad) (bad) mov lock sub dec in mov std push (bad) cmc mov lock (bad) mov iret and jg pop mov adc call ret stos jge out and (bad) (bad) (bad) jp sbb xor pop mov das mov gs push mov jp jno lcall add into lods movl mov pop cld mov xchg xor mov outsb fildl mov add (bad) (bad) (bad) jmp stos fimull jmp pop cmp jne jp dec sub sub (bad) mov lea mov (bad) ljmp xchg sarb repnz out mov (bad) ljmp or push jno lret repnz lock xchg pop cmc (bad) ljmp or call mov mov jb jg cmc cli xor xchg sbb pop subb jp xchg jmp lods inc pop pop scas cmp jle lret (bad) pushl nop mov push jmp arpl arpl pop (bad) cmc pop mov add (bad) (bad) (bad) call jne push mov dec test faddl xor bound sub daa stc mov mov pusha adcl insb xchg incl call push xchg sbb mov jp pop mov clc imul push icebp (bad) out xor cltd cltd inc roll (bad) (bad) ljmp outsl scas cmpsl inc (bad) mov rcrl dec jbe pop pop pop lock pushl (bad) adc lcall mov sub (bad) incl xor ds pop xor and sbb add (bad) fcomip call jle es fwait or mov lret xchg and out mov (bad) cld stos ja jg mov ficom push std (bad) jmp in cli imul xchg (bad) hlt or popa lock pop cld sub (bad) incl out xchg pop nop lahf jnp mov cmp dec lcall and sub mov fidiv (bad) (bad) (bad) push daa mov jae movsb ja dec lcall or sti in sbb outsl dec and pop xor cs (bad) lcall shrb cmc mov mov loop xchg orb (bad) call (bad) sub jle jae iret mov cmp mov dec (bad) call repnz ds sbb sub int inc adc (bad) incl pop sbb iret cwtl mov (bad) shl inc mov (bad) (bad) call sbb in adcl cld repz jg inc or ljmp cli (bad) push jle outsb scas pop lea cmpsb outsl inc mov push adc ret mov mov insl shrl (bad) (bad) (bad) (bad) jl sub or in data16 and jnp jne stc add xchg ja fcomip data16 fs ds and nop scas (bad) dec es clc inc pop sub xor testw aas jmp (bad) lcall and xchg fldcw mov sub ljmp pop dec mov mov in aam ljmp (bad) fildll inc and cltd stc jno pushf inc cmp fcmovnu out mov dec test pop fwait mov (bad) repz inc mov loope mov mov cmp mov test (bad) (bad) lcall mov pop mov fsubrs cwtl mov pop cmp lret (bad) (bad) lcall push mov ljmp cmp xchg out xchg pop add (bad) mov (bad) jmp (bad) and adc and call repz daa or test fdivrl int sbb (bad) push jmp addr16 pushf idivb in or lret and push repz pop jecxz mov mov inc cmp push test push bound (bad) (bad) (bad) lcall or inc ss pop insl mov push loope in and repz bound int call lcall dec mov dec pop (bad) pushl mov xor adcb and and mov jg jmp scas (bad) cs (bad) bound stc into and sub mov (bad) ljmp jl (bad) push push psubb test lcall jmp mov mov (bad) fcomip push xorl dec xor test sti sub outsl dec lcall mov bound notl pusha mov push test (bad) cs aaa adc lea popf inc repz xor mov (bad) (bad) aas add push cmp ljmp mov (bad) lahf js pop push mov test mov jns mov adc fdivp xor int andb das xor mov loopne dec xchg mov inc push push pop and fwait or pop adc aad jl pushf adc ret movsb (bad) (bad) call mov pop dec rclb int mov popf xchg mov arpl (bad) (bad) decl dec imul mov cwtl js loope icebp mov mov ja scas icebp rcrl xchg mov (bad) (bad) call mov xchg xor ret adc popf fdivl push lret push adc and adc sbb and leave xor xor xchg loopne inc ljmp ljmp pop adc lret or fld1 mov inc lods mov mov icebp dec cli jno lock xchg xor incl adc xchg push add clc arpl mov das ds lock das sar insl push xchg add lahf fs pop mov mov push add add lcall (bad) lahf add xchg cld xor loopne push js xor inc or lret dec add cmpsb xchg mov (bad) (bad) ljmp cmp mov or popw les leave xlat sub das mov mov ret repnz xor (bad) (bad) ljmp push or cmp mov in cmp fisub jl fcoml (bad) (bad) (bad) ljmp sub out aas adc lahf jmp sub call xor push dec fimull clc (bad) ljmp push popf scas jle cli push or aas jecxz and xchg inc and add add push test out mov push leave out icebp or mov (bad) jmp jle nop rolb loop mov sub xor jp fistp insl (bad) call sub cmpsb xchg nop or mov stos and mov push sti xor pop loope out sbb incl mov or and inc jle jo incl movsl mov jne scas mov iret pop pusha inc jle repz jnp (bad) out cli (bad) mov mov outsb insb daa ret aas lret fisttp (bad) (bad) jg fidivrl aaa in inc push mov in dec aam stc in ficom fidiv and cs cli cli pop push dec push mov pop cmp jmp inc push push xchg test xor mov fnsave jo test jl hlt jmp adc cmp (bad) (bad) ljmp lret xchg mov xor xor aas sub cli jmp loope mov sbb xchg je or addr16 xor je mov (bad) incl fldl (bad) out cmp jle inc leave inc mov pop loop (bad) (bad) (bad) incl jne pop dec dec sahf cmpsl sarl stos out cmp adc mov cmp mov loopne adc ljmp ljmp xor cmp add inc arpl cmpsl (bad) mov shrl jg jo pop or fimull adc decl scas mov rcl shll add mov add cld cltd fadds sub (bad) (bad) (bad) fild cwtl orb mov and aad xor or jecxz sub xor adc outsb das scas pop push pop dec pop (bad) (bad) (bad) (bad) in sti rcll xlat les pop push movsb pop in or push pushf lods in dec jg or decl inc push fild push stos mov fs add out aas js inc add and sbb mov (bad) dec adc stos mov (bad) scas stos int fwait inc call xchg lea pop pop xchg fnstsw dec or shr test sub mov dec ds (bad) (bad) call xor xor int3 cmp mov pusha call jae lock ljmp movsbl push jecxz sti paddusb pop jo ds test decl inc sub addr16 ja int3 andb cmp mov pop xchg mov inc jne cli (bad) pop std scas xor mov jbe,pt popf daa cmp (bad) (bad) (bad) mov xor sar cs and les fldz add icebp test (bad) (bad) lcall dec gs sti xor in sub insl jge cmp imul inc sbb (bad) (bad) (bad) (bad) fdivr lods add mov or mov jae pop sbb xchg (bad) sub dec (bad) (bad) (bad) ljmp test lcall adc stc pusha or xchg in (bad) fcomip in push dec (bad) ljmp and (bad) lcall ds and dec dec push sub pushf nop sub pop (bad) lcall ret popl and loop (bad) (bad) jmp mov xchg mov (bad) aas inc mov loope scas pop xchg popf inc sub (bad) (bad) (bad) decl or int pusha sbb std xchg xchg out mov jno fildl jge jecxz (bad) fcomip in and adc (bad) test enter (bad) jge mov mov in (bad) (bad) lcall dec cmp lret rol (bad) decb loope clc xchg ret les dec dec loope sub ds adc jg push pop jae loopne in mov lret xchg jae push rcrl (bad) (bad) (bad) (bad) cld xchg les push mov call push dec std pop inc and es mov ds imul (bad) (bad) (bad) sub cmp inc xor pop lahf add push addb inc sub (bad) (bad) (bad) ljmp lods pop jb cmp dec pop mov test sbb sub xchg repz dec cmp push (bad) (bad) (bad) ljmp fisubr cltd cld mov adc (bad) add cmp (bad) (bad) decl xor mov (bad) mov outsb adc hlt clc inc pop je (bad) incl scas sub fild repnz cld sbb (bad) jmp mov fsts jae fnop add and pushl cli js lods and fldcw cmpsb jb pop inc sarb lret out dec (bad) (bad) (bad) lcall rcll cmp popa ret jnp and cmpsl mov psubq insb ljmp call sub mov inc jne push inc pusha sarb add and jl mov (bad) jmp mov jbe push inc daa pop pop cmc xor sbb xor sahf pop call jno inc sub or sbb or sub jne fbstp repnz test in mov push cs (bad) (bad) pushl in mov jle sub or push xor and aad mov (bad) mov jno mov enter jmp and pop insb sti dec iret lcall (bad) (bad) push rolb adc push or test xchg sub sbb adc (bad) (bad) (bad) decl add pop stos xchg pop cmpsl sub imul xorl mov cmpsb popf out loop mov (bad) dec xchg or inc jp mov xor ljmp aam jnp mov adc cltd xchg (bad) scas mov jl pop cmp add mov cwtl mov (bad) cmp clc pop addl (bad) (bad) (bad) int inc notl and pop out jne (bad) (bad) mov xor inc std dec cwtl bnd mov jge jbe fadds sbb call xchg dec insl imul add (bad) (bad) fistp outsl in mov test mov jb mov test cmpsb inc in pop sub decl pop mov mov pop cmpsl or adc popa adc fisubl (bad) incl cmp or sahf mov out adc add push add mov inc dec mov dec fwait (bad) (bad) jg out pushf movsb daa push out push mov ror call inc insb mov mov sarl addl rorl lret mov das int3 lret or lahf xchg gs dec mov hlt popa leave ss lock (bad) js aad enter mov fmuls test sbb adc ljmp ljmp and cmpsb jnp mov cmpsl mov cmpl adc inc test xlat outsb bound xor and sub xor cld jecxz jnp pop fdivrl leave cmp bound and mov out stos push popf mov outsl cli pop mov sub inc cmp inc sub test inc (bad) jg cmp out sbb (bad) (bad) (bad) lcall fimul lods js mov sub jnp repz outsb sbb pop orl add push mov in test sbb sahf in outsl and or push mov pop aaa cli xor jns mov jne call in pushf in pop cmc (bad) lcall ficom mov adc cltd mov jbe incb inc (bad) in (bad) (bad) (bad) lcall mov fcoms fnsave aaa (bad) cld lahf and (bad) fmull cltd lahf pop sahf cltd xor (bad) (bad) (bad) (bad) jl hlt and cmp ret xor movb std fidiv orl adc faddl inc dec outsb jl xchg arpl add mov push loop cmp inc and icebp adc adc fiaddl mov xchg add dec (bad) (bad) (bad) pushl pop xchg dec mov loope call adc xchg ret ljmp (bad) (bad) (bad) pushl sarl dec adc adc call push (bad) notb mov (bad) (bad) jmp nop rolb mov mov mov jmp (bad) ljmp jp mov and add jmp (bad) mov (bad) fild or or stc sbb sarb pusha push add dec mov lret jg cli and icebp jo jne stc xchg mov (bad) sti jae repnz lcall sbb push les sub mov (bad) fcomip adc scas repnz movsb (bad) jg push addl les sbb (bad) (bad) (bad) incl cs in (bad) negl fsts mov (bad) dec mov ljmp xor pop push xor jmp std movsb repnz ss idiv lcall ds jbe into xchg jle aaa pop mov scas (bad) decl mov js in jg dec ljmp (bad) jmp mov outsl (bad) test insl incl mov outsb cs arpl loope stos dec jb inc adc scas add mov (bad) mov (bad) (bad) (bad) lcall jp sbb xchg dec das and mov adc orl mov (bad) (bad) cmp pop mov addr16 imulb aaa or stc mov xor dec cld fldenv pop adc enter ja (bad) ljmp lods push push and leave and and (bad) (bad) (bad) (bad) (bad) sbb aas mov not iret and cmp data16 and jbe cwtl stc (bad) (bad) (bad) push push sbb add sub shlb mov cmp dec jno hlt mov test pop cmp dec adc cmpl xor push mov sbb or push (bad) ljmp fmull ja js push jecxz frstor lds (bad) (bad) jl mov xor sbb push xor adc (bad) cmp cmpsb sahf mov (bad) (bad) (bad) jg rcrb int add popf sti jg cmp outsb mov mov bound adc lret or int cs (bad) (bad) jmp rol daa sub in (bad) daa adc dec ss mov out mov xchg ja (bad) (bad) cmp lock into xlat xor repz jb popa push scas scas inc add (bad) (bad) push sbb imul cmp (bad) (bad) mov xor jmp pop adc (bad) jmp xchg lea or stc je mov cmpsl sbb xchg add stc inc and cli pushf mov sub adc stc int3 sub orb lods add int3 lock (bad) mov add pop jae jle out insl sbb cmp lret mov cs call (bad) (bad) jmp push sbb cmp xchg jns push xor ret xor icebp pusha mov sbb mov jae inc add pop jmp lahf push pop mov pop gs (bad) (bad) jg push jge mov mov outsl xchg lcall xchg sahf and test (bad) sub or scas sub loop pop enter and jae (bad) (bad) pushl mov mov or aam rcll xchg mov pop or pop push es sub aad fdivp lret (bad) (bad) push rcrl xchg cmpsb adc mov (bad) pop test pop stos rclb in mov cmp (bad) (bad) (bad) (bad) cmp imul add scas sbb in jp or sub (bad) ljmp mov push jnp shrl cmpsb popf xchg add jg mov mov les (bad) lcall pusha sahf mov and sub stos in xchg clc (bad) jmp nop sti xor or and cmpsb int (bad) dec inc mov insb fdivp test pop lods push aam xchg adc imul (bad) (bad) jmp stos sbb xor sbb lea adc pop adc lock jno xchg mov (bad) call (bad) (bad) jmp lahf cmc out inc add loop dec mov das dec aas cmp push adc imul mov lret push add and insl xchg adc (bad) jg outsb icebp mov pop mov xchg mov push lret xlat fimull aas rcrl or cmpsl xor jns and daa (bad) mov (bad) pushl pop mov ret aaa arpl ds lcall ds pop cmp imul dec xchg call xlat call cld je jge dec and inc mov into aaa push hlt outsb aas rolb mov into inc inc lret popf je insb add xorl xor jmp push lahf ds sbb mov (bad) (bad) inc test add int scas ror movsb icebp add movsl jge push in jecxz leave (bad) adc std (bad) (bad) (bad) (bad) jecxz and adc inc dec mulb mov rorl (bad) call lret subl loopne stos pop pop ds imul xor ja lret push (bad) (bad) jmp mov dec push pop xor enter and pop jne sub sar or xchg or pop ja in in addb cmp (bad) (bad) (bad) lcall xor je inc add add ljmp out ds lret mov (bad) jmp imul xor mov sbb idivl frstor (bad) inc mov insl inc ljmp push movsl (bad) pop (bad) (bad) (bad) (bad) out stos mov cmpsb lret mov fcom cltd (bad) je xor in jle mov jb lock adc outsb bnd xchg lea rolb xor dec sbbl shll cmp xor (bad) (bad) jmp jg sbb mov fisubr push sbb clc test lahf mov sub push pop jle cld push sar lcall cmp xchg fsubs mov imul (bad) lcall xlat lea pop push push xor hlt xor test inc into sub and jle push ja mov aas mov pop lods add cld nop or inc (bad) (bad) inc cmpsl adc xlat pusha jne stos arpl (bad) pushl push nop add nop jp fldl and out (bad) (bad) aas dec sahf ds xchg inc fidivrl loop mov stos test mov lods out push (bad) cmp sub cld dec adc fildl leave (bad) add pop and mov (bad) dec adc xchg dec mov xchg ds ljmp out mov and stc fwait (bad) (bad) (bad) incl popf dec (bad) frstor mov xlat mov push or pop mov jne hlt cmpsb (bad) fnop and jns rclb mov cs ret (bad) (bad) (bad) inc adc lock pop arpl mov adc bound push fxch mov aad out fidivr sbb mov push out (bad) mov and inc and clc loope mov and (bad) (bad) jmp sub push into (bad) int3 lods add mov cmc cmpsl loop cwtl imul (bad) (bad) decl dec pushf mov and cmpsb dec cmpsb jecxz sub incl push mov xchg stos or dec xor ret mov aaa (bad) mov mov rcrl ds std mov lods push jge mov mov and mov (bad) out jo,pn lods cmc pop (bad) (bad) (bad) ljmp fildll mov repnz orb push inc pop enter mov aam (bad) (bad) (bad) push loop jno jo rcrl jle mov icebp movsl push cwtl int3 push leave sti xchg push ljmp sub xchg mov popf push jl sub ds pop out jb lret cmp xchg sub jle push in jp cmp insl jbe insl push and mov (bad) (bad) mov push sbb test js sub das cli dec mov sub (bad) fnstcw lea aad (bad) (bad) (bad) cmp jno mov addr16 xlat cld mov xor iret sub incb fdivr imul in adc mov cmp cmp clc ljmp ss cmpsl fs in dec adc push dec lret (bad) (bad) push out dec add in stos inc (bad) outsl mov pop fisttp jb jbe cs icebp (bad) sti push sti sbb add pushf push mov clc mov test ds hlt push add ljmp add out push scas insl sub iret fidivr push mov (bad) decl fwait xor dec clc lcall jnp dec out dec int ss ljmp xchg ja scas xor aaa clc aam inc adc dec test in jae or xchg popa xadd mov jg lds fldcw pop in (bad) pusha mov pushl movsl xchg sbb sub call inc test sbb xorl loope incl cmp mov insl sbb mov (bad) (bad) mov adc subl lds jo dec (bad) push and icebp das mov mov maxps jge pop push pop (bad) incl js arpl movsb dec je push fidiv mov nop cmp hlt cmp or push xor add testl jge jnp (bad) (bad) (bad) mov mov push mov pop xchg pop sub mov outsl ljmp jge test into or lea fsts and ja les inc dec sti push (bad) nop sub sbb lock test or mov push mov push scas xchg call sar and call std xchg lret sub iret or jg or inc pop nop (bad) and fld and and xchg cmc decl pop cmc add pop fstpt jle (bad) (bad) decl faddp dec push mov mov sbb mov outsl and dec push xlat (bad) (bad) (bad) (bad) pushl add addr16 movl imul sahf gs sbb (bad) jg enter imul add fwait mov iret push repnz (bad) decl jae mov or adc push hlt iret jns data16 pushf inc mov (bad) (bad) (bad) call mov (bad) xor mov sub mov mov push rorb lcall (bad) (bad) mov mov lret mov push lods jecxz cli std jge in sub jecxz out das cmc mov sbb dec (bad) mov mov test (bad) (bad) lcall loope dec mov sub mov fldcw (bad) or lods loop pop fisubrl ljmp jle add ljmp jecxz jns inc jnp das mov cmp push fmuls fstpl repz repz cmp stos lock jmp cmp cmp dec es and ljmp xchg push out sub dec flds and sbb int3 decl lock lahf xchg push mov inc pop aam jne (bad) decl gs (bad) inc pop sub adc or xchg fnop (bad) pusha sub ljmp adc lahf popa cmp adc jl test adc jmp mov mov jmp or out stc push mov icebp mov (bad) jmp mov inc or rcll popa leave pushf jno fildll push decl sub jns icebp aaa inc clc ljmp or ja pop in cmc jbe ss ss (bad) (bad) jmp iret pop cmp ret dec inc pop mov stos push push mov xor jge sbb incl clc test in xor ret mov lcall insb addr16 repnz into (bad) xchg pop outsb and inc imul clc loopne sti pop cmp and inc sub mov add mov sbb (bad) dec (bad) stos jo push xor push dec aad cmp loope ljmp mov imul aaa jbe lahf call les incl mov add jg dec movsb add sub pop int3 enter jp loop xchg or dec nop or ret in push adc (bad) mov insl mov mov or sti or pop xor jmp (bad) jg or repz stos mov je jo aam sbbb repz inc call mov pushf adc adc inc test mov sahf jae fisubr pop clc (bad) (bad) out mov shl fs or dec loop push repnz xor mov mov cmp les add setno repnz (bad) (bad) mov (bad) (bad) lcall cltd jmp and (bad) xor es sub das addr16 mov mov (bad) ljmp pop sub mov in out test std sub cltd xor lcall js mov mov outsl (bad) lcall push sahf mov pop mov sbb xchg (bad) (bad) mov pushf xchg mov push ds dec in push xchg ja (bad) jmp imul fistl push or pop jns aad ret fsubs (bad) pushl sub mov hlt pop int3 clc fwait sub cmp bound xchg mov pushl rolb movsl shrl pop out out dec push lock fcomip pop xchg in imul push (bad) push pop mov fwait (bad) and jbe jp (bad) incl sahf ret lcall out or (bad) decl and cmp push loop pop xlat out adc inc mov cmp mov jno lret jecxz cmp imul cmp pop inc outsl jo aas push hlt (bad) (bad) lcall adc sti mov pop dec fwait mov inc dec orl jmp pop cwtl pushf sbb fs in in cmc (bad) decl fdivl pop xor mov in rol xor fs int3 ds and mov mov iret sub pop (bad) (bad) (bad) (bad) mov jle ja cld xchg and pop pop pop mov sti push outsb loopne in int3 xchg jbe (bad) (bad) (bad) (bad) inc cmp data16 data16 cld sbb adc jno inc sub fdivrs inc pop rcl push cmpb inc mov cmp jmp dec cmp mov (bad) decl add (bad) cld lcall xchg hlt fcomip mov push or pop mov test mov out and aas stos mov icebp mov ja mul add stc sub pop in imul (bad) xor (bad) (bad) call scas jb sbb pop add aad lcall sbb pop lret (bad) (bad) (bad) incl xchg pop sbb mov mov jnp in sub and xchg roll pop xlat (bad) (bad) push cmp or les rclb bound push push lahf loop mov addr16 (bad) (bad) (bad) jg mov fdivr repnz xor stos pop add sti push lret (bad) cli inc push mov divb daa dec hlt test lcall mov sbb adc mov add decl mov fadds push sbb and xchg ljmp (bad) dec sub fs mov out inc fldt cwtl das aam insb jg shlb jg fldcw das in and pushf mov pop out (bad) incl cld and jae push xchg sub cltd fdivr push adc daa and mov mov sbb mov pop (bad) out js cmp xor fwait (bad) pop ret pop cmp sbb (bad) jge (bad) jg rcr scas sbb lahf negb mov cwtl pop pop jo pop push jecxz pop ss (bad) (bad) dec rcl inc cmpsb cwtl (bad) hlt inc fmuls inc and jmp and movl cmp fwait inc ret in notl xor gs insl dec mov enter lods lock (bad) jg imul cmp sbb data16 push (bad) (bad) (bad) incl in xchg fwait xor cmpsb (bad) enter imul push ficomp fwait lock lcall popa stos into aad pop mov mov je or fdivp (bad) dec aas xchg (bad) (bad) mov test in mov jno pop jno jmp lods cs scas test rcrl adc fdivrl lret or lods sbb (bad) decl jo idivb insb ret aas das jno (bad) jg cmpsl jg sub adc ss pop seta pop mov (bad) (bad) (bad) ljmp mov cmp in (bad) mov xchg mov jae ja test pop call (bad) lcall lcall pop stos data16 sbb inc pop enter add mov xchg inc or (bad) inc mov lret xchg push sub (bad) pop jle sub call or push (bad) (bad) pushl daa jmp hlt mov mov pop push lds push and adc sbbb sbb xor xlat pop jle outsl sub out out fistpll mov mov cmp icebp cmp std cli stc test cmp or mov mov mov mov into pushf popa mov sahf (bad) in test jnp sub (bad) (bad) (bad) incl inc pusha sbb push test out ret out push insb es mov xor xor arpl loop cli xor pop divb daa mov add call cmp adc sbb sbb mov xchg (bad) cld xor les ja pusha (bad) (bad) (bad) mov ja pop add cld mov pop mov (bad) dec inc jbe fildll push or aad cs shrl mov sar sub xchg movsb dec sub jb,pt rcll rcl (bad) pop js js nop mov push mov imul and leave orl xchg and addr16 mov incl cld lret je test xchg xchg pop fnstsw (bad) gs fnstsw sbb ljmp and sub mov or es adc sbb xchg lods nop push push and dec pop mov mov mov adc xchg xchg into cmp xchg cs xchg jb movsl out out out (bad) incl lahf js cmp call pop lahf fs fisubl ret (bad) (bad) (bad) lcall mov mov cmp dec and rcrl adc int3 sarb fcomp enter mov (bad) (bad) inc adc stos fs mov (bad) pop imul adc push and aad mov lcall cmc jg push sarb inc cmp adc mov mov dec mov in cs mov (bad) jmp aad bound jb pop lret inc daa jns adc cmc ret (bad) (bad) (bad) call in dec popf push outsl pusha mov or cmp cmp xor fucomip push out imul rclb xor hlt sbb and fnstenv test dec loopne (bad) (bad) mov jb or push add pop stc mov test sbb decl in popf scas mov mov dec out mov xchg pop shl mov add jg dec push jne xor jnp cwtl (bad) (bad) (bad) ljmp popf daa pop xchg lea mov loope,pt mov aaa out push outsb add inc (bad) (bad) (bad) incl add (bad) int3 mov pop or add aas arpl (bad) (bad) call fistpl call dec or xchg xchg decb lret mov mov cs mov mov in sub and push dec xchg (bad) and leave (bad) insl mov or aas in jns sti mov into test mov movsb mov (bad) mov mov stc mov jno add adc out xor sub lcall mov (bad) lods or cmp loopne cmc ljmp sub incb mov lret push cmp or cmp pop int3 lock or (bad) (bad) (bad) (bad) jge loop sbb pop mov aaa push xchg int3 imul test or dec jmp (bad) (bad) decl out outsl mov (bad) cwtl cmp aas push jg and sar push int3 loope lea xor lock lock xchg pop mov push xchg jecxz test jmp loope mov aad inc popa aad je xor shll (bad) (bad) pushl xor cmp jns inc setb loop pop mov icebp pop mov add (bad) call push fsub or insb jl add icebp inc adc sbb (bad) (bad) mov cld daa mov es mov mov dec push repz (bad) repz (bad) (bad) lcall ror pop xchg add jge sbb ja cmp push cwtl dec lock pop mov dec imul and ficompl push clc mov add jl pop lock pushl ss adc mov (bad) adc addl mov fwait dec push or (bad) (bad) incl mov test mov mov pop sub jnp jg (bad) (bad) (bad) cmp stos xor adc and mov push adc mov mov (bad) (bad) (bad) jmp jae mov outsl and mov repnz lea insb lods fucomp mov jg movsb inc xor xchg or add ss mov js wrmsr sbb aad (bad) (bad) lcall mov inc out mov jno jl cmpsb (bad) imul push lock jne std mov call pop mov sub sbbl add mov (bad) call fwait sub sbb out movsb in nop pop cmp add push (bad) (bad) (bad) incl data16 inc cmp stos bound xchg adc insb int outsb cmp pop fsubrl (bad) (bad) call lock inc (bad) dec jbe call sub inc mov jbe mov decl loop jl repz push xchg push inc cmp xlat decl sbb jno xchg inc xchg lods stos pop pushf loopne push pop cld cld jne (bad) (bad) (bad) jmp test mov or ret add cmc lahf jno sub pop xchg adc sub gs (bad) (bad) pushl cmc add fcomi or adc clc ljmp mov shrl and lea (bad) (bad) inc jp jmp and adc test jns jne lods add sar (bad) (bad) jg cmp divl push and jg cltd cmp dec movhps cli cmp jge clc (bad) mov (bad) cli dec insl xor out (bad) cmp mov stos mov stc inc and (bad) (bad) incl rorb xor lcall inc sbb and mov dec outsb (bad) (bad) push mov push inc xor aaa push xor pop sub test xlat sub xchg (bad) (bad) fistpll sti jmp call stos insb mov pop sbbb out (bad) (bad) (bad) call les repnz push fistl add and push das xor add jmp add sbb ljmp jg out mov imul icebp sub (bad) (bad) (bad) push pop mov add push push repnz repz jl dec adc fdivs cld jg push lods lcall scas clc inc mov int3 rcl push cmp push push mov xor aas icebp insl jae push aas dec inc mov or or sbb pop mov insb pop push push mov popa arpl int3 inc incl ret les ret sub jbe in repz add (bad) (bad) (bad) incl mov jmp dec es dec jge sbb enter (bad) out dec mov dec pop sub ljmp dec rolb int pop or (bad) (bad) (bad) decl adc push imul inc ds (bad) jg push cmp xchg inc jle (bad) (bad) decl xlat xchg movsb xchg imul inc movsl push fisubl lods ret scas sub aaa std (bad) call jno test roll adcl imulb (bad) (bad) push xchg inc (bad) repnz dec outsb dec add frstor sti fstpt ja push xor mov decb decl and cmp sub xchg out lret mov mov jl hlt sub loope decl sub fwait jno into push aad roll jbe repnz (bad) (bad) jg mov mov mov pop (bad) mov cmc xchg and stc enter clc js (bad) (bad) call push push xlat mov and mov xor movsb and xchg xchg loop iret dec add sub (bad) lcall testb dec inc and inc cmpsb popa jl push add (bad) incl inc jno enter rorb adc push popf pop int mov jg sahf push fldenv ss mov push add and jg lods decl das xchg fidivr fsubrs mov add (bad) ljmp sahf mov mov ret and (bad) sbb mov inc mov lds (bad) push pop or pop es mov cmp sar (bad) (bad) mov adc cltd data16 outsl out dec mov pop pop es sub dec cli add insb jno (bad) (bad) jmp lock (bad) mov sbb pushf add cs popf (bad) nop in (bad) (bad) (bad) call jae (bad) cli sarl int3 in push sub dec in lcall add mov dec push adc pusha fildll mul (bad) (bad) call inc (bad) sub and (bad) sub rol pop stos or inc pop inc mov in lods stc push jle iret xchg sub cmp dec xchg sub or (bad) leave rol mov loopne negl imul addr16 cli or push repz (bad) (bad) incl (bad) cmp addr16 lock mov adc jmp push inc dec sbb add (bad) (bad) (bad) jmp cmc (bad) lret fild out inc stos and leave cmp stos in mov pop inc clc (bad) (bad) ljmp jbe test inc movsb (bad) in rolb cmc hlt aas jp adc aad pop popf sub scas aam movl mov roll push push subl and xchg or flds in dec fmull lret cmpsb xor test mov fdivr (bad) decl ds mov xchg or notl (bad) mov imul loopne addl out (bad) call mov (bad) (bad) cmp rcrb cmp inc in lds pop jb insl stos add mov aaa std (bad) incl add push sub imul ss movsb push mov je ret inc push and pushf jne (bad) (bad) (bad) (bad) cwtl fcmovnbe loop push cmpsb or aam cmp (bad) lcall mov dec sti dec cmc lcall mov nop test xchg cmc outsl inc popa fsubp jge (bad) (bad) call pusha sahf and add push mov fcmove iret and adc (bad) call push pop inc cmp cmp mov xor mov imul fwait pushf cmp das xchg test sar decl dec pop lea mov ror js jle pop and mov gs das add subl test (bad) mov mov add cmpsb cmp (bad) jmp notb jecxz cld mov adc and inc mov sbb ret out pop loope (bad) (bad) pushl outsb (bad) es fisttpll fnstenv mov lds test bound (bad) decl sbb test scas xchg or lods and pop mov outsl (bad) (bad) (bad) cld insl enter or jno popf sub cld jge outsb xor ljmp mov mov xchg call push ljmp mov xor out ljmp lcall mov sbb mov cmpsb in jno inc (bad) fdivrl addr16 (bad) aaa xlat pushl insl fmul jle xor out pop sti jecxz (bad) out add scas cmp clc pop (bad) fnstenv iret stc xchg in push (bad) adc subb pop (bad) (bad) (bad) (bad) jg and fsubs fcomp lret lea fcomps fwait xor icebp rorl sub sbb popa (bad) (bad) (bad) call aaa rclb imul add out push out imul cmpsl mov cmp call ret lahf bound popf popf je cltd stc scas mov in lods mov push sar inc dec adc in adc stos mov mov call ljmp push dec add xor push sbb (bad) (bad) call xor leave mov xchg add cltd (bad) xchg fwait movsb das or cmp ret outsb cwtl lahf sub push xor push call (bad) jg (bad) cmp push or fcom xor lcall pop mov jecxz (bad) jmp and mulb loop mov pop mov jmp xchg call mov jge in xor push pusha mov push sub mov jbe shrb cwtl iret ret ficompl add ds out adc sar pop mov loope insl sub les pop push mov lods in test cwtl xor pop inc mov rcrb xchg push xor push mov ds daa push cld and ja icebp (bad) ljmp and movsb sub mov sbb mov mov ds push aaa jne dec fwait sub and mov (bad) pushl sbb scas outsl icebp xchg fisubl inc sbb ret leave xlat jg push pop fdivrl and (bad) pushl les sub cmp dec pusha fcmovu addr16 (bad) clc fbstp fsts insb cld gs ljmp fnstenv fdivl ds dec lcall fstpt (bad) sbb in dec jg push xor in pop cmc (bad) call xor mov sbb xchg hlt lods mov test push into (bad) (bad) (bad) (bad) jmp seto cli mov mov or test sbb aad mov xlat rorb data16 iret gs jmp xchg pop and sub mov (bad) lcall sbb sbb cs push add xchg pushf loop sbb fcoms ss cmp (bad) pushl pop add cs mov (bad) mov sub ja lods (bad) (bad) mov out stos test push test pop jge xor rcr jo inc sub cld call ljmp test pop mov mov cwtl (bad) (bad) (bad) lcall test adc sbb dec out pop add and sbb jno out mov mov lods mov cmpsl insl push xor cltd add scas aas mov sti push lods lahf pop sbb jg push and mov and pop jae imul in and jmp mov adc cmp das into pushf and jg add adc lret fdivs ss jb call adc sub sahf mov loope andb push dec sub push cli and pop aas andb add scas loop lcall jg lods incl fildl inc pop sub rolb jns (bad) (bad) decl push insb pop popa push adc jp mov push mov addr16 mov (bad) (bad) (bad) incl and stc pop cmp sub xchg (bad) jns mov lods dec pop sub icebp into int fcomip incl jmp shr nop sbb xchg dec push pop pushf fisttp roll (bad) (bad) jmp add in pop xchg in ljmp into es jns xchg push rcl cmp (bad) inc sbb and dec jmp xlat int aas sub dec int lds sub inc cli (bad) (bad) jmp int test inc or fsubrs jae enter jo outsl cmpsb int3 pop lock insb jge xor sbb mov aas sbb pop loope jno (bad) mov (bad) incl adc iret sti imul push ja mov ret (bad) aas xchg and adc sbb lret sahf push lock es pop insb jmp movsb int jbe out repz mov (bad) sub roll (bad) (bad) (bad) cmp jmp mov lods xchg pop (bad) or or sbb push gs imul aaa adc jg jmp mov mov add daa (bad) xor das (bad) dec lret mov (bad) mov jp cmp push ret jnp adc ret mov mov mov pop cld sbb fwait out push in push call gs outsb push (bad) mov (bad) (bad) pushl cmp jle (bad) loopne mov jmp repz fs jbe xchg movsb mov loope or popa jecxz xchg jno mov cmp pop and stc insl pop addr16 and adc std push fcoml hlt xchg inc cld mov push mov pop sar fcoml lods faddl (bad) cmp incb xor mov (bad) jb ljmp inc and in jne iret in bound mov test jle inc jb pop paddd (bad) (bad) (bad) incl sub mov notb ja xchg cs jle pop das lahf data16 out das push mov loope (bad) call and cmpsl sbb push das lea pop add pushf out (bad) (bad) (bad) mov xchg lret roll imull push into imul addr16 adc aaa sbb sub out xchg aam pop sub int (bad) (bad) ljmp mov ret lret sub test jg fstps sub aad pop cmp jae push pop dec push fdivrl ret enter mov dec sbb popf lret into mov cs scas movsb xchg jo bound sub mov push adc (bad) cmp push add dec inc sarb je (bad) lcall push pop add mov cwtl cmp dec push xor das (bad) and (bad) (bad) (bad) stc call test add mov stos mov (bad) (bad) fbld dec cmp xchg stc std xchg pop or (bad) lcall sbb lahf sbbl dec mov mov dec dec adc pop and (bad) incl cmp stos mov mov shlb jle mov (bad) ljmp aam adc into add loope (bad) mov and fucom icebp fwait mov (bad) (bad) jg in in inc clc cmpsl push test andl xchg pop fildl andl (bad) (bad) ljmp scas xor push pop out sahf xchg loop or lods inc adc push pop rcll (bad) (bad) decl mov sbb pusha aad cmp mov stos xchg or loope lahf add pop ds mov mov adc pop test push xchg scas or loopne adc pop xor cmp bound cmc cmp (bad) stc (bad) ja clc call sahf ss xchg jge lock (bad) jg (bad) fsub cmpsb clc rcl pop lcall jae push pop das mov add out jl inc out ret or dec and out adc decl jae mov xor movsl or outsl adc mov jle xchg cltd cmp xor (bad) aas sbb pop sub cmpsb jmp push inc cli push mov (bad) (bad) lcall jo cmp xchg mov dec out xchg mov and sahf pop mov stos jmp xor aam addb cmc xchg dec sbb pop and movsb leave sbb cltd scas (bad) call mov xchg mov negb jnp xchg pop shl jo jmp fnstsw (bad) pushl mov scas arpl outsl scas in cmp push iret jmp jmp (bad) (bad) push stos mov insb ja cmp sbb ret lcall cmp vpshlq fs adcb loope stc inc and xor into xchg sub (bad) jmp xor and incb add loop xor (bad) (bad) decl ret aaa cltd loope imul je adc pop mov (bad) call or scas aam push fs leave ljmp mov pop mov jbe in sub fs push mov pushw lods add mov loope cmpsl pop fwait sub incl jae add adc ds jnp push lcall aam mov dec addr16 (bad) lcall (bad) cmc jns add addr16 mov loope lds sbb ljmp fidivrl push mov ljmp jecxz mov pop lods cmpsl inc (bad) mov adc int3 pop fldl (bad) ljmp jg outsl jecxz and adc pop es lea or inc mov sti ret pushf xchg xor jns (bad) out ucomiss mov fmull (bad) (bad) (bad) (bad) lcall aas call add fwait stos fwait cwtl lahf inc sub bound pop icebp test mov mov xor std (bad) out cli (bad) mov shll insl dec repnz add jecxz cltd popa xor icebp fdivr fcomip decl pop add or jbe dec dec arpl outsb loop inc or or addr16 lds mov pop (bad) xor (bad) cmc cmc std mov lock decl pusha push jl mov inc pop sbb int3 (bad) (bad) inc pop push (bad) or mov std jmp (bad) (bad) (bad) incl cmp and mov inc cmpsb loope and push loope dec fdivr (bad) (bad) (bad) mov lret (bad) adc fs jo sti repnz (bad) mov adc add mov push (bad) (bad) (bad) decl fsubrs popf fptan outsl seta out sbb inc sub or add lock and aas scas xor push sub mov (bad) (bad) decl and lds andl push in scas int3 pusha or mov movsl imul and (bad) ljmp aas ljmp (bad) mov and lock (bad) (bad) lcall aaa dec aas imul or pop in sub adc pop or fbld fnstenv sbb fcomps nop jo (bad) (bad) push popf jmp add inc out lds inc int sbb rcrl repnz rorb icebp xor insb scas xor lcall mov gs das mov ljmp xor push data16 loopne,pt jg ljmp mov rorb in aas dec mov sub ljmp incb hlt add push fimul sti mov cwtl pop out inc (bad) (bad) (bad) call dec lods jmp jg jecxz lods dec adcl iret mov dec call cld ljmp loop shr pushf test stos xchg cmp leave pop jl movsl pop nop sbb inc dec test hlt jbe negb je shlb add pop mov or mov jb mov sub pop sbb aaa (bad) decl (bad) loop xchg movsl xor and push int3 rcll (bad) (bad) (bad) lcall or xchg mov je or in mov dec xchg push mov (bad) (bad) (bad) cmp xchg insb pop adc repnz arpl push arpl out movsb mov pushl xchg jl dec daa insb push sahf jp mov (bad) lcall sbb add mov scas aaa fidivl add adc xchg mov shrl pushf decl jo ljmp in inc and inc out cli (bad) jmp popa out mov notb mov cltd mov popf (bad) lcall jecxz jne push leave mov (bad) hlt mov sub (bad) (bad) (bad) call and in lods sbb cmp repnz outsb and fiadd xor (bad) jg decb cmpsl (bad) dec mov mov call dec jg (bad) jmp xchg jbe scas lods mov mov pop mov aam xchg sbb jmp cmc decl fneni(8087 and cmp (bad) lret jle mov (bad) (bad) mov lds dec lds add mov or cmp icebp popf fistpll out add fsubr and es call (bad) decl popa sahf (bad) pusha dec xchg add fstl test mov arpl sbb jb add pop adc dec sub (bad) (bad) call leave gs pop pop iret call xor aas rcrl pop in mov jg cmp incl dec shlb xchg jl sar (bad) incl push jo fiadd pop or jecxz bound or adc les decl xchg inc fmuls inc dec push pop mov cld lcall je sarb repz aas (bad) xor test (bad) (bad) jmp cmp les pusha dec xchg sbb push push mov push mov pop test push sbb (bad) (bad) jmp scas jge xor cmp cmp push mov inc pop (bad) repz nop mov clc jge (bad) (bad) (bad) ljmp push xchg call xor cmp sub (bad) fisub mov pop outsl or lock (bad) (bad) (bad) (bad) mov lret outsl mov and std mov add sbb (bad) (bad) (bad) (bad) call inc xchg int nop gs cld test js (bad) lock loope notb jle and ljmp push dec adc xchg shlb loop add pop aad mov test jbe in cltd mov ret and (bad) (bad) decl movsl xchg test jp xor aam stos dec clc imul sbb push mov fwait (bad) ss push mov inc ja out pop nop and and adc ljmp mov jmp roll (bad) (bad) out nop sub je loope outsl push dec into shrb adc rcl bound jle (bad) aad jmp (bad) ljmp insl and insb (bad) notl inc mov mov mov jo mov fsubr loope jge movsb test lods xchg stc (bad) mov (bad) fcomip leave jo shlb xchg dec dec jle stos sbb iret fmuls jmp push jge andl fsubl sub scas stc je and jle jae stc icebp (bad) (bad) (bad) jmp jbe dec aad (bad) mov popa int3 sub adc inc test dec dec pop adc xchg jno adc or div pop shlb movsb push popf aam call in test sbb repz adc pop mov fldl decb stos mov jns shl mov pop fistl or inc outsl mov ret sti (bad) lcall mov hlt inc (bad) jne jmp xchg je arpl lcall (bad) adc jmp jno arpl xor push bound jo mov mov cli incl mov add xchg in or xchg (bad) mov or rolb movsl and mov (bad) call dec and sahf pop icebp mov iret fistp orl push mov subl add or sub inc bound (bad) (bad) jg movl adc mov imul (bad) lcall mov andl add loopew addb add push mov or fsubs data16 (bad) jg sahf xor pop sbbb rcr aad fiadd lahf jo (bad) decl lods push adc push iret outsl xchg mov nop xchg or decl dec (bad) dec popf out pop imul test dec dec mov (bad) cld int mov test and mov cli out call (bad) (bad) call jp out dec pop jb repz or adc jae cwtl out pop out pushf aaa mov jne (bad) pushl and push fldcw pop lahf sub out insb inc xor (bad) (bad) (bad) jmp arpl gs data16 fcmovb addl scas mov jecxz xchg cmp and sbb sub out das sar testb pop push ja jns (bad) (bad) ljmp adc mul andb imul cs (bad) (bad) (bad) (bad) ds test adcl (bad) xor jbe xor xor pop dec mov adc (bad) (bad) (bad) incl cmpsl in mov inc pop xchg fstp pop mov sub nop adc out cwtl dec dec cld (bad) (bad) fcomip hlt push daa rorb add add imulb in lock aad icebp outsl cli cmpsb sub inc push mov jns loop mov mov (bad) lcall rcrl mov mov mov jmp hlt mov xchg (bad) (bad) (bad) incl pushf and add mov and and mov mov stc push push cld fwait lcall mov loope mov add pop mov out jg jmp push ja popa push lock mov jl ds ret stc test in sbb ljmp scas ljmp push adc sub adc sbb cmp sar push mov mov je pop shrb loope shlb dec jne (bad) not mov (bad) (bad) (bad) cmp pop (bad) cmc mov jg lahf cmp xor out divl jmp into sbb (bad) (bad) mov cmp lret jb ret jmp mov rcr cmpsl xor or std hlt (bad) (bad) jmp jg jns test sahf dec jle jo sub std adc ja imul cmp bound (bad) scas es mov loopne pushf ss xchg ljmp jb dec xchg (bad) push mov pushf and pop adc (bad) (bad) (bad) jmp and xchg sbb into aad sahf cmc mov push or outsl imul cmpsl addr16 (bad) (bad) (bad) pushl stos jl sti and sub pop inc sub and pop mov (bad) (bad) (bad) jmp sahf aaa in mov sbb sbb mov cmp and (bad) xor mov mov and pop into scas imul and scas xchg add fsubrp jbe rcll (bad) (bad) inc adc and adc repnz cld mov imul fisubr xor sar ljmp imul xchg pop add test jl pusha and xor jg cmp mov call cmp push add (bad) lret (bad) ljmp bound and rcll addr16 xor out push ljmp shll mov into and in push mov mov test push xchg orl mov adc mov (bad) ljmp fsubrs cmp cmp inc mov out fdivrs xor call ret ds cmpsb fcoml mov (bad) (bad) call scas orl sbb xchg push fdivrp call mov sub (bad) (bad) (bad) inc mov mov jns in shrl loopne mov fiaddl push mov fdivrp (bad) (bad) incl fidivr pop bound jecxz mov sbb dec das into or mov adc rcll add ficomp jmp sarl (bad) (bad) (bad) clc test movsb imul or push je sti insb cmp adc mov (bad) (bad) (bad) mov cld loopne push pop pushf rcrb mov fwait xchg repnz daa cld in icebp movsb pop (bad) xchg mov test sub push loop clc les mov popa ja jmp push sbb cmpsb out dec lock xor shr mov sbb leave xchg cmp (bad) inc dec sbbb in push cmp xlat bound adc push les xchg cwtl (bad) (bad) (bad) incl dec (bad) cltd mov cld daa adc xor dec xchg or imul insb pop inc (bad) (bad) (bad) call cmp adc gs push mov xchg shrb ljmp jns (bad) (bad) (bad) decl cs inc mov push sbb fsubs and stos bnd jb push aas pop fsts push sti into repz mov (bad) (bad) jg mov xchg mov pop pop mov xor mov jmp stc mov adc decl jmp xchg push fnop in or pop lds or je add (bad) decl lahf cmpsb popf mov lods xchg rep notl shlb cmp ljmp (bad) icebp and mov cmp fwait mov cwtl or in sub mov daa movsb popa jnp dec dec insb les inc scas sbb sar mov pop (bad) push sbb lfs movb or repz (bad) (bad) decl jno inc test mov mov pop mov stc pop mov (bad) jmp stos sbb xchg cli lea (bad) or mov (bad) aaa or cmpsl lock roll jp add (bad) (bad) (bad) (bad) mov dec nop cmpsb gs xchg hlt lods jecxz pop add (bad) sbb inc addb and xor ror pop scas cmp adc (bad) decl sahf ja mov shrl cmp jge aaa out out or or add jns cmp sarb or addr16 ror mov cmpsb cs aam js nop bnd or jmp ljmp jae into sbb js je test repnz push xor jmp mov (bad) (bad) push imul fisubl mov movsl cmc outsb cmp fidivl xchg pop mov test (bad) arpl dec mov andb decl cltd jle sub pop call lahf jmp ret fs (bad) (bad) (bad) jnp loope cmp fidivr dec movsl (bad) cld rcrb outsb sahf aam or mov int inc aaa xor mov push jnp lea out (bad) ja jl (bad) (bad) (bad) (bad) call cmpsb jo (bad) mov xor sbb dec jge outsb loopne pop aaa xor push xorl fcomip repnz or into jnp fidivr nop out fistl js mov call xchg jb push stos roll lock int3 jl jp mov inc dec adc (bad) mov and dec xchg mov sbb out fs mov mov leave jmp jo cli push (bad) mov cmp add push frstor push push pushf fiadd inc push enter pushl add ret imul mov and fmull sbb push je (bad) push popf out dec (bad) (bad) (bad) jmp scas fisubrl push incb cmp pusha sbb xor sar out and xor dec cmc sub out (bad) (bad) incl lahf add mov enter mov dec gs sbb or mov (bad) (bad) (bad) decl xchg mull loop lds sub mov xor fcomps mul inc movsl dec inc dec sbbb or (bad) (bad) cmp or divl mov sbb in (bad) insl shlb ds push pop and push pop sub lcall push rorb cmc leave add mov (bad) cmp stos xchg pop mov (bad) lcall lret xor xchg cmp xchg in incb jge mov (bad) (bad) (bad) fistl cwtl shll aad daa je arpl sub or dec mov lahf rclb pop in pop rcrb mov scas pushf add mov mov push pop xchg cs std push sbb stc or (bad) (bad) call scas lods jmp das ret lods mov int mov (bad) lret (bad) in iret and dec (bad) (bad) (bad) (bad) cmp movsb xor inc cmp aas mov mov pop pushf ds call sar ja and sahf xor sahf mov dec ret hlt inc cwtl cli xor insb loop pop xorl mov pop std (bad) (bad) (bad) fistpl xchg (bad) mov jno movsb mov subb gs loopne jne mov out lcall loope iret (bad) (bad) lcall pop gs pop mov jle (bad) xor sbb add cmc pop loope sarb enter mov sbb decl dec fs push sub pop pop or inc or mov (bad) (bad) (bad) (bad) fcoml xchg fidivrl push pop mov jmp aas arpl int jbe movsl mov mov mov inc push jnp mov (bad) (bad) ljmp lea out and push fnstcw movsl xchg jae fnsave (bad) dec movsb sub jo in into pop ficom rcrb jns cld cmc pop test jle sub push shll add push push decb xchg pop insb call (bad) mov xchg sahf test dec es (bad) mov mov rcr pop mov add mov test pop data16 pop and cmp sub xor sub mov (bad) (bad) (bad) incl scas mov push mov loopne jg mov inc enter push xchg mov fwait (bad) pushl mov outsl pop mov pop sub dec lds in outsl mov (bad) (bad) pushl (bad) dec scas adc cmp mov adc js and scas test cld aam ret push pop dec adc pop movsl addr16 int3 je int3 out test cmp sub jp jae jnp mov jns fnstenv iret popa inc mov mov cmp mov xchg push pop (bad) (bad) ljmp shrb addr16 cmpsl stc popa std fisttp pop cld mov ljmp clc mov adc nop dec sbb (bad) (bad) cmp bound shrb ss inc mov dec ret ficomp xor jg (bad) incl cmpb jmp sti add xchg sbb pop (bad) (bad) (bad) incl (bad) mov mov scas dec subl cmpsb or cmpsl push fisttpll xor push cli (bad) mov sahf in (bad) xchg shrb imul mov gs (bad) cs jmp jo mov loop scas cmp in out mov and xor mov in stos or (bad) pop adc ljmp imull pop fdivrp decl fsubs stos adcl xchg mov ds mov std ljmp mov int3 dec stc clc xchg jne lods mov inc pop xchg mov in lcall mov pop mov mov cltd jecxz add cmpsb pushf call mov xor pop mov dec pop jne call sub dec and icebp enter movsl test pop xchg out mov jmp xor js mov lods jae mov pop add xchg mov pop and mov (bad) in inc jle sbb out ja (bad) push jae jbe aas push or in cmp pop adc jmp call fdiv inc xchg notb sbb mov jns xorl (bad) (bad) (bad) clc jmp adc clc arpl (bad) stos daa ja xchg jle in scas (bad) (bad) (bad) cmp je sbb or xor push aaa sbb inc decl pusha out fildl (bad) (bad) inc cmpsb jns rcl in clc ja outsb outsb addr16 stos lods or mov pop sbb mov fdivrp int adc lock iret cmpsl xchg pop cmc decl stos push adc popa mov pop lcall and (bad) ljmp mov add mov test mov sar es movsl jmp dec subb mov pop mov xchg fs jns jo push popf xorb push or (bad) ljmp (bad) test jo and repnz and movsl mov mov (bad) (bad) jmp pop cltd lcall lods mov push cli inc test jmp sahf (bad) js popf sahf mov push mov jle mov mov mov fs enter (bad) ljmp jae (bad) int3 jg pop jge faddl (bad) icebp jo cli fs or mov pushl sub cs fisubr xchg mov js push jno in stc xchg repz (bad) (bad) pushl jg in pop or xchg mov or shlb sar (bad) (bad) jmp dec mov mov fmul push or (bad) push mov call icebp pushl jmp mov gs mov lret lods mov call sub outsb adc inc xchg jg cli (bad) mov (bad) (bad) nop and jne sahf inc xor cli (bad) call fucomi mov jne lock mov pop xor lret (bad) pop pusha add xchg jge hlt push stc jmp jb jl push pop jl jp mov (bad) (bad) ljmp pop ret mov sub jae lret inc scas xor popa xchg sbb lcall xchg jp mov outsl mov mov (bad) iret pop fcomp lods adc jns fisttpll dec (bad) lcall or xorb jno pushl mov scas jmp and adc adc push test or cltd or inc into sbb (bad) jne (bad) (bad) (bad) inc out repnz xchg cmp ds add push (bad) jo cmp dec (bad) rclb scas (bad) (bad) (bad) (bad) out (bad) xor inc outsl mov in fisubl dec dec out pop jo outsl nop (bad) fsubrl movsb test lods cmp shl sbb cmp jecxz push in aaa cmpsb adc sub inc das cmp bound lods aaa (bad) (bad) (bad) incl daa mov jno xor add mov xchg lret mov es mov pop push add push push pop jnp mov (bad) (bad) incl jo adc imul ljmp xchg pop jmp xchg xchg inc sti inc subl les jg dec lods mov xchg fwait in cli ss (bad) (bad) incl decb mov imul ja mulb aaa lret dec xchg (bad) (bad) (bad) call inc lret jge sub fdivl aad xor jno or movsl xchg int xor cmp (bad) (bad) call cmp pop add insb dec xchg idiv mov lods lods cmpb packuswb jmp inc (bad) sarl pop sub (bad) decl test test lock pop movsb pop pushfw cmp pop adc lods and push leave mov scas out mov sub ljmp inc rorb (bad) enter cld mov mov (bad) and std (bad) call ror cmp push lds inc or xorb mov xchg mov sub mov popa dec loope cmpsb dec stos (bad) (bad) (bad) call adc mov xchg lcall add insl fdivr ret clc cli ret call cs jecxz pop js ja or adc mov ja mov je in insl xlat lret dec push sbb cmp add je lcall lds lock fdivr mov jge js popf mov lock decl (bad) fldenv in dec cli pop (bad) test push sti cld pushf (bad) call cld push pop cmp pop stos and jb add (bad) (bad) jmp mov mov pushf or or pop push shrl fisttpll sub mov xchg ds push add sahf and (bad) (bad) jmp sbb sahf stos mov clc mov or fldz add sub or sbb inc inc mov aam pop rorl cld adc jnp jae lcall decl das imul xchg mov mov sub es sub (bad) call aad dec sbbb adc cmpsb cmp ja pop cmpps (bad) (bad) (bad) call stc pushf int3 popa jmp sub aaa lds test push pop and lcall (bad) push data16 popa sub push (bad) pop scas mov test dec shrl (bad) fild jecxz pop xchg mov add loop (bad) (bad) mov ja retw dec cmp cmpsb xchg mov je addr16 inc sar dec notb lock mov xor sub outsb push sub jnp jno mov std (bad) incl lds lea dec and fcomp je mov jmp clc xchg mov out cmp (bad) iret aad mov ret inc in in repnz add (bad) jg sub pusha mov jb sbb (bad) (bad) decl jns mov dec arpl dec ljmp add (bad) call mov fwait jb (bad) sarb cmp push add push std dec dec push shrb pop clc lods push cs decb jg loop push xchg js jg lock xor pop mov and dec jp mov dec pop mov pop xchg bound outsb (bad) xchg cltd jp sub (bad) jmp mov xor xor mov leave repnz (bad) jg ds movsl inc mov cmp leave (bad) xor lcall sahf test fimul mov adc (bad) (bad) (bad) pushl es int3 adcl incl mov and push sbb je (bad) jne cmpsb (bad) (bad) (bad) decl imul fist das cmp fsubs test pop and hlt (bad) (bad) call into loope btc cmp jmp push imul cmc les sar pop mov mov xor out mov mov lret xor cwtl loope aaa stos mov (bad) (bad) fbstp movsl aam cwtl mov sub leave inc imull (bad) lret call and das add decl loopnew fsts mov pop repz (bad) jg cmpsb test jno pop lods inc lea pop outsb mov loop call (bad) (bad) (bad) jmp ja icebp mov es pushf loopne call sti (bad) jl aad mov out jb rcrb leave adc sbbl adcl and into and (bad) (bad) (bad) mov out cmp inc scas flds outsl test inc mov push xchg enter (bad) scas (bad) dec mov adc add in mov add repz std pushl xlat adc leave fsts (bad) addb inc test ds (bad) pushl fidivl sbb pop xchg mov push notl cmp (bad) aaa mov add js or aas fcomp int3 jb stos pusha jmp ds lahf rcl out push dec (bad) (bad) (bad) lcall inc pushf or loope cmp imul outsb xor push mov sarl stc pop cmc (bad) decl dec lret xchg mov mov jne sbb mov imul mov stos frstor jge xor int sub (bad) incl jle test pop jns cwtl add je stos xor cmp mov mov ljmp popa jecxz (bad) lea lret adc cmpsl and (bad) (bad) ljmp movups jg adc add (bad) push mov movsb (bad) in pop outsl lds mov dec test (bad) (bad) call push je fisubr pop outsl jecxz mov push pop or sbb lds addr16 decl adc std popf loop and int3 out and push sbb sahf int3 lcall push and xchg xchg xchg mov (bad) mov repnz push outsb stos ljmp incl inc push fdivl ss jp bsf stos sarb add or ja fwait xor mov mov mov int (bad) (bad) (bad) stc sbb xor xor mov xchg xchg andl inc xlat mov jbe cmp (bad) (bad) pushl dec jle sbb das mov call mov lahf movsl add (bad) (bad) (bad) ljmp cmp push and dec hlt lret loope adc lret dec hlt rol stos (bad) or addr16 movsl add (bad) mov sbb ret sub and ds ds ljmp leave clc pop or cltd in ds imul mov flds mov lea test jge cmc pop std test hlt mov jg (bad) (bad) decl outsl xor pop xchg outsl mov or sub insl leave test popf mov xor nop call ret outsl out mov fmull (bad) (bad) push dec mov mov lcall inc and adc je outsl cmovnp pushl or xor fiadd (bad) stos dec std mov and repz mov (bad) (bad) inc jecxz lahf dec pop gs das enter enter jp pop jno aas repz push aaa aam je (bad) (bad) ljmp add (bad) push clc pushf in adc js push mov mov clc adc mov cmp and stc (bad) enter sbb rolb cmp mov loopne mov and dec fdivp (bad) decl sub jns xchg push dec mov push pushf adc cmp (bad) mov mov inc aaa dec scas push in (bad) rolb (bad) (bad) (bad) lcall push mov iret iret cmpsb int3 leave xor das movsl popa sbbb movsb pushf popa ss and xor (bad) call xchg cld repz xchg push ljmp inc hlt fs mov pop jmp mov ljmp sti nop pop fsubp jb scas pop inc sbb (bad) (bad) (bad) mov nop push xchg add inc loope clc xchg mov sahf dec rclb (bad) (bad) (bad) call addl loopne or in sub mov hlt cmp sbb (bad) (bad) call pusha jnp (bad) and in insl and cmp sti std sub cmp xchg leave (bad) (bad) (bad) call lds sahf ret dec aad mov mov (bad) fdivrl hlt dec jle xchg lea (bad) jg sub popf xor pusha sbb fwait insb lods jg mov and mov sbb mov cmpsb and sbb jae pop cltd aam (bad) (bad) jg call mov sahf mov sahf mov push jne loope mov inc insl add (bad) (bad) incl scas push inc and lret out mov xchg inc dec xchg push je push push (bad) pushl int mov pushf and sahf shl pushf xlat pop lret mov (bad) lcall test sbb push das popl mov arpl pop leave sbb or (bad) (bad) (bad) jg test lea aaa cmp repnz sub adc or pushf imul into cmp lahf jp call mov (bad) fsubrl push fs pop and out jp add jns sbb imul mov nop inc cmpsl out sti pushf and inc push aaa pop mov and fwait cmp aad (bad) ljmp out jp ss cmp addb push push mov mov jbe (bad) (bad) jg clc push jnp push ljmp xor push push call mov icebp (bad) ljmp sub popa lods bound aaa lcall test push xchg push aaa int3 je out (bad) (bad) call inc clc fisubl or or push push outsb push sub ljmp mov inc cld (bad) jmp movsb add insb mov enter push cmp aaa jp xchg mov movsl ds jecxz cmp fcompl (bad) (bad) (bad) incl ja loope sub xchg or pop push outsl xchg inc mov (bad) (bad) (bad) (bad) fild popf cs or cmpsl (bad) xorl mov dec adc leave das (bad) (bad) (bad) ljmp mov sbb andb push sbb fwait outsl mov mov sahf mov pop (bad) (bad) fbstp jge dec jmp test fisubrl out add ret (bad) lcall ds cmpsb pushf mov mov xchg movsb mov (bad) mov mov out (bad) adc add sbb fs incl ljmp mov arpl mov (bad) adc sbb imul and decl out (bad) loope inc sub sbb pop lret ds je (bad) (bad) (bad) pushl daa xchg fisttpl pop cmp incb sbb fstps pop rcrl cmp (bad) (bad) call add mov add enter xorl mov fnstenv rorl (bad) (bad) lcall jl nop (bad) fldt jmp and sbb pop int3 inc loope jae lahf add outsl mov andl scas push cmp shrl mov push (bad) (bad) out cli insb cmp scas xchg adc fist xor movsl faddp xchg je add fs add fwait jge fbstp aad push les out stc (bad) (bad) jg push lret xchg adcl cs out es gs mov inc call ret sbb dec mov (bad) (bad) pushl out or push mov or or dec lea movsb lea push cli and inc (bad) call lret mov xor dec pushl add pop xor cmp xchg mov pop out xchg fiadd sbb inc (bad) ja outsl in push movsl sub movsb or (bad) mov or fstps add lds (bad) decl push xlat push push aas std and sbb (bad) out mov iret mov sub dec or ficom cwtl sti dec or out js pop sahf stc roll decl lds inc das ret (bad) mov push and nop outsl (bad) push cmpsl mov push mov jbe lcall ds adc call mov (bad) (bad) pushl adc jle xor adc adc es mov lcall (bad) (bad) (bad) fucomi cmc nop pop adc pop add push aaa xchg pop cmpsl addr16 pop adc or mov dec xor dec lods data16 push fidivrl repnz inc decb (bad) test out xchg js push push sbb pop mov xchg ja pop push jns (bad) (bad) (bad) mov arpl mov dec aam push xor pushf daa repz xor dec (bad) (bad) (bad) (bad) jle popa dec repz stc or inc out outsl sbb movsb sbb mov icebp and pop lods aad in pop pop mov sub pop mov stos movsl mov mov and cmp daa das into cli int3 or mov call loopne nop sub bound fiaddl sub es sbb push xchg (bad) cmp adc cltd scas ds add ljmp inc push test rorb cltd cli and (bad) xor sbb xchg xchg add xor repz insl les push pop mov pop inc (bad) (bad) (bad) pushl std stos fistl leave (bad) fld icebp lcall lahf loope or fiadd xchg fwait inc cmp (bad) (bad) (bad) call pop xlat jae jo inc stos mov pop ja andb cmp sub icebp stos test call stos inc pusha mov (bad) into test ds scas std (bad) out cli mov into add (bad) pop loop inc pusha xor outsl dec pop je rolb subl xor imul push ljmp (bad) call (bad) cmp mov iret ret cmp push lahf mov test jge je lcall (bad) fcoml (bad) mov test push dec push out ja in or or xchg xchg pop inc push sub out or sbb fnop sbb lods xor (bad) (bad) ljmp in fs sbb data16 popf aam aam sbb jns mov mov (bad) (bad) mov xchg incb mov insl into scas in (bad) sti rol test xchg dec adc (bad) (bad) (bad) pushl jns pop imul xchg and sub (bad) unpckhps test stos je (bad) fcomip jmp aas movsb mov in mov cmpsl pop jg lods adc repz fwait mov jno dec (bad) (bad) (bad) mov (bad) jb (bad) loop mov mov in cmp jo push cld jl mov (bad) (bad) (bad) lcall dec lock pop adc mov out scas jl adc add adc pop (bad) (bad) (bad) incl sbb or gs jb jns xor sub push fnstsw cmp stos lods dec pop addl out inc jl dec or (bad) call cmpb shr xor push fmul std push out mov adc push dec pop sbb push xchg outsl mov (bad) (bad) incl add or fs and mov sar test (bad) call lock jae arpl cmp (bad) js stos aas (bad) (bad) (bad) call popa jns pusha pop cmp sub dec lea mov xchg push lock (bad) (bad) (bad) dec ja xchg xchg mov cld shll and xchg call jno fisubrl fmul jno sub outsb repz sub add cmc fdivp push (bad) in (bad) jg nop xchg fcoms jg adc add xor imul rorb adc (bad) (bad) (bad) lcall sub stc subb dec je push lret imull rcl and test mov (bad) (bad) (bad) mov inc sub rorb cmp add mov jg xor and stos insl loopne pop jle loopne mov (bad) (bad) incl jo mov fwait pop fsts sbbl adc lods call call orb loopne jae mov ret pop or mov movsl (bad) (bad) (bad) sbb (bad) sub adc les sbb push pop pop sar mov (bad) (bad) (bad) decl or ja and mov mov adc xchg aad loopne mov (bad) incl mov mov push js (bad) xchg push cmp lock cld (bad) (bad) aas aas and pusha scas movsl or or fs lods cmc mov loopne,pt adc in hlt mov push in imul mov fdivrs cli cmpsb mov bound cmp (bad) lcall in sarl (bad) push movl (bad) lret lds les (bad) (bad) (bad) (bad) jmp add test push (bad) repz xor xchg mov (bad) mov std (bad) jmp push add ror jecxz adc push je cmp iret into lahf (bad) ljmp (bad) xor jbe inc xchg arpl rcll test xchg jle out push int3 jns adc (bad) lcall outsl js jmp fisubl fucomi pop adc aad loop icebp cmpsl mov (bad) (bad) (bad) (bad) mov jecxz jl xchg arpl jbe and lods push xor dec inc cmp or or (bad) (bad) mov or sub dec xchg out xor push pop (bad) (bad) jp clc (bad) (bad) (bad) fiaddl fsubrl mov lcall mov dec stos lods frstor pop popf hlt nop mov cltd jl push mov cmpsl fbld ljmp iret jae xchg (bad) adc cmp (bad) (bad) jmp cli icebp cld mov das pop adc call fbstp andl mov popa push ds outsb mov inc or cmp jmp mov and shrb les test push mov ljmp push mov mov loop jle jge nop stos mov mov push pop cmpxchg sar mov jns leave sub mov add repnz aam sbb stos mov dec cli std lcall and test add xchg xchg pop and xor mov jg inc ds fscale clc push dec loopne nop mov ja mov cwtl ss leave (bad) loopne jae xchg (bad) (bad) (bad) incl xor inc rcrb sbb adc sbb pop icebp stos cmpsb sub add pop cmpsl cmp sub jg cld ds lret fnsave cmc mov ror (bad) (bad) ljmp add or ficompl cmp test sti rcrl mov cmpsb int3 imul cs pop imul sub ja (bad) ljmp mov idivb mov mov frstor (bad) (bad) (bad) lcall add test lds nop pop les sti out xor imul pop inc (bad) (bad) (bad) push icebp cmp mov int3 andl mov rol sub or ret stos cld lea icebp neg pop movsb pop cld imul mov sub xor xlat mov iret test lcall cltd inc push and dec repz and (bad) call jae (bad) gs jg das call xchg setle sarl mov add push (bad) (bad) ljmp push push lea outsb and add shrl xchg ljmp dec pop mov sub lods ljmp push jbe push out dec adc or sbbl ds xor jb (bad) (bad) (bad) jns outsb pop inc cmc aas xor lahf sbb inc aaa mov pop mov jmp mov push jns sub inc mov (bad) (bad) mov mov aad fxch lret shll ja xchg rclb scas cmp inc (bad) (bad) (bad) (bad) sti mov mov popf into cmpsl or mov dec push cli je mov inc xor push add sahf jle push sahf jns (bad) (bad) (bad) jmp add imul push stos and or mov scas fs ret push inc mov (bad) (bad) dec sub cmp iret and and and loopne into int3 lds dec mov cltd or lahf push push sub shlb mov out or imul jno add clc dec int3 push (bad) sub sbb sbb (bad) (bad) (bad) push push push daa pop into andl push jp or and xchg (bad) (bad) (bad) call inc frstor hlt (bad) sti adc aas (bad) add (bad) add stos adc (bad) (bad) jmp int3 js leave outsb pop rorb ret fiadd inc and mov (bad) (bad) decl clc dec sub or push push mov cmp js mov decl add mov jmp call addl lds outsl idiv jge,pn dec je adc int3 and popf mov sub adc (bad) (bad) (bad) pushl jge je gs leave mov imul jg rclb (bad) call and (bad) jne add hlt lret inc aad dec jbe or das dec and (bad) lcall jae xchg xor pop sarl das es mov push call cmc and shl push pop popf mov pop or (bad) (bad) lcall sub sub inc jecxz insl or (bad) push mov ret lock xchg pusha mov rcrl call mov lcall ja sub dec in dec nop add daa and clc (bad) jmp bound divb dec xor fwait add aad add (bad) (bad) dec add in xor (bad) std inc jne adc int sub adc lea and and imul dec inc fistpll xor dec (bad) (bad) (bad) jmp (bad) data16 jg sub dec mov add enter pop je mov pushl out mov (bad) mov jl fsubrs push inc addr16 int xchg lcall ljmp es je lods gs pop sbb mov lcall (bad) decl or jg sti push adc push pop inc jge addb jg jg add push dec jle sbb jae,pt cwtl std (bad) mov inc cmp push add sub flds hlt (bad) pop push xor cmpsl (bad) pushl ds and add lcall movsl xchg gs jle addl push jno and or lahf lods jle (bad) stc jle rcll stos ss (bad) (bad) (bad) (bad) movb xor out test xor push fwait popf push pop pop and inc gs (bad) (bad) (bad) ds js pop mov adcl aaa mov repz mov jmp xchg (bad) in mov out xor rorb outsl cmpsl test iret cmp jmp (bad) (bad) (bad) pushl push dec shll loope cmp sbb mov and jge aaa xchg mov mov sbb movsl lret pop or and dec scas jae pushf sbb ljmp mov test (bad) ljmp (bad) mov fstpt jecxz (bad) ljmp push mov jecxz lcall ds mov mov mov (bad) ljmp adc popa pop push push pop cmp gs (bad) jg subl loopne xchg cmp mov shrl xor ret incb (bad) pop or pcmpeqw idiv sbb js mov mov mov cmp dec (bad) (bad) (bad) cwtl mov (bad) jns shrb xor fnsave xchg cmp test push push decl pop inc cmp inc mov jmp push dec stos out mov or (bad) jmp and es insb shl loopne pop jg mov add lret xrelease sbb incl mov stos push fs jbe ror jg lahf fild mov enter ds push cltd inc add add (bad) mov (bad) sbb sub ds int jo push fcomps (bad) (bad) (bad) call mov in adc frndint xchg insb out xchg xchg test stc hlt loop lcall out dec in imul hlt divl xchg repz test ret add decl push in mov mov pop test or add ds das (bad) lcall enter (bad) lret notb dec insb test (bad) (bad) (bad) (bad) cmp cmp insb arpl mov repnz mov (bad) dec cli (bad) cmp jb aad cmp ret push ret sysexit push dec mov cli sub xor mov pop stc mov sbb adc adc popf push pop js inc loope int3 int cmp cs inc xchg jge nop push shr sbb (bad) jmp stc lods sbb jp cmp xchg push jno enter (bad) (bad) in fwait rolb jmp cmp inc hlt lahf js shll lock xchg out dec fcomip (bad) lcall jo movl mov inc (bad) sub xchg dec xor fsubl scas and and add sbb jns or pop add add adc rorl push rolb add sahf push inc aad xchg push sbb push (bad) (bad) mov pusha pop aaa notb inc (bad) mov repnz lods push mov (bad) pushl mov pop or fnsave adc ljmp decl gs mov mov dec mov push in mov jle (bad) (bad) incl stc inc lret stos cmpsb sbb mov mov pop popa or xor push repz (bad) (bad) out push inc cmp cld mov test (bad) (bad) ljmp sar int3 inc data16 sbb jle xchg fs add mov fsub mov sub push incl mov ds cmp sub pushl xor repnz add ds (bad) (bad) jg imul in push push and fnop cmp push (bad) mov (bad) (bad) call push jge fadds (bad) mov xor ja das hlt lcall std dec lret mov xchg and push js imul incl mov pop jne jno mov inc loop lods xchg aas inc mov jl in xor (bad) jmp mov mov jge iret adc movsb inc push out (bad) (bad) incl cs mov unpckhps dec daa sbb test lock push fistpl dec pop (bad) (bad) (bad) (bad) ljmp inc dec xor sub xor daa or je mov out push sti (bad) (bad) inc xor sbb push loop repnz insl and dec dec or in add sti (bad) cmp jg addr16 test pop jmp test jl out je out jg mov jge sub je cmp mov ss (bad) mov mov or cmp jmp (bad) (bad) push pop dec movsl and cmpsl xor mov ficomp mov bound std int (bad) (bad) call jns adc fsub push imul scas cmpsb (bad) jl js and fadd and insl loop gs mov inc push in ljmp shl push cmp iret mov mov fwait cmp sbb (bad) fistl call inc sbb push push pop sbb in pop sahf cmpsw or fldt add cld xor xor shlb or mov adc jp (bad) (bad) (bad) jmp pop rclb push dec xlat std js mov and pop lea fldenv inc clc (bad) decl mov xor or mov push pop ds jmp sarl and rorb xchg (bad) xor cmp pushl mov roll dec xchg and pusha pop sub pop dec sbb data16 ljmp ds or jne imul popa xchg (bad) jg xor sub push mov mov xor add icebp cmp jg insb movsl mov sub pop and pop inc and subl xchg gs mov (bad) push dec loop call adc das mov mov adc (bad) pushl fidivr pop (bad) lcall push mov hlt call lods inc call aad mov add (bad) (bad) ljmp pop and xor mov push cli mov adc lods jnp mov shrb jl int3 cwtl and lods jo inc loope cmp pop xorb aad cmc jmp push xchg mov clc xchg cmp dec ljmp (bad) lcall int3 icebp divb jns cs js mov (bad) (bad) (bad) incl mov xchg add into and in fnstsw fiaddl xchg xchg xlat or dec (bad) mov lds pop (bad) dec adc push cld pop aam lahf (bad) (bad) (bad) mov mov out sbb or xchg or adc (bad) (bad) (bad) test mov data16 add addl notb (bad) (bad) (bad) pushl repnz inc ret (bad) inc mov lcall outsl sbb scas pop insl sbb mov (bad) jg pushl fiaddl pop popa jo outsb gs aaa cmp mov pop sbb jmp aam icebp inc inc inc test and push lcall decb pop adc daa push cmp aam fisttpl mov (bad) (bad) (bad) jl pushf mull insl sub loope (bad) ja imul mov loopne mov pop (bad) (bad) lcall or xorl jno pop jae push xchg stos or push add (bad) (bad) fistpll idivl mov fs outsb rol inc scas adc addr16 or inc sbb (bad) (bad) incl sub add sub loopne push mov pop mul aam pop adc push pop pop inc loopne (bad) mov mov fnop jp flds jae call mov push orl dec idivb fs push jg arpl insl daa lcall (bad) (bad) decl pop jmp loop out (bad) dec inc adc icebp pushl sub aas push xchg (bad) lcall arpl xor fdivrp dec leave clc sbb aam xlat cld fs clc (bad) ljmp pop lret aas mov (bad) (bad) call mov loop pop ret ja dec inc ss (bad) mov xchg inc mov inc jns (bad) (bad) jmp pop out mov ljmp mov adc cmp mov insl add xchg sbb mov adcl sahf inc in pop das cld mov inc aam ds sub ret popf insb inc roll aaa lret (bad) mov push loope loope cltd or jno jge and sub (bad) lcall cmp dec mov test lea push lods insl stos popf xor mov (bad) jg jmp imul sub xchg cld ret push cwtl fimul scas or ljmp into in inc adc mov cmp adc sub pop add lds (bad) (bad) (bad) (bad) cmp inc (bad) dec sahf wrmsr bound dec jae jp insl push sar ret popl xor mov (bad) mov repnz mov (bad) mov bound outsl sbb cs sar (bad) (bad) ljmp shll dec xchg sti cmc cmpsl sub pop inc pop xor xlat rcrb mov push clc (bad) (bad) call adc fadds sub in lods inc mov into mov lods push les movsl mov jno std pushl xchg mov daa stos add mov mov (bad) call repz int repz mov adc in cmp and outsb fcoms (bad) (bad) (bad) ljmp mov stos test inc ret in add std cwtl lahf repz xchg mov (bad) inc cld scas lret dec mulb mov aaa xor loop ror mov lds out std (bad) (bad) mov clc inc dec mov xchg cmp or ljmp jno adc (bad) ljmp xor rcl xor bound sarb jne pop stc imul push dec ljmp mov lea shrl and data16 (bad) (bad) mov push lret cmp lret int pop mov inc push mov xchg mov dec (bad) call idiv enter scas insb or hlt add sub xadd lahf pop or in xchg (bad) (bad) decl cwtl sub cld adc mov and hlt (bad) mov xchg paddusb xchg sub adc fisttpll jle mov (bad) jg ljmp cmp sub test lods lds sbb cmp (bad) pushl xchg sbb add repnz jge xchg xchg xchg xchg (bad) cmpsb lods add add add test push popa fisubrl sar (bad) (bad) jmp inc cmp pop clc fistpl sbb or cmp sub inc pop (bad) xchg decl (bad) (bad) (bad) ljmp mov repnz insl aaa adc cltd out add mov out gs or inc cmp ljmp pmaxub fwait aam sub pop (bad) ljmp mov jp cmp push pop or aam std out sbb (bad) sarb decl xor (bad) (bad) lcall mov adc sub pop ja push mov out cli mov cmpsl (bad) pop mov push sbb jns adc inc mov inc dec cmp les cwtl sahf pop loopne (bad) fucom jbe sub sbb mov subb icebp sub dec sahf or lcall mov inc adc ds cmp sti sub iret mov jg cmpsl (bad) outsl rorl sar sub jae stc xor jo adc dec mov (bad) dec mov mov or inc or mov aaa push pop ss les cli cmpsb (bad) (bad) (bad) inc shr aad push aas push push adc rcrl fstpt sub lods (bad) (bad) (bad) ljmp sti push cmc cmp (bad) mov adc cmp jb or (bad) dec cmp (bad) (bad) jmp adc xor mov imul or (bad) push adc rorb or imul sbb push add inc mov test add pop xor (bad) (bad) ljmp xchg test xchg cltd movsl xlat xor or scas mov mov fidivrl ljmp pop sti out sub (bad) (bad) repz push insl loope into pusha cmp fidivrl jae pop cld (bad) mov push pop std stos inc xor adc test sbb int3 pop dec (bad) jl jg imul adc in jno jns mov sub movsl outsl sub xor xor ret fstpt push popf or inc movsl sbb cmp fidiv jl stos sub pop push test (bad) cmc pop lea pusha cld add jmp sbb jnp,pt sbb (bad) jmp out rolb inc inc leave mov inc dec xor (bad) (bad) ljmp push (bad) sbb fcomps jo pop (bad) dec push sar push addb outsb insb loopne inc sbb xor in ret shlb (bad) (bad) (bad) dec cld and push movsb dec (bad) stos in pop xor fnstenv je clc inc leave cmp add pop mov lock sub pop mov (bad) (bad) ljmp js test mov test rcrl jle aad das into cmpsl lods loope mov aam js pop pusha adc mov lcall aaa dec pop daa add loopne repz xor ja mov push jg cmp ds in in aaa mov out adc call jbe bound je lret cmpsb inc sub push cmp std (bad) mov or adc les sahf pop jg addr16 push jb push cmp outsl clc fdivrs xor mov repz cltd jb gs (bad) (bad) call flds jne push stc jne scas into test pop pop jmp notb cld es jmp or orl pop mov es sarl dec xchg xchg mov imul (bad) loopne xchg bound lods push lret arpl cmp push cmp sbb fucomip pop jno int3 or dec add das (bad) mov lods fdivr (bad) xchg nop fwait negb jmp pop xchg test add add or movq pmuludq popa pop sub add mul loope (bad) (bad) decl hlt hlt lock aaa mov mov and fsubrl pop (bad) push dec mov cmp (bad) (bad) lcall jmp lret jnp xor scas cs insl sbb jb or pop int3 jp jmp sub insb daa je xor inc call (bad) mov ja cmp adc test inc xchg (bad) (bad) jg sahf adc mov push add sub mov adc cld call cmp xchg xchg ljmp ds jmp mov insl insb sub pop int3 cli hlt cwtl out cli call ds xchg mov or adc pop loope in pop fpatan and pushl sarb or jns leave mov push int fcoml xchg (bad) (bad) mov dec test jl lahf jmp push ror xchg mov dec int mov (bad) (bad) (bad) call test repz idivb or stc fsubs xlat enter cmp mov jne ret inc out in sbb mov aas in (bad) test mov (bad) pushl mov jmp dec gs xchg mov cmc mov xor lock (bad) call loop jbe out jge (bad) ror sbb into das xchg test pop data16 jno push cwtl int (bad) call data16 mov mov mov push add test (bad) push mov sar cmp jmp xchg sbb xchg xor (bad) out pop push out fildll (bad) (bad) ljmp push mov das out fbstp ss inc mov jnp dec mov cmp scas sub mov (bad) (bad) (bad) fcoms (bad) repnz ret mov call les stc ja jl (bad) (bad) fistl sahf popa xor lahf cs mov pop (bad) incl aas push scas push clc mov pushl fcomp shrl dec or inc xor (bad) (bad) decl dec hlt adc lods popf repz cmpsl stos mov add addl and add or or sub pop insl and xor bound popf adc ss call inc inc or out xchg pop or xor cmp add ds adc rol ret xor mov jnp popa ds nop ljmp xchg cli mov jg mov or (bad) (bad) pushl mov (bad) sub in pop scas imul cmp adc (bad) (bad) (bad) pushl jmp sbb add (bad) loope adc cmp dec out movsl andl daa shll (bad) call inc pop aaa lahf xor loope loop mov mov jmp push pop out ret xor call sbb in int inc cli jmp mov pop movsb and xor mov jmp test jg cwtl clc push sub ret mov cmpsb lock (bad) jge mov jb into fbld push stos out (bad) (bad) call push add xlat adc mov mov pop (bad) (bad) (bad) call or out xor sub cwtl in xchg aaa adc repnz inc or (bad) (bad) (bad) inc cltd call shlb int3 lcall mov je push rcll (bad) jmp aaa outsl pop xchg loope cmp jecxz inc shl cmpsl xlat insl sub sbb mov movsb xchg mov (bad) fcomip dec push arpl loop sub in lret popa dec mov cld (bad) pushl dec shl jp arpl xchg mov shlb jmp and xchg mov ds and ds lret xchg (bad) (bad) jg jp test xor aaa pop test adc pop in ret loopne jo fisubl inc (bad) (bad) (bad) inc aad out jo push inc mov aad dec fldt xor dec mov dec xchg aam sbb jno std jg decl hlt fisubrl sbb mov js popa enter (bad) jg add mov pop imul daa std (bad) (bad) (bad) decl loop jo data16 jnp xchg lds push adc int sub vmread loop,pt pop orl sarl stos popf mov push mov add jg mov xchg dec sbb pop clc in jbe cld (bad) (bad) (bad) lods mov adc pop push (bad) sbb sbb xlat imul mov ss (bad) call pop dec shr push popl xchg mov lret hlt push fs ret or push mov pop popa adc pop (bad) sbb lods dec push xchg ret sbb (bad) (bad) decl mov adc scas sahf pushf lods or and push cmp pop pop add ja and and incl pop negb push leave sbb fldenv jne push mov movsl int cmc push cld scas daa aad rolb sbb (bad) mov add mov insb adc mov sub sbb (bad) aas adc push sbb lret fimul es push inc cli incl jbe jne bound in xchg outsl add pop xchg cmp xor sti mov scas jmp jge sub fidiv in mov or (bad) fist pushf ss xchg das (bad) (bad) (bad) pushl cli push jl adc lods push imul mov nop (bad) lea insl xor nop test (bad) (bad) jmp add jmp adc pop js das je add idivl hlt (bad) sar (bad) jg dec mov mov (bad) mov mov cmp mov adc push stos add nop test (bad) (bad) (bad) jg cmp cmpsb popa sahf or (bad) out cmpsb icebp sub mov cmp dec lret jne mov movsl push pop (bad) (bad) decl int3 popf dec (bad) iret daa ss (bad) js leave (bad) rcrl clc xor dec test ljmp cmp into pop pop loope addr16 dec bound ja outsl insb insb ja test hlt (bad) ficomp ss in (bad) cmp das mov call push jmp push stos (bad) push out xchg lock adc inc adc iret xchg ds rorl (bad) (bad) (bad) (bad) jg mov and std adc jmp fisttpll add clc pop rclb cli lods sti into dec arpl (bad) (bad) jmp (bad) gs mov or test xor adc test idivb mov and enter and xor std hlt cld pop scas (bad) (bad) (bad) dec jecxz xchg faddp mov add aam imul sahf cmpsl cmp push ljmp call in lods adc cmp push jg xor xor sar ficoml cld adc jmp mov inc lcall pushf dec (bad) xchg push mov sbb cmp or mov (bad) (bad) incl les (bad) fst and push imul jbe insb xchg sbb repz bound push aaa ret loop adc (bad) incl jno ret stos loope jge fwait xlat popf enter xchg jnp outsl clc pop push sahf out push xchg incl pop xor (bad) lcall out dec push xchg jnp (bad) in cmpl xor lock lods cmc mov (bad) (bad) ljmp int3 xchg mov dec mov mov jecxz cmp movq sub lock insb cld jle andb mov loope (bad) jmp and sbb into fs scas jle out push push adc sub and je xor aaa cld mov add repnz addr16 lcall mov pushl xor mov enter adc loopne iret mov push mov ss (bad) (bad) call das inc addl stos aad fdiv popa out stc xor cmp jnp in mulb xchg (bad) fistpl push jns adc mov ret adc push (bad) decl or pop enter in sti test (bad) push mov push inc xor jne jg ja outsb arpl cmpsl into imul jo mov jae jmp push mov int push (bad) (bad) pushl sti daa xor jge es and pushf das inc xchg xor mov xor sbb (bad) in decl clc pushf (bad) mov cmp rorl rorl rorl dec cld mov lods lcall les xor mov adc insb push lods dec icebp in aad je sub aaa mov sar (bad) (bad) call mov pop jge xor lods jno xchg js push mov or (bad) adc std stos jae or sub stos orl (bad) xchg mov jp or decl mov pop adc mov jmp je bound scas or (bad) (bad) ljmp add add jecxz aad loopne ja add (bad) xchg mov pushf je jno (bad) (bad) pushl cmp les jge fcompl in repz popa sarl ja lahf jle jb aas adc add (bad) (bad) fidivrl and or sahf scas test lods (bad) lret clc mov xor dec sbb out rcrb (bad) (bad) (bad) decl int fwait xchg sub (bad) xor std cltd arpl mul cs pop cmc movsl or call outsl vlddqu cmpsb (bad) sbb out mov xchg outsb mov (bad) decl sbb mov faddl cwtl or jecxz ljmp push fstps scas or cmpsl dec pop out (bad) (bad) mov movsb mov push sti jp stos clc (bad) jge mov fsubl mov js xor (bad) incl sbb sti pop inc out push mov jb bound mov lcall loope sbb out xchg ret in xchg or test insb sub (bad) (bad) mov lret lcall or fld xchg test sub sti js (bad) (bad) incl inc ret cmp das push pop push das xchg fisubl jmp xchg pop mov repnz fcmove decb cld (bad) inc inc (bad) mov and andl adc fistpll mov mov and les sbb ljmp ss jae sbb or popf iret inc push ds nop mov mov adc rol (bad) ljmp mov test jnp xor cltd add out icebp cli adc iret jb push pop adc sahf or lret mov mov rol inc sahf xchg and jl lret cli or addr16 mov dec mov (bad) cmp mov adc cltd mov movsb xor repz jecxz or cltd (bad) mov sub mov adc (bad) (bad) (bad) pushl cltd lods stos out fwait lcall push and cmp lcall xor sub (bad) decl mov xchg dec push fisub add mov decl in in mov xchg adc xchg les xor xchg (bad) lcall cmp add pushf or cmp fsubs push cmp add out add les push divl adc mov (bad) jmp das (bad) imul xchg mov test mov sub ljmp mov sbb in imul pop mul (bad) (bad) mov sti pushl push jns and (bad) inc (bad) lcall dec jmp clc (bad) dec ljmp adc scas lret xchg (bad) (bad) dec pushf mov mov jp or mov mov xchg mov and mov jg (bad) lcall dec (bad) mov gs dec gs jnp jb mov mov shrw push and ljmp add pop test repnz xchg cmc mov pushl sarl dec in js into shll movsb xchg (bad) icebp out ficomp mov mov sub (bad) jl dec cwtl (bad) or popa dec add ja mov (bad) xlat (bad) push mov mov stos xor inc (bad) (bad) (bad) jmp cmp jle xchg loop comiss jge int3 lcall movsl sbb dec cs or (bad) (bad) call sbb aaa orl add xor xchg in mov sti xchg (bad) push dec movsl pop mov jle (bad) (bad) (bad) pushl fiaddl push mov or cmp push jne cmp (bad) cld shlb dec pop les pop inc aas xchg stos (bad) pop add dec int3 bound (bad) (bad) jmp sti mov jne and aam out mov scas jg test aas adc cmp adc dec bound (bad) (bad) mov into fstps popa xchg or xor test pushf mov and jl aaa cli pop incl cmp push pop cmp pop lods (bad) (bad) incl sub mov xor pop mov mov gs popa jecxz (bad) jg pushl mov dec mov cmp xchg mov cmp clc xor rorb in ds fwait xchg sbb cmp dec mov pushf loope mov mov cli movsl pop insl inc lahf mov into xor data16 (bad) incl inc ja ds sbb cs pop test sahf popa dec cmp fimul xchg or mov pop cmpsb cmp push daa add lds pop fdivr rclb lods incl clc lods xchg xchg push das fbld out mov jg inc push (bad) pop xor es sbb jge cmc xchg pusha mov call cld pop inc (bad) (bad) mov mov sbb dec imul test (bad) (bad) (bad) push push sbb test sub pop int ret jge push (bad) cmpsb and push mov decl cmp add mov clc (bad) xor out xor clc pushl mov adc mov (bad) (bad) lcall cwtl mov jg jno lock add push (bad) aaa mov pop and (bad) (bad) lcall gs mov cmp push and fwait or push mov push jmp scas aaa (bad) (bad) (bad) decl sbb int3 ret je scas xchg adcb loope lahf into cs cld fcmove jp add decl inc pop add pop pop mov loop mov hlt (bad) (bad) decl push lock (bad) and cmp int3 subb out (bad) (bad) (bad) decl les pop sub push xor (bad) or inc cmc (bad) ret clc push jbe adc shrb push and (bad) lcall ret dec push cmp lcall dec push rclb mov call ds hlt icebp int3 divl sub mov push lret and lock repnz lods std (bad) jnp adc (bad) (bad) pushl sbb outsl adc add mov fldcw pop jecxz fdivl aad adc (bad) (bad) (bad) call sub push jl dec dec adc test push popa push pop flds into sub (bad) (bad) call fucomp std std test xor in cmp sub push cmp jmp test lret push std (bad) jg je and lcall loope ret test lods sbb adc or mov movsl orl bound in or mov push int3 fwait dec in enter add push adc iret call inc mov dec mov mov (bad) mov outsb fidivl imul out lcall sbb (bad) xor mov (bad) (bad) (bad) call inc jbe outsb jno or sti fadds sbb (bad) hlt pop test sbb incl push xchg andl dec (bad) (bad) (bad) decl cmpsb push cli jb xchg sub add std or scas dec adc fdivrp test cmp xchg sbb xor mov inc data16 jmp jge sbb (bad) mov and adc mov cld out jno fild push jb push shrl (bad) jge out dec adc jg adc add int3 add call mov mov ja push adc jg inc sahf dec pop call pop ror inc aaa inc mov inc pop lods test and or (bad) ljmp stos decb addb mulb inc fimull cltd jnp scas movb xchg sarb outsw jae fcmovnb cmpsb (bad) lods sub fdivr dec std jg pop jns cld pushf shl (bad) add xor jbe fsubrp ljmp mov adc add xchg jg mov and mov (bad) pop ret or adcb jecxz cli add insb adc sti and inc (bad) incl or mov push les (bad) (bad) (bad) fistpll xlat or push xchg mov into inc adcb jge (bad) push roll daa out fs popa nop cmp or loop enter or cmp sub ljmp push push std (bad) inc add lcall add loop jle insb dec inc sub lods jg test (bad) cmp repz mov js dec inc adc (bad) decl xor cs push mov outsl ret sbb (bad) decl inc loop and inc (bad) fsubrp mov test push push push subb jp lret das das pop dec pop icebp js daa or add xchg xor sahf fldl push pminsw cltd ret xorl sbb (bad) inc nop scas and (bad) jg lea stos (bad) (bad) jne xchg pop inc fildl mov sub aaa dec cli call sbb sub mov (bad) jg cmpsl rol jp sti xchg xchg jmp inc aam test mov pop sbb (bad) jmp dec addl daa loope (bad) dec cmp (bad) (bad) jmp xchg jl push or scas add xchg fdivr xor xchg test cmc or (bad) dec test sbb pop pop fwait (bad) insb xor sbb (bad) (bad) lcall sbb mov jb ljmp push fsubl and (bad) (bad) lcall push cli jl ss js fldcw (bad) dec inc mov and mov dec pushl mov mov xchg xchg cmp and or mov jmp bound mov jbe imul xor inc push add (bad) insl jmp (bad) mov (bad) les aad dec ficoml clc insl adc test (bad) (bad) (bad) inc pusha hlt shrl cmpsl adcl jp add dec jb or jge in pop push int3 (bad) (bad) out clc call dec xchg aaa aas repnz cmc popf mov icebp pop jp sbb mov sahf jg (bad) (bad) ljmp xor inc push lods bound sarl mov mov jne incl test dec (bad) (bad) (bad) jmp sub cltd mov jno (bad) stc sbb cli fisttpl rcrl jmp call jmp pop push push mov (bad) (bad) call pop mov insb lds jle sbb inc or mov popf fs lods inc inc push stos std mov (bad) decl push mov out lcall xchg xchg mov pop incl xchg cmp cwtl inc push push and or (bad) stos (bad) lcall cmp jl repz and inc scas xor je sbb loope ljmp mov pop gs cmp jecxz loop (bad) (bad) (bad) dec test outsl out mov out bound cli add cwtl popf shll call loop (bad) decl mov test pusha popf or inc cltd push xor (bad) push mov adc int pop loopne xor fild ds test cs pop adcl adc lcall gs icebp push sub push cmp jg mov clc into xchg dec xor nopl sbb idivl shrl (bad) incl dec xchg (bad) mov add and jo (bad) push push mov repnz mov movsl shl sbbl lret out xchg mov sub jl xor pusha sar adc add jle ficom mov mov add addr16 mov lds cmp rclb (bad) (bad) dec lret arpl shl dec addr16 (bad) sub and sub mov sbb push mov add jg xor push xor jmp xor xchg add (bad) or mov mov sarl mov (bad) (bad) (bad) call dec lcall out imul fimull or (bad) (bad) (bad) ljmp xor dec cltd aam dec lods mov inc push mov or xchg xor ljmp incb scas or shrl outsl aaa in mov mov (bad) (bad) (bad) (bad) cmp popf add ret mov ret mov add scas ja push lcall inc movsb clc mov xor int3 roll mov jmp cltd add sahf sbb (bad) lret out incl push lds test mov fadd jge pop cmp movsl mov dec push adc push jg aaa std scas mov std rcrl xor xlat or xchg push (bad) mov loopne (bad) pushl mov add lea mov call dec jbe cmp (bad) call inc or pop pop xchg cmpsl loopne fiadd not idiv (bad) mov adc push add jmp enter call cmp in pop sbb (bad) or int hlt out xor je xchg (bad) repnz inc ja jle lret lret pop in ljmp fistpl xchg jne jecxz outsb mov xchg (bad) (bad) (bad) call add jne cmpsl jb int lods push hlt mov lret icebp sub jb clc or (bad) (bad) (bad) cmp fdivr iret and iret pop jg jae sbb data16 xlat push sub mov (bad) (bad) call pusha mov cmc dec push dec mov sbb push sbb mov jae xor (bad) (bad) jg or adc inc jecxz pop add mov fdivrl inc hlt mov imul call sar stos fnstenv xchg (bad) (bad) (bad) mov jnp pusha adc push decl (bad) sbb loop sar insb inc pop mov call pushf inc icebp loope loope (bad) repnz (bad) imul mov xchg add sbb (bad) (bad) (bad) js push aad fs xchg adc jnp loope pop inc inc sub shr mov outsl (bad) push (bad) call jl andl push cltd int or mov into sar mov iret push xor mov adc outsb popa fist je sar jg and adc ret lock cmc decl or inc lods mov sub (bad) (bad) call test or inc insl lock outsb fs inc (bad) add xchg add adc dec lcall (bad) jmp cmpsl ret ja xchg mov daa or pop mov imulb xor cltd pop leave inc mov test addl jo (bad) cld (bad) (bad) mov push jns out jge cmp or mov cmp xchg fucomi movsl test daa daa mov ja xor push fs dec jae adc cmpsb xor add imul ljmp xor jns push nop mov repz inc inc movsl adc pop (bad) (bad) (bad) jmp fistl scas in leave xor leave aad xchg jb cmc popf in sahf pop pushf mov (bad) lcall fsubrl dec jmp jae (bad) fildll dec mov (bad) mov loop push psubsb ja pop xor cmp adcl mov shl jmp cld dec pop (bad) dec add xor (bad) (bad) mov divb (bad) test push lahf out lods pop mov (bad) push and (bad) (bad) (bad) (bad) mov call fcomps test cltd cltd mov sub sub decl fcoms dec into ljmp bound and insl mov fisttp mov bound mov mov xlat outsl jl leave adc je push cmp (bad) mov jle imul inc pop (bad) ljmp xor enter ja cmp pop test push lcall int3 loope (bad) mov and (bad) or and int3 (bad) pushl mov das or xor sub nop mov dec pop mov mov (bad) (bad) decl (bad) stc push cmp or pop mov jge in fistpl jmp and push fcoms (bad) jmp addr16 shrb data16 hlt icebp inc in lret ja (bad) (bad) mov and (bad) dec pop lahf adc pop push enter mov nop pop scas mov (bad) (bad) ljmp rcrl stos repz mov fistl mov push pop pop icebp (bad) decl mov lret outsl (bad) fisttpll ror jo jo push imul sub loop inc fsts movsb test rcrb mov aaa icebp nop inc insb clc jge jg rcll (bad) (bad) cmp fs sub xchg test hlt jae mov and adc cmp jp (bad) (bad) incl popf call data16 aas dec xor add adc cmpsl in sbb ljmp add sti data16 mov lret loop xor mov xchg (bad) mov add leave cld std xchg movsl jb test sbb dec sub (bad) (bad) (bad) out clc test dec icebp inc or sbb aad push outsb loop lock lcall cli imul imul mov repnz xchg cmp mov mov decl push push sbb xchg mov pop std incl fwait daa xlat ds xor decb cltd inc rcrb mov cmp sbb or js arpl (bad) pop ds clc jl jo daa push jns fsubrl add push pusha mov cmp mov sbb loope (bad) (bad) decl fsubs pop mov outsl or sarl mov (bad) (bad) (bad) jmp pop dec sbb pop inc movsbl arpl into push gs xor sbb fs (bad) incl cld scas add insl js mov sub nop in std aas fcmovbe xchg lret pop aam data16 out repnz call insl push fnstsw movsl (bad) lods sbb shrb (bad) (bad) in sub ss js fnstcw sbb sub pop push fwait push repz (bad) (bad) (bad) ljmp pop fsts in inc outsb inc imull jmp out add pushl movsl fsubrp push push mov insb sbb inc ss or jl aad (bad) ljmp stos mov ret xchg xor push lret les (bad) (bad) jg jg lods cwtl test cs fsubrs push les add addr16 clc pushl xor mov dec out lahf dec mov and push (bad) dec lcall xor pushf (bad) test xchg xchg into (bad) into repnz cld ret ret mov mov addr16 or mov sar lcall mov pop pushf sbb jb test neg leave fmull (bad) (bad) (bad) (bad) jge jp rclb movsl jbe (bad) xchg mov mov jne add ret xor dec xor xchg or pop fsubr clc push mov sub sbb nop xchg (bad) incl xchg mov out into fwait in popa push pushf (bad) (bad) jno (bad) (bad) (bad) lcall bt test ljmp jb ret xchg and xor incl mov jns sbb rcrl insl pop mov sbb dec push aas push pop test lods pop add (bad) jp aas test and inc lret inc (bad) (bad) (bad) (bad) mov leave clc xor aaa xor jmp (bad) mov push push faddl mov leave pop dec (bad) (bad) (bad) jmp imul pusha xchg mov pop pusha inc faddl mov stos (bad) (bad) (bad) call ret mov pop ret sub outsb cld pop (bad) jbe repnz and xor lods mov jmp mov leave lods (bad) decl add imul lahf xchg add jp (bad) mov or fldlg2 jg pop mov (bad) decl std mov cltd std pop push and cltd pusha sub das stc int cmp (bad) (bad) (bad) ljmp xchg fbld je mov jmp sub push xchg (bad) aad (bad) repnz pop enter enter lock add mov (bad) (bad) call enter ja mulb fwait pop repz lret orl adc (bad) (bad) lcall dec pushf scas je popa shlb inc in loopne mov bound mull ret jb mov mov lret das into mov or push test (bad) (bad) aas fiadd sub arpl mov into jno mov hlt cs test (bad) sahf xor enter lds fsubrs xchg jg (bad) (bad) mov sbb into mov ljmp cmovge in and movsb xchg mov push (bad) mov in js inc mov jle add (bad) (bad) aas pop and (bad) lret ret xchg xorl out mov popa lea bound fldenv sahf (bad) (bad) (bad) jmp sbb out mov jnp loope ret fmull notb cld adc sub aam push cmp (bad) push jl lret stos jg aad inc cmp mov xchg cmp xor pushf (bad) (bad) (bad) inc clc aam (bad) movnti cmc int sub dec data16 jg sbbl ret lcall jne jo mov inc jl,pn mov idiv (bad) (bad) mov xchg mov (bad) int3 adc and aam movsb and xchg add stos insb sahf push (bad) (bad) (bad) (bad) cmp test and mov test (bad) mull (bad) (bad) lcall xor adc lcall jp adc or (bad) push pop sbb jecxz push hlt inc sti dec iret fstps mov or sub (bad) incb xchg and sbb (bad) (bad) jmp cmpsl jp call adc fcmovnb pop mov mov test pop aaa or (bad) jg (bad) decb sbb fxch adc shl inc adc cmpsb xor jl ds decl sbb cli arpl xor (bad) (bad) (bad) (bad) jmp xchg push leave add shrb lds ds negl (bad) mov (bad) rcll pop (bad) (bad) (bad) (bad) ljmp gs mov inc pop sti sub push ffree mov push pop lock mov push adc cmp ss shrl sti pop (bad) (bad) (bad) (bad) jge (bad) div jge xchg and inc adc lea fwait dec scas lcall (bad) (bad) (bad) (bad) fimul fist dec pop jns jecxz pop jl and stos hlt pop fidivrl xchg in bound inc xor pop jl jl sbb push fs out enter mov (bad) and mov mov dec jb loopne dec mov mov push out leave sti adc ja mov sbb std mov setne pop xor inc sbb loopne mov and xor or call pop mov xchg mov ja xchg ds (bad) (bad) (bad) (bad) mov xchg sub fisubl push adc repnz test lahf mov repz adc (bad) ljmp ret negb pop jmp fldcw dec ret pushl jl popa jno out jl popa aas lcall addr16 sub (bad) (bad) (bad) call lods call adc jmp lds rorb lods ds dec and sar (bad) push jae jns lcall ds pop mov test push or js lds sub scas shr std aaa inc sar lcall mov adc (bad) (bad) (bad) jmp dec pop inc out movsb jl add add imul (bad) (bad) (bad) jmp aam xchg and fiadd lock sub add adcl mov sarw inc add pop jbe (bad) (bad) lcall or (bad) daa fnstenv cmp adc mov aas inc out aaa (bad) (bad) (bad) ljmp lds iret (bad) out inc sbb jmp (bad) mov decb (bad) (bad) cmpsb push (bad) (bad) (bad) jmp (bad) outsb push xor js push icebp in lods iret jbe test pop addl xchg icebp (bad) (bad) (bad) fldcw mov sub lea add lock sbb das dec xor sbb lcall iret adc mov es gs sub sbb add lcall fwait mov lret xchg sar mov aad rorl (bad) push mov std test rol (bad) (bad) loope adc iret mov adc (bad) (bad) pushl ds mov or bound std roll les mov imul xlat (bad) (bad) push out pop mov cwtl dec mov (bad) jae shlb add jg mov out pop push jp xchg sbb sbb inc jbe mov pop inc pushf cmp inc cmc adc in add pop add pusha (bad) (bad) lcall subl pop out push and dec (bad) mov pop xchg shlb (bad) jne in sbb mov fimull fidiv mov push mov aam sub cmp or int3 stos jl cmp ljmp (bad) mov xor xor xchg sub decb sarb pop cmpsb sbb inc insl cmpsb add push lds jmp inc and sahf mov aaa es push jnp (bad) dec add sbb test fisttp into test pop xchg nop adc ds pop (bad) (bad) ljmp mov bswap call dec add push movsl sarl sbb adc (bad) lcall xor or push arpl push mov and (bad) (bad) (bad) pushl inc int3 pusha in pop or and sti jae test pop fwait imul cwtl pop fwait aam pushf add xor jbe and arpl aas sbb or lret sahf sarb inc dec mov (bad) (bad) ljmp (bad) xchg or cs bound dec cmpb lcall scas iret adc addr16 test shr mov popa pop and xchg scas add iret ds dec push push je ja ljmp fcoms mov repnz out mov sbb mov sti (bad) (bad) (bad) incl imull lahf mov and push mov stc jnp clc dec sub pop in pop (bad) (bad) (bad) jmp pushl jo iret add or notb mov mov or xchg lea xchg ja aaa cld xchg inc clc dec push xor jo divb (bad) (bad) decl aam in movsb push pop mov (bad) mov sub test stos adc xchg mov (bad) inc xchg sub pushf scas ss or mov adc sub mov bound cmp outsl sub and (bad) (bad) (bad) jns mov cs lret loopne mov xor sub (bad) (bad) jg adc add pop mov stc sub es fcmovbe mov xor cwtl (bad) jb das ljmp stos dec (bad) jg movsl xor sub cltd jb in fdivp (bad) (bad) (bad) inc or repnz adc repz dec and pop in adc cli push lcall (bad) (bad) in hlt insl (bad) sbb sbb push test xor addr16 (bad) decl mov sub sub gs imul jecxz mov lock (bad) (bad) (bad) (bad) (bad) movsb pop stc iret dec jge cmp fdivr cltd fstl sbb mov iret icebp (bad) decl xchg xchg add movsb roll notl cmc mov xchg add leave push sbb out addr16 (bad) (bad) mov lret or jmp ret movsb sub imul (bad) decl int xlat jl push movsb inc adc mov stos cmp out aaa clc (bad) (bad) jmp or mov into mov xor in and cmp xor cmpsl (bad) decl fsubrp cmc push inc movsb cmp mov and mov (bad) mov pop dec or pushf popa daa inc sahf scas jle loop scas push ljmp (bad) in (bad) mov rclb test sbb nop jmp gs (bad) (bad) ljmp jno in ds lea jne (bad) fmull aad pop mov adc xor (bad) push xchg out and push subl cmpsb mov fcmovnu mov dec out mov jl stc mov or pop cmp push rcll lock shlb jae adc mov (bad) divl mov imul js popf mov push mov mov cs cli outsb push leave or pop mov cmp (bad) ljmp lock and fnsave lahf inc ja jnp notl mov lahf incl (bad) sbb xor out setle pop mov lret (bad) (bad) (bad) (bad) mov pop xchg es fsubrl adc push bnd adc cmp movsb lds shl ja xor mov add lds adc sub repnz fdivrp (bad) decl movsl mov sub scas xchg outsl fs jge rcrl (bad) call cs lea jmp jle push pusha pop or inc lret or mov fdivrl (bad) (bad) incl sarb cld xorb jmp push dec jbe dec scas int3 imulb idiv fstpl sub pop adc push xchg xor out cli sub lcall (bad) jmp bound sbb cmpsb outsb (bad) sbb cmp scas mov (bad) lret mov addr16 pop push mov (bad) jmp ficomp popf int3 pop or repnz mov or stc xor mov xchg push and sub jmp cld pop jae (bad) cmp ds fs outsl ljmpw cs or pushf dec or mov and insl cs or (bad) (bad) incl pop mov dec fidivr jp test or dec mov mov inc and daa cmp and bound push push ds xchg test push lret outsb push jo jp loope jbe adc sub mov test xchg jo flds cmp xchg scas ds jecxz,pt das in jno inc ret cld mov call xchg mov xor xchg push and (bad) (bad) jmp jmp lcall dec mov cli pop movsl loop cmc cltd ljmp (bad) decl sub xorb push (bad) cmpsb sti fistpll out push inc (bad) (bad) (bad) (bad) mov ljmp dec mov pop movsl and sbb fdivs (bad) decl arpl mov addr16 add lcall jo inc and (bad) (bad) (bad) clc aad das faddl aad cmc sub (bad) xlat add clc dec xchg in cltd mov (bad) mov sbb call pop add (bad) pop mov into jo in or inc mov insb push mov mov pop fisttp movsl mov scas int3 aas ss (bad) mov mov into jae mov cmp jge in mov out stos xor lock fstpt dec out sbb mov or xchg (bad) (bad) ljmp xchg jns mov pop inc ljmp pop inc mov ja insl enter ja dec fisubrl (bad) (bad) jg jecxz les pop adc das (bad) enter jmp clc rclb dec loope and ds je loopne lods cmp call std (bad) fsubl jnp mov adc (bad) push or ss je (bad) (bad) fcomip daa cmp fisubr jno jae fisub faddl icebp lock clc arpl push (bad) mov jbe loopne push cli sbb rcll push (bad) (bad) (bad) push mov movl das test std jnp push and add (bad) push push mov fldl imul jne push xchg in lods mov les or add lcall test in jge cmpsb xor movsb hlt inc adc or ja xchg sti sub scas push (bad) ljmp or int inc jbe jmp and push clc mov scas push hlt jo,pt xchg ds jno adc xchg push jmp ja (bad) (bad) mov xor add xor icebp pop add mov in add cmp arpl add push out hlt stos sar in mov adc sbb sti fwait inc sbb cmc lret std push test hlt dec (bad) (bad) (bad) lcall inc andl jo pop stc mov push (bad) cli cmpsb add dec int jne pop enter fildll dec mov push repnz push into xchg shr shrl jno ret and and (bad) dec sbb mov icebp push (bad) out lods shrb mov out push mov jmp jne push xorl leave loopne cmp lcall lods xor scas push sbb aaa ss push sub inc arpl (bad) (bad) (bad) pushl jno lock int cmp lods add sub inc nop out jp cld (bad) jecxz push (bad) (bad) (bad) lcall in iret jp mov (bad) lea int3 sahf (bad) and jg or jmp (bad) mov fwait aaa aad mov xchg call sub lock (bad) (bad) (bad) dec std aad ja add mov out push ds rcl test sbb ss jmp pop xorl lahf push out pop nop lahf sub pop clc inc ds fldt inc bound jecxz cs in mov cmp cltd (bad) ja leave call fucomp and (bad) scas enter and je (bad) (bad) lcall add sub mov lahf imul (bad) (bad) pushl sub or add je mov jbe mov sti je call mov add cld call fbld lods mov inc sbb divb fnstsw jl leave jl outsb imul add (bad) fcoml fdivrs mov daa add (bad) (bad) ljmp xchg aad mov (bad) xlat loopne add pop jg adcb mov test insl pop or ljmp lret ds inc popa cld fmull (bad) (bad) call or jae daa mov loop mov (bad) (bad) mov mov pusha sbb mov jae aam dec pop push fimull cmp jp shlb fstpl (bad) aaa jnp dec add pop cli xor decl pop sahf jle enter nop mov (bad) xor xchg push dec dec xchg ja aas flds (bad) pushl jle and inc out xchg and mov je dec mov les jne (bad) (bad) (bad) jmp dec mov fadds es insl push jo lds sub sbb sub fstl aas dec mov jle pop fwait xor fwait jp rorl fstl std push lock jb and cwtl out (bad) (bad) (bad) mov lret and jmp orb mov and imull sbb inc xchg sbb (bad) lret jg enter mov pop cwtl jae popf adc cs xchg mov das sar inc mov mov push cs sbbl enter push (bad) (bad) (bad) decl subb push cltd or push mov (bad) pushf sahf xchg ljmp and pushl inc addr16 xlat out ret mov push cmp cmpsb iret sub rorb repnz in push dec clc lcall hlt movsb lods aaa xlat stos ret mov ficomp push mov cltd mov bound sub push push adc push jge pop mull cltd cmpl cmpsb xchg mov or or lcall stc mov ss clc rcrl xchg sbb adcb dec lret rclb ljmp mov jecxz repz xchg idivl (bad) (bad) call daa cmp mov push dec ret cmp push aaa ds jecxz sar inc out mov cld (bad) (bad) jmp jecxz sub xor add sub push xchg stos sbb test leave adc jo loopne pop bound into clc sub loop inc imul bound (bad) (bad) (bad) lcall mov or jae mov out push lahf add je insb mov pop out js (bad) (bad) lcall movsl and ljmp mov cmpsl lahf dec cmp mov clc scas sub or jmp mov repz mov push sbb pushf xchg push pop divl mov ljmp xchg and shlb ds movsl (bad) (bad) jmp rorl movsl aam mov std dec mov ljmp add sahf in sbb add pop inc popa push lock call aaa lret out ret mov repnz mov pop int3 xchg dec cmpsb call call scas data16 fisttp cmp sbb (bad) (bad) (bad) jmp push add push test out add fidivr daa test call jecxz push out clc (bad) (bad) (bad) clc cmpsb stos stos icebp (bad) dec cmp sub lret push xchg (bad) cmp jle sbb shrb ds aam out (bad) jo mov xlat mov adc std subl aaa xchg adc fwait (bad) (bad) decl in mov push add sbb and clc (bad) (bad) incl push add adc popa jmp (bad) xchg mov sub inc (bad) incl fdivrs iret loopne adc add stc cmp pop xor pop mov inc sub inc adc or push xor (bad) jmp mov iret aad dec imulb orl xor adc pop jo mov push sub or (bad) (bad) pushl dec inc push lahf adc cmp and and inc mov imul std (bad) lcall push sbb test insl mov les ja (bad) in call sbb mov ss lds cmp js and das jns fist daa dec cmp out mov in les (bad) (bad) jmp or sbb sbb dec pop sub je cmp mov cmp lea (bad) (bad) (bad) dec fsubrl (bad) push repnz lret das in mov cmp jnp decl mov mov xchg pop (bad) (bad) mov cs add cmpsb sbb pushf adc test adc cmp inc mov decl ljmp fdivs lahf iret xchg push (bad) (bad) (bad) call iret out cmc sti inc jg cmc lret fldcw cmc mov inc lahf insb hlt test incl cld call push ljmp (bad) int (bad) aas mov (bad) (bad) (bad) fdivl push (bad) mov pop jge scas imul ret xrelease pusha mov incl cld (bad) (bad) sub divb (bad) inc xor jg jno xchg dec in std (bad) jg out in leave push xchg and aam push lods push xchg inc mov ss pushl (bad) in scas repnz inc lock cmp in loope rcll mov adc mov xlat fld fiaddl mov out lret mov mov in (bad) (bad) (bad) lcall insb imul xchg shll std pop (bad) lahf mov rolb lcall test mov and mov xchg pop inc cmp push mov xchg lcall mov jp outsl jle dec inc mov sbb (bad) (bad) (bad) jmp mov sbb popf sti and mov adc out sub les icebp (bad) call mov mov test fisubr rcl pop sar adc mov mov push clc add sbb scas mov (bad) (bad) (bad) lcall xchg je fimull es icebp sub xlat aas xor and loop adc dec mov ljmp dec fwait push loopne scas mov mov pop fidivl push push mov xor cmp (bad) (bad) jg jmp and movl ret (bad) and std or sub out (bad) (bad) (bad) ljmp sbb inc (bad) pop cmp cmp dec lods jp rolb add ljmp sub pop mov das mov dec pop or call call ljmp imul out cmp or pop fstps push mov lds xorb sub (bad) mov mov in mov mov fst xchg (bad) (bad) decl imul xchg es xor (bad) xchg inc push mov adc (bad) (bad) pushl mov mov jo pop sahf push clc das leave das mov add add and (bad) dec xchg push (bad) (bad) (bad) lcall aam int mov (bad) xor and f2xm1 sbb sub inc mov mov (bad) (bad) (bad) mov mov (bad) push sbb mov inc jl jae jecxz adc addr16 (bad) (bad) ljmp jmp mov adcl cmpsl (bad) push sub adc ljmp (bad) jmp xor ljmp jae and popa arpl nop pop arpl (bad) incl std pop aas jnp jl into sar mov int3 push dec stos ret rol ljmp daa and leave lods dec ds (bad) (bad) (bad) call paddusw cmp subl lret adc lock cmpsb movsb and mov xor push add adc jnp nop jns mov test rcr cmp xlat inc dec (bad) jg les mov mov (bad) call mov neg mov mov mov add mov ljmp ret test adcb inc les aas xor mov (bad) decl xor in and pop mov xchg cmc mov sub jp (bad) (bad) (bad) lcall stos in iret sbb mov enter data16 or dec xor cmc imul fcmovbe mov (bad) jb daa iret mov xchg ja lcall ss mov push cli popa insl hlt or xchg pusha cmpsl mov ljmp dec sub jnp sti pop js sbb sbb and mov and lcall push pop (bad) (bad) ljmp jbe jg push or daa int mov xor xchg (bad) push shll lock bound aad jbe arpl (bad) (bad) (bad) lcall add adc mov inc into fs lds add dec push cmp jge gs mov into (bad) (bad) jg mov es or fs pop mov fstpl int3 insb movsb test pop outsl xchg inc xor std mov pop mov xor jns rcrb inc js,pt je repz and leave cmp lods leave call jb xor jp jge push cmp jl cmp adc aas adc dec push (bad) jle xchg (bad) pop xor xchg leave and in sub inc xchg xor dec outsl stc lds xchg mov (bad) (bad) (bad) ljmp outsb inc mov mov loop (bad) mov add popf rorb fwait popw loopne decl aad aad cltd push or cmp push (bad) add lea cmp adcb clc jg mov cmp enter pop (bad) jmp ds sbb movsb add outsb or mov int3 loope or push xor (bad) decl cmp dec inc lock mov lods xor sub or jo or pop cld decl icebp push push push fistpll hlt fmull add popa adc data16 sbb movsl mov jecxz xor xchg pop loopne pushl dec fisubl daa inc out loope (bad) mov movsb les and (bad) call gs cltd mov movsl push mov and cmp lea cmp sbb incb mov sub icebp pop pop (bad) lcall fs fcmovbe in ret xor mov dec dec loope and (bad) call jb mov push std sti into loope sub push inc movsb out and aad add jg and mov sub decb sahf nop stos jne pop xor lahf cmp add fcomip int lods jns dec pop in add ljmp push fstl shrl (bad) adc lret addr16 pop mov xchg mov (bad) (bad) decl sbb dec aaa scas (bad) lea idivb fsubrl push inc movsb pop daa xchg (bad) (bad) (bad) (bad) clc add mov cmpsl pop movsb mov cmp inc add jg ja fs popf sbb mov bound mov mov (bad) leave adc xchg mov mov xor jecxz (bad) (bad) incl dec cmp stc jge or xor jnp aam mov jl pop (bad) (bad) (bad) (bad) cmp mov fbstp adc out dec xchg fidivl sub repz and (bad) ljmp mov clc jmp mov jmp fs hlt sub push (bad) (bad) (bad) incl xor (bad) in and (bad) aaa pusha pop inc imul rorl stc jmp pusha adc adc bound inc cmp pushf fisttpl into inc push sub addl scas clc jae xchg push pusha xor inc pop (bad) pushf dec popa stos dec dec dec data16 in mov (bad) lcall loop ljmp mov or das call out leave (bad) xor pop jmp mov adc jle sahf sahf dec ja shr (bad) (bad) inc xchg fwait das scas in stos stc test sbb inc (bad) in pop inc lcall adc cmpsl movsl or cwtl pop jp cltd adc sar (bad) mov cmp cld enter jae jb cmp (bad) dec sub (bad) call adc mov orl cmpsl popf dec jnp cmpsl mov mov mov cmp cwtl push push adc das sbb pop call add or and ficomp rol (bad) (bad) (bad) pushl lds or repz stos mov shl adc and lahf sti xchg add mov fisubl mov clc int3 xchg imul pop and jb (bad) xchg test gs (bad) call jae or imul mov mov mov mov js into fistpll aad mov push and test jp mov pop cmp scas adc (bad) (bad) decl ret lcall fadds jne ret imul push bound adc insb lods (bad) dec pop imul loopne pushf adc dec mov (bad) (bad) (bad) inc ffreep push push ljmp fwait aas scas cmp es in push cli or test and sbb pusha ljmp cmp in or (bad) sub test repnz mov in decl jmp mov stc (bad) mov xchg inc mov (bad) ljmp jp xor insb adc and test pop jno xlat and cmp or jmp fistl stos xor mov stos jne sar incl add sbb adc out out xor nop iret outsb (bad) loopne jb mov jmp cmp mov mov sub imul cmc inc mov mov (bad) (bad) (bad) fiadd xlat sub cli loope mov push stos pop mov and jecxz jp cld (bad) call pop das jle nop xchg xchg jb adc jle dec fwait dec insl (bad) (bad) (bad) lcall xor ret ret sbb out sub add (bad) (bad) (bad) (bad) cmp or call inc mov dec sbb out push ss (bad) (bad) push popf adcl aas leave mov lahf push es mov insl adc xor (bad) out cli dec stos dec sub mov (bad) arpl sbb (bad) (bad) (bad) mov lret xor outsl (bad) in inc divl mov ss push add (bad) incl sub dec hlt inc leave dec dec lods mov mov or pop (bad) (bad) mov lods fcomip lock sbb (bad) mov push call outsl (bad) pushf mov and into sbb dec outsb adc jecxz aad adc adc push fisub jne mov mov call imul lds and fcompl sti push int sub jle (bad) jmp dec jmp mov rol test or dec scas xchg fildll lods cmp mull or add (bad) (bad) pushl cmp popf and xor mov out in in fldcw icebp or cmp mov repz adc lock and lds in mov add push les fwait push mov xor xor (bad) (bad) lcall sub mull cmpsb dec int3 stos fsubs dec jge push loope xchg stos icebp xor mov std sbb ds inc cmc dec gs (bad) (bad) (bad) incl cmp jno clc mov pop je and movsb jg pop fcompl jno add leave mov cmp into in push inc aam adc (bad) (bad) (bad) (bad) push fst stos cmpsb and push mov outsb (bad) xor ret insb (bad) lcall adc imul pop mov jb out cld insb mov xchg mov mov aaa jae and outsb cmp (bad) (bad) mov sub xchg mov pop popf adc idivb pop mov and xchg dec (bad) ds movsl je out fidiv (bad) mov popf add test loopne sbb (bad) stc fcoms jno add cld jg dec sbb mov into stos mov fisubrl (bad) pop std (bad) (bad) lcall in sbb stc notb notl out jecxz lods ljmp jg cltd mov sahf xchg adc pushl pop pusha jns fstpl jae int or pop mov push pop fcoml mov vandnps ljmp stc xchg ds cltd mov sti cmp push cmp jle sub xchg or (bad) (bad) (bad) (bad) (bad) mov dec xor mov push mov mov dec ds pop jg test (bad) (bad) (bad) lcall cmpxchg in mov sbb fadd jle cs lahf xchg clc aaa mov (bad) sti aas cwtl iret push imul pop rclb (bad) (bad) jge push imul (bad) ds jbe pop loopne ds out jl,pn or test dec mov roll lcall mov ficompl cmc add sub cli fwait jle sahf mov fdiv (bad) seta mov push mov (bad) push jecxz mov cmpsb xor lds repnz inc sub lods pop je out and or (bad) ljmp pushf inc jo repz mov cmp imull sbb aaa cld or mov pushl push jns stos sbb test insl outsb dec (bad) pushl jno popa fist fisttpl aam ss repnz lock push jp divb in mov push jb inc pop xchg aas xchg and or fcomi xchg sub in jge aad data16 pop enter mov (bad) (bad) (bad) (bad) sbb jg jmp insl jl add idiv mov (bad) (bad) (bad) decl divb xchg out pop lods push push data16 fdivs pop pop push shlb and cld push pop pop pop mov test (bad) (bad) incl dec sub movsb sbb stos (bad) out add push int push mov fwait or sub lock (bad) call int mov das sti jle mov ret mov insb lahf jb cmp (bad) lcall sahf (bad) lds jg in pop rorl (bad) (bad) jg shll or mov mov shll popf or (bad) call iret and (bad) in mov adc loop subb stos (bad) sbb cmp decl (bad) xchg mov jecxz and jb xchg dec adc xor jp sahf popa les (bad) call lcall je dec in (bad) mov mov es popf cli ss out clc decl mov in push push lea negb rclb pop jge pop ljmp insl xor sub inc jb push dec in sub pop arpl icebp fs push mov fsts addr16 ds xchg mov (bad) jmp fucomi fistpl sub mov pop movsl cmp test cmpsb xchg (bad) xchg and leave cltd shrb sbb sub jg ss in jns mov (bad) (bad) incl out mov push outsb imul dec test sbb (bad) (bad) inc or push inc fs in cmp pop sub inc sub incl ss mov scas (bad) or (bad) (bad) call pop or andl ja add fwait adc push stc cmp and (bad) cld mov cmp lahf nop push mov in cli or (bad) lcall mov mov ret and mov mov mov xchg jb into roll push push stos int or test push ficom mov jne testb aaa ficom (bad) push (bad) jmp sbb (bad) push jae (bad) add jo sub rorw (bad) ljmp in lods nop jle pop jae popf movsl fildll xchg (bad) jle loope,pt (bad) (bad) (bad) pushl scas mov mov xor and or mov cltd scas dec neg (bad) (bad) call adc xchg dec jb mov sahf pop je mov mov (bad) (bad) ljmp ljmp aaa pop mov sahf (bad) cmpl mov (bad) fbstp (bad) (bad) inc aas test out aaa les cwtl sbb adc (bad) out and (bad) cmp icebp inc push inc push sub clc mov test into push pusha add insl repz out pop or cmpsb insb (bad) ret add xorl pop push std (bad) ljmp pop aas push jbe sbb ds inc mov es inc push pusha mov (bad) lcall jmp movsl cmp stos ret jnp test call pushl add je xchg cmp xchg pop inc push jns or (bad) clc imul lret lahf mov ljmp add es mov dec add (bad) xchg mov mov add sub xor lcall mov mov movsb cmpsl stc mov cmp (bad) push mov adc mov int3 push mov cmp int3 pusha or dec sub (bad) (bad) ljmp dec lcall ret jmp dec or adc int3 mov (bad) (bad) mov xchg out cmp aaa dec lret fwait stos mov adc mov (bad) mov lret dec aaa push cmp jle iret inc xchg push and in mov decl jbe mov add adc mov (bad) push scas inc mov test pop data16 xor add mov mov adc push sar mov (bad) lods icebp (bad) icebp xor fwait push or push (bad) (bad) mov out xor push roll jmp sbb xor sbb inc out hlt jg mov mov (bad) aad add inc cli in mov jno (bad) (bad) call scas mov les and fcomps xchg bound lcall inc clc or clc add mov jp add and divb rcrb (bad) ljmp sbb mov (bad) sti sbb mov movntps mov movsb xchg int or (bad) (bad) out push mov out ss cmp fs mov les mov mov enter and fdivr fisttp mov jp jbe movsb scas mov pushl or shrl mov xor add (bad) inc (bad) (bad) incl (bad) push xchg sbb stos dec dec fwait stc pusha pop fmuls (bad) xor int adc cmp clc (bad) jmp pop (bad) xchg add lds (bad) icebp cmpsl sahf lahf pop cltd jns sub cmpl inc je cmpb ficompl mov incl (bad) stos pop mov and (bad) jmp (bad) (bad) (bad) ljmp pcmpeqd xor xchg popf mov push aam xor repnz mov insl outsb add lock mov loopne imul sbb lahf adc sub decl (bad) pop lcall stc jb or cmp xchg sbb jbe mov data16 inc std fildll mov jb sahf loop or (bad) (bad) (bad) ljmp push mov scas lcall xor sub mov (bad) leave jmp adc lcall xchg aam cmc xor scas inc test in mov xchg (bad) aas and incb mov movsb stos daa cld (bad) (bad) pushl (bad) push or mov (bad) jno push outsb xchg cmpsl or call mov lods leave add or js lea lock out gs xchg dec sarl or adc popf out xor jbe in insl dec and sub decb and mov or shrl incl les stos lcall jg mov (bad) (bad) (bad) jg adc std dec mov mov mov xchg mov insb xchg insl sbb dec push xchg jp (bad) (bad) lcall fisubrl dec movsb cmpsb pop and in mov sbb sub cmpsl pop and cmpsl inc in push (bad) (bad) call mov jbe psllw cmpsb and jp xor jle cmc cmpsb aad popa mov call cmpsb mov mov loopne movsl mov mov sbb shrb cli mov push xlat lods mov scas lret stos fs mov repz bound inc aam jno scas test std clc and (bad) sahf sbb (bad) (bad) jmp int repz and mov outsb cmp lock and dec arpl (bad) (bad) decl loopne inc add cmp cmp pcmpgtw adc add (bad) (bad) (bad) ljmp inc repz jge inc inc and xchg dec jecxz (bad) fdivr dec cmp dec test (bad) popl add push jbe aas inc (bad) mov lock inc xchg sub ss imul aam (bad) (bad) (bad) (bad) (bad) push dec movsl movsb pusha xor xor sahf scas xor pop outsb adc out cld adcl mov (bad) dec mov lret mov loopne cld pop or mov lock (bad) (bad) pushl or sbb pop cmp scas popf ret outsl ds call jle adc lcall fs mov sub dec cld mov rclb jae (bad) aas push or and enter bound jmp xchg sbb mov (bad) (bad) mov pop in cld pop fidiv push iret ds in lcall jb lcall add pop pop cltd cmp std (bad) cld xchg inc or call mov pop clc jl xor jno xchg dec push test or mov out (bad) (bad) (bad) call mov lret enter xlat ljmp xchg inc xchg test pop dec (bad) (bad) (bad) jmp lods clc imul xchg aad imul push xor mov test (bad) sbb out push sahf (bad) fmulp jmp (bad) (bad) incl aas xor jbe js test mov or pop pop imul (bad) (bad) (bad) fisttp and out in cli faddl es insl sbb mov (bad) (bad) (bad) (bad) mov enter mov jecxz stc cli popf xor (bad) add mov ljmp push es jmp (bad) mov jle xchg adc push or icebp adc inc imul sbb incl ljmp xchg clc bound sbb xchg jne (bad) sbb inc addr16 pop divl sub imul and dec add push std aas and mov mov (bad) incl enter outsl jo dec pop jg cmp popf ret sahf sti stc jno jl inc lcall jmp lock xor push xor jecxz loope jmp lea int3 (bad) (bad) call adc hlt and test mov out pop subl dec loop push pop stc (bad) (bad) (bad) ljmp xchg stc test mov fimull adc pop xchg xor movl fisubrl inc jle push sbb (bad) decl add mov xchg (bad) lret test out xchg insb pop pop fimul sub lock stc lret xor and push movsb pop test test (bad) incl cmpsb movl pop cmp in add imul ljmp adc xor (bad) int3 mov call xor mov pushl push outsb mov in mov pop or (bad) cmp dec subl inc dec nop adc (bad) pop inc mov adc insb (bad) (bad) (bad) pushl ss jecxz cltd loope aas mov adc cmovg jp cmp decl out xchg mov sar push sti add or repz cwtl (bad) (bad) (bad) decl push inc jmp add or insl stc int3 arpl push fwait mov xor cld (bad) (bad) ljmp sub mov fist (bad) neg or dec mov fcomip adc popl xor fnstenv jg fdivrs outsb mov and loop fs pop rorb (bad) incl in xorb jle lahf xor pop sbb ret insb dec lret clc (bad) decl mov mov dec mov push (bad) lret jp lcall ret lock ja mov and (bad) (bad) (bad) push xor cmpsl sbb fcompl or mov sub xor cltd or mov into cmp dec xchg adc pushl leave xor shl and or fnstsw cli mov pop xor je roll xchg pop loopne test xor ds imul jo cwtl (bad) call mov xchg pop inc sub das xchg add lods jb (bad) mov push (bad) fsubr sub gs hlt sub (bad) int in in (bad) (bad) (bad) jg jecxz push stos (bad) mov scas cmpsb int3 das mov shlb inc pop mov pop xlat stos and mov ret (bad) call aad cmp arpl clc imul and mov mov adc popa jg or mov adc (bad) cld (bad) push cmovl sub pop btr or stc arpl leave or dec xlat mov sar mov stos sbbb ljmp jg pop hlt (bad) mov je stos jnp scas and jne pop and aad inc loope cld (bad) jg jg add fistl push ljmp cld xlat xor (bad) jg gs addr16 jns mov ror sbb into (bad) (bad) (bad) push ja stos jb ret push daa stos movsb pop mov (bad) mov or es ljmp (bad) jmp inc dec (bad) shrl inc cli mov mov cmp (bad) (bad) (bad) decl sti fcomi push sub mov pop sarb cmp insb mov (bad) (bad) lcall jge (bad) in and jge (bad) ud1 sub mov pop out pop pop jo dec (bad) icebp pop sbb call (bad) lock (bad) (bad) out inc or imull nop aam adc stos inc dec rcr mov jae mov push inc pushl pop mov pop mov dec jp xchg and ja sar (bad) repz push sbb (bad) (bad) (bad) cmp nop cmp mov loop and mov inc dec lock into fmuls jae (bad) (bad) fucomip into mov loope out lods adc add roll pop sbb or pop and lods and adc mov lods (bad) aas or stc aaa xadd rol push (bad) (bad) (bad) inc jl xor fnop pop sbb sub jp rolb pushf mull cltd ds pop mov mov (bad) jno sub jge push jmp sbb jb dec cmp aad repnz push repz test (bad) incl pusha dec xor inc sub popa imul nop cmpsl or jne int and (bad) (bad) (bad) ljmp push cmpsl and in mov je lods pop and in xchg ficoml popa cld inc add (bad) (bad) jmp cmp idivl addb cmp nop addr16 jle mov fstp or loopne fsubr mov cwtl jge,pt (bad) (bad) call pop xchg icebp sarb dec je aam jbe (bad) xor in adc aaa out mov jmp (bad) (bad) dec fs sbb xor or and in mov in xchg or pop (bad) pushl ds and (bad) decb xor (bad) xor shr out mov adc push mov mov (bad) das ror jmp push leave mov cld stos icebp (bad) dec push xchg mov outsl inc fistpll iret rorl sbb decl popa fs scas mov mov cmpsl (bad) push sbb (bad) call jl and xor aad call jns outsb or (bad) in dec ss scas movsl mov imul adc lods pop lret bound pop adc inc xchg add adc (bad) (bad) (bad) (bad) out out cs outsb sbb in call push outsl aam inc mov loop sub fidivl pop push (bad) (bad) (bad) ljmp (bad) movsb out in mov scas data16 nop fcmovb adc mov mov (bad) (bad) decl enter aad imul repnz pop xor inc push fild (bad) ljmp sbb daa and sbb or decl xor add sbbb pop jns add enter movsb dec (bad) (bad) decl hlt mov in clc dec cmp and fisubrl xchg aad inc (bad) (bad) (bad) decl mov sbb aas cmp push cmpsb aam fistpl xchg fs hlt ljmp clc mov cwtl or xchg into cmp dec mov xor cld (bad) cmpsb push aam popa leave inc pop jns add (bad) subb rep cmpsl mov pushl xchg shr xchg lds xorl add xchg inc fcoml jae lds push push push lds aad (bad) call pushf dec stos cmp adc cmpsl xlat mov dec cmp jp ret push xchg (bad) (bad) jg nop pop sbb ret frstor xor pop jb jae and movsl test pop popaw out cmc (bad) (bad) decl call cmp and cmpsb fwait in sbb sahf loop dec push xchg lock cmp stos mov (bad) (bad) decl or movsl xchg in lock jo pushf mov cltd mov call imul (bad) (bad) decl ss outsl mov push adc mov adc mov outsl cli (bad) jmp lea push dec sub test and lret in inc (bad) decl (bad) lcall cmp and cmp insb pop add adc fidivr cmp movsb sti in iret cld cltd cmp push xchg xor push mov outsl bnd adc (bad) jmp sarl ss scas sahf xlat mov sarl jmp mov ss cli jge stos mov add loopne dec ds adc in push xchg add sub es ds (bad) (bad) jmp aam mov jbe rolb (bad) xor call mov outsl jg pop les mov in sub insb mov mov sub jae (bad) (bad) inc mov das jle cmp dec aam mov xchg lcall or fild xor (bad) decl pushf sarl lock fnstenv (bad) lcall push enter pop int cltd out pop mov lret sarl pop rolb cs sarw push cmpb daa cmc inc push in jnp xchg (bad) (bad) (bad) ljmp js pop jg data16 xchg divb and out pop ss adc pusha int3 lods (bad) (bad) (bad) decl adc es mulb cmp rcll or sub dec (bad) (bad) decl mov clc or fldl sub dec lahf mov icebp pop mov ljmp cli aas stos jle dec fmulp and mov xchg mov push mov hlt aaa test inc aaa in ljmp and pop lods pop (bad) ljmp xchg fimull and aad repnz sub mov cld (bad) (bad) call push mov pop bound inc push std sub nop push xor adc jge idivb jle inc sahf cli cmp mov (bad) (bad) decl test loope sahf icebp or fs mov stos cmp or adc adc push fisubr int fwait (bad) incl dec (bad) sub cmp push scas fs lcall and or out jnp push mov fisubl adc lcall (bad) cmpsl dec add call add sub dec jo test xor jecxz das sar sahf inc mov pop cltd dec jmp shrl dec push movsb or (bad) (bad) fdivl jnp imul jg mov xlat xchg fs ds aam dec add push decb add or scas cmp jp sbb xorl (bad) call mov pop sub add xor xchg dec test mov jmp lret pop incb push adc mov rcll pop (bad) fiadd jecxz jae scas (bad) (bad) mov sub or add repz faddl les pop jbe jg (bad) decl jns jnp push jg adc add dec cmp movsb (bad) (bad) (bad) call push or inc lret sbb cmp int sbb hlt (bad) (bad) (bad) pushl scas mov xor pop mov add movsl js xor in out stos (bad) icebp mov mov fsts adc (bad) int3 ds (bad) jg dec inc xchg sbb push imul pushl mov bound repnz xorl fimull and dec xchg jge mov mov (bad) mov leave sbb sbb pop jl shl mov xchg and adc mov mov xchg xor inc subb jb fldt sub adc pop insb inc dec or pop lret jge (bad) rorb cli decl fimull sbb mov push mov and (bad) (bad) call int arpl xor xchg inc mov sahf (bad) int3 mov popf and (bad) lcall dec and mov repnz pop hlt jle (bad) (bad) call sub lds pop jp daa movsl (bad) out cmp mov mov cwtl adc stos pop add imul ds jmp jnp lret testl popf inc data16 mov jmp (bad) (bad) jmp fidivrl push iret and mov jno pop jge imul clc out inc xchg loopne pop icebp lcall pushf aam test (bad) adc dec sub inc idivb es (bad) (bad) jmp bound or cmc pop mov nop xor xchg (bad) in xchg push cmp (bad) (bad) (bad) call outsl bound dec cmpsl ret mov fnsave or sbb out (bad) (bad) (bad) (bad) mov (bad) rcrl xchg lret pop mov ja adc inc (bad) mov jnp cmp rclb movsl inc gs ds into les fnsave dec (bad) test (bad) (bad) jp sub pop movl fistpl mov lret (bad) (bad) aas and pop add (bad) bound test lea or rsqrtps (bad) popf push fwait mov scas gs push out push xchg call mov out jle mov and and call fwait in iret mov add sub ds daa push push iret hlt pop movsb xchg sti fdivrl (bad) (bad) lcall pop xorl push es pusha mov xchg xor (bad) (bad) (bad) decl push int3 cmp iret cmp pushf sub test add lahf add push (bad) (bad) (bad) (bad) cmp cmp fdivrl xor out rcr leave and setg fdivr (bad) (bad) lcall call pop jno sub sbb xlat xor inc popa inc cmp lret push push cmc cld add pop mov popf mov call push xchg (bad) test nop cmc push jecxz (bad) jg jo or repz cwtl xlat xor aas mov int3 adc jns push cmp (bad) mov dec cmp xchg shr imul jecxz cmp (bad) (bad) (bad) pushl repz into mov cltd jp xor sbb daa es dec add icebp decl addr16 mov push jmp test mov pop (bad) decl out mov sbb or xor mov frstor adc (bad) (bad) incl mov add (bad) mov and es mov hlt call std jl mov jmp add push fnsave xchg stos call jbe push sbb push adc xchg imul jmp (bad) (bad) (bad) (bad) std clc gs lods arpl mov mov out cmp and adc mov mov pushf and out xor mov adc out pop jge ss jl push inc repz loopne (bad) mov imulb dec cltd ss add cmpsl lock cmp (bad) (bad) call (bad) fs insl push cmpl and test cmp fld lea je jnp cmp jns fstps (bad) call rolb sti cltd sbbl sbb (bad) incl jmp mov pushf test ds insl lods mov pop rcl push (bad) (bad) jmp jmp call cmp mov aaa fnstenv call xchg sub pop mov fmull (bad) (bad) push xchg shr pop add mov add and nop (bad) push or mov lcall mov adc xchg mov lock sub jecxz fldenv mov mov mov push or xchg (bad) (bad) (bad) call fcomps (bad) aad loope call movsl pop mov mov push jnp (bad) ljmp jp aam (bad) mov xor push mov or shr dec (bad) cmp decl push or outsb imul push aaa push inc je outsl push xlat into aaa cld loope mov (bad) (bad) decl inc mov add fwait mov fsubl mov xor hlt loope test inc push push outsb pop andl and cmp (bad) call mov insb addr16 lods push adc (bad) jmp jno adc inc add ljmp sar into xor push xchg call inc dec sbb mov sbb (bad) (bad) jmp adc pop ret mov cmp cld ljmp (bad) jg mov call inc push pop shlb push lods adc ds jnp dec iret push lods dec (bad) cmp ds pop mov mov lods mov dec cld add lods add sbb (bad) (bad) ljmp adc std push sahf std lods out out in sub icebp jmp lea sub (bad) jmp jmp enter fcomi jge inc dec (bad) cmovp cmp ja push paddd (bad) lcall mov ljmp sub (bad) (bad) lcall pop popf adc dec lock mov push inc add out into aam cmpb imul sbb mov mov mov adc cwtl (bad) push cmpsl pop mov dec dec loopne stc mov mov mov outsl adc inc test jno mov jle xchg sub hlt icebp sbb push pop sub or decl stos or aaa push movsl ljmp xor push iret cmp xchg pop xlat fsubrl mov xchg jmp add sti add frstor mov jns cmpsb and add js (bad) (bad) jg and or push leave int3 imul lret xchg and imul (bad) (bad) (bad) cli pushf aam insl add xchg sbb movsl sbb ret adc addr16 scas test push xorb test fcomp int sar loope aas inc push punpckhwd add xor (bad) mov je imul enter sub cmpsl lods adc iret lahf aaa shl jecxz lcall sub inc int (bad) jbe push adc jo push (bad) jg mov es and pop addr16 or or cmp jmp jbe (bad) (bad) (bad) jp xchg out outsb sub movsb and adc adc out xchg inc int push push movsl enter dec cli ljmp stos mov or inc mov (bad) jmp and push mov gs in sbb cmc std jle clc pushl or insb cmpsl in enter add inc rcll lret (bad) (bad) ljmp inc or es imul cmp dec cmp lret ljmp sbb test mov sbb fwait and jae lcall hlt jns shl mov decb scas clc (bad) jge and into cwtl sub mov sahf (bad) (bad) (bad) pushl int loop movsb jmp xor adcl pusha data16 std jmp addb (bad) (bad) pushl push xor dec cs (bad) push sbb std adc sbb test adc cmp loop xlat aam aad (bad) ljmp adc fldt lret mov cmpsl gs xchg out gs push lahf gs fmulp lea dec jecxz (bad) push and push xchg lcall sbb push ljmp or and imul loope insl push je mov (bad) lods popa or in lea push test (bad) (bad) call fisubrl sarl cli xorb add mov pop lahf das div std or sar pusha mov inc xor js add ss test (bad) cli lds movsl cmp mov jge int3 test hlt push out sbb or fistpll inc mov mov (bad) sub ds enter lock imul push mull fisubrl (bad) decl adc rolb call sub stc loop mov cmp cwtl std (bad) (bad) (bad) fsubrs sub pop cmp lea dec mov fbld xchg add mov scas xor iret (bad) divl pushl int3 or adc cmpsl and jmp jns test lock ljmp (bad) cld fs out loopne call jge rcrb mov shll (bad) fstps lods loope or cmp imull or push push mov mov xor aas sahf roll xor mov push (bad) mov cmc test or mov mov sub rclb sbb fmulp pop stos imul call add and imul xchg or jnp (bad) out cli decl fs outsl and (bad) pop dec loop in and sub stc (bad) je (bad) (bad) pushl mov fcompl in in aas sbb divb ret jge stc adc divb or clc cmp outsl mov or into leave cmp pop dec insl mov in hlt (bad) (bad) (bad) call or jp popf sub inc jp out push pop dec test jecxz inc cmp mov (bad) jmp sbb jbe jmp dec dec fs mov sbb add faddl ljmp inc jb lods lcall sti (bad) pushl or sbb pop mov ss jo add xchg xchg rclb jg aas sbb jl dec ret mov (bad) (bad) (bad) out push in add jle mov push gs loopne arpl fstpt (bad) sub mov cmp pop (bad) mov adc pushl ficomp (bad) pop rorb das xlat dec push int cli (bad) lcall sbb push pushf js (bad) pop push xchg or (bad) ljmp lret adc shl outsl mov scas cmpsl test or popa out push ljmp xchg pop lock mov cmp cmpsl jp loop,pn sbb jae imul js das jmp xor inc (bad) (bad) (bad) lcall or dec pop mov mov sbb loop mov (bad) (bad) incl cli insl in sbb (bad) in sub xor mov and cmp and (bad) (bad) call jno mov lahf dec jae push adc push lods call jb adc fs (bad) (bad) (bad) jge pushf and sbb mov movsb dec (bad) data16 arpl mov mov into rcrb fcomip jmp mov mov js dec and jno popf (bad) (bad) lcall push fildl jmp sbb xor daa pushf outsl (bad) (bad) incl pop cltd mov das (bad) ss insl outsl xchg leave stos inc mov mov hlt fidiv (bad) (bad) pushl pop popf mov pop adc mov cmp pop xchg cwtl int3 xor sub dec dec xchg pop lret jg pusha cld stos mov inc scas sbb mov add push sub pop mov sbb push xor (bad) mov pop sub icebp add cli pushf sbb pop lret mov pop std daa fnstsw (bad) daa sub push sti add (bad) (bad) mov loopne sbb or jecxz pop stos push ret dec ja lock fcomip call rcr pop mov nop popf sbb out push jl pop (bad) jg movsl loop xor pusha clc (bad) or jmp pushf jnp (bad) decl fstl xchg mov sub mov test (bad) (bad) (bad) jmp ffreep sahf bound popa scas idiv or jp push std gs push dec fistpl or dec cmpsb dec pop push lock lahf xlat icebp dec insb jecxz xchg das pop jecxz loop outsb les (bad) (bad) incl subb incb cmp sub (bad) incl add addr16 pop or or enter loope push lock cmp mov lret (bad) (bad) (bad) fildll jns cli cmpsb or cs fwait sub rcl jae jg add imul add (bad) pop imul popa pushf pop rcll sub out jge sbbl inc ljmp fwait add daa mov mov sbb inc in mov (bad) (bad) (bad) call jne mov push xchg or cmpsb out xchg fmulp lock inc jg dec std adc pop add mov loope (bad) (bad) (bad) pushl ja dec and shrl mov mov inc ds test mov mov pop mov cmp lcall adc pop jge push mov leave cmp fidivrl pop data16 jle aam (bad) (bad) ljmp out mov cmp or sti sub out outsb pop in jb,pt jnp inc mov (bad) (bad) (bad) fstpl mov and gs popf push sub push pop jp cwtl pop push rorb (bad) insb pop (bad) pushl sbb xchg dec popa or add out jecxz leave push (bad) (bad) (bad) lcall dec in lods pop pop pop lahf sbb xchg cmpsb inc sbb in pop les mov icebp or clc adc popl or leave fisttpll add lcall pushl mov pop and and mov cmp pop fsubr loop push or decl and and push pusha xchg (bad) (bad) xor pop ds (bad) (bad) incl popf mov xor leave nop idivl (bad) or test aam loop jnp push enter (bad) pushl add out vmwrite (bad) mov or (bad) (bad) decl ja divl mov pop fucomp cld dec pop jmp sbb hlt mull (bad) (bad) (bad) ljmp repnz inc nop scas out dec sbb (bad) (bad) jbe sub sbb mov out xor decl sti cmpsl or mov (bad) jg and ss dec pop fldt mov gs and (bad) (bad) (bad) (bad) std pop push xchg xchg out pushf mov mov cmp xchg cmp jl dec int imul addl cmpsb ds cmp jmp jmp sub lods (bad) (bad) jmp sub cmp cld xchg xchg (bad) in les fcos fwait sahf pop rolb js pop sbb push push jmp xchg push mov roll push in push xchg mov jmp jge aas xchg cmp cmpsb push cmp call push or pop shlb loop push dec cs outsl clc (bad) jmp and adc (bad) pop (bad) hlt mov mov dec ljmp decl mov xor sbb xchg jge dec pop cmp ret (bad) lcall xor arpl mov fld cmp mov jb fcomip (bad) (bad) (bad) inc outsb mov jp pop dec ljmp ret xchg cmp insl cld cmp (bad) (bad) (bad) (bad) jmp push or or inc mov cwtl fdivl and jmp scas adc inc call inc mov jns dec out clc mov push jl cmp (bad) (bad) call in add outsl dec cs dec push push mov sbb (bad) ljmp insb mov mov pusha inc pop (bad) mov fwait xor adc lcall test (bad) (bad) js loopne ret push aaa arpl addr16 sbb sbb adc and incl cmpsb fimul dec in or incb cmc out add cmp imul xlat xor pushf mov jg add xor ret (bad) in mov cmp mov (bad) (bad) push stc aad data16 ss sub xchg clc adc push xor loop mov or xchg jo (bad) (bad) decl out cmc movsl cli cmp push (bad) jle dec decb sub insb sbb cltd pushf push cmpsl aam std call and and xchg scas xor loope and mov fdivrp xor cmpsb repz pop pop cmp (bad) (bad) decl mov mov cmc in or mov xor cvtdq2ps (bad) (bad) (bad) call push mov inc or add push (bad) repz (bad) ljmp inc not (bad) (bad) mov pop iret and pop arpl mov pop rcrl push mov (bad) (bad) lcall rclb or sub push leave notb inc cmc push jp stc bound sub (bad) (bad) call cmp pop (bad) mov mov and add scas jae pop fisttp add mov insl (bad) (bad) (bad) jmp pop push push fildll js test lret mov jns loope stc loop mov cld lock (bad) (bad) (bad) cmp push pusha cmp mov mov fnstcw mov pop sub sbb pusha popa iret cmpsl imul xor cmp mov push inc std mov pop iret popa mov mov mov (bad) cld adc or fxam mov xchg mov cmpb loop sarl pushl (bad) adc jns sbb scas sub movsl add (bad) cli cmc lret mov in mov sub and cmc je cmc lcall call push jecxz push sub xor and dec lds xor std (bad) (bad) incl outsl adc push out mov adc xor mov test cmpsb outsl call aaa (bad) dec jle push popa mov push mov push test pop nop cmp (bad) loopne cmp (bad) (bad) ljmp jns mov xbegin mov lret gs and mov and mov xchg dec (bad) iret cmp (bad) (bad) pushl sub dec aad push fistpll icebp sahf adc fmull mov jnp lahf and push in jne add (bad) or cmp ja cmpsl cmpsb xchg xrelease jecxz jb cltd pop jg fdivrp xor xor mov pop movl (bad) fildl sahf sahf mov outsl dec pop mov call pusha adc fiaddl xchg cmc call mov out push pop jns pop xchg cmpsl sub fidivr lods mov add mov xchg sub stos (bad) call loopne nop xchg fbld shlb cmpsl flds xchg (bad) (bad) (bad) jmp push dec xor mov rclb inc lea pop out xchg xchg push fild cmp jg (bad) (bad) (bad) (bad) ds (bad) xchg sub mov and or insl pop xchg xlat lea sub adc insb (bad) cmp (bad) aas add push cmpsb pop xor jns test xlat dec mov sar std (bad) call or (bad) push cwtl dec cld jle mov in xor (bad) (bad) (bad) incl test sbb xchg psubd lea cwtl andl les (bad) pushl add xchg stc add or mov out daa xchg loopne ret loopne addl scas adc (bad) (bad) (bad) call mov sub mov mov mov fimull lock adc xchg lahf mov dec jno rcrb push jne mov aam jns mov xor dec push (bad) ljmp add inc aas sub inc mov sub loope inc ret sub mov mov repz in inc out adc (bad) incl mov mov outsb ljmp xchg nop scas js ljmp inc ljmp fnop out cwtl pop mov pop (bad) dec std (bad) decl push in outsl pop data16 inc mov mov movsb (bad) (bad) jg mov xor stos imul adc aaa cld pop loopne add dec out movsl xchg adc psubq stos test das rcl js pop jnp decl (bad) mov fcmovb mov bswap sub jbe bnd clc fistl fldl cwtl pop out and jmp mov ret dec out cld sarl mov lcall sub xor mov jns cmp pushf jp cmpsl insl mov (bad) (bad) (bad) mov (bad) push cmpsb sub movsl add and ja mov incl rol xchg (bad) (bad) decl je sbb xor cmp ret cmp bound sbb mov scas aam fisttp push mov mov scas iret cld cmp sahf (bad) (bad) incl dec mov aas ret adc push pop rol push scas jno (bad) (bad) (bad) (bad) incl loopne test cs inc loopne lea add pushf add jns push mov dec add sub add mov lods mov popa (bad) (bad) (bad) pushl xchg cltd mov popa hlt push dec rclb xchg dec int sub cmp mov js es (bad) (bad) cmp or and (bad) push jno mov push test inc dec mov xchg and cld (bad) (bad) decl pop push addr16 fnsave out adc dec fdivr fbstp push or inc sub adc mov jg or pop ja or rcll ljmp ljmp add arpl xor pop shl test bound lret sub scas adc ljmp sahf (bad) daa stos add mov mov jne jge aaa jg imul (bad) (bad) jns pop or and and push xchg pop into adc xlat (bad) ljmp lret cli fwait and add and jg pop mov es addr16 mov push (bad) (bad) pushl and lret lret xchg inc ret fcmovne cmp outsl int ja (bad) (bad) (bad) decl das jns jl pusha and movsl mov setns jecxz gs sub (bad) call jae pusha dec adc fnstsw pop push dec loop adc ss out cli (bad) pushl lods scas outsl into add push fwait and or lock aam (bad) sub (bad) (bad) decl add cmp push rorl enter insl mov and add mov cld dec xchg mov rcll xchg lods and (bad) (bad) (bad) pushl xchg movsl dec nop adc outsl in push loope aas inc and int3 xchg (bad) adc xchg and (bad) pushl adc jmp jno xchg cwtl in mov (bad) (bad) (bad) decl aaa clc sub push lret fnsave or ja jg call sbb mov mov rcll popf int jg mov decl mov sub sbb xchg cmpsb cwtl xlat dec adc and enter stos lods xchg ret ja out test ss mov xlat ja (bad) dec cmpsb push sub and mov stc loopne sub stos in bound adc xchg (bad) call inc into mov aam mov data16 xor (bad) (bad) (bad) cmp inc adc popf in scas and or add addr16 jg loopne (bad) (bad) incl or sub xchg daa (bad) addr16 loopne mov mulb imul les lcall jecxz push jg xchg gs push jmp movsl fidivr and (bad) decl adc mov inc dec outsl mov sub mov pop jge xor adc shrb (bad) pushl mov fldcw les jg sub mov mulb pop inc gs xchg jmp jmp mov jg movsl ljmp mov adc loope jmp cmc inc je out push or popa in add movsl or xlat push sub lods imul repz out push (bad) out adc lods daa push mov pop xchg cmp pop mov inc push push aaa lods aas and xor lds push pop sarl (bad) lret (bad) (bad) (bad) jmp cmp ror shrl jl add pusha jns sahf lret pop adc add sar incl aaa data16 (bad) ss push popa pop fimull cwtl add cs (bad) pushl mov ret lods lds insl jecxz loopne fdivs pop inc fistpll (bad) (bad) (bad) mov mov sti daa xchg pusha repnz addr16 add xor pusha out dec cmp icebp repz pop mov lcall sahf adc mov stos mul push cmp xor lcall sahf and sub popa ret (bad) inc mov sub mov jl sbb mov sbb push (bad) (bad) (bad) incl cld jle adc cmc cmp stos (bad) out push imul fidiv ljmp cli repnz leave clc call lock imul (bad) (bad) (bad) (bad) jl adc dec mov or mov sbb push jg pop pop call inc outsb mov adc mov push dec and arpl (bad) mov xor and xor enter sub and decl inc (bad) repnz mov daa mov sub jbe or add imul sbb xor and sbb add scas (bad) call fcmovnbe or sub cmp sbb dec cmp dec dec in mov push cmpsb sbb xchg sub cmp arpl xor cmpsb (bad) xor pusha push stc add (bad) (bad) lcall fbstp adc dec dec inc pop lahf jge icebp subl xorb adc (bad) (bad) pushl pop insl and add xchg movsb fs shrl dec rolb (bad) jg or sbb add cld mov out outsl jg cmc mov cmp out scas cli call pop test mov adc (bad) add xor jns (bad) (bad) (bad) ljmp aam outsl rorl or mov mov pop jae scas loopne add (bad) (bad) (bad) pushl fwait pop in int cmp clc and xchg sub mov push or repnz (bad) (bad) (bad) cmp ja pop fldt inc addr16 mov call (bad) call fstpt dec popf hlt fstps jno xor test ja inc adc sarb pop inc cltd les jle out (bad) lock (bad) pushl dec fldt cmp pop inc scas cs sub pusha and aam xchg std pushl push pop dec mov loope ss out mov and mov pushl rolb out lret inc imul popa push mov pop jmp (bad) lcall push loop jmp xchg sqrtps stos rolb (bad) mov or sar loope mov sarb mov call sbb fldcw cli cmp add adc mov sub (bad) (bad) mov dec inc xor pushf inc and adc sbb xchg adc sub cmpsl (bad) lcall mov push cmpsb loop adc outsl lcall repz inc rorl (bad) (bad) (bad) decl (bad) pop mov adc add pop push fstl xchg push sub push push push jae xor (bad) (bad) push dec outsb jo mov out cwtl mov cmp testb imul (bad) (bad) pushl jg mov xchg shrl jecxz out insb cli pushl (bad) ljmp xor imul loop in or xor (bad) (bad) (bad) (bad) decl add roll inc daa fwait repz in or fsts adcl inc mov (bad) (bad) lcall ljmp sbb inc and outsb cmp pop test inc aad xchg sbb (bad) fcomip sub sarb loop xchg xor aam jecxz iret test (bad) ljmp out cmp notl inc sbb sub cli decl xchg dec mov insl mov rcrb data16 (bad) (bad) jmp xor jne repz inc int3 test aas arpl pop jge xor cld inc rorb (bad) (bad) (bad) (bad) ljmp imul arpl insb aad jns add enter fdivl aad (bad) (bad) decl mov repnz mov mov pop pop inc sub outsl shlb adc mov lcall pop out sub jno lret add push rclb sarl lret mov inc imul (bad) call dec scas mov inc inc fnstcw or (bad) jne stos pusha pusha jmp mov daa (bad) (bad) ljmp adc loopne sub daa mov jg notb gs xchg inc (bad) (bad) (bad) (bad) jl mov mov push lds shl mov dec fnsave mov fldl (bad) (bad) mov fsubrp andl xor sub cmp (bad) (bad) pushl xchg inc dec ficompl sahf enter add inc mov insl cli cltd sbb xor inc (bad) mov shl ret cltd xchg pop inc test insb xlat or imul fstl mov (bad) (bad) inc push xor inc fisubl dec add daa push (bad) xor repz ljmp sar (bad) (bad) jmp mov cli gs xlat sub repz stos push push inc std pop cmp (bad) decl mov xor mov jne scas push lea cltd or or (bad) (bad) incl rcrl add jl jmp movb mov jmp test (bad) incl pop add nop jno enter lea and cli cld dec es mov pop stc mov lahf push and pop sar aaa repnz dec arpl add or jne aaa ljmp arpl and sar (bad) jmp int3 dec cmpb out add pusha dec cmp mov sub je es call (bad) (bad) incl push repz clc shl mov decl push fbld fmul lods or mov es decb sbb mov mov movsb insb dec std sub test cs xchg pop and popf and in push cmpsb cmpl xchg (bad) (bad) (bad) lcall clc subl mov xchg aad scas cmp rcll lret mov (bad) (bad) lcall dec (bad) xor pop add jae cli mov xchg dec lods jns not mov mov call and (bad) pop mov loope mov subl add fidivl mov jle mov ds sbb (bad) (bad) inc lods lahf test inc jnp push lret xchg fstpl ljmp adc inc mov cld js ds mov xorb aad cmpl mov lock in ret dec mov cld jb mov mov iret in (bad) (bad) pushl sub aad push pop mov mov mov lahf (bad) call sbb sub push xor (bad) (bad) (bad) (bad) js mov lahf xlat test pop or push mov ficoml push pusha clc mov (bad) (bad) (bad) ljmp movsl xchg shl xchg pop push mov xchg repnz pop icebp dec add xorl ja in or shl dec cli add jae rclb outsb mov xchg sbb pushf gs call adc add sbb cmp (bad) call mov adc mov pop add cs inc mov cs insl ljmp lcall cmp mov repnz stos add pop mov (bad) push scas cmp and (bad) decl xchg cmp fsubrp fisub int3 pop adc jg call mov inc (bad) fidivr (bad) (bad) (bad) (bad) jge stos or addb cmp (bad) and fistl xchg incl jae xchg pop out xchg cld arpl push in cmp mov popf push pop ds aas movsb gs insb cwtl mov mov cld (bad) (bad) decl (bad) inc in xor cmp ret xchg ficomp or mov popa ds mov enter vpmulhuw (bad) fcomp add scas popf dec sarl add mov mov jg (bad) (bad) ljmp sub test sub lret outsl lcall xchg dec cmc mov xchg xchg ljmp pop loope fimul cmpsl jmp cmc push adc mov (bad) (bad) mov mov adc std ss arpl jmp mov ds xlat (bad) (bad) (bad) (bad) fistp adc jb mov mov sub movsb push xlat lret addr16 (bad) (bad) cli out mov pop aam or cmc inc mov jecxz loope gs mov loop sbb in add (bad) jg dec rorl out lcall and jnp (bad) (bad) jg pop iret mov mov aam mov (bad) mov mov (bad) (bad) (bad) decl pop inc test or push jmp jnp jp jo pop in rol (bad) (bad) (bad) (bad) call sarb mov push clc dec pop stc in push outsb xchg pusha cli or ds xchg es ljmp mov mov inc mov dec inc fwait pop leave and std (bad) (bad) (bad) mov cmp adc pop (bad) jo bnd pop jmp jle pop sbb sbb test lcall mov jb orl mov mov cmc das add inc jmp insb insl (bad) pop ds (bad) (bad) incl lcall cltd dec out call pop rcll repnz xor sbb mov (bad) (bad) (bad) mov sub in movntq out inc cmp adc mov bound ljmp stc mov pusha or jnp push and inc inc data16 push sbb sub rolb push mov fcmove test xor mov loope sub (bad) (bad) jg pop dec cwtl add pop xchg and xchg push iret jnp pushf adc pop (bad) (bad) (bad) (bad) ljmp cltd aad insl dec pop push xchg cli and imul (bad) xor jae cmp and inc gs aas ss add insb lods imul push jno jmp in push jge insb (bad) jg test (bad) (bad) decl scas adc (bad) icebp mov dec mov mov xchg repnz mov dec inc cmp jl test hlt insl mov xchg ss mov pushf (bad) (bad) call adc xchg mov inc xlat xchg add mov rolb push push sbb pop movsl inc (bad) inc dec movsl inc pusha sarl sub clc (bad) decl cld push sbb scas sub pusha sahf jecxz or leave test loope call mov cld outsl xor xor mov cmp out bound mov inc test cmp sub push (bad) (bad) (bad) (bad) fcomps push cmp (bad) fstpl in inc flds cli push xchg adc or push (bad) (bad) je jge or sti out (bad) mov (bad) mov mov jmp ljmp daa rclb inc sbb aaa and sbb (bad) call and xchg xchg ret add mov stos aad dec xor add and repnz (bad) mov call cli adc mov cmp je jecxz loop and cltd sarb cwtl mov sub clc mov sahf repnz cmp (bad) (bad) (bad) (bad) jg jp xor adc loope fadd sub les push aaa push daa pusha dec (bad) (bad) incl loopne scas pop mov stc mov pop or or (bad) incl sub push jge gs cmpsl ljmp sbb jno outsl sub cmp ljmp and popf fbstp dec outsl enter leave mov (bad) (bad) fsubrl popa push or mov inc int push js and stos cli (bad) (bad) dec sti addb jbe cmp jbe ret enter fs inc (bad) incl ds pop dec pop (bad) sti cld fisttpl mov cmpsb or jecxz adc ds shrb rol jns std lea (bad) (bad) (bad) lcall inc js pop xchg jge iret mov insb cmpsl and roll adc inc lock (bad) (bad) push mov in sbb les dec daa jp cli jb movsb cmpsl dec into movsb in in add mov mov sbb add inc xchg mov inc push adc pop jg inc (bad) aaa add (bad) lcall es xchg imul dec (bad) (bad) (bad) decl cmp sub stc in mov cmp and int mov dec lahf pop stos sub fistpl (bad) (bad) mov lods sub test jge iret push out adc inc popa hlt imul (bad) adc sub mov push js dec jl xchg inc pop jge lret adc cmp inc (bad) (bad) pushl xor add xchg and mov xor adc pop mov push mov jg das jecxz push xchg xor roll xor add fldcw scas fwait adc add (bad) ret out ret mov movsb (bad) and clc cli (bad) (bad) decl pop pop jl scas pusha (bad) add repz xchg adc inc lcall lods lds popa adcl scas cli mov and ret sbb (bad) sbb xor jecxz jp clc (bad) mov xor adcl mov inc mov pop imul mov adc mov ds das lea vunpcklps je das cli fldt lret inc aam stos pop insb sbb xchg adc pop sub jp andl jno (bad) (bad) pushl cmp out push insb sbb (bad) clc adc fsubr xor int andl (bad) rcrb mov loopne dec fbstp mov mov sub sub cli or add je fdivrl xchg lcall mov les subb push and adc sub jle orb dec gs gs loopne dec mov imul inc movsb mov (bad) incl aas test scas pop fstpt mov dec jb cmp call push xchg xchg mov call cmpsb in push push mov iret add push (bad) lods dec cwtl xchg ret cltd rolb or lcall inc or ret testl call push or fs jle add jo mov xorl jl fs lcall jns cmp popa cmc xchg sbb dec push jmp or and and sti (bad) out shlb insb cmp adc xchg sbb pop aaa dec xlat lret push jg (bad) call xchg jns xchg movsl pop inc cmpsl ret sub sbb in and mov (bad) pushl dec pop adc rorb out addr16 adc cltd jp lods jo inc mov lock scas mov (bad) add cmc insl sti rcll cld decl pop lret jne bound cmpsl push icebp mov bound sub cld pop jecxz dec and (bad) fbld cmp mov rcrl sbb je (bad) (bad) decl fdivrs jns pop repz inc test xchg std xchg lods inc jne (bad) fist mov adc imul sub inc lret sub pushf insl scas cmp cmpsl sbb jp fcoml out (bad) (bad) lcall sub fxch mov sbb sar sub jnp mov xchg adc (bad) (bad) incl cmp push rcl popf mov popa sbb int and sahf repnz pushl ds loope mov in add mov dec (bad) mov adc pop stos pop push add mov pop int3 ljmp push (bad) mov inc mov mov mov inc add adc mov pop sub sbb mov mov jns jns mov lock dec mov mov test incl (bad) (bad) (bad) jg and push jno mov mov adc js push adc xchg aaa mov pop addl cs out push cld (bad) (bad) (bad) mov aaa jae lea cmpb imul test or or cwtl jecxz insb mov (bad) lcall fwait lods xchg insl gs fdiv xchg mov cmp jnp (bad) std inc test xchg push push ljmp cld ss sbb mov aad loope mov (bad) ljmp test pop fidivr add daa mov hlt cmpsb cld sub push pushf inc adc fdivrp decl lock sahf stc xchg sbb mov lds test icebp jecxz (bad) jg adc fs test jnp arpl lods dec fiadd xchg lea add jmp (bad) (bad) (bad) push push out xor xor stc push stos jbe inc (bad) xor (bad) jmp (bad) incl js shl addl mov imul push ficompl mov pop mov sbb cltd xor mov push mov cmp (bad) (bad) jg sub iret adc and sbb loopne and (bad) call cmp (bad) incl pop (bad) out mov xchg inc jo mov (bad) (bad) dec mov mov ret jb dec xchg jno pop je es pusha adc and addr16 (bad) out pop (bad) (bad) (bad) dec push lret and sbb inc jbe inc push sahf xor test pushf std sub lock (bad) call adc cltd jns fcoml movsb pop jp add outsb sbb add (bad) decl adc pop sub test fild (bad) jmp push mov fstpt repnz (bad) push jbe lock pop push inc call int3 pusha ror loopne cmp mov rcr sub pusha push (bad) (bad) call inc pop xchg dec outsb ret cwtl lret add test decl pop idivl lret lahf mov jne mov int enter insl lcall adc xchg test ds (bad) (bad) incl fildl in icebp push or lret pop insl pop jmp (bad) pusha jecxz dec add (bad) (bad) (bad) jmp in xchg mul (bad) int3 int add insl aad mov loopne add jl lahf inc add ret orl pop (bad) (bad) (bad) call lcall cmpl cmp arpl mov call mov dec jmp adc outsl push xor jmp lcall scas xchg cmp push jle dec sbb (bad) lcall aas lret mov sub cld dec aad (bad) (bad) (bad) (bad) mov pop pop rolb jg inc or aam popl cmp outsb je sbb (bad) (bad) incl pop loop mov xchg mov rcr dec mov pop adc ja ret leave and xor aas nop and cmp mov cmp rclb push stos (bad) int (bad) mov test or nop mov stos push jge les push mov mov push jge jge cmpsl call clc imul lcall gs xchg (bad) pop (bad) (bad) (bad) lcall and sahf js mov arpl subb aas incl sbb decl scas mov inc xorl in (bad) (bad) (bad) decl fs shrl loopne rcll xchg (bad) and or (bad) call imul daa lret mov stc xchg out test repz arpl cmp ja mov (bad) (bad) ljmp dec cmp imul dec enter cmp test in adc enter pop (bad) (bad) (bad) pushl sub jle mov and dec lcall orb (bad) (bad) jmp cli cmpsl les imul ljmp lock in lods ds xor imul (bad) (bad) (bad) call hlt jo mov into pop pop out leave sbb and (bad) and add popa fcomip (bad) (bad) cmp push in jle ja add mov mov or (bad) (bad) ljmp mov (bad) leave inc lods xlat pop sub sub sbb stc shll out (bad) (bad) (bad) inc inc mov stos adc or stos iret mov add push in jmp or (bad) (bad) push sub xchg std push std sbb dec enter rcll ficom mov xchg or sti pusha andl addr16 ss cmc rorb push call xchg jne es or sar (bad) dec push incl jg add cmp jge xor push incl jl sub xlat mov hlt (bad) incl jp pop int3 jmp push movsl je sbb mov (bad) lcall adc out mov xchg adc lods sub cmp incl and add test inc push or dec xchg roll (bad) call fisttp dec sahf icebp adc push xchg popf bound inc pop or inc iret mov or dec jg lock ljmp xchg push jbe stos pusha outsl sub stos sbbl pop subl (bad) incl es in sub loope mov xor sbb jg xor (bad) (bad) lret (bad) lcall mov push pop pop imulb sub arpl shrl cmp pop movsl jge les xchg (bad) dec mov mov lcall lock push mov (bad) cmp push and nop mov lock dec iret (bad) (bad) (bad) jmp xchg outsl fcoms xor xchg push lret fisttp sti inc jns dec (bad) (bad) (bad) jmp mov out std dec xor push daa or inc push pop sub jns gs (bad) (bad) (bad) call mov test stc jp inc mov enter inc enter dec xacquire incl out mov mov imul lcall inc imul pushf add mov shll or mov dec lcall ljmp loop xlat xchg pop mov push rcrl cld aas lods (bad) decl lock xchg xchg sbb mov aam inc jg incl lea jns xchg inc inc push mov xchg and (bad) (bad) (bad) push inc stos ljmp outsl imul stc sbb fwait (bad) mov in repnz loopne loope movsb mov or inc push xor xor jle mov (bad) lcall jns,pt adc or jo notl ljmp mov std adc mov ds icebp pop loop adc (bad) (bad) call pop sbb (bad) loope ror lea fsub (bad) mov mov sub (bad) xchg sahf faddl sbb stos xor push lock add insl sti in js imul inc jae cmpsb pop ret mov mov jo roll (bad) adc cmp (bad) pop xorl fcoms dec inc mov stc pop fwait nop pop push daa and repnz (bad) (bad) (bad) decl pop leave inc cmp cmp popf sub aaa ds jge mov icebp or fcomip mov push xchg (bad) (bad) (bad) jmp ds aas inc call push les sbb jmp (bad) (bad) (bad) call (bad) jno in jo add push leave sub icebp mov jmp mov (bad) (bad) (bad) (bad) cld test insl adc outsl inc (bad) repz mov popa cltd cmpsl incl push mov std (bad) fsubrp mov ficompl push add es xor (bad) (bad) lcall lret fs pop icebp in xchg mov aaa icebp xor xlat outsl fldt dec push add sub std jbe mov sbb decl or pop fsubl out mov (bad) (bad) fild outsl sbb cmp and lfs xrelease lods jg (bad) (bad) jge adc cmpl xlat jge dec in insl add jg aad (bad) (bad) lcall push fstpt adc pop mov add pop sbb xchg jno inc test (bad) (bad) mov xchg fwait push xchg leave into jno sub mov xor bound sbb mov fcoms sub sahf mov icebp daa pop call cltd stos ret cmp daa fsubl int3 jg pop clc dec jp ds pop cmp xchg sub (bad) (bad) decl fcmovne sub mul (bad) jge pop xor dec xchg mov sub leave (bad) (bad) (bad) (bad) stc insl neg and mov movsl stos cs jl pop aas popf pusha mov and dec es ret loop lea jg (bad) jmp cmp cmc (bad) das pop lcall mov sbb ljmp lods out or sub fsubrs (bad) (bad) incl adcl and dec pop sbb lods stos jge ffreep ja enter and iret lock insb add or push xor mov iret daa xorl (bad) loop jg incl sub aas je and daa mov movsl fldl out inc leave int mov (bad) mov cli inc hlt mov (bad) push push adc loopne mov jb jle mov mov out gs cltd pop ljmp clc mov cmpsb imulb or (bad) cmp sub std adc movsb adc add out xor pop mov sar sub mov rcl ret lcall pop mov add stos jge out shl pop std nop fdivrp add movsb or fdecstp (bad) ljmp jl push mov test add enter inc iret (bad) (bad) mov adc stc inc dec iret cmp mov pop sbb adc jge xchg (bad) (bad) (bad) jmp aaa and push mov out das out mov cmp pop (bad) mov jle incl or mov dec sub jp push (bad) or jg sar pop lret jnp lock jb dec ret push sbb cmpsb lds pushl rcr sub push movsb dec mov ret push lret fildll pop lcall les mov icebp adc (bad) (bad) push pop sub leave xchg into cmp cltd or aam jg fmull jmp fistl cld ja (bad) pushl and jmp mov andb xchg mov jg iret or (bad) (bad) sti add mov xchg sbb add or jecxz sub decl testb cltd add popf ret inc out inc dec mov repz mov push mov inc aas ljmp std adc mov insl add lret clc pop sahf (bad) jecxz and jb es and dec or stos lcall fs repnz popa push test jns inc (bad) (bad) (bad) pushl mov sti sti pusha in inc mov cmp cmpsb push pop inc pop icebp sub aad (bad) (bad) (bad) ljmp dec push mov and inc xor (bad) shr jle inc mov stos mov and fcos outsl cli lcall jmp jo lea push imulb (bad) lret adc call cmpsl fwait repz imul movsb sbb cmp mov sub loopne test add rcl out js pusha mov sbb cli (bad) call repnz and shrb scas mov xchg or idivb push les mov sti incb or insl out (bad) (bad) (bad) jmp or rcr subl sub xchg scas cmpsl mov repz pop (bad) (bad) (bad) jmp mov sub ret iret and dec or mov loopne pop adc in push xor push decb mov js (bad) lods sub mov subb sub leave or push int adcl into sbb lret jae xor inc aad (bad) (bad) (bad) (bad) cli rcr outsl fcompl push clc out or or into dec imul sahf scas inc hlt push cli call scas sub xchg lret (bad) mov jno repz ljmp out add cmp int3 jg les fidiv cmp (bad) mov aaa jae mov sahf cld (bad) (bad) (bad) in inc icebp inc mov inc cwtl mov fwait aas int3 sub popa in jne iret ss mov (bad) jg or out mov jmp aaa cld (bad) pushl mov or xor sub out enter mov dec sbb movsl dec mov out repnz push (bad) jg mov sti mov fxch xorl and mov cmp test lahf (bad) (bad) (bad) push inc insb in lret push popf lret cld insl jle pop je scas push xchg (bad) jno inc cwtl dec dec (bad) mov jbe fdivrl loop cmpsb pop outsl xchg and mov cmpsl push (bad) (bad) ljmp push lahf inc add rcrl imul insl pop jge (bad) (bad) (bad) mov insb cmp jmp xor lds mov sbb lahf lods inc jg dec std repz xor js (bad) (bad) (bad) inc push mov xchg sub movsb fcomps imul out fwait loopne lahf fmull (bad) ljmp stos lea lods push inc cmp xchg ljmp (bad) mov xchg js sbb jbe (bad) (bad) jnp add mov addr16 jecxz (bad) fildl jl test call sub mov push out std test iret sbb sbb (bad) (bad) mov ljmp or rorl cmp jl adc (bad) (bad) call ljmp jmp scas je mov push subb stos cmc outsb inc cli lret mov push out rcrb dec xlat xchg sar fdivrs cmc mov or mov inc push mov and data16 (bad) (bad) (bad) jl popf cmp cmp fidivr out mov and movsb cmpsb pop fs sarl (bad) mov insw push lcall mov xor push fdivrs aaa sub daa loopne inc mov jmp loopne xchg xchg jne cmp test xor outsl xchg (bad) mov dec sub jge insl dec and leave adcl repnz push inc dec xorl mov incl push mov addr16 pop ficomp sub push int3 and ds aas daa jmp repz (bad) (bad) (bad) fistpll insb test dec adc and jl sbb sbb dec or out xor call mov mov les pop mov f2xm1 lds stos ret mov adc (bad) (bad) (bad) lcall cmp sbbl dec xlat das push loopne clc and push rol rolb (bad) decl (bad) adc cld in out jae dec fistp pop clc insl int3 fs inc add popf stos add lcall gs inc std lock insb xchg mov cmpsb sarb mov mov (bad) (bad) fcomip sub dec dec push sbb mov cmp add sar adc fisubrl fiadd insl jl (bad) (bad) (bad) (bad) push and pop cmc mov int3 insb test xlat xchg ss mov fstpt push lret pushl cmp aam rolb jnp les adc (bad) (bad) jmp push jb sub push pop cmpsb add xor jle adc (bad) call es iret stc mov or inc jg ljmp or mov mov nop mov and xor cli (bad) xchg or jne (bad) inc xor push xor cmc int jmp fwait cmp (bad) pop cmp cltd dec add mov add jb inc mov mov pop imul jg shrl pop push ds pop mov faddp push lahf lods inc in (bad) adc adc cmpsl insb sbb or mov (bad) mov pop cli mov (bad) call in or mov jmp adc mov movsl mov (bad) (bad) (bad) pushl fimull adc add cmp loop cs push xor (bad) (bad) (bad) incl fwait cltd pop mov add xchg push mov jns fnstenv push addb dec and loopne test sub cmp and (bad) pushl inc push clc loop jbe jae into pop fsubrs inc dec sub xor (bad) (bad) lcall rcl mov ja ljmp sbb mov push addr16 out aaa call jg xlat into push jno push add or lcall push or mov mov mov push (bad) mov dec cmp (bad) (bad) flds ret add loope and movsl adc aad cli lock (bad) (bad) call pushf sahf dec mov jb mov mov jecxz jo (bad) (bad) ljmp out stc mov sarl inc dec dec sbb pop loope sub jne mov (bad) (bad) (bad) call rcll push add inc and mov lret mov or (bad) mov pushl mov aam call xchg mov xchg adc enter (bad) (bad) (bad) incl push or or dec mov mov stos mov out and add pop (bad) (bad) decl xchg fwait inc enter inc popf xchg dec xor shlb xor push (bad) fildll ds je into xor aas fldenv (bad) mov push ja outsl clc incl add pop mov add push mov in pop add aas fdivr (bad) (bad) pushl sbbl int3 mov xlat inc call xchg pop or sbb imul rorl std push lea inc sbb aam inc jge pop add mov (bad) fildll ja mov adc mov je out (bad) cwtl sbb test (bad) decl lods adc addr16 and ret out mov push jge sub ds pop (bad) sar push mov and push out xchg sahf inc fcos (bad) pushl mov jl mov leave in enter sub inc push jno setle lods dec and dec cld (bad) (bad) cmp out cmp out lods sbb (bad) pop fwait popa (bad) (bad) jg push inc mov inc je pop or cvtps2pd or sub jmp push inc outsb shll adc int fcomip (bad) jg (bad) pop mov jne mov jns pop enter push mov (bad) (bad) (bad) (bad) cmp cmp lods pop push jmp ret adc call lock (bad) (bad) dec scas mov rcr mov dec (bad) fsubr xchg in add ret mov cltd push adc mov (bad) (bad) jmp cs (bad) jae lahf fstl jp dec mov outsl add orb mov iret push fincstp lret cmp push push pop out (bad) ljmp pop sub (bad) inc stos into into inc js lret clc nop lahf (bad) notb dec cld mov inc mov (bad) hlt pop adc iret pushaw mov les mov xchg cli mov loop mov cwtl pushf xchg jno fdivrl push sbb add lret add daa lock pop lea scas das sar and and sbb mov and mov cmp outsl xor int3 push repz mov out sbb lods pop (bad) jmp push insl lret adc out sub jb mov in in and mov fwait (bad) (bad) (bad) jge pushl mov mov sub outsb inc sbb call mov sar (bad) (bad) (bad) mov push mov inc outsl mov push movsl pusha imul loope add xlat call (bad) (bad) call mov pushf (bad) mov pop xchg mov scas push loope (bad) sub cld inc jbe (bad) decl icebp je dec addr16 or mov lock or mov cmp jl fwait lcall dec mov add (bad) ljmp ja mov popf and mov and push scas jmp inc loope push lea imul or pop pop ljmp add repz pop adc cwtl fisubrl stos lds or (bad) (bad) (bad) jmp cmp rorb cbtw std xchg jns sub xlat adc test jl fbstp aad stos (bad) (bad) aas sahf imul in cmpsl (bad) lret scas fidiv insb dec mov js inc (bad) (bad) (bad) call push or daa dec test arpl mov arpl and (bad) call scas fisubl loope popa outsb nop jge jl aam ret leave jmp ljmp dec pop push mov mov mov adc or sbbb pop and mov jmp in pop ds lret mov shlb (bad) jmp inc test dec push fisttpl or lods lret xchg jl push pop sub jno (bad) (bad) lcall mov loopne pop push xchg add or lods movsl mov (bad) (bad) call in cmp iret dec adc lret dec outsb add roll out scas movsl bnd gs pop (bad) (bad) lcall leave addr16 xor das mov lahf sti mov xor (bad) (bad) (bad) (bad) in inc outsb push mov push pushl fstps push into inc movsl imul clc loop dec (bad) pushl test nop pop mov sub jne,pt xchg shrb dec (bad) in dec mov lret lds int3 mov ja (bad) hlt lcall decb mov bnd dec test notb and xorl adc xor test dec imul xor stos scas out jle sub (bad) (bad) jmp shlb out inc dec cmpsb fmull pop mov fcoms fisttpll (bad) dec vpaddsb mov (bad) (bad) decl cli ret jle mov pop push cli (bad) or rcll (bad) and sbb (bad) (bad) jmp ror mov fwait mov rol pop fcmovnbe fldt movl sub in aad mov add dec sbb dec (bad) jg (bad) (bad) jl sbb xchg (bad) cltd scas xorl lea or pop xchg lock (bad) (bad) (bad) ljmp mov and into push mov dec adcb idivb in pop loope push fstl addr16 (bad) (bad) decl pusha je dec jns and paddusw push orb dec js in (bad) repnz fbld pop popa aaa mov (bad) leave je imul push js sbb or mov mov push xchg and push idivl cmpsb mov aaa (bad) (bad) (bad) decl repnz cmp dec mov hlt mov in das adc daa jg push pop inc (bad) push adc xchg incl inc insb add pop mov cli cld adc mov js push ror (bad) (bad) (bad) (bad) cmp cwtl mov push aad fbstp (bad) jo int3 adc and xchg mov pushl outsb aaa push adc push xchg in pop fidivl pop aaa pushf mov out adc (bad) (bad) (bad) lcall jae outsb inc sbb cmp into xchg stc adc cltd add mov jle jnp lcall stc or sub leave pop popf (bad) (bad) (bad) (bad) cli cwtl or pop mov xchg xchg iret lds pop (bad) lret or movsb frstor (bad) (bad) (bad) decl repnz sbb lea fidiv sbb in clc and adc push in inc (bad) (bad) mov mov sub int3 outsb push lret sub mov divl xchg jne (bad) (bad) call aam fwait hlt fiaddl dec xchg mov and lock ret mov (bad) jl pop xchg lret mov cld mov shrl insl ss movaps out (bad) (bad) (bad) jmp xlat mov jne xchg inc movl icebp sub aaa adc or mov xchg sarb add (bad) (bad) pushl jge inc fadds mov out icebp pop sahf negl cld aaa or scas pop out sbb jle mov dec xchg fwait fwait (bad) and and mov cmpsl push loopne sti outsb xorl pushl mov test iret out pushf ret (bad) in (bad) (bad) (bad) push repnz jmp out push sub mov mov sub fwait mov cld (bad) (bad) (bad) js add cmp sub movl sahf jecxz inc xlat mov mov cmp aaa ss loope cwtl push sbb fmull cmp and cld (bad) incl sahf scas add push cmp fisubr push sub stos es icebp (bad) (bad) lcall cmp or lea lock mov adc cltd (bad) push mov fisttp mov iret cmpsl lret testl test mov call push int inc std cmc xlat aas (bad) sti into jle je shrl cmp add sbb (bad) (bad) lcall cmp in mov sbb cld sbb movsb loop fsubrp adc mov (bad) (bad) ljmp jbe push adc jae sbb push aas inc stos inc mov aaa ret mov dec rorb push cmp nop (bad) (bad) ljmp sti pop xor hlt add rcl popa cmp into mov jmp xor hlt paddsw mov ret sub loope add add inc push arpl pop loopne (bad) xor dec mov (bad) (bad) sub sbb ret pushl std xchg (bad) adc insb mov xchg sbb fidivrl or jg pushl and fs dec popa cmp xorl mov sbb decl cmp fsubr sbb dec dec sbb sbb jns cltd jecxz xchg (bad) (bad) (bad) call mov mov sbb dec cmp or (bad) mov pop add adc ret lcall test int adc sbb stc clc xchg mov adc sbb scas push fdivrs in adc call loop movsb push popf push mov pop (bad) (bad) (bad) call stc xchg jo sub into mov lock mov (bad) iret popa push push xchg arpl xchg ficom dec cmc cli jno lahf nop cs into mov mov mov (bad) ljmp jns dec in dec fiaddl subl aam imull (bad) sarb (bad) (bad) pushl pop sbb jge test push sub jb dec ja test incl scas aad test push mov clc (bad) ljmp sub fwait mov mov pop pop imul in jmp and push jge pop fdivrs cs lods mov (bad) inc out xor cmp dec jne dec cmp jne insl dec dec (bad) cmp sahf out mov xchg xor mov (bad) jmp inc (bad) into sub (bad) cmc repz leave xchg in and notb aas cmp mov stc cmp cmp adc sub stos xor xor aas push push in xchg stos scas jl jne jae (bad) (bad) ljmp mov loopne adc ret test and jmp (bad) (bad) call stos cmp jo sbb inc ljmp test iret cli mov (bad) (bad) (bad) (bad) mov int in jg test cld fcomps sub nop pushf je (bad) (bad) (bad) inc jne gs jecxz cmp fsubrs mov movsb sarl test fldcw or (bad) ljmp inc rorb (bad) sub xchg mov loop mov jb fsub (bad) jg outsb pop mov mov (bad) xor dec imul call divb inc mov test and repnz incl jl (bad) lcall dec dec push xchg xchg dec scas xchg mov call insl sbb (bad) call pusha add div pop jne imul push dec adc xchg (bad) decl call pop stc sbb mov dec pop cs test test (bad) out fisub sahf jae pop subl arpl or (bad) out dec (bad) lcall insb cmc and inc adc inc fsubs inc lods js lock fwait in dec xchg cli addl test jno test ss (bad) mov mov inc sbb lds dec dec mov xchg and leave imul incl adc adc pop into xlat fwait fs inc addr16 mov lods (bad) (bad) dec fnstcw inc in out push mov inc movsl sub mov xchg in movsl out cmpb xor cmp ljmp mov sbb push sbb (bad) gs jbe daa (bad) mov (bad) jg outsl xor mov test into pop in scas mov ljmp rcrl jg loope out push fiaddl sbb adc sahf popf aas mov test (bad) jg mov test sbb ljmp test (bad) fisub mov push stos jae push cmpsb adc push loope jno fstl shrl push sbbb call fs mov xor inc movsb data16 pop xlat (bad) (bad) (bad) inc ds mov xor roll imul adc push mov dec or outsl test sbb hlt aas mov dec sub sub rol enter dec push daa mov jg dec js or nop addr16 in inc loop inc (bad) mov out int3 (bad) (bad) (bad) ljmp outsb xchg cmp scas push aas lahf pop sbb clc inc ja,pn dec pop push mov (bad) dec sub adc dec push imul stos or ja mov dec dec popf pushf or decl clc mov repnz dec push lds xlat jnp mov mov call scas and xchg pop fwait arpl out (bad) notb dec ret xor sti mov mov xor lret aam lcall fistp push out test xchg mov sti jmp pop clc (bad) jg ja scas adc bound mov and adc lock sbb ds call (bad) xor cwtl aas call pop cli js rcl jae cmp (bad) mov jmp (bad) jno scas lret push popf lret add adc pushl shrd mov push scas inc ret pop pusha xchg punpckhwd iret xchg fucom inc cli movsl hlt (bad) call dec das loop jb mov adc xlat and hlt mov fist mov mov cmc cmp jo (bad) jle push push cltd or in (bad) (bad) (bad) fistpll ljmp inc insl loopne fdiv mov ds mov stc mov test dec cwtl dec inc lret (bad) (bad) sbb in (bad) (bad) lcall aaa mov scas cwtl mov pop outsb and aaa (bad) inc xchg mov mov scas add jmp xlat ret inc test (bad) aas in sbbl lods push cld jg scas insl push cmp sbb mov xchg mov incl jb and ja enter sbb push jle out pop lahf push xor pushl lds cmp xchg pop js mov mov (bad) dec or inc dec (bad) (bad) (bad) decl out jp pusha inc fucom bound mov mov test jbe lret fisubl or cmp sar add mov add dec (bad) in pop js mov (bad) (bad) (bad) decl pop out pop lahf aad mov lods and mov and adc mov pushl pop test (bad) (bad) lcall bound loope cmc xor iret test lahf cmpl mov mov (bad) cmp push mov lods cli adc insb or arpl cmp arpl (bad) (bad) decl (bad) stos das (bad) js push fyl2xp1 mov cld push mov or cld push stos idiv (bad) (bad) dec or add sbb xchg mov xchg pushf into cmpsl cmp and daa sub mov out push sarb test push mov push mov (bad) loop xor dec sub (bad) pop adc lret jge cmpb (bad) (bad) (bad) (bad) jp sbb add and xchg lret or xor mov pop add popf pop xchg (bad) (bad) incl int3 movsb out int3 cld adc and inc test jle jge aad enter (bad) (bad) pushl push cld repz aam xchg scas jno bound xor xor inc xchg lds mov pop xchg mov add add mov (bad) hlt stos rcll cld or mov jg or push or out (bad) out mov cmpsb sub mov jb test jnp jmp dec push hlt aaa cld ja mov pop jg loope pop cmpl mov and es and sbb ja (bad) call inc rol add fldt ss inc xor mov test test mov mov mov adc and (bad) call or stos push lcall dec mov xor andl push sbb outsl jb rorb mov push pop pop push clc add and ret or xor pop pop jo inc inc mov (bad) mov ds cmp fistp (bad) (bad) fcompl mov cli outsl data16 pushf ljmp dec pop pusha pop pop test cmp xor (bad) jg in add shrb or sub xchg push xor pop push xchg int test stc in cltd (bad) (bad) (bad) jns sub sub adc (bad) test std and (bad) (bad) pushl mov js xchg ja adc mov xchg imul (bad) (bad) pushl js jb mov lods fidiv and aaa mov inc sub (bad) (bad) ljmp jb mov and gs stc ja addr16 xchg (bad) fisttp push rcrl pusha aam in lret lock (bad) aas dec lahf je scas sbb test bnd arpl mov (bad) lcall in pushf push mov popa adc repz jecxz lods dec xchg aaa loop stos xchg push push (bad) std adc into and add (bad) jmp jnp or adc cld (bad) (bad) incl mov fiaddl mov add fdivrs adc (bad) jg sub lods fdivl rclb pop incl push push daa and sbb inc rep cmc add (bad) mov popa cmp daa jb lock cmc popf das dec cmp mov adc dec and clc add pop ljmp (bad) (bad) (bad) incl push pcmpgtb inc mov push iret pop sbb jo push cmp pop lcall mov je jmp pop sbb cmpsb movsl adc outsb pushf in push (bad) (bad) jg mov jae pop xlat repnz inc (bad) cmp lcall (bad) (bad) js neg adc (bad) xchg mov ljmp pop jnp int3 mov (bad) (bad) (bad) fcomps mov jb (bad) lret mov xorl movsl inc fprem1 xchg sti cmpsb jne sar inc or (bad) cmc sub push pop dec mov pop push rorb fwait (bad) push mov sbb (bad) (bad) (bad) pushl out xchg in outsl scas in imulb jae test pusha inc push cmpsb mov out cmpsb mov push or (bad) (bad) (bad) jmp add in add adc sub mov mov push sub mov mov lcall dec mov cmp test cmp (bad) (bad) push jo push jb push shl fidivr (bad) sub popf call pusha enter fwait xchg adc lahf mov and lcall ds xchg movsb bound mov xor cmp (bad) enter (bad) (bad) pushl pop xor push mov out fcmovbe mov mov in mov (bad) (bad) call loopne into inc and inc test movlps imul mov jl test jb (bad) (bad) jg add cmpsb xchg pop sub (bad) push pusha ror xor pop clc test cld pushl jecxz mov dec inc pop xchg and es jbe ja ret xchg inc jmp pop loop sub sbb inc (bad) or in out add xor (bad) (bad) (bad) inc inc mov and inc (bad) repnz fiadd xchg int3 add in inc push xor mov (bad) fimull sbb jo (bad) xor loop mov cmp xchg sbb or js mov sbb adc test or dec push test xlat sbb (bad) ljmp sbb mov popa pop push jl pcmpeqb add pop inc (bad) mov (bad) (bad) ljmp push cmp (bad) mov push inc push stos popf mov mov xor push mov ja decl hlt and outsb mov (bad) cmp jns enter mov pushl rclb fiadd cwtl daa add mov (bad) aas cmp jbe mov clts or je push lods cmp mov push xor icebp (bad) incl push add ficom loopne out fcoms loopne adc or pop les orb push jmp (bad) (bad) les inc push sbb mov mov sbb (bad) ljmp icebp pop xlat movsl sub push xchg nop arpl jo pop push imul pusha and outsb inc std (bad) dec adc xchg inc jbe fsubl xor jg clc ljmp ret ficoml movsb xor lea js push jo or call lds jo pusha ret fwait xor add sbb push pop mov dec or (bad) (bad) jmp dec imul jnp mov sbbl cmp iret pop popf (bad) jg add xchg jns jg stc pop or pop out clc mov call fildll mov enter cmp fsubr jnp (bad) incl adc sti mov push stos mov sahf or (bad) (bad) decl add or int ret push pop roll inc mov ljmp jmp push sahf arpl shrb adc stos lods test jp int jg or lock xchg in ret sbb sbb and icebp out or outsb sar lcall les mov ljmp (bad) sbb mov xchg push inc cmpb xchg icebp (bad) (bad) (bad) (bad) fisub fdivrs (bad) push xchg cmpsl je dec in cmp xchg sbb cmp add (bad) mov data16 xlat (bad) push sub inc xchg data16 sub dec pop in xchg jmp and inc cmp jnp insb repz cmp mov (bad) jg adc aaa mov aam lahf dec fldcw fidivrl or pop cmpsl popa fs clc mov cmp (bad) ljmp (bad) icebp push iret loop mov outsb xor repz iret mov (bad) jae dec call (bad) lcall out cmp jns adc and jl jno and mov int3 adc iret incl daa sahf (bad) mov (bad) (bad) (bad) decl mul (bad) dec ret mov shrl or je xor mov je ss (bad) (bad) (bad) call addr16 pop rcl daa lds or mov lods xchg pop sbb push repnz fs scas cli jbe inc decl clc pushf xchg xor sahf cwtl scas out (bad) mov cli mov outsb rcll (bad) (bad) jg cmp stos imul iret sbb scas cmc stos and mov pop pushf xchg (bad) (bad) (bad) decl adcb es xlat lods jns inc adc fcmove cmpb stc mov sub out shr fsts add pushl mov ds pushl xchg mov add push add adc (bad) (bad) ljmp ds enter cmp mov clc mov adc (bad) pushl aad lahf mov mov jmp gs data16 sbb mov (bad) mov adc sub stos call les pop cmpsb dec rolb jo cld (bad) mov jg jmp lahf adc fldenv cmp cmp xor rorl (bad) es (bad) (bad) call add test ret leave addr16 xor jbe sbbl sbb push sti scas adc sub cmp icebp mov or mov adc outsl pushf or inc jcxz out dec mov sub xchg mov idivb decl or xchg es in (bad) sub push push pop cmc out xchg push push jb push pop push push sub (bad) pushl and stos lret pop mov add aam sahf cmpl mov fs out inc mov (bad) incl push sarl shrl push outsl je (bad) mov (bad) jmp loope,pt mov addr16 mov cli ret mov out je adc (bad) call mov int int3 mov sarl and std (bad) xchg test sbb pusha sub sbb sub jae bound (bad) (bad) (bad) inc call out movsb lret adc out pop adc mov aas jno inc xchg mov mov int (bad) (bad) (bad) decb cmp inc jne or ret gs inc ficompl movsl fadds xor test inc cs or or inc jo add (bad) (bad) incl addl xchg mov xor dec fimull (bad) (bad) mov aaa (bad) mov mov dec cmc dec xchg cmp (bad) push (bad) (bad) (bad) lcall push mov xchg mov cmp out inc pop or cmc sbb pop fsubrl call lret cmpsb pop fidivl ds out mov imul jmp out inc dec sbb mov add adc (bad) (bad) (bad) sti lods xor fcmovnbe clc or mov xor ja test stc lret arpl cmp mov jg loopne jecxz push adc and cmp jnp fwait add or sub (bad) (bad) decl test mov pop xor dec mov or rclb and and jle imul mov (bad) lcall sub and lock push mov mov xchg (bad) call xlat addl fs ret dec mov dec (bad) xor fs mov cltd mov inc cwtl mov ds xor in aaa adc call cmc mov fsub aaa xlat mov (bad) (bad) (bad) call je push fwait dec inc sti leave lods xchg das (bad) jecxz leave or add cmc dec std xor ds leave aaa pushf into (bad) pop jle sbb and in (bad) jmp sbb (bad) cmp leave add or aam ds std (bad) mov stos push int push push jecxz (bad) das popf add fs adc or daa (bad) inc rol mov (bad) lcall (bad) cwtl rcrb sub adc js mov ret add call add fcomip xchg mov nop pushf repz inc test mov sub mov xchg in int3 bound xlat jmp imul jecxz push pop fcoml (bad) (bad) lcall std jne js mov fisubl aaa adc dec adc (bad) stos mov js jg (bad) push xchg inc inc daa cmp cmp (bad) jmp (bad) or jb in sbb ja insb dec scas hlt jns cli cs (bad) (bad) jmp scas jl mov sub jecxz cmp movl and mov (bad) mov pop out xor jmp pop push inc lods cmp pop cld stc mov ret test (bad) scas (bad) (bad) pushl pop jl (bad) (bad) fcom mov mov insl lods movsb rolb ret (bad) ljmp jno or dec sti inc ret in sub insl lock fwait stos mov popa pop aam pop lcall pushl sbb dec sbb xlat (bad) insl push in mov mov pop jb mov (bad) (bad) decl sbb cmp imul sbb and mov or int3 mov fildll mov stos outsl call insb ds sbb popa dec mov (bad) mov mov and dec cwtl test idiv (bad) mov pusha (bad) adc pushf orb and adc xchg fs mov sbb adc lcall lea and mov add pop cmp aas (bad) add (bad) aam sbb cmp decl push (bad) xor movsl cmc add cmpsb inc dec mov (bad) jg mov fsubrl data16 mov es jae and fmuls aam aaa cld (bad) call rolb pop add dec aam ret stos ret sub sti neg aad (bad) call bound xchg pop (bad) dec gs push adc hlt adc mov jecxz mov iret adc adc mov or loop popl test (bad) decl jns cmpsb and enter and or mov inc stos lret mov (bad) (bad) aas fsubrp in jnp js add mov xchg sub fstl leave xor (bad) (bad) decl dec mov in fmul imul push out mov jmp xor aam incl je lock mov add jle xchg cmpb or (bad) push mov imul mov test jmp sbb stos mov gs test setp inc xor stos and sub dec ljmp cmpsl dec cwtl mov and cli sarb cltd xor pop mov jno das lret push (bad) (bad) jg mov jmp test out pop jge lods nop jg jnp (bad) (bad) (bad) jmp int3 lcall cmp ret cmc jno lock push mov aad push out out negb (bad) (bad) incl rolb scas sub or addr16 imul mov pushl mov in addr16 jge mov cmp dec sub scas fist enter aaa cld inc adc mov add xor lods pushf js xor and (bad) (bad) call mov into cmpsl lods fcmovb sub adc je fmulp das addr16 (bad) lcall test adc sarb mov clc mov (bad) (bad) mov adc in xor mov das adc mov out mov mov adc pop sub mov andl bound cmp movsb popf mov sbb popf mov stos pop int dec xor (bad) (bad) (bad) in inc frstor jns mov sub adc bound xchg jmp sbb ret (bad) (bad) (bad) lcall fs or cltd pop roll add ret push cltd pop mov gs xor decl fnstcw pop loop mov xchg out das inc mov iret arpl jecxz adc test aaa std sbb mov pop mov fdiv pushf dec fldl2t cs push mov dec clc ds clc mov push cmp xor mov addr16 sub xchg xchg xchg or add jmp neg stc js (bad) mov pop mov or xchg jmp jl mov mov jle dec dec ret sub xchg or push jae mov (bad) das clc imul lods and icebp mov int3 and add in (bad) jg pusha bound inc leave pop rcl out mov pushf fimul push sarb (bad) (bad) (bad) call (bad) clc daa sbb mov (bad) out mov lods push adc jnp (bad) stc imul lock fcomip cmc pusha mov jae incb cmp int3 add or loopne,pt cli adc sbb mov (bad) pushl lret in jns inc stc and inc in add (bad) (bad) (bad) mov mov xchg arpl call adc fsts (bad) call add into call jg add outsl jmp adc xchg stos (bad) in pushl cmp cmp je xor into ja insb cmp int3 insb popf js (bad) (bad) call mov xchg dec mov push push int out movsl rcrb fbld sub (bad) (bad) ds ret add outsl push scas outsb call push in or outsl jp cs (bad) (bad) (bad) jmp pop mov cmp pusha mov cmp cmpsl mov lcall imul sbb jge mov (bad) mov jo lods movb fiaddl push jb mov mov ljmp dec inc faddl sub (bad) xchg shrb out scas dec push aas cmp cmpsl push adc (bad) (bad) jmp dec fwait lods sbb (bad) orl repnz movsb mov arpl push loope lahf sub (bad) mov jns sub cs insl sbb dec sub (bad) cltd dec jo arpl ret (bad) (bad) (bad) (bad) mov dec ficom inc cmp popa repnz jo xor into call cli lcall dec pop jg dec daa out divb test pop jg adc movsb pop and (bad) decl mov mov les or add jb subl in rep lret sub add xchg mov push lcall cmp xchg (bad) (bad) (bad) (bad) jmp push popa lahf aas add outsb sti movb sahf iret mov jb push pop jns ds or xchg fdivrs sbb push (bad) push lods lcall mov sahf cmc pop jl cmpsl aad clc (bad) (bad) lcall inc cmp pop hlt mov lahf mov mov and shrb (bad) pushl ret pop push xor adc (bad) push jecxz insl fwait pop (bad) (bad) (bad) ljmp scas and jb outsl mov addr16 cmp push int rclb ds lret sar (bad) (bad) (bad) mov in div or inc add hlt addr16 lock sbbb sub cmp sbb cld (bad) lcall push inc in fstp cmpsb in adc or ja jne lods nop lock jmp (bad) call into and and outsb jmp inc sbb dec mov xrelease pop mov das cli (bad) call lods lahf adc adcl cmpsl pop push outsb and mov scas xchg mov mov scas inc daa cmp repz xor (bad) (bad) (bad) dec roll aad pop cmc cmpsb push jno ficoml mov xchg xchg jmp mov (bad) jmp pop jnp lcall maxps lea sbb (bad) (bad) dec loop,pt das ds push fsts add mov cltd xor dec in mov add (bad) (bad) (bad) in test pop cmpsb jne leave mov sbb scas jnp ljmp cmp in pop (bad) (bad) (bad) lcall push push aaa and sbb scas leave sbb test test addr16 repz imul dec push lret (bad) (bad) (bad) (bad) fmul jg leave add jno popf push xor push sub add push movsl dec mov inc push adc xchg shrb cmp ja mov jae pop scas dec mov cwtl hlt neg fildl ret (bad) (bad) (bad) call jmp (bad) call push int rorb pop push repz cmpsl mov sar (bad) call inc add sti stos jne mov fistpll enter push jecxz (bad) decl sub cmpsl dec inc or xchg cli inc icebp js rcll ret stos add inc mov lea das clc pop sub push pop test sbb add cli adc (bad) (bad) mov dec add nop lds jne pop repz push out xor scas ds in int andb fdivrp sub cmpsb or popa cld aad addr16 jl es sub ret sub pop cmp mov or ljmp mov repnz pop mov mov aad add mov (bad) call nop sahf inc cmp es inc cmc inc lock push fucom lcall movsl das (bad) (bad) decl and lret jle and movsl lock jno icebp pop std inc mov push icebp outsb sub cmc and or (bad) ljmp mov jge arpl mov call fcomp xchg push rcr pusha std (bad) call lods jnp rcll es add ss mov ds xorl aaa mov clc call push jbe sub mov iret stos or int3 and (bad) decl (bad) decb je inc ret je sbb lahf pop movsbl mov push in pop andb pop test pop add clc push inc sub int imul insb outsb in pop mov sti or in out pop jbe dec lret push aad aas mov inc sub mov mov cs push stos hlt jb mov (bad) lcall add insb mov push pop dec dec icebp jbe push cmpsl inc pop (bad) (bad) out and cmp je mov mov les sub ljmp dec pop pop sub mov mov and cmp jmp ds xchg sbb lds test (bad) lcall dec mov das fidivr addr16 sub (bad) (bad) jl je cs subb xor das ds orb out mov mov (bad) (bad) aaa sarl nop dec jl incl sbb (bad) xchg push jle into xchg ja cltd push sbb hlt push sub ss lahf jecxz mov push loopne aam es inc stc cmpsl dec rcrb pushf pop hlt adc decb (bad) incl pop cmp loope xchg loope jnp notl sub (bad) (bad) (bad) clc fdivrs jg dec lods cmp or pushf mov fnstenv (bad) mov cmpsb cmp push xorb mov sbb ds jne sbb inc pop inc (bad) (bad) (bad) push scas mov adc arpl aas mov sub add mov jmp pop popa fwait clc cmc ss add loop mov mov repnz lcall mov rolb mov mov cli and jge aas sbb ja cmc push loop pop je cmp shlb jp jbe cmpsb int sub cmc (bad) ljmp xor mov mov mov jnp jb push fistpl (bad) (bad) call push add or fprem sti test (bad) rolb stos imul call mov and enter inc jns mov add mov add lcall aam loop xor (bad) js mov pop cmp (bad) ljmp int movsb test les jl and addl and es pushf inc repz (bad) es insb sbb (bad) (bad) (bad) call mov (bad) mov dec cmp push test lock sahf push jmp movsb (bad) (bad) (bad) cmp jmp (bad) repnz push xchg or sub (bad) fcomip (bad) inc cltd jbe pushl jne dec xchg (bad) sub or (bad) (bad) (bad) (bad) cld push adc adc arpl ficompl add lock lea cmp pop sbb (bad) incl cltd aaa jmp jmp subb add rorl and popa ret ret push addr16 in mov popa xor (bad) (bad) (bad) inc push fwait out in sbb dec cld sbb je mov lods lret xchg mov (bad) in repz sub lcall pop jne push imul sub jns add (bad) (bad) incl xor fucomp pop jmp cwtl jmp fwait or mov xor (bad) fbld mov cwtl sub inc push xchg and push push out pop je pop pop roll ja or data16 jge cli cwtl frstor add (bad) (bad) (bad) (bad) ds and (bad) pop popa mov rclb mov push test ret arpl clc (bad) (bad) (bad) decl adc (bad) mov cmpsb rcr scas push dec pop test leave imul hlt push xchg sbb dec int push push (bad) (bad) jmp sub cmp and push sbb or add xor jnp,pt inc pop (bad) out cli mov add aam cmp or nop icebp aas jae out pop pop lcall call pop dec test rorl mov sbb jle cmp cmp movsl inc mov icebp div dec push pop loop in call mov into es shrl xchg push lods mov pop stos movsl (bad) dec sti push push mov inc inc cmpsl popa xchg push ret jbe mov or iret jne pop loopne subl jp adc cwtl cmp pop std mov mov pop push xor add jl (bad) (bad) (bad) stc lret add iret pop rorb mov lahf jmp push outsb outsb xor icebp mov cltd mov push push or jmp lret fcomi inc das clc inc addr16 pusha mov mov xchg (bad) add push movsl andl mov rorb icebp jmp (bad) call pop aas daa (bad) int jae test mov jnp xchg and imul inc cmc push (bad) (bad) push pop sub test les movsb push daa add loop sub hlt dec movsb push cmovne cmp aad dec cmc (bad) (bad) (bad) mov mov iret bswap (bad) cmpsb xchg add and addr16 adc fldl je fistp pop or es mov fwait mov aam add cli (bad) call out (bad) add movsl sbb test lods out rolb cld incl mov mov pop pop das xor fdivr (bad) (bad) incl outsl out mov and push dec mov aaa cld mov inc mov (bad) (bad) lcall out sahf repz gs mov repnz xchg test outsb mov into or ds sti xchg flds xor lahf jecxz jb sub imul and xchg cld sarl (bad) pushl popf pop insl cmp stos adcb fildll (bad) fcmovnb jle cmp hlt test mov fldt data16 test bound xor inc sbb (bad) (bad) (bad) mov into ljmp xor add imul inc fs std (bad) (bad) pushl cli adc push (bad) push mov dec fs clc fsubrp test ja push jecxz push mov jecxz cmpsb test jbe sub (bad) (bad) lcall cmp jp inc das je popf cmp imul mov mov xlat sbb (bad) mov sbb pop stos mov in mov lods (bad) cmp push (bad) call push test (bad) sbb iret xor call or dec jbe inc iret inc or or (bad) (bad) lcall sbb sub int3 loopne (bad) adc popa repnz jns (bad) into les add add data16 jnp add mov (bad) (bad) (bad) pushl inc stc leave xchg mov push adc testb loopw adc xor rolb mov (bad) (bad) (bad) incl lds dec in test push out out ss inc push add ss jecxz and dec inc ret push scas xchg mov jecxz pushl inc popa and jle repz enter sub je cmc cwtl aaa je (bad) (bad) jmp incb inc aas cmp lods adc pop inc rcrb cmp je (bad) (bad) (bad) jnp ret outsb fdivl insb and push lock rorl mov incl es mov jp xchg pop jp fs sbb jo fs pushl adc lds lret adc adc movsb mov cmp fistpll cmp lcall or sbb (bad) (bad) jg cmpsb jecxz sbb and sub stc pop jb,pt push popa outsb in outsb adc pop clc mov dec out pusha and (bad) jbe je dec inc mov cli add pop mov out pop xchg pop sarl movsb adc (bad) call insl call sub clc hlt mov cmp adc inc (bad) (bad) (bad) push fcmovne mov sbb aad adc pop and xchg pop jo mov mov adc jge (bad) (bad) ljmp jno (bad) lcall mov push cs sti lret fs cld mov mov es sub jns jb bound popf jbe out fs test adc add inc adc call lcall dec insl adc (bad) mov aaa ficom call sub jno add mov out push (bad) lcall ds sbb lds xor push cmp test (bad) incl mov loope fsubl mov scas js fiaddl data16 (bad) (bad) lcall aam xchg jge int pop mov mov les push fnstcw cmc call (bad) fbstp in add outsb iret jmp push ljmp pushf (bad) (bad) (bad) jg (bad) dec fiadd loopne dec addr16 jns fs fsub mov mov mov cld jle rcrb adc push or repnz inc addr16 fwait (bad) (bad) mov inc cmp dec mov adc mov mov ljmp (bad) jmp inc inc popa xor mov mov sub std mov jmp clc call or in (bad) fstl insb add ljmp (bad) imul addr16 add mov sahf mov outsl xchg xchg push sbbl inc xchg jnp ljmp out push jp jp inc push movsl loopne out cs or pusha cld dec aas xchg movsb (bad) adc shl inc lock mov sahf int jae stc movsb incl cld (bad) jg sbb ret test sbb rcr jb (bad) (bad) pushl popa ret xor loop jns repnz outsb sub fidiv es or sbb stc xor (bad) incl std dec mov fiaddl (bad) mov stos sbb inc sub aaa mov mov ds lock aaa push in mov fld ljmp (bad) pop out push xchg mov add decl popa in rcll mov (bad) (bad) (bad) ljmp std xlat lret mov sbb ret xor xor movsl xor out inc sub (bad) (bad) (bad) push mov fsubrl sbb mov cwtl out xchg pop loopne loop xor push lea std lcall jb and jnp stos sub jo cmp (bad) call lea sti dec popf dec adc pushf jl in dec sbb push mov dec cld (bad) call std sti leave add (bad) rcr or jnp jno imul cmp (bad) (bad) decl or sub movsb aam xchg jl das nop inc in mov pop outsl outsb dec pop mov (bad) decl arpl rclb mov repnz push fidivl addr16 (bad) pushl pop pop out rorl popf push imul roll sahf jmp xlat push jne xlat add (bad) (bad) (bad) ljmp pop dec pusha cwtl hlt xchg adc pop repz loope sbb cmp (bad) (bad) or (bad) (bad) lcall js mov jb and add roll jmp xchg and (bad) (bad) mov enter cmp jg push or out push push aam out adc js pop iret mov sub sub cli sbb imull xchg and (bad) (bad) fisubr (bad) lock jae fmuls jns,pt hlt jmp aam gs out mov (bad) (bad) (bad) push mov and les js cmp ja mov push std fimul negl in (bad) jmp loop adc aam dec insl jno fwait cmp or je lea imul (bad) (bad) (bad) call xlat mov and mov test (bad) fsubr dec mov iret popa outsl push out das mov decl repnz insb dec mov (bad) (bad) (bad) (bad) call fcom std pusha add xchg out push sbb pop call aam dec (bad) (bad) (bad) incl cwtl scas adc inc mov fdivs aad push gs mov mov popf sar int3 mov (bad) xor in adc (bad) in mov fstpt pop imul mov lcall lds (bad) (bad) push call cld pushf mov pop sub push lods xor ret add or outsl (bad) pushl hlt jge pusha jns push ret cmpsl pop mov sub sub jb mov pop icebp decl sti sub sbb pcmpeqb sahf sahf xor out inc imul pop icebp (bad) mov jae in push fildll jp scas mov in hlt (bad) ljmp ret into mov call cmc adc pop jle ffree test pusha add mov (bad) ds leave add sbb fs adcl ficompl pop nop pop icebp pushl pop repz scas test ss (bad) (bad) mov pusha push pop jmp js test cltd les (bad) (bad) (bad) jmp mov push clc out std ja adc xor inc insl sub pop gs (bad) (bad) (bad) inc sub jmp jno mov cltd push push jbe stc adc dec pop mov cltd mov imul stos lret pop lret dec mov ja divb mov cmp mov (bad) int in sbb sub jl mov lret fs iret addr16 movsl fisubrl (bad) (bad) (bad) (bad) jnp adc outsl and or flds mov loopne jns in jb sahf or pop inc clc dec aad std mov mov in xchg sbb das out cmp sub mov out das mov xchg ret dec je and mov fnstsw jecxz mov or call sub add repz divb jb or cmp (bad) mov cltd mov (bad) dec movsl pusha cmp negb sub jne xchg jg cs aaa repnz mov insb dec mov loopne pop (bad) (bad) (bad) (bad) (bad) xor and scas lcall jl pop es in cltd xchg and lcall sub xchg outsl scas adc mov and and push mov js je leave (bad) jno (bad) (bad) (bad) jg add jmp (bad) cmc cmp fcmovbe and in dec (bad) jecxz or jns rclb (bad) (bad) (bad) decl (bad) loope fcmovnu (bad) mov adc jne add mov add mov call cmp addl sarl outsl fwait mov mov outsl sbb addr16 jo enter movsl pop mov mov cmp (bad) (bad) inc add dec pop push das xchg push rorb pop sbb neg dec jmp xlat (bad) (bad) (bad) jmp test pop pop in repz test outsl mov or (bad) (bad) flds cmc ret jge pop lds (bad) decl fisttpll mov movq pop ds out cwtl sar xor sub or scas pop daa or (bad) incl les sarb (bad) (bad) mov pop cmp mov stos in pop xor iret (bad) cmp test (bad) lock (bad) (bad) (bad) jg adcb inc jns in out movsl inc mov gs and sub cmp (bad) (bad) (bad) (bad) mov fadd push jbe jl in lahf pop das nop icebp mov bsf mov (bad) (bad) call mov bound inc cli fwait sti ret mov jns push mov (bad) jmp push je test (bad) mov ds loope (bad) out jge,pt les rdtsc or (bad) daa or faddl sar lcall or scas por pop sbb pop push (bad) and (bad) (bad) (bad) jle orl mov mov std mov (bad) bound (bad) push rcl sub cltd in or (bad) loop push adc addr16 data16 jae clc scas cli loop jle inc into je ss xor adc inc mov cwtl mov lret mov (bad) (bad) (bad) ljmp rcr cmpsb adc aaa inc mov fcoml mov ss inc aas (bad) push add js mov jp pop std (bad) aas fisubr jle jne cltd mov push ja mov (bad) (bad) (bad) (bad) call lds sub out sbb movsb rolb xor or loop cli (bad) (bad) decl rolb in aaa inc repnz sub inc add repz mov lcall call push rcl sub lcall (bad) (bad) pushl jl mov fdivl addr16 cmpsb sub adc aas jle cwtl arpl jo cs fwait add push xlat mov vdivps (bad) aaa std (bad) call fsubr sub arpl push fmul dec enter mov dec mov (bad) mov div outsb mov cmp inc sahf fisttpll add push jecxz inc mov (bad) decl subl lock dec cld es js fwait xchg sub icebp pop std daa push add cmp push nop mov dec push out cmpsl lahf cli push insb fincstp pop or jmp jmp cwtl add (bad) (bad) lret (bad) (bad) lcall mov sub sbb (bad) cmc (bad) ss mov adcl std cmp fimul std adc incl imul movsb divb es xchg (bad) cmpsb ret cmc mov add ljmp mov sub ja in cmp and push in (bad) (bad) jg sub rorl addr16 sbb or push sbbl mov jns cmp (bad) decl xchg leave push (bad) stc imul ss nop inc je dec lahf (bad) repnz xor stos aad (bad) (bad) inc in or mov jl out fildll cmp jmp inc xchg (bad) (bad) jmp cmpsl and data16 xchg xchg std mov adc jl push call (bad) fcomip outsl ja stos push and mov stc pop test and sbb enter xchg loope into mov cld jmp pop (bad) (bad) (bad) (bad) cmp mov sbb mov fisub cld fcmovu sti cmp iret cwtl rcrl push xchg jbe ljmp xchg int3 sbb mov mov sti jl fs lods pop lret and in in movsb cmp adc popf (bad) jne movl hlt fldcw lcall mov jnp mov in sbb pop mov imul push add cmc pop sbb jecxz mov enter or movl add out mov mov shll dec (bad) pushl adc fwait cmp xchg fs ss call lock (bad) mov cmp cmc shlb psllw mov (bad) add mov mov pop cli bound jae ds mov in leave and sar call sbb add xor pop dec leave test pushl in leave mov fdiv (bad) decl or loop lcall mov loopne leave clc pop add pop cmp sub sbb mov (bad) ljmp cmc loop dec aam mov xor cmp (bad) ljmp push lods fisubl inc xor mov or add ljmp mov es dec subl dec fistp dec pop push pop lret or ljmp (bad) (bad) (bad) call push xchg push cli and push sahf fs add ror dec fidivr lahf mov decl lods ds push xchg push and scas adc stc push stos flds mov pop dec (bad) (bad) (bad) cmp clc std fsubl mov sub jecxz jg mov push dec bound imul dec push sarl rclb pop push (bad) (bad) (bad) pushl inc mov lods push xchg jl fwait out mov cmp dec faddl outsb mov inc pop in mov loopne mov (bad) lcall and pop adc xchg out jmp adc ficompl pop (bad) stos mov call gs pop mov shrl arpl in cmpsb mov add call jo ss adc mov rorb bound and dec (bad) pushf ja (bad) (bad) fsts cmp xchg sbb out xchg mov insb movsb xor push and loopne fld jg or cmp add enter movsb mov (bad) (bad) (bad) inc mov lods popa cli add pop or add jmp sub (bad) cmpsl mov ss (bad) decl inc lods push pop inc scas pop push push outsb out repz (bad) (bad) incl pop sbb mov mov test fistp jno ljmp (bad) (bad) (bad) incl rcrl cwtl mov je int3 cmpsb lock pop or out pop jb insl lret push lods (bad) mov (bad) push ret sbb and popf jge inc nopl jl or in mov sti jmp nop mov mov (bad) jg (bad) (bad) mov arpl push sub sbb lahf xor cmpsl xchg cltd aam xor pop loopne lahf push jo aam xchg or insl pop xor call xchg mov mov adc lds lret sti test (bad) jnp in cmp dec mov sbb mov ja xchg clc pop push push xor sub dec mov pop loop ljmp das pop adc call fimull dec cmp xchg ljmp mov cmp adc stos icebp daa xchg xchg jae mov push (bad) lcall sub inc sub cmp xchg xor icebp mov ret (bad) (bad) call xchg bnd pop (bad) push fdivr int adc mov out test pop shll and (bad) (bad) (bad) mov add lods add inc movsb pop mov pop ss cltd cmp xchg jg xchg (bad) (bad) fnsave loop movsl mov sbb jge (bad) (bad) (bad) mov mov dec push cs mov mov rcll sti sub (bad) (bad) call xor add insl push sub push (bad) jo cmpsb or xor outsl add (bad) jmp xor pop or push push xchg adc push xchg (bad) imul jp (bad) (bad) incl mov fwait jge xchg dec js add lds mov cltd xor mov or ljmp cmp notl js jmp sbb or pop mov (bad) (bad) (bad) push mov int3 or fnstsw sbb imul out stos bound popa mov (bad) (bad) (bad) call inc (bad) (bad) repnz add xchg stos insb rcrb sbb pop imul ret leave push test jg ljmp inc movsb test cmc push adc mov dec loopne pop mov popl ljmp jbe ds push jno fwait (bad) mov jbe call mov xchg inc mov (bad) pop movsb loopne aam hlt mov (bad) (bad) ljmp sahf mov and mov out dec push push loope jns hlt xchg ljmp ljmp inc and ror inc push mov and inc xor cmp (bad) (bad) decl dec data16 mov scas mov incl insl cmp dec out mov push sub (bad) jg cmp fcmovnu stc in and fnop lret cltd dec add mov pop call mov sub clc (bad) jg ds loopne jno push cmc cmp ds sbb adc incl mov or insl aad popf cmp (bad) (bad) mov ja rorl js push imull push dec push mov repz xchg cmpsl jecxz lcall loope push stc loopne sbb mov out out mov pop nop jbe insb stc bound inc pop ret ds (bad) fcomip jmp mov xor add cmpsb ja mov add (bad) jg (bad) in int3 pop lods xor out xchg aam addr16 test dec push xchg jle xchg jle (bad) call pop es jl insb cwtl mov pusha cwtl idivb sub fnclex (bad) (bad) (bad) (bad) sti xchg ret xor cmpsb rolb mov call hlt pop out fiaddl mov cld adc xchg dec cltd mov fs aas mov sahf adc daa ja (bad) cmp call stos mov pusha sbb out (bad) decl mov pusha cltd ret xor cld data16 xchg rolb mov test (bad) test sbb out out testb jne lods jo and (bad) (bad) ljmp jne insb inc mov push mov adc std cmp (bad) cs inc fs and mov ljmp cmpl push dec ret out stc dec sub pop and pop insb adc jmp call (bad) mov mov mov pop ja scas xor repz mov (bad) (bad) mov adc lcall test dec sti pusha and pop or (bad) (bad) decl push xor jae mov and ret out sub mov (bad) (bad) (bad) push int lahf mov push stc fistp cmpsl stos mov (bad) out mov jecxz lret mov mov std call ljmp adc and jae mov mov gs rclb repz xor adc (bad) ljmp sbb aam pop inc cltd add adcl clc (bad) call sbb ret lcall sub pop rcrb (bad) (bad) incl mov les in xlat mov (bad) (bad) (bad) jmp daa (bad) lds jae jecxz shrl jnp push fwait mov push cmpsl inc cld decl xor adc stos xor jl std (bad) (bad) jg data16 int3 push js aam ja setb push sbb pop adc dec or out fmul mov pop ja mov sbb movsl and mov aam iret push push fisttp rcrb dec (bad) mov push test xchg ds lret repz insb (bad) (bad) (bad) call outsb jne das fsts or jle fdivr aas fisubr scas lods in imul daa in (bad) (bad) decl hlt aad popf stc test cmpsb stos mov addr16 sub cmp test push (bad) add inc dec pop mov das lret dec sub sub repnz fnsave addr16 xchg popa pop call data16 lods sbb pop cltd xlat dec aad or mov jae (bad) (bad) (bad) mov push stc pop pop dec ss push bound push cmp (bad) dec mov inc push (bad) (bad) lcall lods cmp data16 jecxz and pushf mov add push imul aaa in loop aaa push push sar mov (bad) aam in divb lods jl shll sub aaa cwtl cmp outsb ljmp or je adc (bad) (bad) cmp dec mov and sub ljmp out mov lods sub enter (bad) jne cltd (bad) jns and lds xor hlt ljmp dec inc sbbl xlat daa pop dec pop cld pop mov push test imul call xchg mov push movsl mov (bad) (bad) (bad) fistpll xlat cmp mov movsl dec jmp jp mov push test (bad) (bad) decl and push xchg (bad) push fs popa cli jecxz imul lods adc (bad) jne fildl cmpsl sbb (bad) (bad) incl int lret into lock sbb lcall adc xor mov mov mov int jb add cltd (bad) int3 repz mov or (bad) (bad) (bad) cmp shr sub scas imul je sti sbb mov mov jbe dec adc jo fs daa jb (bad) mov xlat bound aas lds (bad) sub incl (bad) or aaa xchg int and pushf fiaddl jbe ds jg (bad) (bad) mov cmp mov inc pcmpeqb (bad) sti push xchg aad cmp in paddd incl push and je loope popa xchg inc adc adc mov push (bad) jne repz mov test test cs loop in sti (bad) (bad) (bad) lcall inc xor xlat dec mov add mov aad xchg mov popa cmp cmc (bad) (bad) (bad) push push jle ljmp xchg (bad) mov or out cltd fsubrl jmp add loope sbb call mov je sbb repz inc cmp (bad) call adc mov out es adc mov add std (bad) push sub jns adc push lock sbb lods sub pop lock xchg out and fcoms ret dec cmpsb dec mov test stos outsb addr16 shrl call cwtl ja cli push mov movsb adc jbe lock in adc mov mov dec pop cwtl movsl mov das cwtl (bad) (bad) (bad) jmp push das sbb lea xchg mov test xchg insl mov push rol fidiv jno stos fdivrp ss cld (bad) (bad) ljmp mov dec aam xor dec fisub inc mov sub pop cld cmc mov inc lret ss jl loop cmp sahf hlt sbb in or (bad) cli (bad) (bad) lcall mov sub mov mov adc adc adc sbb (bad) repz idivl cmp sbb adc (bad) decl int3 jge loopne stc inc jmp sbb pushw sahf mov mov (bad) (bad) (bad) mov mov sub movsb push push outsl (bad) mov lcall inc jne jno lcall mov mov mov js (bad) (bad) (bad) clc (bad) xchg pop sub or cmpsl leave rcrb or adc or sbb das mov lss cmp mov ljmp pop loopne sbb fs frstor mov js or add cmp pop fnsave daa aam mov int3 dec icebp xchg pop jl and call adc (bad) (bad) (bad) lcall mov xor cltd paddb fs sbb stos loopne test clc mov ljmp insl rorb arpl loopne pop (bad) (bad) ljmp stos push int shr dec mov sbb push xor cli cmp pop lock fwait es movsb (bad) xor mov sbb (bad) fcomip test into (bad) (bad) jnp mov sbb push sbb mov cli clc insb (bad) (bad) (bad) (bad) stc push je pop mov cld mov adc or test inc (bad) outsl pop idivl cld (bad) (bad) jmp jnp test (bad) subl rolb mov pop daa test incl aaa imul in (bad) jg mov fcomi push mov data16 dec lods push jge cmpsb pop cmpsb xor ret mov mov pop jmp cwtl jge dec shld ret pop cwtl push jo mov inc adc pop les pop sahf dec hlt jl xor (bad) (bad) call inc fsts mov ja jl lea or sbb lcall popa das sbb mov fsubs rcl inc adc xchg hlt pop gs aad test mov mov xor popf push sbb sbb divb adc cmpb cmp je out mov (bad) stc cmp (bad) mov in mov inc mov (bad) loopne sbb pop sti in push xlat in mov decl sub add lcall (bad) (bad) mov add leave mov loope dec data16 jmp adc bnd cwtl inc test insl or test or jmp cmp (bad) je pop packssdw dec (bad) dec out repz xchg jbe jle (bad) (bad) incl pusha in sub xor dec inc jae adc mull xchg push std cmpsl xchg push in xchg in decl test mov sbb nop pop loop out mov (bad) sub jns bound add jmp xchg loop pop repnz mov mov loopne int (bad) mov adc jecxz mov sbb or xchg mov pop dec or pushf mov imul incl sbb fnop mov loop call in sbb (bad) frstor inc cli in and and lret dec aad outsl ljmp incl cmp js fstl cltd mov lcall jns pop (bad) (bad) (bad) lcall lods xor sarl jg push rorl inc cmp mov push repz out cmp test and push icebp sbb jo (bad) (bad) (bad) ljmp lds gs xchg cmc jae fcomip shrl and je push (bad) jnp sti cmc test into jp pop iret (bad) xor sbb movsb stos sub (bad) (bad) jmp (bad) xor inc push xchg push add int3 fisub add das scas cmp test (bad) (bad) call xor cltd (bad) mov xchg jge xchg push (bad) inc mov (bad) cmp les dec add cld add decl rolb shl int3 ljmp bound (bad) (bad) (bad) jmp pop mov std pop lock ss in ss lea imul aad hlt ss inc (bad) (bad) (bad) jmp (bad) ljmp or push add outsl arpl add cltd push inc scas adc adc loope out (bad) lea std add lcall mov push adc xchg jl sbb (bad) (bad) (bad) ljmp notl pushf lods icebp sub rcl or sub add clc or push lcall mov (bad) lcall mov mov out test jecxz mov mov sbb ljmp adc popa cld mov adc add sar mov cmp cltd xor popf decb int3 movsl out clc (bad) ljmp cld lods movsb into popl mov add dec cmp xorb jmp pushl mov xlat nop push ja or cs mov ret dec jo repz add jp mov ljmp add mov push pop sub dec sub (bad) repnz mov out mov jle test clc (bad) incl mov stos icebp imul jnp in outsb dec nopl (bad) (bad) (bad) pushl outsb mov aad fs cli movsl into dec xchg and push push out fcoml cli incl stos jle sub (bad) addb add rol stos mulb inc das clc or in push imul add loope in test out (bad) incl inc pop loop adc test jns dec into cmp bound cmp cli (bad) lcall adc fdivs iret aam rclb and or (bad) (bad) (bad) pushl push sbb (bad) icebp js movsb dec fisttpl stos outsb das add xor (bad) (bad) decl cltd out adc xchg push and movsl and stc jp in lcall mov and add movsl mov inc (bad) (bad) (bad) decl sahf add push imul and mov push or pushl add mov mov or cmc leave ja xchg fstl dec jg fcom lods jg (bad) (bad) call mov pop pushl out inc (bad) in mov es shrb pop addr16 inc (bad) (bad) (bad) (bad) jnp xor sbbl scas call stos dec mov jg adcl push mov jne sub mov push jae mov daa mov imul add mov insb idivb mov xorb cs add dec pusha scas adc (bad) imul mov stos (bad) (bad) (bad) (bad) cli aad and cmp sub sbb xchg mov xchg (bad) (bad) (bad) jmp mov add gs jle sbb aam jae sub pop cmp rcl sbb daa push (bad) jg (bad) decb mov dec mov jae dec push jnp xchg cmc jg (bad) lcall clc xchg test pop ss jbe fiadd jns inc lock in icebp (bad) (bad) call je xor push std dec jo aad inc mov stos xchg adc xor sar outsb in sbb in and pop jbe js lret add cli (bad) (bad) (bad) mov lret cltd aam push dec push enter mov clc mov inc (bad) call lret mov ss mov jge cmp push xchg int jmp jmp fcom xor cs sbb test xchg mov scas xchg pop mov ja push lds in (bad) mov data16 cmpl jp out push daa inc cld (bad) mov fnstsw clc mov clc call or xor mov ljmp push mov mov dec push push sub test repz rcrb scas sbb gs (bad) (bad) call add lods cmp call aad xchg lret out sbb (bad) jg test (bad) (bad) (bad) dec cld push fmul in (bad) push shl lret jmp xorl outsl mov js andb (bad) jmp mov xor push aaa movsl (bad) adc outsl shll mov pop sub (bad) (bad) (bad) call lahf repnz xchg aas xorb outsb or out repz pop sub jb rcr clc (bad) (bad) push push xchg push icebp pop adc mov mov cltd mov dec outsl inc aad (bad) (bad) (bad) mov call jae (bad) jmp pop xchg or movsb dec jp fcmovbe (bad) (bad) lcall fisub scas mov in bound ja aas adc mov aaa mov call sub xchg (bad) and loop stos fdivs pop (bad) (bad) decl nop sub pop jae call les lods pop or stos (bad) (bad) (bad) lcall je,pt (bad) fwait jo add (bad) xchg cld pop cmp gs lret repz or nop pop addr16 pop (bad) jmp roll dec jns ljmp push sbb and push lahf out jbe jno mov movsb and mov ljmp mov mov mov sbb in and dec jl stc es (bad) (bad) (bad) lcall in cmp jns ja sbb mov mov push adc shr int (bad) (bad) pushl cmc or fnsave jnp cmc xchg and (bad) into mov cli adc repnz or mov pop lock mov mov mov sahf leave jg (bad) (bad) (bad) (bad) jp xchg cmc lods fiaddl aam mov mov inc pop pop (bad) (bad) out clc adc daa mov fcoml mov (bad) sub and and xchg jg (bad) (bad) decl jbe xlat dec or sub sub pop icebp or adc outsb mov aas testb in push loopne int3 into shlb pusha cs cltd test ds sbb jge mov jmp inc out mov lods insb lea popf mov lock (bad) stc aad xor (bad) call aam mov cli jbe or (bad) (bad) call subl inc dec jmp in adc repz leave fidivrl dec leave xchg mov (bad) mov push or std sbb dec (bad) pusha add lock scas pop push call call push sbb aam ss orb repnz fld (bad) xor sbb cs xor xchg ljmp push fidivr shrl pop inc push sbb insl and mov stos incb loope jo mov mov (bad) ljmp push daa jne or inc div pop pop pushf push cmp or lahf (bad) xor xor mov imul xchg mov sub or (bad) jle stos push (bad) pop xor ja fsubl ja shrl pop pop adc std lcall jae mov outsl and decl push insb lds sarl nop (bad) (bad) (bad) push xchg enter loop ret iret and fisubrl add pop sub (bad) ja cs pop xor mov cmp es inc cld test ds ret (bad) stc add icebp decl adc (bad) js mov (bad) (bad) mov sbb fimull out icebp cld aad push cwtl pop fdivr (bad) (bad) pushl ss inc xor mov scas das stos out call mov stos pop add inc (bad) (bad) (bad) jmp cli or pop xor push cmp cmp and cmp mov (bad) and sbb (bad) (bad) decl sbb (bad) xchg movsl cmp push imul js sarb jnp push (bad) (bad) mov inc (bad) fisub fmull sbb sub (bad) (bad) (bad) pushl push add jl aam inc outsl add cmp pop aam out push and xchg sbb pop (bad) and lcall mov in stos in ds (bad) (bad) (bad) mov cld out push cmp xorl mov mov (bad) (bad) (bad) decl cmp adc cld jno int jns std mov cltd push lahf ss das or mov and incl jp call ficoml adc call outsl cmpsl pop in and or (bad) ljmp mov into (bad) xor (bad) pop mov jge xor je xchg cmp dec lahf mov and lcall cltd add pop xchg mov sub (bad) (bad) jg mov adc jle xchg xchg pop cmp push ds ds and pushw push (bad) jae mov mov je (bad) (bad) (bad) jmp clc pop jae xchg in adc nop out xor push xchg mov push dec sub push (bad) (bad) (bad) decl cmc icebp arpl and push in xchg lds mov in sbbl mov dec cltd testb insb inc popa push jo mov out jno cld cmp imul ret popa mov lods xorl or outsb jne lds scas xlat scas pop sbb fldenv add outsl sahf push sub pusha repnz jns scas (bad) (bad) lcall push sti dec sub and push test jno es aam cld (bad) (bad) incl js addps xchg inc mov notl cmpsl sbb jnp xchg cwtl into pop inc cmp popa mov mov call adc and ljmp push mov int andl add test cld incl jno das push add fidiv es push mov (bad) dec fwait imul sbb test xor leave push xchg fs aam xor idivb xor dec xor (bad) jmp daa fsts mov ds xor pop aad pop stos mov mov out pop test (bad) (bad) inc sub test movsb pop outsb (bad) xchg hlt movl push dec insb add fs std add (bad) (bad) (bad) pushl aas jl loop xor ja ret jae add mov fs (bad) (bad) in xor jmp out sbb lods push stos mov mov (bad) lcall xor inc dec in pushf rclb adc dec mov ret (bad) decl jno pop or movsl int cmp lcall sub (bad) (bad) dec mov cmpsl cli or push shr lea lcall adc test (bad) (bad) incl xchg test sub repnz pusha adcl fidiv je (bad) xchg inc ficomp xor mov ja adc into mov sub lahf xchg sti outsl imul leavew and or inc inc ljmp loope imul (bad) mov sub adc push pop fstps gs pop xor push movl xchg in mov nop mov jne dec dec aam xchg ljmp sbb fs aaa in push cmp xlat pop cmp xchg sahf jb sbb js inc (bad) sbb (bad) jl outsb and cmp test in test push int3 mov fist dec dec std jo sub adc mov in cli cmp call add push jmp ret xor bound (bad) jmp ficom push pop gs add xor (bad) (bad) inc stos (bad) andl or adc pcmpgtw cmpsl jle enter dec scas nop mov hlt xchg xchg imul sbb mov push mov add fdivr (bad) (bad) (bad) mov insb pop iret loop or dec cltd mov cmpsb or and fs incl mov mov dec out test fsubl push outsl ss inc sbb mov imul mov pop sub (bad) rcrb xchg inc stos cmp sub lds fadd (bad) (bad) incl popf cmc adc and data16 inc test daa sub sbb andl fisub imul or sbb mov adc mov (bad) jo xchg ljmp cli jnp test jge decl mov cli idiv xor pop insb insl pushf jmp ret xlat clc or (bad) jb mov fcomip pop adc cmp dec and (bad) (bad) decl mov pop cli xlat and fbstp cmpw (bad) out xchg cli fist dec movsl (bad) (bad) (bad) inc scas or out pushf cmp pop sbb pop push das fnstenv movsl sbb jg sbb xchg push (bad) (bad) (bad) decl xor jbe decl cmpsl xchg jbe aam mov call xor add (bad) (bad) lcall mov inc scas pop xor rcrl stos pop or xor in stos dec iret inc dec scas add (bad) (bad) call or loop push negl sub les push mov inc push and (bad) (bad) decl mov mov ja cli push or inc jo sbb xchg xchg lea (bad) (bad) cli out mov push stos (bad) repz jge (bad) mov xchg xor icebp or cmpsb fwait (bad) (bad) (bad) mov push out data16 out adc xor aas jne sub pop cmp addr16 jnp (bad) xchg fs adc pop adc (bad) (bad) (bad) decl cli xor dec lret clc push (bad) aas xchg insl ret mov and mov push and jg pop sub (bad) (bad) (bad) jl mov push mov mov xchg lcall (bad) push pusha add lret bound loop aas dec ds adc mov icebp popa mov (bad) hlt mov ficoml test stos shr and (bad) (bad) decl repnz push adc push out mov not xor mov call (bad) idivb cmpsl in push je xor int inc movsl (bad) (bad) incl pop xor stos adc roll pop or daa mov xchg nop mov mov fstps popa pusha or (bad) (bad) (bad) decl out jle xchg mov add mov jge jb xchg push stc repz cmp ljmpw xchg mov (bad) ja jno jno shrb repz ret xor sbb in sti xchg mov xor jl xchg push les dec leave fiaddl jmp (bad) jmp int3 loop jle dec stos mov movsb aas pop das imul or mov (bad) (bad) mov (bad) stos xor cmpsl sbb mov test data16 dec mov (bad) jg jb lahf or pop stos xlat xchg ja sti add xor repz test xchg (bad) (bad) (bad) decl pop push or pop dec mov pop xor jge xchg sub ret jae sbb (bad) (bad) jmp adc adc popa jmp add (bad) cmpl imul lods mov (bad) (bad) incl nop in adc and lods imul and ds cmp push pusha and dec rorl adc pop mov (bad) (bad) ljmp loop xchg lods sub hlt sub and inc mov add pop inc sbb ljmp xchg inc (bad) call in lcall (bad) decl fidivrl mov push pop cvtdq2ps cmp (bad) inc pusha mov add pop jns lret imull and lcall (bad) leave fcomip (bad) decl mov test cmpsl test mov cmpsb jp jb sbb pop jbe jb (bad) (bad) (bad) mov mov cld add iret sub mov xchg adcl call data16 pop mov jno data16 (bad) leave pusha push ret mov sub (bad) (bad) (bad) (bad) fisttpl int xchg lods lret clc pop and xor mov loope in test or mov xchg jne ljmp sub movsl add adc jl cmc dec cwtl (bad) and dec mov (bad) or (bad) jg dec and js stos push push pusha mov or inc and ljmp and out sub xchg mov cltd mov mov sub enter push ss (bad) decl push xor inc stc adc shl rorl lret push push xor (bad) (bad) call enter xchg jge cmp cmp cmp (bad) xlat push push decl mov and insb in cmp movsl repz xor xor scas aam jmp repz fsubrs (bad) sub (bad) ljmp sbb out xor (bad) shr repz pop and call es jl mov mov outsb je mov movl pop inc mov or or adc icebp (bad) jne add jmp jg aad cltd push push shl mov dec aaa mov in imul fucomip std (bad) (bad) jmp jl popf jge fidivr lea sub inc std mov xor fsubr or outsb jl mov shlb ljmp rcr add repnz or sbb add mov adc scas sub xor sahf jp jb stc (bad) cmpsb jnp cmc in push pop icebp (bad) ljmp repz es iret pop push stc mov leave jg add lods (bad) (bad) (bad) (bad) pushl out pop and scas mov xlat test das stc int3 lock mov ret gs sub es sub gs ds sahf sbb add (bad) (bad) (bad) mov dec pop push mov fwait (bad) xor sub jg cli sbb sbb mov mov push (bad) fcom add cltd xchg dec jae icebp and xchg data16 xor fbstp outsb mov scas sbb (bad) (bad) (bad) lcall mov inc push stc popl add cli jmp xchg repnz arpl (bad) jg cs push jae sbb add mov mov es (bad) (bad) (bad) (bad) cmp push adc call je (bad) jmp (bad) (bad) cmp (bad) orl push (bad) mov and push mov aam mull xchg mov mov insb incb in or fldt aaa inc pop ss ret dec pop pop test (bad) (bad) (bad) call push xchg push cmp lods sub nop or adc dec mov hlt inc incb (bad) pushl rcll mov mov and rol lahf negl mov push cmc mov std daa push mov adc lcall add sahf jbe ds cli and outsl push sbb clc (bad) (bad) lcall mov loope mov inc les roll or cmc xor ljmp push mov test in add fisttp dec mov repnz test adc out stos (bad) (bad) inc mov pop cli fdivrl int3 sbb add and (bad) jmp xor ljmp or xchg ds (bad) (bad) (bad) (bad) mov (bad) sysret popf mov add mov rcrl leave lods sahf lock test movsl test scas fildl lods pop lock and incl mov xchg fdivrl or js adc (bad) (bad) call cli in sarb insl xchg fs repz fistl lock pop mov (bad) (bad) incl push pusha inc mov mov push sub sahf ret dec cmp push add out sbb (bad) add out cmpsl dec pop mov cmpsb lcall pop add sbb (bad) push add sbb icebp (bad) jmp stos pop cli or and push cmp cmp lock mov aad enter jge jmp rolb das je andb ja (bad) (bad) mov lcall out out xchg and push shr dec movsb (bad) (bad) (bad) jmp xchg sub stos dec mov mov mov lods xlat dec lret test lds lods pusha push inc fcomip (bad) (bad) cmp adc add (bad) lock (bad) lds fistpll enter sbb fisttp adc cs subl jbe lds sar (bad) decl ja inc loopne into xchg xchg mov test (bad) call pop (bad) mov adc lock mov sbb cwtl dec push (bad) (bad) (bad) (bad) fdivl sbb jle insb mov sub mov push int3 sbb jle (bad) (bad) pushl sarl daa incb mov pop jnp imul shll (bad) fiaddl (bad) (bad) decl sarl push rolb mov mov push cltd pusha mov enter xor test dec adc (bad) (bad) ljmp mov je xchg (bad) lret ret add inc into xor (bad) (bad) call pusha pop popf cmp jo add es inc mov mov pop push test mov add call push push xchg dec add xchg and jbe adc xchg stc ljmp dec (bad) (bad) (bad) push cld pop test aad dec call rcrb test push mov jge and jns xchg mov (bad) (bad) jnp out sbbl lret dec (bad) sub out cmpsl fcmovb add jle (bad) mov out dec mov sub (bad) fild aaa iret xchg xchg sarb or (bad) and je push inc (bad) (bad) ljmp stc pop mov lea sbb xchg sahf je mov push or int (bad) xchg pop icebp incl push jl push xchg jmp lods mov (bad) jg inc sahf data16 cmp xor push mov (bad) (bad) jmp and adc ret xchg std push in je clc push and call sub lcall sub mov jns imul (bad) incl in push mov inc insl mov jns lcall out dec pop (bad) (bad) (bad) pushl popl xor addr16 repz xchg fiadd fimul in sbb jge add repz loopne shlb stos cmp jle (bad) (bad) ljmp into pop loope imul fwait add bound mov test test sub repz dec ja jge test insb cmpsl repnz (bad) (bad) dec cli push or aas push call sbb pushf scas rclb dec loop mov (bad) std add jecxz dec xchg sbb mov in xchg testb cmp push lods jmp adc mov adc stc test jmp fbld pop pop lea gs (bad) (bad) (bad) dec or sarl icebp adc xlat add stos sbb dec inc in (bad) (bad) push pushf pop je inc test ret jnp lds jge jle push es ja (bad) lcall adc xchg outsb add out or call out das aad decl popa enter int lret cmpsb cmp mov das (bad) insl ljmp xchg xorb dec sbb insb loope jg fisubrl fcomps jmp mov mov clc (bad) mov xor icebp mov push cwtl (bad) out loope outsl adc jg (bad) decl add stc lea imul jno xorl jno xor pushl add xorb (bad) (bad) pushl ret test scas jp test mov iret sbb cltd jo aas adc xchg (bad) decl lock xor pusha into xchg loop rol repz fildll ljmp (bad) (bad) fcomip aam sub mov push cmc sar in call mov (bad) (bad) (bad) jmp cltd mov pop dec cmp pop pop cmp or cmp aam (bad) (bad) call out cld (bad) xchg nop (bad) fisubr bound fbld (bad) aas (bad) movsl roll cwtl sbb test add add addl mov ja pop sahf push rcrb xlat rol (bad) (bad) mov mov sbb inc xor dec bound imul (bad) push pop push sahf push cmp int mov in movl sub cli push cmp hlt (bad) (bad) cld pop mov fld xchg gs xchg adc sub loope dec ds dec pop sub sahf mov pop es mov and and pop loopne test bound push shrb cld (bad) mov push mul mov inc cmp scas xor aaa push aas cmp (bad) push scas and fnsave add lea pop fisubl imul nop mov xchg cmp dec dec or cmp push ljmp xchg (bad) (bad) (bad) pushl fildl out (bad) into out jnp nop daa mov or lods arpl pushf inc add inc test fisttp push mov xchg (bad) and stc pusha cltd xchg repnz cmp xchg cmpl (bad) (bad) fisttpll fmull mov out jmp push mov jmp in mov dec jo arpl (bad) (bad) pushl bound shr dec lret push jne testl rolb popa xchg (bad) aam out aam (bad) (bad) (bad) (bad) out push pop dec xchg mov xor int push mov pop xchg xor mov jb inc cs call mov pop fcomp push (bad) (bad) (bad) call xchg addb jae pushw dec lcall mov mov test sbb lcall pop insl jnp inc push in pop or js cs push imul (bad) out clc call add fild mov dec popa dec pop sub inc push in les les inc stc pop fstp add cs js (bad) andl fs (bad) (bad) ljmp (bad) iret jp test xchg mov add push inc popa (bad) mov loopne xor inc cmp dec mov mov xor xchg mov or sahf rcrl cwtl (bad) (bad) decl inc add adc jnp roll mov (bad) lds ljmp mov jae fcmovbe cmp js xchg in outsl pusha dec mov (bad) call or push sbb imul movsb lods xor (bad) push sbb loope xchg xor fistpll int outsl rolb and cmpsb (bad) (bad) call dec xchg push cmp mov sahf cmp xchg ja test aad (bad) (bad) (bad) pushl (bad) xchg sbb idiv jge xchg cwtl cmpsl jbe cmpsl push and aam orb jmp das out ja loop or mov mov test jnp repz xor (bad) (bad) call fs xchg inc adc rcrb inc xchg test movsb mov xor lds ret push stos ret nop popf pop inc jg (bad) lcall xchg add lds insl xor jae in outsb outsl (bad) cltd mov out (bad) (bad) jmp mov es in push loope addl jns,pt je js add mov push pusha sete mov insl xchg (bad) (bad) (bad) fistpll xor xchg jl jne cmp mov fstpt sbb or dec xchg lock repz or mov (bad) aaa mov and fisttp cmc mov (bad) pop lds mov (bad) mov movsb xchg xchg jecxz (bad) (bad) ljmp mov xor int3 aad jns lret out adc mov push sub inc sar (bad) (bad) incl stc in jge mov add jno cmpsb mov push pusha jmp mov in mov lret cmpsb inc (bad) call ret xchg or lods repz je mov mov (bad) (bad) (bad) call mov dec xlat jge add jo repnz pusha lods outsb sub adc rorl repnz stos test pop cmc (bad) lcall insl int sbb jbe jle and outsl subl (bad) mov aam adcl cmpsl or push or loopne (bad) sbb xchg int3 inc sti xor (bad) (bad) (bad) decl cs into or jmp inc test dec jl push jns imul dec out mov push aaa cmpsl and dec dec out push (bad) decl and js test cli xlat rcr (bad) cmc xlat out bound lock (bad) enter pop std cmpsb push shr pusha pop push inc sub mov ds push in (bad) (bad) (bad) decl pushl cmp pop push mov jge jbe mov xchg pop adc push faddl mov jmp lock stc or lods cmc cwtl daa (bad) (bad) (bad) fbstp xchg clc sub inc sub jmp xor pop dec test aas jb aad jmp ds out cmp in sahf insl lret cld dec repnz (bad) (bad) jg push or or cmpsl insl movsl push xchg sahf gs push lds lods aas lods insb ret sarb push in sbb or pop fistpl lods pop arpl decl (bad) mov push scas jb pop into dec sbbl (bad) jg lahf data16 fadds (bad) xor test sbb sbb inc fistl cwtl repz fs lret bound (bad) (bad) decl roll adc je insl sub jecxz mov push call push push (bad) sbb (bad) (bad) (bad) cmp pop mov mov mov sub nop xchg mov test jmp shrb nop mov mov (bad) rclb sub fmuls gs cmp imul outsb (bad) pop daa lock xor ds (bad) (bad) jg fistp push sti push inc enter xchg (bad) push mov int pop add mov je jmp stos popa mov jns add in sbb mov or or js cld cmp (bad) (bad) push enter pop call (bad) or cwtl mov mov adcb (bad) (bad) (bad) incl aam sub fsubr fiaddl push push xlat xlat add out loope out mov (bad) call (bad) popf cmc arpl dec inc jge and outsb jnp ljmp (bad) out mov cmp sub push pop mov (bad) (bad) (bad) incl lahf fldl sub ja dec mov mov lock popa or push aas fcmovnb fldenv cld imul roll xchg and xchg (bad) ljmp mov and mov push ret jne or jb,pn loope imul stc inc popf dec ret dec pop js (bad) (bad) jmp pop in clc or out sbb adc stc xor popa xchg xor (bad) (bad) (bad) lcall or (bad) mov mov mov push mov cmp or adc fidivl shrl dec (bad) decl sahf movsl ljmp xor inc mov and jl or mov sub outsb mov insl adc (bad) lcall imul imul inc mov sbb mov pop jns imul cmc test leave pop xor and cmpsb das push (bad) (bad) (bad) dec sbb (bad) data16 loop mov mov sbb aad xchg (bad) (bad) je ljmp (bad) ljmp test ret fist mov es mov add incl (bad) (bad) fiaddl sbb pop mov xor adc rorb daa sarb test popf jmp pop mov mov (bad) jmp sbb shrl lret adc cmc adc inc stos xor mov or ds xlat push or or std ljmp dec fist fdivrl pop movsl sarl xchg inc lock mov loop mov (bad) (bad) incl and add xlat cmp xor adc clc sbb (bad) (bad) ljmp lret inc inc mov and push mov adc fsub fsubrs je push pop mov (bad) (bad) lcall daa es js jo lcall jge mov dec out sti pop in and (bad) pushl ror mov lcall fnsave mov jae mov cs fwait rcl push jo,pt dec (bad) (bad) pushl push clc faddl jle daa in sbb sbb sub jecxz add mov add stos incb out adc lods pop loopne,pt sbb add (bad) (bad) (bad) ljmp fisubrl movsl (bad) ljmp ss ds orb inc leave daa orl lock adc push xlat or inc mov mov pop aad adc mov incb movsb out inc js movsb loope cmp js sub adc sub (bad) (bad) (bad) dec into push or dec mov add sbb adc enter stc ljmp cltd and inc sbb test (bad) lock lock adc (bad) decl lret sub fdiv mov hlt or lods add xchg or mov fbstp jmp pop add dec mov inc fbld out sti fstp lock decl xchg arpl lds xchg cmpsl cmc pop mov mov stos xchg push mov add aaa jle cmp (bad) (bad) (bad) call (bad) stos out xor jno aad mov pop mov loope sub ss pop jb and add sbb add mov fbstp mov jbe mov (bad) lcall sahf pop dec mov mov adc daa sub daa xor push and mov in popa aam clc sub mov push mov je jae add ds loope push jae and (bad) pushl adc lret loope (bad) cld test cmp sub fist fnsave out std push out jne dec sbb scas sahf mov lahf pop pop jg call test push loop mov (bad) lods lcall lock sub incl ljmp jg out fwait pop addb xor cmp cmp jae subl (bad) inc xor out add xor xor ror add xchg jmp pop jae pop jle cmp dec mov lcall jae addb fs pop jno (bad) ljmp cmp sub jb dec add outsl ret xor decl xchg jno and fscale sahf inc mov push sbb (bad) decl mov inc and data16 stc fstpl in testl mov call icebp lret aad fisttp sub cmp popa (bad) inc clc fs jg mov add out dec mov xor sbb addl andb (bad) push mov mov pusha gs xchg sub ljmp mov pop pop inc cwtl repnz stos stc in cmpsb mov sub add mov mov (bad) ljmp pop pop test (bad) or adc cs dec sar (bad) mov fdivl aam int int dec loop call sub (bad) (bad) (bad) pushl test loop rcrl inc arpl sub ss jo (bad) rorl int mov (bad) xchg fist xlat cld mov mov lcall (bad) (bad) (bad) lcall cmp int3 out sbb leave sahf xchg dec mov hlt adc push lahf add out (bad) (bad) (bad) ljmp mov leave rcr push gs rorb cltd mov xchg hlt mov out jg adc ja sar es push inc pop xor daa loope sub idiv xor inc or cmp (bad) arpl mov (bad) (bad) (bad) lcall adc xor imull rolb outsl xlat mov lcall add (bad) (bad) (bad) lcall sbb movsl std imul sahf pop mov mov mov dec lret subb xchg test ror xor fsubrp dec orl ret dec not (bad) (bad) (bad) pushl testl push mov pop adc add scas std fstl mov stos jg (bad) decl pop inc aam sahf fsubl pop mov xchg test das test or pop inc imul mov aad (bad) (bad) (bad) pushl mov sbb inc xchg push xor ss sub cmp mov sub mov (bad) (bad) (bad) ljmp in ja adc icebp cmp fcmovu out repz (bad) outsb mov pop mov (bad) (bad) (bad) push outsb dec lea int3 in adc inc push inc xor mov rolb ss mov (bad) (bad) inc dec mov xchg (bad) push aad xchg cmp scas inc rcrl addl sbb jne ret cwtl push jl call or jb and mov cmc mov rorl pop lods ds mov js and (bad) mov mov lcall nop inc insl fwait sahf fbstp sub scas fbld call test (bad) (bad) jmp sbb (bad) mov les mov (bad) call in mov mov stc pusha or pop and ds push add xchg cmp push out fidivr (bad) (bad) (bad) decl lds aas add and arpl (bad) sysexit hlt xchg fimull (bad) call pop jnp xchg in xor fwait or incb jmp push rdmsr aad out test (bad) (bad) pushl cmovae inc mov cli fwait dec out xchg stc or sbb jo lea fs ret pop cld clc loopne (bad) cmpsl push lcall ja pop mov ficom scas in test or lar push (bad) (bad) (bad) incl test fnsave sub xor xchg into cmp mov loopne call or (bad) (bad) call jae shlb pop loope cwtl (bad) xor and mov mov in (bad) (bad) (bad) incl adcb mov cmpsl mov add pushf movsl mov add push jae sbb or les in sbb or insb sbb add adc mov pop fbld jb (bad) (bad) push in sahf fstps cltd mov cmp sub aam dec mov daa int3 push xchg pop (bad) (bad) (bad) ljmp leave pushw outsl test sahf push inc sti push sub add xor xchg inc pushf loopne pushl loopne push pop mov sub out jge (bad) lcall mov pop push sbb jb cmp mov (bad) decl (bad) mov stc lcall cmc sarb lock dec jg add inc (bad) dec pop dec dec scas xchg lcall mov xchg in pop mov lcall in push clc (bad) (bad) push test imul les mov xchg repz mov (bad) jmp sahf or xor xor or (bad) call xchg mov out lret out dec sbb lods jp xchg mov xchg jbe jmp mov data16 cmp sub mov dec jg test mov test (bad) jg jmp adc daa mov bound push sub xchg xor mov jmp xorl decl adc or pusha inc push int idivb andb mov das sub insb and jnp aam decl push mov aad push (bad) lock lds in (bad) mov and ljmp imul cwtl dec dec mov in mov ljmp add jns mov (bad) (bad) (bad) call cmp mov call sbb adc hlt xor call mov arpl (bad) (bad) (bad) pushl push mov dec not imul in xchg dec push xor and pop adc into (bad) xor xchg outsb stos icebp pop rolb xchg pop or mov jo or test (bad) (bad) incl xchg and push dec pop daa add xchg jl sbb imull inc sahf arpl ds lcall ficomp jge lahf cmp sbb dec mov repz mov fimul adc and sar (bad) (bad) pushl or fistpll aas jecxz cs jmp mov insl (bad) xor xchg add gs addb (bad) (bad) ljmp mov mov cmp jbe xchg pop xchg lods popf insb leave inc sbb mulb movsl cmp rclb push (bad) (bad) (bad) out call ret aaa fmuls pop test pop jle dec add insl push outsb (bad) ljmp popf xchg movsb inc jmp popa hlt cmpsb adcb in add std out mov jbe loope xchg dec ljmp mov incl daa dec jg lock push mov popf sar outsl fstpt push sahf sub pop cltd idivl pop mov jnp cmp mov clc dec pop jg (bad) lcall in ret push or (bad) (bad) fbld push int enter (bad) or data16 xchg imul jo xor cld mov mov (bad) dec mov (bad) ljmp jmp fsubs pop loop pop mov jp,pn mov aaa mov xchg aaa repnz or rcrb out push mov xor addr16 xor push lret aaa xor sar jnp jns push add sub out (bad) ljmp mov push fwait inc mov jne jbe imul pop mov (bad) (bad) fistpll and mov test dec leave out je xorb out mov ficom (bad) call icebp push repnz adcl dec rcrb add (bad) (bad) inc lret push out and rcr sub dec in and or gs cmp imul (bad) (bad) mov add ds jnp fistpl add aaa aaa cld int3 mov lcall jmp pop sbb pop inc mov inc adc loop sub jg sarb (bad) (bad) dec cmp stc mov jp mov jp xor nop popa nop mov test popf imul mov adc xor lods insl ds hlt (bad) aaa add gs inc gs pop xchg sbb (bad) decl jae cmc stos mov fstps xchg pop sbb lret cmc aam out (bad) (bad) jmp lea in cmp inc xchg in fistl out or (bad) gs js (bad) (bad) mov cld jae (bad) dec lods xor cmp sub adcb ret es xchg mov lock cmp pop push loopne inc ret (bad) mov adc int pop pop sub mov loopne jbe sub roll icebp adc push mov int das cli (bad) decl (bad) sahf ds mov in clc lcall mov data16 lahf (bad) (bad) (bad) call idivl lods sub std hlt sbb pop (bad) xor test xchg pop icebp pushl (bad) jbe insb add jl imull (bad) jns xchg (bad) test call lcall into ret ss ds leave sub add or fsubs fs das pushf cmp shr loope cwtl mov (bad) jnp (bad) (bad) decl imul out in sbb jecxz lahf rcl jbe xor jge pop repnz cld (bad) (bad) (bad) ljmp mov push (bad) jae fildll push push icebp (bad) out cs cld shll aaa mov mov pop dec fucom and addb add (bad) mov dec shrb cmpsl cltd repz test js adc mov (bad) (bad) (bad) call jmp aad push pop ja cmp inc xlat test add xorb int in test ljmp or std aam sub (bad) jg hlt mov xchg mov pop lods incb mov or mov sub rcl pop mov push cli jb (bad) (bad) inc push inc outsl popa mov ja sub xlat into roll jg xor lods mov (bad) (bad) dec (bad) cltd mov add push les js stc or inc int pusha dec call fisubr (bad) ret arpl test jle call mov mov test out add sub pushl pop test sbb ret push pop movsb xor lahf in sbb ljmp jne lea and pop lods cmp test aaa xor shrb push scas mov ds decl sbb dec push adc roll pop push push adc arpl sahf fdivl mov lahf outsb sub (bad) (bad) (bad) pushl pop sub xchg scas int3 adc sbbl clc push out inc adc mov add xor (bad) (bad) jmp out jae notl push xor adc inc inc das lcall inc lock jmp sbb jns adc xlat sub add dec fildl jno ret mov sahf inc adc (bad) mov pop sbb (bad) mov dec push add push sbb adcl or and cwtl jne pop pop (bad) mov xchg ja (bad) dec pop (bad) outsb das dec adc jmp rolb jmp dec lahf out adc mov sti mov es jo lcall sub add push pusha pushf (bad) mov jmp mov fwait shll (bad) call push cmp mov xchg pop mov jg jg xor cltd in cmp loope and negb fwait mov jns push shr and sub mov loope test leave cmpsb xor cld js test mov stc adc xchg ja (bad) (bad) (bad) fcmove fwait je cmp dec lret sbb pushf (bad) mov dec dec xor in xchg or (bad) jg (bad) mov pop ss scas aad add mov pop push sub inc imul push sub enter dec xchg loop in jg imul ds (bad) (bad) mov pop out dec mov inc int or sbbb dec test (bad) (bad) lcall push lods mov xchg fidiv fildl fcomps push push lods orb pop mov push fwait sahf insl insl push push fisubl xchg xchg scas sbb fbstp stos pop mov cmpsl xchg mov nop and jg fs dec sbb lods ffree xlat lods mov xchg movsb clc lcall rol scas push popa add enter jp or adc in outsl cli ficoml mov mov (bad) jmp cwtl adc mov push cli mov pop inc mov mov (bad) (bad) (bad) jp test push es ja push dec mov insl mov lcall lock (bad) (bad) incl sahf mov out push adc cmp cmp sub in stos (bad) (bad) jmp call pushf aam add push push mov (bad) jmp mov call add and and (bad) popf xor jo pop icebp (bad) fisub and imul xchg incl jns inc pop stc mov hlt (bad) call pminub adc mov xchg cs (bad) decl out xor in test mov aaa lods mov enter (bad) (bad) (bad) decl aas imul xor push in mov clc sbb fisubr mov sub repz mov mov xor (bad) sub add xor (bad) cmp movsb push dec (bad) iret aaa cmpsb aam (bad) insl lds mov lahf sbb push out mov test mov (bad) (bad) call or out aad push aam add in mov adc mov (bad) adc (bad) (bad) (bad) and sahf mov inc mov ret push (bad) xchg dec adc dec cmp (bad) (bad) (bad) jmp mov int3 pop mov rclb or mov (bad) (bad) cwtl sub cmp cmp (bad) (bad) (bad) push sub pop int jns pop mov aaa xor clc data16 hlt lods and mov xchg (bad) (bad) mov (bad) fidiv mov scas push stc mov stos (bad) lcall xor aam mov out jmp les in and ja (bad) (bad) incl mov das push jmp add roll cmp lock mov (bad) (bad) (bad) (bad) jecxz,pt push scas adc jno aam lods mov jp faddp cmp repnz jmp (bad) (bad) (bad) pushl aam cmp dec loopne sti mov push subb rclb nop adc (bad) (bad) lcall addr16 and scas inc int pushf cmp sub xchg or xchg sub push scas loop (bad) or jbe (bad) (bad) (bad) decl stos or lods sbb sbb sub aaa loop rcrb imulb fidivl cli (bad) jnp call push mov or inc xchg push push ss jle inc mov sbb lock jg pop cltd test sbb (bad) mov outsb jns (bad) lcall mov aas jnp ljmp test mov mov ret mov fbstp js dec cmc jbe test (bad) (bad) (bad) pushl bound jle repnz mov cmp mov fsubrl ficoml sub pop in pop loopne test (bad) (bad) jmp push add add movsb push mov leave mov test (bad) (bad) (bad) push sti roll insl loope xchg sbb inc out xchg leave push (bad) and pop lret pop mov or cmp lea sahf push repnz (bad) mov push adc in decb aad jle dec iret addr16 mov push in pop cwtl push cmp cmp ret incl inc lret or inc jecxz adc (bad) (bad) (bad) ljmp adc xchg and pusha lods sub fwait add adc das sti icebp outsb mov dec xchg into or mov repnz ds cmp pop mov jbe or (bad) outsl mov popf ljmp in or (bad) (bad) incl jne testl aad test add mov cmp or jmp cmp test lds or shrl mov out push clc (bad) (bad) lcall pop push sub and aas stos adc scas mov (bad) sub cmc dec jmp pop and mov aad hlt cmp test lret int3 xchg adc xor stc mov jmp sahf push or int3 dec jbe xchg enter int3 mov insl loop (bad) fstp xchg int3 in dec mov dec loop add (bad) pushl push lods inc (bad) mov and inc fwait jne in mov fwait and leave sub test push dec ret inc xchg jmp mov imul rorb mov mov mov decl sbb mov inc push movsb lret cld jecxz cmp nop mov push loop xchg (bad) incl icebp xchg arpl stc test adc push out mov push mov shrb hlt es inc sub fs insb outsl jno mov addr16 adc leave aam push (bad) incl push pop adc dec inc pop jmp test lret cmp std (bad) (bad) decl jmp sub out rcrl cmp in and test xor into incl mov hlt sbb pop cwtl flds js mov outsb (bad) jb (bad) cmp pop sub divb xor mov adcl sbb int3 loopne push out fisttpll adcb push cli scas dec pop dec jp xor push fldt stos xchg (bad) (bad) (bad) jmp mov push out je mov sbb dec sbb shrl (bad) xlat popl adc arpl push push cltd sub (bad) (bad) (bad) decl push jne dec scas jle dec xchg lods add cmp mov xor or jmp (bad) in test push adc jp jg scas cli divps int3 add pop push pop test mov xchg (bad) xor stc rcrl lcall jecxz adc repz inc fnclex jg inc out cmp dec (bad) (bad) (bad) jg mov mov (bad) pop jl out loop imul int3 loope sbb call mov push cmp popf adc sub sahf (bad) (bad) (bad) (bad) push imul jne rep push (bad) js in mov gs sub fildll xor icebp ljmp repnz or enter out pop fnstcw ja or cmovne ljmp mov out sub lods sub mov (bad) fistpll sbb imul xchg or (bad) ljmp push inc paddq mov test (bad) jnp mov dec ljmp lcall iret sbb mov in daa std push gs push inc add in popf lret neg pop mov (bad) call loopne mov cwtl leave xor popa mov cmpsl stos faddl lock adc cmp pushf test fwait dec jle cmp add inc push (bad) ljmp cmpsb adc xchg sahf loopne ljmp jne sub pop or (bad) fistp xor dec or scas clc (bad) movsl adc pop xchg lods inc out jbe push adcl (bad) decl test insb xor iret inc sbbl (bad) (bad) pushl xorl pop test enter mov repnz (bad) cmp insb pop mov sbb mov shrl mov cmp (bad) (bad) (bad) fmull cltd fcmovnbe (bad) cltd dec and jmp mov pop sbb xchg (bad) mov push pop int3 js jl das cwtl repnz (bad) (bad) (bad) incl daa dec sbb sbb stc xor nop movsb orl ds inc mov out cli decl dec inc stos lret (bad) xchg iret outsl cmpsl jl sub or push in hlt (bad) incl pop push add or cltd stos fcoms cwtl aaa sbb pop jg (bad) (bad) jmp fs jbe (bad) jne ss in imul add mov mov (bad) (bad) push pop cmpsl dec inc popa in inc jbe mov jne and sar cmpsb push lret and (bad) (bad) (bad) mov (bad) pop lea inc les mov cmpsl (bad) (bad) (bad) mov movl jae push sbb xchg mov add xchg mov (bad) (bad) ljmp pop mov lret push inc aam iret lea xor push adc sbb jo mov lret add push pop push cmpsl mov jg jmp ret idivl dec mov rol popa pop imul addr16 add add test (bad) call lock cmp jns (bad) lret or mov jb (bad) (bad) mov pushf inc (bad) cmp call jno lods push adc movsb add xlat jg jg imul ficom insl sub adc les ret test jbe out inc xchg in arpl sti sbb clc push mov in fs sbb jne shl pushf sbb push add fbld mov rcrl inc cmc dec xchg pusha add jae faddp pop idivl shrl sbb and mov in test std cmp lea popf jb xchg ss xchg push mov (bad) cld push popf mov push call shrb ds (bad) decl jmp jp pop fcompl xor cmc int3 andl (bad) js div pop cmc or popf add dec adc imul enter (bad) (bad) (bad) push push dec mov sti mov push fldl lds jmp pushf in bound out cmp (bad) cmp inc clc les lods das adc cmpl pop jle pushf inc dec xor pushl std mov mov and lahf scas out rcr cmp (bad) inc jbe push jne mov lods inc mov inc sub mov push xor xchg (bad) mov jb nop js (bad) (bad) jmp xor xor pop xor adc dec mov mov (bad) or and orl pop inc lds mov jo (bad) lret scas mov movsb cmc and loop inc movsb jmp sbb (bad) jg inc fisttp xchg adc ds lock stos mov (bad) (bad) cli inc add sti testb rcll das jg jmp mov leave (bad) ljmp mov lds or cmp pop clc (bad) (bad) lcall pop aad sub jbe sbb lahf rcl les pop inc rorl das scas adc rclb (bad) xlat insb push pusha out out xor hlt mov stos (bad) (bad) decl pop push mov in pop or pop aaa inc xchg ficompl jmp movsb outsl aas lock (bad) call jp leave outsl dec shrl dec repnz bound mov mov pop mov lock add scas and jecxz and test lock (bad) imul mov mov inc mov cld push in sub test nop repz shl out (bad) (bad) (bad) push xchg push pusha aaa cmp mov mov xor xchg in cmpsb ljmp jne mov into ret in (bad) lock jmp mov push pop lcall scas push jmp orl pop std add cld (bad) push and ljmp bnd loop cmpsl lret mov fwait negb mov dec test stc (bad) call std (bad) jge test xor xchg sub data16 sub cld (bad) (bad) incl (bad) push mov sub sbb push loopne mov adc mov xchg fcomps ljmp test les add and pop xchg add (bad) icebp or mov loopne xor lahf out outsl clc (bad) pushl jnp jns pop xchg cmpsb dec jmp (bad) cs decl stc lods int3 mov (bad) out sub lret int xor sbb sar and hlt cmp shll dec add addr16 mov and pushl in (bad) mov sub adcb dec mov imul mov repz loop scas sbb out xor jg,pn je lock jne or push adcl and fs sub add push xchg rol mov ficomp or pop test inc pop jg jmp popa cltd sub jmp (bad) (bad) mov sbb add out dec sbb inc out mov stos cmc push xor pop std es push decl add test lds cld mov or (bad) pushl push mov and in stc bound lods int (bad) (bad) (bad) (bad) ljmp cmc pushf fbld and pushf sbb mov mov pop leave lahf mov aam adc (bad) pushl xchg cmp movsl xchg jge push push pop notl jb cs xor rorl jp or sub mov and (bad) (bad) pushl sub stos xor jae (bad) arpl into incl movsl outsl in js jg mov xor lcall dec je jge shr shll call cwtl (bad) or (bad) lcall sub icebp mov dec add and push test jbe xchg (bad) icebp inc xchg xor inc adc adc aad cltd lret mov jmp pop cld aas xchg fistl jnp lods jne dec xlat pop scas or xor incb ds push loopne or (bad) (bad) jmp nop loope xchg clc test push cmpsl jecxz adc jne outsl and (bad) pop (bad) (bad) fild outsb dec imul call in pop arpl xor (bad) (bad) decl cmc pusha fwait in aam adc in sbb mov mov xor cmp and (bad) (bad) (bad) jmp pop clc cmp rolb mov xor (bad) cltd cwtl mov jbe inc push aas cmp test inc rclb jnp je cmp fisub lahf stc sub jae inc fcos (bad) decl xchg fcmove fadds into lcall fildll loope jg imul pop inc enter sub sub sbb dec xchg sti push bound incl lods sub jg js xchg mov repz repz add lea popf fadds cwtl out jmp (bad) ja je mov sahf jno (bad) incl outsb inc insl cltd sbb push lret dec pop repz pop jno sti mov (bad) int3 inc mov push jb lcall push cld rep push icebp es mov in inc jle dec mov cmp adc scas or jno and decl add or sbb dec inc (bad) (bad) lcall fnstcw je inc and cmp lcall cmp outsl dec imull add jb mov or add and jmp shlb loop sub loop decl mov fidivl mov cwtl outsb lahf and repnz mov (bad) pop xor cld rcr sbb shrb push inc fldcw and sbb pop (bad) (bad) (bad) call outsl shll or insb ja dec ljmp stos stos lods push push cwtl inc lcall (bad) (bad) (bad) call movsb fstpl (bad) push cmpsl adc and pop sbb and mov xchg mov dec clc mov mov xchg cmp setbe into sti cwtl (bad) xlat ret inc inc (bad) imul ss lock cmpsb movsl inc sbb push inc (bad) incl adc sub rcrb pop adc mov add stos addr16 (bad) call cld arpl lret inc cmpsl sahf (bad) (bad) (bad) pushl cmp jmp jb addr16 cmp fdiv push and (bad) (bad) pushl jp or mov out daa imul adc jae,pn dec sahf cmc cmp test (bad) (bad) decl aaa jg push lcall sahf pushf mov jle pop jmp sbb (bad) push adc shlb push arpl cs dec wrmsr ljmp (bad) incl jmp mov out sub mov sahf cmp sbb (bad) incl pop in push push mov adcl sbb scas fdiv mov inc es push (bad) (bad) (bad) jmp lea pop add maxps mov fucomi (bad) cmp in addl out mov or (bad) (bad) jmp sti push jle sub xor adc mov lret test lret or outsl mov int3 push loopne lcall (bad) rorb sub sbb xchg cmp jno inc ljmp (bad) ds aad gs adc cmpsl cmp into pop scas mov in fwait pop repz ljmp mov mov cmc xchg ja cwtl ss (bad) mov cli leave ficompl sbb dec pop (bad) mov (bad) jno int (bad) (bad) (bad) call dec ret (bad) lret cmp pop xor mov lahf ds call outsb jg aad or (bad) (bad) ljmp test dec jmp inc jne dec scas pop fldl2t jp mov jl lcall (bad) (bad) jmp push out xor (bad) mov mov lcall jb (bad) aas (bad) lcall pop arpl fisttpll xchg mov jb jecxz jmp cmp out mov add mov fiaddl sbb pushl sbb pop or cmp sbb dec dec add or (bad) fcomip bound insb sub mov (bad) lahf insb pop mov adc mov cmp mov dec mov sbb jae lret push ljmp sub rorb jle mov jmp or mov mov outsl mov out or sahf in decl (bad) push inc std xchg sahf test pop rep push lock push mov popa xchg (bad) (bad) (bad) call push fcmovu dec cmp std subb pop sti pop mov (bad) lcall ja mov je jo nop mov xchg mov or mov adc cld push cld fsubr jge adc lret daa shll (bad) sub (bad) (bad) (bad) incl out not fistl (bad) xor pop push cwtl mov out imul inc pop dec stos dec ljmp repnz jge push adc (bad) (bad) (bad) cmp movsl shl xor add and imul sub and or loopne inc mov stos arpl sub pop push cmp push or sub jo (bad) (bad) decl repz jecxz mov or stos lea lods js sub dec jno dec mov xlat leave mov cmp jp incl jns movsb outsb add lods ja aas (bad) (bad) (bad) pushl popf sub xchg pop sarl xor ja sub or pusha add (bad) cwtl (bad) mov (bad) pushl sbbb cmp in cmp mov stos fsubrl sbb inc (bad) (bad) (bad) jmp icebp leave sub xlat xchg and lret cli loope rolb jbe test shl daa loop xchg sar fildll ds mov notb test aas lcall (bad) (bad) decl movsb loopne push mov jo je xor jnp pop mov and test push (bad) (bad) (bad) incl pop (bad) test push int jmp pop or dec in sbb bound dec clc (bad) lcall gs js repz subl push mov xlat mov pop push fnstcw (bad) ljmp or or mov and jne lcall and ret and iret push lods movsl pushf aas xor mov iret push jle adc (bad) (bad) decl ds pop xchg lds cs punpckhdq pop push inc aam push lret push add sub xchg mov lods ljmp mov push (bad) (bad) (bad) decl sub test addl into jecxz loope leave mov cmp (bad) repz (bad) (bad) jmp push dec mov lods and push xor pop jmp add mov stos jge inc inc and sar scas sbb test dec fsubr cwtl dec xchg pushl cmpsb inc (bad) stos push lods sub dec scas mov mov cli inc lock lcall push or (bad) fcomip inc dec xor div adc popfw push (bad) cld clc sbb out cli aaa cld movsl add aas mov (bad) test push sub jl push (bad) (bad) (bad) (bad) aas bound mov lods push xchg push mov arpl xor pop lock and mov jmp nop push out ja fmul fwait inc pop ja push push jg or clc xlat ret cmc ds cmpl (bad) (bad) (bad) lcall imul sbb xlat gs das cmpsb sub mov (bad) lods (bad) lock inc cmp inc cld inc sbb xchg jge xchg mov stos ds lds add outsb push push sub in (bad) mov pop pop cltd adc (bad) push ret sub mov jg mov clc and daa dec lret (bad) enter out and sbb scas stc add jg pop push sbb into mov cltd int3 mov or xchg in idivb sub cmp in add popf (bad) (bad) (bad) (bad) cli mov dec sub mov sete jle lods lahf aas daa xchg mov call stos or js adcb cmc cli fistl xchg push mov aam mov movsb pop arpl sub test out cli mov shrb ds ss xor (bad) push fldl jle testb fistpl cmpl push mov (bad) decl xchg popf pop cmp mov movsb xor push push xchg fwait (bad) (bad) (bad) dec dec mov xchg and add add mov repnz or idivb dec ds cli adc or mov decl mov mov xchg adc test mov (bad) (bad) (bad) ljmp or jmp xchg pop cmpsl xor add sti mov out pop pusha loopne inc dec (bad) (bad) (bad) (bad) jns cmp je or mov stos fcomps push fsubs pop repz push das xchg dec fcmovnb cmp mov (bad) dec add lods pop push push out stos jg xchg xchg jno mov sub pushf incl push daa mov aam fs (bad) (bad) inc sbb xor xchg pop pop adc mov jae jp daa mov push movsb jge cmp (bad) (bad) (bad) jnp xchg mov addr16 insl rclb pop jmp cs arpl cld (bad) incl xchg dec mov or adc pop int fwait lret inc add call add jmp lcall test and (bad) incl cmp adcl xchg xor dec xchg bound mov mov ljmp xor sbb fsubr mov or pop aad ljmp out and (bad) (bad) decl je mov push jae cmp cmp push jg adc cld xor mov (bad) ds mov jg pop jbe (bad) (bad) pushl jbe add jb pop or enter xchg xlat (bad) pusha inc scas xchg ds (bad) (bad) ljmp loop nop in inc cwtl jge pop xchg pop pop rol push shll mov (bad) (bad) call rorl jl pop and push int mov cmp lock sar in pop jp in icebp mov adc insl sbb mov sbb pop mov add mov in pop mov (bad) loope pop (bad) jg sub dec loopne jp loopne scas mov adc ds outsl iret hlt (bad) fild and adc and test cmc (bad) (bad) lcall inc and cmpsl xor inc out sbb imul and mov fistpll ljmp loope inc inc sub sar jmp insl cmp insb inc insl push (bad) fdivp out cli enter pop mov or sub iret enter pop sub inc mov push jmp jno mov dec xor inc dec cmpl call pop (bad) js (bad) (bad) (bad) (bad) fistpll fsubrl xchg adcb decl (bad) fstps or (bad) mov jle lret bnd pop inc mov cmp les out ja add hlt imul sbb (bad) pushl outsl mov lea pop xchg push pop jp pop jae aas cld decl push fxch pop mov sbb dec inc pushl inc mov inc mov (bad) lcall pop movsl outsb imul mov dec aas xor sbb push fsts andl ss mov js inc in pop enter sbb lcall mov push mov imul push jo mov pop int3 adc (bad) (bad) fmul inc xchg jns pop add enter push pusha lds or pusha (bad) (bad) (bad) (bad) call xor xchg sub rorl mov into jo push mov jg (bad) jmp inc pop out jno insl dec cld aas iret (bad) fmulp aam movsb jnp mov mov (bad) lcall mov xor mov sbb pop mov dec lret adc inc fmuls (bad) ljmp stc sub stc stc roll into sahf xchg mov lods mov pop mov scas lods xchg mov (bad) (bad) (bad) (bad) ljmp mov jecxz popa pop ss push pop add dec nop repz xchg xchg add cmp insw sarl pushl or xchg xor jb jmp push mov (bad) lcall jle xchg jns xlat addr16 jecxz jne idivl in imul (bad) (bad) (bad) frstor mov into in test or mov rcll jbe pop dec js pushf cmpsb ja cld (bad) ljmp push pop or (bad) jo dec dec cmp push aas push cwtl jnp lcall pusha jmp lods xchg push cmpsl sbb andl pop notb fwait (bad) ds jnp repnz add inc sub push sub cmc loopne jg dec (bad) mov out adc cmp lcall repz or (bad) lcall sahf jne aad xchg jns xchg ljmp dec loope (bad) call lods jb out sbb js and and jb testl in cld cmp sub jae cmpsl push (bad) (bad) (bad) pushl pop mov fidiv or es push adc ret js dec jnp cmc andl fisttp dec or movsl xchg push mov pop (bad) (bad) (bad) jmp sbb hlt outsb adc ret or aam sbb push call sub (bad) pushl gs mov lea (bad) cmpsb mov mov adc xor les xchg jg icebp lahf and out imul mov pushl xchg popf pop push cmp je jge aad rcll mov (bad) mov icebp lods ret out fsubl jle mov rorb mov xor arpl mov incb adc in incl (bad) (bad) (bad) (bad) cmp jns mov shrl jl scas test inc stos cmpsb jg aad push ret aam mov jo sahf es pop push push mov fimul dec xor add and (bad) (bad) (bad) (bad) in mov mov adc xchg adc (bad) mov lahf sbbl adc decl scas (bad) adc jno lret dec mov fisttp xchg or clc scas push mov (bad) sbb push jp scas push adc (bad) mov push popa xor pop sar (bad) pop cmp xor xchg inc movsb push outsl out push fild ljmp add lcall pushl mov xchg mov mov (bad) (bad) (bad) cld imul jecxz (bad) (bad) ds sahf dec dec lahf jg dec (bad) stos or pop cmp popf pop push arpl pop int3 pusha xchg ret je,pt push out (bad) ljmp sahf mov sbb cmp lret pop nop cmp test incl aaa mov cli (bad) rclb mov adc popa or xor dec outsl sbb sbb xor sbb pusha dec (bad) popa push dec inc (bad) icebp jp lret fs xchg (bad) (bad) (bad) cld or mov stos mov push dec lahf xchg enter aad leave (bad) fmull dec scas cli xor (bad) (bad) (bad) ljmp xlat sbb test stos rcl lcall inc insl add in cmp jmp xor dec inc jne xor jle outsl sbb insl dec negl sbb hlt sub add sbb (bad) (bad) (bad) decl test xchg xor les rcrb push lret fdivl in jg xor (bad) lcall stc out fldcw ret dec fisttp xor jmp sar pop jo push push je push (bad) (bad) out nop ds es (bad) popf cmp pop rorl leave push cli jmp sbb flds aaa in (bad) call call and mov insb adc ljmp inc add mov xor (bad) (bad) incl pop xor stos sub inc cmp fisubrl mov out lock (bad) call pop pop jmp mov add jl ljmp sbb bnd (bad) (bad) incl pop mov and lea jnp xchg (bad) call aam fldenv push icebp addr16 or pop je xchg xchg mov cwtl jo imul sbb rcr cld push ss inc (bad) mov mov call jecxz clc lahf xchg das ret shlb push dec cmc nop imul clc call xor push cmp roll movsb daa push stos (bad) jg cs sub add cli pushf pop fistp das (bad) cmp out aas xor dec pop push (bad) xor mov nop fisubl jg jmp enter pushf push (bad) xor adc push cmp push sbb (bad) (bad) (bad) jnp adc xchg mov aad in cmp mov ror jge shll mov outsb das or test mov xchg mov imul mov and decl lds repnz inc (bad) mov cmp and (bad) (bad) (bad) jmp test jbe mov push mov and pop mov out leave and jle stos pop jle (bad) (bad) jmp mov hlt dec fst lea xlat add ljmp test mov (bad) xchg (bad) (bad) cli push pop mov pop mov mov jns push dec enter (bad) lcall test pop sub xor mov push movsl push pusha loope jns inc cmp jmp xor lock sub jae ds mov (bad) mov dec mov xchg push adc fimul inc imul inc and (bad) (bad) (bad) ljmp (bad) inc jbe es push ficomp (bad) xchg or fsts and cmc adc (bad) call in xor push stc xor mov ja popa sub or (bad) jmp push push movsb and inc inc or cld (bad) jg push inc mov inc nop xor sub rcrl mov cld lea std dec mov ficoml mov movsl fsub lcall dec (bad) jg popa ds mov outsl call cmp add pop clc pop sub jbe sub outsl dec fstpl dec pop cmpsb sahf popf mov mov (bad) or jne fidivrl insb or lods jp out daa out mov jle add xchg mov shlb push test or insl (bad) (bad) (bad) lcall or lahf negb movsb rcl pop mov leave ja ds bound xor mov aas cli cli xchg push add cmp sbb pop add mov lcall (bad) jl cmp inc add hlt adc nop mov fcomps (bad) and (bad) (bad) (bad) pushl dec pop inc sarl pop in dec add pusha xor cmp mov and mov loopne out pushf or dec pusha out (bad) scas jp les test pop xor and movsl and shr dec push cltd ret sbb subl mov mov jns cmp jno jne pop fadds rcrl (bad) (bad) call mov mov js lret push imul ret add (bad) cmp clc or sbb xor (bad) (bad) (bad) jmp fnstcw mov (bad) and or mov jb lahf xchg and cmpsb scas xchg pop dec or mov (bad) (bad) call add in add daa push xchg in push lds lds xchg cwtl cli (bad) fadds mov mov mov cli (bad) cmp into push and fsubs (bad) (bad) lods int3 jb adc adc jge decl sub and divl pop push or xlat nop dec fcoml daa jns es cmp lahf addr16 cmc mov (bad) (bad) mov pop fsub mov mov ror jge outsl les mov fdivrp (bad) (bad) (bad) mov push sahf and fstps aad aas fild pop arpl or sbbb das jb lcall decl cmp xor fstpl (bad) lcall out mov rcll mov pop pop in xchg gs sahf add xchg mov (bad) (bad) (bad) pushl fdivrl iret ret sub adc xor inc cmp stc mov mov incl or push and in out ret inc ds lahf jle sbb jecxz in jo out xchg gs (bad) call jb pop push pop xor lret ret or mov in (bad) and outsl nop ds mov pop adc (bad) (bad) aas movsb sahf pusha arpl mov js (bad) jno mov (bad) mov push adc pop leave push iret ja cs and xor (bad) incl fstpl imul jbe cld lods arpl into mov iret (bad) (bad) (bad) call lret aaa mov dec jecxz popa xor addr16 loope mov cmp nop xor negb dec faddl adc aaa jmp cmp cmp in xchg mov jp in mov mov inc ret aaa mov (bad) (bad) mov pop sbb adc mov xchg jno arpl sbb bound sub push iret imulb cli add or jns inc cmc es imul int (bad) (bad) (bad) mov mov sbb cli dec pop lret jl int cmp ljmp out mov fwait xor mov and jecxz jl pop jge rcrb shll call (bad) xchg out dec rorb movsl test leave sbb (bad) (bad) lcall jecxz xlat in data16 jnp movsb gs add enter adc push ss decl pop inc mov incb (bad) (bad) lcall pop mov js enter xor jns sbb popf loopne sahf mov ljmp and insb outsb lcall xchg push out out mov mov movsb push jo mov (bad) (bad) (bad) (bad) jnp xor sub cmpl cmp cmp pop es divl ds xchg fistp (bad) jmp fmull les stos (bad) icebp aaa push sub mov subb repz (bad) (bad) (bad) (bad) jge cmp push inc sbb adc jp or add cmp jo xor jecxz clc call cwtl inc popa fisubl inc push lds stos pusha les into cmpsl dec inc (bad) (bad) (bad) mov jg mov xchg lock cmp add cmp mov inc ret iret movsb sub cmc decl (bad) decl test jmp out cmp sub enter xchg outsl ds (bad) (bad) call imul clc in jne inc mov lahf inc or aam (bad) out adc (bad) sub fnstenv and (bad) in mov (bad) dec ja in add (bad) (bad) (bad) incl mov cmp daa int3 fsub cltd ret push pop (bad) movnti movsb or (bad) (bad) jmp repz aad daa (bad) cli or data16 repz jge pop mov mov (bad) jg jmp popf bound das call ret test shl frstor (bad) (bad) ljmp into shrl xor (bad) xchg cmp stc pop push data16 jmp bound imull cmp test (bad) ljmp cmp jns ret ds (bad) (bad) jg arpl and push jge sarl (bad) cmpb adc push mov add (bad) ljmp jae adc mov cmpsl dec aad sub and insb insl mov pop (bad) (bad) (bad) dec jnp or push dec (bad) mov cmp repnz test lret lea cmc or (bad) (bad) (bad) (bad) (bad) fisttpll mov test (bad) lock sbb lods lds and ja push (bad) (bad) (bad) call hlt lret mov or xchg dec in xchg or add sbb (bad) (bad) decl hlt stos mov fidivl mov mov sub sbb js push jp cmp push mov adc push (bad) (bad) (bad) decl sti in call jg (bad) (bad) jl pusha or out stos adc jbe add iret addr16 jp pop mov ret inc gs push add imul aam inc adc in mov sbb xchg jo jecxz jae jg pop ljmp dec outsl fdecstp sub (bad) pushl dec aas aas cwtl mov mov (bad) decl lock lea inc aad inc mov sub clc loop popa or xchg inc aaa adc jmp ljmp sbb mov cld (bad) call or loope and pop pop cmp and cs push mov lock fdivl xchg fdivrp push out popa idiv mov push es mov sub mov xchg scas jmp sar pop aaa mov insb sbb je inc fcomp (bad) (bad) (bad) (bad) inc mov sub mov cld lea rcll addb (bad) mov cmp push fnop mov dec arpl (bad) fsubs (bad) (bad) (bad) lcall xchg jg je mov add xor aas ljmp scas iret ret mov add ljmp (bad) mov jmp dec nop inc aas pushl int3 das adc xchg xchg ljmp test inc aaa jge sub mov inc (bad) (bad) (bad) jg mov jle int (bad) lea je cmp (bad) dec pop mov (bad) (bad) (bad) (bad) out dec inc in jl xchg mov out jbe pop dec xchg cld adc dec or inc fidivrl and (bad) (bad) decl xchg cltd (bad) xor out rcl xchg pop (bad) fstp mov push cmc push pop sub das mov in (bad) (bad) out lahf push mov mov lret adc jmp mov jp mov mov mov mov (bad) mov test inc dec xchg adc dec inc mov (bad) (bad) call or gs sub cld addl (bad) (bad) (bad) mov out cli insb or jl outsb addb mov call iret mov (bad) pushl popf addr16 add lds adc mov hlt dec sbb or (bad) inc (bad) (bad) (bad) lcall popf rolb jle dec cltd pop aas xchg jge pusha dec clc or in loop out sub pushl incl jge inc aaa test xchg fmul (bad) or fs cli aaa dec stos lock (bad) (bad) decl popa xchg push ret dec push shll cmp add mov mov push mov and xchg cli (bad) (bad) call push fidivl iret sub pop lret daa lock in out lcall fstps pop cmpsl aam mov sti dec or sbb out pop loopne ja xor lock jmp fldenv push sbbb arpl daa cli in jnp push add ljmp mov inc lahf pop mov mov inc and (bad) (bad) jmp push lahf repz les sub xlat inc pop adc mov movsb xchg pop adc (bad) (bad) (bad) js dec push pusha sahf test int3 jbe daa fdiv shr lea dec les fdivrs out cmp jle mov sbb mov (bad) pop push sti adc (bad) call mov (bad) sti dec xor call das and xor dec xor pop add mov faddl jge and jo int pusha loope add cmp dec shll mov lods (bad) (bad) (bad) pushl mov and mov jb ret mov mov repnz icebp (bad) cmp ds loopne sbb pop mov sub les fimul pop in addb mov test lock cmp mov push push inc xchg mov xor icebp xchg ror inc (bad) (bad) (bad) jmp jb jno scas sbb mov sub xor sbb mov orl dec repnz cmp jns push dec pop mov ljmp ds lahf xchg (bad) cmp (bad) (bad) (bad) call outsl mov cmpsl cli popf into sbb inc sarl mov ror add cld aaa scas mov pop jge lea lods add aad les scas mov in (bad) movsb cwtl xchg mov out test add repz ljmp push arpl popf ret out sarl scas mov gs and fsubp inc mov (bad) jg mov int dec sub xchg xchg in lret fsub or scas fld sub ds cltd (bad) jg pop popa or ficompl (bad) fnsave jne jle or inc xchg inc mov cmp pop flds mov pusha xlat add mov outsb add or (bad) (bad) call js (bad) jae add mov xor int3 ktestw (bad) (bad) dec lea lret cli xor dec xchg sti movsb pop js lock pop outsl lds pop (bad) (bad) (bad) lcall add and fmull test push ret push cmp inc cs lcall sbb jl loope daa jmp (bad) (bad) mov mov xor pop out in and adc loope (bad) sbb mov (bad) call imul iret jne push xchg faddl sub mov (bad) ljmp pop test push xchg mov cmp mov inc add in lods cmp pop (bad) (bad) push pusha jae and repnz in outsl push pop outsl (bad) cmp call clc push mov popa and cmpsl imul dec mov clc dec (bad) addr16 (bad) (bad) (bad) ljmp cld (bad) fwait pop pop lret enter imull movsl cmpsb and sar ret pop (bad) xor xlat add test test (bad) (bad) decl ror push mov insl pop sub ret xor loopne (bad) push cmp (bad) (bad) lcall cmp sbb xchg bound or mov daa ljmp xchg (bad) (bad) (bad) call sbb sub insl fisttp add dec cmc and sbb inc (bad) bound call sbb je add outsb imul pop dec out or cmpsl movsb jp cli push (bad) (bad) (bad) dec push jbe addr16 pop scas sub jle ljmp leave mov dec test clc (bad) (bad) lcall jb or in mov push jae pusha jne push mov pop test ljmp adc add test incl push mov dec cmp lods shl fldenv nop xchg inc fisttpl mov xor mov out mov hlt adc push das in push cmp jns aas xchg cld jmp movsb sahf mov mov inc xchg jp outsl push mov xchg jnp out test (bad) mov mov (bad) push icebp inc loopne pusha dec test inc sti jle or es mov jne jns clc mov push add scas ljmp cltd clc leave outsb shll ja push sub iret add xor decb adc cmp movsb jmp ljmp (bad) mov cmpsb (bad) dec cmp sub dec loop dec jns mov (bad) mov lea pop cmp popf sti sbb imul arpl (bad) dec inc daa outsb pop pop popf add sarb lret jmp jo dec je inc or pop into jg push sbb (bad) (bad) call sbb leave (bad) mov pop in jle adc ja (bad) mov scas ja pop mov inc cmc cmp (bad) decl mov mov clc xchg add inc dec (bad) idiv (bad) (bad) (bad) sti js in mov je faddp mov es mov iret popf aam sub (bad) (bad) push out and rclb pop inc (bad) dec out pushfw es rorb sarl or mov (bad) incl in mov scas repnz ret mov addr16 (bad) (bad) call decb adc xchg ss sbb pop in scas push inc jae shrl mov lret js (bad) sub (bad) (bad) cmp dec mov mov loop and pop je and cltd ds lds in push ja sbb (bad) (bad) (bad) ljmp mov sbb push mov dec pusha sbb aad mov push mov pop popa and pop rcl aaa mov pop sbb push movsl (bad) ljmp arpl adc repz fcomip dec jg jge movsb (bad) (bad) ljmp test je push xchg lds sbb push xchg int push out in stos push cmc int pop sub mov (bad) push inc push js lahf sbb rorl pop cmp pop mov xor incl cmp fidiv sarl (bad) jmp push jl ljmp xchg jae fs or xor dec in in clc stos cmp ljmp or hlt insb inc inc leave xor xchg pop pop divl lods je,pn jle (bad) (bad) mov imul (bad) or add outsl sub xchg mov pusha push adc (bad) (bad) (bad) call or push outsb dec jno cmpsb adc call push xchg xor mov add mov gs inc mov inc aam aas test fisttpll dec adc imul adc adc mov cmc mov mov sub iret jmp sub jg incl mov xchg and jp mov xchg sub inc popa lods movsb es xlat adc (bad) (bad) (bad) ljmp mov and insb subl mov fs lds into adc jmp cli aad jg inc (bad) call mov cvtpi2ps dec push scas cmpsl dec lods lret fcomp das sbb (bad) (bad) out out and lock and inc pop js ficom push adc lds jb mov cs daa jno xor int3 cmpsl out mov mov sbb movsl sbb adc (bad) mov sahf flds dec push div inc sub inc ret gs inc adc (bad) (bad) (bad) (bad) out xor sarl push jne aas scas jb mov fcmovu ja daa aam jo jg nop cmc cltd jmp dec or sub lods jno out push insl sub inc dec inc mov addr16 push fildll push and pusha ret push lcall push push aad in mov cli popa mov xchg mov shll (bad) lcall aad sub mov aad inc out inc cwtl test stos (bad) cmp lcall jns pop or push cmpsl sub fmull ret std lcall (bad) (bad) (bad) jmp jge popa jp stc fimull stos movsl mov cli xchg lcall ljmp (bad) jo push jne jl daa ds sbb mov jo sbb mov inc fmuls clc ljmp stos pop mov mov xchg fstp clc dec cmpl (bad) ljmp (bad) xchg add out sbb inc mov dec nop cmp or mov inc (bad) (bad) (bad) call lods fsubl out cmp or rol out sub cmpsb and popa outsl and mov (bad) (bad) (bad) push mov mov sub hlt jns jmp aad rorb inc mov (bad) mov dec (bad) lcall adc ja push imul aas out mov cwtl cmp (bad) jmp sahf js fcomps adc inc les imul (bad) repz (bad) idiv daa cmp loop movsb lock (bad) call sbbl fmull mov aam jl inc sub or adc ss ret incl in lret xor push pushf insl mov into sbb sarl push movsl inc out mov (bad) (bad) (bad) decl and arpl sub xchg (bad) and (bad) xlat mov clc cmp (bad) (bad) ljmp mov fisub pop and pop push xchg sub out inc lret int3 jl xor aad cmpsl jge sub jmp jo loope push xor and pop ds loop (bad) (bad) call addr16 pop cwtl mov sbb dec iret das and dec aad bound ds fs frstor adc add jne dec xor out jne and or jmp fcoms sub sub mov jmp jmp mov adc dec (bad) (bad) (bad) incl inc mov and xchg stc movsl mov sub push or je cmpsb (bad) (bad) (bad) decl sbb nop movb fmull mov imul insb hlt xchg lcall lds outsl pop lods cltd mov cwtl (bad) sub inc aas in pop jbe gs call sahf mov lcall sbb add cld cmp je in adc ds (bad) (bad) (bad) fnstsw movsl xchg scas bound mov (bad) xlat in dec std je cld or or sbb repz (bad) in lock (bad) lcall push push xchg lea test in mov sbb popf push fisubr push pop cmp mov mov cwtl cli push and inc pop sbb dec or ja mov (bad) cmp pop lock push call cmc push dec inc lds sarb dec sahf movsl enter or xchg inc pop sub sub jo mov fucomi dec (bad) (bad) (bad) jmp inc mov cmp mov pushf adc jno mov fdivrl (bad) (bad) (bad) (bad) cmp loop out inc jbe cmp push (bad) xor outsl xchg clc add add dec dec daa (bad) (bad) (bad) jmp cmc push cmp xchg enter jbe enter test popw mov jo xor (bad) (bad) pushl sarl sbb and mov pop repz xor ret pop adc das (bad) (bad) (bad) jmp mov lock mov dec adc lcall daa or iret scas fimul xchg xchg (bad) (bad) inc pop and dec cs pop inc xchg aad nop (bad) das jle mov (bad) lock cmp pushf push mov imul adc pop hlt stos sahf imul bound mov inc js (bad) decl lret fidivr jno in pop adc icebp sbb decl mov ret push testl (bad) cmp jg cmp jnp ret cltd cmp (bad) (bad) lcall repz std mov das cmpsl in imul mov out push loope int3 mov pop loopne push rolb imul loope mov shlb (bad) xor aad (bad) ljmp call mov pop divb sbb call mov fxch clc mov push insl add or jmp cmp imul cmpsl dec inc cltd testb cmp jmp and gs push dec push jg call lds lock je decb bnd (bad) (bad) (bad) (bad) decl adc push push adc cli inc pop repnz outsb andl aas jno mov lock (bad) pushl in jle or push lods gs jge sbb pop jle or in (bad) decl or out xor sbb fiadd ds jle lahf inc lods (bad) (bad) (bad) ljmp pop sub xor jle dec cmc dec mov sbb inc movsb icebp int fildll dec (bad) (bad) (bad) (bad) cmp sti xor xchg pushf mov (bad) jbe cmp ret aad inc imul (bad) inc pop mov mov das pop inc jg (bad) sbb jg pop dec std add mov mov jne (bad) (bad) (bad) (bad) jmp roll cmpsb es in push not addr16 or (bad) jecxz inc adc das movsl push decl ds cmpsl (bad) (bad) (bad) (bad) std fisttpll add loopne push mov into push mov dec pop push jmp (bad) (bad) jmp and mov (bad) xor sarb adc sub dec mov adc sbb cmp fldenv into jge call sub sub jbe rcll (bad) inc sahf out lock xchg incb add (bad) (bad) mov mov inc jae test mov add jg jae loope in setbe jl xor and in jge cmp (bad) (bad) call out lds jg in push sub ficom lret pop pushf push dec lahf sub xchg stos lods cmc popf sar jmp lea pop and pop mov push or sti (bad) fistl dec and push mov jmp push jb pop imul adc push push (bad) (bad) lcall sahf addr16 rorb and frstor lds (bad) mov and or pop inc mov shll lcall fwait ljmp mov xor mov je push xor aas xor (bad) (bad) (bad) ljmp and nop jnp mov mov and pop popa and test scas cli (bad) ds jbe or into dec push in pusha or or cmp pop adc (bad) (bad) call xorl aam adc test jecxz lock clc inc xor push (bad) ljmp xchg movsl fcmovu adc js or idivl ds repz (bad) mov mov mov icebp jb fnsave dec imul lcall les int3 iret inc lahf into sub mov or pusha jne,pn in ljmp cmpsl cwtl idiv jo mov addr16 out or hlt subb fdivs into das sub inc mov (bad) (bad) jmp jns inc out jge cmpsl fs inc lods push rclb rorb fmuls loope push jne sbb cmc mov mov repnz cltd sub (bad) (bad) jmp push (bad) repnz imul imul shrb ss xchg mov mov hlt push nop mov push push mov fmull mov (bad) incl aad dec xchg fidivrl dec push jb jns jl pop cmp daa (bad) (bad) (bad) ljmp adc or popf push xor rolb sbb (bad) push pushf je (bad) les cmp rcrb (bad) (bad) (bad) lcall ljmp and loopne pop arpl pop fs int addb dec sub stos dec push outsl sarl clc sbb int3 sahf jmp fistpl gs jle push mov push mov (bad) (bad) pushl cwtl push leave mov pop add jge js push and mov in (bad) (bad) jmp mov int3 cmpsl jg cmp inc ja adc mov fidivl std les xchg inc jmp (bad) (bad) (bad) mov adc jnp mov adc ja xor popf aam ljmp push rcll mov sbbl (bad) aaa stc frstor ljmp out les (bad) xor (bad) sbb popf push stos cwtl movb fisubl and add mov jl xchg nop or fdivr aaa xchg rcrb mov icebp jecxz mov jg (bad) cmp mov sbb mov cwtl sbb or pop (bad) (bad) (bad) dec lret xlat enter and ffreep sbb sub (bad) xchg (bad) dec jg mov (bad) ss (bad) (bad) lcall pop mov call out test dec xor cmp push sbb pop (bad) (bad) (bad) lcall imul inc addr16 pop inc xchg (bad) pop arpl and and orl (bad) int push test (bad) (bad) incl lret push lret sahf mov stos push dec (bad) in xchg sub and mov mov mul cs (bad) movsb movsl test test lcall insb fisub push js sub (bad) ljmp mov dec cltd js (bad) je xchg mov mov (bad) xchg inc (bad) (bad) (bad) (bad) std jno fimul (bad) rcl and mov and mov pop inc out (bad) (bad) mov out cmpsl add lock lods or cmpl nop mov pop clc jmp lret outsb orl cmp lahf ds icebp (bad) incl fstpt xor push mov add decl lock loopne into cmp fstps jbe iret das sar xchg cmp adc mov jle lock xchg test pop out (bad) (bad) (bad) pushl (bad) fnstcw ret push mov push add jnp jb outsb mov sbb mov (bad) lahf arpl adc sub adc or mov sub (bad) ljmp sahf sub hlt push (bad) pop loopne jl std mov jge leave push pop add daa cmp call ja adc dec mov sahf ja sbb test pop xor lods sar (bad) (bad) decl popa xchg cltd rcr arpl mov cmp fldt xor std sbb dec enter (bad) in out jae int (bad) or ljmp and stos imul iret push and push cld (bad) (bad) imul add adc sub inc mov aas imul inc pop push fldenv (bad) (bad) decl lret iret (bad) adc outsb jno test pushf std outsl dec pusha lcall loope out shrb aaa and rcrl dec popf adc in push fbld (bad) (bad) (bad) pushl push inc mov push stos push xchg xor sub leave test pop add ljmp cli rcrb mov pop orb dec adc inc push aam inc push ret ret (bad) in fisubl ds incl adc cmp ror dec dec int3 jmp (bad) (bad) pushl add mov jne jle sbbb add sub das loope lods mov fstpt shlb mov ss (bad) scas inc mov cs push sar (bad) (bad) (bad) in pop ja or or jb pop sub jp sub shr push pusha inc dec inc pushf cmp dec lcall jmp mov mov lea call (bad) (bad) (bad) ljmp pop aad nop or adc cli (bad) pop das jns pusha mov xor xor cmpsb rcll repnz sub push jae int je push fadds sbb sub bound xchg (bad) (bad) (bad) (bad) (bad) incl fimul (bad) jae cmp inc andl test sbb lcall or lock cld xor aaa sbb xchg xlat flds mov cmp imul (bad) jmp and pushf jmp inc in enter scas repz (bad) pop push mov cwtl jno xor dec jl (bad) (bad) (bad) incl movsl (bad) sbb aad enter push mov fcoml (bad) cmp xor cmp ret in xor (bad) (bad) (bad) lcall aas mov xor inc lahf push inc lock cmpsl loopne test pop inc jl dec lock (bad) (bad) (bad) call add movb push (bad) aam cmpsl xor outsb cmp lahf out push cmpsb out and mov cld lcall sub (bad) lcall jle pop jg (bad) cmp pop ds xor cld mov int into xchg jge mov (bad) (bad) lcall cmpxchg pop dec dec lds orb inc pop pop adc sub stos (bad) (bad) (bad) (bad) cld aam jae add sbb add hlt add pop imul (bad) and stos imul jl mov (bad) incl dec pop add cmp xor pop mov dec push mov dec sbb addl pop mov (bad) adc inc (bad) ja push xorl jae (bad) lock cmp push cmpsb fidivrl int inc cld dec xchg xchg mov cmp insb sub or mov and ja ss mov call mov neg pop mov add jns (bad) (bad) (bad) (bad) xor adc fstps adc pop sub jp and sbb dec or das mov outsb sub xchg pop (bad) ljmp push lret int stos movsl jl cltd or jl mov fisub aam mov roll mov sbb cmp dec xor ljmp jae adc aad ret outsb in push clc aaa les (bad) xor (bad) (bad) ljmp cwtl add add mov jo in std movsl cmp mov loope mov sbb jmp inc out jecxz and fs lahf pop insb (bad) mov xchg cld add js xor shlb push lods (bad) lcall mov testl fcmovb inc in cmpsl (bad) (bad) (bad) (bad) mov cltd fisttp and lods (bad) jnp cmc mov lahf push mov cmpsb pop je jmp fs xor (bad) divl sahf jp (bad) (bad) (bad) dec addr16 sbb jp fs cmpsb pop jg mov push ss mov xchg push and (bad) jg fidivr jmp arpl push je mov lret mov fs inc jb mov sub push push movsl push adc jmp fistl pop aad cld xchg adc js sub in fdivr decl inc sahf sub movsl push sbb out outsl test aad addr16 (bad) (bad) (bad) jge mov std popf sarl rclb and and clc fnsave enter (bad) mov or sarl data16 push fimull in fildl pop xchg (bad) (bad) (bad) dec add stos scas mov roll and lds imul sbb pushf pop or (bad) (bad) call testl mov mov repz inc adc hlt sbb mov (bad) call std mov cld lods into inc push push push jae adc push mov call (bad) mov bound xor mov cli mov (bad) (bad) call frstor stos out nop in add pop adc xchg jne mov xchg push jg sub ds rol leave jecxz cmp fsts ja clc call xchg stc insb cmp cmp dec cli pop pop sbb sbbl (bad) insb nop adc insb mov ljmp (bad) call push mov loope push inc iret pop jge insb sbb fs ljmp adc inc cmp (bad) (bad) cmp daa sub sbb sub aam add rorb jne data16 (bad) (bad) lcall dec ljmp or adc pop nop pushf and mov mov adc push ds xchg incb roll enter inc (bad) (bad) fbstp add and fwait push nop inc pop fdivrs or movsl (bad) (bad) (bad) (bad) mov ljmp inc das cmc in aad cli lret lahf cli dec push mov jge (bad) (bad) (bad) push mov ja adc lret (bad) jp xchg icebp and aas loopne mov in cltd outsb push lcall adc dec dec out mov dec nop popf xchg push (bad) (bad) (bad) ljmp xchg ud2 pop push stos adc push roll inc mov mov jne gs mov outsl push sbb push lds sbb incl cmp or sbb fbstp in rorb xor stos add scas pop mull add adc (bad) sbb add mov jp rcll jne push ja jg add shlb push repnz in adc jmp inc jns jne push outsb repz mov faddl mov (bad) ljmp and xchg mov mov imul cmp stos sub decl hlt xor add adc stos sahf jl rcll fldt adc (bad) (bad) decl mov adcl add ret test jnp jecxz jnp (bad) (bad) (bad) ljmp mov xchg add sahf pushf outsl inc (bad) gs movsb lcall (bad) call subb dec test mov out lret push dec push call cld fcomp pop fistpl sub stos sbb sub jle test loop (bad) call cld paddsb (bad) in pushf cmp xchg sbb hlt dec ret fisub inc out (bad) (bad) (bad) fnstsw cli rcl scas and or cmp sbb sub (bad) (bad) (bad) ljmp xchg mov mov lret out lret les xor iret (bad) mov (bad) or mov fsincos inc xchg movsb and push les pushl push lret push loope lods push mov sub adc mov push fcoms sub (bad) jg mov (bad) dec lahf imul or inc bound lock incl mov es loopne sbb mov xor enter add pushl add aaa stos dec out cmp (bad) insb add (bad) (bad) (bad) (bad) fistpll jno dec cmp sub add push int add (bad) pushl stos ficom sub jmp pop ficoml xchg mov or (bad) (bad) call (bad) dec incl inc lock data16 sub push mov pop mov ret repz or (bad) in incl cmpsb mov aas xor (bad) into rol cmc xchg inc (bad) (bad) call cmp insl sbb xorb sbb dec adc sbb decl mov lahf xchg clc aaa test and adc mov mov sbb (bad) decl adc mov ffree cmc mov sahf sub jne iret add dec arpl xchg xor cmp in push mov jmp repnz arpl sub (bad) std push add insl xlat test (bad) (bad) call push add leave push push lods clc mov push jp jg and lods shr lods adc dec (bad) (bad) (bad) (bad) (bad) in sti xor or ret adc sbb inc fs lret loopne cmpsb and insl adc outsl loop sub (bad) mov xchg or cmp fdivr movsb or sbb (bad) pushl lret lock into push (bad) insb push cmp mov cmp sahf jge (bad) lcall je mov jmp dec pop int imul sub pop clc pushl jo adc cs test xchg xchg add ret or roll pop fnstcw xchg sub loopne imul or jg push nop or xchg cmp mov loopne or aaa cld mov adc push mov jle mov (bad) (bad) (bad) incl inc aam lret mov xor rcll aam sarl iret andl (bad) (bad) (bad) decl push push jp pop (bad) fs mov sub lcall push test in (bad) or loopne stc sbb mov xchg fsubrs adc or jge jp add (bad) (bad) (bad) decl and push mov cwtl (bad) in adc inc ds call dec loopne or (bad) (bad) pushl xor adc icebp sub jae jge out in in inc fdivs mov call inc sarl nop or or mov push sti ss inc (bad) jp (bad) (bad) lcall (bad) mov (bad) or aaa push push adc out aas mov pop cmc icebp test mov mov ds pushl (bad) cmp xchg push mov sbbl sub rorl cmp stos sub dec dec or jp jae lcall (bad) lcall push enter pop scas ljmp and test dec pop jnp aad mov jg outsl movsb mov ds push lret repnz add pop lret (bad) sub dec cmc jo popf sbb in ds (bad) (bad) jg mov aam pushf jecxz mov dec loop js out pop adc hlt sub (bad) (bad) (bad) (bad) jp test adc mov dec cld roll or fildl (bad) stos cmp call push aas sahf or (bad) test xchg xchg addl dec into imul fild fistpll dec xchg or cmp inc (bad) in loopw mov or xor adc mov dec mov daa push (bad) notb (bad) lcall adc pop scas std nop adc push sub jg sti xor cmpsl gs push add into xchg scas xchg test popa push and lahf lret outsb inc cld fisttpl push outsb pop push add inc sti nop enter shl mov push (bad) mov sbb or dec shlb lret xchg cwtl and xor inc (bad) cmp jmp shrb sbb push sbb mov dec js cli clc bound (bad) mov jecxz dec iret call mov inc sahf xor incl cltd (bad) jge outsl test mov mov call cwtl insb cmc cmp push add dec cmp jbe or decl out dec out mov jp xchg (bad) pop test pushf (bad) (bad) (bad) decl xchg adc shlb adc dec adc and inc xor cmp inc push fistl cld (bad) ss pushf mov adc push dec pop push mov (bad) (bad) (bad) (bad) fsubp fld1 es jbe pop xchg inc loop inc xchg inc fcmovne int3 test (bad) (bad) (bad) jmp jo cli loope dec cmp outsl cwtl dec fstpl cmp arpl mov or inc loope or loopne imul ds daa sub inc jae in and gs decl decl add (bad) ss xchg pop mov out mov mov sbb out mov movsl lcall push sbb ds iret pop clc jle or das jo ss ljmp fidiv fs and mov mov (bad) push adc add jg outsl (bad) (bad) incl pop lock or pusha je popa xlat mov adc or adc (bad) (bad) lcall arpl cmp jge xor pushf push jnp inc popf adcb or (bad) (bad) fsubs sti clc pop dec popf or aaa xchg pusha ss jge aam (bad) (bad) call fiadd in clc fwait sarb jnp addr16 pop gs mov cmp (bad) (bad) (bad) call pop daa xor test ljmp xor sbb xor mov lcall add cli scas add adc les jp push (bad) (bad) (bad) ljmp inc xor sbb fldt sub in ret (bad) jmp (bad) mov rcl or repz pop cmpsl aad scas cli pop outsb leave push (bad) mov xchg shrb cmc cwtl jl js mov sbb ret ja (bad) (bad) (bad) (bad) (bad) decb (bad) lret and fsub pop dec movsb jge ror hlt lock add test (bad) (bad) lcall pop sbb dec in scas push pop andb sub (bad) mov in or push cmpsb pop pop aam (bad) out adc and scas mov sbb jmp (bad) (bad) decl mov js (bad) int adc data16 inc mov loopne jb (bad) (bad) incl mov jno inc jo hlt mov sbb (bad) imul pop mov mov lcall int cmpl fadds and mov inc push add and mov pop lock inc add and cmc push xchg ficom push pop std call xor lods imulb cmp mov (bad) pushl and jbe mov sbb mov push pusha or ret inc pop xor insb jns cltd sar jmp xor in pop ja into jg decb das mov push ds mov inc sbb ljmp fs mov out scas lcall cli push add int mov and lahf inc ja les (bad) mov push fbld icebp mov enter cmp leave add (bad) (bad) (bad) (bad) xchg clc sub pop jg xchg mov repnz enter sbb add ljmp and addl and cmp addr16 mov out jp insb fstpl sti xchg (bad) (bad) incl cmp xchg (bad) xor or lea aam addr16 and sbb fiaddl pop sahf sti insb push (bad) (bad) ljmp inc xor mov sub sub imul dec mov mov (bad) call pop or and cltd pusha enter pop mov inc dec pop stos mov mov dec lods stc (bad) mov xor and push sbb jb ljmp in out jne add hlt inc cmp (bad) add jg inc and inc scas (bad) out mov scas aad mov add sbb (bad) (bad) jmp lret rcrb mov int jle sub fsubl and pop dec ds mov xchg or pop push mov bound (bad) lcall xchg push cltd inc xor pop jnp popf and out addr16 (bad) (bad) (bad) decl cmp pusha xlat nop jns xchg hlt mov pusha cs ljmp dec and int3 (bad) or jl popf mov test hlt mov mov test ds (bad) (bad) (bad) jg pop pop adc sbb jle scas inc loope mov xchg xor add jns xchg rol outsl adc popf ds call mov xor mov iret jne or (bad) decl insb ficom pop cwtl not int pop fidiv inc ret cmp push push push xlat (bad) pushl popf dec mov mov push shll das cli (bad) fimul sub add (bad) sti jle or (bad) xchg inc cmp (bad) (bad) decl (bad) stc movsl movsb rolb out ret sub cs sub push (bad) decl ljmp cmp cltd enter pop sar (bad) (bad) decl repz cmp sub xor imul out push ljmp (bad) (bad) icebp loope push push data16 sub scas cmp adc (bad) (bad) jmp push rcrl sub jo push inc shrl (bad) (bad) aas fistpl pop lret (bad) nop in flds aas aad cmp or fcoms push add movsb pop ds icebp jge addb (bad) (bad) incl adc sbb jnp ret and mov mov dec mov jge (bad) lods int xor or cld (bad) (bad) (bad) call rcll inc mov xchg sub in lret lcall or js push or (bad) mov (bad) and push mov and cmc mov xor dec pop xor push outsl dec (bad) idiv (bad) (bad) (bad) stc jle insb and mov shrl inc lods lds addr16 fcoms xchg pusha (bad) fdivr (bad) (bad) (bad) mov insl pop je xchg xor mov dec cmpsl jno xor pop addr16 ss fmull ret loopne mov in into sub xor dec mulb in push outsl popf adc (bad) sbb jmp fs inc pop out inc add ds incl cmp pop aaa mov or cs (bad) fild mov adc sbb incl std inc xor ss (bad) adc xchg mov movsl add (bad) decl jne dec or jnp (bad) sahf stos test leave pop bound (bad) decl push mov mov scas rcll stc push push jecxz (bad) ljmp push xor mov cmpsb add fiaddl mov lcall mov (bad) pushl insb cmc lods decl jecxz cmp cmp adc mov xchg cs push imul dec inc (bad) (bad) (bad) ljmp dec (bad) push mov subl pushf (bad) enter cmpsb inc jge je pop mov fistpl scas loop push (bad) jg stos cli fdiv mov jno,pt jp add and incl pop push inc mov out cltd (bad) lock sub (bad) pushl fimul mov xor jns and jg mov sbb andl dec or mov (bad) (bad) (bad) fsubs (bad) imul andl lea sub cwtl stos and xlat mov repz into adc add push and outsl fisubr cmp mov sub (bad) ljmp sub pop push es pop adc sahf into push lret inc inc aaa jge (bad) cmp popa xor arpl jbe xchg or bound (bad) (bad) dec lods (bad) aam cld pop (bad) mov sub sub and movsl pop outsl xchg and mov (bad) ljmp push movsb test fiadd aaa mov movsb insb dec or stc inc sbbl dec clc (bad) lcall sub stos es mov lret pop sub or sub ret ljmp addl imul lds or pop (bad) (bad) (bad) mov sbb mov sub xor adc mov push xor jb push (bad) (bad) ljmp in xor mov mov sahf (bad) icebp xor pop and xchg lock or (bad) test mov mov (bad) pushl xlat (bad) cmp popf enter cwtl nop pop push add cmpsl push or pop test std (bad) lcall mov push sbbl cli push push or fwait cmc (bad) pushl (bad) mov adc aad cmp sub push roll sub mov inc es push push inc fistp int xchg ficomp pop dec inc sbb xchg dec std cld aas pop les sarb jg icebp pop (bad) (bad) pushl lret sbb mov ficomp bound ljmp xchg adc or outsb mov pushf (bad) fisubrl orb (bad) (bad) (bad) call (bad) ds inc in jp fisubrl adc sub sbb aad ss (bad) push pop add xlat xor (bad) push pop jp in ljmp test test (bad) lcall mov ret mov push adc add lds fcomps inc aaa xchg dec fs push cld call inc fwait cwtl mov add sbb ds xor (bad) icebp and imul or (bad) (bad) lcall cld loopne mov mov int3 arpl pop fldcw inc jne scas (bad) jmp or repnz cmp lcall add scas dec jle dec aam call sbb imul inc cmc jne mov repz pop inc fnsave adc mov test (bad) (bad) fstps jge incl pusha mov jnp and xchg xor hlt gs inc push (bad) (bad) jg lock ss mov mov mov leave mov clc (bad) jmp adc cmc mov subb mov call mov insb and inc mov jmp incb bound (bad) (bad) (bad) lcall adc cld rorb or outsb ds repz push jne gs and into push subl mov leave mov leave sbb mov jnp xlat hlt aas lods in pop inc stos rcrl popa and add cmp or lcall add fdivrs adc dec mov (bad) incl push out xor or push outsb adc ret into adc push mov and mov into push xchg inc pop cmp sub mov add test fwait insb cmp decl or mov pop xchg push jns pusha inc xlat push xchg out cmpsb and je movsl test fs jg call icebp fwait sbb pop and inc sbb sahf hlt (bad) jno imul (bad) (bad) call ss xchg or mov ds iret mov mov or mov hlt (bad) (bad) ljmp outsl pop mov in jne notb push popf inc add nop mov inc ret push sbb mov roll dec adc (bad) (bad) decl scas pusha dec cli dec inc (bad) push (bad) test gs fisubrl push outsb lcall cmpsl (bad) (bad) (bad) jmp cmp sarb push mov and popa lret inc imul sbb push cmc stos sbb adc (bad) (bad) jmp je pusha je mov fstpl bound adc stos or pop lods outsl inc jmp imulb int3 lcall sbb loop loop inc mov xchg xchg aam add cs pop mov jmp insl jg mov (bad) lcall pop cmp mov push and mov push push mov aas adc (bad) (bad) ljmp sub mov dec mov adc cs push out pushf add mov mov (bad) mov aam lahf divl jae dec xchg jmp addr16 sar (bad) cmp sub pushf jge jns push jmp das shlb sbb js aam (bad) jmp aas xor lods cmp into mov mov add cmp sbb sbbl or mov iret (bad) (bad) (bad) ljmp xor xchg outsb push les aam pop fnop add ja sarb xor lods push mov jmp stc mov push dec inc dec (bad) sub dec (bad) addr16 pop insb outsl fucompp js push orb and data16 pushf pop (bad) (bad) (bad) lcall or add dec clc dec lods sub into or call xor mov stos aad repz mov lahf inc add mov jecxz mov lret clc (bad) gs gs mov cld out fisubr mov fildll fldcw leave jmp cmpsl mov movsl add ja (bad) dec inc pop mov fcomps and insl (bad) (bad) (bad) inc ror inc outsl popa inc int mov push adc jnp test mov sarl lcall (bad) out pop add fsubl sub dec mov pop cwtl push icebp bound gs xor sub jp sbb (bad) pushl testl popf out or fsubrl insb out cs ret ss mov fisubl (bad) (bad) (bad) pushl dec mov xchg lods mov xlat sub out jle enter jmp (bad) test and sbb jnp push and add repnz pop (bad) (bad) (bad) (bad) cmp push test inc sbb pop int3 mov ss dec sbb mov jbe fldt pop xchg cmc xchg js lods pop lods imul (bad) jg lcall fdivl fxch pushf scas mov mov cmp xchg ret (bad) (bad) (bad) push add xchg fnop jns das insl add xor test adc push fistpll adc (bad) (bad) (bad) (bad) jnp jns inc push push add push jae inc xchg add add (bad) mov loop nop mov (bad) pushl mov mov pop and mov jp dec xchg mov (bad) mov repz dec inc bound mov (bad) (bad) (bad) call sub xchg jae test and aaa jmp pop cs inc (bad) rcrb jge sub lret scas rolb cmp std push pop xchg adc ljmp imul inc sbb add (bad) lcall cmpsl test dec stos int3 and inc mov mov adc inc stos lret adc (bad) (bad) (bad) (bad) std or shrl inc jb fldl sub add fist push xor (bad) inc mov or pusha mov dec lret pop (bad) (bad) (bad) mov pop mov adc stos cmp mov pop pop xchg mov cltd push mov (bad) (bad) (bad) incl mov cmpsb add jecxz (bad) in test insl cmpsb sbb push popa mov (bad) inc sbb int fistl inc and xchg sbb inc (bad) adc mov (bad) (bad) incl (bad) les int push inc cmp lock mov mov xchg add ljmp inc out mov nop or nop dec sti (bad) (bad) mov dec xorl push in sbb clc in je in cmp sub dec ret (bad) jg in lock mov dec xor into cmp xchg sub xor add inc jo or outsl mov loope fisttpl pop icebp (bad) cld pushf jl jns inc cmp ss or pop push adc cwtl lahf (bad) (bad) (bad) jmp adc mov in aas mov shrb inc test fstl (bad) (bad) (bad) inc dec add or dec mov adc pop cmc fwait xchg (bad) mov add push inc mov mov (bad) mov out or fsubr sub lahf lods adc outsl (bad) push push xchg (bad) (bad) call ss mov sarb in aaa int movsb sbb in mov out cmpsb mov sti ret test (bad) (bad) incl fimul cmp sbb inc nop ljmp adc sbb adc cmpsb dec es jle xchg mov aaa or int fdivp cmpsb xchg jge push (bad) (bad) (bad) pushl sti imul add aam sahf adc or adc cmp setno cs outsl fdivrs jg jmp add mov inc fcompl loopne out mov lahf mov inc push lods pushf test sub dec movsl sbb mov fimull sbb mov (bad) (bad) mov scas mov xorl mov sub call pop inc repnz adc je jo (bad) jg jg fild mov fs int out (bad) decl mov push sub (bad) lcall cmp cltd arpl lret (bad) ljmp sub jne in mov jl jne mov lock xchg xor push pop dec (bad) fs cltd jns mov les bound adc shrb dec movsl push jp addr16 jnp (bad) (bad) lcall (bad) repz loop insb mov push or test lock hlt pop ss (bad) (bad) call push js push movsb jge ss xchg xchg cmp (bad) testl xor (bad) decl sbb ljmp adc dec push mov fs add fs (bad) (bad) (bad) jle add aaa in leave inc cli lcall push lods popf (bad) gs test (bad) call mov lcall lods jb (bad) jle (bad) (bad) (bad) fnstsw aam jmp in lea inc cmp shrb out xor aas bound cli call add mov lcall (bad) ds xor loopne sti inc in popf loope loopne dec mov fiaddl dec sarl pusha loope imul inc pop pushw loopne mov cli call fisubr divb (bad) out sub nop xchg mov mov push (bad) (bad) (bad) (bad) and iret jp sub lds sahf imull add cs inc fwait add ljmp and mov add arpl jns inc adc fistpl push sysexit les (bad) (bad) (bad) mov scas cmp mov pop adc sbb shrb (bad) sbb and (bad) incl pushf add ds out pop icebp or leave jmp adc stos pop in xor decl inc push lods cwtl sub aam (bad) (bad) (bad) call ds mov inc jle cmp jp not add out je push xchg mov (bad) decl mulb pop inc stos loope xchg pop xchg pushf adc shrl (bad) decl (bad) rcl or iret xor insl xchg paddsb mov cli je add js decl int3 xchg pop (bad) int3 outsl ss lcall (bad) jg dec std mov push mov ja or or std test cmp push add cld dec clc int3 leave cwtl dec xchg fwait (bad) mov lds lock jg add aad xor (bad) (bad) (bad) mov mov sahf xor sub jmp push ss or sub (bad) incl mov pop inc sbb dec stc (bad) adc or outsb sub sub (bad) fadds jne cmp push out (bad) sbb (bad) (bad) incl (bad) into push dec out ret pop push (bad) (bad) negl xchg out (bad) (bad) mov cs sub roll dec push dec or test mov orl (bad) (bad) out cmp push les push out pop cmpsw stc xor popf (bad) jne decl jl mov imul jmp je fcompl and (bad) imul out mov xor out cmp (bad) (bad) decl sahf cmp or mov sbb jns adc hlt in mov data16 (bad) (bad) pushl sub adc inc push add popa bound js add (bad) mov mov (bad) (bad) (bad) call jmp push jbe mov or shrl sub mov mov decl cltd sbb push pop test sbb pop cmp (bad) out clc pushl js push ret inc (bad) hlt or rcl stos cmpsl out dec ret mov call mov stc push ss cmp dec mov (bad) lcall jo dec cli stos loop into sarb dec jne pop lahf cmp outsl mov es iret jo mov jb (bad) (bad) (bad) jns mov xor pop pop and xchg ficoml xchg aam inc incl mov pop mov negl cwtl cmp adc mov pop cmp push (bad) adc push jecxz insb push popf cmp ja mov xchg or (bad) aaa lcall (bad) outsl loopne sbbl mov shr mov stos sub add aam mov cmp mov popf or into pop cltd sar daa ljmp xor dec mov (bad) (bad) (bad) dec jns mov sub lea and imul cli loop cmp lahf cmp sbb jl pop mov mov popa and (bad) (bad) ljmp and das add sbb push mov movsl adc sub and rcrl pop adc mov jmp mov dec push dec ds (bad) lcall and and mov jg or jg cmp mov xlat daa sub lcall bnd arpl cld loopne test in push dec iret fs inc mov jg xor (bad) jo bnd or ljmp pusha jnp shr sub lret (bad) add mov pop jmp (bad) (bad) ljmp dec push stos imul je pop dec cmp adc fwait loope jge int data16 dec jmp (bad) (bad) (bad) jmp jnp sub fsts jne ret xchg inc in inc in leave lock (bad) (bad) ljmp pop lds xor leave inc lea push rcrl xchg mov stos daa out (bad) xchg jbe (bad) (bad) pushl pop outsl outsl ret call xor aas jb adc jl jne rclb adc clc sub (bad) ljmp xchg lds loop in movsl ljmp and sbb mov inc mov push into sti (bad) (bad) jmp xor (bad) std mov xchg popa negl xor mov mulb insb adc loopne push sub iret and idiv (bad) (bad) incl mov cmp xchg rclb and mov sahf (bad) mov cmp je (bad) (bad) push xchg push lea insb add mov pop pusha or insb insl cld mov repz (bad) (bad) call mov mov jle outsb imul popf inc cmpsl pop divb inc outsl xchg std daa movsl cmpsl loopne outsb std adc (bad) call jle sbbl mov inc xchg stc adc (bad) call ds lods sti (bad) push loope je pop lcall xchg icebp (bad) shrl pushl cmpsb data16 cmpl xchg nop daa add fistl xchg adc pop jno (bad) (bad) call inc xchg xchg mov mov adc add cmc enter imul (bad) decl jmp push loopne (bad) lret add arpl lcall imul jl jl arpl aas inc cmc pop scas fist pop add (bad) lcall or xchg fs cmp pop test xor cld aam ja push inc call (bad) cmp cmp sbb out and pop xchg mov adc sub (bad) (bad) (bad) in pop rcrb cmp dec adcl xor bound (bad) (bad) lcall movsb dec pop xor dec pop adc out into cmp fwait ljmp cltd (bad) (bad) (bad) ljmp cmp (bad) push or fs dec std cmpsb stos push sbb jecxz jne pop jp and pop cli dec icebp mov mov incb inc ds loope pusha mov jb xchg push mov movsb dec mov and (bad) sti jbe cmp sbb pusha inc (bad) jl xor shrl dec fs jecxz (bad) (bad) call mov sub lret cltd cmp nop mov lcall (bad) (bad) call lods adc imul mov sub jecxz stos pop in stc test xlat mov icebp fdivr (bad) (bad) dec aad xor (bad) jecxz sub es push pop cmp insl and (bad) inc sub (bad) ljmp xlat cmp xor push std mov lret cmp incl fidivr js in mov hlt sub mov sar lcall bound cmp sub lahf dec adc mov mov imul pushl and mov repz mov fmuls rorl (bad) jmp leave (bad) mov lea ds sti stos shrl sbb (bad) (bad) (bad) out mov out loopne jmp jl pop sahf sahf inc popf sub (bad) and std or std decl arpl xchg add adc jo mov incb (bad) lock psllw and ds xor pop xchg sub fwait adc add ret mov (bad) add push (bad) (bad) (bad) push sbb mov inc dec sbb loope imul push int3 adc sbb mov pushf jnp push xchg mov (bad) cld push dec mov je jecxz dec out and jns mov jl mov (bad) ds (bad) (bad) (bad) jmp fistpl fcmovb jns or push inc dec rorb mov pop addr16 mov sar (bad) jle cmp pop or ds (bad) or mov inc mov idivl pop icebp call sbbl jbe loope inc mov xor (bad) daa rorl movsb (bad) (bad) jg pop cmc in xchg xchg cld jecxz jge ss (bad) in xor xchg (bad) incl in movsl jne dec mov xchg cs xchg sub jg out cli mov add sbb je pop (bad) push (bad) sub push mov add pushf sub add xchg add mov out mov mov mov pop dec sbb sbb (bad) (bad) mov pop stc loop and lret mov xchg cs dec push xor les (bad) push jmp das mov scas bound lcall scas out fbld mov cmp jmp push (bad) (bad) (bad) lcall mov sub dec xor jmp sub outsb push (bad) or (bad) (bad) (bad) (bad) out sub sub movsl (bad) clc imul dec adc sub pop cmp pop pop add inc (bad) ljmp out inc adc or mov xchg jbe (bad) (bad) fistpll lcall in pop mov (bad) out xchg and push lcall lea xchg or xor sti (bad) jecxz sbbl push popa inc sbb mov jecxz jnp (bad) sub dec mov adc sbb (bad) (bad) (bad) pushl mov inc or lea leave andl inc stos fidivl add (bad) (bad) (bad) fsubl in adc mov rcr loopne add in inc pop in rolb outsb cltd gs dec jge repz xor std sub mov lcall arpl push mov adc cwtl clc lods (bad) jmp adc mov (bad) adc (bad) (bad) in push imul cmc add and fdivs jns sbb mov cld pushl mov pop rol fwait push pop pop cmpsl push ds dec push (bad) imul popf mov repnz cmpsb jmp mov push xor adc mov push jp sub jo lcall (bad) ds pop jmp iret or mov dec iret cmp (bad) out jp (bad) pushf (bad) (bad) (bad) call stos aam sar mov xchg clc jne inc add mov cmp (bad) (bad) (bad) ljmp xor push push or xor popf outsb lret (bad) jecxz sahf jnp adc push jne ret (bad) (bad) lcall fwait es mov xchg jmp cs mov push jbe std shrl or (bad) mov jg and xchg jge mov pop insb aas push inc (bad) mov add add out adc inc push stos jnp mov pop push (bad) icebp das sar mov mov fisttpl test int3 cmp (bad) (bad) lcall mov xor mov lcall repnz add xchg mov nop adc (bad) ljmp lock xor stos xchg mov pcmpeqw test or and ds (bad) scas xchg (bad) (bad) mov xor cmp cli (bad) aas and jae test (bad) lock cmp sbb adc mov aaa loop mov push pop test dec std mov idivb adc (bad) incl jle repnz sub or pop fsubs pushf push je fdivs (bad) lcall pop arpl addr16 mov xchg (bad) fwait (bad) (bad) ljmp or push (bad) insb ror ficomp inc shll pop adc add or movsl add xchg into test adc dec cmpb or ljmp data16 shrb in push ds sub sti les pusha mov cmc inc xchg fldt mov dec dec dec and incl jecxz and mov mov setbe lret and xchg outsb std (bad) lds scas (bad) (bad) decl out aam cmp loope repz scas xor cmpsb pusha xchg jp (bad) out clc (bad) cmp lods and xlat adc rcl mov pop lahf mov mov and jmp pop jnp pop cmpsb push add sarl ljmp in (bad) (bad) fisttp ret adc sbb ret ss js and jne cmpsl ljmp and and inc pop fidivl ljmp inc sub aaa inc data16 lods imul ja sar xchg lret imull imul in pusha mov mov fwait adc push test mov push mov fistp test push sub mov and mov loop cmpl inc mov gs (bad) (bad) incl insl inc out movsl jmp add subl gs adc clc loopne (bad) (bad) (bad) pushl push repnz aam ret lods sub fimul cmp add (bad) cmp lcall std jle fsubp mov pop dec mov sbb std decl or and lock rorl sti (bad) pushl pop jge or shl addr16 cmpsl add call jg popa flds cltd mov lret adc lods and (bad) (bad) lcall pop addr16 sub jno add insl dec jg imul sub pop jo (bad) ljmp push jbe ds andl aas adc jmp out (bad) decl fisubrl stos jg push sahf xchg cmp push sbb push loope or (bad) (bad) call es fldt push enter sahf popa movsl sahf adc or mov jmp (bad) out mov inc adc rcrl inc jo mov in push lods xor push cmpsb outsb mov stos hlt add mov call and sub pop aam dec jno ja sub xchg ja test dec add outsl pop (bad) call cmpsl pop sub leave out stos loop mov and mov mov (bad) (bad) ljmp addps es or in add jmp fsts or call pop int (bad) and mov jp rorb mov adc mov fisttpl jnp (bad) ljmp pop jns inc push mov stos fdivs insb das ficomp (bad) cmp lcall push icebp jg das hlt sub push arpl pop jae cltd jmp push ds fwait dec xor dec fldcw xchg inc add inc dec xor decl fcmovb dec les nop cli mov fnsave dec inc mov add (bad) and (bad) (bad) (bad) jg sub cmp xchg xchg pop mov (bad) xchg loopnew in mov adc and adc roll mov or xchg adc repnz scas mov (bad) (bad) (bad) incl lods sbb out mov cmp dec lea push xchg adc sarl sub (bad) jg jns and repz mov (bad) stos push in jge pop ljmp fcomip call imul and or imul cmp lcall pop fcmove mov in push inc hlt jae popa cmp or (bad) adc push imul fidiv std push jle mov bound (bad) (bad) (bad) jmp sbb dec cmpsb ss in mov push aad inc xor dec movsl adc (bad) (bad) jg lcall mov rclb add mov cmp out ficoml pushl je fcmovu sbb or test rcll push xchg dec aad xchg inc loope push mov xchg test fsubrp (bad) (bad) pushl or pop sbb sbb push mov leave ret test icebp in pop (bad) lahf andb push pop (bad) mov xchg pop mov pushf mov nop mov (bad) (bad) call imul inc imul cltd ret sub dec mov lods xorb jg icebp dec (bad) or jno xchg pop xchg jb inc lock es shll pop xor out (bad) (bad) (bad) incl push sahf pop lcall sub mov sbb out and in les js mov mov hlt pop cmc scas or jnp mov push xor push (bad) out pop sbb dec scas stos stc cmp and fidivr lret adc ss xor push jne int imul popf xor fisub movsb int sbb dec inc test mov out sub (bad) (bad) out mov xor rcrl cltd push repnz fnop insl dec out lcall ret andl ret pusha jp cmpsb xchg xchg cmp push (bad) (bad) (bad) jmp lods mov imul icebp cmp into in mov cs pop out dec mov fidivrl adc (bad) or fldenv sahf xchg pop lods mov popa push mov movsl xchg xchg push push add (bad) (bad) std int3 test test pop pop cli jne ja in js cmp (bad) jmp cli adc xchg js mov xchg and or inc adc dec lahf flds (bad) mov and xchg adc jg call lea adc je cmp lcall insb cmpsb lcall mov fidiv cld (bad) mov out mov (bad) incl xor test and jb data16 call pop xor (bad) add aam movsb and clc decl xor sti ret and (bad) (bad) (bad) ficoml cmp jle rcll mov fadds fidivrl mov jmp mov push mov jg ja push loopne ret jno inc outsl (bad) (bad) (bad) dec jl ret adc ljmp into or jns xor sub cmp dec (bad) (bad) dec (bad) (bad) (bad) push mov ret push repz call pop jl or test es test (bad) mov pop sub data16 repnz in push inc addr16 icebp popa and (bad) push cli pop loopne inc mov push inc push rorl add lods sbb (bad) mov aas push sub or mov fiadd push inc push das jle (bad) (bad) lcall sub mov addb jecxz inc add adc icebp loope push (bad) (bad) pushl sti adc mov loope mov push cmc pop mov jle fnstsw mov (bad) (bad) (bad) ljmp aam out fs sub call mov loopne lds int3 add das add mov mov gs jmp inc mov pop pop in jmp fdiv sub loop add jg sbb icebp loopne movsl sub mov outsb subb sub shrb pop jge ds fs mov or push sub in mov loopne (bad) call adc xchg ret adc jne das add cmpsb or lret pop rclb jbe pusha xor ret hlt ljmp push mov or mulb mull jp (bad) jg and xchg lods ds in mov std daa call inc sub pop mov call adc fdivs or mov stos fsubp hlt xchg xchg (bad) jg fmulp stc pop pop test mov sarl mov (bad) call enter jns and daa nop inc jg cmpsl mov sar ret dec (bad) (bad) (bad) call ret cmp and jae mov incl imul inc int3 sti mov inc cltd sbb xchg inc xchg cmpsl (bad) out adc ret in out xchg je (bad) (bad) (bad) (bad) clc adc lock fcmovnbe push repz mov cld dec int3 push or clc fwait mov ds loope (bad) incl inc (bad) dec dec jno enter (bad) in insl dec cmp jge (bad) call mov inc cmp sbb repz stc inc adc and xchg popa addr16 cmp sub nop (bad) mov and mov and xchg andl mov xchg (bad) lock xchg inc pop out test das cmp cmp push sti sub bound push pop push xchg push or cmpsb xchg jns mov add xchg test (bad) sti pop pop push enter decl mov sahf or in mov xchg movsl es fisubr jg fs jle cld enter push jl inc pop pop sbb lcall mov sub pop jnp repnz (bad) (bad) lcall push addr16 loopne fsubrp leave pop jno insb mov int pop or repz add incl js aas daa add (bad) mov xchg (bad) call fimull add ret outsb sub negb jno stos lods xchg adc mov cltd nop xor fldln2 mov incl mov pop jno xchg add rorl jno push jns lcall (bad) mov (bad) in lahf pop mov mov pop mov (bad) (bad) (bad) (bad) fcmovb inc xor adc sbb test inc test pop jge mov fmulp sar (bad) (bad) (bad) mov (bad) pop fmul ret mov lahf mov data16 mov fdiv enter ljmp fimul jmp pop push cmp das fnstcw ja fiaddl (bad) (bad) lcall popa or mov sbb pop lods (bad) movsb cmp lock test outsl add ds daa loopne and loopne fidivl cltd and push aaa sub loop xlat ds jg fistpl (bad) sub les mov sub add std (bad) in lcall adc (bad) ficompl jb sbb lea and popf pop mov movsb cli mov in xchg jbe inc imul add jnp pop cltd test mov (bad) sbb pop daa sbb adc pop push in jg mov or mov jp sbb jp (bad) (bad) decl sub lea mov pop push in call popf push imul adc (bad) lcall and cmpsl iret fistpl push xor pop arpl mov cmp push (bad) (bad) (bad) ljmp ret aad or cmc pop iret insl in adc lds incl rorb (bad) jmp push out test jns cs add stos mov subb mov aas fdivrp gs fs aaa pop aad into (bad) fcos decl sarl xchg das add mov sbb sub mov (bad) (bad) ljmp lods pushf (bad) jno bswap push mov mov xor lcall lret add (bad) roll xor xchg out fisttpl (bad) cli inc insl iret inc (bad) (bad) (bad) pushl cltd xchg int int3 jmp (bad) mov jb and fimul fdiv xor or (bad) call push mov and inc data16 (bad) lcall aas negb pushf add stos xor add inc pop mov int3 adc xor aaa add mov in sarl (bad) (bad) (bad) jg rorb in loop (bad) push ret js or fs push xor sti pushf jbe push push mov pop icebp incl xor lcall jno xor int3 pop nop cmc mov (bad) (bad) (bad) lcall jno dec pop cmpsl and or push in mov faddp lock pop and ret (bad) (bad) (bad) incl ds xchg push imul sbb in mov mul cli inc cmp pop sbb pusha (bad) (bad) (bad) jmp mov (bad) addr16 add inc pop popf lea (bad) push sub (bad) ljmp jae movsb hlt std push adc loopne insb mov test sub and (bad) (bad) lcall dec lods push jno mov fisubl in mov inc ret push lods out jmp mov mov ds push loop mov (bad) (bad) (bad) (bad) mov xchg cwtl mov not pushf ficom mov mov test add (bad) (bad) decl fs add or xor pop jo insb dec fcoml (bad) (bad) adc xor (bad) (bad) pushl cld lret mov scas subb loope xchg ss (bad) inc sub inc cmp dec stc test outsb incl mov lfs cld (bad) cmp sbb loop (bad) mov popf stos xlat repnz daa fldenv inc pop cmp enter sbb in mov and fnop inc (bad) insb jl xor (bad) iret push std inc loope (bad) (bad) jmp xchg mov jmp fiadd cmp andl mov (bad) lcall or (bad) xchg mov mov lea iret xor callw xchg clc (bad) fcomip push test aam add imul mov sbb stos test inc imulb outsl and cmc lret les sub xor fsubs add (bad) jg jmp scas aam js lcall les lret inc test pop aaa (bad) fbstp mov fsub pop add jmp nop add or cli sub loope shrb iret inc dec sar decl push negl mov xchg ja push inc cmpsb ja into sbb jo je imul stos (bad) cmp xor inc loope in in mov lea xchg (bad) sti inc clc decl mov cmp adc cli (bad) mov loopne sub ret lea (bad) (bad) (bad) ljmp jb push (bad) pop repnz scas sub fs fnstcw adc sub mov jmp pop std jno adcb lcall mov push jb (bad) (bad) (bad) mov push add out push lret popa lret jle inc ja xchg inc mov mov outsb in test pushl cmp call sti sti mov jbe adc ret shll jecxz decl lcall mov insb repz push jge lret lcall xchg sbb jmp cld lods les les ret clc (bad) lcall inc inc and ja adc xor or cwtl out es (bad) pushl xor scas xlat imul nop and rcr in cmp jl mov mov mov rcrl sti rcrl mov pop and inc pusha in mov mov mov cmpsl mov inc enter arpl movsl js movsl dec insl inc scas nop mov mov (bad) jmp in push and lahf xchg inc leave out icebp cmpb cltd mov push imul mov (bad) mov sub pop sbb pop dec jge jg inc mov mov inc (bad) (bad) incl push pop adc adc inc test mov (bad) (bad) jmp ss push mov (bad) cmp jno jecxz jle loopne and jno push cmpl lcall inc xor (bad) fldt mov mov and mov cmpsb (bad) (bad) (bad) inc xchg pop out aas ja cwtl iret push xchg or cmp jg js add (bad) jmp into xchg sbb xor fdivrl jp sbb out clc mov push add mov and nop mov (bad) call mov out call dec and xor dec sbb cltd into mov add (bad) (bad) (bad) (bad) jge gs hlt cmp fistl sbbl sbb xchg popl mov mov cmpb insb add xor jno and dec lahf jg (bad) jmp pop ljmp ficomp push inc inc cld and jno cs cmp clc mov cwtl and test or fstps (bad) (bad) push cmp jns mov fisubl (bad) das push movsl mov loope pop add sbb mov sbbb aam fldt out mov sub daa pusha loope outsb mov mov fimul (bad) call sbb jb inc fiadd cmp icebp lods (bad) (bad) call outsb ret shrl dec cmp push jmp decl mov imul dec dec sub mov bound adc (bad) cmp and mov test (bad) (bad) (bad) jmp pop push mov (bad) sbb in sub xor aam sub lods shll adc decl cld xor (bad) mov ret inc lcall aad dec bound nop clc jns shrb ja and sbb (bad) (bad) (bad) (bad) jmp pop andl scas divb cmp mov mov push sbb mov (bad) aaa xchg ss jmp out fidivl dec dec push dec lret sarl push sti sbb test iret out push sti mov (bad) (bad) out lods lods fwait jo dec push jnp adc inc orb loopne fild (bad) (bad) (bad) mov dec add shll push ss lret adc loope sub jmp mov icebp fs rclb cmp push xlat xchg or fstl and outsl clc decl mov lods push es test bound pop shlb (bad) (bad) sti pop mov ja aaa inc jl and cmp test pop xor pushl pushl dec cmp out (bad) ss (bad) lcall popf out adc movsb inc cld mov movsb fiaddl (bad) out (bad) jmp ds pop push iret jb sbb mov or in sti xchg icebp (bad) (bad) jg int3 cld push inc popa data16 sub push jle cwtl rclb lahf jmp (bad) cld fsubrp pop sub (bad) std or adc xchg pop fldt (bad) (bad) (bad) lcall xchg into pop lret xor arpl cs repz pop movsb and sar dec pop mov incl or xor shl movsb mov (bad) jg test adc aaa arpl fisttpl movsb sahf test ljmp stc add test stos lea (bad) dec cli inc and in andb inc xchg ljmp lahf ficompl pusha mov jae aam ret jmp push cs (bad) (bad) aas mov dec or jmp or ret lods xchg jno imul das sbb (bad) (bad) incl mov cltd adc fwait scas int3 push pop repz or hlt xchg (bad) (bad) ljmp cwtl imul outsl xchg inc outsb or push sbb sbb pop (bad) (bad) (bad) call int3 out loop push test xchg or cmpsl (bad) xchg lea add mov mov lcall sub cmp xchg and add cmp jg mov xchg adc mov movsb sub sti roll ljmp pushf xor mov push cmp fmull clc ljmp push sbb ucomiss jo lea loopne xor mov hlt push div pop mov add jnp add adc pop mov mov (bad) ljmp bound push dec aaa inc xchg sub sbb add (bad) (bad) lcall adc dec mov cmpsb and adc std push pusha push xor decb xor fisubrl push sbb (bad) lcall add int3 dec mov ljmp xchg lods imul mov (bad) (bad) in (bad) lret mov call xchg add gs and inc data16 dec jo loop dec adc in add add and aas and incl add cmp and mov pop and and pop jp (bad) sbb fnstsw jmp popa xor mov gs jo out xor pop cmpb dec sarl pop movsl arpl sahf xchg movsl les mov jbe test dec mov push (bad) incl pop mov xor shr nop sub jp call pop and bswap xchg (bad) (bad) jmp and insb xchg lret fucomi sahf sbb (bad) mov shll inc cmc leave mov mov push sarb xlat pop or mull imul cmpsb in push sub cmc mov decl cmpsl call sbb (bad) incl and js or push and push xchg je hlt shll lret arpl addl push adc call insb cltd xchg jb cld (bad) (bad) push lret mov push mov sbb out sar mov inc cmpsl pop sahf push sub call inc nop mov xchg arpl add mov or in gs (bad) bnd (bad) (bad) cwtl aam repnz iret std push popf jb jmp in (bad) pop dec adc sbb lods das imul sarb dec fsqrt lcall insl and and jo jmp jg test lock negb mov dec cld dec (bad) (bad) (bad) (bad) cld add dec icebp push out jmp push fdivrl mov mov icebp mov xchg sub nop cwtl movsb (bad) (bad) jg inc (bad) loop jbe sub xor push ret and mov (bad) aaa jno jg jg mov sahf mov cmpsl cmc call dec clc push sar (bad) push jmp call mov inc xor push mov lods lock arpl sbb mov cli push (bad) (bad) dec fiadd push adc mov xchg std insl pop pop cmp (bad) fild fwait mov les cmp sbb mov (bad) or call xchg std sahf (bad) xor mov cmp mov (bad) (bad) ljmp jge movl jne or inc enter mov loop leave (bad) (bad) (bad) fcmovbe adc data16 outsl lock (bad) rcrl jp fcmovbe das sar ds adc mov mov cmc and push mov sti add dec add (bad) jg test or push push dec jg and mov out or (bad) in stos lds lret adc mov (bad) jmp sub add and out outsl sub rorl inc xchg inc add (bad) (bad) (bad) pushl inc mov and sbb leave xchg push loope pop stos adc jne insb jne and and (bad) (bad) (bad) pushl xchg mov xor shll enter sbb popf movsl add test (bad) ljmp mov out xlat sub and dec popl dec vaddpd call pop xor fdivrl pop mov cmc push mov in sbb sar lods call ret (bad) mov (bad) std adc xor call pop pop fdivs sbb shlb push out cmpl (bad) jmp cld js in pcmpgtb (bad) inc cmp pop mov mov fs mov (bad) incl push or push add lea add scas ret xor (bad) (bad) (bad) inc and add out pusha sub je ds cmp push imul (bad) jmp iret push std pop pop sbb jge or adc or test mov lock mov dec sahf mov icebp (bad) (bad) (bad) fstl pop xchg jg iret pop notb not add adc xchg adc mov add xor das adc mov arpl lret xchg cmc add lcall mov test fadds dec push xor (bad) (bad) (bad) mov mov adc imulb pop jg mov xor aam cmp jnp jmp lret stos call dec loopne in loopne jns adc (bad) jmp sub add or inc cmc mov xor mov movsl loope enter lcall ds scas pop xchg or pushf xchg ds cmp movsb (bad) (bad) (bad) (bad) cmp push mov push loop fnsave cmp xor test cmp lcall adc stc nop inc jl fmuls or inc pop std lcall xchg adc iret mov add insl cld fild ds clc mov ja cmp mov or lds les mov (bad) call jl incl mov xor test loop lods scas push fldenv xor (bad) out mov clc mov mov int3 cmp (bad) xor (bad) insb ljmp adc (bad) (bad) push popf fmull icebp pop out sti ljmp mov or outsl das xchg push jo jne mov (bad) (bad) incl add test stos in or add cmp cmpsb std cmp cld jae mov add out loop mov jl and jl mul (bad) (bad) (bad) lcall test cs lahf imul adc jg mov (bad) clc das fs ret xchg pop sbb (bad) mov pop nop outsb xchg dec push push shll cmp pop ficomp ja (bad) repnz out cli lcall adc in nop arpl lods pushf dec or push mov hlt incl std decl scas subl adc pop aas mov or mov stc stos sub (bad) (bad) incl in test jecxz jg and dec lods mov and xchg mov incl push (bad) icebp inc pop aam (bad) jno imul lcall xchg pusha pop iret movsb gs jmp icebp xchg lret mov mov jbe cli (bad) lcall popf clc mov sub jg adcl sub mov ss test das cmp aaa into movsb add in (bad) (bad) (bad) (bad) (bad) ds add xor lret addr16 adc cmpl icebp inc sahf ret dec jnp ret fs (bad) (bad) push mov inc sub fstl les dec sub mov test pop (bad) (bad) (bad) decl addb pop stos xchg xchg dec cmp ss adc imul (bad) ljmp mov (bad) jb repz push mov fcoml out (bad) (bad) (bad) incl xchg adc add inc repnz lret mov inc pop icebp and test icebp (bad) (bad) cld imul push out inc xor cmc xchg lcall inc xchg mov adc push adc adc lret (bad) movsb rolb or mov sub and iret cmpsb mov lea push sarb imul ret sub dec leave pop sbb ss subl sbb (bad) pushl sub addl xchg xchg jg cmp incl rclb fiadd or sub pushl std movsl iret pop mov sbb add ret aam cmp out clc sbb mov test cmp (bad) ja cmp cmp push ljmp sub xor ljmp into sub jge mov test decl jne xchg jl je ljmp (bad) (bad) jg mov cs cmc outsb test adc jno inc push push or aam push xchg pop icebp (bad) dec in cmp bound and int3 imul lahf mov inc call mov test lea cmpb test sbb inc (bad) (bad) ljmp mov mov arpl xor mov arpl adc aam dec jno test (bad) jmp mov (bad) or stos or jmp loope inc mov movsb (bad) (bad) (bad) jmp daa push push jp inc bound cmpsb stos and mov jp int lret sub (bad) (bad) ljmp mov mov mov and xchg cwtl fildl lock mov jmp mov arpl jg pop (bad) (bad) call ds jge mov out jb out and cmp fldcw imul xor sub mov cs sbb stos insb pop mov arpl lea (bad) ljmp insb (bad) clc les dec mov (bad) ljmp mov cmpsl push ficompl loope cli in lcall mov pushf mov repz negl mov xchg inc xchg dec test sbb dec and cmp data16 cmpsb push out and jmp (bad) or mov mov (bad) (bad) (bad) incl sub add pop and pop inc lods fnstcw dec iret pusha adc call daa shrb (bad) lcall adc push insl xchg pop in aam orb mov movb mov mov lock xor add addr16 in xor mov (bad) lcall or sti scas mov movsl push xchg cs mov aam sbb jne cld ja rclb ds push lahf jecxz loopne mov push test sahf iret push divb (bad) or mov stos push and pushl std and andl fnstenv inc xor scas xchg pop lahf mov mov and ficomp js pop ret lcall jg out int3 xor movsl xlat push mov xchg mov std jnp fistl das mov mov mov xor or jns cs (bad) negb addr16 call jae mov (bad) (bad) (bad) decl incb cmp aad pushf push xchg sub xor outsl mov and (bad) jbe in dec test mov (bad) lcall mov or sahf xor lock and jecxz out sub clc mov jo fadd dec lea or xor outsb push neg inc jmpw lea jb sbb icebp add push dec mov mov push adc xchg sbb cmp mov pop dec mov mov (bad) fbld std mov mov aam fwait adc out stc ficom add lea ds and add (bad) (bad) call adc or mov cld xchg pop or pop xor mov int3 inc pop sbb adc icebp lods addr16 sbb xchg cmpsb aam and xor and ss (bad) mov dec push movsb clc lret insb xor shl inc fld lret xchg fcompl pushl insl imul sahf cli and dec cmp inc cmp jae cmp (bad) (bad) mov adc in repnz fsubl popa repz cld clc fwait sbb (bad) aaa cld (bad) (bad) js push mov sbb or sub sbb (bad) (bad) pushl cmp (bad) and mov add nop mov fs (bad) (bad) (bad) (bad) jmp push sti jge lods and movsl or dec sbb adc in or leave push (bad) (bad) (bad) decl out std dec sub mov add adc out ret loope cmp dec daa adc cmp incl pusha loopne shll rcll sub xchg mov ret pop mov mov es (bad) ljmp clc outsl pop repz nop cmp xchg ss pop insl test or mov (bad) (bad) (bad) pushl add sub test push and repnz ret push pushf lea sbb adc (bad) jmp push xchg sbb test in (bad) mov add aaa lahf (bad) (bad) (bad) mov jbe cmp push cmpsb add mov (bad) icebp pop in jae int (bad) (bad) (bad) (bad) dec cmp cwtl ffree and sbb push ja and (bad) sbb stos into pop je enter (bad) (bad) mov add ret mov pop cmp sub xchg popa repnz cmp je (bad) neg pushf jp (bad) (bad) mov mov adc jbe jg aad outsl rcrb inc sub jnp mov and (bad) jg rcrb lahf test fldl insl daa out into pushf (bad) es (bad) (bad) (bad) fbstp jg add jne ds mov mov jae xchg pop leave inc cld add imul ljmp ljmp jp cmp or enter iret adc mov std ljmp add jnp stc jne mov sub inc sbb pop les mov mov xor mov loopne cmc into (bad) into daa xchg bound imul push sahf push and adc (bad) jg fsts pop jmp (bad) (bad) jmp mov jge and add ja cld add push stos dec push mov (bad) pushl cwtl dec leave and cmc ret or mov mov (bad) incb (bad) scas ds (bad) (bad) (bad) jg mulb inc cmp mov subb aaa rcrl outsb sbb (bad) (bad) (bad) inc mov mov loope popa imul inc pop mov int aas add mov shrl add dec mov inc dec fsubp mov inc (bad) call push or mov push mov jns mov inc (bad) (bad) out cli loop or add xchg jle cli cmp shrl (bad) (bad) call fistp cmp push inc push pushf and fwait dec pop or xchg add lcall jp sbb call jb frstor adc or inc arpl ds (bad) (bad) inc stos mov xor ret cmp jg xchg sub inc lods ljmp jb adc sti fcompl mov mov jb fnstcw jge add jl push mov sub jne iret movsb movsl push mov and adc leave xor call std ljmp out lahf mov je xor incl jp push es sub inc mov and fs daa popa mov cmp mov les jge ljmp (bad) (bad) call pushf adc daa add in loopne dec cld ja or aaa test scas incl fdivs idiv (bad) (bad) (bad) jle jp xor in shr fisttpl xchg xchg and mov push xchg into jmp fsubp sub sbb xlat in aas and add adc mov pusha jle jbe (bad) or arpl ret dec notl test out sbb daa cmpsb testl addb fwait and lods das jecxz sub push (bad) (bad) (bad) inc cmp fmuls aad lret mov js sbb mov aaa stc push dec ja out clc (bad) (bad) ljmp jmp push out test and inc adc (bad) fadds (bad) (bad) jmp add mov popa cmp jp andl lcall stc imull je sbb shll push mul push lret call cmp mov mov insl popf (bad) movsb cmp out fisttp adc incl inc fidivl xor psrlw xor adc xor cmp decl xchg test mov in xchg sti lods cmp repz xor pop std incl in adc ss addb je (bad) ljmp push into lret call or dec mov js fcmovbe mov inc lahf repnz les jge fs sbb adc mov jbe and (bad) (bad) stc test and imulb or ret (bad) stos xchg xor lcall and xchg mov mov (bad) (bad) (bad) (bad) fiadd xor mov xchg test push int mov aas push call lcall (bad) inc xlat clc lcall stc sub pop gs (bad) (bad) mov fcmove shrb push int3 adc lods sub imulb out xchg (bad) (bad) (bad) lcall inc std scas add cmp div pop pminub repnz pop xchg (bad) (bad) (bad) mov cmp mov in movsl bound push or xor xchg sbb add dec xchg ja stos (bad) (bad) jmp loope jo sbb divb push inc pop out push mov (bad) ljmp ja fldl into movsb mov lret and push inc imul pop fwait (bad) dec (bad) (bad) out cli mov jnp jg,pt xlat out or rorl (bad) (bad) (bad) (bad) ljmp movsb jne data16 dec xor mov aaa push stos outsl dec fdivrs (bad) decl aas push outsb mov cmp outsl mov loop (bad) jo lret inc popa (bad) sub lock call lret gs (bad) mov shll push xchg adc xchg or (bad) call ds mov inc xchg add sub sub jg adc mov sbb jno sub xchg daa rolb jae clc sub mov or ret mov cli xchg inc or scas in je fisttpll aam inc daa (bad) (bad) ljmp pop rclb cmp adc nop mov out cmpsl nop hlt (bad) inc pop jbe aaa fcmove pop mov out lret lcall ljmp out ffreep mov xchg imul pop sahf adc cmp adc (bad) (bad) pushl cmp pop insb stos lods xlat jnp in jp add push sub add (bad) (bad) call and mov cwtl sbb push xchg pop adc and mov es (bad) (bad) decl push dec gs int mov (bad) or cs mov xchg xchg test jl mov popl dec mov ljmp pop loop mov stc cld (bad) (bad) pushl push xor or add mov int3 aam (bad) jle mov (bad) pushl push test xchg imul and inc sub out cltd adc rolb xchg (bad) (bad) (bad) incl push cmovno cmp es cmp ds mov out repz int hlt mov lret aaa sub add mulb ret insb fild sub lcall pop jb cs mull sbb pop int3 mov flds popa cmc and je (bad) (bad) (bad) (bad) aas imul test sub in sbb icebp (bad) xchg hlt cmp (bad) aad ljmp jb nop lock (bad) cmpsl out mov int3 into mov movsb dec addr16 xlat mov mov fwait xchg push dec (bad) shrb in pushf pushf push lock and inc inc adc (bad) (bad) ljmp or sbb mov cmp ljmp pop adc (bad) (bad) (bad) cmp pop gs ljmp mov mov sub ret dec and add (bad) (bad) jle mov sub ret push fildll jne es (bad) (bad) push arpl fdivrp push and push push push hlt mov iret adc dec push (bad) (bad) incl pop gs (bad) cmp or pushf and pop xor idiv (bad) mov mov fmul or loopne inc sbb ret ljmp and sbb aad jge sub jno das sub fs fistpll inc clc pop (bad) jmp (bad) stc pushf (bad) movsb inc in aam mov jmp (bad) lock (bad) ljmp clc sahf aad cmp sub jl pop arpl dec mov loopne xchg (bad) mov mov xchg (bad) imul cmp mov inc xchg pop push mov xchg mov daa inc in mov or fistl mov sti xacquire mov sub push add pushl jecxz jns push or aas lcall insb js cmpsl aam ljmp ficomp cmp fldenv cld roll xchg cld or and and push pushf call jmp mov ss test jb popf js pop inc add sahf popa inc std fldcw (bad) (bad) ljmp fsubp sti aam xchg lds out xchg outsb mov icebp scas and test stc adc int3 out (bad) (bad) (bad) pushl cld mov jp idivb and adc (bad) ds int and (bad) (bad) (bad) lcall into jno das inc lahf stc clc mov shrl jmp pop jnp mov loopne (bad) (bad) call test popa adc jle adc stc lret xchg jbe pop jne jmp popf push dec cmp (bad) (bad) (bad) (bad) ljmp test pusha repnz xchg mov movsb xlat mov aas std lahf push (bad) pop push mov (bad) (bad) decl hlt pop mov repz test stc repz or pusha adc (bad) (bad) (bad) call lret (bad) mov jp repz pop pop clc cmp stc and sub popf sub inc jp iret (bad) (bad) (bad) jmp loopne push out xor aaa std pusha mov int3 cmpsb fnstenv fidivrl jae test xchg push mov jmp pop pop ret xorb hlt adc xchg iret xor and add inc (bad) je stos movsb and out dec test (bad) lcall js enter sti push mov enter rcrl jle aam in push lds lods popf dec fcmovb mov (bad) aam mov clc out pop repnz sub jmp repz (bad) (bad) (bad) call fdiv scas ret mov outsb cmpsb mov or add mov in xor int3 (bad) (bad) pushl loop pop enter inc sar sub mov loop and inc (bad) xor (bad) (bad) (bad) pushl mov mov pop cli mov sbb (bad) loope sbbb icebp xor (bad) pushl pop incl fdivrp pop xchg insb xor push inc add mov stc je ror inc (bad) (bad) (bad) decl insb cmp mov cltd pop cmp scas (bad) leave fdivrl pusha xlat xchg insb addr16 mov (bad) dec add xchg nop pop jmp call lea xchg shrl in or dec jle jae (bad) fbstp adc pop lods lock into fsubr repz sub (bad) ljmp mov sub fadds fcmovnu out out xlat push pop and add add push xchg rcll icebp test mov (bad) decl xchg push sub inc sbb mov mov push or pusha sbb jmp pop jmp dec add (bad) (bad) (bad) jg fcmovbe popw sbb adc (bad) cmp rcll mov outsl xchg stc loopne popf mov mov push fsubrl ljmp xchg cltd ret pop xor xor (bad) (bad) decl xchg inc cmp scas dec popf inc mov ss push push je cmp and lahf decl dec cli lods or mov popf cmpsl shll out clc adc jp fnstenv fs lods xor dec inc loop adc cmpsl aad call cld je or dec mov xorl sub sbb imul insl jecxz sub (bad) cmp aas rol cmpsl lret int3 ficomp (bad) jg pop fcmovbe push cld pop xor orl scas add pop push xchg stc add cmpsb pop fsubr in test push xchg mov leave mov js inc adc (bad) (bad) aas fidivr xchg adc dec cmp push jp andps fld (bad) decl ds xor add std pop adc inc (bad) out lcall push jo xor push xor push (bad) (bad) (bad) jge cmpsb or mov xchg mov movsb xor xchg mov rolb (bad) lcall ds cli add (bad) icebp incb mov mov jno mov xor lcall int3 cmp call push icebp outsb nop dec fcomps dec clc out movb (bad) lcall push mov sub cmp mov dec sbb sbb (bad) call and fwait pop mov cmp cmpsl rcrb pop adc sub repnz add or jl imul icebp in xchg ret icebp clc (bad) (bad) ljmp jp pushf mov dec or in mov xchg leave pop (bad) movsb add (bad) ljmp mov mov add xor leave int rolb (bad) (bad) mov ja inc cwtl in sub mov leave sub dec into es outsb xor (bad) (bad) (bad) (bad) jg aas js arpl xlat std push sbb pop sub xchg jecxz fst mov jmp aaa cld add pop jmp xor lret bound iret daa sbb sar adc dec out adc mov (bad) sets jg inc out push push mov (bad) (bad) (bad) decl cmp xchg subl cwtl pop mov (bad) lea rorl sbb push insb cwtl loopne (bad) lcall hlt fwait in loop fsubrp fidivrl mov push negl (bad) jno data16 (bad) (bad) lcall loop insb fstpl fisttpl mov sub ret and add mov mov cmpsb (bad) call clc int3 fcmovb add mov shrb ret jge sub aas jg scas pushf (bad) (bad) mov jno jp test lock xchg jbe xchg mov jnp fdivs les ljmp ds mov (bad) in sub insb rorb mov add pop dec pop jae mov (bad) mov mov scas fcomp (bad) scas frstor fnstcw ret bnd (bad) (bad) incl push sahf scas aam cmp lret or fdivrl xor sub add mov xor mov mov jne jns jp leave test cmp lret clc (bad) incl jg mov jb xchg xor (bad) mov lcall or lret pop xor xor (bad) (bad) (bad) jmp movsl sbb call je push push mov loop movsb pop sbb fdivrl shrl pushl or stos into fcomi (bad) pop das push xchg or (bad) push scas sbb ds xchg ret rcll (bad) ljmp loop imul xchg mov incl jae enter adc aad icebp jno mov push repz push and lea clc pushl fsts inc call (bad) (bad) lcall mov pushf mov leave stos lds and jne mov flds mov pushl das cli jne test mov aaa mov add pop dec mov mov dec daa mov addl inc add mov or clc lock jno int3 push sbb (bad) (bad) (bad) call add cmpsb clc popa cmp xor jns (bad) jmp dec sbb sar call fs jge lds enter xor inc cmp (bad) mov out sub data16 std ret adc mov mov test mov in cmp (bad) mov imul cmp pushf mov push mov xor lret loop (bad) (bad) lcall insb lcall jmp flds ret push lcall (bad) (bad) (bad) (bad) cmp push add or jg pop sti or movsl in sbb call pop fwait xchg hlt cltd pop (bad) fcomip pushl lods fiadd cmp mov dec push dec imul cltd fsubr (bad) (bad) (bad) pushl cmp ret es dec leave sarl mov sub jae pop test lcall in mov loope lock and pop xor in popf cld cli pop add push arpl (bad) decl mov dec ja cmp mov getsec pop sbb imul (bad) (bad) jmp fisubr dec sbb nop jge (bad) test pop cmpsl xchg scas das (bad) (bad) (bad) (bad) fstpt push dec fs adc jecxz subl add inc or pop notb cld sbb ret (bad) (bad) pushl jmp sbb js fisttp or xlat mov sbbb mov ret mov mov icebp leave mov add call ss decl mov mov push inc cmpsb push (bad) aas insl and scas inc jge (bad) (bad) call mov push das push push stos je inc jge jnp jno int3 mov or call sahf fmuls push loope out (bad) (bad) (bad) (bad) call stc mov mov push push nop fimull push icebp outsb (bad) xorb cmp (bad) (bad) jmp pop pusha or mov jecxz (bad) lock fcmovnb pop sbb sbb push (bad) (bad) (bad) in cs xchg push icebp xchg fimul push test inc xchg incb out test or hlt in mov ss xlat pop jmp inc (bad) decl mov loope cli adc test (bad) mov pop adc mov (bad) loop mov or leave aam loop xor aam pop ficoml mov jmp call outsb out out sbb cld cmp (bad) iret (bad) (bad) decl cmp mov mov jle lea (bad) (bad) ljmp push call mov xchg shrl arpl push sub cli psrad (bad) (bad) decl push out lret scas mov popa fxch push sbb sub or mov mov cmp rcr cmpsl inc imul lcall mov jns rorb push pop stc fldenv push bound push pushl and (bad) (bad) jmp jae lods pop or test cmpsl adc inc lock jl dec xchg cld (bad) jno and xchg jmp mov loop int ret adc add pushf pop pop sbb xor cwtl fdivp subb pop or je das cli scas sahf (bad) mov in pusha add ret dec lret sbb jg push push mov mov sbb lcall inc pop cmp jl and xor mov incl arpl inc add pushl popf inc callw fstps es pop and pop in mov or adc and test (bad) incl push or mov into mov sub xor (bad) (bad) ljmp xchg mov mov leave addl cmp mov (bad) jg mov inc sbb movsb mov sub xor push out (bad) mov test dec xchg ret and push aam cmpsb lods dec add mov xchg loopne xchg pop std (bad) (bad) call adc lods inc mov cmp daa push cmp adcl rcl std (bad) pushl ret in mov add fwait pop adc fnstcw loop xchg sbb adc jns lea jae sbb dec and (bad) (bad) lcall cmc inc or mov jg movsl daa movsb adc andl cpuid je call (bad) (bad) (bad) jmp xchg int3 iret xchg shrb push and int3 or leave sub and subl lcall pop inc aaa sbb pop jno cmp out clc cmp pushf lods xor stos sarb dec (bad) stc xchg dec notl mov test je push and daa push pop push cmp (bad) fcomip fwait xor sbb lods xchg and cmp (bad) insl xchg dec arpl (bad) (bad) call sti lahf fstl mov ljmp movsl push dec sub or mov addr16 (bad) (bad) incl push sub pusha les fiadd (bad) jne adc fs push fstpt pop fwait pushl jae or mov movb in and pop dec adc or sbb push (bad) (bad) (bad) call pop add test jmp add (bad) fsubrl cwtl (bad) (bad) (bad) (bad) jp adc push add cmp jecxz int3 lock sub out adc sub loopne xor xchg inc loope inc jecxz pop add sub cmp pop loopne sbb stos (bad) (bad) (bad) mov and (bad) push repnz repz cmp push in mov dec sbb pop jae (bad) ljmp adc lock pop pop inc aam rep loop pop and es (bad) decl xor lahf daa inc adc mov in push cmp mov cltd mov decl popa icebp mov fidiv ljmp mov int xchg cs push ret movsl push mov (bad) adc mov jp cmp out add and inc adc mov push insl lds data16 jg fs dec les ja rcll add (bad) leave (bad) (bad) (bad) (bad) frstor xchg push in cs sub jns xor repnz jo vmovapd mov insb std outsl (bad) inc aas clc inc cmp dec test flds cld fimul sti (bad) (bad) pushl inc xor test and mov clc stos pop loope jbe sub (bad) (bad) (bad) call insl cmp hlt mov out cwtl test mov fidiv rcrl (bad) (bad) pushl sti or xor fwait adc jp and cmovg xchg cmp (bad) (bad) ljmp scas pop mov xlat rolb mov mov ss jecxz test mov test jp addr16 hlt and das imul outsl adc das xcrypt-cfb cmpsl out sbbl xor push mov (bad) (bad) ljmp dec or mov outsl (bad) dec jmp scas addl adc and nop ret lret sub sti in jbe mov aam xchg dec loopne (bad) fisttp inc shrl push push push inc ret mov popf ljmp (bad) add je (bad) (bad) mov iret pushf pushf cwtl sbb (bad) and xor push jge outsl arpl inc mov xchg dec xor incl push pop movsb (bad) aam and jp and ret mov mov gs (bad) incl pop pop cmpsl mov js mov loopne and adc rclb mov (bad) (bad) ljmp insl jns jmp fldl and and ja aas data16 push loope cmp (bad) decl repnz (bad) cmp xchg lock mov rcrb clc pop (bad) fbld shrb xor push xchg add icebp (bad) call cmpsb out mov nop shlb jge push mov (bad) lcall cmp inc jl cmpsb repz loope adcl inc ljmp (bad) (bad) jg cld ss jo cwtl rclb dec es outsb cmp call jmp lret lret or aam outsb es (bad) (bad) or (bad) mov or lcall imul (bad) (bad) (bad) stc pop sub push cmp outsw leave enter sub or popf sarl insl sub mov ss repnz mov inc mov fidivr xchg push stos idivb movsb (bad) cmp popf pop enter loopne xor push jg (bad) jg jmp jb es lret mov sub fwait xchg addr16 ret mov pushl cmp cli daa pop imul xchg aas and into idivb xchg push (bad) (bad) (bad) lcall (bad) mov mov aaa aam or jmp push (bad) movsl aaa and fs lods lock xchg (bad) (bad) pushl and cmc bound push rcll ja and jno in and mov outsl sub cli mov mov popa and in or (bad) (bad) (bad) lcall dec shlb push cmp bnd gs cld xchg mov cli ja clc (bad) lcall fmul mov (bad) xor pop out insb sub inc mov ljmp cmp push icebp fldcw (bad) or mov ljmp jae arpl dec in (bad) (bad) pushl int3 mov imul pop aas sbbl add sub out (bad) and push popf mov loopne fisubl roll ss imul or (bad) (bad) ljmp out push jp jbe aam sub out cmp out stos jg int push jg (bad) ljmp pop pushl cmpsb or xor xchg enter push adc (bad) (bad) inc call jl adc mov mov rorb jae mov out out add and add pop nop adc ret (bad) (bad) call cmp mov out hlt mov ljmp mov push dec bound (bad) (bad) (bad) (bad) std aas lcall lret pop cmp cmp inc fdivl ljmp (bad) xor (bad) (bad) call shl icebp mov add adc pop rep mov push fldcw jmp jo pop push xor stos or lahf or fwait dec repnz pop repnz inc std (bad) dec insl roll aam or and lretw repz xchg loop das lods and test (bad) jmp pop mov mov xchg jb movsl jg cli test nop or cltd jno mov lods insb (bad) rclb aam jns lods popf mov push aaa xchg mov ret test sbb sbb je add push cli fisub decl in and leave mov push xchg or stos outsl sub addr16 test (bad) lcall sub or int3 dec ret xor pusha xor (bad) clc (bad) (bad) mov mov adc or lock jp mov xchg sbb pop (bad) jg ficompl imul fldt jo xlat nop icebp mov int sahf cltd dec pop sbb mov into movsb and pop fsub or loope xchg inc cmp idiv (bad) push ljmp pop xchg sub test popa data16 pushf js jecxz (bad) (bad) mov and jae insl adc mov dec iret xchg inc pusha imulb test (bad) push mov decl lahf mov push in xchg ds (bad) (bad) (bad) fimul icebp jae xor jg in jp sahf sub out cmp lret scas pop xor sub add jge adc sahf sbbl mov add ds loop cmpsl cmp push scas jb inc shll insl jecxz pushl fmul enter rcr (bad) (bad) (bad) ljmp mov (bad) bound shrl ds and shlb sbb pop dec cmp (bad) push out iret sbbl mov push pop or jae in inc inc mov xor cmpl sub sbbl push dec inc dec lea jbe mov add jbe xor lock scas lods mov mov (bad) (bad) (bad) in xlat sti (bad) mov scas xor add and sarb idiv (bad) lcall rcrb std or push add imul sub incl mov int xor jp add xchg stc mov push mov adc repnz sbbb (bad) decl outsb mov sarb ljmp ja lods dec xlat jg mov int3 xchg adc rolb xchg cmpl into pushf lahf jg fdivr (bad) pushl push xchg add decb add and jecxz int adc add loopne (bad) inc jae in arpl loopne test pop lds cmp enter loop jmp sub fidivr ret jmp (bad) (bad) cmp mov aaa jb sub cmp or add ljmp push and xor jl mov jb fcoms dec pop notl dec cltd mov jmp js xchg push jmp sahf jmp (bad) inc cwtl (bad) mov daa mov outsl fwait decb fidivrl (bad) push sub (bad) pusha jle mov cmp (bad) (bad) ljmp dec mov mov js out push adc cmpsl pushf fbld stos sub aam test fucomp (bad) (bad) (bad) (bad) in sbb cmpsl pop and xchg mov sbb xor and stc imul call stc jl aas fdiv popa mov test cmp (bad) (bad) call out sbb pop ds or iret jp sahf in fnstsw enter out sbb dec imul insl pop adcl xchg mov jmp xor decl sub mov xor inc mov test out aad mov lods fmul clc jmp fnop into xorl pop add (bad) lcall sbb clc (bad) (bad) mov cli (bad) stos cs loop dec mov ds mov test xor fild (bad) sahf push out xchg (bad) (bad) call test (bad) cmpsb mov xchg in cwtl xor and sahf (bad) (bad) (bad) (bad) (bad) fsubrp mov mov int3 fwait pop outsl fadd cli pop jb addr16 dec leave inc scas (bad) jno add outsb push add (bad) (bad) (bad) pushl sub lret adc cli cwtl sbbl inc or mov mov (bad) jg (bad) pop pop cwtl xchg pop ds lret mov aam pop jb add (bad) (bad) out mov lods fs sub and repz dec loopne sub stos mov pop jne jnp call push add ret (bad) out jbe into push ds cmp orl push decl (bad) fwait je gs dec rolb sar pop fs push fidiv dec je (bad) (bad) pushl xchg jns lods movsl (bad) lret add sub jno cwtl ja pop push clc jnp (bad) (bad) (bad) inc ret daa pop sub jp jb popf scas mov sarl xchg enter (bad) (bad) (bad) push adc push push sbb out lret jge mov mov cltd pop decl test inc in aad (bad) adc sbb jb imul push pop leave ljmp pushl mov and inc mov push loopne lds sub pop notb mov (bad) cmp cvtpi2ps jp (bad) (bad) (bad) (bad) cmp xlat mov mov aas mov scas (bad) popa xchg loope fcomip mov pop push push in aaa std (bad) jmp dec mov jp add push mov out cli (bad) lcall dec dec ds jo loope mov cmp cmpsb mov jle jg lcall (bad) shrb dec int3 xchg outsl jbe pop data16 fwait out sar and push clc gs fwait jns jne dec addl mov (bad) (bad) push cld jmp imul jns add mov sarl icebp cltd ss daa addr16 xchg jmp decb lds ja inc mov xor cmc and sub and out jge add jo pop or insb jae mov xor and (bad) (bad) push jnp and xchg xchg orl mull sub push inc push aad je (bad) (bad) decl adc pusha bound push add (bad) shlb repz leave pop fcompl pushl movsl popf std jne lret cltd fidivl or sbb incl lods ds push add mov in jle inc add test (bad) (bad) (bad) decl and mov xchg sub jno mov movsb out ds xchg insb loopne in pop mov inc and pop (bad) (bad) (bad) jmp in sub pusha add xchg dec jge pop xor cmp call (bad) cmc push add sbb out lea ret mov js mov cli decl mov fwait sbb sbb xor (bad) (bad) fucomip and jle fidivr lds mov rcll nop push xor ljmp call adc clc loop pop push (bad) not push dec repz sub lret pop scas ljmp jmp idiv dec xor mov bound (bad) (bad) frstpm(287 mov add and push insb or inc les loop xchg and mov (bad) (bad) lcall xchg test xlat xchg jb inc mov mulb pop mov cld inc aad pop (bad) pop (bad) jg call cmp inc je js cmp stos sbb fiadd adc or enter das sar push xchg or leave inc dec cmp push cmpsb push or or call cmpsb imul push ja lret xchg mulb loop popf imul push cmp fldenv (bad) jle jge or lea sahf dec xor outsb lcall sbb push std xor aad mov (bad) (bad) fimull cmpsb popf ror inc das sub or cmp movsb mov and data16 jp jg incl push (bad) (bad) (bad) or mov jo push dec sbb out and stos out (bad) mov cld (bad) jle push xchg test sbb jb jbe sti add xchg test adc mov lcall sarb (bad) and ljmp rol popa imulb (bad) cmp xchg fs dec hlt fadd test jnp (bad) (bad) (bad) (bad) clc mov movsl mov jecxz cwtl xchg inc dec call (bad) xchg xlat je rorl push xor mov pop add sub push aas imulb mov scas mov jmp (bad) (bad) call xchg push insb push outsb popa mov shll in icebp jecxz add fmul sar (bad) (bad) decl aaa inc sub scas mov scas dec dec notb mov stos aas and (bad) call add and jle (bad) and sbb push cmp fwait dec pusha lahf lcall sbb adc or mov clc push cmp aad decl scas jae xchg bound test jo (bad) (bad) pushl xchg scas int3 mov dec mov or fsubs gs fistl jl (bad) (bad) (bad) aas sarl xchg repz loop aam ja int cld push jae push push pop lahf test rolb enter cmpsl outsl jo (bad) incl adc dec sub aaa imul xchg cli lret dec in fdivr mov pop push xchg push cli lea push pop dec inc lret mov (bad) (bad) incl jo out lods mov adc in popf sub fldl dec ss int xchg shlb scas add add adc mov (bad) (bad) fmull lret pop mov mov mov test fildll adc (bad) (bad) (bad) cld adc sub add movsb cli test push mov pop pop or out aad (bad) (bad) lcall push jg or pop and repz pop ds insb xorl push cltd (bad) (bad) (bad) ljmp lock jo in out mov adc cmp les sbb (bad) (bad) (bad) decl sbb shrl cwtl daa lds insb fiadd es fnstsw mov or stos xor outsb push fisttpll pushf es (bad) decl pop (bad) mov cmp lods push mov lcall inc push scas jp (bad) (bad) (bad) jmp mov mov jg cld pop ljmp jbe (bad) jg mov push fdivrl fadds pushl cld xor xchg fst (bad) add mov jmp test mov pushf xchg aaa (bad) (bad) (bad) lcall push and or aam stc pop in push fcmovb xlat gs xor lods out dec xor or and (bad) (bad) call add and das dec call aad mov dec out jle (bad) sti outsb jecxz xor adc je repz (bad) (bad) jg jnp lods out pop add imul lahf adc movsl adc sahf mov pushf pop int3 pop outsb stos (bad) (bad) (bad) ljmp daa xchg into add ret sbb (bad) xchg dec ret mov adc pop mov mov pop loop divb (bad) (bad) fcomip pop xchg cmpsb mov mov cmpsl sbb adc push (bad) mov outsl push in icebp jge cmp cmpsl pop out faddl loope mov sbb std mov inc negl leave arpl xor jle jmp xchg push data16 lcall lret arpl mov push rcl sub mov (bad) (bad) clc sti add hlt inc out ret ret outsl jns sbb xor jne (bad) jg mov fldcw pop pop mov xor and out cmpsl lock (bad) (bad) decl adc xor add cmpsl or pop mov mov (bad) jmp jno (bad) (bad) (bad) push or or sbb inc inc stos mov stos pop cmp cli stos jg pop sar (bad) ljmp mov fcmovnu jge testb pop xor pop xchg xlat or (bad) (bad) in data16 mov push in mov dec cmp cmp jmp cmpsl cmove jg mov incl enter mov idivb mov insl or mov insb test (bad) sub jg pushl (bad) jb imulb and push ja cmp mov jae sub div sub inc push iret orl xchg mov mov mov cmp inc or dec icebp cmp adc (bad) mov test push scas inc pop (bad) jg mov cmp sub lret daa xor lds adc (bad) (bad) (bad) (bad) jp cmc adc add push mov pushf pop inc mov sbbl or stos roll xorb lret push sbb sar push scas lahf dec push mov leave (bad) decl enter mov dec inc push cmp mov mov jo (bad) (bad) ljmp pop scas dec (bad) nop div mov xor add test inc ljmp sahf fidiv push jo decl in iret xor gs lcall add incl push dec hlt xchg lret lcall (bad) mov test pop enter dec cwtl negb int3 repz (bad) (bad) (bad) jmp xor xchg pop lret xchg mov and test sbb dec into mov leave push mov (bad) (bad) fdivr into jp cmpl int pop cwtl pop pop push cwtl shl pop add movsl inc mov (bad) call repnz jl insb mov jp stos add xlat mov (bad) xor insb or (bad) mov fdivp ret adc (bad) (bad) ljmp std (bad) lds repnz xor lahf stos add sub fwait aaa stos sub loope (bad) lahf popf fld mov jmp fisub push pop repnz add movsb (bad) jbe in jno adc test push or add push pushf xchg shlb or sub add aas cwtl and sbb pop stc dec aam jecxz repnz jo sbb call in mov inc loope sub (bad) mov lret insl jno ror lds mov fcmovnb push ret lcall (bad) ljmp jne cmpsl fistp add inc movsl incl loope cmp fwait call sub outsl test mov inc jbe cld (bad) call test push jmp fstpt xchg mov (bad) (bad) aas add pop (bad) cmp mov (bad) (bad) out clc ds xchg sub adc rolb jp in lret clc inc pop loope (bad) (bad) jmp inc insl les and out sbb push mov (bad) jle adc inc out imul (bad) (bad) lcall add test out pusha xchg add cmp sub loop call loopne fbld push pop imul loopne je std (bad) (bad) jmp pop mov sbb loopne iret inc ljmp dec stc fildl fwait in xor movsb aad push test jg popf out pop mov jbe in adc (bad) leave cmpsb push fwait mov clc notb psadbw mov loop loop pusha add das daa test (bad) jmp mov jle sbb add orl adc pop push pop xchg lods in insl je add (bad) jmp pop push cmp in jge shlb pop pop test fidivrl (bad) (bad) jg leave fwait push mov lods (bad) aad xor dec cmpsl shrl xchg leave inc xchg add cmp popa cld ljmp leave fs stos mov lcall mov clc in xchg popa lods lcall neg in in std (bad) ljmp shrl mov scas rcr adc test aad push addr16 xchg (bad) (bad) (bad) incl movsl jmp fdiv cwtl aam rclb lods bound sub add test sbb (bad) decl (bad) jae inc pop xchg mov ret jbe pushf dec sub pop (bad) mov xchg mov add push or cltd ficomp mov (bad) (bad) (bad) (bad) mov out scas imul je ljmp test daa popl sar sbb fcomps cwtl and call push mov inc outsl push jl (bad) (bad) jg dec sbb aad cmc popa aaa push cmp lret dec xchg mov xlat jnp (bad) push or ljmp stc pop mov ds pop or (bad) jmp sbb iret (bad) aad clc pop sub jb pop pop jecxz sub pop hlt popa sahf scas test std das test mov movsb lret cli pushl (bad) jecxz jle inc enter loopne xor mov aam mov xchg sbb jge in xor call sub dec jl fsubl push int3 jmp cmp cld add mov adc loope test mov mov sar inc or inc mov ljmp stc pusha out mov mov mov loope or jno xchg jl imul loope outsb cli (bad) (bad) pushl push pop sub or push mov enter mov push cmp pusha stc movsl sub mov and pop out cmc jbe loopne dec (bad) (bad) (bad) (bad) call mov mov add sub test inc or push mov adc add test mov jg mov je push and pusha aad inc and sbb cs sti xor sub ljmp (bad) (bad) lcall mov cltd jmp and pop inc adc xchg inc mov mov loopne (bad) (bad) jmp jo mov or scas push cmp decb jmp (bad) (bad) jmp andl add lods jecxz stos sub loop aaa cmp (bad) ljmp ds rcrb (bad) icebp in and adc xchg out xchg xlat pop hlt call repnz scas stc or sbb mov jmp or add shr sbb lds mov orl (bad) (bad) (bad) mov and leave dec cmp outsl ja cmp stos and fidivr clc out xlat add stc mov mov or xorl or mul test (bad) (bad) jg sub dec lods sti pop cmp bound fdivp aam sahf adc repnz add push (bad) stc add lahf cmp sub mul psllw test (bad) (bad) decl mov (bad) pop mov push int fidivrl cmpsb pushf mov iret cld pop mov (bad) fstl jae dec jb test xor xor rclb aam push (bad) (bad) ljmp mov sahf jae fmull or ds and clc aaa cld mov out pushf repz or or ds xor sti bts jnp (bad) (bad) call int3 dec mov nop dec in rcrl mov adc std push cmp cmp (bad) (bad) (bad) fucomip (bad) outsb sbb xchg and dec cmp add icebp int into (bad) (bad) (bad) jmp push inc jns pop mov int or jge inc and push stos lcall cmpsl cmp (bad) adc repnz pop mov fs ds shrl jo out mov mov cwtl cltd mov out lock lcall cmpsb add rcrb mov or mov sar lcall xchg ret push sub (bad) xor (bad) (bad) jg mov stc dec aad mov test notb mov std rolb dec lock test cltd (bad) incl es test aas and jecxz test ds out sub sub dec mov aad lret fmull pop cwtl xor aad xlat rol into (bad) (bad) (bad) inc push testl xor or int pop mov cwtl and outsl lea clc lcall lods jl xchg movsb mov adc ds (bad) (bad) (bad) mov lods lret dec xlat hlt mov (bad) cmp cmp xlat jae mov push fdiv gs mov push mov shr push mov mov (bad) inc jecxz xor xchg pop sbb sbb call xchg or fiaddl pop jp (bad) loope addr16 (bad) (bad) inc mov mov inc add cmp cld xor cmp inc aam mov sub jge xor ret or fucomi push adc jbe ds ret aam clc (bad) (bad) mov xchg sbb ret pop stos scas dec and mov push (bad) jmp ds lahf pop insb add dec jp push test (bad) (bad) (bad) pushl lds cmp add (bad) push pop ror cmp push mov xor (bad) (bad) jmp xor or mov icebp cld lret cmp add sub nop jae sti xor (bad) (bad) (bad) incl in push aad repz rorl (bad) xor test add jg push lcall iret lret sbb ficomp outsb xchg pop cli (bad) lcall stos outsb call jecxz mov js loope mov fcomi sbb ss je sti add ret or pop (bad) (bad) pushl mov adc lret je jbe adc mov ljmp and lea imul cld mov (bad) (bad) (bad) jmp push pop into xchg inc in mov pop outsb push enter jne loope stos mov cmp mov loop (bad) (bad) (bad) (bad) call inc lods call xchg push loope cmp push jmp push cmpsl aaa mov inc mov fildll clc mov fcmovu add cwtl add aad sbb hlt decl and jnp out xchg ss les (bad) (bad) (bad) (bad) lcall ljmp pop or inc cmp dec hlt add mov pop idivl call sti lods into ja mov dec call jl adc insb mov cltd loope,pt mov data16 lcall jb insb mov dec inc sbb mov (bad) or mov cmp aas mov in fistpll scas dec fisubl xchg or es (bad) (bad) pushl pop int xchg rorb add gs cmpsb jns ljmp pop xchg cmp lcall cli and (bad) add mov in jo sbb test jmp pushl das pop ja or push lods sbb out cmp (bad) (bad) mov jl decl out pop adc (bad) in imul adc sub fidivrl pop or pop mull mov or (bad) (bad) inc sar ljmp cmp cmp lods lret (bad) cs roll jp add addr16 dec stc call loopne cmpsb pop pop fcomps mov or cmpsb push xchg (bad) (bad) incl jns mov add fistp shll fsubrs cwtl fs scas mov (bad) (bad) (bad) decl incl icebp push mov push addl sub cld mov sbb (bad) pushl xlat add cld lods out and inc add dec push mov jmp push sbb call and nop cld (bad) (bad) decl outsl ja rcrl data16 (bad) push push rorb (bad) aas xor sahf mov movsb mov inc rcr (bad) fcomip decl push and enter in inc cwtl add ret imul add cmp push jae xchg add mov jnp jp test into xor movsl icebp cmpsb stos dec (bad) test call call test xchg xchg xchg lret cld push push xchg ds repnz or xor aas (bad) jg fs push movsb cmpsl jo add sbb xchg adc (bad) incl push and jmp sbb push daa pop jo std pop sbb stc xchg or (bad) jle jg in cmp adc inc jo cmpsb insl (bad) (bad) (bad) pushl and sbb ljmp sarl ret adc (bad) (bad) lcall jne mov cli pop call pop inc fmulp test daa out ret cmp push dec js xlat aam ficoml pop lret xor ljmp pop iret inc xchg adc in dec (bad) jne xchg lock push rorl (bad) popf or ret xchg fwait rclb decl dec push sub in mul cmpsb jno mov cld xor (bad) lcall push daa fsubl (bad) hlt sbb xlat push sub (bad) incl sbb lods or ds test aam and cmp test (bad) (bad) jmp (bad) fnsave cmc mov outsl loop (bad) pusha ret ds xor loope movsb sbb in lods or (bad) (bad) (bad) lcall pop inc lret movb dec lahf mov or inc insl mov (bad) (bad) decl pop repnz (bad) xlat ljmp (bad) (bad) pop push jmp mov hlt xchg (bad) jecxz dec xor fwait (bad) incl fs push mov in (bad) gs or (bad) test cmpsl cs inc (bad) (bad) jg jl adc and in and fldenv cmp or xor jp sbb jl stc ret xchg xchg adc push cmp ss (bad) fsubr mov dec ljmp jnp into or subb or (bad) (bad) pushl jnp pop int (bad) loop sbb xchg sbb dec mov dec mov mov ljmp inc lock xchg outsl sbb call shrb mov jmp rolb scas lcall xlat sub mov lret test or sti or movsl (bad) in (bad) call or in bound sbbl pop imul adc (bad) lcallw (bad) fucomp sbb add mov pop jbe (bad) mov call lcall ljmp fnsave mov pop aaa movsb jno (bad) (bad) (bad) cmp lock adc dec pusha jae jecxz adc push sti push adc mov xchg imull (bad) (bad) (bad) jg loop imul or inc cwtl cmp dec pop xchg xor adc mov jmp xchg lea fs mov movsl loope in sbbl sahf shll jb cmpsl (bad) (bad) (bad) jmp and inc scas or add sbb imul pop sahf in adc mov or (bad) icebp fidivr addr16 out mov aam jp jne lock cld outsl decl mov out sub and (bad) (bad) incl loopne push push push loopne loopne pop or mov (bad) (bad) (bad) jmp push icebp mov icebp mov dec xor inc ret pmullw (bad) (bad) (bad) pushl sub push push rcrl fdivrl jbe mov cmp or adc rcrl (bad) cmp inc sbb data16 aad cld add jb mull popa dec mov push (bad) (bad) (bad) jmp ficom mov test ss push sbbb js scas jmp sub add push fincstp dec mov dec mov in jbe (bad) (bad) decl push aas repnz pop push popf cs cltd ds mov addr16 jns les (bad) (bad) (bad) (bad) fimul push add dec mov push sub adc (bad) repnz ficomp arpl (bad) (bad) jmp (bad) testl push call fdivrl and cmc (bad) ljmp (bad) dec sbb adc mov add ds std cmp push push and add and lcall push (bad) (bad) decl inc mov push repnz push notb and xor bound (bad) (bad) aas add adc jecxz js sbb cmc xchg push dec js lret lds sbb lcall xchg mov mov cmpsl add xchg dec (bad) adc jbe ds dec sub jbe push or iret clc push pusha (bad) xor inc fwait imulb mov and jbe or cmpsb sti insl jb gs fdivs dec mov dec movsl jno jecxz sub pop faddp icebp mov cld jne std (bad) dec mov xchg mov icebp or (bad) jg mov addb movsl mov mov dec push cmpsb (bad) (bad) (bad) (bad) jmp adc test or (bad) xchg or mov push xor sub (bad) (bad) jle push xchg and adc leave imul pop mov js das sbb das shrb mov jno movsb fnop (bad) ljmp icebp rcll stos out xchg es iret scas mov (bad) (bad) jg fidivr mov mov pushf inc jbe test mov jmp jge (bad) (bad) jmp xor test push fucom mov xor daa outsl cmp push push fld loope pop lahf (bad) fildl sarb mov jg,pt imul loop (bad) call xor xor jle mov dec dec xchg mov lock and fisub in sar jp xchg inc sub pop (bad) (bad) (bad) lcall popa lea ljmp dec icebp call or sar mov test idivb mov mov sti or fs pushl jne mov pop popa das mov cli (bad) fbld adc xchg mov adcb lret ja sub stos adc decl cmc movsl nop cmovb or rcr stc pop mov and sub (bad) (bad) (bad) incl xchg sbb fisub lret mov sti jae jl or std test mov cld push stc icebp xchg mov push or sar test (bad) out push ds xchg xor repz imul mov fnsave sub (bad) (bad) pushl out outsl and sar dec stos jno arpl xchg test sahf sub test xchg jmp hlt mov mov cmp mov sahf int3 orl mov in rcll dec jmp fsts nop das test test jmp jnp,pn dec (bad) (bad) decl int3 mov add popf dec icebp arpl jp fs mov lcall ds aam xchg push xor jg cmp jl js xchg and decl lahf mov pop mov jg incl xorl inc xchg out fmuls mov xchg sarl cmp sbb ret cmp ljmp sbb jle test cmp sbb mov pushl push add pop mov mov sbb pop mov icebp stos push stos test push inc pop lret mov dec loop ds fldenv add out imul push adcl mov lock call jp mull cs mov dec and das mov and sbb rorl test add xchg mov mov cmpb decl fsubs mov cmp push repz mov test es push or sub adc stos stc sbb imul push mov (bad) (bad) lcall cld or fmull xchg xchg lea iret mov call (bad) jmp notb xor ja movsl add popf test pop pop sub outsl aaa cmc es and or pop add scas jle pop sub test loop xchg cltd mov gs arpl mov mov daa insb sbb adc shll das iret movsb mov inc (bad) mov and (bad) mov cli imul lea lock cli (bad) in in xor fs enter mov jmp movsb or inc sub mov add mov scas and pop scas inc dec xchg std (bad) (bad) incl gs repz andl js dec ret xchg adc (bad) push (bad) jg add push shrb pop sub or icebp or dec inc inc jae xchg cmpsb pop lods iret idivb (bad) jg inc fildll mov call out add jle imul loop xor adc leave sub mov or scas sbb pushl iret sbb adc inc dec rcrb add data16 loopne mov insb pop dec pop adc adc add adc adc in cwtl or (bad) (bad) incl or push movsl push popa out es mov push xchg mov orl rclb (bad) cmp repnz jge push dec lret add adc bound cmpsl xchg (bad) (bad) jmp mov jae cmp adc xchg (bad) jecxz or or fcomip (bad) decl cmp sahf (bad) fisttpll in xchg jae xchg xchg pop sbb (bad) (bad) decl adc pop mov je (bad) dec outsb adc insb sbb mov and push mov jo aaa sarb sbb scas cmp (bad) jmp in mov xchg (bad) push enter push mov sub fstps les in pop (bad) mov mov push xchg inc xchg outsb lret and jne iret (bad) (bad) (bad) incl ja jmp decl push push in add sahf cwtl sahf and (bad) (bad) jmp push adc mov negl jge jb xchg or mov inc cmc das jmp sti pop jmp jmp fbld jecxz jns sub nop (bad) and aad aas enter xor out push loop fidiv dec cmp icebp jg fiaddl aam (bad) add adc mov fdivrp scas and cmp cmpsb fsubl xor mov (bad) jmp clc js loop mov push pop jnp fisttpl add (bad) (bad) mov orb xor jg dec cld adc xlat int3 dec push mov (bad) (bad) (bad) lcall sbb dec xlat fcompl outsb and in clc sbb push lods (bad) pushl lret mov repz mov or cmpsb adc out pop xor ret js push pop add in adc jo imul inc sub stc fcmovu pop call into shll jns jbe xor sub (bad) sbb push mov push (bad) pushaw jne cwtl mov (bad) ror jmp ret das jbe xor jbe inc cwtl aam sahf cli mov gs pop or (bad) je iret cwtl lock or inc in jno (bad) (bad) (bad) ljmp fcmovne mov in out insb pop mov push adc (bad) mov aam xor push jg sbb shrl pop jg ret (bad) (bad) jg movsb jae jno sub imul icebp push out pandn mov fcomip cld adcl jno scas lcall scas loope,pt aam ja jb mov pop pop dec (bad) das ret int or jmp lds sbb clc scas fistpl insb es ds cld ret xor imul rolb pop cmp subl cld jmp lret and sub das jp mov pop shl xchg dec jle cmp inc dec mov out pop sti shrd mov pop dec cmp pop push push pushf pop jle dec (bad) call mov pop nop mov mov ja mov inc lret out inc pop sub insb xor popa mov (bad) int3 sub sub ficoml sar (bad) mov jae or imul or sub lock add rolb sbb or inc rcrb insb inc mov push (bad) incl xor push ss dec pusha cmp les and lret mov aam (bad) mov push lea in jns sarl ljmp loop ror aam pop lea sbb jecxz jb (bad) (bad) decl scas sub inc xor adc daa test scas test addr16 xor iret cmp mov iret in hlt jmp divb rclb in push loop (bad) incl ret popa in hlt xchg jl sbb rol push fcoms stc lcall pop test jnp mov xchg xor (bad) lcall xor inc push fwait into aam rorl xchg pop sbbl jmp pushf cmp xchg pop fdivrs sti mov fwait and loope push notb lret incl jp inc sub lcall cli loopne cld mulb xchg jge (bad) (bad) (bad) decl and out mov inc sbb fistl test xchg addb lods fsts mov lcall ret (bad) fwait pop jmp (bad) cmp out jecxz,pt jecxz icebp xor pop (bad) mov adc mov cmp push test push push mov xor pushf mov dec pop and fs fldpi xor xlat roll pop (bad) (bad) (bad) decl lret cld sbb ss sbb mov push adc andb (bad) decl sbb test pop test int ret (bad) dec popf ss repz (bad) (bad) (bad) dec fs jle jge mov xor leave cmp pop stos sti xchg mov insb add (bad) (bad) lcall stos xor add test cltd (bad) testb (bad) aas xor es pop and mov jp daa mov dec pop jnp pop jl int3 cmpsb adc fldenv (bad) (bad) (bad) (bad) jg adc push ret mov adc fsubp mov cld cmp jmp test add cmpsl pop repz mov jnp sub push xchg sub inc jno mov push adc xor mov lock mov rcll mov pop xchg rcrl jl (bad) (bad) (bad) cmp mov (bad) pop notb fdivrs xchg xor pop out fsubrp callw lock repnz sahf movsl push add (bad) (bad) pushl sbb mov jp add (bad) dec sti or ret (bad) sub (bad) decl repnz push adc fwait dec add jg nop pop pop sbb pusha cs ja ds (bad) incl rorb cmp lock or xchg dec add notl (bad) incl inc pushf pop xor mov aas mov jge push arpl lock (bad) (bad) ljmp cmp fdivl dec push dec adc adc in fild mov repnz inc bound daa push mov push inc add mov je push jp and push pop mov jmp rcll in push out aam into mov adc stc std mov (bad) jg pop xchg add outsl pushaw lock orl enter (bad) (bad) (bad) ljmp fild push fiaddl mov cmp jo xor decl or bound jo xor orl (bad) cmp roll mov and pop sahf (bad) (bad) (bad) pushl sub add xor clc js jns xor push popf xchg mov out cmpl add cli xor (bad) jmp icebp (bad) sbb add (bad) loope push mov mov loop or vucomisd loopne int3 adc movsb rorl push sub pop rorb sahf jbe (bad) adc aaa jl pop sbb and insb mov and test call xor and jno add loop mov incl mov adc je inc inc lcall pop and decl js leave adc mov ds (bad) (bad) mov in mov mov test mov popf sub ja clc ljmp pop or mov cltd mov push (bad) (bad) (bad) (bad) cmp daa adc mov jae jecxz xchg inc pusha push ja mov test xchg mov pop push fwait (bad) (bad) jmp aaa (bad) (bad) mov stos mov js adc inc repz mov mov (bad) (bad) (bad) fimull icebp adc and mov pop cmpb aam rcrb lret lcall push jecxz cmp js mov xlat xorl sub inc pop lods lcall hlt (bad) (bad) (bad) jmp ja iret pop sbb add popa mov ja test lock mov sarl (bad) incl xlat es imul mov or cmp jmp pop popa adc mov add adc cwtl loope adc pop jl shr jns test in dec jmp mov in movsb jb and mov incl decl and outsb cltd repnz mov mov sub popf cmpsb popa fimul (bad) dec jnp pop xor clc xor cld icebp xor mov adc ljmp mov sets into gs rclb incl (bad) lock std xlat dec push mov push xchg lcall xchg push xor loop (bad) je (bad) lcall fsubs cmp dec (bad) or seto (bad) (bad) jmp mov sub xchg (bad) movsl jno ja rep das or fimul lcall pop or jp mov icebp ucomiss loop sbb dec add fnstsw mov test fstl cmp outsl (bad) (bad) pushl lock adc xor mov sbb fbld jecxz cmp or icebp mov dec adc icebp out cmpsl fistpll cmp inc ret jmp ror mov pop cmp or pop xchg jmp scas fdivrs movsb icebp es pop inc add jne,pt ljmp pop leave cmp add stos aam and (bad) ljmp pop pusha pusha stos ljmp pop or push movsb insl repnz decl mov jge lret pop add or out mov (bad) cmp xchg xor ftst and out xchg fnsave mov clc (bad) ljmp mov xchg popa push dec jns sbb pop scas pop aaa (bad) call push mov adc int out loop lahf sub call mov lcall mov add les leave cld (bad) (bad) (bad) cli or adc lahf add sbb stos (bad) push mov inc std pop push sub (bad) jg dec ds and push sbb or cli mov add mov int3 add arpl inc inc ret mov (bad) (bad) decl mov test ret les lret mov xor (bad) (bad) (bad) pushl and cmp imul sbb add push (bad) enter les pushl insb aam jmp mov scas (bad) (bad) lcall data16 cmp loopne sbb and enter jle pop fnstsw (bad) icebp (bad) (bad) lcall test sti insl mov lods pop imul sbb stos in and cs rcr pop mov ja push addb call sub imul cmp adc faddl lcall test movsl push push sbb xor sub cmp and shrb pop inc ds pushf nop std mov pop and cmp pop lods pushf pop dec push (bad) jg sub stos aad arpl add mov push add outsl lcall cmp inc mov mov mov dec xchg aas lods stos (bad) call lret mov pop push sbb js pop pop jbe into xchg pop call cld dec mov fmuls adc cltd cltd pop jmp shlb jmp inc sub inc pop jg (bad) (bad) (bad) call fstpt (bad) push xor pop divb std out mov mov jecxz inc iret fcmovne (bad) (bad) jg sub aaa mov adc and scas lods aas pop dec cltd jno sbb lds (bad) ljmp hlt (bad) or sbb mov cmpsl divl divl jge hlt movsb fisttpl stc mov nop out pusha pop test mov pusha (bad) aas sbb jg jg and dec push stos int3 pushf adc inc out mov scas dec adc jns (bad) sbb adc insl sbb loopne inc sbb xchg dec or mov and icebp mov cmpsb (bad) (bad) (bad) incl mov and push sahf xchg gs xchg test imulb stos je cmp xchg jno inc in adc (bad) incl pop lea jg test cmpsl ret notb inc arpl ja sub idiv out sbb ret rorl (bad) mov sbb xor or sub cmp shll enter cmp js (bad) jg dec mov lea test inc push push clc inc mov add mov fnsave sti dec (bad) (bad) (bad) (bad) jp pop and stc pop mov dec lcall lea test fdivrs (bad) jmp out test xor mov adc (bad) (bad) pushl cmc pop cld into mov loop movsb fimul ss int3 xor cmp adc (bad) (bad) ljmp xchg dec sahf lret mov insl in push arpl add in mov repz ljmp adc (bad) cmp sub fwait pop clc (bad) (bad) (bad) fildl (bad) jae cld andl iret dec int mov lods (bad) (bad) jmp ds call or xor push (bad) (bad) mov inc or pop into dec or sub adc mov test aaa (bad) xlat mov xchg pushf arpl imul jo popl mov and and out (bad) (bad) (bad) pushl lret pop push push test dec xchg pop adc daa dec pushf mov dec scas lods dec or outsb xchg cli hlt aam nop daa pop mov mov subl or mov loope ljmp mov pop sbb sbb int3 ss and push dec aas in mov lock (bad) mov movsl (bad) cld cmp nop jae mov cltd jmp xchg sar call out dec adc sub cli mov lret sar jg inc (bad) jmp aas or or pop call or push outsb scas mov adc out mov mov out add (bad) (bad) jmp and lahf popa dec mov adc cmpsb shrl scas (bad) repz xchg imul or dec sbb pop lcall rep or push ss (bad) (bad) incl lret out movsb aam adc sub inc xchg fldcw pop frstor rorl (bad) (bad) ljmp cmp mov cmp lods mov pop xor (bad) mov mov sar (bad) decl jno jecxz dec mov fs mov mov xor pop adc fcomip (bad) jg rcll js sbb pop pop dec mov aaa movsb inc inc (bad) ljmp mov jge add mov or jle sbb lods pusha mov mov scas pop jmp and ss (bad) ljmp cmp scas dec cltd mov pop les jnp add popf movsl mov ljmp dec cmc cmpsl in int mov fidivr mov mov call push sbb inc sub jbe (bad) in push fisttpll sbb into leave inc pop shlb pop cmpsl cwtl sbb (bad) (bad) call in pop jg nop mov lcall cli je mov and and pop inc jle (bad) (bad) (bad) (bad) sti push inc or fadds mov mov rorl and flds imul test scas xchg movsb push (bad) js movsl pop xorps jecxz cmp stc imul cmp iret push pop or pop xor dec fsubrs jbe mov ds mov jmp lock jb pushf push mov leave and mov push test (bad) (bad) call pop xor cmp enter loope outsl out data16 sbb xor jg lcall inc cmp movsb jne in pop inc jo mul pop fisubrl sar das rolb mov add popa or xchg dec push mov or xor decb (bad) (bad) ljmp xor push xor dec mov mov pop lret xor xor dec (bad) (bad) (bad) decl andb lods fdivr sti lea mov xor cli mov pop in (bad) insl push pop (bad) (bad) mov mov pop inc xor movsb (bad) fldenv rcl push mov repz sub call jno pop movsl mov and fisubl or xchg lods lret lea (bad) lcall int (bad) mov dec cwtl and add js push pop mov xchg nop dec nop or cltd push cmc push std shrl cmp pop in pop in lret push pop rorb mov in (bad) mov rcl or cs (bad) inc adc lds jno (bad) (bad) lcall adc mov imul add nop je jg inc lret cmp (bad) or icebp call mov out adc (bad) push (bad) (bad) (bad) (bad) ljmp loop adc sub or js jg or sti sbb mov mov call movsb jle fidivrl mov mov ret add sub mov int mov incl fxch and imull mov cmp mov lret les mov or pop jg jns xchg add into gs dec or mov test inc pop sub mov loope jnp ds jbe and (bad) (bad) jmp adc std dec lret repnz aad sbb and push (bad) jnp lret fsubrl and xor shll into popa cmpl stos sub jb push popa in add (bad) (bad) ljmp (bad) iret or jg out cmp in js mov pop mov add push (bad) ds ljmp mov (bad) aam out xchg push pop sbb out je (bad) jg clc cmp push mov xchg pop in clc lock imul das sahf push sbb mov (bad) (bad) (bad) jmp cmp cs dec sbb mov xchg mov and mov jecxz pop mov rolb call (bad) cld add sbb mov addr16 xchg jne stos (bad) sub or test xchg jb,pt out mov and inc std hlt or mov or xor cmc inc or mov icebp enter (bad) (bad) (bad) ljmp pop scas push jo (bad) das out movsl sub cmp jnp pop jmp call mov xchg (bad) cli mov pop xor cmp lcall push jp jp push outsb mov cmpsb fadd repnz push adc dec dec jg (bad) call xor cli pushf inc add mov aam or clc jbe mov pop cwtl cld mov std (bad) decl shrb sahf repnz es rcrl or ss (bad) (bad) (bad) incl (bad) bound js mov pop push sbb sub call repz dec sar (bad) cmp lahf dec cwtl das mov jl lret outsb dec outsl push hlt push lods inc dec imulb mov mov (bad) incl adc in lock and add add aaa pop mov sbb mov pop hlt (bad) pop or mov cld repz aas adc (bad) jp out dec int3 xor inc sahf daa aam fdivrl (bad) ljmp xchg mov mov xchg and gs cwtl invd insl push aaa (bad) and ljmp xchg push jb pushf dec push loopne (bad) (bad) (bad) incl and rcll (bad) popf jle jno lret pop movsb mov cmpxchg jg fsubrs cli jmp and jl or push scas xchg dec pop inc jb (bad) (bad) (bad) fcompp jae xchg or pop loop or add and jl imul pop dec jge adc and ds jno (bad) lods js (bad) (bad) dec adc pusha lahf push movsb pusha xor negb jmp aas hlt adc fwait mov sahf rcr je cmp js jnp movsl gs fild cmpsb in cmpsb add cmp add loop mov ds daa mov (bad) (bad) call sbb sbb jb push pop and pop inc mov dec cmp cmpsl xor pop out sbb mov pop jg push pop (bad) pop scas in pop fimull ss xor (bad) into add xor cli cmpsl divl int push stos lds (bad) jmp test and or sti sbb jo call iret cwtl nop bound (bad) call nop xchg outsl loope lods repz (bad) rclb cmp jno pop (bad) sub das clc outsl sub or addr16 sub inc fidivrl cld rorb cmp divb imul ficomp jmp mov int3 sub int3 js inc movsl js ret adc (bad) inc sub push jecxz popf lods jbe sub cwtl push or jge fisubr ljmp push mov push frstor jno xchg (bad) ljmp lcall sbb sbb (bad) (bad) lcall dec mov mov cmp (bad) dec cwtl mov cmp mov arpl ret push or daa xchg pop push dec into mov dec (bad) (bad) (bad) jg and icebp jp jo test sub mov mov mov testl aad push jo icebp sub mov xor pop std or cmpsl or pusha (bad) incl mov std sbb fnstenv or push push sar or ja mov stc add insl adc jg addr16 sub jge sbb (bad) (bad) mov imul rcrl fucomp pop sbb lds lret mov (bad) neg pop xor stos popf fstps rolb stos cmpsl pop popf fist outsb jbe movsl pop or mov pop sub outsb pop adc push push mov (bad) (bad) jmp pop mov and js cmpsb sarl inc mov pop sti push repnz fidivl jge in adc aad and mov jg imul sub ljmpw insl in (bad) (bad) pushl mov roll sbb movb imulb jl out cmp je sub (bad) (bad) lcall mov loop dec iret push fldt not ljmp xor mov sar sbb negb (bad) mov push bound imul cli cmp pusha in sub dec jmp mov ds mov mov inc (bad) jecxz add dec lret xchg call mov mov cmpsb mov sahf jmp dec sahf insl cmpsl (bad) (bad) (bad) call imul ss pusha pusha in sbb ljmp dec jl xor mov or (bad) (bad) incl mov mov inc lea dec mov cmp adc (bad) pushl fdivrs (bad) enter add outsl dec push xor xor decl out aad inc jp push jmp jg mov xchg test adc cmp nop nop push jmp out lret (bad) (bad) fcomip and inc lods cmpsb xchg and (bad) stos or mov xabort or ss inc lcall incl add cli les lret inc insb mov push in adc (bad) (bad) (bad) ficompl test push test add ds les jmp inc lcall insb cld sahf cmc mov (bad) ds or inc cmp lcall inc out addr16 dec push ds sub cmp (bad) (bad) (bad) mov or mov sub mov test jno lret mov mov (bad) (bad) mov inc test js add movq (bad) (bad) decl fildll fistpl outsl sbb cli jge pop jecxz mov sub (bad) (bad) (bad) in rcrb pop ret cmp xor dec clc popf int sub icebp pushl or xchg push cmp outsb xchg scas popf pop hlt pop mov push inc add pop aam sub jae lret aam sbb cmpsb xchg cli mov adc xor (bad) (bad) pushl adc inc fist icebp xchg add mov xchg pop shlb mov dec (bad) (bad) (bad) ljmp push mov mov pop incb loope add sub add decl adc adc sahf lods insb mov (bad) (bad) ljmp dec adc fnstcw pop push rolb popl add mov stos push xor je mov cmp divb (bad) (bad) (bad) (bad) incl sub mov movb or lea dec jno test inc popf adc fs pop add cli cltd adc mov or (bad) (bad) call sar test cmpb lcall sarb (bad) fst mul call (bad) (bad) call repz lods fdivrs mov fstp mov (bad) (bad) fild arpl push sub and lods movsb in push lcall stos pop ja incl data16 jl add lods pop inc (bad) (bad) (bad) (bad) jmp daa inc mov or ret imul rcrl test andl push jmp pushl mov and aam leave (bad) xor ds cmp (bad) mov daa (bad) (bad) (bad) jmp out or add sbb dec lcall enter adc (bad) (bad) call sub sub pop int mov add movsl and fidivr jecxz mov pop cli adc (bad) decl mov push or aaa push mov dec mov loope jnp cmpsl mov dec push sarb repnz cmp jmp cmp pushf cltd cmpsl fcmovnbe adc mov lds adc std (bad) jmp sub push inc (bad) aaa xor inc sub push (bad) (bad) lcall mov rolb mov flds das inc movsb push (bad) xor (bad) cmp sub mov pop jo lea xor jb imul incl xor pop xor lahf je stos icebp or xor jne shrb inc fidiv xor cmp and loopne incl call jbe pop lahf pop jnp (bad) cli (bad) (bad) inc notb popf (bad) mov (bad) sbb daa cwtl inc movsb cld cltd add pop movsl add test loop rol (bad) ljmp aaa jno cmpsl mov pop and xchg arpl xor cmpsb aaa add xor repnz out ljmp sbb icebp jns,pn int3 lods or fs push arpl adc (bad) insb loopne das stos in sti xchg ds clc jg mov je lret jmp sar ljmp (bad) out loop rcrb js cmpsb ret mov decl ss mov fs fcomip iret daa mov iret or movsb and fildl pop push ja pop jae push mov iret add mov (bad) (bad) ljmp or inc push das lds fistl mov stc cmpsb xchg outsl test xor idivb stos mov fcomip das neg sub int dec inc cwtl ss sub and sub mov mov dec mov lret mov clc std (bad) (bad) (bad) sti cmp jns add mov push mov jne adc rolb push pop mov (bad) (bad) mov mov stos (bad) mov movsb lahf dec mov ljmp jle mov dec or loope fisubrl out mov inc add dec ficom jns lock push leave mov pop add (bad) mov (bad) pushl or jno dec outsl es loop pushf or jg pop fiaddl dec mov in iret popf xchg lds or es or pop lcall adc call decl scas imul push cld sub or mov cli pop and or inc dec sbb xchg or cmpsb mov (bad) in incl in mov jmp jo lods (bad) xor pop ss xchg popf mov (bad) jg (bad) es mov fcompl jecxz xchg mov lcall loope jmp jb xlat mov fisubr adc daa sahf negb or es pop clc lds cli (bad) (bad) (bad) (bad) mov je push mov jo and sahf (bad) and xor fcmovu lock inc adc mov inc std cs je mov (bad) dec or pop decl lock stos xchg jmp mov and sbb or (bad) ljmp add or outsb je sbb push pop gs mov cmp test stos incl push inc daa repz sahf adc popa pop mov mov mov lea push scas add adc inc or ljmp ficompl in and and (bad) (bad) (bad) pushl clc fnsave and dec jp jecxz scas nop xor jl aad or inc inc rcrb std incl add std pop insb and mov in xor push arpl lcall (bad) (bad) fildll imul jbe imul clc iret push push lret mov (bad) incl mov fbstp out jno ret and or xor xor (bad) (bad) (bad) incl leave jge add jle dec popa fbld cmp stc xor popa mov faddl inc incl es int xchg inc lret cmp sbb nop std enter jge test cmc xor mov repnz (bad) (bad) ljmp mov das mov dec out icebp lcall clc adc inc xchg inc out test (bad) (bad) dec pop mov adc sbb pop jbe pop xchg xor pop mov lret daa fimul mov inc rclb xor jle (bad) mov or inc mov lea cmpsb xor dec fdivrp add sar lcall pushf xchg lea or jbe jg inc jge push push pop xchg (bad) (bad) mov add lahf cmpl gs jae sbb xchg xlat pushl dec ficompl cmpsb pop fldcw out mov mov sbb mov mov xlat dec push std call cmpsl cmp repz lock test inc xchg (bad) decl jl xchg cmp add sub push and popa lds into (bad) aas cltd shlb fcomps cmp pop fstps movsl (bad) adc ljmp data16 cs dec mov push mov inc mov sti call cld (bad) in xchg (bad) cmp scas in jns or fdivr and pop mov stc lcall sub repz (bad) (bad) (bad) ljmp xchg inc scas ljmp cmp pusha cltd mov add (bad) (bad) incl push ret test das daa dec mov push mov cltd inc mov jmp sub push and push jmp and (bad) (bad) std push jb ss dec aas pop push out dec mov out sub fxch fsubr dec lret mov call xchg mov fistpl or outsl cmp (bad) mov lods jg sbb incl xchg or sub int3 mov cmpsl rorl ljmp out cmp je (bad) push (bad) setg (bad) incl push out adc out sbb ret adc cmp inc (bad) (bad) (bad) jg or push cmp sub jo popf mov (bad) je push pop fs es xchg out inc aas (bad) fisubr imull pop add (bad) mov loope clc sbb ret mov (bad) pop cmpsl lds std fstl cmpsl inc cwtl lcall ds (bad) push dec mov sub pop fs mov inc pop sbb mov push adc clc xchg cwtl repz daa cltd adc rolb std lock and mov and lcall mov jnp iret add test ffree scas cmp out clc jg iret adc inc jmp add mov or std jmp das shlb mov stos pop sbb and (bad) fildll insb add mov mov das add adc adc sub in ja (bad) mov call pushf inc xor mov sbb dec (bad) (bad) (bad) (bad) call inc push jno rcll lea cmpsl and mov mov (bad) (bad) pushl sub cld ret sbb cli (bad) mov rolb es push dec les push push sbb cmp (bad) fmull insl fisubl sbb icebp fcoms push fisttp jmp loop in mov sbb (bad) (bad) inc (bad) lea sbb hlt pop or and jo dec loopne std cwtl and insb mov (bad) ljmp fidivrl (bad) out jo inc sbb mov xor xchg push mov cmp lods insb mov (bad) (bad) (bad) decl stos xchg pop mov jle jbe aaa lcall insb loopw xchg push pop adc sub das mov lods nop push out out loop,pt das aam (bad) (bad) jmp loope das mov loope imul push adc pop cmp cmp nop jnp ja out clc incl popa test repz test into adc mov call adc xchg xchg (bad) (bad) (bad) (bad) mov rcll pop stc je xor cmc mov cmp and mov sub decl sbb fistp inc add push add mov cmp std xor (bad) (bad) incl js dec daa and mov mov lds cmc jmp cwtl ret lcall cli (bad) jg incl bound cld aas push mov mov push (bad) (bad) (bad) jmp pop lods fnsave test scas add mov mov pop cmp jg or jmp adc orb cmpl fstp lds test pushf out jle (bad) (bad) pushl lock or dec (bad) and xor inc sahf into xor push dec push mov (bad) (bad) (bad) dec mov push inc jno ss cmp int outsl xor and lods jle jmp cld (bad) ss lret movsl jns movsl sbb inc (bad) or ss loop mov outsb xchg roll cli mov movsl pop ds (bad) (bad) out and mov ja sbb mov xlat lcall sub decl cmp xor cmp (bad) (bad) call cltd pop xor push inc xor fimul jecxz mov jnp and xor and dec cld (bad) jmp and xchg popa push es out imul out into cli mov xchg cmp fimul sahf lcall adc addl cwtl test or adc fisubl sahf xlat fst mov mov push aas (bad) (bad) (bad) incl add mov cmp lahf jmp lcall cmp fdivrs fist pcmpeqd xchg stos xlat pop dec in in push test test jmp call in lahf dec out cmp (bad) icebp push les bound jae enter lea pop or (bad) repz mov outsb push repnz (bad) (bad) jmp jp (bad) (bad) aad into shll fsubrs sbb or std push (bad) (bad) (bad) jg movsb movsl lret ljmp in fadd xchg dec cld fild sub pop push ret sbb xchg notb iret dec aas pop mov call je into loop and push dec inc fdivrp scas clc (bad) in les jp dec scas aaa xor cmpsl dec pop fldpi jecxz in sub push (bad) jne cmc (bad) (bad) pushl push mov cmc pop mov out dec addr16 out out not aad clc nop (bad) cli jo (bad) mov mov (bad) les incl lds je cmp (bad) (bad) (bad) incl fdivrl mov jl adc faddl sarl int mov mov enter (bad) lcall jne adcl in incb jno xor mov add xchg lock subl (bad) (bad) incl lods xchg and lods call jb mov (bad) ss fnstenv add jns jnp ds icebp das mov cmp push adc sub xchg jecxz (bad) incl pop incl inc add xor mov (bad) lret iret ds xchg mov cmpsb test pop inc and cmp sub or mov scas bound in xchg mov (bad) jge add adc lea ds xlat out test push jbe sarl in push jns cmp inc push add lods shrb dec sbb negb cmpsb (bad) fstps hlt inc lcall sub and pop repnz leave add insl sub (bad) (bad) (bad) aas add cmpsl clc rorl jnp std rclb add ret icebp adc and bound (bad) lcall cmc aam xor pop std cmp mov mov pusha mov xor sbb cmp (bad) ljmp inc fstl pop out pusha add out stos jmp aas add lods sbb mov movsb (bad) repz and lods das fdivs loope (bad) shrb int3 cwtl ficomp inc repz aam (bad) mov pushf push sbb fstps and lods xchg and add or insb lods rcrl ficom outsb addr16 xchg push (bad) lcall inc mov fidivrl or mov (bad) (bad) call cmpsl cwtl push insb (bad) mov (bad) pop add aad clc sahf pop sub insb pop cmc mov fsubp cmpsb ret push in mov push xor inc dec in add or repz sbb popf mov xor dec and cmp or fimul mov (bad) std clc loopne xchg jge or xchg into cmp nop lds sbb inc adc sbb gs pop inc unpcklps in icebp decl or (bad) (bad) jo mov (bad) incl int mov out xor mov (bad) pop lcall (bad) sti fldenv int3 test push dec ds (bad) mov (bad) pop test jns xor pop inc insl rolb pop stos out mov (bad) mov push orw pop ds in ljmp (bad) (bad) aas sbb cmp cmp aad int3 add add (bad) cmp clc mov or mov push lcall jo jecxz add push cli nop cmp jl stc pusha lcall (bad) (bad) (bad) cmp clc scas imul out out test (bad) je inc push lcall mov pop or mov jb mov repnz test (bad) ljmp and (bad) lock xchg xlat adc mov daa dec dec (bad) (bad) mov pushf add shld sbb inc aaa lret (bad) (bad) (bad) (bad) fadds jmp cmp xchg xchg in inc jnp pop inc mov xor sarb cmp cmp jecxz xchg pop xchg adc (bad) mov notb mov inc jge imul ret (bad) into and push (bad) (bad) (bad) ljmp jo addr16 inc fsubl mov mov add insb inc jle xlat jo (bad) (bad) decl xor ds xchg bound and jl into rcll leave aad scas ficoml out jge sub mov stos clts pushf xchg in rorl push inc mov push mov adc pop add ljmp imul cmp push jmp xchg sub in adc pusha or (bad) jg jne mov jnp sub adc dec or hlt pop pop pushf inc int cli lock (bad) (bad) frstor jl mov dec push cld sub invd pop mov add sub mov ds (bad) (bad) (bad) ljmp adc pop lds xchg lahf jnp ds imul pop insl xchg and incl in mov dec fwait sbb push popa jo sbb xor icebp fsubrl adc std pop cmpsb pop sahf out loope (bad) (bad) decl mov scas lcall sti xor mov mov sub rcrl mov mov scas mov dec jae int3 stos adcl lret push mov mov pop adc nop pop lcall mov mov mov int3 fisubr jno sbb loopne mov (bad) (bad) (bad) jmp add sub stos pop mov jg cmp enter pop loop mov dec leave mov scas clc ljmp jnp inc mov inc (bad) sarl pushf shl faddl clc mov loope and loopne or lods or faddp icebp je imul ja pop ficompl inc dec adc (bad) (bad) (bad) (bad) std jo mov (bad) dec push dec xchg xlat sahf mov cmp int3 mov (bad) arpl push inc (bad) (bad) (bad) lcall jp xadd and das push insb mov mov mov inc stc jl and enter adc test call (bad) pushl jg,pt adc outsl xchg imul dec scas sub (bad) and mov pushl lret jecxz stos dec test sbb cmp jne push pop test mov and ds inc repz jmp (bad) mov xor pop (bad) mov out cmp int subl push pop dec ffree cmp pushf into je pop add insl sbb loopne pushf lret dec fidivl xchg (bad) repz xchg fstl xchg mov cmp mov enter cmpsb ja lcall ja outsl mov mov cmp out add clc push sahf xchg test (bad) (bad) (bad) ljmp in sbbl or movsl std popa fist ret mov dec nop adc (bad) fst dec inc fmuls dec xor (bad) mov das stc xor mov jmp xor imul pop (bad) (bad) (bad) jmp and leave or or into insl push movsb cmpsl mov jns ss xor (bad) aas nop lods ljmp addr16 mov fdiv incl pop fucomip pusha repz pop incl leave loope,pn lret (bad) inc adc mov rorl and or mov mov (bad) jmp pusha push mov xlat addl jnp mov (bad) (bad) ljmp sub fildl jecxz je fwait stos add jo jae (bad) (bad) (bad) incl xchg jne push (bad) push ficomp and cmp and test int3 seto push sbb into incl int imul and inc xor (bad) (bad) ljmp mov aam and lret cmp and int xchg jmp (bad) pushl add mov in popf scas mov or pusha out movsl cmp mov or sbb or pmulhuw std sub inc (bad) (bad) jmp jge ljmp mov push add fsubrs pop mov (bad) (bad) out cli fldt or xchg add lea lret (bad) lret (bad) lret (bad) jmp mov fnsave imul cmpsl lock push out rcl mov in or inc xor (bad) (bad) (bad) push in inc inc sub mov add test mov push sbb mov jmp (bad) (bad) (bad) ljmp shlb pop lcall dec iret mov mov add mov mov pop shr mov movsb or add int (bad) (bad) (bad) decl xlat cs jno mov ds xor and xchg mov arpl dec add mov aaa jae and out imul (bad) (bad) decl mov mulb xchg pop mov push sub or mov out dec inc shlb mov icebp jg push das jp addr16 mov xchg fmuls std push enter (bad) (bad) jmp in mov pop cmp pop (bad) mov (bad) jbe dec ret orl pop cmc cltd add mov (bad) fwait adc jmp dec sahf lds ret fcomps jle cmp cmp inc je mov pop and jb mov fimul scas jp loop int out push push nop (bad) lahf scas cwtl mov cmp jmp sbb bound jmp loop push jae mov sbb xor lock or btr call dec adc lcall lods or test xchg (bad) (bad) jmp (bad) mov fnstsw xor (bad) sub (bad) (bad) (bad) inc mov dec inc out pop inc test pushf push (bad) addr16 addr16 xchg mov (bad) mov cld add shrb out push sti push xchg pop xor add cld or push loope mov (bad) (bad) jmp xchg mov (bad) add and je stos push out test ds (bad) incl add ret movb jns push in mov int sarl inc (bad) incl addr16 mov mov inc and sti repnz fmuls xchg jae adc (bad) (bad) incl jns push pop lods or cmc jne and cwtl add (bad) push push inc adc (bad) (bad) mov push ficompl xchg mov lds adc fsub loopne (bad) (bad) (bad) ljmp fsubs das push imul sbb jns outsl or jl into add scas cli jg cli sbb sub xor rcr inc loop,pt cmc pop (bad) (bad) (bad) pushl lcall repz mov jl xchg jp aaa notl sti mov decl sti jge sub push pop (bad) mov push rorl xchg (bad) (bad) (bad) jnp lock mov fdivrs jecxz pop aas dec sbb movsb pop (bad) fiaddl lahf (bad) (bad) (bad) lcall imul inc ljmp mov pop mov mov mov out jl cwtl cmp xchg xor (bad) jmp dec sahf cli loope mov rcll fst iret mov lods xchg push mov mov pop cmp hlt (bad) xor gs xchg dec aas or ret mov out clc aaa add dec out add inc mov lcall pop cmp (bad) (bad) (bad) incl mov dec (bad) sub mov test bound (bad) repnz mov or fidiv decl lea mov xchg jle pop cmp outsl jb in (bad) leave push dec je mov push fcmovnbe jmp mov out pop push jne mov (bad) (bad) (bad) mov pop sti (bad) aam bound jns or jle sub sti call (bad) (bad) (bad) jmp (bad) hlt repz dec and add rcrl mov sbb cld sub inc data16 cmc clc mov in (bad) (bad) ljmp fistpll pop mov mov cmp pop gs pop sub test cmp inc fcos call std repnz adc scas pop adc jno mov push mov or jp stos lret jl sbb faddl out clc lcall hlt add mov jle pop cltd std jnp repnz or pop cli lods (bad) (bad) (bad) call ret mov fsubs mov es mov jg jp in add xchg icebp leave pop hlt (bad) (bad) cld loope inc xor dec pop inc (bad) xor out add adc rcrl mov (bad) (bad) (bad) cmp nop fbld jg pop imul mov sub scas in xchg mov (bad) mov mov fimul xor mov fdivr (bad) call add (bad) in and mov ljmp leave (bad) mov bound pop xor jmp adc (bad) mov jmp cmpsl (bad) in push cli cmpsb cmp lahf lret sarb arpl add pushl sti clc loope ficom mov push ljmp loopne (bad) (bad) mov pop jle sub jg out sub (bad) pusha cmp adc (bad) lcall (bad) adc pushf in test movsb (bad) lock bnd xor push icebp (bad) (bad) ljmp hlt pop jne add sti lret lret (bad) pop fmull sub sbb (bad) decl cmp ja inc and inc stc enter ficom mov push push test cmp lea sub scas mov jne decl inc mov pop and insl push sbb (bad) (bad) (bad) push js dec sbb adc ficompl mov test sub daa lock adc das cmp xor movsl jb cs lods jmp (bad) xor inc loop ds xchg or mov mov (bad) ljmp inc inc out jae ds mov int es xor sbb push xlat incl inc sahf pushf and push (bad) (bad) (bad) jg loop mov rorl sbb mov movsb or sbb (bad) (bad) (bad) push and jmp fcomps out dec xchg rcrb mov ljmp mov mov imul adc xor fadd mov fildl add add loopne paddusw (bad) (bad) (bad) (bad) pushl xchg xor idivl ss pop pop in bound mov dec (bad) (bad) ljmp add add mov in in cltd (bad) aas and imul (bad) (bad) (bad) decl (bad) pusha sti xor jp cmovne jnp xor lahf fldt enter jecxz mov (bad) jmp xchg mov pop xlat or pushf aas pop adc lea (bad) jns dec pop mov cmp mov lods dec (bad) (bad) pop add or xchg and push orb push and and (bad) cmp ror dec push mov or sbb je cmp lds and push js stos mov cmp xchg pop sub push (bad) call inc sbbl (bad) jo mov mov pushl aas fwait cmp jmp sbb lds xor add js ss nop pop xchg inc cwtl xor lret sbb lret jg sub jns fdivl mov mov xlat inc (bad) mov out out popf cs cmp lret lock fisttp sub pop adc test (bad) mov clc fs push rorb sub arpl lahf mov adc add jae adc inc dec lcall push jge mov mov mov imul fcoml insl stos and xchg fild pop loopne pusha fsts mov push xchg in mov (bad) (bad) pushl ds rcrb cmp xor mov imul ret test inc ret repnz mov (bad) (bad) (bad) pushl aas mov mov xchg jns mov adc add pop sbb xchg jbe lcall push mov test mov xor xchg inc jno (bad) (bad) (bad) lcall sti push pop push popl xor nop jg pcmpgtd sub inc sbbl jg (bad) decl jne mov add xlat push fs dec jp sub (bad) (bad) jmp popf orb jns mov div fnstenv sub call cmp (bad) (bad) ljmp fwait mov push ljmp mov fs sub inc ret jmp ljmp adc lahf ljmp outsl setae add in imul lcall cmc ret or insl cs mov ds push xchg jl fsubrl push ret sbb mov mov adc cmpl (bad) jg (bad) out inc xchg stc das std xor pop sbb adc imul out cli (bad) pushl pop movsb int jae aaa mov cmp insb ror (bad) sti (bad) dec subl xor loop (bad) jp lahf mov call flds enter js outsb jns (bad) out cli in sbb sub xchg lahf or out lret insb enter (bad) (bad) (bad) jmp dec jb dec loopne mov mov lods xchg mov (bad) mov sar mov add decl and fcompl mov sbb cltd and fistpll movl jnp ret cli mov stos pop jmp inc mov (bad) jns insb or add push xchg mov xor das pop and mov jge adc pop ljmp mov mov dec sar incl call test add fdivr stos (bad) jg ljmp xchg pop push jmp mov fdiv in cmp in or (bad) decl imul pusha cmp and mov lcall arpl mov adc mov jmp adc (bad) (bad) (bad) decl ret cmpsl out sub add std (bad) mov cmp loope rclb inc fild mov cmp jecxz cmp sbb aas or and ret and mov in (bad) insb mov add push movsb sub xchg mov ds xchg add dec scas test jbe cmp mov cli (bad) (bad) mov cmp dec pop jmp sub sub fstpt (bad) ljmp push add cmp xor sarb sti xorb (bad) (bad) (bad) out xor add mov xor dec sub sbb (bad) das cmp (bad) (bad) jmp call sub movsl or sbbl xchg mov stos pop sub (bad) (bad) decl cmpsl add push lods scas leave mov dec or xor xchg aad and mov in dec inc mov pop jne dec (bad) (bad) (bad) call jne dec jbe repnz outsl shll imul sub push test insl jo rclb cld jmp push mov cmp jne mov mov in add or stc cmp jp xchg sub xchg sarl and adc sbb lcall incb inc dec aaa (bad) or mov ja int3 add dec dec xchg sbb (bad) cmpsb ds pushl ljmp mulb mov popl pusha repz sbb fimull (bad) push (bad) cmpsb add aas push icebp jp sub mov aam cld (bad) mov mov movsb or lock mov pusha shll (bad) decl out subb negl mov mov ds and jl ds sbb lock xor mov pop xchg shrb mov outsb sbb das lcall xor int cld lcall repnz mov sbb sub inc scas (bad) ret adc mov lret xchg fldcw mov inc jmp int3 (bad) in out adc adc sar (bad) decl fisubr push push jle test test sub push jb mov aaa or shrl js mov cmp rorb mov push fsub dec ds cld (bad) (bad) (bad) jmp jmp mov push adc pop sub push dec out add add (bad) (bad) ds (bad) xchg push inc push js pop cmpsl in js push sbb movsl push jae,pt mov (bad) (bad) (bad) call ret pop nop out insl into and test arpl je pop and mov sub and ret out clc pop push push add xchg mov and jne icebp and (bad) in (bad) jmp shrb pop push call lds movsl or test push mov dec (bad) add sub jge cltd mov adc mov pusha in pop or loopne scas pop sahf jmp dec icebp xlat repnz sbb sub fbstp roll pop and insb cmp sub push lret mov in lods out loop sbb lea cmc jg (bad) lcall pop inc dec (bad) sarl lock (bad) decl push pop out mov mov add mov pushl or (bad) bound rolb shl push cmp es (bad) (bad) (bad) ljmp jl add cmp mov cld xchg sub cmpsl push and dec push bound sahf push jg out cli fimull fisubrl inc mov jl dec mov clc (bad) (bad) (bad) jg xchg mov lods or lods mov pop mov xchg mov rorl ljmp in mov mov dec loopne jae mov pop pop es addr16 jmp int (bad) cmp and xor dec data16 pop inc push cmp dec push add (bad) inc fwait insb jo add mov cld sbb add jne outsl scas or and jg push ljmp push mov sbb lds xlat arpl xlat dec adc cli (bad) mov add cli mov cmp mov (bad) incl in sbb and push lcall or or or inc mov jne pop pop mov pop cwtl xor cld jmp lahf adc jno aas ret jo dec out fwait cwtl jle pop xor stos mov out cli jmp enterw add shr ss push pop mov cmp (bad) (bad) jmp sti cmpsb and push xlat bound pusha std inc decb sarb jmp popf das inc pop push pop (bad) mov out xor push pop jmp test sbb dec sbb inc cld (bad) pushl aas xor (bad) mov fisubr scas jae jo lods cmpl aas mov dec orb jmp or sub cmp (bad) (bad) (bad) ljmp rcrb inc jo xchg push lret popa xor or or nop sbb inc dec dec sbb sbb (bad) and inc xor xchg (bad) pop mov (bad) (bad) pushl fs test and mov mov sub loopne pop sahf js cs (bad) (bad) fild cmpsb jae mov frstor les lret add jae push jne repz xor and (bad) mov xchg stc inc shl fwait sbb aas loopne lods pusha jp scas push out mov (bad) push cli (bad) (bad) (bad) ljmp xor movsb xchg fadds in lahf inc inc in (bad) nop push and mov adc pop stos (bad) mov sub shlb pusha (bad) push adcb inc xor push mov decl jmp mov mov sub pop ret adc push loop std fwait aas or xorl and cwtl lds into inc mov movsl roll add jne incl addr16 shrl mov push sub mov cs (bad) (bad) inc bound jle lcall into rcrb sbb mov test pop into pop (bad) jecxz (bad) (bad) mov mov xor ljmp push repnz mov decl sbb sbb and gs in call icebp push dec (bad) (bad) (bad) pushl cmpsb outsl cmpsl xor jecxz pop sbb nop jle aas push lods jmp (bad) (bad) (bad) (bad) in dec mov js xchg cmpsb lock popa dec and pop dec mov xchg xchg pop out pushf mov (bad) call or mov mov lods ss (bad) (bad) fistpll or mov cmp (bad) iret in stos adc mov xchg scas leavew sub clc push fwait cmp cmpsb sub lcall cmp mov mov mov xchg or leave pushf cmp mov (bad) out int cld (bad) lcall add lods roll add fidivrl xchg fwait lea clc lcall mov sbb fsubrl (bad) (bad) (bad) jmp or push xor cmp mov fs sbb xchg lods fiaddl cmp mov xchg cli sbb mov pop cld (bad) jmp out outsb lret mov jbe rorl pop stos and xlat pushl push cld popf mov or rorl (bad) (bad) (bad) inc inc pushf les and adc mov add mov lcall add lret pushf jmp fnop nop stos adcl jge (bad) (bad) dec sub or mov cmp xlat lea rorl sbb (bad) lcall pop je mov stos cmpsb ljmp (bad) lcall sbb sub adc test outsb push mov out mov mov inc lret sbb jp jg,pt test mov pushf add and pushl (bad) (bad) jmp push xchg (bad) adc pusha and icebp (bad) (bad) inc add lret xchg out push add shrl pushf adc std (bad) (bad) fistp call (bad) mov in enter or pop jb jmp mov push sarw int ss (bad) (bad) rol adc mov xchg cmc mov jp inc mov iret mov (bad) (bad) (bad) call jl and push popa int3 push mov push std pop jns bound dec xchg cmp dec loope xor jmp mov sub bound aas xchg jbe cmp into add pop cmpb push cwtl push mov inc pop xor push xchg test (bad) (bad) (bad) jmp xchg xchg mov jp cmp lock pop and icebp inc add addr16 (bad) (bad) (bad) lcall push sub ret jecxz inc outsb test pop fnstcw daa leave push or cld pushl jb adc test cwtl iret xlat call das dec or dec xor (bad) (bad) call les jns ljmp sahf adc or xchg fldl insl cs (bad) fwait jg (bad) incl push les sub subb imulb sbb aas mov (bad) cmp fimull sub mov xor pop lock pop add xchg mov dec cmp fstp lds out insb adc push std push aaa bound (bad) jne repnz inc pushf (bad) jge push add jbe bound aam test push mov lock add add incb sahf jne faddl dec sub cltd test fnsave incl decb inc sbb lahf xchg mov (bad) (bad) ljmp mov add xchg lods roll pop sbb cld out (bad) (bad) lcall and roll jno xor lcall push add lods shrb lock mov or mov stc xchg outsl ljmp and lds (bad) mov dec jno cmc cmpsl adcl cli push (bad) (bad) (bad) incl ss ss ja sbb jns jb insb sarb adc pop push xchg xor cmp jmp push push mov sub add imul inc out ret and lcall push or xchg add cwtl adc ds idivl sar dec sbb mov test inc jp test icebp (bad) (bad) ljmp inc pushf into flds gs loope and mov and ljmp xor fistl (bad) out aas pop jne push hlt pop or mov push scas inc adc mov imul or call (bad) das stc pop into pop adc sub insb mov mov test (bad) (bad) (bad) jmp and daa adc lret fcmovnb add mov jb fsubrl cmp lcall xchg inc adc es mov sti lret pop or (bad) shrl cmp inc or (bad) cmp mov push xor push mov mov xor test arpl hlt xchg sarb (bad) (bad) call cwtl xor dec pop movsb dec and cltd lcall or dec clc mov ljmp mov shlb xor jl arpl inc (bad) cltd and xchg outsl rol (bad) dec jg cmp and mov mov push in in loop popf sub (bad) cmp mov sbb dec inc jle inc jo jl icebp es xchg fmull (bad) (bad) (bad) dec dec mov (bad) lea inc mov push into or cmp loop jns lret inc sbb (bad) (bad) jmp adc iret loopne test stc stos shlb xchg xor pop aam inc ret cmpsb hlt (bad) (bad) (bad) call add xor dec fcompl ds mov sub int repz enter (bad) (bad) (bad) ljmp inc test scas inc pusha mov sbb cmp add add cmp xchg xchg out jl out aad and xor cmpsb cs mov (bad) pushl js pop jmp fcmove push push jmp fidivr or lcall push jmp aaa fistl lea push mov and (bad) (bad) decl dec aas int3 pushf mov lods mov in loope mov ficompl loope mov mov cs pop in pop push dec xchg in xchg add jp call jne and gs inc jbe es mov xor xchg bound dec and xor ret mov imulb js (bad) pushl mov push push cmp mov jo out and cmpsl loopne mov sbb or decl inc outsl (bad) cmp sbb (bad) fstp stos mov adc (bad) (bad) decl repnz fsubl dec dec bound test movsl add xchg mov fcos dec (bad) (bad) sti loop dec aam and pop dec sahf dec ficompl jge add out xor mov push push pop loopne call cli repz and clc loope xor hlt push cli cmp pushf jp xor sar mov pop push jmp cs cmc mov sbb ret (bad) cmp (bad) (bad) (bad) call mov idivl mov xor mov (bad) call shrl bound ja mov dec adc cmovno outsb and sbb (bad) (bad) (bad) jmp stos into lret push and repnz fisubl sbb ds into (bad) adc leave add jmp add mov add cmp mov inc sbb pop (bad) pop outsb ficom jle test out test dec les (bad) (bad) cmp dec scas sbb cmpsl pop arpl out cmp sub jnp and dec mov and lock test push (bad) push nop (bad) and mov dec push (bad) call mov mov push adcl add (bad) (bad) (bad) pushl cwtl sarb sbb lret shr xchg mulb push lret subl mov (bad) (bad) ljmp adc xorb cmp insl outsb inc jmp adc scas xchg sub decl imul test and and les mov inc ret imul ficom loopne,pn fcmovbe out mov (bad) (bad) (bad) (bad) jmp int vmovaps sbb sbb add xchg sbb push sub add incl repz rorb sbb sub lcall or adc xchg and inc adc cmp or (bad) cmp adc dec pop cld inc mov xchg ficomp pop (bad) jg (bad) fstps repz pop aas jae lret mov mov cmpb (bad) push jmp test divb cmp push (bad) mov in add or cmc mov movsl (bad) (bad) (bad) jmp das and push hlt fdivp cmpsl pusha cmpsl scas jo aaa and nop jne fistl idivl push cld sbb (bad) (bad) incl xchg mov test rolb push xor mov xchg imul fwait push sub (bad) aad fbld (bad) (bad) cmp sahf scas lahf fwait scas push ljmp xchg xchg nop in lods sbb (bad) (bad) (bad) lcall and xor dec aas inc test jb,pn aaa popf ss and mov and mov aaa mov sub fnstsw sbb ljmp sti aas mov outsl (bad) mov ds mov cmp pop jne insb out sub loope stc imul cmp (bad) out movsb mov mov mov mov fxch pop (bad) (bad) (bad) jmp and in jae xchg inc scas pop inc mov cltd jle es xor and jb cmp (bad) (bad) decl jg not sbbl lahf imull sbb stc jo out cmp movsb imul iret sahf xchg lds mov insb xchg and or mov (bad) jmp mov xor or jg decb les mov andl push xchg cwtl stos (bad) (bad) (bad) stc into aam dec (bad) fcompl xchg jl pop inc inc cmp (bad) or js adc jmp adc jecxz pop fnstcw sub (bad) (bad) mov pop push push and and mov icebp mov or scas movsl lock (bad) (bad) ljmp adc repz adc mov popa outsb call inc push cmp ret sbb jne mov (bad) sbb push adc (bad) push call inc inc and cmp sbb jecxz sub ja add sbb (bad) (bad) (bad) dec xlat cltd jno cmpsb xchg je pusha pop test sbb add ret xchg aaa test mov and xchg mov xchg shlb xlat imul arpl out add imul repz jo daa orb pop mov jg imul jnp leave inc jge,pt mov out inc dec dec mov mov out repz mov add dec repz aam repnz dec mov sub test fsts aas mov mov pop test mov (bad) (bad) (bad) ljmp hlt cmc dec sub test push add gs or (bad) pop fbld push ret jbe mov in (bad) (bad) decl jno shl and mov sbb negl xchg sub inc cld pop les mov sbb (bad) (bad) lcall (bad) mov pop adc rcrl or insb jae mov fcom (bad) (bad) (bad) mov sbb mov mov adc or shr enter (bad) cs (bad) (bad) movsl fimul cmp stc sub mov lods lahf dec fwait rorb sbb fcomps (bad) adc ss pop push pop (bad) lea call mov push xchg data16 push loop (bad) movsl cmpsl jle (bad) mov or xor dec mov bnd testb leave lcall dec cli inc out repz stos jp sbb (bad) (bad) (bad) push into or jb xor pop out mov sub or dec pop call mov mov xchg jbe xor lret push imul mov or xor sar inc in add add cmpsb push test (bad) (bad) pushl inc mov lods in cmc jb xchg lea jmp xchg nop test xor (bad) (bad) call fiadd add in cld mov push adcl mov ds loope fildl loopne xchg mov aam sub dec (bad) js mov mov test cld ljmp mov jnp ror ljmp mov dec cmc dec jecxz,pt mov mov (bad) decl mov adc int3 loop int mov (bad) mov dec xchg (bad) (bad) (bad) fisttp iret xchg pop cmpsl repz dec mov xchg push cltd es fnstenv (bad) ljmp jae jae rcl mov mov call pop push mov (bad) lcall cmp inc xchg shll mov jge xlat ret pop shll aad inc cld add lcall mov je cmp mov (bad) (bad) call nop pop or cmc imul adc push mov pop sbb inc loopne mov outsl cmp jge or push xchg jnp xchg lods pop xchg (bad) xchg (bad) ja mov loop mov (bad) call dec inc lods or mov xor outsb arpl push dec mov dec (bad) lcall lods (bad) and cmc cmc shl dec sbb xchg insb fbld fwait clc daa (bad) (bad) (bad) (bad) jp or jb and in in push xchg lcall leave out mov xchg ja or inc xor mov (bad) (bad) (bad) js nop cs and pop cmpsl fildll or xchg mov ljmp jns push xchg lahf inc ret and push fwait rorl (bad) jae pushf cmp dec mov mov jle dec pop hlt lret popf xchg adc fidiv inc pop call clc inc ret xchg insb js pop pop sbb das (bad) xchg je xchg clc (bad) call and push mov stos inc xchg or scas xchg sar dec (bad) decl int js pop push mov bound inc andl stos xor call scas aam mov ret sarb push push (bad) bound add movsb push cltd cmp ffree (bad) (bad) inc xchg lahf sub pop out subl frstor (bad) dec sbb lcall xchg jg pusha repnz fsubrl mov xor iret subl mov mov or mov (bad) call lods loop pop inc push mov inc mov cwtl xchg repnz sub pop xor fcomi xchg mov roll adc lret add (bad) (bad) ljmp mov (bad) mov mov xor mov add in aas in movsl scas jg inc cld add jo lods ds sbb sti (bad) mov jo xor arpl (bad) sti mov fs cmp (bad) mull jge pop arpl jg and test jecxz lcall pop icebp dec (bad) (bad) (bad) decl fistpll test testl mov xchg movb inc cmp jne (bad) (bad) (bad) decl mov (bad) mull lahf insb dec test push ljmp mov jno int out or (bad) (bad) ljmp in push call enter mov push fsub mov dec dec pop fdivl (bad) sbb (bad) call divb pop dec inc pusha sub xchg add dec imul push push or (bad) (bad) incl mov outsb popa add jne (bad) xor aam test bound (bad) (bad) js in es or fcom push cmp hlt dec xlat mov ljmp mov add stc lcall js aam icebp pop cltd and mov dec jmp bound mov loop ss fnstsw imul jg inc std mov jbe,pt xor (bad) (bad) (bad) jmp mov popf sbb je,pn (bad) fstpt pmaddwd jbe arpl in lods inc out (bad) adc icebp (bad) ljmp cmp sub cmpsb adc in (bad) clc in cmc popa notl js lds (bad) fcomip dec mov dec sbb out mov xchg int test ret push cld (bad) adc xchg decl (bad) incl jle sub in (bad) (bad) jnp inc push mov mov loope pushl fldt push xor (bad) mov jp lds decl cld xchg jns dec cwtl mov cmp push cmp jg jl pop jne mov jmp sub xchg scas iret pop out (bad) (bad) mov ja into lahf and jmp sub (bad) (bad) (bad) ljmp in mov popf add add mov jo stos push inc push shll ror lahf xchg cmp xchg lds or test (bad) scas adc dec or stos es sbb idiv (bad) (bad) incl int ret jp pop int3 and bound inc xchg inc loope xlat scas xor fsubrs push (bad) (bad) (bad) jmp div mov sub (bad) push nop orl push xchg iret xchg mov sbb (bad) (bad) incl jg test xchg (bad) scas fistl sti inc mov rcll mov jp pop mov fstpl js sar lock testb mov outsl sub mov pop mov (bad) (bad) (bad) stc mov test popf repz jae (bad) std ss lret pop dec cmp push pop sti stos clc (bad) jg jmp lret add mov (bad) or inc clc push mov (bad) (bad) (bad) inc cltd (bad) lret mov ret push dec ja push shl or mov sub sub or les mov sub nop or push pop jne (bad) (bad) push xor call bound pusha jnp add outsb push adc mov ljmp adc pop orl (bad) (bad) jmp sub hlt pop (bad) (bad) xor mov insl mov jbe jbe jg lock das adc mov popf cltd repz xor fwait (bad) (bad) (bad) jmp shrb inc movsb jnp xor int mov add and xor lods ss aad sub (bad) (bad) lcall in mov mov jecxz cwtl movsb adc mov outsb and jne sub aaa je lea mov inc xor push xchg add (bad) call jo mov adc (bad) fisubrl sbb pop adc addr16 cmp (bad) incl mov push add xchg adc mov (bad) dec mov std pop fs movsb add mov fcoml jne (bad) lcall daa in fmull cld iret loope icebp mov xorb (bad) fild nop (bad) jl cmpsb outsl cli pop cs cs out outsb lahf jmp loope das lret adc push jl pop add xchg (bad) or pop out sub push mov cli adc dec add cmp push adc adc lret int or (bad) js push nop push rcrb jg (bad) (bad) mov mov push in push ds inc push movb sub dec (bad) jecxz and loop mov pop icebp lcall xor pop cltd es (bad) lcall sbb scas (bad) mov in data16 inc sbb (bad) and (bad) cmp insl xor (bad) (bad) (bad) jl xchg add jnp jne cld sbb out je popf into into (bad) mov sbb shlb (bad) call xchg cmc jmp add cld adc (bad) and mov sahf andl sbb push adc cld sub clc ror daa xabort lcall (bad) dec cmc add or xor add lcall add add test sub inc mov mov adc out cli ljmp movsb jg add ljmp push dec push or pop sahf jge movsb aad (bad) (bad) incl insb int cmc sub jno icebp cli xor xchg stc test fidiv cmp addr16 add pop jg push inc cltd dec ds sbb aas stos mov add jge and (bad) sahf dec lcall sahf (bad) pop sti sbb (bad) lcall xor sahf es xchg ficom dec cmp ret cmp jp lock movsb or (bad) cmp sti notl pop mov lret icebp (bad) fmulp cmpsl fidivrl (bad) loopne sub pop inc xor mov mov lcall mov cli mov push call cld dec cmc arpl push lahf or insl stos (bad) (bad) lcall push lods lods push gs mov fcomps mov (bad) lcall push xchg sub pusha add cmp add lahf sbb leave test (bad) jmp jae pop and add add xor (bad) mov call (bad) or pop sbb scas fdivr (bad) pushl xchg fidivrl xor xor in jg sub test mov push (bad) (bad) (bad) (bad) fmul inc cmc out shrl mov xchg scas xchg cmp or outsl lock int mov decl ret and xchg insl xchg adc jg lcall and pop lods test lods test xor (bad) (bad) out pusha test hlt dec inc pushf and and lods pop dec add (bad) cltd xchg add mov imul sbb adcl or mov lcall fnstcw lds ds clc out loop les lods repz popf sbb loopne movsl sub loopne sub (bad) int3 leave aam cmpsb (bad) ljmp rolb clc repz (bad) (bad) (bad) ljmp sbb mov mov je inc outsl dec and xor xlat mov xchg sahf stos push cltd stc jge (bad) (bad) call (bad) repz xchg mov je cmp dec push lret in stc (bad) (bad) (bad) inc dec loope fs dec je arpl out ljmp lret push add (bad) (bad) (bad) inc jge jp nop lock dec lret push pop pop sbb fist or push xchg mov cs (bad) (bad) (bad) in mov test jg xchg mov pop imul int push sbb (bad) (bad) jg mov mov fucomp pushf pop jae mov xchg sub das sar xchg iret insl aas mov test lcall push (bad) (bad) (bad) pushl sub mov popf or push sbb out outsb neg (bad) ja cmp (bad) (bad) (bad) (bad) mov loope bound and jg test lahf in add aas (bad) (bad) mov push or mov inc push push out (bad) jecxz and in test (bad) lcall mov int in cmp in scas mov in sbb xor mov clc mov inc lds cmpsb dec add aad xchg and mov mov out sbb (bad) (bad) jmp lahf add movl adc push mov sbb (bad) mov or sub lahf pop test pop pop xor lret incl push dec jl ljmp add andl (bad) mov and sarl pushf call int3 or test jecxz dec cmp je (bad) (bad) (bad) dec add out fs mov sbb fsub rorb (bad) (bad) (bad) ljmp ljmp add movsl or pop xlat repnz in shlb flds mov testl adc xchg mov sarl call pushl ds (bad) aas lret (bad) ljmp add movl mov out (bad) pusha and or (bad) (bad) (bad) cli bound inc inc movsl movsl ror ror push cmp fnstsw jnp fdivrp mov (bad) (bad) (bad) jmp (bad) jns adc cmpsb sbb adc imul adc js push pop cli mov or insl je cmc and orb incl sbb mov repz pop jmp out imul xchg mov movsl mov movsl push add popf (bad) fistpl push jp enter out mov loop sbb mov loop ljmp mov int3 (bad) (bad) mov cmc xchg mov or dec jp (bad) (bad) call mov mov outsl mov and (bad) jae sub jae or (bad) (bad) (bad) (bad) incl lods (bad) sbb adc cs adc scas mov not adc hlt movsl xchg lock pop daa push ljmp imul ds aad mov pop pop cli sbb pop push ret std (bad) incl jge xchg or lock adc das jg mov jmp movb orb repz push andl cmp push (bad) (bad) (bad) (bad) stc inc cmp ror fist test fdivl jmp sbb cltd adc push xchg clc pushl inc sbb jno iret add (bad) fcomip jmp add mov scas daa cli xchg andb push incb push xchg insl xchg daa lds or mov push mull sbb or cmp dec cli (bad) dec sar (bad) decl mov repz dec pop push add mov das inc push ss xchg in pop in jo inc cld (bad) (bad) incl push test and aad lds fildll pop pop nop das lahf xchg push jmp outsl vpshufd mov add popa lret das and call sbb jecxz adc (bad) nop and ljmp inc adcl pop cs stc aad add jecxz fwait push inc loope dec mov push (bad) (bad) ljmp mov fs jmp stos mov popf push adc fs imul xchg roll leave dec notl mov inc xchg mov (bad) pushf pushf mov (bad) (bad) (bad) pushl arpl pop aaa and push xchg push push or fisttpl int dec adc cli (bad) (bad) (bad) out or mov test cmp mov fwait roll xchg rolb mov (bad) ljmp ljmp lods cwtl adc lods dec mov push (bad) mov push je cmc arpl pop xor mov mov (bad) (bad) (bad) mov sti sub cmp pop ret (bad) imul pusha jge and jne push nop pop mov ret mov aaa mov (bad) popf dec sbb imul (bad) call mov (bad) (bad) (bad) ljmp lret sbb stos push in push out mov es fidiv shll jnp (bad) (bad) (bad) cmp inc sbb jge pop sub out arpl xchg push push jl add (bad) dec mov pushf das mov scas (bad) jg add jmp sbb fldl xchg sbb lcall cmp in (bad) mov mov js mov out push adc rorl scas clc (bad) call cmp push pop pop clc xchg mov sub push pop incl pop adc dec fsubrl (bad) incl xchg inc xchg bound push dec pop adc fidivr (bad) lcall or inc cmp clc in add pop fdivs movsl pop adc adc inc (bad) (bad) (bad) lcall sub push inc mov inc xor sbb outsl cmp push cmp imul mov mov test aas addl popa out mov inc inc fstp pop or lcall jmp sbb enter and pop jnp add and call or push mov jg call lret and data16 repnz jmp mov mov js in ret insb divl jg jg dec in and pusha pop mov orb xor adc sub sub (bad) (bad) (bad) jle outsl add (bad) push mov add aam aas mov mov push scas fcoml (bad) (bad) incl sahf lcall xor pop int3 add xor dec add movsb out fs and jo mov mov in mov pop cmc push dec incl roll cs pop (bad) fcoms icebp (bad) decl pusha dec and (bad) out rorb and es (bad) (bad) (bad) inc xor repnz xor inc das dec fdivs enter pop ja fldcw repz jne mov (bad) (bad) ljmp adc out sbb loop or call jmp (bad) (bad) (bad) (bad) mov dec vandps and mov out xchg mov push cmp add ljmp clc mov enter xor cs mov push mov inc jne (bad) (bad) call jbe mov es js and push jno test xchg imul xchg fwait (bad) fmuls xor (bad) dec mov sbb cmpsb sub mov cmp (bad) call movsb movsl or data16 (bad) jmp fidiv (bad) mov andb cmc icebp pop mov inc mov (bad) (bad) mov cltd lods movsl push out xor fcmovnbe push dec add (bad) incl ds add std xchg dec adc rcrb mov and or mov add sub ss push add shrl (bad) lcall (bad) rep movsb orl xor iret mov mov iret (bad) (bad) (bad) decl push or idivl int3 insl arpl addr16 insb ror xlat jns stos repnz or test mov popf inc lods (bad) (bad) (bad) decl movsl push jbe xchg ficomp aaa int3 and ret aaa out (bad) into aas lcall and jne (bad) (bad) (bad) jp cmp sub movsl sub jl push in xchg sub daa std pushf or js test (bad) mov fs xor mov sti bound lods xchg cltd popa pop cltd mov dec (bad) (bad) (bad) call sbb repnz les fsts jnp scas mov add iret xchg loopne cli (bad) jmp in (bad) fidiv or mov xchg pop fildl inc ds pop push cs pop mov xchg xlat call aaa ds int3 sar pop scas add scas xchg cmp xor sub in sar (bad) incl lea xchg jecxz xchg add xor mov dec dec out jbe fwait bound andl (bad) jmp cs fdivp movsb insl fs mov and loop (bad) call xor push jecxz dec mov sahf stc lcall mov lcall (bad) out add bound scas jo data16 stc push cld (bad) (bad) cld or je push pop data16 inc mov xlat sahf shlb sub test pop and jb dec add addr16 idivb fwait push (bad) jmp fisubr (bad) push jb dec jns and cmpsl sbb mov mov les std adc mov mov repz das int push and ss outsb ret pushf mov xchg fsubr (bad) (bad) jmp inc cmpsb inc dec notl jnp mov (bad) fnstsw ss hlt xchg ja cmp divl mov mov fcoms mov sub cmc (bad) (bad) (bad) decl jp cld in mov and and inc push jae mov dec enter mov (bad) jg xor fwait aas jns mov push jne xchg adc xchg mov aam aad cld mov mov cmp push mov jg add and mov sub inc inc sub (bad) dec adc add das xor pop xor dec mov icebp pop (bad) (bad) ljmp scas repnz dec leave mov flds jmp (bad) (bad) (bad) incl xchg mov jp mov adc mov sbb adc mov and add push sar lret push fidivl cld (bad) repnz (bad) (bad) call push (bad) sub mov sub cmp xchg scas cli (bad) incl cltd cmp cmp imul cmp movsl rolb lcall dec adcl out mov paddsw (bad) (bad) decl ds sbb ss mov pop mov mov fnstsw int (bad) ljmp dec sahf jbe fistpl arpl pop jge in xor push int push jg push xchg (bad) cmp dec loopne (bad) (bad) (bad) (bad) mov adcl add or sub (bad) cli gs mov lcall sub mov gs jl ficompl cmpsl sbb insl push jle lret (bad) ljmp fisubrl xor repnz mov push test xchg (bad) xor pop jmp (bad) (bad) decl push pop sub pop xchg lods repz outsl aaa dec inc cmpl dec mov inc fwait add daa and pop rcr add cwtl (bad) (bad) (bad) (bad) out sub lock mov mov orl sbb je mov fildll mov sbb cld aad jge jg test (bad) (bad) mov inc pop sbb call push pop xlat (bad) xor test roll pop or aad sub sbbl mov sub mov pop into add fcmovb scas test cs inc mov pop enter and mov mov cwtl shr mov pop addl cli stos push into clc (bad) ljmp mov pop or in xor inc jnp fnstsw pop out xchg (bad) testb push fstpl scas push mov sahf inc mov and dec outsl sub insl std (bad) decl movb repnz decb mov jg mov sbb inc push mov jbe mov mov (bad) cmc dec mulb imul lea fbstp fstl inc outsl outsb into enter fistl repnz loopne incl cmc pop sub mov xor ret ss inc add gs sub stos push mov (bad) (bad) js rcl imul cli dec sahf cmp jge or jnp (bad) outsl mov jge in rclb cld push ds gs test xor dec loope (bad) (bad) mov addr16 push pop gs call dec dec xor mov stos mov jb adc pop fwait movsl mov (bad) (bad) xor (bad) cmp and repnz pop jbe jp or (bad) (bad) mov ljmp pushf insl xor push push out mov (bad) (bad) (bad) incl ja mov lock sub sub daa jl mov imul shl out (bad) (bad) (bad) (bad) mov push es aaa idiv jecxz adc scas mov addr16 (bad) (bad) (bad) decl pop mov (bad) sbb mov jl cmpsl and add pop std (bad) decl mov add mov lcall mov xlat cmpsb (bad) pop inc dec sub mov pop test mov jl das dec xchg popf scas and add sub std mov imul and jg mov xor mov xchg imul (bad) fcomip (bad) cmp mov mov test xchg sub push sti rolb lea ds inc scas dec sbb sbb mov jne lahf (bad) (bad) mov dec fnsave popf ret xor scas in xchg (bad) lcall test dec ficom jno cli cltd xchg xchg ja scas add mov or jg add stos (bad) ljmp outsl mov push hlt daa int in data16 shl cmp push or ljmp (bad) out scas fmull popl sub sub jae xchg ficoml bound adc loopne mov and arpl adc sub test scas pop stos fs cmp push xor les out sub jne leave (bad) sbb (bad) imull (bad) jecxz or (bad) incl adc mov mov (bad) jo pop add jp push cld (bad) mov sub push lods das lods adc xchg popa sub mov fldcw push nop js inc xor cmp add pop sub fidiv fldcw les (bad) lret clc fcomip test test or hlt (bad) (bad) jmp push xchg (bad) in sbb inc adc or ret mov das and ljmp mov sub jecxz pusha std decl je jp insl leave add sbb jg dec lds popa mov enter add das mov das in mov js aam xchg std out jg incl jo mov inc xor xchg insb adc adc xchg out xchg sbb (bad) (bad) dec sarb loope cld dec enter ret repz loopne clc fimul add (bad) incl xlat jmp fs std jecxz fstps lret ljmp pushf (bad) (bad) (bad) call cs xchg rclb test jbe es test add rorb pop fnop sbb test pusha or (bad) ljmp push jle loopne dec leave xor mov ret push (bad) jmp into jmp aaa (bad) (bad) decl dec (bad) cmpsl daa jb xchg sub push mov int cli enter (bad) (bad) lcall (bad) loopne ja pop mov out imul lock clc mov push push push cmp (bad) jg inc cmc dec insl inc and ds enter pop (bad) in fidivr xchg pop loop (bad) (bad) (bad) jl mov scas lcall push iret xor mov sub mov leave rclb ret pop (bad) (bad) (bad) jmp sbb out cld sub in cmp dec cmp repnz xchg jae insl aaa mov (bad) (bad) pushl arpl xchg out int out mov pop mov insl adc push andl pop hlt call sbb arpl sbb xchg jne popl mov and (bad) mov adc and mov jns mov aam pop dec (bad) (bad) incl add test jmp sarl insb mov insl pushl (bad) in mov mov pop jg test adc (bad) jmp add adc fldl pop repz adcl sbb (bad) (bad) mov (bad) cmp pop shrb pop mov mov (bad) (bad) (bad) call hlt ficomp loopne xlat cmp scas push loop loope (bad) ret add into jg lret imul mov or test jmp (bad) (bad) lcall sub nop lret testb sti xchg faddp ljmp lods jg popa cld mov adc sbb xor dec lahf and (bad) fcomip push add pop fcoms daa jmp cmp mov mov cmp (bad) (bad) (bad) (bad) js pop add pop popf (bad) jnp mov jge scas adc xchg dec add mov dec xchg adc (bad) (bad) call mov (bad) lods add inc sbb loopne mov out ljmp or (bad) mov ret xor dec out les lret lods nop mov (bad) (bad) (bad) incl lea addr16 pop cmp push mov adc mov cmpb (bad) jmp mov in mov mov jecxz pop jae out nop cmp (bad) lcall push jno mov sbb icebp sub mov pop cmp es add sarb cmpsl (bad) (bad) pushl push add into aad mov call xor pop pop mov in (bad) (bad) (bad) (bad) jnp pop dec js sbb add mov nop imul lret xchg push cmp in (bad) (bad) (bad) incl mov jns andl icebp dec sbb lahf call outsl lret pop inc mov pop rol jmp pop or fdivrs (bad) incl lods pusha inc xchg xchg push and shrl pop in hlt jne (bad) outsl clc (bad) dec adc insl dec test or adc in test inc fmull push gs (bad) incl push in dec sub mov xchg aas pop aam jno add (bad) lcall jge,pt lods and xchg test adc or repnz fcoml push add fisttpl mov mov and jge cmp test ret ljmp jb int xchg repz pop push mov iret ljmp sarb add (bad) repnz mov pop lcall test (bad) mov (bad) cmpsb pop clc roll in (bad) jmp lret adc mov (bad) cli or adc add sub ljmp cli incl and dec fisubr mov xchg sti in stos jecxz xchg sar sbb or hlt stos push rcrb js fimul mov sbb lds add lds (bad) (bad) (bad) lcall in inc mov mov rclb adc daa shlb test mov mov (bad) (bad) ljmp jge inc subb push mov sub and adc mov aam ret (bad) pushl cmp jbe mov and push not (bad) (bad) (bad) dec push mull mov push jne add cli pop dec repz int3 push sarl movb (bad) (bad) dec ds cmp inc cmp divl fidivrl cs dec shrl std dec les add repz dec ds jp stos outsb pusha dec hlt scas mov aaa dec mov cmp ljmp psrlw ds cmp popa std call xor sub xor add ret push lea addb popf jecxz outsl cs pushf js xchg fcomps cld (bad) (bad) dec pop cmp mov in popa and in push aaa and ljmp (bad) dec arpl push push lcall sub jl add push xor das mov fistpll (bad) int3 popf cmp popa cmp (bad) (bad) (bad) (bad) jge push mov and push test je fbld push sub or cwtl lods pop mov ja and pop push xchg ja rcrb imul dec mov add cld fdivr sub dec in (bad) fistl dec jns stos das cli (bad) call inc pop je icebp inc sbb jo dec cmpsb cli lahf (bad) cmc cmpb cli sub xchg aaa jne xchg idiv (bad) (bad) in cmp cmpsl xchg (bad) repnz mov sub stos ret xchg test imul les cmpsl inc push jbe rorl in cwtl dec sbb jecxz ror mov psubb jmp sbbb movsl pop xor dec mov sub lcall and loop jnp gs gs or popf lock lcall adc cmp xchg decl lods sub out cld test pop lods sbb idivb pop mov (bad) (bad) (bad) call test mov push jae fisttpl pop movsl xchg mov inc repz push cmp cmpsb hlt decl mov test jg movsbl mov xor pusha push mov inc out xlat pop sub pop (bad) (bad) mov add scas test push push pusha xor cmc (bad) (bad) (bad) pushl add mov adc push and inc mov sub dec aas inc sbb ret inc movsl jp add sar push pop pop mov nop mov movsl pop jg call ds xor rcrb pop imul (bad) (bad) (bad) push into jbe,pt mov fdiv jmp dec add sbb fisttpl repz dec jmp idiv (bad) (bad) incl lods rorl sub jb sahf insb xorl push (bad) push mov jmp cmp daa hlt add pop dec inc sbb (bad) cmc fs mov stos pop (bad) (bad) (bad) jmp lcall je sub mov bound or cmp mov push lcall (bad) dec xorl mov mov in dec loope sete (bad) (bad) lcall inc lret mov mov sbb je in fbld dec or or shrb ds mov cli pop hlt ret mov inc or decl xchg mov test fadds dec mov outsb cmp add lcall jp cmp gs mov add imul mov mov movsl push in cmpsb xor out cmpsb push (bad) movsb pop lds cli data16 push mov xor js mov jbe mov mov fistp fsubrp mov lock (bad) ljmp aam push inc lods loope mov xchg clc cmpsb out sub xchg mov inc jo jbe,pn incl mov test xchg fstl (bad) incl and dec bnd xor push in rcll xchg out mov (bad) (bad) dec test push sub add stc and xchg pop mov cld loop lock mov or addr16 (bad) (bad) incl xor add pop sbb in divl aad and xor loopne adc fmul or inc enter dec pop add inc call outsb push push pop push std lret (bad) (bad) (bad) pushl mov sub repnz arpl test incl add sub sbb or stos out enter jmp sbb adc mov (bad) decl fisub cs push js daa add lcall (bad) ljmp add lcall jmp out fmuls xor hlt inc rsm arpl inc pop icebp (bad) call stos jge fwait shlb mov frstor lcall (bad) (bad) ljmp lcall sbb or fidivl xchg mov insb inc gs test imulb stos or dec and add repz adc pushf inc add repnz out (bad) (bad) (bad) (bad) cmp mov and add mov lock bound in je inc or inc push or (bad) cli or mov dec mov daa (bad) mov mov mov mov pop mov adc aad ja testl ljmp jb push sub pop sub or cmp mov cmpsb mov imul mov (bad) mov enter lock or sbb enter lret int frstor and mov call outsb jmp out mov push jge sub jb cwtl (bad) adc (bad) jmp mov dec mov mov js jns inc cmp fsubs loopne jne aas xchg add xor out test mov and insb mov jmp sbb loope fist repnz mov loopne xlat push xchg push jmp jl scas and cmp clc mov aad adc (bad) imul out stc mov inc cmp imul popa rorl and inc repnz incl arpl int mov lods mov (bad) inc sub pop iret ror inc dec out pop sbb ljmp addr16 stos xor dec adc repz mov in sbb (bad) (bad) call in cli jb hlt mov addr16 aaa mov mov xor jne inc js mov (bad) fnop lea add imul jbe cmp repnz (bad) (bad) (bad) incl les addr16 shr mov and ss insb or mov fwait add add mov inc mov (bad) (bad) (bad) jl xor mov xchg ljmp cmc cli test ret lods xchg cmp (bad) jmp lea bts test fwait lods xor insl fsubs iret fwait outsb inc adc xlat fdivr (bad) (bad) lcall in pop arpl rclb leave out punpckhwd ljmp mov push stos mov inc xor das mov push call (bad) pushl arpl pop js adc mov mov call movsl pop pop pop repnz (bad) (bad) incl into mov add add push call adc cli (bad) mov out clc pushl sbb (bad) ljmp outsl dec cmp add test nop dec jg and push jg jb sti mov stos sbb add cmpsl repz inc imull (bad) leave or jo push (bad) cmp ds mov idivb outsl xchg add outsl sar add pop int push insl cltd sti xlat sub fmuls bound shrl outsl jno push daa and orb in push jecxz mov mov adc sbb addr16 or and outsl xchg subb les jae (bad) ljmp mov push aad outsb or test in inc or jns (bad) (bad) cmp cmp or inc sbb into mov mov push loopne repnz (bad) decl xchg cmpsb xchg aaa cmp mov xor cltd mov daa or xor call out push adc daa jae jg aas cmpsl mov cwtl fisubrl lret loopne jg mov jno call xchg les test fisubr pop sahf mov ljmp (bad) ss adc (bad) (bad) (bad) pushl subb aas mov clc add push pushl repz cmp jp std (bad) (bad) (bad) (bad) in mov sub test aas inc add inc in repnz test xor in test (bad) (bad) (bad) (bad) ffreep jnp rorl es mov pop dec testl call mov lcall loopne repnz pop xrelease repz xchg xor push int (bad) ljmp ds daa mov loopne push int out cmp add (bad) (bad) (bad) jmp push add mov pop sub jmp xor lods lahf jo jecxz ljmp cli call inc mov cmpsl out loopne add shlb pop rcrl pop gs jmp fcoml pop sbb sub mov sbb push fs push fisttpl cwtl mov pop ret cmp cld (bad) (bad) lcall insl or push lcall rolb iret test mov add xchg xor cmpsb mov mov xor int3 (bad) inc ret (bad) mov sub jecxz dec and imul adc cmc dec jge mov mov in add or jns (bad) imul inc add btl add cmp (bad) (bad) (bad) call sbb ret ja cmp call fmul jno imulb shl cmpsl (bad) (bad) (bad) lcall bound add push mov in adc nop out addr16 or xchg das (bad) adc mov pop push lahf call mov xchg mov xor cmc (bad) ljmp in and xchg loope rcr pop pop hlt call push jo das pop sahf xor dec and imul pushl test jmp xor cmc cmpsl push mov std pop jmp inc sub incl dec pop or (bad) xor scas adc sti rcl outsb push inc sbb popa jge,pt inc cmp xchg push (bad) jae test sub icebp (bad) (bad) call shrb and inc js sbb sbb stc pop int3 push or inc in (bad) ljmp insl and (bad) data16 lcall push std (bad) dec mov xor fwait imul adc add adc jp nop dec mov in (bad) inc mov push xchg jl jge out out gs or adc gs cld (bad) lcall xchg cmc arpl xchg push lcall cwtl jp (bad) mov adc hlt (bad) incl lahf stc dec test or ja insb call inc lcall or in inc std mov (bad) (bad) jmp iret sbb lock mov ss push int3 push (bad) and test clc pop lock aas and sub scas rcr sbb out mov (bad) ljmp cmp jge lea aam imul inc pop push (bad) (bad) (bad) decl adc jne data16 ss jae out sub mov scas sub xchg push out mov test (bad) (bad) push jbe sub and shll dec inc insl movsb or mov dec push cmpsl cmp mov (bad) (bad) (bad) jg mov into test dec call and fistpll jb ds mov cmp rorb (bad) jmp leave shlb xor flds xchg je sti mov arpl stos mov (bad) hlt icebp jge add pop pop mov fucomip jbe divb cmc mov lock scas jecxz or clc (bad) dec (bad) xchg fdiv pop mov (bad) ljmp jg add and cld rclb das fs cmp (bad) jl inc (bad) cmpsb (bad) (bad) (bad) call cmp jg mov adc mov sub mov adc push xchg inc and aaa cld gs inc pop (bad) jp jg jns out lods popf jbe add js pop hlt (bad) (bad) pushl jp push es xchg xchg sub subl stos adc xchg mov (bad) ljmp mov adc in jp popf sub rcl dec pop mov ds imul mov jg int je mov repnz lret jno int (bad) jae and adc das gs (bad) (bad) (bad) jmp div addr16 iret shrl lea fdiv or test pop xchg sub lods xchg push pop push (bad) (bad) (bad) (bad) ds repnz lahf stos xor scas jle repz mov mov sub push mov insl mov dec sub mov and in adc aam outsl (bad) (bad) ljmp pop and push mov pop int3 adc movsl pusha mov (bad) (bad) (bad) fildll int3 js sbb inc (bad) or xchg mov out jmp add (bad) (bad) jmp or in lret adc lods cltd clc and cli mov adc (bad) inc sti and cmc xchg daa outsl bound nop fdivs arpl jge or (bad) test les pop (bad) (bad) ljmp (bad) xchg out cmp sti (bad) cli cmc inc fimull aaa insb mov fisttpll les cld (bad) push inc movsb mov lock ds test stc hlt movsb (bad) (bad) jg mov (bad) and inc mov rcl sub sbb aaa pop (bad) sbb outsb sbb ds jg (bad) call mov push xchg and push dec bswap mov sbb (bad) (bad) decl test fmul enter (bad) lods test dec xchg mov cmp (bad) ljmp sub repz mov (bad) xchg mov fwait int3 lods lcall fldln2 jmp add (bad) (bad) (bad) mov pop mov cmpsb cmp repz aam leave jb daa cmp call (bad) (bad) mov cmp sbb dec ja rcrb pushf lock mov add (bad) jmp inc (bad) popf add (bad) in fsubr aam and in test repnz idivb in dec xor add mov or mov into ljmp test inc dec jmp push ret (bad) dec test pop cs incl daa shl and push outsl add mov jae,pn push cmp cltd cmp (bad) (bad) (bad) decl aam jge mov inc cmp and jle sbb sbb clc fbld mov in rorl ljmp mov cmp pop movsb ljmp incl mov mov sbb push xchg ret (bad) ja arpl lods push lcall push bound and stos push push lods or push iret out call jne mov call dec addr16 sbb ret xor inc xchg stos dec add fild (bad) sbb movsb je jo dec sub (bad) incl cli movsl adc xchg out fs pop fistpl lahf push andl cmp (bad) pushl ds (bad) jle and adc adc lods push pop xor cvtps2pi insl push loop pop scas test loope mov pop mov xor (bad) (bad) jg (bad) mov (bad) mov mov adc jo scas lods or hlt cmpsl pop (bad) (bad) (bad) pushl sarl sahf xor rcrl jecxz pop cmp test pop add push es (bad) (bad) (bad) decl dec pop cmp mov add xor jle (bad) daa sub ljmp sub cli (bad) ljmp aam push popa outsb pop inc mov push inc imul jbe dec inc xor sti sar (bad) ljmp cmp pop mov stos lahf lcall add xchg fcmovb out and decl add loopne aad fstl mov loope (bad) incl fidiv pop jns lods push mov out mov push lret mov mov mov mov lods fidiv in inc mov cld stc adc (bad) (bad) (bad) pushl adc loopne enter cmpsl mov adcl inc push inc mov (bad) jg push mov out xchg loope,pt push mov or dec pusha (bad) and (bad) inc mov repnz mov sbb and lcall sahf (bad) repnz in inc dec mov lea (bad) xor gs jae jle push lock (bad) call lods insl cwtl cmp lods es mov jbe push (bad) sbb les fistpl xchg xchg push popf ret dec scas xchg mov or leave and dec sar xchg add ds les jg add push jo mov adc pop pusha (bad) (bad) (bad) jmp sti subl sar ja cwtl sbb aam mov clc iret (bad) into lods (bad) (bad) (bad) (bad) jmp mov inc subl stc aam sbb fwait repnz cmp aas in push hlt decl push xchg arpl stos push inc jo outsl clc (bad) (bad) fisttp xchg mov in ret inc xor jg scas pop cs sbb in mov dec inc fcompp jno adc add iret jge jg inc mov fidivr (bad) (bad) (bad) decl mov add shlb pop push xchg enter dec adc ds add fcomp cmc (bad) decl xor out jne mov lret jns xchg cmpsb cmc inc xchg sub push and xchg popa sub (bad) fiadd (bad) out jbe test mov fcomps push (bad) (bad) (bad) ljmp push add orl jmp pop outsb push adc ljmp mov jp daa xor xchg pop inc (bad) (bad) (bad) dec mov and cs in and xor pop iret jne jbe jecxz leave testl (bad) jmp loop fucomp fist jne mov cli decl mov mov xor fisub (bad) xor scas push pusha jne mov mov call pop mov je leave adc divl addl (bad) jg mov xchg cmp test int3 xchg sbb aam (bad) mov ljmp xchg movsl pop mov or xchg xor or (bad) sbb out scas cmp sarl mov outsl movsl add mov adc add cmp cli mov push add mov (bad) inc pop jg ret js (bad) int3 jl (bad) fsubrl push enter sub mov jno in mov adc lcall lret rcrl and (bad) (bad) mov jecxz cmp ficomp mov push rorb ljmp mov adc int3 mov cmp (bad) adc push (bad) (bad) pushl ds adc pop push cld lock xor rorb adc jno jno mov adc aad cmp (bad) mov jmp xchg push mov ffree jl rcrl mov add inc (bad) jg inc ficom push cmp imull cmpsl sub (bad) (bad) sbb sbb adc in mov das sbb addr16 fistpl icebp push sub (bad) (bad) incl es gs cwtl dec mov addr16 adc shrb mov in cli test mov idiv (bad) (bad) (bad) mov scas mov or jmp mov or lcall (bad) (bad) call fsubrs xchg adc lret inc test test xchg cmp lods in or mov pop sub xchg lahf dec and (bad) fmul jne or or cmpb lcall pop xlat imull inc fcompl sbb shr (bad) mov mov (bad) (bad) (bad) jge test icebp mov test pop push fiadd adc jmp or pop add lea pushf dec ja sahf jnp pop cmp push fwait (bad) dec jo jl (bad) jb jmp aad addr16 and adc push clc pop in lock test ljmp inc imul mov int3 fdivl adc xchg test xchg cli xchg or stc mov addr16 add push (bad) decl mov xor cmp pop mov cmp sub std loop aas movsl ds and (bad) jg scas and (bad) loopne dec xor inc dec inc mov mov mov lahf fs mov add sub lock ret outsl enter lock sub pop imul aas pop int mov stos loope mov adc std (bad) (bad) fild in gs or add push in mov xchg dec push (bad) (bad) (bad) dec (bad) int3 dec mov mov das ds sub xor pusha (bad) cmp adcl add ja cmp (bad) pushl aaa insb push cmp pop leave cmp cs jb jg,pt ds push push scas dec inc push ds xchg clc push mov push mov clc mov (bad) lock std pop (bad) divb pop lcall (bad) (bad) jmp cmp nop adc aaa or add fnsave jl movq adc (bad) fidivr dec and in or xor cmp add add jg pop test jecxz pop fstpt adc dec mov scas (bad) (bad) (bad) pushl addl inc jnp push jb xchg (bad) mov mov sti cmc add mov mov aas loop push sub push stc (bad) cmp ljmp and jmp (bad) jmp jns pop addl xchg scas mov (bad) (bad) lcall outsl rcrl mov movsl fdivs (bad) insl push lods sti (bad) (bad) (bad) ljmp cmp out rcrl xchg xchg je jecxz mov enter sbb gs int test jg inc sub cmp nop sbb adc add gs pop add (bad) (bad) (bad) inc cmp xchg xor fidivr xchg scas push pushf add inc inc (bad) call or rclb in jne push sub incl orl lea test sbb xor (bad) (bad) mov xor imul inc mov pop xchg outsb add popf (bad) out das lcall out int adc or and jl test cmovb (bad) (bad) (bad) ljmp pop lahf lcall mov arpl xor cs les fidivr std (bad) (bad) (bad) pushl add pop arpl cmpsb or add pop and gs imul pop test lods xlat ja ja cmp mov in fcompl movsl aas insl jg stos jmp pop pop fcmovnu xor mulb addr16 outsb mov inc xchg std (bad) (bad) pushl test pop cmp pop and mov mov jbe jbe dec sti mov jg or cmc push sarl jp dec or cmp std pop cmp test fwait push leave inc sbb xor sub (bad) ljmp adc mov sti add and xor hlt inc (bad) out addl adc dec stos aad (bad) lcall cmp mov pop fwait cmp adc xchg or call pushl fimull mov cmpsb xor jb or shrb repnz xor mov and out fidiv pop (bad) (bad) ljmp push popf add insl imul add pop repnz aas jecxz and pop jo cld jb mov cmp pushl lret imul or dec lret rolb (bad) jecxz inc xchg into lds jns ljmp nop icebp mov jae mov lret jo sbb adc (bad) call repz and (bad) inc mov xor pop xchg stos or orl (bad) (bad) fbld mov xchg dec (bad) adc add out jmp add ljmp pushl sub pop cmpsb aam test imul cmpsl push call mov (bad) (bad) (bad) jle or repz xchg xchg mov xchg xlat ss xchg pop and pop push pop sub into movsl push lahf and ret mov add mov cs paddusw pop lods mov jno dec hlt (bad) (bad) (bad) jl dec (bad) push push push (bad) out mov imul aas mov dec fimull inc mov test jge mov ljmp cli (bad) jns bound or inc mov mov dec fldl or inc (bad) or dec rclb adc incl notl sub inc cmp mov xchg dec movb fisttp push pop add adc xor push ljmp push int3 (bad) add fsts adc ja dec repnz stc mov test (bad) fidivrl pop out dec adc dec jmp ja lock xchg sbb and leave out jmp mov cli (bad) (bad) (bad) lcall xor (bad) dec mov and imulb cmp xor or fist jne (bad) (bad) pushl enter (bad) in cmp adc test sub cwtl stos mov into adc pushl dec (bad) test divl in cmpsl sub faddl or int and sbb mov lock in cmp mov mov pop cli btr cmp sar (bad) pushl sub js pop and cmp fdivs lds (bad) aas fcomps scas into mov lods mov pop lea jl xor (bad) (bad) (bad) (bad) fldcw dec orl (bad) jl pop out ja mov outsl (bad) mov cmpsb mov adc test sbb fcmovnb cmp insl jecxz fcom push stos (bad) fcomip jmp jb xor mov std inc dec pop mov push mov gs icebp loope mov gs (bad) (bad) decl jbe jno inc mov sub (bad) idivl push dec outsb sub mov (bad) (bad) (bad) incl fs rorl dec xor cltd scas push not xchg ds psubusb mov sub push pop js jne in sub repnz ret sub (bad) (bad) push nop or jo,pn inc add and test mov cltd daa lea (bad) (bad) (bad) jns out sbb mov mov add mov gs dec addr16 out pop dec incl mov movsb cmp xchg mov aam mov (bad) (bad) mov mov pusha xor pop cld (bad) ljmp ds xchg push mov jbe sti or lods xor arpl test movsl (bad) jg ja into leave xor xchg jle scas dec xchg mov jecxz in (bad) (bad) push insb add add fstl cmp mov xchg ljmp (bad) call mov mov into cmpsl dec xor add cli mov int3 fldcw cli (bad) incl mov aam pop cmp adc xor jno mov (bad) (bad) (bad) ljmp sbb lret (bad) sbb push jp stos and mov lahf pop jle cmpsl decl (bad) (bad) inc pop addr16 mov pop scas xchg dec dec xchg loope mov and push adc sub gs dec (bad) in movups scas movzbl fldenv sbb mov pop cmc (bad) fidivrl fistpll pop xor test mov sbb scas sbb (bad) (bad) (bad) decl test inc xchg lods lea cmp cwtl repnz out pop pop dec push mov dec push pop adc sbb cmc repz sti inc adc dec (bad) inc lods lret inc jl xchg push ljmp sbb imul call lea adcl mov leave lods sbb into adc mov nop (bad) xor (bad) (bad) call insl fdivs sub cmp stos fwait in popf in (bad) xor jp jp pop add dec jg (bad) call pop test xchg ss jnp enter xlat push lret mov (bad) pushl dec jmp enter cs adc adc push dec add clc fmull hlt jmp test lods and lret push scas mov jmp ljmp jo sti mov add cli jbe mov pop repnz lahf jle jb gs mov sub rcll mov push mov int3 sbb (bad) incl sub dec push popa into std subl push lret (bad) (bad) jp dec jle icebp mov or in cmp push push mov stos aad adc movsb aad jae imul cwtl adc mov or mov mov dec pushf addr16 (bad) (bad) out test lcall xchg add outsb pop divb sub fs (bad) (bad) (bad) decl sbb gs out stos (bad) mov lods pop insb push adc mov jmp (bad) (bad) (bad) jmp push inc jle imul pop jp sbb sbb xchg pop and (bad) (bad) pushl imul xlat je repz aad call ljmp clc inc cli inc mov loope (bad) push sbb ljmp (bad) cmp mov adcl cld add fcmovnbe arpl pop (bad) (bad) (bad) (bad) in loope cmp or ja loopne push cmp pusha iret int3 and sar ljmp (bad) ror in jb or loope mov xchg pop xchg out mov sarb adc lds loopne mov repz fiadd sbb ljmp jno sahf pusha movb mov mov dec mov mov stos push mov mov mov or insb int gs cmp cld mov lea add cld inc (bad) incl adc fwait cmp jp (bad) (bad) in (bad) sti xor xchg ljmp push xor out fdivl es dec add dec dec loope mov cli rcrb xchg dec popf xchg hlt call add mov arpl jecxz leave ljmp fstpt sbb stc int3 aas push cmp xor aam mov (bad) lcall pop shlb pop shrb bound out in test mov mov mov xchg mov push xor call xor call das cli jb (bad) (bad) ljmp xchg hlt jp jg pop cmp sub in jg ds pop cmpsb (bad) (bad) (bad) pushl rorb jg pop dec cmpsl add jge fsubs adc push push in add lock jmp pushl mov mov je mov stos mov (bad) (bad) jl xor sbb mov and mov fidivr dec outsl mov clc and fmul popw cmpsl data16 call sub imul mov loopne pop ds (bad) (bad) decl jecxz (bad) push outsl aam sti xchg inc inc sub ja shrb (bad) mov xchg sbb sub push out pop add (bad) mov sub push dec dec pop out adc lods movsb xchg popf sub cli xor ja jg mov loopne push fiadd or aas (bad) incl rcr push xchg mov xchg jmp fiadd lea ja (bad) incl fwait mov fistl ljmp lahf (bad) jno and mov and decl arpl repz lahf cmpsl pushf (bad) stos or mov into imul stos (bad) and push in in sahf cmp lods (bad) (bad) jmp and sub fidivr lea daa push cwtl pop jb jne pop jmp (bad) rorl (bad) lcall jb jg pop aas adc sbb ja sbb jns and cmpsb cld (bad) (bad) (bad) incl clc incl lods push je dec fs dec insl (bad) les sbb (bad) (bad) (bad) inc dec rolb into loopne dec push ficomp pop mov sub js ss call xchg call loopne ljmp xchg or xchg sarb test lahf adc inc mov add (bad) decl adc ret sub out dec lea test scas imul (bad) jg pop lea push into in mov ss pushf adc xchg decl jnp sub out pop bound inc into arpl flds cmp addr16 push je inc sbb dec cmpsl mov lcall pop adc arpl outsl je test xchg pop adc mov pop sub cmpsb in (bad) jg pop imull jnp push pop lock int push lret insl pop push hlt lods mov cld call and (bad) (bad) incl fiadd divl (bad) sti pop (bad) jno or jge mov in icebp or std (bad) (bad) decl and jbe popa test mov out pusha pop frstor sbb cli pop test ds jno (bad) (bad) ljmp cli loop sahf pop (bad) int3 jg sysexit movsb gs fistl cmp xchg jb ss mov in add fmul pop icebp sub testl cld cmpsb popf mov shl aam aas je mov (bad) jle sub sbb pop pop or ljmp add fcmove xchg mov ljmp sub rcrb fmul idiv (bad) (bad) incl repnz das xchg sbb and lcall aas mov push xor (bad) (bad) lcall push adc push sti fistp adc (bad) jae sbb lea pop scas cmp push jne loop pushf mov in leave xor dec (bad) dec inc push pop add (bad) (bad) mov pop movsl (bad) or xchg dec mov (bad) incl cmpl imul pop cwtl stos jmp inc cmp (bad) (bad) mov mov out inc mov leave push cmp shrb int hlt js add adc push pusha call stos sub imul or mov (bad) (bad) call scas adc mov je cld fldt stc pop les jg xchg cwtl push fnsave inc (bad) (bad) (bad) lcall lahf jl call xchg push sbb (bad) outsb push and or (bad) (bad) (bad) pushl (bad) fidivl rorl iret add push outsl mov out xchg popa lds ss enter (bad) (bad) mov pusha inc xlat (bad) jg cld imul mov jmp scas leave aaa (bad) (bad) (bad) jmp pop repnz cmp int push push xchg lods sbb pusha push fstpl cmpsw call cld xor mov (bad) aas jl cmc inc fwait mov pop push (bad) stos cmpsl jo out jno sub dec or jp sti mov test xor (bad) (bad) (bad) out mov out ss mov mov mov jno outsl cmp nop les push (bad) (bad) (bad) decl out repz push rorb xor xor mov mov or call stos add js aas leave out sbb inc push or fisttp cmp repz lock jb sahf push fwait jbe (bad) (bad) (bad) (bad) mov daa pop fsubrp adc test lretw mov out mov andb insl mov cli push inc pop mov notb cmpsl arpl push sbb stc bound mov arpl push and scas xor jmp push daa lds jmp icebp bound aaa std (bad) ljmp add lcall pop jge cs xor inc out decb mov push sub repnz faddl aaa mov adc xor (bad) rolb es jg pop clc and pop cmp (bad) xchg ret dec or dec cmpsb and mov xchg dec int inc (bad) (bad) (bad) fistpll mov aas or adcl jne test fimul jle mov jp sbb pushl mov or dec sahf incl ljmp clc icebp sbb xchg push mov push sbb and and mov jecxz push add xchg ret stc movsb scas xchg decl ljmp mov push jns mov (bad) (bad) (bad) jmp movsb in pop xchg fcmovbe mov aad adc dec dec pop rolb bound jo inc fsqrt call loop mov ss das fcomip dec ds (bad) (bad) (bad) std and inc (bad) xor lea mov lods sub cmp out pop mov ret xor out cli call xchg mov outsl fldcw inc enter pop mov aad inc sbb (bad) (bad) dec pop pop sarl scas mov xor jg cmp pusha or dec jmp dec and dec test (bad) mov jbe fisttpll insb xchg push dec jge jae fwait data16 (bad) mov adc (bad) pusha jns inc ret add add fcomip decl dec add mov (bad) jbe hlt sub cwtl fs jne rcr (bad) lcall mov pop push mov and iret cmp insb out jecxz je xchg scas lcall (bad) lret push jmp or lea icebp jae sub sbb ljmp arpl pop jge decb push movsb adc and loop xchg jecxz clc (bad) (bad) (bad) fildl call push int3 cmp pop xchg mov arpl xchg jmp test (bad) mov (bad) (bad) out ds arpl mov aaa mov add push mov test (bad) (bad) (bad) call jmp or jns loopne pop ret jmp cld mov or or sar popf xchg repz or into xchg mov xchg into lahf xchg mov xchg cmp mov mov (bad) mov stos adc mov pop dec (bad) xchg push jmp in xor or jmp sbb dec sahf jb jg sub icebp xchg xor push das jge sub mov cmc out fisttpll int3 mov sbb push inc out fisttpl out dec pop pop add (bad) mov pop aam mov xlat mov inc xchg call jb and ljmp sahf out pop lret mov or scas aam iret (bad) (bad) (bad) mov mov push jo fwait xor aad push xchg push movsb test push mov (bad) (bad) (bad) push lahf sbb pop (bad) lea aam fmul loopne xlat lret les mov jge loopne lcall inc jge jg pushf pop mov xchg sti sbb scas out push mov jmp arpl sarb arpl dec repz push mov (bad) (bad) call mov jl stos adc lahf adc outsl add xor frstor outsl adc xchg and and imul and (bad) (bad) (bad) pushl cld ficoml test push bound loop xchg xchg shl int3 sahf fmuls jmp add or mov ja outsl sbb aaa std (bad) jg (bad) popf pushf dec mov xor lcall (bad) cmc cmp lcall mov mov push xchg add outsb lods add inc lret int add (bad) lcall mov std sar jb das cmovge (bad) ljmp fadds push or xor imul pop popa sub out mov mov (bad) (bad) ljmp adc nop mov push mov sbb mov xchg sar (bad) incl jmp call mov gs push inc insl (bad) call jecxz,pt aam mov insb cld add xchg fwait test xor jns (bad) mov mov sarb (bad) (bad) fnsave fdivl pop lods iret and (bad) pushl adc (bad) jg mov test pop pop push orb aad or incl movsl aad adc add jge sbb mov mov sub cmp lods adc lahf xchg push cmp scas loopne sar adc lcall lret mov sahf ret push push jae cmpsl mov out les jne dec adc sbb xchg xchg jmp mulb outsb mov and (bad) (bad) cmp mov movsl xchg sbb mov sti cmp (bad) ljmp lcall je cmp aam sahf push lret (bad) (bad) cmp insl and (bad) jnp stos daa mov jle mov mov cmp xor pop jns,pt fmulp mov icebp inc orl (bad) call vunpckhps adc arpl test push shrb adc in aam pop stos into les lcall lret inc cmp sub lea sti fwait xor addl (bad) decl pop adc inc xlat lcall rcl jmp dec stos push and data16 cld rol rcl xchg clc incl push dec and sub sbb (bad) (bad) ljmp clc xchg add cmpsb dec adc fs (bad) jb js xchg xchg add (bad) (bad) call push cs insb notl pop jno shll sub call sub cltd push enter ljmp les and adc sbb push outsl sub (bad) call scas xchg inc ja out fdivr pop (bad) adc cmp jns (bad) std cmp (bad) (bad) jg pop lds stc loopne test adc dec pop rorl push jge sub rcr (bad) (bad) (bad) (bad) in lcall das xor jbe xor aam nop or js movsl mov (bad) (bad) jmp mov xchg lcall push test or inc xor mov add mov pop (bad) (bad) aas add jae jo inc loopne sub sub inc jmp (bad) int xchg loope push bound push loop jns push (bad) xchg mov stos lods (bad) push mov in push fisttp cld iret push int3 and (bad) add das xor fmuls fisttpll adc and (bad) (bad) (bad) (bad) ficoml (bad) fmuls enter sub out outsl dec (bad) dec xor mov mov clc (bad) incl xchg fs sub ret je into push je jne (bad) (bad) incl mov jnp int3 mov mov imul (bad) (bad) (bad) jmp pop cld dec and (bad) dec scas ja les clc sub enter inc pop jecxz (bad) fsubr push (bad) (bad) (bad) (bad) jge in cs fs enter sbbl clc sbb orb hlt (bad) incl loopne sti iret ja icebp pop (bad) push repnz jl jno outsl (bad) call ja mov mov repnz jg dec pop aas cltd enter mov cli sahf fistl (bad) dec adc stos inc repnz fs fs fnsave push mov scas punpckldq mov scas or cmpsl out arpl sub ljmp dec test sbb fs sub fwait pop mov loopne sbb (bad) xor call mov sub pop lock in jle movsl insl jmp jmp mov cmp insb mov push push (bad) (bad) lcall hlt pop push dec pop dec daa and int3 test fdivs (bad) das xor test (bad) (bad) (bad) pushl mov cld push fildll shrl inc decb mov test lahf pop and incl push xchg pop les into add lret lods mov dec ret sub ja ds (bad) mov fildll sub mov inc xchg push mov mov cwtl nop movsb add xchg (bad) inc (bad) cltd lcall xchg sub (bad) out jle cmp sbb push (bad) ljmp sbb fcmovu cltd lret ljmp out and push scas sbb ljmp addr16 pop (bad) cmp cmc and dec mov popa pop xchg sbb nop clc (bad) jmp (bad) enter xchg lea mov data16 sbb xor mov into lahf in fisubl add leave test (bad) (bad) (bad) (bad) std mov lahf mov xor cld xchg xchg daa jae pop test mov xchg mov insb (bad) aad rclb sbb call pop rorb sti xlat xchg aam loop (bad) (bad) (bad) jmp lahf xlat (bad) fst addr16 mov fcomp loopne add xor dec mov out push mov mov std jge fmull jle (bad) lret add (bad) (bad) (bad) (bad) fld mov gs loop nop and shll and icebp int (bad) decl ret sub cmp popf sbb js popf sub iret mov into mov lock fstps std mov mov and adc xchg incl int jmp arpl cltd push (bad) xlat mov incl jb adc cwtl lea stos and iret sarb mov cmpsb sbb mov pop adc jb push (bad) mov push fwait jle aad jo dec loopne or push pop mov mov hlt push adc in (bad) jg call mov xor mov jge mov pop mov dec (bad) decb imul mov dec hlt insb jns and fs dec (bad) jg ljmp mov ret sti sub gs test inc jo xlat jae sarb mov rcr (bad) cmpsb aas mov pop into adc (bad) (bad) dec jecxz or sub lods pop xchg push pop pop xor fwait jecxz insl sarl pusha je and in jecxz dec inc dec jnp,pn lds pop xor inc mov mov and imul icebp sbb addr16 fistl pusha nop enter mov aad clc (bad) out clc or mov pop or (bad) (bad) pushl sub cmpsl in in insb fwait jnp cmpsl jb inc out and aam jg hlt cmpsl add xor das popf adc push mov cwtl nop xor mov (bad) (bad) cmp insb or mov mov int inc ja (bad) (bad) or js (bad) inc (bad) outsb fiadd sub dec cmp cltd push out sbb add pop gs das xchg xchg rcr int (bad) (bad) (bad) mov stos insl leave mov ss adc mov pop cmpsl dec inc (bad) cmc mov (bad) (bad) (bad) dec sub pop or jl lcall pop jg loop and xchg data16 lret pop dec mov repnz (bad) jg xor jge push cmp sti sti inc neg cmp mov (bad) (bad) (bad) fistpl in fiadd jo and add xchg xchg rclb inc jns add int pop out mov (bad) aas std xchg lret out jp jmp mov xorb pushl xor jle dec mov push inc jg mov lock adc addr16 jg mov xchg outsb lods call xchg pop push daa push ret into cli cmp shrb pop (bad) (bad) (bad) (bad) (bad) xchg int3 in cmovge or movsl push leave mov popf jbe dec repnz aaa mov sub mov and mov out fbld popf frndint idiv (bad) mov in es xor mov or mov mov repz loop add inc push sahf cmp jge push in or (bad) fiaddl repnz movsl lock mov (bad) pushl ds cmp repnz add test stos dec loope mov jmp stos adc sbb and push imul mov cmp fwait ja sub push test jp jns adc loopne fwait xchg lcall push nop loopne pop mov inc pop dec cwtl inc ret das fsubrp mov mov imul (bad) inc roll add stos (bad) (bad) (bad) call cld adc push fwait cmp loopne jne subl mov push mov and (bad) (bad) (bad) (bad) jp cmp jp adc insb sub cmp mov out aas imul (bad) (bad) call add (bad) insb call xor xchg sub ss fcomip (bad) ljmp sub inc mov xor stos fwait notb jae leave mov cmp push (bad) lcall mov lea mov movsb rcll cli jmp jge pushf movl (bad) jmp cmp and or xchg pop movsb fsubrl jg sar incl cmp popf or mov mov xchg sub mov dec (bad) mov clc (bad) call les std (bad) sbb mov xlat call outsb add imul cld pop jno lcall pusha sub lcall (bad) sub push push xor inc dec in fwait daa punpckldq jp sarl dec mov enter ja adc hlt (bad) (bad) pushl push inc (bad) sarl fsts pop leave push mov outsb (bad) bndldx pop push in xor repnz decl (bad) aaa das adcb cmp pop adc sti pop outsb add (bad) (bad) incl gs jae lcall rcrl test repz not mov mov ljmp pop (bad) adc push add or std jecxz xor mov jno jg std dec jp rorb add adc dec pop arpl lcall ljmp inc lds icebp xchg (bad) (bad) jmp cmpsb sbb pop (bad) xlat js pop movsb push mov hlt fldenv xchg leave sub (bad) (bad) (bad) call or sub jo xlat int3 dec pop outsl mov jnp mov sbb dec xor cmc sub call push scas (bad) (bad) (bad) aas in in addr16 cmc mov dec jle cmp mov out jg jg dec add adc stos sub loope mov mov aam mov ljmp xchg jle jl pop xchg and repnz icebp mov ret push xor fbld clc int (bad) lahf out jl push jnp xchg lcall (bad) fcomip decl gs outsl xchg imul mov pusha outsl jnp (bad) (bad) (bad) lcall mov sub sub mov and add aam cmp jle push (bad) (bad) (bad) (bad) js jns sarb lret pop push aaa sbbb xlat cmp push push fdiv add push fdivrl push (bad) sub (bad) jg push add (bad) mov push mov incl ror xor decl mov test inc test call jl aaa ret mov sub pop icebp (bad) (bad) (bad) mov add or dec std dec or mov shl cmpl mov cld pushl subl adc (bad) lea aas dec sti jecxz push cmpsb rcr dec incl gs cmpsb xor mov (bad) stos jmp scas pop xchg fldt mov pop loop dec inc dec jae dec push and push sub pushf imul (bad) (bad) pushl pop pop mov cmpsl clc fmulp nop dec in (bad) jnp pop sbb or mov jbe push pop mov lcall add push repnz clc insb fimul sub xor or mov add lods adc (bad) nop inc dec mov cli sub aaa (bad) (bad) (bad) mov aam shll pop mov loopne cld xchg dec stos sub cli jmp cli push fadd in xchg mov scas scas les pop or cmp pusha enter adc sbb jno cmp lret pop (bad) (bad) (bad) incl test xor jp test jne lea out rcll leave inc push (bad) (bad) in incl negl (bad) mov pop (bad) mov cmpsb dec (bad) jle jo push inc sbb push test mov (bad) (bad) jbe je xor stos (bad) int bound movzwl cli mov pop ss sti push (bad) adc clc in and data16 dec pop (bad) xor stos clc xchg repnz scas (bad) lcall jg js fisttpll and nop int3 inc aad movups fwait repnz (bad) (bad) ljmp or mov les adc pusha imul pop sbb sbb xlat jg ljmp (bad) (bad) adc sahf (bad) call in sar ljmp (bad) (bad) into mov sbbl jp jnp push pop rep stc mov (bad) ljmp pushf xor inc aam mov jno mov popf inc lret test sahf fs bound (bad) in das rolb xorb into mov (bad) adc push das xlat (bad) pushl ljmp js bound mov test out incl inc into test (bad) (bad) jmp divl sbb cmpsl jp (bad) fcompl int3 sbb push in mov and int3 inc clc (bad) (bad) call inc out ret jnp ljmp (bad) je movsl push clc sub add rorl sbb lock les push inc or xchg sbb mov loope or pop xor incb add cmp fucomi mov icebp incl out outsb xor (bad) cmp arpl xchg jno dec ss add adc out mov (bad) ljmp jg cli insb add push pop rol dec or and cli stos bnd dec dec (bad) pushl or add jnp fstpt scas enter jecxz dec in xor movsl and sbb mov jl (bad) dec dec push adc (bad) call (bad) flds dec inc mov imul xor dec mov xchg (bad) pop cmc call lods testb fmuls addr16 mov push fcmove adc (bad) cmp mov imul dec and loopne (bad) mov xlat push aaa (bad) (bad) (bad) decl add nop push popf mov and scas popa pop outsl mov pop popa addr16 jge add bnd das mov (bad) (bad) call shr std adc mov lds repz mov gs mov sar (bad) ljmp std sub fsubrl je fwait and pop pop push xchg xchg (bad) ljmp sbb sahf push push test mov and shlb (bad) (bad) (bad) call jbe insl lock lock (bad) aad (bad) push in loop stos test sbb sbb and fmull adc hlt iret andb and scas stos orl xchg insb inc jp fs xor in stos lock mov mov scas mov xor push xor pushf hlt adc fsubs fdivrp (bad) pushl (bad) mov insl push pushl ljmp dec int (bad) or sbb pusha sbb idiv adc pushf ds subl fs cmp xchg pop inc cmp lret (bad) (bad) lcall xchg add aad dec dec mulb (bad) outsb popa xchg inc add mov (bad) jmp mov daa sbb cli mov movsb aas (bad) push movsb jo sub es and clc mov daa or inc or adc mull (bad) (bad) jg sahf sub mov les lock push or sbb icebp mov and pop ja dec push das pop out mov movsb (bad) jno stc imul pop xor lods rcrl dec scas dec gs daa test (bad) jmp and imul addr16 (bad) fdivrl cmpsb jle sub pushf pop popf (bad) mov std add dec aam pop cld (bad) cmp enter loop jmp in dec lds call lds sub mov (bad) cmp mov jb sbb and aaa add cmp pop (bad) (bad) (bad) jmp add mov call xchg lods mov xor xchg jmp mov out jg (bad) pushl add (bad) or fwait lock add ljmp (bad) (bad) (bad) aas jno sahf outsl push sbb mov sbb xchg aad mov mov and (bad) jmp xor pop cmpsl into out pusha adc outsl sbb sub or cmp and jmp xlat xchg cmpsb jnp xchg outsb (bad) cmc dec adc cmpsl jle mov mov mov adc fldl dec pusha loopne aad dec dec lret cmp loopne sub (bad) inc mov test xchg cmp mov cmp cmpsb jne ret fsub jnp or and shrb sub or clc lcall adc xchg sbbl jg test and adc push hlt lahf sti add sub ret pusha mov mov xchg nop ds arpl mov mov js loope cwtl add (bad) push jno cmpsb cs cmp xlat int ss jns jge add cld fisttp (bad) push outsb sbb jo cltd fsts iret push in (bad) (bad) jmp nop (bad) shrl adc mov push popf jmp mov movsl mov (bad) cmp aam cld dec dec inc imul inc xor jecxz insl out xchg push inc mov sub in (bad) (bad) (bad) incl and ret mov pop jae mov lds dec rolb xor cmp ret mov ljmp cmc mov (bad) ds adc mov mov (bad) cmpsb mov aaa fistpll jp rcl push into xchg in in push (bad) (bad) (bad) pushl xor mov xchg jnp mov cltd push (bad) test dec js xorl push cld mov ds push lods (bad) lock mov (bad) lcall gs cld mov xchg jmp or scas add sar push scas ror movsl sbb cli xlat jg cmpsl jnp aaa clc insb lcall call xchg pop loopne frstor hlt ret lods inc or dec add and mov (bad) (bad) (bad) incl les pop mov cmc pushf das dec adc push imul sbb (bad) (bad) (bad) jmp pop int3 mov push adc or dec jp add (bad) dec out xchg mov dec jl jbe test fbstp adc (bad) les pop inc sub es (bad) (bad) pushl in mov aam add dec sub mov or jne mov (bad) jg adc sar scas pop mov (bad) fildll ds enter lret xchg jo std int (bad) (bad) lcall mov mov add cmp adc jp imul (bad) (bad) (bad) lcall aam imul mov mov xchg ja mov addl cmp hlt (bad) mov std push pop aad dec fidivr mov lods pop ss pop pop xor push inc pop popf shr pop in (bad) lcall insl rcrl aad sti cmpsb mov jmp cmpsl (bad) (bad) (bad) call mov test std adc js push sub enter and aam mov sbb lcall jp or (bad) sti mov fimul sub inc (bad) call pop sahf fldt icebp clc loop popf addl mov (bad) stos shlb sbb xor add out sarl pushl aas cltd mov push push insl imul sub out cmp das add dec sub or and rcl ds hlt aaa std (bad) jnp imul (bad) add cmp je mov mov mov insl adc sub cmp ljmp rcl mov sbb mov xchg mov insl movsl inc add cld inc idiv call lods fistl les mov cltd std cmp sarl popf (bad) (bad) (bad) decl (bad) push fwait cmp out sbb dec leave sub in (bad) push push (bad) sub dec push cmp call sbb and push test call mov cmp add loope add scas cwtl (bad) loopne lahf lock fisttpll jp mov fwait (bad) push movsl push pop sub sbb lds adc add mov lret sbb (bad) (bad) jg dec push ficom out js fs ret add fwait rclb or (bad) (bad) mov mov adc xlat mov mul push or (bad) (bad) (bad) jmp ret mov and mov loopne aaa inc mov stc pop lcall repnz (bad) (bad) (bad) dec cld aas out test es inc jno mov into cmp out clc push outsb fisubl push clc mov (bad) mov cmp mov enter fcompl cmp (bad) ljmp xlat pop scas lock roll fiaddl xor (bad) fmul jo add adc mov fisubr leave stos in push jmp pusha inc mov divl aam out cli (bad) jnp sbb adc ds roll mov pop repnz inc pushl clc add aaa movsl sub nop push pop pop xchg jmp inc (bad) (bad) jl (bad) (bad) decl pop (bad) ljmp ljmp shrb cltd or enter fnop xchg incl cs mov inc pop clc cmp jns fisubr ljmp sar xor adc xor inc pop push pop shrb (bad) incl xchg xchg jns sti mov in iret in movntq pop pop sbb mov jae adc inc inc adc mov je mov repnz (bad) jae lcall cmp mov daa jnp cmp adc pop mov xchg adc pop push (bad) call xchg mov mov outsl decl xchg dec bound mov xchg sti add (bad) (bad) cmp mov cmc das inc es or sub hlt sbb (bad) mov repz fimull loop jae test (bad) and (bad) (bad) jmp xchg sarb pop ficom mov sahf fldenv insb jge xchg (bad) stc insb sub (bad) (bad) jmp push dec loop jae je cld pop shl movsl sbbl movzwl jbe adc decl pushl dec cmp cmp out add (bad) or (bad) dec lods or push dec lret cmp push lcall mov out dec ss addr16 cli pop cmp (bad) fwait pop sbb jle xchg mov sub sub ds cld mov (bad) out (bad) (bad) (bad) ljmp jmp and or push les lahf pushf ficomp lods xchg ret mov lret sub sbb (bad) (bad) (bad) jl (bad) sub lods push insb mov lea mov jecxz add mov sysret xchg (bad) (bad) incl dec mov xor es adc (bad) inc fnsave (bad) and outsb loop (bad) (bad) (bad) jl in lcall loop mov adc adc jns add xchg je jg and cmpsl jns cli mov or (bad) mov bound fdivs enter lds dec jg push (bad) (bad) (bad) call rolb inc loope dec (bad) popf adc test mov mov scas fnstenv pushl pop mov jo lret or cld ljmp adc sbb jp ss jo sti cld jnp (bad) (bad) addr16 and jmp cli jp nop mov dec imul push (bad) mov rclb lcall dec sub mov flds jbe inc scas add xchg dec mov sbb dec sbb fidivr (bad) das (bad) (bad) (bad) ljmp mov insb cmpsb adc shrb mov jb mov rolb add (bad) (bad) pushl and adc lds mov mov adc test sar inc ror es mov (bad) (bad) stc or aam outsb push out and dec jmp push dec movsb scas lahf or ret (bad) (bad) out fiadd xchg std aaa mov inc jno in mov (bad) (bad) (bad) jg mov popf pop pusha ret lret inc and push call sbb inc std push (bad) inc lds jne test inc mov stos pop scas sub or jne xchg xor inc sar pop hlt mov xchg outsb out mov jo cmp jecxz mov pop out out js fcomip (bad) jmp out push bound mov nop inc mov ficompl pop dec roll data16 pop lods mov leave or aaa and std insb cwtl fisub ret test push loop clc mov and popf jnp js ds mov (bad) (bad) ljmp pop mov pop jge shrb (bad) pop adc mov or std (bad) incl sub mov icebp in sbb lret mov bound mov (bad) (bad) incl iret (bad) lcall fsubs cmpsb and pop push push lret xchg dec stc xchg sbb and cld aaa or nop mov inc inc jle (bad) cli (bad) (bad) (bad) (bad) lcall test mov inc inc cmp xchg daa cmp pop cmpsl mov mov (bad) pushl mov push sbb shl into fs pop ja decl lock inc mov outsl insb insl jo jnp inc rcrb loop push mov daa mov (bad) (bad) (bad) lcall dec popf fbstp xor rolb mov incl mov (bad) (bad) lcall push mov js push pop enter lahf push fcoml repnz mov scas and (bad) (bad) incl push mov mov cltd jbe call adc sbb sbb xchg out out clc fwait incb jb (bad) mov or dec rcrb clc and (bad) push jl fs in jns (bad) pusha or stos xor xor (bad) (bad) lcall push out int3 jbe mov adc pop test push jbe jecxz fcoms lahf inc ss data16 (bad) (bad) pushl jl mov pop bound inc lds (bad) outsb test hlt inc outsl fistpl jbe (bad) (bad) (bad) clc add jbe or idivl adc adc (bad) (bad) jmp mov inc or aam mov inc jle aaa movsb push inc mov enter add (bad) (bad) (bad) (bad) cmp mov out dec mov mov jne sti ds push push aad fcompl sbb (bad) decl lds nop loopne cmp daa or pop imul push (bad) (bad) incl sahf into insl leave (bad) mov sbb push stc push clc popf in shrl (bad) (bad) (bad) pushl mov daa (bad) (bad) sub cmc push roll stos and jge xor pop std (bad) (bad) push mov std test and (bad) cmp insl xlat enter ficompl jg add sbb (bad) (bad) aas inc push sahf outsb dec jg push add (bad) movsb pop rolb pusha insl or (bad) (bad) decl hlt jae add pop sub jbe,pt and (bad) aam push loopne sti push pop mov xor (bad) (bad) (bad) cmp jno add mov movb adc sti dec aam inc cmp lds (bad) (bad) (bad) lcall cmp xor xor dec push mov loop sbb cmpl add mov mov dec arpl or add jbe dec sub lcall add lods jp xor imul jl mov (bad) (bad) mov inc cmp sub data16 jle ljmp add cld cmpsb scas mov xchg lds lcall inc leave sti adc ds call jbe in outsl sbb inc out inc inc jl jmp adc ljmp xor scas test (bad) (bad) (bad) fistpll les (bad) xchg mov shlb xor xlat es cmp movb sahf cmp arpl sbbl clc or xchg push add hlt ret xor lods std mov adc xchg nop std push push addl decl sbb lock bound shr lods push cmpsb mov test nop in (bad) push call xchg cwtl pop and in loop pusha push gs (bad) (bad) inc or ret fs sub adc pop frstor push popa imul jl ljmp (bad) ds mov gs cs sbb cld dec bnd push (bad) outsl aad inc (bad) ljmp insl std jecxz data16 cmpsb mov dec dec (bad) mov stos stc scas loop (bad) (bad) inc addr16 mov pop cmpsl or out lea in jb sbb cld xor stos clc mov pop test out xchg mov mov leave jae pop ret inc aam pop subb (bad) lods fdivrp (bad) (bad) jmp cmpsl lahf outsb or jmp sub jns cmpsb (bad) cmc je out (bad) jae mov pop call push lea sahf aaa jnp insb dec add mov (bad) (bad) jmp jmp outsb je mov (bad) loop mov pop inc hlt data16 into cmpsb (bad) (bad) lcall loopne xchg test sbb imul dec shrl imul lock pop hlt dec push lock cmc int hlt jnp (bad) push clc lret (bad) (bad) (bad) (bad) cmp lock jb js xor mov jb stc out adc inc xchg data16 sub add (bad) test mov pop lea adc std aas pop cli jae jo sti sarl push (bad) (bad) (bad) mov add pop sub add adc outsb mov xlat movsb mov push mov fwait divl lret mov lock push mov jp out push lret fcom ja ds push std shr (bad) call fdivrs enter outsb iret mov sarl xchg add idiv (bad) (bad) jmp fdecstp adc inc (bad) pop sub stc mov addb add rol cmp jge jg (bad) jmp jmp sub lret lret push in or (bad) sub (bad) pushl aam pop mov jnp or stos lds loope (bad) jmp push sub mov mov jecxz call lret in inc movsl adc pusha out (bad) (bad) mov addr16 fnsave add cmc lret dec (bad) (bad) decl add mull adc push inc insl add mov jae int3 or pushl into sub xchg pop inc mov scas in sbb pop fimul sbb rol out dec iret lock pop repz lret push mov xor loope (bad) (bad) lcall lahf mov dec adc gs fmuls movl push imul push pop jne mov cmp out icebp in mov mov push jnp pushf (bad) (bad) (bad) call test loopne mov lods leave fldenv enter xor (bad) (bad) lcall imul lods rcrb div xlat arpl stc inc lods jl in loope jmp loop push movsl movsl adc pop mov pop int3 inc cltd cltd xchg pushl sbb dec mov rep inc test (bad) (bad) jmp sub cmp cld das jecxz sbb xchg mov cli into lods sub and (bad) lcall dec repnz pop icebp dec xor jb cmp mov jae and outsb ffree pop jmp (bad) (bad) (bad) (bad) stc in in iret xor jno or push pop out (bad) lock or mov sti pop add xor dec push mov ds cli test (bad) (bad) pushl pop out push (bad) bound mov dec jmp inc and sbb iret scas je js ljmp (bad) cmp movsl mov mov sbb or std dec pop or (bad) (bad) fisttp mov mov jae push test adc (bad) (bad) (bad) ljmp push add xor jno sub and mov fadd cmc xchg nop lock pushl cmp pop and fnstcw icebp xlat ret push pop and (bad) (bad) decl mov mov mov jmp inc (bad) mov push lret ds arpl (bad) (bad) mov adc stc loop adc cmp fmull fistpll (bad) push imul sub add jge fldcw mov (bad) sti mov jp sub mov subl mov cs repz in outsb mov (bad) (bad) (bad) jg leave dec inc aam mov xchg leave adc add sub adc dec mov cmpl popa out (bad) (bad) (bad) (bad) fmuls imul out xchg mov cmp out std mov mov out dec (bad) (bad) (bad) ljmp push mov sbb inc call sbb ret sub xchg ljmp stos cmp jg roll lods push push (bad) jl mov sub (bad) pushl jno push mov mov cmp and xor adc dec pop imul lods pushf inc pop xchg push mov outsb mov push and push inc pop sub ficom and jecxz inc ja jmp inc (bad) (bad) (bad) cmp mov push or dec nop dec push mov aaa inc mov mov stos ljmp js xchg movsb pushf mov jmp lret lods mov adc shlb mov dec mov outsl ror ja mov (bad) fidivrl out and mov cli cs addl clc insb (bad) iret jmp jmp dec push les mov mov nop ss (bad) (bad) (bad) incl pop jae je (bad) or xchg scas sub dec jns sub add in aam ss jmp xor (bad) call rorl mov lea cltd cmc jb (bad) sbb aaa std inc mov pop js daa (bad) je bt sbb nop icebp lahf lcall lock mov mov jg or or fs or sbb mov (bad) (bad) (bad) cmp std xor shlb popf inc scas cmp adc vmread mov in (bad) (bad) (bad) ljmp pusha cli popa js or cld xrelease (bad) jge leave ret bound in in (bad) (bad) jmp in cmp imul xchg sub xor add mov or rclb lret (bad) ljmp lret mov push sbb push stc jae mov push pop cmp mov (bad) ljmp ds iret push xchg add push sbb push or stos (bad) incl push cltd call fstl sub rolb pop mov fcomip (bad) jmp int popa push aas es rorb addr16 jmp lods pop (bad) (bad) (bad) ljmp jmp fwait lret inc sarl mov add adc jmp sarb aaa cli mov mov (bad) (bad) (bad) pushl fimull adc and in ficoml jno ret mov iret (bad) (bad) (bad) decl mov mov js lea jp xor jo test test jmp (bad) out inc cltd dec cltd cmp ds push cmpl sbb add push (bad) or xchg push or pop repnz mov int (bad) ljmp ljmp pop ss or fimul jne sbb cmovbe stc pushf jl hlt xorb or cwtl ret ja stos (bad) incl ds jl cmpl ret mov test jnp sub shll inc int leave mov arpl std out ss cmp ds push jl adc xchg sbb data16 scas xchg pop imul js,pt mov in repnz (bad) imul mov push inc mov adc mov (bad) (bad) (bad) (bad) mov dec cmp xchg xlat aam les cli push call test add add (bad) pushf cwtl iret xchg sub out or inc test (bad) (bad) ljmp mov insl das es and adc ffree push pop sub pop loopne decl ss imul loope stos inc mov pop add sbb mov cwtl test pusha in cmp pop add sbb (bad) fldl addr16 and (bad) dec rcrb pop ret inc (bad) rclb (bad) push push clc stos mov and mov xor sub mov cli (bad) ljmp or test cmp xor cmc cld add es pop jae pop (bad) ljmp cmpsb aam jae popf jo inc xor or and mov loopne lods ljmp idiv lcall jmp test pop popf (bad) (bad) (bad) decl pop sub sbb xchg and stc out or imul es and cs (bad) ljmp cmp (bad) int3 sti outsl jle test lods out sbb fimull mov jg call bound in out lahf xchg sbb (bad) (bad) (bad) call xchg adc push das nop rol (bad) mov shrl mov pop jle cmp (bad) (bad) (bad) jg jp jge mov adc bound repnz int jno pop lret mov and (bad) push jo into movsl je cmp popf add cmp mov loope dec int mov (bad) fbstp outsl call outsl add addr16 pop daa in insl arpl mov stos push lcall (bad) (bad) incl lcall pop loopne lcall das test adc (bad) (bad) incl xorl mov cmp aad mov test jmp addl popf push pop (bad) push adc jae decb idiv mov (bad) ja shlb cli sub xchg sbb add lcall test pop sbb stos xchg std jge (bad) incl adc les xlat ljmp xlat add push push mov (bad) (bad) incl addr16 adc and out and sub fwait pop clc mov push std sti cmpsl pop repnz xchg (bad) (bad) (bad) mov or adc aas cmc push out sbb pushfw sahf lcall push add (bad) (bad) (bad) js mov inc pop lock addr16 shl xchg inc loop sti fwait negl mov xor lahf push adc out imul repz out aas ss in sbb xchg pop xchg scas lret sbb or pop cmp add mov stos cmc (bad) cld fisttpl divl nop jo adc fstpl rorl int3 aaa sbb pop jne stos adc (bad) scas xor or lret pop lahf pop sbbw aam lret insb int3 (bad) in sbb mov (bad) (bad) inc add mov js mov dec rorb jle cmovp or add sarl add (bad) std push scas xor loopne jge sub sbb (bad) (bad) aas sahf stos fidivr and or cmp pushf stc cltd inc xchg in push movsb dec lock scas push mov loopne sub (bad) (bad) push and mov push mov and xchg pop fisubrl pushf jbe jae (bad) (bad) call or mov push or mov add andb repnz or add xchg (bad) fcomip ljmp popa pushf cmpsl ret mov sub and lock cmp lods dec (bad) lcall push add jg ss xchg cmp dec lret push adc pushl jns mov xorl and mov and pop xchg idivl movsb cmc fisub ds adc cmp mov rol pop xchg pop (bad) (bad) (bad) (bad) ljmp sub mov jb inc mov gs cld mov cld loope inc pop sar add mov jecxz or pop sahf enter xchg in cltd nop and or (bad) (bad) (bad) cmp pop test aas mov sahf pop mov push and test (bad) incl sahf and andl andl fidivrl sbb (bad) lret push sar push cmp mov mov mov insl (bad) mov icebp es cmp push jae jg loope test aam lods push xchg aaa cld dec adc das inc shrl iret xchg test loop push adc push (bad) (bad) inc daa sbb cmovs push push sub and cmpsl minps (bad) jl fisubr cli (bad) pop lcall decl mov xchg mov pop addr16 jg fyl2xp1 dec fs pop cld (bad) (bad) mov cmp scas push jle and jo xor push jge and xchg (bad) call cld icebp sbb (bad) xor nop jl in mov mov pushf inc int cmpsl fcomip mov test mov (bad) ljmp leave xor jb sbbb aas push call push aas ret inc fiaddl es or imul and mov cmova popa dec shlb pop dec ds (bad) lcall mov fs incb fildl or (bad) stc lods loop popa rorb cld lcall mov bound jle call cmp negl fbld mov cmp xorl cwtl mov dec enter sbb int3 iret add pop ja sub pusha push add add lods mov adc jmp rorb test out aam cld addl jmp (bad) (bad) jg sahf push mov push mov (bad) ja std fidiv hlt pop pop add and rorl xor push call fdivrl js mov idiv (bad) mov decl mov mov push add (bad) (bad) jmp shrb push mov jnp out push js in xchg push xor mov pop sbb ret (bad) (bad) cmp mov xchg add in push ds pop insb scas or ljmp pusha ja (bad) in mov push sub (bad) push aad nop je (bad) ficom jne inc rolb (bad) das xchg pop add loope,pt cmp into and mov xchg test (bad) fild pop sub push cmpsb inc clc sub mov (bad) aam (bad) (bad) pushl add or int mulb ss sti xlat pop lock jae (bad) (bad) pushl pop dec inc jl xor mov adc mov test cmp ret (bad) ljmp mov into add sbb sbb mov shrl pusha push push ss stos dec pop inc jge addl sbb cmp cmp (bad) (bad) (bad) call ja or adcl hlt scas mov or imul (bad) sbb lea iret push inc aam sbb (bad) jmp ds sub (bad) pop out mov dec inc (bad) (bad) (bad) call loope inc imul mov ret sbb ret imul mov lahf push cmpsl outsb cmpsb addl decl sub push add repnz or jg and sub sarb pop out pop dec sbb push out add shlb xor std outsl sub cmp push (bad) jno jb adc popf dec inc xor test fistp loopne push inc sbb (bad) cmpsl lods ljmp mov add sub inc jg jb adc xchg push std (bad) push stos test insl xor or imul pop or xlat sti push sbb mov (bad) push fcmovnu adc in fsubl (bad) popf fdivrs sahf jnp (bad) (bad) (bad) jg sub jae xor or xchg leave dec test mov jbe xchg inc std loope test incl ds lret fmull pop or jne es iret das jne mov adc hlt mov into fiaddl jmp mov pop inc sarb outsb std mov fist xchg add mov fsubs inc sbb xchg add in loopne call pop (bad) mov loopne mov push cmp mov or push or adc int3 mov sahf cld sbb jecxz push xchg mov cmc pop jmp negb and inc inc ret xor scas dec imul (bad) hlt loop inc lret (bad) decl sbb movsb aam adc xor in xor jecxz dec pushf call (bad) sbb ljmp push xlat scas mov jmp call fcmovbe xor jle adc stos xlat daa das fildll sbb mov mov (bad) cmp adc jnp int add mov (bad) (bad) (bad) ljmp lods (bad) push arpl loopne push cmp and jns jnp insb dec gs jmp jecxz mov inc jmp jbe jl inc cmp sahf xchg jo je pop mov fcompl imul (bad) lcall test aad xchg (bad) mov inc jne rcrl ret orb fdivrp (bad) (bad) (bad) jns nop fcom loop cltd loop pushf hlt inc mov mov ljmp rcrl (bad) (bad) lcall loop dec mov jmp jge mov sub (bad) jb aas pop cld (bad) (bad) fcomp add pusha les pusha outsl jmp cmp dec loope inc lods jp rorb dec (bad) pushl push mov fisub or pop and ljmp mov jge dec ss out fisubl push scas adc leave lea cmp js ja rclb mov repz sub cs (bad) jg pushl or pop out jp add stos lret imul addr16 adc imul inc shr lock daa (bad) std pop push xchg sbb (bad) in inc sbb scas pop je dec fsubr mov xor or sbb leave insl inc jno pusha int3 iret sub (bad) jmp cmpsb add jo xchg ja fs sbb dec mov dec pop fistpll mov (bad) ljmp or push (bad) fldcw push add pop in mov sbb imull cmp jg call in icebp (bad) or icebp jg mov mov push fidivl stos mov mov push pop je mov pop test lcall cmp adc jbe scas cs or test jne popf add fstps xlat adc sub cli stc cld shrb dec mov add lods mov jne test dec lods (bad) jmp inc push (bad) ds icebp rcll mov test mov sub xor pop dec les adc mov bound (bad) hlt pop cmp (bad) (bad) mov push dec adc call cmc dec pop insl xor jp lock mov mov xor jl dec pop lds decl add ja daa inc shrl nop cwtl sub (bad) (bad) (bad) (bad) ds out add arpl fstps in out jb or adc mov sbb jbe fdivrs inc jecxz (bad) (bad) jmp dec mov (bad) adc adc out lds adcl jg dec cld aad adc mov stos fmul imul movsb push cvtpi2ps outsb xorl fdivrs jno nop lahf rolb cmp sbb das sti push rcll mov imull pop call call push stc add hlt sub es adc mov jbe (bad) (bad) (bad) ljmp sbb sub add ret cltd xlat pop cmp jmp cmpxchg incb incl imul push inc shll rorb inc hlt pop push lds mov mov inc mov mov or sbb inc mov push mov jle in jl lret mov icebp pop (bad) mul add int3 jge add imull (bad) (bad) lcall insb add dec jno pop out fistp inc sbb jl inc mov fsubs (bad) mov fsubs push xchg push adc insb push ret (bad) jg in cwtl insb aam mov divb and (bad) imul (bad) jg ljmp sbb loope lds fnstenv jno ds mov adc xchg pop dec push mov cmc xchg test jb les and inc sbb (bad) (bad) out and fs les and dec lds xor (bad) loope add (bad) lcall dec mov lock inc inc int3 insl cld imul inc add mov mov mov mov sub (bad) (bad) incl test fdivrl xchg enter pushf dec iret add mov test (bad) (bad) jmp mov cltd jnp jl mov out sbb je mov inc out fwait insb ljmp inc (bad) not sahf or jb (bad) (bad) (bad) (bad) (bad) inc sbb mov dec sbb rcr cmp or ret mov adcl loopne adc jae cwtl je ljmp cmp bnd sub in pop sti lds lods inc imul jae aad push (bad) (bad) mov outsb xchg mov jg and xchg xchg lret sub cli (bad) (bad) (bad) jmp sti xor cmp icebp cli mov insb ds int add test (bad) jmp out int3 outsb xchg cld jae pop or out andl and clc (bad) (bad) call ret out test cmp out lahf push pop notb cmpsl mov cmpsl mov (bad) out nop test xor and mov sub cmp fld test fsubrp aad scas add (bad) mov int3 jecxz popa push sbb xor add ret dec out mov addr16 ret loope cmp xor inc mov fcomip sbb dec add push aas or pop in subl push ja popf push iret addr16 mov (bad) mov in js rclb xor push scas pop dec icebp and xor pop std or push cmpsb jbe nop mov mov or jg cmp (bad) (bad) mov (bad) mov jo dec pusha ret lret cmpsl add jecxz sbb (bad) fisttp xchg ffreep dec inc cmp jp dec rcl sahf jp (bad) (bad) (bad) mov stc push jae mov dec lea cli mov pop shrb mov and (bad) (bad) inc adc sbb mov test decb push xchg mov mov test cld pop push mov xor and cwtl sub add fisub xor adc pop mov push jecxz movsl scas in push sub (bad) (bad) jmp cmc push and (bad) arpl nop rorb rolb (bad) push or or mov lret jmp mov in xchg in xchg add out cli ljmp push inc cld mov daa jno or push mov pop push mov js testb (bad) cmp es mull push flds (bad) call and jnp adc jo lea mov sub stc pop (bad) (bad) (bad) ljmp std cmp or and push dec sub pusha mov (bad) (bad) in jmp ficompl and out lcall inc lahf in inc xor mov dec xor pushl inc pop test pop add aad (bad) jg test add add xchg push (bad) (bad) incl xlat jns mov mov pop std push dec fsubrp (bad) push push fimul inc lea inc loop cmc mov lock std loop push sub inc add (bad) jg sbb sub int3 fstpt fstpl aaa loopne push lock ljmp clc or fstl add jae mov loope mov sub shr adc mov (bad) (bad) lcall mov (bad) pop add aad lods stc mov shrl jle (bad) (bad) dec shrb loope js pop mov jne sbb call push sbb lcall lea sub lret (bad) (bad) (bad) call fmull ret adc mov cwtl inc outsb push mov sub ljmp (bad) (bad) push push out mov add lock aam ljmp sbb insl adc daa stos mov les (bad) mov scas inc adc lock enter sub (bad) (bad) (bad) dec and (bad) or std sbb pop inc sbb jg cs ljmp inc xchg outsb sbb (bad) (bad) decl add dec arpl mov sarl sub mov insb dec hlt pop js pop call (bad) adc xor adc and (bad) (bad) call pop jo stc fidivl ss bound xchg mov or or fistl outsb (bad) out pushf sar (bad) (bad) out pop movsb adc movsl or cmc (bad) jmp mov or (bad) imul ds cmpsb jg push lods push sbb cli mov adc loop dec lock xchg cs or pop lock mov lock loopne inc ds and mov or (bad) incl jno push inc dec xchg pushf xor (bad) jno daa xchg out dec iret jbe enter call mov dec (bad) roll cmp mov fs mov xor mov sbb jno rolb or mov scas pop cmp (bad) mov repz insl or insb nop fdivr push pop incl out sarb or ljmp test rcrl mov mov icebp fnop (bad) (bad) (bad) call lahf mov movsl jle mov pop repnz push fildll pop jnp addb fidivr popf push (bad) (bad) mov mov cmp in lea sub lret stos fdivr (bad) (bad) jmp (bad) xor mov inc aas fsubrl dec (bad) mov push pop es inc add popa add cwtl into jnp mov sbb add mov (bad) or inc clc jo leave and jp cmp sahf or push leave nop jne (bad) fiaddl sbb insl or bound add mov test (bad) (bad) pushl jae,pn fnstenv pop cld rorl xchg push cmp dec push dec ja jb (bad) (bad) jmp ds dec xchg scas lahf jmp add int3 aam jbe sbbl xchg incl cmpsb (bad) (bad) pushl mov clc stc jmp (bad) out push repz xchg les mov or add mov stos lcall cmp leave sub (bad) push sub jae into cmpsb pop mov pop pop ficomp xchg push cltd (bad) xchg pusha bound dec jge (bad) mov mov (bad) mov test addr16 sbb sub mov push push fst mov pop mov (bad) (bad) pushl (bad) mov iret push dec stos dec loop or test stc negb dec les sahf sahf add js mov pop mov (bad) (bad) (bad) decl in popa orl jns or (bad) lods scas loopne mov jb (bad) (bad) incl mov xor movsb pop jnp fwait negl cmp in lea pop inc vmovdqa (bad) (bad) inc xchg mov (bad) aad in (bad) mov xchg lock lahf add movsb mov cli sbbl jp,pn out mov ljmp ffreep mov (bad) dec mov jl and pop adc pop mov (bad) lcall je movsl dec xor fcmovnbe push shrl (bad) out xor sbb push nop push push (bad) dec lret jnp fcomi (bad) lcall fiadd lds inc pop orl test (bad) pushl adc (bad) lods xchg xor test inc adc push xlat ds pushf mov sub jne ucomiss pop shl ja inc ffree (bad) (bad) (bad) inc xchg mov std jo ret sub scas or mov outsb andb (bad) (bad) inc push push mov sub pop sbb mov repz iret cmp (bad) (bad) (bad) jns int3 and comiss int3 repz notb dec dec jle jno mov (bad) (bad) decl leave cmp lock pop push jno mov xlat mov mov mov inc push (bad) inc add mov ret xchg cmp xchg lcall daa push movsb push jecxz inc rorl (bad) (bad) (bad) call sub sbb jl jae ds lret ja pop jne test push fidiv decl mov jp shll cmp pop mov lds cmp lcall (bad) cmp and mov sti fistpll sbb inc popl inc (bad) (bad) (bad) ljmp stos push push add mov aad adc pop xchg pusha sub pop mov dec ret jg push rcrl stc jno jp dec mov jns icebp std loop outsb mov push mov cmp cli test inc sbb out adc insl mov (bad) (bad) (bad) decl lods add movsb adc not mov repz or cld out stos stos ss (bad) (bad) call inc adc mov ret jne mov fisubl lret adc cld (bad) (bad) lcall or xor fild sbb dec outsb push dec mov pop call add aam pop insb adc fdiv inc lahf or sbb cli call ds lds dec xchg div ret insb repnz (bad) decl mov cmp cmp inc adc sub mov (bad) (bad) call xchg xor xchg cmp sbb test mov pushf sbb (bad) lret mov (bad) (bad) lcall dec mov adc cmpsl xlat stos stc loopne cmp insl cwtl popf xor lcall inc in ret push or stos movsl sub push sub idiv (bad) (bad) lcall sub push ljmp mov jg cld jae mov jnp test sti (bad) (bad) cmp movsl cmp fnop inc mov sar decl stos mov add mov ret sti push sar aam jb in jb (bad) (bad) (bad) jg roll xchg lcall outsl pop xchg call je and ret loopne sbb (bad) (bad) cld mov mov in cmp stos mov jmp (bad) (bad) (bad) (bad) call outsl inc cmc ret sbb dec sbb mov push or rol pop push xchg mov call scas jmp (bad) movsb test add jno cld mov jno jp adc fwait add and lret mov add pop lcall mov out inc (bad) outsl mov out test adc sub mov shrl in xabort ja sbb mov nop push jbe xor into sub and (bad) ljmp fistp daa xchg or push addr16 jg mov inc loop je xchg scas cmp add stos ds (bad) (bad) call inc pop jae pop pop (bad) adc pop xchg fistpl fstp add xchg (bad) pushl std into and mov xorl fldl aaa rolb inc mov ljmp adc push cmp stos (bad) (bad) mov push mov mov cltd mov xchg fsubr adc inc imul pushl fwait or ss adc lret sahf rcr mov xor js cmpsl test outsl jb (bad) (bad) incl fldlg2 mov inc out or xor dec sub (bad) (bad) sti in data16 jne addr16 jns add out push mov add adc rol (bad) (bad) call xchg add imul push jb test mov jge pop jl pop stc push in dec and dec cmp data16 xor (bad) (bad) lcall clc fcomp xchg cli add cmp loop decb out mov cmpsl jbe outsb (bad) (bad) (bad) lcall sbb shrb cwtl mov add sbb sub out je outsb scas (bad) (bad) (bad) (bad) std push inc xchg data16 int jmp jnp mov jge subb je cli inc (bad) (bad) (bad) pushl shrb push and xor fld push hlt inc test jg aaa mov xor (bad) repnz les xor sub lcall es (bad) incl mov (bad) leave mov mov data16 pop test out (bad) (bad) ljmp or pop (bad) jmp rcr cmp cmp cmp mov pushf out notl (bad) incl stc mov jae jmp addr16 iret aas pop mov cmp pop mov andl sbb stos fdivl jae sbb (bad) pop mov aad enter ss (bad) (bad) cmp inc fisubrl xlat xchg int3 fdivl mov push or xor outsb xchg clc jp dec mov cmp mov pusha insb or out inc inc (bad) (bad) lcall mov xchg cltd mov mov fidiv aaa adc xlat rclb xchg push shlb jbe push (bad) jae (bad) (bad) (bad) lcall shr dec mov mov aam push add jne adcb scas jns push cmp clc inc inc movsb pop imul sub insb mov stc out add jns in (bad) pushl cld sbb xchg jbe mov cmp ret sbb jb (bad) (bad) (bad) dec jle cmp ds imul mov stos xor cwtl adc lock inc adc les jo pop loopne nop scas (bad) (bad) (bad) fnop int add pop xor or imul cmpsb hlt mov aaa test test inc out lahf xchg inc std jmp movl push jmp mov sti in push stos xchg (bad) lods xchg mov mov es int3 xor xrelease xor jmp lds mov push add xlat and pop std jmp cmp (bad) push pop jnp ss jae incb mov std imul out andb int3 inc adc repnz sbb xchg ficomp jae (bad) (bad) sub ss (bad) (bad) lcall pop pop dec inc sbb jmp bound or imul mov pop inc adc push jmp cmp mov pop (bad) jg inc stc inc fwait sbb in push ret mov mov and (bad) (bad) (bad) (bad) pushl (bad) sub dec testb mov iret jecxz xor (bad) push pop ret (bad) decl lcall mov sbb cmpsb out sub cli mov inc inc jecxz ret cmp sub push pop jg imul jl push cmp (bad) call clc in cmp dec jno sub cmp xor enter pop mov jb or mov int int3 daa adc mov jmp or leave mov jg mov push jmp addr16 xchg std fs sbb or adc inc lahf cmpsl movsb sbb call (bad) call les fwait ret xchg outsl cmp add xchg xchg inc mov in mov (bad) (bad) call xchg sbb fcmovb lea dec adc dec mov jmp test mov cmp push mov jmp or pushl cmp mov aad xchg (bad) ljmp ds outsl test mov aas xchg cmp xor stos popa cmpl outsb sbb daa (bad) jo push jmp (bad) clc lods loop mov lret mov and mov dec stos pop in (bad) (bad) (bad) mov out int cmc mov jb cbtw push push xchg jae inc dec loop sbb (bad) (bad) dec lds ret dec dec andl idivb mov aad cmp cmp (bad) (bad) push fisubl (bad) mov inc aad out mov std je into aas iret mov add add (bad) (bad) (bad) in ret into test or fsubrs add stos push jae hlt fisubrl and scas (bad) (bad) (bad) mov xchg test jp into rcrb jp push mov in (bad) (bad) (bad) call xor and test in dec lods xchg or pop sub sbb scas cmc out (bad) (bad) (bad) out lods mov pop and repz movsl stc cs lret push testl sub push lcall (bad) fildll inc mov (bad) push out mov stos xorl jmp jp and bnd and or sub lods jmp jnp (bad) call xlat xchg and mov mov xchg mov xchg and sub pop cmp jp outsl clc (bad) jge dec jge shrl cmp pop jae or mov xchg mov ss imul add dec mov mov iret add jp inc mov mov pop or dec fwait (bad) push mov mov (bad) (bad) (bad) ljmp push push add dec pop jle pop xor pop icebp mov xchg jne loope arpl cmp (bad) (bad) (bad) (bad) in adc dec movsb loopne fs shll outsb idiv pop in inc lds dec lods or add and sahf fs (bad) (bad) incl dec addr16 sbb cs sub jmp sub in stc into and mov add mov mov cmc (bad) roll cld xor dec addl ret (bad) xor add data16 (bad) (bad) (bad) fdivl int3 or cli dec sbb fist mov mov out std xor ds jmp pop lods inc sti or lods lods jne call cmc add (bad) (bad) (bad) (bad) (bad) mov movsb repz repz loope in push out lret push pop jbe cmp adc xchg sar (bad) pushl adc or shrl cwtl and cmp incl push (bad) mov aaa (bad) out sbb lea mov (bad) (bad) call mov fwait jge,pt leave rclb iret scas rcl jno pop pop pushf ss (bad) (bad) jmp sub pop xlat cmp xchg sahf vshufps fs inc lea shrl lret cld ljmp or lret decl xlat ss (bad) (bad) (bad) call sbb add popl inc pop fsubl cmp outsb jp popa (bad) (bad) (bad) call out nop addr16 out sbb stos icebp cmpsl imul mov sbb (bad) (bad) (bad) decl pop fdivs int3 aaa scas iret int ret pop sbb out imul (bad) jg,pt fnsave loopne (bad) lcall loope arpl mov mov out and sbb ss je int add add movsb in xor cmp (bad) (bad) (bad) jmp mov push sbb into je mov push out cmp (bad) (bad) (bad) call xor mov loope idivb xor aaa jp dec movsl (bad) nop and (bad) enter lock cli (bad) (bad) jmp fmull pop sbb mov ja mov hlt (bad) call cmpl into jnp mov jne aad push outsl es inc inc popf pop (bad) ja test test (bad) (bad) decl les inc push mov mov lret mov mov hlt ljmp jg jmp xchg lret es push dec jge cli push jne inc cli movsl ret and or xor rolb test dec aad (bad) (bad) pushl xor xor sarl pop mov sub je mov add (bad) (bad) jmp fcmovne jne and cmc adc inc pop pushf pop icebp push (bad) stos xchg cmp dec int3 (bad) (bad) (bad) ljmp cs sbb push call xchg enter pop mov (bad) fs inc fldcw (bad) call sbb sbb adcl ret int3 push pop sub jne (bad) ljmp test xchg movsb jmp mov jmp adc adc fcmovnbe (bad) in enter mov inc (bad) (bad) (bad) (bad) dec sti pop pop sub repnz (bad) mov or (bad) aam pop sbb cltd adc sub inc popa stc ja adc xchg out fwait test das jb xor jns iret add jbe sbb mov (bad) call jmp out aam sub (bad) and aam ljmp and cmp lods ljmp mov dec jno jnp decl lret data16 mov push cs (bad) (bad) jg xor mov pop lds push out sub cmpsl push and lea (bad) (bad) (bad) (bad) mov int3 (bad) add adc lret lret jp insl ljmp scas and jl out mov sub fimul insb jns jns xor cltd (bad) (bad) (bad) (bad) jle or mov out (bad) stc dec pop adc (bad) xor lds xchg xchg aas xor (bad) lcall dec add adc jl lea mov jge add inc mov outsb cld dec sbb jns xor add jbe inc xor (bad) and (bad) decl mov enter xchg out cmp add cmpsb sub fprem or ljmp ds push inc mov lcall out pop xchg sub lcall mov (bad) push stos lret and xchg mov jg fs inc out add pop test or adc (bad) (bad) call xor inc loopne xchg xchg jl call (bad) jg jae mov (bad) fildll mov jp sti mov rcll outsb aaa (bad) incl hlt jl sahf ret sahf adc das call call lahf cmpsb ss ret negb pop repz mov mov jb xchg call ljmp fdivrs sub call mov mov ja push mov pop (bad) (bad) (bad) decl pmuludq and pop out add push jmp sbb fdiv lret mov rep lods mov std (bad) call out sbb fldcw mov popf imul mov mov repnz (bad) (bad) jmp mov loope mov fcoms push lods ss sub fldl hlt fidiv jns dec inc jl icebp jg sti pop xchg mov rcr hlt xor lcall and lods lahf pop adc negb sahf je ss (bad) dec fimul mulb or mov mov mov pop hlt lcall nop pop mov lahf add pop inc xchg add scas push cmp (bad) (bad) (bad) jle sub dec cli xchg sub outsl std movsl and jl pop sti xchg mov mov lock (bad) (bad) lcall (bad) lret and test jns inc add ret pop subl test nop push cld mov mov adc mov (bad) (bad) (bad) decl jmp cmpsl repz inc mov dec in push sbbb xchg add mov cmc pop jne pop (bad) jg (bad) mov add dec ss js mov negl push push dec aaa incb (bad) (bad) push clc jmp xor insl inc int3 les push sub and mov inc arpl jg into loop fucomp lock arpl mulb loopne xchg mov mov popf incl je lcallw mov nop add cmp decl inc aam jno jns jecxz cmp (bad) ljmp mov (bad) incl push mov rcrl (bad) icebp icebp inc hlt (bad) mov lret in imul inc (bad) stc sub int sbb mov dec dec adc dec (bad) imul lods shr (bad) mov (bad) decl pop jno and rclb add icebp xor test dec dec (bad) (bad) (bad) jmp sbb lahf xchg add repnz imul cmpsb mov push push xor in sahf outsl adc loopne outsb movd in mov stos insl loop ds or fsubrs outsb imul (bad) (bad) jmp out sbb outsb jle test pushl out call push adc push mov dec (bad) lcall cmp pop inc (bad) cltd sub mov loopne ljmp decl out std pop mov cs call or mov das adc (bad) xor cld (bad) (bad) jmp aaa jle in jmp pop adc in mov pop push mov push xchg out jmp xchg stos mov repnz (bad) (bad) (bad) pushl sub and mov or push cmpb lock aaa aad mov xchg gs sub jg cmc or mov rcrl (bad) fbld mov aam rorl push jecxz mov pushl xchg call bound (bad) jmp out outsl pop sahf and mov jmp lret cmp cmp pop inc pop jnp das sar cli insl out adc sub dec mov cmp ds pop fidivr dec scas lea movsb int xor ljmp sbb jge cmp gs cmp push (bad) (bad) mov movsb lcall test cmp dec jo fcmovbe lods push arpl fs (bad) decl sahf jmp scas into sub test test dec pop mov (bad) push mov xchg jb les sub (bad) (bad) ljmp push push inc lock pop test jmp cmp jecxz mov cmp (bad) (bad) fiaddl shrl out or jl xchg cmc fldenv inc sbb mov scas add ljmp lcall (bad) mov (bad) decl lret jp clc leave es add cltd jmp mov les mov sti out in cli push inc (bad) (bad) jmp xchg inc (bad) sbb bound fwait js gs push inc mov (bad) lcall mov loop add imul sub es incl scas mov mov ds int cltd outsl pop dec icebp (bad) ljmp inc inc push fcmovnu adc ret test sub movsl cmp add fstl xor xor adc (bad) (bad) jg rolb inc ficom (bad) jmp xchg sahf mov inc icebp les pop or (bad) inc xor jecxz add pop cmp mov dec and stos (bad) mov add mov stos leave fwait enter sbb adc aas (bad) (bad) (bad) call mov (bad) push mov jne mov or sbb inc scas sahf add cltd mov cmp sbb mov (bad) jl in lods inc imull test (bad) (bad) incl outsb ret je dec mov mov mov add lds (bad) jg (bad) or dec imul fmull push sahf stos mov adc ljmp cld ljmp inc pop cld je (bad) xchg ja ret mov decl int iret xchg gs push adc test jg popa mov sub dec dec lods gs (bad) pushl mov je or ficomp (bad) jmp sub mov test ljmp clc enter roll fildl sub or (bad) mov ss (bad) in leave pop add test inc adc aaa mov in (bad) lcall fsubrs jge mov jnp jne mov xchg loop in loop mov fisttp sbb adcl (bad) (bad) ljmp xchg rorb fisubr (bad) jbe add dec addb inc jmp jns iret pop fs (bad) xor dec xchg aas loop decl insl adc imul je dec mov sub mov ret xchg adc cltd mov insl push std jg scas mov test repnz outsl pop mov daa dec add cmp cld fnsave mov mov rol pop push ds arpl (bad) jg jmp xchg inc mov mov adc xchg cmc xor (bad) mov (bad) (bad) fcmovne lcall cs dec sahf xor adc mov outsl xchg mov addr16 (bad) (bad) call not cmc push and fs call mov jl clc sahf mov test (bad) (bad) lcall call add arpl dec lods mov add into sub (bad) fist mov loop jo xchg stc nop outsb andb clc (bad) fistpl cli shrb or add outsl lcall stos cwtl subb stc movsb sbb xchg inc push lcall int dec ficom (bad) (bad) (bad) out sti ljmp ss xchg or adc aaa sbb gs and fcompl mov pushl pop rcrb sbb lods iret mov sub fmuls add (bad) (bad) decl fdivrl jp xchg popf cwtl lret ja sti out insb fcomip frstor pop test cli dec fwait ds repnz jecxz ds enter rol add dec (bad) divl inc loopne aad add sub fisub (bad) lcall mov mov outsl lds mov insl mov (bad) (bad) (bad) (bad) ljmp add or add stos adc popa mov xchg lock aam cltd fbld pop jnp cmp add pop andb ret cltd or (bad) (bad) mov inc xlat jge stc sbb (bad) xchg sbb pusha jecxz int3 stos cmp test cld mov (bad) (bad) (bad) jnp dec inc push mov scas xchg lods xchg test test rolb sbb loope (bad) (bad) jmp mov es data16 mov sub test test or je mov jmp lret movsl mov cli ss sub cs clc mov pop stos mov decl mov (bad) fisubrl pop (bad) fcompl and insl popa leave mov add (bad) (bad) pop (bad) xor fucomip decl enter push sbb pop data16 dec push (bad) (bad) (bad) decl (bad) and pop andl pop aaa std fdivs sbb rolb pmuludq xor repz rcl ja jle pop mov cmp imulb data16 js (bad) cld ficom push aaa sub sahf jb xor lods or lcall xchg data16 scas lods dec push (bad) (bad) mov in mov roll shrb (bad) (bad) (bad) call jl lea lret in dec jne mov fildll xchg xor ljmp (bad) incl inc (bad) mov fcmovbe aad movsl insb jne popf pop dec sbb scas test js cli (bad) decl mov js dec mov sbb push or das cmp arpl pop xchg icebp loope shlb sub (bad) pop inc push adc mov dec inc (bad) popa cli (bad) mov jae (bad) sub push (bad) jno (bad) (bad) (bad) ljmp popf insb gs xchg jnp cmp dec test push xor scas lds add (bad) jg push sbb dec stos test lock rorl cmpl pushf cli xor das and mov test mov cmpsl gs (bad) (bad) mov popa push mov (bad) (bad) scas adcl lock fsubp sbb insl dec (bad) xor fcoml cli pop pop pop icebp jae add (bad) lcall sbb loop mov add adc cmpsb (bad) (bad) jmp mov add mov lods pop xchg jmp sbb cmpsl lcall cmpsl pop int3 ss fdivs (bad) call push cli cli pop je outsl adc mov xor dec movsl or pop push pop push inc int jl (bad) (bad) lcall jb mov mov sbb push mov push push pop sub ljmp das inc lret sbb movl jae cmc sub xchg (bad) jmp jg (bad) mov je mov cmp fidivrl ds fsubl (bad) (bad) (bad) (bad) fstpt das imul push or add inc push push fisttpll inc fisttp (bad) (bad) (bad) dec je push xchg cmc rcrb ja jno jl andl cmp jmp mov xchg sbb mov dec daa mov out (bad) dec roll push (bad) lcall lock add cwtl scas push sub add jmp add (bad) (bad) lcall mov ret lock (bad) cs adc fiadd or lahf dec mov fisub jae (bad) xchg in jl int sahf cmp ljmp push sub xor cmc inc mov lock rcrb ror ret xlat test cmp mov pop push push pushf (bad) (bad) (bad) pushl push movsb mov cltd add adc (bad) movsb in (bad) xchg (bad) jno cli cmpsb sub mov fwait xchg push jle (bad) jmp (bad) and mov sub subl sbb add pushf (bad) fbstp mov push push dec repnz fsubrl (bad) or mov (bad) (bad) call push aad in pop add ss clc fist push push xchg xchg push lock jg or (bad) dec test sub sub cmp int3 enter cmc add dec ret rcrb (bad) (bad) (bad) (bad) jl pop clc ret jns test nop push sub in mov xor stc mov (bad) (bad) (bad) call jge pop and out xchg inc cmp mov fmuls mov push outsl fstps adc (bad) (bad) pushl les add xchg loope out mov xor jmp push xlat xchg mov pop ds jge (bad) decl addr16 or inc inc (bad) movsl jmp dec in adc add mov js fildll mov pop (bad) (bad) decl mov adc jge into enter inc sar pushl pop scas jae popl mov mov cmp (bad) fbstp pop push cli scas inc mov mov in and cmc ljmp (bad) call mov jle fidivrl dec inc std xchg fs mov scas std popa mov notb inc addr16 sti jae jae scas cmp sarb push mov cmp (bad) js (bad) mov out xor std iret push mov gs jo xor popa jo pushf sar (bad) pushl fidiv mov jno loop,pt pop xor addr16 xchg mov lods iret lock (bad) jmp lock jmp push jo xor shlb cltd nop repnz ss cld adc xchg inc stos inc add into cld inc add ret cli inc fcmovu mov test mov push sub push push cltd mov (bad) (bad) ljmp iret aaa ret push insb sub pop lret mov xor or int3 inc fisttpl imul add (bad) incl mov mov pop mov fisubr inc and (bad) (bad) (bad) (bad) cli xchg outsb fbld mov pop outsl hlt mov push into jmp fisubrl xor outsb lods es mov cmpsb sub (bad) call mov mov jp sti enter ret cmp xchg pop decl inc das aad insl fisub stc cmp lret ss sar (bad) lcall sar push xchg and pop dec neg sub (bad) (bad) (bad) ljmp js (bad) inc adc sub sar test mov xor cmp out mov jg mov aad jb push loop stos push push (bad) (bad) (bad) jg inc and mov sahf add in lods and nop adc pop (bad) in and pop and inc (bad) (bad) in xchg pop aam jge out call push lds sbb mov outsl repz (bad) (bad) (bad) in mov outsl scas adc fcomi adc inc cmpsl flds out cli xor (bad) ljmp sub pop mov andl push sahf pop pop out in jo imul nop mov stos aam mov dec mov adc (bad) jg fsubp mov iret fsub mov mov fstps mov pop sub test (bad) (bad) clc stos lcall in imul popa insb sbb in fwait pop aam aas xor lcall cld mov scas in aad pop dec fsubrs aad call std lcall mov dec push dec fnsave (bad) jg popf out or push adc or jmp jae ja adcl cli (bad) jmp jp test icebp mov rcrb mov fimul lret push sub add mov mov rcl xchg (bad) (bad) fisttp xchg cli dec repz femms sbb stos inc mov xchg (bad) (bad) call enter scas dec (bad) push dec ja sbb aaa mov loopne inc or test aas out sbb sub lcall sbb mov (bad) mov jns idivb xchg dec sahf and notl arpl (bad) loop push (bad) pushl push adc mov mov jne ret push rcrb arpl add dec jecxz push pop fcompl jnp in mov xchg (bad) xchg jnp cli inc push and loopne roll xor mov push rclb das and push (bad) (bad) dec adc ds leave incb pop fdivr (bad) pushl out pop test mov jo add cmc push gs mov rcl frstor push ja pop dec (bad) (bad) jg ds add mov pusha test loope mov cs sub fdivl insl ljmp push sahf out int cmpsl mov dec addl (bad) incl jg pop lret jbe and jb int aam (bad) aam (bad) (bad) (bad) decl mov stc pop pop jno lea pop push outsl inc mov in outsl sbb ja (bad) (bad) out cli dec mov das pop push test cwtl test sub repnz xlat idiv jmp (bad) jmp sti mov sub pop cmp mov (bad) decl popa ds cli leave ret iret das xor pusha fwait adc adcl (bad) jmp jnp repnz cmp hlt into popa jb das sbb adc mov jle aam es aaa or mov xchg jo js (bad) (bad) (bad) (bad) mov out push fildll mov xor adc xchg jecxz imul xchg aas jl insl out jmp mov xor (bad) (bad) jg add cltd mov inc pop arpl and add push repz (bad) fcomip sbb jmp lock mov jne xchg xchg jmp ja (bad) push roll dec push adc ffreep push mov inc hlt xlat bound (bad) (bad) pushl insl stos insl in dec push call mov inc inc mov call xor into das pop fcomi (bad) repnz and and mov in mov xchg mov xchg cmp sti mov (bad) jns pop mov es add pushl pop xor ss lds and push dec mov cld (bad) (bad) (bad) ljmp (bad) out pop ss daa xor in cmp in (bad) xorb movsb (bad) (bad) (bad) incl in xchg adc push add outsb out fidivr xchg outsl popf and addl movsb mov fstpt add popfw loope nop daa ds sub dec mov (bad) (bad) (bad) push xchg add fnstenv neg mov or jl xor jno rcl sub decl or fnstenv dec add call fstps jo rclb subl sub mov ljmp iret (bad) jne cltd mov cld (bad) (bad) fsubrs mov add pop or aad push sahf (bad) (bad) jg mov (bad) cmc outsb pop enter test pop adc xor dec adc mov lea lret sahf outsb push add push imulb xor mov inc inc jl push push dec mov sub ljmp movsl sbb int3 mov cmp mov mov push adc fidivr incl loopne fsubl dec adc mov sbb mov or mov inc jmp inc pop loopne add test sbb or aaa (bad) lret push or movsb in lahf add scas fbstp shr mov xchg mov jo scas clc (bad) (bad) js (bad) js out jb pop pop incb push enter (bad) out pusha outsl inc decl xchg mov pusha push xor pop cld inc (bad) arpl loop rcl repnz sti cmp into inc add pushl lret (bad) (bad) (bad) pushl pop sbb inc or inc mov mov inc sarl cli push (bad) mov pop pop ss inc ds aas lcall (bad) push gs pop imul add jl,pt dec je stos push sbb loopne adc mov fild sub ss mov in imul into and mov loopne (bad) jmp pop sub sub jnp add aas aad std pop repnz cmp push pop add (bad) mov clc mov idiv and in mov mov fildll adc (bad) ljmp mov (bad) insl andl (bad) jns out stc xchg sbb jmp (bad) insb inc rorb push imul push xchg test jg add lock cli mov add and cmp sbb mov fwait dec pop out (bad) call hlt loope or push test gs xor (bad) push and xor cli mov (bad) (bad) pushl (bad) pusha pop bound (bad) xchg dec dec popf xchg push push sub iret in (bad) jmp cwtl jo lcall pop mov test pop and call jnp enter push xor ja xor sbb jge stc push and xchg inc mov das push dec sub (bad) (bad) decl (bad) xchg jns or cmc pop xor mov adc or mov xchg or mov xor ss insb sub (bad) add (bad) (bad) (bad) jmp out cmp fnsave sbb aam dec adc and outsl in dec or or sar push (bad) (bad) (bad) call jo lods adc scas mov cwtl js cmp mov jmp or push out inc push pop sbb (bad) (bad) jg cmpsl bound aam mov jno push xchg dec push inc sbb negb ret (bad) (bad) (bad) (bad) incl rcrb mov sub dec xor dec popf and cmp mov repnz dec mov fnsave sbb mov lock (bad) (bad) (bad) incl mov sub pop fwait jge scas mov pushl mov adc jl (bad) (bad) (bad) ljmp idivl loop and pusha add cltd cmp enter cmp sbbl pushl movsb adc cltd jmp fldcw adc push pop pushf pop jo (bad) (bad) (bad) (bad) cmp int3 jecxz in dec or cld sarb cmp or (bad) (bad) call mov outsb pop jge mov add inc shr jbe or dec pop xor (bad) mov dec cmp (bad) mov push and lods inc subl (bad) (bad) adc hlt mov jecxz adc jle dec sbb (bad) cmc stos mov lcall mov out sub (bad) (bad) (bad) ljmp or push loopne cmp pop ja push xchg arpl lret rcl (bad) (bad) jmp shl andb xchg adc loop push ljmp xchg call jg pop int3 iret jmp cmp rorl dec fs xchg into lret (bad) dec jg adc std imul rorl add jno or jecxz jmp inc lret lret or das jmp (bad) (bad) decl lahf or sbb and fcmovb pushf xchg jnp (bad) ljmp sbb iret cmpsl mov call adc mov (bad) lcall sbb xchg insb xchg sub mov pop into popa (bad) leave or arpl jle (bad) (bad) (bad) inc mov in ss ret clc xor mov mov stos out jno out sub mov (bad) jmp inc cmp mov or cmp jo cwtl cwtl (bad) (bad) jo jmp push or add dec dec add sbb arpl in (bad) (bad) call aam xchg call fistp pop mov inc fs lahf sbb (bad) dec jg xor lock push popa pop adc add lods fdivrl (bad) (bad) out (bad) pop mov or stos mov sub pop popa adc jecxz shrl fldenv lret hlt (bad) (bad) incl mov push retw fbld fstpl fdivp pop push es leave test incl push sbb movsb jge sbb ret (bad) (bad) (bad) lcall push loope fcompl jns pop inc push icebp cld repz jnp mov xchg icebp cmp pusha cli or (bad) (bad) jmp or aam std mov cwtl pop sub es ljmp dec xchg sar pusha dec cmc jg popa mov or push (bad) out cli (bad) fnstsw push jnp mov maskmovq notl sub push test std sbb les cmp jno arpl lods mov aad or dec push jmp (bad) (bad) (bad) call fcom xchg das scas mov fdivs jecxz mov mov in and mov shrb sbb hlt je pushf cmpsl adc pusha cmp sbb (bad) mov pushf sub int3 mov loope pop or pop test sahf mov (bad) (bad) jmp frstor nop daa push sub and dec mov xchg inc lcall pop fcoms wbinvd jnp dec pop (bad) (bad) movsl mov lods jb (bad) lcall mov jg gs push insl cltd cmpsb mov es sbb movsb dec dec mov inc addb and call inc or jne cmp popf or mov (bad) (bad) jg mov add mov push fcmovu mov inc mov xchg int3 mov add decl pop outsl pop push fsub sbb push pop inc adc cmp pop add ret mov push inc inc xor inc leave xor (bad) pop addr16 mov std ja sbb out std mov (bad) decl sub cmp jo movsl out das arpl sbb pushf in jp (bad) (bad) (bad) ljmp push add xor mov lds push push int3 out mov sbb sbbb (bad) (bad) fldcw pop inc sub (bad) fidiv or imul movsb stos xor roll loop sbb mov sbb rcr (bad) sahf cs xchg bound nop push test imul call stos outsl mov jne fdivs mov dec cltd jb (bad) ret mov and leave pop pop sub mov popa mov gs (bad) (bad) call fidivrl lcall (bad) out inc mov (bad) sbb movsb pusha movsb and imull stc imul dec divb (bad) cmp fs ficom sub jg scas mov or mov fiadd xchg xlat mov (bad) (bad) decl sbb inc pop add cltd mov xor in jb cmpsb dec repnz scas mov fidiv addr16 imul (bad) mov leave ret xchg push aaa and sub xorl sub mov addl add jmp mov mov and pop out out mov cmp enter pop imul pop hlt call mov icebp mov jbe in or aas xchg push dec imul in ds adc adc repz mov outsl mov add mov insl shl xchg pop (bad) aas nop cmp (bad) (bad) (bad) call push (bad) jle or in cs fsts dec pop mov mov mov jg adc mov jo pop roll mov cmp test stos movsb mov cmp rolb or mov idiv (bad) (bad) (bad) jp je adc dec pop jne lea popa mov cmpsb jb aaa nop xchg add mov and test or mov mov jns insb jmp dec (bad) ljmp ds cs rcl xchg xor (bad) (bad) sbb mov (bad) incl iret dec dec popl rcrl shrb or rcrl mov scas iret ljmp mov (bad) (bad) (bad) incl es mov (bad) fidiv pop and adc sub nop sbb std out mov add xchg outsl cli mov (bad) (bad) (bad) imul repz pop ret jo fist cmpsl fucom xchg sub fistpl jmp pop inc jae pop ja mov adc cli mov inc leave rcrb call outsb cmp ljmp icebp test push aam sub pop test mov enter call (bad) (bad) inc lret inc shrl insb cmp mov (bad) sub in fsubrl cmp mov mov sub in push inc (bad) (bad) (bad) jmp dec or movsl leave test int mov mov lods dec adc inc shll scas cli decl cmpsl daa pop inc aam xchg addl movsb jns inc cmp (bad) (bad) (bad) incl sti adc lahf (bad) loop sub jmp inc or jno sti jne and push pushl std cli cmpl std and (bad) jns mov xchg (bad) (bad) (bad) incl (bad) jo test cmp adc lret int3 mov lahf push pop shll out mov (bad) (bad) incl dec lret cmpl add setae xchg cmc cmp or adc jns incb (bad) push xchg cmp call dec movsl mov mov (bad) incl pusha addr16 sahf idivl subl arpl and add aam inc sub (bad) (bad) sub (bad) je ds mov std decb outsb popf sub adc scas push pop push aaa cld (bad) mov push ret cmp fiadd ret test mov (bad) ljmp addl xchg mov enter lds jle dec lcall out pop xor (bad) (bad) call notl aas sub xor jge (bad) push cmc xchg fs lock xchg (bad) sub std mov fnsave std loopne jl xor movsl lods int push pop int3 cltd (bad) scas sbb clc ret (bad) (bad) (bad) jmp cs js pusha mov cmp push jne push xor enter (bad) jg (bad) fbstp xor push call xor sbb inc (bad) call cmp dec or ja and inc xor xchg mov decl out sbb into leave adc int lcall mov (bad) (bad) (bad) (bad) call xor cs cmpsl cli mov push dec shrl jae (bad) (bad) mov shr jecxz inc fidivrl fisubl lods fnop adc adc call loopne push jns mov pop aam mov push push lea push mov les ljmp call sbbb push outsl xchg sti cmc jns lret lods mov int adc pop xchg mov stos jb xchg loopne cmp pop push mulb xchg add and (bad) incl sbb and popf xchg or pop dec jb insb fisubl arpl mov xor rcrl push clc xchg and call std push std pop clc mov test push xor jnp hlt (bad) pop push rcr (bad) idivb push lret (bad) (bad) fst push fldcw xor push ret orl jle ja cmp pushf pop test (bad) (bad) pushl outsl pop imul (bad) rcll jp jmp cld push mov fadds lcall cs adc pop mov les push test sar pop jmp outsl mov jmp push int3 dec arpl jb and add test inc inc adc mov mov inc iret (bad) cltd jbe push fcom cmp push movsb dec mov divl or add cmp ljmp adc xchg sbb inc sbb mov mov pop shrb (bad) (bad) decl scas xor enter mull mov test mov in sub (bad) (bad) cmp xor mov push or movsl fs xchg adc dec push push aad inc pop hlt (bad) (bad) mov and aad xchg jg dec ds and shrb (bad) jmp xchg lods lds mov lds repnz sbb (bad) ljmp add dec fstl mov ret cmp lcall pusha es ret xchg addr16 es (bad) mov (bad) mov adc bound js cli out adc cmpsb dec loope,pt addr16 pop pop cmp and mov out inc dec (bad) incl pop pop adc mov dec sbb sub leave mov cmpsl aas repz jmp ret (bad) jmp ljmp paddq rcrb test rcll sti adc sarl (bad) aas call imul inc and cmp or aas jns cld stc inc add (bad) decl mov xchg sub jle pop or sbb cwtl insl mov cltd js lods adc pushl pop jg pushf add rcrl sub into faddl dec loopne popf pop ficom cmp inc std (bad) incl cmp aas pusha or jbe test mov pop fiadd jo movsb xchg lcall ds fs stos clc (bad) (bad) (bad) ljmp xchg in sub in xacquire sahf fbld sbb pop mov into adc adc (bad) call imul aaa call outsl popf mov scas cmp dec push dec jmp stos jbe adc (bad) (bad) pushl push inc or es cmpsb mov or mov inc or test mov in dec xchg xor pop pop dec pushf sub in sahf xor and xchg sar ja shrb lods cmp movsb inc xor (bad) (bad) (bad) jmp rcll addl mov xlat fadd test pop insl dec pushl inc mov nop lcall pop push adc push loop dec push lcall incl or ret popa sub push daa mov or pop add lcall lcall xchg jle adc fdivr mov stos adc push js test dec xchg clc cld sub fsubs pop movsb mov (bad) (bad) decl jmp leave fadds xor mov scas leave mov cmpsb clc jno arpl (bad) (bad) call mov mov mov shlb test jbe pop aaa or xor mov int3 xchg pop addr16 dec lcall jmp mov fdivrl insb hlt cltd jecxz orl lock push add jge jo (bad) pushl pop xchg cs data16 push push cld icebp (bad) dec or inc sbb jmp pop cli loopne pop das mov sub xor ret (bad) (bad) (bad) ljmp mov dec repz cmpsl ret mov hlt and and cwtl xor lcall repnz jnp and or mov mov pop clc std (bad) lcall lds xlat pop mov jno xor add lret jp ljmp adcl mov xchg xchg sbbl push or cmc or or and push (bad) (bad) (bad) (bad) std leave jae mov cmp sub jmp test xchg sbb dec les (bad) pushl mov jmp sub xchg lret icebp xchg xlat mov fdiv in and add xchg jle fldl jns push cmp mov cmp inc (bad) (bad) (bad) jmp hlt out pop xor pop mov push mov insb push and mov jl fdiv cld pop xchg rorl xchg lods lea repnz mov (bad) (bad) (bad) pushl cmp adc out jae and push arpl pop cmp push jmp js sti xchg jns inc cmpsb adc push bound aas mov iret adc (bad) (bad) arpl loope leave push loop mov and int3 pop inc out (bad) pushl adc dec xor icebp adc jns scas jne fdivr pop sbb (bad) cmp adc or mov (bad) (bad) (bad) fistp cmp cmpsb mov stc sti es test shll rcrl (bad) (bad) call mov xorl std inc fwait mov cmpsl push fcomps xor pusha xor pop sub into into xchg cwtl jp sti inc or (bad) sbb aas cmp out xor imul dec lret call inc pop stos cs repz dec (bad) or or jns adc adc xchg rorb (bad) ds mov lcall outsl mov push call cmpsl adc sbb lods insl jns cmp jg mov scas xor cs pop and out nop int3 in call test or xor add divl cmp adc jge les lea sub dec cmp fcos push std (bad) clc jbe ret fldcw fcoms jle int mov jb push xchg xor and add pop push fimul pop aam test leave push addl aam loop jmp mov std (bad) jg mov das pop cld (bad) lea xor fwait js ja call cmp fidiv lret dec ds cs inc std mov icebp sahf (bad) lock (bad) incl sub out in sbb sub pop (bad) push push js lcall pusha lds mov mov and push mov sbb mov cltd ja sti (bad) (bad) clc fsincos jno mov test or (bad) dec outsl mull dec mov push sti out or (bad) push add cmp jns sub ljmp neg inc cld dec lret and (bad) (bad) push je int mov je inc (bad) mov aam andl inc lock (bad) (bad) decl push dec push mov mov push inc int pop arpl fsubp mov aas jb mov icebp fcomip call iret jmp pop movsl imul dec sarb dec loop or adc call movsb ds mov dec dec adc jmp (bad) mov std (bad) (bad) (bad) ljmp bound in mov (bad) pop sahf out jo enter mov fdivr (bad) (bad) incl and xchg dec jns lahf inc jp pop pop (bad) or add leave scas rcrl dec inc ja (bad) (bad) jmp xor mov sub xchg sar add pop xchg stos mov mov or mov test frstor (bad) (bad) sti inc cwtl cmp mov lock inc fcmove cwtl mov push pop inc add decl cwtl jmp cmp nop cmp sub mov dec (bad) lcall lods jo out add mov mov push aas jo into adc shrl lock (bad) js lret xor mov pop mov (bad) (bad) lcall lock loopne sub or xor mov xchg and incl mov test sub xor push dec xchg ds outsl lods add das scas stos imul and enter aam (bad) jmp pop and das jl push xchg mov adc pop mov jae sti stos call pushf cmp jp pop jns hlt xor add loop cmpsb push test and mov stc mov aaa cmp stos mov das sahf ja dec (bad) lahf pop insb shll (bad) (bad) (bad) call and jg xor xchg popf cmpl inc mulps pop rclb jbe add (bad) (bad) cmp jne cmpb outsl (bad) repz pop cmp push std (bad) (bad) jmp mov pop mov mov clc xor push out seta data16 (bad) incl xchg fs les ss (bad) (bad) call sbb jge into cmp out fisttpll sbb scas fdivp loop lock (bad) (bad) lcall popa fdivl out fldl imul std xchg mov inc adc (bad) loopnew pop (bad) sub (bad) (bad) jg (bad) int stc in xor outsb mov xchg sub incl fdivrl mov inc cmp xor pop pop (bad) (bad) mov jl,pt sti inc outsl adc cmp test push cld sub imul add and lock lock outsl jl cmp push ljmp stc lods xor lret call nop xorl jns lret pushf leave inc ljmp cmc ds insl adc rolb cmpsb jg (bad) jmp cmp inc and mov out pop add add (bad) (bad) ljmp insl fisttp push sub push add mov fidivl cmp jle (bad) (bad) (bad) lcall daa in insb xchg fadds sub mov jne sbb fidivr and xor sbb (bad) (bad) (bad) lcall fild jne add jae xchg sub lods sub pushf dec sbb cld (bad) (bad) jmp adc lea cmp nop cwtl gs push fldcw xor out adc push xchg cli movsb (bad) call mov adcb inc mov pop fstpl (bad) pushf (bad) (bad) pushl lret adc inc mov fdiv dec adcb outsl clc (bad) incl (bad) mov je adc pop cltd popf push cmp sbb add lcall lcall repnz or adc (bad) (bad) fsubrp imul clc orl cli fs enter loopne inc sahf jl pand and (bad) decl xor xchg les fbstp lds dec sub out fmuls clc add xor and mov into outsb or mov insb or (bad) ljmp or idiv fs xchg mov mov fldenv cmp add xor loop xor mov stos adc inc adc cmp adc ds mov mov mov push out rol adc sbb (bad) (bad) call add lahf inc add scas scas repz or fucomp ds push dec popa push jbe lock (bad) (bad) (bad) decl mov push push addb push sti push mov int3 hlt loope (bad) xor test call push outsb xchg (bad) icebp sub cltd es nop push (bad) (bad) (bad) js sbb fnsave and pop lods sbb and (bad) xor pop dec ds dec out fild daa fistp dec adc sbb ljmp fcmovbe inc sub pop clc mov and push mov jns cmp test (bad) (bad) jg cmp shlb rorb jo lret out or jmp repnz aad (bad) jns ljmp movsl cld ds popa and xor cmpsb xchg and cmpl (bad) (bad) ljmp sub lret fistl or nop les in enter adc sbb lea sbb dec adc flds (bad) (bad) (bad) pushl pop mov lods out and bound addr16 (bad) mov dec or sbb inc dec (bad) (bad) call insl movsb faddp int imul xor add dec or or (bad) pushl cmc xchg (bad) jo mov js inc lea inc bound cmc (bad) (bad) (bad) (bad) std sti hlt sahf (bad) jmp mov jg adc xchg push stos in cmpsb xchg (bad) jo push cmp mov mov dec push sub (bad) (bad) lahf lds mov test adc sahf (bad) (bad) (bad) jg pushf xor or push mov cmp xor xor mov enter sub mov sub lcall fpatan data16 mov pop mov test mov jns pop (bad) (bad) pushl mov out xchg dec into inc (bad) (bad) (bad) jmp out push shll outsl gs call ds xchg imul js cld divb loopne (bad) (bad) call xchg xor inc pop std mov movsl xchg mov ds cmp into mov inc stc test inc in mov push incl xor or adc or mov (bad) (bad) call adc add xchg (bad) fisubl sbb xchg add aaa lret test ret adc es (bad) (bad) (bad) (bad) inc push (bad) fcomip loope add jle cmp dec dec outsb nop mov clc dec shr jmp lcall xchg push (bad) push aam or sub gs push inc enter int3 (bad) (bad) fcomip arpl pop mov xchg sub pop push outsl mov (bad) outsb jle out stos cli (bad) call xchg push fidivl cmp xlat pop mov pop ljmp xlat jle or sarl lret add fnstcw (bad) pushl adc in cltd mov sbb push (bad) mov jno out lock lea les mov cmp sbb or mov ret mov xchg (bad) test aas cmpsl hlt (bad) (bad) decl (bad) fcomi cmova mov and (bad) popf ss inc aam clc xchg aaa add mov add push iret jo icebp call mov pop dec rolb ss decl test out fmulp push cmp shrl (bad) (bad) call jecxz gs xchg mov lods push btc sbb aaa rorl xchg mov int (bad) (bad) call ds inc jmp pop dec in sbb sbb mov pushf dec mov pusha (bad) aaa cld call adc (bad) je cmp xchg lahf stos rol mov inc and aaa jp stc (bad) scas dec mov mov mov arpl jb pop dec (bad) incl out adc nop pop stc mov adc cli push jne fwait push push (bad) xor es cmp xor stc cli mov xchg (bad) push xor out fsubl into movsb es addr16 arpl out es add jno (bad) (bad) pushl and sbb pop pop mov xchg clc stos xchg pushl sbb sahf and insb push sub loopne pop fsubrs jp gs cld dec xchg adc lods ljmp ret xchg xchg stc pop push xor in xchg idivb (bad) (bad) (bad) stc pop pop imul push sbb and or movsb adc and (bad) push scas or (bad) (bad) (bad) cmp clc dec xor enter sbb (bad) mov pop insl (bad) adc std in (bad) (bad) (bad) jmp inc cmp std push add outsb pop lods sbb adc dec stos sub add (bad) ljmp lret mov stc jle jl sbb (bad) (bad) (bad) lcall xchg outsl inc popa sub fadd adc xchg add dec and mov test jg mov adc push cli out jno jmp in and (bad) (bad) (bad) ds dec xor jo xchg sbb mov (bad) aas adc rcrl inc fld1 add pop jb (bad) (bad) jmp or adc jle scas xchg pop daa adc jle scas xor inc es (bad) (bad) sbb call shrl mov or in adc adc pop mov shlb inc dec (bad) (bad) (bad) incl aas adc push mov push icebp xchg push cltd xlat loopne sbb and mov add loopne (bad) (bad) call jns and add jg repz mov inc pop call mull sahf hlt (bad) (bad) ljmp clc push sbb arpl (bad) fstps jmp movsb fscale xor pop xchg or adc iret xchg mov (bad) (bad) lcall ljmp scas shl lods add pop mov fiaddl gs push fdivr scas push mov mov fucomp addb mulb pushl sbb sbb sub (bad) mov lods mov dec mov and (bad) inc cltd out jp fs push inc pusha aaa shrb fld inc sub (bad) cmc mov (bad) (bad) ljmp sub mov push cmpsl xchg mov test xor popa outsl and lcall jno rorl and dec ret decl jecxz popa and rcll popf loop loop inc test (bad) (bad) (bad) push add sbb mov inc dec sbb pop push and cld lcall test adc xlat sub aas (bad) (bad) (bad) jg scas xor js aam sub js xor ljmp scas xor lcall popa dec xchg adc (bad) xchg jae or pop in rolb outsb push xchg mov call pop jnp xchg test aam or adc xchg jge jge jmp fcoml or sbb adc (bad) (bad) incl test lods xchg or pop andl xlat dec sub jnp and or fidivr cltd movsl fsubl insl pop add rorb ja (bad) fcmovne adc mov aaa cmp xor or neg popf (bad) in enter push cmp imul xchg pop mov (bad) (bad) ljmp std icebp mov push sti sbb stos add sarb pop imul adc call cli cmp xor xor repnz call sahf cmpsl arpl ljmp dec push and pop iret scas (bad) mov mov push cld lret add mov jae mov (bad) decl cld fwait mov xchg dec cltd jb pop (bad) call fistp pushl add jg pop xor ljmp dec mov insl add fcomps sbb (bad) (bad) (bad) faddl jae rclb add jg pop adc pop inc imul test push and push adc lods cs repz jnp inc fsts test mov or lret mov idivl sub fcoms sar (bad) (bad) inc mov cli testb loope cld and fimul cwtl aad cmp inc inc and outsb push call hlt xor push ss lods repz dec cwtl hlt lret lret mov cmp adc and dec xchg ficom mov (bad) jmp pop scas ret stos insb in mov or pop je and out ds adc and leave orb scas mov pop imul pop cld (bad) decl sbb inc add ss add loopne push xor lock cmp icebp sub mov adc (bad) (bad) jg lock ret outsb out out inc mov bound lahf fmull stc das ds dec icebp sti sbb (bad) call add ds jns mov repz mov jge add mov lock (bad) incl cs pop mov cmp insb push jl add adc pop insb sub and fsubrp or cmp (bad) (bad) mov (bad) mov addr16 mov (bad) (bad) (bad) jg gs mov in mov popa dec pop sti int3 dec mov fisubr fsubrl mov mov gs dec (bad) (bad) (bad) stc push push inc iret cwtl dec stos or inc ja jmp leave mov ret add adcb sub incl pop aad xor sub add insb pop lahf mov push xchg fwait std (bad) mov ds lret jp out add jmp mov imul adc sub jb cmp inc sbb out cltd enter stos sub (bad) (bad) call imul add xor push (bad) nop or sbb out pop loop inc hlt push ljmp leave add iret sbb ljmp pop (bad) (bad) pop cli mov xor movsl dec mov out push pop (bad) (bad) pushl imul xor rcll add es mov popa das ret hlt rcrl push notl jb add jbe in and jle pop into jl mov dec lea xor cmp mov mov adc cmpsb and fcos mov scas arpl pop les adc repz loop fbld (bad) ljmp clc pop icebp icebp cmp push scas scas into inc (bad) imul lcall or pop push cwtl and (bad) icebp rsqrtps or jmp pop lret stc es fist ds (bad) pushl lods jecxz mov test scas mov std (bad) jg ds cmp leave xor jle out loopne cmpb idivb pusha sbb push bound stos lods data16 pop dec (bad) lcall and mov pop cld (bad) cmp mov jb xchg xor (bad) cmp xchg fadds (bad) (bad) (bad) (bad) mov or adc lds mov fild cmp jle sub lcall lock jle repz stos mov jg ficom pop fnop nop enter sub jno rolb ds (bad) inc cs push and sahf addr16 (bad) cld add jae (bad) ljmp ds std xor cmp adc mov dec cmp (bad) (bad) decl outsb fcmovnb popf mov inc sbb rcrb (bad) (bad) leave mov push std stos push lods jl out je orb mov lret dec dec cs cmp (bad) mov ret xlat sahf andl aas sbb cmp fsub int (bad) es (bad) inc push dec stc enter gs test ja mov lcall into lea sti testb jle mov les in cld lcall dec testl xor (bad) (bad) lcall imul out ss das xchg ja lret sbb and lds fildll mov inc pop mulb hlt fwait dec jmp fiaddl xchg dec sahf (bad) jg ljmp sub pop mov inc xor and push xchg jne sub movntq out (bad) jae ja (bad) inc xor test inc jp loopne and or mov mov loopne jge pop lock inc (bad) shrl cmpsb sar cmovae (bad) (bad) (bad) (bad) jle mov dec add mov (bad) cmpsl jnp in xchg adc les aad mov sub out negl movd hlt (bad) jmp push mov xchg cmp ficomp out adc aad popa jb aam lcall rcll out aad adc (bad) jo cmpsl cmp push adc cwtl mov xchg sahf (bad) call cld push push inc mov mov mov imul notl xchg pop sbb outsb pop out or dec push mov xchg repnz xchg (bad) (bad) incl mov sub in mov sub loopne scas insb std fwait mov cwtl mov icebp xor push cltd sbb (bad) (bad) call popa mov orb xor dec pop call sub jb lret ja xchg add dec mov outsb scas adc fstpt and jg sahf sub adc int fwait test cli lods popa dec xor leave in incl add xor dec fisubl call inc movsl and pop cmc mov push jl cmc mov jle loope lret popf mov jmp mov test mov fs jb (bad) (bad) (bad) incl divl cmpsl xchg cmp popa out cmc fsubl or iret jno arpl (bad) mov mov xor adc mov jp dec cmp pushl push lahf jp data16 add test (bad) mov data16 cld shll dec scas sti lret ja (bad) out idivb (bad) dec movsl dec adc mov add add cmp stc dec cmp mov add addr16 and flds out das test (bad) call loope stos adc aam call icebp ds lock push mov (bad) jmp icebp push or lea inc xor jbe pop ds mov xchg cmp and nop cmp (bad) (bad) (bad) jmp ja xor arpl cmpsb movsl push mov jmp cltd xchg into add mov (bad) (bad) call pop (bad) dec jbe and enter popf js (bad) (bad) aam push jno loope aaa into popa push je pop loopne pop and (bad) movb mov aas pusha sub sub (bad) (bad) ljmp adcl pop idivb (bad) jns xchg xchg aam inc xor and repz in adc add inc add adc negl addl xchg out mov inc and push pop ljmp cmp push in adc cmp fs mov ret cld pop popf adc cmp adc pop jg adcl mov aas mov sbb jmp fisttp pop enter lret gs jae push icebp rcr fnstsw test xchg scas call add ret add jb insl out (bad) (bad) (bad) (bad) stc scas addr16 add cmp icebp idivb movsl cmp test test inc jp (bad) adc (bad) (bad) lcall adc ja or adc ss das mov mov cmp sahf mov jge xchg pusha movsl xchg xchg pop add push mov into das rorb pop clc or fiaddl (bad) (bad) (bad) incl mov cmp mov xchg inc imul insb (bad) fcomip (bad) (bad) mov mov rorb mov dec rcrl clc (bad) ljmp add sbb mov dec xchg pop add pop push (bad) xor mov hlt test add add test imul lcall or rorb testl imul outsl xor sbb loope (bad) pushl test js sti out mov sahf dec inc push (bad) xlat push sub cmp mov xor (bad) ljmp dec mov xchg cmp lods imul out cli jmp test jne ret pushf ret imul pop mov (bad) fistpll inc fidivl (bad) decl (bad) (bad) (bad) mov (bad) test pop sbb inc adc mov lahf fdivl (bad) je jae pop sbb inc mov or (bad) pop mov bound lcall bound out mov stos js pop and push bound push popf (bad) (bad) (bad) inc add dec stc call (bad) outsl imul dec fisubl aaa push mov xor call std (bad) (bad) (bad) mov mov xor push aad stos movsb dec pop add adc sar ljmp and push repz loop xor jg and lahf and push bound inc jbe outsl (bad) (bad) ljmp push xor js pop daa leave sbb in imul xchg xchg scas add xlat mov lahf cmp lcall decl pusha rcrb add mov fiadd xchg sub testl pushf (bad) mov push lret daa mov (bad) sub push and hlt sarb mov cltd dec pop mov sahf inc xor mov pop push xchg push scas (bad) (bad) mov bswap adc pop push sub push or xchg or ror fisubrl mov call push bnd inc mov test ja jae push or inc push pop mov push adc and gs (bad) (bad) incl jp push pop adc (bad) or mov mov cmp cmp cltd pop inc lock fcomip lock scas stos push add iret rcrl (bad) pop mov jb int3 cs sbb adc cwtl xor mov jmp pop cmovle push movsl and xchg xor fstps or stc lcall ljmp std or mov fwait icebp dec lds push int or mov (bad) (bad) push in nop cmp jle sbb punpcklbw xchg pop jmp mov cwtl addr16 dec loope dec push mov cli sbb movsl pop cli mov (bad) pushl add fstpl loopne popa add push and mov push xor (bad) (bad) (bad) out enter inc adc cmp or xor cmp xor push lock (bad) mov fmull push inc sub scas xchg (bad) (bad) incl enter mov and push mov mov jno es mov (bad) (bad) call fidivr insb (bad) push mov sbb push ret add xchg lcall in test lahf sbb mov (bad) mov jmp inc fstl loop mov in mov jg (bad) ljmp subl pop sub lahf mov push add xor decl (bad) stos js clc sbb mov fdivr in xchg cs cmp sti cmp sar add push jle ds xchg aam jo addr16 insl cmp (bad) (bad) (bad) lcall inc push mulb and sub mov push imul mov ds mov dec pop jae pop cmpsl dec or ss mov rcrb call ds xchg adc mov cmpsl push js inc hlt (bad) incl jge jne adc (bad) inc jbe test inc push mov mov pop or xchg cmpsl ja jg daa xlat repz mov in fistl push cli test (bad) (bad) (bad) decl inc leave xor data16 cmpsl adc add lcall fndisi(8087 sub jg (bad) (bad) mov jp mov (bad) leave pop cmp cmp fsubrp incl (bad) (bad) (bad) call loopne sarb shrl pop (bad) inc loopne and adc loopne cmp negl data16 ret mov andl dec cwtl aam add adc pushf out gs (bad) incl (bad) je xor cmc xor sub int movsb jo repnz jl mov sbb data16 loope pushl mov mov inc sbb in (bad) (bad) (bad) jmp in loopne fdivs lock mov jle out add add cli mov add lcall cwtl jecxz stos jl mov (bad) (bad) (bad) mov pushl cmp xchg cmp sbb movsl xchg jg outsb mov xchg (bad) (bad) jg push xchg push jg mov bound sbb cltd pop leave mov (bad) pushl sti mov cmp pop add mov and shrl xchg add (bad) scas xlat jo stos add pop xor lods arpl (bad) (bad) incl std (bad) cmpsb test push test enter das push push push stc insb dec in jne not pop aam mov add mov (bad) lcall int ds xchg sbb cmp dec push sbbl push (bad) (bad) (bad) call cwtl sub repz fwait xor adc add inc xchg pop cmp (bad) (bad) (bad) (bad) fldenv lahf shrb loop inc jne cmp pop jns fs add fwait (bad) (bad) (bad) call sti int3 jns fimul int3 pop stos (bad) js push das push sub rclb outsl xor loope push movsl icebp add inc (bad) (bad) (bad) call xchg in out addr16 push cwtl (bad) cmp into mov popf aaa fimull outsb adc (bad) (bad) (bad) call dec into cmp fs imulb and mov adc mov push and popa mov inc add addl call mov pop scas push mov lcall (bad) out ret jns sbb mov mov mov sti or inc push add xchg cmp fistl test sbb int mov (bad) ljmp loopne jbe lahf into dec and cmp (bad) stc cmp dec inc sub jg inc jbe insb fcomip fstpl jno ret push mov enter (bad) pushl mov adc call mov stc jge (bad) lret addr16 mov dec jge sub shlb retw push sub loop rcrb int3 nop (bad) mov subl jns fcoms pushf and mov in mov or (bad) (bad) (bad) ljmp out pop xlat push outsl sbb xchg inc push and in mov in clc push (bad) clc test fisttp cld jge aam sbb bound mov mov dec jle push inc test mov xor cmp nop sti (bad) stos ficom inc mov cld inc lea (bad) repz in test pusha sub jp (bad) (bad) (bad) mov mov pop cmp xchg sub dec stos add add dec mov repnz (bad) (bad) (bad) lcall jbe clc lcall jno xchg cmp lods sahf aad inc mov jo fs lcall iret pushf (bad) or pop flds leave (bad) (bad) lcall or loope ljmp sub xor dec imul outsl and cmc xor aam mov and add mov and sub (bad) cmp rorl mov adc sub iret fimul xchg inc xor lock (bad) (bad) cmp int loop les push jb in sub (bad) iret cs ljmp std inc xor jno pop (bad) and sti mov push (bad) jg fs mov cmpsl addr16 pop sahf cmp fldt cld fimul pop shl pop ret mov (bad) ljmp mov push repnz int scas cwtl stos divl mov fwait loopne loop (bad) (bad) pushl push mov roll mov jne mov shlb outsb sti mov (bad) (bad) (bad) incl mov mov pop mov lods push fldlg2 jp cmc sub das cmp fbld popa add ss xor insb (bad) (bad) (bad) mov mov or mov add push dec (bad) dec pushf lds (bad) loopne dec push (bad) decl pop xchg sub cld xchg in int3 js pop repz lds xchg pop imul xchg insl lret push nop dec ljmp fldenv sub arpl xor xchg pop std add cli push cmpsl pop fildll ret xchg les (bad) (bad) dec adc xchg sub add in cmp push mov and (bad) ljmp mov push test das ljmp cmp xchg add ljmp add push mov cltd fld xchg cmpsl pop xor call aam (bad) icebp and xchg jbe xchg mov xchg lcall test (bad) scas sti xlat pusha insl mov push nop out test cmp sbb mov adc lahf lods cmpl (bad) (bad) (bad) call call int pop adc and movsb daa leave aad mov or ja (bad) pop movsb (bad) (bad) (bad) pushl xchg leave mov xor jo add and dec cmc out movsb xchg xor icebp sbb mov lcall test xor mov (bad) (bad) ljmp sbb jno out andb out es sarb sbbl jp (bad) (bad) (bad) decl test pop sub adc sub iret sbb icebp dec mov test (bad) push mov cwtl xchg (bad) test jb loopne sub jbe in out sbb push adc mov cli (bad) (bad) (bad) call sub or repnz out push mov test xchg jne fadds out mov loope mov cld leave mul and jmp xchg nop xchg call (bad) jmp fs xchg jno fnsave data16 jne mov jecxz rorb test (bad) test cmc (bad) (bad) fmuls pusha dec scas dec insb lds inc gs mov (bad) (bad) out ds aaa insb xor mov cmp jecxz jle jmp or add (bad) (bad) (bad) out sub adc dec pop jmp test imul push cmp mov rorb mov stos aad cmc leave repnz (bad) (bad) ljmp inc push jg ja lahf repnz push push fsubl push mov ds fwait or sbb mov call push test inc dec dec in cmp test (bad) (bad) incl loopne imulb xchg dec add cmp and popa xchg adc testl cmp inc icebp movsl popf jmp (bad) (bad) call movsl cld movsl nop inc es popa es push lret in push jle (bad) js (bad) (bad) jg pop stos jle push mov jb mov int out in ljmp hlt decl lock aam mov imul out stc (bad) ljmp fidiv pushl pusha mov sub (bad) cmpsl and push push cltd mov stos inc sbb add sarl (bad) (bad) (bad) pushl sbb out clc fcompl out sub xor sbb dec jb pop jl fsubl loopne test (bad) incl jmp es lcall or ja (bad) lcall sbb dec xor mov aas sub xchg ljmp std push cmpsb ljmp inc inc repz in bound dec stc ss jno arpl (bad) (bad) mov (bad) movsl add cmc jno ror mov add cmp (bad) mov cmpsl xor xchg jmp pop adc sbb xlat fisubrl lcall gs cmc out out fcoms inc push fwait cmpsb dec mov or mov push data16 jg dec push lcall xchg nop jg (bad) call or (bad) push aaa adc sbb arpl dec pop xchg popf xchg fdivs test das push imul out inc pop dec pop push daa or jp ds mov mov (bad) (bad) incl lret inc jge movsl fidivrl cli call mov xor xchg or stc and (bad) (bad) (bad) aas sahf pop push lods js jge or mov (bad) xchg mov jo cmp jne sbb sbb outsl (bad) into add jbe jnp dec push hlt (bad) (bad) (bad) lcall cs loope cmp mov dec xchg dec cli sbb faddl or mov pushl (bad) and fwait loopne push out (bad) mov dec sub popf add xlat sbb mov pop cld add mov xor push jl sti cwtl mov (bad) (bad) (bad) decl pop jmp lret jo repnz std mov or aad ud1 lods sub or mov cmp (bad) (bad) call sbb cmc mulb cli inc xchg cmp inc test sub pop dec adc (bad) call mov jb add push ja test cs inc ljmp adc pop cwtl int3 xor and (bad) (bad) (bad) std xchg icebp pop enter sub or cltd rclb mov daa xchg aas pop (bad) (bad) (bad) (bad) fistpll or sub movsl xchg jge pop sti (bad) ret push das int3 sub loop dec pop dec out pop loopne push xchg ret mov fcomps adc int movsb std sarb push test push push pop je push movsb and pop icebp outsl decl test dec (bad) xchg ss repnz lcall adc (bad) (bad) (bad) ljmp or xchg daa inc and repnz cli test jp sbbb es repz mov imul enter (bad) movl fs dec mov add adc cmpsl movsb push mov (bad) (bad) (bad) ficomp cltd and dec ficomp fdivrs mov sbb jb mov lods mov sub inc (bad) (bad) (bad) mov sub scas imul test lcall dec push ljmp mov push roll mov jg decl shlb pop inc cmp sarl mov daa scas mov stos js dec ret sti in cld adc mov call mov (bad) (bad) (bad) call xor arpl xor push popf jge mov (bad) cmp out ficom pushf repnz in cmp inc (bad) jmp xor int3 jle inc add loop mov rcrl imul divps dec push (bad) (bad) jmp jmp jns bound xor mov inc xchg fs fisub in frstor lcall enter into sub pusha lcall mov mov inc cmpsb stos ret (bad) (bad) jmp lret add lret add jns add xor (bad) pop pop mov lcall or push and and mov fisttpll xor scas bnd bound mov inc adc in (bad) push jo insb mov adc jmp decb lcall dec xchg mov sarb mov (bad) (bad) decl inc push mov pop sub dec add mov adc lods (bad) (bad) (bad) push and leave pushf mov (bad) sbb jo add enter (bad) (bad) (bad) decl pusha ds push (bad) xchg mov mov into mov imul clc (bad) (bad) pushl leave roll ljmp insl push adc aaa fsubp add sub (bad) jg pop enter sub popa xchg lods inc lret and clc out shl pop ret pop nop jmp jl bound inc add (bad) (bad) fimul mov daa addr16 sbb lcall mov jmp xchg sub je divl jl (bad) (bad) ljmp jg (bad) loope inc jl mov jno rcrb mov (bad) (bad) (bad) decl (bad) icebp aad mov mov adc add shrl (bad) jg or xor clc (bad) jmp cs sub dec insb sub arpl adc fucomi das lcall inc xor pop std test add pushf pusha adc cmp sub sahf sbb cmp dec add insb (bad) (bad) (bad) jmp push sub lods lahf xchg inc iret leave sahf ret arpl rorb mov fldl ja push bound stos dec loope jp mov jbe icebp mov inc inc clc (bad) ljmp fwait (bad) mov sbb cmp test push mov data16 mov fs outsl pop icebp nop inc (bad) (bad) (bad) mov ja xchg cmpl (bad) xor jecxz ret incl jmp test (bad) pop (bad) jae xchg jle das sarb push decl pop mov xor mov jp cmp data16 (bad) (bad) (bad) incl jae and mov sbb mov push ljmp add cli push (bad) jg pushl ds jecxz adc cld scas lock mov notb (bad) jmp pop ret pop xor data16 (bad) enter mov je (bad) (bad) jg pop jbe sub cmp sbb test shr (bad) ss mov pushl shrl repnz (bad) cmp (bad) decl icebp fcompl lret sbb mov imul mov sahf sbb add and inc (bad) mov mov adc xchg (bad) (bad) call into in cmp js fs jnp outsb mov in sti and (bad) push mov lods or push push mov rcr rclb (bad) fnstsw (bad) pushl adc or push movsl mov inc adc in daa xor inc dec cltd (bad) (bad) ljmp incb push jbe and inc pop mov cmp scas lds (bad) (bad) (bad) jmp mov (bad) lret aam call mov and sbb into push loope es cmpsb adcl push add pop xchg stos jle pop ljmp sbb sub cs (bad) sahf sbb shlb and push sbb dec in mov or pop push sbb aam repz arpl mov inc (bad) decl sub mov push inc cpuid (bad) mov pop sub and arpl push fcomp xor (bad) call fwait mov lret (bad) fpatan xchg xchg fist pop lods and call ds sbb popa push call xchg inc mov (bad) (bad) (bad) ljmp call fucom movsl lcall push scas test sub pop adc cwtl cmpsl cmpsb fsubs inc mov (bad) arpl or cs sub enter push mov fs (bad) (bad) incl popa ret mov inc clc out push clc test pushf (bad) mov push add cs imul arpl (bad) (bad) decl test adc jae ret push in push cli pop add jne jg fcomip pushl mov sbb icebp pop ljmp xchg jb ret jg or push xchg jno mov inc (bad) fistp add imul and (bad) (bad) (bad) (bad) fsubrs mov outsb mov ret xchg sub push push or loope inc jno sub (bad) (bad) ljmp adc movsl movsl in xor adc sbb es xor (bad) xchg (bad) (bad) (bad) (bad) mov adc in add das lahf cmp inc aaa push and jge sbb (bad) (bad) (bad) call jmp inc mov and inc cmp push invd and rep (bad) mov adc mov cwtl mov int mov mov or pop test jbe or add sbb (bad) jmp sbb fisubr stos outsl jmp and mov mov sub (bad) (bad) ljmp sub sub dec sbb inc xor dec sbb repnz mov (bad) out mov ss push or inc push adc dec dec outsb lcall cmp pusha mov clc insl jae pop mov (bad) pop cmp mov push call add pop dec adc out mov mov into out mov sahf jno mov xchg ret xor not dec movsl addr16 (bad) (bad) ljmp adc repz pop fwait sub movsl pop jecxz into (bad) (bad) fstpl dec xchg mov out clc out jg (bad) xchg pop pop outsl aam mov and ds fbstp (bad) (bad) (bad) (bad) inc movsb inc mov ficomp jge mov pop xor pop es lods popa pop (bad) (bad) (bad) jmp shrb cmpsb fidivr xor dec sub mov in xchg loopne jmp (bad) (bad) (bad) (bad) clc push incl pop dec mov or nop xchg push lods lcall cmc ret jle lea enter dec push cli jmp imul mov dec scas sahf (bad) out and or es jns,pt in aad mov movsb frstor jp jge pop cli add xchg xor and ds jo (bad) (bad) (bad) (bad) cli dec out jns test or mov fisttpll mov (bad) cmp lods leave ljmp clc decl rclb jne xchg call gs lods fcoml pop add jns (bad) (bad) decl cmpsb aad rcr mov and jg push je lahf mov (bad) (bad) lcall fisubr cmp loop cmpsb mov mov scas pop fnstcw (bad) (bad) (bad) cmp adc mov rorl jl sub imul leave pop push (bad) (bad) decl mov dec mov jo movsb imul xchg jmp or mov inc mov or ret adc inc cmp pop cmp cmp ficom adc jmp pusha mov cld inc dec (bad) and sub pop pop in sbb and jge pushl std lds cmp xchg pop sarb adc adc xchg cli (bad) (bad) jg jg mov stc dec out imul aad sub sti add adc into cmp jmp mov push les jl lcall jno,pt and pop call sub mov (bad) incl sahf xlat in js enter add shlb jno sub ror insl pop int3 inc push dec das or cmp ds fildl cmp pop sub pushf imul std incl add cmp lds pop mov push mov dec xor int3 push inc inc lods ss pop in mov dec lods call mov cli cmp push inc fist sbb ss std into push inc add jg rolb sti adc pop pop add cmp scas negb or inc push push mov (bad) (bad) (bad) pushl call sbb and nop jp jmp mov mov dec out scas (bad) (bad) (bad) (bad) out fs mov test scas rclb or sub dec aaa push mov fcomp repnz lods (bad) (bad) lcall cmpsb or cmpsl cmp mov cmp xchg jge dec out jp push cli sbb (bad) jle sub lods cmpl push adc push mov inc in cmpsl outsl fmuls jp (bad) push and je jns (bad) (bad) push (bad) nop push dec jg and ss les cwtl ja mov aas adc out (bad) (bad) (bad) clc adc push fisub sub inc andl add (bad) pushl or jge outsl in loopne pop das mov cmp mov cmp dec add lret sti push mov mov cltd mov inc rcll adc arpl ret jecxz cwtl xchg mov (bad) lcall bound jo (bad) jnp rcrl fidiv fdivs mov jb ss fcos decl adc and jae,pt jb push inc icebp mov insl aaa dec adc (bad) jmp push push mov pop jge push sbb faddp (bad) jl sbb dec cmp push pop icebp dec imul icebp (bad) (bad) jmp inc sbb sbb in or mov pushf mov icebp clc (bad) (bad) (bad) fiaddl inc add cli incl jmp repnz mov clc aam push add int3 cs sahf icebp mov sbb enter sbbl aas xchg sti inc (bad) inc adc mov cmp sbb leave inc bound (bad) lcall into test inc inc or mov mov mov (bad) (bad) (bad) jg mov arpl inc das inc lock jmp mov xchg sahf leave and ljmp clc popf (bad) out sbb ja ds jne out mov or pushl imul jns cmp lea (bad) dec push outsl xchg mov cmp lods (bad) (bad) (bad) fistpll jp hlt repnz gs gs and mov daa (bad) or (bad) pop and cwtl pop enter push outsb fptan dec inc xchg jg inc pop add xchg lods inc fwait sub xor mov mov (bad) jne inc imul push call cltd jae jae into push (bad) (bad) lcall (bad) cwtl adc push (bad) mov jmp inc or pop and inc aas ja dec mov (bad) (bad) (bad) incl or cmpsb fsub or rcl in mov or test cmp shl lret lds xor mov mov sbb insl xchg or sub cmp js (bad) (bad) (bad) (bad) jmp ret dec sub pop clc add out imul out pop pop cltd clc int3 in popa outsb (bad) (bad) (bad) (bad) cmp cmp xchg fnstcw add pop ss sub or in mov and mov insl dec arpl mov out jecxz mov xor out test (bad) sub fucomp lret mov sub pushf lea cli jns cli (bad) pushl (bad) jo enter mov xor mov (bad) jmp push and push mov les pop xlat imul (bad) jmp fst (bad) stos frstor (bad) add cmpsl adcl fs (bad) jg mov (bad) pop pop mov adcl leave jg imul lock notl and dec push (bad) (bad) stc inc pushf adc (bad) (bad) (bad) decl jp,pn add sub addr16 cmpsl loope xor hlt mov adc (bad) (bad) cmp lds jnp outsb sbb out push repz cmpsl roll add xchg xor outsb mov shl dec movsl fwait ds push dec sbb xor ja ljmp sbb cs lods adc out pop mov subb pop sti int cli inc bnd (bad) (bad) pushl rcr cmp cmp test push popa xchg mov (bad) mov test lret mov (bad) pop and or mov xorb fiaddl inc das test int3 xchg lock out dec mov ds out xchg sub (bad) (bad) ljmp mov push divb jp aas pop ja (bad) hlt (bad) push jmp (bad) (bad) (bad) (bad) jmp jle (bad) sbb push xchg jnp add mulb lcall das pusha (bad) (bad) jg dec jp jg sub push pop and jne das push dec pop aam jo dec mov pop daa add (bad) xchg sub mov call mov mov enter mov dec or sbb or test (bad) in repnz int3 cwtl xchg arpl imul mov in test push xchg gs outsb sbb push jp sahf mov (bad) jnp mov into repnz xchg incl out adc cmp xor hlt jae sub loop mov lcall ds xor loop daa lahf and popf popa mov dec scas or into clc in and out and in mov and xlat insb outsl dec (bad) ljmp leave cmp int3 push jmp jb outsl jmp fs (bad) call mov and addr16 sbbb iret setae jb adc cmp lds mov (bad) (bad) jmp sahf jmp gs lea movsb repnz inc (bad) fild ds mov (bad) icebp repz add scas jbe icebp push std lcall lahf dec cmp hlt int3 adc and jo,pt dec cltd xchg std aaa cld aad je inc jmp aas (bad) ds (bad) (bad) call incl test jno mov (bad) aam jge dec in lods mov sbb ds mov movsb sub mov pop mov add mov or or or data16 in pop xchg jge,pt mov test insb xchg inc (bad) sti push sbb stc idiv cmp pushl pop es mov mov (bad) cld mov cld xchg imul jmp dec gs mov call sahf fdivrl fdivr clc sti nop stos mov ds int shlb lock fistpl adc pop ja shrb (bad) (bad) jmp add xor aas pop mov mov sbb sub push pop push mull call pop push push jge test inc jecxz jmp xchg int (bad) xor (bad) (bad) inc and inc aad popf ret popa ret cltd adc sub mov cmp and call ds jmp xor neg aam mov cli mov mov scas leave pop jo push add movsl xlat loopne jmp adc lret xchg loop (bad) pushl aam cmp out sub add fisttpll or loopne jb out jmp insb mov jg repnz sbb (bad) (bad) decl push mov popa jp out cmp push pop lods dec lahf inc pop pop push mov pushl adc out sub out pop xor or mov inc test shlb (bad) or repnz cmc sti push pop mov test (bad) (bad) dec adc mov in mov inc xchg cmpsb and mov xchg sub clc gs pop (bad) (bad) (bad) incl ss add imul push sub pop ds pushf xor call popa mov or hlt push sbb iret loop das (bad) test rorl test fcoml insl lods insl (bad) (bad) push xchg adc decl mov sbb popf inc pushf sbb mov mov test lods sbb popa fs in test mov popa loope adc (bad) (bad) jmp aad adcb xor adc (bad) sbb fmul aaa (bad) mov pop ret call lock inc sub dec (bad) mov pop mov mov (bad) cmp xor lcall lods loope jg ljmp mov mov call (bad) xchg or daa cltd mov mov ljmp leave sub mov ret je sbb rol sub (bad) (bad) lcall fnsave xor scas push xchg ljmp lret and fucomip mov xchg (bad) (bad) fcomip push mov lcall push ret adc adc sbb (bad) adc or push ret out bound and add jge cmp imul add rcll leave ds jg pop push pop cmp scas adc mov add cmpsb icebp or cwtl mov (bad) (bad) (bad) (bad) jge or adc xchg cltd jecxz and sub sub jle adc mov (bad) (bad) (bad) pushl pushf sahf add mov sub or lret mov and pop and popa fwait cld lds mov pushl mov out cmc outsl mov xor mov shr (bad) mov dec and fstpt scas (bad) mov pop cmp pop lret push sar (bad) (bad) incl (bad) dec lods aas mov ret loopne out cwtl addr16 out push add aas shrb pop stos adc incl mov sbb dec leave mov sbb sub movsb cmp and (bad) icebp xor sbbl cmp lcall dec dec mov push stc jns xor sub xchg (bad) pop (bad) (bad) call pop outsb cmp or int sub bound cld push cmp (bad) ljmp pop sbb imul pop (bad) mov aas jge push cs clc (bad) mov xchg movsb mov in mov ljmp lea push xor nop push xchg outsl pop (bad) incl into mov cld scas or mov stos out lods or icebp fcomip (bad) (bad) fnstsw insl inc mov pop xor push adc insl xor add (bad) (bad) call negb mov fstpt popa fimull movsl mov lock inc inc (bad) (bad) (bad) (bad) call pop push mov (bad) or loope inc fisubrl mov push movsb lret sbb (bad) pushl std (bad) push xchg or mov adc test sbb (bad) (bad) (bad) decl ds repnz in jo cmp pusha pusha xor or add lds push test (bad) (bad) (bad) mov pushf lea loop adc or icebp pop gs aaa aad scas sahf sub inc loopne mov add sbb shrb fwait pop and add jne cmp ljmp and inc int3 mov sub mov (bad) jg sahf lret ds cli xlat xor inc loopne sbb add sbb cs (bad) ljmp test jge cmc (bad) in jle and dec cltd push cmp pop dec aaa rcl or jb xchg lods jno scas ds pop (bad) (bad) lcall mov sbb fwait pop cwtl dec cmp or cld jmp cmp loopne mov (bad) (bad) incb enter pop outsb out insb inc xchg xchg addr16 (bad) ja imul inc sbbl mov sbb rclb add jbe cli dec js cmp divl das movsb (bad) (bad) push cmpsb sub in scas mov data16 stc rorb mov fsub push arpl (bad) mov ret inc pop sysexit (bad) adc adc push sub jae add loope (bad) jg or mov push fs (bad) (bad) pushl adc lcall cmp add sub (bad) (bad) (bad) jmp iret inc sbb aam mov cs rcpps fstpl mov (bad) call xchg jmp leave xor std pop ja fidivr adc popf add call mov pop lcall divb mov ss ror ret imul cwtl or pushf fisubr (bad) jg mov fcomps push (bad) mov inc rcl iret pusha scas cs icebp mov outsl add jmp adc dec ds test (bad) (bad) jge ss sub jo leave adc cmpl and pop stc sub insl lahf dec je fs lahf xchg push mov inc call pop adc (bad) (bad) (bad) (bad) jmp addb jg inc sub fstpl lea push adc addr16 lret ljmp cli hlt ljmp push ficom out nop test xorb sub lock sti (bad) in (bad) ljmp inc dec sbb addb and or and sub pop sar mov sub fisttpll inc imul jg decl cmpsb push leave (bad) pop neg push es adc mov sub (bad) ljmp mov adc xor and jno inc mov inc dec (bad) mov cs jl or cs fcmovb (bad) (bad) (bad) lcall int3 lock cltd mov gs imul jle or aam push xor (bad) incl adc into jmp cmpsl mov ret sub (bad) (bad) (bad) lcall pop or sub or faddp arpl in inc mov (bad) or jmp (bad) ja jnp push add nop push and cs pop push mov pop (bad) (bad) (bad) call xchg js dec mov dec test pop arpl pushf imul (bad) call divl mov lret js cmp xor dec jg lods outsb mov (bad) decl push movb add add jg dec push jp sbb nop jbe sub sahf lock loope cmpsl lea inc xchg repz dec scas (bad) pop mov lods cltd mov leavew sub fidiv addr16 (bad) mov inc arpl sbb dec (bad) rep (bad) bound push xchg xchg addr16 rorl (bad) repz or mov mov (bad) jnp loope rclb xor jne push push je inc mov push jae in mov pop xor cwtl js jo imul and shll stos int3 fwait inc (bad) (bad) (bad) (bad) clc add rcrl shrl shrb addr16 or into repnz es movsb hlt jns out (bad) cmp call push or add adc push adc loope scas pop (bad) (bad) (bad) incl or add lock add push (bad) pusha andl mov jmp and xchg mov sbb (bad) (bad) jmp and cmp push cmp cltd test pop (bad) div mov lods and popa and jle adc shrb xchg pop xor (bad) out mov xor in inc nop jmp add sarl xchg jmp cmc (bad) push dec cmp push and es sub push fabs ja dec xor out pop fs jb fcompl lock mov xchg jb fld mov cmpsb xchg and fs out mov fild adcb mov push push adc fwait cmp rclb mov popa (bad) aas mov scas fcomps lcall or jae (bad) (bad) mov cs in aam (bad) mov scas imulb sti jo ljmp icebp orl (bad) mov fidivr jmp imul sub (bad) fnstenv adc and (bad) mov (bad) mov aam fcom mov loop cmpsb sub ljmp pop ss (bad) ljmp int inc loope sub jbe (bad) lcall in adc cmp sub pop popf arpl sub popa out (bad) incl rorl mov in add add jg stc out and in cmp pop lds or pop in (bad) (bad) (bad) (bad) js and and movsl cwtl pop lcall icebp aam insl leave pop push pushf push sub (bad) (bad) call addr16 or insb add dec jp repnz sub fisubrl ja cwtl mov (bad) (bad) (bad) jp push inc leave push jb ffree pop push decb mov outsb mov lea movb mov adc add subl mov sub (bad) jg add dec jge std jp or mov fstl jg popa cld (bad) out jno ljmp cs pop (bad) ljmp and sub stos sbb push pop mov mov pop (bad) mov (bad) (bad) jmp int3 call push jae das in ficompl fidiv leave or shlb cld decl jno clc mov mov inc out jo daa sub mov jmp and mov push neg mov xchg push jae sbb cltd stc jo add (bad) (bad) (bad) pushl inc push stos fsubl mov jmp jne cmp stc inc je xor imul inc mov (bad) (bad) incl adc push in push xchg das mov inc mov lods sbb cmp mov cld mov cmp sub lcall into mov fidiv (bad) pushl les cmp lret (bad) mov xchg mov rclb (bad) clc rcr xchg mov mov cmp cmp push test rcl pop push mov mulb (bad) (bad) (bad) call repz push mov adc add in pop adc push inc inc rol (bad) (bad) sti les pop mov nop pop and or fs sub and fadd call push jg adc aad pusha je jle test inc jae push dec mov lcall add lcall push andl cmp sub (bad) (bad) jg xor scas mov psrlw lcall aam jae (bad) pop cmp xchg (bad) in sbb hlt cmp mov cmpsl icebp (bad) lcall call in call lret pop shr jo ss (bad) incl mov ja std mov pop mov ljmp cmp in sti jmp push (bad) dec imul test jg sub loope clc jno or or inc cmp test mov inc mov outsb dec push into bound enterw mov clc mov dec outsl dec test (bad) mov jge jmp scas dec and js faddl das jg repnz ucomiss mov aam fs (bad) (bad) (bad) mov shlb and out loopne,pt (bad) iret sbb inc mov outsb scas cmpsb test call (bad) int mov pop outsl mulps and gs dec dec mov int3 daa (bad) (bad) ljmp out enter inc mov loope test xchg gs (bad) mov and daa mov call jne fcompl rorb lcall fs int3 sbb xchg jmp roll mov (bad) (bad) jmp add aaa fisttpl mov mov jne fmull (bad) cmp add adc inc pushf dec mov inc mov arpl sub or f2xm1 lcall (bad) pushf dec push inc (bad) ljmp xchg movsl dec cmp (bad) adc adc aaa imul ret or cmp movsl xor jp xchg xor (bad) fucom in test scas int ljmp fist daa jp adc iret xor movsb and add stc mov fisttp cwtd mov ds cld sbb scas xchg aam cmp insl lea sbb inc push xchg (bad) (bad) (bad) incl fsubrs aaa xor daa nop mov xor cmc xchg dec cmp scas sbb pop add cmp int3 mov ljmp jne loope into xor (bad) mov (bad) sub sbbb adc adc and adc mov es dec lret mov call xlat cli imul mov roll cmp stos bound push (bad) (bad) jmp sbb test rcr test lock pop pop loope gs fadd jns clc (bad) (bad) (bad) call outsb clc mov mov (bad) out andl xor ljmp loope add jg sbb in push sub pop imul dec out imul jns or xor mov push mov (bad) cld daa fwait adc mov adc arpl fstp xor dec call loopne sub daa lods mov mov cmpl sbb (bad) (bad) jmp scas lds or jle push jmp roll mov add ljmp (bad) (bad) (bad) incl fisttpll incl imul pusha jne push sub dec test (bad) (bad) in mov imul movl and dec push (bad) and stos and jmp pop jg pusha loop pushf in xchg jae pop (bad) (bad) (bad) mov sub pop call addr16 dec add inc and adc mov (bad) (bad) (bad) (bad) jnp fisubrl mov push xor ror in (bad) inc cs xchg (bad) (bad) pushl adc mov push movsl push sub es mov and bound add fcmovbe lcall cmc lcall adc jle lret dec movsb cmp in (bad) ja shrb inc dec js in inc mov outsl cli fwait xor xlat ja daa movsb lods pushf pop popf ljmp movsl (bad) sar (bad) (bad) incl iret dec test dec aam scas cmpsl fcoml fldl sub or imul fcoml repz jl pop aaa std (bad) mov dec mov push (bad) xlat out cli pushl stos mov and (bad) (bad) jg xlat (bad) sub inc jecxz,pt xchg imul aam aas ja test sbb (bad) pushl mov and dec inc es xor pop cwtl dec jmp es (bad) ljmp movsb cmc jmp adc push xor add cwtl add out push mov in hlt (bad) out pop repz mov imul xor fld fs (bad) ljmp addb push ja cmp js jns test inc (bad) int3 and lods aad push (bad) (bad) mov dec xchg add rcll pop mov (bad) mov fisub mov sbb lret out in jg (bad) sbb das xor jmp lcall inc out gs sub mov cmpsb sub pop (bad) fcomip jmp daa pop in (bad) dec lret xchg add push ret adc (bad) into xchg out int3 mov jg and push mov sub mov push xchg (bad) (bad) call test leave dec jg hlt cmpsb adc pop data16 pop (bad) xchg push jb sbb loopne das sar or jle sbb push gs sbb (bad) (bad) call push fdivrl pop or push xor mov data16 idivb (bad) lcall cli jb jg,pn cmp add lea ret scas ja push (bad) (bad) (bad) call pop test fsubs popf add mov loope xchg dec xor (bad) popf (bad) (bad) (bad) pushl sarl ret mov jne cmp add sub or clc (bad) (bad) lcall xor call mov jmp inc out (bad) (bad) incl push push jle cmp xchg int stos xchg adc sbb (bad) (bad) inc aam add (bad) (bad) pop jle xchg pushf call or gs das inc push addr16 (bad) (bad) call ljmp sub and mov into cmp mov or or dec cmp dec xchg xor xchg (bad) pop cmc jmp add mov mov cltd pop arpl imul or jecxz or fs adc and sbb cli jmp mov (bad) (bad) jmp fs sub add (bad) mov mov dec ret (bad) mov aas cmpsb out enter inc (bad) (bad) (bad) mov loope mov xchg sahf jae aaa dec aad pop mov incl xchg lcall push lcall and (bad) (bad) decl mov into lret cmpsb push lea adc fdivrl leave adc push int shl (bad) lcall mov ja sub adc rcl (bad) les lahf (bad) call adc sub mov cs adc xor sub (bad) (bad) in inc in iret lret nop (bad) nop outsl lahf (bad) dec dec adc xor jbe adc into cmpsb jae (bad) (bad) (bad) inc ret ja hlt insb sti pop dec (bad) pop xchg clc cld stc fabs cmp test add xchg cwtl int3 and sub inc xor dec and lds and xchg adc (bad) (bad) decl mov add add xlat add out mov arpl test push mov xor (bad) (bad) (bad) jle bound lret ja rcrl push scas (bad) xor fmul icebp clc or mov cmpsb inc cmpsb adc cld sbb inc cmpsb call xchg sub pop les sub xor sbb and xchg sar scas mov mov (bad) mov test cmpsl add (bad) jmp out push inc pop bound mov add adc insl push sar (bad) decl cmp aaa addr16 lret or lock (bad) (bad) (bad) incl fidivrl and movsb sub sub or xor pop fwait push fdivs (bad) enter (bad) pop xchg xchg (bad) (bad) mov sub test outsl mov inc jnp xchg std mov int3 out (bad) (bad) decl repnz test ss arpl aam push sub mov fsubs movsb movsb (bad) (bad) (bad) (bad) jnp mov sub test pop in inc or inc and inc sub push and out cmpsb sbbl addr16 lcall addl add xor dec es cmp sub test mov inc mov shll daa (bad) (bad) (bad) (bad) stc roll push scas push in idiv mov sub sti xchg pop inc out es pop test decl sbb jne fiaddl pop daa testl mov (bad) stos mov test push mov pushl hlt (bad) mov mov sbb mov aas mov cmc pusha push imul popf sub das xor sarb adc mov sub cwtl scas mov pop add fsubl cmc std or (bad) (bad) (bad) jle aaa pop jo pop movsl dec ret inc jge subl (bad) call aam xor cmpsl dec mov paddusb repz cmp into lods jno test (bad) decl jb mov or jns mov (bad) loopne pop ljmp push fsubr out mov (bad) pushf lahf je add ds push cmpsb xor dec aas pop (bad) cmp scas in mov dec add (bad) (bad) (bad) jmp into outsb jbe lods icebp aam adc xchg dec jae and sub jae cmp data16 cltd pop mov add push cmp nop adc push popf or int add (bad) (bad) (bad) (bad) clc xchg dec xor sbb mov scas adc insl jl dec sbb or add (bad) jmp cmpsl jo and push das js mov dec dec sub (bad) (bad) ljmp enter cmpb mov loopne movsl mov fcoms out sub out fbstp leave repnz jg lret sub or adc adc xor js push sub ffree xchg push outsl sub sub aaa add into fs and (bad) mulb bound test add and (bad) (bad) ljmp sub inc add ss imul test adcl (bad) mov lcall hlt sbb pop fimull push inc adc dec jg jo repnz mov bnd add (bad) cli mov pop lods push (bad) (bad) (bad) out sahf dec call rcrl adc in add test pushf push loope stos (bad) decl ret lods (bad) pop mov std mov in (bad) or (bad) (bad) inc negl or js jge mov (bad) cmp cmc mov ja ja cmpsb pop cld dec jae (bad) (bad) ljmp stc pop ret fdivl xlat shll pop (bad) lahf lcall inc call scas dec mov std fidivrl (bad) (bad) incl in (bad) popf out inc sbb mov jmp mov (bad) (bad) pushl jg jbe push dec jbe xchg lahf sub cmp fcoml loopne sub cwtl xchg dec pop jp push es (bad) call dec ret fwait inc fcmove movsb add jle sbbl test add cmpsl pop cmp (bad) fmul inc int push push xlat mov int3 daa daa popa mov or (bad) (bad) (bad) mov pop sbb andl in sub in mov xor (bad) repz sbb das jnp lock repnz test add and js das cs add and (bad) and pop lret mov or in cmc mov jno mov (bad) (bad) (bad) fisubr leave push out cmpsb and nop cmp jle inc pushf loopne sub imul cli lcall inc jo xchg sbb mov or call add jo call cmpsl and int (bad) (bad) (bad) incl xor xchg mov mov cld lock lret sbb sti sarl (bad) (bad) incl lret stos or ficoml pop and (bad) jno mov (bad) (bad) (bad) jg jno mov push mov dec (bad) les rep lea jl dec xchg (bad) (bad) (bad) jmp push popf jns xchg fnstenv test and fildl inc into fsubl (bad) (bad) (bad) js push es mov xlat mov negl add push sbbb dec arpl push insl inc cmpsl imul inc push push mov adc jns sub (bad) pushl mov mov shr sub icebp hlt adc xchg out rorl daa test movsb pop push lcall push mov mov mov xchg adc (bad) call jge mov (bad) (bad) cmp mov stos loop mov imul out cli (bad) incl test (bad) or or subb and add (bad) (bad) (bad) incl jg clc pop sub push push jbe lahf xor push jne dec dec test ds mov lcall mov cmc adc cs fisub sub xchg inc mov push iret cmp (bad) jmp leave jbe xor out jle fsubrs xchg push add adc (bad) decl (bad) mov fcmovu push sbb lret xchg dec (bad) (bad) (bad) jg lds xchg fmul roll jae gs xor ja sub loopne lret (bad) (bad) (bad) call stos xor ss pop test in jle cmp cmp mov mov lar dec bound jo push lds out aaa cld (bad) (bad) js xlat jno popf mov jg pop jge mov sti and outsb sub and push insl sahf push dec pop mov incb or pushf mov dec push (bad) (bad) decl inc les lods rorb aad dec adc jbe lret pop pusha sub loope movsb jne (bad) (bad) call mov xlat adc dec fstps dec push (bad) (bad) and repnz (bad) (bad) ljmp jae jecxz aam xchg inc (bad) loope ret mov stc stos fistp loopne ret lcall pop (bad) (bad) jg icebp adc out int3 cmpsb jge sti dec pop jbe ret dec adc ret aaa data16 add xchg sbb stc pop cmpsb pushf test mov in adc push xor hlt sahf notb (bad) (bad) (bad) jg cmpsb rcl jns cmc xchg out stos mov out loope add jnp dec dec xchg lods sahf cmpsl fwait xorl decl add leave xor pop test mov xchg xor cld (bad) (bad) (bad) decl in pop in pop mov or cmp std les mov lock aam test lcall jbe xchg sbb pop in mov cmp add movb imul and ret mov sahf clc (bad) (bad) (bad) cmp popa mov or pop dec xchg push and sbb adc pop cmc sbbb add (bad) jmp inc (bad) ret (bad) jg aam into jp les jno das cli ja add xor cli aam repz or test fnop lock cli (bad) dec std aad xor jecxz jecxz or or mov mov cmp sbb aam sbb clc jb dec ds mov pop sahf (bad) ljmp adc enter (bad) mov cli and cmpsl data16 inc adc jne pusha dec sbb pusha repz dec xchg (bad) cmp add out sub lds cltd insl pop addr16 (bad) (bad) ljmp daa leave inc test imul xchg out adc jmp in (bad) (bad) (bad) faddp rcl sti add jge lcall scas aas fistl (bad) or cmp ss cmp iret arpl icebp fcompl mov dec mov psubusw pop (bad) cmp add ret insl or fs inc stc adc (bad) (bad) (bad) incl das nop sbb ss lret adc adc xlat inc (bad) loopne add jmp push cs or pop (bad) (bad) (bad) jg lods rcrl jns mov loopne ss sub aad outsl push dec inc dec ja ret lock shrl fldenv or int pop xchg es shlb or sti loope roll bound xchg inc jae ds insb (bad) (bad) ljmp and les mov roll pop and cmpsb sub imul and push pushf pop sub in mov daa or call int aas add cmp lahf mov adc imul cmp mov cld ljmp mov (bad) nop dec scas out jno hlt repnz adc fbstp mov or dec outsl cwtl cmp xchg inc fdiv out jnp (bad) repnz enter jle inc (bad) loopne add dec inc add test sbb mov or dec and sbb inc gs dec and test jecxz dec or insb scas stos cwtl (bad) and adc (bad) (bad) pushl cmpsl shl xchg lods mov pusha fistpll vmptrld addr16 sub mov pop cmp (bad) push mov hlt jo push repnz push popf pop data16 hlt hlt ljmp xor cmp mov (bad) jns (bad) (bad) (bad) call mov xor lret sti ret (bad) not dec mov sbb xchg pop dec mov sbb (bad) sub aad pushf mov mov mov stc fcos (bad) (bad) pushl je clc mov jle cmp bound mov idiv hlt and aam movsl cmp roll cmp inc push aaa int3 (bad) (bad) (bad) lcall pop imul (bad) pop inc into dec rorb int3 js pop adc push push mov mov aad or popa (bad) (bad) (bad) lcall cwtl shrl fmuls (bad) dec jno or out mov int3 test fs or daa adc cmp add mov imul stos jg adc in adc push cmp (bad) (bad) (bad) jmp scas and fsubrs std lods pop dec lock pop lods cld iret inc (bad) lcall (bad) (bad) stc push xor fnsave cltd push clc add cmpsb mov or test imul icebp call add dec xchg out adc mov (bad) lcall pop mov lods jle test jmp pop jbe inc loopne cmc (bad) (bad) lcall outsb outsl (bad) je sub cmc bound stc repz jle sub mov adc sub out xor test (bad) (bad) push sbb lock push js xchg out negl sbb aam arpl lcall shlb mov xchg ja sbb sahf xor (bad) push cwtl sub pop xchg and and and jmp ret hlt ret and cmp arpl or mov cmp (bad) call mov fldl mov dec sbb (bad) mov or lcall adc dec stos test mov mov inc sbb jg lock mov xor ja add dec (bad) fcmovbe fstpl in dec rclb (bad) aaa cld jmp pop outsb mov negb dec fs push xor lea ljmp adc addl cld xchg lods out mull sti shrl stos (bad) (bad) (bad) ljmp inc xchg push adc add popa js (bad) jnp sbbb outsl pushf or jno xchg ljmp decl cmp fisttp pop (bad) mov ds xlat sub cmc mov mov out (bad) (bad) (bad) call addr16 dec outsb push pop sbb mov jmp inc mov inc xor inc xchg (bad) mov mov cltd push mull pop sbb shll add push repnz mov jnp in (bad) mov and aas sub pusha mov ret es lcall cmpsb sar (bad) adc push add (bad) (bad) incl push sub (bad) xor mov pop xlat sbb adc sub rcrb sub js scas inc das shrb outsb sbb call mov (bad) or jle in mov adc jge push in ret data16 mov gs repnz jg in push sti ret cwtl add icebp aad xchg jmp inc add incl jmp sbb movsl mov incl aaa or (bad) jmp jmp or (bad) (bad) jmp out mov cmp ds scas (bad) jns sub push cmc jmp fidiv std sbbl add mov scas xchg fs imul lock pop (bad) faddp ljmp jno movsl (bad) aad inc in cmp (bad) dec mov jmp mov jle or enter loop adc (bad) (bad) (bad) cmp (bad) or rcr pop mov leave mov int3 mov xchg fisubl out rolb mov sahf (bad) (bad) (bad) decl mov cmp jl add bound sti xor fcoms pop cmp (bad) decl push dec adc xchg mov pop aad cmp adc add dec (bad) (bad) (bad) jg pop dec int3 xor nop lock mov cmpsb xor shlb je jmp (bad) jmp test arpl cwtl bound push xor out lock cli ljmp arpl test popa lea imul (bad) fistpll xchg cltd roll mov dec in xchg push ja (bad) lcall nop sahf push and cmp pop mov fidivrl xchg (bad) (bad) (bad) fldenv aaa sbb push mov imul xchg call int3 sub lds aas xor jno mov xor mov lcall imul mov push dec pop (bad) incl cmpsl addr16 loope outsl mov (bad) stc inc (bad) (bad) cmp sahf xchg dec adc sub and xor cmp cwtl jns xchg addr16 (bad) mov aam and xorl dec xchg push sbb (bad) test call sub (bad) jb lods pop adc decb pusha icebp (bad) (bad) ljmp rcrb add imul mov cmp push aaa jle xor dec jg dec cld sub clc mov mov cmp dec push mov jmp (bad) std negb cwtl ret mov outsb (bad) xor add cli in mov inc sbb mov (bad) incl stc xchg adc outsb push ror mov pop sbb fcomi add mov mov insl rclb jg pop adcb mov or clc (bad) jmp ret mov (bad) (bad) (bad) (bad) jle xchg roll xchg or adc adc std jne imul call lea movsb ret mov xchg pushf lock dec insb jno xchg loop xchg (bad) (bad) pushl push mov insl sti or aam pop sar cmp add pop std repz lahf into cli cld (bad) in push mov (bad) fsubrs dec pop lcall call mov xor inc jb dec sbbb add lock (bad) ljmp add xor xchg das fs jbe add lea mov je in rol push (bad) mov or mov cmp xchg add xlat xchg jle mov (bad) fcomip lcall push jne pop cmp mov ret jno aaa (bad) push (bad) (bad) (bad) push xor incb and insl sbb outsl mov or adc arpl mov js add (bad) (bad) cmp stc lea push mov xchg loopne loopne fisttp loop ljmp sahf pop pop clc or cwtl leave inc xchg push push movsl imul pop scas pop das sbb shrl je call int3 mov (bad) (bad) arpl pushf xchg (bad) ret loopne dec ljmp nop push sarw out push cld (bad) call mov jo loope xchg (bad) loope,pn sub sbb hlt and aam jg and (bad) jge enter in jmp icebp (bad) (bad) (bad) lcall pmullw daa pusha call lock xchg cmp mov push and add sbb (bad) jmp cmp sarb popa shll jnp out (bad) sbb mov movsb sub pop out cmp sub sbb or mov inc std mov add mov (bad) (bad) inc push sub cmp xchg repnz mov aas jecxz shrb push mov pop push hlt ljmp lods push fwait lret inc xchg mov clc cmp lret gs rcrb and popf cld in decl lock clc and loopne cmc push mov out push xor stos (bad) call es cmc incb jbe sahf aam fldenv (bad) shrl out ficoml (bad) popa jecxz inc dec iret in dec test pusha pushf jg xor dec lcall pop sti inc lret sar jmp les fs (bad) mov and stos dec or or sbb dec in in nop jbe (bad) (bad) (bad) (bad) cmp xor cmpsl clc sub sub mov in pop jae dec cmpsl lahf inc scas popf xchg sbb insl jecxz inc fcoms shlb pop (bad) (bad) (bad) lcall aas add mov xor aad stc push aas stos imul mov and (bad) (bad) ljmp adc sbb xchg cld xchg inc imul cltd lret fisubrl add push pop mov (bad) (bad) fbld and popf (bad) mov cmp rcl fstps mov jo jl jnp orb sub push cmpsl push (bad) (bad) (bad) (bad) (bad) jl mov roll sbb sub jle lcall mov (bad) aad dec or aas dec lds ds decl inc mov adc adc mov (bad) ljmp lock cmpsl sub inc cmp ret pop xor sub inc stos mov lcall sbb stc fucom sahf sub andb xchg fnstenv mov pushl (bad) cwtl and jle pop js jecxz fmull sbb ljmp popa add xor out jo outsl sbb pop loopne shll and cmpsl pop mov fnstcw stos (bad) fisttp sbb xor add add cmp mov frstor test cwtl xor int adc mov incl aaa imul rcr (bad) mov add dec es cmpsb or or jbe dec test jns push mov int3 icebp pop or popa jns mov cmp xor dec pusha push jge data16 (bad) (bad) (bad) pushl adc cmp adc or pushf xchg lcall pop bound (bad) (bad) call jbe in sub lahf mov aas cmp repnz and sar ret fs ljmp loop jb test insl push (bad) jg (bad) sahf cli and pop adc jle inc or (bad) (bad) aas mov cwtl inc pusha loopne sub hlt sahf (bad) fidivr out xchg js mov or (bad) (bad) incl das out popa js cmp out out in mov out mov lock stos das mov mov ret jbe aaa pop pop jne das (bad) jmp (bad) movsb mov (bad) xchg shrl sbb sub pmulhw aaa jmp fwait mov sahf push xchg fwait or popf nop push adc movsb jge inc sbb xchg and lock lcall movsb dec imul xchg cld push adc int cmpsl (bad) loopne xchg es (bad) jg lods js push jb inc jns adc stos std mov cli insl arpl push mov push clc mov hlt stos mov iret cmp push cwtl and jmp mov ja or (bad) (bad) lcall rolb (bad) sbb pop mov dec cmp inc gs mov (bad) fbld add add cmpsl inc cmc mov add ja shrl cmovo repz in jnp inc cmc (bad) lcall je add xor shrb stc sub cmc add incl mov and jge pop xor (bad) push jge lret cli pop mov xlat out push fnstsw xor adc sbb ret popa adc (bad) xor sub (bad) pushl adc cs or loope pop jmp xchg jg sbb stos ljmp int3 sbb jecxz fbld aaa push adc push fdivrp (bad) (bad) (bad) cmp scas pop xor daa daa mov aam enter movsl sub push mov adc stos loop incl mov insl (bad) testl push jg dec fldl sahf pop cmc xchg sub pop pop adc push movb sbb inc jns lea call iret sub sub imul scas inc xrelease pop test push jle add fild xor push mov out add mov (bad) (bad) (bad) pushl aas sub adc orb lds test bound out pop mov pushl fildl scas in mov lea xchg fwait in mov dec push mov cwtl mov movsl mov xchg adc or subl and jae xor pop daa cs sub sbb daa nop scas cli adc (bad) sub inc out lock sbb dec pop pop dec stos jnp and cmpsb addr16 cmpsb jp lock (bad) lcall mov pop out pop inc push roll es push js xor pop pop gs xchg xchg pop pusha jmp lcall xchg hlt outsl test addr16 mov mov fdivl cmpsl movsl imul sbb mov rcrl cli loopne (bad) (bad) cmp mov or std mov outsb lods das fldt push inc outsb pop inc xor mov cmp ljmp push cli cwtl pop xlat je adc fisubrl testl sub jb fsts (bad) (bad) (bad) fist bound aaa aas (bad) push stc call push dec imul mov popf mov (bad) call mov mull mov test dec ret lret negb sti out mov lods inc sahf push push test mov mov insb (bad) (bad) call jae jl outsl xchg scas sbb adcl xchg iret jle jae mov sub (bad) mov push mov push lods les and in stc or or push sub inc (bad) (bad) (bad) lcall xlat aaa mov push out out fisubrl dec in cmp mov push sbb call das or push (bad) mov sbb in out mov or sar (bad) (bad) mov shl ret test loopne out and push xlat sub hlt or (bad) (bad) fsubrl push cmpsl sti push cmp cmp mov movsb push dec int3 scas mov sub add push xorl stos repz sbb mov pop dec pop xchg test mov (bad) call adc pop and int3 std lods or sbb cld clc cltd sub (bad) (bad) (bad) jns les pop mov scas rorb iret jb mov mov xchg sbb (bad) mov xorb add and sub xor inc aaa cmp sbb adc bound jecxz aad std or add push (bad) (bad) fistpll loop bound in sbb test mov push push push mov mov xchg out loopne mov cmp bound in push adc lcall (bad) (bad) (bad) fistpll cld mov mov jo add icebp stos data16 iret ds push or push ret mov xchg jne xchg in fnstcw pop aad push sbb sub dec (bad) call pop ds pop or out jne jg sub dec cmp add push sub inc jb jb mov (bad) (bad) (bad) ljmp or cmpsb mov nop pop or or mov push xor sbb jge add mov cwtl mov cmp fsubl or bound decl ror js jb cld jmp cs xchg cltd iret jp gs les ret sbbl push push mov ret inc push mov add (bad) call and (bad) jbe jne outsb cwtl fucomip mov test cltd mov test adc mov sarb xchg pop sbb pop cmp cld clc (bad) (bad) call xlat aad das dec loop mov out lret and pushf (bad) mov pusha xchg (bad) push or pop mov leave xor daa xchg pusha in pop clc lcall cmc (bad) scas push add mov (bad) (bad) (bad) mov mov inc jb dec inc mov and jns sub cmp (bad) loop or sar (bad) inc xor or jmp inc gs sub pop xor or in lcall mov mov and mov (bad) (bad) (bad) inc jle sbb sub add lahf mov push dec fisttpll xor movsl lahf adcl clc (bad) incl pop adc aad lahf lds cltd (bad) jecxz scas fprem1 jns pop or xchg push adcl adc or (bad) (bad) (bad) decl int gs push dec jns movsb dec (bad) je pop in sub and movsb shl xchg jg (bad) decl sti push das movsl add ffreep pop lock cmp jb and popa inc jmp pushl sbb fcmovnu imul roll mov into faddp ds pop ret lcall aad jnp sti std ja pop fs mov cs adc lock pop shrl inc (bad) (bad) (bad) ljmp in std jno test cmp out xlat fsts in js in inc jns loope (bad) (bad) decl aam dec ds lret xchg lret adc cmp jmp or (bad) mov mov (bad) push sub fs lret addr16 daa (bad) (bad) (bad) jmp sbb clts (bad) sbb mov out pop jb sub mov (bad) incl inc xor cmpsb pushf mov imul push sbb cmpb lcall pop lret sbb jbe outsb sbb cmp test xchg push and aam mov (bad) jg sahf dec and xlat shlb out inc cmp mov jg aad or lret inc ds cmpsl sbb inc ret (bad) ljmp int popa sti repz enter ret inc or jg aaa adc or xor pop (bad) (bad) (bad) (bad) ljmp addr16 repz hlt inc das lret or inc sub cli adc pop xchg lock and shlb pop jecxz mov lahf mov pop (bad) (bad) (bad) jmp inc test adc leave inc push outsb and push cmpsb adc test adc fsubrp (bad) (bad) (bad) pushl es jne add outsl pop dec xchg leave lahf mov repnz pop inc in mov (bad) incl fbld sbb int3 mov add sbb adc bound sub xchg xchg mov mov inc cmp mov gs dec cmp int (bad) (bad) pushl push imul mov aas inc mov daa jl mov mov pop insl cltd sub addr16 fild jmp call std fldenv cwtl add jns popa push dec test bound sub inc mov dec imul sbb xchg aam xlat call dec and imul xor xor jmp idiv (bad) (bad) jmp scas mov push imul inc pusha ret and pop sbb ljmp jbe rcl or rolb mov fmull int3 rclb cmpsl mov out scas aam push add ja,pt push fdivrp xacquire out (bad) mov scas add es jle dec out faddl outsl xor mov lahf inc jnp leave mulb out inc add add mov andl loope mov dec mov in cmp sbb sub push (bad) call loopne jne fisubl jb cmp int3 lret std inc cld lahf (bad) (bad) (bad) (bad) (bad) call ds gs sarb daa add dec imull jmp sahf push mov mov mov (bad) (bad) push jle xor mov and mov dec fimul mulb fidivl (bad) (bad) jmp ljmp push pop inc incb mov or hlt inc leave call int (bad) (bad) pushl popa xor mov sub ss fcomps xchg cmc lock mov nop (bad) (bad) (bad) push pushl clc (bad) ficoml int3 fldt aaa fwait arpl mov clc cmpsb (bad) ljmp movsl ss dec push cmp push mov fisttp decl push cmp cmc and (bad) (bad) fxch pop (bad) inc mov jbe hlt je add push dec sbb mov or pop pop mov out mov (bad) (bad) call call in lret push je dec rclb mov ss (bad) (bad) lcall pusha sub or sarl jle xchg jecxz mov adc js mov mov cli lds inc loopne push xor cmpsb mov fldt ljmp xchg ds mov or leave loopne rcrl gs push (bad) (bad) push sub mov ss lea fsubp add add mov testl loope dec xlat scas jns gs jnp mov stc adc insl or cmp jmp (bad) (bad) (bad) mov pop mov inc hlt sub and push and or ret clc (bad) (bad) decl cli (bad) icebp mov cmp push and (bad) push shrb mov xlat (bad) inc sarb scas xor and nop ss xlat mov cmp and adc insl pop out cli jmp inc mov xchg mov (bad) call repz xchg rcr jge add sbb ret mov cltd movsl mov leave cld dec (bad) (bad) (bad) (bad) fsubl adc imul sbb cmp mov push popa cli xchg mov dec and cld (bad) (bad) dec inc (bad) jle adc popf lea in jae xchg push dec adc or push (bad) in jbe mov sahf neg cmc les jmp (bad) (bad) (bad) dec xorb inc jnp (bad) in (bad) mov sub or lahf inc cmpsl jae add mov (bad) (bad) (bad) lcall movsb (bad) or sti pushf sahf (bad) mov push addr16 push ss int (bad) (bad) (bad) inc in cmpsb fisttpl cmp loop xchg fwait pop in js push int mov jo dec cmp ljmp test jmp fmull sub mov (bad) sti adc ror fnstcw pop dec dec sub xor inc push outsb pop jne xchg mov std mov (bad) call cmp inc loope sbb mov push mov cmpl mov iret (bad) (bad) (bad) (bad) in mov out sbb and cmp sbb cmp out test adc fs sbb (bad) ficompl lret cmp cmp je,pt (bad) (bad) (bad) out sbb sti or aad lds push inc mov add xlat jge xchg inc iret jb sar decl pop test or (bad) out sbb mov cwtl or add xor mov bound movsb mov jno or (bad) ljmp stos (bad) int3 wrmsr jns mov sbb shr mov inc xchg loope in adc mov mov jae cld or inc jmp (bad) inc es test test mov incb cmp dec or shr insl (bad) (bad) ljmp mov cmp mul mov stc jns aaa xchg dec sahf jecxz sbb inc jg ljmp out jp lods call nop mov cld cli or mov and (bad) (bad) (bad) out push push lahf js cmp gs (bad) or dec push pop push es fcoml add hlt ljmp decl shr roll mov enter icebp or popa pusha xor in or (bad) call add lea sbb mov movsl (bad) (bad) jmp pop pop push loope inc lea popl fldenv mov das add inc cwtl aaa aaa nop stos pop out and pop pop bound das cmp out sbb (bad) (bad) decl push fsubl fdivrs mov cmp cld fidivrl adcl ja ret ret mov adc push cmp adc xchg fisttpll stos fwait pop fcmovbe adc leave jne jle fs in lret pop pusha insl inc sub int3 out (bad) lcall mov xchg pop fdivrs iret out push dec addr16 jge cmpsb push fisubr ljmp (bad) mov xchg cmp js cmp (bad) (bad) (bad) cmp je dec xchg dec cmp stos xlat inc sbb push inc inc inc mov (bad) mov ret xor add (bad) incl movsb jb test xchg xor loop xchg push and (bad) (bad) jl inc adc outsb fdiv out out xchg (bad) aaa iret sbb or mov mov imul push mov pop sar in dec mov dec es frstor adc jb or mov cs das add push xor dec (bad) push lret push cmc push imull incl pusha xchg test ljmp test aad lret add xor push adc (bad) das xchg movsb lahf xor jbe sbb adc (bad) (bad) (bad) cmp popa mov or fdivrl stc int3 fbstp add (bad) mov lret xor int inc in push cli mov icebp aas xlat mov pop xchg mov jl std (bad) ljmp test imul mov and jg mov (bad) ljmp mov mov mov push sub decl incb ljmp ret cmp fildl and xchg (bad) (bad) (bad) lcall mov xchg (bad) cmp dec add add cli sbb fist lods repz jns std jae (bad) (bad) lcall lcall bound enter adc dec pop cmp (bad) (bad) (bad) lcall push mov stos andl sbb mov aam in jp adc hlt ss lcall jecxz push inc into out sub fdivr cs ds jmp jp and sbb mull popa sarb jno pop jns push ja sub (bad) jbe add cmp (bad) mov lret stos push lock and inc mov daa mov clc mov stos fst jns pavgb lods xor jae (bad) int inc clc (bad) (bad) call add andl inc cmp mov and cmovle std ljmp push sbb test je mov cmp sub pop mov cmp (bad) (bad) call jb dec mov add ss cmp stos test jle cmp in add sbb clc (bad) (bad) ljmp ret and mov inc rcll imul mov and pushf or (bad) mov jmp into xor (bad) loopne repnz cmc pop sbb and dec adc cmp mov (bad) incl imul add xchg cmp nop scas scas mov leave repz dec push in dec pop scas fldt lock lcall (bad) call push cli call into lods fwait jecxz and (bad) ds push xor adc ror cmp (bad) (bad) push aaa adc xchg ret test call das mov cmp push mov cmp dec add push fwait imul inc and cld pop fxch or stos inc clc (bad) (bad) ljmp sub push negl push or stc add clc (bad) mov (bad) sbb jbe data16 in fdivp bound lock orl jp add lea pop flds sbb ret rcrl aad (bad) (bad) decl lock dec cmp pop (bad) push es gs xor mov lahf (bad) (bad) call or jae or jmp jmp push loopne add mov mov (bad) decl ds cltd adc lret fcmovne xlat xchg inc test scas mov ds test adc jns hlt (bad) (bad) pushl hlt clc call xlat es aad js cmpsl pusha call out (bad) (bad) lcall fisubr dec pop in sub cli pop mov fldz inc std pop xchg (bad) jno xor rol insl in sbb out jp xchg scas imul ret push inc cli or shrl test jg call and sub jbe dec mov cmpsl loope sbb xor aaa dec mov pop fdivrl (bad) (bad) call (bad) fs loope xchg or jae decb mov add adc jle (bad) call andl inc (bad) mov lock lcall call cmp jne sub lret out jl jecxz scas jg add lods xor push stc push pop xor dec push jg and ds mov mov xor das adc iret and dec sub sub adc mov mov sar lock mov js lret popf je (bad) lcall jmp jo movsb or pop pop leave dec fild or addr16 pop test push rcll pop mov mov stos js std (bad) (bad) push es inc test scas popf scas adc or or into movsb pop stc xchg (bad) jg dec mov sarl mov rorb (bad) jg (bad) addr16 adc pop aad mov mov jle pop mov xchg loopne sbb sbb inc imul imul xchg cmp js pop jg sti cli (bad) (bad) pushl aas and mov adcb push cld in iret jns pushf mov mov inc jnp das jb (bad) dec fldt sbbb (bad) (bad) (bad) push pop jbe push loopne or sbb lret fldenv lea or mov push scas idiv pop icebp or test mov push scas in dec pop push rol aam mov pop or xchg stos mov adc jb es pop lcall xor add lods dec add sbb mov (bad) (bad) jmp loop out mov daa mov (bad) decl je out jb mov pop imul cmp in cmp (bad) (bad) fnstsw dec out pop xchg adc sbb insl js or mov (bad) int3 cmpl pop xor inc lock sbb sub mov jge xchg and outsl dec outsb aad or outsb lods (bad) xchg xor aad cmc mov push bound cmc jmp sbbb pop mov cld xor (bad) (bad) (bad) fist (bad) inc mov (bad) mov icebp xor iret orb in mov out jg pushl sbb cmp lods fninit (bad) cmp (bad) and xlat (bad) fidivr xchg (bad) ljmp pop rorl rcl hlt mov xchg lret and mov pop xchg jae mov pushl push lds sarb outsb test sub insl sub mov inc sbb (bad) (bad) decl stos cmp test ds sbb xchg push cmp jno (bad) (bad) (bad) call nop dec test mov jl jmp enter cmpl pushl rolb fisub inc mov sbb (bad) pushl sarl jle add inc inc sbb xlat mov sar (bad) jmp cltd outsl decb hlt pushf cmp dec subl sahf vunpcklps (bad) decl jo and add xchg add xor xchg (bad) jb xchg in inc dec cli jae aam mov loop (bad) jg inc les popf add dec cmp loope inc cmpsl in je push mov out inc mov sbb ljmp rclb xchg jmp mov pop mov adc (bad) (bad) (bad) (bad) cmp orb fs lds push imul jb cs pop test cmpsb arpl mov mov loop push rcrl push (bad) (bad) mov mov lods pusha in xchg dec cmpsb sub adc lods push and (bad) (bad) decl jmp in mov imul mov inc cmpsb fildl pusha icebp jb adc fildll add mov and dec mov push add (bad) mov ljmp mov push dec cmc xchg xchg jmp cwtl (bad) (bad) (bad) (bad) aas inc ss pusha add addr16 rcll mov sbb call fidivr jmp (bad) (bad) decl jp xor test lahf push xor repnz out cmp scas cmp sub fwait or (bad) (bad) pushl xchg in push mov add push mov fisttpl subl (bad) fbld push ds xor cld ror lods add (bad) dec sub or outsl jl subl nop inc (bad) (bad) aas xor subb jno imul and lret loopne pop loop (bad) jg movsw lret jb add cltd mov sahf lods aas aas inc xchg xor adc fwait or ret xorl (bad) sub loopne decl xor mov popf sbb imul push stos push cmp xor fstpt clc cmpb mov in jne ret clc inc imul pushl jle adcb enter jmp pop out and test jns ja sbb into ljmp fmull std rcr ret mov push out or dec jae and lahf into sbb push out add inc ss inc xchg xchg out cmp push and andl scas xchg (bad) (bad) (bad) mov mov into and mov push fldenv dec scas gs (bad) (bad) (bad) dec mov sbbl sar fisttpl cmp xor fadds (bad) (bad) (bad) (bad) fcmovbe ljmp sti pop lods mov ljmp ret dec fs or xor cmpsb push inc add pushf es push jb mov (bad) (bad) fild add dec mov jb leave xchg cmp sbb push fildl (bad) (bad) (bad) (bad) cli gs or jle pusha cmp mov leave fmul mov mov (bad) (bad) ljmp push aad sub add gs push adc pop stc nopl rclb lcall add fisub jmpw cmp adc mov mov insb insb adc dec rolb xchg lods mov jne jmp inc add ret pushl std mov cmc add loopne ljmp cltd jb je aam jns das (bad) lcall push mov ret sti xlat test fisttpll in xchg sub (bad) jge scas icebp add fbstp ljmp mov incl and lret sub in and loope sub jb incb add aam cmc jg push inc sti into xchg cmc insl pop ljmp add and xchg xchg mov negl inc dec or mov (bad) (bad) fcomip mov xchg or sbb out xor add add sub addr16 pop mov ljmp test dec mov (bad) dec xor cld into adc (bad) (bad) inc mov pushf and sub (bad) jle sub pop cmp mov or mov fimul inc std mov decl dec push inc mov test xchg scas fwait outsl fwait int adc (bad) std (bad) (bad) (bad) (bad) lcall stos stos mov jge lods das mov xchg aas mov out sbb pop ljmp (bad) pushl out dec fisub or cmp hlt outsb popf outsb dec pusha (bad) (bad) jmp push sbbb sbb in (bad) or push lock in nop or inc xor (bad) ljmp cld add mov lea dec xchg mov xor cmc mov (bad) push dec pop imul (bad) (bad) jmp xchg scas nop cmp pop xchg push cli jecxz sti popf gs mov dec cltd jecxz (bad) call add pop shrl sahf stos mov imul pop cld das sub sbb (bad) sub inc (bad) (bad) pushl pop mov pop stos and mov xchg loopne pop push roll pushf into (bad) (bad) (bad) (bad) jmp cmpsb fbstp inc sub push enter in jns or lret sbb or xor pop fstl lcall out sub out push and (bad) ljmp outsb add push jbe mov imul addl pop pushf mov (bad) (bad) (bad) decl xor inc or pop dec pop ret stos mov xor jp iret repnz mov das adc xor or pop mov cmp call push or mov ror sbb lret ja xor cltd lret clc xchg (bad) (bad) (bad) jmp pop lods jle or ds pop out add mov jmp jl xor (bad) (bad) lcall jge adc cli xlat iret in ja push adc jne fcoml xchg xor and test pusha pushf xor xchg inc rcrl jl aad out fildl jl fsubs (bad) into sbb and test pop sbb (bad) (bad) (bad) lcall movsl (bad) int push cmp pop sub flds ret sub pop mov inc xchg jne (bad) decl lock add (bad) (bad) (bad) (bad) mov cmp sbb aam js sbb pop imul sbbl test sub std adc mov add pop pop enter arpl (bad) (bad) (bad) call pop ljmp loop push cmp push dec rolb sub fldcw imul call xchg (bad) sti pop lret mov push outsl jb lret (bad) jne jge out push int3 sbb dec push sub mov mov ret cmovl jmp and cmpsl xchg mov enter (bad) lcall mov lods pop mov lret add scas aam (bad) pushf test and loopne aad scas cli push (bad) sbb aad mov xchg fisubr pop inc shll imul (bad) (bad) (bad) ljmp mov add ja iret stc daa lret out mov adc fwait iret mov adc int lahf subb pushf mov jo ds (bad) lcall nop outsb jmp adc js stc dec in sub imul add je orl inc mov out (bad) call xor mov adc je test mov daa das mov push lock (bad) push mov cmp js (bad) push lcall aad and pop xchg out mov outsl repz xor or test fsubrl inc iret adc aad mov pop mov inc fsubs clc jae je jbe fwait outsb add xchg mov push (bad) (bad) (bad) dec leave ljmp push mov popa aas cmpsb pushf scas dec cmc mov clc pop inc ret insl fnsave jg (bad) lcall fs mov je jle pop xchg sahf shrb enter (bad) call jo lds mov aam jae,pt add and pop inc pop lcall mov push dec push (bad) sarl jp fild (bad) (bad) (bad) (bad) clc pop dec cmp cmc xor add out cwtl add rol inc sub or ds wbinvd (bad) (bad) (bad) (bad) cmp push xor (bad) adc pushf inc out inc call mov dec mov (bad) (bad) decl mov sbb div mull les insb xor cltd pop orb xchg (bad) (bad) jmp je pop push stc push lahf push popa fild mov jns testl push lcall cs leave inc jle cmpsb orl push dec (bad) (bad) call mov mov (bad) cli pusha std jmp (bad) ljmp push sub (bad) shrl mov dec ffreep adc ss cld (bad) (bad) (bad) mov cmp fildll jecxz addr16 out pushf and inc repnz (bad) decl mov or xchg jo rol add rclb push std (bad) frstpm(287 movsb inc cwtl fs adc xchg mov adc push push add inc leave jmpw call jmp sub (bad) pop out mov (bad) (bad) (bad) ljmp sub sub in push mov xor mov and enter mov ret rolb data16 (bad) (bad) push or pushl mov jl scas mov out popa subb js iret pop dec incl dec aad cmp xor mov stos dec (bad) stos xchg adc adc add (bad) lcall pop loopne pop inc or xchg pushf cwtl into lcall (bad) (bad) lea mov gs call and clc fnstcw xor pop (bad) (bad) (bad) mov clc aaa push es mov rcr test adc aam test xlat and dec push (bad) cmp add sbb cmp mov adc scas xor (bad) dec mov cmp lock lcall sti incl ja mov sbb adc nop mov js imul pop sub xlat dec xor sbb lea mov mov push xor cs (bad) (bad) jmp (bad) in jns lret (bad) repnz or sbb push mov push or (bad) (bad) (bad) jg stos lock jno lcall fcomps pavgw jno clc (bad) (bad) jg scas mov les cmp shl repnz xor enter (bad) (bad) ljmp fldcw test sbb push cmp pop cli (bad) push jmp (bad) (bad) incl outsb mov jnp mov dec jp jg (bad) das repz mov mov negb fsubl mov cmp lods xchg dec into (bad) sbb xchg out xlat daa push or (bad) pushl push lcall leave lds cld cltd push xchg ljmp (bad) pop int sbb (bad) repnz pop adc jb sub add pushf sub pop cmpsb jb icebp (bad) (bad) (bad) (bad) fdivrs lock add (bad) push fsubp insl in push rcr sub pushf cmc push mov jg gs decb sbb jmp (bad) (bad) jg pusha push movsl or xor push xor xor pop or (bad) (bad) (bad) ljmp xchg lods aaa xchg jno fs clc pop cmp mov (bad) fcom dec in push (bad) (bad) (bad) (bad) pushl mov nop mov sub test mov xor add (bad) pushl fs cmp fwait jg aam sub add std jg (bad) (bad) ljmp ficomp decb and cmp cmp add adc lcall mov (bad) fldcw xor stos ja into mov and (bad) decl mov inc rorl jecxz inc (bad) daa loop lock push in (bad) (bad) (bad) decl sbb dec fmull popa fsubr scas cmp rclb jne inc inc dec adc jp lods pop sbb decl pop cwtl cmpsb push dec mov sbb push push push aaa std int3 stos sbb loope inc fwait clc (bad) call pop scas add movsl adc and (bad) jg push pop out mov ret fldln2 in das (bad) add inc inc (bad) (bad) (bad) incl pop lock imul out cmp jecxz movsb xorb outsl sti pop sub roll ds xchg cmp (bad) (bad) jmp into fadds imul (bad) fisubrl fwait sub fwait (bad) pop push mov mov mov fadds repz pop xor rolb (bad) decl std mov jbe add in push or xor test and push jae pop outsl jecxz push lcall add std sbb sbb mov (bad) (bad) lcall (bad) daa sub sbbl mov repz (bad) mov xchg mov (bad) fsubrl mov push inc lock shrl sbb vmread inc enter inc (bad) xchg sbb mov jmp jmp test (bad) lcall aas xor cwtl lret fidivr sub sub (bad) incl or aad pop sub ja mov jecxz js lea clc (bad) jg cs and std les sahf cmp dec sub sub pop cld inc add stos scas bnd (bad) fs decl pop mov mov cmc push clc sub test ds adc outsb pop cld (bad) (bad) call (bad) lret mov repnz ja fst xchg insl std push cmp (bad) lret (bad) (bad) (bad) decl (bad) or stc ret movsb mov daa xchg aam cmpsb (bad) xor fmuls das pushl fs pop repz pop and std sbb shlb mov out dec mov dec inc (bad) repz dec or or or inc jmp mov pop outsb xchg lods rcrl push out mov test xchg ljmp rclb (bad) (bad) (bad) jmp inc je (bad) cmp int3 adc xlat sub lahf test pop jb mov leave insl mov mov mov stc adc inc sbb insb mov inc push mov (bad) dec or cwtl loop rorl or (bad) (bad) (bad) decl das ja and insb jle or pop add push inc or sub jmp pushl pop and mov imul mov lcall test sub (bad) jo movsb ja cmp mov (bad) ljmp inc sbb push xchg sbb push jnp,pn outsb inc xor jp jmp mov incl ds and push push pop xor (bad) (bad) (bad) (bad) ljmp sahf xchg popf outsl fsubr adc add cmpsl pop inc scas ja (bad) out fwait jbe fisubl jnp roll (bad) lcall out fucomi dec jbe inc neg cmp imul push push sbb mov add ljmp mov out lds test ds jne jae (bad) (bad) ljmp fs fbstp jb mov data16 stc rcr scas int3 jge mov (bad) (bad) jmp ret mov mov xchg pop inc jg scas (bad) ja push push push std scas adc (bad) (bad) (bad) (bad) cmp (bad) fisubr inc test out (bad) (bad) sbb cltd inc add (bad) (bad) (bad) clc jmp imul xchg push add (bad) js mov mov popa xchg adc std pop sub (bad) ljmp bound sti or add cmp pop test inc scas mov out lcall inc ds shll test or xchg jnp push jne jecxz enter push cmpsb lods movsb cmpsb fildll and fsubl aad scas mov (bad) (bad) (bad) incl insl or jle jae and call movsb aas test or jno (bad) (bad) incl pusha insl sub out mov pop dec icebp cli sub jmp pop outsl rorl jne clc (bad) mov pushf mov adc mov call adc jmp loopne pop enter inc (bad) pushl pushl sbb push pop nop xlat and dec lcall fwait sub ds (bad) and mov lcall dec or add jle mov and dec or xchg jge inc cmp test cmp mov push pop adcb imul fdivl adc and loop pop (bad) (bad) (bad) ljmp (bad) pop das in lea mov sbb xor mov lcall adc (bad) cmp cmp dec jle insl scas cmpsb push pop jb and push pop bound or addr16 pop fisttp xor dec mov (bad) ljmp pop pushf pop insl xchg push add adc jp lds cmc xor fsubrs (bad) (bad) jmp sahf fs cld lods insb stos scas (bad) push fmull add test es sub rorb inc movsl push jns add lcall or in stos push sbb mov jmp add stos mov (bad) or loop push mov clflush dec mov inc add pop sub cli repnz xchg pop cmp pop fcomip out clc lea inc jecxz inc mov xchg shufps push push jg push cmp (bad) jmp fidivr mov jo ja sub or jge (bad) jb cmp (bad) (bad) (bad) inc sarl int pop sub mov imul add outsb or mov (bad) (bad) (bad) jnp and pop cwtl je xchg and lods mov enter (bad) stos jecxz notl pop cld adc pop cli cltd mull xor or (bad) ljmp lea mov or js pushf ret (bad) ljmp or mov jae rol dec mov (bad) (bad) (bad) incl sbb imull push jecxz ds daa pop pop or dec (bad) sub imul cld mov mov stos jg inc ret or ficoml mov hlt pushl lcall mov add sub stos int3 test ljmp gs push inc cmpsb dec clc push jp push rcrl test ret adc cmpl fs add (bad) call and (bad) rorl nop out mov (bad) popf divb into popa js mov dec je loop aaa mov (bad) (bad) call clc les ds add cmp cmp loopne dec dec rolb jge cmpl pushl sbb push ss xor xchg (bad) mov out inc in and push (bad) incl sub mov xlat insb sbb ljmp lds les js add mov sbb pop pusha inc pushl mov les mov iret (bad) (bad) (bad) (bad) mov lds test jo ljmp dec sti dec adc jmp or sbb scas jns jl iret adc push mov imulb idivb mov jno and inc fs js fucomip lcall inc dec imul jb fldln2 sti mov mov (bad) (bad) (bad) call xchg out mov out sbb in mov in mov sahf repnz lret xchg or mov mov inc (bad) mov mov in push in jl jmp add xor xchg xor inc inc jl (bad) arpl ret lds repnz mov insb jl (bad) adc ret (bad) fimull movsb mov je adc test sub push pop xor pushl std cld mov loopne iret xor (bad) or or or fistpll pop ljmp fs imul rolb pop (bad) (bad) (bad) jmp sub fidivrl shlb sub enter (bad) mov js fwait loopne (bad) (bad) (bad) incl add add jns mov insb jns out inc jo mov jne sbb (bad) (bad) in inc pushf test xor adc mov (bad) mov test and mov int3 cmpsb adc mov and sti aas sub jecxz push sub sbb mov test popf mov xor (bad) (bad) (bad) (bad) cli (bad) push push fbld mov jne and fmulp xchg ficompl fbld sub pusha jno ficomp jmp stc sub xchg cmc js mov mov mov rcrl (bad) sbb (bad) lcall sarb fsubrl mov leave xchg pop inc enter scas into jae das ljmp pop jmp push test cmp cmc pop icebp mov gs dec xchg (bad) lcall pop xchg add mov (bad) movsb inc push lret add movsb out clc or loop jnp ljmp std mov add aaa jg rclb mov pushl arpl mov clc out (bad) and iret outsb ljmp xchg and (bad) cmp push in add dec addl mov (bad) (bad) (bad) inc sub or mov leave insl pop imul repnz xchg xor (bad) (bad) call sub adc push lods dec jmp dec xchg aam call mov add fsts mov (bad) (bad) (bad) lcall dec div clc xor loop iret pop pop pusha xchg nop (bad) call mov cmp fs mov jne pop (bad) popa ds sbb (bad) decl fldt sar outsb mov inc cmp pop arpl mov sarl stos adc cmp cmpsb mov fdivrp decl mov (bad) xor jns push imul sbb cmpsb (bad) jno push cmp movb aas pop inc sub scas sti nop dec cld inc mov sub cmovnp repz cmp (bad) fidiv and out enter dec stos dec adc mov sahf inc fwait (bad) (bad) (bad) ljmp gs stos fmulp xchg hlt jae jb cmc pop cli push lea jg out sarl std decl fstl mov cmc in push push push pop nop sahf mov (bad) (bad) (bad) jmp dec dec test aad sti pop repz out in test in xor xchg xchg (bad) push iret push sahf and mov out jns dec insb and inc lret sbb (bad) pushl cmp dec mov jl inc inc cmp (bad) call test aaa (bad) mov dec pusha popa outsl push sub xchg repz cmpsb jo or daa mov in sub adc adc jmp mov out xchg (bad) (bad) jmp mov out mov arpl rolb jp iret hlt test adc adcl popf aad sti sub dec mov (bad) incl shr das int mov outsb cmp mov mov fcomp push adc or lea push lock clc (bad) lcall shrl fucomip stc insl popf sbb loopne cltd imul (bad) mov push (bad) xor push sbb xacquire call xor stos cld cltd inc jmp push pop xchg inc fisttpll mov out mov lret cmp (bad) into popf clc inc dec sahf mov rorb (bad) (bad) pushl stos call sbb cwtl mov testl fstl (bad) ljmp mov pop cmp (bad) lcall adc mov (bad) pushl ss (bad) mov popa push daa fist dec mov mov rolb ret sbb arpl or cmc sbb mov push enter cmpsb adc xchg dec jge add addb ja rolb call loop sub mov sbb push jne and int3 leave call xchg (bad) (bad) (bad) (bad) (bad) (bad) sub mov push lock fwait xchg jo lods xchg and dec pop out mov aad xchg test addr16 mov fcompl loop and xchg add (bad) cmp mov sar je cmp aaa ror ss push jno cmp ljmp rclb lock mov sbb test mov and jp ja ret fiadd test pop jg and call inc mov jbe add sbb lcall lret xchg xlat idivl cmpsl sbb pop push cmp sbb loopne sar test xor (bad) mov repnz or ret (bad) scas mov xchg fmull pop test in jnp mov mov cmc mov xor mov cld das mov (bad) div xor mov dec (bad) (bad) (bad) call aas or test adc adcb and xchg test outsb icebp inc out lahf add jp nop lcall sbb in out outsb mov shrl push lods mul icebp ret or mov mov (bad) decl sbb cmpsb push mov lea adc xchg inc push leave mov hlt (bad) (bad) (bad) (bad) fdivr jp sbb add xchg inc sti inc dec in test sar leave mov jo or pop or mov cmp jno (bad) (bad) decl popa (bad) or (bad) adc add mov cmp pop (bad) xor pop icebp ljmp test sarb ljmp jecxz insl movsl push test (bad) (bad) pushl ret add xor xor xchg mov je dec jnp les (bad) (bad) ljmp repnz mov cmpsb mov xor cmp jp das loope aad shrb add pushf gs cli and gs (bad) cld faddp pop in pop dec inc jns fstps mov dec mov mov jecxz sub int3 fdivrs test (bad) (bad) lcall pop mov ja sub inc ret sarb mov adc mov fcmovnb leave testb cltd adc add mov lods push jo (bad) sub push stos sbb cli add mov push popf and lret mov add pop lcall int hlt ljmp mov push lds dec ds (bad) (bad) jg mul cmc cwtl in pop fimul or call jmp inc mov jmp dec and movsl lock xchg scas dec jl mov mov push adc mov lret nop push push sub adc (bad) push (bad) jp mov lret cmp xchg xorl mov sbb push (bad) and xor loop (bad) (bad) (bad) (bad) incl jg and into mov popf addr16 test int3 cmpsb cmpsb insl jbe mov add mov loope mov clc aaa pop std push std or (bad) fisubr xchg into mov push add popl mov jecxz mov xor jb add pop add (bad) (bad) call cmp xchg cmovs pusha sbb in jp leave repnz jae jle (bad) or (bad) jmp adc iret xor mov enter cmp (bad) (bad) (bad) jmp scas jno rcrb pop cwtl aam cmp push pop xor mov add jge adc (bad) (bad) call out cmpsl cmp mov mov in pusha add mov mov fidivr sbb mov lods aaa adc ss das cmp (bad) (bad) (bad) (bad) stc mov dec test sbb test push dec mov cmp test mov enter mov scas (bad) (bad) (bad) pushl mov loop je cmp test adc mov inc jo jmp mov in pop xor sti aas mov pop xor mov xor or push mov sti ds idivb fsubs std fcomip (bad) inc xor jo adc movsb hlt fistl arpl sub sbb sub pop mov mov imul aaa cld (bad) pushl pusha insl pop jns pop add inc fdivl push stc or lock (bad) ljmp imul dec cmpsl or js and mov adc incl pop sbb add inc pushl in xchg (bad) (bad) (bad) decl cmp add xchg gs icebp xchg mov aaa je inc test pusha mov (bad) (bad) (bad) fdivr sbb cs mov data16 cwtd mov pop pop mov lahf cld mov lret int (bad) mov push add or jg leave jecxz push cmc (bad) pushl cmpl ss outsl mov adc xchg aam int3 nop xor mov jns popa pop out (bad) (bad) mov xor and cld mov sti push inc push or stos (bad) outsl ljmp mov lods and pop mov and test repnz lea call pop stc xor jnp out pop dec (bad) je aam adc es ljmp leave sub sub js push jle mov pushl dec loope lahf inc xor movsb (bad) in mov push aam cmpsl jle (bad) (bad) jmp (bad) movsb push pop insl xor pushf lds cld dec inc pushf out push mov pushf lcall jmp and add das movsl test push cmp pusha pushf scas nop push mov (bad) (bad) jmp jg and scas (bad) out inc aas xchg pop mov mov leave iret fidivr cmp (bad) (bad) pushl mov cmp sbb jle into cmp test fmuls das sub ljmp push push jns daa push fmul ds (bad) pop cmc fistl into daa out out fwait mov scas xor shlb push xchg fdivrp and push jg icebp scas xor ljmp sub std (bad) ljmp repz gs insl sbb adc pop push out enter adc iret ljmp xchg icebp aam pop roll mov mov jl aas push ljmp (bad) incl adc add push inc adc cmpsb sbb repz gs adc jg pusha mov or cmpsb push add push and push clc lcall inc (bad) push data16 adc jl ds ljmp rclb and adc (bad) (bad) (bad) (bad) call aaa mov and js mov mov jo sbb push push (bad) (bad) (bad) jmp push inc loop fwait pop clc out jne push mov out (bad) or push mov mul adc fcomip fiaddl jae loopne (bad) repz cmp rep fs cmp js incl pusha in push div mov pop mov ljmp mov sub in dec ja and sbb test (bad) (bad) (bad) call js and mov cmp jbe push imul movsl jmp data16 sub mov add lock (bad) fcomp insb push mov xchg jbe ror (bad) mov push popa loope pop out lcall test ds loopne dec ret inc (bad) (bad) (bad) call in sub dec movsl ror mov or adc xor jmp (bad) (bad) mov pop push lret stos mov aam bound out les test mov std mov je push mov xlat aas jae mov sub dec sbb jge push sub test dec cmp arpl sub inc fucomip mov call add pop or cmpsb inc in add rorb mov imul popa lea cmc lahf andl scas mov (bad) decl and and adc jecxz sahf inc sar repz jmp push sbb adc xchg test cmp cmp jg mov add sbb sub ja (bad) in fwait push ret (bad) (bad) (bad) (bad) mov mov stos xchg or mov mov push rol jle (bad) jne (bad) (bad) (bad) decl insl ds lret pop mov iret or movsb xchg in gs enter lret push add insl (bad) (bad) (bad) pushl pop imul dec and js cmp push jecxz xor mov mov inc jmp adc (bad) ljmp stc lret pop ss or inc mov mov jbe inc mov xchg (bad) sahf andl xor incl bound mov xchg cltd (bad) (bad) (bad) mov mov mov lods mov and mov stos cmp stos insl movsb das clc (bad) push lret frstor aas lds (bad) xor clc xchg jne loope mov flds push or jo loopne adc lret mov repnz mov xchg (bad) fistl (bad) add test ret jnp sub cmovg pop popf das enter ret sahf xchg (bad) (bad) fdivr adc pinsrw jne pop rorl aad cmp push push mov ret cwtl mov ret adc and nop in inc (bad) (bad) (bad) ljmp push xchg in cmp imul mov or cld les incl cld in rorb test mov jge,pt fsubs jg fdivr stos (bad) call fs jnp clc iret add inc adc mov negb or (bad) es popa cld (bad) (bad) or pop in gs mov cld mov dec cmp xorl popf shrl aad and and lock (bad) ljmp pop div (bad) neg dec mov inc aas clc sbb hlt out clc js int mov pop add add push adc fildll lods fcomip sbb xchg sub (bad) lcall jl pushf (bad) in dec xchg sbb cmp int3 out stc mov sahf repz shll add mov (bad) (bad) (bad) out inc (bad) push jge add bound sbbl (bad) (bad) (bad) jg pop mov es mov mov pushf xchg out adc decl sti loopne (bad) cmp mov repnz inc or stos ret loop ret lahf and cmp xchg (bad) (bad) (bad) (bad) ljmp test mov add cli inc push mov xlat mov and push sub dec adc (bad) ljmp jo mov mov xlat negl rolb ljmp push mov (bad) (bad) cld gs xchg pop adc lahf in das fnstcw ret jmp dec sbb inc push (bad) (bad) (bad) (bad) (bad) fistl xchg xchg sti pop fldt out imul test movl incl mov icebp add or jns addr16 pop jbe dec out ret jbe (bad) cmp jnp jecxz mov xor pop fmull das pop jnp and (bad) pop out mov cmp xor add sbb and int3 sahf pop out and (bad) (bad) (bad) decl dec ljmp mov sub mov sbb clc dec (bad) lcall (bad) movsb lcall mov pop (bad) xchg or (bad) mov xorb fcomip or xchg sbb cmp push mov je inc mov cmp (bad) cmp dec mov sti pop inc inc and adc insl add call (bad) pushl mov cli add and cmp es add (bad) (bad) (bad) call call mov lahf loop inc lret jmp pop aaa les lods adc cld (bad) (bad) pushl gs in cmpsb loop jmp outsl mov xor sysexit inc fcoms mov xchg add jae add (bad) mov decl (bad) mov mov dec ds cmpsb (bad) (bad) (bad) call fwait imul xchg jecxz mov ret pop push mov mov mov jg inc outsb (bad) push ljmp sbb aaa cmp jg inc mov sub stos stos arpl or mov (bad) call jbe enter dec mov jmp int3 pusha imul sbb lret (bad) (bad) cld loopne lret mov sbb mov cmp mov mov ljmp xor dec cmpxchg mov cwtl sub mov ss insb dec arpl sub movsl (bad) (bad) (bad) (bad) fucomp dec bound dec sub pop cmp lods fldcw insb test incl sbb or sub mov pop pop push push sub in pop stos lahf sbb cmpsl sar (bad) (bad) (bad) cmp sbb mov sub je cmp jle mov pop jl,pn je lcall ljmp adc stc dec cli jbe inc or sarl and ret (bad) (bad) incl xor sti dec or in sbb (bad) mov mov and loop enter jg ret cmpl jno adc loopne inc (bad) (bad) decl sbb popf icebp or test inc (bad) inc push or outsb push dec fild (bad) mov adc push mov sub add sub dec test loopne xor sahf cmc pop mov sbb movb es push mov popf out (bad) (bad) incl jg or ficoml push adc fcoml popf in adc inc cmpsb (bad) mov (bad) jg inc sub pop rcrb cltd sbb lret or mov daa sub xchg popa pop xchg push sar (bad) (bad) fistp sub fst ucomiss cwtl add mov stos cmpsl rcll (bad) mov adc pusha repnz sub aas pop add int3 dec loop enter pop fstp mov (bad) (bad) (bad) decl pop xor fs js push xor inc mov (bad) dec test sub (bad) adc gs imul jecxz ret jecxz mov test loope adc jecxz (bad) incl pusha mov cmp (bad) lods frstor or mov adc out popf jp mov pusha test lahf xor (bad) ljmp xchg xchg xchg mov mov loope cmp (bad) (bad) incl dec aad add ljmp sub jp cld xchg (bad) (bad) (bad) dec pop mov inc ss nop hlt out cld mov popf hlt pop std ja add xchg mov (bad) (bad) inc mov dec dec sar scas adc sbb fnop mov fs pushf ret jne pop add shrl mov jns test jl lcall pusha jmp iret lret push xor jae dec (bad) (bad) lcall cs xor push scas sbb adc or push inc jp pop jmp les fidiv lret (bad) (bad) (bad) decl stc cmpsl and std mov mov jb je jo daa sub (bad) mov test (bad) and push sti hlt addr16 les fstl (bad) (bad) jg leave jae test cmpsb fldt or nop xchg (bad) jae mov sti das lret ja movsl pop (bad) (bad) (bad) lcall pop popf fcoms xor pop jg mov cmc or add imul adc mov data16 (bad) (bad) mov movb xchg aaa or mov cmp sub aas add in push sub dec aam out xchg out call mov cs mov (bad) (bad) mov mov loopne sbb pusha repz sbb aam ljmp push lcall add mov dec aam jo adc aaa fcom and data16 (bad) mov push mov (bad) (bad) fcomip lret popf xchg and imul test sub jmp sahf xchg (bad) (bad) jmp lea pop xchg addr16 push pop dec mov mov jg arpl mov jne (bad) (bad) call xchg movsl ret stos pop xchg fimull and inc mov mov (bad) fistpll pop int cs cmc push mov mov scas rcr sbb sbb sub (bad) decl lock rcrb outsb jge lods orb and xchg loop jo (bad) (bad) decl mov ljmp xchg aaa (bad) call call lock imul (bad) pushl ret fstpl pop mov arpl and pcmpgtb cmp pop xlat add xorl jno,pt push mov dec xchg sub fcoml subl clc decl inc daa fisubrl xchg xor sub js push shrb jecxz or (bad) (bad) (bad) pushl mov xchg movsl je clc ss aad (bad) mov addr16 (bad) lcall inc stos xor jno lcall out loope sbb pop dec lods inc ret pop jbe push and sar dec push push adc and cltd cmp dec (bad) (bad) (bad) call sti and (bad) sub cmp dec ret addr16 loop aas mov (bad) xchg jmp mov push dec aam (bad) jmp (bad) cwtl push push popf add xchg cmp xor iret dec ja mov jno pushl ds xor or jge,pt xor dec loope (bad) aas dec and mov jbe aaa jge (bad) push pop call inc and push rolb daa sbb (bad) (bad) (bad) pushl pandn dec pop and addr16 ficom sbb push enter rclb scas xchg lods and cmpl jno push pop sub incl add and jbe (bad) (bad) (bad) cmp in decb xchg mov cwtl jb sarl lea je mov mov ds cs (bad) (bad) lcall dec bound adc lods xchg inc call cmp mov test sub (bad) (bad) ljmp and mov inc cmp push (bad) and call push add out movb stos mov lret xchg and jge ret lock rorb jmp jle lahf sub std xor (bad) pop pop decl and push bound (bad) jmp push mov sbb stos lcall ja xchg mov scas jnp sbb adc (bad) (bad) incl inc aaa jb repnz inc pushf cmpl mov mov jmp fstps jle in lahf xchg xor xor outsl push jmp dec and (bad) (bad) lcall lds mov dec out xchg add fidivl bound (bad) push pop push lret (bad) (bad) (bad) pushl (bad) insl addps bound mov (bad) pusha or dec negl inc adc ret scas ljmp (bad) jbe pop faddl (bad) (bad) (bad) inc pop pop mov push push pop cmp and ss insb jmp add sub (bad) fisttp push mov popl ds aad fwait (bad) ljmp mov dec pusha dec mov int3 (bad) (bad) (bad) jg sbb cmp stc mov and in lds sub ja into stos shr ljmp mov mov add mov sbb pop mov mul insb cltd test (bad) (bad) ljmp dec push ret jnp pop inc sub out mov fildll aad imul popf inc pusha or orl (bad) call subb ds inc or inc ss scas daa xor rol xchg jecxz jg (bad) ljmp jae adc cmp jno cli (bad) mov or (bad) stc jb loop stos pushf call sti (bad) clc dec push js cmp or rol lcall in lods icebp mov mov push imul or push into out fstl mov test (bad) lcall sbb test xchg sti xchg icebp mov lods add mov (bad) out mov mov xchg mov sbb mov (bad) cmc idiv mov insl pop dec fiadd and and leave mov inc in aad xor enter xchg repnz test sub (bad) (bad) (bad) call or cmp outsb or inc cmpb jnp rorl jg roll out mov dec mov push mov cmp mov mov mov enter sbb movsb mov (bad) icebp mov sarl lods fcoms in adc (bad) (bad) (bad) mov das jp adc jo mov aad cmp outsb test repnz jae mov andb pop sbb int lods jecxz sbb scas (bad) incl icebp mov jo xor dec call push jae (bad) std call mov rcr push sub decl adc xchg add fisub into es in and push (bad) (bad) (bad) (bad) decl repz push js jnp jnp push sbb adc and mov inc int3 in mov and (bad) adc and scas mov arpl es iret sub pop or in (bad) cmp js sbb cwtl mov (bad) (bad) (bad) incl lods enter fstpl fsubrl sbbl std cmp jno cmp (bad) (bad) lcall mov cmp jb xlat sub mov jp sahf xchg or mulb repnz mov int pop jge inc ficomp movsl test icebp push pushf sar xchg (bad) call std inc (bad) outsl add test or int3 mov inc jno movsl scas ficomp (bad) push incl add into adc pop xor std (bad) (bad) and lahf daa inc in pop xchg push mov xchg sub xor out pop inc lea mov (bad) jg push pushf mov into insl jo sbb sub loope inc ss ljmp add out add push add (bad) (bad) (bad) aas cmp ret xor in repnz fldpi jb and mov mov lcall jmp (bad) gs ds inc xor into cmp call or sub test pusha pop lods (bad) sbb (bad) (bad) incl or pop fcmovbe inc (bad) fild in ljmp sti aam and (bad) (bad) decl (bad) pop (bad) outsb cmp mov ja fistl outsb (bad) outsl in jns lea (bad) jg decl mov and mov scas outsl mov dec sub mov add xchg or mov adc incl out rcl mov push jbe sbb int3 sahf daa dec rcr mov cmp sbb incb push or push jbe cs jae inc ja jb in (bad) scas sahf sbb and push cltd bswap mov add push imul push jge mov incl lret popa sbb bnd mov sbb lret in jmp sbb ficompl xlat jno mov (bad) jp ret jl cmp cmp sub outsb xor sub jle (bad) decl fcompl int3 or repnz loop lods adc inc lret (bad) (bad) (bad) jmp (bad) mov and popa fsts jg jb notl decl cmp ja dec pushf sbb (bad) ljmp clc clc ret fiadd mov cli mov sbb test add call fnstcw mov cmpsb stos cld (bad) mov jmp daa (bad) lea push cld aaa shrb cmp (bad) std cmp pop inc cltd clc ja jb push xchg (bad) (bad) (bad) incl add cmp addr16 jae dec int xchg adc stos add stc push mov (bad) (bad) decl or push test pop (bad) or loopne sti enter iret dec int in (bad) jge jg dec mov cmc mov repnz incl dec push mov jae sub adc add mov pop cmp push push mov jo mov (bad) jbe (bad) or mov sub cmp rclb dec add add (bad) (bad) (bad) mov stc ss sub cli jbe insl cli pop das jle jge imul pushf scas lock mov cs dec aaa jns jle (bad) (bad) mov cmc cld (bad) dec push ret into (bad) std test stos call repz jp out incl lock into and jne (bad) (bad) (bad) (bad) jnp fwait push pop cltd sub push jle call jmp scas inc imul jne adc (bad) (bad) (bad) call jno les addr16 loopne das insb cli cs lea jge rcrb in (bad) (bad) jg push cs sub ds cmp add cmp dec pop outsl xchg movsb jg lahf test ds ds (bad) (bad) decl shrl ret sbb mov gs aaa mov andb mov push (bad) add fdivrs ljmp (bad) enter sbb loop sti xchg mov lods arpl icebp (bad) (bad) ljmp repnz jo nop dec pop and mov lret jo sub cmp nop imul ja fcomip add sbb (bad) fwait xchg das cmpb or lahf and jl push adc divl sub orb movsl negl les lcall mov (bad) (bad) mov int3 push js push dec xchg test ret push pop je imul or (bad) (bad) lcall cltd roll or push daa and out cs jb mov (bad) (bad) ljmp int3 (bad) ss inc insb test test into or push repz mov sti addr16 decl in and stos xchg cmp xchg in fidivr je addr16 (bad) (bad) call out roll xor (bad) in mov or (bad) addr16 out outsb mov in cmp mov bound sahf pop fidivl (bad) jnp inc in in push pop (bad) (bad) jg inc imull movsl outsl arpl imul lock sbb ret pushf mov sbb (bad) (bad) lcall (bad) hlt fmulp in (bad) fistl ficom push dec ror sub imul (bad) ljmp adc (bad) int push arpl lahf stc jns dec or (bad) (bad) push sub jl sbb jmp dec mov and roll xchg cmp jp jg jnp push jp jmp sub mov push adc jmp call inc cmp sub (bad) (bad) incl rcll mov inc test mov push cmp jp cs out inc scas je (bad) (bad) jmp jge daa pop rorb inc jbe push movsl dec inc int3 xlat gs dec shlb jl sub (bad) decl test imull es test cld loope fdivrs adc fcomip jmp push loope mov push dec inc and test push push pop lock call repz leave cltd xchg fimul sub insb or add dec inc (bad) (bad) (bad) pushl (bad) sete cmp mov out add icebp mov into fwait sti js or popl ja clc (bad) dec mov cmp jmp add push (bad) (bad) (bad) jmp sub push dec in mov shr push or out sbb mov fild sbb inc cltd jns (bad) push xor out cmp (bad) jg jno (bad) aaa daa and pushf and imul xchg movsl fisubrl std cmpl pop mov (bad) push fwait inc add xchg add addr16 (bad) or sub (bad) (bad) (bad) decl popf sub fisttp dec mov fbstp jb mov (bad) jl xchg dec and (bad) jg call nop (bad) aaa pop mov pop cltd dec dec mov xchg loop mov mov (bad) (bad) (bad) jp das jecxz lcall (bad) int3 mov ja ljmp push push out call hlt ljmp lret ja scas xchg mov or mov (bad) loope mov (bad) (bad) jmp mov mov push add mov or std decl lods push in stos je call mov mov pushl push call in ljmp or in push sti fisttp les push jb (bad) (bad) (bad) sti inc insl fildl test cwtl fnstenv (bad) jae xchg xor ficompl mov pop adc (bad) jmp pop push clc or push shlb adc (bad) (bad) stc movsl sbb jge pop loop into push rolb js add (bad) adc ljmp add dec nop testl mov jg xchg sbb mov rcll push sbb (bad) jg ds mov inc loop add dec sbb inc sub push outsb popf dec jae outsl clc decl pop aam push (bad) (bad) div lcall in js cltd pop cld icebp (bad) (bad) incl out ja int test pop xchg fidivrl push push ror shll stc adc mov and aas xchg cmpl xor adc ds xchg in push and dec pop aad jbe call (bad) mov cmp lret mov add fistl sub (bad) incl and sub sti out imul nop add fimul xor mov pop test cld jmp fiadd sub pop stc (bad) fdivp adc cld xor (bad) (bad) incl mov sub sbb test pop mov lahf cs incl test inc mov mov (bad) decl sub mov pop cli mov xchg inc and cmc push mov int sahf sar (bad) (bad) (bad) std sahf add add jno xchg cmp out mov inc and (bad) cltd (bad) (bad) (bad) (bad) decl push inc xor jle loop aam (bad) or das pop ljmp sarl (bad) (bad) (bad) jmp sarl lret imul xor mov into sti sbb (bad) lcall fcompl mov adc clc outsl add sbbl inc sbb jecxz or (bad) mov mov dec jbe dec insb fmuls repz add add loop mov jmp jmp xor fwait sbb mov cmpl or out in lods xor jnp jnp and cmpsb (bad) call sub push jmp cmp xchg fwait (bad) mov es push inc push stc std (bad) (bad) (bad) clc ss mov lcall sti pop leave stc jg pop shlb xchg (bad) (bad) (bad) call inc in sbb jns (bad) insl cmp add scas add movsb ret je and decl jns aas (bad) pop adc mov insl xchg xor (bad) incl mov xor jp xchg (bad) mov fidiv sbb movsl fisub mov xor ss push mul (bad) (bad) incl xchg inc xchg jae call adcl mov dec cmovne clc das sub and outsw ljmp lods inc mov in push jb inc xchg fdivr (bad) (bad) ljmp ljmp lret xchg clc xchg (bad) shr dec mov daa mov xchg pop or incl add js jmp fnstcw repz pusha jmp cmp addl incl sbb rolb push movsl xor cwtl ljmp xchg mov loopne (bad) (bad) jg enter gs pop sbbl add stc inc mov mov out sub cmp ret (bad) (bad) lcall mov cmp push (bad) ds xchg mov (bad) fcompl js (bad) (bad) jg test sub inc add hlt pop and rorl ljmp (bad) lcall loop fiaddl mov bound cmpsl dec aaa (bad) pop psraw movsb push into ss sbb dec jecxz dec popa loopne pop and xchg insb cld mov lcall ror cmc add ds rol lcall aaa int3 aas sarl jne sub inc inc mov fild negb test lcall mov iret mov mov inc jo imul pop lea loop push inc dec test push out xchg or pop jecxz iret arpl adc out fild (bad) (bad) mov int3 int3 mov and push add std push adc mov ret xchg mov (bad) (bad) call dec gs cltd add add cmc (bad) mov push fs pop out sbb and inc test nop sbb gs repz mov (bad) call pop in xchg push aam sub xchg (bad) (bad) (bad) ljmp out test aas jmp (bad) push insl iret lds mov mov (bad) call movsb fwait sbbl lahf and mov je clc sti in pop leave add (bad) (bad) ljmp scas jns and pop notb push mov sti push dec jbe imul cmpb mov cld loop punpckhbw pop cmp and insl mov mov adc (bad) (bad) ljmp aad (bad) jecxz clc pop fsubrs mov push (bad) cli sub (bad) cmp push sbb dec mov pop pop nop inc test std (bad) (bad) out lcall enter insl sub fpatan jne dec dec (bad) jae jg or test mov mov dec imul push leave das sar test or js fs in push js xchg xchg scas frstor jl xchg or (bad) (bad) ljmp sub fbld (bad) xchg and popa movsb mov popf ja scas adc cmpsb add mov add xchg pop jmp pop xchg push push push push fildll in adc fs (bad) (bad) jg jo push mov xchg adc popa pop mov (bad) pop push outsl sbb (bad) (bad) (bad) call pop push dec imul pusha aad push stos mov std jb push mov incl mov inc mov adc mov sarb fstps shl jle (bad) call jge cmp jmp pop lahf nop push inc nop in cwtl arpl int3 int3 lds enter (bad) (bad) ljmp dec lgs adc fmuls aad lea sahf mov testb or in cmp sarl push fsub dec inc enter arpl (bad) jg jbe mulb mov push push iret lods stc xchg mov out sbb aad (bad) (bad) (bad) call lock push inc jbe ljmp push cmpsl adc mov push nopl out (bad) (bad) (bad) (bad) mov and push and out bound mov lcall (bad) (bad) fiaddl clc jl aaa into fdivrs mov cwtd fisub pop and xchg lock (bad) ljmp loope popf stos insb sbb adc nop mov lcall add mov (bad) mov xchg cli xor xchg dec lea (bad) (bad) ljmp pop dec cmc pop repnz (bad) andl lret movsl push lea mov sub out add mov int3 lock mov and mov add inc and pushl inc mov je in daa es stos xchg bound test jp (bad) mov out (bad) adc (bad) (bad) pushl repz pop jae sub ja insl jle adcl mov cmp xchg incl inc cli jle scas nop jae test ss and mov loopne pop mov popa rcrb adc fstpt xlat inc xor add adc (bad) in ljmp or fcmovnu outsl loop push cmp inc std mov pushl (bad) fsubl xchg aad or daa aam sarw cmp dec incl fistp mov daa mov dec insl out mov jmp incl std mov aam test sti lock push enter dec icebp ret call dec loope imul imul lcall cli pop mov loop lds dec mov and loopne or (bad) aad sahf pushf push (bad) or or (bad) (bad) jg (bad) sti and stc lcall xor arpl lods inc sbb (bad) (bad) lcall cli mov cmp lods popf adc aaa gs mov and push xlat mov mov (bad) (bad) (bad) decl lcall dec out xlat lods mov jbe mov pushf addr16 (bad) (bad) incl fstpt inc not (bad) xor xchg aam cwtl in div sub mov dec imul call sbb (bad) pop cmp addr16 hlt jbe daa xchg sbb jge (bad) xor mov jae add (bad) fsts lret lock (bad) (bad) (bad) jns addr16 sbb sub dec push fsubrs mov flds (bad) sti sub sahf sar (bad) call push imul jnp or aam mov in cmp mov (bad) (bad) aas inc fiadd ja stos stc test lcall push xchg sarb test (bad) (bad) incl movsb jbe hlt mov jp aam dec lahf aam aam or xchg mov in mov (bad) mov and xor jle lret and jae (bad) das lret add call (bad) (bad) (bad) ljmp push ds clc or lea jno test or and inc push xor push daa test push ret (bad) (bad) (bad) jnp imul or and cmpsl stc sar rcrb aas push decl loop push cld fidiv sarb push add or jge (bad) (bad) decl fnop mov lcall daa sbb jmp push jecxz lcall sub int3 icebp out adc dec adc xchg dec (bad) (bad) (bad) (bad) incl xchg mov mov mov fisubl pop pop out xor or or call mov jmp scas push push out push add mov xchg aas cwtl adcl (bad) (bad) (bad) jmp cmpsb xor repnz iret xchg mov cmp out pop xor leave lcall push mov stc inc insb cmovne cwtl stos dec xchg xor mov (bad) lcall movsb (bad) sub out gs dec imul outsl dec xchg adc xlat insl mov (bad) (bad) incl loopne ss push or inc fsubr fcompl inc insb mov sbb adc dec cld (bad) decl sbb pop cmpsb jo cwtl aad fisttpll dec cmc pop cltd cmp jns (bad) mov jbe andb mov sub sub mov jmp sbb sub push imul xor incl adc popf push data16 pop mov fnstcw sbb repnz add or cltd shr cltd mov inc cmp ja ds push out test aaa pop fbld aas or (bad) (bad) (bad) incl xor movsb lds dec xor mov repnz mov in scas out push out pop sub push pop push pop (bad) je jecxz ljmp or sub loopne mov or or mov xor pusha les ss xchg insl lret ret xchg sub lcall enter adcl (bad) mov jg pop out sub popa pop in mov mov (bad) (bad) (bad) pushl into xor xor jbe or mov mov out aaa dec int3 (bad) xor add push and test scas mov mov pop pop sbb (bad) cli inc outsl or repz mov pop or loope fsubr sbb (bad) out fdivl rcll cmpsb test outsb mov aad je inc pop fisubr lcall (bad) (bad) (bad) (bad) stc int lcall mov xchg push cmp (bad) adc insb fucomi xchg iret out and subl cmpsb xchg ja (bad) pop cmp pop sarb mulb adc pusha ljmp loope into mov sub inc add clc into sbb (bad) (bad) (bad) jns sbb lods in push pop loop dec jbe dec fucomip inc mov (bad) gs (bad) mov frstor xor inc int3 test add inc sarl (bad) (bad) incl sbb pusha sub jo popl adc or (bad) mov push into enter cmpsl inc add add cmp movsb fs clc movsl xlat push pusha stos lcall decb fbld sar xchg add (bad) inc pop push jbe movsb in jns and inc enter roll sub aaa std decl mov push (bad) test pop or xchg das (bad) mov jle push and (bad) dec pusha mov mov (bad) (bad) jmp pop sahf and aad in sbb js or movsb ret xor imul jmp rolb xor clc (bad) mov emms inc mov outsl (bad) (bad) (bad) ljmp mov stos stos mov add stc nopl xor fs ja (bad) mov repnz xor leave fildll (bad) (bad) call lock mov fdivr test gs outsl nop movsl stos mov inc ss cmp (bad) (bad) (bad) sti mov inc andl dec dec call xorl loop incb cld incl jo push jl pushl mov inc pop pop (bad) jmp call mov jle dec lcall dec xorb (bad) call add enter xchg jbe or dec pop xchg xor mov inc mov mov mov pushf jmp shlb mov (bad) lcall sbb mov jae repz call ds xchg push lods stc (bad) dec mov scas cli (bad) incl cwtl adc sub std jecxz in push mov mov or aad mov push rcll icebp mov lea push (bad) (bad) (bad) incl loop int add (bad) or jno aas jo jae out cmpsl adc sar (bad) std cmpsb scas std xchg and jmp mov ss (bad) mov nop mov pop je dec dec pop enter push mov insl mov mov sahf (bad) jg jg xor jnp ljmp push repz mov jl enter pushl push (bad) data16 test and stc jle aas xor sbb (bad) (bad) call fisub aam mov mov and sbb repnz cmpsb cs decl push cld mulb data16 mov cltd pop (bad) pop push (bad) and and jge push negl std and cmp cmp lret popa inc xor and je sub mov push dec (bad) (bad) (bad) incl mov mov sub add repnz (bad) sti std or repnz (bad) (bad) fstl add mov rcrl push repz imul xchg and imul (bad) xlat out in adc fcoml fidivrl mov cli das inc or dec sahf rcll shll mov xchg mov (bad) in or mov xchg jge push inc or (bad) (bad) jle xchg mov insl xor imul push mov cli (bad) and gs or call pop mov mov mov cwtl fwait lret ja jp mov movsb inc decl ljmp sahf addr16 xchg add idivb sbb vandps sbb jno (bad) (bad) mov cmp or push add scas loopne rcrb sbb (bad) (bad) (bad) pushl pop out (bad) push mov hlt push out div push cli pushf push inc lds jp sbb sbb sub (bad) (bad) lcall push inc sub mov test push cmp xor xor pop jmp (bad) (bad) fsubr mov dec mov into aad mov jg adc (bad) (bad) jg mov mov mov pop dec mov inc test pop ljmp data16 mov outsb sbb insl add je push aaa cmp call aaa aaa (bad) decl out repz sbb mov lock ds (bad) (bad) (bad) (bad) fcoms scas mov test mov add hlt cmp xchg sbb (bad) (bad) decl or inc adc xrelease pop add xchg add hlt xchg jne (bad) (bad) (bad) dec cmp xchg call pop outsl in push lea jmp cld push push cltd les or add mov xor lret aaa sbb pop mov jae int3 icebp inc sti sti idivl decl add ja (bad) dec push clc cmp add jge divb stc cwtl mov call std mov mov mov xor and (bad) (bad) (bad) jmp cmp xor xchg out bound add and mov sbb pushf jns xchg push adc jmp mov sahf inc les pop jns (bad) (bad) (bad) jns push pop adc out loop and (bad) push dec in mov js ret lret cli jmp mov loopne sahf iret (bad) fucomp in mov out dec dec inc adc xchg mov ret xchg jo loope scas int3 pmulhw (bad) (bad) mov (bad) (bad) (bad) call cmc mov mov xor adc int3 mov aam jae push orl (bad) call mov mov dec data16 mov jnp ljmp and mov gs (bad) (bad) ljmp xchg fdivrl jbe iret out jge and mov test mov (bad) jmp popf mov ds test rcr mov dec cwtl dec les andb loop pop mov cmp (bad) decl data16 in pushf jl bound xor push dec or mov ljmp xchg mov and dec cmp (bad) (bad) (bad) lcall adc sub in cmp orl sti test sub leave cmpsb aas pop push aam or dec lock test jb cli (bad) incl and in in jl (bad) jae (bad) (bad) (bad) incl push outsb and dec dec rolb inc mov ja xchg pop push (bad) lcall push push push ret push dec imul (bad) cs adc jl and dec cmpsb in mov (bad) jg mov mov popf das (bad) into cmp out sub adc and xlat xor lcall add repnz loope (bad) test loop int xchg dec int push push sub (bad) (bad) (bad) jmp int3 mov ffreep mov fisub ja int in out stc mov sbb (bad) (bad) lcall insl sub addr16 lock pop sub xchg stos add fldl dec mov call movsb mov fmuls add repz inc hlt mov das sub xchg pop (bad) (bad) (bad) pushl lcall mov and decl sub shrl movsl mov ret int sbb (bad) (bad) (bad) ljmp insb mov stos add cwtl push inc testb lret sub xchg jmp lcall loop lret fwait dec jmp mov iret jbe sbb scas fldcw sub icebp ljmp mov pop insl cmp (bad) (bad) decl sub out pop fisubr or adc inc or clc das imul (bad) fidivl or mov sbb adc mov push xor cli jmp jae,pt aam mov fst cmp mov add xlat mov (bad) pop add sub jp lods cli (bad) cmp stc jnp insl xchg popf outsl cli inc out pop xor mov aaa (bad) fstl js dec ror push lahf into sbb adc jmp (bad) (bad) (bad) out fimul mov nop push rcl jae std or movsb js repz xor jne or repnz (bad) (bad) lcall bound cmc pop cmp dec hlt into inc xchg jg xor bound (bad) incl xchg mov mul je shlb mov adc adc out mov ds (bad) (bad) dec add or repz mov lock aad dec adc sub stos test (bad) (bad) (bad) jmp mov jl adc jne divl xchg in push jae (bad) (bad) pushl mov js and test movsb repz neg push hlt int loop test jg and cltd sub fnstenv or sub cmp cwtl add lcall inc xlat repz mov (bad) lcall pop dec std mov sbb inc loope gs test fsubrl hlt sub test add cmp jmp popf cmp pusha xor int3 jecxz inc (bad) (bad) (bad) jg lahf pop movsb mov les mov fsubr push xor jmp in ja cmpsb jle push add sub cld dec sarb inc in mov repz gs inc sbb icebp sub xor pushl add les add inc and jae mov inc popf and sub outsl (bad) mov iret stc enter lock or sub (bad) decl (bad) adc xor addr16 int3 inc test sub addl and dec cmpb (bad) decl fwait lahf jnp int3 cmc add mov enter (bad) sahf ret or mov mov jg aam pop jno in mov inc cli pushl or rcrl or lcall popa push push mov ds xor (bad) jmp pusha rol add cmp adcl jne cmp data16 jp repnz insl mov mov xor divl add xchg add aam insb insb dec mov pop es (bad) (bad) (bad) jl adcb push cmp and lahf mov inc jp pushf sti or mov sub xchg out popa jecxz inc lods ljmp fneni(8087 mov push cmc movsb cs (bad) incl pushf (bad) dec xlat (bad) jmp xor fdivrp (bad) (bad) jg sub jo int3 imul push xchg addr16 mov lock aam mov cli decl mov inc push mov xchg push mov lcall ljmp lods (bad) xor lods int3 pop jbe mov xchg inc test (bad) jmp sub cmp or xchg fs add mov add pop pop rolb dec cmp jg fcomip push lret pop cmp mov stc retw adc (bad) (bad) call cmp and pop ljmp (bad) (bad) fisttp sahf out inc mov mov sbb es adc pop in push (bad) repnz (bad) (bad) push xchg mov fistp adc inc push push push pcmpeqb cmp std (bad) (bad) pushl adc fld mov or add mov into add movsb dec (bad) shll add ja cmp mov imul nop add out decl leave shrb dec push idiv outsb mov (bad) (bad) (bad) (bad) mov add xchg mov xor pop xor add (bad) (bad) pushl sub roll leave insl enter xor adc jl mov xor (bad) (bad) (bad) lcall fwait cmpsb aam push pusha div mov and popa dec cld push bswap add mov cltd rorl ljmp jecxz in add ret int3 inc fstps outsb sbb add (bad) (bad) cmp cmp out adc (bad) (bad) pushl and pushf pushf add jl lcall adc jecxz fistl fisubl ret dec shll jg cwtl mov fs xchg cmpsl negl jle or (bad) (bad) aas or cmp inc shrb test and cmp (bad) (bad) (bad) jmp arpl mov or adc mov (bad) fbld mov pushf out lock (bad) ljmp sub dec and in inc out jge and xor mov mov sahf divl mov mov ss or or xor mov cmpl mov jg sub ret pop adc push imul jg incl sub fidivr fdivl ljmp inc fstps (bad) (bad) call sbb stos jb inc leave or add fdivr std fistpl (bad) decl fcomps mov push aas mov ljmp sbb notb (bad) (bad) out cli xchg inc sbb lods xchg incb loop out jecxz lahf repz scas ret decl rcl xchg sub push pop mov sbb imul (bad) (bad) call inc popf movsb sub loopne shrb xor inc data16 fnstsw fsubrl inc push lahf pop xorl or ljmp mov cwtl inc shrb xchg xor sub add in xlat out mov mov inc xchg ret fiadd test mov sub jne mov inc loop ljmp (bad) (bad) lcall jp sbb jmp cli and je cmc sbb or movsl js cmpsb repnz lcall ds mov or nop into aam enter (bad) (bad) (bad) incl fwait xorl out push pop rolb sbb sbbl mov (bad) call stc stos daa mov push fcomip ljmp pop add lds inc and (bad) jmp rorl rcr mov xchg clc add and adc std (bad) (bad) (bad) pushl shrb sahf cmp push push dec sub jns xchg cs in mov je fdivr (bad) (bad) call mov cwtl aaa push sbb mov call xchg pop dec out jg ljmp mov es mov mov dec clc (bad) (bad) jg pop push mov adc xchg mov orl inc daa push repz jae mov out xchg push ljmp jbe inc das (bad) (bad) (bad) lcall jnp,pn mov std fiaddl lcall js jne aaa popf xchg (bad) (bad) (bad) pushl lea ret mov xchg loop cmc xor adc imul mov push jl mov sbb push xor enter or sub int mov (bad) lcall cmc mov xor and test xchg (bad) mov pop mov inc adc add mov add incl into push jle sbb dec cli add iret (bad) pop xchg xchg xor add pushl and mov fisttp (bad) (bad) (bad) (bad) in dec jne ds add loop jnp aas mov les add inc repnz insl aaa or decl decl or inc cmp (bad) fiadd jbe jnp ror rcrl decl fisttpl mov (bad) call fs mov mov test push mov rcr jnp in daa mov inc push (bad) (bad) (bad) decl subl into clts loop fistp xchg out push dec arpl sbb jno testl (bad) (bad) (bad) incl ljmp jb cs decl mov jo and clc mov (bad) xchg call adc in sub je fisttpll pop xorl cwtl jbe push mov pop clc (bad) (bad) ljmp (bad) lock xchg sub mov mov mov push aas call cwtl (bad) pushl sbb inc pop xchg cmp adc das (bad) (bad) (bad) lcall push outsl sbb cmp jecxz cmpsb jno pop mov sub xchg sbb mov (bad) (bad) (bad) incl dec mov fstpt inc mov test in scas add fs (bad) (bad) jmp push sbb xor dec lret inc mov add (bad) and addr16 sub pop ror lods push orb or pop mov sar movsb imul mov cli stc jns bound xchg sub (bad) (bad) (bad) decl mov in fist jbe mov popf xlat lea push ljmp mov dec testl and dec push mov movsb cmc les (bad) (bad) (bad) incl push xchg fnsave lock xchg inc (bad) xor adc or cmpsb jae sub push or gs adc gs mov adc adc mov call flds sub sub into xchg and out jl (bad) (bad) (bad) dec adc push addr16 pushf imul orl xchg add popa xchg movsl sahf movsb jbe cmp lcall pop movsl cmp inc mov mov sub test inc inc pushf fmuls push dec ljmp decl mov jg add add jbe data16 xchg mov (bad) (bad) call mov out cli add (bad) sahf (bad) popa xchg cmp test or sbb adc or test cltd movsb jnp mov mov push repnz jae les or popa or std in into test ljmp aaa dec fdiv scas and stos ret jge fiaddl push mov (bad) (bad) (bad) cmp xorl mov push dec daa dec dec shr cmp mov pop lods mov incl add push fsub push (bad) mov cltd (bad) testl jge inc jne orb mov sub (bad) (bad) (bad) dec mov andl adc push movsl enter jp in (bad) (bad) jmp fwait (bad) and aad fcomi pop div sti nop sarb int sbb lret adc int3 rclb (bad) (bad) dec insl popf and clc mov icebp sbb cmp mov mov fcmove cmp sub (bad) fdivr int pop out mov (bad) xchg xchg cmp xchg cltd mov inc dec ds jbe xchg mov (bad) sbb (bad) (bad) (bad) in jge mov inc out mov add xchg xor cmp fcomip ljmp cmp and push sbb aam or sub sbb (bad) pushl mov inc cltd es mov jp movsb inc fsubrl dec dec clc adc lods and ds push in cli cmp (bad) (bad) (bad) pushl sti xchg sub xlat cli insb je mov and dec (bad) mov pop pushf or psubb decl (bad) incl add cli and lea enter cmp cmc sbb hlt or sahf (bad) (bad) (bad) (bad) mov lds aas shrl out fstl (bad) in data16 rcrb dec jmp outsb and cmp bound sbb cli ljmp clc das int push lods sbb push adc or or or (bad) ljmp dec inc outsl adc sub mov mov fwait clc repz inc jb mov lock mov pop cmp or div cwtl cmp or (bad) or push in jbe xchg mov ljmp mov xor packsswb mov sbb push mov popf hlt rclb (bad) (bad) incl enter jb push out mov mov adc (bad) ss pusha dec insl xchg call xor cli (bad) ljmp subl xchg lret mov mov pushf cmp mov dec cld (bad) (bad) ljmp adc cli fisttpll lock sub inc inc dec rcrl adc loopne adc (bad) (bad) incl mov rcll (bad) outsb idivl imul jmp push sub (bad) (bad) (bad) decl and out jae or xchg push int3 lret daa sti std jmp mov jbe pop rorl mov mov cmp push (bad) sbb (bad) (bad) pushl sbb scas test dec mov mov add ljmp stos int sbb fnop lock mov or add nop (bad) (bad) (bad) mov sub xchg lret mov push stos mov sbb mov xor and aam (bad) decl cs adc popa cmpsb leave jle decl xor inc cmp and call inc mov fwait dec jne and scas mov jg (bad) (bad) (bad) lcall ljmp mov int3 gs rcr and cmpsl fcmovu out (bad) jno jge (bad) lcall push popf mov cli gs out sub mov adc rcrl (bad) dec cmpl shll into sub or fistl jne enter or (bad) (bad) (bad) cmp les cmp add test push pusha cmp ds int3 mov inc cld outsl fcomp push cmpsl dec rcll lret aaa mov sahf or xor jmp in insl insb decb lcall jno add mov inc pop es and fdivs sub hlt cmp pushf adc dec adc (bad) (bad) jl push mov push mov cmpsb sub (bad) incl dec cmp pop andl sub (bad) stc stc bound push test inc push jmp sub jmp cmpsl das mov mov (bad) (bad) (bad) cmp inc push mov push jno mov aaa aam repz rclb push jne enter (bad) (bad) pushl (bad) pop xchg (bad) nop (bad) fcoml sub adc clc sub aam std (bad) (bad) (bad) incl loope negl xchg out (bad) (bad) pop jp (bad) xchg inc jae cltd cmpsb and cli fldt (bad) decl push xchg daa mov addr16 js hlt sub ss test dec xchg inc mov vxorps mov jo imul sbb pop and (bad) (bad) (bad) sti and cmp (bad) daa test xlat stc add cmc push mov and mov mov jle jmp and fmull ja jb add stos adc xlat lods clc cs (bad) aas cmp lods xor ficom (bad) in mov (bad) ljmp xchg das sub rcrl mov mov push ja push cmp iret fsubr inc ljmp jmp (bad) sub jp dec cmp mov jg cmp push push fcoml je (bad) (bad) (bad) jmp or inc and or (bad) lret xchg xor sub mov (bad) (bad) inc test mov jl inc xchg nop data16 gs arpl push sub ljmp (bad) (bad) out sub pop sub sub in inc ror mov add mov outsb dec cltd daa fwait xchg lahf (bad) (bad) (bad) dec rcl jno (bad) jl xlat adc ret sub leave dec std das cli in jo (bad) shrb push out mov (bad) (bad) incl (bad) popa sti enter fsubs out jp out add ds decl jbe inc lods xchg leave popf popf sbb (bad) (bad) (bad) call pop in popa dec mov scas jmp stos aas jns jmp hlt mov and subl mov adc repz rorl mov inc mov xchg icebp sub nop mov adc push sar (bad) dec mov pop popf sbb lcall int3 or mov push (bad) or out adc jg (bad) call cmpsl shll mov jno adc dec jmp insb (bad) mov xor ja incl dec mov inc fwait adc lcall lds fsubrs lcall fcmovnu lret fildl mov pop jnp (bad) incl lods xchg jg imul cli sbb aad sub (bad) ljmp push ret mov mov rcr fist mov push mov pop mov jns arpl or (bad) (bad) cmp add dec mov push mov lods xchg sarl sbb aaa jnp (bad) (bad) incl or or (bad) cmp add dec pop iret shlb (bad) jbe (bad) (bad) incl fisttpl lahf and add lods jg rclb xor xchg push jle mov les mov (bad) (bad) fimull mov xchg add (bad) (bad) ljmp and test or cmp (bad) popa test or je or ja push adc and shrl ret xchg (bad) inc add (bad) pushl add push sbb cld in in adc jae and (bad) (bad) (bad) fcmovnbe or int3 lcall test adcl (bad) lahf stos (bad) (bad) decl (bad) cld mov or xchg stos lock fsin mov int3 inc xlat push (bad) lcall xchg test ds push sbb les push (bad) insb lea or (bad) (bad) (bad) std lret loop jb movsb jno adc mov int adc adc mov push sbb mov cs sbb outsl push (bad) stos (bad) push adc mov out pushf es cmp and js add (bad) (bad) lcall arpl xor or sbb cli addl (bad) (bad) mov sbb imull cmovg push (bad) call decl lock sbb sbb fdivs shrb pop ss cmp (bad) (bad) inc add aad insb insl imul iret dec xchg mov jecxz (bad) (bad) (bad) call add jo loopne pop je les sbb lahf pop imul scas (bad) (bad) (bad) (bad) lcall adc out ljmp sbb scas push cs add test lcall incl pop mov xor sub int (bad) pushl out popf (bad) pushf cmpsl fs xchg push insl fscale or and hlt sbb es inc std xor cmove mov incl dec ret and fcoml rclb pop mov push fdivp xchg pushf fimull call or loopne xchg ljmp sar sub popf xor mov imul (bad) (bad) ljmp stc aam int xchg or stos hlt jle and sti lods cmpsl mov or ljmp mov aad dec lret sahf std dec aas sub pop pop (bad) incl xchg xchg fsubl or pushf iret mov imul (bad) negb ljmp dec loopne imul out arpl and push cli scas sub mov mov jb (bad) (bad) out repnz sub and sub test test push int3 jg jns pop icebp (bad) lcall ficomp lret stos xlat or out sbb mov xchg push (bad) (bad) (bad) (bad) jle sbb mov cli aas dec jbe out lret fnstenv inc mov lea data16 push stc add imulb mov mov popa mov mov xchg das clc (bad) decl (bad) push into inc dec and outsb jg (bad) jb jb inc inc and stc and (bad) (bad) lcall jecxz cmp sahf int jnp fisttpl scas mov out inc out in push (bad) lock cmp jg incl (bad) jge and mov outsl xor shll test fistpll (bad) cltd aad in lods jnp (bad) call std mov sahf fiadd mov out mov leave ret add lret popa sub or stos inc sub clc repnz mov sub js jbe iret mov lea fdivrp (bad) (bad) mov sbb nop cli fsubl adc sarb mov mov ljmp xor pop in (bad) (bad) mov es and (bad) xlat or and (bad) decl inc lods ljmp test jecxz mov dec hlt mov (bad) (bad) incl repnz push mov lods cmpl in add sub (bad) (bad) jmp iret jno scas fwait mov cmp pop xchg in inc xchg mov xchg adc testb rcrb in push and pop pop jmp jmp pop movsb std sub aam movsl test ret in pushf xchg jnp call jno,pt jbe xchg sahf in jle adc ljmp push dec cli and xchg movsb dec lret adc cmp (bad) (bad) ljmp mov fdivp pusha jl icebp jg mov aas imul and xchg cmp mov lcall divb inc pop push (bad) (bad) ljmp (bad) pop fbld jnp and out jae stc push xlat cmp jae cmp xchg bsr popf pop (bad) dec ret addl xor (bad) ljmp ret lods popa and icebp push js movsl dec lahf cmp xor inc inc xorl push mov mov cmp std push scas clc scas in pop and cmpsb push js xlat push mov lock inc ret add dec jle dec imul popa jp (bad) (bad) call inc pop mov hlt mov in xor sub pop add and (bad) (bad) (bad) inc mov or lcall xor push in rcl in inc inc js or dec ljmp outsl and test mov in sub fs inc divb stos sub (bad) (bad) (bad) jnp push in jnp fdiv and test mov popf fldcw pop (bad) shrb cmpsb inc sbb std iret stos lods push push cmpb mov dec pop std (bad) jmp inc lahf loope ds movsb sub dec movsl jecxz adcl xor jg push inc ret inc xchg loop notl ret mov inc es and icebp out pop lcall (bad) (bad) (bad) pushl pop mov adcl cmp cmp mov sbb push (bad) (bad) (bad) (bad) mov sub daa jno mov insb jg repnz cmp mov xor adc outsl mov std push cmp jecxz pop mov fdivrp fcomip jmp or arpl sarb aad leave cmp mov jle movsl pusha cld dec addr16 xor sbb aam mov cld fadd cmp scas les xchg imul mov andb sub mov (bad) call lods lea cmpsl into push rolb jmp int3 ja std adc fsubl adc dec xchg pop xchg ljmp pop add jge xchg mov xchg push (bad) pushl dec lock decl add and inc mov jle fnstenv sub jmp jne cmp call out mov insb mov pop sub mov adc or loop,pn cwtl aam mov (bad) call adc mov cmp inc push xor (bad) or cmp mov incl aam xlat mov and cmp addl cmpsb or sahf xor pop and and mov mov pusha jo (bad) mov mov inc fs call cli out adc adcl jg into ret rorb (bad) incl orb out lahf sub xchg fdivrs (bad) decl ds adc cmp sbb ret call cmc loop out in int3 inc mov and lods mov mov xor (bad) incl mov mov lcall lcall cs xor jnp (bad) and iret mov mov or and sarl dec jecxz ljmp incl dec mov lret leave adc dec fnstsw ffreep stos je addr16 jle (bad) (bad) (bad) (bad) jl les aam fidivr icebp pop xchg jp lods sbb and push add (bad) loopne lds lcall sbb aas popf lods push mov fwait rorl mov mov cli je push or pop add scas mov sbb or pop jge xor xchg loope cmpsl clc inc pop pop xor jg or addr16 jnp xor jg stos das cmp fstl stos jp push sarb ljmp imul (bad) (bad) ljmp push bound sub fistpll fidivr pop mov (bad) (bad) push pop add sub leave push es ret sub daa fwait sbb dec lret pop pop and or jg jg xor push or push cltd pop inc div es (bad) pushl movsb lret int and inc adc outsb dec cltd sub jne loopne dec mov and and pop pop jle gs (bad) lcall xchg popa adc out mov ss hlt mov pop das and inc int3 jo or (bad) jmp movsb xor jae mov ror inc and fidivl out testb test call pop and xlat sub cmp addr16 (bad) call dec inc fwait mov jmp (bad) lds imul pop mov ljmp sub add inc adc mov popa cltd push mov pushl or mov mov mov stc xchg sbb ret (bad) dec pop sub mov xchg jmp cmp int3 ret push sub jmp decl (bad) cmp or ret inc sub loop stos ss (bad) (bad) jg (bad) (bad) ja jae add sti push pop in jmp pushf push fwait imul movsl out (bad) (bad) push pavgb popa adc mov push xchg pushl cwtl xchg lea xor sarb (bad) add aad cmp or mov mov ds insl or cld push mov xor cltd clc cld (bad) (bad) (bad) call cmp sub ficompl push or jge jo mov hlt outsb (bad) cli or (bad) mov xchg jp and pop push std (bad) jmp mov notb leave adc pop call ljmp pop je pop rolb adc jns rol mov inc lcall std (bad) lcall dec jmp xchg cmpsl jbe loop insb cwtl jl outsb cmpsb cltd outsl cmpsl pop xchg incl xor or mov mov jns lahf jge mov pop cmp cld adc (bad) (bad) call dec insl pop mov push xchg cmp and pop adc loope jne (bad) (bad) (bad) call cld mov les movsb (bad) icebp scas ljmp mov rcrb inc pop in (bad) ds aaa mov sub sahf dec aas das leave test cmpb or fadds mov repz jmp or arpl xor imul (bad) mov mov scas sub daa pop mov jmp and xchg sbb push je (bad) mov std add fstpt ja call mov lods call push mov out mov rcrb xor (bad) (bad) ljmp add icebp mov orl (bad) cltd adc minps ss (bad) lcall fadd movsl imul sbb mov adc (bad) (bad) mov enter sbb mov fnsave loope and (bad) (bad) (bad) (bad) mov or lret push or fwait sarb out adc (bad) mov pop ljmp insb or mov jl shll push mov cmp shrl scas js sahf push push (bad) jbe fprem data16 jl mov (bad) jmp cmp jns pop ret pop push es repnz test cwtl and push lret (bad) (bad) (bad) (bad) fdivp mov movsl cltd je (bad) mov cmp jmp scas hlt fldt xchg mov loop pop (bad) (bad) (bad) jmp popa fdivr outsb das xchg lods add xor pop sub add imul out xor into addr16 (bad) ljmp (bad) aaa xchg out pop dec mov outsl adc push rol mov (bad) dec loopne pop loop jae ja jge out imulb unpckhps test test sbb mov dec cmp jmp dec mov xchg xlat repnz in je enter cmc ds adc (bad) (bad) mov (bad) lcall add push cmp aas dec out jg jg jecxz push sbb mov xchg (bad) test sbb mov imul call icebp fidivr insl push ja (bad) incl lahf (bad) clc test incl or push test fsubr mov nop not lcall cld test adc push sbb pop fistpll inc lods dec mov jns sbb jns jmp mov jae (bad) pushf jno ds xchg test outsl xor aas fimul int3 popw (bad) (bad) (bad) inc aam lock jnp inc push jp adc cmp cld dec stos cltd out divl (bad) out clc xor int3 lret sbb fisttpl fildll iret jo xchg push mov mov or jl je stc in pop in xor jle push mov (bad) (bad) decl movsl pushf ret xchg hlt aas insl faddl roll outsl lfs sahf or sbb sbb ret gs add scas sti loopne loope fwait and cmp call push adc (bad) mov pop imul inc je test xchg cmp out clc and (bad) (bad) (bad) decl mov and xor xchg fimul lock jle insb xchg or fcomip call inc hlt outsl pop mov lcall xchg jo cwtl js dec add cmpsl or call xchg fwait pop inc mov inc push dec mov dec pop fs push mov dec adc (bad) (bad) dec das out outsb push dec arpl sub gs pop sub movsb jmp lcall (bad) push push dec in das push dec mov mov mov repnz jnp add (bad) (bad) (bad) (bad) fcoms pop inc les adcl in cmpsb inc jno ljmp jno les lcall cmp test cmp sbb fldenv fidivr pop insl mov jae (bad) lods test (bad) (bad) pushl shrb mov (bad) mov add fs adc xor inc (bad) jmp cmpl ja xchg mov test out xchg das mov call fidivl jl std mov xchg (bad) lock call cmc sbb mov (bad) call push cmc push inc mov out push int3 ret add iret fiaddl jp mov lcall or inc cwtl add jl leave sub push nop mov dec add ljmp test pop lahf popa pop adc inc add (bad) jnp (bad) (bad) (bad) call aam sub jge jbe jae cmp rcll out mov imul add (bad) mov ljmp nop inc outsb push (bad) mov sbb mov push inc (bad) fdivrp pop into or cwtl pop sbb ret sbb test xor jge cltd outsb into stos add (bad) call dec mov mov (bad) mov inc push lret imul (bad) mov jmp jle pop out jl pop mov add fnstenv test jl ljmp jnp pop cmpsb xchg mov inc xchg adc pop xchg arpl (bad) rcr or sar add mov faddl mov cmp (bad) cmp cmp (bad) inc and shlb sahf cmp js rorb ficoml (bad) (bad) mov mov ds jecxz (bad) (bad) jmp ucomiss fnop stc les aaa lds push stos or hlt jno shlb jno and inc xor mov cmp push iret pop mov cmp and (bad) sbb pop loop pop push jo (bad) (bad) (bad) (bad) cmp lods cwtl clc pop (bad) hlt les nop mov popf sub insl arpl pop icebp in stos inc or scas ds int3 shrb push (bad) dec or ja dec pop sbb dec mov outsl clc inc or mov pushf mov (bad) lock (bad) out ds adc xchg aam in sbb mov mov popf in (bad) (bad) (bad) fildll push dec xchg aaa mov out add fistp push cwtl ret test and shrl ds jnp lcall lret sub or rcl loop (bad) aas loopne rcr sbb mov jmp (bad) repnz lods fnsave add and pop in lret inc or loopne ret (bad) (bad) ljmp lock pop (bad) pop jp and cli xchg out jno mov shrb (bad) pop dec call cmp or jb jns jl push inc push (bad) fcomip scas mov lret adc push gs repz (bad) lcall lret mov lret inc mov fsubs xor or loop (bad) ja stos mov push out and (bad) (bad) sti aad and imul pop push sbb inc je (bad) (bad) mov mov (bad) fdivs lcall inc sub adc fnstsw scas and ljmp cld test sbb aad cmp into fsubrs xchg sahf ss (bad) sub aaa xlat fistpl scas insb jno xlat cmpl (bad) call inc pop cltd ds outsl js (bad) (bad) (bad) pushl fisttpll imul mov push dec (bad) dec mov push xchg (bad) (bad) (bad) (bad) sub xchg (bad) aaa repz lods es xor mov xor cld sub call inc sub out ret inc jl xorl add imul jecxz cmc xor push push fs mov out sar (bad) sub mov ret or mov dec incl mov mov (bad) xor cmpsl pop in pop lret dec out dec les pop outsl xor hlt xor or ljmp js (bad) fisubr std push aas and movsb loop lcall (bad) call std fdiv jne loopne add (bad) jl mov repz into sbb pop sub scas xor (bad) mov pop arpl push popf fsubs lds mov mov jl ror adc cmc xchg add (bad) jmp xchg jnp inc or mov fstpt jo dec dec xor cli (bad) jg xchg movsb in pop pop loopne es js sub call mov pop dec lret xor js xor or mov push outsb jo out jge (bad) (bad) (bad) (bad) out cmp and dec loopne push movl fcomi jge out mov push fadd (bad) in scas das adc mov imul imul xchg daa cmpsb mov hlt fldl pop hlt inc inc aam sbb call mov mov aad push cmpsl xor imul out xlat fidiv hlt sbb ficom sbbl xchg out adc divb (bad) (bad) decl inc or fwait daa leave les ss push shrb aaa fwait jmp xchg push pusha mov aam pop jp dec clc (bad) incl scas imul decb fdivr jp jnp push sbb cli (bad) (bad) mov jnp adc xor es dec xchg fistp (bad) incl pop rorb subl xchg cltd test mov mov outsl or or cli push add (bad) ljmp ds ret out or dec mov fwait jns adc inc jmp (bad) (bad) (bad) call mov mov aad sbb fs rcrb test cmp sbb decl dec popa jmp aad (bad) mov (bad) (bad) lcall xchg xchg dec ja aad cmpsb hlt sub xor out cmp sbb lcall cmpsl sahf inc scas xchg mov lret push mov push rcrl rcrl cmp call or jge in mov cmp inc arpl (bad) (bad) mov scas push inc icebp bound rcrb popf call mov jne dec dec dec sbb nop lcall and cmpsb jg test add cmpsb int in lods xchg test fwait (bad) (bad) jg js inc inc lock nop mov lock jle out mov mov (bad) (bad) ljmp fdivrl xor imul xor repz repnz enter outsb sub (bad) (bad) (bad) call jge dec (bad) repnz call and dec movsb cltd ficom and mull clc push add (bad) (bad) jmp push rclb xchg jle arpl in add jae adc add lcall xchg push (bad) mov cmp (bad) (bad) lcall xchg arpl cwtl repnz std push or and jne adc repnz out push dec nop xchg gs ljmp or movsb pop cmp cmpsb push xor xlat dec out fcoml insb push stos int3 or fmul in loopne lock push shll (bad) (bad) inc xchg dec or xchg inc dec xor jmp pop mulb mov cs faddl pusha leave and sar (bad) (bad) cmp outsb xchg mov les sahf jmp xor (bad) pushl lret (bad) imull mov xchg pop xlat mov lea (bad) (bad) jle inc lods daa addl fisttp nop hlt jge shll dec adc push xor (bad) (bad) (bad) dec repnz jmp mov test xchg add mov add out fiaddl jle into or lret inc mov adcb jmp adc mov test fistpl jbe mov cmpsb (bad) cmp aad (bad) (bad) lcall inc mov sub sti xor cmp arpl mov fbld call sbb cmp ds cli js cmp test pop (bad) sub int3 gs (bad) (bad) call lahf jo inc lods jno or adc cwtl cmp xchg or inc cmp (bad) (bad) (bad) jmp jns gs add mov inc xor sub int3 dec xchg push aad mov (bad) (bad) (bad) jmp repz push sarb dec outsb insl in call cmpsb and or outsl fist or in mov sbb xor inc or movsl jle dec adc (bad) (bad) (bad) (bad) inc jge lret pop sbb inc add out jnp adcb cmp fcomps dec enter (bad) (bad) (bad) (bad) mov lret js mov es scas call mov dec xchg (bad) scas ljmp cltd out aad in sbb jmp adc mov jge mov adc pop fisub lret and scas inc bound jmp cmp insl jns jmp into cmpl call dec test imul xchg outsl aad mov cmp (bad) stc xorl insb sar mov pop imull (bad) (bad) pushl xor std push xor or ds loopne in loope cltd and jle cwtl outsl sub ret mov (bad) (bad) in (bad) mov push adc ret sahf cmp jnp mov sub aad and cld ljmp or das and dec xchg ljmp push adc (bad) leave mov sbb add into test fistpl cmc (bad) (bad) decl out inc mov mov cmp jbe (bad) and xor push sbb jae,pt mulb xor in pop icebp sbb clc fsubrs aam mov pusha negl and or enter (bad) (bad) lcall dec or push sbb inc push sbb mov inc xchg je mov clc decl andl pop push int test mov jne ds (bad) call adc adc mov push xor js in push add pop dec outsl push test mov in enter dec jge mov mov fldl movsl pop cwtl loopne dec lods adc jg in xlat (bad) call cmc xor dec (bad) lods int mov test fdivs scas cli ret scas int ss cmp (bad) lcall ja xor inc jp popf and stc (bad) repz (bad) lcall in and in lods mov scas mov mov mov xor call (bad) scas cmpsl outsl jne lods adc lret mov push (bad) cmp xchg inc sarl xor pusha cld pop and push es out mov aaa xor xorl sahf fstpl add (bad) decl test jp imul (bad) inc xchg mul popa out cli (bad) jg (bad) pusha jns and scas xor and lcall loop push fdivr enter mov stc (bad) (bad) decl loopne cmp in cmp sahf jne std pop fcoms arpl sub pop pop ret leave les lret fcom decl (bad) xor add movsb aam call push sbb aam xchg iret cmp sub xor xor push dec rolb ja mov (bad) (bad) call je dec pushf fsubr aam mov imulb or cmpsl scas adc sub jg (bad) (bad) ljmp popf ja adc out adcl (bad) (bad) (bad) (bad) (bad) jl dec clc and ret lds lret sbb push cmp gs test push movsb mov pop aam in leave out insl adc cld (bad) (bad) jmp lahf push fmul sub adc rcl mov scas lea lods push or dec mov (bad) (bad) (bad) call repnz std repnz js lods push adc cmp jbe (bad) decl add or pop lock jge fwait je (bad) (bad) ljmp push in cmpl mov jns int3 std nop adc inc dec pop (bad) (bad) (bad) call push adc sti mov push test leave daa outsl and insl nop push adc sub mov or pushl inc and subl mov out dec shrb outsl (bad) (bad) incl cwtl insl add loope (bad) scas and aad pop push mov jge rorb (bad) pushl and sbb inc jp jp mov mov das sar mov or jnp into xchg leave mov cmp pop icebp (bad) cmp xchg fnsave lret movsb in push movsb aas imulb cwtl dec xchg incl cld incl and imul jl or fnstcw add cwtl aaa movsb lods sbb dec or and icebp rorb pop insb leave mov insb lret xor sub push mov leave fstps xchg dec and (bad) (bad) (bad) (bad) cmp adcl outsb fwait sub push dec sub fcoms (bad) cmp lcall sub jle stc stos ja aad push rorb adc push mov dec in outsl push cltd sbb lret stos cmp xchg aas in ret shll sub cmc ljmp rclb scas roll les dec adc (bad) call push cld mov jp lock sti cs xchg es lods or ret xchg hlt inc add push popa add cs sarb loope out add (bad) push add push add sub sahf jae (bad) xchg push imul or push add (bad) incl popa jo xor xor sahf fdivrp shrb pushf mov test test je pop in in xchg rcll subl (bad) jge dec dec cli aam js insl mov mov imul std cmpsl fs push (bad) ds mov jle mov pusha pop adc dec add jb mov gs je lock repz add add ss popf xlat xchg arpl jns outsb sbb sub in sub add cmp lods mov mov xor mov xchg jae and pushl fidivr mov push ret jns push lcall push enter inc outsl outsb inc pop out ja or push sbb outsb rcrb xchg add jge or arpl push sub and pop lock and outsb (bad) and push out xor loop xchg cmp pop lcall xlat push iret and imul call mov jne idivl and (bad) gs jbe mov sub insb fistp imul int stos cmp (bad) fistpll outsl xor arpl mov packsswb fildll sbb push mov sub pop push xchg jbe mov aad (bad) xlat push insb push jge lcall lret jns js faddp adc mov sub imul imul fldl adc ja insb cmpl and iret rcll adc insl out fidiv nopl pop imul pop cmc mov mov jnp shrl addr16 or stos push daa ds jnp popf (bad) dec dec repnz stos jne cmpsl push lock jmp fwait push ds lock add sti dec jge xchg das (bad) popa cmp insb imul ret btr sbb pop jae cmpsl ja sbb push rclb lret mov mov push xchg jbe or add cli push (bad) cvtps2pi imul ret add push popl mov fimull push mov sub lret inc ja xor insb jb dec (bad) arpl notl sbb or adc (bad) jns or xlat pop rclb sbb dec sub pop mov mov ret jae lds adc (bad) sub mov sti stos (bad) cmpsl stos loopne push data16 sti inc icebp inc inc jns xor inc aaa sbb push mov out sti mov pop pop add inc das aas push test (bad) inc addb sbb inc pop pop popa push fwait jae out mov mov scas loop fisubrl outsl add scas insl in dec dec add add jle adc inc adc xlat pop sbb scas arpl out push sbbl das jo fwait cmp inc cmp and cmp pop sub mov mov (bad) lds push inc (bad) aaa mov lahf insl fisub dec add jns adc jne jge or mov loopne mov or push adc add or xchg push outsb js or subl out lods fisttpll aas xchg add or (bad) xchg mov cwtl xorl push inc pop xor and push idivl add adc je,pn cs (bad) push dec aas (bad) fsubs fadd inc inc xor xor inc mov dec push divl inc jns rorl mov sbb imul jp int js cmp into addr16 mov gs js mov jmp pop out and mov (bad) fldt js aas and push or jmp push pusha push pop mov xchg sub push mov scas jbe mov ret daa and add rclb pop adc ret inc xor loop mov aaa in jbe fimul sub je pop adc jbe ja dec jecxz repz sub or pop cli ret inc ds inc outsl jns adc lods ss mov push push pop ret mov scas inc or scas inc mov adc out or push inc fldt imul push mov mov cmpsb add out push cmp mov imul add js add pop ds test xor cs adc jne lds fidiv jae aad sbb add push mov sbb es or imul jge,pt imull cmp imul loope addl repz pop add push fwait mov aaa mov jno inc js dec daa (bad) pop fnsave pop jo mov jp inc add out or jb cs mov cmpsb mov imul sbb jecxz sbb push and popa xlat push dec adc inc addr16 repz shr loopne jle daa mov jmp and sbb insl push repz mov lock adc out cmpsb cmp mov sub scas lods repz pop push mov pusha push mov lds xchg in adc mov xchg jbe ret mov inc out cwtl xchg (bad) xor and or or sub mov sbb cmpsl je aaa and push push loop bound cmp ljmp pop imul ss das outsl cmp imul mov sti popa mov ljmp ret push push adc out xor adc outsb shrb cs jnp xchg in mov add push xchg add push jl out outsl dec mov cmp cli adc sub or ljmp add dec out mov mov push ret pop pop xor mov (bad) adc dec add dec push lahf arpl dec mov dec dec push push inc lahf pop addl sbb jns es (bad) cmp push fisttpll mov or sub js fdivs imul jge add fstpl mov jne mov jb dec call outsl pop jo fs xor lret mov xchg scas push scas repz dec pandn rcrb jae aas insl mov imul jae (bad) or xor lods jge mov dec xor pop jne xlat jo clc push push pop sub add xlat jmp (bad) or mov fcmovnbe mov out iret arpl mov call inc ret imul (bad) cmpsl add cmpsb lahf adc loopne cwtl push and mov adc cmc cmc dec outsb xchg and lods adc sbb lret jae adc test inc dec jbe jno sbb inc and sub aas and sub (bad) pop ret ljmp cmp call sub in das stos pop mov jne push mov nop das mov and je (bad) sbb arpl sub mov out (bad) push add cwtl jl das jbe imul scas das imul sub xchg jno pop sbb outsl mov inc xor (bad) jne inc push sub (bad) ja loopne repz jae or outsb fisttpl jbe out and or outsl or insb mov inc daa stos dec jbe addr16 inc jo out jb pop cmpsb fmuls pop adc sub inc sarl arpl lods sbb cmp inc sbb jbe add or outsl insl inc push pop sbb ljmp push movsb outsb rcrl dec or scas in fsubs pop cmp mov push jg repz insl xor sbb xchg jo,pt sub jecxz jns aas sbb mov ret push cmp pusha call xchg add rolb adc popa jnp test insb push push inc pop lahf xchg and mov xchg mov xchg addr16 sub mov lcall jmp out clc je dec sbb sub sbb orl test and cli insb sbb mov (bad) sbb out mov mov pop sbb pop dec movntps or xchg jae fisub sbb fwait orb push ja sub daa (bad) and popa fisttp pop pusha mov add jns ret (bad) lock cmpsl arpl lods ljmp jecxz sbb sub mov cmpxchg8b dec mov mov enter xchg and sub jae cs push (bad) imul jmp and imul out loopne xor xor dec and cmp daa sub insb inc addl cmp or imul mov lods and mov ja je xchg and (bad) daa push cmpsl mov movsb push jmp pop mov and mov push xchg sub ret aaa jmp mov stos bound sub fs addl imul pop cmp push adc dec outsl lock push push addr16 push and inc add push ja mov lods push mov mov jae or (bad) jbe scas fiadd insl aas iret inc and lcall push xlat mov jno je ret popa sub pop mov jae (bad) adc add aam outsb dec mov aad jbe arpl cmp ret and add cmp lcall das add shll imul insb xchg inc mov loopne xor or jo loopne xchg pop pop outsl pop or push dec pop das inc or add cltd pop push loope lcall addl inc daa jbe sub jg js aad ljmp aaa sub aaa ret jecxz sub arpl aas lahf xor insb pop (bad) push and call add gs push lods pop or xorl sub addr16 jp or cs iret sub xor inc fistl jecxz sub movw fdivs mov fsubr in mov mov jb mov cmpsl pop xchg adc into pop daa sub push rclb pop push ret sub jnp push jno (bad) scas push push mov sbb and pop pop cmpsl xor sub inc inc call jmp insl adc ret jbe push cmp aas sbb bound sub xor lcall mov or push pop inc xorl dec scas jbe popa jmp cmp inc cmpsl data16 adc testl and adc adc push mov xchg andl aad push lahf xchg jl add jnp outsb inc push jge cmp adc push das imul push lods ret pop dec xchg xchg (bad) cli aam fldt mov (bad) jg imul sbb arpl pop dec mov and jne jg and xor push pop imul jmp push push lods stos loope ret imul sub (bad) mov sub dec out ret lock mov popa push loope imul comiss mov xchg in bound pop adc and and lods (bad) xor xchg das adc addr16 imul iret mov test dec movsb (bad) or das stos call pop and or les daa jae aam and add popa adc and mov addr16 ja cmpsl dec pusha pop inc xchg sbb ret stos gs mov or addr16 das bound lods stos fisttp fldt adc inc mov pop adc cwtl dec adc popa inc xor pop addr16 add rcll push jo sbb or xchg adc aas imul cmc fdivs adc arpl jo adc dec mov push xchg push fbld (bad) adc xchg dec or pop and inc jg push aaa add add es mov mov pop fwait cmp adc (bad) push outsl and push or adc add or cmpsl movl adcl ljmp mov dec mov push popf ds adc push jns cmp dec negb mov adc dec push fsts sub add adc mov popf mov adc sub shlb jnp shrb push pop adc dec xchg push (bad) mov mov xor fneni(8087 mov dec fimull or xchg sbb push pusha in mov mov addr16 jns adc lods mov subl push ret cmp (bad) mov adc ljmp inc push push dec xchg outsb arpl push or push cs (bad) mov adc (bad) dec add sub lcall jp mov (bad) arpl test or push push sbb data16 adc addl dec pop push add mov mov imul mov dec gs leave sbb lds js shrb sub ja sub inc fisubrl fisttp into scas xor fwait mov sub sbb mov jo push push or nop adcb ja orb xchg xchg adc notb out outsb adc je xor add in mov lret jbe add and push int sarb cmc adc mov dec sbb inc insb addr16 mov adc insb add add push into mov jp int cmp adc push dec add xorb popl push js dec xchg push cli cwtl add call xchg sbb add pop movsl in pushf add xor jp cmp out imul sti fiadd add fbld ror mov gs mov imul mov lock int ljmp jbe pop push pop js inc jp xor arpl ja js xor jg add arpl fs pop or xchg dec add or add test pop punpckhwd pop or addr16 in pop aaa leave or std add or pop pop (bad) lods pushf push inc sbb jg push add out or add mov adc adc or inc fmuls adc jo mov or xchg add imul sysret add add push popl mov or mov jb mov ret rclb or and mov mov pop loop inc cs sub fwait mov push pop xchg add sub xchg or inc adc insb xchg fadds adc jnp mov sbb and cs movsb pop or or sbb insb or cmp (bad) or mov movsb movsl in popa popa xchg and loope jb mov or or pop xchg roll pusha mov push pop ficoml (bad) push xchg subb add mov sub pop push mov pop fwait and or push jg fnsave or (bad) mul push scas sahf mov repz incl shl sbb pop test mov mov nop xchg mov jge ljmp jle popf pop or shlb fcmove in (bad) (bad) fild mov aaa stos mulb popf cmpsb lret je (bad) jne daa jg aas in adc shlb fadd mov pop jg pusha cld jae ljmp sahf push pusha daa daa das mov xchg jg jne or int3 mov dec dec pop mov sub cmp (bad) dec pop sub lods (bad) push insb adc jg mov add outsl scas and les cli dec cld cmp pop mov fwait or or cltd or cmpsl dec xchg scas jge add sarb fmuls testb ds lahf scas push pop mov das aam mov (bad) inc pop insl pop outsb push (bad) std ficom mov or or jge popa or pop jge lret das pusha outsl out pushf lahf mov pop fdivrs mov sbb xor nop ds das insb enter push ljmp mov (bad) mov test inc pop (bad) dec fstl pop jge popa andl add movsl or adc adc jge mov dec mov arpl fldt mov cld test (bad) lcall (bad) cltd jns adc mov lcall ljmp lahf adc add push ficomp add inc jns fimul std (bad) jg dec cmp mov sbb jb (bad) lods mov cltd fdivr outsl lcall (bad) sbb faddl divb mov and test mov mov mov add and jl fwait aad push stos insb push dec push pop or and xchg clc push mov xchg ljmp sbb rcll inc movsl out xor pop leave (bad) out js inc shll (bad) incl outsb loopne push mov inc (bad) lahf and or mov adc jle mov xchg sbb sarl (bad) in das mov mov fstps test jge mov (bad) (bad) (bad) (bad) (bad) fisubrl mov into pusha mov icebp stc bound pop loope (bad) push in and jecxz stos movsl aaa adc lock out lods push fs aam neg xchg and test (bad) (bad) (bad) jmp jbe dec or test or cmp jo xor or jb mov rclb cld test loop pop popa lahf cmp jne (bad) (bad) (bad) jl mov mov mov lods in vpand xchg movups fbstp cmp fsubrs push sub hlt insb xchg loop lcall out jg mov decl sti leave test cmp jge cmp mov addr16 imul cmp ljmp cmpsl sbb sub xchg rclb clc push jg pusha mov cmc push mov in into pop (bad) (bad) incl fnsave xchg or outsb and mov lea sbb flds ljmp orb into sbb inc sub fidivrl xchg jmp outsb sbb arpl push (bad) jge push mov sarl adc (bad) (bad) (bad) decl jg mov scas ljmp jecxz mov pusha mov push ja ret dec dec incl stc decl xchg lock jb inc (bad) je movsb cld pop stos and mov (bad) (bad) call repnz out push sub jae adc xor (bad) mov mov incl stc jmp movsl popa cmc sub stos out sti pusha push jp lods pop xchg push nop (bad) mov or repz jge leave sbb add js out fdivr (bad) inc lcall add inc or mov inc mov jge and jg movsl (bad) shrb mov jg xlat mov mov or cli adc push xor pop inc (bad) pushl and jge adc mov xchg push dec in lods xor push (bad) pushl or in xchg jge add (bad) jg sahf pop mov fmuls and add add adc (bad) inc fs xchg hlt and push loopne inc sti push and loop cwtl and inc (bad) (bad) call or jp lods mov push insl and mov fbld pusha xor ret enter mov mulb or outsl mov cmpsl cmp fnstcw pop lahf sub inc enter idiv movsb icebp pop test enter popa mov jge lea mov inc enter clc (bad) mov call jbe fistl (bad) jne in clc (bad) decl je aad mov pusha mov imul pop push cmp out sbb pop pop insb test call subb in adc cmpsl xchg fild pushl test ret pop or mov cld popa mov cmp adc into jge sbb (bad) ljmp hlt jp in push adc xchg (bad) jp mov xchg cli add pop frstor rcll push mov push jno fs xor fstl xor test inc ret je jecxz clc and push stc ds jmp mov cld or mov or pop xor call aaa xor pushf push jae (bad) mov pop push loop (bad) (bad) inc jge jne and or dec xor sbb data16 enter idiv or adc mov enter nop mov xchg decl mov dec (bad) pushf cmp repnz rorl or (bad) (bad) (bad) (bad) fnstenv xor mov (bad) sti jb cli loope jge in xchg fstps sub incl stc jmp xor lods adc insl aad mov stos js add scas mov (bad) mov push lret mov dec dec (bad) xor ljmp or jmp mov sub into js psubq mov xchg dec push bound jge mov cmpsl xchg xlat mov cmp xor mov insb or nop into inc adc dec add incl ljmp stc mov das push add jecxz jmp pop (bad) movhlps sbb (bad) lret cwtl mov cmc ja call push dec into xor lcall cmp dec add dec (bad) mov or out and aas xorl aaa (bad) mov push xchg repz fsubrs cmp mov inc aad mov ret (bad) inc xor pop or inc pop insb pop add push loopne adc mov mov test lea mov (bad) adc incl inc test and clc push dec lods loopne subl xor push test jg push push jo mov scas or out dec (bad) (bad) (bad) (bad) lcall dec cmpsb sti inc mov cmp dec inc inc push mov adc lret add (bad) call loope lds mov ljmp jg mov jp jae mov inc into loopne inc cmp (bad) xor xor scas pop lock mov dec gs jge sarl mov (bad) jno ljmp inc inc jnp cmpsl test mov xchg and movl and xchg mov sbb sub fdivrp (bad) cmp sub dec popf cmc mov dec sbb ror bound mov (bad) mov in xchg imul in or sti or mov ljmp (bad) jge jne jbe dec dec (bad) jg sub pop mov pop (bad) in (bad) aaa ss loopne (bad) (bad) jle push push dec icebp sti popf mov vhsubpd sub dec call pop rcll dec jnp xchg outsl cli jg lret out pop dec fistp repnz mov (bad) lcall push scas aam jb fidiv stos xor inc inc xchg mov jge mov mov pop mov mov inc sarl push sbb pushl adc push das push and pop js and (bad) jg pop sarb test mov fidivr leave sub int3 (bad) stc dec inc cli incl in imul jmp (bad) (bad) (bad) jmp mov inc hlt push jle ficoml mov ja push decb cmp imulb pushf (bad) decl (bad) jl imulb cli cmp insb pusha pop xchg dec aam les (bad) fadd or fild xor dec xchg xchg push fs cmpsw (bad) pusha decl sti inc repz mov fsubrs mov loop std inc fmulp gs nop (bad) (bad) incl inc sbb jg jo sbb push mov loop scas adc mov (bad) mov mov stc das sbb sub sbb lcall popa daa xchg jmp and push cmpsl clc push mov cmp (bad) (bad) (bad) decl sahf hlt addr16 js cmpsl cwtl mov mov mov push in or mov adc push jge jne mov aad mov pop (bad) (bad) pushl cld (bad) jno or lea mov insb fs rorl aad (bad) call lods pop mov inc cmp xchg mov add loopne call sub mov inc cmp rcll das push das lcall sahf lahf fsubl ljmp jg (bad) scas mov mov sub pop or test (bad) (bad) pusha imul pushf (bad) mov ljmp push movsl in and dec (bad) in das cmc fdiv and (bad) das (bad) adc in sub imul jmp or jo and iret loope cmp mov jne pusha (bad) jbe push (bad) jmp (bad) frstor adc popf jge add adc popf pop movsb ds (bad) (bad) (bad) in loop xorl jg jge cmp ja in pop mov rcrb sahf push bound incl jmp jno inc sbb mov mov and inc aas push jmp movsl jg outsb out xor fs inc ljmp mov mov ret jge xchg test and (bad) (bad) (bad) push out aad and movq jmp test test pop add lret mov repz aas in (bad) ljmp adc mov test xchg ss (bad) ja add arpl enter orl jmp (bad) push sbb or idiv sub shlb mov sub xchg js xlat sti or (bad) (bad) (bad) (bad) in push cli movsb or or push dec ss sti fs push mov loope call clc (bad) cmp aas leave dec mov into jmp ret (bad) (bad) fimull enter xor pop sub cmc cli icebp mov xchg jg push mov (bad) (bad) mov pusha (bad) dec cmp mov ja sub cmp mov mov (bad) (bad) jmp sub xchg cmp push add dec sub ret mov dec xchg add mov (bad) (bad) pushl push int push sub xchg dec pushf aas (bad) in fnsave inc xchg mov (bad) incl push pop mov loop jle mov sub fisttpl add in inc sbb js push lcall lock xor aaa daa pusha add ss push rcll (bad) pushl lcall sti daa jnp cmp lret scas push xchg adc imul outsb dec fimull stc (bad) decl push cli cmp test data16 loope jnp nop cmp sub mov cmp jns popa imull scas (bad) (bad) (bad) jg push push inc (bad) into fldl into or adc gs fildll arpl and cmp mov (bad) aas divb mov mov fdivr sahf xchg jb shrb mov iret es adcl jbe in dec pusha hlt sub pusha mov adc mov mov inc cmp int3 mov and (bad) (bad) mov sbb sbbb cmp cmp cmpsl ds int repz (bad) lcall test bound (bad) cmp scas sbb pop mov incl (bad) lret pop xor cwtl sub jne inc sub mov (bad) fiaddl sub push xchg push in xchg jne cmc insl or ret (bad) sti test xchg jge loope jp inc xchg inc insb xor ljmp clc add stc popf lods test mov std fisub push fnstcw xor mov inc inc push xchg mov (bad) (bad) (bad) in ficom push loop stos or in mov sbb inc mov (bad) decl mov pop (bad) mov add int3 lea hlt mov add sbb aad cmpsb movsb (bad) (bad) iret jne out mov cmp in (bad) (bad) (bad) (bad) fistpl (bad) movsb pushf add es xchg adc movsb pop push lds pop int mov push or (bad) jmp test mov cmpsl outsb xor push (bad) ljmp mov mov pop mov arpl pop cmp cmpsl enter mov mov mov push jge (bad) repnz push std leave pop sahf mov xchg dec jg pushf sub mov cli (bad) ljmp and xchg mov divb loop xchg push dec xlat into clc (bad) cmp push dec aas mov jp loope rcll add in cmp outsb (bad) cli pushl data16 out jmp stos pop popa incl or pop xchg inc mov outsl clc jmp stc dec repz mov (bad) jg xchg pop loop jne leave ffreep or aaa std jmp hlt enter jp stc pop or mov xacquire pop pop (bad) icebp clc (bad) or pushl outsl fisttp jmp (bad) ljmp mov mov andb add xor shrl cmpsl ret mov sahf stc out leave rolb testb xchg inc cwtl inc mov adc stos cmp (bad) mov lcall mov loop mov test push sub std mov sbb add (bad) jg ret lea mov adc fmul jmp imul fisttpll add mov stc outsl cmp gs fdivrl in call mov (bad) lcall neg xchg loopne jge mov nop adc fbld outsl lcall std das sbb (bad) (bad) (bad) call cmovle pop inc sbb xchg xor movsl mov push rclb mov lods fmul hlt out sbb loopne or shrb ljmp mov cmpsb insb fldenv adc sub dec aas insl repz test fwait dec push xor clc or add mulb jo repz and movl push ljmp dec inc mov push mov sbb loop outsl movsb push xor stos mov xor mov and xchg stc mov ljmp call push dec pop loopew pop mov (bad) mov cmp or push insl shrl pop gs es mov lock outsl xchg cmpsb jge shl (bad) lcall fadd xlat fcompl outsl ret (bad) fwait lods mov sti pop or lea (bad) ljmp fisubr adc jl mov xchg lock movsl cmpsb adcb lcall mov mov ljmp and inc (bad) (bad) (bad) (bad) cmp inc rcll jbe adc mov (bad) in int3 push nop sbb sub and movb pushf push push and xor pushl cmp ret (bad) push enter sbb adc fwait dec xorl decb (bad) jecxz xchg xchg jns push sbb call push aas mov (bad) lods pop mov pusha adc cmp fisubr test (bad) call pop add push sbb mov int jge decl lret mov or mov dec pop xlat lret jnp std (bad) (bad) call ret sub lods inc sbb lock or and int3 test scas adc pop inc stc jp int insb adc and rolb daa outsb jo lret lret lods ret (bad) (bad) (bad) call inc add faddl xchg mov pxor sbb (bad) call adc mov fildll ret sti andl (bad) decl aam jle (bad) mov loope lret leave pop inc sub popa or sub (bad) pop jge xor fimul adc insl (bad) ljmp push inc mov fninit aaa sti imul incl jmp jno or mov cmp jge mov mov push inc rcl adc dec and les fiadd inc xchg add push in decl sbb xchg popa xor les dec lcall adc jge xchg fcompl daa adc aaa fcmovb lcall mov cld mov ret (bad) (bad) jmp inc push and pop xchg rorb stc cmp popf cmp jge incl incb xchg je (bad) dec inc and xchg in or (bad) pushl inc and push pop notb ljmp sarb or fimull jnp mov stos shlb (bad) jmp lret jae sti xchg push xor (bad) popa cwtl push (bad) (bad) (bad) ljmp (bad) addb xchg adc test jbe and call adc (bad) jg hlt inc rol pop add mov pop stos jle not pop dec stc fistpl mov (bad) stos or aas dec or add cli (bad) orl pusha hlt insb icebp mov xlat out sar xchg (bad) (bad) jg in inc pop stc repz push inc pop jne xchg or scas push cmp (bad) pushl mul ret fcoms fadds push dec loop daa mov decb and cmp (bad) ljmp es jle sub push std xor jl xchg loopne mov (bad) (bad) (bad) pushl add xor pop mov xlat mov stos lahf not xchg (bad) ss xchg mov in fwait sub mov hlt fldcw pop pop rcr lahf push stos (bad) shll push inc loop or movsb (bad) (bad) cmp jbe add cmp jle xchg aaa push and pusha cmp mov gs jg std mov imul and aam pop fcmovne inc fwait cltd add push pop mov and iret std (bad) (bad) (bad) aas je mov pop mov jb jmp pop and (bad) mov movsb cld (bad) lcall cmp xchg or xlat cwtl test ret xor mov fs (bad) pop and jnp adcl data16 divb (bad) (bad) (bad) jmp sub add icebp adc xlat push mov insl jle adc cli jg rclb (bad) jmp sbb cmp push mov mov lds dec mov xor (bad) (bad) call fbstp or lods repz movsl shll stc std lret mov dec (bad) ss sahf or incl add inc ja xor jmp dec out mov sub outsl pop xchg (bad) pushl sub jp add inc xor cmp ds xchg xchg std dec mov push mov or adc imul jge (bad) lcall inc pop adc sbb add dec pop icebp mov in stos jecxz mov mov iret sub xabort ss jge fcomps gs mov (bad) xchg cld xchg test push clc jge gs inc (bad) incl lods pop push lock icebp hlt addr16 cmp xchg ficom (bad) mov mov add leave or xchg movsl sti pop sbb xchg mov cli jmp xchg and (bad) decl xchg pop inc adc outsl sbb xchg iret mov sti loop stc rcll stc (bad) (bad) fbld (bad) push cmp data16 iret xchg sub mov pop (bad) jmp out roll xor or loopne push fsubs cmp push push test movsb cmp mov ds ret (bad) fbld mov cmp mov icebp enter pop mov and sbb jbe or pushl mov lds push mov sbb fdivr cmp loope pushl mov pop inc fwait cmp jnp jae movzbl addr16 jg or cli rorb mov pop dec fwait pushf or fbld adc clc test mov xchg std (bad) in sub dec cmp dec add adc mov movsl (bad) (bad) (bad) incl (bad) adc xor lcall into jb nop jo pop inc add nop (bad) lcall cmc (bad) fnsave fldenv fisttpll adc mov loope jnp cs cmp inc inc gs push jecxz (bad) mov lcall ljmp mov pop adc in cmpsb (bad) (bad) (bad) (bad) fdivrs add (bad) dec or mov mov (bad) int3 ds add aas fcmove push insl sti xor int3 dec lret aam adc pop mov movsb inc (bad) (bad) (bad) (bad) incl out insl fbstp or adc adc add add jl scas mov xchg mov aaa fwait shlb mov xchg jns (bad) lock cmp (bad) pushf ret push jns andl fs call add clc dec dec pusha loop adc movsb dec stos aas in (bad) ljmp in loop (bad) pop in mov pop loopne pusha je jge aas sahf add (bad) call in mov sbb sbb repz imul test loopne (bad) call sub ja xchg add sub sub fldenv jl enter (bad) mov ja pop adc sbb (bad) ljmp fdivs dec pop es popa stc cmpsb push lock lock sti dec adc add fsubrs sub aam cmp (bad) dec push scas fcompl popa and cmp rclb cmp pusha xchg xchg lock repnz sti xchg ja mov mov call push loope jmp jmp pop in into mov call (bad) (bad) call or test cmp test lret rclb jecxz or cmp sub (bad) shll scas dec add test fadds int3 (bad) stc mov scas scas jne add (bad) (bad) mov loope adc push jmp ret mov mov adc (bad) incl mov cmp mov sub (bad) (bad) mov push sub je or arpl decl sti inc cmp fmulp gs testb arpl loope std dec aas rclb out and jmp rcrb lcall pop repz inc add push or xchg lods inc testb (bad) mov mov mov insl mov js,pn mov mov popf and mov mov fsubrp adc xchg mov or lods push popa jecxz (bad) (bad) lcall ljmp jp mov inc add cmpsl (bad) mov xchg movsl aas sbb ja clc (bad) decl lea cmp inc test xchg in rcrl adc lds ljmp popa int3 lcall andb xchg cmp aam sub lock (bad) (bad) in jg ficompl sbb in cmp jle scas pop mov fcomps and dec xchg lret jge ljmp push push call add jmp sub fsubrp nop mov addl call daa push mov (bad) (bad) dec or or ljmp add pop cld cmc push pop jnp stos mov call repz js or lea insl push inc call jge incl add adc mov push mov (bad) jg or jg mov xchg mov push movsb stc ljmp dec mov mov ret repnz aas scas (bad) jns fs inc popf outsb loopne push mov cmp loopne (bad) call loope dec into jne inc daa mov and outsl fdivl lea or lcall dec jl fnstcw xor (bad) jl xchg inc std (bad) (bad) call pusha ljmp dec jb mov add xlat iret fdiv jg push (bad) out pop negl in ret int3 fs mov xchg (bad) jecxz repnz add cld pushl inc rcrl call xchg pop lods push icebp outsl (bad) (bad) mov mov mov lds push xor jmp pop xchg mov popa and incl or inc push push aaa mull pusha sub lahf test jmp xchg (bad) enter inc scas pop movsb fdivrp lret inc (bad) pop cmp popf push lret fistpl in in jge jmp insl rcll jl cli call mov add xor mov dec adc addl lds pop lods (bad) push push inc int mov sbb xchg or movsb (bad) (bad) decl mov stos iret in inc inc and cmp sbb mov cmpsb nop rcrl or jle lahf cwtl jl (bad) jg mull sbb sub adc xor push pushf push push int3 fcmovne cld (bad) (bad) pushl dec or fnstsw in dec sub pop gs ss das rcr jg add push je push scas stc pop bound pop pop xchg sbb decl out je (bad) xor pop and fcmovne das push and mov xchg dec movl enter dec xchg mov fimull hlt test (bad) jmp ret inc dec (bad) in xchg lret add mov add notl xchg inc ret gs test mov negl mov sub (bad) (bad) (bad) (bad) jnp popf xchg rolb cmp jp daa mov (bad) cmp inc jns xor push cli outsb jns (bad) (bad) ljmp inc jb jle stos jmp adc inc iret and pop fwait pop jmp call (bad) adc mov jnp insl dec dec jae adc popa mov mov cwtl outsb or and inc ja lods scas test bound jo cmpsl mov je (bad) jg int3 rol int add ret mov subl nop dec pop or and (bad) lcall jg sbb add les movsb push mov pop add fcompl mov (bad) in ret xor adc lock sub aad pushf push adc xor cmc (bad) (bad) fnstcw push je inc dec xor sbb (bad) jmp lcall fwait xor fbld repz jo mov pop sub jno incl cld mov xchg push push aad cltd movsb icebp adc xchg jp pushl stos mov xchg fisttpll xchg jl or outsb std (bad) (bad) (bad) ljmp dec mov xchg bound sub aas fsubs and iret sbb mov add stos test inc push xchg inc pushf jmp shlb dec mov lock jno inc mov in sahf mov (bad) dec pop mov adc fwait cs pop or out dec pop ljmp jg add scas movsl fdivrl or or dec ds mov stos cltd cmpsb mov push cs adc sub addr16 dec cld pop sbb mov or xchg push xchg les dec ljmp out inc lds lret xchg mov add push int3 lret adc lods loop cmpsl inc std jg cmc lds call mov arpl outsl (bad) jg (bad) in pop push repnz int3 mov xchg xchg decl add cmp scas sub (bad) inc (bad) and mov jge fstl xchg arpl movsl mov insb lret mov adcb mov leave test test push iret mov movsl ljmp (bad) icebp jge aam lea (bad) (bad) (bad) incl rcrl dec adc push repz loopne mov dec int3 fsubrs push lcall std ljmp cmp fisttp cmp (bad) push jb fnsave lock adc shrl decl pop push mov or je adc sub ret std add cld mov jo icebp decl push cltd rorb mov mov clc xchg les sahf fmull cmpsb call incl push mov mov (bad) mov jne (bad) mov in mov pop (bad) (bad) (bad) jg xchg mov addb xchg fs cmp cmc pushf mov cli mov outsl xor js dec out divb jbe outsl (bad) jg jmp cmpb loopne ss inc add jmp ret cmpsl ss sub fs xchg cmp test inc pop into fdivr pop mov movsb test sbb cmpsb inc add jg leave aas into add test out sbb push pushf rorb mov jne cmc mov dec push add lahf lods lods incl test (bad) ja sbb fcomip ret arpl inc (bad) sub jnp je notl (bad) call sub roll mov je je stos xorl ja std (bad) icebp sub into mov mov mov loop inc inc (bad) lods (bad) mov mov adc out mov mov in ja mov xchg mov aas xchg loope incl push std loope inc mov inc lds into leave (bad) std (bad) (bad) lcall cld jmp push push xchg ds jo cmp fiadd fidiv and loopne scas popa inc lods jge pop es fisttp ret and adc jae sahf ljmp inc adc inc das mov xor push es add (bad) (bad) jg in dec cmp gs adc loopne movsl (bad) adc dec data16 sbb (bad) jg mov data16 push dec call out andl (bad) fistp (bad) jns xor je push pop mov fiadd inc lods (bad) pushl add or and pop repz shll popf nop (bad) loop cmp mov loopne mov xchg cmp (bad) (bad) (bad) jmp mov in jl fild (bad) dec loopne cld pop mov fistpl pop call mov and jae or mov or movl aaa gs das les cmp sub push dec loopne jg pop loopne bound mov mov inc jo (bad) pop loopne sub cwtl dec cmpsb std mov xchg in (bad) pushl xlat mov sub mov jle add xchg push fdivrs mov mov ret pop (bad) (bad) call notl (bad) in lds outsb cli pushf jbe rcrb sub xchg mov inc (bad) ret push fdivr cmp iret inc jle mov call push rcl (bad) clc sbb (bad) (bad) jg push mov (bad) arpl orl mov (bad) pushl push lret fwait rorb pop mov movsl xor aam (bad) pushl jae push mov push cld aaa push ljmp mov mov add mov rcl jns pop stos es (bad) (bad) aas enter in mov hlt cmp inc inc mov loope jbe mov mov dec pop sub idivl pop pop inc mov pusha cmc xlat scas outsl mov sub popa (bad) call or pop mov push mov cmp push jp jge mov decl jnp aad add (bad) mov cmp movl jge bound cld test mov nop or adc js ss mov sahf xor mov mov adc inc jae icebp cld or lock fldl pop pop (bad) or stos test mov sbb clc lods out repz (bad) (bad) jmp mov add sbb outsb cltd dec xchg sahf jno mov add repnz push adc out and inc fldenv inc in cmp out push inc cli call pop push dec mov loope jb je inc std (bad) (bad) addr16 add ficoml imul push clc (bad) fisubr mov sub adc mov cmp inc call jo decl gs fistl je inc js out out (bad) (bad) mov (bad) scas mov jl aad push (bad) scas in adc jns decl xchg add mov jbe mov inc ljmp fstp xchg cmp pop jmp dec mov gs jg adc cmpsl sarb (bad) sbb lcall ret call xchg cmp (bad) (bad) inc addr16 pop lds xchg das test aam cmp in rorl push mov add cmp pop cmc les std cli rorl inc loope lcall sbb jecxz clc mov adc mov sub jno cmpsl lcall fldenv add rolb lds cmpsl outsb mov push decl js cli stos jle sub andb and outsl scas es das or and cmp jmp cmp in jmp jno push pop dec test inc mov jl sbb push (bad) jp leave sbb or addr16 or test lcall pop push mov sahf repnz xchg mov ja (bad) (bad) ljmp rolb in cmp push in aam jecxz xchg xor dec push pop sub and popa (bad) (bad) lcall adc repnz (bad) jmp sub mov jg mov push hlt lcall pop out scas mov jp test (bad) (bad) call and sbb mov mov xor aad sub out ret fs icebp das ret mov lea pushf push lods or or loope fisub pusha andnps pusha or hlt pop loope (bad) (bad) decl mov test lds je dec mov inc loop sahf (bad) pop add cmp test sar dec (bad) xchg (bad) test inc test in cs mov rcl (bad) (bad) decl hlt sub sbb add mov bound sub je (bad) (bad) jmp movd rolb mov test out add cltd inc xor scas inc push gs (bad) sub in and push clc push ret pop and stos insb sub icebp inc lods movsl xchg fstpt inc jp loop or dec pop hlt (bad) fbld call loope mov xor test xor fdivr in (bad) nop data16 and sub xrelease clc (bad) (bad) ljmp icebp add ja out aad out jmp (bad) sbb aaa repz xlat xor mov mov loop dec fcmovb mov adc add insl repnz into adc je adc arpl ljmp imul dec test xchg in dec mov adc lcall push arpl (bad) ss es xor or push dec (bad) (bad) mov pop je fstpl pop inc lcall or roll cmpps xchg inc fdivr arpl cwtl loope (bad) aas sbb pop scas xchg push (bad) mov sahf cs cmp sub mov xorb xchg sbb out aas mov push inc sub cld inc inc fbstp xlat hlt mov mov stc fiaddl add (bad) ljmp ret rcll dec jns sti test out adc jp rorb jnp (bad) decb test leave sbb (bad) decl pop int pop adc gs test out das sarl (bad) pop xchg (bad) (bad) jmp add (bad) outsb mov (bad) call repnz sar mov inc cltd incb loopne jge mov inc push lcall xchg inc js dec push sbb jae mov pop jnp fnop inc mov out into pop (bad) mov sbb imul jmp fidivrl nop out xor and cld and sbb jmp xor (bad) mov (bad) out lods xor (bad) loope (bad) push ret adc jmp js xchg lahf sar (bad) (bad) lcall jnp icebp dec pop movsb mov sarb dec dec sub (bad) push cmp (bad) inc in and adc (bad) and mov loop mov lcall push sbb cmpsb dec mov mov movsl xchg sahf lock outsl sti fidivr out data16 out fsubrs add adc pop dec sbb (bad) cmp je cld test dec push add jge cmp jecxz sub (bad) (bad) (bad) (bad) fisttp pop sub stos xchg pop inc aas inc mov push test cmp rcr lret or clc or mov aam test repnz adc (bad) (bad) mov pop jmp ja pop aas adc in mov dec sti sub cld (bad) call es adc fistpl mov push fdivl (bad) inc inc xchg sahf xor pslld cmp in shl ret xchg test rol mov outsb iret dec jp push jg cwtl outsb mov sbb (bad) in mov arpl lret fwait jbe (bad) mov xchg (bad) (bad) (bad) call pop adc test fwait popf pop loop mov hlt scas adc xchg (bad) (bad) jg adc mov dec (bad) popf ret cmp enter mov (bad) incl leave cmp jne loopne stos or scas push or sbb inc (bad) pop rcl out pop inc jge inc jecxz cwtl ds out and push pop mov in push pop (bad) or hlt call shrb adc mov add cmp jnp xchg fwait sbb dec jge ss mov xchg sbb (bad) jmp cmpb out repz ud1 add cmpsl mov (bad) inc loopne ret inc outsb inc stc jp jne add push and xchg push bound popf inc adc push jle mov xchg insl jg nop ljmp out dec es (bad) pushl in mov push sub or push push cmp jbe rolb outsl cli jg inc pushf sahf mov aam add (bad) pop jno (bad) (bad) (bad) (bad) mov imul push sti xlat sub xor pop test xor sti add divb jge lahf xchg gs lock add (bad) pushl cs in dec in cmc mov jb mov jb outsl nop jo xor jg iret jl mov sbb push cld test push push push ljmp call addr16 test inc mov scas stos sti aas movsl out mov out pop sar (bad) cli aad sbb lret and sbb jmp (bad) (bad) call inc mov movsb fnstenv ret xor int3 adc mov decb sbb and ja les xchg iret jne mov insl push (bad) jg hlt dec fildl les xchg push pop xor call sbb adc imul shll adc clc (bad) jns mov lock add mov xchg fadds inc subl shrl and pop rcrl mov std lahf out push into ds enter fsts cli cli xchg and mov aam sub andb (bad) incl ret in dec enter cmp inc mov cmp jmp enter dec xchg add cmp pop or rorb pop in int3 (bad) ljmp add xchg jg in cmpsl pop test or (bad) incl sbb mov fs mov ret dec arpl jecxz lds decl repnz cli bound stos mov pop cwtl lea pusha dec jo ficoml pop cwtl (bad) (bad) (bad) call repz imul jmp and movsl jnp mov ret jle in jmp arpl divb out mov out jb xchg clc push mov fsubs call jbe cmp std and mov sti xor and adc test inc rolb scas xchg push aad push mov sbb (bad) mov sti xor (bad) (bad) (bad) jmp push push mov and ljmp mov stc and mov (bad) aas mov cli mov push gs (bad) fildll ss xor les jl ljmp mov std lock (bad) fldl test (bad) pop in add clc lcall push sbb mov inc lret xchg scas pop pop (bad) (bad) (bad) lcall pop adc popa (bad) pushl pop ror std lds (bad) mov and (bad) std mov cmp leave (bad) call jg or jno test rorb mov xchg lods inc mov (bad) decl inc pop mov imul xchg outsl rclb lcall lret movsb jle rcl lock pop xchg xlat pop adc fadds fwait ds push out dec daa mov (bad) mov lods or into cld xor fld push push divps fild adc mov jecxz incl (bad) fstpl jge sub mov cmp int pop leave lea mov push addl sbb pushl or jl adc adc jmp cltd aas push ljmp lock in daa xchg imul aaa cld int mov icebp (bad) test in sub (bad) (bad) fcomip sbb dec call inc mov push push mov mov mov or fcmovbe xchg mov push leave cmp icebp cld jbe cmpsl dec test icebp lods mov test (bad) pushl aad mov (bad) jecxz mov xchg cltd pop add jno (bad) (bad) ret test (bad) jp frstor popf dec cld repnz (bad) fimull inc cld pop cmp cs aad inc in cmp add jp lock rol mov sbb pop xchg sarl mov push xor shr cmpsl xor lock mov jbe (bad) and shrl mov call pop outsl inc mov mov pop sbb leavew pop out cli mov jmp (bad) call scas nop icebp rcrl lock sbb push les mov (bad) (bad) incl mov stc pop jecxz out dec lahf sbbb pop push jnp xor pop cmpsl add pushf das (bad) mov pop iret mov dec sbb jb in jle and add and fist pushl mov shrb mov inc add aad stos test (bad) call (bad) mov std pop and cmp mov push lods mov stos decb rcll push jno adc gs lret in ds mov (bad) (bad) (bad) decl sbb inc (bad) int3 adc js add inc push pop jmp push cwtl adc imul (bad) mov sahf mov popa add jb sub fcomps in (bad) xorl notl and lods and push imul dec ficoml mov call cmp test sahf pusha sub fistpll not add call add pop icebp repnz pop (bad) (bad) (bad) decl lcall mov sar adc aam enter mov (bad) mov (bad) ljmp xchg lret icebp movsl inc xchg test (bad) (bad) inc insl push leave leave cmpsb ror pop sti aaa or sbb xchg jl cltd pop lds mov es (bad) (bad) inc fwait shrb movsb scas xor and jb sbb push add loop (bad) xor jbe dec push incl and decl jo leave push and fwait test xor lahf jne loop (bad) (bad) jmp push or push inc mov lea pop cltd cmpsb roll push sbb sbb clc enter je xor (bad) call sub test daa roll outsl xor or xor sub lret pop push mov sub dec jp or cwtl icebp faddp xchg imulb xchg scas ret (bad) (bad) xor push xchg (bad) (bad) decl ret xchg adcb bnd mov fs bound inc cltd scas cmp xchg sbb sbbl int3 loop ljmp dec in mov fwait mov test out xchg test int cld xchg (bad) decl insb fsubrs bound pop imul (bad) cmc push pop sbbb bound cmp popa dec bound jecxz cmp xlat das cwtl stos pop xchg clc ja loope mov mov mov std mov ret dec push jle xlat lret push insl adc call (bad) jmp mov inc mov outsb test add int clc (bad) (bad) dec xchg fldenv mov mov jae inc in lahf mov add push ss jmp cmpl stos jno das scas push xor loope mov add lea sub jg (bad) jecxz lret movsl pop stc cmp push cwtl sbb outsb sub push xchg push (bad) (bad) decl int3 mov fsubl js mov (bad) adc sub inc dec repz out xchg test leave aas pop adc dec sbb jmp push push push mov mov push cli pushl hlt notl cmpsl (bad) in pushf es cmp enter imul sub xor fcmovnbe pop popa popa jmp add sti lods insb cmp sbb (bad) decl je and sbb (bad) rorl adc pop sub add push push imul ret adc xor push rcr or jl inc lock mov push mov sahf pop aas dec cmp sbb outsl test pop (bad) pushl jecxz xor in fcmovnb int movsb andl (bad) (bad) ljmp and fwait jbe gs add xor aaa (bad) (bad) fbld inc sbb dec and movnti xchg cmp or test sub loop (bad) (bad) (bad) pushl nop xchg icebp hlt notb mov sub mov test stos out cmp jbe loope arpl inc icebp jmp pusha decb inc push out pop jmp jo lret out pop (bad) (bad) (bad) incl or sti test (bad) xor hlt movsl hlt js push je clc jnp shl jne testb xchg pop cmc movsl xchg jo in pop pop out mov cli cs out loop aad jns pop iret lods pop jno ja adc jle add pop add (bad) jmp (bad) pop jnp imul and out mov in push (bad) cmp cmpsb int3 sub inc mov fwait xor xorl je jle jl pop cmc out cli fwait or repnz test sbb iret test cld ficoml decl inc fsts test jo and fistp or jmp mov inc or das das adc fwait pop ja loopne std push add (bad) repnz sbb push xchg mov adc insl cld mov lret test js add (bad) (bad) fisttpll int std sarl out loopne shrl add or incl mov icebp or shll pop mov imul mov icebp (bad) (bad) mov sub fmul mov leave xor test mov repnz (bad) jg mov push test fnstenv in mov (bad) (bad) jmp aad cltd leave lock mov out ficomp pop push addl cmp mov mov inc loop (bad) jb jle push cwtl movb rcrb (bad) (bad) incl dec loope xchg (bad) pop sbb adc pushf mov aad int xlat jge or jl jmp (bad) jle lods xor cwtl pop jns jmp movsb inc shl (bad) (bad) jg stos jl pmaddwd adc adc jo fildll mov sbb mov icebp xchg push adc (bad) (bad) call cmp ds sbb jmp or notb mov push adc (bad) aaa mov gs dec pop adc aas push lcall in push out and jg in adc aam insl and out test cmp adc or cmp push mov ret sbb or das push mov aam or call and js lret clc fldenv pop xchg sar fwait push addr16 iret pop test adc fisttpl (bad) dec ret and ret hlt outsb xchg rorl aas popa dec ret xchg (bad) pop add mov sahf mov les (bad) in mov fisubl (bad) jbe push loopne neg icebp mov das lock jge xchg negb lret int sar clc fbld cmpsl iret rcrl xor sti cmp adc (bad) jg push pop stos or (bad) inc dec pop dec inc test mov (bad) xor push add ret or into stc pop out hlt lcall cmc or sbb xchg je inc jg push or outsb fnsave xlat xor cmpsb js mov or push (bad) jl out add rcrb mov insl lret test mov pop inc and (bad) (bad) incl out and in pushf lock into ds xorb and xchg push mov (bad) (bad) ljmp aad jb imul out push insb jns push daa sahf not jb ja mull out (bad) (bad) (bad) rcrb mov push mov inc int3 pop or or or loope scas mov incl pop addr16 rcrl mov scas push call inc imul lods ljmp test xchg xor (bad) (bad) lcall fnsave and jmp insb mov (bad) jb push cs (bad) fwait (bad) (bad) (bad) (bad) lcall or and mov dec lcall ret xchg cmp je fwait inc xchg nop or mov sub push pushl pop dec pushf pop arpl mov enter adc out jmp test cmp ja ret lcall test jmp fidiv out mov jns xchg pop cli cmpsl add (bad) (bad) arpl jp push sarb sahf clc jle je popf imul mov push pop js (bad) xor test loope (bad) mov dec add mov jo shrl or inc mov pop mov jo (bad) jg gs mov sbb xor adc (bad) (bad) (bad) aas and sahf jno pop lods jle mov xor out movsb fsts sbb mov sbb mov add leave xchg pop jmp movd lds sbb inc call lea pop pop xlat movsb jp insl dec out lret add call stc (bad) call inc dec loop inc inc push int incl pop mov dec test in xchg adc sbbb push rclb scas sbb in (bad) nop ljmp adc pop pop or (bad) jg incl arpl int (bad) push push mov xchg movsl dec cmp (bad) out xor ds (bad) ljmp (bad) ljmp mov or lods je cmpsl mov and mov (bad) mov and ret mov mov jg in adc dec mov (bad) (bad) call add pop daa rorb sbb lea dec mov jae out jb push xchg pop or arpl ret sbb sti push or xor fucompp mov push (bad) xchg (bad) ljmp xchg sub out mov (bad) mov pop cmp push (bad) jne (bad) (bad) (bad) mov jp adc in pop mov sar (bad) (bad) call adc mov dec adc lock add fcmovnb jg andl imul mov adc icebp xchg test push or mov inc imul idivb fnstenv subl (bad) pushl lea bound mov cmc (bad) (bad) faddl sbb ljmp mov sub mov mov es (bad) incl cld addr16 out push (bad) (bad) loopne ficoml cmp in push ret xor xor jo inc jl xor scas (bad) xor out testl and outsb mov fidiv push xchg (bad) (bad) ljmp test bound dec push test cmp mov test (bad) jmp push call fildl jae pop inc int3 jmp mov jmp cmp cmc sub shlb jmp (bad) sbb inc stos je test push jae jecxz decl stos mov scas aad cld mov in inc cmp dec inc adc out (bad) (bad) call scas mov fs lods fidivl ret cli jmp mov lret ret push sbb (bad) dec repz mov jecxz ficompl sbb and scas inc scas cld sub or mov sub mov add cmp cmp outsl inc into cmp inc jmp (bad) mov rcll mov lcall push xor js ss mov mov mov movsl sub stos jecxz (bad) (bad) decl testl mov ja andl add (bad) (bad) call pop dec out inc or cmp scas push popf jg jbe dec xor aas mov or pop dec adc into push xor dec fs mov int3 insb pop adc mov cli scas jg dec std jecxz add mov xchg out mov popf add xchg lea daa (bad) (bad) (bad) jg inc dec loope mov cmpsb mull mov push xor xlat jmp adc add jge insl cld sbb cs loop pop (bad) jbe inc in (bad) out dec dec das (bad) (bad) lcall inc or pop mov mov inc je ja (bad) (bad) (bad) decl movsl jae je iret addr16 add sub (bad) cli cmpsb push adc (bad) (bad) mov cmp incl sarl jle in adc int3 aad sub loope jne je (bad) (bad) (bad) lcall rclb sbb stos stos mov test test dec shr adc jmp and adc dec pop jno lret pushf lret rolb (bad) stos dec into loopne jo idiv push mov test mov push jle test (bad) sub into hlt sbb movhps mov adc ret (bad) (bad) (bad) call adc dec enter pop jae pop dec addr16 je jbe push lret jbe adc aas xchg push mov sahf push movsb fwait int3 mov shr mul (bad) (bad) ljmp addr16 int3 pop mov mov xor inc cmp xor push cs mov cmp imul lods dec jle mov test xor insl movsl mov (bad) iret jmpw (bad) (bad) (bad) jg pop aad loopne jg scas loopne mov lds mov pop mov cmpsl push jbe test call jecxz pop rcrb mov jge or (bad) (bad) jmp xor sub or rorb jge into jmp test lcall lea inc push ret adc jmp adc lahf or loop lret xchg or and andl das xor out dec lock cmpsl pushf cmp jmp pop jnp jae fidivrl or mov incl jmp stc stc or jbe hlt (bad) (bad) pushl or gs mov mov sub arpl psubq bnd mov ja (bad) (bad) aas xor lds mov mov shr inc xchg cmp out popf or (bad) pushl and aam mov mov sub cmp pushl or in sub inc in (bad) mov (bad) mov into add mov enter jmp xor and push int3 xchg sti dec pop ret adc fbld daa mul out mov loope movsl inc std jmp js mov loope ja les incl jl nop sbb inc mov test and adc inc adc inc or lcall cwtl loopne pop icebp incl in dec sti push jl inc jl mov xor loope lcall xchg fidivrl inc mov loope (bad) mov or add push inc je pop dec ja adc inc enter popa add (bad) outsl cli add mov inc sbb cs dec mov add or aaa adc and test dec inc dec cmp addr16 jecxz jmp subl ss popa sbb outsl scas lahf mov jp jg (bad) (bad) (bad) mov jbe pop je or movsb and jo notl ret fcompl pop jge mov push std push (bad) pushf dec mov sar (bad) (bad) lcall or dec xlat xor andl (bad) cmovs dec xchg scas fwait std xor adc add jmp aam mov lret stos fwait pop nop pushl sub fidivl adcb add stc lcall inc jge push imul pop cli sub jp pusha add out jl,pn aad das insb and push inc inc repz (bad) (bad) ljmp mov pop js (bad) mov add pop xchg pop and in (bad) cmp mov add mov lret or js mov push repz (bad) ljmp (bad) ljmp iret cmc mov push xchg jge inc (bad) (bad) call (bad) es test fsubl mov ret add imul cltd (bad) mov and fmull cmp icebp jg lcall xlat dec pmaxub movsb sub ret adc int xor int push pop sub mov movsl mov loop mov (bad) addr16 push or jb adc fcomi (bad) incl fwait add rorl cld enter cwtl in inc mov (bad) decl or push out pop push or add stos cmp mov lods mov (bad) decl adcl rcrb int fwait stc rcrb call out rol in (bad) out lds mov (bad) (bad) (bad) (bad) cmp addl push iret pop or flds sbb mov pop add gs fisubl mov jo cmc mov pushl out cmp inc out push push add jno clc ljmp aaa test mov dec push xor and loopne jg xchg cwtl roll (bad) (bad) call jl cmpsb mov or fwait int3 push mov lds push (bad) dec std pop in xor jle orb jb jns lret cli incl sbb push fimull jl lods xor gs dec cld ljmp xor xchg jno inc mov pop mov xchg xchg jle es mov pop mov fs and or push cmc jle jecxz test shrl in mov decl cmpsb jecxz push push push xlat jns addr16 popa pop std and add add adc (bad) incl sbb inc xor dec arpl pushf (bad) and icebp out adc add dec add push jbe mov out (bad) aad sbb add (bad) scas mov jecxz aad cli xchg (bad) (bad) (bad) (bad) decl mov ss ss nop push loopne xchg xchg add mov repnz ljmp nop or sbb push add insb inc dec push movsl je xlat cmc xor (bad) (bad) inc or adc cmp xchg sub lcall ja aam pop (bad) pop in adc cmp inc jmp add pop pop dec jecxz and loop cmc (bad) (bad) jmp and sub xor jno and xor xor int3 daa xor dec mov push mov push and mov stc rcl call inc (bad) int3 decl sti or jbe stc in lret je fadds sub cmp ljmp pop pop cmpsb xor rorb sbb loop pop out ja push xchg test incl dec inc or test out aaa cld out mov mov push cmc mov xchg (bad) int outsb pop cmp (bad) ss ljmp dec (bad) or push fwait enter (bad) jmp cmpsb or adc pop mov mov mov sub dec (bad) loopne or in pushl adc add ss loop ret stos pusha push mov cld pop icebp into mov cmp push imul mov (bad) jg lret ss jmp daa pusha dec sbb mov in dec loopne inc pushf mov gs xchg lods mov cmp fistpll add (bad) mov pop test sbb fiaddl movsb and inc inc aad dec das xor and cmpsb mov or add (bad) incl and xchg test cmp ret sti cmp xor movsl sub and (bad) (bad) pushl lods scas dec sub mov push shrb push adc pop (bad) mulb cmpsl xchg mov (bad) (bad) jg cmpsl ds (bad) bound fxch ret lahf stc xor loop adc fwait xor loopne dec in fs (bad) (bad) mov outsb mov mov mov ret (bad) out (bad) (bad) (bad) call stos (bad) rcrb xchg dec push adc flds scas (bad) imul jmp fnop mov xchg imull xor push mov xchg out adc pop sub insl out mov (bad) (bad) (bad) call outsb repz in adc fs cmp mov lock lcall incl (bad) jnp push push in fisttp (bad) aad cltd pop jbe (bad) out add push pop out andb adc enter cmc stos add fs ss pop js movsb std mov push cmpsb js and inc add leave cwtl (bad) in jmp adc adc das cmp ljmp mov inc pop loopne push mov (bad) (bad) jp pop sbb leave rclb xorl lahf cmpsl sbb cld xor add xor into rolb std pop pop lahf clc ljmp adc vcvtsi2ss in mov push pop push and xchg dec mov fdivr pushl mov add cmpsb ret popa shlb sbb adc add (bad) out loopne ss or dec test mov popa jno or jecxz loop pop inc lret cmp sub push add xchg pusha out mov adc lcall dec cmp jl push stos test cmpsl mov std mov neg nop cmp add jg dec pop lock out dec or or sbb cmp incl (bad) enter fnstsw cmp and xchg adc push icebp cmp xchg sti lahf sub dec sub push cmp and scas andb adc ds pop stc lret push mov xchg cmp fwait xchg es rcll xor mov inc xchg push ss mov icebp (bad) stc jle xor sub mov cmp cmp mov push push es xlat cmp lods movsb fist sarb mov fwait mov aam push jp pop call mov pop sti or aam fs rcrb xlat in xchg fsubp push dec jl (bad) mov out add pop outsl inc insl and data16 mov cli inc mov loop aad xor sti mov lods lods (bad) (bad) (bad) in add lret mov pop cwtl mov (bad) fdivr mov push pop orl pusha and (bad) xor inc aam lea ret fstpt ljmp xchg adc mov mov (bad) jbe jg xchg subl dec mov ficomp jg fs xor adc lods les xchg lds decl mov inc adc cmc pop mov loopne ret pop dec lcall into push dec add mov dec aaa lock insb lcall fnstsw and jno sti pop ja xchg cld incl mov xchg in xchg mov pop sahf push xchg jl jnp jmp push rclb cmp pop jle mov popf fs (bad) (bad) decl mov xlat into (bad) mov fsubrs into push repz mov mov add push mov ret fnstenv adc out cmpsb (bad) jbe mov mov std (bad) jecxz (bad) jg pushaw cmpsb je ret dec addr16 sub push int3 fwait dec push repnz cs (bad) call cwtl loopne xchg dec mov jnp push xchg inc add xor sar cmp incl vorps mov push pop xor lcall mov sbbl pop jmp mov rorb sub out jb leave in push adc mov push push mov (bad) (bad) call push xchg push out movsb (bad) jbe pop push mov xchg (bad) scas sub adc ljmp mov (bad) pop (bad) frstor enter cmp pop imul (bad) (bad) push xchg mov dec inc sbb pushw xorl xor inc movsb call pop out mov or fnstenv and pushl push sbb and cmpsl sub test inc sub into rcrb adc in clc movsb jns gs incl jns (bad) or pop rcrl mov jle repnz pop dec fnstenv lea dec jne pop xchg test or pcmpeqd outsb mov xor (bad) (bad) incl xchg cld mov pop xchg jne push pop jo ja in sti test (bad) fcomip pop fidivr sub aam shl jge imul and push cld jne mov dec sub cmp (bad) jg hlt xchg cmc (bad) les js mov jb xchg inc push icebp nop aad push out adc test cli mov lods das and cmp (bad) decl pusha ds fisttpll test lret mov aas (bad) (bad) (bad) call jnp iret mov or push jb mov sub jns aad adc (bad) (bad) jmp and enter out iret jl scas bound aad sahf sub movl dec sbb inc cmp or ret jp movsl int pop js popa xor aad lock hlt vmovq push test (bad) fnsave adc push adc mov (bad) add push cld pop (bad) icebp mov (bad) dec bound or xchg lea mov std sub jmp (bad) (bad) out inc pop push aad shll add lods sti and fwait je xor imul pushw jge loopne add in arpl rolb inc (bad) (bad) (bad) jg daa inc jne add dec jo les dec bound sbb or mov or call jno cs mov out sub (bad) mov rcl outsb (bad) (bad) aas dec lds dec rorb icebp push adc push fldenv add fisttp jmp push (bad) out or jne add clc sbb and mov outsb (bad) (bad) jmp in cmp in sub icebp imul ds sub out (bad) (bad) incl mov inc mov daa jle cmp add xchg loopne cmpsl out pop mov pop mov je cmc pushl pop dec fildll adc je sbb (bad) (bad) lcall dec mov mov ja xchg mov int sbb inc lret lock jg mov jge jge pop and lea add (bad) call jmp dec cmp mov gs lock push jae adc jmp (bad) xchg cli in repnz sbb sbb (bad) or (bad) (bad) (bad) jmp fs inc mov pop sub in mov mov xlat inc cmp mov dec fs jmp mov add jg sbb arpl inc adc mov lds pop jae push out pusha push jmp mov fstl jecxz sti mov sarb ret fild mov out mov (bad) jno,pn jecxz mov jnp cs (bad) (bad) call insb and paddw cmp test sbbl push repnz call (bad) cmp nop aam mov ja or imul (bad) ljmp enter adc ficom cmp rcrb pop or cmc (bad) (bad) ljmp call mov xlat jmp int sbb (bad) call mov movsb fs ds mov xchg mov add (bad) (bad) (bad) pushl (bad) pop cmp push sbb jb mov xor mov mov (bad) (bad) jmp pmovmskb or lret fildl daa sub gs sar (bad) (bad) jmp xchg loopne mov in xchg push add mov stc push dec sti sub mov fnsave or lods or and pop test in cwtl aas lods out test mov dec push bound push jo es push outsb mov (bad) mov pop adc stc fsubrl sbb fist sub (bad) int3 imul or xor gs inc dec xor mov out sbb ljmp push jmp sbb sahf cmc in xchg adc fwait push (bad) out inc in (bad) (bad) (bad) aas xor cmp adc call nop push pop mov cli mov cld sub addl sbb psllq lods jbe (bad) (bad) (bad) jmp jp pop mov dec mov jl stos add mov mov ret mov adc push ret or in jg sbb adcl pushl test les lods xchg (bad) jp pop or cmpsb (bad) pushl cmp jnp ds inc sbb and and lahf addr16 dec mov push outsb mov cmp dec loop inc cld lcall test jmp int3 loop xor repnz shl (bad) jg add fs faddp bound inc pop xchg or scas (bad) jmp pop fisubr add dec mov nop icebp add lret jle div lods test call inc subb jp pusha leave push ss pop imul fneni(8087 out pop pop decl mov mov cmpsl pop push xorl inc test cmc (bad) pushl mov mov push push dec outsb hlt (bad) lcall push mov pop dec dec jno dec inc es xor (bad) (bad) mov lahf int push xchg inc or cmp mov jmp jmp mov insl mov aas fwait jmp mov inc cmpsl fdivr (bad) decl lret mov icebp cmp pop pop sti (bad) addr16 xor or mov in pop dec sahf or or (bad) mov sub lahf push aaa int3 add (bad) (bad) incl imul cs push sub (bad) or jne adc push (bad) pop (bad) pushl rcl mov sbb jge (bad) xor daa mov fstpl inc cmpsb mov (bad) (bad) mov dec fidivr outsb inc ret pop adc movl in sub aaa pop movsb loope cmp or mov pop sub add mov sbb lods fwait stos xor das rorb mov imul push (bad) (bad) (bad) ljmp pop pop mov iret or frstor std mov mov mov dec je arpl pop jbe inc sub insb leave add (bad) in pushl cmpsl int and inc push xlat scas mov pushf outsl shl jb iret xchg psubb rolb fistl bound loop and mov sbb repz aad or sub push movb and xchg icebp inc fsubrl dec pushf push xchg (bad) (bad) jg ljmp rclb out push sub pop in fs (bad) jg movsl insb outsl mov adc adc add mov ja (bad) call fwait aam mov fsubs or add ret call clc mov inc test inc in push (bad) incl inc cmp add int jg (bad) mov sbb (bad) (bad) incl faddl lea scas cvtps2pi sbb sub lret pop add push inc addr16 (bad) icebp lods jmp jmp (bad) (bad) call ss mov mov addr16 push in adc cltd xchg sbb bnd pop incl jp pop adc aam pop mov pop icebp pop mov add loop push jne xor mov add cmpsl sti add (bad) mov in xor mov mov ljmp faddl or add in pop subl push int3 mov iret or (bad) incl (bad) dec int3 jbe mov push ja add test add mov xchg jge ja lods and (bad) cld shlb adc (bad) (bad) jmp (bad) imul sbb jne fsubl xchg jle orl jg ja mov lods shll (bad) (bad) aas jae (bad) push enter fildll (bad) cld ss and jmp lahf fsubr mov inc popa dec cs fdivl (bad) lret insb icebp iret orl rol daa (bad) sar (bad) (bad) fcmovb (bad) pop xor ss (bad) lods rolb xchg jp sti (bad) jg (bad) mulb and xor mov (bad) (bad) (bad) decl arpl mov xor sub data16 or roll (bad) aad sahf mov mull adc mov mov (bad) jg insb popa push lcall les inc inc das jns hlt js and int3 aam (bad) (bad) call jae push xchg cmp dec popa mov xchg test pop outsb lods test mov aad (bad) (bad) (bad) (bad) (bad) jg add jp lods jp fsubr daa jmp and in dec cmpsb inc push dec dec fdivrs leave mov andb enter push orl popa xor xchg adc fidiv mov scas ret pusha mov ljmp dec sti roll adc xor push dec inc into mov push jecxz lret test je xchg jne dec fisub jg sbb call adc (bad) cli imulb (bad) push xor negl outsl jecxz gs ret (bad) das scas inc test adc and stos mov ret mov cmc jg (bad) (bad) (bad) (bad) fiadd fstpt mov scas mov xchg mov psubq dec adc xchg int3 mov cmc test dec adc jge lock (bad) (bad) lcall mov es out cmp or sbb adc push popf ret or pop cmp stos (bad) jmp fsubr test mov jb mov cmp mov inc cmp test test and arpl shrb aad outsl add lock push xchg mov push sbb popf (bad) jno xchg mov aad xor add lcall incl test sub gs in sub mov cli call adc mov leave push mov loope das cs (bad) (bad) jg inc loope or push fwait adc mov (bad) cmovl cwtl cmp lock mov and call jns or rolb pop adc aad stos adc sbb mov cwtl push call cmc movsb xchg pop jb push dec inc and push dec sbb daa (bad) ljmp sbb mov adc pop pop pushf xor mov xchg (bad) ljmp loope aaa cmc xchg stc insl (bad) ljmp clc mov push data16 inc sbb (bad) jmp inc aam adc clc test mov mov decl push (bad) repnz adc adcl (bad) xchg and ret and (bad) (bad) (bad) in addr16 and lahf sub into and add scas xor dec (bad) sub pop pop adcb xor sti and cmp stc dec sahf lods push sub xchg lret pop inc hlt mov jmp mov (bad) mov data16 mov cmp js enter sub xchg lret loopne ljmpw xor ljmp pop rcrl sub icebp loopne aad adc cmp xor mov jg test sarb push pop jnp (bad) xor mov mov mov loopne push inc lds out mov cmp test and fwait insl loope mov dec insb xor mov dec incl bound test inc sbb pushl mov notl and pop xor sti cltd leave cmp int3 sar test sbb cmp test dec icebp lret test fsubrs mov sub jns mov (bad) (bad) decl les aam int or jl adc add les cmc adc jo shll pushl ljmp loope lret jae pop push fs popa dec out and out xchg repz add inc aas push int3 in jbe or push (bad) xchg sbb movsl cld int3 xchg fcomip ret fs dec lods aaa sbb pop xor cmc mov lock cli dec jp fild xor mov scas movsb cmc xchg jg pop dec sub xchg enter out in out mov test jge (bad) (bad) aas gs jle movsb jnp cltd insb adc pop popf xor lcall sar (bad) mov push aam jle test dec jg mov js mov mov cwtl jecxz and or sub push ss mov (bad) (bad) pushl outsb (bad) fcompl mov mov mov mov jg jb scas in dec adc (bad) (bad) call imul call repz mov mov xchg decl jb hlt add cld jg cmp inc and sub and out es jg jo (bad) shrb cld call mov pop jecxz std cmp out data16 enter mov std scas xchg bound loope jg cld jg out movb pop test subb cli push (bad) (bad) lcall dec aas movsb cwtl insl in aad (bad) push outsl adc pop daa pop push xchg stc mov into (bad) repnz (bad) jmp xchg gs pushf in jmp out mov imul movsb jb jp sub jmp xor stos (bad) (bad) decl ret mov xchg mov pop imull jae cld loopne mov out mov (bad) (bad) incl fsts pop cltd pop shll pop (bad) cmc xchg mov dec and push outsl jge fisttp (bad) (bad) (bad) incl and shr in into sahf sub in les dec fildl cmp xchg adc (bad) ljmp xchg sbb ret mov aaa mov cmp mov mov (bad) decl jmp pop mov ja nop scas mov movsb sub cwtl pop adc leave jne mov fnstsw (bad) dec cmp pop arpl test mov ljmp cmc in pop rcl stos loopne cmp xlat imul mov fdiv xorb add and cmc (bad) mov mov xor adc (bad) ljmp stos shr jo inc mov addr16 (bad) ljmp (bad) mov cmp sar pop xchg jl into inc sub push jge fdivr pop and sbb scas loop stos mov jge jae mov cli addr16 daa cwtl adc popf inc inc (bad) call (bad) mov fsts stos sbb (bad) mov and aaa ja push inc cmpsl es and adc (bad) (bad) (bad) jmp or adc mov add inc test or fist call popa adc mov jge fistpl icebp push (bad) inc and cmp add (bad) (bad) (bad) jmp test ljmp xchg nop mov xlat adc inc roll and movsb jo shlb enter and fld1 ljmp sub addr16 lock xchg lock decl stos out ret pop jno,pt mov mov mov mov (bad) (bad) jg pop aam leave cltd stos add out ret int3 lahf push mov mov call cld dec ljmp or mov adc subl push mov out fdivrp jae out adc pop in pop add (bad) (bad) lcall or arpl mov pop sub pushf aad push inc xchg cmpsb mov sub cmp sti and jg enter cs cmp push push cmc lcall lret fiadd mov (bad) and (bad) (bad) push cltd imul mov jg in lods jg adc (bad) push mov loope or inc andl (bad) (bad) mov jnp leave inc daa je sub (bad) in lea clc (bad) (bad) std movsl out push mov xchg pushf sarl mov (bad) (bad) aas lea dec popf outsl mov mov dec add xchg mov cwtl mov shl adc std jg stos repnz and cmpsb adc out gs rcr mov or adc vandps jl xor into pushf (bad) cmp (bad) pushl adc mov inc sub mov icebp inc fnstsw pop inc cmp (bad) incl fldcw and movsb (bad) jg ret inc adc mov sbb xor mov push add enter aad arpl icebp ljmp sbb call (bad) shl adc push lods inc pusha pop sbb arpl aad stos sub mov cwtl cmp pusha sub (bad) out loope (bad) lea std sbb (bad) aas adc aad mov cmp lods push xchg popa (bad) push xchg (bad) jg aaa jo inc outsb mov lods repnz xchg or stc fdivrp jecxz nop nop push icebp mov mov into sahf inc and inc jnp xlat movsb cmp mov pop cs push mov (bad) (bad) jmp out int3 pusha test cmp fwait movsl ja mov pop int fstl call xor xor decl fadds push mov repz cmp scas mov adc jmp std bound sbbb inc (bad) sub pop cmc dec call stos incl sub test ret enter mov (bad) (bad) (bad) (bad) fimul add bound mov fadds mov sar sti ja (bad) aas pushf (bad) pop in sti sub push jge decl sbbb loopne call mov push xchg xchg outsb decb incl (bad) pushl int3 andl inc mov lds fistpll pop cmc int3 (bad) adc pop sub add lods mov add fwait adc xchg int3 push mov sti lcall call daa cli dec lcall int jne pusha (bad) decl outsb js add push into (bad) enter dec mov and call aas clc addr16 (bad) (bad) (bad) mov movsb sub dec xchg pop dec aaa cltd push or mov lea or dec mov inc xchg or test push popa (bad) lcall push fbstp hlt outsb fsubrl mov cmp (bad) decl mov pop sbb fdivs enter cmp push clc insb adc cmc (bad) jg hlt insl cltd mov fs stos pusha dec adc cmc popa xchg mov (bad) (bad) lcall sub pop jo inc push jecxz cli loope dec mov js xor and js les hlt orl (bad) decl jbe data16 movsl in mov jnp arpl mov ret push ljmp cmp xor cltd dec leave les cmpsb cmc lods push mov cmpsb pushl dec inc and lods push mov cli jno jecxz lds lcall sbb sbb (bad) mov cmc jns test mov sbb pop loopne add xlat dec jne pop cwtl sarb sub out push mov (bad) (bad) incl or fcomp mov push mov daa sbb inc pop jo stc add push nop fisttpll data16 inc cmp cmpsl push cmp dec incl aas sti inc or (bad) dec loop and add mov cld jg call out (bad) je sub data16 fsub add (bad) and fsubl mov and (bad) out into inc dec adcl pop pop cwtl imul in (bad) lcall hlt jns add lcall ja iret (bad) jmp xchg add pop push lret decl xchg (bad) fmul push fs cmp sbb push mov sti test mov ds clc shrb mov mov pop mov cmp (bad) popa add ja dec and push push call push cmp stc sub mov jge push xor push pop ja xchg (bad) repnz sub mov dec push inc sbb (bad) incl pop or test cmpsb sub loopne push or daa cmp aaa cmpl add push push ds (bad) xlat fsubr mov xor (bad) inc add or cmc sub pop movsb pop add insl push pop mov or add lock (bad) and js icebp mov das mov sub jg inc cltd ret in shl pop jecxz fidivr clc mov sbb inc push cmpl or inc sbb mov repnz nop inc sbb add jecxz mov and into mov insb test cmp jo pushw pop lcall (bad) or xor insl mov cli (bad) decl cmp sub or lcall fildll push stos (bad) data16 cmp lds mov add push pop adc sbb add (bad) mov cmp add ret (bad) fist cmpsl cmp adc popa iret sbb int3 clc scas insb enter and leave je sub (bad) (bad) call jp mov std push sub (bad) dec mov fnstcw jmp pushf xor cli clc sbb (bad) adc (bad) (bad) lcall notb lahf push sub jg repnz leave int3 bound pop (bad) testl (bad) test stos lcall enter mov mov dec gs popa jno iret dec inc lret lahf jg fs fcoml test xor addb loopne movsb sahf xor (bad) (bad) in pop out loopne sub mov (bad) lods bnd jae pop data16 dec mov stos nop int3 repnz or inc mov mov pop test add or jae out push sarb xchg jg dec ljmp shl in (bad) decl add push leave lahf adc ret cs dec and (bad) (bad) incl sahf lret add sbb xchg add mov mov in sbb push mov mov or cmpsl jns or jne sar lcall xchg adc out arpl cmp mov mov (bad) (bad) call pop lods xchg inc pop std mov sub clc sbb hlt jns lods aam sarb decl fs xchg mov fadds add icebp repnz adc insb fcoms mov mov (bad) call cmp mov cltd xchg mov push or pop or imul adc xchg xchg or mov inc adc pop aaa lahf cltd pop jno add jmp cs lcall pop fcoml lea dec repz (bad) (bad) jg xor push mov aam js xor scas inc or cmp push xchg and sar rol mov or jge loopne incl mov jb fwait shr insl aaa push cmp (bad) pushl mov or dec sub sbb imul call clc mov gs outsb orl adc adc mov (bad) (bad) (bad) lcall out inc popf inc pop inc jae pop pop inc add mov rcrl jl cmp lock (bad) and mov sti insb cwtl lods add loopne fdivs (bad) (bad) (bad) jg je lods ret cltd fcoml and push outsl sahf adc mov test add push cmp loope (bad) jmp (bad) fstpl popa fsubl int and (bad) (bad) fist fdivl popf jl pop int3 xchg xorl aad (bad) (bad) ljmp roll xchg stos push insl dec aam jg (bad) mov hlt pop inc jnp out push mov rcrl mov mov call sbb push gs pop mov cmpsl repz stos lea push adc ljmp pop nop cmpsl cmc ja mov jo or pusha cltd inc loop jg xchg inc pop (bad) insb mov xlat mov push pop mov fisubl mov sub mov hlt sbb (bad) decl call sub pusha (bad) lret adc mov rcll xchg repnz lods jmp mov outsb mov inc rcrb call xlat add pop xchg test adc (bad) repz (bad) (bad) mov in fistpll movsb insl (bad) jae xchg mov pop sub jo jge in sub inc test das shl jb xor mov sub (bad) (bad) ljmp inc and rclb mov fsubrl rorb lock mov shrb mov test (bad) (bad) jg push pop pusha mov lods or push (bad) bound push js subb xlat iret push jge xchg xchg push sub cmc ret ret mov (bad) std (bad) in inc jno jmp or dec push inc (bad) (bad) (bad) incl or rclb aam lahf add sti add in rcrl jl pop or testl fucomip jns (bad) jmp loop sub dec test adc cmp xchg sar (bad) call pushf jge mov outsl movsb jp mov cmp mov mov xlat mov stos adc pop int sahf sbb inc jecxz mov jnp xchg shr pop push je imul (bad) (bad) cmp push add sub add iret enter test lcall into fldenv mov pop jmp cmp (bad) jmp and cmp rcrl mov mov cmp or in sahf inc (bad) (bad) lcall (bad) pop cld xchg and ret lret cld mov popf xchg testl (bad) mov fistp in mov gs (bad) in xchg push pop int gs incl (bad) jns push xchg dec jle ss mov popa popa sub rclb mov adc push fsubl ffreep rclb sub popa in jbe mov lea pop les inc rcr outsb xchg mov loopne outsb imul or dec push mov stos adc (bad) decl gs test bound and in (bad) add pushl gs sbb push (bad) mov (bad) (bad) ljmp xchg push or cmc enter into in lods sbb (bad) adc mov pusha data16 or pop adc loopne cwtl mov pushf mov xchg (bad) jmp clc adc pop push aas xchg lahf in ljmp xchg mov insl std (bad) pushl adc or mov imul mov inc cmc cmp or sbb fistpl in or (bad) (bad) (bad) mov sbb mov (bad) aam add fidivl dec push lret push (bad) test into (bad) or mov mov mov in syscall push dec test add xchg into je fbstp sub test pop mov sub jne decl sub pop xor aas mov cmc push lret inc pop fisttp mov sahf scas ficom mov dec mul jns test lahf out (bad) je pushf movb cmpl mov int daa mov mov loopne clc jnp faddl jmp (bad) call jp adc mov sti sub pop sbb jmp repz out inc cltd pusha loope call into movsl aas mov mov cmp rorb add (bad) xchg (bad) push jp lahf or (bad) mov mov xlat xor inc inc stos xchg push subb xchg ljmp push test stos lret sbb push (bad) pushl jo pushf and lahf movsl in xchg sbb les mov (bad) (bad) jg (bad) sbb inc arpl xchg xchg push cmpsb xor es in jno pop lock inc or pushf pop mov jge das or sub arpl or cld cmp mov push push and sti fsts jns jo dec pop leave (bad) fdivr lcall test xchg sub test (bad) (bad) lcall and pushf jmp cmpsl jae aas mov jae rclb fwait adc rcrl movsl ljmp pop inc adc pop sub movsb lock push mov dec lods mov cmpsl lods mov xlat imul mov add sbb cld mov lock (bad) ljmp hlt out dec outsb jnp dec pusha js sub jg dec mov (bad) test sti and cld mov lret mov or inc xchg decl leave push jns dec dec out sub inc (bad) cwtl scas lret mov jo ljmp enter cltd xchg mov (bad) (bad) call loopne inc push pop jbe mov je inc mov sub out adc popf sahf inc or add (bad) ljmp mov mov xchg stos lahf popl mov xlat (bad) (bad) lcall push mov (bad) fimul insb dec data16 cwtl sbb lods stos (bad) ja cs pop dec dec decl or into test mov movsb icebp cmp inc jmp in push fisttpl (bad) (bad) jg xchg sub mov jl imul ljmp in movsl lods mov notl in mov xor (bad) fadd sti push mov into ja jmp syscall (bad) aad pushl std lret mov sub scas sub mov cmc inc and cmc push je sub xor (bad) incl push dec sbb in and xor (bad) (bad) mov xchg push movsb (bad) xchg pushf out xchg xor add (bad) mov mov mov popl jbe or (bad) sbb scas push dec inc jecxz sbb push mov pop loopne sub mov repnz sbb cwtl shl pop inc cmp (bad) mov adc aas mov jg cmpsb (bad) mov sti or cli lcall mov push mov sbb jb loope pop (bad) (bad) ljmp inc loopne jns scas pop lds mov fisttpll jg push cld ret mov clc sbb mov mov ret psubusb inc (bad) (bad) incl fsubrl (bad) test add sub mov test mov jecxz lock cmp jae in bound mov mov sbb (bad) jg mov dec in jo xlat adc mov roll (bad) (bad) decl fs shll call scas aam pop mov mov (bad) pushl sbb inc fldcw ja lret jge mov mov decl popa sarl fisubrl inc jne xlat in add adc mov pop into fwait or xor mov xor gs (bad) (bad) mov (bad) jmp push (bad) (bad) xchg push das push xchg rcll (bad) mov mov (bad) dec adc cmp mov ret ss std inc lock jo cmc hlt lea aam adc jns jg (bad) cmp jg and pushf inc movl adc (bad) ds nop pop or aaa adc sub test push enter jg ds dec or fwait test popa std mov push push lret lea das andl adc pop into inc aas movsb sub or mov cmpsl sbb lods lcall lods inc fwait cmp sbb cmp (bad) dec das rorb cmpsb jo cmc add int3 cltd cwtl push lock lea ljmp in add and jnp incl rcrl insb movsb gs inc das fistpll xor jmp cli jecxz (bad) decb or push aaa pop scas outsb popa test pop sbb xchg (bad) (bad) (bad) jg sbb mov push jo inc std cmp or inc dec xchg outsb adc (bad) mov xor and popf test sti mov int pop xor stos and inc xchg leave mov out dec ret dec cmp sub pop pop mov (bad) (bad) jmp adc loope dec xchg insb fisub lret pop aad test out (bad) aas push aam cli int dec adc insb push or insl mov xchg inc adc jmp (bad) dec mov pushl jecxz push idiv mov rorb lahf ret mov lahf test xchg daa testb xor mov inc icebp push in sbb (bad) (bad) (bad) (bad) stc aad pop js or adc scas popa push negl mov or pop inc push stos or lods push divb shrb sbb (bad) jg mov outsl sbb movsb bound (bad) inc cmp push sbb (bad) (bad) (bad) (bad) jmp cwtl sbb cwtl int daa loop add jo mov mov rorb add (bad) dec stos iret cmp push jbe fdivrl frstor cld stos and (bad) (bad) (bad) jmp sysret movsb decb scas mov ljmp jns movsb fwait mov (bad) jmp aas outsb ss incb fisubr cmc ljmp cwtl stc (bad) (bad) decl std ds out dec and sbb mov out ret loope in pop push jp ds (bad) incl pop push rol push mov nop mov mov lea es je inc repz mov data16 stos xchg hlt jbe or clc pop sar test fcmovu adc cmpsl xchg sbb gs das stos fcmovu inc add pusha ja test adc js mov or les scas jge or (bad) decl dec pop cmp jo xor pop pop int pop adc push rorb cld (bad) loopne jne rcrl push adc push sub lahf sti pop inc incb sbb pop idiv call add lock popa sbb dec cmp sbb (bad) fwait jge xor xor bound (bad) cmc mov (bad) (bad) (bad) (bad) pushl (bad) jge mov imul dec int call pop outsl xor aas pushf mov ja mov shrl and call mov enter stos into cld (bad) (bad) out adc scas push aas cmp stos mov mov sbb adc mov lcall dec das stos add mov ja fst pop fnstenv push stos scas sar mov sub ja ror xchg clc in lds sbb and sbb xchg (bad) jge and and fmuls xor es (bad) (bad) mov cmp xchg notl mov rcrb lods lcall leave push (bad) popa sar mov xchg mov add inc cmp ja jmp cmpsl jne jae pop jne lea dec popa icebp bound ds (bad) (bad) jmp test aas stos pop mov ret pop xlat jge insb add xor pop (bad) (bad) jg and mov adc orl (bad) in xor push std aas ds int3 repnz cs test lea insl dec sub push push dec ljmp test add pop outsl xchg dec jmp sbb out mov cmp inc xor (bad) mov xchg adc in xchg xor cmp incl inc (bad) sbb push xor mov popa mov xor push (bad) decl or mov mov (bad) (bad) cmp jle push (bad) decl jbe jg daa or inc mov stos push cwtl hlt clc (bad) incl rolb mov mov mov pop sti add out pop xchg add pop jb mov push jne push push dec xchg (bad) jg add das mov fwait push (bad) gs shr inc and pop (bad) (bad) (bad) lcall lcall je add sub lcall mov sti jne arpl fisttpl pop int jae cmp nop xlat nop or inc outsl nop (bad) lcall aas add fnsave xchg lahf movsl push push in push ss iret ret and jmp lds lret cmp pop enter (bad) (bad) mov es xorl adc xchg daa aas rcrl (bad) (bad) (bad) clc or subl lds xor (bad) xchg lcall add aas sbb fsubl fimul daa mov (bad) (bad) incl inc lea fdivrl iret lahf lock xor lret into std pop es cmpsl fcmovu sbb lds nop fldenv incl cmpsl popa (bad) mov xorl outsb aaa sbb mov jo lahf or sub daa lahf jmp mov test sar rdpmc sub mov or iret mov icebp mov (bad) incl dec int3 mov mov cmp push je aaa push dec popf (bad) mov mov das cli push dec sub out decb mov mov addl (bad) (bad) lcall nop xor xchg push or mov ds xchg ffreep adc cmpsb dec popf mov std (bad) cmc lods add neg loop sbb pop lock sub cmp (bad) ljmp lahf xlat mov dec sahf add fsubl pop lds cmp push mov aad pop pop les push mov stos (bad) (bad) decl cld fdivs lcall sbb lret mov sti or std mov rcll xchg fdivrl inc push mov repz data16 pusha (bad) (bad) incl inc aad es xchg mov xchg mov clc push fbstp push pop repnz (bad) call xchg sbb (bad) push test xchg push jmp sahf cmpsb sub mov (bad) clc jg pop lock (bad) jno xchg dec (bad) (bad) leave dec xchg mov outsb out pusha fld jo daa jae and pop mov cld ljmp inc cwtl jmp dec push add idivl in pop dec dec (bad) (bad) inc rcrl into stc inc roll daa adc orl in sbb (bad) (bad) (bad) cmp lds pop shlb adcl xor mov push sbb incl pop cmpsb jl sub call mov (bad) (bad) (bad) incl stos cli xor in sar adc in les mov (bad) inc hlt or adc bound adc xchg sbb (bad) (bad) decl mov je (bad) push adc mov jge cltd stc les das cs (bad) incl inc out scas clc loopne xor push aam or xchg dec jo jg (bad) lcall and rcll pop adc mov idivb sub or sub cmp add ret dec jmp mov ljmp xchg gs lcall (bad) (bad) lcall (bad) in add cld and push sub fiadd xchg pushf and data16 push stos (bad) (bad) jg gs add out push mov arpl or fwait cli incl push hlt fwait ret or (bad) pop xchg std ljmp push stos sub mov int3 pop sbb aad es and lcall or lahf (bad) mov stos lock (bad) incl add add jns int3 stos mov loope mov out test (bad) pushl daa int3 jle mov fistl mov push pushl pop pushf mov lea mov aas xchg les mov cmp pop sar pop enter sbb fistpll iret mov fs iret or cld pop (bad) (bad) mov insl (bad) pop xchg sahf cmp mov jg add mov mov ret nop cwtl aam push aam (bad) (bad) (bad) push sti cld mov and jge dec sbb aaa repz movsb fdivp add clc add leave and (bad) call stos aam cld xchg test mov cmpsl xchg xor mov (bad) in pop rcrl dec lods cmc jp into enter lock shl loope mov jmp jo push fcoml adc mov cld mov arpl push leave adc sti dec sub les in cmp or (bad) push mov loopne push ret shl pop push or (bad) xchg lock in adc idiv in adc adc les sti out fdiv adc lcall int3 dec fcmovnu xchg cmp vmovupd push fwait sar call mov or mov and xchg pushf jg rdmsr sahf sbb mov xchg enter mov mov nop das vmread arpl lods push cmpsb fs sbb push sahf xchg es fsub stc repz and xchg mov or out cmc das sti mov faddl and xor pop adc (bad) jmp push add and mov lods and fldenv pusha loope rcr sub xchg jl add pusha rol xor popf xchg cmp inc add fcompl cltd (bad) jecxz and dec mov out jge insb decl int3 ret data16 jg add es dec js arpl inc dec xor ret jmp mov dec jge mov xchg xor push cld push out loope (bad) lret push mov or adc or dec (bad) lcall fwait add mov push mov mov (bad) lcall arpl inc dec fs icebp mov sub inc adc pop jle jb orl push in adc xchg or or jle xchg aaa cmp sbb jg fildll in xchg pop lret repnz sahf add ret enter fisttp call or adc stos loopne scas xchg test iret mov push (bad) aas push shlb lea cwtl mov sub std (bad) (bad) incl pushf sub rcll pop or popf or enter jl fs or sub jg dec sub jmp sahf pop (bad) (bad) (bad) aas push sbb xor add or mov repz (bad) incl dec lcall dec pop arpl out xchg jns or ret (bad) incl push sbb arpl pusha jb test cwtl mov pushf push (bad) (bad) mov mov adc test mov lea sahf movsb pop lods mov in adc ja andb call push loop xchg maskmovq mull adc decl jmp ret push test shll popf call mov (bad) daa pop and lcall push and mov xchg (bad) xor js enter pop and cwtl scas jb ficompl push cld mov mov jl mov in aas fdivr mov loopne jbe push add popa hlt sbb xlat call data16 ret dec in jo fist test dec (bad) incl bound add cltd jne push (bad) sbb inc fmuls xchg sbb (bad) (bad) (bad) (bad) (bad) jmp mov add mov mov push inc mov add in xchg pop incl ljmp mov test in cltd adc (bad) (bad) (bad) push (bad) mov lds loopne arpl ficom jmp lock arpl std and (bad) faddp mov aam mov mov cwtl lods popa dec fdivr mov in insl pusha cs imul (bad) (bad) call cwtl xchg push xchg mov popf xor (bad) pop into push fsubrl inc cmp ss shl mov xchg (bad) (bad) jg scas test scas mov dec lea mov push cs and sar jmp clc popf jl xchg stos fs mov mov add inc add mov sbbl lods add jecxz (bad) (bad) sti aam mov mov xchg mov adc mov mov mov mov adc mov (bad) decl outsb (bad) out js mov or arpl (bad) xchg mov addr16 push jne (bad) mov jg pop mov pop out dec loope rcr loop fs mov (bad) (bad) pushl mov rolb mov pop mov inc pop fcomps (bad) dec mov jns xor xor scas push fwait lds outsb fisubl mov dec test (bad) jg cmpsl sar xchg fidivl inc testb outsb mov add lock add mov inc sbb (bad) incl (bad) stc mov mov shrl inc add xor sar pushl xor pop push lcall call jo cs (bad) mov ficoml aas mov lea rcrl das sbb inc (bad) (bad) (bad) pushl iret fisttpl orl push rol dec pop mov dec mov ja jae sbb inc cld sbb sub push call aas test inc (bad) jle sbb ret ficom mov xor into sub (bad) mov aam or mov lods adc mov mov fisttpl adc inc pop out ljmp jge push mov int3 (bad) sar (bad) call add into sti add add sub mov in lret fnsave adc mov jecxz pop insb add (bad) add loope ret fildl fstpt add mov mov popf mov das leave ret jb insl lahf mov jno (bad) (bad) jp ljmp mov or add push xchg xchg es mov xor mov (bad) lods sbb push int3 mov popf (bad) inc sbb push sbb push rcrb ljmp jp push popf test (bad) fcomip xor push cwtl jo in arpl push cmp or mov mov (bad) (bad) call dec in adc lea mov mov cld pop fdivs loope jmp adc (bad) jg hlt loopne cmova sub add iret or dec push (bad) call ljmp (bad) sub js lcall test dec push xchg incl sbbl jae jmp mov push mov lods jne push cmp push xchg mov jo cmp les (bad) cmp sbb mov iret xchg outsl cli (bad) lods cld push imul add xor push push (bad) xchg shr adc mov mov xchg mov ljmp sub cmc decl (bad) mov cmpsb cmp or stc jns std in sub add cmpsl fsubs xor icebp aad sbb push xchg into mul test nop dec xor or (bad) in (bad) mov pop adc aam push jecxz (bad) jg cld addr16 outsl or xor shll push ss (bad) (bad) pushl inc lcall mov nop arpl jge dec scas mov (bad) incl fdivl (bad) aam lea sub (bad) (bad) push mov jg xlat adc (bad) xchg jno lds mov mov or mov adc (bad) aas stc shrl gs xlat dec in mov iret push xor lock mov mov cmp adc arpl cmp movsb push push or jmp es (bad) ljmp enter and jg lret cld pop pop cld mov adc mov jp mov pushl jno cltd out adc fcoml xchg jmp out (bad) mov push jno std pop pop ds (bad) (bad) (bad) decl das jae andl pop xchg popa aam pop pop aas int fst je andb (bad) ja (bad) pusha mov or sar and add cwtl mov xchg pop (bad) aas jno fmul adc (bad) shl inc loopne (bad) (bad) (bad) sti pop rol mov imul hlt mov jg orl add movsb pop sub xor ljmp xsha1 cmpsb int stos outsb cld xchg cmp dec inc fisub inc in idiv and and and mov pop mov inc ljmp fdivl push ja add (bad) jg mov sbb test (bad) lcall loope idiv add jb mov mov and fidivrl or (bad) (bad) mov cmp mov sub iret pop (bad) xor inc sub icebp jp xlat fldcw repz es (bad) (bad) ljmp push dec adc into pushf icebp or je or (bad) sbb (bad) call add jns xchg (bad) int adc mov xor std nop (bad) (bad) jmp mulb mov fmull adc sub jg (bad) (bad) (bad) jg jns (bad) sarb bound (bad) ss lret js nop dec cs incl clc adc push lret lahf in orl push jmp add pop int mov in pop test or (bad) (bad) (bad) out or push xchg lahf inc iret jno adc out in mov xor enter mov mov cmc push call or mov add call iret inc add push push push mov cmpl jne out subb mov push mov jg xor insl fnsave shld aad mov sti add cli (bad) (bad) (bad) (bad) jge pop in mov mov push (bad) int3 mov cmp fs cltd add scas daa jge cli mov push incl jle push mov pop insb sti aas xor and (bad) jg test mov lods aad movsl cmc aam xchg xchg and (bad) cmc mov loop inc xchg fdivrl xchg cmpsl cld add xchg mov and push fcoml xchg pushfw and ret dec jnp add or out pop adc (bad) incl pushf movsl adcl subl outsb imul (bad) cmp xchg nop inc (bad) movsb cmp ljmp call or fmull insl pop cmpsl lret mov test lods outsb leave add aas sbb lret cmc pop sub (bad) decl pop and xchg lret sub (bad) mov sub rcr repz out dec jbe cmpsl rolb clc mov pop add aad out mov jg jmp pop lods popf mov adc stos lods stc outsb testl aad fild sar (bad) decl test pop cli fcompl sbb inc sub insb mov jg jmp sbb jne cwtd stos sbb fisttp push out dec mov inc jmp and inc mov hlt fildll mov inc test inc cmp (bad) mov (bad) popa lods cmp xor mov scas jecxz or xor mov mov jno fwait (bad) jbe add (bad) ljmp inc cmpsl xchg mov enter jp or je cmp xor sti shrb frndint sbb sub mov mov (bad) lret in (bad) ljmp push fldt jo fidiv stos divb xchg mov mov loop jmp pop jmp mov xlat and std ret sub fcmovnbe dec decb mov (bad) pop jge inc cld decl clc mov mov ja mov jo cmp (bad) jg cmp in add (bad) add shr popf dec cmp xor jne jmp (bad) (bad) mov loope shll dec and xchg dec pop push pop sbb pop out loop mov (bad) call sarl or push sub jmp add dec xorl add aas outsb loope sbb icebp data16 cs (bad) frstor cwtl fcmovb insb mov jge nop (bad) (bad) ljmp fldl lock adc imul ret mov adc test jb fwait jg cld inc sbb clc fisubr stc test icebp lahf cltd jae cmc adc jl das dec add aam push jge sbb roll cmp dec (bad) mov xor test das jl clc or nop adc inc inc mov (bad) (bad) pusha mov add push sbb pop mov (bad) xor (bad) (bad) pushl in sub sbb ljmp incl call mov mov lret sbb and ficoml test lcall jl add or xchg aaa adc rcll (bad) (bad) (bad) inc pop pop fisubl adc dec sub sub mov fstp jnp or lret popf cmp mov in mov insl (bad) cmp lret andl ret cmp ja aam mov pop lds xchg scas adc cmc ljmp sub push in sbb xor (bad) loope dec jg add cmpsb add shlb aaa popf fcoml aas mov pushl mov fwait lods iret jmp mov or push (bad) sub jge icebp pop and in xchg fdivrl arpl ret jmp aaa cld or push sub mov add cli pop (bad) xchg lock cvtps2pi dec test xchg cmp cmp aas cmpsb mov fs jno add outsl (bad) mov jle mov cmp mov enter cli pop mov mov fwait cwtl fdivr (bad) cmc ret movsl aaa gs inc adc xchg test push (bad) pushl test std or xlat xchg fistpl imul jae in mov (bad) loop iret sub jle (bad) xor hlt incl cwtl sbb mov gs push sbb jle mov xchg xor loope push imul subb jg (bad) or pop jge xor dec insl and mov (bad) jmp cwtl add hlt das cs add pop scas lea addr16 cmpl (bad) (bad) faddp scas scas mov jmp sbb (bad) pop cmc loopne lock ljmp sbb xor or xchg xor pusha imul (bad) (bad) cmp addl and cltd add ss jo cld cwtl (bad) (bad) incl test ffree stos mov inc pushf cli or and mov hlt lcall pop pop test incl fucomp ret arpl (bad) dec add incl jno push xchg inc sbb cwtl outsb pop fsubrs ret push fprem (bad) (bad) jmp sbb mov test out and mov add in setnp incl and xor std mov jmp stos (bad) decl out mov cltd mov (bad) call arpl mulb jmp sar mov xchg jp loop add testb cli jae (bad) (bad) ljmp push punpckldq sbb mov cmpsl popf test stos hlt sub jle fildll ds test movsb stos xor out incl ds mov adc and cs xor enter pop ja jns (bad) movl (bad) popf or loopne dec cwtl repnz loope daa sbb mov (bad) in ret push arpl add nop push call lcall ret fdivr mov pop fsubrs je imul fadd les int3 jg shrb and jmp lret clc decl fstpl or ret call div pop dec fstpt sub jecxz test xor push mov imul and (bad) push div (bad) inc mov or sahf repnz fsubl ds or movsb xor push lahf sbb inc (bad) (bad) inc sti mov pop xchg pop out xchg xchg outsl pop jo xchg inc jg clc (bad) cwtl adc cli (bad) pushl rorb (bad) mov out rorb xor cli daa dec fwait push xacquire clc add add jl mov ss popf das push andl pop (bad) push pop hlt cmp cmpsl in (bad) (bad) (bad) jle xchg pop sub stos pop outsb dec into sti int out push and add or jg and aas mov gs dec xorb rcr pop add decl cli xor sbb push insb pop xchg xchg add push sbb jmp (bad) pushl sub cmp jnp (bad) (bad) jmp or lods les mov arpl dec or pushf or (bad) mov loope add xchg add mov repz outsb sbb aam inc loopne loope stc outsl flds lahf scas punpckldq cli mov dec aam or mov lods cmp (bad) (bad) pushl jns mov and inc (bad) mov femms pusha mov mov pop push fwait cmpsl mov pop fdiv imul rclb hlt pushl leave push push lock sarb dec mov repnz sbb or xchg add incl xor rcrb stos mov (bad) (bad) pushl shl xchg outsb pushf dec adc inc call sbb data16 pop pusha call movsb rorl (bad) call adc inc aam xor xor jecxz icebp cmpsl mov mov les bound ja and add mov bt pushl pusha adc mov mov cmpl pushl dec test adc out pop inc or (bad) (bad) fisttp dec xchg push andb loope adc std or int3 inc mov test or std cs aaa mov or pop hlt lcall mov and cmp mov shr aad mov (bad) dec xor xchg mov mov sbb lahf or icebp stos inc jo aaa xchg cli adc out popf sbb sar push cld pushl btc fidivl jle or pop mov mov cmp fistl out int3 mov cld cmp clc mov loope (bad) mov xor jp test ret stos jmp sbb loop cs push (bad) mov xor cs incl out rolb lahf xchg mov sti mov inc (bad) (bad) lcall loop in lock adc mov mov mov jecxz lcall ror mov (bad) sahf sbb sub inc (bad) pushl ljmp mov out in in sub lods push addr16 (bad) (bad) jmp mov mov cld mov fstl cmp mov out movsb ds adc and mov (bad) (bad) call mov out sub out scas and fs (bad) (bad) pushl sbb nop ljmp mov fwait push inc scas xchg jge scas popf test mov pop les pop loop adc ja cmpsl mov lods cs sarl (bad) (bad) fild xchg nop lods mov lcall into mov pop jns or stos fdivr pop and rcrb jbe mov loopne insl add nop cltd in les cmp (bad) mov decl dec jmp pop cmp insl pop sbb jnp or inc lahf pop stos mov xchg fdivr (bad) jmp or mov xchg mov adc mov sub jmp inc nop cmc dec aad ljmp arpl fdivl ret (bad) aas add test pop inc repnz sub push sub (bad) (bad) ljmp dec ljmp fs (bad) and in mov pop sub cld rdtsc sbb int (bad) (bad) mov xchg mov cmp mov push pop jg pusha push (bad) add mov test inc and pop stos pop sbb movsb mov call cli mov orl std or shrd push (bad) push xor outsl js cmc mov and mov lods stos inc pop aam lret mov fxch (bad) insb add arpl clc jae mov jge cltd xlat leave add gs inc enter lds lock (bad) (bad) jg pop and mov push test xchg fsubr sti push jecxz jle push adc les (bad) (bad) (bad) jg test cld jecxz insl repz cmpsb pop mov fdivrl jb stos mov (bad) fldt sbb mov call shr inc add (bad) fldcw push mov sti in pop fdivp in (bad) in pop push inc (bad) fsts data16 push rolb lds test sub jmp add xchg test inc adc out mov pop cmp test (bad) (bad) incl xor popf lods out add in std fisub mov and test sahf aam sahf (bad) jg (bad) fnstcw jb (bad) sbb stos push inc (bad) push data16 (bad) (bad) call insb aam adc xchg fsubrl in lret mov cmc inc mov aam jmp lcall cli test dec or inc cli xor fwait dec lcall jae ja push pop sti mov push clc (bad) jmp xor push inc mov scas sbb lcall inc hlt pushl outsl xor lret bound add jo bswap push rcl mov jp mov (bad) call clc pop add test add adc into inc jbe test (bad) (bad) (bad) mov (bad) in pop in mov (bad) hlt enter out push fmul idivl aaa test pop add enter ljmp test pop jg aam movsb popf out stc xlat jae out jne ljmp cmp ficom lock mov ja sbb in fistpl (bad) jmp clc adc mov aaa fs imul mov test lret in mov sbb (bad) (bad) std ret jmp rol mov (bad) (bad) (bad) jmp xor sub fidivr inc jmp xchg divl jno mov fs fldt xchg aas dec les (bad) xchg xlat int3 imul push das sub clc jmp mov mov jno add enter cmpsl cmp hlt xchg mov popa mulb (bad) xor pop sub inc adc adc inc mov pop jmp decl inc ljmp xchg pop adc xor arpl pushf sub pushl jp pcmpeqw cmp adc jecxz lcall (bad) pop mov xor dec push push xor (bad) fwait mov (bad) pusha inc mov push (bad) pop test mov into adc inc aad int3 rcll int3 out adc or or xor jmp cmpsb sub test adc clc push or (bad) (bad) mov mov es out fs mov movsb inc push clc pop dec call ret inc mov mov and (bad) (bad) mov lcall aad test and sub rcrb pushf pop or xchg lcall pop lcall aas movsb das pop sarl andl mov mov out dec hlt std xchg jl insb test mov rolb ljmp push xchg jmp mov push pop xchg or dec push fs incl or push inc popa and mov (bad) jbe,pt test xlat out loopne out rcrl lret push push (bad) lcall cmpsb jle push xchg push xchg jge rcr sahf sub (bad) (bad) pushl xor mov jns push (bad) icebp cwtl push mov (bad) mov (bad) call ret insl sub jg dec jp lods sub mov xchg cli and inc inc sub jb fstpl shl dec in outsl inc pushf inc les icebp sti (bad) scas jb cwtl adc add pop cld adc jl clc lcall idiv add cmc pop lods push aas or imul (bad) push (bad) cltd rol mov jge push pop clc cmp mov mov push lods (bad) cmp or lods push or inc jns enter inc test jecxz or jne int (bad) dec leave outsb jge mov cmpsl lahf xchg clc and jg sbb pushl adc lock daa pop pop jge (bad) (bad) (bad) mov in add mov fisubl xlat cmp jle ds jmp lcall mov call lcall sub xor sub mov cmp imul stos clc (bad) fildll and mov shl xchg popa push xchg mov sub xor jg hlt jg xchg push aad nop cmc and es cmpsb adc ljmp cli jae dec popa pop add bound outsl (bad) (bad) (bad) inc and adc xor inc jl xchg (bad) rcrb mov cmp jp insl dec (bad) imul cwtl gs push xchg repnz loopne cmp xor mov inc (bad) (bad) lcall add in sti int push sub adc sbb test fisubl in push or push sub (bad) stc test and testl or jno xor adcl sub push adc sahf aas dec in lcall sbb mov pushf out dec cltd or movsl shr std repnz shr sbb push adc xchg and add mov push in (bad) sub mov adc pushl adc mov and icebp or (bad) jmp and mov and test push mov call fistpl adc mov mov (bad) dec mov pop stc stc jns fsubrs stos mov je out js xchg cli call insb mov xor outsb xor fcmovnbe (bad) (bad) pushl subb and mov (bad) sti (bad) jb mov adc aas (bad) decl (bad) stos divb xchg mov lahf sbb sarl and sarl cmpsb outsl jg lock daa aad ljmp das loop (bad) decl pop cmp in imul stc (bad) ror inc mov data16 inc aaa mov xchg movsl fucomip xchg cs in push inc daa push xor cmp ror lea sti fmull lcall aas idivl (bad) mov jg jge aaa daa xor das and (bad) jbe mov (bad) jle fsts test je mov push call push bound movsb jmp fidiv cmpsl (bad) shrb mov mov xchg mov (bad) pop decb dec jbe mov fsubrp push test jg cmpsb in jle pop rcrl jecxz lds jo jno test aam call sahf jmp push xchg ds jb test imul pop dec nop inc jns sub xchg sub lods add insl adc outsl icebp jg iret lods fxtract fbld outsl outsb ficom je (bad) out xchg (bad) xchg mov call jp push movsb and into mov lock fist insb push daa xchg jg rol fs cmpsb xchg mov push mov loop,pn (bad) cmc mov add push std mov aad xor pop xor xchg aam and fsqrt xchg daa pop cwtl (bad) notb movsb push push xorl add lret imul enter lea sti decl mov sub xchg shll shrl js outsb xor sbb mov repz jne xchg jae ljmp add outsl ror lret fidivl xchg jge push and in outsl ror pop or (bad) inc cmp (bad) out (bad) je lea adc xor int outsb mov adc mov test out (bad) fdivs jg adc mov clc icebp pusha ficom push xchg pop dec cld ret imul rorl mov sbb push or inc testl sbb adc add mov test add daa add add mov xchg sub fcmovnu (bad) add or pop mov fldcw std jo add fneni(8087 insb adcl sbb sbb fdivl cmp outsl inc add xor mov mull and adc sbb outsl or adc addr16 push push xchg (bad) or add aas das das inc add push rcr jecxz add jo inc adc lock pop add cmp loopne iret pop fwait sub sub pop dec rcrb (bad) dec dec arpl push dec gs push rcrb fsubrl int popa adc push gs adc and and js leave pop lret mov push jmp out push sarb sbb add outsb fs sbb cs push lcall inc imul or adc sbb add ret dec jbe add xchg mov xor mov outsb insb les inc and mov jbe xchg sbb inc cmp test imul mov inc gs jae and xchg add aaa fadds sbb push xor and sub jno (bad) pop lea push xor lcall cmp outsb adc insb push jb addr16 cs pop xor inc inc and addb pusha int sti leave pop dec insl cmpsb mov adc imul inc jp cmp and mov pop gs inc jbe sti pop (bad) ds dec scas icebp dec fs or sub and push scas dec shrb inc imul sbb imul sbb mov adc mov je jae sub and xchg (bad) out sub rorl loope ret sbb push loopne cwtl sbb ja push stos out pop daa test inc push stos add add inc jbe dec mov pop cmc mov cmpsl sbbl sub mov repz scas cmpsl pop xchg popa mov push rcrl sub or and mov mov sub push gs inc jecxz outsl fldl je adc sub jae jmp popa rolb loope movsb stos dec stos sub dec rcrl add add cli outsb inc jnp daa sbbl test (bad) pop js push popl add add sbb mov je ja adc imul (bad) cmp es pop sub in inc adc out sbb and add jbe and in xlat cltd fisub pop or and outsl inc jb and add sub mov jecxz outsl mov add and outsl fisubrl stos add stos sub add xchg test add and popa sub xor and or fwait adc lods mov and xchg sub jb sbb inc add or jecxz das out (bad) je and outsl cmp into call and push inc push or mov (bad) pop fmulp arpl insb lahf sbb fldcw ret je test jnp sbb lods sbb mull inc or push xor xor lahf xor adc gs and xor test mov pop mov mov je sbb insl sbb jp push ja cld js mov inc cmovne mov je adc adc push cmp pop imul and nop sbb loopne js jbe mov and rorl add inc push add and (bad) stos sub cltd xor (bad) test (bad) adc pusha xchg shlb fiadd mov aad dec in fs xchg add mov adc cmp and daa pusha (bad) lea ficomp fcmovne inc outsl pop outsl sbb mov lret rorl or add mov aas sbb sbb push sbb sub jne and in frstor push lret jb and fistpl xchg or add and lods pop (bad) addl sub jnp push jo push cmp pop (bad) mov arpl adc data16 pop push dec data16 sub mov inc into fs dec adc sahf push lcall (bad) cwtl or sbb push cmovl out (bad) (bad) mov loop sbb dec and and jle adc push out jmp add popa (bad) adc cmpsl add outsb cmp mov push jo add add jmp mov fmul daa dec adc sbb outsb lea sahf insl mov arpl sub add sbb je mov pmulhuw mov sbb push mov add rorb pop mov pusha cmpsl mov in or enter fdivrl popa pop wrmsr fdivs enter sbb jo sbb ss (bad) or dec out movsl insb add outsl ljmp (bad) in arpl (bad) rolb push (bad) cmp add or fistl lock and jo ret imul xor stos or ret cmpsl shrl fldenv sub aas inc pop sbb fistl push fs jo or push and fmull jne and push xchg add data16 adc sbb cmpsb mov adc add int mov sub jae imul add sub insb das insb pop mov inc adc and fstps dec imul and fs insb adc neg and orb inc adc mov jbe in sbb imul repz and fdivs jbe xorl imul repz and data16 xchg cwtl pusha arpl ficompl pop test jno inc icebp add mov xchg clc outsl push and and cmp lock and sbb icebp and inc cs in jne push popa inc in es inc dec inc sbb xor mov sbb and pop mov fldenv (bad) popa imul jmp inc or mov and push test js test imul mov pop sarl push mov movsl sbb mov xchg and push jne push lret inc cmp lret inc sub add sbb xchg sub xchg popa pop inc add data16 sbb add fs sahf jae fmulp test in loopne sbb dec pop adc mov xor jne fs mov sbb add xchg stos shrl sbb fcoms inc or and push sbb dec sti push loope pop xchg and jl cmp cmpsl jge adc and or ds icebp test push dec movsl popa add mov insb repz popf lock pop push outsb adcl dec and insb data16 pop and sub or inc fs fmull pusha rclb iret cmp or cs and sbb jne or mov dec and mov imul (bad) xor push push call push jnp fsubrs inc lcall or add sub insl outsb and rclb push push jbe fs les outsl mov add sbb idivb xchg sbb mov add insb and jp add fsubl ds mov dec (bad) pusha mov inc inc scas and xlat add loopne pop and pusha inc inc push push jo (bad) pusha in mov push dec mov dec in cmpsb cld and push aas cs add jbe add push dec and je,pn jae cmpb jb dec nop push jnp jns sahf push dec sbbb push cmpsb je dec iret mov ja jb pop add (bad) out push pop push ss sub xlat sbb dec xchg and add add incl pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp mov pop add and 