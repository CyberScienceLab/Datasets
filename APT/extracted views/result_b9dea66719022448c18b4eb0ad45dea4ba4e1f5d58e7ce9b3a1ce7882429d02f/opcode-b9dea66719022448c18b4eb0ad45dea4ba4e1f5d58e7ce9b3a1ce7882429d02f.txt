xchg pcmpgtd push xor sub push data16 int3 or bound data16 pcmpgtd pcmpgtd ret or je or data16 add data16 lahf or data16 pcmpgtd loopne data16 xchg pcmpgtd push ljmpw fwait or test mov or xchg pcmpgtd inc push data16 mov pcmpgtd jne pop (bad) or mov sub data16 mov pcmpgtd add dec insb push add outsb add test data16 or data16 data16 dec push retw data16 ja mov data16 and dec mov pcmpgtd insb push in out push xchg sbb inc xchg pcmpgtd fisttpll data16 imul scas lahf or add add add add add add add xchg dec add xchg dec add add add add and test add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add outsl leave sti jo orl or add add add outsl je outsb imul add add add add add in inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb js dec add add add cmp add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb add add add cmp add add add add add sbb add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb push add add ss add add add add fsubl inc add add add add sbb inc add add add pop inc add add add inc add add add inc add add add push inc add add add add and inc add add add sbb add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add add add inc add inc add add add mov add add push add add add add add add xor add or or add add add xchg dec add lock add (bad) decl add add add add add add add add adc add inc add adc js add addl add mov add inc jns insl popa je cmp push imul add outsl je outsb imul add add popf inc mov pop out inc movsb inc inc int add add addb add add add add add inc add add add fwait mov sub ret sub xchg mov add add add xor add add push and add add in inc add add add xchg dec add (bad) (bad) incl add add inc add dec add add add ss add add add push inc add add add add add push inc add add add push inc add add add inc add add add push inc add add add push inc add dec add add add inc add sbb pop add add hlt sbb add (bad) (bad) incl add add add add push inc add sbb (bad) incl add add push inc add adc stos adc mov inc add add add sbb add add mov (bad) (bad) incl add add sbb or add sbb insb add add add add add add sbb add add add add add add add add add inc add add add add add add dec add add add mov aam inc add sbb add pop add add hlt sbb add (bad) (bad) incl add add add add outsl add (bad) incl sbb cmp add test add xor inc add sbb add add add dec pop inc add push inc add inc add add add add push inc add inc add add add add add sbb add add pusha xchg dec add dec add add or inc add mov add add add add test dec add nop dec add (bad) (bad) incl add add mov hlt dec scas sub insl or push add add add sbb test inc add add add add add add add add add push inc add (bad) (bad) lcall add pop sbb add add add incl add add add (bad) (bad) (bad) call add add add add add insb add incl add add add adc (bad) (bad) (bad) jmp inc add add add mov add add add inc add add add incl add addb add add jl inc add (bad) (bad) ljmp add add add dec add add add add add add add incl add addb add add or inc add (bad) (bad) ljmp add add add add add add add add (bad) incl add addb add add inc adc (bad) (bad) (bad) ljmp add add add add add add add add add incl add addb add add inc jne jne je outsb add add insb imul cmp push popa jae imul popa xor js jo imul outsb popa outsb outsb gs insb gs inc jns je arpl arpl fs add push insb outsl je outsb imul cmp inc mov lea add icebp lea sbb test popf inc mov pop out inc movsb inc inc int add fistp and inc ret daa xchg cmp xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add or inc add add add add add add add inc add mov add insb add dec lods xor or stos add xchg push imul or inc add rcll nop das mov out out mov repz sahf mov mov fwait mov sub ret sub xchg mov aaa xor sub cmc or inc add add add jb gs xor add add adc gs outsl outsb jae insb gs jne jae jb outsb outsw add add clc sbb inc add add hlt mov add or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add push add add insb outsl arpl gs imul bound add add inc add add add add add add add mov or je jmp push mov call jmp add add add add gs xor add add add jae outsl insl inc jo add add inc add add or dec add or je jmp push mov call jmp add add add add je jo outsb inc insb imul push imul mov pop inc add add sbb add add add mov or je jmp push mov call jmp add add add add je jb outsl jb je inc insb popa jae add add clc sbb inc add add and dec add or je jmp push mov call jmp add add inc push dec inc dec xor cs dec dec add add adc add inc outsb jne push dec dec popa outsb addr16 addr16 add add test inc add add xor add add add mov or je jmp push mov call jmp add add add add je jne jb outsb je jb arpl jae add clc sbb inc add add cmp dec add or je jmp push mov call jmp add add add jne gs outsb jbe fs insb add gs insb insb push jae jb push jb imul arpl jns add add push and and add add dec mov add or je jmp push mov call jmp add add add add je gs jne je jae jb jb imul arpl jns add add add push mov add or je jmp push mov call jmp add add jbe popa dec bound gs fs data16 add xor add add add add add add add add add movsl push add add add add add add add add add add inc add add add je outsl add jns add add add add add mov inc add arpl imul add insb add jb add push add outsl add add add push inc inc ss dec dec add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa dec bound popa jb pop pop jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa push popa jb gs bound fs data16 add pop pop jbe popa push gs jns je insl inc jb outsl jb add add pop pop jbe popa dec xor popa jb add jbe popa dec popa je dec gs inc popa insb insb dec add pop pop jbe popa push bound outsb add jbe popa push popa jb jae dec add add jbe popa inc jb gs bound add add jbe popa dec bound gs pop pop jbe popa push popa jb fs jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs je dec imul add add pop pop jbe popa inc outsb add add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa dec outsb push je inc add jbe popa inc jb gs je add add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa dec outsb push popa jb pop pop jbe popa push popa jb imul pop jbe popa dec xor jb add jbe popa inc jb gs popa jb add add jbe popa push je push popa jb outsl jbe add jbe popa push je dec outsl jbe add add pop pop jbe popa push je inc outsl jo add add or or dec xor add popf inc mov pop out inc movsb inc inc int add mov xchg mov inc mov lea add xor or stos add xchg addb add add add add addr16 je outsb add gs ja imul outsb add add inc add add (bad) (bad) (bad) jmp add popa ja imul outsb add cmp adc add or add add inc add incl daa add add push add bound jb add add add je outsl je add add incl add add dec xor add mov inc lods ret sub xchg mov rcll nop das mov dec lods xor or stos add xchg fsubrs add imul add add insb imul cmp or popa outsb fs ja jae add add inc add es or insb je add dec or add push dec or add add add add add add add add add add add add dec or fdivl daa xor sbb or pop sbb dec jns xchg popa sbb test xlat ja inc call bound mov sar rcl push dec addr16 out or cmpsb xchg jle inc xchg popa fisttpll imul add gs mov fwait mov test add jg xchg int ret (bad) and adc inc adc notl into mov cltd jne imul int3 push jbe mov add cmpsl sbb add fisttp loop jp push sahf mov adc pop loopne pop pop and stos les inc cmp arpl repz xor and out fcmovnu lahf dec cmp sbb ret daa bound int push jle int inc mov adc push mov sbb xchg mov sbb jbe fs dec cmp pusha xor das pop (bad) cltd xor cmpb pop mov pop push xchg or popa pushf pusha xchg aaa push mov xlat jae sbb jecxz mov or dec mov cwtl std push jg fwait and lea sub scas pop and insl pop mov inc sub les arpl out ret jmp mov xchg dec ror and (bad) cmp push and sar jno jge cmc imul and fdivrs xchg js push jle int3 in inc gs lret subl ja cmp out push fistp pushf and ret daa sbb das sbb bound inc mov adc push mov sbb xchg mov mov cld aam dec fs pusha inc lods pop cmp das pop dec iret cmp push pop mov pop push pop or xchg pushf pusha or push popa repnz xchg repz mov fdivl xchg cmpsl or mov mov mov cmp cli jg shlb mov lea scas and insl pop sahf cmpsb mov shl mov scas inc imul les arpl sbb out xchg mov jmp mov and xchg cmp lret (bad) (bad) mov cmc imul lcall add int3 js inc jle lret in push gs addl lds lahf or sub fbld dec cmp sbb das sbb push mov inc scas xor dec push ret cmpsb jno jmp cmp loope (bad) int3 sbb xchg insb test andb push ss push int3 ja fwait pop leave dec mov out mov jge,pt out les sbb jne mov ret add xchg mov dec inc out aad insl mov shlb pop sbb or int and jge jns imul (bad) repz gs jecxz mov mov aam inc jp adc loop and outsb fdivs sbb mov cmc ljmp inc pushf loopne mov pop fmulp clc pop fbstp jmp pop bound test mov xchg jae bound pop in add mov cmp jo popf je (bad) data16 xlat popa push dec cmpsb jno jmp cmp int3 cmp xchg jbe call push adcb push dec leave dec ja out pop mov mov rol aas ds out sub mov jne adc mov xor (bad) out daa cmp sarb mov mov test lods fimull iret and jge sarl jns (bad) repz iret fwait mov dec jecxz mov aam sub cmp loop and adc mov stos scas outsb sbb mov lock inc std loopne fcoml mov lret fistp push clc cltd and jmp nop bound xor pop in add mov or jo (bad) je in data16 scas xor mov cmpsb xchg int3 cmp xchg jbe call test andb ja insb jo xchg mov js je push jl fstps popf dec pmulhuw cmp (bad) xor (bad) xor loope pop and out stc lea (bad) pop lock loopne test fcmove leave cmp sub inc adc scas in out pusha icebp insb mov popf lods cltd fsubp repnz out subl shll mov hlt add sub das aad inc into mov sub lret cmp (bad) jnp or or cld xchg inc mov ljmp sbb inc aam jg mov cmpl ret (bad) jg add imul mov daa fsubl mov pop int3 dec mov sti mov into dec imulb push loope ret loop xchg pop or ror movsl pop jne xchg cmc in cmp mov movsb or push insb jo xchg mov push adc jl popf sahf pmulhuw (bad) dec mov fcmovnb (bad) jbe loope pop and and stc imul xlat loopne test fcmove jns mov sub std adc cli in out inc icebp insb scas jecxz pusha cltd fimul (bad) in adcl test mov dec mov lcallw testl lret cmp (bad) mov or or xchg bound xor xor aaa add fs mov cmpl ret test push mov jp dec es jge daa fsubl mov pop int3 addr16 or push out sti dec testb push xchg loope iret loop movsl pop jne (bad) cmc in pop adc xchg movsb or (bad) mov lahf jo fwait mov push adc je sarb repz pop (bad) dec cmovs cmp mov push loope push aaa ror jp inc cmp mov daa or lods test std adc (bad) movsb call cli sub in xor sbb xor adc test dec int out adc pminub xchg xchg lea repz imul popa dec push sbb sbb in scas pop dec cmp stos xor adc fwait ss and shlb stc push lret dec push pop popf test fcomps inc iret mov enter or mov (bad) push mov cld subl js insl ret sub mov jecxz cmpsl mov xchg out add lds and jmp jl aad push sub lods les cmpsl or xchg fisttpl cwtl or mov mov pop idiv shrb rcll push aaa add jp inc cmp mov jb sbb std adc (bad) movsb (bad) cltd loopne or call xor xor into push adc mov incb adc inc out bt xchg movsl lea repz imul ja and cmc sbb scas sbb stos xor (bad) negb sub mov fsubl push lret dec stc pop popf push xchg cmp hlt test fmul mov enter or mov lcall subl js insl ret sub mov pop mov add mov sub bnd jl and aad les mov jbe nop or test int3 es clc xchg adc pushf jle mov imulb icebp mov sti loope xchg aaa add inc push cmp int jb sbb or std movsb (bad) adc pop (bad) cli call push mov push or xor fcomps enter bound es ret push mov cmpsl inc cli ljmp xchg xor cmpsb fprem1 jno inc cmp pop or push jns icebp push lret push dec mov aad cld inc jg lock outsl sbb sub aas adc mov clc orb (bad) xchg dec fs test fldt add mov ret inc pop pop pop lret addr16 fwait hlt inc cwtl or loop scas dec iret (bad) std rorl lds (bad) aaa rol cmpxchg push shlb dec adc or pushf mov adc sub jecxz jl iret int3 mov fbstp lods sub sbb (bad) xor dec mov ja sbb adc popa je repnz lcall inc daa xchg xor out or mov push or push stos out fstpl insb in fmuls es push (bad) les mov inc stc adc xor mov cmc xchg outsb inc cmpsb subl push into jns pop push lret push dec mov aad pop inc jg lock cld sbb sub aas mov adcb sar xchg dec fs shl dec add test mov pop mov hlt inc addr16 fwait repz cwtl iret (bad) loop dec dec lds std aaa shlb jg and pushf dec inc adc sub ss jl iret int3 jecxz ffreep sub mov lods mov xlat leave push mov mov add and loopne mov loope add je and lcall xchg daa xchg int3 movsl inc sbb and (bad) out add sbb or cmp add xor fucomp fcomps xor daa (bad) dec loop shl int sbb add cmp pop pop sti cwtl movsl or int3 aam jns in xor fldl push jp mov loop cmp pusha mov sarl and js and pop clc scas pop push and dec jmp push cmp jp (bad) xor push add dec jb ljmp inc mov mov movsl jnp into outsb mov ficom cmp pop stos lret inc lock mov inc pop call sti popf je out lret mov (bad) mov ret mov movsb adc aad lahf pop in cmpsl mov lret mov js je ror in cld mov dec pusha dec fcompp bnd jae xchg xchg xor and mov sbb sbb mov cmp sbb dec popa sbb inc mov call cld jno ss shll aam push or repnz inc out jmp dec xchg jns dec and int inc push test seto notb sarb inc (bad) ret insl enter lods lret testl dec adc push call cmp jg cmp out daa push push fnstsw push adc mov xchg xor in es imul pop shll into pop pop sub imul stos int xor lea fist addr16 ja,pn ret jb xchg inc roll out mov test invlpg repnz mov mov dec fnstsw jbe aas cmp test and arpl cmp repz ret mov add jl push loopne cs sub fbstp or sbb jb xchg mov sub hlt in cmpl and sbb xlat scas (bad) in test js ja dec push mov nop mov xor popf jg jl ret mov shrl aaa fdivrl jl push (bad) sbb call into xchg jnp ds inc jmp push inc fisub ljmp push adc rcl dec mov adc adc jno cwtl call lods adc fcmovbe hlt arpl sahf std adc xchg stos pop cmpsl mov mov jbe xchg sbb xorl data16 push pop in fnstcw fsubp test jle test bound stc movsl insb outsl push xor sub cmp sub iret repnz adc lods inc jne nop pop sbb cmp stos cmp clc in xor js insl adc rcr jae inc adc or jb or mov std push subb jp mov insb add sbb pop lahf dec outsl in outsb loop cmpsb scas inc shr add les and cs mov imul inc cs std fstps iret rclb nop sbb push push addr16 scas jno xor cmp add and adc sub lods test xchg outsl dec fs jo data16 cld or je xchg xchg pop fcoml into inc cwtl inc leave mov psubusw push sbb stos movsl mov popa pop std fsubrp push test xlat aad loop cld jns pop add dec pushf add or sub subb aam les push sub aas mul fidiv xchg xor mov ds gs xor stos aam dec jno mov (bad) mov std pop flds (bad) jne sbb outsl decb jno pop ljmp add and xchg xchg jb popa sub jecxz std mov mov cmp jmp sub fisubrl (bad) pop addr16 lods push mov sub push out enter cmc sbb jg fdivrs mov lcall fimul xor lahf int3 mov cmp pop (bad) inc repz mov push in push cmp sarb mov dec scas (bad) hlt int3 inc inc pop push pop aas movsb por loopne daa dec inc (bad) xor popa xchg push stos js push push add dec xchg adc ljmp adc fcmovnbe imul or mov inc loop (bad) icebp int3 mov test push pop sbb mov popa pop fwait xchg out cmp in test int gs mov rorl lret pop inc or cmp xor fiadd dec push or shll scas sbb stos xor (bad) negb sub jno (bad) push lret push mov sahf pop xchg cmp mov lahf mov jne fcom mov test xlat or pop pop jae outsl push add subl mov jb mov and in jmp cmpsl mov aad inc sub shrl xor jl gs pop or or repz push sti in (bad) xchg pop push imul inc mov ret hlt add test pop mov fcmovnb pop adc stc lret out mov pop mov sub cwtl and and addr16 mov lds fadd stc mov std ja out gs movsl ljmp icebp cli (bad) pop cmp adc jae cmp arpl pusha jb jle cmp mov loope (bad) ficompl xchg and outsl sub dec mov cli mov int cmc push ret nop pop or ror movsb pop je xchg hlt jmp adc mov jmp mov add repnz push sub mov adc pop and pop cmc lock test sub pushf rcrb and (bad) jmp push or jge sub or or adc xor xchg mov mov test insb jbe lcall sub hlt roll fidivr in and enter pop mov mov pop adc sbbl xchg xor leave mov mov loope jg push cmp sub pop lock inc xchg outsb push sub bound and (bad) lret sub rolb add adc sbb mov mov sbb adc mov fs shl dec add jle inc mov mov pop fcomps hlt (bad) addr16 imul dec lds lret adc mov and mov dec sub jp rcrb or mov lods repz xchg cld insl divl inc add pop and sahf loope rclb pusha loopne cli sbb fwait and fisub aad xadd sub mov outsl inc inc add add icebp lea jae mov jne cmpsb lods jbe fucomi (bad) xor xor clc sbb (bad) cmp mov pop pop add insl stc mov mov gs fldl cmpsl inc mov imul outsb call rcrl sub insb mov cmpb fldt nop jno loop out push jg jp or lea xchg lret and enter fistpll mov push cmc cli mov push loopne push ss jns inc cmp mov jno sbb adc inc mov dec ds popf and ret pop lea cmpsl je adc ret jmp add sti inc dec push (bad) jbe sub push in aam shlb aaa push xlat cli lods sbb leave cld mov lock mov jae (bad) adc or scas in cmp arpl (bad) andb out or cmp mov push sub mov dec in dec pop xchg push es stos cmp xchg int ret xor into orl pop push add insl jle xlat pop (bad) mov mov cltd sbb xor mov lcall popa (bad) mov fild push pop inc and cmp mov ja fidivl mov imul pop scas push loopne mov rcr test lock imul aad xor js push testb sub xor stc inc adc cli cs lea cmp sbb sbb and inc xchg inc mov jmp fildl add cmp data16 xlat mov mov inc ljmp dec xchg jl dec sub ret and xchg sub push xchg aad dec fld jo adc xchg imul sub mov jmp mov (bad) pop aas pop jmp loopne fwait mov jbe adc and pop push scas std push (bad) bound dec mov (bad) dec icebp jnp dec leave insb mov add ffree mov lock cmpxchg mov out test add jae mov (bad) mov and pushf push mov adc sbb adc pop jae icebp in cltd xchg bound cmpsl push inc xchg xor das pop jl ret or lahf or cmp or imul and je or scas xor push or jb cs imul xchg int cmp mov call pop jp push adc (bad) out mov cwtl sbb mov or mov std movb fistpll fwait jg pop test jmp dec insb arpl mov sbb inc dec inc in lret pop in adc mov in xchg and pop push adc dec ret inc lods cmp jl pop mov repz mov inc pusha mov (bad) jp popl jb test push pop pop (bad) je arpl pop xchg lock ret mov stos dec dec xchg stc iret mov xor mov add adc mov dec loope cmc adcl xor pop (bad) mov test insb pop or imull sub (bad) jae sti fstpl mov int3 fadd push adc notb mul jbe inc push out mov jne or push inc add mov and aad jp outsl or and mov in test add and xor fistpl pop outsb mov mov fsubl rcl sbb mov imul addl mov dec aaa popf cmp aas pop cwtl sub jl adc xchg mov lods mov mov mov jo mov mov (bad) xchg add (bad) and (bad) repz fistl add icebp addr16 neg jmp xor dec jne dec aaa int loope bound adc cli negl pop cmp xlat cltd push inc jno sub pop dec dec mov cld mov mov es dec loope shl (bad) bound or ror test test adc mov js sub jns mov push lahf cmp push in jl and ja push xor and imull aas mov and pop xor cmpsl mov push leave jg std push movsl aas mov mov movsb jp int loop frstor aaa mov stos push lods ja out mov mov inc pop out (bad) inc cli pushf jge out and jae cmp push rolb push jle negb pop xchg cmpsl arpl imul inc lods out jne lods cmp (bad) mov sarb mov ret mov loopne int sarl out idivb xchg mov lods mov mov (bad) mov xchg mov popf mov into mov int sahf mov lods mov loope lods mov xchg mov repnz lods mov fdivrl xchg mov jecxz mov loope cld mov xchg scas mov repz fnstcw sarb scas mov popf mov aad lds test sarb mov into mov cmpb mov fnstcw clc mov sarl mov lock les stc mov lret mov sarb xchg mov clc mov lock in mov ret mov in xchg mov test sahf mov test idivl lock sti mov scas mov out mov cmpl mov lahf mov (bad) mov iret mov xchg mov test lret mov sti mov std mov loop loope cmpb mov lds cld mov (bad) mov mov in nop mov lcall mov lea cwtl mov xchg mov fdivrl test out mov int sarl out idivb xchg mov lods mov mov (bad) mov xchg mov popf mov into mov int sahf mov lods mov loope lods mov xchg mov repnz lods mov fdivrl xchg mov jecxz mov loope cld mov xchg scas mov repz fnstcw sarb scas mov popf mov aad lds test sarb mov into mov cmpb mov fnstcw clc mov sarl mov lock les stc mov lret mov sarb xchg mov clc mov lock in mov ret mov in xchg mov test sahf mov test idivl lock sti mov scas mov out mov cmpl mov lahf mov (bad) mov iret mov xchg mov test lret mov sti mov std mov loop loope cmpb mov lds cld mov (bad) mov mov in nop mov lcall mov lea cwtl mov xchg mov fdivrl test out mov int sarl out idivb xchg mov lods mov mov (bad) mov xchg mov popf mov into mov int sahf mov lods mov loope lods mov xchg mov repnz lods mov fdivrl xchg mov jecxz mov loope cld mov xchg scas mov repz fnstcw sarb scas mov popf mov aad lds test sarb mov into mov cmpb mov fnstcw clc mov sarl mov lock les stc mov lret mov sarb xchg mov clc mov lock in mov ret mov in xchg mov test sahf mov test idivl lock sti mov scas mov out mov cmpl mov lahf mov (bad) mov iret mov xchg mov test lret mov sti mov std mov loop loope cmpb mov lds cld mov (bad) mov mov in nop mov lcall mov lea cwtl mov xchg mov fdivrl test out mov int sarl out idivb xchg mov call mov fidivr sarb lea std mov idivl std mov out mov jmp mov sarl lock fnstcw xchg mov xchg mov fdivrl fwait mov ret mov ljmp mov lock mov in lods mov clc mov std mov sarb mov cli mov in (bad) mov mov repz out mov out repz popf mov ret mov ret mov fnstsw hlt mov lret mov fistpll xchg xchg mov cmc mov cli mov xchg mov sarl sarl mov sarl mov scas mov xchg mov jmp test xchg mov lcall mov loop (bad) mov aad out xchg mov ljmp mov lret mov xchg mov xchg mov lcall mov out mov loopne (bad) mov lds jmp mov in mov (bad) mov mov lret mov fidivr (bad) mov cmpl xchg in mov popf mov ljmp mov xchg mov fidivr sarb lea std mov idivl std mov out mov jmp mov sarl lock fnstcw xchg mov xchg mov fdivrl fwait mov ret mov ljmp mov lock mov in lods mov clc mov std mov sarb mov cli mov in (bad) mov mov repz out mov out repz popf mov ret mov ret mov fnstsw hlt mov lret mov fistpll xchg xchg mov cmc mov cli mov xchg mov sarl sarl mov sarl mov scas mov xchg mov jmp test xchg mov lcall mov loop (bad) mov aad out xchg mov ljmp mov lret mov xchg mov xchg mov lcall mov out mov loopne (bad) mov lds jmp mov in mov (bad) mov mov lret mov fidivr (bad) mov cmpl xchg in mov popf mov ljmp mov xchg mov fidivr sarb lea std mov idivl std mov out mov jmp mov sarl lock fnstcw xchg mov xchg mov fdivrl fwait mov ret mov ljmp mov lock mov in lods mov clc mov std mov sarb mov cli mov in (bad) mov mov repz out mov out repz popf mov ret mov ret mov fnstsw hlt mov lret mov fistpll xchg xchg mov cmc mov cli mov xchg mov sarl sarl mov sarl mov scas mov xchg mov jmp test xchg mov lcall mov loop (bad) mov aad out xchg mov ljmp mov lret mov xchg mov xchg mov lcall mov out mov loopne (bad) mov lds jmp mov in mov (bad) mov mov lret mov fidivr (bad) mov cmpl xchg in mov popf mov ljmp mov xchg mov fidivr sarb lea std mov idivl std mov out mov jmp mov sarl lock fnstcw xchg mov xchg mov fdivrl int fistpll cwtl mov xchg mov xchg mov xchg (bad) mov (bad) mov lea icebp mov aam xchg mov iret mov xchg mov cmpl mov xchg loop cli mov cmpb mov xlat mov xlat mov sarl mov fistpll sarl fwait mov iret mov mov (bad) mov enter nop mov hlt mov xchg mov scas mov cltd mov lock stc mov leave mov call mov scas mov in mov idivb out mov int xchg mov ret mov idivb (bad) mov xchg mov jecxz scas mov lds loop into mov fidivrl fnstcw (bad) mov xchg mov lock cmpb mov sarl mov mov xchg mov mov in mov sahf mov xchg mov (bad) mov jmp std mov fnstcw iret mov loop sarb nop mov in mov out mov cld mov lods mov fnstsw out ret mov std mov mov cld mov scas mov hlt mov fistpll cwtl mov xchg mov xchg mov xchg (bad) mov (bad) mov lea icebp mov aam xchg mov iret mov xchg mov cmpl mov xchg loop cli mov cmpb mov xlat mov xlat mov sarl mov fistpll sarl fwait mov iret mov mov (bad) mov enter nop mov hlt mov xchg mov scas mov cltd mov lock stc mov leave mov call mov scas mov in mov idivb out mov int xchg mov ret mov idivb (bad) mov xchg mov jecxz scas mov lds loop into mov fidivrl fnstcw (bad) mov xchg mov lock cmpb mov sarl mov mov xchg mov mov in mov sahf mov xchg mov (bad) mov jmp std mov fnstcw iret mov loop sarb nop mov in mov out mov cld mov lods mov fnstsw out ret mov std mov mov cld mov scas mov hlt mov fistpll cwtl mov xchg mov xchg mov xchg (bad) mov (bad) mov lea icebp mov aam xchg mov iret mov xchg mov cmpl mov xchg loop cli mov cmpb mov xlat mov xlat mov sarl mov fistpll sarl fwait mov iret mov mov (bad) mov enter nop mov hlt mov xchg mov scas mov cltd mov lock stc mov leave mov call mov scas mov in mov idivb out mov int xchg mov ret mov idivb (bad) mov xchg mov jecxz scas mov lds loop into mov fidivrl fnstcw (bad) mov xchg mov lock cmpb mov sarl mov mov xchg mov mov in mov sahf mov xchg mov (bad) mov jmp std mov fnstcw iret mov loop sarb nop mov in mov out mov cld mov lods mov fnstsw out ret mov std mov mov cld mov scas mov hlt mov fistpll cwtl mov xchg mov xchg mov xchg (bad) mov (bad) mov lea icebp mov aam xchg mov iret mov xchg mov cmpl mov xchg loop cli mov cmpb mov jmp aam fnstsw int out fidivr mov xchg mov idivl fnstsw aad mov cli mov lds lret mov ljmp mov jmp mov test lea fidivr cld mov lds sti mov hlt mov enter jecxz std mov enter repz xchg sarl fdivrs ret mov (bad) mov xlat mov ret mov out mov out mov repnz enter hlt mov (bad) mov xchg mov sarb std mov sti mov pushf mov jmp mov lds cmc mov fstpt cli mov icebp mov in mov ret mov idivb loop leave mov loopne lahf mov xchg lock icebp mov hlt mov xlat mov repnz pushf mov lock sarb mov sarl lods mov into mov les lcall mov fstpt cmpl (bad) mov mov mov (bad) mov (bad) mov call mov idivl (bad) mov sarb mov fnstsw int out fidivr mov xchg mov idivl fnstsw aad mov cli mov lds lret mov ljmp mov jmp mov test lea fidivr cld mov lds sti mov hlt mov enter jecxz std mov enter repz xchg sarl fdivrs ret mov (bad) mov xlat mov ret mov out mov out mov repnz enter hlt mov (bad) mov xchg mov sarb std mov sti mov pushf mov jmp mov lds cmc mov fstpt cli mov icebp mov in mov ret mov idivb loop leave mov loopne lahf mov xchg lock icebp mov hlt mov xlat mov repnz pushf mov lock sarb mov sarl lods mov into mov les lcall mov fstpt cmpl (bad) mov mov mov (bad) mov (bad) mov call mov idivl (bad) mov sarb mov fnstsw int out fidivr mov xchg mov idivl fnstsw aad mov cli mov lds lret mov ljmp mov jmp mov test lea fidivr cld mov lds sti mov hlt mov enter jecxz std mov enter repz xchg sarl fdivrs ret mov (bad) mov xlat mov ret mov out mov out mov repnz enter hlt mov (bad) mov xchg mov sarb std mov sti mov pushf mov jmp mov lds cmc mov fstpt cli mov icebp mov in mov ret mov idivb loop leave mov loopne lahf mov xchg lock icebp mov hlt mov xlat mov repnz pushf mov lock sarb mov sarl lods mov into mov les lcall mov fstpt cmpl (bad) mov mov mov (bad) mov (bad) mov call mov idivl (bad) mov sarb mov fnstsw int out fidivr mov xchg mov idivl fnstsw aad mov cli mov lds lret mov ljmp mov jmp mov test (bad) mov sarb lock fnstcw (bad) mov mov fdivrl repnz fdivrl ljmp mov out mov out ret mov aam fidivrl jmp fstpt cltd mov aad mov sti mov in fnstsw cltd mov into mov out lea (bad) mov scas mov scas mov cld mov xchg mov fnstcw mov out mov mov test loope enter xlat mov mov idivb (bad) mov cmpl test xchg mov in jecxz lods mov idivb sarl in mov stc mov aad out repnz jmp xchg in fdivrs scas mov cmpb mov xchg mov lcall mov xchg mov xchg mov (bad) mov stc mov loop int lea cmpl mov fistpll clc mov clc mov cli mov xchg mov loopne lret mov mov sarb jmp mov xchg mov sarl mov (bad) mov idivl (bad) mov call mov (bad) mov sarb lock fnstcw (bad) mov mov fdivrl repnz fdivrl ljmp mov out mov out ret mov aam fidivrl jmp fstpt cltd mov aad mov sti mov in fnstsw cltd mov into mov out lea (bad) mov scas mov scas mov cld mov xchg mov fnstcw mov out mov mov test loope enter xlat mov mov idivb (bad) mov cmpl test xchg mov in jecxz lods mov idivb sarl in mov stc mov aad out repnz jmp xchg in fdivrs scas mov cmpb mov xchg mov lcall mov xchg mov xchg mov (bad) mov stc mov loop int lea cmpl mov fistpll clc mov clc mov cli mov xchg mov loopne lret mov mov sarb jmp mov xchg mov sarl mov (bad) mov idivl (bad) mov call mov (bad) mov sarb lock fnstcw (bad) mov mov fdivrl int3 mov out repnz outsb (bad) data16 je fldl cmpsb xor pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov dec shrl sti xchg xchg test push inc and xor fistpll add addr16 or sbb jg xchg adc adc sbb or cld rcrl int cmpsb xchg and mov push jmp scas inc test mov lods inc xlat mov aam push repz gs xchg dec jle daa call popa ret sub add popf push xor add add jbe stos ljmp jg mov mov sbbl les xchg mov and lret mov jnp mov or pop lret or fimul cmp xor inc fisttpll or xchg jmp cmpsb in adc aas div add push repz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp add and inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp icebp jl shll or inc xchg push dec or mov xor inc fisttpll or aam leave cmpsb cmc pop adc aas out push jecxz ds add push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb fistl hlt dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb add pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov add add xchg mov cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out add add and (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and add cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs add adc loopne and adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov add add pop lret or fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add add add and je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb add add inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall push dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp es (bad) xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call add outsl cltd xlat popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll add add add or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub add push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test add add pop adc aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns sldt cld ss mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out add push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp add add and inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds add jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and add mov sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb pop fistl hlt dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb add xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov add add ja and (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and inc int xor mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg add pop sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov or pop lret or fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add add testl lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc add inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall aaa (bad) arpl dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp add xchg es (bad) xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa add jmp ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor (bad) scas mov cmpl (bad) jns hlt pop xchg sub dec dec in xchg aad mov loop push cmp jbe aaa movl and fildll and imul and fcmove sarl arpl loopne loope movsl test cwtl xorb ds insb lret pusha lods xchg adc add outsb sahf and fsub inc repnz icebp add iret sub dec (bad) jo xchg dec cld pusha mov inc and xchg rolb faddp popa cmp rclb xchg test out sub js pop je loopne mov mov jge sbb iret xchg es rcrb clc pop sub divb add or mov sub cltd push xchg fwait mov dec sbb or mov inc sbb (bad) insl sbb test push (bad) (bad) ja mov xchg cs ficomp sbb jb pushf sbb xchg aaa jge cmp in and aaa sub sub xchg mov add add rcrl dec inc imull lcall mov inc xchg stc lret mov ljmp cmc loope pop (bad) push jnp cmp xchg or pop pushf adc je sbb scas lcall mov adc dec movsl ss add add ret mov add add sub mov outsb dec add ret xchg xor jg sbb imul frstor (bad) xchg movsl fwait sub mov dec mov fwait aaa (bad) pop cmp mov pop pop mov daa add cmpsb cli inc jp popf push lock idivl dec or sub pop cmp sti pushl sub add into sub iret imul clc test mov cmpl mov mov int sub hlt (bad) cmpl mov sbb fldenv insb mov or jb jmp imul inc add push fstl fmuls imul xchg inc fisubrl stc cmp in addr16 outsl push loope mov mov imul lret (bad) xchg scas sub sbb out jns sti adcl cmp in adc cmp int3 rorb scas lods in mov roll daa rolb icebp repz jne dec int3 ret stos shrl pop ja imul add pusha orl dec (bad) stos fwait push jmp insl push lods test cwtl gs mov int mov and cmp jge xchg fs aaa lret or aaa mov mov (bad) dec pop inc popl pop repnz add jmp dec mov xchg jb fnop jg add or add rclb hlt iret ret push sub call mov gs jle lods push enter shrb jno jle and cmc cmp sarb push push insb pop sub mov jmp popf add jmp sti mov pop mov ret ljmp xor out push fadd (bad) pusha add push or test popf test adc scas mov add sub add std out fmull inc inc push jo test jmp push movsb cmp mov add push xchg nop rcr mov in add and shrl xchg lock xchg jo jecxz add fldcw scas aam repnz or rolb fwait stos adc sbb adc push int lock rcrl mov sti fist imul sti fstl stos fsubrp mov ljmp and movsb js or mov jecxz idivl cmp test add xchg mov loopne roll enter mov inc lcall sbb sbb aaa add int3 (bad) (bad) or sub test mov jmp or sbb adc adc or add repnz xor cmp lock jl fnsave add push mov std sub sub xchg cs xchg xchg rolb hlt add xor mov div mov mov in testl dec loop lahf push jns sbb jb and aad sub mov popa adcl sbb insl mov pop in in (bad) add mov (bad) je pop bound sar out aam pop or imul xchg popa sbb or sahf dec xchg adc mov in addr16 pusha mov icebp xor or lret xchg clc xor aam mov (bad) fs sti insb dec pop pop lcall lea jne mov add add or dec jbe lahf mov xchg jecxz enter push (bad) sti push ficoml push outsl jno or pop loope push jbe lods popf pop hlt jg pop leave mov cs sub icebp mov (bad) pusha rcll lret shll out xchg mov push jle jne pop push xor out iret jl add add mov (bad) mov into insb lock std ljmp cld pop ja dec stos jnp hlt data16 and mov mov jo push daa in adc loopne xor inc lahf shr cmp dec jb xchg fldcw lret movsb xchg sbb movsb cmp inc xchg es mov add add fnstenv aas mov jae jmp adc cmp roll lahf (bad) lods dec out popf push cld xor pop cmpsl mov and loop (bad) mov xchg movsb mov scas jns cmp sbb fld sti add adc sbb fs lock into shll add add adc push jp pop xorl dec jne fldl pop lcall test jle sbb cmp sub pop dec add lcall push sbb loopne imul pop push dec inc out jbe and xor das pop cltd aad mov test pop movsl adc add add mov mov sub lods xchg mov xchg xlat data16 pop mov mov pop shll loop mov fmul out inc pushf pop stos pop dec mov jne sti imul outsb xchg cmovg (bad) lret xlat je lea pop lret or xchg fbld or add add int3 mov jno pop lret scas mov push jecxz push adc andl in stos sbb cwtl (bad) sbbl pushf or out adc inc fs lock std jno,pn pop repnz (bad) cmp clc stc xchg gs push mov es in xchg aam and adc jns (bad) test xchg sub (bad) adc jl adc ds mov leave mov push (bad) and sbb xchg mov inc inc mov inc fwait inc lcall lret std mov orb aaa stc popa cmp jbe sbb add or sub inc mov out xchg ret jl pop mov ret ret rorl pop push xchg test insb xlat fnstcw add arpl test xchg xchg push sbb (bad) jbe ss fldl and jmp xchg jae insl daa call mov sub shrl in cmc sub icebp hlt jle mov mov es cltd push lock js inc pop sbb cmpsl add jmp and test cmpsb pop ret cmpsl cmp jmp mov mov or sbb ds xchg push das rcrb xor pusha or aad ret mov fimull icebp cmp scas mov loopne xchg cwtl idivb adc inc repnz decl insb xchg (bad) push push xchg out shlb out inc les sbb insl test inc lret add xor (bad) icebp lods outsb call movsl lods pop shlb popf pop sub add add cwtl or mov pop inc pop data16 adc mov rorl xchg fs std inc in mov ret pop jns jne int xor jbe in (bad) std sub dec mov mov imul mov pop (bad) repz loop mov push and ljmp add aas cmpb pop rcl cmp adc or or cmp xchg out xchg adc andb adc (bad) or cwtl lods mov fcmove lcall inc fucom mov pushf repz (bad) ljmp les xchg push jns pop lods fiadd add lcall and mov add aas movsb cmp xchg shll dec xchg fsubrl out rolb out pop lret (bad) cmpsb lret sbb push or lods lret jmp (bad) gs xor faddl stc fidivl in movl daa add adc xchg pop jnp cmpsb pop (bad) lock insb cmp pop fwait arpl pop jae and leave pop lods pop sbb mov cli movsb adcl movsl mov sti cmp daa call popa ret mov iret and dec (bad) ss data16 xchg sub cs stc jp and fsubr push inc cmpsl andl inc (bad) sbb aad push outsb dec in es subl int3 dec arpl fs sbb jo pop inc int sbb (bad) sub scas xchg dec sub rorl xchg fwait ljmp sahf add testl outsb movsb addr16 push cmpsb adc add add fidivrl adc cmp out movsl push dec pop xchg out dec fidiv and aaa sbb test mov stc je pop into push movsb mov imul call gs shrb data16 lahf pop push and test gs scas jge in fldl or out cmp add pop push movsb mov fwait shl sub xchg mov cwtl xchg mov data16 das lret inc or adc mov imul inc icebp nop fmull or sub popa hlt pop adc mov xchg jge,pt lahf arpl mov clc es sbb adc dec sti insb add add clc sub sbb add add test mov jnp mov push sbb je pop aad shlb push mov in pop call and mov dec addr16 call sub sti (bad) cmp jg shll cmc test sahf lea mov shlb mov inc mov add lret push jno cmp sahf out pop dec xchg sbbl push push daa mov dec jle sti loop out fadd cmpsb cmc mov outsl push out loop push sub xchg (bad) out mov (bad) xor repz push mov aas loopne add add (bad) into daa or insb jg bnd loopne mov mov mov push jb inc jmp push (bad) cmp ja sbb sahf xchg mov inc addr16 lods notl hlt addr16 leave mov outsb dec aad negb icebp mov mov (bad) jecxz cmp lcall sti mov cs mov add xor lret ljmp std push push lods inc sbb into loop mov imul rcl das int3 sbb pop mov or sub fwait popf data16 mov push test les js xchg cmp js push lods test push insb pop pop and rcrl ljmp add add (bad) in js add add sti je lcall repz daa call mov cltd mov sbb insb test mov (bad) mov imul (bad) lods cmpsb (bad) or mov adc lock jp mov sub outsb mov je pop bound push jae or fist push stc mov mov loope icebp (bad) mov push sub push icebp xlat sbb adc xchg or or stos fildll iret test jbe stos or (bad) mov int add sahf testb je mov es imul adc ret dec addr16 loope fs out inc inc mov and cld and jae loope mov dec or push into mov int fdivrl out xchg and fisubrl mov jmp fisttpl mov add lret cmp stc (bad) lods pop push (bad) fdivrs in sub arpl (bad) cmp aam loopw jp icebp mov push push push repnz or mov dec cmp xor ljmp pop sbb sub cmpsb mov jb pusha xor dec push add add sahf (bad) arpl das sub popf push xor (bad) int add push adc inc aad sub lret mov push fadds test cmp ret lret in dec jae inc xlat out in mov bound pop lret add ret jg popl add add mov into pop mov dec sbb push dec (bad) cmp stos cmpsl cmc mov outsl mov popf ds xchg xor shlb pop out fdivrl or insl or pop mov gs sbb pushf (bad) xchg pop sub mov lods movsl scas out clc je pop pushf mov jmp add (bad) fcoms imul in and mov jne test xlat sbb stos and js jae loop xchg or push scas and sub adc or (bad) int3 dec mov inc jbe jge mov mov adc test jge sub add push push dec icebp aas (bad) mov jle dec das pop or xor icebp and ds cltd push dec xchg xchg popf rcrb inc sbb (bad) insl sbb test outsl (bad) or ja inc int loop cs sbb ja hlt adcl sbb ljmp xchg add in ljmp int3 pop jle and jmp call pusha push adc inc and jae mov (bad) adc pop pop jecxz adc ret push xchg imul xor gs and lods fcomps or jns,pn sub (bad) mov or sbb add push pop or gs jo sbb jge clc ds cwtl xchg ficompl dec xlat xlat xor fstp cmp aad xchg subl pop dec mov cmp inc push add xorl xor in movsl ljmp into pushf je lcall jbe,pt out lods cmpsl adc cmpsb jecxz scas push bound add hlt mov fdivrs mov and mov pusha ljmp call cmpsb jns cld mov jne and and cmp jmp cmovno adc and jns inc sbb scas std lea rcrl pop mov add pop pop push cmpsb jbe push mov jb add stc sbb mov push and mov mov sahf dec jbe fwait lods xchg movsl (bad) lea test mov loope jp push inc or mov and dec jle scas pushf adc nop aaa int mov inc inc scas and jmp dec fcmovbe and fldt roll lret clc jbe add add xchg in and or (bad) pusha addl cltd inc and add fidivl and mov int mov push pop push out std out aam push cltd (bad) dec adc dec or stc cmpsb hlt inc (bad) xor adc jecxz loop (bad) sbb sub (bad) (bad) icebp es mov add push or cltd xchg loope pop call insb sbb loopne jb iret test xchg jnp mov pop xchg and jb jmp jb push (bad) arpl and stos or nop data16 sub mov data16 movl aas push inc mov sub adc add push inc dec xor fcomps pop pop adc pop push xor insl clc add lret flds inc (bad) dec or sub inc xchg pop mov push int3 loopne push push (bad) cmp jne frstor mov clc lock and adc (bad) sbb cmp inc fs add add in cmpsb ret jle out xchg or cmovo pop mov inc sbb lahf jmp loopne and daa loop jmp (bad) push push scas and cmp cltd arpl dec or flds pop xacquire stos pop inc in jb jbe aad sub (bad) mov xchg aaa aad add add shrl sbb clc into adc movsb and bound in std pop and jae inc sbb and data16 popf jno cmp jne pop into sub mov and fbstp or xor sbb push pop or fcmovu and mov add push insl pop loope mov out call stc jge,pn inc cmpsl scas push je icebp or test adc push and loopne mov ret ret dec loop lods push into jnp gs pop inc jno movsb jb sbb sbb clc test into adc fimul sub pop popa add cmp call cmp xchg or fnstsw cmp test fcoml lret pop into sbb repz scas stos dec int mov xchg cli mov cmc pop es icebp push jecxz jnp negb repnz (bad) cmpl insb pop xchg out (bad) add add add jne and ret (bad) in aad push int cwtl testl lret sbb stc sbb add sahf mov data16 insb push lret (bad) jno mov and and jbe mov ja rorb into mov fsubp xor insl stc add add add enter push xor ficoml xchg dec adc pop lret arpl mov aam jo es xchg cmc repnz mov adc mov jae,pn mov out aad icebp popa jae push xchg cwtl push adc (bad) push push push in sti push add loopne push iret pop or xchg into jl and sbb add ljmp loopne cmpsb mov jb pusha imul imul mov dec or and mov pop lods enterw shlb cmpsl mov stc pop inc (bad) mov adc cmp pop push fsubrl out jle (bad) push xor mov cmpsb inc lret stos inc pop insb inc cli jp (bad) mov jge dec pop push add in xchg in jp push std push out lea push cwtl je sar fs sbb pop ss adc sbb add add in add ja les test mov dec push sub js fwait sahf nop aaa test inc push sbb push pop pop in stos mov fwait lret test jge (bad) mov add stc push mov rcrl dec jno dec cmp out push in jecxz andl int xor mov mov out mov add add inc fisttpl fbld or ljmp xor fcmove cmp xor mov mov ds inc push in pusha xorl ss xor mov mov ret and call lds data16 add pop in add mov mull pop adc push clc push or enter mov mov pusha pop sarb int3 ljmp jmp rclb xchg (bad) in out jno inc mov out fimul dec test out xor test daa xchg mov add jg loop pop rclb cmp out dec cmp repnz cmc insl adc push sbb (bad) pop xchg xchg repnz (bad) and in movsb cmpsb lds sbb xlat cld sbb test cmpb or in sub add or push add adc push sbb add in pop fwait or rcrl les xchg mov test push fstl in int in push jno stos pop in jae xchg ret adc mov lods or fnsave mov cmp or (bad) sbb test (bad) xor add popf cmp in pop out pop or inc mov out xchg scas xchg mov fwait and mov pop pop ficoml sahf dec jbe xchg add iret cld sbb test jbe lods (bad) insb roll stc pop push std ficompl jae loope popa outsl enter pop dec jle mov xchg sub and cltd std ffreep data16 xchg fist stc ja inc mov fimul jae ljmp fnstsw shrb insb push cmp sub xor jbe aaa enter ds jo mov into cltd popa mov mov jge jb xor clc sub cmc repnz dec addr16 add and cwtl imul jl mov rcl jl (bad) testb mov adc push iret outsl fcmovnu jecxz sbb mov insl inc adc imul sub mov inc sbb xchg or jmp ret jmp and cmp add add add add xchg (bad) clc jl dec cs cmp adc dec popf push ficomp pop aas movsb cmp xchg cli ret jge leave pop lret lret in pushf fdivrp jne cmc adc lahf int movsl pop pop xchg repnz and subl lods mov and fsub das jle pop adc add mov bound jecxz pop mov cmp adc subl inc out in in xor std sbb jmp mov js inc cmp ja xor mov test aas adc pop or pop xchg xlat popa push pop shrb adc lods popf push jns dec loopne ret ljmp add ljmp pop jmp mov mov inc push cmp mov ret sub outsl sub mov lds cwtl dec cld in (bad) push daa pop or jne repz and push pop xchg dec fnstcw mov or in rcpps loopne lea add add mov push sbb xchg sbbl shrb out xchg add and xchg cs gs fstps lret lods and je out cwtl push pusha lret adc dec or movsb push lea jg inc jmp into push push lods jmp rcr mov lcall add add xor fldpi int3 mov cmp jecxz mov push mov mov xchg loop mov inc sbb xchg xor pop and xchg lea pop and jbe sbb xor test rorb inc xchg add pop (bad) lock mov add and lcall jns sub imulb (bad) mov push jg jno adc stc icebp ret out cwtl (bad) jmp push adc mov xlat popa mov pop lods (bad) jnp lods lret cli jp pop inc in scas mov jg test aaa dec dec inc je push out dec into mov fwait inc mov push stos mov mov fs sahf nop cmp push ret and jl,pn lds dec out roll nop jo sub sbb or arpl or sub popa orb add out fistp rorl (bad) movsb out jne dec and les (bad) xchg sub and aam jb pop pop adc xchg insb mov dec jle cmpsl adc mov clc pop inc add sbb stos aaa inc or inc push in popa xchg jb mov pusha adcl fs add add lds mov dec lea xor out js lret addb insl cwtl shrb inc and xchg sub stos cwtl or fucomi sub push icebp push idivb movsb dec inc add or lret insb daa and xor add push popa orl sbb mov jb out aad shrb cmpsl or xchg outsl enter or xor fcoms aad xchg push and mov (bad) xchg (bad) repz jno add cmpsl dec push jo cmpl jl push mov xchg cwtl mov nop and sbb incl add add mov aas aas sbb xchg cmpsb inc sbb or das insb xchg mov int fmuls fcmovnbe cmp dec repz adc in cmpl ja loope push jmp pop fistl je adc mov leave mov add add add xchg jnp inc sbb test std je adc outsb enter or adc fcoms add sahf int mov cltd (bad) outsb mov adc hlt pop stos fsubp (bad) ljmp jns xchg jb mov lahf mov mov int3 (bad) jecxz out xchg and sahf sub and jle jecxz add lcall mov inc dec pop stos (bad) mov mov (bad) mov jbe sbb in jecxz dec push mov and cli ljmp std cmp test xchg cwtl popf mov fcmovbe nop jmp outsl inc out cwtl insb inc inc pop pop (bad) loop (bad) out scas mov adc movsl add and jno push dec and jne les ss arpl insl xor jg cmp sti pop mov in cli mov xor or cmp icebp fucomip jmp mov push pop nop add adc xor sub inc jmp add mov stc mov mov mov xchg dec inc mov add lret jg nop es rcr push dec pop roll pop daa mov in addr16 cmp test push cmp divl adc cltd mov fistpl (bad) clc lret cmp adc xor cwtl cmp sahf (bad) xchg movsl push adc push add jle je add cmp fwait xor dec jle (bad) lock cltd xlat cmpsb xchg icebp pop xchg xchg jbe (bad) int div cmpsl cwtl inc js fs adc add cltd pop (bad) in out xchg sub and test xchg mov test add adc in loope (bad) fiadd dec xchg jmp mov adc mov das inc dec cmp adc ljmp mov imul pop outsb add jecxz xor jg sbb shl lcall rcr call rcll xchg jle push stc in movsb aaa movsl pop adc adc pop push mov bound add push (bad) js add (bad) xor es out aad test jb (bad) outsl add and pop xor stos inc xlat js xchg or leave pop popa mov sbb loope fcmovb pop add imul mov xchg dec ss sbb xchg les add popf push (bad) or xchg sahf stc negl in xlat inc mov or sti adc rolb inc mov in mul insl pop xchg mov add mov mov pop addl decl sub (bad) cmc pop cld lret add in jae movsb push mov sub jmp add add ret repz dec sub std mov cld ss mov jp mov mov mov mov xchg xor dec cmp insl push ss add and jne lcall dec adc test inc sbb test sub xchg dec das andl fisttpll sbb add add mov push pushf push mov cmpsb jecxz push xchg pop push pop repnz and cs fistl sbb or xchg push jge pop push aam cld ljmp xchg jge,pn inc jge mov or cmp pop orb insb dec das jle outsb adc xlat mov shrb or (bad) jge push add ss add and test cmp pop dec jae jle push aam mov ficomp jns and (bad) push (bad) push in cmp orb mov rcrb mov inc sub push sbb xchg lcall push outsl inc pushw sbb mov les das push and add loop aas mov fldt lret push sbb and xorl pop insl pop ret push pop mov sbb into in test mov sub adc int3 sbb call sub push add movsb pop push lcall jns add inc mov add add int inc aad adc pop mov mov jge push fldcw adc or ljmp fist iret dec inc jbe out out xor test mov loop lret or (bad) dec pop lds out iret mov xacquire (bad) cmpl pop daa (bad) aad insb cmp ret insl stc fnsave add add or repnz add mov in lds or push push adc into in and cmp ljmp inc test xchg aaa (bad) xor push imul cltd xlat outsb inc out shrb es or repnz jno mov cmp push fiaddl add mov mov cmp loope mov push lock push adc js fsubrs jmp jne dec loop pop lret or push (bad) enter jno pop mov cmc in dec mov xor dec jb mov mov push sahf shlb mov xchg mov (bad) xor push fsts pop push rolb clc sbb lods xchg inc or add (bad) and test mov jb or nop repnz inc rcrb cmc lret cmpsl test mov xchg cld ljmp cld pop mov icebp mov add add sbb jmp mov mov adc sbb dec dec iret aaa mov add shll sbb std xchg rorb cmp xor or mov dec sbb arpl fimull outsb je shlb in (bad) xchg int in mov imul add add jg sbb mov mov push pop dec push imul fdivrl push push adc insl xchg mov test aaa (bad) arpl daa mov lea mov push lods push lret iret lods mov rorb jecxz test leave push inc dec xor movsb xchg test mov push fwait (bad) rcll icebp in daa clc in and mov add dec and adc fxch sbb mov (bad) mov (bad) xor sub or aam iret das popa inc stc adc lock pusha cmp sbb and mov ret out xchg fsts add popa mov sbb push jg call out ja je or xchg aaa (bad) call sbb sub cltd xlat pop dec fcomps (bad) adc and insl sbb mov jecxz test mov mov rcrl pop push fs sbb sub lds add add add add (bad) and sub dec fstl lret lret rorb inc stos push arpl repz xchg outsl mov loop adc aas out test pop sub sbb add mov push lock in loopne insb mov rcrb or inc xchg (bad) xchg inc pop xchg test sbb daa ret aam mov dec sarw mov cltd mov rcrb mov dec add cs lock dec popf or jbe add sbb test ret cld mov mov mov mov fadds fidivrl jno stos cmpsl dec subl sahf push sbb push inc lods push mov pop repnz nop or xchg push negb aas sbb sbb test push xchg (bad) jbe mov clc lcall hlt dec test xchg fsubrl mov sbb mov hlt inc sub mov add testb mov mov addr16 mov add mov mov cwtl setbe les mov pop adc and jae mov fsubl lcall xchg (bad) or xchg mov loop pop enter mov add add fwait mov (bad) (bad) sti ret fdivl or cwtl popa mov push sbb dec adc mov idivb sbb xchg cmc les mov push insl pop ret pop aaa mov and leave bnd xchg lods rorl xchg ljmp pop adc add or arpl clc dec sub jmp cmp mov mov pop xchg xchg hlt add (bad) dec lock sub jns gs mov inc fwait pop loope (bad) inc aaa aam jae add inc mov js xor pushf mov mov sub push lret mov add add add int3 insl clc sbb fistpl mov pop and inc add cmp inc adc aad icebp aad flds adc and rorl sbb sub pop mov sbbl push add in jg xor add adc out push out icebp fsubl xlat push repz jo sub imul push inc mov mov lods (bad) roll sarl jg or mov ficomp ljmp rclb xchg pop ret lret push adc mov cwtl (bad) out or push adc mov and add mov mov lea inc lock mov (bad) push xchg cwtl xchg or dec icebp pop fistl adc xchg pop xchg out rol addb and (bad) push mov sarb outsl ss pusha mov in lods jnp loopne cmp call loopne or add add pop pop push imul sbb ja icebp add ljmp jg ret mov enter insb rorb test (bad) dec push jb ret adc repnz pop loope and inc ljmp aaa and fmull inc sbb lret lret mov imul dec mov sub dec hlt and ret push adc mov aas cmpb adc fcomps les cld imul cli lods add insb nop (bad) cmc push xchg out std jl lods mov (bad) jbe jmp xchg cs fisubr jne rcll jp test je arpl enter push sbb pcmpgtb sahf xchg cvtps2pi cmp flds add dec ror ror mov js test outsl ja adc je int cmp sub mov fwait push adc xchg lock lods mov inc int icebp scas cmp inc pop add (bad) pop dec pop enter push jp push pop xor lret scas rorl mov pop cmpsl sub add out push xchg repz enter xor fprem1 int pushf loop mov pusha xor or ja in rcrb ds scas fwait lods jl sbb mov cmp arpl jae cs mov push nop sbb gs add test cmp lods popf push or pop add (bad) clc jl pop sbb sbb nop iret clc ds pusha or shlb sbb cmp loope mov mov xor into adc int jbe scas into into sbb enter or std (bad) fdivs dec testb std jno xor into repnz adc add add nop je or pop xlat xor adc int pusha repz xor fs aam or sub icebp add stos jmp xchg fsub iret in cld push mov dec add (bad) adc cmpl in pusha std adc (bad) sub push fldt cmp xchg cli (bad) jb pop vmovlpd lods adc test xchg jo faddl insb fadd lret insb shlb xchg push xchg fs fdivrl mov inc sbb adc setns das roll inc (bad) xchg out imul push out xchg cmpsb adc sub ret jns jno rcrl stos loope fsubl xchg mov adc inc fs rcrb dec mov lahf xor or xchg pop push movb jg popa stos mov push (bad) popf pop jnp,pn sbb inc push mov or (bad) stc inc and add sbbl sub add popf xchg mov xchg test mov dec scas xor xchg push testb sub scas push popw cmpb pop in fadd mov jmp std mov sbb push sbb mov xor push in inc ret lret clc lock fildl add add xchg movsl (bad) sbb fmuls fdivr vmovupd mov lcall xor stos inc shll inc add hlt jb cmc insb (bad) arpl ret xchg data16 lods cmpsb fbld jmp aad sbb sbb shrb pmulhw mov das pop dec add add add push aaa imul (bad) popf fwait sbb inc or add inc pop stos lcall imul or jno int jge push fsubl cmp jo jno xchg lea call dec punpcklbw js sub jnp outsb and shl add jmp data16 jns into out cs pop and push push pusha and andl std ljmp jmp pop xchg push cwtl shrb shll call mov (bad) lock addr16 push out push xor mov mov jp sub sub imul push adc cli dec hlt or pop lret push mov stos mov mov lea and fbld xor inc ret jns xchg pushl (bad) mov out clc dec in es rorb lret and pushf imul jns mov sub sbb in and push cmp pop add data16 push inc push mov scas out fs sub pop stos mov stos in (bad) adc jae inc pop das popf loopne jmp sub cltd cli sbb xchg fmull mov js mov cmpl pop popf (bad) int3 out pop pop dec loop and insb push adc mov xor push xor (bad) addr16 (bad) jp jl scas scas dec jns xchg in pop (bad) jns,pt pop (bad) repz loop (bad) fsubr push stos addl es (bad) pop lods sbb call add loop sbbl arpl out inc pop fs or repz fistpll xchg jecxz add pop loop adc pop stos mov arpl push lret xchg pusha pop xchg out push mov jmp bound or mov dec or add mov sbb repz mulb imul adc insb test xchg and push hlt dec xor push add jge clc (bad) icebp loope pop mov aam cmc pusha fistl dec add jp test add xlat jecxz scas jne std cwtl fs xor shll rorb adc call add mov es or mov fwait test add movsb mov lock (bad) std inc pop pop xchg pop cs push xor xchg add add rolb adc add push cwtl loope nop out adc push push dec fwait (bad) lods xchg push jnp lret jg inc dec mov repz pop sub sbb push pushl mov adc dec cmp imul sahf xchg cmp lock inc mov iret jge js into daa fcoml mov sbb loop sarb scas lock ret or jno (bad) xor push cmpsb and cli ljmp cmc (bad) adc adc outsl test dec jnp scas push loop clc inc jg out xchg add pop aad and bound sbb sub hlt les adc inc add adc sbb (bad) daa pop pusha daa mov add dec sti repnz jge xor adc ret dec inc mulb or add bound mov xchg std push mov fiaddl xor insb iret jno pop xchg dec mov iret leave cmc jg xchg scas jg add add mov je fildl mov int3 push adc xchg hlt outsl mov dec lea xchg sbb inc repnz sbb and adc (bad) in loop sbb cmp or xchg sbb fwait mov pop inc adc push sub fwait mov pop sbb mov push lret xchg push jmp aas add popf push cwtl ret sub mov xchg aaa imul push xor sbb out dec mov cmp sub sub adc test cltd and cltd (bad) (bad) xor inc mov sbb rcrb jp add lahf out add das mov jg push add add xchg lahf xor push adc stc cmp mov pop fistl repz test cmp push dec pop (bad) ficom iret test mov adc pushf outsb adc in addl cmc dec adc orl addr16 or and sarb xchg fsub push mov add fs or mov push inc push fisttpl xchg inc lods mov mov popa inc shll xor lds sub dec (bad) mov insl cmp mov pop dec mov push es cmp lds scas sub jbe lea xor push fsubrl sbb xor jne sbb adc popa pop cmp cltd popa mov sub jnp jae outsb rol out mov push incl outsl daa mov push ljmp adc cmpsl dec sbb sbb jecxz cs jl aaa push call call push stc or mov add add fdivp (bad) cmp jnp dec sbb test mov pushf mov test stos pop cmp xchg xchg cwtl mov xchg sub test inc dec ret xor xorl mov pop dec jecxz jo mov int3 les dec pop repz pop push mov (bad) mov pop mov push add xchg testl mov idivb rcll sbb fnstcw insl out inc push aam add addr16 xor ret cs sbb cmp cmc jae jmp xchg adc jge ss pop (bad) (bad) jno ljmp rcll je mov push lds cmpl add mov lods xor or dec inc out adc test pop (bad) sbb int dec hlt imul pop push adc adc mov imul lock inc dec adc jg cmp fcoms or mov mov xchg daa add sbb (bad) push pop orb add sbb pop lret cmpsl add sub mov push pushw (bad) inc mov test scas mov xchg aaa (bad) arpl pop mov in push lahf je pop pop outsb xchg and inc cmp cmp dec (bad) stc jb iret xor imul cmp add add out mov les iret xchg cli pop push mov fs sub fbstp inc jp pop fidivr mov mov scas and pop stc push in cmp hlt dec sbb xor arpl pop dec ds sbb lret or dec scas lds xor arpl xchg sub sbb aad jo dec jg pop jl data16 add ja jno jo xor lret push ljmp mov xchg sahf cmp mov cmpsl push dec jno hlt (bad) into aaa dec adc mov mov pusha stc mov leave loopne cs dec ja popa pop xlat fsts je lret mov gs aam add push out mov cli fiaddl mov mov loope out (bad) loope sti ss sbb jp scas or insb push pop adcl pop lahf orb cli insb sbb out add add mov xor ret in test pop stos test lcall inc jg movsb sub xor xor fildll mov test (bad) pop ja push pop mov (bad) ds xchg push scas sub pop mov movsb mov enter sbb add add add add leave fsts pushf roll fs add das leave sub fimul push sbb int3 pop mov xor or push xor or lock push push cmc ds pop movsb (bad) popf cld push jg cmpsb mov sbb sahf nop sbb pop push inc push daa add dec mov pop jmp mov or or insb jmp sarb insb shr add (bad) popa dec rorl and or sbb std jb cmpsb adc lret inc and mov or dec out pop inc mov aad mov mov fmuls add jle in push mov xchg dec add pop lret dec sbb insb mov jecxz popa jecxz rcrb sub pop lods lea bound jecxz mov rcrb or push cmpb out push out in repnz decl lahf sbb inc lahf inc push sub shlb mov int es push in jae xor test lods xchg in mov jmp adc test std inc bound ss test icebp (bad) jno dec int3 xchg pusha subl repnz imul pop add fsts in mov test adc ret sbb xchg push fidivr mov fisttpll jle ja loope sub pop addr16 sti imulb xor rclb sti sbb adc and jb xchg sbb fsubr mov push decl outsl aas mov cmp adc dec and jecxz push add add in dec dec xchg in (bad) sub inc inc popa xor cmp (bad) test out fnop cwtl xchg inc clc mov (bad) fsubrs xchg dec lods mov inc lret adc out add out scas cmp movsb cwtl sub add adc (bad) fimul or push mov (bad) ret or ret insb push cmp cmpsb aad inc inc cld or addl (bad) movsl in (bad) fdivrl jg lds xchg loop stos cmc dec and push xchg pop jno add (bad) mulb dec jnp in and rcrl icebp xchg je imul xchg pop imul sbb in dec sahf in movl sub pop inc popa sub adc gs icebp rep or cli std jbe xlat or mov js mov dec xor push fsubr cmpsb inc popa iret adc cmp fnop sbb int pop hlt jae lret cmp jge clc jmp fwait push repz push (bad) jl mov mov nop cmpsb add add cli inc dec cld dec push inc or loope jne jecxz outsb cmp xor inc push sub outsl mov dec inc mov cmp push push inc sbb scas and fldcw jbe pop cmp pop adc movsl (bad) incl std dec mov jg pop cmp push inc popa and add add fist gs jnp lret inc call add aam shlb js cmp mov roll addr16 das sub fwait lea sbb (bad) hlt jae lret cmp pop push hlt pop add fbstp pop xlat mov cmp cwtl aaa cmp xchg add add pop and mov in sbb das cmpsb (bad) mov jae and loopne in sbb xorb push lcall add push loope or push decb fistpll nop push dec cmpsb mov sub mov jp lret jo pop sbb mov dec inc inc fcoms shlb popf mov pop jne add mov pop mov jl in lock cmc mov movsl or int cmp pop sub jno cmpsb sbbl jle xor pop bnd push mov mov out (bad) push adc xchg adc (bad) cmp test add jecxz mov mulb pop cli mov enter sub xchg daa add into push pop insl cmc dec sti out pop in mov push or mov xchg dec fstpt xchg loopne pop jecxz insl arpl pushl or mov jbe test aas add sub mov mov scas daa jno lods pop pop ja cmc jo add add pop lock mov (bad) stos aaa out (bad) clc mov sub ret fldenv lods call push test inc mov repnz xchg or ret out aaa xchg push add mov pop jnp dec mov pop xor sbb test out pop loopne mov add add mov and cwtl push ret icebp icebp mov into add outsl push in cwtl addr16 mov xor bound sub ja dec mov xor sbb jg insb mov dec jle lods mov adc out pop fcomps or sti pop dec jge add add or js std stc mov sti fdiv gs cmp mov sub test push inc or dec adc aad mov sub jp add sbb stos lods outsb cmp lock jo push stc shr push movsl addl dec stc enter and nop adc lea add add lret sub lods add pop mov out fucom mov sbb xchg idivb cli mov mov aaa push out pop dec std in das insl sub pushf mov daa add mov sbbl jbe jno aad lea and mov aaa add add mov sbb sbb movsl adc dec (bad) adc cwtl adc mov inc and xor test test adc inc push les in mov jno jb fistl leave or dec (bad) (bad) loope pop div cs sbb jo sbb imul rolb add add dec aaa mov cmp js fdivrl hlt mov inc adc fsubr in sub or add mov dec jle cmp arpl (bad) lods std jne lcall adc push pop inc mov test cwtl dec inc dec pushf cvtps2pi dec mov nop add add outsb push cmp add or mov cmp ret push fistp pop movsl add scas xchg jne jecxz es fisttpll addb stc cs pop out out loopne,pt ds loope aad stc xchg jne cmpsb and cmpsl jnp insb repz add pop xchg mov mov cld rclb adc inc addr16 in ret and ja mov fldl and (bad) xor fsubs xchg lret pop in mov jbe pushf push repnz pop jg jge jne shll mov push mov mov jb push (bad) adc add add add add outsl stos xor leave mov sbb mov pop or aaa stc out pop pushf stos xor inc xchg pop lea fs push ret jb mov cmc pop outsb fcompl mov sbb aas out xchg jmp (bad) pop lret xchg loop je inc push or stos dec sti xchg sbb push aaa icebp push push add add add sub and pop test push jno pusha xor dec xchg jg jmp in cmp sub jne stos (bad) repnz ficom push lcall push out adcl fadds xchg sbb aas lds popa aad push cli pop cmp fsubrs add add mov xchg dec cmp lret add push stos pop xchg pushl call inc fucom xchg pop sbb pop int push pop mov mov inc out push outsb jl shll in into dec mov add push mov jno sti insb cwtl xchg fist ficomp add lahf (bad) xchg pop ret add movsb mov loopne test add mov jmp inc aaa (bad) loopne push sbb in pop (bad) add mov out cli lods popf push movntps jl mov sbb fisubl int3 (bad) xor or xor xchg mov (bad) mov mov or pop stos mov mov add add inc sbb adc cmp sub push cmpl mov push clc imul das xor pop push rolb fdivs out dec sti cmp std lret mov push adc imul jnp and ljmp out int3 inc add add and data16 test in test outsl insb out jl das aaa adc test mov adc (bad) rclb in sbb enter mov xor mov sub xor jbe arpl push fildll mov add sub repnz sbb mov cwtl in lret decb add leave mov pop xchg push loop loop pop data16 xor xchg and pop js pusha dec fiadd ss (bad) loope js xchg push adc movsb (bad) pushl lock pop push mov inc push call stos stc pop movsb aaa pop sub jo cld pop and imul daa rcll add add aaa (bad) jmp or adc or (bad) jecxz or (bad) call lahf cmp dec cmp rcrl jno arpl jno inc sar das mov pop addr16 jbe shl mov cli arpl and pop cs jb pop mov add add sbb add ljmp lret pop fdivrs and jecxz add adc push scas lds les cmp cmp cmp pop dec mov jae mov ss or cld cmp sbb push pushf lret pop mov mov data16 pop orb movsb add adc ret mov pushf cmpsl (bad) sbb mov dec js dec out pop in pop sbb add cmp out stos cld cmpb jp jns xlat into (bad) lods push mov test out sub scas mov xor xor push fldl in and cltd mov push push mov inc sub mov hlt inc inc pop imul rcll andb mov jno fdivl sti aad nop dec sbb dec cmp popa mov add test or repnz mov jecxz and cmpsl imul pop cmp stc mov add stc enter fnsave adc mov pop mov mov gs add fs xor add sahf mov cmpl out out adc enter andl (bad) mov into int outsl (bad) mov xorl adc sub mov add pop stos cmp stos mov pop inc daa test cld cmp mov xor cmp outsb xchg nop sahf test (bad) fwait pop je test pop mov outsl push mov bswap jns movsl stos subl movsl (bad) jns data16 ds xor icebp xor pop and mov adc push dec aad mov xchg pop add fnstcw mov (bad) mov or (bad) jo xchg test mov inc jne dec cmc inc pop xchg push repz repnz cmp push jmp dec (bad) pop adc inc push loop xchg call in mov add jo andl fs sbb dec xor xchg cmp add add add xchg mov in adc cmc fisubrl add pushf jg xchg lahf out icebp mov jmp movsl fnop insb cwtl cltd add sub and popa lcall sbb notb lds jae rolb fsubr sub xor int3 push add add loop in jo stc mov adcb out ds jle (bad) mov flds sbb pusha push movsb in insb push dec or (bad) dec lahf in (bad) aaa or sub xor inc rorb loop loope scas jle int addr16 bound je in jge sub sbb aad pop or pop add jge or xor pop pop and popf test lret lret jl repnz add daa loop jo lcall (bad) daa call pusha ret outsb xchg jge cmpsb popf leave cmp add cmp dec mov aad cmp sub add jnp (bad) jae mov fwait shll mov test push mov loope and sbbl std out sysexit xchg lahf icebp add aam int3 pop adc pop (bad) sbb add xor (bad) popa mov inc in or push (bad) stc stc push push pop cld pop or mov aas cmc dec js pop cmp fldenv popa xlat fwait cmp out (bad) leave or xchg inc fidivl testb scas and pop decb xor push mov add cwtl xlat ljmp mov movsb out push inc mov rcr adcb subl add add and jge sub push or mov push rorl mov sarb outsl les and test xchg out imul push lea xchg cltd aad dec xor popf notb scas addps and add add fldcw (bad) cmp mov sbb out pushf pushf sbb sbb fidivrl mov xor sbb clc mov orl popf push cli ss stos leave xchg add inc mov mov jno xchg ret aas xor stos and ja and outsb in add pop lods leave (bad) jp inc push mov and mov jge jb ss mov mov xlat mov ss inc test pop (bad) ljmp pop orl sbb push vpackssdw push cmc pushf sub or mov in push push fstl add mov (bad) and inc iret shr in sub or jmp mov push rolb movsb sub xchg repnz ret aas adc popf push jns push cmpsl mov pop or dec icebp add stos jae aas cmpsl out jae cmpsb cmp push pop xchg push add scas adc jmp jne cmc jbe mov sbbl push ror int3 dec xchg ret ficomp dec jne sbb mov imul mov out xchg out adc or sbb fisttpl mov stos test inc in dec jb adc sub aaa outsl or pop insl xchg fucom mov dec jg add pushf outsl sbb inc cmp or lock pop (bad) jae push and es addr16 sub vmwrite xor aaa inc or rcll mov xor jmp mov sub xchg mov stos andb ljmp add add mov (bad) dec jbe inc xchg fisttp push scas test das sbbb test or fadds xchg sub mov lret test adc push pop sbb add pop push pop clc pop lods ds mov mov dec aam loopne andb lods push int aam pop mov testb add test pop es jne lcall jns inc dec outsb mov cs test cmc and rsm icebp add (bad) jle adcl ss dec enter cmpsl (bad) loope push stc mov adc aam mov in dec push mov cmp (bad) stos je push inc or or adc (bad) (bad) xor dec cmp insl scas into (bad) popa fldcw int pop notl imul es or jge cli push addr16 insb cwtl xchg popa mov lock iret jle sub and (bad) int repnz shlb mov inc adc in xor pop aad add scas loopne and jmp ret pop shrb cmp mov pop sbb outsb test out cmpsb adc or push in mov mov cmp pop push dec (bad) in lcall add xchg mov lcall test mov (bad) test pop ja sbb insb mov add push popa pop pop jne sub fmull or inc jo pusha dec repz adc insl movsb pop sub push pop lahf sbb jns rcrb dec sti in pop test push iret aad sbbl inc jl stc add pushf negb add jl sbb cmp and fdivrs jne mov aas sub in das xchg xlat popa ret imul inc out lock dec lret aas jo add ficoml mov aaa pop lcall mov dec iret push icebp or jmp stc push lcall add sub xchg push sbb fs add addl add pop xchg xchg lret (bad) ljmp xor (bad) push mov outsl jge call inc add or ficompl dec xor insb sbb pop push out loope sahf je mov sub inc xchg std stos or daa ja movsb int jl,pn or jp (bad) arpl jo mov push sbb pop fldl scas mov push lods lret pop dec xor xor mov sub cs mov js inc inc dec xor stos sbb dec add lcall jno and jne push adc das imul scas fwait addr16 lds das cmp push scas jmp jl outsb inc es ret leave or adc add add add insb inc add cwtl mov in push outsb insl dec aad in iret dec mov (bad) mov jbe jecxz xchg movsl les jnp pop mov xor dec pop imul out aad sbbl inc jo xorb mov fdivrs popa dec or sub xrelease add pop scas ficomp stc ljmp dec and scas adc jp jae or popf adc sbb imul jmp xchg ret and popf mov cmp enter aam inc fstl pop adc out rcrb mov jne dec adc and push adc iret push fidivl stc mov call push inc fdivrl aaa push mov xchg pop pop les jne pop arpl (bad) jbe lods or pushl push jg mov push (bad) arpl cltd in dec call mov cltd shrb in adc lods mov cmp add add and push fisubl or scas pushf call xor mov dec xchg push mov (bad) xor or inc xor sbb (bad) jns,pn sub adc pop (bad) mov jecxz pop jl inc adc or sbb (bad) pop (bad) sbb xchg adc or fcmovbe cmpsb sbb scas xchg fsts fcomps inc mov insl loope and dec (bad) pop mov sub inc xor testl lcall mov shll jmp rcrb sbb scas popf push hlt ja add mov mov fisubl jg test add mov pop mov sbb cmp dec notb sbb and (bad) or mov lret into jb jne rcl gs add dec jle and fcmovb imulb (bad) xchg hlt les add dec jb mov in loop ds push lret inc sbb test add pop fildl cmpsb dec bound push out sahf pushf (bad) jmp fwait add lret fcmovbe sbb imul adc je jmp nop aaa scas ljmp cld ljmp xlat or cld lret ljmp cld sub jl inc lods jg mov inc sbbb add sub in call sub xor dec push inc int push jle and jne idivb fldcw inc sbb adc push push (bad) sbb psrlq dec cld int3 rorl add add jnp push in addr16 das mov dec bound sbb fcomps (bad) iret xchg fisub jno inc flds adc mov sbb add add inc xchg out mov hlt inc xor cs lahf shll add mov nop xor push jg ja jmp ret mov test js test std jl adc dec icebp out xor mov bsr les lret sti mov cs shrl lds aaa hlt jg add dec dec jle pop cltd adc lcall or xor xor inc sbb shl cld push cmpsl push inc sub gs lock pusha cmp xchg xchg lcall into rclb outsb sbb or test add out hlt std stc inc nop inc int pop sbb repz testb mov mov bound enter out push cwtl xlat popa dec lret data16 mov paddb xor ja or js xor mov (bad) pusha or mov inc dec adc cmp adc icebp and add iret cmp jbe inc shrb insl pop ret dec or inc pop xor shlb jne cltd adc xchg lret in jno cmc pop xchg sub lea jecxz ds sub add pop cltd flds cmpsb xor insb js or push push mov add dec xchg and and inc and test call mov xchg mov js std scas push bound repnz pop mov movsb sbb int leave push xor ja nop and cmp cmp (bad) mov jo lcall mov add add add add aam shll push in enter or lds pop and push dec addr16 fsubrs and mov xor out jb and enter arpl push fucomip cltd sbbb adcb jmp mov or (bad) jae xchg cs dec inc mov add cmpsl adc stc adc cmp movb call icebp cmp mov or or pusha aad cli pop mov mov jl pop push sub jo jmp sbb insl push mov inc inc mov and sub pop mov add inc lahf int adc inc mov lods xchg movsb xchg daa int pop rorb (bad) lar popa mov mov shlb repnz mov jmp sahf mov dec fnstcw repnz fbstp pop push push push and cmp sbb sub inc icebp outsl cli testl jp sbb ljmp lods jns popf xlat popa sub shrl repz mov in int3 repz adc pop mov jbe mov jae jge (bad) jae add pop into sahf pop popa mov push push adc repnz add fstl in xor xor (bad) out pop inc or mov mov add add add je fnsave (bad) or and sbb mov pop push test and push clc mov jle ficompl or adc push insl xlat rcrl sbb push jns fidivr lcall sbb ss jbe sbb xor inc je add add imul pop cmp jg push pop lahf push jns and xor sbb shlb repnz out leave inc aaa idivb aad xchg mov fsubrp cmpsl cmp push sub test fstl in xor xor vmaxss cmp and jp shrl xchg es sti xor and add leave clc loop loopne imul cli into jo sbb xchg loope cmpsb pop pushw loope lret mov xor xchg xor stos cmp xchg out add loope mov or cmp das pop xchg push lcall inc lahf ja push xor sbb push sbb jg je nop push movsl mov or jae stos mov push hlt ja add pop scas mov (bad) incb jge rclb insl jmp and fnstsw pop add imul dec mov dec leave cld mov stc push addb dec pop fneni(8087 mov adcl cmp add (bad) insl or sbb test sbb repnz aad cltd sbb (bad) in cmp adc cmp add add push rcrb (bad) repnz sbb ja cwtl xorb mov addr16 sbb push sub das fwait xlat popa test mov cld (bad) push sub sbb inc add iret inc bound inc scas mov and jle sbb push cmpsl mov test and scas push fs repnz xor inc and lds mov adc or inc cltd scas bound mov inc fldl mov cli inc movsl js adc add mov scas or xchg in call and loope or insl mov dec fcoml inc ljmp das cmpsb cmp add mov nop data16 fdivl jle lods lods sbb push push rcl in add cmp push push add sbb xchg sbb (bad) mov leave nop mov mov insb push insl clc xchg out adc ficom sbb arpl dec dec cli xchg mov pop (bad) aam mov inc mov les fisubrl or xchg (bad) (bad) out cwtl lock jl scas mov sar dec and add inc cmpsl lcall cmc fistp loopne xchg lods (bad) xchg out pop or call lret fidivl sbb cltd aad jecxz scas add ja sub ds mov inc inc (bad) cmp and pop jmp ljmp push dec lock push sbb jg push fwait imul dec sbb ss icebp fisttpl mov fsubp ljmp push push jnp mov mov ds sub sbb cs mov pop cmpsb stos pop xor lahf xchg push and outsl jle aaa (bad) push xor sti mov push pop aam mov out sub out pop mov (bad) push lds xchg adc add add sub push iret mov out inc scas xchg movsl pop mov sbbl mov jp push fbstp je add cmpsl das mov hlt movsl xor bound ljmp push cli push jnp movsl pop adc and loopne and les jecxz aas insb jg cmpsl mov fwait in xor push mov mov inc int sbb fs add hlt xchg push xchg fcomip push cmp mov cmc pop pop (bad) cmp push pop or and sti out je in jge sub sbb repnz ret lods es or dec sti loope add push call mov mov or (bad) sbb out aad push jae inc jmp adc adc cs nop mov dec jle push mov lret add mov jns test cltd cmp scas lcall and mov xor cmp ss stos pop xor xor add add mov sarb pop inc jbe out mov xchg or push inc sbb inc sbb repnz and (bad) xor mov stc sub jmp cwtl jecxz adc lock pusha cmp pushf cwtl push dec repnz cld sahf xor sahf xor pop pop and push mov add mov dec sbb out jge pushf outsl pop push test (bad) or jecxz outsl enter negb sub (bad) fsubrp outsl sbb jns adc data16 and mov popa adc inc sub das or lahf icebp mov js dec inc adc xchg paddusw cmp loop pop cli ret and add jne inc jle out xor mov in fidiv loopne leave ja scas loopne mov mov dec addr16 xor nop sub aaa xchg rcrb (bad) outsb gs inc sbb mov jb lock sbb pop xchg bswap xor andl add add add sub test add lret stc adc ja or xchg or pop (bad) out pop scas popf push sub cli ljmp (bad) sbb cmp dec xor pop add das ret int3 icebp push in test sar cmpsl leave mov push adc mov stc add ja pop lods fstpl dec push mov lods adc lret mov mov mov push icebp jl sbb aas gs sub pop dec xchg out fistpl inc hlt dec test inc xchg out xchg dec mov cs pop xchg jnp or adc (bad) decb idiv (bad) rcll jmp ficoml push cmp pop shrb lret out xchg paddb jae (bad) aad cld es mov jae pop addb iret fwait push pusha cmp xchg enter in jbe call scas fs lret push jp add roll popa inc xchg dec pop mov int das rcr pop outsb inc fstpl lea inc jno pop adc insb mov scas or mov or rcrb pop xor inc dec sti out fist in add xor je (bad) and leave jne (bad) xchg jge repnz adc add inc fiadd mov pop xchg push push mov xlat cwtl xlat popa ret mov popf xchg (bad) add lods icebp dec ljmp jg lret xchg in insl inc (bad) sbb fwait push popa dec loope and outsl mov icebp mov divl addr16 mov xchg enter ja xor insb inc dec xlat shrb mov pop or out mull mov out addr16 (bad) (bad) lock mov mov lahf push dec xchg ja jle cmpsb xor dec sti cmp or push aam or nop (bad) cwtl test mov dec fnstenv fwait jnp into push and and mov sbb add xchg mov std adc and jne shlb jecxz dec into add orl pop mov fwait push cmpsb jns mov push inc and aaa icebp icebp divl leave hlt mov or jecxz les jle dec push and add stos into adc pop in mov cmc pop nop sub test xchg inc shlb in into xchg ficomp adc fistl ja repz rolb loopne push jbe sbb out int cmp sbb jnp mov push mov rorl (bad) fdivrs popa inc add and (bad) add loop sub das outsl int3 pop or inc in in fnsave sbb xchg mov negl ljmp test fsubrs xor nop or sbb xchg test imul pop (bad) mov daa das pop cmpsl or rcrb pop flds add add add jle adc addr16 jp mov jl repnz sbbl xchg bound push xchg mov mov out ficompl repz sbb cs xor sbb (bad) or inc (bad) nop aaa jge and pop push nop adc and es add lret hlt imul add xor pop int3 (bad) loopne jnp or push or fist cmp cmpsb pusha insl insb test pop stc xor lret xor xor push clc pop lret test sub imul xor fucom out adc cmp (bad) ret scas cmpsl out insl into data16 add dec out jl pop test jg or xchg mov or adc lret cmp add cmp aaa mov sbb (bad) test xchg xchg ljmp sub loopne loope leave ds cltd ja mov sub add ficoml push xchg int ret daa in pop lods jmp jns xor xchg mov cmp icebp (bad) mov mov dec cmp (bad) cmpsl and xchg sub lods or mov mov dec rcll push fcomip lock notb jp fistp (bad) aaa aad in hlt jo push scas lods and mov imul mov add add lahf push xchg lcall mov (bad) cli jmp xchg popa fist push pop mov mov cmp inc lahf inc push sub add sbb stc idiv fwait in test aam dec jle iret xchg lret jecxz,pt pop shrb lret out mov cld pusha lods or ljmp jl dec jae sbb cli mov mov xor push xor add movsb leave mov cmpsl and dec ds stos push aam inc sbb stos add dec or inc dec fwait shrb mov gs cmp out cmpsl lock in mov icebp push or mov jo or jecxz repnz fistl ret push insl pop xchg xchg jnp aas addl add dec sub ret and (bad) jo xor stc add adc ja arpl sbb jmp ret repz mov jns mov sub data16 dec sub adc shl jg jne (bad) jb add js stos sti jecxz ja lea out xchg mov and (bad) push mov aas pop add mov push sbb or dec das cmp je push inc cmp sub paddsw or sbb test fstps sbb push lret inc xor repz lods js (bad) popl add add push into cltd sbb test dec dec push mov mov sub mov hlt add xor scas insl jno outsl enter push dec jle iret je outsl cltd push movsl lret fcom jo das pop push cld xor mov sbb enter push or mov adc mov cmp add add or push push adc mov js je pop fdiv arpl dec test jo mov imul mov mov sbb cmp or ljmp cmp and sarb dec xchg pop pop mov inc lahf lods xchg adc sbb mov add add andb ljmp adc popf adc into dec je sbb mov sbb stos jecxz insb scas xchg push mov repz scas push bound gs pop fcoms cmp mov mov ja pop mov movsb mov push repnz ret adc lret movb shll adc int mov insb ljmp cmp fimull dec cltd test ffreep sbb mov mov in lods (bad) mov scas mov in xor arpl and in lret in jae xlat xor aas fs mov mov dec push rclb add add insb jle adc mov lahf lret inc inc adc cmp sub arpl push lret fs sub or cmp lret out inc paddb enter mov test adc xchg pop out pop ret sbb push add stos aaa dec inc mov add and ds jg insl dec (bad) scas lds dec into push fidivl dec (bad) aaa aad cmc xchg mov stos jb test addr16 pop mov pop mov or push dec add lods inc ficoml ja jmp fistpl test adc jge sti nop jnp cmpsl sbb test jne test inc adc cmp mov arpl shrb jne loope lds fwait data16 push adc ss dec call jle jg lret (bad) mov nop call in mov pop push xor in mov movsl inc (bad) xadd cmp jecxz loopne leave lcall mov repz rclb in mov lods adc lret mov mov in mov out cli inc addr16 sti out mov sub fidivr (bad) mov mov sahf daa lods test ljmp pop and push mov sbb ja in sbb out pushf and mov xchg movsb popf jo add add lcall fs scas fnstenv (bad) outsl pusha ret jo mov loop aas idivl cld ss (bad) adc loope mov out mov (bad) jmp pop popf lea rcrb stos xchg pop lahf and push lds jge je cmp mov and jge inc gs pop lret inc popa xchg (bad) add ds pop mov arpl test xor imul fbld lock jecxz pusha jo lcall or out lods fistl hlt sbb pop andl orb (bad) xchg cmpsl push repz outsl or mov popf add mov insl mov repnz add add insb lcall dec sbb dec out xor lock jne nop pop mov pop addr16 test pusha adc cld pop ds (bad) lahf jl or dec fnstenv push adc outsl lcall push scas pushf aaa xor cmova movsb pop stos or or imul add je pop lret nop fisubl (bad) sub cmc pop xchg sub and out mov pop ficoml out mov (bad) xor data16 ret jbe in xchg or test loop fidivr decl inc out add cltd ja push pop enter arpl push (bad) jns movsl add mov mov xchg rcrb imulb imul xor push jp inc and (bad) shrl imul push movsb out int3 (bad) jle out xchg and (bad) adc and mov loop out jmp test enter (bad) xor pop or int3 das int3 int dec pop lret inc aam add aaa push js jmp push mov rcrb lahf iret cmc dec or xchg cmpsl and pushf dec cli insb sbb test shrb sbb cmp repnz aas loope cmpsb mov dec or stc stc addr16 lret jle,pn add push push (bad) ret (bad) push lods push add lret iret mov add scas fisubr test pmaddwd in stos idivb xorl pop xchg push pushf mov jmp popa repnz ds jle push xchg mov jp cmp pop add mov push or and (bad) stc aad and add push jecxz mov test sub jnp hlt aam mov (bad) pushf dec sti insb dec push cmp (bad) ss pop mov cli sbb mov xchg (bad) in aad ljmp sub cmpsb xor mov sub cmp aaa add jb out xor lock jne call add xlat add cmp pusha add mov xchg in sbb push adc rcrb pop xchg sti in out jne inc mov into je or addr16 out insb lret (bad) jno orl arpl es (bad) hlt or ret pop pop aam sbb in cmp push xchg stc stc add add jns les pop hlt sbb out ficompl (bad) insb fcoml xor sbb xchg push mov mov scas data16 imull dec in stc xchg add add (bad) out loop sub (bad) jmp dec (bad) cltd popl cli jne (bad) (bad) repnz pop push stc or sub and in pop pushf jl fistl mov outsl push stos mov xchg sub cmp lahf ja push (bad) sahf std inc out pop lret (bad) cmpsb lret sbb xchg ss xchg movsl jmp insb adc xchg jb jp xorl mov mov popf adc dec push dec xchg add mov mov xchg popa pop push xchg or aad lret fcmove clc cld sbb imul test aaa jge cmp shll xor fucomp mulb daa fadds repnz sahf push ljmp jle ret sarl sbb clc scas add (bad) xchg mov repnz inc (bad) sbb inc (bad) jle lcall loop jg or dec in mov or xchg dec pop mov les pusha (bad) sti push xlat or aam out jbe xor scas in add (bad) sti push jecxz gs mov lods cmpsb incb cltd sbb add jo adc stos pop imul test ja test (bad) cmpsl int3 pop sbb jg aaa xor adc sub js add lret cmp sub out scas rep aaa dec sbb ret cmp push lods int outsb (bad) push cld mov (bad) jge pop push iret fwait es insb in and mov or mov jb adc add add loope,pn in cmp adc mov xor jge xor mov add notb vhsubpd popf mov cmc repnz fwait out mov es repz pop les sbb sbb push push outsb push mov jle popf fist inc xchg cmp add test sub and add jmp jno int sub aaa jmp xchg sarb cltd xlat popa dec (bad) shrb data16 insb in jp cmp test or cmpsb xor fdivrl dec aaa sub std pop push xchg test add add cmpsl cmp loope mov mov mov inc sbb into xchg and fnop das mov sbb mov push sbb cmp psubsw js rcr sbb xchg cld or cmpsb cltd pop subl cmp mov int add into mov mov cmpsb xor add push scas fcmovnb or sti push jno (bad) pop xchg outsb ret pusha mov mov sarl xor ja push ror lea adc sub fsts cwtl les out mov inc or cmp add mov ret dec and cmp adc imul sub roll xchg sarb fistpll aam outsl mov pop push mov es xchg test adc push insl push (bad) sbb (bad) in in in icebp mov adc sar leave or shr in pushf mov add add in repnz xchg sbb cmp insb (bad) jle mov out pop mov cmpsl je insb lea insb mov mov mov aaa sti sub sub out fsubrl push lock sbb add dec cli push xchg or divb cmp call adc cltd push je add add mov push cmpsb jbe add jge jno fcmovne sti push jae mov imul jb addr16 lret cmp pop push or (bad) repz dec jge pop fistl jg jo in xchg push and frstor pop mov stos scas out aad mov ja jne pop jnp add cs push push mov lret mov mov mov mov inc jl dec nop out sub hlt mov test lcall inc rcrb jmp ljmp cmc adc pop ret nop (bad) mov mov pop ret push mov mov pop dec xchg inc sub mov or daa jecxz pop (bad) int sbb mov cmp pop loopne jns sub or push inc imul and fldt cmpsb push sub push sbb cmc fnstenv iret fcmovnbe das jmp scas and hlt mov xchg inc mov outsl mov add nop in ret pop xor popf sbb in push daa inc xchg xchg lock (bad) testb dec jg cmp mov mov pop cmpsb cmpsl add call push les fs inc ds insb shr shr out add add gs xchg das fiaddl fdivr mov push push movsb test add ret loope jl aam faddl lcall sub (bad) outsl movsb scas and cmp or add cli dec jne nop fstps ret (bad) outsb insl stos aam cld outsl xor sbbb xchg in in out je hlt ret pop mov adc iret aas test mov xor add xchg mov (bad) lahf enter or out jl dec nop out mov mov push push or gs adc mov mov adc inc mov int xor cld cld add pusha out lcall imul jns add insl push lcall in mov sti lret sbb cmp push jge int stos or loopne cmpsb cmp cmp addr16 or and and iret push fidiv and (bad) std xlat test lods lods adc jle pop ljmp add add cmp xchg femms test and js inc nop xor xchg subb pop fisub pop cmpl data16 inc fbstp pushf xor test (bad) mov inc aam jbe das mov femms jno push in out xchg sub add in bound jp xor pop fsts jmp add and sti insb sbb adc sub cmp pop adc jmp (bad) in clc jp daa hlt cmp leave adc iret ja rorb ljmp loope gs adc icebp xchg (bad) (bad) mov add cs xchg iret and sarl inc (bad) jb push fnstsw out stos sub fs mov imul or pushl inc (bad) jp jnp push (bad) pop loop mov daa mov aas lods rcl cmpsb (bad) mov outsl into xchg dec cmp mov in pushl xchg or cmp in push pop xchg in ljmp and and xor fsubrs xchg (bad) into clc daa mov dec out sahf addr16 test fisttp mov mov xor jmp out fucomip test jmp ficompl jp sti jne int3 stc cld jbe dec adcl inc and push xchg inc in cmp jb or cwtl pusha push imul in rcll aas fstpt mov inc add lahf dec or popf dec sbb adc (bad) push xor mov mov out cli into (bad) imul sbb out (bad) ds push adc add cmp add cmpsl push push or stos jg mov mov fnsave dec fisubrl lahf inc and loope jns mov or aam cmp cs cmp scas cmpsb mov dec or and pop jbe dec ljmp dec int3 cmpl pop xor (bad) fadds add call pop dec cmp shlb mov std (bad) xor jns int popf jo jp (bad) xor cwtl fistp rorl pop lret add mov adc inc dec dec lea xchg stos pop (bad) aam fwait mov insl sbb daa fstps sbb adc sti sbb test add fs xchg or or (bad) ret rcrl inc stos mov arpl gs scas out push sub pusha jae lret mov sub adc sbb aam xor (bad) mov ljmp xchg (bad) jmp or mov arpl sbb add add pop sub inc (bad) cli roll mov aad clc jp test lcall out cmpsb xor jg movsl pop sbb jbe cmp ret pop jae in inc xchg or pop fs les jmp aam xlat lods ret (bad) faddp xchg pop iret pop (bad) aad xchg mov fwait jg add add test push repz jno nop js and adc cmpsb xchg cmc lods adc and xchg inc cmp and ret sub push mov std push fs mov cld sahf lea jle test or add js mov ficomp push rorb jl lea fbstp fist inc push xchg popa add dec or pop int3 std jne pop push pop xchg xchg outsb lret sar (bad) je mov movsb inc sub adc add xor mov fs mov jmp aaa push fidivr rclb cli out fcompl daa sbb nop outsl dec fisub pop inc add addr16 insl add add add pushf push sbb roll xchg add sub (bad) test ret mov jo mov xchg mov scas lcall repnz inc shrl xchg imul add in add mov insb push sbb (bad) lret mov insb mov add je (bad) mov fwait mov enter adc insl sbb scas (bad) repz mov or fisttpll addr16 pop or popf push sbb sub faddp sbb aad push pop or add adc stc pop outsb sbb test add mov pop push nop in loopne fimull fadds mov adc add lret stc ret ljmp pop in mull push lods popf push add mov push shll out aaa pop jp mov pop lret adc push loope stos pop cmp mov insl pop cli insl cmpsl pop rorl (bad) imul divb mov ss xor inc jl les sub mov inc jo bound cmp std jmp cwtl mov dec in dec mov addr16 (bad) pop mov in or push movsl scas mov pop mov mov pusha fcompl push scas fwait lods jl sbb add xchg add xchg add cmp dec daa popf stc cmp lcall adc pushf push jns mov ss mov cmp test xor mov insb or fcmovbe (bad) out pop xor call in and pop xor aad test int pop xchg pop lahf dec push sahf add dec cmpsl xchg js movsl xor sub pop repnz jno fstps lahf push pop jbe adc pushf xor das out xchg mov fst cld pop dec xchg das push inc push xchg mov in xchg pop fldcw push insl fwait (bad) stos xor pop cltd out sub or pop fnsave add ret add add arpl loop sub pop pop shrb data16 add jp mov jp cwtl sub andb jb mov push jge push stos cs mov sub bound sti xchg fsubp stos inc inc les je cmp (bad) ds mov jecxz lcall xadd add mov ja xchg mov std out xchg or mov idivb rcr insb adcl (bad) cld nop sbb dec sti jl sbb lods pop mov call ret pop lret push insb xor mov int3 inc and fs shl sarb jo cmc out stos cmpsb push in add (bad) popa rcrb pop xchg das or pop clc add and cmp lahf pop cwtl subb mov in (bad) loope rorb cmp cmp xlat push add les aaa mov adc dec out mov or push fcmovne int3 dec mov xor popf aam or xchg adcl mov mov cmpsb lea sbb ljmp and mov sahf dec add nop adc repz cmc rcll or ret jae sarb sbb adc inc adc test enter movsb jae pop in pop shll add add bound setp test xor inc cld fsubs (bad) rcpps (bad) sbb ret mov shll cmpw push cmp mov pop push cmp sarl mov or sahf dec mov stos iret das repz add mov fldt adcl pop popf fild rolb insb sbb sub btr mov es ror dec xchg hlt ja das sub test xorb and dec in call xchg lods push dec imul add cli lret dec inc aad repnz mov sbb iret push sub cmp jl insl push xchg jg xchg fwait and inc aad xchg mov xchg aam add mov aaa stos sarb scas cmpsb out lods adc lret mov inc lret xchg xchg push pop pop ljmp mov fstl add add push leave div lea jno aam jns test mov push imul jae lahf xchg jnp leave sbb sbb and (bad) jecxz inc adc cmp add jb add ret jmp jbe lods popf pop hlt jg add mov mov sub xchg add add out mov mov enter dec aad push out rcrl mov enter push inc outsb int mov xchg stos jo cmpsl lcall sbb fdivs lods adc lret mov cli orl push sub addr16 jp mov rcr sbb push lock add add aas add and dec jne (bad) jg and adc adc xchg adc sub jp imul (bad) icebp jnp ret jle dec adc outsl sbb insl stos (bad) sub into mov or push add shrd loop push ds add (bad) xchg jl fstpl jno stos test sub cli lea js xchg cmc adc dec loope push and sub fcmovnb mov mov sbb push mov inc mov popa fwait jmp push mov sub in mov jp pop inc pop add add dec adc pop (bad) ss pop mov loop fdivrl lcall mov test or xor ja insb xor sahf xchg mov (bad) data16 loope lea mov pop jp sub and stos inc insb (bad) cmp adc idivl add sub pusha push xchg lret (bad) pusha or xchg shrl lahf sbb (bad) pop leave dec jne sbb push pop inc add mov ljmp icebp aad icebp mov cwtl push dec mov sbb lahf jno add add add pop lret test ja dec inc sahf (bad) xchg mov pop push test or je sahf xchg aaa (bad) out mov mov (bad) ja movsb xchg enter pop shlb fdivr sub mov jl push adc fldenv int3 or cmpsb cmp insl push lods pop add add add sub fcoms divb icebp push mov fsubrs mov out pop inc push adc mov push cmpsb js fisttpll mov or dec sti ss popa mov stc insl cmpsb test ror mov push jae orl dec cmp loope push fnop pop std sbb jno lahf (bad) sbb jo inc loopne mov pop or std outsl mov cmp cli adc pop outsb repnz jg push add rcll inc jo addr16 push jae in pop hlt js jl pushf imul sub fisttp mov add popa dec mov mov subl xchg in or jle add pop into or loope sub jae lret rep sbb sbb adc mov das insl or pop sbbb pop pop xchg lret cmpl call pushf notb add add xchg add jl clc je test lret sub insl jge data16 xor fwait les jno lret jb add int scas sbbl mov (bad) xchg ffree pop dec cmp inc mov push push les jne lcall or je add imul sbb stos inc xchg das jne mov sub jno sub cmc push pop adc mov jge sbb push cwtl push lds push std idivl ficompl push movsb cmpsb cltd xchg sbb xlat sbb iret test ja lods adc adc stc and std fisubl ja lret fldl and xlat or mov stc mov jl mov sahf dec sbb jmp ficom icebp das mov jno mov adc pop cld mov jns pushf jl roll push ljmp jg and sti inc test or or or push fcmovne int3 dec inc rep sub pop adc fnstcw dec xchg lea mov dec fbstp test out push dec fwait (bad) sub pop fildl fsubs scas std push push ret jp mov gs mov les adc and push add in daa test add xor jle daa add push inc shr ss add leave hlt jns (bad) clc jo dec cld scas lds mov and scas push cmpsb xor xchg mov inc pop mov pop push test mov test jmp push xor jns iret xor (bad) mov (bad) lock scas xchg inc cmpsb add daa or aam test clc and (bad) out cmp je int dec jg in xchg sarb dec aaa xor ds cmp mov fnsave andb ror mov icebp imul push stos jo (bad) adc cmpsl ja mov bound add sub and and sti jne mov add mov mov push fsts (bad) mov fwait inc sahf imul mov adc jle add je pop dec test fnstsw flds pop lret jg xor mov mov or add add jno lcall and inc cs outsl xchg cmpsb push jp mov adc jns rorl adc dec jo jecxz pop xlat rcrl pusha out push mov out or mov xchg (bad) lock inc jl fsubrl cwtl mov sbb push mov fcoms data16 add add stc test test mov clc decl add test add inc inc jmp sub imul mov pop int3 mov mov std ss xchg dec scas mov fxch (bad) xor dec mov mov leave pushf push repnz repnz aad pushf sub sahf in jecxz outsl sbb frstor dec lahf enter push lea inc or rol out pusha test sub stos movsl ret out lcall cld mov ds lcall mov daa das lods (bad) cltd xlat popa test ret and push dec test mov add add add add sahf jbe xor mov rorl lods cmp cmp sbb sub movsl mov push (bad) sbb jmp inc inc imul add push iret add mov xchg iret ret push push cmpsb xorb and nop (bad) dec sub push (bad) xor jp or cmpsb mov (bad) xchg mov les rolb cmp pop mov mov cld shrl adc sbb xchg dec fisubr scas repnz mov mov insb mov sbb nop int3 dec outsb je and (bad) int or mov loop or cmp add add and jae push out sbbl push sbb mov les cwtl sub mov in mov movsb stos shlb enter mov adc mov mov or dec add pop test out cmpl out mov cwtl jno jge,pt sbb cwtl dec add add add pop outsb xchg loop xorl xchg sub push push fsubr (bad) in and sahf push ret and lods jle pop lret add push push mov dec mov pop addl flds loop mov add adc addb dec cld dec faddl add int3 cmc pusha inc pop mov pop push popf dec out xchg mov enter inc inc jle aad ljmp mov xor movsb imul xchg es or xchg pusha sub pusha or push movsl cmpsb cmc push pushf mov pop pop lods out cmp scas (bad) es sbb adc pop imul add adc js push aad das mov fsubr stos cmpl inc lods fistpll inc sbb aas xchg and jle stos and or aaa (bad) call lods cld pushf test (bad) xor jo das pop push cld xor mov mov xchg dec mov mov or push lahf clc pop movsb mov rcrl mov enter inc inc dec cmp loopne dec push lret pop lret or sbb adc scas lds cmp into adc aam sub pop dec mov push sar leave (bad) decb stos js test imul daa jecxz cmp and xor lods adc out add xchg out add jg sub dec cmp lcall imull jb cli (bad) xchg nop aaa scas mov xchg dec jle jecxz bound pop pop pop gs fisttpl or leave xor lods mov jle ret fdivl mov dec push mov xchg movsl and dec aam add add test and scas inc int cmc mov adc mov fucom test (bad) pop in pop xchg lods adc adc sbb leave scas into xchg test inc xor add loope push dec push sub push mov or jmp xor pushf lea mov in mov add or sub nop sbb repnz iret pop std scas scas jns bound fwait nop aaa jnp inc adc sub xchg xlat popa xchg mov fstps xchg pop adc (bad) jno xchg data16 nop (bad) repnz int icebp mov and (bad) jmp in aas movsb fadd lret ljmp fs adc add gs (bad) je pop bound std out xor mov cmp bound xor xchg sbb and or mov push out push mov (bad) mov arpl push fistl jno hlt call pop mov test andb pop leave pop mov sbb adc and and jae inc cld out fidivl adc xor mov pop dec adc dec call (bad) loope shrb or outsl repnz data16 shlb jecxz and mov inc (bad) mov (bad) lret inc aaa aam or sbb sbb mov mov add add and adc inc xchg mov pop shrb or rclb push (bad) aas sub in mov push adc mov jns jecxz insb jp repnz add mov aam pop imul pushl inc or mov xor mov adc sbb adc mov push mov popf jns inc stos mov mov push insb xchg mov popa dec adc bound mov jns hlt pop xor adc mov xchg pop lods lods test push xor inc cmp mov fwait xor mov test jo daa jp xor jl rorb xlat stos test pushf into (bad) test add add fbld jbe rcrb and xor in (bad) jecxz push sbb loop aas mov add sbb rorb ret call pop pop (bad) mov xchg insb jno cmp jl mov out hlt inc xor cs lahf lret push enter push add nop mov out cmp dec sub outsl cltd push movsl (bad) xchg xlat mov lods popf xchg icebp out adc mov (bad) xor cmpsl adcb addr16 mov fidivr adc clc icebp pop or bound and inc sbb fstpt xor pushf xchg jne and divb lcall lds add adc jo push scas mov mov nop adc lods out mov mov pop ficoml pop jno rorb mov out fisttp lcall lcall mov test addr16 (bad) rcrb std int adc int cld gs ss mov stos fcoml add nop data16 jl fisubr data16 mov cwtl jns mov iret mov es lcall pop add inc ss sbb stos pop and ret add arpl enter cld fbld or clc jge mov pop push dec icebp add in push scas mov jecxz movsl jo popa repnz into ja stc mov push push push xchg and xor or aas je or cs loope push insl mov xchg jle xchg cltd xor add pop mov fldl test pop mov fdivrs sahf cmp jo and jp or data16 sub repnz mov xor cmp icebp dec mov loop ret adc movsl push jp adc xchg aam fwait cmp mov sub jle cmpsl repz cs adc clc iret sub repnz dec fcomps test jbe add ret sbb outsl mov orl sbb xchg ficomp sbb or push inc add sahf dec xchg insb dec pop test sbb xor cltd lahf mov lahf in add dec jecxz ljmp loopne push je sub or push add pop jmp (bad) dec movsb mov xchg xchg mov mov (bad) shrl mov add add das mov mov loop mov stos jns mov mov cmpsl stos daa jb int dec (bad) out xchg and xchg divl test push mull fptan arpl xchg dec scas pop lcall fistpl mov dec test push sub pop and out add xchg icebp push pop mov cmpsb js mov enter push add cli shrb dec shrl and push dec and (bad) xchg jle xchg cld aad and lahf cli jl ja cli jle out stos mov sub stc bound xchg ret jl cwtl xchg daa popf push adc data16 pop adc and and mov and xchg enter push push sub out loope jno push xor add sub jbe pop mov data16 xrelease scas lds xor es mov or push scas cltd das jae sbb addr16 push dec (bad) fwait sbb fcomps (bad) repnz push and ficompl inc sbb jo sbb test mov (bad) lock sahf push ret and jno mov fcoms xor ss sub insb jnp cltd xlat loop loopne sub pop sub push jns test addl cld inc and add pop mov sbb push repnz mov jmp lret test push cltd enter (bad) mov ljmpw shll mov mov cmp xchg into fs xor (bad) fistp xchg adc (bad) lock xor mov cmp adc xor sbb and add add adc xchg movsl pop and frstor test add jnp or adc insb call and mov push cmc scas mov or mov and (bad) jne bts jnp clc jmp jg ret loop mov imul push movsb add add aam mov enter inc inc dec cmp loopne dec sbb pop lret or sbb adc scas (bad) jno cmp into adc aam sub pop dec mov push sar sub fistp xchg lret dec jnp js or push mov aas dec f2xm1 ret iret mov pop and inc lahf dec push push in jns mov cld mov je repnz xor flds cmp adc xlat sub push jno jns imul mov sbb inc and mov out add pop adc (bad) repz add add outsl pop push inc int push mov mov arpl xor movsl repz bound inc fisttpll adcb decl jns in in test sti ds push icebp test jno stos xchg pop push xchg xchg dec push lods or bound scas add or push out sbb scas repnz mov stc outsl scas mov in jle jecxz insb scas xchg push xchg pop shlb bound xchg push leave mov mov or mov out outsb addr16 cmp jge loop test mov xor mov add add inc mov inc fwait inc daa fstps test jbe or mov aaa cmpsl fidivr scas (bad) stos jp popa lds pop (bad) icebp sti loop cmp lcall out out jge test cli sbb loop xchg int in mov rorl js adc ss jno repz jmp sbb (bad) push mov add out aad mov test push mov gs xor sub loop jo jmp pusha add jne xchg (bad) repnz shlb pop scas sub mov inc dec xor stos cmc in out icebp popa cmp sbb ljmp outsb loopne loop sub ss xor add repz mov jbe or pop adc lds loop mov mov in and aam insl scas movsl out add mov mov mov cmpsb into xchg rcrb dec lds pop mov jle or insb cwtl xchg dec fist jno je insl cmp stos aad cmp lahf inc xlat pop std je stos pop add mov insl enter out loopne sub arpl sub cltd popl cld lret out aas paddb (bad) xor xchg outsl or mov xor rorb (bad) lock cmp insl mov test in dec dec aas loop mov add adc adc add in dec or cmp fnop das pusha sbb stos pop rorb mov xor bound imul ret fisttpl daa cmp shlb outsb sbb das push (bad) call add arpl xchg shl ja pop cli notl dec stc push add add add std in das pop das nop xchg xlat popa mov pop dec inc jo pop pop icebp jbe jns jb outsl inc aad jg adc jp stc mov ficom pop xchg sub cmp popf push mov inc pusha gs fistl cmp out mov or xchg push sbb push add add add xor (bad) pop jnp test inc or mov rcr scas add les addl or pop and sti out fild cmpsl daa imul (bad) ret insl xor adc push fsubs pushf mov add clc and cld pop test mov psubb xchg mov add mov pop shrb in and sub leave scas data16 lret add sbb mov mov pushf cmp or sbb fwait push ljmp insb in rcl aad xchg mov loop xor jne dec dec (bad) cmc gs lcall dec xchg (bad) jo stos cld dec jne fimull add add adc lret xor sub adc adc add fwait lea or mov mov jns add push pop pop (bad) out push rol cld mov or dec dec sub sbb daa inc fnstenv testl push nop fistp push enter sub daa add mov add and scas jnp jns lock scas cmpsb and scas mov cmp (bad) leave or movsl mov fwait popf test lret int3 arpl inc jl lret pushf add xor leave lret jge pop aaa adc dec sarl rorb ror cmpsb xchg ret (bad) xor pop jae movsb inc test add add jb jl pop test push xchg mov cmpsb push or inc cmpsl sbb cmpsl xor jmp xchg sub scas pusha xchg (bad) xchg jno mov jle pop stos test pop inc inc cmp xor mov in mulb mov xchg daa lret pop repnz mov add adc adc adc ja sub idivb and sub mov notb in add scas inc repz add dec out test adc jle xchg sub push sbb mov jp sbb push (bad) faddl mov sahf add pop mov out add add jmp shlb jle mov js pop fistl dec pop mov push mov push repnz xchg ficompl scas jae and or stc je int3 js or test loop cltd mov das imul cli (bad) adc inc dec out lock add add cmpsb xor int3 (bad) in push shll dec test push cmpsl mov inc mov into mov pop xchg je dec (bad) xchg cmc je mov (bad) fdiv mov cmp divb (bad) xor pop or imul std inc mov rcl and mov ficompl xchg add add inc mov dec insl add gs fistl jg repz jno loopne insb mov dec paddusw xchg mov and pop fisubr mov add dec xor lock aaa jge sub inc std xchg es retw adc cltd pop adc (bad) mov and pop inc xchg outsl or mov add ljmp pop adc fisub insl push mov rcl test xor (bad) xchg cmc adc xchg push pop sbb mov fs and mov adc adc pop icebp or mov rcrl outsb jnp add inc sbb push ficoml mov jbe mov cmp leave ja pusha mov mov adc stc int3 sbb jmp dec mov pusha mov cwtl data16 adc dec jle jecxz mov ret lahf lahf pop outsb push pop push iret pop das sbb add mov sahf xor test and fsubr push push dec push pop add repz push ljmp fist inc xor arpl jle mov xchg lea test imul test and lods push pop dec daa adc add cs push and sbb rcr and (bad) push fs aam daa jecxz push pop fistpl pop imul add scas cs fs sbbl cmc aas lret sbb shrl fcmovnb push data16 mov push int3 js cmp test mov push pop shlb jne mov emms jnp fildll aad add ret mov enter call fldcw stos into lahf add add add ret cmp xor aas xor jl movsb test enter test scas xchg jo movsl cmp lret mov or aad test mov in decl outsb mov loope loopne hlt jae and dec sti push gs fsubrs iret cmp fld1 add push xchg andb loope push sub in inc loopne int sbb inc lods jle je test push pusha ret fsts push aas adc sti xchg cmp data16 lods push pop dec stc mov lret jl sub notl cld xor int3 les pop enter les pop out out arpl in jne aam mov add add scas dec inc fwait inc es or xor (bad) aaa loopne cmp (bad) push jbe lea dec cmpl adc mov cli or ds inc mov adc or and in or lods test mov movsl sbb test je mov and inc lahf dec push sub call ljmp scas jl cld outsl addr16 dec cli mov js pop or dec leave push aad popl and jbe or push incl shrb fucomp push or adc loope bound std (bad) es loope repnz repnz pop xor cwtl or add in (bad) mov xorl fistp xorl cmpsb and outsl mov pop jnp repz or sbb test cmp push adc inc mov mov in stos pop insb lds jbe dec inc sbb and cmpl cmp in movsl repnz add mull popf addr16 aaa inc aas xor dec std in add sahf cmp jo fsts xchg or mulb mov jl push inc dec xor ss stos pop xor push out mov fisttp mov and mov shll jbe stos lret add repz fsubs loopne and repnz cmc xchg push aam and mov jmp cwtl xor mov fmull imulb loope outsb out nop or sahf outsb jbe mov imul sbb es dec (bad) test fiaddl imul mov rolb add mov cmpl (bad) fadds in mov xor add enter and sub fnstenv push fdivrl fwait in adc push pop and fistl and aaa loope hlt jne icebp adc movsl push inc xchg fbld push push out add scas mov mov loop and xchg push pop jbe push mov stos adc xchg ss fstpt pop lods jp mov in add js pop add xlat jo iret test ja lods aam and call ljmp into pop mov lret pop arpl add jmp adc lea sub push (bad) sub std sbb inc add mov out int push mov push pop dec xchg int add adc js incl les sbb jg aaa icebp insl lock hlt lods push ljmp cmp and xchg add add push cmc adc push (bad) in aad ljmp sbb sarl cwtl push lds push xchg repz ficompl push cmpsb cmpsb jge sbb fbstp iret test ja mov jle xchg cmc (bad) pop std je outsl adc push jp aaa jae jno mov (bad) movsb sub aas jno mov add and jno in xor rorl movb pop mov loopew stos daa jb lret loope xchg sub (bad) and fs cmp or push or aaa mov cmp insl lds fildl in xchg add add dec stc unpckhps xor push jecxz mov cs push in jno sbb mov mov xchg insb inc pop (bad) lea dec iret nop push imul adc mov test jp mov pop mov insb (bad) fwait enter pop shlb bound add fsubp dec clc ljmp pop xor mov jnp inc cmpl insl mov adc insb push lds xchg and inc or ljmp lods mov or push sti icebp or movsb xor sbb rol inc xchg and adc addr16 incl add outsb mov loope loopne hlt jmp and dec sti out inc cmp pop dec push imul fidivrl in adc mov daa ja jp hlt flds mov fst scas mov push subl or shlb fadds hlt cmpsl out jne mov lods repz add add addr16 cli inc and mov (bad) pusha inc pop lods adc push cltd cmp xchg mov and cmp rorl aam enter mov inc repz fild inc fnstsw int jecxz mov cmp psubd adc aam mov adc neg sbb add hlt lret cmc into xor adc dec stos loope test mov or or xor sub stc call and in fild mov (bad) jmp push xchg fcoms push popf test push jo lods popf cmp repnz adc mov cmp jg test cmpsl pop add test and mov hlt cmp push xchg lret std adc push lahf roll inc mov es xchg enter mov movsb cmp mov pop push dec mov cmpsb cmc mov or mov dec push lahf arpl mov add or add mov fcoms hlt ret jle loopne xchg imul hlt sbb inc (bad) xchg movsl pop or jg out inc push and int test mov jle popa lods xchg iret pop xor fwait xchg shll push lods jne xchg or lock hlt in int3 jo (bad) mov push in mov stos pop out lcall add add ljmp xor mov pop mov mov and and sub mov push push pushf and test xchg sub dec dec lods jl pop add (bad) mov xchg cwtl push sbb clc jne sbb mov add pop sbb lods mov (bad) jno ja push cs cltd aad gs jno push inc lret add push mov in xchg sub sub xchg movsb push jae bnd mov das pop inc xchg or fmuls jae js dec inc adc jg shlb call add add and sbb mov mov jbe fisttpl pop mov lcall int3 inc pop inc pop dec pop inc mov pop dec push addr16 push and mov mov jp cmp jecxz xchg pop or pop shll dec sti insb sbb out leave and xchg loope add add mov outsb je jae jg adc inc test dec popf inc inc lret add ss dec dec jmp sub data16 lods adc lea add add mov and imul or inc push xchg push aas movsb fsubr push xchg vmovupd push jp into and add add add dec cmpsl cmp fsubl aaa lret add xchg mov data16 sbb and fstpl (bad) and push sar insl movsb cmpsb mov push sub mov sbb fistpl adc sahf test loopne fs addr16 dec adc add add add add pop push adc mov in add inc adc je add enter orl fadds jb cltd xlat ljmp sub popf fs sbb add mov ds push (bad) cmpsb (bad) in push sbb jl ret adc sub jno pop push inc int imul pushf iret rcrl rorb loopne mov cmp iret mov adc jo adc data16 andl out ret jecxz rcl adc xchg repnz test sahf adc mov cmp mov pop pop aaa sub lret push sbb loop add add or fstps mov fcoms mov cmp lock sbb xchg cli std sub sbbb ljmp pushf inc and pop mov in ret xchg inc leave mov or pop mov divl scas lods push mov mov cmp fnstcw (bad) scas mov pop (bad) cmp push pop or mov push or mov fimul xchg mov jmp aam adc mov push adc test dec out aad (bad) lea sbb pusha xchg (bad) shr mov rcll push mov add add aas scas xor (bad) lods movsl in repz in xchg push cmpb test cli pop stos ficomp ljmp lcall mov mov xor mov sbb gs rorb insl push mov mov or jbe or inc mov into push add (bad) aaa pop test add add jae (bad) pop dec clc pop aad pop in stos jne sub insl xchg inc out mov dec ret jl jecxz rcl repnz inc push dec test and adc sti nop in aas or push pop or idiv int adc cs xchg pop sbb xchg cmpsl xor (bad) mov adc out addr16 sbb add add and cltd xlat xor and cltd popl lret mov lock addps jmp adc ja inc loope push pop out fcompp mov cmp push fs add jno xor out bound push test adc stos sbb dec or cmp shrb popa cmpsb sbb add add or sub adc cmp jp or daa in pop push pop fcomps jbe mov mov or out mov sub xchg cs xchg pushf sub ret adc push mov xor (bad) call and repz outsb inc cld add shrb data16 push test add add fldl int3 mov jo inc fld rorb daa jb push xchg and adc push les stc js pop lret lret push mov mov mov mov in jbe flds mov cmc pop mov loope (bad) add add or xchg sub dec xor push jecxz mov fsub push (bad) jno (bad) sbb push xchg mov lds imul push mov aam ja in sarb pop sbb add jp adc push mov js es lret mov jle fcoms mov ret sub xor or add push lock rorb lods loopne jg int3 test dec popf aam (bad) out cmpsl stos daa jb push (bad) outsb mov int3 and jge mov arpl bound mov mov mov insb inc inc rcl das mov push (bad) sbb (bad) mov das mov push addr16 sti out fwait push outsb je shll in xchg dec mov add pop push xchg add mov aas iret test ja movsb inc arpl insb jle push sbb ljmp sub aaa (bad) loopne and mov mov std data16 push str mov xchg inc and dec xor in (bad) adc add fs mov fistpll pop adc imul mov es sbb mov in scas xchg lods mov inc sbb jae sub sti dec rcl in in popf pusha pop lock jecxz pusha cmpsb cmp add add adc jno xlat xor aas fs call outsb fnstsw mov jg jg inc js mov bnd cwtl sub je out cmc mov repz push dec jle jnp mov ret daa or cmp adc sub inc (bad) je mov and (bad) cwtl ss push dec mov pop dec cmp shrb out ljmp dec xchg loopne cmpsl sub sbb je jnp inc sbb sti xchg fisttp fs adc push jae fdiv fs add push xchg mov in push mov mov and or add sbbl aad cmpsl imul lcall dec push adc shr in jl sub mov je (bad) outsl data16 les dec jle jno pusha ljmp icebp cltd (bad) shrl (bad) (bad) sahf add ss cli notb je ja and fxch pmaddwd add add imul cmp ret dec dec dec push adc mov into jp or (bad) hlt stos push cmp xchg xchg es cmpb adcb stc lock in daa cs xlat enter jp xor inc push or fidivrl adc add add push out sahf pushf aam rcrl push leave inc lahf (bad) int3 jo fistpl sbb mov xor pop cs jne call or pop shrb ss fisttp pusha icebp xchg jae add xchg xchg aad xchg testl fs (bad) jmp adc xchg mov inc xor cmp add push dec dec add add test mov xor add out pop popf sub pop lret dec or and stos and xor xchg cmp cmpsb lahf pop inc mov out push mov mov jo daa xchg and adc pop test in xor add add mov mov inc ja cld cs xchg lahf mov add jle xchg je int or push cltd dec in cltd xlat call data16 pop lahf push jns mov cmp clc lock cli and das mov in (bad) jmp in push xor stos gs add jae add add add mov jo cmp adc push clc pop into add push arpl mov pcmpeqw imul fnstenv jl cmp xchg cwtl dec pop enter ficompl cltd insb fcoml xor sbb xchg add add mov mov pusha iret mov mov aaa cmp hlt arpl sub lods sub sub and (bad) sub insb push inc mov aad jg add fmull add loope cltd fwait push popa aam pop mov lods and sub inc add add mov mov out pop or jns mov cmc in lret xchg xchg sub jne jmp ds jecxz jg jo xchg pop mov and cmp xchg out push add push insb out and push mov sbb loopne and add and and push ds sbb mov imul jecxz mov ret sub add jne pop repnz adc mov aad hlt insb (bad) icebp mov (bad) mov (bad) xor icebp aam movsb mov fiaddl jns jge push sbb mov push xor popa addr16 mov mov cmp call lods test sub pusha or mov sbb (bad) sti push jecxz mov sbb dec xchg bnd ficoml in dec sti out loopne movsl fwait arpl push pop mov (bad) xchg andb lahf lods xchg cmpsl addr16 cmp add cltd lods icebp outsb add add lcall mov stos jecxz subl mov pop shrl in push cld push dec jno cltd je inc mov scas fldl mov mov adcl lret fwait out xor xchg mov insl std ss or pop mov or cmova xchg adc (bad) push pop add sub rcrb loop xchg int lods cmp test mov sbb sub xchg out popf mulb sbb or sahf dec adc sbb fsts fcmovnbe add push ja ljmp add adc mov lret idivb push sbb add add and fiaddl lea xchg movq test adc pushf shlb jg ret add inc cmp movsb push movsb mov and popa mov or dec xor jae cmp mov ret sbb out pop lret orb cltd or and movsl jmp mov jne add inc fisttpll add jmp xchg add leave inc in push push push adc sbb loope jno pop jb ficoml xorl pop xchg cs fcmovne cmp out shrb adc adc imul cs mov stos sub pop icebp jg daa call cmp add push lods popf fs imul rcr sbb (bad) and mov fcmovu lods mov int out xchg sub and inc or sarl xor add icebp ret repnz xchg lahf lret test dec xchg xchg hlt jge mov inc fstpl push push (bad) jecxz add cmpsb cmc mov cmp stc aad loope in xchg fcmovnu sbb cmp jno addl mov adc test adc adc aaa dec lcall and and lock lcall dec jle inc popa lods (bad) adc mov jae add xchg cltd movsb sbb push test mov mov xchg repnz fsubr mov pop bound mov sahf add pop push and mov push mov je mov and sbb das test cmpsb out pop (bad) adc clc jnp cld xor and mov sahf addr16 mov add lea xor sbb leave js (bad) repnz lods dec ficompl sbb sbb dec mov mov mov mov xchg (bad) xchg xchg push sbb sub jle clc and divl (bad) loopne cs jb or shlb xchg mov lcall jae add cmp jae inc jne fdiv inc loope (bad) stos sbbl and aam repz movsl inc mov xor mov rorl cmpsl (bad) xor into dec or lds outsb je (bad) pop in popf (bad) mov scas mov in mov imul push xchg repz stos add add add mov xchg cwtl pop dec xchg repnz pop sti insb sbb xor arpl (bad) cltd int aam loopne jle mov out push lahf sub (bad) out sbb mov and fdivl call mov pop pop adc adcl xchg cmp repnz push fldl add mov int3 out pusha inc pop mov fadd pop push mov ret mov xchg dec add fdivl dec pushf and lret add rorb es pop lret int pop pop cmc add jmp cmpsb cmc unpckhps out icebp mov scas dec les adcb add add pop jns or cwtl je jne mov fistp fwait call int inc imull pop jo jp rorl notl add push imul xor push outsb js loopne test xorb mov push data16 push push in ss mov stos cmp inc mov xor mov cwtl mov add (bad) sbb aad push popa dec lcall in clc test xor lahf bound cmp xlat subl sub lahf lea movsl and scas xchg jne xchg mov jbe mov push icebp jg repnz xor sti xchg aam or in jnp jnp fnstsw addb add add test fdivr mov pop ds mov xor out dec hlt out cmp sbb aas adc loopne sub pop lret xchg dec ja call ret jl lea (bad) and int3 and data16 mov mov loop push movb rol sub fsqrt int3 cmpsl jbe jg call jb add je (bad) mov rolb lcall inc stos fist ja pop mov insl movb movsb dec (bad) adc add pop cld pop frstor jbe lcall add ja mov das mov stos pop push in and push sbb add xor test inc jmp je mov or and out push jle dec cmp std inc data16 inc xchg mov addr16 and mov scas idivb ror cmpsl stos into lcall push and jns orl test inc outsl push mov sub xchg mov loopne inc popf jnp push pop repnz push sbb pusha (bad) xlat (bad) and loopne sti sub outsl js xlat insl cmp and fwait orl mov xchg jns repz add add add sub popa pusha inc pushw stos inc cmc push pop jbe add mov orb sti mov push (bad) fbld sub mov insb test loop sti inc mov jb jnp pop pop loope adc add mov pop lcall sbb loope mov mov insb add iret sub jge stos mov pusha iret ljmp pop or call lret or pop in and fmuls loop insb mov pop dec xlat scas jo sbb dec js xchg inc insb pop xchg lea add add push adc int3 jo fsts add cld (bad) ljmp scas jg and test jae xchg nop mov inc push (bad) int3 mov jp push (bad) clc scas lds fs aaa lock add inc and insl mov movsl addb pusha mov fimull jns mov shlb add pop lret idivb mov push daa mov std or (bad) imul addr16 mov lock out ds loope inc xor xchg aad mov or insl pop lret add mov stos sbb dec push xchg cwtl or icebp push sti inc adc in cmc in nop aaa (bad) pushf in (bad) daa call jnp ss mov lods popf icebp test (bad) ss call pushf iret loop xorl sbb (bad) pusha jmp mov fwait push pop mov imul (bad) xor mov pop and inc xchg lahf jmp fisttp add add push inc lods jp mov inc (bad) xchg add cmc popa loop or jns and aas sub pop dec (bad) inc and push push fist cmc dec movsb xor scas jge sbb in gs nop mov movsl dec or xchg push jb repz sbb jg add nop mov dec add adc jo dec stos cltd xlat ss or (bad) fwait (bad) lods das pop sbb xor jns inc mov test or mov xor mov inc push (bad) pop movsl mov icebp adc mov xchg data16 fimull jp mov shll sbb rclb or scas xchg stos mov sub add and xchg cmp jle xchg adc les jne es xchg in fdiv jl out add jmp aam loop sbb insl xor and mov mov fldcw lahf mov jmp loopne int testl lcall (bad) lock jmp mov add jl insb call lods mov sub mov xchg pusha mov ds dec sub shlb test pusha cmpsb mov mov roll fs xor repnz sbb lea lds (bad) lret out iret or add sub insl mov out dec push in mov pop ficomp cmc sub pop ds mov pop rcl cli cwtl out push sub ja sub sbb scas and jl adc xchg aaa (bad) pop xor dec jg daa popf (bad) ljmp jnp add lock sarl ret inc aad js inc daa icebp mov scas ss dec add jecxz ret adc fs je mov pop pavgb out mov push xchg sub gs ret inc xchg fisttp push inc decl inc out adc add shl sub push adc add add (bad) jae aas sub dec push sbb xchg push jg out mov jg xchg insb jo aaa mov inc into xchg stc ljmp loope cmpsl xor pop loop cmpl popa rcrl lds imul xchg repnz fdivp aam add add sahf sub enter jne leave push xor jae sbb adc mov or pusha scas or mov cld jo fs sub xor or daa lret sub ss mov pop push cmc dec sub ljmp scas or arpl add add (bad) into enter sub std out imul in negl pop xchg mov gs jecxz in xorb cmp shr dec ja gs fmuls and test arpl insl push pusha sbb push aam clc fisubl mov cli xchg ljmp jg inc add add divb mov sbbl rcrl mov fwait popf aaa aas gs outsl (bad) and jne fwait mov arpl sub pop xchg out rcrb loope mov cs xchg adc cld iret aad repnz cmc (bad) jnp xchg decb ret adc mov xchg jp pop pushf aas mov add or aad adc cmpsb inc or push cmp push pop loope mov jbe mulb or ja jb pusha adc fwait xchg nop aaa xchg sub jae adc dec call add pop pop shl mov sub insl cwtl setbe adc or das mov icebp jae jecxz int pusha add add jne test aas mov enter adc arpl pushf add fs xchg sub pop lret (bad) dec adc dec or sub pop inc (bad) xor mov or fisubr cmc movsl push std xor das cltd push loope jl,pt (bad) insl gs aam imull mov pop fistl hlt dec add popf in test movsl imul xchg pop mov inc cmc mov jl push ret mov je sti outsl enter xchg adc mov push lods popf push adc (bad) imul mov cltd movsb rolb sub test je inc dec pushf push inc sbb sub fs add clc stos les push test lcall mov jbe mov xchg adc mov shrb lods dec sbb frstor add stos imul jecxz test and xlat inc jns or lcall dec fucom mov add add push arpl ja jb aam xchg cs pop lock lcall aaa push sub call ljmp xchg fcomp (bad) movl cli les adc loop test test ljmp pushf inc and mov xchg mov aaa or dec int pushl xor flds mov dec push or shrb inc or scas loopne inc rcrb clc (bad) cmc add mov test gs xchg out or arpl addr16 pop cld pop or (bad) mov or push stos mov out lds add inc cmp or push jg aaa iret push int3 jo icebp adc (bad) ja into pusha ret stos outsb sbb xlat push adc pushf popf leave cmp and pop inc dec mov aad divb mov fs mov mov push scas lahf xchg or mov mov test mov mov xchg mov data16 and (bad) shrb int3 push and sahf dec lods push stos fldl pop movl fdivrs cld mov arpl out dec adc cltd pop mov add add xchg inc pop jo cmpsl pop repnz popf movsb sbb pusha movsb arpl or outsl cltd push mov or add (bad) repnz or mov xor mov fmuls jae ljmp pop aas scas cmp jmp ret mov test mov sub in pushf fbstp add add ficompl aaa xchg xchg gs popf cmp (bad) xchg push mov cmpsb cmc insl adc iret out icebp push mov stc lods call dec xchg cltd ret fcomp pop pop (bad) in cmp adc cmp fimul mov movl std add add lahf mov add jae lcall iret shrb daa call popa ret scas stc jo lods lret pop dec xor xor mov sub cs mov pop xchg cmp adcl (bad) (bad) out xchg sub mov inc iret mov jle and add dec cmpsl ret inc fwait loope mov pop pop std ljmp xor fcmove pop mov mov (bad) xor out pop outsb lods fidivr sahf ljmp jb ficompl adc lods xchg movsl lds insl and push lods arpl adc loopne and icebp jg mov adc push add jle xchg loope cs pop push fstl and adc mov dec nop stc das pop inc test push fstp xor jl int3 call out pushf ret adc test xchg mov rorl fs add in arpl xor aaa lock scas push loop (bad) insl lds call loope jle pop adc aas out and scas push pop stos sbb xor sbb lock insb nop mov (bad) and push mov push sti or sbb jl ljmp lret add imul loope inc decb adc add add mov mov mov repnz adc jb clc test and mov jnp sbbl mov inc mov xchg mov dec xchg xor aaa inc add dec std sbb inc xchg fistpll sub push add popl (bad) shl jle pop adc clc pusha lds stc aas sub frstor ds insl mov scas sbb push insl pop xchg out mov hlt inc and cs lahf rcrl push int mov mov add dec mov loopne jmp fsts pop je in rolb add xchg push jns jnp pusha lods mov adc and sahf add out outsb or sbb iret fwait push popa dec mov fstl test std jmp mov roll inc xchg fbld dec das mov fimull or (bad) push int3 cmc insl add add inc test out add and fmuls loopne jns mov add adc dec (bad) adc lea mov bnd push dec iret nop jnp in in test and inc adc scas (bad) jle in jnp inc nopl in pop (bad) aaa sub aam repz test out (bad) add inc add rcr sbb cmpb inc dec xor movsb xchg les pushl and insl xor add mov test fistl push stc ds aaa inc xor push pop push xchg lock (bad) aaa aas rclb add sub xchg adc or mov sahf mov movsl scas xchg roll loope mov push adc cmp pusha xchg xchg je jb nop (bad) arpl push iret bound gs sub and sub clc (bad) ljmp test aas ja or add xor push inc pop push xchg and jae push mov inc dec icebp mov pop into shll sbb inc loope sub dec jne sbb add or loop hlt cmp xor push push imul sbb add add (bad) lahf lods mov pop lods test lock pop pop mov add add push dec and inc sbb mov xlat lahf out and mov add test loope divl mov daa call insl xchg outsl sub mov rsm pop jnp mov jp and or mov add mov loopne dec stos sahf ret xchg test xlat inc (bad) mov fs test inc push adc ret daa pop lret jg lea das sarb ljmp push fistpl loopne aas out push loop mov negb (bad) (bad) ficompl push mov add ret scas lods dec fldcw sahf pop mov pop out or (bad) out bndldx sub in mov cmp adc stc std jle sbb mov dec jle push mov xchg (bad) shrb in dec lahf pop popl dec sbb mov jg xchg loope outsl mov cmpsl jp xchg mov dec mov add push aaa ucomiss cmpsb pop xchg test lods or ja xor cli cwtl mov dec or mov inc xchg push cmp push mov int3 mov adc push hlt sub and add ljmp push test sbb add add pop mov dec js adc insb pop xchg out add outsb fnstsw hlt xor loop xchg pop sbb mov dec daa loop jmp (bad) push ljmp test in outsl cltd adcl jo and clc test jb ljmp mov mov mov jmp dec cmp aam sub pop in adc inc jle xor fs (bad) or (bad) mov stos inc pop insb inc test mov fmull or mov xchg xchg imul std pop ds ficom or data16 inc jg js adc sub mov xchg sbb out sbbb add lahf (bad) xchg lods out sbb arpl and std jl add frstor jne mov dec jle daa popa mov mov pop fucomi or adc addr16 ss xchg mov sub fucomi push push push (bad) pusha add js fs int dec push cld mov inc pop push and adc mov addl lret pop adc aad cmp or mov jp pop push push pop xchg dec cmp aaa push xor data16 cmp ret push jns push test dec ret sti add dec (bad) xor mov inc cmp (bad) (bad) sbb (bad) xchg movsl push push jnp mov dec ja imull sbb stc jl lcall sbb outsl adc ret cmp push lods push lret iret mov sbb lret aas jbe xchg adc out in in jecxz sbbl xchg mov ljmp cmpsb xchg in int les push sub mov add in lea adc xchg repnz ljmp push dec sbb (bad) cmp pop adc aas fcomp mov mov lods out adc andnps fistl hlt (bad) mov loope mov adc inc push cmp add lea add test jbe or sub outsl sbb imul push daa dec push cld ss aad sbb out lock cmpsb sbb decl into in lods pop ret enter sti stos imul mov and sub std arpl xor dec (bad) push sahf add add xchg adc dec (bad) fisttpll or xchg xchg mov pop adc xor adc xor sbb xchg or mov pop mov mov cmp pop daa sub mov push out add push sbb out jg xchg sub std cmc inc cmp leave ret scas (bad) sbb cmpsl jg in arpl ret sbb push sub push lret mov (bad) nop icebp mov sarl lock pop out fwait (bad) imul jp jne popf insb fisttpll call mov mov inc movsl pop push xchg repnz stos mov add mov adc mov (bad) es pop sahf mov xor imul add rclb outsl into loope jp mov jp sub xchg packuswb pop jl subb int dec sub ret repnz loopne scas add je sbb adc push mov and leave and cltd popl cli jne int movq push or mov sbb push or dec inc dec xor aaa imul sbb jno sbb cltd mov mov pop xlat inc cmp test jo pop enter rclb pop rorb notl (bad) test pop push cmc add add aam sub xor insl sbb cmp icebp pop popa mov push movb cmc sub fild dec movsb out or lock outsb pop and lret scas sti into adc loopne jb repnz stos mov lcall jge movsb jb bound push shrb mov add add popf dec jns dec dec bound clc cltd movsb adc cmp push and jge je outsb xorl loope mov jae sti stos popa movb mov sbb pop mov cld add repnz xchg dec inc movsl sbb or scas xchg jno push daa inc jne xor out cmpsl push icebp jl adc add add add addr16 notl push push lahf popa in (bad) lret cmp or sahf jno loope scas xchg movsl (bad) out nop fsub lcall mov xchg mov pop push stc adc je outsl outsl enter push sbb ja add data16 aam cmpl jns lret aam cmp add inc aad cld pushf push and mov add fwait sbb mov les lcall stc jmp xor lods or pop dec cmp xor jmp das fbstp mov sbb test in push icebp cmp add je add in repnz sbb pop hlt jle pop xor inc dec sti loope jl movsl imul out or insb jl inc or mov cmp push nop aaa decb pop push jnp inc daa (bad) jmp xchg pop shrb (bad) jae or mov xlat add leave js add mov and in out popf and cmp jge mov test mov sahf rorl dec pop pop push push cmc out pop cltd adc mov xchg fistp cmpl cmp loop mov (bad) cmp mov add add mov sbb add shrl push mov pop push imull movlps pop or out mov sub xchg cs xchg pushf push pushf jle push fild mov inc and (bad) push hlt insb jge movsb stos mov cmpsb inc sbb aam pop push leave popf leave cld mov add cmp xlat rcrl inc mov lods xor dec lret repz mov shlb xchg (bad) out inc out inc stos cmp cli call in dec out insl push fidivr sbb ss in mov sbb daa adc dec int sbb insl leave cmc pusha adc aas xchg xchg cmpsb xor push (bad) push xchg int3 les xor hlt mov pop sbb imul push cmpl ljmp jae mov cld sbb bound fadds rol pop push out (bad) std fsubrp (bad) xchg cmp add leave andb jae in pop push ss xorl icebp ss add add xchg and adc pop xchg test jo inc mov fs je test ds add idivb scas jmp inc lds cmc pop push cmc ss aam sub (bad) aad loop lea out (bad) lcall rorl push sbb test dec sti insb dec ss adc add add fnsetpm(287 pop mov int push shll push int push testl pop sbb insb pop das shl jmp dec enter (bad) lods dec out inc lock mov xchg fild cmp and in cmp cmp xchg icebp arpl std insl enter inc cmpsl cmp jbe pop inc jecxz adc inc xchg mov data16 and data16 int3 pop and sahf dec cmc push stos fsubl movsb cmp xor and je insl and or jno vcvttps2dq xchg in cmp fimul pop jbe add and dec jbe aam inc mov push inc inc je scas imul aaa (bad) out mov mov (bad) je pusha repnz sahf cmp jo test and mov ret pushf das fldl mov leave mov sbb push call mov mov push push in popa fs mov add mov int3 lock mov (bad) enter cs cmp xor or pusha and push pop in xor outsl je push push rcll adc xchg ss pop mov jg xchg movsl les fimull push mov jb int3 xchg sarb mov add sub and nop (bad) add adc push (bad) lock iret aas scas add jecxz lods push bound leave into add rolb rolb inc pop xchg jns cmpsl fisub outsb ret fwait push call cli sbb imul in das mov jne add pusha repnz enter lret sar dec or repnz jno cmp stc inc fisttpll xchg cmp mov or sub jecxz mov push or addl add repnz push insl pop loopne pop xor push sbb jno,pn call mov inc add je inc xchg lcall dec cmc cmpsl pop jecxz outsl icebp sub jmp mov icebp sub mov jl jle push jle sbb call movsb mov push das push cltd pop jl mov nop pop cli insl sti mov mov fs ds xchg into rcrb loope mov add (bad) pop in addr16 movsb push aas mov mov fiadd cmpsb jl dec adc notb lea cmpsb push pushfw cwtl push and cmpsb mov cmpsb int3 stos in out sahf test push mov insl jne scas cmp inc cmpsl jne fimull mov mov sbb fwait addr16 jmp in rorl cmp xrelease jno add or je and dec xor cmc (bad) cmpsl stos cmc in pop mov lret in add test and fs pop movsb mov sub mov outsl cld aad pop into std lds add dec jne sbb pop in jb mov cmp mov cmp outsb insb outsb shlb in enter in hlt add jge sar lret sbb pop adc mov aam mov ljmp mov sub or scas lcall mov mov add test sub sub (bad) enter cwtl dec scas pop inc add test sbbb in xor rorl mov xchg movsl jo push fsts sbb fsts xor loopne loope insb push dec dec ss sbb (bad) aaa imul adc add idiv scas mov mov cmp pop sbb test push lahf lret gs (bad) inc cltd jp ficompl (bad) cld adc cltd pop push test mov sub or inc ret and dec jl jmp (bad) push jg mov lds xlat xor add sub xchg or shlb loop dec into add cmp (bad) cltd pop mov fwait xor test in and mov ror (bad) lret mov ds add mov xchg ffreep dec mov das int3 mov stos cmp mov cmc pop add pop out (bad) repnz xor xor test stos cmpsb scas dec add fistp xchg int scas fwait cs dec inc ret and jle je imul push dec sub cmp fbld mov test add mov lods popa add lods lea rcl add dec jg les loopne push into sbbl fcomps cmp aam and add js fmul xchg daa push loopne mov dec test mov (bad) lret (bad) fdivrl pusha xchg or scas adc pop enter aaa into int cmp test gs lods aas out or add cmp cmp sbb inc cltd mov (bad) clc int jl and fldl2e repz orl (bad) ja stc ret loope xchg pop lds jmp pusha in or lcall aas les sub cmpsb test fucomip pop fs leave mov push sub add add cmp xor icebp xchg pop dec inc pop or jns adc push rclb fistpll les and ljmp std mov or sbb repz mov push adcl xchg push pop lea outsl mov sub je inc rcrb xchg lock add add daa int3 les pop fist hlt cmpsb xchg sbb pop adc aad adcl (bad) fimull push stc imul push std jno loopne aad scas xor out bound gs xchg cmpsl ret andb jecxz lea xchg or lock hlt mov fisubl pop popa cmp mov xor mov fs loop loop pusha jo and mov jle and add outsb dec out adc (bad) adc lret sub push pop sub push cmc cmp aam and or jbe imul sahf sbb add jmp jp add cli or insb nop pop jns imul pop jbe and dec jbe aam adc adc jnp iret cwtl xchg arpl sbb jmp popf add jmp sti mov pop ret jecxz fidivl clc (bad) jle sbb adc add push jmp jge add addl inc arpl in add ret pop inc jle out aaa fdivl gs rorb stos popa je repz push xchg es pop mov pusha or sub mov push sti jl das pop rcl dec jg mov jns add jmp aam fisub insl or add jl fwait push pop add cli int adc cmp rcrl ljmp sbb mov jl (bad) out jno sbb outsl pop (bad) push loop sbb cltd mov mov mov mov popa mov mov jmp pop push sub les push popf mov mov add ret stos (bad) xor jae push mov mov mov addb and arpl sbb fild addl (bad) cwtl add pop sahf mov mov jae stc ds fcoms outsb or or mov xchg insb jno cmp jl ds pop add and add add jmp pushf pop or ljmp jae je lcall dec cmc jl arpl mov (bad) cltd (bad) fabs orl je inc add jo or xor xor orl test int3 shrb xor mov jle xor xchg and (bad) add (bad) idivb scas xchg es (bad) adc call cmp icebp jle add aas out fistl sub pop mov sbb sahf out cmp pop jl popf push pop or out sbb cs lcall jnp jl stc je leave js push pushf lret xor imul pop xchg mov xor ret sbb dec and int3 lret and nop (bad) mulb fbstp jo sbb jmp and mov outsl test ljmp jge pushl dec out mov (bad) xchg imul subl lcall mov loope (bad) or or xchg sub dec push loop dec outsb je shlb in lret fmul imul mov adcl jb outsb scas xchg movsl sbb je arpl jg mov push lahf cwtl outsl imul add add mov pop (bad) sub or call repz pop xor dec pop mov test int (bad) mull inc inc fxch call xchg in les rclb stos and xchg and push push call je adcl cmc imul add inc xchg push sbb push sarb or push dec push hlt les sahf mov and mov sbb enter inc daa jecxz jle fistpl dec push test pop push push sbb (bad) xchg movsl adc and cld add je sbb add add inc stc mov jnp sub cmp lret pop pop repz and icebp sub push pop ss add (bad) jae imul inc xlat js rorl out les (bad) cmp aad mov mov jbe stos cs int cmp mov jecxz loopne cmc scas push popf roll push xchg mov popf jbe add add popa cmpsb movsl mov push add inc cmp or (bad) mov mov popa pop push sbb push jb rorl ficompl (bad) nop push jbe push mov mov ret and push sub popa scas mov jle push bound cmp test cwtl xor (bad) cli ss jno xchg fistpll rorl loop std jb mov push out fdivp push dec ficomp xor add fcoms xor dec std push inc push icebp mov lcall ret inc in movsb lea sbb mov add outsb or cld fs popa mov sbb xor dec jp mov push push pop les or ficompl xchg insb fcoml xor push and jnp xchg inc pop jl outsl or negl and jb ljmp lods and adc ret outsl add xlat lods push scas into adc gs lods jmp aam stos cmp pusha fs pop jmp add xorl sbb dec fistpll call cmp jmp bound push jae aaa jno les or cltd jne dec testb (bad) cmp push pop or add add lcall movsb xchg pop std jo in xchg lret push sbb or pop les add xchg jnp mov adc push scas adc xor pop push inc xchg arpl dec outsb sub mov popa ret daa xor sbb popf push repnz add add and lods mov jae jecxz jbe cmp (bad) xchg push lahf sub movsb mov pop pop call mov mov pop push lahf cld jo fs mov (bad) faddl (bad) fisttp mov test aam dec jne pop inc add (bad) aam out out movsl push inc add cmp aas imul add cmp push icebp sbb addr16 cli ret adc add out lods pop repnz inc jne cld aad int nop jmp sbb (bad) mov je imul aaa test jle lods mov xor loop jo,pn std jne (bad) repnz mov test ljmp add add or daa cmpsb leave mov lods ds ljmp shrb loop out (bad) xchg fcompl movsl jae mov int3 mov rcr mov cmp pop sbb cltd stos bound ret and cmc bound xchg inc mov dec movsl mov mov add mov les add add pop cltd pop popf ret in lds (bad) xchg out sbb inc cmpsl jne in stc inc stos cs pop add add mov cmpsl int3 push popa lea jmp xchg or stc or fucomi dec xchg xchg cltd movsb sbb int3 mov add jecxz (bad) mov ficomp fwait shll (bad) xchg leave add xchg mov fwait stc je or ja adc test pop mov (bad) dec das pop mov mov sbb push pop nop pop addr16 mov push and pop repnz insl or add and int3 sbb push sbb test es movsb adc insb addr16 je in gs fimull and icebp pop outsl enter push mov jne pop push add mov cltd (bad) push lods hlt push mov mov cltd sarl test lahf in sbb push arpl add xor xchg mov and pop pop mov faddl testb int xchg ffreep push sub cs rcrl clc xor jmp pushf push clc ljmp jecxz or fcomps lds pop imul or push sbb cmp add mov inc xor arpl ja dec pop popf les mov adc mov pop push cmp xor (bad) mov mov cmpsb in push lods popf pop adc (bad) mov pop inc fildl mov or repz mov push popa mov std movsb add add (bad) lahf (bad) iret outsb cmp int loop cs push and mov les std ret into inc jae dec incb and in mov mov out (bad) or ljmp sbb sbb ljmp mov fcoms hlt push adc push insl xlat xlat jecxz fistl pop push imul add pushf jae xlat addr16 cs ficom and sub sbb cwtl xchg aaa test jno sbb rcrl nop sbb jno pushf (bad) push dec test sbb mov ljmp sub adc fs mov add cmp aam sbb loope rol inc add imul pop bound popf stos jmp mov mov (bad) xor psrlw push cmc ds sub dec push data16 aas mov mov and (bad) jo iret xchg repnz mov dec sti aaa nop mov cltd pop mov lahf popa ja mov xchg push add add adc mov je or lea lcall enter sub lds cltd add das cmpsb cmp loope jnp gs (bad) sub jnp into rorl pusha sbbl fiadd pop mov add sbb cmpsl (bad) add xor add add fisttpl mov or xchg sbb outsb scas frstor dec pop jle popf dec inc or push pop imul xor shll jnp stos sbb cwtl (bad) sbbl add fs xor cmc and lahf add divb je daa inc stc add add add sbb add nop lock jle scas lods add xlat and call sbb fstl test idivl cmp icebp pop xchg int3 (bad) imul mov xchg sub mov bound mov mov shll mov or sbb inc cmpsl xchg push cmp es inc fstpl dec (bad) fsubp cmp ss or aas out mov mov sbb mov aad ja sbb dec sti cmp setne push add lahf popf out jge inc jge jo ja lahf bound stc and add (bad) arpl das call or pop sarb and movsl insb lock lds and es jp lea test ficompl jne jl push popa cmp bound pop mov inc xlat mov jo je pop (bad) arpl dec test js mov imul add popf enter (bad) xchg aad mov adc adc fstpt or cmp xchg mov insl clc pop sti adc or inc sbb insl cmp stos les cld std sub cs cltd aad jecxz jne jg mov jmp push aaa (bad) out mov fsubrs add sub pop pop shlb adc es dec test push xchg sbb and cmc mov lahf inc mov xchg mov enter inc dec jmp or jno pop stos mov or sbb push loop sbb xchg add add dec test test sub aas enter fisttpl add rorb dec add lahf mov in or jb push insl xlat adc lret test inc fidivr dec xchg hlt ja xchg add xchg mov pop lods (bad) out int3 sbb xor jnp adc dec jmp (bad) cmp add rcll setbe mov mov inc dec out ficoml cs (bad) jecxz sbb xchg jae inc adc fs repnz inc cmpsl cs mov add into sbb push or dec or scas lret jnp mov test push out call cmp push add test cmp xlat pop mov jecxz pop movsb popf lock ficompl dec xchg dec insl bound adc sub cmc arpl out adc fs pop jl outsl dec mov and lcall repz sub call push add pop outsb aam pop sbb sarl inc mov jmp jg enter sarl shl daa movsb mov std lahf and push cli mov gs jno inc int push and in or (bad) stc xorl sbb repz inc call test lret das jg mov pushf test addb js add adc lret jle dec sub or insl xlat add push mov xor lcall cli mov pop cld lea cld adc cmp sub call ds xlat aaa jbe std pop push iret out outsb paddb add add add push das int3 (bad) and xchg or mov add mov enter inc inc outsl xor popa pop pop popl inc sbb push xchg mov pop data16 stos and mov cmp cmp loopne and aad jecxz dec xor aas add add notb int pop mov pop adc push fimul mov xor shll (bad) aad push rclb js bound cmpsb cs outsl cltd xlat aaa xchg mov mov (bad) shrl push (bad) repz sbb lahf aad jl add xchg pop add add jmp sub pop push xchg jbe popf adc cmp sbb jno inc nopl (bad) lret and inc stos cltd lods arpl lods mov pop sub lds es es repnz xlat pop mov pop imul and adc adc xchg shlb or inc lahf add cmp (bad) jle xor imul xchg jg cs sbb lods loopne push jns and inc add lcall pop inc or nop outsl push ret dec out xor or pop jno mov clc (bad) jle orl imul sbb add (bad) push in sub (bad) sub (bad) cltd (bad) cmc pop cmp imul mov aam fistpll mov jo dec daa inc sbb popa sbb add cmc jno sub push call cmpsb dec inc sub stos inc xchg jno les sahf scas jge cmp pop xchg add add pop pop outsb jne aam shrb push test inc dec (bad) repnz add cli jl add nop aaa (bad) xor (bad) sti jno pop push aas iret aas fcomip pop shrb xchg mov rorl inc pop scas pop sbb push mov int3 (bad) jmp sbb (bad) int3 inc mov xchg mov enter inc inc mov mov mov xchg mov jecxz pop stos pop inc dec or cmp dec aaa rcrl pop in rcrl mov loope mov popl adc out push mov mov and addr16 dec inc inc clc lea ret jl insb cwtl xchg dec add pop mov add insl xchg fucom lret fcmove push out arpl inc mov cli cmpsl scas pusha mov xchg cmp and sub (bad) jmp lcall cli adc jno paddb stos mov pop mov inc and out paddusw mov add inc jmp xchg addr16 sub inc insb int3 pop lret mov add sti bound mov mov (bad) hlt fwait sub jb push iret push sub rorb rcrb xor pop inc cmp out and mov jp jb jmp (bad) and cwtl push ret lret or pop or mov sti push sbb insl rcl push pop push ror mov daa or xchg andl add (bad) adc cmpl lcall ret outsb imul and or ret int push lods push dec test lock cli cmc je push adc lret inc and popa movsb test sbb fsubs pushf cmp pop add push add je push pxor aaa inc jbe add jne fs mov dec xchg mov push movl sbb lret das inc das mov jae and cli ret cmp in jns inc push lods and push adc sti add jo enter mov es orl cltd jmp add add add inc jb mov call arpl inc les call mov movsl sbbb pop xchg daa cwtl cld ss jle mov pop pop jecxz and mov (bad) mov aad mov fs xor das add gs cltd pop lret mov jmp daa pushf mov nop cmp add imul das int3 mov inc mov jo sub nop nop cwtl dec jb out push and mov pop pop int3 mov jno or (bad) mov rcl jg adc add inc test fisubrl imul push jg popa inc push and and mov add je daa mov popa test mov push (bad) sub iret stos mov sub jg test scas xlat add or add into scas xor xchg cmp or (bad) pop cmpsl cmp xor pushf (bad) repz and into insb or in push push fmull add add lods ret andl aas int jp dec addr16 inc push out push sahf cltd imul std jne push push dec (bad) jo fild mov jo xor and lea cmp fstl jl fidivr pop sbb mov xor push jb repz jnp jle lods add aaa sub push sti lret out paddb sub xchg sub fsub and testb sub test gs mov adc inc inc sub xchg mov adc adc lds loop (bad) insl adc add cltd sub sub outsb mov imul sbb and pop push and or out test (bad) (bad) or mov movsb pop sbb inc loopne and outsl (bad) mov jmp pop enter push sub push nop cltd mov add jmp pop push (bad) sub jno cmp ja mov push xor pusha add pop fdivs repz (bad) jmp mov and faddl ret lret in pushf mov mov and into test pop fdivr fwait pop pop add sub fnstsw sub imul add jle dec das pop xchg popf aas out jae stc mov shl push in or jae lock sbb lods cs fs add pushf inc mov mov pop add adc stc je pop adc push sub push nop jno repz sub push and pop test lock ss jge shlb jo and add call fwait push in jns ljmp and mov mov pop (bad) out xor inc jmp mov (bad) push push (bad) in stos dec jne push add sti loop jne cmp popa pop adc popl add jne jmp rcl dec sbb and repnz pop fistpl in loopne mov jmp cwtl test sbb pushf stos push sbb sub ret sti testl outsl mov mov lods xor push nop lcall (bad) dec push (bad) add mov mov add add shlb loop pop insb jge cmpsl pop repz mov sub push and imul das adc adc xchg inc out (bad) mov data16 sbb (bad) (bad) leave sub icebp mov jecxz out andl (bad) pop addr16 aas sub add jmp mov or outsb dec sti insb cwtl cs pop fwait arpl cwtl inc subb sbb xchg cs fs jbe (bad) int xor enter pop and iret add nop push movsl (bad) fsts pop dec icebp test xchg cmpsl icebp ret ljmp and add loop xor mov sbb movsb jmp incl test and (bad) xor pop mov divl lock dec test sahf es push das int3 ret lock and repnz dec add test mov out or pop fisubr mov add add add add cmp imul mov jg ret pop rclb out sbb scas and jl cmp movsb sbbb push pop inc jge jge outsb call aaa divb sarb mov cmp test add aad sub fwait mov inc arpl pushf or add add cmpsb out fsubp sahf out insl push addb test xor dec flds mov idivb scas xchg jbe cmp mov push jae (bad) inc clc pop daa test call insb jo repz sub fxch jp jno sbb fisttpl dec sti insb sbb push out leave and xchg fimull and cltd sub pop sbb je out mov test aam jb pop pop push clc push cmp dec xchg jl ljmp cs (bad) sub add icebp paddb add add mov adc xor xchg and sbb ja imul add add mov dec xchg ss lret push inc sbb jne addr16 mov ja out mov cmp xchg stos stos and mov adc jo adc cmpsl js in cwtl dec out mov and ds sbb sbb mov (bad) xor push push fucomp stos outsl sbb push or add iret ja mov xor addr16 ja,pn orl stc jle lcall adc int3 jp push ret inc data16 fistp xchg mov jl push int push loop mov or mov sbb popf test ret repz jp (bad) and jp or mov adc daa add ret cld test stos inc cld mov mov sub pop jne test pop push fimull dec (bad) cmpsl cmc pop adc aas gs in adcl xlat (bad) or hlt dec adc xchg push insl fsts outsb or pop insl xchg fucom sub add loopne jb jmp stc stc inc mov fs test stos sbb nop data16 sub (bad) pop data16 xchg mov je ljmp test jl xor cmp lahf jl cmpsl xchg jbe push stos popa cmp push cmc cmc ret (bad) inc or int3 cmp and mov repnz adc fcoms push push mov (bad) xor mov adc aaa aam test in addr16 jp jp and ds iret ret shr sbb or dec sti insb dec scas mov rcrb jo inc cmp cltd rclb sub mov add mov rcrb stos aaa mov push inc cmc cmpsl jmp jmp cmp add int aaa cli pop jno mov clc (bad) jg lods adc sbbb inc cmp popa sbbl stos jne cmp (bad) loopne mov test in dec (bad) dec jmp lods sub jbe mov add add mov xchg fisttp mov enter mov jg fisttpll or aad test mov jle push sbb jnp xchg ljmp or cmc sbb cmp or js setnp rolb inc inc in and lahf push cmc daa push jb insb mov enter mov popf nop or mov emms jnp fnsave (bad) (bad) repnz mov jnp cmp xchg jbe pop fwait popa cmp push aad mov test dec data16 pop cmp sub sbb int stos adc inc push dec pop repz ja mov cli mov jecxz (bad) jmp call jns push push adc or lcall movsb aaa lds pop adc add testl and push adc lahf pop in jnp dec sbb insb (bad) (bad) sub add pusha cs pop sub xlat test aaa popl mov jno mov jg and in inc jo inc cltd or mov imul push pop and test and xor jge fcmovb lds fmull inc jp mov sub jns test xlat pop addr16 ja add pop xlat pop aas jge arpl pop in addl stos stc push push rol clc dec pop push sbb fwait mov popf in mov pop sbb xor sbbb pop addl pop sbb mov bound mov mov aaa cmp mov or loopne sub fisub aad add and dec xor add test dec pop adcl ss adc or loope dec fisub sbbl mov dec mov lea mov leave sti arpl sbb dec loope sbb dec xchg xor and (bad) pop in xchg (bad) mov daa add and sbb cmp cmp icebp push mov cmp xchg push dec roll push pminub cli sbb sti insb nop fisubr xchg out xchg pop or dec inc adc das movsb loopne test sub jo mov lcall dec clc and das xor movb push (bad) popf xorl add add jle in jb mov sub cli and test mov jmp xchg or test xlat rcrb sub push into cld in addr16 add scas dec out imul xchg push sbb shrl (bad) xlat or pop das adc movsb out mov add add mov sub push inc xchg cli lea hlt sbb pop ret comiss pop mov inc cmc (bad) push arpl dec adc loope sub cld push je add aad scas mov lea mov cltd aam ret fcmovu and (bad) lea mov lds add add leave aad repnz loope sbb mov mov pop (bad) pusha imulb push (bad) mov inc lcall dec or test inc push or ffreep pop ljmp dec clc prefetch xchg xchg (bad) mov stos test std or mov je std mov dec adc mov or mov insb sbb xor dec xor cmp insb rcrl int jb inc lahf ja push add test mov and lock adc cmp xchg test sbb jns paddb fxch aas inc mov outsl int3 daa sldt add jae in xorb jmp pop pop push adc popa mov test rcrl mov mov push ja inc mov adc inc xchg lea lods push mov xchg (bad) cmp push clc ljmp icebp test push outsl mov enter repnz add movsl pop cltd scas xor push out test push pop push xor hlt inc and pop mov dec sbb pop scas xchg cmpsl xor push ss sbb lds scas xor pop mov popf cmp das or pushf push jns push ja sbb lret cmp jno fidivl leave mov sub addl jmp test sahf in arpl pop push sbb leave lods ret sub mov mov fmul mov cmpsb (bad) push push lcall push xor xor das push adc inc mov xlat add and and or jbe push cwtl decl sbb inc jbe jecxz cmp xchg dec js cld (bad) xchg dec (bad) fiaddl inc xchg mov jmp jl jbe sbb pop divl adc ja push in xlat loop push jmp gs xchg pop dec lods sub or sub lret mov sbb icebp (bad) mov pop push in inc add add xchg and xchg or and push add xor mov jbe add dec xchg pop dec (bad) and divb mov inc fstl loope dec xchg sub repz xchg add cmpsl cmp je lods mov (bad) pop pop enter lea sahf inc stos test insl pop pop xchg cmp or add add push gs ja movb pushf ret cld xchg add test mov repnz jecxz pop push and jno jo cltd xlat ljmp pop (bad) popf fs pop jne lods or ljmp cmp out xor cmpsb sbb xchg clc in jl push out (bad) (bad) mov mov add add mov or and (bad) loopne lock addr16 stos push sub xchg mov out (bad) xor es shlb cld add sbb out mov inc aam loopw jp icebp mov push push push repnz outsb mov or mov scas out pop and test fcmove add stc arpl and sbb je pushf daa lcall mov (bad) dec call cmpsl inc sbb aam jo adc push jns lcall jg adc and les jae in in shl jl rorl int mov cli shlb mov arpl sahf je pusha ds mov rol mov dec xchg push jnp pop inc mov pop push xchg enter lea in lea jp sub outsb lods sbb xchg (bad) (bad) pop scas cmp xor insb outsl js and fdivp sbb add cmp mov mov sti sbb clc je lcall adc or pop mov add xlat sub jecxz fiaddl insl test daa icebp mov stc xor rorb enter fs in adc mov lock js bndstx (bad) lret fimull movl add add je mov lds scas stos mov pop jle sti loop cmp push pop or mov mov cmp icebp push outsb jl (bad) daa in dec dec sbb cltd in jp cmpsb xor sub cmp and orb inc out shr in sub test and xor add nop inc (bad) movsb jno imul das lods jecxz xlat adc fwait xchg mov pop dec in orb ss lret pusha lea jecxz inc dec icebp dec cld sbb int3 out inc pop cld cmp push out shll and leave dec add xor cmp cmp or add pop scas push arpl mov sub cwtl into aas add (bad) pop aaa jmp sbb mov mov jnp aad loopew or hlt jle mov xchg hlt dec inc xor push insl cmp jae push mov enter xchg jnp xchg sbb cmpsl insb inc insl mov aad cld gs mov and jb or pusha dec leave lcall out ja cld mov mov push das mov dec jbe inc xor test jl mov and mov sarb add mov jbe (bad) aaa roll or add sbb andb add add add add and mov sub mov cmc pop jge data16 mov mov sbb outsl jnp lcall hlt lret mov ficoml hlt ret outsb cmp scas xchg or movaps jg loope sbb xchg cs jb and add jmp cmp push adc iret cwtl ljmp daa imul popa xchg add inc sarb test lods popf test mov mov mov jb mov in incl or add fs dec mov ret or mov xor xor adc cmp push stos adc (bad) mov loop loopne add add jmp mov sbb push mov stos aam in adc sbb test pop mov mov and xor or insb jle sbb mov pusha pop cli test ja sbb xor outsl adc xchg push popa ret cmp cs add add test imul lods rorl loop loope shl (bad) jae or cmp cmp xchg imul leave xor leave lret jle xor mov mov (bad) loopne push sbb scas xchg es inc inc and mov mov addl fsubr incl add add out xchg cmpsb jns sub lcall push sub jae mov pop push mov add xor imul pusha jmp negl adc mov aaa cmp nop arpl sub lods inc push cltd mull sbb data16 imul sbb insl cld icebp add xchg incl add dec pop adcl ss add cmpsl (bad) fnstenv push lret (bad) inc cmp xchg addr16 pop leave in push xchg iret mov cmc mov loopne cs or inc xchg pop lea rolb dec pop push mov incl (bad) mov scas mov mov cmp and ds add xchg fild subb jmp xor jo pop xchg sub aam cmc outsl xor leave fidivrl sbb jl outsl xor nop popf addr16 inc inc sbb ljmp popa lods sbbl sub adc push idivb xor adcl rorl and and add mov and loop sbb sbb into (bad) xor and mov sub jle out xor mov mov or sbb ficompl and sub pop adcb pop or test mov push jp jecxz mov fcoml xchg cwtl je or add add xor mov dec mov mov jno shl mov inc lahf cwtl sbb dec fsts cld lods out lahf pop icebp incl xor sbb in (bad) xor pusha push sub xchg mov pop divb inc shll stc adc fwait sti fisttpl cmc fcoms mov pop and sub and and and std int3 scas add lret lret rorb rcrb cld pop sbb leave push hlt add in jl mov in negl add ds fdivrs cli pop mov or ficompl repnz add add and push mov add xor imul pusha (bad) stos mull adc mov aaa cmp mov ja inc popa mov mov mov imul sub inc xchg jp push shrb stc mov cmp rorl mov add cmp xchg mov and cmp mov mov mov mov inc sbb lds test arpl xchg jmp adc loop mov out shl ds (bad) sbb clc push mov movsb cmpsb or lcall add pop mov test cmp pushf adc ja mov sbbl sub jmp outsb pop fildll pop pop lods bound lods (bad) push hlt cmpsl xchg scas lods xchg jp sub xchg inc shll les pop repnz xchg jmpw pusha xchg stos add add add add leave pop add cmp fbld icebp adc xchg xchg fisttp cli scas adc and iret cwtl mov cmc inc xor push repz std mov es repz dec mov or adc and loope mov or push pop push inc push daa push add nop out xchg fisubr sub das ja xor call adc dec mov inc daa (bad) jmp xchg rcrl stc orl jno push inc aad repnz icebp jne fs mov sysexit xor mov mov cwtl (bad) pusha mov sbb adc and xor lea mov leave std arpl sub dec loope pop fisttp ja (bad) into xchg pop into and aam inc and pop adc mov jb sub sbb fsubs pop imul xor repz lock fildl mov jnp jmp out mov add add ja popf inc cltd outsl sbb (bad) arpl outsl xchg jmp enter data16 pop xor or cmp mov aad cmp int repz out adc das mov (bad) adc adcl lret mov pop ss mov add add and pop dec mov movsl xchg movsb push aaa inc jne mov adcb loope sub ss pop inc out push and mov adc aam cltd mov cmpsb push pushf lock sti insb jno loopne je popa mov cli aad adc in cs sbb test repnz inc adc mov add add lcall pop rep xor popa test cmpl pop cld adc mov or mov lret jg adc pop sbb or in popa aas cs es ret psrlw push addr16 mov or test into dec jmp jae scas sbb sbb or xchg cmpsl mov bound clc loop stc cmp imul push outsb mov or aaa jp stos and xchg stos mov or cmp or sbb scas jl xchg into xorl or mov add add inc daa mov mov cmp xchg sbb lock into push pop push arpl aaa dec dec inc jl out (bad) jo les xchg mov and imul (bad) fistpll mov mov pop insb es (bad) fldt dec add pushf jmp fcmovnbe cmp std adc mov push or push pop xchg ds fmuls adc outsb cmc push mov and pop pop ret mov adc orb fbstp inc pop jo jge mov adc adc xchg xchg std dec pushf pop decb xor sbb inc jbe xlat or adc rcll lret mov adc pop mov jl push sub popf inc sub cmp loope sbb push xor xor mov aam dec mov cmp xchg mov jb mov lcall or stos xchg add jmp cmp cli add add fucomi jle cmc pop sub xchg push mov cmp fcoms jns mov rclb pop fwait xorl xor pop mov inc lahf (bad) push mov mov int sti testl xchg adc (bad) arpl push xchg jns movsl adc inc pushf cmpsl inc push stos imul add js jns adc adc xchg sub xorb aaa (bad) xor xor js lods fwait adc cmp push in push jle mov mov add nop sub loope mov push (bad) jno sbb sbb addb dec addl add add adc lret mov fstpl pop call xor ljmp enter mov stos adc sbb daa js fs adc jb adc (bad) pusha xchg pop mov dec call call (bad) jo mov dec dec pop inc ficom add pop inc pop jg outsl or mov and sbb lods daa jb push jmp repz mov mov arpl lods je mov es in pop sub lds mov mov xchg lret daa movsl hlt movsl push std (bad) pop mov mov add add push fcomps adc or fmuls out fcompl cwtl or mull add js xor mov lods aad cmp fstl add cmp nop je fistpll pop decb xor ret scas lods inc out gs fcoml fucomi and cld xchg lock dec mov (bad) ljmp inc add add dec cmp dec xor cmpl and cmp cmp xchg addr16 adc repz mov and rcrb test pop fwait test inc or scas push mov cmp mov jo sub test rcrb push and push shlb in cwtl push dec outsb leave add push or push (bad) mov rcl adc mov lods movups paddusw add ja mov pop and decb xor push mov daa xchg test pop or jl in and mov lahf sub inc mov mov cmc mov pusha add pop stc mov popa cmp mov xor adc cmp imul sbb cmp jecxz mov push (bad) xor imul or popa pushf test out push and push shlb jecxz lods pop fistl test dec fistl push pop jo pop pop mov cli int adc cs pop pop sbb lods xor sbb stc je lcall dec cmc icebp stos stos adc pop (bad) pop mov cmp mov jp pusha lods (bad) mov sub fbstp jmp pusha jmp loope and add insl push mov in fstp adc cmp mov enter leave cmpl in in jge or testl imul xor cmp push xchg push fstl dec adc sbb fwait mov jb mov outsl jne add aam int3 outsl xor add sahf pop int movsl in xor jle cli stos mov (bad) ja mov sub test sub mov fbstp aad iret shrl jg enter (bad) mov sbb popf lods mov fwait shll jecxz stos add jo test orb mov mov sub jle sbb inc pop mov mov cmp jne push mov push sbb cld outsb and inc popa imul xlat int3 test jb cmp dec sbb popa or mov sbb fistl cmpsb pop call push sbb add int3 fcmovb (bad) cmp sub lods daa lods pop movsb outsl and and inc out (bad) call sub add ret xorl mov jno lock cli in push das mov int ja inc in sub sbbl xchg mov add push insl mov cltd xchg lds cltd push insb iret pop fmul cmp add add add out mov js sub mov or (bad) xchg es mov inc aaa add int3 jg xchg jne xlat loope pop jle sbb mov aas out add sbb sbb adc int xor fstpl pop adc push (bad) (bad) adc add and add mov testl and lea jmp xchg xlat ds mov pop lods popf pop dec add add (bad) movsl mov adc stos or and cmpsl stos dec lds (bad) sbb in rol and ror xor and jge nop cmc adc fiaddl imul inc mov xchg movsb test sbb xchg add push add aas insl jl sbb shll sbb test lock or insb jae outsl pop xchg mov sbb pop fidivr xlat adc and pop and and fildll mov mov fcomp cmp lcall bound and pushl inc fbstp (bad) lods mov int3 test jae push push mov jg movsb mov (bad) push popa cmp sbb inc mov lret in into fnsave mov pusha mov mov mov notb les std ret into dec mov dec testb mov aam inc scas js xor addr16 mov jp dec push rcl dec ja fimul popf cld mov inc sbb mov je xchg out fistpl jnp mov push mov pusha inc push xor add cltd outsl add aaa (bad) out mov mov call xchg mov jb jo push inc pop xor mov xorb inc ds and mov mov pop pusha gs loop leave cmp jbe fldt and sbb cli fldt adc add add pop jnp lret test cmc rclb mov aas cmpb adc push sbb adc or inc sbb mov insl xor xchg out vmovupd add sbb inc add pop cmp clc aaa cli arpl mov bound popa pop add push pop jle sbb popf push hlt ja or mov or cmp cmpsb xor dec dec sahf jl rcll push out jae cmp push fs or mov fs shll hlt pop enter or scas xchg stos stos jo mov adc add add push and push push or sbb adc adc clc inc or (bad) jne xlat push push ds daa pop test mov mov or ret jl scas cmp fimull and cmpsb imul popf xchg fdivrs cwtl cmp jo daa add call icebp mov rorb adc test push inc inc dec sahf push lock xor fs mov gs xor and aaa lock aam ds lods mov test out int3 dec test outsb lea sub xchg mov je in add add jbe mov mov sbb sarl mov loope add push faddl jmp dec mov mov pop push mov into nop jnp (bad) in cmpsl jne fimul push stc je (bad) clc cs popa xor into mov loop sub xchg mov mov mov xchg pusha inc mov add jb mov test aas ja pop mov movsb mov (bad) ljmp insl clc mov mov gs cmp fmulp mov mov mov xchg es or jne mov addr16 fstps push push pop js leave pop cwtl dec fst pop adcl daa das ficompl sbb and cltd or push jmp scas out sahf mov push fistl lahf (bad) push stos ret jecxz aad push int or cmc icebp ret xchg adc jmp lea (bad) jle gs nop rcll popf (bad) lods cld lret mov repnz fidiv jne add pop sti inc daa icebp add dec xor or cmp fwait sub mov test inc push pop mul ss lret sub es imul mov inc fnop das popa sbb xchg xorl sub sub mov and jl (bad) dec arpl mov add add or push mov out fild cmpsl cs fisttpl push outsw repz sti mov std xchg push les xlat (bad) mov add mov dec int3 add daa fucompp test aaa push ret in and jnp adc jno clc incl inc xlat and outsl popf fimul jae xor xor add add imul xchg jnp mov mov ret lret in pushf sbb jne and loop or adc adc jp mov jo push xchg std loop loopne out jp clc ljmp push aad in popa jae sbb cmc sub sub add jo cwtl mov cmp outsb jge cmp mov pop popf sbb dec fstps addr16 inc adc mov mov xor (bad) arpl test imul push lods popf or (bad) dec mov jmp jp,pt decb das mov mov xchg adc add imul jge jp test and inc iret mov cmp lcall in ret or or sbb andl push leave add movsb mov xor sbb cmpsb popf negb jne inc rcr pop or pop push outsb sbbb sbb enter jg ja and push orl adc sar cmpsb mov jle loopne test mov (bad) adc shrb pusha rcll sti mov cmpsb std jo lods popf test test (bad) into ret lock std pop xchg xchg sbb mov xor lods daa jo push add sub add add add inc in int aaa xor bound (bad) out aam dec jbe adc scas xchg movsl jmp add bnd add cmc mov add mov xor push dec fwait lret bound push mov adc cwtl fadd and add sbb add xchg ficomp sbb mov jg xor test pushf inc inc pushf cmp dec sbb in out scas adc insl xchg roll daa fadds sub mov and sarl shrl mov sbb in mov sub mov inc jb in and xor add add add add fs pop mov hlt imul cli xor push repz shll cmp cmpsb clc sub fimul in dec cmp push push outsl fwait sbb add push mov sub mov adc ror dec repz xchg movsl inc ljmp add add adc cmp hlt inc in inc jb call aam cld loopne or push lcall (bad) je scas cltd div mov add adc test sbb sbb and mov sahf ret test sub fistpll add or jl pop jb cmc add add and popa or lcall das sarb loop jns (bad) cmp mov lock aas enter mov pop fidivr adc ficoml xchg mov aam cltd add cmp sahf push cmp xchg sbb inc xchg fs inc and testl add add xor stos mov addr16 pop mov xchg mov sub mov pop ja push add adc jae sub ds ret sbb fsubr mov inc pop push xchg push sbb mov (bad) rep mov or fadds xlat ret and and cmp movsl adc ret (bad) mov jmp lods in addr16 fs lods jmp mov repnz or jmp pop lods in lods in pusha outsb jne aam fsubrl pusha test jnp (bad) (bad) sahf pop std mov dec jle lods stos mov mov add inc xor jmp lods mov sbb test ja lahf push inc imul test inc pop cs scas cmp je fistl loope (bad) jmp dec bsr les push sbbb out jle sub test ds pop mul fcomi inc sbb shrb mov test and sub or mov push inc mov out aad loope in mov pop outsb imul sbbl cmp nop mov cltd pop sbb mov push sbb cltd aad mov stos test sbb sar ret cmp sar sub jmp add pop icebp pop lea cmpsb (bad) int or mov (bad) jo mov aad xor icebp fucomp push mov push fsub dec inc gs adc jo and sub xor cltd pop add repnz test inc jbe adc aaa and scas push loop in xor inc test xchg ja add (bad) fcmovnbe cmp dec pop push adc mov ljmp push lret inc sbb push mov pop push imull pop test (bad) out aad addl popa fsubp xor xchg adc notl fdivp nop aaa jge and adc out jns or pop pop and pop lea xchg sldt outsl push pop imul movsl testl push adc fist jecxz (bad) jecxz add stos scas ret ret mov add fucomp mov sarl int3 fmull shll sbb cld test jbe cmp add pop ret cmp add mov mov test mov sbb mov and insl pop mov inc jg repz mov push pop mov mov and lahf lods pushf mov daa inc fnsave testl lcall mov rcl jmp inc pushf stos aas in addr16 jne sub movq dec add lret aas jae mov sub mov mov or movsb fadd icebp push in jno (bad) repnz les insl xchg add insl ffree xor jbe cmc adc xchg dec mov fs jnp xor out shll mov arpl cmp cmpsb cmc push inc popa loop jo sbb add jge,pt (bad) lock push ret roll cli jbe push pop push addr16 and add push insl pop sbb stos mov (bad) leave xor (bad) xchg lods sarl xchg ljmp scas pop jae je pop cwtl push scas and lods (bad) mov ret das addr16 cli jne adc emms (bad) enter shlb add loop es xor dec xor rorb adc mov sbb inc arpl decb js cwtl pop sub outsl and in sub ficoml pop push xchg push sub pop push cld pop and lret das dec das mov pushf test outsl mov outsb mov (bad) jo push add add add xchg inc flds push inc loopne mov jnp push test (bad) out aad sbbl inc jp jp push movsl push repnz divl push mov adc lock cmp dec sub popa lods xchg outsb mov pop movsl mov lods iret xchg (bad) mov pop sub (bad) jmp imul loop add add int3 sbb mov xchg adc mov xchg mov sti call shll xor (bad) push pop (bad) gs dec jecxz ret xchg pop sub adc mov jecxz loope daa xor xor push out push mov outsb jnp pop fcomps daa jecxz xchg pop fistpl add rdpmc add add fidiv jmp lahf inc push sbb cmpsb mov (bad) jge lods sbb mov int cs call xor stc pop push jne aaa repnz and fcoms xchg bound push out mov mov cmp rorl add add sbb std pop in adc inc (bad) cmp ficompl xchg repnz push cmp mov aam test es push idivl jno (bad) (bad) pop adc jno loope sti ss (bad) adc jecxz hlt and loopew ret call or test insb dec shrl out pop mov sbbl cmc aaa lret adc cwtl cs xchg push (bad) mov scas icebp sar inc adc lods mov adc sub daa call xor loop data16 stc gs or xchg (bad) out shlb and add mov movl fs cwtl sbb adc add add scas pop ret inc jle in xor repnz test mov mov daa ret sub stos sub mov leave dec rorb add or out inc pop or sub addr16 push jecxz movsb popf repnz adc or and pop push cwtl rcl aam jno loopne insb mov fstpl shr roll add add cmc (bad) stc cs dec stc mov add cld xor je adc fistpll add adc sub push in cmp inc push dec jne jecxz popa jbe ret cmp fisubl and js decb mov or cmpsl mov fwait scas pusha cmp xchg sbb xchg test test xor add inc fwait add mov mov out mov inc xchg pop mov cs orl mov jne pop hlt sbb imul push fsubs in xchg dec xorl es lds mov sub test lock movsb fwait xchg jp mov jle xor cld pop xchg add add call add jbe sbb mov test lods xchg popf xlat popa ret test je mov inc xorl pop push aad ja or dec adc insb aam aad js dec out call or ret leave mov or mov imul mov mov add arpl orl ffreep dec repnz xchg jecxz jne fldl imul push sub in pushf stos icebp push (bad) xor xchg xchg ficom xchg jg or push test or insb mov ja and adc aad mov jo test scas jge add je inc sbb xor xchg sbb daa (bad) in pop out pop sbb xchg push daa fdiv cli or repz (bad) clc ljmp cld sbb push push cmova sbbl stos stos mov cmp imul xchg dec ret mov sbb inc out cld out pop dec mov aad dec or push mov stos ljmp add jmp cmp shr sar clc ds lcall cli push pop pop cmc dec sti out in sbb pop sbb and or testb mov mov or fmull jl sub popf xor repz mov sub sub cltd repz mov ljmp test sub shll push je cmpsl (bad) pusha cmpsb lcall sbb xchg test sbb and mov jne stos mov inc push in orb push add mov and add add lret nop lret cltd push cld pop jecxz sub sub add jle sbb jae push push xor push loopne pop cmc pop or mov ja sbb punpckhbw insl repnz sub add int and jl repnz arpl add inc jne insb dec lcall into mov out scas add (bad) pop test jo lods popf lea inc mov pushl mov push je add pop loope (bad) pushf rorl dec pop dec cmp (bad) jne mov sub iret imul sub mov ljmp xchg dec dec sbb daa shll das (bad) divb fstpl inc add adc cld scas sbb cmp aaa gs stos jae ret ret ret sbb inc lea push (bad) hlt dec sti imul (bad) push outsl and insb movsl push adc adc adc aaa (bad) xor xlat fcoms subl ss data16 (bad) xchg pop xchg mov into jle jb mov mov push fwait mov lahf jl or xchg movsl sbb pop fwait inc lcall xchg push or mov enter lcall push and pop lock test xor add imulb (bad) and mov xor fwait stos mov add or mov movsl outsl mov or xchg or (bad) (bad) ds pop pusha pushf xor mov stc cmp imul sbb pop push xor lahf sti pop pop mov popf xlat aaa jbe std leave lods popf push jns dec lock add add add jae xor xchg in mov mov or insl shlb dec (bad) push lcall sub cmpsl pop xor inc iret mov aas movsl mov mov mov (bad) sub enter lcall es sarb (bad) (bad) jo mov shlb adc mov pop add add add icebp jl repnz push dec add scas push cwtl sub or (bad) jno repz jae push jae stos or adc sub out test add ret sbb enter dec pop das ret mov cmp jg sahf (bad) xlat jo add jg sub add stc sarb mov (bad) jecxz out stos idivb insb shrb and pusha push and xor iret sahf ss or scas pop xor cmp xor iret pop xlat repz loop mov lods sub or ljmp jp out xchg adc pop ja push dec xchg or fidivl sbb xchg mov mov cli add ret mov xor fimull and leave add xlat test outsl adc pop data16 push adc jne leave shrd stc or mov add xchg fldpi inc fwait add jecxz icebp adc pop cli sbb add mov mov iret leave cs dec pop stos int3 xorb movsb and add inc fisttpll dec push pushf cmpsb and adc ds addl inc add jo sbbl add sbb sbb sub mov add fcoms adc and mov rcll cwtl addr16 xchg add mov add jo ja jns call xor lcall ret bound jae sbb sub test (bad) arpl mov sub sub inc xchg mov dec xchg mov lock xor out add dec cmpsl gs inc ficompl jle and cs adc ss adc inc shr pop (bad) hlt gs loope (bad) mov mov add out cmp pop sbb js push adc inc jg add dec add pop add pushf mov outsl pop mov gs jg les jae and xchg xchg mov aad mov xor pop repz jge fcmovnbe cs sbb jle and loope pop sub mov jl dec sbb out push mov in jge or in jmp pop xor adc cli add insb sbb cltd iret inc int mov fwait inc mov inc mov fiaddl dec cwtl and xlat push push hlt mov hlt push lret inc pop and shr test mov push shrb popa push xchg xor sbb mov push cmpsb (bad) (bad) or arpl add add and jl adc (bad) loop push cs jo adc pop adc jmp pop pop and xlat lahf daa imul xchg jns insb xor stos sti mov mov es xor push cmpsb stos pop lea adc orb mov push adc out mov or push (bad) rol (bad) pop mov loopne inc cltd lods push mov ja push dec fcomps xchg push pop jbe sbb dec or jmp cmpsb xchg add push adc movups or mov lods dec arpl mov repnz push pop into dec (bad) pushl add dec sub lods xor jl loopne cmp jp mov or popl fsub iret repz or xor xor jnp stos leave push jns lret clc data16 add ss and leave stos inc xlat pushf rcll dec (bad) loop outsb adc inc outsb divb int3 cwtl das mov jecxz fadds add add jae stos mov push push adc (bad) inc lods pop fsubs adc lds loop fcmovnbe (bad) push hlt cmc pop sahf lods arpl lea mov shlb xchg outsl sbb push or adc ret insl aam push insl or mov mov pusha cmp arpl dec jnp mov lahf jge inc adc cmp (bad) mov scas adc movsb sub xor (bad) popa ret mov or mov sbb sbb push dec mov cwtl ret aad xlat jmp xchg adc (bad) popf imul mov mov iret dec cmpsl aas addr16 mov mov or cmpsl jle push dec inc sbb sbb mov push imul mov pop xchg add fsubrl mov arpl fst test push jecxz cmp pop ficomp dec sub dec (bad) (bad) aaa cltd mov inc out ret insb dec inc rcr or cld xchg add inc pshuflw fidivl xor and sub push sti xor ss xor insb (bad) ss and mov (bad) movaps mov clc scas lcall out enter fidivrl mov push popf mov insl sub (bad) mov int3 mov mull sahf dec div in aam inc pop add in notb add add pop or pop inc add mov sahf cltd jg xorl imul add (bad) xor cld out fistp xchg mov ret fidivl or cmp test clc (bad) int and push cs push dec std and add shll pop into cmp xor loop adc or jo mov jne ficom dec xor inc or or push cltd pop sub lds aad sbb notl outsl cmp int3 add (bad) icebp lods push test inc sbb inc adc lods lret xor test xchg add add add shl mov mov xor pop sbb cli cmp inc mov lahf inc pop adc adc xlat les mov pop cld push insl xor (bad) ds xchg push es jne add mov pop les shlb pusha mov lea or add and std jne xchg shll jmp jo pop cld test adcl jge sahf ret insl push mov int3 and jge inc ret ret loop mov mov (bad) jecxz sbb enter ret iret sbb jg (bad) sbb mov andl cwtl dec add jno loopne mov movsb cmp mov jle jl xchg and loop (bad) fsubrl sbb test dec lods les dec shrl or xchg outsl enter or push (bad) fcoms fs push push cwtl rcll cwtl (bad) lods nop mov add add add jns idivl mov test mov fbstp gs push into cmp xor mov mov addr16 in (bad) mov ffree mov xchg mov push dec xchg xchg cmpsb (bad) mov gs pop pop sarb (bad) xor inc test sahf sti fs push in add sti sti outsl jg push rcrb iret lea fisttp adc inc xchg push xor lret inc add insl cmp (bad) es xchg push sub cmpsl scas or popf xchg mov outsl mov dec and xor or sti pop daa call ja inc lret hlt xchg sub adc add sub mov outsl or pop adc js mov test mov aad xor in xlat add ds push sbb jmp daa cmpsb xchg iret lret aad or xchg xchg and loope add xor stos mov (bad) mov add dec add fadds test cmpsb scas daa cmp adc lcall cld cmc xor movsl add cmpsb mov cmpsl inc (bad) jo cmp jb popa (bad) arpl dec ljmp or push jo das fwait or ss jg inc aad mov push call xor mov or mov popf outsb aas mov push adcl pusha cmp clc mov fild cmp movsb and cmc or imul mov mov bound jecxz add push ret mov sbb add lret or call xchg sbb test add inc adc int scas testl xchg adc std cmp rcrb sbb outsb jle pop mov test pop jmp sbb pop pop loope lock rcrb add add cmp popf sub and mov dec adc mov enter les push jmp push push into mov xor push or jb mov jl repnz add test ds aaa jb sbb fistpl add inc pop loope sbb jge cli aam inc adc nop imul adc ljmp mov xchg insb mov mov in iret ljmp inc and pop js add jnp in scas jl cmc andl jb mov mov fnstcw fstl xchg int fwait cmp add inc mov mov pop inc jle out ss cmp add sbb push add xchg push xor push incb leave addl cmp hlt sbb xor mov arpl push push fistp out icebp psubd push sbb cltd mov pop cmp scas mov add fstpt adc into in sub fs imul cld jl add test into cwtl xor inc adc jne add popa inc pop (bad) test jl stos lcall xchg xor test jp lods xor fldl pop into mov lret outsl out xchg and xchg sub sub iret lea add add jns dec jge dec (bad) in dec inc push or ds push add and and xor or (bad) jmp push mov in push fidivrl sbb xchg xor or pop xchg push sahf dec stos cmp xchg sbb aad xchg loopne fistpll jp push adc add outsl cmp xchg sbb lahf pop in stc dec cwtl xchg mov and jne movsb cmp xlat loop pop push out push push stos (bad) push daa jns mov shlb hlt scas push scas mov or pop push aas mov xor push cmpsl add insb loope or shl cmpsl xchg add add sbb rcrb leave add int fnstsw or inc add mov sahf cltd jg xorl cmp dec fwait repnz sbb clc mov fcoml inc rdpmc (bad) jno repz (bad) sub add andl add add add and aaa (bad) pushf xor jmp xor pop test pop (bad) test mov cmp iret fisubl xor sub mov int3 (bad) jecxz sbb ret bound std (bad) scas push cwtl or xchg int3 mov ss jge dec (bad) jmp adc add adc inc mov dec jno sbb mov sbb out mov dec sti pushl shrl pop pusha adc daa jle mov call data16 into test and cmp outsb jge and mov bound addr16 dec fscale dec inc fldt push mov add inc push and stos in idivl jno xor pop xchg test jl jmp in sbb fldl sub xchg sti lret add inc loop xlat cwtl rorl add jmp adc xchg add jns dec push add ds cmp sbb stc ret add std dec fisttpll mov sbb and xor adc aas push sub jecxz mov sbb leave mulb fistl jno aam or call scas xchg fsts mov out scas dec jg mov pop dec xlat outsl and int stos testl enter arpl push mov add add jno,pt xor stc adc push jo bnd pop jp lods ds pop push adc loop push mov or outsl (bad) icebp pop or mov mov in lcall into mov mov push mov mov sbb gs push negl add mov add add sbb lods into pop stos loope or jl ljmp push push popa mov into pop scas push jg incl scas leave dec (bad) out push or push cli and cmp ljmp cmp adc fstpl arpl bound or nop push movsl (bad) aad xor in dec lods call xchg add dec ficoml scas cmp adc xor inc xor xchg jmp test cmp ret xchg frstor mov or sahf dec in insl and inc imul pop mov shlb cmp loop jmp jo adc loopne add roll mov cmc ds sbb cwtl dec (bad) and fidivl pop jb xor adc xchg sub adc sbb lahf lods xchg jg dec or mov mov aaa mov inc inc push ljmp popa xchg rcrl inc (bad) cli sbb jne jne xchg sub ja divb sarl add cmp sub xchg xchg nop in push fwait inc les lock jecxz fisttpl mov test lret rorb jmp das movsl das lds dec mov (bad) xor in mov sbb pop jb add add add xor scas cmpsb pop xchg in add rcrb sbb sbb sahf dec test mov or test xor mov xor add jae mov int pop adc popa lods mov adc cmp nop xchg into test pop ja int clc (bad) jp mov add pop pop subl enter aaa jp pusha adcl pop mov in std ret and pop int3 mov push js loop,pt or bswap inc xchg icebp rclb repz sarb testb xchg jnp add pusha adc xchg add popa frstor dec jg add dec xchg sub push ja mov outsb lods pop mov push arpl test andb xlat inc lcall jl jg mov pop mov mov and adc sbb mov xchg pop sub in mov inc or (bad) mov pop sbb scas sarb add je xchg or rcrl sub jl cmp add int mov cmp test stc mov and mov das int3 daa jne (bad) mov push cmpsb xor call dec rcl push negb popl test hlt jle add pop fistl sbb mov sbb pop xlat sbb iret test es movsb push pop ja in gs and icebp xor enter push mov sbb cltd cmpsl popa add (bad) aaa lods cli push pop jnp ror jno inc pusha pop inc push out and mov jmp add xor repz rcpps fisttp xchg or push js ds mov mov fucomp loope out sbb jp movl push scas das inc icebp pop fisttp or push jnp cmpsb cmc ds test (bad) xor daa ss pop cmc std sbb loop loopne jg sbb add ljmp out (bad) adc cs and out xchg jbe idivl push div lret aaa test push jns lods adc cmp and ret popf test test add mov sbb int3 cmpsl cmp cmpsl stos pop fadd adc ret cmp add add aam xchg js add xor adc mov cwtl inc inc xchg ffreep inc lcall arpl or idivb leave or sbb and shrl adc fwait push sbb mov and ret ret rolb jmp or insb dec scas mov stos (bad) fdivrp insl xor ret jo inc loopne fisubl and je pop add push sub push nop jno sub in pop imul adc (bad) cld icebp add incl adcl ss insl (bad) rcl js cmpl mov fwait adc into cwtl icebp mov add xor xor pop sbb add scas (bad) into inc sahf xor mov (bad) cmpsb (bad) addr16 loopne jecxz stos dec or lds pop or pop or and out or insl pop pop mov andl or xchg jle call mov ja out inc jb pushf push outsw enter test mov cli rcll lcall jns adc cld aad and fisubl pop hlt inc cmp rcll pop cmp cmp inc lcall test add push jp add add add add add xlat add gs scas and push dec flds xchg and sbb arpl dec or insb xor mov test pop push fcom pop aad int3 (bad) ja adc xor mov iret xor jmp mov dec cltd pop pop divb xchg push mov cmc mov repz and pop icebp outsb jle add and cmp out (bad) js imul inc and mov and mov inc mov jb data16 dec imul fisubrl sub rclb adc out cmpsl dec aad mov add add add imul cmp lock aam adc and push movsb mov push in or lods iret mov xchg mov in push rcr xchg inc sub shrl hlt rclb mov xchg adc test sub hlt push mov imul sbb and gs insb push or (bad) add pop fidivrl rorl stos andl jge pop adc shlb ret mov dec xchg shrl mov data16 cmp movsl mov stc mov scas ja lcall sub fidivl push hlt rcll or cmp add push daa sub cmpsb mov in bound jl cmc xchg or hlt or stos lds xor sbb cmp mov add repz mov out mov lods and repz cmpsb adc xchg sub xchg hlt test mov add xchg int dec fiadd popa push or inc mov cltd fbld and xor mov mov push outsl lahf inc imul and cwtl clc not cmp pushf inc push mov jnp jnp jne cmpsl in fdivs push xor cmp aad add xor andl or sub inc loope mov lea push movsb mov jg cmc fistl cld les lea inc out or scas jecxz or arpl and scas mov inc xor mov adc addl rcll push xor mov add aaa cmp cmpsb push movsb jecxz pop xorb pusha or mov mov js in dec out push cld mov fstp push xor jg sub push mov mov xorl mov test mov mov out add mov pop jp in andl repz dec xchg push imul adc inc push jg call lea and mov orb pop lret popa loop or stos jle insb mov (bad) sarl (bad) out mov dec push lahf enter add call scas cmpsb pop stos out inc xor dec daa lock jecxz pop in cs cld mull adc aam ret popa inc cli add push outsl dec cmp mov jae mov sbb repz in ds mov jnp je push inc std pushl cmp dec (bad) int xchg (bad) lea out add loope adc push das push pushf xchg inc aas xchg and loop lret lret rcl dec into inc lea int3 rcr lret out pop add xchg std mov push pop cmp in es cmp neg cmc mov xchg and and pusha add testl add mov and xor rcr fmull incb push loope jmp das xor stos out inc jae mov cmp lock xor rcll inc jp xor dec mov add es sbb in icebp lahf push imul add add xchg cmp sbb and cli and add cmp and rol enter inc lahf (bad) cs ret pop or xor decl es adc rcrl dec sbb int3 fsts dec repz push das fbstp pop mov jb add arpl mov pop push jbe fsubrl add or mov rorb add loope cli mov inc pop mov (bad) adc sub xor rclb jno ret aas jp ja add pop or scas and pusha pop dec es jb repnz andl test hlt push test jp add add iret leave xor std dec shrb cmpl fwait push add movsl std push loop dec jl daa xchg cmp pop sub fdivr in xchg enter aam dec addb out test pop fldcw gs ljmp mov int dec lock repz jmp cld (bad) test shll daa aaa aam push inc sbb jno xchg lods xchg xor cmp (bad) mov dec into cmp repz adc scas add out xchg dec cmovbe or and leave out paddw inc int3 xor push insb cmp icebp loope xor imul add add mov test and xor test test fist nop sahf divl xchg test shlb dec shr jecxz repz arpl push add xor out cld stos mov das push lock mov in mov push pop mov inc negl mov xor loope loope pop mov lods push add (bad) push jne (bad) fldl flds mov (bad) dec scas out jae push aas mov adc push jle sbb sub daa mov flds aaa cltd test mov cmc imul adc shrl out stos mov lods hlt aaa push cmp int add add adc psadbw push cmp and in or rcl mov enter add (bad) arpl in or fwait push (bad) arpl outsl ss inc subl test adc int3 add cld push je push sub mov inc jbe lret cmc test and hlt push shl das int3 jne pop adc cmc enter add (bad) (bad) ffree fist clc inc cwtl xchg jns cwtl mov sub cmp pop pushf push dec xchg mov sub inc xchg out dec fstp int3 subl iret xchg cld out xor lock jp dec mov push icebp mov adc mov cmc adc (bad) push (bad) cli ljmp add mov and outsl sbb pop loope mov mov pop mov dec stos mov sti xor out test insb ljmp add inc lods movsl cld xor and sarb inc in popa pusha loopne inc (bad) lea dec lds adc jle cmp add mov add xor pop rorl push stc in push dec and inc inc test subl jmp dec in in mov xchg ds sbb adc xchg rol fistl xor adc jne add xor lea ret rol xchg loope push ja sbb bnd cld jo negl nop aaa scas mov inc dec jle jecxz push push dec push aad push pop push xchg je paddb inc pop leave nop shrb mov pusha or (bad) pushf sbb movsl in fnstenv sbb in enter inc fwait mov jecxz mov (bad) repnz inc jbe into ret daa sbb jmp and cmp or push dec sbb test std cwtl call pop es mov movsl inc jecxz mov enter xchg sbb sbb pop (bad) xor aas sub pop xchg out or hlt or out lcall fwait jno push xchg fdiv push dec adc add aad jle xor push (bad) push and pushf push adc pop (bad) hlt fldcw stos mov clc decl jmp sub repnz mov jp repz loop out repnz aas push adc add xchg push or loop mov dec (bad) fisttp scas gs adc push xor mov imul je lea fs (bad) mov scas movsl and or cmp push xor clc xor fcmovu pop push jno mov xchg xor arpl ja mov pop fisttpl (bad) adc stos movsb scas add je pop pushf mov push adcl adc add xor aas arpl jl insb call mov lods lds es mov xor int3 jb sbb push dec outsb mov bound mov xlat pop xchg xlat test fdecstp insl cmp adc fcmovb lock outsb iret inc mov popf cmp int3 push add add or aam test adc call js repz lea ljmp in sbb jl je stos pop lods insl cs insl pop rol add dec (bad) fiadd add add popa sub loop mov cmc int3 jp bound xchg pop jne fwait add insl jo lods popf push jns or jae push lods aam das or rcr lea scas mov cmp xor add or mov or add or pushf stc adcl cmpsl movsb push jae cmp mov popf xchg push push cmp pop add add out sbb insl (bad) mov lock ret mov sbb jo out mov push push jo pop mov into flds ljmp or dec outsb push cmc insb roll leave lods jno mov adc imul and xchg pop push fs add call shrb xchg test xlat push mov mov mov xor xor iret adc inc or ret (bad) jno xor mov fstpt add lods jbe push bound jmp clts aam call push mov arpl aad out xor mov add sub (bad) fdivrs int3 nop mov inc jle inc leave fwait pop ds cmp stos cmp loopne divl sub clc xchg mov add (bad) xor dec je jl movsl or xchg xor sbb in fmull (bad) lods push scas sbb lea aam add popf (bad) in lods or add or rorl aad mov into xor inc es sub inc cmp (bad) xor and xor mov (bad) (bad) out mov stos cmp inc xor mov int mov jecxz in lahf xchg movsb ja push mov mov cmp and mov add add push dec jle fcompl mov into push inc jne xor cmpsb pop das rol (bad) enter pop mov aad sbb sub mov dec cs sbb imul pop data16 gs mov (bad) dec rclb push cmp cmp adc mov add jns ret repz int es cmp pop add addr16 cmpl mov or sti (bad) sub push xchg cmp dec mov xchg add pop or mov jb dec into xchg lret sbb cs push or xchg push mov add add std in jge pop sbb xor cmp pop repz stos mov mov (bad) pop imull push test popa fsubrs lods mov lcall (bad) mov pushf je movsb cmpsb out or mov les clc out mov push addb out sbb dec sub subb mov shrb shl mov (bad) insb repz js mov cli and jne aad divl imul mov cmp je ret aad scas fmull (bad) lret loop fildll data16 xchg data16 cmp inc scas cli inc scas pop cmp xchg cmp sahf adc ljmp jns mov mov iret enter cwtl xorb int arpl punpcklwd jb outsb dec sbb jnp mov push cltd vmwrite enter cld xchg xchg ljmp daa loop push fs inc pop mov scas jecxz pop push xchg pop pushf mov mov mov adc mov mov cmc arpl push adc dec pop shrb cmp sub fstps mov pop jle xchg sub jnp lds stos imul popf mov fisubl lock mov add aad fisubr das cltd xchg jbe sub (bad) out sbb arpl jmp xchg mov xchg sub xchg mov int3 in inc xlat and int3 mov jno inc loope or jnp cmpsl stos dec or fwait push ljmp push adc add and xor pop mov lock pop lods mov ss (bad) push push mov inc (bad) loop inc sbb ljmp jecxz xlat sahf into test push (bad) outsl gs aam iret jnp ficompl cli jbe sti insb jno pop push sbb stos mov rcrl mov push ss and data16 and ljmp sbb in pop (bad) sbb mull bound pushf xor ss mov push push and mov (bad) jecxz or fcompl pop push les push js pop lret lret aaa add loop sbb push lret int cld fisub inc mov insl fcmovnbe das arpl popf (bad) jecxz repnz clc sub push in addr16 in icebp push mov push fs (bad) outsl gs aam cltd mov (bad) fadd jle out xchg or psubusw mov inc lahf inc push sub mov jbe mov mov enter pop lret stc (bad) sti rcr pop push aas adc jno pop sarb adc jno mov or loope add dec xor aam int3 imul rcll mov or push aas xor aad jnp mov sbb stos xchg es fs dec inc out (bad) sbb xor cmp test sarb ret jb pop pop data16 addb fmuls orl xor adc jo in aam roll dec jmp mov adc add add and loopne xor (bad) sbb inc xor mov orb ficoml iret loop ljmp adc insb aaa outsb mov stos into lret push fcmovne sbb aas jnp dec push and sbbb movsb (bad) xchg add fcomp loopne rcl repnz add xor cmp add icebp int3 jge ret fcoml in jmp scas xchg or push scas imul adc (bad) rcl (bad) out mov ret jle test mov and push (bad) mov jno xor adc cld pop push push enter imul add add add into mov push pusha pop ret xchg mov cltd rorl adc pop popf lcall xchg lret outsl movsb jbe int fbld je push mov aas (bad) jb push nop pushf sub lds ret xor or push fnsave test sub mov sbb data16 jle fsts imul cmp jbe xchg sbb xor sarl pop fdivrl rol popa js std inc jae inc jecxz je sti js pop es fisubrl mov jne push outsb hlt aad mov xor repz les xchg insb push xor dec mov xchg dec or add add cli jo lcall mov lea add cmp dec out out (bad) xlat sbb ret popf sti push mov pop aaa xchg push add or pop push ret sbb pop mov adc cltd outsl cld cli repz fiaddl xor fs push (bad) repnz add sub rclb jno mov loope dec mov mov fnop xchg fwait push js add inc jl leave sub jge xor add and dec ja mov or into adc out mov push xchg mov cmpsb out fs pushf fwait ds push movsl xor loope mov xor add or jns jmp sti lret iret xchg icebp jl add lods aas cwtl push jne pop xor or push test fadd adc outsl rorb sbb lock ret jns,pn rorl (bad) and leave lock xor sbb pop mov sbb add xchg jg pushf xchg mov push xchg cmpsb rcrb push insl rorb iret mov push cwtl mov je cs lea mov xchg not ret sub dec jge cmpsl sub lods fisttpll jb dec out cmp clc pop xor lret xchg mov movsl (bad) in pushf pop add pop jbe xor adc add sub pcmpgtw icebp fsubl jle hlt dec orl mov into sbb stos or xchg inc fwait dec xor jne add cmp iret jo das test pop adc push jb bound leave imul popf mov inc icebp negl add add cmp (bad) jae aas mov pop jne pop ljmp call dec mov push fsubr push fbstp loop jp,pt call xlat inc lods push mov dec xor push fidiv xchg xchg fimul loope jmp xchg sbb stc mov lock int3 lods jne xchg add add fidiv outsl inc adc pop inc scas pop jb mov test mov add pushf test cmp (bad) add popf jne,pt push scas adc dec es imul inc mov lahf push push nop out data16 and les adc mov adc outsl add or push fwait add xor pop sbb add nop shrl xor mov cltd mov rcl mov cld sti into js popf sub nop fild mov sub sub sti xchg push out fdivrs iret xor mov jecxz cmp push adc fistpll jl adc pop add add mov shl push movsb sbb sahf das cmp inc pop aas or mov lret pop dec dec lahf decb popa popa ljmp inc xor jge add repz out adc hlt inc lock sbb mov mov imul out (bad) loop int pushf or inc in fwait xchg lret mov pop push pop and fs adc inc pusha std mov mov jp and mov (bad) std mov mov or jle enter xlat push jg daa into sub mov rol js push insb push cld sub iret movsb neg add sub rcr (bad) std push add mov fwait cmp dec mov adc mov and icebp rol dec inc cmpsb cmpsb cmp lret into (bad) xchg cs dec or and inc scas jo call xchg push rol inc rclb push xchg sbb je test mov dec sub dec sbb fcmovne inc xchg je lods (bad) lret lret sbb sbb test cmc push jl andl (bad) or loopne in add pop mov cmp movsb std les sti jnp scas xchg ret leave jo loopne mov sbb or (bad) clc jle mov es xchg pop in out mov pop jecxz xor add fsubp sub stos xchg pop xor sbb inc xlat out lea imul (bad) or mulb in push iret dec in mov jg and sub push sbb mov dec sarl decl js mov mov push sub pop out pop loope pop adc add (bad) and lret fucompp mov cmp jmp lea icebp jg test je in cmp lock shll outsb clc lods loope notl lock imul insl push inc enter out add mov inc inc (bad) das (bad) jns scas inc mov inc xchg fdivrp inc loop add mov push cld mov ffreep fnstcw push and push scas add push test pop xchg fdivrs test inc repz mov xchg cmpsb add mov mov adc test xchg mov pop jl inc and mov incl jae in movsl out add add adc jl and nopl cmc cmp pop dec jle jns or pop sub mov lods popf lea cmpsb fdivs lds cmp cmpsb xor sbb or dec pop std fwait push loop loop js push negl clc flds sbb xor adc mov sbb incl add or xchg dec dec adc je in push cmc dec jne mov add or mov loope mov mov cwtl adc daa adc rorb mov out fistp fwait arpl imul pop inc lahf scas xchg sub sbb movsl cli sub std into dec fidivr xor add jmp (bad) pop cwtl movsb jno sub lods lahf idivb fisttp fs inc adc adc iret sub das testl xchg (bad) xor pop mov scas push popa push add xor xchg inc jecxz xor cmpl ficomp enter xchg fisttp add (bad) jmp mov rorb (bad) loope sti ss inc mov (bad) aaa insl mov cmp push dec xchg into xchg cli ss or jg out loop adc push xor jge es jae jae insb rcll repnz cltd out ja cwtl (bad) jbe aas (bad) arpl rolb add or adc fidivl pop outsb xchg pop dec xchg mov xor jne hlt test push stc js popa fidivl insl mov xor jns dec mov icebp test gs push iret mov mov add mov push push jle cmp xor enter jmp add add add add int3 jmp sbb mov aas fildll das fcomps sbb cli sbb inc or movsb ret jbe in scas xchg or push pop test inc adc inc jp ret cmp adc ja and daa mov enter mov sbb xchg add inc push lods adc leave (bad) dec cld scas lds aad sub adc mov xor imul movsb in (bad) out mov dec push cli insl cli add adc jle out jmp jne dec int3 fstpl adc int3 aam push push (bad) lock adc cmc push nop sbb and es addr16 pop gs or jmp ret mov pop push sahf icebp xchg or in test arpl andl shrl iret in out aad ljmp outsl add add daa arpl stc lahf cmpsb or std xlat je icebp xchg mov sub es je mov mov rclb inc loope ret mov test outsb lahf lcall fwait call (bad) lock push lcall sbb pop popf xchg es mov pop sar sti loop pop sbbl xor add aas sbb adc test fcomps les cld (bad) jbe cmpsb mov (bad) jl insb dec fnstsw mov stos je mov mov aad xchg ficomp and and jp int3 aad mov lcall sub loop setbe inc push lods into xorl jno popf jns add mov pop add mov xor xchg fisttpll (bad) lods or sahf sti pusha insl (bad) cwtl pop rclb push int or mov adc jns cmp and mov pop pop in xor dec sub insl mov pop dec addr16 out dec mov xor xchg jl add in inc inc cli out (bad) shlb sbb es lret sub popf pushl or inc jmp sbb out jmp ja testl adc (bad) jp lods scas in ds xchg in pop ljmp push es cld jbe hlt fild add lds and repnz inc ljmp push (bad) inc ficompl lret adc xor adc and repz (bad) lock add icebp fdivrs test sbb daa fcomi push jecxz dec jae sbb fwait add add pop xlat push sub cltd mov cltd sbb mov aad mov add dec movsb pop loope cld sbb mov mov push sar add inc mov aas adc outsl lcall add dec jno pop adc mov push sbb and inc outsb jmp add adc shrb inc mov loopne andb xchg mov lret mov jne or test mov out ret sbb pop pop fnop mov mov test add mov movsb ficom cwtl cmp mov dec rclb inc outsb sahf mov mov test add push sbb insl or outsb jbe mov lret sbb jo js jo mov nop notl inc lret cld sbb xchg push sub sub mov sub sbb cltd sti inc les hlt push gs pop inc fsubrl loop sbbb (bad) mov les xor loope mov add add rol push repz loopne inc cmpsl cmp cld push popa add pop jbe aaa repnz jno and mov jb ja cmp pop inc mov sbb mov repnz sbb cltd aaa daa imul mov loop out push add ret aad fidivr (bad) mov (bad) stos idivb out cmpsb fwait mov jl jbe mov pop mov sub popa xchg lcall popf push hlt mov data16 enter and outsl aas cmp xor mov jg inc rcll popa cmp xchg aad xchg incb mov cmp dec jnp cmp push inc push adc into fcom sbb mov fnop mov mov addr16 fdivrs dec fisubrl es dec in cli mov insb sbb adc jmp or nop (bad) pop xchg out lods mov sub enter push sbb ret fimull and test repz insb dec adc jne pusha jmp mov loop (bad) cmp inc jno cwtl pcmpeqw cmpsb fdiv aam jg inc jne or xor out xor pop push int3 jecxz sbb cmp xchg icebp push sbb sub xchg (bad) xor add cmp inc imul pop and dec loope cmp pop dec pop inc (bad) pop in aam dec push scas mov in addr16 mov lea data16 and mov fistpl adc je in out push pop lcall gs cmp inc lahf (bad) out xchg movsb shrl loopne add and lahf in jmp (bad) push popa lods mov dec jle jecxz mov stos pop aas dec mov mov mov ficom shll imul (bad) xchg mov dec mov push std or push jne cmpsl cmp loope mov mov sbb out pop dec xchg popa ljmp xchg lods adc push clc iret xor repnz dec addr16 add xchg sub sarl icebp fistl cmp push dec add xor pusha jno loopne sub xor ret push out add inc iret xchg jnp shl cmpsl mov ja pusha jmp je lcall sbb fs sub mov bound dec les clc sub push loop jbe sarb scas stos out fsubr cs jae jg adc mov (bad) xor mov out cmp loopne out add push adc xchg fild add add in xchg mov addr16 cmc repnz inc mov mov dec jb stos imul daa xchg ret and and adc cltd cwtl pop jo add mov mul xchg cs repnz loopne scas add je push jb xor js sub add add add mov sbbl aas rcr mov mov cwtl add adc jmp mov inc jb mov je jge lds add enter pop mov or or insb in inc dec pop loop lods clc adc xchg ffreep dec shlb ror cmpsb xchg ret add add xor pop jae cmp push pop jle sbb mov fldt loopne data16 inc sbb jle pop daa out adc lret sbb and out sub add stos push mov fstl xor adc lods ret int jb,pt adc xchg mov inc idivl lods cmpsb (bad) cmp add add shll aam jo mov jo bnd mov stos clc mov aad stc test jp popf aaa hlt in or push jo rep dec mov imul and mov mov fwait dec in cmc addr16 dec sbb sbb test jmp jp fistp add pop jnp push pop jle sbb push push xchg sbb push cs xchg rcrl popa test ret in push mov sbb (bad) jnp shl out inc out lods xor pop sub or sbb mov subl mov out cltd (bad) cmp add lret (bad) out repz xlat add lret mov xor inc out aas mov dec frstor mov sub outsl cmp data16 xchg (bad) xor pop lods xor xor add stos xchg sbb dec cmp sub repnz ja out sub dec sbb ljmp add cmpsb mov mov rclb sub mov jle jg fwait mov adc mov mov and dec aad ljmp or jae xor mov ja dec arpl sub nop repz ss sbb push mull jnp,pn jl inc mov add adc mov (bad) mov (bad) or jmp les push outsl mov leave mov (bad) inc fwait rolb orl addl scas xchg es in divl xor aaa dec push cmpsb sbb fdivs jecxz add ds push cltd imull add mov push daa pop in xor xor mov sbb inc cmp pop sbb fisub std ficompl mov je jb hlt add daa (bad) (bad) cmp mov xor aam popf push jns lds leave mov sbb loop add inc and dec cmpsb (bad) aaa or sub aad ret test (bad) mov in and les test mov pop cmpsl jno xchg ffreep dec xor push es (bad) xor repnz xchg ret imul xor xchg sub (bad) aaa or ds cmp iret notb inc out mov (bad) rcrb (bad) dec sti test xchg movsl (bad) lods addr16 mov out push stc gs xchg xchg push add jmp mov mov xor mov out lahf arpl pop cmp movsl (bad) lods (bad) call (bad) ss data16 cmp mov adc icebp mov jno jge add jecxz pop xor repz inc iret adc cmp jb cli insl ret add repnz arpl ret mov lds inc xchg lret dec or push xor inc (bad) mov (bad) mov push cmpsb xor mov gs cmp fcomps cwtl push mov add dec mov std add test insl pop pop daa xor fmull in xorb pop insb rcll js shlb cmp jl (bad) arpl and sub call sahf cmp cmc push push (bad) jns repz inc or inc aad xchg (bad) push and jecxz sysenter jl cmpsl add mov add jmp pop cli rolb jns add rcll fs ds lods mov or push ret and shlb fbld das push repz and add ficomp mov sbb out aad sti outsb mov push sbb mov xlat js cmpsb pop and push out lcall add add out push adc sbb ret and inc scas ja add in mov in sub popa ret sub std les push jns out out jno cmp xor cmp cmpsb xor andl mov je cmp shrb cli jge dec xchg test add outsb loopne cltd or xor pop divl addr16 mov das push fistp pop movsl and and jns,pn pop dec push inc fstpl sbb lcall or shlb loope jnp,pt sbb jo inc jns mov insl ficompl adc loopne sbb sbb outsb jne fmull loope or add jo cmp cltd aad gs push pusha jno mov push jb push (bad) arpl jl or pop push sbb pop imul jo fcomps test std sub adc add pusha jmp push fsubp ljmp sahf int3 and outsb cmp add add and je or (bad) mov adc xchg ffreep dec cs lock xor pop in cmp mov cmp sub lahf ficompl mov stos or sbb push ret lret call jns adc repz fist aas or test ja stos push mov xor add add mov jno push lahf pop add mov push mov bound lea roll push push lods iret pop xchg push repnz (bad) dec shrb hlt lods pop jne fs dec xor movsb (bad) mov mov jne mov push outsb in and int mov add inc dec add add or std cli xchg fisttp dec (bad) sub sub (bad) movsl jbe xchg or cmp mov jnp in mov fbstp dec jae dec movsb (bad) sub pop sar xchg insl sbb mov pusha or fs (bad) xchg xchg movsb dec push (bad) pop sub add add lcall pop jp sub outsb cltd xlat in mov icebp test ljmp push pop out cmp dec shll jg test lock jno insb push fdivp inc dec mov pop add xchg fcomps jmp mov fistpll arpl mov push or rol pop cmp loope jne pop lock loope pop jl pushf mov out push bound sub or xchg xchg push sahf cltd and fistl hlt iret add inc jl cwtl push push push add sahf adc inc lahf inc imul in mov jae inc sbb lcall add add ja,pt jb pusha cmp sub ja inc fstps sahf mov xchg jmp pop pop jle enter call jno insb push fdiv mov adc xlat scas adc mov mov les cmc jae fwait (bad) mov cld aam mov dec mov ds mov sbb add fcomps mov push scas (bad) repnz outsb cmp pop cmpsl lret idivb pop sbb (bad) xchg jns stc sbb (bad) push les push push mov add mov adc pop adc jp or into insb jne imul xor loop (bad) in xchg dec sub lods jno popf push lock xlat adc pop mov xchg sub adc jne jge mov lds xchg pop push push push dec mov (bad) scas dec add or mov mov dec pop lock lret and jmp in out push jo adc aas (bad) movsl add add cmp loope scas jle add aas mov out repnz push dec xchg dec push pop in aas js fstpt push les pcmpeqb mov aam or dec mov leave cld mov scas push or nop data16 mov add jg xlat ljmp pop add add mov test data16 sub adc mov sbb or rcll lods cmp xor and and xor mov dec lcall adc fwait push insb stc popa outsl hlt lea call jecxz in xchg jecxz mov add add add cld xor adcb fistl xor jo inc xchg cli pop cltd push sbb cltd mov add sets pushl sub loop add adc mov mov lahf push and cli aaa scas out test inc jle jno add xchg xlat popa dec or mov lea arpl fidiv jl mov push cmc mov adc dec (bad) xchg mov loope dec roll aaa push loope mov sub aas cmp or sub insl ficom dec notb idiv push lret cmp cmp outsb sbb mov add mov inc push add add mov push mov shrl inc push xchg mov nop sbb (bad) negb or mov jl and iret cs and sbb jnp stc (bad) stos and dec into push scas clc push rclb mov jp (bad) mov popf push das mov mov cmp jno add popa test mov xchg inc lods dec dec sarl pop jno test pop les jno fs test xchg pop enter xchg les movsb sbb leave push mov rorl inc sbb push repnz push mov mov rcrl xchg into dec mov add (bad) push jno or vpxor inc aas or outsb or insb stos add inc jo inc loopne test push cld inc adc test aaa jne sub push push push push lea mov dec push and fwait mov push xchg push fild sub (bad) add call movsl scas mov int mov (bad) mov gs inc (bad) push dec jmp in out out flds loopne lcall dec xor out jae cmp or xchg sbb or mov out push incb adc xor icebp fnsave xchg ficoml sbb dec add test mov and fstps int fcmove sbb dec jnp mov je dec cmovge scas and mov push sarb lods movsl stc in pop ret xor fidivr jbe (bad) (bad) fisub scas int3 insb fs push shrl fs lret pop icebp lods in cwtl or mov add cltd mov stos ret or mov and lods gs adc dec pop push adc cld sbb fwait xor lahf dec mov jle sahf test mov dec mov outsl mov push push (bad) clc cmc pop sbb or out js sahf addb add add mov adcl hlt push scas cmp movsl int cs enter lds bound xchg pop sub or and stos lods mov adc test jb lods out jecxz push ds xchg cltd icebp cmp mov test outsl popl ret or dec int arpl mov xchg xchg jg push add pop and push arpl cmpl mov xchg xchg push pop sar push mov mov or xlat mov mov movsl ret dec jl push insl or je mov or add fs adc mov mov jne mov cmc mov pop mov in fucomip mov jns push std adc pusha adc pop iret addb cmpsl pop scas mov sahf or mov dec (bad) sbb mov vpsubd mov dec add jo out repnz stos mov dec sbb adc cmp jbe decb lds in cmp jecxz push sahf mov mov test adc ret ret ret sbb inc xchg mov cli js pop jbe pop pop insl pop ret mov and fidiv xchg fiadd add push xor jno push inc test xchg pushf out push mov adcl imul cmp cld ss adc pop inc pop ja imul xchg dec or dec stos mov mov mov adc mov cltd pop loopne add add std mov or (bad) mov lods jp mov push mov or cmp or loopne (bad) aaa scas or in jb dec xchg or xchg movsb or lret ss dec stos loope js pop xchg mov mov cld aad lret fcmovu sbb cltd aad mov jo stos jl add add cmp enter xor aam and jmp mov lret cmp sbb popf pop hlt inc and ss fsubrs aad sub lret pop hlt mov or add fs inc out lcall cwtl mov xor mov rcrl stos test sub inc add xchg mov in cmpsb xchg movsb test lds pop push inc sbb aas mov mov sbb or lret dec ret push xor or and cmp xchg out push mov or ja je adc mov hlt push scas and cmpsl int cs or cmp add cld mov cmp cmp xchg jbe cmp les inc mov aad hlt mov scas mov xor lahf dec inc je xchg or mov (bad) sub clc data16 cwtl add fldcw ljmp dec lods scas mov lret adc jnp fwait push testl add add push out inc adc ret (bad) lahf pop inc popa xlat mov or ret or add dec mov pop dec cmp fcos (bad) fisttpll lahf push insl xor shll pop js scas jle pusha and and call add mov sub jnp hlt pop lods popf test test jl dec push pop ja mov pusha in fnsave icebp stos sahf or mov dec (bad) sbb mov vpsubd mov push mov xor xchg lds pop lcall cs sarb mov adc add add popa mov push enter sbb push shrl pop push ss cwtl dec lds pop jge orl out pop and mov cmp mov inc leave jnp negb lods popf push mov pushf aaa (bad) xor sub arpl adc test add add add enter dec in addr16 ret hlt lods cmpsb dec adc (bad) inc in aaa pop inc (bad) push into cltd scas fwait inc in mov clc add int3 cwtl daa mov popf mov icebp jbe dec lcall sbb lret jnp or stc (bad) fnstenv lret and jg ss cmp mov (bad) jns sbb push insl or ficompl push cmpsb lds dec lds lldt mov jg push ret loop xchg std mov ljmp mov int3 cmp arpl mov bound test xlat lahf aas in inc (bad) push pop imul add xchg mov in test or repnz icebp push xor xchg (bad) mov inc inc outsb sub les or (bad) adc cltd push insb push je mov xor pop (bad) icebp add fsub loope mov jecxz popl add scas outsb lds cwtl xchg sbb or ficompl push cmpsb push add inc or mov insl aas nop ja stos lods xchg jg stos jns loopne jae adc and adc daa jne cmp (bad) mov lahf lahf push psrad hlt dec scas sub iret (bad) cmpsb sbb add sub fwait mov xor mov or popf xor gs mov fbld push popf push insl cmp mov stc push sbb out mov mov loopne ljmp jne mov addr16 add mov push std or mov fucom jp cmp add mov rcrb sbb xor cmp ja ja ja xchg cs xchg inc adc adc mov (bad) stos call sarb jnp mov jge xlat lahf xor pop mov pop ja dec fdivl jge mov sbb in and test add push fisubr into fwait push aaa push (bad) jmp sub leave fcoml and xor popf or sub dec (bad) push (bad) mov dec clc dec stc lret mov mov pop das mov in addr16 push mov pop outsb dec mov enter adc aam rcrb add push jg jecxz fild (bad) repz fstpl fwait push insl cmp rol inc dec jmp mov cmp jmp movsb stos call mov cltd orl jmp (bad) mov out xor jae cmp add test in xor fldl jmp add ljmpw cmc push sbb popl pop (bad) cmp mov jno icebp out pop pushf adc mov ffreep pop sub sub (bad) cmc fcompl dec sti sub sahf dec lcall xor addb adc fist mov inc movsb cmpsb dec push add fwait push sbb popw cmp mov leave cld mov scas push add sbb push sbb jmp dec sbb mov lea pop lods leave xchg shlb pop addr16 or cmpsl out in jl,pt imul ljmp sbb fidivrl lods push ret add (bad) dec dec arpl push stc dec xor adc pop adc cltd jp (bad) in sahf mov mov test movsl aaa xchg mov mov add jg repz pop cmp nop mov out (bad) add and add add add leave cmpsb pushf (bad) xchg movsl inc push lcall xor test inc imul mov xchg shll outsl jo cli int iret icebp paddb scas lcall out lret roll dec pop cltd (bad) xchg mov dec xchg xchg int adc mov fwait ss xchg jbe or add add add nop hlt adc xchg pop pop (bad) mov xorl (bad) cmpsb mov cld sahf dec xchg push xchg cmpsb and pop adc adc jmp jge xchg fistpll popf adc pop adc xchg xchg add or inc std dec or adc lahf movsl adc add lcall pop outsb movsb fldl test jb inc inc cmc jl test sub pop sarb pop push inc jne mov adc and leave (bad) mov sub push scas sti add and cld popf and insl in mov push fsubl lcall mov add xchg hlt adc xchg pop mov xor cmp or sbbb xchg cmpsb idiv push lods (bad) mov and js sub or lds sbb loop scas sbb dec imul xchg das arpl jo dec aam mov push test jl jno adc add add out pop cmc xor (bad) fadds ret sub inc pop lock imul fidivl leave fisttpl jae lods in push jge cmpsl (bad) pusha (bad) scas mov aam imul mov je xor jmp divl mov mov testb add orl flds sbb xchg (bad) fcmovnb cmp dec iret stc ljmp shrb dec jg loopne jns imul inc and cmp movsb imul dec or call ret pop mov xor stc sub std ficompl fiaddl cld lock popa test add inc pop mov sahf cmp cwtl (bad) push (bad) adc pop stos ficom lcall in or inc (bad) xchg lcall into xchg xchg int3 (bad) xlat rcll lret incl sub rolb bound mov or negb pop shlb push add sarb pop div sti ja out (bad) aam or jg xor gs sbb test xor loopew test daa cmpsb and xor xchg pop dec pop test sbb cmp fstl cmp mov lcall aad and adc stc sub xchg adc mov push add sbb inc jp mov sbb clc xchg xor or jae adc pusha stc pop mov mov adc jae cmpsl pop cmc out mov rorb ret sti add scas inc cmp mov test lods mov enter sub mov mov push mov aas sbb fmull in int3 mov loope mov roll sbb jp xchg (bad) push mov pop jecxz xchg cwtl xchg jno xchg mov inc loop lds xor pop outsb add es cwtl stc testl jb xor arpl jp mov pop or add add sub push pop ja dec or iret nop sub sub pop xor into or aas movsb fadd lret jnp push xchg fs fsts sahf xor fisttp dec jno or xchg inc dec rclb outsl sbb (bad) mov mov or xor or fstps pop clc test add les xchg lea sti sub cmc js adc lret push and out push adc adc fsts mov sub mov lahf (bad) xchg movsl fdivrs out and inc adc jb notl fmuls std lods mov daa call popa ret arpl pop mov pop incl std adc in repnz jo or mov jge xor stos pop jp popf or in dec jle mov jge push aad lds mov dec in (bad) cld sbb xchg dec jb pop lret icebp stos and dec or imul add xchg inc dec cmp mov stos fs aas (bad) icebp add add xor fmuls adc fwait test mov inc inc in mov cmpsb pop pop mov adc nop jnp mov out test mov int xor sbb ret pop cmp dec cmc addr16 (bad) ljmp sub sub jo push iret negb add adc add cmpsl cltd jne es mov iret orb inc fsubrs sahf mov and das int xor mov mov dec mov adcb push push or mov xor (bad) orl aas movsl cmc js icebp mov push pop pop jecxz mov sub add adc (bad) sbb pop (bad) clc (bad) mov sub fdiv in je gs test addl or sbb repz push add xchg sbb push mov loope shrb insl dec adc jnp cwtl pusha push (bad) repnz sbb add aad rcll cmp int3 stos insl xchg fstpt pusha orl mov push push popa push out jmp dec movsb lahf bound (bad) lret decl arpl sbb out pushf push xchg cs jecxz jnp sbb mov stos xchg adc sub arpl jg jae outsl sbb xlat push sub add roll aas lods stos pop lods insl pop xchg out xchg mov or sahf (bad) xchg inc pop xchg jmp jne mov mov out jae and sub dec adc js es jno lock cli sbb andl (bad) icebp mov dec mov (bad) xor dec dec mov add add out jmp sbbb inc out decl movsl bnd dec mov jo insl mov outsb lahf shll sub cmp inc xchg and cmc call (bad) std pop dec push data16 aas mov mov and adc xor pop in inc fistl hlt lds add rcl sbb or es leave jnp testb sbb call fidivl cli sbb or mov imul jle push lods adc test hlt mov movsb aam aad jg movsb js inc in aaa pop popf out fwait sbb sub popf mov push mov add add inc or ljmp shll pop cmc enter dec xor jnp scas cmp jmp call cmp adc mov or gs fisubl or adcl jb out adc xchg int3 shll add add cwtl and dec fisubrl pushf dec and ljmp sub xchg sbb (bad) and ja or cmpsl pushf xlat aaa jbe sti pop mov test repnz lahf xor test je int3 dec in incl or add rcrl dec xchg mov inc add add cmp jne iret cmp xchg fisttp mov insl lods outsl fdivrl add mov pop popa imul sti lea or push int gs mov pop ret addr16 enter mov push insb jbe add mov sub push je gs add add (bad) arpl sub or stc je fisubl inc mov popa sub xchg pop xchg popf ret sub xor lock ja dec add xor mov ljmp aaa (bad) icebp sahf inc movsb mov pop push in fwait lcall outsl xchg mov loop xor mov add add dec inc mov out repz adc ljmp popf ret repnz xchg push lods and push jb cld mov mov fcomps lcall hlt sahf jg cmpsb mov movsb mov in xchg pop jl cmp add sbb push insl shr dec stc and add add cld loopne mov adc daa xchg jae mov out iret dec out nop pop and or inc popa (bad) lods and xchg sub push bnd dec fstp subb jl sub xor push stos pop xor popa sub sub sub push mov jne iret cmp xchg add add dec mov mov insl lods outsl fdivrl add push mov or aas cmpsl lret or mov jb aam mov (bad) clc dec sti insb dec pop add fcmovnu jle sbb inc addr16 in ret and jo loope add into ljmp mov cmpsb xchg fldl2t test incb add push inc inc mov test test mov mov aad push dec cmp pushf jecxz mov fistpll (bad) out fs dec sub xlat sbb ss push jo add add (bad) insl lds (bad) das addr16 push (bad) outsl popf fs cmp xlat clc repnz jecxz std je fsubp ja (bad) repnz pop fistl hlt push cmp fsub (bad) hlt ucomiss mov decl adc and ljmp mov leave es stc je or (bad) (bad) jmp aad arpl add lods xchg adc cmp nop push jle pushf add bnd paddb fwait pop inc pop xorl or add or or push popa lods jle sbb jo in test mov mov inc pop add lret or xlat xchg add xchg iret fdivrp pop and call pop xchg dec popf push inc mov cmp jge,pt sbb repz iret test nop pop aad (bad) mov sarb mov xlat aaa shrl rclb push es test inc incl jno fwait nop aaa (bad) and leave cmp nop push movsl (bad) fsts pop add popa das or push jmp xor cmpsl add mov out adc repz jge push pop rolb or arpl cmp ss inc dec call rorb sub imul pop inc fwait xchg adc or rolb sub aam xor push add add ja and lods mov pop notb cwtl push dec rcl xor sbb pop mov xchg fsub rcrb into clc outsl xor test xchg scas push cltd mov mov cld lret js add lret insb dec repz mov sahf cmp (bad) lods and jb or add add add bnd fimull jae repnz pop sbbl xchg test add (bad) ljmp jmp popl mov pusha xchg cld cld pop test cli mov sbb inc cld int3 les stc (bad) into add pop cmp in (bad) sub insl mov xlat call icebp push jecxz mov mov aas loopne push xchg pop inc jg jp xchg pop insl pop cld outsl cmp pop push test lahf xchg push stos arpl out aad add adc je ja outsl enter pushl insl scas in lret sub aam and jg mov mov mov add fldl dec xor cmovge imul dec aaa sub sbb xchg push sub adc jbe mov mov inc xchg test and fcom push negl (bad) test (bad) mov (bad) fstl clc inc gs jo sbb mov (bad) xor jle add lret inc adc mov sub adc push out add lahf imul pusha inc push pop push dec stc lret or repz loope adc aas pop and int lcall xlat fwait xlat popa xchg or lock aam lods popf cmp repnz push fidiv mov loope and add jl or arpl push popa add xchg jmp xchg inc ret mov test xor jo ja test inc xchg fimul jg xchg es hlt or lea pop fldt cmpsb jbe xor mov mov mov pusha fsubs in into idivb jo mov (bad) fiadd aam pop or clc xor iret add add test mov fidivr daa lods pop in push and sbb cwtl nop aaa jae jl mov jns add cltd xlat loop dec lea mov daa js mov push or lods scas mov cmp (bad) enter (bad) sbb add add add (bad) mov std das imul xchg in jo leave mov sub jbe js ret pushf pop inc nopl pop push add scas xchg es mov test out push imul hlt push andl je xchg out xchg sbb sbb xchg movsb or insb outsl pop add imul mov or test jle fist sub mov jno pop inc lret add arpl subb call loop inc pop jle push imul pop lock sub inc cwtl bnd icebp mov stos negb roll sub add sub and inc or mov ljmp xor mov dec (bad) mov jbe pop add add sbb sub in push sar popf xchg clc dec mov ret ret lret sbb ret loope dec hlt dec popf push sbb mov push fildl add out hlt and movsl push adc call test adc dec adc inc shl sbb out cmp xor dec xor mov out leave push xchg (bad) adc sbb add add sar lcall cmp mov add je data16 mov mov out xchg aam dec or mov mov out sbbl add insl daa repz cmc popa sub adc push test xchg stos ficom test (bad) or xor mov rorl mov movsl lret movsl add add lcall jle sbb aad ja and push outsb js loopne outsl adc insl nop or lods push scas fdivr adc dec push cmp mov and stc mov dec dec add aas orl mov fcoms and cmp add add jo mov sti repnz cmpsl sub leave xor hlt fsub loope lahf pop inc mov sbb rep std mov into mov dec ret push cmp or pop lods out pop inc stos push idivl dec lea mov add adc lock add (bad) out adc cmp inc or cmc insb das (bad) jmp ret out push xchg jne es into fucomi je push roll gs scas mov popa leave xchg pop pop in push in ljmp in in inc iret sub push out mull (bad) out dec stos push mov sbb pop xchg ret adc dec (bad) mov sahf outsb mov (bad) imulb movsb cmp aaa mov or repz dec sbbb mov push addr16 lds push ret insb dec pop rol clc mov (bad) and sbb outsl in (bad) pusha mov adc add mov (bad) std in aas shrl adc fnstsw xchg push daa ror mov in xlat or inc inc mov hlt mov pop or mov dec xchg adc mov and mov inc fwait inc and pop add sbb push lds push sbb push add mov test add and sti icebp sbb xor arpl jbe,pn imull xchg mov rolb push push or es cmpsl mov jne inc sbb enter das pop sbb jno out mov ret xor lcall imul xchg in repz xor (bad) fstps imul mov jp inc or sbb fidivl mov jne fdivrl or inc cmp inc lcall cmp cmp call loopne sub scas dec xchg mov int repz mov fldt mov add out mov push lahf xor mov add mov cltd mov mov lds lods lock popa xorl int movsl pop and rcrl cwtl stos adc pop dec lcall jb insl es pop sub (bad) arpl mov lahf scas pop gs loopne dec mov add mov call mov mov mov and orb mov (bad) adc mov xchg movsl and push aam sbb std jno leave fdivrl scas add or sbb das adc push movsl xchg cmpsb out roll clc es or and add inc push mov mov push sbb in mov vmovsd adc insl add sbb addr16 cmp sbb mov mulb xlat adc pushf push sbb jo jp push int3 dec jns mov cmp or lods cld out ret clc sahf cmpsb or xchg mov add das (bad) hlt scas lcall loop push xchg cmpsb sbb lea in aas jmp xchg mov jecxz xchg mov jae out jmp (bad) leave es cmp push adc loope mov xchg mov jle test pop aaa loop mov push scas loope cmp in adc or adc call int3 (bad) loop jno (bad) (bad) rclb push imul aad xchg jnp mov jo inc dec jmp (bad) stc sbb movsb mov pop int lret push call hlt imull pushf lahf shrl in and das sar or (bad) add js and sbb pop std or mov insl pop adc mov fwait arpl jno stos cmp aad iret sarl jne movsl enter (bad) lcall sbb push push fdivrl js adc cmc jp add pop daa mov mov fild adc add pusha xchg cmp nop jmp cmp sub rcll xchg xchg enter shlb cmp xchg mov adc arpl jae push xchg jecxz dec shr mov mov jmp (bad) mov nop xchg push inc jne iret mov enter xchg dec jg push insl mov add test stos mov (bad) aad cmp sbb pop cmp fabs jae lcall inc vandps rclb mov fidivrl cwtl fsubs scas jns add jb aaa push or pop mov aam add mov cwtl popf xor add add add fistl jg imul in pop jmp add jno and dec push aam in jnp flds jg mov clc outsl add loopne or test mov pop pop data16 fistpll xrelease je add sbbb inc xor mov imul add daa mov in sbb arpl mov xor addl jecxz rclb int3 pop es sbb lock into aaa fst cmp aaa push sti dec pop in daa out jmp cmp es push mov fwait fs andl cmp pop add aad fimul mov pop in mov test xchg jb or pushf xor pop cmc clc out out pop pop pop mov mov mov scas int3 mov jo and sub xchg mov add jo push divl pop stos fstpt inc add cmpb xor daa xor jnp mov dec dec jb adc push movsl sbb push adc or dec mov sarl add or sub cmp aaa or xchg jmp out adc xchg cs xchg dec dec adcl cmp and dec sbb pop mov add hlt mov push sub sbb and test mov daa repz hlt push (bad) (bad) push rclb lahf sub push push jmp arpl jp rcrl dec lcall pop rclb idiv scas xor int3 (bad) pusha sbbl xchg mov bound out int3 cmc adc add push mov cmpsl xchg xor fsts dec cltd (bad) aaa jmp jge pop sbb lds push in jns nop jmp aam sub loop clc xor cmp lea insb pop xchg dec repz push call inc fcoml cmp shr mov mov xchg data16 pop popf into add add add lcall cld scas sti adc std push jb int3 add push jecxz push in fist daa add repz cmpsl imul mov pop stc or mov insb push lret sub das sti aam (bad) call add mov mov int int movsb aas mov cld sbb clc test shlb inc jecxz dec lds cmpsb ss sbb fmull (bad) cmp jle pop adc popa mov std cmpsb lea sbb push sbb inc cltd fnstcw cmpsb pop (bad) clc lret cmp push push out popf xchg fadd and aad mov daa (bad) xchg cs inc dec jmp add add test in jne cmp lods stc ljmp stos pop jo mov jns divl test push aaa (bad) stc dec jae pusha sbbl dec das repz int insl cmp push adc mov inc push insb push aam arpl add addb xchg fisttp popa and jnp jecxz adc cs or jne inc popf repz jae and and lahf mov (bad) popf mov insb outsl insl add pusha movsl adc int sub insb mov clc xchg xchg addr16 dec jmp cli stos test test add add push pop dec adc mov mov icebp xchg adc daa call je dec fstl cmp dec jo test jns mov scas insl inc imul fsubrs test xchg icebp inc inc outsb daa subl std inc lret adc inc sub pop and int int add fsub cld scas mov cmp mov pop pushf adc enter cmp pop fistl test roll add (bad) adc xor sbb dec fnstcw loope and jmp xchg je pop adc push mov add fcoms fidivrl dec cmpsb daa lea in dec stc into cmp jge pop inc leave push scas aas cmpsl inc aaa inc inc sbbl imul jmp jo sti data16 repnz xor xor popf test shll and jbe and fcmovbe das int3 cmp add mov pop mov stc dec cmp ljmp push test sub inc or or xchg cwtl xchg jno push xchg aas adc adc (bad) jae cwtl sbb dec (bad) pop add icebp jg test aad jne insb mov cmc mov gs pop sarb add jle iret mov xchg cs inc aad cli pop mov in jne jle jl pop mov sbb sub lods ss into push mov mov jbe lret shrl scas movsl pop das mov fistpl push adc loope or fsub cmp or ljmp hlt stos sbb pop xchg dec sbb (bad) hlt jle popf lret dec jg cmpsb scas dec fildl push pop fcoms je and inc push shr in sub or cld sbb call and in cmp inc aad popl inc loop xchg add data16 adc mov imul jl push pop rolb in jno les fucomip (bad) fsubrs out daa loopne divl (bad) in insl fwait repnz les movsb push mov insb test push es imul add jno out rcl sbb insl sub dec mov fldl data16 ret lahf dec sbb push (bad) xchg jae test movsl out push fstps lcall insl test jns (bad) out sbb arpl rorb adc push (bad) fsub out shrb xor push jns xchg jbe mov nop iret mulb xor dec stos or sub test or addr16 jb mov (bad) cmp lret pop lret outsb ss add xor mov mov sti jo loope cmp mov js dec out ret cwtl jg sub shrb inc jb loope adc ds add add in mov hlt divl cmpsb (bad) mov or xchg movsl imulb add mov dec xor loop aad fiadd adc push adc xchg jmp jnp int3 stc mov scas xchg imulb ljmp int3 outsb mov mov icebp xchg xlat pop flds mov and jae mov xor cmpsl push cmp add insl pop cli test in inc dec cmpsb mov int3 ss cmp pop fimul mov inc adc sub mov (bad) test dec sub nop lods lahf dec jb xchg daa in in or cmp jle push (bad) inc xchg mov jecxz xchg shlb or clc sbb add jp in and scas push mov scas mov cmp mov js in das insb punpcklwd sahf push jp adc icebp jno repz icebp shl add xchg inc addb sub pop inc xor inc adc aad inc inc cmp dec in scas mov and jl mov aaa and ficoml xor lcall sbb rolb (bad) pop aad pop push dec addr16 and or adc mov (bad) ds and popa sbb xchg add mov lcall outsl inc cmp flds mov push jae fidivr loopne xlat incb popf jbe testl pop aad shlb es inc xchg fdivrl mov jmp mov add cmp test sbb dec inc dec inc int aad mov pop dec cmp add lods cmpsb jno call (bad) mov in in out sbbl push andb repnz sub dec pop (bad) icebp add fmull jecxz mov add iret cmp std pop adc outsb (bad) jae vmovsd adc insl add sbb addr16 imull addr16 push in xor add add sub decl ja lcall iret inc pusha sub lcall mov jns lods in enter mov movq jns mov (bad) cmpsb adc sbb inc push cli add mov ret lods das jecxz push push popa ds pop adc add add or movb jmp lds sub or push int3 icebp les dec das xor mov jg sub fsubrl mov jl loop jnp mov hlt outsb loope jo jle inc (bad) pop invd mov xchg daa nopl lret popa mov push inc mov add add imull inc fsubl cmpsb (bad) lea fldenv stos jno mov sbb cli and push push nop movsl xchg sbb outsl je and add jle mov lret mov xor jne int ds jle jl rcrl cs mov aad les cmp je mov add add mov cmp mov pop rorl push popa and jnp jecxz sub push fwait push push (bad) clc (bad) jb xor fwait call movsb fisttpll js sub sbb adc or movsb and cmp aad movsb imul mov cld cmc sub cmc xchg in gs inc and (bad) mov or cld insb std cmp xor pop push push (bad) mov xor and aaa psadbw mov mov bound ss jno dec in insl inc fbld mov add xlat in cmpsl inc push dec xor lret cmpl add add adc xchg loop les movsb push sub in test ljmp cmpsl ss dec (bad) popa push arpl shll in cwtl imul pushf pop sbbb ss sarb ret push mov aas xchg add cli mov leave cld mov les add add hlt lea sbb ret sub mov push popf push jns enter mov (bad) ljmp test (bad) cmpsl inc iret mov dec rcll dec pop mov stos jns roll xlat test in add sub dec add jg sbb (bad) mov fnop push testl cltd mov in xchg jecxz (bad) aad gs dec mov jp adc fisttp fiadd push (bad) cmpsl lds rcl pop mov test add lods sbb xchg and push push mov mov inc cs xor xchg aas popa out call jns outsb push nop pop das rclb add gs cs adc mov popa iret (bad) mov sbb push inc dec inc lds inc fsubl ljmp in das sub mov addr16 cmc push mov dec int mov fistpll mov sar lret push mov add mov scas int and inc adc imul pop xchg enter in cmp lods ficompl test fcoml xor hlt inc sub inc pop xchg push fidivl or ret out xchg imul sub call mov add inc int3 lea emms jae pop mov adc jae pop les push fmulp movsb mov enter arpl mov arpl (bad) gs (bad) gs jle push dec subl adc stos out je insl lds jb (bad) les add imul push inc mov nop mov lcall mov pop push push clc pop clc mov jnp iret aad xchg adc mov inc xlat jnp xorl push addr16 push mov clc int3 imul push mov (bad) int add add mov (bad) sti sub lods cltd int sbb jns or je lcall dec bound std (bad) xchg and jne and xor int3 hlt inc and dec (bad) xchg cltd sub adc sbb push in mov xor add cmp mov shlb cltd push xchg fwait mov add mov bound xor mov push push sub test cmp pop sbb sbb cmp cmc jno adc stc test arpl dec cmc mov cwtl imul add cwtl adc mov test xor sub lds stos inc (bad) ljmp dec out push ss mov push outsb in sbb add push ss outsl pushf pusha jbe mov inc pop mov in inc push lods adc lret mov into orl push icebp mov cmp push divl add pop adcb adc pop adc cmp imul mov movsl out push loope int3 jo decl push movsb ret int mov nop popa int pop add sub jl sub daa jo lods pop dec test pop jne shlb sbb add add je lcall cwtl (bad) xor insl (bad) mov mov inc pop mov cli stc and call push enter pop mov popf lods js pop inc clc (bad) pop pop in sahf bound jmp push mov test ret shlb dec (bad) jo mov out lcall add add or mov xchg dec add aad fwait push and stos popa cmp ljmp and xlat lds ret pop xor push iret cmp test stc xchg in push int lea adc mov jnp andb nop aam js movhlps roll xchg pushf xor call rcrl jmp int3 or push loop mov dec (bad) insl fwait into orb sarb (bad) dec adc pop into or lea loope scas leave negb xor xchg mov jle outsb addr16 cmc jle popf fbstp int add push pop and mov mov inc (bad) sahf adc adc cmpl lret std gs cli add jp mov add xlat popa lcall inc cmp xchg clc outsb (bad) dec cld jl pop xchg and jb scas xor jmp pop xor xor add inc in or scas dec inc jg mov or jnp lret dec sbb jmp movsb xchg pop push cld push stc push xchg mov nop dec mov mov sbb xlat pushf icebp push jecxz (bad) das push pop mov inc ret jns cli out sbb dec cltd mov out sti push call push add (bad) outsb pop gs mov fnclex lahf cmpsl push ds (bad) mov frstor fidiv ret aaa arpl out pop outsl inc push fucomi mov clc mov imul test aas jae or sbb dec ja mov add add add inc add popf rcrl fwait fwait inc sub int3 (bad) add out pop lret popa lret push push rcll outsl (bad) (bad) xor sbb pop xchg jne ss icebp and or or inc and test gs mov xlat cmpl inc mov mov xchg out mov dec jbe sbb add dec (bad) je shl jb int3 loope mov cmp cmp cmp jmp ljmp mov sub es pop xor push sbb faddl push (bad) lods scas mov or mov mov in scas fwait pop aad add cmp (bad) mov mov aaa or in jp out (bad) dec mov and xor (bad) dec mov fcmovu lds (bad) push push mov dec pop xchg cmpsl inc xor xlat sbb or cmp test adc mov insl pop mov cmpsb stc xor xchg aad nop ficomp dec add daa outsl adc fiaddl aaa sti xlat mulb mov es fnstcw or inc xorb xchg or push push add lahf sahf sbb mov sbb rcr lahf in dec imul cmpsb and out daa mov cltd pop sub cmp add lea sub js add scas jnp es cmpsb cmp lcall dec push sub mov push inc popf enter lcall xchg test xor iret (bad) roll and jno hlt jle movsl cli lods btr push add pushl inc std and out and out add xor jb sti jno jg pop add sub les sub inc lods mov dec aad dec add fnstsw test add mov and loope lds rclb inc inc mov movsb leave imul push in push lods mov or mov xchg mov add mov sbb shrb int3 daa pop add mov jg scas jg aad lods mov mov xchg mov sub lods sub (bad) mov inc push (bad) test mov outsb mov rclb iret in fld and (bad) call sbb add add test pop jns jne lcall mov pop repz add inc emms lahf imul imul pop pop mov mov push movsb inc hlt test or pop test ret mov mov out jmp (bad) jecxz dec sub arpl cmc ss cmp outsb pop add mov cmp pop dec and shll add pop jge push adc and loope mov xor mov jmp jg sti popf xchg pop scas cmp sub lock dec adc dec ret insl sbb pop sbb mov negl add add (bad) enter dec push dec repz jb add xor mov sahf add imul mov sbb notb sbb les xor inc lcall loope cli jmp or shr imull repz sbb add inc push cmc sbb sub or add out jge in pop sub psubsw (bad) aam neg (bad) cmc jp xchg test jno xor sbb icebp int jno sub les cmp lret lock scas inc mov and outsb add cmp insb add jl in arpl cmc mov lret mov cltd popf add clc add cs mov (bad) mov clc xlat cwtl pop jge dec mov pop jo mov pop push fwait imul mov repnz (bad) jecxz iret push sbb xchg ror adc xchg aaa das push mov inc arpl sbb sub xchg or addl add add cwtl jb pop cmp xchg mov jne inc xlat ja and push hlt jecxz stos xchg movsl std fimull btc ja mov sub jg mov adc add lret imul jbe or jmp cmp mov bound add xor push mov or test inc es push ret adc mov xchg mov (bad) mov lahf pop sti push inc scas lcall mov sbb inc add add hlt enter notl or stos mov add das dec mov mov loop mov adc scas out mov jb in das mov ret add in aad (bad) xchg hlt cs and mov mov xchg cmp cmp out xor test add pop mov sbb inc mov cld cmp xchg ret cwtl sub jns movb or jmp je in dec mov push lods sahf cmp ret les addr16 inc call add loop (bad) jno jnp xchg mov pop mov scas dec push cmpsl popa (bad) ss call inc mov sub xor pop out ror sbb jno fiaddl xacquire (bad) loop cmp pop pop sbb xchg sub sbb inc xor mov (bad) cs (bad) mov xchg cld mov pushl imul cmp push aas or in adc test push sbb out sub xchg icebp sbb repz push iret mov cld push mov ret jns xchg cld aaa and out xor push jp add mov mov lock aaa push mov jae xor xor repnz btc jb,pn scas add xchg mov mov int3 insl push xor mov xor in and sub pop mov das dec adcb aam jp,pn sbb adc ds in add add cs je scas stc jnp das adc cmc xor cmp add into add int3 lds xchg negl int3 pop xchg call jecxz sub jo ja bound pop sbb jl adc ja ja mov scas mov inc inc enter test jb aad xchg and aas cli fisubrl jb dec xchg adc mov and push mov in sub std sbb test loop jo (bad) mov jmp (bad) in sbb mov push sbb jmp hlt mov sub out mov sti shll add in and scas imul movsl pop loop aad das pop stos icebp mov add and add pushf lret add pushf outsb jp aad inc popf fcomip dec ret movsl stos sbb dec sbb cmc inc sub adc movsb es xlat sahf pusha icebp sbb jmp sub cltd sub xor mov add jp (bad) imul jle jne xchg sbb and cmc sbb fnstcw sbb or and clc ljmp dec mov imul mov dec (bad) sub fldcw out cli jae or je hlt xor sbb jp xchg add add push xchg and pop aaa mov hlt pop mov lret jb and jg dec lds xor mov dec mulb dec repnz jno sbb dec addr16 orb data16 lcall xchg adcl leave ss popl (bad) mov cld (bad) aaa out sbb dec pop cmpsb pusha sbb lods sbb dec push mov mov add aam adc insb adc jns je fidiv push (bad) push mov out outsl sbb testb add push mov mov cmp (bad) repz out xor adc add add mov loope cmpsb mov outsb mov movsl pop pop nop les sub fwait inc rolb loope pop (bad) les mov adc fs push inc lahf mov cmp jge ljmp push out push cli insl imul push negb or push shll adc add add fnsave and mov pop addr16 xor or cmc repnz lcall loopne pushl aaa mov inc in sti in push pop pop and cmp mov pushf cmp imul jae mov inc dec jo mov iret mov jmp sbb add mov or dec hlt stc out orl cmp push pop clc jno sbb add imul (bad) sub sbb xor mov adc and xchg repz sarl jnp outsb sbb (bad) cmc out andb fwait dec fwait inc sbb jbe add lret jecxz in push xor push or pop int popa dec dec pop (bad) lret lds mov sbb or je mov xchg test mov sub mov or outsb pop fnsave xchg or pop mov push sbbl test push aas inc into fnstcw pop sub jns aad mov add add push ss cli jae dec mov lcall push ljmp xlat sbbb xlat movsb dec jl mov inc mov enter mov and hlt imul mov pop push cmc inc mov icebp xchg into ret pop sub stos mov mov mov add add jecxz test (bad) std out mov and rcll jl dec fdivp sbbl rcrb mov cld fwait (bad) mov popa mov test fwait bound add ljmp in adc adc adc jbe (bad) (bad) ret xchg outsb (bad) or sub movb add fbld adc push popf clc sub ret mov mov add imul xchg sahf jbe push or fcoml push dec cmp std adc cmp cld mov popa mov stos add dec out dec stos jno ret loope adc rcrl xchg xchg pop xlat add jmp add scas sub xor lcall sbb jge rolb lods pop ds cmp fistl dec sbb dec jno jne adc (bad) ja (bad) mov and lcall out mov aaa push addr16 inc mov cld loope jp jnp sbb fs and push jnp (bad) add sbb mov outsb lock push lret cwtl mov inc inc inc push clc add movsb jg push dec sbb inc sbb fwait dec dec stc out pop lahf data16 clc mov mov dec xchg push adc push aaa data16 xor outsl cmp push pop or and mov lahf jnp mov sub push and in int3 jno fidivr stos inc in rcrl mov scas add jne push ljmp mov loop (bad) mov adc ds repnz pushw fdivl jge adc mov cmovns add and adc jmp jno cmpsl rorb loopne mov lock mov add fildl sbb sub mov nop gs push dec or mov adc mov xchg jge sub aad sbb cmpsb cmpsb lahf xor in add add xchg roll test test lret pushf sahf in in mov pop sahf (bad) jns pushf sbb fcoml push (bad) pop lret dec movsb (bad) lock xchg fimul jns mov xor outsb lods stos mov cmp inc cwtl add push es std pop cmpsl jge mov add mov mov add sub mov xor enter pop insb pop pushf popf pop mov inc lahf xchg push scas cld fld shrl subb inc jbe pop out (bad) push fs mov lods pop or sbb aad adc mov inc push out push pop push mov jnp xor sarl int3 xchg and push outsb pusha aad aad aaa lcall out cmpl xor nop mov pop pop ja repnz pop mov int add imul dec je je add (bad) push (bad) adc inc xchg cwtl ret dec or push shlb icebp dec push jo fdivp ret sub add jl and icebp fs jae outsl inc lods ss mov movsl fucomi push mov add ficom fwait ss inc popf loop insb (bad) mov fwait test and mov std xor adc testl inc jne std scas and (bad) (bad) jmp call add add jp xchg shlb les fs repz in mov adc int3 adc repz roll outsb xor ret inc jbe push rcr insb inc pop add cmpsb gs dec icebp cmpsb stos iret shll (bad) inc ss jb ss push (bad) (bad) sub aaa cmpsb pop hlt dec xchg cwtl mov cmpsb add nop dec adc push mov ja jge loop movl aas ljmp xchg xchg sub and hlt mov testb push xchg dec mov add hlt or xor clc mov (bad) sub fstpl ss (bad) sbb xchg mov stos cmpsl repnz add add push sbb pusha bound test sahf sbbl xchg fwait aam loope mov loope xor int lcall fstl cmp adcb das into cld xor sbb mov stc loop mov mov inc or mov shlb jecxz or push (bad) enter and aam xchg ds sub pushf (bad) jmp ret loop pop cmp dec clc add mov lods pushf adc add cmp mov jle jmp sbb cmpsl add jno sub sbb cmp dec loopne rorl cmp mov xor add xchg sarl pop pushf repnz in (bad) mov ljmp xchg dec lcall and incb push xlat je insl xchg cmpsl insl repz loopne fdivs fldl and pop adc cld rorb adc jmp mov stc and jb inc cmp cli xor add add ret mov xchg xor pop imul repz mov adc cmp adc cmp (bad) inc loopne lods or mov notb cmp or sbb sbb (bad) sub cmpsl iret sub dec and add sbb dec (bad) mov mov add das popf pushf ss out sbb in mov add inc stc jp sbb jo int3 lods mov js fdivrs pop out imul hlt jle cmp push insl jp fwait or mov rol ja repz loop cmp sub cmp fistpl lea adc add add add add shl aas nop mov add sub push add mov dec mov into daa (bad) lds inc cmp add sub adc (bad) icebp inc imul jmp fnsave fwait push iret jmp sti fs cmpsb and andps sbb sub arpl jae (bad) cmp popa divb add add lret mov mov clc cmc jecxz jns adc mov pop scas add fld inc out lcall sbb mov adc arpl lcall je mov mov mov das pop fs je jecxz push jb inc movsb call jmp bound lcall mov sbb mov pop test insb gs dec out cmp (bad) ja push xchg and inc push pop xlat push cld pop sub sahf in cltd or sbb call repz in dec and or scas push loope daa jecxz pop rolb jbe add stos (bad) out in jns xor mov bound pop cmpsb mov push cmp dec and out sub or pop lret fwait jmp jecxz xchg in pop pop mov mov sub push popa cmp push cmc mov rolb dec push adc dec adc aaa inc call js sahf push insb jge das rolb add xor mov push out adc adc mov out daa adc int3 and loop cmp lea out rcrl adc lds insl push xor sub or out data16 and xor adc stc je pop lds dec mov sub (bad) flds add add add fdivl mov cmc mov cmp and inc jge fnstenv push nop jmp dec push stos test inc pop dec notl xor repz adc mov je push dec xchg sub std push dec les inc mov out ljmp shrd ja cmp jo add jae lock cmc pop adc mov xchg icebp loopne (bad) adcb lds loopne fildll jp ret add cli sub call mov adcl insb push jnp pop orb ja mov ljmp xor push add scas add add popa dec fnstcw cmp push sub dec aam bound orl and mov ret bound (bad) mov pop jns and sbb lea test or adc notb or in jmp mov xchg and int push das add add mov adc sub xor mov inc mov scas (bad) outsb out into push (bad) pop mov pop ret lds xchg xchg imul sub enter ljmp and cmp jb in jmp add pop (bad) jecxz lcall roll add mov pop incl and xchg nop adc movb cltd mov push dec in call (bad) lock dec mov divl fisubrl cmp shll jo (bad) push dec mov adc mov out je jns daa movb or mov jp into xorl daa loope mov push jmp ds (bad) repnz std adc call cmp stos sub xchg and cmc mov cltd xor sbb call lods mov ss inc jns iret shl jns cmp sub addb add mov mov or int3 (bad) in mov xor push or (bad) not lods movsl mov out imul cli xchg jb xchg (bad) mov (bad) fisttp daa jnp xchg sqrtps jg fidivrl xor int3 mov loopne cli xor jno sub fisttpl cltd aad lret inc leave add insb das mov rcl aad in or mov push add dec pop (bad) pop sbb imul in mov push shrl sbb xchg xchg mov outsl lds movsb push fiadd test sbb test push xor or ret xchg push mov aaa and rorl mov add dec pusha addl (bad) and ret sbb mov fstl fild call sbb jno int inc leave into cs adc mov jecxz sbb ds sbb outsl out icebp notl imul sbb test outsb xor mov add out mov add loope adc in aad inc cwtl mov add jae in hlt out xor cwtl mov stos (bad) mov ror (bad) icebp inc popf inc adc push in push jae fistl test adc call mov mov test in pop mov fnsave lahf ljmp add add cmpsl xchg adc insb or fdivrl mov push mov faddl xchg popl sbb sbb test or popf les and pop outsb pop out or adc pusha inc icebp scas push (bad) cmpl push sbb das pop or xchg or mov xor pop fidivl push stos dec outsb fs xor mov js cmp lret sbb pop mov add test fyl2x jne xchg jb push fwait and negl jns stc std mov lret cmp pop loope or jno fisttpll pop arpl jmp push pop or push (bad) xor add mov ss jle mov inc mov or sub mov push bound movsb add jno aad sbb notb xorl mov and add add cwtl push je or aad dec mov in or (bad) adc imul je add add add shrb and repz or movsb movsb pop pop imul sbb repnz jae inc and aam aad push iret pop push pop das xor out out push cmpl into or xchg and xor mov mov ret std test iret scas repz adc bound dec in fistpll mov or icebp daa cmp pop mov push lods mov jae imul pushf xor shlb rcrb imul pop arpl mov sub (bad) iret adc jl push outsb aam fistpl add push mov adcl add xor fsqrt inc test mov pusha mov mov or loop dec outsl xor loope popa test mov cmp fidivl sahf push jl push and add call jp mov out mov jp dec test insb sldt in fcomi lret fldl dec js cmc mov arpl into xor cmp jns dec xor insb test lahf sub rcrb jnp movsl mov jo,pt mov mov pop pop (bad) test push mov lea sbb negl add cmp es add sbb add push mov and mov push bound (bad) out bound test pushl inc cmpsl sub icebp je fdivs dec lea sbb ret xor xor xchg pop jge movb inc (bad) out pop mov mov add mov xchg sahf fwait cmc cmp int3 jbe adc lods ja inc cmpsl mov fcomp test push adc subb mov xchg nop mov cltd jl xor rol push ja and add out jmp cli scas test push xor (bad) arpl add xor mov mov inc xor sub push hlt pop data16 jp je cmpsl insb pop add mov aad jg (bad) dec jns xor sub jl mov movsb mov ret aad mov sbb adc inc and jl xor add adc into sbb test add xor mov stos fisttpll or pop loop cs notl cwtl jno aas out push mov xchg pop jno stos jns mov sbb es xchg fadds mov add ja loop test repnz loopne jge adc pushf add pop mov mulb data16 ret sub mov sub lock out ss mov sub mov mov jg adc push movsb mov ret aad ret popf imul test and sub or gs sbb push xor iret pop rorl cmp mov and sti ja add dec add dec test xchg mov mov clc sbb mov cmp lret push mov mov outsl fwait xchg popa dec mov call paddw mov imul pushf lods mov aam add cmp mov nop cmp jno pushf nop pushf adc pop adc inc mov mov add add jle xchg mov and data16 scas std test jp cmp ftst jbe mov hlt mov lock pop jmp stos lret fidivl sub outsl dec cld lea dec mov cs xchg push dec mov adc aad lret movsl ja sbb into xchg sub add push mov xchg call adc scas shl hlt aas xchg aad dec cld mov push insl imul and lods leave lret hlt mov xchg ficom aad jecxz mov jb out pop mov movsb xor mov pushf mov rorl lret sub add jecxz add mov imul ja movsb data16 sbbb out lret call inc inc aas adc sbb jno ret jmp mov push cmc push in push mov jns mov fisttpll ljmp leave push inc test pop pusha test ja xchg add iret movsb sbb dec mov bnd mov dec lods stos jo mov xor jnp cmp fild lcall insl mov push aad (bad) int3 ucomiss pusha packssdw dec dec mov add mov push pop nop shll cwtl push hlt xchg and or or fs pop pop and add add mov sbb push jle xor stc cs jl je pop jae push mov mov xchg inc push sbb push sub jp xor in lds lret ror add inc fiadd fdivl cmpsl fs adc sub sbb movsl sub push stos insb (bad) jmp pusha jl mov xor jne das icebp in xor and out pop xor loop xchg test add fnsave sahf mov mov es scas xor (bad) aas nop adc inc push mov ret es and movsb pop test or rorl add mov int adc push cmp jmp sbb jl jmp or das jp sub adc repnz movsb (bad) dec adc mov pop push mov loop mov xorl mov loop icebp shll sbb outsl adc cmc and push adc mov sub xchg icebp mov cmc cmpsb push les lret inc jne xchg arpl mov (bad) push pop lock sub pop inc and mov mov addr16 dec cmovb adc adc sbb push cs pop mov repz loopne mov push inc cmp mov daa int3 and and adc add or and mov mov mov lret xor in gs sub outsl into pop mov aaa repnz insb pop push je add scas repnz sub fwait (bad) sbb lretw decl mov mov pop pop inc xchg dec mov add mov adc push push push xchg int aam (bad) out push mov pop loop int3 xorl divl (bad) sbb out xchg psrlw outsl inc cmpsl mov test inc mov cmp (bad) jbe cmp lds adc in outsl sub push add bound jp aaa movsb dec pop in mov add dec sub sub mov xchg aam cmpsl insl aad jb,pn jae int inc and sbb fidivl dec cmpsl (bad) xor xchg xor cmp dec lods lods jb jmp mov add xchg and pop ret jecxz movsb cmp adc xor or mov in pushf cmp test into and xchg sahf rorb push inc movsb in adc push sub gs testb cwtl xchg adc mov and mov lds mov outsb and in inc mov dec mov imul sbb outsl dec cwtl pop loop mov inc add (bad) testl pushw mov fisubl push jmp pop inc out hlt insb cmp adc (bad) icebp popa scas push scas sbb ljmp roll fcoms pop sub add sub popa jle xchg xchg test xor mov jecxz jecxz test repz ds add shll js ret dec loop dec loope insb cmp pop divl xor idivl jecxz aas loop hlt lea or xchg jae adc inc lods dec pop fs inc lret sbb and mov sbbl xor lods push rep xchg cmpsb mov out call rcll jp scas (bad) lret jne mov popa loop pop inc sub add inc mov pop xchg push je and mov lods mov mov mov mov aaa mov sahf je mov cmp xchg loope add xchg mov (bad) mov test (bad) insb inc into add jg out push mov push mov ret pop mov je enter (bad) mov in rclb lea cmpl xchg fnstsw xchg pop push mov ja jno jns nop fs sbbl shlb mov sti cmp sahf mov xchg xor adc flds push jb adc in (bad) js outsb xchg add ljmp inc jno ror or push aas push out ror inc (bad) mov cmp sub xchg (bad) shl nop dec jo aaa pop add xchg or (bad) ffree aaa sbb xor jb push shr xor iret sti xchg mov mov repz leave cmp into xchg adc dec movsl sti sub insb mov jl bound scas inc sub cmp pop (bad) mov mov jg adc lret push shl lcall cld jne add ret jo inc addl cmpsb int add add shr scas mov or xchg (bad) push pushf mov dec cmpsb sub call push lods aaa jb pop loopne loop pusha inc jb inc aas js testb jg dec add xchg add mov cmpsb jb decl in cltd add subb and mov pop push jp add stos dec inc dec xor fidivr in sti repnz addb bnd sbb mov jmp sbb mov jmp rclb mov cmp add dec push push lods inc and xchg cmc test or mov popa in dec xor mov or pusha subl xchg arpl jl nop add dec push pop out push cli out test (bad) pop daa fidivrl loope and cs xorb sbb xlat aad jbe inc adc and mov dec mov push pop test or xor out jp sub test add add mov push out in ret add enter add ljmp fs shll jnp xchg mov push ret sahf mov dec das dec xor jne daa mov jne mov add dec mov add inc outsb xchg cmp mov leave in and ret aaa repnz cs call add add shlb mov xor adc jl in sbb xchg fcoms xchg inc push in or push mov ss jnp cmc cmp cwtl scas pop std jmp sub test cmp xchg pop pusha fdivrs add push lret sbb loop jl test adcl add add fwait shl xor shrb mov pop movsb loop ret and push ret mov ret call lods scas jae mov push sbb mov add outsb mov cmp test out pop mov out xlat mov insb nop sahf loop decb mov add decl inc ja pop mov and mov push or lahf lahf xchg push iret cli ds jp les dec xor push adc mov popa jg lea call idivl movsb rorb lds jo mov inc fldt aas and inc dec jae outsl mov in push inc sub jo add add dec mov dec pop dec pushf fucomp inc mov mov loope and call movsl iret mov cwtl and jb jle addr16 jge xchg fidivl roll sbb adc cmpsl imul dec insl rorb sahf aaa cltd pop pop sub arpl push mov nop fildl add mov cld xor mov sub xlat cmp xor iret mov and pusha cwtl out int3 aad popf lods dec pop js outsl fisub repz add adc add sahf xor sbb in push scas clc out mov xor enter icebp pop movsl fadds add add pxor outsl adc mov fdivl mov in in call cltd jecxz mov mov inc dec sbb mov jle xor xor mov aam cmp mov jecxz stc in pop sub into and repz inc and add add rorl leave cld int3 add imul cwtl stos (bad) adc and jge fadds mov ja mov arpl or and fildl mull dec nop push dec pusha (bad) cmp sub lahf add or sbb (bad) xor mov loop or ss jo add stc mov pop sbb clc push outsb into fwait rcll out lods hlt psrld inc xchg test push popf hlt push jge xor mov push cmp or fs add and ror push inc push hlt (bad) jbe xchg jb movsb pop push dec and fstl lods mov lods push sbb shrl aas outsl add sbb (bad) jg jg aad scas jg inc aad mov jle add inc in ja sti sbb adc rcl movsl push stos cmp pushl and jle jle addl imul inc push arpl cmpsl adc loop dec add ds cmpsl or dec sub std loope subl loop loop fwait mov jae outsb cmpsl cmpsb mov out sbb into pop fist sbb pop mov fdivl orb fwait inc hlt clc or lret and lcall pop cmc push push jnp push add add xchg mov jg stc dec inc pop inc ljmp mov xchg push (bad) int jmp test out out dec mov sti stc insb daa xchg sub mov ficompl mov pop dec xlat cmp test fisubr out push fidivrl icebp sbb repnz (bad) dec add add or push jecxz sbb jnp cmp adc into mov rcrl cltd fdivl btr dec push fs sub dec lock adc test mov push in pop jle mov fcompl jmp pop cmp hlt mov add xlat test mov mov push aad sub pusha mov shlb mov xchg notl cs mov ret add ror jne xchg fstpl dec or add jnp in (bad) rolb negl fild dec (bad) pop push inc dec test jbe std fsubl xchg sbb sbb cmp add add inc jb aad xor jg insb inc es and into mov jae cmpsl push xor lret rcl scas dec xor outsb adc stos pop dec xor or push inc mov fcmove pop sbb jecxz sti push sub xchg aas mov shr out and cmpsl xor add fdivr outsl and mov cld ljmp aas mov ja lea cmp sbb inc fs jle repz stc cmpsl ficompl data16 pushf jo inc lret add add inc pop stos ret imul push fisubrl or mov xchg push push dec adc movsb inc add add pop fldl mov daa push out push (bad) add lds movsb in mov jl aas adc sbb aad lret roll or inc inc push xchg loope cmp lods mov dec loope,pn inc jbe lods mov add xchg popa xchg data16 (bad) movsl test sub stos int3 lods mov mov dec ret mov jp stos stos bound add or mov ret or xor enter push cmp test out sub fucomi mov mov push or jg xor pop rol call add sub (bad) cmpsb fsubs jecxz nop stc cmp inc push pop sbbl jp sub addr16 sbb es or call inc fadds std cmp push add ret (bad) aas dec jmp sbb or lods push sbb pop and add dec push outsb dec fcmovb insb mov pop repz cmpsb int3 mov or mov pop adc sbb ret in (bad) out (bad) les movsb sbb (bad) aad out push inc pop roll cltd pop mov rol inc cmpsl cmpsb movsl lea xlat adc imul fcmovnu mov xchg xor xchg mov cltd fiadd aad (bad) repz je outsb xchg (bad) xchg outsb lds or cmp xor pusha out cs iret sbb imul les test dec sub adc mov imul lds fsubr pop sti ret fs insb cwtl lcall das jne dec lret adc add add insl out scas pop mov push fcomps popa push inc push fs xlat call sarb jge sub enter add gs pusha jle les fst gs sub inc mov mov jp jbe leave aam dec add jp loop test outsl addb add xchg (bad) cmpsb push jo xorl push push js push cmp jb inc fcmovnbe pusha sbb lods fidiv jbe mov repz or jge lods cltd mov mov ljmp push adcb pop add cmp fs adc sub push into mov add add cmc add sahf mov cmp sbb insb lods repz je mov inc stc mov adc xchg test mov pop add xchg test add add push (bad) cmp mov jp fsub shlb add adc sub mov bound out dec or cmp add add add add aas and dec ja lods cld in inc or mov popa arpl and pop mov xchg hlt sub xchg (bad) pop aas mov sub cwtl (bad) jns or data16 push je cld adc call sbb les leave inc jno idivb add iret sar icebp sbb iret or add or jl mov jae outsl adc movsl fucom cmpsb gs jno push push rcll sbb mov sarl mov mov mov pop lea add scas xchg or dec mov add cmp popf cmp lret rclb fistp shlb je jbe pushf (bad) or pop jp jne int3 outsl or rorb push dec loop or fcomps je lret shrl outsb je clc xchg jl (bad) and ror das add add jns cmp jl insb jae jns and jmp jne inc fcoml and imul sbb imul mov and imull inc (bad) cmp imull sub les mov xor (bad) sbb add (bad) aad ja je cmp jg pop xor dec cmp mov push mov bound push xor inc loope nop lock and mov sahf push insl pcmpeqb dec call sub lret ss pop addr16 les daa sub imulb dec das xchg fldenv pusha cmp dec add pop sub push jbe jmp dec add and pop (bad) jecxz jne jle mov in popl sbb and pop jbe add pusha and adc fwait xchg mov (bad) push dec push repnz push or (bad) (bad) pop mov std mov inc push mov fs out pop xor cs xor aam loopne shrb lock sbb mov test cmp sbb shrl jb stc and shlb cltd fiadd add add dec pop insl cld gs inc push dec sub inc mov mov cmpsl insl push clc je adc cwtl xchg mov mov andl imul scas push xchg int3 cmpsb or test loop mov adcb pop fiadd out xchg sti jb add cld xchg pop stc ret mov out mov or jge mov lds test pop pop ret clc jns outsb (bad) js jnp repz lcall xchg fldcw or loopne mov pop and push and and scas push jge (bad) mov lcall xchg jno,pn add data16 push stos bound inc (bad) cs mov loope call out push jge std cmp cmpsl notb push (bad) dec or dec adc loopne into ds and and scas repz lret lahf mov push popa imul pop insl lods add movsl out popf enter mov adc les sub inc add add jmp or pop stos jns test xchg xorl test aaa or loopne testb xchg and push inc dec std push add int3 and repz and and cmp enter arpl adc add jecxz jnp das loop sti in pop movsl add mov xchg xchg dec mov mov fs test jae jmp pop bound outsl or lock or and (bad) lcall (bad) inc fstpl daa cmp aas test cmp and push cmp xor mov jo nop in scas mov ljmp push into mov or or es mov mov rclb popa push into es pop notb add fnstsw lea mov and pop adc icebp in imul cmp addl or add xor adc mov cmpsb pushf int movsl mov jmp rcl aad cmpsb je pop mov cmp dec and fs je jo jl and inc out pop mov fsub scas push lea (bad) mov cwtl adc mov add add jl inc cs pop dec fldl sbb fisttpl mov push push pusha setp adc int3 inc dec cmp hlt cmp push ljmp punpckhbw cmp stc inc lock mov xchg js,pt iret fs mov push mov mov sbb jecxz test inc in sbb add mov mov and fidiv inc stos dec inc arpl fistl mov mov bound enter scas fisttpll jb mov scas hlt push dec cwtl lret aam cmpsl insb mov loopne push (bad) and mov int3 mov test movsb movsb test add add adc jnp (bad) mov and ss fs arpl inc scas cmp fadd pop push mov jae inc out pop jp mov fwait sbb mov mov push stos idiv mov xchg or push mov xor jmp out sbb mov out (bad) sbb add add mov lds jns ret fstpt cwtl clc sbb jmp mov xor pop dec sub jbe add jmp ss jp xor repz xchg xchg mov sub fadds movsl xor add js (bad) mov adc int3 adc fs push in mov sbb add mov addr16 pop rep movsl push shrb mov inc fwait mov xchg pop sbb repnz daa xchg pusha divl dec mov in mov lret test ljmp jno or (bad) cmc jp pop outsb push and js ret (bad) gs out lods divl lahf add sbb ds sub out or mov add mov stos test sub cwtl jp mov push (bad) cmp imul pop aas xchg popa mov sbb add das aad mov lock jp scas pop cltd and lock mov xor sub imul repnz push lds push inc xor and or ja lret insb imul pop and xor imul and add add test cmp sub leave mov mov add add cld xchg dec mov in sti shll jo inc or jmp aam lret cmp add or fwait cmp orl xchg loop cmpsb push dec (bad) mov sub (bad) bound daa (bad) push mov js cld out ja cmp add mov cmpsb cltd out add xor sbb push (bad) hlt xchg int3 mov jecxz sbbl rorl sbb inc lods lret push int3 faddl dec dec mov pop cltd sti (bad) sub push enter lcall mov (bad) jbe lods mov in pop sub mov lds icebp push test add sub stos sub sbb xchg mov cmp adc mov pop xchg pop testb scas cmp stos push xchg lock dec xor and inc push das push add push lahf mov jne push loope popa into mov fnsave mov add mov jecxz dec les idivl mov aam xchg inc mov cs daa inc addr16 xchg cld clc cmpsb rol nop lahf repz aaa pop xorl (bad) mov cwtl popf in push ljmp imul push sbb inc add fisubl add add into leave aad pop lahf es in xor or stos and aaa pop cmp pop loopne jl or icebp lret pop call and data16 stc daa mov mov inc test mov pop xchg jg pushf or (bad) insl xchg mov loop enter stos add cmpsb mov mov scas out mov fistp fs add mov bound notl dec inc fisubl dec into pop lock rcll or pop mov les cmp stc push mov fnstenv mov xor test inc out dec pop push outsl jle sub add (bad) cwtl xchg cmpsl dec mov int ret sub sub push xor dec loopne push mov push (bad) mov or imul ficoml imul add test rcrb and insb mov jge lahf scas les dec lds or xlat test cli add lahf mov add cmp pop (bad) icebp into mov (bad) push cmp adc jl cmp call sub int3 lret xor xchg ljmp add sbb (bad) cmp cmp xchg push int nop lock sbb jbe andl test arpl loop inc jne cmp push mov aas and imul in sbb mov popf ret sub sbb es jge sub xor das add or loope mov adc scas adc jb mov ja cmc shrl cmp xor mov outsl cmp scas cmpsb (bad) pop push lcall cld sbb inc insl add mov rcll cmp out sub push call lods sti xor arpl lock cmpl sub clc xor mov xchg aaa cltd dec sub mov mov xor and push sti es or in cmp repnz ds sahf xchg lcall add add jo add push sti mov jecxz jg in (bad) xor add stc rep adc mov xchg cld cmp fsubl pushf push test jno sbb daa stos jmp clc fs xchg sub ljmp pop sub insl push loop and in or addr16 inc push inc (bad) fidiv dec xor ds xor jg mov and dec xor imul inc or dec xchg xor xchg test cmp push jb hlt movsb pop out jne je pushf push dec sub (bad) ljmp pop test stc cmpsb (bad) add cltd add aas mov add adc jb push mov jb fstpt pop mov loop sbb or ljmp cmp je sub les movsb movsl cmp std data16 xchg inc rcll dec inc cmp test mov xor dec sahf mov add add mov or popf dec fnstcw outsl jmp out fdivrl jp jle test test fs dec mov aad mov jb push stos movsb mul pop mov jae imul arpl mov mov adc das hlt cwtl leave insb cs popf sub test test add add sbb xor sbb push lahf popa jecxz test push adc jp ljmp cli ret jmp fdivl daa add pop test fcoms pushf lds cmpsb or sbb add std sbb xor mov lock daa lcall sti add add loop in jl enter and loopne sahf or lea xchg push ss ss (bad) xchg es hlt push nop popa adc xor enter sti jle cli (bad) mov xchg dec divl or pop mov lods xlat imul cs dec cmp push es ds pusha xchg push cmpsl mov into out mov divb loope xchg pushf mov lahf xor and pushf push jp sbb movsl mov fsubl jne or xchg mov sbb push or mov fprem1 test xchg ret mov lret jp and fiaddl lds adc (bad) leave lea xor pushl adc xchg test test adc or jo lret sub fucomi xor subl (bad) lock mov aaa (bad) shll adc add push dec cli dec xlat lods and add popa pushf test inc cmpsb ficoml dec push es (bad) (bad) fwait ret gs aad fs lcall or jns fstp xor shlb jae icebp mov jl movsb scas movd mov dec xchg push stos aaa mov addr16 addr16 out sbbb lret add cmp stc cmp mov out ret fmull fwait in fistp in out inc and or xor jbe inc pop lret mov popa xchg or jnp jns adc inc cmp dec push inc xchg jnp fs lock jbe jne (bad) mov fstl xchg cmpb add xor rolb jbe andb aam testl push popf nop jne pop sbb add cmpsb push add mov je xor sbb add dec xchg mov mov inc xor sti mov leave jmp pop outsl in imul int3 sub fwait sub mov add add pop popf xchg push rol mov pop mov mov mov adc (bad) lods shrb sbb sbb stc test adc leave dec jo sbb xchg mov lret pop dec data16 (bad) popf call pop fistpl scas add xchg aas mov xor orb das add fmuls fdivr push mov lea mov xor and mov and xor fistp hlt fs mov imul lods fidivl (bad) jp dec (bad) dec jne (bad) aaa rcr push addr16 lahf mov dec and xor and mov jbe cmp add add lods mov je fld sbb je pop jg jbe xchg cmp or cmp adc add adc mov jmp push inc mov and (bad) xchg sbb dec insl push lea stc ja sbb out mov sbb push repz fild (bad) icebp ljmp xchg dec dec (bad) subb (bad) in fsubrl adc dec neg xchg shll jmp mov shrb (bad) xor in sbb mov jmp imul clc dec fwait mov clc cld imul add cmp add push in dec mov sbb or and in and mov shlb adc movsb cmc dec sbb arpl jge pop xchg pop rolb pop adc jo in xor jmp cld aam mov xchg out jle mov and in aaa iret sti std adc sub cs push xchg mov xlat sub rolb jae movsl repnz enter repz out dec lret mov mov and pop cwtl cmp add pop ja xchg sbbb divb mov xchg add and outsb out lock lock rcrb and push inc faddl not jecxz add imul sbb in mov jecxz xchg test cmp and cld aam mov fnstcw fidivl cli (bad) mov out arpl aad xor add adc int3 jae fidivrl xchg mov loopew dec cmc push jmp or add mov (bad) loop clc bound jmp insl adc sub sub fninit dec add idivl mov inc loop mov adc xor ljmp jle or add or cld cwtl dec cwtl sbb inc dec add inc xchg insl insb xor loope dec mov sbb imul mov sub or inc add out mov (bad) mov decb fistp adcl in ret ret add in aam mov dec shrl mov jbe fcoml and sbb lods adc mov and inc add adcb stc leave je mov arpl sbb add pop dec and bound push jmp or lahf rol push mov pop dec jne fmull sarl test inc jae dec stos bound fcoml incb mov pop into xor jo out add add fcoml xor push add (bad) xchg fdivrl sub dec xchg pop insb cmpsl test (bad) push es xchg rclb dec jmp lahf into sbb cmpb xchg int inc xchg push mov jno (bad) andps outsl decl jle sbb stos outsl sahf out mov lock (bad) cmc fcoms dec mov inc sub push test push lods mov add pop scas in cmp xor fsubrs jp (bad) shlb fnstcw cmp push sub push leave stos or stos (bad) shll in xchg (bad) in adc js sahf test daa enter or push cmpsl inc inc mov roll inc aas cmp pusha adc (bad) ja mov popa scas popl fs cmovb lea rcr jnp icebp cwtl push notb xor test ret pop ds push sti jbe pop jns mov test push jbe mov xor sbb mov sub fdivl mov (bad) mov xor loopne (bad) cli call inc xchg xchg and add and jge mov fstpt add outsb rorl insb test adc jb data16 das mov xchg inc test jb int3 dec dec add push stc pop gs adc inc (bad) out int3 fs jne mov std inc cwtl xchg mov add cmp (bad) mov jo movsb enter dec cmp push popa mov pop fdivrp cmp iret push jno lock sbbl inc sub push mov jne mov fldcw cmp stos popa ja scas pushf mov pop test subb and sbb scas pusha adc add add add adc mov ds xchg out stos dec cwtl sbbl jns (bad) cmp out jne hlt ds cmpsb mov add test test out stc cmp fistpl adc xchg cmc add outsb cmp sbb cmp out enter adc nop cmp nop cmpsb enter add add adc xchg test imulb lock sbb xchg adc and in gs je stos mov movsb xor pop sbb scas cmp (bad) jae je stos or mov movsb and xchg xchg nop call mov sti out dec xor pop jl lret sub inc add fnstenv out jbe mov mov xchg mov adc mov movsl arpl mov or clc mov pop aam fwait (bad) add ret test lcall (bad) push loope cmp and inc add add lods mov repz xor test (bad) xor inc pop test add (bad) or adc shl iret and ljmp pop mov sub sbb js inc xchg mov jbe push dec fild scas push push add add enter incb or cmc sbb mov xchg xor sti repz pop (bad) jae mov rcr daa lock roll ds ds daa iret add rcll jne add arpl shll ud2 lret sbb pusha pop call cmp add cltd adc adc adc (bad) in pop fwait mov xor (bad) mull pop aad rcrb mov mov testb outsl or (bad) aaa push mov pop add add pop xor inc sbb mov fnstcw sub mov repnz jb insb scas lret repnz add ds or sub mov scas dec xor dec xchg mov (bad) jae adc xchg sub mov dec push cli shrl sbb cmp test pop inc pop jae push jo aam stc push ds fwait (bad) lock stos add push cmp cltd rol and and pop dec ljmp mov aam icebp (bad) out test ljmp mov aaa mov sbb cmp orl out repz and xor cwtl fistpll push (bad) aas movsl mov int dec cltd mov inc aam mov arpl jl mov cmc (bad) out push or mov and fldl daa cltd add pop divl lret ret add dec xchg and xor jp push rcrb xchg sbb in cmp leave inc test stos mov adc sub aam xor out loopne test popa pop ss sti adc (bad) jo popf dec cli ss mov add pop outsl cwtl dec pop sti mov push mov add or test mov xchg dec add xlat (bad) xlat mov and aam xor xchg xchg mov sarl push mov and push mov lods sbb movsl sbb xabort mov lahf mov sub and add sub sub mov cmpsb lcall dec aas and call fidivl dec cs dec lret xor inc sbb imul into mov inc dec decb sub push fcmovbe (bad) int3 push clc and dec xor adc repnz les dec add std insb mov dec pop mov and sbb mov popa test (bad) lods (bad) fdivrl orl (bad) cmp lret fstps inc dec inc mov call adc dec dec push cli out push aas fbstp (bad) or xor push test push mov xchg dec jo icebp pusha and jp pop (bad) addr16 fisttpl cmp and (bad) xor sarb add mov test xor xchg xchg data16 sub lahf and push xchg repz xor push inc lahf dec repz add add add sahf jle,pn jbe addb (bad) mov mov push ret push idiv outsl push dec fs add pop mov lret mov and pop and cmp dec fdivrs pushl jo scas mov pop xchg cmp mov xor scas and les mov add add cvtdq2ps imul adc sbb rorl cmc test lods ljmp xor call inc sbb lods enter (bad) aam stos movb int3 inc or mov adc movsb mov lods (bad) lock jo (bad) stos in push dec repnz lock roll adc add aam daa mov into pushf dec cs mov dec pushf sbb loop ret sti mov adc in pop int3 js sbb out xchg in jmp fstpt mov repnz (bad) pop (bad) iret sub sbbl stc lock xchg mov mov add and cld mov mov mov xchg lea fcmovne and aas fnstenv and sbb (bad) hlt xchg aaa cli int jl loopne bnd rolb jne dec jl add sub mov mov out mov clc mov add add add mov fs add mov push sarb rolb cmp std fs sub lcall sbb (bad) xchg cmpsl and js mov mov lret xchg mov mov mov push dec fsubrp jge adc push xchg and fwait lret dec or movsb enter add in fistpll jg icebp ret cmp push cmpsl lock incl and negl jno stc fadd cmpsb imull or dec mov dec or mov pushf sub rcr sti ret add (bad) in sub pop cmp push repnz mov fildll jns test pusha mov jmp sub pusha inc pop inc xchg jns jle mov cmp jmp mov addr16 dec mov mov inc add (bad) repz jecxz js rclb scas loopne or push add adc lret fist cwtl cmp push (bad) push push dec pop js das push sub inc cmp jg mov mov das hlt lret dec orb inc add fs aaa mov mov cmp inc jecxz sub popa loope jb jge roll int3 dec cld push inc pop xchg (bad) push xor push negb repnz ja fistp mov add (bad) popf push push pop pop mov dec hlt cmp repz stos xchg imul jns pop dec enter fbstp fsubs lea cltd insb mov sti xchg call add inc inc (bad) jge mov mov ljmp pop (bad) lahf jmp xchg dec mov add pop xchg std stc inc lahf sub and dec or mov test mov jg add push sahf push stos mov adc xchg fucomi push and lcall fwait sbb fistpl sub push js mov jne frstor sbb xor jns es pop xchg scas neg arpl lods mov jnp aaa and stos xchg insl cwtl iret inc sub fsubrl jnp dec mov lret jns scas xchg ljmp cmp add dec sti lcall loope push ret push jecxz add cmp xchg movsl or fidivl pop (bad) clc lcall leave sti sub fildll cmp lock pop clc sub pop mov (bad) add stc inc sbb sub pop pop rcrl mov daa jae push or movl (bad) fst xor fidivr sahf cltd lss add add mov sbb hlt and rclb push inc (bad) and mov dec out jmp add lret fwait les jo or xchg je push cmp jmp jge mov (bad) dec jp stos pop xchg sub lret push hlt pop fmull enter insb rol daa dec mov repnz mov jb dec (bad) dec add (bad) pop xchg xor sahf pop mov imul clc jg pop mov leave das aam fidivrl jle push pop std pop cltd mov xlat andb mov movsb or xchg rclb jl inc xlat fcmovb sub fcompl js (bad) xor inc cmp lea mov add stc pop cmpsl jmp mov fs mov and sub xchg cmp jp adc pusha int mov mov mov sahf addr16 xor inc popa cmc sbb jmp push mov roll js mov xchg test stos jae and into rcll pop jp outsb and add add mov in jne push test hlt decl push push and stos data16 lcall push inc adc lock in mov stc test movsl popa jns jb inc arpl outsl push and shlb jge into aaa cmp ljmp mov pusha lret addr16 pushf das pop inc mov add ljmp in out into or pop inc sbb int3 and xchg sub aad or push mov xchg outsl push pop add or dec sarb negl cmpsb or (bad) (bad) jae push add xlat jb enter push xchg or icebp inc imul add rcrl jl hlt nop lds push mov dec aas es push (bad) jl dec mov rcr mov push push lret pushf add xchg arpl in insb in inc and mov push es and lds push sbb outsb fwait test adc shlb aaa sbb xchg sbb mov add pop or lea ss mov jg and test ds in sbb ret pop or mov mov pop and cmpsl adc repnz mov loope ret js aaa inc jge ja inc arpl je fwait sub xor add add fimull pusha lds pop iret int xor stc cmp jl aas dec (bad) in xor push jae fcomps push in sub fnstsw out inc xchg mov fcompl dec pop (bad) mov idiv xchg ja in imul jmp repz mov jge add add in push punpcklwd mov lcall (bad) mov or (bad) and cmc scas aaa fisttpl mov and mov repnz js mov popa jmp ror dec xor and mov mov call or mov cmp add repz lret lahf sub mov push xchg mov cltd inc int adc cmp movsl jge fcmovu (bad) push aam push ljmp lea or and enter and or call aam dec pop stc lret jns add ret sub outsl dec test les add add add push jo es mov rolb mov loopne mov mov insl xlat cmc imul sbb (bad) ss xchg add adc sub ficom dec xchg mov mov pop lds adc or xor pop adc xor add jae cmp jno sub dec mov inc or pop repz xabort addr16 mov shrb cmpsl in cmc nop popa in lret jge (bad) stos daa popf subb cli cmp arpl jnp inc add push inc jns mov lods dec cmp push add mov mov jne push cltd mov sub add inc lea ret (bad) mov jmp test nop int3 cmc mov pushf call sbb jg xchg cwtl inc inc pop dec push cmpsl or lahf enter fisubl pusha xchg sbb (bad) push cmpsl ret add add or mov call js sub lret mov mov mov xor test mov mov pop cld int and imul lock enter sub div cs (bad) aas fs insb xorl aam dec mov jg sbb sbb popa mov pop lret add add adc push sub xor mov arpl imul cld sahf (bad) iret rcrb push dec (bad) aaa out int3 push xchg sub cmp out lock dec mov in jns (bad) push mov ret iret imul and in aad inc imul or stos mov add stos scas fld mov lahf jno add cmp (bad) pop (bad) fs lock mov jbe dec imul das aad dec cmp test jns add push pop pop cmc pusha jb jl fwait ret push out xchg mov adc add add add stos scas mov stos repz cmp fcoml xchg jae pusha add sti push cmp ljmp rcr mov dec adc jns fcompl popa jbe leave faddl jno inc test int3 pop or out or dec pushf out jp cs xor add add and push ds dec movsl insb loope sbb sbb (bad) loop pop cmpsl (bad) insb pusha lcall je mov clc and xchg fnstcw outsb sti (bad) mov push lahf insl loop es adc pop test sbb add dec testl mov sub add add mov out pop mov dec mov mov jecxz push in leave js and mov or sub xchg jge mov cltd test push cmp adc subl or and gs clc stos das into push inc push repz dec insl add or adc dec orl insb dec pusha nop bswap rol or fwait adc jnp pop jns pusha sbb push cmpsl push or repnz rol lret repnz scas and mov les mov sbb cmpsb push jne mov imul or cmp and push (bad) cmp loope sub push aam mov cltd insb test inc aaa testl add add jne aad into add ljmp push clc (bad) jbe (bad) ret nop je sbb dec adc dec lret and sub repz sbbb ds div or loope or int mov aam xchg mov shll fisttpll inc (bad) pop fcoms mov lods loope gs add (bad) jne xchg dec mov mov stc push out (bad) mov (bad) hlt jno dec and out hlt ret cmpsl int leave sbb inc dec mov cmc ja mov cmp dec nop mov mov call adc repz leave add push sub mov cmp lods (bad) or jns popa adc add add cmp mov add cmc and jl aaa mov sub cli jl decl ljmp aaa sbb and push xchg fwait mov add push mov bound test mov lods ret and pop ja mov shlb lods mov add pop mov add sbb inc and lahf pop add mov cmpsb pusha rcr enter jae mov jge cs jmp dec adc jl pushf pushf push mov out add imul lea repnz inc sti sbb mov subl mov add inc int3 mov cmpsl (bad) iret repnz jp pop sbb pop add repnz cs (bad) icebp lea pop dec sahf bound ret sbb popa xor js cltd lahf adc jnp les mov (bad) lret jae iret sti jns cmp fisubr (bad) movsl lret or push popf std adc fwait (bad) jo add add add cltd insb ss pop xor mov push inc mov dec inc icebp nop push sbb push dec mov jns adc add hlt je divl add sbb shrl int bound mov cmpsb (bad) jmp or and out js cltd jl hlt and sub push aam imul add add jmp std es out jbe mov dec sbb pushf dec test movsl mov adc pushl cli (bad) pop hlt mov (bad) insb inc js test movsl pop in adc gs sub lahf xchg xchg sub adc dec fdivl cmp jecxz sub add push add imul mov or stos ret adc dec gs outsb push mov jecxz mov loope and sbb and dec out and mov xchg mov pop jp and pop mov xor dec popa fnstcw fucom out jmp pop add push das fist (bad) and loope sub outsl leave stos dec mov dec push mov sbb bound in stos notl stos rorb mov adc out inc mov movsl adc or (bad) dec rcl pusha push jp mov push sbb or dec push mov jae fimull mov mov icebp out (bad) stos sbb fstl imul hlt pop adc insb adc cld movsl push arpl inc push xor pop cmp scas stos loop out pushf int xor ljmp add xorl out das int jnp adc mov mov (bad) mov loop fs stos in int sahf jl in mov test inc mov std cltd mov pop adc mov popf jno mov aas mov or inc add lods scas (bad) clc stos popf push cli movsl jo mov xchg and mov testb lock mov call add pop adc or faddp inc xchg repz push sarb sar xchg xchg pop lods pop add xchg sahf mov jbe in outsl popf js in call (bad) punpcklbw insl sub test fsubrs aad fldt gs lods inc push out fisub xor mov cmp mov add jo or andb mov sbb (bad) jmp scas lret mov mov add sub add pop pop push jne insl push test clc sub mov and mov xor icebp in mov cmc mov je xor popa (bad) xchg outsl lahf mov xor in adc add add jno repz xchg rcrl cwtl xor popa loopne repnz add sub or andl out mov jae jb mov sbb outsb (bad) out inc fcomps mov jmp jno pop leave stos push inc add add mov jg push repz or add mov add push icebp mov int push dec outsl jl aas dec mov popa mov in les cwtl call pop jno jge in leave es mov stos sbb xor sbb outsl fimul fwait pop add sarl adc shrb push jge (bad) and and fdivrp jmp popf xlat and outsl or je js jns (bad) (bad) xor or scas out mov dec ds gs repz call cwtl cs lahf or pusha stc inc mov dec pop pop inc sub add loope mov sub imul sub loope cs mov lret stc adc xor pop dec repz sbb xor and (bad) inc or test (bad) ficomp pop xchg or inc cmpsb or mov dec pop pop insl pop xchg aam imul mov shr mov add jns cmp xchg xor pop aaa outsl sub das mov push or pusha xor xchg sub in mov push push and bound out cmp jg sahf and jnp stos inc push push xor test subl mov add cs mov (bad) jns int3 insl int3 (bad) arpl (bad) sbb aad jp jb dec add xlat jg jmp pop dec dec sahf dec repz jbe mov jns shl inc push cmp jg xchg aaa sub inc push sbb or popf test repnz push cmp inc pop jo add add add stc ja fcompl xor enter inc popf xor dec (bad) sub loopne data16 dec jbe sub xchg leave call into enter pop lret push (bad) in repz out or xchg jp push sti out add jae dec xorb add sub jmp sbb push cmpsb dec pop mov fdivl test xchg cmc call mov cmpsb fdiv mov mov out jle add xor popa leave stos idivl out mul movsb rcrl xor jge ljmp fcomps mov or test add xchg push or xchg mov cmpsl enter add lahf movsl pop adc in in inc mov cli getsec mov cmpsl inc jno daa es adc mov jbe adc (bad) cmp push or inc adc inc sbb or mov push or add or rcrb lea push cmp addr16 sahf mov mov mov add shr sbb push add mov pop in ljmp or rclb sbb xchg popf lcall and loope xor or ret lds ret add push test xor rcrl sbb out jbe or iret mov (bad) out add in xchg je roll fistp mov repnz or scas fisubl mov pop mov xchg sub inc pop jg shrl and push je jecxz xor mov push mov mov add fdivs sahf mov mov mov (bad) cwtl (bad) leave xlat adc je mov or subb fsubl xchg jle cmpsl mov fwait std ret xchg push loope pushf (bad) and jg and jno mov scas call push int3 and rolb and sub xor lret sarb int aaa pusha pop je sub mov (bad) or push fsubs pop add or scas imul xlat pop mov jo in and out leave aam movsb and and jbe dec jp mov jmp push fsts mov sub inc add cs out push in roll jno push scas cmp or cmp std arpl cli mov mov sbb xor test loop iret test xor (bad) (bad) xchg jnp xlat in inc jo (bad) mov icebp hlt push aam inc movsb aad xchg cs pusha popa and in sbb lock data16 adc pop (bad) pop cmp xor mov mov xor into lcall xchg xor scas jecxz pop or inc outsl cmp mov js mov inc inc ret hlt mov mov mov or loop adc test andl nop add cmp mov or popa leave sarl out push and sarl outsl jno add pushl dec xchg sti hlt cld std xchg scas cmpsb add sbb jne pop cmc mov out add loop pop sub mov add (bad) icebp mov inc arpl pop pop mov aam and sub push adc add adc fst enter ret pop push jb cltd mov and lcall imul out lods shlb jmp sti push imul dec fcoml out cmp push mov (bad) (bad) ffreep push jle lock sti xchg movsl xchg testb movl aas or and roll xchg jnp push sar add aas cli fisubl mov repz cwtl les pop adc ss cli pop in fisttp in in push frstor mov in mov cltd push movsl popa and cltd add pop adc jae push scas bnd add mov (bad) xchg sub and jge mov jl leave xor and call fs int sub sub cmp mov ret out fucom (bad) cmp mov faddl mov shrl int3 repz popa xor add out jo cmpsb call jp dec xchg cltd sbb mov xor fdecstp sahf pop (bad) jg stos popf dec xchg test sub xor and lods das les jo mov in scas iret int3 movsl add repz jle and cmp test mov test scas add mov aaa popa setle xchg jbe mov call jo xor call loopne pop pop ja add sub mov xchg inc aad inc lahf movsl inc xlat stos dec lret mov jg jmp push jns mov (bad) inc fwait pop mov mov add jge lods icebp jl add (bad) and bound lahf and push jl jnp xor jle insl lea jo icebp or mov in rcll cltd or popa lds pusha rorb xchg mov pop jecxz jge gs mov mov into pop int3 out icebp lock data16 add cmp xchg insl xchg jne outsb adc hlt imul leave mov (bad) rcrl pop fistpl roll xchg or ds or and push hlt out xor pushf jge xor push call xchg ret inc sti xchg sub jle stos cmp and add add stos pop (bad) outsb fdivr push int3 gs int mov cld pop jo and mov sbb cltd dec adc mov xor scas xchg insl inc mov mov or (bad) mov xchg inc fcmovnb jne in push stos cmp mov in mov sub jb xor gs mov xchg pop repnz add add add cmp in test cmp jge call push adc (bad) push mov dec or sub pop xchg add iret call and xor ret xchg loopne push je call cmpsl xchg cmp mov jns cmp adc xor and push icebp (bad) iret xor mov add ror je out ret push sub imul xchg xor jl pop (bad) jl jl lock mov cmp clc xchg in and pop add lods popa in xchg (bad) jno fstpl rolb fwait into cmpsb stc call mov lahf pop pop push hlt ss add add add dec inc xchg insb mov mov adc inc and into sub bts (bad) sbb sub adc sub lods dec ficompl push xchg push sub mov in inc popf repz shlb xor dec imul in sub cli mov jae add sbb fldl negl sti lcall test add cmp arpl sub xlat push scas stc lcall mov icebp mov (bad) sub ja pop outsb add je or and or call aam in mov pushf jle jg andb fdivs int lock std adc ljmp push arpl xchg push pop loopne cmp fadds xchg jmp or adc push mov shr test in add jo mov roll sub and xor fnstenv cltd sahf and xor mov cmp mov sbb add icebp add mov sti mov mov inc rcrb lock cli inc movsl aad mov and mov test inc call cli inc and or or sub adcb pop add inc push lea fwait leave aad movsb out cmp mov imul mov popl es cltd fs sbb es cmc push hlt je popa and mov test jg pop (bad) repz jl sbb int adc jl aam outsl xchg gs imul stos (bad) jo sbb icebp cmpsl nop mov sbb xchg mov nop enter adcl add add sbb jecxz bound cmp adc popa push jne ds mov dec push inc mov out mov hlt iret popa into pop mov jge lods or clc jnp fwait rclb pusha nop mov cmpsb (bad) ljmp sbb arpl fwait enter lods add add fstl jno popf push addl mov repz mov push dec and ja dec js mov mov mov pushf cmpsl push stc test mov lcall ret mov (bad) fildl xor out outsb fwait repnz push add adc pop xchg insb lahf mov js adc daa pop add imul xchg into mov and or push faddl cmc mov adc cmp and inc cmpsb pop loop jno add push icebp adc xor cwtl dec sub sub pushf mov test add pop int3 push cwtl cmp scas and popa jg jo mov rolb (bad) dec (bad) lock pop test mov lret sbb jp or imul sub sbb cmp idiv xor push je inc movb ret mov inc add aam push fnop out mov stc loopne int3 in and xchg das mov jecxz or enter dec dec inc or fimul pop push int cmpb imul mov and rcll dec (bad) sbb sbb and jl pop add add shr jg sar sbb orl pop enter stos jae jge cmc cld divb lock add (bad) add (bad) lds adc stc rcl (bad) dec jbe popa adc xor mov (bad) imul mov rcl das inc in mov (bad) test adc push adc pop sbb fs loope leave cltd movsl nop mov inc test in subl and fwait fs int fimul fcom repz adc fwait insb xor add xchg jno mov lret das add mov in mov (bad) rcll dec out fiadd mov add je xchg outsl push jnp add sbb mov xchg sbb inc das or sub scas mov pop inc jp dec les cwtl xor mov or in adc jno pushf mov inc (bad) movsb mov cmpsl xor aas add add xchg sbb push push pop jmp xlat or jne lods jp shrb cli mov aas or mov fcoms mov das jle or inc cmp into addr16 jl jmp int into daa inc jge mov mov push outsb jae push aaa (bad) cmp test add add (bad) aaa imul mov test sub insl inc bnd movsb popf dec mov cmp nop sti fs jle mov aas iret sbb sbb out ret xchg daa rorb mov mov sub enter stc mov sub scas lds mov loopne cmp decb jmp pop aas addl xor gs inc cmp jb mov mov mov mov lods xor mov inc dec mov arpl test jae data16 jl aad ret xchg daa in sbb cmc mov pop add add icebp test and mov cmp xor test adc aam or mov (bad) push ja xor setle ja cmpsl or mov lock loop inc or inc mov in rcll enter xor cltd mov mulb add add jmp shl or repnz mov out imul (bad) fstps aam sub xchg cld fldenv je stos push or sub pop push lods inc mov fmul movsb push xor xchg sarb or push mov push add xor push mov popf mov inc cli inc or andl jmp addb mov stc popa mov mov lods dec inc loopne xchg and cmpsl jns xchg aas inc out test cmpsl (bad) scas mov inc cld int repnz jnp xchg sbb dec adc mov add jg inc push addr16 add add inc movsl nop or imul bound mov sbb cmp and fiadd jbe inc icebp movsb iret js cmp iret lret in mov pop push or push sarb mov adc mov pushf dec es std test daa dec mov sub pop fnsave xlat enter add xor mov cmp xor push xor in mov movsb cmp stos je lahf mov pushf jne mov mov jp xor notb mov fs pop xchg jnp or mov sbb lcall or dec mov aas pop mov mov add inc inc push pop (bad) lret xor sbb mul mov dec std jne,pn call rcll movsl or fcoms mov lcall sbb add xchg loope jnp nop das flds ss xchg outsb call inc pop xchg adc and cmp nop das cwtl (bad) in push jge inc fcomps aaa jnp mov roll (bad) rcll in dec lret push and stc inc mov fdivrs xor xchg adc add bound pop stos pop cmp pop enter fsubl gs loopne adc xor dec lods mov add or and dec mov es lods adc pushf je scas inc out jmp pop (bad) test push (bad) mov lods lret xor jg and mov mov and and mov data16 xchg xor xchg rorb inc (bad) cmc insl lods sub or or sbb sub repz sti lret xchg enter mov movsl stos adc xor es pop hlt movsb pop (bad) icebp rclb test fwait das rorb gs out inc dec or sbb cmpl ss inc nop rol add add lea pushf xchg xchg push cwtl aam (bad) cmpsb push in xor ret xchg jae (bad) jo cs jb sahf out xlat int arpl fimull xor out mov add (bad) add int3 into packsswb orl sub cmp dec add pop inc dec inc roll stc xlat out lret pop addr16 out add add sub mov xor inc xlat jns cmpsb mov aas clc adc loopne push jmp jmp push ror fcompl mov inc sub (bad) mov adc mov sub pop jge fcomps mov fisubrl aad stc fnstenv xchg pop into out jge je scas jo int add call call lock subl cmp mov mov xor mov divb stos cld mov cltd pop cmpsl cltd faddp xchg dec ljmp push or test dec jo push scas adc xchg test xor cmpsb mov stos loope jb add inc xchg or outsl jp lahf dec stos (bad) xor pusha pop daa pop ljmp loop in roll outsl xchg repz sbb pop les jb lcall ffree imul sub dec int xor shr jg popf cwtl push dec mov push ja dec sbb add add mov sbb xchg repz lret sbb lea into mov scas jecxz add mov iret xor arpl and jbe daa jl lods mov mov out leave (bad) fnop cmp outsb add sbb adc mov xchg imul or add sub sub mov pop add dec cmpsb cmp std cmp push mov aad insb mov call jle inc fs imul loop aam dec test add cmpsb das sbb loopne fcmove (bad) push icebp ret mov push int and loopne aaa ss adc add add shr jmp fisub jle decl and and mov jmp dec insb adc arpl pop fldenv das push in repz sbb test and lret sub mov mov (bad) dec clc lods fwait lds fisttpll inc xor add pop out aaa inc pop pop dec imul push inc and fbstp loopne cmp xorl dec xchg mov pop cld out xor insl mov push xchg jno (bad) in xor popf mov mov insb inc loop ja adc fistpl in in das or mov hlt and popf mov imul call mov sub cmpl rcll data16 cmpsl mov jb mov hlt mov shll (bad) push sbb (bad) jg stos inc stos mov fistp mov sub mov lahf mov add jno jb into mov jge mov jbe add jo out sub popa rcrb adc mov iret xlat ja out fsubl inc or jb stos push incl cli or ror dec cmpsl mov js pop dec (bad) sub push and pusha dec faddl add add in and les jno jecxz push shl pop sub push scas mov add dec mov dec aad xchg pop inc xchg xchg jae leave adc mov pop mov cmp (bad) or push dec push fisubrl int3 mov fs push ds lods mov adc or add aam out stc lret outsl repnz in jbe or sbb test stos push xchg mov gs popf stos jbe test (bad) dec mov sbb das jbe fldl mov cmp inc jp pop test inc jbe sbb (bad) push or repnz push test dec inc lahf add mov mov aad push dec scas adc sahf jo xchg in sbb std cmp fstps sub insl (bad) ss jp cpuid jno mov sub cmp jg or xor (bad) dec popf rcll into fistpll jbe xor in mov push iret imul stos cli aas sbb sahf push (bad) faddl cmp outsl jl cmp or pop addr16 mov roll fnstenv sub push push (bad) fisubl inc lcall push push push adc nop arpl adc fwait xchg push mov dec cmpsl xchg out push xor pop dec pop addl add add sbb fcoms pop push pop add and out ja xor pop push ss outsb andl push lahf dec mov pop add fild sub dec jg jmp repz ds push mov jno cwtl and xchg mov lds mov fisubrl cmp mov inc in cmp and adc add movl std sbb xchg popf xchg mov outsl setnp lfs lcall push das jp ds (bad) int3 xchg push or jno sub cmpsl cli and add or and (bad) out and or sub mov out insb jae fs inc outsb mov lock xor in pop and mov fcomps rorb ret mov gs push or test push arpl bound jge inc cs xor cld xchg lea add aam adc and sahf xor pushf (bad) inc mov or xor aam lret mov repnz push xorl and sahf icebp sahf jbe mov stos (bad) mov orl push mov or sub das sbb ljmp lods jge dec cmp stc imul xchg int3 or push push cwtl or push insb jl inc and sub movsb push jl add sub movsl test sbb adc pushf fisttp mov fsubrl inc ret inc adc lret push aaa xchg adc int3 sub add add cld sbb into (bad) mov mov pop mov mov cmpsl cltd jo push cmc cmp mov fisub std jno jle push inc adc lret (bad) cmp pop mov jecxz pop and enter cmp adc mov ljmp and add mov das jle ret mov lret and ret inc lret dec jae cmp jg or xor dec leave in or lods (bad) dec mov dec addl add and sub icebp arpl xchg insl mov mov xchg pop ljmp add dec test lods xchg mov nop popa cmpsb out aas cli jo addb jno mov mov mov sub mov insb (bad) fisttp sbb sbb mov mov jae and pop xor inc push sub sbb mov add mov je (bad) pop add add add int fsubrs sub mov dec sahf pop lret cmpsl and mov test lahf add xor dec insb xor dec divb (bad) loop sbb mov ss xchg mov mov pop cmc fildll or out cmpsb mov out push lds xor fwait mov iret test cld sarl daa adc in jne rcr fidivr out jo orb jae cmp ljmp ss movsl lahf stc sub leave cli push mov inc test daa dec cmp xchg ja fcom pusha cmp or pop pop test fdivr fistl rolb add xlat imul je adc int loop shrb add add mov negb fs xor or shrl mov mov loope push loope mov pushf int3 xchg push mov fs cmpsb mov (bad) loope sbb ret loop jmp cli xchg mov add push fisubr pop push adc shll sub and stos add inc into popa pop sti les dec lahf jmp lahf outsl pop iret and mov mov fdivrs insb sub stos inc arpl mov inc push sbb pop xchg xchg xor insb data16 add mov xor in jl and sbb (bad) repz in adc xor sbb stc cmp pushl into int int3 sub lea scas and inc (bad) testl ds scas ret sub test pop mov cld mov inc cli xchg sbb rcr (bad) cmp mov add add cmc loop fiaddl cld in les into mov inc push iret mov js or push ret shrl mov cld ss js std fwait cmc outsl inc es sbb adc push push or mov out scas fdivs xlat frstor inc sbb stc pop add cmp out std xor pop push pusha jl add add pushf in sbb dec hlt out jecxz inc shll iret mov movsb dec jecxz lods aad adc cmp jl push pusha or (bad) ret inc lods lret inc or cmp mov incb gs mov fs add and sub mov imul mov add push repz mov jl xchg push or in imul in push fcompl push jl sti jge mov aad sbb ds inc icebp sbb sub (bad) cli mov sub lods fwait ja mov or fnstcw pop adc jle mov iret inc push aaa sub cmpsl enter mov add aad inc inc dec adc sub dec test pushf mov xchg sub xchg push (bad) pop sbb imul roll cmp call inc rorl xor hlt pop xchg sarb (bad) pop aas mov cmpsb jns mov movsl push jmp mov sub jecxz add mov mov xchg test es mov imul fimull repnz iret sarb cwtl push pop daa (bad) enter rep mov cli pop es mov ret iret out dec sbbl arpl ljmp inc fsub jns cmp cmp call icebp inc movl add cmp jle jbe add nop xor sub int3 inc imul int mov popf popf mov (bad) mov clc adc enter adc add rcll mov leave mov (bad) int3 je stos or mov popa sarb movsl lret imul add add pop stos mov call gs sub xchg lea adc sbb incl sub (bad) dec outsl into and xchg enter das xor (bad) (bad) mov inc int3 dec fbstp outsl stc popf int xor das push std (bad) insb jmp andl mov jmp add inc push mov mov je pop (bad) mov inc pop (bad) jp pop nop push outsb repz xchg fcomps mov lea mov mov (bad) and push pop mov adcw (bad) xchg pushf sti inc and ja jnp cli or adc mov ja adc add xchg cmp iret cmpsb gs and imul pop mov cmpsb adc mov sub push (bad) mov out loop dec pop cltd movsl test repnz stos aas scas xchg mov rclb cmp push or mov cmp mov gs or cld shll add add pcmpgtw (bad) gs push and nop pop xchg sub fistpl inc adc xchg dec (bad) int scas lcall mov mov xor shrb xchg imul mov js adc fildl or aaa nop mov mov or movsb add add pushl push sbb faddl jl or outsl rorl and sbb sub (bad) rcl hlt cwtl mov xchg jl popa out sub aaa mov pop push stos (bad) (bad) jl (bad) jle lods aad adc cmp arpl fldl2e iret mov (bad) or jo fisubr push out cld add push lcall popf cli nop pushf dec cmp push sub mov out (bad) add test mov lcall dec cmp inc inc pop imul mov loopne (bad) shrb (bad) hlt outsb ficomp mov (bad) adc xchg xchg push cmp mov jg enter xlat add into push testb fisttp push xchg or inc pusha stos mov int3 ds mov fldl loope (bad) push sbb jnp jno lock hlt fcmovnu clc popf shlb xchg loope mov cmp add pop mov mov add loop cmp xchg sti nop push and cmc repz sarl xchg adc cmpsl aaa push pop (bad) shrb sbb dec fstp nop data16 jecxz push (bad) jg bound movsl ljmp hlt imull test mov mov and cmc pushl mov stos mov add xlat (bad) dec jb xor mov inc cmc hlt sbb lods addl insb in iret sahf pop push add sub sti ss loope cli jno or xchg nop inc out in push repnz out mov dec or mov or add push push push pop sbbl add add loop push xor hlt pop hlt imul mov mov and scas inc mov cmp sbb outsb sub loop repz ret int rolb imul jo pop fildll and bound pop push xor call mov add add sbb lahf fistpl clc pop mov outsl out (bad) lcall (bad) push fisubl mov pop mov lret aam and sub aam jbe jbe out and aas cltd stos sub push mov jp jnp sub stc test jns mov stc test mov leave cld mov fnstcw out cmp add add push test xchg int3 and dec mov addr16 push fisttpl lret and and xchg (bad) dec jne pop imul out out out xor mov das and dec mov inc idiv push or outsl ljmp pop jo mov out pop out shr jae movsb add xchg (bad) mov sbb cmpsb xor pop mov sub and pop pop mov js cltd xchg into cmpsl dec pop popa mov pop jbe jle aad dec push inc lea js mov mov push xor xor fmul xor sti mov mov add aas rcll dec fstpt push xor data16 (bad) mulb call ret and out adc xchg ljmp sbb js or aaa inc (bad) jg repz (bad) push xchg std push gs sbb stos (bad) push fs fidivrl cli adc mov add xor add sbb insl cmp jmp inc mov fildll sub push adc inc leave xor cmpsl add or and mov add popa ljmp (bad) xchg pop mov (bad) in cmp pop pop test movsl iret cltd cmpsl addr16 (bad) rcrb jb add lret jge lock das xor xchg sbb mov jp dec aaa btr or pushf rclb imul xchg inc ja jo xor jecxz (bad) jmp cmc pop movsl cmpsb pop scas es pop push xchg inc jecxz add xlat mov fwait outsb xchg jo push aaa pop sbb jl adcl stc mov push mov xchg adc mov mov movsl inc xchg jns add mov ss inc mov dec fwait enter pop in movsl lret mov pop outsl jge sbb add mov lret mov push popf xchg les stc repnz lods in stos xchg aam push xlat fisubl imul add add dec mov pop movsb rol out repz mov repnz adc mov std push cmp mov xor dec loopne mov pusha es push jnp mov scas jne sahf out imul scas sub sbb or mov out add jbe nop cli jmp mov adc into or add (bad) mov jo rcrl sahf (bad) int3 ljmp mov pop imul sub rcrb mov inc das mov xchg mov mov lahf cltd and popf jns or ret mov sub cmpsl in in mov xor or jae test (bad) cmp add (bad) cmc ljmp sbb dec push cli cmp roll jle imul out pusha jo xchg xor push add jne stc popf adc mov xchg es mov fisubl and jg xchg fimul icebp adcl (bad) xor xlat inc jp xchg mov xor inc in add adc cmp add bswap add arpl scas (bad) out pop aad xchg dec mov ljmp pop arpl ret pop cmp xor addb enter cs push in arpl pop cmpsb mov add scas adc (bad) jno,pt insl icebp add gs out leave xor add pop push push xor mov add sahf cmpsb xchg sub cmp sbb adc inc ss sbb stc pushw pop (bad) lahf sarb mov jle jbe pop fistpl mov sbb jge sbb (bad) fsubs cltd pop aaa xor mov push jno (bad) cli dec in call add jg xor test add jbe shrl pop mov (bad) and push xor in ja decl mov push mov lods push (bad) mov in jmp cmpsb add xor sbb ljmp ja xor (bad) jecxz jl aas test cmp add std mov fcmovb test pop xchg sbb push and insb adcb ss fdivl fdiv mov gs iret lret jmp push mov sbb inc mov mov and jg xchg mov and lcall notl jmp inc sub dec sbb pushf mov mull cmpsb stc fildll and adc cmp dec inc movsb test pop and stos mov or mov mov mov adc lret call push bound adc jbe pushf es fucomp cmp dec push aaa bound mov cmp push jnp leave fstpl icebp and gs ret aam inc cmc dec sahf inc mov (bad) mov (bad) adc mov sub daa (bad) push push or lea mov xlat ja test push jno movsl jbe and repnz popa in pop mov in and fistpll gs add add sarb fstps sub push mov inc and xchg std adc cs test sbb scas sbb adc packssdw loopne and scas dec sub jbe gs xchg shrb mov popf mov xchg pop (bad) mov pusha iret aad add fnstsw cmpsl jg imul dec imul push xor sub jnp arpl jae jns mov inc push cmpsb out and lahf add mov dec adc mov xor and pop (bad) mov gs cwtl pop mov pop push test sbb ret pusha stc push sub sbb lods or adc ficomp cmp (bad) not push push xor pusha loope cmp mov cmp ficomp push aad mov cmc test lock and jb xchg js add stos push cmpsl jle loope rcrl enter adc adc sti loop (bad) inc xor add add lods pop sub push add mov xor xchg mov ljmp ret sub mov cmp ret cli clc jmp jge sub subb and pop add fstps imul xchg mov out and jns jns pop push pop mov insl cld lds lret push and dec (bad) lods imul xor xorl int inc add mov pop mov test in int pop mov cs mov loope divl mov cmp dec frstor sbb pop jp add xor js fnstcw mov test mov outsl fadd mov push pop les mov iret jmp mov cmp lahf ljmp pop push out repnz orl add (bad) les mov adc cmpsl push add add cld xor push loop das push cwtl pop fwait jl adc add mov lcall mov cmp das dec cwtl scas mov loop call push fstps dec adc mov into or cmp mov mov test xor inc call flds add add push add jns out dec or jb fdivrl mov jne loopne test mov mov loopne push scas jle aas pop sbb mov mov lds inc fmull cld mov mov and (bad) pusha imul aad and outsb xchg pop push cmp repz mov mov insb in adc daa jecxz inc data16 and lods scas cmp fwait lock xor outsl push cmp subl sbb jmp adc aad pop mov (bad) pop popf (bad) das adc mov pop xchg xchg mov mov jo pop or mov add loope imul add xor in cld insl insb loop loopne pop pop adc push xchg xchg xchg push adc and daa clc jp out mov mov lds sub inc pop lahf rcrl call (bad) cli fwait ja rolb xchg (bad) mov lret (bad) push adc test in pop adc shll dec sarb adc xor jp mov add and pop sbb pop ja and pop cld cld imul pop test mov push rolw (bad) lea rorb cmp mov and aam add add mov lahf movsb xor sub idivb pushf rorb jne (bad) mov enter and or pop pushf xor pop ret mov inc mov mov aam jg cwtl adc stos and (bad) ss loope mov lods iret sub xchg stos mov cmp add (bad) cwtl gs aam scas sub mov add mov jge sub jne and ret mov or hlt mov mov pop (bad) mov cmpsb inc cmp fbld mov pop ret push xchg dec or and or mov add ret cli ficomp jo jb add add jge or cmp push cld in out add divl (bad) xchg pop adc outsl gs push add bound inc add inc mov mov movsb add xchg jmp loop ret (bad) fnop mov clc outsb aaa push push or jge lods jp fdivrs mov icebp popa das mov sub cmp out push sar fyl2x mov je repz jns sub xor bound icebp test call mov cld mov adc mov outsb rcl popa mov test mov add add jp lock jae aas lock pop in notl (bad) sub test jle mov xchg mov arpl xchg cwtl mov leave cmpsl push cwtl dec (bad) fwait and movsb mov sbb fs pop outsb and lret scas jbe and adc pop push loop into and xchg outsl xlat xchg push xchg and rclb jmp push mov aas cmp repz pop scas insb pop in data16 pop mov pop test xchg xor mulps jmp inc inc rol sbb xor cmpsl out and mov add mov inc cmpsb and and ds mov cmp sarl sbb daa shlb es add dec jle cmpsb mov mov push push sub fadds jae scas and nop jp fs aas inc das fldl push cld pop sbb inc sub mov xor stos push add add push mov or fwait xor mov subl push in int3 inc or sub aaa stc inc test or mov jo nop in jge subl test fiaddl shlb cld sub cmp repnz sub xlat in out add add xchg and sbb mov inc sbb jl call in pop test cmp arpl push (bad) xchg and lret mov imul aam sbb sahf test pop mov cs pop adc push movsl shll inc adc add add adc std xchg cmp inc adcl dec mov mov jg add daa fisttp pop repnz rolb orb mov sub je (bad) jle and icebp int xchg arpl push mov test jp xor add hlt leave or sahf cmpsl fimull pop inc (bad) hlt (bad) movsl aam mov xchg subl fcomps out and ljmp lods clc cmpsb stos and cmpsb clc movsb je xchg out aas mov ljmp in add xchg popf mov push popa aas mov hlt pop mov dec leave int add add enter mov stc daa (bad) je daa movsl sahf dec and je xlat fimull sub in bound sbb adc or cmc mov loope fcomip mov jns inc dec clc mov fwait stos mov pop dec sahf jge dec sarb pop pop mov xchg mov aad out add add aas mov scas roll imul lods leave and jo sti sbb add jb and jg push push ss aaa nop in dec std xor (bad) ljmp (bad) mov aaa push stos jecxz fisubrl int or push mov adc fwait inc sbb add add add ficompl stos pop sbb inc adc lea xor dec in test aam mov push lahf pop adc inc cmp pop test jl mov add inc outsl js pop je push xor or inc push dec push outsl fsubrl sti sar dec and popa and lahf fdivl or sbb aaa cltd cmp nop push and fiadd sub mov xchg push xchg lahf (bad) mov movsb or xor dec xchg int3 sarb jno mov pop and inc mov sub mov and push or xchg and imul push mov lret inc mov dec aad loopne inc mov adc ljmp ljmp jle rolb and adc push div jo fnstsw mov aad movsl xorl pusha into mov xchg jg xor jl add jge fsubl je adc sub in mov xor test test or test rcll or das pop pusha loop cmp cld test xchg and push cs sti mov mov mov pop mov rcrl sub mov (bad) mov jp pop sub add add and movsb (bad) call sahf test sbbl cmpb aaa std mov add and or jmp (bad) aaa stc movsl lret test inc xchg push push jecxz or mov out nop (bad) divl outsl inc or xor pop int3 jnp inc sub rolb ljmp mov mov push ss xchg sbb js fs nop push lret pop outsl int3 jl mov adc in sbb test adc xor cmpsb (bad) sbb mov jns std fdivs hlt call insb (bad) std xchg vmwrite fwait xor adcl xchg jecxz cs rcl push jle push clc pop push xchg xor (bad) in mov sub loope aam push pop dec lds js or inc xor dec mov add jmp mov (bad) cmp inc in jns mov pop mov pop xor jle sub (bad) jge fistpll add add add xchg xchg push addb fdivs mov jb xor shl in (bad) push rolb call addr16 jp mov loop daa xchg jb cmc adc aaa mov mov or sbb fs gs push nop sbb jecxz mov bound popf add push lret ds das or in pop pusha and cmp inc xor insb clc pop ja push (bad) and out xchg and test sbb jno stc mov mov rcrb lock movsb mov (bad) leave xlat adc andl push adc pop pushf adc add add add add xor pusha (bad) fwait mov (bad) arpl pop jns mov cli mov xchg or sub mov out mov stos scas rolb lahf xchg test nop out inc daa mov push cli cmp adc sbb inc fwait mov out sbb daa imul push add add fiaddl add sbb xchg out or xor xor in adc aam test cmp xor xchg in in bound inc sahf fmull cmp jnp sbb cmpsl lea fsts outsl out mov add xchg mov push dec nop int3 sbb add xor lods mov fcoms cli js dec cmp hlt or cmpsb stos push testl push mov dec hlt mov fbld sbb mov popf pop xor aaa dec add xor push je into adc cmp pop and jns rolb or add shrl (bad) lea xor dec mov dec adc push mov rorb jg or mov enter pop add jne fidivl adcb test add enter jae mov cmpsl outsb loope xchg lds mov (bad) push cwtl data16 cmp add or sub xor xchg ja sbb mov cmc je rol (bad) fwait xchg push lret ret adc mov iret aas stos push mov and push in clc push fistpll adc dec or pop mov mov imul cmpsb or (bad) clc das into out sbb add and pop lock fwait xor pop (bad) inc fildl jbe (bad) repnz dec dec jecxz fisubl or lcall addr16 inc pop cmpsb dec mov mov loope mov inc cltd sbb dec or push frstor rcll pop inc mov lea data16 adc stos add add add fs push cmp (bad) push iret hlt xor in scas xchg sub (bad) cmp push dec jle mov into xchg cs repnz or add out mov adc in sbb adc std pop sbb andb outsl jno aam xor daa add add add inc cmc rcr jae inc data16 add out cmp push movsb mov pop dec lahf shl notl mov xchg lahf shr xorb and data16 cmp ret jb mov sub sbb in xor (bad) shrb and add movsb xor jb inc call add add mov and fst aaa mov (bad) std mov sahf and or cs xchg (bad) ds fbstp mov cld scas int mov fimull repnz mov jmp fwait scas fisub push sahf int or pop add int3 xchg in mov add les xor das inc push lcall adc fsub daa aas repz fstps sarl sbb push xchg mov dec or mov inc aaa pushf mov and mov ret mov imul mov mov ficoml js scas jmp insl pop adc cwtl lock loopne mov xchg out mov enter mov dec pushf jmp sbb cmpl sub cli loope sti mov sub pop roll (bad) sbb mov dec arpl cmp out cmp out pop (bad) cmpsb pop adc or add add dec test mul fisubr pop mov pop xor push lcall in xor pushf gs int3 cmpsb outsb data16 clc pop jns dec jno cmp pop inc jl ljmp negl popa sbb test icebp test and aas outsl jb out jge sub pop add mov add cmpsb popf cmc sbb lret insb jecxz nop stos jb pushf sbb jb push inc dec jnp les aad inc (bad) jl sbb gs mov mov dec cmp cmc (bad) movb sbb jae lods xlat incl dec inc inc xchg jecxz inc push lahf enter fadds add and in jno mov dec (bad) and (bad) jle jecxz fcom lcall fldenv pop out mov add dec inc fs rol fs imul mov hlt mov sbb sbb fcmovbe mov cli sbb push loop int3 pop fstl mov scas rolb movsl rcrl push or test inc sub scas dec inc test (bad) xchg cmp adc ss add test icebp addr16 pop adc pop jb sarb (bad) outsl push (bad) jge or dec mov stc out xchg fidivr lea dec or xor inc sbb btr add add pushf inc jb lods inc mov or push lds xchg jbe push push cwtl pop adc cmp dec xchg lcall dec xchg pop xchg xchg inc mov (bad) or push fwait and loopne jns push mov pop jno stos subl cmp fs rolb add add inc pop and xchg sbb mov ljmp int in or pusha mov pop mov adc push imul mov lds fildl fildl je inc xchg add mov movsb jle inc shlb add or (bad) jo pop (bad) mov xchg js popa push pop cli sub cmc pop pusha dec je shll cltd mov sbb lods mov pop (bad) lcall inc xor xchg insl push pushf call testl aaa push xchg mov add shr add and fwait pop dec mov adc loopne or (bad) rcr pusha and out nop in jle testl stos clc or inc stc mov cmp shl sub in out jns roll hlt out push fcmovnb adc mov sbb jp mov mov add add adcb shrb shrd dec out es sti inc jmp pop push and enter leave cmp aas cli jbe je dec push and int3 imul push mov repnz nop mov int enter aas loopne jns inc push (bad) dec mov add adc popf sub pop and mov (bad) outsb loope sub fnsave ljmp or and xchg (bad) jmp out aam dec mov mov mov xor movsb movsl xchg jmp mov inc adc mov or test mulb sub inc test pop xor repnz add add sub mov dec (bad) and inc adc inc push cmp js test pop icebp jbe dec xor mov cmp add out and sub insl dec jb xor shrl jb lods and movsb pop add jmp lock (bad) push fwait xchg in mov add (bad) mov dec cmpsb (bad) aad jnp mov sub inc iret dec in cmpl mov jae fwait push in mov cwtl aas add out jecxz and sub or or stos dec xchg fcoms mov cmpsb loope mov sub int fisttp or mov mov and jno addr16 add xor scas fstps daa push mov cli jmp add xchg mov dec mov pop push mov pop inc or xchg mov mov or adc mov push push adc out adc lods inc movsl out sub out (bad) nop push dec ja push pop cmp out out xchg daa sbb add int sbb push inc and or mov sbb jno or sub repnz add mov sub pop cmp mov fbld icebp mov cmp add sub dec inc ret repnz dec int aaa lds outsl stos add add rcll nop enter movl pop adc jmp inc sub bnd jl int (bad) aaa (bad) aaa test sahf xor lods jg push stos lea (bad) or (bad) mov pop stos es fisubr push xor or pop clc or pop cld test loopne (bad) loop add fiadd add pop xor or arpl jo cmp mov push or inc es dec out fidivr lret mov and fadd adc icebp push mov aas jmp in iret cmpsb insb lea pushf sbbl pop xchg and ja lret adc cmc pop add fnsave into push rclb mov pushf cmp ljmp call jecxz (bad) aad xor rorb int aam fimull out mov xor outsb lds popf pushf repnz sub lcall sub cld in bound xchg (bad) std pop lods pop lods out mov add sbb pop sub mov jns les pop arpl call pusha cli mov sti push inc pop dec add fsubl and loope adc repnz inc xor mov dec and movsl lds cwtl movsl add add add or and pushf pop xor sbbl pushf xchg daa or sbb xchg and dec add xor cld jne outsb jae (bad) push test pushf mov jbe pop push or sub lcall cmp rcrl jecxz,pn xchg fs mov mov popf xor dec int adc insb enter mov push adc inc adc idiv (bad) mov movsb mov aad je test out (bad) push (bad) das rclb and mov jmp cmpsb inc into adc jne mov jp lds stc inc sbb int mov mov push sti jecxz out dec data16 ret pop data16 mov outsb insb xchg (bad) repnz imul sbb mov mov or adc cmpsl (bad) mov les or scas add jbe cmp mov fucomip inc pushw and jno sbb xchg lods into mov out repnz inc aam mov adc push pusha not in xchg cmp lock movsb loop inc push xor aas nop call ljmp mov pop sbb adc movsb stos aaa popf sti xchg dec lods push dec cltd jp mov pop bswap fiadd in dec dec mov cltd cli cld mov insl stc pop shl inc pop stos xor xor jns push insb adc (bad) fmuls btc inc add rclb mov arpl xchg xor sub (bad) scas fsubp fucomi jbe cwtl stos dec shrb mov push nop cmp add mov dec xor add iret sub cmp sbb test jmp ja fs fstpt xchg (bad) imul or pop cli xchg sbb mov in roll sti cmp push insb push pop fidiv cmp xchg inc fldt add add cmp aas repz in lea movb sub inc pop cmp xlat mov mov cmp pop setnp mov stc ret jge mov out and lcall repnz test xor and enter pop adc xchg xchg icebp shr hlt inc sbb fimul cmp inc arpl sbb lods lret (bad) and fstps push ret xor jmp mov mov in dec xchg arpl ret add lcall push inc push aam movsb mov faddl add and addr16 cli scas add lret mov mov and out or adc test pop pop insl (bad) hlt movsb adc in out dec push andl ljmp int3 ja jmp in sub xor loop jg dec rcrl add push mov jne dec cmpl add xor fadd inc int pop cmc jecxz icebp cmpsl fldl cli arpl rcrl jg int3 inc push enter jno dec and (bad) std sbb fsubr and mov les (bad) outsl (bad) ror push xor (bad) and add popf adc pop dec out out xlat shr das cli push push xor aaa in fs cmpsb loope enter adc xchg jmp arpl pop in push jmp xchg enter stos imull mov xor cmp clc imul pop inc stos sbb adc pop xchg les movsl add add rclb subl rolb scas push daa shrb xor outsl mov sub xchg pop mov sti lahf xchg jno push lds decb stos stos pushf mov xor std push sub jb inc cmp in adcb (bad) insb pop (bad) ja (bad) and lods cmpsl cwtl call ret hlt lds fcoms add mov add rcrb inc push int3 mov push aaa adc mov stos jns cmp mov lods sbb xchg push push push movsb jbe jbe (bad) call das jb push add and add add jbe sub push addr16 jb popf loope adc dec ficoml movzwl mov lods mov dec fldl out ds adc mov xor jbe lret inc mov dec xorl jns sub mov scas ret arpl jmp mov jnp mov xchg testl push pop pop notb jns test lock cmpsl sbb movb stos xor xchg cwtl jp pop push mov dec add lea test sub divl in cltd out cmc mov stc xorl mov inc adc sahf jae add cltd mov push aad fwait out das into inc (bad) jle dec lahf mov outsb add sbb xchg mov rcl ret cs xor jo fisttp jnp push bnd mov mov pusha test adc jg loope jns push mov pop je cmp xlat sahf sbb add dec pusha mov xchg or mov insb insl lahf arpl xor mov and and mov xchg aaa das stc mov outsb fsubrl adc push inc push cmp mull push pop incb negb or push popf sub test add add mov pop aas push sub dec or (bad) aas int3 mov scas leave sbb sub add movsl dec (bad) or mov jg mov jge inc aad test ljmp ja lock mov mov jl (bad) notl add fstps int3 ljmp std sarb mov adc jae (bad) pop push jmp clc push sti cmp in mov ror push loopne cmc pop sub mov mov push jl push repnz dec xor xchg lret (bad) sahf nopl (bad) int dec repnz int3 jp ds imulb add add or (bad) xchg sub ret push mov ss test out int imul jp cmc icebp (bad) (bad) je dec dec stc sub test nop dec rorb mov push out pop orl loope aad sbb add and push arpl rcll or js fs inc dec daa (bad) loop add es cmp jg xchg push les add call mov cmpsb jecxz jg mov dec mov outsl jg jnp inc mov xor inc xor es fbstp (bad) mov push ss jno pop jne lods mov add add cltd loope push cmp xor cmpsl cmp js sub lock pop adc (bad) cmp mov test sub outsb jmp push leave mov cmc outsl test outsl fmull mov fadd push add in (bad) xchg imul cld out mov negb fcmovnb (bad) jb sbb hlt mov add mov jmp mov sbb push mov xchg push aas inc insl mov sbb pop and jb stos and pop repnz (bad) or add add add mov inc cmpsl sbb pop mov sub jbe jg adc test stc xor add add push push xor fwait mov jmp stc push (bad) cmp loopne mov inc fwait sub das (bad) xor icebp in movsb cmp popf dec mov cmovae inc in icebp inc mov pop cmp adc hlt (bad) mulb push in sbb inc (bad) push jl std mov (bad) leave add adc out cmp cmc add hlt dec lret add cltd sub jbe int3 or lods push (bad) dec out lret in rcrl mov push bound in or data16 icebp adc adc sbb or jp aad and jmp jbe mov add ss loopne stc and lret (bad) movsb mov or xchg jle add mov inc cmc in rorb xchg and sbb add shll repnz ret mov outsb sub cli leave mov cmpsl inc (bad) dec fmull loope out scas pop push (bad) repnz sarl add add add mov js (bad) sbb (bad) mov xor and negb jl pop insb stos sub into xor std sub mov pop or push jo loop xchg rcrb pop jg nop outsb mov lret mov (bad) add dec je pop daa cld icebp rolb jae add movsb scas or add aaa in rcl movsl into dec mov mov (bad) (bad) xor pop pop mov shlb js xlat lcall stc jmp mov rcrl (bad) add add mov fstps loope push lock jge insl addl fwait add sarb jo dec cwtl sahf push out push inc je xor mov in repz dec fistpl lods inc and ret cmpsl bswap test rolb bound cmp mov mov mov add jne add cwtl adc push mov into mov pop imul add mov mov sti inc bnd jb insb lret and and ret mov ss pop add mov add mov push cli scas mov or aad mov sahf xchg jo nop ret insl clc out sbb out ss lahf lcall adc sbb incb add add into ficom jl inc mov std push ljmp or cmpsb cmp xchg cli clc pop mov (bad) gs jmp in call pop scas insl fs das xchg jge imul xor push add inc jecxz pop and (bad) icebp fild mov hlt xchg mov aam add push jmp cwtl icebp insl cmpsb cli cmp inc rcrl mov sub xor (bad) ja ret sub enter mov and adc sub sub cmpsb cmc out xor rcrl fnsave dec outsb or cmp clc int gs xor sbb sub add add addr16 (bad) adc pop jbe adc jo roll icebp mov cmc lcall pop inc pop arpl insl cmp sahf and mov (bad) out push jecxz ret loopne cmpsl scas adc fld sub shlb add (bad) aaa cmp sbb mov mov movsb mov arpl in lret sbb add xor add rcrb mov dec cltd pop jl (bad) dec cs cltd xchg es or ds movsb mov add fnsave loop (bad) out push outsl xor jmp rcrl xchg mov push push pop jo pop or mov cs jnp je xor add xchg cld loope imul int3 pop inc in pusha inc add jmp mov inc mov mov jno addr16 xchg and or push ret pop out jg gs cs pop dec mov imul mov lret pop pop jns inc popa add sbb jo jns testl in mov mov ret fwait lahf repz xchg (bad) add inc mov in push adc inc aam popf loopne dec scas push and xor int3 daa call cmp nop das xchg (bad) gs or fs and sbb sub inc cmp sbb cmp (bad) xchg mov add mov bound xor mov dec out add sbb inc push push xchg mov mov das rorb in sbb and cmp xchg (bad) arpl inc pop fildll repnz adc mov inc nop lods mov dec pop push enter lock lds lcall add vpsrad add dec jp sub sub in mov ds xchg cmp inc (bad) push pusha fldl jecxz out cmc (bad) adc fldl2t int insl push pop mov inc addl aaa xchg mov xchg orl or ds jmp inc add and sbb in loop push jg jne aad imull into and inc jmp jbe push popf fldenv cs shlb xchg aad cmp into pop jecxz lea insl js sbb test push arpl gs mulb xchg jp ja jl cmp test inc cmpsb dec and adc ret in add add add test lods das test test mov icebp xor pop lds outsl clc pop sub inc (bad) or mov and dec pop lds fdiv fucomip ss stos pusha add pand fldcw inc leave lret pop cld xchg push jb cmpl out std rorl mov jno bnd aad sbb lock mov es cmpsb arpl add mov in pop into xchg in dec fsubrl add out out je mov mov push mov inc arpl add imul and mov xor sbb pusha xor xor lret add lock xor sahf data16 jne inc js mov loopne mov cmp inc add dec js push mov aaa adc pop sti and cmp js inc dec cli bound (bad) mov lods rolb fimul sbb pop lret les add pavgb (bad) (bad) dec test pop cs add xchg fdivl or out in cmp cmp lea adcl hlt jo push cmpsl mov pop inc xor adc sbb jbe imul fisubl add call or jge dec movsb repnz mov es pop fcomps add add add (bad) arpl inc shlb jecxz inc fs pop inc cmp cli ret ljmp add xor adc jns mov pop mov ja imul in gs lcall jbe xor std add repnz jmp lods out cmp add sbb or sbb cltd fimul mov dec sbb jp hlt cmp pop jne mov dec jp jnp or xchg pop mov sbb jbe arpl mov sub inc add jo insb push lahf xchg lea inc (bad) scas sbb popf in pop pop (bad) jge pop sub xor jp pop gs imul push adc sub mov pop add inc dec test pop xchg adc int jp sub adc ss mov mov jl out mov mov test (bad) sbb lea (bad) mov jmp push and add (bad) jl bt jno pop int3 js push loopne lret inc inc xlat popl jmp aad push sbb or push sbb and fmuls call xchg (bad) int3 push mov (bad) (bad) cmp dec insl jle add std push repnz cmp ss push mov inc pop roll add add inc pop push xor dec mov sbb fistpl sub xchg lods sub push sub or mov mov xor repnz xchg mov aaa in sarb call cmp xor ret leave cmp fnstenv sbb pusha pop mov jle (bad) dec add adc mov mov fucomp mov add movb cli movsl and leave cmc push dec xor pop mull mov ret iret testb or mov push fs jno aaa sbb xor setnp mov leave cwtl outsb inc stos pop dec jns int3 mov sbbl faddl add add test out xchg dec or dec lock inc int out pop fistp xchg xchg int3 (bad) mov dec mov adc aas jne jns push and decl add jge sub rorl cltd stos outsl mov jge out mov sahf inc jae pop test and stos int in sbb xchg adc push fwait mov ss (bad) call push icebp push mov add cltd adc jns dec popf sbb outsl insl sbb adc das ljmp jl jne adc les popl movsl loop fldenv lcall pop cmp test mov outsl ret xchg push lret dec sub int and pop mov lea mov inc out mov add cmp or dec lock sub das (bad) or call add push das bndldx test cmc adc lds aad stos stos jnp divl mov add bound mov lea xor sarb mov jl pop movl jecxz pop cmp pslld ss (bad) repnz leave cmp shlb add push or lcall jnp ja mov aad out jle jmp inc pop fild mov add adc out lcall mov aam loope mov mov lret arpl insl or add xchg ljmp ret scas fs sbb pop dec mov inc int3 repz push push xchg xchg pop orl aad ret lds add cmp dec pop (bad) sub adc fs aas stos inc add mov dec and fucomip frstor mov scas pop cmp out (bad) mov repnz (bad) or das inc movhlps std xor push int faddp mov cmp (bad) xor push ljmp add std adc or arpl test jmp and push fs push not jo aam shrb imul sbb cmp xchg out mov xor mov or bound mov dec addr16 loope xchg add stos mov imul (bad) cmp adc ficompl add add adc nop mov repnz loope fs loopne sahf aas inc fcomp call mov cmpl lret arpl fnstcw add push mov or xchg mov push mov sub xor (bad) mov or into lods sbb xchg fdivr nop bound aam or es pop shll jne jl cmpsl cmp pop xor (bad) mov mov cmp sub aad push sub sarb in dec add (bad) fcom lds add (bad) mov hlt dec and jo test sahf adcl jae fldl loop jbe rolb add lock pop cmc cmp ret adc xchg mov into xchg hlt cmp pop mov mov shrb sbb aad jb scas (bad) jo cmp je mov and xchg sub add mov in pop xchg insb push jmp aam iret cmpsl iret sbb pop or add add clc (bad) mov mov push pushf mov bound mov insl (bad) ret insb (bad) sbb imul cli out inc outsl push mov loope dec inc mov ret (bad) xor pop test xchg sarl pop dec xor mov loopne sbb jb imul scas add jge pushf add add add pop adc mov sbb xchg and mov xchg data16 fwait sahf dec mov jbe int xchg add sub and (bad) leave xchg cmc inc xor xor and outsb mov mov and add inc mov or roll mov aas popa ds push cmp mov lds popl jecxz inc xor and fldenv and jno push and xchg js fldt shll in dec cmp aas leave or push mov out add push dec sbb mov sbb inc mov xor dec xchg (bad) cltd aad arpl lret xor add inc lods fnsave stos fistp pop inc or mov mov cmp sbb mov jne jle lock add in jbe add jnp or mov loop imul add in bound aam (bad) cmc dec movsb pop push or add stos dec xlat in pop mov mov unpckhps adc movsl mov sbb nop stc mov pop xchg fwait outsl mov jo jp loope sahf insb hlt add sti mov loop or popf fs js repnz xor xor pop gs stc inc push jle and cmovno add push mov mov je cmp push jno cmpsl subb fwait repnz cld mov ja jle dec aaa xor gs repnz adc mov sbb leave ja popl inc push les and int lods and xor cmp cmp pop out add add add or cmp push push sti jmp sti inc xor fnsave xlat leave fcomps enter sbb push loopne iret aas mov in sub loop mov lock cwtl mov fwait les xlat push jecxz lock cmpsl jno adc daa (bad) rcrl cmpsb add add imul lea scas adc popa repz stos cltd add mov cmp mov cmp adc aaa dec decb mov into ret or dec ss inc jbe sbb call mov or jl dec push sub and aad cmpsl es (bad) or add add inc jg in push sbb out cmpsl imul idiv ljmp insb xchg xchg imul aam (bad) popa outsb data16 stos or lahf repz or js cmp jge insb ja pop inc fs pop mov mov mov mov jl int lock xor add add add dec rclb lock lods std jp sbb pop test cli dec pusha fldenv mov pop pushf jl das in rolb pop and inc sbb xchg lahf xchg and pop ds push cmp pop (bad) dec inc loope pop sbb pop jo frstor dec imul popa inc xor xchg mov cwtl add std adc add data16 rdmsr sahf push into arpl xchg out (bad) xor fwait pop cwtl repz popa sub mov daa jecxz in adc xchg dec jp xor std (bad) pop and pop mov mov imul sbb xchg dec and pop push lret (bad) hlt inc lret mov xor mov lahf sbb pop push aas rcll imul (bad) (bad) inc adc punpcklbw push cmp sub pop or push mov sbb out sub mov mov or pop jae and xor popa cmp jo loopne fcoml cwtl mov add add and adc jo sbb mov xlat mov leave push push and in loopne fistp fs int3 aas cmp pop mov in push daa test and mov jo sbb mov (bad) (bad) repnz shrb mov xor jne adc push mov add jmp mov es clc or xor mov mov lods rcrl or aad aaa pop push addl das out call ljmp mov (bad) xor icebp sahf jo pop or cmp (bad) repz sbb mov pushf aaa pop popa cs (bad) sub lretw xor dec mov cli mov jg or push icebp stos xchg or jno in xlat jb pop aaa cmp out (bad) mov lock (bad) mov movl ljmp jmp xchg inc mov push push out mov and xor mov add ret inc imul inc and sti mov or jne dec test out inc pop adc inc and jmp out loopne (bad) sbb in (bad) leave mov push out lods outsl rcll lods and and (bad) xlat fcmove arpl cmpsl lret movsb add add add mov mov sbb orl int and movsl dec push mov (bad) xchg ret mov lcall stc dec bound adc xor jecxz pop je inc pop je mov mov pop jnp mov stos adc int3 push outsb xchg fidivr sbb (bad) in add add fs adc fimul push sub out pop xchg shll sub (bad) ror sub in out push out inc push xchg packssdw test sub sbb jecxz xlat bndstx cmp push mov mov jne mov test push lret addr16 pop test clc jbe mov ja insb dec and mov dec lds bound fcomip sub cmp jg mov jb xchg mov lcall jl lahf (bad) jb,pt dec fcompl or jo loopne repz sub lods add add add stc sub insl adc ja sbb mov mov test mov lea stc call in aas test fnstcw pusha rorb (bad) shr loop pushf mov fdivrs push lods inc ret lcall push ftst cmp push les mov (bad) cmp push sbb lret das dec xor sbb inc xor in arpl out or or xor xor sbb adc xchg loopne mov lcall (bad) mov (bad) jo notl insl adcb or punpcklbw jae mov pop mov sub add add jns dec out sbb mov inc sub cli (bad) loopne fsub inc out xor fist lea xchg cmovo lret icebp jl mov pop aam pop xchg pop mov loopne jle js bound jb clc and cmp push fnstsw mov mov add xchg imul and jmp sti push popf sub mov sub pop pop push xchg xchg (bad) cmp cmp add push data16 shlb mov shll sti or jle bound cltd mov mov adc pop inc pop push push add into xchg mov fisubr pop cmp pusha outsb popa adc loope fildl adc in cmp add movsl cwtl push or repz mov jo mov (bad) (bad) add push pop or rcl lahf loop lods pop xor cmp movsl inc fdivs fucomip xor xchg or cmp mov sbb dec jp hlt mov dec sub sub xor test aad fidivrl loop inc push sbb and mov adc pop and and stc pushf addr16 out aam lret dec jp or mov (bad) int in orl add jo add out push or outsl rorl jmp sub inc inc sub bndstx loope add add clc (bad) cmc jbe sub movsb mov and mov add (bad) das imul lods cmpsb and outsl jp pop and lods cmc fnstcw and add sbb fidivr push cli mov gs sbb sbb mov pop in aam es cld (bad) mov pop cmp ds xchg sub rolb test pop mov mov or or (bad) xchg test xchg cltd cwtl pop movsl cmc inc in xchg add icebp les in jmp jecxz mov iret adc popa scas (bad) cmp cld sbb xor hlt jne mov push dec push mov (bad) mov in dec jae js pop add add ret int aas jbe std mov or fisub inc jle mov rorb jecxz (bad) sub js add add push stc xor pop push and fbstp lods ret (bad) outsl and int aas popa jle psubd pop mov dec xchg sbb jo cs lret mov push push outsb pusha jmp mov test pop test mov ficoml scas inc push add (bad) fldcw inc jae pusha push pushf (bad) xor sbbl and fimull imul adc mov fldl push push add pop call stos out call sub out xor sbb pop xchg iret pop sub loope mov jns movb add xlat int3 adc loop xor fisttp pop movsb aad cs gs repz sub push xor out adc inc rolb jle out inc gs cli es push push xchg mov nop push push (bad) jl xor and das test push mov jo (bad) dec fdivrp mov in iret repnz aaa fldt mov lods add add bound lea push dec ja lods adc mov out dec iret mov jecxz cmpsl ret or inc aad lods jnp vmread push outsl (bad) das leave dec stos jns xor pushl mov cltd test in mov lods ficompl in xchg and fildl lret and jno mov and push sub sub lock adc test push mov sahf roll das mov incl mov xor sub dec push out dec int3 xchg call xor sbb xchg and movsl mov sbb shrl lret xlat (bad) jae dec dec mov in imul push daa jl pop inc stos scas cmp cld in pop imul inc movsl xor or mov loope in cld jl jecxz pushf iret mov cmp movsl imul pusha aaa mov fwait push xchg add push and sub repnz jmp adc (bad) and pop aam push lea (bad) loopne sbb lods sti mov in inc xchg hlt add xor jb xor lock mov je add repnz aas imul lret inc mov arpl push movl add sarl movsb mov and stc push mov mov or dec (bad) mov sbb sbb fbld pop cmp sbb or aas andl push push xchg push inc ja push sub rcll xorl rcrl movsl imul add add jl rorb stc bound jnp cmp jp sahf mov loop sbb jno mov xor cmp into hlt and lea rcr mull mov mov clc push pop roll jp aam lret movsl icebp test ljmp addr16 pop testb add jnp das mov sti inc inc (bad) dec mov repnz pop (bad) mov xorl xor mov xchg and jnp repnz es jecxz mov push mov clc adc mov (bad) loop dec pop add push add xchg cwtl stc shrb lock (bad) jbe add (bad) or pop mov out icebp fistl push add or lock jnp xchg xor xor inc push movsb nop sub push jno jp pop fiaddl loop mov ret addr16 lds cmp divl pusha movsb ret orl pop mov popf ret add xchg mov rcrl mov and mov jbe sbb dec arpl fucomp adc fldenv popa xchg stos icebp enter mov jmp mov hlt cmc mov xchg arpl push xor push inc (bad) addr16 pop test in adc add push add cmp xor cmp es daa pop pop cld loopne andl scas lret (bad) cmp iret push (bad) mov mov mov je loope (bad) iret out testl cmc lods pop lds xor outsl shrb scas jp xor and test in add dec imul ss loop push (bad) (bad) mov mov test in sbb pusha adc inc movsl push sbb sbbl jo xlat rcrb pusha out out hlt addr16 lret call adc in jge,pn sub fisttp adc mov dec jge (bad) mov cmp idivl fmull mov gs dec in xor mov push sub sub arpl stos stc inc xor sub sbb inc cli cmpsl sub inc test mov lahf (bad) push and imul inc ret sub sub add (bad) icebp loop (bad) dec inc movsb das (bad) enter xchg xchg lret and inc cmpsb test (bad) out les lret popf xor in mov adc mov pop mov pop pop xor popf pusha fisttp dec jl out hlt jle std push push hlt or mov ret or add enter cmp cmp testb add and divb mov mov pop ljmp in push push adc xchg pop inc sub imul sub cmp push and (bad) mov xor xlat sbb mov add movl or subb aam mov gs pop mov cmpsb mov sub (bad) rcll shrb fs push xchg add and dec call mov jno negb xor sub je test lods xor xor add addr16 push sbb ds push inc std leave push jmp (bad) int3 cmp mov dec ret mov out ret dec mov (bad) mov fnstcw movsb nop and (bad) jo and xchg (bad) dec add pop lock push lahf mulb and test nop inc cmp nop pop add add fdivrl test mov aas in test pop hlt scas lcall xchg loop enter cmp les jl push imul push and cs pushf test mov mov add pop pop mov push push push mov mov fstps dec add test mov xor into pop add pop mov roll adc mov cmpsl dec leave ret mov mov mov aas int3 mov jo test std push out outsl inc push jbe adc popa in jge int ds pop xchg addr16 lcall daa cmpsl lea add add add add cli pop mov ss jno fmul repnz push mov cmp stos fs lret jne adc pop xchg jg sarb fcomp rorb repnz adc or pop popf arpl test xchg inc pop (bad) mov (bad) fmuls hlt (bad) push xor or cmp arpl xchg inc add hlt add icebp lock inc cs fldl or scas adc or cltd (bad) std test leave add pop mov add dec hlt sbb outsl sbb arpl aaa scas movsl mov stos in xchg (bad) jne aad fisubrl pop and js xor into push pop js (bad) inc adcb packsswb (bad) jo add add add add dec fcmove das jo and pop pop insb mov mov jno or inc and mov and (bad) jno insb and mov (bad) xor xchg pop cwtl stos dec sub jecxz or push push shll popf inc icebp cmp ret (bad) cmpsl or pop and push add add push xor shrl push rorl shlb cmp ret nop repz dec sub sub test mov or mov out in daa mov pushf or xchg xchg push add push push mov and repz mov mov (bad) mov dec mov add add pusha sub std out pop test jno pop setae push sbb inc lock test lods out movsb int ret movsb ror jbe fcmovbe adc insl sbb stc outsb mov mov pop out sub and sbb inc xlat pop scas test mov leave adc clc imul add add and stos sar mov sti jb js sbb jle leave xchg jo inc push je test mov outsl mov (bad) out pop inc jecxz ficom push dec lret mov test addr16 (bad) pop ret (bad) jo adc mov lahf (bad) cmp dec add lods jns stc lret or sub xor std es mov hlt jbe std jp mov fisubl aad idivl dec sbb es inc mov xchg movsl cmp pop pop jo (bad) repz lock mov movsb (bad) mov adc push lock push fs hlt jmp inc loop popf inc fiadd add add sbb int dec jle jno cmp pusha (bad) ja es lock popf popf and sbb mov jle sub ja rcrb inc dec xchg xor (bad) mov fnsave add bts sub add sahf fsubs sub push jmp dec lock repz pop inc ja cmp and bound add imul mov or cli int rolb dec xchg mov cmp xor or and push test mov push adc and sbb pusha jbe xor cmp fsubs add incl add or dec pop imul fdivr outsl (bad) movsl mov jmp add sub sub pop (bad) cwtl xor lock in or xlat mov mov cmp mov rol mov out add call inc and inc adc mov add jecxz test xchg xor lods inc mov popa sub pop ja mov add daa (bad) xor push pop xchg cltd (bad) outsb xor push int3 js cmp int3 (bad) jge cmpsb and (bad) cwtl mov rcl enter aam aam mov lcall push add test mov push pop leave jp shr and leave enter gs mov inc in fldt aad sub addl fxtract xor sbb cmpl movsb or pop ret in cmp push stos mov dec pop mov pop ret into (bad) icebp sub sub xchg ret (bad) add add lods test xchg out or jb (bad) mov fldl fs scas inc add popa and popa jg mov push xor test lcall mov fldenv jnp (bad) bnd cwtl ss imul sti mov jl add js dec mov (bad) in push push pusha orl cmpsb mov sub cmpsl xor inc pop push gs inc add movl stos inc mov mov adc jmp in xchg add sti arpl dec adc ss mov movsl je jle sub scas jle jecxz adc stc fcmovu and mov repnz push outsl dec das les cmp aad jnp cli int out mov loopne aaa rorl jge mov jno ljmp cmpsl mov adc enter lds cld lret enter or mov add add (bad) jg test leave push and mov jne icebp push shlb insl sub sub adc xchg xorl hlt cld mov pop cmp mov push pop scas aad shlb mov pop (bad) rclb pop sub and daa lods es outsb jge pop cmp add test test cmp jae pop push enter (bad) jb aaa scas ret out hlt loop pop dec mov not jle inc bound cwtl cmc movsb mov pop mov cmp in les es mov xchg loope (bad) divb sub insl clc push jno loop outsl push push shrl leave mov xchg xchg xor sbb hlt add pop jmp in push nop mov andl add pusha mov fadds push adc adc cltd dec mov sbb fs push loopne push dec es in mov jno sub adc inc xlat das into add add in outsl xchg sahf and out mov sub mov sbb arpl fldt out lcall in cltd inc aaa int3 shlb push dec xor fnop (bad) xchg data16 subl outsb push pop jo clc jns xchg pop xchg (bad) adc je aam pushf cld popf mov mov hlt fadds adc test cwtl cmp iret sbb mov xor xor mov arpl push inc xchg and mulb dec mov cmpsb into stos lcall cmp stc stos test in addr16 lcall jg adc ja (bad) repnz fimul mov nop sti mov lret insb sahf outsl push push leave or movsl addr16 fnstenv mov mov sbb aas cli push ficompl daa xchg cmpb mov hlt pop jno fwait scas (bad) xorl xchg push fdivrl cmc mov out stos into int3 push test repnz cltd js je jo add mov jp sbb push test inc ja dec jo movsl in pusha dec cltd jle dec ret ljmp cmc (bad) mov test iret cld jle ficomp (bad) mov pop jno and in das sti in mov sub push mov les jo or jg ljmp add add sub (bad) jae arpl ds add push jle mov iret dec repz out or mov sub sub jbe xchg pop int3 pop mov idiv pop mov cmpsb loope (bad) rorb xor pop add xor test xchg ret mov push add add lret (bad) data16 inc jl cwtl int pop push ds lods in sub idivb mov dec jo adc jnp push test xlat mov mov mov loopne in inc cltd sub pop adc jle push xchg lea in sbb repnz outsb (bad) sub ja add add sub pop aaa sbb sbb fcomps dec jge inc dec sbb std mov outsb pushf push adc push or loope iret rcrb inc add xchg dec mov push mov fmull pop lods out push in cmc insl mov sbb push push mov add add push add pop xor mov cmp mov mov shll dec pop les fsubl movsl outsl push rorl popa fsubrl mov movsb dec jnp hlt add sti test mov pop jl insb xlat test das mov lods mov push leave fwait push incl in jnp add jecxz or ja mov pusha daa push repnz sub xor sti arpl lcall rorl or xor and mov mov mov nop sub (bad) icebp add inc lods mov das (bad) into sbb inc mov cmc sub fcoms popa insb mov iret and fcompl repnz out fisttpll cltd mov loopne dec ljmp data16 jl ja xor xor test jg movb adc dec mov je cmp jno sub add clc call add fistl mov outsb imul add out jae inc ret inc sbb jecxz inc adc sub cmp pop mov push lcall ss sbb mov fstpt (bad) fsubs out sub cmc arpl push cmp fsubl sub xor push mov jns mov jecxz pop call jb fisub aaa push pop stos pop lds inc popa andl jl pop mov loopne inc imul fldcw mov xor orl dec push sahf out push fistpl repz repz jg aas sbb je std (bad) adc adc add add push sbb push adc test xchg movups sub push cmp rorb pop inc mov (bad) cmpsl fildl fsts pop cltd fidivl sahf adc mov xor mov sbb movsb inc adc fdivrl adc xchg mov fiaddl add ja jle fisubrl in sbb lcall dec or sahf test test aam cltd mov out sbb mov into bound push scas pusha or (bad) mov xchg xchg ljmp lea std mov sbb gs sub fs fsubl int3 add cwtl xor shrb lock ret push sbb inc fisttpll (bad) outsb pop fidiv into int3 sarl clc mov jb or push pushf jns push mov in or jl je dec add add pop in fistl sub iret (bad) lret push xchg add or loope add add add xor sbb sbb aam inc mov add fstpl xchg xor ds adcb sbb lock jg insl adc hlt rcr mov mov iret dec add xlat inc mov jecxz sbb mov mov enter add mov lret dec xchg xlat or add ret sub sub nop xchg jae adc cwtl imul jecxz outsb ljmp mov or push add aad test in enter fbstp inc mov cmp scas mov mov add call pop push jmp jns call ds js cmp aaa pop mov xchg int ljmp imul cmp clc test jae dec xlat push (bad) in and sbb shrb out mov aad (bad) int sbb xor iret imulb xor pop call mov lret pop movsb outsl pushf adc insl sbb jo xchg rclb inc fs pop in movsl test aam not inc mov inc inc cmp push imul outsb push jb inc fldl in add pop sub rcll (bad) fs jno ja xor add dec movsb adc xor dec cmpsl cmpsb (bad) jne ffreep iret stos dec movsb loopne lods mov (bad) jnp xchg fsubl cmc lea or mov out rolb aam in fsubrl into xor xchg ds rcrb sbb leave cmc test ds push or mov pop addr16 (bad) inc in add or xor aam push icebp inc in sbb sub inc cmpsb test ljmp mov (bad) loopne (bad) dec xor in test mov movsl repnz mov gs cmp mov or shlb xchg ret inc lret rcrl or sub inc fisttpl outsl mov add sti out xlat jo sub lea (bad) mov sub pop icebp pusha mov popa jb stos movsb ss and dec sbb xchg or mov stc or xor lahf rcrl imull mov dec lock mov mov in test push (bad) dec sub xchg insb fnsave inc mov jae cmp in divb sbb pop mov mov fimul test cmpsl mov push das mov or mov cmp xchg xor adc cmpsl sbb (bad) adc fimul inc js add xchg popa mov bt call pushf dec mov pop es jge cmpsl ljmp cmpsl jp aad jb mov inc gs cld mov cmp repnz adc pop xchg lds fs inc test cmc inc mov cmpsb aas push shrb lds daa jg repnz adc (bad) fsubr add movsl testl add pop sbb cs mov sub fbstp pop or add mov xor les or push xor sub pop fidivr add and mov push gs stos jb sbb stos leave and and xchg jbe shll add jp loop je sbb pmullw out imul outsb loope mov out (bad) dec push int3 fs and es loop test sbb sub push adcl jl pop imull pop arpl lods mov fisttpll mov mov test stos push jbe add jne aam xchg ss mov sbb arpl mov xchg cwtl addr16 cmpsb dec push popf pushf daa lahf mov jbe xchg jle inc xchg ret arpl sub lock sub push pop stc out xchg mov es push je aad mov outsb out cmpsb cmc aad sti xchg mov or xor cmp push cmp stos pop in cmp lea jbe aam sarl insl int pop cmp or repnz test lahf fwait lahf cmp mov or mov mov mov rolb cmp idivb fcompl mov sub adc mov add add das dec jns jle adc andb xor cli fmuls (bad) jge dec xor pop out or mov aad cmc mov lret clc sub inc leave cmp pop adc dec pop fdivrl sbb push jmp imul cmc cmc pushf push ljmp add add pop push das mull and scas adc mov (bad) in xchg test sahf mov mov sub push inc imul push cs in je pop iret out fcmovu (bad) (bad) movsb jge into repnz sbb (bad) mov nop outsb pushf xlat mov test popf cmp cwtl repnz mov movsl and daa lea fcoml pop push pavgw dec jg out fcomi sub pushf mov pop add fdivr rorb mov pop outsl ret decb notb ljmp add inc aaa cmp mov or icebp sbb lods mov adc jg dec jns cmovl add (bad) mov or test rcll (bad) and (bad) mov lock pop push popa aad push test push and inc imul xor arpl in cmc sti (bad) int iret popf pop insl (bad) repz add dec inc mov loope xchg cs js pop mov mov into jmp aad stc outsl lret adc add add rolb fsubrl loop cwtl rcrl rclb push addr16 add popf mov sbb xchg insl mov mov jmp push dec mov jbe dec push decl insb lret (bad) dec repnz mov rorl jo jmp jmp sarl sbb add inc imul lret mov fs jno inc xor mov push cmpsl scas cmp in fucomp js scas lahf pushl jl lea dec fs icebp mov jns adc inc lods lods in mov xor bound inc dec jno add add adc into pop lock xor or or js inc push xor pop stc inc mov push adc push cltd inc fimull and ret inc sahf cltd mov pop ljmp mov jp test sub in inc sti loopne dec sub rcl sbb inc push in mov add (bad) cmp outsb jmp ret sahf push push popf ja jbe daa xchg popaw pusha xor out cwtl loop ret mov fiadd mov xchg arpl cmp or push inc mov fs (bad) pop arpl lods push mov xor (bad) jae sbb cld pop dec adc cmp add dec mov mov cmp ja adc ja arpl in inc (bad) frstor xchg xchg cli gs call repnz dec dec xchg mov jb popf jo jmp and lcall or cs cmp test (bad) ret dec sub adc add add mov xchg imul and xchg push aad test imul push mov arpl into sbb fcoml jge std push mov lods (bad) jb jle mov ljmp xchg fwait adc or and rolb pusha (bad) gs mov add or push push pop out (bad) popa fisubr loopne test sub les ljmp bound fnop movsb stos or inc imul jb movsb cmc addr16 mov popa sbb mov das jae adc (bad) mov outsl nop dec roll lods mov mov mov add add popf xchg lret jp cli ja or or clc std add aam sbb ja (bad) sbb and js clc pop insl pop cld (bad) or insb outsb xchg dec pop (bad) mov cmpsl sbb bound adc mov int3 or int lock aam xor push loope lahf cmp adc mov adc inc out stc movsb call test inc cmp ljmp data16 mov sbb dec jp gs sbb insb popf (bad) rcrb cmp mov imul stos popa mov mov (bad) fnstenv cmp mov push cmp mov loopne add daa or add repz out inc inc inc and sahf adc cld push sbbl xor int3 dec cmp sbb pop and (bad) fs xchg pop pop das rorl lcall or scas cmpsl push arpl push sub test mov add xor lds dec cmpsl pop add fwait inc xor lcall mov jl inc lret in imul in outsb mov rcrb mov imul mov cli lcall jae das jbe in ja sub aaa push outsb adc mov rcr sbb pop lcall ja add out clc shrb add add stos pop mov arpl fisubrl push lret jle aad les mov cli outsb aad push outsl (bad) lock xorl adc push add jne in xchg cltd mov clc xchg sub lcall cmp fldl pop es add add cmp (bad) jp cltd dec dec in das cmp movsl repz inc push gs rolb mov sbb pop loopne mov jb ljmp jb movsl adc jge xchg movsb test push ret sbb sub dec mov add shll mov jp jb scas or push in jg scas rolb dec jecxz jl loop sub aad mov cmc aaa lock enter out lret cmc or inc or repz dec mov fisttpll dec loop cld mov dec sbb cmpl fiaddl jge loop lret mov xchg add add inc (bad) or mov mov sub ficoml jp sub push insl lret jl cmp or stos hlt sbb mov mov xchg (bad) dec movsl adc cmp pop cmp cmp popa rorl xchg push mov leave stos dec xchg fs mov jno mov (bad) enter jno cmpsl pop xor lds add (bad) push mov jae or push mov hlt mov aas mov nop test sbb mov sub xor adcl je pop jo movsb add add test inc in xchg adc (bad) adc mov aas jge aas lahf fist push lret mov cmp lods jns add rorl movsb fistpll movsb imul nopl repnz shl dec dec in jecxz mov sbb dec (bad) fsubl es pop push mov stc lret mov push jle push adc mov outsl clc loopne sub pop loope add or mov sbb movsb add add cmp push cmpl out mov add addr16 jp movsl ficoml mov inc dec es jnp gs xor iret ret or pop push inc push cmc cwtl pop sub jg jne popl adc add mov jo iret cmp mov cmc frstor jge add add add sbb test push push push inc (bad) xorl iret insb test adc loopne popa jle bound lea cmp jae nop sub and fadd pop mov call cmp inc pop add jo or pop sub adc sbb add in adc push dec xchg or push xchg push adc xchg in and outsb jb mov in xchg pop push jge sub aam jns adc xchg movsb pop in sarl inc ja inc sub and fisttpl push sbb pop out pop scas data16 (bad) out (bad) jb mov mov arpl fldcw les add or mov loop adc (bad) cli std fildl xadd sub test adc pop cmp jae xchg ror fnop xor lret sbb iret out jg sbb adc sar ror dec cmpsl imul xchg in (bad) je cmp push sub add add pop sti mov fistp mov xchg xchg loope sbb pop les das dec push push lret mov in fistp xor jg inc xlat lcall xor sub jg jne repnz pop orb dec lahf inc popa add fldcw xor lea subb add add cmpsl mov inc push jbe imulb jmp push aas pop (bad) sbb enter rcll std push mov movsb xchg movsl cltd fdivp addr16 es xchg out cmpsb out inc mull fsubrs imul aad adc test pop push cltd or jne scas mov test cwtl add mov sbb and out jne (bad) adc (bad) xor lods cmc dec cmpsl inc sub jle aad in jp popa int3 cmp inc mov lods ficomp cwtl and cltd in xlat imul mov cmp adc add adc sbb inc notb (bad) jl int3 xor inc push sub jnp jo cmp ja push push popf mov shlb jae and stc jb jnp sbb ds pop jl sti inc insl arpl inc push jbe hlt sbb jns sub clc sbb add add enter xlat mov mov jge adc js das inc or (bad) mov add jge push sahf imulb dec cmpsl dec mov sti sbb and in jecxz mov arpl inc dec pop (bad) mov les push pusha negl dec push (bad) dec jb xchg xor xchg mov mov jecxz les inc imul cmp xor (bad) out mov nop inc popa xchg gs sub inc addr16 int sbb popa mov xor xor pop icebp inc pop fisub mull ljmp mov inc cmp call pusha xor push insl (bad) fs mov pop pushf int in addl cmc pop (bad) mov ja sbb (bad) insl adc fist xor shll pop push mov mov shrl add idivb sti pop add rol sbb ret and add add stos ja inc jge mov jb cmovae mov mov fistpll (bad) cmp aad mov loope mov adc outsl jl jmp lods fdivr sbb fsubrs mov push leave xlat dec test or push nop mov fadds add add jp xor push rcrl inc cmp xchg add rcl arpl lcall test ret mov aam dec mov out in cmp fs cmp fcmovne out lcall sub mov sub cs xchg fiadd add sub add xor scas push and push dec into into jge daa loope push sbb (bad) pop jns movsl fdivl test or push jb inc or aad jg clc shl test push (bad) cmpsb fnsave and leave adc mov das sbb nop das pop iret mov xor mov popf cs inc jb xor push jno fsubl test lahf std mov and push sahf or mov jmp out (bad) fidivr and pop (bad) mov in std jecxz (bad) mov push cmp insl (bad) sub mov cmp (bad) pop sbb enter adc adc sub add movsl movsb mov cltd xlat add xchg lret sub out sub lods in (bad) dec jl in mov adc xchg mov mov in ja xchg or repz jnp dec mov stos jmp mov cld out add test inc and ss dec add pop or aam mov xchg push push or insl adc popa aam cs push lock add into xchg cmpl sbb pop adc ja roll jb pop xor orl mov lcall movsb xchg pop sub dec imul add xor mov sub lcall fiadd sub sub setae test adc in sub js popf and out (bad) cmp cmp cmp xchg dec and jns imul mov rcrb add add test inc push xor clc fidiv cwtl fild jbe mov sub mov mov out bound out push pop repnz push cmp (bad) cwtl movsb mov movsl mull rolb sbb adc jo add int xchg push out mov xchg pop jp (bad) jmp int ret push xor loopne xchg cmp imul jmp mov fisttpl adc mov push pop and iret mov les hlt or sti push pop inc and test push pop or adc in mov add pusha push adc fidivrl icebp movsb shl ja shll (bad) pop and repnz sub mov mov mov ret aad or mov je out incl pusha fs dec inc xchg mov cmp je pop push jbe pop push push cmpsl or test cld int3 pop add and xchg mov add or xchg loopne cmc not dec popf adc mov jmp jmp cmp jo xchg adc test shrl in jns (bad) js or shrl rcrl js lcall icebp lds inc pop in aas xor add add je lea fldenv icebp repnz (bad) lock sbb sub jns js das inc dec leave mov ss hlt cmp fnstsw shr inc pop add aam cmp or stos sbb adc xchg xor sahf fcoml ja add add nop pop sub lods movb xchg repz lahf add xor pop gs int or into insb fnstenv mov clc les pop adc xor jge mov pop aad cmpsb (bad) ret sub jmp push ret fwait stos or mov inc mov add push or fildll and pop out push hlt sahf adc xor push pop outsb (bad) iret mov cltd test cwtl call pushf cwtl xor fisttp div cs dec pop lea pop sub punpcklwd mov cmc (bad) hlt push (bad) out inc cmpsl ss addr16 clc jp orl mov mov sub add enter test fmul cld fcoms and lock dec divl dec scas or xchg cld fistl out cmc jne aad mov int pushf fwait push pop jne dec xor sbb xchg or sub jo sbb shrl mov lret test rolb pop lret (bad) imul pop pop outsl pop push js cltd cmp aaa mov rclb dec mov das jl in fdivr push and fs test fistpl xchg fnsave incb xchg mov loop (bad) jbe cmp xor xchg enter jbe inc pop int fwait iret sahf in mov ret inc adc stos dec mov nop inc outsb mov clc dec mov mov inc in les das in mov fsubs jmp xchg orl pop sub insb dec adc sbb add push sbb cmp test xor fiadd arpl iret bndstx or or inc aas pop add lret data16 inc mov mov sbb cmp cld jmp lds flds mov fisttpll shl add add scas sub adc cld sub mov rcll jge xor arpl jg mov sub push int3 push cmp std mov insl (bad) out je popf fbstp dec cmp and in (bad) jmp rolb push inc pop popa dec xchg add mov xchg jp adc mov add add jns mov (bad) dec les je in dec fdivrs jl xchg cmp int xor adc jbe fcoml xor mov or mov test push xchg mov aad outsb data16 pop fistl mov lret mov jge rorb test xor xor repnz add pop sub fs cmpsl cltd lods rclb push mov stc sbb push daa ds dec mov les loop outsb add icebp jnp pop dec push mov scas cli pop lock mov push fild and das mov icebp sbb repz dec gs add cmc push rcll dec xchg notl jbe jnp inc in add mov lods ds jle hlt xor cmp xor mov fs ljmp inc sbb test int3 add xchg mov fisubr mov cmp addl mov cmpsl shll cmp test cmp add add loope adc adc andl pop cmp mov or js or lock mov icebp mov inc inc sub mov pop xor (bad) negb (bad) mov or push jmp mov add add int3 paddusw mov cmpsl cmpsl cmp mov mov pop xor pop pop push pop push xor mov adc mov in lea inc in into jp xor mov pop or gs mov popa loopne pop pop jl lds addr16 (bad) lock in jb daa daa nop scas push loope dec and fimull sbb add aad loopnew and mov loope sub pop adc (bad) popf dec in outsl xor adc lods push add ret sbb loopne rorb int3 push pop je inc xchg mov mov inc arpl test in mov inc bound cmc dec add bt sbb xchg xor cmp loopne lock out add and cmc pushf push cmp (bad) call mov loope push jo jg cmp or pop add or ror cli xor cmc add dec pop bound mov cmp pop pop jo add add sbb cmp loope cmp push scas add cmc dec mov dec (bad) fcmovnbe mov pop daa mov orb mov in stc clc maskmovq divl repz pop lea mov arpl sbb imulb (bad) jle or and out fsubs leave push roll fdivl add add mov xchg nop daa add sbb iret and push repz js or mov add out push testl xchg stos in out out push lret sbb popf mov enter stos pop fdivs push dec ja imul xor lods lods sub add add cltd fsubrs push jmp xchg (bad) icebp data16 repnz push cmp ja popa sti pop mov shl push mov jl add je repnz pusha inc xchg push push pop mov cmpsl sub mov mov pushf ret cmpsb jne out pop (bad) mov sub lods xchg sub out insl xchg mov add add mov scas mov jnp lret add outsb inc cmc cwtl test push pop mov cli push inc mov pop mov daa leave sbb and arpl frstpm(287 fsubr mov push or call lahf mov push daa outsb cld and sbb inc inc test aas (bad) lahf cmp (bad) andb add adc xchg cs jecxz jb clc decb xchg scas jae mov data16 sbb ret inc shlb pusha in add and arpl dec aaa inc mov scas cmp inc mov in cltd add ljmp adc ret and mov (bad) movsl scas jecxz add mov add xor and jl mov dec mov mov jmp and inc sbb jp out js dec push das sub pop add push adcl mov int3 ds jl inc or push call (bad) fsubp loope roll mov lret mull push lods mov lahf jo pop push das (bad) cmp loop aaa shrb mov cmc outsl outsb and loop adc xchg sbb dec aas or jb inc aas insl ficompl jg stos dec dec in jmp jb add mov pop mov or movsb rclb and icebp pop push es lods add add or push jbe mov lret jecxz and mov xchg paddusb cmpsb add ljmp mov inc xchg sahf jecxz lahf pop pushf lods inc push mov sbb daa sbb dec flds stos mov jecxz pop or mov add add add pop xor xchg push (bad) mov popf pop mov outsl adc sub mov add test movl add xchg lock popf mov sbb je lcall adc jge out into xor cmpsb lds push (bad) jnp shr mov mov int3 pop std cmp jns out mov add jp cmp fisubr adc out jo std jb inc jb dec aas popa ss fnstcw xchg popf mov adcl dec add sub jl mov stc imul decl xchg lds and jae rcrb xor add inc jl loope insl sub fdivs cli out imul movsb push inc enter imulb mov mov xor mov leave clc pop aam push jnp and cmc lea sub fcompl bound imul in daa xchg adc nop add add jecxz mov or mov mov movsl push call lea push inc and lcall push lcall js dec push cmpsb and (bad) add pop jb add (bad) icebp in add mov cltd xchg ret adc adc add push jne jae add add inc and lret das pop sarb cs aad negl mov dec hlt mov cmp insl push jnp test pop sub inc int3 and add inc mov iret test jo popf jecxz sarl fcoms mov mov cli stc jo nop aaa inc xchg inc jo les cmp add add mov inc pushl push ljmp jnp pop pop jbe aad (bad) or pop jge pusha xor cmp sub push push inc rep cmp lret dec rdmsr mov xor lret jl shr out xchg rcr pop sbb jnp and sub ja (bad) leave mov cmp cld enter (bad) or cmp pop stos mov jnp gs out lds popa inc push inc arpl dec jne cli push ret inc sub pop xor mov inc push inc data16 mov mov pcmpeqb push out imul push dec mov or jmp inc icebp dec mov pop dec stos xchg fldz lret sub clc mov add test adc bound std int3 into sbb and fisttp fidiv jns repz lahf mov dec push test sub punpckldq pusha cmp lods addr16 out sbb sarl push cmc or jle std mov cmc or add sbb test out add add and fs push push mov daa pop popf popf mov jb mov ret loopne cmovae test (bad) iret jl fwait loopne out dec inc xlat aaa jne push pop mov push xchg pop mov test std inc stos loopne mov xchg mov in stos and sub and push add add addb or insb scas adc div mov xor fmuls xchg repz jnp mov icebp mov mov cmpsl in cmp negb (bad) leave loope xor mov ds or enter popf adc mov push dec ds adc ss add mov insl into jb mov test cltd xchg lds movsb test hlt out jg inc call ja cmp xor dec xor stos push out cmp lret test jge (bad) xchg into cwtl (bad) cmp mov push in mov mov dec and loop add add cmp xchg mov or out outsb cmp ljmp int3 setge jl cmpl mov cmc mov mov adc sub inc cmp in gs xchg icebp mov jns and (bad) mov xchg push leave pop or (bad) in (bad) outsb add add add test lds sub dec stos mov mov jmp insb sbb in imul inc xor ljmp mov fs dec adc pushf jbe cmp cmp popa orb push xor jne sub lret jle push dec leave aaa dec imul add add xchg int3 add or (bad) push or in dec shrl push inc (bad) gs sbb xchg pminsw arpl push gs push idivb bound lret cli fwait test (bad) mov dec sbbb or clc push pushf mov push repz aam sbb mov out fwait inc loope add xchg inc and and dec out dec mov xchg inc mov adcl xacquire movsl dec sti and arpl aad mov cmpsb adc push xchg int sbb add and jmp mov lds lahf and xor jno sbb out jb sub cmp mov mov add add ds push stos ljmp stc lock loope ss cli jg mov jno outsb or sub loope imul loop sub mov adc ja xor inc stc aas push iret mov das or popf imul jge jl pop rorb daa ljmp bound mov inc inc clc cmpsb add movsb repnz pop insl das jle mov push xchg jns test movsb sbb or or add in sbb adc lahf aad and jecxz mov or (bad) cmp add push xor int and add sub aad xchg rcll out fistpll xchg dec inc adc lds addb add add cmp adc stc xchg or ss jp sti imul ret adc xlat mov mov divb push push imul xor sbb sar and (bad) jecxz jge dec ror scas jnp mov lret cmp cmp clc and add add gs mov stos pop lret shrb mov jmp leave mov mov pop and mov xor xor test (bad) xor inc push lahf pop mov inc loope sbbl dec cmp jo xlat push repz stc ficom cmp mov and add lret push aaa aas int3 test int3 (bad) jno sbbb and mov jb movsl into sti les je xor xor inc xchg jmp or dec in aad fnstenv orl mov mov in mov xchg lock xor mov ficomp dec xor add add or (bad) insb or js cmp lods dec leave jo lret fisub lret daa (bad) sub cmp inc (bad) mov int3 lahf lock xor and insl ja cwtl mov cmc mov push inc repz xchg cmp sub and call push mov mov and mov out es dec xor dec adc xor jecxz or popa mov out or (bad) cmp cmp (bad) js cmp inc and lret ss (bad) fs xchg sbb sbb hlt sbb mov add add adc test mov sub rorl unpckhps test xlat std roll data16 mov mov inc lock and les mov cmpsb cmpsl jne and push pop stc stc push nop sarl scas nop inc lods and add lods insb mov int iret mov pushl and cmpl mov jbe loopne ret mov adc les int pop in inc fnstenv repz (bad) jmp inc dec in in (bad) mov xor cli xor cmp add in pop xchg (bad) aad fsubs adc lds movsb lds push insl out ret adc jle inc adc mov dec pusha popa fidiv jp mov pop (bad) rcr push (bad) enter (bad) jbe pop jp jle js jl pop or jmp sarb push push add scas cmpsl insl out bound push fmull add add mov jae jge jle scas out or dec dec inc icebp push loope fsts (bad) cmc scas fwait and lret jno cmp leave pop sbb int3 andl ds sbb mov sarb cmpsb cmp (bad) cmp mov xchg (bad) sar sti add sbb xchg xchg mov xchg mov fild aas dec out dec push cmp bound cwtl xor arpl adc jno jae mov test bnd mov or ss iret out cmpsb gs lds das sub push call dec add leave jns xchg std mov vpunpckhdq pushl aaa cwtl not movsl push dec addr16 and push pop push push sub xchg sbb pop iret adc push mov adc or insl clc dec aam repz loope inc add popa aas fcmovne xchg push cmp stc ds push dec xchg jno sbb add adc dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov les xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop add xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov add add leave mov cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out add add xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub push lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and add xor mov iret fchs out hlt sti add unpckhps sub ss pop gs jb jg lea mov rcr (bad) in repz add or sub ss pop imul test lods mov rol aam loope out cmc sti add unpckhps add inc dec push push pop arpl ja test lods mov mov loopne in hlt sti add push adc ss pop imul xchg mov rol aad loop out cmc cld add movhps ds dec push pop pop gs jb jg lea mov ret add fsub jmp or pop push and xor aas inc dec push pop pusha insw jae addb scas mov ret (bad) fsub jmp or sbb and inc dec push pop pusha outsb je orl ret leave rcl fucom ljmp sbb and inc dec push pop arpl add ja test stos mov mov loopne in repz add push adc xor push pop arpl ja test lods mov rol aam loope out cmc sti add unpckhps sub ss pop imul test mov rol aam loop out cmc add add adc sbb ds dec push pop pop imul xchg mov ror aad loop out cmc cld add adc sbb ds dec push pop pop gs jae addb scas mov ror aad loop out idiv add adc sbb ds dec push pop pop insw je addl add add mov mov (bad) in repnz incl or sub dec push add push ja test stos mov rol rcr loope out hlt sti add unpckhps sub ss pop fs js test lods mov shr repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp add add dec push push pop pusha imul addb movsl stos mov mov xlat fucom out repnz add or daa sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or adc sbb cmp push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push pop pop bound push (bad) mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fsub out repz incb or adc push and xor cmp pop pop arpl jae add mov test mov mov fcomp jecxz in repz std add or sub dec dec push push pop add outsb jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov add add add mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jge mov mov mov fcomp jecxz out repz incb or sub xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc cli add and aas inc dec push push pop pop gs jne jg mov stos mov add add mov rol rcl fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol iret aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov add rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or pop sbb aaa cmp inc dec push push pop bound jb jl orl test mov mov fadds fucom call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add add or push sbb sub cmp dec push push pop pusha imul (bad) xchg lods mov mov rcr fucom call add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz std add or add add add sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa add add aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and sub aaa add add dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec add push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha add add jo jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul add jbe addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb add add movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov add add mov rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha gs jne jg mov stos scas mov rol rcl fnop in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov add (bad) leave into rcr (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp in out repz incb or unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov add aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz add add in repnz std add push adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add add or sub inc dec push push add push orl test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop in out cmc cli incl and inc inc dec push push pop pusha imul addb add stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov add movsl stos scas mov mov fnop in lock cli add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add and cmp dec push push pop popa imul addl add rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol add rcl fndisi(8087 out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fildl add loope jmp idiv add or pop sbb es ss inc dec push push pop popa insb jno jl (bad) xchg cmpsl lods mov mov xlat fucom out repnz add or sbb cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out add add idiv add or pop sbb cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter (bad) in out hlt stc incl unpcklps add pop and cs aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and add das xor ds dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas add inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop add inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push add push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha data16 add jbe addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul add jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg add add add add lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fild add jmp add push adc sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add add add adc sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 ja (bad) xchg lods mov mov xlat fsub out icebp idiv add or push add sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub add cmp pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl unpckhps pop and aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or sub dec dec push pop add push orl test mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl pop and inc inc dec dec push pop pusha gs add jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc sbb and inc inc dec push push pop pusha imul addb mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb aaa cmp pop pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb add movsl stos mov mov aad loopne jmp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall add mov fnop in lock sti add and sub cmp dec push push pop popa data16 jno js (bad) mov test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov add fneni(8087 out lock add or push sbb sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz incb or adc push and xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in add cmc cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop imul mov mov mov aad loopne jmp idiv add add or push sbb sub cmp dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl je jg mov stos scas mov mov fnop in lock sti add add add sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and add add inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc dec dec push pop pop arpl je jle mov stos scas mov mov fnop in lock cli add and inc inc dec add pop pusha imul addl mov ret rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha add add imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb push adc push and cs aas inc dec dec push pop pop imul test mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz out repz incb unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov add add mov rol rcl fneni(8087 in lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall add add aad (bad) ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out in repz incb or adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov add rcl fnop in lock sti add and sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu add add ljmp adc xor push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp incl unpckhps pop and inc inc add push pop popa imul (bad) xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jg mov stos scas mov mov fcmovu in out cmc cli incl add adc xor push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or pop sbb daa sub dec dec push pop pop bound jb jge mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov add (bad) lret fcmovu in out hlt cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or pop sbb aaa cmp pop pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop add add push jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop fs jne add add test movsl stos scas mov rol rcl fneni(8087 in lock add pop or sub dec dec push pop pop bound jae jge mov test mov mov (bad) jecxz out repz incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb add stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop fs jne jg mov add add vaddsubps fneni(8087 in lock sti add or push sbb es ss inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop add jo jp test movsl stos mov mov add rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop fs je jg mov stos scas mov mov add (bad) ljmp adc xor push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub inc dec push pop pop bound jae jle mov test ret leave into aam fsubp jmp add add stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl add unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jae jge mov test (bad) leave iret aam (bad) ljmp unpckhps pop add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or pop sbb cmp pop pop arpl jae jge mov test (bad) lret fcmovu in out cmc cli incl add sub add add cmp inc dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov aad loope jmp idiv add or push sbb es aaa cmp inc dec push add add bound jb jge xchg test mov mov fcomp jecxz out repz incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound add jb jl xchg test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop gs jne add fwait mov mov xlat fsub out icebp idiv add or sbb cmp pop pop arpl jae jle add add movsb test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall add add (bad) aad add out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jge mov test mov mov (bad) jecxz out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov add add fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out add icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor add dec push push pop pusha imul addl mov ret rcl fucom out repnz std add add or sub dec dec push pop pop arpl jae jle mov stos scas mov mov fcmovu in lock sti add and sub cmp dec push push pop popa imul addl mov ret rcr fucom call add or and xor ds dec dec push pop pop imul mov mov mov fneni(8087 in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz std add push adc push and xor add ds dec dec push pop pop imul (bad) xchg lcall mov (bad) fsub out repnz add or pop sbb cmp pop pop bound jae addb cmpsb stos mov mov jmp movhps and dec push pop bound jns mov add mov rol rcl fucom call or sbb es pop pusha outsb jne test fucompp out hlt stc incb unpcklps and inc inc push pop popa imul addb movsl stos mov mov aad loopne jmp cmc sti add add and aas inc dec dec push pop pop gs je mov stos mov mov aad loopne ljmp or adc xor push push pop pop gs jne jg xchg xchg popf mov mov xlat fsub out repnz add or daa sub aaa cmp inc inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add or push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne jmp cmc sti add or adc xor push push add add fs je jg mov test (bad) leave into rcr fsubp call add push adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and aas inc dec dec add pop fs je jg mov mov mov (bad) fndisi(8087 out icebp idiv add or adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec push pop pop gs jne add jg mov stos scas mov mov fneni(8087 in lock sti add and inc inc dec push push pop pusha imul xor cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor add add add dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec add imul mov lods mov mov xlat fucom out repnz incb or sub inc add pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push add pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov loope in icebp idiv add or push sbb sub cmp dec push push pop pusha gs add jne jg mov movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz std add or daa sub aaa cmp push pop bound jno jl addl mov rol rcl fneni(8087 in lock cli incl pop and das xor push push pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb add add scas mov mov (bad) in out hlt stc incb push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom add out repz incb or adc sbb cmp pop pop bound jb jge mov mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test add mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop insw jae jge mov test mov mov add rcl fsub out icebp idiv add or push sbb and cmp dec push push pop pusha imul addb movsl stos scas mov (bad) fneni(8087 out lock sti add and inc dec push pop pop arpl jb jge xchg lods mov mov fucom call add repnz add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul mov test mov mov xlat fucom out icebp idiv add add add or push sbb xor dec pop popa insb jno jl xchg stos mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb test rol iret aam (bad) jmp add unpcklps push and add add add add xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb push adc push and xor add pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp add dec push push pop pop gs je jg mov test ret enter fucom call incb or sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec add push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop add add insb jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc add aaa cmp inc dec push push pop pusha data16 add add jbe addb movsl stos scas mov mov (bad) in out repz incb or sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae add add orl test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jb jl add xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul test movsb test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg add nop xchg fwait mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul (bad) xchg cltd add mov rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl add scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop popa insb jno jl xchg lods mov add add rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov add add lret rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out add idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz std add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr (bad) jmp add add unpcklps pop and das xor aas add push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or add sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa add add aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg test mov mov xlat fucom out repnz add or sub add add pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec add imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec push push pop pop add add push jne addb movsl stos mov mov aad (bad) add lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add xchg xchg popf mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl mov test mov mov fcomp loop in repnz std add or daa sub inc dec dec push pop pop arpl jae jle mov add add (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos mov add aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov add add (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp add call add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu add jmp cmc sti add add adc sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub cmp pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor cmp inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc add add push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno ja (bad) xchg mov scas mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov add add mov rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov flds (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop fs sti add or push sbb sub cmp add dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop add add add popa data16 jb jl xchg lods mov mov rcr fucom call add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc sbb cmp pop pop arpl jae jge mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle add add movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg add add add add mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos add add lret rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fnop in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov add (bad) lret fnop in lock cli add pop and aas inc dec dec push add imul addb cmpsb stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl add (bad) lret rcl fsub out icebp testb add add add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add add sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz adc sbb cmp pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub add cmp pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec add pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add and sub xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul jbe addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb add movsl stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg add popf mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jae jle mov test add mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop arpl je jle mov test les add leave into rcr fsubp jmp add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor cmp dec push push pop pusha imul addb movsl stos mov mov aad add loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add and sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out add add idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub aaa cmp add push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub cmp push pop pusha outsl jne jg mov stos mov mov aad (bad) ljmp unpckhps pop and add add xor aas inc dec add pop bound jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor add add inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov movsb stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop add add je jle mov test (bad) leave iret aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae add orl test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam (bad) ljmp or adc xor push push pop pusha imul addb movsl stos mov mov aad loope jmp idiv add or push sbb sub cmp dec push push pop popa imul addl add add add add mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov add mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb es ss inc inc dec push push pop bound jb jl xchg lods mov mov add add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat add loop in repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub dec dec push pop pop arpl jae jge mov movsb test ret leave into rcr fsubp jmp add push adc sbb cmp pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or add sbb daa sub aaa cmp inc dec push push pop popa insl jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp add jmp add push adc push and add xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and xor add add inc dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and das xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das add push push pop pusha gs jne addb movsl stos scas mov rol rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha add outsl jne jg mov stos scas mov mov fnop in lock cli incl pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add add test movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add add movsl stos scas mov mov fcmovu in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli add and inc inc dec push push pop pusha gs jne addb add mov mov aad (bad) ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov add rcl fneni(8087 out lock add and sub cmp dec push push pop pusha imul addb movsl stos mov mov add fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov add add int xlat fucom out repnz add or daa sub cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fadds fucom call add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out add stc incb push adc push and sub xor dec push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add add and inc inc dec push push pop pusha gs jbe addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push add add and sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno add xchg test mov mov fcomp loop in repnz std add or sub add sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or sub dec dec push pop pop arpl jb jge mov test mov mov fcomp jecxz in repz std add or sub inc dec dec push pop pop arpl jb jge mov test mov mov fcomp jecxz in repz incb or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl add add jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae add jge mov test mov mov fcomp loop in repnz std add push adc sbb cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or and cs ds dec dec push pop pop arpl jae jle mov add mov scas mov mov fcomp jecxz in repnz std add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jb jge mov add add mov xlat fucom out repnz add or pop sbb sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov rol rcl fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa add js (bad) mov cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov add add int3 rcl fsub out repnz add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad add (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov rcr fsubp add add jmp add push adc push and sub dec dec push pop pop bound jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp testb sti add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge xchg test mov mov fcomp loop in repnz add or adc push and xor cmp pop pop arpl jb jge mov test mov mov fcomp loop in repnz add or add sbb aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb add xor cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp inc dec add pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fnop in lock cli incl pop and aas inc dec dec add push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl add push orl test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jno add ja addl mov rol rcl fneni(8087 out lock add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg add pushf mov mov (bad) fsub add in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl add add (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov add add fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor cmp inc dec push push pop popa insl jb jge xchg lods mov mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jbe addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat add loop in repnz add or pop sbb es cmp dec push push pop pusha imul addl mov rol rcl fnop in out cmc cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno ja (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add add daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov rcl fsub out repnz add or pop add add daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and add xor dec push pop pop gs je jg mov test (bad) leave into aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and sub add inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add add sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec add pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop add je jg mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or sub inc dec push add arpl add add jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jl add add mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov add add mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov stos scas mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov add ret leave into rcr fsubp call add or sub dec dec push pop pop bound jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jb jl xchg lods mov add add add fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec dec push pop pop fs je jg mov stos scas mov mov add add iret aam (bad) jmp add pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test ret enter add add jecxz in repz std add or sub dec dec push push pop bound jb jge xchg test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub add inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add push or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp add push add push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jge xchg lods mov mov xlat fsub out repnz add or pop sbb add add sub aaa cmp inc dec push push pop popa data16 jno jl add mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add or adc xor add push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub add add push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or sbb aaa cmp push pop bound jb jl xchg lods mov mov rcr fucom call add or sub dec dec push add bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha data16 add imul addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je add add jg mov test (bad) leave iret aam fsubp jmp add push adc add and aas inc dec dec push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jae jle mov add add mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl outsl je jg mov stos scas add aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop imul mov mov mov sbb daa cs bound jb jge mov mov mov fneni(8087 in lock sti add or push sbb add sub xor push push pop pusha gs jne addb movsl stos mov mov aam (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub add add cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push add push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec dec push pop pop add fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb add jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add and aas inc dec push push pop pop gs add outsl jne jg mov test ret leave into rcr fsubp call add or sub inc dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop fs je add mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov add test add rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul (bad) xchg add mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov add test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out add cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test add int fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add add fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fcomp loop in repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds add push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov mov (bad) fsub out icebp idiv add or adc sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das add add add add aas inc dec dec push pop pop imul mov mov mov add (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp add dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec add add add imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and sub aaa cmp inc dec push push pop add add insl jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul je jle mov test ret enter fsubp call add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg add add lahf movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl imul mov mov mov fcomp jecxz out repz incb or sub dec dec push push pop bound jb jl xchg add lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov add add add add mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov add add (bad) int xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test ret leave into add rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz incb or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fildl add loope jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add push adc push and sub dec dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add add unpckhps pop and add dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc and xor cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or pop sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add or sub dec dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge orl test mov mov xlat fsub out icebp idiv add or push sbb and add sub xor push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb add add cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor add inc dec dec push pop pusha gs jne jg mov test mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec add dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec push push add imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop popa insb jno jl xchg lods mov mov aad loopne ljmp or adc das xor dec push pop pop add add jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jo jp test movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop bound jno add jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and add aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg add test mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec push push pop pusha imul addb movsb test (bad) leave iret aam fsubp jmp add push adc sbb cmp push pop bound jno jl xchg add xchg xchg fwait mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul jbe addl add mov mov fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov add test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov add rcl fndisi(8087 out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out hlt stc incb or adc sbb cmp push pop bound jno jl xchg cmpsb stos mov mov add rol rcl fcmovu in out cmc cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter add add rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg lods mov mov aad add fneni(8087 in in icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad fild add ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out add add idiv add or push sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp testb add add add sti add or adc xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp or adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov scas mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop popa add jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop pusha data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov movsb test ret enter fucom call add or daa sub add add cmp inc dec push push pop popa imul addl mov mov fcmovu in out hlt stc incl push adc push and xor cmp pop pop bound jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas add inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or sub inc dec add pop popa insb jno jl xchg cmpsb stos mov mov aad add out icebp idiv add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp push pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or and xor inc inc dec push push pop pusha imul add xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or adc xor push push pop pusha imul addb add stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb add cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jb jge xchg lods mov add rcl fsub out repnz add or sbb aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov add add rcr fucom call add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test ret add iret aam add in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov rol iret aad loopne ljmp adc xor push push pop popa imul addl mov rol rcl fsub out icebp add idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl add add adc pop and das xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov aad loopne jmp cmc sti add add es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or add add sub dec dec push pop pop arpl jb jge mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli add and cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec add add push pop pop arpl jae jns test movsb test (bad) aad (bad) ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound add jb jl xchg lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs je add jg mov stos scas mov mov fcmovu in lock sti add and sub cmp dec push push pop popa imul addl mov rol add xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov add scas mov mov (bad) jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test add add leave into rcr fsubp jmp add push adc push and sub xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg test mov mov add add fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps sub xor dec push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp testl add add add or pop sbb daa sub aaa cmp inc dec push push pop bound jae jge mov test mov mov (bad) jecxz out add cli incl pop and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or add add pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jae jge mov test mov mov (bad) jecxz out repz incb or adc push and add add xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov mov mov (bad) fsub out lock add and aas add add push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp add dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push add gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg lea lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa add add jo jnp xchg movsl stos mov mov aam (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno add addl mov rol rcl fnop in out cmc cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub inc dec push push pop popa data16 jno jl add mov mov rcl fndisi(8087 out lock add and sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg add lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or adc sbb cmp push pop bound jb jl xchg add stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov add iret aad (bad) ljmp push adc push and xor ds dec dec add fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov add aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl je jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addl mov rol iret aad fild add in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp add add adc pop and das xor aas inc dec dec push pop pop arpl jae jle mov test ret enter (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock add add and aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and add sub xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps sbb and add add dec push pop pop imul mov mov mov fcomp jecxz out repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne jmp cmc sti add pop and aas add inc dec dec push pop pop imul mov scas mov mov fcomp loop in repz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push add insb jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop add pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl jae jge add (bad) mov mov mov fcomp jecxz in repz std add or daa sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb nop xchg fwait mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jae jge mov add mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out in icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb stos add lret rcl fneni(8087 in lock sti add and inc inc dec dec push pop pop gs jne addb movsb stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl je jle mov test add enter fsubp call add or sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add aad (bad) ljmp unpcklps pop and das add push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fiadd add call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb stos mov mov xlat fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov test (bad) leave iret aam (bad) jmp add add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc sbb and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add push adc sbb add add sub dec dec push push pop bound jb jl xchg lods mov mov rcl fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das add add ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add add adc das xor dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or sub inc dec push push pop bound add add add insb jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and inc inc dec push push pop pop gs jne jp test movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push add fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jb jge add mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pusha gs jne jg mov add add mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jb jl xchg add add ret rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov stos mov add aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne add icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov add fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out add icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fnop in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz add add or sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add add adc das xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or add sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc xor dec push pop pop fs je jnp test movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and add das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add adc push and xor add inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs aas inc dec dec push pop add add imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl outsb jae jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp or adc das xor aas inc dec dec push pop pop fs je add jns test mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa insb jb jl xchg stos mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov add mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc add push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov add add (bad) leave into rcr fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul add test add mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) lret add iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into aam add jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov rcl fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in add add out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add add incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add add add push add pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or add sbb and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push add and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor cmp dec push add popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and add add xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs add add inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push add imul mov lods mov mov fcomp loop in repnz add or pop sbb es ss inc dec push push pop pusha data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl add add jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jbe addb movsl stos scas mov mov add loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul jae jle mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul add orl test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov add scas mov mov fcomp jecxz in repnz std add or and sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov add add lahf movsb test (bad) cli add adc push and cs ds dec dec push pop pop arpl jae jle mov lods mov (bad) int aam loop out repz incb push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out add add idiv add adc pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add add add adc sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or add add add xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add add xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or xor cmp add push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb add mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul je jle mov test add lret fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl addl mov rol rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov add xchg cltd sahf movsb test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add add adc push and cs ds dec dec push pop pop arpl jae jle mov mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov add add rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov test les add add into aam fsubp jmp add push adc push and xor ds dec dec push add imul mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov add xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne add ljmp unpcklps and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov movsb test (bad) leave into aam fsubp jmp add stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc add add and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop add repz incb or adc push and xor cmp pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa add sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor add add inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub add cmp add add pop pop bound jb jge xchg test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop add pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound add add jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl (bad) xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp add add fwait mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop gs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl je test add mov mov (bad) in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl add stos scas mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov add add iret aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov add add add add leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov add aam fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr add fsubp call add push adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add repnz std add or daa sub aaa cmp inc dec add pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add clc std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add add adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb mov mov xlat fsub out repnz add or pop sbb and sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and das xor add aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec add add pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp add std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul add test movsb test (bad) lret fcmovu in lock cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp add push pop bound jb jge xchg add lea lods mov mov fcomp loop in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov add movsb stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov add add fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave add into rcr fsubp call add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu add in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp add cld add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov xlat fucom out repnz add add sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop add das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne ljmp adc xor dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub add add cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec add add pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha add jo jp test mov mov (bad) fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop out repz incb or adc push and xor ds dec dec push pop pop arpl jae add add orl test ret leave into rcr fsubp jmp add unpcklps pop and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret (bad) in out hlt cli incl pop and inc inc dec push push pop pusha gs jne addb nop xchg lcall rol rcl fnop in lock cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz std add push adc push and xor ds dec dec push pop pop imul mov add add (bad) leave into aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad (bad) ljmp adc xor push push pop pusha imul addb cmpsb stos mov add add (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov add add xlat fsub out repnz add or pop sbb daa sub aaa cmp inc add pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul xchg pushf mov mov aad loopne add lock cli add pop and das xor aas inc dec dec push pop pop arpl je jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out repz stc incb or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov movsb test ret enter fsubp call add add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg test mov mov xlat fsub out icebp idiv add or add add push sbb and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps add push and xor ds dec dec push pop pop arpl jb jge xchg test mov mov add fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb or adc push and add add sub dec dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov test (bad) leave iret aam (bad) ljmp push adc sbb and aas add add push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push add pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add imul addb movsl stos scas mov mov (bad) in out hlt cli incl unpcklps pop and cs ds dec dec push pop add imul mov mov mov fcomp jecxz in repz std add push adc sbb cmp pop pop bound add add jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul add sahf mov mov fcomp loop in repnz add or pop sbb aaa cmp push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and inc inc dec dec push pop pop fs je jg mov xchg cltd lahf add mov fcmovu in out hlt stc incl push adc push and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg add add mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsb stos add add leave into aam fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 add in icebp idiv add or push sbb and inc inc dec dec push pop pusha gs jne jg mov test add rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop fs jne jg mov test (bad) leave into aam (bad) in out repz incb or adc push and sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg stos mov mov (bad) fneni(8087 add add add in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl outsl je jle mov test (bad) leave into aam fsubp ljmp add add adc xor dec push pop pop gs je jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or add cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov add fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom call add or daa sub add push pop bound jb mov scas mov mov (bad) in out hlt stc incb unpcklps pop and das xor add dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop add insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul add add addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov add mov scas mov mov fcomp jecxz in repz std add or daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg add mov mov (bad) fildl loope in icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha imul addb movsl stos add mov mov aad loop in repnz add or pop sbb aaa cmp push pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov lret fcmovu in out cmc cli incl pop and aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub add cmp inc dec push push pop bound jb jge xchg test mov mov fadds add add fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz add add clc std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add adc xor push push pop pusha imul addb mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out repnz add or sub add add pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov rol rcl fnop in jmp idiv add or pop sbb daa sub aaa cmp inc dec add pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa data16 add jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul test movsb test (bad) lret fcmovu in out hlt cli incl pop and aas inc dec push push pop add insb jb jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov stos scas mov add fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov rcr fsubp call add push adc push and xor ds dec dec push pop pop imul mov mov mov fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz add add out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov rol rcl fneni(8087 in lock sti add push or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb and sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out hlt sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz std add push adc sbb xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add and sub cmp add dec push push pop popa imul jl xchg lods mov mov xlat fsub out repnz add or sub xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pusha imul jnp test cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg test mov mov fadds fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop popa data16 jno jl xchg add lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb add test (bad) leave into rcr fsubp jmp add push adc sbb cmp pop pop bound jb jge mov test mov mov fcomp jecxz out repz add adc sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov vaddsubps fnop in lock cli incl pop and das xor cmp dec push push pop pusha gs jne jg mov lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov add fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) lret (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz add in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov stos mov ret rcl fsub call std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add or add push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add push adc push add sub xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov add fsubp jmp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and sub add add cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pusha gs jo jp test movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl je jle mov test ret enter fsubp call add or sub inc dec push push pop bound jb jge (bad) xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul popl xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg add add add add rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov add add add fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz add add repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc sti add add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or add sbb aaa cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and xor push push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop data16 jbe addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs aas inc dec push pop popa data16 add add jnp xchg cmpsb stos mov mov aad (bad) ljmp movhps and inc inc dec dec push pop pop fs jne jg mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop bound jno jge add add mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add or sub dec dec push push pop bound jb jl xchg add add mov mov (bad) fsub out icebp idiv add or adc xor push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge mov add add ret rcl fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test add mov rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test les add add iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad add fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp testl add add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and add add xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec add add imul mov lods mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop add outsl je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs add jne addb movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addl add xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add add mov mov (bad) fneni(8087 out lock add or adc xor dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg add cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov add rcr fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec dec push pop pop gs je jg mov test les add iret aam (bad) jmp add push adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad add loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz add in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add add push or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl adc das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or add add sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add and add add add add inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor push push pop pop gs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec add pop pop arpl je jle mov test ret enter fsubp call add or sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs add je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl ja xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg add mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test add mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test add lret (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz call add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp add cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add add adc sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl and xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss add push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop add push orl test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop fs add je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg add add movsl stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addb add add mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test add add rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol add add rcl fnop in lock cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop add in repnz std add or sub dec dec push pop pop arpl jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc sti add and inc inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or add sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fsub ljmp unpcklps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and add add xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add and inc add add push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push add add popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop add add imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or sub inc dec push push pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add add xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb nop xchg fwait mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg add add rol rcl fndisi(8087 out lock add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov add add rcr fucom call add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov rol lret fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound jb jge mov cmpsl lods mov mov xlat add add loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam (bad) jmp add out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop out repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add pop or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add sldt adc pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add push adc sbb cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add sub ss inc dec push push pop popa imul addl xor aas inc dec push pop pop imul mov scas mov mov fucom in repz add adc pop daa cs bound jns mov lods mov mov xlat fsub out repnz idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add add add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp add out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or add adc sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or add daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpckhps and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub add add xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp unpcklps push and cs aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec add add pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop popa imul ja addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push add add fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl add jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae add jns orl test add into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul add add movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov add scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp or adc xor dec push pop pop fs je jg mov add lahf movsb stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test add scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test add add fcmovu in out hlt stc incb push adc push and xor cmp inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov add rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad add add loopne jmp cmc sti add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jno add mov cmpsl lods mov mov xlat fsub add out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp add cld add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add push or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov add vaddsubps fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or add pop sbb daa sub inc dec push push pop popa insb jno jl xchg cmpsb lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add or add sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb add pop and add xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor add add dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec add pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds add push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub inc dec push push add pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound add insl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae add mov mov scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul add add mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop imul mov add add mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov rcl fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb add mov fcmovu in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas add mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repz std add or sub inc dec push push pop bound jno jl xchg stos mov mov add add lret rcl fneni(8087 in lock add or add sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov add rcr fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov mov mov fcomp add call add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push add imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp add add add unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push add and sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb add add add xor cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fldl jecxz in repz std add or sub add cmp push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp add add push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor cmp add pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul add jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop add jne add mov test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb add add stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg mov mov aad (bad) ljmp adc das xor dec push pop pop imul mov scas mov mov (bad) in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call incl push adc push and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad add fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in add add lock cli add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or daa sub add cmp pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp add sti add or adc xor dec push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add add add or push sbb and inc inc dec push push pop pop gs jne addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or add sbb sub cmp dec push push pop pusha gs jne jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test ret enter fucom call add or add add daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub xor cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov add (bad) jecxz out repz incb or sub cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc sbb cmp add push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor cmp pop add add insl jb jge xchg lods mov mov xlat fsub out icebp idiv add pop or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop add add imul mov lods mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne jp test movsb stos scas mov mov (bad) in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub add push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne jg mov add cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps and aas inc dec dec push pop pop fs je jg mov nop xchg lcall mov fcmovu in out hlt stc incl unpcklps push and das xor aas inc dec dec push pop pop imul mov scas mov add rcr fucom call add or daa sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add add lret fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov add fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub add add in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp add add add add cld add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps sbb and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr fsubp jmp add add or adc sbb cmp push pop bound jb jl mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp sldt adc pop and cs ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb lods mov mov (bad) fneni(8087 out lock add and add add aas inc dec dec push pop add push jne addb movsb stos mov mov aam (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub add add aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor cmp add dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add rol rcl fndisi(8087 out lock add and inc inc dec add pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop add add imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov mov (bad) jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jg mov add add lret rcr loopne out cmc cld add adc push and cs ds dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor add push pop pop gs jne jg mov cmpsb stos mov mov add lret rcl fneni(8087 out lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad add loopne ljmp adc das xor dec push pop pop gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out add hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul add stos mov mov aad loopne out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc cli add adc xor push push pop pusha gs jne jg mov stos scas mov rol rcl fnop in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov add loope jmp idiv add or push sbb add add sub xor cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or sub inc dec push push pop bound jb jge xchg lods mov mov xlat fucom out repnz add or daa sub add aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc add add pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add sub inc dec push push pop bound jb add mov test mov mov fcomp jecxz in repnz std add push adc push and sub dec dec push add arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb cmp pop pop bound add js (bad) xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound add add add mov test les lret fcmovu in out hlt cli incl unpckhps pop and das xor inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pusha imul addb nop xchg lcall rol rcl fcmovu in out cmc cli incl pop and aas inc dec dec push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pusha gs jne addb add add rol rcl fnop in lock cli incl and aas inc dec dec push pop pop imul addb cmpsb stos mov mov rcl fsub out icebp idiv add or add sbb aaa cmp push pop bound jb jge xchg cmpsl lods add mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov add int fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test ret enter fsubp call add push adc push and xor cmp pop pop arpl jae jge mov test mov mov fadds add fsubp call add add adc push and cs ds dec dec push pop pop add outsl jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in add ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc add incl unpcklps pop and cs aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor ds dec dec push add gs jne addb movsl stos add lret rcl fneni(8087 out icebp idiv add add adc sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb add add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp adc xor xor push push pop pusha gs jne addb add rol rcl fneni(8087 out lock add add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push add push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in add clc incb or adc push and xor ds add push pop pop add add je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je add add test movsb stos scas mov mov fcmovu in out hlt stc incl push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jg mov (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs add inc dec dec push pop pop fs je jg mov cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl add mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov (bad) int fcomp add jmp add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into add aam (bad) jmp add push adc pop and das xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps push and das xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz add out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov add (bad) jmp add unpcklps pop and add xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out add cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add or adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps add add inc inc dec push push pop pusha imul jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add add xor cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and add add dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul ja addl mov roll int fcomp loop in repnz add or daa sub inc add push pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul add jbe addl mov mov xlat fucom out repnz add or and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jae jge add popf mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge mov cwtl popf mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb add unpcklps pop and das xor aas inc dec dec push pop add imul addb movsl stos mov mov aad loopne jmp idiv add or adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add and inc inc dec push push pop pusha imul addb movsl stos mov add aad (bad) ljmp adc xor push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec add pusha gs jne jg mov add (bad) lret rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) add fneni(8087 out lock add or adc xor cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp cli add pop and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov movsl stos mov mov aad loopne ljmp add add add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpckhps pop and aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add add add xor cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out add stc incb or adc push and xor ds add push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add and add add inc inc dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec add add add add pop arpl jae jle mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov rol rcl fneni(8087 out lock add or push sbb sub cmp inc dec push push pop bound add jb jge xchg mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov add add mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa imul addl mov mov fcomp loop in add stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov add add rol rcl fnop in out cmc cli add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb daa sub inc dec push push pop bound jb jge mov test mov add fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor inc inc dec push push pop pusha imul addb movsl stos mov mov add add fneni(8087 out add idiv add or pop sbb daa sub aaa cmp push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz add add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas add push push pop pusha imul addb mov mov fcomp loop in repnz std add add or sub dec dec push pop pop arpl jae jge mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl pop add and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or daa sub add cmp pop pop bound jb jge mov mov mov (bad) in add cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es ss inc add pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop add add outsb jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov mov aad loopne add icebp idiv add or daa sub inc dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpckhps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg add add test mov mov fcomp jecxz in repz std add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop popa data16 jno jl xchg add rol rcl fsub out repnz add or daa sub inc dec dec push pop pop fs je jg mov cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test add add aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jb jl xchg cmpsl lods mov mov add rcr fucom call add push adc push and xor ds dec dec push pop pop arpl je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addl mov mov fcomp jecxz add call incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz add add add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad (bad) ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or pop sbb cmp pop pop bound jb jge mov test mov mov (bad) in out add cli add and inc inc add pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or add sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock sti add and sub cmp add dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or daa sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc add add add pusha gs jne addb mov mov xlat fsub out icebp idiv add or pop sbb cmp pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop add add add je jg mov stos scas mov mov fnop in lock cli add and inc jno add adc and cs pop xchg sahf movsl lods mov ret xlat (bad) in repz std add or sub inc dec push pop pop arpl jae jle mov add cwtl sahf mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jae jle mov test add enter fucom call add or sub dec dec push pop pop bound jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov ret enter fucom call add or daa sub inc dec push push pop bound jb jl mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov add xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out add jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos scas mov rol rcl fneni(8087 in lock cli add add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl sldt add add add add pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub add cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor jno jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound add add add jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl pop and aas inc dec push push pop pusha imul addb mov stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop imul mov add add (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addl mov add add fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov add fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne add add lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp loop in repz std add or sub dec dec push pop pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam (bad) jmp add unpcklps add sbb and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz std add or sub ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpckhps pop and aas inc dec push push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es aaa cmp inc add add pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop add je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp push pop bound jb add add mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov add test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov rol rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add hlt stc incb push adc push and cs ds dec dec push pop pop imul mov scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl add pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub call add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and add add xor ds dec dec push pop pop arpl jae jle mov mov rol rcl fnop in out cmc cli incl and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec add pop arpl jae jle mov test mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa add data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and inc inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae add add orl test mov mov fcomp jecxz in repz std add or daa sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov add popf mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos add mov mov aad loopne ljmp adc xor dec push pop pop gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov add fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or add adc sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc sti add and add add inc inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz incb or adc sbb add cmp pop pop bound jb jge mov test mov mov xlat fucom out repnz add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add and sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound add add jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add test movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov add add mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge mov test add lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and inc inc dec dec push pop pop gs je addb movsl stos scas mov add fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov add rcl fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) add jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add idiv add or adc xor push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add add add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add add sbb and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and add xor cmp pop pop arpl jb jge mov cmpsl lods mov mov xlat fucom out repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp add dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push add add pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub xor cmp pop pop bound add jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul add xchg cmpsb stos mov (bad) lret rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub inc dec push pop pop bound jb jge xchg add add mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov add test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl je jle mov test add rcr fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into rcr fsubp jmp add or sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov add fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne add lock cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jb jge mov test mov mov (bad) jecxz out repz incb or adc add add push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub add xor cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or sub xor ds add add push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop add pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae js orl test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fnop in out cmc cli add and inc inc dec push push pop pusha imul addb add stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov add add (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov rol rcl fnop in lock sti add and inc inc dec push push pop pusha imul addl mov add add (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov stos scas mov mov add fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in add add clc std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add add adc sbb es ss inc dec push push pop popa insb jno jl xchg iret aad in repnz add movhps aas inc dec push pop bound ja xchg mov rolb into aad jecxz icebp clc incl sub aaa aas inc dec push pop arpl jns xchg mov mov fsubp in repz add adc pop and dec dec push pop gs jae orl leave rcl (bad) in icebp idiv add or xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps push and cs add cmp inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add unpcklps pop and das xor aas inc dec add pop pop fs je jg mov stos scas mov add vaddsubps fneni(8087 in lock sti add and sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno add addl mov rol rcl fsub out icebp idiv add or pop sbb es ss inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or adc sbb aaa cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge mov popf mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods add mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop add insl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov add enter fucom call add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg test mov mov add fucom call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods add into rcr fsubp add add jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz add add add add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz std add or adc sbb aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz std add or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push add sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or sub xor cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec add add push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor ds dec dec push pop add imul mov scas mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl add jle mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop arpl jae jge mov movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jle add test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jae jle mov add add mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test scas mov mov fcomp jecxz out add stc incl unpcklps push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test add (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov scas mov mov aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor add push pop pop imul mov mov mov (bad) add in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov scas mov mov fcomp in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz add add incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add add add sub dec dec push pop pop bound jb jge xchg mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and add add ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and cs aas inc dec dec push pop pop imul mov mov mov (bad) add ljmp unpckhps pop and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push add add imul mov scas mov mov fcomp jecxz out repz std add or sub dec dec push push pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa add add insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb xor add inc dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc sbb cmp pop pop arpl jae jge add add mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov add add mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl jae jle mov (bad) xchg cltd lahf movsb test add lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test add (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor dec push pop pop fs je jg mov test (bad) leave iret aam (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam add in lock cli add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in add jmp add pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz add add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or add add add sbb and add xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push add sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fsubp jmp add push adc push and xor add ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov stos mov mov aad loopne ljmp adc xor dec dec push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps push and cs ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp call add push adc sbb cmp pop add pop bound jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha imul add add add jnp xchg cmpsb stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge add (bad) mov test mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov test (bad) lret fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fneni(8087 in lock sti add add es ss inc dec push push pop popa data16 jno jl xchg add add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov add ret enter fucom jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov add add (bad) ljmp adc xor push push pop pusha gs add addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out add add icebp idiv add or pop sbb aaa cmp push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb add push adc push and das xor aas inc dec dec push pop pop imul cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub cmp pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add and inc inc dec add pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb add dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop add add je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul add jnp xchg cmpsb lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle test add add stos scas mov mov fneni(8087 in lock sti add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg add cmpsl lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov add (bad) aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl add loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into add aam (bad) jmp add unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop add in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and das xor dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock cli add add and cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repz std add or sub dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl add pop and aas inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz std add or sub add cmp pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp add inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop add pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jb add add orl test mov mov (bad) in ljmp unpckhps and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add mov lods mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out cmc cli incl and aas inc dec push push pop pusha gs jne addb add rol rcl fneni(8087 in icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test add aam (bad) ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov add (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp add out hlt stc incb push adc push and cs aas inc dec dec push pop pop gs jne jg mov cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jle mov test mov mov fcomp jecxz out add cli incl unpcklps pop and add add das xor dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub add dec push pop pop bound jb jge mov test mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock sti add and inc inc dec push push add imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss mov fucom in repnz add movhps es ss dec push pop pop arpl jbe test movsb test rol iret aad loopne jmp add add add sti add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add or adc pop and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or add sbb cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or adc push and xor ds dec dec push pop pop arpl jae jle mov scas mov ret rcl fsub out repnz add or push sbb sub add cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz std add or daa sub add inc dec push push pop bound jb jge xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 add jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl add lret rcl fndisi(8087 out icebp idiv add or push sbb es cmp dec push push pop popa imul addl add add stos mov mov (bad) fneni(8087 out lock sti add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha imul addb add rol iret aad (bad) ljmp unpckhps and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test add add aam fsubp jmp incl pop and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor dec push pop pop gs jne jg mov stos scas mov mov add iret aam (bad) jmp add unpcklps pop and cs aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov flds add jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp add push pop pop arpl jae jle mov test mov mov fcomp jecxz add add repz std add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or add add sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub add in repnz std add or sub dec add dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno add add addl mov rol rcl fsub out icebp idiv add or pop sbb es add cmp push pop bound jb jge xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jl add xchg lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg add add mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add adc push and xor ds dec dec push pop pop arpl jae jle mov (bad) xchg cltd lahf movsb test mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add add into rcr fsubp call add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat add loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out add add icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad loopne ljmp add and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt stc incb push add adc push and sub xor dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push add and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repnz std add or sub add add cmp push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb js orl test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsb stos scas mov mov fcmovu in out hlt cli incl and aas inc dec dec push pop pop gs add add jp test movsb stos scas mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha gs jne add lcall mov fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov add xchg lcall mov (bad) in out hlt stc incl push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push add das xor aas inc dec dec push pop pop gs jne jg mov add movsb stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov add add rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor cmp pop pop arpl jae jle mov test mov mov add into rcr fsubp call add push adc push and sub dec dec push pop pop add jae jle mov test ret leave into rcr fsubp call add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fadds add jecxz in repnz std add or sub inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos add int3 rcl fsub out icebp idiv add add pop or push sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add add adc xor dec push pop pop gs je jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb unpcklps push and add cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add unpcklps pop and cs cmp inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop add push orl test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub dec dec push push pop bound add jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec push push pop pusha gs jne addb mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb xchg fwait mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop gs jne jg mov add (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test add add add fcomp jecxz jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add rcr fsubp call add push adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or das xor dec push pop pop gs jne addb movsl stos mov mov aad loopne add add lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and add dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add add add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp jecxz in repz std add or add adc sbb cmp pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and add sub xor aas inc dec dec push pop pop imul popl xchg lcall rol rcl fnop in lock sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb es add add add cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb aaa cmp inc dec add push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne out icebp idiv add or push sbb sub ss inc dec push push pop add popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub xor push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec push push pop pusha gs add add jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add push adc push and sub dec dec push pop pop arpl jae jle add add mov mov fcomp jecxz out repz incb or adc push and add aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg add mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall add scas mov mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb mov lods mov mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov add xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop add add repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov add fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add add add das xor push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov fcomp loop in repnz std add push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp add dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and cs aas inc dec dec push add fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl popf mov mov fcomp loop in repnz std add or sub dec dec push pop pop imul add outsb je jle mov test (bad) lret fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addl mov stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb add add mov rol iret aad fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb lods mov add add add mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz std add or and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov add ret rcl fsub add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp add out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt stc add add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov rcr fucom call add or sub xor dec push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps add and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add sbb add add ss inc dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec add pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec push push add insb jno jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop add popa insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs add jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg add (bad) aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov add cltd lahf movsb stos scas mov mov (bad) in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test add lods mov mov fcomp jecxz out repz incb add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov rol rcl fneni(8087 in lock sti add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov add add (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz std add or sub inc dec push add arpl jae jge mov test mov mov fcomp add loop in repnz std add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz add add std add push adc push and xor cmp pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add add add adc sbb es ss inc dec push push pop popa imul addl mov mov xlat fsub out icebp idiv add or push sbb es cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc add add and xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub cmp inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in lock cli add and inc inc dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz in repz incb add unpcklps pop and das xor aas inc dec add add pop pusha gs jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop imul nop xchg lcall rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop popa data16 add add jl xchg add enter fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa imul add addl mov ret rcl fucom call add or sub dec dec push pop pop arpl jae jle mov stos mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg pushf mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aad (bad) ljmp or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods add int3 rcl fucom call add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov add add rcl fucom call add push adc push and xor ds dec dec push pop pop imul xchg fwait mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) add ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl push je jg mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add idiv add and sub xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb add or adc push and sub dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos add lret rcl fneni(8087 out lock add add xor push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add sub ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb es ss inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne out icebp idiv add or push sbb es cmp dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add imul mov mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jae add add add jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub add cmp pop pop bound jb jge xchg mov lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add mov aad loopne jmp cmc sti add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle test movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test add (bad) leave into aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov add add fucom out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov rcl fucom out repnz add or pop sbb daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock add add add pop and aas inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc add and das xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr fsubp jmp add push adc add add and sub dec dec push pop pop bound jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into aam fsubp jmp add push adc push and xor add add dec push pop pop bound imul mov mov mov (bad) jecxz icebp stc add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fsub jmp idiv add or push sbb es ss inc dec push push pop add insb jno jl xchg stos mov mov fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add add test movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne jg mov test les lret fneni(8087 in lock cli add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or sub inc dec push push pop bound jb jl xchg add mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add or push sbb sub cmp dec push push pop pusha imul addb movsl stos add lret fcmovu in out hlt cli incl lldt sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop fs je jg mov test mov (bad) in out repz incb or adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop add insb jno jl xchg cmpsb stos mov mov (bad) fildl add add out lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add hlt stc incb push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add add or daa sub aaa cmp inc dec push push pop popa insl jb jge xchg add enter fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock cli add and inc inc dec dec push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and add das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz incb or adc sbb cmp pop pop arpl jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc add dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fnop in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push and xor add dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop arpl outsb jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul add stos scas mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub xor cmp pop pop arpl jae jge mov add mov mov xlat fucom out repnz add or pop sbb aaa cmp push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov add add rcl fneni(8087 in lock cli add pop and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov add loopne ljmp unpckhps pop and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov add lret fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop add inc inc dec push push pop pop imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into rcr fsubp jmp add incb or adc sbb cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jno jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add add add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add add add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and add add dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc inc dec push push pop pusha imul addb movsl stos mov add fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and aas inc dec add add pop pop fs je jg mov test (bad) leave into aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out hlt stc incb or adc push and xor ds dec dec push pop pop add outsb jae jge mov test mov mov fcomp loop in repnz add push adc cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or add sbb aaa cmp inc dec push push pop popa insb jno jl add add pushf mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc pop and cs ds dec dec push pop pop arpl jae jle mov xchg cwtl popf mov mov fcomp loop in repnz add or pop sbb daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov add movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop add push je jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp pop pop arpl jae jge mov cmpsl lods add mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test add ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add rol add add (bad) fndisi(8087 out lock add or adc xor push push pop pop gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge mov test mov mov xlat fldl add out repnz add or pop sbb es cmp dec push push pop pusha imul addl mov rol rcl fnop in lock cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into rcr fsubp jmp add add stc incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out in repz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add add push or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or add adc sbb cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop add add das add dec push pop pop gs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub xor cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor add inc dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz std add or daa sub inc dec push push pop bound jno add mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec add pop popa imul addl mov rol rcl fneni(8087 in lock cli add and inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop add arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps and inc inc dec dec push pop pop gs jne jg mov test add lret fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub xor ds dec dec push pop pop arpl jae jge add (bad) mov cmpsl lods mov mov xlat fsub out repnz add or push sbb es aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov add add add add mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add add daa sub aaa cmp inc dec push push pop bound jb jl xchg mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov lods add int fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop fs je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov add add rcl fndisi(8087 out lock add or adc xor dec push add imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov add add fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub add add in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg test mov mov fcomp loop in add repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov rol iret aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add add push or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or adc sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam add in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop add es ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add add xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add push adc sbb cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp adc sub add cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and aas inc dec dec add push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop add insl jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and cs aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub dec dec push pop pop bound add jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fnop in lock cli add pop and das xor aas inc dec dec push pop pop gs je jg add movsb add (bad) aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg add lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp dec push pop arpl jbe addl mov fcomp jecxz out add stc incb or adc sbb cmp push pop bound jb jl xchg stos mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcmovu in out hlt cli add add incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or add add adc sbb and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb add add sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out add cli incl pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or daa add aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or sbb aaa add inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb daa sub add cmp inc dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and xor dec push pop pop fs je jg mov test mov mov fcomp jecxz in repnz add or daa sub aaa cmp add popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add jo jnp test movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop arpl jae jns orl test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa data16 add add jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha data16 jno jnp add fwait mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl je jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl add xchg xchg fwait mov add fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg pushf mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg add int3 rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt cli add add and inc inc dec dec push pop pusha gs jne jg mov stos mov add mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs xchg lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aad fild in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out repnz add or pop sbb aaa cmp pop pop bound jb jge mov test mov mov (bad) jecxz out hlt stc add add add unpcklps pop and das xor aas inc dec dec push pop pusha add jbe addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or add adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb add add xor cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge mov test mov mov aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push add add imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs add add jp test movsb stos scas mov mov (bad) in out hlt stc incb push adc sbb and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae add add mov test ret leave into rcr fsubp jmp add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg add xchg cwtl popf mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add jno jl xchg add add mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop gs je jg mov test add add aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov add (bad) int xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods add int3 rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov add add fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add add add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add add adc sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps add push and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub add push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc sbb add add dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp add dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and aas inc dec dec add add add add pop gs jne addb mov mov loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 out lock add and inc inc dec push push pop pusha imul add jp test movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne jg add mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) in add cmc cli add pop and aas inc dec dec push pop pop fs je jg mov add add mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov add test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov add mov (bad) fndisi(8087 out lock add or push sbb sub add inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add lret rcl fnop in lock add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam add in out hlt cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub inc dec push pop pop bound jb jge mov mov mov mov (bad) in out hlt cli incl unpcklps and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb add sub aaa cmp inc dec push pop pop bound jae jge mov test mov mov (bad) jecxz ljmp unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa add add inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and inc inc dec push add add pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or daa sub inc dec push pop pop bound jb jge mov test ret leave into rcr fsubp jmp add push adc push and cs add dec push pop pusha add add jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle add movsb test (bad) aad loopne ljmp adc xor push push pop pusha imul addl mov rol rcl fsub out repnz add or daa sub dec dec push pop pop bound jae jge mov add add mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb mov mov (bad) fsub out repnz add or daa sub dec dec push pop pop arpl jae jge mov test add mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov int xlat fucom call add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub add out icebp testb add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add add or pop sbb aaa cmp pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or add add add sbb es ss inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push add gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb add sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub add dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs add outsl jne jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jge add mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add or adc xor push push pop pusha imul addb add mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test add add aam fsubp jmp add unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock sti add and sub cmp dec push push pop popa imul addl mov rol lret rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop add insl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam add in out hlt stc incl unpcklps pop and das xor push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsubr icebp idiv add or push sbb sub ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop arpl jae jge mov test mov mov aam fsubp jmp add sldt add adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and add add add sub xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or add sbb cmp pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec add add add pop arpl jae jle mov test (bad) lret (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha data16 add add jbe addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa add js add add mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul popl xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl and sub cmp dec push push pop pusha imul addb cmpsb add stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov rcl fucom out repnz add or sub dec dec push pop pop bound jb jge mov test mov add add fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into add add (bad) in out hlt stc incb push adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add add or daa sub inc dec push push pop bound jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push add sbb and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test repz add adc push and xor gs jle mov rol xlat fucom in repz add adc and das xor aas inc dec dec push pop pop fs je jg mov test ret enter add jecxz in repnz std add or daa sub inc pop gs jne addb movsl stos scas mov mov fcmovu in repz add or cmp dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add add sub xor dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub add inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor add add inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb mov lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test (bad) lret (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds pop popa imul addl mov rol rcl fcmovu in lock cli incl pop and das xor ds dec dec push pop pop arpl jae add add mov test mov mov xlat add loop in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb add add mov mov aam (bad) jmp add push adc pop and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add sbb es cmp dec push push pop pusha imul addb add add mov aam fsubp jmp add or sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov add mov (bad) fneni(8087 out lock cli add pop and das xor aas inc dec dec push add gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov add vaddsubps fnop in out cmc cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov add aam fsubp jmp add or sub inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov test ret enter add fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out add add lock add and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out repz add clc incb or sub inc dec push push pop popa data16 jno jl xchg stos mov mov add fsub out icebp idiv add or adc xor dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into rcr fsubp call add add or sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or add adc sbb aaa cmp push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc sbb add and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc sbb cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub add cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz std add or sub add add dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop add insb jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub dec dec push push pop bound add jl xchg test mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps and inc inc dec dec push pop pop gs je add jg mov test (bad) leave into rcr fsubp call add push adc sbb cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb add add stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call incl unpcklps pop and cs aas inc dec dec push pop pop imul mov add mov rcr fucom call add or daa sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop gs je jg mov test add fcomp jecxz in repz std add or daa sub inc dec dec push pop pop bound jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov add add fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound add jge mov test mov mov xlat faddl add add out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out add icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp add add pop and das xor aas inc dec dec push pop pop imul mov lods add aam fsubp jmp add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and add das xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp or push sbb es add add add inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec add push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa add add jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push add insl jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub cmp pop pop bound jb ja (bad) mov cmpsl lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov add add add test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add mov mov aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl je jle mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jle mov test mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov add iret aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc add add pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad add loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addl mov ret rcl fsub out add add idiv add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add add add add or pop sbb daa sub aaa cmp inc dec push add arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb add sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incb unpcklps pop and add aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub ss inc dec push push pop popa insb jno jl xchg lods add int fcomp jecxz in repz incb or adc push and cs ds dec add add pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound add insb jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne add lcall rol rcl fneni(8087 in lock sti add sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl je jg mov add mov mov fcmovu in out hlt cli incl pop and inc inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop add jo jp test cmpsb stos mov mov add rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov (bad) int fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu add add ljmp adc xor push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp testl add add add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov rcr fucom jmp add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl add adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb add add sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out icebp idiv add or push add add aaa cmp push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs aas inc dec add pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa add add jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb add jge mov test mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jae add add (bad) mov test mov mov fcomp loop in repnz std add or daa sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or sub xor ds dec dec push pop pop arpl jae jle mov mov scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov add add mov aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl unpcklps pop and das xor dec push pop pop fs je jg mov stos mov add add add mov rol rcl fnop in lock cli add and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor dec push pop pop gs jne jg mov stos scas mov rol add rcl fnop in lock cli add and inc inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps sbb and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and add add xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pop gs je jg mov stos scas mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push add popa insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound add ja (bad) xchg cmpsl lods mov mov xlat fucom out repnz add add adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae add jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop fs (bad) mov scas mov rol iret aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov add lret fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov add iret aam (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov flds add add in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fucom call in repnz incb add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl add adc pop and aas inc dec dec push pop pop gs jne addb movsl stos scas mov mov fnop in out cmc cli add pop and inc inc dec add pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add and sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor add cmp inc dec dec push pop pop imul mov mov mov call add push adc push and cs ds dec dec push pop pop fs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop add add insl jb jle mov test mov fneni(8087 in lock sti add or push sbb sub ss inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop gs jne add jp test cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fnop in lock cli add and sub cmp dec push push pop popa data16 jno jl xchg add mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or push add cmp pop pop arpl jae jle mov test add scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol add lret rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fsub add in repnz add or sub dec dec push pop pop arpl je add mov stos mov mov (bad) fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc add add unpcklps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov mov fcmovu in lock cli add add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop fs je jg mov stos scas mov rol rcl fildl loope in icebp idiv add or pop sbb daa sub xor cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz std add or sub dec add dec push pop pop arpl je jg mov stos scas mov rol rcl fneni(8087 in lock add or push sbb sub ss inc dec push push pop popa insb jno jl xchg test mov mov (bad) jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop add add jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec dec push pop pop arpl jae jle mov stos scas mov mov fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl add pushf mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jge mov add add add add mov aam (bad) ljmp adc xor push push pop pusha imul addl mov rol rcl fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg lcall add add rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop bound jae jge mov test ret leave into aam fsubp jmp add and inc inc dec push push pop popa imul addl mov ret add rcl fsub out repnz add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli add and sub cmp dec push push pop popa imul addl mov ret rcl fucom out add add add repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add push or pop sbb daa sub aaa cmp pop pop bound jae jge mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor push push pop pusha imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add add and sub cmp dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop bound push test movsb stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz std add push adc push and cmp inc dec dec push pop add pop arpl jae jle mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae add jns orl test (bad) aad (bad) ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov rcr fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov add add add add test (bad) leave iret aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out repnz add or pop sbb aaa cmp pop pop bound jb jge mov add add ret enter fsubp call add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg test mov mov int fcomp jecxz in repz incb or adc push and add xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov add add fsubp call add push adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in add clc std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli add and inc inc dec push push pop popa imul addl mov mov fcomp loop in repnz std add add or sub dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and sub ss inc dec push push pop popa insb jb jge xchg test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl je jg mov stos scas mov mov fcmovu in lock cli add and add add inc inc dec push push pop pusha imul addl mov ret rcl fsub add in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop add add imul (bad) xchg lcall rol rcl fnop in lock sti add and sub cmp dec push push pop pusha imul addl mov rol rcl fsub out repnz add or pop sbb aaa cmp push pop pop arpl jae add mov test (bad) leave into aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov add cwtl popf mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods add int3 rcl fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge mov mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov add lret fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jb jge mov test mov mov fadds fucom call add push adc push and xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp add add std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl or adc das xor push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or add sub dec dec push pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec add pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb push adc push and cs ds dec add dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp pop pop bound add add jb jge mov add (bad) leave into aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov xchg cwtl sahf mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in lock cli add push or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add add ret rcl fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov add add fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push add fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out jmp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jae jle mov test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul nop xchg lcall rol rcl fneni(8087 in lock sti add or push sbb sub cmp push pop pusha gs jne addb cmpsb stos mov add xlat fucom out repnz std add or add add sub dec dec push pop pop arpl jae jge mov test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad loopne ljmp adc xor add add inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec add add push pop pop bound jb jge mov test mov mov (bad) jecxz out repz incb or add pop and das xor dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz incb or adc push and xor ds dec dec push pop pop arpl je add add mov test (bad) lret fcmovu in out hlt cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb es ss inc dec push push pop popa data16 ja (bad) xchg add lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor dec push pop pop gs jne jg mov add add (bad) aad loopne ljmp adc xor cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg cmpsl lods mov mov add (bad) int xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test add lret fcmovu in out cmc cli add and inc inc dec push push pop popa imul addl mov rol roll add add fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insl jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add add pop or pop add and xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fneni(8087 out lock add or push add sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb aaa cmp pop pop bound jb jge mov test mov mov (bad) in out hlt stc incb unpcklps pop and das add xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fneni(8087 in lock sti add and inc inc dec push push pop pusha imul jl xchg lods mov mov fcomp loop in repnz std add or sub add add push pop pop arpl jae jge mov test mov mov fcomp in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli add and inc inc dec push push pop add pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop bound jb add (bad) mov test mov mov aam fsubp jmp add unpcklps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl add add lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jle mov add (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov add mov ret rcr fucom call add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into rcr fsubp jmp add sub add cmp inc dec push push pop popa imul orl repnz add or cs je mov mov mov loopne out idiv add or sub xor ds dec dec push pop pop imul add add mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov mov mov (bad) jecxz out repz incb or adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc sbb and aas inc dec push push pop pusha gs jne orl add stos mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jae jle mov test mov mov ret rcl fucom out repnz dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incl push adc pop and add sub xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test add lret rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out repnz add push adc pop and das xor add add inc dec dec push pop pusha imul addb cmpsl lods mov mov fcomp jecxz in repz incb or adc push and xor cmp pop pop imul (bad) xchg fwait mov mov xlat fsub out repnz add push adc push and sub dec dec push pop add pop arpl jae jle mov test mov mov (bad) in out hlt stc incb unpckhps and sub ss inc dec push push pop bound jae jle mov test (bad) leave iret aam (bad) ljmp adc sbb add inc dec push push pop bound jb js (bad) mov cmpsl lods mov mov fcomp jecxz in repnz incb or adc push and cs aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jae jge mov lea lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl add add mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jnp xchg movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop gs je jg mov test add add add add leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jge mov cmpsl lods mov mov add ret rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov add add (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad fild in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz add add std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in lock cli add add add adc xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push add sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub add add cmp dec push push pop popa data16 ja (bad) xchg test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpckhps and inc inc dec add push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl add add jae jle mov test ret leave into rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pusha imul addb add add mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jb jle mov test add leave into aam fsubp jmp add unpcklps add and inc inc dec push push pop pusha imul addb cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push pop pop bound jb jge mov test mov mov add enter fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor dec push pop pop gs jne jg mov stos mov mov aad add add loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb js orl test mov mov (bad) in add add add hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add add add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov rcl fsub out icebp idiv add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc pop and das add aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock cli add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb sub xor ds dec add add pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and cmp dec push push pop add insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push pop pop bound jb js (bad) mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul add add stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je add fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl add mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg test mov mov rcr fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) add add fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or pop sbb aaa cmp push pop bound jb jge mov test mov mov (bad) add jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incl unpcklps pop and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock add sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb add inc dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add add sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpckhps pop add add inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es aaa add cmp inc dec push push pop bound jb jl orl test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec add add pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov add fsubp call add push adc push and xor ds dec dec push pop pop arpl je add jns test movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb xchg xchg fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add cmpsl lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pop gs jne jg mov stos mov add add (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov rcr fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov stos mov mov (bad) fneni(8087 add out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz add add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or add add sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat add loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and sub xor dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp inc inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec dec add pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha add push jne addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge (bad) xchg test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle add movsl stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb add add mov mov (bad) fneni(8087 out lock add or addl mov rol rcl fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb or add add add add sbb and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb add and sub add push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and add das xor ds dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jns test mov mov fcomp loop in repnz add or push sbb sub cmp add dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec add add pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addl add rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop add je jle mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out add idiv add or pop sbb daa sub ss inc dec push push pop pusha imul add jp test movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle add mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jl xchg add add mov mov (bad) fsub out icebp idiv add or push sbb and cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov add mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or adc xor push push pop pop gs jne jg mov test mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or daa sub inc dec push push pop bound jno js (bad) mov cmpsl lods mov mov add ret rcl fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fsub out icebp idiv add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fldl add out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out add icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock add cli add pop and das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fcmovu in out cmc add add add and aas inc dec push push pop pop gs jne jg mov test ret leave into rcr fsubp call add das xor push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop add add add das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) jmp add push adc push and add xor cmp push pop bound jb jge xchg cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz out repz incb or sub cmp inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add pop or pop sbb daa sub cmp dec push add add pusha imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop add je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs add add test movsb test (bad) leave into aam fsubp jmp add push adc push and sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl add fwait mov mov (bad) fneni(8087 out lock add or adc xor dec push pop pop gs je jg mov test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov add lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov add add mov aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jno jl xchg stos mov mov rol rcl fndisi(8087 out lock add and sub cmp dec push push pop pusha imul addb movsl stos scas mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave add into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad add in lock sti add and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop arpl jae jle mov test mov mov xlat fucom out add add add idiv add or add sbb aaa cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc sbb cmp push add push orl test mov mov fcomp loop in repnz add or add add daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and add cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor inc inc dec dec push pop pop fs je jg mov movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc add add pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or adc xor push push pop pusha gs jne jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in jmp cmc cli add pop and aas inc dec dec push pop pop add imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jp test movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and add xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jb jge xchg add mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc pop and das xor ds dec dec push pop pop arpl jae jle mov add test mov mov fcomp loop in repnz add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov stos scas add add aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov add lret rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp add add call add or daa sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov (bad) fneni(8087 out lock add or adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc sbb and sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add pop and add add add add xor dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or adc xor add inc inc dec push push pop pusha gs jne jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec add add pop pusha imul addb mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop add pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop arpl add add jns orl test mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jno jl xchg stos mov mov rcl fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul add add test movsl stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb add mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg add add mov rol rcl fnop in lock cli incl sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov add test mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov add rcr fucom call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push add imul addb movsl stos mov mov add lret fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pop gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr fsubp jmp add repz incb or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos mov mov aam (bad) jmp add add push adc push and xor ds dec dec push pop pop arpl jb jge xchg test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad fild out lock sti add adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb add add sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub add add aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp idiv add and cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt cli incl unpcklps pop and cs add ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop add add imul test movsb stos scas mov mov (bad) in out hlt stc incb unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop popa add add insb jno jl xchg stos mov mov aad loopne ljmp unpckhps and inc inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae add jge mov test mov mov xlat fsub out repnz add or pop sbb es aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov rol rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jg add movsb test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb add lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa insb jno jl xchg cmpsb add (bad) lret rcl fneni(8087 in lock add add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl je jle mov test add add rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov stos scas mov mov add add into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec dec push pop pop bound jb jge xchg test mov mov add add fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz call add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add add stc incb or adc push and sub dec dec push pop pop bound jb jge add mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or add add sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rcr fucom call add or add add sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp idiv add or adc xor push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and add xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor add push pop pop imul mov mov mov fcomp jecxz in repz std add or and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb aaa cmp inc dec add add add push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or sub xor cmp pop pop add bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add or sub dec dec push add arpl add js orl test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae add add mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov add lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl je jle mov add cwtl sahf mov mov xlat fucom out repnz add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov add add jg mov mov (bad) in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop bound jno jl xchg add stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl je jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl add fwait mov mov aad in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp or adc das xor dec push pop pop imul (bad) xchg lcall mov (bad) jecxz out repz incb or sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov add (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or sbb and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov add rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec dec push pop pop arpl jae jge mov test mov mov add (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in add cmc cli add and inc inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb add add push adc push and xor ds dec dec push pop pop arpl je jle mov (bad) xchg lcall rol rcl fnop in lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop bound je jg mov stos scas mov mov fcmovu in out cmc cli add and sub add cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop jmp add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop add add add add insb jno jl xchg scas mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno add jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul popl add add scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb lods add int fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov add add vaddsubps fneni(8087 in lock sti add and sub cmp dec push push pop pusha imul addl mov rol rcl fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov ret enter fucom call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) add loope jmp idiv add add adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test (bad) leave into rcr fsubp add add out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov test ret enter fucom call add or add add sbb cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or add sub dec dec push push pop imul mov scas mov mov fcomp loop in repnz std add or daa sub inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and add cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc ds dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push add fs je jg mov test (bad) leave iret aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb mov mov aad loopne jmp idiv add or push sbb sub ss inc dec push push pop popa insb jno add add mov add (bad) lret fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov xchg cltd sahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fnop in lock cli add and inc inc dec push push pop popa imul addl mov ret rcl fucom call add or adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov add (bad) lret fnop in lock sti add and sub cmp dec push push pop popa imul addl mov rol rcl fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam add in out hlt cli incl pop and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add add or sub xor ds dec dec push pop pop arpl add test movsl stos scas mov rol rcl fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or add cmp pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb das xor add add aas inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub xor cmp pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec add add pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov rcr fsubp jmp add push adc push and cs aas inc dec dec push pop pop add je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add jge add movsb test (bad) lret fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg add xchg xchg pushf mov mov fcomp loop in repnz std add or and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa imul addl add cmpsb lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov flds (bad) ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov add aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov test les add into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and inc inc dec dec push pop pop gs jne jg mov test (bad) leave into aam fsubp add jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add std add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha add jnp xchg cmpsb stos mov mov aad loopne ljmp add and aas inc dec push push pop pusha gs ja xchg test (bad) leave into rcr fsubp call add push adc push and sub dec dec push pop pop arpl js xchg movsl stos mov mov aad (bad) ljmp add push sbb add sub xor push pop popa data16 jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov stos scas mov mov (bad) in out repz incb or adc push and sub add cmp pop pop bound jb jge mov cmpsl lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne jmp cmc cli add pop and aas inc add dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push add arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push add add add push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb add push adc push and xor ds dec dec push pop pop add insl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl add jae jle mov movsb test ret leave iret aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds add push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg add cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam fneni(8087 in lock add or adc xor push push pop pop gs je jg mov cltd lahf movsb test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb mov add add cmpsb lods mov mov (bad) fneni(8087 out lock add and sub xor push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov add mov ret rcl fsub out repnz add or pop add cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor cmp dec push push pop pusha imul addb movsl stos scas mov mov iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov rcr fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop add push jne jg mov stos scas mov mov flds fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp add lock cli add sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or adc push and xor ds dec dec push pop pop arpl jae jle mov add (bad) aad loopne ljmp adc xor push push pop pusha imul addb cmpsb lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop add insl jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out add stc incl unpcklps push and add add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub xor add add push push pop pusha gs jne jg mov movsl stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec add pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub add cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop add pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz jmp add push adc push and xor ds dec dec push pop pop arpl add add js orl test mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock sti add and inc inc dec push push pop pop gs jne add jnp test movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jl xchg add lods mov mov (bad) fsub out icebp idiv add or push sbb and cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov add mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jb jge xchg cmpsl lods mov add fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg add cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop imul test movsb test add aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) aad (bad) ljmp or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov rcr fucom out repnz add or daa sub aaa cmp inc dec push push pop popa imul addl mov aam fsubp jmp add push adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 add jmp idiv add and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz std add or sub add push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) lret (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov xlat fsub out icebp add std add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add add add daa sub aaa cmp inc dec push push pop popa data16 jno jl add mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add push adc add add push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub add cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp unpcklps pop add das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov aad loopne jmp cmc cli add and add xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor add aas inc dec dec push pop pop imul mov stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor add dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas add aam fsubp jmp add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop pop arpl add outsb jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul add add mov test ret enter fucom call incb or adc push and sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne addb add add movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge orl test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb add add mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or daa sub inc dec dec push pop pop bound jb jge xchg add mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov rcr fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov add add fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul ja addl mov rol rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret add leave iret aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add pop or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov add aam (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom jmp or adc pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov rcr fucom add add in repz incb or sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add idiv add or daa sub add push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add add or sub dec dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock cld add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or add add adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pop gs jne jg xchg movsl stos mov mov aam (bad) ljmp push adc add sbb and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb sub ss inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and add add add aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and add add add ds dec dec push pop pop arpl jae jle mov test mov mov rcr fsubp call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and add aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 add jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc add dec push push pop pop gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop or push sbb sub cmp dec push add push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos add lret rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul add jo jnp test movsl stos mov mov aad (bad) jmp add push adc push and xor add inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul add add xchg movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out out repz std add or daa sub inc dec push push pop popa insb jno jl add xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul jl xchg xchg xchg fwait mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg add mov aad loopne jmp cmc cli add pop and cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg add add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test mov xor inc dec dec push pop gs je orl mov (bad) lret rcr (bad) jmp add push adc push and xor add add inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl add mov mov fcomp loop in repnz add or daa sub aaa cmp inc add add pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop add add imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs add test movsb stos scas mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa insb jno jl add mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jl xchg pushf mov mov xlat fsub out repnz std add or sub dec dec push pop pop bound jb jge xchg test mov mov xlat fucom call add push adc push and sub xor aas inc dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov add lret fnop in lock cli add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) add fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa insb jno add mov test mov mov xlat fucom out repnz add or daa sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl add add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha imul addl mov rol add xlat fucom out repnz add or add add sbb aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and add das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne ljmp sbb and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc add push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and sub xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push add popa imul addl mov rol rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha add jo jnp test movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop add jo jnp test movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne add mov test ret leave into rcr fsubp call add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop imul add mov scas mov mov fcomp loop in repnz add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov lcall mov (bad) jecxz out repz incb or sub xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov add test ret enter fucom call add or sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor dec push pop pop imul mov scas mov mov rcr fucom call incb or adc sbb cmp inc dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test ret enter rcr fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and add xor dec push pop pusha gs jne jg mov test (bad) leave into rcr add jecxz out repz std add or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add add repnz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add add or push sbb sub cmp dec push push pop pusha gs jno jnp xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or add sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jl xchg lods add int xlat fucom out repnz add or push sbb add and sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub add xor push push pop pop gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in add stc incb push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fsubp call add or daa sub inc dec push push pop gs jae jle mov test ret leave into rcr fsubp jmp add unpcklps push and cs ds dec dec push pop pop add add je jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs add dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec push pop pop gs jne jg add add movsl stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pop fs je jg mov add lahf movsb stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha imul addb movsl stos add lret fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov add add lret rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad fnop add jmp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out add add lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add push or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub add cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or adc sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb add sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl add mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz incb or adc push and xor cmp dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop add bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov add fsubp jmp add push adc push and cs ds dec dec push pop pop arpl add add jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and cs aas inc dec dec push pop pop imul add mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov add mov aad (bad) ljmp unpcklps pop and sub xor push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl add mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov add add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb add mov test (bad) leave into aam add (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add pop or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov rcr fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add push adc sbb cmp inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp add push adc push and add add xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop add add dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push add add push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound add insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb js orl test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae add add mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov add xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl add lds int3 rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jae orl test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov add (bad) aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) add fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or add xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz add add repz incb or adc push and cs ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) in out repz incb add or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or add add sbb aaa cmp push pop bound jb js orl test mov mov xlat fucom out repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb add daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa add cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb aaa cmp push pop bound jb jge xchg cmpsl lods mov mov rcr fsubp call add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl pop and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc xor push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add xchg test mov mov fcomp loop in repnz std add or and cs ds dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa data16 jb jl xchg add add lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl pop and aas inc dec push push pop pusha gs jne addb cmpsb add stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov lods mov mov add add (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb push adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) add loopne jmp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in lock add cmc cli add and inc inc dec push push pop pusha imul mov mov fcomp jecxz out repz add movhps es popa push mov mov rol rcl fneni(8087 in lock sti add and inc inc dec dec push pop pusha imul add jo jp test movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov test (bad) leave iret aam fnop in lock cli incl pop and aas inc dec dec push pop pop fs je add jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl je jle mov test ret enter fucom call add or sub dec dec push push pop bound jb jge mov add xchg cwtl popf mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add rol rcl fneni(8087 out lock add and es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov rol rcr (bad) out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov add add fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add pushf mov mov xlat fucom add in repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov xlat fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz add incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt stc incl sldt add adc das xor dec push pop pop gs jne jg mov stos scas mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or add add sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs add inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and cmp dec add push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa add jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb add jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae add mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov add add stos scas mov mov fcmovu in out cmc cli incl pop and das xor dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb add add rol rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov add add rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub inc dec push pop pop bound jb jge mov test mov mov add add rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp add call add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop add inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add or adc xor cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb add and sub aaa cmp inc dec push push pop bound jb js orl test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and add add add cmp inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor ds add push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) fneni(8087 out lock add and inc inc dec push push add add imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul add add jnp xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl add add mov mov xlat fsub out icebp idiv add or push add cmp pop pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov add add mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test add add enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl outsl je jg mov test mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov add aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in add ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov add (bad) lret rcl fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or add add sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp in repz add sbb and sub xor dec push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor add add aas inc dec dec push pop pop arpl je jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push add insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec add imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop add fs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul add je jle mov movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne add add add jg mov test (bad) lret (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov add add cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov fadds fsubp call add or daa sub inc dec push push pop popa imul addb xchg lcall mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne jmp cmc sti add pop and das xor ds dec dec push pop pop arpl jae jge mov mov mov (bad) fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos add add leave into rcr fsubp call add push adc sbb and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov add add rcr fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov enter fucom out repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push add gs je jg mov test ret enter add add fcomp jecxz out repz std add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add pop and inc inc dec dec push pop pop fs je jg mov test ret enter fldl add add call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out add add idiv add or pop sbb es ss inc dec push push pop popa imul addb mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul mov mov mov fadds fsubp jmp add push adc add sbb and sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or add sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or daa sub aaa cmp dec push pop pop imul mov mov mov fcmovu in out cmc cli incl pop and cmp dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec add add pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or sub inc dec push push pop bound jb jl xchg add lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jb jl xchg add mov xlat fsub out icebp idiv add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov rcr fucom call add or sub xor cmp pop pop arpl jae jge mov test add mov mov fcomp loop in repnz add or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov add add lret rcl fneni(8087 in lock cli add pop and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov lods mov mov add fcomp loop in repnz add or and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom add add add in repnz add or pop sbb aaa cmp inc dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp testl add cld add or pop sbb daa sub ss inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa add jae jge mov test mov mov fcomp loop in repnz std add add daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb add add add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub add cmp inc dec push push pop popa data16 jno jl xchg lods mov mov rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out lock add or push sbb and inc add inc dec push push pop pusha gs jne jg mov stos scas mov rol rcl fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or sub inc dec push add bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add push or push sbb sub cmp dec push push pop popa add jno jnp xchg movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae add orl test mov mov xlat fucom out repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne addb add mov stos scas mov mov (bad) in out hlt stc incb unpcklps push and cs ds add push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cwtl popf mov mov xlat fucom out repnz add or pop sbb aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pop gs jne jg mov add (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom call add or pop sbb daa sub aaa cmp push pop bound jb jl xchg test mov add mov rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov iret aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat add loope in icebp idiv add or push sbb lods mov jecxz hlt sbb cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov add add rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov flds add (bad) jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in add repz std add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add add add push or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps add add pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound add add jb jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp adc xor dec push pop pop gs jne jp test movsb stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov add test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov add (bad) int xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad add add (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jge mov cmpsl lods mov mov xlat fsub out in repnz add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or add add add adc sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push add cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fnop in lock cli incl pop and aas inc add add push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop add add imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop fs je jg add movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov cltd sahf mov mov (bad) jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test ret add into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad add in lock sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jb jge mov test mov mov fcomp loop in repnz clc std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fneni(8087 out lock add or adc sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and add sub xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss add inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push add pop pop arpl jae jle mov test (bad) leave into aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 add jno jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle add mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor cmp dec push push pop popa data16 jno jl xchg mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc dec push pop pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pusha imul addb cmpsb stos mov mov add (bad) fneni(8087 out lock add or adc xor cmp dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom add add in repnz add or daa sub inc dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add add add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad (bad) ljmp sldt adc das xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or sub xor add add inc dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock sti add and inc inc dec push push add add imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound add add jge mov test mov mov fcomp loop in repnz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and cs ds dec dec push pop pop imul add mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb add mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov add mov rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec push push pop pusha gs jne addb movsl stos mov mov add aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz add add out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or add sbb cmp pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and add xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp add inc dec push push pop popa insb jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop add pop imul mov mov mov (bad) in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub ss inc dec push push pop popa data16 jno add add addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop imul add (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add ret rcl fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg cmpsl lods mov mov add add fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg lods mov mov xlat fucom out repnz add add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add add and inc inc dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov fcomp loop in repnz std add or sub add cmp pop pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps push and cs aas inc dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb aaa cmp push pop bound jb add add xchg test mov mov fcomp loop in repnz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul popl add add mov mov fcmovu in out hlt cli incl unpcklps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl add add int3 rcl fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) add loope in icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl jae jge mov test ret leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsl stos scas mov mov fnop in lock cli add and add add inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or daa sub add pop pop bound jae jge mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli add and inc inc dec push add push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop bound add add js orl test mov mov fcomp jecxz in repz incb or adc daa cmp insb je orl mov (bad) int sti add adc push es push pop pop gs je test scas mov (bad) into (bad) fsub in repz add adc pop and dec push add pop bound jae jge mov cmpsl add enter fucom jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 add imul addl mov rol rcl fcmovu in out cmc cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop fs je jg mov test ret enter fsubp call incb unpcklps pop and cs ds dec dec push pop pop arpl jae jge add add mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl pop and aas inc dec dec push pop pop imul mov add mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl add add (bad) aam (bad) ljmp unpcklps push and xor cmp dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub dec dec push pop pop bound jb jl xchg lods mov add mov rol rcl fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov add int fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop gs jne add fwait mov mov add aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl je jle mov test ret enter fsubp call add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add std add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb add add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp sldt add add pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out lock add sbb add sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub add aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub add dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub xor add pop popa imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb aaa cmp inc dec push push pop popa insb jno add add addl mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl add xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg add pushf mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl add lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jb jl xchg lods mov mov add add (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol roll add (bad) fsub out icebp idiv add or push sbb sub add inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom add add in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add add add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop bound jb jge xchg mov scas mov mov (bad) jecxz out repz incb or push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push add sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor pop arpl jae jle mov stos scas mov mov fnop in lock sti add or pop sbb daa sub aaa cmp inc dec push push add add push orl test ret leave into aam (bad) jmp add or push sbb daa sub aaa cmp pop pop bound jae jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp inc dec push push pop bound jb ja (bad) xchg test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor push push pop pusha imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop imul popl add add mov mov (bad) fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa data16 js orl test add scas mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa imul addl mov rcr fucom call add push adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov add int3 rcl fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov stos scas mov mov fnop in lock sti add or push sbb es ss inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) add add out cmc cli incl and inc inc dec push push pop popa imul addl mov add (bad) in out hlt cli incl unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb lods mov mov fcomp loop in repz std add add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc sbb add sub ss inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt cli incl unpckhps and inc inc dec push push pop popa imul addl mov ret rcr fucom call add unpcklps pop and das xor add inc inc dec push push pop popa imul addl mov ret rcl fucom call add push adc push and cs aas inc dec dec push pop pop fs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp inc dec dec push add arpl je jle mov stos scas mov mov fnop in lock sti add or push sbb sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop popa imul add add addl mov ret rcl fucom call add push adc push and cs ds dec dec push pop pop gs jne addb mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop gs jne addb add stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl je jle mov stos scas mov mov fnop in lock sti add or push sbb es ss inc dec push push pop bound jb jge mov test add leave into aam (bad) jmp add unpckhps pop and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and cs ds dec dec push pop pop imul (bad) xchg fwait mov mov lret rcl fsub out icebp idiv add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) add add ljmp unpckhps and inc inc dec push push pop pusha imul addl mov rol rcr fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha add jl xchg lods mov mov fcomp jecxz in repz incb push adc sbb and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fneni(8087 in lock add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop popa insb jb jge xchg test mov mov (bad) in out hlt stc incl unpcklps pop and xor push add push pop popa imul addl mov ret add (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec push push pop pusha imul add add jnp xchg mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub ss inc dec push push pop popa insb jb jge mov cwtl popf mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add and sub cmp inc inc dec push push pop bound jb jl xchg add lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov add add int fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad loopne ljmp adc xor cmp dec push push pop popa imul addl mov rol rcl fldl loop in repnz add or sub dec dec push pop pop arpl jae jle mov movsb stos scas mov mov fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub call add std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or add add pop sbb cmp pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp testb add or sub dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub add add dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop add add push orl test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push add imul addl mov rol rcl fsub out repnz add or pop sbb aaa cmp pop pop bound jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl je jle mov add (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jb jl xchg test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov add fcomp loop in repz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov add leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl mov rol rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fiaddl add in lock sti add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz out repz incb push adc add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add add std add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli add and sub cmp dec push push pop popa insb jb jl xchg lods mov mov fcomp loop in repz std add or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop imul mov stos mov mov aad loopne jmp cmc sti add and sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add or sub inc dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or sub dec dec push pop add imul (bad) xchg lcall mov fnop in lock sti add or push sbb sub ss inc dec push push pop popa insb jb jge mov test mov mov flds (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul add add add jbe addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) aad (bad) ljmp adc xor cmp dec push push pop popa imul addl add add lods mov mov fcomp loop in repz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addl lods mov mov xlat fucom call add or sub xor add inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov add add enter fsubp call add push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov rol rcl fnop out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg test mov mov fadds add fucom call add push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg test mov mov fcomp jecxz out add add clc incb or adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add add add sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb add daa sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa add add inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs ja mov clc incb or sub dec dec push push pop bound jb jl xchg lods ror rcr fucom jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) add loope in icebp idiv add or pop sbb daa sub dec dec push pop pop bound jae jge mov test mov mov (bad) jecxz ljmp adc xor cmp dec push push pop popa imul addl mov rol rcl fsub out add idiv add or sbb cmp inc dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add add add daa sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb add sub add push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub add cmp pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push add add popa insb jno jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa add add jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb test cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall add add mov aad loopne jmp idiv add pop or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas add mov mov fnop in lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repz std add or sub xor ds dec dec push pop pop arpl je jle mov test (bad) leave add iret aam (bad) ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb aaa cmp push add imul mov mov mov fcmovu add add ljmp unpckhps and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc add incb unpcklps pop and das xor push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb aaa cmp pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps add pop and das xor push push pop pusha imul addb cmpsb stos mov add xlat fucom out repnz add or sub dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and add das xor dec push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds add dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsl lods mov mov xlat fsub out repnz add or add push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add add (bad) mov test mov mov (bad) jecxz out hlt stc incb push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg xchg xchg pushf mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl add test movsb stos scas mov mov fnop in lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg add add ret rcl fsub out repnz std add or xor cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor push push pop popa imul addl mov rol add rcl fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fadds fiadd add add add jecxz out hlt stc incb push adc push and das xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jge mov test (bad) leave into aam fsubp jmp incl unpcklps pop and das xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add unpcklps add add pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa add pop pop arpl je jle mov test (bad) lret fcmovu in out cmc cli incl and add xor push push pop popa imul addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop arpl je jle mov stos scas mov mov fnop in lock sti add and sub cmp add dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop popa add data16 jno jl xchg test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb add xchg test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg add mov mov xlat fucom out repz std add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in out cmc add add or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov fcomp loop in repz std add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and sub ss inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov add enter fucom call add push adc push and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fldl add out repnz std add or sub dec dec push add fs jne jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz add clc incb or adc push and cs ds dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insl jb jge mov test mov mov fcomp jecxz out repz incb or add add sbb and cs ds dec dec push pop pop imul nop xchg lcall rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul (bad) xchg lods mov mov rcr fsubp jmp add push adc pop and sub xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb push adc pop and das xor aas add inc dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop add imul (bad) xchg lcall mov fneni(8087 in lock add or add sbb daa sub aaa cmp push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pusha gs add jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop gs jne jg mov add add stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl add test add add (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov add add fsub out repnz add or pop sbb cmp pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor inc inc dec push push pop pusha imul addb cmpsb stos mov mov add fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp dec dec push pop pop arpl jae jge mov test mov mov aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl mov rol rcl fsub out in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop arpl jae jge mov test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add add add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb add add daa add dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub add add cmp push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec add pop bound jb jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound insl jb jge mov test mov mov fcomp jecxz out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge add (bad) mov test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb xor cmp pop pop bound jae jge mov add ret enter fsubp jmp incl unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test add mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov add (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub dec dec add pop arpl je jg mov stos mov mov aad loopne jmp add add idiv add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add add sub dec dec push pop pop arpl je jle mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge xchg test mov mov (bad) in out hlt stc incl unpcklps pop and add add das xor push push pop pusha imul addb cmpsb stos mov mov rcr fsubp call add push adc push and cs aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub add inc dec dec push pop pop bound jae jge mov test (bad) leave into aam (bad) ljmp adc xor push push pop popa imul addl mov ret rcl fucom call add push adc push and cs ds dec dec push pop add pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test ret leave into aam (bad) jmp add sbb es ss inc dec push push pop bound jb add ja (bad) xchg test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov xchg cltd sahf movsb test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp dec dec push pop pop arpl jae add mov stos scas mov mov fnop in lock sti add or push sbb sub cmp dec push push pop bound jb jge xchg test mov mov add into rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb aaa cmp pop pop arpl jae jle mov test (bad) lret fcmovu add ljmp adc xor push push pop pusha imul addl mov ret rcr fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fildl loop in repnz add add or sub dec dec push pop pop arpl jae jle mov stos scas mov mov fnop in lock sti add or push sbb sub ss inc dec push push pop popa insb jb jl xchg test mov mov (bad) jecxz out hlt stc incb unpcklps add sbb and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fnop in lock sti add and sub add add add cmp dec push push pop popa insb jb jl xchg test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas add push push pop popa imul addl mov ret rcl fucom call add push adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incb unpckhps pop and inc inc dec push push pop pusha add add jbe addb cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in lock cli add and sub ss inc dec push push pop popa insb jb jl add mov mov aam (bad) jmp add unpcklps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall add mov aad loopne ljmp adc xor cmp dec push push pop popa insb jno jl xchg mov mov xlat fucom call add or sub dec dec push pop pop imul mov mov mov (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or adc sbb daa sub inc dec push push pop bound jb jge mov test mov mov add add fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out add idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl add add unpckhps pop and aas inc dec dec push pop pop add jbe addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz out repz incb or add and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov rcr fucom call add push adc push and xor ds add dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps and xor cmp pop pop arpl add push orl stos mov ror aam fsubp jmp add push adc push and cs add dec push pop pop fs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge orl cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop imul mov add xchg cwtl sahf mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push pop push orl cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop imul addb movsl stos add add leave iret aam fsubp jmp add push adc sbb cmp push pop bound jb jge xchg lods mov mov rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsb test add mov aam fsubp jmp add or sub inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov lods mov mov add int xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad add loopne ljmp or adc xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad fild add in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov rol rcl fsub out icebp idiv add or push sbb sub xor dec push pop pop gs je jg mov test (bad) leave iret aam fsubp jmp stc incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp add pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne out cmc sti add add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz incb or adc push and add add add cmp inc dec dec push pop pop imul mov scas mov mov fcmovu in lock cli add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp add add push push pop bound jb jge xchg test mov mov fcomp loop in repz std add or inc inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound add jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov aad loopne jmp cmc cli add pop and aas inc dec push push pop pop gs je add add add jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc push push pop popa insb jno jl xchg add mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg add rol rcl fneni(8087 in lock sti add sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov test add int xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul test movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov add add rcl fneni(8087 in lock cli add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop add je jg mov test (bad) leave iret aam add (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg mov mov xlat fsub out add add idiv add or push sbb and inc inc dec push push pop pop fs je jg mov test ret enter fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl add enter fucom call add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp or adc das xor aas inc dec dec push pop pop arpl jae jle mov mov rol rcl loope in icebp idiv add pop or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and add sub xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb add cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add adc sbb sub ss inc add dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push add arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop arpl add push (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop pusha imul addb mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jae add (bad) xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb add add lahf movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop outsb jne addb add fwait mov mov aad fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov rol rcl fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov scas mov mov fcmovu in out hlt stc incl or adc xor push push pop pusha gs jne addb movsl stos scas mov mov add rcl fnop in lock cli add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fildl add add in lock sti add or adc xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out icebp add cld add or push sbb sub cmp dec push push add insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz incb add or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb add sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods add into rcr fsubp jmp add push adc push and add add xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc add push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insl jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs add test movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg add add lods mov mov xlat fsub out repnz or adc xor push push pop pusha imul addb movsl stos mov mov (bad) fucomi icebp idiv add or push sbb sub cmp dec push push pop pusha gs add addb movsl stos scas add add add add fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into aam fsubp jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov add leave into aam (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov rol rcl fndisi(8087 out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) add add loopne jmp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test mov mov fcomp loop add out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in add hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock add cli incl unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and sub xor dec push pop pop fs je jle mov test mov mov fcomp loop in repnz add add pop or pop sbb sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or push sbb add dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or add sbb cmp inc dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and add xor aas inc dec dec push pop pusha gs jne addb movsl stos scas mov rol iret aad loopne ljmp unpckhps pop and aas inc dec dec push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor add add push push pop pusha imul add pushf mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jge xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push add push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl outsb jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul add add fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add add mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test add enter fsubp call add push adc push and sub xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov add rol rcl fnop in lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound jb add mov test mov mov fcomp jecxz add out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli add incl unpcklps pop and das xor dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add adc xor push push pop popa imul addl mov rol add xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or add add sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop bound jae jle mov test mov mov fcomp jecxz in repz std add or sub add cmp pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop add inc inc dec add push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jns orl test ret leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul add add stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb add add rol rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov add add fcomp loop in repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop arpl je jle mov test (bad) leave add into aam fsubp jmp add push push and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add add hlt stc incb push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and sub xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add add adc xor push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and sub xor push push pop pusha imul jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub add add add inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec add pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov rcr fucom call add or daa sub inc dec push push pop add bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb add (bad) xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add add lods mov mov (bad) fndisi(8087 out icebp idiv add or pop add aaa cmp push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jl xchg add add mov xlat fsub out icebp idiv add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods add mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa add ja (bad) xchg cmpsl lods mov mov ret rcl fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov add add fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out add add lock add or push sbb sub xor push push pop popa imul addl mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp testb add add or push sbb es cmp dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or adc sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add add pop sbb and sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push add insb jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push add add insl jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es cmp dec push push pop popa imul add add xchg cmpsb stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop gs jne jg mov (bad) xchg lcall mov aad loopne jmp cmc sti add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pop gs jne jg mov add lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul mov scas add into rcr fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add add enter fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out add add lock add or push sbb sub cmp dec add pop popa insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp testl add cld add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb jne lods cmp insl cmp jo lods popf push jns paddb inc mov ljmp jg inc and mov (bad) pusha sbbl push movsb mov fwait push popa cmp xchg mov and cmp mov mov mov inc sbb inc xchg fisttp cmp xor inc fisttpll or aam test in addr16 aas out push jecxz ds push dec xchg jno sbb dec sti insb sbb pop xchg out push pop mov out andb lahf (bad) xchg cs sbb sub add adc stc je lcall dec jle daa call popa ret sub cmp sub and aaa cmpsl cmp cmp test test cmp mov test cmp cmp cmp test mov test test cmp cmp cmp mov cmp cmp cmp test jmp test test test nop test cmp cmp cmp cmp cmp xor cmp cmp test cmp cmp test test test cmp cmp ret call test test cmp cmp test mov cmp cmp cmp test mov cmp cmp test cmp cmp inc cmp test test test mov test test cmp test cmp mov cmp cmp cmp test test ret pop test cmp cmp test test clc adc cmp cmp test cmp cmp jmp (bad) test cmp outsl jge iret sbb cmpsl dec pop mov inc (bad) inc add jae roll mov sbb push cwtl add call cmp test cmp cmp jmp test cmp cmp cmp pop test test test test test add cmp test cmp cmp cmp mov cmp test test test cmp mov inc cmp test test cmp cmp test cmp cmp cmp test dec cmp cmp test cmp cmp cmp test test dec test test test cmp test cmp cmp cmp cmp test dec test test cmp cmp test cmp cmp test test test dec test cmp cmp test test test nop test test xor test test test cmp test cmp test cmp cmp test or test test test test test test cmp cmp cmp call test test test test cmp cmp cmp test push test test test cmp cmp cmp test test test test jne mov test cmp cmp cmp test add test test test cmp mov cmp cmp test test add test test cmp cmp cmp call test test test test jmp cmp cmp cmp test pop test test test cmp cmp push cmp test test test push test cmp cmp cmp test push test test test cmp mov cmp cmp test test call test test cmp cmp cmp pop test test test test cmp jl cmp cmp cmp test mov test cmp cmp test sub test test test cmp cmp mov test test test test sub cmp cmp test test call test test cmp cmp mov test test test test cmp push cmp test test test mov test cmp cmp test push test test test cmp cmp push test test test test push cmp cmp test test call test test cmp cmp jmp test test test test cmp pop cmp test test test inc test cmp cmp test push test test test cmp cmp pop test test test test inc cmp cmp test test pushl test test cmp cmp xor test test test test cmp pop cmp test test test mov test cmp cmp test cmp jne test test test cmp cmp mov test test test test cmp cmp test test dec test test cmp cmp dec test test test test cmp dec cmp test test test dec test cmp cmp test push mov or test test test cmp cmp pop xor push test test test test popl test cmp test cmp test cmp jne cmp test test test test jmp test cmp test test test push in pop das cli xchg ret (bad) mov and scas ror and clc lahf stos adc push xlat add leave sub cmp or dec mov mov pop orb lret mov add (bad) out mov in mov mov jnp mov and fdivrs pop js sahf mulb xchg or rcrb xor enter mov jle movsb push inc or adc xor scas mov fdiv jo sub push (bad) xor mov out std mov cmp jb insl test cmp outsl jge iret sbb cmpsl dec pop dec bound add jae inc roll mov sbb push cwtl add push in pop das cli xchg ret (bad) mov and scas ror and clc lahf stos adc icebp mov test loopne push mov cmp test cmp cmp cmp pushl nop cmp test cmp cmp pop test test test cmp cmp mov test test test test test mov cmp cmp cmp test test push test test test cmp cmp mov cmp test test test test mov test cmp cmp cmp test mov test test test test cmp dec cmp cmp test test test dec test test cmp cmp cmp dec test test test test test cmp jne cmp cmp cmp test test mov test test test cmp cmp dec cmp test test test test dec test cmp cmp cmp test dec test test test test cmp cmp jne cmp cmp test test test pop test test cmp cmp cmp mov test test test test test mov cmp cmp cmp test test mov test test test cmp cmp add cmp test test test test mov test cmp cmp cmp test mov test test test test cmp add cmp cmp test test test mov test test cmp cmp cmp add test test test test test lods cmp cmp cmp test test test je cmp cmp cmp test cmp add cmp cmp cmp cmp cmp mov test test nop nop cmp cmp jne cmp cmp test cmp cmp mov test test nop nop cmp cmp jne cmp cmp test cmp cmp mov test test nop nop cmp push cmp cmp test cmp cmp pop test test nop nop cmp push cmp cmp test cmp cmp push test test nop nop cmp push cmp cmp test cmp cmp push test test nop nop cmp push cmp cmp test cmp cmp push test test nop nop cmp push cmp cmp test cmp cmp push test test nop nop cmp call cmp cmp test cmp cmp add test test nop nop cmp ret mov out rcll xlat add leave sub cmp or adc jmp lahf xor (bad) pop orb lret mov add (bad) mov in mov mov jnp mov and fdivrs pop js sahf icebp mulb xchg or popf cmp and xor enter mov jle movsb push inc outsb adc xor repnz mov fdiv jo sub push (bad) call sub push (bad) xor dec mov out std mov cmp add in mov inc or cwtl cmp jnp xor or sub and gs cmp or xor jae outsb adc jl add or ss adc insb mov pop pop cmp dec outsb add sbb sub cmp or adc or push pop out jae fisub jmp lcall out decb mov fstpt stc (bad) test cmp outsl jge iret sbb cmpsl dec pop mov (bad) inc add jae inc roll mov sbb push cwtl add push in pop das cli xchg ret (bad) mov and scas ror and clc lahf stos adc push push xlat add leave sub cmp or adc jmp lahf xor (bad) pop orb lret mov add (bad) mov in mov mov call decl lea repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz jmp stos xchg push movsb add adc mov cmc (bad) lea push std push ficoml adc mov fincstp lea push std jb adc lea push std jb (bad) std lea push std (bad) mov push std (bad) adc jb xchg xchg push std push xlat es xchg pop repnz lea stc divb std (bad) int jg xchg push je xchg std (bad) call cmc lea push std out jmp std mov push std lea push jbe xchg call gs sbb (bad) std adc pop repz lea sbb xchg push std mov std lea out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test out sahf test xlat lea push std add mov lea push int xchg jle lea jmp mov icebp mov jle (bad) fwait pop std lea fmuls lahf push std add push cld lea push std fldcw jle xchg sbb cmpsl push std (bad) clc adc out jmp std fldcw cmc mov sbb mov sbb (bad) loope repnz xchg add loop jl xchg adc lea cld lea mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov dec cmp mov cltd push mov std lea cmc lea sbb std lea pop std lea xlat adc push outsl pop repnz cmp lea pop std lea stc fs (bad) out xchg push je (bad) inc cmpsb xchg push movsb add push adc mov adc mov sarb mov (bad) in mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov mov cmp mov ficoml adc mov fnop lea pop stc fs std (bad) int inc mov popf mov jle fimull xchg push std add mov mov jle fmuls xchg push std add push cld lea daa xlat lea push std add add lea not lea push std add push cld lea out aam xchg dec adc add or lea adc enter add ss lea push movsl push xchg lahf mov lea shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb inc shrb jg jmp inc xchg push std push outsl pop mov xchg jbe jge push std in sbb icebp mov xchg push jl xchg adc (bad) loop inc mov dec adc mov (bad) jae xchg push adc xchg push std fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld inc test fld popf mov (bad) adc xchg popf mov fnstcw loopne xchg (bad) mov xchg push adc imul jbe xchg push movsl push xchg lahf mov (bad) adc movsb xchg push movsl fnstsw in xchg popf mov (bad) adc (bad) lahf mov lea shl adcl sub xchg push xchg jb push std or push cld lea pop std (bad) shr xchg xchg push std fs xchg cmp icebp xchg ret out mov adcl push jbe ret pop adc xchg push std vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd vdivsd or ficom mov int xchg lds xchg push std lea icebp mov adc adc push ljmp (bad) std push xchg lea jl out jle lea pop jbe fwait xchg cmp xchg jl fistpl fstp sbb (bad) push adc cmpsl faddp jmp stc jb jmp std lea fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop fidivl inc pop jl out jl (bad) push xchg lea mov jne sbb push add push mov lea popf mov aad xchg mov inc std clc fs xchg loop jbe xchg shrl enter popf stc test adc aad adc mov adc or inc jbe adc or add daa es inc test (bad) lds jb xchg cmp xchg push std push xlat push jbe stos aad lock popf mov sbb rorl je xchg popf mov push cltd xchg mov lahf add push pop je fwait xchg cmp push pop cmc push push push je xchg std add push adc xchg push std dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb dec push sarb push ficoml adc mov std xlat jg add jmp adc add cmp mov std aam out clc jno push std push sahf lahf cmc jb push add fwait jl out jl out jl out jmp (bad) jb push cld lea xchg gs jmp std aam pop cmc xor std (bad) int repz jmp mov jle out xchg dec adc add push lods gs paddw rorl (bad) int mov jle out xchg dec jbe lahf call xchg xchg push cmpsl gs jmp jb (bad) mov xchg push adc xchg push std sbb subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl subl push adc mov std xlat jg add inc adc fs xor (bad) iret popf std add scas std lea push jbe lahf pushl gs jmp jb popa stc push fcomps add push int xchg popf repnz push inc lods out lahf push push push adc mov outsl push repnz std lea jbe aad mov jmp std jb adc lahf jmp std lea es lea xchg mov jmp std lea xchg pop lea sbb cmp pop std lea pop lea popf stos test add (bad) popf mov dec xlat pop cmpsl fs std lea mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub jl push cwtl jmp fnstenv adc lahf jmp jle xchg sbb pushf push std push (bad) xor (bad) fidivrl xchg jmp stc push rcrb mov outsl push repnz sbb fwait push fstl fwait (bad) icebp inc xchg lea jl outsl push std (bad) icebp lods aad icebp sbb icebp pop daa jb push jbe adcl adcl stos xchg adc std (bad) adc (bad) lea jo je imul push cmp stos inc lea (bad) cld lea shl lea jmp jbe lahf jmp jle xchg sbb popf push std push rorb adc xchg push std icebp jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor xchg jl add xchg ds popf mov lea inc jbe lahf jmp add test xchg ds fcoms jbe xchg pop aad pushf popf mov jle in xchg dec adc jb push jbe lahf jmp jle xchg sbb sahf push std and std (bad) std push xchg lea push std (bad) std push jbe lahf jmp std lea push std jmp xchg popf mov mov (bad) aad xchg dec push orl push jbe xchg jmp cltd xchg push cmpsl gs out add push xchg test std jl das push std (bad) (bad) jmp std push rcrb mov xchg push std dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl dec push sarl out jl add xchg cmp mov xchg push jl imul (bad) les add (bad) jl out popf mov sbb inc mov push std add xchg ds sbb dec lea adc (bad) les add (bad) jl out lahf push or scas std lea push std lea aad (bad) xchg push scas push rcrb mov and std (bad) iret popf pusha cmp iret pop xchg (bad) std push lods jb mov stos test add (bad) jmp xchg push movsl out jl (bad) dec lea jmp adc xchg push std push ficoml adc lea std xlat jg or lahf js xchg push std sbb std lea pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs pop cs mov jle in xchg dec adc add xchg std lea jmp jbe xchg incl xchg push cmpsl gs loopne jb lock xchg dec scas push fidivrl jb xchg add enter out jl push fisubl out jl push enter push push jle imul lea adc jg or lahf mov push push push add xchg ljmp fwait xchg push cmpsl gs add push add in jl jecxz std (bad) les xchg push std lea stc push enter push push cmp xchg push std lea pop cmc imul sarl jmp std mov das les das les das les das les das les das les das les das les das les das les das les das les das les das les das les das les das les das les das (bad) ffree (bad) cmc pushf xchg push movsl out popf stos test stc jb xchg add mov call xchg push cmpsl gs jecxz jb xchg jno xchg push je push xlat add rcrb mov imul lea inc js jmp std lea push std push ficoml adc (bad) push std xlat jg or inc xchg or rcrb mov xchg jmp gs add xchg test call xchg xchg push cmpsl gs jb xchg orl push je pop pop std lea xchg mov push std add xchg cld lea push mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror dec mov ror jle jb push je xchg xchg lea pop std lea insl mov push cld lea push std mov push std dec cwtl xchg lcall sti repz adc lea (bad) repnz pop std lea sbb xchg push std mov adc lea push rclb es lea push inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc xor das scas inc mov push decl xchg jb xchg push shrb xchg std lea (bad) mov stos adc lea bound dec jecxz rol push sbb (bad) cli (bad) mov stos adc jns xchg push std mov pop std dec jecxz rorb inc cld lea xchg repnz and pop pop std lea jmp std in push cld lea mov pop std lea orl jl jb cs push jle lea pop std lea imul into adc xchg push std movsb mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov aas aam mov jle lea pop std lea imul pop add jle lea pop std lea imul repz popf jp xchg push std push outsl push repnz add out std (bad) adc add lahf push or (bad) cld lea push in lea dec cmc jb jmp std add xchg ds xchg push std fdivrp push add adc std lea jge xchg push jbe lahf jmp std lea push add (bad) std lea imul push cmc lea arpl out jmp std fs push std lea sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne pop sahf jne insb xchg ds xchg push std fdivrp pop add adc std lea jge xchg push jbe lahf jmp std lea jmp cmc jb jmp or mov out std (bad) adc pop xchg xchg push std push xlat es xchg in push jg adc test std shrl push std lea popf loope icebp popf jmp clc jl sbb mov icebp xchg roll (bad) jbe fwait xchg cmp xor std mov push std or push cld lea pop std (bad) shr xchg xchg push std push ljmp lea dec fwait xchg push movsl and std lea fisub (bad) call xchg push add call add call add call add call add call add call add call add call add call add call add call add call add call add call add call add call add call add call add call add call add call add call jbe fwait xchg cmp ljmp lea enter aad xchg cmp pop xchg push std add dec aam adc decl (bad) adc jo xchg cwtl jo cltd lahf jo pop loop mov scas cld lea sub xchg bound push fimull adc xchg std xlat jg adc popf mov mov jl jb incb (bad) std push xchg mov push xchg mov push std lea inc add fistp je adc in ffree jmp std add pop adc xchg push std and aas mov push and aas mov push and aas mov push and aas mov push and aas mov push and aas mov push and aas mov push and aas mov push and aas mov push and aas mov push and aas mov jle xchg push push std (bad) movl (bad) shr ffree inc jbe fwait adc int3 xchg push jbe stos pop and enter rcll leave test in mov jl dec je push sar (bad) xchg push xchg (bad) std push xchg mov push xchg (bad) call std (bad) xlat inc add fistp cmp jb pop clc aas (bad) push std ffree jmp test jle std lea jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out jl out lahf add lea sar test push jle xchg sahf loope adc (bad) jmp cs clc js jbe cwtl jo jne (bad) imul push adc lea std jle xchg jo mov adc dec xchg sbb jmp adc (bad) xchg xchg cmp icebp sar (bad) xchg push jbe fwait lahf add push cmc lea jl out jl in push std popf shr lds xchg add sub xchg cmp xchg std aad sar xchg push std push adc std lea push jne cwtl push jge lahf push mov fsts jg cld lea lahf add push decl sbb push mov lret push jle xchg std adc jmp lahf dec shr mov std (bad) iret (bad) pusha mov sbb sar (bad) xchg push mov adcl std stc lahf sahf loop adc jmp sar scas jle std lea or out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov out mov jbe fwait lahf add ljmp call stc lea jmp std jb pop add outsl adc lea lods or std (bad) iret xchg lds (bad) jmp xchg push cmpsl gs incl jb call std (bad) std adc jb lahf add push cmc lea jl (bad) push xchg lea mov popf xchg push movsl push scas pop mov std jmp ds (bad) sahf loop rclb ds mov jne cwtl sarb push push adc jbe arpl dec adc (bad) dec cld lea push cmpsb push mov std lea std lea pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne pop outsl jne adc cltd push std (bad) sbb je mov adc jb ds lea jmp std add xor lea push std fs std (bad) int3 popf out ljmp lea cmc mov lahf arpl push push adc xchg std mov push mov mov out addr16 push std lea inc loope pop popf mov push ret int3 lods or clc insl pop jle xchg arpl mov push stc clc lcall enter mov jbe push cltd push std (bad) sbb je cmpsl pop std lea rorl std (bad) icebp popf leave test and std jmp call je test jmp xchg cmp adc incl ds lea pop std lea mov mov push std push or cld lea xchg mov sahf loope (bad) push popf fs std lea and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret and lret jl xchg jbe lea movb push std push sbb cld lea push mov xchg push int3 push icebp popf in push adc or mov mov and lea insb add xchg pop (bad) notl std add ss push aam in xchg push je mov cld lea aam lea popf mov xchg fmull push sbb loope outsl adc popf xchg push cld push push rorb push push leave adc xchg push std and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and popf stc xchg sbb fcompl dec aam adc cld clc xchg lahf push add sbb dec xchg arpl (bad) loopne jbe mov ja stos decl mov pushf scas mov (bad) mov add (bad) sbb (bad) push (bad) cld lea push in lea adcl push cmpsl push lret xor dec xchg scas mov lea push jb inc cwtl in repz (bad) loop jae (bad) fidivl loop outsl std gs add push std lea cli add paddw xchg push jbe push fdivs lahf lahf repz fistp je xchg popf mov mov incb push push fs mov xchg push push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov adc jecxz jb loope (bad) addr16 push push (bad) (bad) clc fs repz gs add jae jecxz jp mov push jae jmp loop xchg (bad) bnd (bad) out push adc fdivp bound jmp jns lea and push arpl loop push adc ret jecxz (bad) in jae in bound loopne test push jg out jns jecxz push adc xchg push std unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps unpckhps dec imul nop in out xchg call bnd in js gs cmc add bound jecxz bound in repz adc ret jecxz (bad) cwtl fcos fs in repz test push jae enter stc xchg (bad) stos outsb push jp loop ja call loop xchg (bad) bnd (bad) out push adc xchg push std inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop (bad) inc pop fistl ret jecxz cwtl (bad) loop cwtl fcos fs in repz adc ret jecxz cwtl stc aam xchg stc repnz mov jmp repz adc ret jecxz cwtl stc aam xchg stc repnz mov jmp repz adc lret mov jecxz pop xchg jecxz inc std gs incl jb jae fucom jns call movl lea pop jb push cwtl stc shrb stc aam cltd call repnz push bound call jg adc push jno call hlt jae (bad) fdivrl loope js cmc (bad) (bad) std fs pop std lea adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc sti adc icebp add jae clc lock sahf stc (bad) pusha cwtl fucom jns call xor add jg stc loop xchg fucom jns call xchg (bad) scas push jmp mov cmc fs (bad) out push std gs ret add jg stc loop xchg int3 sti jp out shrb fs push std (bad) xlat push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push mov int push adc (bad) jg lret clc fs enter stc xchg (bad) insb push bnd call jecxz test jmp push inc (bad) loop push cltd jmp xchg (bad) cmp jmp (bad) in fs stc out push xchg in in std gs les jb jp call jo add clc js in arpl ljmp adc into in pushf stc repnz xchg loope inc std gs add fs stc repnz xchg loope push adc into sti jns call sti jae gs clc add pop mov call hlt bound ficoml push fwait jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp jo jmp xor jb inc std enter fstl ret in cwtl loope and or push jg call (bad) je stc repnz lea sub inc cwtl in repz xchg loope push adc fdivrp jae loope outsb cwtl out loop cwtl ficoml jmp xchg jecxz inc pushf stc lcall loopne inc std gs ret add jae loopne js stc repnz (bad) loop jae (bad) xchg (bad) (bad) pop push push xchg loope inc xchg div push adc lret test in jecxz stos lea cld lea test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor test xor or push (bad) js push push (bad) (bad) clc fs repnz repnz out (bad) lock jae lods shlb pushl loope sub into in pushf stc repnz lahf out jne movsl mov scas out in (bad) stc mov jp movsb lcall lods stos ss fcoml rol jns stc loopne (bad) xchg out in mov icebp bound loop mov call in xchg loop dec scas clc stc pop xchg out repnz std gs add sbb (bad) jle in jp mov in mov mov test repnz shrl push inc mov scas lcall call loop (bad) push push adc lea stc add push std lea sub push std lea jmp adc lea pop jb dec fwait in jae in cli jae call push incl jb gs icebp jns jmp sar jb jae in bound hlt mov pushf loopne push adc clc lret mov or out fist adc mov jg es push std lea jmp adc inc sub std mov gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs gs add add in cmp jb xchg nop xor and rcrl jmp rolb rep gs push out sub and xchg (bad) enter mov push xlat dec repnz lods ds scas xchg das in int cwtl jne incb loopne pop sub and inc hlt clc cmp add xor sub fldt add inc popa sub (bad) popf mov test dec fidivl (bad) push in shrl lods je xor or mov xchg int3 fstpl mov jp stos mov stc fwait out xchg lock cmc rolb sbb xor mov lcall cltd ret mov cmpsb aam leave push adc jae (bad) lret pop lret mov pop inc fstp test and jb mov or and sbb push jmp adc mov gs sub outsl cmp fstps enter mov push xlat ret repnz xchg sbb aad lahf cwtl das in int ret loopne pop sub and and clc mov mov xor inc rorb insl out pusha aad adc (bad) popf inc jecxz (bad) loop mov fisubrl jo loope movsb lods stos push xor xchg inc pop mov xchg xchg cltd cmpl mov call stc jp xchg mov or cli push lock sbb xor mov mov lds ret mov cmpsb aam leave push ljmp sti bound pop lret mov pop inc or addr16 mov pushf xor sub cmp sub into icebp ret or xor dec pop stos inc je (bad) pop sbb cmp stos cmp shrl out jecxz xor mov int mov push in mov mov jae jns inc mov fadds fs cld and pusha push lods push lea dec jg sti xor dec mov scas leave faddl push add int3 or push outsl repnz out add push int3 lret ffree sub aam dec jb mov (bad) mov std pop push fiaddl fmulp xor sbb sub ucomiss (bad) lock rorb xchg (bad) out push ljmp mov ret notb repz ds test jmp and jmp or jge imul clc adc push xor xlat and sub icebp cmp repnz xor adc adc sbb cmp out jecxz sarl xor int mov cmc in mov mov add inc mov inc and pop test and pusha push scas push lods pop dec mov sti lea jg dec xor scas mov add int3 or out out push repnz ffree int3 xchg jno pushw aam mov daa lods movsl decb pop mov std mov ficomp rolb inc lret rcrb adc sub sbb push lock rorb cmpsb pop add out push xchg (bad) shll push mov mov and (bad) or repz ds test xchg sbb jmp ljmp imul clc movsb pushf outsb addr16 mov push xor sub cmp xchg into adc or xor dec pop sbb pop scas jl sbb lret repz xchg sbb push pop in jge out rcrb push (bad) xlat outsb and mov and cltd insb shrb xor test jnp int jb addb mov sbb lahf adc push into fldl jmp (bad) sbb adc jne adc in jmp dec mov aad inc lret hlt pop insl xchg aaa rol push fld cli mov lock push mov icebp sti dec fstpt dec xor (bad) je cmp and pusha jb jle (bad) xadd icebp push push loope (bad) fcmovu add jp push ficom jo adc or leave enter dec cmp inc inc or sub sbb mov mov iret jno pop ret pop inc dec adc adc sub push inc xor gs das scas jl sbb lret repz or add push pop xchg jge xor pop in push fsubr xlat outsb es fiadd mov and pop insb rolb bound xor sbb in jne mov add lahf adc push imul into jmp and jmp pop jne adc in jmp dec mov aad mov hlt out xchg inc rol pop fld aaa mov cli data16 ljmp icebp mov xor (bad) je cmp imul push cmpsb jle (bad) (bad) or stc push loope (bad) ficoml hlt es fcoms jo adc ficomp out or jns leave mov cmp or sub pushf les xor jno pop ret testl sub adc jecxz sub lret xor das push pop scas pop (bad) sbb lret repz xchg sbb fsubr shrb push push (bad) mov rcrl add bound xor bound mov pop mov out dec mov ss or pusha out (bad) push inc lret cwtl inc or dec loopne mov (bad) xor ja xor fiadd push push aad nop cmpsl stos imul divb mov pop repnz cli cltd sbb dec and orl cmc push sbb push xor add mov enter add sub js push inc clc jne and cmp sub jg ljmp ret sub and dec lods mov (bad) xchg jae in lock imul dec dec je in push (bad) push mov rcrb jmp push jo cmp lahf lods adc jnp aaa std add popl das andb inc jecxz mov int mov pop sbb mov bound pushf xchg out ds pop mov lret into dec gs mov ret out (bad) movsb inc lret pusha inc or dec loopne mov push xor xchg dec xor fiadd push push or nop pop stos imul mulb mov cli in fldcw and orl cmc adc insl cld pop outsl push xor xchg lea jns add (bad) xchg enter xor sub js add sti cli and fwait add add xchg or ljmp ret arpl roll and mov scas test hlt push fnsave test lock imul dec leave je push push (bad) dec mov rcrb jmp notl push jle lahf lods push repz aaa std adc popl das add inc inc jecxz mov es mov sbb (bad) bound mov lret into dec mov ss or pusha out or inc loopne inc cmp dec sub arpl mov es rclb (bad) lret sub pusha sbb mov aas sub xor mov sbb or or lods inc mov cmp dec xor inc and sbb inc ss sbb mov insb sub dec dec mov clc dec repz dec xchg and (bad) fldl int3 fnop pop pop jb iret repnz adc add xor insl call out xchg mov test fwait out popf sbb dec or mov jae lcall addr16 dec and mulb add inc adc (bad) lods mov add xlat pop (bad) aaa (bad) mov leave mov test push push out fildl (bad) stos adcb ds sub pop lock dec xchg outsl push sub arpl es (bad) mov lret sub rorl add sbb mov mov sbb lea or lods jle cwtl or out cmp and dec sbb inc sbb mov and and sub dec lahf nop or cmp repz dec xchg inc (bad) (bad) ffreep pop pop push std iret enter mov repnz mov push xor imul mov out mov or mov jae sahf das mov addr16 push and scas data16 mov add lods adc aam movsb andl mov daa roll stos ljmp push stos xchg fnclex stos sub pop les andb add dec mov push lock arpl mov lret sub (bad) mov js pop pop sbb mov mov cli outsl push xor lods cmp sub int3 sahf xchg mov rcl fistp jo imul inc xchg cmp arpl inc mov js dec jne push mov sub fidivl insb adc pusha insl std mov in out out xor lds shrb lods jae jb lea mov xchg xchg push mov fisubr fstpl mov jns stos mov clc fsubrp xchg xor dec ja push cmp xchg test data16 cld stc mov (bad) mul xchg push fildl loope cs js mov movsl lret aas in or xor test xlat test addr16 lock jno mov dec dec pop rcrb stos push icebp ss sub test daa cmpb xchg sbb fnop pop (bad) mov mov lcall cmp sub fwait sahf xchg jno inc int3 (bad) mov jo imul inc and cmp arpl inc mov js (bad) inc mov push mov add sbb pusha insl cmpsl mov in add jle xchg push out adc xor and push jb lea jae xchg inc push mov enter mov jp imul clc jns xchg mov dec fidivr push xor xchg inc cmp test data16 cld stc int push hlt pop les add loope das jmp cs or psubd in lret aas pop test test mov (bad) lock jno mov je pop sbbl push icebp shl ljmp sub xchg xor cmp pop sbb (bad) sbb dec push sbb cmp lods aam scas xchg jno inc int3 sahf sarl rorl push pop pop inc and mov push xchg mov arpl fildl js dec jne push mov sub and or lods or inc ds in mov (bad) xor push lret leave loopne fadd sub stos rol dec mov mov std mov inc ficomp int and mov notb mov pop ljmp add and jp in pop xor add imul xchg loope stos inc les loopne in dec test jb mov out sub push xor jg and sbb jle sbb (bad) sub cmc repnz fimul jbe inc fcmove daa loop add push pop addl ret aas dec cwtl sub sarb insl dec lods mov pop push push aas mov sub dec inc (bad) xor popa nop push stos js push push add pushf mov mov pop jmp cltd gs fcmovnbe push jle lahf (bad) mov sbb test xchg pop cmp xor mov ja lret loope sti enter cmpsl pop test gs xchg popf test and and sub add shrd lea jecxz (bad) inc (bad) lock xor rcrl mov je in bound out mov mov shr (bad) mov dec jo ret jo cmp ret cld pop outsl mov mov frstor rcl sbb mov insb daa adc les jne cmp and or dec adc pop adc mov lret insl inc pop mov das push and mov mov popa nop sub js push push push (bad) pushf push out mov add mov into cltd jmp push jle (bad) mov sbb inc (bad) xchg xchg cmp test hlt pop xchg xorb ja lret loope mov test and push pop push xchg inc test popf cmpsb cmp sub pop sub add shrd outsb call loopne mov roll imul dec sbb bound out in xor mov sbb dec jo ret jo cmp ret cld pop push mov outsl dec xor add mov xor ficom sbbl imul inc add ds scas cmp or dec cwtl rolb mov lret insl dec pop mov das push push sub mov xor popa push push stos pushf push push mov add mov dec cltd jmp push adc fcmovnbe mov jle lahf (bad) adc mov int3 jle scas adc cwtl xchg mov pushf aam movsb roll (bad) sbb inc xchg jne leave mov mov mov pop aas (bad) xchg (bad) dec dec inc fistl and das push fnstcw sbb or lods iret mov lock arpl loope mov push in insl cmp xlat pop aam sbb pop push (bad) push cmp out nop sbb sub sti xchg jae lcall pop push std fsubrl mov push inc repnz bound mov addr16 pop rclb cmpsb daa fwait inc pop push popf jge loopne stos mov outsb int adc addr16 ja ret jb xchg inc dec inc outsl popa out rorb push xorl mov js dec insb jns cltd test out mov repz sub fnsave mov pop jle cwtl adc adc add (bad) aaa leave inc pusha mov mov lahf aas (bad) pop (bad) dec pop inc fistl and jno,pt or lods iret sbb mov mov cmc ficom aam sbb pop mov push aad out push sbb sub popl sti sbbb push sub push mov std inc repnz bound mov xor mov in rclb cmpsb daa into inc pop sub push mov outsb int adc lea ja addr16 sub popa xchg push rolb out mov lret ss out xsave and test out mov repz roll fnstsw mov pop jle cwtl adc adc add (bad) sbb inc xchg sub movsb sbb imul gs mov dec jmp pop xchg lods sub stc out cmp test int3 adc lds xor test pop push (bad) jb mov divl mov sub cmc loope cs lret pop push mov add jbe mov add cmp mov jno inc push sti adc (bad) (bad) je pop rcrl stos stc push ret pop cltd stos add mov add out js dec (bad) push fadds (bad) fcmovb popf push insl clc leave in in or lea test xchg jcxz xorl imul ljmp inc enter xchg enter sub movsl push dec sbb pusha mov test in sahf out xor mov (bad) xor out or in push call movsb nop mov sbb mov imul popl lods dec es pop cmp sub int3 out rol xor adc orl pop test pop push divl repz mov sub cmc loope divb push mov lret scas jbe mov add cmpsl jns xchg add loop jns push sti mov (bad) inc je adc pop (bad) stos stc pop ret pop push stos push xchg mov out js dec movb jg fsubrs fidivrl leave ret insl lods (bad) in add xchg xchg outsb mov popw loopne mov xchg ljmp fcmovne das into rcll sub movsl push sbb adc pusha mov test in push out xlat lahf jnp jno xor xor and out call movsb nop aad jmp pop out mov mov lcall jmp jge inc dec inc in mulps movsl adc loope sub enter and pop push adc pop rcll dec rol inc lock xchg push mov dec push jmp xchg test (bad) cwtl aad and pop mov xchg push stos xchg mulb (bad) xor js xchg sbb repz lret xchg gs adc stos xchg std popf in jno (bad) (bad) loop jae sbb int3 mov cmpsb mov insl addl add lock xlat xchg jne mov sti jbe out fs call out cs dec jno dec xor vpunpckhwd pop adc jo out div fwait mov icebp fist js inc fcoml pop pop or mov mov fdivrp push lcall ret test ljmp dec inc sbb pop inc movsl adc xor in push inc enter and pop xchg adc jp pop push rol inc lock xchg push add dec pop jmp mov xchg cwtl aad and pop mov xchg push stos xchg cltd popa ds mulb js lret sbb jle lret cmpsl gs and seta sbb cli loop je sbb push add sub lods mov mov add mov scas sbb ret xlat xchg (bad) mov or jbe out fs call out lods clc dec fnstcw dec cs imul push (bad) pop jo jl hlt or mov (bad) add js push fcoml pop pop sub or mov fdivrp or push rol mov or bound jge inc dec adc psraw movsl push inc xor mov pop xchg sub push adc pop (bad) lock rcll inc dec pop xchg jnp xor push jmp mov cmc mov out (bad) inc cli fistpll and leave push pop xorl add movl mov xchg xchg mov pop sbb fcoml xchg lods in int aas jae mov (bad) (bad) mov mov inc scas and adc sub xchg xchg aam inc sbb outsl push adc jg lret fsubrs or sbb xchg pop pop push jmp jle les (bad) fidivr and add jno xor sti jnp add sub rclb sbb (bad) lahf es cmp or stos iret (bad) lock mov popf shll or push lds arpl ret lcall push aas jbe int3 jp aaa insb loope and aaa mov stos push outsb ja fwait mov out mov out cmc rolb fistpll and mov mov sbbl mov pop adc xchg jmp popl test ljmp mov mov mov sbb enter or fcoml and dec in ret fstpt (bad) mov mov repnz and adc aam inc sbb outsl push adc or fcoms stc or pop imul mov xor nop les sbb je adc mov mulb dec cwtl add xor daa jnp mov rclb mov (bad) sbb mov fisubrl mov popf shr push pusha lds or jo call lcall repz jbe out adc and aaa or stos leave out ja out mov cmc mov out (bad) and fbstp mov push pop (bad) mov pop adc xchg jmp popl sahf fldl2e cmpsb inc movl fchs test pop jmp and mov pop sub mov push out cld popa xchg (bad) in scas clc enter adc inc (bad) out pop push sbb add (bad) dec cmp addr16 stc xor sub in cmp or mov jl push rcrl inc lahf mov mov dec xor sbb inc xor imul (bad) dec popf push or mov test icebp and dec fldt rorb lret pop adc dec lock pop mov cs and out test jecxz arpl mov or push inc mov jno cwtl sub lods fs (bad) hlt arpl sahf stos adc xlat jg jmp cmp mov and mov cmpsb cli in data16 fnstcw test loopne cmp sub (bad) mov pop sub dec popa xchg insl out cld scas clc fild iret adc enter push pop aam xor dec sbb cmp clc mov sbb mov pop mov jl or pop stos inc lahf push in pop ss mov xor add add sbb xchg sbb mov push or mov cmc push icebp aaa ds test rorb lret pop adc sti int mov pop mov cs lcall jecxz xchg mov arpl in fwait adc inc mov pop (bad) push lret jno cwtl sub lods adc ficoml hlt arpl sahf std adc xlat stos pop jmp cmp mov xor mov cmpsb cli or gs aas fisub cmpsl push ret cmp sbb bound sub mov pop out dec inc xchg insl push in popa clc (bad) repz scas (bad) enter adc inc movb insb cmp (bad) push pop xchg mov lds rorb push cmp (bad) pop stos rcrb aas lret jb inc loop (bad) imul movsl push pop fwait (bad) out cmp in test into dec mov jp jne gs or pusha out dec popa inc loopne xchg dec daa xchg mov (bad) je jbe push or sbb scas sbb cmp out xor (bad) imulb sub and shll stc push sahf pop or push and test fcomps inc shlb mov jae mov mov inc add loope mov mov lret pop sbb jno mov divl ljmp xor sub sub inc insl xor xor rcr aaa pop push sarb or repz in and dec sar push fdivrl push add pop dec ret ret jae ss push inc add xchg daa test mov sbbl mov pop or mov es aas lds sahf sub xor push test iret adc add push inc in dec xchg adc sub push out xchg int3 push pop adc fcom push cld scas (bad) sbb lea xor popf nop jle out jne (bad) push insb fistpll movb and cltd packsswb fwait fs xlat jge movsb cmp jo adc sub fsubp jecxz imul into jg (bad) mov lret mov mov divl ljmp xor inc aad inc sub shrl xor fstps cli pop insb mov mov (bad) rcl sar in je dec fcoms push push cmp ret jae ss cmp lods fnop push xchg daa xor mov int mov stos pop icebp leave imul push cmp or or mov sahf and ja pop mov test xor push les in dec add std inc dec push xchg ja sub push out (bad) jmp or cld scas push sbb lea xor pop nop jle out jne (bad) push cmp jp movb and adc loop xlat jge movsb cmp jecxz sbb in add or sub jecxz imul into jg (bad) mov mov mov sbb hlt pusha and in ljmp inc aad inc sub shrl xor rcr cli pop push mov insb add repz fstpt in and dec rclb push push cmp ret jae ret pushf cmp es inc push cli fwait data16 movsl mov (bad) cmpsl lret jle jmp adc or jne shrl std mov dec scas dec adcl push or dec push or aas xor clc icebp iret ds fstpt ljmp lds dec push xchg mov lcall sbb inc test das xor add pop call nop cmp (bad) xor sub outsl inc sub incb into stos mov out stos popa in cmp cmp xchg adc inc sbb jnp or push cmc dec in dec adc push sub stc test jno cwtl cmp sub fldenv jo push inc lock repnz xchg cld pop divl inc add and ja loop pop rclb pusha and mov movsl mov (bad) cmpsl mov insb lret fstl jmp jne shrl std inc inc insl pop in mov jg je xchg out xor jecxz arpl dec push or aas xor clc icebp mov pop daa js iret pop cmp mov ljmp dec push adc xchg mov mov lcall xor das (bad) outsb mov addl negb add inc fcoms and cmp incb add mov mov lahf popa in cmp cmp fcoml daa sbb jnp imul rorl or gs push addr16 sub lea stc cmp jp rcrb or pop sti inc lock repnz xchg cld outsb divl mov cs and loop and xchg imul cli sbb mov push mov movsl cmpsl mov insb lret jle jmp jne fs sub gs jg insl fisub mov sahf into imul xchg add adc (bad) mov or sub sub test js sbb pop pop sti cwtl cmpsb or int sarb in xor mov or pop mov loop cmp popa movsb (bad) mov jle and js and pop clc mov push bound enter pop (bad) addr16 and test lret ret push das and pop adc jo inc pop mov xor bound and fwait push sub test push lods je outsl dec add movsl cmp xor inc sub aas sbb adc cmp pusha sbb mov jge xchg and inc inc mov add jnp inc in jne inc andb mov fadd push push imul jmp or std xor sub gs jg push fisub mov insl into imul push mov cmp push (bad) insb mov or pop dec inc sbb out pop js cwtl cmp ds aad cmpsb pushf in xor mov iret push jp mov pop mov loop push out jle and js pop ss jecxz pop and (bad) clc scas enter inc (bad) addr16 and pop aaa push daa in lret ret subl bswap addb pop cmpsl cld jo inc pop adc mov sub hlt jae push lods je outsl dec add movsl ja xchg add loopne xor sbb inc adc aas cs adc sbb and inc xchg mov add mov jne inc addb xchg data16 fdivrs mov mov std xor test loope sub arpl mov mov aad jae bound jno mov dec sub jg cmp (bad) jle and and add insb je add add add add add and add add or test add add add sbb add add add push add fimul add and add add and test add cmpsb sldt sub add and add inc add add add add add add add add add add data16 add add js cmp shl iret add jae or add test add cmpsb add (bad) dec add cmpsl xor inc mov add shrl daa mov add cli in add (bad) pop add dec add movsb and cmp jle jbe jbe cmp out pop jnp add xchg and cwtl out lods add movsl inc add pop add je inc lret and orl lds and xor add scas hlt ret lods inc add lock icebp push add add add addl lahf les add pop add stos adc add add adc xor or push add add xchg sub mov sarl add cmc jp adc add mov add js es pop add add imul sar add popa add mov sub add (bad) add xchg or xchg add jge add mov add jge pop nop pop add lods add test add (bad) incl adc add inc add dec add imul in mov add (bad) add bnd add push add mov add jl add stos sbb add mov add mov add lods and inc mov add mov aaa mov add push rcll jno add bound inc jmp sub sub dec add nop add cmpsl pop add shrl and jnp pop imul or push add pusha add mov sub sub cmp push les (bad) push add add (bad) aaa add bound adc lea or add mov add mov popf add scas xor inc fisubr sbb sub adc add cli aam cmp push add jb add (bad) pop add jns push (bad) jne mov push add jmp add jl add scas sub xor sbb test xchg sub dec add into dec add movsl sbb inc lds popa loopne add mov xchg add mov mov add cwtl adc and inc add jmp add jle jnp jnp dec lret sbb cmp push test add mov add jo dec mov iret add scas inc add mov sub sub js out (bad) out add movl int3 data16 pop add imul fcoms adc and idiv testb mov add inc add jns add cwtl xor push int3 pop add rolb mov sub push mov add mov sub jle sub sbb sbb test mov dec ljmp sub add cmpsb inc add xchg and and sbb sbb xor add lret dec incl pop xchg add dec add push add into add out mov add mov cmp sbb add fstps xchg add mov or add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add insl add add add add add add add add add add add add add jp aas aas aas jp insl add add add add add add add add add add add (bad) fidivrl aas jp add add add add add add add add push mov outsb adc jp insl insl add add add add add add into xchg aam (bad) ja mov xor adc cmp cs add add add add add add add mov inc inc xor jp add add js add add rcl or push mov sub test add nop aas jp add add add add (bad) div sarb or int pop les mov insl insl add add add add iret pop (bad) mov mov jle ret pop add sub add add add add jg and dec sub inc int add pop lea add add add push jb xor out test lret rorl mov jle cmp add add add pop out ret pop sbb lret rol push xor pop mov add add mov ret jae jbe rcrl jne ret (bad) mov add add mov mov popa add pusha leave xchg ret ret sbb insl add add xor enter push adc adc adc jne mov push fsubrs add add xor inc lods mov rcrl xor fsubrs add add mov imul popa add fwait fwait arpl xor leave bound mov add add add (bad) in cmpsb lods lods mov lcall pusha leave xchg add add add or fwait xchg inc (bad) (bad) lods sub rol mov xchg add add mov cmc fdivrl jns and inc (bad) cmc jo pop test xchg add add add add lret stos ds dec dec jns mov pop test aad add add add add add push mov fdivl enter test pop xchg add add add add daa push cltd je jno,pt lods testb aad ss add add add add add add xchg mov sub lods in in jae jo jl xchg add add add add add stos adc icebp test mov adc add add add add add add add mov arpl push pop add add add add add add add add add inc int3 int3 int3 int3 mov xlat jg add add add add mov add add add add add loopne mov xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push pop (bad) incl add cld add jg add aas clc add pop lock pop loopne add loopne add loopne add rolb pop rolb add add add add add add add add add add add add add add pop loopne add lock pop clc add psubb add cld add pop incb add incl add (bad) clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add insb add or add outsl push add jno add jo add ja add jo add jne add adc add jne add sbb sbb jl add jg add (bad) or add cltd push add mov add (bad) adc add cltd sbb adc pop add adc push stos sbb adc pop add test sbb lods pop add andl and daa add mov add mov add mov add xchg and and sub add lea add xchg xor and cmp xor add xchg cmp cmp cmp push scas and sbb and sbb add mov and das test add mov add mov add cmpsl xor sub xor xor movsl cmp cmp add mov xor add mov xor ss add mov add xor add mov inc add inc add stos dec add inc add mov dec add dec add mov add push add inc add inc add inc add pop add pop add inc add dec add inc add dec add dec add add dec add add push add push add pop add pop add add pop add outsb add imul cmpsl outsl add add jo jns jns jnp jg jbe jp sub inc add inc add enter lret dec add inc add rolb rorl les xor dec add rorb xor dec add lret push add rcrb aam add fistpl cmp pusha add loope add mov add dec add dec add push add push add push add push add add pop add pop add pop add pop add pop add pop add add imul push shll pop shll push fildll pop lret pop lret jl popa (bad) bound (bad) leave bound push imul int3 insb add imul outsb aam add jge jno jb jb jne jbe ja jae ja jns jns jb jle jns jnp jp jge jl jge inc loop add je dec in jne dec out jns push ljmp push icebp jg pusha loop add xchg xlat mov jno addl jno lea jnp xchg add lcall stc mov fs add addl jne popl jns xchg add lcall mov add rorl sbb xchg mov mov mov mov mov xchg add fstps add loop add loopne add jecxz add in add fidivrl add cmc stos add divb add lods add mov stos out mov add repz movsb std mov add hlt int (bad) cmc les (bad) add jmp add not add sti roll enter (bad) not add cli (bad) add icebp fldl (bad) fiadd loope loopne jecxz loop call (bad) jmp add std in add (bad) lock (bad) incl add mov add or add pop and xor es or pshufw add sub movsl test js pop pop add inc xchg stos rcr (bad) xlat int3 test pop add add add add xchg test lods test cmpsb lods lret int sahf inc or add add mov lahf lods lods xchg aas push push add add add mov loope dec dec lea insl add add push jns ja inc daa (bad) (bad) std call sahf nop cmp sub add add cwtl jnp jne cmp jns sbb adc add add dec movsb jle jbe imul cmp pop dec adc add (bad) adcl imul in xor dec cmp add add add lcall sti stc mul jp push cmp pop add add add ret scas push jno sti stc out cwtl aaa xor add add iret mov js mov push enter jae ss add add add mov imul xor adc add add add mov mov xchg test inc inc dec sbb add add add mov test inc push and mov ret mov js and add add add add mov in jmp rcll add pushf xchg adcb addr16 add add (bad) incl (bad) (bad) incl incl incl cld add add add add add add add add add add add add add add add js add add add add add add add add add add add add add add add add add add add add add (bad) (bad) incl (bad) (bad) incl sub add and add inc add add add add add add mov js add adc data16 add add stc add incl addr16 add leave add popl add data16 add add add or imul enter decb insl or push outsl push decl jo decl outsl or incl push add add ret add add push outsl or outsl or or (bad) adc (bad) and daa mov ljmp ljmp mov jmp and sbb sbb adc decl insl or add addr16 add fiaddl data16 add add add or push jne (bad) sbb sub decl lcall pop jmp (bad) jmp lcall pusha call push decl js aaa mov and decl insb or add incl data16 add test add add adc jp jmp mov (bad) cmp push ljmp insl (bad) jle cmp loopne call jecxz call fisttp ljmp push push rcll cmpsl cmp and adc add addr16 add xchg add mov push jnp inc adc sti and sub inc mov lcall arpl jp jge mov (bad) call out lcall call popf lcall cltd call fiaddl decl dec ljmp xchg sub adc adc push push incl addr16 add xchg add add jg or sbbb mov (bad) ds lcall (bad) pushl jp test mov xchg mov test xchg jle cmp jl jle sbb incl loope call xchg decl (bad) jo dec ret dec ljmp jne incl mov add add add sbbl xor ljmp outsb pushl js outsl (bad) jne shrl pop int decl dec incl inc (bad) aas mov inc decl js arpl pushl je sbb decl xchg jno jno dec ret sub (bad) add incl data16 add sldt add push jnp push adc cwtl xor les push int lcall lcallw popa decl push (bad) cmp inc ljmp mov inc pushl mov pushl mov (bad) cmp xor lcall pop ljmp jno sbb (bad) jg jg push mov pop mov add incl add add adc daa (bad) sub dec decl push decl push (bad) cmp dec ljmp sarl and xor or incl out fdivr iret in iret dec lock js ret pushl mov lcall lods and das mov incl inc jmp arpl ja ja jae jae pop (bad) pop pushl scas xor adc incl data16 add enter or add add mov sbb inc decl pop pushl (bad) dec pushl ret aas jmp cmp and adc (bad) (bad) (bad) (bad) push push push push (bad) in (bad) in incl dec decl cmpsl adc push test daa (bad) ds pop ljmp jmp (bad) incl inc lcall push incl data16 add inc adc sub sbb imul lret movl lds daa les jmp enter xchg and dec mov push (bad) out (bad) out (bad) jmp jmp lcall push decl test sbb and inc lcall pop lcall pop incl inc jmp je incl gs add mov add add cmpsl xor mov xchg ljmp inc ljmp lret sub inc ljmp dec ljmp dec lcall test jmp stc out out (bad) out (bad) call (bad) jmp decl mov call lods sbb call test ljmp mov incl inc call push mov sub adc add incl gs push nop sub jmp int3 dec ljmp int ljmp iret dec ljmp int3 dec ljmp leave dec incl pusha pushl mov cs in push push (bad) js call decl mov lcall mov call scas and adc and xor incl inc ljmp mov call mov incl addr16 add hlt pop xchg xor push mov ljmp rclb rcll xor lds or adc lahf les (bad) in cli in (bad) in std in (bad) in (bad) in jmp jmp jmp jmp call cli aam mov out mov ljmp mov call cmpsl pop jmp mov cmp and and incl push add sbb cmp mov mov pushl (bad) push (bad) cmp pop (bad) cmp mov sbb mov (bad) (bad) push push (bad) in (bad) js out out jecxz jecxz loopne loopne jecxz jecxz out in push stos adc adc and sub das lcall lods pop decl mov incl push incl gs sbb cmp test mov test cwtl ljmp fcoms fisub aas loopne incl insb jmp mov ljmp jl call in (bad) cld (bad) cld (bad) jmp jmp out out jecxz jecxz fdivrp fdivrp in jecxz and decl mov call mov call stos sbb pop stos sbb jmp lods and adc mov incl imul push mov cmp test xchg (bad) mov fbld loop,pt incl insb incl decl je and (bad) cmp fnop (bad) js repz jmp jmp jmp (bad) ljmp jmp (bad) lcall das call mov call scas sbb call test decl movsl adc or push incl data16 and cmp dec int3 addr16 (bad) call (bad) cmp imul dec jmp decl je dec icebp jbe and dec jmp mul (bad) out (bad) out (bad) in (bad) jmp mov int lcall ret cmp and sub adc and adc adc push cmpsb adc or or add push incb add add add test dec pushl cld fcos inc in je dec out js dec lock dec out jnp dec out js dec in je sub arpl out std out call cld xlat decl (bad) jmp inc ljmp movb mov sub adc stos pop decl cmpsl adc pop xchg or add outsb pop iret add push and scas inc fstl jne idiv cmc jmp repz dec cmc cmp dec icebp jge dec lock inc out ljmp scas inc (bad) jle xchg ljmp (bad) ljmp rorb das into dec ljmp movl sbb sub mov push lods sbb incl xchg incl add add mov push and test (bad) (bad) (bad) lcall sti test dec stc test push hlt cmp js jae inc call pop pushl push pushl push ljmp into dec ljmp movl adc aas decl push decl lods push decl cwtl adc or incl jne flds push or and push ljmp (bad) (bad) (bad) mov sti nop incl jp dec lock inc ljmp cmp fstps aam ljmp cmp push mov pop pushl lcall mov decl adc decl jns cld push ja inc push rolb nop sub pop lcall (bad) (bad) push push lcall lock inc jmp (bad) ljmp push ljmp aad ljmp rorl iret dec decl popa lcall out jmp mov sbb push mov decl jge decl jnp jno add add (bad) pop jmp mov lret sti xlat (bad) (bad) (bad) (bad) push push inc cli int3 jmp out mov lcall clc (bad) (bad) mov fistpll sbb and jp sbb or add sub mov pop lcall jle js lods inc clc into (bad) (bad) fdivrp loope loop into (bad) sar mov fnstsw sub scas sub adc mov decl test dec add add add add sub mov jo mov ret dec jmp mov dec jmp mov cmp pop cmpsl xor adc nop sub adc es adc sbb sub dec inc and inc lret aas negl cmp sbb xor pop xchg xor adc and add add js add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc pop (bad) incl add incb add cld add jg add pop lock pop loopne add loopne add rolb pop rolb add add add add add add add add add add add add add add add add add mov add loopne add lock pop clc add psubb add incb add incl add addb jmp add (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add fs ja jae add pusha add add adc add add add add mov xchg dec add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add push inc add (bad) (bad) incl add add add add nop dec add add add add add add add in inc add (bad) (bad) incl add add add add (bad) (bad) incl add add add sbb add dec add add dec add add add (bad) (bad) incl add add add add nop dec add add add add add add jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor lea mov mov mov call mov push push push call mov lea call push push call lea call push jmp testb je lea call lea call ret lea call ret mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor cmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jne push push call mov mov lea push push call fnclex cmp jge push push push push call cmpw je call lea push push mov movl call mov mov lea call lea call cmp jne push push call mov mov push push call fnclex cmp jge push push push push call mov push call mov lea call lea push lea push push call mov add cmp jne push push call mov mov lea push push call fnclex cmp jge push push push push call mov mov lea lea mov mov movl call cmp jne push push call mov mov push push call fnclex cmp jge push push push push call call mov lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call mov lea push lea push lea push movl movl call mov lea call call push lea push call mov push call lea call lea push lea push movl movl call test jne mov test jne push push call mov push push call lea push call lea push lea push call lea push call lea push lea push push call add lea push call mov mov movl add push jo push mov call cmp jne call mov cmp jle mov push push push lea push movl movl call add push lea push call lea mov call test jne mov cltd and add sar mov mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov lea lea mov mov call mov push push lea push mov mov call push call mov call mov mov mov test jne push push call mov push lea push call push push lea push call push call add push jmp lea push lea push push call add lea call lea push lea push push call add ret mov lea call lea call lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret call nop nop nop nop nop nop sahf sahf sahf sahf pushf test (bad) (bad) (bad) (bad) (bad) ljmp adc add stos or into stos or fisubr or dec add addb or adc or xor or dec stos or fs or jl or mov or test or mov stos or push add and or or add clc stos or or or sbb subb add lods or push lods or pop lods or jbe or pop add orb add or into lods or sbb add out or cld lods or or or sub or cmp or push lods or bound add jo or subb add or add cmpb or in lods or imulb or and add sbb or xor or add add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add pop pop jbe popa push popa jb imul pop jbe popa inc jb gs popa jb imul pop pop jbe popa inc outsb add stos add fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add add jbe popa dec outsb push popa jb test pop popa fs imul xor incl pop pop jbe popa dec bound gs cmpsl add fs imul imul pop jbe popa dec bound gs fs data16 pop imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa dec bound popa jb or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa push bound outsb fs add jbe popa dec xor jb add pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add mov pop pop jbe popa inc jb gs je dec imul pop popa fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec gs add jbe popa dec xor popa jb add add jbe popa dec outsb push je inc add pop pop jbe popa push popa jb fs add jbe popa dec popa je dec gs inc popa insb insb add fild pop pop jbe popa dec popa je dec gs inc popa insb insb dec add jg pop pop jbe popa push popa jb gs bound fs data16 push add dec popa je outsb add add jbe popa push je dec outsl jbe add mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound 