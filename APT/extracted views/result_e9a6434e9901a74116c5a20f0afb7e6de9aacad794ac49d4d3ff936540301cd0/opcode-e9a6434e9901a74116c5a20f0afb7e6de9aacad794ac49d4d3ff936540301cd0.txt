push mov push call test jne push call pop ret nop nop nop nop nop nop nop push mov lea push push push push movl call mov pop ret nop nop nop nop nop nop nop nop nop nop push push push push call add push push call push mov movl call mov push call mov mov push call mov add test je lea push push push push push call mov test je mov push push call mov push push push mov push push call mov push mov call mov push call test je mov push call mov pop test pop je mov push call call pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov push push call mov test jne pop xor pop ret push push push push push push push call mov cmp jne pop xor pop ret mov lea push push push push push movl call push call pop mov pop ret nop nop nop nop nop nop push push push mov xor test jle mov mov sub mov mov cmp jne inc inc cmp jl pop pop mov pop ret pop pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop mov push push push push mov cmp jg xor sub mov js mov mov push lea push push call add cmp je mov inc cmp jle pop pop pop or pop ret lea pop pop pop pop ret nop nop push push push push mov mov push mov push add push mov mov push push call mov test mov jne mov push push push push call test mov jne pop pop pop pop pop ret mov push push call push call mov xor push push mov mov mov mov mov push push call mov push push push push call mov mov add mov mov push shr rep mov push and rep mov mov push mov add mov mov call mov mov add sub je push push call add push call add test je push call mov add mov test je add test je push push push call test jne push call add xor pop pop pop pop pop ret movl pop mov pop pop pop pop ret nop nop push mov push push xor mov mov movl mov cmpw lea jbe push push add cmpl jne mov mov test jle mov push push add push push call mov mov mov xor shr mov rep mov and rep jmp mov mov push push add push push call mov mov mov mov add mov shr rep mov and rep mov mov mov inc add mov xor mov mov cmp jl pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop push mov push xor push mov xor mov cmp lea jbe push push lea mov mov mov shr shr mov and and shr test je mov mov push push push call jmp lea test lea mov je or mov mov test jne test je mov jmp test je mov test jbe mov lea push push push push call mov xor inc add mov mov cmp jl pop pop pop pop pop ret nop nop nop mov push mov mov add mov test jbe mov mov add test jbe push push push lea mov sub xor test lea jbe xor mov mov and cmp jne mov and add add mov inc sub add shr cmp jb add mov test ja pop pop pop pop ret nop nop nop nop nop nop nop push push push push push mov mov mov mov add mov test jbe mov push add push mov call test jne mov test je add push call mov cmp je mov mov lea push push call add mov test je mov mov mov inc mov mov test je mov lea add jmp mov lea mov mov test je test je and jmp lea push push call test mov je mov add add test jne mov push add push mov call test jne mov mov jmp pop pop pop xor pop pop ret pop pop mov pop pop pop ret pop pop pop mov pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push push push mov mov add push mov mov test je mov mov add test je mov test je mov mov add add xor test jbe jmp mov mov mov add push push call add test je mov inc add add cmp jb pop pop pop xor pop ret xor mov cmp je cmp ja mov pop pop pop lea mov pop mov add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov mov push push mov push add call movl mov test je mov push xor test jle push mov mov mov cmp je push call mov inc cmp jl pop mov push call add pop mov test je push push push call push push call push call pop ret nop mov sub test push push je mov test jne mov xor lea movb rep stos stos mov xor lea movb rep mov push stos stos lea push push call lea lea push push call add test je mov push push lea mov push add xor push mov movb movb movb lea mov mov mov movb mov push push call mov add mov push call mov mov mov xor mov add shr rep mov and rep mov mov mov shr rep mov and rep lea push call mov push mov call mov mov mov xor mov add shr rep mov mov and rep xor test jbe mov xor mov and shl shr add mov inc cmp jb add lea push lea push push push call add test jne mov lea mov mov add call test je call cmp jb mov lea push push mov push push mov mov movb movb mov movb mov movb movb movb call add cmp je mov mov mov rep mov mov add mov mov mov jmp mov mov add add mov mov mov pop pop test je push call add pop pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub push push push push call mov xor lea mov rep stos stos mov lea rep mov lea push push push call mov mov test mov je mov test jbe push call mov add test je push push call add test je sub mov lea mov rep call mov test je cmp jne push push call add test je push call mov mov pop pop pop pop add ret pop pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub lea movb push push movl call push call test je mov mov lea movl push push push push push call test je movb mov push call mov and add ret nop nop nop nop nop nop sub push call test jne add ret push push call mov test jne add ret push mov xor lea movl rep lea push call mov pop cmp je cmp je xor add ret mov add ret nop nop nop nop nop nop nop sub push push push mov push push mov call add test je mov push push call mov push call test jne mov lea mov push rep stos stos push lea push push call lea push call add test je lea push push call lea push call test jne pop pop pop pop add ret lea push push call add mov pop pop pop pop add ret lea push push call add mov pop pop pop pop add ret mov pop pop pop pop add ret nop nop nop nop nop nop nop sub push mov xor lea movb rep stos stos lea push push call mov lea push push push push call pop add ret nop nop sub push push mov push push push push call xor xor mov mov mov lea mov mov mov push rep stos lea push stos call mov or xor lea repnz not sub push mov mov mov or repnz mov dec shr rep mov push and push push push rep mov lea push push mov mov mov mov mov mov call mov cmp je lea lea push lea push push push call push call jmp lea lea push push movw movw movw movw mov call lea lea push push call mov mov mov mov mov mov mov mov push push push push push push push call mov cmp je lea lea push lea push push push call push call push push call pop pop pop pop add ret nop nop nop nop nop nop nop nop nop nop sub push push push push xor mov xor lea mov push rep stos stos lea push call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call add test jne pop pop pop mov pop add ret xor call cmp jae mov jmp lea movl push call mov add xor cmp sete inc mov call test je mov mov xor lea mov rep mov push stos stos lea push push call cmp jne cmp jne lea push lea push push call lea push call add pop pop pop pop add ret mov mov lea push push push call lea push call add pop pop pop pop add ret cmp jne cmp jne push call push push lea push push call add pop pop pop pop add ret mov xor lea mov rep stos lea push stos call mov mov lea push push push call mov xor lea mov rep stos lea push stos call mov mov lea push push push call mov xor lea mov rep mov mov mov lea mov lea rep stos lea mov push push stos push lea push push movl mov call add lea lea lea push push push push push push push push push push call pop pop pop pop add ret nop mov sub test push jne mov push mov lea rep lea movl push call test pop jne lea movl push call test je mov dec je dec jne mov cmp jne mov cmp jne mov pop mov add ret cmp jne mov pop mov add ret test jne mov pop mov add ret cmp jne mov test jne cmpb jne mov pop mov add ret mov pop mov add ret cmp jne mov pop mov add ret cmp ja mov pop mov add ret movl xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov sub test push jne lea push push call lea push push call lea push call test mov jne push call mov push push call test jne mov shr jne push lea push push call add push call pop add ret nop nop nop nop mov sub mov push push push cmp push je cmp je test jne push call add mov pop pop pop pop add ret cmp jne pop pop pop mov pop add ret mov xor mov xor lea mov rep stos mov push stos lea push push call lea push call mov xor lea mov rep mov add stos lea push push push stos call mov xor lea mov rep stos stos mov xor lea mov rep stos stos lea push push call lea lea push push push push call lea push push call add test je lea lea push push call add test je mov xor lea mov rep stos lea push push push call mov mov lea xor rep mov lea rep lea lea push push call mov xor lea add rep mov push movl movl movl mov mov movl call push push call lea push call test je mov cmp je push push call mov push call pop pop pop xor pop add ret lea push push call add test je mov xor lea mov rep stos lea push push push stos call mov xor lea mov rep stos lea push push stos call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call add test je mov xor lea mov rep lea lea stos push push push push stos call lea lea push push call add lea push lea push push call lea push call add push call push mov call lea lea push push call add test je call push call pop pop pop mov pop add ret nop nop nop nop nop nop nop push call jmp int3 int3 int3 int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 mov push call xor cmp setne mov ret nop nop nop nop nop nop nop nop nop nop sub push push mov push push push push push push push call mov cmp mov jne pop xor pop add ret lea movl push push movl call test je mov mov mov push push push push push mov push mov call test mov je push push push call mov add push push push push push call mov pop mov pop add ret nop nop nop nop nop nop nop nop nop nop push push mov push xor mov cmp je push call mov mov mov cmp je cmp je push call mov mov cmp je cmp je push call mov mov mov pop pop mov pop ret nop nop nop nop nop sub push xor push push push movl call mov test jne pop pop add ret push lea push push movl call mov push call lea push push call test je mov lea push push call add push call add test jne mov mov lea push push call mov mov cmp je lea push push call test jne push call pop pop mov pop pop add ret mov push call pop pop mov pop pop add ret nop push push call ret nop nop nop nop nop nop sub push push xor mov xor lea mov rep call mov cmp jne pop xor pop add ret lea movl push push call test jne pop pop add ret push lea push push movl call mov push call mov push call add cmp jl mov lea push push push call add test jne mov mov lea push push call mov mov cmp je lea push push call test je jmp mov push call pop pop mov pop pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call add ret nop nop sub mov lea push push push movl call mov push push lea push push push push movl call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov cmp jb cmpl je push call xor ret nop nop push mov push mov push mov push push push push push push push call test jne push push push push push push push call test jne pop pop pop ret pop pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push push push push mov test jne mov test je push push call test jne mov mov add cmp je mov mov mov add add add mov lea test je mov push push call add test je mov add add add test jne pop pop pop xor pop ret xor mov mov add pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov push push push push push call ret nop nop nop nop nop nop mov sub cmp push push push mov jne mov push call add mov xor cmp mov je push lea push push call mov push lea push push call add push call mov mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov push push call push mov call mov cmp je cmp jne push push call mov cmp jne push push call mov mov cmp jne push push call mov cmp je cmp je cmp je mov cmp je cmp je cmp je lea push push push mov call push call mov push push call add push push push call mov cmp je push push call mov add test je push lea push push push push call test je push push call mov add test je push push push push push call test je mov test je push push push call add mov jmp push push push push push push push call mov neg sbb neg mov mov test pop je push call test je push call mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub push push push push push call mov push push call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call mov mov xor lea movl mov rep or mov mov mov mov mov push lea xor mov mov push push lea push push push mov mov mov movb movb movb movb movb movb movb movb movb mov mov call cmp jae mov lea push lea push push push push call cmp jae push lea push push lea push push push mov movl call cmp jae mov mov mov push lea push mov mov sub add mov lea lea lea push push push push mov call cmp jae mov lea mov push lea push lea push push push mov call cmp jae mov lea sub push mov call push call cmp jae mov mov mov mov mov mov mov lea mov push lea push lea push push push push lea push push mov mov call cmp jae mov cmp je mov mov testb jne mov push push call mov pop pop pop pop add ret nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov push push call add pop pop ret pop or pop ret nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov mov push push push call add pop pop ret pop or pop ret nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop mov push test je push push mov mov test mov jne shr jne jmp mov inc mov inc dec je test je test jne mov shr jne and je mov inc mov inc test je dec jne mov pop pop pop ret test je mov inc dec je test jne mov shr jne mov inc dec jne pop pop mov pop ret mov add dec je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor dec je xor mov add dec jne and jne mov pop pop pop ret push pushl call pop pop ret push mov push push push mov push mov sub push push push mov xor cmp jne pushl call pop jmp mov cmp jne push call pop jmp mov cmp jne mov cmp ja push call pop mov push call pop mov cmp je cmp ja push push push call add test je mov jmp push call pop mov cmp je mov dec mov cmp jb mov push push pushl call push call mov push push call add cmp jne cmp jne push pop mov add and mov push push pushl call mov cmp je mov dec mov cmp jb mov push push pushl call push pushl call add orl call cmp jne cmp jne push pop add and mov push push push pushl call mov mov cmp jne cmp je push call pop test jne jmp mov mov xor push call pop ret cmp jne cmp ja cmp jbe add and jmp push pop mov mov cmp ja push call pop movl lea push lea push push call add mov mov test je cmp jae mov shr push push pushl pushl call add test je mov mov jmp push call pop mov test je movzbl shl mov cmp jb mov push pushl pushl call push pushl pushl call add mov cmpl jne push push pushl call mov test je movzbl shl mov cmp jb mov push push pushl call push pushl pushl call add jmp push push push pushl call mov orl call mov cmp jne cmp je push call pop test jne jmp mov mov push call pop xor ret xor cmp ja cmp jne push pop add and push push push pushl call cmp jne cmp je push call pop test jne xor mov mov pop pop pop leave ret push mov push push push mov push mov sub push push push mov test je mov cmp jne push call pop andl push call pop mov test je push push call pop pop orl call cmpl jmp push call pop ret cmp jne push call pop movl lea push lea push push call add mov test je push pushl pushl call add orl call cmpl jne pushl jmp push call pop ret push push pushl call mov mov pop pop pop leave ret pushl call pop ret pushl pushl call test jne call jmp xor test je push call pop or ret xor ret push mov sub mov push mov mov mov movl mov lea push lea pushl push call add decl mov js mov andb jmp lea push push call pop pop mov pop leave ret int3 int3 mov push push push mov mov test je mov test je mov mov mov inc cmp je test je mov inc cmp je test jne pop pop pop xor ret mov inc cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret mov cmp jne call push mov call test pop je mov xor mov and shrl mov mov shl add mov call test jne call xor jmp call mov call mov call call call call incl jmp xor cmp jne cmp jle decl cmp jne call call call call jmp cmp jne push call pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret mov cmp je test jne cmpl jne call pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 push cmp lea jb sub sub test cmp jae sub mov test mov mov mov push ret pushl pushl call pop pop ret cmpl ja pushl call test pop jne cmp je pushl call test pop jne xor ret push mov push push push mov push mov sub push push push mov cmp jne mov cmp ja push call pop andl push call pop mov orl call mov test je jmp push call pop ret cmp jne mov test je lea and jmp push pop mov cmp ja push call pop movl mov shr push call pop mov orl call mov test jne push jmp mov push call pop ret mov test jne push pop add and push push pushl call mov mov pop pop pop leave ret push push pushl call test mov jne ret mov andl andl push mov mov movl pop ret mov lea mov lea cmp jae mov sub cmp jb add jmp xor ret push mov sub mov push push mov mov push mov add sub shr mov imul lea mov mov dec test mov jne mov lea mov mov mov mov test mov jne sar dec cmp jbe push pop mov cmp jne cmp jae mov mov shr lea not and decb jne mov and jmp lea mov shr lea not and decb jne mov and mov mov jmp mov mov mov add mov mov mov mov mov mov mov sar dec cmp jbe push pop mov and mov jne sub mov sar push mov dec pop cmp jbe mov add mov mov sar dec cmp jbe mov cmp je mov mov cmp jne cmp jae mov mov shr not and decb jne mov and jmp lea mov shr not and decb jne mov and mov mov mov mov mov mov mov mov mov jmp mov cmpl jne cmp je mov mov lea mov mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or mov mov shr lea or jmp cmpb jne lea mov shr mov or lea mov shr lea or mov mov mov mov decl jne mov test je mov mov shl add mov push push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne push push pushl call mov pushl push pushl call mov mov lea shl mov mov sub lea push lea push push call mov add decl cmp jbe subl mov mov mov mov mov pop pop pop leave ret push mov sub mov mov push push lea push lea mov mov lea and mov sar dec cmp jge or shr orl mov jmp add or xor shr mov mov mov mov cmp mov jae mov mov and and or jne add cmp mov jb cmp jne mov cmp mov jae mov mov and and or jne add jmp cmp jne cmp jae cmpl jne add mov jmp cmp jne mov cmp mov jae cmpl jne add jmp cmp jne call mov test mov je push call pop mov mov mov cmpl jne xor jmp mov mov mov cmp mov je mov mov and and or jne mov mov and and andl lea or mov jne mov incl and add mov and or je mov mov xor imul lea mov mov and jne mov push and pop test jl shl inc jmp mov mov mov sub mov mov sar dec cmp jle push pop cmp je mov cmp jne cmp jge mov mov shr mov lea not mov and mov decb jne mov mov and jmp lea mov shr mov lea lea not and decb mov jne mov mov and jmp mov mov mov cmpl mov mov mov mov je mov mov lea mov mov mov mov mov mov cmp jne mov cmp mov jge inc cmpb mov jne mov mov shr or mov mov shr mov or jmp inc cmpb mov jne lea mov shr or mov lea lea mov shr or mov test je mov mov jmp mov mov add lea mov mov mov mov test lea mov jne cmp jne mov cmp jne andl mov mov lea pop pop pop leave ret mov mov push push xor cmp jne lea shl push pushl push pushl call cmp je addl mov mov mov push push lea pushl lea call cmp mov je push push push push call cmp mov jne pushl push pushl call xor jmp orl mov mov incl mov orl mov pop pop ret push mov push mov push push push mov mov xor test jl shl inc jmp mov push imul pop lea mov mov mov add dec jne mov push shl add push push push call test jne or jmp lea cmp ja lea orl orl lea movl mov lea mov movl add lea cmp jbe mov lea add push pop mov mov lea mov mov andl mov mov mov inc test mov mov jne or mov mov shr not and mov pop pop pop leave ret push mov sub mov mov push push push mov mov lea sub mov and shr mov imul lea mov mov dec cmp mov mov lea mov jle test jne add cmp jg mov sar dec cmp mov jbe push pop mov mov cmp jne cmp jae mov shr mov lea not and decb jne mov and jmp add mov shr mov lea not and decb jne mov and mov mov mov mov mov mov mov sub add cmpl jle mov mov sar dec lea cmp jbe push pop mov lea mov mov mov mov mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or lea mov mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov lea mov mov jmp mov lea mov mov jmp xor jmp jge mov sub lea mov lea mov mov sar dec mov cmp jbe push pop testb jne mov sar dec cmp jbe push pop mov cmp jne cmp jae mov mov shr lea not and decb jne mov and jmp lea mov shr lea not and decb jne mov and mov mov mov mov mov mov mov mov add mov sar dec cmp jbe push pop mov mov lea mov mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or lea mov mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov mov push pop pop pop pop leave ret cmpl push push push push jne mov jmp push push pushl call mov test je mov push push push push call mov test je push mov push push push call test je mov cmp jne cmpl jne mov cmpl jne mov jmp mov mov mov mov mov mov lea lea mov lea mov mov mov xor mov xor cmp setge dec and dec inc mov mov add cmp jl push push push call add mov add cmp jae orb lea mov movl add jmp mov jmp push push push call cmp je push push pushl call xor pop pop pop pop ret push mov push push pushl call cmp jne mov mov cmp je mov mov push push mov mov mov mov pushl call pop ret orl pop ret push mov push push push mov push cmpl je andl lea mov cmpl jne mov push add push push call test je orl decl mov test je cmp jbe mov incl decl je sub sub test jge cmpl mov mov je cmpl jne push lea pop cmpl jne inc add cmp jl cmp jne push call pop cmp je cmpl jg pop pop pop leave ret mov mov push mov cmp jbe cmp jb mov cmp je jmp test jne mov mov and cmp jb mov mov mov mov and sub mov sub pop sar lea ret xor pop ret mov mov sub sar lea mov movzbl add andb cmpl movl jne incl cmpl jne push call pop ret push mov push push push push mov push mov cmp je mov lea mov sub sub sar shl add cmp mov jae mov mov cmp jl cmp jbe push push push call add test jne mov mov add lea add cmp mov jb jmp mov mov mov lea mov cmp mov jae mov cmp jl cmp jbe push push pushl call add test jne mov addl add cmp jb jmp mov mov cmp je jmp mov sub mov jmp mov mov cmpl je cmpl jne mov cmp je jmp mov andl mov mov sub sub sar shl add cmpl jne cmpl jge add incl cmpl je mov push shl push push push mov call cmp jne push pushl push call mov add test mov jle lea mov orb lea mov mov mov mov movl add add decl jne mov lea cmp jae cmpl je add jmp cmp sbb and mov mov mov mov sub sub lea lea mov jmp call test je mov mov lea mov mov mov sub mov movzbl sub lea jmp xor pop pop pop leave ret push mov push mov mov push push mov push mov lea cmp mov mov mov jb lea mov cmp jae add sub jmp andl lea mov lea jmp add cmpb je mov lea cmp jae mov test jne push lea pop cmpb jne inc inc jmp cmp jae cmp jne mov jmp sub cmp jb mov mov jmp movzbl add lea cmp jb lea cmp jae lea cmp jae mov test jne push lea pop cmpb jne inc inc jmp lea cmp jae sub mov mov jmp andl lea mov mov add jmp cmp jae sub cmp jb mov jmp movzbl add jmp lea cmp jae sub mov mov jmp andl lea mov mov lea imul shl sub jmp xor pop pop pop leave ret push mov push mov push mov push movzbl push mov andl mov sub sar cmp lea jbe mov sub mov add movl jmp jae mov lea lea cmp ja lea cmp jae cmpb jne inc jmp cmp jne mov mov mov cmp ja cmp jbe lea cmp jae xor mov cmp jne inc cmpb je mov jmp andl lea mov sub add movl mov pop pop pop leave ret push mov pushl call pushl call pushl call pushl call pop ret push push mov mov mov test je cmp je cmp je cmp je cmp je push call pushl call pop add cmp jl pushl call pushl call pushl call pushl call pop pop ret push mov mov push cmpl lea jne push push call mov pop test jne push call pop push call cmpl pop push jne call mov jmp call pop push call pop pop pushl call pop pop ret push mov mov pushl call pop ret mov test je pushl call test pop je push pop ret xor ret push mov push andl call cmpw jne mov test je add mov mov mov mov pop ret push mov mov call lea push push movl call test je cmpl jne cmpl jb push pop jmp lea push push push call test je xor lea cmp je mov cmp jl cmp jg sub mov inc cmp jne lea push push push call add test jne lea jmp lea push push push call cmp lea je mov cmp jl cmp jg sub mov inc cmp jne lea push lea push call pop pop cmp je push push call pop cmp pop je inc mov cmp je cmpb jne mov jmp inc cmp jne push push push call add cmp je cmp je cmp je lea push call cmpb pop sbb add pop leave ret xor push cmp push sete push call test mov je call cmp mov jne push call pop jmp cmp jne call test jne pushl call xor ret push pop ret mov push cmp push jne push xor cmp push mov jle mov mov lea push push pushl call push push pushl call pushl push pushl call add inc cmp jl pushl push pushl call pop pop jmp cmp jne mov mov mov test je push push push call mov cmp jne pushl call pop pop ret int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop inc pop add insb pop add nop pop add and mov mov mov mov mov shr mov add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov inc shr inc cmp jb rep jmp lea punpcklbw adc pop add hlt pop add in pop add in add fcompl adc pop add int3 pop add mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov sub adc pusha add cmp add push pusha add mov pop pop leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop enter call popa add mov and mov dec shr dec cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea fs add insb popa add je add jl add test adc add cmpsl popa add mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov shlb enter fsubs adc popa add mov pop pop leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov mov mov ret push push push mov push push push pushl mov mov mov mov cmp je cmp je lea mov mov mov cmpl jne push mov call call jmp popl add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov pop pop ret int3 int3 push inc xor pop inc xor push mov sub push push push push cld mov mov testl jne mov mov mov lea mov mov mov cmp je lea cmpl je push push lea call pop pop mov or je js mov push call add lea push push call add lea push mov call mov mov call mov lea mov jmp mov jmp mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret push mov mov mov push mov push call add pop ret push call mov xor mov mov cmp je add inc cmp jb cmp jb cmp ja call movl pop ret call mov pop mov ret cmp jb cmp ja call movl pop ret call movl pop ret call add ret call add ret push mov push push mov mov mov test je test jne test je andl test je mov and mov mov mov andl andl and or test mov jne cmp je cmp jne push call test pop jne push call pop testw push je mov mov sub lea mov mov dec test mov jle push push push call add mov jmp cmp je mov mov sar and mov lea lea jmp mov testb je push push push call add mov mov mov jmp push lea pop push push push call add mov cmp pop je orl jmp mov and jmp or mov or pop pop pop ret push mov sub push push mov xor push mov mov inc test mov mov mov je mov mov jmp mov mov mov cmpl jl cmp jl cmp jg movsbl mov and jmp xor movsbl sar cmp mov ja jmp xor orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orb jmp orl jmp cmp jne lea push call test pop mov jge orl neg mov jmp mov movsbl lea lea jmp andl jmp cmp jne lea push call test pop mov jge orl jmp mov movsbl lea lea mov jmp cmp je cmp je cmp je cmp jne or jmp orl jmp orl jmp cmpb jne cmpb jne inc inc orb mov jmp andl mov andl movzbl testb je lea push pushl movsbl push call mov add inc mov lea push pushl movsbl push call add jmp movsbl cmp jg cmp jge cmp jg je sub je dec dec je dec dec je sub jne testw jne or cmpl mov je mov lea push call testw pop mov mov je test jne mov mov movl mov mov dec test je cmpw je inc inc jmp movl add orl cmpl lea mov jge movl jmp testw jne or testw lea push je call push lea push call add mov test jge movl jmp sub je sub je dec je jmp call pop mov movl lea mov jmp lea push call test pop je mov test je test je movswl shr mov mov movl jmp andl mov movswl jmp mov mov push jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call test pop mov je mov mov jmp movl mov pushl add mov pushl mov mov mov mov movsbl push lea push push call mov add and je cmpl jne push call pop cmp jne test jne push call pop cmpb jne orb inc mov push call pop jmp sub je sub je dec je dec je sub je dec dec je sub jne movl jmp sub sar jmp test jne mov mov mov mov dec test je cmpb je inc jmp sub jmp movl movl testb movl je mov movb add movl mov jmp testb movl je or jmp lea push call testb pop je mov mov jmp mov mov movl jmp orl movl testb je lea push call pop jmp testb je testb lea push je call pop movswl cltd jmp call pop movzwl jmp testb lea push je call pop jmp call pop xor testb je test jg jl test jae neg adc mov neg orb mov jmp mov mov testb jne andl cmpl jge movl jmp andl mov cmp jle mov mov or jne andl lea mov mov decl test jg mov or je mov cltd mov mov push push pushl pushl call push push pushl mov add pushl call cmp mov mov jle add mov decl mov jmp lea sub incl testb mov je mov cmpb jne test jne decl inc mov movb mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub test jne lea push pushl push push call add lea push lea pushl pushl push call add test je test jne lea push pushl push push call add cmpl je cmpl jle mov mov lea mov inc push lea push inc call pop test pop jle lea push pushl push lea push call add mov dec test jne jmp lea push pushl pushl pushl call add testb je lea push pushl push push call add cmpl je pushl call andl pop mov mov inc test mov jne mov pop pop pop leave ret sub adc add adc data16 cwtl data16 mov data16 insl add push mov mov decl js mov mov mov incl movzbl jmp push pushl call pop pop cmp mov jne orl pop ret incl pop ret push push mov mov dec test jle mov push pushl pushl call add cmpl je mov dec test jg pop pop ret push mov mov dec push push test jle mov mov movsbl push inc pushl push call add cmpl je mov dec test jg pop pop pop ret mov addl mov mov ret mov addl mov mov mov ret mov addl mov mov ret int3 int3 int3 int3 lea pop ret lea lea xor mov push mov shl mov test je mov inc cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret mov test je call push push call push push call add ret push push pushl call add ret push push push call add ret push call push pop cmp jne pushl call push call cmpl push mov mov mov jne mov test je mov push lea cmp jb mov test je call sub cmp jae pop push push call pop pop push push call pop pop test pop je call pop ret pushl mov call pop ret push call pop ret push call pop ret push mov cmp jae mov test je call add jmp pop ret push call call cmp mov je push push call mov pop test pop je push pushl call test je push call pop call orl push mov pop pop ret xor pop ret call mov cmp je push call orl ret mov movl movl ret push push call pushl mov call mov test jne push push call mov pop test pop je push pushl call test je push call pop call orl mov jmp push call pop push call mov pop pop ret mov cmp je push mov test jne push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop push pushl call pop ret push mov sub push push push push call mov pop test jne push call pop mov movl lea cmp jae andb orl andl movb mov add add jmp lea push call cmpw je mov test je mov lea lea mov mov cmp jl mov cmp jge mov push call test pop je addl mov lea cmp jae andb orl andl movb mov add add jmp add cmp jl jmp mov xor test jle mov mov cmp je mov test je test jne push call test je mov mov sar and mov lea lea mov mov mov mov mov addl inc inc cmp jl xor mov lea cmpl lea jne test movb jne push pop jmp mov dec neg sbb add push call mov cmp je push call test je and mov cmp jne orb jmp cmp jne orb jmp orb inc cmp jl pushl call pop pop pop leave ret push push push mov mov test je mov add cmp jae lea cmpl je push call mov add add add cmp jb pushl call andl pop add cmp jl pop pop pop ret push xor cmp push push jne call mov xor mov cmp je cmp je inc push call pop lea jmp lea push call mov pop cmp mov jne push call pop mov cmp je push push call mov pop inc cmpb je push call cmp pop mov jne push call pop push pushl call pop add pop add cmp jne pop pushl call pop mov mov pop pop movl pop ret push mov push push push xor cmp push push jne call mov push push push call mov mov mov cmp je mov lea push lea push push push push call mov mov lea push call mov add cmp jne push call pop lea push lea push mov lea push push push call mov add dec mov pop pop mov pop leave ret push mov mov mov push push andl mov push mov movl mov test je mov add mov cmpb jne mov inc cmp je test je movzbl testb je incl test je mov mov inc inc incl test je mov mov inc jmp incl test je andb inc cmpb jne inc jmp incl test je mov mov inc mov inc movzbl testb je incl test je mov mov inc inc cmp je test je cmp jne test jne dec jmp test je andb andl cmpb je mov cmp je cmp jne inc jmp cmpb je test je mov add mov mov incl movl xor cmpb jne inc inc jmp cmpb jne test jne xor cmp je cmpb lea jne mov jmp mov mov xor cmp sete mov shr mov dec test je inc test je movb inc incl dec jne mov test je cmpl jne cmp je cmp je cmpl je test je movzbl testb je mov inc inc incl mov mov inc jmp movzbl testb je inc incl incl inc jmp test je andb inc incl jmp test je andl mov pop pop pop incl pop ret push push mov push push mov push push xor xor xor cmp jne call mov cmp je movl jmp call mov cmp je movl jmp cmp jne cmp jne call mov cmp je cmp mov je inc inc cmp jne inc inc cmp jne sub mov sar push push inc push push push push push push mov call mov cmp je push call cmp pop mov je push push push push pushl push push push call test jne pushl call pop mov mov push call mov jmp cmp jne cmp jne call mov cmp je cmp mov je inc cmp jne inc cmp jne sub inc mov push call mov pop cmp jne xor jmp push push push call add push call mov jmp xor pop pop pop pop pop pop ret mov cmp je test jne cmpl jne push call mov pop test je call push call pop ret push mov sub mov xor mov cmp je add inc cmp jb push mov shl cmp jne mov cmp je test jne cmpl je cmp je lea push push push call test jne lea push push call pop pop lea push push lea call inc pop cmp jbe lea push call mov lea sub push add push push call add lea push push call lea push push call lea push push call pushl lea push call push lea push push call add pop jmp lea lea push push pushl call pop push pushl push call push call pop leave ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop mov jns adc jns adc rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov inc shr inc cmp jb rep jmp lea outsl jp adc adc adc adc adc add xor add sub add mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov mov adc jp adc inc or leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop sub adc add jo add mov and mov dec shr dec cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea les adc jnp adc jnp adc jnp adc jnp adc jnp adc jnp adc jl adc inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov and sub cmp dec jl adc leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov push mov cmp jb neg and je sub mov inc dec jne mov shl add mov shl add mov and shr je rep test je mov inc dec jne mov pop ret mov ret push pushl pushl pushl call add ret push mov sub push andl push push mov mov lea mov cmpl jle movzbl push push call pop pop jmp mov movzbl mov and test je mov inc jmp cmp mov jne orl jmp cmp jne mov inc mov mov test jl cmp je cmp jg push test pop jne cmp je movl jmp mov cmp je cmp je movl jmp mov cmp jne cmp jne mov cmp je cmp jne mov inc inc mov or xor divl mov mov cmpl movzbl jle push push call pop pop jmp mov mov and test je movsbl sub jmp cmpl jle push push call pop pop jmp mov mov and test je movsbl push call pop mov sub cmp jae mov orl cmp jb jne or xor divl cmp jbe orl jmp imul add mov mov incl mov jmp mov decl mov test jne test je mov mov andl jmp test mov jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp mov and neg sbb neg add mov test je mov mov testb je mov neg mov mov jmp mov test je mov xor pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov jecxz mov mov mov xor repnz neg add mov mov repz mov xor cmp ja je dec dec not mov pop pop pop leave ret push mov cmp jae mov mov sar and mov lea testb je push push call pushl pushl push call push mov call add mov pop pop ret call movl call andl or pop ret push mov push push call cmp pop jne call movl jmp pushl push pushl push call mov cmp jne call jmp xor test je push call pop or jmp mov and sar mov mov lea andb lea mov pop pop ret push mov cmp jae mov mov sar and mov lea testb je push push call pushl pushl push call push mov call add mov pop pop ret call movl call andl or pop ret push mov sub push push push xor cmp mov mov jne xor jmp mov sar lea mov and lea mov shl testb je push push pushl call add mov add testb je mov cmp mov mov jbe lea mov sub cmp jae mov incl mov cmp jne incl movb inc mov inc mov lea sub cmp jl mov lea sub lea push push lea push push mov pushl call test je mov add cmp jl mov sub cmp jb xor mov cmp jne cmp je push pop cmp jne call movl call mov jmp call mov jmp lea push push pushl pushl pushl call test je mov mov mov jmp call mov jmp pushl call pop or jmp mov testb je mov cmpb je call movl call mov jmp sub pop pop pop leave ret incl push call pop mov test mov je orl movl jmp orl lea mov movl mov andl mov ret mov cmp jb xor ret mov and sar lea mov mov and ret mov push push test pop jne mov jmp cmp jge mov mov push push call pop mov test pop jne push push mov call pop mov test pop jne push call pop xor mov mov mov add add cmp jl xor mov mov mov sar and mov lea mov cmp je test jne orl add inc cmp jl pop ret call cmpb je jmp ret mov mov cmp jb cmp ja sub sar add push call pop ret add push call ret mov cmp jge add push call pop ret mov add push call ret mov mov cmp jb cmp ja sub sar add push call pop ret add push call ret mov cmp jge add push call pop ret mov add push call ret int3 int3 int3 mov test je mov inc test je test jne add mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret push mov push push mov push push call mov xor cmp je push call push call pop push pop pushl pushl call pop mov test pop je push call pop jmp push call mov pop pop pop pop ret push mov mov test jne pop ret cmpl jne mov cmp ja push mov pop pop ret lea andl push push pushl push lea push push push pushl call test je cmpl je call movl or pop ret int3 int3 int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov push push push mov push mov sub push push push mov imul mov mov cmp ja xor cmp jne push pop add and mov jmp xor mov cmp ja mov cmp jne mov cmp ja push call pop mov push call pop mov orl call cmp je pushl jmp xor mov push call pop ret cmp jne cmp ja push call pop movl mov shr push call pop mov orl call cmp je push push pushl call add cmp jne push push pushl call mov cmp jne cmp je push call pop test jne jmp xor mov push call pop ret mov mov mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp lea mov mov push test je mov inc test je test jne mov mov add xor xor add test je mov test je test je test je test je jmp lea jmp lea jmp lea jmp lea mov test je mov inc test je mov inc test jne jmp mov add mov mov add xor xor mov add test je test je test je test je test je jmp mov mov pop ret mov mov movb pop ret mov mov pop ret mov mov pop ret push mov sub push push push push call pushl call mov pop cmp pop mov jne xor jmp test je xor mov cmp je add inc cmp jb lea push push call push pop cmp jne push andl pop xor mov cmp rep stos mov jbe cmpb je lea mov test je movzbl movzbl cmp ja orb inc jmp andl push pop xor mov lea rep shl stos lea cmpb mov je mov test je movzbl movzbl cmp ja mov mov or inc cmp jbe inc inc cmpb jne incl add cmpl jb mov movl push mov call lea mov movsl movsl pop mov movsl jmp inc inc cmpb jne mov orb inc cmp jb push call pop mov mov jmp andl xor mov stos stos stos jmp cmpl je call call jmp or push call pop mov pop pop pop leave ret mov andl cmp jne movl jmp cmp jne movl jmp cmp jne mov movl ret mov sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret push push pop xor mov rep stos xor mov mov mov mov stos stos stos pop ret push mov sub lea push push pushl call cmp jne xor mov mov inc cmp jb mov movb test je push push lea movzbl movzbl cmp ja sub lea inc mov mov shr rep mov and rep inc inc mov test jne pop pop push lea pushl pushl push lea push push push call push lea pushl push push lea push push push pushl call push lea pushl push push lea push push push pushl call add xor lea mov test je orb mov mov jmp test je orb mov jmp andb inc inc inc cmp jb jmp xor mov cmp jb cmp ja orb mov add mov jmp cmp jb cmp ja orb mov sub jmp andb inc cmp jb pop leave ret cmpl jne push call pop movl ret push xor cmp push push jne push call mov cmp je mov push push call test mov je push push call push push mov call mov mov test je call mov test je mov test je push call mov pushl pushl pushl push call pop pop pop ret xor jmp push xor cmp jne mov cmp jl cmp jg sub pop ret push mov push push call cmp mov je push call push call pop push pop pushl call test pop mov je push call pop jmp push call mov pop pop pop ret push mov push cmpl push jne mov cmp jl cmp jg sub jmp mov cmp jge cmpl jle push push call pop pop jmp mov mov and test jne mov jmp mov mov sar movzbl testb je andb mov mov push jmp andb mov push pop lea push push push push push lea push push pushl call add test je cmp jne movzbl jmp movzbl movzbl shl or pop leave ret push mov push mov lea cmp ja mov movzwl jmp mov push mov sar movzbl testb pop je andb mov mov push jmp andb mov push pop lea push push push push push lea push push call add test jne leave ret movzwl and leave ret mov push cmp push jae mov sar lea mov and lea mov shl add testb je cmpl je cmpl jne xor sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop ret mov cmp jae mov and sar lea mov testb lea je mov ret call movl call andl or ret mov push mov and sar push push mov lea lea shl add cmpl jne push call cmpl pop jne lea push call incl push call pop mov lea push call pop pop pop ret mov mov and sar lea mov lea push call ret push push push xor call pop push pop cmp jle push mov mov shl mov test je testb je push call cmp pop je inc cmp jl mov mov add push call mov pushl call mov pop andl inc cmp jl pop push call pop mov pop pop ret push mov push call test pop je or pop ret testb je pushl call neg pop pop sbb ret xor pop ret push push mov xor push mov mov and cmp jne test je mov mov sub test jle push push pushl call add cmp jne mov test je and mov jmp orl or mov andl mov pop mov pop pop ret push call pop ret push push push push xor xor call xor pop cmp jle mov mov test je testb je push push call mov pop pop mov mov test je cmpl jne push call cmp pop je inc jmp cmpl jne test je push call cmp pop jne or mov pushl push call pop pop inc cmp jl push call cmpl pop mov je mov pop pop pop ret push call pop ret push mov push push push mov push mov sub push push push mov xor cmp jne push push push pop push push mov push push call test je mov jmp push push push push push push call test je movl cmp jle pushl pushl call pop pop mov mov cmp jne pushl pushl pushl pushl pushl pushl call jmp cmp jne cmp jne mov mov push push pushl pushl mov neg sbb and inc push pushl call mov mov cmp je mov lea add and call mov mov mov orl jmp push pop ret mov xor mov orl mov cmp je push pushl pushl pushl push pushl call test je push push push pushl pushl pushl call mov mov cmp je testb je cmp je cmp jg pushl pushl push pushl pushl pushl call test jne xor lea mov mov pop pop pop leave ret movl lea add and call mov mov mov orl jmp push pop ret mov xor xor orl mov cmp je push push pushl pushl pushl pushl call test je cmp push push jne push push jmp pushl pushl push push push pushl call mov cmp je mov jmp mov mov test push lea je cmpb je inc mov dec test jne cmpb pop jne sub ret mov ret push mov push push push mov push mov sub push push push mov mov xor cmp jne lea push push pop push push push call test je mov jmp lea push push push push push call test je push pop mov cmp jne mov cmp jne mov pushl pushl pushl pushl push call jmp cmp jne cmp jne mov mov push push pushl pushl mov neg sbb and inc push pushl call mov cmp je mov lea mov add and call mov mov mov push push push call add jmp push pop ret mov xor xor orl cmp je pushl push pushl pushl push pushl call cmp je pushl push push pushl call jmp xor lea mov mov pop pop pop leave ret push mov push or testb je andl jmp push call push call push mov call add mov pop pop ret push mov push or testb je push call push mov call pushl call add test jge or jmp mov test je push call andl pop andl mov pop pop ret push mov cmp push push jae mov sar lea mov and lea mov shl testb je push call mov pop testb je push call pop push call test jne call mov jmp xor test je call mov call movl or push call pop mov jmp call movl or pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl inc ret mov test je mov inc cmp jne inc or je test je mov add cmp jne or je cmp jne or je add jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je inc bts jmp mov or nop inc mov or je inc bt jae mov add pop leave ret int3 int3 push mov push xor push push push push push push push push mov lea mov or je inc bts jmp mov mov or je inc bt jae lea add pop leave ret push mov cmp jae mov mov sar and mov lea testb je push push call push call push mov call add mov pop pop ret call movl call andl or pop ret push mov push push call cmp pop je cmp je cmp jne push call push mov call pop cmp pop je push call pop push call test jne call mov jmp xor push call mov and sar pop mov lea andb test je push call pop or jmp xor pop pop ret push mov mov test je test je pushl call andw xor pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov lea cmpl jne mov mov or je mov inc mov inc cmp je sub cmp sbb and add add xchg sub cmp sbb and add add cmp je sbb sbb movsbl jmp lock cmpl jg push jmp lock push call movl mov xor nop or je mov inc mov inc cmp je push push call mov add call add cmp je sbb sbb mov pop or jne lock jmp push call add mov pop pop pop leave ret push mov push push push mov or je mov mov lea cmpl jne mov mov mov lea mov or mov je or je inc inc cmp jb cmp ja add cmp jb cmp ja add cmp jne dec jne xor cmp je mov jb neg jmp lock cmpl jg push jmp lock mov push call movl mov xor xor mov mov or mov je or je inc inc push push push call mov add call add pop cmp jne dec jne xor cmp je mov jb neg pop or jne lock jmp mov push call add mov mov pop pop pop leave ret push mov push cmpl push push push jne mov cmp jl cmp jg add jmp mov mov push cmp pop jge cmp jle push push call pop pop jmp mov mov and test jne mov jmp mov mov sar movzbl testb je andb push mov mov pop jmp andb mov mov push push lea push push push lea push push pushl call add test je cmp jne movzbl jmp movzbl movzbl shl or pop pop pop leave ret int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop (bad) popf add ds add xor add movsl mov add mov add and add xchg lahf add lret lahf add push mov add mov push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea adc add or adc add cmpsl add lea add shrl adc add xchg mov add scas stos add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov add add mov mov adc mov adc add xchg add xchg add nop nop nop nop nop nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop push mov push mov push xor cmp mov jne mov mov cmp je mov cmp jl cmp jg add mov inc cmp jne jmp push push push push push push push mov pushl push push call mov add cmp je push call cmp pop mov je push push push push push pushl push pushl call add test je pushl pushl call pop pop pushl call mov pop pop pop pop leave ret jmp jmp jmp jmp add inc imul add pop push add xor outsb inc aam fidiv imull cmp mov cmp cmpsb adc xchg mov shl andl mov xor aad test ljmp jmp push aaa daa insb pop (bad) xchg jl inc std insb (bad) push mov leave test mov push mov dec mov popa xor dec aam fiadd sbb dec fimull lcall rcrb mov enter lret or (bad) push dec inc rcll fdivr clc xchg aam jnp cmpl mov sbb xchg movsb push cwtl lret or stos cwtl dec or lods out test imul nop (bad) jg mov sbb or emms add ljmp gs push hlt pop (bad) enter sub dec rol loopne dec sub dec rol loopne dec sub dec rol call mov lods and mov repnz lea inc pop test sahf test arpl mov iret fwait mov xchg adc fistp cmc test sub (bad) inc addr16 sub test cmc adc lret and mov mov add inc sbb (bad) arpl jnp imul int3 mov les lock sbb popa rcrl fucomp or in or push insb jmp push and (bad) ljmp in cmpsb insl loope aam (bad) push daa loopne cmp and das fistp fiadd lea push or aad enter or dec pop test rcrl lahf pop test (bad) xor jp fucomi rol scas into (bad) jl ljmp and xor sub pop flds fisubr enter test or stc inc aaa jl ret push jge pop pop ljmp mov cmp test pop xor fwait xor lea stc jo sub lock jmp cmp mov psraw fisubl es jne stos sbb fstps pop arpl int add lea movsb and outsb test popa rol mov sahf out js adc (bad) nop mov or int int3 out out mov dec or sbb inc or stc imul lret movsl push mov int mov mov rcrb jge scas in js jns pop add mov xchg cmpl ljmp mov jge outsb dec push push add int3 sub mov shr dec or pop fldt es xor pop mov enter rorb in adc aad pop enter adc pop add sub mov xchg add iret or sub adc stc outsb and int3 cltd push fldl lret adc xor and push sub outsb loope jl pop lret outsb ljmp popf mov mov test fwait nop lea lods nop cltd mov shrb sub xor pop lock and (bad) test or jmp loop mov test dec jmp jmp hlt xchg mov andb add mov ror and mov push dec repnz dec movsw enter ret loop pop pop dec loop bound xchg (bad) jb and repz shlb or loop inc arpl loopne add jle sub jecxz loop sub fwait jl pop jg jge in inc and mov cwtl adc rcrb inc mov xchg pop pop (bad) cwtl jb sahf lcall clc repnz cmp dec pop and add xchg popa jmp daa xor add lahf pop mov fdivr call mov gs pop sbb fsts push mov push and (bad) jno jns add dec or dec and jge test push jns faddl cmp xchg fdivr xchg xchg or cwtl repz rcll js outsl ffree or cwtl pop adc int3 (bad) aaa mov hlt lcall pop (bad) nop popf test lock into xchg inc sbb pop insb popf loopne leave push pushf mov xchg out ljmp cli pop sahf (bad) int3 scas fcoml and test test clc xchg mov lret mov ffree xor mov (bad) (bad) xchg push push mov sub mov xchg fstpt clc or jnp leave fldenv add xlat fnstcw mov add xor cmp fnstcw cmpl push popf push pop into mov and lcall mov mov pushf and inc mov (bad) add mov roll push or ja push inc inc mulb mov icebp dec sahf xor ja or or cmp mov xor loope xor sbb xchg into xchg xor cmpsl push sub lret sub imul pop add mov in sahf (bad) loop lea cs adc xor int3 push mov nop xchg test cmpb aad or adc sbb clc movsl mov dec sbb jae fstl ret push push jb aaa sbb push and push xor out mov or nop mov mov jae (bad) in cltd dec cmpsb insl mov pop xor mov fcomp pusha adc cmpsb xor aas xchg lods lcallw push repnz xchg adc xchg shll inc mov les pop dec lcall xchg cltd push xchg mov dec testb imul fldcw subb lret daa mov loope iret cltd loop jle xor cmp out imul dec int stc fwait (bad) shll pop lea jns jae push mov outsb ss outsl mov push outsb pop (bad) mov movsb xchg cmpl (bad) sub (bad) xchg mov bound inc cmp das jno nop dec lds out aaa test and gs out sbb (bad) lock out sub in movsb sahf sbb int3 mov jnp xchg ret sub ficom push out cmc jne in mov fstpt ds cmp xor jnp,pn cltd test xchg outsl lods mov sbb pop movsb push cmpsb idiv test dec imul push daa sbb popf rcr (bad) jb ss push adc mov jge jl mov (bad) and xchg inc sbb pop pop popf aaa pop jp cli and and lods add dec adc mov jo gs (bad) mov pop pop pop push into push mov add fstps outsb ja sub sbb xchg and ds pop push push loop pushf adc stos jbe nop cmp bound out leave sbb or (bad) fisubl in jge adc imul cli dec push aad in xor lock adc mov faddp pusha and lret mov push push repz lcall or ss cmpsl push aas add and (bad) jle add cwtl inc xchg push xchg fs jb mov ja mov cwtl jge push addr16 or or test cwtl dec mov cmp push mov repnz xchg mov mov dec mov aad pop mov fldt out cltd leave jg loope (bad) push pop ja lret test cmp shrb xchg mov xor cmc xchg js and sbb arpl mov insb imul ds aad mov push cmp jge lds jae xor jae pop push mov aas hlt lods dec sbb pop jp jb jp jle outsl (bad) shlb sbb out pop adc (bad) test cld fs (bad) pop xor jl inc pop xchg push sarl popf aam pop sbb mov xor js in gs jae lods (bad) je pop push pop cmp outsl incb cmp push cltd icebp lods mov sbb insb aaa adc shlb xchg cmp and xchg jns jp adc sub inc enter sub notl into scas or (bad) lds stos dec mov push dec mov fmuls loope cmp data16 in std mov (bad) or push rclb xchg dec repz test mov adc lret mov into pop leave and inc jo cltd xor push popl pop call int pop cltd inc jns jmp mov leave mov nop call jbe jbe movsb or lahf mov xchg in js inc jae dec lods mov test sbb sbb lret jo sub mov lret (bad) jbe rclb mov out adc stos cmp mov leave insl out in sbbl mov jp push (bad) jg lods outsl mov (bad) sub pop mov les xor movups jp inc (bad) push out enter mov mov in hlt jo sbb lea rcr (bad) ss or cltd les imul mov repnz xchg inc (bad) sbb out lea loopne je add int sbb into fcmovbe mov mov jge mov (bad) negb int3 mov dec into mov addr16 pop pusha inc cmp push imul sbb add shll and xor jmp out jne xor lds sbb andb add loop cmp fs xchg cmp mov shlb inc int out mov ficoml lds xor pop or mov push xor lcall frstor pop jle cmp mov mov jg scas int xor adc test pushf jbe mov mov (bad) fisttpll repz mov lods insb jle pop jp push pop (bad) jb sub mov data16 xor xchg scas ret inc cmp hlt mov mov push test mov jbe stc hlt pop ja dec and and aad (bad) std jge repz mov inc jnp push mov mov xor and cmpl divl gs rolb lds mov jecxz or add out rclb icebp jle repz sub repz ss lret add mov jae xchg add out test xor xor jae and jl inc (bad) int pop add push add dec mov clc add jg and jnp xchg inc ja (bad) add fcoml adc insb sbb pop push xchg mov (bad) dec ficomp jle pop lret xor out sarl xchg jb test add jg es je adc cmp push popf jge fisubrl inc jle pop xor hlt jg mov pop push jnp mov test arpl pop es out (bad) jle pop or ja and cs dec xor mov mov lds xor stos mov ret cmpsl stos xchg fsubr outsb ret or add pop fcoml ret fmull pop dec sub std or dec mov cmpsb jle arpl js sbb push repnz xor nop push and sub cmp daa inc lret cmp aas lret or xchg clc icebp push fcoml mov test and push adc test mov sub fadds cmpsb xor push movsl sbb or jae into or adc inc jo mov mov push fnstcw lahf dec aam roll insb test sbb cmp cs pop (bad) mov add xchg sti (bad) (bad) lods pop insb roll idiv mov push test push mov xchg clc mov ret clc aaa or jp adc dec inc mov or outsl mov inc jl inc mov jmp inc sbb dec iret sub pop ret dec aaa fidivrl adc inc and rcrl mull fcompl fwait inc enter rclb bound cld cmp xor movsb scas dec rorl sbb insb dec daa adc aaa mov push hlt pop aas pop pop ficompl (bad) daa xchg dec das dec rclb cmp ficomp lret aas xchg jb xchg lret lods mov mov xor dec inc mov outsb dec daa insb cld aaa jp les enter ret aam mov repz fildl pop aaa dec fbstp or push xor jne lea and jo adc fdiv loopne pop cwtl sahf popa mov xor inc mov in insb (bad) ret push sbb mov cmpxchg cmc and enter clc pop or in es fsub add jns mull call int mov ds dec sub cmpsb push adc jp pop sub adc sub (bad) cli outsb dec sbb xchg ljmp es rorb sub cmpsb int xchg mov hlt stos inc (bad) clc jns cld lods cmp fistl popa cmp pop lock mov jp aad loope scas out in test cmp sbb sub pop js cmpsl jp test xchg das mov sti leave ja jo ljmp fwait popl insb out shlb xchg inc (bad) jbe jno mov sub sub fmuls and lret mov pop pop fwait xor and pop int3 cs cmp adc mov push (bad) xor pop cmp xchg or xchg (bad) jecxz pop cmp adc mov xchg cmc inc push in lahf dec sti cld mov pop sbb inc cmp sub es sbb lods movb add js mov push gs cld gs and dec lcall out stc stos cli push int dec adc push rcrl dec fadd shlb int3 cmp je pop imul or fwait test test std sbb (bad) jnp lods sbb out imul fs mov or std fnstcw stc imul scas flds jno rolb sbb scas mov loope aas shrl jns mov jmp push inc add mov pop jecxz or push ret inc aas (bad) dec ror int3 xorl int lahf imul rorl sar (bad) mov (bad) and aas xchg inc in cmp call push arpl out inc jno or dec cmpsl pop in cmc inc movsb mov dec rolb or leave repz mov pop jmp pusha pop adc push icebp inc int3 push faddl aas or testb xor xchg cmc pop push das or addr16 mov sbb adc scas mov sbb xor dec mov xlat adc push test lods xor in xor enter pop aam mov cmc mov sub sub mov mov sbb lods iret pop adc fwait into or pop push jmp add mov popa outsb ret lods fmulp outsb mov pop and nop xchg shrl imul jae cs jno icebp movsb inc in ret dec jmp sub test clc sbb jno push rcrb xchg insb gs inc cwtl loop mov ljmp sbb xchg repnz out jle jge cltd cmp dec lds or imul add aad add lds inc ficomp push mov stc stos mov jp mov lret popf popf sbb insb negl pop loope jno add ret jb fstpl xor in mov mov pushf dec jnp mov ror iret xchg xchg mov mov ret cltd add insb fwait js stos sahf bound daa push jecxz dec lea xchg repnz (bad) rorl in mov sbb push push enter cli pop push fcoms les xlat xchg mov push in stos jge xchg xorl jne cmpsl addr16 lret sub add and int3 repz rcrb (bad) ret sahf cltd packssdw movsb push pushf mov lahf jp dec out xor and (bad) jb loopne jle push lret cs pop cmp mov cmp pop test sub pop mov sbb cmc pop inc or icebp push mov aas mov scas test sahf lea sub stos loope fadds pop and mov loopne loopne leave jge adc insl nop out dec jge pusha shll repnz xchg dec cmp lahf (bad) and sbb sub mov mov mov mov xchg pop jmp and (bad) cmc test cli repz in test push call pop ficompl sbb imul push or nop jns sarb or jp pop add sarl fisubl cmp loope dec push add incb gs nop mov push or dec mov lret inc ds dec pop mov fildll repnz test mov adc push insl cs and pushf or lods and enter enter clc enter add mov enter mov into or out fnop (bad) out scas stc mov push jecxz (bad) arpl loope lret mov adc push ljmp and imul xchg sbb pop dec xchg mov lds sahf cmpsb mov incl loopne outsl mov jg jg repz xchg testb out sbb add jecxz cmp adcw push jns xchg jb les imull or mov testl jmp add popf out adc pop stos push mov xor ret lea pusha rol mov cmc adc in adc mov out into sbb sub test lcall movsb inc rclb lret push xor push push mov cmp sub sub cmp add xor xor es cmp pop popl loopne nop cwtl pushf out jg push and sar pop inc inc mov xchg ret aaa mov mov sbb push inc cmp lret adc cmpsl popf cltd orl popf xor mov repz xor fmuls jae in imul es dec and pop push push lds or lret push jl pop ret jecxz xlat mov out add lret fs mov cmp and sub insl inc sbb mov mov inc iret inc scas (bad) jno loop cmp js cld clc mov shrb add pop movsb jl mov push push jb fcoms or and fs (bad) dec mov pushf or push lret fldcw push sbb in lods inc jbe adc push add gs mov adc in inc sub (bad) sub out pop repnz cmpsl cs push daa cli push xchg ror dec mov test rcr aam xchg cltd jnp in pop fwait cmp jnp jno in fdivrl mov mov pop lds lret mov pushf xchg int pop mov les mov ror and or or scas lahf mov test in sbb rep rcll vorps ss mov inc sahf (bad) fwait cwtl mov lds cmp push push xor pop jb movsb mov sbb and inc and add sahf loopne imul xchg lahf jp push pop fcomps push xlat push and leave cmp push sub and cmp pop pop adc and jb ret mov mov dec xchg xchg inc lds pop xchg loope sub fcmovnb adc (bad) jno adc bound jbe cmpsb ret imul les push jns fld in iret and sbb lds jnp jae and enter push sub ret addr16 adc out ds int3 sub push mov arpl out dec cmp jne adc adc lods jns push push dec fsubl and lret xor js ret sub lods fsub pop push dec xchg sbb movsb push (bad) aam (bad) adc addl and enter aad repz imul mov jne popf xor mov in sarl sbb sbb cmpsb adc dec xchg jo mov adc or outsb movsb adc test jmp shrd (bad) idiv in out and jb pop imul roll aam jno pop ja push jge push imul leave loopne inc xchg cli (bad) in mov sbb dec sbb xor push lds pop add (bad) jno mov mov fldt rcl test gs dec into nop clc outsl call ret cmc xlat (bad) stos xor rcll push and sbb add or add pushl addb (bad) idivb mov mov cmp popa jmp sahf mov enter inc cli loopne jle popf outsb jne jmp dec movsb sbb jmp mov or push push sbb fsub ret add sbb dec sub mov stos adc mov bound push mov (bad) mov loop (bad) push jmp dec ret popfw dec or shlb sbb test inc pushf orb fxch sub fisubrl push inc and test inc stos xchg stc sti mov rcr mov (bad) push jo inc mov mov dec cmp mov xchg or pop add sub push stos sbb mov std js pop dec mov lea mov js xchg mov fwait rcll pop sahf fcmovnu mov or cmp push push inc in sti repnz clc or mov scas dec mov sti inc imul rorl movsb cs ss and cmp cmp loope rclb out or je loope inc jecxz dec add or cld push xor dec repnz lods cmp fs repz pop pop sbb aam mov adcl (bad) ss xchg cli out mov push lea sub rcll sub pushf pop push cmp inc pop lret adc loope (bad) test push and cmpsb adc inc add mov popa and jg fldt jecxz lods add inc add fwait sub movsl sbb dec inc jbe dec (bad) lods add enter (bad) popa fist cli jecxz push ret int3 (bad) mov mov pop bound and dec pusha jbe (bad) pop pusha popl dec (bad) lret fldt pop out xchg outsb aam ret lods or loope iret jnp jne adc aaa push push inc sub push (bad) mov pop ljmp std xor xor dec jae test xor imul sbb ficom (bad) stos jmp movsl fnsetpm(287 jno test dec arpl mov ljmp lods xchg lods lcall or arpl or daa dec mov adc push push add sbb jbe push jl inc mov sub test movsb pusha mov pop (bad) pop sub cmp pusha mov pop js je ret fmull pop or cmp xor cmp inc repz dec jmp test jae lods sbb in dec pop pop lds lret pop sub dec xor mov daa aaa pop and movsb and fisttpl bound and lcall pop mov lret setns inc in xlat (bad) into lock repnz gs push js std or jl (bad) and or mov add insb jge push push jp cmp sbb push jle scas stos lods lcall xchg push cmpsw lea cmpsl shl dec xor stos std push mov xchg fsubr pop fist inc push pop lcall dec pop cmp lea dec pop push or fwait insb sahf adc fcoms sub imulb insl sbb cmp int3 daa insb lods addr16 push inc insb inc bound mov stos in push xor repnz xchg jnp rorl add dec mov jp sub (bad) insb push loope sbb aaa test lsl in push sbb jl jo inc sub ret inc adc movsl ret mov cmpl cmp push add sbb pop out shll push xlat push int mov shll lret mov test es and arpl and cmp sbb call jb clc (bad) xchg jbe lock hlt xchg (bad) divb cmp mov inc xchg sub or incb loopne pop (bad) fldl ja insl je pushl daa ja imull repnz xlat mov mov sahf jns out fcmovnu out pushf sahf daa lods gs out call mov js clc jbe popf xor stos stc call sbb (bad) or out fldt std pushf inc or add daa add push pushf add fisttpll sahf inc cli fldl pop leave or mov cmpsb sub negb push dec sti fdivl mov pop adc sti jo or and pop pop js fldenv mov adc insb mull test xor lcall lods jecxz dec testb imul shl push out orl dec loope addr16 xchg push ret das lahf cmp mov mov data16 dec sub mov cmp lcall rcll inc imul jp ret test lcall add inc outsb sti xorb push xchg scas xor dec and imul je push and std ljmp or dec or stos sub or lret ljmp and adc pop jecxz aam popa push xchg xchg aas into (bad) pop sarb fisttpll pop fcomps inc es push bound movsb out jbe test mov xor xchg cltd xchg mov dec in pop inc scas xchg gs xor ficomp push pop insb sub xchg inc mov push (bad) xor dec mov mov push cmc es sti dec or out jo mov fdivrl add hlt push sahf ret pop in mov ds test ljmp pop js dec mov lea sbb stos outsl or xchg test je mov dec shll int pop adc inc (bad) cmp inc jg fwait mov clc sbb or and push sti fildll in clc ljmp inc jb jecxz into andb dec xchg into bnd je insb mov rolb and and push push mov pop adc mov loop jno cltd lods inc daa ret inc jmp (bad) (bad) sbb mov mov xor fsubl mov dec sarl test xchg (bad) in movsb pop int3 xor jnp ret xor pushf (bad) imul sti in push int jno fdivrl inc mov dec data16 jle xchg aaa enter pop test out in mov mov adc lea and sbb sbb sahf es jne mov sbb mov test fisttpl ljmp add aad outsl jo les pop mov lcall push rorb push adc xchg jge test out nop mov loopne sbb fs add rolb hlt rorb in fldl sub inc mov rcrb add imul inc fsub in or mov xor dec jg (bad) pop movsl mov inc cs sbb and arpl stos pushf stc cwtl sub sub int3 lret stos in xchg popf ficomp xchg mov jae les aam pusha inc adc cwtl and mov fiadd add fcmovnbe stos mov or in rolb jb sbb jne pop ljmp xor sub mov scas dec jns adc ds push insb lcall mov repz adc jmp int3 adc mov les cmpsb xlat aad sub add lea dec sub sti icebp xchg pop or pusha bound mov cmp mov jl imul negb fcoms and push cmpl mov pop aad in lods sbb sahf sbb dec fisubr mov and jbe mov int gs rorb pop cmp loop test sbb push mov lret dec and jns xchg push leave ret cmp mov jb xchg fistp ret mov sub fdivrl fstpt fidivl fnstsw pop mov and cwtl lahf aam sarl adc xor stos imul dec xlat adc jle dec dec sbb sub push pop enter push xlat fadd sbb xor xchg fstpl lods call xchg jbe xor sub popf enter cs enter fnop pop or int3 test xchg ljmp jg fdivl fldenv push pop std test ljmp ja rclb (bad) les and or jecxz pop test mov test lcall dec sub jg jnp and mov push lea call lea sbbb icebp call aam adc int adc test mov fdivs jg mov mov arpl adc or xchg (bad) lret lods clc adc js mov mov add movsl and mov or cld xchg ffreep imul or xchg in push inc xchg ror cmpsb fldenv sbb sahf divl call nop loopne mov lods xor arpl adc sub and movsl add mov lret xor mov enter sbb xchg add xchg call sbb dec repnz jmp jg je xor cmp pop dec popf add fs fucomp aad adc loope sub ja or mov divb jge data16 ror sbb push jge clc pop xor test cltd into inc cmpsl add sahf push int3 sahf cmp sahf dec add xor (bad) mov xchg and add inc sbb js rol jge mov fdivs push add inc das xchg lds call mov dec adc outsl push cmp or (bad) clc mov inc pop int icebp fsub out sti stos jmp test pop dec or cwtl stc jae mov add cmp jp dec scas fiadd push sub adc cmp push add stos sub test lock js mov dec ret mov mov lret mov cmp sbb xchg out inc push imul push movsl sti stos sub jno les dec les imul cld xchg pop ret ror outsl in imul and daa popa scas (bad) xlat bound movsl sub xor call ret sbb or sub (bad) adc mov in fwait mov mov mov gs adc shll mov aam jl jp je adc test mov jne test scas fstpl inc sub pusha inc xchg js push call cmpsl nop mov (bad) mov ja daa cmp add add add xor mov sub or push pop flds int3 jae (bad) mov rcrl icebp and test mov bound pop icebp pop test xor jmp (bad) aas sub xlat pop scas jne (bad) rorb leave inc int mov push ja cmc inc fdivl aam gs or sub xchg xor cmp jmp icebp mov fwait push xchg call xor stc sub imul inc inc dec mov (bad) mov mov sbb pop test imul push pop in shlb sbb jmp jmp xor xchg sub cmpsl and shll (bad) mov insl mov call xor out sahf bound inc shrl das loop popf aam jle movsl sbb arpl lahf add (bad) cmc icebp outsl push std jge inc or lock mov pop or mov push and lahf mov lock mov jge mov or adc cmp or cbtw iret jno (bad) mov imul jnp push (bad) and or adcl in jmp sub xchg jge jecxz lea ficomp jno mov rorb and leave int3 add inc mov popf mov fisubl imul leave data16 lods mov add data16 hlt push sub scas xchg std iret movsl push jp or xor arpl nop mov xor fcompl sbb adc sbb repnz mov sbb pop int push jae cld xor adc arpl out in mov push jecxz and scas push lahf mov shll sub shll xor daa xchg fs mov lret pop sbb dec xor movsl testb lret mov fs shr and add out pushf out push mov xchg sbb es cmp lea scas adc mov js mov iret orl xchg xorb out js xor (bad) ja mov adc push jbe mov lock (bad) div adc push les call push cwtl pop push gs lods or dec add int or fdivrp dec fisttpll adc mov mov push pop or ret xlat jae push inc sbb mov and jbe jg xchg mov xorl dec fsubs andl (bad) pop lods inc pop (bad) in orb fsts pushf ret sti xchg adc or cmpsl pop cmp out fild mov rorb mov push push iret insl outsl jg or jo mov lds dec jae jae cmp hlt dec xor mov clc mov sbb fdivl sbb ret xchg sahf add inc add (bad) (bad) jns fistpl xchg or (bad) subps lock in gs adc mov loopne mov pop outsl adc add push das push das sub add mov xor cmp aad mov ljmp sbb xchg jl add xchg out add pop push test jae (bad) jmp fs je ljmp icebp jmp push inc push std xchg int3 test cmp cmp lea jmp std int push push pop mov stos test add dec push rcrl xchg lds adc push icebp dec xor test xchg xchg cmp sbb xchg or ljmp repnz push dec mov xchg cmpsb clc shrb test out pop fidivr or mov sub pop imul mov (bad) jbe lds fcmovb jg dec xchg cld pop add mov int push hlt mov jae fistpll pop dec sbb xor or out jle jge jne (bad) stc outsb jne loop sbb jb fdivrs push sbbb jo inc push push pop insb out and mov (bad) insb stos (bad) setae inc mov add sbb mov add mov pusha add aas push jo mov outsl add push mov cmp cli mov je mov outsl adc jbe out xlat xchg test cmc fmulp mov and pop mov loopne test xchg dec xor or (bad) in push clc movsl and nop dec push cmc and xchg into mov out mov popa jne test (bad) icebp inc fildl scas or cmp push xchg sub icebp ds cmp mov adc push pop pop js pop scas das insb arpl mov push clc mov ljmp inc xor pop outsl mov push sub iret cmpsl dec mov outsl out adc xchg mov out in sbb mulb add imul inc arpl dec mov bound fbld xchg pop aam adc or mov or imul fwait mov push push les or jns cmp or xchg stos mov mov (bad) aad mov add sub pop dec les mov stc int3 test pop mov bound jnp cmpsl xor xchg aaa movsl push out mov dec or (bad) sbb push cld ds cwtl incl shrl ja subl negl hlt scas and fdivrl xchg je sbb pusha insb pop inc lock xor fsubrs add aad push xor jmp addl and cmp sub mov stos xchg jmp lret or (bad) clc push addr16 das cs leave mov xchg call cmp push inc xor push inc std jle pop push or hlt mov mov test ret fisttp mov ja insb fsts mov es or ds mov ja adc xchg stos movsb dec imul add jp jmp inc nop in mov push lea cld adc orb scas adc push movsb cmp out imull nop lods mov call rcll pop pop fsubr sub jno (bad) push push (bad) ficom lret hlt fisttp jmp hlt into outsb dec scas add ret adc arpl push pop dec xchg popa inc arpl cli sub test push inc xchg cmp imull roll mov dec (bad) jae test lret pop pop adcb int jo xchg sbb sub mov add (bad) lret std shrl cmp xor sbb push into test adc cmp fwait push test call sub ljmp mov lock push lret inc push stc clc push mov sub lcall xchg insb pop inc add mov test jo (bad) xor (bad) sub jle jns insb rol jle mov lods add inc popa mov adc sti cltd jns stc cmpb mov movsl lahf cmp jp nop call push lcall std cli cli add jae call push jmp scas jle pop js adc lcall rorb stos dec sahf sub rol mov mov loopne (bad) xor int3 pop push mov or push ljmp rcrb pop mov pop mov xor push mov lds lds ljmp ljmp push in jne repnz push shrb (bad) mov leave fs imul lret jmp push sub stc leave movsb and dec ljmp call dec lock fimul adc mov fild dec sbb inc shl mov ret out mov xchg push imul xor js enter jne push js hlt sub js outsl fdivr fsubl jnp rorl cmp out pushf dec dec mov shll xor cwtl orl subl ss je xchg bound cli adc rorb aam xchg xchg insb add and pushf or js jne adc add out in dec add xchg (bad) (bad) stos in add stos in loopne fiaddl test adc cmp xor test pop test sub sbb adc testl out xor scas popf jg fsubs jb jnp inc stos xor mov and sub sbb sbbb and (bad) add mov div cmp clc lock jmp sti movsb inc (bad) mov in fnstsw leave and adc xorl insl jecxz imul sub into mov mov dec add adc sahf call fcmovnb and sbb gs jo or and dec mov test inc xor bound (bad) rorb jno add repnz adc (bad) stos shl nop and pop jecxz popf push ss outsl xchg iret pusha sahf sti sub pusha fidivl js (bad) add insb push xchg push clc add adc (bad) (bad) jbe insl loopne lahf pop loopne mov mov jb mov sbb xchg bound xchg lods inc lods push push or ljmp in and es (bad) or ss rolb mov in ja sbb dec xor mov inc or mov pop test mov fisttpll in mov pop mov in mov movsb or sub loope movsl movsl sub iret jg icebp (bad) sub pop jmp lds inc ficoml cmc sub imul inc lods in mov gs rclb and aam jns ror iret outsb push jmp ja fstps adc les popa ret mov mov cmp xor dec ljmp lcall scas enter sub mov mov ret add adc es mov push xchg das mov add pop pop lret test jecxz int3 mov xchg push and inc cmp enter and pop loop xchg shrb pop lret rclb xlat lods cmp call mov rcll mov sub jo into addr16 sub push jo mov lock sbb mov enter std xor cmc loopne (bad) repz hlt pusha pop and push fs push (bad) fdivr sbb les les sbb icebp std movsb jb dec mov cmpsl inc into std push scas (bad) pop movsl push fld fwait add stos mov push arpl dec cltd mov pop push mov inc mov inc stc inc cmc and int3 lret into jne shll das jns scas (bad) push jl inc inc pop inc test xor divl inc aad outsb cwtl pop (bad) lret jne outsl sbb jae xor sarb dec pop aaa stos data16 sbb dec pop out sbb in cltd int mov sbb jp pop (bad) loope test mov mov movsl in push lock stos outsl jge and sbb imul pusha xor xchg pop sar gs movsl int stos xchg (bad) jne mov and fisubl rcll jg ja bound repnz xchg mov add sub sbb imulb pusha stos gs dec test aas mov imul fisttpll clc shrl loop in int3 mov push mov sti fmuls lods aaa sbb dec cmp pop jp ffree pop lahf and stc and jae ljmp out fmul fsubr insl imul sub icebp mov sbb sub jg inc inc cmp xchg pop rorl inc add imul fistpll pop sub mov dec inc add mov arpl sub call gs cmpsb push push add neg (bad) fldenv daa add nop xchg mov lea cmp into paddusw cmc sub push mov dec (bad) sti pusha ja shr (bad) mov xchg nop (bad) sbb sti pusha lahf daa dec movl mov inc or or and dec jle and ss test lods add adc cmp iret (bad) repz push mov pushf (bad) mov scas add push mov pop stc pop pop xchg mov mov les pop rorl mov dec in xlat out sbb insl pop cltd into into sti inc into mov data16 call xchg shl out cmpsl cwtl mov call pusha out sbb mov cmc inc outsb lods les add in pop fcmovnb xchg les (bad) push xchg sub adc mov push or popa roll std jnp or dec popf push jecxz dec cltd int3 push mov dec sbb popf rcrl xchg shr mov (bad) movsl xchg sbb into rol int sahf cmp sbbl ss or jmp cmp (bad) pusha xchg popf push test loop (bad) push or leave mov clc cwtl rcrb push fiaddl mov jae fdiv jecxz fstl popa jae push mov and add popa xchg jge (bad) outsl mov push jg aam js jp ret je lock jns std inc sbb mov pushf into test add icebp xor or pop and pop lcall jge xchg and cwtl addr16 sub test adc or sbb fisub int popa xor fwait add dec or mov addr16 xor popf int3 outsl imul add pop and mov adc mov mov aam repnz in xchg xlat mov stos cs bound sub sub sub fdivrl pop (bad) imul movb cmpsl leave cmpsb into jg cmp lret pop rcrb cmp jmp cwtl test inc sbb push rep (bad) ljmp jle sarb subl dec inc push sbb xchg test (bad) mov rol sbb sub fdivrs mov test xor fimull cmp loopne pop jge lods insb or mov jmp inc inc cmpsb mov test sub ja push mov mov push mov push inc mov scas test push ret inc add push dec bswap or or (bad) adc lods (bad) fldl shrl call ljmp (bad) adc push mov fadds aaa push fistp cld int pop rcr int add mov fs jo adc mov enter xor sahf inc adc mov sbb fadds (bad) adc out mov mov jns dec lcall clc scas loope enter outsb leave fmul inc iret fmul push enter shrb sbb cmc add movsb add mov in pop xor xchg xchg cmc add subl xor mov mov stc lahf push (bad) fsubl fnop sub xor and gs pushf cmp (bad) jo fwait sti andb jle mov shrb push cmpsb pop fwait rolb cmp inc or ret cmc stc push adc xchg out das fidivrl mov loopne aam popf adc cmp shll mov lock add lds fdivs or gs int sub mov sbb xchg mov leave movb jae pushf mov mov dec test int3 mov dec (bad) ret jg push test dec pop pop mov and push pop push loope cltd lea dec repnz adc stos xor and (bad) int3 fndisi(8087 sti sbb (bad) sbb fildll push and xchg loopne lods xchg je ljmp sahf int (bad) xchg rcrl dec xlat xchg out mov mov push mov dec inc shlb inc mov std adcl mov and add inc push jo jb fisubl dec xor out mov and lds inc add (bad) or ljmp add mov add std or dec add mov mov jns xchg or sbb clc mov xchg pop dec and pop (bad) outsb iret fadds mov icebp push jmp xadd outsl (bad) call sti and fbstp sub and cmpsl jae sbb pop jbe (bad) repz xlat sbb scas cmp jp faddl push xor lods icebp repz cmp dec scas das xor push int3 or jg adc clc lret push jp sbb inc xchg rcrb xor sahf add and not sub addb adc push xchg mov out jge add lods scas shrl call rcl cmp (bad) pop xor add lahf js mov das jns cmpl jecxz adc sub xorl push push les inc xor mov mov sbb cmp movsb adc sbb push xchg repz and out mov fmuls lcall loopne adc icebp mov cld lods scas (bad) mov pushw jae adc ror data16 cltd mov xor out add add xchg iret test push cmpsb cmpb fdivrl rep jmp mov test in jge jo inc lret clc daa adc cmc in mov fistpll lods push mov add hlt stos xchg imul loop push mov cmpsl clc lcall fwait add or mov add out loopne jecxz popa adc or cmpsl stos out rclb adc jb (bad) xchg and pop stos inc xchg sbb scas add stc jmp or imul lods add sub fildl or mov inc jge aam leave lret mov ja push inc or iret sbb fstpt ffree inc pushf jmp int shr mov cmc test sti (bad) xor push pusha loop lods xchg push add iret insl in call int3 pop lds aaa pop xor and pop and xor mov xor mov fstps stos xchg cwtl jmp xor sbb jl push decb mov push aam repz xchg ret sbb jmp cwtl fsubrl sub mov mov inc pushf adc aam pop mov mov rcr pop idivb cmp push pop or outsb sub in (bad) in jnp mov popa jmp sbb jmp in sub (bad) lea or aaa jecxz shlb lret in dec cs sti and jg add sub sub iret and das mov sbb cli scas cmpsl (bad) (bad) xlat sub mov lret (bad) ss or mov or and dec adc mov inc pop pop mov dec movsb or adc ds (bad) mov sti aam pushf imul inc fstps pop fcoml mov addl data16 mov scas shrl sbb jle js dec mov pop fstl clc lahf shl imul sbb or sarb mov cmpsl or mov movsl jmp (bad) sbb stos inc jae fsts pop out xchg repnz shrl cwtl add jge fnstenv jo sbb pop lret adc ja arpl xor lret pop adc xchg rcll test fstps nop out (bad) sti nop push jmp repz (bad) movsb adc loopne movsl xor imul and pop imul rorb iret je ja xor add xor mov add movsb scas and jnp pop mov inc mov imulb fisubr call jnp lcall shrb js push mov int3 test mov ds and jg jnp out add mov push pop (bad) popa pop lret mov lret faddl mov push push mov fdivrs push imul lock mov pop adc js mov dec cli out mov pushf repnz xchg sbb fidivr lret inc out mov mov xchg fmuls cmp hlt push jecxz mov pop pop xchg stos in (bad) xchg lret (bad) jge enter pop nop ss sub inc mov bound lea mov lods lret fdivrs inc (bad) call dec (bad) notb lret mull and out (bad) jge (bad) das inc xor sub dec pushf mov gs adc cli gs xchg pop jno leave pop sbb movsbl add mov into outsl mov scas sub insl and jae mov cld xor jle addl push mov cmp mov xchg shll xchg aad add in push (bad) mov mov lods fs and ret lds adc xlat push lods adc jne mov rorl pop dec js pop fwait out xchg mov push inc pop pop fimul fisttpl ret inc or fcomps mov lret cmp pop popa je nop mov sarb cmp adc xchg and pop sub fnstcw mov popf enter fcomps arpl out ja std lea jno fdivrs xchg mov add mov pop out mov jno fstpl repz xor add test push (bad) mov add data16 popf push add fs lock jb ja sbb jp jnp ret sbb inc push xchg es js int (bad) mov mov push shll inc sti (bad) xor and lods inc fwait out iret pop aas add pop fist mov in call jno pop push and por cltd movsl shlb sub stc mov je push mov (bad) sub pop inc jg fstpt mov xchg xrelease sub aam inc jg std sub retw test test inc push clc jns push cmc testl lahf popf inc mov loop (bad) xchg mov push aas jle imul adc mov addb out outsl xchg xor or aas inc daa jnp push pop loope je (bad) loop cmp in fsub gs add pop lahf adc out stos adc pop cmp in inc cmpsl jae inc mov out imul mov sti pop mov shll in cmpb fildl add sahf inc sub cld jge adc adc and scas test cmpb xchg adc pop je (bad) jp cmpsl out ss push cwtl (bad) jg pop data16 pop mov (bad) inc mov or adc jbe jnp imul dec push pop cld add roll pop scas stc add sbb out fidivrl dec jecxz sarl ret jmp inc mov jnp (bad) in inc movsb mov push sub xchg scas enter add cmp jb mov dec sub clc (bad) into into fstpt stc sbb mov pushf cs in ja inc xchg mov ja fstl pop inc push dec mov dec adc scas sarl push pop mov sbb jne ss mov std out and add sbb lods push leave push mov les test ret test mov pop cmpsb jmp (bad) pop pop xchg lret adc into jecxz ss lcall inc lods in in jbe lea inc mov cli insl sub jge xor rorb iret out mov mov or or leave repnz (bad) sahf stos mov or jmp shl mov lods fldl cmp loope cmp add sub outsl cmp cmpsb ret dec xor push or xor push in test push ret pop lock cwtl xlat mov push cmp cmpsb dec outsb int3 lcall imul outsl dec xor push (bad) mov arpl lock movsl aam js lea dec and and mov stos roll xchg inc xor xchg mov adc shlb or mov pop arpl xchg mov lret push jl xchg push insl or test xor stos stos in mov mov xchg sub xor and sti sub in mov inc in ljmp rorl jbe adc jg adc ficom dec nop pop sbb insl sub cltd and adc fild or inc orl loope std jp xchg adc xchg cmp aaa gs mov adc shl divl jecxz int fidivrl out cld jecxz shlb dec jp jl iret mov jnp pop sbb jmp push leave lret imul ret faddl lcall loop data16 test pop push push sbb push mov lret mov fdiv (bad) mov sbb pop or cmpsl outsl xor pop sarl scas jbe ret adc push pop mov xor insb mov pop (bad) jae mov bound push adc push shl sahf inc dec movsb ds (bad) lods sti iret xchg scas push (bad) lods test mov into push lea jmp add mov sbb push movsl jle xlat mov repnz test fsts fcom dec push dec or daa pop xchg cmp pop dec cwtl mov sti dec cmc stc sbb cmp cli cmp pop sbb dec lods (bad) jb xchg xlat mov xchg sub mov mov stc js andl decb mov dec sbb orb js orl push jp in fadds pop (bad) popa push xor jne push jnp mov shlb and (bad) xor cmp insb pop pop iret mov cmp les nop mov add rorw push mov add sarb or mov pop mov enter or mov imul cmp pop lret xor xchg por adc dec mov mov jo sub push into daa out repnz dec cmp push sub push or lret decb xchg sbbl mov lds and push test (bad) scas adc adc sub les divl outsb jg loop pop and mov dec aas sbb jecxz adc jecxz in and or divb fildll mov mov sub loope xchg popf bound test push pop dec add cmp ficoml or adcl adc test fadds sbb repnz pop int jae cmpsb mov jne xor out (bad) jae js fwait daa push jmp add push mov test add ss push jg stc pop outsb mov cwtl dec jns sbb ficom iret insb add mov out push dec xchg pusha shr push scas or inc push xor jmp int3 xchg test jae stc cmp mov push popa mov outsb lds insl sub and sub sahf (bad) inc mov mov push add sub cwtl mov mov loopne lods out test xchg mov in cmp test pop inc dec hlt jnp cmc aaa pop sbb imul add loop out loope shlb test cmp loopne test xchg cmp mov mov add sub (bad) fcomip fs (bad) imul pop mov (bad) mov xor test sub adc pop fdiv cld pop aam xchg mov inc and mov je sbb lret add clc mov outsb mov es fimull pop out or jbe scas popf je (bad) mov divb or insl scas insb (bad) adc in cmpl inc dec fdiv sbb ljmp fdivs aam xor lods mov mov ret push add fcmove fist inc xor repz int repnz (bad) jl dec pop xor scas push push lods lcall mov cld inc sbb stos aam mov out mov push xchg pop daa into cmp call dec stc aam leave xor xor jne sub sub cli loopne,pn jmp fdivs les mov pop movsl test pop cmp xor mov pop pop mov cmp sub cmc inc jae dec add and repnz pop cmovnp push xor sbb in xchg jl dec add loopne mov out mov dec mov sti or hlt or and mov xchg sahf lods sti jmp or repnz loop mov lret cwtl cmpsb fadd cld les lods popf pop dec dec aam pop mull enter push addr16 inc fcmovb mov jmp pop dec pop test push cwtl add sti cmp hlt mov test std sbb mov inc cmpl clc mov lret mov add adc pop or fwait push xchg mov ja inc jbe dec insb push pushf in (bad) aam push xorl data16 pop negl das inc mov xchg ret cltd movsl (bad) call cli cmpsl jo loop sar dec pop sub movsb jl pop push scas dec xchg xor jl and cmpsl mov mov ffreep dec or push mov fwait cmc or dec pusha inc out push xchg lds add pop fistpll movsl fidivr nop mov daa or and gs xchg test dec jecxz cmp mov aas sahf in jae leave mov mov cmc test mov clc lret stc pop sbb cmp xchg mov cwtl lret push add pop sub ja mov mov xchg xchg (bad) jl test jle dec inc stos mov scas push dec cwtl pop cltd xchg scas jle aaa repnz jecxz int push and pop insb aas push push fimul call outsb jle pushf adc std push gs fnstsw mov pop test sbb inc jecxz lret and jo sub loopne sbb sbb mov xor sub sbb loopne cli ja out nop fwait into add (bad) push xchg pop int3 ret mov mov dec mov xchg movsb push sbb and inc mov lret out or push ret push sbb xor in sub imul sub and jns xchg outsb xchg std repnz fidivrl xchg adcl pop in push scas or icebp add xor lock stos pushf dec in inc inc adc add or mov dec mov mov add push mov mov rolb lods jl and or lret sub iret cltd cmp mov dec (bad) xchg sub and add int3 (bad) jle ficompl imulb hlt and xchg pop out pop inc loop xor ret or push mov aas insb jp,pn add mov mov stc mov push test insb inc imul add arpl jmp push nop push dec inc cmc adc mov inc les jecxz lahf adc stos mov push fs ss fsubs test dec add aam jns lret scas aam bound inc fimull (bad) mov lock js mov std jno hlt mov mov aam imul jecxz lret call nop iret in dec jg mov (bad) push fs and enter in add sbb fstl imul pop movl imul mov lods js test (bad) cmp pusha ret mov mov orb repz fistpll js mov testb push jmp icebp inc je dec xchg out loopne in out push sbb test mov jl fwait rcll test ds pushf add (bad) test jne fiaddl lods fnsave adc daa xor mov fstps cld stc mov sub addr16 cmp xchg std scas lahf jg mov nop cmp mov out jmp mov insb roll clc sti sub test popa mov addr16 push add push xor mov or dec (bad) out and lds fistp mov out rcrl scas mov nop and cmc push or push pop (bad) out in sbb icebp imul nop dec lret cwtl (bad) pop (bad) int3 pop ds aas mov pop sub jmp into fild enter (bad) loopne out call dec adc push addl clc (bad) mov cmp (bad) or call out sub leave in push pop out mov inc pop mov clc cs fadds pop push (bad) xor lds (bad) mov xchg lret or xchg call lea clc push imul and ljmp and cwtl inc adc addr16 cli int3 int out loopne mov fdivl (bad) mov call test inc mov lahf (bad) aad mov inc xchg inc fist es xchg lods fwait out xlat (bad) jg cli (bad) (bad) les cmpl stos shl or divl and xchg xor (bad) int ljmp mov cmpsl popa xchg fwait (bad) out inc test or enter xor imulb or jnp xor mov sub lods or inc out cmp aas push movsl mov aas dec roll rolb add das imul xchg inc je jbe inc adc sub dec leave leave pop pop popf add lret push shrb cs pop cmpsl jnp lods aam iret subl fucomp popf push mov pop nop insb xchg iret push mov out xchg in add test add movsl and outsb movsb call aaa dec andl xchg inc (bad) (bad) push mov into dec ficompl lret or pop jge (bad) test push dec and and add fdivl mov out lock and mov cmp (bad) js test jp (bad) gs stc cld test pop sub fstpt mov jb rol cmp aad test xchg aam sbb movsl jp jns popf dec stc sub ljmp jb test adc clc fistpl mov int3 (bad) dec jl cmpsl aas push cmp jl imul into in rcrl xchg (bad) into mov stos and sbb sar ss in cli jecxz loopne push xchg sub test pop mov lds aad push aam sub or mov jle push add dec mov test popf fcoml adc lahf stos movsb repnz loop fidivr imul dec xor inc loopne rcl xchg inc out push jmp jo ret cmc fs out mov pop fnstcw jge push mov loope push jo enter cmp data16 iret pop push call jl mov pop fdivrs aad lods loope call lret icebp insl leave sti aam loopne xchg in sarl js mov gs push js imul pop scas and or mov lock or mov punpcklwd enter jg hlt dec in popf dec and addr16 ret (bad) jge fsub lret add (bad) and cmp cmp mov cwtl aas aam int (bad) sub xchg (bad) in jbe addr16 lods jge lock shrl stc add stos out lret ss xchg into into loopne,pn int (bad) lods lret sub mov sbb in mov sub add in xchg jb cmp mov jmp (bad) iret outsb lcall rorb ds or mulb xchg cmp mov push imul inc arpl sbb lock push add (bad) (bad) dec xor movsl jmp outsb outsl xor mov sub jecxz mov cltd lds add pop dec js rcl aaa mov rorb mov inc aaa jbe inc fs roll loopne cmp imul fist jge jae or push fmuls mov cmc sahf mov bound inc fmull add lcall pop sbb rcr adc cli pop rcrb adc cli repz mov xor jp jecxz push repnz mov fcompl dec or jo loope cltd pusha sub clc push xor add clc ljmp xor mov jmp pop mov jmp mulb in stos push dec ficomp push in dec cmp inc push pop lea (bad) (bad) cmp cmc pop pop jle imul xchg loop popf lahf dec and sub cmp inc mov scas fmul sbb xor jb pop push js sub mov pop stos les gs arpl xlat jno cs xor dec mov test bound cmp push fiadd xrelease sub stos mov aaa fs enter aam fidiv push push into dec xor push (bad) das rol mov stc cmp or or sub cwtl mov sub imul xlat pop mov loop scas mov js fidivl adc (bad) mov repnz and call fimull or ds xchg repz or je in and mov test push adc jo jmp stos loop jp aas xchg or inc pop ret (bad) jl xor xchg mov (bad) xor js mov adc dec call hlt test loopne mov leave adc aam dec icebp mov sub and rorl push out cmp outsb insb repz sar in pop (bad) lahf push nop pop fs mov xchg push dec pop jae fstps mov pop cmpb jg adc hlt push lret push imul mov gs mov cmpsb inc jmp bound add movsl mov xor pop (bad) jns adc leave mov mov pop push imul jle or lea (bad) mov or dec cmp repz js xchg fnstsw int3 pop scas bound ret ret bound push test mov add mov fwait int mov dec lahf dec inc xchg or xlat out jo dec (bad) frstor bound cmpsl dec test sub stos lret dec jae imul cmp pusha out adc ret in clc mov arpl or xor (bad) (bad) cli and xor or jne cwtl es hlt sbb paddw mov push or jae mov pop call bound std dec sti subb jp iret int3 inc (bad) inc cmpsb push pushf enter test stc fisub sahf or aas pop test push push push adc push cli (bad) in das testl cld mov (bad) jp push jmp sub in lods enter loope js lea cmc xor mov jae lret (bad) daa mov mov out (bad) fwait (bad) sarl repnz cmp adc sbb sbb push rcrl jno sbb lret pop insb mov loopne cmp mov ret nop mov sub push imull clc pop mov xor repnz cmp cmpsl or mov mov push xchg sub push (bad) mov or xchg shlb mov mov push sbb (bad) jnp or mov aas idiv adc ljmp xor jbe daa mov orl dec imul mov add mov (bad) mov fs push aam cli cld jno sbb (bad) ror stc and xchg pop insl and fsubl fmull jne mov (bad) rcll pop pop fwait (bad) lds dec adc fistpll jecxz mov mov stos (bad) ret and xchg xor pop cmp aam mov sbb and add dec dec mov mov aas pop hlt (bad) aas fist shll lret sbb mov adc fstpt jns jae pop jg paddq (bad) jnp mov hlt jle mov in out fsubrl (bad) (bad) stos enter bound and imul sti xchg adc dec cmpsl mov mov nop int shr scas jo cli faddl fwait mov jae pop or inc jmp addr16 jmp (bad) lods mov adc scas sbb stos or lahf icebp fisub aaa jae outsb cmpsl cs xchg mov adc jnp cmp outsl ds adc movsb add pop or cld xlat in test or mov mov mov jns sub (bad) xchg dec pop (bad) or mov daa popf hlt pop das (bad) mov jae pop mov push aad inc or mov mov pop sub dec add jnp mov pand sub dec sbb mov xchg loopne fisttpll pushl cltd inc imul or and xor push into mov (bad) jg fidivl adc pop repnz fcoms (bad) pop xor insb addb pop pop test out pop imul sub shll jnp xchg sbb nop faddp push adc jae push es or in aas paddusb cmp data16 mov insb mov imul rorl mov scas (bad) jae jo pop or stos dec pop add cld fldcw dec or ret outsb test jmp dec outsl sub stos mov sahf sbb mov faddl popa outsb fidivrl hlt nop mov adc (bad) (bad) jo movsl (bad) pop push fs stc push adc inc mov inc rorl in test fisubl adc or mov cli cltd dec popf shll pop cltd clc push rorb dec cs mov sti fiadd jle jecxz mov inc mov push scas jmp sbb (bad) loopne dec push pop cmpsl arpl addl cmc sarl add sti xchg xlat or gs mov lea add push shrb lret mov clc jns scas lds (bad) xchg pop lods aaa add mov xor out outsb fs push negl mov xchg insb inc add fildl repnz and sar push jns stc rcrb and cltd push fs (bad) dec (bad) ret xadd jmp aam fisubl jmp gs in fdivs fdivl pop or xor adc mov push jne add or int cmpsl cld mov mov std dec inc mov dec add aaa xor mov add popf jo mov mov jmp inc or or das das push fldcw pop ja mov or jne jae pop sub sbb mov and scas sub mov pop gs imul pop pusha push jno std dec inc test mov or or cld push xchg xchg adc and jecxz jle cmpsb sub lret mov sbb test movsl (bad) loope push xor adc faddl (bad) pop out sbb cmp xlat mov dec adc test cmp lds std sub cmp js stos fdivs mov pop mov and adc test out loop or adc scas test ljmp adc pop dec jae,pn roll arpl adcl test push mov test jnp popa test rcr addb data16 dec mov xchg push pop cli mov mov imul add clc xor lock add negb xchg dec je add mov leave sbb inc (bad) sub rcrb xadd ror push dec iret stos lds test xchg shld dec bound outsb xchg in fcomps fisub xor lahf fiadd or dec jle,pt dec (bad) dec cld adc adc adc inc bound gs shl sub adc jle mov jle call and xor movb mov outsl aam imul mov je jb cwtl xor pop ljmp cmp cmp and push or fsubl into bound insl mov xchg add rcll jmp and lock bound jae in lods mov push push cmc push xlat mulb insb sub mov lret in scas aas roll (bad) (bad) mov rorb add sbb jno or outsb sahf push pop sahf xadd shr in sub cmpsl subl orl dec aas xchg insl dec inc sahf sub adc sbb aas xchg push xchg lods pop push mov sbb mov sbbl xor inc cs jnp push imul jns jno jle cltd pop daa add push pop mov mov sbb fnstsw mov or push mov sbb outsl iret movl imul mov pop mov pop std into or mov lods pop pop xchg movsb fisub fmull pop push mov js stc fistpl or sbb imul sbb in cmp imul loop rcrl inc mov mov daa cmp in inc gs out sarb and jle int pop ljmp cmp in mov mov xchg sbb nop fwait adc sub mov push ljmp mov popf pushf push or out imul insb pop jnp call add sub sub inc sbb aas cmp popa sbb mov mov mov inc and dec sbb xor cld jp test dec lods dec sti mov clc inc add adc into sbb add lret push enter imul fistp mov (bad) scas dec dec stos xchg pop fwait and inc xchg popf mov push mov inc or fs fidivr mov add out fisubl lds inc test jb lcall ss les mov mov aas adc and negl xor push adc test lds sub pop ret insb int3 sub xor xor jns lret aas mov cmp cmp cld mov xchg js stos xor sub pop in mov pop jno loop and movsb rcll shl sarb enter mov pop mov pop and or mov in xor xlat sarl aas lds loope hlt mov adc pop add pop es std addr16 adc xor inc ret mov cld xchg mov mov jecxz ds mov sub test sbb in (bad) bsf roll xchg or add stos aas imul mov sbb xor in adc pop push mov and pop std sbb mov cmpsl mov add adc push dec sti inc pop insl cmp imul mov inc stos data16 mov pop test sbb arpl xchg cmp push imul push pop fbld (bad) fbstp imul push dec divb push daa add sbb inc sarl push repnz aas jbe pushf insl mov outsl mul das out sbb cmp sbb loop inc xchg push movsl mov cmp mov mov mov or cmpsb push sbb pop xchg repz es imul add fcoms lret pushf pop fisttpll xchg andb into cmp data16 pushf jge sub ljmp int3 add aaa mov mov mov adc std pusha push jo lret std out in sbb inc jp push fisubl mov add jle hlt adc aad outsl aad mov in dec mov outsb pop mov pop dec pushf scas (bad) and lods xchg iret test and sub jbe cltd rorl mov cmp sub in insl push popa pusha popa pop call int xlat test mov je rcl ret stos dec stos int3 mov fistl mov xchg pop and push jno icebp fdiv data16 (bad) shrb xor jmp sub xchg aam daa subl mov fwait add jmp mov insl cmp xchg lods outsl dec or pop cmp adc sti and jns jb movsl mov mov mov pop loopne pop imul out rcrl in outsb (bad) clc add xchg inc pusha fwait pushf mov mov and les hlt std (bad) ja mov scas out fimull inc push xchg das lret popf hlt aas std mov dec sbb daa inc pop jecxz add fnstcw xchg push dec sti rcl add icebp pop mov sbb outsb in lods imul push cld hlt pushf or adc int gs xchg ljmp jp push inc (bad) cmp jecxz mov jecxz lods and mov pop dec cwtl jl xor fsubs jl stos mov mov lcall mov and (bad) xchg push jecxz test xchg pop outsl sahf fwait or scas iret or ja mov cmp mov inc pop test jle inc icebp sub jmp in sbb xor insl (bad) jbe pop adc xchg xchg jecxz out fldenv out jecxz mov (bad) rcl lret cli and test pop sbb imul mov cmp sub repnz test bnd out stc mov fwait push les push push adc mov dec push jnp inc rcl xor jmp out or (bad) lret out and cmpsb or xchg sub or add es out pop aas mov mov inc sbb ljmp (bad) adc jne push test pop loopne imul fdiv pop rcrb (bad) mov xor mov jg icebp ljmp mov js (bad) cltd dec cmp and inc aaa cmp xchg add subl test ret push mov xor repz (bad) sarb out fidivl cli loop adc leave int3 sbb add dec sbb dec jo sub mov and sub je mov or jg int3 jnp into mov xchg popf cmpsl sub fwait inc push jle xchg xor daa cmp sub rclb scas push mov nop outsb std or int3 mov pop xchg sahf and mov in mov addr16 cmp test hlt dec (bad) (bad) jns xor js mov adc shll subl push aaa aas sub xchg fwait nop add jg scas idivl test arpl mov push xchg sbb mov leave and sahf (bad) ss and sbb sub xor insb push arpl push cmp mov mov jnp arpl cld fwait (bad) lock cmp out fisttp fadds lret cmc roll lea adcl xchg mov lret xchg scas es fcom push mov jo xlat sub jae je inc jle imul je mov icebp pop ret repz sub mov cmp sub data16 or add xor mov popf inc movsl lods mov inc fcoml ja fwait push push out jg xor sbb adc test jp scas ficompl sub out ficompl lea xor fiaddl and inc js xor nop addr16 push cld fistpll in andl mov or stos popa repnz dec ret cwtl pop xchg mov jmp insl mov in sahf cmp jp or lds je xlat dec dec xchg out (bad) aam add and pop int leave jg pop inc jae push out mov xchg xor mov test dec mov sub push or dec lock sarl ret cltd jnp rolb (bad) daa push clc das lcall pop mov push mov mov mov sub loope mov xor dec inc xor scas add in or idivb adc inc inc stos sub inc fwait xchg pusha xlat or mov test xor sub xchg jle sub mov ret es xchg inc loopne cmp add icebp lods aas (bad) sahf pop stos xchg dec roll mov insb je cmpsl (bad) xor ja push movsl push lds xchg add shll fwait imul cmp loope mov xchg mov (bad) stc (bad) mov ficom imul (bad) outsl cs dec popa lcall jae inc ja pop and mov push add push scas inc fsts out adc daa imul out push pop cmp loopne aam daa inc dec rcrl hlt lahf daa xor xor (bad) jo aad add and gs lcall cmc xchg jmp sar mov adc mov (bad) xchg mov mov call fwait and push jg cs lahf test mov or sbb sbb mov in pop mov or mov mov xchg clc inc adc stc adc (bad) push shrb in cmpsl ljmp and fcmovnb (bad) mov stc aad mov notl dec sub adc cmp cmpsb ss mov cli cmp out mov out test jnp ss mov jl push xchg push mov movsl cwtl pop xor aaa pop fsts aaa clc mov cmpsl and mov fnstenv popf push je stc movsl sti subl jo loope js add das or mov shrb bound jns jns pop cmpb and jle ja xchg out jg xchg arpl pop pop fimull xor xor daa sub aam bsf xchg leave sbb sbb clc push aas cmp dec and dec fistpll cmp std xchg pop insl icebp mov mov hlt cmpsl (bad) lods pop aad inc in inc adc and xchg and jae (bad) in pop adc aaa adc xchg shr leave cmpsl aad daa scas mov inc push jp cmp aam push (bad) hlt cwtl xor movsb mov mov nop pusha mov mov leave std insb add pop pmuludq loopne aad cwtl push xchg jbe ljmp xchg sahf push movsb inc ds ret pusha jne pop mov jns (bad) dec add mov insl (bad) dec inc or mov mov adc dec mov sub cli cmp (bad) icebp mov out out sbb xchg aad (bad) test stc push pop scas mov adc out pop adc stc lods cmp aam bound push pop xchg mov (bad) (bad) pop mov jle push fistpl pop icebp aas cmp jecxz or xchg pop arpl inc jb push insb push scas into bndstx adc mov push lea loopne stos xor jmp jle add sbb add xchg test jecxz incb mov push cmp xchg and add cltd daa pop aam pushf cmp jnp adc test into dec enter pop js push cwtl ficom push leave pop jnp idivl inc pop cmp sub and dec outsb mov and cmp jae adc cmp ret inc pop push xchg add dec (bad) shrl loope hlt aas cmp xor or sbb mov mov das adc pop sbb dec and xchg pushf jl cli (bad) mov ja mov aas fistl mov or add xchg cmp xchg adc out adc xor (bad) jo rcrl stos pop jne in mov sbb or xchg int fsub insb lds lcall add (bad) jp sbb outsb std vunpcklps js pop sti inc sub in inc ljmp pushf call sysexit pop dec loope xor xor dec ret pop fstpt stc mov inc (bad) inc arpl and sbb dec xchg stc out xor lock cmp add or dec cmpsb sbbl adc aaa loope jne les xor and pop push stos imul jo pop mov or add inc ljmp inc loope std (bad) stc pop jae mov in push mov fs enter int3 sub inc mov inc cmp jp pop or lods jl push xor cwtl lcall jecxz sub mov ret and (bad) pop sbb push xor push sti inc repz dec (bad) imul imul push popf mov or sub cmp dec inc ret icebp sub fldenv mov js xor stc stos cmpsl pop pop stc and xor imul mov adc add cmc bound in mov sub je inc (bad) jmp adc call mov mov cmpsb push sub lcall inc or adc clc andl into pop dec stos add (bad) xlat cli lcall add rclb jb imul dec push stc in das push jl push jmp decl (bad) hlt and xor hlt mov and (bad) sub insl repnz aam out xchg sti outsl aam add pop mov sbb ss dec jmp sarl push (bad) push outsl icebp in addb mov negl jns sti jecxz out stc sub adc enter xor scas adc sti icebp adc sti stos xchg sbb arpl fnstenv cmp xor lret in sbb jl xor cmp fmull sbb repz nop xchg inc addr16 sti pop xchg pop xlat push lea add adc mov sahf test dec or cs aad cmp mov push pusha subb xchg push call (bad) data16 jg out pop in cmp cmpl gs push stos pop fs add jno ljmp das in fidiv arpl mov mov and int3 sbb cld std out (bad) xor xlat add cs jl add arpl aam stc and xchg loopne fwait je jp int3 mov mov inc sub sti (bad) jb jae int3 rcll outsl inc mov push adc or sbb sub gs test dec repnz sub inc fcompl fwait out push fcoml pop push sbb or outsl test pop mov cmp sub arpl sahf dec ja mov js mov insb sub pop in scas dec lcall sahf cmp pop repnz mov adc bound adc movsb lods jo xor or cmp xor (bad) (bad) lea js stc add xor movsb (bad) jbe fbstp mulb mov pop sbb in jmp adc xchg pushf mov fstps sbb jl lret lret dec xor mov or shrl enter cmp mov cmpsl cmp es aas mov bound add (bad) jae pop push xchg outsl or sbb cmc addb sub dec in lret lods mov fstpt (bad) pop or popf dec push int3 or in sbb cmpsb or test aad imul or jo ficomp call and sub clc imul jmp es fist (bad) pusha ficompl push mov (bad) stc int3 iret sub clc or js mov lods fstpl scas mov mov addr16 call into sbb lcall imul jo push xchg mov faddl iret or or cmp push std pop xchg aam mov popf mov into stos ljmp pop fadd mov fwait cli cli test jmp inc fcmovu lea lea call xlat addb xchg xor inc xlat and call xchg sbb ss in sahf in fsubp adc xor xor cld pushf in ds scas xchg loop fcomps cmpsb push pushf dec outsb cld jmp dec mov pop fs subl enter xchg andl mov fs jg rcl test leave mov sub cmpl pop rclb inc adc pop rorl mov dec xchg arpl dec shrl popf cli xchg ret push sub imull addr16 mov adc adc stos jne jmp adc push ljmp js hlt mov sti xor sub adc pop jae outsb pop out and (bad) iret push sbb pushf xchg jno fucom icebp add fisubrl out aam sub bound outsl sbbb mov stc jnp lds rcrl shrb mov int xchg cli mov ret inc in mov cmp bound stos jo out ret cmp push rorb and mov lret ret push lcall loop inc inc mov pop or inc roll shrb push jo inc jns xor adc pop mov fcomip or shrb pusha jnp mov cmp repnz jge arpl aas insb (bad) mov test sti shl mov mov sahf jmp addr16 add add mov inc movl push inc xchg (bad) adc jbe stc jecxz push adc icebp popf dec popl mov mov movd jo popa lock add enter xor mov and adc or addb lahf push or aam push js out add push cmpsl cmp mov aaa add and out (bad) jno sbb cmpsb lea in cmp cmpsl sti mov inc outsb clc ds jl sub mov cmc and pushf pop xor nop lcall sbb inc cmp jl fwait or mov xchg and mov test sbb jmp jp cmc pop pmaddwd or fistl jo and dec testb je in mov arpl lock jmp out mov stc cld dec (bad) or add jns mov cmpsb cs push loop add push sahf adc add cld ficom cmpsl loopne dec jae pop push mov xchg mov mov pop outsl imul sbb repz inc push cmc pop push ljmp popl push stc sub jmp stc insl shlb cmp inc sbb add or sbb jne mov je add dec sti add iret sub (bad) je jbe sub clc xor mov pop addr16 push and jmp ret vpcmpgtb sub adc fldlg2 adc imul dec fcoml ljmp adc mov insb cmp pop (bad) movsl sbb jb sahf adc jno and xor lret and ret push cmp stc outsb push enter cmpsl fsubs std jl add inc cltd js nop shlb movsl jns pop fistp hlt fldenv or sbb xchg push jmp push inc push lea imul pop or cmc out adc les push scas stos cld js icebp cmpsb dec sub adc mov (bad) dec outsl and in jmp stos mov pop insl mov jl adc repz loop gs pop xchg and pop les in xor or xchg scas and sbb or mov aad loopne int3 mov movsb divl je lock mov mov jnp or cmp push or sub lods mov imul and fs pop mov fwait ret je sbb jae jmp sub mov push stc lcall gs xchg xchg jp mov int lock xchg add jl xchg jmp mov (bad) push bound jmp inc mov pop mov addr16 in add ret dec sbb cmp (bad) jge clc inc cmp les (bad) aam dec xlat push les sbb rorb ljmp xchg cmpsb xchg xor movsb loopne pop or ucomiss insl (bad) aaa mov xchg stc pop leave imul (bad) sub adc fistl mov xchg and std mov push idivb or sub pushf add add int3 lea repnz repz mov call cld inc cltd pushl cltd stos mov cmp or (bad) rcrb mov add sbb mov (bad) out add and shll ret scas repnz js pop adc pusha mov pop or ljmp stos repz loope jg,pn enter les shr xchg notb cmp jb mov nop cmp push fwait cld adc inc ss negb dec or jp ret dec mov inc push mov sbb sbb inc idivl lea mov (bad) ljmp xchg xlat xchg xchg push dec add pop out xor push jne push mov imul lret in int in push xor dec mov fild lds cmc cmp jmp xchg (bad) sub adc pop insb xchg xchg aaa ja inc mov gs adc pushf insb sbb mov xchg mov in mov (bad) js (bad) gs insb shrb dec out sub adc std out mov push mov xchg pop push mov add mov jmp fdivrl (bad) (bad) in mov cmp and jp fs cli ret les imul mov test bound scas adc mov rcl into jne cmpsl clc dec and mov test xchg push and jl adc in sbb push in loopne mov es push sub xchg jg push xor mov repnz movsl and xchg ret ja aas ret adc or mov dec lret in int3 fisubrl pusha push out push inc jmp movsl loopne jne test mov jns outsb (bad) sbb les lret outsl xchg pop cli sub sub repz push push push inc nop (bad) mov jecxz icebp mov cltd int3 insl sub loopne and in or xor push cli mov mov fadd pop pop (bad) fadd in mov inc les int3 lea loope (bad) sub movsl mov fs (bad) repz (bad) clc mov xchg into pop loopew fsubr inc es fwait (bad) in or push test adc orl push popa (bad) cld clc and (bad) hlt lods dec je xor push lret lret jo (bad) cmp mov in jecxz mov sbb (bad) add cmpb aas push xor insl pop jg movb imul pusha int rcrl and (bad) int3 out xor je xlat loope cmpsb sub std add pop jmp test push cmp shrb insb inc cli add jb mov dec push cmpl frstor or stc and push pop sbb stos jo push mov bound mov sahf movsl jo dec es mov cmpsb lea lahf in arpl push adc stos (bad) cmp cli jmp loop cmp shrl mov ret ljmp push fist rcl insb sbb mov leave mov repnz lcallw xor add and in insl adc mov clc aas (bad) jbe xchg xor popa sbb xchg subl xor fisub mov into fstl out sar push or sub xor dec push push sub lds repz push aad out (bad) shrl mov bound push pusha and (bad) jae mov ret aas icebp repnz jecxz pop push xor pop cmp xchg pusha daa mov xor mulb push mov (bad) icebp dec xchg inc mov test jmp sbb sub inc rorl mov cmp jo hlt and stos mov loop push scas jno ss sbb jg jle xor cmp or cmp xchg push or inc inc dec push mov cmp pop faddl arpl cmpsb mov cmp insl out out ret jmp xor insl (bad) fld outsl lret out ret jbe pop pop push jb adc push repnz adc mov insb testb push arpl pop stos addr16 pop mov dec pop je mov (bad) cwtl add cmp ret fcmovu lret in je les mov inc pop jbe adc mov push jl fs arpl ljmp repz jmp and mov mov (bad) push outsl aam movsl inc ret mov jne xlat inc mov xor jb dec jle int3 outsb sub int adc add sbb dec cmp lock and cmp or add pop loope and out int (bad) cmp (bad) ja pop mov mov into cltd in or add icebp push dec fadds adc sar and (bad) mov xchg ror lret cmpsl fisubr rcr jo adc adc cmp cmp imul xor pop addr16 push ficompl mov add cmp sti call dec test xor xor mov dec mov out fdivrs or out ss not and cmp es loope out pop sub xchg mov mov (bad) dec ret imul push xchg (bad) pop repz mov mov cwtl mov jg mov pop or jmp cs xlat add insl jnp call test mov mov jne xor mov enter dec xchg lcall mov add mov idivl enter pop cmp mov push or cmp xchg sbb mov mov test mov (bad) jp (bad) imul jmp mov test test std mov pop and dec rorb fmull mov addr16 mov xlat (bad) jnp sbb inc mov cmp int3 rcrb in and repz xor in jb xchg fs in lret cwtl push jmp mov add mov test mov sbb popa mov inc cli push ja pop pop (bad) cs fistpll (bad) mov mov faddl xor sarl mov ret add pop xor mov idivl and sarl and fdivs mov rcrl add dec mov mov mov jmp scas lret pop popf fs fcompl xor dec cmp cmpsb (bad) das jmp sbb inc mov inc xor add cmp xlat pop loopne inc dec sbb enter (bad) dec and mov fdivl js lods inc enter adc bound jmp sub call xorl lret mull mov add insl push nop mov jp mov ss in push push or cmp mov mov mov add fsubs aad jl imul xor loop or dec andl int les dec xchg xchg cltd mov mov sub xchg pop data16 iret dec jecxz iret (bad) mov inc jg scas pusha adc dec (bad) (bad) push inc jmp hlt ret fdivp mov fisttpl mov xlat mov pushf hlt mov lret xchg xchg xchg int into dec sub int dec in inc mov jo shl subl daa daa pop dec call cmc repnz jl fisttpll shlb pop inc mov mov js mov (bad) or lret js into add xor loope xchg aad mov mov repnz out (bad) cwtl dec aas (bad) cmp push inc jo gs pop loope inc arpl mov push jle (bad) xlat or fdivrs cmpb xlat dec fcoms jbe (bad) loop dec mov jnp lret sub fcomps cld pop inc daa add xchg mov bound rorl pop arpl push hlt out mov pop xchg push dec loopne pop xor xchg ret fdivrs bswap xchg pop lds mov push dec test and test icebp punpcklwd cmp push in mov mov jae jg inc jns iret inc ja loope loope cmp sbb cmpl mov push inc negl push lret xor pop mov outsb arpl lock fsts (bad) roll jg and icebp xor in subl add cmpsb push and sub mov pop adc inc jmp outsl adc adc les jmp lods xchg and lods inc push push jb jbe add add and cmpsb fidivrl in sarl push test scas jne mov int and mov jno loope push and hlt (bad) imulb pop and std scas lea push pop nop and and repnz mov in (bad) jle mov xchg iret jne pop mov fidivr mov jp mov arpl jns push hlt js clc jnp inc orb sub xchg lahf jo mov int jnp dec test in add pop fist jle or sbb inc nop and jno addr16 mov xchg test std xchg lahf push sub js leave ja imul add sub arpl scas xor mov scas jo cmp lea insl sbb mov sub sbb vdivps xchg add in mov lea push gs out std xor rcll dec sti (bad) aad add cld je (bad) push sbb fidivl xlat fs pop pop aas adc jne and popf xchg movsl cmc rcr fidivr ret movsb (bad) popa cmp mov jae jb (bad) js xor (bad) arpl cmp push jge movsb sub sbb arpl stc xor push add loopne mov cmp cmp fdivs idiv lea dec std dec add or sbb fisttpl insl mov (bad) mov jmp (bad) in cmp or or arpl rcll into adc or add icebp lcall or into idivl aaa scas aas outsl sbb jno or xchg sub sub test imul ja jg add inc repnz sbb mov clc jae jmp push out add mov adc imul loopne fsubrl pop into mov cmp mov xchg inc add add pop sti jmp inc fdivr scas jne xchg inc pop pop lock popa fcom cli dec sub adc push pop fs out repnz sub into flds fiaddl or data16 out mov push test mov test pop xor or sub dec push popf cmp scas repnz jl fcoms dec (bad) ja xchg or pop jmp (bad) mov sub jb ds mov lret pop sub adc mov push inc es test dec std pushf pop pop scas inc fisttpll jecxz popf jo pop (bad) iret int3 cmc add cmp in fcompp dec inc cmp xchg sbbl (bad) out push clc cmp and jbe mov stos mov cmpsl jle lcall adc jle out or push pusha test jmp imul sub in dec cltd imul out adc inc sub incb mov or in aaa push leave cltd (bad) mov or sahf mov adc pop test rclb int3 ret push adc addr16 xor push dec mov sahf xchg out nop roll fwait pop cltd adc sbb sbb xor int or js xor test lret sbb data16 divl jmp cmp mov insl mov push int3 clc or in arpl fcoms sbb xchg sahf xlat addr16 arpl sbb mov add test mov dec pushf movsb shrb test cmp mov cltd call jg out cld in fimul movsl fidivrl les or dec mov gs (bad) ror jae mov cmp sbb cltd enter xchg pop mov jge xor movsl cmp and negb push mov gs popf sbbb cmp jbe sbb in inc xchg sti sti in pop sub sub insl lods jecxz daa lea mov xor sub adc (bad) std dec xchg mov add sbb mov subl or jb add (bad) pushl mov mov jno mov xlat and enter in scas popa lcall jbe jo xchg add add lods adc lret add adc mov jp scas fcomip data16 popf xchg ret jns mov pusha cmp mov adc xor xor jno sbb test mov cmpsb sbb mov in clc and jae sti xor xor mov fldenv lret push fmuls mov pop and cmpl dec je sbb mov (bad) fdivl int3 cltd mov sub movsb test repnz adc xchg push repnz cmp adc outsl jmp xchg inc inc (bad) push gs jo test inc or sbb mov mov lret push gs lahf cld cmpsl lods fnstenv mov lahf test jo xchg dec (bad) fisub adc cmp push hlt pop frstor aam push fstpt (bad) in andb shrb aas sub mov push stos arpl rolb (bad) out std sbb fs adc lods cmpsb or in scas out push (bad) ret out mov xchg call jno test loope mov cmp into call add mov pusha jae or ss inc (bad) mov std jmp shrl (bad) mov cmpsl sub inc push mov clc push inc ret xchg outsb (bad) testl xchg xchg popf mov call adc fs stos mov or cmp js xor outsb js lds lret js xchg in add cld xchg adc gs shl subl jmp mov lods (bad) loope lret xchg nop or mov sahf inc mov inc inc or pop lds fmull (bad) and xchg inc iret in je jl in xlat outsl pusha or xchg in push shlb ret loope lods pop cld mov ficomp das mov aaa push jecxz ds push mov (bad) aas mov xor or (bad) lcall dec imul aad lret adc cltd test inc pop push mov stos mov stos and xor vunpcklps or cmp mov int inc std jl lods sub js imulb (bad) xor mov int mov xor adc ds (bad) jns icebp xchg divl inc add arpl cmc pop rcrb mov aas lds push aas std adc push imull int3 sti ja cmp mov cwtl push push dec xchg movsb mov xchg inc cmpl test inc sarb jmp pop imul push movsl xchg out adc lods test out (bad) shl push sub push ja xor xor fwait shrb pushf insb xor adc add or mov pop stos mov jne sub lock inc test mov (bad) fucomi pop add icebp mov and fcmovbe and ljmp sbb sub repz int3 and xchg fucom jbe mov (bad) or pop in pop ja pop or push cmp pop gs push out popa push imul push out mov xchg push jecxz stos or pop ret cli clc cmpsl sbb mov movb pop sub sub aaa xchg cmp mov inc jns mov pop rorl (bad) aam sahf mov icebp (bad) icebp sbb cmp xor inc jmp jl daa add inc mov sub xchg (bad) sbb jo dec fcmovbe jp fbld lock push jl dec xchg push pop hlt leave pop divb mov movsb leave sbb rorl cltd lea pop cltd or insl fcoml sub fist jno in jp outsb fidivl mov scas lea js setno in ret cwtl (bad) fsub in sarl arpl mov in loopne cli xor or cmp pop fmull lret dec push test into xchg movsb dec push sub loope les ficoml mov cmp and dec lea or (bad) jmp ljmp pusha mov lea xor (bad) sbb mov cmp pop sub ficomp mov cmp out and mov mov mov lahf loop loope outsl sub pushf xchg and pop sub mov test mov ret sbb lods sahf hlt imul push jb les dec test xor push cli xor lcall mov and jl ds dec in movsl fs popl out sbb mov loopne add push movsl loopne xchg faddp pop xchg fdivrs fildl stc jno mov outsb push xchg mov sbb daa or test lods (bad) sar xchg iret sbb push mov sbbl std out clc cmpb inc xlat push rcrb lcall (bad) stc outsb or xchg fs add imul mov jne or les lret lret sarl push arpl adc outsl (bad) loopne cmp leave (bad) lret push fsts xchg ss fs (bad) ljmp stc pop jae xor cli fistl insl or and xor or and ljmp dec mov cmp xchg and mov xchg or jecxz mov (bad) mov lret dec dec lods sti lahf sbb inc jno sti divl (bad) jo add xor add (bad) xchg inc sbb out (bad) push or jne out inc aad rcrl mov push in inc cmpsl mov movsl loop pop aad daa xchg xchg jnp in jns push sub lods and ss dec dec scas clc int3 popa leave sbb dec in repnz lods pop jne addb lea aas sbb and stc hlt imul adc call sub (bad) pushf lahf in cmc jno aas arpl movsb sub fwait cmpsb movsl int imul sbb stos test das sub (bad) out xacquire outsb add inc aad ljmp add repnz add ds mov outsl jb fnstsw and jp mov and mov pushf xor popa (bad) mov test and xor add xchg adc outsb scas pop and je insl xchg into fistl jle pop mov imul and mov das in jl sub mov dec out icebp stos dec jo stos or scas sbb mov (bad) mov icebp call or pusha dec in fisttpl pop divl mov jecxz aas testl cli sarb adc leave xor inc mov pop (bad) push jo sub shll mov sbb mov jo inc fstp push dec lods xor int fnstcw pushf daa jmp dec pop out fidivr mov pop lret imul jbe in sbb aad pop mov mov repz push push inc inc xor push adc sar gs sbb shrb add jbe lret adc lcall pop ret cmp scas inc xchg sti movsl fistpl shrl xor lods mov pop stos (bad) ficom mov adc loop je mov pop pop ds cs aad or inc adc jnp xchg cmc movsl push jbe or out inc mov call pop js lock std sub loope xor mov lods push add adc insl aad adc or pop ds xorb fildl mov in xor call negb loopne cmp (bad) imul push adc push test aad dec aad and js les or adc mov cltd xor pop stos jo mov popf sub dec mov ja mov push sahf movsb mov inc cmp pop (bad) aad mov mov fnstenv mov push mov repnz mov lods mov outsl xchg daa push pop jl mov loopne roll jg pop aam mov xor push jl dec cltd pop xchg pusha pop cmp push in add push out push push mov fsubr clc xchg mov push or mov sahf jo mov nop lret (bad) (bad) fimull xor aad aas shrl mov rcrl inc fldt or adc std jmp fstp rcrb push sub fwait sbb jnp add mov imul mov pop mov xor xchg mov inc pushf xor setl ret or imul mov xor fild mov push mov add cmp xor js pop jnp out inc inc out aas test adc cmpsl xchg cmpsl adc out rclb mov xchg or (bad) mov lea mov arpl sub lret pop dec cmp mov mov lods sub mov es rclb pop cmpsb fs clc cli andl fstpl ret and or xor mov int xor arpl pop add jge xchg pop inc dec cwtl jl clc sbb push outsl and negb xchg xchg xorb rorl jmp jmp cmp fadds jb push xchg loope out jbe inc jb popf push in lods add jle pushf push pop dec out mov out sub and or cmpsb popl or pop movsb xchg jge and sti xchg push je inc insb test push or cmc outsl popa int scas jnp lret dec pop jg (bad) cltd movsl iret jmp push mov mov sub lods inc adc xlat sub jmp xchg out shr sub add sahf xchg dec mov xchg and or jb inc jo and inc fadd push xlat cli inc ljmp rcrb loope ret sti testl mov mov push in or mov aaa rcl pushf and out scas mov jg cmpsl imul push fwait add repz incb add adc mov hlt jbe es decl dec mov sbb push and pop sahf and push and dec rcll jno addl fimul enter xorl add push xchg pop rcrl loope cwtl inc pop fiaddl cmc xor movsl dec les mov mov mov imul jmp xchg xchg scas cli ss sbb into adcl fst xor mov pop (bad) xor push shlb ror insl lods adc inc push cmpsl push out xor inc shrb push lea add int or shlb mov xor nop sldt xchg jno je fwait sti mov daa in hlt add fwait in xor daa mov rolb je dec cmp sub dec clc aaa or scas (bad) xlat inc pop adc es mulb hlt insb inc mov jno (bad) (bad) out xor fwait mov mov mov daa cmp mov lock bound xor lock aaa loop hlt ss mov push out test add mov dec insb (bad) xchg mov and xchg cmp and and add (bad) aas (bad) or lock rclb xchg adc and mov gs scas jge aaa (bad) sarb rsqrtps or (bad) outsb and xchg cli mov mov or fisubl or test fwait mov pop lea sbb mov lahf fldenv push popa stc nop jne cltd xchg push outsl gs cmpsl pop loope fsubs mov push sub add (bad) jg pop fimull mull ss js xchg mov mov mov lea ljmp xor mov and les sub sbb ljmp xorb mov cmp popa jnp lahf insl stos pop aad jnp mov ss xchg clc fidivrl mov xchg add andl or inc fs aam aaa pop mov xchg xor jle mov mov dec (bad) hlt push lahf add mov sub aaa sbb mov inc mov inc inc jp sbb popa pop cmp jecxz in icebp popa adc leave cltd (bad) pop sbb jg lret hlt mov loope push or inc es xchg mov adc sti orl or movsl lea nop int3 cwtl test out mov gs mov add divl or ljmp cmpsb leave lods sbb (bad) cmp int3 ffreep push mov cvtpi2ps and shll js or (bad) or xor mov pusha push xchg mov (bad) mov inc cmp aad imul adc mov sub jmp sub and and cmp pop pop jg pop pop sub cmp fs fcoml insl lcall pop mov cmp xor jbe ret insb cs and sbbb add mov test imul je add (bad) ja jns cli mov mov xchg mov mov jnp xchg test or fwait jo in inc push fsts insb jp outsb sbb jmp (bad) jl inc leave jae out cltd loop fbstp sub pushf test sahf pop jp int3 push sub mov inc into rcl lock or dec mov inc into rcl lock or mov daa mov mov mov adc (bad) jbe popa rcr add aaa ffree sub repnz nop inc fnsave xor fnsave push or dec call xchg mov cmp xor outsl addl sbb xor pop test fnsave jl loopne daa imul sub popf je,pt and sarl pop repnz cmp mov into adc push (bad) fadds popa pop mov push jp dec mov call insb (bad) frstor leave ret pusha aad (bad) cmp sub dec sub mov sbb repnz push test cmp iret fwait pop int3 push and mov sbb push inc xchg repnz sub pusha cmp mov repnz mov dec out sub out adc or mov inc lcall sub mov mov loop or pop mov push shlb test mov leave ret pop pop das arpl (bad) std ret mov ss icebp test (bad) mov or test icebp mov inc mov out push cmp iret fnsave lds shlb mov (bad) inc lods pop enter sbb inc mov lahf xor pushf xchg into xor jl jge in mov xlat xor xchg mov outsl jl or shlb pushf jb xor pop xor sbb xchg jle pop mov cmp ja cli pminub ja rcl out pop cmp int3 inc (bad) into sbb lea xchg push aad push sub or outsl gs dec mov (bad) xchg ss pop mov xchg mov push xchg pop mov mov std int lock cwtl sahf sahf push sub jns lods scas in lret cltd sbb clc outsl aaa mov int3 cwtl fistpll jge imul int cmp arpl push xchg sub loope xor aam int3 sbb mov les or sbb and addr16 cmp mov jg sahf cwtl sahf mov xchg daa ret sub out (bad) lcall mov lea fdivp cli nop sub dec inc pop cwtl lock aam mov lock jg xchg in add cmp scas inc and prefetchnta shr ss ret lret ss dec fadds gs cwtl push arpl add sbb xchg mov sbb fwait and fdivl mov xchg xor sub (bad) pop fcmovnb pop add inc test insb testl int3 sti lahf pop adc sbb (bad) and rcrb outsl popa xor test in mov sub and call mov (bad) aas cwtl negl jp and (bad) mov aad push add arpl sahf ret xchg js or ret mov jp sbbb sub aaa into cmp rclb mov mov leave clc cwtl xor rcrl cmp shl pop clc outsl ficoml dec js mov faddp dec xor push fmuls inc xchg mov mov mov in les xorl pop (bad) sub adc cmpsl push mov out aas pop pop add cmp push lods inc xchg mov pop pop cwtl sarl cmpl mov cwtl pop or jg daa dec or rolb jno fidivl mov pop into adc jmp popf or jg out gs xor pusha dec add cmc cmc movsl es fwait or cwtl popf inc popf xchg fwait and xor pop enter lret mov pop inc cmp gs imul lock xchg xlat xor mov je push pop jnp gs fs (bad) pop jl pushf addr16 shll jle data16 pushf pop daa mov pop xchg sbb lcall mov (bad) mov xlat xor lea loope jmp insl inc jne iret sub (bad) and sar mov xchg adc xor and mov or xor cmpl addl cmpsl pop icebp mov gs out (bad) push mov popf add xor jg fst sub aas f2xm1 jmp adc push sub lea test popf sarl (bad) outsl fldenv cwtl cmp (bad) and mov jbe mov sub fcoms test pop aaa mov or fs arpl jecxz jo cmpsb rcll ret xchg mov stos clc pop arpl aam or fadd xor mov aad insl push pop aaa int3 (bad) stos xchg mov push fmul (bad) dec push clc addr16 or or lock mov ret cmp or mov jb fs mov fsubrl or lock pop xor in pop cmp and (bad) jge lock repz mov pop xor jnp push bound sahf (bad) mov imulb (bad) mov xchg jg lock and xchg adc inc lds dec les icebp and les leave sub cmp lea cmp (bad) cli cmp in lock addr16 xchg pop dec jbe,pt mov aas mul loope arpl pcmpgtb mov mov and fnop and dec call into mov adc mov pop hlt (bad) dec and pushf push cwtl inc adc js out mov repz mov (bad) je push jb sbb xchg mov int jg xor popf fisub sahf cltd int3 call stos clc inc xchg cli or (bad) cmp xchg test sti dec daa xchg mov scas pop cmp cltd leave test cmp mov pop pushf addr16 xchg inc je mov lret and jnp mov push nop fnop int3 push lock mov and hlt mov adc xor je jmp xor int3 xor sbb sub fstp fidiv pusha imul (bad) push in int mov (bad) lea int sub es mov mov push mov inc lcall sarb leave les ret mov lret mov into int3 scas mov cwtl xchg mov dec mov push xlat int3 fldcw movsb rorb loopne mov stos stos test enter cli loop cmpl add jge cmpsl sahf pop cmp andb xchg in push jmp enter sub jl jle sub pop test nop and cmp push adc and jl pop notl cli cmp add mov pop mov popa adcl pop mov sub inc fidivr xchg int3 ficompl push nop sub mov push dec cmp pop jmp xchg aad xor sbb pop mov fiaddl out lret pop lods nop scas shlb add sti (bad) je cmpsl mov dec xor cwtl data16 mov adc shrb enter push ss adc daa mov lret inc inc sbb (bad) or push cltd jge pop outsl inc sbb bnd nop xchg bound adc nop jecxz fwait sbb cs push mov pop shl ja aam pop xor mov dec inc pop add popf pop sbb push mov xchg call sbb and xor es mov pop xchg jle and mov jle ljmp bound fs mov xor pop xchg inc xchg pop inc push cwtl xchg lock pop cmc inc in daa and test sbb (bad) sbb push cmp push arpl test mov xchg or adc or imul je in daa out cmp leave jp mov loope pop lock std sbb lods add push inc push inc jb leave xchg in or mov or adcb in pop xor and jno sbb cmp fwait ret out xor imul clc repnz rcl repnz out sbb fwait inc xchg fdivs jo es xchg mov mov add jp add mov pop mov pop je ljmp mov jmp int3 in sarb lret mov mov or pop vpavgb loop shl cwtl out dec jge pop roll (bad) jge or or (bad) repz jge inc in movsb out insl int3 fmuls sbb cmpsb dec popa mov jle xchg pop ret add fcomi cs pop (bad) or or stos shl addb pop subb xor dec cld jmp imul scas or inc popl or xor jne orl jne scas subl pop nop mov test xchg mov lds mov xchg dec sahf cld pushf cld pop hlt das aas pop mov (bad) mov ret (bad) pushf test js in jp adc dec pop insl rclb push movsb jmp loopne jle lea rclb in in rorb pop dec add into dec ret mov fisubr xor dec inc mov pop push lock ret dec sub sti xor sti inc add lret clc ja push insl sti test sbb sbb inc jecxz xchg jmp scas push int ret inc in insb lea std inc sbb lret xchg imul fist inc insb or dec pop fist lret dec xchg lret leave mov push pop and sub xchg mov jmp in je hlt andb stos xchg pop int3 push (bad) out call (bad) in mov stos rol test fbld fbld inc push xchg dec test add push dec add test sahf inc push out xor mov sub sbb adc xlat mov pop fbld jl and loop repnz dec mov ja lahf test outsb mov mov add scas orl jmp lret scas push add or inc pusha roll push add dec add imul stos in test (bad) jle ret flds lods adcl mov mov mov and pop mov (bad) jl icebp mov (bad) icebp ret mov or sti pop push jmp ds add (bad) dec (bad) mov and loop pop push jmp add mov outsb in stos fsubrl rolb add cwtl stc js aas faddl ret outsb fadd call cmpsb cmpsb or xchg adc jno outsl cmpsb xchg sub incl pop push jo clc movsl or incl cmpsb dec add popa decb add push and pop (bad) in les pop ds adcl sbb std (bad) push outsl and aam cwtl mov xor adc lods fcomip dec lock add push dec or jecxz dec test lock imul rcrb pop sbb xchg xor fild sbb pop add cld add mov push mov jge mov scas lea fs bound in jo test pushf push dec incb repz jmp movsb inc inc (bad) stc dec xor and adc push pop fimull push inc decb and lcall dec in mov out mov sbb aas das lods in lods out lods enter fs xchg test jle shll fucomp cld ljmp lret jge push mov adc add adc scas mov push test pop and mov or and or dec inc fbld stos test enter lock lods lret scas jne cs xchg ret orl mov dec mov add mov jns inc shll mov fcmovb sub shll cmp xchg and bound adcl lods mov (bad) mov cltd mov out pop dec push into pop out xchg mov pop (bad) mov ror les cmpsb int3 test cmc call iret insl les aam add mov dec sub cmp leave mov mov xchg or pop (bad) std lcall loopne mov call mov ljmp test pop fidivrl pushf insl inc sub aad xor cli mov nop cmp in mov insb push pop orl rorb mov movsb add push pop cmc push mov and outsb (bad) fsin dec add push or out adcl test test dec imul dec lods test mov lret sahf mov lods cli sub fnstcw (bad) nop fiadd fdivr arpl mov push pop call sarb pop cld dec or dec sub jp sbb dec mov popa lcall add imul inc pop ret cmp fistpl mov mov cmp hlt push pushf xor and lods rcrl add push pusha icebp lcall hlt cld jle test cli rolb test enter gs sbbb ret add popa lock mov ljmp pop stc jle leave push enter cli pop hlt cltd hlt dec jbe es push mov lds jbe aas xchg lret push jmp push out add fldt cmp cwtl cli push mov dec pop fmull xchg inc push inc inc in fwait mov inc incb inc cs jmp stos mov cmpsb cwtl scas adc lret clc aad pop push lods and stos sti into inc fdivrl test push je adc lea lcall dec sbb push out repnz out out dec or push pusha (bad) fild lret test out push icebp aas ljmp jl inc pop into or jno decb mov cmp push mov daa xchg daa outsb mov insl mov cmp movsb lods movsb fdivrp leave aaa rcr push (bad) pop (bad) dec mov or adc jmp aad push jbe popf daa pop push icebp push (bad) push xor (bad) lcall (bad) adc (bad) dec sbb mov xchg or pop out insb ret sbb stos loop adc xchg cmp dec jge ret enter js pop mul pop in test fldpi hlt dec test js sub sub loopne mov stos ret cvtps2pd adc mov xor add roll add jmp or lock add mull cmp push mov xchg sub mov push nop xor sub outsb jecxz arpl mov jbe dec cli into mov pop fmulp addr16 mov ja cmp mov xor (bad) inc je push and rcll sbb in add dec clc fdivs pop mov insb ljmp in cltd mov (bad) add lret fs and out mov jp idivb frndint pop movsb pop movsb fisubl jge fisubrl sbb inc sahf sbb mov lock ficompl insb ss lahf cmc movsl mov pop fsubs test stos pop stc fisubrl aam stc fs ret popa int3 mov stos mov push leave aas push (bad) je jae movsl mov or (bad) lret (bad) (bad) loopne loopne (bad) mov mov enter mov xor dec rolb pusha mov stos sub dec sbb sub push lcall jmp pop call adc and dec (bad) xor pop jg out scas mov jl mov sbb mov pop into push inc lcall stos jl or orl in in ret test inc pop lds mov (bad) dec and outsl js or out rorb (bad) mov pop add xchg jmp mov loopne push movsb add jns cmpl lock add nop mov mov test inc cli cli and (bad) hlt fldcw and out test xchg ds std push aaa iret fmul aam in clc popf sub fisttp aam icebp sbb ret push jo xor mov pop fs lds push push cwtl imul stc jb and cs adc dec inc rolb dec and and pop nop stos mov mov mov sub mov ret push ljmp lret test push call call xchg aaa je mov jb insl rorl push loopne in dec mov cmp mov mov inc sti out pop popa pop das sub mov aad mov sahf pusha xchg clc ja add (bad) dec adc decl test lret add fidivr sahf aam loopne mov push (bad) call inc dec push inc jnp js cmp repnz and (bad) jbe pop sub sarl (bad) cmc inc stos call xchg movsb rcr mov shlb ret popf inc jl cmp (bad) or fucomp test jnp repz dec outsb (bad) sti cwtl jge dec pop aaa inc enter enter leave lret int3 (bad) enter or lret int3 (bad) enter or lret int3 (bad) enter or lret int3 (bad) enter or lret int3 (bad) enter dec mov jl popf xor dec add push mov (bad) pushf ret pushf jmp fldenv imul fprem1 pushf push sbbl lcall adc repz dec ljmp push fs insb add in sub cltd es lods pop int test scas pop sub jbe lcall int3 sub cwtl cmc je jge dec sub mov int3 cli outsb int3 mov ret jo roll or mov pop out pusha iret lahf push rolb dec mov aaa pop (bad) int3 pushf sbb xor mov sub ficomp cmpsl pop adc addr16 imul xor pop jp xchg out ret xor (bad) out outsl ljmp fdivrs lea lcall lret sbb mov or dec (bad) mov es xchg fnstenv or cwtl dec aad dec pop enter shrb xlat lret int inc fstpl pushf adc pop es xchg lds mov mov arpl mov stos in movsl cli out sti lret cmp mov clc aad jnp pop jnp shl ja jae adc sbb jge imul mov push xchg fdivrl outsl lds ljmp ja mov pop enter xchg call sub call mov rorl int or test mov xchg xchg imul mov fldt jg mov lret pop mov movsb inc dec movsl lahf adc mov push fist and movsl pop jnp xor aad fdivrp mov cmpsb loopne or orl ja outsl push cltd and int3 and mov mov (bad) fldcw pop push mov pusha popa push popa nop xchg addr16 in dec jp jno push rorl adc out imul fwait jo ss pop iret idivl inc add push jmp fucom inc mov pop daa (bad) fldcw mov imul dec xor add dec mov sbb sub inc and inc lods sub aad adc notb pop insb jle stos inc push inc xchg inc fiaddl sti das xor addr16 pop das je test (bad) enter jge mov mov push cltd jo icebp mov and movsl pop add xor add sub cmp nop dec dec xor push negl test sbb fs jb sbb ss xorl jns jns mov or lret dec dec sub (bad) lds insl pop push in pop adc addr16 add stc repnz cmp and ds sub xor out inc (bad) hlt stos dec push mov push sbb out sahf js inc nop fimul adc in imul cs adc out ds jecxz gs xchg fcomps adc ljmp lods inc mov cmp popf adc fidivr adc mov (bad) out xchg sbb mov mov in aam push xchg lods data16 jbe adc (bad) add sbb mov xchg add xor cli jno push int lahf ret cmp (bad) cmc add push mov sahf inc mov cmp xor mov pop call dec out mov jns xchg dec push mov inc nop jb ret sub jp mov sbb xor sbb add mov add (bad) jg pop xchg sahf iret enter cli mov or xchg jne insl lahf dec cs dec (bad) test ret inc (bad) sbb lcall push stos cmpb xchg mov or in lock and cmp imul sbb push ret gs or into arpl cmp mov ljmp loope int push mov insl imul xor aad pushf cs iret sub pop movsb iret out jbe dec xchg lods dec insb pop add push ret cmp sahf popa (bad) adc ret jne inc and add sahf sub divb jge jae xchg xchg jnp leave sbb js icebp icebp js out sarb sbb cmp dec or and push ds pushf jb clc fnop les rolb mov in fs push mov sub jge push pusha repnz jae cmp mov aad (bad) or arpl fistpl xor pop sbb mov push loop jbe out fisttpl lahf sahf xor ss or add mov add fnstcw xor test adc stc and iret jp cli (bad) mov popa cmp mov out dec (bad) mov sub outsb aad jge xchg in pop nop shrb jno (bad) jnp scas imul inc insb (bad) call pop jle lods mov jb dec cld or cmc rcll xor jl mov pop pop mov es cmpsl xchg scas (bad) mov sahf js dec mov mov imul int3 test xchg mov ds xor dec push call (bad) jmp xchg aaa loop and mov sbb lret ja xchg mov je mov inc dec sub pop jp aaa inc setb fistpll mov xchg outsl cmp clc ret adc std inc int adc xchg push xor (bad) aaa cli out ret ds aad adcb or sbb xchg pop loop xor mov movsb and shll scas lock jge roll das subb test inc jl and mov xor dec fisubl out mov out loope xchg je int xor out hlt aas push pop test adc std mov scas sbb movsb cmp in inc mov jns xor shll in fs mov mov jbe das stc imul xchg stc mov sub add cmp clc pushf mov sahf lods hlt test orb arpl enter jns aad and lock adc or addr16 sbb xchg (bad) inc mov sbb loop out insl mov sbb inc cmp repz fbld stos sub mov stos add loop jno xchg xorl jmp cmp adc xor mov jecxz out imul inc bound dec mov adc mov das xchg loopne in cmp in or dec pop pop sahf fiaddl clc push (bad) (bad) mov mov js stos test inc mov lahf mov pop dec mov out pusha mov push test sbb jo mov rorl pop mov cwtl gs xor clc int3 pushf aaa rclb mov dec or je leave mov aad repz int3 into clc push test std jb xor das jnp cmovo dec inc mov popf outsl xchg stos adc leave call and addb mov test and roll std loop xchg xor or dec inc imul push clc mov sbb push fsubp mov push mov fimull push and sub mov push test cs nop pop mov adc negb hlt adc push jecxz sbb jl cmp int mov (bad) fadds xchg and xor stos dec fildll test arpl mov aas cmp aas les enter test push cmp imul xchg pop adc xor cmpsb lods mov xor addr16 addr16 jbe and jns lahf ja loope adc inc es adc imul pop daa les xor inc das fwait popf cmp or inc test pushf xchg shll icebp lahf sub call add mov out dec add mov and sub push push lea inc push repz fwait adc leave sbb popa xchg out cmp xchg int shll out xchg addb test fidivr nop and jg lock or iret and (bad) adc adc jmp mov jo and xor mov adc xchg loopne mov out jl lcall jmp pop mov inc dec xor pop rcrl stos ja insl pop gs adc lahf popa dec or (bad) xchg mov and push cmp in scas inc mov das or stc ds scas (bad) sub xchg aas xor push push cwtl mov adc mov rorb mov xorl adc ret adc je dec movsl mov xchg lods jo and fldenv inc mov call mov dec jo fildll sub daa cwtl inc gs nop cwtl out xchg hlt or aam cmp push mov gs in and add arpl inc and mov and frstor repz scas xor mov push pop cmp loopne jo push int stos hlt out (bad) lea push int push call (bad) lret jp rcl or adc lret push pop cmp mov cli test gs jp mov sub fimull stos xchg test inc mov mov push push dec adc insb ss lret cltd enter xchg repnz jnp jg sbb test cld sbb sbb pop out rolb mov jle push orl cwtl pushf outsl add out lds rcr and xchg je insl mov cmc xchg xor aas inc je inc data16 pop fmuls shll jge mov iret push cld lea dec je movsb mov fwait bound jge hlt mov cmp xor jp dec xchg mov cmp mov ja mov xor push clc sbb out xchg std sub in cmp push lock pop roll push hlt int test pop inc je lods xchg (bad) or test jle sti and or stos xchg xor addr16 mov xor xchg pop nop popf cmp jno mov and cmc out push rorl lds mov aam das outsb xchg cmp xchg clc jecxz (bad) xor dec xor cmp popa xchg xor pop push lods cmp js xchg repz ficom mov je dec xchg mov ss pop xchg (bad) idivl outsb push stc bound dec je (bad) xchg cld jge (bad) mov arpl sbb mov outsb push cli insl pop les mov jno mov data16 aas and bound (bad) push mov xor daa inc cmpl daa out cmp pop pop popf xor fisubr dec jb out mov pop (bad) xchg cmp xchg cmp pop fsts loopne xor xchg jg xor das (bad) xchg xor adc cmp data16 aaa lea addr16 xchg xor xchg lock shll jp loopne cmp pop xchg bound insb push clc andl aas sarb cmp cmp addr16 xor lock daa inc lea iret xchg cmp das push out xor (bad) add xchg data16 daa in bound jg mov int3 ficom jb mov pop or (bad) xchg data16 add adc rclb dec je and mov cmp out inc fsubrl aas (bad) jb inc out sbb add shlb and sub je xchg addr16 mov rorl dec aas or inc das mov xchg jle cmp bound rcll daa iret lea inc xchg cmp addr16 xchg cmp xchg cmp pop pop popf cmp dec fs xchg clc sbb mov rcl mov lea je xor push lock lods xchg xor addr16 xorl aas iret jb push out bound cmp insb xchg cmp pop push lods cmp xchg cmp addr16 push mov mov cmp xor out xchg icebp jp fcoml xchg xor xchg shlb jae (bad) xor push out mov cmp mov aas iret bound mov or cmp addr16 mov loopne cmp pop pop lea push out and jl push out popf and cmp cld push js das dec fs pop xchg inc push jb cmp xchg xor pop xlat popf cmp out inc das or imul xchg cmp pop fidiv das andl loopne cmp test xor sub jno cmp xchg ds pop push push js das dec je mov inc bound cmp adc xchg cmp ds mov int xor test negl aas adc dec aas adc xor xchg jns cmp std daa stos xchg cmp pop frstor sbb cmpsb out bound inc je stc cmpsl insb or xchg cmp idivb xchg mov aam das xchg lret xor dec jb frstor iret mov int or addr16 ret cmp push or fldcw loop ljmp out push mov fildll dec cmp adc mov mov je mov push or sbb xor push nop out rcrb cmp roll push out (bad) outsb cwtl pop mov iret jb pop fwait mov lods push ret clc sbb imul sbb xchg xchg cld jecxz pop cmp add dec jns movsb xchg je outsl mov out or cmc aas outsl movsb lods xor pop pop dec cmp xor push subl insl xchg push jmp popf sbb push movsb imul cmpsl adc pop cmpsb fadds bound mov fsubrl lods fwait jmp adc cmpsb sti and das lock std out shrl in jno mov ret add clc xchg leave cmp fdivrp cltd movsl jne adc sti pop and adc dec fiadd jmp or mov rol lods dec mov mov ja pop stos and fcoms cli ret addr16 lock jg xchg andl outsb sbb xchg pop cmp pop stos int3 mov sbb lret push in cwtl dec sub insb (bad) cmp sbb test jecxz push pop push sub dec add pop dec xchg imul lret jno mov mov jg pop pop insb andl int xor andl movups mov mov pop sbb and ss rcrl cmp sub add rorl lahf hlt jmp or xchg daa fadds idivl fdivrs mov jle dec cmpsb rcrb push loop push cmp (bad) mov jns cmp fwait mov mov inc xchg das cmp in cmp xchg mov push mulb jp pop and bound fisub push lahf mov out and rclb cmp push cmp mov jmp cmpsl test mov jl data16 out (bad) clc sbb int3 push adc rclb mov jecxz jno and add inc subb inc xor sub test or pop sbb out jno imul mov incl adc xor jnp clc cld repnz inc lds cmp push jg cmp mov es ss es jg pusha mov cld mov mov scas jno outsl (bad) (bad) clc ret jp shlb pop adc push in xor lods jne and cmpsb test out data16 jmp add imul pusha stos sbb mov fnstsw jge data16 imul xor cs or and imul std sarb push (bad) into popf aad or add pop and or and cmp lret sbb push and call xchg add add jge adc pusha adc xchg stos enter adc (bad) not mov adc or lods pop scas shlb jae repnz in or stos adcl test je push jecxz lock cmp fsubp inc cmpb rep jns push xchg mov mov inc mov rcl xlat cli and jns lock mov mov jp push or dec mov push or lods pop adc in sub inc test clc pop push test push movsb dec arpl cmp pop and jg rolb cwtl sbb sub iret aas clc push dec cmp mov pop cmp pop mov inc out rep pop dec jno jp int3 inc int iret adc int3 mov mov mov jb mov and inc xor sub in push mov scas add jbe cmpsl mov ret fnstcw das es fistpl int rorl or (bad) xchg rclb pop push add je adc daa arpl xchg daa push imul mov ret mov mov dec fisttp test addr16 cmp cmpsb cli pop bound lahf int mov xchg aas mov out or inc popf das lcall insb jle scas sti sbb ret adc pop dec mov or ucomiss cwtl add decl shrl imul mov push cmp clc xchg cwtl xlat xchg (bad) rcl pop pop sub js cmp jo repnz fdivrl adc mov repz and push cmc lods pop cld add mov xchg fldcw cmp jle fpatan test inc pop push push cli aam pop and arpl jbe shl out rorb shr xchg arpl adc jle arpl loopne loop pushf sbb dec pop dec sti lods mov loop ds push jge fdivs imul out sbb mov mov jmp jge hlt jmp cmp jge test loopne xchg jecxz cmp sbb aad imull push insb iret xchg mov xchg push lahf stos popa xchg leave lods daa xchg jg (bad) aaa mov lds jnp out sbb adc push xchg add xchg sbb in out ds pop mov adc fiadd insl or xlat sarb fisttp pop or sub sub pop sub dec out sub lods shlb shl jp sarb inc sarl mov xchg sbb cmp mov mov mov push pop pop xchg dec stos (bad) add mov lods mov gs push test ja lret fidiv or and outsb pop sub test inc fld imul jnp lret push push leave inc addb test (bad) repz jbe test mov add inc jecxz ret add mov adc push mov cltd nop inc and movsl or pop pop pop outsl mov fwait xchg cmp mov pop out jo stos dec sbb cmp rcll popa in lods neg mov and jp adcl jb (bad) (bad) outsl pop inc xchg wrmsr std sub cmp jmp hlt xchg movsb cmp fs sub mov or xor mov jecxz xor lcall push lcall pop cmpsl xor or push repz loope sub xorl dec push lods xor push and add xchg lea mov movsb movsl leave jecxz lods push sbb or loopne pushf mov pop cs enter ja les cwtl add fdivp pop mov sbb jns jae loope xchg cwtl xor imull mov mov pop push lock or imul or outsl sub stos cmpsb mov loope inc js inc and push add add es jmp testb push adc mov ljmp in jne pushf mov xor movsl ret or xor mov aas push addr16 int les jge in push mov call xchg stos pop inc dec shll mov (bad) enter in and (bad) rep push test cld clc (bad) (bad) dec sahf mov push das mov mov scas pop inc cmp stc das add and inc sub dec test mov pop dec inc aas int3 (bad) dec das rcrl mov das aas (bad) jle ja loope sub sbb push pop xchg test sub fcomi jecxz sbb daa clc mov addl icebp xor outsl sub mov xchg (bad) rolb cmp faddl mov (bad) pop out icebp shrl xchg and arpl lods mov jge ret mov and lahf enter jbe lock jns add ja int3 test out mov fdivrl ficompl sti mov jge jno gs sub xor lcall (bad) mov pop adc jle loope and loop dec xchg jmp mov inc dec and out jb scas jg push (bad) jne pushf dec sbb (bad) mov fist addr16 and call sub popf popa fs adc jge dec jl sub adc scas mov out push (bad) iret pop lahf cmpsb lret push fs or fcompl sbb sbb mov insb outsb jb js mov loopnew xchg push (bad) pop dec pop adc xchg lods aas mov sti sbb add xchg cmc pop dec or adc pusha push or mov push js sub gs push popf push inc mov and bound ret add repz daa loop incl jge cmc xor or adc xchg lds mov and sub divl or jae jle outsl lds mov xorb pusha xor addl push xchg sbb in aad aas fs and out das add sbb sti pop movsb dec xadd in lahf (bad) xor andl (bad) movsb ljmp fldenv and mov xchg xor sarl lret out pmaddwd pushf mov cmpsl mov jp jle push add (bad) xor ret xor enter jmp and nop and inc cmp out jp repnz dec or inc jmp add jae sahf jl xchg mov arpl pop (bad) push mov dec dec icebp sbb imul bswap (bad) pop sub cmp xlat push add jle,pt pop pop mov out mov aam out push popf pop lret pop pop (bad) mov sub xchg push dec arpl jmp cmp add fwait das and in mov int fisttpl mov gs fistl inc dec nop or repnz popf or aad jb fs inc pop test popa push dec scas leave push (bad) into xor sub into pop cs adc adc rdpmc pop mov and add repz mov add lret push cmp jmp cmp xchg sbb sub (bad) lods stos push inc xchg jecxz iret popl fidivrl stc inc cli popa dec lods sbb inc add bound mov push push xor out add js fwait fwait cmpb dec popa out test out lahf or mov lret dec xchg xchg pop push cld popf (bad) sahf aad pop addr16 add pop hlt or int lret mov (bad) je push push xor mov xor outsb popa (bad) or fwait cmp adc xor push and mov mov jp dec outsb jmp aam mov repnz popa rcll cmp jge jl push int mov out xchg (bad) sub cmp popl mov adc xchg movsl xchg fisubr cmp movsb xor dec sbb dec dec or mov out inc insb xchg push or and and xchg fwait xor jecxz and push aad fstpt or jns or dec iret jb add mov pop push jo dec mov imul lret (bad) testl jnp push mov js stos cmpsb inc xor pop dec daa inc test mov xchg cld mov out stos aas lds cli lds adc adc adc inc pop cmc loopne jbe insl pop adc cmc push xor cmp add inc and pop inc push pop mov xchg xchg add rcrl bound (bad) cmp lods mov mov mov scas cmc sub push add jo out repnz cmp sub push ret int3 sub cwtl lods cli ljmp mov cmpsb pop outsb loopne push in nop add jb ljmp aad rcrl addr16 sub pop pop insb jbe addr16 mov fs mov arpl jl xor fdivl add (bad) dec pusha adc hlt std jbe pop imul insb pusha push decl jae stc mov add sub xchg sub popf push arpl dec mov inc mov inc adc sub test (bad) pop ret pop sbb push aad lcall stos nop fwait adcl sti outsb push fidivl add ss loopne,pn push sub outsb jp and das mov dec (bad) pushl and popa dec mov hlt xor call inc cwtl or cltd push lea insl fwait mov shlb jge leave outsb add xor pusha int3 pop in cmc push pop jge fs jmp imul call xor and adc ss sub mov cmpsb jge mov xor mov imul das stc inc sub push (bad) insl les push pop mov out cltd push cmp and bound sub jb add sub mov jg repz mov mov adc (bad) (bad) mov push jbe push mov mov mov mov dec pop out sub fbstp xchg lea aaa je jge icebp cmpsb inc inc inc lods ljmp jp and mov int3 inc sahf sbb adc lret jp add cmp andb test stc rorl sub dec mov insl and jns in xor rcl inc movsb xchg add jge inc addr16 inc mov decl jae jle mov shlb popf scas push push or sarb ret gs addr16 arpl pop xor cli cmp dec jle mov jne sub push push test test xchg xchg sbb addr16 lea push pushl arpl loope inc inc xor jb mov outsl rorb pop jne push dec icebp aas xor mov cmpsl pop les icebp xchg cmp daa iret dec xlat and mov sti (bad) and lock enter inc shlb test pop xor cld xchg mov (bad) and clc aad add dec (bad) and rol js setg mov sub xchg jo arpl iret cmp in dec movl pop into mov xchg les or cld or jbe stos das enter adc xlat into xor jge fs into subl dec pop xchg push fs fsubp sbb mov cs aam pop push mov mov ret mov int3 fcoms pop js sub (bad) aaa repnz cmp pop lret xchg xchg sub stos jmp adc dec xor scas xchg test mov ss movsb inc shrb mov add mov xor nop mov (bad) in dec adc jbe pop sub aad daa movq mov sub jge add inc jg xchg or dec inc push xchg dec jno cwtl xor pop pop jg (bad) jbe xchg dec bnd mov inc pop (bad) lcall mov jns xlat in iret mov xchg add lret pop int3 xchg sub mov or cmp movsb ret fs pushf (bad) sbbl add sub dec cmp jb ljmp popa imul adc dec mov pusha or mov adc addr16 pushf adc test lods push aaa add cmpsb lods hlt shlb mov xor xchg mov sbb sahf int3 andb (bad) data16 dec inc adc mov mov xor adc stc cli xchg pusha sub sub repnz xor add add sub mov out aam xchg int and int fidivrl push xchg in cltd sbb fisttp push sbb negl cmp xor cltd xchg test cmp ss dec lahf (bad) (bad) lret xchg mov mov cld sbb inc pop and dec mov lret mov xchg in and das stc and mov dec das cmp lcall (bad) mov lods jns jo xlat sbb xor xor pop pop mov out cmp and loope cmp sbb ret cmp inc mov pop mov or test add mov sub (bad) sbb or cltd add xor mov setb call fildl addr16 xchg incb movsb lods jbe imul push mov push add xor cli xchg or push cmp into jnp dec sar xor mov mov and outsb adc in jecxz jbe fmuls ss xor (bad) imul fidivrl add in jmp push add std adc dec cmp mov mov pop int jno inc mov xlat ret (bad) mov sbbl outsb or outsl sub dec mov insb push out jecxz xchg xchg add hlt xor mov xor jle sbb pop mov sbb jle (bad) or and jns sbb mov xor les and mov test ds popl mov pusha sti mov fsubl int3 pop dec lahf adc dec lahf or das push sbb or imul rol and add js pop or pop xchg shlb jle aaa test pushf (bad) aas sub sub pop incb test jae pop add (bad) and js add adc pop (bad) mov push mov icebp dec cltd sbb movsb nop jae jb aaa pop sub inc cmp shrl nop jns pop jbe test lea add pop xchg mov push bnd mov mov inc jno cs in fisubrl jmp imul inc leave dec jnp jne es (bad) scas (bad) daa sub cs test xchg mov and inc aam lcall push ss pop js pushf insb xor sub sbb (bad) adc and mov scas pop test mov ss cs push add dec decl paddsw daa test movsb jne jns and xor push int sarb mov out mov xor jne mov aad cmpsl sti push inc cmpsl add adc adc mov sub gs xor pushfw push popa cwtl arpl mov fsubl psubw dec sbb push dec out out std jo dec das mov add js das je mov enter in nop or or xchg in lods js imul sar inc lods mov push xorb shrb fs (bad) outsl mov mov sbb std dec cs jmp pop inc mov jl sbb jnp mov ret dec add mov cmp dec in pop cmc ja add in fimull or andb arpl stc hlt push xchg lcall mov pop sub addr16 adcl stos addr16 push jb ret mov test loop fstpt ja ljmp out mov mov inc cmpsl mov enter adc stos mov inc rorb aam test mov cltd sbb sub (bad) sti (bad) leave aad out movb push push push jo adcl pop xor mov sti mov fbld xor cmp clc ret add add lock ja push pusha cmp nop icebp jecxz imul jle lds fiaddl jb push adc ret int in xchg cmp cli iret xchg in dec lods in outsl ds jbe cltd imul sbb cltd sbb and mov in sub test adc clc inc xchg push inc leave movsb cmc xlat in mulb cwtl loop jnp pop hlt jmp push adc inc ret xchg lcall out xor pop jae loope push sub push sub mov movsl out aaa lods js push pop push mov stc stos and iret jno (bad) jmp inc cmpsb cmp sbb ja cwtl fisubrl fisttpll lret enter dec sbb dec fldcw repnz arpl in cmpsb cli lds mov dec test stos inc sub js adc jge pop stos scas sysexit sbb pop sub pop inc movsl pop mov xchg push movsb pushf jle (bad) push in jecxz mov pop scas cli sbb jg jle pop mov ror outsb test lret test into pusha outsb (bad) mov das pop jl dec mov pop fimul nop jnp dec dec scas leave push cltd mov push loope pop xor or jo lds xchg push xor fwait inc sub inc mov (bad) xor das xor aas loopne or push in mov dec sub imul andb add push dec movsl (bad) into mov lahf cmp mov jae dec xchg scas lods dec push scas mull inc bnd push cmpsb js adc aaa jl out aad incl (bad) cld pop jb pop and mov or lods xchg jno iret adc pop push pop mov adc adc lock push sub enter das pop (bad) xor jo testl ljmp cmp dec stos mov cmpsb lret pop inc mov call jne pop out and cmp push loop mov inc cli mov jbe addr16 and (bad) jb sub xor daa fcmovu dec imul inc dec jno mov mov jl push cmp xchg mov jmp inc das test jl pop outsb out sbb pop push adc repnz mov jae inc jl mov jnp push decb sbb mov inc enter int3 mov cltd adc xor jmp ja data16 mov add adc xchg in xchg and inc pop fidiv ficoml shlb mov or xor adc jle inc jnp mov (bad) cli xchg in mov aam fcom (bad) push inc inc std iret aad ljmp dec push sbb sbb lret mov ja insb (bad) (bad) adc repz int or push std movsb (bad) mov cmp movsl insb (bad) popa dec inc lcall push les (bad) repz pop aam imul xlat mov or sahf addl fsubrs push cmp inc mov or gs data16 jbe clc sar push sbb jns inc xchg sub les sti scas jnp loope int3 cmpsl lret jle push xchg push imul inc and sbb outsl xchg add and dec test inc adc aas pop xor (bad) aam mov fnstcw movsb (bad) mov sbb mov adc xor jb dec inc loop (bad) notb stos sub cli mov sahf inc jp jne xchg dec push add pop adc std mov in hlt in xchg mov gs add pop xchg ret rorb insl mov daa out (bad) repz xor adc lods cwtl add lock and sbb mov push call enter call shr clc push test stos pop cli and inc xorb pop cmpsl jnp and xchg push lret lcall test add dec stos xlat sbb sti loopne push jb int3 push xor pop jg xchg lcall mov shlb mov and pop adc sbb push ss (bad) leave rorl popa ja rcl cld mov xchg popf mov aad sbb lcall mov test push push fcoml divl xchg imul or add mov or mov jo sti ja imulb out add fwait add pop (bad) leave xor lds xchg xor imul arpl (bad) mov enter ljmp lea arpl xor cmp scas fisttpll loope lods jnp jmp pop mov outsl push repnz xor fistpll xchg je mov loopne shld fldt icebp dec les lods cwtl push jmp test xor and adc sbb mov (bad) sub (bad) push inc inc pusha push add and sbb es push cmp inc push xchg push (bad) mov (bad) (bad) mov sub xchg fs es lahf stos add cwtl sbb sub fldcw push repnz jcxz into dec fs rorb nop cld add xchg and fcompl aas sbb cld out pop pushl dec ret mov mov (bad) xchg out jae outsl mov and pop add popa or push xchg ret lretw data16 mov fisub fneni(8087 arpl xchg das rol pop or mov cli scas aad punpckhdq jnp adc dec daa sub imul (bad) and dec arpl jo push pop pop cmp cmp xor ficompl fldenv pop in pop xlat mov xor add cltd mov xchg sub fcmovbe sbb ss jg dec in ja stc xchg jecxz or xor leave repnz sti cmp (bad) pop imul xchg jae pop xor sbb aad hlt fdivrl stos mov jns outsl bsf clc test sub popf mov cltd orb mov sub xchg adc sbb int3 and jb lds out test incl loop repz mov mov popl fcmovnu stos (bad) repz jno fwait pop or cmpsl jmp std test daa (bad) movsb cmp xor mov (bad) leave out sti lock pop fs mov js sub mov lock call cmp subl and fidivrl push mov dec sbb dec jo xchg sbb dec sbb repnz jg cld loopne incl popf bound and call cs xchg add cltd pop sub mull (bad) and lds iret inc sub arpl lock push loop sahf test jb pop push xor fisubrl into aaa push xchg inc and ds cs aam js shlb adc and ja mov fdivrl jl xchg das xchg fistl mov (bad) sarb add dec push je cmp jns lret aad (bad) std push incl xchg and out aas fldl push sbb loop adc sbb nop (bad) insl dec and fiaddl or sub pop mov cmp mov add data16 aaa adc xor xor xchg int3 push test mov ficoml ds push insl and mov inc je test mov jecxz mov scas push adc mov mov or xor push and add xor sbb cld shr and mov ret xchg and rorl movsb adc sbb shll jns xor data16 ss pop dec (bad) push mov loop in xchg aam push (bad) lret fidivl cs xor dec pop sub mov or in or mov pop xchg sbb jns daa cwtl gs cmpsb pop hlt iret in pusha imul sub sti aad mov mov js dec cmp test mov xor out inc negl std mull xchg and in mov fnstenv fdivr jl (bad) jns call dec sti push sub fsubs popf push fwait jmp pop js cmp push arpl inc pusha pop loope jnp pop add cltd adc and mov xlat das mov test cwtl push movsb loopne ficoml jne sbb clc cmpsl sbb stc fisub rcll test sbb or mov dec adc loop fwait das push pop mov jnp mov push stos imul push or mov jne or xor adc pop subl mov add push add bound mov mov xchg dec inc add adc xchg pop sbb pushf inc je daa int mov sub cmpsl rcrb jns lock fs imul push js push fcomps cmp cmc mov mov pop cmpsl dec adc movsl imull jbe inc (bad) mov movsl movsl jl mov outsb mov dec cmp lcall mov and xchg lods lea pushf add sub jo repz sbb jbe cmp jge cmp data16 jnp cld pop test js or imul push add mulps xor cmp leave xor rcll xor xchg sub inc inc dec mov scas xlat and (bad) mov sbb inc xor adc fwait les xor push pushf xchg mov xchg lods cmpsl push ret pop rcr in add pop cli adc repnz mov cmp negl loope adc pop clc outsl sub ja jnp mov (bad) mov push cs dec jb lcall inc cmp adc mov mov iret nop cli mov sub sub adcb cmp or mov leave addr16 cs mov repnz es pop jecxz xchg push aas mov scas adc ficom or in ljmp ljmp or jne inc jmp ljmp jne push add jmp shrl cwtl insl (bad) mov add pop nop stos (bad) (bad) push (bad) mov divb sbb sbb add inc rorl push mov mov push inc push mov pop out xchg fbstp mov cs fnstsw xchg push sbb mov pop jl das xor out mov imul test nop lcall ficoml loope pop jl lahf jl mov cmpsb pushf lods ds movsl pop pop sarb loopne inc sbb dec sub dec nop std sbb (bad) push or or cmpsb adc loopne xchg int3 pop sbb inc popf lahf pop sub jle add jl add pushf xor insl movb and mov push sbb cltd adc (bad) pop push mov dec fcmove out inc fs out js or (bad) popl jnp inc add (bad) fdivrl and daa and and js jno outsl mov xor test leave and mov cmp das jle sbb mov jecxz mov dec jnp cli or insb mov out sub xor jns xchg sub push mov pop xlat jns mov out or (bad) mov js push and cmp push in movsl scas jecxz jl lret jo mov inc mov (bad) test je lds je push cmp je imul adc xchg sbb cmp mov stc das xchg inc pop es sub int mov mov cmp mov push mov inc ljmp js and mov ja stos cmc jp sahf ds or or outsl addl pusha mov sbb sbb sub into imul lock arpl adc ljmp imul jb inc pop add or cmp pop and inc lea mov mov adc adc push mov sub add in out gs cld es xchg jb mov dec loope pop jmp in cmp insb and dec cltd mov mov or xor (bad) adc or mov mov sub mov in pop test cli imul pushf adc sarl pop inc sbb inc sbb sbb and or cli fist inc lock lcall jno cs pop mov incl pop sub mov fstpl inc xchg (bad) popa adcb andb ja xchg (bad) fiadd subl test (bad) sbb adc pushf ss into hlt fistp data16 sti and dec xor mov xchg call or cmp (bad) pop ds out push xlat out mov mov fldcw mov mov xlat mov out inc imul std push outsl data16 dec xchg pop in mov add pop fistpl or mov cltd (bad) aad out enter (bad) gs enter xor imul in xchg fstl mull lret xchg (bad) in je pop mov inc in jecxz lahf sbb fadds pusha or out (bad) jb insb inc add aad in or repnz xor loopne pusha mov jp jbe fucomi jnp jns xchg addr16 sub cmp mov xchg (bad) add sub ret stos outsb xchg or das push xor loopne arpl mov lret xchg out push fdivp xor movsb cmp fimul aad mov out inc test fwait inc inc push notl les xorl (bad) jp in mov psraw inc xlat mov fistl pop and imulb out rclb cld xchg int gs xchg xchg adc mov pushf (bad) repnz mov adc ret mov mov lcallw xor outsb stos addr16 or icebp push insb xchg int3 mov cmc dec inc mov sbb push jo imul pusha add std add push out sub push cld mov test (bad) clc repz mov sub sub add cmovs inc pop iret jge cld or outsb dec inc sbb je add xchg sahf sahf jno jmp or call mov push aaa out mov jle pop inc mov lret outsb mov sbb xchg cmpsl cs cmp mov sub call (bad) dec or andl (bad) and sbb insl pop (bad) mov test fistpll add jp add int3 (bad) sbb cld es jge cmpsb sar fs pop jmp add outsl movsb jo loop (bad) sahf push add movsb dec push mov mov sbb or movsb jle sarb lret mov pop xlat jne sbb inc jo js loope mov pop cmp mov (bad) js insl pusha pop jg dec ja dec xor rol xchg inc and sbb lds lahf mov push (bad) jo mov sub cld jl add cli das fisub xchg sbb push cld inc ss sub xor mov shrb ds hlt bnd mov (bad) in push mov fisubrl dec mov mov into jg add mov sbb jno movsl arpl push in sbb add lods (bad) loopne repz xchg sbb sbb ret inc ret xchg inc inc loopne push xchg pop adcl fildl dec sub fldcw lea out loop xchg out push xor popf sbb aas scas mov jle and sub push add pop lea adc lock jecxz fistl pop sub nop pop cmp insb pop cmp pop ja ficompl inc (bad) xchg rcrl inc cmp mov cmp imul xor sub sti xorb loopne lahf push nop and xchg lret inc or pop jae sub xchg add mov dec outsb push add stos adc xchg sbb jecxz les shll xor mov cmp push inc or lcall mov outsb or mov idivb in xchg sub adc jp mov pop inc orb out lods (bad) push sbb add jno loope cltd mov adc (bad) push jo sbb adcb pop fistl ret xchg rclb mov xchg mov (bad) (bad) mov std dec mov fiaddl iret or clc test cmp nop mov adc pop fcmovnbe js adc jge push jno xchg out adc (bad) xchg pushf mov arpl jle add lock cld jbe scas lods movsl popa inc iret outsb xchg (bad) mov cmp call iret leave jl cmp mov mov push insb push jg lcall xchg sub sub lds sub insb dec in sub gs test inc ljmp dec test ret insl push andb mov fisub sub in jnp int test sbb shl xchg dec mov inc add in sub pop scas pop scas jns aam hlt repz sub pop gs cmpb xchg cmc dec and pushf shll lock lea unpckhps incl sbb and (bad) mov lods dec xor push pop aas mov (bad) mov add ror or das xchg mov pop sbb or insb pop xchg push jns add mov add mov cmpsl jae cmp addb jbe adc add cli mov (bad) mov inc mov (bad) stos sub pop cmpsb push push xor pop fidivrl add pop sbb jnp and loop xchg dec push repnz sub push push push stos loope in push lea jo jbe push aaa out and cwtl out aaa in je dec dec sub stos pop in pop pop xor movl jbe loopne dec sarb test aam jecxz xchg xchg adc (bad) or ret cltd ror (bad) xor push jg push (bad) icebp dec out xchg or add add fstpl sbb int3 jbe inc movsb insl (bad) je xchg cmp sbb inc aam xchg call test cmp jbe xchg push mov or xchg mov ret dec aas mov mov aad sub push aaa xlat rcl cmp push xchg jecxz ja mov movsb (bad) xlat int3 and dec out push jnp decl cwtl ja in inc push hlt mov jno insb das inc idivb jmp jae pop ljmp (bad) sub inc rorl cmpsb fmuls mov lock imul cmc xlat outsb shlb loopne ret fstps std mov mov loope sbb push pop sub lods sub movsl sahf pop (bad) add cltd daa rolb sbb xchg inc nop sub adc cmp shll dec mov xor or mov push lcall or push out icebp sub pop xchg cmp pop repnz dec push inc (bad) in sarl lahf dec loopne dec outsl cmp aaa lcall mov lock inc mov xchg and pop stos popf icebp pop mov (bad) pop sbb iret and (bad) mov out enter loopne pop xchg mov (bad) jae pop (bad) sti mov cmp mov mov push (bad) movsl (bad) jp in xor adc push int3 ds dec sub dec mov ljmp cmp xchg fidivrl test pop aad add cmp test lods out lods pop pop aam push jle pop add loope leave mov xlat mov (bad) ss (bad) leave aas scas imul or xor ret mov (bad) mov jno fcmovnu add fidivrl adc sbb pop pop (bad) jle push push fdivrs je xlat lock (bad) idivl rcl fwait or mov xor aaa pop call ljmp mov and fcmovnbe das mov xchg pop arpl inc insb pop lea mov std mov push inc gs xor lods jmp fstpt ss dec (bad) das push js mov movsb in cmpsb ret lds cmp mov jge xor cld dec xchg subl dec or xchg or lret popa push xor push aad dec loop fsts mov xchg notl mov and lret aam fdiv and dec mov sbb add andl addr16 inc jnp xchg jg cltd mov adc sbb loop in cmp lods pop pop stos jge,pt add jp jae xchg scas fwait das aad adc aad gs ljmp ja or cld aaa cmp out dec fwait hlt or push movsb and mov addl xchg out dec dec js (bad) xchg xor (bad) adc xor push pop mov sub sub mov pop sub cld (bad) or xor icebp cmp in cmp or mov pop mov push jp iret sub jne mov jbe dec mov mov mov sbb clc daa in xlat leave js scas sbb dec cmp (bad) mov and adc out jmp add cltd cmp mov mov push cmpsl sub mov sub aas xor dec xor rclb dec pushf mov aam scas jmp in or daa xchg fimul sbb clc jecxz cmp dec xchg sub sbb dec mov enter jge mov cmc cld cmovge fnsave jmp pop fs xchg mov mov in insb mov sub jb stos cmpl dec (bad) adc jl mov leave int stos pop leave scas cmp in cwtl aam fimull push enter js movsl das lret subb sarb movsb cwtl sbbb loop mov inc mov push cmpsl xchg push lods inc mov cmc xor sub and in cmp sbb jl sub or jl inc cwtl subb jns jp nop xor or mov ret movsl rclb test sbb jns test xchg cmp pop scas out inc pcmpgtb or push fnop pop cmc cmp out ljmp push pop in movsl cmp push dec cwtl dec les cs pop dec outsl cmpl mov xchg test outsl jo mov xchg or fs mov ja lcall lcall mov sbb and and scas outsb push add icebp mov mov sub repz cli movsl popf lods add aaa nop add mul and pusha iret leave call in mov push test push and outsl mov (bad) and fdivs loop inc in (bad) popa into mov mov jmp stos xchg dec adc loopne inc or jmp or sbb xor mov sub jbe insb sub out jl stc aam nop dec data16 mov jp stos repz push addl cwtl rcrl jmp (bad) push cli in inc sbb add or addr16 iret mov int3 out movsb add cltd ljmp dec push push int lahf rclb (bad) pop scas int stos out xchg cmc lahf gs stos cmp jne es or loop xchg and cmp fisubl ret out cltd imul out jle sti xchg scas add xor cld and (bad) out inc jmp ret pop movsb mov jle std in jns (bad) jmp cmp pusha push in mov xchg je mov push outsl pop mov or popa int3 ss aas fdivrl push cmp xchg add fstpl loop add movsb in push xchg mov fdivrl shr cmp dec sub loope push test outsb xor pusha pop (bad) xchg movaps mov cmp test and iret or fildl loop idivb or addr16 ss jno js jbe and (bad) mov fdivrs stos xor lahf dec mov outsb out sbb push aas push sbb fs pop sahf sub and scas rolb rorb int add adc and sbb pusha sahf stos out cmpsl test lcall fistpl int mov pop sub or jg sbb mov xlat gs sbb sub sub (bad) scas mov dec xchg imul sbb inc pop add cmc fadds xor fildl or push and dec cmp adc jl sbb lods and inc inc mov pop popf loopne rorb mov scas jne mov add ljmp xor lods insl lret or pusha push xor and inc sub adc xor push je sub push mov cwtl mov inc dec dec fdivs pop dec inc xlat push repz hlt dec lahf in jns xor mov in sysexit insl dec test inc mov xchg or stos test jle data16 inc add movsb out jmp inc or xchg (bad) mov push hlt orb mov aam leave loope ljmp xor and adc cltd cld (bad) jmp subb fcom push jne (bad) xor popf mov sbb fldcw cmpsb jp or cli fnsetpm(287 sbb loope loope jp fidivrl loopne mov (bad) push cmp popa jmp dec fistp stos js sub pop push daa jno pop pop mov sub and int3 cmc sbb in adc adc lcall push pop mov imul pop sahf mov sti or test pop mov fmull das inc dec push mov imul xor fwait pop add aad adc mov mov dec out pop push push repnz out xchg dec (bad) sarl xor jbe mov aas (bad) imul mov dec leave lret sub out dec mov into xor in push and test loope cmpl shlb mov out stc add sub adc adc pop stc aad les cli jp or scas stc gs in jne inc jb lahf mov fadd xlat test inc xor pop (bad) loop push or imull cwtl mov inc dec mov mov add pop mov mov xchg add (bad) cmp (bad) arpl inc mov lds enter into pushf or enter push iret inc mov inc add imul loope into xor (bad) fdivrl stos sbb or subb mov inc nop pop hlt xchg outsl push je mov push out push out addr16 mov ficoml cmpl cmp cmpsb int3 sub stos (bad) repnz imul les das pop xchg into repz mov mov mov mov aaa in jbe lea outsl out test cltd add cs pushf dec mov cmp hlt and cwtl xchg push pop inc icebp ficompl fwait mov push jg or mov or negl cmp stos addr16 push lds mov sub (bad) (bad) js rorl fnsave adc cwtl pop jb bound xor xor clc jns xchg enter or fildll mov sub getsec dec add fidivr out mov stc fsts sbb nop mov or sarb push xor sub xchg cld out dec push pusha ret std shlb cmp xchg (bad) push cli lods xchg fbld mov je fldenv lods add test fstpt xchg jge mov outsl (bad) adc ja fcoms int xchg lcallw dec jae mov addr16 mov mov add adc mov and addr16 dec lcall or rol popf icebp (bad) sbb push add movaps sub dec sub mov stc in imul ret cmp arpl arpl jecxz (bad) and dec rorb pop mov in shll fwait xchg adc adc mov inc add nop sub xor les jnp jnp push arpl xchg stc push ficomp ficoml iret inc add pop jbe xor dec xchg pop repz fmull dec mov mov loop hlt cli or sub push cmp or mov push aam lret xchg nop dec xchg popa daa fwait or xor fucompp xor mov test out (bad) jmp in jns xchg push mov or lock jb push pop test jo and (bad) xor pushf mov aaa and mov jb xlat in mov mov cmp les mov outsl xor aad sbb push dec add jle mov into test push sub jbe mov imul out mov xlat imul push mov xor sub cmp mov cmp (bad) loope mov xor sub push add xor mov inc test or jl push sbb jmp dec shlb mov je xchg mov jo repz and clc loopne adcb inc cwtl dec sbb xor sub xlat jp psubw fadds nop (bad) mov rcrl dec enter pop jns push ficoml cmpsl sbb cld jo int3 adc inc ficom cmp xor stos jg das shl sbb adc pusha out mov mov cs add xor out nop sub aas jae popa add mov dec stos push pusha lcall (bad) outsl inc jns jmp aas and mov ja rcrl mov xchg faddl iret lahf inc jns cmp dec shr sub test jo sbb push lcall jnp fs jns loope and dec lret pop pop sub aam fcomps fisubl test mov int xor mov mov int3 test inc mov insb push jl aas jno push dec gs jo fnstenv sbb cmp inc push or das and in push jne jno (bad) xchg inc mov test lcall xor or jmp into das dec jns shrb and sbb sbbl mov cmp lods daa jns loope jmp test mov std mov jg (bad) xor fbld daa popa imul insb jge fdivrs push std adc pop push (bad) add dec call push jne pop pusha mov dec and test idivb enter rcll sub int3 in fs mov and xor rcl cmpsb ret add sbb js fwait loopne cmpsl test imul addl xchg jo mov jg test aas lods mov push push (bad) bnd sub pop add mov sub and pop iret push cmovnp add fwait sbb insl push sbb inc cwtl mov adc pop jae in popa fdivp dec adc or stos sarb jno cltd xor fcoms inc mov test test pusha sbb sahf hlt out fbld stc stc aad mov out bswap shlb mov xor push cmp addl (bad) mov mov mov inc push rorb sbb inc rcll mov enter pop (bad) arpl aam mov jne cmpsl ds jle sub pop adc das arpl icebp je ss sahf mov jmp push push decl jbe std js pop pop into in pop xchg andl cltd rcll mov ds add and incb xchg mov fmul dec (bad) lock sub pop aam in cli add movsb dec insl addr16 push ficom pop out fnstcw sbb or sbb adc cmp jnp push adc pop jae (bad) jnp cmpsl dec sbb xor out dec sahf jl fwait mov sub fsubl test (bad) dec lcall pop les lret lock mov (bad) jne pusha inc sub xor (bad) in cmp sbb mov (bad) shrl jecxz lds fcoms test fnop inc inc jo pop pop mov out cmp mov inc int sbbl imul jne divb xor cld in gs or mov mov or repz mov fsubs pop mov mov test arpl inc xchg or les out dec sbb xchg xor je push xchg add or dec (bad) rclb rorb int iret adc lret push adc jo in js push jns inc (bad) mov mov das (bad) pop xchg aas inc fildll pop xchg add faddl fistl test sbb lret dec jbe or out fdivs call ja cmp mov inc and mov popa cmpsl pop fadd dec sarb lea es ja xor jge pusha inc insl pushf in jo daa les std cmp gs test bound adc fldt sahf int cld arpl cmp out hlt pop mov sub ja sub stos inc jo jae mov pop and and (bad) jmp fistpll ret aam gs add dec call mov (bad) push mov and jbe mov adc ljmp ljmp iret popl into out mov push mov or clc or cmp jns iret cltd adc pop lock ficomp jmp ja xchg cmp pop idivb stos sbb clc adc sbb pop dec add jg rcrb push mov xlat mov outsl dec enter xchg dec adcb (bad) shrb jns mov adc rcrl in mov (bad) push orb out ficoml mov inc mov mov fcompl mov les enter mov push inc adc lahf xchg pop mov stos xor jp dec fsubp push push jno dec mov hlt addr16 cmp mov push mov dec repnz fdivp pusha inc or cwtl cli push sub iret int mov in pop add push popf (bad) hlt cmpsb fdivr xchg in jno jae xchg jnp mov jp pop dec and sti iret add gs sub std pop adc es inc xor adc fisubr rclb loopne inc scas (bad) dec stos push add lahf jbe inc or addr16 in iret mov cltd xlat pop dec imul outsl jmp xchg ljmp adc sahf dec jp mov xchg inc in sar xor push sar mov decl add add nop pushf (bad) pop test or or add outsb test adc lret (bad) js jno nop dec xchg inc or jmp cltd xchg iret lds loope enter add es jnp ljmp lret mov test cmp mov mov int3 out imul sti into (bad) fcoms pop dec xchg jae ret add push or lea cltd jbe lret adc xchg or and fs dec int3 xchg add hlt fistp mov in jle enter sub dec inc lock int shl psubq (bad) fsubr sti lret dec mov xor push js inc fadds ret lret sub adc or mov in dec cmpsb xchg jb mov mov aam in stos incl mov mov xchg (bad) mov mov mov push add leave or lret (bad) inc xchg or pop dec jne adc fdivs imul and ss imul imul lock or imul jnp cltd mov push jnp fwait adc or notb adc pop mov imul jb or dec or mov int cs movl cs or mov pop sar int3 pop mov lret dec pop fild cwtl mov adc das in sub inc or mov je gs lds or ss out mov inc pop gs inc jle and pop cmp int sbb xor lods cmp shlb add pop out ss push scas mov movsl in or push sub lahf or cmpsb pop cmp or and cmc insl arpl addr16 pop sub int3 les adcl fs sub mov cmp add jmp out mov pop inc cmc gs cli inc sbb xchg mov and dec and adc mov and pop iret inc and dec or dec rolb inc lahf push lods fiaddl cltd cltd add stos dec fidivrl lds sbb ljmp (bad) nop adc lock dec mov pop or mov das call mov (bad) adc xor aad icebp inc adc mov sbb push cs and cmc pop adc xchg xchg jae mov outsb js xor pop jle addr16 pop sbb mov loope pop movsl cltd jl idiv imulb iret test mov ret ret cmp push cmp mov sbb xor mov js xchg jnp jmp (bad) loop,pn pop dec xor std call stos arpl mov imul in stos inc gs leave fstl cmp and rclb out sar jmp xor ss ds xchg push dec test into (bad) push and out sub dec hlt pop scas loope inc (bad) mov movsb lahf xchg sti lahf inc test xor jp fsubrl outsl addr16 imul dec mov fisubrl inc mov cmc lcall or push addr16 inc adc mov call mov xchg mov sub out out shr data16 xor inc pushf (bad) cmpsl cltd int3 int jl push jns dec test dec jb imul nop in add pop pop in inc push or cmc pop lods fcoms and pusha dec cs int jge add dec fnstsw add mov inc loope clc pop pop cltd call cmp add inc cwtl or xchg (bad) sub mov add idivb xchg testb stc xor test ds pop xchg sahf jmp mov push into mov fwait negl or in roll pop outsb in cwtl push repnz int (bad) lods mov aam movsb sub add or leave jl,pt loopne dec mov push sbb xchg fmul pop dec roll jne mov inc repnz out mov inc stc pop addr16 xlat mov enter enter push ret mov push inc add aas adc jae fcomi sbb mov loop lcall inc cmc test sti sub mov lret hlt idiv js fisttpl dec (bad) icebp sahf mov lds call je sbb cmp sbb and jae lret (bad) stos xlat movsl fstps mov orl fidivl in jecxz rcrl loopne inc orl dec hlt into adc ret xor bnd out add pop (bad) scas (bad) in loope lret mov call mov mov sarl pop rcll ljmp adc and jmp cwtl stc call sbb pop popf in int3 or pop fcomps rorl mov xor mov add stos roll mov shl jne stos int sub pop cmp cmp pop loope sbb pop dec ja (bad) leave dec test (bad) xor les dec cmp stos or sahf xchg dec mov adc cmp fimull add mov xor xor popa rcrb test or (bad) int3 outsb sahf dec sub ljmp jo test (bad) call add mov mov mov lret or sti mov cmpsl sar dec lea xchg je xchg xchg (bad) xchg (bad) test inc mov ffreep jno or xchg jecxz dec add sbb jnp pop adc mov iret aad fcomps jmp sbb cltd mov mov inc repnz loop add xor out xchg bound inc push in in cmp data16 push int3 and xchg jae push fsubl cmp imul cmp (bad) testb out mov push dec mov dec jg dec mov call je mov cmpsl cmp out xlat call push inc arpl jns jo stos cld jae jno fdivrl add dec movsb adc add outsl pushf loope sub mov mov inc gs jbe push jecxz cmp mov js inc sub push or add adc and (bad) ss outsb jnp xchg icebp int dec out into test lret insb dec in les jl dec and popl imul (bad) or js es pop pop mov ret adc push fdivl idivl (bad) (bad) mull (bad) mov and cwtl mov add lea clc jg scas imull push stos push ljmp xor test jno sbbb (bad) aaa push pusha ficoml fwait sarb cmpsb xor or fcmovu push lret push notb inc pop dec jecxz or sarl add mov jecxz ret out cmp js jo rorb fs xor arpl mov test enter mov icebp cld cltd (bad) jne mov pop jnp push sbb ljmp cmpsb push das shlb lea cmp dec out rcll jns ret les push aad arpl das rclb pop cmpsl mov pop scas js,pn cmpsl add into stos jnp setae arpl (bad) aaa gs lcall outsl bound inc leave clc and mov into pop xchg mov pop xchg je aad pop push fnop lcall test ret divl nop jp mov dec jp pop lcall jmp rclb stos dec (bad) cli adc add test push into sub lea xlat mov test dec das pusha cmp lcall ret mov daa ds pop mov or ljmp (bad) js or ret das cltd movsb shlb mov popa pop sti pop pushf std mov xchg xchg ja dec aas clc xor inc dec pop gs dec ret imul int3 out hlt pushf repz clc jbe mov push jbe iret stc gs mov sbb hlt or jns mov outsl jns lea fcmove enter lret enter test cmp sarb pop add lods mov pusha dec push ljmp dec pusha inc outsb (bad) std mov mov push in jae les add inc dec mov ret inc test and cltd fld jo dec fsts fstpl sarb shr loopne int sti dec sti insb cltd ror inc sti push pushf mov rcr lds insl mov test pop cltd rcrl fisttpl insl pushf mov inc (bad) sbb in mov in mov (bad) dec ljmp into cltd push fidivrl mov lea es out call clc repnz mov loope (bad) jge shr loop mov mov push inc dec test insl mov test fisttp int3 (bad) dec pop dec inc mov mov mov fdivr sub pop lret popa hlt mov xadd ljmp pop xlat enter shlb sti arpl sbb test mov fldenv jnp pusha loope sbb ret ret enter add into into cwtl jb sub sub int3 and and pop fldt jecxz xchg lods xchg mov bnd mov test push xor sub ljmp ljmp loope mov and lock ret test pusha (bad) cli cmpl lret jmp fs cld cmp test or (bad) dec stos test ret push jb in pop sbb mov test dec dec movsl dec jle into mov frstor or int imul ljmp adcl sub xchg mov loop pusha sbbb pop or add dec outsb movsb xchg push outsl sub lahf iret repz aad push (bad) sbb sbb jmp aas testb and popa je push mov decl mov xchg clc ret call ficompl ljmp in fidiv pop push out pusha inc out sub push loop int3 dec bound ret (bad) out enter inc scas pop sbb or outsl les push pop jle pop imul pop (bad) jmp and and mov fstpl pop les imul xchg mov xchg lock test lcall fstpl cmp sbb bnd xchg mov add or pop mov mov dec (bad) xchg les pop and cld sbb dec and jp sub jg jbe in call mov cmpsb dec pop rcl imul js movsb push dec outsl decb sub je inc cmp pop jmp jnp cmp mov pushf jb clc scas lret ljmp (bad) jl xor lret out xchg clc bound enter jg into pop stc pop (bad) pop xchg movsl out (bad) xchg mov push or mov cmp jle sub movsl jle sub popf xor in int3 cmc clc shlb int3 jbe fcoml xchg mov imul movsl jl (bad) jmp mov movsl xor fs data16 lods sub movd mov orl sbb fwait cmpsl push cltd jmp push test pop xchg xchg ficom mov lahf mov add je aaa add pop push xchg mov (bad) movsl sbb aam dec imul movsl lods jg fisttp sbb imul or push fxch xchg mov arpl (bad) jl outsl sbb lds xchg or es jbe ljmp mov sub inc pop test out data16 mov cmpsb sub xor mov dec cmp aad repnz pop cmp xchg push int3 xchg xchg repz fdiv and mov cltd add mov into mov pop mov sbb and mov pop push shrb mov sti out ds push xchg lret cmpsb in mov fadds lret (bad) scas xlat and lret inc jns mov insl mov adc pop xor lea mov sbb repnz fbstp in je add push test xchg call sbb mov test sbb sahf sbb jo adc xor movsb or (bad) mov adc mov cmpsb es pop enter push stos fisubl nop jp int3 into lret loopne push xchg cmp jmp add je xor sbb sub mov cwtl lahf and es mov movsb subl or xchg sub shl hlt push movl sti mov hlt rol inc mov dec aam fidiv jle dec inc xchg push cmp xlat push fidiv dec dec add cwtl lcall test in adc dec mov (bad) cltd and stos nop mov cmp or repnz sbb imul fild rcl dec xlat int3 movsl cmp pop addl outsl (bad) mov negl xchg shlb xlat xor adc fidivl xor daa enter out imul imul push add lds pop sub cltd int3 add sbb ret int add ja imul adc adc roll mov mov add imul clc scas add add stos outsl or test (bad) xchg xor or hlt mov lds cwtl mov add fs pop insb dec aas lret aas or mov dec aas punpckhdq dec and and and pop add inc xor imul mov xor jb and arpl mov adc into sbb fdivs mov sub lcall fsubl fisub fildll (bad) mov stos repz xchg aam jge inc gs xor dec ret nop in jbe lods mov stos mov fxam xchg jnp push inc jg lds bound xor scas mov ss dec test aaa stc test in (bad) lahf push cld cmp xor jns adcb dec ret add out in mov pop iret popa add test adc hlt cli pop adc lret repz cmp dec aaa ret bound outsl rclb int sbb (bad) stc or xor pop sub push int3 or or mul loopne arpl push ret dec mov jmp jnp std xchg xchg jmp push jbe fsts ret sbb xchg dec lret inc and mov (bad) xchg aad int dec xchg dec in cmc jge mov ja imul mov int3 mov pop fcoms shr int3 pop add clc sahf fsubrl (bad) jno push int3 pop sarl push enter add addr16 lret aaa xchg xor enter rol clc inc ror call cs stos nop mov int3 mov mov aam mov lods in (bad) out (bad) mov jecxz clc xor (bad) hlt sbb call mov les js into rcrb (bad) enter clc push hlt dec mov hlt enter dec sbb (bad) enter fild fstps xchg sahf dec stc loope loope leave mov inc test out nop or dec fcmovbe adc add rorb int3 jo sar (bad) enter jp push in inc (bad) fdivrs dec aam stc or lock dec (bad) and repz (bad) fs xchg pop push adc mov and sub mov shrb movsl imul loop loop jle repz aam pop mov test jmp mov pop in int sbb popf push enter test int mov cli call call fdivrs enter (bad) out shlb pop incb pop pushf sbb mov xor clc outsl xchg mov mov int3 js enter xchg cmp cmp adc fcomip pushf pop pop sub cmp (bad) push jl push and fwait sub je je das xlat sahf and mov push push and mov xor adcb xchg xchg (bad) jb rcl or jp ljmp enter xchg adc lcall dec mov arpl daa addr16 jecxz sbbb mov push fisttp and es sbb scas push aad je xor imul cltd inc sbb cmp inc pop imul and sub es jl dec movsl fwait (bad) lret inc fcmovnbe jns cmpb mov mov sub sbb dec clc cmp fnsave ja daa icebp pop sbb adc rep leave dec adc stos cmc (bad) in lcall xor dec loopne jno add dec cli push jp cmp leave cmpsb cmp out inc out (bad) mov decl rolb pop dec mov lret test add fnsave aam mov inc xchg xchg icebp push outsl sbb or fild in fidivrl jmp aaa roll aaa leave cmpsl or minps and mov jecxz bnd sub dec mov push cmp sarl xchg fcomi and jmp cli jne in jge mov rcrl movsl popl ss adc jo imul adc and and mov repnz jbe js and arpl cmpsb mov test loopne or (bad) dec inc mov inc jae out sbbl adc add clc sub add (bad) cmpsb testb mov (bad) xor sub fidivl mov sbb je dec pop aaa call loope inc or movsb or inc or push dec jecxz mov mov ljmp push and dec mov mov dec mov xchg adc lock idivb or dec xor icebp cmp movsl lahf pop mov push ljmp sbb cli data16 adc (bad) ljmp jo mov mov insl jnp movsl insl or bound sbb hlt push ret loop out cli mov sahf fucomip mov push cmp mov test test cmpsb fcomps fildll mov out nop mov mov inc push lcall add or movsb int lret push cmp adc (bad) iret movsl lcall mov in pop mov pop scas fidivr dec pusha inc push fbld lret dec bound cltd (bad) fisttp push fisttp hlt dec and jecxz mov or mov mov mov data16 pop out leave (bad) dec scas jbe call adc clc mov enter sub enter jg fstpt add (bad) js push cmp sub cmp mov jo push clc in insl testb ljmp fisttp xor test dec add pop dec push xor xlat mov or sub push mov or leave out sbb lahf or scas fadds mov pop sub dec dec dec (bad) xor lret and push sarb ljmp outsb pop dec sbb sbb outsl add data16 or xchg xor adc daa ret adc dec (bad) xchg sti into outsl jo mov pop mov pop stos mov push lock std pop pushf (bad) push pop mov push dec ret push std cmp mov sbb cli add mov xor fmull or hlt test les sub cmc xchg cmp sti out ljmp (bad) jo iret (bad) outsl and xchg pop mov dec div xchg pop push or mov mov xchg sub mov push in fldcw inc lcall out and mov insb mov clc xchg push lcall push out scas rorl cli cmpsb mov jg xchg mov jecxz imul and int das push or sbb test mov cmp jl pop mov aam pop inc out adc lahf hlt add pop cltd test clc jmp add aaa pop sub lret icebp fnstcw pushf or rorl push add daa inc lret or pop jns and pop mov cmp cmpsb sub hlt jns imul pop ret xchg lcall and dec push xchg cmp loope out or pop sub push fucomip (bad) mov call mov fwait push mov or or out gs hlt adc mov fmull movsb inc xor xlat xor xlat fwait (bad) dec mov pop pop stc cmpsb mov sub pop pop neg test cmpsl aas dec and pop mov sub mov ss lds push repnz ja sahf pusha sbb flds cmpsl sbb outsb add inc push inc stc lret enter fxch stc dec jno enter xchg sbb cmp lods outsb push adc mov mov insb mov inc jecxz mov je lret dec lods mov xchg xor push inc fs cmp jge int push decb call popa imul imul sbb test imul (bad) jl mov fistl jmp xchg sbb leave mov outsb adc pusha cmpsl xor mull fild fwait mov sub nop lods mov pop pop into xor inc in fs jecxz xchg fnstsw pop push insl int inc insl int cmp and mov subl leave cli cld mov adc (bad) mov addr16 fcompl adc cmp push jns adc sar add dec lret ljmp pusha (bad) jns and mov mov pop mov scas (bad) aad xlat shrb pop fistl movsb sub (bad) lock in sub sti in std jnp sbb xchg dec xchg push pop mov cld xchg lret pop aas sbb xor jno pcmpeqw mov cli sub in mov out (bad) sahf xchg adc pop lret cmpsb mov dec mov rcrl outsl dec out cmp mov (bad) or jb test xchg ret popa imul outsb scas ss cwtl lahf lea (bad) mov pop fisubrl push nop lods aam pop arpl xor inc dec movsl int xchg xor insl int3 incl (bad) push jns popf mov outsl popa fisub bound loopne dec pop and xor popa (bad) repnz xchg lock or rclb xchg xor std or outsb xchg mov mov dec popf fstp lret jmp mov or stos mov or lock fs push (bad) bound loop push xor mov nop xchg jae mov cmpsl cmp adc inc mov fist dec pop fidivrl mov das lds ds jae in push mov jno movsb xchg mov out call std imul pop imul pop fwait sbb inc inc imul xchg or shrl sbb ret inc jle jb repnz int3 int das dec bound xor xor adc inc jb decl or insl mov mov test mov lds xlat pop rclb cmp or cld sbb loop negl adc mov or popa fisubr popa (bad) lahf adc mov shll stos call test fild sub (bad) std mov xor and mov mov or xor add loop out movsl xor bound mov jmp pop jecxz ret pop adc push adc es rcr adc inc (bad) mov adc mov adc sti mov fucomip pusha add adc int3 dec testb fsubrs das clc mov call js fxch pop loopne insb testb sbb jns ret dec mov xchg cld pop jo (bad) test cmp mov or (bad) inc stc int3 xchg dec stos insb enter xchg rcrl mov xchg mov lds sbb iret int3 xchg insl sbb and add popa jb inc fmul rolb mov mov clc mov mov or lods mov adc cwtl sbb jmp sub cmp or pop push lock sbb sub dec pop inc (bad) (bad) sbb shrl fidivrl scas imul insb jb mov and mov jmp (bad) xchg fdivrs jb pop popf and adc inc ljmp sahf lods in mov add fstpl fdivrs cmpsb jne sarl xadd push cmp sbb fildll inc inc insl ret daa and popf dec jl inc idiv cmp push push dec ja inc push cmc outsl and stos mov mov leave sbb sti (bad) addr16 pushf mov scas cmpsl xchg sub mov push push cmp arpl sub outsb and ret (bad) hlt inc repnz cmpsl xor or xchg push enter mov daa scas lahf fcomp cmpsb (bad) xor xchg leave jmp les mov js mov mov sbb cmpsl cli sbb pop jmp pop add pop scas jns or lret imul es lods outsl (bad) scas and pusha pop push orl clc ljmp xlat inc or mov stos sub sbb ljmp add in loopne out (bad) jle mov add out cmp cmp (bad) dec xlat adc mov jle aaa enter push push xchg pusha inc add js repz ret into lcall sbb xchg dec icebp dec mov sbb lock cld jle pusha frstor add inc mov dec lock dec add stos dec adcl popa push or pop xlat adc jne jns add and addl add jne cwtl xchg add pop push (bad) and or adc cli popl sub mov push (bad) mov cld bound xor xor (bad) icebp insl sti aad jnp push add test push stos outsb lods imul push int mov xor leave push ljmp mov xchg call pop popa inc loopne and pop xchg add in jge cld push loopne (bad) xchg pop pushl inc stos out lcall push fildl loope dec stc into sbb es or rcrb dec dec push rcrb jmp cs pop dec xchg scas std insl mov loope lret xchg and mov or scas dec loop jp dec scas movsb sub lret dec ret or insb jle sub out push lock adc mov pop add dec jle pop dec cmp push jecxz adc cmp ss rolb dec pop fnstcw mov lret inc lret test mov push cli mov gs sub icebp pop (bad) cmp sti ret (bad) aam pop jp test or jle int3 add xlat or testl fidivrl mov out pop popa push mov into xchg and cld adc repnz std adc xchg (bad) xor (bad) shrd mov push xor and push jne in js mov js sbb xchg xor adc xchg das xor sub and cmp add movl dec fist popf into rorl cwtl ja int3 addl ja (bad) mov sub test lahf (bad) jns je lods (bad) mov inc mov jnp push cmp mov sub mov out inc cmp jnp jecxz jmp sub xchg push mov shr jnp sub out fsubl ror arpl out rcrb inc xor jbe mov pop mov cwtl xor lahf cld jbe std jl sbb jl (bad) hlt xchg inc and or fisubrl mov mov ss incb movsb push nop lret roll mov loop sub (bad) mov mov adc hlt stos mov ret mov mov pop pop sbb (bad) jnp add (bad) cld icebp inc push push sub mov fdivrl lcall scas (bad) pop and sbb dec jge mov insl xchg mov stos mov adc and mov cltd push add pop (bad) (bad) sbb mov cmp movsb ret dec scas inc sahf ljmp xlat xchg lcall cmp loope xchg sti push stc pop dec jbe ljmp je xor pop int iret or mov push aas pop pop dec xor xchg cltd in pop sbb or fs sub jp in mov cld inc sub stc dec fbstp cmpsb out hlt cmpsl mov inc mov xor hlt or push mov hlt and popf jbe fwait (bad) (bad) idivb pop test stc loop jno das aam mov testb jbe int3 out fisttpll int jns rcrl pop loope es sub jbe ret icebp addr16 scas jg jecxz roll fidiv ds pop push insb sbb cmpsb and test sbb loop xchg jmp pop stos xor and enter stos inc loop xchg xor xlat mov ds loopne mov jl cli je js repz lods stos push push inc sub enter push das xchg mov jge inc pop xchg gs and ret icebp and add out cmp dec add and je (bad) icebp push add int3 neg and in xor int cmpsb cmp add idiv (bad) xor sub inc test stos cli sub and push pop add decb add movsl dec push cmp mov pop jp fwait and je lahf fidivl mov out cwtl mov cmp sbbb sarb dec xchg mov ss es cmp jae imul and in add dec adc je sbb cs jecxz and test pop mov sub rorl adc lds fwait jne mov dec pop mov push inc mov push (bad) imul ja cmp addr16 inc lea dec push push and add pop and hlt jae push adc (bad) scas and jg adc fbld shlb cmc dec cltd fisttpl lods fadd pop enter stc sbb js lahf adc xor jne dec adc and xchg cmc out xor sub stos push daa cmp and push sbb leave adc stos push push add jo aam dec sub fnstenv mov stc arpl pop gs movsb stos mov imul mov xchg fbld in pop jmp push mov pop or xchg pop jbe,pt andl cld cmp std adc mov xchg push rcrl mov loop test cli xchg sub mov jecxz ljmp popa mov add js xor and call xlat mov add xor daa lods loop dec pop nop loop dec das int3 sahf clc enter adc and enter push pop cmc and lock cmp sbb xlat rcrb (bad) mov jbe das lock adc lock mov aas (bad) xor outsb lret outsl lods adc dec lock (bad) lock and js ss and pop mov and push mov lret dec sbb sbb test test pusha sahf inc aas xor cmp das int3 adc jnp inc jg jge and jg fsubrs stos repz xchg test sub jl push add out mov in inc push or sbb mov mov lret dec divb ret jg iret das (bad) repnz mov xchg push stc call mov and sub (bad) mov repnz loopne inc clc push fimull rcrl sahf mov mov xchg (bad) ja sub xchg and mov cmc nop mov (bad) cwtl cmp iret (bad) cmpsl fisubl jnp cmp jp add adc sti add jg movsb lahf outsb sbb inc repnz and (bad) scas mov sti jno dec daa outsb inc repz ficomp jle std push lock test cld inc imul movsb or test pop faddl mov mov cmpsb mov add mov jne push pop scas push aaa cmp cmp stc or aaa mov push pop add movsb pop repz sbb inc mov arpl loope cmp (bad) add mov (bad) out lret imulb in clc pop adc enter mov aas cmpsb call out push pop imul loope into mov xor in cmp xor sarb dec jb std sub in push movsb and push out push int3 and aam adc ja dec xchg pop mov stos and subl aaa insb nop in xor gs cwtl mov popa fisubl sti xchg or mov loopne in int3 add ljmp aad adc pop mov addr16 in pop xchg fildl stos inc clc lret add mov jge sbb dec mov js push loope dec add pop jmp push in (bad) std ss pop stos cmp fwait lcall (bad) mov rcrl and mov mov xor insl dec ret hlt test inc cmp adc push push mov xor adc push insl add (bad) adc fdivs fsubs mov jle push pusha mov subl push push jmp sub mov fnstsw xor cltd out mov mov cld jo cmp pop mov jmp pop ja hlt movb lods fsubrs and (bad) aaa rorl (bad) notb ljmp shll addr16 pop out dec xchg pop rcl mov xor insb adc pop outsl push sarl add mov sbb (bad) call add pop int3 in rcl jno push cmp fldt sub out and mov (bad) sbb inc or repnz data16 pushf das cmp adc ljmp adc rolb in jo stos sbb (bad) insl imul fwait ret aad scas cmp mov sbbl (bad) in dec loopne stos inc (bad) mov push push into in lods sahf jno inc xchg mov mov jns xlat cmc jbe jp fdivp sti aas scas out ja fdivrs popf mov mov aaa pop in jecxz dec mov stc add xor and mov std loope mov stos sbb js and and mov mov add cwtl xchg mov xchg sub lock test jl popf test incb pop insl or cmp sub test mov and lret dec dec mov icebp pop (bad) push stos ja push or out jp push inc cmp cmpsb daa jne enter mov pop (bad) jae bound fisubrl adc mov outsl add xor rorl or jl xchg test xchg jne cltd lds push sti jmp pop inc push dec pop sbb pop aam clc cmc add fwait lds jmp lcall jno lret sub push jbe xlat inc test cs xor xor scas dec loop dec pop mov mov orl add les mov jge or jb sahf and sbb in jns das repz rorb sbb (bad) mov mov mov dec in add loope scas and ja mov (bad) and out bound mov std inc adc arpl cs xor lcall pop ficomp inc out cmp xor pop mov icebp push pop mov pop mov ja adc xlat or nop mov push inc scas add sbb (bad) jne xor cmovge mov add stos aas pop inc nop movsl inc xor mov adc out xlat rolb cmp xlat inc test (bad) clc inc (bad) jnp pusha cmpxchg cs mov pop dec adc insl aas push or jno ds cmp xchg sbb pop add in cmp movsb (bad) sub dec and adc push rcl arpl mov jae pop out jecxz push adc add xlat fstl js push mov movsb push sbb push pop push push mov (bad) cmp xor into nop push pop fisubl cs je cmp inc mov lods fnstsw jne mov outsl scas enter popa out or xor jbe repnz (bad) std or loope imul aas sub or call cmp push dec call inc cld test mov mov inc sbb out out cmc js add push mov addl xlat std dec fidivr cmpb cmp adc xchg xchg es das add lret push int3 jns dec adc imul test mov mov xlat adc loop mov cmc pop jne lret andl iret dec xor push sbb aad fidivr xchg out sbb repz push jle push loopne dec fisubrl sbb (bad) arpl cmp mov sbb cmp sbb mov sbb jns push push aas mov lret addr16 aad or stc pop mov pop pop stc out push push sub jmpw dec cmp push jmp shrb cmp jbe rolb cmp and pop jns enter mov mov imul push adc mov or mov mov sbb ljmp xor xchg cmp mov repnz mov roll (bad) scas inc jl jp or pop and ret cld stos sbb ss dec fsubr (bad) xor decb cmpl sub dec push inc pop mov imul jg (bad) cltd inc repz push xchg xchg out mov mov push dec hlt leave add push cmpsl sbb pop clc out jo inc pop cwtl inc adc aaa adcb jmp push xor ja cmp sti imul mov repnz mov adcl mov pushf loopne mov leave mov shrl push jne dec add jb xchg xor cmp arpl mov adc adc mov pop mov lods and sub add imul dec xchg stos sbb inc fldl xchg faddl into xor cmp daa aas xchg push add xchg or xchg xchg call pop or jl cmp or mov xor mov fimull fisttpl stos in push fistpll dec or mov outsl aam jnp mov sbb insb je jnp and int3 mov lahf add cwtl add push jne mov (bad) or adc fmulp lods xor outsb push sub fbld idivl aas push in sbb and divb dec mov in sub lds cmp cmp adc sahf cwtl sarl mov jbe sub inc or xor ja xor cmpb cmp inc mov fnsave add add cmp add in jge xchg push cmp enter in or negl pop fild stc xchg xchg stos nopl cld jb es mov movsl sbb lock stos xlat lods fdivr fistpl mov jnp cld cmpl int3 pop imul and out addr16 iret jecxz imul aad dec mov cmp push pop mov sub lods jnp sbb test add inc or add adc add pop add cmc ja sub sub mov (bad) cmp xlat ficom sub sbb mov jge dec hlt sarb push xor repnz test daa adc xchg push sub jg inc sbb je jecxz inc aas int3 ja xchg jbe add fisubr out or pextrw daa xchg aaa sbb cli cmp inc mov popa pop jl pop or mov andl lret and hlt fildl sarb jp into dec movsb xchg push es hlt sbb and adc adc sti adc shlb or out jp out lods pushf inc repz repnz mov fsubrl xchg cld sub push push cmp xor lods add repnz sbb aad js push ljmp stos scas and xchg out mov mov xchg ret fs cmpb (bad) or adc fcmovnu fistp ss dec movsl ffreep stos sub int fsubrl xchg and roll mov fisubrl xchg jp inc mov fwait lock jg popa hlt cmp mov mov (bad) cmp scas ret scas ffree popa sub sbb mov je cs add mov cld (bad) cmp adc jb mov cmp pop cmp pop adc jae (bad) mov adc cmp popa bound jl dec push sti (bad) std insl adc pop or repz mov cs cmc icebp loopne pop mov cltd in mov aaa xor jle es testl insl stos aaa sbb fisubrl out mov mov add inc imul out cmp adc jl add sarb jb pop mov mov cmpsb jle xchg dec adc fnstsw inc cmpsl loop push sub test xor fadds aad sub mov cmp mov pop iret aas (bad) push push outsl mov test sub push lock add jnp repnz dec mov sbb int3 arpl jne repz sub icebp jge cltd jp jl (bad) mulb push sbb pop or arpl xchg ja test fsubrl arpl inc mov rolb dec in pminub sarl add sub pop push pop stos mov push dec imul int rolb xchg jae and sub fcompl dec mov cmpsb fisttpll xor xor push fdivl hlt adc stos pop aas into sarl out push cmp xor mov stos lret fnstcw sub stc adc loop test dec inc adc and mov xchg mov movsb cmpsb mov jg in insl jecxz sub xlat cmp icebp push sbb push jmp ret fs mov inc mov cmc (bad) mov cs cmp cli jne fidivl mov push loopne jnp mov xchg add imul adc xor icebp mov xchg mov rolb dec loope mov sbb aas pop fisubl pop mov xchg mov fsubp rcr push popa pop sbb gs dec cld jg mov jl pop insb enter jne mov sub pop jle stos aas ror lahf pop push and jno les mov (bad) in push mov negb fstpt arpl inc test aaa test push add leave pushf jne xor xchg sub (bad) std inc imul adc js jo fs cmp jge in test push or mov (bad) fistpl jo adc rorl adc adc addr16 inc jno lods adc movsl in xchg repnz xlat pop sub jmp cmp jnp jge idivl fildl inc xchg cs fcomip arpl mov ret call sarl (bad) or dec xchg push sti jo test loopne mov xchg or lahf ss lahf (bad) fwait sarb mov lods aas fiadd fcmovne into dec je sarb xchg lahf xor cmp (bad) scas dec add mov movsb int3 jo jno inc sahf sti xlat mov data16 or xchg mov pushf call shl in sub pop (bad) jo lods rclb jmp divl adc lret xor hlt cmpsl dec (bad) xlat into xor cmp lds andl std insb jb stos int pop ljmp shrb jo sbb lea lea int3 xchg sbb ja add divb adc loope mov ret adc jge mov xlat mov fidivr loop lahf stos mov jo pop jl bound xchg pop pop and mov xor or dec insl sarb mov sbb addr16 cmp lea lock cli and cmc push roll fist sub les inc push movd stos lret mov dec scas inc scas sbb mov xchg or push cmp push out jmp fimull lock (bad) aam test mov dec lcall push int3 in push push inc mov or or inc lcall cmp repnz cmpsb mov enter add or out leave push call mov jbe shrb pushf bndstx jg ds sbb cmpsb sbb lods inc ss jb inc cli mov add push popa (bad) cmp das add sarb add popf adc out je sbb out stc fidivl xchg in xor test icebp xor fdivrl sub arpl in adc mov fcoml adc push dec in lret sbb aaa dec or out dec mov (bad) leave in push lret scas push mov mov out dec daa clc (bad) dec movl loopne jae outsb xor js mov repnz gs daa sbb add fidivl cs add sahf dec or inc daa mov cmc (bad) ja arpl inc bound test out jle (bad) das mov xor or mov jno or fiaddl sbb xchg fs (bad) dec pusha sbb ret je inc dec loope fildl inc fcmovnb pop je pop dec xchg movsb aas inc icebp push rdmsr xchg lret inc lock cld scas lcall xor or mov or xchg clc xor cli enter jae inc push clc add push inc mov mov push mov clc inc jl mov ljmp jecxz mov lret int imul or sub xchg lds inc clc mov insb mov ljmp enter ret jae out and xchg jecxz or sbb mov mov dec jge mov pop mov add sub sub adc sub data16 mov aas lock adc aad and test add add fsubp in xchg pop fisubrl sbb imul pushf hlt test dec lea pop inc in inc xchg rorb rol cld xor int dec pop xchg std fimul mov xor ret pop push dec sub fs outsb (bad) add das pop add or jmp adc adc shll aam and (bad) pop imul addr16 mov mov mov cmpsb fwait loope pop leave xchg lods and nop pushf xor clc fwait xor incl sbb addr16 mov popl or cmpl into mov in ja lret jne dec mov sub or (bad) lret mov pop dec (bad) cld add sub pop xchg aad push jle jl loope mov lret mov push xchg jo enter lods icebp xchg insl pop fisttp cltd sbb mov jge mov mov mov push fldl sbb push ret push xchg mov mov fdivs stc orb jl loop inc jle jg push aaa insb mov sahf push cmc and in push jne mov sti xor insb push inc nop push add enter push inc fwait leave lcall test outsl push je shrl loop out xor mov ss jne sbb movsb sarl mov out cmpsb mov (bad) sbb mov jmp mov (bad) lods (bad) popa pop sbb mov sahf mov inc dec das mov sub mov js (bad) (bad) pop pop xchg ret cmp hlt jge cwtl mov fdivrl mov cld icebp push jae sbb movsb rcl test loope mov xchg mov shrl (bad) (bad) lea mov rol ss push ds dec mov imul lock insb jg fwait push lahf repz or push cmc push adc enter (bad) add imul push sbb test jae ror jnp sahf repnz mov push lret and jns cmp push data16 test (bad) sbb cmpsl cs fildl shll gs mov fadds negl jp jg mov jno xchg movsl enter loopne adc dec inc xchg ja jmp (bad) clc les loope sbb aad sub aas mov jl mov mov ret mov jnp push adc into and xchg iret or in (bad) mov jp aas mov inc ret jmp outsb lods ret ret ja inc xchg xor pop call mov ds movsb cmp pusha xchg mov adc add into sarl mov xor and pop push sub pop (bad) sbb dec mov xchg mov inc push leave mov cld pop dec sahf mov rcrb pop adc fs lock mov mov add test rclb and test xor xchg xchg sub pop mov xchg fld mov rcr push hlt dec jle pop lds (bad) mov cmpsb mov mov xchg rcl mov (bad) stc cmp xor cmpsl lock and rcrl (bad) xor inc xor inc xor out daa pop rcrl cmp cmp jae out or rcr and cmp test add cli jo inc cmp adc fistpll push push pushf das sub ja push push cmp daa or add in ret pusha cmpsl fmulp cmp test gs sbb sbb scas jmp hlt stc clc ja lahf cmp mov repz or stos mov jg (bad) cmp jne mov push hlt cli push cmp pop sbb pop xchg test jb imul mov das xor roll sub or leave adc push test (bad) icebp mov mov dec in repnz xchg adc push xchg cmc (bad) mov int3 outsl pop and jge dec (bad) xlat mov loopne lea jle lods shll xchg jecxz imul test lret add adc sub lahf aaa mov jns addl xor cmp scas jmp dec adc mov pop test dec push dec out pop sbb sti cmpsb iret sub cwtl mov les addr16 jbe mov pop xor in push mov mov fs aam mov dec mov jno hlt push in mov xor das jo jno xchg and int3 pop sbb dec repnz jne aam outsb cltd xchg test mov (bad) lcall inc shrb jl and clc mov mov mov jns icebp inc sub xor and das mov lea lods jns sub ja inc decb jl lods outsb or or lahf ret xor stc mov inc xchg and inc add (bad) adc (bad) mov aaa sub inc add fisub fildl sti mov push mov arpl inc loopne cmp cli jp (bad) push sbb sub add xchg xchg (bad) xor mov lcall daa push jbe lret movsl fdivrs mov mov adc jb fsubrp roll fdiv and mov pop (bad) flds jge mov (bad) jns inc xor adc mov in outsl imul push pop fxch push push cmp xor outsb pop js cmp cmpsl sbb lahf dec clc push orb xchg call popa xchg out stos ss je lret or shrl daa adc repz pop dec cmp push cmp cs cmp stos cmp popf dec mov nop daa lret aaa lret je adc int mov test hlt js mov popa jns mov rolb push cmp and outsb insl xor imul icebp stos mov add adc inc pop push frstor out and mov mov mov pop (bad) pop cmp push xor sub pop pop int lods adc aam std cmpsl ret cmpw pusha jecxz popf mov and pop icebp or cmpsl aad sub and mov push stos pop rcll aad or imul add push push mov adc mov pushf mov sub jae imul push mov inc das mov push popa pop or inc jge sub xchg data16 call xchg xchg adc push es das jp or adc sbb push mov inc jge cmp (bad) dec mov jne cwtl mov push xchg lcall mov faddl int cmp xchg mov test or rcrl xor out adc mov cltd push push int3 inc shll xchg popl (bad) mov sahf mov pop mov mov les jbe cwtl xchg jbe flds and inc jne cmp push sub (bad) dec cmp dec (bad) jb clc push or sub mov pushf push sub test jecxz dec out mov cmp stc mov mov insb mov out stos xchg popf jecxz (bad) sub call adc outsl push jnp xchg pop inc repz jmp test or scas mov loope nop or jmp fwait mov xchg pop mov xchg xchg jl mov cmp and addr16 cmp cmp fwait lcall or mov fwait insb (bad) push mov pushf or push mov inc xor repz enter sbb stos sub dec sti push popa xor and stc mov clc jns pop test (bad) lret jae stos ret jmp ljmp popa or out cmp loope jle or inc repnz push clc add stos mov fs xchg fisttp or or nop in xchg pop fdivrp mov push mov das cwtl scas test les in mov in pop (bad) lret xor call xor or mov scas loopne (bad) sub xchg cmp cmp push sbb scas add mov push sbbl mov xchg dec cli dec push (bad) in stc aas (bad) dec (bad) in mov jno adc insb add sbb insl in outsl daa addr16 cld nop cmp jl insl call aad inc jp stos push xchg xor imul ret dec pusha pushf fnop xchg sbb loope fnstsw mov cmc (bad) cmc int3 loope in stc js jmp fldl mov ljmp cwtl push xchg sarl int3 pop out xor aas push sti adc ljmp xor lods mov pop jnp and push inc dec mov fwait mov lcall loope test jb js (bad) (bad) push push rcrl mov adc cwtl push xchg shrb pop ret pop push pop pop cmp (bad) add daa mov stos ss pop shrl cwtl lods and fisub and jmp cmc inc pop jp fidivr pop mov dec test lods and sub add enter mulb out lods push das loop sub ficoml xchg inc inc (bad) xor sarl push gs push cltd outsb dec aaa daa or inc or (bad) push ficomp pop xor xchg xor pop cmc pop add add test mov fimul addr16 enter loope (bad) scas mov clc ret (bad) add (bad) mov mov and cmpsb xchg fwait cmp adc lret mov add inc idivl (bad) jmp push in imul lret pop lret (bad) mov jnp (bad) fsubrp gs jge jne mov rcrb aam add xchg aaa add fbstp jecxz,pt xor sub jno xlat cld xor dec ss jmp cmp and or out cmp pusha int loopne std or cmp fldl xchg sub insl sahf pusha jo lret xlat cld jmp pop icebp rolb cmpl mov ficoml jecxz fldcw notb pop adc enter dec add iret lock adc jns out jle,pn and imul and xor jae dec pop or or leave sub inc scas push push out or cmp and lods jb into push jno loop or inc sub push aad mov mov xlat into jnp sub call cld cld (bad) and mov fnsave imul mov mov inc ja cwtl sub ror jb dec dec aas fldl or test clc inc push in mov lock mov test mov addl xchg stos aam push mov insb jbe das ss aas std outsl pop (bad) fadds pop int3 in stos lods stc xor iret (bad) call mov jbe insb pop adc cwtl inc popw int adc cmpsb jb cmp andl add sub pop std out sub imul adc imul jmp fistp mov jl and insl mov push jbe inc fnop sbb pushf sbb dec sbb sub mov jno xchg inc gs sub mov sub mov mov hlt jne adc mov cmp aad (bad) lods cmpsl mov sarl es cmp ret pop int3 cwtl add mov ret sbb cmp icebp movsb repnz (bad) sub bound mov gs inc (bad) pop ljmp adc das or subl push cmpsl jecxz lcall push popf movsl cltd lds les jb (bad) fscale subl dec lcallw cmpsb sub iret loopne add icebp push loopne cwtl mov pushf xor add stos mov pushf sahf pop xchg std push clc mov (bad) mov xchg ja inc ficom sub out push jb lcall inc sub faddl dec outsl ja ficoml adc (bad) nop add dec xchg jne test pop je adc pop inc sbb repz mov pop push jecxz scas mov sti cmp cmpl sbb outsl mov cli icebp mov pusha xchg in shld adc xor mov (bad) jmp addr16 mov cli addb int mov loop bound data16 mov jbe mov adc pop pop or lahf jbe clc mov mov xchg or or or dec stos cli push mov outsl push cs sbb in and ds xor pop inc int sub or mov jb pusha (bad) je push insb out das mov (bad) sub sub sub xchg or lret cmp aas icebp mov mov mov mov sub or pushf push xchg add aaa mov fs or mov imul shll dec mov cwtl cmp mov adc cs aad nop loope xchg pop jo gs pop aaa dec lds dec lahf cld or mov inc lret adc in subl jnp mov je adc mov stos xchg mov add sbb stos adc (bad) xor jno sahf mov pop cmp xor or insl mov xchg dec and adc jno bound pop aam adcb pop mov pop movsb adc inc xchg pop repz push adc adc fisubl push movb int3 mov (bad) std jge popa movsb pop dec mov aad add stos mov inc es jp inc cmp jmp (bad) stc lcall movsb popf ret jno xor fcmovnb imul lods sbb jns pop or inc push push inc lds iret lret sub xor pusha pop stc mov test mov icebp pop stc fidivl mov cmp scas fwait push xchg (bad) mov adc cmp adc inc icebp iret inc cld sub es or fisubl adc push xchg movsl testb fwait aad mov adc jp xchg sbb aad pusha sub fwait stos dec stc pop sub movsb mov icebp xlat int3 loope out nop (bad) aam jg stc sbb les ror and enter ret je push (bad) add cltd inc mov jmp xchg push xchg push rcll in pop jno (bad) lret in aas fcomps idivb insl stc pop pop mov mov movsl mov or mov pop pop repnz pop add push pop daa push sub call jg ficoml pushl sti pop outsl mov xlat mov inc test mov push rcl jmp push in movb clc dec inc in cmpsl mov cmp fstpt jbe mov dec jnp mov cmp mov jae push dec push mov jp xchg je inc mov mov (bad) mov jl js mov sub push or mov ds xchg cwtl inc xchg test sbb pop test lcall adc popf xchg mov sahf je (bad) leave jns push call addr16 xchg aam sbb push into xchg mull push jnp imul xor imul call daa rcll cli xor sbb mov js hlt jbe adc int3 loopne test and fildll mov fwait add sub cmpsl jle cmc outsb dec mov (bad) out (bad) cmp fadds adc test mov pop (bad) cs ljmp icebp insl je mov jecxz mov and cmp mov push xchg aam sti dec or xchg cmpsb cmp inc jp jmp cmc mov sub or sbb dec (bad) or xchg push sti in stos es jo ljmp mov push cmp add jb in sub pop inc sub scas aaa in jo mov xor (bad) fidivl mov repz inc sbb and aas push xor xor jge jl dec imul shl adc test mov xlat ds mov ss push xlat push mov das fsubl lock xchg jle sub push xor pop mov add fmuls nop cmp dec out mov inc adc mov adc dec adc mov clc les cmp out and cli mov and mov mov cmc sbb rsm add repz fwait pop test add mov xchg ja xor jne jecxz aas push push jge push rcrb xchg and mov test jle cmp push loop loop and test lcall fwait les imul cmpl push je popf mov cmpsl xor push mov dec pop xchg cmp xchg int3 mov popa leave jg push jecxz fcomps fcoms xchg jle jecxz or xchg aaa xor or inc nop xchg std mov sbb int jl sbb imul iret ljmp pop xchg in adc nop xchg mov roll mov mov add aas xor and (bad) into add mov and mov jle jae pop lahf jge add or adc test sbb nop int inc add out adcl push rorl cs mov and or es push xchg std dec mov call inc outsl sub jle dec dec sahf push jp cmpsb add mov pop outsl cmpsb and xlat jne hlt arpl pushl repz arpl and sub data16 adc jle stc out adc enter (bad) lret cmp cmp repnz xorb xlat cld adc pop mov scas dec sub (bad) aas adc popa sbb stc add mov ds (bad) push aas (bad) insl (bad) push pop fs cmpsl lds lret fistpl cmp sbb xchg pop pop icebp and or jne mov aad push mov aad and nop mov mov daa xchg inc xchg fmuls pop insb and adc fstpl adc pop adc mov xchg cld xchg pop xchg cmp ret es sarb aam aas fwait outsb mov and cmp test pmulhw stc arpl pop dec dec mov mov sub (bad) xor jp leave cmp mov aad sti call arpl aad or jge scas fcmovu jl mov add (bad) scas dec mov pop (bad) bound (bad) push inc push gs adc xchg ss fs rcll inc jmp adc imul out stos fnstsw cmp movsb shrb (bad) in pop lcall xor jecxz test and (bad) sub in and leave rcll jmp xor enter dec fimul (bad) scas movsb add jae jbe or mov sbb (bad) push fisttpl cmp push mov cmp mov cmpsl scas sbb jl cmp int cmpsb cmc mov ret xor cmp jbe insb and ficom jmp in incl out inc popa push push sub adc cmp aaa add jp mov insb daa jle lods jb mov enter push (bad) cmp and adc call leave push hlt into pop jne mov pop inc cmp (bad) mov add mov xchg inc jns fidivrl inc lods pushf push movsb and int3 xor add jnp scas icebp inc mov dec mov cs sbb jnp lea cltd jmp add or in adc adc cwtl shrb jmp dec adc into jno cmp ret mov les jns push sbb movsb insl mov (bad) and out pop ljmp daa nop jnp mulb inc call lahf ficompl aaa jbe pop mov scas bound push hlt call dec pop iret jne cmp push mov pushf push enter sub xchg int3 mov and dec (bad) leave cmp pop add ds inc pusha pushf popa (bad) js xor test hlt sahf jne jo cmpsb cs push leave inc bound pop insb ret lds push jle arpl mov push movsb loope fnop fcmovu ret ss fistpll dec into push and inc jmp xor xor push push les sbb sbb push (bad) scas or in sbb sahf xor enter int repz or jbe lods ja cmp in inc mov fimull fbld sub out in inc mov push sbbl add or or enter fdivs lcall ret sbbb mov push fadds sub mov test add lods mov mov mov and out add sub scas enter es and cltd lret fxch cmc mov clc adc sub jbe mov or gs or lret push and push out fdivrs int3 pop les int3 mov (bad) rolb fidivr xchg incl lret arpl imul outsl mov dec inc add fwait sahf pusha mov shlb loope pushf dec (bad) mov adc push and or jae sub push mov imul jb loop ret aaa (bad) jbe mov lock incl outsb jge bound or xlat sub sub loopne les jns aaa mov test pop and insl fwait je hlt aas push bound lea or inc leave push sub (bad) mov inc popf leave (bad) out dec lock mov jmp dec inc cltd fsubrl and mov into mov inc rcr mov pushf adc pop inc gs movsl lods (bad) push xor add xor cltd cmp and fnstsw out jle cmpsl sbb sti jp out and sub mov pop in mov cs mov dec mov test sub adc push jns shrl mov xchg ret rol lret outsb jns cmpsb bound das mov mov jne or inc inc aas pop imul pop (bad) xlat mov pop jns divb pop jne push mov inc test pop cs aaa nop pop mov and cmpsb loop jl mov mov xchg push imul xchg ss movsl xchg lods jmp popf fcoml icebp jmp fldt push and cli in fnstcw cmp xchg sarb repnz out mov pop inc out icebp sub or lods jns jp pop pop cmp popf ss pop daa jge test xlat inc adc push adc push fcom out and outsb inc sti pop xor (bad) pushf mov jb pop adc ficompl ss mov lods decb xchg test call jnp mov mov icebp in xchg cmp push rol mov and loop orb mov push jnp enter push (bad) idiv adc xchg inc nop (bad) popf xor push hlt sub (bad) mov loopne dec cli jne inc jne inc in cmp je addr16 fmuls pop lea cmpsb xor fstps xlat bound adc gs sub lcall and call push jge push and adc sub daa dec call and in adc int3 insl push bnd fldcw lcall imul js loope pop icebp daa icebp rorb sbb jecxz and test pop cmp jns imul lds jo sbb stc enter pop or and adcl fstps xchg popf scas shr lds pop arpl out fldt gs out shll test fsubrs pusha cmpsb fcoml movsl lock pusha sub push dec movsl inc mov mov cmp arpl (bad) sbb add (bad) in mov mov pop lods cmp gs fs pop out sbb mov push jge xor popa pop mov xor cld push pop and dec lret fldcw mov adcb xchg or (bad) jmp adc out and inc xchg test gs or mov add or xor daa lods stos popf inc divl rcrb jl push nop xchg (bad) mov mov xchg push mov lcall les dec xlat into pop mov lahf adc rcrl xor js decb fld1 insb inc and pop rorb fdivrs push icebp push jnp cmp dec scas popf pusha jbe and daa mov pushf fs pop mov xor jae add push sbb hlt mov leave jle inc cmp in out (bad) mov ljmp mov nop xor call and jbe cltd fcmove sti jmp cmp sbb aaa adc dec dec jp inc repz xchg jl (bad) roll or xchg insl nop lods outsl sub jae adc fwait ds mov call inc mov mov popa mov rcrb fwait mov cmpsl mov ja dec cld jmp xchg pushf and jmp ret cmc inc daa jp mov fwait or inc out movsl mov sub test aad movsl jg inc movsl imul add jmp (bad) ja inc mov cmp lret sahf push pop add nop or fidivrl pop mov insl jne and loopne xchg jecxz xchg fwait cmp jl lods mov sub sub cld xchg cmp lea mov sti mov push in (bad) cmp roll aaa xor pop mov add xchg mov jno or xor mov test les xchg push mov jnp cmp mov pop je ljmp jp push popa rcrl cmp pop sbb push mov out outsb cmc xor cmpb iret jmp inc mov mov addr16 fimull lds and jle jno in lret (bad) outsl mov xchg cs imul movsb fisubr hlt xchg dec fcomp or aaa push sti inc inc add (bad) add adc lahf lds mov mov pop mov addb stc sub cld es loop push push dec iret push inc push es sbb in rolb insl sbb xor sti push sub fwait cmpsb xor inc or pop stc ds mov inc push lcall in (bad) xchg sbb sti rolb in jge outsw mov insl lods mov sbb sub fsubl sub jp jmp dec push jbe jns dec jg and in mov jb sub (bad) xor sub xchg sub lock (bad) lret mov push leave jne adc add cmp imulb inc sbb fs xchg and xlat dec std xor je mov xchg jnp xchg ret stos inc imul insb rorb or xor cs dec (bad) sub flds jno dec xor int3 dec add les xchg xchg ljmp aaa test loop cmpsl arpl mov mov test xor jg shrl movsl fxtract xor or ljmp xchg loop (bad) push jmp or into in add dec sub add push xchg jge sub xor add fidiv jle add xchg jp xchg inc aam in push xor gs stos icebp cmp or movsl mov add jnp add fldenv mov inc jge sub mov aam jne mov or cltd js lahf in jo mov inc cltd xchg repz loop pop in mov jecxz lret mov xor add pop jmp ja mov sarb loope mov jo inc add and fsubl mov ljmp inc mov sub or sbb jo bnd add mov push xrelease call cmp jle out adc inc jno (bad) fsubl xor sub xor xchg into adc pop xor and pop test (bad) notl fbld inc mov sti jle or repz mov pop sub sbb mov jae leave pusha sub inc daa mov scas sbb jbe add adcl xchg (bad) jbe in jecxz sbb jnp mov jno mov daa push or push xchg xor mov jnp or aas dec push gs mov pop jge sub lret mov jg mov pushf es inc cmpsb (bad) push not pop in stos dec fucomip ljmp mov daa jle inc test ds inc je cltd es imul call dec popa jne ds lds jns mov push int3 dec push aaa xor mov xlat fsubrp sbb mov ja inc gs push xor aad pop cwtl push jne mov dec repz inc xor sbb fsubl jl mov pop andb aaa aas adc in jge addr16 int3 inc push fistp pop mov or push sbb xchg jmp (bad) into (bad) repz lock inc aaa ret inc js std xchg push cmp lods test js sub cmpsb popf lret int3 fstpl sub dec das add icebp jecxz push mov in add pushf push dec in cmp or es push pop mov movsl fs (bad) or jo inc push ss into xchg aaa cs shl (bad) in and mov outsl arpl popf iret ds or jmp (bad) jmp mov stc add mov push inc jp adc pop daa sub cmp lock fwait push lea std lock ja pop outsb dec out sub nop pop test into stos leave in adcl mov sub xlat les loopne pop dec sbb adc fisttpll arpl pop xchg pop rclb cltd dec fidivl adc insb test jp mov mov into movsl or ja mov imul cmc mov adc (bad) jg cmp es and pop cmp push push pop out test mov rclb jp aaa lods loop pop or stos push fcompl jmp adc push leave mov inc xchg mov inc jge pop and mull negl aam add iret gs cwtl cmc mov jbe icebp pop fsubp sahf (bad) (bad) imul sbb xchg add xor (bad) fadds stos js enter jns cmp mov cmp and push clc jl bswap sbb lret pop or movl xor pminsw push adc popa sbb mov jmp jmp ds ss in aas or cmp leave fadds les push (bad) fdivl bnd push fimul gs or sub std cs add add cmp sarl dec jg mov push add rclb ficoml call jne xlat mov and pusha push jo pop cmp movsl xchg pop aas or mov stos aaa in stos fdiv xchg cmpsb mov add pop mov mov fmull out mov clc add inc mov fildl sahf mov mov ret jecxz xor jns call push sub out pop pop pop lock jg dec pandn xor push add or cli add div jg adc jmp mov js mov push loop mov test stos and inc pushf bound iret mov leave (bad) ret or adc jmp jae jl push insl fs lret dec ret rcr daa add dec out cs mov dec push out mov xor mov dec (bad) idiv push retw and shll (bad) mov lret das adc stos xchg cmp mov out inc mov (bad) mov aaa mov out push xor lock inc idivb mov ja jmp dec bound or xchg mov sub jbe loope sbb jbe xor sbb sbb and or cli les iret rcr jg in (bad) mov test mov roll jae jge xor xor mov push pusha inc test push lea mov hlt fsts (bad) dec in cltd pushf mov jmp mov dec sbb jecxz mov jg shrb dec inc inc dec lahf fxch pop adc sub xor ja fstps add fwait es movsb jecxz mov pop add rolb jae inc inc in mov push cmp dec push sub ljmpw test enter imul mov or mov popa movl (bad) not dec les xchg nop std mov pop imul sub int3 and add adc or xchg lcall sub lea mov sbb mov aam (bad) mov popa mov mov std xor out lock (bad) out or jne popl (bad) gs xchg cwtl xchg jns sub hlt sbb insb mov or dec lds mov pop (bad) (bad) mov int3 push clc daa cs cmp xor pop mov xchg leave adc add sub pop pop mov sub test mov addr16 cltd frstor mov sub lcall mov inc sub stos mov add fbstp fldt mov jns shrl fmulp arpl pop fs push mov test inc std jmp gs or mov add ljmp icebp out sbb out mov orl imul nop sbb or clc adc into data16 sarl fwait add xor repz rcrl hlt arpl add add inc andl mov dec cmp bound xchg jnp mov xchg jae or addr16 jb lahf lods repnz lods mov mov std scas loope pop mov or dec xchg inc sub (bad) rorl inc test inc scas nop lea sarb xchg and pop orb jmp mov (bad) (bad) ljmp mov (bad) bswap push xor pop mov or mov jns test icebp jo test dec mov enter sub pop jo pop push ret in inc push push sub mov inc js add in push popl xchg dec jmp xchg and mov dec insb push (bad) mov sbb jae and aaa sbb loop and je cmp push mov loop and or aas push jp dec adc hlt fcmovnb lcall jne int3 push adc cli mov and roll outsl pushf xchg push jmp stos xor in (bad) aas inc mov or rol pop sbb xchg test test clc pushf loopne stos ljmp and pop or jl xchg setg sahf pop fstps sub mov sub dec gs xor js jecxz test shrb loop and cld sti jbe dec int xchg lock xchg mov into mov cmp and rorl insl or dec mov ret movsb scas sahf sub xchg ret jno cli int3 mov mov je mov mov push int3 ret inc ds push ret xchg gs push lods inc arpl inc dec mov push xchg sub pop test outsl fiaddl bound mov lods xchg lock mov lods mov dec pop lcall test outsl mov and (bad) sbb mov je sub push mov push imul (bad) sar mov push inc lea pop (bad) mov test cmp loop sub adc aam jle pop scas pop out or xchg dec fidivl push and and push jno in imul xor cltd ljmp mov mov lds inc sbb clc (bad) ret cs dec dec cmp cwtl inc icebp in idiv and clc ficoml loop push outsb int3 je aaa movsb pop mov pop xchg lret into dec aaa add outsl lahf sub pop daa je int fs and ret adc mov lahf push fisub fild fisubr and inc stos add push loop adc test js xchg gs cli loopne adc dec gs stos mov push jo mov add scas fcmovb add or (bad) popf sbb xor in cmp push inc jp iret mov mov cmpsb out ret pop jne lahf dec push adc push in pmuludq or jae add imul adc outsb and out mov clc xchg fcmovb stos ljmp aaa cmp pop mov sbb (bad) cmp xchg lret rcrl adc sbb les sub jmp jne cli sbb leave loopne xchg fmul jbe cmp cmp and or mov ds jb lret push xor iret mov add xchg bound or addr16 leave inc call xor dec into mov ss mov aam lea xchg sbb fcom push stc cltd pop pop cmp cmpsl jo inc in incl insb dec in push xchg (bad) xchg imul (bad) icebp mov (bad) sbb cltd fisttpll push ljmp (bad) cmp mov icebp xchg mov mov bound cwtl out adc jne jo jbe mov mov xchg inc ds push or cmp test orl cmp insb inc push imul out sub pushf mov jecxz cmc xor lret mov mov nop repnz test leave mov fs xchg xor pop push push dec adc sbbl pop push arpl pop mov mov into fidivr sbb push sub cwtl out and mov roll aas ljmp pop test dec or xchg test mov ds push push cmp cwtl mov or jb adc insl push mov sbb push cltd mov imulb rcl test into jno in jge xor int mov inc scas pop cmp sub xchg mov or jp aas inc jo or xchg jae sbb sbb in mov nop mov mov mull sub mov in insl jnp outsl jl test mov xlat insl or dec push push mov dec mov fildl addr16 jg xorb bt push xor aaa jecxz dec mov sahf cmp push jle push test cmpsb jb sub xchg mov and push (bad) inc aaa ss xor icebp imul and (bad) mov (bad) xor pop sbb jg xor mov aam xor mov and push and lret sti xchg dec lods sti jmp and or ds (bad) sti xchg mov sub scas mov rclb leave mov dec sbb leave sub xor dec leave inc pop or push (bad) jnp in dec pop dec scas cmpsb mov aad or loopne sub shlb outsb leave jbe mov pop sub repz fsubl (bad) scas jo repz sub dec jo insb into sub pop daa test leave and xor insb xor add pop aas xchg mov scas adc push mov sub fxch and adc push sbb daa jge inc pop pusha (bad) mov jmp loope and xor push aad fwait jae dec clc (bad) bound cltd xor and subl pop lahf pusha imul mov out push rcrl xor dec lcall adc sub (bad) and out lret jae push jmp jecxz sub push int or pushl adc movsl push loopne test xor xchg sbb push aas ja mov jno or jb (bad) adc nop push sbb ret jl adc pop mov dec sar sub (bad) rcr repnz fistl push popf sbb (bad) sub in inc push adc sar lret dec and aam xchg sbb scas cmp mov lret insb adc ds daa lods push push imul das fsts (bad) addr16 iret and test stos mov push les or cs pop into add movsl jp jo enter cmpsb sub and jno shrb stos push dec leave aas lahf (bad) enter out (bad) loopne jg int3 fild das enter adc cmp xor adc imul aas ret (bad) xor ret push xor inc pop pop jne push push sbb fstpt rol js add pop lock and push cmp add negl cmp cmp inc pop (bad) ficom les ds ret stos xor lods and and mov push lret addr16 int3 jmp xchg dec lret sub mov pop adc stc xor xchg aad popa in jo xor sub mov push js mov bound imul adc popf mov inc dec jge jmp push pop call in jle dec scas adc sub insl pop ss add sub out sub fs out out pushf mov mov (bad) fcmovnbe jo divb pushf sbb adc cwtl xor pusha imul dec or loopne stos push mov add fxch jb lds dec cmp outsl or sar in out ret shrl and cmp add sbb mov add (bad) scas in dec das push xlat out and adcl or lcall push mov add add cmpsl enter push mov cmp sub daa pusha arpl jo or xchg add adc xchg push xchg push fsts bound push ljmp ds dec push js outsb loope lsl out mov int mov xchg (bad) xor mov pop inc addr16 mov test mov mov loopne lahf js xchg jns popa js push (bad) xlat leave dec jae loope shrl jge punpckhwd jb inc sbbl mov out insb daa or add aam scas sub fs fisttp mov cmp push ret es sbb dec arpl (bad) xchg or add inc enter (bad) jb xor cmpl leave lock not outsl fstpl push cmp mov test sbb and into sub adc xlat rorb (bad) mov inc xor in sub mov pop xor and sub xchg xchg sbb cwtl shrb (bad) xchg les shll inc shrb jge outsl jae into mov jnp imulb mov pop push insl cs leave and lss icebp jno insl dec stos inc in sar xchg push jo mov adc or into pause xor int3 jmp stos outsl out cmpsl into xchg rcrl mov sahf mov inc aas in faddl cmp jl jae xchg xchg dec cmp (bad) es incl cmc add or hlt adc pop jo (bad) sbb push mov clc and js (bad) outsl push ficoml mov fisttp xor (bad) aam cmp daa and push sbb jo xchg test sub arpl daa ret mov sub dec push scas jecxz or icebp ja mov adc aaa jne fnsave mov je fisub addr16 pop enter mov sub mov in call (bad) cmp pop cmp fcomp and pop sub repnz ljmp out mov outsb push (bad) and data16 mov and dec lea inc pop pop outsl lcall int3 fistpll loop nop mov xor dec outsb xchg (bad) fisttp fiadd popf sbbl addl cltd cmp inc in jmp adc in and mov inc outsl xor pop iret xchg rorb shrl test xchg dec add jnp leave xor std add aas fstp mul sarb adc adc outsl dec xor jecxz and mov clc adc scas aas mov inc push call idivb inc jmp test mov pop shlb out sarl adc cmp sub adc aas mov lods push cmp mov aad (bad) movsl cmp cmpsl out daa xchg lock mov xchg sbb pop sbb (bad) fsub cli lret out sub daa cmp push daa or shlb xor sarl sub clc mov sbb or inc mov push loopne ds cmpsl in add (bad) jle (bad) cld mov pop cmp xchg ja xchg fsubrs fstp sahf js add xchg add pop dec je movsl jle lods test test cltd sahf xchg std add lret and cmp pop xor pop inc aas or jbe mov dec jne jbe fs inc push pop test pop pop pop xor mov xchg push into fwait lcall jno pop pop mov insl pusha ret jmp sub push adc xor sarl pop xchg into or adc and (bad) or lret xchg cmpsb push cmpsb and mov inc enter call add stc idivl lea call jge pop xor and mov jno incl adc xor imull fbld aas and bound daa sbb sbb sbb je rcl loop fldl (bad) aaa xor je jmp xor xor mov xrelease es scas or sbb sbb aaa mov outsb xor sub ficomp sbb cli pop aas or mov jbe jecxz xor add jae mov in or stc cmpsl xchg pushf insl sbb jns xor stos and stc push insl jnp lds push jl in sbb aas (bad) jno mov pcmpgtw cwtl jno cmp movsl nop stc (bad) out and mov and add adc dec (bad) insl pop xlat inc shl pop inc adc push test mov ja mov out sub adc lock scas ret adc lret pop lret mov pop rol lds mov mov and das in xchg sbb adc test mov mov les pop aad xchg iret lret cwtl stc jo mov lock aas jmp sti push pop frstor addl shl and sub sub mov inc push iret js mov icebp fwait sbb add or out ds test pushf movsb xlat mov push dec fcom xchg xchg cld push ds enter repnz mov rorl adc jge insl jnp sbb add lds rcl movsb or inc dec cmp mov fstpl push xchg add sti arpl lods int3 movsb movsl jne xor aaa push dec pop mov jge push cmpl cli addl gs jne stos dec mov xor sarb mov loopne cld dec push aas les rclb and fild xor jmp or mov fimull (bad) gs arpl push add data16 lods outsl mov jmp lds cmc jge mov pop and jae and pusha adc lock (bad) mov scas and xchg or fisubl out mov jg ret xchg mov (bad) ja test jp or lea pop pop xchg push icebp out mov jne inc movsl and mov xor mov ds orl in xchg ret adc enter add jnp xor movsl jnp jnp cmp xorb push (bad) mov in iret mov in ret into ffree sub mov push pop inc mov dec or xchg pop sub sub sbb or cltd cmpsb ret pop and mov lock fldt lret or and inc ds and (bad) (bad) (bad) enter adc inc test aas dec movsl lds pop mov mov mov (bad) jno lahf pop gs add int3 dec rcrl aad (bad) pop inc mov lods pop je pop mov sbb inc repnz push cmp movsl or nop outsl aad fidiv data16 test inc mov push mov out cmp arpl cmpsb jmp mov jae sub insl stos jge rcrb stos inc push sbb adc jnp andl jp arpl jle pop mov pop adc fistpl stc jp add xor pop mov dec adc loop loope pop cmp inc in mov jle xor adc daa pop dec inc ljmp mov sbb sahf add inc mov mov add xlat push jmp mov psrlw mov mov mov sahf popa add pop cmp popa xchg jge cs mov or lahf or stos hlt in pop xor push (bad) or int dec cwtl fsubs sub (bad) outsb out mov clc push add stos js ficoml jne or arpl xchg fnstcw (bad) mov incb mov hlt mov xlat sbb mov movsb imull fcoml push mov incl xchg popf ffreep int3 decl sahf loope test push and and (bad) cld ds adc rcrb mov dec pop popa ret xor loopne (bad) movsl lds rcrb jno popf jecxz in lcall xchg in inc int cmp and inc (bad) (bad) pop (bad) out ret xor lds rcrl cmp (bad) xchg aam and cs jmp and sar mov ja pusha push mov aaa mov and jmp sbb es cmp repz (bad) mov repnz lret dec dec add push jmp adc mov inc test mov cmpsl icebp imul xor insb cmp jecxz lods push (bad) cld jge xchg mov fbld cli insb jmp jne ds cs call scas jecxz sbb test or jbe cmp les (bad) mov repz aam pop fisub test loope adc inc hlt iret push lods in lahf idivb mov push mov mov fbld dec fldl2e mov in test cli addr16 jbe xor out (bad) daa icebp pop add sbb or data16 loopne inc xor inc gs js cltd add js loopne cmp jge dec and dec int inc pop and bound xor xor add int lods ficomp pushf push les aas mov mov mov in (bad) push inc aaa cmpsl inc mov faddl leave test jg xor (bad) pushl sbb xchg jbe aaa fs xchg mov js call cmp push xor or xlat out sbb jns sub mov cmp mov rol fidiv push test out push pushl sbb test cmpsl mov dec cld into jb repz push mov cmp add mov inc std jno xor decl sbb mov loopne jecxz mov push lcall mov mov cs pop mov pop or xor cmpsb cmpb xchg cwtl jo ds mov jb fs ret mov pop scas frstor cmc mov movsb shr push ljmp or or mov push in sbb es push jmp sbb lret and pusha push add inc push fdivr sub int3 sub dec and rorb or es cmpsb imul cltd ror add cmp mov fnop scas jl mov int3 pop (bad) ljmp test sbb pop jle adc (bad) mov cwtl cmp adc adc or repnz lods outsl dec cmp enter leave sub stos and push stc push cwtl jmp dec mov mov insb mov iret pop pop je repnz cmp xchg jne mov cmpsl into sub lahf imul xlat mov data16 cli mov rorl mov ljmp inc (bad) sti in inc sub inc mov and sbb lret inc jb dec popa xor mov push je (bad) sbb lret popf xchg jns je mov iret sub mov ret push or add mov rorb mov test icebp pusha and jne ds hlt sub mov xchg dec mov xchg cwtl push stos jne outsb and and push sbb insb pop or gs cmpsl popf dec jb pop push jp in xor clc sub mov xchg das mov arpl inc cmp imul dec repnz mov mov push mov lret pop out sub xor insb or (bad) ja lods sub dec xor imul fldenv scas in int add sub mov xchg pop scas cmp mov paddw test push imul xor push or mov sub sub jecxz (bad) loop mov mov mov flds push test pop rcr aaa or add xorb xchg data16 mov cltd cmp stos mov movsl in cwtl inc mov or sub xor mov adc in mov (bad) icebp pop and or shll cmp daa sbb xchg mov out stos inc or lret push mov out jmp lret jle lret mov hlt xor dec pop mov inc sbb cmp inc dec push loopne,pt xor sub jle adc xchg pusha push xor and or test fldcw adc ss add ss sub cmp jle dec xchg (bad) xor in and ljmp and into cmp or add sbb sbb js cmc es pop outsl push jo cmp mov push sub mov pushl inc fildl sub nop in pushf pop test outsb mov xchg insb lods fucom lcall lods pop xor add stos pop jp sbb pushf sbbl cmp push cmpl popa add shlb adc mov cmp add out test stc cmc mov fadds scas xor pop popf jbe pop into mov test stc cltd sti mov push xchg push mov (bad) insb mov jnp pop shl loopne jge xchg jmp (bad) mov dec in xor into insb cltd mov sub mov hlt jle and sub sahf lret pop insl leave sub xorl adc int inc jmp xor aas fldenv shrl aaa mov in aas int xor imul xlat ljmp adc add lock aam mov inc insb lds push fdivrs mov imul inc and sub jl insb push cmp jbe jo cmp dec and dec std (bad) push and ret inc adc cs loop push push je mov dec inc xor push popf add pop cmp into xchg out pop add shr mov adc into ljmp gs push push pop jb repz pop push xor pop loop hlt sti and mov add jg and sbb gs sbb aam push adc xor adcl aam mov mov adc xor and jge xor lds addr16 jecxz arpl gs enter jmp ret insb mov xchg fsubs in ret inc inc xchg add addr16 sbb or add mov rorl (bad) fisubl xchg sub (bad) arpl lea xor xchg push adcl inc or sub imull arpl pop sbb mov nop inc add adc (bad) mov jns test scas mov xor mov xor push repnz inc push sbb add mov es mov in pop xor jmp jl gs jno sarb pop cltd dec push jne out mov repz lret push lahf jo sub mov cmp leave pushf ss imul out jo out and jbe lock xor xchg dec jmp or inc divb in test orb xor movsb mov mov ret pop ret jns les mov ss inc sbb add push jle lret mov pop mov xchg test mov inc and stc sub or mov inc xor xchg pop mov scas out (bad) testb or enter flds les leave add cmp add cmpsb adc js test push sub sbb (bad) lock roll stc fucomip jno jno adc inc cmp dec adc jno out or fsts lea in dec (bad) sbb cmp mov mov dec xchg clc sbb inc pop sub test insl fwait pop sub arpl cmp inc mov dec mov shrl cmp push fildll xor lds loop lahf xchg adc fwait or cmp mov and sti js es mov add add cltd in jno fnstenv mov pop pop push xor lahf popa dec sbb dec mov out lods or and fildl lods out jmp sub out jno push push push ds dec mov adc add mov sar sub pop fimul call out sbb mov (bad) xchg jne mov mov xor jno lcall aad cmc pop and xchg jl dec add sti imul mov test pop sub push repnz mov push xchg add mov mov cmp int3 dec rolb inc jo jmp daa (bad) adc and sbbb mov int leavew or mov jo jb lods in xchg xchg or xor nop cmp in jp dec pop inc out loop mov mov or jl jbe dec ds inc cmc lcall mov je xchg adc add mov imul lods mov and cmp aas inc std mov ljmp mov or icebp mov sbb add inc mov xchg lods cmp or loope cmp stos push sub std int3 les sub mov cmp inc dec scas dec sub and jl outsl int3 adc dec push add sbb ja push lods jl mov in jno rolb out dec mov fisubl lods jb leave mov mov mov and pop arpl (bad) pop popf jb push mov insb xor mov mov nop lahf jae inc daa int jo inc add mov inc pop jno cmp into xor call or popf (bad) push push out (bad) (bad) inc test outsl insl mov inc mov les cmpsb test shrb jb ss inc cmp sahf cltd (bad) push frstor cmpsl insb mov mov sbb sbb pop jle xchg (bad) pop icebp dec fisttpl sti aaa lods outsl pusha call or aad movsb scas out pop int3 or or mov cwtl and inc test sub xchg mov or mov dec and into aaa jl nop adc jg add xchg leave pop xor push test pushf (bad) push cwtl jecxz jb lods push enter jmp push or (bad) fisubrl jmp xor xor ja cmp cwtl fdivrs nop push mov js and sbb jmp aam push push xor dec adc pop pop xor mov aas xor das ficompl rorl leave jmp mov lahf in dec jns fstpt mov jnp cmp or stc jns into push push popf cmpsb in lahf sub xor or mov test add jmp and call (bad) mov ret mov out stc jno inc mov out in mov out sti loop (bad) orl das jb push inc xor lret jp,pn add dec mov aas leave xor insb pop out xchg xchg jge,pn xchg add mov push push fs push ret daa sbb xchg stos and mov repz mov fsts xchg std xor rcll sub pop out inc shr ss neg iret dec xlat ds xor jge add mov push sbb mov dec enter cmp push rolb push xor sub sub inc dec push (bad) jle xor ror dec mov mov pop or adc xchg loopne dec dec push movsb movsb sbb iret or mov jecxz xchg push mov mov jo lods adc inc mov pop enter in bound stc and (bad) lahf scas push (bad) inc sbb data16 or aaa out rcl xchg idivb jnp in jmp cmp lret aam rcrb mov mov and hlt fiaddl nop dec adc mov dec mov mov add push inc xor inc sub retw hlt and and mov shlb (bad) ja insb xor sbb sub and iret pop lea lea sbb stc fist push mov test push sbb imul xlat lret (bad) repnz cmp jge mov cltd lahf fisub cmp mov cmpsl sub sbb dec mov roll adc test xchg jmp leave mov xlat lcall dec dec in sbb sbbl mov iret je aas sub nop dec sbb loopne stos (bad) jno xor ds into jno pushf test psubsb lret (bad) lret in lret aam push inc movl sub xor push xor and aam cs mov js jmp in into ja or nop rcr jbe mov xor sub loope push lock and pop add xchg lret sub into out jge iret lret and sub mov pop dec adc jg cmp test loopne stos fstp in and stc jae lds popa pushf mov out sbb push push pop fildl es shrb jle xchg inc xchg jnp xchg and inc insb aad lock jg inc mov out insl mov add xchg std fcmovbe pop sub (bad) iret add xor xchg cmp xor pop mov jge sbb xlat sub mov jge dec cmp ret add pop aam fmuls stos sub int3 xchg adc test xor dec cwtl or pop push and lcall jnp out (bad) movsl inc sbb mov cmpsb and sub call sbb dec lret lret mov mov ja inc (bad) sbb jge lahf fild inc push outsb mov ret sub mov (bad) jbe cs jp rclb jecxz inc mov inc jg xlat hlt call repnz jne dec out mov in push adc in xlat popf test rorl mov mov sbb sub mov in mov dec add or dec or leave jns cmpl pop push add jns push add aam hlt xchg ret rolb in leave adc lcall add pop cwtl xor imul xlat mov pop mov out (bad) or js pop push imul xor rolb or dec stos xor dec push or dec int3 lahf stos inc enter or pop xor mov and jno sub lods mov pop mov push fcoms jne stos sbb jle fcoml in cmpsl sub mov je pop les mov jp insl out adc jecxz outsl adc test (bad) adc idiv subb js cld hlt call pop ljmp mov pop lds test xor mov mov out mov dec and and push (bad) push stc pop pop fld bound mov fdivr gs add xor sub and pop enter sarb aad and sub stc ja mov sub mov mov jmp rclb gs fcmovb out xchg leave ret xlat out insl inc pop fnstsw xorb sub mov cmp repnz (bad) adc outsl mov rcrb xchg cwtl aam jo adc adc cmp mov cmc dec in daa cmc mov mov dec pop std mov pop push jge jl into push sti pop jns mov les lods movsb and into test insb adc mov jae xchg xor and pop or (bad) (bad) dec lahf xchg lods arpl mov inc cmc pop xchg test in push aam push pop js addr16 addr16 mov inc or gs nop in data16 test xchg hlt mov (bad) outsl mov push push xor inc cmp std xchg je pusha xor cmp lods cld push push or ljmp dec (bad) movsl pushf addl and inc dec or int3 cmovae cmp call sbb (bad) cmp mov jbe mov ljmp (bad) outsl cli pushf adc stc in sbb push fwait call pop cmp cmp ds and pusha scas lcall xor xchg ss dec out jge cmp loope lds (bad) mov jne out data16 mov sub nop fwait cmp outsl cltd das leave lods js ljmp sbb aas mov andl sub xchg ret lods cwtl push sbb xor mov push sti add aaa arpl mov dec jae xor mov lcall xchg pop in xchg and jnp dec (bad) push in out inc orb test loopne mov cmpl movsl cltd mov int es mov scas cmp roll loopne mov inc outsb pop mov nop andb (bad) pop mov outsb fdivrs jno mov dec cmc mov (bad) aad dec cmc jmp sbb xor test pusha rcll mov mov xor stos fstpt push push jbe orl scas mov adc push (bad) js std xchg sbb jg jbe or (bad) stc ljmp inc mov cmp sti mov mov divb loop or and fsubl gs mov and ds pop xchg (bad) jae jnp sub cmpsb out rol fs mov in (bad) icebp mov mov xchg xchg xchg insl das out daa ret inc xor fnstsw push sub and push repnz sub aam inc add stos je sub rol lret dec mov in ror lret inc cmp xor xchg jle dec inc cmpsb jle xor adc jno xchg fcmovne mov xchg xor mov push dec jns hlt imul push add mov mov ljmp repz sbb push test adc jmp pop inc iret pop outsb fcoms enter dec sbb or mov push cwtl loop and cmc imul mov dec stc or push mov inc jl jne jbe sbb int pop add pop (bad) fidiv loope std lea cmp inc aaa outsl (bad) pushf outsb lahf jno mov cmc sbb ja lret movsl and in lods mov inc cmp test mov out adc jge into add cmp sub in jmp enter adc cli jg pop (bad) lret xchg cmpsb pop test inc insl in aam add sub stos pop adc cmp fstl pop xchg pushf sub sub (bad) mov xchg outsl xchg sbb push imul lret lods push lods bound in sbb xor je stc cld js cmp mov pop jae cmp xchg push aam pop nop jne xor mov and pop and testb xor xchg stc test insl push enter out aad fsubrp out in (bad) scas pop xchg popa lock aam jg pop jp sub mov mov jg pop pushf les shll mov cli adc pushf push outsb or (bad) into mov pop dec je mov call xchg out aas lock js outsb mov inc das and (bad) fstpl sarb pop jp push sbb cmp cmp movsl sub inc add dec stc sti add js cmp ffreep (bad) xchg cmp adc pusha leave dec push pop addr16 aad mov pop lock and aam mov imul out xchg fisttp cmp xchg xchg aas push and fs push cmp (bad) outsb nop sahf xchg and pop mov jp fldt push xor sub jge xchg js push cltd shll cltd sub mov inc push push rol rorb push scas push lods mov insl ret dec in mov clc add mov xchg fildl push cmpsl jecxz (bad) jg add pop inc xchg pop jae or movsb push jne test jle dec sbb xor xchg sub mov mov iret adc fnstcw mov pop and in subl or push addb inc test xchg leave fiadd dec int pop (bad) int3 lods das test mov insl push dec adc or add shr adc cs imul mov loopne mov jg lret cmp into popa xlat lret and xchg inc mov push (bad) ss movsb push sbb push (bad) ficomp add clc mov inc dec xlat jmp or pop out rorb aam xchg jmp out int pop inc cltd dec mov ret push xor pushf lock sub mov or adc gs cmp jmp (bad) or rcll or cmpsl movsl xorl push jle fistpll in fsubl sahf in xchg scas mov nop ds daa lahf ja xchg popa negl adc out sub add ja int adcb fcomps pusha (bad) push jo out test jae jmp and mov popa xchg adc sub mov in ror and sub mov ljmp loopne ljmp mov js out js fidiv pop popf in jb dec push dec sub inc out sbb lods push cli sahf (bad) jb insb push neg push xor test fidiv into mov out jp dec ja iret dec gs jmp xchg pop or xchg andl test xchg pop fimul xchg push repnz (bad) push stc popf jne test cmc xor bound adc cmp aaa scas rcll add jmp out sbb shrl dec pop push rcl inc arpl out sub std mov (bad) gs mov ja pop insb push push enter roll jae fwait jle pop cmp push add jae mov inc push inc imul das pop shll xor dec cmpsb cmp ljmp pop jo jns popl iret out adcl pop rclb or cmp adc xchg xor jb mov xor fs jae int xchg pushf mov (bad) movsb je push jle insl les mov movsb adcl lret xchg loope repnz xor dec jg or data16 lds mov ret xchg jp stc mov mov insb mov pop mov adc add or pop dec push mov lods mov inc movsl and enter inc mov fldenv cmpsl les repnz stos sbb lds jecxz (bad) and cmpsb xchg sbb xchg mov imul ljmp xchg or xor cmp (bad) push stc scas sti ljmp dec scas mov xor cmp mov cld push arpl lea xchg mov cmp dec push mov add jecxz mov dec (bad) push mov mov jecxz xchg add jnp or adc movsl out call add mov je xor push (bad) push inc fabs cltd add xor nop mov cs (bad) mov fdivl call jno push aaa aaa (bad) jmp movsl push rorb dec sarl push icebp scas sub dec xor mov mov leave inc or or cmp out sarl outsb jge test adc xchg cld insl outsb mov imul mov (bad) cmpsl daa repz push cmp jo push test inc cs pop and mul cmp sbb inc dec ss pop pop pop xor stos inc icebp (bad) in insb pushf push pop pusha nop in lret sub cld (bad) mov add or mov dec faddl rcrl mov cmp sub pop mov inc (bad) sbb dec insl mov gs mov ret and xor cmp (bad) in pop or and and adc daa mov mov pop inc pop inc mov sub sbb sbb dec cmc aaa jns stos in pop cmp dec es js rorw xchg in cmp sbb ret nop add out add mov lods cmp in loope and jns icebp cld xlat iret aam imul cmp jno add inc scas jl ljmp add mov xor pop lret std rorl sub aaa sti adc mov fsubr pop cmp jmp and mov push in (bad) mov sbb and jl test stos cltd jmp push test or and loopne cld daa pop in pop xor mov (bad) fcomps jg stos cmp das (bad) loope (bad) lcall repz jo mov mov jl push sub out lret and lcall insb sbb repz (bad) jecxz cmpsl iret xchg imul test icebp mov push push aaa pop sub sbb nop into jno lcall mov inc in into outsb lea int push imul sbb lds cmpsl test fild sbb push cmp inc adc push xchg popa rcrb ret sub xchg cmp xchg mov cmp dec int3 sub mov mov scas mov xchg jge push loopne imul push adc jo push iret das dec setge or mov jp cmp pop cwtl cmp sub popa (bad) push aaa loope les leave add inc dec and fsubrs push (bad) xchg cltd sti outsl rcrl jp mov xchg lret (bad) hlt fimul jns jae pop jmp sbb ds mov dec dec aam and add xor pop loopne pop jo cltd pop inc push lret loop cmpsb les inc mov fldl push mov insb mov fnstsw lcall xchg push ds xchg cmp adc push mov adc sbb dec movsb fisub in cmp jl xchg push jne dec xchg sbb loop clc lss fimull lcall sub (bad) int3 inc jno mov lea push hlt xchg rcl mov mov push fcoms xor sub add dec cmpsb dec cmpsl js das jle out mov mov dec add ljmp lock out jecxz push (bad) mov (bad) or mov xchg dec pop cs rep mov mov xchg sbb dec push into pop sbbl jl std (bad) and dec mov xor push arpl rcr pop jle adc les (bad) sbb mov and or push test xchg adc lds rclb mov (bad) data16 popf jle loopne scas fldl jecxz mov xchg (bad) lock fldt dec sbb mov rcrl stc pop sub push pop ds push jg mov nop xchg fldcw out out rcll sub gs xlat je dec adc sbb cmp out jns int3 pop pop lret push arpl xchg xor pop and inc pop iret sub incl flds xorb rcrb ficompl add cld imull mov jge stc jp jmp scas lcall mov hlt loope sbb mov sub jmp sarl test movsl (bad) cmc jp hlt cmp or xor push movsb (bad) jb add (bad) dec jle adc mov lds or adc js std push lcall (bad) (bad) push int (bad) mov jnp mov mov xor (bad) (bad) pop test jmp sub cli movaps dec mov mov pop ds es mov mov int fs dec scas es or push pop pop push cmpsb adc add add loope movl loope (bad) and pop mov std loopne or cld jle xor push ret jl hlt (bad) (bad) insb dec mov lds xor jg ficomp js popf cmp and pop xchg outsb hlt incl mov into dec sub cmp jns aad inc sbb aaa pop fnstsw sub mov imul and or (bad) push (bad) ficompl out push mov cmp sub (bad) push adc xor (bad) dec adc lea dec jl mov dec mov (bad) or and jge sbb outsl mov cmp (bad) xor pop or rcrb sub jb sarl xor sbb push mov int3 mov xchg xor lds adcb cmpb add clc and push push jmp out add pop arpl or dec mov push hlt push aam jae sti xchg (bad) or adc pop and dec (bad) add aas (bad) adc add inc jbe sub mov sub and hlt push mov push out dec jns repz iret movsb sbb or fcompl and jnp mov mov fldt in hlt pop push adc sti mov push movsl jnp sbb mov ret repz mov ja loopne adc xchg inc mov repnz inc jne inc dec mov test xchg lods (bad) cld ja scas jmp adc inc dec aad mov xchg xor leave cmpb push push mov push cwtl jae aad loop nop (bad) push pop mov pop sbb je repz inc shr pop cmp (bad) xor fdivr mov push cmpsb fdivs cwtl and iret andl cmp xor bt cmpl shrl sub lahf pop jns rcrb leave in adc into push das stc mov pop test jne mov dec insb fstl jp jnp mov jmp cmp cs xchg mov in cmp or and and mov jmp xor icebp inc in aam mov pop cmp (bad) xor fs jae jnp das cld dec jg in jae inc lds loopne mov sarl mov pop dec fstps cmp divl xchg jbe mov mov push add mov pop leave push cltd shlb fs sub int cwtl (bad) dec les mov popa dec or cmp cmp je out inc sbb loope imul mov (bad) cld mov mov lret ror jge js push xor push rcll inc (bad) arpl mov test loope cmpw idivl push daa xor orb sbb aas jmp sub cs mov sbb fwait sub mov cmp (bad) imul jmp lret inc lods bnd inc sbb add adc aad mov cmp aas ljmp mov outsl mov sub loop mov push push sarb (bad) les jmp dec push sbb xlat scas cmp xor cs in mov sbb mov pop cmc scas (bad) mov out cmpsl jae scas or push div fnop inc div jg cmp xor lods insl mov or inc fiaddl xchg sbb outsl sarb cmp mov xor lahf sbb or fwait pushf (bad) andb out or (bad) xchg mov mov push mov cmp cmc aam test lret sbb push xor mov xor cmp xchg cmpsb movsb mov stc xchg (bad) adc icebp sbb mov loopne outsl mov scas lods int loopne in cmpsl scas loope jmp dec cmpsb jle les sbb dec mov lea inc fistpll mov enter mov je jle sbb adc add mov imul pop mov sahf (bad) or cmp push fcoms addl test in (bad) icebp jbe in mov xchg sbb mov sbb xchg and sub mov cltd pop push outsb or adc jne loop mov cmp cmp adc cs adc mov mov fs ljmp mov push imul stc mov (bad) aaa dec pop mov jecxz push jmp int aam notl roll decl add mov xchg call jge jnp cli hlt lahf mov data16 testb jbe ffree fcomps sub rcrl jge ja mov not jae or cld sub cmpsb std call sub add hlt lods dec cmp (bad) cwtl mov pop cmp cmp fistpll pusha dec dec mov fstps orb push outsb and loope sahf jecxz subb or mov push out pusha push loope mov stos sub dec js jl sbb popf repnz dec pop imul hlt ffree pop inc fisttp or insb or xor (bad) lock pop add lea imul xor in popf movsb enter fmull and pop sub adc pusha dec outsb movsb test sbb aad loop,pn xor jge adc stos movsl lock inc mov dec lea mov sub push push lahf js jbe jbe mov rcr mov repnz out cmc arpl mov and mov xchg (bad) clc cmp fdivl fcomi lret cltd mov hlt (bad) jl jns sbb outsl loop movsl push rorl dec fisttpl or out test leave mov and jp lret sahf bound fist pop out sub pop xchg inc popf stos add (bad) jnp repnz jne jae and pop in pop push add les fstps push inc jmp dec mov adc push rcl sub jns xor jecxz xchg dec rcl push lcall lock popf jl cmp (bad) fcoms xchg dec mov in ficoml dec xor add arpl sbb add gs adc sbb pop push jno sbb pop stos push or push aas pushf jmp or cmp mov inc insb dec aaa pop mov out sbbl xchg jl or pop mov mov xchg cli push fdivrs sub adc leave das mov xchg mov hlt mov imul mov (bad) repnz fstpt cmp lcall sbb lret dec dec or imul sti loop sti add test scas int (bad) xchg and in inc nop push add icebp int3 ret pop xchg test inc sarl cmpsl ret scas aam fs cmp idivb inc mov lea lret add in out test icebp jmp adc fnsave (bad) lahf repnz addr16 sarl aam or mov mov sti or in faddl (bad) shll sbb cltd lret (bad) js in sub rcll xchg fldcw mov aad daa ds cld sarl jg (bad) mov mov add and loop cli outsl inc push addr16 test repz (bad) cmpsl fdivs pop dec dec mov les (bad) je daa xor movsb push ds mov std imul (bad) int push cmpsl jge pop ret mov fist lret mov ljmp test scas adc mov cmpsl cmp lods lretw xor shrb xor xchg dec jge es or mov sahf into les xchg lds aad out outsb adc push in pop ret pop out addb fstl sbb inc push xlat dec xor imull sub cmp push les cmp jo xor pop movsb xchg sbb jno lahf icebp mov loop cs adc xchg adc ljmp dec push xchg nop je fcomps (bad) std pop xchg sub sarb repz imulb jmp xchg rol mov clc mov fcomp mov gs pop adc jae xor fbld dec adc fcomps mov dec cmc xchg or pop mov fdivl inc mov mov hlt outsb adc cltd (bad) dec push and jae mov int push xchg andnps clc jmp in aaa xor addb lock (bad) call fidivl scas adc aaa rcrl adc xor xchg pop jecxz pop movsl jb and jg add repz out and and inc ljmp xor cltd daa out pop mov mov lret cmpsl arpl lods xchg lret leave jns cmp fs or adc sub mov int3 mov lcall xchg sbb pop cli call xor lret and pop loop mov pop scas loope shlb sub and push xchg idivb mov inc sbb lea inc data16 mov and pop cwtl notb aas push (bad) mov out mov mov and mov and mov lret jecxz dec cmp cmp add jp mov xlat mov sbb sub lret push pop (bad) mov dec (bad) leave sub (bad) lods imul mov (bad) jo dec sub movsb mov push push nop iret movsb insl push daa test xor pop jbe cltd adc cld push shr out pop xor adc (bad) out test push nop sbb push adc jecxz jae inc mov inc sbb push outsb js push sahf jle aad enter jge leave lock insl jle jg out push xchg or or xor mov idivb dec xchg pop mov mov mov sti jo jae les in aam rclb popf inc or xor mov push rcrb jb xor and test mov xor mov test mov in jnp in cwtl orb cmp std xchg cmp cmpsb rol inc adc push popf xchg je inc xor in pop push mov daa into and xor lret mov (bad) mov lea fs int3 lods adc jno adc add mov xchg ss mov out into nop iret lds push (bad) std adc mov (bad) lock out lcall cmp in icebp je or add mov xchg ja sub dec sbb xlat pop bound xchg arpl int3 insl sbb loop lea (bad) aaa (bad) adc insl cmp mov xor dec popf fcmovnb mov push jbe daa push xor mov insb mov sub loopne push (bad) push add or xchg test jbe mov and dec (bad) repz scas or inc (bad) (bad) sub fdivrp aas dec push hlt test add add inc cmc mov sub loope (bad) push je push xchg mov repz mov dec xchg dec lcall mov (bad) in sub push sti pusha dec sbb in jg adc or fimul jnp addl inc cmc adc mov lret or mov or mov addl cmp inc je movsb add push out add stc aaa sub xchg mov pop lcall inc adc mov and test jbe imul dec out adc sbb test test and jecxz sbb sahf push aam jno pop jno adc cmp int3 jmp sbb adc int3 in jecxz test negb test sub xor fs insb in lock (bad) cmpsl (bad) out cmp in repnz adc cltd lret push lcall movb mov out jge and sarl xchg pusha outsl jnp jno ja pop mov push ret js mov jl bound push in maxps cld xchg loope push or push cmp inc cmp loopne cmp dec sub pop icebp gs in cmp jecxz icebp jns cmp push in mov xchg pop lret mov (bad) inc mov sub gs stc movsl fisttp pop adc sbb fcomps iret fimull lret ja das stos outsl (bad) xchg fnstcw push fiadd scas fsubr into sub roll and jae roll daa mov pushf pop cld cmc cmpsl pop shlb gs add popf inc cmpl and loope imul aas pushl shrl cmp shrl ret or jne bound jge popf pop arpl lret lret ss cmp push mov adc xor xchg ljmp push sub jb test fdivrs push jg adc out nop sbb mov mov mov add pop and mov adc test movsb xchg aas or fisttpl jecxz lods cmp cmp lret adc testb jns adc push mov fsts jns pop les in ret inc jne subl adc xor fmuls mov mov lods in sahf in mov pop push adc leave mov movsb jecxz cli (bad) mov mov loopne and or mov test lea andb mov add cmc add inc fwait mov or stos add pusha cmp mov inc sti jnp xor and push lcall xor movl fisttp xchg mov aam shrl cmc rcrl mov je sub fdivs pop movsb pop flds xchg into jmp inc sbb or int3 into mov cmp pushf pushf fcmovnbe mov in js dec add add divl pop rcll int3 mov les loop dec push cmpsb cli push pop test jns outsl pusha lret add mov outsb aad jb xor push cwtl add push or and out iret popa fstp and cld adc pop and push or (bad) xchg hlt jecxz mov ret fadd dec outsb inc jecxz js nop sbb into fidivr shr hlt lods mov pop inc push xchg cmp cmc add dec sbb rcll in mov pop or or insb aaa test addr16 sub and jecxz dec push int3 (bad) ficomp jge push push mov outsl sbb fisub rclb push (bad) scas shrl imul dec or les je dec std xchg iret sahf pop fadd ficomp and xor xor push sub jnp mov jno mov rcll push jb adc mov pop orl lods inc ss cmp ljmp fnstenv daa (bad) dec pop jge jns fbld insl fnstenv dec fsubrl lock adc (bad) mov or add and pop jg xchg daa sub ljmp push jge sub cli rcll (bad) dec or lea cmp jnp or test lods out pop ss jg mov sub cmpsl sub xor adc leave mov push push test leave inc and aaa and pushf out cmp (bad) in and bound out sti jl jg (bad) mov sbb sbb mov (bad) int3 out mov xor jle mov inc push loope fistpl (bad) hlt fdivs lret enter inc adc rcll rcrl or (bad) xchg cmp and idivb inc minps (bad) dec cltd pusha mov sub (bad) je adc cmp rorb aad add mov outsl dec iret inc popl push mov lods jg mov adc (bad) imul icebp in mov (bad) into sub and insb fcompl sar (bad) xor mov into xchg pushf enter or sub data16 jb scas mov cmp jmp xchg es mov scas mov xchg or inc loope cli xchg push lods sub xchg (bad) cmp xlat dec enter test mov or add cmpsl popa fiaddl dec fwait cwtl dec movsl xchg mov add sbb ret (bad) sub int3 ret jbe mov enter test push test jae fmuls mov test xor mov adc aad dec mov pop enter int3 push add ret fsubr hlt and lock xchg in enter jge stc out hlt push inc icebp fimull (bad) out jns inc pop cmp push and cmp sbb loopne add fdivr scas pop cli popf mov pop (bad) xor gs data16 dec shrl push movsl mov rorb cs inc xchg and scas out and inc mov cld adcb jno lods hlt xchg fs out in xchg adc lahf push mov mov js push dec cld aad out loopne or loop dec ljmp cwtl xchg (bad) mov sub xchg gs add es adc (bad) jae loope into (bad) fadds popa out faddl push adc push pop push xchg mov out xchg push lds insl stc mov rcr cmp mov aad flds xor pop dec scas imul jnp scas mov xchg push xchg pushf leave xchg mov out (bad) xor int3 divb jbe adc fwait or mov (bad) dec xor cld sbb cmp xor add pop xor ljmp es and mov mov pop or loop jbe add push clc add cltd jnp loopne cmp xchg mov (bad) lret stos xchg lods fs xor (bad) push adc sahf stos mov jbe adcl sbb pushf push jnp stc push sarl clc dec add mov ret and pop or loop enter cltd xlat lods nop mov or (bad) inc cmp sbb mov (bad) dec outsl lods sbb sub or sbb xlat (bad) fidivrl inc cs daa fs repnz dec push outsl push jl lahf push ficompl pusha fild jge sub addr16 rorl mov pop sbb test mov sbb xor jo add mov shrb ds jmp mov ret mov (bad) mov loop or xchg or and or outsl or add or mov cmp fild jp cld pop cmp sti (bad) cli fucomip and or cmovg out cwtl jg out pop cmp mov push sub daa mov int3 xchg jno xlat aad out fcoml inc add cltd cmpl dec test cmpsl (bad) icebp mov shl jbe (bad) mov scas insb in inc cmp repnz pop add jle fwait lret stos xchg fsubp ja sub push sub add push adc fstps xor push and cmp adc xchg lret ss adc outsb dec inc lret or inc lock ret adc sahf loop (bad) cmp xchg pop xchg inc cmp xor mov daa or push sub sub adc push movsl mov cmp inc repnz push int xchg test cmp faddl stos dec (bad) pop sub cltd (bad) cli add (bad) leave shl cli leave inc scas popf in dec clc push xor out pushf mov adc pop sbb jne dec int3 mov out mov movsb sub inc out cmp inc xchg sub ljmp in enter js sub movsb dec inc xchg cmp push stos lods mov push push aad ds xchg or or imull pop das mov jl jmp xor mov fucomip jb mov cli sub xchg inc push inc es das cmp insl mov hlt mov (bad) aad sbb in clc test (bad) out cmc bound fnsave enter orl mov mov mov loope mov or and into test movlps or aam and sub push pushl pop pop sbb dec xchg test (bad) loop xchg dec mov orl xchg ja jno in scas mov repnz dec aad or popf xor and mov mov jbe imul jns mul fs jmp sarl and push push pop aad jge imul cs lds imul or imul adc xchg dec scas jno mov sub xor dec inc aaa (bad) fistp and cmpsb mov jecxz jge pop and fwait repnz call xchg in inc fisttp sbb or adcb mov das daa aaa or loope mov xchg sbb ljmp mov (bad) cwtl sbb lods scas xchg xor stc jp adcl xchg ret mov xchg (bad) inc xchg jecxz pop in inc xor push pop out jle fnstcw mov cmc bound sarb lret sub loop call icebp push or mov cmpsl (bad) lds dec mov fbld and add mov decb movsl in cld movsl das (bad) xchg jecxz xchg pushf xchg xor jbe push fwait inc imull movsl scas cmp dec push out idivb xchg adc inc xchg aaa lods mov in arpl arpl jg pop lcall mov (bad) sub add es (bad) out jb cmpsb jb cmp add add mov adc xchg pop rcr into mov inc lods jbe std jg xor ret inc in daa mov enter cld aam jp pop loopne xchg jne push insl fs sub adc test scas pop std jbe fisttpl in imul (bad) mov in mov sbb scas push jns fdivrs (bad) xlat push cmp cwtl adc jae inc int3 ret gs pop sbb xor popa dec adc mov mulb cmpsb jb ret adc push add cmp push xor or out (bad) mov cmp cmp or inc xchg add je subb subl add mov cmp (bad) addr16 cmp (bad) jno scas cli in test mov push gs cwtl mov dec pop sbb mull push (bad) sbb xlat xchg test lcall jecxz fmull jl mov inc (bad) clc mov cmp cmp or xchg mov dec sahf and test mov xchg lock pause mov mov leave aaa pop mov shll push push std add dec lds popa pop ret ja scas sub add push jl mov fcompl rorl nop push (bad) pushf mov cltd fwait int ja mov in push adc dec or ss lods push mov push and cs lds rcr pop (bad) mov insl jmp fstps lcall cs push mov mov fsubl outsl out imul sub andl pop (bad) mov out sub pop sbb and lea lock dec sbb cmp loop or push cmp fcomps mov iret dec loopne fwait pop (bad) std in in xchg inc mov in adc cmp jle mov cmp (bad) or mov int3 add cmp test mov or dec push mov ljmp xchg cwtl jle mov insl and out mov or cmp mov in mov cmp sbb xchg clc inc (bad) mov (bad) mov fldl sbb mov jmp inc mov jge jno mov mov ret les add (bad) dec jns jns mov adc lds sub dec and jge sbb push das lock inc adc pop pop clc jg (bad) in add cwtl movsb adc jne inc add and mov mov int adc cwtl (bad) mov fsubrl jmp lret imul pop jne dec aas sbb mov popf sub cmp adc (bad) cs fstp mov (bad) ds jne or sarb clc mov mov aad sahf or dec add ljmp inc add inc mov xor das cltd movups xor mov jp add repnz jecxz xor (bad) push xchg add cmpb cmpb nop imul adcl xchg xlat (bad) std mov mov push popf and les mov outsl lea jge pop psadbw outsl fisubrl inc jg inc sbb scas fdivl ja xchg clc jle,pn cmp jmp ret (bad) (bad) xlat jb xor hlt jge daa pop jns xchg ret cmpl movsb add cld mov inc jb dec cmp mov aaa das sbb lret adc xor iret mov add rol add cmpsl mov and in sub add ret aam stos xchg sub xchg enter rclb negb xchg cmp cmpl cmp mov sti push out push adc int add fistpl rcrl jne jle (bad) jg shr (bad) imull mov rclb pop outsl test in push loop test add ret sub adc jecxz fsubrs aam outsl lea or jno pop pop push shrb es add les in mov shlb inc adcl xor adc adc out gs and sbb mov cmp push outsl hlt xor sub mov movsl mov imul lret shrl pop pop mov and xor mov fstpt add add push loopne sbb int3 stc push pop je shrb mov dec scas inc mov jns push (bad) push popf mov lret sarb inc loope pop mov lock pop cmp cmc sub fistp repnz mov mov in or sbb in lods xchg cltd adc jecxz xchg fldl xchg pop int3 jl inc xchg in cmp sub mov sti or add or (bad) pop cld in or mov mov dec jle out xor push sbb mov sbb insl cmpsb push and bndstx test xchg xchg mov int3 into inc xor decl call lock pop fisub out add out cmp lcall sbb popf adc push in outsl cwtl add icebp cmp aaa mov add pop push and xchg movsb nop xchg arpl cmp fsubrp cmp aaa fadd or dec and jle pushf push in or cmp sub jecxz xor xor repnz mov movsl out push push push mov adc jne push jnp dec xor pop sbb mov fildll pop cmp push mov gs addr16 aas pusha pop push subl fcom cmp jo idivl xchg mov int push in and std scas push out or cmc mov ds mov sbb add div ds fwait xorl cmp push jg rcll and arpl xchg into jge repnz dec rclb sub jb dec addl (bad) jmp and nop and rcl (bad) mov mov lock xchg xchg fwait pop pop push test test mov scas adc cmc fcoms pusha dec (bad) mov dec jb ja pop adc mov leave lock and out arpl hlt inc cs xor movsb cwtl add xchg and shll mov lods mov adc sbb inc gs xchg mov lret lret xchg xchg int or sahf jmp inc loop xchg enter adc fildll xor and xor loop enter ret push js icebp jmp dec xlat jp cmc sub nop je fidiv xor pop jno pop rcl nop push iret xor push xor psrlq mov inc add jp arpl (bad) fiaddl dec les sub mov movsb jmp aas jmp arpl push je jbe dec fdivr or push pop xor or fstl cmpsb lahf adc cmpsb scas imul xchg mov cwtl ljmp jle add inc pop les in sti cmp orl scas xor xchg daa imul mov pop outsl dec mov inc and pop xlat dec scas push ret incl xchg adc sti pushf mov clc adc cld inc pusha fld sub enter in or call rcrb cwtl dec insb mov dec js enter pop lret (bad) or xchg lds subl lret call enter mov inc mov push inc mov xlat inc das push sub sub dec sub fadds push fidivrl rolb mov iret addl (bad) push fistpll adc adc jae lods xor idivl mov add test lods test imulb sub push jb and mov and mov icebp jbe xchg xor mov cmp or pop and outsl xor sub cltd mov dec movsb push adc mov sub out cmp add mov xor jae test mov inc rclb adc cwtl (bad) or (bad) jae xchg test jns cs int3 pop cmpsl push mov std dec xor add insb mov mov ss add pusha out add (bad) int pusha sub enter aam mov ja pop inc jg inc mov loopne pop push lcall xchg xchg movsl dec cmc adc or lods pop ljmp jle jge clc mov movsl inc push rolb xchg lcall or jecxz xchg jle in push or mov and jl aam mov sbb mov ret push cmp gs cld ret push inc fldl sarb mov arpl dec mov addr16 int3 mov dec pop lret out xor mov mov cmpsb xor fstl inc bound sub mov fiaddl jno xor aam and mov cld cmp in sub ret popa xor negl jecxz cld add xchg sub add mov pop jae cmpl or or jno pop add stos sub jg pop sbbl hlt sti xlat mov popa (bad) int3 xor repnz xchg mov fist (bad) in (bad) dec movsl sub or push adc daa mov pop xor and mov gs (bad) out or lret das fcoms call cmp pop call std push fsubrs jne repnz and mov jb,pn pop mov cmp push imul xchg xlat mov xchg data16 xor pushf cmp push popa sbb jmp cltd pusha loopne sub insl sahf pcmpeqd jle jg ror aad ljmp and sub ja sub dec je mov imul aas xchg insb cmp cld or addr16 add lret or lret int pop cmc pop push pop cltd push push movl outsb xor dec sub mov cld stc pop (bad) lea jp imul addr16 xchg sbb lahf enter stos sub mov stc inc pushf (bad) into pop aaa or mov jp (bad) xor mov setg pop jbe ret aaa arpl fwait push ds iret push jb pop pop mov xchg loopne cmp arpl test sub jg dec xchg cmp mov dec or mov mov out cmc ficompl or (bad) jae popa jns jmp push imul mov aad movsb sub push scas adc in inc sbb mov mov jnp xchg and jae push into rcr or insb push stos aam gs xchg decb mov adc pop pop test insl sbb in imul mov rcll jo mov pop xor and adc ja jl leave lret inc push es adc data16 lret ret mov sysenter inc add (bad) xor sbb bound or gs sub and jp test cmp aam jae mov or lds push pop aaa push lcall jae push mov xor cmp pop dec test inc adc lds or adc (bad) mov int int push scas mov icebp aas cli popf dec int3 cmp inc push or lret ret repnz sub jge push testl movsl jge sbb push sahf cmp cmc out out mov push dec jno mov ss or insl call lds sbb mov push jl mov cmp aad scas mov jbe pop repz nop out (bad) cmp mov aam scas repz sub push data16 aam or inc fld mov (bad) jno stc add mov mov ret or fidivrl mov bound jmp not push cli (bad) mov fwait mov mov test xor dec fsubl sub xor cmpsl clc cmpsb (bad) sahf jns int dec daa push or mov sbb cli sahf sub mov int mov (bad) les and mov cmpsl jo push inc fisttpll leave adcb cmp out add xchg (bad) cmp lods sbb xor mov pop fcmove popa insl push lods fadds adc ds enter adc popf dec pop pushf cmp popa cmp push sarl jecxz add rorb dec jns inc cmp sbb push jmp repz lcall stos pop daa mov hlt xor pop pop mov adc std sub in xchg add push add mov lret repz or add arpl rorl (bad) jmp push sub outsb mov xchg dec rcrb call xlat xchg pop xlat add aad out xor mov mov ret sbb add pop jno fisub lock inc lcall xor movsl inc push imul out mov sbb jecxz mov cmp adcl jl into cli xlat and movsl insl jle cmp sbb jle add decl out or frstor les out aas fsubrs mov sub jle pop pop pushf or lods scas jle lret je cltd fdivrs sbb adc adc loope push sti ficom xchg pushf jnp xchg bound loopne stc repnz inc cmpsl xchg aam sbb mov pop mov ret (bad) mov shll nop insb aad lret aam (bad) mov test data16 scas sbb adc inc inc mov add in or adcb or inc mov cs sbb mov in add in adc call pop or mov adc fildl mov idivb mov push gs imul jmp push xor jp xor test cwtl out mov (bad) and (bad) mov mov jmp test xchg lds mov add inc adc jns negl inc sub fadds int je lock int or dec sub xor mov pop cmp inc mov adc stos mov jg js xorb out dec pop xor mov xor inc movsb pop or mov mov ss cltd js loop sub dec cmp xor (bad) incl push jns mov mov cmp jg mov fbld mov mov pop sahf pushf jb pop dec popf mov gs loopne xor clc cs mov pop and xchg add pop arpl repnz adc mov out lea pop iret out (bad) data16 int stc in rcll adc ror popf imulb adc dec sub sub gs ss outsl out add lock inc shr xor inc mov dec lea sbbb cli int3 shlb cmpl cli mov xchg jl loope ret fcoml adc js adc lods sbb or xchg add int3 jcxz cld std cmpsb push rcrl aad add xlat sbb push fcom push push or in xchg popf sahf and lds scas mov leave lods mov dec fwait leave fimul je dec pop push sbb push loope cmp stc and jmp lret jg sub cwtl aam mov bound sub or loop cli ficompl lods stos (bad) jle jmp das push jl sub mov pop cs addr16 lea push sbb loope mov sub ret jge les pop jbe (bad) xchg loop xchg jmp out cmp mov push popf pop xchg (bad) outsl adc hlt bound xchg js xor out (bad) repnz xorl or cmp fs jae or push jbe icebp aam cmc lods sub mov push xchg dec icebp jle add out cmp inc out and adc inc push faddl iret cli jg dec daa fiaddl imul mov xor mov subl cmp lret or push out xor jbe leave or lahf clc mov or cmp loop in pop jle test loopne inc andl pop sbb fildl ret cli rclb add fisttpl pop test rclb mov pop jge rol js inc pop or push mov push repz iret or dec xor out jns and mov jne mov iret sarl iret into rorl mov xchg inc rorl push cwtl cltd jbe fcomi sub bnd in pop pop mov jne popa pop loopne jne xor (bad) (bad) cmp inc fs jo sub cmp int3 (bad) push adc xchg pusha cld cmpsl dec call mov mov xor sbb dec xchg (bad) pop mov negb mov daa mov movsb dec lcall xor (bad) popf push jle popf (bad) imul decb repnz pop mov xor push movsb mov mov cmp push stos jg shrb test (bad) test pop into cmp or mov addb dec inc cs mov jnp bndldx mov movsb fcoms je js push iret cmp leave bound repz xor xchg mov out xchg mov test fcmovu pop aad dec or int3 lret stc inc loop aad mov lods stos push mov dec xchg xchg (bad) in icebp into sbb das imulb inc sub xchg imul in jl test jae sub aaa rorl sbb das mov push popf in and mov push sub call aaa aaa lret push dec xchg add aas cmp outsl xor int3 sub sub movsb scas pop std mov lock xchg cwtl mov scas pop iret popa xor adc lods shlb js xlat jb push pop movsl sbb or mov (bad) cmp daa xlat sbb das into xchg iret add push or ljmp jg push mov out into push je (bad) mov pop jno mov repnz lret sub loopne sub popf sti lods ret insl cmp loop mov mul lcall pop cmpl mov cs into test dec repz sub lahf sub mov jle rcll cli inc (bad) lahf and sbb pop mov ret mov (bad) clc mov repz cltd out sbb mov lock loop xor sahf ds js push or std push push ja mov fldcw xor mov test out mov aad sahf xchg outsl xchg jo das int outsl popf adc pop ss in out xchg jns mov lods inc xchg outsb fldt notl insl mov cmp pop mov pop cmp adc push mov popa and lea lods enter icebp popf inc lcall push rcrb jns mov dec shrb inc cld in dec and dec inc (bad) fucomi xchg or das daa or sbb add jge jne fcomp xor lock push dec (bad) sbb pop or xor test cmp outsb (bad) pushl adc daa mov xchg add lods arpl imul push movsb push jns xchg jl andl ret dec sbb inc mov shl shrb push cmpsl inc mov lret cld in or arpl pop test (bad) dec push (bad) mov mov dec (bad) push int pop (bad) out outsl pop sbb mov ds rclb std cli loopne imul gs mov adc pop fwait out inc cmp insl je adc mov xor mov mov fsts sbb es mov inc int3 dec sub jo and cli add push ret jecxz mov (bad) jbe daa fiadd cmp pusha xor enter out (bad) mov cld bound fucomi aas jge stos shrl cmpsb (bad) nop into adc fwait mov lret (bad) sbb mov mov cmp lds adc mov mov dec and es dec (bad) neg mov xor fist clc lods fcomp xchg test sbbb pushf pop cmp outsb das adc (bad) dec fistpl jb sbbl lods mov adc jb push imul cmp scas adc sbb cmp icebp mov mov xor pinsrw mov xor jb dec adc xchg adc scas mov or rcl mov pop xor (bad) lcall sbb or leave pop fwait in pop jl mov inc (bad) mov sub mov xchg or into popa jo jg push cmp movsb mov adc dec fwait ret add push (bad) ficomp jecxz outsb dec xor push daa inc iret repnz inc stos jne lret sti popf mov das adc out or push xchg xchg jae cmc imulb mov xchg pop pushf stos dec mov push ja xchg das outsl mov (bad) fstps imul adc lods popf xchg out mov sbb loop cli sbb fist in and in mov jae outsl scas push cmp push and stos inc outsl add and or cmpsl push loop icebp js call mov lds xchg xchg (bad) mov insl std decb outsl adc fistpl jo lds jae add popf xchg fwait or cmp in pop (bad) cli sbb fbstp loopne cmpsb mov pop pop adc push mov rcll mov sub mov mov push or sub jbe and push bound outsl push dec int3 push test loop lods fbld sbb loop adc (bad) mov iret dec stc sahf xchg imul and and jb sbb dec sbb fstps je adc or and out mov xchg (bad) xchg adc movsb cwtl arpl lcall xor lea and mov jbe ja stos mov out stos in les call xchg imul add sub xchg jne ljmp clc jb jmp lahf repz cmp scas jecxz jns or mov and xor pusha cmpb loopne arpl inc mov dec push jbe stos xlat in lcall insb sub xchg cmp std add nop out lock jb rcrl pop fs outsb mull push pop cmp sub dec dec fwait shll das sbbl ds push bound ret fildl popa mov mov push ljmp subl roll lret jns,pt (bad) jo push mov sub gs push subl std iret sahf outsl dec sahf inc dec lret xlat mov imull jbe ss es nop push dec and lds call loop in (bad) and cltd lods (bad) pop in jg rcrb jmp mov adc jns sub xchg sbb fwait pop pusha mov pop xor int fwait mov sbb call jo sti mov mov in pop cmc and cli das cld inc loope sub lret push test popf ret lea (bad) fnstcw insb orl fadds add xor add daa (bad) jle ret mov fs inc aam sbb outsl adc lahf loope pop inc pop movsb cmp popa mov into jnp jns jl icebp scas cltd fs lea lcall xchg sbb jmp movsl adc mov lret loopne dec fs dec in push ret or popf int popf inc ds add imul jle xor push or and mov imul cmp push jae adc lods cld mov inc mov dec sbb sbb pop out push sbb outsl pop das mov mov fdivrl mov xchg mov add fwait hlt negl mov cli fiaddl rorl bound mov inc out repz add pop sbb fcom adc pushf xchg inc popf xor inc jno cmpsb xor sub ret lods push jnp movq (bad) or outsl mov (bad) pop call rcll jns sub mov jmp mov ret loope xor leave cltd popa dec lods out out xchg push fwait aaa mov sub sub mov sahf gs int3 cltd add arpl or cld test sub aaa pop stos adc fwait xchg pop mov xchg lret mov aad pop mov lods sub jp xchg out dec dec and pusha adc mov cs cmp sbb pop sbb cmpsb cmp inc jns mov repz rcl inc jb dec push test adc mov adc and outsb mov jle inc cmpsl aas jbe pop inc jge out sbb or test pop pop shrb pushf out cld jb xor cmp ljmp dec pop testb mov shl and or ret mov push mov mov add and push jmp xchg out popa inc sub xchg test loopne jge xor rcrl lods sub (bad) cli pop or pcmpeqw push push outsl jecxz mov loopne inc test jl fdivl jno mov push jg js push test subl dec inc mov xchg dec pushf jle or xchg push pop popa pop jp in test cwtl pop test push cli cmc fs jne mov ret mov jg (bad) je jnp cmpsl sub jecxz fcoml inc lcall sbb sbb and adc push jne mov cmp ret call sbb lods in xor je and aam inc (bad) popf pop xchg adc pusha sbbb pop mov xchg add and sbb daa rcll mov ljmp arpl les mov inc test (bad) je cmp lret add jbe out leave int3 mov (bad) push mov mov imull add rorl insb popf push (bad) mov rclb push movb in jnp mov cs ret push cmc fcomp xor das fidiv sub andb pop inc (bad) pop xor push sbb lret ljmp (bad) daa add daa pop (bad) addr16 ss fstps mov mov push and (bad) fs negl loope fcmovb sub lock or jbe data16 data16 mov jnp add lods add mov xor inc adc sbb popf add and cli push movb int3 out out out lret fisubr incb enter imul mov outsl fidivr movsb mov lea scas jno push and mov jb inc add inc in push push out mov es push inc push arpl sub (bad) or aaa add sub (bad) call dec stc jae cmp adc sbb adc (bad) fcoms movsb rcll je dec imul std cltd mov add xchg dec xchg js mov ss (bad) lds clc inc inc shll and mov enter mov jnp fdiv mov das ljmp jge adc out pop xorl lcall sbb test jp (bad) mov push jns mov adc fld inc int3 enter decl mov add xchg hlt pop jbe mov add or sub add lods mov sti or sbb jo insl aaa xor and arpl add mov in jg mov int3 mov (bad) xor xor ja cmpsl addr16 outsl adc pop add in fnstcw adc ret jbe sub cs add push fwait xchg xor push pop add pop lock mov push lret insl loopne jne sahf int3 mov (bad) cmp add dec xor fs adc sub nop mov lods outsb sbb out dec add rcrb jne cs stc mov aas or call stos fdivl push shrl push mov mov jne push aad mov mul in inc int dec or outsb dec push outsb inc aad adc arpl mov inc loopne jb and addl sarb (bad) mov jle sbb pop in cmp lds sbb (bad) pop fldt test mov push sbb dec lret les mov push push fist (bad) and push cwtl xor frstor sbb hlt xor (bad) cmp mov push lret ret mov insb in sbb pop jno cmp aaa inc lea aam lret lods insl pop push pop xor fistpll loop cltd pop mov jp mov sub cmc das mov pop dec ds mov js in (bad) out push sbb jno add push std push lret sub ret imul push or popa stos mov faddl lcall mov and mov shr sbb clc pushf pop lahf lahf lahf insb (bad) in test push inc fildl inc imul mov and mov outsb outsl imul mov jnp (bad) jnp aad divl cmp add mov imul ja push call sbb add jns pop (bad) pushf mov rorb (bad) enter dec dec inc dec mov ret adc push xor pop cmpsb mov mov out out jmp sub jae or adc push pusha dec test mov sahf and aam fs adc mov xor daa inc imul dec shr and mov xchg out sbb jae pop in adc dec xor iret call mov cmp fbld pusha mov jmp mov mov or lods loopne stc aad ljmp std out cmp clc jl push ja fwait icebp mov pop mov add mov cmpsl lock dec sarb pop into inc test or shlb push clc (bad) mov inc add inc push inc (bad) out shl (bad) add mov inc cmp xor mov call fsubrl out xchg jbe or popa (bad) int3 int in js mov inc adc xchg scas or (bad) add shlb int leave andl sub ret cmp (bad) and push mov push rcrl and inc (bad) in sbb dec adc imul mov xlat inc push ljmp imul push jns pop cmp push and push cmp jnp sbb ret and in xchg mov add push out lcall pop push sti push rclb mov sahf cwtl shrl jb loop psubd jecxz rorb out popa pop push mov xchg fnsave ficompl mov or lea mov mov push pop jnp adc and or int stos mov aad repnz adc in in int add pop cmpsb xchg push hlt mov mov cltd xchg mov dec (bad) (bad) inc pop and fs dec push out nop (bad) lret and and xchg ds dec cmp mov mov std mov xor mov fsubs mov movsl pop daa imul in nop push into lods cmp jae adc aaa outsb jb push addr16 in pop sub push lret pop jbe addr16 mov and int mov push jecxz mov inc xchg aam sbb jb in or mov cmpsb mov push (bad) xchg out and in popf pusha std push mov data16 xchg loop dec and mov mov fwait bound sub push xchg push in (bad) data16 lods pop leave inc sub in cmp out ds and sub or mov jns bound (bad) dec mov mov imul sub cmp pop xchg ss shld pop lea ret test arpl push mov pop mov mov fcomip movq dec dec lods and (bad) cmp sbb adc mov mov inc movsb jecxz lea jae push faddl xchg fstps outsb push aam jns js inc xchg dec adcl mov inc sbb adc sbb pop xchg jmp adc loope mov in add nop lahf xchg mov mov addr16 inc ficom mov dec add jns insb out adcb mov push pop daa outsl and iret cmc incb mov push fidivr popf pusha fwait repz dec aaa daa popa xor xchg shrb jle adc push cmp nopl shr or out pop sbb jo dec movsb ss (bad) pop xchg outsl cmpsb inc lods cmp pusha mov shl cmpsl xlat mov sub adc mov cmp lahf xor repnz mov push fimull cmp fimull sbb ret bound into fsts arpl jmp sub hlt (bad) int3 sub pop push mov inc insl das fsubrs sbb cmp rcr into mov dec or cli dec push sub rolb and mov iret insb mov xor cmpsl push xchg sub in mov sub jo or (bad) xlat or jae mov inc pop and push lods pop cmpsb or das adcl lea je sub fisubl aas pop sbb cmp mov xor lock jbe dec mul movb xor or dec nop xor decl push hlt mov dec dec mov (bad) cmc add mov aas xchg adc mov rol (bad) mov cmpsl add clc loop fwait imul xchg jp mov push out jbe call loopne adc xchg popf inc (bad) mov lock enter or les mov sub mov and push out notb jo clc std (bad) je dec mov sub in inc sbb and cmc insl movl cltd aad loopne ss (bad) cli scas mov sbb (bad) mov xchg pop push loop ss push jle outsb cmp (bad) inc add xor xor adc subl aad push vdivsd loope roll adc (bad) push jae and sbb jne pop fiadd mov push into std adc lahf (bad) mov loope mov fnsave pusha insl pusha fstl out nop aas jge pop pusha xchg jecxz jmp mov in mov ja and or cmp hlt divb cmp jbe push and aam fimul add xor mov xor cmpb mov xor lcall (bad) out popf or push add mov mov inc sbb xlat bound shr xor icebp in inc aam cwtl mov roll mov jo dec cmp or cli in or and (bad) xor push adc add sti (bad) in lods popa add ret xchg cltd xor scas inc and decb cmp mov ds leave cmp jg adc cmp mov fbld mov test (bad) jle and (bad) pop stos jg inc cli mov xor adc andb fcomps inc pop pop lret outsb adc pop stc mov negb dec vunpckhps lods (bad) ficompl add xchg mov shrl in hlt add dec add ljmp pop mov (bad) flds lods cmp daa pop push mov pop or stos xchg nop lods xor xor inc js jmp adc std sub jns stos push mov das inc jecxz cld test mov and add test popf (bad) cmp mov push cmp jnp mov daa imul into adc xchg shrb mov xor test mov lahf aaa mov sub mov (bad) mov (bad) outsl adc adc xor adc scas daa sarl jg in dec popf sbb inc movsb dec jnp fbstp out int push mov pusha mov lds lods mov test and pop sub divb scas or divl adc fidivr popf pusha jmp (bad) (bad) dec add cmp int3 ja sub mov in xor dec fld jp faddl je push mov dec outsl popf dec xchg xchg dec icebp out add xor fwait cmp jmp pop pushf popa outsl leave push and rclb (bad) rolb push sbb dec pushf add jle inc push (bad) sarb mov xchg sbb xor jecxz aad cld pop cld mov out arpl dec mov mov stc xor sbb test mov inc int loop ljmp lock adc cmp repnz int3 and cmpsb mov lea inc test sub hlt push outsl xor pop sbb dec push jge inc aam cmp or add and jmp jle (bad) push jle inc push dec inc lret ret pop insl sbb loop mov add popf mov sbb jp fimull (bad) out test mov dec xchg outsl scas push lds icebp xorl mov subb out incl mov push dec push push data16 sahf dec lds (bad) repnz jmp adc stos cmp jl sub jecxz popf dec scas push inc lods ljmp jmp je jmp dec push hlt mov test sahf sahf inc in jmp jp,pt dec imul and leave dec and leave cmp pop push rcll inc add adc or (bad) jmp movsl fstpl or push adc inc leave or pop pushl test push cltd fisubl xor addl movsl pop jmp sbb jl sub lcall lcall xor adc jmp lds xchg mov pop fldenv ficoml dec (bad) (bad) lods add lods or jl inc (bad) repz lahf pushf inc js lds xor imul jo pop pop imul inc jne in aad pop xchg in icebp jbe insl sbb loop xor mov orl inc push add inc pop fs push lds cwtl adc adc outsb sbb in sahf push mov stos fild subb sub push add fbld ret push lea sbb mov xor insl jle aam inc sub push xchg repz daa daa add mov cli outsb mov mov iret movsl inc gs fisub (bad) insl gs pop mov pop je xchg or xlat shlb out int3 mov sbbl jno cld das xchg fidivl push lahf dec pusha push icebp clc lds jae adc imul adc (bad) xor lds loope lret lds js pop jle packssdw push pop stc out cmpsl popa shll stc push mov cmp or popa rorl in popa repnz add fimull mov jne sti xchg pusha imul sbb pop cmpsl pop shrd xchg orb pop fcompl (bad) mov arpl jnp sub (bad) js loopne pusha sub popa ficomp test in (bad) mov cmp and call inc push nop dec divl inc hlt push xchg jb mov add out shl (bad) jae fimull lods sbb mov sbb xor inc adc xor aaa cltd addb scas push movsl cmpsl outsb leave leave lods fwait dec and test fildll fsub sahf fwait dec xchg jecxz test lods lock dec (bad) pop sbb data16 or (bad) fmull jle ret stos pop es xor dec pusha pushf iret idivb or jg andb movaps and adc es nop inc push rorb sbb aad gs aas sub jno data16 pop add mov jle ja cs popa xor inc popa cmp fwait cmp jp or popa cmp fs xor jns fwait cmp and cmp jle add dec dec and in sub fcmovb adc inc pusha mov scas cmp arpl ret dec ds inc imul push pop movsl rorl adc inc popl jae dec aaa mov cmp call or mov scas inc daa or idivb test add sahf xor add inc sub push icebp push js test dec mov (bad) fiaddl lret cmp mov pop enter lods out sbb mov aaa jb stos cmpsb push repz add lock jns mov xchg push push stos scas bound imul pop adc int push fcoml adc cmp mov dec pop mov popa scas push or push (bad) mov mov inc pop mov in mov push data16 fdivrl cmp in push jge dec rolb inc rcrb sub ds sti pop repnz mov hlt jmp icebp mov xor aas adc or stos test inc pop sub sarl rcrb and sbb ret adc mov push jne xor mov mov divl mov sbb xor jo inc cmpsb fs cmp mov je test xorw lahf stos in sbb adc lods imul push fstps das das and cmovle cmp or pop inc mov das popa inc pop sub fwait add movsl das dec cmp test sub pop jp cmp inc and sahf or jecxz into adc jmp cmpsb jns jo int3 adc cmc dec mov loopne mov xlat mov pushf mov pop dec jle sub pop sbb push fwait inc adc jae scas pminsw test cmp adc inc mov les jge inc insb jbe fdivl inc pop adc ds mov fs in cmp repz pop add cli inc rorb dec jns inc xchg test in cld lock int xor pop (bad) stc ret int rorb fadds xor dec and out int3 repz stc dec mov es cltd ds push lds adc push mov adc leave mov inc (bad) jb movsl jnp test stos sub shl call xchg loop pop ret pop (bad) out mov cmp daa scas mov cmp or adc xor and mov add jl mov mov das outsb mov adc sahf xchg pop or (bad) pusha lret daa dec push xor adc push pop aad es inc sub jnp cs push jne push rolb (bad) jecxz out inc stos sarl icebp pusha mov xor push mov (bad) mov insb test arpl jmp mov push (bad) fcompl lds xor push push out rcl xor sbb lcall xor ljmp addr16 repnz sbb loope lret test inc jbe das mov pop (bad) gs push or or xchg inc and jno clc sbb pop mov add stos and mov outsl add or sub jns jnp adc cs xor ja cli repnz adc lods lret int3 pusha xchg xor (bad) inc gs lret cmp mov pop inc ljmp int3 in popf push bound mov nop or push out inc or mov test mov sbb jp dec in dec pop (bad) cmp mov bound mov jo lods in repnz gs or cmp sub cmpsb (bad) mov test mov out and push fwait add sahf mov and pushf add inc out pop negb notl outsl jl push insl test movsb sbb fs jo jmp repnz cmp jb daa mov (bad) dec mov sub pop jno mov xchg cld mov pusha aad lcall sub das jo cltd adc sbb add call lahf or cmp pop dec adc fdivs lods mov mov mov or je test lods out sbb cli jmp (bad) xor stc je vpunpcklbw loope stos nop rol lcall pop inc out out fmuls jl lret adcl cmc mov andb sbb inc mov or stos ljmp ds sbb faddl cmc xchg sbb stos dec jle bound mov dec int xchg mov shll jp cld jbe cld cli mov fmuls cmp jo (bad) and ror push add inc (bad) dec in mov and out push mov popa enter ror and fcoms or test cmp insl mov mov push rol mov jmp fistpl sbb pop scas cld mov movsb test incl cs (bad) out repnz adc xchg (bad) sbb test xchg mov sub mov addr16 mov or mov dec test mov cmp gs xor mov xchg sub int3 push or sub test or hlt jns or push xchg out andl add dec or mov nop sub mov pushf movsl les pop sub popa sbb sbbl outsb cld fisubl sub or mov cmp mov jge (bad) cmp sub xor cld sbb fldcw fcmovbe hlt std jecxz inc shll xor cmp jbe shrl js outsl stos cld pop mov sub jae xor pop imul xchg movsb adc push imul das push sahf scas mov mov push addb loopne lea jo xchg fmuls outsb dec loope sbb movsb push mov cmp arpl (bad) cli std pop out fwait int3 stos lods mov test mov stos outsl ret pop (bad) adc dec sub inc in push jl sub mov addr16 jno cmpsl cmpsl out pop sbb sahf pop xchg jae test fcmovne adc jne in and fcoms daa mov add aam popf jp sbb mov aas stc adc add repz xchg cmp jmp bound fs in fwait mov sbb xchg loopne repz cmpsb mov nop or mov loop ret lret push inc adc js mov pop xchg cs scas inc movsb mov gs fsubr mov stos adc pusha inc jmp arpl fucom sahf mov shl cld push jge add (bad) rcrb pushf lods or mov icebp mov movl out xchg pop test pop inc push ljmp (bad) icebp loope daa inc gs adc rolb mov xchg mov cmp dec and bound xchg insb mov fs xor testb lret lret clc aaa out dec cmp jg lcall or cmp or mov int dec mov cli push push jmp sbb mov push inc ljmp mov rcrb sub out (bad) scas insb push out femms add (bad) push arpl push dec mov fnstenv sub aad sbb das cmovbe xchg lea addb testl mov nop (bad) mov and out (bad) pusha ror and rcrb aaa and adc (bad) push xor fcomi in dec xor fistp jne clc cmpsl jmp out (bad) or loopne push (bad) xor adc push test and mov imul mov dec nop jns ja and jmp je pushf mov arpl out test popf ret adc fstl in in mov adc lcall or push mov lods nop ljmp sti outsl push and mov lahf mov fistpll int3 fs clc mov mov or and cld jnp mov loopne movsl jb in (bad) cmp push scas les pop and movsl notl sbb pop jae cmp or out push movsl dec out or xor or push dec fucomi outsl inc pop in lret aaa sbb into fwait inc pop (bad) je push mov imul (bad) in xchg xchg mov push dec subl push popa and xor pop sub add pop sbb cltd popf xchg into pop or jmp ret int hlt add push sbb mov fs std loopne,pn test mov dec pop mov out cmp mov lahf mov mov in es sub mov lret dec or mov test in iret lret jmp add dec subl mov sub (bad) sbb sbb sahf and in cmp lock aad adc or call scas jne sub cmp add (bad) xor or repnz and mov lea icebp sub mov sbb mov int inc pop mov mov cmp lahf jo mov rcll mov xlat push cwtl and fdivrs push mov mov push xor out mov subl mov lret pop lods iret cli xor enter push cmpl cmp out and test xlat jl sbb mov arpl mov xor mov cltd push push stos sub cmpsl pop lock sub push scas xchg sub pop jge dec push les sub dec cmp and xchg imul mov adc jl mov mov adc cmc xchg aad shlb xor and stos inc jl push dec js push (bad) mov mov and orl addl outsb cmp mov push adc dec mov popa jno xchg aaa icebp notl in jmp sub scas sarl or sbb fistpl ret dec insl outsb push mov lcall das mov pop jge cli and mov mov leave nop sbb sahf xchg add fs outsb test fcoms and cmp add sub xchg add ret jp push jp outsl pushf in cmp xor mov pop push out xor cmp dec inc sub mov xchg lock lret mov in jno xchg sub sbb repnz stc fucomi stos or fild repnz and pop sbb mov push xchg les xchg inc and and insl loop xchg int3 imul jle outsl leave mov push ja stos inc jp cli cld mov in mov sti clc or mov lcall stos ret test ret sbb dec cmp aam mov pop daa and pushf mov mov inc xor insb mov jae in xchg movb sub or cmp dec xor or outsl push jl dec loop int3 aas test xchg jno fs movsb stos mov xchg xchg (bad) xchg adc ss pop sub and movsb rolb pop add inc lods ss test fstl daa push movsl repnz test divb mov cmp jge scas lcall dec sti (bad) iret xor sbb or out add jle dec jl dec mov dec push in fidiv push test imul icebp inc add ret lock inc (bad) repnz sub xchg clc dec mov cmp icebp sub mov icebp pop and pop cmp repz jno es adc xchg ds jg pop ljmp cmp (bad) imul iret inc in adc out iret jo sarl lahf popf jmp mov ja cmp mov and xchg jg fmuls (bad) push cmpsb mov arpl inc cmp scas mov (bad) mov sbb mov cwtl cld popf push inc inc scas cmpsb cld in lods lret inc adc scas lahf push lcall xor push sti pusha (bad) push popf and fisubr bt inc inc push sbb or sub push cwtl mov and xchg xchg ficompl jne ja out fisttpl (bad) mov and icebp pushf add jg (bad) push or cmp mov fs loope xor or or jbe imul insb mov xchg lahf xchg (bad) sbb icebp sub (bad) mov fistp adc (bad) out sbb loope or cmp xchg sarl add add fldt or sub or (bad) sbb lds cmp dec nop xchg sub test adc cmpsb out aam imul daa pop cmp (bad) imul xchg sti and sub push mov pusha mov out jge jl inc inc (bad) outsl push iret adc add ljmp sbb sbb mov cmp cmpsb mov lods mov xor test out mov push inc xor mov call fdivl in add ljmp jb (bad) repnz cmp push mov arpl add bound mov mov pop jne aas inc sbb lcall (bad) and iret xchg adc sbbl xchg inc cmp mov mov and mov push test nop jle enter jle inc popa lea hlt mov or or xchg fisttpll stos jae sub insl clc fisttp inc adc dec repnz iret push insb addr16 movsb or xor out push repnz lods mov rorb or xor lock sub mov lea xchg xchg addr16 out sarl repnz push and push xor leave nop sahf int cmp in lret inc and cs inc cmp loopne adc cmp in jg or imul xor pop push lret xor in pusha mov xchg sbb test fcmovnu adc mov popf xchg out mov mov std xchg or dec jmp lret push inc and stos mov xchg pop (bad) fnop insb pop fstps mov dec data16 inc inc sub cmc jo xchg inc (bad) jmp imulb sub fisubl push mov inc out mov int3 cs popf adc stos push cld test push int push sbb or mov and test ds or ds push cwtl dec cmc sbb mov aaa xor (bad) sbb xor push pusha pushf cmp (bad) or dec dec test push add in xchg in fcompl movl lds dec inc and movsl jmp xor mov inc es nop adc inc cs outsl adc cmc add adc stos daa imul cmp adc leave dec push faddl or repz jne test or cmp mov push jmp pop jmp gs nop ret aas pop popf push inc mov loop subb and and xor pushf pushf push fsubr xor sbb inc in sub jp imul lea inc outsb (bad) xor add insb pop or clc adc aam jge mov mov iret cmp mov outsl cwtl ret test inc xor movsl pop pop cmp adc jge iret xor dec add pop call test aaa sbb push ljmp out jmp (bad) inc jp inc lods push pop gs sub (bad) pop xor nop aaa loope inc jae mov dec mov add out enter aad mov add cmpsb ret adc jmp xchg outsb aam xchg push pop loop sub mov or divb sub (bad) enter je ret add das jo (bad) adc cmpsl popa aam scas push aam in lock jno inc jl into sub enter movsl outsl sahf jp ret jmp push addr16 cwtl push int cmp test xchg ds call push out gs imul or inc inc inc inc test negl imul pop jo pop mov movnti inc sete and add rol mov jne into sbb fldl out iret pusha movsl out mov orb push sarl pop ret test mov hlt mov pop ffreep xchg dec cmp cwtl pop jge inc jae fwait xor popf and idivb and xchg popf mov xor fldt jo mov adc mov imul jne lods into jbe sarb clc enter mov mov je mov rclb mul jo repz add cmpsb popa adc mov lds std stos fldl icebp mov adc mov or fwait ljmp or dec mov hlt pop mov pop dec mov int leave movsb lret lods lret fimul xchg cmp loope scas push rcll push push push xor movsb or mov cmp sbb in fnstcw (bad) pop fildll ret ss lret adc inc cwtl loope lock int3 loope leave scas dec push mov fdivrl cs adc sti mov jg test pusha jp fwait repz pop adc cmp push push mov add pop push push hlt add push add lret dec jnp loope (bad) mov icebp test in (bad) (bad) push inc daa pop mov fsub in fs movsl int3 inc mov loope add cmp mov std cmp dec jb gs and es add dec sbb aas punpckhdq jmp adc test divb shr jno pop mov push rolb popf rcr or or outsl aam mov scas xchg adc push cld gs imul xchg call pop int3 (bad) mov outsb (bad) jae mov add fcompl or in in sbbb fcoms mov pusha jmp nop decb and (bad) fsubrl cmp xchg xchg jo call adc add jno sub mov sbb jg push inc pop fiaddl mov jp mov lods arpl dec push shrb stc or bound enter enter fadd mov fmuls fstpt xor enter xchg out ret mov mov addl aad lret into bnd adc (bad) std lahf int aam add jl aad addr16 add cmc adc mov movsl add shrb enter dec jne fsubrs ds push jmp cmc xchg cmp sbb inc xchg add mov jmp push sahf sub jno sub mov sub ss vmovaps and adc mov mov or xor notb sub lea lret inc cmp dec mov fsubr jb and inc testl pop fcompl or jge call lock adc mov sub cmpsb sbb lcall je or (bad) cs out (bad) mov sahf dec sub push test or lods inc push hlt or lahf faddl ja and xchg ss adc std cs pop fwait daa ret int mov sub stos xor push pop push cli ljmp outsb dec cwtl xorl jns es sbbb int psllq pop fmull hlt outsb in fdivr jmp push or jg jg mov insl scas or cmpsl call and repz sub ljmp cmpb mov es xchg call add jae inc hlt mov sahf jnp adc icebp push sbb push pop rclb in mov inc jge adc adc adc les ffree mov call dec jbe push popa mov (bad) int3 push push ljmp (bad) fld adc jo jmp sub dec dec imul or adc pop repz mov mov flds fstpt mov in sbb pushf push pop incb mov imul call push sbb sbb and lods xchg mov cmp inc or outsb pop fwait inc inc push fdivrl mov fs test jno mov sub shlb xor sub jns pop lea dec inc rcll (bad) xor sbb mov push dec cmp popa and cwtl mov dec std in xchg daa dec mov jae gs mov jge out and cmpsl ret mov and lret mov bound add divb fcmovu dec sbb (bad) (bad) stos dec das les je int3 jb lea push je loop icebp (bad) pop imul outsb adc pop jmp sub lahf clc rcll decl jmp loope adc das jg aam rcrb int3 nop sub push (bad) loope lds sub test sbb mov pop ja int xorb sahf push jp or popa sbb mov bound add xchg jb and clc ds shll addr16 mov (bad) mov stc ret into push icebp shr jo pop jns sti fidivrl dec sbb xor nop mov mov test pushf ret movb and xchg mov pop fidiv (bad) (bad) cmpsb dec pop mov scas xchg pop std mov rcrl das imul mov jo je sbb fimull andl jmp cmpsl movsb (bad) jge jl push push fisubrl scas sub insb (bad) fcomp cli fcomp rol std lret add push loopne add xchg xchg mov nop dec test jns mov push lret cld jp sub mov js popf hlt dec adc add or lods sti fild in inc test (bad) push add sub (bad) sti mov out xchg mov cli jmp push call lds movsl aam inc cmp dec ret nop fsubl pop insb imul fmull mov sbb push lods sub andl adc add popa mov and or addl add pushf movsb xchg jmp popa movl push sahf ret sbb mov test ss dec bound or inc add lcall or adc push ret (bad) dec cmpl int jecxz dec dec dec int stos mov mov add xchg repz enter add (bad) scas or push inc in in xor mov pop (bad) stos cmp int3 sub leave ror or pop fadds cmpl icebp (bad) shr test sub test arpl mov jne lcall inc les xchg iret test and sbbl out in outsl cltd lcall and sbb imul enter inc ret jmp fdivs inc mov cmpsb ficom sti js pushf test push ficoml mov mov jecxz jb mov lret mov sbb movsl outsb shl insb out or pop adc out test pop cmp popa jo daa lods push andl add adc aas xchg es pop mov out dec dec mov cltd movsb and popa push int rcrb sub xor (bad) mov je and nop fcoml fwait mov sbb out repnz sbb rolb hlt popa outsb add outsb lret pop dec lea dec push les adc in mov adc popf dec (bad) je add (bad) sbb jb aam sbb cmpsl xchg pop ss fbstp outsb shrl mov out mov mov inc pop or adc lods cmp popf stos push sbb add ja (bad) xchg int3 ror call mov (bad) data16 xor lahf jge lock mov mov lds enter mov and loope xlat mov repnz and test pushf ljmp cmpsb movsl mov push or xlat into dec jno dec mov cli mov cmpsb pop mov out sub popa adc adc into lock into adc (bad) out test ret je push mov test cwtl sahf xchg pop pop mov inc add jmp cmpsl lret dec int3 sbbb and (bad) pop bound (bad) fsub popf xor push stc or jmp (bad) cli cmp cwtl mov lcall iret push inc icebp jp push fadds sbb (bad) pop adc sub out jb xchg in jne (bad) mov ljmp dec push adc pop xchg fsubl mull pop push (bad) jge mov outsl jge xchg int push js fs jnp enter stc mov dec adc or mov fwait jno push pop cmp jge sti icebp sbb push (bad) in adc sub pop cmp test jmp mov cmp inc adcb cmc add push pop ljmp inc divb inc or lods dec sbb insb loope inc lcall loopne ljmp mov int3 add jl lods or cmp cltd (bad) rcrb hlt or or sarl arpl adc movl xchg xchg adcb pop push add insb dec setae xchg jl fs hlt (bad) sub jns or ficom jo push ret insl cmp lods (bad) pop stc mov pop stc mov out dec gs xor fisttpl subl fnstcw sahf rol inc add adc pop cmp sti in push xor jp mov sahf mov mov mov push lret mov sti ljmp mov dec ja fwait and aad push xor cmp jl lods movsl sbb outsb test sub imul cli mov add mov jns popa shll fiadd ret or mov lret inc mov loopne or loop dec hlt gs pop lret push or jo fsubrs loope add js into xchg mov jno mov pop iret std pop iret mov or mov add jmp or mov or mov add nop or add ret dec stc fcomip jecxz,pn call stos adc add int jno out mov adc mov adc adcl repz inc sbb test mov (bad) xchg outsl das sbb inc bound adcb lock pop lods sub sub jno arpl inc and adc rcr fs movsb mov lret int and iret sahf cmp aam lds daa pop (bad) xrelease adc fwait and call frstor jg or daa xchg and adc iret aam cs xor push popf pop add sahf jno (bad) jmp push xor rcl stc inc ret dec lcall test dec mov fcmovnb cmp pop mov test movsl push and sub shrb or enter out add cmp roll fwait stos or ljmp mov sbb pop movsl and dec pop out repz rcll mov push divb cmp into lcall xor outsl jecxz das cmp inc jecxz repz insb call inc mov js repnz rolb add add data16 rolb sub pop outsb (bad) (bad) cmp lock dec mov sbb fildl test inc add push rcrl out nop mov sub test pop leave orb lret add movsb pop mov dec inc or sub lret jl push jecxz mov push mov fildl cmpsb add jmp js shll movsl xchg pop push sbb mov or in rolb inc dec out inc or lret pop fidivrl cmc fwait sbb cmpsb sbb pop ret test (bad) sub fnstsw sahf mov (bad) cmp sub pusha (bad) adc pop addb pop dec jl and jo aam fisttp jns or int or add cmp popf inc int3 jmp pop mov sbb scas fnop cmp aad pop js add xchg inc ret dec mov pop jge mov stos lcall nop inc ror sub xchg jle xor (bad) mov push std (bad) stc dec icebp cmpb ljmp xor std jnp pusha int3 mov mov push adc ss aam rclb mov cld lods enter sti dec xor add jb and adc adc add and popa xlat popa pop add and dec scas leave xor popa aam icebp adc jns add xor and mov loope jmp xor add std sbb adc dec adc mov jecxz xchg pop rcrl pop test repz mov int iret movsb mov or repnz out mov mov aas adc add add scas dec cmc inc ficompl clc data16 lods push lods iret test or dec sti add fisubl cli (bad) mov xchg ret adc xor imul je andb repnz scas loope call das jmp outsl stos dec cmpsb fwait je stos inc imul ret or (bad) mov push ja jg sti (bad) mov sub cmpsl sti sar xchg lret dec test int3 in sti pushf fsubrl test or lret pop pop fimul (bad) movsl pop cmc push mov push cli mov aam enter out outsb insb mov lods or subl inc cmc push mov aad pop jle int int mov insl lods std jbe mov inc and cmpsl dec xchg inc mov mov inc in cli test imulb stc adc scas cmp mov sub cmp push lahf and test les inc outsb sub xor mov mov lahf stos sbb add imul pushf xchg push xchg sbb adc roll ds (bad) cmpsl inc mov jle enter sbb push lods or mov stc adc test iret enter (bad) cs outsb cmp add (bad) insl xor or sbb cmpsb pop (bad) cmc xchg fnstcw sbb lret movsl fldl inc gs inc lods mov fadd ds out dec data16 stos cmp mov rcl (bad) sbb lods adc pop loope je mov inc insl out sbb or rcll lret gs adc test icebp cmpsw adc icebp loop jmp adc pop inc ror gs cmc or fild imul add pop movsl xchg out adc nop in mov fiaddl imul outsb loope mov pop adc lahf mov cmp inc das xchg dec nop jecxz add add inc dec nop inc mov in sub call mov aam lret mov loop in dec (bad) in nop test jle mov sbb push xorl insl or rolb movsb call lock fcomp mov fstpt pop fs sub dec add outsb stos xor cltd mov mov mov adc mov or repz nop in ret enter leave in leave push jnp cmp fsub sbb jb aad insl or (bad) mov adc repz leave repnz leave sbb mov mov scas (bad) cmpsb pushf ljmp nop mov ljmp adc cmp call pop push ja ficoml add out ja ret push adc sahf mov int3 (bad) into rclb sub je,pn xor sbb mov repnz or shrb jp mov or pop xor inc dec jl mov ficom (bad) js loop xchg and lret inc arpl jo scas dec lods sbb pop mov inc les hlt enter (bad) push push in sti sub rcll xor or mov jmp stos lock or or iret leave mov cltd les stos cld push jmp icebp (bad) jmp icebp aam pop jae inc cltd test mov movsb lds imul lods sbb clc mov mov mov sub xchg scas xchg arpl std ret xor cwtl adc xchg ja shrl je int cmc test pop roll test and das stos jno enter add pop aad test stos imul (bad) pop in and pop dec pushf mov pushf adc negb mov mov pusha pop jbe call cmc fcompl cmp mov jne sti dec xor hlt add jp adc pusha aad mov into in sbb sub jp in jge test dec mov push xor and mov call xchg (bad) fwait (bad) push ficompl imul push test sbb (bad) mov xchg push shlb push stos mov lret sub mov adc inc cmp mov into dec jg in (bad) fstl icebp fistpl jmp cwtl jmp mov (bad) ror negb sarb mov add (bad) lretw xchg js push (bad) lock add mov add cltd call inc insl loop jmp add xchg iret jns insb sub sbb clc aad popa xchg out pop lock lds (bad) into (bad) (bad) (bad) (bad) (bad) jmp sbb (bad) mov push rclb push sbb les cmpsb icebp mov movsl cli jno mulb sbb mov hlt dec cmp mov xchg push lahf jnp xchg add mov jb mov in push sbbb outsb ret mov movsl icebp xchg push sbb outsl arpl rcrb sbb in popa (bad) sbb inc pop dec stos xchg fwait insl cmp add pop adc adc xchg lahf insl popa push cmpsb add subl rcrb fnstcw call int3 ja ret ljmp int3 pusha in addr16 mov mov sub xchg or cmp clc or xchg enter sarb in roll pop enter aas push cmp jns int3 addr16 ret enter js mov iret fistl test clc add mov inc inc xchg mov push jmp imul sub popf shrb cltd dec (bad) rolb dec in fcomps mov push je loope faddl dec fucomp sbbb (bad) nop mov js call xchg xlat hlt sub (bad) aam js inc fsubp fldcw push clc lcall dec lret ret leave insb out or vshufpd stos sub fsubr enter stos dec inc fdivrl rorb lods leave roll in mov fldenv cmpsb push lcall fadds sbb inc xlat xchg hlt jno xor cmp inc out imulb or (bad) fild scas inc repz xor sbb xchg jmp xchg fbld xchg dec cmc add dec mov mov mov mov sarb ret out inc call fnop (bad) repnz inc repnz and pop insl scas mov mov test inc repnz fwait enter ret jle pop enter fmul in sbb push adc sub sub movb cmp fwait stc shll push mov sub fld xchg push xchg ljmp lds neg lock or pop xchg cld imul or and pop adc test push jle inc and push test fwait cltd mov iret out xchg les sub rcr mov das popa test mov push (bad) cmpsl in xor pmaxub xor lds jo lahf in add ret lods cmc xchg cmp inc test or adc pop lock (bad) movsb add pop dec sti jecxz ds cmc sub mov xor jge insb jge jl or jmp xor mov (bad) or jp scas mov or (bad) pop (bad) insl test ljmp or fnsave sbb scas fidivr adc mov enter enter push notb js js cwtl loop mov push stos adc sti sbb jnp test xor fsubrp adc or out loop into cmpsb aad mov stos dec cmc sbb adc das dec or test das mov shrl ds or inc dec mov mov (bad) lret inc stos pop inc xor sub push loope and push int mov adc insb in scas gs push lret stos fmull fnop sbb sbbl xchg sbbl or and mov or pop rol pop lock and lret mov lcall mov clc aad ja inc das push mov imul (bad) jns imul inc adc xor scas andb inc cmp xchg pushf and test xchg lret (bad) lods pop mov sub jmp scas test inc lods or sub in fdivrs jo fistl dec dec scas leave adc dec mov cs mov fadds mov enter pop push and (bad) jg push imul std adc das lea sti or sub (bad) xor sbbl lea jbe fdivl mov mov ret dec mov mov mov xor das (bad) push mov push loopne pop xchg rclb xchg in cmc xchg (bad) out imul mov sub neg nop cmc sbb cwtl test push pop js mov pop mov ret test add mov dec (bad) popf lret dec adc faddl inc xchg fwait ss sub sti imul les shrb pop jbe dec add leave leave cmp xor push loope icebp xchg dec adc (bad) jnp mov repz or (bad) das incb dec cli std pop mov sub clc cli mov cmp insb push xchg test inc and pop repz lods mov jo clc inc (bad) (bad) dec fwait add pop jge mov fbstp dec xor mov icebp mov jl std mov or adc ret aad jns adc mov push lods in fisub adc xchg (bad) xchg xchg sub cltd push in pop xchg jmp rolb out aam fisttpl mov cmp dec or clflush xor in add jns lahf jmp mov cmp dec jmp sti call or mov outsl lods scas mov fisubr cmc inc nop scas rcrl mov imul add scas or scas cmpsb sti je adc xchg add movsb cs cmp add add (bad) push push fs scas dec repz xchg scas inc lret sti push push data16 scas sub adc push mov test add and adc add mov jmp outsl test sti fistp inc jg mov (bad) add sti es or cmp fistl jbe stos movsb fs mov int sub or cli sarl enter js add enter and lret rol jmp fist sahf cs add mov pop or xor jnp cld rcl jne pop lods xchg push ljmp inc std inc subb xchg out (bad) and xchg mov sub mov cld jl out es jge out jo dec fld sub stc xorb and iret jae xor adc add mov mov sbb xor push js jno aam mov mov ds enter mov mov (bad) sahf mov xchg push jge and mov std in dec mov repz fsts leave cmp lock xor (bad) cmp cmp xchg neg mov pusha js mov dec imul call (bad) in std sbb stos lds movups adc jnp adc push xorl xchg scas or pop cmp arpl loope in call sbb adc in cmp ss and cmp js add and pop int js mov cwtl (bad) pop test dec mov mov lret (bad) icebp and out movl rcll movsb and iret loope push inc mov mov aaa sbb ret cwtl mov and lea (bad) rcrb sub dec dec mov dec sbb jae and pop add les add dec out arpl (bad) and mov inc jbe pushl es cmp mov inc imul and mov out add pop push (bad) fwait cwtl jg or into sub (bad) xchg push ja mov in mov nop mov lahf ss and mov sub xchg out mov xor push pop push push scas daa add dec push insb jae lcall jecxz push sar sti add popa das adc insl dec mov cwtl xchg pop sarl clc loop sub jg mov loope fnstcw adc int ror adc scas mov loopne (bad) test aam call fisubrl mov scas sub mov and sbb adc (bad) ss ret or loope lock aam iret cmpsl sub sub nop pop push or outsl popa sbb in sub push inc mov mov mov jae lods sti out push jnp cs sti mov cld loopne into adc fsts inc insb dec pop cmp add mov mov lcall pop int3 xchg in inc out in arpl cmpsl in in call or shll xor inc (bad) loopne and jo,pt adc and lahf shrb sahf dec out ss add pushf mov fstpt xchg nop cld jo add jns mov jns mov in or mov xor (bad) ss mov outsl movsl inc adc enter lea loopne neg mov or xchg cmp xor out dec nop outsl loopne inc subb xor fstpt pop mov fs inc add hlt pop aaa in jmp enter push in arpl rorl adc push inc les mov sar xchg and mov cltd push pusha je add jg and js mov nop dec test pop xchg xor daa mov inc push js das cmp dec adc xor es inc test cmp idivb xchg incl jl hlt in (bad) xor mov fs dec mov in rcll mov aaa shrb adc jnp es stos jae fcmovb and sub lods jmp dec xchg in scas push mov in cs push adc das push sbb rcll pop loopne cmc cmpsb fidivr pop popa test adc lret test les mov sahf mov sbb ljmp push mov icebp xlat cmp es xor mov hlt cwtl jae fwait in daa or sbb clc push dec dec jae jne jg iret js adc (bad) xor or es pop scas (bad) clc dec mov and bound push sbb pop xrstor cltd andl xor sub inc xor pop xchg inc inc xchg rorb leave test ljmp xor mov add scas in jnp leave xlat and fsub (bad) mov fsubrl xchg sbb push rcrb int3 xor nop mov add inc add fdivrl sbb mov add mov inc pop test daa sub xchg push in je mov je and out iret outsb jmp cmc dec xor or cmp aaa test call test fcomip push loopne dec lahf aam inc mov mov fisttp dec pop and js iret das inc or mov push sbb and sbb and (bad) idivl nop inc and inc lea ds ds lds sub jo push faddl mov (bad) dec gs mov push (bad) leave ss fildl mov cs add aad inc movsb pop add lcall lcall imul jbe dec and cmp jecxz mov out and sar push pop and in out xchg jp mov dec sub int stc mov push mov lret js ds daa push adc push sbb fcoml fcmovne (bad) dec sub pop pop or (bad) sbb out pop push push add push out loop lret xchg mov aas out inc and inc jecxz mov and test lret mov cmp xchg pop fsubrl mov jecxz adc pop arpl or xchg jno mov push enter xchg leave inc cmp push xchg xor out imul inc pop mov ret mov outsl clc stos add in sahf int xor (bad) roll push adc lahf xchg movsb std dec scas sub ja or jle push pop dec mov mov in lock call or add ja push cmp (bad) add and hlt ljmp cmp sub (bad) outsl negb xchg mov addr16 es push xor fisttpl inc cmp imul push movsb pop ret pop jnp mov ds jbe test mov pushf mov and inc and inc imul and sbb push cld in jno test pop (bad) mov aad cld push outsb pusha mov push dec pop and push mov ret aad mov lds hlt push push xchg subb imul loopne loopne cmp push cmp data16 xchg pop cmp and cmpsb aas push push aaa add daa (bad) (bad) jecxz push scas add fldt incb push es pop and test ficom out inc jb movsb mov mov or cmc jnp or xor push sti and adc cltd pop mov pop cmp (bad) jnp push xor inc lahf cmp pushf xlat xor (bad) dec gs shll jge adc xchg push and cmp lea jne es out repnz adc jg in bound adc icebp aas jne sbb ret (bad) insl in fldenv (bad) fcmovb pop mov lods fdivrs jl std lea lahf loopne pop scas jecxz or out xor loope add int xor into dec lea xchg mov sbb fmull add sbb (bad) or rorb cli cld mov xorb push fwait lret push add mov xor cld rolb or sbb mov mov cwtl or mov dec jecxz in and lds rcll dec dec and xchg (bad) fwait lret xchg sub pusha in push push fbld adc nop cld lods inc sub xchg mov jb xor imul mov push mov fld adc add xchg fld cwtl test cwtl lea ficomp andl mov jl fst inc inc or and lret mov lods addr16 or adc dec loop adc adc and push out out test push mov (bad) shrb inc imul jb xchg jno mov sub (bad) add aam fbld add scas imul in fs (bad) enter jne mov in mov in scas fimull push daa out fisttpll lods js lods jnp mov jno mov incb sbb sub xchg inc or mov cmpsl jnp fimul push mov lcall bound ret leave (bad) ffree mov rcrl xchg notb push mov loope jl and mov outsl addr16 cmp sub out leave jp stos mov or fcoms ret or lret inc sbbl js daa shrb cmp jnp adc cmp push push dec and mov outsl dec (bad) cltd cmc push je xchg push rorb sbb test jl adc xchg ja jmp xchg ret push sbb ret ja cltd dec rclb lods int3 incl and add dec int3 push cmp out lods enter or aas out push add sti jae mov jl xorb xchg mov mov xor je stos pop xor push lahf (bad) incl cwtl mov pop stc jns adc leave or loopne (bad) dec loopne jmp lcall aam aam and sbb jmp push pop mov push xor pop push in mov xor out rorb inc scas jnp mov in cld xchg js mov sub sub pushf dec mov inc pop sbbl push test xchg vmread loope mov (bad) ljmp mov pop cmp es std in arpl sarl fidivrl fs das dec pop adc adc jbe (bad) movups loopne inc orb mov popa cli jge (bad) pop mov ss push xor jne fildl fdivs loopne pop enter pop inc scas mov aas test inc sub sub mov fldenv jmp add addr16 add ds aas add nop inc xor jl add out sahf mov pop stc mov push mov scas cmp add cmp in test sti sub aam xor dec pmullw fistpl or cli popa cmpsb int xchg push sahf mov movsl mull out js rorb sti xor mov movsb das push cmpsl sub and cmp incl daa fmuls lret adc jmp outsb dec mov mov (bad) (bad) xchg sbb mov (bad) jno nop out scas xchg and cltd or aas out push xchg cmc adc sbb test mov add test add jno adc sub inc addr16 sahf pop push jg leave js cwtl or js and (bad) inc jl pushf test push jmp cwtl xor push or sti (bad) loopne,pt nop scas psrad jp and fildll mov aam enter js cmp dec js jnp cmpsb adc decl int mov mov dec dec push cltd xor cwtl pushf mov mov jae sbb popf lock xchg imul enter cs ljmp (bad) or or (bad) mov sti dec dec xchg loop push outsl std mov insb pop jnp loop call add inc adc pop sub add aad jno incb insb sub adc ret cvtpi2ps or adc sahf mov and lods (bad) mov out movsb jle ret in pop mov cltd fistp aas or sub mov or les add jp inc lahf sub and dec mov jg push sbb sbb cmpl cmp sub adc sti inc (bad) notl out xchg dec adc mov push cmp or stc xchg push call or mov xor xor (bad) dec lods pop sbb mov push orl aad lea and push cli pop and fnop in imul mov sub rclb fcmovnb imul mov sub lock push popl repnz adc jg dec push or ret mov rol and cld pushf int out inc pop and out test mov xchg test mov cmc sbb push xchg loopne jnp and cs sub mov mov pop lahf sub int3 rolb push fidivrl mov add popf loope repnz adc cmp adc or pop ljmp in outsb lcall jne xchg loope psubusb cmpsb aad movl cld stos jns and mov jae and mov mov jg and movsb cmp inc jecxz fstpl mov jb sbbb pushl mov and jp inc and cmc push mov std into sub stc mov sbb xchg jecxz add fcoms xlat addl std mov into loop xchg push add clts mov movl push push push in add fildl cli cltd pushf clc imul push leave pushf lock mov test sbb xor nop loopne lcall xor fisubrl add addl push xor sbb mov and sub mov cwtl add int int3 push inc sbb hlt sub in lret add jp xor push gs mov mov loopne shlb or lret pop fsubl adc aam mov jno jne mov push cmp sbb icebp cmp sbb lcall mov into pop sub clc ret lret (bad) or and lods fstpl adc shrb imul aad mov cltd and out (bad) aad lahf xor sub push test in pop iret fwait in fsts ss mov repnz aam push nop pop fdiv dec clc icebp nop in test icebp lahf ret gs push mov mov pusha pop jbe ficompl mov and xor movsl jno adc xor lret sub movsl call in mov rep pop scas mov bound or and lahf lahf xor scas fistl jns arpl fisttp add push jle in ficom jge fsubrs push into in cld cmp pop je cld cld jl cmp push jae pop or sub or (bad) mov pusha mov (bad) inc movsl jmp repnz test shrb xchg inc and xchg (bad) stc adc xchg pop outsb lods inc jle inc xor das xor mov popa (bad) inc xchg mov data16 imul dec in jnp repz inc test mov rorl jmp push cltd pop adc jb rorb (bad) jb sbb in ret cld and sti xor rorl push xchg xchg push mov dec movsl (bad) and pop out xchg inc pop sti dec mov push push mov jmp idivl pop or (bad) mov xchg (bad) js and mov in loop push scas mov mov insl add stos aad or push xchg xchg mov push je dec sahf and popa test dec jbe or fistl imul push in outsl frstor test lods mov popl fwait js adc jae dec imulb stos test push adc mov xchg ret pop test fistpll lock shll (bad) fcoml bound jle leave stos lods mov jmp outsb mov nop fmull cmc or aam in jmp (bad) mov mov lods sti add or int3 cld (bad) pop jnp mov mov mov sub jge inc pop jns stos jg pop mov adc add sub mov lret adc pusha cltd jl adc jmp cltd ss mov adc xor push notl mov cmpsb stc test (bad) push in mov lods sub pop push out rcr adc mov imul mov xor int3 repnz ljmp clc sbb (bad) test (bad) std ret out mov add test add hlt stos mov mov sub fwait cld mov fist xchg ljmp jne inc fs pop dec push jne xchg push or add shlb xchg (bad) mov or push pop ror dec lret arpl or fildll xchg cwtl pop xorl pusha cmc outsb inc jg out arpl scas jno push loopne lahf ret cmc adc and jge xchg mov xor xchg mov cmc movsl cmp and cmc shrl notl cmpsb xchg xor and inc push jp sbb pop popl xchg pushl popa insl outsl jno rcrb xchg daa push std and fldcw int mov (bad) mov arpl mov jb ret inc lods jp repnz cltd flds sahf (bad) das xchg inc mov mov lahf sbb outsl gs xchg in repnz test rolb push sahf cli in pop data16 and push pop add (bad) mov fistl adc and nop lods mov insl push das mov (bad) sub mov pop in and movsb ret mov sbb xor out lods adc cmp into and and push cmp je jge xchg iret and je or add iret arpl jnp xlat dec sbb ret loop push sbb fistpl cmp outsl jmp icebp pop sub lods icebp into jmp lret sub sub mov cltd test lcall dec data16 pop push fs ret cmp mov cld outsb or dec sub add mov rep outsl rclb es add push sbb sbb cmp dec outsb push (bad) dec enter stc cmp mov enter fisttp repz push sti je or rol cs sub inc pop and scas in in sti push push out sahf mov add lahf mov out pop lods lahf mov mov sub dec xor adc mov js int3 popf mov stos fcomi popa pop xor scas pop mov pop rcll lea push add scas sti repz or bnd sti push push xchg mov outsb mov dec icebp push push and scas (bad) sti adc add cmpl or jbe cwtl rcrb xor adc add mov enter xchg adc push enter (bad) outsb outsl xor fsubr int in imul int3 or jg (bad) aam ds add (bad) out mov shr cmpsb ror mov hlt dec jb lret hlt test dec pop mov test ret roll ror pop jecxz mov xor dec addr16 ficompl sub jbe pop test fmul jecxz and lock push cli (bad) mov pop cmp push repz aam add pop mov fildll jbe jp dec repnz pop cmp cli xchg insb mov mov in outsl shll xor test mov inc or mov fildl push push fadds mov enter lea leave or (bad) es mov cmp into lds mov pop dec adcl sbb xchg sahf dec xchg pusha imul add fcmovb sbb jp xchg dec into rorl push cmp jge fs lds cwtl cwtl call into rol enter repnz shl add jmp inc jns test mov dec repnz push and stos cmpsb into inc adc dec jae dec sub jne xchg and jnp out push int bound xor jecxz sub xchg mov push sub dec pop jecxz fwait loopne shlb dec pop inc mov mov divb out mov hlt in xchg es xor std mov popf cmpsl xchg mov loopne add push sahf in cmp mov add pop mov push jmp inc cmp nop (bad) hlt xchg pushf sub mov jo arpl call inc xor cld jbe (bad) jne xchg sub cmp or fdivr add sahf out lret stc cmpsb into mov andb repz ss mov ficoml pushf sub adc psrlq pop adc lahf je nop (bad) lret shll adc fbstp inc (bad) negb ficoml push pop lea cmp dec cmp lret adc in sub dec sar aas jbe inc aad outsl or lcall mov (bad) or fnstcw scas dec and inc pop and inc aam jae rcr inc and (bad) ja dec sar addr16 punpcklbw sub xchg jl dec into mov notb out leave xchg outsb fistl leave arpl movsb xor cld mov dec push scas scas dec xor xor (bad) pop and add jnp int mulb sub subl jle sub lcall daa mov mov data16 mov clts push mov clc sub mov sub jnp loop iret dec addr16 stos das (bad) hlt out psrlq sbb push cmp dec mov mov mov js cmp xchg lcall out (bad) in xchg lock out push insb mov fisubl fidivrl xchg cwtl xchg addr16 in sbb sub movaps xchg push int jb and or add cmp lods in das (bad) ljmp fadds (bad) out aad mov mov fmull (bad) aam sar int mov lret dec vmread cwtl sub cmp scas mov das stc outsl shl push cli scas adc xchg dec adcl lods xchg push xchg sub jle mov scas adc pop das push mov and int or or (bad) cmp test push aam dec fwait roll in sbb sub aad xor std bswap fcmove nop insb ss push or insl inc bswap loope xor popa fs in xchg cmp jecxz aas inc push and xorl in inc sub add xor add cmp js sbb mov add fmull lret mov ret and jecxz mov add cmpsl lock push cmp int3 xor cld clc inc mov test push sarb inc (bad) mov subb (bad) sbb cmpsl mov in mov andb push lea add mov test jle test mov sbb mov dec fldcw mov movl pop rcrb popf dec das inc aam js cmp mov test mov ret (bad) or xchg je test xchg test (bad) (bad) inc pop (bad) xor cmp and aaa fprem seta mov and aaa pop xor mov std (bad) pop inc hlt das rcrb pop cs aam cwtl or popa ret xchg in clc stos add in lods adc inc lock fimull negl pop inc sub cmp dec js inc pop hlt dec sbb cmp fisubrl sbb ret rclb fidivl (bad) div sbb mov sub mov inc fdiv jnp mov and push (bad) loopne dec xor lahf dec mov jne and ja shlb subb dec xor das fadd clc pop bound cmp inc xor sbb not orb pop rcr pop xchg or not ja adc ja dec jl inc push cld outsl jl inc pop in in sbb inc lds gs (bad) and push test and dec adc and aaa inc add or les and pop nop cmp jle and jnp leave or inc sbbb add pop and dec out add sbb sub movb mov mov enter mov dec popf repz shufps sbb add and scas dec movb das (bad) out pop inc sub jg add lds sbb dec inc ss sbb push cld call lea int3 loopne add js cmp test dec xor mov adc addr16 in (bad) out cmp lea inc hlt pop pop add and lock adc clc adc fisubl push ficomp mov dec add decl pop mov jge xchg sub and pop loopne mov pop ss mov sarl loopne mov add jmp iret xor les cmpsb push sub ret data16 sbb aas mov xor adc push orl and pop lock adc rolb mov lods decl adc rcrb negl mov push mov ds into xchg rclb mov dec ljmp arpl mov rcrb pop adc sbb fisubl sub dec arpl push mov lods xlat xor iret or daa ror in jo mov nop xchg je iret mov xchg mov xorb dec xchg xor rcr mov jge dec lahf push or add jle jae cmpsb adc ret xor cli xchg repnz jne nop xchg cmp inc or inc pop in mov aam repnz stos clc lods sbb pinsrw adc sar or mov sbb or adc lahf js and inc data16 (bad) imul cmp (bad) les xchg ret cmp sahf hlt inc mov and pop fiaddl lods and in cli sbbb jne xchg and sub and ret ja test imul and mov mov adc pop mov outsl sbb and (bad) subb xchg pop iret adc mov xchg dec decl add dec mov xchg adc adc jbe pop pushf mov jnp cmpsl xchg repz xor sbb adc adc sbb insl adc es sbb cmp movsb lds cmp jbe dec ds mov out (bad) rolb fwait nop xchg mov int jge insl mov and mov pop and dec fcoml cli xchg stos outsl sar lds jns lahf lea push dec and addr16 cltd mov cmp sub fadd pop in mov add ret and adc pushf and mov mov jns lahf (bad) xor sub add ret and and ljmp cmp push xor jb cmpsl lods or es test mov adc jge cmp push and addr16 (bad) out xor inc repz push ja mov adc jns cmp push sub mov push repnz stos mov sub mov adc push sub mov ja dec sar add imul ja enter jno test dec adcl push and inc lahf or inc jae pop adc mov shll lcall push fistpl rorl inc jae lret and lret pop mov push addr16 addr16 xchg cli pop lahf hlt adc push les cmp and (bad) cmpsl rorb (bad) dec bswap insl lea push mov mov fwait (bad) cld inc add cmpl adc jb scas or aad into negl xchg adc inc sbb push or inc dec jbe mov push cmp mulb divb mov scas mov fnsave icebp inc mov data16 dec jbe imull fistl jecxz addb std inc das test jno leave shr fcmovne loope push xchg (bad) pop inc sub xorl lret lds daa pushf cmpsl dec jb in lock lret push cmp pushf xor xchg mov cmp (bad) (bad) rcrb rcll and (bad) pop fwait pop mov xchg mov in in test popf repz sub mov add pop outsb xchg lock mov stc iret aas dec ret cmp movl cmp test test sbb xchg jmp rolb mov out popf jecxz aaa sar dec push cmp pop inc lret add sbb xchg mov adc inc loopne mov pop in mov test das jl insb inc cmp ljmp (bad) and (bad) mov (bad) pop mov data16 lss add dec rcrl push mov in test pop inc ficompl jno iret mov sub and sbb add idivb lods mov push sbb and flds inc mov sub js dec xor fnsave jl shrl mov adc loopne push cmpsl dec jmp lret inc sbb or fsubl imul push mov fsubl scas jmp cmp xor (bad) sub popf movsb rolb pop push xchg add stc inc jae (bad) push cmpsl out mov and scas (bad) adc xor movswl xchg mov adc xchg and jo rcl pop call cmp push (bad) and add inc aad out xchg out nop inc fwait lds sbb mov adc shll fimull sub pushf and (bad) adc push inc adc sub fsubs addr16 jnp and inc fldcw add cld (bad) mov mov cmpb in add mov jne fldcw out mov add mov push sub sbb xchg pushf push push in insb pusha mov and stos push out (bad) hlt pop in mov mov cmp push inc xor insl jl pop mov and mov cld punpcklbw out xor push cmp cmp jb and dec add gs xchg sub mov xor cmp xlat and mov scas dec add adc inc stos xchg mov negb rcll aas (bad) lock (bad) xchg sub movsl mov add add data16 fldcw cmpsl fidivr sub mov sarl push sub mov out mov shlb in sbb test sar (bad) adc or inc jnp (bad) cmp addr16 mov (bad) repnz psrlw or fldenv (bad) paddw ror popa cmp fnsave mov pusha cwtl push and mov std push leave inc out mov fmul mov cs (bad) jne mov mov mov mov push sbb xorb mov enter mov dec pop jns movsb and or dec mov ror mov loope push mov mov jp jl insb sbb out xchg sbb mov int3 jo cs dec and arpl dec push out loop fdivs add xor fistpll shrl nop fwait xchg imul pop xchg xchg fwait hlt ror xchg push or mov stc push iret add push lds nop inc xor sub sub mov addl lds pop movsb add add out pop jecxz inc push lret fdivrs movsl or sbb ret cmpsb dec dec dec je lahf in in pop stc adcl mov ret pushl pushf jge jns cli pushf cld pushf add mov fsts fisttp inc pop fsqrt ljmp in popa inc or loopne (bad) jmp dec stos ljmp jne das dec push jecxz sarb xchg add arpl cwtl pop popf pop in push jecxz jmp mov jl mulb mov xchg jmp pop pop mov add add add add in and and sub sub mov mov mov addl add add or pop pop pop add in out inc xchg mov ret push lahf push add insl movsl (bad) mov jle jno fwait loope adcl rcrl jp jp jl lods insl test cs pop pop pop pop fistp jecxz mov push mov scas mov pop rorl in (bad) sub sbb data16 cmpsl test mov pushaw mov bound push dec jmp jae jb and sarl mov push jg jnp jge jns call shl and mov cld fcompl call pop cwtl pop cwtl loopne in dec cltd (bad) mov jp push dec inc jp std inc out push addl (bad) and or ds xor mov popa jle adc int3 loope sub inc cltd pop pop insb (bad) outsl cwtl in push out mov fiadd pusha loope loope sbb stc lods mov ficomp in jae ds mov jp cltd dec lret into ror cmp in rcrb stos add fsubrs mov sub mov mov sahf add sub andl dec inc stos add fsubr dec mulb fcmovnbe sub sub dec aaa fisttp pop fwait ret adc dec andl xor mov add mov gs rcr or and mov div and push aam cld (bad) idivl dec sbb inc mov xchg sub jecxz dec mov movsb popa rolb xor faddl dec jle js aaa add sbb clc sbb test fildl (bad) or xchg nop movsb mov mov mov lds jns sahf clc (bad) sub lret or jo mov cmp pop mov pop inc gs clc sbb or and dec lret or sbb in les xor dec paddq into icebp jae adc or xchg dec push add (bad) and jl inc (bad) movsb sub loop or and push mov rorl lcall sahf or cmp (bad) mov out xchg mov pop pop or fmul push pop and or out sub sti je fisttpll and jmp std lcall sub inc or loop mov std fildl sarb iret push sahf dec std mov xchg xor push inc xlat xor in aaa lea sub mov ljmp icebp mov mov insl pushf sub xchg int3 jnp mov and dec sbb or jns test jae loopne or sti xorl add and (bad) cwtl push or insl sub sbb xchg in mov sub bound xlat rcr mov mov push mov loop xchg and cmpsb lock dec inc mov mov lret pop mov inc inc mov ljmp fsubrl xchg pop adc mov outsb jbe xchg leave fisubr stos fldt test push cmp sub dec out popa jle xchg aas das arpl xor xchg sahf or xchg rcl add rclb dec jbe incb fs push add sahf sbb loopne mov pop mov test imul rcrl stc push in sbb dec adc cli jp jle stc jb adc mov gs sub xor xlat push or sub rolb add cmp dec rorb int3 call xor or pusha pushf repnz mov adc push out cs cli and cmp push sbb jmp (bad) jmp int3 out and roll dec xlat sbb push push outsl adc push fnstsw es stos lods daa xchg test js insl push out mov jl popa scas gs sti inc rorl mov (bad) aad cmp cli pop (bad) adc xchg cmpsb in push out add outsl data16 or sub js fisub cmp pop ficom cmp jge mov push inc jecxz cmpsb fwait ret pop pop int3 sbb call cmpsb fs inc jmp mov enter rorb cltd lds lcall cwtl call call rcr mov jns into ficoml clc fsubr mov lahf cmp mov xchg (bad) jmp int mov pop rclb add scas mov adc ljmp jl add cmpsb sti je adc xchg add movsb cs mov xchg scas push pop scas mov inc mov mov and mov xchg pop mov pop lret add loope notl add scas cmp add nop scas dec mov add mov scas outsl sti hlt push aad pop repz push xor mov lock mov push shll push xor repz add scas mov in sbbl ret add in stos int3 jmp loope leave inc lods out xor pop clc xor mov and (bad) repz into arpl (bad) imull dec cwtl and mov lcall rolb dec mov les leave mov lea jecxz jl mov lds arpl movsl fisubl arpl cmp loope movsl ficompl or sbbb flds jne stc dec sub nop adc mov dec pop mov mov lds add cmp clc push sbbl xor adc cmp and ds loope sub ret sbb hlt mov xchg or inc mov sub jg mov addr16 xchg neg nop cmp or adc ds sbb (bad) mov jl int out and mov pusha dec sbb ja (bad) jb cs pop inc popf pushf mov pop mov rcrl sub push and out clc push rolb out test daa add jbe out leave inc aad adc xor ja (bad) jne jne std pop (bad) bnd movsb mov fdivrp or js cmp sbb dec mov push lea minps sbb std rcll bound inc pop rcl mov mov aam cwtl and mov movntps data16 cmp adc push ret fwait jb fs sbb push jo mov mov pop daa fildll add clc addb or sub jae lds fnsave (bad) mov sub mov stc icebp outsb roll sub cld test lret push call test lods in negl sub jb push das dec loop js cmp or fisttpll test js pop inc xor ljmp popf sti add sbb repz mov adc hlt jg repz sbb mov in pop femms xchg fidivl jno and movsb push imul das rorl mov cmp adc pop push cmp xor out pushf xor rcrb cmp es and and jl sbb test jb leave aas mov adc idiv jnp stc add outsb std dec paddsb shrl mov fwait and in hlt pop movsb js adc mov stc out inc js xor push pop cwtl xchg das inc bound add int3 xchg outsl movsb mov loopne shrb jl (bad) jbe frstor imul rol lcall pshufw pop mov int3 paddd ficoml (bad) cmp lret add add and inc pop stos sub daa int arpl xlat lock cltd jbe jmp rclb push shll outsl loopne mov push imul imul push cli jge scas xchg (bad) (bad) xchg fdivr and jo add cmp xchg push mov lret pop xchg popa ret hlt enter stc inc aas (bad) and fcomps fdivs fildll cld (bad) push ja xchg (bad) insb cmpsb shrb std cltd mov lds clc xchg loope rcll repz seto mov dec sub xorb and lea xor or fs (bad) fstl inc sub popf bound add sub mov mov pop xorl push cmp arpl cmp jle sbb aas loopne movsb ret mov stc in mov mov int and notl cmp jg ficomp pop aam jecxz dec xor xlat mov cmp mov cmp cmp int3 iret xor cmp xor ljmp out mov push sbb std push rorb mov (bad) jbe jle imulb xchg and pusha sbb push int out mov mov std leave inc lret mov push fisttp ror mov out dec cmp jecxz (bad) (bad) dec shr cld insb rorb nop jno inc (bad) int3 stos xchg and push repz sahf movsb mov lods lods or fstpl sahf dec xchg fidivrl push cld push xor mov addl rcrl mov dec or inc ljmp popa push std test loop ljmp mov lea push int (bad) lods fcompl push enter cwtl cmp mov sarl or out je inc clc (bad) scas pop inc xchg lock lcall pop mov xchg (bad) mov in sub pop pop pop pop out int fmul mov and lods rorb jecxz jecxz mov icebp xchg pop jl mov sbbb add dec jecxz loope mov pop jmp fnstsw dec ljmp mov pop pop loope dec loopne in or or stos pop cli jmp int ror pop loop (bad) lret pop pop jmp sub mov sub inc dec add test dec fisttp cld jl loope dec test push pop ljmp stc dec or dec fwait out dec frndint inc dec fucomi enter out leave jmp cltd or std loop inc insl leave pushf lock sbb imul in cmp ret mov lret test mov xchg and ja push addl xchg test ja call repnz adc pusha push pusha shll pusha mov push push popf (bad) (bad) (bad) lods ror aam loope xchg dec and xchg mov (bad) shr adc (bad) loop sub mov inc push sti ljmp push dec dec xor add int3 int3 sub ret push sbbb stos add sbbb sbb imul js pop xchg xchg mov xchg push (bad) jp jl and pop movsl fstl sahf lea cltd push jge movsl shll ds xlat jge icebp shrl jns es push rcrl fs xchg inc push jb rolb bound pop lods pop insl pop xor imul pop jno mov cmp push gs (bad) jmp jmp in in insl inc jecxz xchg dec jp dec push push dec (bad) or cwtl stos ret bound scas jne loope push adc mov in test adc int pop leave or mov add gs arpl clc sbb push int sub cltd movsl test in mov gs dec mov negb loop es push inc dec outsl adc mov mov stos inc add push (bad) fchs hlt dec jo,pt xchg dec xchg lcall cli dec mov xchg xchg out pop (bad) pop lret sbb imull mov es sub push or adc adc or sbb xor and mov pop in roll insl jns fmull lock xchg jo inc aam and or mov push jae xchg idivb xlat mov inc in push imul mov (bad) xor cmp fmul outsb aad mov mov fist inc pushf sbbl fwait scas mov negb ljmp adc mov (bad) sbb jle mov mov add fdecstp sbb dec popf pushf outsl xchg inc inc or repnz enter stc ljmp add iret jl push add fwait dec xchg (bad) mov mov shrb or pop pop addr16 loopne in or lss inc repz sub ljmp adc jg inc cld push sbb push xchg wbinvd jnp iret sbb mov cmp xchg add bnd xchg adc fadd pop fisubl lods adc mov in xor xchg arpl mov lods jbe xor addl xor jg jl or bound loop pusha loop and xchg jge jae fstl loop out (bad) cmc arpl mov inc push push pop addr16 push int3 ror ror rol add (bad) scas movsb add mov or jo fstpt jle pop ljmp ds mov cmpsl mov je mov sub aam inc sub inc daa dec jl dec test inc or cmpsl adc or iret cwtl sub insl and js in test xor js inc icebp outsl out movsl cmpb jns decl cmpsl lods mov mov xchg outsb mov int3 je mov outsb mov adc je adc das mov mov jbe sbb rcrl lock and inc sub mov sarl sub pop int mov mulb movsl in out stc jnp mov in sbb sub (bad) and popl arpl ret mov jg scas pop or dec mov add push jns mov cmpsb xchg and (bad) mov movl popa mov daa jnp call fs cltd les cwtl leave add xlat xor add cs faddl jno dec lea jmp shrb sub sarb fstl rol sahf iret repnz dec xchg inc push inc jno mov adc sub cwtl sahf jnp fwait shrl (bad) cmpsb int3 clc call xor xorb mulb psubw xlat das xor lret pop stc xor ljmp fcompl out int and mov (bad) xchg (bad) jmp cmp insb jecxz cmp mov (bad) nop in xor dec mov ret aam lret xchg loop push ds movsl loope push jne jl add xchg jle xor insb iret imul mov jecxz negl adc mov daa outsb mov (bad) (bad) jmp and hlt or aad jmp and rcr mov icebp cmp push push sti cmp mov sahf icebp fsubl or aam orl push sub loop push sti adc out cmpsl push iret push call or daa call push (bad) frstor sbb nop les or mov andb jg loope outsb imul ljmp xchg insb dec jnp xchg mov cld and fidivr push mov popf (bad) mov inc or fdivr stc popf shr cmpsb push popa (bad) cmpsl cwtl xor push sti std aad in adc push xor js loop fucomip aas push add aad mov mov xrelease mov loopne push ds lcall jo mov pushf repz addr16 lea inc imul dec and jno loop test jp int3 adc dec (bad) (bad) clc popl mov and (bad) and jmp lcall push out mov jg in out adc bound fs sahf mov out add cmc pop aas iret or fidivl cmp cmpsl fucom xchg and push sub xchg and inc mov lea ds add sub mov and jecxz mov sbb adc xchg decb add mov inc mov adc sbb and aaa shld xor shl jmp les lea mov or sub xchg pop mov das clc cmpsb out pop test loope test fs sub adc cltd xor (bad) mov inc mov jbe sub dec movsl cmp cmpl in sbb or cmc loop pop icebp xchg jmp popa fsubl (bad) xor and adc fisubl xlat and jb lahf pop int mov mov adc or jle fstl sub dec enter scas jg aas stos cmpsb and pusha insl inc aam pop dec add lahf push mov push hlt loop ret sbb sub cmp cmp sub pop and ss fucomi out es outsl loope aas (bad) loopne sub mov enter inc and out stos or hlt cmc lcall aam push cmp pop fcoms (bad) pop in in xchg pop inc xor cmpsl insl xchg call or test sub insb mov inc push cmp lea push or sub ret in add xchg cmp cmc mov or test je cmc scas mov sub aad insl pop add mov insl sub icebp cmpsl xchg mov xchg xchg repnz les jecxz mov and pop jg mov add inc ret add cmpsl movsb jae xchg sub push scas pop daa nop xchg daa cmc and mov fcomps arpl xor fist js test sbb mov push data16 ja aas (bad) mov jno out xor repnz xchg or add cli cmp cmp ljmp mov xor leave push jno pop fidivrl mov (bad) enter test cmp and pop sub pop out jbe mov dec and xchg (bad) inc jno push arpl push or repz pop jge shl std mov cltd repz xchg decb jge add push aam and js mov sbb xor inc and (bad) fidivr daa sbb icebp and jae (bad) roll and push imul decb xchg clc push sbb fnop push xor das mov mov dec xlat pop ret imul sbb popa hlt adc pop and lret mov aas sub neg imul movsl pop sub outsl call xor divl cs xor xor jle dec (bad) xor sbb setbe xchg daa mov inc sbb mov adc test pop addr16 cli (bad) ss xor cmp jno xchg and pop aad push sbb or dec adc pop xor mov popa clc add cmp cltd aad inc adc pop or mov pop mov adc xchg lret push pminub lods addr16 (bad) pop adc in xor (bad) int3 (bad) push jno cld xchg shll xor xchg cmpsb test incb pop divb mov jo push std push insl int3 xchg out and sub sahf jl rcrb cmp daa in in int xchg test jge inc push xlat clc dec xor jae cmp dec dec out jp insl fsubr cld mov push cmp cmp xchg mov inc xor jo imul paddb add ljmp sub mov add cli mov inc das mov fldt out js push xchg je cmc fcmovb or jne aas clc push mov adc std lcall mov pop mov outsl mov cmp frndint aaa pop out jo scas movsl mov aad adc gs pop test or or or mov xchg mov loopne cmp icebp popf pop hlt xor shrl insb jecxz rorb push push jl and mov inc jl jl and scas cli dec imul or mov std adc xor and pusha pop pusha lock sbb mov mov or pop xchg mov xchg inc cmp ljmp pop or vmovdqa pop int3 adc cmp insb clc mov sub das sub insl (bad) sbb cmp fcompl sarl dec lret fisubr dec lcall out les insb sub pop pop cmpl idivb gs pop movsl mov xor vmread movsb jg lahf mov push xorb xor scas add mov in jo ret push push xlat sub pop jmp push jecxz in add dec jg out adc dec xor (bad) mov into out sbb int3 insl jmp test dec stc or les inc (bad) xchg or cmp stos pop jne push push cmpsb movsl push mov hlt adc fs add add insb xchg cli repnz mov pop adc mov or xchg shll adc jne cmpsb mov sahf (bad) or rdtsc (bad) cmp (bad) (bad) sti (bad) pop bound jecxz cmpsb sbb mov push gs insl arpl xchg loopne adcl mov cs mov dec add add xlat lods jbe testb and jge outsb jecxz mov pushf inc imul sahf sub in popa orl sub xchg dec in imul mov mov or in pop push lods movsb mov cmpsl add ljmp adc or adc lods loop cmp fsts xchg mov adc adc xchg xchg xchg mov push scas cmp rorb jl push sbbl xchg adc scas (bad) and inc imul jecxz mov ds add lcall pop inc and cmp movsb sub mov cmp push jl outsl pop in out movsl inc sbb (bad) fs add pop jle mov mov mov jns sub adc xor mov mov daa fwait ds jecxz lcall sbb inc and pushf cmp out cmp xchg (bad) lcall in jne jbe pop arpl jae scas mov cmp popf js jb fstl stc pop addr16 in rcll shll mov cwtl pop lahf loop cmp cmp dec out ret and fadds dec jmp dec out repz mov lcall movntq xorl mov sub lcall add push xchg xor sub stc stos mov jb out lea or xchg xchg push fsubrl or aaa pop gs pop fstps add (bad) xor imul mov jl mov jnp das mov pop push bswap repnz jns mov and inc xor (bad) xor dec bound xor je aaa out je shr roll sbb lods roll mov data16 or push cmp mov popa dec mov out xorb rcrl xchg sbb aas adc fistp aas pop jmp lods jbe shlb pushf push xchg ja,pt rclb and mov mov push stos or adc fwait jno xchg xchg popa adc rol popa xchg cltd mul mov push mov cwtl jecxz sbb sbb bound (bad) pop add xor adcl mov dec push loop add jnp or shll xor sar or into xlat pop mov lcall push sahf sbb mov xor cltd xchg sar mov nop jg dec cmp pop sbb stc or fldcw inc (bad) and and (bad) xor outsl out fdivs sti and (bad) jne sahf jo sub and lcall pusha sti xchg pop cmp stos negb cmp pop icebp and add push xchg ret or inc adc lret xor mov jns and scas lock loop aam sbb adc mov dec jnp cmpsl push enter adc mov add icebp cmp pusha sahf loop and push loopne inc mov cli and aad fwait cmpsb cmc dec mov dec add mov sub daa mov jno mov mull jle call ret mov insb ret lret aaa cmp mov or pop lret add xchg sub in dec sbb xchg adc loope movsl jp imul rcll sti xchg mov pop inc cmp mov push scas push (bad) out sbb fs insb out lds push lods popf xchg out icebp jge fidivl jb loope push sub loope mov (bad) pop (bad) cld test mov cltd imul cltd pop xchg pop dec lahf scas cmp jmp mov stos xor mov std sbb mov and jge out test test xchg mov in push ds and jl push cmp test inc fwait pop pop cli jp (bad) rcl lea dec stos dec lock push push (bad) (bad) fstps out les enter jno add adc push inc insb xor mov jno push aad mov int3 (bad) cmpxchg xor xor js imul cmp pushf fildl js pop test test or loope jecxz inc ret lret pusha daa xor pushf or fbstp out adc shlb jp xlat xchg xor dec dec lea hlt mov popf mov ss gs int scas pop mov mov xor test mov pushf or or sbb popl xchg repz xor cltd push mov push movsl mov ret add je push or jecxz ss clc or jl dec xchg push xchg dec cmp mov add pushf sti push loopne hlt inc xchg (bad) or fildl idiv mov jnp push (bad) loopne fs jle aas jle cmp dec ficom sbb xor inc (bad) add jae aam adc mov bound sbb inc jno pushf repz mov fisttpll push mov sti sbb daa xchg outsl fisttpll mov xchg xchg pop cmpsl fimul (bad) int3 inc arpl mov int add bnd adc and mov lahf test pop cwtl int sub (bad) std mov sahf vmread jns or loop adc lods or (bad) mov lods sub cmc mov mov push pusha push xchg movsb cmc xor subl imul mov scas fcomip int push subl inc and inc sub jp imul mov fnstcw ja inc lds cld and mov lret dec cltd and repnz je xchg outsl arpl ja out out push mov ljmp jp test mov push jg jno fimull fisttpll cmc test and inc fidivrl and push push fstpl in fwait rorl mov inc xor cmp push in inc push psllq add pushf bound dec mov push adc inc mov adc mov sarl fisttpll popf jno cmp mov leave popa adc inc xor (bad) jne aad mov sbb mov mov mov out dec and xsaveopt sahf xchg pop or xor pop lock cld mov (bad) mov push divps cwtl mov out imul jb outsl jno fs pushf inc cmpsb mov or ljmp mov nop aad mov adc and or test popf mov (bad) aaa adc inc into add roll sarl lea fnsave mov scas in xor ret cmpl jno lea jne mov xchg jp push or les xor (bad) movsb dec sarb jecxz lock jmp mov push push (bad) movsl fisubr movsl adc (bad) jo mov ret popa pop jp movsl dec imul pop sahf jge cli xchg sarl and aam xchg subb ja std cwtl xchg ljmp int mov pop aas xchg cwtl jg mov test jae push ja xchg fwait repnz xchg sti push inc mov bound (bad) sarb adc xor es into jecxz addr16 push dec jo (bad) xor andl arpl jp jmp xchg mov add lods (bad) aaa aad (bad) jle insb int shll loopne mov sub hlt aad sahf sbb aaa or call lods shll xor sub xor adc out pop mov pop sbb imul push mov push push aad lret push jo jbe sub mov (bad) gs aad popa idiv and das out in cmc or pop jo inc addr16 leave pop out pop mov aas mov cmp ljmp xchg dec mov int3 shrb sub sub loop lahf jmp or push hlt in sub add jmp insb pop adc or xchg jg fmull cmpsl pop push and mov add loope mov dec cmp sbb xor pop dec in movsl dec jle incl stos mov cltd add repnz in jle lret icebp xchg cmp ret sub xor adc dec int3 pushf mov sbb inc aaa (bad) int3 mov mov or sbb push ss jge push shrb fwait and pop popa ds (bad) sbb adc mov lret sarb cwtl aad dec lods loope cmpsb pop xlat sbb test aad push cltd jb andl ljmp insb mov mov in xchg jns mov jnp cli adc je xchg inc sbb lcall ret cmp adc mov ljmp jns test dec scas frstor leave test adc xchg mov jg repz inc cmp or or xor out into loop xchg lods ret pop test add aas outsl std movsl or fstl pusha movsl hlt sub push jo sarl cmpsb arpl cli es insl shl pop lds (bad) jbe lahf jmp lock movsl fldl cmc enter push imull mov std xchg mov in outsb rcl (bad) cwtl jns cwtl (bad) aad adc popa push dec push lcall lock nop hlt insb or pop outsb sbb loop test cs dec stc into mov in push jno movsl push cwtl jbe mov movsb ljmp ret sahf mov pop cmp cmpsb gs (bad) hlt xor xchg gs sbb (bad) mov loop hlt (bad) pusha data16 fstps push push shll enter inc movsl adc xor or outsl jno jae pop pushf fcmovnb test negl dec cmp cmpsl xor pop into hlt dec dec xchg and sbb cmp inc stos test jne cmp loopne sahf clc and (bad) (bad) mov sarl aaa lcall xor daa mov js pushf subl mov mov jp adc mov adc cmp cmp push mov popa iret jmp cmp cmp mov cmp lea push jb mov stos cltd cwtl mov cmp xor inc (bad) in jno stos (bad) in pushf xlat push ljmp cltd jnp dec iret sub jg inc out pop sub lcall inc (bad) repnz iret arpl (bad) sub xchg sub fisub iret xlat sub daa fst push out cmp xor loope (bad) sub lods sbb mov gs (bad) cs movsl lahf push mov pop addr16 jmp cwtl jnp movsl in dec lock sahf outsb (bad) cld xchg mov xor aas mov push push pushf jne mov xchg stos pop or fisttpl push adc insb or cmc xor (bad) popf push cltd inc mov pusha mov or sub add frstor addl pop bound pop inc dec js jo jmp in clc sbb lahf pop out out pop dec adc mov add addr16 pop daa jmp inc fild jle dec adc fdivrs mov sbb popl sti notl aas imul stos mov ja addps or int pop and mov cmc lcall jle mov jp dec sbb inc aas and cmc jmp and sbb rcll inc in dec ficom cmp cmpsl (bad) insb or test movsb icebp cli xor mov cmpsb cmc inc test xchg cmp test xor push es dec iret jmp iret cmpsl adc mov push or and ljmp adc out enter fistp push xchg cmp lds push scas into lea add fisttpll lods dec cmc mov loop std fdivp add iret mov or jo (bad) cmc test sub push push ja in mov int stos aam and xchg push push jle lea in dec lock push insb je (bad) jecxz out push push mov (bad) and test push call sbbl or loopne aaa jnp test and pop nop ror outsb les leave popa test rcrl pusha dec (bad) jbe sub in sub xor sub sbb adc inc in sub add pop adc lcall fistpl mov (bad) push or call std or dec and jge les (bad) push and xchg xcrypt-ctr cmpsl pop out rclb (bad) cmp add inc sahf pop mov add inc pop and add add xchg das out jo mov cwtl arpl jns gs jbe pinsrw int aas faddp add mov mov pop or sub incb insl scas mov das add sub pop test hlt (bad) (bad) sub and jmp push or data16 jecxz popf and xor xchg popf or stc idivb jle call ljmp push xlat mov push call cwtl dec or rorl icebp push jmp sbb stc mov sti xchg push rcll cmc mov lock movsl mov daa inc stc xor push lods es jns test jg (bad) test nop push xor sahf out ja fcoms jp fcoml lds je bswap insb mov inc push out in mov jge lcall xor stc add jo outsl movsb sahf add cltd add and sahf add out dec subl hlt adc push cmp out insb sar cmp adc loop jmp pop sbb dec xor cmp notl mov push ljmp inc cmp inc adc cltd dec int addr16 xchg add and fldenv fcmovne std push in fmull sbbl (bad) mov (bad) add mov pop jle cmpsl sub jo mov dec daa aam or aaa leave dec cmp xlat dec push sub and sub ret js pop call xor lret or (bad) mov or js (bad) mov sbb es pop xchg sbb cwtl pop push insb stos sahf push mov sbb int in ret fs add (bad) (bad) sbb and test dec popa leave add xchg or cld (bad) out lcall fadd jno lods ror sarb (bad) enter cld push lret call push add xor hlt (bad) jno jo ja out addr16 adc loopne shl jecxz add ja adc cmp in push in mov loop negl ret pop xchg or push add or lea add pusha aam out (bad) cmp pop out and subl sti fwait and fiadd mov sub or cld ficomp xor or mov xor mov or stos sub int3 std xor add packsswb pop cmpsl ja inc ret cmpsb push stos (bad) iret sub jne mov add sbb push push fwait and sub mov fnstenv jno mov (bad) and fwait mov (bad) pop (bad) sbb and sbb test jnp push lret lret adc (bad) mov sahf sub mov and imul mov aas das jns aas or mov in bts test push out adc ljmp roll push dec push faddl daa push (bad) lret inc scas mov push test addr16 test les in test adc jl jmp push rcrl loope enter lcall inc xchg insb push popa iret or repz rolb xor jl (bad) lret pusha adc stos add sahf in movsb fisubrl imul and idivb sub or std jp,pt dec inc jle aas fmuls or add into mov lret inc pop inc inc mov scas pop add out fisttpll and fcmovnu push push inc or leave mov inc fdivs or rol xor jns out jge mov loop xor push loopne mov repnz movsl out mov pop notl fldcw mov cmp or (bad) pop cmp (bad) mov add adc sti outsb sub cld xchg (bad) push pusha inc xor add or push dec sbb add pop je fldcw cmpsl out pusha fs adc jge pop mov adc js stc test xchg adc pop pushf arpl imul cmp cmp repz mov fist pusha je jne xor inc inc cltd cmp push mov sub sarl insl fwait int3 cmp in das (bad) in rcll xor mov movsb outsb aad das push cmc cwtl jecxz sti mov fldt cmp xor (bad) iret jecxz xchg inc dec mov adc movsb mov out in adc jp push inc pop push adc dec ljmp stos aaa lret out xor dec loope sub inc (bad) loopne xor jbe sub repz pop xchg insb or fiadd and lret sub enter movsl lret sub cmpsb repnz pop push lret inc mov sub jno (bad) fstpl jge lods ja or loopne pushf dec jns ret mov bound andl hlt test sbb jne push dec out mov sbb bound inc jp int movsl out mov bound cmpsb mov cmpsl push mov fimull xor insl loopne mov sti push out out ds and add xchg jge sub dec adc movsb mov mov pop test dec leave aas adc clc push mov ss xor push ja movsb dec stos sbb mov dec jns push mov push lds fdiv cmp test (bad) movb sarl and pushf ljmp fmulp sbb mov sbb add gs push outsl xchg push mov pop inc ds xchg fs inc mov or lea mov stos dec icebp pop ficompl (bad) fisubr fwait mov pop push fisub loop aas popl add js inc repz faddl jl icebp shlb pop inc sub int3 adc insl mov fisubr (bad) out loop lret adc subl aas push stos inc xor or xchg icebp jl adc or xchg adc mov mov inc jl sub push cmp std outsb leave jno mov jmp repnz or stos jmp movsl lock call fisub rorb mov cwtl sahf idiv mov mov xchg popf cmpl push jmp jg or push ret push mov mov pop rcrl aad dec inc and (bad) xor push lret dec rclb pop pop mov mov fwait jg in or sbb ret mov pop fldpi or outsb in mov test xchg and pusha and lcall imul xchg insl dec sti leave xor mov std fcmovb (bad) into pop daa movsl stos pusha rorb into cmp sbb or rorb std call aaa add jnp mov fildll mov testb int mov xor cmp js out mov sbb jp outsb mov lret repz dec pop jne ja add and loopne sahf jl test fistpll sub add jmp push cmp arpl jge je loope adc mov cmp (bad) and dec mov clc popf leave out xor cltd push inc das mov and sbb int popf ljmp nop pushf jmp jo jo loope push push mov loope arpl add imul enter sub out jno imul mov jb out xchg sub pop mov sarl cmp int mov jmp data16 mov in rorl hlt mov les in (bad) shr add cmpl xor sbb outsb popa loope mov test fs int3 sub pop xor dec xchg add push clc cmp (bad) sub add aaa in mov mov test aaa test outsb sub inc fsubrl push cmp fcomi inc jbe js jo and mov or pop (bad) xor cs jmp cli ss dec rcr or mov dec jmp nop xchg jns xor adc push jp nop jmp push or fsubp loope loopne fldcw outsl xchg or iret jmp (bad) aaa popf test sbb inc aaa out jge hlt push add rorl lret jl fwait jp insb lret lods push out (bad) mov adc aam mov addr16 xor es dec cltd lret adc push add sub inc enter das aam jno sarl jg xchg push inc mov fsts loopne sbb lea ss mov push mov jle dec mov mov add (bad) mov pushf std mov jne cmc pop xchg cmp inc mov push test int pop sahf inc mov fwait mov movsl sub sub (bad) icebp in stc xor pop js lahf mov dec adc rcrl mov lcall push repnz and imul das push aam pop fnstenv fdivrl les pop cli pop adc in jo out xchg fcmovbe pop mov sbb psrad xchg popa rorl fisub or inc loop clc cmp mov orb (bad) (bad) and inc cmp mov shll rorl mov lea clc push into xor and rorb pop or mov pop lahf jbe inc push stos pushf sti outsb sbb iret iret jns and mov jle dec mov and mov push mov or aas mov sub sbb stos jo stos cmp repnz ficompl cmp xor pop pop jbe mov out sub imul mov mov lods adc mov push and push into xchg xchg cwtl push xchg pop out (bad) add cmpsb into xchg mov mov xor mov mov inc lods sub pusha ficom imul push dec (bad) insl ljmp shl aas mov inc icebp movl iret lret (bad) cmp and xor sarb hlt roll sbb push sub insl pop out ljmp jge inc xor popa pop inc adc add pop push and mov xor adc inc xchg fsts jecxz out sub idivb test in cmp ss push pop scas fwait and js lahf mov movsb int3 out mov fisubr idiv imul pop mov jo aam mov xchg pop cli sub mov hlt pushf adc sub push or lock xor xor call insb dec add jl lcall jg sarb pop add stc jae adc out cwtl je and sbb ret dec pusha loope sbb iret js ss jne jle or dec mov and adc jg mov (bad) paddsw mov into xor or in sbb pop loopne mov into or xor out into movsl cmp repz mov icebp xor adc pop rol nop cltd int3 push out fidivl xchg and mov cmpb adcb (bad) push cmp pop stc inc jmp aas or faddl dec rcrb orl or sub mov lcall (bad) and jno in ds inc mov stos add call ret push push out les dec mov dec push rcr jb sub inc shl and dec idivb (bad) push out mov mov xchg sub jmp pop push in add or xor insl ljmp dec ret sbb mov pop (bad) cwtl mov lock test pop jo lock push scas cs cmpsl mov test loope insb lods dec mov add adc sub loope sbb sub xor (bad) jae xchg push push pop iret insb jg mov out mov and or mov jae push push ja lret pop lret dec jbe jecxz outsl cmpsb jbe,pt rorl add in jnp xor add jle jge add subl mov bound mov mov popf mov sub in sub jbe mov aas aas pop sub int adc out adc pushf xchg mov cmpsw mov xchg mov pop scas movsb roll mov xor jbe jmp and icebp fnstenv xchg jle test imul test mov test pop aas sbb js int3 out mov mov adc mov arpl bnd cmp pop mov shll addr16 imulb fwait inc mov out adc test push sub ds movq inc repnz pop mov repnz dec adc add popf push rclb lret stos icebp icebp pop js xor in jl ja (bad) xor sub mov ljmp insl loop pop and mov int clc xchg mov sub daa jns fdivrs mov (bad) cmp and mov sub clc (bad) scas dec xor jns jecxz push imul aas in popl lcall daa dec inc adc movsl (bad) xor pop dec add cli (bad) cmp imul shrl xchg mov in push gs pushf dec push lcall std adc sahf xchg (bad) sbb addr16 jno stos insb inc icebp roll sbb insl stos jl push dec xchg (bad) jne dec mov outsb sbb jb movsl ret dec mov cmc sbb icebp mov movsb sub inc ffree stos or bswap sbb sti js add push push fcompl repnz push lcall mov getsec outsl daa push pop insl inc aas in dec sub lods xchg (bad) push mov mov push lods inc sbb cmp lret rol (bad) ret inc pop mov sbb or pop lods add sub cmp fildl mov and arpl push and sub in into gs mov gs push into not icebp dec add popa aas (bad) push lea test sub aaa popf test xchg sahf jno jnp loopne lock cld cmp stos mov idiv xchg push cmc xor decl (bad) mov push lea repz cmpsl shlb cld inc test fisttp lcall push lcall subb adc sbb or pop cmp mov fwait sbb add js lcall cmp js pop rcrl (bad) jno push inc jb jnp mov sub ja sbb mov push jge out adc aam xlat fildll (bad) push jb ret sub inc fmull rcl ror and std sbb xor xchg push dec push mov push shl daa js xor div sub ret hlt push adc xchg push (bad) fidivr sub sub lock sbb fdivrl dec inc mov je xor adc sbb ljmp sbb pop sarb movsb inc pop mov adc sarb add stc sahf add stc cmp xlat or mov negl ficoml jecxz test xchg insl jmp pushf je lcall adc jae int stos mov int lea fwait ret daa push aam daa daa mov pop pushf and pop movhps (bad) cmp loopne jo int add mov test pop in push inc jne rcrl fdivl mov (bad) stos ja call cli or imul sub cmp sub lret cmp ret push pushw in shrl in scas jne sub (bad) jl or es mov js das es test insl mov push cmp dec pop sbb in inc pop sub sub adc call mov dec lret and mov xchg subb ja int3 daa fs nop ret call in (bad) or test xor add adc icebp dec stos push test rcr aas push nop cld int test xor bound inc fistpll sahf int ja insl push jmp insl pusha mov ja jns xor jge js sub inc pushf nop (bad) xchg jns mov mov cmp mov fidivl into cmp sti imul fcmovnb repnz (bad) insb inc pop add xor xor jae js cmp dec (bad) in addl fwait repnz pop mov bound ret xchg dec inc mov sub dec imul jnp sub mov inc cs inc inc pop out hlt dec add jecxz push jl sub sbb mov sbb (bad) dec or out test jns pushf mov and lcall movsl pop jne dec cmpsb push cmc leave sub mov adc add fs jns lds sbb cmpsb sbb pop mov xchg les and js lods bnd hlt out xchg dec and (bad) inc in xchg mov (bad) movsb movaps fucomip adc mov shr pop add test std and imul sbb sahf sub shll mov and mov xchg mov or lock cld push int3 cmp hlt push inc int mov mov pop mov dec mov sahf cmp or jmp decb in jae adc ret mov sbb (bad) dec out gs mov imul xor and std add popa pushf arpl out sub mov or fmul sub pop jo add dec cmp into and cmp xor mov outsb (bad) dec inc mov insl (bad) dec es inc mov sbb mov lods stos or push cmpsb (bad) xor das sub dec adc aad inc xor ret push pop or repz mov call xor stc ret cmp jnp cmpsb fmulp mov lock and outsb mov sub int cli fstpt push inc and out mov out sub push jnp xor (bad) sub test aas call (bad) xchg mov mov inc or pop nop daa cmp push stos pop lahf scas and xchg aam push and pop push ret shrl (bad) cmp cmp je add popf es mov gs or cmp mov data16 mov fwait mov xor lahf aaa jle push cmpsb pop mov das sbb xor outsb xor fcom mov dec adc mov sub es loop ss adc push lods or inc pushf roll hlt decl or jnp push xchg sbb push fbstp jge or pusha mov loopne mov fmulp cmp mov inc sti loope fnstsw push orl mov jle (bad) or mov sub insl lret jmp test clc xchg sti fstl ja,pt inc dec mov or pop outsl (bad) test repz jge push lods and or mov (bad) jecxz jge stc insb push in jo mov loopne cmp stos jno sbb popf (bad) (bad) mov cmpsl and xor fwait mov dec les daa push outsb jo iret inc popf xchg std push ds sti in std push inc popa je xlat sub mov shrb notl sub ficoml loop rcrl fwait inc cmp pop lret and cmpsl popa dec bound dec mov out stos cmp dec js roll and aam fwait lret mov dec cmp into test pop and int3 cli push jp int aas sbb cmp jle sbb std push je dec test das aas lds (bad) mov jmp sub pop pop call out or cmp fwait sbb fucomp jle inc jbe loope pop pop rcrb sahf push test cld dec cmp mov mov mov (bad) jmp xor sub xchg lret sbb and adc or add in in mov xor mov add (bad) repnz fcomp outsb xchg out fidiv sub int3 ja les loopne sub sub mov inc sti leave sbb repnz xchg dec repz push lahf into mov (bad) sbb push arpl sub (bad) dec in lods fcmovnbe add (bad) adc or mov push fdivrl push out je sahf imul jno daa loopne push push (bad) sub sbb push inc call xchg mov push or dec test bound bound adc pop mov jl sub jnp inc push lods arpl sbb mov pop mov (bad) addr16 xor stc idiv inc sarl jne ja pop and pop inc out dec fildl sub cmp jae repz push int insl lea fcomp outsb lcall xchg adc shrl fucomp lahf hlt subl cmp mov dec sub mov cmp mov fbstp sub push fcoml test insl or mov sbb cmc pop call lea jmp call lcall mov popl ret mov cmp mov jecxz popa pushf pop fidivl xchg (bad) mov icebp sub std icebp das cld add sahf mov cmp test test mov fs cmc add pop jg and mov imul cmp mov adc pop push loop or xchg ror mov data16 add sub add push out mov push repz jmp loopne adc fild and outsl cmp jno inc dec pop sub int fstl call add jnp sbb add cs pop fcoml ljmp insl sub lds insb cli mov dec sub mov mov xchg or out add (bad) mov adc insl sub lds pusha xor rsqrtps push jmp xchg popa cmpsb stos lock pop popf mov inc dec adc rolb cltd jnp sahf sbb lock fwait inc (bad) mov in push mov mov sahf cmp xchg jo xlat dec idivl push jecxz mov mov mov (bad) ljmp mov call push cltd push movsl xchg sti jge fucomi pop in int in mov mov xchg mov icebp sbb fild icebp jmp sub xor mov xchg xchg xchg (bad) push ficomp dec lds lahf mov outsb xchg (bad) push sti mov sahf or decl cld fisubr (bad) ja in daa cmpsb int xor sbb ss stos negl gs jl xchg xor repz je sub adc or fisttpll or call loop js adc cmp cmp sub sbb xorb and pusha xor aad mov mov aas adc ljmp dec pop xchg cltd in mov push mov lds fidivl ret pop fs clc inc push cmpb lret push jge push rcr sub dec js mov test in cmpsl cltd and and cli ljmp push mov ret das jmp mov pop inc lret xlat mov scas les ret mov inc scas mov jbe or sbb xchg bound push cmpsl aam dec dec scas mov jno push push mov enter repnz stos xor dec or (bad) and mov or cmp xlat dec add add lret adc xlat inc xor sub out mov iret and mov je push xlat dec and (bad) sub cmpsb xlat inc adc adc mov or xor inc add aad cmp or clc push dec test fwait neg imul cmp dec dec adc lods neg cli fs (bad) mov push or mov mov enter xor add fcmovb or imul add pop adc cmc es imul jle inc movsl pop lret mov jae test push jle jle,pn mov daa (bad) testl mov cs jno lock or gs ds cmp jnp add aad jb add push movsl cmp fwait xor mov mov aad ret pop imul or data16 out adc mov clc push xor or ja idivb (bad) push push aas (bad) notl xor dec xor loop cmp jg jbe cld push adc movl iret les pop lret ret je xchg rcrl shll movsl push aas iret outsb pop push and idivl cltd pop ds aas lds out outsl sbb mov sbb xchg mov aam out mov mov push stos mov pop pop dec mov cwtl popa xchg jp sub bound jnp jb orl and mov cli push sahf lret fisubr lcall pusha or jns mov mov ret jbe mov int mov push pop in cmp call cli popl js cmpsl lock repz cmpb dec ficompl call or imul call rcl rcll enter inc mov xor enter insl movsb call test dec insb pop mov rclb cmpsl jg xor inc imul mov mul clc pop clc push sbb jecxz push push xchg xchg test rorb xchg fwait les aad jp lods jnp loopne add stc dec cmp xchg jns in aam jb sub xchg mov xor je js inc pop inc mov cmpsl loope xlat fwait in mov adc test shlb repnz jp movsb in inc scas jl loop dec push stc cmpsl lahf call fwait jmp fst (bad) imull cltd mov test test adc test in pop mov incb fsub call std insb sub mov fsts fwait sub mov mov popl jo fcomip shr cld into stos les add out jmp mov mov (bad) or addl mov fstps aaa mov pop call sti in mov dec xor nop rcrl cwtl sbb fldenv cli outsb aam xor ret loopne ret aam add cmp or in xor inc inc or push cmpsl lcall dec mov mov sbb in xchg or arpl (bad) cmp sub xchg adc inc mov jns mov addb rolb or vmovdqu or aaa inc hlt mov lods (bad) (bad) lock cmp mov dec or mov cld dec mov adc bnd ljmp adc jmp or std mov aaa enter or ljmp sub nop sti stc lahf inc test stos push sbb adc add das add pop sbb jo lds daa pop fsubp aam cmpsl cmp or mov sbb sub mov inc adc mov ret scas enter imul xchg pop call pop xchg shrb cltd or push xor mov jmp cmp (bad) es or jo and inc adc stos (bad) outsb mov add imul (bad) aam lock or ffree out add in inc out pushf jns mov leave sbb xchg nop jg mov stos push cwtl jns mov sbbl mov fdivrl clc loopne lock (bad) sub xor ljmp adc mov out jno idivb cmc imul dec data16 pushf lods inc inc lahf imul pop inc addr16 mov sbb icebp inc jle cmpsb jno mov call sub xor cmpsb pusha adc mov mov (bad) dec and mov cmp mov nop mov loop int sbb fisttpll lods sbb mov pop es lock sub cwtl push enter pop clc jne les loop cmp mov lock dec mov sbb mov sub ret cmp lock enter lds or push out pusha loopne fstpl or fmuls rcrb js cltd cmc or inc inc ret mov ljmp bound mov inc pusha fldenv or inc (bad) loop mov mov rorb (bad) ret scas lret stos insb lret in mov cmp (bad) dec in js dec dec int3 sbb or out shl mov or leave cld mov addb fucomip mov mov jp inc leave fsubr inc fcmovb mov or mov cwtl or jl imul lret mov js aam push jmp stos leave test pusha fmulp sub (bad) xchg mov sub mov adc in mov js inc xchg cmp mov pop rorb xor lcall pop sub out adc pop mov pop out add ret int3 imul imul cmc cmc lods inc and in fist imul dec fprem test test ljmp pop int3 mov sbb pop push test repz xchg in cwtl ljmp js popa enter enter inc popf (bad) movsl fnstsw test lods in lods mov adc jae movsl fs xchg xchg jnp aam stos aad repnz adc imul jb mov sub (bad) ljmp dec aaa (bad) sti (bad) fldcw pop mov out sbb dec movsb inc repz out popa xchg cmc fisubr test aas mov imul movsl movsl dec and and dec lock inc jmp mov push add in inc sbb loopne cmp dec rcl jmp pop pop (bad) dec ljmp and stc mov in cmc pop xor or dec sti ficom and inc fistpll jmp stos and data16 bound and jo (bad) mov pop jae test jne push cmpsb lret mull fmuls sbb adc and data16 out iret cmpsl push cwtl sub pop mov cs (bad) or dec loope shrl mov or (bad) ss and or xor xlat cmpsb xor adc cmp jg sbb add push arpl add incl mov insl roll loop (bad) and imul ret sbb add (bad) out lcall scas lahf sbb pop xor into xchg roll outsl cs push jnp arpl mov js inc jg mov push lahf sub xor les mov cmpsb mov mov ss pop and sub je mov adc cmp xor fucomi and je lret mov fcmovb dec pop repz push cmp xchg sbb dec or ret inc fisubr jg push sahf sub mov and push inc fs xchg subl mov push or mov inc jp js push mov (bad) push shrl or jp cmpsl stos dec test loop or jne insb out js mov adc out pop adc hlt jae fs mov jbe pop mov xchg push inc sahf mov or jmp dec aaa call sub xchg sar mov mov out (bad) (bad) ficoml insb sbbl mov aas fsubs xchg loopne xor and in test test es add in mov pop jecxz mov das mov fucompp xchg ret sub jns mov dec sbb and pop aas loope mov stos add (bad) xor fmul cmc push fnstsw fstps or inc cmp cld jb and ss jns pop mov mov (bad) jbe cli xor pusha test mov xlat or into sti ror dec insb mov and iret pop ret cmp xlat dec add mov push mov mov jle (bad) sub call inc sub daa cwtl insl fnstenv ror cltd data16 out xlat sbbl fidivl inc jg daa mov mov add es push inc loopne js xor (bad) fwait and stc out cmp clc pusha push (bad) jg pop jmp dec fst jge mov nop (bad) xlat lret sub std adc push pop cmp es dec (bad) xlat and imul (bad) idiv push out mov lods xchg (bad) xor dec or pop lods imulb aaa push inc inc std pop jnp clc cli jns js sub mov out mov xor loop jnp popf xchg aad sbbl lea xchg pop push iret inc push mov int incb and enter inc lods insl jle rcl pushf cmp jp adc xchg mov lods mov or fidiv lret pop sbb sbbl lods roll inc and push enter cs insl imul mov and ss insl pop sbb sbb std xchg adc daa dec stc sbb push push in int mov mov ljmp jae jmp cmc or jmp movsl xchg fcomi mov xor in mov loop ret adc jecxz add (bad) pop cli mov push das icebp gs xor sahf mov sbb and loopne mov mov adc dec jae fiadd scas mov popf cmc cmc pop or es push lret test mov xor inc sbb stos adc insl repnz mov jle fildl out scas outsb push out popa outsl mov mov adc stc sbb rclb flds jp repz (bad) dec push mov fwait xor and xchg (bad) (bad) imul add lds lret mov out jo mov (bad) and das sbb aad xchg (bad) adc mov (bad) mull repz js hlt mov xchg or cmpsl cltd xor scas mov xor mov adc cltd cmp push je rclb pop pop fdivrs hlt and cli popa pop adc mov mov cmc pop jmp fcoml int3 andl adc adc into mov jo push mov xchg data16 pop addr16 push or pop cs sub ds xor daa mov cmp and add out jp daa out lcall (bad) out adc and cmp mov cmp sub and cmpsl mov pop pop xchg xor adc push mov mov adc lds shlb inc xlat repz fwait ss inc sbb movsb test cmp jb daa repz jge cmp mov sbb mov jle and icebp xor adc shrb inc mov pop mov sti push int3 cwtl sbb les (bad) or test lretw sub sarb sub jo int3 (bad) cltd pushf jb clc sbbb sub mov enter addr16 mov sbb repnz out imul mov mov outsl inc mov cltd movsb ret sub ss scas mov cli out stos ljmp pop sub fcmovne rcr push movsl dec or mov div pop xor fcompl psubd imul mov xor stos push into or cld cmp mov or sarb lock (bad) (bad) sub mov jmp clc out inc cld fsubrs call in jno inc shr clc dec fwait call int in enter push std lret mov dec adc jnp ret sub cmp push mov lahf xchg xchg dec and in sub mov cmpsb (bad) sub sarb lret into leave ret fcomps test ret imul imul stos adc fdivl or dec fiadd jp push add dec shr xrelease xlat dec and repnz xchg xlat mov or sti sub pop sub not dec add push movsb cld or push mov adc xchg lods push cltd fprem ret add not jnp xchg negb mov aam sub mov jmp lret test mov mov stos notb mov lea fisttp insb neg sub fs pusha notb mov sub pop add pop dec lods notb nop cmp ret test negb mov push adc movsb notb mov cmp fucomp cmp lret fsubr fadd dec xchg lea lret cwtl in or pop push fisub lret adc mov test mov mov inc ficompl and aam jp dec or lcall mov mov dec cmp mov mov aaa adc push ja iret add pop dec push xor jge sahf les jecxz jg aam cmp (bad) xor les enter xor loopne sub xor stos addr16 int mov and inc cwtl and stc mov fisubl xchg cmp aas int dec xchg push js aaa int3 test push divl mov std daa cmc ret lods (bad) int mov clc xchg (bad) cmp cmp dec lret xor cmp sub xchg dec xlat adc test roll add cmp mull test (bad) inc repz xlat cmp mov or mov aaa add pop mov jae sub mov daa cld cmp xchg (bad) or repz lock pop sub (bad) sbb mov sub daa jb jg sbb and ffree stos jns mov mov call ja mov imul cmpsl cmp xor aaa inc iret pop and push jge cld inc mov xchg and idivl nop add mov daa pop out loopw in xlat cmp jb (bad) cmp xchg or mov into pop (bad) inc and hlt push pop jns mov aam xchg or lea fstl (bad) aaa (bad) mov leave jecxz sti xchg ret sahf mov aam test inc aaa pop jge mov out outsl lret aaa mov loop mov mov popa cmp mov repnz aaa (bad) adc sub dec mov pop dec xchg cmp dec xchg cmp aaa leave outsl mov cmpsb xor aaa int mov push sub dec pop rol cmp and or fistp std pushf out nop ljmp leave in cmp inc add addr16 push mov cmpl test lock pop sbb daa cmp icebp ds enter aaa dec lret clc stos jg mov aam mov pop cmp lea dec cmp lret test add fisttp (bad) cmp dec out ss or clc xchg inc daa dec daa (bad) ja cwtl add addr16 mov fistpll jo daa fnstsw mov das aaa int3 fimul mov aas push out test mov pop ret xchg cmpsb ljmp dec push es mov daa mov scas icebp mov jl cmp cli mov lret leave adc mov or push cmp push push push mov sar inc sbb mov cmp fcoml (bad) jle cmp xor in fucomi cmp cmp pop test inc mov mov xor mov in in jnp pop add and dec enter in mov call (bad) aaa and jl xor jge dec mov aaa andb addr16 pushf mulb xor cmp fscale pop mov lret or aas mov rcrw stos aaa test insb mov mov inc inc and pop daa jnp stos push aas mov dec hlt xchg pushf ficomp push sbb mov into jp mov jne mov adc mov fildl mov int pop in fcoms iret ret ret mov mov scas inc cmp repnz fiadd cwtl sbb int pop loopne mov xor int3 pop in test js inc cmp sbb add test dec mov movsb std lret out popf adc xchg (bad) mov jo pop mov adc clc dec pusha lods test mov imul mov mov mov ljmp shll js ret fcomps addb inc loop repnz cmpsl mov (bad) data16 mov ljmpw pop dec push cmp js mov outsl aas pop lods stc bound xor push cmp sub and add xchg cmp dec (bad) inc ret fildl pushf rorl adc xor dec ljmp cltd lret sbb xchg pushf popf int3 or gs nop pop inc lret sbb lods sbb into fdivrl add (bad) jns lret std cmp (bad) outsl cmp fcmovu test mov or inc hlt mov mov mov call dec lods dec cs fcomip into add mov and shl test jl stos xchg sub (bad) pushf xor std into movsb jg hlt add pop ret pop mov rolb cli btc imul jmp (bad) dec aaa sbb das jns stos sub pop fdivl (bad) cmc stos testl pop pop cli and mov pop adc jns mov push je jae hlt jge stos in xor push dec mov push in (bad) dec ds enter arpl or jns mov mov into cmp repnz adc mov push shr push add imul sbb sbb sbb adc mov (bad) stos in push pop popa add into mov push pop inc add dec (bad) stos xor xchg lret fcmovnb lea xchg mov lock xor (bad) (bad) sbb pop hlt and movsb push cmp or xor test jb xchg or repnz aas movb shll ss hlt sti push les push mov xor neg adc shl sub pop and push clc add insb jns gs adc mov pcmpgtw sbb popa mov daa test lods cmc (bad) (bad) cld (bad) mov mov in mov fsubrs stos into (bad) stc ret push scas and mov mov ret repnz mov iret lret ret cli mov les xor ret or sbb cmp ret dec ds add add (bad) test xchg movsb in push fld insl pop aam (bad) mov mov push jo mov xor nop pop adc hlt mov rcr xchg fcoml in out push fdiv mov push adc sbb idivl mov dec mov inc mov cli inc sub mov pushl mov mov data16 dec push push push push adc xor sbb or pop sti scas add sahf arpl cld or push dec dec dec ret enter enter insb jmp dec repnz add mov jecxz mov mov dec mov (bad) fmul loop nop test and (bad) idiv ljmp (bad) popf mov fwait cwtl push fisttpll mov imul pop jmp int sbb outsb rorb cltd lea outsb mov adc ror xlat cli pop in enter push push inc icebp mov dec sub out mov xchg xchg clc pop sub sub xlat les clc cmp int enter pop loope sbb inc mov push (bad) pushf and pop push xor clc out int cmc (bad) into jl sbbb (bad) out aaa daa int inc mov fisub sbb xchg test xchg int3 call sbb xchg int3 loopne push dec xor loope inc aad call pop dec mov push out scas add sbb rcrl imul push lret fsubp leave imul lods mov pop sbb cmpsb and mov push inc iret cld test scas loop push add fstps add test or jmp in inc xchg sub lods lods dec int fcompl das (bad) fxam (bad) frstor test lret ret push pause cmp mov push push rcr call inc fdivrs stos dec ror sahf lret jnp ret call cwtl dec int3 adc pusha iret aam xchg nop mov in into clc imul or out inc cmc push or fs hlt inc shrb adc test dec mov sarl adc add les leave add mov push ret sbb pusha outsl or fisubl mov xlat fldcw xor das cld mov cs xor nop adc jbe js jno jbe inc pop mov mov (bad) xor (bad) jnp rcll hlt mov (bad) mov cmp inc cmp jg sbbl scas cld and push mov in (bad) mov pushf clc shr xchg push bound push mov out cmp add (bad) pop pop xor leave aaa jecxz mov dec mov xchg push pop pop sahf test jmp sbb mov add add push divb int3 inc sar mov ljmp in in loopne pop pop jecxz cld or add pushf ss mov nop (bad) divl cmp jne inc bound xor mov push and loope dec cmp aas sub data16 (bad) lods negb xlat mov sbb rcrl sub test js mov jmp je js jo pop jle in mov sti cmpsb loopne add bound push insb lea sub jbe pop and lds or inc dec push sub jmp jge mov cmp xor jge mov pop out xchg int xchg sub out mov mov push mov fldl jo mov outsl xchg xchg dec or leave dec ret inc dec aaa inc cmp icebp icebp setno xor add mov call mov xor aas mov repnz jo imul insb xchg cmp out mov mov out push outsl fistl outsl (bad) dec inc xchg (bad) mov (bad) xchg mov out aam dec inc cwtl or xchg pop out notl int3 cld fs pop cli dec lret aad (bad) pop fstp add mov and jo insl (bad) pushf sbb mov push scas and cmpsl pushf sbb mov insb xlat fcmovne (bad) push or and xchg jbe test xor pop fcmovnbe mov rcl movsl inc ss inc xchg (bad) mov xchg pusha std pop out (bad) xchg pop dec jp test fcomps mov (bad) xor or ror add cmp mov arpl jbe shrl mov subb ljmp add xchg jo ret or loopne cmp adcl or pop and inc stc fldenv in imul dec lahf ljmp cli mov (bad) mov and sub dec in pop loopne fdivrs (bad) imul mov cwtl cmp jmp pop sbb (bad) stc (bad) adc call add (bad) mov and out mov mov aaa jge fldcw aad jo push call into popf mov jo out aad aad adc jle jp push les cmp xor sarl ljmp fnstsw insl sbb movb push and cs outsb dec lret jg mov mov mov sarb and stc aam inc fucom lcall in repnz test mov inc out xor cmp daa jns dec and push iret mov dec inc mov loop mov dec jae jecxz fidiv sbb push inc repz jle sahf mov scas cs inc xchg stos mov mov test rorb insb (bad) sbbl pop nop cld enter cmp jp add mov test and sub dec pop jmp push mov jle or add call jno movsl stos movsb jno rolb mov pop pushf loope test dec movsl jg imul inc rorb lcall movsl add cld es push imul pop in (bad) lock aad clc sbb iret jo adc jbe ljmp jl or outsb jbe fidivrl inc or dec aam (bad) loop cmp loop mov jmp jne xor dec add cmp dec cmpsb cmp test xchg dec pop loopne adc nop inc flds xor xor scas fstpt pop cmc inc out shrb mov test (bad) int rolb ja mov pop xor or dec or add inc sub insb push hlt mov or sbb inc fcmovnbe outsl mov loop inc pop out dec xor push mov xchg fnstcw sbb mov add sbb sbb jnp xor in jbe (bad) mov adc xor (bad) jnp insb iret xor (bad) jno add sub js push outsl pop pusha (bad) cmp outsb pop adc push and jae mov cmp jae sub ds mov shrl jg push scas xor mov iret cmp scas int ds lret cs or nop push in pop test sbb movsb jo dec dec cmp rclb cltd insb inc decl (bad) cmp mov jg dec and je pop in shrl lret in iret insb in js ret ror xor sarb pop push cmpsb sarl dec arpl (bad) rcrl loope jb or push cwtl add out fisubr int3 gs dec xlat jmp clc xchg fcompl into xor sub add mov jmp ja xor pop add fs divb out fsubr sbb mov inc mov jmp das (bad) popa fldln2 sbb adc stc sbb cmc lahf inc in xchg shlb jmp pop test mov mov jmp cli sbb mov ret push jl ret inc fsubr out clc push enter mov sbb rorb mov ja enter insb fwait int3 loope int xchg ficompl adc mov sub sub lock xor add test pushf or repz sub dec xor ficoml mov jmp cli sbb (bad) jae ljmp loop popa shll scas sti push test sbb mov fwait mov jmp push adc imul sbb lret cs cmc enter mov into jns mov stc jno enter andb push stos into jae adc (bad) mov andb ljmp xchg imul ror push in sbb cmpb pusha in test (bad) rorl xchg into enter es mov pop mov add and sahf repz (bad) xchg pop imul test sbb lea testb ror clc inc sub mov push (bad) test inc dec sbb test out outsl xorl mov (bad) or or mov inc mov or mov mov mov dec or and stos clc mov iret cli push rcrb leave xchg ja inc aad inc sub fisubl push mov mov and cmc sbb jg push dec decb rcrl les aam xchg xor stos inc fs vunpckhps mov aaa fsubrp xchg or sub popf inc fnstsw mov (bad) mov mov clc insb pop outsl ret xchg loope movsl xchg cmp mov xor aam dec es shrb jo jmp sbb lods out stos icebp push jns sbb pop fnsave inc push xor cmp out stos mov mov sub (bad) into andl out in test fucomip ret scas add cmp outsl adc mov stos enter xor mov addr16 rcr dec (bad) imul pop dec dec pop sub insl outsb add sub ss aam xor mov imul fdivrl ja loop enter in movsb mov int3 jmp cmpsl fsubs insl (bad) mov (bad) mov mov push (bad) ret sbb int3 push scas enter insb int sub jns pop dec or mov lret cmp xor push lods out scas icebp test repnz fincstp mov or add push xor inc repz add ret test inc add sub dec lds bound enter mov or out in sub stc dec push ja add fcompl jg push cmc push leave mov clc mov add inc mov (bad) fsub into dec aaa jns imul outsl add repnz je xchg cmp adc xlat icebp mov sarb dec subb jno mov xchg dec out (bad) (bad) imul pusha xor aaa iret adc inc dec adc fcom mov pop fsts ret lret push enter jns lds inc mov jns and lock xchg mov pop jp jmp dec lret imul sbb pop enter inc adc jmp mov dec cmp stos jnp xchg scas push inc leave aas mov test lock loope rolb call sti jmp clc jb add in pop rcrb stc xor mov add xchg test aam mov pop inc or adc scas sarb sbb lret in out clc dec popa mov push pop sub push fadds (bad) mov fsubr clc int3 mov arpl pop lret (bad) and lods xchg outsb add mov adc insl adc scas shlb push fcoms iret xchg negb insl xor ucomiss inc movsb pop mov jns test cmp pusha adc adc iret adc dec rcl push loope test or enter in sub (bad) push dec std mov test ficoml call test test lret mov in into ficompl clc (bad) data16 dec mov aad mov add test int nop sbb test into fcomps lock push inc (bad) ret test push xor jmp or dec dec sub dec xchg cmp pop cmp into in out xor pop int3 in aaa shr imul xchg add dec jecxz mov mov dec outsl xor jbe icebp adc xor jl cld js push add and lret mov int out cmp sti cmpsb int (bad) sub cmp dec fnstsw mov jne int3 mov sbb in das cmp (bad) or push mov xchg outsl in add ljmp aas add add jmp xor xchg sbb inc sbb test push pushf xor xchg movsl aaa (bad) jecxz pop lret inc cld sti jns ljmp dec add push jmp mov cmp ja std push je inc inc std sbb dec (bad) or (bad) pop xchg data16 lock aam and push int3 cld fs sbb cli cmp cltd mov mov cmp jnp in jl out loopne mov out test in iret int3 sub out add push or mov dec sub add in sub hlt dec pop lcall pop xchg pop jp or mov pop add incb xchg fcomi mov mov test lea adc nop nop (bad) dec cltd test sahf add push in sub cmpsl mov dec hlt jo clc hlt pop jmp test add repz movsb and dec sub mov dec test jne dec dec aaa stos lret pop repnz fs in cmpsl ss jae out popl fisubr xor ja cltd inc mov mov out sbb jmp int3 call inc daa fldl sar pop pop cld xchg test lods out int subb sti leave ja xlat (bad) xor dec movsl enter and shrl jb or test test lods sbb lock lods and scas sbb lds sbb ds clc iret into cld sub clc jmp les shl fidivl (bad) or pop jg and roll cmp inc fistpll xchg sbb test xchg and ffree call xor cmp not fimull mov pop add fiaddl es aad fwait push mov pop (bad) add int xchg mov ret mov dec mov inc aad into fisttpll (bad) mov ret ljmp repnz shll push pusha int test push mov sub mov insl test into mov cmp cwtl ret je mov incb mov aam in rorb sub jno rorb loope call loopne imul leave rcrl dec leave out lret pop (bad) aad push dec fcmove loope rorb sub lds in dec roll loope rorb int fsub mov mov pushl dec roll rorb jo sbb int3 loope rorb dec mov leave lret and rorb mov mov (bad) pop mov mov mov dec rol test dec rol test dec fxch insb fwait shrl enter mov mov (bad) std dec roll fcmove call int3 call in in rorb call in dec roll loope rorb pop out push std dec rol sbb int3 loope rorb leave lret xor rorb dec roll out std dec roll loope rorb push scas dec ja lret nop enter jmp rorb mov jp outsl cmp repz movsl mov and cmp rclb add (bad) jle jb aad add sub sub adc xchg loope imul xchg add jno xor push cmp notl popa cmp cmp out mov adc mov mov lcall sbb pop testb sub inc xor movsl pop jns nop mov push and dec add cltd xchg pop test cmp mov cmpsb out hlt xor xor inc mov push jge psllq push cs pop in dec pop jns sub cltd mov cwtl mov push lcall inc xchg gs jmp out inc in ja pop pop mov test ds mov pmuludq out mov addr16 add out sub rep addr16 pop (bad) sbb iret add scas jecxz iret negl test mov ret lock mov imul xchg insl hlt loopne lcall adc inc insl mov pop dec inc mov jge jne adc scas mov js cmpsl fwait js stos shl addr16 adc in mov adc jne in pop nop pop out cltd mov mov xchg mov jg adc adc mov mov or cmp add push push into movsl inc pop push xchg push addl mov pop decl inc mov ja jns jge pop adc add sub xchg cmpsl xchg repz and cld sarl cmp jbe imul ljmp enter and lret aas mov cmp lret jecxz icebp sbb adc inc sbb and add nop ljmp push dec fprem1 in xchg in xchg mov xchg imul mov jns stos mov inc in jl add pop out mov adc das and add mov xchg jbe je mov std sbb cwtl out bound sub push or out jecxz and push adc cmc outsb ja jg jae repz sub lods jne jne jae sbb jno stos lahf push fs push pop mov pop (bad) cmc movsb inc adc and adc lods inc lods inc lods mov je jo test mov sbb andl fs (bad) xchg mulb fldt push out inc lcall cmp mov arpl rol pop push mov inc or pop cmp stos mov loope pushf test pop add dec adc scas inc scas inc scas mov cmc sbb adc shrl sbb popa sbbl aad stos xchg ret adc int3 cmp stc insl mov pop out pop mov xchg test orb push sbb out add movsb arpl jb jge push push adc adc sub xor mov add cmpsb sbb (bad) scas push push nop mov ds movsl ljmp dec aas (bad) pop jbe sahf neg ljmp sbb scas decl jg jnp push lret jge sub movsb xchg push rcr test mov std xlat mov xchg mov mov mov fidivrl mov ja pop dec ret test faddl rclb xor stos push xchg sbb sti sbb push cltd push and inc stos or and js jle dec stc fisttpl nop mov stos add push mov pop xchg push or shll xor icebp mov xor dec imul lds jecxz mov leave dec add jl jae iret out sub push mov fsubrl dec pop sbb mov out push nop adc inc cmp xor mov (bad) and fildl inc in mov cs adc (bad) push lods and inc or sti imul xchg push cmp je imul and leave pop xor dec fnstsw lods cs xchg and je push mov sbb xor mov cwtl cmp jb in push or (bad) mov and or addr16 outsb or mov testl mov decl out (bad) mov jp mov xor xor sub sbb xchg adc outsb nop (bad) lret pop mov jnp sub aas pop push push cmc mov sbb movsl or or mov mov or out divl dec pop push or insb ret orl add mov outsl nop in pop jmp inc and js fistpll xor ljmp (bad) jo inc push shll (bad) ja mov dec addl repnz mov shrl scas jmp pusha cmp (bad) jecxz imul test and cltd sub ss out mov fisubrl jge and mov adcb inc pop clc shll out dec dec pop push mov or inc mov ds (bad) xor mov sub test jno addl hlt mov mov fisub lock loope in loop icebp sub sbb adc xchg xchg add xor pusha cli clc mov (bad) aam leave dec push mov negb jb lahf (bad) xor and jb in fistl or inc addr16 xchg mov mov dec idivb cmc nop (bad) jle js and mov ss imull clc xchg clc and mov push sub jp test push mov pushf dec cli jo std gs cmp ret negl sub aad xchg adc mov es add mov push stos xor xor bound mov loope mov mov das fadd mov dec (bad) loope pop (bad) sahf psrlw add das xchg lahf pusha jge mov cmc add sub sub (bad) xchg pop sub mov jl push jne sbb xchg test xchg xor xchg adc sbb imul sar pop (bad) sub dec push punpckhbw jno mov (bad) scas inc repz jp stos dec cmp xor xchg adc jmp rcll addr16 jne nop and inc xchg lds cltd xchg (bad) jl and adc pop shlb adc adc add cmp (bad) or fsub push stc cwtl push mov repz sarl pop mov pop lds sbb push cltd jne sbb shl sub dec push test loope pop sbb data16 icebp adc sub mov mov loope arpl mov jle xchg push outsl push xchg add mov push insb jle lcall pop das push sbb mov xchg inc fisubr out jle push adc fwait add or mov and fistl (bad) push or jl sbb int dec int inc cmpsb jg pop xchg mov push lcall sbb sbb mov das pop sub push out test lds inc adc cmp lret pushf ss subl add (bad) imull sub (bad) mov loopne jmp and insl dec mov xchg mov or mov js hlt and dec fdivp movsl sub or aad sbb cmp or lods xlat xchg mov push popa jo ret cmp xor mov xchg jmp sub std adc xchg inc std pop fucomp outsl mov xchg push pmaddwd cmc mov mov mov imulb fwait mov mov orl out jg xor test jbe pop adc mov and mov pop sub jne jl shlb push xchg pop push js jge nop adc ret or jmp ds push subl push dec mov mov (bad) mov popa movsl push int3 xchg movsb aam (bad) pop (bad) pop fiadd jns jae xor pushf lods andl pusha or and pshufw mov ss push (bad) or test fdivr add pop adc ret ljmp dec mov movsl adc mov pop pop es mov stc or in adc and fnstenv jns mov rep cmpb jle sub push mov xchg jb sarl mov inc xor jnp dec ret inc lods dec enter push in rcl add xor ficom inc push sub push jno xchg lret aam adc les ds mov test adc shrl rol fidivrl sbb add mov xor jg flds (bad) jae mov pushf fwait add outsl mov repz stos ret pop js fdivl mov jne adc idivb bound mov (bad) mov cmp push test popf popf inc push lahf ficompl in or add fbld enter outsl fnsave repnz pop or mov imul idivl push mov in out addr16 scas (bad) popl dec jne jecxz imul outsb sub lahf or jle fcom adc push (bad) jmp lea out pop mov cmp dec jne (bad) sbb lcall stc add mov jns loopne mov iretw fldt dec in faddp xor adc out cmp fisubr stos icebp sub mov mov xchg inc xchg xor jmp pop into and jns pop inc mov or push sbb rclb adc cmp xor cmpsl std push lods in and outsl push cwtl stc and adc xlat pop jbe movsl fstl or inc mov outsl pop adc jbe sub dec lods and imul xchg pop xor cmp xchg inc fdiv test push mov pop cmp aam push lcall push adc mov movsb out dec and sbb in pop loopne mov lds add cmp xor imul shlb mov and cmc inc mov xchg sbb inc repz in adc cmp push push cld in outsb (bad) mov xchg xor push sarl mov adc xchg pop clc sub daa lods adc sub out mov out add sub popf mov sahf and jno pop sbb cmpsb cltd sub cmp jne (bad) sbb xchg jecxz mov mov pop ja and push xchg ret data16 sbb out cld pop in jae xchg adc daa sbb (bad) std pop mov arpl dec sub push inc jp push push sub div clc jo std sti popf fldcw fwait mov xchg and inc lods pop adc ss repnz or pop notb adc clc je mov in aad dec sbb mov sti nop sbb pushf adc pop push and cmp nop in inc mov add sub and push mov cmpb in sbb jb fist addr16 inc or (bad) adc lcall add dec fiadd xchg ljmp fildll jmp xor lock inc push jmp int3 mov test dec addr16 xor mov mov pusha adc jmp and mov push cmp scas dec push push inc mov loope sar test adc inc lods sub test jge adc pop fcomip ficoml es fidivr fucomp cmpsl push inc jmp popa lcall push mov hlt test aad mov add cmp repnz lds jl lods cmpsl fiadd das clc and mov daa stos jmp neg cld sbb pop dec xchg mov subb mov outsb cld arpl push int pop outsl inc fimul pushf leave sbb and scas add xlat xchg adc xlat lds mov cmpsb (bad) jle xor cmp push or mov pop sbb lcall or jmp push pop push cmc in les les outsl std inc mov ljmp jae cmpsb ljmp (bad) push mov je or mov jmp push add mov inc xchg push les xchg ret jnp sbb xchg scas cmc jno std sbb push add imul leave rcrl repnz cmp outsl cmp sbb ret insb add dec pop fcoms enter sub imul dec or adc xchg cmp adc mov ret popa fdivrp mov pop in add dec adc mov fild push shrb mov jns rolb dec in sbb or push sub lds push mov test cmpsb int jecxz lret (bad) mov lahf mov bound hlt imul push fs push es push icebp xor dec stc mov roll xchg dec fwait and xor scas dec jle lods push and xor fcoml inc out xor jecxz xchg xor daa imul add cs mov mov out jbe mov arpl shrl ds repz sti repz mov imul add adc push mov mov pop outsl mov mov or (bad) mov and (bad) fstpl fildll loope mov cli jb xor jmp fildll arpl lods popf inc je dec xchg xor jns or mov add push in sbb dec ja mov scas push rclb adc aad or xor mov pop test cmp and pushl ljmp stos or or sub or xor or mov rclb aam add mov adc push psrad cmpsb inc or test subb jb add pop add mov movsb sub mov sbb xor ds jecxz loop and movsl add push mov mov xlat cmp testl in cmp aaa imul xchg push es pop (bad) push jg repz mov (bad) std jns xor scas and or jbe push in dec jns xor cltd (bad) clc xchg fstl mov pusha fsub xchg aaa inc rol nop push inc push ss pop aaa push pop int3 mov loopne mov fisttpll add stc into mov lods lahf add loopne mov inc in pop shrb jmp dec cwtl sarb pusha xchg xchg jne out scas pop ret loopne out push loopne leave int cli fnstcw or pop mov pop and dec hlt imul push into inc mov cmc fbld lds xchg push mov jl sbbb cmp jmp je push jae xchg cmp sub pusha or inc rcrl arpl mov mov mov xlat int or rcrb jb pop out outsb int mov (bad) inc and push pop mov jge cmpsl loope jns sbb jg mov int3 mov (bad) js inc (bad) and xor fcomp cwtl push push ds imulb (bad) mov fmuls ror jle into inc addr16 push popf bound xchg test bound jnp xchg das xchg xchg in (bad) xor inc fmuls cmp pop mov pminsw cmpsb mov jb lods fisttpll mov sbb pop ds dec in lss push lea (bad) lea dec cltd pop aam mov loope dec or cltd lea leave lea popf bound xor stos lods jge xlat nop pusha add push rclb xchg incl clc stos xchg test inc adc jp xchg popf add pop stos fild adc ret repnz imul imul push movsb lds rcl sub lock cmp inc and incb add aam jl mov in in sub fwait bound mov xchg xchg aad fmull add mov test cs or loop jbe inc mov fdivl jmp pop mov aad push insl lcall xor repz lahf mov mov cmpsb jp and sub or xchg mov add cmp mov xor sub inc pop xor outsb and dec (bad) imull gs test outsb pop pop sbb add fs gs aad movsl pusha sbb jle popl pop aam xchg movq mov mov or pop push jnp jecxz popf rolb fwait shl or mov out or cltd jnp push sbbl xor pop mov bound mov test fsubrl mov lret aad cld or bound jno mov sbb std lods jno decl in pop jne jne fadd popf rcll jg xchg xchg mov (bad) sub xchg jmp fbstp out std movups pop icebp mov js mov or sub testb adc jg cld call adc add roll or and push sub cs mov popl push out or lds mov inc push movsb cltd mov into sarb xchg orl adcl mov (bad) std popf push test or lods (bad) xor mov popf mov ds sti stos fisttp inc popf pop mov mov popf dec or popf and js movsl mov xchg mov push push push stos repnz sub mov and dec imul and or sub aaa imul jle and push scas pop pop dec sbbb shr mov xor dec mov into mov xor jns xchg xor jae js mov mov jg stos sbb and or xchg (bad) push xchg jns jno stc fwait daa cmpsl lcall jg in sbb in jecxz into pop pop mulb jbe mov jns int3 icebp pop loope jg sbb sbb fwait movsb xchg je and into call jg (bad) fs or cltd xlat mov pop mov (bad) mov jo pop cmp xor adc pop cld pop mov mov xlat das adcb push cltd inc out (bad) aad je ss jle xor addr16 push fwait pushf (bad) fsub push or xor cmp hlt das es je arpl jae jbe,pt cmp lock mov insl add jge mov mov lock sbb clc popa stc mov mov dec jmp jno ds ret mov mov insl outsl inc add into push mov test rclb jmp and sub les scas ds aas jl ja cwtl movsb jbe adc ja jbe cmpsl inc and or adc xchg movsl or daa xchg popa xor mov dec idiv or aam cmpsb adc push xchg mov loope add dec clc loop ret xchg addr16 and cmp scas aaa scas (bad) jbe cld pop loopne sub xorl (bad) adc cmp mov roll sbb outsl pop negl lods fdivl push sti push sub test inc fsubrs jmp js imul cmc mov sbb mov cmc lret mov in js arpl (bad) dec or cwtl sub sahf les mov js lods int3 insb fimul lret loopne sub dec mov ret pop push enter js shl inc pop mov (bad) cld ret push dec test mov hlt dec iret fldl xchg popl pop ret sub sub (bad) shll lock cmp sarl (bad) call add push nop push mov je add test shrl pop xor push mov gs pop daa ss and sub loop fnstsw jns inc mov test lods scas add (bad) and scas xchg movsb sbb fidiv inc mov adc aad hlt xor sub adc adc jge sub mov cs mov and jo adc lods xor pop ja in add push mov jbe cmpsb add fcoml sub bound scas sub mov movsl push daa adc notl pop cli push adc xor push pop (bad) push scas scas push and in xor hlt je and popf xor sub stos push hlt gs add popf repz das lock push fidiv fcompl mov and movsb daa fwait icebp cmp ret movl aas add jo xchg fwait divl mov add in outsl xchg pop or repz sbb cmp cmp popa lock jmp sbb jno adc je jge or sub (bad) js std and adc mov das mov cmc mov and jne sbb mov stc bound xchg pop inc push ds cmpl or sub and movsb mov stc sbb cmp cmc jg jmp push cmp outsb repnz push inc mov pop xor mov mov sbb jnp aas fisubl adc cmp mov xor cmpsb je sahf lods (bad) je fimul push jmp push cmc ret (bad) outsl lock jb adc add jo inc lret inc out mov test jbe or hlt xchg insb push pop adc mov xor sbb (bad) jmp adc adc (bad) icebp mov fcmovbe adc xor (bad) lcall add inc aas rcrl xchg js mov shll out mov xor sub ret xchg add je rorl ror adc sar fldl ffreep test mov dec mov mov imul test jnp sbb fadds call int enter les scas aad (bad) sbb jge sbb jns jns jnp cmp arpl test lret mov jo fisubr mov sarb push sbbb sbb or ror nop leave rcrb inc jg add data16 sbb push jecxz in cmc nop inc jo jo js mov shll mov es lret scas inc lahf ret js cmp mov ror lret clc les pop enter fsub fsub jne fcompl mov cld jne sbb ds outsb stc pop clc (bad) adc sbb mov jo xchg scas daa test pop ja xchg xor aas test in out pusha gs incl pop dec in mov aad adc out mov enter inc .byte 