mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push imul testl or dec insb imul add (bad) out fcmovne pop pop dec and addr16 push xor data16 das add jns test push outsl jb add (bad) stc scas lcall mov or out jnp add push sub add xor push rcrb outsl jne add mov jne jb outsb arpl nop loopne add and and add fdivrl or scas or adc or push imul pop push popa push cmp mov fldz (bad) xor or and out or add lock lahf cmpsl jge es clc push inc xor pop cwtl pop push rcr decb push arpl pop sbb inc push mov je mov (bad) xor popa arpl add pop inc idivl jo je pop or imul mov andl insb pop add push into pop cmp dec addl jmp adc dec or out mov adc div push es xor sbb push or pop bound aas or inc xor dec cmp pop mov les xchg cmp push in fs jle icebp mov jle or outsb fs clc popa jns mov popa loope push fidivrl lock add push inc popa push push imul dec add push cld xor hlt dec outsb mov lock in pop adc pushf pushf fmull pavgb fcomps int3 enter pushf (bad) sarb jb mov mov in in mov lods sysenter das xor sub aas movsb push inc xchg pushf push add mov out idivb add sub je movzwl mov ss pop ret addr16 daa mov cwtl xchg seto movl and jne push add mov test (bad) out outsl sti jne xor pop enter mov mov ret lea (bad) inc add push mov mov inc cmp jne mov mov mov push nop mov add fcmovnu mov mov xchg je rclb mov mov or adc add mov aaa push pop xor mov push or and or outsl mov push mov mov mov mov add (bad) xor mov mov out push or push or ret and lods stc pop mov push or inc add adc sbb mov aaa sub jne (bad) mov cmp int3 test pop pop pop push (bad) testl xchg cmp jb mov add mov add int bound jne mov ss mov or mov dec ret jmp pop notl jge jp add pop repnz sub inc rorl sub mov inc (bad) lock mov aam or or mov scas sbb sti jne sbb nop jae sarb mov mov cmp mov pop pusha add xchg add add call push jg mov mov test je mov mov cmp (bad) mov push sub dec lock push mov data16 mov dec push shrb push outsb fldcw pop icebp push push dec pushf cmpl aas sub shr fucomip mov inc pop xchg mov mov cmp faddl lds sub mov jae out ja not lock mov add cmp ja cmp jp mov or sbb xlat push cmp (bad) xor dec or add loopne loope fild mov adc sbb pusha je loop pusha sbb pop incl dec hlt outsl mov mov and (bad) lock sbb loop mov xchg mov or sub mov hlt idivb pop cmp add and mov cmp or sbb (bad) jbe scas adc sti push ss adcl dec jmp xchg (bad) pop mov sbb mov popf pushf out jb inc cwtl sub xor out cmp add dec jne nop out sub or sbb jae mov cmp jae inc xchg (bad) cmp sbb inc sub inc pop fs aas cmp clc mov cld xor (bad) (bad) aas or add repnz (bad) xor cmc popf sahf push idivb inc xlat mov pop lods enter in je mov inc ds std xor adc jne push (bad) pop push sbb scas mov add pop movsl and push notl push inc hlt xchg insl sub out cli jl outsb (bad) fldl add je cmp cmp adcl mov rclb mov stos mov cmp xor lea arpl mov mov push shl pop fcoms or mov lea and jp test xchg jmp add cmc jne xchg cmp movsb lds sub xchg lock popf adc push pop xchg (bad) call mov mov lcall cmp lock jae mov out popa (bad) fildll rorl popf (bad) and jno pop push test je imul lock add adc add jecxz test sub sbb add add sbb mov xor push data16 cmpb and and es xchg xchg mov or pop mov xor jle hlt inc cmp loope and in mov mov les add pop pop push adc std lds ret mov mov pop pop xchg pop xchg test adc mov shl iret add pop loopne in out adc mov test test imul outsl push push mov sub sbb daa inc xor insb fistpl jo fsub push cmp adc push jb or pop cmp mov jns add sar test and hlt jmp sub xlat mov int or mov mov jmp dec fadds in (bad) std (bad) jb add or mov cmp jg test sbb add jbe decl adc add rorb fucomip data16 es or or mov and add mov mov sub test cld push adc adc mov insb or push or daa stc mov push rolb push sub loopne and push (bad) xor cmp or fidivl (bad) sub inc aas add testb je mov ja std or (bad) cmp cmp (bad) or add pop cmc xor test mov xor add fcmovne or fsubs test jne mov (bad) push test outsb bound and mov pop mov xlat add movb or push movsb jo (bad) mov cmp (bad) add push lea sub cld jg aad sub (bad) sub cmp jge mov lret mov out je adc xlat add lea and in mov dec push fucomp aad (bad) lds stos clc add std jae lea (bad) xor cmp mov xchg (bad) jp push iret mov add sub cs (bad) aaa adc pop mov enter mov sbb pop mov sbb cmp adc push pop add sub cmp negb jl mov pop mov pop sbb adc (bad) jle adc or inc mov sub adc and or pop mov hlt push adc lock mov inc xchg addps test fist mov es push mov cmp pusha decb xchg mov pop add adc repz sbb sbb sub sub xorl cmpl mov mov cld adc or rcrb les pavgb pusha pop pop or adc int3 (bad) ljmp or cmpsl fwait or xor sar cmp push jg adc jne fcoms stos sbb ljmp sbb insb lea sbb mov jbe push js lods jg,pn pop mov pop fnsave pop je pop jmp sub push sub sbb pop insb fisttpl jle out jne movsb sub cmpl mov es hlt inc add xor dec (bad) loope sub cmp sub pop daa xchg inc mov and jmp (bad) xchg leave jmp repnz jne jmp inc enter xor pop xlat test orb fwait pop movsb lock repz or je sti clc stos jle aas lock push outsl xor push push shrl ret pop or sti mov pop pop imul inc sub shl mov movb pop inc scas (bad) jne clc outsl addl jmp mov fdivl inc (bad) pushf or push push add or pop or jo push or jbe jmp jo xor mov sbb sarl sub mov add arpl sbb pop das jmp inc adc arpl ss sbb and popa aam pop pop push push sbb jp adc mov test (bad) jo xor in adc ss das lock test jne test ja in or movnti add push add loope push or jb inc xor (bad) jge inc mov or cmp clc rclb out mov mov cmp stos loopne xchg paddsw push jl sbb dec mov adc ret sbb cli xlat call orl jmp mov cmpl cmp (bad) mov push adc or adc sbb and mov mov jg sbbl mov mov icebp add loope add push or lock push repz nop sbbl notb jl loop cli add mov sub add negl add push in loopne mov add or mov push pop fcmovnu add and ja rcrl data16 sub insl imul and iret into fidiv sbb add inc lahf add add or and mov pop or fbld add lea adc add add push pop mov sbbl mov push xchg mov jo cmp xchg ret cs and fcomp add xchg in mov sbb dec mov inc xchg lret adc sbb mov (bad) flds mov adc cld jmp jge ret adc xchg ret (bad) mov mov bound ss adc insl push adc mov hlt decb (bad) lock cmpsb test jle call pop or mov add stos sbb add (bad) dec sahf je je lahf (bad) or mov test je sbb enter or sbb push xor jne,pn sub bound sar or out mov lret add xchg sub mov ret rol add xchg subl inc sbb mov or out sbb out mov fdivrl jecxz inc mov cmp sbb sbb push rdpmc ja icebp cmp ja mov mov inc (bad) sbb aas and adc push rol push push push jbe add xor xchg int3 adc or xor pop mov mov insb stc mov jp mov mov sub sbb ret sub inc push (bad) decl sarl (bad) mov inc rep jmp mov call jmp mov jmp mov cmp xchg pop adc sub jno (bad) mov cmp divl je aaa mov fwait dec js rep xchg inc je cld dec subb jl cld xor std xor jo or pop cld (bad) mov jmp roll and mov test and cmpb mov outsl ja cmpb add out in mov jmp cmp xor sti xchg mov push shrb roll ljmp call mov scas or sub inc mov mov xor jmp outsb cmp adc mov mov inc inc adc cmc outsl aam mov test push das add orb xor test jne push push cld (bad) (bad) push jno pusha mov scas mov in push and shrl mov ja cld adc je (bad) aas mov jmp cmp jb cmp ja sub ret nop data16 and nopl adc in or adc or sarb fwait orw inc out or or pop fldcw pop inc test fmuls mov mov mov jb mov mov sub xchg addb (bad) sarl xor pop cmp pop cmp and loop jp pop xchg dec loop fbstp mov sbb mov adc cmp mov ja and in and jne call jp ljmp push mov xchg lahf jmp cmp push dec loopne rol (bad) (bad) mov (bad) push mov mov xor mov inc add jb cmp mov push mov mov fiaddl xlat pop mov sub jbe mov pop cmpsb lret leave mov inc xchg cmp add sbb lret push lret mov inc inc and outsb xor add mov jg ret ljmp pop cmp jne dec cld mov mov push mov pop add aaa cli js or loop push adc in lcall loop je mov cmp jne push adc add sub or add add sbb cmp aad jbe cmp jne shr inc adc add jae ret scas push mov shr or aaa push lcall or iret mov and mov cmp jne dec dec lcall dec dec sbb mov jecxz or out in mov shl data16 mov rep adc stos pop daa fidivr rclb sub mov push inc jae jge shlb je mov or je or je out out dec and je pop je xor dec (bad) out pop imul and add sub insl clc fbld or cmp ja lea push add push jg mov xchg out int or jge jmp inc mov js pop jle cli std sub jmp inc inc jmp mov fist lods leave (bad) add pop sar adc or inc fild aad cwtl pop xor mov out xorl mov mov loop cmp jbe sub inc mov dec jne pop into xchg jecxz decb repz sbb push lock fist fs je adc lea mov adc lea fldt and jb imul add je das fnsave add popa dec mov cmp and xor push pop xchg push push sbb jge mov xor jo dec sub jmp fstp fldt (bad) int adc out mov repnz mov push adc mov pop jns add or (bad) jl push ret mov adc inc repnz sbb xchg and ret xchg call inc mov mov lock dec es ja repnz xchg sub sub pop jecxz (bad) out jle mov lds mov jbe imul cmp out call mov bound cmpb cld fwait jg xlat fadds outsb xor xchg push or push push (bad) fbld ret inc mov push pop test enter mov inc (bad) (bad) call and daa (bad) lret into pop inc test xchg clc js aas sbbl pop (bad) (bad) (bad) (bad) jmp addr16 leave repnz bound and cld gs sahf mov sub (bad) ljmp inc aad iret decl js inc mov stos mov cmp or mov (bad) incl pop out sub imul (bad) divl jl xor cmp call mov (bad) call jle push inc mov push sbb sarb repnz test es rorb nop fildl daa movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov pop pushf mov fs (bad) (bad) (bad) call repz loope jp iret inc bound ds push cmpsb scas mov pop or (bad) (bad) pushl xchg leave dec dec in xchg cmp xor in cmp sahf xchg pop cmpsb lock std rclb popa movsb mov and addr16 repz mov subb (bad) (bad) call pusha les outsb bound xor jmp mov push xor test pop jne push pop push (bad) hlt and add jmp fdivl ret hlt movzwl lea push push test xor les mov out xor push push mov (bad) imul sub hlt push data16 add mov andb fnsave jmp sub mov dec jmp push clc pop aas or mov adc push dec inc push push inc push inc pop inc outsl jb popa outsb fs inc mov jo imul push dec popa jae push popa insb jne mov mov (bad) mov sub add shll jnp xlat mov xor mov inc push sub outsb aad cs mov or dec cld jne dec mov or cmp xor out jne mov test xorb fdivrl mov and rorb xorl imull test or sub enter cld sbb daa and popf cmp sbb daa xor inc daa dec mov loopne mov or push cld add rorl fdivs rclb add stos pop stc ret mov sub pop fmull (bad) scas aam mov jmp cmp je pop mov add jae loope mov pop push mov mov push sbb cmp pusha add (bad) mov mov jbe jg clc push sub cmp fucompp inc xchg cmp push jae paddd (bad) add and loope cmp cmpsl mov add add ret xchg xlat push mov mov adc push js loopne in out sbb outsb mov and cmpl mov ficoml add mov push ljmp call (bad) call mov (bad) sub inc ja mov mov dec in call sbb sarb sub xor xor jb cmp fmull adc or push inc push cwtl xchg inc fcoml out sbb xor test test mov mov cmp je mov leave jne mov pop test jmp lret lock xchg or movl or (bad) mov ret pop add sub mov pop cs mov add jo pop ljmp (bad) std in and lock jne das push jbe clc mov dec out es cs orb fdivl inc pop push in or data16 sub mov pop test adc mov shl fsubp scas xor decl (bad) adc dec movb dec push cmp sbb add dec jne (bad) fbstp sbb add sbb jecxz ret out dec cmp fistp rcrl jge xchg push js lcall xor call lahf in push pop add mov jg jo jl push hlt xor mov mov mov or inc add ss inc or or fisubl inc loopne mov arpl test mov push mov fsubr popf jno adc adc push clc scas pushf aam (bad) sbb pop jbe add popf inc sbb call sub rolb fadds jbe jmp push test adc aaa mov push xlat xor frstor push cmp cmp iret mov repnz add add fiaddl sub or jae daa adc scas jnp,pn push push and sbb jmp lock jmp or mov push and popa add sbb fs jecxz xor nop flds loop dec fwait pusha fcomp cmp (bad) jecxz pop incb aam jl inc add jne andl fiadd push mov adc outsb out mov ss test movsb cmpsb add push inc popa xchg call cli out push popa movsl mov pop jb jbe sub mov push cmp ljmp clc add stos imul enter adc ret je push mov es pmaxub dec add out add sbb push sub push mov test mov mov or push add sub inc lods jmp xlat pop mov ret dec mov inc or movsb mov and je dec or bound mov push ljmp imul pop add lds pusha mov mov sub repnz addb fild fdivrs dec fdivs xchg mov mov or mov jg pushw lock mov sarb loop jno adc inc jmp sbb imul sub sbbl daa adc insl or das push push cmp arpl cs or dec int3 or inc cwtl jmp punpcklwd lods jo pop (bad) cmpsb cmp pusha pop test add cmp push (bad) test loopne roll or aad cmp xor push push push push push mov pop push jns and stc es mov sahf sub jae and or pusha add mov or inc xor aaa or pop mov mov cmc andb lea mov jb lods pop and or add hlt loop xor mov xchg add push or out mov pop dec fsubrl add je cmp (bad) cmp sub and jmp add pop idiv aas sub jb je jmp cmp sub pop imull jmp sub cmp mov jmp mov (bad) out dec jmp mov jmp mov jmp push sbb into jmp mov sbb fbld mov jmp mov jmp mov jl pop popf mov call ret jno xchg testb jecxz in aad push (bad) je push es test fidivr loopne (bad) mov push inc sbb in aam add or push inc sti sub or rol push sub inc test xor jo scas rolb clc ja cmp push jb inc in mov jg jne cmp cmpsb add or cmp adc add adc push pop scas xor mov dec mov dec pavgb cmp dec mov fisttpl xor hlt call and pop add mov js jl lea pop lahf mov mov xor pop sbb in ds jle add (bad) sbb inc dec mov (bad) iret shrl aad adc or mov mov jo stos mov movb sub cmp inc subb sbb lock add add call add dec in pop pop pop inc pop sbb incb cmp out add mov icebp icebp popa rclb nop mov cld inc adc mov sbbb clc rorl dec rolb fmuls (bad) mov scas push rorb mov dec movsl push xchg out cmpsl clc outsb (bad) xor sbb inc movsl pop sbb adc ja add mov mov test pop push cmpsb dec ss lods outsl mov and adc inc imul into adc jbe mov pushf add push push push fsubs pop sbb inc adc mov stos (bad) mov add xor movsb or (bad) mov fadds jnp je cmpl adc push and (bad) lock mov call sti into inc lock dec and xchg cs or fsub das js daa push jne and cmp sbb mov sub add pop add ret mov sbb inc adc cmp push fcompl push insl dec popa push jne mov adc rorl pop mov add pop adc or mov push movsb sti ret pop pop mov rclb jmp add add popl mov sbb pop mov mov or adc decl push lea push xlat mov mov push les push adc cmp sbb add or outsl lods sbb dec and inc jg fidivl inc daa cmp xor dec pop xlat in push sbb insb xchg adc inc lods repnz mov jle push add loopne push outsb test movw pop or pop mov sub insl or sub mov das movhps stc mov loopne ds cmp fcomps mov das mov aas inc xchg push push mov push push adc sub aaa push negb test add sbb cmp cld mov call fisubrl or jmp lea cmp adc into mov jbe xor jl lock lret or xor arpl sahf stos fadds sbb add cmp clc or push mov mov or ret cmp je adc adcb jle add sub inc add xor call pop mov pop out sub jmp push cmp ja call or or addr16 in addr16 imul add push addb mov inc xchg out (bad) or mov pop add pop pop xor add and (bad) push in outsb pop cld ret fnstcw or (bad) mov aas scas xor inc cld ret push aas jle test lock mov push cld add cmp pop and mov adc hlt sbb and jmp xchg cmp adc or and dec mov imull xor inc cld add sti popf call mov mov lds push sbb pop push mov dec clc mov fdivs loope lret or fcomps cmpsb xor mov rorb in cmp add xor or push cmp fs dec jne mov pop out ja jge and jl push cld aaa add dec jmp and inc pushf sbb cmp into pop dec jne mov je or or add add pop lea jmp xchg dec popl add push sub jne pop jl imul ja pop xor and add pop xchg or mov loope mov daa stos and jmp aam pop lods mov clc fist scas inc das lods pop add add movsl inc test push scas pop jmp adc dec gs loope inc jae loopne es mov aaa xor xor sub pop (bad) add jg dec jl cmp jge sub outsb sbb lret jg push fnsave adc shr or mov and jecxz je int3 ss mov out xor sub jge mov in loopne sub stc add lea inc dec or sbb movsb push push cli mov push or lahf cltd mov push mov (bad) jle inc dec jge cmp adc imul add sbb or fsubs push mov lea lock add mov or add mov mov push insb dec js mov inc or insl jb adc adc roll roll fcoml mov mov bound xlat push les clc jg dec out and sbb mov loopne add or jno mov jo (bad) lods jmp out ljmp cli pop cmp push pusha push loopne icebp pop jg loopne ret jle ljmp in fnstenv sub xor sbb in pop dec jo push incl push das call gs push push sub jo cmp shll push and call test adc push mov add pop push cmp jo push pop pop pop ss repnz xor cmp push in sub sub rcll mov or dec push xor das int3 cli pop pushl mov and out (bad) mov jo add add pusha mov add dec cmp pop outsl add jb and stc out push inc and mov repz incb mov pop scas out enter das or push ja mov and pushf cmp add jnp cld pop pop dec cmp nop pushf lcall jno maskmovq imull ret cmp push lods add add or nop ljmp cmp cltd aaa call mov cmc mov cmc in enter sub mov push mov (bad) stos or jl push insb push mov sbb mov cmpsb mov cs (bad) pushl mov je cmp je cmp je cmp je push rclb cmp je cmp into cmp je mov fisttpl cmp mov cwtl clc jmp lods imul and out jmp push pop cmc pop ljmp add dec cs or adc cmp pop jmp cmp inc scas cmpsb xor sub xor jmp arpl or aad cmp ret mov call adcl sahf out push (bad) and sbb pop mov push mov and test int3 jg test insb stc out and sbb pop daa add sti aaa ja cmp jmp es dec and jl nop sub jmp lret and (bad) pop add jmp test test lods jo data16 inc js jmp sbb adc xor scas xchg adc and fldl add cld je clc push ret inc push mov jle ret push loope add push mov cmp rcrl push xor pop cmp sbb rcrl push or or sbb bound and mov add pop or imul jge test in cmp lea mov bound fimul cmp dec cwtl or aam jmp aas or (bad) (bad) add sarl xor mov (bad) jb popf adc and scas or cld dec jne arpl add iret insb and mov push sub popa jge inc push mov jno push jne sub xor in mov test in shlb mov dec xor add es ja lock ficompl sti add add inc ljmp js icebp mov jo add je cmp int3 test inc lret dec adc sbb cmp adc in pop sbb das in push or call push adc pop xor push mov iret pushf clc adc push nop mov test aad add into or pop push ds pop mov jle xchg mov ds push call push clc inc mov fbld (bad) (bad) cmc fucom mull mov jge and add dec cmp sarl pop pop ret aaa add lock lret clc mov add add pusha sub jl push imulb add jne sbb (bad) add add mov inc and sub mov dec cmp je daa xor fisubr inc inc add sub fildl divl popa in ret or push stc pop push imul cmpsb mov and xor sbb pusha sarl or mov jo jb jmp jl andl push xchg jbe jmp jg mov cltd aas dec adc movsb push push sub pusha fiadd lret enter push push add aas inc hlt inc xor ljmp jo fcom out in pop out push xor xchg add ficoml loopne sarb jno jae sub push xchg out dec inc jmp jne adc int3 cs jg or adc or pop cmp adc nop sub push add jmp dec add or xchg shr setl cmp je dec inc pop or add fcoms popa (bad) sarl mov mov xchg mov pushf dec lahf (bad) decb xlat inc fsubrp and push adc inc bnd pop stos lock aam sbb cmp pop mov fiadd push or cmp arpl inc dec (bad) lock jae shrb push push loope push inc add (bad) fs test ret rorl push mov inc lock dec imull dec in in ss int cmp je andl nop mov cmp jne mov cmp jge rcrb jbe add imul jne aas shrl add in mov ret pop jmp decl stos cltd jl adc lret in jge or push in test in push mov adc into stos lods inc movsl out repnz push dec rorl cmpsl sbb movl popa fmull lock test (bad) insl xor add cmpsl cmpl jle cwtl or loope xchg xchg dec jo and cmp or gs test lcall dec jne enter loop sbb in push subl cmp nop cmp push icebp out mov test (bad) mov xchg (bad) das lock sar outsl push loop js test out lock mov jno mull cmp push clc lods xlat cmp jle repnz jge or mov sbb mov or mov adc inc js mov in rclb jo inc xor jge add cmpsb xor cmp dec (bad) pop xchg dec gs test adc roll loope add mull xor cmp rorl out lock jne dec mov adc push and pop push xchg or pushf xor sbb xchg ds adc dec push push push mov incl movsl jecxz (bad) jmp (bad) in sbb aad jp sub addl nop test outsb push sbb fsubrl insb pop lahf inc push jnp jne clc addr16 aaa and pusha mov mov and pop mov mov pushf cwtl mov inc lock outsb cmc dec sbb adc addb sbb insl mov mov inc add sbbb jmp fildll adc out pop mov xchg push mov sbb roll js sub fwait push mov push and ret or pop mov ret mov push ret shrb je sub in sbb std scas jge cmpb cmp js pop jne (bad) int rolb inc jl ds notl add lods push and shrl jne (bad) ljmp fcmovnu inc add jno clc pop mov sub cmp lret push inc push push gs imul out std fs and je cmp loop mov mov cmp test sub dec scas insl ret mov push mov xchg sub (bad) daa pop lods xchg pop ret imul call gs xor cs insb pop inc gs outsl outsb addr16 popa je dec popa push lret insl gs daa outsl loopne mov sub jecxz scas movb inc mov and push jl sbb xor fs xchg and in icebp or es pop or push mov sub inc out and int pusha pusha cmpsl fstpt iret mov test mov repnz pop pop inc jecxz adc in xchg add sub and inc xor push loop jecxz jge data16 cltd ljmp sbb cli adc cmpb stos pop cmp jne dec mov popf inc addb clc sub sub sbb imul add mov pop mov fs outsl repz mov xor cmc add movb mov ja jb aad cmp mov jae aaa das (bad) mov cmp dec or dec call add lea cmp pop add (bad) jbe mov push or mov lock mov or jp mov stos pop orl pop fcom add mov dec or (bad) fist pop les cli mov mov mov xchg and sbbl dec add (bad) daa inc orl jno pusha or jne imul fsubl or movb mov loop dec cmp cmp cmp mov or mov pop mov add push cld jne andl or ret xor incl add bound fidiv add xchg and mov (bad) jo (bad) xor inc mov sahf mov sahf je sbb push test push push mov adc hlt adc pop movl fcomp mov pop pop ret sbb loop sti push push movsb ss pop mov and mov fidiv dec adc cmp pop insb mov outsb andb xchg mov scas push insl (bad) js inc (bad) or mov and ret stc jbe adc jnp xlat int3 mov mov sub pop bound (bad) stos mov sub hlt movzwl inc cmp ja mov inc jmp cmp mov xor cld ja fcmovb jmp or mov fwait divb jecxz sbb and lret push imul dec aaa jae mov rolb dec or mov std add mov add dec movb push push push pop and sbb or (bad) pop add cmp lea ret adc lock repz std mov or jbe cmp push pop rcl ds inc test hlt pop lock xor or inc test je or jae and je cmp adc out mov cmp jne fidivrl pop cwtl and or mov pop (bad) jg cmp cld mov lahf add adc inc lcall (bad) push inc adc or movl and inc inc mov ret adc jne xor sbb les jne aaa sbb or jb bound mov out push popl shrl jmp pop xor jp xchg int3 js pop sub push loop and dec not inc push and outsb std xor dec xor mov dec outsl scas push das cmp or mov push popa orl cmp andl push (bad) pop movsl jcxz cmp pop mov pop in test dec and push mov pop inc xor mov outsl inc frstor xchg lods inc cmp hlt xchg test sbb pop pop cmp dec mov inc mov xor test jnp cmpl jo sub add mov out mov push sbb (bad) or (bad) xor imul and push lock (bad) push lea push push hlt or lock mov or and ja mov nop bound jnp pop fabs out add add (bad) and adc call in mov mov subl add (bad) or mov mov mov xor add inc dec lock out shrl shlb push mov adc jnp lret in and xchg or int sub mov cmp jbe shr mov jmp jge push inc mov shlb emms (bad) sub dec (bad) lcall out das daa mov cmovo push pop push test pusha and jno lock mov cmpl or loopne out cmpsl xor or jmp push mov ja aaa hlt sub call leave jne rclb pop popa pop dec sti adc lret mov jo and ret mov mov cmp fdivrl ret arpl mov mov fisubr cmp mov jge cs pop or dec insb jle adc adc or sub add shrb or jne bound push xchg gs ss out mov rolb add push or leave sbbb mov pushf add push dec inc fistpll sub add xor push lods fimull outsl fs gs push gs movsl jne mov adc fdivr imul or cmp inc outsl arpl out (bad) negl gs jne je dec outsl je imul xlat (bad) fisttpll outsl inc arpl or mov test sbb jb xor xor (bad) (bad) mov bound outsl js imul ja nop pusha fs sti inc hlt andps outsb dec inc xor je mov push xchg fistl js je leave leave leave jo push leave pusha pop pop push leave leave leave leave push dec dec inc leave leave leave leave inc cmp xor leave leave leave xor and leave leave leave and adc leave leave leave adc add fs add xor hlt in in lock call in fnop aam leave leave in shrb leave leave leave sarb mov test leave leave leave leave mov leave leave leave nop mov leave cmpb leave leave leave jo push enter and fs xor mov in in lods test mov pushf cwtl xchg nop in in mov in jl je in in insb push in pop pop push push in in dec dec inc inc in in cmp xor in in sub and in in sbb adc in in or add jb xor cld xor hlt lock jb in call jb fnop aam jb jb int3 enter jb jb mov jb lods test mov pushf cwtl xchg nop cmp sbb aaa dec cmp cmp cmp sub and cmp cmp xor inc and cmp cmp adc cmp cmp or add pushf pushf mov ss hlt lock pushf pushf pushf in call pushf pushf fnop aam cmp mov (bad) sarb cmp mov cmp cmp cmp pushf cwtl xchg nop cmp cmp mov cmp jl je cmp cmp insb push cmp pop pop push push cmp cmp dec dec inc inc cmp cmp cmp xor cmp cmp sub and cmp cmp sbb adc mov cmp or add add xor mov in cmp cmp fnop aam cmp cmp int3 enter cmp sarb mov test cmp cmp mov cmp cmp cmp cmp cmp cmp push cmp pop push cmp cmp push dec dec inc cmp cmp inc cmp xor cmp cmp sub and cmp cmp sbb adc cmp cmp or add mov add xor hlt pushf pushf pushf pushf lock call pushf loopne fcom mov int3 enter icebp sbb add shl or sbb (bad) mov push inc les sti into dec (bad) aam and push or in movsb in xor out sbb clc ljmp push cmp mov and sbb add pop mov xor push ret and sub xor mov pop pop ret aas (bad) shr and dec ret fs sarl mov sbb fstpl repz inc push push popf hlt lahf hlt jae cltd sbb pop rol and jb fiaddl nop scas cmpsl leave dec aaa cmc push and pop stc jmp outsb and pusha or pop test pop pop add pop mov into push push push scas mov adc outsb jmp xchg inc add xacquire add or and sbb mov sahf mov add gs outsb je inc pop and push dec inc inc dec add outsl loop imul pop push and dec push inc push dec pop and mov mov push push pop sub push inc dec in fidivrl dec dec dec inc push das jg jo and cmp jo add leave outsb outsl add push mov es psllw repz pushf pushf pushf hlt cmc div pushf pushf pushf pushf clc stc cli sti pushf pushf pushf pushf cld std (bad) lcall loop pushf pushf pushf pushf in out pushf pushf pushf pushf call pushf pushf pushf in in out out pushf pushf pushf pushf rcl rcl pushf pushf pushf pushf aam (bad) xlat pushf pushf pushf pushf fcomp fcmovu pushf pushf pushf pushf (bad) (bad) pushf pushf pushf pushf rol ret pushf pushf pushf pushf (bad) (bad) pushf pushf pushf pushf enter pushf pushf pushf pushf int3 int iret pushf pushf pushf pushf mov mov pushf pushf pushf pushf mov mov pushf pushf pushf pushf mov pushf pushf pushf mov pushf pushf pushf mov pushf pushf pushf movsb movsl cmpsb cmpsl pushf pushf pushf pushf test stos stos pushf pushf pushf pushf lods lods scas scas mov xchg (bad) dec je cmp xchg adcb jbe subb sarb (bad) or push aas push lcall imul inc js gs imul push (bad) adc adc into pusha je mov popa jo fisubl nop jo jo cmp dec jne dec dec gs outsl jb push jb push sahf int3 outsl int3 std jle xorb inc dec outsb mov mov ds or sbb lret push adc out scas jl test fdivs dec ret nop adc fdivrl fmull push sbb xor ds lahf dec outsl nop jbe inc inc imul push and insl nop mov sub popa outsb addr16 in sbb dec jbe stc jno push outsl ja inc js push push pop xchg dec mov gs cwtl scas and repnz hlt ja push xor dec jo lock lock add insl add fstpt gs jns ds adc inc or shrl mov (bad) mov (bad) mov clc scas sbb and mov add push outsl imul or ja loop dec or popa jae ds mov inc inc leave mov scas or pushf (bad) enter adc add jae push adc inc cmp sbb mov adc insb nop mov scas les inc mov imul mov and cmp or je insb inc adc push ds cltd or ficoml loop pop lods mov lock inc popa fsubl jge cltd (bad) pop ds inc mov nop mov inc enter leave in push push data16 in add sarl or push stos push inc jle xor (bad) popa data16 cs pop jle add mov icebp cs xor pop dec invd mov inc insb jae inc sbb andl add cmp aas inc xchg cmp dec adc inc xchg add jb popa fs les lds jge int3 orl push bsf add addr16 lds jnp fs aam aam jg sahf out pop aaa push inc or ljmp xchg adc sbb push loopne sbb fisttpll shrl push push add xor adc mov (bad) push and dec mov push push add mov cmpsb push and and fadd lods outsb arpl sub jp dec cs push ret adc repz mov xchg out lahf mov mov mov test xor ret idivl push aas lods xor fisubrl testl fidivl sbb or (bad) cmpsl mov xor inc call or paddb adc mov mov mov jnp call xchg fistp adc sub add movl nop pop or sti test inc push push loope fs stos hlt inc add adc push inc inc dec add movsl shr jg mov pop add pop sbb lcall sarl jbe cmp repz je movzbl cmc test jl mov (bad) jp lret add or cmpsl jne loop add ds jnp jle mov mov or ds add pushl out and sti je loopne add in aam cs mov pop push dec cld rorb roll mov jg xor push and or rcrl arpl adc clc addr16 test int int lret push shll or sub push jo fild mov xor mov add insl jecxz push adc xchg ljmp lock repz cmpb ds mov jbe adc test lds dec or fcmovnbe sub clc push sub inc es cwtl jnp stos aaa in es in in mov cmpl roll fildl repz pop mov cld mov ljmp jge add push or pop or cmp not pop cwtl inc jmp daa and push decl sbb lock add or aas xor xchg ja lea lea adc cmp js pop loop xlat mov je push and jge aas std in cmp outsb adc sub pop or mov or dec and in push dec (bad) and int3 scas add add xchg pop lock (bad) pop jae test push xchg dec fadds insl mov popa js lock dec sti incl push add sub jb sub je (bad) jae cmp paddq sarb mov lcall adc or rcrl (bad) jae inc dec jne bound fwait jle or jne sarb inc jne add sub mov (bad) div dec push mov mov jb push pop mov das clc pushl ljmp jbe add mov sub jmp add dec jne popf std mov out in adc leave push outsb cltd inc mov pop arpl inc loopne (bad) inc or cmp xor (bad) jnp and jo pop mov negl xorl in loopne rorb int3 sub mov add fsubs or leave mov add sub mov add cmc mov andl push and fistp mov lock faddp add add sub add rorl (bad) fdivr (bad) add xor add sbb clc mov sub rcrl loope nop loopne enter ffree ffree ffree pop aad add aad int adc and dec sbb or lods and pop ror iret cmp add push mov test push add and rcr and inc pop ja lock and or pop adc rorl mov (bad) int3 xchg loop sub aam fbstp insl imul inc pop pop inc cmpsl mov insb pop hlt push push pusha push aas insb inc inc cmc xor mov mov and mov pop mov ret ja pop pop dec mov mov and mov push sbb shl cmpsl xor ret mov pop loopne,pn adc and outsl ret hlt movb jl inc mov add mov adc jb push cmp rclb push subb mov ret ja xchg push repnz ss pop adc mov das je fldt fcomps setne int3 mov cmpsl (bad) ss push jmp cmp add inc nop mov add les daa pop add (bad) jns jne jg xor ljmp out test adc dec mov sar aaa jmp and or rorb cmp sub add enter inc idiv out cmp ja mov and ja and aaa and push push push cmp ja sub dec mov mov push mov (bad) ja lea gs movsb inc jae push imul mov rolb das jns pop push rol popa movsl movsb ret movb xor (bad) out notl mov mov outsb test adc or push fsubp imul das sub cld daa or mov mov sub add movl cmp je add dec xor add xlat addr16 fistpll call call (bad) (bad) test mov xlat popf xchg push dec bnd hlt ja add cli pushf sarl adc jmp jl xchg loope imul cmp pop (bad) mov fisubrl sbb adc jg (bad) jmp dec adc xchg push xchg (bad) or cs sbb cmpb push scas loop cmp push push xor aad enter ficom and ficoml xchg hlt lds loope clc cld add adc imull push inc call inc lret (bad) call lock mov mov dec repz xor adc std xor adc nop xor std fildl mov xor mov mov ret mov lea daa mov sbb clc lret push xlat mov dec not mov mov lret in movsl rclb aas fbld insb arpl mov push mov add lret add lods loopne and fstps mov out sbb les daa adc pop adc sahf push jecxz insb addr16 dec iret push ds call pop inc xor xor repz mov mov rolb repz pop pop cmp cli add (bad) in ljmp mov add jp mov mov xchg les inc pop pop jmp pop add xor (bad) jne add mov pop inc inc outsl jo pop out jb inc dec je mov fistp sub jbe sbb pop pushf (bad) lods pop push (bad) aas mov mov push add (bad) jne cmp in add cmpsl jno sub mov out mov or or cmp rorb adc push inc mov push dec dec (bad) mov aaa insl rolb adc lods and stos mov aad cld sti pop jbe mov scas pop cmp jne jg mov sbb les mov and and addb add (bad) lcall rolb fistpll add sbb cli push scas pushf pop aas cmc jo or ret add push (bad) aaa mov je add clc adc int xorl and cld stos dec jne les inc fadds aas sub jmp mov in mov sub lods lret cmp jne cs pop adc jg lret lods jmp fidivrl outsl xchg sub sub mov je movsb jnp addb ret (bad) scas mov adc cmpb or lret ror rcr ds movsb xchg pop mov rep sbb sti dec (bad) into out or jle pop pop mov mov mov lret cmp lock cmp xor movzbl add and popa scas scas outsb in dec adc adc in (bad) aas sbb je ret je xchg ret and mov push lcall pop jne (bad) repz divb mov lcall nop mov out (bad) pop xchg push daa lahf jg das xchg out movl push hlt and in xchg jp loopne fsubrs sarl fwait push mov mov (bad) (bad) sub sub clc inc je int rol sbb add push hlt movsl fldcw hlt jmp push pop outsb adc cmp aas imul hlt and aas pushf push and jne mov cmpl jbe mov cltd jge or jmp xor inc inc add aad lods and jmp mov fist or jne aas and aas mov cld call pop js mov push xor pushw call fdivl or jmp jecxz scas ljmp pop ds leave addl call lods jp jmp mov outsb mov jl push inc je mov or je mov inc je mov fcompl hlt dec jl mov mov ret cmp jbe mov xchg test das popa adc mov movb add jne (bad) loopne mov inc iret dec xor pusha fwait mov xchg ret xor and cs int3 lahf ds add jne add and iret rcrb test mov mov fdivrp jle lock xchg mov adc jg inc pop loope sarb sbb mov or inc lret cmp rcll push xchg inc scas (bad) in orb insl mov ss and cmp ret sbb lea mov jmp dec sarb scas fbstp xor in aam cli rcll fnstsw stos cltd adc lea aas cmpb rclb inc pop sub mov cld xor push xor stos or decl shlb or mov neg jmp or rorb push enter xchg push mov into mov out sarb fs adc enter jg sub (bad) jmp cmp jne pop pop mov add mov stc mov psubd mov clc or lret mov in mov cli arpl add cmp jge pop jle mov push (bad) loop cs daa (bad) adc mov add dec sahf xchg add movzwl sub (bad) popf (bad) out cs lea mov add sub sti mov pop adc je add or mov add lea sbb call out sub add enter push jmp pushf mov push mov dec dec inc dec inc dec lods or fwait push stos xor jge lretw or mov aam nop fcmovb mov cmp jl pop sbb mov out push je mov stos neg sbb stos jmp inc mov mov loop movlps pop pop xchg add inc clc dec test sub pop push mov fimul add sub (bad) add mov das clc leave mov mov mov movsb insl or mov adc mov jl es je addr16 cmc or repz inc test jne add cli insb in stos xor call (bad) push sti add je inc jne bswap push loope mov ret xchg repnz inc mov and sbb mov out fimull mov adc pushf fwait push xchg iret scas lock push push sub and cmp (bad) fmuls sbb jg mov inc (bad) or mov inc loop add mov or (bad) dec and and inc add and and adc and sub inc sub sub cltd cmp push sbb and sub mov orl es sub xor fldenv jne inc testl jmp mov data16 mov or inc push aam add add bound cmpl add movb xchg fldt mov aas imul adc pop mov out fabs push pop jge pop adc call fldt fwait mov push fnstsw fwait mov testb je fidivl jne (bad) ja sti lea mov inc sub nop shr and add fildll xor stos lcall dec out sbb sti adc jge pushf or (bad) mov cmpb jb movb js decb and pop fwait rcrl (bad) pusha xor jmp mov (bad) mov icebp notb push shr jl aad mov add xchg out xor ljmp jp jg and dec rorl je and int3 pop pop sub (bad) fisttp das cmp adc jl mov cmpsl subl mov or sbb inc loopne push in xor cli gs or fidivl fwait inc sbb mov push sub call and jne dec sub cmp xchg cwtl jl and inc ljmp dec adc sub movb cmpb imull cmp jbe pop jmp mov mov pop pusha sbb inc loope call or jns fwait lds push fldz cmpsb mov inc decl ljmp lods or jnp mov mov or and cmp je and fistpll add jp mov cwtl jne mov je and sahf add push jmp mov mov adc aas jmp fstpt add push aaa je test or or and push or pop int3 push mov test or fimull add add ljmp mov pop stc es testl imul push cmp aaa jge push inc add inc rorb jl dec sub cwtl data16 pop fist add test push lret pop mov mov (bad) xor xor adc sub fldt cld xchg es aaa ja addps mov dec lods lahf jle fstpl fwait mov cmp leave (bad) mov fimull bound xor cmp inc or push test sbb cltd dec sahf insl (bad) leave adc mov xor push adc or pop pop rcrb cmp pop or xor fistl or cmp inc stc inc xor or jae outsl xor gs fiadd imul push pop out adc cmp (bad) or add xor jmp ret sbb pop loopne gs movsb dec fist push sbb xor inc mov fcmovnb add mov fnstsw fist push and lods std test adc adc or dec jne sub dec (bad) mov push loope sbb mov fcomps cmp sahf sarb and mov roll xor and jbe div test sbb nop add add icebp int3 mov scas imul idiv add decl fbld xor fsubrl psadbw adc (bad) ja and imul push sti insb cli movl pop inc (bad) ja adc push jo std mov add inc dec jne sub dec mov dec mov idiv imul add jno add sub ds ds add popa icebp bound ret or movsb xor inc std std vmovaps push clc mov aam pslld (bad) and jge test insb fstps sbb and dec in test jg fdivl jno hlt jbe mov mov jmp adc sahf pop inc out dec data16 pop or cmp jl addl into lcall (bad) bnd or pop pop mov add ljmpw fwait mov sub cmp fcoms fistpl ljmp push add mov sub jecxz imul sub push js mov shrl (bad) loop cmp jb adc sub mov das sbb dec xor or mov xchg addl add incb lea (bad) mov clc (bad) mov enter shrl push jmp (bad) pop je rclb test mov cmpsb mov fidivrl sbb xchg and inc lea fcompl push inc jmp adc fist (bad) push pop aas xlat fcmovbe icebp jnp dec push shl shl or sbb inc pop add add psubusw (bad) js rcrb sbb imul mov mov mov lret cmp je adc jg scas lock hlt out push cmpb jne sti mov pop ja jo add push lea or lock and ret in inc in add jecxz out stc mov in jge call lret mov nop mov mov add xchg outsb outsb cli mov add inc in sub adc xchg repnz mov jne push inc or mov pop mov cmp mov mov sub daa dec inc ret in mov je or int rorl ds fsubr aas add cmpl sub and mov loop aas jb add leave add sbb adc dec out fmuls dec sbb test dec psubusw imul xor add xlat xor pusha push iret in ret repnz (bad) ret xchg sbb or push adc jne cmp xchg inc cmpb jne push or out (bad) add test jns pop add xchg sbb mov mov (bad) or push inc stc cmp sub add pop mov pop int pop cmp xorb in outsl cmp sahf lcall inc out pop mov (bad) ja mov and push mov inc ret lahf and decl cs mov pop cmp jne mov icebp sbb xchg fisub push push (bad) setnp and cmp rorb push or pop hlt or or or push pop add or or popa sub or js movl repz cmpsl pop imul cmc push mov push add shlb jle xor push and loopne,pt sub cmp push cltd (bad) mov add adc les popf dec push lea jnp adc and iret xchg sub xchg adc stos mov hlt dec adc (bad) (bad) xor cli hlt inc in mov test dec in sbb leave mov lcall jg aad loopne jb push mov cmp das sbb or dec stc cmp nop es xchg sbb dec cs and loope push mov fimul pop es mov lock mov mov dec jg je mov add (bad) sbb pop or je or je jmp cmpb js icebp jne mov (bad) icebp fstpl sub sub jl mov jnp dec rolb jmp cmp xor mov test aad test popa mov xlat push (bad) push ljmp gs lea push mov or jle mov or out push dec fist pop add mov call xor mov (bad) and lret push mov dec in sub push inc xlat jne sbb lret xchg ljmp pop cmp addl insl push cmp daa jns adc add cmp jae lret pushf inc dec ficom mov lcall xchg cltd dec xchg (bad) enter es or nop push pop pop sar ret push rorl loopne pop xchg out adc or imul mov fldl sbb cmpb pop pusha pop push imul mov popa sbb push divb test or dec jge mov rolb aam or aas mov mov mov adc jnp pop test inc test inc mov into cmpsb ret pusha fsub xor push jmp ljmp push dec ljmp adc and and cmp test sahf movntps inc ret jne or mov sub adc mov add or les sbb lcall scas pop andb mov or xchg stos and pop push xchg clc je jnp mov cld rcrl add or into add mov push push xor ljmp dec mov mov shrb jae and jb mov add mov subl js add cli mov fimul and call lea aaa (bad) mov fwait pushf mov dec pop es cmp xor jne shrl sub lret lcall add mov test clc loope sbb pop jle pop or insb pop out or pop jl pop in lcall add jne incl in pop mov cmpsb and add mov fildll je dec je sub sub xchg mov jmp mov jmp push push push es push inc push adc popa mov jle fadd out push add pop and aad pop loope or xchg lods mov mov add jl pop pop je mov mov call gs cmpsl test inc mov mov jle iret mov mov add push (bad) jmp mov and adc rcll cmp cmp jg mov dec or xor sub add mov aas stc imul add cmpl jle adc pop and out sbb gs xchg shufps loopne push mov sbb out (bad) icebp add test test add adc popf pushf mov add or nop iret cltd test addr16 mov pop rcrb dec sub andl popf dec fistp adc cmp or fidivrl mov xchg lods fwait pusha stos iret add jmp xor mov popf lret sbb jbe add add pop shl inc sahf jmp in (bad) call jb and cmp push mov and jnp or mov mov repnz cmp hlt sbb jmp pop adc push loop mov add mov cmpb ja push xor sub push fstps fmull out scas push mov cmpb jle and loopne out fs jne mov add push pusha or repz xor daa or cmp dec vmptrld jns ss cs pop mov hlt push lahf and jmp fwait int jne cmpb shrl add ljmp scas jb add fsubrl dec rcrl fsubs fsubrs xor inc repnz out pop sub sbb add sti addb and adc jno notl pop jno daa fs ljmp sub or mov push jmp hlt lcall and sub push (bad) jmp push mov xor mov inc int3 push push or jge pop pop xchg inc inc add xor or sub dec cmpsb cwtl lret iret pusha pcmpgtb je orl add inc push sbb (bad) add and xor pop sbb test xor pop cmpl (bad) ja mov pop add sbb jnp sub xchg loopne xor push add pop or cmp or xchg sbb (bad) decb ret dec movsb es repnz out push sarb test jp add lea mov pop pop cmp mov sub xor add dec sti js mov add (bad) aaa jns aaa sbb adc pop sbb popa jne mov fisubl fstp (bad) les cmp sbb or mov fwait jmp sbb mov dec popf out les (bad) ds push pop push dec push push cmp pop pop cmp aam add push and fdivr add sub jb or xchg mov shlb (bad) fwait fwait mov mov sbb adc scas movsb jo das sbb mov dec cltd dec cld inc cmp fldt mov add xor add call mov fbstp leave movsl movsb je inc insl sub add jge call mov test dec ds inc sub or push push sbb pop enter inc inc dec lret call sti dec cmp lock cmp movl mov scas rorl add cmp pop (bad) xor add call faddl ret fnstcw add sub call or aas inc push push insb aaa fdivl ljmp xchg pop mov xor je xchg cmp insl sbb adc test xorb mov adcb sub sbb mov xchg sub sub lds inc (bad) pop mov jnp sbb cmp dec push hlt mov or out sub mov mov test mov mull cmp insb cmp or std sub add cmp add inc push mov pinsrw xor sub add and sahf mov enter out and push psllq add jne mov dec jne clc nop mov dec clc test (bad) inc add stos dec adc sub push test scas add and jg inc je sub je scas ret pop arpl add lcall sbb mov jo jecxz sbb sbb cmc dec mov getsec jg lods add cli xor ja dec mov fdiv dec pop inc rorl dec mov in adc jmp mov and pslld mov pusha xchg enter je jne xor repnz aam add in loope loopne jle jo cmpl mov mov pop (bad) jae adc add sub and xor sub mov sahf test fmuls test cld and jg fstpl jne popf add adc aam or and fs add pushl cmp sub and mov adc pop loope outsb popa sub mov movsl cs sub xor and decl repz ljmp push push in pop sarb sbb inc add bound pop and pushf lea out and pop sbb sar mov movb mov in hlt pop mov xor mov jg mov mov inc jmp sahf stc push lea sbb nop pcmpgtd add push or cmp inc or loopnew and push or dec or sub adc dec roll dec mov mov adc mov aas cwtl loope mov push cmp push or (bad) mov lds mov inc pop xchg pop jmp test cwtl in sub push dec rcll xchg stos fwait or inc add push dec popa shrl fstpt sub add (bad) mov xchg dec or mov fnstsw sti dec arpl jb push rorl ja rorb enter add push fwait ret xchg xchg inc repnz inc stos mov lods or push sbb nop lock sbb ret and push or add and inc xor jmp sbb lods or cmp and jne sbb and xchg sbb ds xor xchg lea cmp or pop inc movsb stos loopne (bad) or clc lahf jmp push loopne dec cmp adc ljmp inc push adc pushf ret push and lea (bad) cs or pop adc xchg mov scas mov jmp data16 loopne cld lods and cmp lods adc xchg or loop pop popa lods xchg mov xchg ror in or mov or jge clc scas in ret push fnstcw push in adc loopne mov jl int mov fisubrl push jle cmp outsl mov xchg insl add or jns push scas adc rol add scas mov ror test (bad) cmp pop push cld and jb cmp je jmp xor inc mov sub jmp and sbb ret mov add push pop lcall or push lds lock xchg mov push lea nop imul mov add jb mov push fs pop xchg ret cld cmpl insb roll sub inc mov jae or or mov int3 adc es test (bad) and pop in int3 xchg lock or jge lea jle push fldt gs mov js or jae or pop mov mov sbb loope cmp emms sbb lea outsb sarb cmp xchg jge mov mov mov movsl mov nop in jo and pop int3 jb mov adc and dec aad push and add and scas bound add sub pop push mov into sbb and rcr cmp cwtl pop adc data16 mov lock addl xor mov ja adc push jb add ret pushf (bad) fist lea push and scas pop and ss xchg jne ljmp shrd add sbb insb add (bad) mov cld or mov inc or jmp (bad) or cs adc mov inc test sbb add pop pop js test movb adc adc test mov pusha insl (bad) loopne aaa clc shll adc and loope ficom adc daa adc inc inc xchg or push movsb push loope les adc enter push or jne test rcl hlt mov cmp aam into jbe mov pop int3 mov fidivr add jne cmp ds jb add call clc jne lds cld pushf enter xchg jnp dec jne dec dec add mov push add adc nop into and ret xchg ja je add sbb rcrb cwtl loopne xor mov inc repnz add fistl mov js js outsb and mov and cmp pusha fcoms or shlb and mov dec jmp dec call addl aas or sub and add setle dec or inc mov mov ret mov xchg add lock popa mov pop es add sbb mov lock scas xor cmp daa inc test pop (bad) ja lock adc inc adc loopne scas leave (bad) incb mov popa aas jg mov scas das adc and test and push add and jle addr16 inc jge sub inc shlb xchg mov icebp cmp (bad) sbb mov xchg mov imul jne in nop mov or push (bad) xor and arpl add dec (bad) (bad) fwait aas inc jle fistp and cs in fwait mov dec cmp (bad) jg xchg or or mov fwait movl test insl fwait int jge pop mov jns scas pop jl ret sub orl lds pop and loope dec xor outsb enter pop jb out fdivl push cmpsb xchg push bnd mov and push pop rcl les stos imul mov sub inc cmp nop out aam ret or push inc test dec and pop cmp jl or push das int sub push ret adc jmp mov push sub addb inc sahf jge sbb popa loopne icebp jb dec ljmp test data16 js jge xor cmp push cmp ret lods adc dec mov inc add mov xor xor je scas push push iret clc sub pop or inc inc add mov mov ret sub push ret sub cmp jbe mov orb je xchg mov mov pop fisubl mov hlt (bad) adc mov mov loopne loope scas xor insl push rclb inc inc (bad) and test jne xchg out sbb stc push popf add addl je fwait movsb rcrb push adc and hlt cmp sub cli test dec clc in push mov and push ja xor push aaa push mov adc fdivs inc mov inc sti stos dec cwtl test jne xor je xchg pop or pop jne ret loope jg (bad) clc pop ja pop or or push push movl xchg add gs mov enter push data16 mov pop inc test call clc int3 add dec popa add mov in scas and xchg mov add push in or sub out cmp pop mov or mov les aam mov clc mov outsl popa mov testl inc inc cmp test mov adc inc push inc push mov jae imul jb cs rorl (bad) fisttp dec jne jmp push xor sub fcmovnu xchg shlb aam rolb add mov out enter pop loope stc push lock cltd mov xlat movsl and pop cmpsb cld call aas add xchg xor mov js out lock ret clc adc mov cwtl mov mov add call or cmp sub (bad) ja arpl clc mov and fisttp cs fmull sbb repnz add pop fcompl mov nop aam movsb sbb fsub fiaddl stc fdivrs push fstps sarb sub mov xchg int3 inc cmp int3 push cmp dec jge nop xchg (bad) out enter pusha or adc inc rorb fadds and fs les ret add hlt mov pop clc mov ja mov push mov jb xor cmp test or jle cmpsl inc add iret sarb icebp jg cld lcall push loopne fistl fs out xchg imul scas jne push je pop les dec pop sbb and cmp pop push and pop idivb jae push daa add les push shrl or je scas clc push subl outsb insl aad sub adc daa cmp inc inc sub mov mov pusha mov jge add insb push mov pop orb or xor dec insb and jmp inc lea mov fadd dec add (bad) out clc jns rorb test mov and ret mov and xlat pop ret cmpsl push in inc pop in pop loope (bad) xor aaa mov (bad) cld xorb xchg ds icebp sub mov adc enter mov sbb fwait add clc mov ret lret push test (bad) xchg icebp push popf insb lea xor enter sbb and jmp adc mov mov popf (bad) mov inc adc pop cs aaa cmp (bad) cmpsl sub int3 cmpsl push in cld aaa not mov xor mov push fsubs adc dec imul gs jo inc js inc jmp lock inc inc mull pop call dec ret xchg dec sbb mov inc loope mov rolb jbe xchg jl sbb inc cmp jne cli scas mov and es pop daa sbb adc mov add inc jmp mov les ret mov stos inc ja in xchg add ljmp push loopne push les sub in jo push mov inc or mov fistpl lea and add (bad) mov leave push or sub add pop popa jl pop xor lea cmp mov xchg test mov ficomp dec andb movsb fsubrl dec loopne sbb rclb and adc or sar add mov or adc sbb sahf add sub xchg xchg gs movsl cmp fs xchg mov pop or mov movsb jle mov (bad) popl dec xlat pop push adc sbb inc or movsb pop adc clc sub das clc mov jnp ja je push lds sub stc ret pushf sbbl xchg ret mov xchg and jmp adc out repz push cs sub in aam cmp fsts xchg sub lds xchg ret decl sbb fld dec rol inc decl cmpl arpl sub inc shr pop xor add cmp andl les daa lock inc incl scas add cmp cmp fisubrl xor inc aad fstpt inc rorb inc movsl jo mov aas xchg insl add xor push xor int mov cmp sbb and insb adc (bad) add xor adc push jns nop cmpsb cmpb or movsb push xchg inc or adc dec repnz cmp scas cli add push enter jns inc or mov sti cmp xor jne cmp push jno in xlat cld or scas xchg (bad) cmp ja push in enter dec aaa data16 jge mov dec pop pop or fnsave pop pop out dec inc mov (bad) jmp adc rol cmp int3 push loopne sbb loopne fisttpl (bad) cld mov and push in in repz fucomi fsubl int3 cmp les sarb out sub push cmp (bad) push xor test push jl cmp out pop insb out out jns fs lods pop push mov push push jle cmpsl jne jnp push fdivl or sub (bad) jns mov outsl in into test sbb movsb or cs sahf xchg movups cmp popf mov pop add mov repnz cld mov enter pop hlt cs push and cmp iret in or inc js jnp fsubrp sub push ja jbe aam lock cs out in les aam ja mov fs les push push xor movsb xchg (bad) mov xchg push pushf inc adc cmp mov leave cmp mov cld fs push push and jle and mov dec add notl (bad) and ret mov mov xchg mov push sub test and and sahf xchg mov sub xor out (bad) insl sub mov pop dec fildl add subb fsubl or push jb lods dec sbb in (bad) and jb and (bad) sbb adc pop xorl inc push (bad) fdivr xor jg sub subl fadds mov jecxz fsts enter inc jge mov inc jns push jns mov mov mov cmpsl inc add xor mov lcall addr16 dec jl cmpl divb add mov test fs ret xchg imul orl cwtl iret std push ficom xchg xchg push enter clc add xor jl adc xchg sarb faddl fdivrp pop roll xlat mov pop leave mov xchg (bad) enter mov jb in (bad) fbld push imul orl arpl es jecxz xor enter clc clc or push (bad) js push movl pop push loopne mov push mov ret imul sbb or inc fnstenv add or mov rorb loope cmp loope or in movsb loope pop mov push inc mov add dec mov out stos loope (bad) xor js (bad) pop loopne jo pop push daa pusha pop or mov insb rcrl jns cmp mov sbb and outsb adc ret inc es push push sbbb mov pop mov int sub cltd fs lods lods dec xchg dec es mov mov es fs mov xchg mov fs dec les xchg dec es mov mov movsb jb pushf fdivs fisub pushf mov loopne (bad) in cltd movsb jb fsubr loopne jns movsb in in pusha loopne sbb jb lock mov mov push jne push adcl ficomp cmc addl dec add pop mov inc fs jne dec loopne or rdmsr fcmovnu iret loopne dec adc outsl fs outsb (bad) cld cmp pop outsl jb inc insl jo inc jb nop jl outsl insl push je pop push cmp dec mov (bad) divb adc xorl pop dec add xor add pop outsl pushf in outsl pop push in daa pop in xor test add fld sbb scas cmp add and pop add adc (bad) jp test mov mov fimul out lcall inc out sahf imul push inc push push push adcb mov jnp push jl push push pop call mov enter arpl inc jne dec inc push fcmovu cmp addr16 insl fcompl add sub inc mov adc xor test add add sti (bad) sub mov add ret sbb orb dec es mov hlt hlt sarl int3 int3 jmp out mov loope faddp push iret faddl mov lret mov cmpsb inc sahf pop jg push mov (bad) push pop outsl mov sub add adc mov in pop cmp fwait add dec mov push data16 imul mov inc push push fnop ds call out jl sub fistl inc mov adc cmp mov lods adc cwtl or adc (bad) fldcw cwtl movsl nop push ds insl addl nop lret je mov scas pop push fisubl nop dec and fadd into fsubrs jo inc popa fisubl insb nop cld scas cmp ds aaa pop jo (bad) xchg fs mov (bad) mov add inc repnz xchg jmp and mov iret inc jb xor andl adc sbb jo xchg aam inc and pop adc cmp (bad) in icebp nop adc (bad) push outsb in xor mov pop mov sarb dec outsl or iret add adc mov push in fisub xor inc or or mov pop pop in pop add jno push out or lret jno das (bad) loopne in sbb daa call cltd es pop or or in or enter mov pmulhuw rorb out sub add mov nop add inc mov les out loop mov pusha push mov bnd dec adc pop xor cmp jg xor adc jbe clc pop js jle (bad) mov data16 (bad) scas loopne sub dec je sbb mov push fs mov xor nop es jbe add clc push dec cmp mov loope mov adc add inc mov dec pop xchg arpl leave frstor clc fbld rcrl hlt mov jmp lock ljmp inc paddsb cmp and call mov sub in jecxz sbb sub jae aas nop out call jmp mov push mov enter mov push and rorb stos (bad) les fcomp enter cmpsb jecxz mov in js xor icebp inc rolb or icebp sbb xor call addr16 sub push cmpsb push xor mov (bad) jne jmp and cltd test dec or sbb adc cmp and push dec sbb cli loope cld outsl daa fs js jmp inc fs sbb and push nop mov push shll dec repnz pop jb push or in inc sbb andnps pop pop and pushf pop jg hlt xor add roll sar push dec or xchg add lahf ret shlw insb jge fmul or idivl incl addb insb jnp popa gs out and pushf (bad) xchg jne pushf xchg stos push data16 jmp xor mov jl (bad) loop pop in pop mov call cld test test testb outsb push add pop adc rorb add jne fnstcw je dec stos dec aaa sbb xor clc jmp and (bad) jne movzwl lock rcr jl inc xor lea lret ret lea push jno repz test aaa imul pop xor pop adcl inc inc dec inc iret sahf jmp xchg sbbl inc adc inc add jecxz (bad) dec repz dec jnp push in (bad) sub in test call cmp inc sub fidivl push cld int adc inc enter sarl (bad) adc or xor lock add jne dec not orb inc sub or mov mov and inc and xchg jle iret add xchg shll ret pop mulb lods adc jb or inc mov clc mov je ret cs adc mov fimull adc add (bad) sub jmp sbb add jp adc loopne and jb in in sbbb loopne jle (bad) xchg mov jne or mov flds push xor mov pop or adc mov movsb and in js mov inc push xchg pop aad popa leave adc adc push or testb cmpsl add push add jb cmp jmp push adc cmp xchg pop add or sbb test jmp mov movsb jg lret xor inc (bad) adc push or (bad) inc in jmp movl mov cmp sbb shrb or rcrl xor lock je pop mov push lock push or inc jmp add (bad) mov or int3 popl ret out mov fidivr int inc xchg mov and sub or call (bad) daa addl inc pop sbb dec xchg pop push pop mov sub fwait les mov add adc test mov clc cmp jae adc pop dec stc pop jo mov mov push negl daa out push or decl loop sbb sub or mov mov ljmp movsb and pop fsts sub repnz fstp sub adc inc test mov fisttp js movsb fbld loopne into scas push ficompl rolb arpl xor mov adc jmp and xor mov pop ja push scas flds dec fwait push js push loop jmp jecxz lock and sub lea jmp cld add sub outsl mov sbbl xchg jmp add push jae mov scas fnstcw cmp mov sub inc sbb test add add js lock sti cmp outsb (bad) xor push jp and iret mov in pop incl ret fs fidivrl setae xorl adc aas jmp push movsb out lret inc pop sbb shll scas ss sti xchg push cld mov cwtl and xchg sub test cld xchg bound (bad) or das fcoml test dec dec jecxz or jb lret roll push adc push mov arpl test jbe cwtl add pop push push pop pusha push push addr16 pop aas add sub xor lahf pop ljmp push jne inc mov shll pop fimul aaa aam sbb or in insb pop lock lret add cmp adc sysret fwait and out jle roll inc push push mov iret sarl (bad) sub push jo ds repz mov cmovns daa loope push lcall push sub rorb cmp xor xor ret dec movsb dec or cmc mov jbe pop loop xor in jmp mov add sub sbb jecxz push xor or fcmovu sbb fwait xor sbb lock (bad) cmp and enter jb daa sbb cwtl or ret mov fcoml cmc imul enter jmp and mov jo push push push jbe js loopne inc call jmp rolb inc roll pop pusha je dec add jmp data16 xchg mov pop or outsb sbb sub iret push lcall xlat enter cwtl mov fisub jecxz jp or sti (bad) std jg sub xor ret fwait hlt bound movsl fist cmpsl inc dec and stos daa adc loopne lea xor (bad) clc push call dec dec lock or push mov add xchg push mov adc mov hlt scas inc and pop cmp int3 jmp cltd add in cmp and jne pusha das sub (bad) aaa inc lret inc (bad) cli movsl push push push xor sub push sbb add pop mov push sbb pop add pop sbb sbb flds inc jbe aad mov arpl push add iret repz loopne lar out xor or xchg (bad) mov cli pop xchg push cmpsb push dec loope iret mov fstpt push aad mov push jp sub sub mov in sbb mov jg sbb clc pop cmp pop addr16 (bad) xlat inc fstp push adc push (bad) jl test dec dec sbb mov (bad) inc (bad) mov (bad) mov or aad lods jge mov pop lea insb inc cwtl je data16 je jmp outsl gs jno xchg clc je (bad) push clc inc mov test adc sti cmp out in (bad) xor add iret mov dec mov add lahf mov pushf out push mov fwait or mov ret mov fsts adc push and sub xchg fisubrl or lret insl gs mov jns mov (bad) adc push (bad) sub arpl scas jecxz and jmp sbb jnp mov xor and aaa jae mov cli mov pop and mov sbb jl pop or add mov fldl sbb pop in addr16 jb (bad) jle adc or sub jge adc mov pop or pop btr push cltd sub fadds add out leave sbbl rcrl nop pop jb leave push push je sub daa pop pop push dec mov and and dec (bad) xor mov je std mov pop add fisubr das add repz repz and scas loopne enter mov ret push add jp mov xchg daa cmp pop mov push pop push and pushf pop add xchg push cld pusha xchg out adc out pop or mov cmc icebp sahf out daa stc add inc or push adc add cmp and jb gs mov dec mov push and sub call lock adc cmpb push xor in repz cmc push movhps push and or and imul mov mov shl cmp xlat inc pop or sbb enter jl adc hlt cmp loope icebp (bad) sbb push add mov cwtl pop xor stos (bad) add push mov sbb add add sub pop aaa cltd jne mov adc xor aaa sbb or inc adc xor push bound inc mov (bad) (bad) xchg cmp in in add or sbb mov xchg xchg mov ja test (bad) hlt jno pop sub inc outsb ret cmp mulb jmp dec call jo mov ss sbb xorl mull and in (bad) daa lods popa mov addr16 or call add loope call xchg rorl push enter adc mov cmp test xchg lock cmp pop or imul cmpsl repz out int3 loop adc xchg idivl sub fstpt cmp pop push arpl sahf dec sbb clc lock aad pop repnz loop push idiv enter lock mov mov dec fisttpll push xor cli sub mov js daa aam dec leave mov and xor fs dec mov dec in jmp or mov xchg cmpl sub test push iret repz pop (bad) push movsb push mov idivb inc xor cmpsb out sahf outsb pop inc pop outsb orl xchg mov xchg das fstpl mov push imul adc xor push sub or mov push adc sub adc out sub pushf jmp jo sti xchg xchg mov xor inc sub add and pop arpl outsb aam test adc in dec negb mov adc rcll (bad) dec jmp (bad) loope sbb out sti lock pop xchg and jg add addr16 adc test add subb pop or mov jmp pop out leave enter adc out inc xor ret into pop mov rolb dec xchg or pusha nop mull or shlb and popf nop pop (bad) or mov lds cld iret repz dec adc push jbe xchg cmpsb lcall pop adc fnsetpm(287 jnp push dec adc add or sub cltd in cwtl sahf mov add mov pusha iret sbb xchg sbb sbb inc lahf adc adc and inc popl fstp imul mov mov pop jb push incl add insb (bad) add rclb aad in sbb sbb sbb add arpl pop push or inc mov iret repz pop adc das inc pop xchg aaa in repz adc lcall pop test pusha xchg xor (bad) push sub rolb push sbb daa nop xchg sub fildll pop loop xor mov adcb sbb out pop dec sbb inc (bad) adc push jne and mov add and add xchg aam nop mov xor out xor movntps neg ret push jb sbb jmp stos sbb jl jmp addr16 mov fstpl dec rclb add daa lock lea add rcrl or or mov fstl das cltd push sbb sbb add adc add addb sub repz bound jb mov repz sbb add pop pop adc sub outsl mov arpl and stc add inc loopne aam fcmovnu xchg jo and pop (bad) mov imul loopne neg inc sub mov pop or push sub pop push mov and or push fildll inc dec xorl pop and pop or (bad) pop test pop push inc mov test push in adc cmp fnstcw pop inc sbb imul iret jg cmpsl sbb push jnp,pn xor into loop (bad) or push push add and (bad) loope xchg sbb rcrl test loop sub sbb adc imul movb mov jmp daa mov mov outsl popa inc push pop insl push jl (bad) jmp inc adc stos cmp and cmp push sbb sub pop push push out or or or mov movsl (bad) daa jmp es sarl mov or cmp add pop daa clc cmp mov stos rcrl pop mov mov or add sbb inc aas out mov fadds fs scas inc push lahf hlt fistpl insl int inc sub adcb mov jb push mov cli mov fildll dec xchg pop inc pushf ret xchg (bad) xor sbb aaa or test mov push lahf in mov aad sbb adc mov ljmp cmp cwtl mov or dec (bad) dec sbb sbb cld adc outsb xor inc pop call orl fldcw data16 adc flds jo adc push inc inc push dec rcll add mov hlt mov rcr pop pop and xchg push or adc cltd sub push pop stc mov (bad) aam loop pop cmp xchg cmpsl adc cs inc ljmp flds or movsl mov sbb cmpsb pop xchg je loopne fist fistpl or sbb xchg inc or lahf dec pop leave dec sub pop push mov push xor push xor sub adc imul xchg pop mov pop rorb mov mov and lods push mov lret fild push ja repz pop push sbb push (bad) test mov orl sub mov dec and insb inc stos push inc xchg test es cmp xlat xchg push adc xchg add jns mov adc push push add lock or push add pushf nop push addr16 and xor fildll push add iret orb push inc jb cmp sub and xor call iret js adc adc leave push mov pushf cmp roll dec outsb adcb mov mov sahf fnsetpm(287 jnp daa out or push in or popa and jne cltd push inc fisttp or fisttpl adc pop out jns insl inc pop adc pop mov add sub pusha test aas rorb inc adc or lods or pop adc or and pushf lcall daa pop inc es (bad) cmp jns popf es jnp sub daa lret xchg fiadd push push cmp push adc pop add sub mov pop push mov mov mov xchg or xor mov adcl adc add inc dec imulb mov cmp push mov outsl clc push jl or pop scas inc add xchg mov sti les xchg lea push addr16 mov nop clc pop int push and js add cmp int in dec jmp inc lock jo jo add fsubl pop and cmp xor mov ss and fmull cmp or inc nop cmp and mov cmp rclb mov fwait or (bad) xchg loop out or (bad) jno mov mov cltd cmp or addr16 (bad) or add or sub lds lds inc out adc or lea push push test ret inc push fs xor sub or mov mov roll jb cmp mov jb sub sti es jecxz sti mov imul mov sbb jns out pop jbe mov aad fldt and iret repz pop je enter lods xor pushf pop fs inc popf push and movb ja dec scas fimul jne xor mov clc mov adc push cld push mov daa xchg pop xor inc fnop lock or or andl cmp int3 call and push or movb pop push or rcr lahf sbb fmull mov neg es test mov inc mov mov adc inc movsb call mov movsb int3 enter outsl push sti int add into push insb dec adc arpl or movsb jns outsl rcrb rcrb daa mov sub lock pop mov imul inc out cltd mov outsl push sbb mov idivl add sbb xchg mov enter stc jbe,pn sbb mov inc fnsave mov jmp lods lods mov scas sub cmp mov sbb enter movsb negb dec mov sbb inc (bad) and add (bad) sbb xchg jno jmp (bad) and nop dec mov jmp pushf mov sub stos sbb add and lret test inc mov ficom jmp repnz pushf xor mov inc icebp mov in inc pop test outsb xor xor mov pop mov in popa iret pop xor rolb call inc (bad) (bad) xor sbb and sub rcl cwtl xor movsb and or loopne pop sub out in popa xor cmp mov enter dec nop dec push push repnz jo push cli ss loop xor inc push stc cmp repz shl sbb pop jnp cmpsl notl xor ds pop pushf out scas pop push je nop stos leave mov cltd insl dec push cmpb cmp xor adc mov push xor adc mov push inc test add push cmp adc cli in loope test jno cwtl adc xor loopne insb popa and fmuls fdivs aaa sbb add aam aaa shlb sub ror jno sub push nop (bad) pshufw pop shrb cwtl adc xchg or ret outsl mulb aaa imul jns negb xor xor roll push cmp test lock lds loop sbb rolb pusha inc pusha xlat aaa mov insb in mov add inc ja cwtl xor out mov sbb int3 cmp aaa rolb orl movsb aaa dec daa and movsb aad mov cmp cmp cmp cwtl jno lods or add mov dec mov (bad) nop popf nop ja in clc dec aaa and mov xchg shl pop add cwtl xor in cmp xchg arpl and sbb data16 int3 loopne mov lds or or or add xchg aas gs cmp jns push xchg dec or cmp and pusha or push push mov or bound or and cmp ss xchg imul js or cmp loop loopne fistpl add xchg (bad) jne add xor sbb jno andb cmp jae xchg and dec lret ret sub pop sbb xchg push stos pop pushw cmp push lea sub outsb inc insl cs xchg dec or enter pop call or push xchg (bad) sub testl scas (bad) lret (bad) xor rol mov pop out in clc jmp movw ja jbe insl push dec mov add xor popa mov lret mov mov leave adc mov (bad) pop and adc xorl fsts je (bad) jmp push dec (bad) lret push int3 into cwtl dec or push cmp push and mov sub or push dec adc push inc push aad movsl mov xchg imul into daa pop andb mov fistpll scas pop dec (bad) push xor sub push add cmp xchg xor ja dec xor adc mov pop js inc sbb (bad) notb pop pusha test dec cld fildll sub outsl lcall outsl push or pop add dec dec ja sbb dec inc or push jecxz ficomp movsl nop cmp add nop ret add in arpl xadd cmp cmp cmp sub cmp inc sbb lock pop inc das daa inc arpl push sub dec out sbb dec xor xchg (bad) mov or xchg pop insl and sub cmpl pop sahf adc call jb and mov jmp mov gs xor rcll cmp sub (bad) and dec fbld or and xchg inc faddp (bad) and punpckhdq aaa fdivl decb jb mov popa mov xor insl adcb jo jns dec jne or daa mov mov fwait daa dec sub lret popa xchg inc push ret aam xchg pop frstor in add add fcmovb aam insb shlb mov rcl movlps cltd dec pop xor daa stc (bad) aas push outsb imul inc arpl add and inc iret or ss cmpsb add cltd xor and inc jb fcompl push mul daa add inc sub test pavgb popf cmp push out sbb pop fidiv enter or xor mov mov add imul mov cmp andl xchg cld (bad) add inc hlt pop cmp dec sbb push sti sub pop pop sub lret jbe mov movsl shr (bad) test push or add mov adcl repnz (bad) cmp adc movsl in lds roll and inc das inc outsb jns pop cmpsb call push gs je mov and fidivl test pop pop fs or inc or xchg daa mov xor mov ret inc out out dec inc fwait pop cmp cmpsb add push pop test mov pusha pop jb pop or jle pop into popf xor out mov mov push arpl call push daa je and or sbb push mov and outsb and jo cmc sub sbb and xchg and mov loop lock rcr outsl add or or call iret popl outsb dec decb and sti jg or inc loop aam inc sar sub sbbl jg sbb hlt and jg lret mov pop add inc mov adc clc add arpl xchg push adcl js mov add jmp fsubl add mov and pop or int3 cs stc lock mov jo mov outsb dec rcrl mov dec (bad) adc mov inc test andps push popa std dec xor pop enter inc rclb sbb inc aas enter sbb shr or ljmp push add cmpb mov (bad) add ss (bad) mov lcall (bad) add lea and push prefetcht2 sahf out or add sysret inc call je sbb sub inc jae cmp or lcall xor jecxz adc mov fidivrl jmp dec clc mov daa jmp mov and sbb dec inc pop push mov inc rcll pushl dec jns push lahf es addr16 orb fsubrl sbb xchg push out xor popa ss xchg xor pop fsubp xchg inc sbb popa sub mov ret mov cmp or cltd sbb pusha xchg cmp xchg add ss je push or lods inc stos adc repz aaa ljmp mov fcoms mov clc adcl mov cltd or lea mov in bound xor xchg ficompl push (bad) xorb xor push inc xchg xchg jge (bad) shrb leave jge stos fimull jecxz (bad) hlt sahf mull jg outsl or aas add inc cmp jle mov mov jg in mov cmp dec pop enter leave jbe dec aas adc inc xchg add sti loop and cmpb je push movsl nop mov outsl pop sarb ret push cmpsb jle inc inc mov push aad xor aaa and add call inc jle mov lcall push (bad) clc inc dec jmp dec and lcall mov add aad pop scas jmp mov (bad) lds mov sarb negl inc xor cld adc adc jp add call movsb lahf mov icebp ffree cmpsl cmp lret cmpl adc xor jne movsl in inc into cmp add jnp jl mov xorl decl and xchg orl cmpsb mov pop pushl nop loope or stc or and sub popa adc sub inc call sbb ss jae fdivr pop mov scas mov adc add rorb or add adc ficoml or mov je or or or lahf stos addb adc cld aas popf inc jo cmp in clc arpl xchg mov sbb sub test (bad) lods fdivp cmp adc mov jne (bad) xlat (bad) xor push cmp call jle mov pop add sbb mov out lock cmp or (bad) nop fld inc test enter push inc xlat jae sbb into push sbb in (bad) ret movsb das push outsb lock rcrb or mov int3 pop inc jle jg sbb scas xor or xchg jne dec dec pop aam out mul jns jnp push adc insl movsl mov jg push call cmpsb sti inc popf jecxz pop add and stc mov adc push and fstpt sub add mov pop ja (bad) mov cld flds and adc xor cmp xor xchg adc scas sbb sub aad mov and xchg jno pop icebp insl popf fdivl scas mov test dec jmp sbb adc cmp mov inc xor push scas inc and lods adc sub adc mov push out sub or in movsl dec push fmuls pop stos mov stc lcall inc sub mov addr16 and xor les outsl mov cmpsb xchg cmp aaa or add rclb ds lahf add stc jmp dec or dec adc cwtl hlt jmp xor inc scas dec dec hlt pusha lods mov imul cmp sub rorl arpl movsb adc sub inc xor (bad) (bad) mov cmp add add popf popa mov call in fsubs mov sub push or das scas inc push cltd leave push dec rcrl and iret repz inc push bound xchg sbb cwtl ds dec popf or inc inc push sbb xlat fdivrl adc cmp out popf lock sbb aas ja sbb add int3 pushf pop sbb sbb pop fstl cmp enter cmpsb push dec out pop rep sbb push mov addr16 out jmp insl add dec sbb popa daa jl dec xor loopne ds xor movsl pop sbb jbe or push insl xchg (bad) xlat in dec or cwtl and xor clc mov data16 cmpb in cmp inc dec fldl pop push xor add and jmp out cli outsb mov (bad) mov or inc ss or fistpll cwtl dec cmp jl sbb add cmp roll movsb pushl add jb push add les aas scas inc mov inc push adc sahf cmp push adc pop not lcall pop pop lea jg cmc jge cmp je lcall xchg xor inc and mov pop pop repz inc test cmp sbb lea add pop loopne inc add (bad) cmpl mov push or lea adc ret decl and adc mov or or xchg add and cmpsl test push data16 push pop sti pop lds sub je leave inc cwtl lock dec sub clc sub xchg int3 jge,pn and ret imul in dec add inc dec mov and in loopne arpl sar jg sub in popf and add out repnz fstpt xchg loopne jo loopne jo xchg cmp mov mov mov mov ja dec dec pop sub jl mov mov inc dec jne out ret lcall stos jne mov lock es push pushf xor int3 rolb in adc popa lea fwait out inc aam add mov cmp cltd mov and xchg into jno (bad) sbb std push nop inc and push jo mov je cwtl sarl or loopne insb add cs es pop cmp push push pop inc jmp xor dec adc ret adcl je lods cld inc pop push jne dec adc fsubrs ljmp sbb sbb (bad) psrlq dec and mov into jo add add cltd aaa or loop addr16 sub push inc mov unpckhps addr16 xor ljmp push into dec sub add test fstl out lcall (bad) ja ljmp test add fbld add jb push cmpsl or cli test daa jl daa or ffreep adc movsb sahf add add push or gs mov popa add das xchg enter adcl sbb and fdivl ja (bad) push sbb or sub dec sbb mov mov xchg ss fcmovnb pop sub ret add and push mov pop xor ss jne jnp ss inc dec clc lea out fwait inc add cmp or adc test jae cmp or aad insl sti mov mov dec sahf clc fwait out add test (bad) sti add fldl push (bad) clc mov mov add subl push pop sbb mov push or mov clc icebp mov rcrb hlt sub into add xor sbb jmp mov dec dec test js mov sub fbld hlt gs ret mov sub or inc inc daa (bad) lea movsl add dec mov jmp cmp cmp push mov mov push add pop push add adc mov cmp addr16 rcll add or add insb popa fwait xchg jae daa mov mov or hlt mov das les add push cld dec dec push add es cmp mov out loopne in or sub adc inc cmpsl (bad) push push push enter in xor mov push dec fwait in int out cmp jecxz daa ret les loopne jle jl adc inc in js inc jecxz repz je push sub push and dec mov mov ret jge jge or lret (bad) xor xchg loop lea push int3 pop dec xchg cmpsb jmp int3 jmp out or pop jge push jge sbb mov add jge pop inc lahf aam xchg mov adc loopne popl ljmp divl (bad) cmp cmp int mov adc sbb pusha dec fwait jl in sbb push push dec push test jne sbb xchg push bound and fs dec push xchg fadds push fs xor scas or dec (bad) les inc mov pop les mov xchg in xchg cld inc mov les cmp inc rcr ja pop in or testl std xchg pop ret pop or pop jbe xor add jo cmp stc xchg sub and aaa cmpb jns mov mov sti ret std cmp setg testl pop inc cmp push test ss mov imul lock add adc in dec add xchg movsb mov push push hlt inc rorb inc sbb cmp arpl add sbb ja das add add add add loop dec push and xorb xor adc pop mov sti nop push lret push mov incl lock dec (bad) aas test mov adc ret mov dec movsl test sbb loop jno pushf and and sub pop subl jae jne mov adc xor out mov mov adc in inc xor cmc jo das fist sbb pushf stos cld push mov test mov rol inc les and xlat movsb jae push pushf xchg push xchg in in xchg xchg xchg xchg in in cwtl cltd lcall popf sahf lahf in in addb in test in mov in lea out aaa gs inc adc sbb jo ja daa cmp dec dec sbb push lock fs lock ret jns xor pop mov lea insb mov push cmc or xchg test cmp and xchg test fidivr es out mov or sub adc imul xor add and pop insb or outsl movsb jb and nop cmp mov nop sub inc orl sub jb daa decl and or xchg ret or les push push push mov and mov (bad) or enter ret push aas and lret pop and roll lock mov andb std push jge xchg inc fs mov sbb push and push test sbb adc jo sbb into add fnstenv pop bound arpl movsl bound iret sbb daa das jl mov movsb push mov mov loopne (bad) negl incb fwait cmpb sbbl mov inc dec pop arpl fisttpll or nop fdivs lahf daa push mov pop scas aad insl rcrb lock and fucomp (bad) push mov inc outsb jge mov dec jnp or in jmp xor inc rorb call lods adc das gs push pop data16 (bad) dec add inc daa adc clc push dec or cmp inc sbb addr16 pop enter and cmp and push arpl arpl push sti shlb (bad) negb add push sbb and push adc pop push inc sub pop jb lcall or jbe jle and adc xchg or push and sbb outsl or mov addr16 stos call cltd or jecxz pop lock pop mov sub ds (bad) mov dec data16 aas jmp mov fiadd in push adc add jl mov sbb hlt push cmpsl push lcall pusha divl sub rolb dec push xor cmp add add jb dec fidivl add test jge movsl mov or adc add pop (bad) lock inc and pop sbb ss leave pop jno push cmp in call movsb std popa jl jae cld gs gs nop mov or or stos cmp cmp add jne jns push (bad) pop inc popa jnp sub xchg test arpl cmpsb hlt stos mov test push mov loopne call in mov imul mov mov adc iret push push lret stos jl xor popf mov xor mov inc adc lahf mov out imul push cmp orl lret popw cld (bad) add adc xor pop pop loop jne xchg mov sub mov xchg imul (bad) dec sub and les inc call inc add xchg rcll ljmp icebp push test xor and pusha ret dec lods inc or lock jl pop dec push cmpsb (bad) decl adc xor test jne pop mov push cs dec xor cmp jle add popa pushf adc inc orb mov jbe or jo jg cmc xor adc lock (bad) sub mov add jmp dec lock (bad) pop inc sub insl jecxz mov (bad) or or or rsm mov outsb sbb mov movzwl sub sbb notb rcrl sbb add mov cltd hlt sbb jne adc and jmp jle (bad) fucomi and je jmp cmp sbb test cmp das int3 out jne xchg or pop push jno aaa cld add je sub adc (bad) in mov pusha sub (bad) cmp mov mov cmpb je pop (bad) push push xchg add decb ja add incl adcl sbb cmp mov cmp insb push add fdivrl pop es or movsbl imul or jle rcr dec add ret jns mov mov in ds in push (bad) aas sbb adc mov mov cmpb repnz lock jb add add call (bad) out mov stc lock mov or mov push (bad) imul imul test (bad) xor call jge mov leave movsb fldcw insb movsb add sub cwtl notb bound cmc lret scas mov enter lock or (bad) dec adc mov sbb adc in jecxz loope ret jge scas cmp add xor cwtl js push in inc xchg dec loope test shrl out mov dec sbb pop pushl push int dec jmp add rorl pop pop test cld push xabort push mov xor pusha lods in or lcall mov push sahf mov and inc cmp repnz dec outsl je add sbb jno or idivb test sbb add sub je jge addb lods mov jmp sub push and mov mov dec ret imul ficom adc xchg or movb pop jl jecxz icebp jecxz addr16 xlat rorb dec and pop lahf cmp adc add adc xlat cmpb test jle fidiv data16 cmp cmp pop push ret call or ds push ret mov lods cmp ret cli cmpsb enter stos mov inc ljmp sub or ss aam daa or scas jns js lods (bad) push push jge (bad) pop or xchg cmp data16 jo xor pop pinsrw jns or loopne pusha xchg xchg mov jle or enter jle int bound clc (bad) jge or ret outsl test in pop pop jne mov outsl add ret mov adc and in out ret popa scas and inc or mov pop cmpsl mov je or dec je jmp fsubrl push cmpsb adc pop js lcall sbb mov mov sub pop addr16 lret je jmp gs cmp rcrb xchg adc xchg add sti xor push lret loop jmp cli les inc loope jo mov jno lock jecxz (bad) fadds gs jp adc (bad) out xor cmp aam pushf test rorb cs jae decb not ds call adc fdiv or push push add (bad) hlt lock add jb movsb into push iret or movb nop (bad) pop (bad) (bad) (bad) or ret les clc cmp jne xchg cmp dec sbbl pop and dec jb mov dec and in push add clts add sbb jne mov and fldl jnp add popa enter mov mov fsub movsl std lcall pop fstl movsb xor add (bad) aam mov cs lahf mov fdivs jo pop mov pusha (bad) cmp add dec push push (bad) adc mov ficom cmc ljmp lea rcrb and cmp mov cmp pop jbe add xor push jno mov imul rorl ja (bad) lods mov enter idivb cld jge je insl or sbb gs adc (bad) (bad) xor movb inc mov fimull cmp adc or cmp mov sti fmuls aaa pop clc xor mov add inc sub sbb jge jecxz pusha or aaa or out push fs jns movsb mov and xchg rcr imul dec jnp add cmp inc push inc outsl xor cmp and (bad) or (bad) push shl cs jne jmp pop or add jmp adc push or jne xchg divl pop sub (bad) lea pusha jge mov or pushl inc mov lock sbb adc test out sbb imul xchg scas xchg or ret lret rol aam enter fistpll mov ret lea imul sbb mov mov add fcomps jbe (bad) jmp push sub fwait sub xchg inc ja (bad) sarl and cmc mov or mov ss sbbl and dec ja add push inc pop mov les (bad) aaa push or jb fldl ret fs or dec fs sbb push dec push dec pop push dec or mov sti lcall mov or gs imul fcmovbe orl inc sarb rclb mov popa insl test push loopne mov lods into lock add inc pop inc inc push cmp movsb fwait cmp sbb adc or fstpl les or and and in cmp pop addr16 adc push sub pop add cmp cmp jae xor pop add mov adc add outsb or decl adc pop mov sbb mov add adc (bad) arpl cmp push ffreep shr imul jg dec sbb scas pusha adc cs adc add iret je adc inc mov outsl imul mov icebp stos shrl inc cmp in imul icebp nop mov dec imul incb push orb jnp mov stos jmp push dec (bad) jb jb mov jb jb lods test mov pushf cwtl xchg rcr (bad) jb int3 enter enter test dec mov aas dec mov ljmp add push inc insb imul roll xor mov add je mov mov push dec push ja jb mov inc push push jae call xchg gs xchg add (bad) cmp dec or inc imul gs or bound fstpl outsl sbbl sbb adc xor addl outsl imul xchg (bad) dec outsb insb jns adc scas sahf mov imul xlat (bad) imul mov inc mov mov or dec imul adc xlat aam scas adc fild test (bad) in stos push dec dec add enter js add sbb iret pop nop or call cmp dec gs jne jbe ljmp shlb (bad) cmp push sbbl dec lds inc jbe dec or push sub pop mov pop mov add test or pop mov inc or sub pop xchg insb data16 (bad) negl inc inc xchg mov mov stos or inc pop in in stos push outsb mov jle dec shll daa or scas xchg xchg and push leave lock inc pop and sub pushf and push pop or pop mov scas ds andb fiadd mov mov add cmpsl push mov in jge cld mov into and into dec jle push andb fs rolb jae lods es sub sub or imul setns inc (bad) insl jo push sub mov mov and jnp nop jb or outsl adc fbld jmp dec outsl and jle (bad) xor adc les fldcw cmpsl sbb mov lcall xchg hlt scas test or popa jmp scas mov shlb push pop mov xor pusha pop inc push dec scas or dec push add mov lods (bad) stos push shl push jl incl shrb mov test movl xor stc test mov ljmp mov mov pusha or pushf aam adc sti hlt int3 int3 test push popf roll out ljmp cmpsl out test push cs scas add inc test (bad) mov or or fist out sbb or add (bad) pusha pop out xor cmpsl popa adc dec leave ljmp sti jae fs jo int das pushf jae push rclb sahf cmpsb add rcl imulb add adc dec nop push mov add push sbb (bad) enter sub sub inc scas test xor test neg jge xor pop jbe inc outsl out lcall mov mov jnp mov aaa sub clc push mov mov hlt bound cmp loopne mov mov aaa mov nop scas pop sbb ljmp test jle loope ja pop add xchg stos mov pop fdivrs enter xor test iret rorl mov mov jae rcrb in shrl push pushf ror lock pop push xchg pushf loope mov push lock pop xor push inc into xchg jle test ficom push add push imul daa mov xchg je mov data16 fs in ret ret push ret lock sarl loopne les push (bad) insb les or xchg jl outsb fbstp movl cmp fild or insl (bad) bound inc mov pop data16 xchg xchg mov ds sbb addr16 (bad) out out adc jbe or mov push mov leave mov leave flds push xor fisubr pushf jo dec jnp lret push imull divb lods (bad) mov int3 cs jbe out mov (bad) andps repz in or push in push or adc push in sbb inc push in and add xchg inc xchg mov pop les xor xchg mov mov cmc add adc jl out pop sub mov dec enter adc push mov mov and fs insb or jns dec inc push or je pop or punpckhbw or push fbld add or sbb fwait out and dec xor mov stos mov mov int jne fnstenv lahf js mov test mov fidivrl mov (bad) aam xor data16 mov push push aad idivb test ds idivl push mov rclb jo push dec gs mov push adc faddl pop inc nopl jo add xor dec or decl mov stos mov dec mov mov aas (bad) fcomp inc cmp fsubrs testl inc sbb out loopne nop aam int3 insl or test iret repz (bad) popf cmpsl js dec inc pop sbb inc (bad) int dec (bad) inc push in mov sub aas ret aas lock cmp mov xchg mov or les scas lcall pop fmull test faddl inc es in xchg add add xor js jnp mov jbe push addb push sbb adc sti adc pop jmp inc cld (bad) sti inc cli (bad) stc (bad) clc push push push fdivrp data16 push push push loop push lcall and sub out inc je dec push jnp cmp sbb cmp dec push sub subl or ret pop pop and mov mov incb push mov sub movsb jne or add test push popa addr16 stos jp adc lcall mov cld mov aam sub push inc push lock push arpl dec scas dec enter (bad) cmp leave mov push mov push mov test ss jnp cwtl or cmp push add aam add ja cmp incl or push xorl jnp lea lds (bad) and sub test pop lods dec dec fs push xchg or test cld adc lea sub bound int push push cmp daa adc gs dec and enter cmp jne fsubs fiadd add cmp ds jle adc js add jb jne push mov fcmovnbe adc scas ds shlb add lock (bad) sbb loopne and lock pop jo in push mov dec daa mov or test (bad) xchg inc (bad) sbb lds je lret inc mov and adc pop lret mov push mov les cmpsb scas lcall (bad) add lea mov sahf mov clc (bad) sub fldt add cli jne ja xor fldenv outsb jmp xor sub add daa fistp sub mov ljmp add mov ds movsb sbb test cmp or rorb mov pop jl and sbb add add jno je movsb or lds and xchg cmp add mov sbb (bad) clc mov jge inc lea jb cmp lods mov push sub pop jmp sbb rcrl sbb jmp pop mov loopne inc jb or cmp inc jp inc or (bad) (bad) and js sbb jne pusha or xchg hlt mov cmp sbb xchg or pop enter sbb xlat (bad) scas adc or test arpl xchg xchg (bad) jbe ficom lea jge pop call sar ljmp add movsl pop gs (bad) popf pop imul test pop inc inc fdivrl fmuls jp dec inc inc cmp loope loop cwtl sbb push cmp adc sub movsb jne std (bad) add sub inc add adc pop ficoml pop dec or sub (bad) adc adc xor jo sub and pop test xchg sbb imul adc in hlt mov inc add cmpsl mov fld xchg xchg (bad) lcall incl mov xor fcmovbe cmp add movb int out xor stos push mov xlat (bad) out mov jl inc push (bad) sub dec jne (bad) mov inc imul push mov outsb lds push (bad) cmp inc sbb mov lock jg inc pop lret pusha inc rcr nop sub mov js pusha jecxz into loopne popf (bad) mov insl mov xchg dec xchg popf adc mov dec pop cwtl dec xchg loope mov mov hlt inc mov enter lock adc push mov add inc sbb cs adc rcl jl mov sbb pop push sbb sub movb inc stos test shrb (bad) jl pop call pop xor xor xorb outsb repnz inc pop imul pop adc popf mov insl sub cmp push xor cmpsb (bad) jecxz (bad) (bad) dec call jne pop add sbb sub mov test sbb inc jb jle aaa test lret out jae push inc test (bad) test xorl (bad) in int rorb mov mov mov pop xor mov cmp or ja xchg push lret mov mov mov push outsb cwtl in mov enter cld xchg mov mov lcall adc and mov xor push enter call inc roll rolb lea xor orl (bad) dec jae xor jne nop push out imul inc inc mov mov inc add jo insb mov fwait pop xchg nop jmp and inc pop jae jns pop mov cmpsl lret add jo add adc pop add dec sti inc pushf and mov or jp fstpl clc jle lods push dec cmp pushf repz cmp push enter inc sbb sbb xchg inc icebp stos xchg pop cmp xchg inc pop pop mov push inc sbb and popf jmp jmp mov das icebp push je mov insb cmp and jl and and daa lds and pushf cltd jns add xchg mov inc lds in xchg add inc dec mov push sahf pop cwtl inc sbb or mov nop inc jno fsubrl roll cmp ds rclb or ss addr16 dec add cltd add or push dec test pop inc scas js outsb mov jno adc xchg push mov test sbb xchg push leave sahf lahf pop popa dec mov mov or inc sti mov fcomps movsl js test (bad) jo or iret add sub sub lea add xchg add cld mov jmp ret mov (bad) imul mov or sbbl and cmp jne sbb sbb add or leave or lret out add push es add jo push mov xchg adc mov add insb pop cmp fidivl xchg adc push fmul clc cmp jl pop mov pop mov add ret mov outsl adc push adc stc nop mov add inc ljmp sbb insl pop add int3 (bad) sub pusha mov inc je mov push xor push (bad) sbb adc imul adc cmpsl pusha add (bad) cmpsl pop lret aaa xor add xlat fdivrs mov nop sahf mov aaa pusha push aas xlat arpl xor (bad) ret and sub cmp lods outsl add xchg jo xor push or add jne xchg fildl and inc pop mov rolb stc add aad out mov clc test mov jo je add mov (bad) xchg sub xor cmpsl movsb add add push insb mov pop fldlg2 or cmc in inc mov push (bad) incl insb jno rol scas mov adc mov or cmp mov movsb mov jo (bad) mov inc or and cltd aam mov imul (bad) mov clc (bad) mov push inc jo sbb mov test idivl adc mov push or inc push xorl mov jae loop inc adc (bad) (bad) cli cmp incl or leave std sbb xor add xchg outsb pop sbb adc or js xlat shrb xor xor into cld clc aad ds or dec or push sbb shl loop adc or fscale push mov and push test mov je or aad inc pop mov aaa test movsl jmp subl adc ss adc test popa and mov icebp sbb push outsb inc inc ret cmp sub jo xor inc sahf add or adc leave je lret jnp lahf jmp and push jo mov stos jmp sbb loopne fadds rcl das and pushl cmp jge add adc xor aam jne sbb leave rcrl push jb std jle cmp push xor push push or inc sbb pop insb and and add add push push mov cmp leave lods (bad) dec popf ror add xchg add dec pop pop test dec sahf pop fnop shlb cmp push push adc (bad) xor scas dec jmp or shl scas sbb mov test call push fildl lock sbbl jle test inc loopne jo rclb xchg test std ja call std jg dec hlt dec nop rolb fstpt jo pop mov orl mov mov mov jge lret push outsl mov addr16 adc pusha mov (bad) mov push sub push inc mov in add mov add jmp pop lods nop fisubl inc jne in inc mov dec add pop lods mov add or inc cmpsl add mov push pop das aaa pop push mov add or mov or xchg neg andl in mov inc stos xchg xchg cmp (bad) divb fistp inc jae jge dec adc jecxz dec cmp dec adc add pop sar mov jmp call out je xchg sub push jae sbb loopne dec mov push (bad) test push (bad) lds pusha push mov (bad) jnp insb aad pop loopne adc sbb addb push add syscall mov mov inc stos adc btr push add insb loop mov sub push inc adc jmp cld aam clc neg dec add adc add in adcb xorb xchg ror sar pop ja add mov add outsb push ret pushl jmp inc cmp jne inc decl jne les and scas aaa add pop xor in push shlb xchg mov dec and lcall dec push scas stos mov adcb add jl mov stos inc (bad) outsb add lahf movb outsb jae test (bad) jae cmpl xchg dec jmp clc daa and call xchg add and mov notl adc cmp sbb mov mov adc jb sbb mov (bad) adc dec negb pushl js sub push (bad) jo jne rorb pusha and clc add pop mov (bad) push pop imul mov inc pop sub cmc inc add dec cmpb xor adc inc push add sahf and sbb clc inc mov aam or add (bad) cmpsb fistpll mov inc jle (bad) and jne and lods or mov inc pop or in mov jg rcrl inc mov push xchg inc test out les scas popa adc inc inc sbbl sbb repz fwait lahf cmp dec jbe sbb and sarl and (bad) or scas fldenv sub clc icebp xor jb mov adc fildll call pop sbb enter cmp les mov push add mov scas test and clc inc jno mov popa imul scas (bad) arpl xchg cmc mov mov mov adc mov push push add rcrl pop mov nop xchg scas xchg lcall xchg inc and and adc jo add or sbb add xlat daa (bad) dec clc rcrl add push xchg push mov and mov inc add add push push xchg mov adc fiadd push lret das addl (bad) jne mov adc popf fistpl dec in push fcoml mov add cmp xor loop fdivrs mov pop in push ljmp clc or mov sbb into bound sbb xchg mov push and outsb out mov mov mov lcall cs ds xchg mov mov and xchg push cmp xor cmpb rcrl pop hlt adc xchg ljmp xchg (bad) test imul shl adc mov lock neg into lock pop xchg mov mov rorb sbb arpl push lret fcompl dec lea popa lret add loopne mov mov adc mov push or jne xor or inc xchg xchg lcall add push push xor push in and insb dec mov fisub leave pop call je movsb mov out fcoml in sbb xchg fs mov test mov addl pop adc mov pop push cmp pop push cs aam mov add jb fcoms loope out loop insl mov nop xchg hlt scas pusha add pop adc mov mov ret je sub clc test mov sbb ret sbb or or fcoml pop mov push or push push or cmpsb scas ja and sbb sbb repnz (bad) dec mov dec pop push mov in mov ror and add adc sbb cmp in or add (bad) rdmsr adc add movsb xchg out cs adc les fwait sbb jne jl add lahf jmp adc sbb mov call outsb push out or pop mov xchg sbb arpl rorl pusha nop or out mov push lret xchg shrb or icebp movsb mov (bad) insb dec inc jb jg mov xor loop push clc clc sbb mov sub and loope pushl sub pop loopne fstl jg pop sub and push mov pop enter out adc or pop shlb enter xchg sbb sub shlb pop dec push sbb cmp mov mov mov popf loope inc xor call pop jp fistp daa dec mov add mov jnp movsb lods ret mov mov pop push loope sbb cli and mov mov xor out mov inc xor push xor nop and mov fisttp cltd mov jge jb hlt mov aad mov pop mov icebp or shr jo insl adc pop js or incb sbb dec mov das in mov or adc sbb mov std in lods or (bad) lods mov and cmp mov fiaddl lods inc or or push add lret sub out and cmpb jne or add int mov mov push mov xor leave roll inc (bad) dec inc or add cltd movsb inc sbb or cmp out loop xchg aaa xchg mov hlt mov push mov scas sub add test in cwtl add and mov xchg ret (bad) aas testb cmp pop idiv xchg cmp jne testb orb xchg into mov sbb aaa hlt scas push adc add movaps loopne inc popf cmp div or adc or (bad) iret cmp sub or dec (bad) lea adc fwait xlat jp adc addb inc inc jecxz,pn pop arpl add test lcall push nop sti popa pusha loopne cmp mov or xchg mov negb mov leave data16 subl and xchg enter mov (bad) and sub add dec sub mov dec xchg test (bad) mov adc int push sub push add xchg adc test pusha mull cmp inc stos icebp mov inc adc or fiaddl rcl (bad) xchg (bad) and pop test or iret movsl jge dec push sub scas dec xchg dec inc test push or rorb mov mov pop and pop add add inc add pop (bad) lock sub clc or dec outsl outsl scas inc push cmp aas mov (bad) jmp rcl sub clc inc sub movsb jge,pt lea mov ss sbb inc or call repz cmp xor add out ss js ss repz pop pushw adc scas popa mov aas aam add add adc dec push sbb repnz sub add (bad) mov mov outsl shr or movsb xchg mov add shrl mov adc fcomip add insb shll pop mov (bad) je jo test mov or cmpsl daa clc mov add jg jg call orb sub and nop and add jmp dec push fisubr jne adc (bad) jl dec add mov xchg push arpl lret dec nop mov push stos pop in jl rcrb bound adc pop add inc xchg dec jo hlt shr ds lret push dec shlb (bad) jg jl aas popf mov and add (bad) jne sub inc jge sbb addr16 leave aam adc add hlt jl mov adc lea mov andb sub sahf add je or rcr fisubr (bad) adc pop or shrl sahf clc lret or fidivrl push stos enter inc sbb in xchg push js xchg inc push jge or add push add movsl loope add arpl out js mov jl test inc invd (bad) popa sbb lods dec lods movb sub xchg push inc mov imull xor ja sub repnz fwait call lds flds (bad) jo mov out adc test movsb cmpl in xchg jge adc and loopne mov fadd jecxz cmpsl js les adc fwait pop scas hlt cmpb sbb inc or fadds pop loopne mov xchg outsl test sbb cmp (bad) pusha sub mov or cmp int3 and fild mov pop out data16 or pop and xor adc add inc stos xchg push sbb mov adc sbb jne add pusha fiadd cwtl mov orl or dec jle outsl dec cs cs push mov jg add sbb mov loopne adc xchg test popa ds jne push add ds add push or push jg add rolb add (bad) cmp inc xlat divb jbe add sti jge sbb push loopne mov (bad) (bad) mov mov push mov mov mov scas cmp jno inc cmpsl movsb adc cwtl cmp add xor xchg lret mov rol mov outsl xor out cld mov lahf xabort push daa and jecxz xor mov lea aas or and (bad) or paddusb fcompl rolb push movsb iret and adc outsb cmp inc in push dec out cli ret mov xchg in and in pop daa jg cltd add pop adcl fs dec lods push or jb mov imul add dec fdivl sub icebp pop (bad) lret xchg data16 or xor xor fcmovb rorl mov cmpl lods xchg repnz out leave nop jnp xor mov sbb bound or inc pop sbb cmp arpl mull dec leave test enter sbbl jns xchg mov push inc and sub or mov mov hlt dec or aam or xchg sbbb rcrb push pop jae sub adcb into cmpsb icebp push and adc or (bad) aas push mov addr16 or dec jno fisttpl jmp pushf or add add sbb (bad) and inc ds mov push push mov arpl div icebp sub inc add movsl or scas insl or push add imull sbb test lahf imul cltd add popa adc and add fsqrt cmp jge push sbb popa adc scas nop subb or and rcrb and test adc cmp mov sti je push jne aaa adc inc push adc add subl cs pop or int3 or orl test ds bound mov cmp jbe in pop lret out mov add sub cmp je in or or sub test and add mov lret and orb mov pop adc or imul add int3 scas or add push inc push enter push jg add or xor pop stos jo push mov push sub push and mov mov xor adc (bad) aam insb jl or add testb (bad) je out adc pop jo shrb in iret fmuls movb stos mov ficompl mov addr16 xorl jmp subl sbb or adc int3 mov notl add sbb rorb or dec fcmovne add cvtpi2ps push jbe pushl jne lea add test orl xchg lods out enter jmp adc dec xor leave sub adc or out xchg fimull adc inc pop lcall or lods (bad) fimul add jne movsl pushl jmp out mov lea (bad) adc rol add push mov add cwtl aas lret or inc mov inc mov aas shlb iret jbe cs sub pop add rolb jmp pop les sahf shr xor fisubr cmp or xchg aaa inc iret dec and sub andb adc pop fisubl (bad) jmp inc dec pop arpl test ljmp icebp pop inc cmc and pop add adc push sub xchg negl mov xor add mov scas mov or xor push int3 lea push lahf int push repnz lea and jl test xchg loopne outsl (bad) loopne adc mov aaa xchg mov dec inc clc cmpsl sbb sahf sub shlb push enter cmpl sbb pop rcll sarl xchg cmp arpl adc dec lock sti jp pop ss adc clc subl push dec rclb fwait cli icebp pop notb dec pop inc cmp jl mov movsb rol scas cmpl dec (bad) xor mov andw leave and rcr not xor rcrl fist mov shll push jne mov cmpl pusha rolb sbb pop lahf add pushf insl js (bad) mov jl or cmp xor int3 push adc adc dec js es pusha sbbb xchg ficom lcall xchg sub add and push call aad aas sbbl pushf push pop imul jne pop mov add mov cmp orl xchg lock mov and (bad) (bad) jl in fcom dec adc jecxz ret loopne dec movsb mov and fdivrs or lds add adc push xor stos lock cmpsl dec cwtl mov push mov ret mov jnp cmpsl ds js and rcr fwait mov push movb adc mov aad in loopne xchg lods cwtl sub mov add inc sti fisttpll jo divb aaa test jne pop xor add and xor insl scas arpl decl data16 pop cmp leave clc pop lock lret call sbb or addl (bad) mov pop lock ss insb lahf and jnp fdivrp movsb jne xor push movsb cmp xor es add push add clc flds and (bad) sub cmp push add push push or jne add mov stos adc enter nop pop inc scas rolb imul or sbb add punpckhwd push sub mov mov add outsb xchg pushf xor outsl shl mov aaa mov push mov popa xchg inc xor push mov pop xor leave xor push sub xlat movsl inc mov pop data16 jns or push xlat (bad) pushf loope and jb clc outsl or pushf and dec loopne outsb adc push pop inc pop dec add je test cmp es in cmp push ja add adcb addr16 sbb push loop movswl test and lsl mov mov push xchg pop fcmovu out jno cmpl xor loopne cli or outsl sub mov mov (bad) in je popa in je (bad) mov jmp mov mov (bad) add push cmp iret cmc cli xchg cmpsb xchg push mov out ja sub mov xor lret mov mov xorb or cmp popa loopne push dec fsts lret lret int3 sub adc push pop cld push add jne pop ja pop mov xchg sbb pop push adcb rol (bad) and hlt (bad) dec cmp test mov bound fyl2x sub xor icebp cmpsb inc inc insb stos dec push mov jnp test sub fldcw jmp mov je popa les pusha mov popf pop jmp lods test or cmp and int cmp adc and or xor fiaddl or adc push lods outsl in jae adc and and lods push sbb das (bad) push sbb pop shll je or mov mov and xchg orl push pop push pop fs cld push pop call fimull push std cmp cmc xor add jge mov pop pusha mov cmp mov or xorl and fisub aaa int3 ret (bad) or xchg add cmp or sub push push push dec inc lret cli sbb scas addr16 lret mov ret jo cwtl fwait pop push popf or and in jae roll fdivrp sub cltd int das in adcb fadd loope insb scas mov push mov sub sub pop push mov lock int xchg mov clc imul imul jno push hlt stos pop loopne (bad) iret push pop mov dec sbb adc cmp pop dec sub lret mov test mov add mov push jae in addr16 shll pop xchg fstl push sub mov cmc test in xor aam adc pmaxub jne dec inc adc in pop push enter fmulp sub xchg in add adc mov or adc sbb dec inc shlb daa cmpl fdiv adc popa and fincstp pop and pop les or cmc mov fcoml popf or fcoms scas imul push testb or outsb lods pop sbb mov or cmp jae push sahf mov dec cltd lret (bad) std cmp mov mov pop popf xor xchg pop jne int cmp mov add push jbe pop subb in adc inc cs fwait add jae in adc pusha sbb push je dec dec rcr fisttp inc in fcoms adc fnsave sub xor mov xchg sbb cmp push imul nop aaa pusha xor adc pop add inc repz sub fsub push lret cwtl and add loopne in adc xor sbb adc mov mov test dec sub xor jno rorl shufps loope adc inc pop xlat outsl or sbb cmp pushl sti test xor inc sbb sub ret lcall enter cld imul jge popa sub or add xor into pop cltd lock xchg aad clc adc push sub notl jbe cld or jmp mov or mov or mov ficoml and xchg repz xchg (bad) add xchg xchg addr16 sbb add lock jb adc and add or or mov lret in mov xchg xchg inc mov (bad) insl mov lsl ja jnp pop jecxz or xchg repz subb and js out cmp xchg mov push mov nop mov repz mov mov sbb sahf inc sahf adc in lock loop inc jns jne dec movsl iret bound mov aas fbstp clc sub pop adc mov and ss lea (bad) mov inc jae dec loopne dec xor mov mov adc or cltd sbb daa cmp ret dec popa bound cltd fwait pop adc out push out adc orl or mov mov mov and cmp jne mov push push add mov andl cmp fcoms in push pop bound adc test add add shlb jne lea lahf shrb xchg addr16 fsubrl jl loopne adc dec add call adc adc fsubrl mov test dec mov aad lods cmp hlt lret mov sub into or in push cltd out hlt sbb jb test push mov mov cmp cmp sti add negl or cmpb ljmp sbb aam iret mov js imul mov mov mov push data16 lret imulb ds pop cmpb sahf mov outsb loopne dec sub pop lea adcl jne (bad) or lock rclb jl xchg jmp mov scas lock pusha shrl xor xor sbb add jl push paddq pop adc pop out mov out js push fisttpl sbb jnp rorb and test nop mov add (bad) xor jmp call rorb mov adc ror pushf fadds add je nop push sbb sahf shlb hlt (bad) jns out adc cmp fstl sbb (bad) jg hlt xchg call cld push jb adc gs add or sbb pop sbb push mov data16 adc ficompl sbb test aad (bad) shrb repz mov adc push jle mov dec clc out mov cmp pushf xchg call push aas add cmp xchg in mov icebp inc daa add adc arpl fnop jmp mov jnp pop insb pop rorb clc std subl mov adc fidivl leave fldl fsubrl out mov adc dec push mov inc daa xor cmp pop popa and enter inc (bad) idivb push ret jns call daa xlat (bad) pop ficoml ljmp imul mov loopne adc cmp pop rcr int movsl dec (bad) in push jbe repnz pop push rcrb add popa jl inc in popf arpl sub cli sub adc or mov xor (bad) cmc pushf inc push sbb sti nop dec fcomp cmp dec or mov mov mov or cmp sbb jbe push call loop ret mov pop mov sub push push aas mov jle aam adc je sub cmp sbb add inc aaa xor test iret ret pop popf and cmp jge mov push dec cmpsb outsb inc imul stos lods add repz and jae and imul fcomp mov dec sbb pop or xchg in fucom rorl out sbb test out aam ret popf xor lods cld sub add push sub add rclb fdivl inc das dec hlt mov sbb imul mov dec repz fcompl sbbl adc mov sbb je pop imul and pop imul or call mov (bad) aas lea jmp xchg xor or mov lds xchg dec scas xor das xchg (bad) mov adc out add push lret je pushl shrl pop sub orl out inc lahf aam push fistp push xlat or imul or ret lock xchg xchg ret sub test mov (bad) inc and push jmp pop hlt adc xchg test out andl sarb xchg movsb jnp dec cmpsl and aaa (bad) push test inc or or add sbb clc mov mov push lods jg add bts jmp (bad) or dec inc mov loope add mov test (bad) or call daa fwait sbb adc and div icebp push push js notl inc add addl add push mov push adc adc lcall call xchg insl inc int3 insb xchg push jb leave xchg inc or cld icebp cmp inc mov dec pop jae sub sbb (bad) dec dec int3 inc push shll sbb movb mov out mov inc cmp (bad) roll cmpl pop dec xchg cmp pusha mov cltd adc dec hlt pushf inc inc sub lahf loop and lds inc or incl add inc repnz pusha addr16 or push inc lods cltd aas inc es adc lcall dec cmp insl add shlb sub les rorb daa outsb and scas shll push add cmp and pusha repz rcll pop test adc jno xchg jno sub jnp hlt inc jno mov xchg push cmpsb mov lret pop in push iret repz sahf cli add push sbb cmp iret repz push gs outsl adcl pop pop stc in sbb and add push dec mov ret (bad) mov pop jecxz pop xchg lods jmp pop push adc mov jmp mov fadd imul adc cmc sub stos pop das (bad) cmc nop inc movsb js cld xor cmc or inc and cmc push and fxtract mov test mov mov movsb sbb adc mov jno lret ret and sbb inc aam dec cmp mov dec mov adcl add clc lahf inc pop repnz xchg jo (bad) jae jb loope sub (bad) es inc pop and (bad) or cmp inc push call cmp in jg add insl andb xchg (bad) dec mov rclb mov xlat dec rorb lcall xor clc inc push fmul cmp gs inc inc call cmp add into (bad) movsl mov test (bad) fcomp push mov pop cmpsb sbb cmp dec xchg inc sbb inc and lret push add sub pop orb sarl sub lods aad loopne mov les lods jle and clc sarl cmp pop gs inc inc push (bad) jmp mov and js fidivl mov in pusha shrb popa loope (bad) mov or add push pop cld pop mov xchg cli inc cmpsl mov movsl dec sub out mov push mov sub push xchg dec cld and shrl rcll in push inc enter pop jnp ret clc hlt mov (bad) dec lock sahf aam mov movsb test adcl mov push add in fnstenv jecxz inc jl decl les cmp stc dec sub nop call or or mov sub aas sbb xor add rcrl cli sti mov popf and out mov mov push dec add push push sti das jle xchg pop cs fidivr adc sub cmp stos inc mul les je sub dec sbb jmp rorb mov mov movsb xor dec andb subl jns xchg sbb sub add inc mov test mov pop mov leave sub adcb das ds ret jmp push mov call leave js mov and or cmp add in adc inc cmp cmp or pop sarb or dec inc push sbb dec cld pop mov lret push inc add int3 (bad) fsts add dec mov push pushw xchg mov loope push mov data16 (bad) mov add ret mov (bad) sbbb xor jg sbb cmp add add add cmpl fs adc jg mov push add cs leave mov mov add fdiv js lcall ja jb stos pop add leave push in and adc push call fisttp pop stos loopne aaa add (bad) aaa sbb (bad) pop je cmpsl push loope test cwtl mov add or fmull dec inc xchg loopne pop shll and push negl push xor lcall mov addr16 mov inc push fstpt daa lods mov push push pop push sub (bad) out dec pop sbb adc jge out add daa jns dec pusha insb (bad) nop les mov pop sbb movsl mov mov xor push add mov inc aaa test and pushl sub push xchg jg mov mov cmpsb out or pop push inc pop rcrb xchg sub push add mov xor dec test pop pop xchg adc pusha adc inc adc add sub cli (bad) dec push std imul adcl sub ret add fbld (bad) out mov xchg sub mov and bswap mov shll mov add sbb jle or (bad) enter rol mov or mov dec std mov fisttp int jae pop movsb sbb notb repnz mov icebp mov pushf ret sti push or faddl sub imul adc cmp or sbb jg cmp sti lock orl or xor sbb mov jp daa sbb xchg fisttpl repnz jmp adc repz add mov pop mov mov sub or or enter fidivrl loop cmc inc or test and jae jnp sbb inc xchg (bad) and adc xchg xchg dec daa dec popa out popa bound xchg inc loop cmpsl lock xchg aam mov mov mov xchg and lcall rol movsl lods jmp pop and movsb and mov pop adc mov adc test shrb orl mov or inc push xor mov pop in (bad) xchg adc add jb sbb (bad) and test movsl adc popa call cwtl test and fsub int push adc inc fsubl dec xlat adc push or pusha les add jge pop loopne push dec aad and dec xor cld push push fs data16 jo push setne mov test (bad) inc push jo incb inc adc icebp rolb sub mov sub outsl jo pop adc or pop pop fbstp add pop pop sbb inc fs inc inc leave fldl pop inc notl arpl lcall rcrb add dec js mov loope inc ljmp jecxz sti dec jne cmp jne hlt ret inc pop daa call das cmp dec push rolb mov jg je push imul ret jmp aaa or (bad) hlt mov sub imul rcrb jg or call in sbb mov ret ret jle arpl inc dec jne in or es das cmp pop test add push faddl int3 push cmpsl ljmp push sahf xchg jnp sbb jmp sbb inc stos and fisttp lcall push xor adc xor cmpsl inc outsl adc daa adc inc push pop pop or mov aas les fistl and xchg outsb jg inc cmp jg push dec cmp movb push xlat xor lret push pop mov test clc mov pop lcall andb jmp xor dec sbb sbb inc add pop icebp and mov lods or ja arpl aas repnz jne pop imul imul out mov jmp sbb xlat ss pop cld fcoms sbb adc addl bound arpl outsl cmp iret sarb in inc and and in das pop sbb push test dec jnp jne inc adc adc or inc push xor lcall mov shlb mulb sub jmp iret adc nop mov or fnop pop pop jg psubd nop decb fdivs lods out stos jnp imul push cmpsb out sub mov lock int addl iret cli test add dec add lret xor loopne add adc rorb in xorb xchg xchg andb sbb xchg jmp ja xchg jo aas sbb push das out inc (bad) mov xchg push test adc sbb cld pushf mov xor clc or ja xor pop push jmp mov push push mov push es repnz pop mov jmp (bad) push ret aaa rclb inc inc test or inc je dec push xadd inc cltd sbb xlat sub stos xor leave adc out sbbb leavew loopne and or rorl pop arpl or popa xlat adc ror cmc ficompl adc test inc mov (bad) mov xchg loope xor popa mov insb jp fimul sub inc mov push adc movsb mov or pusha adc adc push adc iret mov in or sub push btc add dec add test not dec adc outsb adc push aam pop xchg dec mov xchg sysexit mov aaa iret pop leave add pop or add inc push add iret (bad) jmp sub pop adc (bad) or cli add jl sti add add inc lret ss int jno out push or movsb add pop push sub inc add out add pop sti inc or xchg xchg or std popf lods leave adc push adc cmp loopne xchg mov pop xchg lds notl dec cwtl sbb cmovb pop (bad) in orl (bad) xor loopne add push rcrb lret hlt mov sub pop xor sbb adc mulb incb clc insb xchg xchg jb mov mov or mov inc cmp mov stos pop hlt jle mov jecxz mov pop clc sbb jl lahf or fwait std mov rcrl jge ljmp sbb mov push in xchg mov fdivrl cmpl lods pop pop or pusha push fcompl imul aaa in sbb insb dec mov dec adc cmp cmp (bad) push (bad) push outsb popf xor cld ja sbb mov (bad) rorb sbb jecxz sbb in call bound or adc vminsd adc push lea es ret mov popf adc pop mov mov cs cmpsl (bad) negb pop loopne mov movl nop bound sub sub je aad jnp sub jns leave inc pop mov dec shlb xor pop loope in mov push push pusha das add xchg pop fildl subl lea nop stos sbb xor repnz xor inc add adc or je loopne mov mov insl sub stc fwait daa add or push mov jl mov cmpb add jg xchg outsl aaa xchg push sub mov pop or add sti xor mov in inc mov or fistpll push mov push cmp test or jbe cld dec jge adc arpl pop loopne mov push mov pop js add mov sbb shr xor xor xchg xchg (bad) xor ret mov inc insb stos and jbe pop xchg std inc insl pop outsb xor or dec lods xchg pop hlt push dec mov push push mov addr16 shrb xor adc icebp mov push cld xlat mov movsb adc inc add int3 mov xchg cld push jo fmull pop cld cmp xor jns pop movsb push xchg mov pop jge push loop adc pop mov (bad) pusha mov pop scas stos (bad) mov mov mov pop mov test dec sarb cmp xor fs mov cmp sub ds pop lea mov lret sub add push in aam sahf jg pop rolb ljmp cmp enter loopne sub xchg push mov test sub lahf jno jb daa daa daa jae jne daa daa daa daa ja jns daa daa daa daa jnp jge daa daa daa daa jg popa bound daa daa daa arpl daa daa daa daa addr16 daa daa imul daa daa daa outsl push push push daa daa daa daa push push push push daa daa daa daa push pop pop pop daa daa daa daa pop pop pop pop daa daa daa daa pop inc inc inc daa daa daa daa inc inc inc inc daa daa daa daa inc dec dec dec daa daa daa daa dec dec dec dec daa daa daa daa dec xor xor daa daa daa xor daa aaa cmp cmp daa daa daa cmp daa aas and and daa daa daa and daa daa sub sub daa daa daa sub push movsl push mov lods fucom push jno aas cmp ffreep mov insb outsl xor pusha pop mov and and ja addr16 inc stos enter mulb mov sbbb sbb push jne cwtl or fisttpll pop inc sbb shrb notl ret push fwait jns xchg mov data16 fwait (bad) xor fwait jae fdiv nop ret or ss in push jl or add jae je push adc fist inc and je insb icebp add push data16 fadds or je arpl adc xchg or adc gs mov and imul cmp mov mov lahf jo,pn popf jae xchg jo,pn es outsb in sti and int insb cs jo outsl gs push inc popa jae add sbb jnp in or push inc jl mov imul loop aaa add iret or sbb adc scas dec les cmp push push je mov insl dec outsl jo je push inc jns sbb pop push int3 adc nop or or and add sbb mov xor pop notb loopne loope add or adc sbb fdivl inc jb fimull mov pop nop sbb add fcomp or dec jl jp or jne lcall or xor mov inc outsl jb jae and or pop sbb sbbb push insb push sbb inc movsb sbb mov std jmp jbe push aad (bad) jge pop mov inc sbb lods xor out xchg ret sub pop mov idiv lahf add imul inc mov insl ficompl sbb (bad) jnp out push and mov xorl js or jb pop lret sbb add add or mov aaa add test push add push aas mov xor or push jno (bad) fcmovnbe xor push push dec gs sti adc les or add cmp pop or cmp jne je nop add push loop push sbb sbb push jl mov bound rcrb sbb push outsl leave stos mov push add repnz ja lahf pop sbb lds pusha pop dec adc aam rcr imul (bad) hlt jp leave pushf cmp add insb pop pusha in sbb xor cmp adc aas loopne call lsl push inc je data16 (bad) out mov pop mov ljmp cmp cmp nop lahf pop sbb add cwtl pop mov inc cmp imul add test fdivrs xchg pop insb inc nop pop test cmpl inc push dec scas or jl addb inc popa sbb mov sbb push movsl mov sbb imul mov ds aas sub int3 push or repnz test add inc shll cmp xor imul into xchg fsubrl movsl pop ret push sbb inc stos inc mov fdiv mov int3 dec pop stos pop push arpl imul lret mov es sbb mov fidivr mov outsb cs cltd jbe mov add push enter pop push sub repnz inc mov inc jle,pt imul pop fs iret in dec into das cmp push movsb pop mov add jnp rolb pop lock adc mov sub sbb inc pop and popa inc nop dec add in cmp bswap mov push cmp add or xchg and jae cmpsl inc and (bad) push push or push add je sub bswap xchg pusha push and cmpsb bound adc or pop cwtl arpl xchg arpl arpl test negb sub lock xchg popf sahf bound or cwtl inc push push pop inc imul outsb je mov mov sub push pop adc aaa nop push and rolb xchg ds or jno cwtl xor push push pop mov mov insl popa addr16 lock sbb and and std (bad) loopne push push push lods ret nop push and jae mov movsb push dec and push fcomps mov dec lahf mov push mov shrb dec out dec insl push outsb mov jae dec imul nop imul mov rep jno jbe js or lods andl push jno xchg push jg xor je movsb jnp inc sbb mov insl in lds mov push ret pop push cmp nop xchg xchg mov into lock jle inc mov lea adc or loopne aas mov idivb pop sbbb xchg dec push push aam xchg xorl sbb mov js subl (bad) push pop fwait call push dec arpl pop aam inc push (bad) xor pop xchg xchg pushf in lahf xchg lahf hlt lahf mov mov push pushf jbe pop xabort pop adc enter lahf mov cs and add or test (bad) stc add cmp pop mov shlb loopne,pt fsubl outsl and add dec inc jmp pop nop push mov mov xor rorw inc inc add jne xchg inc and sbb push aaa adc and popa push lahf push or mov xchg push mov je jecxz test shlb lahf mov add xor inc and xor je sbb add mov (bad) lea lock sub mov inc cmp xor ljmp add ret adc into fcoml dec popf addb or pop sub (bad) inc cmpsl dec incl or movsl leave rclb cmpsb jno add xchg add add xchg leave outsb and inc js mov decl lock sete test add cmp add pop pop icebp outsb adc inc sub inc adc lods in sub adc rsqrtps jmp adc daa adc mov fldl mov sub fidiv pop adc lret cmp (bad) je mov rcr std xlat cmp inc and roll mov ja enter xchg pop cli sbb inc xchg imul aad or add iret and movsl (bad) (bad) aaa sub repnz nop popa sti add jge pop add mov imul sub sbbl sbb call mov pop cmp push (bad) xlat or mov or jbe into les cmp push adc loopne add aam in adc pop cld out push pop popf (bad) mov dec xor lock or rcl sahf jp test insb cmpxchg sbb jb add or pop mov pop dec insb mov pop push xchg jbe add std mov adc xchg gs insb pop (bad) ds add addr16 imul sbb es dec pop addr16 xorl lahf cmp or arpl imul jno popa mov jl or jns jnp adc add ja jbe bound dec mov dec and daa push adc (bad) mov test das cmovae add xor jo push pop imul add add inc (bad) orl das cmc (bad) fisub inc je inc push xchg dec and add or rorb insl lds je or mov push jmp les fs lahf sbb jae cmp or push sbb mulps push rolb jg gs mov repz adc mov (bad) pop adc imul aas outsw inc push (bad) and pop outsb jne adc or insb and repnz bswap or pusha sbb aas jne leave jno arpl add clc xor shrl ret cmp and adc xchg fsubrl or (bad) xchg mov jge notl add or xor in out fs mov lods ret (bad) test inc les push adc out push add lock mov push dec pop inc dec inc push push inc push add add inc inc inc lcall push pop dec inc dec dec arpl fadd pop dec inc inc push adc inc push dec movsb mov mov push xchg popa imul inc dec dec and out ror cld inc inc xor xor adc pop in scas fs inc inc dec inc xor adc pop enter push push push dec sub imul dec mov (bad) das xchg insl sbb mov inc add pop push push test push or push dec pop push repz push push push dec push inc scas lods jecxz jns inc dec push mov mov out mov test sti mov add push mov stos lock push hlt sbb test add mov outsb mov orb sbbb jne add add or stos jge lcall cmp jbe and sbb mov or dec sbb push add jbe push or jle or add add mov nop js or inc ret test mov push fstpt negl inc cmp mov nop push mov dec xor sub scas aas xchg mov pop lods fisub pop and cmp cmc or loopne dec dec sbb roll inc cmp push pop jo insb xchg mov ret das push xchg inc dec dec jbe sbb ljmp sbb or mov jne jo adc xchg loop addb cmp push dec fmuls mov mov cwtl add xchg or movsl in jae jmp mov cmp dec cwtl rclb or pop xchg mov add push mov xor clc lret lea lods mov int3 and push sbb std inc push mov out mov cwtl rolb enter and testb je rol jmp push mov stos xor pop inc pop inc cs sbb lret sub lea incb addr16 mov mov cmp mov mov jl jmp jo in xorl add fcoms sub flds jecxz push mov or or fisttpl js cmp rorb dec xchg pusha mov sbb andl lcall xchg xor ret add xlat jne popa pop repz mov add adc jecxz insl and insb in or push inc test pop cmpsl andl es aam xchg test pop inc lea push mov sub mov (bad) xor adc adc loop cli frstor and fcom jnp push xor push das fiadd fsubrl push aam mov xchg push divl rcr cmpsl bound mov cli or xchg push outsb inc sbb sti sub ffreep xchg pop xorl jb push mov xchg cmpsl dec loopne inc sbb push adc pop ss add dec loopne pop and in sbb push cmp in dec ss mov popl pop sub es pop cmp sbb xor daa leave cmp (bad) xor and add dec pop sub adcb loopne add push inc pop sub js mov adc jne imul add movsb adc (bad) rcrb mov ds in xchg out pop push xchg cmp insb or cmp nop or das sbb adc lock or pop push xor pushf mov mov in scas and in roll sbb jb daa nop cmp cmp push enter idivb push dec mov sub sub push nop femms in adc ret add dec mov push out ret ret mov mov push cmpsb repz mov sub orb add inc lcall lock push mov and (bad) sarl jbe cs jge imull fs pop cmp data16 rclb mov jo aaa adcl jmp je (bad) mov cs adc imul lock or cld les and movsb dec push aas push ret inc xorl mov xor jmp mov movb cs mov jo cmp popa (bad) fildl and mov movl mov es push inc xor push sbb daa inc adc das pop sbb jmp inc and int3 cmp fidivl inc xorl mov (bad) outsl mov inc outsb and lock push adc mov ret imul imul (bad) call ds sbb push and push or push add or (bad) sub or or xor out out push push or push push sbb sub or xor add sbb push pop xor or pop aas mov mov sbb les test mov or and xchg sbb or iret sbb js pop add cmp xchg fimull jb pop cwtl mov in lods vcvtss2sd or add nop mov jge inc push insl xor imul test fs inc push sbb lea mov push mov push mov xchg sbb jl add cwtl inc push pop xor insl and aam loopne xchg imul and inc outsl (bad) (bad) es sbb iret add jbe ja and enter rcll sbb cmpsl sbb test push and sub add and adc cmp daa addl das or mov repz vpmovsxbd sub les sub (bad) fmuls lcall pop mov push insb inc sbb and push lods pushf mov std rorl adc pop sbb test inc mov mov push add les add mov hlt inc add out and pop inc jae (bad) (bad) std push dec mov and mov cmp je mov sbb mov movsb sbb mov fisttpll pop push lea or es xorl pop cld aam roll or and orb adc or js push mov scas (bad) lock not and sbb mov je mov and xchg pop aam pop jne sbb js cmp xchg adcl inc fidivl push add or dec fcmovne or jl push xlat xor push xor pop sub add cmp mov adc adc sbb xor pop imul cmp xchg sub sub data16 movsl int3 inc xchg pop push or dec add mov (bad) mov das xchg push vpsubq ds push cs jno or mov negl out jg pop inc das rclb or enter pop inc pop (bad) mov fs pop imul inc inc hlt stos insl cmp push mov fwait push testw decl cwtl je std (bad) lock or and leave (bad) jecxz lahf push jo pushf adc fstpt adc lea adc or aaa jmp mov add cmp in add push cwtl cs dec (bad) scas int3 nop sbb add jge (bad) inc ficompl xchg push or call xor xor or rorb hlt test cmp inc pop pop aad hlt cld bound pop aam cmc inc ret es flds mov add pop ror and bound pop adc iret lret (bad) or sub jns inc fnop sbb in push mov add xchg mov add scas mov xchg fimull push (bad) adc adc repnz mov hlt insl leave mov add xchg nop add dec fcmovu (bad) mov xor clc divb divl (bad) not and popl rorl sar dec fdivl pop xlat add sbb in xor mov pop sub test add sub push add and jns inc jbe enter adc stc jae push push xchg xor or lcall add je fsubrs push and adc cltd dec rcrl add cmpsb fcompl orl lock dec push push ss nop mov into mov cmpsl sbb and mov push sub fcomp jbe dec jmp jns pop add loopne jl add mov adc sub mov faddl inc inc das inc fildll gs pop in fwait (bad) loopne movb mov ffree inc add stos dec pop sbb cmp rcrl push pop call add (bad) loopne cmp (bad) and push mov jnp fmuls add xchg (bad) mov stos xchg lea add mov mov xor mov mov mov jp je add faddp inc add sbb mov sub ret adc aas dec dec test stos fisub cmp imul add mov pop pop pop jb dec pop dec dec jne add dec sbb dec sbb mov push sbb and (bad) sbb pop paddq adc pop (bad) in (bad) jl jo or xor inc and push fildll bswap shr dec loopne dec je jmp fidivr mov mov sub shl mov mov jmp outsl iret (bad) hlt scas clc movw xchg push mov insb fcomi cld (bad) cmp outsb rolb jno out add xchg push jnp outsl cmpsb add or sbb mov push rolb jne ds add pop push mov inc movzwl lea and pop push cmp cs xchg xchg dec jnp push addr16 data16 iret popa inc fild cld imul (bad) icebp orl mov les add fimull clc mov add call add test push inc inc inc mov and mov add and loope fildl inc test lahf pop mov (bad) mov subb rolb mov pop add xor clc loope xchg gs mov aas and or mov es mov aam (bad) test or or scas movups fs dec add pop adc cmp xor rcll aam add sbb movsl in pop incb pop dec je push push push mov outsb adc sub and mov sarl adc inc push outsl push dec sbb ret add loopne and sub shrl stc push push sahf inc clc and pop add mov lret (bad) lret push push mov dec lock adc mov jge add pop fwait andb inc in mov push push add (bad) mov and cld mov push xor push hlt push ja push cmc cmp adc mov lods addl sub rolb js cmp push and stos shrl movl (bad) push and add in insb pop cld push push adc bnd mov lods in jl add push sub imul dec sbb mov mov jl,pt dec fadd dec sub sbb fcompl or pop sub divb sbb jmp cmp fadd ljmp lods mov mov (bad) cmp jg test jle cmp xchg xor jg iret (bad) push aam pop clc dec lods test pop push out sbb or add ret adc inc pop inc adc sbb and in add loopne sbb mov xchg mov cmpsb or and and fsubrs pop movsb fsubs add movsl xchg sbb adc imul xor mov and in or popa mov lods sub fsubrl jl,pt les inc mov loopne inc sub dec dec test or ret push jg or jl xor (bad) push cmp dec incb sarl mov in (bad) xchg sbb jne cmp xor adcb ds adc sbb mov (bad) adc pop mov add sub pop sub dec add xor xchg fisubrl pop aam add inc cli adc lea push lea dec cmpb nop inc cs imul jbe nop pop cwtl push mov mov mov push mov popf sub sbb add adc xor jp lret push jge cmp add push mov out mov mov mov arpl je je mov push push mov sbb or je movsb loope cmp div ffree add sbb imul inc aam or nop ljmp lock ja out cmp jmp xor test mov jl ret push (bad) lods and push sbb scas sbb test dec add sbb sbb data16 pop sbb jb xor lds xor cmp shrb movl adc (bad) or rol sbb fistpl sub jmp mov push in and test out and sbb rcl insb and (bad) addr16 push sub or inc and jbe cmp data16 xchg mov cwtl push push sub lcall mov and push mov adc or in pop mov rcll imul add and add pop sub add insb shrl fidivl and es push nop or hlt iret jo dec sbb sbb cmp jmp repnz jmp or sbb cs pop jl rcrl jo mov punpcklbw dec (bad) incb mov xchg push push push clc pop repnz lret or aas push jg jecxz pop cmp insb mov lods mov mov sbb mov es mov addl pop add ret andl push push xlat popa imul orb fwait addl movsb push clc call or fstpl fsubrp dec dec mov lods cltd cmpsb and adc adcl add and adc fwait jns xchg add or xor mov push push in mov mov or lods data16 mov ss cs mov lods cmpsl mov mov jbe push popf js adc pop dec mov push cmpsb insl jnp mov test loopne in in stos (bad) fs dec scas dec pop in pop sub fcoml shr lock movsb add mov and dec and dec pop inc mov and scas adc pop adcl pushf jne mov mov test inc cld adc addl inc fs push adc sub mov nop xchg push push fmull mov adc add add pushf cld push push popf jmp sub mov xchg add push add daa stc cmp icebp adc mov dec fwait jne je stos inc sarl int3 rclb dec cmpsl pop outsl clc push negb inc dec hlt mov rorb xchg add movsl cli cmp pop jne js into mov push cmp pop cmp rcrb xchg (bad) xor scas cmp mov mov mov ret mov inc sbb dec xadd mov sbb sbb adc jno add leave cmpb ljmp ret cmpsl cmp xchg adc (bad) add cmp pushf add pop insb jecxz (bad) out pop les push or jb lret mov adc push jge or (bad) daa pop rcll add add mov rorl pop test add sub sub mov inc add clc mov or clc mov cmp cmpsl cltd hlt inc hlt mov repnz lock fsubl cmc mov dec arpl add lea stc xchg imul clc pop adc and mov sbb adc pop in faddl jne fnstenv xchg rcl lods xchg test xchg cmp popf mov mov pop mov push jb lock inc test scas inc push enter mov sub mov xchg insb loop sbb ss daa out push cmp adc les cmc (bad) and push cltd lods clc clc mov xchg jno jne pop mov cmc pop inc shll daa add mov push fstpt adc imul mov adc repz mov imul or sub sbb movb ja add mov push dec jb shl sbb mov pop adc (bad) or cmpsb jne out dec pop mov scas daa ljmp cwtl push ja out les cltd add call jge mov add pop mov popa lds inc or sub mov mov inc ja imul das or adc mov jne nop out xlat pop jne or and mov or fwait adc mov push mov pop adc loop mov sbb data16 popa es pop (bad) adc and push push xor push add sar lcall andl inc inc fbstp mov mov outsl pop rcll and push adc sbb xor mov bound sbb and aad xor sbb scas rorb mov (bad) add gs xlat imul aaa arpl bound fmuls add sub pop mov xor or jmp fild test or pop fwait js gs pop pop mov inc add sub jecxz fiaddl lahf lret xor sbb pop xchg xor cmpsl sbb push and enter jo push (bad) mov mov lods dec pop ljmp insl mov dec mov insl xor push inc sbb ss push push dec insb hlt xchg sub fildll sub xor mov add lahf xor add sub roll xchg or mov sbb sbb ja mov arpl inc sbb jbe mov or scas add add xor add mov daa notl cmp orl inc imul push sbb js push sbb add icebp pusha xlat pop popa fwait rcrl mov std xchg inc rclb and mov jno faddl push and inc inc ds mull cli dec or inc and sbb (bad) das push pusha inc nop and pop jno xchg insb add pop push (bad) inc inc mov xor lds ror add movsb lahf mov cmp sbb nop int jae jo lea sarl adcb dec and jg and inc mov cltd mov add push add js out xchg js jne sub add cmpb cli cmp sbb add sbb lea imul push arpl jbe test xor sbb cli (bad) lea dec enter jno mov leave repz outsb leave adc and mov and dec add and sbbl movsb jg adc xor push push jne dec xor lock and jmp mov stos stos adc sarb les add in lock pusha cmp adc jnp dec pop loope sbb andl add xor add mov orb arpl xchg jns or js inc sub push and and add jecxz pop inc sub xchg sub imul mov push adc or js xchg dec mov mov mov mov and jecxz jmp mov (bad) les adc icebp lods mov mov adc sub mov inc or and or sti and je sub add cld or push push jecxz call sbb jno lea rolb stos decl adc add sarb arpl movsb jns adc popf dec mov adc (bad) or dec cmp test iret xchg dec fsubl and xor xchg mov std and push fild mov push add shlb adc insl into inc fsts dec in inc xchg add lea mov pusha inc sbb bound sarb or pushf paddsw pop push pop sub sbb rolb sub add fs in int3 jae or push adc jns add adc in inc push test fs addr16 inc inc and jb fmuls add xor arpl mov sbbb popa in loope addl push xchg jo ja xchg lahf and mov arpl adc xor dec ja out and sbb dec rolb or insl mov mov fdivrp pop xchg jmp sbb mov sub mov cwtl fidiv pop fs cmpb lcall in lea sub popa aad xchg xchg xchg xor inc add and ret insb bound cmp jmp cmp mov pop and cmp movsl add adc adcl inc je (bad) enter push fstl dec repnz loop outsl lea adc clc mov dec enter test out loope xorl jne inc sbb xor incb sub cmpsb adc adc test cmp mov outsb sbb or add fisubr fist sgdtl add xlat int lcall or int3 repnz js push lock sar hlt xlat jo test mov mov adc add push pusha and je pop push test xchg scas lret sbb js mov sub int cmp xchg cmp ljmp into cwtl dec rorb (bad) push scas pusha sub lea dec test xchg js push pop sbb test inc das sarl or mov insb daa add cmpsl cld dec sub cmp add std movl dec pop inc mov jno push notl aaa test mov out hlt mov je aaa enter and je or push sti mov stc xchg inc sbbb cmp (bad) jg js cmovb add js je fsubl pop xchg add stos in sub sbb stos adc mov xchg stc adc adc dec ss (bad) xor (bad) fsubl sub jo hlt mov fcompl dec aaa pop dec xor pop inc js lods inc adc or lret shr pop push adc xchg es divl call pop das aaa add and pop loope xchg setno jo xchg or lcall sbb shrb or (bad) fistp push and and fucomip jo ss fiaddl aas adc mov push push sbb dec adc dec loop push mov shlb or sub les aaa jl or jle test andl insl jecxz in les xchg adc ficoml dec fwait enter adc sbb pusha adc dec jl add cmpl or jle insl cmp jbe daa std (bad) fs jle sahf push ljmp (bad) xchg push sub (bad) adc pop cltd mov adc ret pop pop jp jo aam xlat or sub pop sub shrl ret js stc jmp pop js jne clc je (bad) pusha fist push pushf movsb inc lret je xor inc push and lock addl mov hlt pop push clc xor mov enter adc push movsb mov add repnz out xchg and lds nop call fcmovbe mov gs es test jae sbb popa push into jbe xchg mov out pop in ds push push or xchg pop mov lea in or (bad) inc cwtl ss inc shrd jb popa add inc push mov mov fdivs cmp push fldt test call add pop push aaa inc bound (bad) push push loopne adc jg js lds inc popl sub enter inc enter mov xchg jp or add movl dec or cmc (bad) mov sub xchg add das push dec adc jbe je (bad) pop pusha dec shr les stos lcall in xchg fidivrl imul pop clc mov dec sbb mov or out sbb in pusha xor jne sbb inc push cwtl sub cmpb aas fcmovb and and jo shlb add xchg mov push mov xchg mov jmp push pusha arpl daa cs sbb orb pop mov sti jmp pusha punpckhdq xor xchg dec lods xor dec mov add dec pop and inc pop sarb xchg popl jae jecxz sbb fnstcw adc pop or dec sar jne or xchg (bad) xor scas jge jns pop dec adc arpl gs push mov sbb inc lods pusha pop aad inc sub jno cltd lods enter insb mov dec add jne clc and or sbb pop ja aaa mov mov fs or lea jne fstl mov jae mov push mov mov fistpl xor fistl xchg test imul inc out test lock adc sub mov (bad) bound cltd aas mov or addl les loop (bad) and xor cs jl push mov mov inc repz jnp nopl inc xlat daa or jno not add jle add cmp enter adc movl push or loopne push jle rorb js cmp jne add repnz pop push insl popa adc push xor cld je adc adc rcrl and inc fsubp sbb sub mov lock jae movsl pop xor sbb js add or mov neg mov arpl test mov and jecxz cmp test out jae pop add dec cld ret inc adc jge pop scas or or je xor jo aas fild mov sub inc faddl jno cwtl add scas enter add sub insl test and lahf int3 jp out jle mov out push fmull loop mov xchg adc jns les lods push jo (bad) ss fistpl int3 sub or pushf inc mov xor add adcl cs dec sbb lea cmpsl hlt dec je pop cmp pusha stos aad push movsb add in nop add mov pop scas fildl hlt sbbl and out sbb or sbb dec fisubrl push les adc clc adc adc add out shrl lds adc imul mov icebp mov in jne adc mov out sahf loope dec inc push mov test add mov dec cmp jne mov and test or fdivl jmp icebp sbb cmc adc cmp push lock movsb ss subl inc div bound hlt xor imul jg fnsave jl and dec jne pop out mov cmpsb inc mov out and dec dec add dec out insl or mov sbb mov mov pop les pusha pop daa xchg fsub adc mov or mov and mov push add and inc (bad) jne cmp xor cmpl loopne stc es sub sbb sbb ss js jl inc rorl je std loopne pop xor outsl (bad) stc dec lcall adc and fdivr or call and arpl push inc xchg push bsf std mov mov enter sahf sub push jecxz or xor test jge lock lds sahf pop push test xchg and add mov mov or inc cmp or pushf aam adc add sbb enter add pop add mov or pusha mov adc pop or or dec (bad) (bad) jo test sub test add pop adc js mov loopne hlt gs aas ds test cmpl lods push inc addr16 inc fs dec mov fidivl leave hlt mov test cmp inc out add push add test test sub setae ss push push cmp jecxz fist adc call imul addl cmpb out push push (bad) je (bad) test push imul adc and or push mov lea aaa push and inc or aaa xor inc xor in add mov in ja xchg (bad) daa cmpb pop sub mov mov sub and push push xlat test mov adc adc xor xor ljmp add ret (bad) sbbl icebp sub mov mov popa imul test push sbb sbb sbb das mov (bad) movsl imul hlt inc cmp push (bad) cmp aaa movsb or xchg push mov ret or jl jle pop imul dec mov xor mov jmp (bad) pop jae movsb jbe push inc sub push or popf or fadd cmp sbb daa cmpxchg shlb or sbb add or push or call pop movb leave mov xor push fcomps push int3 pop (bad) push adc xor jns and jno push or add movsl add xor adc shll xor push jmp dec jo test inc aaa xor test push cmp (bad) rol rolb and jbe cmp (bad) jl and (bad) and ljmp outsb push sub dec sub and imul sub cmp fucomp mov gs push sbb cmp push dec jl orl jl jp pop pop sbb push mov imul mov sub pop enter leave dec pop in add inc (bad) hlt add iret in icebp mov pusha and or ljmp lods sub dec xchg fwait jns or inc leave xlat inc sbb mov pop xchg inc or inc pop mov push int es loopne rclb (bad) sbb inc (bad) andl ret or lods icebp adc sbb xchg pop call clc out adc aad notl jae xchg lock sub push rolb inc fdivs jnp xorb push sbb push iret sub or and or insb stos sbb fsubrs sbb daa sub xchg daa lods gs dec push ja sub aam wrmsr adc sbb iret pop ret enter imul mov subl xor inc xor loopne jbe test (bad) cmp js pusha lock iret mov js add adc pop add push popl jmp xor cmp outsb cmp inc sub das mov lahf or sbb dec xor jbe stos rorl mov cmp xor test mov in fwait mov sub ja dec jecxz loopne stos cli pop jle sub fwait xor jb xchg pop xchg ja jb pop push xor xor sbb mov hlt sbb rolb es add and adc mov mov sbb fs adc push ja jnp add adc test inc inc icebp jmp mov xchg add cmpsl or mov pop aaa iret jne and outsl imul sub fldcw hlt mov mov ja ss dec ja sbb inc cmp cmp test loope loopne aaa jmp imul mov xor dec pop jecxz mov mov push dec fcomp mov inc adc fadds sti movb push xor dec push insb mov jg jb shlb xchg adc movsb push sub insl rolb push fisttpll lret inc xor mov xor pushf sbb push push mov adc test or push sub ljmp push adc adc pop jno push arpl lock pop adc cmp inc xor and lock pusha jmp add or adc mov arpl cmp xchg sub not inc inc movb ja xchg jmp and (bad) jne repnz fsubrs inc ret and xchg lea push add nop icebp and mov jl jp (bad) mov dec inc add mov or dec popf or push or adc inc xchg daa insb add and notl pop cmp (bad) nop push and jo (bad) data16 fist or je push push push dec aas (bad) cmp cwtl push push (bad) lods inc jb push mov or pop ret push ffreep fild lods mov (bad) or add inc mov mov sbb orl fdivrs or mov dec inc sbb pop mov outsb or inc sbb sbb out push or push sub dec (bad) (bad) negl inc push adc mov push xor movsb or mov xor lahf movsl push fidiv enter dec push dec sub push jo adc aam inc dec enter inc and mov ds pusha mov cmp negl pusha ljmp cmp mov (bad) neg popa je test adc dec loop and or mov add inc in iret ret or sbb ljmp ss inc push insl mov into cmp adc add add sti mov jmp loope je inc mov fs mov fmuls icebp dec and mov push xchg in sbb or and in es push mov mov sub lahf pop js insb aas jbe (bad) mov sub cmp imul mov fadds call fnsave or dec (bad) jno mov lea adc xor add aam ffree jae jmp jbe mov dec and cwtl es hlt add rcrb fscale fist or mov mov mov inc push movsl ds out push out sbb and xor inc sub shlb mov sub ss sbb adc es inc in xor cmp leave adc je cmp loope xchg ja pop pusha jno out or pop bound adc adc dec and sub adcl fs lds xchg and (bad) out jl sbb adc and sub pushf push daa lock add mov enter out dec in or mov mov push fcomps fistpl in rorb or inc mov pop adc mov insl fisttp call add (bad) xor or jbe mov xorl xchg cmp lods addb push int or imul push dec push jle scas push outsb sti inc adc cli pushf or jmp es or aaa stos xchg je popa xchg imul jecxz adc mov sbb mov ds jl cmp mov test sti inc jecxz sub and pop lock bound and in push js or push movsl or pop xor repz adc mov cmp fsubs dec mov into sbb mov mov cwtl loopne fldt adc push jo jg add xchg int xchg mov (bad) lea out inc adc jns outsb sahf imul ja or sbb ja or or push test jmp or add movb mov add inc shrl jmp push sbb aas (bad) mov icebp and or jmp sbb xor (bad) and xchg inc xor imul lds loop jp push add cmp mov add xor loope mov movsl mov adc incl enter lcall inc js or bound in pop xadd jnp stc dec xor pop jge and rol xlat inc mov lret xchg ja dec cmc aam mov iret push aam pop movsb or xchg (bad) addl data16 cli dec xlat insb dec movb rcll sbb sbb ret mov (bad) mov cmp adc mov adc lret leave mov cmpsl and push lds pop es clc rorb mov cmpb insb mov scas hlt fbld shr jl mov outsb sub ljmp push push push mov frstor mov and mov cmp ja test sbb clc add mov int3 scas lcall cmp popf in (bad) sub gs push lea (bad) sub inc push mov cmpsl imul sbb cmp jae inc arpl addl adc gs loope sub pop pusha cmp or adc sbb or fiadd and cmpsl adc rcll jle inc (bad) ficomp stos in daa sub push jbe rolb cmp mov cltd mov push dec dec sbb adc and es shr pop inc push loope jle test add jmp dec nop mulb sub push add pop jns inc jo lock mov test arpl fwait push adc pushf add inc jle test push push push movsl push adc lret push movsl mov mov sub adc in or adc inc js call leave adc out xor mov pop call insl push inc js and gs or sbb add cmpsb jo inc mov pop sub pop popa mov test shlb mov and push sub (bad) sbb mov pushf add xchg sub mov enter cmpsb or and xor and or xchg pop xor cmp mov mov pop sub movsb inc or mov xor sbb (bad) xor xlat adc clc and add add jge (bad) dec jns in mov mov nop test adc cmp adc stos or ret daa adc fiadd jo lahf xor cld push cmc pop sbb aam das sub lret scas test lret test jmp mov adc ret inc loopne out imul adc fwait cli or add aaa in imul je or xchg or push and popa or cmp push cmp mov push test xchg and pop nop mov inc jl xorl xchg mov dec test push cmp pop sbb add cmp sub push ds xchg (bad) stos pop loope loope lret ss loop hlt and jl ret imul mov leave add lods ret addr16 or xchg fldt leave outsb insb adc rol test shlb mov js scas dec fdivrs xor js cmpsb xor mov xor sub xchg ret or (bad) sub (bad) mov jno cmpsl mov sub mov (bad) pop (bad) int3 mov mov or cmp mov and jnp add test jg dec bound push adc and add xorb cmp push xorl or mov movsl lods pop adc xorb push cld or sub aas inc push nop arpl ja mov loopne ja insb (bad) jb (bad) outsl adcl inc mov dec mov add and dec orb sub insb inc mov xchg sub scas test or xchg add mov xchg and loope jo or movsl adc pop or push lret nop mov sub inc ret jns imul sub jge mov lock inc (bad) and xchg lcall xchg pusha push pop mov lahf test jbe fnop lods and and cmpsb mov test sbb out mov addr16 clc notl sub adc jmp mov mov pop inc scas je rclb pop and push push fcmovnbe and repz or inc div nop hlt iret sbb inc cmp xchg ret fcmovu xor add or scas or mov js ja dec inc lsl push pop movd and ret enter or push add inc mov in cld sub xchg inc outsl aad cmp ret mov out ljmp and xlat mov insb mov pop mov fidivr adc imul popf adc cwtl mov and fsubrl and adc in add ret in dec fnsave push mov daa es nop jnp movsl sub movsl test roll lods xchg jns in sarl sti cld jge fcmovbe adc and mov xor xor test mov mov sub mov es in orb sub loopne xchg iret and and xchg shlb jae and outsl mov das pusha mov mov popl dec xor pop xor pop int3 add cwtl push cmp jg into insb popa jmp test lock out mov ret or xchg dec push pop lahf xor stos inc or xchg jo cmp mov jl mov aas sub lods push cld push or cmp pop ficompl in push iret loope stos add (bad) iret push push or pushf dec aas aam aam pop adc adc (bad) pop mov das adc pop mov sbb je add lret sbb add cmp cmp lods or sub dec popa mov push inc pop (bad) lock or and sbb scas add pop inc jmp pop adc push pop outsl popa lods dec adc dec push xchg mov pop movsb (bad) cmp and or adc cmp mov nop ret aaa adc jns jb or cld aaa cmp cmp clc hlt lock cmp cmp call mov push lods clc jne cmp pop lods cmp and inc push sbb mov jle (bad) int3 cmpb adc and je push xor iret insb mov sub pop lahf test add mov out add xchg add mov imul or pop movb adc jno scas cld iret xorb mov xchg imul push inc out and push cs and cmp jbe push jmp (bad) xor inc adc adc dec adc add (bad) jae mov or arpl inc scas pop push push arpl adc push jnp dec adc aas cmp fdivl jge sbb ja mov pop scas add pop push adc cmp mov and in xchg pusha add and or push outsb (bad) add cmp jle push pop cmp mov mov das daa or das je test mov pop and and pop add pop dec pushl jmp push sbb and push xor je add xor sub lock ds sahf aam daa adc dec sbb mov mov or mov push adc (bad) sti inc pushl cs imul lock call sbb rcll or nop nop or aas das adc and dec sahf out test sub rolb std dec xor mov call jne xor sub adc add add pop mov inc or sub or jg pushf rcrb adc jle lea pop inc psubusb inc and ds jb push test les pop mov pop shll push sub int decb push dec inc pop cmpsl dec movsl repnz mov add adc cmp iret cmpsl test cld adc daa and sbb or xor aam mov cmpsb sub mov orb push xchg push push mov movsb sbb adcl push jns in inc (bad) gs mov push push movsb sbb clc mov push neg jmp cmpsb out mov and les sub xchg lock push ss sub dec fimul jmp ds cmp push out add adc jecxz or mov adc lock push insb popa jns jae push loopne rclb add stos push out adc push loopne rcr cmp adc adc pop in adc mov adc jbe or inc push adc outsb xchg xchg sub push jb mov add fdivs mov xor test sbbb jle prefetchw daa mov out mov lcall cld mov pop rcll mov cmp xchg cmp jb mov outsl or out stc imul adc mov push imul inc enter adc les mov imul xchg xor mov adc cltd mov out jnp push mov push jg xlat push fisubl movsl xor inc mov outsb add mov mov xchg sbb pop xchg das (bad) xor push sbb mov sbbb inc mov test and add enter dec out mov pavgb int3 es cmpsb cld fcoms clc cmp mov dec or aam lods cmpxchg inc mov fdivs or int3 jno cmp cmp imul leave rorl repz scas mov ficom sub sub mov nop movsb xor scas adc push add add or mov or fild sub and add imul push fsts mov adc add jo scas push bound jb ds pop mov movsl out pop dec sub push xorb dec cmp push inc adc imul sub test add std addl mov movsb lahf lock icebp and (bad) inc cmp je push xchg idivl das lcall clc test lea pop movl cmp pop jns cmc aam pop mov test push test test fwait cmp rclb mov sbb dec stc (bad) xor imul jp xchg or or sbb lds rcll mov arpl (bad) out xor mov mov mov inc xchg mov aad cmp mov into popa adc jg pop and nop/reserved sbb mov dec sbb sbb xchg sub ljmp pop lock lcall addl xor addl push cmp test push pop cmp cmp cmpb popa add dec psrld fs test inc lcall and loope cmp sbb leave adc xchg cmp jmp jne mov fist dec jle adc and adc fisubl daa inc xchg addr16 test lods ds jmp mov jecxz mov imul adc movsl (bad) dec xchg lea or inc out mov fisubr testl xchg cmp sbb ljmp data16 inc push xor mov add mov jge and enter addb (bad) sbb jmp pop daa fldl das (bad) insl movsb adc loopne (bad) dec psubw mov or (bad) xor or mov ror shlw fmuls (bad) jmp xor inc lods pop addb test add and subb es clc dec pop push or sbb insl dec push cltd jmp scas push mov roll adc add jle es pop and push dec pop mov adc dec test fdivl sarb and notl in pushf in sbb les lcall test inc dec xchg jmp jbe decl add mov xchg icebp fisubl sbb loopne fnop jmp mov outsb sbb and and mov inc mov in pop call (bad) cmp add dec push pushl mov sbb mov mov jmp inc inc test xor jle xchg lock cmp dec in lock div nop dec mov sbb inc call call or cld loopne fldenv mov lock cmpsb leave jne lock dec jmp sbb inc lods into or xchg ret push push icebp or sbb inc pop pop push call push test jns ret pop rorb lock inc inc add stos fs cmp inc pop pop clc adc mov sub sbb cmp xchg loopne sub (bad) xor rcrb insl popa adc lcall (bad) test cld mov (bad) seto cmp enter cmp mov xchg pop jecxz test jmp adc add mov adc in jle daa lods movsb mov inc aam mov sub nop jno (bad) and (bad) leave adc insl jg push push lcall xorl enter push test sbb lds cmpl and pop arpl nop pop inc ja int cmpsl ror pextrw xor cmp into mov in pop cmp jo jns repz lds in push inc cmp cmp iret gs mov lds cs dec push push dec pop cmp scas nop and inc enter out ficoml daa xor lods cmpsl sbb and inc out inc pop adc pop rcll movsb xor and pop add cmp je repnz outsl push clc mov test (bad) sub hlt sub add insb inc or test push xor shlb add sub rclb add push test ret sbb imul mov dec jae xorb or adc test icebp xlat movl or add sbb push rcl cmp or sbb (bad) mov rolb xchg adc add sarb mov ljmp pushf jno sbb or adc mov sub add cmp repnz hlt adc or cmpsl cmpsl sarb push mov pop lock loope fldl xchg mov add sbb jmp and in clc pop push add xlat repz and das cmp jle mov push pop mov in scas add scas mov push stos pop and and dec add int3 pop or xlat repnz addb adc mov outsl dec pop pop cltd mov pop in jecxz cmc andl mov add xchg xchg push hlt orl xor cmp leave in loop je notb sar mov enter in mov in enter sahf addr16 inc test sbb jnp jp jl inc es fs push and nop leave or pop mov sub das pop fistl jl and cmp cmp or and dec ss rol xor mov add xchg jp dec push add popf cmp add inc sarb xchg movsl frstor pop pop cmp push adc dec fild fisubr jns or sub xchg int sub stos mov fimul inc insl insl sbb push nop jle rcrb aam and push popf sahf xor mov or xchg and xchg or test sbb and inc ds ret rcrb (bad) das cltd mov insb icebp mov add mov and mov add out add lock jne scas push out add adc push lahf xor sub mov cmp pop or and es pop pop xchg xchg jbe push jne test push int3 push inc dec xchg adc sub cmp pop inc and popa mov push pushf add (bad) in or (bad) sarb mov movsl add pop cs test push inc mov xchg push fnstcw push push push pop ret sub mov pop inc push out loop or (bad) adc inc push xor xor loope call fild sub xchg push lret jge cmc pusha rcll ret adc add sub cmpsb mov sarb ja mov hlt inc into dec fucomip and jmp pop ss dec push dec push dec into jne add shlb enter jae fcompl sbb (bad) mov (bad) das test (bad) sti jbe cwtl cld nop push rolb loopne outsb mov jmp mov je dec in or push cmp les push xor sub dec test js xchg hlt movl inc sbb jbe xchg hlt pop xchg movsl mov in jne push fsubrs js cs dec mov mov (bad) mov mov mov jne or pop pusha cmp push mov or push push push (bad) fcompl add mov data16 inc push mov sbb lcall mov andb cmp nop out xlat dec shr inc pop loop mov pop adc push xor lds rclb sahf rcrb sub mov pop inc test adc pop pusha (bad) call hlt cmpsb pop xchg dec and inc icebp lret mov in jp sub jnp sbb aam xchg dec pop add movsb dec daa test inc sbb inc pop test popa movsl fstpt adc xchg jmp push adc aaa push push or pop fs lret xor inc imul pop inc jmp fildll das ret or pop or sarb test or or icebp aad mov jne hlt cwtl movsb popa and fisttp fdivl shrl push mov int pop xor cmp ja cmc popa adc das sbb push xchg push rcrl mov pand fisttp push mov and test cmpsb ja mov lds mov pop mov roll adc cmp shrl mov mov xlat jbe cmp sbb adc add call adc neg sbb shlb xchg int3 cs dec jo enter push mov push pop inc add cmp dec push dec push xchg xor loope mul mov inc inc xchg push sahf sbbl outsb dec lods in enter imul dec les push xor adcl movsl push lock mov inc push sahf insl pop add pop push movsb push sbb loope inc mov popf xchg lock insl arpl and add or inc cs cwtl lea inc daa push sub pop leave mov mov inc outsb out inc mov sub mov call push xchg fidivrl push jmp lods xchg or jae daa dec and nop xchg sbb pop (bad) fs (bad) sub pop mov (bad) enter add fiadd push inc and inc jl push push mov insl nop and (bad) sub out and adc je mov push xor jns les push inc jb mov and cmpsl les sub add shlb bound and fiadd addb aaa popa pop iret push add xchg js fsubrs xchg int3 loopne stc and iret flds push lcall sbb enter adc loop xor xor xchg iret xor jl addb nop xchg and and cwtl pushf mov and and and and and int3 rcl and and fcomp loopne and and call and and cld mov or xor xor adc sbb xor xor and sub mov (bad) xor adc aam push cmp inc xlat mov jmp jnp pop xchg test arpl pushf xor push fnstcw dec test add jne mov or fsubl add push mov push movsb xor cwtl xor nop lret dec mov sbb gs lods pushf mov xchg add push movsb xor leave lret or les enter nop lret rorb sub aam fadds test jl xor xchg loopne in lret push call sbb fs sub clc add ja push mov add nop and cmp dec gs sub pop xchg add je movsb xor sbb push lods and sub push sbb sub mov adc xor dec add xor xchg inc incl mov inc ja frstor (bad) and push rcrl adcb dec add jae and les inc mov movsl push daa jns mov or inc mov popa xchg mov pop lret popa jb les daa xchg pop das ret je inc dec insl xchg in test adc addr16 xchg gs cmp test inc fs pop dec arpl and lock jae add jnp xor fs (bad) shrb cmp jns jp jae sbb lret inc outsl iret cmpsb rclb lods pop pop pop or imul rcrw pop aaa dec mov pop ret push or adc xchg mov mov or and xor (bad) int3 out and sbb or outsb add in pop pop cmp or popa and push in inc mov nop cwtl das fstpl mov mov in pop xchg pop push or fistpl jl (bad) lds jo ficoml mov jns outsl addr16 jae xchg jne insl outsb das pop sbb fnop fs inc imul lahf and or arpl movsb out pop and jge push xchg pop icebp inc cmp outsl pop repz addr16 cmp or add sub and xchg loope jne xchg xlat fisttpl imul daa fs push xor inc subl cmpsb in and test pop jb jno stc dec sub or inc dec add cmp mov cmp inc dec imul push and jb mov add fstps enter pop adc nop sbb dec pop sbb and pusha xchg inc xor jbe xchg fcmovne push dec cmovs xchg mov sub pop mov xor pop jmp imul pop jo nop push pop add insl out add inc push inc push add mov mov push aam testl ljmp nop es rorb push mov add or sub stos push xor add enter mov sbb xchg xlat scas rolb jnp cmp cmp pop ret or imul mov mov inc push push push mov test inc ss inc test das cmp js (bad) dec add dec dec jg or inc push ret in cmpsb adc gs and mov sub fcompl fwait xor out push (bad) fiadd adc add (bad) sub into lds xor lds notl jb in icebp (bad) lock fimul shll push pop pop sub js push jno or or or and and mov inc jo push ret mov push pop repnz int3 pop pop or dec jecxz sbb adc rclb cmpsl mov cmpsb ds or lds dec jae rorb add rclb outsb mov inc data16 push ss jae adc sarb int and pop pop mov enter dec outsl jne arpl mov or into add pop aam jae sbb fiadd imul popf and sbb mov push push dec jno out data16 jo or ja addr16 test orl adcl and push je outsb sbb xchg push push adc stc push pop or cmpsb push call call or dec popa lock adc pop aaa in insl push adc je iret pushf dec or add or inc add dec ret add dec shrl fsts je and mov jmp out enter repz cmp fucomi lcall lea out pusha push or pop sbb or mov jno add push (bad) xor xchg ret leave push iret test loop insb insb or dec outsl nop js fcomps pop add and add cwtl inc pusha push loop dec pusha or rcl test add icebp mov push inc xor mov add mov daa dec jne jae mov ret cmp sahf test mov or nop aaa imul xchg push loop or push popa jb xchg push adc xchg mov lods adc imul sbb out sub into out cmp loope ds clts add push sbb out movl xchg dec push cmpl sub xchg aas jmp repz pop ficomp ja popa in out inc push add jo inc push (bad) bound or aaa cmp xor sbb sub je out mov popa or jns inc and mov inc mov arpl adcl or dec pop dec (bad) lods cmp fwait clc scas mov inc add mov inc je xor sbb shl or mov mov mov cld jmp push ret pop ljmp js adc pop push and pusha sub add sbb inc mov lret fdivr push inc dec xchg faddl adc sar xchg rolb inc ss adc pop aam mov inc or jno (bad) adc pop sarl jne fldl cmp or (bad) pop cmp jb (bad) loopne fsubl adc addr16 inc into pop insb inc sub add sub push movb push push aaa and mov cmp inc rcr add add inc sahf lcall cmc pop mov jo sbb jl dec adc xchg dec dec adc lods and push aas sub cmp inc xchg clc in and jo jl cli mov adc popa jo pmaddwd dec popa jb out pop mov das adc je rol je popa in pop push push mov mov and sbb dec cmp adc pop pop lcall pop and push pop xchg push inc into mov lock jnp jne cmp addl add pusha jae sbb (bad) mov call push leave pusha pop mov cmp pop sahf into movsb lock adc test mov push (bad) dec mov test mov je shll push push push js inc loope ficomp ljmp add adc push mov lea mov mov sbb add or fildl clc dec add sarl lock daa dec in sub repnz mov pusha lock pusha mov shld stos sbb fs call lcall jecxz jne clc je and sub fsubrs adc repnz push leave dec shll mov adc pop dec (bad) loopne ret mov mov push xchg sbb jbe out push movl adc rol pop fbstp les ja ret test adc inc inc loop pop movl jnp sub xor movsb lret test lods mov xchg add cmp push sar mov pop pop jae mov or inc xlat (bad) rcll xor sub jl rorb xchg loopne clc in (bad) int xor pushf xor push ficomp cwtl mov pop lcall loopne lods adc mov aas loope pop inc adc fs dec pusha dec es outsl sarb add sbb add dec pop jne mov push push jp popa bound test add push push xchg hlt pop push add adc fwait push sub fwait es mov pop cmp je adc inc nopl pop cmpl call or dec add adcl xchg push movb push je jo outsb mov ja and adc jnp jno or mov xchg xor dec rolb xor xor lahf test push out movsb fnstenv lock cmp ret popf and push mov shrb and (bad) insl dec lea mov cli in mov add add lcall or add leave mov divb cmp mov pushf dec les or in or add imul inc add cmp lock aad fs or mov or and cmp loop pop movsb es push or (bad) in fs mov and add or rclb fnop dec add dec stc fadds mov mov add inc lcall sar stos or mov or cmp jno jo and jo pop and inc add dec pop sbbb mov in pop inc or add add es mov test inc sub sub add adc cmp mov scas negl push (bad) sub insb mov (bad) lea cmp in xchg inc es pop adc mov mov fbld daa sbb sbb adc pop adc cli jle or jp adc add imul mov push pop pop or in addr16 repz mov fmuls out sbb xchg lea dec pop xchg das xchg insb data16 (bad) clc cmpsb adc mov mov testl adc cmp push mov xchg lock clc ficom push pop xchg sub mov hlt lcall xorl inc add xor sub enter xor xor sbb in cmp fs cmp movzwl rcll push (bad) leave mov push add or add sbb mov jmp adc inc or fwait or cmpl mov in insl push adc into stc mov or lea popa sub into push dec inc imul lds (bad) hlt sbb scas mov sub dec pop insb adc mov lds xchg xlat mov cmp (bad) int3 inc push mov ret test inc and ds (bad) add dec repz adc enter in push rorb push jo mov popa push xchg stc cs sti sbb jne or add inc and jae xor sub repnz outsl or fsubs inc or iret repz xor pop pushw sbb push clc repz push adc xchg test or and into cmp (bad) pop jae or enter int3 fisub xor test adc adc add imulb push out mov lea bound add adc pop or mov pop or pop adc xorl loopne es add dec pop sbb fwait sbb ret dec dec (bad) lahf dec or aaa pop mov arpl dec dec add pusha lcall dec test xor push add add outsb outsl stc xchg or ljmp or or and inc movsl or btl cld mov add fisubr mov mov sbb inc and nop cmp sbb lea int3 pusha push mov adc or icebp or fs addr16 jp cmpsl mov imul sbb sbb add push lret cmp push push test fisub push dec inc mov jo inc mov or repnz add push add in leave adc test and push jl iret int3 pusha das hlt dec lock adc outsb out (bad) mov (bad) mov xchg ja push mov jbe sbb nop push xlat ljmp cltd mov sub fsubl adc mov inc mov or mov pop and xor dec dec jle,pn inc mov push add xchg mov pushf adc dec call incb inc test insb insb inc mov pop aaa or or dec outsl ja shlb popa imul and sbb popa jo jo adc xor xchg or sub lock bound adc shlb (bad) jne or mov jecxz outsl jb sub pop dec aam scas pop mov insb (bad) lock mov in addr16 cmp push insb je fs inc daa xor cld inc push push push fs inc inc in fnstcw push enter inc dec push sbb shrl push mov mov imul xor push inc dec cmpsb sarl push jle outsb add je sarb in call xor fdivs fcomps cmpsl pop sbb in adc add je add pop loopne (bad) sbb jbe or inc cltd addb ja or sbb dec sbb inc mov mov dec js or add push dec bnd push in dec mov adc sub imul dec popf push add sahf cmpsl cltd jl push fstl and xor xor insb out push je outsl test je int push hlt jae adc adc imul add out pop sbb push inc add inc add adc mov push sbb or nop testl jno mov (bad) add inc cmp sbb xchg inc xor (bad) pop repnz push and or mov faddl popa daa aam jl add or push and hlt mov and push push and cmp sub pop adc xchg js and fs (bad) mov fistpl dec xor (bad) test enter and inc mov outsl in je int3 data16 (bad) insb lock pusha (bad) lcall (bad) call cwtl pushf push push (bad) xor pop mov mov push fdivrl add mov mov mov mov jns repz dec cmp nop and fucom movsb dec aas scas into or push inc cmp out and xor xchg sub js mov xor add jbe imull mov jp fdivrs jl sub nop pop pop sbb adc jne pusha push inc iret aaa xchg int inc cwtl jp and pop ds add pusha add or pop or add (bad) mov inc jne adc adc ds add add sbb adc cwtl dec les insl fstl adc add loopne pop and pop adc xchg rorb mov mov movsb inc call dec aam sarl insl (bad) push push pop je fstl inc imul sbb int3 or mov nopl pop pusha dec cmp fsts fdivrs loopne movsl mov fucomp (bad) pop jno adc jae imul pop push sub cmp incl or sbb dec bound or and inc push ret int3 sbb sbb or mov jae movsb push dec fwait icebp into rcr (bad) sbb dec pop repnz mov sbb pop cmp negl pop fs adc push test push test outsb roll or mov and push xor (bad) iret ret xchg aas inc push xchg jmp inc mov test (bad) cmp pop and push mov fldcw or push pop and or pop push pop lcall xor mov repz pop lock shll jl pop fs std jno or and cwtl nop cs ret in in rorl xchg inc mov in push or stos es push outsl jo jo pop jo in sub push xor mov add cmp xchg out dec xchg mov adc or mov nop or sub or cld inc pop pop sub inc or loopne pushf and pop inc cwtl rolb adc push cs cmpsl lods mov mov enter mov mov (bad) cltd push lahf aam xchg xchg push pop cmp iret jo cwtl pop ds enter pushf or mov insl and push xor movsl (bad) dec add xor mov push pop test dec sub or test adc scas or mov adc lock mov inc jo xor lds fnsave or cmpsl xor fs add mov inc rorb loope cmp inc je mov pop dec cmp dec (bad) rolb sub repz add add or in sarb sahf testb mov ja and dec fcomp add in cmp (bad) jb fsubr xchg loopne mov inc pop sbbl inc clc inc mov loope jo out inc sub mov fnstcw in ret ret push mov or and test inc push jbe jecxz xchg dec lock fldl adc push dec in or jle outsl (bad) or or jns push dec pushf inc inc clc inc inc xchg sbbb xor and daa loopne jns inc (bad) pushf (bad) mov push daa lods pop je push add dec mov mov std pushl push pusha js dec sbb call fcoml push sub outsl dec out nop pop xchg xor dec xchg xchg xor push leave xchg pop cmp mulb inc or cmp and shrb xchg sub sub and inc cs or cmp ss (bad) jp shrd call mov insl outsb xor adc mov inc nop adc shll sbb mov inc or lea dec adc inc aas sbb mov add xor and enter push pop and and xchg sbb and les and mov cmp xchg pop adc daa push leave push jb sub xor pop push popa out fisubrl js inc add push and andl xchg inc cmp bound add add adc fbstp rcrb loope scas cmp jno or fildl das in jno or loope dec or add adc (bad) adc sub fldcw cmpsl add subb add or shlb xor push (bad) dec dec aas add and or ja and sbb jge or cwtl scas mov out and add or lock rolb cmpsb jg and fstpt fsubrs dec push leave add inc pushl mov push mov push xor push add add inc cmp mov add fcomps inc pop int3 pop adc pusha pop inc sahf sub or inc inc dec jecxz and or int3 jnp das xor testb arpl push push mov push bound sub sbb inc inc or rcrb mov xlat (bad) mov call ss imul push cwtl gs (bad) insb outsb and jle push andb sub mov insl sbb cmpl pop xor push fldt inc add dec pop sub js sub push addr16 nop xchg mov jno jne cltd and inc (bad) repz adc dec adc sbb add add push add rcll push andb inc lret subb pmaxsw arpl push adc dec lods das (bad) cs loopne pop fs int add pop adc gs ljmp or inc les inc add bound sbb mov fs dec pushf sub aas jno add aas sbb dec scas lcall sub sbb push pop and cmpb mov and and dec adc and add les mov in dec xchg pop xor inc xor fiadd flds jo and daa or xchg sbb sub lds sub cmp sub fimul adc pop enter es repnz sub cmp push push add test cmpsl jno add and xor xor mov cmpsb xchg stos in aaa cmp dec cmp nop or add add lcall add cmp and inc inc inc clc and and rcrb scas sbb mov mov test add push ss into push rolb and test insl dec iret inc pop push lea dec int lret mov (bad) aas xchg fcoms fisttpll gs fsubs mov movl (bad) arpl in mov test enter or push push cmovno cmp push mov mov xor add in pop pop mov sub inc mov pop adc ret shl lret scas pop scas or sbb sbb nop or push cwtl push cmp lods sub out mov push mov push xor push daa lods loopne out pop jb call pop shll je outsl inc add and dec cmp push xchg jo pushf (bad) mov push mov inc leave add adc push push leave push jb and pop xchg dec and enter push and add pop es ljmp cs push test pop mov sahf adc cmp insb jo bound inc inc inc loop lods ss push push sbb pop add add push jns loopne sub cmp or das mov push and sub xchg inc ds cmpl inc mov test inc jo adc jno imull js xor rorb inc push adc sahf xchg or mov push dec fcmovnu outsl pop (bad) es push mov in outsl sub inc inc cltd out fnsave sbb pop aam push rcl push cmp in std outsb jmp or cmp mov cmp xlat push push test xor lds gs push xchg pop xor test push and mov fwait sub cwtl add cmp push fsubs push xchg xchg fisubl pop sub inc test adc or mov add xchg sbb sub jb insl test ljmp inc inc adc and or rcrb and add xchg cmp dec je lock dec decl bound mov hlt gs test imul or test loope les (bad) pextrw inc (bad) sbb fcomi dec cs mov cld mov stos jecxz pop cld dec lds bound aaa and test outsl cwtl xor dec add and gs push mov mov mov push (bad) fwait and pusha mov mov mov (bad) lock sbb push sub mov push dec call dec dec or or es and fcomp ficoml dec gs je mov inc mov push mov and mov add pop pop daa jge stos adc and std jl cs sub or ret test fs jae ja enter dec dec sub cs push xchg fsubrs or inc cs loope aaa dec ud2 inc cmp or lret adc xor pop inc xor mov jae xor add in mov dec cmpsb xchg stos cmp loop sub or fmulp fdivrs test push pop es adc jns loopne cmpsl cmp inc push push xchg call push call add (bad) sbb fs inc xor add movsb adc cli (bad) rcrb inc xor add sarb ret jecxz mov sub mov fsub imul and hlt mov aam adc cmp pusha xchg or lahf inc add fcomp enter pop lcall adc mov mov into push lcall in rcl dec inc or or les push sbb and fcomps popf adc pushf inc pop or jg push jmp inc or jl and aaa add pop inc push or insb les fisttp shrb pop mov in cmp add push pop imul fnstsw xchg (bad) je mov popa dec mov aaa imul push fsub cmpsb lret mov inc rclb adc in push or xchg mov in and xor add repnz sti cmpb sub aam pusha xchg add stos insl orl insl (bad) mov stos mov rorl add movsl test scas or dec dec inc push ficomp sub sbb std and push or das aam orl cwtl jns mov pop sbb sbb mov stos sub into mov add mov pop outsl decl push add sub adc push push es xor or in sbb mov in adc inc pop lea mov fistl or adc push push adc or sub in or (bad) ss lcall jae out sub mov and dec dec dec clc roll es and pop mov inc cmp sbb into rolb addr16 ret inc nop jbe jae pop bound (bad) lcall push sbb pop mov cmp ss mov (bad) xor imul fs push xlat mov jnp xor mov dec cmp xor mov out sub cmpsb gs (bad) mov dec insb sub cmp dec ljmp les movsb inc push inc sub push lcall cmpsl (bad) test add push xor dec lea sub dec aas xor dec pop adc push push cmp or (bad) xchg jmp into cmp aas test int3 stos add sub outsl inc inc mov pop or jg pop je jae mov mov cmpb sub mov sub sub loopne xchg adc enter test cmp or or or mov and in mov cmp stos xor pop fsubp sbbl cmp insl xor outsb jp dec add push mov loopne clc std xor shlb cld push push mov je sub xchg push add add mov loop das pop cwtl ss popf imul and pop inc enter loop or jnp or mov add or jb mov fwait les inc stos push dec sbb xchg sub cmpb int loopne add flds mov cld sbb fimull pop je or fdivs and test adc adc sti xchg cmpb or sbb mov test xchg cmp sbb sbb popa or sti scas add mov push inc mov mov sbb lcall adc adc sbb and cld sahf pop sbb sub cmp push repz stos xchg popf sub adc cs cld lock hlt or hlt sbb sbb or cwtl sbb inc aas and push cmp or and repz adc inc inc adc lock icebp mov adc ds jno sub adc inc cld or sbb mov pop test cld lcall and jo pop in ss sbb xor scas inc mov push pop cwtl ret sub add adc int push loopne xchg data16 pop inc push push push (bad) dec inc fbld add stos lret rcl cli ljmp or hlt shll test decb inc add mov push (bad) rcrl xor mov cwtl cmp out xor ds test hlt hlt push movsb push sahf nop jecxz inc jle clc mov stc or push inc aaa adc in sbb nop mov pushf mov (bad) sbbb push sub jo scas fadds ficoml pop lcall jno xchg push pop popa fsubl and and add sbb adcb call imul lea call ljmp jne and xor xor pop xchg pop in mov sub lock jmp cmp outsl adc lcall mov add dec dec dec arpl hlt or andb daa fstps xchg xchg in test xchg lsl incl lock shll sub into repz mov popa inc and mov push jne ret add fdivl ret cmpsl push cld jnp lret (bad) not and out push je jmp sbb (bad) rcll inc aaa in roll inc pop or call pop jb inc lahf ss test inc sub add add xchg enter loop add sbb lahf adcl mov ss ss xchg dec cld push xor mov push loopne mov jns mov ret jmp pop sub (bad) jbe mov jecxz jo pop ja into loop iret and xchg imull enter add dec pop cmp loope push sub ret inc pushf mov or mov rolb les add jmp xchg sbb sub dec xchg add lods shll sbb jo pop arpl pop add cmp fbld or jae mov fwait mov cmp jne jae add adc lods scas xchg shrl fldt dec mov pop fwait mov out xchg fwait inc adc mov sbbb add sub jne (bad) and nop out je loopne out adc enter nop mov mov sbb add rolb popa and xorl lock sbb icebp movl cmp push xchg push mov das lahf sub add mov out add sub mov and or mov enter dec bound sbb daa sbb insl movsl jne and push pop mov sub mov jmp push mov into fidiv inc test and and scas lahf cmpsb adc cmp dec mov xor sub inc or jge push stos mov sub and mov jge adc insl inc add cs xchg adc mov pop nop pop fild sarl push adc jb cmp es push mov push jo xchg flds adc enter into mov add mov push cltd jno scas and mov sbb (bad) cltd stos lods jb (bad) dec aam (bad) mov loopne outsl fiadd xlat add sbbb xor lahf push xchg pop sbb and push (bad) ja ja sub jmp shlb sub pop or gs js mov and xor (bad) idivb xor xor lahf (bad) push add out pop cmp insl or jmp xchg in int lahf add xor cmp test (bad) mov (bad) jmp inc cli add push adc jle inc xchg adc fiadd and cmpsl (bad) imul loope lahf jmp pop pop shlb add xchg jne lret rcll or lock lock cmp je push pop and adc sub aad add mov xor cmp pop lss sub ss xor (bad) mov std dec inc in scas enter imul (bad) inc and pop movsb nop sbb push icebp xor cmc cmp pop push fnstcw pop inc xorb push xchg add and sbb pop mov rolb inc ret xchg pop and mov gs and loope clc xchg push push push pop push inc dec arpl or jle cmpsl sbb pusha pop scas fisttp int3 jne mov push negl xor js ss sbb mov mov rcrl add or (bad) lods fs adc xchg movl dec cmp cmp adc ljmp sbb and push adc repz inc pop xor dec gs xor push or or or or push push or paddb sub dec imul ret push pop pop pop loope add and in jg add mov test out sbbb pop imul sbb xor scas mov pushf fs add or lret testl xor dec adc push nop jno lcall xchg sub test lds (bad) sub mov cld aaa insl add sbb hlt mov xor pop cmp cmp lret (bad) cs mov mov sbb jp loopne fmuls mov pop pop or lock jmp cmp cmpb rcll and add scas gs pop mov stos lea cmp mov add mov fidivrl mov lods mov xchg (bad) (bad) push lods sub jl inc repnz pop add das sub mov mov cmpb xchg fdivrl jne lahf orl inc mov pop jnp sub cmp sbb aam pop mov or xchg jg lock adc pop (bad) scas lods inc arpl xchg orl push inc dec sbb add or aam pop dec aaa in outsb jmp jne and pop xlat sub (bad) adc mov jbe lds mov imul nop hlt mov out mov jmp bndldx out jmp sbb loopne aas mov pushf mov mov add push lcall xor pop adc pop sub push cwtl push inc (bad) pusha ret sub lea sub adc in sub je xchg scas inc xor in imul mov cwtl add mov addl mov dec jecxz add sbb je sbb sub push add test popa jnp mov add test lods push sub ds out aas add jmp xor lcall fidivl jno fwait dec roll repz xchg push cs sub sbb (bad) xor fwait rclb push push or sbb popf mov pop cmp cmp add and inc inc xchg add mov xlat xchg pop inc xchg jmp inc repz sbb arpl pop rcr jge imul les cmp enter lods loopne idiv sub mov cmp loopne lea lcall or jge loopne dec mov sub dec push hlt lcall xlat rorb jecxz outsb adc (bad) mov sbb enter inc inc fsubl adc sub add mov xor adc pushf sub cmp mov mov mov push call sbb mov mov lea dec cmp dec pop arpl mov jge int3 push push sbb adc push inc xor out sbb cmp add sub std or dec push test scas fdivl sub pushf cmp stos adc (bad) sbb or clc or jge or enter inc jbe (bad) and and jle adc fdivs rorb out je push js ret stc ror push aaa mov pop mov push jne divb add jge imul jae aas xchg test or sbb xchg xchg xor loop push cmp fistpl inc add push xor inc les jne push add cli mov xor jp add lret push and adc loopne push push add and dec outsb push cltd pop lods cmp lret in sbb cmp int3 lods jge daa cmp shrl ds sub jmp fsubrs fcoms pushf jge dec jnp sub lea imul or pop or ss jl cmp xor lods outsl sbb loope sub add es lahf adc testb or push cmp mov scas cmp push insl cmp add cmp adc mov xor push sarb xchg pop xchg jge mov mov lods aam ret dec and cld inc enter inc jno,pn loope and add push nop loopne add cmp xchg push sub mov mov mov roll data16 inc ss lea xor sti cmp and mov fidivr and inc or ficom add dec cmp add jl mov mov sub and popf and or sbb and je pop pop inc lock lock jecxz shrb int inc and jo push add in stos and insb (bad) idiv cmovl inc stos add (bad) jo pop cmp lahf mov lods insl sbb or jb inc ljmp das or test cmp pop loopne dec aam pushl inc int sbb out add jl push mov pcmpeqw inc inc push inc pop fucomp sbb push sbb adc loopne int3 mov rol movsb inc adc dec xor inc pop loopne aam lea cltd ror test xor js repnz inc movb push aaa adc les sub lods cmp fistpl test jne and cmp leave outsl imul sbb insl cmpl and mov xor stos xor mov xchg loopne ret cmpl push (bad) call sarb sub je in dec pop jns and (bad) fst leave cmp loopne inc pop xchg dec jbe inc stos cld dec subl pop xor icebp in add add push int3 or rcl add add mov stos pop add mov jmp dec push add sub xor inc push xchg and or pop sub add pop sub push mov rcrl pop xor pushf push loope or sub mov add inc pusha dec inc push add add or or and out nop cmc pop or aam rclb add fdivl (bad) pushl xlat lods in insb pop pop push adc push push cmpsb push (bad) je sub mov sbb maxps pusha ss popf movsl loop daa push fcoms xchg sub add stos or mov les movsl or mov inc ret mov inc movsb inc imul les je mov push push pop lods jge pop lcall (bad) dec test jne jl sub rolb push imul pop and lret cmp (bad) int3 iret sbb mov js dec das loop xadd mov mov xor mov push jo sbb call imul ljmp jl sub sbb push mov aam mov sbb cmpsl subb mov and push add mov add sbb sub add sarl or cmp sub mov or ljmp jnp cwtl out fcmove insb pushf test add push cli fcmovnu sub std sub jae nop dec or mov lcall and mov jp je (bad) mov mov cmp add or push add and mov mov cltd xor sub add push jcxz sub adc push mov jmp fidivr adc lcall (bad) jo sub adc adc es xchg scas jne insb mov adc popf sub dec (bad) or add shrb adc inc aas les jge cli xchg sbb add cmp xlat pop jae sti jno mov or add mov jl test jmp (bad) jmp inc jecxz pop icebp std or out sub push in mov jmp out lret dec xlat or and inc pop add xor test pop mov rcll arpl cld or jle push sub sbb and in or and enter adc sub fsubrs outsl pop pusha pop sub adc adc and sbb insl testb cmp mov sbb fcmovnbe shufps mov test and sbb xor dec pop xlat push and and dec add lret call ficoml fild jle popa insl adc (bad) cli adc add inc adc push adc mov testb pop lret add jl jno add sub ret cmp pushl pop pop mov test cmp dec loopne or (bad) add insl jb jle xor mov jne shrb xchg push ljmp dec loopne andb or mov je lahf adc sub out dec add lea rcr and pop roll mov jmp push in arpl xlat loopne mov push mov xor xor lods xorb xor adc (bad) pushf nop jnp clc test gs gs dec dec xor sub mov jle mov rorb cmp or out dec pop pop mov bound lods xchg pop push xchg and mov fmuls es inc adc insl test push mov cmp stos jl out fldcw (bad) mov dec cmc fistpll cmpl nop imul xchg push mov mov inc sbb jne add mov and inc rolb xlat fcoms xorb xchg inc (bad) rclb scas push sub mov push jne cmpb in test inc clc cmp push sbbb cmp inc shrb stos mov lcall pmaxub push movl inc (bad) sbb loopne and push lea adc xchg inc or xchg add (bad) sbb or add (bad) mov pop adc xchg sub sub das insl repz pop das aam inc sbb mov imul sub pop pop (bad) or inc add or test jmp push push mov or dec adc sahf (bad) and add shr mov xor je mov pop rclb xchg loopne or gs pusha mov add mov ret pop jae sub pop jnp fstpt ss sub fiaddl or jl or push add inc scas xchg repz mov pusha jg inc add (bad) pushf insb sahf inc ja adc push aam or add aam rclb testb adc or mov fdiv push add xchg push jl cs daa test rolb leave add jg gs adc pop repz movsb add inc xor hlt jmp mov sbb add sbb or adc xchg add jp add xchg add out clc xor adc add xor or jnp out push inc and pusha mov jno lods push out jmp outsb mov sti xchg jno jne sub les gs sub pop mov daa inc je nop mov aam xchg adc and cwtl adc jmp mov frstor fbstp bound mov adc je rcll xchg pop sbb or and icebp and out insb cmp inc mov int3 mov bound push rolb sbb cmp scas push inc ret inc cmc pop push jae pop pop cmpsl adc subb cmpsb lods sbb sar leave mov mov fidivr js shl xor sub shl dec push add cmp inc mov pop les or mov mov pop cmp inc push addr16 jae leave xchg pop sub mov out and (bad) mov dec and pop jge nop jnp inc je mov clc dec jne out cmpsl mov or and pop js inc aam lock jo fistl (bad) jno mov mov dec and and loopne shrl shrl inc cmp (bad) sub xchg adc xchg sub inc movsb shrl add inc mov adc imul lock push cwtl loope inc or fcomip sbb mov add shr into in inc push cwtl push and xor xor cmp cmp fnstsw inc add or in in or cmp (bad) neg cmp jl (bad) mov adc jg adc push rorl popa add cmp jge add xchg pop out test rol mov (bad) push rcll scas xchg jg mov adc (bad) push ret scas mov aad add mov aas xchg jno testb cmp cmp jne sub add fs inc or push xchg and add insb lret hlt xchg push sbb cmpsb cmp pop dec sti dec dec sub js sbb or xchg dec push rcl xchg pop dec sahf mov mov add push add test and cmp pop (bad) cmp xchg push cmp dec movsb lahf sbb nop mov xor inc inc fildl push clc and arpl je in jmp xor cld xor add push es xor or add inc addr16 xchg stos lock push rorl loope xor dec test fmuls mov dec xor pop sub rorb jo or scas sbb jne dec outsl andb sbb and imul pop or mov js,pn cmp inc dec stc aaa cmpb mov xchg sub push mov xchg insb mov mov or and mov sti pop (bad) mov mov mov ret mov jne pop push adc xor jo mov inc movsl insb push rcll mov invd aas mov enter add jmp jecxz sub pop mov mov or xor adc mov inc out addr16 shlb push rcrb adc or mov lods add fisttp stc add imulb pop subl (bad) and repnz push movb and nop dec lahf mov daa lock xor adc or dec add out push add in hlt and dec in mov push int out or test scas xlat scas pop es pusha pusha adcl inc loop shlb adc dec sub fcompl mov mov jb in inc fprem outsb adc ret adc fnstenv or or daa dec xor data16 mov dec leave mov adc inc inc mov (bad) mov or sub mov and mov test mov int shrb inc mov test mov jae pushf mov sbb test and mov push jnp pop (bad) (bad) out inc push ret push inc inc dec dec (bad) out pop cwtl push push adc mov pop pop push in sub mov stos aas and movb (bad) pop inc das popa in add gs aaa movsb add add fmuls sbb call push loop adc inc fs jg adcl je rclb mov aaa clc cmp xor test pop cmp movsl dec mov (bad) (bad) iret lock push enter xchg adc push add test mulb gs clc mov shrb xchg jae mov or mov outsl int3 add add xor or inc push xor iret pusha or add pop jge (bad) movsl nop sub add loope pop fstpl sbb lods enter test inc adc push je inc cmp push pushf sub sbb outsb xor daa loop add or mov lods shr cwtl pop xor pop test lock enter leave pop mov xchg fmull jg sbb fmuls shlb add mov fsubrl (bad) adc mov (bad) xor dec dec dec dec adc dec dec dec sbb sbb dec dec dec sbb dec dec dec add add dec dec dec add dec dec dec or or dec dec dec or daa daa daa and repnz daa daa daa daa cmc div clc daa daa daa daa stc cli sti cld daa daa daa daa std (bad) jmp ljmp inc add sahf push mov jns xchg je insb out sahf out fs je out sahf push insb dec fs pop jns out cmp xor sub jns out and sbb sahf out sahf adc or add cmp sarl adc or jns iret repz cld test sahf out in int3 in sahf out sahf fdivrl sahf out les sahf out lods mov pushf jl je insb jns out test je jns out insb dec fs sahf out sahf pop cmp xor sub or jns and sbb jns jne jl mov nop add das pop pop loope inc insl dec insl add mov fildll jl,pn lea sti stos cmp add fucomip mov push pop mov pop repnz aaa cmp loope adc mov or rcrb inc daa push cmp nop cld mov out pop xchg inc arpl rcrl sbb xor ret xchg mov jbe mov dec js,pn rcll adc test adc cltd insb repnz data16 (bad) push or out sbb mov test sbb dec fnop pop movsb int3 cs enter in les jl (bad) xor add scas sub dec faddp pop ja add mov jno pop ja mov enter enter aaa aaa imul sbb mov dec bound push xchg js adc fcoms mov iret fs add xchg addl push dec out inc (bad) lret (bad) rcrb cmpl scas ljmp sbb and js cltd in sbb scas inc jns imul sbb in fcoms jns fcmovnu rorb xchg pop xor loopne sub push xchg test loopne insb mov in xor adc aaa push aam ljmp popl jge push adc push or inc or jns push jb je mov lock mov (bad) fdivl aam and sbb sbb in in imul pop daa stos dec repnz jp dec lock enter or xor das jmp or incl into push cmp stos movsl and popl push jnp in outsl mov fs (bad) test cmpsb jle loop pop fimul push push jo (bad) lock loopne jae test stc mov sub insl dec adc (bad) and xor xor dec imul sub push xchg jne aas clc or add outsb pop arpl insb push or jge mov inc outsl pop js bound (bad) into add es jb jb ja pop mov popa dec es insl imul data16 es gs cmp jnp jne jo addr16 jb fdivp out mov add mov arpl mov testb daa push jg jnp out into sub insb das je insl sti fsubp cmpsl sbb and pop jo cmp jge push je jo jb sbb jns outsl dec data16 sbb das add or imul pop push clc add lcall jb mov clc add mov push cmp out enter push add jne or pop outsb inc adc and outsl dec insb out xchg cld dec rorb or inc xchg popa mov adc mov fbstp mov pop cmpb push jl or mov dec iret es sbb insb insb push fcmovnb mov out add sub mov mov mov jmp pop push test or call add mov or add movups pop movsl imul cwtl inc fs add into or pop insl roll enter push push dec push add ret cmpb push mov sub lcall mov xchg adc dec adc dec or sub mov push pop jl in imul cmc xchg fcomps inc subps push pop adc xorb mov jae sbb or jmp add mov sbb or and shlb cmpsb inc scas pusha dec sbb push push jns add xor xcrypt-cbc cmpsl push jns and adc add rorl fadds cmp push lret add jp pusha adc sbb inc (bad) or jle or dec pop push test inc roll xor roll add add push pop pop or or or or or or repz adc adc cmp repz std (bad) cmp sbb sbb push pop and and and sbb int jns fadd loopne push in push (bad) pop cmp repz cmp insb repz repz lahf mov cmpsl stc cmp shl hlt add jns daa cmp imul jns sahf lods mov out in add xchg inc je fwait pop push mov or push cs and pop adc in lret or push mov or cs and and sub xchg lret sub mov adc cs cmp dec sub xchg lret pop dec sbb dec in push sbb push mov repnz ja push push sub popa imul movsl repnz mov xor nop and xorl and push arpl jb add test in sub xor push fmull movsl fadds das xor cmp jne fmuls ljmp adc or addr16 jne push jno push adc push add incb (bad) call cmp rcl jp data16 and push and mov imul in or das shrb dec sub lea jno or loopne mov and inc push mov push add xor and (bad) xor sar mov push pop dec repz adc fcomip bound adc pop cmp dec js fimull sbb ss adc loope push out in xchg lock rol add ds lea lret cld sbb mov stc sarb sub outsl js addr16 sub mov push je mov ret push push rolb sbb xor inc (bad) and daa pop and nop gs push xor sbb mov adc add stos rolb in ret dec adc dec mov or or pop add nop stos mov adc add test sbb sbb leave add jb sbb and add push and or add xchg and push aad sub push add cltd dec scas xchg sub sub sub cs add add push xor add xor mov add xor pop push mov adc and sbb lods xor add sbb or adc rclb xor nop cmp int3 sub or ss push mov repnz lret dec or inc pop add push stc mov adc (bad) lcall js nop sub add int push pusha into fcomps or cmp pop adc shrl in jns adc nop jl aas xchg pop and add adc xor pextrw nop scas pop sbb dec popa sbb push xor daa invd daa aam xchg fwait ret fild andl adc (bad) mov push adc pop adc enter sub (bad) je enter iret or enter int or sub sbb in xor nop stos sbb cs cmpsb push std mov and sbb and dec push xchg and enter and es roll inc pop add add sub adc sub fmul rcrb adc js js jb test dec gs jbe jns test xor xor xchg adc fsubrs or pop push cmp arpl add lret adc outsl or push dec pop mov les xchg das sbb nop cwtl inc push jbe and inc and outsb adc inc xchg adcl (bad) add pop adc add test sbb test notb mov or inc ds pop push inc (bad) mov and push mov enter gs sub jmp pop and arpl or mov sbbl cltd fcomps test push out nop jne jno push pop push pop sbb xor lea xorl in repnz cwtl imul nop mov (bad) lret and inc sub scas and shrb (bad) lret sub dec mov mov mov xor xor xor cltd dec scas xor fs cmp in cltd dec cmp and or mov mov or mov subb sub out mov adc sub xor jae or push jae nop rorl and jl push push push xor add ja fild and nop cmp loope in dec or mov loop add xchg xor ss add sbb loop adc roll sbb or (bad) cmpsl pop and call mov cmp mov movsb push xor mov add pop sbb test cmp cmp xchg and add xchg nop mov or jne push enter inc dec les fisubl dec push pop xchg stos and sbb cmp sbb or roll xchg push pop lods test js and add xor add adc adc pop sub inc mov mov fiaddl and pop or mov xor pop pop sbb xor push mov (bad) mov outsb jae sub (bad) adc adc lahf adc lods enter add xchg stos aas xor cmpsb mov sbb pusha (bad) test outsl aas stos sub xchg push inc push aas inc lods bound mov outsb lods cmpsl ds cmp mov lcall inc inc cmp inc std pop adc lock mov inc neg sub and fcompl lock repz mov push mov sub push int3 or clc es xor mov push jmp push mov test outsb scas out les lock testb pop adc lcall js loop add loop in cmp add jecxz es push cmp out (bad) fcos inc (bad) rolb sub push (bad) faddl inc outsl pop sub mov sbb cmp jl subb cmp notl xchg mov ret rolb das (bad) mov out jno push out in add or sbb (bad) jmp enter faddl pusha out pop loopne loope divl pop icebp jmp (bad) inc sahf xchg pop sbb jp lds add add mov mov xchg mov mov xchg lcall xchg mov mov cmpsl nopl add adc and enter pop inc adc dec scas and jmp adc jns adc xor jl sbb sbb dec or jb jb sbb cmp sbb push pop pop xchg mov or in and inc sbb and cs xchg and push leave push and push xor and sub push jb sub add add push das jg mov cmp push mov inc js nop mov push cmp adc roll and push xchg mov test xchg adc sbb popa inc cmpsl ljmp loope nop addr16 and stos js push adc jns fsubrl (bad) sbb add fstl or inc insl add add push sbb jg enter insb push loope movsb mov sub adc in push jno xchg sahf imul add jb pop and leave push pop adc push or add adc dec push pop jo dec add out sub xchg dec push inc xor rolb add mov push or out sbb std push push xor jae imul pop and or push jo xor push jo adc adc (bad) scas mov pop adc mov imul mov adc push fs int aaa loopne ss pop and inc bound and sbb push or adcl orl addb ja js inc push pushw cmp lds dec pop pop xchg push out adc cwtl in xchg fimul inc push bound lahf cmpsl nop jle pushl push cld and pop lock push sub mov inc outsl pop and scas into int and or or movaps jnp mov lahf inc pop cs je add jns and mov adc adc dec fidivrl mov push cmpsl adc cwtl fdivrs adc cmp xchg fs cmp cmp xchg nop cmpsl sbb xchg popa cmc sahf mov cmp jb add andl sbb mov mov and push inc int mov sbb ret mov xchg and inc cs dec and je and add xchg pop and leave push xor sub xor xchg cmp push sub sbb lds and ret sub rcrb mov pop lods adc mov push aaa shrl inc fistpl aam mov fstl pop aaa or pop es loop aaa cwtl or ret mov cld jle pop jno aaa or mov (bad) (bad) shll pop sub push add push aam addr16 mov mov mov add dec lahf add push sub cwtl mov jp jl test or imul pop pop inc xor add adc stc or hlt fs lret cmp (bad) movl mov xor mov mov adcb inc imul add and daa test xlat or add xchg dec hlt cmp jne mov movsl cmp xlat jmp sbb in jnp sbb push sub cmp xor cmp push aaa (bad) fistp cmp cmp (bad) push push push fcmovnbe and inc lock push mov sub dec inc test sbb add mov add adc xchg jl mov sub cmp das sbb (bad) jo lods push movsb movsb add inc mov pop pushf sub xchg mov xchg addl or xor dec push jecxz mov pop cmc dec mov add inc mov inc add sbb push and mov cwtl ja scas std loopne xchg mov mov adc test cwtl or add pop addr16 stos and scas or aas das mov test and pop or outsb (bad) jae push xchg mov adc inc cmp cmp add dec xbegin jbe ljmp test add pop xor ret cwtl or mov sbb je out (bad) les inc xlat insb adc cs nop push movsb mov push insl mov mov cld cmp adc add sub dec mov movl roll lahf loopne loope xor cmp or push mov adc pop daa pop inc push sub (bad) aas xchg dec pop pop sbb add lret xchg dec cmpsb rol inc mov mov and jo cmpsb adc xor or inc cmpsl or xchg loope lahf mov shrl icebp jecxz ret cs mov out nop test mov ljmp aaa es (bad) cmp enter push dec jne or jle stos add and test sarb rolb arpl (bad) xor push cld cmp int inc inc fild test and jecxz xor or and push push push or scas and mov leave (bad) sub stos sub or adc sbb cmp cmovge dec cs mov cmpsl test test mov push jecxz insb outsb pop push sahf push call insb add mov or jp adc jb jp inc dec push and sbb out sbb add sbb out sub sbb or pusha inc fidivr (bad) lcall out sbb or mov sub xor add popa sub add or nop mov push cwtl leave jno mov mov es orl xchg pop orb loope cmpsb add pop rol adc jnp inc dec sarb repnz adc add xchg cmp les xchg nop imul (bad) notl and testb xor push rolb cmp cmp out fildll or daa sub sar pop and std in sbb add inc movsl test outsl divl cmp mov pop sbb mov jns dec pusha adc add adc mov in loopne pop adc inc add cmp negb or nop dec mov mov push add dec pop inc mov add adc mov add enter frstor cs mov leave jno add adc in jbe mov mov js js inc sbb mov mov xchg jb or sbb leave jns or enter hlt gs pop in or adc adc add adcb add test mov test lds mov in inc (bad) fmull fldl fnstsw shrd xchg sti je adc ficom (bad) xor pop cltd fiaddl adc sbb ds ret adc decl ret cmp movups (bad) mov sub adc bswap adc mov cmp (bad) xor mov adc fldenv add addr16 cmp mov negl shr outsl movsl and int and dec mov rcr aaa add sub ror test (bad) mov adc cmp sub push or push and cmp sub lods or test push xor mov push iret xchg sub inc inc pop mov loopne mov mov or dec rolb mov enter dec pop push (bad) adc movsl jecxz mulb outsb pop hlt push pop imull jnp push lock jne clc adc jno pushf inc aaa xchg sub loopne push and pop jns ret xor push lods cmp jg dec mov and mov jl test lea jle inc (bad) (bad) sub rol cmpsb pop cli xor dec mov int3 (bad) fistl roll enter (bad) cld cld movsb icebp gs dec dec or adc sti sub outsb fcoml arpl push xchg sbb jnp adc push sbb adc and ror dec or cmp cmpb ret aaa es inc jg inc dec sahf sbb adc mov mov sbbl dec inc inc dec ds sbb fdivs cmp inc fbstp paddd je mov lock xchg pop aam xlat add jl mov cli mov shll scas insl inc rorb adc mov (bad) xlat add (bad) mov and mov nop dec adc adc nop add rol (bad) lret lock sub test add dec sbb pop adc jl or mov mov jl sub adc sbb pop in inc sub mov or daa outsb sub add daa inc xor dec add xor xchg out pop cmpsb cwtl add std das cmp and daa aad aam inc and insl jge xchg jb lock push inc sub imul mov sbb or pushf mov mov arpl lods out test faddp add ret sar add arpl ret cmp push push fnstcw sbb pop adc loop popa and fimull mov fcomps fimull push sub flds aam add xchg (bad) xchg sub and add lgs add imul fs call lock nop pop testb and (bad) movsb adc fimull insb pop pop aaa cmpw rorb jne mov cmp and push sub adcb and lds lahf and xchg adc cmp icebp shrb or adc call or pop push xor cmp mov (bad) dec dec fisubrl push mov gs or sbb and adc mov jo imul pushf mov nop or fistl ss add into mov pop dec lcall or aas jnp and int3 adc rolb sub sahf and add and inc lods mov pop pop add add jae inc ja add xchg dec fwait xchg adc push mov dec mov insl and test loopne add sbb inc cmp xor jl sbb mov ret (bad) ss pop adc (bad) and imul xor dec or push mov add loop sbb in xor mov push sub dec fs cmc scas nop fbstp imull ljmp std sbb add pop mov jl push xchg inc xchg push fwait pxor sbb pop dec push or sub dec andl adc js inc sub add sub xor mov pop sub mov adc (bad) jo mov dec pop cmp pop movb bound fsub les fidiv cmpsl pop adc mov mov ja jp pop mov subl pop pop jo daa xchg roll mov ja push xchg int3 mov in cmp roll sub repnz and (bad) push out mov xlat pop testb and test add adc andb cmpb out mov insb loopne adc mov adc ret mov lret cmp out push in stos mov add sbb sbb xor cltd lea add lcall push cmc push pushf or aam mov push fbstp dec dec add mov and popfw (bad) gs cs and and adc movsb ss and mov and daa jmp dec mov mov cmp je pop popf adc daa mov inc fidivrl popf in ja inc popa fucomip cmpb jne pop add add inc push sbb movsl addr16 inc cld lret int mov movsb sub pop je or enter cmp addl pop mov fisub jle stos inc iret movb ja loop shr jbe inc cmc cmp or out rorl dec jge sub test inc mov sbb push pusha cmpsb (bad) xor xchg (bad) adc pop cltd mov and lea adc push adc jae inc mov loope pop adc sbb push sti xchg add or mov lock jmp stos inc lar lret pushf lea fwait or add mov hlt das jne test add test xchg and jno outsl mov add outsl adc rclb test pop lahf pushf mov sbb or inc aas cmp mov mov mov loopne mov dec add sub imul daa sub (bad) clc shl lods inc repnz iret dec cmp mov test arpl nop dec mov pop mov addr16 add push aad test mov hlt loop dec xor or and clc outsb add (bad) cmp je and jmp mov or adc cmpsl pusha loopne push sbb mov push stos pop repnz sub pop dec add mov cmp mov adc stos imul push push push dec dec xlat pop sbbl jp imul add out lcall adc sbb xchg les loopne adcb adc (bad) jne pusha jae sbb pop xchg fadds or out cmp and out pop out add push and xor xadd pop or sub pushf pop jmp jnp aaa push popa call out cmpsl sub push pop pop aas add jno sub lock mov ret test jae mov fbld ret pusha add pop mov dec (bad) adc dec sbb ret and dec sbb dec jl sbb andl xchg push adc pop cld pop jb loope js mov mov sub xor lds cli in push sub pop add add sbb jne inc adc and cmp scas outsb adc mov or outsl in andb test push xchg xor pop push aas test scas or push xlat cmp inc mov mov ljmp (bad) adc scas cmp ffreep add sbb std mov mov xlat mov push xchg sbb jb adc nop push push xchg and jp jp daa mov in or dec loopne xchg sbb jb test dec dec jmp iret jo adcl mov in jns je adcb push cmp fwait (bad) and ret cmp push adc jg jl lods ret jno in out xchg push and or push pop stos adc or imul orl into or sbb fs hlt mov imul or adc sub xlat adc inc inc push xchg mov aas adc in cmp arpl call ljmp (bad) push jge movl inc pusha adc adc (bad) notb in mov movsb inc sbb mov or jmp xor sub and sub fs mov dec insb int3 cmp mov mov into jp out push sti and inc lea or test push movsl sahf and movsb push (bad) mov sbb movsb push and jge clc mov xchg inc clc cmp mov cwtl mov or inc xchg mov sbb aam fnstenv (bad) jmp jge mov mov cmp mov or inc aad in cmp jne loope push pop lea xchg or (bad) addb rcrb push or rep mov in ficomp inc push inc jg mov add mov add push movsl push aaa mulb sbb lret or cs (bad) mov sti sub or sub fild aas xor js and xchg mov or mov ja cmpsl sub push sub cmp lahf cmpsl movzwl mov inc pop imull testl outsl dec and jl pop and dec pop cmpsl xchg cmp or dec pop test sub mov jne (bad) adc push pusha jl mov sbb icebp xor inc cmp dec push jle popf push call add mov adc xchg mov clc movsl fdivp adc mov fnop xchg xchg dec dec fildll inc fdivrl pop insb je nop push inc cmp push icebp mov pop icebp cmp test repnz les inc pushf add subb lds adc push in push out dec (bad) outsb jmp inc lahf xor scas out insb ds jnp adc js and push addl fs mov and adc xor cmp rorb mov push fsub add adc mov or pusha xchg sbb mov inc sbb (bad) bnd jo cmp outsb loope (bad) sbb (bad) or inc psubsb jmp dec mov dec data16 inc out mov xlat mov outsb pcmpeqb enter inc repz jl les pop push std repnz mov sub out iret fucom push in cmc aad loope xchg cmpsb (bad) fs and adc stc aaa fs hlt push push pop add dec adc es adc sub incb adc pop inc jne mov push push ret add xchg aaa inc sub adc rorb push sbb adc sbb inc sbb sub add mov rorb fsubl and sbb inc into add xchg mov imull lcall cmp movsl pop out popa adc pop pop xor popa adc push xor or lea ficoml or fistpl mov call clc jns (bad) sub in adc js dec mov xchg lcall xor xchg inc fwait repnz dec and lds icebp xor xchg div adc jns aam movsl inc cmp sbb jmp xchg test cltd mov pop pop or aaa cmp xor fsubs cmp mull in mov add pop inc loopne loope punpcklwd dec mov dec pop loopne add les mov es aas add shll clc arpl and lods aad int3 bound mov xchg or mov sahf in in add dec lea or sub mov dec ret pop fs push sahf lcall mov add adc cmpsl mov (bad) test jecxz sar clc add sbb or lcall dec inc sub sub and (bad) sub sub push pop sbb cmp sub sub and loop mov xor sub mov movb and push je add or or sub push lcall enter add nop (bad) xlat adc pop mov pushl add ja loope adc add nop cli mov pop mov or pop (bad) rcll fldcw push mov jg loop inc loope repz mov mov pop (bad) add cmp pop dec dec jne jo inc call mov push lds mov jb push mov or adc push ret jbe popl dec fbstp push test or mov lret daa and mov cmp mov sarb sti sub flds mov orl cld insb add inc (bad) sub cmpsb lock and add int sbb cld mov or or pop push js sbb sbb cmpsb or mov popf adc xchg inc lock xor imul sub insb ljmp dec mov xor cmp pusha and xlat rorl pop das sub cmpsl fsubrl mov pop icebp and mov pop repnz mov inc fwait and idiv dec push pop push dec dec dec inc dec push add lock mov add or aaa aaa das sbb push or add dec adc add loop ret mov std xor decl adc mov sub pop adc sub pop insb sbb sbb jno jle jnp lods push jmp lcall pop stos xchg std mov das pusha daa or inc fdiv or pop lock or mov test and sahf repnz cli hlt xorb pop xchg sbb cmp lds (bad) cmc mov cli mov sbb test hlt mov div xor or xchg xor mov sbb ret cmp lcall xor or inc pushf lods add test fst jmp mov mov popa jge mul jns add scas xor add in sbb xchg or push test aaa or clc inc or adc rolb mov icebp (bad) ret xchg xchg aaa out loop or sub jo inc lea dec mov dec adc aaa test out fild test mov sub and lock xor inc sub jae sub nop jo pop push inc adc inc xlat add pop push les add bndldx and mulb rolb and sub or shlb add cs jb outsb adc mov jle push js in mov in ds je xor sbb push or dec fistpl ja daa cs sub nop xchg out cmpsl jge clc es pop lods push mov mov or cld mov or mov and insb xor insb add cwtl ds jl test inc movsb sub mov cmpsb js sub push dec sub cmp mov push lods loopne clc cmpsl test xor in fwait dec pop ds xchg add (bad) ja fsubrs dec sub xchg and adc leave inc sarl jns sub inc adc js dec add jo,pt cmp push andl jnp ret sub sub push hlt push (bad) jo fimul pop sub (bad) or cmp out pop sub and xor mov inc adc adc add sub xchg jbe,pn add les add pusha das test add add inc sub push in test lea sbb movl cmpsb add aaa dec add enter jl inc cmp cmp jo inc sbb add mov cmpb add pusha lock xchg in shrb daa cld xchg shrb popa pop xor push or push jnp lahf adc inc and jle sbb lds test mov fs (bad) jne rorl daa add adc in arpl arpl or repz xor xor ss pop pop sub pop fcoms test pop push sub test fadd sub imul notl cli sbb mov push lock nop enter pop or mov or lods or inc popa imul mov adc out lods sbb (bad) jae jns pusha or rcrb and into sarb cmp sbb add pop fsubl cmp andl mov inc int pop sbbl adc shrl dec movl adc shrb sub rclb loop movsb sti push mov dec addr16 fimul or lea add (bad) (bad) sti push xchg dec adc invd inc mov or xchg push mov sub shr dec push loope adc sub pop (bad) (bad) ljmp inc push inc xchg push decb out psubw int jb add daa test add add push nop je push iret or out (bad) jno xchg stos (bad) push add rclb int3 mov out pusha jnp unpcklps ja leave insb xchg addr16 push or test pop loopne mov or xchg adc loope add es pop je hlt mov cmp pushf (bad) test fiaddl ret into cld or xor or adc pop popf (bad) inc or or shll push mov dec add sbb mov or pop cmp cwtl adc insb push xor or out inc add or mov cwtl pop (bad) mov cs movsl aaa sub js gs pop rorb inc add lods jecxz push mov sbb add jl (bad) sub sbb push xchg adc inc pop jg or sarb or scas movl jmp jo test inc pop aaa add das add inc shll loopne scas pop add or inc or mov fadds in out mov push pop push pusha or xchg lods add scas out and outsb insl pop push xchg or les addr16 push adc gs imul or add push inc cwtl sub jno fs shrl push push loopne sarb jo test mov (bad) repz out sar and test in sbb ds mov (bad) adc and pop add fbld sub inc or popa or mov andps push cli mov add push add sarb add add add add push mov mov fstl pushl and sbb cmp mov inc mov jg icebp outsl xlat in (bad) in (bad) jmp ljmp jmp (bad) jg test in jecxz loop loope loopne fdivrp (bad) fdivr fisttpl test push fmuls aas push jbe sar sar sar iret call into dec dec dec scas repnz leave cmpsb cmp imul imul push adc sub mov imul outsb pusha adc test dec jo jnp out sbb inc push les movsb push iret sarl iret mov add jnp lock dec jb push aam xchg (bad) imul stc xor cmp mov lcall hlt jl pop fwait in sarl je jae push jne inc xor cmpsl cmp imul test out (bad) clc cmp push rclb sbb mov sarl ds pop cs les adc xchg ja push leave nop pop pop inc dec inc arpl inc mov out or push xchg mov inc xor inc out cmp lret rorl out or dec or pop add inc sub cwtl js cmp add (bad) mov aas incl mov inc cltd mov add pushf leave sbb pop sub or pop mov test aam or and dec sbb jnp xchg fbld xchg add fs or jg adc adc dec add xor adc xchg push jle inc mov xor adc xor jmp or daa test imul das push cmp push push pop out lods xorl inc inc or push inc xor (bad) in lds sbb or xchg inc push mov mov popa addr16 sub scas adc mov jg dec or mov les sub jl push or jbe addr16 add fcoml xorl pop adc cmp daa push push or cmp inc or outsb bound or jae jns test std xorb insb jmp xor sub daa enter xchg xchg popa add cmpsl ss xchg and gs outsb lcall add fwait or jmp jge pusha pop cmpsl sub lcall inc mov adc xor mov add lds or inc and jo aas loopne lcall dec add add adc adc or push ss test test xchg (bad) add add add add outsb xor jb mov andb add add jg or add mov mov sub or shlb mov mov into sbb adc mov mov mov test incl add push mov xor cmp in sti sbb repnz incl sar push (bad) inc inc inc inc inc outsl xchg aam mov (bad) mov test ret mov test sub pushl push dec repz jo in lahf and lcall cmp cld mov mov dec stos data16 stos push enter lods lahf cmpsb jnp pusha xchg mov leave call divl orb push mov (bad) (bad) aam iret shrl mov cwtl int3 sahf out divl cmpsb push fsub in hlt cmpsl stc fidivr mov push mov out popf loope js push bound repz jns xchg clc mov insb ds adc cmp stos mov mov xchg out (bad) cmpsl fdivrp out fldenv test push cmpsb push mov push insb mov cmpsb shrb inc movsl out mov push pushf push sub in jnp test cmp push xor xchg je inc idivb cmpsb fdivrs test loopne push mov sahf mov mov lret into inc pop and mov sahf cmp inc or dec sbb ss or sbbl loope adc loopne jg iret push adc into inc push icebp call push addl pop sbb xchg push pushf inc sbb and jo lahf adc inc add sbb test fdivs pop add or push aas pop sub outsl xlat mov or les cwtl push mov roll sbb sub fwait (bad) xchg mov (bad) mov cmp mov aam jl int sar shll or and jne add adc cwtl sub pop (bad) cmp push mov pop and leave inc sbb les and xor adc pop mov iret mov xchg fmull loopne dec das dec jo dec or fs sbb adc push fs sbb inc add fs jmp jb mov pop cmpsb movb inc dec push jns out pop data16 (bad) loop lahf out cmpsl mov in adc fsubrl je xchg cmp mov add js js add inc jecxz adc (bad) mov mov cs repnz outsb fadds add inc out push and pop mov sahf add jle or lahf sub inc add add movsl cmp (bad) lcall pushf push add insl sbb lods inc popf sbb lcall aam ss cmp testb xor and jbe add sbb icebp lea add enter xchg and push inc dec and inc movl jae xchg mov test sub xlat ret or lret test and clc pusha pop pop int3 add dec sbb cltd testb jne xor and mov cmp jne andl sub xchg adc adc pop sbb (bad) sbb adc mov cli imul mov (bad) icebp push fs daa and ret lock push fiadd or int3 shll xchg xchg daa push dec mov push push inc sbb inc daa push jo jo jo daa or inc insb popa mov mov clts inc xchg outsl fisttpl cmp adcb adc jo imul xchg mov dec mov movl repnz sub stos add addb fdivs xchg out adc jo bound adc pop pop add lods xlat mov cmpsb and stos or jmp inc lret add add cmpsl xchg or mov enter mov (bad) pushf adc ds adc sbb xor push dec xchg adc mov inc (bad) mov lcall cmp out sub or call push mov add mov mov inc pushf cmpsl lcall stos icebp pusha cmp mov movsb adc (bad) mov movsb aaa insb (bad) adc jecxz cmpsl inc clc negb cmp jl push sbb jne add sbb test adc or and push addr16 mov addb jp pop out lcall lock test and or aaa xchg enter pop xor sub mov int jmp pop pop xchg xlat push scas mov dec jne ja scas sub jmp mov es jno or mov or sub add insb flds push dec gs xchg and jg dec (bad) xor or adc adc dec (bad) xor sbb and (bad) xor shll sub sub xchg inc sub push push or or pop xor enter push js and inc rcll popa loop xchg inc jbe sbb pop jbe test and rorb xchg jne dec sbb (bad) jg je sub or loopne in ret sub push sub push outsb mov (bad) mov inc add mov (bad) push into pop pushf bound inc push mov bound inc in loop sbb cmp xchg dec sub (bad) adc mov or adc xchg gs or xchg jg insl sub sti pop cmp movaps push pop leave fdivr mov (bad) jmp or push inc sbb dec sbb inc add or or loope mov adc in test cmp loope mov push and add and inc call add shrb mov inc sub push fdivrs (bad) xchg call sahf and add das inc movsb xchg pop xchg les push jp and inc or cld dec (bad) cmp pop js mov (bad) mov or sbb jmp inc mov or add adc test cmp xchg or mov push push xor lret sbb add jge iret cmpsb push mov push pop mov icebp lcall push jnp sub push pop pop cmp or inc inc repz jno push adc pop fmuls or xchg add cmp sbb and push mov push pop sar or sub sub mov mov push ja adc cmp dec or adc loopne mov shll xchg jb into neg xchg xchg pusha inc inc jns ljmp fisttpl push or daa fimull pop mov dec imul fisttpl ja mov inc mov and pushl add push hlt imulb mov sarl jb sbb xchg movb cmp movsb xor lcall push adc movsb dec add mov fcomps negl lods out iret and jne push ror mov or mov test sti insb in js aas sub nop jp push mull mov dec in and jge cmp xchg rolb xchg lock sbb mov in lods or jmp push mov rcr sbb dec add clc lods inc xor pop mov or je cld mov jae adc push sub (bad) xor dec adc xchg pop movsl icebp lea dec test xchg push mov jl inc cli jmp inc in sub add (bad) subb and jnp cmp je jl adc into fildl mov cwtl pusha cmp adc in xor lods loopne in lea test jnp js ret jo jge aas lock or xchg test xor cmpl jecxz sahf sub fisttp test or iret xor ja jns pusha pop (bad) leave add jne mov sbb lret push or sub jnp test sub cmpb mov xor fs push or xor cmp lock xor mov inc inc push sub ljmp cmpsb sbb adc mov daa (bad) lcall mull fmuls sbb inc or fnstcw cld add jne or jp or iret faddp adc jl movsb jmp mov call push sbb dec popf xchg mov cmp daa adc pop and (bad) cmp les adc push mov insb inc subb sarb test sbb test xchg cli pop pop in or fsubrp lcall push inc lods add push sub xchg add imul pop xchg sbb mov pop sub jb cmp ds jne pop pop jl inc mov xchg jmp dec sub or jecxz push inc test inc jbe pop inc and or je jmp xchg movsl test sub jecxz cli dec in push add in aam or out cmc js test hlt sub sub mov pop fidivrl push das fdivs test jb adc sbb push xchg push fs into scas pop or inc cmp aas xchg inc jo xchg fidiv cmpb js icebp div shrl clc pop pop adc cmp cmc js jbe add je out ds sub leave cmp pusha (bad) push cmp aad cwtl out or inc dec sbbb add repz xchg clc ret shrb out dec test (bad) push jge mov push fiaddl sub add or fnop mov cmpsl es inc inc jp adcl aad xor or inc movb add sbb add xor sti cmp je movsb imul push or jl mov sub xor sbbb jb mov adc mov test lcall ds sbb adc lods and or fs out mov mov mov cmovae addl or pusha xor inc push and (bad) or (bad) std pop adc xor mov shrb inc jmp ret cmp (bad) pop jmp pop cmp ret repz or sub stos add loopne ja aam push push cmp out pop xchg movsb add mov and (bad) ficom inc pop sbb pop fdivs mov lret push jmp push jge or ret dec out mov lea cmp xor sub in add xor xor sub mov js das shrb or jp iret jge mov pop adc mov int3 pop out push inc sub aaa les fsubrs pop xor inc aaa cmp xor or or js or xchg scas movsb cmp adc cmp fistpl jg push fldt stc fstpl nop popf cmp inc and out jbe test fsubr inc ss jns sub imul fistl sub rcr hlt in add cmpsb xlat xchg pop dec adc or pop sub or or repnz pop adc lret jo inc (bad) imul das loopne and pop pavgb repnz push lods and inc stos push pusha and mov xchg mov fwait ljmp stos and pop or inc outsb jecxz jo and add xchg jecxz sbb dec pop jle les sbb test addr16 cmp test xor ja xchg in loop stc pop cmpl lods ret repnz dec sarb or push call dec adc shlb int3 xor xor mov mov inc push call (bad) mov push dec sub add in fstl inc inc add pop jno dec add out push sbb ret jmp stc and cmp xor cmp adc daa int3 js or dec aaa and cmp add scas mov repz es aas movsb lret push pop or adc aas add ds fcmovnb inc incb sub in or (bad) jmp cmpsl sbb cmpb lahf nop outsl movsl cmpsb das push movb or sbb rcrl inc mov sbb rclb ret lock jp inc insb mov loopne cmc sub cmp inc ss xor adc sub or cli jmp and pushf adc sub je ss dec push ret movsb enter inc inc dec mov lods or cs push pop outsl je xchg mov adc loopne push les pop sub xchg push clc sub add cmp (bad) fldenv icebp or adc pop gs jecxz push xlat sub jae pop fs mov add jo add sub nop (bad) xchg or js cs ljmp add mov mov xchg bound pop jb mov or push lret and test jo push mov push and xor mov notb (bad) data16 mov mov xor imul mov jo cmpsb inc add daa dec mov fwait fwait (bad) jo dec mov repz or lds inc mov leave faddp jno xchg into (bad) out rclb or ja and mov fdiv push enter hlt js sbb test mov xchg lea fbld add out nop pop and add pop es add add add adc pop push (bad) iret dec mov daa lock push or inc test iret lock imul dec rclb insb test sub inc shrb xchg xchg je jne jnp loopne,pn popa loopne shr jmp ja and adc xchg lea mov dec dec cmp mov cmpb hlt bnd push adc lret push rorl push js xchg or mov outsl pop mov std jl outsb lret inc repz pop xchg add mov add data16 pop lea lret (bad) mov fistpll pop add sarl mov imul repz outsl stos das sbb or out or inc lock shrl and pusha jmp cmp popa insl jecxz sub flds (bad) jns (bad) mov leave cmpsb test sbb aaa or andl xchg push pop pop pop inc and jbe xor xor mov adc dec rorl adc pop or pop and or ljmp dec out pop jmp cmp inc jnp dec or or adc xor (bad) or cmp push mov xchg xchg or adc je mov jbe cmp cmp dec pop je cmp push (bad) popa enter adc movsb push sbb sbb (bad) subl inc dec in adc inc add ret cmp dec jbe subb out jl das and xor ljmp sbb mov leave xor pop daa or aaa xchg hlt inc mov adc andb jo jle and pusha push pusha and in test or aad out testl outsl add cltd and jecxz pusha xor jmp dec add add add dec cld fs and lcall (bad) je mov jecxz push mov add les jl sbbb outsl or sbb push addr16 mov push cmp addr16 sbb jne xchg sti mov add inc pop mov lods mov and (bad) push push nop add nop addb fistpl jg clts pop xor add mov inc cmp testl adc add fstpt iret movsl mov and in jnp or cmp cmp mov push add jo lods fwait or push jecxz add xor xor movsb mov nop addr16 or mov xor pop cmp sbb and je mov mov push push pop dec (bad) out jae mov push ret sbb inc mov sbb sub jmp dec loope cmpsb sbb in (bad) movl mov push pop pop pop sbb lods add add jp push jbe sti jmp (bad) xor imul and fwait jo sbb (bad) pmuludq scas clc ja push aaa lods mov xor (bad) push cmp imul mov mov mov cmp add jmp ss or insb xor sbb movsb sub push test xchg scas lock test inc and (bad) lcall cmovge mov cmp (bad) xor inc nop and ljmp cltd les mov inc into andb andb insb xlat daa push clc movsl inc dec cmp lock jnp,pt jmp (bad) add pop mov dec daa sub jnp push aaa push cmpsb lds dec dec inc call sbb push add je push lock cmp or clc outsl or test adc sbb push orl and test incl push cmp daa sbb push mov insb sbb and rorl out shl inc pop loope lahf pushf sub cli cs jo ds lret or push xor push cli adc cmpl xchg clc or fs fisttpl push ljmp aaa xlat dec loope outsb (bad) push arpl cmp xchg inc push or in in pop or adc cmp test dec inc and jle pop sahf inc (bad) jne push inc loopne and cmp jne sub pushf xchg push adc and test mov pop pop clc leave mov xor jl popa loopne fbstp or cmpl jo lods pop (bad) push je add insl xor xchg shlb pop out ret ljmp and and add push inc dec push adc inc push inc test pusha xchg dec inc (bad) cmp rcl or popa sbb dec cmp or add jb ret pop inc jbe jnp jne rcl sbb or fstl nop outsb adc inc jo xor mov inc inc mov or adc dec (bad) lret or fmul or dec xlat sbb mov push stos test adcb fadds inc test mov pop or in mov ret cmp nop test cmp es cmp sub sahf xchg (bad) mov mov push adc fsubrs mov movsb test add xchg sub add imul cli push and call xchg jg cmp test daa je xor push pop (bad) xchg push sbb inc dec das pop add xor das cs ret inc loopne mov inc rorl cld adc push jbe inc lret inc dec add dec push xchg dec add es xchg push inc or cld cmpsb mov in outsb or dec add cwtl mov cmp cltd pop sub jnp cmp and cmp rolb adc mov and sub pop (bad) push sub sub push aam push mov fdivr clc dec and mov bound mov incl add cli cmp mov es adc outsb adc imul or int3 aam or (bad) sub push cmp add sahf mov sub mull test test test cmp aaa mov or mov jle lods lret outsb dec add add mov sbb dec fsubs jmp in and inc sub ljmp push sub adc and pop jge insb es lea adc dec sbb out mov (bad) jnp cmpsb and cs aam fwait or daa inc mov xchg sub (bad) fsub adc pop xor xchg lret mov loop push xor cwtl or sub adc push js inc jnp pop pop fiadd push or xchg adc push (bad) push xchg cmpsb outsl repnz mov add pop mov daa pop in push mov sub push inc and and call mov xchg mov shrl xchg es sub mov enter icebp mov mov cmpsb test mov xor and and fcoms mov daa pusha (bad) push popf fsubs or or and es sub cmp je sbb sahf jg add push in adc push push sub call imulb xor inc add or jmp sbb dec mov movsb push push xor add pop lcall xor daa test mov mov jl mov nop add pop ret ja ss lcall xor or adc dec lret rcl adc pop aas push jo insl and andl pop (bad) sarb pop push clc loop leave add adc adc inc or (bad) rcrb mov popf movsl es add inc mov in je mov push jae mov push mov inc stos push ret testb je andb adc xchg jmp mov mov clc lock add pop inc dec sbb mov ja cmc insb in out mov loop adc test adc or mov mov push jmp or push xor test movsl sbb aas sub cmp (bad) dec mov mov add aam cmpsl mov in sbb xor push inc pop outsl popa xchg paddb pop push je pushf int push es fwait push xor mov inc sub aas xlat and scas adc je mov push mov pop sti nop fist mov lods nop rol push mov lcall rol pusha dec pop mov jo adc enter pop fisttpll add repnz imul xchg and pushf mov inc mov dec dec mov cmp dec mov jg popa or adc sub mov jo and (bad) outsb pop je mov movb ja movsl lods dec andl mov cld xchg xchg and bound jmp adc addl daa push add push or mov rclb daa cs je mov lea call push aas or nop cltd mov mov (bad) mov dec and je mov fwait push lock idivb push jo mov (bad) and or jb xchg xchg pop pop pop or xchg dec dec inc pusha pusha cmp data16 data16 lock enter adc cmp xchg sub sbb ja cmp clc cmp sbb push add (bad) pusha push out or lahf push sub es sbb mov push movsl sbb cs mov xor fwait insb popa mov add das add or sti roll xlat insl mov je cmp jnp mov or inc cwtl les (bad) not adc pop sbb ss push data16 pop out inc and add pop adc imul cmp dec push and push (bad) out addb fcompl push jb mov icebp adc rorl cmp add dec inc pop push pop dec cmp clc cmp inc push inc sbb or sub mov xchg enter pop les xor and sbb clc mov ja clc cmp imul jmp push cmpsl mov dec jecxz dec cli roll xchg mov mov sub insl cmpl adc push pop ja pusha add outsb or aam pop insb jg adc sbb (bad) cmove adc inc leave jg (bad) mov je incb inc pop mov inc jo push pusha dec les sbb gs jb mov mov rcr ret sti push pop jne mov pop pop cmpsb pop shll ret lahf xchg pop inc mov inc push pop cld add push popa inc mov sbb (bad) push cltd mov cmp mov fcmovb out addr16 dec fldenv mov vmread push mov mov or dec pop das add add jb inc cmpsl mov ret rcl lahf push mov or fwait rorb out (bad) in pop cmp push pop dec pop add outsl ret lea adc jne inc lods pop inc dec pushf push js cmp mov xchg movsl lods hlt ds sti add xor mov jle xorb add inc cmpsb mov push sbb js or add sub sti sub cmpsl sub addl push inc cmp test or fs push push hlt mov sbbl addr16 aaa adc stos pop xchg pop xchg mov add adc adc mov mov mov cmpsb sbb sbb xchg mov hlt fimull push mov sub insl test int3 test mov decl xchg jb or dec and inc or loope jnp adc mov jl movsb rcll ljmp pop fistl pop push fldl inc fsts mov add outsb pop (bad) aas icebp or push inc mov jmp lcall adc (bad) and push push insb push mov cld mov mov inc je lea cmp and mov or sbb lret add add rclb ret fsubrs sbb (bad) pop (bad) lret cmpsb and sbb pop fidivl cmp call jne add pop jo lret push sbb (bad) sbb shr js cmp push sahf std and ficomp lea (bad) mov xor fsub add jmp sub mov test incb mov xlat inc test addr16 rcrb cwtl add or xchg sub push or xchg and (bad) inc inc mov mov jbe jl xchg xchg pop cmpsb nop dec dec dec cwtl mov test cmp testb cmp mov pop loopne andl or inc add push inc push sbb repnz dec pop mov leave sti pop sbb push jne sub shr (bad) sub cmp push (bad) dec imull sbb cmp xchg imul sub dec in jge xchg das in or inc in inc dec jmp push xor add fs add and daa dec cmp push (bad) leave je scas pop pop enter add mov loopne cli push outsl or sbb shlb jbe loope js adc in xor cmp add loopne jecxz sub jb mov sbb push push pop js nop xchg jmp ss pop pop adc or les ss inc sbb (bad) in sub sbb or sbb pusha xor xchg sbb dec loopne and cmp test int cmp fsubs je pop nop jo pop adc add ds mov cmp rorb cmp mov inc clc in imul aas ret (bad) jne xor xor push pop int3 sbb mov jne cli pop dec inc pop jle push push or push dec (bad) jmp shll mov adc inc les cmpsl sarl mov mov es addb inc bound call lret and sbb jp push add xchg jmp lock push adc xlat add inc pop adc js leave std mov push imul push data16 mov and sub dec xchg push dec movsb or mov add push jnp iret sbb push ret loopne hlt les pusha fdivr xor flds cmp sbb test or ror (bad) loope pusha adcl and or (bad) mov inc add ret rorl ja sub popf les or and fs push js add movsl iret call in inc pop gs push pop movsb adc or insb (bad) pop es hlt mov and and jae xchg mov add add btr cltd xor and push push inc pop fs mov and aas mov bound xorl dec cmp push (bad) sbb jp mov push inc outsl rcr jmp add xor push add adc or add cmp mov mov sub mov sbb add movb jl adc add mov sub or pushf pop or hlt xor fnstsw cmp into xchg fstpt sbb testl shrb push jle fnstcw in mov pop or jns sub pop jmp sub push add or push and rcl cmpsb adc jno add push movsb mov cmp sbb addr16 imul mov dec push lods push movsl sbb pop inc cmpb nop dec rcll jae sbb mov jmp add stc ds fiaddl or imul imul inc sub dec mov jne dec push xchg pop or call jecxz nop push mov ss and mov cmp jo iret js mov inc aam fstps mov mov pop loop mov cmp inc ja cmp sbb pop cld jle xchg pushf jne fildl jbe stos jb (bad) xor sbb sub ljmp dec mov cld sub (bad) stc or shrl sbb cmp jno cmc cs push push jl dec pop pop sahf and ds in sub fistpll push add jle push (bad) jmp js xchg shr andb aas enter popa les inc sbb push pop inc out ljmp std push dec je inc hlt pop hlt js lcall lock add push pusha and iret test (bad) in ja pop adc jns test je test add jmp add mov mov iret movb and dec roll cmp push in aas mov (bad) fstps xor outsb pop xchg and pop pop clc xchg mov imul sti push inc push mov xor aas aad jle mov aaa ljmp sarb loop dec cmp mov adc sub aad or adc dec cmp mov sub add xor or lods pop aas test bound scas adc adc js add adc rcrl cmp adc ss sub popf push arpl es sub sub sub (bad) and push dec jp leave lea xchg xchg das jne push mov adc movsl and xor loopne pop testb cmpw pop movsl mov das loopne inc out mov mov pop dec out mov test dec inc aam and cmp dec inc push test or shrl pop adc fstps adc add inc pusha mov and lret nop lret mov (bad) icebp pop adc pop je xchg fidivrl dec and sarl or in dec inc mov mov xlat add rolb inc xchg sbb je addr16 movb inc push add jl inc mov adc call adc popf xchg test dec sub (bad) lock or or mov lcall test ret pop ret roll (bad) mov outsl or mov mov jbe push xor mov add dec lahf sub fisubrl je adcb mov leave movsl (bad) fnop add mov fs cmpl sub pop shll jp or cmp push ret pop aam push test or and in mov sub adc imul call pop dec mov sbb push sbb jp push cs aam mov fadds inc xor mov aam mov stos jmp mov aam out outsl sbb movl cmp or xchg push mov mov lcall insb movsb add push add mov and and pop jg (bad) enter movb mov xchg cltd or loope pop pop ret mov outsl in or decl jecxz jno jle je push lock fiaddl dec cwtl push or adc adc in bnd jle adc or imul inc jl pushf es je mov mov push add sbb inc sbb mov and add jne add lods or cld je adc push xor push inc loop andl inc stos mov arpl insb and std adc inc enter jo arpl mov popa pusha and or dec insb push jo mov push mov mov inc mov mov add loop add adc push call push aad loope pop pop inc mov or or and pop xor scas lcall mov js loopne xor adc daa push sbb sbb xlat mov push in jno adc nop gs push bound lods test add xlat (bad) insb ret inc xchg orl mov insb pop mov pop cmp adc lock dec daa pop and or ror pop add movsb out dec mov mov nop fisubr je sbb xor ret push cmp movsb mov insl xor inc sub pop test xor ds xchg dec (bad) je dec push push or lock sub sub insl rcll adc cwtl hlt or dec dec push mov add push aam ds adc jle jp mov cmp daa sub daa outsl cld mov adc or rcl xchg adc pop pop push add push xor and sbb or and fimull jmp stos xor jae push xchg mov je adc idivb loop and int3 push lock fstl xchg hlt stos and sub das pusha gs push push std and scas cmpl or aas ror ljmp xchg mov adc data16 lret mov adc out adc test clc or inc arpl and sbb cmp (bad) rorb sub mov mov or mov or lahf and pop leave inc jb cmp jb pop and or xor fs or cmp (bad) jb and inc divb push aaa or es or cltd (bad) arpl inc (bad) incb fldl popf sbb xor outsb and add or icebp andps mov mov movl in or xor lahf and and inc gs add fcompl and ss adc inc and xchg add sbb das enter dec rcrb mov mov mov sub gs inc jg std adc stos pop jns mov add insl cmp xchg stos pusha jecxz add add and repz dec or in sub sub jns rclb sbb sbb add xor fwait outsb xchg (bad) pop inc pop (bad) mov adc je add jmp bnd jnp jmp in aam int3 push cmp push sbb rol push inc adcb dec shll push push dec fcoml aam xor fadd inc bound call ret mov jecxz jmp sbb inc dec (bad) add xchg or daa adc pop out (bad) (bad) lock xchg and daa push sbb imul cmp and pop inc mov push xchg scas aaa aam fs push xor push inc pop mov lret les pop mov jmp frstor adc shll lahf xor pop nop bound sbb movsl sbb mov addb out cmp or jne or xor jnp sbbl and jnp inc sbb (bad) push mov dec popa addb cli push inc std or es push rol pop cmp adc popa cmp xor xor lea adc pop add adc insb jge cmc pop xor inc xor pop wbinvd push rdpmc xchg or imul jns add aam xor push push popf add addl jecxz jo jo aaa icebp pop sarl (bad) mov jge and or shlb add orl or clc or lods loopne rcrb cmp mov pusha mov bound and lret mov and leave mov je mov pop pop mov xchg and or movb xor aam xchg xchg (bad) daa cmp inc repz or neg call mov mov leave mov cwtl rorb push fsubs mov pop pop nop divb (bad) jo or inc push xor and lods dec and pushf mov and dec pop or hlt mov or jmp nop jo add push mov xor lds jmp (bad) jbe jbe (bad) pop jge enter mov add outsl sbb mov sbb lods push inc out pop and dec jnp sbb imul dec add cmp add fs fwait pop mov push cmp xor xor (bad) xor (bad) push out pop nop mov mov out fildll ja jmp push pop adc data16 and mov sbb lahf shr inc add (bad) mov pop inc add cmp setle cmp movsb imul or adc dec pop rorb xor imul mov je rcl pop xchg jno dec pop loop sub mov sti lods cmp int (bad) mov nop negl mov xchg stos mov push adc adc (bad) movsl in dec adc pop aad gs shlb sahf dec cmp scas test aaa pop cmp inc test imul out sub inc adc (bad) (bad) fistpll sub rcrb mov shr aaa jp xchg and sbb leave lcall or pop pop std or xchg in push orl inc lock add mov enter popf movb push jle add bound dec out add mov push jne add bound nop mov add aaa jl push lods dec jl xchg sub lods daa mov xchg pop or add (bad) mov pusha or pop add pop add bound decb push ja fiaddl push push sbb (bad) mov flds daa pop jns xor arpl insb add jle sub lods or arpl in jmp xor add jmp sbb mov jmp push cmp call xor mov push adc test mov in cmp paddusw sbb in lods add fs movsb cmp jns cs ss cli add xchg push popf out sahf sub push bound or jo sub inc xchg insb adc (bad) mov inc cmp sbb add pop orl jb hlt pop adc jp lahf (bad) and xchg and xchg lret sub xor jnp sbb cmp jne dec ret hlt cltd shr (bad) xor clc sahf adc jle xor loop mov add and adc or lock daa xchg dec or dec push cmp dec bound add and popa inc jge adc sbb sub dec je int3 sarl iret ret ljmp add inc setno mov mov jg and jle (bad) int3 insb pop pop cmpsl jne repnz mov test pop daa xchg js dec cmp push and (bad) fcomps inc fcomps sbb mov jne push testl test cmpps mov (bad) addr16 lock sub mov (bad) mov add cmp movsl pmulhw sub pop xchg jl,pn xchg out xchg mov inc movsl pop aas adcl ficompl adc add sbb push adc inc cltd mov lret (bad) cmovbe testl lock iret stos inc aam fbstp jbe gs pusha fxrstor dec mov push jnp dec shll ljmp pop (bad) pusha push out lods call pop incw std inc in push jne push (bad) push or or xor aad xchg in test sbb inc bound jns fdivs and pop cmc pop imul xor into pop inc scas lret dec sub fistp (bad) ss mov cmpsl shrl xor (bad) add pop hlt test inc dec js sub aaa pop sbb mov pop nop lods test jecxz imul stos test cltd aas adc inc jle sub mov out ljmp inc inc cmp (bad) mov add pop insl jbe mov adc fcmove lock sub mov push lret out ficom inc pop xor and jl xor (bad) ret push dec mov rolb jne push dec movsl rcrb add dec cld lret clc int out add (bad) lcall imul inc sub xchg jmp les mov pop orl test inc popl adc add aam add and push sub add arpl std insb and jne push das (bad) leave aaa adc sbb (bad) sbb adc push or aas sbb or dec ss jnp mov popa sti mov aas pop mov adc jmp lds dec aas nopl sub xchg fidivrl hlt sub sub mov rclb scas and xor adc cli adc idivl adc sub fildl jnp jns imul jno sti je add sbb jg or mov sarl xor xor xchg into mov sbb add sti push push add or adc ja jb mov pop movsb mov xor mov xor daa sub xchg push pop and fcomp pop cmpsb cmp fucomp pop mov and pop jp ret enter es outsl fbstp cmp js orl and nop cmpsl cmp ret or fcmovb push sub mov leave push rolb dec or jnp inc jne mov add push lock pusha orb subb je orl inc das imul clc in lods call movsb stos imul cmp or lcall or xor and adc nop je add or mov aad push adc test inc inc mov push xor sbb jae push push dec mov and test fmul xchg call and (bad) sti cwtl xchg nop aam call mov push sbb add and jmp iret sbb test jnp xor lea dec test push out insl (bad) loope or pop jae pushf mov fs jno inc cmp es xchg add ds mov out fnstenv inc push adc (bad) (bad) mov push mov rol outsl cwtl imul orl (bad) daa fsub pushf mov jnp push sbb and sub nopl mov add or xchg adc movsb test sbb outsb and add mov rclb and adc and inc loope popf in fwait inc fsubl push fistpl push and pop and push les pusha xchg sbb pop mov (bad) rcrb scas and and roll add gs lcall dec xchg cli sbb dec jl or inc and cmp fadd js sub jnp jmp jb lea mov mov dec and cmp aaa loop out pop sub cmp push pusha insl mov xor mov popa jne loopne or dec xchg and or and pop icebp or cmp (bad) bnd mov lea jge lock int3 add das movl rorb pop fistp lock mov call fs jnp and (bad) sub xlat imul fsubs add movsl cwtl push mov push push and rorl int3 jmp (bad) std fwait xchg dec sub mov loopne (bad) jne pop repnz xchg xchg ss sbb shrb fdiv cli rcrb pop mov lds jecxz addr16 sbb adc or sub test into test mov inc cmpsl rorb subl push push int mov enter ja nop xchg icebp test push mov das outsl je push xchg mov rcrl sbb pop js mov loop ljmp sbb repnz xor inc loopne repnz xchg pop dec mov or jne int3 ret insb pop adc nop pop cmc inc or xor push or push or add dec lahf mov lds je mov mov pusha adc addr16 dec mov mov fwait push sub dec rolb or sbb dec push mov movsl xor mov dec mov mov jmp je sub lock or (bad) nop imul sbb js mov je aad std sbb push arpl inc mov push jl loop ret mov jl nop pusha test jno mov pop push lods in mov data16 inc daa add inc popa icebp fiadd mov sub ja je adc rorb arpl pop xchg push loope or sti es and xchg add es dec dec clc aaa push ret nop add into xchg adc xchg shr lea push pushl add js inc add mov and lcall sub cmp xor pop popa lahf ja test dec es inc mov leave sbb dec cs push cltd lock (bad) aaa mov repz dec mov cmpl pop pop lea jne push shll dec cmpl loop push es xor sub popa daa insl cwtl ljmp jns cwtl pop gs cmp xchg pop xor mov (bad) pop xor clc xchg xchg rcrb out inc or outsl test sbb mov or lds ret push outsl nop scas pop push cmp sbb ret daa push cmp mov shr adc je push sub push pop lret test xchg add (bad) aad imul popl or test jno jg push and imulb xor inc and inc adc push xor (bad) loopne add movsl mov mov test push fisub fwait ljmp inc dec or adc dec sbb cmp and push fiadd mov fwait (bad) (bad) jle and inc ss cmp jne mov test int3 dec int xlat clc xchg mov test fnop lock rcll into jle shr das jb,pn add mov adc xchg imul mov ss into pop inc imul mov imul clc outsb (bad) leave xor jge cmp sub jae pop test pop rcll pop (bad) lea or jne cmpsl stos insb jecxz add (bad) aaa add lcall sbb xor adc push sbb mov inc add pop xchg inc insb jmp xchg insb (bad) jmp xor addl roll jo sub inc mov mov pusha mov pushf aaa hlt add xchg jne popf pop lahf push inc test or call addr16 xor inc push lods sbb inc xor adc mov je loopne xchg insb scas adc inc lcall push xchg sarl sub pop xchg jne out dec xorb stc xchg out jne (bad) cwtl movl adc stos adc loopne ljmp or jo mov subb aad and ret pop (bad) fisttp pandn or add xchg or lea mov add pop mov inc sbb (bad) adc sbb or or or popa lods pop push fiadd xor pop aam sub push jbe fs inc pop pop and lsl mov xchg pushaw orb dec mov jo movsb fcomps insl inc cmpsl in or lret dec shrl jge push sbb fldenv mov mov pop or popa xchg imul or pop xchg adc mov sbbl fadds dec push rcl dec sbb pop aas jno or lret in push xchg test or out cvtps2pd stos add in mov xorb cpuid xchg mov (bad) jmp dec xchg daa (bad) popa test mov inc dec sarl add sbb pop or loopne push cmpsb push movsb mov cld mov das sbb mov icebp pop cmp add xor jp xor lea scas lock cs rolb ss jo jge jecxz or dec rol mov js icebp stos pop mov rolb sbb mov sbb mov adc sbb push push sbbl jecxz push dec mov sbb inc cld lahf cmp imul test or sbb and cltd push sub dec test add sub pop aaa lds jo inc aas push (bad) sbb dec add dec sahf jb sub cmp outsl sbb jno int iret roll sbb cmp sbb arpl inc aaa dec arpl push stos sbb and test sbb dec (bad) mov movsb dec dec es pop daa pusha (bad) inc add xor cmp push jg xchg in dec push daa push and push jb xor inc out push mov outsl adc ss pushl xor jne scas push insb or sbb add xchg and add jl imul push adc mov gs cmp loope pop ror (bad) mov push or sbb jecxz arpl fs pusha test inc add seto loopne sbb imul rclb jo pushf out stos adc outsb cmp arpl pushf mov adc add inc mov daa dec adc push mov sbb adc push adc in shrl push orl or cmp insl rol inc test add out repz inc mov aaa aas cmp xor jbe enter (bad) jno xor repnz mov mov pushw dec sbb aam add xor sbb sbb dec stos into mov cmp sub xor xchg jnp pop movswl sbb jg sbb jle add ss pop xlat add inc jl (bad) push push xor or repnz loopne daa xchg int3 mov dec cmp xchg scas xor xor out add repnz xchg mov dec ret cmpl cltd add push pop and in outsb adc bound lods mov retw scas je cltd push jbe jp cmp test dec xchg mov push jbe adc jo sti push lahf jnp add cmp mov or adc jne mov xlat rcrl test andl adc andl or dec or add inc sbb inc ja loopne dec dec shrl xor addr16 sahf mov (bad) lret xchg dec int3 enter (bad) cmp (bad) sub or lods into mov and mov cmp lcall out in pop shlb jne sbb ds mov adc sub push and lods mov ds ret cmp lea pop addl sbb sbb repz push hlt jmp (bad) adc cmp icebp loopne shlb xor js xchg lods cmc sbb hlt (bad) xor inc sub sub add cmpsb sbb mov notb iret dec test movsb jle addr16 mov fs jmp push xchg or add test (bad) push mov sub scas nop nop into in sarb popf lret stos lds mov push fild cmp cmc add (bad) das cmp jl xor mov adc daa adc mov bound mov xchg adc xchg add dec dec loope roll andl pusha or sbb cmpsl cmp mov psrad sub jle test cs dec movsb pop push imul mov cmp or sub outsb icebp sbb arpl xor mov cmpsl adc dec sahf dec and gs adc test js cmp sahf hlt inc sub or mov ftst mov ja cmp sub rcl add xor push pop push adc add cmp nop mov or xchg inc mov push iret bound pop sub sbb sbb sti pop cmc push js sbb enter movsb dec mov or icebp or mov orb dec cmp add pop ret loop dec adc imul mov cs ja out popa call push push inc fstps add dec inc jg push fcomps nop xchg shl and (bad) mov jl in sbb cmc push mov mov adc imul xchg ljmp push test pop or pop test jo pop inc push jmpw add push iret or call lcall xchg or cmp push sub add loopne push setle fwait pusha sub lea iret push adc aam mov aaa nop xor or inc sbbb lods sbb add mov arpl push xor sbbl cwtl add pop icebp push and dec ja add jmp mov dec add adc push push mov push std inc add pop dec dec push sbb mov imul pop out sbb lock and shlb sub or aaa lcall bound or cmp cmp fnstcw pop inc pusha jno fcoml cmp sbb mov or adc jne stos lods cmp push mov loope (bad) pop jae retw loopne fimul pushf mov sub out data16 pop pop shll test and and ret mov jo xor xchg test jle jle jno shr xor pcmpgtw jne pop mov mov hlt jp out arpl xor cli sbb and js std push pop subb fmulp adc lea xorb aas sub cmc or andb js pop mov jmp iret or push cmp (bad) ficompl das es xor sarl and pop enter and arpl pop xchg jmp dec cmp inc movsb rcll test sub add sti inc sbb pop (bad) or fyl2x jg mov xor popf pinsrw push mov movsl mov dec rep jecxz sbb jle pop mov inc and mov push fdivl fldl mov xchg pop aam scas dec arpl loopne pop into xor mov jns dec aad sbb iret pop lods jo movsb loop xor cmp dec cmp sbb or popa xchg jae (bad) push dec pop js push lahf xor push aas dec sub and xchg test sbb hlt jo mov mov pop outsl mull push add leave or adc lock scas pop je xchg xchg clc dec and pop or adc adc test dec in or sbb mov adc lret xor adc inc inc idivl sarl mov mov add add dec push std orl jmp cmpl lahf imul arpl push (bad) dec inc or stos jne lods inc xor lret out push (bad) in pusha je adc pop or test ljmp push push xor addl cmpsb rolb pop inc and pop inc adc adc inc pop rcr sbb sarb mov idivb sbb rclb mov push adcl add add adc mov mov dec xor adc lods dec add jae,pn nop xchg dec stos sbb rcll sbb push ret and gs jb fmul cmpsb sahf pop mov pop adc cmpsb and test xchg lock mov imul daa clc out or xor adc inc sbb push add aaa (bad) es les pop (bad) dec push pushf pop test jmp add jne pop iret adc or leave xchg sbb addb or out mov lock mov sti mov adc lahf (bad) and and sbb fisttpll in es sbb (bad) loopne icebp je inc cmp jne push mov add sbb adc or je pop test imul fldl push les sub icebp jne xchg inc pop int3 or xchg dec xor mov push insl sub repz push pop outsb xor and and jb lds push out jecxz push int xor icebp xor mov inc pinsrw (bad) dec je xorb fsts cmp cld mov mov aas inc rorb xchg mov xlat out push loope add adc dec pop xor xorb out sbb or xor popa and push cmp jno and mov and xlat push mov fwait (bad) and ljmp jle,pt jne cmp out mov dec out add push inc mov (bad) and jp int xor aaa or mov rcl xchg mov mov test jb jbe sarb loopne add (bad) jg add lock dec ret xchg sbb add pop mov push shrb dec test insb pop dec add mov mov mov pop in fnstenv sub and test or jo addps pop sbb test adc add vpshufhw cwtl lret add cmc add add mov imul ret mov or (bad) cmp cmp sahf sbb lcall scas fstl scas cwtl movsl daa xor ja scas and ret push js in daa adc adc push add andl nop mov movsb push pop into pop and and push add jo pop sub shrl mov and (bad) (bad) cmp aad repnz sbb loope fbstp pop or pop cmp andl mov orl or pop cltd imul pusha and ljmp test lea movsb mov jne pop sub lods xor fadds movsb rolb xchg xor packssdw cmp pop (bad) mov or rcr inc jae inc aaa jne push test stos xor or sub mov andl mov dec cmpsl shll adc jo dec sarb mov sub (bad) xor xchg or in pop push es es mov or lahf mov fisubrl sub pop pushf inc subl outsl test and pop sarl mov cmp mov mov pop cmp (bad) mov ds shufps adc push aam loopne into push iret lret leave adc xor rolb jmp stc lods xor dec sbb push xor push fs arpl jo cmp xor cmp lds mov adc pop dec js adc xor mov push jge,pn cmpb push outsl cmp or cmp xchg jbe je outsl fcomi or test pop pop (bad) out xor push sub fnop js cmpl mov mov mov (bad) je push mov adcl mov jae daa (bad) hlt push test and and mov push jmp bound xlat incb in dec cmpl test push sub (bad) push push lcall fstl push mov xchg push xlat (bad) sub dec push add xor or push cmp dec int3 add mov lret sarb inc iret xor sbb out sbb mov inc cld inc jmp jne test (bad) rolb mov or enter jne (bad) mov xor inc and mov jle or pop and xchg pushl jge sub or and adc ja lock sub xchg rorb aaa pop adc push push (bad) xchg add xor adc xchg or add adc cmc mov into inc xor icebp leave xor iret add fcomps mov shrb push ficompl cld mov scas mov or mov leave das push cmc nop mov sub add insb dec and data16 push sbb push enter and adc adc xor call loop lods inc aas es cmp je mov push or ret (bad) nop jecxz mov push clc pop mov adc lods je inc sbb jbe mov xor clc mov adcl lret adcl adc or mov pop or adc add xor xchg clc mov imul sub lds or or mov leave pop out xorl sbb in mov inc adc mov lds test inc jb inc inc stos sub aaa jge inc push rorb sub sub add stos xchg stos in adc xor mov jae pushf mov inc sub push clc clc lock xchg out or in or leave das lret mov addb push test aam cmp les sahf (bad) mov cmp mov or push stc mov popf mov mov add or and pop test (bad) nop or push movb or mov popa and int3 pop or cmp cmp shlb mov ficoml sub add cs or cmp or rcll add (bad) pop (bad) pop out dec mov dec mov inc sub sbb (bad) mov mov push push dec or pop cmp jbe add sub xchg mov push mov mov jmp adc and fldl (bad) jge adc or loopne pop int push adc das cs int test ficom push mov and jle adc jp dec add push mov push rolb dec sub dec fcoml lock pop mov and into adc ja or fucom push and into adc into inc dec push push insb mov repnz (bad) mov xor popa xor loopne pop dec mov jle inc rorl pop cmp and (bad) mov sub fmull or sti mov xchg cmp clc leave movsl (bad) sbb imul sbb sbb and add xor push jb push mov imul adc add je fidivl das mov bound add fcomp jg pop xor pop shr dec dec cmp pop jnp imul dec fs inc inc xchg jge dec and enter dec pop es push test popa xor insl or add pushf dec test into xchg ret call sbb unpckhps mov or mov push (bad) sarl test push mov mov or pusha add cmpsb jno jge push add fmul (bad) movsl jne add std dec sub inc sub push jmp xchg int3 and inc xor inc enter lock ret imul cmpb jnp sbb dec or mov and cli pop adc xchg inc push clc push imul xchg dec movsl imul inc push cltd hlt mov xadd push jecxz loop mov xor sub sub test push and push xchg jbe pop xchg std adc mov call nop push or pop adc sahf adc (bad) jbe jmp dec fidivrl (bad) push sub add int3 sahf push add jge sarb sbb and lock xor add push cmpsb bound cs pop add (bad) fild add in rcrb sub jecxz adc push add xor fistl push mov cmpsl jo mov imul leave aam popf test es pop pop mov pusha lods xor jge nop mov cmpsb sbb or in divl mov and rolb cwtl jno (bad) inc mov push mov xor add clc setae iret add test xchg add es ss movsl adc jnp dec adc xchg orb inc and (bad) or inc xchg dec fs fsubl loop outsl jg roll loope push add pop cmp les adc and fldt cmpsl jl and cmp sub push out mov sbb push lock sub sub inc loopne mov inc add sub mov inc loope sti add add scas mov hlt or xchg inc data16 adc rorb and sub xor sub test cmp add pop adc or xor clc inc hlt xor and adc in gs jmp shll mov adc insb fistpll dec aas or fldpi sbb xchg rcrb or xor pop pusha aam sahf iret add sub and jg sub test or jne mov inc lods xor gs sbb test mov pop adc inc jno cmp inc push hlt into dec mov mov cmp add mov jbe iret dec jmp mov scas push mov mov add scas inc enter push daa xchg xchg xchg popa gs int3 fidivr xlat (bad) jp sub clc add fiadd addb sbb scas jge dec sub leave cmpsb mov mov cmp pop pop push push push cmp mov test cmc rclb je in mov outsb push lods push inc les inc inc ds jns sbb arpl jl fadds push hlt add xor mov dec ret and adc add mov (bad) jmp addr16 pop inc xchg mov roll push and inc mov cwtl rolb pop jbe call inc mov dec pop adc push add cmpl xchg cmpsl xor sub ja add jl divb push or push rcrb xor gs sub add push jo and cmpb dec rol subl mov nop adc adcl jl mov and jb rcrb mov pop mov mov jno cmp lds rol or addb inc std xchg jae adc and mov clc imul imul xchg cltd dec jbe insb dec call insb dec call fdivs sub add addb ret sbb in test add xchg pushf sub cli out or aas xor cmp jge inc outsl enter jno xcrypt-cbc cmpsl nop and (bad) sbb pop or pop das sbb sbb add fldcw jle jo nop sbb pop fisubr movsb cmp out sti insb cmp push inc roll cmpsl (bad) xor lock pop jmp ret jge xchg sub lock add ret xchg sub cli xor iret ret jae adc (bad) sbb pop repnz xchg or push or cmp out jmp pop xchg dec dec mov add push icebp adc incb in fstps jo mov ds add es ja ret sbb push lahf insb add inc mov add movsl xchg ds mov sub mov clc sub mov (bad) pop nop or in in lock inc or fldt call sub push and or hlt ds jo or movswl adc xor (bad) out jecxz test push fcmovb mov cmpsl hlt and adc icebp adc add add sbb xor out js hlt mov aad xlat pop les rorb ret xlat and jae mov je and adc jecxz,pn sahf push jg shrl and cwtl mov sub or xor ret scas xor in fld cmp sti arpl dec dec aam js (bad) adc clc (bad) push aam test sbb pop mov push mov sbb ret xchg xchg lock je (bad) cmp pop xor test ret lret or add cwtl or sbb xchg pusha cmp adc cmpsb xor stos ss in movsb pusha push rcrb dec fbld fsts lahf jae inc cmp mov pusha cltd pop iret aam dec cld cmp fs add lahf das dec and mov fcompl pop mull pop (bad) pop lods (bad) mov fs cmpsl and xchg stos fisttp ja ja and fisub lods add inc and mov (bad) pop cmp mov pop andb data16 rolb daa addl xchg popf enter adc push dec popf insl dec ret bound sbb jl or add add daa dec sub or popf idivb cmp push sbb inc fs js xor dec fstps and in inc sahf and mov mov inc cwtl sub clc out adc pop rolb adc fadds mul std lahf mov repnz mov jmp mov push and inc mov push fdivrs jo dec (bad) sbbl xor adc (bad) jb mov ret push add fstpl jmp xor pop mov (bad) xor outsl leave mov out lret cmp adc mov (bad) insl fdivrs iret xchg cmp (bad) push pop sub test out jmp nop push loope sbb pop dec sbb add imul sbb sbb and leave inc push push push das jno fisttpl fcmovne flds sbb mov insl push lea inc movsb nop negl add outsl leave in dec jne into inc inc add sbb mov jmp mov push add repz xor push adc mov pop xchg sub jmp aam push jo xchg ljmp scas pop lods add popa shlb (bad) mov push js dec add fs xor and inc adc sub (bad) out mov add fadds rcr pop or add sub jmp aad (bad) stos sub iret sub sti insl sub addr16 int sbb in dec and jne pop mov dec cmp aad mov cmpsb and mov popa jge ss dec xchg jno xchg insb mov xor dec cmp hlt out mov add lret dec xchg test inc cmp and mov cmc push je push and dec push cmp xchg push mov (bad) pop adc (bad) lods mov fsubs cmpl je out mov inc arpl push add dec jnp xor dec dec outsl or insb push test pop push adc pop push cmp fisubl jp lock in cmp and cmp cli sbb pop and pop test jne push repz lret sahf sub and in xchg lcall jl imul pcmpeqb loope fs and shr or sbb push rcrb jle movsb sbb mov add lret pop add add mov mov mov push scas or test add adc push sbb (bad) and mov or and jp cmpsb pop or and pop push xor or mov jne pop ret jbe mov and adc cmpsb xor adc movb xor pushw incb int3 mov mov js mov push dec dec xlat data16 fistp ds sbb sbb rolb aas gs mov or call and sbb inc bound cmp popa and rol fstps xchg icebp adc mov push pop ret out dec sbb popa ret and rcr inc sbb fldl scas test or mov jecxz enter in and lock loope,pn xchg mov lret cltd into xchg xchg (bad) xor cmp xor pop nop pop rolb cmp cmp push emms mov mov mov xchg mov xor sbb push adc loopne loope sub rolb add add addl incl push dec insb outsl pop clc mov jg dec lret clc or ljmp nop nop and sub fdivr rolb in std pop clc add call pop (bad) enter or inc push jmp lahf lods or in (bad) mov clc fs (bad) xchg xlat test lea add push aam mov xchg mov pop loope xchg fdivrs pop push add ret ja push stos daa icebp and lock mov test inc ja daa fistl and mov inc scas xchg insl cmp xor mov bound sbb sti cmc in scas cwtl cmp mov xor nop aad es mov push out ret inc adc andl stos xor xor pop sub pop adcb imul sub sub and mov js push cmp xorb inc mov push sbb je pop jmp mov xor pusha push push ret sub jne mov vmulsd fdivrs test mov sub sub lods and fcmovu in movsb mov jnp ret mov dec sub push mov add xorb (bad) mov movsb sti jecxz dec pop mov jmp push add rcll inc or in or jmp into push insb out pop add cmp or xchg xor jle inc sarb notl pop lret aad imul xchg test or into mov dec inc rorb insb mov jl (bad) push push loope daa or inc dec jne outsb mull add aas xor mov or or cmp push lea rolb icebp jb fsubr dec jmp xor sbb adc subb dec inc pop stc mov adc push mov and stc ja xor adc inc loop or sbb sbb pop or or cmp das js push adc andl jl jmp mov sbb pop mov ret xor call adc pop add push push pop shlb mov push negl rorb sbb pop add cmp adc sub and (bad) xchg add cmp mov pop and sbb (bad) cmp xchg inc or adc clc (bad) in sarb jl and sub xor adcl jnp cmp fstps add fadds xor or rcrl aaa xchg cmp xor out xchg sbb jg iret or out add cmp xor push cmp notb add xchg (bad) aaa mov add sub aas adc ja cmp add add lods add xchg jg (bad) fwait or mov jp jg pop (bad) mov cmp decb loop add mov sub pusha push sti jmp cmc icebp dec dec and sbb jnp or sbb xor dec sbb dec cmpsb iret orb sbb clc daa (bad) scas mov sub dec jecxz movsb jns lret loopne add add add add jg cld add addb clc (bad) fs cltd mov cwtl xorl adc lock xchg ret jnp sbb lods pop sbb insl rclb and rcrl dec jno xchg sahf faddl sbb push and (bad) xor jne add push ret cmpsl roll add xchg jle cs mov scas popf dec cmc hlt orb adc xchg orl enter sbb out in inc cmp icebp inc mov pop and loopne push rcl xor popa push daa fcmove daa leave pop lret (bad) fildl and pop mov and shr lret or cmp lock adc push adc pop adc jp cmp push add lea pop jae insb mov mov pop insl ljmp aam (bad) sarb loope cmpsb add subl sbb sbb mov data16 jbe jmp sub add push xor add push push sbb pop sbb negl and push jecxz in movsl imul clc mov movsb bound sbb fcoml test js (bad) loopne inc clc xor add iret add lods inc sub adc shrb cmp jo or or sbb adc and dec sbb xor das aam mov pop adcb fisttpl dec and sub das fnop or mov out xchg ficoml rorb pop sbb (bad) mov push sub sbb roll inc jo push decb xor jmp push inc sub inc xorl cld pop add sbb leave insl sarb add xchg mov or inc loope mov push xchg cld lock xchg xchg and nop mov out sbb adc ja sub mov inc add popa sti or xor inc imul or in add sub adc inc and mov xor lods inc pop in push add pop lock js test add cmpsb lock pop mov or xchg mov les cmc sbb pusha jb adc cmp add sbbl mov adc push insb jmp mov or xchg bound fsubrs push xchg pop nop push add jle inc or sbb mov imulb inc push push or jo dec mov fwait pusha add add add fadds sub add pop cmc xchg add dec dec dec mov or jg jno in clc sar jns adc rol pusha inc pop or xor mov sub push jne add hlt add or iret popf lea out pop push push pop sub outsl mov shll jp icebp push mov or pop push dec iret adc icebp or js in sbb push or sbb mov rol mov fs rolb xchg pop xor or inc movsl push xchg and xchg shlb sub and hlt cmp inc adc rolb cmp (bad) xchg mov pop loopne,pn and arpl xor hlt lock pusha movsb rorl or sbb notb bound mov sbb push (bad) es xor fdivrl sub clc mov call mov sarb mov sbb mov mov (bad) adc push mov fiadd adc das and sbb lret adc and div mov mov hlt mov adc dec (bad) ljmp (bad) dec addr16 cmpl enter xchg push mov sbb adc or push into jecxz mov sbb nop or adc pop sbb fwait jmp pop or (bad) jno (bad) fstpl or xchg shrl (bad) ljmp shrb inc push adc test sbb adc movsb fdiv dec lods adc adc lahf add xchg jle add mov mull adc mov adc push movsb push cs ja or sbb xchg pop mov dec dec mov sbb std jne push jl xor xor mov push inc cmp mov adc xchg cmp pop xor fldt push test add inc dec lods pop lret lahf mov add push leave adc dec inc fstps (bad) scas adc cld in jnp data16 cmp mov inc stos jle icebp add (bad) mov cmp or in out jno and aaa negl mov and (bad) lock pop addr16 cld adc or push pop inc mov repz test or push xchg ficomp push rcrl xchg push ret nop in sbb test sbb adc nop out mov inc rclb lods nop jb sub sub add popf sub pusha mov cmp dec sub push jmp hlt in out or inc push mov xor and repnz sti xor lock inc inc aaa mov sub adc sahf inc fisubl pop cmp (bad) push dec dec jbe adc dec pop jne mov mov and (bad) movsl dec jae cmp jne pop cmpsl sahf jo loope sbb cmovl call loope or add jg sub add lock push lret imul mov sub mov mov loope jb push pop movsb adcb adc cmp das outsl popf mov icebp lahf mov loope push dec mov jno mov push push (bad) and lock mov add push ljmp inc out cmp inc pop sbbb push mov jp ret pusha cmp mov andl arpl and and pop push pusha lods dec cmp cmp es minps push ret ret jne mov test mov mov add cmc (bad) cmp pusha and data16 inc cld popl add (bad) pop jne addr16 adc fabs mov repz pop jnp enter adc xor insb mov js inc inc sub lret xor fcoms xchg enter fs arpl push lods add daa imul shl pop popa xor in mov sbb in arpl adc (bad) rol js and rcll clc ficom test push gs cmpsl iret clc add or iret add and fistpl lea pop dec stos add clc push std mov inc dec xor enter push pusha adc inc sbb rolb push xor xchg outsb and jle cmpsl imul lock idivl ss es push push call jg mov scas sahf mov push mov lock mov xchg sbb push sub sbb cld call pop cmpsl cmp insl (bad) xchg unpckhps mov pop cmp dec xor ret and push (bad) gs in pusha pop adc pop or jmp insb out insb jg mov cltd jbe add jno mov ds push pop insb inc cmp sub loop mov sub cmp (bad) popf jbe mov pop sub cmp cltd fildl nop insl pop jmp sbb sarb sub inc pop das fadds push js fcmovnbe and adc insl push hlt test add pop jo xchg call push pop sub inc aaa xlat addr16 xchg push pop addl xlat popa add adc push push test popa mov mov test das mov or or pop ss push test iret mov je cmp jl or dec push pop enter mov sub jg jmp push mov mov xor (bad) mov add jno xor dec mov dec movsb mov int jg sub mov or adc and xchg dec dec sbb inc adc mov sub movsb push ss test adc test rolb cmp aaa out pop and cwtl jns pop add xor pop aas xor inc ret add xor xchg in push dec rclb pop push test adc cmp jns and fidivrl adc adc mov mov fsts hlt xchg insl cmp fcomps popf outsl mov jne int3 xchg outsl add je test jecxz sub mov sub movsl adc movsl sbb sub in cs and aaa mov sbb push pop adc sti es dec dec call (bad) cmpsl and mov or xor out inc pop push and xchg addl js cmpsl sbb in adc inc test lret mov jno out dec pop loop push and out inc (bad) inc add rclb sub and aas sbb add divl dec cld sub movswl movsb cs insl adc scas push das and inc xor push xor loope sub lret inc dec sbb cld das outsb or add out cmp daa push xchg iret shld push mov jg push (bad) loopne loopne inc loopne ljmp (bad) pop data16 in (bad) push inc dec xchg mov jmp add dec inc js lea sbbb inc mov pop cld dec fstpt das call (bad) mov pop dec ret add mov sbb inc add or add sub push push mov sbb dec add or js mov inc or js pushl test pop pop nop test mov lret jle inc ss or or clc dec fs aas fsubrs cmp inc mov vpshld adc in jl push test (bad) cmpsb hlt adc push and pop lods push icebp cmpsb in jbe push (bad) push std and stos pop add imul outsl clc in mov mov in sbb pop or and push popa jo jnp fldlg2 out add cmp mov jae nop cs sub mov xchg inc jmp xchg or xchg xor (bad) je pop in imul cld adc push inc insb lcall es push mov push adcl inc test test add into xor push push or sub lcall mov sub nop lret xor sub push dec jl test je mov xchg or movsb rclb xchg das loope sbb sub cld fiaddl dec cmp xchg mov dec push add rclb dec pop imul dec dec push inc gs fldenv pop push gs push mov sbb daa inc out andl nop push sub pop cmpsl test push insl jo dec in nop push jae inc sub in in inc out (bad) ss fildl dec jae pop fidivl jno js gs cmc sbb push mov add mov pop aam movsl add cmp add mov push mov loopne int fsubrs repnz cmp mov jl mov repnz sub push mov push and or ret fidiv adc sub jbe imul test dec mov push adc sbb dec push pop cmp dec js lret pop jl sub pop sub mov cmp mov or mov (bad) dec rcrb sbb pop push fdivl movb loop movsl scas shr or sbb cld ds cmpsb movsl pop mov int3 adc or and repnz xchg xor (bad) and inc loopne or lock nop fldcw or mov popa outsb adc ret lret mov mov fstl int3 (bad) flds and sbbb cmc mov sub popa xlat mov dec test sub nop mov shlb subl push shr or ret jno mov add and push push das or dec xchg push add (bad) jp pop inc data16 aaa ja mov pop mov jg push icebp out dec inc and mov test or mov sbb test or mov jne mov iret subl nop popf dec push pushf setae mov or inc in mov or or sbb sbb sarl or pop (bad) and and push pusha mov (bad) nop or inc mov inc popl push jbe mov pop (bad) (bad) out pop mov jmp push pushf scas lods push adc xor in shrl pop xor push pop xor cwtl bound and in mov outsb adc sar movsb js nop into cwtl aas or push cli cmp cli es je mov dec push test adc xchg loopne inc leave dec mov mull rcr xchg pushf lds mov push jne jo fcomps jmp pop icebp or push push add je mov push out aam aaa test clc push inc push lds inc xor pop xchg add fdivp (bad) and insb add cmpsl stc push jo nop mov sub leave in pop sub mov adc (bad) push xor movzwl dec lock push movzwl bound sbb lods pop incl and xchg popa or imul sbb xor ret xor dec sbb popf push xor mov fbstp sub sub or push ds imul cmp add test dec jmp mov (bad) js arpl add or or inc rcll add fs adc adc adc cmp dec or (bad) hlt test or inc and or bound sub in dec add pop repz mov adc ss or xchg test xor sub sbb outsb pop xor out mov mov mov pusha sbb lahf pop sub add sbb enter adc stos cmpsl sbb mov pop push sbb sub addr16 js fisub mov add iret repz fiadd sbb and sub into repz xor call inc push mov inc dec dec pop in mov pop pop add je or and movsl in xor add xchg xchg nop xor inc dec push ja loop xor dec arpl (bad) adc add movsb scas push add cmpsl pop xchg icebp sbb add mov add push pop (bad) ss inc xor (bad) or movsb lahf out mov pushf fmuls push lea add add repz xchg mov push jecxz int sbb leave inc jo (bad) sbb xchg (bad) (bad) movsb jnp add xchg xor mov ja xor pop add inc cli adc mov dec enter subl inc sbb fs pop movb roll ja sbb and popa ret xor push pop xor push add (bad) je inc inc dec xchg or pop outsl lret xor jo pop (bad) push sbb gs xchg loopne sbb and sbb cmpsl and xor adc inc add push pop lret aad je jecxz cwtl xlat xor icebp mov cmp rorl sti push adc cmpsl cmp push pop xchg ret push daa pop mov adc sub sub inc fs imull cmp mov adc roll pop cs arpl insb fnsave mov xchg sbbb inc or lea es pop xor fadd xor dec xchg mov inc loope mov call rol push jo mov adc mov xor xchg arpl mov addr16 and push or in pop je clc push or data16 addr16 xchg insb mov push sbb sbb iret or cmp add mov adc inc push ret rorb add jmp pusha cmpsl sub and and cltd mov test sbb aas push gs movsb cmp test rcll ret sub cmp cltd xchg in cmp inc push and mov adc jl add xchg int push fiadd sbb sbb (bad) fdivrl adc inc sub push and test dec popa cs inc or (bad) aas push andb daa inc or xchg popf shlb dec xlat stc xor add sbb mov add xchg push dec sbb sbb and (bad) or adc mov and dec test addl (bad) xchg imul je adc test adc movsb mov data16 and lret pop jae add add adc cmpsb imul cmp inc and cmp inc push ret push xchg and (bad) ds cmp push adc and jg outsb push sub lea sbb or shrb loopne or js jbe jp mov in push das dec sbb cmp add nop fcmovne fcoml push loopne subl call xor adc repz cwtl dec jne test (bad) lret out dec jnp bound lods mov movsl inc pop cld dec adc jnp cwtl mov je push sub add hlt add cmc cs rol das adc cmp (bad) mov adc push loop add or mov push or add mov icebp adc add mov adc ljmp and xor insb sbb movsl arpl out adc aad pusha add into js int jne add (bad) cmp je sub pop pop push sub scas je aas jl mov push pusha outsl or inc in add jns pushf inc loop mov ror xor inc mov test mov jg or sub pop pop lock cmp mov pop ds es mov jae rorl test add popf push cmp jecxz test mov daa pop sub adc add popa cmp mov sbb clc test orl sub cmp dec jmp jge mov xchg jg sbb or mov cs or add pop or jecxz fwait mov (bad) pop clc and jne cmp mov adc push push js lock sbb xor lods mov mov loopne or pop shlb mov (bad) cmpsl leave push or sbb es push sbb gs decl push and out pop xor cmp add mov stc push fdivs rorb aaa loopne psrld push mov cs jle mov stos mov push pop xchg aaa push and fdivr scas dec mov and outsb mov add mov cld sub outsl test (bad) mull pop lock mov lcall ss shlb les fimul imul pop xor mov es scas xchg push into or sub cli pop and jmp les push out adc test adc and mov inc xor and insl adc adc lahf das xchg sub mov or vmread mov and insb cmp dec sbb addb add xchg jne sbb fisubrl sbb or jl cmp push push push xor pop cld mov xchg inc cld movl and inc add sbb adc or mov or xor mov adc test cmpsl adc push (bad) mov add xor jb imul xchg or add adc xchg imul aaa and jl or or jns das xor icebp sub mov aas or lea xor sbb out sbb jp sbb loop sbb adc xor outsl xor adc les jae adc popa lods mov ret nop movsb pop mov push loopne aam jne fs icebp mov mov or or pop sahf add orb jmp dec xchg in pop js add (bad) jle das sti es cmp cmc xor dec enter dec mov xchg aaa mov mov jecxz cmp mov mov ss ljmp xchg daa call sbb imul inc hlt mov mov add xchg xor push fisubrl pusha dec sbb into add xchg cmp xor cmp out iret adc xor mov xor push or cmp xchg ja adc rcrb stc in adc push pinsrw inc push ret idivl jmp out lahf lock sub sbb sbb jmp inc mov out mov jg xchg lods dec xchg rolb int mulb addr16 les dec add push leave test jo jae int cmp sbb lods rcl cs mov cli mov inc (bad) xchg push int adc (bad) adc jmp cmp adc xor push pop dec sbb pusha aaa push and insl add inc xlat and roll outsl inc mov mov mov mov cmp addl sbb push lea add jb inc pop loop subl int dec mov xchg sub (bad) dec xor outsl popa mov push add dec cwtl inc jo add subl divb mov mov or pusha data16 dec push mov daa (bad) cmp hlt xchg dec adc push in add xlat daa les mov or and leave divl and push pop imul ja or lock xor pop adc or xchg adc out fbstp int3 idivl push jmp stos fwait jb fidiv pop call xor call ja mov fist sub cmp clc mov and leave enter fistpl daa mov fcoms js pop leave (bad) sti sbb aas aas jne jo or lahf jmp and add dec mov in mov or mov cmc push nop or inc inc ret cmp or jmp sub sbb pop popf hlt and push insl loop call sbb fldl gs insb and sub addl add outsl arpl inc and cmp jb adc inc xor xor inc jl pop sub jb nop sub adc cmp mov (bad) ja popa (bad) icebp jl push cmp fmul or mov sbb xchg mov inc xchg movsw cmp pop push popa inc scas jmp adc (bad) cs arpl es insl pusha sbb dec add mov ljmp dec inc dec dec or stos es rorl shlb or pop add xchg push aam push mov insl (bad) xchg sbb mov fdivs fsubs xlat cmp pusha sub cmp leave push aam inc mov (bad) dec hlt js scas addr16 dec clc es mov xor fstpt pop or xchg fiadd mov mov jl jecxz ljmp mov lahf shrb jno pop inc in sar repz pop inc ret sbb in lcall adc sub fbld or or inc iret jne data16 fisttpl mov push mov xor or loopne movsl inc daa xchg sbb shrb aam and insl add lock or and jno test in test xchg outsl imul and xchg shl xor cmp imul xor pusha or clc sub mov and jb push ja sub or pop stc mov pop sub add movsl add or mov adc mov inc pop push jno addl sub arpl mov sbb in sub in arpl popf push push adc push dec inc das jmp in xor xchg push xor cmp fisttp xor cmpsb aam daa xor xchg pop aam sbb in push je fsubr in mov ja clc (bad) mov sbb inc outsl or or xchg xor xchg add das test jns inc ds inc (bad) xor in xchg mov push or sub pop sub out test adc dec dec repnz push inc add dec cmp adc test mov or xchg inc and movsb mov movsb ret jbe adc inc xor adcb test ret ja jecxz cmp imul sbb cmp lea movl leave add cwtl outsl mov mov ret or sbb and repz xchg push mov sbb adc outsl cmp jne fidivl and dec push je mov adc dec mov popa loopne sub aas mov and push movsb aaa adc test mov push ffree lock dec movsb cmc fcoml aaa dec xchg adc sar push or call cmp push imul ret xchg adc push sub shrb or nop lcall push ja xor inc in ret xchg ret push in xchg fild add dec pop cmpb movb roll cltd add add xor xchg imul rorb cmp cmp push add push inc sub aas or rorb add sub jle int3 outsb mov cltd sub dec insb ljmp jge sub push popa jb mov adc add jle adc push dec shlb js enter pop or bound insb pop cmovle loopne into adc les scas adc popa mov pop inc stos adc mov jne adc pop add int aaa mov xchg pop rcl xchg stos fdecstp sbb js arpl push add daa mov insb icebp pop fs dec cmp push outsb cmp int lcall push xor push jl dec mov fiadd adc mov mov cld and in or xchg lea sub out push adc mov popf in add mov mov dec fidiv add add dec inc ud2 test sub mov dec inc les test loopne mov push adc inc dec dec jo repz loopne adc dec push movsb (bad) in ds add dec and lock out inc push fs test and pop dec cmp js imul in stos (bad) lods and insb push jbe mov inc pop les pop jp lock cmp insb push rcrb sbb inc and xchg jae je adc lods inc xchg ret cltd aam lahf pop (bad) mov mov jb stos xchg ja xchg jno mov jb add lock outsl dec imul mov dec sbb leave fildl jns pushf imul sub jecxz imul cmp and mov push inc inc imul test dec cmp addl test fs and sahf jne nop jl dec push cmp scas pushf hlt outsl inc fbstp cmovge jo add add inc xchg clc nop or cwtl mov inc xor les cmp inc mov bound sub icebp mov pop in xlat cmp sbb or js outsl or xor sbb mov xor sbb push or mov mov push dec pop pop lea push arpl es psubusb cld (bad) hlt js or and (bad) shll cmp mov jp (bad) cltd cmp (bad) xor lock cwtl sbb les sahf xlat in pop lea inc in out sbb mov loopne mov and jno xchg or gs mov and sti test xor pop lods rclb and dec dec xchg jno mov mov scas mov daa test fcomps mov into pop pop and int3 mov lea out dec or inc clc push in xchg xlat roll cmp pop sub add in mov scas push pop addl jl add or add xor cmpsb xor inc in inc addl inc fistpll mov inc mov addl call roll mov pop pop and (bad) xlat inc aam or mov sarb pop and aad rolb xor icebp iret mov and inc adc enter mov push pop cmp imul scas fdivrs push sarb xchg cmpsl inc mov test bound lea (bad) or cmp test nop clc inc out andps mov shl jmp hlt cmp jo xor push popf jo fistp jb fnstcw inc jle push imul or or or xchg scas mov js out clc (bad) movsl fdivs add push fisttpl or rcl test lret out rcrl and push sbb ja ror nop loopne push push add repnz inc cwtl pop push mov cltd fild fcomps nop lcall push nop pop xchg inc xorl nop or and and add pop inc out clts or sbb pop call in in hlt cltd xor insl sahf xchg push imul jecxz xchg and test mov cmp pusha mov push add jo jo in adc setae jnp test inc mov test push movsb jno xchg nop push inc (bad) outsl nop mov ret nop mov cmc jge inc and shlb mov decl xor xor inc mov dec dec dec dec dec dec loopne and xor push push push pop pop pop push mov das subl adcl add and mov aam fcoms lock mov dec xor jo pop or or (bad) push rol rorb mov pop (bad) fbstp jbe lret jae inc cli and add add xchg mov add addl push daa lret sbb xorl mov jg or pop add and and incb daa add sbb mov mov dec mov mov sbb loop jge add mov or or rorl or sub fsubr inc jne mov cmp push inc jge imul shrl cmp push (bad) xor or lcall stos pop cli push sbb loopne push popa cs fs nop cmp das cmc jnp cmpsb (bad) das nop and andl xor mov loope add sbb stc xor jmp inc inc inc dec rorb xchg sub sbb dec mov sbb das or dec push pushw leave (bad) pusha mov dec inc and or sbb inc or jb les divb xchg sub sahf sub nop hlt addr16 fcmovnb mov and lea mov lahf cmc fstps push bswap or add mov sbb push xor lock and add dec les adc aaa fsubl fs lea pop add mov ret out fdivrs mov jmp popa and mov mov jmp daa sub mov add jbe pop insl lcall or jmp inc (bad) sti push add movb add pop cli pop pop mov mov dec cmp mov and add mov (bad) xchg mov xchg (bad) xor test ja iret push mov fidivrl inc pushl sbb (bad) clc adc xor pusha je mov add or cmp jg mov ret (bad) ret mov xor fcmovnbe js mov imul mov popa or and push int ljmp loope js lcall jle int3 push push mov es insl pop add sub fsubr outsl cmpsl lods sbb or jo lahf cmpsl lods lock ss pop xor jmp imul xor je (bad) xor pop pop (bad) jne nop pushl aaa in xlat adc imul jg mov adc lea pop adc out cmpsb je dec xor ja xchg (bad) test rcrl mov pop dec and lea push add mov sbb inc imul stos cmpsb xlat je push sbb cmp pop call xchg push movsl jge add imul cmpb daa (bad) xchg push aas cmp fnop cmpsb xchg loope addb mov in inc lods mov test pusha inc xchg add sub add and sub loope cmp pop add add and pop mov (bad) jo aas les outsb dec outsl sbb jo (bad) fmuls rclb pop sub cmp lock sbb inc aas int3 aas inc inc test rolb mov mov icebp pop sti adc xor add (bad) pop fwait dec cmp add aas fsubs je add mov stos mov jnp sub add adc adc dec dec rcrl or pop gs jmp inc js repz xchg not mov out jle (bad) adc cli add push pop xchg xchg inc sub js push data16 add mov adc inc dec inc push dec sbb jne or scas nop mov rolb cli and leave xlat cmpl add sub das xor imul jmp ds push jae add push add pushf fs sbb sub outsl add and xchg mov sub adc dec es inc inc add jg ljmp lret aas lret sub push inc rclb mov and or push adc fwait lods lea and dec xor push mov bound inc sbb push cmp ljmp or imul imull pop inc shr ret cld lods pop fsubrp lea xor cltd cmp movsl cltd out inc into pop xlat or jecxz mov jecxz ss xchg movsl or (bad) push adc push inc pop jge test sti adc fdivrl int3 sub lock adc push jno fistpl mov into or push in jmp inc push adcl add out add insb dec push inc rcl adc pop hlt dec dec mov sbb cld les sbb mov mov pop scas fistpl xlat icebp add sti dec push fdivl insl pop adc xchg add adc fcoml aam jmp inc in push outsb mov cmp mov cmpsl jp inc sbb test or inc (bad) or sbbl lods testb inc bound aad and adc aam icebp in mov mov sbb mov mov mov inc movswl jecxz or pop adcb pop dec inc test push je jp outsl mov inc in and add lock xchg insb out pop cmpsl or sahf cmp sub es popa decb inc push test cmp sub inc loope or push adc ret jo and xor iret pop ds lea shll xor inc pop push (bad) lds lds aam and fstps shlb arpl or cmp sbb in push clc dec mov mov aam xor (bad) push jbe sbb loopne dec test xchg xor mov and dec out je int inc or lods push ret gs or or pushw lock inc aaa cmpsl repz xor push sbb mov mov inc arpl test ljmp nop xchg nop mov (bad) in mov nop dec cmp xchg adc call loope,pn mov mov push cmp aam mov or add je fwait add adc pop push mov sti sub xchg sbb or inc call pusha push push (bad) sbb loope (bad) sarb adc dec mov (bad) aas add js pop testw rorb adc mov inc fiaddl add out sub pop mov sub push xchg inc push out mov add pop or or aad or sub mov or mov pop adc cwtl jecxz test out push rorl stos mov and dec and inc inc rorl icebp loopne stos test fadds push mov xchg ret nop loope xor pop push jge mov fisttp imulb je inc rcr mov cmp sbb enter sbb mov rcrl mov xlat dec cwtl sbb or adc stc jns pop loopne stos inc cmpl mov iret dec cmp pop dec inc sub pop lahf dec add iret dec pop das jl popa ljmp test push xor sub xchg std xchg cmp adc mov nop movl ja pusha mov jle sbb (bad) in int3 (bad) shlb and jo ss movhps xor movsl (bad) mov inc ret sub ret hlt mov mov add sub sti adc dec imul inc xor sub sbb hlt xor cmpsb xchg sub push push dec sbb mov out nop ret sub or xchg xorb lods jns lahf add inc cmp rclb invd ret dec je in mov lock sbb dec mov sbb lock inc cmp dec add dec ret xor and pop push push inc in divl adc cmp dec icebp push fsubrs dec hlt js shrb add dec (bad) mov push pop pop mov cwtl mov jge adc pop mov scas test imul adc or or (bad) inc pusha or add inc push enter sub pop lock inc inc enter aad cs xchg add pop test out and lea orb sub test push lock inc mov inc pop sbb shrb sbb or jnp pop mov pop mov test hlt pop into hlt and subl rep or insl je repz xchg inc jne mov inc insl sbb imull leave lock stos fdiv rorl cld add push ds test movl fildll push and adcl sbb movsb in ret fadds movsl or dec (bad) ja orb leave and mov jp xor rep ja ss jge aaa fistp dec push push push lock loopne mov push sbb add daa call mov in das ja or pop mov push jg jl iret push inc xor or imul test loope cmp orl sbb loopne arpl psrlq fisttpl xor cmp addl iret cmp xchg pushf or sub add sub aas loopne jecxz xchg mov test add push mov add repz sub push nop sbb add or cmp sbb pusha data16 dec or call and ret out rclb nop fwait xor push in dec xchg mov les leave imul and sbb push push call or cmp sbb stos inc clc push and adc pop jmp orl sub lock nop (bad) jo xor add repnz pop dec lock add add scas (bad) in addr16 lea and xor jbe dec xor js sub push pop inc and dec pop pop nop or (bad) movsb repnz mov add pop popa add push test leave jae and adc pop sarl and loopne ret sahf pop cmp and hlt inc dec loopne or (bad) mov (bad) and rorl or dec icebp test and outsl jecxz rcrb rolb adc push fwait push add mov test add inc fidiv jl jge lcall rolb enter les push int adc lcall sbb aas mov dec jmp sub insl mov inc lret xchg dec pop pop pusha inc push test insl sbbl and adc sbb add adc mov push fs cwtl daa inc jp xor jl dec shrb or push inc dec js mov test xchg push dec ja out xor movl pop and sbb repz sub push dec dec pmulhrw outsl push or shrb xor add add pop mov sbb popf mov outsl imul xor mov mov xchg cmp je call inc dec or dec sub xchg insl sbb add fmuls xchg jmp dec dec es cltd xchg sub xor push fimul pop mov ds repz mov cmp or test xchg and (bad) and cld sub pop mov in xchg add adc cmp or or (bad) int (bad) jge jle push xor cs pop adc incb hlt adc push and push add sub popa stos xchg bound aas lock inc aad inc ds incb add imul cld movl movsb frstor and xor sbb outsl fdiv ret push mov insl sbb mov fs cmp aaa xor testb adc inc or add adc cmp ds scas inc sub mov frstor jb pop jb push pop jg pop jp aas mov pusha (bad) fsts pop cmp ret je or jne xor xor fs jb inc push sub popf shr pop xchg rorb jle dec stos push lea cmp loope xor ret add jecxz dec cmpsb fs mov enter add pop (bad) (bad) cmp jno out cmpsl test popl pusha jg shlb adc push sub push rcrb ret mov mov or xor or pop push adc outsb test mov mov sub ds inc push ds add inc inc or loopne or vpsubb mov scas mov fs iret sub add add or xor sub xchg xor (bad) call adc xor push test push arpl and das xor movsl outsl pop in mov cmp cmp add and lret cs cmp inc fcmovu pop aaa jo mov mov (bad) push ret mov je xor lds push inc dec js jg mov loopne jmp subb push mov inc sub jbe and adc jge lods aas fs or mov and sub sahf ljmp sub inc stos pop or loopne xchg push adc push push sbb push jg pop xchg pusha pop xchg sub imul add pop fisubrl xlat cmpb sahf gs fcoms jecxz mov xchg xchg outsb jmp jne xor sbb mov and and add (bad) xor jmp mov inc inc popf push arpl insb sbb clc and sbb (bad) iret cwtl jp imul pop lret or sub das mov dec cwtl sbb pop xchg adc xlat pusha movsl mov ret push and data16 push in mov (bad) adc js lahf ret push xchg jmp or pop xor mov push adc add and ja or aas jno (bad) inc and dec cltd push sub cwtl dec fldl insl mov sbb mov xchg test out jl jns inc inc inc mov inc nop loope xchg cmpsl addr16 or push xor ret orl je fnop sbb mov lods cmpb out scas out cmpl cmpsb add clc loop ret iret int mov mov loop gs cmp pop popf ja add lret or push fs lret idivb fistpll push cmp cmp popa ret jnp sub sub imul js mov xor insl mov and lock jo and les xor and push push mov mov inc pop lret lods adc xchg movsl aas dec cmp insb jae inc inc xchg movsl add jne popa shlb insl cmp push push data16 sbb je (bad) rcrb movsl mov cltd nop enter hlt xlat or push dec jne xlat mov pop dec pop aaa movb and mov and xor mov adc pop icebp push pop je or inc and mov out push adc (bad) faddl insb repz dec cmpsb add pop movsb jge inc bound cs or data16 push adc (bad) test push push ja fcomps pop jl les xchg inc jl jl sbb ja xor mov add test mov into xchg in mov (bad) mov ret (bad) mov inc aam xchg inc mov xchg loope sub push popf adc adc inc pop inc and lea (bad) mov sbb iret adc add sub int3 xor jno xchg fcoms pushf xor xchg outsb mov sar call cmp pop pop sbb mov jge push jge or daa fisub decb pusha das push mov mov ss adc nop in sbb test cmp add jne cltd xchg std int3 add pop imul xor inc push lock test cmp push out sbb sub shrb mov push push push jl mov ss xchg shlb das inc add jb sarb cmc mov pop adc push xchg dec verr cmpl mov (bad) mov sub (bad) iret int3 add leave dec add call addl out jmp xchg jns sbb mov or outsb movsl aas enter cmp adc push dec add out sbb cltd loopne leave sbb enter push mov dec pusha sub leave and enter (bad) rcrb add inc rclb adc xchg les and push or dec pushf jbe jne dec push pop dec xor outsb je loopne fs sbb aam push mov push sbb outsb dec repz xor rclb pop mov pop lret xlat test adc fs ret lea sbb inc cmp and int3 push jbe (bad) push gs mov jno les (bad) sub jp or rclb dec dec cmp adc enter mov aaa jle rorl xchg fdivl dec and outsb inc or insb cli imul and and in fsubs pop mov inc xor std dec jmp inc fcmovnbe xor inc cwtl pop sub cmp fidivrl jle jo arpl imul xchg pop or (bad) dec pop cmp insl fnop loopne pop cmp or loopne mov cmp sahf dec xor loope loope int inc sbb sbbb je mov jbe subl ret clc and push jge push xor sub add (bad) fwait ss lock (bad) test adc jno and aad mov mov test mov mov or and sbb ds mov aaa call and xor or ds cmp pop cmp mov push inc pop adc dec and mov (bad) dec add xor adc (bad) xchg mov aas inc test mov int3 xchg (bad) test xor outsb mov dec ret xchg cmp pop inc sbbl cmpsb (bad) mov cmpb movb xchg aad daa add pop jne dec mov fadd push push jl cmp aaa dec and dec inc jne mov movsb (bad) jo idivb mov sub int cwtl pop cmpl stos mov into call int3 sahf outsb lods jl adc add xchg fcomp rorb mov int3 xchg lods inc lea sbb cwtl lea ljmp xor popa mov in and popa push and cld fdivrs inc cmp push xor sub pusha pushl mov jae adc imul lods jne mov fsub test inc stc daa call ficom clc (bad) jmp push mov mov xchg mov xchg push push lahf mov daa xchg imul mov sub int3 sub addr16 daa sbb je inc or orl lock mov xor and ret mov sbb sbb (bad) inc and hlt sahf push aam inc jnp mov or mov mov ret add or sub lds data16 gs into add mov scas add add and aad rolb pop test add pusha int3 call outsb sbb js pop add dec ss call pop pop push mov iret call add jp ret pop or js data16 loop inc imul or push out pop sbb lock das inc into aas dec cmp cmp stos das (bad) nop xor adc pop adc test out adc bound cmp dec popa mov call sbb pop shl push (bad) push mov sbb or adc push addr16 add jmp dec outsb pushf xchg inc mov jo test push jnp in jp ret xor add jmp ret dec inc jnp sub push add xchg jbe andl mov or movq fcoml in mov lods add push or mov add (bad) lods setae jecxz dec ljmp clc aaa add clc adc inc (bad) pop int3 cmp jp mov popf add dec lds dec in or sbb mov add xchg inc inc sbb push popa cmovo jo mov push mov loop push cli data16 cli movsl (bad) add cmc add pop xchg mov inc sub push mov mov and and add (bad) push inc sbb fwait je imul mov push icebp jo sarl fs fimull cld mov push dec inc mov sbb inc insb (bad) inc les mov add add icebp sbb pop xor push rorl out dec xchg bound lds cmpsl add or sub jno adc loop push mov mov ja pop push lahf sub (bad) sub pop je sbb inc cmp je xor push shl pop xchg movsb fbstp ret push and fcmovnb mov inc xor inc cmp sbbl xchg cmpl daa mov imul pusha aam inc add enter subb and mov mov lret jnp fadds lahf push test dec fnstenv ret add push sbb dec push sub cmp mov jne pop clc jb pop ja cwtl fs int mov pop jp das (bad) sbb stos adc cmp jp pop cmp loopne or xchg jl rorb push inc lcall add mov rorl adc andl push dec arpl xor pop (bad) or inc mov into stc sbb push xor push ret js xchg inc addr16 negl pop mov pop mov in dec pop dec xchg das cmp jnp add mov cmp mov jmp jnp insb cld ss imul test xchg addr16 and aam rorb push pusha ja rcrl insb daa adc inc and sub lock dec aas pop nop iret enter dec inc dec inc enter dec jno mov cmp push outsl pusha and or and outsb push inc xor je ret sbb mov push or mov xchg jno jmp in sbb xor cmp popa xchg cmp pop dec fs ljmp sub incl push fiadd jmp (bad) out push mov ds fsubr sub push daa xor and dec add sub out xor xor jmp adc hlt pop pop pop cli imul xor jo sub push xlat sti jge mov push mov pop shlb pusha lds and lahf cmpsb mov faddp mov scas or and ja andl imul fcmovbe mov jge inc into add push or sarb les jmp sbb out sahf rorl pop addb (bad) int3 mov adc xor jne pushw xor sbbb add jns jno add lock or das enter js or and stos into or sbb (bad) adc mov in aaa in insb sub mov xor ret mov push rolb cmp cmp leave push clc pushf dec hlt test addr16 les mov mov test int3 mov fdivrl test les jnp sub pop jb lods or pop pop cmp nop outsb in movb je add or inc inc pop mov aaa mov push int mov push pop push or xchg lods xchg and push adc push bound push push aas nop push loope je mov out cs cmpsl sbb fimull cltd xor aas cmp xchg and adc xchg push pop orb xor imul xchg mov jo sbb jne add cmp lret out add dec xorl mov dec pop daa inc test adc js adc dec xor or jmp inc shrb cmp push jo xchg jno and inc inc pop pop xchg test ret syscall je xchg addr16 cld das adc pop rolb cmp sbb push fimul (bad) add lods (bad) rol repz jae sbb fs lods aad and cmpsb cmpsl repnz and or sbb (bad) fstpt hlt jl inc pop add push (bad) fs dec lods mov xorb xchg push xchg push pop push jecxz lods cmpsl add or int enter xchg pop orl scas test dec cli test xchg jg fsubr ficoml sub or (bad) mov daa sub js cmpsl sub jge je xor pop add add insb das sub pop (bad) out xchg lods sbb dec and mov push jbe cmp sbb mov imul outsb imul inc push aam adc test test add test fwait rorb jge clc in adc or xchg loope pop pop and mov dec sbb pusha psrad mov push aas test add shl jno rorb jo rcr (bad) jbe (bad) adc rolb addl or mov mov movsb adc and or mov adc and inc rol aam or lcall xor adc ficom mov sub or xchg test fcoml testb add and enter in xchg lock jl and sbb sti add das cltd fdivrl out xchg cmpsb xor or adc in (bad) push sbb fmull mov cmp xchg sbb cmp roll adc mov inc pop fmull or sbb mov mov pop mov sbb dec (bad) pop lds pop adc and add cli sbb cltd adc in push dec pop andl je push in movsb jmp fmuls roll inc inc push cwtl enter in loope sbb xor push outsb cmp call stos scas push dec mov inc or pop ja add cmp and add dec mov push push lds jecxz int3 cli frstor inc shl mov and (bad) lahf or push push add shlb jmp js (bad) cmp test cmp daa rclb and inc pop ljmp loope cmp inc inc std adc inc popa add mov pop add inc add push div mov addl pop sub insb movl mov mov aaa dec xor mov dec jmp jge add add cmp jns pushf nop sub xchg inc or push mov cmp push pop mov add aaa iret popa and pop ret or mov std mov insl (bad) cli xor inc xor adc sqrtps cmc data16 mov inc dec mov xor sub (bad) out jle sub or in pop imul loope mov (bad) dec movl dec add dec jae mov dec and mov sub test and xchg rorb jg jmp xor imul xchg lea adc xlat sbb (bad) sub or fcmovnb (bad) shlb sbb or pop mov inc movsb jge pop ds je add insb inc push adc aaa pop xor sbb sbb pop (bad) imul add xor jo scas push or or test jg cmp jne inc ss scas insl dec xor nop sbb (bad) xor mov jne rcr add cmpps pop inc adc hlt test xchg mov clc and jl mov das mov xor es jl inc sbb jo pop inc js ret mov scas arpl cltd testb add ret sbb cmc adc sub sarb ffree adc fimull les iret repz in sarb jp cmpsl jne adc mov mov out jns lcall idivl mov imul xor nop iret jnp out mov fld jns or rcrb cmp (bad) mov pop mov jle adc (bad) mov inc or scas (bad) lret mov mov sub cmp (bad) or and xor pusha xchg (bad) jb xor inc test loopne cmp inc (bad) fwait test fisttpl pop lahf and push mov imul jae adc loope sbb cwtl jle or dec outsb arpl dec dec rcrb shr xor fnsave mov mov addr16 ss adc pop cmp (bad) jae je add cmp inc iret lds fs dec dec push dec inc inc iret insb int3 (bad) pop adc mov xor add mov mov and add xchg insb dec roll or sub jge dec dec ficom loopne dec nop loopne or daa xchg inc aaa call pop and or sti push lock mov cs movsb sbb sbb push mov add enter adc mov jns add or je adc es stc adc sub fidiv dec movsb jae ds (bad) movsb or mov push insl add outsl fs mov mov (bad) (bad) cs int3 or repnz inc cmp in inc push push cmp bound jl dec sbb cmp into pop sbb aad test or out mov daa aaa lcall ja mov inc imul mov enter fcompl or dec cmp mov push sbb cmp sub xor or ss nop fimul fadds lcall and add lahf test fildl cmp adc add mov xchg jnp negl and insb push add inc push movsb pop push shlb inc jp lods ret xor nop xchg pop xor ljmp shlb fadd and sbb std or aaa stos add dec or data16 or dec loope inc cmp movsb xchg mov rcll (bad) outsl sub cmp bound insl jo (bad) cmp or jp pushf orl dec or add xchg jae or call add jno and movsl iret ficomp push es and nop or je xor xchg push nop sbb fcomip ffreep push add mov loopne inc or sbb push pop and or aaa xor push cmc and adc fsts (bad) (bad) jmp push icebp testl pop leave push adc adc and xchg adc push push xchg and in and pop inc or xor sbb sbb in mov lret sbb mov xor repz add adc pop and sub jg mov shll pop and add push xor xor es sub sbb sub adc push sub or dec and xor das (bad) leave add or inc xchg pop push push cmc inc and and cmp add add push sub leave cmp push cmp cltd nop and pop and pusha (bad) ss adc or push dec add inc lods dec aas dec adc adc loopne rcl scas aas mov dec outsl outsl imul and inc add sub dec mov xor in sub rclb je or sub jp mov push xchg shrb js fidivrl pop das movsb scas rclb dec outsb or jmp scas stos data16 and cmp and sub or cmp mov xchg adc or aas (bad) pop ss mov fbld or mov je push adc push adc add inc scas sahf push test xchg or add push les (bad) lea jno pop pop and add addr16 adc test sti inc adc jmpw sti les and and or roll sbb lea mov lsl and int rolb popf imul xchg lea hlt cmp fs pusha xchg mov mov push es cwtl ffree jb or mov out lret cmpsl dec mov call into mov adc mov sbbl and (bad) es je or push aaa xchg (bad) sahf cltd mov inc nop xchg mov pop and xchg or or push test push push or iret mov (bad) mov or in (bad) add rcr jl add roll test push jne jns stos (bad) lock out outsb dec aaa adc sub daa xchg loopne push cs adcl dec jae push push push dec mov add js ja frstor or pop cld mov adc inc popa sbb insb pop aaa push out xchg mov pop add (bad) addr16 nop mov mov fdivl sahf lret adc inc jb cmp inc iret xor inc xor imul loope sub push cmp inc (bad) adc jns out inc push sub loopne inc adc nop in inc xlat push pusha inc repnz inc js outsb out pop dec cmp push push lock js div xchg negb fidivr push or iret lock inc outsl xchg sbb clc and iret fcoms out insb push adc nop in dec loop fsubl inc (bad) ss idivb cmp cmp push push add cmp push popa jmp aaa add mov and pop ljmp lods lods fcoms push sub add mov in sbb mov inc mov mov or dec loope adc sbb add or xchg or mov lret loope xchg mov mov scas ljmp add or call mov imul adc push pop push sahf cmpsl stc sub mov fcoms adc sahf out mov sub data16 xor ds sbb inc or push insb sbb jnp pop sub xchg push sub les out call or add mov repnz and push inc iret notl es push icebp fcompp insb xchg ljmp sahf notl push push jo or push cmp sub mov adc loope sahf mov out push test push mov pop sbb fcoms loope movl mov adc pop dec mov cmp pop loope add mov push fsubs jmp xlat outsl pop sbb cmp pop push jecxz add push std rcrb out mov (bad) pop cmpsb lret pop or and cltd out add loopne lods sub fcoms push or inc insb mov jns push pusha movsb fldenv mov inc adc jns cld jmp adc sub inc es and ret fiadd push ljmp sub and xchg add add (bad) inc mov and jmp dec mov stos out inc jmp sbb mov mov dec insb or fmull xchg xchg push or cs call jmp lcall and enter adc roll pop fwait inc pop dec pop and dec adc or fdivrl xchg xor xchg xor mov push and and xchg sbb test and and and mov mov lods frstor out sbb sub out lea imul cmp inc adc cmp cmp test xlat inc cmp xor nop or jo add test into scas loopne adc es inc dec or adc and pop cwtl cmp fdivr fwait sub inc pop dec shrb jl test (bad) dec nop cld sub inc mov pop mov mov fs cmpsl pop fisttpll loopne mov js movsl test or sub xor decb xor js jae ret push data16 xor xor test lods (bad) pop arpl (bad) xor (bad) xor pop xor xlat and and xchg (bad) mul sub int (bad) inc data16 pop int scas cwtl inc loop popa aaa mov in in out cmp or (bad) inc jne and (bad) adc sbb add pop mov fisttp add (bad) and and pop and or mov decl cmpsl inc lcall es push out inc pop dec pop dec cmp out cmpsl mov (bad) and dec cmp inc dec ds cs or test fcoms xor sbb inc cwtl mov inc push enter insl roll pop leave inc inc sar rclb mov mov outsb aad inc sbb rolb dec pop test mov mov mov or pop mov dec or rorl aaa and dec test loope sbb dec xchg jno aaa and and test xchg dec inc lods pop adc (bad) xchg dec mov and push mov mov popl cmp push cmp lods addl push and push jb mov and push inc inc sub pop pop push pusha ret test jbe rcrb shrl enter pop pop add sbb fwait pop pop push fwait inc fistp (bad) xchg xchg rcrb jmp (bad) fadd mov or xchg cs inc or leave add sub push and mov pushw or or int3 insb ss out xor adc nop sub test loopne mov dec pop or out pop sub pop cmp ret mov add shrb sub cmp daa or push pop lods cmpsb sbb dec push push mov push mov cmpsl insb xor test aas cmp mov mov mov ret dec push (bad) sbb fadds xchg (bad) je inc xchg enter nop lock and insb (bad) jb loopne push inc add cmp clc inc push (bad) hlt push or pusha mov dec pop mov andps add lods ret rcrl inc nop addr16 and rolb push or or xchg add jmp cwtl aam clc xchg std cmp ret push je and or push inc pop les or (bad) mov mov out icebp insl mov aaa mov adc adc loopne (bad) cmp pusha insb jge stc je adc pop addl js mov rorb dec loopne adc sub leave sub js outsl dec adc hlt mov insb popa repnz js enter jns fadd push aaa popf push mov pushf add sub (bad) xor sbb ds stc dec cmpsb xchg (bad) imul mov pop or fimul (bad) lcall rorb add (bad) loopne ja mov (bad) mov xorb rol dec lds push test (bad) mov cmp sbb mov push adc pop jo cmp jge enter je mov and mov jne pop push out jbe sar jecxz daa push or flds cld cmp mov cmp adc scas add ret mov xchg sub xor sbb repz sub arpl mov popf fbld iret sub xor mov (bad) outsl cmp or jno stos xchg sahf jl test jae sub repz inc and sbb dec (bad) jae loopne add cmpsl dec xchg lock cmp add add or jae add add mov repnz adc pop sbb sbb icebp fisubl je mov jae xchg imul testb cs sbb adc lcall adc mov movl inc xchg xor ss fistp aam and rcl sub add (bad) cs daa add jo sti aaa xchg insb inc dec add sahf clc fs sub stc lock push xchg int push and pop in inc pop mov adc hlt xchg push and mov daa js sbb and sbb push and dec or mov gs push inc or les inc sbb cltd mov out ds inc mov add pushf (bad) cmpsl hlt mov mov xchg icebp vmwrite lahf sub stc push or adc or sub adc push sahf mov repnz add pusha cmp jmp imul pop cmpsb adc jecxz xchg add sub jne fildll cmp inc sub add pop int and inc dec daa cmpsb mov xor inc add adc push (bad) mov cmp or add into mov cmp add faddl shlb xchg or inc dec pop push lcall sbb pop ficoml inc ss ret xchg sbb jno fnstenv inc push and imul sub lock push cmp xchg jp lock jmp sub add add pop ss les rclb adc mov cmp clc pop bound mov les adc sbb jo inc dec lock setl xor mov stos mov in xor dec pop mov mov mull adc mov xchg add out cmp sbb dec jecxz inc neg (bad) (bad) sbb pop hlt neg jmp arpl lods add je add and and adc cmp adc lahf bnd mov mov pop xchg cmc out insl cmp addr16 jb pop inc dec arpl (bad) aaa or cmp or xor inc inc mov xchg sbb mov rclb add add (bad) mov lock sub mov je sub mov pop (bad) xchg pop pop and adc (bad) jp orl xor or jmp fs pop fcmovb pop inc jb inc xor (bad) idivl xor or rorb popf imul mov and or lret inc mov in sbb fwait ret mov sub mov out jge rclb movsl loopne sar and push je ja popa sbb or jmp (bad) data16 push xor push jmp inc xor les push sub rcl dec adc aaa pop mov mov ss jmp push in dec scas sub push cld adc mov inc push and lock and cmp repz popa jge mov out (bad) xor daa or aaa add jp sbb cmp push dec jo movsb inc xor jl mov jle push sub adc dec inc dec out (bad) mov push sahf push push and leave inc adc sbb jae or push loopne ret adc mov fdivrs push and mov add jne mov xchg add inc addb add or adc clc std pop sub or fsts sahf push dec inc add inc xlat sub inc jmp xchg cmc ds decb pushf push (bad) ds jge and dec adc add test fisubr ret je pop das pop addl paddw lret pop jecxz aam mov or or rorl (bad) (bad) push and mov or loop push cmp adc nop dec inc ja test and (bad) jo ds or mov adc xor mov das mov shll or sbb cmp nop mov popa add movb ret jae cmp mov rcrb pop mov push dec push dec stos and push xor jmp push jp sbb jmp and add push cmpl sub xor jb adc cmp xchg pop xchg xor mov jb cwtl push sub pop and pop pushf inc adc (bad) fnop call push push psubusb in fistl stos lock adc (bad) and push push sbb jp add mov test mov inc jae mov pop cmp xchg mul inc xor dec aam (bad) sbb shlb je or notb dec sub adc xor lea mov xchg int3 orb lea xchg shrb loope mov and add or je xchg outsl xchg adc add mov adc adc imul mov mov sub mov lods dec shlb mov adc sbb sub push push xchg pop pop jne lcall jmp sbb or leave mov inc jb add sub pop mov sbb lock enter cmpsl push jo adc mov out aaa faddl (bad) mov mov sub sub adc insl cmp add cmp lock cmpsb test xchg mov sbb pop pop or loopne sbb push dec rolb push push add mov adc add push popa add pop adc enter rcr jns les ja sarl sub sbb or stos outsl push adc sbb xchg out or or mov xchg mov dec sbb sub lret push inc daa xor scas sub push in mov aam or sub inc fstpt arpl and pop dec outsl pop jb inc or and xor xchg dec icebp outsb (bad) or pusha push daa out (bad) test xchg lcall adc inc cltd popa ret es mov lret dec loopnew sub adc cld push xor and gs rcl xor xchg push or sbb sub pop sub inc mov xor test ja jbe push push lea push mov addb inc jl xor addl outsl or lds sbb out sbb add mov addr16 mov mov sahf fs inc jo ss in fistpl mov sbb xchg xor jae mov xchg add xor inc in stos jge inc (bad) pop aaa adc ss sub jle stos frstor popa sbb mov rcr adc and xor in or addl add dec sub loop mov add xchg aad das incl cmp mov add dec je add movsb or cmpsb push add push adc fisttpll jmp inc hlt mov adc test add (bad) in pusha jne sbb loopne ret or sbb jns or rclb add inc or and mov hlt pop dec mov jecxz xchg dec push adc mov and push fldl mov sbb dec int or loope (bad) loopne push and sub hlt mov pusha pop popa fild mov or sub pop int mov and sahf test daa dec out jb sub pop add mov add fist inc add dec cwtl bound daa outsb push add dec in xor fs xchg pop and repnz (bad) and and cmpsb lahf rcrl and mov and inc inc or push ja (bad) ficoml (bad) lds push fldenv movsb aaa push mov mov dec xor add mov outsb or (bad) cmc insl sub lea js out stos lea hlt push xchg xchg rolb cld sbb adc pop lret xor mov xchg mov push mov lea repz inc adc fwait loope andb (bad) adc and mov add inc enter in mov inc cmp aas push repz xorb cmpl test fildl test sbb mov shl push aad push dec ret mov lret (bad) popa enter jbe sbb ret inc popa movsb inc iret sub pop popf sbb sbb dec das xor mov pop xor arpl loopne pop cmp sub mov or or sbb jo xchg out inc out fildll lods sbbl (bad) repz ret mov lcall in fldl popa dec inc in adc add xchg test push xchg and push cmp mov lea cwtl xchg enter sbb lret push jp popa jmp shrb pop mov addl loopne clc andl fadds cs push add (bad) je sbb in xchg add sub cmp lods fldl imul outsl sbb lock and and pop dec and dec or fisttp cmp inc (bad) mov dec imul or aam xchg add rclb pop dec lods test add dec xchg xchg daa xor (bad) lds in mov jb neg inc roll in and fcoms sbb ret add inc pusha adcl jo mov sbb addl dec jge xchg iret mov cmp ds sbb jne ja xlat adc das sub sbb into lea (bad) jne jnp lock in or insb dec jp jle jne cmc in and mov stos mov scas xchg call (bad) or in jmp cmp lahf iret jo pop cmp inc mov mov xchg lds mov push pop repnz or sub mov popa push gs xchg mov mov add inc (bad) dec loope hlt mov xlat pop jo dec jo jg sbb je adc and pop je daa xchg adc mov dec mov mov ss mov aam and (bad) rep xchg daa fimull xor add mov pop rorl add and out push push push adc sub out pop or add test inc mov dec xor int push and aas inc repnz pushf lret cmc adc nop cwtl jmp or and cmp push mov mov lock push add dec pop xor mov sbb divl cmp and push lret push ss add sbb inc push outsl pop sbb fiadd adc xchg adc xchg mov add adcl and sub sbb adc in rorb adc in addr16 out pusha addl loopne test inc push out lahf lods inc jmp mov and sbb sbb data16 call aaa rcrl mov push and sbb fsts imul adc inc js fnstsw cmpb push and inc pop xorb mov xor dec push scas xlat xor fcmovnbe cwtl xchg mov cmp cmpb imul andl dec mov movsl adc out (bad) das push loopne add adcl (bad) xchg add das insb test mov jp pop adc mov add xor enter (bad) arpl ficompl sub or cmpl fwait jae cmp std or sbb add dec or push push mov mov movsl mov repnz pop dec mov fisubr ljmp clc xor or jmp mov es test pusha inc out pop (bad) ret push cld push jb mov add hlt pop aaa test adc pop add int push sub xor lods pop pop sub sub pusha repnz js aaa fcom add je xchg inc (bad) dec dec and sbb add inc adc pop add adc adc mov lcall cmp mov mov or cmp jae pop insb enter loope adc ja xchg fwait orb adc inc clc mov pop xchg pop push jo add and push sub push imul and cmc mov and sbbb js test inc mov sbb cwtl and and jno mov pop and imul test add test mov and adc mov gs lsl pop insl xor inc jg cmp insl loopne in ret jb or xchg and dec or test push pop mov jecxz sub mov icebp (bad) dec je daa cmpb mov pop jne sbb xor cltd test jne ret jge jmp mov in xchg cwtl sbb add xchg push in leave adc insb repnz and inc movsb mov or es mov and sub jbe mov in adc into cmc imul mov test arpl ret aam sbb inc sub inc lcall int movsl lea jmp sub pop fs dec jnp out popa jnp cmp or mov aad add out mov add rorb cmp adc mov sbb cltd sbb lock arpl mov push xchg xorl fsubl adc hlt mov in ret jae ds nop add pop push out arpl add or lock xchg repz rorl push and cmovae xchg and rorl lea adc pop repz xchg jecxz ja lea mov mov add add repnz and and xor or adcb dec les sub (bad) fnop sub inc mov jbe mov jg push push cmp test scas pop or inc add movsl fldenv (bad) sub mov pop push add test add jbe push mov xor inc pop pop or and imul mov mov aam nop fistl cmc add xchg add cmpsl sub and dec movsb mov push mov inc xchg addl push fiaddl push out cltd push dec cmp or clc inc jo shr add xor roll aam orb flds clc (bad) in adc cmp mov pop adc sbb lcall or test neg xchg movsb mul adc mov in je aam and rorb nop lret arpl xor (bad) or leave in xchg leave shlb dec and add cli and sub push fimul ret adc enter add add mov mov and insb add pop sub pushf sbb xchg dec pushf cmp sarb sar or mov iret cltd js adc adc (bad) in lods pushf cmp les in push das mov add (bad) mov jg pop imul in jne imul inc pop cmp lcall xor push xchg mov inc or dec xchg or or adc in fistpl inc nop add shr je adc sbb loopne or (bad) jne sub popf jl les testb jl cmpl jnp ja int3 pop fs add sub adc mov xor test sub or (bad) push mov push mov sbb iret jmp fistpll je or sbb ret icebp xor cmp cmpsl movsl and xor aad mov adcb test imul or icebp push sbb inc sbb mov add nop fbstp cli nop and cmp and add add and (bad) ror and data16 xchg sahf adc sub movsb sbb push sbb mov out cmp dec outsl mov fcmovu fcompl mov sbb js adc test fisttpl sbb push daa and xchg mov ljmp jge mov mov lods arpl and and sti add push dec rcrb scas (bad) or movsb movsl rcrl pop inc (bad) add lahf sbbl xchg int3 cmpsl sbbl cli test jno icebp out (bad) push nop test mov add test mov or jnp arpl inc (bad) push mov (bad) push mov stos fmulp test repnz cmpl and xchg xor cwtl mov mov push push pop sbb aad xor xchg ret adc xor push lds repnz pop sub fiaddl out push mov in pop test in pusha les xchg ljmp jne ja fwait jmp nop fisub mov (bad) sahf xchg cmpsb dec jo cld popa pusha ss xchg push lea lods add inc daa fdivs jp int and and xorb clc movsl ljmp jl or or sub je enter test or and add das add mov in or pop push dec inc pop mov mov dec ret clc je mov adc sbb mov enter aas int cmp add sbb fiaddl aaa (bad) cs sub gs add pop (bad) lock cmp push adc je incl mov cmpsl push push imul rcrl and adc inc push pop loope mov retw xlat and js mov aas pop dec popf or pop out (bad) in (bad) sbb fdivrs (bad) push add push mov pop shrb mov loopne loope sarl xlat inc notl add ja push setnp xchg pop xor inc jo daa pop ret fsub lret cmpl xor sbb pop mov into push ja loop xchg jmp mov mov pop and sbb enter add movsl mov cmc xor push lret xor bound add and jae adc xchg inc mov cmp (bad) movsb inc ja cs in add outsb mov push push cmp cwtl xor js mov out cmp out mov cs jae sarb mov in or push outsb sbb movsl cmpsl pop or mov ret push push mov sub mov add jp add push fisttp push and lds pop add push cmp cmp add add (bad) pop push jnp ss ss sti (bad) lock jg imul xchg cmp and add add xor imul push xchg push pop push mov aad int lods sub inc push mov pusha pop adc lea sub mov push push add push cmp pop or dec inc movsb mov bound lcall adc xor cmp sbb test pop ret mov cmpl or sbb cld mov movl push clc pop or add cmp pop mov sub mov adc fsubrs cmp sbb cld mov pusha popa add mov adc and adc pop add add push cmp jns imul mov addl rcrb cltd jne negb mulb sub int add jne adc jmp das imul fwait mov or lods lea mov sbb xchg fchs push cld sbb ja adc mov fsubs inc sbb cld outsb jnp out add xchg jo inc xor add pusha sbb imul add pushf add xor and cmp adc and adc adc daa out popf insb push aas add mov or add sbb mov or sub pop adc push mov add adc nop mov mov sub or jl rolb xor or add stos mulb arpl add jns xorl shlb push lods jmp fadds push les leave push and lods adc dec data16 mov pop mov mov sbb mov or js cld dec fbld mov push adc jmp dec and call push push pop pop add in xor dec inc dec push fisttp decb pop adc pop or out or dec mov call das fcoml mov mov xchg nop cmp loopne cmpsb std and call adc adc sbb pop or add inc mov pop sbb sti pop pop sub add lock in and push cli (bad) fnsave mov pop incl idiv dec inc cs jo jnp lods test cmc out pop sbb push (bad) dec daa call sbb in scas and je mov push nop ret jg mov dec sbb inc cmpl jne (bad) movb cmp inc mov call dec and mulb xchg inc or push inc cmp je lock add mov jne test cmp mov ja iret test cli (bad) dec nop mov pop mov inc adc popf pop mov iret (bad) sbb fwait inc loopne xchg and jbe dec jae adc xchg xor and clc xchg loope,pn push pop sahf cs rolb pop xchg daa dec pop xor incl push insl jne mov cltd (bad) jmp adc inc aas xor adc pushf add and adc sbb lcall in sub dec dec mov or add add aas add or stos fnstenv sbb sub je (bad) sbb cltd js sub lock sub jne push mov mov (bad) sarb jae loopne cmp js dec add dec push cmovle loop movsb adc popa inc lahf jmp and rcr or sbb hlt sbb pop lock mov lods inc inc pop icebp add outsl push inc xor arpl test sub (bad) and jne lods xlat mov fs mov nop mov mov add cmp scas bound mov bound or (bad) cmp and mov xor cmpsb cmc loopne add and hlt and and jb test jne inc cmp insb lock and lock sub xchg mov add int3 adc adc lahf sub aaa aad daa adc aaa lods mov mov mov ret rdpmc dec or cmc sbb adc mov add ja cmp aas (bad) ficompl or adc push mov and mov cmp inc cmpl test cli cmp je ja dec inc and cmp xor jecxz movsl outsl or movsb mov (bad) jmp mov xchg dec in cmpsl rolb (bad) cmp adc inc pop test inc call int3 inc fidiv dec test pop mov sti sub push in inc movsb pop or push xchg push mov je clc lock mov leave gs dec mov cmp mov xor adc inc orb jecxz cmp xchg cmovbe in inc cmp xchg push shlb sub in (bad) jbe pop dec jbe movsl imul add dec add roll nop sub verr scas or pop nop andb fstl mov mov aaa inc dec dec mov fdivp test dec sub imul movl mov fbstp arpl cmp sahf and adc and pop mov gs dec xor mov inc push js sub push shll (bad) mov add jmp push push mov (bad) lock mov mov pop pop loopne xchg or hlt fisttpll popl xor icebp das adc shr mov pop dec add sbb popa lock inc int movl or (bad) push loop xchg rcll pop (bad) repz and xor sbb push add fidivrl les icebp es test xchg fmull pop sbb roll dec enter sbbb xor jmp dec rorb enter pop cmp adc nop lret add fmull pop andl nop sub cltd push dec jmp test fdivl fwait add (bad) jno fistl inc loopne test ja into and imull insl in scas rcl and adc sub jge ds pop cmpsl adc les and je in and xor xchg cmp int jo xor popf mov inc and dec (bad) dec adc jbe mov inc mov inc jbe test test pop inc xlat dec roll push push mov in mov jae leave adcl cmpsl clc std stos adc jl and je xor add (bad) call lock cmp add inc fcoml mov unpcklps (bad) inc xor xchg pop push (bad) std sbb inc shrb xor xchg imul mov mov push addl mov lahf push push mov outsb cmp xchg sbb jo je mov movsb pop loopne inc mov ret dec push sub push or push mov adc push xchg js jp mov push dec das ss insb dec or shrb ret mov or inc xor fsubrl mov ret xor arpl jl dec pop cmc mov bswap mov les add pushf xchg cmpsl call inc pusha pop adc aas pop mov or cmpsb dec jmp adc push pop into movb lods and insb add or nop adc jmp xchg xor (bad) cmp imul add and sub add add stc (bad) aam loopne arpl inc or inc aaa cli xchg mov and mov sbb mov mov xchg hlt sbb push dec add stc add leave mov fnstenv xor fildll inc out or cmpsl pop pop xchg xor shrb ficoml loope fwait push (bad) xor pop jo shrd cmpl adc adc inc cltd dec mov add mov movb mov or jne outsb adc jmp xchg push insb mov pop xchg test pop sbb xchg jns and adc and lret adc mov jecxz pop and sbb dec daa call ss idivl aam (bad) and ret xor rolb mov add dec push sub nop add push pop push sbb out xor cltd (bad) cmp cmp xchg push cmpsb jne push xor push in xchg cmp jl clc mov xor sub adc lock dec add xor dec loop mov and (bad) mov or lea adc jbe mov in add mov sub or fiaddl push push and sbb mov test sbb mov add rcrl loop inc push loope int3 jge sub mov mov cwtl push scas fcoml push add loopne mov subb or mov sbb sub pop add loopne and in iret sahf dec dec inc dec cmp mov pop loopne lock gs and repnz clc dec nop mov subl jo push dec es mov mov sbb add fstpt cmpsb cs movsb add movsb add jmp pop aas data16 jmp mov test shll xor xchg sarl xlat cmpsl mov movsb push cli daa mov sub fwait add xor pop xchg imul aad cmp outsb inc nop lods xor (bad) add xorb icebp inc adc push pusha std add es or and mov addr16 and sbb inc xchg xchg loopne xchg xor pop push add rolb cmp xorl dec xor aaa jo sbb movsb mov and jmp addr16 xor xlat (bad) xor jecxz mov shlb sbb mov int3 add stos xor fs pop pavgw loopne fmuls cli cmp add movsb outsl ljmp push mov shl loope and aas pop dec add or pop sbb (bad) mov leave mov or popf mov insb pusha es (bad) loop adc and ss cmpsb jne cltd sbb mov mov sub loopne or movl add adc jge enter inc in ret (bad) jmp adc in subl lods sbb pop xor or or and loope pop push clts pop jecxz outsl movsb imul fisubl icebp xchg and adc inc cltd mov inc stos in bound or shrl inc fs mov sar dec ss rcrb iret or jmp xlat (bad) dec aam call icebp mov js cld lds mov outsl lods inc ss xor rclb pop test mov or inc sarl push loope and repnz aad sub ja cmpsl or stos dec leave rcrl add ret cmpsl push xchg sub add adc insl jb and pop ja add adcb or sub sub xchg or dec test daa pop daa and inc jmp sbb jne and pop add adc pop pop stos inc mov fisttp cmp inc ljmp adc dec rclb cmp cwtl pop push sbb jl hlt and sbb stc lods and andb ret scas scas adc inc loopne sub mov mov jmp cmp mov xchg jmp cwtl movsb mov or inc ret sub xchg inc lods add das aaa inc or ret shll adc add add jg mov jo rorb mov mov mov loopne mov and pop daa in movsb ss sbbb aas je or or bound loopne mov add leave and aad jne add sbb cs cmp cmp xchg daa popa or adc add addb dec js enter pop add callw les in adc pop gs arpl adc outsb sub out sbb mov stc fsubrl js popf inc pusha rorb das push xchg add cli orb aas aam xorb mov sbb call aad inc mov or mov mov fcoms mov pop cmpsl or data16 mov shlb adc xor sub pop pop dec jnp sbb mov addr16 pop jl out cmp mov or cmp loope sbb pop rcrb movsb in adc out lock inc negl pushf and pop pop inc xchg mov movsl xchg inc mov loopne pop mov or cwtl jmp lret sub push adc xor pop push mov shlb iret inc (bad) int3 mov cwtl or xchg inc xor xchg and jmp pop test mov jae insl inc shr inc fsub push fstpt mov sarb das lods mov aaa xor les nop das jne or out pop xor add or repz gs aaa add cmp (bad) pop jnp loope push dec adc jl shlb pop mov or in xor mov pop pop cltd loope cs ds inc (bad) mov push roll roll (bad) push mov xchg fs cmpsb dec sbb pop adc push sbb outsl adc lock and test push cmp or test (bad) or push add xchg push fadds ret or pop lcall mov xlat loop cwtl xor mov out pavgw xchg mov cli push aad daa adc pushf inc jmp rorb andb sbb add adcb mov sbb mov jo mov cli or movl or jecxz pop inc mov ljmp mov xchg testl orps pusha push call in subl mov call mov mov call xchg call out xor push and nop loopne and aaa xlat paddsw pop ds es cmp fimull dec call sbb sbb or sbb push test lock push push push nop jnp lret loope mov mov adc dec call adcb mov jge xchg adc flds pop or aad mov cmpb xchg add push sbb or fisubrl push lods aaa fs or cmpsb daa ret mov push sbb paddb dec aaa inc push scas cltd dec xchg fiadd push xchg sbb pop add or ret cmp popa lds adc jnp xor xchg je or fistpl jne pop fildl mov out adc dec mov imul mov dec stos cli mov pop pusha xchg lock (bad) aad inc sbb or push fsubr pop add mull sahf jno pop data16 ret aam aaa scas push cmp add outsb add fnstcw inc (bad) (bad) adc arpl stos aas addb push add jno ja jo pop adc ss push xchg inc bound jnp push mov sbb add push or fwait aas inc scas or pop rolb sti and sub pop and jge movsb and jmp sbb cld cld and push nop sub xchg cld cld cld arpl xor cld add addb fisttp xchg (bad) cwtl fsubl jbe cmp test int mov shrd fs jno,pn jo (bad) dec jmp popa dec mov mov aam inc fcmovnbe das out lds cmp or lahf push insl mov iret ss and mov mov (bad) or xor xor aaa pop adc pop dec pop or or andb mov movl sbb cmp clc loopne and xchg mov xor adc push push xchg and pop jl adc adc push and es add sub add mov dec and lahf int3 roll fsubrp mov int3 cmp pop pop add dec push mov sti aam cs push xor test (bad) pushf pushf pushf pushf dec xor push mov and mov dec mov mov push sub mov cwtl jl mov lods lds inc ret push cmpsb sbb (bad) pop dec mov dec dec xor push es cmpsb pop pop enter (bad) push push dec out adc dec ficom mov and inc push cwtl je sbb mov jo sbb xchg dec pop push and ror xchg loopne mov pop mov imul loopnew outsb adc lds and pop inc ret shrl pop pop push leave das pop adc (bad) ljmp inc inc pusha mov loop cld cmp out jl or jle pusha fs es add mov inc adc pushl out xor cmp jge inc xor clc xchg clc fcomps pop or jmp adc lsl xchg and or (bad) in and sub adc pop jg jp xor push pop sbb test out pop fisubl outsb push mov adc int adc add push insl ljmp or sbb gs push ja lock outsl out clc shrb jbe sbb lock lret pusha sarl pusha xlat into add mov ficompl mov add sbb xlat imul jo pop jo cmc add sahf loopne insb xchg push out loopne test loope jmp leave or ret adc inc dec arpl inc cmp push out mov pop jno test imul insb addl dec iret push sbb fistl clc leave mov pop xor (bad) les loopne cmp and mov test (bad) jo cs pop mov and jae (bad) js imul and push aad mov inc lods leave jp cmc cld jmp xlat or sar pop push sarb mov jne cmpl (bad) std mov (bad) push jmp add mov push xor cmp call add inc or (bad) cmc push xor insl js pusha adc (bad) aaa dec adc inc orb cmpsb push or divb inc inc pusha aaa jno pop add cmp or sbb jl push subl or inc jns iret push std and lds jp and (bad) cmc mov add test pushf inc into insb xor das push gs lea xor pop dec or push imul push add and (bad) ja test adc sub add outsl or imul and xorb mov pop xchg inc jbe dec mov out dec inc pop nop divb or push pop and sbb popf cmp icebp xchg add push fisub callw ret push mov pop pop (bad) cmp push testb xchg clc insb sub inc push inc and mov inc dec testb and xchg or sub cmp das dec push fiaddl dec mov adc rcrb test xchg xor mov mov xor add nop sub fnstenv in mov dec rolb push push jnp popf imul sbb cmpsb inc test hlt push pop mov pop movsl add mov and push mov cmp pusha in inc push out sbb jns fs or pop sbb pushf cmpl jo sub lods push into push mov mov mov add sub sub ficompl cmp je pop push pop adc add jno (bad) cmp cmp popf out dec push arpl orl sub jg inc or xor lock sub pop sub inc jmp sbb push subl or clc hlt cmp iret add hlt roll ss push mov inc sub pop jbe inc inc mov xchg xor or push inc adc repnz fdivs inc add loope jns nop inc les jge dec adc inc mov sarl dec mov orl clc push push sub adc (bad) mov sbb jo push xlat cmp iret push aam and push mov and sbb pop insl ffreep cmp add pusha push add xor jl mov sbb push pop lea and add or aaa (bad) dec and lock inc or clc push cs addr16 enter aas inc and sbbb add add dec jmp jno rclb inc sbb fldenv sbb inc popa enter in (bad) add idivl pop xchg mov and add or jl push rclb and repz inc ret jne adc inc sbb dec inc add orl pop jmp mov add subl test xchg push pop cmp mov sbb loop push insl dec imul mov mov mov shlb pop xchg je lods jnp cmc icebp dec adc fild inc sub mov pop lret movsl cmp (bad) je jmp adc int adc xor (bad) in push mov lcall pop push (bad) jns nop fnstsw dec mov jg aas movsl (bad) bound into pop (bad) adc push jbe dec inc int inc xor push add int3 xor add adc loop cmp push xchg lock push js dec inc or or lods mov je pop mov (bad) mov rdtsc add outsb inc pop and in xchg sbb adc push subb fmuls test leave or dec jnp and es cmp sub cli test xor xor ret xor jnp add sbb fcoms jo xchg mov pop sarl adc pop jne pop sti push ss js or xor fwait lahf dec pop xor movb and jns loop imul movl hlt mov outsb jl xor je or int or or add mov or or enter push or xchg fmull loopne sbb bound cmpsl adc hlt jmp xlat insl fistl daa or mov lea cmp mov daa cmp sbb je dec aaa in add mov movsl pop rorl xchg stc mov push loope sub sti xor sub loope enter daa and test push call sahf add jg dec inc dec dec dec inc ficoml and js les mov icebp rcrb ja in or or push rorb lods leave mov sbb sbb pop inc sbb cmp fadd xchg out pop lcall or push push push (bad) inc dec pusha xchg mov sbbl ret in jbe sub fs cmp add cmp insl cmpsl dec xchg and icebp out inc pop rol dec loope dec xlat (bad) sbb inc daa nop bound sbb push xchg sbb orb ret sbbb mov movsl scas mov int or pop cmp loopne push push pop or mov dec rcl mov ret dec add test movsl (bad) iret lods dec pop mov or xor adc lret add and dec jg mov sub inc xorb inc das repnz pop push aaa out fadds imul and movsb or adc inc aam and lods xchg mov or add and movsb adc inc push fs mov jp sbb sbb (bad) sbb insb inc js ss js pusha jg adc and cmp outsl fwait pop int3 mov jo dec je sbb cli pop das js out xchg es fimull pop xchg ret cli adc and outsl or fild dec mov pop lea cmp push out ljmp repz pop add or xchg mov xchg les je cs js inc (bad) pop sbb lods push sub pop lret nop sbb jecxz (bad) sbb push adc adc outsl in mov mov aad add xchg pusha mov or dec movsl and loop insl or ret push mov ret add mov mov jl cld or sub or loopne push mov jne test sub mov fsubrs test in xor xor xchg xor rcl addb add adc sbb dec shufps pusha fidivrl adc outsb dec test aad or pushf pop xor xlat push andb pop (bad) and sbb jo jne dec mov outsl add add lahf test lock xor test rorb test mov and pop adc (bad) fistpl stos inc pop fdivrs push clc cmp push add lret mov xor call adc xchg and jmp lea sarl xchg cmp (bad) (bad) mov sbb fisttpll cltd inc jle push jg fcmovbe adc pop ret or and (bad) dec jnp mov push sub dec pop jp xor mov lret imul adc roll jbe imul popa pop and adc cmp imul add sub sub call pop jb jno popf loope sbb fsts out add fbstp add dec icebp add jl add push lret (bad) ficom or pop stos sub or cmp into icebp inc pushf dec sub inc dec push inc test hlt pop xor mov cwtl comiss aad xchg lret or cmp pop jg mov hlt clc movl shl pop cld js adc ret mov addr16 imul inc stos out ja mov bound fbstp test adc xchg inc cltd xor cltd adc jg inc mov sbb push lods imul dec mov fwait mov sub es mov jbe insl clc xor repnz js ret inc xor adcb lsl add xchg add cs inc push fidivr add push pusha ficomp dec loope mov pushf xor add stos and and xchg xor scas adc mov (bad) mov (bad) pop hlt mov mov rcll push xor das in mov mov push jmp or mov dec push dec cmp out pop inc sub cs shlb and ljmp sub adc lret mov inc rcrb jmp mov jmp adc adc (bad) cwtl mov cmp inc sub lret ret rol pop aaa enter rorl mov mov sub fcmovnb cmp pop pop add sti ja or or add jge (bad) jno dec into push add dec inc test jne int imul inc dec add pusha jno arpl push inc mov push jbe jae je fildll mov lock aaa or mov add movb inc inc cmp jo adc fcomp adc push enter rcll mov insb je test or push aad jb sbb aas roll mov lds inc and xlat mov dec mov dec sub imul adc cmp rorb je push lret out pop and push dec (bad) mov mov aam push loope std or dec out cltd pop mov cmp les pop clc pop test mov push cmp scas movsb rcll je dec cltd add mov mov dec dec iret adc xchg orps cmp mov or push pop lcall dec mov pop mov push in adc fstps mov popf (bad) cmp daa pop and add jo mov mov or adc aam xchg pop push test je or inc mov cltd jno or in sbb fsubl sbb inc push inc inc fild push xchg cli rol ljmp cmp addr16 incl inc fild inc jno xchg sub add add mov int3 stos pop add mov lds push add imul or sarb sub fsubrs iret add loopne push cs cs out sbb test fsubp ss push xchg dec add jmp out cmp cmp pusha jmp xchg (bad) add add mov loope mov jnp cmp data16 jns xor fisubr test loope cmp mov fistl and sub ljmp addr16 mov xor xchg mov push jnp and sub add cmpsb push add cmp mov add sub int3 daa fdivs jg je or es mov pop inc xchg fildl inc daa cmp inc sahf popa iret inc mov sbb and rcrl or addl fs loop pop jmp inc xor pusha in pop repz or push mov mov xor cmpsb test push sbb movsl push rcrb into subl sbb addr16 fcompl je xchg mov inc loopne nop lret sarl xor cmp arpl jae or (bad) jne cmp movsb (bad) (bad) imul nop push add add movsl xchg sbb jge pinsrw xor stc sub into movl and adc inc dec and ret cmp mov mov roll fnstenv ds (bad) or clc xor (bad) leave push pop mov pushf stc fs push jne dec (bad) xchg mov mov add mov jl sbb add shrb pop cmpsl and add (bad) add dec push outsb sbb xchg inc lds ja xchg sbb addb xchg rorl subl push lea addr16 mov inc daa jmp inc arpl out mov mov mov push sub inc fisttpll jo sub pop or push mov lock les jecxz in dec sub xchg add je mov aam (bad) sub mov xor (bad) mov mov ds aaa sbb aad les lret push shll movsb or popa hlt mov mov add pop add dec mov pop dec jp cs data16 mov pop inc sbb lods mov out mov jno movsb sbb mov inc or test cltd lcall xor lahf dec adc orl push adc dec sub adc add inc leave arpl jp dec or call popf push movsb adc sbb jbe xchg xor dec push iret test sbb loop lods mov pop cmp xor mov adc add xchg lret loope push (bad) push repz xchg sub mov push test or mov push xchg test in inc mov dec mov mov pop xchg xchg scas daa xorb sub add sbb lods xor lar adc push fcoml inc pusha add xor pusha xor test imul cmp adc (bad) dec andl push call mov push inc dec add xchg daa fs hlt push in subl mov jg dec push xor addl int3 movzwl push in inc popa inc mov (bad) pop or or jl sbb sbb xchg movsb scas dec lahf or push cs pcmpeqb iret jo cmp xor inc aas cmp adc sub movsl and adc sbb imul mov clc stc pop sub adc sbb fnop nop rolb (bad) push sbb push and pop inc inc cmp fcoml or and or adc (bad) push xchg clc xchg (bad) int sti call or adc (bad) popf xor push cmp jne add repz adc dec test leave adc sub mov mov fwait add les push cmp fsts cmp insl dec mov lcall inc inc sbb shrb aas mov imul sti (bad) push rol sti fist in lcall stc adc outsb add (bad) and dec in lret push dec es add insl dec jmp das test (bad) adc xor sub cmc jmp outsl notl push jmp (bad) and and adc mov ficom lea sahf fwait inc inc test test xchg jmp sbb into add fs or push xchg imul dec stc bound arpl sub dec pop hlt inc cmpl cmp mov sbb sub sub clc push fisub sub pusha xchg xlat lahf insb adc mov aaa fucomip cmp andl loope arpl pop std outsl xlat push add jmp inc mov xchg xor jmp rcll jp or scas insb and mov (bad) inc adcb pushf jo cmp xor pop xchg dec lahf mov cmpsb sbb or cmp push xor add je (bad) xchg nop lock dec xchg xchg loopne and gs test mov popa lret cmpb loope frstor lcall jne xchg fcoml stc shl pop add jns jg inc pop insb insl push add and jo mov pop push or repnz adc inc inc pop daa addl fimul jle mov mov loopne or add sbb inc dec pop dec popa ja sub clc nop inc mov mov lds or and loopne jmp fildl mov mov adc jmp add mov bound into sub inc sub (bad) xlat cmpsl pop mov inc fsub or pusha roll inc push mov inc (bad) decl jl repz mov mov dec mov jge sbb jmp cld repnz mov lret dec sub pusha push test fildl push push jp cmp mov dec and add push adc xor addl js mov insl lret or rcrb add and xchg xor loopne pop sar mov clc jge,pn mov sub cmc shll xlat test pop push jg orb rol adc mov and mov jns idivl sub pop inc sub mov lcall xchg jbe mov in pop mov ret popa inc push inc decb sub mov mov cli push arpl je inc pop ret inc mov loope cld jo cmpsb faddl (bad) cmp iret clc rcll push jmp mov adc jmp dec add or xor stos mov into sub mov and push mov in mov mov or mov fadds or xlat jo or icebp xchg push xchg push (bad) scas insb mov test cmp fldenv sub repz or push out loopne mov push fisttpl imul or aam mov sbb (bad) inc or mov add (bad) sub push pop mov andb int3 insb std sbbb sub nop lea xchg daa dec or out xor jmp jo,pn xchg enter cld loopne pop cmp test es mov cmp cmp andb js mov int test mov adc xchg mov xor pop out faddl mov aaa rcrb dec (bad) push push mov fcoml add mov add cmpb xchg dec fldt sbb jecxz iret jl (bad) xor push push lods push mov push sbb inc pop xlat lret nop push xchg xor dec xor jns je adc lock xchg pop repz sub or xchg (bad) negb nop push sub fsubrs sub inc sub popa maxps pop jns jmp pop or mov or push add scas mov inc adc jl add in push cwtl adc jo in movl fwait shlb les aaa and mov shlb xchg jmp lods ss pop cmp sbb inc cmpsl mov xor (bad) mov add sbb dec ficoml sbb xchg dec pop mov xlat sub adc mov push pop in add pusha daa dec test or push dec or push sbb xlat dec cld outsb inc jbe cmpsb std cmp je test aaa lds pop mov adc push rcll add sub popa insb enter mov imul xchg mov imul dec xchg decl add nop lret int3 enter inc add inc sub test data16 sub add jmp gs or add add add lret roll push int3 rorb bound push ret cltd jae in scas (bad) mov add test mov test popf or fprem xlat pop xor aam (bad) xor sub add push in add jl mov test fsubl sub add pop pop jg add mov mov cs dec mov mov push xchg push xor push scas dec pop add bound cmp (bad) and pushf pushf fmull xchg nop mov test pushf pushf je insb push fs pop pop nop daa (bad) mov xor mov scas and add dec or inc fisub mov sbb push dec cs and pop aaa add or sbb mov push inc adc lcall dec jo or or dec js into jbe jo ficompl add sbbb push lds insb enter cmp les inc xchg mov mov jns ljmp test rcrl fnop mov shll pop jmp xor pop sub sub add push cmpsl pop mov or mov fidivrl add and pop or out jno add dec pop inc jecxz mov cmp add sub out fiadd (bad) dec nop push add add scas repz inc push xchg lods mov orb mov loop or js hlt jno and adc xlat dec push add push dec pop leave test in lea dec push and pop dec pop pop nop pop add xchg pop ss gs push mov jb sti add fsubs mov arpl or jo jle inc nop add sub inc cs pop push sahf fs xchg mov jae mov xor dec xchg out dec ja add imul xor mov add or imul pop pop sub xlat add arpl outsb xor das cmp add sub mov faddl jo outsl xlat xchg insl nop xchg je loopne (bad) in sarl int3 push dec aas test fcoml rcll xchg push (bad) xor lods inc nop pop pop sub scas ret push daa mov sbb inc or les nop adc lds jno xchg xor xor cmpsb mov jmp orl cld jne ret sbb push add jbe adc movl add sbb dec leave add or lods cmp and (bad) ja lock pusha ja dec push inc pop nop pushf or pushf int3 fwait jb fdivl fldenv xchg pusha or xor adc shlb push add add js dec dec inc jno xchg cmpsl inc xchg push push dec roll mov and sahf or mov push pop andb repnz push sbb xchg out leave sarb inc lahf dec pop and adc add jae push add add add jns (bad) push add fsubrl loope outsb xor pop in add leave or dec je jmp dec call (bad) adc cwtl xchg (bad) jbe add lock mov into dec in mov xchg call jo push xchg pusha ljmp jnp adc insb cwtl push fs inc cmpsl fiadd pushf and sbb insb pop or cmp bound ret or push or jle jmp out sbb mov test out jmp popl enter (bad) mov rclb stos adc adc xchg cli jl (bad) incb lock sbb xchg arpl add push xlat cmp stos jbe pop push mov js dec sbb jne xor push mov fildl sub pusha pop in push fsin and insb add inc xchg (bad) dec sti repz push sub and inc nop sar mov sbb cmp mov cmpsl jno cmp add fsubs dec mov push sub test dec mov (bad) movsb mov scas inc inc sbb imul outsb add cmp rorb inc mov or outsl movsb xchg and push inc imul inc das or push xchg les or dec inc pop or add gs inc iret ror adc and adc cmp dec lods mov and mov and xchg xchg jl mov out inc dec mov and nop inc insb sub xchg sbb aam sub cmp sbb (bad) adc inc or inc int push cmp or ret in and push sub cwtl and enter (bad) cmp jmp inc inc xor push mov add test dec pusha dec leave inc add cmc dec or popa push std dec int3 push fwait push add adc jno mov xorps jge push pop mov xchg aad movsb test push push into test mov inc add xor mov scas sub inc cmp or mov inc add pop add jle aam mov and orb mov adc push adc daa inc cmp pop and push xorl xor jnp mov movsb mov inc push or data16 in push inc or nop inc pop pushf jg lea add andl mov jns sub addr16 inc and fsubs je (bad) dec xlat mov mov jp je or loopne push xor xchg mov iret insl xor cs ss fwait xor sbb bound fwait push and sbbl add fmuls xchg mov (bad) es out mov sbb lods popf ds fildll push push sub sahf xchg add lret jmp push dec outsl js mov mov jno cmpxchg mov shll pop xchg inc popf pop ret xor adc add dec fildll fsts nop out add mov add (bad) xchg or nop cmp xor dec and ds icebp inc push xor pop (bad) cmp jno pop pop lock push mov mov dec lea or inc jg pop lahf or es (bad) test inc inc popa dec lods pusha cmpsl loope adc push push jns push loopne xor jge push and mov or test imul fs dec (bad) into rorl popa sub aaa fisttpll push cmpsb ss mov sti push pop dec add mov or out loop ret aam jbe (bad) imul xchg nop lahf and mov push ja mov loopne rcr scas and sub (bad) out add fs orl ja push jmp cmp jmp pop enter mov sub arpl push xchg lret andl or and dec in lock test lret inc (bad) jae pop push out xor jo leave leave in xchg cwtl xor int xchg sbb in aad mov mov insb push mov insl (bad) mov and ret and xor int dec js cmp push rcll sbb mov xchg hlt and adc sub out cmp mov inc ret fstps mov pop andb mov xorl add adc jne inc js xchg push jne (bad) jmp sbb dec cmc aad add enter shrd sti push dec cmpsl add lock sub daa aad push adc xor decb inc xor cmovae mov mov sub outsl or jp scas xor adc xchg shll xor sub sub leave xchg fidivr out pop and pop sub cltd fsub adc (bad) push pop (bad) jg mov and push xor lea or jns jle jg js cmpl jp jns mov andl movsb xor outsl aaa dec popa mov add cmc pop xchg add dec mov repnz sbb xchg push out jmp pushl push xor sub xchg jle inc push addr16 push ss shl mov adc xor pop aam loopne pop es test out sbb lidtl fs jp mov jmp iret adc xor or movsl std mov in or xor xchg shl dec add pop js mov mov or sub xor dec and inc mov enter mov ds mov imull inc jb inc sub add std out inc adc dec jne jg fsubl les adc pop popa adc arpl xlat push push push das push xchg frstor pop cmp and movsl ja test push lea sbb pop les mov pop movsb xor mov jp andl aaa (bad) arpl adc pop sbb mov push subl mov (bad) mov mov and push nop sub fmulp jle repz cwtl ljmp faddl jmp pop dec jmp data16 dec hlt mov push xor jge xor scas addl adc cmp xchg sarb cmp or inc es f2xm1 jp jg fwait xchg js (bad) xchg hlt jp mov invd sbb cmc and push test nop pop ja es dec cmp add ss aas mov mov and mov fmuls mov clc push cmp dec addl xchg ret loope xchg xor sbb jge inc mov mov aam xchg xchg jo lcall add orl jae inc dec inc pop scas movsl cmp sbb add and mov sbb mov mov (bad) lea (bad) pop aad aam mov mov mov aad sub cwtl push xor xor jno inc pusha fbld add inc sbb mov fcoml jne test jmp jmp xor inc ret and push (bad) out adc adc leave cs add rcrb es xorb push and push (bad) mov rcl pop bswap cmp push lcall push inc nop out movsl dec sbb sub sub enter sbb bound scas das jle mov adc lods sub loop push mov rorl or cwtl mov pop popa adc adc mov pop xchg inc sbbb mov fsubrl jge nop lahf mov lahf jmp or add and xor pushf mov sub push jae sub or and inc cmp sub pop icebp inc cltd dec insl dec or cmp xor jbe push sarb cmp jae movsl ss and loopne or bound mov cmp push push jnp or (bad) shlb dec fildl mov mov movb push adc icebp (bad) bound clc cmp xchg mov adc xor popf in (bad) or pop dec jl push xor ret or jp pop inc imul fwait push mov pop jmp jnp rcrb lock or loope push nop dec pop mov inc push mov arpl xchg mov iret jl mov (bad) mov fs jge and inc cld xor inc jbe ret outsl js sbb or sbb and daa mov in ds jle cmp movsl and movl or push dec sbb inc jle mov cmp or cmpsl push movl in dec (bad) adc pop shlb sbbl nop xchg bound dec fistl fdivs jbe mov or xchg xchg roll adc imul ljmp adc call stos jb add shr sub cmpsl or inc dec sbb addr16 cs daa pop repnz and xchg cld dec dec stos sub push or or enter mov inc aam je xchg cmp lods in imul xchg bound fisubl push and mov or add mov outsb xor pusha or js push test inc xlat pop xchg pushl mov mov jle xor movsb inc mov push mov js dec jge mov xchg pop ret fwait pop sub mov movsl fnstsw shrb mov mov (bad) rolb hlt xor inc inc push push and xorb pop adc sub aas gs hlt cmpsl dec fwait or or out loop add cwtl xchg xlat add push decl cwtl or or hlt xchg andb add insb les dec cmp add in or add push add jbe loopne nop div mov test xchg sub add pusha inc and adc xchg dec add pop das lds push int3 xlat mov lea arpl pop test je dec jno dec adc fcmovbe imul hlt sbb cwtl cld (bad) setns ret push inc icebp divb fdivl xchg lock cmp inc jb stos cld adc push test std xor xor aas or sarb inc push add test test outsb push xor insl pop clc sub inc lcall xchg data16 sbb xor dec sbb test push (bad) hlt clc pop mov leave hlt sbb jne insl and or test push aad cmpsb scas cltd inc push xor sbb sub sbb mov (bad) mov cmp das xchg sar aad frstor ret xor fs and jle or xor jo mov mov lock adc sub dec je scas sbb push test jle lods call (bad) hlt jmp dec pop xchg push fstpl aas xor mov inc add push push loop mov add iret add inc dec leave sbb enter adc js or dec lahf sub pop cmp fcoml jb inc xchg cmpsl (bad) xor add mov nop/reserved cmp scas push mov stc pushf mov mov stos aad loope and xchg or out jne mov cmp add add inc sbb or jecxz popf cld mov test (bad) mov dec insb inc xor lods mov and mov push sbb out fldl mov xor jne packsswb mov loopne xor test xchg pop pop lret xor mov and ret test test (bad) and imulb sbb (bad) xchg lods push ret nop loop,pn cmp in cmp dec (bad) ja sahf in outsb and js cmp loopne sub add aaa dec mov scas dec insb sub xor or mov mov test push mov sbb dec fwait pop and and pop or inc xor xchg fs adc push xchg mov push add movsb movsb scas add jno inc adc addr16 lock push fisttpll xor (bad) (bad) outsb pop cmp mov std mov sub jb xchg add aaa test sbb movntq xor repnz mov push movsb sub adc imulb or add icebp (bad) in sbb sub lods enter jo shr shl add repz add nop push (bad) mov xchg or rorl or nop cmp lret loope adc adc out test mov jp inc add adc push sahf inc dec sbb lret adc repnz dec outsl ss test add pop fnsave gs sarb sbb push in push test adc push mov push arpl mov pop mov jo add cld sbb mov add inc loopne pop (bad) ja jne xchg push stc repnz orb mov and xchg insl inc sub rclb dec add lock push pop inc or push out shrl (bad) xchg faddl and jmp or cmpsb mov dec into adc adc xchg dec mov js inc inc pop mov dec cmc mov loopne add je data16 and or (bad) pop add mov mov ret loop test test mov icebp outsb pop sbb pop mul imul sub shll call xorl push push push mov push push mov mov fsubrl inc inc mov lds adc nop cwtl stos pop pop shrb push movsl cmc pop repnz mov sbb xor iret dec cld sbb adc jbe pusha xor arpl leave shll push inc pop or push pop add pusha push rcrb lret test mov push cmp add jmp push sbb addb insl dec insb ss adc loop test pop inc adc xor hlt data16 push inc inc sbb ja pop and xchg xor lcall and xlat pop cs lret add jmp adc add sbb adc in insl test cli lods inc fisubrl out ss push pop and xchg nop inc adc dec add jbe in sbb push (bad) mov push add in or mov mov test cmp dec sub fisttpl inc dec cwtl sbb (bad) out jno inc add sbb lds (bad) xchg add lods mov rclb or cmpsb push xchg arpl lahf mov mov add dec fild or cmp ret loopne jmp or inc add lea xchg sub subl xchg mov and push bound andl add push movl adc cld jbe inc clc lods cltd push cmp je add aas push lea jge js xor aas sbb mov nop sub and inc add fwait rolb add cmp in ss lret add std pop addr16 dec int3 inc cli or and popw insl mov jl lcall outsb imul popf out xchg mov jo,pt add cs in inc push mov loopne jecxz aam jmp pop fidivl inc push adc adc ret sbb push or dec add inc add and add jg dec add test decb test inc sub sub mov mov (bad) les adc add push dec scas mov pop inc sbb stc or insl ljmp (bad) (bad) in aam decl hlt (bad) xchg push xchg xchg or dec gs mov fwait add arpl test add pop push push mov cmp xchg or popf or add xor fnsave js in outsb ret scas pusha sti add clc repnz xor out inc jo adc xor jp jno dec out pop rorl pop int3 movsb jno gs mov pop and and push cmpsb or pop xchg jne movsb xlat or icebp xor gs inc dec stos xchg ss les add inc xchg jmp pop imul ss add or and pop call mov mov jmp in icebp or xchg and or arpl and icebp add movl cmp mov lea push loope call pop stos and sbb lcall (bad) jb mov mov ret lea dec cmp ficom xchg and inc jbe pop mov aad out sub cmp cli or lods push xor lcall xchg cmc mov jae or inc test add add adc movsb pusha push out arpl in rclb lea test mov fnstenv add jp lods cmp or add pop and sub or inc or int inc adc pusha add and pop (bad) js or pusha sub jmp push sbb lea fldpi mov jo sbb inc jecxz mov pushf cmp int xor sub movzbl push xor or sbb add push adc add ja in fiadd insl std push add jmp repz fimul and fistl push sub mov inc inc or jne xchg (bad) stos in dec jne sub stc jp xor add xor add je or push jg hlt push add or xchg popf sbb cwtl clc rcrl or lock push jmp push mov scas lea add jmp leave int3 adc adc add pushl rcrb add add cmpsb cmp repz outsb or test mov xchg inc stos mov mov inc pop fisttpll cld fmull push fildll add into popa add cmp loope pop addl dec jne mov xor loope inc xor push popf or lcall cwtl xchg mov and mov mov fldt inc mov (bad) outsl mov or inc fdiv add mov inc mov ret xchg jp insl loope loopne mov fisubrl in add or xchg mov fwait mov jo cmp pushf scas inc aaa xorl aam imul in out pop jl sub scas mov iret cmp mov subb sahf inc adcl out arpl repnz cs xor xor jmp inc push mov cld sub cld mov loopne stos mov mov in fimul or mov mov sbb lret cld jnp sbb xor arpl jne and pusha or arpl jecxz (bad) or cmp popa pushf popa and mov push dec jbe adc and cwtl push add outsl xchg xchg push jo out int3 enter mov movsb mov xchg call (bad) in cwtl int3 add dec ja addl pop arpl fiadd add cmp xchg inc in fiaddl stos and and add rcll push sbb mov add sarb fisub inc test int3 pop push gs imul xor push xlat mov push mov in adc in lock mov call mov (bad) shlb mov push pop xchg bndldx jle lods call movsb out movsl cltd add sbb fldl push mov jnp and popa in mov sub pusha inc mov sbb insb mov mov add ds stos adc jne xchg push and stos sub lods movsb lods xor push push and fsubrs adc mov push sbb pop inc fbstp adc mov mov xchg add push (bad) mov or push decl sub push dec sub pop adc cltd add cmpsb adc sbb rorb mov aaa add nop jne and or cli mov movsb stos adc inc sub fsubrs jge mov mulb scas mov lea mov add and pop pushl fsubr das imul pop ud2 inc xchg pop adc sarl inc cltd je push and dec and call shlb xor cmp arpl add movsb adc mov lret jmp xorl loopne rcrb cld movl or push rorb inc js adc cltd leave ljmp sbb nop inc push mov je pop incl stos call mov call jne xchg push cmpsb mov adc xor xchg and dec daa test sarl dec sti sbb cltd ret cmp xorb (bad) or fldl aas and jg mov dec push ds cs aas test insl aam repz dec xchg xor je sub inc mov loopne cmpsb lret cmp movsb lea cmp fs sbb and mov lds ss mov pop jmp adc and jmp add mov pop xchg into sbb push push mov jo jno clc mov cmp mov rcrb sub and movsb xchg int3 aaa and loop data16 sub xchg dec add cmp add mov inc ret mov add ret jl xchg fwait pop dec push lea add mov cmp adc push xchg inc dec push in fsts and cmp mov outsl or mov sub (bad) in add push add cmc jmp ficom stos add movsb add push adc xchg fmull iret jns push cs xor and leave add (bad) stc lcall xchg cmp adc or mov (bad) (bad) pop in fs cs adc mov nop js daa data16 jno fisubrl push aas sbb sub add pop cmp imul dec push sti inc mov adc xor lea xchg push mov xchg lods (bad) mov sbb out adc cs xor ret aas adc xchg pop adc push adc loop roll shl mov (bad) and or and xchg inc mov jecxz fmul repz push imul cmp xchg jae mov pop movsl lret push push rclb mov sbbl push out les dec mov in and push sub clc mov mov and push pop ret sub dec lret sbbb aas mov mov jg,pt mov repz insl lahf test in invd xor jns inc xchg sarb aam insb mov cmpsl nop mov stos popf dec ror (bad) adc outsb pop fldl xchg test ficomp inc push sub (bad) and inc nop dec adc vdivsd movsb lret inc fmuls faddl jo call jns int (bad) loopne into inc into repz inc testl mov push dec clc dec aam jne iret push int3 sbb mov jle lods jns cmp call mov push push andl js push sbb pop add mov and push pcmpgtb jge lret pusha cmp popa das and aaa add inc push mov and sub mov popa stos imul mov aam in cmp lahf push ret nop mov sbbb mov push inc pop iret dec and sub test mov clc clc and stc rorb add mov pop leave xchg mov roll xorps int3 in mov dec sub clc inc ljmp or jl js jae dec iret js jns jns ret add dec pop ja lret xor jno xor xchg je xchg xor or dec xor xchg xor lea andb ja outsl (bad) pop fs (bad) adc ja popf cmpsl sub jno popa xchg or stos ss cltd push add add shll mov jo nop dec or mov add dec dec aaa mov bound mov or add pop test add add fsubr (bad) push movsb loopne adc sbb sbb jbe nop inc push jbe sub fs push sbb xor cmp and jo clc mov repnz sbb xchg rol or xchg add jl ss push daa adc push adc push push fildll fdivs fcmovne or xor adc fsts adc push sub and (bad) add sbb sbb inc pop xor scas push adc scas sbb test dec pop jg loopne mov or add repnz out mov sub std (bad) scas sarl sub dec sub clc mov sbb loopne mov pop and jp,pt or es jmp adc or outsb mov test orb sbb or add add leave orb cmp adc xor push jl jmp icebp aaa test jae sbb inc xchg sub aam popa js cmc (bad) cmc fnop stc sub popa js fst cld (bad) sub push inc dec repz test dec loope rolb mov adc loopne das ret adc jmp pminub xchg xor movsb movsl popa cmp frstor in nop inc push cmp or jmp and addl push jns dec jbe jo fdivrs lcall xchg (bad) dec sub dec add call pop pop pop and xchg movsb cmpl or and addr16 test test out mov popa ljmp jo dec js ds push push or sub dec or xchg leave aad repnz leave gs or inc sbb aam jno xlat cmp xor fs fnsave mov pop or je or sbb and push mov jno cli pop push or in push (bad) les adc xor and push pushf movsb mov test pop sbb (bad) push je dec fwait shlb sbb ljmp dec mov pop mov sub daa pop pop mov adc nop inc adcb in inc and sub lock adc xor movsb and push pop call dec insb inc mov orl mov (bad) mov sbb out xchg cmpl pop sbb xor cmc sbb mov push sub jb nop (bad) iret or fcom mov inc sbbl pop jg (bad) (bad) xor mov mov sub mov and lods push (bad) ja aam jmp jmp les xchg fcmove in movsl or adc shlb imul popf adc fnstenv int and sbb dec cmp add lock adc clc insb jmp push mov outsl fnstsw adc or pop add push push int3 push and xchg and sub roll sbb adcl out xchg mov aas push and push pushl push scas pop inc pop sub add ss xchg daa or fcmovb cmp push ffreep testl add add inc or pop (bad) mov insl or out dec (bad) mov das adc sbb jecxz push ret lea cs dec or push fadds dec xchg or pop inc ret imul adc inc movsb push xor inc push loope incl or xchg jno xchg sub jmp pop mov dec orps cmp mov and iret ljmp push jp jg cmp mov sbb add rolb adc xlat aas scas iret xchg cs push movb iret out stos add dec js outsl mov sub add fisttpll nop sbb rcrb dec leave adc scas inc cs cmpsb xchg push pop dec mov sbb dec sbb inc fcmovu enter sub sub clc mov stos sbb adc sub push mov sub inc adc cmpsl mov jo mov outsl xchg cltd push push cltd dec xchg pop inc jne sub test imul mov fstp xor xor dec push push jo ja in lea ds enter test inc pop jmp mov push in or push jge rorl gs fimull or sti lcall sahf mov inc and cmp dec adc pop rclb pop xchg mov cs sbb sbb jae xchg js jmp fsubr rcrb outsb and scas mov push xor mov fsubrs insb aas (bad) int3 js mov nop sbbl test call push adc idivb test repz mov mov or aaa js push push add jo adcl xchg cmp add or xorl adc cmp adc sbb mov sub inc pop pop daa loopne flds lods sbb orb push fs xchg inc into push lods test icebp nop enter (bad) repnz sbb orb addl pop push je cmp sub fsubrs outsl jo jl das sbb xor add cwtl mov add mov add sbb movsb mov sbb out inc inc push fs push pop enter je adc outsb mov mov outsl in nop fildl inc sbb subb add or sbb mov fidiv pop aam mov push loop push push pushw jae iret repz cmp aad sahf out sub cs out (bad) push call negl shl hlt push cmp jnp add push leave (bad) push inc push popa repz rep jnp xchg mov scas mov push xchg push out sahf out sub jns pop loop add xchg mov push scas mov xchg incl je adc adc add xor imul (bad) mov ss push arpl inc dec ficom pop sbb pop mov lret pop enter repnz xchg bound push outsb fstps push fdivrs fimull lods push ljmp out lret pop pusha fild es das and cmp inc sub pop sbb cld ret add and iret and inc mov inc cmp out inc and and pop or dec call push mov loopne pusha sti loopne mov sub inc dec push inc out xor js cmp mov push xor sbb and repz test push jo enter jnp sub mov test adc sub int clc inc stos sub push push xor nop xor out ds incb sti pop cld test addr16 lock movsb or and jmp or pop cmp xor ljmp add push mov push or scas cs mov mov dec das lods repnz jl je lods bndldx xchg mov fisttpl (bad) cmp push inc outsl ffree dec add insb rcll adc in pop add ret cmpsl mov ja sbb pop sub test pop dec push call adc daa sub addl add push push jg dec (bad) mov adc enter sub pop jmp and addl addr16 pop ret aaa sbb mov push inc leave out nop enter adc dec jl jle sbb sahf mov fcompl sub pop adc and outsb add sbb cmp mov cmp jb and int mov cmp mov das mov rclb or xor movsb in lret and (bad) not xchg shll shll mov test je adc cmpl xor pop std aaa mov and testb cmpl mov or add xlat sahf lock sub xchg nop xchg sub fwait data16 inc adc cmp pop or dec leave popa mov and lcall pop pusha mov movsl add cmc js push out xchg adc es add push jp jge adc push ljmp mov mov mov sbb add xchg repz addb in rcr call xchg idivl sbb xlat jl fdivs xchg pop add sbb or cmp stos test inc adc pop xchg adc data16 pop arpl rcrb jecxz loop nop out pushw jno or mov inc (bad) fnstsw mov gs cwtl pop push fcomps inc js or pop push nop ret fidivr mov ret jnp xchg daa cwtl adc push inc ja shr xchg addr16 pop sub push pop test xchg mov hlt push add call dec and aaa xchg dec cmpsb sub inc cvttps2pi pop xor dec ljmp jmp jecxz and loop popf push cmp xrelease inc std clc mov mov mov sbb adc lahf addr16 pcmpeqw nop dec aas or jns enter jle ds push int pop mov cmpl sub adc dec pushf push dec add aaa addb rcll fs jne mov lret loop push stos adc loopne movl push inc pusha clc (bad) mov movsb jns nop pop sub inc push mov rolb pop cmp cmp hlt add shl mov add sarb push js xor pop sbb in in or push jl mov or in jne insb adc ljmp inc aad xor add sbb lds push or xchg xchg jno mov jb jno add mov push mov add cmp gs xor pop ffree xchg push push inc movsl add jb inc mov hlt jae fmuls add (bad) adc xor call sbb jne and test push mov test nop cmp pushf mov xchg xchg je sub sub movaps jno aad aad movsl and test fisttpl and push in adc xor mov in popf cli add mov jbe,pn add xchg push shrb (bad) ljmp mov xchg push mov xorl mov test out jle push xchg sub jle adc pushf testl xchg cmc adc aaa or push aaa cs inc mov leave or sub inc sub mov enter or sub mov mov jno jbe lock sub pop push orl and xor xor mov dec xchg dec dec nop dec cs adc mov rorb sub adc jnp mov test inc jecxz inc jmp jae mov pop dec add mov jns jno xor add pop cli cmp je inc cmp jne shlb sub xchg jb pop inc push adc call pop and add pop mov stos (bad) ret add pop cmpsl les sbb xchg in dec call mov jno ret xor pop mov mov jle jno cltd or sbb or sbb mov cmpsl (bad) inc or ret leave nop incl loop mov jmp xchg pop dec xchg lods iret xor andl mov add push push mov sbb stc mov dec lret jmp xchg ljmp daa push (bad) lods adc cld mov leave mov push addr16 js inc or push cwtl fcmovnb push and es jb or inc rolb push adc jne call and icebp sbb sbb pop dec nop mov lret and mov in incl nop and mov cmp ja mov in dec add call lods add dec pop jg push mov call mov pop inc xchg add aaa fs jae jge pop lea pop nop jmp mov imul pop hlt (bad) in lahf insb inc jo in test jo adc push adc in js dec push mov sub pop movsb xchg test adc cli or xchg jecxz inc (bad) push cwtl mov add cmc add js inc pop sub xchg imull jmp aas push add adc inc test imull movsb test rclb inc push nop dec movsb sub fwait jmp (bad) aaa dec adc push jmp scas add jmp outsl inc inc movsb adc sbb out ds push and daa call inc push (bad) fisttp cli inc cmp or pop pop sbb fistpl push dec lea xchg inc es and cmpsb add loop sbb dec repz adc je movd fwait cmpl push mov daa pop push fst in sub pop js lock push xor add popa or mov mov loopne test fmull dec movsb out sahf push cmp movsl movsb pushl sbb test jne mov inc test add push pop rclb or pop or dec push gs jne subl mov and pushf inc punpckhwd or pop xor das and adc orb lds test (bad) out pop xchg insb or cmc roll push mov push pop sbb adc xchg imul dec mov xor pop pop jb push imul int add (bad) push adc mov gs shl add mov ret add out repnz mov lock stos inc movsb imulb push xor rclb mov adc mov stc adc pop xchg ret sbb std fstp les jg add jo push xchg jle jne xlat adc sbb jae mov and xor js mov push movsl or sub and je push xchg jg lock mov outsl jb and test popl popa and test cmpsb inc jb jo add xchg add lods jne dec mov or adc mov jp add lods je mov sub xor jo or mov jno mov xchg roll leave sbb jne jg test and lods jmp adc or data16 adc rcr rolb adc mov push divl xchg popf hlt icebp inc aad push push cmp enter clc dec test addl jo inc push sti icebp mov cvtps2pd repnz or lahf int jmp addb leave in pushf mov add ret dec inc stos push leave push xorb and mov test add xchg push mov push inc jno pop lret pop and fnop in in sub lock cmp rolb dec enter add push or sarb roll or pop and dec add insb pop arpl sub loopne xchg sbb inc enter repz adc add out leave dec or sub cld repz and xchg add scas mov (bad) cmp sbb sub or mov jbe inc jecxz popf mov js adc je hlt xor jg lock jg hlt (bad) dec inc or nop xchg pop pop sbb pop cmc add fidiv loopne pop das push cmpsb cmpsb mov dec push push or or out and data16 jp jns jl cmp movsl inc repnz clc es pop clc sub xchg je sub and mov jl fdiv xchg mov insl xor jp inc pop test cmp jbe in mov aad inc icebp jbe mov addr16 mov mov sub mov pusha lahf add dec adc xchg jbe sbb and aad insl lock sbb mov (bad) or adc pop push sub je and pushf cmp jg mov out lret aad xchg dec imul sub aam xchg xor pop pop shll outsl shr cmpsb dec ljmp pop subl loopne adc rclb inc sub sbb add or fistpll sub fcoml iret sub adc sbb inc or loope inc or ja int xchg jle jl adc xor mov inc push dec push fs sbb adcl inc push (bad) mov test xbegin cs fsubs clc pop sbb les les cs mov fcomps adc mov adc clc xor inc out fdivrs shrl clc jbe inc sub and inc lcall sbb pusha xchg dec dec mov or jne mov and sbb mov mov and sbb and pop fildl xchg sbb and sbb push ret bound inc add mov iret add push clc xchg les dec cmpsl fcompl lds sbb or (bad) xor outsl bound push sub dec aad dec pop popa sbb sbb cli and mov cmp or movsl movsb out addl pop enter dec pop push dec xchg push push xor ror mov lcall dec jb add sti or xorb push test cltd jmp bound jns add js movsb push rclb xchg inc loopne xor aam outsl dec hlt xor rcl push push dec cmp jecxz out adc in mov jbe dec pop jg in fdivs cmp push test mov lret fwait mov stc mov xchg push insl data16 std es add sub xor xor js pusha or and and lcall lret iret adc xor inc std inc xor inc mov cwtl sub xor cld aaa rolb sub sahf sahf popf mov push or (bad) and and subb clc inc lock call (bad) jmp imul je lods xor adc sbb test (bad) lods orb cmpsb inc pop jo add add add mov and pop ja sub cmpsb cmc repnz clc gs cmp and sbb and imul pusha pop roll mov mov jl jbe mov testb inc inc add mov inc mov fwait inc inc add xor incl pop add jmp flds fmuls fucomi popl fdivrp movsl add inc add mov rolb pop dec sahf add inc lahf or add iret inc xorl aad aad jne (bad) add mov push lods jns enter enter adc dec xor mov add mov (bad) bound ret add imull cmpsl shrl adc sbb shlb mov xorl push cmp rolb dec dec movsb enter mov add pusha push scas or xor mov mov sbb or (bad) out aaa orl dec push std test inc inc sub lods popa xchg cmp push adc nop and pop xchg outsl add test mov imul adc mov pop sbb xchg or fstpt ret xchg xlat aam push fbld and inc mov lds add mov mov sbb clc jle cmp outsl mov negl inc and lds jge dec and jo nop mov lahf daa dec pop xchg xor sbb add jg out pop pop push push add push push aaa scas add pusha aam stos sbb or nop (bad) xor xor shlb mov in xchg fadds (bad) fild push aam fucom cmp es pop nop cmp repz insl aas and loop jo mov repz inc lahf mov pop mov movsb in xor jecxz jnp repz mov nop dec adc sbb pop mov sbb jmp in push ss dec ret and inc addr16 testb adc xor jb xchg ret and dec pushw and add pop adc mov or or jle or (bad) pop and jmp xor push sbb loop pop or sub xor or mov mov cmp cmp dec jae int3 loope pop sbb lock (bad) loopne loop and add inc ja mov fs jmp addl (bad) mov loopne and and sti cmp dec dec push cmp mov dec xchg scas lock sbb pop mov push pop sub dec jne rcll xor mov adc mov sub ret or xchg loop add fwait mov sbb and or dec add das movl mov ja sbb ja inc cmp sarb and fcoms sub adc in pop sbb or outsl inc and inc call add add push out pop sti add imul xor (bad) sbb in mov fisttp dec xchg dec insl in rclb into leave out out scas in pop inc xor in dec js int decl add sub pop fcompl (bad) xchg add lods jle ficoml pushf add push push add push clc dec (bad) inc aaa dec sbb add movb inc imul insl jo das rolb jbe or cwtl mov pop or pop add inc dec adc cmp test pop xor lret int int jno xor adc adc rorb push iret or rcr add jmp adc inc pop pop enter dec rorb cs adc pop enter mov cmp jo push xchg adc sbb mov je add cmpsl sbb pop cmp add jns add dec push sub es push mov or jb arpl fs add or xor gs cmp daa sbb js and imul cmp ljmp mov loopne cmpsl jmp jle fcompl fadd sbb in pop add push or clc aad into mov jb add or aam mov or push cld js xchg xchg call push ljmp cmp lcall fldt pop mov mov inc rcrl and xor cltd add rclb xchg or outsl sub sbb sbb cvtdq2ps lret repz test or lret cmp mov push mov cmp pushl inc js movsl shrb mov pop xor and sbb inc cmpsl imull pop xchg and push cmp jns out push push or or pop or or cmpsb push cmpsl test hlt adc push adc adc cmp (bad) iret jnp sub or or popf out cmp or or push (bad) lea adc movsb mov fcomps pop add lret int xchg movsl (bad) push mov pop iret and mov sbb or or pop and push jmp push pop adc dec adc add xor jle std sbb cmp into lea jmp pop add imul mov je pop dec or loope pop add hlt lea mov push jae or push aam xor lret push sub add jl aam and rcrl rcr jnp (bad) cmpsb xchg pop test xor stc testl add stos or fbld sbb in lea enter xchg mov es pminub or ret push or in sub or push dec pop (bad) in (bad) and push ja jns lahf inc pop mov movsb adc fcomip nop out or scas mov xor fcoml imul add mov jo and sarb fadds push jle cmp push in loopne dec inc scas test sub xor sub and pop and scas lret mov xor arpl rcll dec xchg pop (bad) fwait shlb dec dec into mov out adc inc test sub lcall outsl cmp cmp mov inc push or pusha xor in jbe (bad) imul mov imul mov in pop add dec loopne loopne movsb or jp mov add pop add fstpl fwait push (bad) ret out (bad) jne rcll mov adc loopne jb lret pop inc pop mulb call jecxz stos add daa adc sbb mov cld mov arpl push or mov ljmp push outsb add fdivrs mov dec jnp outsl mulb mov cld shr adc nop jmp xchg dec jne mov orl adc mov mov xlat (bad) pop fnstcw inc popa lea adc addb rolb mov fdivl add and sub ficoml push pop ja insb add jg or ja or jbe (bad) mov imul sbb outsl aaa mov pusha and mov xor mov push and test fistp jnp aad mov xchg or mov in inc int jp adc mov push int or scas dec pop push add add push xor adc cmp adc dec popa mov in or jo rclb dec pop jmp test int3 int3 push jmp nop scas push mov add adc adc sbb pop mov or dec or sti xor fcmovb mov faddl jmp adc sub xchg repnz stos movsb (bad) ja adc movswl bound add or dec push add or sub or popf pop mov dec in lods (bad) or xlat inc pop xor pop or sbb mov popa jo ja cltd xchg jae lods nop das pop and shrb mov cld or ret ss or rcll movsb push cmpsl daa xchg in pop mov push push hlt scas sub call push outsl clc pop pop add inc mov and daa and mov inc clc or jae mov in in mov or mov push xorb jp pop cmpsl insb pop xchg mov and pop cmpsl (bad) fwait out cmp lods and and dec and cmp insb insb dec push je nop int3 ja xlat and dec test fdivrs cmpsb bound add fcmovbe pop call or sub push test int3 pusha cld sbb sbb fisttpll or mov dec dec cmp ja fiadd adc push inc mov or or fiadd (bad) lock add pop jae and dec mov mull push pop cld stos sbb leave adc inc fbld add nop or outsl into movsl and sub and insl lret ja ret das push jbe cmp push push mov or push int3 pusha fldenv fcomp jge incl (bad) addr16 jb mov imul insl inc push add mov cmp call jo sub dec add xchg sbb adc les hlt push adc add or cwtl push adc lods nop add addr16 and add inc lahf call pop xchg orl push mov fildll nop outsl faddl insb cmp fcomp aas cwtl sbb or fnstenv push in ja cmp mov push cltd jp jno inc sbb and sbb std imul les repnz add cmp stos dec or inc jns sahf leave sbbb mov and mov lods (bad) inc mov mov pushf xor dec or mov fisub mov ja mov and adc and add jns push daa sub mov dec add cmp int3 (bad) mov cmpsb push and xchg andl rcrl pop (bad) mov arpl push enter mov stc andl and aaa in repnz push pop pop inc cli test or adcb inc inc jle or mov mov mov xchg or dec das pop enter pop pop jns jns movsb adc add cmp xor jae loopne xor imul xchg and push sbbl inc dec mov adc pop clc (bad) adc inc push dec or je jbe and add jmp inc into sub sbb dec sahf mov pop rorb in (bad) call enter cmpsb push test movups dec dec ds xchg cmc mov push scas pop test dec push adc enter and es pop dec and mov sbb cmp sbb fmull ss clc cwtl sub das mov fstpt sbb bound ret mov push inc push data16 xor inc fwait (bad) incl mov inc mov cmp adc xor adc jge adc in loopne jbe inc addl xchg push lahf add bound es test cmp dec dec jmp sub ss sub dec sub inc inc or adc dec sub xchg or pop lahf je sub and mov inc enter fist ds pop and pop int3 adc loopne (bad) xchg sbb ret xor cmc pop sub cmp add mov xchg scas jno xor (bad) mov and int xor and jge jne (bad) in cmp jbe pop pusha jo xchg cmp popf outsl notl adc addl inc enter hlt cmp xor out xchg movsl xor in sbb popf sub push gs pop or add cmpl pop pop adc hlt push xchg out xchg int xor in out inc sbb mov dec insl and pop sub (bad) addr16 test loopne xchg out (bad) sbb sbb iret repz mov mov (bad) inc mov pop sbb add inc jne clc jmp enter mov add add lods sub cwtl std faddl movb jmp test jno daa and mov and insl int jbe call mov mov ljmp pop push out fcmovu (bad) mov push loope imul scas ljmp test pop nop jge cs les (bad) pop shrl xchg mov mov xor push mov hlt mov cltd push outsl adc jl push addr16 mov adc add int3 jle neg adc dec or sub push call mov jmp add mov dec out test push adc pop imul xor or pusha in dec or or insb inc dec pusha mov or pop adc ds jbe adc jae mov mov mov popf xor xchg or mov pop inc pop repnz ror xor lcall ficoml cs clc outsl add ret or pop jne int3 xchg or jae inc xor xor sbb popf mov inc dec jnp hlt sbb sbbl lret sbb dec (bad) aas pop hlt sbb sub mov out js adc call call xor lock call in in loope cmpsl imul xor cld fcoml cltd add adc addr16 sub inc out imul les rcrb out in sub icebp sub jg jecxz dec fcomi xchg push push mov sub and call out adc mov loop icebp add scas pop lock push and mov jp mov sbb out add lcall dec sbb mov cmp xchg sbb xchg mov js xchg push shrb pop xor inc mov xchg xor mov call ss add fs call jae sub jecxz push fmull shr sbb mov push lret pop xchg or test or in add int3 (bad) in mull fstl clc dec cmpsb mov add push jmp sahf jge aaa xor les outsb neg mov daa gs mov push push lds sar sub sbb add je outsb xor sbb jmp push ret or fdivrs and push mov jge xlat aaa test or imul fisubl push movsb mov xchg (bad) and mulb ds mov (bad) out add mulb fbstp div mov add mov sub add jmp rclb jle pop pop pop pop pop movsl or dec sbb or jmp adc cs sbb and dec loopne xbegin imul push sub loopne sub mov xor add mov jbe jge jne add aaa popa jo push inc outsl push push (bad) dec fdivp cmpsb or cmp testb in sbb inc int3 sub adcb addr16 sbb xchg call pop push or addr16 lock cmc ret jnp rorl mov loop cld fstpl lock ljmp je xor mov lahf xor inc rol mov clc mov inc dec lods jp inc repnz push movsb data16 xor pop je mov mov lds movsb insl xlat and sub nop jge data16 pop xchg jmp sub inc pusha gs js (bad) mov aas dec and test dec pusha inc les mov push ror fdivs aas outsl add mov ss (bad) push inc pushf and pushf push ds mov or add mov jne (bad) mov cmp mov cmp cmp jmp stos data16 subl or inc add hlt cmp ja les cmp ja xor call pop mov loop shrb sub sbb mov and ljmp iret xor fcmovnu js pusha or scas rcrl test arpl add (bad) sub dec xor xor sub adc mov sbb xor sbb push mov orl adc (bad) icebp xor sbb cmp xor cmp adc pop jmp inc mov inc xlat out pop gs adc loope mov xchg inc cmp jge sub out std clc xor add scas xchg add test xor xchg push (bad) cltd pop jb (bad) mov push mov mov call loopne xchg and push mov es fcomip push fstpl sub hlt fs shll out clc decb (bad) xor loopne or mov dec adc cmp jg pop sub push imulb and jnp nop jmp insl rorb daa jle xchg cmp flds xchg in imul les jne sbb sbb cmp adc fcoml xor dec adcl sysexit std inc xor in repz lock mov outsb ss xor out cmp sub and fwait cs sub xchg adc rclb stos and mov xor sub cmp lea arpl sub and dec rorb fsubl fs testb jmp jl pop test dec or and pop xor and push adc mov sub add push out cmp nop xchg sub ds aaa jmp add (bad) push and dec bound xchg mov and imul ret pop lods xchg and mov adc (bad) lret cmpsb sbb int3 pop push je nop in push int3 mov push aas fidiv xor addr16 lods mov adc push xor cmp cwtl (bad) mov das sbb fcoml mov dec add loop push sbb mov mov lds lea inc mov push xchg dec pop xchg mov push cmp mov push xchg mov xchg mov fcompl pop imul add loope or cs inc aaa xor mov in (bad) sbb (bad) add mov pusha jno sub pop push shlb mov inc xor adc pop movsb aas lret mov push in test call add mov xchg inc pop push mov add mov cli or mov mov mov ret sub jbe out ret hlt jbe lods in ljmp jg ret cmp jae mov add adc and push js lods mov idiv pop mov shl or mov stos ss outsb or add stos jb repz adc xchg repnz (bad) out (bad) xchg mov mov cmp ja or gs adc fldcw gs cmp pop inc insb les add in mov cwtl fstp cmp jbe jle fmuls push dec adc data16 jb sub pop xor push mov daa clc push je mov push sub xlat mov nop add inc (bad) ss inc pop jmp or mov adc pusha shr mov sub jbe imul les shll mov lret gs adc add rcrb fsubl adc leave rol imulb icebp jbe lods cmp je sub lret loopne mov stos dec add xchg pusha not loop and pop loop dec xchg lea xor ffree adc cmp daa sbb xor mov push inc inc into cmp mov add out jecxz mov aam and inc mov dec movb dec mov sbb dec mov fstl jle and ret mov dec test leave cmp cmp and lods shlb in pop sti dec imull shrb xor movb or inc pop cld add ret rcr orl pop andb (bad) inc subl inc sets pop bound dec test sub xor and sub rorl add xor mov and ret fidiv es add orb test xor pop xor mov clc sub ja mov mov mov ja and mov mov cmp push movsb stos add push lods pop and loope leave xchg pusha or add into je inc loopne sbb sub mov mov sub pop push mov add ret in or and cmp scas push stos xchg sbb imul and push pusha cld sbb lods adc push sub cmp pop pop stos (bad) pop addr16 fstpt pop roll hlt xchg mov cltd (bad) inc insb lea stc add test add jge outsb lods and lcall imul outsb cs mov popf aad (bad) and push mov and fmull mov sbb add cmp ljmp mov test mov cmc mov pusha inc or outsl andl mov outsl pusha dec and popa adc or push sbb fldlg2 jg xchg mov inc cmp jne fucomip out add jmp mov adc in mov out add out repnz jo bswap and es mov movb outsb movl mov in mov sub insl pop inc cmp ret pop mov pop or scas or ret add add sub sub ljmp aaa fwait add jno jmp add rorl push inc add lret pop sbb fcmovu mov xchg dec mov fist mov pusha inc pop pop dec or add int mov jne push fimul xlat xor cltd pop les addr16 (bad) (bad) inc or dec cmc push loop inc cmp mov lea mov lock outsb pop cmp fcmovne pop sbb cltd sub daa sub push inc cmp push mov pop sub push push movsb mov mov push pop fcomps push push push insb cmc sti add dec pushf js or add and ret and cli mulb insl lods bound cwtl aam dec xchg push cmp adc scas call adc inc data16 push pop jbe xor mov in cmp sbb jl sti xor pop jmp mov cld mov imul add and cmpsb sbb cmp outsb inc into add jge ss shrl xchg push out cmpsl adc pop clc lock nop jmp xchg gs xor or movsl jg out dec jl pop call ret mov add inc pusha sub adc add push and or fiaddl adc mov xchg dec dec lea sub xor imul and ficoml xor das adc in adc push or insb and xor and pop dec leave in mov add mov lea or les pop push (bad) inc test pop or xchg out inc cmp daa cmp mov dec lds mov daa fs cmpsb inc jae cmp lea sti add sub cmp jg leave sub ret mov mov jae or pop mov popf pushf jle out stos popl mov loop push push je enter xor pop dec test sub push outsl add push rep cmc hlt pop push cmp sbb js adc mov outsl dec mov ss jmp or cwtl insb (bad) (bad) sub push mov insb inc loopne dec pushf pop and push push insb test xor sub and cmp cmp mov jg xchg icebp or add outsb shll popa and pop ret lock or cmpsl divl flds add sbb or push pop rolb pop xor loopne sbb push sbb pop jne cmpsl and sbb lret incb add rcr adc sub dec or cmove dec loopne inc cmp sbb iret dec sbb pop ja lahf dec push imul lea push or mov cmp lock mov lock mov jecxz or mov or inc cmc nop mov inc in es pusha pusha pop pop shl nop out and push pop enter sbb pusha out or inc test loopne jmp xchg inc clc in xchg adc or push ja inc xor es lret sbb nop sahf out das add pop pop movzbl lock mov push add insl adc pop pop lods pushl cmp aad lcall into aas mov movl and rorb xchg cmc sahf cwtl push xor lea cmp xchg jne lock je loopne jg (bad) aaa push sub movzwl sbb add ret jge imul stos mov mov jge push or push pushf imul and xchg sbb adc push mov shl lcall clc inc pop clc loopne cmpb movsl pop inc or ja inc mov jne and or and sbb mov in fmuls pop pop mov bnd push mov and or lods daa icebp jle mov push div pop cli shrb pop mov inc mov or inc sbb mov dec bound add and dec jl stos and pop shr int cmpsb mov jne jle push and fnstsw mov jmp jle cmpb and or push pop movb mov cmpsb pusha jle clc inc test stc add pusha pop jae cmp jne popa adc xchg ret popa push test inc inc loope push mov ret inc xchg jl mov xor sbb cwtl fmull push push pushf or cmp jge shrl fistl or pop xor cmp adc dec mov sahf dec arpl sbb inc adc cmp ret push add (bad) mov sub clc push (bad) jbe inc xor push dec int outsb lods dec mov push push mov cli sub test rorb nop ret aaa insl cld mov hlt fs pop inc sbb enter and adc or jo mov test inc and add rcll scas jb sbb outsb add das inc mov xchg add lahf jb inc inc or cld mov xchg mov hlt incl sbb fildll fdivs sbb and adc inc sub lock push push or fstpt neg adc cmp push mov xor push ss cli ljmp xchg div add push sub fdivs push mov inc shr ds mov pop or mov ss mov lahf or (bad) and xor (bad) add mov push aas data16 dec add (bad) imul (bad) fst orl (bad) jne fldz jmp push mov add mov or inc sub sbb in fisttp loopne loopne adcl cmp stos push shll outsl sarl fstsw not and scas sbbb pop mov decl xchg xchg inc push sbb or outsb sub sub dec sarb mov sub sbb ja nop pop popa or insb outsl popa je mov in mov addr16 inc jnp fisubr jg mov pop mov lahf add fwait add and or dec out scas inc cs sub mov iret mov pop mov sti inc insl je (bad) or push mov add dec sbb out fs and clc xor pop jns inc sbb mov mov mov xor jno ja cmp (bad) add pop and scas cmp fldenv scas sub in xor movsb pop dec shl daa inc insb shrb pop subl mov inc jne ret sbb insl cmp insb inc shrl pop mov mov dec inc inc push jae adc rol jnp (bad) stos jg dec and jb mov in test incb cmp jp addb in mov and pop push jo cmp push fisubl (bad) pop pop push cmp jns sti push and push add push jmp pop sub xor pop (bad) incl sub mov dec xchg push sub or lcall mov inc mov dec push mov pop xchg push sbb test xchg sbb add cmpb pop push push inc jno or leave add sbb xchg adc mov xchg aas mov adc xchg pop inc test je mov inc fldt cmp scas push daa cmc adcb xchg leave (bad) mov cmp push mov mov add pop nop iret into sub fstps push xchg sub sub scas gs js in pop insb push js jb jb rorl rcl aam jb jb (bad) xlat fsub (bad) jae (bad) pop cmc cmp jl jbe js push cmpsl sub push push in push adc cmc data16 decb and cld mov add push pop pop xchg (bad) mov sbb cld push add subl sbb enter pop mov jge sub dec dec gs or push and adc adc call xor xchg pop inc dec or sbb fsub pusha sub mov and and sub dec push jne imul test leave insb (bad) xor int3 cwtl negb lods (bad) ficom pop push pop inc mov jmp add or inc insb sbb adc push pop (bad) dec adc (bad) lds test adc or pop sub adc popf dec je icebp pop jecxz mov sub sub adc push adc mov lcall sub outsb pop xor sbb dec and sbbl sub sbb outsb push dec and dec push xor adcb test rorb or fs pop gs add adc fcmovne inc pop ss test xor popl and sbb cvtps2pi sub bound mov xor sub jbe xchg out dec mov push inc cmp or cmp or inc sub xchg sub pop dec push in and jae ja pushf pop pop dec cmp movsb push pop push mov and xlat mov scas push subl inc cld stos mov push dec add add mov inc sub pop rolb push pop lret fist add adcb in fcomps sub dec mov or movl pop mov adc fs jge lret mov push clc xchg push les pushf insl jnp fdivrs pop push nop pop push (bad) pusha ret push (bad) pop das insl push sbb imul mov pop add jae sub call sub jnp push adc jns,pt scas das (bad) cmp add (bad) jbe adc cmovno xor dec add test adc adc pop test add cli or or adc (bad) dec jmp sbb adc das sbb pop in cmp cs xor pop mov andps dec pop lock test jecxz ficoml cld daa js aad inc inc push push roll jmp sub es cmpsl outsl xor pop add xlat loope cmp dec dec rcrb adc or bound push lock dec push add push mov es clc sbb dec add cmpb lret movsb in cmp cmp xchg pop or xchg movb and test inc aam es add push dec out nop adc xchg nop aam leave movb or pop (bad) pop pop and clc cmp adc inc pop test mov cltd and sbb test inc outsb push scas or sahf mov push hlt dec rorb fs sub hlt les pop xchg pmulhuw pusha mov xchg xchg cmp repz insl jne mov movsl iret repz aaa inc movsl ja cs loop scas cmp pop sbb and and les ds movsb es adc out mov add repz sub je or je or add add add add fs cmpsl shll mov sbb fwait dec and adc divb xlat mov sbb push mov lret lahf push adc out sub or add cs push daa iret leave xor add mov push inc or mov lock xor in push es in or out pusha mov into movsl push adc movsb bt nop push adc pusha fcom jge push mov cmp fldl leave ja xor movsb pop mov popa scas js ret push loop cs add faddl in popa cmp enter fs mov std or add add cwtl xchg add xchg cmp insl in push in je fistpll fild xor dec aas xchg jmp icebp inc rcll lea add addl mov push mov xor inc gs dec add or les hlt fldcw inc jno push scas lock fist ret movb add mov inc lods pop push adc mov lea push (bad) mov bound push add mov and push jp outsl push in and into clc sbb dec or lea push dec in inc and sahf lret rclb or ret mov bound push outsb inc fs add adc in mov sbb adc fsubl mov add xor xor push mov pop rclb add adc mov bound lods pop nop nop out lds push dec sahf adc data16 es push or or int adc inc aad inc or movsl mov add decb or inc jae imul and mov test push xorl sarb jnp cmp xor addr16 sbb sarb and jg adc cmp push jb leave js ficom push aas inc imul nop loopne (bad) repnz (bad) cmc outsl pop and xchg push or pop fcmovnb xor add jb sti or inc fs mov sbb inc rolb and dec or icebp mov pop mov inc insl jno rcr je neg add mov mov xchg and adc inc fs or cltd inc imul fstpl (bad) mov out aam lcall mov mov dec nop hlt imul imul pop int3 incl add call shlb inc in or dec fiadd pop mov cmc inc inc fcomps jnp pop push nop adc or or lea adcb push movsb mov and xchg sub adc pop int add add jae sbb pop inc or jnp add test inc mov push imul jo xchg fs iret dec test push cwtl shll outsb xchg aad std lret add or stos lcall cmpsb sub and pop (bad) decl mov add cmp xlat xor sbb adc or dec loope fadds in mov test (bad) adc mov outsl pop popa sbb nop dec enter sbb ret add adc adc or jo mov imul adc (bad) lods mov jo add daa sbb or jbe sub sbb js inc inc (bad) outsl and xchg jp and sahf xlat aas mov mov (bad) cmpsl cmp or sbb inc ss pop and sbb add cmp xchg mov (bad) push mov mov mov mov jmp push mov dec movsl or mov dec cld mov pop or jmp inc pop xchg dec dec or or jle jns and cmpsb lock mov xor hlt pop fistl sub add out dec shll dec mov loopne test jns sbb mov xchg xchg or jns in push out adc addb adc subl push adc inc outsl je (bad) in jmp adc push mov pop inc mov add int3 cli addb inc movsb imul or sbb stos or push mov push push mov mov test loopne add stos roll ss inc fildl dec or sub mov sbb outsb js dec (bad) add mov insb push imul and xchg hlt inc push push and or (bad) jae loopne inc dec cltd jmp dec nop mov fsts faddl aaa mov jle test sub adc lret jmp movsb add and cmpsl mov pop in lea stc add gs test mov ficom aaa sbb es push ja (bad) add or shlb enter aad in add push cmp test jmp lret gs ret mov add push mov xor iret sbb ja inc nop push add dec dec lock jo hlt cwtl pop pop jno,pn inc (bad) iret lds pop repnz and test fadds or jo and cwtl test add aam das je aaa in push push jne pusha js add sub push push adc arpl push jmp push test jo and push lods pop xor pop enter movsl fwait and imul mov mov push adc push adc cmp test push push cmp adc outsl push cs idiv clc cmp pop les pop dec push jbe jb test bound rorb pop push enter cmp jo pop enter adc inc je aas dec mov add rolb jbe push mov push and cld jp loopne or cmp mov out fld test adc mov pop xchg mov inc subb jnp and leave mov adc fadds pop pop cmpsb cwtl pop or add sub xor icebp and sarl cmp es sbb and rolb js dec push cmp cmp ret xor inc cli cmp and jl dec repz addb jge adcl push push mov and fucomi call jecxz ljmp popa in add negl ja cs jle push fimull ret idivb or out lahf (bad) and push adc push xchg jbe sub jle and addr16 xchg sbb add or push add cmp dec xchg push pop lods push fnstcw sbb inc sub xchg imul (bad) repz jns cmpsl ljmp xchg (bad) mov (bad) or or push enter es testl sbb ds cmp movsl push fistl test sbb jp test push pop xchg mov aaa mov loop add push dec test cmpb or das pop icebp or push sahf inc (bad) fsts es adc in push insb push jb je daa in in jp jl js or outsb insb repz mov dec push mov or inc dec dec fadds ds stc add sbb xchg dec mov hlt pop sbb mov dec mov nop lods lods test pop repnz mov cs mov inc inc (bad) ror cs and enter xchg rolb aam mov in (bad) push cmp adc pop push loop push and ljmp or cmp in xchg xchg dec cs pop es lock sub dec and movsl clc mov leave lret add repz icebp push or outsb jmp cmc dec int adc adc adc in jne sbb dec leave enter cltd sub mov sub sub cld add leave in xor cmp dec cmp mov stos inc inc gs inc cs test jb dec push pop push nop xchg dec cs pop cmp xchg cmp pop rcrl adc aaa and pop mov dec enter cmp add pop jb jp enter jl js push cs inc in lret push inc mov and andb inc cs mov mov out inc mov xor jb sbb loope jae push add sbbl enter enter ret nop lret cmp and hlt jb fs hlt int3 enter pop rcl or aam and rcr add in and mov sub lock xchg out int3 and dec in jge loopne xchg lret enter repnz je mov xchg pop pop sbb repnz (bad) jl dec cs inc fdiv lock arpl pop aam xchg lret dec cs add (bad) shlb lret add or jno jmp les push and xor outsl in add inc adc mov mov rcrl scas xor dec in nop or in les outsb and cmp loop out add fsubrs add dec mov xchg cmpsb daa or inc mov ret clc adc add mov push xchg jle sbb xchg push mov add mov or jecxz rcrb lahf xor test mov pop add lods add pop and mov and xor cmpsb enter lea or rclb in inc or push cmp dec mov out add jl mov sub add adc jnp or enter dec push loop push out jno xchg (bad) xor push frstor xor and cmp and pusha cmp push push cmp into rolb mov mov xchg push sbb push sub push push inc gs xchg adcb dec push sbb sub rclb loopne push dec jmp mov daa es scas mov push aas xor shrb jo push nop nop mov add sti jg xchg inc and mov nop xor mov add and or (bad) add les das mov cs aam and add pop adc mov mov mov mull xorl stc or das lea in sbb push imul popf nop adc or movsb inc sahf cmpl inc ja pop sbb push in xchg pop cmp cmpw mov out gs icebp sbb mov or ds cmp mov (bad) hlt icebp test (bad) xor jo ljmp js xchg in movsl mov nop or ret add cmp xor mov dec add push push adc adc cmp cmpsb jne nop push mov jae push mov and fistpl enter push or out pop sub clc or xchg pop add lds cmp jge or fdivrl push shlb insb mov mov mov pop adc push scas jmp out push push mov inc xchg mov nop pop jl mov mov rolb pop cmp jl arpl lea scas mov data16 dec dec inc xor push push dec push outsl push dec jns (bad) out cli pop dec push aaa push dec jns inc pop dec insb jo sbb (bad) adc lods mov nop mov push pushf and arpl imul or mov int push pusha push fdivs adc loopne cmpsl test repz push pop je push sti xor int fmull pop in pushf pop cmpsl stc xor and jo inc pop ja jl insl aad adc adc mov test int sarl (bad) loopne mov out jl lods xor notb movsb cmpsl push and cltd lock jbe lcall fs in loop jns out mov jl inc repz out push ds mov pop push pop icebp sarl sub push inc push dec rcll lcall push fsubrl scas jge jne sbb cmp or add mov and pushf ja mov inc mov fs mov push sahf imulb test (bad) repnz xchg clc out cmp push push jns (bad) ss push or dec mov jnp jp cld test sbb dec repz pusha and jo push mov fs divb cmp loopne ds flds inc outsl adc popf test dec repz push idivl out mov mov js js dec push push push push movsb push push push or fsubs divl lock (bad) lock mov push sti fidivr xchg push clc pop mov push cmpsl jge dec pop jo inc add ror (bad) or fcompl lods pop pusha iret repz push cwtl mov push shlb (bad) mov adc test push into notb push test scas fmuls jle out mov or mov scas jb shlb jl hlt inc es dec je add inc mov inc adc add xor mov rolb ds dec (bad) jg div and andb push lret int3 enter enter fcomp sbb lret (bad) loopne jecxz in pop mov adc mov and fwait mov popa je xor xor xor sub adc xor mov push push adc add (bad) sub mov popa pop and ret lret jg xor push sbb lock xchg xchg scas (bad) add es clc inc jae jns ja push adc and sahf out sahf xor inc dec push pop jns out pusha push jns out nop cwtl mov sahf mov ror fdivrs out loopne lock jae je out fiadd adc and leave in inc xchg add add fs fs gs dec xchg fs mov xor fs js dec jns sahf mov push jp jnp and sahf int3 pop les paddq sbb sbb cmpsl (bad) xor jns pop add add or add add mov fldl push push lods pop inc arpl pop fcomp mov jg or jp addb pop add lods fisttp push mov or cmp icebp rcll (bad) jo inc incb nop movsb repz repz aam clc out sahf out aas sbb cmp sahf out sahf pop insb js pushf lods ss jns lmsw add cli (bad) adc push jl inc inc popf sbb inc xor jmp jl lods imul add aas or xchg or xchg pop test popaw jg sub jns (bad) push or jle sbb subb negb add pusha aas adc mov push jo add push negb aas adc fisubrl mov aas push in aas push cld repz mov jg or push cmpsb lret and sti xchg cmp dec cmp iret repz in pop push add add repz bsf loop iret repz adc mov adc sbb cmp repz sbb push adc repz test rorb cmp repz lock out sahf cmpsl sbb inc add out sahf push push fs mov pop movsb push out sahf xlat and dec repz add or repz cmp pushf push add int3 dec in clc sbbl inc jns out mov mov nop mov mov lahf out sahf mov or cmp repz and cmp loopne ljmp (bad) (bad) jbe (bad) cmp pusha mov or push (bad) int loopne ret add jle frstor cmp jno adcb pop (bad) in sbbb out or mov xlat or lahf or mov sub dec imulb adc or addb and mov dec insl ljmp inc pushf shr dec add iret repz ror in cld out jns out cld sbb cmp pop jns out push pusha push repnz nop mov mov mov testl mov and jbe,pn xor shrb adc and xor sub pop jle aad mov movzwl mov daa daa fisttpll add (bad) daa daa daa adc adc je sub popa xchg prefetch add lcall roll addr16 icebp pop in in adc push xchg in push adc mov test rcr push or int3 (bad) fadds fucomi cmp xor inc pushf add jns and xchg into and out cltd rcrb jl movsb lahf out sahf mov aam clc or repz sub push repz repz fcomip cmp mov jbe jge cwtl mov push aas add push fdiv imul pop test imul dec mov popl inc dec adc xor aas (bad) fistpll inc mov or (bad) push lsl pusha lods push std repz repz cmpsl stc cmp stc lock add negl imulb out push repz jns out mov mov sahf mov enter jl out in jmp ljmp and xchg add out mov adc mov ret cmp or je aas add ljmp or or add sti fcmovb lock xchg adc js inc adc sahf inc mov lcall add push movl dec pop pop outsl inc add out mov adc push in je add das cwtl loopne test add adc out or add add mov xchg mov in ja pop add jg repz xchg stc mov repz cld std (bad) (bad) repz repz (bad) test jns in cmpl push add mov call out or lahf ljmp call push sldt inc sti test sbb sub cmp scas add cmpsl and iret repz sbb cmp cmovle inc sbb jp push dec fldcw inc and adc jns cmpsl ss xor pop out sahf out js pushf test out sahf mov dec adc repz xor fs repz pushf mov cmpsl stc cmp fsub hlt or cmp repz sub push push fs repz repnz nop sahf out iret cwtl mov rcrb cli push adc sbb scas repnz invd sti jg inc aaa sti fcompl xor iret int xchg aas aas adc loope lahf push out addr16 in leave add out ret rorb iret ror movb call (bad) in mov scas and xchg push enter xor dec adc fstpl sub pop cmp ret add (bad) mov sti and dec fsubr and dec lods pop sub les lcall lret sub decb rol std mov ret xor mov mov pop lret aas loopne scas sub repnz sub inc scas dec sar in jg jo sbb pop or lret dec xor pop pop pop lock jnp (bad) (bad) (bad) repz imul dec jp cwtl jg out jmp dec push scas inc sub pushl dec outsb and fstl cmpsb aam dec cmpsl mov aas mov mov jo (bad) movsb sbb pop std pop addr16 add (bad) idivl push dec std xchg adc mov dec lret imull pop pusha pop aaa mov pop dec or stc mov or fistl in scas in lock cmc sub lods std fwait mov and in addr16 ret pop (bad) int3 int3 mov mov inc xchg in jl xchg repz dec (bad) imul fwait push stos mov mov mov icebp shll lret int (bad) in jns pusha imul or mov stc lret push sub pop cmp xor pop dec push mov mov (bad) pop stos dec pop sbb dec push sahf das sub insl xchg pop std test jle repnz jle stos sub lods sub mov insl pop sahf or cmpsl sar sub jg mul dec mov lock inc mov and jecxz icebp out in mov loope push jbe dec jl fs orb cld addb adc subb dec xchg fildll mov js pop sbb and xchg push jecxz push xor stos pop push fadd ljmp mov pop push test dec (bad) mov mov lock adc mov lret xlat (bad) (bad) out lret pop fstpt inc dec push push into scas loop pop mov es icebp sar xchg sub mov enter not jbe lret and and adc mov es in sub jno dec inc outsl cli mov aad pop aaa and and pop mov xchg xchg je mov lods pusha arpl dec divb aas sbb jecxz lock sar and xor pop mov mov xchg push jmp icebp cmp dec dec out aas dec or inc dec mov faddl sti mov adc mov fwait or mov cmp roll sets test cmp test icebp addr16 dec jo and imul push dec in lcall and (bad) sti dec fimul sbb add in andl sbb xchg xor dec push push lret dec pop imul (bad) mov and pop push cmp mov lret repnz lock sub inc imul out xchg negb pop cs cli in (bad) push aas lsl test and pop add pop subb cmp pop adc mov lret (bad) stos fadd stos dec cmove xlat cvtps2pd and mov out mov pop push jns jmp outsb lds insb mov and loop lahf xor out clc int lcall outsl mov adc je xor out add jle incb mov dec sub lds fs sti sub arpl rcl xchg push inc insl mov inc jp mov sbb pop mov mov enter lods shll xor (bad) mov mov jae inc push aaa sub xor arpl dec mov bound pusha inc dec mov mov pop dec es and test pushf in and or lods mov fwait mov idivl ds aad push aam or push dec dec xor sub pusha mov arpl (bad) aaa shll mul scas xchg (bad) dec mov lods sub jnp enter mov pushf dec jo (bad) dec mov lret (bad) mov cmp or (bad) dec jo push mov cmp mov aaa ja mov mov mov xor cmp pop enter loopne in add ficoml push cltd std lods adc push scas jnp imul mov imul test scas popf std sub jge mov in (bad) cld imul and iret cmp pop lret cmpsl xor or xchg jns mov ss mov mov adc dec icebp xchg adc in (bad) jg out pop enter (bad) imull push je cmp push aam add push mov dec xor rol adc clc loopne jnp fcomps or sub mov cmp jecxz scas jecxz xor sub mov pusha scas mov lahf lock pop cltd out call lock jb dec and cmc jmp dec faddl sub fisub scas sub out bnd lret scas pop ds leave loopne push (bad) mov dec sub rorb in hlt inc daa jno sarl imulb push sahf jl lds ljmp pop pop sub pop cli xlat movsb add dec outsl dec adc hlt pop rorl cmp enter pushf call sub mov movsb mov pop xor cmp scas xor jo shl pusha movsb sahf mov loope sbb (bad) lret xor push cmp stos mov loopne sub add xchg or in jg mov scas lock pop dec mov pop mov enter adc sbb cmp jo jg sbb mov cld cmp sub jmp stos add ljmp icebp sub mov push or adc xchg movsb imul mov (bad) nop test mov popa hlt (bad) cmp dec xchg cmpl in xor mov push ds test sub mov mov lods dec lods mov lods inc mov mov fiadd in aaa dec mov add outsb mov shrl adc int jo sarl rorb int3 jle out fcmovnu std inc cli dec lcall les mov lcall lds je (bad) es bound mov mov xor lods call adc (bad) das fbld mov dec loopne jmp sub hlt enter cli dec or pop jge dec (bad) jecxz repz or shr adc pop cmp popf loope push repnz dec sahf pop adc nop mov cli or pop (bad) sbb and rclb pop pushf dec js aad adc shrl push adc adc stos sub mov mov mov fmul and arpl jg pop xor aam mov addr16 dec in in outsl mov jl sub mov jae jge mov dec test mov dec shl sub mov (bad) push loope fistp out outsb pop xchg mov inc loopne and ficoml std in shlb mov cs pusha and xor addr16 sub sub sbb jecxz inc aad add hlt rcrb pop or nop scas inc xlat js mov push inc or adc mov cmp add sub mov (bad) cld imul fsubs cmp ss enter mov mov adc mov cltd std cmp roll movsb jmp mov sub dec inc sti lahf sbb mov and xchg mov push loopw fadds mov adc mov lds push test push test lret stos mov xor nop sub loope xor push inc sub cli mov inc jmp in jmp pop test pop cmp add mov dec stos scas add push les call mov fmull sub (bad) out mov (bad) jns dec aam cmp lds cmpb sub jge (bad) dec call daa xchg lock loopne loopne xlat ja mov loop pop cld dec dec mov inc stos loope pop or dec pop fsubrs (bad) jb sub sbb je ret (bad) aam push mov out dec fs repz mov daa mov cld mov rorb cwtl xchg sahf push sbb cmpsb (bad) cmc inc setnp lret test mov jo xor ret push loop test sti pusha cmpsl mov xchg imull es imul mov push ror (bad) int3 xchg ret insl sub cmpsl (bad) outsb (bad) (bad) ret add or loope nop fnop pop cli mov pop ret ss dec enter loop imulb pop lods push sub cmp fldl push lret aad pop clc push push clc in pop pop dec divl dec sub add sub outsb sub pop cli inc repz dec (bad) mov out sysexit rol out xor mov in sbb (bad) xchg adc movsl xor dec daa mov test loop dec clc lret addl and push mov sahf insb or ret or add cmpsb (bad) or push pushf cmp cmc or cltd fstpl pusha cs es jl lret jle jp inc dec xor sub dec xchg dec icebp pop xor enter leavew loopne sahf out dec rorb dec push inc cmpsb pop (bad) dec dec leave cwtl dec loopne or mov ret imull xor push cmp mov sbb mov cmovns enter lahf add insb dec or (bad) sbb dec mov fstpt lods mov sahf mov pusha loopne add ror rorl mov movsb stc mov cmp inc jbe ror ret jp or gs rol fmull (bad) mov loop jle andb push cmpl dec fs dec int pop (bad) inc or xchg mov loopne daa lea scas pop idivl stos sbb mov xchg scas mov add imul lcall (bad) js inc dec scas xchg clc pusha ret popf mov pop lahf xchg clc mov push in sub cmp std cmp cmc pushf dec xlat sbb ds jne jge pop xchg das hlt cwtl or xchg clc push (bad) (bad) call xchg enter dec dec xchg imul push pushf pusha (bad) dec (bad) adc sarb pop sub sahf cmp mov mov mov add mov scas and xchg jbe mov stos js jno push std xchg push loop jo mov dec adc dec push mov push aad orb mov js push pop in sub jecxz div pop inc dec sub testl (bad) xchg ja sbb push fisttpll pop xor inc cmc bound jne inc lock (bad) sub jns jle xchg dec jp sbb and popf xor dec insb or sahf push out pop fisubr jne vandnps movsb pop cmp mov out dec inc push xor stos xor es push cmpsb (bad) dec xchg cmpsb add push fdivs arpl and (bad) mov push mov stos aaa push (bad) (bad) lock (bad) cwtl xchg pop add add push (bad) sbb push dec cmpsl mov or aad push repnz lret and mov sub mov (bad) shl sub and dec mov dec movsl std enter mulw sub pop mov xchg out lret inc cmpsl and sbb inc xchg (bad) mov cs mov mov (bad) pop aaa pop adc adc xchg popf or pop dec sub lds (bad) cli jle push sbb lock data16 and dec cld loope (bad) movsb mov jle mov xchg add jmp mov mov jae push mov test movsl push clc test enter inc xchg pop je jo push daa out (bad) cld std int3 dec inc lea xor dec jae xchg loopne add fistpll bound addr16 das lods adc add dec dec clc cld mov dec ss mov cmpsl repz test sti pushf inc addb stos jo sbb gs movsb xchg inc test (bad) cld test repz ljmp jbe pop dec sbb sub mov sub xorb mov cmp loope dec add xchg fwait arpl jo stos sbb dec inc (bad) mov push les add sbb rcll loopne mov aam jp rolb js xchg mov fimull lock push divb sbb or fdivrs sub jnp inc scas add decl xor inc rcl or push mov adc and xchg adc inc fs or je sbb pop and xor or sbb ds addr16 into (bad) dec inc lods lds (bad) inc js xchg pop fidivrl fcompl loope mov mov js inc fwait mov sbb subb pop push popa hlt adc sub stos xchg pop jp pop ljmp aas je sbb pop loopne push add stos adc (bad) sub dec clc mov cmp ljmp into dec addb rcrl sub sbb andps aaa out arpl jg cmp or adc icebp or add dec mov mov push jb xchg cmp js push mov fwait clc push shlb nop iret push loopne and enter xor bound jg hlt pop xchg sbb rorb xchg sub rcll jns jo xor mov mov sbb dec dec repz movsb (bad) arpl adc cmc test mov rolb roll stos lahf mov or push dec in cmp fsubl adc shlb and inc adc jle loope bound cmpsb test pop mov lods add in subl push sub fcompl aad inc mov inc add mov push stc push or mov inc xchg lahf jg test dec add cmp lea mov outsb ret mov test pushf pop or in cs cs lcall mov sub pop sbb adc or add push (bad) lock xchg nop dec sbb fbstp mov mov divl push orl push or cmp xlat pop hlt outsl mov sub mov addb mov inc add test adcl and cmp (bad) rcll cs dec jl sub (bad) out add adcl mov enter add push add andl or adc in push stc dec or jb adc jns out sahf push add popf hlt repnz jge mov sbb add cmp xor jle dec adc mov sbb sti aad push inc mov xor add mov lea sub mov push or sub lods cs rcrb mov js push (bad) out inc xchg loopne xchg sbb into lret insb lods scas xchg mov push in test hlt mov sub (bad) cs lahf cmc push lret loop push js dec out lea mov inc lcall cmp jbe xchg jmp or dec jge hlt inc aam pop inc fisttpl ror mov push mov fild fstpl push xchg push xor sub adc dec pusha test sbb jmp out fwait jno sub pop add hlt push (bad) ja bound movsl lret jnp mov xor pop pop sbb (bad) push pop popf jns rclb and xchg stos neg xchg mov aaa sahf mov (bad) xor xlat loop in jcxz dec add test xor ss pop cmc cmc (bad) dec insb or mov subl mov dec or xchg jnp mov dec jo rorl (bad) xor (bad) mov imul repz into adc push push (bad) out mov mov (bad) sbb dec pop ss push mov cld popa lcall loop pop fist (bad) inc pop (bad) lea pop subb dec jns mov test out mov or cmp sub pop neg pop push inc push and fsubl and xchg mov pop loop or stos cli stos adc pushf add push mov mov mov mov (bad) xor loope divl (bad) in gs or outsb stos rcll jge clc dec scas mov inc test fdivs inc stc push add jl dec push mov stos icebp inc out mov nop ja popa inc fsubl aam cmp mov ljmp in daa sub aad mov mov mov dec mov inc dec pop xchg push bound jne dec cmpsl inc sub pop push es cmp out dec cmpsb stc popa mov test dec pop dec lret cmp ja pop rorl mov pop sarb scas test lds pop and sbbl ljmp enter mov lcall aad sbb test shl mov xchg ds fnsave aam mov imul outsb mov dec jb loope lock fidivr ret cltd mov sbb pop dec fwait add outsb mov jecxz mulb dec mov jnp notb lret mov notb pop pop js fs cmp test sub pop sub push inc or fs mov fldl cld insl cmp loopne xchg loop loope test cmpl fimull insl or dec pushf mov hlt xchg lock add notl bound aam test sbb lret adc movsl stos sbb lahf test in cli scas mov dec and dec pop test bound mov or (bad) mov mov aas push or or and sub dec (bad) ss jecxz cld enter stos subl xchg mov int3 roll rorb add jbe mov insb dec pop pop add loope push mov popl or (bad) mov mov sbb imul fisubl dec orb xchg pushf lods pop add mov (bad) add jl fimul mov mov icebp sbb f2xm1 and mov and popa push imul aad rcrb call mov lretw jle and jl dec mov cwtl push cli dec adc test jbe movb (bad) adc cmpsb add ljmp push (bad) hlt inc movsl loop and popf into sub daa popa fildll dec loopne and mov adc pop jo hlt mov imull out pushf dec (bad) sub bound dec cs sbb or (bad) adc and (bad) cli dec add dec mov mov xchg mov hlt or sub out xchg lock pop or pusha inc inc or movsl dec pop les jmp imul fsubr push mov adc add or (bad) ficompl out out inc fs sahf sub test add sub xor into xchg mov je inc data16 lret jge sub push (bad) sahf or and dec add or int3 push nop not clc jmp (bad) sub out and mov (bad) imul add or dec jmp xchg icebp mov sbb add dec and mov lock loopne jp fdivrl jecxz cltd dec mov loopne out mov out pop lea cmp dec pop mov (bad) lret push fistpll push jecxz fadds nop adc dec leave push loopne pop push cmpsb push mov adc (bad) dec mov leave sbbl lock popa xor pop fisubrl xchg les mov movsb jecxz movsb sub adc mov int loopne popl mul mov xchg fxtract dec lret dec lods xchg inc aam dec (bad) cmpsb lcall push nop lret lock int inc dec loopne push sbb push jmp fwait push scas and sbb jne gs add negl into idivl loope,pt inc mov mul add add aas sub stos push xor dec pop dec popa add push cld out sbb aad inc hlt test mov leave outsl out and pop (bad) jg xchg inc xor sub mov rolb dec sbb mov push jb xchg aas add or and jae jle ja and fnop pop pop insb mov mov dec mov jl sub dec movsl sbb adc mov lods push inc cmp jl daa hlt cmp nop loop push fisubr (bad) xlat or inc stos imul dec ja cmc jg (bad) mov mov xor test int3 add in data16 xor pop mov dec dec xchg adc mov inc (bad) sub mov and les push mov lods mov fwait adc cwtl repnz aam cmp cmc mov dec jns push jnp cmp dec (bad) fs stos sbb (bad) lock mov sarl and dec lcall lret scas adc add pop inc cmp sti cs sbb loop arpl xor jo mov dec inc icebp xor sarb sbb cmp clc mov fcomi les loop ljmp xchg mov xchg ret jmp data16 cmp and cmpsb mov enter movsb negb xchg or test jl jp pop mov push and sbb int3 sub mov add sbb stc sbb xchg cmc inc mov dec mov push mov fdivrs adc test and and movl in lret mov xchg add ds sub add sbb ljmp rorb inc dec les mov imul add in into jle mov push jmp lds jo mov adc ja (bad) lret or lock inc or add jecxz jmp lock adc mov mov popa dec int3 dec pushf mov mov mov fnstcw lcall sub je pop (bad) hlt cmpsl sbb movsb (bad) push clc mov daa sahf lods cmpsl lds pop pop sub bound sub dec xor in mov mov inc loop cmp fxch push loope and loopne repz fsubrs imull sbb add in push sbb je jo loope clc jbe sub adc cli push movsb inc mov jns add or inc fsubr mov cmpb sbb mov pop dec mov ficom dec ret jl (bad) (bad) rorl mov cs mov sbb jbe mov repz push icebp movsl out test ja mov lret push pop inc dec mov mov push mov repz cmc dec xchg lcall repnz jle popa jge cmp or clc mov stc fstpl sbb mov sahf or shlb dec std jnp shr xchg inc mov cmp arpl int3 (bad) dec repz cmc add (bad) mulb mov int dec movsl mov sub jp or icebp cmpsb aaa push into or jle out sub jle pop lret pop mov test or adc adc pop xor adc adc add xor pop pop (bad) xchg push add ret in mov and in les leave jmp mov pop jne shlb cmp hlt (bad) xlat sbb mov aas jae sbb mov imul data16 adc call or pop shrb mov leave or loope sub sbbb push aaa jg and js inc jmp adc xchg sbb pop jge movb stc mov shll repz (bad) push rclb icebp shll mov dec cltd dec pop pop nop jg (bad) lret fsubs bound xchg rorb mov adc cmp mov inc sbb cmc mov or adc loop dec dec les mov in lods sub jge dec xor sub pop sahf addb xlat inc jnp and loopne pop mov loop pop mov sbb push or fs dec mov addr16 xor add sbb pop sbb xchg test loope mov pop mov sub dec popa and push scas dec (bad) or mov loop shll dec mov mov mov sub sarl sub inc mov into and sbb lock sbb les dec test ret cmpl inc and dec pop dec loope subl lcall add jmp mov xchg mov dec lret test dec mov aad ret das jns pop nop sub dec mov aam (bad) mov or inc aad pop lock mov clc inc dec or sub inc ljmp sbb push dec ret dec std xor sete xor inc cmp test cmp xor lds dec loope mov rorb dec mov mov aam jo dec or dec xchg mov enter xchg inc shr xchg insb bound dec xor rorl mov sbb outsl (bad) (bad) cmp mov xchg arpl ret sub jo dec icebp sub add pusha test mov fs incl loopne and xchg and pop dec pop loopne pop pop fsubs or idivl aam sahf stos pop dec or mov dec dec xchg dec and clc xchg cltd adcl or lock loopw cmpb xchg or pop (bad) loop jno push in adc mov mov jnp outsl mov pop or mov inc rcl rcrl add clc mov inc jnp dec pushf mov sarb dec pop mov adc popf push push rep mov (bad) sbb (bad) dec test mov xor add andb es jo orl cmc mov lock repz mov pop repnz xor cmp and jp test iret xorb js imul scas iret mov packsswb mov repz aaa mov push add sbb push jecxz in dec cs adc aaa cmp add mov pop mov loope and xchg mov dec out pop lods loope pop mov push outsb out rolb outsl fsub decl dec mov sub nop lods data16 mov xor inc (bad) adc inc imul mov and or lock lret jb,pt mov sahf ret sbb popa addb sub jbe sbb (bad) and outsb jnp popa sar ds push pop mov mov hlt jle mov in insb lock adc scas dec test push mov inc cmc rorl dec pop movsl push sub mov les inc jge loopne in dec stc inc mov push inc es adc dec das scas cmp lcall nop div dec in adc dec mov pop sub testb inc push dec mov ja mov mov jmp pop flds loopne in lds pop push movsl mov xchg lods or gs pop in jo (bad) xorb popl push shll push inc (bad) push fimull cli dec inc inc lods xorl sub or jmp mov fildll imul fdivs sub mov rolb mov jnp movsl fist pop jb ficomp mov mov push push push fs mov add mov pop or pop mov dec fdivrs hlt (bad) adc addr16 rcrb out enter mov fstps mov push sbb pavgw xchg push (bad) (bad) (bad) std aam test rol adc push inc jo jmp rcl loope push imul inc les arpl mov movsl jle inc push loop push inc xchg dec dec test dec (bad) add add fwait add les xor sub and sub insb pop adcb cltd mov mov loope inc (bad) lds cmp xchg cltd dec mov cltd mov sbb jo jb je fimul sbb push xor aad push stos movsb hlt or (bad) xor inc push into jle adc sub lret aas dec adc dec pop adc scas decb out idivb add sub ds sub std scas and imul ss and ret add or dec mov or pop add fwait pop dec bound jb cmp fs xlat cmppd insb push adc ficoml or sahf or outsl jg jl sbb adc dec shrl sub and push repz cmp or xor or dec cltd stos dec in movsb jle test mov dec inc mov xchg dec and pop clc dec dec mov mov dec lock sbb in rorb lock test xchg lret mov testb (bad) mov sub insl in and or mov and inc pop pop add xor xchg pushf mov rcrb enter inc dec pop lret fldl add roll adc std push sti push clc xchg inc dec ficom xor xor cltd jp scas xor adc sub adc mov icebp sbb mov subb loopne inc mov test lret cmp jo push insl sub scas test push mov nop jo or insb adc bound dec jns inc addr16 imul jle in push xor push loopne sti out dec daa cmpsl jp mov repnz dec or int insl push or aam test add ja inc bound push push hlt pop or leave fbld jo pop movlps dec jo push js dec adc xchg shrb dec push lods mov jns out icebp or sbb popa je scas daa and lcall loopne dec push lock push lret mov inc pop stos or inc jg sub arpl loope cmpsl cmp add jb sbb insb ret mov inc test lcall or cwtl in rolb pop mov cs dec (bad) js nop dec jne,pn sbb cwtl mov mov lcall dec inc mov inc xor add out mov inc xchg jmp and ss mov mov xchg (bad) lcall push (bad) cmpsb shr ja addr16 xor fisubl mov adc cmp adc test dec lea xorl popa sbb and sbb ret pop push cmc pop pop inc cmpsb xchg dec ret xchg inc sbb dec call sbb xor mov hlt pop sub shl mov xor fwait sub ja jnp stc lods shrl adc cmp and pop mov sti cmpsb pop mov jge mulb lea mov int (bad) mov aad clc nop add mov mov test ret add jo sub push scas (bad) ljmp addr16 or hlt bound pop mov pop rolb xlat mov dec jg cmc fs xor jecxz (bad) loopne,pn loop dec or cmp pop sub pop mov and sub ret fld pop jbe ss jp and addr16 jl pop leave mov int3 push cs mov dec lock fwait push and out sbb dec ret lahf (bad) xor das lret lock mov mov test dec cmp inc aad adc ret sbb cmp xor and push lcall pop xchg (bad) aad jle inc or mov pusha cmp fwait out xchg popa lea rclb in mov cld test xor test xor movsb mov jge push mov mov sub fwait scas mov pusha lea pop push pop rorb fwait movsb push adc xchg ficoml (bad) mov sbb xchg sti pop mov jecxz pop imul push push jl xor push push hlt add dec repz lock in hlt addr16 aas or mov lea jns jae dec and jp cmp mov cltd xchg sbb rorb loope shll in (bad) jg push sbb loopne dec xchg (bad) cltd test cld dec or rcrb dec gs sbb into dec fwait jle shll pop (bad) sar or movsl mov add pop in lret or cmp xor and rorb loopne mov cmp std inc test sbb ret dec sbb dec cmp sbb sar lret loop jmp or and fistpl cs dec adc push add frstor loop cmpsb mov xchg mov je pop xchg call mov scas dec jmp sub or stos test jbe mov add imul jp sub jae insb lods call jge sub xor adc sti xchg in mov inc jbe jb bound cltd lock sbb scas and and inc push cmpsl or data16 xor data16 cld int xchg adc push cmp iret mov (bad) inc jns leave mov loope nop dec jns add and mov rcl arpl stc rcll pop mov imull jg stc rcr dec ficompl dec sub dec add or aad sbb cmp sahf push cltd push sub sub lcall dec iret sbb popa aad sbb (bad) loopne mov fdivrl mov mov dec push mov out cmp dec pop xchg mov pop cwtl ret test (bad) dec pop add cmovo adcb or rorl addr16 jl cli insl xor inc or fmull loop and inc out (bad) sbb mov pop mov sbbl cld cld jmp popf jecxz int rorl lret icebp int3 mov push cmpsl add mov daa icebp mov out cld shr push inc cmp in push dec and mov dec pop lcall icebp hlt icebp movsb test arpl dec sbb sub jg lock lea divb aam lea es cmp or sub push mov in mov jge test push jbe push inc mov push dec (bad) stc mov push sub mov mov add sbb aaa adc loope sub cmp idivb lahf lea push js push mov pop int in dec out testl mov jbe,pt and fisttpl cmp mov loope xor loopne or mov inc push sub ja xchg xor imul sbb sub cmp je int xchg and mov hlt mov popa pop cmp dec cmp jne xchg cmp leave sbb and aaa and (bad) sbb cs push outsb fdivl or cltd jl push lods dec stos and hlt mov cmpsl aam sbb sbb nop adc cwtl xchg lret fnop inc movsl mov imul mov xor into int3 test push cmp pop adc dec sysret pop enter sbb movsb dec int or sub adc ret enter inc es inc and cltd iret jb and adc push call mov mov sahf ja mov or rcrl shll xor and xor hlt (bad) mov add pop xchg iret or or mov mov sarb leave fiadd pop rcrb mov fsub pop mov push or out or stos mov sbb out pop cli daa cwtl movsb dec mov fdiv (bad) shlb push dec jno pop xchg adc or mov test scas lock mov mov subl mov rorl dec icebp (bad) enter sub xchg jo and pop mov xor lds pop jae push negl jmp xor jns dec add sarb sbb mov enter mov mov stc (bad) push inc les pusha mov and inc jg loope push fnstsw adc aas repz mov mov sahf outsb cwtl test cmc inc sbb sbb jnp push mov (bad) jmp push xor lds inc imul es outsl mov mov pop cltd push scas and mov sbb or xchg dec cmp push mov arpl cmpsb mov or inc cwtl ss mov add sbb call or lock lret out mull mov ret or mov mov dec or and dec ds sbb mov pusha xchg rcl int3 or sbb sti fnop lds popf cld nop stos push and test sbb cmp sub add mov lock push lahf ljmp rorb or scas push scas jl movsl mov es movsb sahf sahf out ret stc mov repz fwait push push sbb lock mov (bad) cltd jecxz clc int3 pop sbb mov scas mov shrl dec out jno cmp orl xchg pop sub xor jl cld or mov push xlat (bad) rolb scas pop jmp (bad) lret scas dec sub insb pop sbb sbb arpl sbb cli dec sbb (bad) push mov arpl mov lods dec jno daa xchg adc dec stos xchg mov iret mov dec fwait push sub push rclb negb push or dec xor dec push and call mov sub jmp xor push stc mov push fldl xor and subb mov clc dec inc scas enter mov sbb cmp sahf cmp sub and stc clc cmp pop test sti cmp adc add nop int3 adc inc mov mov jmp lock je adc shlb inc cmp inc jecxz arpl stos or or jbe bound mov test jmp repz cmpsb jns ret or pop (bad) lock mov xchg ds les fidivl mov sub push ret sbb sub js outsl in (bad) jnp fcoml in inc sub sbb cmc int3 imull frstor cmp nop sub jg cmp push aad in adc scas xchg aam lret clc ss add es adc fwait ret popa cmp push (bad) in hlt cmc (bad) mov ficom imul mull mov pop cmc mov xchg (bad) xchg dec dec adc add mov daa lock test jne les add ja int3 into mov sbb cmp aad add insb sub popa roll test lods add push iret test (bad) jo clc pusha or sub into add dec sbb lret jno jo jo cmp jg sbb mov loopne push daa sbb sarb test xchg adc repnz cmp sub push test mov xor pop fs fsubrs add rcrb inc sbb scas or cmpb or cltd pop jo sahf sbb cmp (bad) sub inc call mov repnz into stos push cmp insb stos lods test jge movsb hlt jo loopne stos add push insl jne aam iret xchg jno adc (bad) or push pop sbb les mov pop and mov sub test fbstp sahf xor lcall popa jno ret push std or mov ds mov add and and inc test jmp aaa (bad) es das pop arpl mov rcrb sbb and pop jmp scas push (bad) icebp jns (bad) stc inc ds jo (bad) notb nop sarb out sbb es aad cli movsl repnz dec mov or jno jne cltd call sbb xorl pop inc out cli lret xor repz jbe adc jb mov call mov daa cmp (bad) xor add (bad) (bad) lea jle cs rcrl mov mov inc push xchg cmp faddl push xchg and add ja xor adc mov rorb mov je call pushf sub lock hlt repnz sub iret cmp or or push in cmp out faddp add inc pop mov jl dec out mov adc mov dec ret ljmp sub (bad) jb iret movsl cwtl inc mov jb jno lock loopne jae out ret mov push shr push push push push inc (bad) fcmovbe addr16 mov jo adc mov or cwtl inc add outsb lock jnp mov sbb div sahf negl push test cmpsb dec out (bad) fmulp mov lock ds sbb sbb jo or js jns fiadd dec inc inc and andb and xor fidiv sbb fcomps inc xor dec xor notl inc dec clc push lock (bad) fidivr js push inc jo jbe add in xorl mov fcoms nop pop ds iret loope cmp push fmuls push mov fcomps call dec mov push test xchg sahf jb ficomp push enter mov jle jle inc clc pop push pop mull add cld mov push cmp cmp out test push mov (bad) xor pop cs mov mov lock dec nop pop dec or ds push out mov sub push push loopne pop aas in loopne movd rclb ss mov divb out rorb push push xor neg (bad) jbe push push push pusha inc addb sub test mov inc xchg fild out mov andb push in (bad) loopne nop subb push cmp mov push pusha push or inc scas fcompl or jp lods push outsb inc sarl dec scas push xchg sahf cs mov inc mov aas cs mov xor mov aas js lds mov mov xlat aaa pop pop adc and mov (bad) loopne push out loopne sahf js call jp pop push adc ds adc call (bad) (bad) iret sbb push or rcrb dec int3 mov aas js push push inc sahf rcll dec aaa xor (bad) xchg push clc daa (bad) (bad) mov fidiv js and pop movsb sarb pop daa orl mov out out pop cmp xchg pop testl ret sarb nop jo xor jo (bad) mov inc push xchg mov pusha ds pop cmpxchg jae push push sbb inc xchg aad fdiv pop dec cwtl mov roll pop pushf add data16 mov jle sbb push mov outsb mov scas dec mov jle je mov es sub dec pop push sahf xchg xor inc sbb nopl inc mov mov inc mov sub push subb or inc adc or add push pushf and add xchg lds inc add adc adc mov add cli cmp inc push dec add jnp cs add pop inc sbb fmulp jnp inc and dec pop push and pop ficomp push pop dec add sub in cmp push dec xchg push sti jle repnz push inc mov pop jmp jnp push sub push or mov mov inc adc or inc push push addl and lret mov push and pop sbb roll xlat pusha in rorl daa mov faddp push and push push dec or loopne jbe rcrb dec arpl fisttpll push inc push cs mov fidivr sti or inc sbb inc js jnp jp dec dec push rsqrtps lret (bad) loope pop inc aas or rdmsr lds jmp push add inc aas or xchg adc add mulb add or and or in cmp add cmp testb out pop rolb sbb or push subb pop add sar fdivrl xor cld jg clc aas push in jns pop jmp rol popf in insl add pop or push aas (bad) jg andb add inc cmp popa add test pushf int cmp pop jo pusha xor mov add pop adc jg add insb ss push out ficompl popf xchg (bad) cmp add xchg lock sbb pop push (bad) aas pop jnp xchg pop cs pop xchg pop lock xchg add pushl push pop xorl fnstsw imul add in cmp out jle rolb inc add jo cltd cmp mov rolb mov lock xor ds push xor out (bad) or push cltd pop (bad) cmp jg add inc cmc jns (bad) cmp (bad) decl scas out cmpsb mov add add fwait int inc and cmp mov comiss dec pop sub (bad) aaa fnstcw pop std clc lock aas inc imul add insl jmp notb pop outsl clc popl shrb arpl sub inc xor sub iret xor nopl xchg add cwtl shrl xlat pop in pop and adc jae pop cs add addr16 xor ja pop cld push cmp stos push fs fsubrl aaa adc das xchg pop lock or push sbb loop inc fldcw jge cmp sbb push sub sahf int mov add inc addl fsts xor sbb push push sbb dec rolb fldt loopne jne ret roll lock cmp xor fcompl jl sbb (bad) fstps sbb or test or push insb push shl xchg pop xchg out and add push xor addb mov push and add or add fs ja mov cmp andl shrb cwtl mov daa sbb cmp in scas mov daa and out pop neg xor and sahf jnp adc cmp clc dec push dec jnp (bad) sahf push mov push push enter daa lret xor daa xchg mov outsw push (bad) sbb js dec addl fisttp adc xlat mov (bad) cmc sbb popa cmp mov pop xor cmpsl lahf adc pop test cmp inc and xorl and fistp pop daa inc push neg imul daa dec sub aas push es cmp xor mov dec sub loope jnp pop aas jns dec and mov es and push pop in lods frstor and and cmp fsub mov jmp pop push fldenv xor push mov jnp xlat push lret push xchg push mov or (bad) push cmpxchg8b daa dec daa push (bad) mov repz sub jae mov push xchg mov jecxz adc xchg inc inc inc or data16 push mov scas dec push pop es repnz (bad) daa inc aad push in mov push dec dec pop daa mov and xchg add push incb in rolb add clc daa add int jecxz add mov in fdivs mov test data16 add inc arpl daa ds shll jne jb xor arpl ror in sbbl (bad) sub out cmp dec fs cmp ror insl push fbld fnstcw aas daa dec lret fdivrl pusha ljmp hlt sahf insl es daa dec add sub jle xor in repz sub jecxz test orb or add xor in inc xchg fdiv loopne sbb or stos movsb sub jae out adc daa xor fcmovne cmp daa aas das es mov jg in push (bad) repnz inc sub push daa xor mov stos and push sub rcll pop outsb data16 inc push addr16 (bad) je push inc mov data16 je mov mov clc daa fsubrs mov (bad) pop lock cmp jmp dec push outsl pop fldenv pop xor dec xchg daa mov subl adc xlat (bad) jo jmp pop jne jecxz cltd and xor inc sub and loope je jle adc cltd xchg shrl sbb lock cmp daa (bad) addr16 lret fisub clc or sbb xchg fidivr vrsqrtps dec xor dec daa dec daa dec out sbb daa clc dec je dec (bad) jne mov adcl rorl dec out aas sbb (bad) push pushf sbb push lahf mov jo xor cltd cltd or push mov lret jb out pop pop insl adc daa repz les sbb adc dec dec iret mov (bad) jb cwtl and add adc push arpl repnz mov cwtl sbb and push nop stos mov mov mov inc ja shrl pusha and cmp pop es dec mov addl ds (bad) jmp je mov push pushf mov mov rcr (bad) lock aaa into aaa daa cmpsl test and lret jbe stos sub aaa sub insl rcr xchg mov daa xchg adcl pop mov fldln2 sbb push and pop dec jmp xchg rolb add lds pushf aas lahf add aad push mov jmp sarb and sub inc fbld xor xchg pop (bad) (bad) aas jae cmp jae aaa xor pop add push sbb in and sbb aaa add xor jae cmp mov xor aaa jle outsl lods push test pop or xor add push sub (bad) adc fistp sbb inc outsl dec icebp lock pushf jg sbb fnstsw xor mov lcall (bad) stos dec mov jl pop lret pop out insb xor jo sbb sbb cmp jo aas and mov pop lods xchg and push push dec aas push aas xchg pop in pop call ss add pop mov push pop jg jae fisttp ja fwait cmp add (bad) push ja sub cmp and mov insb mov pop and xor mov jg mov jb fbstp adc or cmpsl push jnp add in or cmpsl mov add jae pop pop shrb jae int3 in push sbb jle das sub pop xchg out (bad) xchg (bad) adc and bound pop out pop xchg aas out cmp ret cmp out mov add inc pop cmp cmpsl adc mov push push push cmc pop stos pop or mov jae ja xchg adc pusha (bad) fisttp mov aas lock test aas shlb adc fcoms aaa jbe das out mov xor das (bad) sbb sbb (bad) cmpsl das add sbb mov cmpsb das push or aaa pop jne pop fimul add cmp push jae jae pop inc cs iret fdivrs fidivrl pop push jo sahf sbb stc or jo fucom out push pop pop jae mov test pop adc dec xlat mov pop inc lret push mov movaps js xor sbb lret in aas push pop mov lock popf mov cs xchg adc pusha mov xor or adc cwtl ljmp enter add dec dec mov pop adc sbb jnp jae ss sbb sbb sub ss add (bad) sbb or js out mov je jb add fs in fimul or dec push jnp jnp js or mov roll das es inc sbb cmp insb push xor inc or insl mov iret gs push inc adc arpl fisubrl push data16 push mov data16 xchg repz adc outsb or (bad) push jo dec mov jb sbb jnp xor outsl push push jns dec lds sub arpl ffree subl cmpsb dec cmp js data16 xor mov dec aaa cmpsb outsl andl outsl jo xor and jb jne jo jbe loopne xchg dec (bad) ljmp lock jecxz outsb outsl cmp jno pop or das add scas sbb cmpsl push mov pop jg movswl lds aaa mov push lock jae out popf or fwait pop adc data16 ja out add cmpsb xor gs jnp adc inc sahf dec mov mov ficomp xor xor arpl arpl (bad) pop mov sub fs sbb out sbb ret mov jo fwait fs and dec movzwl testw ja movd imul jne mov sub sbb arpl shrl and push xlat imul lods adc addr16 cmp dec push push sahf bound mov jle jbe fadd sbb ret (bad) mul fistl jb outsb cmp shl int fwait addr16 das popa (bad) add cmc xor or inc sbb mull addr16 xlat xor notl sti and icebp data16 jne and mov (bad) pop push jle ljmp fwait insl rolb lret sbb pusha pop jae (bad) jo mov add cmpsl (bad) cmpsl or inc fwait jns mul sub push ds push jb push jmp (bad) packssdw mov mov push lcall adc lods pop adc aas addr16 nop bound mov xchg sub add sbb or xorl std js xor inc sbb (bad) jo push decl cmp pop adc fadds mov add jno pop add push push or push out add or imul imul subl fcmovb icebp loope,pt mov or mov ss inc ljmp fist xchg add (bad) or jne push inc pop adc lods bound dec inc xor stos (bad) or cmp pop sahf bound mov pop fbstp mov xor sub ds imul cmpsl and push jo pop mov sbb ja ss and insl xchg loope xchg shlb (bad) shl lret cmp fisub adc push jl ja out jb das sub jbe inc push xchg add add fs imul sbb ds push jecxz decl das pop sbb mov mov out push push pop dec mov sub fldl mov insb lock hlt sub cmpsl jo outsl test js and rcll dec jnp sbb and aaa xor add daa in xchg fwait mov jns dec push push repz push xchg mov repnz das pop jb push test sbb push mov cmpsl inc outsl mov outsl popa inc mov inc jns lods sbb jo daa sub mov pop fs xor dec test es shrl jmp pop faddp pop jb fisubrl pop push icebp sbb arpl and rorl setg (bad) jmp fs lcall push sub jb add sbb mov pop push (bad) xor sub and insw in (bad) or mov mov inc push mov or (bad) xchg ljmp mov cmpsb es fsubrs pop imul testb push inc dec arpl insl sbb out inc lret push push aaa mov push es push adc jle,pn outsb aaa dec das dec dec sub pop cmp add push mov (bad) add rclb sbb lea daa arpl push fninit dec add das (bad) jg fwait pop push xlat jno mov or lahf pop jnp aaa sbb ret cmpsl add mov adc add lds add jmp mov sbb jns es or out idivb inc aad dec data16 repz lods imul push lea stos daa mov lods (bad) inc and pusha cmpsl adc pusha and add ficom imul xchg mov popf cmpsl fiadd scas (bad) mov or or in lea mov data16 or test js sub mov loopne das fildll and jae add push mov je jb out add mov cmp jno adc jbe popa pop jbe ljmp dec nop loopne out jnp push add push mov add pop sbb xchg arpl or push push bswap jb dec mov xchg or addr16 mov mov fildll pop push rol sbb sub xlat dec mov pop jp fidivl xchg inc (bad) jl pop in sub (bad) addr16 adc adc outsb mov (bad) iret daa dec out and insl (bad) imul fsubs dec lods inc xor iret jo das jl and (bad) push test jnp (bad) jb xchg stos pop adc fwait je cmpsl idivl inc bound pop (bad) push (bad) mov dec cmp xchg mov push sti mov xchg xlat jb jbe jl dec push xchg push mov inc mov xor (bad) adc adc push and dec mov xor sbb mov out sub pusha or into dec imull (bad) ljmp push mov dec jnp (bad) sbb jge mov fbld daa das xlat xor mov js dec cmp loope lods xor shrl pop (bad) (bad) push jmp jecxz or add enter (bad) adc repz adc pop mov mov and out js dec mov cmpsl aaa xchg sub outsl pop sbb or gs add pop dec push or arpl shrb sahf sarl push loop out outsl mov pop sbbl rorb call bound je stos adc cmp xor stos ss dec fist inc add mov mov add pop popa ret mov pop mov push inc sub imul test pop jnp push rolb out and je cs test inc lcall (bad) jo pop mov insl (bad) pop mov xlat adc push arpl push xlat ljmp pop lods dec stos cmp iret push push bound lret sub fs sbb stos fdivs adc sub lock (bad) aaa js scas mov andl ret fisubl ret pop jecxz xchg sub pop sbb pop stos pop ljmp push sub vorpd iret (bad) out and xor or imul jo pusha lds shrl adc xchg and cmpsb popa mov out or subb test js aad xor cmp into (bad) mov and inc dec lahf mov and mov (bad) mov sbb (bad) sub jnp test cmpsb pop pop pop jae insl add sub daa data16 mov fwait scas ja mov inc push mov xor pop test push lcall jb xor push xchg daa and and sub xchg and (bad) cmpsl inc jge push test pop push jb lods pop jmp push stos pop out (bad) jmp imul shrb dec push aas push rclb das jmp jnp sahf sbb jbe mov mov pop stos or arpl insb inc sbb mov push or sub sbb outsb xor std pop and mov aas daa inc ffree xor sbb fisttp sti jo inc mov pop add push xor jbe inc xlat dec arpl push and fisub mov push sbb push mov push fistpl push pop ja add frstor push jnp pop xchg or outsb daa or push daa xor push into repz pop dec (bad) (bad) inc addr16 add add add pop sti jne andl bound and pop scas repnz notl repz adc adc cmc sti push sti jne push or adc jbe jno pop and sbb sbb out push sbb and jno pop and insb lods sbb stos mull push jp adc jae pop push inc jae fwait or mov sbb out xchg (bad) xlat cmp adc loopne sub adc sub sub lods xchg js (bad) aas push mov ss call jnp je pop aas cmp cmpsl fisubr push pop inc movl push and jmp jne lods les lods inc pop stos xor iret sbb mov inc (bad) movsl movsl mov dec insb fadds sub out es push and adc aas arpl add jmp roll repz or stos ljmp inc clc out aas or add rclb (bad) pusha adc push and adc sbbb pop cmpsl dec xor bound aaa pop bound inc push addr16 mov jg push mov jecxz and adc push pop addb jecxz xchg andl das mov pusha adc outsl mov sub sub push inc mov and mul inc outsb add pusha clc (bad) jae daa popa pusha inc bound push or xor adc pop xor cs lds adc cmp mov add cmp jmp inc shrb adc pop adc pop bound int inc scas dec mov inc xchg mov aad xchg inc sbb out push (bad) and jg ficoml jmp pop lods scas mov jnp dec movsl (bad) lds mov mov imul adc push arpl scas mov test mov rclb aam push sti xchg rcl mov add dec sub pop mov scas and xchg movsb (bad) fs push pop pop cmp mov dec and mov fbld pop adc or mov daa imul dec imull xorl loop inc movsl aam pop das xchg data16 add and jno lea mov outsl inc and inc or add addr16 xor inc mov xor or ret cmp xor push aam or and xchg inc lods cs dec shlb lea mov xchg push adc (bad) adc jmp jbe inc ds popa test fs imul sti sti jns pop je jmp stos scas or hlt out aas imul insb lea dec dec lahf outsb xchg arpl jo adc sbb jecxz xchg arpl xchg xchg mov jmp dec jnp cmpsl sbb add add fcos (bad) (bad) dec mov and inc scas xchg dec mov inc mov lea lret pop movsl loopne lcall pop sti (bad) out or adc mov out int3 mov push and jmp in mov cld jl and jp arpl stc cmp rcr jge lock stc lcall (bad) shlb int3 in mov (bad) lcall (bad) push scas lcall add enter stc xor int movsl mov push jg (bad) jmp test push adc mov add or repz repz (bad) (bad) jmp push cmp jne sbb inc rol cmp (bad) mov xor jno mov lds mov pop xchg out bound add stc ds (bad) (bad) push xchg repz cmp xor std mov jno dec dec dec aas fcoml mov push aaa mov (bad) fistpll ret xor cmpsb aam push pop imul sub ret cmp test hlt fcompl in (bad) popa mov jp out sbbb std (bad) (bad) inc mov vxorpd dec (bad) xor loopne test dec mov scas test jecxz aad fsubrs mov and imul (bad) (bad) pushl xor push push jne inc cmovnp pop xchg push and xor mov pop adc sbb (bad) (bad) (bad) fild scas arpl inc fdivr mov (bad) dec adc xchg repnz in inc mov fwait mov movsb dec fcomip push iret dec xchg add call decl gs movsl mov (bad) movsb cmp out stos push andl push (bad) adc movsl jmp inc inc mov loopne lret cmp loop scas dec into imul push (bad) (bad) ljmp push lds and testl dec loopne loopne sbb je cld (bad) (bad) call fwait nop add adc and or loopne sub movsb jg mov gs push enter (bad) (bad) call hlt pop pop add mov inc (bad) xor jmp aad (bad) (bad) jmp hlt add push (bad) ss mov adc dec popf push add and mov pop decl xchg imul or lcall push outsl inc sahf jno inc jnp insb and or (bad) cltd push sbb xchg pop sti (bad) inc and shrl cmpl addl mov orl sub add decl adc lcall sub sub fidivrl out push xor xor sbb and and adc jmp add dec mov dec (bad) (bad) (bad) (bad) (bad) jns pop sub pusha sub or jmp ja mov sub push or (bad) mov xchg jne mov test jp push sbb (bad) (bad) (bad) (bad) fistl jno push pop insl dec cmp xchg std xchg testl xor sbb leave (bad) out pusha rcr stos (bad) int3 lcall push mov mov (bad) (bad) (bad) pushl adcl lret xchg mov (bad) std dec mov rol mov (bad) mov inc pop int3 jp sbb sub je mov scas adc add inc mov sub (bad) push rorl mov inc lcall incl or xchg fisubl jp mov test (bad) jmp dec cmp and xor or xchg dec shrb pushf aas fwait fs aam (bad) (bad) fbstp jne dec sbb lret stc imul (bad) std xlat js stos cmp mov jae cmpsl push jnp sub dec sub jg (bad) cmc lcall sub enterw sub add push ds ret fwait shlb (bad) inc push sbb aam lahf inc in inc jmp aad (bad) (bad) and out lahf push sbb mov (bad) lcall stos mov dec out and (bad) arpl jns rorb shll call shr sbb mov ret scas mov jne sti (bad) (bad) (bad) cld ds push rolb fildll pop sub std dec int3 pop shr fwait pop roll mov inc and xchg push add pop sub cli push movsl and int ret jp cmp dec repnz sti (bad) fbld xchg inc daa xchg jne cmc cmpsl add test (bad) lcall sar test sbb or std mov add dec fnsave aam xchg xor lahf (bad) int3 ja mov cld rol pop sbb bound negb xor adc aaa and mov mov and mov outsl test insb mulb sub adc pop divb xor arpl loopne dec (bad) jg (bad) jnp push (bad) pop (bad) das imull test cli ficomp xchg hlt jecxz mov (bad) (bad) (bad) call mov dec ret bound mov mov sbb pusha rolb mov mov movsb mov mov out lock addl (bad) mov sbb int pop sub lcall xchg push dec out popa hlt mov icebp loope jl lock mov (bad) lcall lock repz cmp (bad) ret int dec dec jecxz pop cmp (bad) (bad) pushl xchg sbb inc mov push xlat sub sub rorb cs (bad) (bad) mov and xchg in xlat cwtl je imul mov inc in lcall cmc je pop mulb add popf mov lcall or dec (bad) test lods and dec xchg sbb (bad) (bad) (bad) jmp lret cwtl xchg sub push dec jle cli and imulb and pop ficompl jnp mov (bad) dec sub imul adc dec mov or ljmp dec aam call enter sti mov sub jns add loope insl pop (bad) (bad) pushl insl or pop in stc data16 mov xor pop lret lds pop mov sub mov or ds jns test (bad) (bad) (bad) pushl dec jo (bad) cmp push (bad) dec and sbbl cwtl jl (bad) xchg (bad) (bad) jg pushf sbb test enter outsb jno and fidiv dec mov inc (bad) (bad) (bad) decl std movsb out dec xchg pop fsubr out popa sbb pusha inc jne pop mov out out pop lock mov xor push add (bad) call aam jmp in out sarb orl mov out dec rorl mov ljmp jns fcompl lea nop test add test ljmp sub mov imul dec push mov sbb ss pushl test add xchg or decl (bad) jmp in jmp dec mov stos clc or sub cmp stc adc (bad) jmp (bad) orl push sbb mov xchg (bad) (bad) (bad) (bad) fxam mov push pushf cmp xor pushf add jle dec or jg ljmp adc jle push dec popl mov mov into or mov jnp sar jmp (bad) out (bad) les cltd (bad) cmp lcall inc mov dec xchg (bad) (bad) incl ret xchg pop je mov pushf loope fisubl or (bad) jns add (bad) (bad) call xor or sahf jl mov inc adc jno (bad) (bad) call mov inc rclb sar adc cmpsl mov jns rclb cs pop (bad) or pop insb sub mov idiv pop add mov in fs adc mov test ljmp xchg dec call mov jb outsb inc jge loope jmp mov (bad) push mov mov xchg pop lods sub popf pop std ds movl (bad) inc lret test xor loop push dec jle push and mov call (bad) push sti enter or push faddl jp sub jnp sbbl fcomip jg xchg test stos sub push pop jne xchg fnstcw (bad) (bad) incl xchg fwait je clc push stc nop scas scas insl repz int3 enter adc (bad) lcall (bad) xor cmp add sbbl dec adc cmp int3 add (bad) (bad) incl and popa imul int sub sub mov jp stos (bad) decl je xchg mov or jns push mov adc mov jmp dec int fsubr cmp arpl add je jns ret roll jge bswap (bad) pushl xor xchg ficompl insb xchg or dec cmp (bad) (bad) (bad) (bad) jle clc jo or or jge out pop lahf cmp mov dec dec push imul (bad) sub (bad) jmp cmpsl addr16 sti dec (bad) adc test cmp int3 test (bad) call test and (bad) jae mov add or repnz pop repz xor push testl jo test sbb stos jp xor mov int mov add (bad) (bad) (bad) (bad) lcall push cs push add or je fwait sbb mov outsl mov sub dec (bad) xor and ljmp rolb repz negb cli inc dec out ret call std dec jge push shrb addr16 mov jb aaa pop mov xlat (bad) (bad) call sarl incl jmp cmp mov ss std (bad) jmp enter pop test xchg or dec mov jecxz cmp int idiv (bad) jmp xor es push int3 fisub mov (bad) pop and (bad) (bad) (bad) mov fdivr arpl mull fstl jge test fsubs ss pop cmpsl fstl xor push stos aam out sbb insb fldl (bad) lock outsl cli lcall fisttp mov xchg shrb and movsl (bad) (bad) (bad) jmp call rcll jmp fs and ss mov lds sub cltd add push fidivr ret (bad) (bad) (bad) incl test dec pop ljmp pop cwtl rorb adc push aam cmp lds adc test cld insb clc test (bad) inc cmp (bad) (bad) iret pop hlt cli btc ljmp fs loope mov (bad) (bad) mov push dec (bad) cwtl scas and insl sarb lods fcomps adc scas clc push dec mov pop mov psubw jb,pn imul xor jns scas idiv (bad) ljmp loop adc jne xor int3 insb sub cmp (bad) fwait pop or test (bad) (bad) mov cltd mov enter movl hlt loope jmp mov jl test adc lods imul mov pop mov test (bad) (bad) pushl int add and xor imul (bad) (bad) (bad) (bad) cli mov dec data16 jg scas jne cwtl aad out pop mov jns call call xchg (bad) repnz or setns xchg jne (bad) (bad) (bad) call sbb xchg jp (bad) fisubr and in call loope pop sub data16 (bad) (bad) jg mov call mov or and push cmc rcr adc (bad) (bad) incl xor sbb icebp sarl hlt jne enter push les and mov (bad) mov push cmpb and push imul mov into xchg and (bad) loop roll cmp push mov jbe lcall dec adc cmp push mov hlt dec xchg push add aas add (bad) (bad) dec stc xor sbbb sti aas sahf imul adc insb pop fild xchg imul outsl cmp sbb jns repnz mov test or pop mov dec stos and jne notl imul (bad) lcall adc not test xor stc scas loope push pop lcall push inc arpl xor data16 jg int mov cli mov push ljmp sar clc mov hlt add je aas xchg push movsl push push sarl in imul ljmp push fdivrs xor (bad) decl cmp push es in xchg test sub dec es pop mov cmp lcall xchg sbb dec daa in pusha dec int3 xor popl mov ljmp jb loop loop ds adc xchg cs (bad) call (bad) (bad) jge lea stos push ret dec lods push pop cmp test (bad) jbe and (bad) (bad) lcall test pop je dec das fs pop push mov inc lds sbb dec (bad) jmp push das cmpsb jno lahf xor int mov inc lret int3 jmp push pop fdivl (bad) mov sbb lcall or div cmpsb mov aad adc cmp sub cmp (bad) jnp inc cmp mov push mov xchg fwait xchg mov inc jg out sarl ljmp fmul add outsb xor xor mov xor adc stc imul or add inc pop decl (bad) pushl push xor int test add aaa lods jmp data16 pop dec mov cmp jmp incl xor lret fcoml adc adc clc incl pusha xlat cld push popa loop push (bad) sub adc jmp or xchg bound lock mov scas pop inc adc pop xchg test add (bad) (bad) jmp das xchg adcl call sub push arpl and jbe ret add jg inc mov xchg and cmp adc adc aaa inc sbb mov mov lret int3 or test jp (bad) mov sub jg test out mov sbb bound test mov mov ja (bad) lcall in lret xchg scas movsl or sub mov jnp stc inc dec (bad) (bad) lcall add lea mull imul imul clc mov rolb cs (bad) fsubrl test inc sbb arpl (bad) jg ljmp aam jge adc dec and rclb call pushf imul ljmp jb add mov pop cld xchg (bad) mov outsb in test lcall es fisttpl sbbl dec lea jle sbbl jecxz in sbb pop inc sbb clc test out imul add fsub dec jg jb inc inc in sub test cmp mov (bad) (bad) jmp stc pop jno aad movsl mov sub cs and mov or jmp xchg mov out mov push mov jmp (bad) xlat jmp push sub bound inc xlat mov lret jno add (bad) decl and mov mov add insl cli (bad) incl mov mov imulb arpl out xor (bad) ljmp sbb and or push roll lea pushl ret inc jb roll (bad) ficoml arpl aaa push jno mov popf sub dec outsl fsubl or sbb incl push (bad) lock push inc ret pop mov les into mov sahf fidiv dec std jne cltd cmpb jp fs (bad) mov sub sbb in pop cmp adc (bad) (bad) fcomip out sub and js sbb inc push fwait sub cld pushl imul dec test pop push (bad) (bad) jg cld ret fwait xchg jp cmp push aas mov jb mov daa add mov adcb scas std aaa cld mov push push xchg leave mov pusha test jmp loopne ss push xchg xor push pop gs mov sub cmp sar jmp or movsl mov jge mov or cmp (bad) ljmp (bad) sti shrb out cli mov les inc stc fildl xor inc push loopne (bad) (bad) jg pop mov push mov inc movsb rcll jp mov sub (bad) jg clc pop inc xchg mov and or mov jp incb clc (bad) incl leave daa js in cmp clc push xor dec je nop xor scas std inc (bad) ljmp rcll out daa cmp (bad) mov (bad) lcall xchg cmp out rol int3 (bad) or xchg mov xchg repnz cmp or int3 mov jo jo outsl insb sub sbbl bound and (bad) (bad) (bad) jmp movsl mov (bad) pop mov mov je ja mov add sbb notl cmp in push fsubs (bad) (bad) (bad) incl sbb loop dec or in dec and add lahf inc aaa cmp push cli pop cmc pushl ret lcall cwtl test (bad) fs and jg sti cmpsl sbb cmp add (bad) jno,pn cmp (bad) (bad) push mov loop notl cmpsl setp inc dec outsb in lret mov mov icebp pop leave xor (bad) ljmp clc jbe into inc pop cld jle sbb push repz push xchg adc ja stos fimull cli sub xchg push lcall xchg xchg je lcall push fwait push int3 popa push add mov or gs hlt pushf jecxz (bad) (bad) fbld outsl repz je lret push aaa outsb inc das stos or rclb (bad) mov pushl inc and roll or add cltd pop test fwait (bad) repz fdiv (bad) (bad) (bad) ljmp fnop into cmp xor dec les adc push (bad) (bad) mov lret mov jbe cltd into in jg js xchg add xor pushl mov or outsl lods push sbb cmpsl and cs mov test ja lods push (bad) add jmp push add jns dec fistl addr16 (bad) (bad) push leave push clc or fsubrp jp push sbb (bad) pop cltd jp (bad) cs mov lea lock (bad) (bad) out loopew cwtl rcll daa std adc cmp icebp adc insb fsubs mov sub pop aad lret xorl push jmp cwtl jae xor (bad) (bad) ljmp adc popf mov iret and add out inc lds xchg imul pop rcrl sbb (bad) (bad) aas leave iret cltd popf xchg loopne insb in pop bound fist movsb mov mov mov roll xchg sti xor addr16 aaa popa dec mov loop push icebp fld1 in call lock sahf pop xor insb mov push rcll xlat decl lock cmp shlb repz mov dec test incl adc scas and sahf pop push (bad) (bad) push bound add fwait jno ud2 jae cs je inc loop aam aad xchg pop icebp jmp add loop out rcr subb (bad) ljmp push or xorl hlt insl dec mov rcll cmc subl lret push adc pop sti lcall mov fistp arpl mov ljmp pushl stc inc or orl or dec and imul xchg cmp or xchg dec mov mov jns mov outsl cli call test sbb xor mov sti xchg mov mov (bad) (bad) jmp hlt std mov push lods or or mov loope fstpl jle aad push arpl jecxz loopne call xchg hlt or (bad) (bad) (bad) lcall outsb xchg mov lret and aad mov jp aad imul sti jmp lcall loop outsl jae lret (bad) stos loopne movsb call incl mov xlat sbb or and sbb sbb sub idivl jp lcall mov in icebp scas icebp sub subl mov loop shll adc sub push (bad) (bad) incl cmp into dec stos xchg fs or insl mov mov (bad) ljmp addl int3 jnp dec sbb sbb (bad) (bad) (bad) lcall sbb inc ret bndldx jle ret cltd dec (bad) jae push xchg or sti add test arpl or repnz pusha hlt lock dec pop ret mov fwait cli decl pmullw popa lret (bad) clc dec loope out pop sti (bad) (bad) mov push or pop sub dec mov inc cmp (bad) pushl cld rolb pop pop push dec pop push and mov out adc ljmp mov add or and in fidivr push bound xor (bad) sti ljmp (bad) ljmp sub ret aad sbb aaa push pop sbb mov (bad) movsb imul (bad) jmp jp cld test stos mov clc into (bad) aam fmull dec js bound add test (bad) (bad) mov data16 mov outsb test ljmp mov decl mov stos mov inc bound outsb cmpsb cmp lahf testl or mov add (bad) in pop das dec and jmp fs scas scas ja dec mov (bad) (bad) ljmp and popf ret loop dec pop push loope xchg jb dec or das push add push je decl fwait lret add or icebp mov cmp (bad) in test xchg inc adc (bad) movsb stc pop loope lret add push (bad) jmp stc mov ret xlat adc fsubrl inc mov mov (bad) (bad) ljmp lods lret mov mov ss popa js repnz je sti stc sub lret sbb das stc cmp loopne ja sbbb dec and cmp mov (bad) jmp jmp je sti push out sbb mov lods add dec test pop jnp mov cli mov decl pop jg int jmp pop in (bad) pop js sbb dec (bad) (bad) (bad) (bad) sti pop popf push sarb sahf push jne inc sbb (bad) fisubrl (bad) imul cmp ja out (bad) insl scas inc outsl cli pop pop rorb in inc repz sub shll shlb popf mov fs out call cmc incl aas add cmp pop out mov aaa pop push cmc stos push out (bad) call jge mov sti xchg in xchg mov call sub jae sti xor loopne ds xchg mov in scas gs int3 cld stos call jmp out or and daa aam insl xchg mov leave daa add cmc mov pushf cmp xchg xchg xor add outsb add lods sti sbb xchg or ffreep or in mov mov inc jbe ret (bad) (bad) jg mov mov pop adc mov jp mov into lahf push push jno cmp inc (bad) (bad) jmp and cmovnp arpl lea in clc cmp jnp xchg xlat dec sub sbb dec mov (bad) incl mov (bad) pop inc and repnz and dec mov inc dec xor adc scas or jge dec sbb push sti movsl (bad) in push pop enter ljmp out xchg aam rcrl or inc stos jbe arpl repz (bad) (bad) incl jnp fcmovu push lret fwait insb ds rolb in mov stos push mov scas inc sub arpl mov lock push ljmp pop test ret test dec je ret out loop in inc ret xchg xchg lock or jo fstpt xchg dec (bad) call xor and rcrl int lcall xchg push iret fstps xor sub (bad) fcompl jnp hlt test pop adc mov pop ret leave inc cmp clc incl pop fwait cmp add jecxz pop add rorl jle and jae (bad) mov insl jne mov nop sti fisttpl cltd add cmp push test (bad) decl jns test je and daa mov push xor (bad) (bad) dec xchg and xchg cmpsb lods loope adc mov movsl (bad) pop cmpsb add scas sub (bad) ljmp scas ror xchg jl ret mov inc (bad) (bad) decl cld insl and popa jmp imul inc (bad) lret sahf jae in popa dec pop test push shlb sub aaa clc sbb sub and out sbbl (bad) (bad) (bad) jmp mov push loop int3 inc lods dec ret aas adc cmp les test sub mov int3 lods jl inc pop mov sahf xlat loope (bad) (bad) out ss or lret rcll bound xor aaa xorl push mov rcrb jne add (bad) mov iret jae,pt jo int3 add (bad) movsl fdiv jp inc mov add (bad) mov sbb ficoml (bad) fcomip sbb xchg push mov and add fildl (bad) ljmp mov cs rcrb ja insl jl dec dec outsl clc (bad) call fcmovnu das jo mov sub and loopne mov mov push loopne mov xor xchg int jno or (bad) fnsave xchg xchg call mov (bad) mov movsb ficomp jo xchg adc (bad) decl and scas dec out (bad) (bad) das jle xchg (bad) pushl hlt jns aam movsb sti pop pop mov dec imul add data16 xlat inc popa cmp add loopne stc jb icebp adc mov push pop push add rolb (bad) mov and jl mov or (bad) imull popf add fnsetpm(287 (bad) (bad) call hlt pop jb xchg dec lret pop push cmp jbe adcb push sti rcr inc inc or pop and rorb fidivr jl adc adc inc or rorb mov pop mov imul fcoms sub sbb adc xor dec push jle (bad) (bad) (bad) ljmp enter inc jl mov fadds idivb cmp addr16 and mov mov lods jg inc js mov cs dec push out inc (bad) fcomip incl icebp and out popf pop push sub stc jno lcall test in (bad) push dec pusha mov cmpsb inc push cs lret decl test or push nop movsl aad dec pushf fwait (bad) (bad) (bad) (bad) jg jl inc int test sub dec cmp add cli or and cmc xchg jns ljmp stc out sub push pusha mov sub notl and dec in in (bad) pop cli (bad) (bad) decl mov cmovs sub jp (bad) adc or and mov pop lock inc arpl xchg xchg ss push mov (bad) (bad) call loope push pop mov (bad) out pop fdivrl mov sahf ret sub daa adc sarb or incl sub and std fildll xor inc (bad) (bad) (bad) jg lcall roll aad outsl jnp cmp (bad) cmp mov or (bad) lcall ja adc dec or rcrl push inc (bad) dec pop in negb std dec adc sub (bad) (bad) (bad) jg push cmpsb adc stos pop mov ficomp pop jmp test std dec clc mov (bad) (bad) call jl test push loope fdivrp inc dec or xchg iret pop (bad) cld sahf lds cwtl dec jle inc stos les jnp and sbb sahf data16 mov movsl xchg jb (bad) (bad) lcall mov lcall scas push adc and (bad) lcall jp mov mov cltd pop test cmp (bad) jg cmp outsb cmp pop jmp fwait xor idivb cld inc pop pop inc sbb addr16 jb shrb (bad) (bad) (bad) fistl lahf mov inc add (bad) test les fldl mov (bad) (bad) sti xchg int3 jns iret dec imul add sub (bad) (bad) incl xchg rcll mov and mov mov call push cmpsl xchg add out inc insb addr16 inc cmp (bad) bound adc je jmp inc aad or movsb je xor in mov (bad) (bad) ljmp cmp dec loop sub mov sub adc mov adc cwtl testb xchg notl jle adc fisubr icebp lds cmp or xor mov scas call pop ds mov (bad) decl jnp dec mov or sub fistl call nop pusha pusha inc xchg inc lock mov (bad) cmpsl fcomps outsb fist push ja out jne rol mov fs mov (bad) (bad) aas int out or pop mov cltd mov (bad) fistp and aas and (bad) cltd mov mov xchg imul (bad) (bad) jg lea out (bad) out mov or inc adc push fidiv lods out ljmp push fistpll sub repz and xor pop lahf fisubr pop dec aaa gs fwait ljmp xor inc jge inc test dec fs mov (bad) fimull adc add fldl sti (bad) (bad) (bad) fldt jbe cli mov clc and push out jecxz and dec test (bad) lcall adc adc movsb aad inc out pop jge or cmpsb arpl (bad) mov push adc je lret push rcr inc and jb fidivl and decl dec inc push fwait lods jp iret fisttpl jno outsb roll cmp (bad) (bad) jmp sub (bad) and jle inc mov in mov out inc mov popf les mov stc mov adc ja clc add in sbb jo ss sub jae insb add xchg pop jbe icebp (bad) mov arpl push xchg adc cmp pop or mov add fsubs dec pop or cmpsb lret xor repz les cmp (bad) (bad) (bad) (bad) (bad) cli loopne xchg mov mov lods dec cmp iret fwait aam inc (bad) xchg cmp (bad) ljmp test add or shrb je int3 (bad) (bad) (bad) lcall stc test cmc push jb loope int3 pop es push (bad) testb call xor jp xor cmp (bad) (bad) pushl mov leave pusha stc jb mov push std mov call inc aam pop push xor jno data16 out or outsb and testl lahf test xlat out sbb inc lret daa cmpsl aad cltd adc insl dec addr16 xchg lcall push fisubl pop bound dec ja fnsave scas and clc xchg call mov and shr adc add incl test lret xor pop (bad) mov push or xorl cli or (bad) jne pop mov mov (bad) jg std adc pop mov das fadds xchg bound mov (bad) ljmp sbb dec lret inc inc mov (bad) (bad) (bad) jg cmp pop clc movsb ds icebp int (bad) sbb xor cmp (bad) push adc dec rolb insl push leave (bad) (bad) jmp sub and insl pusha les sbb inc sbb push push sar (bad) (bad) jg (bad) mov sub pusha arpl xchg pop nop hlt add xor sub pop jg das shrb aam xor es xchg adc ljmp push xor sub insl mov xorl (bad) incl or (bad) fistpl pop insb clc dec repnz cli ljmp pusha movsb idivb gs stos cltd mov push inc sar (bad) (bad) lcall xor cwtl stos jae mov xchg mov pop jno mov pop lock pop (bad) popa add out mov xor fcomip das adc dec sti xchg (bad) dec mov xor jne push les and inc xor movsb sub (bad) notb dec or stc (bad) (bad) (bad) jp imul insl sbb addr16 mov push jle cmp clc arpl fcomip das shll push aas mov push jb out imul (bad) (bad) call lock jl loopne inc dec push imul movsl popa xor dec sub push loopne test dec lock xchg inc cmpsb loope mov (bad) (bad) jmp add xchg out sub mov mov mov addr16 adc lods mov pop bnd xlat push fdivrl mov pop ds jmp (bad) (bad) (bad) ljmp add cmc adc sub dec inc ud1 inc push cmp (bad) loopne (bad) pop das fisubr dec mov push jns push inc lods loopne xchg incl (bad) adc sarl out sub or in (bad) (bad) (bad) lcall xlat xorb sbb pop dec into xor push mov pop jne fdivrl clc pop adc rcll mov add pop (bad) pop cmp das add adc jno mov mov and jmp je sub dec xor sbb jo aad and (bad) (bad) lcall lcall jmp add mov fistpll add pop jle repnz (bad) (bad) js and ljmp out xchg cmp dec imulb (bad) (bad) decl xchg (bad) sub pop stos or jmp outsl lcall por (bad) add add dec inc mov cwtl mov xor decl rcrl (bad) aaa jle or lock (bad) mov add pushf xchg mov cld mov inc adc push and hlt mov jno js inc scas pop jg lods mov pop loope pop mov jg mov (bad) into clc or push lcall dec mov (bad) (bad) pushl movsb pop push daa clc insb mov mov leave stc int jl popf push (bad) lcall mov (bad) mov es mov loope jmp jg (bad) (bad) mov xchg push (bad) mov daa (bad) lret mov je push outsb pop or inc jg (bad) xchg sub push cld adc hlt ret lret dec stc (bad) (bad) dec pop xchg and and jb (bad) aaa ss cmp sub mov fisttp js loopne mov arpl clc shrb popa dec push jge adcb jecxz lret divb jb push adc (bad) pop jnp insb imul (bad) (bad) decl xchg xchg or push rorl int3 in addr16 popf stos mov push mov mov push lds ret sub mov cld adc mov sar out jge jbe subl or ljmp add movsb (bad) repz push or out mov (bad) lcall adc rolb pop cmp adc fidivrl push sub jns,pn aad jle scas pop xor sub mov pop stc out ljmp fstpl fnsave test (bad) (bad) ljmp and sbb pop and pushf jecxz pushl mov xchg aas stos xchg pop out movsb mov shl cmpsl dec clc push (bad) fistpl xchg or pop jbe (bad) (bad) jmp jle jp popf pop xchg jae adc cmp fsubs insl repz (bad) mov popf add xchg lea cmp add sti (bad) mov leave dec xor outsl (bad) xorl (bad) jmp cmp int xchg insb sbb and sbb jge xchg dec and xchg cld (bad) ljmp or or cmc cli jnp pop jecxz and fisttp das leave dec loopne fwait (bad) mov in ret mov dec das dec sub lret cmp sarl inc jnp (bad) (bad) (bad) jge loope fmul sub aam pop sub xor xchg out test (bad) call int pushl roll aaa mov popa je push repnz xor cmc cld (bad) (bad) (bad) stc das ret (bad) out cmpsb and repz rcll aad mov mov mulb and sub dec sbb sbb (bad) (bad) decl inc pop jl enter lret andb mov stc adc xor or call push fistp ss or xchg insl xlat pop adc fwait xchg xor scas leave inc incb xlat (bad) (bad) (bad) mov pop push dec xorl daa pop sbb sbb mov std or adc sar pop mov (bad) (bad) mov pop adc mov aam adc mov dec imul push (bad) push jle mov push pop jge dec push inc push fistl arpl (bad) mov cwtl mov pop jne (bad) fbld sbbb inc out cmp scas clc incl cli and cwtl sbb clc add mov dec (bad) mov (bad) ljmp add pop repnz and jecxz mull jmp fnstsw xchg call icebp cmp in mov cmpsb scas dec jbe fdiv dec add call cmp dec cmp (bad) dec mov ljmp push xchg lret mov jo xor xor nop pop xlat sub das inc daa faddl repnz decl std stc pop (bad) aaa adc insb ljmp das and pop loope (bad) lcall add sub lock or data16 cmp (bad) adc in jg push pop ficoml jmp loop xor push dec rcl and cmp pop aas ret mov lahf add (bad) (bad) mov (bad) mov sbb mov jnp or add mov jecxz pop inc jmp das xor pushl jle add js call inc xchg push sbb dec inc pop xchg and aas lea mov scas add jne fucomp add xchg dec repnz (bad) lcall sbb xchg (bad) xor xchg cmp jg fs mov repnz lcall outsb fcoms and inc mov iret xor mov lea (bad) (bad) (bad) ljmp mov xchg addr16 cwtl call arpl sbb push out sub inc dec push ljmp and sub movsl mov (bad) (bad) (bad) ljmp sbb out push cmp xchg bound fnstenv pop mov add ljmp rolb insl outsl xor pop (bad) (bad) (bad) dec or mov fs xchg jae bound adc aad daa test inc xlat pop pop (bad) insl xchg pop push mov icebp stc fprem add sub adc jmp lahf cs push cmpsb leave jne or pop int xchg in xchg mov (bad) out lds mov addr16 fistp add xchg cld fcmovne (bad) jb or das stc (bad) (bad) push or cmc addr16 jb loopne dec (bad) xor mov (bad) jmp (bad) pop mov cwtl popa inc add or dec imul dec pop (bad) hlt add (bad) xchg js std sub outsb loope pop (bad) (bad) (bad) jmp xchg iret fsubrs aas notb push test test in mov cld gs ja inc (bad) dec mov in sti or das loope push sbbb sub xchg dec mov sbb int mov mov pusha out nop (bad) (bad) jg mov les arpl or (bad) out mov push das jp pop movsl lock or mov pop lret outsb add push (bad) (bad) fcomip push gs (bad) and jno push push mov test idivb lods dec sbb pushf sar (bad) dec mov movsl cmp and movsb sub dec xchg inc or clc (bad) ljmp dec cmc pop lock cltd frstor push mov sbb lcall or mov lcall push xor repnz jns rep cmp (bad) lcall test imul jl inc push inc lcall (bad) (bad) lcall jae imul stos and pop add mov dec push cmc xchg xchg mov icebp mov jle dec sbb pop sbb outsb mov adc push xor andl sbb mov push (bad) clc fcomps (bad) (bad) decl jg fnstsw mov in mov jns cmpsb inc in stos xor cld (bad) ljmp push test xchg adc dec (bad) adc cmc jmp sub fs dec insl (bad) (bad) (bad) jmp cmp jg notl fwait xor test inc leave fildll mov push inc and flds stc (bad) (bad) xor add sbbb inc (bad) (bad) (bad) inc inc fs gs pop xchg outsl push sbb enter insl popa inc (bad) fs (bad) mov lcall mov outsb rorl (bad) (bad) (bad) lcall fcomi fwait xor mov (bad) repz sbb das inc inc xor leave (bad) (bad) jmp mov push xchg jb push xor shrb popf mov adc cmp insl decl imul push sbb pop pop ljmp pushf mov loopne movsb cwtl pushf popa mov xlat push mov sbb fnstenv (bad) jg call xor mov sub mov sarl sub out call js les scas sub fwait cmp jb call inc es push jle into pusha and push outsl lahf ss test (bad) jg push jl int pushf hlt mov inc (bad) mov and xlat stos repnz movsl leave (bad) (bad) (bad) (bad) mov std jmp popa sub jmp divb rcr notb cmp mov xchg mov (bad) jg popa sarb push xor out orl mov xchg pushf inc (bad) (bad) jmp cmp inc aaa mov daa addl popl and out out adc mov cmp mov dec jns (bad) (bad) (bad) pushl xor fstpl mov lea mov cli sbb stos rcl into xchg push gs decl decl mov pop pop outsb out or mov and cmpsb ret push or (bad) (bad) (bad) jmp adc sub cmp mov add arpl mov clc js jge ljmp stc call test jne fstpl sub arpl push pusha pop dec repnz jne pop sub dec aam iret fmul call nop or ret repnz adc jecxz push gs jne mov inc imul (bad) mul mov pop addl or cmpsb pop loop daa mov leave (bad) (bad) push (bad) shll sub push into or mov stc insl xor sar jg test lock mov push stc and das aaa das popa push adc std (bad) jg jp xchg and das or in daa mov push xor cwtl jle jl mov jb and ljmp in xchg insl dec lea dec xor add aaa xchg stc mov hlt jle scas jge call repz sti fadd inc (bad) shlb and in mov mov cli (bad) ljmp loopne jmp push jbe xlat imul pop enter cli push loopne call push pop inc xor or jbe cmpsl adc data16 in cli (bad) movl incl repnz sbb add jns mov or cmc test mov cld lcall or bound cmp push (bad) push and leave sar into stos jnp add sbb js adc jp clc (bad) (bad) ljmp cmpsb sbb inc shrl mov into mov mov scas sbb push push fcomip incl mov fildl (bad) stos int3 divl aaa lcall in or jae mov xlat pop add (bad) jne push out push xor and (bad) jg daa xchg sarb xor test shl scas clc (bad) jle int3 insl daa cli mov mov pop adc adc (bad) jb xchg sbb popa sub (bad) (bad) pushl lret cltd clc sbb subl jo add (bad) (bad) mov lahf in or inc jp push xchg pusha and (bad) (bad) (bad) incl mov sub sbb jl mov into cmp add mov push hlt idiv (bad) dec movsb mov int inc (bad) sbb cmpsl leave clc incl cmp sub fadd cltd es (bad) (bad) pushl push inc xor ds testl push addl stc (bad) adc cld xchg mov dec mov mov or sub (bad) fcoms (bad) (bad) (bad) pushl mov test movb xor adc std in fs notl xchg xor cmp mov (bad) cli jl inc add mov xchg push and lock clc xchg xor imulb push mov int ds (bad) (bad) (bad) ds add dec add insl xchg ja add popf mov int3 rorl pusha out sbb jno leave adc (bad) pushl and fstpt add xchg xor (bad) (bad) in mov stos inc loope inc dec ljmp xchg insb sub loope jmp imul sbb jle (bad) (bad) mov and ret or or and jle nop jae pop (bad) (bad) (bad) ljmp cmp loopne jmp adc mov mov cmp sbb (bad) (bad) jg push fcom movsb xchg cld jb cmpsb jge push xor cmpsl clc aaa int3 mov push xchg aas sbb cmp mov jns add push inc subl cmp fpatan push push or outsb (bad) (bad) (bad) (bad) mov (bad) shrb mov mov jne lret (bad) jge std outsl incl cltd mov in push mov fcompp popf mov aad (bad) lcall xchg or ficomp in pop icebp jne std mov fimull loop repnz (bad) jmp out inc aaa cmpsb push addr16 incb lods ss pop mov bound sub (bad) decl loope repz loopne mov mov and xchg xchg pop repnz (bad) ljmp js stos xchg movsb test sbb imul pop mov lods jns lret (bad) (bad) lcall sahf push mov pop xchg lret movsb add scas stos in sbb inc movsb pusha scas cs mov iret xor call je lcall std call sub jecxz in pop ds inc jb cmpsl into (bad) (bad) pushl rcrb fs add jp js cmp xor dec xlat or call inc notb pushf lahf je cmc mov call loopne outsb inc ss shrb push subl out xchg daa dec jmp (bad) jmp ja cs lds xchg mov daa fwait push pop addr16 add adc incl sarl push aas out add popf (bad) push or cmp or out js jne jge mov jo insb mov xor (bad) (bad) cmp fistl mov jecxz jecxz insl jg (bad) decl fldt fs adc aaa inc sbb ret adc (bad) call xchg je lret xchg dec fsubr test cld cld sub push push arpl inc je call loopne pop and pop arpl das xor rclb stos (bad) (bad) (bad) jnp popa sub sbb enter ljmp ficompl lods cmpl je mov (bad) jmp or movsw mov jmp test sbb (bad) mov flds les adc (bad) lcall mov adc pop (bad) pushf movsl jmp movsb mov mov (bad) decl je lods lock aas inc enter xor lahf sub and int jl movsb jno dec flds incl inc xchg push dec in aam inc dec icebp sbb jbe xchg add (bad) jg mov in jecxz fstl xchg jne stc add in sub push lock sbb pop in mov mull mov push mov aam jo (bad) (bad) ljmp stos (bad) std sub pop jmp jle,pn add dec jo xor jg lcall dec sahf add add or ss xchg lahf mov jecxz call cld mulb dec sub insl pop movsb in subl dec (bad) (bad) decl sarl outsb xor lea and pushl jb xor popf xchg jl fiadd cmpsb fs test (bad) (bad) jg mov jbe pop pop jp enter mov (bad) jp je add pop lods out cli das clc ljmp lret (bad) fistpll add in xchg mov add mov cli scas add rol add jo cld adc loopne mov pushl and sub adc push push inc imull (bad) (bad) jl repnz js sbb fcoms notl rorl pop adc (bad) (bad) dec popf mov mov sub mov add addb fistp cld insb sbb ja push adc mov les xor dec add (bad) (bad) jmp mov fwait clc icebp mov dec mov repz mov ljmp xchg mov fwait pop fistl ja sti dec xor lds xchg pop xlat mov (bad) (bad) call mov and shll add sbb cld (bad) (bad) decl mov mov aaa aam insl dec dec mov pop scas cmp sbb (bad) call incl popf sqrtps mov sbb (bad) fisttpl jge shrl cmpsb movsb imulb cmp and pop in roll incl inc lcall sub fildl int3 xchg aad decl lcall sbb mov scas mov jae cmp xor pop pop (bad) fcmovne xlat dec dec add mov dec icebp iret daa (bad) adc push lods ficompl not lds fsub fnop push jae cli (bad) (bad) call dec mov push lcall sti cs and bound insb insb sbb jg fldenv sbb mov cmp pop pop loop or (bad) (bad) (bad) mov inc mov lock jae xor push movsl or and dec cld pop mov scas mov push add repnz cmp sbb dec (bad) (bad) (bad) inc vmovntps pop stos sbb pop scas gs xlat push and flds aaa xor dec repnz jmp xor and push pop addb fdivl das rcrb xchg cmpsb leave mov shrl lret (bad) (bad) call cmp xlat xchg cs mov out loopne pop sub add icebp xlat repz cmp jbe pop cmp neg call lds insl (bad) in mov jns andb bound pop es popa (bad) in mov mov (bad) (bad) (bad) inc add dec es or loope std inc stc lock dec dec xor call imul inc hlt pop cmc decl adc fmuls or cmp out dec movsb cld dec cli (bad) mov negb int3 mov jmp mov xor bound dec stos fdiv mov sti stc cmpsb mov call xchg mov or fidivr arpl ljmp xchg lahf pop adc add xchg cmp cmpsb dec dec fisub daa jg pop stos mov (bad) call sti sbb std cmp insb inc adc mov xchg and lahf insl adc popa (bad) lcall cmc test mulb mov sub sub jnp (bad) (bad) (bad) pushl sarl (bad) loopne cwtl sbb orl pmulhuw push and mov jg pushl fiadd adc push pusha lret jp test sub (bad) lcall mov or nop sub int in mov fldln2 mov out mov lcall pop inc stc or mov loopne jo repnz sub mov in mov pop das lock popa pop add test in je mov cltd pop sub xchg jne mov mov xchg out outsb fcoml popa dec inc (bad) (bad) call or xchg fwait je jns sub jmp cmpsl negl scas std decl int3 cltd rolb mov and push inc mov (bad) (bad) call cmp sbb sbbl jp pop scas (bad) mov out dec jbe xchg shrl imul mov inc mov jae in test incl pop notb dec rcrb xor mov xor fs jmp loopne (bad) mov xor pusha mov add and out mov or call push and call cld xchg repz cmpsb fnstsw leave test insb arpl dec pop ret dec (bad) pushl cld inc imul pop pop es repz aad sti cmc cmc cmpsl fcompl nop (bad) decl test sub nop xchg fsub push sbb mov (bad) (bad) ljmp andl push push repnz mov pop js jne mov repz aam scas ljmp and je push int3 xor (bad) (bad) pushl roll stos rol or cmp mov pop mov mov lods add (bad) dec (bad) fwait mov pushf adc dec or mov mov (bad) fdivr xor ret lcall or es sbb in scas (bad) mov decl dec or es daa (bad) sub lcall cmove mov xor (bad) jnp cmp aad lods movsb ja (bad) (bad) (bad) mov popa or arpl and ja cmpl xlat mov ljmp jnp ss or or (bad) (bad) (bad) (bad) (bad) clc push pop xchg nop jno ret push mov dec mov adc pop pop (bad) jle pop aad insb (bad) in pushl es add mov mov ret stos test (bad) decl (bad) fsub dec lret or add iret into mov xor sub repnz (bad) jmp cmove mov popf add stc xchg and jp (bad) movsl fcmovbe dec jecxz (bad) hlt pop aam out (bad) je xlat test dec mov shl (bad) and inc (bad) cmp inc mov push imul mov clc lcall mov je push lock push repz aaa (bad) (bad) jmp push push rcll out pop mov or mov xor push dec jns mov gs (bad) jmp daa cmp pop jmp movsb (bad) xchg mov cmp (bad) (bad) call fistpl sti jp push mov shrb fiaddl daa fs sub pop cld (bad) (bad) call inc push out cwtl add fs mov test or mov arpl (bad) lock (bad) (bad) call pushf ljmp and out out (bad) jb,pn lcall (bad) (bad) fidiv iret push xchg add jge jmp aas lods in mov das inc decl icebp sbb ss ja (bad) sahf dec pop enter dec (bad) (bad) (bad) jmp push sub xchg inc lea xor pop mov cmp xchg mov sti inc mov mov imul clc cli sbb sub dec loope pop xor (bad) (bad) (bad) jg lahf xorb stos jne nop stc test mov fs or hlt call sti hlt dec and addr16 ds lahf ds lods add pop (bad) (bad) (bad) (bad) jg imul ljmp iret mov test sbb mov icebp decl dec add (bad) addr16 int push xchg and pop and (bad) testl jne insl add test sahf jmp or jp and and cmp sbb dec push or and nop dec pusha stos ret ss stc xchg (bad) fsubr shlb or (bad) (bad) decl divl pop out faddl daa xchg aam pop in pop rcrl or mov mov xor jge pop test shrl pop fidiv jg incl sti iret enter gs or jns push movsl mov cld (bad) call repz pop jl sbb fild mov fildll xor movsb mov lcall fsubl loope pop pop push cmp movsl es dec xchg out repnz (bad) call addr16 pop out popf in loop cmp cli bound out icebp les add pop jle pop and loopne and ss inc call (bad) mov lea in imulb loopne std das in in gs lcall je and add and into gs (bad) (bad) ljmp std or jne jbe jns addb sub adc clc fcoml mov lcall incl mov loop loope sub lcall (bad) (bad) (bad) decl mov pop jno xchg (bad) ss dec aaa js (bad) cmp popf and (bad) das cli enter ja mov push ljmp cmp lcall dec dec pop daa jecxz pop sbb mov scas and jmp xchg test repz lret sub jp (bad) lcall mov xchg sub xchg adc sbb inc xchg fadds fst (bad) incb pop pmuludq push mov jae push cmp repz sbb or (bad) lcall movsb sti pop xchg (bad) jne fildl (bad) outsl negl jg cli jnp in mov inc (bad) pushl cld xchg add mov scas inc fisub (bad) push (bad) enter in or pop cmpsb pushl mov lret inc loop or cmp or pop xchg ret add ret repnz cmp mov or mov dec xchg push les icebp (bad) (bad) jg mov ret jge aad inc addr16 in add pushf aam faddp mov (bad) mov (bad) (bad) call (bad) mull movsb dec jecxz into fildll push jle andps mov push mov cmp je (bad) (bad) (bad) jnp add cmpsb aad pushf ss sbb popf gs pop nop subl push xor lcall mov mov std (bad) or decl test (bad) popf arpl movsl cmp sbb mov ja fs (bad) (bad) (bad) out jecxz call cwtl fs or sbb leave pop push sbb rcrl dec repnz (bad) (bad) pushl dec dec sti adc orl fdivl mov xor pushf nop xor jl (bad) ds cli jmp dec mov jne fs fwait sar (bad) mov xchg jmp xchg nop jg cmp mov push test jecxz push fldenv test leave sbb (bad) mov adc in and fnstcw sarb jecxz lcall int3 jle jg adc movsl les test jmp test (bad) jmp push add aad mov clc add cmc jae mov dec jp and imul movsb add pop or fldl (bad) lods fdivrs fisubl inc sub mov inc xchg fsubrs cmp mov mov or lock cmc (bad) lcall fisttpll sub das popa aam add test loope (bad) lcall (bad) out mov dec dec fsubrl sbb dec mov leave xchg mov jae jne pop daa xor pushl cli and pop pushl adc xchg lcall push test sub jecxz mov sbb sub mov dec loope mov push insb ficom or xchg ljmp lock loope fsubp or cmpsb aam sbb and loope jl (bad) mov inc jno cmc sbb int mov aas clc (bad) call sub mov in fwait hlt ret pop mov loope sbb inc (bad) (bad) ljmp cmc or inc sub xor arpl cli shlb sub repz test in stc dec (bad) imul hlt cld jne ljmp popl lock lods push xor fmull aad adc test pushl js into cmp std enter jb mov les fwait stos mov dec xor decl outsl lcall gs adc ljmp movsl xchg in mov xor push jmp push int sbb vmovq (bad) fwait test leave inc (bad) (bad) (bad) jmp (bad) xchg mulb in inc out rcrl mov cld mov cmpsb pop repnz jg (bad) (bad) sti mov dec pop adc or arpl aaa jmp dec xchg pushf xchg imul (bad) call in shrb cmpl mull in pop push xchg mov bound leave (bad) (bad) cld daa pop clts fldcw adc gs xlat xchg sbb and or cmp (bad) (bad) push jmp cs (bad) xchg popf fistpll push lahf outsl fsubrl das or adc push js add pop add nop sbb mov (bad) ljmp xor or mov add minps inc movsl xchg data16 (bad) (bad) inc aam cmpsb mov clc and mov mov mov cmpsl sub inc jne and fistpll fwait inc lret mov jl hlt repnz pop add adc and stc fisttp xchg std sub mov inc outsb inc (bad) lcall fdivr add mov inc stos es push mov jb pop leave mov incl imul pop cld mov jg sub test movsb pcmpeqd mov and pop pop cltd cpuid mov aad das cmp (bad) jmp pop inc mov fisubrl dec mov xor call inc cmp jne xlat popa (bad) dec dec test (bad) (bad) (bad) (bad) in xlat leave mov cmpsb sub aad xor and sub cmp fld1 cmp push jbe repnz pushl fs cltd stos push in sbb sbb outsl xchg push cmpsb push popa sar (bad) (bad) jmp jne mov and jge xchg ja adc sahf loopne scas xchg xlat lret sbb (bad) call jge dec mov arpl scas pop cs mov (bad) (bad) (bad) jg es xchg push test dec or ja push xchg test stos aam repnz mov (bad) (bad) call cli lret pushf fistp inc jo in jo push ja mov stos stc test jbe xor sbb xor sbb data16 inc xor (bad) (bad) ljmp and cmp ds or pop pop push jmp push test jbe daa pop lahf es inc out mov adc ljmp in push mov mov pop mov mov or (bad) and mov mov xchg jg and or sub int add (bad) (bad) (bad) out mov mov xor and lcall cmp sub (bad) test sbb (bad) mov or (bad) das push (bad) jbe pop xlat mov jle push in (bad) (bad) mov sarb mov push fdivrs imulb fcoml fyl2x mov (bad) call aas push cmc sbb push imulb mov xchg xchg pushf in adc mov cmc cmp (bad) (bad) lcall jge shr insb and stos xchg sbb test inc shl dec (bad) pop cmp (bad) (bad) (bad) fidiv fisubr stos test ljmp nop les mov imul lret push outsl incl (bad) xor popf push xor aas popa sub out xchg add shll mov jecxz jp rcrb lods dec adc xchg or xor gs pop inc out je and mov scas or jl lock xchg rcr jns (bad) (bad) ljmp cmc push mov add xor sub cmp lcall js nop sbb xchg dec inc cmp mov jg push cmc sti mov sahf push inc xchg shlb fstps leave repz inc sbb les add dec adc mov pop inc ljmp pop lret scas jnp (bad) ljmp addr16 test mov fisubr (bad) (bad) (bad) (bad) in int jne loope inc pop pop ds mov hlt ljmp rorb (bad) decl mov dec fyl2xp1 mov data16 sbb cmc pop or fdivrp mov mov mov leave inc and lcall out lret orl dec cmp enter insl push mov lcall hlt jae adc sub sub push in rorl mov ret std (bad) (bad) ljmp daa and cmp mov and rorb sbb sub outsl push push sub dec ss and inc ljmp and inc xchg data16 jge out adc pop gs and fs lods cmp push lea lea outsl (bad) jmp fcompl (bad) (bad) ljmp enter popa or adc mov les push in sub cmp sti lock jg lret dec (bad) xor jnp push jg movsb add (bad) decl or or imul push adc mov and jae pop lock jg jle mov dec pop mov xchg (bad) xor mov movsb mov stc stos (bad) add inc jnp xor sar (bad) (bad) pushl push jmp jns lods add add inc adc ficomp iret loope icebp jno clc (bad) jg ljmp popf xchg push movsb lcall jmp pushf shr jge (bad) (bad) (bad) jns mov mov xor scas sub xor push subl (bad) aas leave push fidivrl ljmp jns mov pop test rcr out (bad) (bad) (bad) (bad) lcall (bad) cltd loopne divl enter cmp insl out push cltd xchg fmull (bad) xor cmp mov data16 or mov arpl sub bound lea testb pushl mov inc xchg adc xchg cmp cmpsl inc aam test fwait push (bad) (bad) (bad) mov outsb lock out js shll pop rorl mov cmp ja test push push sbb gs xor ret aam dec (bad) (bad) (bad) out pop sbb add pop insl sbb ljmp inc je sbb loop (bad) (bad) jmp or sbb xchg (bad) (bad) inc xchg loop js dec int3 test incl mov (bad) jmp xor pop fimul mov aam push pop xor stos shrb mov (bad) (bad) call ret inc lods fimul and and and std xchg stos sub mov in aam in inc add call and rcrb imul mov xchg xor jns (bad) (bad) (bad) aas les ja out nop mov mov mov add test (bad) (bad) jmp inc es xor push (bad) pushf cmc push test fistp (bad) (bad) (bad) mov test and xchg sbb in fiaddl pop sbb (bad) (bad) (bad) fcoml (bad) cmp mov jg in jl ret js out movsb outsb sub icebp mov adc add xchg mov (bad) (bad) (bad) (bad) cmp jge aas dec pop test cmp lret fnstenv divb or push mov push in loopne jmp mov dec call idiv (bad) jg ss cli jo imul dec pop mull data16 dec andl clc (bad) decl mov in test push fdivr cwtd pushf faddp xchg xchg das (bad) ljmp mov mov mov pushf and das cli scas jbe push push pushf or mov cmpsl fistpl xchg aam sub call jns outsl and mov xchg jp xchg insl (bad) (bad) (bad) lcall leave mov je or out lret lahf pop test dec sarb (bad) lcall fsubp (bad) sub pop fild inc loop jne aaa std jg xchg sbb popf mov sub (bad) (bad) (bad) incl imul cs gs mov mov mulb inc aas push jo lret dec jnp inc addb jns push sti xor lcall dec mov xor ljmp cli push pop xchg cmp lock mov (bad) jl push jecxz or mov lcall pop sbb (bad) pushl adc push and stos in fildl (bad) (bad) (bad) cld or dec cmp mov dec rcrb les jbe mov fisttp sub cltd adc lock xlat out push (bad) call (bad) pushl js xchg add js cwtl int sti pop sahf stos je test roll negl inc jl mov lahf cs adc stc das sub fldt (bad) (bad) (bad) inc dec (bad) std or (bad) mov pop lock addl cmp cwtl xchg std sbb fstpt xor sub inc popf mov ret dec add in mov jl push std incl into (bad) iret jo pop dec mov xchg imul pop addl ljmp es les popf shl mov je (bad) mov hlt xlat rorl or push (bad) fnstsw andl add (bad) pop leave aam cmp mov (bad) cwtl subl loope ljmp adc movsb add lcall fisubl jns push push sub jnp xor dec push call (bad) (bad) (bad) std into push ds aaa arpl xlat sbb mov repnz sub lret cmc push (bad) (bad) decl lds movb or das movsb out lret out pushf jl test (bad) (bad) in stos cmp loop inc push int3 mulb jl fmul push pop cmp (bad) cmp pop lret (bad) mov cltd (bad) mov (bad) xor subb loope stc lods pusha inc clc adc jnp popf int3 lds inc addr16 pushl (bad) out jne push adc movsl ljmp mov (bad) (bad) out clc adc cmp int3 lret and cmpsl pop xor push and mov pushl daa iret data16 shl and mov jne mov pop sub push jecxz sub mov pushf outsb dec jo and jg std jg (bad) pushl inc mov stc mov je jb xor cmpsl sar stos (bad) jns jg in sub sub (bad) (bad) (bad) (bad) jmp push ret lds push or mov pusha pop push call stc mov int3 mov pop pop jb inc mov mov (bad) decl mov push mov sub hlt pusha lods jg (bad) cmp stos mov dec out dec (bad) (bad) ljmp outsb imul xchg lahf clc arpl xor (bad) (bad) (bad) call js imul test mov sub jg push pop or jmp ljmp pop outsl ss mov cmp mov jle ror jb (bad) (bad) (bad) (bad) sti les in cltd jmp (bad) mov cltd ljmp push ret mov or and std or xchg fwait pop dec push mov imul decl mov loope lea sub je (bad) fisttp in imul js pop es mov or add mov test fs nop mov leave (bad) (bad) (bad) jmp das cmpsb rcll xchg jns fsubrp or cli ds rcrb rcrb mov dec xchg int xlat jmp ljmp push mov (bad) (bad) jg vandps dec addr16 mov lds outsl out fdiv aam xchg call sub mov inc enter loopne pop (bad) (bad) cmp (bad) jno push js rolb daa loope inc (bad) mov mov xor outsl bound lods adc mov xchg ret jmp adc dec cmpsl push enter fistp mov mov dec xchg push cmc mov mov mov jmp lcall dec sti dec jl cmp stc mov cwtl pop adc mov pop cmpsb decl cmp add inc fsubp dec mov repnz (bad) decl inc sbb inc dec or (bad) out (bad) lret mul (bad) (bad) decl dec pop int3 out inc jns shlb loop or push shl jl pop jp (bad) pushl aas mov int3 scas jl bound dec leave mov int (bad) (bad) (bad) clc push sbb idivl inc mov stos in das dec imul shl jecxz (bad) jmp je outsb xor in hlt pop xor sbb icebp int ret cmp cld repnz pop addr16 cli scas clc inc adc mov fs loope pop push fnsave jg arpl mov lret adc aaa push sub in stos push mov arpl cmpsl mov mov xlat inc jne mov lds mov ret decl pop adc int adc outsb sub fstps mov cmp idivb scas adc xor push dec test imul pop mov inc mov inc fistl xor sbb stc dec out repz xchg imulb ret pop xbegin clc lret mov xchg sahf cmpsb icebp adc mov lods dec rcrl mov (bad) (bad) ljmp dec fistp out arpl insb jne call rol fs inc lahf movsl jb inc sar decl (bad) outsl inc adc repz jmp dec push loopne cmp imul inc (bad) (bad) (bad) ljmp jmp xor pop lret stos (bad) mov inc jmp dec lea jne (bad) xchg lods jmp jl data16 cmp push (bad) jg call sbb and fwait cmp into xor dec push cmp lods loopne (bad) je sti pop dec xchg mov aaa (bad) mov inc push or imul call jg (bad) decl (bad) pop inc loope sahf scas lods fadd mov mov test mov aas pop sar (bad) call popa mov pop inc mov sbb ror cmp (bad) (bad) ljmp pop jp sbb adc mov xchg cwtl rep jg mov adc adc adc std (bad) mov dec jle in inc cld nop push aas xchg (bad) out push jns out (bad) fiadd movsl nop mov xchg (bad) (bad) (bad) ljmp cld call pop mov fist in cmp scas pusha loop cmp dec pop je adc (bad) decl or movsb adc (bad) popa cmp fwait add push shlb (bad) call ja data16 fcmovnbe jnp mov cmp icebp (bad) fistpll jbe push xor test or (bad) mov jle lcall dec stc sti xor lock xchg mov gs (bad) (bad) (bad) (bad) lcall pop aad sub inc inc mov fdivr out mov dec or lahf incl stc call jp cwtl ljmp push pop jge xlat std fidivr cli in jge in (bad) (bad) call enter and daa jge xorl mov inc jne add (bad) mov cmp bound dec movsb fld ja adc mov lcall test fnstsw mov pushf or (bad) mov dec dec fmulp stos mov ljmp and mov (bad) fldenv (bad) sub xor (bad) decl inc pop (bad) jecxz sub xlat je ficompl push xchg adc rcll stc (bad) (bad) incl mov xchg cltd into mov pop inc mov sub and cmp jnp in mov (bad) jmp push out cmpsl int sub jae or mov popf cld (bad) (bad) dec dec bound pop iret cmc repnz outsl popa loop movsl jmp push (bad) jne popa sbb (bad) (bad) call sbb outsl cmp (bad) push insl es mov push dec xor imul (bad) ljmp jecxz flds push fsubp ja mov iret std mov cmp enter addb add cmpsb notb cmp inc or adc mov test decl (bad) (bad) jnp mov xor mov sub jne cmp (bad) (bad) (bad) decl imul xchg fbld and andl scas scas push ds add lcall cmpsl jbe sahf xor or mov lret (bad) lcall pop jo pop cmc push add cmp lea jmp adc mov adc mov mov scas fistpll jbe add sub mulb cmp (bad) pushl fstps mov xor fidivr xchg aas and adc xorb cld adc jns jg test fcmovbe fldpi xchg xor (bad) lods enter cli (bad) (bad) (bad) lcall pop xchg mov imul mov mov mov call mov call lds das xlat ja andl mov jmp clc data16 push sub mov jg mov jne imull dec std (bad) jmp xor inc and call sub dec cs sub (bad) jg mov inc shlb mov adc roll (bad) lcall dec ret les (bad) add loopne rorb je shrl xor push sub pushl jmp jbe or fwait movsl enter inc adc repnz lcall xchg adc xchg mov fist imul call push test lret stos movsb bound (bad) in movsb mov (bad) or gs dec (bad) (bad) (bad) pushl imul dec int jge xor pop out out mov inc inc lock rcl jbe out cmpsb (bad) jg (bad) mov les mov cltd mov arpl fsubs and test (bad) jmp adc (bad) sbb or (bad) popf and cwtl or not pop icebp pop lods or mov push add jnp lcall mov push repnz xchg push (bad) (bad) (bad) lcall inc fs sub (bad) clc push mov addr16 xchg push pushf outsb imul mov decl (bad) push cmp sbb shll (bad) (bad) (bad) (bad) jmp sahf js sbb xchg and ds xorb add call xorl pop cmpl popa aad mov addl call mov cld lret push mov cli push test push mov stc repnz jg loope jmp enter dec (bad) in and stos cmp jns outsl cmp scas xor enter dec add iret cli aaa lea (bad) push gs inc pop inc dec dec mov mov (bad) jmp push aaa mov int (bad) ljmp push push insb push and push mov addr16 adc cli ljmp dec or pop mov popa aam (bad) xor mov shrl call nop mov ret cmp (bad) mov lds sub aaa gs add and xchg sub mov sub (bad) call inc sbb scas imul jnp mov jp lock std (bad) (bad) inc fdivl je xchg shrb adc leave stos inc in mov jae mov xor clc (bad) pushl mov mov cltd shll (bad) leave add cs pop sub mov lea popf lret lods movsl frstor mov (bad) dec movsl mov jae,pn add (bad) (bad) jmp insb jbe ret push xchg jns pop sbb dec sahf daa sub bnd jnp int cmp lcall cmc (bad) mov adc push loopne and xlat (bad) (bad) (bad) pushl rcl adc push lock out cmp stos add pop in scas xlat mov mov mov and scas scas insb (bad) insl sub pop loopne cmpsl xlat push je push imul or mov sbb call loope jg test cmp pushf test and cmpxchg (bad) (bad) ljmp cli fbstp hlt sub push hlt dec icebp mov out ljmp jl imul (bad) mov ret xchg ljmp fstpt incl sub jg jle xchg jne push lahf xor insb mov push pop adc std cmp test jnp xchg pop pusha loopne mov ds ljmp jnp jmp lods xrelease lods js jns nop and sbb (bad) (bad) ljmp call mov enter sbb or rclb (bad) int jmp cmc push push pop aas jnp mov movsl cmp or (bad) lcall inc add ret rcll popa mov test call add inc pop aad xchg pop rolb (bad) (bad) (bad) (bad) mov stos hlt inc (bad) xor pop add xchg cmp cmp dec insb ret aam jo dec (bad) std incl (bad) cmp je (bad) push mov adc cltd fidivl pushf aaa (bad) loopne (bad) (bad) jmp out sub mov out fildll or (bad) (bad) (bad) (bad) cmp imul add cmp dec cwtl mov hlt into shll jmp jecxz mov or dec push ljmp sub leave dec sub lds (bad) (bad) (bad) lcall xor lret jbe rorl aas out out test pusha inc add mov imul repz xchg sub addr16 pusha jb mov mov (bad) xchg jecxz (bad) jns js xchg test cmpsl cmc jecxz lret mov rcll mov add lcall pop bound ja cmp jbe int xchg (bad) (bad) incl lahf xchg stos inc pop mov ljmp movsl add mov inc fdivr inc clc (bad) mov cli mov repz clc xchg insb or call sarl (bad) inc mov xor sar ljmp fist mov sub and sub add mov loopne decl (bad) mov jnp dec sbb or ss into stc lret (bad) (bad) jg cld and xlat add xchg sbb das sub cmp xchg test aad std (bad) decl or fadd cmp mov cs sub movsb jb fwait (bad) (bad) call adc or push or rcll pop jae cmp add jo (bad) pushl add bound cmc fdivl clc stc xor sbb sbb dec add icebp mov cmp mov pusha call (bad) (bad) call mov mov and sub bnd (bad) hlt mov daa stc decl inc and and adc cmp pop fnstenv (bad) (bad) (bad) aas pop cmp inc cwtl fld sbb inc dec adc jmp mov push test pop aas sbb mov cmpsl das shrl loopne outsb pop loop rcrl movq inc mov out sbb push iret (bad) (bad) decl inc repnz pusha push mov push (bad) xchg insb pop movsb in orb push or sub bound mov inc icebp or (bad) mov and jnp insb enter aam push add fwait test sbb dec cmp (bad) lcall xchg fisub push jbe pop push add inc cmp or (bad) mov jp push cmp mov mov rorb inc adc or icebp (bad) (bad) call and movsb inc or mov enter in sbb pop mov sti pop push out scas jge cmp sub sub cwtl (bad) (bad) (bad) jg inc pop pop push mov adc pop dec push je sub and xchg sbb ret stos shrb bound (bad) (bad) (bad) inc jo dec ds or mov out in lahf mov cmp mov cmp lcall rorl inc dec out imul repz outsl (bad) mov pop mov inc scas int nop je jg (bad) (bad) (bad) jmp movsl loop mov sbb xacquire mov and and inc lds pop pop lock (bad) (bad) lcall push rcrb lea mov push (bad) xlat xchg aad or jge (bad) (bad) call in shlb adc dec dec and movsl lret or jg add jg repz popf (bad) jg loop testl call xchg jne xchg pop xor jbe js ds push (bad) or mov call inc cld and outsb cmc mov in and fwait (bad) (bad) (bad) decl daa push fcmovb fcmovb mov ret imul loope mov pop jg mov aad xchg lcall xchg lods or test enter adc inc push lret arpl je cmpsb ja cmpsb js xlat jno push inc mov inc out (bad) ljmp sarb sub mov cmpsb (bad) xor dec mov mov pop add imul ror scas mov cmc and (bad) call jl lret out in mov and test mov incl stos (bad) mov ror sbb test lods je add jge mov (bad) jmp pusha push or gs aaa push das sbb insb daa out cli das es inc dec enter mov insl lock aam fbld fadd xor dec inc sarb (bad) (bad) pushl loope les (bad) outsb out jns push roll inc mov lock and in pop and lcall ds or ja add (bad) cmp (bad) (bad) jp sbb push dec ljmp test cli fisttp pusha das mov das push lock and adc lea cmp (bad) ljmp (bad) pop or dec pop insl pusha inc in add pusha sub mov pop lock imul sbb cltd xor sbb sbb ljmp mov lahf sub sub add inc (bad) (bad) (bad) (bad) sti daa push lods inc (bad) or ljmp stc test dec scas std pop cmc cld rclb and decl xchg cltd lea cmpsb mov imul es je mov (bad) (bad) incl inc (bad) idivl fsubl pop fidivrl repnz ljmp imul mul mov and adc pop dec mov add xchg and adc (bad) (bad) cmp sub lea sub or xor adc (bad) cmpsl dec addr16 sub push loope out adc sbb pushf push (bad) lock cli test jecxz dec sub sub add in inc loop cli (bad) (bad) fcomip inc test (bad) mov inc das es jae call xchg aam jmp pop ja push sub jbe cmpsb (bad) (bad) incl lea sbb jp cmp out cmp add (bad) pushl or inc inc insl jae xchg fdivp mov dec jae mov dec cmovl rorb pop dec jae mov decl imul cltd jge inc add inc pop mov cwtl and (bad) pop xchg and or inc fstl cmp nop gs std (bad) inc mov aas xchg mov fwait les (bad) mov jle,pt pop pop pop cmp dec in andb insb cld add inc (bad) (bad) call into ret dec pop push mov icebp and stos fwait lahf cmp ret adc (bad) outsb jg icebp xchg dec pop mov mov decl dec mov fwait jmp xchg daa scas cli (bad) decl scas stc mov (bad) ret movsl push dec jecxz out test out icebp mov sti push (bad) push jmp mov sub push or ja (bad) and imul pop push inc sub mov fwait and add (bad) call mov sarl adc sub (bad) cld scas mov push lret out mov push gs cmc incl mov jmp notl sub inc sbb dec test movsb add rol xor pop (bad) stc rcl mov jecxz and das das leave mov mov sub fstpl pop subl (bad) (bad) (bad) incl lret fldt xchg sahf inc jne les idivb mov jno jae mov (bad) ret int3 (bad) call nop icebp fidivrl fiadd push mov (bad) into lcall mov add mov (bad) out test sahf or xchg (bad) decl jne mov jp fidivl movsb add movsl inc add jns mov repz (bad) ljmp (bad) jmp ret or sbb stos ss pop test add pop rep mov fidivr cmc xlat ficomp call (bad) (bad) call inc (bad) sub fistpl cmp je cmp adc (bad) jmp (bad) ljmp pop int cmp insl loope pop cmpsb int sbb mov loope add outsb push dec repz out popa xor pop pop das (bad) decl push inc dec in mov jnp sbb xchg mov inc jmp ja push push dec popa xor sbb iret sub xchg (bad) (bad) (bad) decl stos mov xchg dec orl xor sar addl dec sub jmp shlb (bad) cltd in mov inc fidivl cmpsb (bad) (bad) (bad) decl inc cmp fistp das popa into call dec dec incl and xchg and (bad) jmp xchg adc sub xchg inc lds daa sbb (bad) (bad) (bad) decl out cs std xor jo cmp and test inc (bad) je ljmp (bad) dec fdivp ret sahf mov xchg mov inc in inc fstl (bad) (bad) jg sub iret clc xchg push pop jg bound mov push jne mov btl xchg (bad) (bad) ljmp aad mov data16 movl sub push adc cmp (bad) call xchg andl dec stos inc xchg out sub iret sub stos (bad) mov in adc ja (bad) out test jecxz dec fild ljmp jbe pop push rcll sub mov mov (bad) (bad) (bad) mov call mov jnp jp insb mov pop addr16 idivl inc adc mov movsl mov cli jne fwait test xchg push pop xchg sbb xchg jne js jge orl (bad) (bad) lcall cmp leave inc mov inc pop sti into push enter jp inc add dec shrl in adc jnp scas sub (bad) (bad) (bad) fildl hlt ja ret mov jp add add sbb or add sahf fwait ds xor jl fisttp (bad) (bad) push loop mov cmpsb mov sub or sbb js lea push ret clc jle xchg mull xchg lods roll insb fistpl and mov mov or pop fmul add (bad) (bad) decl vaddsubps ret dec dec imul rol pop push sbb mov adc aas popf outsb (bad) (bad) (bad) jmp mov cli xchg subb pop xchg nop iret xor stos push out jne stos and data16 lcall sub pop (bad) movsl loop and scas xchg adc repz insl add (bad) jle pop cmp loope and ja das jl dec push shrl jle inc inc mov sarl push adc or and adc dec jmp std inc (bad) (bad) (bad) call sub mov cltd pop arpl add pusha popf pop movsl push pop in cmpsl movsl in dec lret shlb xchg cmp out lods mov cmp jno stos cmc shll and sarl shr mov pop cmp xchg and (bad) decl inc movsl mov lods sub inc daa hlt mov leave out push sub (bad) call or fidivr stc push lods inc push sub xchg shl inc mov loopne popf adc adc fucom test xor push fsubp pop lea sbb cmp (bad) mov dec loopne data16 xchg add jo dec sub and inc icebp ret dec push jge (bad) rorl pop xchg fstl setp pop mov imul ljmp fwait in pop cmc xchg cmpsl stc test arpl mov xchg cli sbb mov (bad) (bad) (bad) pushl lret adc fwait sub xlat data16 mov repz jle aad pop mov (bad) decl xor int3 mov fcmovnb push daa pusha popa leave push hlt mov or outsl cli out sbb xchg sub fisttpl (bad) or bound repnz iret stos xorl (bad) fcomip xlat mov mov and inc xchg and or shll (bad) (bad) (bad) call cmc jbe push incl add mov mov test cmc lock mov out xor loop add cld incl xlat aam cmp imul adc ret stos out jecxz and push inc aad lcall lock arpl test sub xor lret sti pushl std scas ret and pop (bad) pop cld cmpsb xchg or fisub jne sub (bad) ss mov jg and dec cltd sbb out push add int3 fstpt mov decl pop and add xor inc (bad) inc sbb jb push lret (bad) movsb test (bad) incl lea stc mov lret test xor mov (bad) (bad) jmp scas dec mov jo icebp dec and cmp mov mov (bad) ljmp xor and cltd xlat fiaddl fcoml inc inc sub jge stos test das inc sub movsl stc jns addr16 pop pop adc mov out mov jg pushl inc repz stos sub cmp pop inc cwtl dec movsl shr js out cmp mov imul inc (bad) lahf in (bad) or pusha es (bad) incl push cmp fwait leave ljmp xor incl xchg imul push adcl lds aas xchg push (bad) (bad) (bad) jmp sbb gs adc jp sub (bad) cmc fwait mov push adc (bad) and (bad) (bad) aas or aaa pusha add xchg cs push cmp mov (bad) (bad) (bad) (bad) cli popa lea xchg adc inc rorl in aas in xor xor pop mov out test sbb and loop push xchg xchg jg test push mov cs adc add (bad) (bad) call and insb shll into sahf cmc insb jne xchg test push (bad) fimull aas leave (bad) lcall cmp cs nop aaa add clc adc sbb (bad) (bad) (bad) inc orl xchg add xlat or xor mov je and les (bad) pushl aas enter pop and mov and ret pop std push (bad) (bad) mov (bad) outsb cmpsb int3 adc aad inc leave mov mov sbbb (bad) xor (bad) aas xlat pop or unpcklps das incb popf les push shlb mov incl out and jmp ja std (bad) (bad) (bad) aas test addr16 icebp int3 xor xchg jbe and ja movsb mov mov scas test subl mov jg (bad) scas cmp cmp sarb in sub xlat outsb jo popf out fidivrl or dec push clc call push jl fisttpl (bad) mov mov push dec (bad) jp mov icebp inc rcrl shrb xchg bound inc fcom adc jmp push push push hlt push dec sbb lds jno pusha xor jnp rclb push cmc dec inc mov xor (bad) call mov lods sub aad mov adc addr16 fldenv data16 (bad) (bad) jg cltd lahf push js mov xchg test xor cmp lock (bad) (bad) (bad) call insb lret xchg push adc addr16 into xabort inc mov xchg jmp clc test mov out cld inc (bad) (bad) call dec jnp adc and mov inc and lods mov push (bad) lcall pop mov pop (bad) cmp mov gs pop add ljmp adc jl enter mov incl sbb test jae int3 fldcw ret in adc fdivl popf adc dec (bad) (bad) jle scas xchg mov sbb or je out xor lcall jmp aam jl pop int3 pusha ret in push and cmpsb ret cmpsb jle lea ds inc idivl pop xchg sub lock aam fldt scas add inc xchg mov loop call (bad) jg ljmp dec mov cli cmpsl sub add sti dec ficomp and in pop sub adc fsubs push or (bad) ljmp dec mov pop loope leave or cli pop out push xchg fwait loop pushf call (bad) (bad) incl cmp stos xor mov ret adc mov (bad) incl bound lret lds inc xor test cltd inc int mov sbb imul xor sbb call xchg test jo mov mov pop hlt decl pop icebp rolb arpl (bad) div popa sbb mov ja jle mov rclb repz rclb std incl ss cmp cmp lea mov push sti or mov lahf sub (bad) call lret gs add sahf shlb pop negl iret or mov ret xchg rorl enter xchg (bad) (bad) in (bad) jmp mov (bad) icebp icebp incb jbe enter or repz ffree sub decl arpl mov (bad) (bad) (bad) jg sti sbb dec fcmovb lret in cld jmp outsb add jb rorb sarl fisubl jmp fsubr mov loop dec dec mov fmull repz inc sub xor rcrl ret mov stos mov mov sub mov out cmpsb cs add aam inc jmp dec jecxz xorl call lret inc data16 gs andl adc inc sbb sbb lcall fistpl hlt shlb out or sub add sahf (bad) (bad) decl and pushf fcoms push lahf lret mov inc inc lods das (bad) (bad) (bad) (bad) out sbb pop inc xchg pop mov in adc lods enter movsb cmp push aaa xlat out mov aad xor xlat mov adc inc cmp shr xchg inc fisttpl loopne fcomip adc jnp lds cmc movsl lock mov mov (bad) (bad) (bad) jg loop scas in aad xchg sub ja sbb lcall rcrl (bad) (bad) jmp cs pop xchg sbb dec mov xor (bad) xchg in testl out jne mov inc jmp das enter out mov adc ljmp ret sub dec aas pop dec in push jg cli (bad) fcoms inc mov aad pusha mov cwtl les (bad) (bad) (bad) ljmp mov int3 sbb enter pusha sti add in into in cmp (bad) mov nop (bad) lcall mov movsl or xorl xor lods sarb lcall sub fisubr jne,pn push pop cmp xor bound lods add call xchg fdivs inc test mov cmpsb mov (bad) lret lcall (bad) push push nop fdiv inc xchg out orl inc imul xchg inc push xchg dec ret ljmp pop movsb ret lock (bad) call nop push insl mov push jae push (bad) fcmovb scas and jg pushl aam xchg (bad) out mov xchg mov lret jp sti test sbb (bad) push (bad) mov push push into icebp (bad) or pop shrb inc jecxz incl cld ljmp cmpsl fcomps fwait aad fildl xchg jmp xor scas inc ds in inc loop,pn incl inc push dec jne pop push mov lcall gs inc aaa push fldenv call jo cld aad fsts stos adc loopne cs xchg (bad) or push (bad) and mov xlat rcll cli and or lcall loop out incb idivb mov mov jo xor mov lcall out or (bad) jge negl out imul mov rclb inc xchg fucomi (bad) call std add jp iret mov and ja movsl rcl data16 or shlb mov mov jbe push into push lcall ja or add ret sarl mov int (bad) (bad) (bad) (bad) cmp incl int3 fnsave pop das rcrb arpl bound jnp inc sub loop and or mov lret xor call (bad) cmp iret lcall loope not in in (bad) (bad) (bad) jmp test jp xchg (bad) mov mov jecxz add out jg lcall cmpsl inc sub pop fldt adc std jns dec cmp push (bad) (bad) (bad) (bad) (bad) cmp sub mov push frstor imul scas cmpsb (bad) (bad) imull inc xor das (bad) ljmp stc rep je,pn mov inc rcll sub imul es rorl stos push lret call jb out push scas sbb push jmp ror pusha lods lret (bad) (bad) decl int3 std jo (bad) nop fucomi push cmp lods xor stos imul sti orb out cwtl xlat mov pop mov and mulb dec mov xchg add cmp ljmp mov sub xor in cmp nop bound pop popa aaa imull sar outsl sbb test arpl xor std dec sub (bad) out sub enter fsubrs mov push sti fcomps cmp push and inc xlat push icebp mov decl repnz in lods sahf dec daa pushf leave call push dec (bad) (bad) jg imul pop repz xchg mov js mov (bad) insb int or (bad) (bad) incl push xchg or mov fucomip xor ss or or stos (bad) jg add popa fwait cmovs loope or mov (bad) (bad) call loope pop sub cwtl inc insl sub imul and mov jae mov loop test and push add (bad) (bad) mov (bad) mov mov cmpl hlt pop cli xor dec inc in lods mov pop sbb repnz dec enter cmc nop lock xor popf mov push jbe cmpsb xchg std and sti dec mov or clc fwait jge push (bad) (bad) (bad) jmp sub pushf stos adc mov pushf cmp push mov mov or or ljmp push mov (bad) (bad) (bad) (bad) mov pop mov in outsb sti mov cli (bad) daa and leave mov mov lods test stc pop xchg mov loop push lock adc xchg cmp pop pop sub mov cli push jb ss test imul movsl sti push in ljmp stc js das scas call xchg (bad) or jo cli add test pop dec (bad) mov adc sub lods lods imul and decl dec jns orl dec inc mov push (bad) pushl cld rol and outsl xor jnp (bad) mov push daa dec sbb jo add add (bad) das mov add sbb into (bad) sbbb in (bad) (bad) jmp das stc mov mov cmp in and (bad) (bad) pushl mov ja mov push leave pop aam mov aaa ss fdivl inc dec xchg jne rclb xchg pop fimul (bad) (bad) lcall pop lahf xchg outsb (bad) fsubrl adc mov push cmp cmp mov mov (bad) (bad) fldl2t je sub (bad) sti int in sarl push cmp xchg (bad) (bad) (bad) (bad) lcall push sub aas jmp mov popf sub shr out sbb ljmp mov addr16 imul loopne add mov lahf jg push xchg rcrb shrl in mov test cltd or aaa mov pop in cmpsl dec popa js orl xchg sub and dec (bad) int jnp jecxz inc loop clc call mov nop fwait dec (bad) mov inc subps cmp cmpsb ds (bad) (bad) jmp sub xor bound or mov movb imul fcomip decl sarb arpl sbb fwait std imul mov sub add call inc movsb inc int3 xor sub fs xor pop subb pop out outsl insb (bad) mov sub push cs in ja sbb xchg and push aam (bad) (bad) call push outsl mov mov and adc in repz lahf inc push adc decl fstl xchg mov (bad) (bad) decl jp bound sarb rol fcomps jb cmp push adc sbb cmp andb fstpl sbb leave cmp (bad) out cli or adc dec cmpsl cmp stos lret fnstsw push dec lods cmpsl pop sahf (bad) (bad) (bad) (bad) incl mov push pop mov cmp enter xchg lods repz pop xchg test cmc cli (bad) pushl push jecxz out push xor in xor adc (bad) mov mov test lock lock icebp ljmp loop repz pop fsts or fist dec repnz addr16 xlat call push stc and or in dec fstps (bad) sarl xlat pop xchg xor inc sub test (bad) (bad) (bad) ds mov fidivr cmc imul js cmc stos sub jb out lcall out push test inc (bad) popf sub pop jmp cmpsl outsl sar or sub xor in repnz icebp scas xchg (bad) (bad) (bad) jg out pushf in in or jmp cmc or jne push fimull (bad) pop mov fistl repz cmp (bad) mov xchg cld lcall loope ljmp push pop cmpsb mov mov xchg (bad) (bad) inc inc or fisttpll test adcl popa enter push mov and push ja mov or lea enter out dec test (bad) (bad) (bad) (bad) ljmp insb jne and jno jp inc cmc and inc add (bad) xchg lods rep (bad) jg (bad) cmp iret fnstsw rclb scas sub jl das mov inc in scas and das cli sbbb cmp jns (bad) (bad) pop stos (bad) (bad) sti mov mov sub adc (bad) (bad) fcomip xchg or js cli xchg sub (bad) add jmp test jo mov decl mov aam flds push nop ljmp movsl incl sbb and sbb imul dec call cld pushl fs push out test adc pushf sahf xor mov stos lods fsubrl cs fwait add (bad) clc fucomp xchg adc ss cmp out dec fnstsw dec and daa (bad) fildl adc sub dec loope repz or lea pop pop fld jo cltd xchg dec aas mov sbb and xchg xchg lret xchg je pop repnz aas fisttpl push insb sahf jg mov push cld daa scas cli (bad) decl shlb xor mov ljmp aam push push xlat (bad) (bad) jmp sarl cmp adc xchg sub lret clc ljmp les mov dec xchg cmp push inc ss lods adc imul and sub add faddl push add add mov (bad) mov inc sbb (bad) loope repnz xor dec (bad) clc ja jbe and pushl mov ret bound inc add js jecxz in inc inc imul push dec (bad) ljmp sub or fnstsw jae sbb pushaw add adc (bad) (bad) call push outsl mov int3 mov jl mov ja cmp jmp fwait cmpsb dec push dec insl adc lods mov mov mov (bad) es xor pop cmc jbe add and xchg ret mov mov dec fiaddl test cltd stos ljmp adcl rol stos (bad) decl (bad) push scas jp out outsb sbb outsb mov add mov add test lcall enter insl aas inc mov xchg mov fcoml repz into lret and lahf sub jns adc (bad) fildll jb push cltd and xchg cld incl adc aas pop add jns mov (bad) (bad) mov int mov cld sbb mov gs jb jno cmp xchg cmpsl fyl2x movsb rcll add push mov mov xor arpl (bad) (bad) incl mov dec mov mov popl jno add mov push jo and or mov movsb mov mov inc cld (bad) pushl dec add (bad) push push cwtl sahf xchg sbb pop dec dec pop inc mov call les cmc sub stos cwtl jge addl outsl jge notl ret mov xor pop pop mov sahf das adc cli jns mov lret (bad) (bad) jmp cmpsl pop mov mov into xchg mov xchg mov mov stos add push jge dec mov sbb mov xor outsl cli (bad) mov fwait les fisttpl xor mov cmp (bad) (bad) fidiv or mov push dec dec jle js push (bad) dec inc ja xor clc mov and gs pop flds adc andl out cmpsb (bad) mov pop dec cmp sbbb sub ss ljmp fnsave xchg fstpl std adc fsubp lea aam ret ds scas aad xor adc ljmp xor fdivs ljmp out or (bad) std jg inc mov insl inc in dec (bad) (bad) decl addr16 test scas rolb push push lcall lcall (bad) fsubs adc ret dec sub cmp icebp cmpsl cmp dec movsb jbe (bad) (bad) jmp scas sti nop rorl push jle mov fcmovnu or xchg cld (bad) (bad) call mov lds inc idivl and push out js movsl aas out dec (bad) (bad) call or push jbe stc lock stc sbb test sbb out (bad) (bad) (bad) cmp push jbe es pushf mov jmp std adc xchg push (bad) (bad) decl sub add (bad) push mov call das xchg jbe xor (bad) (bad) jmp sbb cmp and test lcall fcomps stos fcomps (bad) decl arpl adc and bound lret pop lods mov sub pop (bad) incl test jnp ds add fstl inc or scas adc and lods or xchg pop adc (bad) (bad) push lds fwait out out stos sub fs xor and lods mov pop push pop pop (bad) (bad) incl mov adc iret insb icebp mov pop dec or sar jg (bad) clc in mov movsb sub push xorl cmp (bad) addr16 cmp clc (bad) (bad) lcall sahf imull cmpsb test ds push sbb xor mov fdivp adc mov jno mov leave push aam push je stc pushf xor pushl cmp cmp (bad) out push mov adc push repz inc push test adc xchg pop aas jp mov cmp or imul pop cmc call into xor sbb daa mov cld jb nop sar pop or add push cltd jp xchg fnstsw out adc (bad) (bad) lcall pop ficompl xor aad cmp push pop imul je mov and pop loopne inc xchg stc add jno jb (bad) ljmp mov lea xor gs mov xchg push lock (bad) dec sub adc push aam push cs sub fs lcall cmpl je cwtl ljmp lock enter js cmp icebp and stos jns ss call inc mov fildll xor popf add cmc gs in push popa ds jl (bad) addr16 test cmp add ljmp lret xor and out xchg call jl pop mov mov pop xor ficompl dec incl cmp (bad) out call lret std mov (bad) mov dec jns mov sbb outsl xor sar inc addr16 xchg or mov aad mov or xchg inc ljmp xor mov pop cmpsb cmp pop cld fildl das fisubrl loop roll cmpsb pop rclb lahf in icebp and mov xor out mov mov arpl (bad) (bad) call mov mov and out cmpsl pop pop sub out mov mov pop repnz sub cld imul pop jnp mov push (bad) (bad) mov dec pop insl add pop pop fldt push add xor movsl (bad) (bad) push inc push out push mov int jb add jecxz cld or gs gs (bad) call jne shlb adc xor jns push sub mov addr16 (bad) (bad) (bad) ljmp sbb mov fidivrl popf (bad) std mov lods jbe test or pop push cld (bad) decl imul adc or mov pushl data16 test push in js (bad) xor dec xor incl int cmp daa into cmp cmp orl push aaa adc test aad xchg sub mov or adc mov (bad) lcall mov mov inc aaa xor in (bad) (bad) (bad) fmul jo push mov xchg clc sub dec ljmp ds les sbb pop push xchg enter (bad) decl pop add in mov rol test (bad) (bad) (bad) (bad) jmp loope (bad) mov and pusha xchg xor cmc (bad) out cmpsl lret loop xor cmp xor sbb fisttpll (bad) imul adc lods and dec loope add rcl (bad) (bad) call test ss out or test push (bad) mov push lcall add cli jmp and pushf or adc xlat mov inc gs (bad) (bad) jmp cmp jg sbb push pop rol mov cwtl pop jae sbb mov push cld fsubs out xor fcompl fdivl adc (bad) (bad) (bad) jmp and jo sub fcompl insb outsb je jns sbb jg sub mov jo inc dec rclb stos les pop int decb lds inc movsb add and outsl sub pop addr16 data16 aas dec xor mov test (bad) fmulp add or iret and (bad) (bad) jg cmpsb data16 jo (bad) pop cmc push xchg inc jno mov pop (bad) stos (bad) ljmp ss pop setle dec daa pop js (bad) je dec cmpl pop test xlat jb fwait in pusha inc pop lahf mov sbb lcall xchg inc popa cld sbb sbb repz inc push aaa lock cwtl adc je lcall shll es stc shrb (bad) (bad) (bad) (bad) pushl xchg push pusha scas adc xor add stos cmp jg fistp jnp pushf insb sbb xchg (bad) inc aam jl dec xchg add push and aad popf adc mov dec xor push and pop loop add or cld xor xor push mov (bad) ljmp daa les popf sub pop pop jg sbb adc cmp mov lods and xlat (bad) push pop add pop inc xor cmpsb (bad) xchg sub out movsb dec out sub (bad) lcall test pushf mul js cmp or dec inc push and mov (bad) (bad) lcall push out sub (bad) cmp add pop xchg scas ds jnp movsb incb sbb xchg dec cs push repnz push hlt jns out sub call xor ficomp mov add (bad) (bad) (bad) push add pop fwait sbb dec lcall xchg inc cmp pop repz mov repnz inc lcall xchg mov je push (bad) lcall into and cmp add hlt addr16 cmpsb call push cmp lcall jp add push xor push rolb mov mov (bad) jmp or cmp (bad) dec lock icebp mov add pop mov mov das cli (bad) ljmp sbb adc movsb (bad) adc cmp subb mov (bad) push inc aam jmp mov repz hlt in shrb xchg fwait cmc inc (bad) (bad) (bad) incl scas enter loope sbb sub pop xchg sub sbb pop aas fs lea xor (bad) jg leave dec out scas adc (bad) (bad) incl mov (bad) cmp divl pop les stos xlat cld (bad) (bad) decl xchg into pop push xor inc add (bad) sbb sub (bad) mov insb repz jg mov call pop jnp dec cld (bad) and push addr16 adc pop lret stos (bad) fwait (bad) scas arpl or es mov jmp ret test sbb mov xchg dec lds (bad) (bad) (bad) incl pop cmp sbb pop cld xor rcr lods cmpb lcall in xchg cld call lea call ds push mov mov sbb call mov or cmp cmpl jno adc lock inc decl jmp add push sti fs xchg lret xchg push cld in incw lock add clc incl (bad) xor je cwtl and iret push out aad or es (bad) fdivrs mov loope shl sbbl mov (bad) (bad) (bad) mov fistpll dec mov mov mov push xchg add popa aad dec add mov and pop push mov in mov ss lcall xchg xchg std xchg stos fsubr add fistpl or jmp pop push fldlg2 push test add dec mov cmpsb dec in shr test fwait jp jns cmp pop lret in cld lock (bad) (bad) (bad) incl arpl dec or fiaddl vpsrlw pop xor mov div adc add (bad) pushl dec popf jae ss fisttpl jmp (bad) fadd scas adc (bad) jg das ljmp pop mov adc cli (bad) aad hlt insl mulb push ljmp test addr16 xchg movsb push ret sub pop and fiadd data16 dec (bad) pushl fstpt xchg dec cwtl xchg pop (bad) std mov pushl roll loopne das aas mov jg loopne xor andb or scas packuswb lret mov xlat cmp (bad) (bad) (bad) decl xchg ret aas mov loope icebp popa xor pusha iret mov adc add add add adc ret inc js insl popf cld nop push jecxz push cwtl stc dec sbb jmp mov lock and cwtl daa xchg and andl outsb and into lds push fs jo (bad) (bad) decl sub mov or jp push jl (bad) (bad) fnsave (bad) (bad) incl push cmc mov add pusha push flds dec mov int3 rcrl push call inc xchg imul cmp lret pop sbb dec sub pop mov jmp (bad) (bad) mov (bad) mov dec cmp mov enter and mov push xor into loopne loop lcall ds push cmp jge out mov in mov pop (bad) (bad) (bad) (bad) mov adc and cmp jbe mov in xchg sub pop mov call sbb ja bswap sbb dec aam iret addl mov jmp lahf push lret sub in insl and inc and incl cmp fbstp insb dec mov js cmp xchg fbstp (bad) icebp cmp mov jle pop mov inc ja repz dec ret insl imul and mov test (bad) pushl bound pop mov iret in inc aas nop sub xchg lahf mov (bad) (bad) incl dec rcll aad add cmp (bad) pop out in loop das sar jbe sub negb sub imul cmpsl mov scas inc jmp out inc xchg jae pop add pushf pop addr16 pop clc lahf (bad) (bad) ljmp clc pop cmp add aaa ficomp in aas cld adc mov xchg hlt test (bad) dec rcl (bad) ficoml push lds sbb adc aas imul icebp dec test mov pop add mov std dec or sub pop dec rcl inc mov xchg sahf sbb sahf addl pop adc (bad) lcall mov or dec adc xor pop in imul (bad) (bad) call or repz lods pushf push mov (bad) jno cmp inc jmp fistpl ror (bad) fldt push (bad) xchg dec sbb negb and mov test das mov pop jne scas pop mov cltd loope test test jo pop cmp fmul or insl movsl inc stos sub xor bound sbb movsl cmpl or shlb pop (bad) icebp (bad) xchg pop (bad) mov jb fcom lds add jno jp pop cmp ljmp sbbb lcall sbb (bad) (bad) call or test jle arpl or loop outsb inc (bad) (bad) mov rclb (bad) (bad) incl push mov sbb repz out lret insl rcll xchg and push and mov test aam (bad) decl js xor inc outsl cmp pop or int3 ret jns lods div (bad) (bad) (bad) cmp cmp stos test pop ja xchg scas cmp jmp stos nop mov into lcall push push imul fist or (bad) (bad) call les loope addb lcall or (bad) mov ljmp or lcall xlat pop and stc inc test sub pop std and pop aas jg fs loope cld js hlt sbb jg and jae push cmc (bad) (bad) jle mov xlat ss imul sti test out (bad) lahf fstps adc pop lcall add lods dec daa and dec popf fsubl jmp lods faddl pop imul out mov jb out bound stc push push notl ljmp dec (bad) mov fsts mov push insl push (bad) stc (bad) (bad) (bad) mov add mov das sub cld push roll ss nop lret cmc xlat jle pop sbbl scas xchg add mov adc push add nop hlt (bad) mov pop pop inc aaa arpl rol fsubs cli (bad) incl dec out or in sbb pushf sbb test (bad) ljmp or (bad) jle pop inc jb and dec add rcrl (bad) (bad) (bad) ljmp ljmp mov jnp (bad) faddl rorl (bad) (bad) (bad) jmp les scas cmp nop dec push sub imul push (bad) (bad) (bad) (bad) mov ljmp sarb test sbb notl movsl inc lcall or xchg xor or hlt (bad) (bad) (bad) mov jmp jmp leave mov jns xchg dec dec repnz mov cmpsl fsqrt inc sub sbb fs xor insl cs jle sub mov cmp ja xor add inc jge add (bad) decl pop sub test add sbb imul add call imul es add (bad) (bad) (bad) sti hlt xchg sbb xchg push xchg xchg push lcall xor xchg mov imul (bad) (bad) (bad) mov push dec xor xchg inc xor es inc sub push sar (bad) jmp pop inc push pop cld adc mov ret lods push xchg clc scas dec cli jg mul push sbb cmp and pop add call repnz add add (bad) pushl add (bad) lret (bad) (bad) insl dec pop mov push pop test hlt into fcmovne and in mov mov jnp adc sbb mov or pop sub jmp imul call sbb cmpl aaa call adc in fwait pop sti lock inc (bad) lcall sbb xchg shr daa fstpl mov subl mov adc (bad) lcall fsts fldl fstl divb dec in adc dec (bad) (bad) pushl inc test mov jns lret fnstcw pop cmp (bad) decl pop mov aaa add test lahf repz and sbb (bad) ljmp push mov xchg sbb (bad) mov pusha daa mov push push imul fistl clc xchg ljmp mov cwtl mov and cmpsl mov (bad) (bad) (bad) incl xchg scas mov add jnp aaa pop (bad) div mov (bad) xchg gs loope lds out mov in inc (bad) call xchg inc rcr inc adc lret (bad) pushl jnp stos mov adc cmp or hlt pop (bad) clc aad movsl ret out xor jns cmc lret fisub test fisubr aas pop js ljmp (bad) fdivrs ljmp mov push or lods popf mov mov int3 xchg test movsb lret mov mov in ljmp sar das push sbb push pop icebp cmp xor repnz (bad) (bad) (bad) mov push jge cmp fwait mov adc fs in fisubrl push (bad) push (bad) adc bswap cmp jae mov push and push add xchg shll stos mov into jg (bad) es ljmp js leave (bad) (bad) mov jge insb hlt jge mov inc jae sbb fldl incl cld push pusha lds inc xor dec add fnstsw xor jae (bad) (bad) lcall pop mov jb fnstcw (bad) test mov cmp push test (bad) decl scas je xchg sub cmp mov je mov (bad) mov mov push and jne or mov xchg imull jne jns mov add fdivrl cmp scas and jmp xor in cs mov and cmp jo jnp lret sub push jmp popf xchg inc icebp cmc sub sub add (bad) mov cmc repnz stos pop cmpsb fcoms cmpsl sub jmp jecxz (bad) ljmp pop push lods inc jecxz push sahf sub push and mov xchg (bad) jmp imul lcall (bad) jg decl mov das stos fldcw sub or into push mov cmp (bad) ds or cmpsl mov cmpsl nop mov ljmp (bad) incl push js ret cltd mov stos (bad) daa mov nop xchg loope jne aaa cmpsb cmp lcall sub pushf add pop int (bad) (bad) mov jmp inc outsb jae or test jno mov (bad) (bad) (bad) fimul and pusha add out mov jmp push ljmp incl pop aad add fildll daa cmp (bad) (bad) mov inc adc mov sahf lods xchg in nop repnz dec loope cmc push jne sub stos leave lock ret jns xor sub add and mov mov push pop and dec (bad) in xchg (bad) (bad) ljmp add in fwait mov pushf ljmp cmp (bad) (bad) mov int popf mov mov mul inc inc xor lahf or xchg push iret adc xor ljmp movl cli and or jmp xor (bad) (bad) fucomi mov fsubr sbbb (bad) cmp ret or add cld (bad) incl sub lods sbb aas push mov pop xchg pop ja decl mov std cmp mov mov cwtl mov mov rcll ror lahf es lret outsl push add divb (bad) jg clc neg xor sbb addr16 fs push (bad) iret ljmp enter and xchg in dec fwait les icebp sbb and jmp stos inc push movsb imul leave adc adc in push xchg lods cmp (bad) jne jp mov cmpsl cmp jecxz out cld (bad) (bad) decl mov outsl inc aad mov and and hlt lahf dec or (bad) call inc imul je ja add push mov mov loop mov inc fwait jbe enter ficompl clc mov adc sbb arpl lds (bad) (bad) (bad) decl loopne fmul ljmp mov in or adc mov mov nop call mov aad (bad) call xor lahf popf push fs dec xchg (bad) (bad) (bad) ljmp sub fsubr jmp (bad) ljmp loope dec inc sub push and (bad) (bad) jnp pop sbb out cli rorl lea loop xlat lcall (bad) loopne mov dec pop push ret mov mov (bad) (bad) jg inc in sub sbb push adc aam loop inc sbb fidivr (bad) jne cmp jns jg mov popa push and pop repz (bad) (bad) decl pop hlt jnp mov adc nop into jg sbb sahf push cmp call adc xchg push xchg adc repnz mov add lock jbe add test mov jecxz (bad) (bad) (bad) jmp adc dec popf or sbb jo je sbb xlat (bad) call imul xchg inc cmc xchg sub (bad) fistpll fnop xchg (bad) addr16 ffreep cmpb pop js enter mov jg ljmp (bad) ljmp pop fist push and std bound decl lock xor or sub mov or (bad) ljmp push nop sub pop test xchg mov daa ret out sbb sbb pop or gs lds push es (bad) (bad) decl cli enter stos mov xor push data16 and and repnz pushl add les call jne sub lds negb pop cld lcall jecxz push insb inc mov es test (bad) insb int3 dec out mov (bad) (bad) decl in inc cmpsb jo add pop push and es push mov or (bad) (bad) decl movsl shll cmpb sub mov in (bad) jbe (bad) (bad) mov add dec push insb lea jo push fmull in aam xchg push nop faddp aaa gs sbbl xor (bad) call addr16 mov loop xchg push cmp mull cmp or ret mov mov add mov or dec cmp cltd inc mov fwait (bad) (bad) (bad) stc test dec mov push out iret mull add cmp int (bad) jmp xchg nop pop popa push add push adc add dec das (bad) call loop push xchg cmp outsl (bad) std or xchg (bad) ja (bad) (bad) decl les (bad) outsb xlat adc movsl sbb sti push cmpsb in adc dec cmp decl inc stc push push sub imul cmpsl mov ret inc lret daa (bad) (bad) (bad) (bad) in push mov aaa add add outsl sbb emms xor sahf call cli adc add sub mov das xchg test mov lcall decl pop mov inc cmp lods dec sub mov ljmp inc cli sbb (bad) (bad) (bad) (bad) ds xchg pop repnz mov mov das xchg stos sarl and mov pop cmc push jg xlat aam cld mov sub loop repnz daa dec outsl fwait nop xor iret shll add jg jne arpl test fisubl cld (bad) (bad) call (bad) mov (bad) aas adc in jp in pushf xor je (bad) (bad) (bad) ljmp popf icebp or adc dec add push cmp rcll or xor push scas or cs (bad) (bad) jmp roll mov jns scas sub pushf or dec je inc cmp (bad) pushl icebp and orl sub xlat sub dec mov hlt (bad) (bad) call add dec xor or ret jnp mov pop cmp addl xchg (bad) mov icebp ret or lret or jmp leave icebp (bad) (bad) pushl out cmpsb ficoml roll sti iret push movsl es or dec insb dec add jae call mov cmp outsl sub or jns (bad) call push cmc mov into outsb xchg xor insb pop sti cmp sbb cwtl mov (bad) (bad) lcall out cltd (bad) inc aas inc xor jns mov or pop (bad) (bad) call or jle inc int3 mov imul (bad) pushl fisubl fwait sbb push push lds jb and loopne imul loope scas mov mov mov call mov (bad) (bad) dec outsb cmpsb (bad) fmuls mov arpl enter push ja sbb xchg daa stc incl pushf cwtl out mov flds mov xor pop out pop dec rcrl xor pop pop push movsb js rcr scas push inc cwtl or add fcomps push cld (bad) lcall test div mov (bad) xchg std ret fldenv ret stos pop dec inc loopne add ret loope (bad) (bad) ljmp sahf test inc push inc xchg inc jecxz or jo repnz leave fwait out dec xchg mov or (bad) cmp xlat xor pop jecxz fdivl in (bad) (bad) decl inc pop loopne adc mov cmp sub xchg add repz pop lock pop mov add xor ljmp sbb notl addr16 sub movb incl ret dec scas sbb and push xor mov push inc in (bad) daa (bad) cmpsb mov jecxz mov jle mov decl cs sbb fwait mov out dec std lods cmc rcl push in sbb leave cmp xorb outsl idivb test arpl lahf dec jge pop (bad) mov jmp fisttpl loopne fimull mov add cmc xor cli rcrb jmp in decl mov dec push dec fs jo and adc (bad) incl mov hlt (bad) clc fnsave jl jmp push ljmp inc and lcall not xchg aas pop mov push clc arpl or jns int3 mov decl lcall das rcll mov movsl xchg mov cld incl into dec or dec sarl data16 out push adc idiv gs jg rcrb neg out (bad) sbb xor jp mov lcall (bad) xor scas jl mov mov in test dec pop cmp subb sbb sbb xchg pop add add (bad) pushl mov xor outsb ret sub loop insl adc (bad) cmp lcall jg (bad) push call out fwait or loop push sarl push cmp pop push ss jl cs adc (bad) call pop fildl movsb mov adc xchg pop add push repz inc mov jecxz movq mov jno shrl mov jmp call mov jg rcrb fsubl into icebp loopne cs call pop addb psllw int3 mov rcrb add call popf sub cmpsb pop mov clc pop adc add adc mov push xchg enter jecxz arpl aam adc imul inc push test outsb shlb (bad) pushl pop sbb sub int outsl mov xorl push sub clc les movsl aas (bad) (bad) (bad) pop inc in out in cmp data16 test or mov aas lea push mov in mov enter pop sub daa sbbb (bad) (bad) ljmp js pop mov inc xchg cmp and out rolb dec int3 or or (bad) (bad) mov push imul decl es push cld mov repnz sarl test inc adc cli incl adc movsl data16 inc jge out aam inc adc std (bad) (bad) (bad) in insl mov ja aad mov mov cwtl out mov push sbb loop hlt cmp cld call es sarl dec hlt and das and (bad) call or push or bound and (bad) call es cli (bad) decl fst add stos mov rcr cld inc aad insb nop ss jmp jae xchg repz ljmp jmp push lcall call adc addr16 push cltd dec sub clc push push xor addr16 lcall jb std push dec add (bad) (bad) (bad) lcall imul lahf mov mov adc inc cmp mov xchg xor mov fwait addr16 int3 xchg inc pop stc stc (bad) (bad) (bad) ljmp je xchg jge jb ds and push repnz xchg in adc add jg sub pop jo in xor pop int3 inc fnsave push jmp xchg ficom pop sbb adc (bad) mov add lret or mov in iret cmp lcall adc adc pop fldcw in xlat icebp xchg cmp pop inc mov addr16 lods inc aaa pop fstl (bad) call cmc pop lock dec push dec repnz repz fadd mov (bad) push jge and add sub xchg dec mov data16 pop (bad) (bad) jg add mov lock mov sti pop loopne fs push mov add ljmp aam (bad) (bad) jnp inc fild out adc mov iret add sub cmc push mov (bad) aas aad sub pop das or jnp jne loop shlb ljmp scas push fsubrl test fisubr dec cmp pushf insl inc pop addr16 sub (bad) jg outsb and sub adc fwait pop lock mov mov (bad) decl xor stc pop in repz sub insb int add outsl inc mov mov xor enter or (bad) dec sub (bad) inc gs pop (bad) lret sbb mov jae dec (bad) mov cmc stos ret cwtl lcall cmp jle das mov pop clc mov dec sti aaa mov mov jbe pop outsl clc xchg add mov mov push (bad) adc sub pop and push and mov mov cmpl dec sub inc push ljmp (bad) (bad) decl cli cwtl arpl (bad) mov int mov mov insb in cmpsl int (bad) or (bad) lcall add shlb mov (bad) lcall neg (bad) stos std xor insl cmp fisttp fisttp mov push ss xor jl (bad) inc push jo dec cmp sub inc into and push xchg int pop or sbb loope (bad) mov (bad) jmp out roll push std mov out cltd outsb cmc test mov (bad) (bad) pushl stc lods ds fstps push fldt jg jg sbb mov jae (bad) push push hlt xchg jb mov test (bad) incl xchg adc mov std loop loop xor cmpsl pop sub ljmp dec fisttpl jb add test lcall test dec fstpl push xor cmpsb (bad) jecxz in sbb movsl mov ja and mov inc les add adc push inc lea pop repnz loop adc or cmpsl pushf arpl sbb cmpl int push fbstp orb je sub (bad) fildll mov sub mov pushf pop push push lcall mov stos (bad) xchg sbb std outsl sub xchg inc std stc in and add (bad) (bad) fldenv cltd out dec sub sar clc adc lods push cs incl roll xchg cwtl and mov inc jmp mov (bad) mov ss lahf hlt aaa outsb icebp cmp xchg ret iret mov or cwtl popa jle mov mov jae xchg sbb (bad) (bad) pushl stc cli cmc sub test movsb in cmp sub jge mov mov pushf lea std dec push sahf ret call out jge pop lds (bad) (bad) pushl fisubl xlat push pusha test ds mov push cli dec (bad) (bad) call fmul out mov add jle orl (bad) call and pushf icebp mov push dec lea test loop add (bad) incl jns jg lcall cmp mov mov xchg push mov sbb jl (bad) outsb lea test cwtl mov xchg rolb adc cld jne jns dec jecxz jmp rolb mov lret (bad) (bad) pushl inc sahf jmp sub mov xchg push cs (bad) (bad) (bad) (bad) fstl sar dec dec or orl jg mov dec sub push sbb add (bad) call sub sbb cmp xor and (bad) jmp sub cmp cmp ret add or fidivl aam outsl hlt jg cli xor mov aad rorb das add xor xor in cwtl aas add jmp pop hlt ja pop subb push aad test inc jg bnd gs ret push pop (bad) xor (bad) (bad) (bad) ljmp jb jno xor iret jecxz das cmp inc push int3 cmpsb add inc popf rcll xchg jp decl push fisub pop adc mov sti cmp aad out sbb scas cli (bad) ljmp je xor jno jl aad mov pop lret jecxz push cli (bad) push pop mov dec out add scas out jmp sub (bad) (bad) aas sub (bad) mov (bad) jne or mov in push sub pop cltd sub aad (bad) (bad) pushl cwtl sub imul inc xchg pop imul insl loope cmp mov (bad) jg inc push cmpsl movsb dec cmp ffree test lds and or pop stc mov lock decl arpl sarl push sbb dec syscall clc xor push (bad) ljmp and addr16 sbb mull addr16 ja es (bad) (bad) (bad) decl jg leave jae xchg incl cmp out sbb and inc inc cmpsl dec jne aas lds int3 sub sti mov (bad) (bad) (bad) jmp les into xchg mov adc inc mov wrmsr imul adc lods (bad) dec shll pop loopne fisttp adc insb cmp dec lock push jecxz movsl pop sub and (bad) addr16 popf stos xor call pop repnz pushl mov imul ficomp call mov (bad) clc xchg pop (bad) fcmove mov pop inc xor add sub and push mov (bad) (bad) jp enter xchg aam sahf fwait lock gs imul (bad) (bad) mov hlt bound testb les pusha jecxz mov cs and push (bad) jmp cmp inc in mov (bad) in mov pop es and loope add psubw (bad) (bad) decl cmpsb pushf shrb pop sbb sahf test push and mov ja mov dec sbb movsl repz jg fcmovne pushf ss (bad) (bad) jg xchg push xor outsb sub mov aas sahf dec shll jle (bad) (bad) jmp mov adc xor insb movsl sbb sar jns jl mov bound or mov pop stos ss lcall jb ret nop aam test bound cld scas sub sub push fadd cs lods cmpsl xor lock jl lret (bad) (bad) lcall scas sub mov jo insl or sub outsb mov xor repnz (bad) call into fsubrs inc loope sahf dec xlat push and arpl daa je int (bad) (bad) decl std xchg loopne mov fwait in and mov int cmpsl jmp (bad) lcall call inc enter add push (bad) jb,pn mov lock (bad) jmp gs int sbb testb mov gs into jbe sahf lods adc sub (bad) (bad) call dec std push mov pop inc enter push popf stc (bad) (bad) call inc or ja inc inc inc push jecxz orl clc mov jmp cmp add push inc and sub or cmp jb nop lcall imul mov aas das test dec (bad) (bad) (bad) lcall pushf cmpsl shll push fcompp sub loop mov dec or lcall decl sbb mov mov aas push or out (bad) (bad) (bad) ljmp jns mov andl mov push fcoml imulb mov icebp mov mov sti xchg cmp ljmp add cmpsb mov addb pop and mov mov ds es aam adc mov ficompl sti nop mov push out lret (bad) cmp sbb aam (bad) (bad) (bad) ljmp (bad) and scas push ljmp stos fsubl pop sub jmp add mov jo arpl out push jmp mov loopne sbb lock mov inc sbb mov adc or lods sub jle loopne jp mov cmp jmp and sbb adc loop insl (bad) pusha ljmp stos orb fistp mov inc movsl insl popf cli iret outsb jb popa xchg nop aam jmp movsb mov movsb mov mov lds push rcll mov pushl jbe and cmpsb ljmp inc add hlt pop test add scas sar pushl pop or add vmovntps mov (bad) decl pop std pop xchg mov mov outsl dec xchg xchg sub pop das cli scas mov lock xchg leave jg es scas push pushl call sub je jecxz mov inc nop lahf gs (bad) (bad) decl rclb loope aad jle adc fmuls gs mov fdivrl (bad) decl dec cmpsb movsl push aad data16 and jmp (bad) dec rolb out fwait mov xchg sub aas and aas and call (bad) (bad) mov clc test pop inc (bad) (bad) (bad) (bad) pushl cs into or jle fmuls xor inc jne jb pop jnp pop dec jbe sub ret cs mov add repz stc stos daa lcall push std (bad) (bad) jmp jb add dec mov mov ds fbstp bound fdivs imul lock outsb cmp mov (bad) (bad) (bad) ljmp ja adc cld iret lret add sub aad loop dec cli fcomip mov int mov ret sub pop movsl hlt add out (bad) add cld (bad) ljmp push pop add addr16 fidiv push clc mov pop cmp jns in and std mov xchg movsl push loope loope pop xchg lock lods fldt fidivrl dec pop xor (bad) (bad) mov je sub in rorb cwtl nop or mov (bad) cmp inc aas sbb xchg out xor movsb pop dec jp rol jg subb lods cld pop push push ds sbb fdivr (bad) (bad) lcall pop mov out iret sbbb test (bad) nop adc xchg rol aas mov jo popa dec bound out mov popf adc (bad) (bad) (bad) lcall shlb inc mov jle test push jne pushf mov pop lock shlb or ds cli pushl xlat sbb mov inc adc cs (bad) (bad) jmp ds imul or and sub jb dec xor pop pop int3 cld (bad) (bad) decl aaa and pushf cli adc adc push cs push inc (bad) (bad) call fisubr adc nop mov sti fsubrs gs sar push stos xchg fisubrl lret test ljmp fidivrl imul dec inc push pop dec (bad) mov (bad) test movsb adc addb mov (bad) (bad) ljmp (bad) xchg adc imul iret inc or inc cmp jne (bad) decl add out xor sbb pop or mov out dec fsubp stc (bad) (bad) decl adc xor lods cmp xor out lcall and test (bad) ljmp movsb and fwait clc aaa xor cmp cwtl and push fcom aaa sbb (bad) jmp pushl std movsb xchg dec and imul in adc push xor (bad) lcall xchg sub mov mov subb (bad) cwtl lods push pop movl aas std pushl cld lods xor fiadd daa push jnp sar pop das mov (bad) (bad) mov in add dec dec rcl jg sbb ds dec fwait (bad) (bad) ficompl pop adc sub xchg xor pop mov pop dec int3 sub cmp mov adc ret xchg das (bad) (bad) (bad) mov xor mov cmpsb (bad) loop sbb add jns repnz (bad) decl faddl lea (bad) imul pop and or lock (bad) incl ret pop push push push xchg and loope flds pop das rolb cmp (bad) cld (bad) (bad) (bad) frstor sub testl sub lret jmp shrl test lcall push sub mov fisubrl das cmp (bad) (bad) out fs adc jb mov and inc xchg cmpsb (bad) dec cmpsl ljmp inc push adc (bad) mov ds mov xor sub lcall fild ljmp cmp xchg (bad) adc scas adc addb xchg ljmp lret leave push daa (bad) (bad) (bad) (bad) jl or sbb out jnp lret (bad) jbe aas lods ljmp lahf lock (bad) aam xchg add clc aas mov or cmp pop push or ljmp int3 cwtl (bad) fs (bad) (bad) lcall mov std scas inc xchg cmp mov and pop mov mov cltd daa dec or (bad) call js mov sbb and push inc add (bad) (bad) lcall aaa out add in adc pusha sub (bad) (bad) mov jne xor jne xorl xor (bad) pushl les cmp lea push mov inc mov adc repz mov (bad) (bad) call jb inc insb adc test cli (bad) (bad) jg sbb jg (bad) lea stos push fcmovb into scas xchg gs test (bad) hlt call ret js sbb mov xchg add xchg incl rcrl jge rcrb dec push inc push inc ret into mov (bad) (bad) call inc insl cmp shrl out rol sub push add jp cmp push push or call cld xor mov sub xchg (bad) (bad) (bad) (bad) mov jns push push jae sub ficoml ret mov mov jo sub xchg fwait or mov jp sbb add aam call (bad) jle pop data16 mov jae and adc icebp pop ret (bad) (bad) incl dec xor lods popa (bad) cmp pop or fs xchg adc loop stos ret cli and clc lea and mov (bad) repnz (bad) (bad) ljmp dec lcall push xchg add pusha out das hlt xchg dec jp jo imul jnp push out lods (bad) icebp and or inc outsb test (bad) lcall ret pop test stc dec jmp icebp inc mov int3 out lods (bad) (bad) (bad) incl aad sub cmp adc out (bad) mov add imul sbb (bad) lcall cmp or arpl sub fadds jecxz popa stos xor or mov (bad) fadd pop ljmp icebp cmc test pop roll push out inc mov loopne scas pop aaa xor xchg sub mov rcl (bad) (bad) call push xchg jno repz shlb loop mov adc mov sub das bound imul ret rorl cmp (bad) (bad) fcomip cmp push add push xchg inc adc imulb mov inc sbb decl cmp pop fidivrl jbe aaa test jge add out sbb dec adc out out (bad) (bad) (bad) incl and scas ljmp mov pop scas mov adc dec movsl cwtl insl and push pop cmpsl ror mov call sub popa cmp sbb pop add es or mov sub xchg insl pop push or repz inc pop push sbb (bad) lcall xchg xchg mov or sbb roll dec push adc push (bad) (bad) incl mov or (bad) push cs mov xchg push (bad) push (bad) jb cld (bad) (bad) in mov xor popa gs movsl in jbe (bad) cmp fsubrl imul push sub outsl (bad) flds sarb and fs pop push xor jmp push aaa jns adc mov loope push loop add sbb xlat pushf imul xchg cmpsl sbb in jp (bad) jg lock xchg lcall enter test push adc (bad) (bad) (bad) jmp cmp dec xor jp sbb jbe stos mov aas mov aaa push in pop xchg jg push in or sarb jns jl (bad) (bad) decl ja andb add push es pop (bad) sbb adc cmpsl push pushf adc pop pop add (bad) (bad) jg xor cmp xor fbstp push mov lahf mov mov dec ss or mov movsl sbb (bad) mov sub movb xchg dec mov cmpsl xor daa cli push loope pop cltd push mov rol repnz lret cmp dec dec loop add mov mov iret pop imul mov cmp mov dec and test sub mov pop es mov jecxz lcall loope sbb pop cmp cmpsb jg mov (bad) (bad) lcall mov js pop pop js pop fldt scas cmp add and mov repnz (bad) inc scas std push jle das jb xchg or int3 and test roll aad inc push mov lods (bad) (bad) decl lahf sbb push fist ljmp out imulb ficoml repnz (bad) incl pop hlt loop pause jne mov jmp mov jg mov insl inc (bad) (bad) mov sbb addr16 xlat or aaa sub insl mov sahf (bad) (bad) decl push or ret aam mov stc sbbl add mov (bad) mov lods fisttp xlat scas xchg pop addr16 (bad) (bad) jmp pop xchg pop out mov lea sar add cmp repnz in (bad) jmp incl cmp subb stc push scas push insb pushf cmp aam add (bad) (bad) inc sbb adc (bad) xor pop and repnz xor jmp sub jmp jle mov add cmp jnp mov icebp (bad) (bad) call add icebp clc lds push add sbb in xor sub lcall nop cs lods outsl adc aam ret inc mov adc sub mov (bad) (bad) (bad) (bad) fadds lds and and adc push cmp jb loope les pop bound lcall (bad) and (bad) decl fwait mov and sar sbb stos idivl sar (bad) incl cmp ja jg iret ret push xor dec dec dec loopne sete jg cmp cmp arpl or (bad) jmp mov aad and outsl cmp loope mov decb and imul ds jp inc mov cmp jno (bad) (bad) ljmp pop loope push push mov sub jmp dec int3 push dec decb out cmp mov int3 dec out lret pusha push pop sbb (bad) cltd jns xlat loop (bad) (bad) jg sti test push jl xchg adcl sar mov inc int arpl xchg xchg (bad) xchg lret pop cmp jg clc incl mov mov movsl mov hlt icebp mov clc (bad) lcall aam push andl hlt push cltd int3 add test in hlt (bad) mov xchg mov (bad) or cmp push (bad) (bad) xor inc loopne stos mov loope cmp dec icebp sahf mov es ds (bad) (bad) call (bad) out cltd addl pop add jmp mov mov mov (bad) (bad) call mov sahf ficoml add jge arpl (bad) out cli leave push js mulb push or insb ret loope fcoml xlat add push stos lods pop aaa les scas and hlt clc pop push subb lcall imul in jge flds clc pop (bad) jae cmpsl daa sahf lock push (bad) in xchg adc sub addr16 sub jecxz arpl test xor cmp hlt fcmovu sbb push imul add loopne ja flds enter cmp mov dec emms movsb adc ret (bad) (bad) (bad) decl jg sbb icebp xor ret insl adc daa inc arpl mov outsl sbb (bad) (bad) incl hlt xor pusha cmp les xchg mov xchg xor aas xor xor sub das test or fwait xor in pop sar cld fbld mov aas jecxz fisubrl mov (bad) aas adc leave push mov test ret (bad) mov ds stos or (bad) clc cmpsl insl or xor inc in cmp and jge dec mov loope xor add incl push mov mov fsub aad (bad) (bad) incl sbb cld jge inc inc faddl pushf mov pop scas jmp jp xchg pop add dec nop scas sbb mov jnp pop divl xchg addr16 (bad) (bad) (bad) jg and pop ja rcrb daa insb fcoms xor dec mov loop fdivs jo add leave (bad) (bad) (bad) cmp and xlat fildl rol xor push mov insl mov aas jo push push inc push cmpsb adc xor icebp enter addr16 jae sub inc in (bad) pushl dec push imul push orl les adc push pop adc lcall and (bad) dec and adc mov dec sub outsl icebp sub in (bad) (bad) jns negb inc or cmp xor fs dec dec cli mov jo dec int3 mov push rol (bad) out lods lods outsb out dec jge adc shr mov decl mov sub data16 (bad) mov cmp ret cmp cmp in stos inc popa mov (bad) (bad) (bad) call (bad) mov outsl add (bad) out aam sub mov pop dec es mov rorl fs in adc fwait dec cld sbb das cmp inc ljmp pop loopne mov pop and loop or and mov (bad) (bad) jg test lret insb and jmp jle pop or test sbb jne sub push loop mov insb cmp push test scas mov dec (bad) sub movq jne imul sub iret adc (bad) ljmp sbb sbb into push push cltd (bad) (bad) (bad) call arpl orb sbb mov cld xchg mov jecxz lahf shll sbb clc jge and jmp jecxz popf push adc cmp (bad) (bad) (bad) jg jmp sub sbb push cmp cltd in jnp test addl (bad) (bad) (bad) call out test adc push sbb xchg stos call shlb (bad) ljmp fmull sub in pusha pop mov push jae xchg xor ljmp mov dec out xchg stos jb cmpsl les ds (bad) call movsl add xor sbb pushf int stos ror (bad) mov push imul dec inc popf test decl xchg popa or ljmp cmp fistl fistp aaa add ja test add cmc jmp xor (bad) ss pushl or cmc adcl imul mov add jmp jl xchg sbb mov or fcompl cmpsb jp fwait and mov push sub int xlat dec scas jo mov inc xor out mov or xor cmpsl ja loopne std testb lcall xlat ror mov in or icebp or js or daa pop (bad) (bad) (bad) pushl addr16 jmp pop jns dec sub fisttpl ds fs push test push xchg and (bad) call mov jle sar jns stos or adc or fcomps fstps mov inc mov lock faddl lods jg clc (bad) mov push adc fcos fwait sub test inc hlt (bad) mov mov mov in shrl int3 js or rol pop mov xor ss call pop cwtl sub lods daa add cld (bad) jp push and mov push adc mov les (bad) xchg loope movsb dec cmp cld mov ljmp fistp sbb xchg mov xchg ljmp int3 inc insb xor sbb cmp scas pop call mov in in sarb pusha push mov xor int (bad) aas inc cmpsl mov dec test mov scas cs lahf push scas mov (bad) dec roll clc cltd mov stos sbb inc sub mov (bad) (bad) (bad) mov rorb cld xchg push cs adc inc ss jo xor (bad) decl dec xchg push int sub push inc loopne in adc jmp pop push pop adc out and and sbb xchg lds (bad) (bad) pushl adc std mov repz in js lret (bad) jmp icebp or inc in jle xchg inc or dec outsl dec aam xchg nop sub jg cli cld mov inc sarl push loopne jecxz cmpsl mov std xor mov nop test dec pop imul adc shll stc push ss xlat dec std jmp inc in sbb cmp mov mov or data16 rorb inc mov sahf lret xor jg ljmp fistl mov ss out lcall arpl adcb (bad) (bad) pushl ds jns mov mov lods or push xchg es (bad) lcall lcall in lret push lahf andps je movsl bound xor pushf iret mul dec out inc sbb (bad) (bad) (bad) (bad) fsubp cltd xchg sub icebp divb adc data16 push adc (bad) cmp adc out ret xchg imul xor loop push and bound mov test (bad) (bad) (bad) fcmove mov cmpsb dec sahf ds popa loope mov es ljmp cmpsb add jmp dec or repnz adc (bad) and jl (bad) aas dec pop int adc test cld xadd paddsb (bad) (bad) (bad) incl or jmp push sub mov push sbb sbb cld mov in jbe jmp stos mov or inc pop push mov je cli (bad) (bad) (bad) jmp xchg test jns push stos inc add mov in loop (bad) (bad) mov pop shl xchg cltd shrl sarb scas pop jecxz (bad) ljmp or clc dec fbld cmp movsl ja iret mov cwtl mov (bad) add or push mov cmp cmpb (bad) (bad) (bad) decl out mov (bad) jl add mov xor pop cmc push lret jmp push xlat ret (bad) jmp cmp mov stos test fwait test incl lcall stos add insb mov mov iret adc lods and (bad) mov fwait adc iret aaa lods jge jno or push lret push fidivr jg js je push cmp incb push pop cmc sti dec pushf es cli xlat xchg cmp pushf jne pop insb or rep adc inc jle ret push leave push sbbl loope or mov rcrl xor sar (bad) (bad) jmp mov xor inc popf adc loop mov mov es sub hlt jbe pop in lcall fidivrl sub adc jg movsb cwtl lahf add lcall push push and cmpb shrb mov xor cmc or pop add psubq notl test inc (bad) xor sub pop ljmp (bad) push or inc mov (bad) (bad) fildll cmp mov addl ret lea xchg adc loopne xor dec xor out addr16 (bad) inc scas in pushf (bad) divb test sbb fsubs clc test mov rorl xchg add (bad) incl push xchg mov enter mov call and ljmp inc jg add es lods mov fs mov jno imul aad jb (bad) lods stos aam (bad) and jb add jl scas stos xor es (bad) (bad) lcall cmp idivb pop and mov (bad) call sub and outsb lcall jmp lret xor repz lahf loopne test mov test mov sub stos mov incl dec (bad) fdivl cmp pop push in push fistp cmc ja pushl cld add push mov movsb cs js lcall push popf call js repnz and or (bad) lcall rol cmc sub and mov jle xor shl sub jmp add addr16 jle outsl mov mov inc dec mov rcll mov aam inc sbb pop lock ds sbb mov push mov test cmp idiv rcll mov sar ljmp cmpl push add xchg mov decl popa imul ret adc das js jo int3 jns add mov add (bad) stc or (bad) fild xchg xchg addb decl sbb pop jns xor test xchg mov pop xor add icebp (bad) mov (bad) lea outsb push xor clc test mov or xchg cmpsl pushf ljmp (bad) aad jp dec rolb lret jbe (bad) rorl (bad) and inc loopne mov sbb push xchg or pop pop hlt (bad) jmp pop add jnp inc pop cltd gs in gs pop add rcll out ret jmp enter test inc es push inc imul add jno jnp fs pop (bad) (bad) (bad) (bad) (bad) in iret add mov test add xchg or cmp jno cmc jg (bad) (bad) jg sbbl mov imul xchg or (bad) (bad) call xchg cmp es popa xchg xor imul dec pop inc and push call roll and mov outsb and jg test test mov pop sbb lcall push and (bad) (bad) jmp mov push int cwtl sbb sub (bad) mov jmp mov jle les cli cli ljmp sub add stc pop inc loop (bad) incl add shr pop call fucomip mov push add (bad) call sub fmull mov cmp (bad) (bad) call repz (bad) xor xor es loope adc dec ret dec xchg mov add jecxz es inc inc pop pop lock (bad) jl mov out or cs repz aam sbb lock out ss daa icebp (bad) lcall popa sub enter cmp loopne inc in cmc xchg fisubr dec (bad) (bad) lcall into inc test cmp xor jno adc add imul pop cmp (bad) (bad) call dec inc mov jp hlt adc in push (bad) (bad) fimull mov mov cmp shl popl inc sub inc (bad) je mov xchg ret lea mov arpl cltd ror cmp rcr daa (bad) push fs jmp or push (bad) decl insl shrl testl sbb cmp add mov mov ror data16 imul push dec mov decl pop insb iret jb fisub (bad) idivl (bad) ljmp stos mov sahf mov or and cmc in pop sub loopne inc cmp mov insb xchg cmp dec (bad) mov rol rolb rcr lcall xchg sbb or or (bad) call add lea push lret jne push scas dec pop hlt adc cmp xor nop jle (bad) (bad) lcall iret jno lcall pop nop xor push jl popf jns (bad) xchg or test int and cli decl std fld jo (bad) repz cmpsb or xor (bad) (bad) (bad) jmp xor mov add scas sbb dec mov (bad) lahf outsl dec clc jl sub sub ljmp or mov cmp adc jae cmp (bad) (bad) (bad) push scas movaps mov stos repnz inc jmp jle xchg es js in mov add scas (bad) mov cld movsb outsl inc std rcll inc int3 stos cmp dec jbe fwait (bad) (bad) mov cs push mov adc sbb push mov (bad) (bad) incl pusha mov ficompl add inc mov fldt jp daa rcr mov aaa cld dec push jge imul ret jg xchg out cmc pop fisubl cwtl and xchg stc push add pop inc mov in in sbb jmp inc push aam rorb nop (bad) (bad) pushl outsl and (bad) mov aaa js adc mov sar (bad) decl jecxz (bad) jbe loop dec cmc popa xchg jae and shrl mov xchg adc jae push pushl (bad) (bad) call out xchg ret xlat push pusha loopne mul mov and (bad) (bad) lcall dec sbb std or sbb lods or jp testb ljmp mov arpl ljmp std ror adc insb jns sbb mov push in push pop and rcrl popf sti add js lcall adc lret imul ja mov pop xor dec xor mov and add (bad) pop orl rorb loopne pop arpl sub cmp mov mov in gs cmp and (bad) ljmp cmc push sbb jno (bad) cmpsl lds mov test jo sbb (bad) cld int mov leave xlat (bad) ss fist adc (bad) (bad) ljmp mov mov mov popa mov mov and sbb stc (bad) (bad) cmp add sbb add sub mov xchg out (bad) or add mov xor shrb inc dec cmp (bad) (bad) (bad) jmp sbb lds into jo mov cs sti pop pop mov repz sahf or (bad) jmp test bound pop je,pt inc cld fstl (bad) (bad) (bad) (bad) fiaddl inc gs push xchg jns jl mov mov sub dec xchg add (bad) xlat (bad) call push pushw (bad) jmp jo sbb pop push ds xchg lds cmc xlat fdivr (bad) (bad) incl sub je jp,pt mov mov outsb call scas add incb push rclb ror stos dec add repz lods (bad) (bad) (bad) (bad) jmp sub mov cmp stos or nop into stc mov roll pop cmpsb pop xor pop add ret popa adc loop hlt ficompl jl insb adc xchg sbb test (bad) (bad) ljmp lret pop dec loope inc pusha imul mov sarb pop data16 scas lock xchg ljmp push pop cmc adc iret adc jne in sub cmc mov outsl clc (bad) (bad) cld cld dec (bad) stc fwait or in xchg les inc mov int3 xchg xchg jg cli (bad) cli add mov xor jl xchg push mov (bad) (bad) fimul jno sbb jne mov rcl outsb dec in in sub repnz xor (bad) mov mov lea pusha lods das add jg pop xchg pop mov stos mov mov loope ret (bad) (bad) (bad) (bad) in xor repz (bad) jae nop aad mulb jbe pusha insl pushf int3 ficoml fsubrl sub jecxz and fstpt lcall jle pop fadds and or imul add inc inc xchg push xchg inc pushl push addr16 imull (bad) (bad) (bad) incl int3 xchg imul add xor rcll in dec mov enter stos adc lcall cld mov cmp adc stos (bad) (bad) jg push mov les sub xor test subb nop cli (bad) std mul fwait push pop push hlt (bad) (bad) jg movsb call (bad) fcomi scas js adcl ror (bad) (bad) ljmp sbb mov cmp or sbb lods out mov lahf mov pop inc (bad) (bad) (bad) jl dec pop add pop mov jmp mov jmp notb (bad) (bad) (bad) jg xchg jo push cmp pop adc and (bad) xor andl sub call shrb cs fdivrs xor jnp pusha (bad) (bad) ljmp sbb jmp dec out out xor (bad) (bad) jg stos mov (bad) jnp rol int3 std loope or repnz int3 lret and pop sub jmp ljmp mov clc xchg mov push fnsave jns test out cli (bad) jp (bad) fcomi les addr16 or aaa inc shlb clc cmp ljmp call mov or mov int repnz enter mov (bad) (bad) jmp lock sub xor icebp orb in mov mov jge out inc (bad) jmp ljmp dec repnz scas inc (bad) movsb cmp ret lcall lcall (bad) icebp xchg rcl rcrb xor lock mov std (bad) pushl sbb jmp loopne (bad) aas cli aaa push in (bad) (bad) aas dec xchg mov push add cltd push cmc jb xor xor divb sub fsubrp (bad) (bad) ljmp popa cmp mov adc imul inc sub ret mov inc (bad) and (bad) push mov or (bad) out and (bad) (bad) ljmp lods mov jns repz cmp xchg mov cmpsb loope into mov mov call in add repz ret jae mov (bad) (bad) (bad) call jmp push mov addr16 sub dec popa mov cmc mov test xor mov mov cmc movsb paddq (bad) (bad) jl and sbb xchg push add repnz mov dec movsb push jbe xchg into inc lcall jmp cmc es rclb negl (bad) (bad) (bad) incl std imul xchg mov int3 mov mov add aad inc mov jmp jbe call int rol imul dec jae rcrl lcall xchg adc push push fnstenv mov fldcw xchg push sbb sub (bad) pushl movsl nop orb scas stc ret add mov mov (bad) decl clc mov pop pushf inc loope sbb (bad) (bad) ljmp lods clc xchg scas scas (bad) int push pop cmp mov fst (bad) int3 out add mov sbb mov lcall mov dec fincstp add jle dec cltd add cmp sub (bad) das into in lahf test jp scas (bad) incl and aad mov or sub cmc pop insl mov (bad) (bad) incl jb cld les lcall sbb daa imul add lcall cmp dec gs push cmp fs lahf mov adc xlat jo xor lods pop jl mov xor xor fldcw cld pushf dec cli andb push insb jge mov es iret jbe adc aaa sub xor clc jne and ret out rcrl cmpsl rcll dec add stos (bad) lods mov add test push icebp in fistp jo jae lret (bad) (bad) (bad) call lods dec adc xor xchg stos sbb sarl xor xchg cld (bad) call lds and mov popf inc arpl fwait (bad) (bad) ljmp cltd cmp sbb lock ja jbe mov dec pop jle (bad) and lock (bad) jmp scas inc in push fsts mov add into aaa lret leave add (bad) decl mov mov mov push sub jle (bad) (bad) jmp lock scas out orl cmpsb adc in punpcklbw (bad) jmp stc mov mov push in ret movsb mov jecxz fadds sub int dec orb adc add insl lock leave cli inc call hlt mov ss cld cwtl xchg scas je xchg scas ret (bad) (bad) (bad) lcall int pop mov jmp push add inc adc dec rcll lock add aas call test fldl2e xor adc out sub push push sbb (bad) (bad) pushl jp or repz sub or (bad) (bad) (bad) (bad) cmp movsb out stos test push iret dec cmp mov fldenv das or jg lcall sub lods sbb (bad) (bad) incl dec jmp jno xor loop (bad) mov mov sbb popf or (bad) ljmp divb pop xchg push stos or mov loope cmp xchg dec mov out xchg ret popf mov xchg xchg sbb cmpsb mov (bad) (bad) (bad) call mov mov xchg scas dec arpl dec push push dec mov jmp (bad) (bad) jg test (bad) xchg (bad) and lret dec and shl rolb icebp (bad) call mov xchg adc mov jnp dec push rcrl scas or sub fs pusha mov repz (bad) movsb mov (bad) ljmp mov inc rcrb xlat push loope lea aam call imul push push cmp pop mov inc pop loopne jg cli int loopne adc iret in pop jmp sub jmp sbb sarl sbb mov xlat mov cmp lea cmp repz pop jmp aam aaa std call pop mov and (bad) movsb ret add rolb fistl cmp (bad) (bad) decl fs sbb iret bound dec jnp int adc cmp fstpl (bad) lcall imul xchg insb mov sub mov (bad) fisttp repz sti xor call inc push (bad) push mov scas lods je pop sarb cmp inc movsl sub or pushl mov add fcmovu repz ljmp std (bad) (bad) ljmp pop gs push loope lds dec push or or jo in sbb mov sub in pop (bad) (bad) (bad) jg xchg (bad) mov push mov pop push es mov in stos in add dec pop subl aaa cmp es loope out out pop test jo (bad) rorb jge add insb sbb (bad) (bad) jmp fdivl lods mov aas rcr das (bad) aam pop or in es pop pusha lods and inc out jae cmpsl dec prefetch or and mov inc fstl repz idiv (bad) (bad) jmp xor imul mov lds dec pop fdivl pop add imul xor imul sbb push dec jmp push mov imul sub jmp stc mov mov mov push dec (bad) (bad) incl mov or out mov inc xor xchg jno (bad) jmp xchg push jnp (bad) movsl ret or add ljmp sti mov mov cltd stos pop pop mov xchg (bad) mov jg ret sbb insb pop pop (bad) cmp (bad) (bad) frstor adc and mov xor push fwait mov push call scas jp adc lcall xchg nop pop (bad) (bad) (bad) mov or sbb out pop subl and not (bad) cmp lcall mov adc or test sub cmp jnp arpl ljmp (bad) dec es push sbb clc (bad) (bad) call rorb mov int3 bound out (bad) cld jp insl test add out ss dec insl (bad) mov cld or fcmovb call push je (bad) int sub data16 (bad) push xchg mov pop (bad) (bad) jmp rcl mov push jp xchg divb mov fistpll iret popa mov dec icebp fisttpl shlb icebp sub add jecxz mov push sbb into dec loop pop addb jle adc divb jmp fnstsw push push jmp gs xchg inc (bad) (bad) (bad) pushl sbb and test sahf out or and push push xchg out dec push lret pushf fdiv fsubs imul hlt mov sbb test sar incl sub daa (bad) mov sti lcall jecxz cld (bad) (bad) decl mov (bad) jns pop jo lds cmpsb push jae out loope add jmp mov xor cwtl jp cmpsb in adc (bad) (bad) jmp mov cli fs dec mov sub sub clc mov test cmp and jbe mov fiaddl into imul icebp adc dec jb cmp test pop cld cld mov icebp mov scas sahf das lods fist or out test jp (bad) mov adc sub dec sub cli call push mov arpl test mov leave es out push mov scas sbb gs xor push enter add adc dec xor in scas imul popa roll fs cwtl jb add (bad) inc sub pop int jbe dec daa xchg push (bad) mov xchg lcall mov sub push xor ss sbb (bad) (bad) (bad) (bad) mov loop and (bad) aam sub jbe gs out pop mov jge jnp inc xor std decl mov mov enter inc xchg jp pop dec dec loop inc cs xor push clc outsb cld push (bad) (bad) (bad) (bad) mov jns (bad) push scas outsb cmpsl test inc adc (bad) loopne jmp int3 addr16 (bad) mov cmp out outsl gs push xor push (bad) (bad) (bad) (bad) in mov int3 cs xchg sahf es sti mov je mov mov out in cmpsl sbb cld ret lods xor es ds (bad) (bad) (bad) lcall insl daa inc repz mov lds jb fsubrl or out mov jne push mov incl retw add mov adc in xchg test test mov jns loope sar jge xlat into push mov insl mov cmp mov cmp cld (bad) jmp xchg pop push fnstcw jb mov lds repz (bad) (bad) lcall pusha (bad) xchg fnstsw mov adc rol pop sub lods loop (bad) incl mov pop push mov ljmp xor inc movsb mov mov cmp mov ljmp ss (bad) (bad) ljmp inc (bad) leave das xor sbb or xor ret pop mov sarb ret dec pusha jl clc test (bad) (bad) call aas sbb dec dec mov ljmp jmp std (bad) (bad) (bad) ljmp ret ret mov cld shrl imull xchg cmpsb shll add inc scas inc mov jp mov jg sub into (bad) fdivr (bad) (bad) decl xor outsl repnz out cmpl fildll (bad) ss mov outsb arpl or decl enter in js xor and loop mov (bad) (bad) (bad) cmp mov dec cli dec xchg pop adc (bad) mov pop cmp mov test scas ljmp stc or add iret imul hlt ds mov lcall rcr push cmp fimull ret dec (bad) out rcrb or movsb cltd push in test xlat dec ljmp ss dec outsl ret mov shll jg cmp bound das and pop mov dec mov arpl or lds imul icebp test int das mov je (bad) jg mov lahf shlb mov stos (bad) xor pop push clc (bad) call movsb or nop mov push mov mov (bad) ljmp out sub js inc fdivr out (bad) icebp das out and notb xchg cmp decl push cmp daa sub push aaa lret push outsb mov add (bad) jg rcl inc mov jo mov leave gs dec rolb lcall (bad) cmp (bad) mov xor adc repnz mov jecxz xor nop mov cmpsb dec das push inc dec test test push out push test jge cwtl outsb ljmp dec aad mov pop jle lahf mov dec (bad) mov sbb cli mov hlt pop add (bad) ljmp lods cltd or pop sbb aaa fldt pop movsl lock call sbb cmp std call call and (bad) (bad) lcall mov cmp dec shl mov pop or loop mov mov mov (bad) call add ds add in shl xchg cmpsl into int3 dec mov push pushf lcall in iret into fstpl in es push sbb clc and stos call or push loope,pn stos adc (bad) xchg mov and pushl pop push rcl jp adc add mov mov add arpl dec pop pop xchg sub insb lcall mov stos dec imul popf pop fisubrl ss fbstp push (bad) (bad) (bad) (bad) (bad) pusha mov mov jo sbb (bad) mov std scas test jmp cmp stos dec stos and das lds arpl and (bad) mov bound jb loopne out cld dec ficoml push mov mov cmpsl add in shlb jbe dec roll jg push int mov jl fs ret ds jne lods xor sbb leave mov lcall outsl idivl mov out ljmp data16 jg lock mov xchg sbb outsl out xor (bad) ljmp (bad) jge mov nop shlb adcb xor push push imulb (bad) call dec jnp sbb add stc add popf aaa pop mov mov pop xor (bad) (bad) (bad) mov jne xor mov into mov call jns sbb xchg mov mov xlat ret lods jmp fistpl push adc jge (bad) (bad) call popa or rcrl ljmp mov dec int sbb hlt jecxz jbe xor jns lret mov (bad) (bad) ljmp jae into add push push lds int and fdivrs int and (bad) jp cld outsl clc ljmp sahf (bad) ljmp add mov mov aas jo inc jge push dec cmp lods in xor in aam int imul clc sti in mov mov arpl push adc mov outsb xchg dec pop inc and cmpsb mov call cmp mov mov outsb es sub std mov jp push fcoml pushf arpl push int3 mov (bad) xlat inc push sub int (bad) (bad) (bad) jg or repnz call xchg test mov pop das xor cld pushl cli pop inc xchg (bad) mov mov inc repnz incb mull icebp (bad) lcall pop mov dec dec lock sbb xchg mov inc jg push in rcrl (bad) call out ljmp adc rcr ds hlt popf mov std call push cmp cld test pop (bad) jecxz ljmp xor or mov test adc loop xchg or movsl jg movsb sbb fwait je inc test sbb xor mov (bad) scas mov xlat mov lock mov aaa mov ja or (bad) ljmp mov js das test or lock dec ficomp cmp (bad) lods in xchg cltd dec mov cmp (bad) fcmovnu and (bad) rolb sub xchg sbb ljmp push lcall int3 roll sbbl (bad) (bad) ljmp mov call inc imul mov lods mov stos ret mov push sub lock hlt lock (bad) (bad) (bad) ljmp and xchg jb adc ja cmp outsb push icebp fsubrs fimul sbb jmp mov pop mov add xlat lahf xchg lods (bad) (bad) (bad) jmp adc enter fmulp dec jae cltd sti add pushf sub and mov xchg scas pop call imulb int and pop lahf faddl xor (bad) inc ljmp mov sub aad pop insb xchg sub dec and or stos fs cmc sub loop adc xlat fldt (bad) rorl add dec xor (bad) ret jg mov iret in int ficompl jmp push mov fcmovne mov in fmull (bad) xor (bad) sarl (bad) (bad) gs sbb mov or xor repz cmc outsl stos shrb xchg or push out ljmp scas and pushl std xor adc pop fnop cs call repz jp es fs inc adc ja sbb adc stos xor cmpsl sbb out mov pusha shlb cmp sahf pushf push xchg sbb imul mov (bad) sar cltd mov (bad) jmp js,pn add cld mov mov test push inc cmp incl shll sub cmp xchg (bad) dec xor (bad) (bad) mov cli pop pop mov cs mov mov xchg dec cld incl jnp hlt ljmp outsl (bad) dec lcall lcall xchg jo push and (bad) (bad) (bad) jmp jl cmp mov hlt push and div mov cmp or dec int std outsb add add push lods stos cmpsb fisttp pop sbb sti dec ljmp adc dec jo sub or pop addr16 and (bad) (bad) pushl push imul and fdivl out cwtl dec outsl cwtl and pop mov sar pop pop sub in pushf js out xor loope mov decl inc cmp enter jp pop sub jl (bad) jg ljmp pop mov and outsl jecxz dec insb pop inc sub movsb decl call jb dec push (bad) (bad) (bad) lcall dec adc or (bad) xchg push out jecxz mov xchg cld jmp mov push jns fsubp cli xchg jmp sub (bad) (bad) (bad) decl push mov push in ljmp xchg sbb xor jo in arpl out xor mov out xchg mov xlat mov fscale mov cmp xchg xchg test add push in in test inc (bad) mov cmpsl repz testb test notb cwtl ficompl lcall (bad) jno aaa (bad) icebp dec das mov fdivr (bad) decl sub jge lret xchg fmul mov push enter cmp lret inc sub repz lahf sahf les mov xchg mov addr16 add xchg push cs (bad) (bad) (bad) cmp in out jno mov popf loope cmp xor mov push xorl stos ret pop jg jecxz in pop and arpl lahf das ss stos and incl jb cmp sbb lcall add and in sarb icebp pop data16 sahf movsl test dec mov (bad) jnp (bad) ljmp pop cli ret mov or jb into or roll sbb pop ljmp stc lcall jae loope xchg dec xor lods xor inc cmp sti pushl xlat dec adc es pop hlt and mov loope or jnp inc lcall xchg fmuls or and dec and push popf xor sub (bad) (bad) incl leave (bad) repnz xchg (bad) mov je xor fnop jnp shr pop es bswap (bad) lcall in push sub and test stos out and (bad) (bad) std pusha add xchg mov xlat sbb dec popf jnp clc (bad) ljmp jl fwait insl pop (bad) xchg inc push jmp push push shlb ljmp aas mov ret repz rolb (bad) (bad) ljmp lods ss xchg ret aad mov test mov jg or imul faddl lea jno mov addr16 jl mov sbbb mov jne pop cld out cli orl mov push mov notb in sbb mov ljmp mov std lcall pop pop (bad) (bad) cmp pushl in loop mov shlb push call xchg xchg dec into pop mov fsubr jmp jbe pop xchg xor xchg and loope in lock pushl push xchg lcall mov add inc stos jle sbb cmp xor mov ss es ret rorb pop test (bad) (bad) decl mov pop mov cld pop xlat xlat ret rorb adc mov jl (bad) (bad) jg iret sbb es fmuls pop pcmpgtd cmpsb jp mov faddl (bad) call dec iret mov lret adc (bad) xchg (bad) enter (bad) (bad) incl mov and fidiv out lods jnp outsl rorb pop and inc call repz push inc sub ss clc (bad) incl or mov mov mov das aad hlt in xchg dec mov das in adc int3 mov adc inc es (bad) (bad) call std dec lret ljmp xor and dec dec rorb clc jb std (bad) pushl xor mov sbb sbb (bad) je dec mov icebp cmp xchg adc mov std incl xchg sbb daa lock dec call in clc (bad) (bad) call push daa pop test sub or xor test pop and icebp scas sbb dec pushf test mov fdivr addr16 sub jnp push pop xlat fimull xchg mov or jmp sbb sbb inc (bad) pushl xchg test test cmp (bad) (bad) decl test imul test or adc sub dec mov jmp adc (bad) xor mov ja pop jle (bad) (bad) (bad) aas pop jno xor (bad) mov loop orl dec and ret pop and je call je xchg mov add mov xchg andb mul (bad) (bad) (bad) lcall icebp dec jbe push mov dec mov arpl mov xor mov inc fmull dec (bad) jmp scas xor or addb inc ret inc mov outsb inc push scas fisttpl jecxz shrl in jns (bad) push mov mov decl (bad) push iret cmp fcmovne rcr insb sti (bad) (bad) (bad) jg movsl xchg or mov mov gs sbb jge nop xchg (bad) (bad) lcall out mov mov popf sbb push or mov mov inc mov clc stc insl inc mov lret mov scas xchg stc dec (bad) mov pop loopne test (bad) sub pushf pop jne sub fsubrs mov xor (bad) mov sbb imul adc test (bad) xor (bad) (bad) (bad) call dec cmp aad test pop lret stc mov mull sub in sar xor add inc lods test (bad) (bad) (bad) lcall xchg in mov jge xchg add mov int xchg fwait test adc in test idivl mov andl cld je push xchg (bad) (bad) ljmp je mov xchg subl es add jbe decl mov push jae and mov lds cltd inc push push (bad) lcall (bad) aaa mov test das call lret dec push jns shrb fmul (bad) (bad) mov sub sbb arpl insb pop lods push xchg inc dec pop fildl jp push into mov call cmpl mov pop cwtl popf pop or ljmp das adc (bad) into sbb fs cld cmpsb ds pusha pop cmc jae adc lock adc (bad) dec daa cmpsl mov test rcll jecxz cmp outsb (bad) (bad) ljmp mov jle sarb mov sbb sub (bad) (bad) (bad) jmp outsl jno xchg jle add sbb mov xor data16 xor fwait sub (bad) (bad) jmp and not lds fstps xchg dec mov test (bad) jns (bad) in cmp sbb sti aam adc push dec bound pushf stos inc sub push (bad) call pop mov aad mov loope sar pop pusha rclb fucom sbb ljmp (bad) out movsb xlat jo jecxz cli dec inc mov sbb push dec fimull lds ds mov or fdivr ja (bad) lcall push mov or cmp hlt push lods les aad sahf push loopne or dec mov mov xchg loope (bad) (bad) incl iret fidivl loope lret lcall mov mov and or inc mov and xchg cld (bad) ljmp shrb pop jmp mov mov or ljmp inc es pop or jno mov mov (bad) lcall or ret sub cltd call jno mov in dec add (bad) call xorb cmp inc and jl (bad) (bad) (bad) cmp push icebp rcl andb daa faddp outsl adc pop mov dec dec lret aas mov adcl (bad) (bad) jg or xchg xchg loop fnsave lods jbe imul roll (bad) lcall cs lcall sub pop mov or push xchg icebp jl in out pusha push (bad) (bad) ljmp cmp pushf jnp mov daa icebp sub nop pop sbb (bad) (bad) jp iret xchg in mov fist stos out ljmp (bad) ljmp cmc mov pop rcrl adc pop cmc int das (bad) (bad) (bad) incl inc outsb popa push mov mov movsb inc jnp sub bound push movsb adc cmp pop adc decb inc push inc push pop jno mov (bad) (bad) incl decb pusha or fbld xlat mov ret dec jle aaa je scas fnstsw (bad) pushl add jns icebp push mov sub bt (bad) (bad) incl or in jo nop (bad) je movsl adc je std pop and sahf or add inc xchg cld (bad) pushl mov and sbb xchg add mov movsb enter jmp pushl dec sub cmp fs add sbb jg fldl rorl (bad) call pushf mov mov push or (bad) cmpsb fisubr je lds (bad) call and and xor sub and mov adc ljmp in pop das stos into fidiv jnp sti les xchg in les cmp bound dec mov rolb and jne dec dec (bad) ljmp xchg mov shrl clc mov rol pushl push rorl cli cmp or icebp incl int3 cli pusha push add int3 dec xchg lods adc (bad) fildll outsl push cld fisttp or pop clc cmc aaa test add movsb sbb lret out and (bad) (bad) jg jmp xchg pop sahf test mov and loope outsl xchg lods loopne (bad) aam adc mov (bad) xchg mov mov push adc mov or and mov jb call jge add xchg lea cmp or dec cmp sbb sbb movsl cmpsb dec scas push imul sti mov int3 push ffree insb dec sahf (bad) (bad) jmp fimul push mov cs mov inc in mov dec (bad) (bad) (bad) (bad) (bad) out add xchg movsl lret add out rcrl (bad) aaa daa cmp sub xor (bad) (bad) jg xor test daa stc in push mov xor (bad) (bad) push ret ret mov dec pushf dec es iret loop test cmp aad cli cmp dec push ret (bad) aas leave or data16 pop fbstp loopne in push das scas inc add call stos ret jmp fdiv xchg stc jno outsl ret xlat jmp or xchg gs packsswb inc movsb lret inc sbb jnp rcrl inc aas outsl xor push js adc jg fidivrl fisttpl rcl pushf test pop mov je cmp dec shrl stos cli (bad) (bad) jg mov aas es or pop inc ss mov icebp std dec cmp fstpt pop (bad) (bad) ljmp cmp pop add sbb mov or and pop sar jle jg int3 xchg mov (bad) (bad) (bad) ds xor jle jp pop ret aad dec call fwait pop push inc or jae jg and xor pushf or out pop mov jl popf mov test mov xor mov mov sub rol push dec pop jmp (bad) pushl xchg addr16 aad cmc rclb and (bad) (bad) jg out inc cmp enter lret and dec fnstenv decl (bad) incl int xchg addr16 xchg out out mov bound lea lret sub pop decb mov mov out mov sub notb mov lcall xchg mov pushl in std enter pop jecxz sub lret mov mov lds test cmp (bad) push neg (bad) xor loope pop loopne adc les daa push pop jb and fsubs nop (bad) cmc xchg les fstpt add incl or icebp push mov test push push addb cmpsl daa push cs push jnp push xor loopne das mov (bad) lss jnp test (bad) ljmp ljmp mov (bad) adc lods mov xchg (bad) call stos mov jge mov xorl mov std lcall sbb lahf sub mov sub push stos mov stos inc inc fwait outsl lahf insb inc jne cli scas add incb mov incl iret in cwtl nop lret mov mov jmp adc inc lods les sbb pop daa mov (bad) (bad) jmp add imul in outsl mov cmp lods pushl std cmp neg aam repz into imul shrl sub cmp div out (bad) insb dec mov (bad) fcom jnp sbb push ficompl div out xchg jns add pop jecxz inc jae adc push xchg cld (bad) jmp pushf and bound fwait push fdiv mov cli adcb repnz pop (bad) jg push dec mov incl ficomp lock push out dec dec inc mov mov (bad) (bad) (bad) cld pop negl movsb xor std mov fistp inc mov or movsb dec (bad) jg jne xor sub repz mov (bad) (bad) (bad) call xor xchg into (bad) fdivrl pushf shlb cld push icebp stc fwait es xchg gs xchg ljmp scas ficoml xchg inc clc xchg sbb (bad) (bad) jmp mov insb fwait push (bad) repnz test xchg icebp add xlat std inc js andps leave mov adc cmp pop popf hlt incl movsl mov inc (bad) xchg mov push cmp mov push scas jge add cmp fdivr lds enter jne ret pop jns xor out (bad) pushf pop cmp or sbb int jb in call enter mov xchg mov sahf inc (bad) loop or mov and and ret push nop lods xor notb (bad) fdivs in subl adc loopne (bad) (bad) mov xor pop lock mull icebp mov rorb jb fs out rorl ret jns jp rcrb mov (bad) (bad) ljmp imul jl push sbb ss xchg fisubr mov xchg iret push cs repz dec (bad) jmp xchg mov outsb lea repnz pop ds adc sbb cwtl ljmp incl inc (bad) scas add fs dec sbb lret cli mov cmp mov hlt (bad) decl mov jo or cmc mov clc cwtl cmp imul leave adc xor in test stos (bad) mov bt cmp scas pop mov leave (bad) (bad) call push xchg and sbb into movzwl and mov (bad) aas sahf cli insb add mov pop and rcll pop xchg adc jns adc daa push adc movsl call jp scas fs cmp std sub (bad) mov mov jecxz aas xchg pop dec ja xor in inc xchg (bad) (bad) lcall dec mov sbb aad jbe pop cmp jg,pt xchg pop xor xor (bad) (bad) mov push ror sub sub mov push test (bad) call icebp mov mov and pop xor divl (bad) ljmp aas stos sub fwait into js sbb dec into jb sbb rolb pop cmp (bad) (bad) jmp xor fs or imul sub mov mov dec out or (bad) (bad) jmp xchg jge (bad) lock lods lea sub clc hlt (bad) (bad) (bad) (bad) sti jae into sbb sbb inc imul (bad) rolb pop addr16 cli (bad) (bad) jg jbe pop xor sub (bad) nop ljmp push cmp sti test (bad) (bad) push add lcall jmp out mov xchg xchg xchg (bad) decl enter cmp xchg mov popl and imul mov mov dec mov mov out xchg or adc incl mov data16 adc jecxz jg rorl mov adc enter fs ljmp cmpsl outsl cli pop lock mov mov sahf in add or mov jo nop mov push and inc repz xor (bad) (bad) out cli shlb jp jbe lock seto sub sbb sbb fwait xchg jmp (bad) (bad) jle addr16 xor lret jb fisubl (bad) ljmp (bad) sbb fdivl adc sub ja push in and frstor mov repnz fwait popf sbb (bad) in sub ja jle inc sbb mov or and jecxz add or mov ljmp adc mov fidivl xchg aam xchg ret xor (bad) call insl pop mov mov out lahf outsb loopne ret inc xlat cmpsl (bad) (bad) (bad) (bad) incb aam jge jno fldt inc pop mov mov mov mov add es cmpl dec pop scas add and btr sbb outsb vpsllq aaa out shlb push mov mov ficomp jno xor lcall dec xchg addr16 mov repz hlt lds (bad) mov fisubl jne xchg andl (bad) push push repz fldcw out stc cmp jae (bad) (bad) xor in add das sar sub (bad) in outsb adc inc cmp ljmp jg test testl dec cmp (bad) (bad) (bad) call xorl dec jmp cmc push sbb adc ret mov (bad) call sahf lret mov mov cmpsb pop int sub movsb leave xor nop js push pop enter adc pushf inc sbb jl cmc (bad) (bad) mov mov push cltd xchg cmc cltd fcoml sub push lea (bad) lcall add insl in lods add out pop out sub push sbb (bad) (bad) lcall sbb and mov dec pop cmp push lods inc out lock (bad) cmc cmp stos (bad) repz in mov adc xchg in dec xor xor jmp cli ds xchg push mov inc push sbb jmp hlt sbb scas (bad) nop jg xor (bad) std jl out clc (bad) mov sub sub adc je scas inc or or decl pop xor lahf pop and mov (bad) pop push es inc addr16 aad (bad) (bad) imulb inc mov arpl cld inc test icebp ljmp xorl xchg jb imul add (bad) jg jo push cwtl sub push xchg (bad) cli sub je push (bad) lret aas popf ret pmaxsw leave mov mov insl sar (bad) (bad) call sahf pop sti mov lahf sub dec dec jge sbb lret popf and (bad) out jg lcall lret dec cmpb negl leave sub incl cld call or gs jmp lahf sub aam fbstp shrb (bad) decl inc add dec lds cmc jmp add dec (bad) push (bad) (bad) push aas xchg (bad) (bad) aas cmp js enter shrb roll cmp mov cmp add xor rcll xchg je dec adc cmp (bad) ljmp adc lods inc jle jl mov scas cmp nop pcmpgtb (bad) mov cmp fbld lcall clc scas mov mov ror scas shrl cmc aaa std jecxz imul pop (bad) mov sti mov dec add push sub and sub shrb outsb stos or cs xchg (bad) pushl outsb call pushf fdivrs mov pop gs scas dec pushf flds jmp stos pushl test adc xchg add in mov inc repnz xchg xchg fwait lret sbb int3 ljmp sti pushf das mov cld pop cltd xchg mov cmpsl iret in (bad) (bad) (bad) ljmp push das pusha pushl sbb cmp mov into add test pop jg aaa iret xchg and cmp mov ja cmp hlt dec (bad) (bad) jg clc insl push repz das leave enter mov icebp pop movsb push or in inc cltd ret pop test xchg add idivl xchg xchg fcmovnu rcrb (bad) je (bad) lcall dec scas int3 jecxz,pn and push scas push (bad) lcall (bad) pusha jmp imul inc rcr dec inc xchg arpl (bad) xor pop fidivrl or aad (bad) (bad) (bad) fldenv dec sahf mov xchg mov mov push xchg insb push xchg ret out neg sub ficom or mov cli and add pushl sub aas mov xchg mov and sbb mov rcrl bound cmp mov xchg ljmp das add inc xchg nop sub or jmp (bad) in cmp mov fwait and (bad) inc mov fucomi mov cmpsb mov ss and and lretw rorl clc ljmp clc in xor sahf sbb dec xchg loopne add fidivr adc (bad) (bad) aas vpunpckhdq aam adc mov sub ret addr16 adc (bad) (bad) lcall xchg into xchg mov addr16 pop sbb scas dec std enter negb jge pusha es mov fsubrs hlt out push lods (bad) out jg out clc dec insl adc insb jp test fwait pop lahf (bad) pop imul mov std mov bound sub sub mov mov clc push lea out sbb cld inc out dec fstpt push xor add out pop ror or (bad) jmp and pusha icebp mul cmp xor dec outsl mov imul xchg je pop inc mov jns into inc es stos mov lcall jecxz loope rcll insl je rclb sub jmp icebp mov dec outsl and or pop ds (bad) scas out cmp aad xchg cmpl sbb xlat pop pop or xchg add jecxz testl xchg lahf xor push push aaa cmp and mov (bad) dec pop paddsb fwait or jb mov dec xchg mov fcoms pop xor cmp sti out in mov and mov pop fcom bnd sub mov dec pop clc or (bad) (bad) jmp fldenv roll notl sbb pop subb iret pop out dec js pop cmp mov hlt test out into jge pop (bad) call sbbl sbb push jb popa addl (bad) aad int out cld inc fmul mov cwtl add mov js or cli lcall imul mov mov lcall adc pop fstl mov lea ljmp adc push (bad) mov stc push insl sub mov sbb cmpsb lock adc lods jle loopne lcall push out jmp in shr or (bad) (bad) call popa (bad) pop inc cltd stos mov inc cmp xor insl add mov cmp mov sbb addr16 jae lods (bad) (bad) (bad) lcall cmp movsl adc pop mov subb dec cmp push mov push nop xor ret nop loop (bad) cmpsl outsl nop shrb test call push out fisubr incl test adc hlt pop pop cld xor lcall das (bad) sbb push dec xlat imul add outsl pop or pop xor jnp dec (bad) nop lret mov jbe pushf jns mov (bad) cmp (bad) mov adc mov mov mov orl mov xor sub lods mov or fucomp into shrl mov push cmp (bad) (bad) jg push add mov bound pop mov or push movsl fcomip inc fmulp pop mov jo sbb (bad) (bad) (bad) ljmp add cmp fstps repnz adc dec sub lea cltd push sub stos sbb (bad) out push pop xchg and ror ret mov aad pop mov stc lds (bad) (bad) lcall xchg or aad roll cltd adc loop outsl ljmp fwait sub mov addr16 push push ljmp push jecxz add aad sub decl mov in sbb mov test jge (bad) aam cli decl and (bad) in push fist mov inc std insb inc pop sbb cli xchg push shl mov (bad) jmp mov mov dec ja bound mov push cwtl enter loop roll cmp xchg imull pushf rolb mov jbe (bad) (bad) (bad) mov movsb rolb ficompl xor in xchg icebp (bad) inc mov sub outsl sbbl pushf xor (bad) (bad) lcall adc scas sub adc cmp mov ret loopne shr cmp (bad) (bad) call and mov jbe shll int3 mov jno push push (bad) sti hlt mov cld dec lea cmp adc scas outsb mov (bad) decl cli and lods push sbb inc adc mov ss mov cmp bound stos clc and cmp jns fbstp (bad) decl push adc and mov sbb (bad) leave cmp and out js cld ficom inc fdivrs xchg int gs fbstp push lahf add rcrl rorb push out mov push sub loope add mov mov or fcoms roll xchg data16 xor popa dec mov (bad) (bad) jg sub loopne dec dec stos cmp fnsave popf add aaa inc imul leave (bad) (bad) (bad) (bad) data16 add push ret sub call gs (bad) (bad) (bad) aas cmp mov mov lahf das cmp imul mov (bad) incl jno (bad) mov lock imul (bad) ljmp rolb mov mov (bad) es aam (bad) call pusha lock sub leave pusha add sbb stc xchg push sub ss fcmove movsl lea lcall (bad) (bad) fdivrs fwait add inc addr16 lcall or fdivrl cmpsl arpl rcl ret add mov mov sub call add cmp les dec jno mov (bad) (bad) call or rcl mov pop cmpsl xchg or (bad) call test sbb (bad) xadd pusha jae (bad) ljmp inc cmp push ret nop repz or xchg out fsubrs mov jecxz sbb jo or and (bad) mov imul subb mov (bad) (bad) (bad) inc pop pop inc mov js and popa jge bound (bad) sub movsl imul imul xchg pop stc mov je adc add (bad) (bad) pushl out cmpsb push jmp fcomps or pop es leave sub (bad) mov mov cmc rorl add xor push lcall icebp xor aam dec mov ret ret xchg xor (bad) (bad) ljmp sub enter mov mov repz (bad) je dec cmp icebp jecxz stos adc je int xchg xchg xor or inc std and fdivrs pop pop pop push (bad) (bad) (bad) lcall adc inc (bad) sbb push pop leave xchg or negb pop pop cli dec (bad) call sbb and ret lods icebp or mov inc ret (bad) (bad) (bad) push jns add repnz mov sub xchg es pop adc xchg pusha xchg mov outsl pusha mov call adc rorb stc movnti mov push (bad) jmp mov das add cmp (bad) aas movsl movb sub add adc bswap jmp cld lcall int adc or mov std fwait gs mov fiadd (bad) (bad) lcall aaa les inc adc mov jmp sbb pop (bad) decl xor and push dec lret dec pop inc outsl mov inc sbb (bad) pushl gs sbb cmp pop bound addb fidivr (bad) ljmp stc inc bound lds xchg or xchg jge std imulb daa test pop cld jmp mov add fadds test movsl cmp sbb or xor add cmc mov push roll inc and push repnz mov popf movsl insb dec pusha xor enter (bad) xor rcrl add aad out je arpl mov scas cmp inc int (bad) (bad) ljmp cmc neg cld and xchg xchg push clc lcall sbb ret (bad) (bad) (bad) mov sbb add xchg lds sbb dec mov daa lahf sahf push (bad) (bad) decl inc push xor adc dec xor aad push jl aam inc insb xor sbb (bad) mov in cmp push cmp sub xchg pop jo (bad) cmp sbb (bad) (bad) jg mov movsb outsb in jno je pop push pop cld dec pop mov dec xchg lcall adcb shr mov mov lret dec pop mov and jbe mov incl add jns gs (bad) aaa (bad) repnz xor sub sbbl aas ret lahf mov dec js jl sub cld int3 ja popa add enter in sahf mov in ljmp or arpl xor ffreep sbbb (bad) clc incl fisttpl int push clc pop mov push xchg ss sar dec push js (bad) rcrl (bad) (bad) inc jae sub ret jbe jnp imul mov repz ss ficom dec push pop add (bad) push xor inc mov mov mov or call push leave adc aaa (bad) lcall inc push leave sbb jno push pop into mov cltd jmp mov cmp (bad) fmuls mov inc mov and cwtl add pop xchg cmc aaa adc inc mov xchg cmp hlt cmp pop pushf les mov or push sbb push mov test repnz jp inc lock ret dec lahf jl xor sub sub (bad) mov je sarl leave ja imul (bad) jmp imul repnz ljmp jo xchg push push mov in jp push (bad) jg (bad) pop js jno fildll jg cltd or (bad) (bad) (bad) jmp ret into jo fdiv cmpsb and popa mov jmp jecxz enter sub mov sub out clc ljmp (bad) pop stc cmpsb movsb jle jo loopne mov sbb lret push loopne (bad) lcall aas or arpl adc inc sub push inc push cwtl and sub inc (bad) (bad) pushl mov shll mov arpl addr16 jecxz xlat mov (bad) (bad) (bad) pushl cmp or sub aad xlat addr16 or and add icebp (bad) jg (bad) hlt dec adc sub jle inc lods loopne in stc rclb dec (bad) je rol push mov lret adc call mov addl cld jmp cs push das mov mov (bad) (bad) call addr16 inc sub adc daa push xchg out mov xchg call push sub addb pushl push clc mov int cs sbb adc mov inc mov (bad) into outsb mov mov stos enter mov fisttp inc ljmp das mov test xchg pop je cli call movsbl xchg jg (bad) (bad) (bad) mov add dec xor jp inc gs lock xor cmp (bad) (bad) decl iret notb sub push push sbb enter adc (bad) (bad) lcall lds or loop push xchg adc fs mov sub pushf cmp pop in mov lock jp dec adc test enter pop push subps ljmp cli (bad) incl imul add mov pop pop pop scas in (bad) (bad) incl (bad) out inc dec sub and (bad) mov xchg xchg icebp push scas mov ljmp incl loope lret add xchg push aaa jb xchg (bad) (bad) fcomip nop dec fldenv iret mov adc mov flds (bad) ss pusha mov lcall xor (bad) repnz (bad) ljmp adcl dec xor xchg inc js fcmove leave sbb ret or (bad) (bad) (bad) std lcall pop add or scas (bad) ja test mov lds (bad) jmp ds xor les repnz out (bad) adc mov (bad) (bad) mov and push mov rolb and push mov (bad) fnop xlat test push pop out mov xchg cmp sbb ljmp mov (bad) pushl mov sarl popf dec xchg add sbbl lret mov push std ljmp ret lods cmc push xor dec daa push (bad) outsl push lea jo cmc push (bad) mov mov rorl and loope loope jmp call mov inc mov fisttpll inc ljmp cs test and inc std mov aad or inc cmp cwtl jp mov es inc js xor (bad) int mov sub push mov inc xor nop (bad) (bad) (bad) sbb mov aam fsubp mov jae jecxz iret xchg xchg mov je and incl (bad) out xchg stos rcrb sahf pop dec pop imul jns (bad) jmp xchg adc hlt subl mov leave xchg inc lock mov mov add xorl pop xchg repnz adc popa jb and ret mov (bad) call mov cs mov cmc arpl push and (bad) call dec call cmpsb mov bound or imulb xchg jmp xlat out or mov push (bad) in or fmull addr16 sahf in mov xchg clc (bad) lcall xor popa cmp jno and xchg push jge cld mov pop dec add sbb imul pop test ljmp inc repnz push sbb lcall and negb inc int3 jp xchg dec push insl (bad) lds stc jmp jl xchg sub dec pop adc push sbb ljmp pop sti cmc repnz jg mov add inc add ljmp jb les xchg and xlat ljmp test clc std imul mov roll push add popf lods (bad) call inc jae mov mov sbb xchg ds jge scas dec adc add (bad) decl cmp mov ret shl mov imul dec push xor rorb out mull (bad) (bad) (bad) (bad) (bad) sbb pop test cmc sbb sti imul adc hlt xchg cmpsb lcall push sbb xor cmp push subl xchg adc aad (bad) (bad) (bad) fbld xor arpl out out loope inc and sbb cmp sbb rcll loope dec or pop lea (bad) (bad) (bad) pushl loop pop xchg test cmp xorl pushf (bad) xchg mov cli ror pop adc into subl inc jae mov (bad) jg dec xchg mov push scas call mov pusha fnstsw (bad) (bad) (bad) decl jo test (bad) loopne and mov addb dec fdiv xchg jp stos mov sbb scas sub jmp outsl add insl clc cmp int3 mov push ret (bad) int3 mov push test ljmp lahf mov push xor dec mov (bad) (bad) pushl fwait mov fldcw cli fcompl les jecxz test push pop ffreep or (bad) decl cmp mov aam adc fwait adc popa ljmp nop sub jns jb incb or push mov (bad) xchg out inc xchg (bad) (bad) decl pop sbb incl movsb mov lea testb dec (bad) push ss sub pusha movsl call sub inc adc gs add (bad) (bad) (bad) std repz mov push jge pop push lds mov pusha lcall sbb pop mov pop fist mov das icebp xchg call cwtl (bad) jbe clc (bad) lcall fxch mov xchg mov fs jge dec cli mov sbb dec push push sbb mov xor jecxz aas (bad) stos (bad) (bad) call push sub (bad) aam cmpb movsl push push xchg cld (bad) (bad) ljmp sbbl mov test (bad) ds push add imul (bad) call lahf pop dec lret cld (bad) push cmp cs mov (bad) push je ja jg xchg adc faddp cld push ja mov fiaddl sub sarb or or mov jle cmp fisubrl mov cmc jae push xchg jecxz (bad) inc xor lds (bad) (bad) (bad) push push xchg inc push inc call adcb jl xchg imul icebp and push jmp fidivr push (bad) (bad) (bad) decl pop arpl add adc inc arpl sub scas arpl sar pop daa cmc ljmp cmp and sub decl or in gs adc imul stos test inc mov cmpsl pop mov jg push pop ret sub dec loop aaa mov jle (bad) aas adc rol ss dec mov sarb (bad) (bad) (bad) decl cltd mov ret and inc mov mov fcoms mov lcall or mov jbe dec cmpsb (bad) (bad) (bad) call fwait push jge dec adc mov sub popa cmp (bad) mov mov loopne mov (bad) mov shr sub sbb cld (bad) fbld in jbe stos popf add mov inc sub lcall and jns jnp repnz loopne stc inc add push test in push aaa into mov and cli (bad) jmp push mov fldl scas xor hlt (bad) call or jns out sarb pop fsubs adc xchg mov (bad) (bad) call int stc cmp dec push sbb and dec adc imul lods vmwrite (bad) (bad) lcall mov sub and mov inc push into sahf daa mov lcall (bad) incl mov fisttpl mov test (bad) decl inc ss add mov outsb jg popf xchg ljmp jmp repnz xchg push insl adc xchg ret sbb les add sbb xor cmp sub jnp sbb and insl inc das push data16 std dec cmpsb add mov test aas imul ljmp add jae push iret inc idivl xchg mov enter (bad) incl push mov dec stos push pop in stos fsts add lock xchg mov (bad) (bad) decl call icebp sbb dec jne jno adc pop jo je (bad) (bad) jmp sbb cld adc sti sub jp cmp add mov mov pop or sbb out (bad) movsl movsb fstps cld (bad) (bad) cli jne mov xchg repnz mov xchg fidiv aaa pop imul aaa rolb jns adc xchg pop jecxz (bad) (bad) incl movsb lds inc loopne (bad) scas movsl aam mov cmp dec jmp cmp sub (bad) (bad) (bad) cmp xchg imul sbb (bad) xor aam (bad) (bad) incl imul dec fdivs imul rcrl xchg (bad) (bad) (bad) mov nop pop xor out loop fs je push arpl popf (bad) (bad) (bad) jg mov out jmp xchg mov nop xchg mov sub jno dec popf leave (bad) (bad) pushl fiadd jmp jb bound in das xorl sbb push es add jle neg jb into mov or js sub (bad) mov mov lret mov xchg inc jle (bad) mov repz pop pop jmp icebp xchg fadd add mov and nop cmp mov adc jp xchg add test std add call loopne pop inc or cmpsl dec sub (bad) lcall std int nop inc fbld cs add push bndstx (bad) (bad) (bad) cmp fidivl fwait repz adc pop mov (bad) (bad) decl mov (bad) cmp loope sti inc sub xchg (bad) and push add lcall (bad) decl mov sub rclb lret push fcomps (bad) (bad) jmp pop out pop adc int3 sub cs mov xchg cltd je les pop rcll stc (bad) (bad) (bad) incb lret pop subb dec xor add cld or pop push sbb fsts cmp (bad) das cmp dec push orl pushf cmpsb push mov (bad) xchg leave sbb js cmp (bad) (bad) incl idivl mov mov dec sbb jmp mov aas pop fsubs jle cmp xchg fldcw pop and (bad) call sarb loopne mov pop jp int3 pop mov or lods (bad) xchg mov ret sub (bad) mov aad pop fnstsw sub mov jp imul (bad) (bad) call les cmp xor xor lahf jl pusha clc data16 mov adc lock (bad) incb mov insb test sbb jnp fwait xchg xor (bad) (bad) call into movsb pop test cmp sub imull ljmp addr16 outsl or pop adc out pop lods cltd cmp adc mov dec push gs loop jge mov lcall inc (bad) xchg clc inc mov test inc je in mov pushl mov push ds (bad) (bad) call push jb ds sahf sub js into pop cwtl mov pop fldt pop dec cld shrl scas loope jge fisub jecxz (bad) (bad) jg loopne mov lods fstpl adc and jno stos jmp enter in (bad) (bad) cmp mov int3 iret ret push mov xorl std arpl sub (bad) lcall lods mov movsl aaa imul cmpsb js xor ret aaa pop push xchg out xchg test xor mov mov cmpsb fimull pop loopne adc cmp in push frstor and (bad) mov fwait or fwait outsl mov lods movsl xlat mov incl cltd dec adc (bad) in jl mov aas jo std test sbb mov into adc (bad) (bad) (bad) mov in jecxz sbb es jl movsb mov gs (bad) mov scas mov mov lock aas lret (bad) ljmp add icebp daa push add movsb sub (bad) (bad) (bad) jmp mov cltd addl negl ss mov int jge jbe jmp pop mov inc sbb add (bad) repz and adc jmp enter mov subl (bad) imul dec inc add popa push idivl (bad) jmp mov xor iret andl and (bad) (bad) mov cmpsl xchg insb push push lock movsb xchg dec mov loope fcmovb cmp inc fnstcw incl aad push xor sub cmp fisttpl mov and sahf cmp dec push mov (bad) jmp or stos lret cmp xchg add add ds jp in (bad) pushl push adc dec xor xor adc incl adc dec call pop cmp or (bad) pushl sbb mov sbb clc lcall loope pop inc int3 clc int3 xchg xor xchg xchg iret cld push or call (bad) (bad) (bad) call sbb (bad) hlt jmp adc ret cli or cs push jecxz outsb bound lock (bad) jmp nop xchg sub idivb fwait sbb push out addr16 (bad) (bad) (bad) in cmpsl loope and push data16 sub xor lcall imul iret (bad) ljmp stc sbbb les and jbe add les addl and mov pop test call movsb nop xor scas pop rcll incb dec incl jae (bad) xchg jo stos push push pop loop pop ffree sub push pushf gs imul sub (bad) ljmp push scas addr16 (bad) pop insl shrl sub jecxz jp push (bad) (bad) (bad) jmp int3 cld push cmp adc lods imul xor movsb pop fcoms jp add sub push mov or adc sbb xor pop mov lds (bad) (bad) (bad) cmp mov cmp aas into or rorb hlt xchg (bad) xchg hlt mov outsl mov pop cld jb push cmpsl and inc sbb hlt pushf lret imul or dec lretw push test (bad) lahf mov (bad) pushl mov inc cmpsb ljmp mov popa add jae jb cmc push ljmp nop hlt js inc clc cmp and push inc jns cmc (bad) (bad) (bad) incl mov scas lea lret adc inc mov xchg aas and pushl js mov ds lods push add inc in (bad) (bad) ljmp inc aaa outsb mov fdiv xor jne sbb pop cltd mov (bad) xor jo je iret jo push xchg push cmpsb ss inc sub sub push idivl push sub mov call (bad) movsl mov (bad) (bad) ljmp cmp out test sub sub (bad) mov imul cmpsl adc scas fistl fistpl (bad) push imul int test jno pop or out add (bad) pushl sbb ds fild inc mov xor pushw pushl mov std xlat sbb scas mov sbb icebp (bad) ljmp rol fldt mov pop xchg push adc sbb das cmp je push inc cld mov fsubrl insb add ret inc push (bad) (bad) (bad) (bad) in scas lods mov into mov in adc push fdiv lea test pop call sub push scas ja iret arpl inc mov add push dec push stos stos ret cmp stos dec pop std jp mov mov testb gs call jmp jecxz test call mov xor inc inc push clc roll adc pop (bad) (bad) (bad) (bad) clc fisttp xchg xchg (bad) jmp sub data16 dec xchg cmc mov xchg or dec (bad) decl push xchg cmc fdivr adc mov sub test (bad) (bad) (bad) ljmp leave mov popl fdivp adc push fisttp nop mov jmp dec (bad) dec xor scas sub out fstpl jg adc outsb add (bad) call scas mov xchg pop pop sub jp andl test xchg xchg mov (bad) sahf scas xor repnz (bad) lcall inc inc dec lea lods mov xor in cmovge mov cwtl mov mov push mov (bad) mulb pushf out pop ja or mov test mov hlt xor adc (bad) (bad) decl shlb xor lea mov push jg inc bound adc fadd lock ds mov push adc mov or dec fcos (bad) (bad) mov (bad) jle jo jmp lret movsb adc mov orl repnz (bad) (bad) jmp or xchg xor ss mov push push fidivr inc lea push dec mov add pop push adc sbb orl (bad) (bad) sti mov int xor (bad) adc mov cmp mov inc ljmp mov and in lds scas mov mov (bad) mov cmpsb sti (bad) mov lock aas xchg xchg lds sti pushl repz xchg jmp mov in cli pop adc lcall inc inc mov cmpl js cli test and (bad) (bad) incl ret rcrl (bad) mov std dec xchg dec xchg (bad) pop jb pop sbb clc pop mov jb pop movsb xchg sbb outsl (bad) stos dec adc test (bad) ljmp out xor roll mov push movsb and dec mov andl add jmp and push xchg in rolb popa ja mov (bad) (bad) pushl mov lea adc pop cli adc nop mov out faddl in es xchg cld (bad) inc push and daa outsb arpl push popa sarl int3 leave (bad) (bad) aas std mov jecxz pusha jp mov or pushl (bad) xchg adc (bad) (bad) jmp mov or popf sti pushf ljmp loopne scas cli jg inc scas or and push mull dec (bad) (bad) (bad) (bad) cmp adc cs cmp push loopne lock lock jmp mov push cs pop stos push adc lds pushf and cmp cmc imul (bad) jmp mov adc mov int3 lret push dec icebp and fcomip not (bad) pop popf xchg jnp leave ds pop in jg sub pop enter enter mov lods repnz (bad) (bad) fild aas stos jmp add pop jecxz out cmp inc jo fstpt mov mov push and incl sti xor jbe subb ljmp sahf push outsl scas mov (bad) (bad) (bad) lcall cmp xor iret add (bad) cmp dec cwtl push test repnz cmpl jb mov mov dec add sub mov in in inc lock sbb adc push pop xchg insl out mov add loope fldl2e add sub mov cli int aaa sub cmpsb test push daa and cs daa in or jg out dec lret sub jge pop lcall dec lahf xlat dec cld incl sbb addr16 lds mov xor (bad) fbld sbb mov dec inc push pop iret aas sar (bad) (bad) fcomi mov jo imul dec lock into jnp cs jo dec push adcb add pop into mov (bad) (bad) pushl cmp iret mov lods jp in inc adcl mov (bad) (bad) pushl neg sub jecxz inc inc jg cltd push (bad) (bad) (bad) decl sbb xchg sub vorps cmp jbe lret and adc fistpl aad or das ret dec push dec scas outsl jbe into incl xor lock in xchg pop mov (bad) incl enter leave cmp xor xchg and into fistpl jg cwtl adc (bad) pop mov or (bad) (bad) jg cmpsl nop aam int movsb cmp mov adc and pop (bad) (bad) (bad) jmp dec xchg inc jo cmc jno push and std inc mov pop (bad) push xchg push inc pop mov jg sub dec (bad) mov jg mov adc adc inc jge lret cmc enter (bad) (bad) call test dec out push jecxz adc xor xor mov mov lcall dec inc mov (bad) ds cmp (bad) in into cmp (bad) (bad) dec stos cld xor dec xchg mov out loope cmp mov pop jmp xor mov movsl test or mov inc mov fcos call addr16 callw adc sub shlb and pop cmpsb call xchg (bad) loopne sbb push inc insl mov (bad) ljmp xchg adc repnz adc xchg push stc addr16 (bad) (bad) jmp int loope jnp xor mov fwait xor data16 or dec adc sub decl xor lock repz inc mov iret mov lods push leave stos hlt mov sbb pop in popa subl scas sub (bad) repz aas adc in stc and leave sarl repnz mov addb sub (bad) decl pop xlat repz inc outsb js and pop data16 sbb imul es imul inc lcall inc lret add int mov pop jnp insl xchg push int3 pushf sub dec shll (bad) incl cwtl mov mov fisubr mov pushf push sub hlt add clc xchg adc mov (bad) (bad) (bad) mov mov mov pop push push lock jmp mov fisttpl jo lock push insb or cmp lret stos lahf sub mov jle cld (bad) call test repz imul stos (bad) jns popa xchg (bad) jecxz push jo (bad) (bad) fucomip addr16 xor mov cld push bound std nop jp mov in hlt dec cmp inc call mov lcall (bad) call inc mov xchg cltd ss jnp ret pop fbstp add (bad) inc cmc cmpsb sahf inc test enter out adc fwait aad lea xor mov (bad) xchg cmp add dec pop push cmp push stos and xchg cmp cmc dec (bad) (bad) pushl pusha test pop xor push int ljmp addr16 lds lods imul sbb mov ss or pop (bad) jns (bad) je into loopne and lret mov mov lods push (bad) mov insb and imul in ljmp jecxz push sub (bad) call js les push cmpsl pop gs adc jbe jmp into pop icebp pushl data16 popf out rorb subb adc inc mov (bad) jmp jle adcl lcall ds xchg sbb cld (bad) dec fisubl (bad) jo stos push popf in adc (bad) es int3 adc mov ret jecxz mov subl rol rcr (bad) (bad) (bad) inc leave xchg (bad) mov in sbb fadds and mov popf cmpsb adc (bad) decl inc cmp lret imul fnstcw jno dec ret (bad) lcall fdivrl mov push add outsb dec push clc or mov xor push fldl scas xchg inc and mov sub gs xlat (bad) (bad) ljmp dec nop sarb lods xchg mov les rcrb cmpsb outsb jle je not sub dec push gs xchg mov (bad) (bad) (bad) cli push dec sub or lea out jecxz adc jo and iret pop pop int mov loopne dec (bad) (bad) decl push and sbb hlt js inc xchg call push (bad) (bad) (bad) call test aad push in push push je mov (bad) cmp adc scas sarl xor cmc pop mov push dec xor std pop pop pop sub movsb (bad) (bad) (bad) (bad) call adc idivb into xor xor cli pop or shrb sbb das mov sub sahf cli ja decl nop jnp mov inc (bad) (bad) data16 inc cmc xor push adc cmpsb jbe xchg adc cwtl mov xor (bad) (bad) mov and cld ss mov xchg cmp xchg and (bad) incl lds mov pop xor add ljmp pop aad bound mov mov lcall push cmp mov and int3 mov dec mov ret xchg (bad) ljmp incl inc sbb lahf xchg cli dec jno and scas lods jns push out clc (bad) jmp jo aas dec sbb push aam cwtl sbb stc jp xchg fidivr mov hlt (bad) lcall pop outsl aam out push adc and jle pop (bad) (bad) (bad) decl xchg (bad) and sub sub aad sub ss dec aaa pop outsb leave push lret (bad) (bad) ljmp out das imul leave and and in and sti add (bad) aas int out iret iret es push push push mov rclb ds aad mov and es pop hlt (bad) pushl adc xor test jne clc xor sbb ljmp and add int cli mov jmp and call es cmp pop mov sar mov daa movsl sub sub inc std mov cmp (bad) adcb ljmp (bad) mov pop adc insb jb jo and jbe (bad) or mov inc sub fmulp mov aas inc dec xorl pushf sbb lahf push cld into test fstpl or jecxz push ljmp jne cmpsl sarb mov shl orb cmp push fcmovne out mov inc mov outsl or pop repnz leave fs mov in (bad) xor push fimul dec pop sub out cmpsb push sub loopne sub (bad) nop nop (bad) (bad) (bad) pushl sbb mov mov xor jle sub rcll imul fnstenv call test loop xlat mov mov xchg sbb cltd pushf (bad) (bad) (bad) call inc sub pusha mov aaa out test mov ret call cmp mov inc mov enter mov cli (bad) fnsave and movsl (bad) pop out insl fisub jb and jae mov in lods mov notb daa fnstenv (bad) (bad) (bad) mov cmp out mov push sbb jp pop js xchg push fdivr hlt test scas (bad) (bad) decl or int xchg adc jo stos (bad) jbe mov imul rclb gs (bad) (bad) pushl bound fistpl push (bad) jb jb xor mov xchg xor in dec fstpl out sbb (bad) call or push stos pop cmpsb mov stos push xor (bad) (bad) call jmp inc and add xchg push push dec test nop (bad) adc aad xlat fildl inc addr16 movsb int3 int3 ljmp add mov cmp adc daa pop cmp jae mov (bad) (bad) (bad) call movsl sub inc cmp sahf push jp pop cmp (bad) jmp cmp push lds pop xchg lahf stc adc xchg (bad) (bad) call add ljmp xlat lcall pop sub dec cmc add jg (bad) decl inc pushf push shll ljmp push (bad) fs push (bad) jo,pt in gs dec jg lea mov test int adc sbb push lds in dec es cmp sub fucomi pop lock (bad) ljmp sahf lahf enter push (bad) mov pop pop into stc push cmp (bad) pushl jl mov or nop adc jmp ja mov clc or es cld dec jo shrl (bad) call ja inc inc divb (bad) (bad) mov jbe popf mov push (bad) jmp call cs jne pop xchg pop xor (bad) decl (bad) daa test pop cwtl xchg push xor nop (bad) stc movsb aaa inc call xchg out shll pop cmpsw jbe and fisttp (bad) (bad) mov or jge dec push into jbe das ljmp inc (bad) repz sub call (bad) (bad) fcmovbe xor push mov arpl mov mov out mov decl faddl sbb xchg pusha (bad) xor sbb hlt pushl movd (bad) cld pop (bad) sbb lret ret jle adc and bound ret adc ret loop fisttpl mov loope dec cmp mov fbld inc adc (bad) lods push lcall mov mov push adc stc cli (bad) jg into xchg in (bad) data16 int3 ljmp inc cld out call inc ficom pop mov add mov push (bad) int3 or hlt fs mov pushl movsl outsl xchg insl into and aam sbb adc xchg js mov xchg stos loopne loop (bad) pop cli xor adc and scas (bad) lock mov cltd adc push push sbb out cld (bad) call and xchg out mov xchg mov fs fwait mov pop xlat mov pop mov jne jecxz xchg loop xchg lock adc inc push rcrb (bad) out mov mov mov pop into or cmp and inc lcall mov std sbb aam rcl mov rcl hlt adc mov add js inc lds orl jmp hlt (bad) ljmp gs and (bad) sbb loopne pop or pop push cmc in xor jmp (bad) (bad) decl fcomi and adc aad clc rcr pop cmp pop sub enter jo aas sbb sub pusha jp cmp decl push dec fidivl pop (bad) mov int3 xchg cs mov xchg jge in (bad) cmp enter pop pop sbb add pop (bad) sti mov jg test cmp pop jle inc rcrb mov jle adc xor push or cli das clc call dec dec sub inc mov aas (bad) ljmp mov je mov pop mov std (bad) decl mov pop fstpl cwtl insl ret mov out gs mov (bad) adc add icebp ret xor push add jmp cmp mov jae mov jp out and adc cmp int jo inc in add sti (bad) pushl push mov fidivrl lcall ficompl test or (bad) (bad) jl sbb fisubr cs dec insb cs mov fdivrl mov jecxz xchg push cmpsl sti jmp mov push push push das ljmp inc (bad) out test lock sbb insb pop cli (bad) (bad) (bad) jp rorl ret out inc lods testb out or stos shrl incl or adc add cs stc and mov lods adc pop cmc mov cmp (bad) out sbb jns jbe,pn mov (bad) fldcw repnz xor out pop push ss xor or add incl in pop dec ret out jnp push mov fs dec inc mov xchg es adc lcall in (bad) fucom aam scas rorl test aam clc aas xchg lds ljmp xor mov jns rol cmp andl mov push push (bad) ljmp xor cmpl (bad) (bad) (bad) decl (bad) adc sbb adc dec add xor leave rclb imul push and xor cld incl mov sbbb add sbb jmp jle adc lock sar lcall cmp xor sub addr16 dec mov loop mov (bad) (bad) jg cmp bound pop and (bad) outsl in fs jle cmp (bad) push lret xor popa call xor xchg xchg mov xchg and sbb (bad) repz mov and xor (bad) mov popa stos test aad pop cld add subl call es sbb jnp pop mov mov jp hlt test (bad) jmp mov movsl or stos jnp std xor and jmp sahf bound pop into popf pop jp xchg int (bad) jmp pop fsubs rclb test and stos xor sarl insb call mov mov fwait out jo inc lcall inc sub es loop inc aaa in outsb mov sti (bad) (bad) call dec and dec psubsb mov aaa mov sar ds mov (bad) (bad) decl flds add mov fwait sbb fstpt pushf adc insl pop push test add (bad) jns movsb iret pop xlat pop inc push out sub pop lret (bad) (bad) ljmp int sub dec shl xchg lret pop jecxz cltd test lret lret xor jmp and xor jb inc xor jmp fidivr jp loopne xor bound mov (bad) psllq mov (bad) in cmp or adc sbb andl into es push (bad) mov lret repz movsl loopne dec pop imul add (bad) jmp xor or (bad) or push add pop fnstcw pop inc and or (bad) jg push xor or mov adc cmp (bad) call (bad) int xchg movsl dec xor mov arpl lds fidivr dec adc (bad) (bad) (bad) ljmp out xchg pop xor sub imul and mov jecxz xor (bad) decl outsb cmpsb cmp inc sysexit fwait loop cmp ljmp iret add (bad) (bad) (bad) decl repnz pop hlt dec sahf xor jo mov call test cld (bad) decl xor lret xor insb or in stos pusha cmp xchg cmc mov pop push cmp pop xchg push test fild inc and daa les lods pushf sub lcall jge sahf cmpsb sub in xor (bad) (bad) jg ret lahf in ror pop insb shlb sub repz add out xchg std imul dec lahf jb xchg sti ret mov mov (bad) (bad) (bad) fcmovnu (bad) or jl mov lret int test push int3 sub sbb or daa and insl stos sbb sub ficom mov std pop xor cmpb aad xchg cmpsl add (bad) (bad) jmp fdivl push ret xchg mov xchg xor and push push jp or fild cld xchg mov test (bad) clc das xor adc outsl stos std ret ljmp push movsl aad (bad) (bad) jns mov cmc inc jae cmp jo dec push iret mov pop insl jg push hlt jp xchg (bad) jg and movsl adc jno mov (bad) (bad) (bad) call cmp jg mov loop xchg fsubr mov pop dec mov mov pop cld out inc test addr16 push jg mov pop push pop or pop pop decl jns sub add les push (bad) mov (bad) call rcrl fdivrl stos lret aad lret cmpsl ja sbb std mov xor ljmp decb (bad) cld dec cmpsl je inc add adc (bad) (bad) (bad) jmp lods loop stos jne jp stos enter cs mov mov dec cltd iret jmp fdivr push scas dec pop das inc lret pop ret pushf aas dec std inc dec add test xor lcall push pop sub cld es (bad) (bad) in lds fs mov add xchg jnp jae arpl push dec or lock out (bad) adcl xor xchg sub decl loopne cwtl hlt sahf mov xchg jle dec jecxz es fwait (bad) nop jo call call sub aad arpl call aaa sbb or out and adc (bad) and (bad) (bad) cmp add fwait repz add mov fcomps incl cmpsb inc inc das pusha push fwait add push fs mov (bad) mov pushl pusha sbb or lds mov jns aaa into pop fwait sbb add incl xlat incl stos jle dec cmpsl in and daa mov lcall incl adc stos sar movb repz in and (bad) (bad) mov (bad) mov jns mov xor pop ret sti or loopne adc clc mov out aam flds push (bad) fcomip ljmp xor aad arpl push int cs cmpsb sub cmp call daa push stc mov es repz mov (bad) ljmp add inc xor bound cs insl and es xchg pop pop mov (bad) mov adc jle mov mov (bad) (bad) decl les pop push lds or outsb mov aam lea mov pop (bad) (bad) decl in shll push outsl inc cmp fdivrs (bad) push xor add (bad) pushl out jnp test sub aaa inc xchg sub push pop lret jns ds (bad) (bad) incl push mov lcall pop dec mov movsl cmc in push mov (bad) (bad) call adc mov mov addr16 jmp ljmp cmp xchg jbe cmp rolb cmp mov ret and pop es sub dec (bad) ljmp xchg mov scas pop and fisubl dec into nop cmp stc mov sub xor sub ja jns test mov cwtl sub jns lret push cs pop xchg push ds into sub (bad) lcall and and push cmp adc and inc leave hlt fwait jmp mov and decl lock mov push mov inc xchg inc mov inc (bad) (bad) (bad) incl inc push fs rclb add cltd jg fidivrl sub jg incl xchg jl sarl leave sbb pop pop icebp pop sub jle fwait (bad) (bad) (bad) jmp daa lock and inc xchg cmp jp adc enter mov out data16 push (bad) pop in test cmc add pop push xchg jb push dec lods fimull lcall fs cmp call sbb jno adc out cli xchg outsb xlat test sbb mov adc aad add mov std icebp inc scas push push mov jg sub (bad) (bad) (bad) jp das idiv (bad) or daa (bad) movsl mov add ret inc push popa xor mov sbb cwtl movsb stos out data16 out (bad) (bad) (bad) jmp fs arpl jmp ffree mov out push popf mov lahf (bad) repz (bad) jg movsl lods lock sbb imul cmp inc rdrand sub xchg pop (bad) lcall insl mov mov mov mov dec push iret add xor jl cld jbe cltd movsb push push xchg jns or enter (bad) (bad) mov gs mov add mov jmp (bad) mov sahf mov out fwait dec scas inc lods pushf lahf (bad) cmpsb ja mov xchg pop jg lods (bad) mov sub aam xchg shr lret mov (bad) (bad) (bad) inc push pushf lret xor xchg cltd mov xchg inc jno mov das test jg cmp icebp adc push call lcall push scas mov pop imul insl dec dec (bad) jmp mov iret cli xchg inc inc mov sbb jg mov or push cld (bad) call mov out lods mov mov lock lock xchg std (bad) (bad) mov (bad) data16 pop test dec jnp and mov icebp fmuls cmpsb (bad) ljmp out add and mov rolb xchg push jo pusha or test int mov jb les addr16 cli mov stc xor mov jno cmp aas xlat cwtl fs imul shlb (bad) (bad) lcall mov enter fmull loope xchg je pop enter mov repnz (bad) lcall cwtl pushf jns cmp and jecxz lods hlt adc xchg js push mov mov fcomip pop sahf (bad) or shrb xor xor sarb sbb addr16 ljmp sbb lea aam les lods or mov imul mov cmp addr16 add adc (bad) (bad) (bad) incl ret inc mov mov imul mov xchg push pop lcall jno lret lds rcl (bad) (bad) incl inc testb gs nop int3 jge dec aad (bad) sbb mov fcomip (bad) jmp mov je bound and add insl or test icebp movsl aas (bad) insl out inc push inc outsl jnp (bad) (bad) (bad) (bad) jnp (bad) cmc iret pop sahf pop cmp in and repz or xchg jge jns out adc adc stos (bad) call in mov outsl and add or lret mov cld mov adc dec shlb jp push xchg pop subb cld lret leave (bad) decl mov into jp dec dec rcll xchg rorb (bad) (bad) (bad) pushl enter repnz pop inc ja dec mov paddsw add inc lahf in decl jbe push test (bad) cs lret pop imul or xor (bad) repnz mov test call jl movsl mov lcall (bad) fist daa stc imull sbb lea jmp movb mov (bad) push cld lcall pop cmpl mov mov lock (bad) incl pop sub int3 sbb ficompl stc js xchg insb in jmp (bad) jg shrb jne pushf pop cli mov jno or mov ror clc dec xlat lds xorb (bad) pushl aaa jae xlat daa popa sub sbb jnp lock adc sub nop das cmpsb js sub (bad) fsubrs jo data16 adc sub (bad) (bad) decl clc mov popf sbb mov pop inc jecxz mov pop xor cmc sub push cli arpl xor test (bad) (bad) (bad) (bad) mov adc ret les inc or (bad) pop or jecxz mov or xor mov dec or (bad) (bad) incl sub in stos notb and push cwtl xchg mov pop xlat rcl hlt ljmp jp adc imul leave mov inc rcr add scas add (bad) jmp outsb lret cmc and std dec adc stc das inc pop dec jmp (bad) (bad) (bad) mov cmpsl pop add push mov or out nop daa sub dec (bad) in adc mov stc es out add adc loop int3 clc (bad) (bad) (bad) ffree adcl push (bad) (bad) dec pop rcrl fdivl mov clc (bad) jg int bnd rcl inc aas mov (bad) fmull (bad) (bad) out fdivrl rcl call loope movsl or add pop adc or mov cmp cmp nop add fidivrl addb sbb mov inc mov and xchg pop pop xchg in iret insl or add lods ret daa pop pop cmovs out jmp push inc pop mov lock inc mov (bad) (bad) aas push sbb add dec mov push (bad) int mov rcl orl push imul scas iret aas push lds sub shrb lods mov (bad) incl mov xor mov jp mov mov sub mov mov mov call in adc fdivrs cmp cltd fnop push repnz (bad) mov xor jo jle cwtl mov add push add fidivrl inc ljmp out sub movsb es (bad) (bad) (bad) (bad) jmp enter repz jae pop icebp pushf je push add lahf lcall jb add jmp into pop (bad) push lret jo shr data16 repnz adc mov mov fisub shr (bad) (bad) lcall cmp (bad) sub jae ror jns push sar test test (bad) sar mov add sbb (bad) pop shrb dec inc in and xchg (bad) call mov xor out sub insl xchg mov jns pop mov nop test adc pop lock (bad) incl fnstsw pop insl jg arpl fidivrl add stc fs fwait (bad) fbstp pop xchg xorl or cmp test ljmp daa xor sub inc dec (bad) cmp (bad) jg call test xor sub dec sub push (bad) mov mov mov mov addr16 (bad) (bad) cmp lahf jb mov sbb int3 pop jecxz je pushf xor gs (bad) (bad) ljmp cmpl rorb sub pop add dec push or test jge negb jae aas outsb push out xor (bad) (bad) incl xchg pop dec jg fwait sbb sub (bad) lcall cmp cli pop popf jmp call scas jb jp cmp (bad) rol xchg icebp and out add (bad) (bad) call fildl cmp clc lods iret ficoml xor cli aas jne mov xchg mov xchg (bad) ljmp lcall outsl pop add mov (bad) (bad) decl sbb mov xor cmp mov insb jg cltd scas fwait push sub aam int3 icebp sarb (bad) ljmp push sarb sbb mov lea mov (bad) (bad) push (bad) mov sub sub push sbbb idivl aaa push (bad) (bad) aas pop cmp pop dec mov dec loope pusha insl xor (bad) decl xor sub push ret insb movsl aas mov adc popa js (bad) inc stc (bad) (bad) (bad) ds inc out dec fwait (bad) sub xor inc pusha dec mov add cs (bad) jmp and sub xchg clc test add out paddb (bad) pushl xchg push jmp je mov push in sub mov jp add (bad) call clc xchg test rcl movsb lods fdivrl cmc addr16 loop (bad) (bad) call cli dec rclb popf pop sub in sub in mov test decl push and fwait jecxz push sub pop cmp lahf sub aaa in (bad) (bad) (bad) ds pop and push gs lret mov mov xor cmp (bad) decl scas push lock push or xchg fstpl jno dec adc jg pushl mov mov aad xor xor (bad) and or push mov add je stc adc sub lret sbb xchg cmp mov lcall aam push es mov add mov push incl test sub jge iret jg scas inc pop push pushl or push and (bad) imul (bad) out xor adc inc cmp xlat (bad) ljmp scas or dec lock dec sub popa repnz (bad) pop ds incb sub mov dec adc push adc dec add nop sbb jnp pop sub mov clc jge xchg xchg cltd sbb mov push fnsave mov jmp pop mov jmp leave sti rorl pop addl xchg aas add xchg mov inc lods jg pushl movsl (bad) andl push dec sbb mov rcr sahf (bad) (bad) (bad) lcall ror pop push sbb mov fbstp dec (bad) movsb add jmp outsl pop sub pop mov mov sbb (bad) (bad) (bad) jmp mov (bad) pusha rclb loope push jno,pt fimul ret jp into (bad) idiv das stc jmp mov mov inc jno inc mov push cli lcall pop sbb push por or (bad) (bad) ljmp sahf in push test mov inc xchg inc aam xchg mov or add pop and xor (bad) (bad) jmp das dec pusha sti test int3 imul and dec push cltd (bad) rorl bound inc clc pushl int3 movsb jge inc push jns (bad) (bad) (bad) (bad) jl std rolb push pop mov mov (bad) fnsave cs pop jge mov lret mov jmp stc pop imul or lods cli incl mov into popf adc rol rorb inc ret ljmp sub (bad) mov daa popa sti fiaddl fwait inc data16 xor jne push decl out xor adc scas jg xor pop (bad) (bad) (bad) ljmp in adc inc arpl ljmp xchg mov insb pop sub movaps sti repz ja mov mov push loopne jg mov adc cmp fstl xchg imul insb mov xor lcall mov inc jmp pop lock jnp xor rcr adc ljmp aad and xchg mov jge (bad) (bad) inc sbb ja xor jecxz fadds cmp int3 out imul add decl jmp in cwtl sub inc push cmp icebp xchg jg movsl ljmp mov sbb dec in dec pop push lcall jp mov mov adc lret mov cmpl fnstcw sbb gs add in pop sbb (bad) (bad) (bad) incl pop mov jns outsb mov push clc mov cld xlat and fnstcw push aas mov test ret enter imul push out rcr arpl cld (bad) lcall jne nop jae dec pop enter mov cmp sbb add inc lcall sub cs data16 lret pushf adc les loope (bad) inc sbb fisttpl mov sahf insl fdivrs (bad) decl insl std mov pushf mov iret push cmpsb in (bad) shrb mov pushf out pusha push fxch outsl nop push clc mov scas test inc pop imull pop bound mov xlat clc mov mov (bad) ljmp add push push dec sub out shrb je cli pop stos add push jmp das ffree lahf xchg je mov mov add lea mov cmc ja push lahf xor mov hlt push sbb int3 fisttpll push and mov outsl cmp jae mov xchg aam out (bad) (bad) (bad) incl call adc xor cwtl mov mov push add fstpl fcomip and adc das test sbb (bad) pushl pop cmpsl mov leave mov rclb lods ret adc (bad) jns cmp (bad) (bad) ljmp lcall es push movsl and (bad) xchg push jbe inc (bad) jg clc xchg jmp aad fsts mov (bad) jne xchg mov (bad) (bad) jmp mov jmp (bad) pop fwait sub inc addr16 mov cmp cmc lret test push xor inc cmp lea popf pop je xlat sbb adc xchg inc cmpb lahf inc sahf dec icebp adc clc (bad) (bad) decl jg inc cld fsub (bad) jl aam jmp adc cmc xor (bad) ljmp sub jge inc and cmpsl add popa aas push test xor dec outsl lret les call decl xchg mov mov xchg sbb pop cld (bad) mov daa mov sbb out push pushf iret cmpxchg push mov jne pushf xchg cwtl inc imul bound mov pop cmp test ljmp inc xchg mov push (bad) data16 enter (bad) (bad) (bad) (bad) stc sbb sub mov pop xor mov xchg clc adc sub (bad) (bad) mov lea sbb (bad) mov lods cmp add pop cmc loope out fmul adc push rorl add ja xlat (bad) cmp (bad) sar dec adc (bad) lock std cmp push mov (bad) (bad) jg push mov inc loop sub (bad) adc (bad) mov jnp sub leave (bad) (bad) call fsub xchg mov add stos xchg push cli jg aas sbb imul aad rcr dec and inc (bad) incl inc dec (bad) ss test outsl or add cs add xor jl call (bad) ljmp mov aaa stos adc cs popf push ja roll (bad) fbstp test inc ret inc cld add xchg data16 pop xchg lcall icebp mov or scas paddw add mov fisubr pop pop mov or mov push arpl and enter fisttpll insb (bad) xor mov inc out (bad) (bad) (bad) jmp jge push out fimul repz lods (bad) push fwait (bad) cwtl add (bad) decl pop dec (bad) jb lcall stc xchg (bad) sbb adc xlat decl cmc sti push sahf mov cmp not dec test (bad) (bad) (bad) js lods aaa pusha (bad) loope xchg sub xor pop gs pop movsl test adc dec loop lcall pushl or push pop add sub lcall xchg sarb (bad) decl inc jp xchg (bad) add lods pop cmpsb cmpsl or subb nop pop xchg push out sub in pop outsb jg dec (bad) (bad) ljmp jo jne or cmp and stc xchg and push pushf repnz psubd jge (bad) lcall mov mov mov mov shll das inc sbb movsl push loope or (bad) sub (bad) (bad) (bad) decl mov mov xchg (bad) push sub jb cmpsl mov sbb decl adc ret jne ss or stos mov cs (bad) (bad) (bad) mov out fistpl mov std nop jne xorl cld push nop js cmp add xchg mov loope outsl mov sbb sub fnstcw mov and xor sti cltd pushf in loope mov dec lahf cmp mov js or dec cmovnp jno into aaa mov int3 cmp icebp mov add incl daa stos (bad) xlat mov imul push mov outsb flds mov in dec push add mov fbstp sbb hlt ret repz (bad) lcall or jecxz pop mov jle mov cltd fidiv adc leave pushf xchg out iret daa and shr in (bad) mov cli push jecxz dec pop fcmovb add rol fcomip (bad) aas stc mov push jo cmp or outsb ja (bad) lcall (bad) repz sub hlt data16 mov adc dec xor push (bad) (bad) (bad) pushl mov pusha bound aad or or pop cmp pop lret das int inc das stc jmp in jecxz adc adc cli loopne (bad) (bad) fbld ret mov cli xchg inc (bad) and mov mov sub lcall mov enter cmp cwtl push ja nop repnz xchg push sbb jg (bad) (bad) jns xor (bad) cmp cltd sbb (bad) incl cld jmp movsb inc in int data16 movsb add repnz and leave or call (bad) fwait sub sbb dec aad cmove push xchg pop lcall dec pop inc icebp sub jb and dec clc inc lcall cmp mov stos loopne or and movsl mov fildll mov daa sub shl (bad) (bad) ljmp pop push push mov adc push jmp icebp mov (bad) (bad) mov stos pop rorl lret jge xchg add sahf mov lds pop xchg movsb call push xchg dec loop ds pop (bad) (bad) (bad) ljmp adc rorl (bad) jbe in das mov sbb (bad) movsl sub sarl incl stc pushl jmp mov or cli and jmp popf out nop cmpsl test mov mov bound mov fs divb scas std (bad) jg jns popa mov sarl mov adc (bad) push outsl push mov aam sub scas clc mov (bad) cmpsb mov aas cs jmp (bad) jg add push xchg sti mov sub push push pop es in (bad) lcall (bad) sahf pop push iret cli inc xchg sahf mov mov mov (bad) (bad) push (bad) dec pop mov data16 imul sub sti bound pop jmp test xchg loop int3 mov xchg (bad) pop repnz in push xor push mov out cwtl mov xor cmp lods mov (bad) push mov dec adc lret arpl popf jno (bad) ljmp and in xchg mov ss in (bad) scas cld lods fsubl mov sub sub jmp sub inc inc mov lea imul push mov dec inc adc scas outsb or mov sar mov sbb scas push insl dec subl mov incl xor and mov mov stc stc mov add push into pop ret test (bad) (bad) mov fs adc clc add push rolb sbb addl pushl (bad) outsl lret fwait or pop mov iret and notb jae mov nop out sbb xchg and test fnsave (bad) (bad) (bad) decl mov sbb mov sub mov (bad) fwait mov mov inc incl bnd mov mov mov (bad) fcoml (bad) (bad) (bad) call inc sub repz rep clc ss sub inc cmpsb test in cmp xchg and fcomip cmp repnz mov andb lahf sbb add sarb imul repnz mov in jne dec cmp (bad) (bad) lcall jns pop stos mov and mov (bad) xchg loope in mov mov mov cwtl sbb (bad) (bad) aas add loope ror inc sub adc add incl mov ds lock pop pusha mov (bad) (bad) jmp xchg push push xor pop dec fisttp mov jecxz (bad) pushl xor xchg bound rcll loop sub cmc and movsb adc push scas dec sub cmc (bad) (bad) dec mov xlat pushf adc cmpsb jno (bad) enter jb aas imul stc sub lcall cmpsl mov int3 (bad) jbe rclb pop xchg loop pop and inc pop inc fidivl decl cmc sbb lock mov outsl les (bad) (bad) ljmp aaa bound jp (bad) mov stos stc int3 (bad) or aas addr16 rcrl (bad) loopne bnd xchg lret in jno inc xor push (bad) (bad) call ret loope out fistp mov (bad) sti pop movsl ja pusha jns mov cmc (bad) inc jne adc inc movsb and popa mov mov subl pop pop lea sahf cmp lret xor faddp nop pop xor daa (bad) lcall push scas (bad) mov cltd push adc sub jne lds stos adc xor pop shl add push popa push fsubl jbe cmpsb xor inc cli ds dec mov add (bad) (bad) (bad) cmp js in add cltd cli or sbb add cli das (bad) or mov cmp adc push xchg xor adc (bad) (bad) jmp faddl xor lret cmc xchg pop jl mov (bad) cmp fwait lahf fs ja (bad) popf inc mov pop jg test inc jge jp jle,pn (bad) (bad) decl fwait (bad) jmp aas xlat push jg int3 popf scas ljmp ja push stos jle lea dec mov sahf add push cld fild pop (bad) jo je dec or (bad) mov mov popf push pushf xor (bad) decl or mov out inc imul mov xchg aad data16 inc int3 cltd in mov cmp fcomip add or and inc add call cli mov movsb (bad) (bad) (bad) (bad) call jmp mov xor out xor sub fidivl (bad) (bad) decl xor add and sahf xor test and out cwtl cmpsb imul (bad) sub mov xor xor ret lret stos lock push xchg mov and sar push int3 xchg add push aaa jmp pop test adc out sbb pop xor dec clc (bad) ljmp imul arpl mov jmp cmc mov cmp pop push cwtl sbb outsl pop cld (bad) (bad) call (bad) insb clc dec in aad loope mov orb lcall (bad) call insb out xchg ja jg mov adc enter push into cld (bad) (bad) (bad) jp mov test ret ret (bad) xor jle mov movsb test (bad) xchg icebp mov enter cmp (bad) (bad) incl cs or ds mov out adc push add ljmp pop xor mov cmp shrl (bad) fidivl mov js xor scas xlat xor jge sti aaa lock movsb es (bad) (bad) pushl mov push es jbe imul inc and push mov mov out into (bad) popf adc sub or fidivr mov (bad) call inc shll rorl cmc movsb or popf pushf call dec (bad) paddsb movsb xchg or mov jae pop fdivl lcall xchg lcall (bad) add outsb inc arpl (bad) dec or (bad) (bad) fcomip dec lahf popa aas dec test dec adc outsb lahf mov sbb xchg iret pop jg push dec pushl fwait repnz xor mov fwait mov cwtl jl pop call xchg loop lret fst (bad) (bad) call stc push mov lcall sbb repnz popf stc pushf lea (bad) aad xchg push mov orb (bad) jg (bad) mov addl jnp inc pop mov out mov sbb jne (bad) icebp addl stos mov (bad) (bad) inc insl out pop lock dec icebp or stc or in lods cmp je lods lods pusha (bad) adc (bad) sub (bad) sub pushf fdivrp sub cmp pop pop sbb insl lods imul pushl mov icebp lock (bad) mov rorl dec mov push mov jle pshufw xchg mov xlat dec cld dec cli sub loop mov push inc pop bound sar in lcall icebp lret pop mov dec adc (bad) sarb out adc aaa scas jbe lcall imul sbb fs push or repz cld call in xchg cmp cltd (bad) xor and ljmp mov sbb pop or lds push les sub test jmp dec (bad) addr16 ss mov pop xchg stos inc sub rcl xchg (bad) (bad) jmp cmp xchg (bad) dec ss mov sbb dec adcl fisttpl jmp jmp and pop push cmpsl jmp pop dec sbb sbb into scas call mov (bad) incl int dec shrb pop xchg xchg cmp rorb hlt mov jg pop jmp sub stos jp push sahf das into cmp pop xor (bad) (bad) (bad) incl (bad) and std fcmovbe push xor dec push push jp ja pop (bad) and pusha (bad) jg ret in outsb or jl cmp in es xchg add cld decl (bad) popa mov inc rol add mov aaa dec pop and test jmp int scas lds cmp xor (bad) (bad) (bad) jmp jmp adc ljmp or mov fstps (bad) ljmp push ret popa xchg jl dec test popa loop imul (bad) out test dec push inc pushf ds lds leave sbb js outsl jnp mov lret test addl lcall xchg lahf iret fwait dec xor jnp movsb call cmp (bad) mov mov xchg sub lods mov imul add (bad) (bad) incl cmp sub dec inc fs call push sar adc stc xor test (bad) call dec leave mov or pop adc test mov push call (bad) adc stc jmp js xor imul pop and decb jnp mov cmp sub lcall xlat aaa inc cltd jp sub jmp mov mov push in stc (bad) (bad) (bad) mov in pop pop lahf push out xor dec adc push and movsb adc (bad) ljmp aad lcall cmc fidivr dec ss or stc (bad) (bad) (bad) cmp xor sub lret pop or jnp or mov fwait xchg mov cli (bad) incl iret push cmc ja stc insl dec dec popf mov outsl xchg push xor push sub (bad) (bad) (bad) out fimul sbb pop cmp push cwtl addr16 loope je call cli pop sub and push xor mov jg shlb cmpsb and mov (bad) (bad) jmp repnz cwtl pusha or xchg cmp and insl fcompl dec jbe lcall lods sub (bad) rcrb enter lahf dec pop mov jno movsl pushf jl aaa add mov (bad) lock int mov sbb cmpsb test arpl lock out push js lahf inc dec mov fcomi (bad) (bad) call jecxz inc push push mov xor jmp mov jo out popf out sar (bad) ljmp push out xchg mov adc out jns xor decl jmp ss loope inc popf adc inc insl add outsb jbe (bad) (bad) jmp mov inc sbb lret cmpsl sbb hlt outsl aam sub cmp (bad) (bad) decl jne out stos xor dec popw hlt jne movsl jb dec test (bad) (bad) call xor pop push pop ss xor sahf or adc mov inc jo push push (bad) sbb dec pop adc test sbb (bad) fistpll pop mov pop xchg js xchg lock or mov adc mov call or mov arpl cmp cwtl je push test (bad) (bad) incl jmp fs addb xor aaa mov repz push mov xor (bad) ljmp pop cld inc sti cmp ja mov (bad) lea push mov mov fisubr sti inc rolb lock (bad) pushl push hlt cmpsl lock (bad) mov cmpsb imul pop enter cmovl or or sahf cmpsb sub stos jle inc enter std ja sbb sub es (bad) cmpb out (bad) (bad) lcall (bad) fildl loop push inc xchg lahf mov jp (bad) (bad) cmp rorl inc cmc and (bad) out loopne xor pop repz lcall imul js mov sahf pop sti pusha xchg stos lret mov jle fcmovnbe jb (bad) push test adc adc fadd ljmp jae push ficoml int3 addb xor lret bound dec cmp rcll cltd loope adc push pop sti les adc test out push sbb mov (bad) inc data16 cmp add cmp add sbb fdivrl fisubl add xchg fwait sbb xor insb jo mov mov pop lcall add sbb outsb aas sub imull das jns (bad) (bad) (bad) fdivs mov rcrl mov mov (bad) ljmp lea testb into mov pusha inc sub (bad) (bad) ljmp ret mov popf pop es clc push les inc pop out cmp mov lret sub and sub outsb cmp mov (bad) push movsb loope std clc pop orb cld and xor cmpneqps or xchg mov pusha xchg hlt outsl cli pop and repnz out clc pushf incl add pop mov mov aaa adc dec (bad) (bad) ljmp pop jnp mov jp adc mov out lret mov (bad) call inc aad push insb popa pop pop loopne test sub xorb hlt inc push mov inc in fisubl fs jp fisubl inc cmpsl (bad) clc jg lret xor sti jp jo jmp (bad) (bad) jmp push fld pop xor orb jno mov jmp rcrb ret das stc (bad) inc mov ror notb (bad) mov push cmp icebp inc mov sub xchg (bad) inc jne dec mov pop outsl xor cli sbb adc iret mov adc ljmp out cmpsl pusha enter or nop jo adc std (bad) cmp std repnz insb (bad) jg or cs out sbb pop mov stc mov pop lods out cltd mov sub adc mov out xor xor push cld inc test insl jle cmp lret stos add sahf lahf push push (bad) incl jnp aaa or stos push mov fwait pop stc movsb inc mov dec adc xor sarl das push push imul enter pushf xchg bound (bad) (bad) (bad) jmp inc and (bad) xchg cs scas scas jbe jb pop lods cmpsb pop fnsave aaa (bad) mov mov ljmp stc inc pop test jecxz in sahf out push cltd shll call aas and cmpsl (bad) notl pushf (bad) push inc loop jecxz inc mov int3 xchg nop pop inc pop inc adc cmp jno push mov movsl jle je mov mov mov cmp in (bad) (bad) mov or dec imul sbb ret scas push add jne mov and dec jmp jnp push xchg xchg js (bad) call push sub mov (bad) mov in shr mov insl lcall sub jmp aas stc jo mov dec sahf movsb push idiv call test loopne and (bad) (bad) (bad) (bad) out addr16 mov scas push fcmovb mov clc mov iret je cwtl enter lea jne bound inc in movsl push lahf xchg pop lahf mov and or xchg pop scas inc and push (bad) jg in ljmp ljmp lds jp push int3 in mov rcrl mov jl or ret hlt mov mov mov push inc dec mov hlt sbb cmc sbbl lcall add imul (bad) and hlt pop ljmp (bad) sbb (bad) sub cmp aas or movsl bound out (bad) jg cmp ret or mov jle mov ds int3 sar decl fiaddl insl xor outsb orl cs hlt jmp dec test inc int3 daa (bad) (bad) (bad) call xchg adc fmulp andb xchg cltd cmp jmp pop push or push insb iret mov mov jo ljmp arpl (bad) (bad) out (bad) and sbb cmp mov ret mov (bad) (bad) (bad) pushl adc pop cli adc call icebp mov cmpsb test ljmp push test ret adc push (bad) mov (bad) jg pushl inc mov or add shll mov incl pushl xchg xchg (bad) icebp shlb insb dec mov (bad) ljmp mov push pop (bad) xor inc inc (bad) out imulb mov jp (bad) out and sar call call les (bad) call inc fnstsw rcrl and (bad) mov arpl (bad) (bad) mov fldenv xchg arpl push xchg push cmp call aad jae cmpsl (bad) call xchg in add xchg inc insl lds pop jecxz (bad) (bad) call popf repnz adc in add (bad) (bad) jns hlt sbb call cmp fistp inc test (bad) (bad) (bad) jg (bad) aad aaa shl jg pop popf sub (bad) jns aas gs bound push xchg (bad) (bad) pushl ss push mov jo cmpsb out subl jmp (bad) decl inc std pop insl cwtl cld icebp push aam xchg jmp ret sbb out adc jecxz xor iret jp nop test inc clc mov sub in ficomp inc loopne adc inc scas (bad) decl lock mov fldenv repnz popf int push and xchg orl xor jns out popa jle (bad) xor jnp or jne ljmp in adc mov dec add mov pop cwtl ret xchg xchg (bad) jmp mov out les jge (bad) jb scas jmp ljmp add std (bad) daa stos pop aas popf pop rorb (bad) (bad) (bad) call inc nop out mov jecxz js int jl push test and jecxz jg mov (bad) cmp mov xor ss out sub xchg sbb (bad) ljmp mov (bad) js (bad) (bad) mov test movsb pusha xor lcall jecxz (bad) (bad) pushl pop sub xchg mov adc cli or mov push lret imull (bad) lret sub (bad) cmp pop xchg fmul das xchg (bad) stos or call pushf mov mov es cmp xchg sub dec push testl (bad) aas (bad) xchg push movsl mov sub enter (bad) fstps lea pop dec xor (bad) (bad) jg and lcall das xlat xchg inc int3 fisttp sbbl push mov cmpsb dec adc mov (bad) data16 cwtl and (bad) (bad) (bad) js mov jecxz cmp mov push clc aaa jle mov pushf test aam xor and js and (bad) (bad) call cmovg sahf ret sbb (bad) int out stos clc xor add pop inc inc pop ret lret ret aaa jb inc jp repnz cmp inc test mov inc adc (bad) (bad) (bad) jg stos fdivs mov (bad) xor jl icebp add xchg (bad) jne (bad) xor arpl cmpsb (bad) (bad) incl stos mov loopne scas test xchg mov xchg pop pop dec loop (bad) jmp iret push scas insb cmp lret sbb ffree and push (bad) (bad) (bad) (bad) std dec fldl2e repz xchg in mov mov stos pushf popf into fwait lcall lcall cld rorb cmc xchg xchg mov aaa in mov add aaa cmpsl pushf jl xor (bad) (bad) incl add lret cmp sub xchg xchg sub xchg push scas mov (bad) fdivs scas inc sub (bad) sbb adc xor pop hlt (bad) jmp (bad) aaa fcmove or in push stc pop movsl (bad) popa inc xor inc jno loopne or (bad) out lret push xor stos out cmp out sbb decl (bad) cld and es adc (bad) hlt test rcrl mov xchg (bad) jmp pushl mov sub adc push inc dec cmc cmp imul push (bad) (bad) (bad) decl repz xor gs jg or sub cwtl lret mov add rorb loopne ret cmp push pmaddwd (bad) (bad) fildll sbb jge int3 mov xchg enter mov fnstsw dec bnd and pop fwait mov cmp (bad) in test enter mov aas push dec add decl mov addr16 gs addr16 (bad) jg insb sub lahf mov lock clc pop xchg sahf and outsl out adc push (bad) pushl mov or mov adc pushl sub sti leave cmpsb in pop sahf outsl loop aad sub adc ffreep jno pushl mov cld (bad) call jmp cmp dec fisttpll scas jae test shrb (bad) call sub pop (bad) adc loopne movsb ss jnp add jnp mov push dec (bad) (bad) decl mov xor xor or adc push stos pop test push outsb test repnz call xor clc mov ret (bad) jae xorb ljmp push push mov jmp add xchg outsb call push cmp cmp aaa dec clc push lods loopne rorb add add shl data16 lds lock xchg outsl jle fs dec jmp test das xor pop mov add adc mov pushf add push cmp ljmp gs pop and mov jecxz hlt daa les pushl ja or or shlb in inc (bad) sarb pop in inc shrb pop add cs (bad) jp sub mov inc or shll or mov xchg test (bad) pop cld or inc inc push negb jnp jnp cld subb jp ss (bad) mov clc (bad) push js inc xchg push lcall lcall push js cmp lds or insb dec add les and mov dec or add (bad) cmp fistpll pop xor dec xchg adc fsubs loop cmpsb insl fcomip (bad) lcall std in nop push mov call push or jns xchg adc in imul jae scas xor push mov cmp clc (bad) jg dec mov fdivs les rclb push xchg (bad) (bad) call lcall push lcall jmp das push mov jmp aas or push mov icebp fbstp push (bad) (bad) (bad) (bad) jmp jae mov pop jmp cltd lret (bad) jno js into jl mov mov ss leave (bad) decl adc fdivrs pop mov xchg push sub (bad) (bad) mov in xchg push xor and (bad) (bad) decl dec lcall adc lea pop xor mov dec shl (bad) (bad) (bad) mov pop das mov mov fidivrl je sub (bad) lcall jge cmpsl mov adc pop fisub jp or addr16 jne cli mov (bad) sti icebp (bad) scas pop scas loop sub enter pop pop jp int3 xchg push js popf std (bad) js into inc mov fs outsb and popf imul enter sub dec aad jno push inc mov (bad) lcall scas mov push dec and jo adc pop mov sbb xor cld (bad) incl sub pusha fxch and (bad) cmp sbb movsl pop mov and (bad) (bad) aas enter add pop jg mov in pop cmp sti maxps into popa xor (bad) dec push fcmovnbe push mov adc add cld stc pop test mov pop inc jl ja jecxz (bad) repz push and (bad) (bad) call dec and repz jp mov (bad) adc popa xor sub sub mov adc scas push mov (bad) (bad) jg mov pusha lock pop pop fdivl js repnz hlt (bad) (bad) mov aad mov add call leave data16 dec test (bad) (bad) incl adc je outsb sub mov (bad) pop jno jle xlat (bad) push test bnd mov xchg xchg fistpl cwtl adc loop stos cmp std ljmp xor mov aam dec lods pushl inc cmp or pop or ret lcall lcall mov sbb fistl push sti xor (bad) incl xchg dec mov stc cltd fistl lock fadd stos lods (bad) add mov or mov ret push call fwait popf pop rolb outsl mov push mov mov (bad) (bad) clc (bad) test mov mov mov nop daa out loopne lds push sahf (bad) sti (bad) mov dec cmp jns pop mov aad fmull cmpsb fwait gs (bad) lcall nop xchg clc roll nop arpl xor sbb cltd and inc out xchg pop adc call dec sbb jge jmp jl jl out inc inc fcompl arpl add xlat dec mov mov nop test icebp test ljmp xchg enterw sar (bad) jmp pop mov pop mov insl (bad) xchg xor dec mov jecxz fdivl mull jp std jns into inc sub cmp out in stc clc mov imul adc (bad) (bad) jmp mov jnp jno xchg sbb pop call ljmp ljmp adc das jo push and xlat aad pop std fimul jmp (bad) (bad) in inc and push out scas sub pop int3 cli adc pop jo out pop adc jg jp add pushl (bad) (bad) pop xor mov mov mov (bad) jg arpl insl cli mov in push and inc mov add clc incl jle aad cmpb mov jno (bad) (bad) pushl adc rorb insb and mov mov cli xchg movsb xor mov jg clc test gs pop repz imul pop lret xor lahf and jo imul ss stc push adc sub jecxz aad mov jbe sti dec add cmp lea out lea (bad) (bad) mov jns ds inc or lea lods add mov or xchg mov sahf (bad) mov aam je icebp mov cmp cltd (bad) lock mov roll xchg rcll aas xchg fsubrs xor js mov adc mov mov bswap cwtl fidivr pop repnz jmp aad pushf jae jecxz mov lods cmpsb lret aad out (bad) repz xchg fwait (bad) (bad) (bad) decl enter ja sti incb xor mov and pushl lea inc xchg (bad) loop clc jno stc pop clc out pop (bad) mov pop pop xchg mov int lea aaa cmp (bad) mov add jmp lcall test xor xor js in jg call xchg int3 or stos loopne ret lock hlt (bad) (bad) call xor (bad) (bad) cld ss test xchg sub pushl fisub in ljmp int cli jne push xor xor mov stos mov mov (bad) (bad) (bad) decl jmp pop imul shrb je mov pop pop xchg cmp movsb (bad) call sbb data16 add inc jl push shrb adc xor (bad) call jbe movsb dec or pop mov push flds xchg js aam je sub fisttpl in lds sbb lock pop push mov ds push pusha cmp sahf (bad) jo mov lret ret clc jecxz cmpsb xchg xchg incb push out aam int (bad) incl stc (bad) repnz add lea jg (bad) push mov or (bad) push or jl popf std mov aas xor inc dec lret hlt hlt or lock decl and xchg in mov pop inc cwtl add or pop or sub sbb mov xlat fisub shrl dec pop in add leave lods mov ljmp fidivr in test push jle jge rorb mov jle (bad) call test das add cmp in cwtl adc or ljmp outsb insl mov punpckhwd dec outsb leave xor (bad) (bad) ljmp pusha mov xchg out ljmp add mov pop fmuls jecxz push out in cld sar dec (bad) lods loope cwtl push mov (bad) sub popa mov jg mov (bad) xor stos push outsl lret mov sbb daa pop ret mov pop jbe das out jmp and inc xor movsl das push outsl dec mov sbb add mov rorb (bad) (bad) cli shl outsb test push lahf in jns xchg insl inc sub jno sbb xchg xchg dec cmp sbb push fldcw outsl ljmp imul sbb lret sbb fucomp jmp and or inc push pop mov stc mov mov ljmp (bad) incl mov (bad) call fiadd cmp (bad) (bad) decl sarl icebp stc xchg es fnsave jp pop jmp cltd movsb jo outsl mov dec (bad) (bad) ficompl dec repz ror xchg sbb push test aaa inc (bad) (bad) (bad) pushl push ljmp aad add fs or push and push mov lret (bad) testb xchg test pushf in jle or pop hlt (bad) call test cwtl sahf push stos mov pop iret inc or (bad) (bad) lcall lahf popa lahf fs hlt fisttpl cmp test mov mov fbld pop (bad) (bad) (bad) jmp sbb and mov lock xchg test (bad) (bad) pushl inc jmp jl jbe lds dec jge sub cmpsw dec add nop (bad) (bad) jmp xor jae psubusb xor push adc (bad) (bad) lcall ja mov rorl iret sub sti (bad) enter xchg loope push add sbb xchg sub (bad) call cwtl push sbb adc dec jo mov inc gs shll sbb mov and mov sarb and into andb pop mov mov fwait (bad) (bad) incl pop mov add cmp adc insb add or clc lds (bad) ljmp jbe cmp ds xchg jecxz,pt (bad) decl aaa mov push lods xor dec jb pop cmp xchg jnp (bad) (bad) decl cmpsb xchg sub (bad) std jge fs fidiv mov imul push mov jmp leave iret test fstl jbe hlt xor add daa jo inc ja (bad) (bad) (bad) mov jno pop sbb clc jne fst aas test lahf out cmpsl xchg jmp cmp (bad) xor add movsb std out repnz in gs (bad) (bad) ljmp sub aas pop scas in out cmp or inc mov call mov (bad) jg mov or pop xchg out push jmp sub (bad) sbb mov push push push xchg imulb insb ret or movsb shrb fsubl cld inc in (bad) cmp imul inc mov add pop fabs push sub lret xor iret lock cmc pushf jmp ret pop xchg int3 (bad) lcall pop xor adcl mov adc mov imul aad imul push (bad) or clc pushl subb incb pop xchg add xchg inc cli lock sbb scas (bad) dec popf adc push ljmp popa push mov std mov lret (bad) (bad) fildll sbb cltd fwait stos out lods lock push xor xor call (bad) movsb test std incl fisubl scas sub scas jmp xchg xchg ret (bad) inc jle mov movsb jle jne std dec fdivl in jmp (bad) clc push mov jg test lods add push xchg or jmp (bad) (bad) (bad) inc (bad) mov xchg adc add pushf (bad) xlat xchg xchg inc mov scas mov inc test xchg (bad) jp arpl xlat fidivl aaa mov cltd rorb cmpl xor jl add (bad) (bad) push pop test or xor xchg xchg add pop or loopne mov (bad) call sub (bad) xor jle jb shll jns fistpll hlt out fs dec pop ss cmp and add loop push (bad) mov je mov lcall fcompl jecxz xor (bad) push sbb aaa sbb sbb lret add and adc movsl jecxz in (bad) and mov ljmp mov xchg mov mov and mov call leave pop lret outsl jo mov cli xchg mov ret sub inc adcb (bad) (bad) (bad) mov aaa dec jo pop dec dec fcom jae mov fxch mov xor (bad) (bad) decl sarl les (bad) ret jp adc outsb pop sbb (bad) (bad) call int3 push adc pop pop mov fdivl and inc lods cmpsb mov roll sbb cmp dec lahf outsb xor jl jecxz clc (bad) in push je xchg cmpl rcrb push std std ja jmp loop add les sbb inc mov sbb call or xchg cmpsl mov enter outsb sbb out mov lea and mov jecxz aam das stc (bad) call add stos scas pop lds or and add call push aad int3 push loopne ret sbb into arpl fs (bad) incl movsb pop and dec popa bound mov and stos cmc add dec fcos pop test adc scas pop pushf das imul fidivrl jmp mov dec push dec xlat arpl aad addr16 dec hlt (bad) mov inc adcb mov sar pusha push lahf or or pop test outsb mov lcall pop stos mov mov popf xchg xor imul push and fnstsw and lods icebp js add notl (bad) (bad) ljmp push test roll cmp popa cmp imul bnd aad (bad) mov inc negb xchg (bad) jb mov dec pop insl inc loope bound adc jp or ret aam push (bad) mov (bad) (bad) ljmp popf inc getsec lret iret adc sbb mov imulb imul fs push inc std xchg pop lcall std mov jg (bad) mov xchg jg push add into mov pop je adc mov inc test pop (bad) outsl loopne mov jg adc inc int3 cmpsb pop or stos jg dec ret xchg (bad) (bad) jmp ret inc dec movsb ljmp fisttpl stos in nop inc and or push jle scas dec jne fcoms dec ja cmp test jne addr16 imul (bad) inc cmpsl pop add fbld std or daa ljmp decl add pop in dec push lcall sub incl cld xor xchg inc lret data16 pushf inc lahf mov jo sub fiaddl ljmp leave pop jecxz aad loopne outsl movsb (bad) adcb and add (bad) jmp sahf out aam mov xchg (bad) aas xlat push push aam inc (bad) (bad) fisttp sub bound icebp mov pop stos ss inc cmp jmp sarl dec int3 arpl push mov (bad) call mov xchg fwait ja push lods push (bad) insl mov (bad) rolb jb decl clc popf push inc sub xor aad sub (bad) jg or jbe lods push mov inc or dec xchg (bad) mov or xchg cmpsb mov jno cmp jp insb push dec xchg mov xor mov push inc xchg mov test or push push ret jne inc dec lcall (bad) mov push dec mov dec push sbb dec lods cmpsb outsl (bad) mov xor stos inc pop inc and jmp pop push fcmovb jne imul aas or stos jl clc (bad) fistp or dec cltd cmp stc insb xor (bad) mov mov mov scas insl aam xor cmpsl outsl (bad) fbld cld fistpll mov push and push daa jge sub and pop mov call adc sbb mov fidivl (bad) (bad) (bad) dec dec fs mov lret sub into xchg push push mov lods pop test out cmp and (bad) dec stos push mov push push fldt (bad) decl adc sbb cmp imul xor pop hlt popa jmp add icebp inc lods cwtl lret hlt das xor bnd sub dec (bad) jg sub test pop push jnp cmp xor (bad) (bad) call dec jne insl inc stos aam fidivr aad fstl je fsubs sbb fldt leave outsb add jbe or incl xchg push test and movsl mov (bad) incl mov xchg in jbe cmp jae inc mov push jmp nop adc push (bad) stc or adc test lods pusha popf pusha cmp mov push xor loop cmpsl dec pop mov dec pop and movsb sbb insb add push aam dec sub sub and daa pop (bad) (bad) lcall xchg sti and addr16 (bad) cmc arpl push sub (bad) inc xchg cmp (bad) (bad) (bad) mov gs and push addr16 fimull sahf fcompl fwait in (bad) lcall lret xchg cs jmp test xor xchg xchg cmp icebp fldenv das nop jge dec mov lcall scas add inc or lea or (bad) (bad) (bad) ljmp or sub mov sub xchg xor xor mov aad xchg or (bad) das call jns hlt push dec dec push or xchg mov decl adc ja dec mov xor daa (bad) (bad) (bad) (bad) mov enter jo cmp jecxz nop lcall cld fisubrl mov stc add xchg aad push inc insl sbb mov push mov jbe (bad) (bad) pushl sti outsb sbb push or xchg (bad) sub test mov jge int3 loop aaa jp sbb cs outsb sub and jo cmp (bad) lcall jmp jecxz ret popa gs jae cmp nop mov jne sub and mov jg hlt xchg jmp jne or ljmp lds mov rcl push (bad) dec mov scas cmc and out jmp fsubs lea daa cmp shrb xlat insl cld pop mov clc imul test cmp pushl mov ss and dec xchg pop ja into sti in push adc (bad) (bad) (bad) pop inc adcl mov or fdivl lcall lret jg fisubl (bad) addr16 insl dec fistpll add jnp lds jbe cmpsb jecxz sar decl orb cmp adc adc inc pop aam sbb in jne sbb test fmuls sbb xchg dec js (bad) (bad) jmp pop sub push fidivl rcrb cmpsb cmp mov sbb cmpsl dec pop dec cmp xchg pushl mov (bad) dec cmp xor leave dec cmp adc and (bad) (bad) incl lret cmp fmulp shrl adc mov lods (bad) fs pop push insb into fsubrl and dec and std and mov mov (bad) in xchg mov out shll add out enter xor (bad) (bad) (bad) inc out mov add jno xchg jne mov mov mov (bad) jns int3 mull adc push (bad) (bad) decl jmp ret (bad) jle dec sub cwtl xor mov (bad) xchg adc adc mov add xor bound push pop push mov xchg adc and popa mov push add sbb mov aad (bad) dec js add mov ds push inc cmp xor cmp (bad) (bad) aas jp pop and mov loopne stos shrb imul pushf enter xor rolb or xchg jae mov fisttpll outsb icebp mov repz lock inc daa int3 add ss ds inc mov dec lcall leave (bad) movsb cld xor add cwtl dec add in stos inc jl rcrl or ja cmp negl mov call adc cwtl dec pop mov inc pop inc not (bad) (bad) (bad) jg mov mov xor xlat sbb inc rcll jmp pusha leave cvtpi2ps (bad) ljmp xchg add insl scas pop repnz repnz lcall xor ret into fidiv mov pushl nop je movsb out and lock push mov les and xlat aam push and jecxz jg xchg icebp addl ficoml xor mov dec aam dec adc pop scas gs rclb (bad) (bad) (bad) jg xchg orb call aaa ret push mov jle loop cltd push leave (bad) (bad) pushl xchg sbbl (bad) mov repz cli imul lret (bad) (bad) (bad) aas jmp je push xor pop push outsb jg jmp out add or mov (bad) (bad) call (bad) mov je jl inc sbb mov sbb mov xor gs (bad) (bad) (bad) mov fsubl mov por mulb xchg push pop lods push mov call pop movsb loop cmp call dec hlt inc dec or (bad) (bad) (bad) (bad) cmp dec leave mov fwait hlt (bad) imulb push std mov daa mov pop aam repnz decl stos cmp dec in (bad) hlt jo int mov (bad) call jb das scas out subl push leave (bad) hlt in and fcmovbe push mov sbb (bad) cmp pop rcl sahf fmul xchg and mov (bad) (bad) decl rclb rep cmp cmp fidivl or sub ljmp pop cmp cltd inc dec xchg push xchg xchg shrb fs (bad) pushl mov mov pop cwtl adc pop (bad) (bad) (bad) (bad) (bad) fdivs shlb lods push inc jbe jnp inc popa cli cmp pop inc dec cld (bad) (bad) cmp adc pop add xor cltd and adc pop push push xchg pop ja pop mov fistpl or push repnz (bad) incl cmpsb jns mov lock and notl ss movsl shrl add (bad) mov or rcrb gs jo inc (bad) lcall add xor dec lea inc fstp int xchg cltd and and test repz es or call out dec lods cmpsl push cmp or xor popa dec aam mov push pop aas xor dec mov xor pop adcl repz pop adc push imul (bad) (bad) lcall xchg inc xorl ja adc in cmpsl sub imul xchg clc (bad) (bad) aas fs dec inc (bad) jp ljmp icebp loope inc cmp push incl scas iret (bad) inc xchg cmpsl adcl loope push hlt lods cltd inc es add (bad) decl jmp mov inc xor jecxz add xchg ljmp jmp lock shrl cmp fsubrp (bad) (bad) (bad) incl popf push lret insb xchg fwait popa jle stos mov jo dec repz cmp cld bound call dec fstl push stc lods pushf cmp xor mov in (bad) (bad) lcall mov into loopne dec (bad) or push dec cwtl xchg movsb jge popf cltd xchg mov cwtl (bad) add incl mov das test and sub mov sar out add push enter and jge sar mov (bad) (bad) (bad) decl ret jp or adc fldt or push jg add lret decl inc cmp xchg leave sahf popf and inc movsl pushw pop in sub inc or outsb stos add xchg iret cmpsb adc adc xor xchg and sub decl mov mov push or mov (bad) (bad) (bad) lcall adc mov add mov stc xchg sbb test decl lcall fisubl cmp inc pop mov or (bad) (bad) (bad) jmp nop loop movsl insl mov pushf push mov mov pop cmpl sbb xor (bad) jmp dec mov mov fnstsw and cld add (bad) (bad) ljmp jbe and pop arpl pop fcomps cmp rorl int pop adc in hlt lea add xchg je and sti in (bad) sar (bad) lcall mov cmp push call lret fidiv hlt mov stos cmp fs clc (bad) fldl pop pop icebp dec in pusha std and ljmp or xor jo mov adc lea jle dec mov pop cmp dec and adc js sbb lcall jno (bad) mov stos cmp incl test int outsb xor loopne push push adc xchg push push imul sub ja mov xor frstor and dec gs icebp enter incl xor or sbb in mov mov sub cmc cmp test sub adc cmc mov insl or lock jmp (bad) (bad) pushl fwait ret stos push jbe faddl push (bad) jb pop mov outsl outsb cmpsb sbb call test cmp clc ljmp (bad) call test imul mov (bad) (bad) call fs das sarb mov and push ja cld jb cli shrl mov imul sub pusha pop int (bad) (bad) (bad) jmp nop lahf or and movsb pop xor pop adc pop xlat or (bad) (bad) push bound adc ja incl out and mov or add push xchg add (bad) (bad) call sub lock mov sbb xchg sbb aas push (bad) (bad) (bad) dec push jg mov dec data16 mov or (bad) xor ljmp push (bad) (bad) decl jb ret jp lahf (bad) (bad) or sub test (bad) (bad) call mov loopne (bad) orl mov outsl adc xchg fisubl and decl jl icebp push fiadd out out push mov dec aad xchg sub mov addr16 fmuls xorl call aam push out jb out adc mov pop ss (bad) (bad) ljmp xchg flds out ret nop in pop mov fldt (bad) scas pop cmp pop add cmp xchg or push mov or int (bad) call (bad) xor cld fbstp inc repnz inc imul das cmp xchg mov (bad) (bad) lcall rorl jne push dec adc outsl leave cmp jg adc sub jb mov pop mov push inc and adc insl or sub insl cmpsl cld test ljmp hlt rep in cltd cmc mov pop sarl repnz incl mov test adc shll mov push std (bad) (bad) jmp int3 jecxz xchg movsl repz pushf imul push push test mov movsb shr sbb ljmp mov outsl pop cmp sub cmpsl (bad) (bad) (bad) lcall sub lret cmp mov lahf insb xor xadd (bad) dec inc inc pushl ljmp out aaa or test subl sub (bad) (bad) decl jo jle es rclb pop adc jb dec pop in cmp xchg sub adc pop hlt sub popa xor pop cvtps2pd xchg rclb (bad) (bad) jmp jge js mov jg lock xor xchg and mov mov cld (bad) (bad) (bad) fildll fmull lret mov pop jmp jl shr je xchg xchg (bad) rorl pushf (bad) (bad) call test xor in and fs (bad) stc aam lds or (bad) outsb or (bad) in sti ljmp jae mov jmp mov (bad) (bad) decl ret add xchg lods mov dec sub scas and (bad) (bad) (bad) lcall dec mov sar cmp (bad) mov (bad) fld bound jecxz xchg push adc ja (bad) (bad) decl rcll stos test sub cld mov add dec jmp push adc jbe mov int add cmp in movsl mov xor ljmp jg test aam insb cwtl scas in mov mov (bad) (bad) jmp lret mov push rolb pop imul cmp movsb fimull sub dec dec clc sub inc mov bound rorb lcall add out jbe (bad) dec mov mov mov push mov lock inc clc mov ficomp and add jge fucomip daa notl inc push in popa outsl jb inc sbb cli incb in fsubl inc sbb daa (bad) loop xor inc (bad) cwtl int xor rcll lock jg sahf add inc nop cli aaa jg or dec std (bad) (bad) call push xchg mov xchg fsubp inc and iret adc sahf xor lods lcall cmp xor adc rclb (bad) (bad) lcall sbb xchg sbb dec rolb and cmp or jecxz sar fcoml add mov mov add cld (bad) incl and mov push (bad) sahf mov stos jo (bad) pushl mov or aaa cwtl jbe aam push push cmp sub into fiadd sarl (bad) or push inc or mov mov (bad) (bad) (bad) (bad) jnp jge cli pusha push cmp push mov adc dec push jge ljmp stc inc jmp jne push adc cmp push cltd dec mov fnstenv (bad) (bad) ljmp or push data16 popf push and xor int3 incl mov push pop mov push aaa dec add cld mov movsb repnz std pushl mov daa (bad) test bound decl inc setae arpl cmp add mov mov (bad) call cmpsb mov pop test mov push in lds ret push out (bad) (bad) ljmp clc repnz loope and pop std idivl addr16 aad cmpsb test andb stos (bad) int incb cmp lods cmp ret hlt xor inc cmpsl mov inc jmp inc sbb cmp in (bad) (bad) lcall mov es or repnz cs loope cmp lcall test loopne jg xlat and test in movsb jnp outsb adcb push fldl or out bound pop pop cli cli xchg pushf push loopne imul fsub mov mov ret mov fldcw out lcall (bad) fidivrl xchg repz nop popf add lods (bad) mov mov cwtl mov and into xor cmpb xor mov outsl adc adc daa lret fnsave and movsl (bad) (bad) decl ds add call adc sbb or cmp xchg stc (bad) lods imul ss ds cmpsb xor in je loopne aad in lea inc mov aas movsb xor xchg cmp repnz pushl lcall xor movlps push (bad) (bad) (bad) call mov xchg jb das xchg pusha xchg sbb push pop xor inc fcompl (bad) ljmp ljmp mov pop push loopne arpl cmp ljmp mov in push lret shrl cli jl (bad) (bad) (bad) jg in rcr aad into add int push scas adc xchg aaa repz mov sub ljmp in loope adc (bad) pop fimull sbb (bad) (bad) lcall push das inc xchg andl cmpsl stc stos js out and sbb adc jns jns imul (bad) std jle inc add push lods xor (bad) (bad) (bad) fisttp pop pop popa insl cmp stc mov fst iret pop idivl stos add nop clc das shlb fisubl cltd mov scas and aam les push ret sti dec faddl xchg mov (bad) lcall jb addb xor xlat xor into xchg sub xor (bad) (bad) ljmp lds adc loope (bad) mov add inc sbb mov call std cmpb call mov in xchg mov pop adc lcall sub push jle mov fcompl jbe push enter (bad) decl mov and cli xor lcall or pop xor fistpll and mov (bad) (bad) incl lret push dec test add xchg xor shlb and xor (bad) incl cld mov adc loop jmp lods out add aas fstpl ljmp loop lock pop lret mov xor jmp lret out mov xor jne hlt mov loope fstps (bad) xchg popa sbb std mov push adc adc icebp stc cmp xchg (bad) (bad) (bad) fnop push (bad) lea lock pop push call (bad) dec imul test inc test sbb mov lahf mov fisubl scas lahf xor push adc rol rcrl loope mov scas jnp mov (bad) fmuls cmp inc pusha mov dec sbbl xor mov adc je test (bad) (bad) jmp (bad) jecxz fnsave test mov pop ret push outsb fwait xchg xchg xchg (bad) (bad) ljmp icebp xlat pop inc pop fstps pop pop mov pop inc cmp xchg pop out pop sar (bad) jmp jmp std ret rcrl fcmovnu outsl mov inc pop faddl or lods popa mov cmpsl xor (bad) jmp adc jmp mulb cs jmp gs (bad) incl mov (bad) repz dec jmp sbb and push jmp (bad) push scas ja wrmsr clc (bad) (bad) call sub cmpsl mov mov push rclb (bad) (bad) (bad) jmp loopne lds bound cli ffree and into inc jns dec sbb and cld decl enter cmc fildl xchg or or (bad) incl adc xchg cmp dec pop push sub pushf out js push xchg xchg xlat sub ljmp ds sbbl mov idiv (bad) (bad) jmp push xchg mov dec dec mov add out adcl jns fisttp dec jmp xchg or sub pushf imul inc rorb cmpsl xchg negb mov mov mov jg std sub add repz xchg xlat movsb mov in jge stos hlt in adc (bad) decl frstor pusha loope dec dec inc lcall sbb scas test sbb sbb xchg or jnp cmpsl adc imul (bad) push xchg (bad) (bad) call enter leave in mov or mull lcall jmp pop xchg dec mov push dec (bad) pop push out scas (bad) xor and adc pop cmp icebp pushl pop and test fistl push adc push jb das ficomp into push test (bad) incl sbb dec insb (bad) fwait push push loop lret rorb rcrb mov mov pop or sahf pop and (bad) pushl pop or insb mov ljmp (bad) call cwtl pusha push rcl mov out xchg roll scas out cmpsl insb and (bad) mov decl jg pop out ret push push mov mov (bad) call cld push pop mov mov or jg or dec sub pop lret lea sbb clc (bad) (bad) dec mov and test xor add xor mov push pop lret jmp stc sbb pop lea cli push nop lcall lcall inc cmpsl mov xor jmp sahf icebp cmc movsb iret sbb (bad) add (bad) call mov insb xchg aam lods jl std jg and sub (bad) (bad) decl ficom es es inc data16 je dec loopne xchg out adc (bad) fiaddl int mov xchg sub pop mov (bad) (bad) (bad) call ds dec dec pop sahf pusha ds dec mov (bad) pop or inc in add (bad) mov fucomi xchg call dec jmp rcl push inc mov and adc mov jg fs mov aaa pop inc pop mov or jno cmp orl lret pop fnstenv cmp (bad) (bad) (bad) ljmp (bad) decb cmp adc aas addr16 shrl xor sub push out cltd dec sbb xchg push push mov cmp inc and (bad) (bad) dec lahf sub test iret jg or jno xorl xchg pushf mov test (bad) mov inc mov inc loopnew pop lock ljmp pushf push ds push (bad) pop (bad) lcall and mov and cld and lods adc loopne inc ljmp dec jae sbbb das rcl (bad) jg inc repz setns mov xor ja push hlt sub xchg and xchg test xchg push fwait movsb push inc mov sub movsl and addr16 (bad) sbb cmc mov fsubs xlat cmp dec int or jge xchg movsb out dec int mov inc xlat add pushf mov (bad) jb in dec lret call lcall out push pop dec stos dec and push mov pop and hlt (bad) (bad) dec ljmp sub movsl mov out test dec scas push inc out out add sub xor lcall cmp mov sbb cmp loop cmpsb (bad) mov sub adc sub les icebp test (bad) sahf movsb js movsb outsl xlat movsb decl (bad) jb fidivr add mov sbb jle or cli push out jnp sarl (bad) (bad) decl xor fidivrl jl scas iret ja push inc aad shll fistpll (bad) lcall (bad) pop pop rorb mulb mov sub pop cmp add shrb mov mov shrl sahf xchg (bad) mov into xor lcall push cmpsb sub (bad) (bad) (bad) aas dec movsb xor lods add out cmc pop loopne mov or je inc xlat in (bad) pushl fcmovnb jne nop pop cli leave sub inc pushf and subb (bad) mov sbb lahf scas rorl pop push cwtl lds (bad) jg lods inc lret arpl in std sub fnsave out dec push cmpsb push negb nopl sti shrl adc test xchg mov xchg (bad) adc (bad) (bad) (bad) decl jno sbb adc add fisubl push out and mov inc mov mov and push mov (bad) (bad) jg xchg adc mov ljmp xchg mov popa add enter (bad) (bad) jmp ficoml dec cmp xor sbb mov popa mov or sti adc into orb push bound call ljmp (bad) idiv mov enter aam lahf sub mov or push xor add sar (bad) call enter les idivl pop jp movsb dec ficoml loope sti dec repnz jmp iret mov mulb (bad) fcompl mov lcall cmpsl mov sbb xchg pop stos cmp sub loopne stos pop (bad) xchg arpl call jmp sbb mov mov sbb add add (bad) (bad) (bad) (bad) call std sarb shr jmp sbb adc int3 xchg adc pop (bad) loopne push xchg or jmp imul adc and jns (bad) (bad) jg mov jns mov push bound push push or mov decl (bad) iret test xchg aas and mov jne scas sar decl fisttpll sbbl adc inc dec (bad) (bad) lcall (bad) cltd inc out loopne cmpsb mov push std out or sub fs lods jnp (bad) (bad) lcall add sarl (bad) xor jecxz test add imul popa imul push (bad) (bad) lcall sti sbb push push mov imul repnz sbb cli repnz (bad) lcall push and cli xchg add pop cltd ss jmp inc xor push js (bad) incl add push (bad) sbb lods cmp cmp fdiv sbbb (bad) ficomp cmp lds lret push repnz push inc addb fcos dec test movzbl pop push movsb add (bad) (bad) (bad) pushl adc in jmp adcl dec scas push fstpl xlat jp add (bad) push mov cli mov ss jb and jg gs mov add mov test (bad) (bad) (bad) (bad) in notl jmp (bad) mov hlt xor out mov hlt daa scas mov adc or cs jne adc (bad) xor mov orl lcall (bad) dec (bad) rcrl icebp sub and cli rcll mov (bad) mov (bad) in xor xor mov mov loope (bad) jmp dec fisttp inc push addb ss pusha xchg (bad) mov loopne clc jle test les xor test idiv pop mov insl cmc mov scas xchg or push add (bad) (bad) mov data16 mov xor jnp xchg pop lods fidivl mov (bad) mov jb hlt push push pop aam sbb xor pop test adc leave mov add sbb ss mull aas adc (bad) dec inc mov push out outsl ds mov xchg lcall pop fidivr sub sahf or shr in leave mov pop push es lea jmp in (bad) pushl jle into xchg test sbb es mov sbb into mov lock pop mov xor sbb xchg clc or add dec fadds fwait jo out stc into jo add jb mov lock xor push mov out outsb (bad) mov call xchg mov mov jl mov sbb mov hlt pushf xchg xor push stos ljmp dec cmp (bad) mov push fsubl cmp jbe les decl sub inc cli mov cwtl les and push test jns repnz (bad) lcall insl jns aaa dec outsb scas xlat xor int3 and add mov shll iret (bad) call and xchg inc mov sbb cmpl (bad) ljmp clc rol pop xchg cld cmp hlt add imul cmpsl (bad) push lcall (bad) in cmc (bad) icebp dec icebp mov insb sti and cmpb (bad) xor mov fstl jp push dec or push jb and lcall jo or fwait mov or (bad) (bad) (bad) jg test gs daa lea call jmp mov cmp in mov xor xchg jae (bad) (bad) incl stos add inc mov lds cmp mov cld inc leave fs and (bad) ljmp sbb movsb aad sub andb (bad) (bad) decl je dec jg movsb adc mov adc push (bad) xchg dec lods jp arpl call cld mov fldl rorl pop pop movsl ds popf (bad) (bad) (bad) jmp nop pushf or notb mov add in mov mov inc dec cmp incl fmull (bad) ljmp fs xchg stos test mov (bad) ljmp fwait std subl fsubs mov dec jge pop popa repnz mov adc and jg mov push ljmp xchg push sub (bad) (bad) jmp mov adc mov push cmp xor sbb pusha pop sbb jae call sub ret movsb cmp stos mov push adc jmp rcrb icebp and adc or cli dec neg (bad) cli andb mov imul scas clc pop in add xchg mov mov shr sbb data16 adc outsl fiadd (bad) (bad) (bad) (bad) jmp cld mov sbb mov mov test xchg and inc xlat xchg insb ljmp and jns fist or loopne add (bad) call jecxz push pop fstpt cltd sbb scas xor jl dec mov pop cmc mov dec cwtl push sub dec je in cmp (bad) (bad) (bad) mov mov shl xchg es pop outsb lods dec (bad) mov icebp dec mov mov sar and cmp jbe push mov mov idivb imul cmp xor (bad) mov or inc movsb and (bad) (bad) decl lahf jle mov fdivrl jp (bad) js (bad) jne inc xor push scas mov mov (bad) ljmp mov dec inc fnstcw inc pop repz xchg pop mov (bad) sti cmp mov jns or adc lcall pop jmp test fildll dec arpl add loopne (bad) (bad) call inc mov xor mov xor inc dec dec push test push std not cltd test popa mov popa pop jnp or (bad) mov xlat xor cld or cmc xchg jns sbb dec (bad) decl loopne inc mov loop into lock (bad) sub mov clc (bad) jmp dec push cmpsl cs in xor pushf adc aaa sbb cmpsb (bad) (bad) (bad) mov insb in mov iret xor aad mov (bad) ljmp mov pop fimull mov cs jbe xchg jle xchg imul inc ljmp xchg pushf jo jmp adc xor loop (bad) test leave mov mov jnp lret jmp mov pop nop sbb pop les mov (bad) (bad) incl jmp rolb inc (bad) xchg cmc add aaa pop push and ret rorl (bad) repnz (bad) (bad) (bad) jg imul dec ljmp inc loopne or enter lock decl scas divl daa aas adc ret in jle cmp js jmp sbb inc icebp xor out add adc sub (bad) (bad) incl push mov mov call mov jae arpl jle clc scas int xchg cld dec or mov (bad) (bad) (bad) decl pusha jp mov mov cltd hlt outsb into inc mov sbb in mov add into bound xchg out addr16 jmp or scas mov pop or (bad) (bad) (bad) call data16 mov call fsubrs ds aad adc out ljmp stc lcall mov xlat mov subl (bad) (bad) (bad) in cmp jecxz mov clc pop loope out cld aad popf daa inc les daa pusha scas jecxz add popf push ficomp test enter stos cmp mov fimull cld fs cmp rcll js sub (bad) (bad) xor (bad) decl idivb push xor icebp add ret ficoml mov ja and inc ja decb iret sub cmpsl push mov add xchg inc mov cmpsl std push xor (bad) lcall (bad) sbb data16 aas js push add psubw scas daa hlt (bad) jg mov es mov rdmsr repnz (bad) (bad) incl (bad) xor xchg add and fisubrl mov mov rcrb je mov decl cmp enter jb out push sub xor dec jg mov imul (bad) pushl pop cmpsb (bad) dec xchg cmp push and (bad) rcrb xchg icebp sub (bad) cmp pop jg in push dec sti icebp cmc pop push repnz (bad) jg ss adc or push scas xor dec (bad) int (bad) jg adc mov mov shrb mov dec in mov xchg jl and stc mov in add adc andl or xchg xchg and ja or outsl jg push jno sub les jge decl incl mov add outsb lods pop in fldenv incl xchg pop (bad) (bad) (bad) (bad) pushl movsw bound pop push add lds push leave fsubr jae lcall ljmp push neg jmp sbb imul lahf push (bad) (bad) (bad) call cwtl dec iret sahf fdiv or pop enter call lea mov in pop in aad pop cmpsb pop cld rcrb cmp loop jp (bad) lcall clc aam add sub mov mov sbb mov test or xchg cld stos (bad) lcall (bad) xor xor adc mov or sbb gs adc ret ja fld es lcall or xchg xor aad rorl sbb sarl sub mov pop jge fisttpl mov movsl mov rcrl mov lcall xor and jns (bad) sbb mov divb fwait dec mov dec movsl mov icebp cltd inc and incl out mov lret jl pusha jae ljmp jg jo sbb xchg xor jno mov ljmp outsl push jmp aam cmpsb mov shrl xchg xchg subl test mov jne jno leave cmp inc shrl (bad) test xchg pop mov bound xchg jl dec cmpsb lds sbb jb cs dec dec adc jg cmovnp dec into mov (bad) mov adc jle mov ljmp mov adc mov aam repz mov repz lods cmp pushl jno fildl dec pop cmpsl adc mov (bad) (bad) (bad) call mov mov rorb pop sbb stos or inc in xchg jmp jbe mov cwtl imul xchg popa sbb daa test (bad) (bad) ljmp out jo lret fldt cmpsb dec arpl inc sbb inc fiaddl aam inc andl test adc sahf mov pop cmpsl sub mov inc inc gs add arpl pop mov cmp xor jno push fucomi mov (bad) add xor sub hlt sub test std ljmp add adc pop jne push push stc sbb cli int shrb or inc call (bad) and rcrb sub mov inc rolb stos and and sub adc nop push cltd cmp (bad) (bad) (bad) jg loop and xchg xor dec movsb xor push aad jne mov cwtl push xor (bad) decl add pop (bad) xor mov movsb inc data16 ja xor (bad) jmp insb or sub xor mov xchg addr16 (bad) or lds sbb cmp lock push stos add pushf mov and cld (bad) (bad) call lret adc jmp pop popf pushf fsubrl mov jno cltd or sub add ja (bad) mov xchg mov (bad) (bad) pushl popa loope sub aam inc in ljmp stos icebp (bad) (bad) lcall imul outsl mov les and pop movsl jp (bad) (bad) lcall fldt enter rorb and pushl jge out jno xor cmp adc ds (bad) jmp decb xchg mov fisubrl insb (bad) sub jmp mov out jp sti cs add inc sbb pop and jmp movsb das stos mov mov push rclb aam sub cmpsb jecxz out cli push xchg cmp mov push cld push popa mov (bad) fcomip mov adc pop add add dec stc cmp add lcall or roll xor inc cli (bad) incl gs iret push out mov (bad) fdivs (bad) (bad) mov clc lcall jne cmp dec xor inc mov aaa cmp mov (bad) aas jo test pop fwait add ljmp xchg out hlt into xchg int3 test inc xorl lret ss (bad) (bad) jmp es jo dec xchg jecxz pop movsl push xlat test imul ret mov (bad) icebp jae pop (bad) out insl sub bound ss jbe pop sub mov dec dec lea adc sbb movsl sysexit jecxz jmp (bad) (bad) (bad) call lret clc aas adc add fisttp inc stos push pop lods aad cmp (bad) js aas fstps js out orl xchg fwait (bad) clc (bad) (bad) lcall icebp popa sahf enter int3 (bad) cmpsb fwait adc int (bad) ljmp hlt out pop (bad) pushl loop data16 sbb mov out sarl outsb ljmp loope push aad fs and (bad) (bad) (bad) pushl pop out xchg cmc jbe dec mov adc xchg jmp push movsl inc mov (bad) out push popf inc lret inc das js cltd decb jl aaa sar (bad) (bad) fucomp add add and push add fs lcall mov push inc sub stos add xor sbb (bad) (bad) (bad) pushl mov mov mov fsubrp sub fwait pop xchg dec sbb dec lds cld (bad) fstpl (bad) or sub fcmovu fldt xchg (bad) call je add iret xor fs int3 mov sub and (bad) (bad) (bad) incl hlt ret jbe push jg or (bad) push push xchg loopne lock sbb inc (bad) mov mov les in and test (bad) fcomip cmp stos push mov lock insl push andl pop insb roll roll icebp frstor sub ja jo loope xor (bad) (bad) jp or mov mov sub in xor outsb mov or dec (bad) (bad) ljmp arpl adc pop cmpsl (bad) cmpsb dec mov fdivrl mov shll and scas inc and cltd shr (bad) mov or or (bad) lock and (bad) ljmp lds push test mov sahf test mov nop add (bad) (bad) pushl mov push mov jecxz jmp adc pop adc sbb rorb xchg adc (bad) stos xchg in hlt rcll push repz les mov mov adc icebp mov jg insl jl fildl ds add (bad) cld pop xchg hlt scas std decl add add test nop push dec lcall dec lret xor add aad add fcomip (bad) fcomps negb scas das data16 loop or push push jb ds das rcll popf ret push (bad) jg rclb (bad) cmp mov out pop loopne pop lcall call push mov scas mov test pop int fildll add mov xchg mov dec inc cmp adc outsl std das enter add loopne dec rcrb dec ljmp ljmp mov dec adc shlw fwait inc dec ret and mov push rcrl lcall dec mov movsb sti jge roll jp or decl lea pop adc (bad) (bad) (bad) jg xor sub dec push and lods inc mov cld jecxz add lcall or ja cmpsb (bad) or scas lret fisubr mov incl sbb cmc (bad) pop mov imul mov jo clc (bad) in fs jmp test inc xchg cli in call (bad) push sub stos arpl scas sub ljmp adc incl dec cmp push insb cli arpl imul push jo rcl sbb sbb xchg cmp (bad) call and jae sbb mov mov das add es add lds ljmp nop dec (bad) (bad) pushl cmp jno outsb aaa hlt push cmpsb dec out daa pop push push lock (bad) incl push fimul cmovnp xor dec mov inc xlat fwait mov pop (bad) (bad) decl fsubr enterw subb inc sbb gs cmp jle push mov (bad) jg or nop (bad) mov movsl (bad) (bad) (bad) call icebp xchg push dec mov out sub mov mov jbe add inc inc loopne or dec sbb xor pushf adc mov (bad) ljmp jo enter dec and hlt jb cmc mov adc jae addr16 (bad) (bad) inc aad xchg inc rol pop adc mov fs mov in lret cltd (bad) (bad) ljmp inc mov jle inc add rcr imulb or cmp ljmp lock stc sbb xchg lret imul push cmpsb fs jg (bad) mov out push mov fnstsw mov add sub (bad) lcall arpl add rclb mov cmp loop leave rcrl jo or insb xor adc (bad) ljmp inc xchg dec addb inc cmp fpatan or adc lcall ljmp jne lahf mov sub push mov mov movsl dec and std (bad) decl ja xor dec mov inc mov faddl push sahf mov repz mov popa adc negl insb sbb outsl mov aam stos pop lods mov jmp addr16 fwait push (bad) call xor cmpsl push inc scas std jbe bound pop xchg pop mov aas or or (bad) mov fs xlat mov jb sbb dec xor adc (bad) mov add mov sbb stos push aad (bad) (bad) dec rorb rcrb mov out sbb test lret (bad) mov push cmp mov aaa repz loopne push imul and xor sbb into dec mov or add and inc in xor inc sbb nop addr16 out lret or lahf bound dec scas jge and pop dec jl (bad) (bad) (bad) jmp push add je sub (bad) pop clc or sub jb and jae xchg (bad) (bad) (bad) mov je jb xor push xchg dec xlat inc lods insl mov aaa mov fwait adc in jecxz dec pop lock loop (bad) (bad) ljmp rcrl fisttpll cmp fisubl pop xchg dec mov inc icebp xchg jae dec inc cli or cmpsl xchg xchg shrl clc jmp repnz mov push inc in repnz xchg (bad) incl mov cli out xor (bad) mov out pop xor (bad) (bad) (bad) (bad) call cmpsl fnstsw xlat dec ja loope push mov (bad) (bad) and xor dec adc call mov test jg cli dec loopne loope sub jns ljmp orb (bad) ffree cs outsb pop cmpsb clc loop pop aas mov or out add adc xchg xchg sarb lock pmuludq (bad) jg (bad) (bad) (bad) aas xchg inc jge or imul jne out mov ds ficompl pop xchg inc cs andl add add hlt inc dec add decl jge sbb int3 mov cmp or mov fdivl call iret and std and xchg mov push sbb mov push cli sbb dec enter xor jg lods xor xlat (bad) je xchg push mov push sub jns gs test and lcall dec lret neg ja in nop push popf lods or mov decl lock jecxz ret cmpsb test out (bad) (bad) incl add jbe xchg insb fisttpl test in sarl jnp pusha gs repz std and jg (bad) sbb lock lea lds add xor mov cs adcl in (bad) (bad) cmc mov das pop adc test mov add std in jne xor std ja cmp (bad) (bad) jg adc aaa xchg fdivr loope xchg sbb lods xor and (bad) (bad) ljmp mov andl xchg lock adc pop cmp or ljmp jne cmp cmc or mov clc mov lret aad cmpsl int3 mov lods sbb or call cmpsl fcmovnb lcall xchg dec xor out xor (bad) (bad) pushl inc mov (bad) pop or sub pop dec xchg roll xchg cld (bad) inc out jnp push mov insb fist push arpl (bad) (bad) (bad) incl or inc in sbb cmp push mov jle bound (bad) std out jno fcompl clc inc (bad) (bad) call dec and nop push clc ss add pushl loop mov mov (bad) (bad) jg stos dec mov sub xchg lcall xor adc pushl (bad) ror sub ret pop add lret nop in adc push sbb loope (bad) aad sti sub (bad) (bad) (bad) (bad) in and movsb jo (bad) push (bad) inc cs jp or xor or jg (bad) ljmp pop imul out dec push dec sbb in adc (bad) (bad) (bad) jmp lahf lahf mov pop fdecstp rcrb movsb mov das inc (bad) jo aam aas leave (bad) (bad) clc loope fsubl inc jge (bad) fisttpl mov mov (bad) (bad) (bad) decl insb sub add mov test ret stos jae cmp mov std dec jl (bad) push lret rorb xor std xchg notl or or xor pop icebp cmp test mov cmc cmp (bad) push imul sbb rorl mov int mov mov dec xchg (bad) jmp cld mov test xor mov clc sti sub (bad) into (bad) scas ret (bad) push aas cmpsl mov stc sbb scas mov popa jne movsb loop inc mov loopnew (bad) call mov (bad) jb mov mov test cmp cmc (bad) (bad) (bad) (bad) call test mov incl sar jmp xchg fcmovnu mov cmp and inc (bad) in dec incb imul loope mov (bad) (bad) (bad) call pop sub rclb inc jno in inc pop mov mov and pusha shl call (bad) ljmp cmp push sarb ret scas dec fs (bad) (bad) dec sti lret dec xchg and pop fildl or pop mov loop js repz aad jno outsl (bad) mov clc (bad) ljmp shl sti mov mov or movsl bound cmpsb inc das jg incl fsts mov xor pop imul xchg sub loopne ret mov dec lods cwtl sbb (bad) (bad) jnp dec and test xchg inc out loopne sub (bad) xor add es push adc daa stos adc add (bad) ljmp mov std arpl gs xchg aad add sub dec dec (bad) (bad) call repz mov or pop mov or mov dec je jecxz pop jae jl je cltd daa cmovp mov push js loope cmp scas clc outsb adc lods lcall movsl pop jb xchg jne imul mov loopne jmp ss test (bad) movsl fisubl nop loop sar data16 pop mov rolb mov (bad) fxch sub andnps sti jp dec mov xchg fs decl sbb add je mov mov push divl push out xchg jo (bad) lcall bound cmpsl inc push push dec xor mov mov insl jl daa xlat aam fimull pop cmp (bad) scas out adc in mov sarb push mov outsb cld std (bad) (bad) dec xchg or into pusha icebp pop aas sub sub ret sbb add dec and mov xor cmp inc das stos xchg sbb sub fistl mov cmovle jnp sub mov loopne lret sbb jae mov pusha out pop nop jae stc mov mov add incl inc jle outsl cld dec or adc fistp in out xchg inc lret movsl dec and and add lret inc inc les xlat test mov mov (bad) fwait test pop xchg or dec xchg fwait push adc bound sahf adc pop popa pushf lea inc insl fdivrp mov ret xchg lret jg scas inc arpl jb and xchg mov call mov (bad) (bad) pushl negb sub ljmp pop shrb sahf inc shrb push xchg pushf negl fiaddl add (bad) jl mov repz scas cld jl pushf lahf (bad) xlat add das clc (bad) push pop mov nop inc out outsl into mov xchg (bad) test mov sar hlt inc cmp test sbb cmpsl repz xchg lret data16 (bad) (bad) (bad) mov (bad) popf (bad) push jmp xchg outsb inc mov push insb inc cmpsl jge imul lcall ss or bnd in pop imul loopne lock sub mov stos (bad) (bad) push adc mov in (bad) fldenv xchg cwtl notb push lds loopne mov xchg pushl sbb sbb cmpsl push pop lahf out xchg lods or xchg (bad) (bad) incl stos and cmp mov aaa push cmpsb fnstenv aas test call sti mov cs push icebp mov or icebp fnstcw in mov cmp add orb mov (bad) (bad) ljmp rcr in orl xor adc mov sub lret mov lcall or hlt into inc sbb std add dec shll inc stos cltd mov movsb mov je cli sarb add xor dec (bad) (bad) decl scas in jmp lahf cs inc add sbb das test scas or dec rclb xchg lods inc (bad) das xchg pop call in andl jmp andl dec jge (bad) outsl out (bad) lcall gs out (bad) popf aam sbb stos jmp (bad) jl (bad) mov inc dec movsl (bad) jne jne nop clc add jne push fnsave (bad) lcall stos shrl dec xorl cmpsl and shll sbb push sbb pushl push xlat popa ret ret mov and outsl (bad) (bad) (bad) (bad) (bad) call imul pop mov fildl adc jne,pn jg aaa xchg (bad) (bad) lcall int mov push sub add fs shlb test iret mov pop daa test cmp push aad (bad) les pop or lret mov inc nop sub iret fnop xchg sub xchg jmp push sbbl jge data16 mov nop xor shr xlat int and add je sub cmc clc das stc dec pop cmp push lcall cmp adc incl movsb jecxz imul or ljmp aaa or push sub and push es xor xor ljmp fs ja push push cmp push call (bad) (bad) (bad) pushl and push adc hlt xor fyl2xp1 shll jb cmpb mov in fdivr (bad) decl lds dec pop push mov pop in add ss lock (bad) jmp repz loop pushl mov pop mov cli loopne stc in into mov ds xor jmp int3 enter sbb mov clc pop test rcrl in (bad) (bad) (bad) pushl push insl pop pop inc lock lret mov dec daa out fldt (bad) call jmp adc rcr cld dec test lret push (bad) (bad) mov into aad inc push in push or daa push es xor decl xchg cmpsl dec push mov jb pop (bad) (bad) decl out pop roll pop pop je inc cli cwtl sbbl in cmp mov popa fadds loope adc (bad) scas sbb mov adc insb cmc dec dec dec rcrl (bad) aas mov (bad) cli stos ficompl repz jnp add pop popf test (bad) (bad) (bad) stc (bad) iret imul (bad) shrb mov cmp (bad) (bad) mov jo into jmp or adc fstpt xchg mov iret and out cli jmp jno imul inc inc mov push loope pop (bad) (bad) jmp roll dec mov repz clc in pop jns stos decl cmp lcall shl repnz jl add ljmp std ljmp insl dec sarl (bad) (bad) lcall and shll subl cmp enter loope xchg pop out or adc in mov out mov mov mov dec shrb xchg cmpsb xor (bad) call sbb insl popf mov mov aas xor loop xor sub mov jmp (bad) jnp jne mov pushf sub stos (bad) (bad) (bad) pushl out cmpsb fidivr jo mov jb sub cld xchg sbb mov xchg add jg (bad) jmp add sub sbb mov and adc inc and lds fbld stos mov in mov orl decl lods sub rcl fnstsw jg dec mov sub sarb outsb mov lds add (bad) mov iret test (bad) (bad) inc (bad) jle std popf fcmovnb xchg scas lcall (bad) (bad) (bad) ljmp inc xchg jno sbb and fcmovnb dec (bad) xor out lds (bad) (bad) lcall data16 and js lret or daa in or jmp sbb incl sti sub movsb mov mov adc imul sti and ljmp pushf mov (bad) incl cld int3 adc lock insl adc jmp out gs rclb cltd (bad) (bad) (bad) jg cmp rcrl and stos lret jl adc repnz dec jae repnz jg,pn push xchg leave (bad) (bad) (bad) (bad) fistpl inc into popf out mov sbb sbb mov push or sbb aas lret add cmp rorb inc idivl cmp inc jecxz clc jecxz xor dec in (bad) incl stos adc out push pop dec ds das xchg add (bad) call jp (bad) outsb push push inc push xor cli je or (bad) and (bad) pushf xchg adc and fwait pop stos lods aam (bad) mov jp push add in (bad) call mov out (bad) pushf sahf adc loope addr16 (bad) (bad) (bad) jge (bad) dec xchg fcmovbe lea (bad) (bad) jno lods cmp hlt es rcrl pop sbb inc jmp fdivrs loopne pop and (bad) call push or pushl notb mov (bad) ljmp or mov pop xchg add xchg cvtdq2ps push daa stc cmp pop mov fildll out inc aam cmpsl cmp cmp (bad) (bad) (bad) decl and aam xchg fmuls push or addr16 and pop cmpsb cmp push fcompl dec (bad) jg (bad) cld push jns push or dec inc pop in pop nop (bad) gs (bad) (bad) (bad) (bad) ljmp out dec mov sub cmpl sub mov divb add jns std or jb cld mov ljmp add mov inc push pop mov push clc (bad) (bad) call lock jo lds stc fnstsw cltd (bad) call jns jg das (bad) jmp mov push repz stc xchg push cmp or (bad) (bad) (bad) ljmp insb push je and leave mov (bad) fidivr div jmp mov test nop shrb outsl push (bad) xor (bad) (bad) (bad) mov sarb lahf dec shl jne data16 sub mov dec pop loope xchg inc or outsl stos cmp add (bad) (bad) jg pop dec cmpsl xchg in es notl lahf xchg mov xchg addr16 cmp or mov pop mov sub xor imull cltd xchg (bad) mov sti pop movsl xor dec jno adc jnp repz in stc mov fdivl adc rcll aas adc jl sbb sub bound adc aas test or inc jb push pop lds test ss ja lcall inc (bad) shlb mov (bad) jo test jg jmp push les and sub stos gs (bad) (bad) out cli int3 out lods pop (bad) js fstps mov sbb push fildl lcall pop divb and je andl (bad) jg clc mov loop mov xor mov cwtl pavgb (bad) (bad) call mov jo je sub push pop and pop inc ljmp aas sti icebp fwait add xor adc (bad) (bad) jg ja xor jg cld jg mov mov xchg (bad) (bad) (bad) pushl aaa jle mov (bad) cltd ljmp clc adc adc cmpsb into popa mov (bad) (bad) call jae or lcall mov jo clc (bad) (bad) (bad) call daa pop int lods push lods xchg (bad) addr16 fild or imul jo pop (bad) jmp or das jmp enter jg jmp inc data16 mov imul jp dec push mov cmpsb (bad) (bad) jg lea (bad) pop xchg xor adc dec out int3 in pop pop jecxz ljmp sbb xorl sbb adc add fsubl push (bad) (bad) (bad) (bad) incl aas lea pop loope scas lock mov dec hlt out test nop mov or (bad) jg rclb jnp dec fidiv adc addr16 sub or (bad) jge cltd les cmp fisubr inc (bad) decl pop xor aad (bad) sti jge cmp sub pop inc pop sub icebp dec out pop xlat or push add (bad) (bad) (bad) (bad) fnstenv mov xchg inc ficoml sub sbb pushf shrl push jmp (bad) (bad) ljmp adc in mov cmpsb inc test cwtl (bad) (bad) (bad) jmp (bad) repnz and jnp xlat fildl out inc xchg loope leave (bad) xor xor xchg (bad) decl mov mov fs les lds jle dec notb test (bad) pushl xchg popf add orl bound sti pushf jle (bad) (bad) fildll push add mov push push inc pop push in xor mov (bad) (bad) pushl cmpsl out fisubrl push inc (bad) adc enter pop loopne adc adc cmpsb jge mov sbb or rcrl xor cmp lock cli pop dec test gs (bad) adc xor (bad) ffreep mov ret mov xlat sahf jne inc mov inc notl lock lcall mov ja loop pop and sub mov sub push adc (bad) sti sahf mull outsl xor (bad) cmp out cltd ret or hlt jge repz (bad) (bad) mov mov dec dec test (bad) mov pop pop inc mov and push insb push cld inc aad pop (bad) leave lock (bad) (bad) cmp lret lods fldcw fwait repz push sbb mov mov jo push mov int mov lods jb jmp (bad) (bad) lcall jbe lds ljmp mov out cli movsb xlat (bad) (bad) incl xchg xchg push mov dec xchg jp jb mov (bad) ljmp addr16 (bad) and add cmp test mov std mov ficompl loope inc and mov call xor mov dec add adc decl popa add mov xchg mov mov data16 inc ficoml xor pusha cmp lock mov mov cmp sub outsb dec xchg or or sub mov fidivr cli (bad) (bad) call ljmp xchg cli or js inc stc fwait insb pop daa mov scas inc push add movsl pop lret fadds jo adc mov add popf stos (bad) pop push (bad) jg cmp xchg fistpl stos mov dec jne mov imul and cli in xor jae leave (bad) (bad) clc inc mov js imulb ljmp movsl fild stc sbb mov rorb adc jl dec sub or incl add pop sbb mov (bad) call or mov mov fwait xchg jle addb mov cli out int3 fdivl dec bnd or imul mov nop jmp (bad) (bad) (bad) jnp sbb or xchg mov stc out lods push in es mov pop dec int3 insb aam lods (bad) jmp cwtl mov mov (bad) aad (bad) (bad) jmp std lds jo cmp xor adc int3 loope jg test jne icebp jl cmp lret sub mov ret push mov (bad) mov or (bad) lcall iret loop pop outsb pop inc leave dec jbe ficompl les mov dec scas imul sar scas sbb jl xchg cli daa xor sarl (bad) jmp incl push fs mov sub mov inc push imul clc lods sub inc scas dec (bad) (bad) jmp sbb push decl dec mov mov ret push xlat mov test (bad) (bad) call dec fdivs push mov cmp outsl or scas mov jle add stos add pop xchg pop and (bad) in sarb (bad) (bad) aas sbb mov add xchg sti sbb es xor (bad) lcall xchg or aaa lret lcall adc (bad) aaa sarb sbb cwtl int3 (bad) lcall sub mov (bad) popa fadds inc aas sarl pop mov in (bad) (bad) (bad) lcall lcall iret pop jnp mov jns mov add in dec movsl sub or and aaa add jmp daa repnz adc loop decl gs cwtl xor or movsb or clc xchg in sahf adc jnp loope xlat test pop dec xlat js dec movsl mov ret adc scas sbb or movsl dec cmp mov (bad) mov (bad) (bad) fbld mov sahf fdivrs push aad xchg and loop lods push insb ret bswap (bad) (bad) lcall hlt idivl pop pushf lods add out mov sbb dec inc and (bad) pushl (bad) xor fdivrl outsl dec aad xor push sahf sarl addr16 int aas arpl popa ret sbb jbe push sarb (bad) (bad) call aas dec xchg mov push jo scas xor lret inc loope jmp sbb roll mov lea les sub (bad) (bad) (bad) jmp cmp loop bound sub lcall push dec fisubl jl decl xchg pop xor or lea sbb (bad) (bad) jmp xchg pop xchg addr16 in pop test out mov insb loope scas shl pop xchg mov cmp es jae (bad) (bad) call inc rolb mov pop push inc mov add lret xor call test cmpl inc cmpsl add out test jecxz,pt xor mov dec and es jl add jecxz and jle in out pop cmpsb cmpsb popa sti sahf sub sbb jae shll or inc or (bad) aas pop ret test ret movsb adc sti push (bad) (bad) (bad) decl aam mov dec or mov jns sti pop es mov pop or loope clc mov (bad) jg jmp sub push mov adc xchg (bad) jmp imul add out sbb lret mov adc sbb (bad) bound nop (bad) out lds rcr in ljmp (bad) setge outsb outsb pop test dec adc (bad) (bad) sti fs popa and cs insl jne inc mov clc test aas push mov arpl mov (bad) (bad) mov je out data16 jb mov xchg dec mov inc mov call sbb jmp or or lcall xchg dec ja sti xor leave lcall adc (bad) (bad) dec rolb and loope ds and mov ja push jg (bad) pushl jp je and cmpsl dec or add push cwtl mov fwait mov jbe aas lock ja dec dec dec loope addr16 mov inc leave sbb mov inc mov push daa and aam es decl lods push jmp inc fstpl push scas stos in pop pop pop inc fdivr (bad) (bad) dec mov adc shlb sbb popf add cmpsl mov movb (bad) jmp stc sub sbb bound (bad) je fucom mov cmp and (bad) (bad) (bad) mov jae mov cmp dec stc pop push popa pusha icebp mov arpl (bad) xor (bad) call cmp xchg repnz push sub push icebp pop ror mov xlat and nop das mov fsub mov imul sbb call rcl les (bad) (bad) jg out mov jge arpl mov in or adc xlat (bad) (bad) (bad) jmp fnstcw inc clc movsl dec out jp (bad) stc adc adc fs xor pop clc add (bad) incl in adc ret dec sbb jl outsl loope popf mulb (bad) jg insl stos dec adc mov movsb lds jp scas ss xlat movsl scas xchg pop loope and mov push sti lods out nop mov (bad) (bad) (bad) pushl out ja test jp,pn stc jbe xchg out adc push mov mov push pop sbb jmp (bad) push dec test push pusha outsb xchg xor dec cmpsb or sub repnz (bad) (bad) pushl add mul pop mov sub mov repnz popf cmp stos (bad) jg rorb push jle fist (bad) (bad) out test iret (bad) push test icebp jl dec xchg jae aaa adc pop pop (bad) pushl aam cs lods ficompl push cmp (bad) mov loop lahf (bad) dec fsubs loop,pn fidivrl jle dec dec (bad) sbb push mulb imul lret cmp loope adc lcall lock and std adc xor pop push jecxz sbb lcall lret jae mov out cmp in add test lcall pop add cmp add jecxz pop out (bad) call aad mov bnd sar imul (bad) (bad) (bad) (bad) jge pop sub dec bound push cmp popf jne int3 cmp in dec incb cld pop daa push rcl inc in ficom stos shr mov (bad) (bad) call dec xchg jge,pt or mov inc sub push inc int (bad) mov daa inc cli std out lret dec xor test (bad) xchg cmp xchg (bad) iret (bad) mov (bad) pushl push sbb inc xor sbb mov mov jne sub (bad) mov mov icebp rcrb xor lock xchg fs call sub mov arpl repnz cmp push daa es (bad) sahf adc jae shld (bad) lcall into push in aaa scas cwtl in mov mov add push incl mov jno test push inc stos gs (bad) call pop mov mov push (bad) jae mov inc add xor ljmp cli mov mov mov je mov popf (bad) (bad) jmp jp mov mov (bad) mov xchg lret push fcos mov add dec lcall sub mov mov and loope xor lcall lock push xchg xor jae pushf movsb es add (bad) (bad) js stc pop add (bad) stos imul (bad) mov pushf nop scas mov xchg adc sub mov mov sub ss pop shll insl mov pushf (bad) (bad) decl sbb mov pop sbb jo dec shrl rclb or pop jb xor lock cmp incl jg jb and sti jg (bad) sub (bad) pop push cs mov cwtl or outsb mov mov jbe or scas adc mov (bad) (bad) (bad) ljmp mov add and (bad) mov (bad) test je std ljmp hlt pushf aam stos xchg mov cmp (bad) (bad) lcall hlt cmovp ds fsubl dec aad and mov (bad) (bad) lcall dec std sub mov mov inc in pop xor inc pushf add cmp (bad) lcall imul aaa mov pop addr16 ja mov (bad) lcall mov or and lahf mov inc sbb jnp out push movsb loopne fwait (bad) call (bad) (bad) xchg sub xchg mov cmp and sub (bad) (bad) (bad) jnp inc rolb xchg repnz cli outsb movsb cmpb in and aam jp aaa dec (bad) ljmp mov (bad) cmp inc rclb lea (bad) mov jae sbb jl imul dec (bad) nop sub std inc dec mov sub sbb jmp mov cwtl ljmp cmc loope mov andl (bad) push and xor test or mov inc or (bad) jmp push loopne outsb push xor cmc cmp (bad) (bad) jmp repz insb add mov inc adc adc xchg test xchg pop jg mov mov cld lcall or jle sub call xchg sti stc dec call adc pushf sahf or push pop (bad) (bad) mov jecxz jo arpl mov jp repz mov aam pushl outsb or in add je mov lret aaa rol out add adc (bad) cs dec shlb xor ljmp inc and outsl mov jmp inc push hlt test out in and adc fcmovnu hlt mov adc or addr16 sbb xchg ss push into ds repnz mov das cmp push popl fsubr pop andl (bad) (bad) (bad) jg cmc push add or sti jo aam outsb (bad) js lods fistpll lret lret xchg (bad) (bad) push push ficompl mov cmp std mov dec xchg nop jge (bad) (bad) (bad) mov jle pop scas push lods cmpsl outsl push test sub xor enter jg push cmp pop das add or fdivrs mov decl jne out mov (bad) jge cmp ljmp (bad) (bad) (bad) (bad) (bad) out leave dec lahf je cwtl dec std mov popf lcall es cltd xchg (bad) lcall fdivs adc lret in and es repz push jl xlat iret cmc (bad) (bad) (bad) (bad) cli popf fldl js sbb xchg shl es int3 in clc xchg add lret (bad) mov mov stc sub inc xchg pop and out aam enter ljmp cmp fbld loopne mov jl notb std (bad) ljmp outsb out xorl mov mov and popa cld lds xor test rcr mov rcll and xor insb sub std fcmovnbe mov xor (bad) push (bad) (bad) lcall inc outsl jp inc adc mov push jne jg dec addr16 mov (bad) call xor jbe push ja clc push or lock mov leave push inc mov (bad) lcall daa xor xor orl and xchg insb and adc or push mov sahf lret mov into cmp pop dec faddl cli inc rolb add repz test jno loopne (bad) incl scas fistl (bad) add ja leave test cmpsb insb inc push mov add or (bad) mov jno mov mov (bad) stos rclb (bad) andl (bad) (bad) (bad) jmp lret imul mov in inc int (bad) insb push xchg xchg add rcrb (bad) (bad) fsubrs pop popa ret mov out push dec out hlt (bad) jg adc imul lret pop push add dec or cmpsb ret inc jl dec xorb testb das jp je ja sahf mov js cmc ja sub cld mov pop lds stos pop mov mov into jo pusha push (bad) sbb add cwtl and in jns sti adc lock cmp or cmp push das call jg fldcw outsl mov xchg lock pmulhw mov jmp adc fsubrs sub xchg faddp mov aaa mov into dec add inc jb push cmc (bad) std test and jns xor out adc std (bad) (bad) (bad) pushl inc or out lahf rcll cmp js (bad) mov push hlt int3 rcll (bad) inc in sahf mov dec enter push popf lret ss les (bad) (bad) call pop sub mov xchg out out jae addr16 mov push in popa inc fwait mov (bad) aas and (bad) mov loopne pop rorl mov jnp pop ds (bad) (bad) inc test jbe stos ret clc mov es xor inc sub add (bad) ljmp es (bad) aaa and xchg shlb mov jp pop (bad) (bad) ljmp mov je pop pop mov rorl fucomp xchg jo cs (bad) (bad) (bad) call mov sbb cmp mov loope push jnp (bad) sub lods into dec mov and or mov jmp (bad) lods lcall jmp cs adc sti in jg sti xorl push sbb add add incl mov inc (bad) (bad) (bad) jmp (bad) jo pushf addr16 cli bound dec ja hlt mov sbb xor mov jmp push aas and adc mov lods xlat fidivr and sub add add incl mov hlt xchg and mov (bad) (bad) jg mov inc xor push in pop popa push fs add data16 (bad) jg cmp test push outsb (bad) or xchg fildl lods push out pop outsb or dec (bad) (bad) (bad) jmp cltd cli pop rcl pop pusha loop ja mov pop pop rorb jb bound sub fbld adc leave jmp lret cld (bad) call sub imul cld or lock aaa dec cmp jg and ja push movl dec (bad) inc pop das (bad) (bad) mov jge (bad) jbe call jbe mov lret arpl js data16 loope mov mov add int3 push scas sbb and loope bound push mov stos ret ret (bad) call lret out aas xchg ret xchg popa mov insb jbe mov mov dec jg (bad) decl push bound (bad) hlt xor js test scas into dec dec (bad) (bad) (bad) incl push dec pop dec pop jmp mov pushf mov or jg add iret push or (bad) jg jmp mov pop and adc test inc jmp mov dec sarl ljmp dec cli (bad) int jp xor (bad) mov pop in (bad) (bad) fisttp mov mov mov pop mov add mov or clc fwait push mov pop mov xchg adcb loope pop jbe movsb into scas adc mov call clc stc dec inc fistpll sub add lods (bad) jg sar mov inc jl dec mov btr (bad) jg call arpl imul rolb sbb out cli (bad) (bad) (bad) sub (bad) lea sbb repnz popa cmp mov mov (bad) xor loope movsb jmp sahf push test lea (bad) (bad) incl push lods out (bad) loop add xchg push dec pop jnp ret pop dec mov das sub insb (bad) (bad) lcall lea es in xor dec out push lds jnp inc in (bad) lcall inc in iret int3 jns push daa inc pop sarl dec icebp jmp and mov sbb (bad) ljmp jle or push adc xchg mov mov or ret cli (bad) call in or mov insl fwait pushf sarl out (bad) decl (bad) jae aad sub jb std push xchg fs pop add (bad) (bad) (bad) lcall sbb jo mov pop mov mov into addb push adc shlb fildll or (bad) (bad) (bad) (bad) fbld and xor cwtl and xchg rol mov sbb lret movsb (bad) fcomip mov inc mov jmp (bad) (bad) add mov (bad) call pop or inc test jg mov push jg mov jnp add decl leave sar std pop adc cli and cmpsl cltd test test stos imul adc pop mov and add (bad) (bad) (bad) cmp insb and out mov lcall movsb call fdivs sahf mov movsb int fbld mov add push mov cmc jae loope fcomip fwait test push and in pop popf das clc (bad) decl xchg cmpsb sbb (bad) jg fdivrs and imul out jo jg clc sbbb popf icebp js or negl sub (bad) (bad) jecxz sarb aam sbb aas test into xchg mov dec movsb dec (bad) mov arpl pop jecxz jmp (bad) ljmp cmp mov dec mov inc imul popa sbb cld (bad) (bad) jmp out jmp hlt xchg aaa jp jno xchg cmp sbb push cltd rorb (bad) (bad) call test jp fidivr (bad) lods jmp (bad) mov lods cld (bad) (bad) incl mov push jg xor xchg stos adc iret pop lods (bad) mov push add decl mov aas jecxz dec ret lds jb sub jo aad or jmp cmp clc cmp lcall pop mov int3 jne xchg out (bad) jg cli insb stos pushl sub sub jmp xchg ja pop (bad) pusha (bad) add (bad) decl inc xchg add ffree add fsubrs in call inc adc jne push inc stos fiaddl xor aaa (bad) call mov cmc mov push mov scas (bad) (bad) (bad) jmp orl insl jb jg jecxz adc sbb hlt psrlw inc ret cmpsl and inc (bad) sbb es (bad) jmp dec inc (bad) fmull stos pop call pop jmp push mov pop lcall (bad) jg (bad) cs in jbe ret mov out jne cld push repnz (bad) mov push sbb jg sarl les mov jg add or outsl push inc (bad) aad jmp imul call aad loope pop or adc dec or push in sbb and and js pushf out mov adc int incl lds sub mov cld out clc jg pop ljmp add jl addr16 popa bound sbb (bad) jg add mov and jne sbb insl cmp mov cmp data16 and mov cmp add incl fdivr sub sub movl or cltd scas (bad) movsb pop dec imul insb insl pop xor sahf in (bad) sahf std inc mov fmuls fucomi (bad) decl outsl inc add outsb add mov sti inc in jl (bad) (bad) push fdivrl jg lret dec mov cmp mov jmp jb (bad) mov jns push sub jle ss js fstpt (bad) (bad) inc loopne xchg daa jge sub test or xchg setno jo jg cs cmc scas or xor inc lret imul sbb (bad) out add loopne in faddl call xchg xchg (bad) (bad) aas jns aaa inc pop and pop and faddl idivl xor incl push aam sub fwait stos jle (bad) test mov lea pop inc (bad) movsl sbb es xor lea test std mov lret ljmp pushl stos push xor or (bad) pushl (bad) (bad) out aad addb test add mov inc add js cld (bad) decl mov arpl pop sbb gs mov mov cmp pop inc gs in int (bad) (bad) mov cld pop mov (bad) jae leave test xchg adc cld mov (bad) jne ss inc repnz sarb dec xor adc mov and push lcall shll ret int push lock mov xlat xchg or cwtl ja pushl mov gs rol popa mov add out push nop sarl inc dec xor mov icebp jle jb inc (bad) (bad) (bad) (bad) cmp pop push xchg pusha or sub adc push addr16 sub loop (bad) xchg jl or repnz call pop push mov inc repz or notl xchg dec mov (bad) (bad) jmp pop lret popf shrl xor testb sub mov (bad) or scas xchg push insb push jae ds pushl out lahf adc (bad) (bad) jmp enter das push push (bad) leave jno or insl xchg sbb pop inc push lcall subl adc sahf cltd ds cltd sbb dec jnp jb mov (bad) decl addr16 jae insb or cmp cmp loope (bad) (bad) lcall dec stc cltd sti push jmp daa lock push and call repnz cmpsl xor push mov sub idiv (bad) lcall int3 pop (bad) push lds sub jo rorb adc cmp pushf call (bad) mov cs mov lods jae ljmp clc mov ret cmp or (bad) incl imul mov ror sbb jg jbe xor aaa adc stos adc xchg incl icebp mov mov fbld mov out push adc dec add clc push loop push mov mov push cmp ss or fcmovnb cmpsb mov xchg mov movsb lea sub and jmp push popa lret (bad) stos push mov int mov daa pop mov dec (bad) (bad) mov mov dec sub mov leave push mov nop std std (bad) fildll jo pop outsb rorl fs inc sub mov push (bad) sbb fisubrl sub jp pop div (bad) or push sub jmp ficoml lods mov out js adc mov lcall aas cmp cmpsb jno mov sub mov insb push xchg and (bad) (bad) inc or mov leave jmp enter fdivrs roll cli (bad) cmp inc aam cmp or sub (bad) (bad) (bad) (bad) decl pop int3 cmpsb mov mov jp rcrb jne mov push popf enter and ret lcall into shrb into popa mov mov (bad) incl inc outsl and loope push inc push hlt push fnstsw leave (bad) (bad) jg or pop xchg dec ss adc lods out movsl clc test mov fsub pop xor ljmp sahf and add jg pop or adc adc sbb lock fcomip push aas fiaddl add int3 jp inc lret jnp jl scas mov mull push mull dec inc (bad) (bad) (bad) pushl into imul in (bad) lcall adc aaa lods test lock and daa icebp pop in iret push add sbb lcall or mov push xchg fimull mov cmp ret ljmp jg roll testb out je cmp pop mov mov mov mov fdivrl xchg test push pop xchg dec outsb mov clc (bad) (bad) (bad) jmp aad ljmp pushf gs repnz rcll adc stos push cwtl adc pop in pop in cmpsb jge outsl fucomi out xchg xor das add lret mov (bad) (bad) call jbe pop push or daa dec (bad) cmp sarl add mov lods and loope inc es mov das push fcmovb xchg bnd dec outsl (bad) dec cmp mov jae xor sbb push leave add mov scas ja sar inc xchg jp inc cwtl ficom clc incl pop and arpl aas mov dec enter add xchg hlt dec repz in adc pop out and pop and (bad) dec movsb xor aas in dec pusha dec icebp xorb jp aas popa pusha jmp mov sub pop sub mov sbb sbb ja or out push jbe pop test (bad) pushl popf aam mov or repz icebp mov test (bad) ljmp xor nop or dec jl fistpl pusha int xchg fdivs and mov push jb popf inc mov addr16 (bad) dec mov cli cmp sub xchg or ljmp mov jb add sbb loope mov fildl and insb add mov fdivl add push sbb mov mov stos inc fadd mov bound (bad) (bad) lcall sub inc and push stos lcall xor mov xchg leave gs stc sub jg test ss push clc xor cli and lock test mov (bad) (bad) (bad) lcall (bad) sub movb jl mov dec lods xchg inc pop out popf push inc out sahf sahf jp (bad) decl pop cwtl loopne (bad) in test lahf insb outsl call jnp (bad) ljmp and cmc call iret test ss ret stos xorl jno jg (bad) push pop ss repnz pop ja hlt shrl outsb sahf adc mov mov (bad) pop into (bad) repz (bad) (bad) (bad) out xor ror push mov icebp shrl es sub mov lock pop inc add (bad) aas sar jmp adc inc popa jae movsl cmpsb xor xchg ljmp pop fisttpl fwait adc pop xchg jb into popf fisttpll (bad) daa push insb lock xchg (bad) pushl sbb pusha lock stc mov pop xchg (bad) (bad) (bad) aas insb mov add pop or mov cmp mov out sub (bad) (bad) call cld sbb in (bad) out bound loop sbb sub cld (bad) (bad) jg dec inc xlat mov (bad) call stos mov addr16 push pop sub xor (bad) call cwtl sbb add ja pop mov jo pushl shrl in xchg mov (bad) ljmp icebp fistl clc leave mov sub sti (bad) jp stos pop sbb fisubl add jle (bad) mov addl cli cld or (bad) cmc js popf outsl ret dec adc (bad) (bad) (bad) (bad) mov and pop adc sub xor mov mov loope movsl lds aad cli pop or push mov test mov test mov inc repz int add (bad) (bad) (bad) call jns in pop pusha xor mov cs jb xor cmpsb jae movsl mov mov les push xchg mov dec push jae xor pushl pushf dec and orb add jge mov cmp outsl cli lcall loope mov xor lods pop push (bad) (bad) (bad) jg repz mov ret mov sbb mov cmp popf popf in (bad) decl imul rcrl add stos sbb or scas or incl in notl lahf cmpl int push fcom push xor int (bad) insb xor cli mov sti dec and aas lds incb jae out (bad) jl add hlt jbe jge dec negl lcall xchg (bad) (bad) mov (bad) mov xchg (bad) (bad) cmp mov inc mov pusha bnd sub dec fnstenv popa (bad) cld (bad) sub push and pop sahf add push nop mov mov js xlat xor adc aam test and scas (bad) cli jae ret ret inc dec into pop mov mov nop pop ja pop and dec mov or push mov and lock negl in out dec jno sub stos push jl mov xor (bad) ljmp outsb mov gs arpl aaa cmp shrb in dec pop loop pop ja (bad) incl mov xor pop stc pop and es mov dec int mov cwtl (bad) ljmp loopne or or mov sbb or adc lret (bad) (bad) jmp rcl lcall xchg mov sub cmp and (bad) jg and pusha imul sub cmpsb (bad) mov loop dec int3 out lret loope mov mov stos hlt pop hlt in xor out push dec bound ret inc mov imul push or adc rorl mov imul xchg iret xor cli pushl std or and insl push push enter lock shrb mov insl xor mov shll (bad) (bad) (bad) mov pushl test in rcrl pusha push pushf cmp add adc movsl sar (bad) ljmp and pop or mov or sahf xchg lods js (bad) ljmp imul dec prefetch or (bad) sbb insl pop loop lds imul xchg mov or pop sbb xor adcb and bound cmp mov decl mov cwtl cmp cmp mov sub incl mov (bad) jmp sbbb ss (bad) pop mov decl out (bad) (bad) (bad) (bad) std pop mov arpl out or adc inc pop mov loope dec xchg jp test adc call push inc jp ror cmp fcmovnbe in je rcrb orb (bad) (bad) (bad) decl xchg mov add popa fistpl xchg sbb mov pop sub jg (bad) dec sti fwait or pop sbb (bad) hlt or adc lds jb fnstenv repz sub jge arpl push sub clc bound or (bad) (bad) aas imul (bad) xor pop add xor fstpl repz (bad) incl lods cmp cmp and into outsl daa jl jo outsl jo iret mov lods jle dec mov pop cmp scas stos sbb mov adc jae and (bad) ljmp cmp daa add xchg repz add std add lock push aas fs or ljmp push sarl push (bad) incl testb add in (bad) (bad) jg push pop notb push notb std mov out mov xchg pop and das clc jmp aaa shrb pusha xor adc dec cmp imul pop andl pop popa inc js sbb aam fistp stos ret lcall mov mov out mov sbb mov cmp or or mov je (bad) clc cmovae jmp add push jae (bad) lcall mov out (bad) dec pushf movsb push add incb or (bad) hlt (bad) decl dec adc in push mov das or dec test clc push (bad) (bad) (bad) cmp out pop fdivrp lods or ds and data16 cmpsb jecxz pusha add add sub inc jl push and cmovg sbb xor lea (bad) (bad) (bad) jg mov mov and xchg adc cmp icebp cmp out test (bad) call test outsl loopne fisubrl sbb xchg lahf cld (bad) (bad) (bad) jg adc repz add ljmp dec js nop gs cmpsl cwtl cwtl mov inc mov ljmp add inc cmc cmp pop jp cmp xchg jge lcall jp inc mov mov and adc pop cs (bad) (bad) incl enter mov fstps sbb pop imul pushf (bad) out mov sub (bad) pop push das xor dec arpl jl sbb clc (bad) call pop lds fnsave dec mov or pop xchg (bad) dec adc or sbb decb addr16 push std adc (bad) (bad) incl cmpsl mov into sub scas mull inc int imul sub mov std (bad) stc or pop jle insl xchg data16 xchg ret cwtl lcall or adc imul loopne xchg xchg lret das cli fsts xor adc mov cmc add sti icebp in hlt popa je and (bad) jmp insl ror mov popf mov push or imul (bad) (bad) (bad) call mov fstp inc sti ljmp movsb sub and cld (bad) (bad) ljmp add inc loopne sbb pop insb popa jns or icebp nop stos jle dec and call lock pop sub sub mov data16 mov int3 inc mov mov mov ljmp ljmp popa shlb cmp movb (bad) ljmp arpl notl pop hlt and fsubrs (bad) inc adc push mov lcall fist add aaa testb pop cld jg mov shlb stc lods jo orl (bad) incl jno sbb clc sub mov loope sbb cmp lcall (bad) mov negb int mov inc (bad) out cld (bad) pushl iret cld sbb sub pop cs out mov mov clc scas cli in dec pusha push sbb fiadd jp fidivr scas stos add mov pop xchg add adc daa les dec pop inc push pop gs (bad) (bad) lcall (bad) popa add jne mov xchg (bad) and scas aad sti xchg xor dec fstpt test pusha push roll mov incl icebp popa test movsb loop inc insl sahf sti iret out push jbe pop mov push fsubs mov push jae xor loop or sti (bad) (bad) (bad) mov xchg js ljmp xor jne inc scas sub mov (bad) lcall in cltd ret push (bad) insl sub orl sbb pop enter test scas fimull sbb cmp pusha add (bad) jg scas (bad) lret orb popa cmp pop pop mov hlt xchg pushf xor vmovupd test call mov dec jae xchg out push xor xchg dec mov sub mov fild lcall (bad) out cli dec iret pop rclb add pop cmp sub hlt leave loop mov inc rcrl scas mov jl push repnz (bad) (bad) jg mov xor sbb sub movsb loope mov mov or pushl das sti dec or and or inc test jo mov sbb cmp lods fmul and sub pop mov (bad) (bad) (bad) pushl mov inc dec inc mov jp scas xchg cwtl or xchg and call mov pop adc mov sub mov (bad) call jns lds cs or pop je push sub scas sbb jo lods push mov jmp dec (bad) sarb movsb pop jg cmp add movsl int sti (bad) (bad) decl mov jne ljmp push xor out fbld out pop add jg out cmc notb sbb insb call les repnz xor pop jge cmp (bad) (bad) (bad) pushl fcomps das adc jl mov push pushf dec je cmp add cmpsb pusha inc dec xchg fidivl lcall or out jno inc lea rolb xchg scas (bad) fwait clc (bad) (bad) call jno lea mov out sti call arpl mov lods (bad) sub (bad) jg fwait and mov xor repz jge cltd test ret (bad) call loopne fidivrl lods push leave add mov pop mov leave pop adcl xor ss loopne (bad) repz xor jmp (bad) cmp mov mov jg (bad) (bad) (bad) incl fadd pop lods lret sahf mull xor ds jno loopne sbb sahf xchg (bad) push dec cld jecxz mov mov js idiv fstpt push aad pop mov enter pop ret js pop movsl gs (bad) fbld in lods or pop mov push ret movsl ljmp repz or fiadd xchg add cmc cmp sub cmp sar (bad) pushl inc sub cld mov lods mov (bad) mov js clc inc sbb popf sti mov push push cmpsl cld imul sub (bad) (bad) (bad) lcall rcl pop mov nop add int mov push push rcl scas fs (bad) aas leave xchg or lock xlat mov sahf fucomp and push (bad) (bad) (bad) (bad) cmp jne mov inc mov mov jecxz stos imul cmp lcall fdivs push xchg jne xor jp pop push push pop insl (bad) (bad) (bad) jmp aaa or lcall mov cmpb outsb (bad) sub andb fucomip in inc inc cmp or push sub inc (bad) (bad) (bad) lcall in mov adc cmp stc ljmp faddl fbld dec or jmp stc cmp lcall fs test push xor (bad) jmp pop mov add and into pushf add add jecxz add mov das stc aam or xor inc mov fnstcw (bad) pushl scas hlt dec in sahf jmp sbb insl leave sarl iret mov cli scas mov and mov jmp faddp jmp test push push inc mov (bad) push mov xor mov pop xor ljmp dec lock in mov call and sarb lods sub cmp fyl2x jmp adc sahf or mov sbb sarl xor fsubrs sub ds decl cmpsl mov adc sbb mov lahf or pop mov (bad) jg mov adc xor sub cmp cmpsl inc pop int (bad) ljmp (bad) imul negb (bad) jg scas lcall fldlg2 dec dec popf adc xchg cs sbb mov pop mov imul pusha pop pusha sub dec push decl add or xchg fdivs push pop std or inc fstpt (bad) cmp and pusha xchg scas mov ret cli call fist (bad) (bad) ljmp mov mov sbbl push ja loope loopne pop in jl (bad) (bad) call or xchg test pop (bad) loop (bad) cmc ret jge adc int3 fsubs (bad) (bad) jmp popa sub jbe sahf mov stos inc mov clc push push (bad) (bad) (bad) (bad) sti or inc jns push lcall xchg repz data16 jb lret (bad) mul pushf decb pop andl (bad) (bad) (bad) inc inc jp adc xor int adc or fwait jmp rorb push and (bad) jmp xchg sub jmp cmp push inc pop xchg das and fwait repz cmpsb mov mov mov jnp cmp pushf lods cs cli ljmp jnp ljmp pop out inc in xor mov jmp push loop loopne das nop (bad) pushl mov jl test dec es jo mov jmp lods dec shll or cmp adc (bad) (bad) (bad) aas negb (bad) xor jl pushf outsl pop and cmp push rolb (bad) adc out pop mov (bad) (bad) (bad) flds (bad) int3 lods pop arpl gs sub outsl icebp fdivrl xor lock fildll lcall mov sbb sub adc sbb (bad) icebp pushf sbb mulb add inc in (bad) ljmp xchg neg mov dec pop shll pop jb pop dec xchg mov sbb lcall lret mov jno ret sbb loope mov (bad) (bad) jmp inc insb dec cmp dec jbe aad mov cmpsb fstps push jno int3 xor jg mov call mov scas pop jnp fwait nop les outsl divb (bad) pop (bad) incl test test add movsb lret fwait inc cmpsb push std sbb jns add (bad) jmp outsl fdivrs or add mov dec push test lret sub inc and call mov push sub xchg lahf xchg arpl dec mov dec xchg mov ficompl ljmp adc push jp out movsl push stos xor loop das sar es sbb add (bad) dec std push cli fmuls sbb jp push dec and fld (bad) decl es ja push lock mov xorb (bad) ljmp dec inc iret push enter inc jns in add cmp ljmp or stos mov push ds and and dec call arpl and add push aad (bad) faddl clc into add bound shll out jb bound nop mov lock (bad) mov push sarl out push push mov test and add xchg push or sub dec shll inc mov gs adc (bad) aas add sbb jnp (bad) (bad) fcomip jae jmp pusha neg lods sbb adcl and scas dec clc push int3 push pop daa scas adc push add test pop dec push mov (bad) ljmp icebp int3 mov pop test xchg inc roll clc repnz xor adc lcall jb pusha sbb mov out (bad) (bad) (bad) ljmp pop daa pusha jg add xor push pop fsubl jg cmc hlt mov out xor (bad) call pop or mov cmp push jmp in rolb movsb movsb sub outsb ds xor push cwtl sub adc (bad) (bad) (bad) mov arpl cmpsl cmp or mov sahf fwait and (bad) (bad) (bad) ljmp jl mov pop sbb lret mov mov lods push lret adc adc mov repz pop sbb test add cltd xor ljmp imul lret jo sbb fistp xor xlat loopne (bad) jmp addr16 popa and jl push adc dec mov pop out ljmp inc mov and ret jl jno xchg push adc (bad) (bad) decl add sbb xchg ja fistl imul jo popa or (bad) (bad) (bad) jmp cmpsb xor test add or ja mov mov pop push or sub (bad) jg test js lods cmp xchg lahf pop jns popa pusha mov inc cli mov inc push addr16 push addr16 push mov or xchg loop stos sahf (bad) lcall mov pop mov cmp pop roll jle inc xor sub stos push (bad) sbb jbe daa enter sarb frstor pop and nop cwtl jg icebp (bad) incb call mov cwtl jmp or adc adc leave adc in sbb add pusha mov sbb call repz cmp pop dec imul xchg mov in je je adc inc push or fistl add emms lcall aas mov cs jl ljmp icebp dec or loopne ja test and (bad) xchg je stos (bad) jno cmpsl in int dec repnz push mov gs push mov and (bad) (bad) (bad) pushl xlat dec adc and sub sub clc sarl (bad) add incl inc sti sbb jo sub sub push xchg push loopne cmp mov fbld mov jb (bad) xor repnz fdivr ljmp out pop stos mov mov cmpsb scas and movsb (bad) jae test (bad) lcall push notl outsl es loop mov jg sbb (bad) mov lock jnp stos cld enter mov and push mov push icebp pop xchg sub mov jg je rcll stc lods pop into jmp sgdtl mov imul cmpsl jmp fcmovu dec sahf (bad) das inc test add test pop ds fnsave inc sub pop scas in lods mov push lods dec mov sub add push decl cld iret mov fsub out and in lcall push inc das out and push std mov cmp sbb int sub sbb jg in push adc pop cmp or movsb pop loop stc out fild jmp scas aas xchg bswap (bad) ljmp imul bound insl addr16 sahf hlt fisub fs sub std adc push add pop lahf mov in fwait in das mov (bad) cwtl pop sub xor and ljmp (bad) xchg mov pop mov nop je repz arpl sar (bad) ljmp outsl dec es leave stc fmuls dec int test sbb enter (bad) (bad) (bad) call push mov xor hlt mov xor ret movsb push mov mov sub (bad) decl xchg fdivrs scas and xchg add movsl (bad) sub (bad) fcomip cmpsl popf fsubs mov xchg adc fimull pop cmpl cmpw pusha pop add push clc decl adc jl sub (bad) test (bad) (bad) ljmp popa mov enter (bad) add mov std add jno push test call incl popf push int3 mov cmp jbe sub (bad) (bad) fxam bound jmp sub xchg push cmc out xchg lods insb aad mov xchg icebp call mov mov sbb pop mov mov or mov xor insb jne orl hlt outsl (bad) js jmp jns mov sbb jl (bad) jl add and sbb push cmp dec push pop and mov (bad) (bad) ljmp cmpsl sahf fcomps jb sti adc jnp fnsave movsl (bad) fistp xchg lahf sti mov mov push sub adc (bad) (bad) (bad) cmp fistp std (bad) adc xchg fidivl (bad) cmp lahf pop inc mov bound or mov inc loop ljmp addr16 in push (bad) (bad) pushl int xorl enter mov adc pushl mov stos xlat insl cmp mov inc mov dec mov mov decl sar dec mov fdivr aaa mov cmc and xchg sub ja mov jno stc (bad) (bad) inc subb sub ret popl popf dec rcrb inc pop insb lret push das and jmp mov cvtdq2ps mov ror mov outsb jmp cmp repnz (bad) (bad) lcall stos push jge sub (bad) xor frndint jmp in ss pop (bad) (bad) incl fstpt loop push repnz cmp dec jmp mov xchg insl lcall repnz mov adc ret pusha cmc jae jg mov lret inc push loop,pn rorb pop xor cmp (bad) fidivr out hlt dec popa loopne das ljmp jno inc push push iret fs pop shrd jmp cmp add fnclex shlb add (bad) (bad) (bad) jmp add mov insl xor leave test pop dec ret pop leave iret jno outsl pop mov movsb adc lcall and pop lret out outsb mov and shl jno adc (bad) lcall inc (bad) mov jo aad stc hlt mov xchg pop jae mov outsb mov mov dec out mov pop mov mov mov add pop (bad) scas enter imul roll (bad) (bad) (bad) (bad) push and stos or mov js push jb loopne scas pusha mulb movsb jnp ds xchg mov adc (bad) (bad) (bad) aas outsl push push jne shlb icebp pop cmpsb icebp push ljmp cs xchg leave (bad) in (bad) ljmp jbe mov or sahf dec fsts jne push test mov call push or arpl adc jo test adc test ljmp pushf and cmp leave pop rorb (bad) call test mov xchg sub mov mov mov gs (bad) ja imul add lahf into push and adc in add cltd pop add push loop jecxz (bad) push xchg (bad) scas jecxz mov mov das xor les mov test aaa sub out (bad) insl jnp xor add pop sti add pop ret adc scas daa sar (bad) mov push rcrb jle shrl lahf and std fmul ds xchg lock mov xor pop addl stos loop inc loope imul test ret es and and or (bad) (bad) (bad) cld jne pop popa add pop aad adc rorb mov je push cmc mov add pop sti mov xor xor (bad) lcall sbb cmp daa popf repnz push (bad) mov jp sub fisub dec adc inc mov dec push jle (bad) std scas (bad) aas pop inc dec sub pop and call fisubrl jo (bad) call aam lret negb jne in and into fcmove push mov jle push mov mov fsubl stos push (bad) (bad) (bad) inc mov cmpsb outsb mov nop cmp push aam sahf or jb scas stos mov movsl mov (bad) ljmp into dec jg cltd mov in gs lods sub lods (bad) (bad) (bad) ljmp pusha outsl push sbb mov orb mov ret and add sbb inc inc lea stc add adcl pop mov add lret mov inc inc inc lcall pushl das pop mov push pop mov (bad) lods aam push jl mov mov loop (bad) fs xchg inc push jmp jnp mov inc and jge (bad) (bad) pushl push notb push jnp call test mov cmp (bad) (bad) jmp mov xor test outsl fs mov insl sbb decl lock or mov jl and adc and add jne popf call repz loope rcll add push mov adc push xchg lods pop or xor jo jl jb push inc mov dec and xor jg cmc fstpt aas adc pop xor rorb push xchg add adc cltd insb inc jecxz jns cli (bad) (bad) (bad) jmp cmp ljmp mov inc cmc xchg ljmp xor test sar mov mov push xor xchg xor in out in decl add (bad) xchg dec sbb into cmp xorl sbb inc ja sar repnz push in fcmovb in bnd cmpsb mov (bad) pushl mov sbb push mov jno stos clc mov (bad) (bad) lcall push and loopne test (bad) xlat sbb std decl jb jg (bad) lcall fildll ljmp pop fisubr jb mov mov dec lock mov or lahf xlat (bad) mov mov fsts stc xchg add push mov cli (bad) cmc mull inc jmp lcall pop (bad) xchg imull xlat xlat adc adc inc dec pop mov (bad) fstl (bad) push inc clc mov jmp movsl enter pusha fwait clc (bad) pushl sbb inc lret xor lods mov (bad) ss inc (bad) (bad) ljmp stos rorb js test cld pop dec sbb pop add decl adc add adc pusha pop jge,pn lock (bad) cmp outsb pop je fwait cmpsb gs (bad) jmp lcall mov ss push nop cmp mov sub pop (bad) ljmp (bad) mov into je or aaa jl iret pop mov js ds sub pop push aaa into sub dec (bad) incl add pop lcall out inc push add sbb imul mov mov sahf inc decl dec jns rorb sbb xor jg aas push mov call jl mov rclb mov aam and inc cli (bad) out or stc jle add (bad) (bad) call cmp jl clc stos repnz cld and cld xchg shrb imulb sbb int3 mov adc fidivrl arpl jbe jbe add (bad) pushl jae jno dec jo mov loopne dec in lds lea fs int3 add (bad) outsb mov test mov add (bad) incl scas pop pop lods push les add lcall lcall mov cld jbe sahf scas or lods xchg push jp in out loope icebp cmc push popa pushf (bad) aas add (bad) jmp scas aaa aam fisttpll je leave jb mov mov (bad) (bad) (bad) mov aas jmp inc into sbb sahf fs push fldl out les pop cmpsb sub add icebp lcall (bad) ljmp fs sti or cmc addl inc mov mov addr16 cmpsl jne fcomip lcall jbe push xchg sub outsb or xor test addl das add ljmp rclb ret (bad) xor add push ljmp sbb sti sar push std aam enter in imul lcall push fistp or dec gs sbb inc imul sub call mov leave mov jae inc push scas call or pop push xchg sbb ret xlat les mov (bad) jmp mov inc push lods lea adc mov xchg hlt test incl stc incl sub and nop fsubs xor pop fidivl (bad) (bad) call (bad) hlt nop cmp pusha push fisub icebp sub (bad) adc xchg loope call mov jg push sub pop xchg lds aas jecxz mov sbb cmp stc xor cmp data16 or xchg fnop mov cld (bad) (bad) ljmp (bad) mov cli mov mov lahf dec and rorl imul test (bad) (bad) call and out scas inc (bad) jp movsl dec dec add xor mov push movsl or jp cwtl push or jmp push int3 dec hlt rcll inc int (bad) (bad) (bad) (bad) jnp mov pop subl mov xchg movsb es lret and ds out xchg cld (bad) incl jae cmp das mov lret jo test hlt cmp fcmovnb (bad) pushl inc arpl xchg mov (bad) (bad) fbstp stos adc dec bnd inc fldenv push dec sahf mov adc jg test bound cmp pop jne mov and (bad) lcall add lock or cmp mov cs jmp push sub scas fist ret (bad) (bad) (bad) jg pop out sub jle stc out push mov push cmp addr16 arpl arpl (bad) (bad) dec sarb jge xchg pop mov dec jecxz adc sub arpl pop into push jge (bad) incl pop or mov cwtl or (bad) rclb (bad) sbb (bad) jmp mov jae mov je sbb mov push inc (bad) ljmp cld rcr and mov xor pop inc (bad) (bad) fild loope popf xchg and shrl cmp xchg (bad) mov cld (bad) mov nop scas inc mov outsb mov pushl aad pop xor inc pop cmpsl test sbb dec or cmp bound stos int3 test scas lock add and push das sbb (bad) jg inc dec jmp (bad) fs fistpl stos mov cmp (bad) call repnz pop sbb mov mov lret cmpsb repz stos fldt daa (bad) jmp hlt and fwait (bad) enter ret scas int adc fs fdivl ljmpw lock cmpsl in fdivs mov and lahf pop push push out cwtl adc aaa add (bad) jle jl xchg xchg (bad) test rcll loopne repnz (bad) ljmp lret addr16 sbb or jne outsb shl mov faddl or leave jecxz push imul mov sbb lret repz dec dec shrl (bad) inc jle xor (bad) ljmp inc sbb shll mov mov push je repz pop out jge,pt pop outsl inc ret jg cmpsb or les push add and pushf std imul xor cli sub mov mov xlat sbb mov pushf incb out enter sti sbb hlt (bad) (bad) call lea mov pop test jecxz frstor stos lea jns (bad) (bad) incl push jno push test movsb mov scas (bad) es ret fiadd mov (bad) (bad) aas leave es repnz xchg or pop rolb or pop fld1 inc scas clc push inc jns push out mov popa push rcrb enter jbe,pn (bad) testl pop adc xor (bad) jg aaa mov fidiv pop pop adc push sbb (bad) (bad) (bad) push adc out rcll (bad) adc xor fistl in jp adc pop mov inc cmp xor push push insb add xchg jne pop mov pop xor dec xor mov pop mov (bad) ljmp mov pop mov mov pop jns sbb aas int out xchg arpl int bound add (bad) (bad) (bad) lcall pop jb cmp aad add pop mov cwtl jp jnp les iret cmp push xor cmp and dec scas sahf insl das dec mov mov (bad) (bad) (bad) lcall or imul inc xchg fidivl adc addr16 cld cmc aam mov decl test mov jo dec jge cmpsl imul cmc (bad) (bad) jg lcall push scas mov cmp mov stc add (bad) fild mov loope loop clc inc fcomps (bad) jg cwtl mov ljmp jbe fbstp (bad) sbb xor pop or jae leave adc loop call int3 add les sbb aaa inc mov adc fs loope cmpsb add (bad) (bad) call fwait add fdivrl (bad) mov cvtps2pd cmpl sti inc dec cmpsl push clc fwait pop in loop sbb pop add incl mov inc and lcall shll add xor test mov incl sbb sti or inc xchg mov xchg inc in aas lret lahf mov cmp add stos or xchg scas call (bad) mov outsb mov (bad) mov bound roll call mov adc ret mov mov mov (bad) (bad) incl scas lds out mov push clc ljmp mov xlat clc (bad) jno ret (bad) (bad) (bad) mov jns int3 push scas loope out mov lods pop mov mov jl sar pop mov divl (bad) mov insb adc cmc xchg pop sub cmp shlb jg bound rcrl ds ljmp hlt lcall lock push aas mov jp jb inc add loop das cli ljmp xor int3 dec push cli je push add (bad) fldenv aaa xchg lcall mov fisubrl into popf cmp mov cli icebp mov idiv (bad) (bad) jmp cmp push in lea lret adcl (bad) (bad) (bad) (bad) mov repnz daa enter mov out mov es (bad) decl addr16 and mov mov dec pop roll and xadd add decl imul xor adc push dec (bad) jg dec arpl mov js cli and sbb mov adc lock ljmp or inc jno (bad) cwtl and movsl inc dec mov mov cmpsl jmp sbb pushl inc sub (bad) or testb (bad) stos add lcall clc call cwtl ja out fiadd test repnz (bad) jmp fsubl cmc adc pop adc jmp dec push icebp pop jne mov or mov jne inc scas sub (bad) (bad) mov pop jae sub iret pushf dec dec push iret cltd dec sbb lods and incb test add ja fildll jbe and ret aas push mov decl (bad) leave adc or and out lds push sarl repnz (bad) push sbb mov cmp rcr xchg aaa and mov loop js (bad) lcall int in scas (bad) imul arpl sbb (bad) (bad) ljmp pop in inc cltd jle sti adc and jle cli in and outsl sahf mov sbb jmp xchg (bad) mov out ja (bad) lcall cmp xchg rorb pop aas cmp faddl call inc adc js lahf test pop lock and inc or (bad) jg dec mov push add std movsl cs les ret call aas (bad) (bad) (bad) push add stos adc adc fistpl xchg (bad) adc xor (bad) aas leave jo or lds add clc xchg dec (bad) fucomi (bad) (bad) (bad) incl mov ja in scas push and scas xchg xchg mov mov push popf or (bad) (bad) mov lock lods fsubl and cmp fistpll les (bad) sub std ret cltd push add xchg and push xor or cmp cmp ss aaa dec clc (bad) jg mov and push inc loop push sbb push ljmp xlat test out cwtl stc mov rclb sbb mov aas jo ret xor cs mov push (bad) jmp xor loope ret sub lods push xor orl dec xchg jg xor push jecxz je daa dec pop push lcall xchg add stc test (bad) (bad) call subb jmp mov insb adc sub in sbb jo aam add jge arpl pusha mov test pop (bad) (bad) jg stc repnz ret nop dec cmp mov das cmp lods repnz (bad) jg decl data16 jno aam mov sub lahf nop sbb enter imul das outsl or add out outsl (bad) std cmp (bad) (bad) pushl inc mov lods sub xchg sub sti stc and jno ficom adc dec ds insl cmpsb mov call push mov enter lods (bad) push xlat (bad) (bad) (bad) jmp mov out pushf xor pusha push loope (bad) scas subl movsb clc xchg jo aas and call or cli divb and mov pop fwait imul (bad) (bad) ljmp fs call push or sub icebp mov mov pop loopne mul cltd test fist stos std (bad) aas jo and sub jle scas test mov cli (bad) call mov rcl aad daa icebp pop mov lcall or outsb fisubl notb jbe in pop cmc ljmp mov das mov fistp push sub mov pop leave fs stos scas dec (bad) push std mov test inc in fildl xor jecxz (bad) (bad) (bad) (bad) cmp or rcl mov in push pop xchg out fld cmpsl in or ret (bad) jg or ja mov rcrb push mov pop sar sbb add or outsl cld (bad) lock mov mov test rcrb int mov pop std incl mov mov mov and sti and lods (bad) jg add jb jmp sub pop xor mov rclb clc lcall repz movsl jae sub xchg ja inc mov add add (bad) sbb and (bad) out mov dec and je sbb scas mov cmp jo (bad) cmc (bad) popa jns (bad) (bad) (bad) jmp pop inc cmp push (bad) xchg or orl iret or (bad) ljmp sbb adc and push nop (bad) (bad) (bad) incl repnz pop push or mov pop movsb cli test inc cmp sub xor (bad) (bad) jno movsl xchg jns and test inc sahf leave mov gs pop cmp (bad) (bad) out pop lods ret add xor mov test popf (bad) xchg lock addr16 scas jle loop mov scas inc incl movsb mov movsl lea jbe imul nop lock push clc bound scas add popf mov (bad) jmp dec and jle addr16 dec dec mov add pop mov mov paddusb (bad) (bad) mov xchg clc sbb repz iret out cmc jg or mov orl call addr16 mov mov (bad) (bad) jg sti dec adcl ds dec lret rolb cmpb (bad) (bad) decl mov movsl fsub aad pop and pop jno mov or jl mov ss outsl (bad) outsl xor (bad) pushl and cmp fwait and mov pop inc xchg les push in mov stos enter mov pop insb clc xor adc or jne dec cmpsl lock popa lods xchg adc dec shrl nop cmp (bad) fidivr fsubp pand inc or std lods jno xchg mov lds daa stc dec adc in xor (bad) or mov shrl sub (bad) (bad) (bad) (bad) out pop adc mov cmpsl mov mov mov rcr mov ficompl std jmp das stc push cli in push mov adc cwtl mov in jno (bad) (bad) (bad) fdivrp jb sub leave fsub loope (bad) mov or outsl lea mov test hlt and mov insb push movsl bound ljmp add or mov jae ja adc inc pushl mov add scas sbb loop push inc pop mov or pop in pop out sbb lods mov jmp cmpsb pop lods and popfw arpl (bad) dec and test jecxz push mov ds xchg mov (bad) jmp xor pop mov mov adc inc scas sbb mov lods xor sti mov xlat xchg mov pop xor repnz jecxz add ljmp push std imul mov push jo and inc jns in mov je sbb sbb gs inc fcomps lods xchg push push xchg insb aaa idivb mov cmp xorl bound fcoms jp les pop (bad) (bad) jmp mov push sub mov rcrl add es cmp int3 test mov or and jne (bad) not or cmp call mov xchg xchg das sub mov (bad) (bad) ljmp push movsb xor push adc sub or call xchg popf lahf notb xchg data16 jg (bad) (bad) cld inc mov jecxz test xor notb jp ljmp add sbb mov or xor (bad) (bad) (bad) call add out jecxz push mov mov sub jae js ret dec (bad) dec les (bad) lcall push shlb stos pop lock dec imul add (bad) (bad) jmp stos mov rcll es into mov cwtl inc icebp mov jnp inc cwtl ljmp aad inc icebp xchg lods cmc fsubs stos decl inc cmc shll push js adc adc out or (bad) jmp adc lea push dec shrl es jmp (bad) ljmp call pop and in jecxz mov fstl (bad) hlt inc (bad) jmp clc (bad) (bad) call cs inc mov je xchg dec adc xchg xchg ret pop dec clc dec aam (bad) ljmp aam in add push adc add (bad) out clc (bad) push nop inc into into pop pop (bad) pop testl cli mov adc mov les jns inc push adc (bad) (bad) (bad) (bad) fsts rorl push push aaa aaa ljmp mul xor out cmpsb adc sbb and inc fildl test stos ss (bad) aas loopne push repnz dec (bad) (bad) (bad) decl push mov mov sbb pop xchg xchg jg cmc pushl push adc movsl push sub adc mov stos iret popa (bad) aas adc mov (bad) repz call sahf mov movsb pop scas lock (bad) jmp pusha mov adc ljmp subl aaa push xlat dec cld lcall (bad) xlat int jb fidiv jecxz inc aaa rcll or ljmp jbe std testb mov arpl inc sub in scas pop jmp into (bad) jne (bad) dec mov aam push adc add mov pop lcall (bad) (bad) stc or ss xchg mov cmp xchg xor test add call out (bad) bound es popa jmp add rcrl jne cmp (bad) jg cli push cltd mov fiadd mov mov adc ret (bad) jle pop cmpsl (bad) cmp adc test xlat scas in xlat (bad) incl loope mov add jnp loope arpl jb (bad) (bad) aas test roll enter lods mov mov add (bad) (bad) jmp iret sbb fnsave xor cltd idivl cmp and jae fmuls add push daa aad scas xchg popf mov iret push out (bad) (bad) (bad) lcall aaa mov or sarb pop pop add addr16 mov cmpsb sbb jne stos (bad) cmp loop add (bad) mov out ljmp ja dec cmp movl subl pop jl popa (bad) pop nop mov es cli dec push lcall lock jmp lcall add push dec imul (bad) jmp mov and test sti out pop (bad) pop xor xor cmp jle jb hlt push fsubl mov or sbb sub jno inc and arpl mov mov out fadds into fidiv in jne shrb hlt pop jecxz (bad) lcall imul xchg cmp ds sbb jno or mov push mov pushl sbb addl inc loope lcall xchg sub mov pop lcall (bad) cmc fistl mov and jmp ljmp popf (bad) (bad) ljmp loop mov mov mov dec shr adc jge xchg xchg add incl pop dec cmp aas flds in inc clc jg nop add imul lahf cs (bad) dec push add std mov jmp jp js pop cmp inc mov add mov movsl cmp adc jecxz pop mov jnp nop (bad) cmp fdiv incl cli adc pop xchg daa ror pop (bad) (bad) (bad) jg mov mov adc icebp fisubr in or jnp sar subl jne mov or outsl jno (bad) (bad) (bad) jg sub sub jae xchg (bad) icebp jg mov (bad) cmp and stos sbb sti not imul fwait lods cvtdq2ps incl outsb jae mov (bad) lret cmc jp iret cmpsl mov pushf adc (bad) incl pop pop dec and or rep int3 stos jl pop mov jmp aad xchg or jg (bad) jg mov or cmc cs es adc (bad) (bad) (bad) (bad) pushl pop fbld repz lret adc sti pop aad (bad) lcall dec mov adc xor mov push sbb mov xchg (bad) lcall mov push sbb ret cmp jb subb (bad) fstps mov xor or popa push lds or loop incl cli into popf jns push xchg adc lret cmp call cmpl jb ljmp dec jb movl inc inc sar ja lret sti sub call push jmp add xor imul clc loopne aam repnz cmp outsb fldcw stc inc lods jl je xchg flds inc fwait jno add jmp pop adc decb in ret pop cli (bad) (bad) decl mov loop (bad) rcr out cmp mov ret xchg (bad) ljmp pop xor movsl dec mov movsb mov (bad) (bad) lcall and in add dec incl lret enter lods ret jnp std ljmp stc fdivs icebp mov aas pop and mov xor (bad) pushl (bad) mov jne pop jb and inc into jecxz inc out pop pop mov (bad) inc push (bad) mov xchg (bad) (bad) call or xor cmp inc (bad) mov pushf (bad) repnz nop aam pop and icebp inc mov lods cmp bnd incl repz xchg adc mov cli in (bad) (bad) call out and cmp mov (bad) cmpsb cmp ja pop sub push mov xor dec xchg cli (bad) (bad) outsb xchg sbb stc cmp sbb sub mov das sarb jae jne or mov inc outsb std push dec imul xor cmc mov dec pop lcall and std push fs mov pop loop stc mov xchg js (bad) (bad) pushl mov add inc mov xor rolb loopne repz cmp add push add decl mov xlat dec es xlat inc cmp in and into jmp rorl sar adc pop cli sub fmuls in data16 or mov enter add fbstp pushf out ret (bad) (bad) (bad) out xchg mov adc cmp int cmp (bad) (bad) push lock add (bad) adc push cmp lds (bad) lcall inc aaa cli jae cwtl or pop movsb lret mov xor js lock fcomip jmp ficompl xchg adc inc lret mov test jge sbb ret mov inc jnp sub dec (bad) lcall and or sub or das mov xchg (bad) je mov popa cs popa nop stc test and aam addr16 (bad) jg mov movsb popf movsl lea cmpl addr16 rcrb jbe (bad) jg daa icebp push pop xor addl add rcll (bad) xlat xor jg mov jns aas sub leave mov and cld jp cld (bad) (bad) call sub cmp int xchg add lea jl jb sub inc je movsl sub mov incl push sub dec jmp fcmovb call pop add lods pusha (bad) in pop aas and jmp add mov mov adc loope xor inc jp (bad) fisttp push pop xchg add push loope and ret decl outsl fwait clc arpl xor dec test dec inc push jb jo mov into pop cmpl ret mov (bad) jg push cmc jecxz pushf cmp dec pop inc xor fisttpll into mov inc cmpsb sahf mov (bad) jmp mov xchg bound loop pushl xor mov mov fcoml (bad) (bad) call cmpsl mov adc enter loope clc xor adc or (bad) jmp push push int mov lcall push dec add incl mov leave sub je in xchg data16 fisub pushl sbb or inc es jge cmp mov or (bad) mov daa jne mov call nop stos mov (bad) (bad) lcall mov or mov sbb insb int3 sbb cmpsl jne inc std cwtl lods jge push cmp call mov cmp leave jg pop sub (bad) lods add add daa rolb pushf bound iret movsb bound inc sbb xor cmc mov sbb xchg add or incl lahf push int3 lods jbe xlat pop stos ret pop ror (bad) aaa add mov or js mov or lock lods mov mov call add loope and push (bad) ss lahf ret sbb test pop push (bad) fcomip repnz flds inc call (bad) fist fisttpl movsl mov cmp lock (bad) lcall pop ret sbb sub lods jp dec aaa xor cmp fdivp (bad) push push int or movsb xor in in loopne (bad) pushf inc das lcall cmp mov lods movb mov cmp les dec int3 inc xchg fwait jmp mov jno aam stos gs enter and std (bad) call ret mov movsb adc dec pop inc fistp inc incl inc (bad) (bad) (bad) aas adc mov in cmp rcrb gs mov (bad) (bad) inc or jg sahf stos jge in ja sub movsl stc mov inc dec lret call ljmp sahf dec lcall push lahf inc mov xor pushl aaa inc pop gs cmp inc fidivrl sub test (bad) (bad) (bad) jg rolb bound or imul sbb push xchg dec leave (bad) (bad) jmp inc sbb fstpt push mov jle (bad) (bad) (bad) aas mov insb mov jmp fwait sbb insl (bad) push out jnp repz sub adc (bad) (bad) (bad) fild sbb aad mov popf in mov rep inc rorl ljmp (bad) mov push outsl mov adcb inc orb (bad) (bad) ljmp jmp nop scas xor jg mov mov in popa pusha fcomps pop stos paddusb and popf inc adc (bad) (bad) (bad) decl incb arpl add js out test mov outsl add dec enter rolb ljmp jo or pop add int xchg pop fst and adc (bad) xor lcall inc mov xor or repz sbb (bad) call out (bad) lock and rclb mov cmp (bad) (bad) jg (bad) imul test and movsl jg xorl movsb pop fmul jecxz sahf add xchg xchg mov adc xor sbb in in (bad) (bad) (bad) inc sbb outsb sahf ficoml ljmp inc and cmp xchg into notl out sarl sbb int3 test jg insb cmpsb push jo fcmovnb sub mov add or ljmp sbb inc (bad) xor das aam xchg leave push out adc push leave or xor (bad) mov lcall scas cmpsl push pop (bad) (bad) (bad) jmp addr16 movsl aam pop push cld int add mov lcall mov test and incl enter cmpsl fistp mov add daa mov repnz repnz cmpsl (bad) (bad) (bad) decl popf aam loope fisubr dec sbb xchg push mov pop or enter sar decl add jae test inc jne (bad) (bad) incl adc add (bad) adc out aad add loop mov fwait inc loopne lcall sub rorl fstpl ljmp popl das int sub popf add xor imul pop jae add and (bad) decl jno lods mov loop or loope or imul pop pop inc call inc xor das shrb dec cli in movsb sti andl mov mov in sub add xchg cld fcompl daa add xchg aaa lock lods mov ret sub into pop adc mov lea nop pusha aaa cmp in (bad) out mov or (bad) pushl (bad) mov add sbb rorl cmp xorl sbb mov es and cmc movsb mov xlat push rcl popf out (bad) adc popa rorl cltd push xor mov (bad) test sub and (bad) lcall stos xchg xchg add mov sbb push (bad) (bad) (bad) pushl or loopne dec idivb push mov jg cmp icebp mov aas jbe mov repnz inc adc cld jg aam lods nop inc or sbb lcall in add pop insb das jbe mov shlb xchg (bad) out dec int3 xchg mov pop jmp fsts jbe (bad) (bad) incl lcall jmp add ljmp stos orb mov test mov push push xlat (bad) (bad) (bad) (bad) dec sub add xchg push (bad) testb pop inc insb mov stc sub xor jno int3 loope stos mov mov pop xor in fsubrs scas jae mov loopne in incl or dec mov and loop imul aas inc mov jmp mov or (bad) mov lea aas inc pop scas int mov cwtl and negb out mov in jmp jmp call scas (bad) mov mov rcr int (bad) aam jle mov cmpsl add idivl fidivrl or insb (bad) (bad) (bad) inc (bad) cwtl cwtl imul push mov dec add outsl imul fildll cmp cmpsl (bad) decl ror movups subl je outsl (bad) (bad) (bad) call ss sub in incb daa in lcall (bad) cld sub cmp mov push (bad) incl stc jnp jns inc and push fstps pop fwait jl ret jg (bad) jmp insl cmp adc push cwtl mov inc mov mov add jg lret mov inc ss pop addl add adc (bad) (bad) mov or loope xor lods mov mov cmc repnz call mov mov sbb fwait lods push fwait roll mov call mov add fisubrl pusha mov cmp pop jg and dec (bad) call mov mov mov cwtl out test pop (bad) ljmp arpl pop sub mov bound out fdivr mov push (bad) (bad) jmp pop add (bad) gs fiadd loope xor sbb pop mov mov bound (bad) push mov cmp stos loope decl mov push mov mov mov and lock call xchg out jmp jl scas (bad) (bad) lcall adc cltd outsb xchg test inc cmp aad inc mov daa sbb pop sti dec sbb lock (bad) cli mov ljmp inc out test inc cld dec push and (bad) (bad) lcall test xchg (bad) rorl lcall add push dec adc jle jmp aas xor push aad rcrl fistl inc stos sbb js in fcomip (bad) call arpl cmc div or xchg dec call or cltd cmp (bad) (bad) (bad) mov xchg mov ret rcrl (bad) fcompp sub push mov out pop fnstsw mov jg inc cld pop pushf fs xor fs cwtl xor mov or nop mov jo dec sbb fild (bad) icebp out pushf mov inc loop in cmp xchg cmp sub mov mov sahf add or in icebp iret mov shll popa xchg call jmp mov leave and jno or mov sarl dec shl xor ret and cmp dec add aaa xchg es push xor cld (bad) ljmp sbb mov jmp sahf jns add js mov and mov mov arpl aam xchg pop push (bad) incl pop and (bad) mov pop imul imul jmp out xlat repz rolb rcrl addr16 push add subps jns rorb std pop jle mull sub sbb push adc fwait jno into push ss jnp xchg fldl ljmp cmpsb inc jo rcr jo sbb add rcrb ljmp xor stos in add fisttpll dec cs jg ret (bad) int inc sbb dec mov dec cwtl or int aam mov mov ljmp into jp jns pop cld dec and cmpsl (bad) decl or cltd adc out out jo mov fldt cli fist in lcall sub out stos jnp cmpsb and sub test add (bad) (bad) in ja and sub test dec mov sub stc mov (bad) (bad) incl lret sub push jge inc loopne xor ds mov and (bad) call jecxz ret sub inc xchg push xlat ja xor mov imul cmp fldt mov jmp dec lret leave fdivrs mov xchg mov loope or in in loop sub sub clc bound std es in jp push fsts ret test mov call (bad) xchg test scas lds sahf test mov cld (bad) inc inc mov dec out sub and or test iret (bad) (bad) decl mov arpl inc loop hlt movb jmp xor (bad) jmp xchg xchg out mov rclb (bad) (bad) (bad) jg jno jg int add pop fidivl and cmp dec adc sbb sub (bad) ret fs jnp loope sub icebp mulb jge (bad) (bad) jg fmuls push (bad) sbb dec fwait mov push add in inc jns sbbl cmp (bad) fldl andb ret push push pop das or (bad) lret orl add subl nop adc aam lret stc xchg nop pop (bad) (bad) (bad) (bad) cmp pushf stos jb (bad) dec bound jecxz push push faddl dec cs mov movsl cld push roll cmp shlb sbb in (bad) ljmp lret mov ss loope inc jecxz jle cmpsl and push add aad iret das sahf xchg jnp mov loopne leave (bad) pushl test mov pop icebp aaa les int3 mov incl push sbb jo (bad) adc dec or xlat cmp (bad) jns,pt and mov and xchg push and mov dec inc fsubrs xor ljmp pop inc popa ss or in lahf insl out fistl fistpll (bad) (bad) or daa stc (bad) lcall mov or pop js jbe pop mov shrl (bad) (bad) (bad) (bad) ljmp inc sbb pop add scas hlt pop shl jge xchg outsl call (bad) mov loope pop repnz pop push sbb dec movsl jg lcall sbb pop mov movsb es lds (bad) fdivrs mov jmp cmc jne mov dec gs xor dec (bad) sub xlat (bad) ljmp test rcrl sarl out rorb ja (bad) jmp push fisub and pop mov lcall hlt (bad) cmp jl jbe mov jnp mov call jmp fstpl pop (bad) lret adc loop decl inc or pop mov decl jns mov std sub divb sbb xlat in cmp aaa lds (bad) call stos repz dec (bad) call rcrl (bad) inc jo xlat dec cmp clc (bad) jae and jnp fildll xchg stos and adc aas jo push (bad) push out (bad) loop add sar (bad) dec and mov push xchg xor mov or jg cli jg movsb add iret data16 aad adc (bad) incl scas test dec ljmp lds ret sub std pop out jae das cli jmp stos and xchg lods fldcw inc xchg mov xor sub (bad) xchg (bad) (bad) (bad) decl insl sbb sub shl aam adc orl test mov xchg mov and aaa add je jne xor cmp icebp pop (bad) (bad) call mov fcomps sub enter cwtl call fwait cmpsl pop test and test call and mov pop xchg mov scas add fstpt cld xchg dec cmp in (bad) jae mov into mov cmp mov lods inc stos sahf and int3 lods bound pop (bad) (bad) decl (bad) sarl pop mov out mov jg (bad) aas and xor cmp scas or xchg cmp in push cmpl insb adc out adc sub xor sub pop xor xchg js or (bad) (bad) ljmp sbb mov sub push dec sbb loope add sbb (bad) (bad) lcall stos sub jmpw aad std dec inc fmuls pop jns cmp xor jl jge (bad) (bad) jmp adc push and add loop fimull (bad) mov mov mov rcr inc (bad) pushf aas (bad) xor fsubs add sub lcall repz pop cvtpi2ps pop (bad) js mov (bad) call out jge stos popa sbb jo dec or mov sbb add add sub mov cmovbe (bad) incl push cmp xchg repnz push sbb aam jle adc pop repnz cmp std (bad) (bad) decl adc ss hlt cltd mov push loop (bad) lods cmpsb daa mov mov adc popa jmp xchg (bad) (bad) (bad) pushl (bad) cltd loope mov test mov lods js bound and pop dec loopne cli mov cld and xchg sub mov pusha mov xor push jmp dec dec nop gs (bad) push dec enter add (bad) (bad) push sbb daa push mov je mov enter ja sbb pushf int jg std push cmovs (bad) jmp jg adc in outsl repz es dec sub pushf lods (bad) (bad) inc adc (bad) adc (bad) adc cmp lods ja sub lea push mov dec cltd add jle mov fwait add pop inc ja aam pop cld adc (bad) (bad) (bad) (bad) ljmp mov loope sub mov call sbb mov cli decl jge mov sub jns push out push lret xchg (bad) (bad) incl in jecxz push and sub jae push imul (bad) mov shlb mov sarl sub lret (bad) call rcll or popf test ds mov inc rorb xchg sbb (bad) (bad) (bad) pushl mov and in or fcmovnu xchg push sub cmp (bad) mov ds call and sub nop inc dec in mov (bad) (bad) jg pop inc and lret pop jae mov iret shr stos mov cld mov daa into int mov sub fstps dec mov or aaa adc mov call push je lret divl mov into sti mov test push push dec bound call inc cld cmp sub mov into mov cmp (bad) (bad) jle les and push jge xchg cmp mov and decl jg push shl jnp rcrb inc jnp mov sub (bad) (bad) jmp test rcrb xor ja movsb mov jb icebp mov xchg stc (bad) (bad) incl and es stc ret xlat stos mov mov aaa daa jns cmpsb (bad) ljmp int3 fiadd hlt pop xlat mov add pop jno or pop (bad) (bad) (bad) ljmp (bad) repz test dec xchg pop push push arpl dec push mov lret sub lods push sbb (bad) call dec cmc dec inc popa dec jl lods and mov ja lahf xor (bad) (bad) (bad) (bad) js popf sbb (bad) push enter pushf das (bad) pushf movb jle and mov sbb push fs add es ljmp (bad) dec loopne sbb or inc insb scas faddl push add ret mov add push sti movsb outsl mov movsb xor xchg es aad (bad) std (bad) lcall iret aad pop mov movsl ja lret push jno pop mov sbb movsb mov ja leave jbe xor ljmp pop or into cltd iret ljmp decl mov insl iret cld ret jae ficompl (bad) (bad) cmp xchg int nop mov sub scas in ret mov (bad) fildll test orl xor add (bad) (bad) mov adc imul imul decl rclb jle out or outsb leave in sbb bound mov out call incl testb out pop mov add (bad) (bad) incl cmpsb (bad) mov aaa cmp jp pop nop fimul shll scas xor jg push cld call adc cmp les jbe jp and add cli int shll cwtl clc sbb imulb cmp ljmp push sarb pop jl dec icebp outsb sub jmp mov dec sub loop or xor addr16 ljmp dec xchg push cmpsb cwtl sub pop stos xchg lods popa xor (bad) rcl or int mov loopne clc pop cld lcall mov cmpsb or jl lcall insl (bad) (bad) jg int aad addl out sti insl dec imul sar sbb adc push dec sub jecxz mov cmpsb std sbb adc adc ret and mov adc inc inc jp or push mov lods and clc (bad) push push sbb or movsb test in rol (bad) mov xchg ret into add mov jo hlt loop test mov xchg lds cli adc mov jle cvttps2pi cs push outsl iret lcall add sub outsl fdivr test jmp xchg xchg mov loop notb fstpt adc (bad) popf xchg cld (bad) (bad) pushl sub cmp xchg dec js pop scas es (bad) rorb or cwtl adc (bad) ds push sarl adc mov (bad) call bound in test push std hlt dec mov rcrl call clc (bad) call jns rorl aas lret xor jle mov je mov add (bad) jg xor push jp test xor (bad) sub sub cmp (bad) (bad) mov inc aad and std xor (bad) cmp jb push mov cmp call dec lahf mov or cmpsl push mov jg call fisttpll mov push pop push (bad) inc mov push scas subb std ljmp fs or addr16 es (bad) (bad) (bad) incl stos js push in push cltd jbe addr16 cmp mov lods add loop data16 sub xchg dec (bad) (bad) jmp daa dec mov nop in loope (bad) nop jmp int mov stos (bad) (bad) (bad) lcall add mov sti dec jge inc je lahf (bad) in cwtl mov dec cmc pop pusha jmp mov dec inc das push xchg out xor sahf xchg roll sub cli xor xlat xor nop jle cli pusha mov or xchg out or adc xor adc daa inc lret inc sub lds adc aaa movsl test sbb dec mov pushf cmp inc sbb (bad) pushl add idiv cmpsb fildll adc dec lds push insb fnstsw cmpsl dec clc ljmp fildll jbe inc pop cmp (bad) (bad) lcall adc pusha out data16 pop pusha xchg and imulb push int popf (bad) nop mov fwait test sub stos cmp push decl loop xchg movsl sbb (bad) (bad) call dec adc into fnstcw dec push jg mov out xor repz mov xor adc mov sahf les out out nop mov out mov cmp jo fidiv ljmp adcl faddl mov aam push jecxz call fs mov test inc and (bad) mov push mov stos roll lcall (bad) ljmp rolb pop lret rcll movsb pop es out jno inc jo addr16 scas adc aaa imul add out mov (bad) jg dec popl mov push push leave mov aad test (bad) ljmp aaa add add xor in mov inc int decb mov dec fnstenv and cmpsl cmpsl lea (bad) (bad) (bad) incl xor jmp cmpsb jge iret fcoms movsb sub xchg cmp xor xchg push notb (bad) lret (bad) (bad) decl jmp ja xchg push leave xor pop ds dec mov jg xor out shrl loopne outsl ss cmp roll sub outsl jo mov (bad) pushl mov dec movsl das and add decl sbb push scas in xchg pop fnsave (bad) (bad) incl dec or and arpl jae (bad) (bad) jg inc enter sub addr16 or mov aaa dec xchg and (bad) (bad) (bad) call cmp xchg pop push dec fsubs sahf push or es (bad) fwait fs jp mov push loopne (bad) call (bad) out mov push jbe and outsl lret pushf xchg mov adc (bad) lcall or rolb out mov addl test xor mov (bad) cld (bad) incl loopne and push notl mov daa popa push (bad) call cmp imul push adc arpl mov daa push or dec pusha popa add adc (bad) pushl xor fdivs movsb xchg sub (bad) (bad) and sbb adc (bad) pushl xchg lods or (bad) dec fmuls push mov jbe lock out cli pushl dec movsb lret add xchg mov adc xlat mov or call (bad) jbe dec mov lcall mov popa or push out movsl push (bad) stos movsb popf adc fnstenv shlb inc add sbb ret xlat (bad) lahf scas add lea or and test sub jecxz movsl idivb incl dec adc xchg (bad) xor xchg mov stc (bad) (bad) jg pop daa pushf mov hlt and fcomps mov ret out jmp add xchg lock dec push xchg aas jae rorb cmp jmp cmp cmc pop fisubl test and xor sub xchg jecxz (bad) jo sub ljmp cmpsb fsubr aam or mov insl ror jne dec andl pop and addl inc cltd repz mov scas jmp cmp ror cmc mov or imul jg xchg and into xchg cld (bad) cld cs xchg in outsl rcr in push inc test (bad) call fldl pop scas jmp enter imul mov pop sbb (bad) (bad) incl cmp inc cmp fimull movsl ds inc push inc aad jl lods (bad) (bad) mov or movsl dec dec mov or sbb inc or inc dec fldl (bad) jg dec lock adc gs scas gs or idivl add mov xchg or (bad) mov xchg dec cmp cwtl popf xor mov (bad) xchg sub in nop pop mov inc dec mov add cmp sub fiaddl test dec add lcall (bad) call lds jns outsl jne xchg (bad) jbe mov sbb and adc in in in adc (bad) mov jmp xor (bad) xor push out iret pushf push rol (bad) jmp dec inc jp pop push xchg or bnd dec in and (bad) (bad) ljmp mov (bad) jne pop push hlt insl (bad) jbe aam xchg inc es outsl push (bad) movsb clc data16 dec cmp je stc cmpsl (bad) fsubr push xchg adc (bad) (bad) dec pop ret into fsqrt mov adc push (bad) push inc je sub in addr16 lods xchg sub inc xor das stc (bad) fnsave rorl jle xchg ret es (bad) mov (bad) (bad) ljmp jb or inc sbb inc aaa mov in push aas rorl push add mov in jl daa push pop in hlt js out dec addl decl lods xchg imul fwait cmpsl mov outsb popa ja es jg add jl inc lods decl (bad) xor inc mov mov ror jo pusha or loopne xor xor sub (bad) (bad) decl jecxz xor xchg cwtl leave jmp ss (bad) rcr (bad) fidivl pop pop inc dec lcall or mov jno (bad) (bad) (bad) (bad) mov jg je out in and sbb fisttp int3 xor push xchg mov lcall stos jmp scas jno pop cmpsl aaa hlt sub test (bad) mov mov (bad) or pop and in xchg (bad) (bad) (bad) jg shrl fwait (bad) mov xor adc jecxz jg dec in lret aaa aam mov insb data16 rol out jbe test jl push (bad) lock (bad) jle xchg out pop out mov out jmp xor lcall push stos aas aas push ja in in adc mov mov or jbe mov sub and (bad) (bad) jmp mov lock mov out adc inc mov push pop cmp jmp in jns adc aas xchg repz das xor sub push jecxz ljmp call cmpsl pop and outsl sub mov inc int je out cwtl pop addl and addr16 fistl rclb or test inc (bad) hlt mov push sub les scas lret loop movsb arpl xchg lahf jb xor decl inc lret mov scas inc sarb (bad) (bad) (bad) pushl les negb cmp stos cmpsl inc ret mov add jne pop repnz lcall (bad) jno addr16 pop jecxz dec adc (bad) (bad) (bad) ljmp ds ret aad (bad) cmp stos pusha movsl pop nop mov js imulb xchg ret loopne (bad) jne xor inc jmp call fs xchg sahf (bad) mov mov (bad) (bad) (bad) inc mov or cmp inc pop ljmp pusha gs sbb pop imul mov call and or aad fstpl int cmp mov fwait (bad) aad mov push scas ret mov push shll loope pop adc lgs sti decl ljmp xlat push dec jbe jge cmp aas dec loope or jmp (bad) (bad) clc jmp mov pop mov jo or das mov lahf movsl call fsubr sbb jmp push mov dec mov insb and movsl mov cmp mov (bad) (bad) (bad) lcall and fwait out (bad) sbb or or lea adc (bad) xor and das das push and fwait push mov xchg xor mov js pop mov fwait icebp decl ljmp ds push imul stc mov (bad) (bad) (bad) out pop mov rcrb xchg mov fisttpll std jbe mov (bad) (bad) lcall rcl cwtl dec mov dec mov mov imul xchg arpl cld test pop and cs push cs lds stc add jne fucom xor pop add mov call mov push adc add xchg (bad) (bad) sub xor mov daa das stc (bad) ljmp pop mov or fwait into push mov sbb mov (bad) pushl out mov inc sarl in es pop dec shrb sub xchg add fldenv (bad) (bad) fnstsw cld jnp push mov xor adc (bad) lcall sub ret pop sbb add int3 pop dec xor lret lret loopne out in jg sub lods incl push pop push sbb lret and mov cmc cld (bad) (bad) (bad) mov mov dec clc fiadd push jmp aas shll punpcklbw pop add and sub loope subl dec (bad) mov mov outsl hlt loope xchg imul das xchg test cmpsl xor adcb mov pop sub arpl mov xchg daa outsb bound cmp shrl ljmp call dec add sti (bad) in mov jno stos fs push and icebp cmp daa jae mull popa hlt mov sbb das jae push clc (bad) decl icebp jecxz cmp lret push jl add jae add push (bad) or (bad) call (bad) mov mov hlt mov fdivl in aaa cs pop xor movsb mov jo ret xor imul inc sub fimull test jge mov push jno fnop dec mov pop lock cld mov cs out punpckhbw pop sbb addr16 hlt xchg insb ljmp sbb imul stc sub sub das ja or (bad) (bad) (bad) (bad) aam das enter inc lret insb or xchg inc clc ljmp out or xchg pushl js out ja mov (bad) jmp out push into stc add sub adc adc fdivs cmp (bad) or cld jno xchg decl (bad) and pop mov rcrb sbbb pop or mov or jmp mov pop or push fwait lods lcall call call cmp jp adc loope decl lcall pop sub sbb or mov mov mov (bad) (bad) fcompl jno out xor pusha add rep xchg xor (bad) (bad) (bad) ljmp push and push (bad) icebp mov or xchg pop cltd fwait push cmp nop (bad) (bad) lcall (bad) rcrb dec addr16 flds test pop xor fsubrl loope test adc (bad) (bad) jg outsl xchg sbb pusha icebp sub sub mov jnp mov dec jl in adc or add cmpl pushl je pop push mov fadd int3 rol pop incl push mov sbb sub inc popa ds mov xchg xchg mov ficompl pushf add cli mov pushl jno adc pop js (bad) jns loope jo cmp adc gs jg ljmp mov ret movsl addr16 mov jno sti inc inc inc (bad) xor setns pop cld call jp daa and aas mov aam mov mov fdiv (bad) mov (bad) enter push jg push (bad) (bad) (bad) call mov sub fimul mov mov dec sarb icebp out das ljmp or ficom pop imul dec adc cmp dec and or (bad) stc ljmp test in (bad) jg popf aam in orl xchg xor ljmp jge (bad) add cmp loop xor clc pushf sbb sbb mov mov cmp cwtl xchg push push cmc mov pushl or xor adc lcall cli or and mov pop lcall push inc out (bad) bnd and dec push clc inc bound nop and dec loopne movsl outsl imul and xchg fwait xchg pop xchg push imul (bad) cmp mov xorl xor es movl mov xchg fbstp and jmp add popa jns cld inc xchg shlb dec adc (bad) scas mov add pop popf lcall adc lods add push (bad) (bad) (bad) jmp push aaa jns (bad) rcll cmp jp ret xchg imul push and xchg fwait adc pop jmp mov (bad) pop mov packssdw push sbb pop decl mov sub xor mov arpl mov (bad) (bad) (bad) pushl mov out imul fcoml cmp fwait int or js mov sbb push mov mov (bad) (bad) (bad) decl jle mov sbb mov add xor mov mov add aas leave (bad) fstpl xchg mov or inc (bad) std ret cmp aas repz (bad) (bad) (bad) fldenv insb fsts mov lods sbb pop pop mov mov js scas add sbb lcall xor mov mov sub mov pop (bad) (bad) (bad) ljmp mov dec pushl pop jg repnz push arpl mov push cmp fidiv dec dec sti push push jno imul (bad) (bad) mov daa loop leave (bad) lea ljmp (bad) and push scas leave mov pop jb ja das les xchg mov lock and adc movsl mov ljmp (bad) (bad) jg pop mov jle mov out push sub push scas lock mov inc aam mov cld mov lods mov push dec out popa out adc dec aas dec fdivrl aas sbb dec push sub std call or push ror xor and aaa pop xchg icebp ljmp xchg stos dec dec cmp clc iret inc cmp (bad) js lcall mov movsb push mov loopne sarb mov cmp sbb (bad) incl cmc xchg hlt and inc lods adc mov inc xchg sar incl jg push inc imul lock adc (bad) (bad) jg jno cmpsl mov lock pushw pop mov and in mov mov and pusha in sbb dec test call (bad) ljmp adc je pop add sbb mov outsb inc (bad) mov lret add (bad) (bad) jle xor sub cmp repnz (bad) lcall repz out xor mov in repz pop xor push adc pop insb and mov xor jo lock test cmp repnz cmovle lods (bad) arpl popa stc cmp mov push rorl subl test mov lret mov sub mov pusha gs mov pop fndisi(8087 push ret push jg (bad) (bad) ljmp mov and jne es cmp sti loope add cli stc pop adc aam xchg ja xchg loop sub xor push cld into or fimul dec fistp dec fadds (bad) (bad) aas inc mov mov orl shlb cltd icebp mov (bad) (bad) jmp add (bad) adc out sub rorb and rcll mov push ficomp jns test scas (bad) decl enter jl (bad) jb mov mov mov pushf lcall pop mov enter cmp fs iret push xor mulb cmpsl out in and jbe enter dec fdivrs jne sahf mov insl arpl (bad) (bad) lcall imul scas shll mov mov roll ljmp pop lea into adc adc stc pop aam (bad) lcall ljmp lcall ja cltd (bad) (bad) (bad) (bad) call mov add mov mov cmpsl fnstenv test (bad) mov mov add push lods and mov daa shrb leave decl sbb mov aas push mov pop dec adc (bad) pushl pop std mov mov pop cmp loope cld faddl (bad) xor mov (bad) incl add ja insl fidivr sbb loopne xchg xor imul and andl xor (bad) pop pop divb outsb dec pusha lods (bad) mov cld jae inc fldl sub mov pop icebp outsl cli mov cmpsb ljmp mov mov (bad) ljmp xor adc xchg inc (bad) cmp cmp cld sub in (bad) (bad) mov sub out and scas adc fld mov int add incl mov es sbb stos dec push outsl fwait mov adc (bad) in jg and icebp sti in fs bound jae mov test orb mov mov jg cmpsl pop sahf xchg xor jo and sub test add pop imul (bad) test ljmp add js cli gs and lcall push lret je (bad) jg rcr inc int jg dec test add rcrb adc adc pop sbb sahf mov and mov test inc ret mov (bad) (bad) (bad) lcall mov ja or sarl mov pusha dec cmp xchg (bad) jbe shl pop in jbe mov sbb fldl je jbe subl mov iret cmp mov (bad) cmp sbb push xor (bad) inc push (bad) lods pop pop es out jmp cmpsl sar std into clc sbb mov jg call inc mov stc add or cld loope push xor call jns in (bad) (bad) jmp ljmp psubb repnz out or dec fs dec test (bad) cmp jb and (bad) pushf sub aad outsl popa (bad) inc insl mov (bad) decl jbe inc out xchg rcrb scas movsl inc or test xlat dec ljmp lods or adc jae popa ret out pop adcb das xchg push sti adcb mov lahf mov mov testl in pop mov (bad) xor in lret sub fwait xchg pop (bad) lods add dec mov xchg imul xchg hlt (bad) pushl mov outsl dec sbbl incl (bad) and or cmp popa aas lcall add xchg sbb call inc pop push cmp (bad) (bad) incl fidivl xor pop scas push push xchg dec js add adc mov sbb adcb ret decl jecxz fwait and adc pop inc xchg scas adc decl sub inc jae xor xor push out xchg mov jb mov (bad) lcall sub gs jp dec nop lret imul sub nop (bad) (bad) jg cli out inc adc out or js xchg int jb lret jp push dec cmp (bad) push out mov hlt dec adc pushf lods lret (bad) call sub sub loop sub ds jne jno in (bad) dec fst mov mov lea xor addb je stos (bad) pop (bad) call rorl lea or pop mov stos (bad) (bad) jg mov and bound jmp dec jle ds pop in pop pop cmpsb out lret lods pop dec loop or dec jns push ljmp (bad) (bad) out add rcrb adc dec test pop push sub test sub negb mov stc and dec call inc rorb xchg mov call cld xchg push mov sbb (bad) (bad) cld xor xor xchg scas hlt in mov lock daa and arpl int3 rol sbb ret popf push lret mov insb push mov call loop jo xchg mov mov fstpt fwait into inc adc add mov sbb pop mov stc (bad) jg sarb arpl (bad) fnstenv mov jge (bad) call loopne js push icebp iret icebp pop add jo pop sub hlt (bad) pop inc xor stos jmp add insb ss add mov fildll popl add mov repz in (bad) jb clc mov decl movsl outsl inc mov mov jne int3 rcrb pop push xlat stos mov ljmp xchg (bad) decl jo adc loope pop scas pop adc lret nop push mov jo cli cld (bad) (bad) ljmp xor jo and push push adc cld sub adc mov imul aaa int adc sub (bad) mov cmp jle loope loope std movsl cmp fisttpll cmp xchg pop (bad) fistpll jmp or cmp mov and push add hlt sbb (bad) (bad) out cli ljmp gs pop (bad) in pop dec pop and nop cmp push or pop jle lcall int3 xchg inc aam in adc adc stos dec cmp (bad) decl mov (bad) leave and pop lea push lcall decl (bad) sub pop sbb outsb push rorl mov adc das pop push imul xor inc (bad) (bad) (bad) push lods xor (bad) mov adc scas fidivr jl push mov ds pop inc pop or push call inc fbstp ss (bad) (bad) incl aas pop cld cmpsb mov idivb mov or loope pop jno or call fst and mov lcall test jmp push outsl (bad) imul pop daa xor gs (bad) (bad) call inc pop mov mov xchg pop scas cmpsb movsb andl mov lcall (bad) movsb jle xchg fidivr fsts xor or inc add push xchg and into adc cwtl mov (bad) decl lock test xor enter hlt test xor (bad) jg push in into and jle inc cmp stc jbe push push stos xchg (bad) (bad) mov scas lea mov popf loope push (bad) fcmovnb bound das or inc jns data16 inc inc add (bad) (bad) ljmp int cld nop (bad) test or sti int mov repz lret push repz aas xchg ret jmp in inc sub or insb and insl add decb lret aam ljmp push mov inc aam insl shrl pop adc ret cmp xchg or fcomps rcll xchg mov adcl dec xchg sub (bad) jg cmp scas mov mov addb addb add push outsb jno push enter ficom (bad) ljmp sub mov jmp dec bound es rcrb fs and stc insb lahf push (bad) pop in sti mov or int3 pop mov sbb xor xor cmp call aaa push in add mov mov add ja dec (bad) mov aad jg in fisubl (bad) (bad) (bad) pushl pop mov (bad) sbb mov (bad) mov sub repz mov push push scas mov decl pop std mov or add (bad) (bad) (bad) fisubl add (bad) cmc xor xchg push dec and dec add imul into cmp (bad) jmp and sahf (bad) jle push cld pop pop movsl lahf xchg cmpsl lea (bad) (bad) (bad) decl outsb add adcl pop call mov loop daa lods sbb lcall iret sbb lock jbe test xchg mov xchg aam outsl mov ljmp push mov sarb jbe add xor pusha fnop int mov scas push jae xor fwait cmc push mov (bad) (bad) jg or jp int lods iret mov xchg inc dec xor and sbb dec xchg sar scas sarl loope cltd cmp cli shlb lcall mov lahf repnz push cmpsl cli (bad) (bad) incl adc sub inc add add stos sub xor ljmp jbe mov es dec icebp popf push fistp cli jg clc push sub or inc cs dec pop lock adc dec jp in bound dec icebp (bad) (bad) jmp fsubs xor mov test mov cmp ror (bad) (bad) (bad) mov es mov mov mov (bad) (bad) (bad) pushl sub inc sub inc ret jle pop outsb jne xor jge (bad) lcall nop insb mov sub xor stc mov movaps cmp sar (bad) out xchg outsb lods (bad) xor ja ja fscale adc loopne rolb cwtl or hlt lret mov mov subl lea enter (bad) (bad) jmp push test pop iret add lods cli or dec in adc arpl xor cmp add mov sub push shlb fwait mov sub (bad) in imul dec sarl add and jno imul mov xchg cwtl ja dec pop int3 clc mov (bad) inc (bad) jnp pop cmp aam sub cmp imul jecxz out pminsw mov (bad) pop mov imulb cmp (bad) (bad) lcall fistl in xchg mov adc dec fwait gs push mov adcl in mov xor pop out pop inc dec or loopne (bad) (bad) (bad) ljmp repz das outsb loop loopne scas sbb inc or push bound fst call (bad) mov mov mov xchg push das sbb mov mov call push push mov and out mov adc (bad) clc inc ss int fildll mov aaa icebp adc (bad) fdivrp (bad) fisttp mov ret sub pop xor negl inc ljmp push xor inc ret es ret mov and or add cmpsb in ficomp push (bad) (bad) jg mov fs cmp mov push es aaa aad addb lock decl xchg pop xchg adc (bad) or sbb fcomip pop lock sub ljmp and pop nop (bad) arpl movsb test adc mov and ja xor aad xchg jg jg mov inc push ret andl pop dec inc pop (bad) (bad) (bad) call movsb xchg outsb loopne adc fnstsw mov jbe lcall cwtl int cmp popa xchg jecxz aas sbb (bad) ljmp xor mov divl lcall ret out fisubl jno movsb jg cmp lea (bad) mov leave imul jg,pt adc pop adc sahf lods mov in push pushf mov xchg (bad) (bad) mov cltd mov jo xchg mov fwait (bad) out cmp push lahf jbe mov xchg hlt test mov mov mov cmp sub adc (bad) fcomip out xor adc arpl push xor cmp repz (bad) (bad) (bad) jmp adc sbb cmc pop sti cmp cs sub sub (bad) (bad) jmp mov xchg adc jge ret adc xor lcall scas dec test jmp pop pushf and test icebp xor inc sub cs (bad) (bad) jmp sarl mov movsb jg insl in cli repz sbb fldenv pop jp (bad) (bad) mov xchg xchg jg stc imul jge (bad) jg (bad) pushl inc inc pop mov push aad ret fwait pop das or dec lret loope jno pop pushf and lret xor push loopew cmp xchg mov mov imul (bad) pop aam add int3 outsl daa inc pop add aaa dec daa jp (bad) jb (bad) jle stos out add decl repz int3 pop aas ds xor fcmovu xor jns (bad) cmc ljmp xchg add push mov lcall pop loope jp pop out jae mov lea loop push movsl (bad) mov inc mov out (bad) mov stc daa imul cmc pushf adc es ss adcb pop fcoml outsl imul test ja sub mov jnp popa push sub movsl push sbb (bad) (bad) ljmp jno jge lahf pop in mov lea mov inc cmp pop inc (bad) leave and aam lea addl stos and decl add pop popa popf test data16 mov (bad) (bad) (bad) pushl xchg push ret pop test fildll xorb arpl rorb jae lea xchg popa mov jmp dec mov (bad) cmp insl and push repnz rolb mov movsl (bad) decl sbb push mov and jecxz dec mov sbb shrd stc dec mov (bad) (bad) ljmp jl (bad) mov movsl out loop (bad) xchg and flds lcall push add jae addr16 mov (bad) (bad) ljmp fs and mov and fs decl fwait mov sbb jne and in pop je push ret mov jns sub inc push push dec div fucomp jg aaa (bad) (bad) (bad) decl loopne mov fs test cmp mov pop mov enter cmp sub repnz adc lret cmp mov and (bad) dec mov (bad) (bad) (bad) inc pop sub pushf xchg add cmc dec and popa jne iret lock (bad) jg imul int movb mov lea mov jae mov xor (bad) (bad) mov mov jg sbb mov add mov arpl iret imul pushf jne (bad) add pop cs lret pop (bad) (bad) (bad) inc lea (bad) in jbe xor nop jmp lcall sbb loope fwait loope and (bad) call clc and idivl cmp push and push (bad) (bad) (bad) (bad) jnp fiadd adcb rcrb ss jge jp sarl out add (bad) (bad) jns pop sahf loope aam adc outsb lock dec push loopne or (bad) (bad) (bad) jmp push ljmp ffreep rorb pushf xchg jb push shrb xor cld jg call adc push imul lds call lods cmpsl aaa dec jae push jmp (bad) call dec pop je rcr and push push xor xchg and add (bad) (bad) incl movsl xchg mov addl pop (bad) xor jns movsl push and stc sbb dec add (bad) decl hlt push outsl jno dec call (bad) jo ret ret (bad) mov out lcall sbb xchg add loope and lcall ljmp dec outsl xchg dec call (bad) (bad) (bad) jg mov inc inc lcall (bad) arpl jle (bad) (bad) lcall lods divb jge sub repz pop scas rorl sbb mov (bad) mov incb inc inc popf hlt mov (bad) decl movsl sub adc dec stc rorb mov jmp sarl addr16 mov pop xor lcall lcall jl jns xor and mov daa das push js outsl std (bad) jg mov push xchg and jle in mov lock mov mov xor cltd xor out movsb sbb pop loope mov jne pop testl mov xlat push add sahf (bad) jmp (bad) sub in inc icebp sbb and ds dec (bad) (bad) dec pop divl jle jnp in ret (bad) fcmovne pop hlt (bad) mov jmp or cs cmpxchg mov xlat mov sahf out inc push cmp leave jne jp xor jl cmpsb (bad) jmp sub push lcall jmp in add repz or xlat hlt call sub push (bad) xchg js mov imul (bad) call lahf (bad) aaa inc xchg addr16 in sbb dec adc movsb cwtl ljmp insl imul inc (bad) decl lods pop mov cmp jp sub pop inc mov sub incl pop add in fsubl (bad) jg push out xlat mov inc fstps mov cmp and jns (bad) call ljmp clc cmp outsl mov fild inc and mov mov dec xor pop mov stos fild notl aad call pop out pop or sub fistpl xchg aaa jg icebp ljmp daa (bad) insb pop dec cvtpi2ps sbb inc (bad) popf sbb (bad) cmp pop dec test xchg mov ret jne (bad) (bad) (bad) jmp push push push mov ret xorl sub and inc stos imul pop outsl cmp mov pusha push add xchg cmp (bad) lcall ss sbb adc mov cltd add dec shrl xor (bad) decl push adc sub pop push xchg cmc (bad) sub repnz cli (bad) (bad) pushl in pop imul (bad) (bad) (bad) (bad) adc (bad) sub (bad) jmp mov fbld sbb shrl (bad) ljmp cs (bad) call cmpsl push xor xchg add sbb or cmp dec out fwait (bad) (bad) (bad) (bad) out outsb aam in xor pop inc add jmp jg xor inc lcall xchg sbb bswap loopne jecxz fyl2x (bad) std stos jmp mov mov (bad) (bad) push mov cmp hlt and adc push pop pusha jno shrb fldt out xlat dec std test mov and into xor xchg std (bad) decl int and pop cwtl (bad) (bad) jb mov xchg mov add pushl ret stos or in cmpsl out outsl data16 iret inc int lret adc data16 and (bad) mov popa stos out xchg jp inc shr sbb xchg cli pop das sar cli mov sub cli (bad) cmp add add inc xor push inc in imul pop inc ret adc rolb jo (bad) (bad) jmp mov rolb or jns enter or dec pop iret pop sbb cmp aas push (bad) pushl and and jns cmp scas orl (bad) (bad) cmp xchg fistpll jecxz sbb pusha sbb xor cwtl and jnp sub mov stos shrb nop jno jnp dec push jmp or sbb ret (bad) (bad) (bad) lcall mov out or and mov sti (bad) dec xchg dec push sbb or mov popa inc (bad) (bad) (bad) (bad) stc cli pop std cmp jb mov stos and adc dec pop mov rorb or das stc sahf mov cmp jbe (bad) (bad) lcall xor add (bad) mov scas add jo xlat or xchg mov jp sub dec jle out xchg je jmp cmp sub leave push out movsb mov fwait cltd sti inc mov (bad) je cld mov adc (bad) inc jbe ret xorl inc (bad) cmp clc divl int jno jmp (bad) xlat mov push std and xchg (bad) (bad) (bad) decl ret jp shll call rcrb out push pop sub lret ljmp stc (bad) cld int push cmpsb icebp push or stc ss popf enter movb (bad) ljmp push cmpsl xchg cmp jge insl movsl jno jp and cltd incw and out cmp movsb and cwtl xchg jbe (bad) incl scas js loop jecxz outsb nop jbe pop push pop pusha push sti mov cli out push data16 pushf sub push ret out mov mov mov jae aaa jmp ret mov sbb popa das dec bound lcall mov out negb sub in or lahf (bad) jg inc ds scas xor mov lods je cwtl or sbb (bad) les daa mov faddl (bad) (bad) (bad) jmp repnz lret negl push pusha lahf outsl dec mov jl (bad) dec xchg and (bad) dec test adc dec repnz test lret clc xchg or (bad) (bad) cmp test mov or (bad) or (bad) (bad) jmp dec pop sbb rorb mov mov (bad) mov repnz leave (bad) sbb imul outsl iret push loopne pop rolb movb mov decl adc hlt jne in iret cmpsl repz outsb mov mov jbe mov dec xchg ret outsb jns sahf (bad) decl enter out hlt ficompl mov lods add push jl sbb add mov cmp add inc mov (bad) (bad) call mov dec and int3 andl xor (bad) (bad) mov cmpsl mov mov cltd xchg xchg je mov sbb adc dec jae pop hlt (bad) jp rorb and pop mov or movsb mov mov (bad) aas mov test movsl (bad) jb push xor test pop sbbl (bad) (bad) call adc pop stc rolb jbe insb sub pop xchg adc add sbb repnz and ss ljmp sti pop inc inc rolb lret xchg lock jge lods mov aad or test xchg aad (bad) and push jo sub jecxz cld adc pop mov sar (bad) (bad) out sbb popf cmp dec cmpsb out xchg rorb adc (bad) sub mov pop lock cld out cmp mov cmp xor (bad) ljmp fyl2x popa pop or sbb inc add push (bad) (bad) jg scas sbb mov adc out popa sub cmp add push test ret dec xor adc incl xchg cmp out pop (bad) popa es jne call repz jg test cwtl icebp shl hlt es lods mov mov imul mov ret sub ss imul (bad) cmpsl incb call pop inc mov into push rcrb (bad) (bad) (bad) cmp push jnp out pop dec push xor push cmpb adc rcrb das stc (bad) ljmp enter jae pop in (bad) sbb dec jl gs and cmp cmp pop fiadd in mov xchg mov insl add dec or jae cltd shll ljmp ret mov fwait rcrb incb pop jne (bad) incl adc xchg mov dec dec or int in mov decl cmp and mov addr16 jg in push aad push mov xchg aaa dec dec push pop cmpsl mov inc jno (bad) dec shl (bad) sahf inc or xor adc (bad) (bad) pushl cmp loop roll xlat jmp mov int3 dec cwtl sbb push xor jecxz inc dec (bad) ljmp and loopne bound sbb pop loope cli aad pusha fxch (bad) mov sbb xlat jb sti cmc je into mov xchg cld stc mov sar and ficoml cmpsl jns xchg mov (bad) in adc movsw enter push into mov (bad) (bad) (bad) call dec stos mov jmp inc sub dec and fisttpll and jns shlb enter call gs fs push sahf jns call mov push adc sub (bad) jg rcrb xchg push pop cmc jne add loope push repz (bad) ror sbb mov cld lcall int push adc inc cmp inc (bad) (bad) decl mov ljmp push lods sub insb push pop jno mov jo inc push (bad) (bad) mov in mov insb mov out daa inc mov lock adc (bad) call lret push push mov push push repnz mov lret mov (bad) (bad) (bad) xor outsl push cmp mov ja les xchg sbb je aam iret push (bad) jg inc xor jae or push cmp (bad) jmp mov xchg dec loopne pushw sahf adc imul jmp push mov push add push mov push inc std xor stc cmpsb int scas add cmpsb (bad) pushl movsl sbb sti mov cs imul sahf inc jg jb repz (bad) ret mov in pop add add inc fnstsw aaa movsl jg mov pop pop push jg inc test jg (bad) (bad) aas jmp lods mov (bad) xchg fidivr pop jbe cmp pop fildll mov adc and sbb js (bad) (bad) (bad) mov xor repnz xchg test mov cwtl cmp mov push push (bad) lcall sub imul daa iret xlat lock jo jmp lock js inc and jae call rcr in movsb lret (bad) sub dec ds jbe mov mov pop mov (bad) sub jle (bad) (bad) mov mov outsl mov inc sub (bad) ljmp (bad) mov sub int stos mov fnstsw xchg iret mov (bad) (bad) (bad) cmp movsl pop aas dec gs insb sti notb repz push jl shrl xor repz (bad) aas inc adcl repnz aad fwait dec popa fistpll mov (bad) pushl xor int and shrb jmp mov and push movsl (bad) (bad) (bad) lcall xor mov sahf ljmp pop add adc ret hlt (bad) mov push rol mov (bad) mov mov mov jb dec fmull lea sub dec lea loopne jmp push repnz pop pop inc and inc imul fisttpl ret adc xchg sbb rclb (bad) (bad) (bad) (bad) mov fwait aam in mov xchg insb popa mov jmp loopne daa mov or jmp (bad) cmp test or push push pushf xchg push leave cmpsl shrl icebp sbb stos sti adc xchg aaa mov push pop call and push xor cmpl sbb mov decl dec arpl roll jb inc (bad) jno (bad) (bad) ljmp add pusha loopne (bad) pushl mov xor fnstsw sub imul jp pop xchg bound test test lock (bad) ljmp dec and fidiv xchg (bad) mov jbe decl sub lret push and pop mov aas add and add sub add fbld (bad) decl pop cmp sbb xchg sbb imul jno push imul cmp dec imulb mov push push adc or xlat fstpt dec dec das cmp pop test ljmp adc mov adc in jmp nop ret or jns inc (bad) add pop js insl xchg (bad) (bad) ljmp add data16 mov jg or mov roll dec mov pop xor lods mov sub add and arpl (bad) jmp inc sub out roll xor lods add mov lds cmpsb scas inc hlt (bad) fisttp dec cmp sub mov sar (bad) incl mov adc shrb cmp aaa jmp mov fldt xchg pop hlt shlb xchg push dec imul fild cmp incl adc (bad) mov daa es std (bad) (bad) jmp dec sahf push inc out and adc push inc mov rclb inc loopne scas movsl rorl jmp push lock push cmc je dec out sub xor dec cmp mov or pop xor xchg popa testl testb sbb add gs xchg xor jnp fyl2x xchg xchg mov (bad) lcall xchg inc out jnp cli mov inc pusha (bad) fistp mov out sbb pop fs aad int dec cwtl shr andl sbb test lcall int fdivrl cmp in mov (bad) (bad) decl inc pop je rclb xor dec sbb mov push fldenv rep sub das cli fildll inc dec xchg sub into (bad) (bad) mov mov (bad) repz add pop xor cmc aam (bad) (bad) call pop fild pop push or xchg sbb in (bad) push adc pop pushf mov sub das xor stos mov (bad) mov inc mov or ja adc mov loope (bad) (bad) call aaa lds icebp daa fsubl xor jmp push xor fwait xchg lahf xlat xor and dec fidivl jg jns sbb jne ret xchg mov (bad) pushl std jp pushf rcrl or icebp data16 xor dec push (bad) mov add adc repnz sbb rcrb (bad) (bad) lcall addr16 sahf dec cmp pop cmp push fs negb lcall bound outsl or arpl (bad) (bad) (bad) jg sbb adc cmp inc xor push adc (bad) pop jns int lea leave cs jecxz (bad) (bad) push pop movsl sub mov jo mov push mov repnz fisubr (bad) (bad) (bad) mov out (bad) sbb outsl mov add xchg pop xor jnp in ja xchg inc xor jmp shlb sbb outsb into call mov xor fnstenv or add call jle mov ficoml inc fs rcr jle jnp dec mov outsl push push cmp fsubr (bad) ljmp mov xor popa push inc (bad) jns jg mov pop cltd fadds jge testl jb mov inc js ror sub daa push nop std imul jg es movsl (bad) (bad) (bad) jmp jo mull push fnstcw test popa and (bad) aad mov ja jle icebp pop xchg (bad) (bad) ljmp push (bad) fiaddl sub jae dec pop stc cmp adc mov add fisubrl mov es mov sub adc int3 pushf pop (bad) decl adc test (bad) xor test add scas lods js stc xor dec movsl cmc adc je push adc and jle (bad) (bad) lcall xor push (bad) cmp mov xchg add jno bound or enter jmp repnz incb (bad) nop jg pop insl stos ss (bad) out and (bad) (bad) (bad) fsubs in xchg jp xchg or outsb lds scas pop add mov movsb sub jb out fmulp cmp mov xchg or or leave outsl (bad) (bad) (bad) jg dec xchg in mov bound cmp (bad) imul dec je jbe xor ror (bad) (bad) call mov sub mov lds jge iret stos (bad) (bad) (bad) aas scas lds xor xchg mov adc jb jne dec test rol nop (bad) (bad) pushl hlt mov xchg stos sub int3 test jno adc and daa xchg lsl in das movb outsb xchg sub into dec or lahf and mov enter fildll (bad) (bad) lcall cmp jg scas popf push or test mov aas in mov test jns jmp sub push ja cmp cld fisttp (bad) (bad) (bad) mov push sbb xchg inc sbb popf sbb mov fsts adc leave (bad) fsubl jb pop sbb enter cmc jp cmc fs dec lcall (bad) mov xor sbb inc sahf fidiv int3 pop add push lcall (bad) (bad) call push mov xor addr16 std lcall adc (bad) (bad) jmp inc cmp cmp loope les dec in mov xchg jg (bad) (bad) decl push push fsubrl mov scas repz stos xchg push sbb pushl mov aam lds fwait mov loopne dec mov (bad) out xchg pushl push jecxz aad mov stc fucomi (bad) jp inc pop or ljmp out inc scas push (bad) (bad) jmp push xchg fs shr clc push dec aas jecxz sbb inc push lea inc xchg test (bad) (bad) (bad) ds push push rolb pop xchg push popa xchg jmp loope mov aas (bad) push mov (bad) (bad) dec xor dec mov leave mov mov (bad) xor and cmp xor push (bad) cli (bad) (bad) lcall mov push fsubp gs fwait adc es pop sub mov jp xchg inc pop in lock insl push xor out stc cmp push (bad) jg and sbb xchg mov (bad) jb mov mov and sahf (bad) (bad) (bad) (bad) (bad) inc cld sbb gs mov mov jl add jecxz add (bad) cmp mov fldt (bad) push jo sar (bad) (bad) ljmp or les push test mov test movsb add leave rclb cmpsb ficomp mov mov (bad) fiaddl mov mov js mov cmc (bad) pushl test addr16 lahf xchg dec xor lret xor js test cmp xchg xchg push je jnp data16 jmp aad imul lahf outsb loop arpl inc cli pop lock sub (bad) (bad) (bad) inc sbb or ds mov ds iret sbb jmp ljmp mov pushl pop cmp pop jb arpl aad mov (bad) jg lcall adc adc sbb mov imul outsl jns mov ljmp adc in xor fldenv enter mov sub ljmp and fdivrs dec je and das clc pop pop xor dec out add mov push xor hlt call roll mov mov sar inc ret inc test cmp sbb jbe jle add (bad) (bad) mov cwtl lcall jbe or xchg test ljmp test sub sbb notl and add jmp xor jnp stc mov cmpsb rorl add push or mov sub cmc outsl dec aad ss stc xchg pop fsubrs mov (bad) jg ficomp dec lcall test sub dec test call out mov (bad) incl and mov mov scas data16 int push sub jne or call push and and (bad) lcall idivb movsl adc mov int3 (bad) sbb dec cmpsl movq add (bad) hlt fnstsw fisttp mov jmp mov lret mov sbb lcall mov cld push push insl or cmp (bad) repz jae cmp lods fdivrl and xor sbb mov mov imul (bad) or loop (bad) call rclb fnstcw pop mov jae ds in cmp adc dec out xor dec fptan rclb out mov (bad) (bad) (bad) push jnp (bad) xchg mov add fild adc lcall or jmp cmpl test mov xchg mov pop (bad) aas test pop out inc int lcall out cmp (bad) (bad) lcall leave mov xchg or outsl inc loopne push mov inc fwait test xchg imul lock push mov fnstenv xchg pop dec pop (bad) call dec xlat sbb ftst mov push add add jmp (bad) lcall pop or and mov jbe mov dec out (bad) (bad) pushl fldcw scas cmp arpl sahf fnstenv adc push not bound mov repnz mov lea push inc sar (bad) (bad) jg daa sbb pushf popf cmpsb orl push addr16 mov sarl out lret popf or aad std (bad) decl bound mov xchg mov ror xchg inc mov into ds loopne inc pop sti inc cmc lds (bad) jmp aaa push call mov cmp xlat jne mov cmpsl sbb (bad) (bad) mov shll mov add fidiv js (bad) (bad) (bad) cmp add insb lods in int3 mov iret jo (bad) mov test inc pop or addr16 push push test fs sub sbb popf pop (bad) jg clc cld or popf mov push and xor adc (bad) (bad) (bad) decl ds cmc jne insb testl fwait jg dec lods inc test sbb mov fldl mov sbb sbb xorb fwait (bad) call pop stc in aaa lea ret movsl iret fsubl add ja,pt (bad) pusha fmuls icebp cld out sub jp add add pop sbb rcrl jmp dec inc incl cmp ret xchg out (bad) pushl daa mov and pop js xor cmpsb mov pop add (bad) fcompl call dec inc and rorl push clc ljmp scas cmpsl xor xlat loop push das repnz in xor mov test (bad) (bad) lcall ret cmp loope test push pop cmp push cmp mov xchg xchg (bad) ljmp mov and push cmp aas push jo xor inc pop test add or cwtl sahf lods mov (bad) jno pop or in pusha (bad) (bad) mov hlt test stc xor and pop dec lret cmp (bad) mov (bad) jp ret adc lds inc add xor (bad) xlat cmp test pop sub rolb int3 popa test idiv jno (bad) mov dec test pop add or movsb push cli lock (bad) lcall lds mov addr16 leave jp lcall enter out cmp popa add data16 pushl inc jae lods jae cmc jl push xchg dec je dec add int3 movsl pop sbb ljmp adcb pushf cli (bad) jbe stos mov in mov test fwait test icebp xor or iret xchg (bad) and sti lods mov adc les mov bound or stc aad dec int3 jnp jge push add (bad) decl xchg push rcll and mov mov mov ret ret into jmp lahf in lcall dec pop dec mov jg stos xchg sub mov cld (bad) (bad) (bad) pushl and xchg ds xlat outsl std or or push push in add xor push xlat pop sbb pop mov sbb lahf (bad) divl (bad) (bad) ljmp jp dec test inc ljmp sbb or ds dec (bad) (bad) pushl jns stos cltd mov cmpsb pop xchg dec in inc mov lea sti (bad) (bad) call pop int mov add add cld pushl xchg sub mov mov mov imull sub jne (bad) adc and xor inc jge rorl sahf rcr popa out rcll jnp or (bad) mov sahf int pop lea test xchg out scas daa lds je (bad) jg (bad) cmp push cli ret adc inc fs insb fsubs and dec dec mov (bad) (bad) (bad) call lods mov add pusha push cmp mov push test and push cli bswap incl mov pusha nop push lea mov (bad) mov pushl es or mov sub das mov sbb mov (bad) call xchg mov jmp or aam nop je ss das (bad) (bad) incl cmp jle rcrl lret pop enter mov into fcoms pop scas test decl sbb inc ljmp cmpsb loopne mov mov out cli stos (bad) sub icebp push mov mov push std (bad) jg xchg icebp jo movsb out enter dec cmpsl ljmp and idiv mov vcvttps2dq sar mov mov cmpsb test (bad) (bad) call inc in cld dec jg,pt jne loop jnp add dec mov cs sbb mov out cli call or mov in int3 jbe or lds call leave xchg mov or pop xchg or arpl into insb mov (bad) (bad) (bad) jmp movsb leave inc add das sbb cld das xchg (bad) xor int call jl xchg repnz adc push popf pop imul (bad) call or jno shrl ret ret push test and cld decl push xlat fcmovne push lret and insb mov (bad) idivb xlat stc pusha inc rorl xchg lret xchg (bad) xchg xchg jo jne andl aad out push pop les loopne ret lods clc and adc sub cmp cli (bad) sbb pop popa push sti sbb or pop (bad) fmuls adc add inc rorl dec cli outsl (bad) incl imulb jmp loope mov push adcb nop loopne sar (bad) (bad) ljmp mov fcmovbe pop jecxz jge fstp sub pop push int3 out lret xchg adc lods pop ljmp xor mov divl pop rcr call jmp aaa sub cmp mov cwtl adc xchg fdivp out imul pushl in mov jl pop arpl fildl push std (bad) aas push jecxz push mov movsl pop movsl scas pop repnz push (bad) (bad) call cmp or mov sbb adc jbe imul jg clc sti notl cmpsl mov in aam (bad) (bad) out mov outsl push pop jno sub nop push pushl hlt lret mov mov in mov repz ljmp inc pop sbbb or fwait cltd scas stc fstpt (bad) (bad) (bad) lcall jecxz shl sbb push insl mov sbb icebp mov lret lahf ret in test sbb fs cmp (bad) (bad) jnp out loopne nop out jo shr cmp mov sub pushl cmp (bad) lea pop (bad) lret fcomi out aaa (bad) jmp or xchg mov mov pop cmp pushl push lods sub out jl dec xchg mov cli pop stc lcall push sahf loopne test pusha stc gs xor scas loop mov lock mov call aam mov push das or pop test dec cwtl pusha mov popa (bad) cs cmp sub ss dec aad sbb sub bound or xor mov jge pop out aad or js sub dec je and and loope out imul mov sbb arpl push out lods dec movsl cmpsb inc jns mov xor xchg dec out (bad) ds adc mov int3 jge and (bad) pushl add xchg push pop mov jb xchg or movsb aad mov inc test mov (bad) (bad) call (bad) cmp push ja test leave sti cmpsb cs and lods test or jmp pop leave js cltd pop lret pop stos pop (bad) (bad) jg das pop in ror movsl pop ret icebp lock lea and outsl jbe sub sub enter adc xchg js cmpsb push (bad) or jne (bad) (bad) (bad) jmp push out push ja mov cmp push push or push negl or nop aam aas leave (bad) (bad) cld adcb inc jmp jmp in fnstenv sub (bad) decl aam and jle imul dec fst push orl lds jg (bad) incl xchg cmp test mulb sub push sub (bad) (bad) decl adc mov or cwtl and pop nop cmp sbb ror xchg rclb mov cli jmp mov add sbbl sahf xor and dec test jle (bad) and cltd pushf (bad) (bad) (bad) jmp fdivrl xchg fucomip cmp cmp inc clc js fwait jb push ret mov pop push stos es (bad) aam or push cmpsl pop sub inc cmp cmp (bad) (bad) (bad) stc icebp sbb mov sbb into xchg popa arpl sahf out mov mulb mov lcall jmp lods pop add addr16 in fucomi inc mov add (bad) (bad) (bad) lcall mov xlat jno xchg dec cmp xor (bad) mov pushf (bad) ds cs dec rcrb repnz jmp sub fwait rclb rcll pop int mov mov ljmp xor xor add fldenv subl push xlat in adc decl push xorl ljmp inc mov out mov and in jne fwait (bad) pushl jmp cmp ret push out fsubrs mov das xchg mov test lds ljmp clc in lods (bad) mov scas fistl and scas or sub aaa sti pop addr16 xor (bad) (bad) in jg out in das push (bad) pop jnp mov sahf inc andb sbb push push mov js int3 pop out (bad) mov sbb push inc jne mov dec mov xchg mov inc repnz jno sbb cld (bad) call push daa push lock mov push rcll pop into pop pop mov out sbb mov ret pop pop fwait in xchg jb (bad) (bad) incl dec nop movsb pop pop ret mov mov jle loope sbb mov decl adc cmc and mov fs mov ljmp (bad) outsb lcall add ss mov xor xor cli jl hlt dec cmpsb ss (bad) ljmp inc and pop and xchg lcall mov int3 cld (bad) (bad) ljmp push adc punpckhwd outsb push cmpsb add cmp adc out adc cmp (bad) cli ss (bad) jmp loop enter scas mov and lret push jno xchg jo (bad) jg fcomps inc lret jg adc xchg aaa add (bad) (bad) jg fbstp or cwtl mov cmp into int3 cs les (bad) (bad) (bad) (bad) ljmp jbe ret mov mov inc xchg sbbb sub rorb in mov pusha orb ret outsb inc inc notl push sbb (bad) (bad) lcall in daa xor jo mov push mov cmp and jmp push out sbb lods jge popa pushf (bad) leave dec sbb cmpb push xor xor int (bad) (bad) ljmp push iret pop mov dec into in pushf jp sub sub or and xor fisubr cmpsb cmpb (bad) (bad) (bad) mov das shll sarb mov andb cmp mov pop ljmp sub or mov lcall mov sbb jo movsl pop xchg xor idivl mov (bad) (bad) (bad) decl loopne dec ret adc jae jmp into push out cmpsb sub xchg (bad) push iret orl mov push (bad) (bad) (bad) jg lret jl mov xchg mov jno mov arpl cmp sub jmp decb arpl std mov pop shrb dec mov (bad) (bad) jg (bad) jmp mov aad push shr cmp cmpsb xchg pop int3 out push pop mov adc insb sub xchg insb or mov ja loop (bad) (bad) incl mov (bad) arpl sub in pop mov mov ds mov dec cmp (bad) divl pushf repz repz jmp test fwait data16 adc call arpl mov pop xor dec cmpsl dec cmp sbb or and mov dec (bad) ljmp adc sbb imul lea test jae or inc pop es jbe pushf xor pop mull stos mov ljmp xor sbbl or mov sbb aaa and call notb fdivrp test idiv (bad) jg stos fsubr mov dec js xorl scas (bad) hlt mov test jg mov ja rorb add jb mov ljmp add (bad) xchg adc adc cld jbe cmpsb movsb scas xchg leave cltd inc sub (bad) sbb jg cli shll aam dec pop sub dec add dec cld incl jbe mov fwait dec lret inc push (bad) jg sbb std jnp mov lcall and cli mov ret lods jge int3 repnz incl push add pushf pop fcomps push sub push aaa and pusha cmp (bad) (bad) pushl add ja es lds nopl mov (bad) (bad) lcall lret jo jecxz lds xchg in and in sbb inc pusha jecxz (bad) (bad) ljmp dec and mov push insb in cmp push lods add fwait or (bad) jg pop movsl outsl push cmp out adc inc and hlt cmp add mov dec ljmp loop scas inc cs add mov test mov pop lahf rorl (bad) mov pop push bound xor popf (bad) dec ljmp fucom movsb sbb cwtl iret xchg dec je setno sbb mov test cli cltd repz sahf pop mov (bad) repz movsl jp,pn add adc popf sub mov leave subl lahf repz (bad) mov (bad) mov (bad) push hlt mov mov adc sub cmp enter stos xlat ljmp int3 dec repnz inc bound pusha jle (bad) jg cli add xchg xor lods pop jp jp mov sbb clc dec movsl dec jecxz aaa adc leave adc pop pop gs ret inc push stos xchg repnz (bad) push xor (bad) (bad) (bad) incl loope lock xchg (bad) pop jmp cld bound loopne test push dec add cltd jno or stos and mov push (bad) mov scas rcll lcall pop cs lcall pushf mov cmp out inc push std (bad) (bad) pushl add outsb cld pop pop cmpsb or (bad) adc lea bound cmpsl pop xor aas and xor jo div adc (bad) (bad) decl xchg enter imul jbe sub push hlt popf loope xchg pop icebp gs repz inc scas add mov inc cli ja mov push in (bad) mov xor gs sub (bad) (bad) jmp xchg es cli add pushw inc xor or iret or mov lret test pop mov jmp jg sub add fistpl mov pushf int (bad) (bad) fisttp fildll and sbb in cmp mov add aad jo add (bad) xchg mov mov in pushf mov (bad) stc fwait int3 dec pop push scas (bad) pusha testl mov insb mov push jno lods test scas adc push jp mov add pop push and jmp xor aad push xchg sbb loopne icebp mov jb mov mov mov sub bound loop mov imul cs int test fisttpl outsl mov movlps (bad) (bad) (bad) (bad) call fs sbb aad ret imul sahf dec cmp sbb decl jmp fcompl jl imul inc mov ret mov (bad) mov dec xchg lcall daa movsb xchg sti (bad) daa mov pusha ret lret push lcall or jno cwtl cmc out add mov jge push add sar (bad) pushl and add and mov lret mov outsl int3 das movsb call ljmp lret mov movl sub (bad) ljmp in jno push pop push push mov xchg cld sar (bad) (bad) (bad) clc outsl imul (bad) fnstsw jns aad mov lret and sbb sbbl mov adc sahf or and (bad) pushl sub push and add or hlt jne jmp (bad) pop cmpsb std nopl sti imul outsl (bad) (bad) (bad) (bad) cmp and cmc cwtl (bad) xor rorb inc xchg rorb negb aaa and (bad) lcall fwait add inc jle scas cmc push repz clc add mov aaa std (bad) jns push mov xor push xchg out dec xchg ret rcr xor cli (bad) (bad) (bad) jmp push mov rorl sbb insb sbb aaa mov (bad) mov (bad) jg mov lea test test (bad) (bad) lcall aad jp cmpsl and out mov arpl hlt push inc nop popf cmp call fild inc xor std mov nop pop test (bad) (bad) lcall xor xchg adc repz dec iret jo es rol cmpsl xor sub push xor cmp mov push mov cmp out jle movsl fdivs inc push pop mov pop or jmp mov cld (bad) nop jb in xchg sbb xor xchg rcrb aaa or hlt aad scas xchg xchg js fiadd popf mov gs aad (bad) jg scas xchg (bad) loop pop adc push sbb imul mov (bad) (bad) call in icebp cli fwait xchg dec jno inc cmpsb pusha insl mov pop gs xchg adc faddl sar les xor mov jne sub adc shll mov loopne jmp xchg adc insl lcall adc stos je push out outsb and popf inc out fbstp outsb test insl movsl out or lcall incb dec pop dec int3 mov add mov inc mov (bad) lcall xchg fwait movsb xchg jo insb mov sbb js in mov dec jbe ljmp pop push sbb mov idiv cmp (bad) (bad) (bad) call mov mov adc aas ja cmp (bad) sbb movsb cli inc inc movsb xchg pop movsl (bad) lret stos es mov jle push (bad) (bad) (bad) mov xchg push adc add xor jb cmp or in (bad) repnz (bad) incl movsl daa loope ljmp inc xchg or xor dec cmpsl scas adc jg movsb add pushf dec push daa and rolb xor inc (bad) dec loopne movsb mov jg inc aad add adc daa pop in jne ja sar jmp pop sbb leave stos fiaddl mov sar mov movsb lcall pop jmp pop cli mov ss pop and mov push iret jecxz sbb (bad) (bad) pushl ja,pt fisubrl jbe ds push or int into test dec ds xchg mov jbe aaa rol call adc sbb sub adc into lcall lock and je or mov incb (bad) (bad) (bad) ljmp loop addr16 inc add stos movsb cltd mov add add sahf ds xor (bad) mov cwtl js jns (bad) pushl repz adc loopne adc (bad) (bad) (bad) (bad) (bad) jmp xor or (bad) jae stc pop cmp mov dec mov aas push mov xor int ds int mov push pop lods (bad) (bad) (bad) jmp (bad) sub and mov cld inc imul xor xchg mov cs (bad) cmp mov and dec sub jae sti cmpsl and jecxz xchg sbb stc add cmpsb fcompl mov test inc insl arpl ss cmp popa pusha push stc aaa dec push fnstenv jecxz and lock (bad) (bad) ljmp outsb push mov jl jmp lcall nop mov mov bound xorl xchg sbb sbb jl lcall decl sbb mov test enter xor loopne in sub ret in mov adc je push xchg cmpxchg outsb (bad) or (bad) (bad) jg mov and pop idivl repnz insl mov (bad) (bad) (bad) cmp out pop mov xor mov roll mov fsubp std push insl out test (bad) decl and sub movsb push mov mov test aaa std stc push sti iret dec aas mov cld jbe insl mov (bad) (bad) fscale das call iret adc clc inc xor lcall pushl mov xor pop and jg out sub mov mov xor jecxz out cmpsb sub xor fcmovne (bad) pop icebp xlat mov push test xor sbb sub inc mov sub lcall sahf outsb mov test rcl sbb outsl iret push (bad) loopne push xchg push (bad) (bad) (bad) jle dec mov rcll stc das and jle repz push ljmp fisubr gs adc jb mov fdivr (bad) (bad) jg sbb popf fcmovnbe or (bad) jge xor jecxz out (bad) in xor sub dec outsl in (bad) lcall jge mov mov loope lods daa push movsl mov call decl ret pop xorb inc mov (bad) mov iret (bad) pushl push data16 and shr movsl jne jg cmp jmp mov ljmp lret push and ss ljmp mov sar pop sub call lock cmp scas xchg xchg jmp in jl ds in and or fucomp (bad) pop punpcklbw cli fnstcw fwait ret cli jne (bad) mov dec adc mov roll inc (bad) jo cs (bad) ljmp jbe daa out repz out inc inc sbb clc in in jo loope (bad) mov in outsl es pop in jns mov (bad) (bad) pushl inc decb test dec fcompl jecxz inc xor xchg aam mov cld (bad) ljmp inc test xor les jns (bad) aaa and adc add dec jb cs dec inc aad ret push mov dec push movsb rcrl fist imul mov das cli pop cld inc fidivl enter pop and add lock jg rcrb pop lret cmp xor cmp xor pop pop scas and sub neg aam mov (bad) (bad) cmp or cmp inc mov fldenv inc pop lock mov std lods xchg ret jb mov push inc (bad) pop cmpsl sbb fucomip dec xchg lret loop (bad) decl jns lock movsl out out mov andl sbb (bad) call gs ljmp fxch lea addr16 (bad) (bad) decl pop (bad) lods mov mov iret jmp pop arpl repnz mov das fcmovnu lock (bad) dec lret clc scas movsl pop xchg loop mov lods (bad) mov jg (bad) push mov loop nop sub push jge std pop sbb lock sbb stc adc add cmp ret ret fnstsw (bad) (bad) (bad) jmp sbb inc push mov stc mov adc mov popf sub mov sbb cmp sbb ficompl jno xchg call lock inc loopne jmp int3 les sbb clc mov (bad) (bad) (bad) (bad) dec rorl arpl xchg shrb and sub sub mov jo in cli (bad) mov jmp (bad) bnd jns fs pushf cmp xlat mov icebp mov negb pop mov xor lods dec std (bad) inc pop addr16 pop adc daa outsb fistp jo xlat inc std fwait push mov leave ss (bad) incl (bad) loop leave ret fadd test mov lods cmp cmp and add add sub and mov fstl lcall pop or xchg xchg icebp jbe and loope fisttp cs inc push inc out lret add mov push mov test (bad) dec sbbl shlb test mov cmpsl cmc (bad) decl pop adc jl enter repz in hlt fdivr ljmp fisubl pushf jae xchg push adc jno pop inc jg add xlat and ljmp sub push leave mov xor cli inc push in flds inc stos test push push cld (bad) push nop cmp or push dec adc stos sbb pop xchg mov xlat lock aas outsb popf stos xor movb and popf pop mov sub (bad) (bad) (bad) decl adc mov push ret xchg outsl fisubrl arpl pop jg (bad) call sub xor sti cmp dec push sub sub insl mov out xchg mov mov sbb xor enter pop cmp add inc and cmpsl xor cld fmul pop int3 lcall jo cmp cwtl (bad) int mov mov arpl inc cmp ja dec lret xlat pop mov (bad) lcall add aas add (bad) cli aaa hlt cmp scas push rorb (bad) ljmp icebp pop or push cmp (bad) mov das arpl (bad) jmp lds sbb xor sbb mov mov incl push cli (bad) (bad) jmp stos ds call adc mov lds (bad) (bad) inc (bad) jmp inc jbe repnz mov daa ss xorl xchg lahf jp,pt add ret xlat sti cmp or sub (bad) (bad) (bad) (bad) stc mov call jo lds clc outsb aad cld bswap mov pop mov popf pusha cmpsb (bad) jg aaa pop mov pop fimul or sub pop and push inc inc mov cmpsl push loopne mov cld adc push adc js loop cmpsb aaa ret jg mov xchg xor jecxz push insl movsb mov or pop mov mov leave push sbb in aaa push mov hlt dec and popa xchg fs shr cmp pop xor xchg test (bad) mov jge xchg push xor or mov and push mov ret cltd hlt push cmp mov inc icebp or sahf push std (bad) sub add test adc inc (bad) lods cmpsb pop (bad) (bad) (bad) (bad) sti pop out sbb lods inc sub add mov inc fbstp cmp dec cmp bnd out add pop aam in insl (bad) jmp ficom adc dec mov push mov sbb (bad) mov adc xchg sub dec insb cmp stos lcall xchg adc adc ret ljmp stos jecxz daa sub jae (bad) and dec icebp pop int3 cli (bad) (bad) jg mov pop push or dec or dec adc add ss ds jns enter jo sub (bad) (bad) push cmp and ret cmp notl in lcall lods daa inc loopne push sar dec adc imul (bad) mov xor push mov jmp and mulb aaa or std pop cld (bad) ljmp mov sub adc test int3 mov pop out jg push into shl orl (bad) push jg (bad) ljmp jb pop les or push (bad) and cmc (bad) fcomi jp push jbe jae repz push cmp incl mov sahf jbe dec fs jle adcl rolb (bad) (bad) decl jb or addps fwait ja mov lods imul and push adc or cmp jo or icebp in arpl xchg (bad) jg cmp iret inc dec and test cmp lea imul xchg out call jg sti (bad) (bad) (bad) decl sub fbstp add cmp xor aad sbb sbb or mov pushf iret lea push push dec pop pop or cwtl lock mov lcall pop (bad) aam insb sub cmpsl mov push mov fldcw dec jg std ljmp add fidivrl dec or stc jmp add jp fxch add (bad) (bad) call scas fidivrl and test test out mov xor inc cld (bad) (bad) jmp mov fiadd cmp xor dec mov jmp xchg fcmovu ret push mov inc (bad) call sub adc push das jae add aas push movsl lret dec mov jbe cmp mov les xor (bad) insb stos cld pop sub jmp xchg shrl jg sub popf ja (bad) (bad) (bad) (bad) std stos aam mov sub xchg data16 inc mov inc (bad) (bad) mov pushl enter xchg cmp sbb pusha push das jecxz fmull repnz pushl mov (bad) sahf mov xchg add sbb and (bad) dec movsb addr16 sub mov push xor cmp repz pop pushf je (bad) in add das push lret push inc imul ret cmp mov jae (bad) (bad) call ljmp repz in cltd loop sub inc (bad) mov push add mov ror add aad (bad) (bad) call fnstenv xor pusha in or xchg lahf (bad) shrb xchg (bad) sbb ljmp test ds cmp mov mov dec xorps adcl addl int (bad) jg inc pusha push or push sbb mov inc mov loop xchg add pop outsl out into xor loop or lcall mov (bad) (bad) (bad) mov sbb repnz inc (bad) lock aas inc pop add xchg and sub cmc int aas decw adc (bad) dec and or jae cltd cwtl (bad) mov sub xor lret cwtl and inc fidiv jl cwtl in ja dec jmp jl and inc adc ljmp (bad) incl clc daa inc je cmp cmp sub mov add (bad) (bad) pushl pop sbb cmc sbb ret nop lret (bad) xchg cmp mov cltd popa iret jb loope in add mov cwtl dec arpl insb (bad) (bad) (bad) (bad) std inc pop rol out mov stos jp test xor mov adc and mov pop sub mov or sub (bad) (bad) (bad) out add mov outsl call sahf fneni(8087 fstps cmp mov adc mov dec sbb cmc xchg inc gs stos clc aaa mov push pop std (bad) (bad) (bad) pushl sbb cmp sub test xor push cmp mov rol (bad) (bad) cli xchg jle dec lcallw xor loope add (bad) (bad) incl mov rolb popf xor sbb cmpsl jp clc jmp sti jmp pop sub push in ret cmp rol hlt je mov int3 (bad) aas pop mov jne out push cli idiv out and xchg or (bad) (bad) lcall test and push pop or inc mov mov bound jl xchg jle jmp mov sbb popa mov ret movaps mov inc push cmp aad xor dec push adc add es idivl shrl xchg test xchg test ljmp js pop cmp push test and or gs jmp xrelease mulb dec mov scas aam scas push adc (bad) clc sbb ss lods xor (bad) (bad) ljmp lds lea jmp loopne stos adc movsb or (bad) (bad) (bad) cmp fldt sahf xor out xlat jge cmpsb dec push cmc sub cmp ljmp inc mov imul popf push into cli popa push xor and ljmp jnp xlat test adc xchg pop lea cmp pop fnsave mov or mov lods hlt jge (bad) incl xlat adc out (bad) outsl cmp pop mov jb js repnz inc push adc lock push add add mov pop jb shl add movsl hlt shll xor ljmp ror xor adcl (bad) cmp incb jb xchg sti add lcall xor inc pop jns push or xchg (bad) (bad) (bad) incl xchg gs push (bad) stos jp not inc lock mov out scas add (bad) (bad) ljmp fcoms push bound lods push scas inc (bad) mov (bad) (bad) aas lret lds test in pop xor and mov push jne xchg jo inc and aaa cld out ds loop or jno movsb adc decl (bad) sub pop add icebp pop ja pop push adc (bad) (bad) (bad) push adc loop fsts or dec dec rorb or cmp or addr16 pop bnd iret test add jmp mov inc stos cld (bad) (bad) (bad) incl lret cmc jo xlat iret fstpl pop sbb ss xchg or ss xor add (bad) jg lods data16 jb out dec pop aad and pop std jg add xchg in adc jge and pop ror dec test xor (bad) (bad) ljmp sub mov push pop add sbb fs movsb (bad) loopne pop adc in mov jecxz cmp sub cli xlat clc decl ljmp fs sbb jg (bad) incl pop ds and int cmp dec (bad) cld xlat push pop add icebp push ljmp aaa nop fs xor ret dec adc test fcomip lcall in (bad) hlt mov in jnp inc jae inc add scas idiv lcall mov out iret enter (bad) int cltd cmp adc mov (bad) fidivr sub (bad) adc fisttpl sub jb bound mov pop stos (bad) cmp jmp aam jae ljmp ds cmp and movsb mov mov and (bad) decl in sub test push push cmp push dec ret xlat test enter shrl rcrb sub je sub sahf adc xchg pop xor push fsubr (bad) (bad) pushl iret push sbb and test repz pop mov pushl mov fwait pop lcall mov mov iret xlat das mov pop and (bad) jl sbb jnp imul fsubr stos and (bad) js inc jecxz xlat adc add xor fldl2t (bad) ljmp inc icebp mov in lds fdivr inc pop pop mov cmpl xchg fs pop repz les mov push inc inc cmp cmc (bad) or test es cmpsl inc fildl pop outsl cli (bad) pushl push cmp fsubr cmp or (bad) (bad) out push or pop xor sar xchg jbe and adc cltd xor hlt mov das adc insb add jp (bad) fcmovbe icebp jb,pt (bad) (bad) call adc mov lock mov mov cmp cld cli and ljmp cmc mov xor mov cs or (bad) call cmp imul jne jnp pop outsb adc xchg (bad) aad xchg jl mov insb ljmp mov lahf or ds (bad) mov dec mov cmc xchg xor dec cs or (bad) jg ljmp jg aad xor and jno bound sahf add in ljmp push data16 pushl inc xlat dec int3 scas das aad lcall (bad) sti mov jae sbb (bad) aaa call (bad) mov xchg cmp dec fidivrl pop xlat or mov lcall aad jp (bad) addr16 sub inc jge fimull xchg cmp or out or adc js gs leave xchg fucomi repz in inc push cld (bad) fistpl push mov inc push xchg mov lods jecxz cmp pushl adc leave inc mov dec fistl lahf xchg sarl fcomip insl addr16 ret rcll (bad) inc out nop pop std mov lock push push cs lret adc rcll clc inc jp and sub pushl std repz in pop movsl inc xor pop xchg ss mov insb inc cld push pop clc cmp les push cmp fsubs add jg outsl jp clc je bswap or jno das ds inc mov js inc test inc mov iret loope arpl sbb fxch outsl aad cmp lcall add mov out aas mov push stos xchg (bad) (bad) lcall stos mov clc mov into add stos inc sti stos aaa push icebp dec out fcomi xchg mov adc jg sub fsubl ret xor push fstps fstl cwtl (bad) (bad) (bad) jmp sub shrb lret loopne cmpsl push aas add mov cmp daa or in in pop xor mov lds sub das nop jp pushf lods lods jnp lock jcxz or pop inc hlt lcall mov popf das subl inc (bad) ljmp aaa testl arpl pop and lock and lods imul icebp mov push jae (bad) mov inc hlt aas mov jno and pop daa dec in mov idivl rcrb jge stos cld (bad) (bad) ljmp mov add (bad) mov insb psrlq scas movsl (bad) add pop nop outsb lock sbb add inc inc mov cltd in cmc (bad) (bad) (bad) lcall xchg or sub add and cmp and jnp inc testb xchg cld (bad) incl mov out jmp les int3 out ss popa test das cli (bad) in dec lcall and scas sbb clc dec shl xlat cmp push (bad) (bad) (bad) incl ret divb cmp inc iret fdiv out sub jp xor (bad) (bad) jg mov push (bad) adc scas aam gs mov mov add add mov insl jns aam rorb jmp (bad) stos mov test or loope or arpl jns add or mov inc sub (bad) (bad) (bad) mov push push dec jns sub mov mov es (bad) adc out stos xchg dec jg sub (bad) push ljmp lret cmpsb subl lcall jnp jnp mov into push es inc pop pop mov jb add lock sub push decb movsb mov cmc (bad) mov popf add add mov inc or mov xchg mov (bad) (bad) (bad) pop rolb add enter sar cmc inc hlt cltd sbb or dec ljmp scas lods popa movb aad sarl lret (bad) ljmp cmc xor dec lret movsb xor mov pop xchg cli or push mov inc jns (bad) ss mov mov push imull push xlat mov leave (bad) (bad) (bad) (bad) push pusha adc jecxz scas sub (bad) cmc lods xor int (bad) jns cltd out js and xor jecxz and lods insl xchg mov test (bad) (bad) pushl and loop loopne mov jg outsb hlt fdivrs cmp push mov pushf lock push mov call push mov in adc cmp aam xchg (bad) (bad) (bad) incb in lcall cmp cli mov mov fisttpl loop mov (bad) pushl dec mov cmc out loop aam dec cmp gs (bad) (bad) decl mov stc inc das adc out popf dec add lock adc push test adc rorb sbb pop js fmull fldt out mov cli (bad) incl in cs dec (bad) divb leave fistpll add insl test push ret pushl adc push pusha sbb stc cmp imul (bad) aam push repnz cmp inc mov sub pop fdivrs (bad) (bad) incl ret pusha (bad) fist pop ret pop out pop das sbb and xor jl add decl sub xor inc icebp jge pop pop xor mov cmp arpl imul jmp inc popf sti aam add jp xchg sbb (bad) (bad) lcall mov cmp fs jle mov sub mov pop jae decl pop in cld dec inc sub (bad) pop adc dec movb or cli (bad) (bad) (bad) decl rolb fwait dec inc mov cmp aad pop push aaa pop fwait stos dec stos sub das lods aam in xlat (bad) (bad) (bad) inc fidivl ret xlat dec mov xor lds ja push adc sti add lcall cmc mov xor dec adc cltd jns and mov and cmp stos (bad) (bad) pushl sbb repnz mov cs cmp inc jo add int mov insb mov pandn sti (bad) or xchg mov ret fsts out arpl (bad) out cli dec (bad) iret addr16 out jb jbe hlt mov repnz (bad) cmp incl jmp sub popf mov sti mov mov xchg cmp insb (bad) (bad) cmp ljmp shlb (bad) push ja cld (bad) mov sub xor push sub jno bound (bad) fstl lret repz mov (bad) ljmp faddp rorb out mov or mov ss mov cmp push mov imul inc dec popf ret sbb xchg inc (bad) (bad) jmp cmp add repnz sbb stos inc sbb (bad) (bad) jge inc pop jae lods stos push adc jo std movsb jle negl stos mov fldcw (bad) incl sbb push and mov mov or adc outsl cli jmp mov ljmp adc or jle mov popf add pushl imul lret es clc xor int in sbb call insb sbb adc bswap into add test (bad) jmp pop lret mov sbb in push arpl lcall xlat sbbb jp add pop out cli xlat mov (bad) decl push sti dec ss dec lock dec ret (bad) test data16 inc in aad push popl lods lcall arpl int3 imul cwtl push (bad) dec sub mov cmpl loopne decl lock pop sbb nop sub sbb fsubp les cli lock and sbb cmp (bad) jmp add (bad) hlt xor test in sbb ret (bad) (bad) out mov mov pop sbb das loopne pop hlt iret dec and adc mov lcall cmp add xchg adc inc inc xor or xchg out pop out pop mov xchg jbe mov pushl cli shlb adc mov movsb xchg stos cmp pop adc mov sub movsl sbb mov jb jle adc mov push xchg lret pop lea push ds (bad) lcall lahf clc adc dec ficoml in pop push ret out repnz push (bad) (bad) (bad) jg ret test fist cmp in enter jne es mov inc (bad) call neg pusha ret mov push out test movsl in sbb decl fwait icebp push je sub lcall sub (bad) (bad) (bad) cmp xchg push or insl gs xorb dec mov jmp (bad) ljmp stc rol push fwait dec out push inc addl imul (bad) (bad) (bad) jmp dec test negb arpl shlb lea sub lods pcmpeqw adc cmc stos xchg in jne and cmp decl dec imul adc cmpsb jle add movsl mov (bad) decl inc into rcrl xchg and lea dec inc mov and adc jo fcos orb adc (bad) (bad) (bad) pushl sbb inc out push mov push inc mov (bad) ret lock std subb aas ret (bad) fildl out loop or mov repnz cs incl or out mov and jg jo dec rorl ret jmp dec sub scas or fidivrl xchg cmp sbb cli xchg sbb cmc incl cmp dec sbb pop sub out push (bad) (bad) (bad) lcall pop dec fildl inc lret dec mov bnd fs mull adc dec data16 es (bad) call and stos in xchg push push movsb std loop lret push jo or (bad) test dec sbb mov (bad) mov gs push add fisttpl pop jl icebp mov aam inc or jl (bad) decl mov xchg sbb jo adc rorl or call xchg pop es fsts cmc adc pop ss adc aas sbb iret ret mov and lcall sarl data16 adc add pop (bad) (bad) (bad) mov lcall dec daa repnz cmc jnp fimul shrb mov (bad) (bad) decl imull test pop cli loope sub mov (bad) incl in mov (bad) xor or dec (bad) lods inc mov pop inc test (bad) ja cli pushl pop inc adcl push cmpsb aas mov or jmp xchg sub dec mov mov outsb fcoml call adc repz mov sub jge (bad) mov jle imul jp pop cltd lea adc pop adc (bad) jbe xchg pop push inc push sub mov insb (bad) (bad) jg (bad) mulb and (bad) xchg push mov js or sbb movsb adc pushl data16 out mov mov lds fdivrs pop outsb jns pop mov xlat hlt adc push lods (bad) rorb sti dec push mov dec cld pushl cmp jae scas mov (bad) je ficoml mov incl pop jno adcl mov ret lods push push adc lcall add sub mov (bad) pop push push mov (bad) (bad) call mov cmp mov (bad) mov fstl dec rcll bound pop xchg (bad) xchg or pop add test (bad) cwtl ds mov push enter inc ljmp je insl sbb int3 xor cmpsb scas (bad) cli (bad) cmp int mov push dec mov test (bad) (bad) ljmp xor enter push mov xor adc in ficomp inc mov stc (bad) push scas xor jo cltd cltd imul inc int3 adc sbb push (bad) outsb add adc mov iret shrb (bad) (bad) (bad) pushl in setl gs repz loope lods and outsl scas xchg and jae jp inc (bad) jg ret xchg jns inc out test adc test mov (bad) in lcall ljmp or sbb mov pop sti decl js and push fs cli mov cmp (bad) call pshufw mov (bad) int3 (bad) call mov push add decl enter or loop cmp test (bad) fildl mov imul mov call addr16 xchg mov pop push negb fistpll jno jmp (bad) ds mov xchg call adc xchg in (bad) (bad) (bad) mov inc push xor inc fistpll or jge inc cmp sbb jae inc repz ja inc orl rol jp inc iret jmp xor cs inc cld (bad) lcall add fnstsw mov test sbb mov ds pop (bad) (bad) mov daa xchg scas sbb scas in mov add dec outsl cmp or adc lods push (bad) (bad) (bad) jmp and lcall aam (bad) popa sti adc aaa imul mov mov (bad) in imul je incl ds fs scas xchg and and out ja cwtl aam (bad) decl sbb cmp pop (bad) and arpl (bad) sahf xchg push sbb and jg aad jmp inc pop icebp in cld repz pop jno xor mov xor movsb aas loop notl inc xchg add scas and call xor lds sub or scas dec add push (bad) lcall xor adc pop mov pop mov clc (bad) (bad) jmp mov pop movb stos cmc mov and les lods das adc ljmp mov inc (bad) in mov cmp cmc rcrb ljmp insl into inc push (bad) sub mov into jp (bad) (bad) (bad) incl add mov inc add or in mov xchg sub and repnz mov test repnz loop daa into hlt cmp jge lcall clc mov push jne (bad) (bad) ljmp push xchg in and xor mov or ljmp xor mov push inc jbe sbb scas push icebp or cld inc xchg fldenv mov sar incl sahf inc loopne pop mov push jns bound or push push sti test cltd rcrl pop dec sub jnp xchg cld (bad) (bad) out push (bad) push popf sbbl fdivrp inc aaa xor stos add pusha jnp sbb pop cmp sub sub xor arpl xchg popa jmp pop ss out lods iret dec mov jae ljmp or xchg pop pop lock test int adc dec jb sti add (bad) lcall (bad) push xchg outsb (bad) pop outsl mov mov push inc or mov out push int3 sbb pop hlt ljmp les pop inc push ljmp xchg dec cmp rolb test mov cmp aaa hlt (bad) lods add mov arpl xor fcmove inc fisttp (bad) fildl inc (bad) adc clc incl xor jmp sbb or xchg sub clc (bad) ljmp lods mov or xor neg out jle js or (bad) loop cltd mov fsubl cld pusha cli pushl push icebp mov pop fildll (bad) jae movsb adc dec (bad) pop adc nop fnsave test and pop sbb cltd mov lcall (bad) (bad) jmp inc (bad) fs in (bad) sbb xchg inc mov mov jmp aaa pop mov xchg xchg notl clc addr16 pop lret add (bad) (bad) (bad) mov push fldt mov enter lahf popa leave aaa loopne jbe xchg test outsb shlb mov mov data16 (bad) (bad) pushl shlb adc push lahf cmp jbe stc mov mov mov pop cmp jg (bad) (bad) fistpl dec jb loopne add xor cmp push insb push push pop fbld decl push dec mov inc std push pop push std (bad) lcall (bad) lret (bad) mov push movsl dec pop add push mov gs test (bad) (bad) pushl incl gs (bad) and jle in push dec pop lock sti dec sub (bad) pushl cmpsl mov lock addr16 push xor in sbb (bad) (bad) decl dec adcl imul lock push aad push mov mov (bad) (bad) (bad) (bad) xor lret push fimull lds sub mov pop sbb jg jp ret into mov or xchg mov gs pushl add movsb cmp jp loope loop bound ljmp cld inc lret popa or mov mov (bad) (bad) (bad) jmp pusha sbb daa dec (bad) cmp sub adc mov call mov in jmp xor orl ss gs (bad) insb jo test movsb and fistpll mov cmp sub or lahf add adc outsb (bad) jp bound or nop (bad) scas call jae mov call iret imul mov cld jno adc pop push out inc pop dec jne cld (bad) call inc (bad) bound push mov pop mov xchg xchg test xlat cmc jg stc adc nop cmp mulb incl out mov out cmpsl test pushl inc fisttp fwait (bad) idivl into outsl lcall jo inc pop (bad) test (bad) (bad) jg stos sub jno popa jb jae or sti lods fs mov or clc (bad) (bad) jg aaa dec pop cltd dec daa xor mov lret insb into int3 fsubl sti stos pop push cmp mov ljmp mov arpl mov clc aaa ljmp icebp push call jl jmp ss (bad) aas xor arpl mov mov test cmp in jl frstpm(287 push movb jb jecxz and lcall nop mov popa push jo test lds xlat cmc (bad) jg jl mov mov notb ss xor pop mov xchg pop mov into adcl test or shr fstl loop sar test fistp mov (bad) call into ja movsl sbb xchg mov pushf out jnp hlt xor sub cmp in mov fisttpl rcrb addb pop test (bad) lcall inc (bad) jg out popl jnp adc dec fwait cvtdq2ps sub les out out (bad) (bad) (bad) ljmp movsb adc inc mov push xor call lock leave (bad) (bad) call hlt xchg and call fisttpll or icebp mov jmp (bad) (bad) aas sub jo and and movsl or pop lea push cmp sbb repz lret repnz jg or jae test push pop ret push out mov or sti movb insl test push add lret pop fs sar jecxz (bad) (bad) (bad) (bad) in je pushf cli or nop xchg push sbb push dec sbb sbb imulb mov or sub mov or decl cld push loope jno sbb xor lcall movsb (bad) pushl stos das push fbstp dec jg pop mov mov mov aad clc add cmp loopne test and in mov sub (bad) inc mov in das popf inc mov adc or push xchg adc mov sub pusha shll lods cmp mov push xor loope lds aaa cmp call lcall stos push inc adc xor out add pop mov adc push and idivl pushl and inc sub enter ret jecxz add cmp or sbb loopne xchg (bad) loope and mov cmp arpl ljmp jmp lret or rorl add xor inc pop mov imul pop push sbb inc inc ret arpl lcall lock pop sbb repnz scas xchg push xchg (bad) cld dec enter pop or cmp scas test (bad) ljmp sub sbb dec or daa dec add clc call in mov arpl add aam mov and or (bad) fist dec test rolb inc imul ret jo,pn push sbb xlat mov les (bad) (bad) aas adc js popl adc mov or dec sbb dec cltd cli incl xor call cwtl cmpsl mov cld pop mov aam pop xchg pop movsb push or jl jg jg fxch imul push jge scas (bad) (bad) pushl les pushf das pextrw adc add or add mov decl sbb (bad) lds push (bad) enter adc lcall pusha xchg push std sbb sub jle dec dec hlt insb (bad) jg dec push mov adc arpl xor nop xchg inc cld jmp aad sbb nop mov (bad) incl fidiv adc mov jns cmp mov and outsl mov (bad) hlt cmp xchg push sbb dec jge iret std incl jae sub ror xchg mov mov lret adc movsb sub dec loopne roll xor cld (bad) (bad) cmp mov or cli adc inc popa lods xchg cmc stc push movsb pop xchg cmpsl adc (bad) jle pop aam and dec xchg inc (bad) (bad) (bad) pushl out dec iret inc test insl cmpl or mov xor adc mov add (bad) lcall pop jne addps rorl mov adc test (bad) in (bad) jmp and jns in xchg ss das pop mov call imul xor loop (bad) (bad) (bad) in ds cmp or test (bad) rcrb jl mov (bad) push (bad) (bad) call (bad) push xor test clc jl lods push mov or in (bad) (bad) (bad) jmp sub inc addr16 lea xlat sbb inc push mov mov inc sbb iret add sub xchg push adc xchg decl xor idivb xor mov clc insl rclb lods mov ret inc in out sahf lods or andl decl enter push sub add (bad) (bad) fisub xchg inc out sbb fsubrl imul mov and and rorl std xchg dec je push cmp dec fist fs (bad) (bad) call adc imulb mov nop test cmpsl dec jg and ror jne push mov dec mov dec iret xor jnp arpl mov pop lds aaa push (bad) (bad) mov xchg dec mov mov popf mov rcrl enter (bad) decl ja xchg lea pop mov (bad) (bad) mov aam call jb andl and add jle sbb insl outsl inc flds (bad) ror xor and call popl ss and pusha mov push mov push fisubr (bad) sbb mov lcall decl mov enter fstpt (bad) push sbb ds cwtl pop in outsb and push clc pop stos sahf sbb and (bad) mov dec jp jae lock std ds jo xchg sbb and dec lods pop dec pop call dec cld addr16 iret (bad) mov cwtl (bad) adc (bad) inc mov or mov mov cmp adc iret (bad) mov lods hlt mov frndint loop add lret out mov sbb nop xor repz (bad) (bad) (bad) inc lods xorl cmpsb pop lea sahf js inc xchg jmp adc ss mov xor fmul fucomp jle cmp scas ret leave mov push (bad) hlt and in bound sar and xchg jb (bad) cmovae pop mov dec jbe mov inc les add push jl push xchg negb ljmp add jecxz adc inc sub push mov test (bad) (bad) call inc xchg mov test mov jl or adc and push ja lahf pop cmpsb xchg mov rcrb mov pop adc enter (bad) jo std (bad) lcall fdivl sahf sti sub insl leave pop sub (bad) dec outsb ret test aaa rcrb arpl pop js imul xchg jecxz or call inc sub bound and je and (bad) (bad) jns cmp jp or sub movsl sahf idiv into push mov push stos jge mov mov call adc (bad) ljmp jno sbb adc push dec or into stos pop loop jle aaa lods sbb lret add sbb pop add inc xchg pushl push (bad) sarb pop sub hlt addr16 and (bad) pushl les jae mov jmp push jb scas adc aam or (bad) xor insb ljmp jg cli bound cltd add pop in pop int3 mov mov pop pusha clc (bad) (bad) jg and js bound fstps (bad) fldt sarl cmpsl xchg fnsave repz (bad) aas sbb nop lods out add xchg cltd int push je (bad) (bad) (bad) jmp mov sub jge pop mov andl paddw int3 cmp (bad) (bad) jg aam decb aas test nop and push push cmp sbb push rorl aas leave jns push sahf or cs out sbb in and jne lcall jg xor or mull test pushf std jae faddl jmp jmp je push aam mov push sbb or mov mov jae pop sarl pop add in decl lock push sub dec jne push pusha in pop push jo or and (bad) ljmp mov popf pop cmp sbb sub enter (bad) (bad) jg mov jecxz cmp stos xor adc cmp xor sub (bad) fcomip inc sub adc enter fiadd pop lret mov outsl jle (bad) call mov dec xchg lds fiaddl push mov adc or (bad) (bad) pushl jns xchg or xor rcrl pop jno push imul (bad) in lahf imulb fistl int3 sbb pop inc stc jno scas (bad) (bad) (bad) decl push xchg xor inc stc cmp inc sub xor inc inc mov lock ffreep bound mov jmp test sbb scas loope jo xor xchg negb (bad) (bad) push push mov or push mov cmpsb cwtd clc pushl pusha cmp stc clc lret sbb xor jmp mov popa roll cmp lock xor add and push icebp (bad) mov leave mov xchg les xchg lea (bad) hlt jo pushf ljmp mov (bad) in lcall (bad) (bad) (bad) fistpl sub jp jp or mov xor sub sbbl mov std jg pop push mov xchg push rolb xchg (bad) mov mov cmp into orb (bad) pushl std pop scas out cld fwait jbe mov loop (bad) js enter insl es int3 sahf xlat inc (bad) and (bad) jne xor ljmp mov mov push cmpsl add ss xor (bad) mov ficomp cmp outsb xor mov dec daa pop outsl and xor push lcall push fcmovnu push dec loopne mov adc ljmp xchg inc (bad) (bad) (bad) (bad) jg mov jae rcl shlb jb jae or (bad) (bad) fidivrl adc dec mov (bad) out ret inc rcr in inc enter lock sub mov lret add aam jg jmp (bad) mov cmc jno sub lret aas test adc decl fwait ror ljmp pop mov das fldl pop (bad) (bad) (bad) (bad) cmp push out inc jmp fadd mov jo ljmp dec sub sbb (bad) jmp stc xor popf decb lods add ret repz (bad) (bad) (bad) jmp addl enter in mov into inc sbbl lds xlat xchg (bad) call inc inc icebp dec imul jno jne mov sub test push xchg mov jle je test dec js gs aaa mov jp xchg cmp jl test xchg cld scas cmp sub loopne loop mov mov cmc test (bad) (bad) (bad) pushl pop imul addr16 ret or cmc pop insb fldt push inc mov lcall cmp dec scas mov das dec sub stos dec sbb and sub lods daa lcall sbb sbb xchg stos ret xor jge xchg xor testl mov mov decl movsb jecxz mov jle lcall xor inc jae fisub sub inc sbb out pop jecxz aad jmp iret xor je inc dec or sub (bad) (bad) ljmp imul and push imul or gs bound xor jne std cs rclb cmpl sar pushl fsubs movsl (bad) inc fiaddl (bad) js dec adcb call outsl les xchg cld mov xchg stc push cmp mov cmpsl popf movsb aaa call mov mov adc daa sbb (bad) (bad) (bad) jmp imul xchg and dec mov or pop (bad) iret in push (bad) cli sarl test cltd xlat ds (bad) mov mov xor mov aam lods rorl clc lcall jge pop in cmp dec out icebp sbb shlb pop hlt (bad) iret popa out scas adc jecxz or xchg pop aad xchg int sub decl sbb mov outsl adc add dec sbb (bad) lcall fcoml in dec pop or pop cmpb lock incl movsb push aaa hlt shrb jmp rolb and mov pushl xchg mov fs inc mov sbb test mov (bad) jmp pop aam mov rclb add arpl ret fdivr stos movsb (bad) and loopne cmc pop dec roll sbb (bad) (bad) lcall aam dec adc mov sbb jbe mov loop (bad) incl push inc dec icebp movsl cli xor push (bad) sahf ja out jmp (bad) jg mov adc jnp mov sbb push ds mov shrl (bad) (bad) pushl inc fstpt pop pop sbb or pop lahf xchg adc xor jae das xor (bad) call or mov (bad) out arpl cld insb lret idivl (bad) (bad) pushl sti or ror and inc add loopne (bad) js and adc (bad) out cmc rolb ja jb (bad) call pusha xchg rorl or sbb nop jl add loop bswap (bad) mov (bad) mov aas sti aad cmp bound adc cmpsb ljmp jl lods int3 xchg pop sbb out sub sub mov (bad) incl inc mov dec mov sbb xlat dec sbb mov fiaddl test (bad) cli xchg jns mov aam out sbb (bad) jg popf (bad) mov mov lahf sub jp adc (bad) hlt (bad) (bad) lcall test jge cmp lea sub mov add cmp mov cmp sub adc rcll lcall pop or add push aas repnz xchg cld mov cmp stc fmull cli jge fild aam addr16 pop (bad) (bad) (bad) call mov mov std insl shll stos mov mov fistp rsm inc or out icebp testl or push push pop cmp xlat (bad) (bad) decl cli inc imull les aad pop les pop nop rcl jecxz (bad) jg dec mov push test lret inc pop sub imul (bad) mov add (bad) out incb dec pop adc pop popf arpl lcall mov lahf cmp mov xor or and (bad) (bad) (bad) jg sti lret mov (bad) mov sbb (bad) icebp cltd ret mov xor nop jmp push jecxz (bad) (bad) pushl pop xorl jl into push add je (bad) das xchg mov aas rcrb push xlat in inc cs mov pop push pop and dec add adc leave (bad) (bad) decl (bad) les popf lea popf mov sbb std (bad) adc dec leave out clc (bad) jg fsubs lcall out jl lea fs (bad) (bad) (bad) ljmp gs outsl jecxz xor push push mov mov inc or adc shlb push incl dec sbb imul cmc fdivs lahf mov add insb push push (bad) dec mov mul repnz aam stc (bad) jle shlb (bad) lcall jmp push cmpsb lock adc jge add (bad) decl fadds cmp inc in cmp fs (bad) (bad) (bad) fucomip mov movsl add adc jb push aad stos xchg inc xchg movsl jg and pop rcr add pop sub cmpsb adc std push sub lcall jo das mov jns sub lds lret sbb outsl fcmovnbe data16 lcall xchg push jle mov add inc pop (bad) fdivl in dec inc mov gs xchg mov or xchg ja jmp fcompl daa mov dec dec dec into (bad) add pusha jmp lods stos in fs xchg dec dec xchg int3 ja (bad) inc push in add ret and in inc cld lret pop jecxz pusha in scas xor dec and test mov fldcw call cmp (bad) (bad) mov and lret push mov mov fsubrs and (bad) (bad) incl stos loopne or lret add or clc mov outsl jbe mov (bad) jmp inc pop int3 mov jno lret mov icebp (bad) decl push dec lea jecxz test pop leave scas fwait (bad) cltd sbb decl stos stos idivl iret lahf int3 scas inc sub pusha jge push icebp (bad) (bad) call loopne dec cld cmp sub insl ja xchg cmp cmpsb sub (bad) (bad) incl inc lret cmpsl (bad) pushf cmp push mov aad and push jne (bad) stos fldcw adc (bad) jg (bad) mov inc mov sar push inc test dec pop dec sbb jmp int repz sbb loop push insb js inc inc sub cmpsl mov leave push fildll addr16 cwtl xchg push into pop (bad) (bad) (bad) (bad) out mov xor mov cmc and pusha sub hlt clc cmc lods xor ret jg ficompl and test test loope jb imul aas jne mov enter mov mov mov popa or pop shrl (bad) incl movsl jne sar pushf (bad) cmp push pop aaa out mov incb mov ret push mov (bad) (bad) inc adc lret popf rclb movsl push in jbe lods out mov xchg or xchg push faddl push test stos jle mov mov lcall (bad) (bad) (bad) ljmp xchg pop popa ljmp int push (bad) popa mov mov repnz lret (bad) pushl ja mov jle mov jb mov call jae pop pushf (bad) pop xor jo mov xor jo push dec lods lods (bad) (bad) jg mov pushl pop xchg inc dec sbb pop aad ja and mov mov cs (bad) (bad) decl pop cmpsl jecxz sub push dec push mov xchg (bad) js inc pop in cmpsb push pop cltd sub sbb pop popa jmp test mov ja inc daa sbb push mov gs (bad) (bad) (bad) mov add jo inc jecxz lods mov fwait mov (bad) jmp inc inc dec jnp popa aas and mov or insl addl adc in ds cmp testl mov (bad) ds xchg adc xchg loope sti (bad) (bad) (bad) jmp addr16 outsl inc sub cmp pop jle mov sbb (bad) sub test loopne cmc adc adc mov mov xor js (bad) call lds lds ret popa jno test addl add (bad) call pop insb pop fwait mov pop movhps adc ret pop in add dec push push xchg pop or cld (bad) incl (bad) and mov nop ret cs mov jg call or jnp xchg inc dec xor inc stos xorl inc mov iret dec dec imul mov mov sub inc lods lcall jmp loopne jg dec leave in sbb cli imul cmp pop mov out hlt or mov jo mulb and (bad) xlat (bad) mov xchg adc or dec add mov dec (bad) andb pop aaa stc inc lahf mov mov (bad) sahf jns cmp push nop sbb (bad) pushl dec (bad) jae sub dec clc insb and sbb mov mov (bad) pushl adc dec mov push js cs enter jnp imul add mov push xor sahf xchg push mov pop push adc bound ljmp insl cmp lret (bad) (bad) (bad) mov fs gs cld jns xchg xchg imull in or dec lds mov mov jp (bad) dec add insb lea test out mov pop xor mov jns ljmp testl ja mov inc push cs aad fmuls mov test decl (bad) dec mov jb sbb mov sbb jg (bad) dec fcom popf xchg lahf enter loopne incl es mov cmp mov js mov sub movsb or outsb loope mov pop int sub leave (bad) cmp xlat setbe mov pop or (bad) call pop test sbb jl xchg stos mov test fiadd pop mov mov cmp loop xchg out mov (bad) (bad) pushl std pop lret gs cs je stos and fisttp cmp dec xchg movsb loop ret or xorl push adc cs pop pop push and (bad) (bad) ljmp mul mov cli fwait push jbe lcall fisub inc dec xchg mov (bad) (bad) pushl icebp popl push enter cs jbe pop dec jbe test pop into out sub (bad) lcall loope mov (bad) repnz mov dec shrb push (bad) inc jmp decl imul and inc or ret sub jle xchg xchg clc rorb push (bad) (bad) (bad) jmp mov xor cld loop or adc je mov jecxz aad add (bad) jmp mov cs scas iret lret cmp and mov (bad) jo fmull pop mov js (bad) (bad) (bad) call outsb hlt or out in out dec mov aas scas xchg movsb scas (bad) dec jno push (bad) in call fs mov fs nop (bad) jg nop sbb loop ror aad stos loop mov sbb insb pusha cmp out (bad) (bad) (bad) mov dec or sub cmp rorl data16 or lods les push imul or pop loop das ss (bad) (bad) mov and syscall xchg stc ljmp addb dec mov inc hlt incl push imul orl add (bad) (bad) incl outsb inc mov sti jge push lds lret jo in fcomip push repnz stos mov adc lcall lea fmul dec es push int3 add ljmp sti add dec push cmp fsubl out dec cmpsl xor sub lods mov push xchg scas adc adc push cwtl cs xlat add pop mov incl in icebp xorl jecxz addr16 add (bad) jmp std inc arpl (bad) jo push cmpsb ja xchg xlat push movsb xchg inc hlt ret scas push nop inc push lret or xor cmp dec (bad) (bad) jmp fstpt mov xor cmp idivb dec cld aam (bad) (bad) (bad) in mov loope in cwtl lcall test in jb pop lods mov (bad) mov das (bad) lock rcl rorb rcll arpl (bad) (bad) fbld fs mov fwait adc out loopne xchg xchg roll (bad) xor les pop xchg (bad) (bad) (bad) std pop daa (bad) push cmp ljmp cli push mov cmpsb cmp mov and test std int3 push aad aas xchg xor xchg cmc mov sbb (bad) (bad) call loopne push mov cmp aam (bad) push pushf or push or push hlt shl or push ret pop fcoml push (bad) add (bad) (bad) (bad) decl xlat mov mov jg jge cmpsb (bad) mov mov inc js cmp cmp paddq and cmp popa add aam rclb dec sbb repz inc inc aam sbb xor ret or out jg mov ret adc pop mov test out movsl and sahf (bad) call adc push cwtl mov dec pop mov (bad) call jns sub inc jecxz lock bound das lods jp adc popf xchg add pop add fdivrs sahf mov (bad) jo iret call sbb fwait or out hlt repz test jmp scas loopne pop repnz jne mov pop sub push lods imul or mov movb xor enter and jo imul rcr ljmp or fwait xchg ljmp sub aas pop rolb xor js mov and (bad) mov rcl sbb jo mov sbb adc bound jmp or cld mov ret rorb iret (bad) (bad) pushl fcmovnbe addr16 dec in and imul enter (bad) push inc enter pop gs in test imull sbb ret xchg mov xor lods jg int3 flds imul lahf fistpll inc (bad) (bad) (bad) decl lds nop repnz pop adc sub sub lret jbe dec mov pop nop lea xchg or xorb xchg ljmp inc mov xor add adc pushf mov mov xchg clc jmp and scas lea xor or stos (bad) (bad) (bad) decl push sbb adc push or fnstcw jle jmp cld push mov imul aaa cld lret (bad) adc mov push imulb add (bad) call push imul je sub mov (bad) (bad) (bad) (bad) cmp jo adc push outsb icebp or pop push adc ss cmp call fs decl sti aam outsl gs dec lcall movsb lock and xchg lcall sub mov jl push scas add (bad) (bad) jns jp dec out mov jb xor aas and cmpsb pop jne outsl dec fiaddl jns sbb mov jmp lret sbb push mov add inc inc lea sbb pop cltd xchg xchg test push xchg mov xor loope ja (bad) mov stos dec mov jg mov adc movsl mov xchg or add and jg adc loopne sbb push add sub lcall xchg je test pop (bad) cmc push test test (bad) (bad) jmp xorl mov dec loop mov es pop and insb jae xor xchg lods out test adc shrl (bad) (bad) call push push sub (bad) mov jecxz mov mov cmp inc and mov (bad) (bad) cmp test fimull cltd adc cwtl mov dec or (bad) jg icebp stos adc scas mov dec sub mov (bad) (bad) decl bound fs xchg fwait adc in mov mov stos push int cmp pop xchg lock or jbe js xor inc repnz pop dec call (bad) jl xchg hlt pop mov pop sub rorl cltd jae repz (bad) (bad) push ds roll movsl add (bad) mov (bad) (bad) (bad) jg test push push cmp mov shr pop (bad) std jg and jno push and jecxz xchg (bad) (bad) call mov negl jae int test xchg out fwait xchg jecxz sub incl pushf loop cmpl cli popf jnp loop bound (bad) lret out cmp loope (bad) iret lret pushf ret movl xchg inc or test add and std (bad) mov js jge fild or dec cli sbb (bad) (bad) pushl leave pop jae (bad) mov ret adc mov adc popa out pop loopne lahf pusha or call jne pusha add fdivs sbb jae cmp (bad) pushl sbb push cltd rcrb jo adc sahf out ret out pop lahf inc call add data16 pusha add dec mov and (bad) jg adc push jb stos or popa inc dec iret ja jae push xor pushl (bad) sub mov movsb adc xchg bswap ret daa adc sbb les dec fcomi ret jl jo int3 sbb call lahf ja (bad) repnz (bad) call mov cmc cmc pop mov ja mov popf arpl popa xchg lds in fdivs pop pop xchg adc outsb mov (bad) (bad) (bad) (bad) fist inc imul sahf adc jmp mov (bad) out rolb xlat test pop add dec outsb (bad) sub nop pop xchg into imul cmpsl adc (bad) fcomip pop mov aam jo sti push negb pop adc mov stc (bad) sets cmc (bad) push ja stos leave xor call test outsl mov push mov cmpsb and es incl inc repnz (bad) hlt in in (bad) fbstp nop movsl lcall jecxz adc mov mov sarl or pop inc (bad) lcall cmpsb dec es leave xor leave pop push or push mov (bad) (bad) (bad) call inc mov ljmp sti push outsl or popl push cltd sahf call clc (bad) out push cld sbb or call packssdw jo sti hlt (bad) ljmp int cmp inc ss xor iret inc push xor dec cmpsl sbb pop xor lcall ja xchg js mov aaa (bad) rcpps stos hlt jg pop adc addr16 movsl add (bad) (bad) ds in sbb lahf add mov (bad) (bad) jmp movsbl fsubr cmpsb test and jno cld dec pop dec push adc adc cld (bad) (bad) decl mov and jae push sahf addr16 sahf ficomp inc hlt loope mov inc call fmull idiv (bad) cmpsb pop cmpsl out mov test fwait adc scas or sar fs outsl mov sti sbb or addl decl (bad) ret dec lods popf mull (bad) or stos leave dec mov (bad) (bad) (bad) jmp sar out int3 sub ret xchg sahf cmp inc lods cwtl mov adc xlat movsl push inc adc lcall sarl lcall push js shrb int jbe cmpsb (bad) (bad) (bad) ljmp scas xor dec idivb jle pop out cwtl cmc lods sub dec mov jp sbb pop (bad) (bad) fiaddl test xchg fnstenv les (bad) (bad) (bad) cmp loop cld (bad) cmp jl pusha inc loop and inc test sbb (bad) decl roll scas pusha iret mov adc test push mov icebp lcall je imul psubb pushf and test adc (bad) mov loope idivl jo inc mov and mov dec pop ret in aas ss xchg ret es (bad) (bad) decl add dec rcl outsb pushf xchg jge xchg icebp xchg and mov pusha (bad) pop mov incl test (bad) fmuls add lock jno adc out xor (bad) call mov and dec ds imul lret fimul mov aas leave lcall sub loop jl fwait sbb fimull cmp push sub lret cmp (bad) (bad) call insl test jl dec adc ret mov mov (bad) repz (bad) jnp addr16 pop mov jne inc mov mov pop rorl jge (bad) (bad) (bad) (bad) (bad) frstor rolb aam sub push es (bad) jnp push (bad) stos push add push (bad) mov mov xchg notl push pop setbe hlt (bad) jg negb test std mov rcrb sbb ljmp aad lods sarl scas aam or out iret mov loop xor sbb mov mov and add sub add pop push test stos insl test mov mov sbb push cli jg inc imul fstps (bad) jmp mov pop pop idiv ljmp nop cmp std cltd test (bad) (bad) lcall imul inc dec iret rolb aas xor (bad) jne jecxz ljmp jae stos add xchg scas add inc pop push dec std imul mov jg (bad) sarl sbb mov xor rclb cmc mov lahf loope,pn cmp cmp sbb insb dec insb pop push (bad) (bad) (bad) call inc add cmp aas sbb cld repnz pusha int3 jmp cmpsl mov xchg rclb lcall pop (bad) push (bad) push je loopne inc jmp rorb cs mov in cmp mov dec int3 test ljmp sbb loope jo mov or test (bad) jg mov rclb or outsb mov sub push inc ljmp mov cmc ja mov inc mov dec lret jmp mov ljmp xor or dec inc imul mov addr16 test (bad) lcall xlat mov fidivrl jno add xchg jae mov test (bad) fistp test mov lock jle pop adc sti (bad) mov (bad) mov mov xchg sub insb push (bad) cmpsb cmpsl (bad) (bad) (bad) decl and cmp pop mov out daa sub out sbb inc push fucomip fs push or leave xor mov fwait push push (bad) lcall add jnp mov xor inc shll in pop in addr16 clc (bad) (bad) pushl ror and add add into and imul push in cli or pop gs lret fnstenv cmp mov (bad) (bad) (bad) incl pushf push or nop adc in in lods xchg cmp lret out xor imul clc xchg int3 repnz sub xor jne (bad) (bad) aas test jl jg and jg nop xchg and jp (bad) in mov (bad) (bad) (bad) call aaa xchg jns inc cmp or movsb mov mov xchg adc nop mov push mov in into mov popa adc hlt in mov int (bad) (bad) (bad) ljmp mov adc outsl mov xor cmp adc or sbb jmp repnz lcall loopne xlat sub (bad) (bad) (bad) (bad) jg ja xchg or stos nop inc arpl mov jbe cwtl pop add shlb mov add pop (bad) fwait stc mov pop stos pop add sbb inc xor pushf int3 (bad) xor pop sub mov mov fstpl (bad) push and mov mov pop ljmp ret lock shll test sub movb (bad) (bad) incl pushf pop repnz mov incl (bad) movsb popf pop sub inc jno loope sub cmp and (bad) ljmp push push rolb pop addr16 in mov (bad) pushl and mov pop shrl sbb push add int3 cmp or cld fnstenv loope mov pop icebp (bad) decl mov dec movsb cmp js adc push sbb ret cmp sbb (bad) mov jbe jno in fildl mov call mov push cmc jmp (bad) (bad) call gs mov std sbb jae ljmp (bad) shll push or out movsb adc out push enter gs incl xchg les inc pop jl aam (bad) (bad) jmp es dec or aaa pop jbe out xacquire or or scas testb data16 xor push sub xchg aad loope jmp mov dec fwait jmp pop xchg mov or sbb pop sbb mov lea sbb call pop icebp shr cmpsb insl (bad) sub mov sbb aam mov hlt ljmp push fwait add mov fisub (bad) (bad) lcall cmp dec sbb ja (bad) je aad mov (bad) ljmp pop decl cs icebp in es repz not dec test (bad) (bad) (bad) (bad) insl inc sub adc out mov push fmuls fstl incl movaps cmc cmp jnp or aaa out pop sbb mov push sub loope nop add jbe (bad) stos (bad) (bad) inc sarl test mov incl daa and std stos in pop loope js sub scas mov mov push ljmp push push mov pop fisttp adc fcomps xchg dec arpl aaa cld ljmp fisttp jmp nop cmp lcall cmc mov ret jge ror push adc test adc inc pop sbb dec leave mov cwtl cli xor mov xchg xchg sbb adc or decl inc xchg stos jno xor sbb std mov push pop (bad) (bad) (bad) incl add dec cli push dec pop adc push mov popa inc icebp lret hlt mov ss (bad) lcall xor in ljmp push jb xor jb aas (bad) xchg jae (bad) (bad) (bad) decl popf and leave inc movl mov cli outsb sti ror test cmpsb adc sub lahf mov test cmp out xchg rcr js push mov (bad) cmp (bad) out roll lret sbb lret imull lea dec sbb dec mov sub es sub add std (bad) (bad) ljmp in sub jle dec daa cltd mov cmp sub call dec sbb sub cltd add mov dec xchg mov call cmp push jmp mov push mov sar push setae arpl mov fdivs mov (bad) (bad) clc mov sbb fimull jge out xor sub clc aad or das and lret mov or ja sbb inc inc cmpsb sbb sub outsl pop bnd and cmc leave test fisttp jmp fsts (bad) (bad) inc shrb xchg xchg jge pop cmovl into dec push jl xor popa mov mov lock inc enter xchg adc sbb and pop push push lret lods and hlt dec (bad) gs (bad) (bad) jl dec cli int cmp dec lret (bad) je les test arpl aaa scas std (bad) scas sbb or push pop pop jae insl sub jmp enter (bad) je ljmp pop sbb not xchg lahf in inc cwtl mov incl sahf and (bad) xor sbb dec dec jmp mov cmp aad push jbe cwtl call pop mov pslld (bad) (bad) decl adc sub push cltd pop bound jg lds cmp sbbl mov (bad) mov enter out in hlt (bad) (bad) (bad) (bad) clc out cmp in movsb in bound iret dec pop ss rcll jmp xchg ljmp imul add dec out roll pop sub pop (bad) (bad) (bad) jmp dec jle out dec mov and test mov push scas lcall icebp pushl leave sbb or loope pop inc aaa arpl (bad) pushl daa loop xchg aad repnz loop (bad) (bad) mov nop inc push xchg scas mov jne sub pop jp repz adc push leave sbb jp test xor (bad) jl add rclb out cmp cld mov jb lea sub jle mov mov loopne fidivrl lods pusha push xchg mov cmc (bad) ljmp or stos xchg dec jl add ret cli (bad) (bad) call dec adc push test jmp (bad) lcall add (bad) aas sbb push dec xchg adc shrl and or (bad) inc (bad) mov adc cld sbb pop outsb xchg imul jne ret pop push dec call jg jmp js jge (bad) jb sub cmp pop sub mov pop pop out ljmp imul scas lcall (bad) mov xchg clc dec push push fidivl adc ljmp (bad) adc (bad) (bad) decl and jge das adc jecxz ret or pop xor cmp inc jg cli incl inc (bad) jne mov cmpsb or and (bad) ljmp (bad) jb sub sub push out add cmp lahf into or pop push push ljmp jae jge js rcrl (bad) ljmp lds sub lea cmp mov push (bad) decl out imul rcll sbb dec jo idivl lahf cmp xor insl loopne add (bad) aas call lods jno lods sub sbb sbbl mov cmp fmulp cmpsb fisttp and mov mov pop push (bad) add sbb (bad) incl xor nop inc xchg (bad) (bad) (bad) mov push dec icebp mov cmp jp mov mov ja,pn cmpsb fadds jnp push dec call jp push imul add add sbb mov daa lret add (bad) (bad) mov dec inc movsb out outsl mov int3 inc mov lock (bad) fdivrl mov fwait sbb fnsave sub jl pop adc jne in mov lret mov inc stos dec (bad) mov fs aam dec add pushl pushf or cli cmp pop adc lcall inc dec push lock pop sub mov jne lods xchg adc enter sti and xchg or int3 dec and scas cmp or mov (bad) decl mov sti or mov ss nop aas test daa aas jb sar or std popa or loop pusha into movsl imul (bad) xor adc incl or mov pop (bad) std mov push ss add mov add push cmp lcall call in std cmp std es loopne jb or sbb sbb sub clc and aaa clc sbb (bad) (bad) fnclex xchg mov add imul cmpsl fsubrl inc push jnp adc (bad) jbe int3 sub (bad) call mov fist jmp and rolb (bad) (bad) mov inc int dec jge outsl push push push dec and jecxz jns or (bad) mov pop mov aam inc dec mov in stos stos mov sarl je out dec cld (bad) or mov out fidivrl ljmp dec and jbe adc fdivrs xor xor dec inc es imul in dec dec xchg out scas (bad) mov (bad) dec pop (bad) (bad) call sub mov mov shrb sbb shlb scas (bad) decl out xor cli jmp sbb scas (bad) lcall jno sbb lret mov xor test loopne notb (bad) (bad) (bad) (bad) call push and pop (bad) xor lahf dec jnp stc daa popf jge inc mov in sub inc test dec mov stc push roll cmp cmp inc (bad) fidivrl call aas shrb (bad) dec jmp lds fmull .byte mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push imul testl or dec insb imul add (bad) out fcmovne pop pop dec and addr16 push xor data16 das add jns test push outsl jb add (bad) stc scas lcall mov or out jnp add push sub add xor push rcrb outsl jne add mov jne jb outsb arpl nop loopne add and and add fdivrl or scas or adc or push imul pop push popa push cmp mov fldz (bad) xor or and out or add lock lahf cmpsl jge es clc push inc xor pop cwtl pop push rcr decb push arpl pop sbb inc push mov je mov (bad) xor popa arpl add pop inc idivl jo je pop or imul mov andl insb pop add push into pop cmp dec addl jmp adc dec or out mov adc div push es xor sbb push or pop bound aas or inc xor dec cmp pop mov les xchg cmp push in fs jle icebp mov jle or outsb fs clc popa jns mov popa loope push fidivrl lock add push inc popa push push imul dec add push cld xor hlt dec outsb mov lock in pop adc pushf pushf fmull pavgb fcomps int3 enter pushf (bad) sarb jb mov mov in in mov lods sysenter das xor sub aas movsb push inc xchg pushf push add mov out idivb add sub je movzwl mov ss pop ret addr16 daa mov cwtl xchg seto movl and jne push add mov test (bad) out outsl sti jne xor pop enter mov mov ret lea (bad) inc add push mov mov inc cmp jne mov mov mov push nop mov add fcmovnu mov mov xchg je rclb mov mov or adc add mov aaa push pop xor mov push or and or outsl mov push mov mov mov mov add (bad) xor mov mov out push or push or ret and lods stc pop mov push or inc add adc sbb mov aaa sub jne (bad) mov cmp int3 test pop pop pop push (bad) testl xchg cmp jb mov add mov add int bound jne mov ss mov or mov dec ret jmp pop notl jge jp add pop repnz sub inc rorl sub mov inc (bad) lock mov aam or or mov scas sbb sti jne sbb nop jae sarb mov mov cmp mov pop pusha add xchg add add call push jg mov mov test je mov mov cmp (bad) mov push sub dec lock push mov data16 mov dec push shrb push outsb fldcw pop icebp push push dec pushf cmpl aas sub shr fucomip mov inc pop xchg mov mov cmp faddl lds sub mov jae out ja not lock mov add cmp ja cmp jp mov or sbb xlat push cmp (bad) xor dec or add loopne loope fild mov adc sbb pusha je loop pusha sbb pop incl dec hlt outsl mov mov and (bad) lock sbb loop mov xchg mov or sub mov hlt idivb pop cmp add and mov cmp or sbb (bad) jbe scas adc sti push ss adcl dec jmp xchg (bad) pop mov sbb mov popf pushf out jb inc cwtl sub xor out cmp add dec jne nop out sub or sbb jae mov cmp jae inc xchg (bad) cmp sbb inc sub inc pop fs aas cmp clc mov cld xor (bad) (bad) aas or add repnz (bad) xor cmc popf sahf push idivb inc xlat mov pop lods enter in je mov inc ds std xor adc jne push (bad) pop push sbb scas mov add pop movsl and push notl push inc hlt xchg insl sub out cli jl outsb (bad) fldl add je cmp cmp adcl mov rclb mov stos mov cmp xor lea arpl mov mov push shl pop fcoms or mov lea and jp test xchg jmp add cmc jne xchg cmp movsb lds sub xchg lock popf adc push pop xchg (bad) call mov mov lcall cmp lock jae mov out popa (bad) fildll rorl popf (bad) and jno pop push test je imul lock add adc add jecxz test sub sbb add add sbb mov xor push data16 cmpb and and es xchg xchg mov or pop mov xor jle hlt inc cmp loope and in mov mov les add pop pop push adc std lds ret mov mov pop pop xchg pop xchg test adc mov shl iret add pop loopne in out adc mov test test imul outsl push push mov sub sbb daa inc xor insb fistpl jo fsub push cmp adc push jb or pop cmp mov jns add sar test and hlt jmp sub xlat mov int or mov mov jmp dec fadds in (bad) std (bad) jb add or mov cmp jg test sbb add jbe decl adc add rorb fucomip data16 es or or mov and add mov mov sub test cld push adc adc mov insb or push or daa stc mov push rolb push sub loopne and push (bad) xor cmp or fidivl (bad) sub inc aas add testb je mov ja std or (bad) cmp cmp (bad) or add pop cmc xor test mov xor add fcmovne or fsubs test jne mov (bad) push test outsb bound and mov pop mov xlat add movb or push movsb jo (bad) mov cmp (bad) add push lea sub cld jg aad sub (bad) sub cmp jge mov lret mov out je adc xlat add lea and in mov dec push fucomp aad (bad) lds stos clc add std jae lea (bad) xor cmp mov xchg (bad) jp push iret mov add sub cs (bad) aaa adc pop mov enter mov sbb pop mov sbb cmp adc push pop add sub cmp negb jl mov pop mov pop sbb adc (bad) jle adc or inc mov sub adc and or pop mov hlt push adc lock mov inc xchg addps test fist mov es push mov cmp pusha decb xchg mov pop add adc repz sbb sbb sub sub xorl cmpl mov mov cld adc or rcrb les pavgb pusha pop pop or adc int3 (bad) ljmp or cmpsl fwait or xor sar cmp push jg adc jne fcoms stos sbb ljmp sbb insb lea sbb mov jbe push js lods jg,pn pop mov pop fnsave pop je pop jmp sub push sub sbb pop insb fisttpl jle out jne movsb sub cmpl mov es hlt inc add xor dec (bad) loope sub cmp sub pop daa xchg inc mov and jmp (bad) xchg leave jmp repnz jne jmp inc enter xor pop xlat test orb fwait pop movsb lock repz or je sti clc stos jle aas lock push outsl xor push push shrl ret pop or sti mov pop pop imul inc sub shl mov movb pop inc scas (bad) jne clc outsl addl jmp mov fdivl inc (bad) pushf or push push add or pop or jo push or jbe jmp jo xor mov sbb sarl sub mov add arpl sbb pop das jmp inc adc arpl ss sbb and popa aam pop pop push push sbb jp adc mov test (bad) jo xor in adc ss das lock test jne test ja in or movnti add push add loope push or jb inc xor (bad) jge inc mov or cmp clc rclb out mov mov cmp stos loopne xchg paddsw push jl sbb dec mov adc ret sbb cli xlat call orl jmp mov cmpl cmp (bad) mov push adc or adc sbb and mov mov jg sbbl mov mov icebp add loope add push or lock push repz nop sbbl notb jl loop cli add mov sub add negl add push in loopne mov add or mov push pop fcmovnu add and ja rcrl data16 sub insl imul and iret into fidiv sbb add inc lahf add add or and mov pop or fbld add lea adc add add push pop mov sbbl mov push xchg mov jo cmp xchg ret cs and fcomp add xchg in mov sbb dec mov inc xchg lret adc sbb mov (bad) flds mov adc cld jmp jge ret adc xchg ret (bad) mov mov bound ss adc insl push adc mov hlt decb (bad) lock cmpsb test jle call pop or mov add stos sbb add (bad) dec sahf je je lahf (bad) or mov test je sbb enter or sbb push xor jne,pn sub bound sar or out mov lret add xchg sub mov ret rol add xchg subl inc sbb mov or out sbb out mov fdivrl jecxz inc mov cmp sbb sbb push rdpmc ja icebp cmp ja mov mov inc (bad) sbb aas and adc push rol push push push jbe add xor xchg int3 adc or xor pop mov mov insb stc mov jp mov mov sub sbb ret sub inc push (bad) decl sarl (bad) mov inc rep jmp mov call jmp mov jmp mov cmp xchg pop adc sub jno (bad) mov cmp divl je aaa mov fwait dec js rep xchg inc je cld dec subb jl cld xor std xor jo or pop cld (bad) mov jmp roll and mov test and cmpb mov outsl ja cmpb add out in mov jmp cmp xor sti xchg mov push shrb roll ljmp call mov scas or sub inc mov mov xor jmp outsb cmp adc mov mov inc inc adc cmc outsl aam mov test push das add orb xor test jne push push cld (bad) (bad) push jno pusha mov scas mov in push and shrl mov ja cld adc je (bad) aas mov jmp cmp jb cmp ja sub ret nop data16 and nopl adc in or adc or sarb fwait orw inc out or or pop fldcw pop inc test fmuls mov mov mov jb mov mov sub xchg addb (bad) sarl xor pop cmp pop cmp and loop jp pop xchg dec loop fbstp mov sbb mov adc cmp mov ja and in and jne call jp ljmp push mov xchg lahf jmp cmp push dec loopne rol (bad) (bad) mov (bad) push mov mov xor mov inc add jb cmp mov push mov mov fiaddl xlat pop mov sub jbe mov pop cmpsb lret leave mov inc xchg cmp add sbb lret push lret mov inc inc and outsb xor add mov jg ret ljmp pop cmp jne dec cld mov mov push mov pop add aaa cli js or loop push adc in lcall loop je mov cmp jne push adc add sub or add add sbb cmp aad jbe cmp jne shr inc adc add jae ret scas push mov shr or aaa push lcall or iret mov and mov cmp jne dec dec lcall dec dec sbb mov jecxz or out in mov shl data16 mov rep adc stos pop daa fidivr rclb sub mov push inc jae jge shlb je mov or je or je out out dec and je pop je xor dec (bad) out pop imul and add sub insl clc fbld or cmp ja lea push add push jg mov xchg out int or jge jmp inc mov js pop jle cli std sub jmp inc inc jmp mov fist lods leave (bad) add pop sar adc or inc fild aad cwtl pop xor mov out xorl mov mov loop cmp jbe sub inc mov dec jne pop into xchg jecxz decb repz sbb push lock fist fs je adc lea mov adc lea fldt and jb imul add je das fnsave add popa dec mov cmp and xor push pop xchg push push sbb jge mov xor jo dec sub jmp fstp fldt (bad) int adc out mov repnz mov push adc mov pop jns add or (bad) jl push ret mov adc inc repnz sbb xchg and ret xchg call inc mov mov lock dec es ja repnz xchg sub sub pop jecxz (bad) out jle mov lds mov jbe imul cmp out call mov bound cmpb cld fwait jg xlat fadds outsb xor xchg push or push push (bad) fbld ret inc mov push pop test enter mov inc (bad) (bad) call and daa (bad) lret into pop inc test xchg clc js aas sbbl pop (bad) (bad) (bad) (bad) jmp addr16 leave repnz bound and cld gs sahf mov sub (bad) ljmp inc aad iret decl js inc mov stos mov cmp or mov (bad) incl pop out sub imul (bad) divl jl xor cmp call mov (bad) call jle push inc mov push sbb sarb repnz test es rorb nop fildl daa movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov pop pushf mov fs (bad) (bad) (bad) call repz loope jp iret inc bound ds push cmpsb scas mov pop or (bad) (bad) pushl xchg leave dec dec in xchg cmp xor in cmp sahf xchg pop cmpsb lock std rclb popa movsb mov and addr16 repz mov subb (bad) (bad) call pusha les outsb bound xor jmp mov push xor test pop jne push pop push (bad) hlt and add jmp fdivl ret hlt movzwl lea push push test xor les mov out xor push push mov (bad) imul sub hlt push data16 add mov andb fnsave jmp sub mov dec jmp push clc pop aas or mov adc push dec inc push push inc push inc pop inc outsl jb popa outsb fs inc mov jo imul push dec popa jae push popa insb jne mov mov (bad) mov sub add shll jnp xlat mov xor mov inc push sub outsb aad cs mov or dec cld jne dec mov or cmp xor out jne mov test xorb fdivrl mov and rorb xorl imull test or sub enter cld sbb daa and popf cmp sbb daa xor inc daa dec mov loopne mov or push cld add rorl fdivs rclb add stos pop stc ret mov sub pop fmull (bad) scas aam mov jmp cmp je pop mov add jae loope mov pop push mov mov push sbb cmp pusha add (bad) mov mov jbe jg clc push sub cmp fucompp inc xchg cmp push jae paddd (bad) add and loope cmp cmpsl mov add add ret xchg xlat push mov mov adc push js loopne in out sbb outsb mov and cmpl mov ficoml add mov push ljmp call (bad) call mov (bad) sub inc ja mov mov dec in call sbb sarb sub xor xor jb cmp fmull adc or push inc push cwtl xchg inc fcoml out sbb xor test test mov mov cmp je mov leave jne mov pop test jmp lret lock xchg or movl or (bad) mov ret pop add sub mov pop cs mov add jo pop ljmp (bad) std in and lock jne das push jbe clc mov dec out es cs orb fdivl inc pop push in or data16 sub mov pop test adc mov shl fsubp scas xor decl (bad) adc dec movb dec push cmp sbb add dec jne (bad) fbstp sbb add sbb jecxz ret out dec cmp fistp rcrl jge xchg push js lcall xor call lahf in push pop add mov jg jo jl push hlt xor mov mov mov or inc add ss inc or or fisubl inc loopne mov arpl test mov push mov fsubr popf jno adc adc push clc scas pushf aam (bad) sbb pop jbe add popf inc sbb call sub rolb fadds jbe jmp push test adc aaa mov push xlat xor frstor push cmp cmp iret mov repnz add add fiaddl sub or jae daa adc scas jnp,pn push push and sbb jmp lock jmp or mov push and popa add sbb fs jecxz xor nop flds loop dec fwait pusha fcomp cmp (bad) jecxz pop incb aam jl inc add jne andl fiadd push mov adc outsb out mov ss test movsb cmpsb add push inc popa xchg call cli out push popa movsl mov pop jb jbe sub mov push cmp ljmp clc add stos imul enter adc ret je push mov es pmaxub dec add out add sbb push sub push mov test mov mov or push add sub inc lods jmp xlat pop mov ret dec mov inc or movsb mov and je dec or bound mov push ljmp imul pop add lds pusha mov mov sub repnz addb fild fdivrs dec fdivs xchg mov mov or mov jg pushw lock mov sarb loop jno adc inc jmp sbb imul sub sbbl daa adc insl or das push push cmp arpl cs or dec int3 or inc cwtl jmp punpcklwd lods jo pop (bad) cmpsb cmp pusha pop test add cmp push (bad) test loopne roll or aad cmp xor push push push push push mov pop push jns and stc es mov sahf sub jae and or pusha add mov or inc xor aaa or pop mov mov cmc andb lea mov jb lods pop and or add hlt loop xor mov xchg add push or out mov pop dec fsubrl add je cmp (bad) cmp sub and jmp add pop idiv aas sub jb je jmp cmp sub pop imull jmp sub cmp mov jmp mov (bad) out dec jmp mov jmp mov jmp push sbb into jmp mov sbb fbld mov jmp mov jmp mov jl pop popf mov call ret jno xchg testb jecxz in aad push (bad) je push es test fidivr loopne (bad) mov push inc sbb in aam add or push inc sti sub or rol push sub inc test xor jo scas rolb clc ja cmp push jb inc in mov jg jne cmp cmpsb add or cmp adc add adc push pop scas xor mov dec mov dec pavgb cmp dec mov fisttpl xor hlt call and pop add mov js jl lea pop lahf mov mov xor pop sbb in ds jle add (bad) sbb inc dec mov (bad) iret shrl aad adc or mov mov jo stos mov movb sub cmp inc subb sbb lock add add call add dec in pop pop pop inc pop sbb incb cmp out add mov icebp icebp popa rclb nop mov cld inc adc mov sbbb clc rorl dec rolb fmuls (bad) mov scas push rorb mov dec movsl push xchg out cmpsl clc outsb (bad) xor sbb inc movsl pop sbb adc ja add mov mov test pop push cmpsb dec ss lods outsl mov and adc inc imul into adc jbe mov pushf add push push push fsubs pop sbb inc adc mov stos (bad) mov add xor movsb or (bad) mov fadds jnp je cmpl adc push and (bad) lock mov call sti into inc lock dec and xchg cs or fsub das js daa push jne and cmp sbb mov sub add pop add ret mov sbb inc adc cmp push fcompl push insl dec popa push jne mov adc rorl pop mov add pop adc or mov push movsb sti ret pop pop mov rclb jmp add add popl mov sbb pop mov mov or adc decl push lea push xlat mov mov push les push adc cmp sbb add or outsl lods sbb dec and inc jg fidivl inc daa cmp xor dec pop xlat in push sbb insb xchg adc inc lods repnz mov jle push add loopne push outsb test movw pop or pop mov sub insl or sub mov das movhps stc mov loopne ds cmp fcomps mov das mov aas inc xchg push push mov push push adc sub aaa push negb test add sbb cmp cld mov call fisubrl or jmp lea cmp adc into mov jbe xor jl lock lret or xor arpl sahf stos fadds sbb add cmp clc or push mov mov or ret cmp je adc adcb jle add sub inc add xor call pop mov pop out sub jmp push cmp ja call or or addr16 in addr16 imul add push addb mov inc xchg out (bad) or mov pop add pop pop xor add and (bad) push in outsb pop cld ret fnstcw or (bad) mov aas scas xor inc cld ret push aas jle test lock mov push cld add cmp pop and mov adc hlt sbb and jmp xchg cmp adc or and dec mov imull xor inc cld add sti popf call mov mov lds push sbb pop push mov dec clc mov fdivs loope lret or fcomps cmpsb xor mov rorb in cmp add xor or push cmp fs dec jne mov pop out ja jge and jl push cld aaa add dec jmp and inc pushf sbb cmp into pop dec jne mov je or or add add pop lea jmp xchg dec popl add push sub jne pop jl imul ja pop xor and add pop xchg or mov loope mov daa stos and jmp aam pop lods mov clc fist scas inc das lods pop add add movsl inc test push scas pop jmp adc dec gs loope inc jae loopne es mov aaa xor xor sub pop (bad) add jg dec jl cmp jge sub outsb sbb lret jg push fnsave adc shr or mov and jecxz je int3 ss mov out xor sub jge mov in loopne sub stc add lea inc dec or sbb movsb push push cli mov push or lahf cltd mov push mov (bad) jle inc dec jge cmp adc imul add sbb or fsubs push mov lea lock add mov or add mov mov push insb dec js mov inc or insl jb adc adc roll roll fcoml mov mov bound xlat push les clc jg dec out and sbb mov loopne add or jno mov jo (bad) lods jmp out ljmp cli pop cmp push pusha push loopne icebp pop jg loopne ret jle ljmp in fnstenv sub xor sbb in pop dec jo push incl push das call gs push push sub jo cmp shll push and call test adc push mov add pop push cmp jo push pop pop pop ss repnz xor cmp push in sub sub rcll mov or dec push xor das int3 cli pop pushl mov and out (bad) mov jo add add pusha mov add dec cmp pop outsl add jb and stc out push inc and mov repz incb mov pop scas out enter das or push ja mov and pushf cmp add jnp cld pop pop dec cmp nop pushf lcall jno maskmovq imull ret cmp push lods add add or nop ljmp cmp cltd aaa call mov cmc mov cmc in enter sub mov push mov (bad) stos or jl push insb push mov sbb mov cmpsb mov cs (bad) pushl mov je cmp je cmp je cmp je push rclb cmp je cmp into cmp je mov fisttpl cmp mov cwtl clc jmp lods imul and out jmp push pop cmc pop ljmp add dec cs or adc cmp pop jmp cmp inc scas cmpsb xor sub xor jmp arpl or aad cmp ret mov call adcl sahf out push (bad) and sbb pop mov push mov and test int3 jg test insb stc out and sbb pop daa add sti aaa ja cmp jmp es dec and jl nop sub jmp lret and (bad) pop add jmp test test lods jo data16 inc js jmp sbb adc xor scas xchg adc and fldl add cld je clc push ret inc push mov jle ret push loope add push mov cmp rcrl push xor pop cmp sbb rcrl push or or sbb bound and mov add pop or imul jge test in cmp lea mov bound fimul cmp dec cwtl or aam jmp aas or (bad) (bad) add sarl xor mov (bad) jb popf adc and scas or cld dec jne arpl add iret insb and mov push sub popa jge inc push mov jno push jne sub xor in mov test in shlb mov dec xor add es ja lock ficompl sti add add inc ljmp js icebp mov jo add je cmp int3 test inc lret dec adc sbb cmp adc in pop sbb das in push or call push adc pop xor push mov iret pushf clc adc push nop mov test aad add into or pop push ds pop mov jle xchg mov ds push call push clc inc mov fbld (bad) (bad) cmc fucom mull mov jge and add dec cmp sarl pop pop ret aaa add lock lret clc mov add add pusha sub jl push imulb add jne sbb (bad) add add mov inc and sub mov dec cmp je daa xor fisubr inc inc add sub fildl divl popa in ret or push stc pop push imul cmpsb mov and xor sbb pusha sarl or mov jo jb jmp jl andl push xchg jbe jmp jg mov cltd aas dec adc movsb push push sub pusha fiadd lret enter push push add aas inc hlt inc xor ljmp jo fcom out in pop out push xor xchg add ficoml loopne sarb jno jae sub push xchg out dec inc jmp jne adc int3 cs jg or adc or pop cmp adc nop sub push add jmp dec add or xchg shr setl cmp je dec inc pop or add fcoms popa (bad) sarl mov mov xchg mov pushf dec lahf (bad) decb xlat inc fsubrp and push adc inc bnd pop stos lock aam sbb cmp pop mov fiadd push or cmp arpl inc dec (bad) lock jae shrb push push loope push inc add (bad) fs test ret rorl push mov inc lock dec imull dec in in ss int cmp je andl nop mov cmp jne mov cmp jge rcrb jbe add imul jne aas shrl add in mov ret pop jmp decl stos cltd jl adc lret in jge or push in test in push mov adc into stos lods inc movsl out repnz push dec rorl cmpsl sbb movl popa fmull lock test (bad) insl xor add cmpsl cmpl jle cwtl or loope xchg xchg dec jo and cmp or gs test lcall dec jne enter loop sbb in push subl cmp nop cmp push icebp out mov test (bad) mov xchg (bad) das lock sar outsl push loop js test out lock mov jno mull cmp push clc lods xlat cmp jle repnz jge or mov sbb mov or mov adc inc js mov in rclb jo inc xor jge add cmpsb xor cmp dec (bad) pop xchg dec gs test adc roll loope add mull xor cmp rorl out lock jne dec mov adc push and pop push xchg or pushf xor sbb xchg ds adc dec push push push mov incl movsl jecxz (bad) jmp (bad) in sbb aad jp sub addl nop test outsb push sbb fsubrl insb pop lahf inc push jnp jne clc addr16 aaa and pusha mov mov and pop mov mov pushf cwtl mov inc lock outsb cmc dec sbb adc addb sbb insl mov mov inc add sbbb jmp fildll adc out pop mov xchg push mov sbb roll js sub fwait push mov push and ret or pop mov ret mov push ret shrb je sub in sbb std scas jge cmpb cmp js pop jne (bad) int rolb inc jl ds notl add lods push and shrl jne (bad) ljmp fcmovnu inc add jno clc pop mov sub cmp lret push inc push push gs imul out std fs and je cmp loop mov mov cmp test sub dec scas insl ret mov push mov xchg sub (bad) daa pop lods xchg pop ret imul call gs xor cs insb pop inc gs outsl outsb addr16 popa je dec popa push lret insl gs daa outsl loopne mov sub jecxz scas movb inc mov and push jl sbb xor fs xchg and in icebp or es pop or push mov sub inc out and int pusha pusha cmpsl fstpt iret mov test mov repnz pop pop inc jecxz adc in xchg add sub and inc xor push loop jecxz jge data16 cltd ljmp sbb cli adc cmpb stos pop cmp jne dec mov popf inc addb clc sub sub sbb imul add mov pop mov fs outsl repz mov xor cmc add movb mov ja jb aad cmp mov jae aaa das (bad) mov cmp dec or dec call add lea cmp pop add (bad) jbe mov push or mov lock mov or jp mov stos pop orl pop fcom add mov dec or (bad) fist pop les cli mov mov mov xchg and sbbl dec add (bad) daa inc orl jno pusha or jne imul fsubl or movb mov loop dec cmp cmp cmp mov or mov pop mov add push cld jne andl or ret xor incl add bound fidiv add xchg and mov (bad) jo (bad) xor inc mov sahf mov sahf je sbb push test push push mov adc hlt adc pop movl fcomp mov pop pop ret sbb loop sti push push movsb ss pop mov and mov fidiv dec adc cmp pop insb mov outsb andb xchg mov scas push insl (bad) js inc (bad) or mov and ret stc jbe adc jnp xlat int3 mov mov sub pop bound (bad) stos mov sub hlt movzwl inc cmp ja mov inc jmp cmp mov xor cld ja fcmovb jmp or mov fwait divb jecxz sbb and lret push imul dec aaa jae mov rolb dec or mov std add mov add dec movb push push push pop and sbb or (bad) pop add cmp lea ret adc lock repz std mov or jbe cmp push pop rcl ds inc test hlt pop lock xor or inc test je or jae and je cmp adc out mov cmp jne fidivrl pop cwtl and or mov pop (bad) jg cmp cld mov lahf add adc inc lcall (bad) push inc adc or movl and inc inc mov ret adc jne xor sbb les jne aaa sbb or jb bound mov out push popl shrl jmp pop xor jp xchg int3 js pop sub push loop and dec not inc push and outsb std xor dec xor mov dec outsl scas push das cmp or mov push popa orl cmp andl push (bad) pop movsl jcxz cmp pop mov pop in test dec and push mov pop inc xor mov outsl inc frstor xchg lods inc cmp hlt xchg test sbb pop pop cmp dec mov inc mov xor test jnp cmpl jo sub add mov out mov push sbb (bad) or (bad) xor imul and push lock (bad) push lea push push hlt or lock mov or and ja mov nop bound jnp pop fabs out add add (bad) and adc call in mov mov subl add (bad) or mov mov mov xor add inc dec lock out shrl shlb push mov adc jnp lret in and xchg or int sub mov cmp jbe shr mov jmp jge push inc mov shlb emms (bad) sub dec (bad) lcall out das daa mov cmovo push pop push test pusha and jno lock mov cmpl or loopne out cmpsl xor or jmp push mov ja aaa hlt sub call leave jne rclb pop popa pop dec sti adc lret mov jo and ret mov mov cmp fdivrl ret arpl mov mov fisubr cmp mov jge cs pop or dec insb jle adc adc or sub add shrb or jne bound push xchg gs ss out mov rolb add push or leave sbbb mov pushf add push dec inc fistpll sub add xor push lods fimull outsl fs gs push gs movsl jne mov adc fdivr imul or cmp inc outsl arpl out (bad) negl gs jne je dec outsl je imul xlat (bad) fisttpll outsl inc arpl or mov test sbb jb xor xor (bad) (bad) mov bound outsl js imul ja nop pusha fs sti inc hlt andps outsb dec inc xor je mov push xchg fistl js je leave leave leave jo push leave pusha pop pop push leave leave leave leave push dec dec inc leave leave leave leave inc cmp xor leave leave leave xor and leave leave leave and adc leave leave leave adc add fs add xor hlt in in lock call in fnop aam leave leave in shrb leave leave leave sarb mov test leave leave leave leave mov leave leave leave nop mov leave cmpb leave leave leave jo push enter and fs xor mov in in lods test mov pushf cwtl xchg nop in in mov in jl je in in insb push in pop pop push push in in dec dec inc inc in in cmp xor in in sub and in in sbb adc in in or add jb xor cld xor hlt lock jb in call jb fnop aam jb jb int3 enter jb jb mov jb lods test mov pushf cwtl xchg nop cmp sbb aaa dec cmp cmp cmp sub and cmp cmp xor inc and cmp cmp adc cmp cmp or add pushf pushf mov ss hlt lock pushf pushf pushf in call pushf pushf fnop aam cmp mov (bad) sarb cmp mov cmp cmp cmp pushf cwtl xchg nop cmp cmp mov cmp jl je cmp cmp insb push cmp pop pop push push cmp cmp dec dec inc inc cmp cmp cmp xor cmp cmp sub and cmp cmp sbb adc mov cmp or add add xor mov in cmp cmp fnop aam cmp cmp int3 enter cmp sarb mov test cmp cmp mov cmp cmp cmp cmp cmp cmp push cmp pop push cmp cmp push dec dec inc cmp cmp inc cmp xor cmp cmp sub and cmp cmp sbb adc cmp cmp or add mov add xor hlt pushf pushf pushf pushf lock call pushf loopne fcom mov int3 enter icebp sbb add shl or sbb (bad) mov push inc les sti into dec (bad) aam and push or in movsb in xor out sbb clc ljmp push cmp mov and sbb add pop mov xor push ret and sub xor mov pop pop ret aas (bad) shr and dec ret fs sarl mov sbb fstpl repz inc push push popf hlt lahf hlt jae cltd sbb pop rol and jb fiaddl nop scas cmpsl leave dec aaa cmc push and pop stc jmp outsb and pusha or pop test pop pop add pop mov into push push push scas mov adc outsb jmp xchg inc add xacquire add or and sbb mov sahf mov add gs outsb je inc pop and push dec inc inc dec add outsl loop imul pop push and dec push inc push dec pop and mov mov push push pop sub push inc dec in fidivrl dec dec dec inc push das jg jo and cmp jo add leave outsb outsl add push mov es psllw repz pushf pushf pushf hlt cmc div pushf pushf pushf pushf clc stc cli sti pushf pushf pushf pushf cld std (bad) lcall loop pushf pushf pushf pushf in out pushf pushf pushf pushf call pushf pushf pushf in in out out pushf pushf pushf pushf rcl rcl pushf pushf pushf pushf aam (bad) xlat pushf pushf pushf pushf fcomp fcmovu pushf pushf pushf pushf (bad) (bad) pushf pushf pushf pushf rol ret pushf pushf pushf pushf (bad) (bad) pushf pushf pushf pushf enter pushf pushf pushf pushf int3 int iret pushf pushf pushf pushf mov mov pushf pushf pushf pushf mov mov pushf pushf pushf pushf mov pushf pushf pushf mov pushf pushf pushf mov pushf pushf pushf movsb movsl cmpsb cmpsl pushf pushf pushf pushf test stos stos pushf pushf pushf pushf lods lods scas scas mov xchg (bad) dec je cmp xchg adcb jbe subb sarb (bad) or push aas push lcall imul inc js gs imul push (bad) adc adc into pusha je mov popa jo fisubl nop jo jo cmp dec jne dec dec gs outsl jb push jb push sahf int3 outsl int3 std jle xorb inc dec outsb mov mov ds or sbb lret push adc out scas jl test fdivs dec ret nop adc fdivrl fmull push sbb xor ds lahf dec outsl nop jbe inc inc imul push and insl nop mov sub popa outsb addr16 in sbb dec jbe stc jno push outsl ja inc js push push pop xchg dec mov gs cwtl scas and repnz hlt ja push xor dec jo lock lock add insl add fstpt gs jns ds adc inc or shrl mov (bad) mov (bad) mov clc scas sbb and mov add push outsl imul or ja loop dec or popa jae ds mov inc inc leave mov scas or pushf (bad) enter adc add jae push adc inc cmp sbb mov adc insb nop mov scas les inc mov imul mov and cmp or je insb inc adc push ds cltd or ficoml loop pop lods mov lock inc popa fsubl jge cltd (bad) pop ds inc mov nop mov inc enter leave in push push data16 in add sarl or push stos push inc jle xor (bad) popa data16 cs pop jle add mov icebp cs xor pop dec invd mov inc insb jae inc sbb andl add cmp aas inc xchg cmp dec adc inc xchg add jb popa fs les lds jge int3 orl push bsf add addr16 lds jnp fs aam aam jg sahf out pop aaa push inc or ljmp xchg adc sbb push loopne sbb fisttpll shrl push push add xor adc mov (bad) push and dec mov push push add mov cmpsb push and and fadd lods outsb arpl sub jp dec cs push ret adc repz mov xchg out lahf mov mov mov test xor ret idivl push aas lods xor fisubrl testl fidivl sbb or (bad) cmpsl mov xor inc call or paddb adc mov mov mov jnp call xchg fistp adc sub add movl nop pop or sti test inc push push loope fs stos hlt inc add adc push inc inc dec add movsl shr jg mov pop add pop sbb lcall sarl jbe cmp repz je movzbl cmc test jl mov (bad) jp lret add or cmpsl jne loop add ds jnp jle mov mov or ds add pushl out and sti je loopne add in aam cs mov pop push dec cld rorb roll mov jg xor push and or rcrl arpl adc clc addr16 test int int lret push shll or sub push jo fild mov xor mov add insl jecxz push adc xchg ljmp lock repz cmpb ds mov jbe adc test lds dec or fcmovnbe sub clc push sub inc es cwtl jnp stos aaa in es in in mov cmpl roll fildl repz pop mov cld mov ljmp jge add push or pop or cmp not pop cwtl inc jmp daa and push decl sbb lock add or aas xor xchg ja lea lea adc cmp js pop loop xlat mov je push and jge aas std in cmp outsb adc sub pop or mov or dec and in push dec (bad) and int3 scas add add xchg pop lock (bad) pop jae test push xchg dec fadds insl mov popa js lock dec sti incl push add sub jb sub je (bad) jae cmp paddq sarb mov lcall adc or rcrl (bad) jae inc dec jne bound fwait jle or jne sarb inc jne add sub mov (bad) div dec push mov mov jb push pop mov das clc pushl ljmp jbe add mov sub jmp add dec jne popf std mov out in adc leave push outsb cltd inc mov pop arpl inc loopne (bad) inc or cmp xor (bad) jnp and jo pop mov negl xorl in loopne rorb int3 sub mov add fsubs or leave mov add sub mov add cmc mov andl push and fistp mov lock faddp add add sub add rorl (bad) fdivr (bad) add xor add sbb clc mov sub rcrl loope nop loopne enter ffree ffree ffree pop aad add aad int adc and dec sbb or lods and pop ror iret cmp add push mov test push add and rcr and inc pop ja lock and or pop adc rorl mov (bad) int3 xchg loop sub aam fbstp insl imul inc pop pop inc cmpsl mov insb pop hlt push push pusha push aas insb inc inc cmc xor mov mov and mov pop mov ret ja pop pop dec mov mov and mov push sbb shl cmpsl xor ret mov pop loopne,pn adc and outsl ret hlt movb jl inc mov add mov adc jb push cmp rclb push subb mov ret ja xchg push repnz ss pop adc mov das je fldt fcomps setne int3 mov cmpsl (bad) ss push jmp cmp add inc nop mov add les daa pop add (bad) jns jne jg xor ljmp out test adc dec mov sar aaa jmp and or rorb cmp sub add enter inc idiv out cmp ja mov and ja and aaa and push push push cmp ja sub dec mov mov push mov (bad) ja lea gs movsb inc jae push imul mov rolb das jns pop push rol popa movsl movsb ret movb xor (bad) out notl mov mov outsb test adc or push fsubp imul das sub cld daa or mov mov sub add movl cmp je add dec xor add xlat addr16 fistpll call call (bad) (bad) test mov xlat popf xchg push dec bnd hlt ja add cli pushf sarl adc jmp jl xchg loope imul cmp pop (bad) mov fisubrl sbb adc jg (bad) jmp dec adc xchg push xchg (bad) or cs sbb cmpb push scas loop cmp push push xor aad enter ficom and ficoml xchg hlt lds loope clc cld add adc imull push inc call inc lret (bad) call lock mov mov dec repz xor adc std xor adc nop xor std fildl mov xor mov mov ret mov lea daa mov sbb clc lret push xlat mov dec not mov mov lret in movsl rclb aas fbld insb arpl mov push mov add lret add lods loopne and fstps mov out sbb les daa adc pop adc sahf push jecxz insb addr16 dec iret push ds call pop inc xor xor repz mov mov rolb repz pop pop cmp cli add (bad) in ljmp mov add jp mov mov xchg les inc pop pop jmp pop add xor (bad) jne add mov pop inc inc outsl jo pop out jb inc dec je mov fistp sub jbe sbb pop pushf (bad) lods pop push (bad) aas mov mov push add (bad) jne cmp in add cmpsl jno sub mov out mov or or cmp rorb adc push inc mov push dec dec (bad) mov aaa insl rolb adc lods and stos mov aad cld sti pop jbe mov scas pop cmp jne jg mov sbb les mov and and addb add (bad) lcall rolb fistpll add sbb cli push scas pushf pop aas cmc jo or ret add push (bad) aaa mov je add clc adc int xorl and cld stos dec jne les inc fadds aas sub jmp mov in mov sub lods lret cmp jne cs pop adc jg lret lods jmp fidivrl outsl xchg sub sub mov je movsb jnp addb ret (bad) scas mov adc cmpb or lret ror rcr ds movsb xchg pop mov rep sbb sti dec (bad) into out or jle pop pop mov mov mov lret cmp lock cmp xor movzbl add and popa scas scas outsb in dec adc adc in (bad) aas sbb je ret je xchg ret and mov push lcall pop jne (bad) repz divb mov lcall nop mov out (bad) pop xchg push daa lahf jg das xchg out movl push hlt and in xchg jp loopne fsubrs sarl fwait push mov mov (bad) (bad) sub sub clc inc je int rol sbb add push hlt movsl fldcw hlt jmp push pop outsb adc cmp aas imul hlt and aas pushf push and jne mov cmpl jbe mov cltd jge or jmp xor inc inc add aad lods and jmp mov fist or jne aas and aas mov cld call pop js mov push xor pushw call fdivl or jmp jecxz scas ljmp pop ds leave addl call lods jp jmp mov outsb mov jl push inc je mov or je mov inc je mov fcompl hlt dec jl mov mov ret cmp jbe mov xchg test das popa adc mov movb add jne (bad) loopne mov inc iret dec xor pusha fwait mov xchg ret xor and cs int3 lahf ds add jne add and iret rcrb test mov mov fdivrp jle lock xchg mov adc jg inc pop loope sarb sbb mov or inc lret cmp rcll push xchg inc scas (bad) in orb insl mov ss and cmp ret sbb lea mov jmp dec sarb scas fbstp xor in aam cli rcll fnstsw stos cltd adc lea aas cmpb rclb inc pop sub mov cld xor push xor stos or decl shlb or mov neg jmp or rorb push enter xchg push mov into mov out sarb fs adc enter jg sub (bad) jmp cmp jne pop pop mov add mov stc mov psubd mov clc or lret mov in mov cli arpl add cmp jge pop jle mov push (bad) loop cs daa (bad) adc mov add dec sahf xchg add movzwl sub (bad) popf (bad) out cs lea mov add sub sti mov pop adc je add or mov add lea sbb call out sub add enter push jmp pushf mov push mov dec dec inc dec inc dec lods or fwait push stos xor jge lretw or mov aam nop fcmovb mov cmp jl pop sbb mov out push je mov stos neg sbb stos jmp inc mov mov loop movlps pop pop xchg add inc clc dec test sub pop push mov fimul add sub (bad) add mov das clc leave mov mov mov movsb insl or mov adc mov jl es je addr16 cmc or repz inc test jne add cli insb in stos xor call (bad) push sti add je inc jne bswap push loope mov ret xchg repnz inc mov and sbb mov out fimull mov adc pushf fwait push xchg iret scas lock push push sub and cmp (bad) fmuls sbb jg mov inc (bad) or mov inc loop add mov or (bad) dec and and inc add and and adc and sub inc sub sub cltd cmp push sbb and sub mov orl es sub xor fldenv jne inc testl jmp mov data16 mov or inc push aam add add bound cmpl add movb xchg fldt mov aas imul adc pop mov out fabs push pop jge pop adc call fldt fwait mov push fnstsw fwait mov testb je fidivl jne (bad) ja sti lea mov inc sub nop shr and add fildll xor stos lcall dec out sbb sti adc jge pushf or (bad) mov cmpb jb movb js decb and pop fwait rcrl (bad) pusha xor jmp mov (bad) mov icebp notb push shr jl aad mov add xchg out xor ljmp jp jg and dec rorl je and int3 pop pop sub (bad) fisttp das cmp adc jl mov cmpsl subl mov or sbb inc loopne push in xor cli gs or fidivl fwait inc sbb mov push sub call and jne dec sub cmp xchg cwtl jl and inc ljmp dec adc sub movb cmpb imull cmp jbe pop jmp mov mov pop pusha sbb inc loope call or jns fwait lds push fldz cmpsb mov inc decl ljmp lods or jnp mov mov or and cmp je and fistpll add jp mov cwtl jne mov je and sahf add push jmp mov mov adc aas jmp fstpt add push aaa je test or or and push or pop int3 push mov test or fimull add add ljmp mov pop stc es testl imul push cmp aaa jge push inc add inc rorb jl dec sub cwtl data16 pop fist add test push lret pop mov mov (bad) xor xor adc sub fldt cld xchg es aaa ja addps mov dec lods lahf jle fstpl fwait mov cmp leave (bad) mov fimull bound xor cmp inc or push test sbb cltd dec sahf insl (bad) leave adc mov xor push adc or pop pop rcrb cmp pop or xor fistl or cmp inc stc inc xor or jae outsl xor gs fiadd imul push pop out adc cmp (bad) or add xor jmp ret sbb pop loopne gs movsb dec fist push sbb xor inc mov fcmovnb add mov fnstsw fist push and lods std test adc adc or dec jne sub dec (bad) mov push loope sbb mov fcomps cmp sahf sarb and mov roll xor and jbe div test sbb nop add add icebp int3 mov scas imul idiv add decl fbld xor fsubrl psadbw adc (bad) ja and imul push sti insb cli movl pop inc (bad) ja adc push jo std mov add inc dec jne sub dec mov dec mov idiv imul add jno add sub ds ds add popa icebp bound ret or movsb xor inc std std vmovaps push clc mov aam pslld (bad) and jge test insb fstps sbb and dec in test jg fdivl jno hlt jbe mov mov jmp adc sahf pop inc out dec data16 pop or cmp jl addl into lcall (bad) bnd or pop pop mov add ljmpw fwait mov sub cmp fcoms fistpl ljmp push add mov sub jecxz imul sub push js mov shrl (bad) loop cmp jb adc sub mov das sbb dec xor or mov xchg addl add incb lea (bad) mov clc (bad) mov enter shrl push jmp (bad) pop je rclb test mov cmpsb mov fidivrl sbb xchg and inc lea fcompl push inc jmp adc fist (bad) push pop aas xlat fcmovbe icebp jnp dec push shl shl or sbb inc pop add add psubusw (bad) js rcrb sbb imul mov mov mov lret cmp je adc jg scas lock hlt out push cmpb jne sti mov pop ja jo add push lea or lock and ret in inc in add jecxz out stc mov in jge call lret mov nop mov mov add xchg outsb outsb cli mov add inc in sub adc xchg repnz mov jne push inc or mov pop mov cmp mov mov sub daa dec inc ret in mov je or int rorl ds fsubr aas add cmpl sub and mov loop aas jb add leave add sbb adc dec out fmuls dec sbb test dec psubusw imul xor add xlat xor pusha push iret in ret repnz (bad) ret xchg sbb or push adc jne cmp xchg inc cmpb jne push or out (bad) add test jns pop add xchg sbb mov mov (bad) or push inc stc cmp sub add pop mov pop int pop cmp xorb in outsl cmp sahf lcall inc out pop mov (bad) ja mov and push mov inc ret lahf and decl cs mov pop cmp jne mov icebp sbb xchg fisub push push (bad) setnp and cmp rorb push or pop hlt or or or push pop add or or popa sub or js movl repz cmpsl pop imul cmc push mov push add shlb jle xor push and loopne,pt sub cmp push cltd (bad) mov add adc les popf dec push lea jnp adc and iret xchg sub xchg adc stos mov hlt dec adc (bad) (bad) xor cli hlt inc in mov test dec in sbb leave mov lcall jg aad loopne jb push mov cmp das sbb or dec stc cmp nop es xchg sbb dec cs and loope push mov fimul pop es mov lock mov mov dec jg je mov add (bad) sbb pop or je or je jmp cmpb js icebp jne mov (bad) icebp fstpl sub sub jl mov jnp dec rolb jmp cmp xor mov test aad test popa mov xlat push (bad) push ljmp gs lea push mov or jle mov or out push dec fist pop add mov call xor mov (bad) and lret push mov dec in sub push inc xlat jne sbb lret xchg ljmp pop cmp addl insl push cmp daa jns adc add cmp jae lret pushf inc dec ficom mov lcall xchg cltd dec xchg (bad) enter es or nop push pop pop sar ret push rorl loopne pop xchg out adc or imul mov fldl sbb cmpb pop pusha pop push imul mov popa sbb push divb test or dec jge mov rolb aam or aas mov mov mov adc jnp pop test inc test inc mov into cmpsb ret pusha fsub xor push jmp ljmp push dec ljmp adc and and cmp test sahf movntps inc ret jne or mov sub adc mov add or les sbb lcall scas pop andb mov or xchg stos and pop push xchg clc je jnp mov cld rcrl add or into add mov push push xor ljmp dec mov mov shrb jae and jb mov add mov subl js add cli mov fimul and call lea aaa (bad) mov fwait pushf mov dec pop es cmp xor jne shrl sub lret lcall add mov test clc loope sbb pop jle pop or insb pop out or pop jl pop in lcall add jne incl in pop mov cmpsb and add mov fildll je dec je sub sub xchg mov jmp mov jmp push push push es push inc push adc popa mov jle fadd out push add pop and aad pop loope or xchg lods mov mov add jl pop pop je mov mov call gs cmpsl test inc mov mov jle iret mov mov add push (bad) jmp mov and adc rcll cmp cmp jg mov dec or xor sub add mov aas stc imul add cmpl jle adc pop and out sbb gs xchg shufps loopne push mov sbb out (bad) icebp add test test add adc popf pushf mov add or nop iret cltd test addr16 mov pop rcrb dec sub andl popf dec fistp adc cmp or fidivrl mov xchg lods fwait pusha stos iret add jmp xor mov popf lret sbb jbe add add pop shl inc sahf jmp in (bad) call jb and cmp push mov and jnp or mov mov repnz cmp hlt sbb jmp pop adc push loop mov add mov cmpb ja push xor sub push fstps fmull out scas push mov cmpb jle and loopne out fs jne mov add push pusha or repz xor daa or cmp dec vmptrld jns ss cs pop mov hlt push lahf and jmp fwait int jne cmpb shrl add ljmp scas jb add fsubrl dec rcrl fsubs fsubrs xor inc repnz out pop sub sbb add sti addb and adc jno notl pop jno daa fs ljmp sub or mov push jmp hlt lcall and sub push (bad) jmp push mov xor mov inc int3 push push or jge pop pop xchg inc inc add xor or sub dec cmpsb cwtl lret iret pusha pcmpgtb je orl add inc push sbb (bad) add and xor pop sbb test xor pop cmpl (bad) ja mov pop add sbb jnp sub xchg loopne xor push add pop or cmp or xchg sbb (bad) decb ret dec movsb es repnz out push sarb test jp add lea mov pop pop cmp mov sub xor add dec sti js mov add (bad) aaa jns aaa sbb adc pop sbb popa jne mov fisubl fstp (bad) les cmp sbb or mov fwait jmp sbb mov dec popf out les (bad) ds push pop push dec push push cmp pop pop cmp aam add push and fdivr add sub jb or xchg mov shlb (bad) fwait fwait mov mov sbb adc scas movsb jo das sbb mov dec cltd dec cld inc cmp fldt mov add xor add call mov fbstp leave movsl movsb je inc insl sub add jge call mov test dec ds inc sub or push push sbb pop enter inc inc dec lret call sti dec cmp lock cmp movl mov scas rorl add cmp pop (bad) xor add call faddl ret fnstcw add sub call or aas inc push push insb aaa fdivl ljmp xchg pop mov xor je xchg cmp insl sbb adc test xorb mov adcb sub sbb mov xchg sub sub lds inc (bad) pop mov jnp sbb cmp dec push hlt mov or out sub mov mov test mov mull cmp insb cmp or std sub add cmp add inc push mov pinsrw xor sub add and sahf mov enter out and push psllq add jne mov dec jne clc nop mov dec clc test (bad) inc add stos dec adc sub push test scas add and jg inc je sub je scas ret pop arpl add lcall sbb mov jo jecxz sbb sbb cmc dec mov getsec jg lods add cli xor ja dec mov fdiv dec pop inc rorl dec mov in adc jmp mov and pslld mov pusha xchg enter je jne xor repnz aam add in loope loopne jle jo cmpl mov mov pop (bad) jae adc add sub and xor sub mov sahf test fmuls test cld and jg fstpl jne popf add adc aam or and fs add pushl cmp sub and mov adc pop loope outsb popa sub mov movsl cs sub xor and decl repz ljmp push push in pop sarb sbb inc add bound pop and pushf lea out and pop sbb sar mov movb mov in hlt pop mov xor mov jg mov mov inc jmp sahf stc push lea sbb nop pcmpgtd add push or cmp inc or loopnew and push or dec or sub adc dec roll dec mov mov adc mov aas cwtl loope mov push cmp push or (bad) mov lds mov inc pop xchg pop jmp test cwtl in sub push dec rcll xchg stos fwait or inc add push dec popa shrl fstpt sub add (bad) mov xchg dec or mov fnstsw sti dec arpl jb push rorl ja rorb enter add push fwait ret xchg xchg inc repnz inc stos mov lods or push sbb nop lock sbb ret and push or add and inc xor jmp sbb lods or cmp and jne sbb and xchg sbb ds xor xchg lea cmp or pop inc movsb stos loopne (bad) or clc lahf jmp push loopne dec cmp adc ljmp inc push adc pushf ret push and lea (bad) cs or pop adc xchg mov scas mov jmp data16 loopne cld lods and cmp lods adc xchg or loop pop popa lods xchg mov xchg ror in or mov or jge clc scas in ret push fnstcw push in adc loopne mov jl int mov fisubrl push jle cmp outsl mov xchg insl add or jns push scas adc rol add scas mov ror test (bad) cmp pop push cld and jb cmp je jmp xor inc mov sub jmp and sbb ret mov add push pop lcall or push lds lock xchg mov push lea nop imul mov add jb mov push fs pop xchg ret cld cmpl insb roll sub inc mov jae or or mov int3 adc es test (bad) and pop in int3 xchg lock or jge lea jle push fldt gs mov js or jae or pop mov mov sbb loope cmp emms sbb lea outsb sarb cmp xchg jge mov mov mov movsl mov nop in jo and pop int3 jb mov adc and dec aad push and add and scas bound add sub pop push mov into sbb and rcr cmp cwtl pop adc data16 mov lock addl xor mov ja adc push jb add ret pushf (bad) fist lea push and scas pop and ss xchg jne ljmp shrd add sbb insb add (bad) mov cld or mov inc or jmp (bad) or cs adc mov inc test sbb add pop pop js test movb adc adc test mov pusha insl (bad) loopne aaa clc shll adc and loope ficom adc daa adc inc inc xchg or push movsb push loope les adc enter push or jne test rcl hlt mov cmp aam into jbe mov pop int3 mov fidivr add jne cmp ds jb add call clc jne lds cld pushf enter xchg jnp dec jne dec dec add mov push add adc nop into and ret xchg ja je add sbb rcrb cwtl loopne xor mov inc repnz add fistl mov js js outsb and mov and cmp pusha fcoms or shlb and mov dec jmp dec call addl aas or sub and add setle dec or inc mov mov ret mov xchg add lock popa mov pop es add sbb mov lock scas xor cmp daa inc test pop (bad) ja lock adc inc adc loopne scas leave (bad) incb mov popa aas jg mov scas das adc and test and push add and jle addr16 inc jge sub inc shlb xchg mov icebp cmp (bad) sbb mov xchg mov imul jne in nop mov or push (bad) xor and arpl add dec (bad) (bad) fwait aas inc jle fistp and cs in fwait mov dec cmp (bad) jg xchg or or mov fwait movl test insl fwait int jge pop mov jns scas pop jl ret sub orl lds pop and loope dec xor outsb enter pop jb out fdivl push cmpsb xchg push bnd mov and push pop rcl les stos imul mov sub inc cmp nop out aam ret or push inc test dec and pop cmp jl or push das int sub push ret adc jmp mov push sub addb inc sahf jge sbb popa loopne icebp jb dec ljmp test data16 js jge xor cmp push cmp ret lods adc dec mov inc add mov xor xor je scas push push iret clc sub pop or inc inc add mov mov ret sub push ret sub cmp jbe mov orb je xchg mov mov pop fisubl mov hlt (bad) adc mov mov loopne loope scas xor insl push rclb inc inc (bad) and test jne xchg out sbb stc push popf add addl je fwait movsb rcrb push adc and hlt cmp sub cli test dec clc in push mov and push ja xor push aaa push mov adc fdivs inc mov inc sti stos dec cwtl test jne xor je xchg pop or pop jne ret loope jg (bad) clc pop ja pop or or push push movl xchg add gs mov enter push data16 mov pop inc test call clc int3 add dec popa add mov in scas and xchg mov add push in or sub out cmp pop mov or mov les aam mov clc mov outsl popa mov testl inc inc cmp test mov adc inc push inc push mov jae imul jb cs rorl (bad) fisttp dec jne jmp push xor sub fcmovnu xchg shlb aam rolb add mov out enter pop loope stc push lock cltd mov xlat movsl and pop cmpsb cld call aas add xchg xor mov js out lock ret clc adc mov cwtl mov mov add call or cmp sub (bad) ja arpl clc mov and fisttp cs fmull sbb repnz add pop fcompl mov nop aam movsb sbb fsub fiaddl stc fdivrs push fstps sarb sub mov xchg int3 inc cmp int3 push cmp dec jge nop xchg (bad) out enter pusha or adc inc rorb fadds and fs les ret add hlt mov pop clc mov ja mov push mov jb xor cmp test or jle cmpsl inc add iret sarb icebp jg cld lcall push loopne fistl fs out xchg imul scas jne push je pop les dec pop sbb and cmp pop push and pop idivb jae push daa add les push shrl or je scas clc push subl outsb insl aad sub adc daa cmp inc inc sub mov mov pusha mov jge add insb push mov pop orb or xor dec insb and jmp inc lea mov fadd dec add (bad) out clc jns rorb test mov and ret mov and xlat pop ret cmpsl push in inc pop in pop loope (bad) xor aaa mov (bad) cld xorb xchg ds icebp sub mov adc enter mov sbb fwait add clc mov ret lret push test (bad) xchg icebp push popf insb lea xor enter sbb and jmp adc mov mov popf (bad) mov inc adc pop cs aaa cmp (bad) cmpsl sub int3 cmpsl push in cld aaa not mov xor mov push fsubs adc dec imul gs jo inc js inc jmp lock inc inc mull pop call dec ret xchg dec sbb mov inc loope mov rolb jbe xchg jl sbb inc cmp jne cli scas mov and es pop daa sbb adc mov add inc jmp mov les ret mov stos inc ja in xchg add ljmp push loopne push les sub in jo push mov inc or mov fistpl lea and add (bad) mov leave push or sub add pop popa jl pop xor lea cmp mov xchg test mov ficomp dec andb movsb fsubrl dec loopne sbb rclb and adc or sar add mov or adc sbb sahf add sub xchg xchg gs movsl cmp fs xchg mov pop or mov movsb jle mov (bad) popl dec xlat pop push adc sbb inc or movsb pop adc clc sub das clc mov jnp ja je push lds sub stc ret pushf sbbl xchg ret mov xchg and jmp adc out repz push cs sub in aam cmp fsts xchg sub lds xchg ret decl sbb fld dec rol inc decl cmpl arpl sub inc shr pop xor add cmp andl les daa lock inc incl scas add cmp cmp fisubrl xor inc aad fstpt inc rorb inc movsl jo mov aas xchg insl add xor push xor int mov cmp sbb and insb adc (bad) add xor adc push jns nop cmpsb cmpb or movsb push xchg inc or adc dec repnz cmp scas cli add push enter jns inc or mov sti cmp xor jne cmp push jno in xlat cld or scas xchg (bad) cmp ja push in enter dec aaa data16 jge mov dec pop pop or fnsave pop pop out dec inc mov (bad) jmp adc rol cmp int3 push loopne sbb loopne fisttpl (bad) cld mov and push in in repz fucomi fsubl int3 cmp les sarb out sub push cmp (bad) push xor test push jl cmp out pop insb out out jns fs lods pop push mov push push jle cmpsl jne jnp push fdivl or sub (bad) jns mov outsl in into test sbb movsb or cs sahf xchg movups cmp popf mov pop add mov repnz cld mov enter pop hlt cs push and cmp iret in or inc js jnp fsubrp sub push ja jbe aam lock cs out in les aam ja mov fs les push push xor movsb xchg (bad) mov xchg push pushf inc adc cmp mov leave cmp mov cld fs push push and jle and mov dec add notl (bad) and ret mov mov xchg mov push sub test and and sahf xchg mov sub xor out (bad) insl sub mov pop dec fildl add subb fsubl or push jb lods dec sbb in (bad) and jb and (bad) sbb adc pop xorl inc push (bad) fdivr xor jg sub subl fadds mov jecxz fsts enter inc jge mov inc jns push jns mov mov mov cmpsl inc add xor mov lcall addr16 dec jl cmpl divb add mov test fs ret xchg imul orl cwtl iret std push ficom xchg xchg push enter clc add xor jl adc xchg sarb faddl fdivrp pop roll xlat mov pop leave mov xchg (bad) enter mov jb in (bad) fbld push imul orl arpl es jecxz xor enter clc clc or push (bad) js push movl pop push loopne mov push mov ret imul sbb or inc fnstenv add or mov rorb loope cmp loope or in movsb loope pop mov push inc mov add dec mov out stos loope (bad) xor js (bad) pop loopne jo pop push daa pusha pop or mov insb rcrl jns cmp mov sbb and outsb adc ret inc es push push sbbb mov pop mov int sub cltd fs lods lods dec xchg dec es mov mov es fs mov xchg mov fs dec les xchg dec es mov mov movsb jb pushf fdivs fisub pushf mov loopne (bad) in cltd movsb jb fsubr loopne jns movsb in in pusha loopne sbb jb lock mov mov push jne push adcl ficomp cmc addl dec add pop mov inc fs jne dec loopne or rdmsr fcmovnu iret loopne dec adc outsl fs outsb (bad) cld cmp pop outsl jb inc insl jo inc jb nop jl outsl insl push je pop push cmp dec mov (bad) divb adc xorl pop dec add xor add pop outsl pushf in outsl pop push in daa pop in xor test add fld sbb scas cmp add and pop add adc (bad) jp test mov mov fimul out lcall inc out sahf imul push inc push push push adcb mov jnp push jl push push pop call mov enter arpl inc jne dec inc push fcmovu cmp addr16 insl fcompl add sub inc mov adc xor test add add sti (bad) sub mov add ret sbb orb dec es mov hlt hlt sarl int3 int3 jmp out mov loope faddp push iret faddl mov lret mov cmpsb inc sahf pop jg push mov (bad) push pop outsl mov sub add adc mov in pop cmp fwait add dec mov push data16 imul mov inc push push fnop ds call out jl sub fistl inc mov adc cmp mov lods adc cwtl or adc (bad) fldcw cwtl movsl nop push ds insl addl nop lret je mov scas pop push fisubl nop dec and fadd into fsubrs jo inc popa fisubl insb nop cld scas cmp ds aaa pop jo (bad) xchg fs mov (bad) mov add inc repnz xchg jmp and mov iret inc jb xor andl adc sbb jo xchg aam inc and pop adc cmp (bad) in icebp nop adc (bad) push outsb in xor mov pop mov sarb dec outsl or iret add adc mov push in fisub xor inc or or mov pop pop in pop add jno push out or lret jno das (bad) loopne in sbb daa call cltd es pop or or in or enter mov pmulhuw rorb out sub add mov nop add inc mov les out loop mov pusha push mov bnd dec adc pop xor cmp jg xor adc jbe clc pop js jle (bad) mov data16 (bad) scas loopne sub dec je sbb mov push fs mov xor nop es jbe add clc push dec cmp mov loope mov adc add inc mov dec pop xchg arpl leave frstor clc fbld rcrl hlt mov jmp lock ljmp inc paddsb cmp and call mov sub in jecxz sbb sub jae aas nop out call jmp mov push mov enter mov push and rorb stos (bad) les fcomp enter cmpsb jecxz mov in js xor icebp inc rolb or icebp sbb xor call addr16 sub push cmpsb push xor mov (bad) jne jmp and cltd test dec or sbb adc cmp and push dec sbb cli loope cld outsl daa fs js jmp inc fs sbb and push nop mov push shll dec repnz pop jb push or in inc sbb andnps pop pop and pushf pop jg hlt xor add roll sar push dec or xchg add lahf ret shlw insb jge fmul or idivl incl addb insb jnp popa gs out and pushf (bad) xchg jne pushf xchg stos push data16 jmp xor mov jl (bad) loop pop in pop mov call cld test test testb outsb push add pop adc rorb add jne fnstcw je dec stos dec aaa sbb xor clc jmp and (bad) jne movzwl lock rcr jl inc xor lea lret ret lea push jno repz test aaa imul pop xor pop adcl inc inc dec inc iret sahf jmp xchg sbbl inc adc inc add jecxz (bad) dec repz dec jnp push in (bad) sub in test call cmp inc sub fidivl push cld int adc inc enter sarl (bad) adc or xor lock add jne dec not orb inc sub or mov mov and inc and xchg jle iret add xchg shll ret pop mulb lods adc jb or inc mov clc mov je ret cs adc mov fimull adc add (bad) sub jmp sbb add jp adc loopne and jb in in sbbb loopne jle (bad) xchg mov jne or mov flds push xor mov pop or adc mov movsb and in js mov inc push xchg pop aad popa leave adc adc push or testb cmpsl add push add jb cmp jmp push adc cmp xchg pop add or sbb test jmp mov movsb jg lret xor inc (bad) adc push or (bad) inc in jmp movl mov cmp sbb shrb or rcrl xor lock je pop mov push lock push or inc jmp add (bad) mov or int3 popl ret out mov fidivr int inc xchg mov and sub or call (bad) daa addl inc pop sbb dec xchg pop push pop mov sub fwait les mov add adc test mov clc cmp jae adc pop dec stc pop jo mov mov push negl daa out push or decl loop sbb sub or mov mov ljmp movsb and pop fsts sub repnz fstp sub adc inc test mov fisttp js movsb fbld loopne into scas push ficompl rolb arpl xor mov adc jmp and xor mov pop ja push scas flds dec fwait push js push loop jmp jecxz lock and sub lea jmp cld add sub outsl mov sbbl xchg jmp add push jae mov scas fnstcw cmp mov sub inc sbb test add add js lock sti cmp outsb (bad) xor push jp and iret mov in pop incl ret fs fidivrl setae xorl adc aas jmp push movsb out lret inc pop sbb shll scas ss sti xchg push cld mov cwtl and xchg sub test cld xchg bound (bad) or das fcoml test dec dec jecxz or jb lret roll push adc push mov arpl test jbe cwtl add pop push push pop pusha push push addr16 pop aas add sub xor lahf pop ljmp push jne inc mov shll pop fimul aaa aam sbb or in insb pop lock lret add cmp adc sysret fwait and out jle roll inc push push mov iret sarl (bad) sub push jo ds repz mov cmovns daa loope push lcall push sub rorb cmp xor xor ret dec movsb dec or cmc mov jbe pop loop xor in jmp mov add sub sbb jecxz push xor or fcmovu sbb fwait xor sbb lock (bad) cmp and enter jb daa sbb cwtl or ret mov fcoml cmc imul enter jmp and mov jo push push push jbe js loopne inc call jmp rolb inc roll pop pusha je dec add jmp data16 xchg mov pop or outsb sbb sub iret push lcall xlat enter cwtl mov fisub jecxz jp or sti (bad) std jg sub xor ret fwait hlt bound movsl fist cmpsl inc dec and stos daa adc loopne lea xor (bad) clc push call dec dec lock or push mov add xchg push mov adc mov hlt scas inc and pop cmp int3 jmp cltd add in cmp and jne pusha das sub (bad) aaa inc lret inc (bad) cli movsl push push push xor sub push sbb add pop mov push sbb pop add pop sbb sbb flds inc jbe aad mov arpl push add iret repz loopne lar out xor or xchg (bad) mov cli pop xchg push cmpsb push dec loope iret mov fstpt push aad mov push jp sub sub mov in sbb mov jg sbb clc pop cmp pop addr16 (bad) xlat inc fstp push adc push (bad) jl test dec dec sbb mov (bad) inc (bad) mov (bad) mov or aad lods jge mov pop lea insb inc cwtl je data16 je jmp outsl gs jno xchg clc je (bad) push clc inc mov test adc sti cmp out in (bad) xor add iret mov dec mov add lahf mov pushf out push mov fwait or mov ret mov fsts adc push and sub xchg fisubrl or lret insl gs mov jns mov (bad) adc push (bad) sub arpl scas jecxz and jmp sbb jnp mov xor and aaa jae mov cli mov pop and mov sbb jl pop or add mov fldl sbb pop in addr16 jb (bad) jle adc or sub jge adc mov pop or pop btr push cltd sub fadds add out leave sbbl rcrl nop pop jb leave push push je sub daa pop pop push dec mov and and dec (bad) xor mov je std mov pop add fisubr das add repz repz and scas loopne enter mov ret push add jp mov xchg daa cmp pop mov push pop push and pushf pop add xchg push cld pusha xchg out adc out pop or mov cmc icebp sahf out daa stc add inc or push adc add cmp and jb gs mov dec mov push and sub call lock adc cmpb push xor in repz cmc push movhps push and or and imul mov mov shl cmp xlat inc pop or sbb enter jl adc hlt cmp loope icebp (bad) sbb push add mov cwtl pop xor stos (bad) add push mov sbb add add sub pop aaa cltd jne mov adc xor aaa sbb or inc adc xor push bound inc mov (bad) (bad) xchg cmp in in add or sbb mov xchg xchg mov ja test (bad) hlt jno pop sub inc outsb ret cmp mulb jmp dec call jo mov ss sbb xorl mull and in (bad) daa lods popa mov addr16 or call add loope call xchg rorl push enter adc mov cmp test xchg lock cmp pop or imul cmpsl repz out int3 loop adc xchg idivl sub fstpt cmp pop push arpl sahf dec sbb clc lock aad pop repnz loop push idiv enter lock mov mov dec fisttpll push xor cli sub mov js daa aam dec leave mov and xor fs dec mov dec in jmp or mov xchg cmpl sub test push iret repz pop (bad) push movsb push mov idivb inc xor cmpsb out sahf outsb pop inc pop outsb orl xchg mov xchg das fstpl mov push imul adc xor push sub or mov push adc sub adc out sub pushf jmp jo sti xchg xchg mov xor inc sub add and pop arpl outsb aam test adc in dec negb mov adc rcll (bad) dec jmp (bad) loope sbb out sti lock pop xchg and jg add addr16 adc test add subb pop or mov jmp pop out leave enter adc out inc xor ret into pop mov rolb dec xchg or pusha nop mull or shlb and popf nop pop (bad) or mov lds cld iret repz dec adc push jbe xchg cmpsb lcall pop adc fnsetpm(287 jnp push dec adc add or sub cltd in cwtl sahf mov add mov pusha iret sbb xchg sbb sbb inc lahf adc adc and inc popl fstp imul mov mov pop jb push incl add insb (bad) add rclb aad in sbb sbb sbb add arpl pop push or inc mov iret repz pop adc das inc pop xchg aaa in repz adc lcall pop test pusha xchg xor (bad) push sub rolb push sbb daa nop xchg sub fildll pop loop xor mov adcb sbb out pop dec sbb inc (bad) adc push jne and mov add and add xchg aam nop mov xor out xor movntps neg ret push jb sbb jmp stos sbb jl jmp addr16 mov fstpl dec rclb add daa lock lea add rcrl or or mov fstl das cltd push sbb sbb add adc add addb sub repz bound jb mov repz sbb add pop pop adc sub outsl mov arpl and stc add inc loopne aam fcmovnu xchg jo and pop (bad) mov imul loopne neg inc sub mov pop or push sub pop push mov and or push fildll inc dec xorl pop and pop or (bad) pop test pop push inc mov test push in adc cmp fnstcw pop inc sbb imul iret jg cmpsl sbb push jnp,pn xor into loop (bad) or push push add and (bad) loope xchg sbb rcrl test loop sub sbb adc imul movb mov jmp daa mov mov outsl popa inc push pop insl push jl (bad) jmp inc adc stos cmp and cmp push sbb sub pop push push out or or or mov movsl (bad) daa jmp es sarl mov or cmp add pop daa clc cmp mov stos rcrl pop mov mov or add sbb inc aas out mov fadds fs scas inc push lahf hlt fistpl insl int inc sub adcb mov jb push mov cli mov fildll dec xchg pop inc pushf ret xchg (bad) xor sbb aaa or test mov push lahf in mov aad sbb adc mov ljmp cmp cwtl mov or dec (bad) dec sbb sbb cld adc outsb xor inc pop call orl fldcw data16 adc flds jo adc push inc inc push dec rcll add mov hlt mov rcr pop pop and xchg push or adc cltd sub push pop stc mov (bad) aam loop pop cmp xchg cmpsl adc cs inc ljmp flds or movsl mov sbb cmpsb pop xchg je loopne fist fistpl or sbb xchg inc or lahf dec pop leave dec sub pop push mov push xor push xor sub adc imul xchg pop mov pop rorb mov mov and lods push mov lret fild push ja repz pop push sbb push (bad) test mov orl sub mov dec and insb inc stos push inc xchg test es cmp xlat xchg push adc xchg add jns mov adc push push add lock or push add pushf nop push addr16 and xor fildll push add iret orb push inc jb cmp sub and xor call iret js adc adc leave push mov pushf cmp roll dec outsb adcb mov mov sahf fnsetpm(287 jnp daa out or push in or popa and jne cltd push inc fisttp or fisttpl adc pop out jns insl inc pop adc pop mov add sub pusha test aas rorb inc adc or lods or pop adc or and pushf lcall daa pop inc es (bad) cmp jns popf es jnp sub daa lret xchg fiadd push push cmp push adc pop add sub mov pop push mov mov mov xchg or xor mov adcl adc add inc dec imulb mov cmp push mov outsl clc push jl or pop scas inc add xchg mov sti les xchg lea push addr16 mov nop clc pop int push and js add cmp int in dec jmp inc lock jo jo add fsubl pop and cmp xor mov ss and fmull cmp or inc nop cmp and mov cmp rclb mov fwait or (bad) xchg loop out or (bad) jno mov mov cltd cmp or addr16 (bad) or add or sub lds lds inc out adc or lea push push test ret inc push fs xor sub or mov mov roll jb cmp mov jb sub sti es jecxz sti mov imul mov sbb jns out pop jbe mov aad fldt and iret repz pop je enter lods xor pushf pop fs inc popf push and movb ja dec scas fimul jne xor mov clc mov adc push cld push mov daa xchg pop xor inc fnop lock or or andl cmp int3 call and push or movb pop push or rcr lahf sbb fmull mov neg es test mov inc mov mov adc inc movsb call mov movsb int3 enter outsl push sti int add into push insb dec adc arpl or movsb jns outsl rcrb rcrb daa mov sub lock pop mov imul inc out cltd mov outsl push sbb mov idivl add sbb xchg mov enter stc jbe,pn sbb mov inc fnsave mov jmp lods lods mov scas sub cmp mov sbb enter movsb negb dec mov sbb inc (bad) and add (bad) sbb xchg jno jmp (bad) and nop dec mov jmp pushf mov sub stos sbb add and lret test inc mov ficom jmp repnz pushf xor mov inc icebp mov in inc pop test outsb xor xor mov pop mov in popa iret pop xor rolb call inc (bad) (bad) xor sbb and sub rcl cwtl xor movsb and or loopne pop sub out in popa xor cmp mov enter dec nop dec push push repnz jo push cli ss loop xor inc push stc cmp repz shl sbb pop jnp cmpsl notl xor ds pop pushf out scas pop push je nop stos leave mov cltd insl dec push cmpb cmp xor adc mov push xor adc mov push inc test add push cmp adc cli in loope test jno cwtl adc xor loopne insb popa and fmuls fdivs aaa sbb add aam aaa shlb sub ror jno sub push nop (bad) pshufw pop shrb cwtl adc xchg or ret outsl mulb aaa imul jns negb xor xor roll push cmp test lock lds loop sbb rolb pusha inc pusha xlat aaa mov insb in mov add inc ja cwtl xor out mov sbb int3 cmp aaa rolb orl movsb aaa dec daa and movsb aad mov cmp cmp cmp cwtl jno lods or add mov dec mov (bad) nop popf nop ja in clc dec aaa and mov xchg shl pop add cwtl xor in cmp xchg arpl and sbb data16 int3 loopne mov lds or or or add xchg aas gs cmp jns push xchg dec or cmp and pusha or push push mov or bound or and cmp ss xchg imul js or cmp loop loopne fistpl add xchg (bad) jne add xor sbb jno andb cmp jae xchg and dec lret ret sub pop sbb xchg push stos pop pushw cmp push lea sub outsb inc insl cs xchg dec or enter pop call or push xchg (bad) sub testl scas (bad) lret (bad) xor rol mov pop out in clc jmp movw ja jbe insl push dec mov add xor popa mov lret mov mov leave adc mov (bad) pop and adc xorl fsts je (bad) jmp push dec (bad) lret push int3 into cwtl dec or push cmp push and mov sub or push dec adc push inc push aad movsl mov xchg imul into daa pop andb mov fistpll scas pop dec (bad) push xor sub push add cmp xchg xor ja dec xor adc mov pop js inc sbb (bad) notb pop pusha test dec cld fildll sub outsl lcall outsl push or pop add dec dec ja sbb dec inc or push jecxz ficomp movsl nop cmp add nop ret add in arpl xadd cmp cmp cmp sub cmp inc sbb lock pop inc das daa inc arpl push sub dec out sbb dec xor xchg (bad) mov or xchg pop insl and sub cmpl pop sahf adc call jb and mov jmp mov gs xor rcll cmp sub (bad) and dec fbld or and xchg inc faddp (bad) and punpckhdq aaa fdivl decb jb mov popa mov xor insl adcb jo jns dec jne or daa mov mov fwait daa dec sub lret popa xchg inc push ret aam xchg pop frstor in add add fcmovb aam insb shlb mov rcl movlps cltd dec pop xor daa stc (bad) aas push outsb imul inc arpl add and inc iret or ss cmpsb add cltd xor and inc jb fcompl push mul daa add inc sub test pavgb popf cmp push out sbb pop fidiv enter or xor mov mov add imul mov cmp andl xchg cld (bad) add inc hlt pop cmp dec sbb push sti sub pop pop sub lret jbe mov movsl shr (bad) test push or add mov adcl repnz (bad) cmp adc movsl in lds roll and inc das inc outsb jns pop cmpsb call push gs je mov and fidivl test pop pop fs or inc or xchg daa mov xor mov ret inc out out dec inc fwait pop cmp cmpsb add push pop test mov pusha pop jb pop or jle pop into popf xor out mov mov push arpl call push daa je and or sbb push mov and outsb and jo cmc sub sbb and xchg and mov loop lock rcr outsl add or or call iret popl outsb dec decb and sti jg or inc loop aam inc sar sub sbbl jg sbb hlt and jg lret mov pop add inc mov adc clc add arpl xchg push adcl js mov add jmp fsubl add mov and pop or int3 cs stc lock mov jo mov outsb dec rcrl mov dec (bad) adc mov inc test andps push popa std dec xor pop enter inc rclb sbb inc aas enter sbb shr or ljmp push add cmpb mov (bad) add ss (bad) mov lcall (bad) add lea and push prefetcht2 sahf out or add sysret inc call je sbb sub inc jae cmp or lcall xor jecxz adc mov fidivrl jmp dec clc mov daa jmp mov and sbb dec inc pop push mov inc rcll pushl dec jns push lahf es addr16 orb fsubrl sbb xchg push out xor popa ss xchg xor pop fsubp xchg inc sbb popa sub mov ret mov cmp or cltd sbb pusha xchg cmp xchg add ss je push or lods inc stos adc repz aaa ljmp mov fcoms mov clc adcl mov cltd or lea mov in bound xor xchg ficompl push (bad) xorb xor push inc xchg xchg jge (bad) shrb leave jge stos fimull jecxz (bad) hlt sahf mull jg outsl or aas add inc cmp jle mov mov jg in mov cmp dec pop enter leave jbe dec aas adc inc xchg add sti loop and cmpb je push movsl nop mov outsl pop sarb ret push cmpsb jle inc inc mov push aad xor aaa and add call inc jle mov lcall push (bad) clc inc dec jmp dec and lcall mov add aad pop scas jmp mov (bad) lds mov sarb negl inc xor cld adc adc jp add call movsb lahf mov icebp ffree cmpsl cmp lret cmpl adc xor jne movsl in inc into cmp add jnp jl mov xorl decl and xchg orl cmpsb mov pop pushl nop loope or stc or and sub popa adc sub inc call sbb ss jae fdivr pop mov scas mov adc add rorb or add adc ficoml or mov je or or or lahf stos addb adc cld aas popf inc jo cmp in clc arpl xchg mov sbb sub test (bad) lods fdivp cmp adc mov jne (bad) xlat (bad) xor push cmp call jle mov pop add sbb mov out lock cmp or (bad) nop fld inc test enter push inc xlat jae sbb into push sbb in (bad) ret movsb das push outsb lock rcrb or mov int3 pop inc jle jg sbb scas xor or xchg jne dec dec pop aam out mul jns jnp push adc insl movsl mov jg push call cmpsb sti inc popf jecxz pop add and stc mov adc push and fstpt sub add mov pop ja (bad) mov cld flds and adc xor cmp xor xchg adc scas sbb sub aad mov and xchg jno pop icebp insl popf fdivl scas mov test dec jmp sbb adc cmp mov inc xor push scas inc and lods adc sub adc mov push out sub or in movsl dec push fmuls pop stos mov stc lcall inc sub mov addr16 and xor les outsl mov cmpsb xchg cmp aaa or add rclb ds lahf add stc jmp dec or dec adc cwtl hlt jmp xor inc scas dec dec hlt pusha lods mov imul cmp sub rorl arpl movsb adc sub inc xor (bad) (bad) mov cmp add add popf popa mov call in fsubs mov sub push or das scas inc push cltd leave push dec rcrl and iret repz inc push bound xchg sbb cwtl ds dec popf or inc inc push sbb xlat fdivrl adc cmp out popf lock sbb aas ja sbb add int3 pushf pop sbb sbb pop fstl cmp enter cmpsb push dec out pop rep sbb push mov addr16 out jmp insl add dec sbb popa daa jl dec xor loopne ds xor movsl pop sbb jbe or push insl xchg (bad) xlat in dec or cwtl and xor clc mov data16 cmpb in cmp inc dec fldl pop push xor add and jmp out cli outsb mov (bad) mov or inc ss or fistpll cwtl dec cmp jl sbb add cmp roll movsb pushl add jb push add les aas scas inc mov inc push adc sahf cmp push adc pop not lcall pop pop lea jg cmc jge cmp je lcall xchg xor inc and mov pop pop repz inc test cmp sbb lea add pop loopne inc add (bad) cmpl mov push or lea adc ret decl and adc mov or or xchg add and cmpsl test push data16 push pop sti pop lds sub je leave inc cwtl lock dec sub clc sub xchg int3 jge,pn and ret imul in dec add inc dec mov and in loopne arpl sar jg sub in popf and add out repnz fstpt xchg loopne jo loopne jo xchg cmp mov mov mov mov ja dec dec pop sub jl mov mov inc dec jne out ret lcall stos jne mov lock es push pushf xor int3 rolb in adc popa lea fwait out inc aam add mov cmp cltd mov and xchg into jno (bad) sbb std push nop inc and push jo mov je cwtl sarl or loopne insb add cs es pop cmp push push pop inc jmp xor dec adc ret adcl je lods cld inc pop push jne dec adc fsubrs ljmp sbb sbb (bad) psrlq dec and mov into jo add add cltd aaa or loop addr16 sub push inc mov unpckhps addr16 xor ljmp push into dec sub add test fstl out lcall (bad) ja ljmp test add fbld add jb push cmpsl or cli test daa jl daa or ffreep adc movsb sahf add add push or gs mov popa add das xchg enter adcl sbb and fdivl ja (bad) push sbb or sub dec sbb mov mov xchg ss fcmovnb pop sub ret add and push mov pop xor ss jne jnp ss inc dec clc lea out fwait inc add cmp or adc test jae cmp or aad insl sti mov mov dec sahf clc fwait out add test (bad) sti add fldl push (bad) clc mov mov add subl push pop sbb mov push or mov clc icebp mov rcrb hlt sub into add xor sbb jmp mov dec dec test js mov sub fbld hlt gs ret mov sub or inc inc daa (bad) lea movsl add dec mov jmp cmp cmp push mov mov push add pop push add adc mov cmp addr16 rcll add or add insb popa fwait xchg jae daa mov mov or hlt mov das les add push cld dec dec push add es cmp mov out loopne in or sub adc inc cmpsl (bad) push push push enter in xor mov push dec fwait in int out cmp jecxz daa ret les loopne jle jl adc inc in js inc jecxz repz je push sub push and dec mov mov ret jge jge or lret (bad) xor xchg loop lea push int3 pop dec xchg cmpsb jmp int3 jmp out or pop jge push jge sbb mov add jge pop inc lahf aam xchg mov adc loopne popl ljmp divl (bad) cmp cmp int mov adc sbb pusha dec fwait jl in sbb push push dec push test jne sbb xchg push bound and fs dec push xchg fadds push fs xor scas or dec (bad) les inc mov pop les mov xchg in xchg cld inc mov les cmp inc rcr ja pop in or testl std xchg pop ret pop or pop jbe xor add jo cmp stc xchg sub and aaa cmpb jns mov mov sti ret std cmp setg testl pop inc cmp push test ss mov imul lock add adc in dec add xchg movsb mov push push hlt inc rorb inc sbb cmp arpl add sbb ja das add add add add loop dec push and xorb xor adc pop mov sti nop push lret push mov incl lock dec (bad) aas test mov adc ret mov dec movsl test sbb loop jno pushf and and sub pop subl jae jne mov adc xor out mov mov adc in inc xor cmc jo das fist sbb pushf stos cld push mov test mov rol inc les and xlat movsb jae push pushf xchg push xchg in in xchg xchg xchg xchg in in cwtl cltd lcall popf sahf lahf in in addb in test in mov in lea out aaa gs inc adc sbb jo ja daa cmp dec dec sbb push lock fs lock ret jns xor pop mov lea insb mov push cmc or xchg test cmp and xchg test fidivr es out mov or sub adc imul xor add and pop insb or outsl movsb jb and nop cmp mov nop sub inc orl sub jb daa decl and or xchg ret or les push push push mov and mov (bad) or enter ret push aas and lret pop and roll lock mov andb std push jge xchg inc fs mov sbb push and push test sbb adc jo sbb into add fnstenv pop bound arpl movsl bound iret sbb daa das jl mov movsb push mov mov loopne (bad) negl incb fwait cmpb sbbl mov inc dec pop arpl fisttpll or nop fdivs lahf daa push mov pop scas aad insl rcrb lock and fucomp (bad) push mov inc outsb jge mov dec jnp or in jmp xor inc rorb call lods adc das gs push pop data16 (bad) dec add inc daa adc clc push dec or cmp inc sbb addr16 pop enter and cmp and push arpl arpl push sti shlb (bad) negb add push sbb and push adc pop push inc sub pop jb lcall or jbe jle and adc xchg or push and sbb outsl or mov addr16 stos call cltd or jecxz pop lock pop mov sub ds (bad) mov dec data16 aas jmp mov fiadd in push adc add jl mov sbb hlt push cmpsl push lcall pusha divl sub rolb dec push xor cmp add add jb dec fidivl add test jge movsl mov or adc add pop (bad) lock inc and pop sbb ss leave pop jno push cmp in call movsb std popa jl jae cld gs gs nop mov or or stos cmp cmp add jne jns push (bad) pop inc popa jnp sub xchg test arpl cmpsb hlt stos mov test push mov loopne call in mov imul mov mov adc iret push push lret stos jl xor popf mov xor mov inc adc lahf mov out imul push cmp orl lret popw cld (bad) add adc xor pop pop loop jne xchg mov sub mov xchg imul (bad) dec sub and les inc call inc add xchg rcll ljmp icebp push test xor and pusha ret dec lods inc or lock jl pop dec push cmpsb (bad) decl adc xor test jne pop mov push cs dec xor cmp jle add popa pushf adc inc orb mov jbe or jo jg cmc xor adc lock (bad) sub mov add jmp dec lock (bad) pop inc sub insl jecxz mov (bad) or or or rsm mov outsb sbb mov movzwl sub sbb notb rcrl sbb add mov cltd hlt sbb jne adc and jmp jle (bad) fucomi and je jmp cmp sbb test cmp das int3 out jne xchg or pop push jno aaa cld add je sub adc (bad) in mov pusha sub (bad) cmp mov mov cmpb je pop (bad) push push xchg add decb ja add incl adcl sbb cmp mov cmp insb push add fdivrl pop es or movsbl imul or jle rcr dec add ret jns mov mov in ds in push (bad) aas sbb adc mov mov cmpb repnz lock jb add add call (bad) out mov stc lock mov or mov push (bad) imul imul test (bad) xor call jge mov leave movsb fldcw insb movsb add sub cwtl notb bound cmc lret scas mov enter lock or (bad) dec adc mov sbb adc in jecxz loope ret jge scas cmp add xor cwtl js push in inc xchg dec loope test shrl out mov dec sbb pop pushl push int dec jmp add rorl pop pop test cld push xabort push mov xor pusha lods in or lcall mov push sahf mov and inc cmp repnz dec outsl je add sbb jno or idivb test sbb add sub je jge addb lods mov jmp sub push and mov mov dec ret imul ficom adc xchg or movb pop jl jecxz icebp jecxz addr16 xlat rorb dec and pop lahf cmp adc add adc xlat cmpb test jle fidiv data16 cmp cmp pop push ret call or ds push ret mov lods cmp ret cli cmpsb enter stos mov inc ljmp sub or ss aam daa or scas jns js lods (bad) push push jge (bad) pop or xchg cmp data16 jo xor pop pinsrw jns or loopne pusha xchg xchg mov jle or enter jle int bound clc (bad) jge or ret outsl test in pop pop jne mov outsl add ret mov adc and in out ret popa scas and inc or mov pop cmpsl mov je or dec je jmp fsubrl push cmpsb adc pop js lcall sbb mov mov sub pop addr16 lret je jmp gs cmp rcrb xchg adc xchg add sti xor push lret loop jmp cli les inc loope jo mov jno lock jecxz (bad) fadds gs jp adc (bad) out xor cmp aam pushf test rorb cs jae decb not ds call adc fdiv or push push add (bad) hlt lock add jb movsb into push iret or movb nop (bad) pop (bad) (bad) (bad) or ret les clc cmp jne xchg cmp dec sbbl pop and dec jb mov dec and in push add clts add sbb jne mov and fldl jnp add popa enter mov mov fsub movsl std lcall pop fstl movsb xor add (bad) aam mov cs lahf mov fdivs jo pop mov pusha (bad) cmp add dec push push (bad) adc mov ficom cmc ljmp lea rcrb and cmp mov cmp pop jbe add xor push jno mov imul rorl ja (bad) lods mov enter idivb cld jge je insl or sbb gs adc (bad) (bad) xor movb inc mov fimull cmp adc or cmp mov sti fmuls aaa pop clc xor mov add inc sub sbb jge jecxz pusha or aaa or out push fs jns movsb mov and xchg rcr imul dec jnp add cmp inc push inc outsl xor cmp and (bad) or (bad) push shl cs jne jmp pop or add jmp adc push or jne xchg divl pop sub (bad) lea pusha jge mov or pushl inc mov lock sbb adc test out sbb imul xchg scas xchg or ret lret rol aam enter fistpll mov ret lea imul sbb mov mov add fcomps jbe (bad) jmp push sub fwait sub xchg inc ja (bad) sarl and cmc mov or mov ss sbbl and dec ja add push inc pop mov les (bad) aaa push or jb fldl ret fs or dec fs sbb push dec push dec pop push dec or mov sti lcall mov or gs imul fcmovbe orl inc sarb rclb mov popa insl test push loopne mov lods into lock add inc pop inc inc push cmp movsb fwait cmp sbb adc or fstpl les or and and in cmp pop addr16 adc push sub pop add cmp cmp jae xor pop add mov adc add outsb or decl adc pop mov sbb mov add adc (bad) arpl cmp push ffreep shr imul jg dec sbb scas pusha adc cs adc add iret je adc inc mov outsl imul mov icebp stos shrl inc cmp in imul icebp nop mov dec imul incb push orb jnp mov stos jmp push dec (bad) jb jb mov jb jb lods test mov pushf cwtl xchg rcr (bad) jb int3 enter enter test dec mov aas dec mov ljmp add push inc insb imul roll xor mov add je mov mov push dec push ja jb mov inc push push jae call xchg gs xchg add (bad) cmp dec or inc imul gs or bound fstpl outsl sbbl sbb adc xor addl outsl imul xchg (bad) dec outsb insb jns adc scas sahf mov imul xlat (bad) imul mov inc mov mov or dec imul adc xlat aam scas adc fild test (bad) in stos push dec dec add enter js add sbb iret pop nop or call cmp dec gs jne jbe ljmp shlb (bad) cmp push sbbl dec lds inc jbe dec or push sub pop mov pop mov add test or pop mov inc or sub pop xchg insb data16 (bad) negl inc inc xchg mov mov stos or inc pop in in stos push outsb mov jle dec shll daa or scas xchg xchg and push leave lock inc pop and sub pushf and push pop or pop mov scas ds andb fiadd mov mov add cmpsl push mov in jge cld mov into and into dec jle push andb fs rolb jae lods es sub sub or imul setns inc (bad) insl jo push sub mov mov and jnp nop jb or outsl adc fbld jmp dec outsl and jle (bad) xor adc les fldcw cmpsl sbb mov lcall xchg hlt scas test or popa jmp scas mov shlb push pop mov xor pusha pop inc push dec scas or dec push add mov lods (bad) stos push shl push jl incl shrb mov test movl xor stc test mov ljmp mov mov pusha or pushf aam adc sti hlt int3 int3 test push popf roll out ljmp cmpsl out test push cs scas add inc test (bad) mov or or fist out sbb or add (bad) pusha pop out xor cmpsl popa adc dec leave ljmp sti jae fs jo int das pushf jae push rclb sahf cmpsb add rcl imulb add adc dec nop push mov add push sbb (bad) enter sub sub inc scas test xor test neg jge xor pop jbe inc outsl out lcall mov mov jnp mov aaa sub clc push mov mov hlt bound cmp loopne mov mov aaa mov nop scas pop sbb ljmp test jle loope ja pop add xchg stos mov pop fdivrs enter xor test iret rorl mov mov jae rcrb in shrl push pushf ror lock pop push xchg pushf loope mov push lock pop xor push inc into xchg jle test ficom push add push imul daa mov xchg je mov data16 fs in ret ret push ret lock sarl loopne les push (bad) insb les or xchg jl outsb fbstp movl cmp fild or insl (bad) bound inc mov pop data16 xchg xchg mov ds sbb addr16 (bad) out out adc jbe or mov push mov leave mov leave flds push xor fisubr pushf jo dec jnp lret push imull divb lods (bad) mov int3 cs jbe out mov (bad) andps repz in or push in push or adc push in sbb inc push in and add xchg inc xchg mov pop les xor xchg mov mov cmc add adc jl out pop sub mov dec enter adc push mov mov and fs insb or jns dec inc push or je pop or punpckhbw or push fbld add or sbb fwait out and dec xor mov stos mov mov int jne fnstenv lahf js mov test mov fidivrl mov (bad) aam xor data16 mov push push aad idivb test ds idivl push mov rclb jo push dec gs mov push adc faddl pop inc nopl jo add xor dec or decl mov stos mov dec mov mov aas (bad) fcomp inc cmp fsubrs testl inc sbb out loopne nop aam int3 insl or test iret repz (bad) popf cmpsl js dec inc pop sbb inc (bad) int dec (bad) inc push in mov sub aas ret aas lock cmp mov xchg mov or les scas lcall pop fmull test faddl inc es in xchg add add xor js jnp mov jbe push addb push sbb adc sti adc pop jmp inc cld (bad) sti inc cli (bad) stc (bad) clc push push push fdivrp data16 push push push loop push lcall and sub out inc je dec push jnp cmp sbb cmp dec push sub subl or ret pop pop and mov mov incb push mov sub movsb jne or add test push popa addr16 stos jp adc lcall mov cld mov aam sub push inc push lock push arpl dec scas dec enter (bad) cmp leave mov push mov push mov test ss jnp cwtl or cmp push add aam add ja cmp incl or push xorl jnp lea lds (bad) and sub test pop lods dec dec fs push xchg or test cld adc lea sub bound int push push cmp daa adc gs dec and enter cmp jne fsubs fiadd add cmp ds jle adc js add jb jne push mov fcmovnbe adc scas ds shlb add lock (bad) sbb loopne and lock pop jo in push mov dec daa mov or test (bad) xchg inc (bad) sbb lds je lret inc mov and adc pop lret mov push mov les cmpsb scas lcall (bad) add lea mov sahf mov clc (bad) sub fldt add cli jne ja xor fldenv outsb jmp xor sub add daa fistp sub mov ljmp add mov ds movsb sbb test cmp or rorb mov pop jl and sbb add add jno je movsb or lds and xchg cmp add mov sbb (bad) clc mov jge inc lea jb cmp lods mov push sub pop jmp sbb rcrl sbb jmp pop mov loopne inc jb or cmp inc jp inc or (bad) (bad) and js sbb jne pusha or xchg hlt mov cmp sbb xchg or pop enter sbb xlat (bad) scas adc or test arpl xchg xchg (bad) jbe ficom lea jge pop call sar ljmp add movsl pop gs (bad) popf pop imul test pop inc inc fdivrl fmuls jp dec inc inc cmp loope loop cwtl sbb push cmp adc sub movsb jne std (bad) add sub inc add adc pop ficoml pop dec or sub (bad) adc adc xor jo sub and pop test xchg sbb imul adc in hlt mov inc add cmpsl mov fld xchg xchg (bad) lcall incl mov xor fcmovbe cmp add movb int out xor stos push mov xlat (bad) out mov jl inc push (bad) sub dec jne (bad) mov inc imul push mov outsb lds push (bad) cmp inc sbb mov lock jg inc pop lret pusha inc rcr nop sub mov js pusha jecxz into loopne popf (bad) mov insl mov xchg dec xchg popf adc mov dec pop cwtl dec xchg loope mov mov hlt inc mov enter lock adc push mov add inc sbb cs adc rcl jl mov sbb pop push sbb sub movb inc stos test shrb (bad) jl pop call pop xor xor xorb outsb repnz inc pop imul pop adc popf mov insl sub cmp push xor cmpsb (bad) jecxz (bad) (bad) dec call jne pop add sbb sub mov test sbb inc jb jle aaa test lret out jae push inc test (bad) test xorl (bad) in int rorb mov mov mov pop xor mov cmp or ja xchg push lret mov mov mov push outsb cwtl in mov enter cld xchg mov mov lcall adc and mov xor push enter call inc roll rolb lea xor orl (bad) dec jae xor jne nop push out imul inc inc mov mov inc add jo insb mov fwait pop xchg nop jmp and inc pop jae jns pop mov cmpsl lret add jo add adc pop add dec sti inc pushf and mov or jp fstpl clc jle lods push dec cmp pushf repz cmp push enter inc sbb sbb xchg inc icebp stos xchg pop cmp xchg inc pop pop mov push inc sbb and popf jmp jmp mov das icebp push je mov insb cmp and jl and and daa lds and pushf cltd jns add xchg mov inc lds in xchg add inc dec mov push sahf pop cwtl inc sbb or mov nop inc jno fsubrl roll cmp ds rclb or ss addr16 dec add cltd add or push dec test pop inc scas js outsb mov jno adc xchg push mov test sbb xchg push leave sahf lahf pop popa dec mov mov or inc sti mov fcomps movsl js test (bad) jo or iret add sub sub lea add xchg add cld mov jmp ret mov (bad) imul mov or sbbl and cmp jne sbb sbb add or leave or lret out add push es add jo push mov xchg adc mov add insb pop cmp fidivl xchg adc push fmul clc cmp jl pop mov pop mov add ret mov outsl adc push adc stc nop mov add inc ljmp sbb insl pop add int3 (bad) sub pusha mov inc je mov push xor push (bad) sbb adc imul adc cmpsl pusha add (bad) cmpsl pop lret aaa xor add xlat fdivrs mov nop sahf mov aaa pusha push aas xlat arpl xor (bad) ret and sub cmp lods outsl add xchg jo xor push or add jne xchg fildl and inc pop mov rolb stc add aad out mov clc test mov jo je add mov (bad) xchg sub xor cmpsl movsb add add push insb mov pop fldlg2 or cmc in inc mov push (bad) incl insb jno rol scas mov adc mov or cmp mov movsb mov jo (bad) mov inc or and cltd aam mov imul (bad) mov clc (bad) mov push inc jo sbb mov test idivl adc mov push or inc push xorl mov jae loop inc adc (bad) (bad) cli cmp incl or leave std sbb xor add xchg outsb pop sbb adc or js xlat shrb xor xor into cld clc aad ds or dec or push sbb shl loop adc or fscale push mov and push test mov je or aad inc pop mov aaa test movsl jmp subl adc ss adc test popa and mov icebp sbb push outsb inc inc ret cmp sub jo xor inc sahf add or adc leave je lret jnp lahf jmp and push jo mov stos jmp sbb loopne fadds rcl das and pushl cmp jge add adc xor aam jne sbb leave rcrl push jb std jle cmp push xor push push or inc sbb pop insb and and add add push push mov cmp leave lods (bad) dec popf ror add xchg add dec pop pop test dec sahf pop fnop shlb cmp push push adc (bad) xor scas dec jmp or shl scas sbb mov test call push fildl lock sbbl jle test inc loopne jo rclb xchg test std ja call std jg dec hlt dec nop rolb fstpt jo pop mov orl mov mov mov jge lret push outsl mov addr16 adc pusha mov (bad) mov push sub push inc mov in add mov add jmp pop lods nop fisubl inc jne in inc mov dec add pop lods mov add or inc cmpsl add mov push pop das aaa pop push mov add or mov or xchg neg andl in mov inc stos xchg xchg cmp (bad) divb fistp inc jae jge dec adc jecxz dec cmp dec adc add pop sar mov jmp call out je xchg sub push jae sbb loopne dec mov push (bad) test push (bad) lds pusha push mov (bad) jnp insb aad pop loopne adc sbb addb push add syscall mov mov inc stos adc btr push add insb loop mov sub push inc adc jmp cld aam clc neg dec add adc add in adcb xorb xchg ror sar pop ja add mov add outsb push ret pushl jmp inc cmp jne inc decl jne les and scas aaa add pop xor in push shlb xchg mov dec and lcall dec push scas stos mov adcb add jl mov stos inc (bad) outsb add lahf movb outsb jae test (bad) jae cmpl xchg dec jmp clc daa and call xchg add and mov notl adc cmp sbb mov mov adc jb sbb mov (bad) adc dec negb pushl js sub push (bad) jo jne rorb pusha and clc add pop mov (bad) push pop imul mov inc pop sub cmc inc add dec cmpb xor adc inc push add sahf and sbb clc inc mov aam or add (bad) cmpsb fistpll mov inc jle (bad) and jne and lods or mov inc pop or in mov jg rcrl inc mov push xchg inc test out les scas popa adc inc inc sbbl sbb repz fwait lahf cmp dec jbe sbb and sarl and (bad) or scas fldenv sub clc icebp xor jb mov adc fildll call pop sbb enter cmp les mov push add mov scas test and clc inc jno mov popa imul scas (bad) arpl xchg cmc mov mov mov adc mov push push add rcrl pop mov nop xchg scas xchg lcall xchg inc and and adc jo add or sbb add xlat daa (bad) dec clc rcrl add push xchg push mov and mov inc add add push push xchg mov adc fiadd push lret das addl (bad) jne mov adc popf fistpl dec in push fcoml mov add cmp xor loop fdivrs mov pop in push ljmp clc or mov sbb into bound sbb xchg mov push and outsb out mov mov mov lcall cs ds xchg mov mov and xchg push cmp xor cmpb rcrl pop hlt adc xchg ljmp xchg (bad) test imul shl adc mov lock neg into lock pop xchg mov mov rorb sbb arpl push lret fcompl dec lea popa lret add loopne mov mov adc mov push or jne xor or inc xchg xchg lcall add push push xor push in and insb dec mov fisub leave pop call je movsb mov out fcoml in sbb xchg fs mov test mov addl pop adc mov pop push cmp pop push cs aam mov add jb fcoms loope out loop insl mov nop xchg hlt scas pusha add pop adc mov mov ret je sub clc test mov sbb ret sbb or or fcoml pop mov push or push push or cmpsb scas ja and sbb sbb repnz (bad) dec mov dec pop push mov in mov ror and add adc sbb cmp in or add (bad) rdmsr adc add movsb xchg out cs adc les fwait sbb jne jl add lahf jmp adc sbb mov call outsb push out or pop mov xchg sbb arpl rorl pusha nop or out mov push lret xchg shrb or icebp movsb mov (bad) insb dec inc jb jg mov xor loop push clc clc sbb mov sub and loope pushl sub pop loopne fstl jg pop sub and push mov pop enter out adc or pop shlb enter xchg sbb sub shlb pop dec push sbb cmp mov mov mov popf loope inc xor call pop jp fistp daa dec mov add mov jnp movsb lods ret mov mov pop push loope sbb cli and mov mov xor out mov inc xor push xor nop and mov fisttp cltd mov jge jb hlt mov aad mov pop mov icebp or shr jo insl adc pop js or incb sbb dec mov das in mov or adc sbb mov std in lods or (bad) lods mov and cmp mov fiaddl lods inc or or push add lret sub out and cmpb jne or add int mov mov push mov xor leave roll inc (bad) dec inc or add cltd movsb inc sbb or cmp out loop xchg aaa xchg mov hlt mov push mov scas sub add test in cwtl add and mov xchg ret (bad) aas testb cmp pop idiv xchg cmp jne testb orb xchg into mov sbb aaa hlt scas push adc add movaps loopne inc popf cmp div or adc or (bad) iret cmp sub or dec (bad) lea adc fwait xlat jp adc addb inc inc jecxz,pn pop arpl add test lcall push nop sti popa pusha loopne cmp mov or xchg mov negb mov leave data16 subl and xchg enter mov (bad) and sub add dec sub mov dec xchg test (bad) mov adc int push sub push add xchg adc test pusha mull cmp inc stos icebp mov inc adc or fiaddl rcl (bad) xchg (bad) and pop test or iret movsl jge dec push sub scas dec xchg dec inc test push or rorb mov mov pop and pop add add inc add pop (bad) lock sub clc or dec outsl outsl scas inc push cmp aas mov (bad) jmp rcl sub clc inc sub movsb jge,pt lea mov ss sbb inc or call repz cmp xor add out ss js ss repz pop pushw adc scas popa mov aas aam add add adc dec push sbb repnz sub add (bad) mov mov outsl shr or movsb xchg mov add shrl mov adc fcomip add insb shll pop mov (bad) je jo test mov or cmpsl daa clc mov add jg jg call orb sub and nop and add jmp dec push fisubr jne adc (bad) jl dec add mov xchg push arpl lret dec nop mov push stos pop in jl rcrb bound adc pop add inc xchg dec jo hlt shr ds lret push dec shlb (bad) jg jl aas popf mov and add (bad) jne sub inc jge sbb addr16 leave aam adc add hlt jl mov adc lea mov andb sub sahf add je or rcr fisubr (bad) adc pop or shrl sahf clc lret or fidivrl push stos enter inc sbb in xchg push js xchg inc push jge or add push add movsl loope add arpl out js mov jl test inc invd (bad) popa sbb lods dec lods movb sub xchg push inc mov imull xor ja sub repnz fwait call lds flds (bad) jo mov out adc test movsb cmpl in xchg jge adc and loopne mov fadd jecxz cmpsl js les adc fwait pop scas hlt cmpb sbb inc or fadds pop loopne mov xchg outsl test sbb cmp (bad) pusha sub mov or cmp int3 and fild mov pop out data16 or pop and xor adc add inc stos xchg push sbb mov adc sbb jne add pusha fiadd cwtl mov orl or dec jle outsl dec cs cs push mov jg add sbb mov loopne adc xchg test popa ds jne push add ds add push or push jg add rolb add (bad) cmp inc xlat divb jbe add sti jge sbb push loopne mov (bad) (bad) mov mov push mov mov mov scas cmp jno inc cmpsl movsb adc cwtl cmp add xor xchg lret mov rol mov outsl xor out cld mov lahf xabort push daa and jecxz xor mov lea aas or and (bad) or paddusb fcompl rolb push movsb iret and adc outsb cmp inc in push dec out cli ret mov xchg in and in pop daa jg cltd add pop adcl fs dec lods push or jb mov imul add dec fdivl sub icebp pop (bad) lret xchg data16 or xor xor fcmovb rorl mov cmpl lods xchg repnz out leave nop jnp xor mov sbb bound or inc pop sbb cmp arpl mull dec leave test enter sbbl jns xchg mov push inc and sub or mov mov hlt dec or aam or xchg sbbb rcrb push pop jae sub adcb into cmpsb icebp push and adc or (bad) aas push mov addr16 or dec jno fisttpl jmp pushf or add add sbb (bad) and inc ds mov push push mov arpl div icebp sub inc add movsl or scas insl or push add imull sbb test lahf imul cltd add popa adc and add fsqrt cmp jge push sbb popa adc scas nop subb or and rcrb and test adc cmp mov sti je push jne aaa adc inc push adc add subl cs pop or int3 or orl test ds bound mov cmp jbe in pop lret out mov add sub cmp je in or or sub test and add mov lret and orb mov pop adc or imul add int3 scas or add push inc push enter push jg add or xor pop stos jo push mov push sub push and mov mov xor adc (bad) aam insb jl or add testb (bad) je out adc pop jo shrb in iret fmuls movb stos mov ficompl mov addr16 xorl jmp subl sbb or adc int3 mov notl add sbb rorb or dec fcmovne add cvtpi2ps push jbe pushl jne lea add test orl xchg lods out enter jmp adc dec xor leave sub adc or out xchg fimull adc inc pop lcall or lods (bad) fimul add jne movsl pushl jmp out mov lea (bad) adc rol add push mov add cwtl aas lret or inc mov inc mov aas shlb iret jbe cs sub pop add rolb jmp pop les sahf shr xor fisubr cmp or xchg aaa inc iret dec and sub andb adc pop fisubl (bad) jmp inc dec pop arpl test ljmp icebp pop inc cmc and pop add adc push sub xchg negl mov xor add mov scas mov or xor push int3 lea push lahf int push repnz lea and jl test xchg loopne outsl (bad) loopne adc mov aaa xchg mov dec inc clc cmpsl sbb sahf sub shlb push enter cmpl sbb pop rcll sarl xchg cmp arpl adc dec lock sti jp pop ss adc clc subl push dec rclb fwait cli icebp pop notb dec pop inc cmp jl mov movsb rol scas cmpl dec (bad) xor mov andw leave and rcr not xor rcrl fist mov shll push jne mov cmpl pusha rolb sbb pop lahf add pushf insl js (bad) mov jl or cmp xor int3 push adc adc dec js es pusha sbbb xchg ficom lcall xchg sub add and push call aad aas sbbl pushf push pop imul jne pop mov add mov cmp orl xchg lock mov and (bad) (bad) jl in fcom dec adc jecxz ret loopne dec movsb mov and fdivrs or lds add adc push xor stos lock cmpsl dec cwtl mov push mov ret mov jnp cmpsl ds js and rcr fwait mov push movb adc mov aad in loopne xchg lods cwtl sub mov add inc sti fisttpll jo divb aaa test jne pop xor add and xor insl scas arpl decl data16 pop cmp leave clc pop lock lret call sbb or addl (bad) mov pop lock ss insb lahf and jnp fdivrp movsb jne xor push movsb cmp xor es add push add clc flds and (bad) sub cmp push add push push or jne add mov stos adc enter nop pop inc scas rolb imul or sbb add punpckhwd push sub mov mov add outsb xchg pushf xor outsl shl mov aaa mov push mov popa xchg inc xor push mov pop xor leave xor push sub xlat movsl inc mov pop data16 jns or push xlat (bad) pushf loope and jb clc outsl or pushf and dec loopne outsb adc push pop inc pop dec add je test cmp es in cmp push ja add adcb addr16 sbb push loop movswl test and lsl mov mov push xchg pop fcmovu out jno cmpl xor loopne cli or outsl sub mov mov (bad) in je popa in je (bad) mov jmp mov mov (bad) add push cmp iret cmc cli xchg cmpsb xchg push mov out ja sub mov xor lret mov mov xorb or cmp popa loopne push dec fsts lret lret int3 sub adc push pop cld push add jne pop ja pop mov xchg sbb pop push adcb rol (bad) and hlt (bad) dec cmp test mov bound fyl2x sub xor icebp cmpsb inc inc insb stos dec push mov jnp test sub fldcw jmp mov je popa les pusha mov popf pop jmp lods test or cmp and int cmp adc and or xor fiaddl or adc push lods outsl in jae adc and and lods push sbb das (bad) push sbb pop shll je or mov mov and xchg orl push pop push pop fs cld push pop call fimull push std cmp cmc xor add jge mov pop pusha mov cmp mov or xorl and fisub aaa int3 ret (bad) or xchg add cmp or sub push push push dec inc lret cli sbb scas addr16 lret mov ret jo cwtl fwait pop push popf or and in jae roll fdivrp sub cltd int das in adcb fadd loope insb scas mov push mov sub sub pop push mov lock int xchg mov clc imul imul jno push hlt stos pop loopne (bad) iret push pop mov dec sbb adc cmp pop dec sub lret mov test mov add mov push jae in addr16 shll pop xchg fstl push sub mov cmc test in xor aam adc pmaxub jne dec inc adc in pop push enter fmulp sub xchg in add adc mov or adc sbb dec inc shlb daa cmpl fdiv adc popa and fincstp pop and pop les or cmc mov fcoml popf or fcoms scas imul push testb or outsb lods pop sbb mov or cmp jae push sahf mov dec cltd lret (bad) std cmp mov mov pop popf xor xchg pop jne int cmp mov add push jbe pop subb in adc inc cs fwait add jae in adc pusha sbb push je dec dec rcr fisttp inc in fcoms adc fnsave sub xor mov xchg sbb cmp push imul nop aaa pusha xor adc pop add inc repz sub fsub push lret cwtl and add loopne in adc xor sbb adc mov mov test dec sub xor jno rorl shufps loope adc inc pop xlat outsl or sbb cmp pushl sti test xor inc sbb sub ret lcall enter cld imul jge popa sub or add xor into pop cltd lock xchg aad clc adc push sub notl jbe cld or jmp mov or mov or mov ficoml and xchg repz xchg (bad) add xchg xchg addr16 sbb add lock jb adc and add or or mov lret in mov xchg xchg inc mov (bad) insl mov lsl ja jnp pop jecxz or xchg repz subb and js out cmp xchg mov push mov nop mov repz mov mov sbb sahf inc sahf adc in lock loop inc jns jne dec movsl iret bound mov aas fbstp clc sub pop adc mov and ss lea (bad) mov inc jae dec loopne dec xor mov mov adc or cltd sbb daa cmp ret dec popa bound cltd fwait pop adc out push out adc orl or mov mov mov and cmp jne mov push push add mov andl cmp fcoms in push pop bound adc test add add shlb jne lea lahf shrb xchg addr16 fsubrl jl loopne adc dec add call adc adc fsubrl mov test dec mov aad lods cmp hlt lret mov sub into or in push cltd out hlt sbb jb test push mov mov cmp cmp sti add negl or cmpb ljmp sbb aam iret mov js imul mov mov mov push data16 lret imulb ds pop cmpb sahf mov outsb loopne dec sub pop lea adcl jne (bad) or lock rclb jl xchg jmp mov scas lock pusha shrl xor xor sbb add jl push paddq pop adc pop out mov out js push fisttpl sbb jnp rorb and test nop mov add (bad) xor jmp call rorb mov adc ror pushf fadds add je nop push sbb sahf shlb hlt (bad) jns out adc cmp fstl sbb (bad) jg hlt xchg call cld push jb adc gs add or sbb pop sbb push mov data16 adc ficompl sbb test aad (bad) shrb repz mov adc push jle mov dec clc out mov cmp pushf xchg call push aas add cmp xchg in mov icebp inc daa add adc arpl fnop jmp mov jnp pop insb pop rorb clc std subl mov adc fidivl leave fldl fsubrl out mov adc dec push mov inc daa xor cmp pop popa and enter inc (bad) idivb push ret jns call daa xlat (bad) pop ficoml ljmp imul mov loopne adc cmp pop rcr int movsl dec (bad) in push jbe repnz pop push rcrb add popa jl inc in popf arpl sub cli sub adc or mov xor (bad) cmc pushf inc push sbb sti nop dec fcomp cmp dec or mov mov mov or cmp sbb jbe push call loop ret mov pop mov sub push push aas mov jle aam adc je sub cmp sbb add inc aaa xor test iret ret pop popf and cmp jge mov push dec cmpsb outsb inc imul stos lods add repz and jae and imul fcomp mov dec sbb pop or xchg in fucom rorl out sbb test out aam ret popf xor lods cld sub add push sub add rclb fdivl inc das dec hlt mov sbb imul mov dec repz fcompl sbbl adc mov sbb je pop imul and pop imul or call mov (bad) aas lea jmp xchg xor or mov lds xchg dec scas xor das xchg (bad) mov adc out add push lret je pushl shrl pop sub orl out inc lahf aam push fistp push xlat or imul or ret lock xchg xchg ret sub test mov (bad) inc and push jmp pop hlt adc xchg test out andl sarb xchg movsb jnp dec cmpsl and aaa (bad) push test inc or or add sbb clc mov mov push lods jg add bts jmp (bad) or dec inc mov loope add mov test (bad) or call daa fwait sbb adc and div icebp push push js notl inc add addl add push mov push adc adc lcall call xchg insl inc int3 insb xchg push jb leave xchg inc or cld icebp cmp inc mov dec pop jae sub sbb (bad) dec dec int3 inc push shll sbb movb mov out mov inc cmp (bad) roll cmpl pop dec xchg cmp pusha mov cltd adc dec hlt pushf inc inc sub lahf loop and lds inc or incl add inc repnz pusha addr16 or push inc lods cltd aas inc es adc lcall dec cmp insl add shlb sub les rorb daa outsb and scas shll push add cmp and pusha repz rcll pop test adc jno xchg jno sub jnp hlt inc jno mov xchg push cmpsb mov lret pop in push iret repz sahf cli add push sbb cmp iret repz push gs outsl adcl pop pop stc in sbb and add push dec mov ret (bad) mov pop jecxz pop xchg lods jmp pop push adc mov jmp mov fadd imul adc cmc sub stos pop das (bad) cmc nop inc movsb js cld xor cmc or inc and cmc push and fxtract mov test mov mov movsb sbb adc mov jno lret ret and sbb inc aam dec cmp mov dec mov adcl add clc lahf inc pop repnz xchg jo (bad) jae jb loope sub (bad) es inc pop and (bad) or cmp inc push call cmp in jg add insl andb xchg (bad) dec mov rclb mov xlat dec rorb lcall xor clc inc push fmul cmp gs inc inc call cmp add into (bad) movsl mov test (bad) fcomp push mov pop cmpsb sbb cmp dec xchg inc sbb inc and lret push add sub pop orb sarl sub lods aad loopne mov les lods jle and clc sarl cmp pop gs inc inc push (bad) jmp mov and js fidivl mov in pusha shrb popa loope (bad) mov or add push pop cld pop mov xchg cli inc cmpsl mov movsl dec sub out mov push mov sub push xchg dec cld and shrl rcll in push inc enter pop jnp ret clc hlt mov (bad) dec lock sahf aam mov movsb test adcl mov push add in fnstenv jecxz inc jl decl les cmp stc dec sub nop call or or mov sub aas sbb xor add rcrl cli sti mov popf and out mov mov push dec add push push sti das jle xchg pop cs fidivr adc sub cmp stos inc mul les je sub dec sbb jmp rorb mov mov movsb xor dec andb subl jns xchg sbb sub add inc mov test mov pop mov leave sub adcb das ds ret jmp push mov call leave js mov and or cmp add in adc inc cmp cmp or pop sarb or dec inc push sbb dec cld pop mov lret push inc add int3 (bad) fsts add dec mov push pushw xchg mov loope push mov data16 (bad) mov add ret mov (bad) sbbb xor jg sbb cmp add add add cmpl fs adc jg mov push add cs leave mov mov add fdiv js lcall ja jb stos pop add leave push in and adc push call fisttp pop stos loopne aaa add (bad) aaa sbb (bad) pop je cmpsl push loope test cwtl mov add or fmull dec inc xchg loopne pop shll and push negl push xor lcall mov addr16 mov inc push fstpt daa lods mov push push pop push sub (bad) out dec pop sbb adc jge out add daa jns dec pusha insb (bad) nop les mov pop sbb movsl mov mov xor push add mov inc aaa test and pushl sub push xchg jg mov mov cmpsb out or pop push inc pop rcrb xchg sub push add mov xor dec test pop pop xchg adc pusha adc inc adc add sub cli (bad) dec push std imul adcl sub ret add fbld (bad) out mov xchg sub mov and bswap mov shll mov add sbb jle or (bad) enter rol mov or mov dec std mov fisttp int jae pop movsb sbb notb repnz mov icebp mov pushf ret sti push or faddl sub imul adc cmp or sbb jg cmp sti lock orl or xor sbb mov jp daa sbb xchg fisttpl repnz jmp adc repz add mov pop mov mov sub or or enter fidivrl loop cmc inc or test and jae jnp sbb inc xchg (bad) and adc xchg xchg dec daa dec popa out popa bound xchg inc loop cmpsl lock xchg aam mov mov mov xchg and lcall rol movsl lods jmp pop and movsb and mov pop adc mov adc test shrb orl mov or inc push xor mov pop in (bad) xchg adc add jb sbb (bad) and test movsl adc popa call cwtl test and fsub int push adc inc fsubl dec xlat adc push or pusha les add jge pop loopne push dec aad and dec xor cld push push fs data16 jo push setne mov test (bad) inc push jo incb inc adc icebp rolb sub mov sub outsl jo pop adc or pop pop fbstp add pop pop sbb inc fs inc inc leave fldl pop inc notl arpl lcall rcrb add dec js mov loope inc ljmp jecxz sti dec jne cmp jne hlt ret inc pop daa call das cmp dec push rolb mov jg je push imul ret jmp aaa or (bad) hlt mov sub imul rcrb jg or call in sbb mov ret ret jle arpl inc dec jne in or es das cmp pop test add push faddl int3 push cmpsl ljmp push sahf xchg jnp sbb jmp sbb inc stos and fisttp lcall push xor adc xor cmpsl inc outsl adc daa adc inc push pop pop or mov aas les fistl and xchg outsb jg inc cmp jg push dec cmp movb push xlat xor lret push pop mov test clc mov pop lcall andb jmp xor dec sbb sbb inc add pop icebp and mov lods or ja arpl aas repnz jne pop imul imul out mov jmp sbb xlat ss pop cld fcoms sbb adc addl bound arpl outsl cmp iret sarb in inc and and in das pop sbb push test dec jnp jne inc adc adc or inc push xor lcall mov shlb mulb sub jmp iret adc nop mov or fnop pop pop jg psubd nop decb fdivs lods out stos jnp imul push cmpsb out sub mov lock int addl iret cli test add dec add lret xor loopne add adc rorb in xorb xchg xchg andb sbb xchg jmp ja xchg jo aas sbb push das out inc (bad) mov xchg push test adc sbb cld pushf mov xor clc or ja xor pop push jmp mov push push mov push es repnz pop mov jmp (bad) push ret aaa rclb inc inc test or inc je dec push xadd inc cltd sbb xlat sub stos xor leave adc out sbbb leavew loopne and or rorl pop arpl or popa xlat adc ror cmc ficompl adc test inc mov (bad) mov xchg loope xor popa mov insb jp fimul sub inc mov push adc movsb mov or pusha adc adc push adc iret mov in or sub push btc add dec add test not dec adc outsb adc push aam pop xchg dec mov xchg sysexit mov aaa iret pop leave add pop or add inc push add iret (bad) jmp sub pop adc (bad) or cli add jl sti add add inc lret ss int jno out push or movsb add pop push sub inc add out add pop sti inc or xchg xchg or std popf lods leave adc push adc cmp loopne xchg mov pop xchg lds notl dec cwtl sbb cmovb pop (bad) in orl (bad) xor loopne add push rcrb lret hlt mov sub pop xor sbb adc mulb incb clc insb xchg xchg jb mov mov or mov inc cmp mov stos pop hlt jle mov jecxz mov pop clc sbb jl lahf or fwait std mov rcrl jge ljmp sbb mov push in xchg mov fdivrl cmpl lods pop pop or pusha push fcompl imul aaa in sbb insb dec mov dec adc cmp cmp (bad) push (bad) push outsb popf xor cld ja sbb mov (bad) rorb sbb jecxz sbb in call bound or adc vminsd adc push lea es ret mov popf adc pop mov mov cs cmpsl (bad) negb pop loopne mov movl nop bound sub sub je aad jnp sub jns leave inc pop mov dec shlb xor pop loope in mov push push pusha das add xchg pop fildl subl lea nop stos sbb xor repnz xor inc add adc or je loopne mov mov insl sub stc fwait daa add or push mov jl mov cmpb add jg xchg outsl aaa xchg push sub mov pop or add sti xor mov in inc mov or fistpll push mov push cmp test or jbe cld dec jge adc arpl pop loopne mov push mov pop js add mov sbb shr xor xor xchg xchg (bad) xor ret mov inc insb stos and jbe pop xchg std inc insl pop outsb xor or dec lods xchg pop hlt push dec mov push push mov addr16 shrb xor adc icebp mov push cld xlat mov movsb adc inc add int3 mov xchg cld push jo fmull pop cld cmp xor jns pop movsb push xchg mov pop jge push loop adc pop mov (bad) pusha mov pop scas stos (bad) mov mov mov pop mov test dec sarb cmp xor fs mov cmp sub ds pop lea mov lret sub add push in aam sahf jg pop rolb ljmp cmp enter loopne sub xchg push mov test sub lahf jno jb daa daa daa jae jne daa daa daa daa ja jns daa daa daa daa jnp jge daa daa daa daa jg popa bound daa daa daa arpl daa daa daa daa addr16 daa daa imul daa daa daa outsl push push push daa daa daa daa push push push push daa daa daa daa push pop pop pop daa daa daa daa pop pop pop pop daa daa daa daa pop inc inc inc daa daa daa daa inc inc inc inc daa daa daa daa inc dec dec dec daa daa daa daa dec dec dec dec daa daa daa daa dec xor xor daa daa daa xor daa aaa cmp cmp daa daa daa cmp daa aas and and daa daa daa and daa daa sub sub daa daa daa sub push movsl push mov lods fucom push jno aas cmp ffreep mov insb outsl xor pusha pop mov and and ja addr16 inc stos enter mulb mov sbbb sbb push jne cwtl or fisttpll pop inc sbb shrb notl ret push fwait jns xchg mov data16 fwait (bad) xor fwait jae fdiv nop ret or ss in push jl or add jae je push adc fist inc and je insb icebp add push data16 fadds or je arpl adc xchg or adc gs mov and imul cmp mov mov lahf jo,pn popf jae xchg jo,pn es outsb in sti and int insb cs jo outsl gs push inc popa jae add sbb jnp in or push inc jl mov imul loop aaa add iret or sbb adc scas dec les cmp push push je mov insl dec outsl jo je push inc jns sbb pop push int3 adc nop or or and add sbb mov xor pop notb loopne loope add or adc sbb fdivl inc jb fimull mov pop nop sbb add fcomp or dec jl jp or jne lcall or xor mov inc outsl jb jae and or pop sbb sbbb push insb push sbb inc movsb sbb mov std jmp jbe push aad (bad) jge pop mov inc sbb lods xor out xchg ret sub pop mov idiv lahf add imul inc mov insl ficompl sbb (bad) jnp out push and mov xorl js or jb pop lret sbb add add or mov aaa add test push add push aas mov xor or push jno (bad) fcmovnbe xor push push dec gs sti adc les or add cmp pop or cmp jne je nop add push loop push sbb sbb push jl mov bound rcrb sbb push outsl leave stos mov push add repnz ja lahf pop sbb lds pusha pop dec adc aam rcr imul (bad) hlt jp leave pushf cmp add insb pop pusha in sbb xor cmp adc aas loopne call lsl push inc je data16 (bad) out mov pop mov ljmp cmp cmp nop lahf pop sbb add cwtl pop mov inc cmp imul add test fdivrs xchg pop insb inc nop pop test cmpl inc push dec scas or jl addb inc popa sbb mov sbb push movsl mov sbb imul mov ds aas sub int3 push or repnz test add inc shll cmp xor imul into xchg fsubrl movsl pop ret push sbb inc stos inc mov fdiv mov int3 dec pop stos pop push arpl imul lret mov es sbb mov fidivr mov outsb cs cltd jbe mov add push enter pop push sub repnz inc mov inc jle,pt imul pop fs iret in dec into das cmp push movsb pop mov add jnp rolb pop lock adc mov sub sbb inc pop and popa inc nop dec add in cmp bswap mov push cmp add or xchg and jae cmpsl inc and (bad) push push or push add je sub bswap xchg pusha push and cmpsb bound adc or pop cwtl arpl xchg arpl arpl test negb sub lock xchg popf sahf bound or cwtl inc push push pop inc imul outsb je mov mov sub push pop adc aaa nop push and rolb xchg ds or jno cwtl xor push push pop mov mov insl popa addr16 lock sbb and and std (bad) loopne push push push lods ret nop push and jae mov movsb push dec and push fcomps mov dec lahf mov push mov shrb dec out dec insl push outsb mov jae dec imul nop imul mov rep jno jbe js or lods andl push jno xchg push jg xor je movsb jnp inc sbb mov insl in lds mov push ret pop push cmp nop xchg xchg mov into lock jle inc mov lea adc or loopne aas mov idivb pop sbbb xchg dec push push aam xchg xorl sbb mov js subl (bad) push pop fwait call push dec arpl pop aam inc push (bad) xor pop xchg xchg pushf in lahf xchg lahf hlt lahf mov mov push pushf jbe pop xabort pop adc enter lahf mov cs and add or test (bad) stc add cmp pop mov shlb loopne,pt fsubl outsl and add dec inc jmp pop nop push mov mov xor rorw inc inc add jne xchg inc and sbb push aaa adc and popa push lahf push or mov xchg push mov je jecxz test shlb lahf mov add xor inc and xor je sbb add mov (bad) lea lock sub mov inc cmp xor ljmp add ret adc into fcoml dec popf addb or pop sub (bad) inc cmpsl dec incl or movsl leave rclb cmpsb jno add xchg add add xchg leave outsb and inc js mov decl lock sete test add cmp add pop pop icebp outsb adc inc sub inc adc lods in sub adc rsqrtps jmp adc daa adc mov fldl mov sub fidiv pop adc lret cmp (bad) je mov rcr std xlat cmp inc and roll mov ja enter xchg pop cli sbb inc xchg imul aad or add iret and movsl (bad) (bad) aaa sub repnz nop popa sti add jge pop add mov imul sub sbbl sbb call mov pop cmp push (bad) xlat or mov or jbe into les cmp push adc loopne add aam in adc pop cld out push pop popf (bad) mov dec xor lock or rcl sahf jp test insb cmpxchg sbb jb add or pop mov pop dec insb mov pop push xchg jbe add std mov adc xchg gs insb pop (bad) ds add addr16 imul sbb es dec pop addr16 xorl lahf cmp or arpl imul jno popa mov jl or jns jnp adc add ja jbe bound dec mov dec and daa push adc (bad) mov test das cmovae add xor jo push pop imul add add inc (bad) orl das cmc (bad) fisub inc je inc push xchg dec and add or rorb insl lds je or mov push jmp les fs lahf sbb jae cmp or push sbb mulps push rolb jg gs mov repz adc mov (bad) pop adc imul aas outsw inc push (bad) and pop outsb jne adc or insb and repnz bswap or pusha sbb aas jne leave jno arpl add clc xor shrl ret cmp and adc xchg fsubrl or (bad) xchg mov jge notl add or xor in out fs mov lods ret (bad) test inc les push adc out push add lock mov push dec pop inc dec inc push push inc push add add inc inc inc lcall push pop dec inc dec dec arpl fadd pop dec inc inc push adc inc push dec movsb mov mov push xchg popa imul inc dec dec and out ror cld inc inc xor xor adc pop in scas fs inc inc dec inc xor adc pop enter push push push dec sub imul dec mov (bad) das xchg insl sbb mov inc add pop push push test push or push dec pop push repz push push push dec push inc scas lods jecxz jns inc dec push mov mov out mov test sti mov add push mov stos lock push hlt sbb test add mov outsb mov orb sbbb jne add add or stos jge lcall cmp jbe and sbb mov or dec sbb push add jbe push or jle or add add mov nop js or inc ret test mov push fstpt negl inc cmp mov nop push mov dec xor sub scas aas xchg mov pop lods fisub pop and cmp cmc or loopne dec dec sbb roll inc cmp push pop jo insb xchg mov ret das push xchg inc dec dec jbe sbb ljmp sbb or mov jne jo adc xchg loop addb cmp push dec fmuls mov mov cwtl add xchg or movsl in jae jmp mov cmp dec cwtl rclb or pop xchg mov add push mov xor clc lret lea lods mov int3 and push sbb std inc push mov out mov cwtl rolb enter and testb je rol jmp push mov stos xor pop inc pop inc cs sbb lret sub lea incb addr16 mov mov cmp mov mov jl jmp jo in xorl add fcoms sub flds jecxz push mov or or fisttpl js cmp rorb dec xchg pusha mov sbb andl lcall xchg xor ret add xlat jne popa pop repz mov add adc jecxz insl and insb in or push inc test pop cmpsl andl es aam xchg test pop inc lea push mov sub mov (bad) xor adc adc loop cli frstor and fcom jnp push xor push das fiadd fsubrl push aam mov xchg push divl rcr cmpsl bound mov cli or xchg push outsb inc sbb sti sub ffreep xchg pop xorl jb push mov xchg cmpsl dec loopne inc sbb push adc pop ss add dec loopne pop and in sbb push cmp in dec ss mov popl pop sub es pop cmp sbb xor daa leave cmp (bad) xor and add dec pop sub adcb loopne add push inc pop sub js mov adc jne imul add movsb adc (bad) rcrb mov ds in xchg out pop push xchg cmp insb or cmp nop or das sbb adc lock or pop push xor pushf mov mov in scas and in roll sbb jb daa nop cmp cmp push enter idivb push dec mov sub sub push nop femms in adc ret add dec mov push out ret ret mov mov push cmpsb repz mov sub orb add inc lcall lock push mov and (bad) sarl jbe cs jge imull fs pop cmp data16 rclb mov jo aaa adcl jmp je (bad) mov cs adc imul lock or cld les and movsb dec push aas push ret inc xorl mov xor jmp mov movb cs mov jo cmp popa (bad) fildl and mov movl mov es push inc xor push sbb daa inc adc das pop sbb jmp inc and int3 cmp fidivl inc xorl mov (bad) outsl mov inc outsb and lock push adc mov ret imul imul (bad) call ds sbb push and push or push add or (bad) sub or or xor out out push push or push push sbb sub or xor add sbb push pop xor or pop aas mov mov sbb les test mov or and xchg sbb or iret sbb js pop add cmp xchg fimull jb pop cwtl mov in lods vcvtss2sd or add nop mov jge inc push insl xor imul test fs inc push sbb lea mov push mov push mov xchg sbb jl add cwtl inc push pop xor insl and aam loopne xchg imul and inc outsl (bad) (bad) es sbb iret add jbe ja and enter rcll sbb cmpsl sbb test push and sub add and adc cmp daa addl das or mov repz vpmovsxbd sub les sub (bad) fmuls lcall pop mov push insb inc sbb and push lods pushf mov std rorl adc pop sbb test inc mov mov push add les add mov hlt inc add out and pop inc jae (bad) (bad) std push dec mov and mov cmp je mov sbb mov movsb sbb mov fisttpll pop push lea or es xorl pop cld aam roll or and orb adc or js push mov scas (bad) lock not and sbb mov je mov and xchg pop aam pop jne sbb js cmp xchg adcl inc fidivl push add or dec fcmovne or jl push xlat xor push xor pop sub add cmp mov adc adc sbb xor pop imul cmp xchg sub sub data16 movsl int3 inc xchg pop push or dec add mov (bad) mov das xchg push vpsubq ds push cs jno or mov negl out jg pop inc das rclb or enter pop inc pop (bad) mov fs pop imul inc inc hlt stos insl cmp push mov fwait push testw decl cwtl je std (bad) lock or and leave (bad) jecxz lahf push jo pushf adc fstpt adc lea adc or aaa jmp mov add cmp in add push cwtl cs dec (bad) scas int3 nop sbb add jge (bad) inc ficompl xchg push or call xor xor or rorb hlt test cmp inc pop pop aad hlt cld bound pop aam cmc inc ret es flds mov add pop ror and bound pop adc iret lret (bad) or sub jns inc fnop sbb in push mov add xchg mov add scas mov xchg fimull push (bad) adc adc repnz mov hlt insl leave mov add xchg nop add dec fcmovu (bad) mov xor clc divb divl (bad) not and popl rorl sar dec fdivl pop xlat add sbb in xor mov pop sub test add sub push add and jns inc jbe enter adc stc jae push push xchg xor or lcall add je fsubrs push and adc cltd dec rcrl add cmpsb fcompl orl lock dec push push ss nop mov into mov cmpsl sbb and mov push sub fcomp jbe dec jmp jns pop add loopne jl add mov adc sub mov faddl inc inc das inc fildll gs pop in fwait (bad) loopne movb mov ffree inc add stos dec pop sbb cmp rcrl push pop call add (bad) loopne cmp (bad) and push mov jnp fmuls add xchg (bad) mov stos xchg lea add mov mov xor mov mov mov jp je add faddp inc add sbb mov sub ret adc aas dec dec test stos fisub cmp imul add mov pop pop pop jb dec pop dec dec jne add dec sbb dec sbb mov push sbb and (bad) sbb pop paddq adc pop (bad) in (bad) jl jo or xor inc and push fildll bswap shr dec loopne dec je jmp fidivr mov mov sub shl mov mov jmp outsl iret (bad) hlt scas clc movw xchg push mov insb fcomi cld (bad) cmp outsb rolb jno out add xchg push jnp outsl cmpsb add or sbb mov push rolb jne ds add pop push mov inc movzwl lea and pop push cmp cs xchg xchg dec jnp push addr16 data16 iret popa inc fild cld imul (bad) icebp orl mov les add fimull clc mov add call add test push inc inc inc mov and mov add and loope fildl inc test lahf pop mov (bad) mov subb rolb mov pop add xor clc loope xchg gs mov aas and or mov es mov aam (bad) test or or scas movups fs dec add pop adc cmp xor rcll aam add sbb movsl in pop incb pop dec je push push push mov outsb adc sub and mov sarl adc inc push outsl push dec sbb ret add loopne and sub shrl stc push push sahf inc clc and pop add mov lret (bad) lret push push mov dec lock adc mov jge add pop fwait andb inc in mov push push add (bad) mov and cld mov push xor push hlt push ja push cmc cmp adc mov lods addl sub rolb js cmp push and stos shrl movl (bad) push and add in insb pop cld push push adc bnd mov lods in jl add push sub imul dec sbb mov mov jl,pt dec fadd dec sub sbb fcompl or pop sub divb sbb jmp cmp fadd ljmp lods mov mov (bad) cmp jg test jle cmp xchg xor jg iret (bad) push aam pop clc dec lods test pop push out sbb or add ret adc inc pop inc adc sbb and in add loopne sbb mov xchg mov cmpsb or and and fsubrs pop movsb fsubs add movsl xchg sbb adc imul xor mov and in or popa mov lods sub fsubrl jl,pt les inc mov loopne inc sub dec dec test or ret push jg or jl xor (bad) push cmp dec incb sarl mov in (bad) xchg sbb jne cmp xor adcb ds adc sbb mov (bad) adc pop mov add sub pop sub dec add xor xchg fisubrl pop aam add inc cli adc lea push lea dec cmpb nop inc cs imul jbe nop pop cwtl push mov mov mov push mov popf sub sbb add adc xor jp lret push jge cmp add push mov out mov mov mov arpl je je mov push push mov sbb or je movsb loope cmp div ffree add sbb imul inc aam or nop ljmp lock ja out cmp jmp xor test mov jl ret push (bad) lods and push sbb scas sbb test dec add sbb sbb data16 pop sbb jb xor lds xor cmp shrb movl adc (bad) or rol sbb fistpl sub jmp mov push in and test out and sbb rcl insb and (bad) addr16 push sub or inc and jbe cmp data16 xchg mov cwtl push push sub lcall mov and push mov adc or in pop mov rcll imul add and add pop sub add insb shrl fidivl and es push nop or hlt iret jo dec sbb sbb cmp jmp repnz jmp or sbb cs pop jl rcrl jo mov punpcklbw dec (bad) incb mov xchg push push push clc pop repnz lret or aas push jg jecxz pop cmp insb mov lods mov mov sbb mov es mov addl pop add ret andl push push xlat popa imul orb fwait addl movsb push clc call or fstpl fsubrp dec dec mov lods cltd cmpsb and adc adcl add and adc fwait jns xchg add or xor mov push push in mov mov or lods data16 mov ss cs mov lods cmpsl mov mov jbe push popf js adc pop dec mov push cmpsb insl jnp mov test loopne in in stos (bad) fs dec scas dec pop in pop sub fcoml shr lock movsb add mov and dec and dec pop inc mov and scas adc pop adcl pushf jne mov mov test inc cld adc addl inc fs push adc sub mov nop xchg push push fmull mov adc add add pushf cld push push popf jmp sub mov xchg add push add daa stc cmp icebp adc mov dec fwait jne je stos inc sarl int3 rclb dec cmpsl pop outsl clc push negb inc dec hlt mov rorb xchg add movsl cli cmp pop jne js into mov push cmp pop cmp rcrb xchg (bad) xor scas cmp mov mov mov ret mov inc sbb dec xadd mov sbb sbb adc jno add leave cmpb ljmp ret cmpsl cmp xchg adc (bad) add cmp pushf add pop insb jecxz (bad) out pop les push or jb lret mov adc push jge or (bad) daa pop rcll add add mov rorl pop test add sub sub mov inc add clc mov or clc mov cmp cmpsl cltd hlt inc hlt mov repnz lock fsubl cmc mov dec arpl add lea stc xchg imul clc pop adc and mov sbb adc pop in faddl jne fnstenv xchg rcl lods xchg test xchg cmp popf mov mov pop mov push jb lock inc test scas inc push enter mov sub mov xchg insb loop sbb ss daa out push cmp adc les cmc (bad) and push cltd lods clc clc mov xchg jno jne pop mov cmc pop inc shll daa add mov push fstpt adc imul mov adc repz mov imul or sub sbb movb ja add mov push dec jb shl sbb mov pop adc (bad) or cmpsb jne out dec pop mov scas daa ljmp cwtl push ja out les cltd add call jge mov add pop mov popa lds inc or sub mov mov inc ja imul das or adc mov jne nop out xlat pop jne or and mov or fwait adc mov push mov pop adc loop mov sbb data16 popa es pop (bad) adc and push push xor push add sar lcall andl inc inc fbstp mov mov outsl pop rcll and push adc sbb xor mov bound sbb and aad xor sbb scas rorb mov (bad) add gs xlat imul aaa arpl bound fmuls add sub pop mov xor or jmp fild test or pop fwait js gs pop pop mov inc add sub jecxz fiaddl lahf lret xor sbb pop xchg xor cmpsl sbb push and enter jo push (bad) mov mov lods dec pop ljmp insl mov dec mov insl xor push inc sbb ss push push dec insb hlt xchg sub fildll sub xor mov add lahf xor add sub roll xchg or mov sbb sbb ja mov arpl inc sbb jbe mov or scas add add xor add mov daa notl cmp orl inc imul push sbb js push sbb add icebp pusha xlat pop popa fwait rcrl mov std xchg inc rclb and mov jno faddl push and inc inc ds mull cli dec or inc and sbb (bad) das push pusha inc nop and pop jno xchg insb add pop push (bad) inc inc mov xor lds ror add movsb lahf mov cmp sbb nop int jae jo lea sarl adcb dec and jg and inc mov cltd mov add push add js out xchg js jne sub add cmpb cli cmp sbb add sbb lea imul push arpl jbe test xor sbb cli (bad) lea dec enter jno mov leave repz outsb leave adc and mov and dec add and sbbl movsb jg adc xor push push jne dec xor lock and jmp mov stos stos adc sarb les add in lock pusha cmp adc jnp dec pop loope sbb andl add xor add mov orb arpl xchg jns or js inc sub push and and add jecxz pop inc sub xchg sub imul mov push adc or js xchg dec mov mov mov mov and jecxz jmp mov (bad) les adc icebp lods mov mov adc sub mov inc or and or sti and je sub add cld or push push jecxz call sbb jno lea rolb stos decl adc add sarb arpl movsb jns adc popf dec mov adc (bad) or dec cmp test iret xchg dec fsubl and xor xchg mov std and push fild mov push add shlb adc insl into inc fsts dec in inc xchg add lea mov pusha inc sbb bound sarb or pushf paddsw pop push pop sub sbb rolb sub add fs in int3 jae or push adc jns add adc in inc push test fs addr16 inc inc and jb fmuls add xor arpl mov sbbb popa in loope addl push xchg jo ja xchg lahf and mov arpl adc xor dec ja out and sbb dec rolb or insl mov mov fdivrp pop xchg jmp sbb mov sub mov cwtl fidiv pop fs cmpb lcall in lea sub popa aad xchg xchg xchg xor inc add and ret insb bound cmp jmp cmp mov pop and cmp movsl add adc adcl inc je (bad) enter push fstl dec repnz loop outsl lea adc clc mov dec enter test out loope xorl jne inc sbb xor incb sub cmpsb adc adc test cmp mov outsb sbb or add fisubr fist sgdtl add xlat int lcall or int3 repnz js push lock sar hlt xlat jo test mov mov adc add push pusha and je pop push test xchg scas lret sbb js mov sub int cmp xchg cmp ljmp into cwtl dec rorb (bad) push scas pusha sub lea dec test xchg js push pop sbb test inc das sarl or mov insb daa add cmpsl cld dec sub cmp add std movl dec pop inc mov jno push notl aaa test mov out hlt mov je aaa enter and je or push sti mov stc xchg inc sbbb cmp (bad) jg js cmovb add js je fsubl pop xchg add stos in sub sbb stos adc mov xchg stc adc adc dec ss (bad) xor (bad) fsubl sub jo hlt mov fcompl dec aaa pop dec xor pop inc js lods inc adc or lret shr pop push adc xchg es divl call pop das aaa add and pop loope xchg setno jo xchg or lcall sbb shrb or (bad) fistp push and and fucomip jo ss fiaddl aas adc mov push push sbb dec adc dec loop push mov shlb or sub les aaa jl or jle test andl insl jecxz in les xchg adc ficoml dec fwait enter adc sbb pusha adc dec jl add cmpl or jle insl cmp jbe daa std (bad) fs jle sahf push ljmp (bad) xchg push sub (bad) adc pop cltd mov adc ret pop pop jp jo aam xlat or sub pop sub shrl ret js stc jmp pop js jne clc je (bad) pusha fist push pushf movsb inc lret je xor inc push and lock addl mov hlt pop push clc xor mov enter adc push movsb mov add repnz out xchg and lds nop call fcmovbe mov gs es test jae sbb popa push into jbe xchg mov out pop in ds push push or xchg pop mov lea in or (bad) inc cwtl ss inc shrd jb popa add inc push mov mov fdivs cmp push fldt test call add pop push aaa inc bound (bad) push push loopne adc jg js lds inc popl sub enter inc enter mov xchg jp or add movl dec or cmc (bad) mov sub xchg add das push dec adc jbe je (bad) pop pusha dec shr les stos lcall in xchg fidivrl imul pop clc mov dec sbb mov or out sbb in pusha xor jne sbb inc push cwtl sub cmpb aas fcmovb and and jo shlb add xchg mov push mov xchg mov jmp push pusha arpl daa cs sbb orb pop mov sti jmp pusha punpckhdq xor xchg dec lods xor dec mov add dec pop and inc pop sarb xchg popl jae jecxz sbb fnstcw adc pop or dec sar jne or xchg (bad) xor scas jge jns pop dec adc arpl gs push mov sbb inc lods pusha pop aad inc sub jno cltd lods enter insb mov dec add jne clc and or sbb pop ja aaa mov mov fs or lea jne fstl mov jae mov push mov mov fistpl xor fistl xchg test imul inc out test lock adc sub mov (bad) bound cltd aas mov or addl les loop (bad) and xor cs jl push mov mov inc repz jnp nopl inc xlat daa or jno not add jle add cmp enter adc movl push or loopne push jle rorb js cmp jne add repnz pop push insl popa adc push xor cld je adc adc rcrl and inc fsubp sbb sub mov lock jae movsl pop xor sbb js add or mov neg mov arpl test mov and jecxz cmp test out jae pop add dec cld ret inc adc jge pop scas or or je xor jo aas fild mov sub inc faddl jno cwtl add scas enter add sub insl test and lahf int3 jp out jle mov out push fmull loop mov xchg adc jns les lods push jo (bad) ss fistpl int3 sub or pushf inc mov xor add adcl cs dec sbb lea cmpsl hlt dec je pop cmp pusha stos aad push movsb add in nop add mov pop scas fildl hlt sbbl and out sbb or sbb dec fisubrl push les adc clc adc adc add out shrl lds adc imul mov icebp mov in jne adc mov out sahf loope dec inc push mov test add mov dec cmp jne mov and test or fdivl jmp icebp sbb cmc adc cmp push lock movsb ss subl inc div bound hlt xor imul jg fnsave jl and dec jne pop out mov cmpsb inc mov out and dec dec add dec out insl or mov sbb mov mov pop les pusha pop daa xchg fsub adc mov or mov and mov push add and inc (bad) jne cmp xor cmpl loopne stc es sub sbb sbb ss js jl inc rorl je std loopne pop xor outsl (bad) stc dec lcall adc and fdivr or call and arpl push inc xchg push bsf std mov mov enter sahf sub push jecxz or xor test jge lock lds sahf pop push test xchg and add mov mov or inc cmp or pushf aam adc add sbb enter add pop add mov or pusha mov adc pop or or dec (bad) (bad) jo test sub test add pop adc js mov loopne hlt gs aas ds test cmpl lods push inc addr16 inc fs dec mov fidivl leave hlt mov test cmp inc out add push add test test sub setae ss push push cmp jecxz fist adc call imul addl cmpb out push push (bad) je (bad) test push imul adc and or push mov lea aaa push and inc or aaa xor inc xor in add mov in ja xchg (bad) daa cmpb pop sub mov mov sub and push push xlat test mov adc adc xor xor ljmp add ret (bad) sbbl icebp sub mov mov popa imul test push sbb sbb sbb das mov (bad) movsl imul hlt inc cmp push (bad) cmp aaa movsb or xchg push mov ret or jl jle pop imul dec mov xor mov jmp (bad) pop jae movsb jbe push inc sub push or popf or fadd cmp sbb daa cmpxchg shlb or sbb add or push or call pop movb leave mov xor push fcomps push int3 pop (bad) push adc xor jns and jno push or add movsl add xor adc shll xor push jmp dec jo test inc aaa xor test push cmp (bad) rol rolb and jbe cmp (bad) jl and (bad) and ljmp outsb push sub dec sub and imul sub cmp fucomp mov gs push sbb cmp push dec jl orl jl jp pop pop sbb push mov imul mov sub pop enter leave dec pop in add inc (bad) hlt add iret in icebp mov pusha and or ljmp lods sub dec xchg fwait jns or inc leave xlat inc sbb mov pop xchg inc or inc pop mov push int es loopne rclb (bad) sbb inc (bad) andl ret or lods icebp adc sbb xchg pop call clc out adc aad notl jae xchg lock sub push rolb inc fdivs jnp xorb push sbb push iret sub or and or insb stos sbb fsubrs sbb daa sub xchg daa lods gs dec push ja sub aam wrmsr adc sbb iret pop ret enter imul mov subl xor inc xor loopne jbe test (bad) cmp js pusha lock iret mov js add adc pop add push popl jmp xor cmp outsb cmp inc sub das mov lahf or sbb dec xor jbe stos rorl mov cmp xor test mov in fwait mov sub ja dec jecxz loopne stos cli pop jle sub fwait xor jb xchg pop xchg ja jb pop push xor xor sbb mov hlt sbb rolb es add and adc mov mov sbb fs adc push ja jnp add adc test inc inc icebp jmp mov xchg add cmpsl or mov pop aaa iret jne and outsl imul sub fldcw hlt mov mov ja ss dec ja sbb inc cmp cmp test loope loopne aaa jmp imul mov xor dec pop jecxz mov mov push dec fcomp mov inc adc fadds sti movb push xor dec push insb mov jg jb shlb xchg adc movsb push sub insl rolb push fisttpll lret inc xor mov xor pushf sbb push push mov adc test or push sub ljmp push adc adc pop jno push arpl lock pop adc cmp inc xor and lock pusha jmp add or adc mov arpl cmp xchg sub not inc inc movb ja xchg jmp and (bad) jne repnz fsubrs inc ret and xchg lea push add nop icebp and mov jl jp (bad) mov dec inc add mov or dec popf or push or adc inc xchg daa insb add and notl pop cmp (bad) nop push and jo (bad) data16 fist or je push push push dec aas (bad) cmp cwtl push push (bad) lods inc jb push mov or pop ret push ffreep fild lods mov (bad) or add inc mov mov sbb orl fdivrs or mov dec inc sbb pop mov outsb or inc sbb sbb out push or push sub dec (bad) (bad) negl inc push adc mov push xor movsb or mov xor lahf movsl push fidiv enter dec push dec sub push jo adc aam inc dec enter inc and mov ds pusha mov cmp negl pusha ljmp cmp mov (bad) neg popa je test adc dec loop and or mov add inc in iret ret or sbb ljmp ss inc push insl mov into cmp adc add add sti mov jmp loope je inc mov fs mov fmuls icebp dec and mov push xchg in sbb or and in es push mov mov sub lahf pop js insb aas jbe (bad) mov sub cmp imul mov fadds call fnsave or dec (bad) jno mov lea adc xor add aam ffree jae jmp jbe mov dec and cwtl es hlt add rcrb fscale fist or mov mov mov inc push movsl ds out push out sbb and xor inc sub shlb mov sub ss sbb adc es inc in xor cmp leave adc je cmp loope xchg ja pop pusha jno out or pop bound adc adc dec and sub adcl fs lds xchg and (bad) out jl sbb adc and sub pushf push daa lock add mov enter out dec in or mov mov push fcomps fistpl in rorb or inc mov pop adc mov insl fisttp call add (bad) xor or jbe mov xorl xchg cmp lods addb push int or imul push dec push jle scas push outsb sti inc adc cli pushf or jmp es or aaa stos xchg je popa xchg imul jecxz adc mov sbb mov ds jl cmp mov test sti inc jecxz sub and pop lock bound and in push js or push movsl or pop xor repz adc mov cmp fsubs dec mov into sbb mov mov cwtl loopne fldt adc push jo jg add xchg int xchg mov (bad) lea out inc adc jns outsb sahf imul ja or sbb ja or or push test jmp or add movb mov add inc shrl jmp push sbb aas (bad) mov icebp and or jmp sbb xor (bad) and xchg inc xor imul lds loop jp push add cmp mov add xor loope mov movsl mov adc incl enter lcall inc js or bound in pop xadd jnp stc dec xor pop jge and rol xlat inc mov lret xchg ja dec cmc aam mov iret push aam pop movsb or xchg (bad) addl data16 cli dec xlat insb dec movb rcll sbb sbb ret mov (bad) mov cmp adc mov adc lret leave mov cmpsl and push lds pop es clc rorb mov cmpb insb mov scas hlt fbld shr jl mov outsb sub ljmp push push push mov frstor mov and mov cmp ja test sbb clc add mov int3 scas lcall cmp popf in (bad) sub gs push lea (bad) sub inc push mov cmpsl imul sbb cmp jae inc arpl addl adc gs loope sub pop pusha cmp or adc sbb or fiadd and cmpsl adc rcll jle inc (bad) ficomp stos in daa sub push jbe rolb cmp mov cltd mov push dec dec sbb adc and es shr pop inc push loope jle test add jmp dec nop mulb sub push add pop jns inc jo lock mov test arpl fwait push adc pushf add inc jle test push push push movsl push adc lret push movsl mov mov sub adc in or adc inc js call leave adc out xor mov pop call insl push inc js and gs or sbb add cmpsb jo inc mov pop sub pop popa mov test shlb mov and push sub (bad) sbb mov pushf add xchg sub mov enter cmpsb or and xor and or xchg pop xor cmp mov mov pop sub movsb inc or mov xor sbb (bad) xor xlat adc clc and add add jge (bad) dec jns in mov mov nop test adc cmp adc stos or ret daa adc fiadd jo lahf xor cld push cmc pop sbb aam das sub lret scas test lret test jmp mov adc ret inc loopne out imul adc fwait cli or add aaa in imul je or xchg or push and popa or cmp push cmp mov push test xchg and pop nop mov inc jl xorl xchg mov dec test push cmp pop sbb add cmp sub push ds xchg (bad) stos pop loope loope lret ss loop hlt and jl ret imul mov leave add lods ret addr16 or xchg fldt leave outsb insb adc rol test shlb mov js scas dec fdivrs xor js cmpsb xor mov xor sub xchg ret or (bad) sub (bad) mov jno cmpsl mov sub mov (bad) pop (bad) int3 mov mov or cmp mov and jnp add test jg dec bound push adc and add xorb cmp push xorl or mov movsl lods pop adc xorb push cld or sub aas inc push nop arpl ja mov loopne ja insb (bad) jb (bad) outsl adcl inc mov dec mov add and dec orb sub insb inc mov xchg sub scas test or xchg add mov xchg and loope jo or movsl adc pop or push lret nop mov sub inc ret jns imul sub jge mov lock inc (bad) and xchg lcall xchg pusha push pop mov lahf test jbe fnop lods and and cmpsb mov test sbb out mov addr16 clc notl sub adc jmp mov mov pop inc scas je rclb pop and push push fcmovnbe and repz or inc div nop hlt iret sbb inc cmp xchg ret fcmovu xor add or scas or mov js ja dec inc lsl push pop movd and ret enter or push add inc mov in cld sub xchg inc outsl aad cmp ret mov out ljmp and xlat mov insb mov pop mov fidivr adc imul popf adc cwtl mov and fsubrl and adc in add ret in dec fnsave push mov daa es nop jnp movsl sub movsl test roll lods xchg jns in sarl sti cld jge fcmovbe adc and mov xor xor test mov mov sub mov es in orb sub loopne xchg iret and and xchg shlb jae and outsl mov das pusha mov mov popl dec xor pop xor pop int3 add cwtl push cmp jg into insb popa jmp test lock out mov ret or xchg dec push pop lahf xor stos inc or xchg jo cmp mov jl mov aas sub lods push cld push or cmp pop ficompl in push iret loope stos add (bad) iret push push or pushf dec aas aam aam pop adc adc (bad) pop mov das adc pop mov sbb je add lret sbb add cmp cmp lods or sub dec popa mov push inc pop (bad) lock or and sbb scas add pop inc jmp pop adc push pop outsl popa lods dec adc dec push xchg mov pop movsb (bad) cmp and or adc cmp mov nop ret aaa adc jns jb or cld aaa cmp cmp clc hlt lock cmp cmp call mov push lods clc jne cmp pop lods cmp and inc push sbb mov jle (bad) int3 cmpb adc and je push xor iret insb mov sub pop lahf test add mov out add xchg add mov imul or pop movb adc jno scas cld iret xorb mov xchg imul push inc out and push cs and cmp jbe push jmp (bad) xor inc adc adc dec adc add (bad) jae mov or arpl inc scas pop push push arpl adc push jnp dec adc aas cmp fdivl jge sbb ja mov pop scas add pop push adc cmp mov and in xchg pusha add and or push outsb (bad) add cmp jle push pop cmp mov mov das daa or das je test mov pop and and pop add pop dec pushl jmp push sbb and push xor je add xor sub lock ds sahf aam daa adc dec sbb mov mov or mov push adc (bad) sti inc pushl cs imul lock call sbb rcll or nop nop or aas das adc and dec sahf out test sub rolb std dec xor mov call jne xor sub adc add add pop mov inc or sub or jg pushf rcrb adc jle lea pop inc psubusb inc and ds jb push test les pop mov pop shll push sub int decb push dec inc pop cmpsl dec movsl repnz mov add adc cmp iret cmpsl test cld adc daa and sbb or xor aam mov cmpsb sub mov orb push xchg push push mov movsb sbb adcl push jns in inc (bad) gs mov push push movsb sbb clc mov push neg jmp cmpsb out mov and les sub xchg lock push ss sub dec fimul jmp ds cmp push out add adc jecxz or mov adc lock push insb popa jns jae push loopne rclb add stos push out adc push loopne rcr cmp adc adc pop in adc mov adc jbe or inc push adc outsb xchg xchg sub push jb mov add fdivs mov xor test sbbb jle prefetchw daa mov out mov lcall cld mov pop rcll mov cmp xchg cmp jb mov outsl or out stc imul adc mov push imul inc enter adc les mov imul xchg xor mov adc cltd mov out jnp push mov push jg xlat push fisubl movsl xor inc mov outsb add mov mov xchg sbb pop xchg das (bad) xor push sbb mov sbbb inc mov test and add enter dec out mov pavgb int3 es cmpsb cld fcoms clc cmp mov dec or aam lods cmpxchg inc mov fdivs or int3 jno cmp cmp imul leave rorl repz scas mov ficom sub sub mov nop movsb xor scas adc push add add or mov or fild sub and add imul push fsts mov adc add jo scas push bound jb ds pop mov movsl out pop dec sub push xorb dec cmp push inc adc imul sub test add std addl mov movsb lahf lock icebp and (bad) inc cmp je push xchg idivl das lcall clc test lea pop movl cmp pop jns cmc aam pop mov test push test test fwait cmp rclb mov sbb dec stc (bad) xor imul jp xchg or or sbb lds rcll mov arpl (bad) out xor mov mov mov inc xchg mov aad cmp mov into popa adc jg pop and nop/reserved sbb mov dec sbb sbb xchg sub ljmp pop lock lcall addl xor addl push cmp test push pop cmp cmp cmpb popa add dec psrld fs test inc lcall and loope cmp sbb leave adc xchg cmp jmp jne mov fist dec jle adc and adc fisubl daa inc xchg addr16 test lods ds jmp mov jecxz mov imul adc movsl (bad) dec xchg lea or inc out mov fisubr testl xchg cmp sbb ljmp data16 inc push xor mov add mov jge and enter addb (bad) sbb jmp pop daa fldl das (bad) insl movsb adc loopne (bad) dec psubw mov or (bad) xor or mov ror shlw fmuls (bad) jmp xor inc lods pop addb test add and subb es clc dec pop push or sbb insl dec push cltd jmp scas push mov roll adc add jle es pop and push dec pop mov adc dec test fdivl sarb and notl in pushf in sbb les lcall test inc dec xchg jmp jbe decl add mov xchg icebp fisubl sbb loopne fnop jmp mov outsb sbb and and mov inc mov in pop call (bad) cmp add dec push pushl mov sbb mov mov jmp inc inc test xor jle xchg lock cmp dec in lock div nop dec mov sbb inc call call or cld loopne fldenv mov lock cmpsb leave jne lock dec jmp sbb inc lods into or xchg ret push push icebp or sbb inc pop pop push call push test jns ret pop rorb lock inc inc add stos fs cmp inc pop pop clc adc mov sub sbb cmp xchg loopne sub (bad) xor rcrb insl popa adc lcall (bad) test cld mov (bad) seto cmp enter cmp mov xchg pop jecxz test jmp adc add mov adc in jle daa lods movsb mov inc aam mov sub nop jno (bad) and (bad) leave adc insl jg push push lcall xorl enter push test sbb lds cmpl and pop arpl nop pop inc ja int cmpsl ror pextrw xor cmp into mov in pop cmp jo jns repz lds in push inc cmp cmp iret gs mov lds cs dec push push dec pop cmp scas nop and inc enter out ficoml daa xor lods cmpsl sbb and inc out inc pop adc pop rcll movsb xor and pop add cmp je repnz outsl push clc mov test (bad) sub hlt sub add insb inc or test push xor shlb add sub rclb add push test ret sbb imul mov dec jae xorb or adc test icebp xlat movl or add sbb push rcl cmp or sbb (bad) mov rolb xchg adc add sarb mov ljmp pushf jno sbb or adc mov sub add cmp repnz hlt adc or cmpsl cmpsl sarb push mov pop lock loope fldl xchg mov add sbb jmp and in clc pop push add xlat repz and das cmp jle mov push pop mov in scas add scas mov push stos pop and and dec add int3 pop or xlat repnz addb adc mov outsl dec pop pop cltd mov pop in jecxz cmc andl mov add xchg xchg push hlt orl xor cmp leave in loop je notb sar mov enter in mov in enter sahf addr16 inc test sbb jnp jp jl inc es fs push and nop leave or pop mov sub das pop fistl jl and cmp cmp or and dec ss rol xor mov add xchg jp dec push add popf cmp add inc sarb xchg movsl frstor pop pop cmp push adc dec fild fisubr jns or sub xchg int sub stos mov fimul inc insl insl sbb push nop jle rcrb aam and push popf sahf xor mov or xchg and xchg or test sbb and inc ds ret rcrb (bad) das cltd mov insb icebp mov add mov and mov add out add lock jne scas push out add adc push lahf xor sub mov cmp pop or and es pop pop xchg xchg jbe push jne test push int3 push inc dec xchg adc sub cmp pop inc and popa mov push pushf add (bad) in or (bad) sarb mov movsl add pop cs test push inc mov xchg push fnstcw push push push pop ret sub mov pop inc push out loop or (bad) adc inc push xor xor loope call fild sub xchg push lret jge cmc pusha rcll ret adc add sub cmpsb mov sarb ja mov hlt inc into dec fucomip and jmp pop ss dec push dec push dec into jne add shlb enter jae fcompl sbb (bad) mov (bad) das test (bad) sti jbe cwtl cld nop push rolb loopne outsb mov jmp mov je dec in or push cmp les push xor sub dec test js xchg hlt movl inc sbb jbe xchg hlt pop xchg movsl mov in jne push fsubrs js cs dec mov mov (bad) mov mov mov jne or pop pusha cmp push mov or push push push (bad) fcompl add mov data16 inc push mov sbb lcall mov andb cmp nop out xlat dec shr inc pop loop mov pop adc push xor lds rclb sahf rcrb sub mov pop inc test adc pop pusha (bad) call hlt cmpsb pop xchg dec and inc icebp lret mov in jp sub jnp sbb aam xchg dec pop add movsb dec daa test inc sbb inc pop test popa movsl fstpt adc xchg jmp push adc aaa push push or pop fs lret xor inc imul pop inc jmp fildll das ret or pop or sarb test or or icebp aad mov jne hlt cwtl movsb popa and fisttp fdivl shrl push mov int pop xor cmp ja cmc popa adc das sbb push xchg push rcrl mov pand fisttp push mov and test cmpsb ja mov lds mov pop mov roll adc cmp shrl mov mov xlat jbe cmp sbb adc add call adc neg sbb shlb xchg int3 cs dec jo enter push mov push pop inc add cmp dec push dec push xchg xor loope mul mov inc inc xchg push sahf sbbl outsb dec lods in enter imul dec les push xor adcl movsl push lock mov inc push sahf insl pop add pop push movsb push sbb loope inc mov popf xchg lock insl arpl and add or inc cs cwtl lea inc daa push sub pop leave mov mov inc outsb out inc mov sub mov call push xchg fidivrl push jmp lods xchg or jae daa dec and nop xchg sbb pop (bad) fs (bad) sub pop mov (bad) enter add fiadd push inc and inc jl push push mov insl nop and (bad) sub out and adc je mov push xor jns les push inc jb mov and cmpsl les sub add shlb bound and fiadd addb aaa popa pop iret push add xchg js fsubrs xchg int3 loopne stc and iret flds push lcall sbb enter adc loop xor xor xchg iret xor jl addb nop xchg and and cwtl pushf mov and and and and and int3 rcl and and fcomp loopne and and call and and cld mov or xor xor adc sbb xor xor and sub mov (bad) xor adc aam push cmp inc xlat mov jmp jnp pop xchg test arpl pushf xor push fnstcw dec test add jne mov or fsubl add push mov push movsb xor cwtl xor nop lret dec mov sbb gs lods pushf mov xchg add push movsb xor leave lret or les enter nop lret rorb sub aam fadds test jl xor xchg loopne in lret push call sbb fs sub clc add ja push mov add nop and cmp dec gs sub pop xchg add je movsb xor sbb push lods and sub push sbb sub mov adc xor dec add xor xchg inc incl mov inc ja frstor (bad) and push rcrl adcb dec add jae and les inc mov movsl push daa jns mov or inc mov popa xchg mov pop lret popa jb les daa xchg pop das ret je inc dec insl xchg in test adc addr16 xchg gs cmp test inc fs pop dec arpl and lock jae add jnp xor fs (bad) shrb cmp jns jp jae sbb lret inc outsl iret cmpsb rclb lods pop pop pop or imul rcrw pop aaa dec mov pop ret push or adc xchg mov mov or and xor (bad) int3 out and sbb or outsb add in pop pop cmp or popa and push in inc mov nop cwtl das fstpl mov mov in pop xchg pop push or fistpl jl (bad) lds jo ficoml mov jns outsl addr16 jae xchg jne insl outsb das pop sbb fnop fs inc imul lahf and or arpl movsb out pop and jge push xchg pop icebp inc cmp outsl pop repz addr16 cmp or add sub and xchg loope jne xchg xlat fisttpl imul daa fs push xor inc subl cmpsb in and test pop jb jno stc dec sub or inc dec add cmp mov cmp inc dec imul push and jb mov add fstps enter pop adc nop sbb dec pop sbb and pusha xchg inc xor jbe xchg fcmovne push dec cmovs xchg mov sub pop mov xor pop jmp imul pop jo nop push pop add insl out add inc push inc push add mov mov push aam testl ljmp nop es rorb push mov add or sub stos push xor add enter mov sbb xchg xlat scas rolb jnp cmp cmp pop ret or imul mov mov inc push push push mov test inc ss inc test das cmp js (bad) dec add dec dec jg or inc push ret in cmpsb adc gs and mov sub fcompl fwait xor out push (bad) fiadd adc add (bad) sub into lds xor lds notl jb in icebp (bad) lock fimul shll push pop pop sub js push jno or or or and and mov inc jo push ret mov push pop repnz int3 pop pop or dec jecxz sbb adc rclb cmpsl mov cmpsb ds or lds dec jae rorb add rclb outsb mov inc data16 push ss jae adc sarb int and pop pop mov enter dec outsl jne arpl mov or into add pop aam jae sbb fiadd imul popf and sbb mov push push dec jno out data16 jo or ja addr16 test orl adcl and push je outsb sbb xchg push push adc stc push pop or cmpsb push call call or dec popa lock adc pop aaa in insl push adc je iret pushf dec or add or inc add dec ret add dec shrl fsts je and mov jmp out enter repz cmp fucomi lcall lea out pusha push or pop sbb or mov jno add push (bad) xor xchg ret leave push iret test loop insb insb or dec outsl nop js fcomps pop add and add cwtl inc pusha push loop dec pusha or rcl test add icebp mov push inc xor mov add mov daa dec jne jae mov ret cmp sahf test mov or nop aaa imul xchg push loop or push popa jb xchg push adc xchg mov lods adc imul sbb out sub into out cmp loope ds clts add push sbb out movl xchg dec push cmpl sub xchg aas jmp repz pop ficomp ja popa in out inc push add jo inc push (bad) bound or aaa cmp xor sbb sub je out mov popa or jns inc and mov inc mov arpl adcl or dec pop dec (bad) lods cmp fwait clc scas mov inc add mov inc je xor sbb shl or mov mov mov cld jmp push ret pop ljmp js adc pop push and pusha sub add sbb inc mov lret fdivr push inc dec xchg faddl adc sar xchg rolb inc ss adc pop aam mov inc or jno (bad) adc pop sarl jne fldl cmp or (bad) pop cmp jb (bad) loopne fsubl adc addr16 inc into pop insb inc sub add sub push movb push push aaa and mov cmp inc rcr add add inc sahf lcall cmc pop mov jo sbb jl dec adc xchg dec dec adc lods and push aas sub cmp inc xchg clc in and jo jl cli mov adc popa jo pmaddwd dec popa jb out pop mov das adc je rol je popa in pop push push mov mov and sbb dec cmp adc pop pop lcall pop and push pop xchg push inc into mov lock jnp jne cmp addl add pusha jae sbb (bad) mov call push leave pusha pop mov cmp pop sahf into movsb lock adc test mov push (bad) dec mov test mov je shll push push push js inc loope ficomp ljmp add adc push mov lea mov mov sbb add or fildl clc dec add sarl lock daa dec in sub repnz mov pusha lock pusha mov shld stos sbb fs call lcall jecxz jne clc je and sub fsubrs adc repnz push leave dec shll mov adc pop dec (bad) loopne ret mov mov push xchg sbb jbe out push movl adc rol pop fbstp les ja ret test adc inc inc loop pop movl jnp sub xor movsb lret test lods mov xchg add cmp push sar mov pop pop jae mov or inc xlat (bad) rcll xor sub jl rorb xchg loopne clc in (bad) int xor pushf xor push ficomp cwtl mov pop lcall loopne lods adc mov aas loope pop inc adc fs dec pusha dec es outsl sarb add sbb add dec pop jne mov push push jp popa bound test add push push xchg hlt pop push add adc fwait push sub fwait es mov pop cmp je adc inc nopl pop cmpl call or dec add adcl xchg push movb push je jo outsb mov ja and adc jnp jno or mov xchg xor dec rolb xor xor lahf test push out movsb fnstenv lock cmp ret popf and push mov shrb and (bad) insl dec lea mov cli in mov add add lcall or add leave mov divb cmp mov pushf dec les or in or add imul inc add cmp lock aad fs or mov or and cmp loop pop movsb es push or (bad) in fs mov and add or rclb fnop dec add dec stc fadds mov mov add inc lcall sar stos or mov or cmp jno jo and jo pop and inc add dec pop sbbb mov in pop inc or add add es mov test inc sub sub add adc cmp mov scas negl push (bad) sub insb mov (bad) lea cmp in xchg inc es pop adc mov mov fbld daa sbb sbb adc pop adc cli jle or jp adc add imul mov push pop pop or in addr16 repz mov fmuls out sbb xchg lea dec pop xchg das xchg insb data16 (bad) clc cmpsb adc mov mov testl adc cmp push mov xchg lock clc ficom push pop xchg sub mov hlt lcall xorl inc add xor sub enter xor xor sbb in cmp fs cmp movzwl rcll push (bad) leave mov push add or add sbb mov jmp adc inc or fwait or cmpl mov in insl push adc into stc mov or lea popa sub into push dec inc imul lds (bad) hlt sbb scas mov sub dec pop insb adc mov lds xchg xlat mov cmp (bad) int3 inc push mov ret test inc and ds (bad) add dec repz adc enter in push rorb push jo mov popa push xchg stc cs sti sbb jne or add inc and jae xor sub repnz outsl or fsubs inc or iret repz xor pop pushw sbb push clc repz push adc xchg test or and into cmp (bad) pop jae or enter int3 fisub xor test adc adc add imulb push out mov lea bound add adc pop or mov pop or pop adc xorl loopne es add dec pop sbb fwait sbb ret dec dec (bad) lahf dec or aaa pop mov arpl dec dec add pusha lcall dec test xor push add add outsb outsl stc xchg or ljmp or or and inc movsl or btl cld mov add fisubr mov mov sbb inc and nop cmp sbb lea int3 pusha push mov adc or icebp or fs addr16 jp cmpsl mov imul sbb sbb add push lret cmp push push test fisub push dec inc mov jo inc mov or repnz add push add in leave adc test and push jl iret int3 pusha das hlt dec lock adc outsb out (bad) mov (bad) mov xchg ja push mov jbe sbb nop push xlat ljmp cltd mov sub fsubl adc mov inc mov or mov pop and xor dec dec jle,pn inc mov push add xchg mov pushf adc dec call incb inc test insb insb inc mov pop aaa or or dec outsl ja shlb popa imul and sbb popa jo jo adc xor xchg or sub lock bound adc shlb (bad) jne or mov jecxz outsl jb sub pop dec aam scas pop mov insb (bad) lock mov in addr16 cmp push insb je fs inc daa xor cld inc push push push fs inc inc in fnstcw push enter inc dec push sbb shrl push mov mov imul xor push inc dec cmpsb sarl push jle outsb add je sarb in call xor fdivs fcomps cmpsl pop sbb in adc add je add pop loopne (bad) sbb jbe or inc cltd addb ja or sbb dec sbb inc mov mov dec js or add push dec bnd push in dec mov adc sub imul dec popf push add sahf cmpsl cltd jl push fstl and xor xor insb out push je outsl test je int push hlt jae adc adc imul add out pop sbb push inc add inc add adc mov push sbb or nop testl jno mov (bad) add inc cmp sbb xchg inc xor (bad) pop repnz push and or mov faddl popa daa aam jl add or push and hlt mov and push push and cmp sub pop adc xchg js and fs (bad) mov fistpl dec xor (bad) test enter and inc mov outsl in je int3 data16 (bad) insb lock pusha (bad) lcall (bad) call cwtl pushf push push (bad) xor pop mov mov push fdivrl add mov mov mov mov jns repz dec cmp nop and fucom movsb dec aas scas into or push inc cmp out and xor xchg sub js mov xor add jbe imull mov jp fdivrs jl sub nop pop pop sbb adc jne pusha push inc iret aaa xchg int inc cwtl jp and pop ds add pusha add or pop or add (bad) mov inc jne adc adc ds add add sbb adc cwtl dec les insl fstl adc add loopne pop and pop adc xchg rorb mov mov movsb inc call dec aam sarl insl (bad) push push pop je fstl inc imul sbb int3 or mov nopl pop pusha dec cmp fsts fdivrs loopne movsl mov fucomp (bad) pop jno adc jae imul pop push sub cmp incl or sbb dec bound or and inc push ret int3 sbb sbb or mov jae movsb push dec fwait icebp into rcr (bad) sbb dec pop repnz mov sbb pop cmp negl pop fs adc push test push test outsb roll or mov and push xor (bad) iret ret xchg aas inc push xchg jmp inc mov test (bad) cmp pop and push mov fldcw or push pop and or pop push pop lcall xor mov repz pop lock shll jl pop fs std jno or and cwtl nop cs ret in in rorl xchg inc mov in push or stos es push outsl jo jo pop jo in sub push xor mov add cmp xchg out dec xchg mov adc or mov nop or sub or cld inc pop pop sub inc or loopne pushf and pop inc cwtl rolb adc push cs cmpsl lods mov mov enter mov mov (bad) cltd push lahf aam xchg xchg push pop cmp iret jo cwtl pop ds enter pushf or mov insl and push xor movsl (bad) dec add xor mov push pop test dec sub or test adc scas or mov adc lock mov inc jo xor lds fnsave or cmpsl xor fs add mov inc rorb loope cmp inc je mov pop dec cmp dec (bad) rolb sub repz add add or in sarb sahf testb mov ja and dec fcomp add in cmp (bad) jb fsubr xchg loopne mov inc pop sbbl inc clc inc mov loope jo out inc sub mov fnstcw in ret ret push mov or and test inc push jbe jecxz xchg dec lock fldl adc push dec in or jle outsl (bad) or or jns push dec pushf inc inc clc inc inc xchg sbbb xor and daa loopne jns inc (bad) pushf (bad) mov push daa lods pop je push add dec mov mov std pushl push pusha js dec sbb call fcoml push sub outsl dec out nop pop xchg xor dec xchg xchg xor push leave xchg pop cmp mulb inc or cmp and shrb xchg sub sub and inc cs or cmp ss (bad) jp shrd call mov insl outsb xor adc mov inc nop adc shll sbb mov inc or lea dec adc inc aas sbb mov add xor and enter push pop and and xchg sbb and les and mov cmp xchg pop adc daa push leave push jb sub xor pop push popa out fisubrl js inc add push and andl xchg inc cmp bound add add adc fbstp rcrb loope scas cmp jno or fildl das in jno or loope dec or add adc (bad) adc sub fldcw cmpsl add subb add or shlb xor push (bad) dec dec aas add and or ja and sbb jge or cwtl scas mov out and add or lock rolb cmpsb jg and fstpt fsubrs dec push leave add inc pushl mov push mov push xor push add add inc cmp mov add fcomps inc pop int3 pop adc pusha pop inc sahf sub or inc inc dec jecxz and or int3 jnp das xor testb arpl push push mov push bound sub sbb inc inc or rcrb mov xlat (bad) mov call ss imul push cwtl gs (bad) insb outsb and jle push andb sub mov insl sbb cmpl pop xor push fldt inc add dec pop sub js sub push addr16 nop xchg mov jno jne cltd and inc (bad) repz adc dec adc sbb add add push add rcll push andb inc lret subb pmaxsw arpl push adc dec lods das (bad) cs loopne pop fs int add pop adc gs ljmp or inc les inc add bound sbb mov fs dec pushf sub aas jno add aas sbb dec scas lcall sub sbb push pop and cmpb mov and and dec adc and add les mov in dec xchg pop xor inc xor fiadd flds jo and daa or xchg sbb sub lds sub cmp sub fimul adc pop enter es repnz sub cmp push push add test cmpsl jno add and xor xor mov cmpsb xchg stos in aaa cmp dec cmp nop or add add lcall add cmp and inc inc inc clc and and rcrb scas sbb mov mov test add push ss into push rolb and test insl dec iret inc pop push lea dec int lret mov (bad) aas xchg fcoms fisttpll gs fsubs mov movl (bad) arpl in mov test enter or push push cmovno cmp push mov mov xor add in pop pop mov sub inc mov pop adc ret shl lret scas pop scas or sbb sbb nop or push cwtl push cmp lods sub out mov push mov push xor push daa lods loopne out pop jb call pop shll je outsl inc add and dec cmp push xchg jo pushf (bad) mov push mov inc leave add adc push push leave push jb and pop xchg dec and enter push and add pop es ljmp cs push test pop mov sahf adc cmp insb jo bound inc inc inc loop lods ss push push sbb pop add add push jns loopne sub cmp or das mov push and sub xchg inc ds cmpl inc mov test inc jo adc jno imull js xor rorb inc push adc sahf xchg or mov push dec fcmovnu outsl pop (bad) es push mov in outsl sub inc inc cltd out fnsave sbb pop aam push rcl push cmp in std outsb jmp or cmp mov cmp xlat push push test xor lds gs push xchg pop xor test push and mov fwait sub cwtl add cmp push fsubs push xchg xchg fisubl pop sub inc test adc or mov add xchg sbb sub jb insl test ljmp inc inc adc and or rcrb and add xchg cmp dec je lock dec decl bound mov hlt gs test imul or test loope les (bad) pextrw inc (bad) sbb fcomi dec cs mov cld mov stos jecxz pop cld dec lds bound aaa and test outsl cwtl xor dec add and gs push mov mov mov push (bad) fwait and pusha mov mov mov (bad) lock sbb push sub mov push dec call dec dec or or es and fcomp ficoml dec gs je mov inc mov push mov and mov add pop pop daa jge stos adc and std jl cs sub or ret test fs jae ja enter dec dec sub cs push xchg fsubrs or inc cs loope aaa dec ud2 inc cmp or lret adc xor pop inc xor mov jae xor add in mov dec cmpsb xchg stos cmp loop sub or fmulp fdivrs test push pop es adc jns loopne cmpsl cmp inc push push xchg call push call add (bad) sbb fs inc xor add movsb adc cli (bad) rcrb inc xor add sarb ret jecxz mov sub mov fsub imul and hlt mov aam adc cmp pusha xchg or lahf inc add fcomp enter pop lcall adc mov mov into push lcall in rcl dec inc or or les push sbb and fcomps popf adc pushf inc pop or jg push jmp inc or jl and aaa add pop inc push or insb les fisttp shrb pop mov in cmp add push pop imul fnstsw xchg (bad) je mov popa dec mov aaa imul push fsub cmpsb lret mov inc rclb adc in push or xchg mov in and xor add repnz sti cmpb sub aam pusha xchg add stos insl orl insl (bad) mov stos mov rorl add movsl test scas or dec dec inc push ficomp sub sbb std and push or das aam orl cwtl jns mov pop sbb sbb mov stos sub into mov add mov pop outsl decl push add sub adc push push es xor or in sbb mov in adc inc pop lea mov fistl or adc push push adc or sub in or (bad) ss lcall jae out sub mov and dec dec dec clc roll es and pop mov inc cmp sbb into rolb addr16 ret inc nop jbe jae pop bound (bad) lcall push sbb pop mov cmp ss mov (bad) xor imul fs push xlat mov jnp xor mov dec cmp xor mov out sub cmpsb gs (bad) mov dec insb sub cmp dec ljmp les movsb inc push inc sub push lcall cmpsl (bad) test add push xor dec lea sub dec aas xor dec pop adc push push cmp or (bad) xchg jmp into cmp aas test int3 stos add sub outsl inc inc mov pop or jg pop je jae mov mov cmpb sub mov sub sub loopne xchg adc enter test cmp or or or mov and in mov cmp stos xor pop fsubp sbbl cmp insl xor outsb jp dec add push mov loopne clc std xor shlb cld push push mov je sub xchg push add add mov loop das pop cwtl ss popf imul and pop inc enter loop or jnp or mov add or jb mov fwait les inc stos push dec sbb xchg sub cmpb int loopne add flds mov cld sbb fimull pop je or fdivs and test adc adc sti xchg cmpb or sbb mov test xchg cmp sbb sbb popa or sti scas add mov push inc mov mov sbb lcall adc adc sbb and cld sahf pop sbb sub cmp push repz stos xchg popf sub adc cs cld lock hlt or hlt sbb sbb or cwtl sbb inc aas and push cmp or and repz adc inc inc adc lock icebp mov adc ds jno sub adc inc cld or sbb mov pop test cld lcall and jo pop in ss sbb xor scas inc mov push pop cwtl ret sub add adc int push loopne xchg data16 pop inc push push push (bad) dec inc fbld add stos lret rcl cli ljmp or hlt shll test decb inc add mov push (bad) rcrl xor mov cwtl cmp out xor ds test hlt hlt push movsb push sahf nop jecxz inc jle clc mov stc or push inc aaa adc in sbb nop mov pushf mov (bad) sbbb push sub jo scas fadds ficoml pop lcall jno xchg push pop popa fsubl and and add sbb adcb call imul lea call ljmp jne and xor xor pop xchg pop in mov sub lock jmp cmp outsl adc lcall mov add dec dec dec arpl hlt or andb daa fstps xchg xchg in test xchg lsl incl lock shll sub into repz mov popa inc and mov push jne ret add fdivl ret cmpsl push cld jnp lret (bad) not and out push je jmp sbb (bad) rcll inc aaa in roll inc pop or call pop jb inc lahf ss test inc sub add add xchg enter loop add sbb lahf adcl mov ss ss xchg dec cld push xor mov push loopne mov jns mov ret jmp pop sub (bad) jbe mov jecxz jo pop ja into loop iret and xchg imull enter add dec pop cmp loope push sub ret inc pushf mov or mov rolb les add jmp xchg sbb sub dec xchg add lods shll sbb jo pop arpl pop add cmp fbld or jae mov fwait mov cmp jne jae add adc lods scas xchg shrl fldt dec mov pop fwait mov out xchg fwait inc adc mov sbbb add sub jne (bad) and nop out je loopne out adc enter nop mov mov sbb add rolb popa and xorl lock sbb icebp movl cmp push xchg push mov das lahf sub add mov out add sub mov and or mov enter dec bound sbb daa sbb insl movsl jne and push pop mov sub mov jmp push mov into fidiv inc test and and scas lahf cmpsb adc cmp dec mov xor sub inc or jge push stos mov sub and mov jge adc insl inc add cs xchg adc mov pop nop pop fild sarl push adc jb cmp es push mov push jo xchg flds adc enter into mov add mov push cltd jno scas and mov sbb (bad) cltd stos lods jb (bad) dec aam (bad) mov loopne outsl fiadd xlat add sbbb xor lahf push xchg pop sbb and push (bad) ja ja sub jmp shlb sub pop or gs js mov and xor (bad) idivb xor xor lahf (bad) push add out pop cmp insl or jmp xchg in int lahf add xor cmp test (bad) mov (bad) jmp inc cli add push adc jle inc xchg adc fiadd and cmpsl (bad) imul loope lahf jmp pop pop shlb add xchg jne lret rcll or lock lock cmp je push pop and adc sub aad add mov xor cmp pop lss sub ss xor (bad) mov std dec inc in scas enter imul (bad) inc and pop movsb nop sbb push icebp xor cmc cmp pop push fnstcw pop inc xorb push xchg add and sbb pop mov rolb inc ret xchg pop and mov gs and loope clc xchg push push push pop push inc dec arpl or jle cmpsl sbb pusha pop scas fisttp int3 jne mov push negl xor js ss sbb mov mov rcrl add or (bad) lods fs adc xchg movl dec cmp cmp adc ljmp sbb and push adc repz inc pop xor dec gs xor push or or or or push push or paddb sub dec imul ret push pop pop pop loope add and in jg add mov test out sbbb pop imul sbb xor scas mov pushf fs add or lret testl xor dec adc push nop jno lcall xchg sub test lds (bad) sub mov cld aaa insl add sbb hlt mov xor pop cmp cmp lret (bad) cs mov mov sbb jp loopne fmuls mov pop pop or lock jmp cmp cmpb rcll and add scas gs pop mov stos lea cmp mov add mov fidivrl mov lods mov xchg (bad) (bad) push lods sub jl inc repnz pop add das sub mov mov cmpb xchg fdivrl jne lahf orl inc mov pop jnp sub cmp sbb aam pop mov or xchg jg lock adc pop (bad) scas lods inc arpl xchg orl push inc dec sbb add or aam pop dec aaa in outsb jmp jne and pop xlat sub (bad) adc mov jbe lds mov imul nop hlt mov out mov jmp bndldx out jmp sbb loopne aas mov pushf mov mov add push lcall xor pop adc pop sub push cwtl push inc (bad) pusha ret sub lea sub adc in sub je xchg scas inc xor in imul mov cwtl add mov addl mov dec jecxz add sbb je sbb sub push add test popa jnp mov add test lods push sub ds out aas add jmp xor lcall fidivl jno fwait dec roll repz xchg push cs sub sbb (bad) xor fwait rclb push push or sbb popf mov pop cmp cmp add and inc inc xchg add mov xlat xchg pop inc xchg jmp inc repz sbb arpl pop rcr jge imul les cmp enter lods loopne idiv sub mov cmp loopne lea lcall or jge loopne dec mov sub dec push hlt lcall xlat rorb jecxz outsb adc (bad) mov sbb enter inc inc fsubl adc sub add mov xor adc pushf sub cmp mov mov mov push call sbb mov mov lea dec cmp dec pop arpl mov jge int3 push push sbb adc push inc xor out sbb cmp add sub std or dec push test scas fdivl sub pushf cmp stos adc (bad) sbb or clc or jge or enter inc jbe (bad) and and jle adc fdivs rorb out je push js ret stc ror push aaa mov pop mov push jne divb add jge imul jae aas xchg test or sbb xchg xchg xor loop push cmp fistpl inc add push xor inc les jne push add cli mov xor jp add lret push and adc loopne push push add and dec outsb push cltd pop lods cmp lret in sbb cmp int3 lods jge daa cmp shrl ds sub jmp fsubrs fcoms pushf jge dec jnp sub lea imul or pop or ss jl cmp xor lods outsl sbb loope sub add es lahf adc testb or push cmp mov scas cmp push insl cmp add cmp adc mov xor push sarb xchg pop xchg jge mov mov lods aam ret dec and cld inc enter inc jno,pn loope and add push nop loopne add cmp xchg push sub mov mov mov roll data16 inc ss lea xor sti cmp and mov fidivr and inc or ficom add dec cmp add jl mov mov sub and popf and or sbb and je pop pop inc lock lock jecxz shrb int inc and jo push add in stos and insb (bad) idiv cmovl inc stos add (bad) jo pop cmp lahf mov lods insl sbb or jb inc ljmp das or test cmp pop loopne dec aam pushl inc int sbb out add jl push mov pcmpeqw inc inc push inc pop fucomp sbb push sbb adc loopne int3 mov rol movsb inc adc dec xor inc pop loopne aam lea cltd ror test xor js repnz inc movb push aaa adc les sub lods cmp fistpl test jne and cmp leave outsl imul sbb insl cmpl and mov xor stos xor mov xchg loopne ret cmpl push (bad) call sarb sub je in dec pop jns and (bad) fst leave cmp loopne inc pop xchg dec jbe inc stos cld dec subl pop xor icebp in add add push int3 or rcl add add mov stos pop add mov jmp dec push add sub xor inc push xchg and or pop sub add pop sub push mov rcrl pop xor pushf push loope or sub mov add inc pusha dec inc push add add or or and out nop cmc pop or aam rclb add fdivl (bad) pushl xlat lods in insb pop pop push adc push push cmpsb push (bad) je sub mov sbb maxps pusha ss popf movsl loop daa push fcoms xchg sub add stos or mov les movsl or mov inc ret mov inc movsb inc imul les je mov push push pop lods jge pop lcall (bad) dec test jne jl sub rolb push imul pop and lret cmp (bad) int3 iret sbb mov js dec das loop xadd mov mov xor mov push jo sbb call imul ljmp jl sub sbb push mov aam mov sbb cmpsl subb mov and push add mov add sbb sub add sarl or cmp sub mov or ljmp jnp cwtl out fcmove insb pushf test add push cli fcmovnu sub std sub jae nop dec or mov lcall and mov jp je (bad) mov mov cmp add or push add and mov mov cltd xor sub add push jcxz sub adc push mov jmp fidivr adc lcall (bad) jo sub adc adc es xchg scas jne insb mov adc popf sub dec (bad) or add shrb adc inc aas les jge cli xchg sbb add cmp xlat pop jae sti jno mov or add mov jl test jmp (bad) jmp inc jecxz pop icebp std or out sub push in mov jmp out lret dec xlat or and inc pop add xor test pop mov rcll arpl cld or jle push sub sbb and in or and enter adc sub fsubrs outsl pop pusha pop sub adc adc and sbb insl testb cmp mov sbb fcmovnbe shufps mov test and sbb xor dec pop xlat push and and dec add lret call ficoml fild jle popa insl adc (bad) cli adc add inc adc push adc mov testb pop lret add jl jno add sub ret cmp pushl pop pop mov test cmp dec loopne or (bad) add insl jb jle xor mov jne shrb xchg push ljmp dec loopne andb or mov je lahf adc sub out dec add lea rcr and pop roll mov jmp push in arpl xlat loopne mov push mov xor xor lods xorb xor adc (bad) pushf nop jnp clc test gs gs dec dec xor sub mov jle mov rorb cmp or out dec pop pop mov bound lods xchg pop push xchg and mov fmuls es inc adc insl test push mov cmp stos jl out fldcw (bad) mov dec cmc fistpll cmpl nop imul xchg push mov mov inc sbb jne add mov and inc rolb xlat fcoms xorb xchg inc (bad) rclb scas push sub mov push jne cmpb in test inc clc cmp push sbbb cmp inc shrb stos mov lcall pmaxub push movl inc (bad) sbb loopne and push lea adc xchg inc or xchg add (bad) sbb or add (bad) mov pop adc xchg sub sub das insl repz pop das aam inc sbb mov imul sub pop pop (bad) or inc add or test jmp push push mov or dec adc sahf (bad) and add shr mov xor je mov pop rclb xchg loopne or gs pusha mov add mov ret pop jae sub pop jnp fstpt ss sub fiaddl or jl or push add inc scas xchg repz mov pusha jg inc add (bad) pushf insb sahf inc ja adc push aam or add aam rclb testb adc or mov fdiv push add xchg push jl cs daa test rolb leave add jg gs adc pop repz movsb add inc xor hlt jmp mov sbb add sbb or adc xchg add jp add xchg add out clc xor adc add xor or jnp out push inc and pusha mov jno lods push out jmp outsb mov sti xchg jno jne sub les gs sub pop mov daa inc je nop mov aam xchg adc and cwtl adc jmp mov frstor fbstp bound mov adc je rcll xchg pop sbb or and icebp and out insb cmp inc mov int3 mov bound push rolb sbb cmp scas push inc ret inc cmc pop push jae pop pop cmpsl adc subb cmpsb lods sbb sar leave mov mov fidivr js shl xor sub shl dec push add cmp inc mov pop les or mov mov pop cmp inc push addr16 jae leave xchg pop sub mov out and (bad) mov dec and pop jge nop jnp inc je mov clc dec jne out cmpsl mov or and pop js inc aam lock jo fistl (bad) jno mov mov dec and and loopne shrl shrl inc cmp (bad) sub xchg adc xchg sub inc movsb shrl add inc mov adc imul lock push cwtl loope inc or fcomip sbb mov add shr into in inc push cwtl push and xor xor cmp cmp fnstsw inc add or in in or cmp (bad) neg cmp jl (bad) mov adc jg adc push rorl popa add cmp jge add xchg pop out test rol mov (bad) push rcll scas xchg jg mov adc (bad) push ret scas mov aad add mov aas xchg jno testb cmp cmp jne sub add fs inc or push xchg and add insb lret hlt xchg push sbb cmpsb cmp pop dec sti dec dec sub js sbb or xchg dec push rcl xchg pop dec sahf mov mov add push add test and cmp pop (bad) cmp xchg push cmp dec movsb lahf sbb nop mov xor inc inc fildl push clc and arpl je in jmp xor cld xor add push es xor or add inc addr16 xchg stos lock push rorl loope xor dec test fmuls mov dec xor pop sub rorb jo or scas sbb jne dec outsl andb sbb and imul pop or mov js,pn cmp inc dec stc aaa cmpb mov xchg sub push mov xchg insb mov mov or and mov sti pop (bad) mov mov mov ret mov jne pop push adc xor jo mov inc movsl insb push rcll mov invd aas mov enter add jmp jecxz sub pop mov mov or xor adc mov inc out addr16 shlb push rcrb adc or mov lods add fisttp stc add imulb pop subl (bad) and repnz push movb and nop dec lahf mov daa lock xor adc or dec add out push add in hlt and dec in mov push int out or test scas xlat scas pop es pusha pusha adcl inc loop shlb adc dec sub fcompl mov mov jb in inc fprem outsb adc ret adc fnstenv or or daa dec xor data16 mov dec leave mov adc inc inc mov (bad) mov or sub mov and mov test mov int shrb inc mov test mov jae pushf mov sbb test and mov push jnp pop (bad) (bad) out inc push ret push inc inc dec dec (bad) out pop cwtl push push adc mov pop pop push in sub mov stos aas and movb (bad) pop inc das popa in add gs aaa movsb add add fmuls sbb call push loop adc inc fs jg adcl je rclb mov aaa clc cmp xor test pop cmp movsl dec mov (bad) (bad) iret lock push enter xchg adc push add test mulb gs clc mov shrb xchg jae mov or mov outsl int3 add add xor or inc push xor iret pusha or add pop jge (bad) movsl nop sub add loope pop fstpl sbb lods enter test inc adc push je inc cmp push pushf sub sbb outsb xor daa loop add or mov lods shr cwtl pop xor pop test lock enter leave pop mov xchg fmull jg sbb fmuls shlb add mov fsubrl (bad) adc mov (bad) xor dec dec dec dec adc dec dec dec sbb sbb dec dec dec sbb dec dec dec add add dec dec dec add dec dec dec or or dec dec dec or daa daa daa and repnz daa daa daa daa cmc div clc daa daa daa daa stc cli sti cld daa daa daa daa std (bad) jmp ljmp inc add sahf push mov jns xchg je insb out sahf out fs je out sahf push insb dec fs pop jns out cmp xor sub jns out and sbb sahf out sahf adc or add cmp sarl adc or jns iret repz cld test sahf out in int3 in sahf out sahf fdivrl sahf out les sahf out lods mov pushf jl je insb jns out test je jns out insb dec fs sahf out sahf pop cmp xor sub or jns and sbb jns jne jl mov nop add das pop pop loope inc insl dec insl add mov fildll jl,pn lea sti stos cmp add fucomip mov push pop mov pop repnz aaa cmp loope adc mov or rcrb inc daa push cmp nop cld mov out pop xchg inc arpl rcrl sbb xor ret xchg mov jbe mov dec js,pn rcll adc test adc cltd insb repnz data16 (bad) push or out sbb mov test sbb dec fnop pop movsb int3 cs enter in les jl (bad) xor add scas sub dec faddp pop ja add mov jno pop ja mov enter enter aaa aaa imul sbb mov dec bound push xchg js adc fcoms mov iret fs add xchg addl push dec out inc (bad) lret (bad) rcrb cmpl scas ljmp sbb and js cltd in sbb scas inc jns imul sbb in fcoms jns fcmovnu rorb xchg pop xor loopne sub push xchg test loopne insb mov in xor adc aaa push aam ljmp popl jge push adc push or inc or jns push jb je mov lock mov (bad) fdivl aam and sbb sbb in in imul pop daa stos dec repnz jp dec lock enter or xor das jmp or incl into push cmp stos movsl and popl push jnp in outsl mov fs (bad) test cmpsb jle loop pop fimul push push jo (bad) lock loopne jae test stc mov sub insl dec adc (bad) and xor xor dec imul sub push xchg jne aas clc or add outsb pop arpl insb push or jge mov inc outsl pop js bound (bad) into add es jb jb ja pop mov popa dec es insl imul data16 es gs cmp jnp jne jo addr16 jb fdivp out mov add mov arpl mov testb daa push jg jnp out into sub insb das je insl sti fsubp cmpsl sbb and pop jo cmp jge push je jo jb sbb jns outsl dec data16 sbb das add or imul pop push clc add lcall jb mov clc add mov push cmp out enter push add jne or pop outsb inc adc and outsl dec insb out xchg cld dec rorb or inc xchg popa mov adc mov fbstp mov pop cmpb push jl or mov dec iret es sbb insb insb push fcmovnb mov out add sub mov mov mov jmp pop push test or call add mov or add movups pop movsl imul cwtl inc fs add into or pop insl roll enter push push dec push add ret cmpb push mov sub lcall mov xchg adc dec adc dec or sub mov push pop jl in imul cmc xchg fcomps inc subps push pop adc xorb mov jae sbb or jmp add mov sbb or and shlb cmpsb inc scas pusha dec sbb push push jns add xor xcrypt-cbc cmpsl push jns and adc add rorl fadds cmp push lret add jp pusha adc sbb inc (bad) or jle or dec pop push test inc roll xor roll add add push pop pop or or or or or or repz adc adc cmp repz std (bad) cmp sbb sbb push pop and and and sbb int jns fadd loopne push in push (bad) pop cmp repz cmp insb repz repz lahf mov cmpsl stc cmp shl hlt add jns daa cmp imul jns sahf lods mov out in add xchg inc je fwait pop push mov or push cs and pop adc in lret or push mov or cs and and sub xchg lret sub mov adc cs cmp dec sub xchg lret pop dec sbb dec in push sbb push mov repnz ja push push sub popa imul movsl repnz mov xor nop and xorl and push arpl jb add test in sub xor push fmull movsl fadds das xor cmp jne fmuls ljmp adc or addr16 jne push jno push adc push add incb (bad) call cmp rcl jp data16 and push and mov imul in or das shrb dec sub lea jno or loopne mov and inc push mov push add xor and (bad) xor sar mov push pop dec repz adc fcomip bound adc pop cmp dec js fimull sbb ss adc loope push out in xchg lock rol add ds lea lret cld sbb mov stc sarb sub outsl js addr16 sub mov push je mov ret push push rolb sbb xor inc (bad) and daa pop and nop gs push xor sbb mov adc add stos rolb in ret dec adc dec mov or or pop add nop stos mov adc add test sbb sbb leave add jb sbb and add push and or add xchg and push aad sub push add cltd dec scas xchg sub sub sub cs add add push xor add xor mov add xor pop push mov adc and sbb lods xor add sbb or adc rclb xor nop cmp int3 sub or ss push mov repnz lret dec or inc pop add push stc mov adc (bad) lcall js nop sub add int push pusha into fcomps or cmp pop adc shrl in jns adc nop jl aas xchg pop and add adc xor pextrw nop scas pop sbb dec popa sbb push xor daa invd daa aam xchg fwait ret fild andl adc (bad) mov push adc pop adc enter sub (bad) je enter iret or enter int or sub sbb in xor nop stos sbb cs cmpsb push std mov and sbb and dec push xchg and enter and es roll inc pop add add sub adc sub fmul rcrb adc js js jb test dec gs jbe jns test xor xor xchg adc fsubrs or pop push cmp arpl add lret adc outsl or push dec pop mov les xchg das sbb nop cwtl inc push jbe and inc and outsb adc inc xchg adcl (bad) add pop adc add test sbb test notb mov or inc ds pop push inc (bad) mov and push mov enter gs sub jmp pop and arpl or mov sbbl cltd fcomps test push out nop jne jno push pop push pop sbb xor lea xorl in repnz cwtl imul nop mov (bad) lret and inc sub scas and shrb (bad) lret sub dec mov mov mov xor xor xor cltd dec scas xor fs cmp in cltd dec cmp and or mov mov or mov subb sub out mov adc sub xor jae or push jae nop rorl and jl push push push xor add ja fild and nop cmp loope in dec or mov loop add xchg xor ss add sbb loop adc roll sbb or (bad) cmpsl pop and call mov cmp mov movsb push xor mov add pop sbb test cmp cmp xchg and add xchg nop mov or jne push enter inc dec les fisubl dec push pop xchg stos and sbb cmp sbb or roll xchg push pop lods test js and add xor add adc adc pop sub inc mov mov fiaddl and pop or mov xor pop pop sbb xor push mov (bad) mov outsb jae sub (bad) adc adc lahf adc lods enter add xchg stos aas xor cmpsb mov sbb pusha (bad) test outsl aas stos sub xchg push inc push aas inc lods bound mov outsb lods cmpsl ds cmp mov lcall inc inc cmp inc std pop adc lock mov inc neg sub and fcompl lock repz mov push mov sub push int3 or clc es xor mov push jmp push mov test outsb scas out les lock testb pop adc lcall js loop add loop in cmp add jecxz es push cmp out (bad) fcos inc (bad) rolb sub push (bad) faddl inc outsl pop sub mov sbb cmp jl subb cmp notl xchg mov ret rolb das (bad) mov out jno push out in add or sbb (bad) jmp enter faddl pusha out pop loopne loope divl pop icebp jmp (bad) inc sahf xchg pop sbb jp lds add add mov mov xchg mov mov xchg lcall xchg mov mov cmpsl nopl add adc and enter pop inc adc dec scas and jmp adc jns adc xor jl sbb sbb dec or jb jb sbb cmp sbb push pop pop xchg mov or in and inc sbb and cs xchg and push leave push and push xor and sub push jb sub add add push das jg mov cmp push mov inc js nop mov push cmp adc roll and push xchg mov test xchg adc sbb popa inc cmpsl ljmp loope nop addr16 and stos js push adc jns fsubrl (bad) sbb add fstl or inc insl add add push sbb jg enter insb push loope movsb mov sub adc in push jno xchg sahf imul add jb pop and leave push pop adc push or add adc dec push pop jo dec add out sub xchg dec push inc xor rolb add mov push or out sbb std push push xor jae imul pop and or push jo xor push jo adc adc (bad) scas mov pop adc mov imul mov adc push fs int aaa loopne ss pop and inc bound and sbb push or adcl orl addb ja js inc push pushw cmp lds dec pop pop xchg push out adc cwtl in xchg fimul inc push bound lahf cmpsl nop jle pushl push cld and pop lock push sub mov inc outsl pop and scas into int and or or movaps jnp mov lahf inc pop cs je add jns and mov adc adc dec fidivrl mov push cmpsl adc cwtl fdivrs adc cmp xchg fs cmp cmp xchg nop cmpsl sbb xchg popa cmc sahf mov cmp jb add andl sbb mov mov and push inc int mov sbb ret mov xchg and inc cs dec and je and add xchg pop and leave push xor sub xor xchg cmp push sub sbb lds and ret sub rcrb mov pop lods adc mov push aaa shrl inc fistpl aam mov fstl pop aaa or pop es loop aaa cwtl or ret mov cld jle pop jno aaa or mov (bad) (bad) shll pop sub push add push aam addr16 mov mov mov add dec lahf add push sub cwtl mov jp jl test or imul pop pop inc xor add adc stc or hlt fs lret cmp (bad) movl mov xor mov mov adcb inc imul add and daa test xlat or add xchg dec hlt cmp jne mov movsl cmp xlat jmp sbb in jnp sbb push sub cmp xor cmp push aaa (bad) fistp cmp cmp (bad) push push push fcmovnbe and inc lock push mov sub dec inc test sbb add mov add adc xchg jl mov sub cmp das sbb (bad) jo lods push movsb movsb add inc mov pop pushf sub xchg mov xchg addl or xor dec push jecxz mov pop cmc dec mov add inc mov inc add sbb push and mov cwtl ja scas std loopne xchg mov mov adc test cwtl or add pop addr16 stos and scas or aas das mov test and pop or outsb (bad) jae push xchg mov adc inc cmp cmp add dec xbegin jbe ljmp test add pop xor ret cwtl or mov sbb je out (bad) les inc xlat insb adc cs nop push movsb mov push insl mov mov cld cmp adc add sub dec mov movl roll lahf loopne loope xor cmp or push mov adc pop daa pop inc push sub (bad) aas xchg dec pop pop sbb add lret xchg dec cmpsb rol inc mov mov and jo cmpsb adc xor or inc cmpsl or xchg loope lahf mov shrl icebp jecxz ret cs mov out nop test mov ljmp aaa es (bad) cmp enter push dec jne or jle stos add and test sarb rolb arpl (bad) xor push cld cmp int inc inc fild test and jecxz xor or and push push push or scas and mov leave (bad) sub stos sub or adc sbb cmp cmovge dec cs mov cmpsl test test mov push jecxz insb outsb pop push sahf push call insb add mov or jp adc jb jp inc dec push and sbb out sbb add sbb out sub sbb or pusha inc fidivr (bad) lcall out sbb or mov sub xor add popa sub add or nop mov push cwtl leave jno mov mov es orl xchg pop orb loope cmpsb add pop rol adc jnp inc dec sarb repnz adc add xchg cmp les xchg nop imul (bad) notl and testb xor push rolb cmp cmp out fildll or daa sub sar pop and std in sbb add inc movsl test outsl divl cmp mov pop sbb mov jns dec pusha adc add adc mov in loopne pop adc inc add cmp negb or nop dec mov mov push add dec pop inc mov add adc mov add enter frstor cs mov leave jno add adc in jbe mov mov js js inc sbb mov mov xchg jb or sbb leave jns or enter hlt gs pop in or adc adc add adcb add test mov test lds mov in inc (bad) fmull fldl fnstsw shrd xchg sti je adc ficom (bad) xor pop cltd fiaddl adc sbb ds ret adc decl ret cmp movups (bad) mov sub adc bswap adc mov cmp (bad) xor mov adc fldenv add addr16 cmp mov negl shr outsl movsl and int and dec mov rcr aaa add sub ror test (bad) mov adc cmp sub push or push and cmp sub lods or test push xor mov push iret xchg sub inc inc pop mov loopne mov mov or dec rolb mov enter dec pop push (bad) adc movsl jecxz mulb outsb pop hlt push pop imull jnp push lock jne clc adc jno pushf inc aaa xchg sub loopne push and pop jns ret xor push lods cmp jg dec mov and mov jl test lea jle inc (bad) (bad) sub rol cmpsb pop cli xor dec mov int3 (bad) fistl roll enter (bad) cld cld movsb icebp gs dec dec or adc sti sub outsb fcoml arpl push xchg sbb jnp adc push sbb adc and ror dec or cmp cmpb ret aaa es inc jg inc dec sahf sbb adc mov mov sbbl dec inc inc dec ds sbb fdivs cmp inc fbstp paddd je mov lock xchg pop aam xlat add jl mov cli mov shll scas insl inc rorb adc mov (bad) xlat add (bad) mov and mov nop dec adc adc nop add rol (bad) lret lock sub test add dec sbb pop adc jl or mov mov jl sub adc sbb pop in inc sub mov or daa outsb sub add daa inc xor dec add xor xchg out pop cmpsb cwtl add std das cmp and daa aad aam inc and insl jge xchg jb lock push inc sub imul mov sbb or pushf mov mov arpl lods out test faddp add ret sar add arpl ret cmp push push fnstcw sbb pop adc loop popa and fimull mov fcomps fimull push sub flds aam add xchg (bad) xchg sub and add lgs add imul fs call lock nop pop testb and (bad) movsb adc fimull insb pop pop aaa cmpw rorb jne mov cmp and push sub adcb and lds lahf and xchg adc cmp icebp shrb or adc call or pop push xor cmp mov (bad) dec dec fisubrl push mov gs or sbb and adc mov jo imul pushf mov nop or fistl ss add into mov pop dec lcall or aas jnp and int3 adc rolb sub sahf and add and inc lods mov pop pop add add jae inc ja add xchg dec fwait xchg adc push mov dec mov insl and test loopne add sbb inc cmp xor jl sbb mov ret (bad) ss pop adc (bad) and imul xor dec or push mov add loop sbb in xor mov push sub dec fs cmc scas nop fbstp imull ljmp std sbb add pop mov jl push xchg inc xchg push fwait pxor sbb pop dec push or sub dec andl adc js inc sub add sub xor mov pop sub mov adc (bad) jo mov dec pop cmp pop movb bound fsub les fidiv cmpsl pop adc mov mov ja jp pop mov subl pop pop jo daa xchg roll mov ja push xchg int3 mov in cmp roll sub repnz and (bad) push out mov xlat pop testb and test add adc andb cmpb out mov insb loopne adc mov adc ret mov lret cmp out push in stos mov add sbb sbb xor cltd lea add lcall push cmc push pushf or aam mov push fbstp dec dec add mov and popfw (bad) gs cs and and adc movsb ss and mov and daa jmp dec mov mov cmp je pop popf adc daa mov inc fidivrl popf in ja inc popa fucomip cmpb jne pop add add inc push sbb movsl addr16 inc cld lret int mov movsb sub pop je or enter cmp addl pop mov fisub jle stos inc iret movb ja loop shr jbe inc cmc cmp or out rorl dec jge sub test inc mov sbb push pusha cmpsb (bad) xor xchg (bad) adc pop cltd mov and lea adc push adc jae inc mov loope pop adc sbb push sti xchg add or mov lock jmp stos inc lar lret pushf lea fwait or add mov hlt das jne test add test xchg and jno outsl mov add outsl adc rclb test pop lahf pushf mov sbb or inc aas cmp mov mov mov loopne mov dec add sub imul daa sub (bad) clc shl lods inc repnz iret dec cmp mov test arpl nop dec mov pop mov addr16 add push aad test mov hlt loop dec xor or and clc outsb add (bad) cmp je and jmp mov or adc cmpsl pusha loopne push sbb mov push stos pop repnz sub pop dec add mov cmp mov adc stos imul push push push dec dec xlat pop sbbl jp imul add out lcall adc sbb xchg les loopne adcb adc (bad) jne pusha jae sbb pop xchg fadds or out cmp and out pop out add push and xor xadd pop or sub pushf pop jmp jnp aaa push popa call out cmpsl sub push pop pop aas add jno sub lock mov ret test jae mov fbld ret pusha add pop mov dec (bad) adc dec sbb ret and dec sbb dec jl sbb andl xchg push adc pop cld pop jb loope js mov mov sub xor lds cli in push sub pop add add sbb jne inc adc and cmp scas outsb adc mov or outsl in andb test push xchg xor pop push aas test scas or push xlat cmp inc mov mov ljmp (bad) adc scas cmp ffreep add sbb std mov mov xlat mov push xchg sbb jb adc nop push push xchg and jp jp daa mov in or dec loopne xchg sbb jb test dec dec jmp iret jo adcl mov in jns je adcb push cmp fwait (bad) and ret cmp push adc jg jl lods ret jno in out xchg push and or push pop stos adc or imul orl into or sbb fs hlt mov imul or adc sub xlat adc inc inc push xchg mov aas adc in cmp arpl call ljmp (bad) push jge movl inc pusha adc adc (bad) notb in mov movsb inc sbb mov or jmp xor sub and sub fs mov dec insb int3 cmp mov mov into jp out push sti and inc lea or test push movsl sahf and movsb push (bad) mov sbb movsb push and jge clc mov xchg inc clc cmp mov cwtl mov or inc xchg mov sbb aam fnstenv (bad) jmp jge mov mov cmp mov or inc aad in cmp jne loope push pop lea xchg or (bad) addb rcrb push or rep mov in ficomp inc push inc jg mov add mov add push movsl push aaa mulb sbb lret or cs (bad) mov sti sub or sub fild aas xor js and xchg mov or mov ja cmpsl sub push sub cmp lahf cmpsl movzwl mov inc pop imull testl outsl dec and jl pop and dec pop cmpsl xchg cmp or dec pop test sub mov jne (bad) adc push pusha jl mov sbb icebp xor inc cmp dec push jle popf push call add mov adc xchg mov clc movsl fdivp adc mov fnop xchg xchg dec dec fildll inc fdivrl pop insb je nop push inc cmp push icebp mov pop icebp cmp test repnz les inc pushf add subb lds adc push in push out dec (bad) outsb jmp inc lahf xor scas out insb ds jnp adc js and push addl fs mov and adc xor cmp rorb mov push fsub add adc mov or pusha xchg sbb mov inc sbb (bad) bnd jo cmp outsb loope (bad) sbb (bad) or inc psubsb jmp dec mov dec data16 inc out mov xlat mov outsb pcmpeqb enter inc repz jl les pop push std repnz mov sub out iret fucom push in cmc aad loope xchg cmpsb (bad) fs and adc stc aaa fs hlt push push pop add dec adc es adc sub incb adc pop inc jne mov push push ret add xchg aaa inc sub adc rorb push sbb adc sbb inc sbb sub add mov rorb fsubl and sbb inc into add xchg mov imull lcall cmp movsl pop out popa adc pop pop xor popa adc push xor or lea ficoml or fistpl mov call clc jns (bad) sub in adc js dec mov xchg lcall xor xchg inc fwait repnz dec and lds icebp xor xchg div adc jns aam movsl inc cmp sbb jmp xchg test cltd mov pop pop or aaa cmp xor fsubs cmp mull in mov add pop inc loopne loope punpcklwd dec mov dec pop loopne add les mov es aas add shll clc arpl and lods aad int3 bound mov xchg or mov sahf in in add dec lea or sub mov dec ret pop fs push sahf lcall mov add adc cmpsl mov (bad) test jecxz sar clc add sbb or lcall dec inc sub sub and (bad) sub sub push pop sbb cmp sub sub and loop mov xor sub mov movb and push je add or or sub push lcall enter add nop (bad) xlat adc pop mov pushl add ja loope adc add nop cli mov pop mov or pop (bad) rcll fldcw push mov jg loop inc loope repz mov mov pop (bad) add cmp pop dec dec jne jo inc call mov push lds mov jb push mov or adc push ret jbe popl dec fbstp push test or mov lret daa and mov cmp mov sarb sti sub flds mov orl cld insb add inc (bad) sub cmpsb lock and add int sbb cld mov or or pop push js sbb sbb cmpsb or mov popf adc xchg inc lock xor imul sub insb ljmp dec mov xor cmp pusha and xlat rorl pop das sub cmpsl fsubrl mov pop icebp and mov pop repnz mov inc fwait and idiv dec push pop push dec dec dec inc dec push add lock mov add or aaa aaa das sbb push or add dec adc add loop ret mov std xor decl adc mov sub pop adc sub pop insb sbb sbb jno jle jnp lods push jmp lcall pop stos xchg std mov das pusha daa or inc fdiv or pop lock or mov test and sahf repnz cli hlt xorb pop xchg sbb cmp lds (bad) cmc mov cli mov sbb test hlt mov div xor or xchg xor mov sbb ret cmp lcall xor or inc pushf lods add test fst jmp mov mov popa jge mul jns add scas xor add in sbb xchg or push test aaa or clc inc or adc rolb mov icebp (bad) ret xchg xchg aaa out loop or sub jo inc lea dec mov dec adc aaa test out fild test mov sub and lock xor inc sub jae sub nop jo pop push inc adc inc xlat add pop push les add bndldx and mulb rolb and sub or shlb add cs jb outsb adc mov jle push js in mov in ds je xor sbb push or dec fistpl ja daa cs sub nop xchg out cmpsl jge clc es pop lods push mov mov or cld mov or mov and insb xor insb add cwtl ds jl test inc movsb sub mov cmpsb js sub push dec sub cmp mov push lods loopne clc cmpsl test xor in fwait dec pop ds xchg add (bad) ja fsubrs dec sub xchg and adc leave inc sarl jns sub inc adc js dec add jo,pt cmp push andl jnp ret sub sub push hlt push (bad) jo fimul pop sub (bad) or cmp out pop sub and xor mov inc adc adc add sub xchg jbe,pn add les add pusha das test add add inc sub push in test lea sbb movl cmpsb add aaa dec add enter jl inc cmp cmp jo inc sbb add mov cmpb add pusha lock xchg in shrb daa cld xchg shrb popa pop xor push or push jnp lahf adc inc and jle sbb lds test mov fs (bad) jne rorl daa add adc in arpl arpl or repz xor xor ss pop pop sub pop fcoms test pop push sub test fadd sub imul notl cli sbb mov push lock nop enter pop or mov or lods or inc popa imul mov adc out lods sbb (bad) jae jns pusha or rcrb and into sarb cmp sbb add pop fsubl cmp andl mov inc int pop sbbl adc shrl dec movl adc shrb sub rclb loop movsb sti push mov dec addr16 fimul or lea add (bad) (bad) sti push xchg dec adc invd inc mov or xchg push mov sub shr dec push loope adc sub pop (bad) (bad) ljmp inc push inc xchg push decb out psubw int jb add daa test add add push nop je push iret or out (bad) jno xchg stos (bad) push add rclb int3 mov out pusha jnp unpcklps ja leave insb xchg addr16 push or test pop loopne mov or xchg adc loope add es pop je hlt mov cmp pushf (bad) test fiaddl ret into cld or xor or adc pop popf (bad) inc or or shll push mov dec add sbb mov or pop cmp cwtl adc insb push xor or out inc add or mov cwtl pop (bad) mov cs movsl aaa sub js gs pop rorb inc add lods jecxz push mov sbb add jl (bad) sub sbb push xchg adc inc pop jg or sarb or scas movl jmp jo test inc pop aaa add das add inc shll loopne scas pop add or inc or mov fadds in out mov push pop push pusha or xchg lods add scas out and outsb insl pop push xchg or les addr16 push adc gs imul or add push inc cwtl sub jno fs shrl push push loopne sarb jo test mov (bad) repz out sar and test in sbb ds mov (bad) adc and pop add fbld sub inc or popa or mov andps push cli mov add push add sarb add add add add push mov mov fstl pushl and sbb cmp mov inc mov jg icebp outsl xlat in (bad) in (bad) jmp ljmp jmp (bad) jg test in jecxz loop loope loopne fdivrp (bad) fdivr fisttpl test push fmuls aas push jbe sar sar sar iret call into dec dec dec scas repnz leave cmpsb cmp imul imul push adc sub mov imul outsb pusha adc test dec jo jnp out sbb inc push les movsb push iret sarl iret mov add jnp lock dec jb push aam xchg (bad) imul stc xor cmp mov lcall hlt jl pop fwait in sarl je jae push jne inc xor cmpsl cmp imul test out (bad) clc cmp push rclb sbb mov sarl ds pop cs les adc xchg ja push leave nop pop pop inc dec inc arpl inc mov out or push xchg mov inc xor inc out cmp lret rorl out or dec or pop add inc sub cwtl js cmp add (bad) mov aas incl mov inc cltd mov add pushf leave sbb pop sub or pop mov test aam or and dec sbb jnp xchg fbld xchg add fs or jg adc adc dec add xor adc xchg push jle inc mov xor adc xor jmp or daa test imul das push cmp push push pop out lods xorl inc inc or push inc xor (bad) in lds sbb or xchg inc push mov mov popa addr16 sub scas adc mov jg dec or mov les sub jl push or jbe addr16 add fcoml xorl pop adc cmp daa push push or cmp inc or outsb bound or jae jns test std xorb insb jmp xor sub daa enter xchg xchg popa add cmpsl ss xchg and gs outsb lcall add fwait or jmp jge pusha pop cmpsl sub lcall inc mov adc xor mov add lds or inc and jo aas loopne lcall dec add add adc adc or push ss test test xchg (bad) add add add add outsb xor jb mov andb add add jg or add mov mov sub or shlb mov mov into sbb adc mov mov mov test incl add push mov xor cmp in sti sbb repnz incl sar push (bad) inc inc inc inc inc outsl xchg aam mov (bad) mov test ret mov test sub pushl push dec repz jo in lahf and lcall cmp cld mov mov dec stos data16 stos push enter lods lahf cmpsb jnp pusha xchg mov leave call divl orb push mov (bad) (bad) aam iret shrl mov cwtl int3 sahf out divl cmpsb push fsub in hlt cmpsl stc fidivr mov push mov out popf loope js push bound repz jns xchg clc mov insb ds adc cmp stos mov mov xchg out (bad) cmpsl fdivrp out fldenv test push cmpsb push mov push insb mov cmpsb shrb inc movsl out mov push pushf push sub in jnp test cmp push xor xchg je inc idivb cmpsb fdivrs test loopne push mov sahf mov mov lret into inc pop and mov sahf cmp inc or dec sbb ss or sbbl loope adc loopne jg iret push adc into inc push icebp call push addl pop sbb xchg push pushf inc sbb and jo lahf adc inc add sbb test fdivs pop add or push aas pop sub outsl xlat mov or les cwtl push mov roll sbb sub fwait (bad) xchg mov (bad) mov cmp mov aam jl int sar shll or and jne add adc cwtl sub pop (bad) cmp push mov pop and leave inc sbb les and xor adc pop mov iret mov xchg fmull loopne dec das dec jo dec or fs sbb adc push fs sbb inc add fs jmp jb mov pop cmpsb movb inc dec push jns out pop data16 (bad) loop lahf out cmpsl mov in adc fsubrl je xchg cmp mov add js js add inc jecxz adc (bad) mov mov cs repnz outsb fadds add inc out push and pop mov sahf add jle or lahf sub inc add add movsl cmp (bad) lcall pushf push add insl sbb lods inc popf sbb lcall aam ss cmp testb xor and jbe add sbb icebp lea add enter xchg and push inc dec and inc movl jae xchg mov test sub xlat ret or lret test and clc pusha pop pop int3 add dec sbb cltd testb jne xor and mov cmp jne andl sub xchg adc adc pop sbb (bad) sbb adc mov cli imul mov (bad) icebp push fs daa and ret lock push fiadd or int3 shll xchg xchg daa push dec mov push push inc sbb inc daa push jo jo jo daa or inc insb popa mov mov clts inc xchg outsl fisttpl cmp adcb adc jo imul xchg mov dec mov movl repnz sub stos add addb fdivs xchg out adc jo bound adc pop pop add lods xlat mov cmpsb and stos or jmp inc lret add add cmpsl xchg or mov enter mov (bad) pushf adc ds adc sbb xor push dec xchg adc mov inc (bad) mov lcall cmp out sub or call push mov add mov mov inc pushf cmpsl lcall stos icebp pusha cmp mov movsb adc (bad) mov movsb aaa insb (bad) adc jecxz cmpsl inc clc negb cmp jl push sbb jne add sbb test adc or and push addr16 mov addb jp pop out lcall lock test and or aaa xchg enter pop xor sub mov int jmp pop pop xchg xlat push scas mov dec jne ja scas sub jmp mov es jno or mov or sub add insb flds push dec gs xchg and jg dec (bad) xor or adc adc dec (bad) xor sbb and (bad) xor shll sub sub xchg inc sub push push or or pop xor enter push js and inc rcll popa loop xchg inc jbe sbb pop jbe test and rorb xchg jne dec sbb (bad) jg je sub or loopne in ret sub push sub push outsb mov (bad) mov inc add mov (bad) push into pop pushf bound inc push mov bound inc in loop sbb cmp xchg dec sub (bad) adc mov or adc xchg gs or xchg jg insl sub sti pop cmp movaps push pop leave fdivr mov (bad) jmp or push inc sbb dec sbb inc add or or loope mov adc in test cmp loope mov push and add and inc call add shrb mov inc sub push fdivrs (bad) xchg call sahf and add das inc movsb xchg pop xchg les push jp and inc or cld dec (bad) cmp pop js mov (bad) mov or sbb jmp inc mov or add adc test cmp xchg or mov push push xor lret sbb add jge iret cmpsb push mov push pop mov icebp lcall push jnp sub push pop pop cmp or inc inc repz jno push adc pop fmuls or xchg add cmp sbb and push mov push pop sar or sub sub mov mov push ja adc cmp dec or adc loopne mov shll xchg jb into neg xchg xchg pusha inc inc jns ljmp fisttpl push or daa fimull pop mov dec imul fisttpl ja mov inc mov and pushl add push hlt imulb mov sarl jb sbb xchg movb cmp movsb xor lcall push adc movsb dec add mov fcomps negl lods out iret and jne push ror mov or mov test sti insb in js aas sub nop jp push mull mov dec in and jge cmp xchg rolb xchg lock sbb mov in lods or jmp push mov rcr sbb dec add clc lods inc xor pop mov or je cld mov jae adc push sub (bad) xor dec adc xchg pop movsl icebp lea dec test xchg push mov jl inc cli jmp inc in sub add (bad) subb and jnp cmp je jl adc into fildl mov cwtl pusha cmp adc in xor lods loopne in lea test jnp js ret jo jge aas lock or xchg test xor cmpl jecxz sahf sub fisttp test or iret xor ja jns pusha pop (bad) leave add jne mov sbb lret push or sub jnp test sub cmpb mov xor fs push or xor cmp lock xor mov inc inc push sub ljmp cmpsb sbb adc mov daa (bad) lcall mull fmuls sbb inc or fnstcw cld add jne or jp or iret faddp adc jl movsb jmp mov call push sbb dec popf xchg mov cmp daa adc pop and (bad) cmp les adc push mov insb inc subb sarb test sbb test xchg cli pop pop in or fsubrp lcall push inc lods add push sub xchg add imul pop xchg sbb mov pop sub jb cmp ds jne pop pop jl inc mov xchg jmp dec sub or jecxz push inc test inc jbe pop inc and or je jmp xchg movsl test sub jecxz cli dec in push add in aam or out cmc js test hlt sub sub mov pop fidivrl push das fdivs test jb adc sbb push xchg push fs into scas pop or inc cmp aas xchg inc jo xchg fidiv cmpb js icebp div shrl clc pop pop adc cmp cmc js jbe add je out ds sub leave cmp pusha (bad) push cmp aad cwtl out or inc dec sbbb add repz xchg clc ret shrb out dec test (bad) push jge mov push fiaddl sub add or fnop mov cmpsl es inc inc jp adcl aad xor or inc movb add sbb add xor sti cmp je movsb imul push or jl mov sub xor sbbb jb mov adc mov test lcall ds sbb adc lods and or fs out mov mov mov cmovae addl or pusha xor inc push and (bad) or (bad) std pop adc xor mov shrb inc jmp ret cmp (bad) pop jmp pop cmp ret repz or sub stos add loopne ja aam push push cmp out pop xchg movsb add mov and (bad) ficom inc pop sbb pop fdivs mov lret push jmp push jge or ret dec out mov lea cmp xor sub in add xor xor sub mov js das shrb or jp iret jge mov pop adc mov int3 pop out push inc sub aaa les fsubrs pop xor inc aaa cmp xor or or js or xchg scas movsb cmp adc cmp fistpl jg push fldt stc fstpl nop popf cmp inc and out jbe test fsubr inc ss jns sub imul fistl sub rcr hlt in add cmpsb xlat xchg pop dec adc or pop sub or or repnz pop adc lret jo inc (bad) imul das loopne and pop pavgb repnz push lods and inc stos push pusha and mov xchg mov fwait ljmp stos and pop or inc outsb jecxz jo and add xchg jecxz sbb dec pop jle les sbb test addr16 cmp test xor ja xchg in loop stc pop cmpl lods ret repnz dec sarb or push call dec adc shlb int3 xor xor mov mov inc push call (bad) mov push dec sub add in fstl inc inc add pop jno dec add out push sbb ret jmp stc and cmp xor cmp adc daa int3 js or dec aaa and cmp add scas mov repz es aas movsb lret push pop or adc aas add ds fcmovnb inc incb sub in or (bad) jmp cmpsl sbb cmpb lahf nop outsl movsl cmpsb das push movb or sbb rcrl inc mov sbb rclb ret lock jp inc insb mov loopne cmc sub cmp inc ss xor adc sub or cli jmp and pushf adc sub je ss dec push ret movsb enter inc inc dec mov lods or cs push pop outsl je xchg mov adc loopne push les pop sub xchg push clc sub add cmp (bad) fldenv icebp or adc pop gs jecxz push xlat sub jae pop fs mov add jo add sub nop (bad) xchg or js cs ljmp add mov mov xchg bound pop jb mov or push lret and test jo push mov push and xor mov notb (bad) data16 mov mov xor imul mov jo cmpsb inc add daa dec mov fwait fwait (bad) jo dec mov repz or lds inc mov leave faddp jno xchg into (bad) out rclb or ja and mov fdiv push enter hlt js sbb test mov xchg lea fbld add out nop pop and add pop es add add add adc pop push (bad) iret dec mov daa lock push or inc test iret lock imul dec rclb insb test sub inc shrb xchg xchg je jne jnp loopne,pn popa loopne shr jmp ja and adc xchg lea mov dec dec cmp mov cmpb hlt bnd push adc lret push rorl push js xchg or mov outsl pop mov std jl outsb lret inc repz pop xchg add mov add data16 pop lea lret (bad) mov fistpll pop add sarl mov imul repz outsl stos das sbb or out or inc lock shrl and pusha jmp cmp popa insl jecxz sub flds (bad) jns (bad) mov leave cmpsb test sbb aaa or andl xchg push pop pop pop inc and jbe xor xor mov adc dec rorl adc pop or pop and or ljmp dec out pop jmp cmp inc jnp dec or or adc xor (bad) or cmp push mov xchg xchg or adc je mov jbe cmp cmp dec pop je cmp push (bad) popa enter adc movsb push sbb sbb (bad) subl inc dec in adc inc add ret cmp dec jbe subb out jl das and xor ljmp sbb mov leave xor pop daa or aaa xchg hlt inc mov adc andb jo jle and pusha push pusha and in test or aad out testl outsl add cltd and jecxz pusha xor jmp dec add add add dec cld fs and lcall (bad) je mov jecxz push mov add les jl sbbb outsl or sbb push addr16 mov push cmp addr16 sbb jne xchg sti mov add inc pop mov lods mov and (bad) push push nop add nop addb fistpl jg clts pop xor add mov inc cmp testl adc add fstpt iret movsl mov and in jnp or cmp cmp mov push add jo lods fwait or push jecxz add xor xor movsb mov nop addr16 or mov xor pop cmp sbb and je mov mov push push pop dec (bad) out jae mov push ret sbb inc mov sbb sub jmp dec loope cmpsb sbb in (bad) movl mov push pop pop pop sbb lods add add jp push jbe sti jmp (bad) xor imul and fwait jo sbb (bad) pmuludq scas clc ja push aaa lods mov xor (bad) push cmp imul mov mov mov cmp add jmp ss or insb xor sbb movsb sub push test xchg scas lock test inc and (bad) lcall cmovge mov cmp (bad) xor inc nop and ljmp cltd les mov inc into andb andb insb xlat daa push clc movsl inc dec cmp lock jnp,pt jmp (bad) add pop mov dec daa sub jnp push aaa push cmpsb lds dec dec inc call sbb push add je push lock cmp or clc outsl or test adc sbb push orl and test incl push cmp daa sbb push mov insb sbb and rorl out shl inc pop loope lahf pushf sub cli cs jo ds lret or push xor push cli adc cmpl xchg clc or fs fisttpl push ljmp aaa xlat dec loope outsb (bad) push arpl cmp xchg inc push or in in pop or adc cmp test dec inc and jle pop sahf inc (bad) jne push inc loopne and cmp jne sub pushf xchg push adc and test mov pop pop clc leave mov xor jl popa loopne fbstp or cmpl jo lods pop (bad) push je add insl xor xchg shlb pop out ret ljmp and and add push inc dec push adc inc push inc test pusha xchg dec inc (bad) cmp rcl or popa sbb dec cmp or add jb ret pop inc jbe jnp jne rcl sbb or fstl nop outsb adc inc jo xor mov inc inc mov or adc dec (bad) lret or fmul or dec xlat sbb mov push stos test adcb fadds inc test mov pop or in mov ret cmp nop test cmp es cmp sub sahf xchg (bad) mov mov push adc fsubrs mov movsb test add xchg sub add imul cli push and call xchg jg cmp test daa je xor push pop (bad) xchg push sbb inc dec das pop add xor das cs ret inc loopne mov inc rorl cld adc push jbe inc lret inc dec add dec push xchg dec add es xchg push inc or cld cmpsb mov in outsb or dec add cwtl mov cmp cltd pop sub jnp cmp and cmp rolb adc mov and sub pop (bad) push sub sub push aam push mov fdivr clc dec and mov bound mov incl add cli cmp mov es adc outsb adc imul or int3 aam or (bad) sub push cmp add sahf mov sub mull test test test cmp aaa mov or mov jle lods lret outsb dec add add mov sbb dec fsubs jmp in and inc sub ljmp push sub adc and pop jge insb es lea adc dec sbb out mov (bad) jnp cmpsb and cs aam fwait or daa inc mov xchg sub (bad) fsub adc pop xor xchg lret mov loop push xor cwtl or sub adc push js inc jnp pop pop fiadd push or xchg adc push (bad) push xchg cmpsb outsl repnz mov add pop mov daa pop in push mov sub push inc and and call mov xchg mov shrl xchg es sub mov enter icebp mov mov cmpsb test mov xor and and fcoms mov daa pusha (bad) push popf fsubs or or and es sub cmp je sbb sahf jg add push in adc push push sub call imulb xor inc add or jmp sbb dec mov movsb push push xor add pop lcall xor daa test mov mov jl mov nop add pop ret ja ss lcall xor or adc dec lret rcl adc pop aas push jo insl and andl pop (bad) sarb pop push clc loop leave add adc adc inc or (bad) rcrb mov popf movsl es add inc mov in je mov push jae mov push mov inc stos push ret testb je andb adc xchg jmp mov mov clc lock add pop inc dec sbb mov ja cmc insb in out mov loop adc test adc or mov mov push jmp or push xor test movsl sbb aas sub cmp (bad) dec mov mov add aam cmpsl mov in sbb xor push inc pop outsl popa xchg paddb pop push je pushf int push es fwait push xor mov inc sub aas xlat and scas adc je mov push mov pop sti nop fist mov lods nop rol push mov lcall rol pusha dec pop mov jo adc enter pop fisttpll add repnz imul xchg and pushf mov inc mov dec dec mov cmp dec mov jg popa or adc sub mov jo and (bad) outsb pop je mov movb ja movsl lods dec andl mov cld xchg xchg and bound jmp adc addl daa push add push or mov rclb daa cs je mov lea call push aas or nop cltd mov mov (bad) mov dec and je mov fwait push lock idivb push jo mov (bad) and or jb xchg xchg pop pop pop or xchg dec dec inc pusha pusha cmp data16 data16 lock enter adc cmp xchg sub sbb ja cmp clc cmp sbb push add (bad) pusha push out or lahf push sub es sbb mov push movsl sbb cs mov xor fwait insb popa mov add das add or sti roll xlat insl mov je cmp jnp mov or inc cwtl les (bad) not adc pop sbb ss push data16 pop out inc and add pop adc imul cmp dec push and push (bad) out addb fcompl push jb mov icebp adc rorl cmp add dec inc pop push pop dec cmp clc cmp inc push inc sbb or sub mov xchg enter pop les xor and sbb clc mov ja clc cmp imul jmp push cmpsl mov dec jecxz dec cli roll xchg mov mov sub insl cmpl adc push pop ja pusha add outsb or aam pop insb jg adc sbb (bad) cmove adc inc leave jg (bad) mov je incb inc pop mov inc jo push pusha dec les sbb gs jb mov mov rcr ret sti push pop jne mov pop pop cmpsb pop shll ret lahf xchg pop inc mov inc push pop cld add push popa inc mov sbb (bad) push cltd mov cmp mov fcmovb out addr16 dec fldenv mov vmread push mov mov or dec pop das add add jb inc cmpsl mov ret rcl lahf push mov or fwait rorb out (bad) in pop cmp push pop dec pop add outsl ret lea adc jne inc lods pop inc dec pushf push js cmp mov xchg movsl lods hlt ds sti add xor mov jle xorb add inc cmpsb mov push sbb js or add sub sti sub cmpsl sub addl push inc cmp test or fs push push hlt mov sbbl addr16 aaa adc stos pop xchg pop xchg mov add adc adc mov mov mov cmpsb sbb sbb xchg mov hlt fimull push mov sub insl test int3 test mov decl xchg jb or dec and inc or loope jnp adc mov jl movsb rcll ljmp pop fistl pop push fldl inc fsts mov add outsb pop (bad) aas icebp or push inc mov jmp lcall adc (bad) and push push insb push mov cld mov mov inc je lea cmp and mov or sbb lret add add rclb ret fsubrs sbb (bad) pop (bad) lret cmpsb and sbb pop fidivl cmp call jne add pop jo lret push sbb (bad) sbb shr js cmp push sahf std and ficomp lea (bad) mov xor fsub add jmp sub mov test incb mov xlat inc test addr16 rcrb cwtl add or xchg sub push or xchg and (bad) inc inc mov mov jbe jl xchg xchg pop cmpsb nop dec dec dec cwtl mov test cmp testb cmp mov pop loopne andl or inc add push inc push sbb repnz dec pop mov leave sti pop sbb push jne sub shr (bad) sub cmp push (bad) dec imull sbb cmp xchg imul sub dec in jge xchg das in or inc in inc dec jmp push xor add fs add and daa dec cmp push (bad) leave je scas pop pop enter add mov loopne cli push outsl or sbb shlb jbe loope js adc in xor cmp add loopne jecxz sub jb mov sbb push push pop js nop xchg jmp ss pop pop adc or les ss inc sbb (bad) in sub sbb or sbb pusha xor xchg sbb dec loopne and cmp test int cmp fsubs je pop nop jo pop adc add ds mov cmp rorb cmp mov inc clc in imul aas ret (bad) jne xor xor push pop int3 sbb mov jne cli pop dec inc pop jle push push or push dec (bad) jmp shll mov adc inc les cmpsl sarl mov mov es addb inc bound call lret and sbb jp push add xchg jmp lock push adc xlat add inc pop adc js leave std mov push imul push data16 mov and sub dec xchg push dec movsb or mov add push jnp iret sbb push ret loopne hlt les pusha fdivr xor flds cmp sbb test or ror (bad) loope pusha adcl and or (bad) mov inc add ret rorl ja sub popf les or and fs push js add movsl iret call in inc pop gs push pop movsb adc or insb (bad) pop es hlt mov and and jae xchg mov add add btr cltd xor and push push inc pop fs mov and aas mov bound xorl dec cmp push (bad) sbb jp mov push inc outsl rcr jmp add xor push add adc or add cmp mov mov sub mov sbb add movb jl adc add mov sub or pushf pop or hlt xor fnstsw cmp into xchg fstpt sbb testl shrb push jle fnstcw in mov pop or jns sub pop jmp sub push add or push and rcl cmpsb adc jno add push movsb mov cmp sbb addr16 imul mov dec push lods push movsl sbb pop inc cmpb nop dec rcll jae sbb mov jmp add stc ds fiaddl or imul imul inc sub dec mov jne dec push xchg pop or call jecxz nop push mov ss and mov cmp jo iret js mov inc aam fstps mov mov pop loop mov cmp inc ja cmp sbb pop cld jle xchg pushf jne fildl jbe stos jb (bad) xor sbb sub ljmp dec mov cld sub (bad) stc or shrl sbb cmp jno cmc cs push push jl dec pop pop sahf and ds in sub fistpll push add jle push (bad) jmp js xchg shr andb aas enter popa les inc sbb push pop inc out ljmp std push dec je inc hlt pop hlt js lcall lock add push pusha and iret test (bad) in ja pop adc jns test je test add jmp add mov mov iret movb and dec roll cmp push in aas mov (bad) fstps xor outsb pop xchg and pop pop clc xchg mov imul sti push inc push mov xor aas aad jle mov aaa ljmp sarb loop dec cmp mov adc sub aad or adc dec cmp mov sub add xor or lods pop aas test bound scas adc adc js add adc rcrl cmp adc ss sub popf push arpl es sub sub sub (bad) and push dec jp leave lea xchg xchg das jne push mov adc movsl and xor loopne pop testb cmpw pop movsl mov das loopne inc out mov mov pop dec out mov test dec inc aam and cmp dec inc push test or shrl pop adc fstps adc add inc pusha mov and lret nop lret mov (bad) icebp pop adc pop je xchg fidivrl dec and sarl or in dec inc mov mov xlat add rolb inc xchg sbb je addr16 movb inc push add jl inc mov adc call adc popf xchg test dec sub (bad) lock or or mov lcall test ret pop ret roll (bad) mov outsl or mov mov jbe push xor mov add dec lahf sub fisubrl je adcb mov leave movsl (bad) fnop add mov fs cmpl sub pop shll jp or cmp push ret pop aam push test or and in mov sub adc imul call pop dec mov sbb push sbb jp push cs aam mov fadds inc xor mov aam mov stos jmp mov aam out outsl sbb movl cmp or xchg push mov mov lcall insb movsb add push add mov and and pop jg (bad) enter movb mov xchg cltd or loope pop pop ret mov outsl in or decl jecxz jno jle je push lock fiaddl dec cwtl push or adc adc in bnd jle adc or imul inc jl pushf es je mov mov push add sbb inc sbb mov and add jne add lods or cld je adc push xor push inc loop andl inc stos mov arpl insb and std adc inc enter jo arpl mov popa pusha and or dec insb push jo mov push mov mov inc mov mov add loop add adc push call push aad loope pop pop inc mov or or and pop xor scas lcall mov js loopne xor adc daa push sbb sbb xlat mov push in jno adc nop gs push bound lods test add xlat (bad) insb ret inc xchg orl mov insb pop mov pop cmp adc lock dec daa pop and or ror pop add movsb out dec mov mov nop fisubr je sbb xor ret push cmp movsb mov insl xor inc sub pop test xor ds xchg dec (bad) je dec push push or lock sub sub insl rcll adc cwtl hlt or dec dec push mov add push aam ds adc jle jp mov cmp daa sub daa outsl cld mov adc or rcl xchg adc pop pop push add push xor and sbb or and fimull jmp stos xor jae push xchg mov je adc idivb loop and int3 push lock fstl xchg hlt stos and sub das pusha gs push push std and scas cmpl or aas ror ljmp xchg mov adc data16 lret mov adc out adc test clc or inc arpl and sbb cmp (bad) rorb sub mov mov or mov or lahf and pop leave inc jb cmp jb pop and or xor fs or cmp (bad) jb and inc divb push aaa or es or cltd (bad) arpl inc (bad) incb fldl popf sbb xor outsb and add or icebp andps mov mov movl in or xor lahf and and inc gs add fcompl and ss adc inc and xchg add sbb das enter dec rcrb mov mov mov sub gs inc jg std adc stos pop jns mov add insl cmp xchg stos pusha jecxz add add and repz dec or in sub sub jns rclb sbb sbb add xor fwait outsb xchg (bad) pop inc pop (bad) mov adc je add jmp bnd jnp jmp in aam int3 push cmp push sbb rol push inc adcb dec shll push push dec fcoml aam xor fadd inc bound call ret mov jecxz jmp sbb inc dec (bad) add xchg or daa adc pop out (bad) (bad) lock xchg and daa push sbb imul cmp and pop inc mov push xchg scas aaa aam fs push xor push inc pop mov lret les pop mov jmp frstor adc shll lahf xor pop nop bound sbb movsl sbb mov addb out cmp or jne or xor jnp sbbl and jnp inc sbb (bad) push mov dec popa addb cli push inc std or es push rol pop cmp adc popa cmp xor xor lea adc pop add adc insb jge cmc pop xor inc xor pop wbinvd push rdpmc xchg or imul jns add aam xor push push popf add addl jecxz jo jo aaa icebp pop sarl (bad) mov jge and or shlb add orl or clc or lods loopne rcrb cmp mov pusha mov bound and lret mov and leave mov je mov pop pop mov xchg and or movb xor aam xchg xchg (bad) daa cmp inc repz or neg call mov mov leave mov cwtl rorb push fsubs mov pop pop nop divb (bad) jo or inc push xor and lods dec and pushf mov and dec pop or hlt mov or jmp nop jo add push mov xor lds jmp (bad) jbe jbe (bad) pop jge enter mov add outsl sbb mov sbb lods push inc out pop and dec jnp sbb imul dec add cmp add fs fwait pop mov push cmp xor xor (bad) xor (bad) push out pop nop mov mov out fildll ja jmp push pop adc data16 and mov sbb lahf shr inc add (bad) mov pop inc add cmp setle cmp movsb imul or adc dec pop rorb xor imul mov je rcl pop xchg jno dec pop loop sub mov sti lods cmp int (bad) mov nop negl mov xchg stos mov push adc adc (bad) movsl in dec adc pop aad gs shlb sahf dec cmp scas test aaa pop cmp inc test imul out sub inc adc (bad) (bad) fistpll sub rcrb mov shr aaa jp xchg and sbb leave lcall or pop pop std or xchg in push orl inc lock add mov enter popf movb push jle add bound dec out add mov push jne add bound nop mov add aaa jl push lods dec jl xchg sub lods daa mov xchg pop or add (bad) mov pusha or pop add pop add bound decb push ja fiaddl push push sbb (bad) mov flds daa pop jns xor arpl insb add jle sub lods or arpl in jmp xor add jmp sbb mov jmp push cmp call xor mov push adc test mov in cmp paddusw sbb in lods add fs movsb cmp jns cs ss cli add xchg push popf out sahf sub push bound or jo sub inc xchg insb adc (bad) mov inc cmp sbb add pop orl jb hlt pop adc jp lahf (bad) and xchg and xchg lret sub xor jnp sbb cmp jne dec ret hlt cltd shr (bad) xor clc sahf adc jle xor loop mov add and adc or lock daa xchg dec or dec push cmp dec bound add and popa inc jge adc sbb sub dec je int3 sarl iret ret ljmp add inc setno mov mov jg and jle (bad) int3 insb pop pop cmpsl jne repnz mov test pop daa xchg js dec cmp push and (bad) fcomps inc fcomps sbb mov jne push testl test cmpps mov (bad) addr16 lock sub mov (bad) mov add cmp movsl pmulhw sub pop xchg jl,pn xchg out xchg mov inc movsl pop aas adcl ficompl adc add sbb push adc inc cltd mov lret (bad) cmovbe testl lock iret stos inc aam fbstp jbe gs pusha fxrstor dec mov push jnp dec shll ljmp pop (bad) pusha push out lods call pop incw std inc in push jne push (bad) push or or xor aad xchg in test sbb inc bound jns fdivs and pop cmc pop imul xor into pop inc scas lret dec sub fistp (bad) ss mov cmpsl shrl xor (bad) add pop hlt test inc dec js sub aaa pop sbb mov pop nop lods test jecxz imul stos test cltd aas adc inc jle sub mov out ljmp inc inc cmp (bad) mov add pop insl jbe mov adc fcmove lock sub mov push lret out ficom inc pop xor and jl xor (bad) ret push dec mov rolb jne push dec movsl rcrb add dec cld lret clc int out add (bad) lcall imul inc sub xchg jmp les mov pop orl test inc popl adc add aam add and push sub add arpl std insb and jne push das (bad) leave aaa adc sbb (bad) sbb adc push or aas sbb or dec ss jnp mov popa sti mov aas pop mov adc jmp lds dec aas nopl sub xchg fidivrl hlt sub sub mov rclb scas and xor adc cli adc idivl adc sub fildl jnp jns imul jno sti je add sbb jg or mov sarl xor xor xchg into mov sbb add sti push push add or adc ja jb mov pop movsb mov xor mov xor daa sub xchg push pop and fcomp pop cmpsb cmp fucomp pop mov and pop jp ret enter es outsl fbstp cmp js orl and nop cmpsl cmp ret or fcmovb push sub mov leave push rolb dec or jnp inc jne mov add push lock pusha orb subb je orl inc das imul clc in lods call movsb stos imul cmp or lcall or xor and adc nop je add or mov aad push adc test inc inc mov push xor sbb jae push push dec mov and test fmul xchg call and (bad) sti cwtl xchg nop aam call mov push sbb add and jmp iret sbb test jnp xor lea dec test push out insl (bad) loope or pop jae pushf mov fs jno inc cmp es xchg add ds mov out fnstenv inc push adc (bad) (bad) mov push mov rol outsl cwtl imul orl (bad) daa fsub pushf mov jnp push sbb and sub nopl mov add or xchg adc movsb test sbb outsb and add mov rclb and adc and inc loope popf in fwait inc fsubl push fistpl push and pop and push les pusha xchg sbb pop mov (bad) rcrb scas and and roll add gs lcall dec xchg cli sbb dec jl or inc and cmp fadd js sub jnp jmp jb lea mov mov dec and cmp aaa loop out pop sub cmp push pusha insl mov xor mov popa jne loopne or dec xchg and or and pop icebp or cmp (bad) bnd mov lea jge lock int3 add das movl rorb pop fistp lock mov call fs jnp and (bad) sub xlat imul fsubs add movsl cwtl push mov push push and rorl int3 jmp (bad) std fwait xchg dec sub mov loopne (bad) jne pop repnz xchg xchg ss sbb shrb fdiv cli rcrb pop mov lds jecxz addr16 sbb adc or sub test into test mov inc cmpsl rorb subl push push int mov enter ja nop xchg icebp test push mov das outsl je push xchg mov rcrl sbb pop js mov loop ljmp sbb repnz xor inc loopne repnz xchg pop dec mov or jne int3 ret insb pop adc nop pop cmc inc or xor push or push or add dec lahf mov lds je mov mov pusha adc addr16 dec mov mov fwait push sub dec rolb or sbb dec push mov movsl xor mov dec mov mov jmp je sub lock or (bad) nop imul sbb js mov je aad std sbb push arpl inc mov push jl loop ret mov jl nop pusha test jno mov pop push lods in mov data16 inc daa add inc popa icebp fiadd mov sub ja je adc rorb arpl pop xchg push loope or sti es and xchg add es dec dec clc aaa push ret nop add into xchg adc xchg shr lea push pushl add js inc add mov and lcall sub cmp xor pop popa lahf ja test dec es inc mov leave sbb dec cs push cltd lock (bad) aaa mov repz dec mov cmpl pop pop lea jne push shll dec cmpl loop push es xor sub popa daa insl cwtl ljmp jns cwtl pop gs cmp xchg pop xor mov (bad) pop xor clc xchg xchg rcrb out inc or outsl test sbb mov or lds ret push outsl nop scas pop push cmp sbb ret daa push cmp mov shr adc je push sub push pop lret test xchg add (bad) aad imul popl or test jno jg push and imulb xor inc and inc adc push xor (bad) loopne add movsl mov mov test push fisub fwait ljmp inc dec or adc dec sbb cmp and push fiadd mov fwait (bad) (bad) jle and inc ss cmp jne mov test int3 dec int xlat clc xchg mov test fnop lock rcll into jle shr das jb,pn add mov adc xchg imul mov ss into pop inc imul mov imul clc outsb (bad) leave xor jge cmp sub jae pop test pop rcll pop (bad) lea or jne cmpsl stos insb jecxz add (bad) aaa add lcall sbb xor adc push sbb mov inc add pop xchg inc insb jmp xchg insb (bad) jmp xor addl roll jo sub inc mov mov pusha mov pushf aaa hlt add xchg jne popf pop lahf push inc test or call addr16 xor inc push lods sbb inc xor adc mov je loopne xchg insb scas adc inc lcall push xchg sarl sub pop xchg jne out dec xorb stc xchg out jne (bad) cwtl movl adc stos adc loopne ljmp or jo mov subb aad and ret pop (bad) fisttp pandn or add xchg or lea mov add pop mov inc sbb (bad) adc sbb or or or popa lods pop push fiadd xor pop aam sub push jbe fs inc pop pop and lsl mov xchg pushaw orb dec mov jo movsb fcomps insl inc cmpsl in or lret dec shrl jge push sbb fldenv mov mov pop or popa xchg imul or pop xchg adc mov sbbl fadds dec push rcl dec sbb pop aas jno or lret in push xchg test or out cvtps2pd stos add in mov xorb cpuid xchg mov (bad) jmp dec xchg daa (bad) popa test mov inc dec sarl add sbb pop or loopne push cmpsb push movsb mov cld mov das sbb mov icebp pop cmp add xor jp xor lea scas lock cs rolb ss jo jge jecxz or dec rol mov js icebp stos pop mov rolb sbb mov sbb mov adc sbb push push sbbl jecxz push dec mov sbb inc cld lahf cmp imul test or sbb and cltd push sub dec test add sub pop aaa lds jo inc aas push (bad) sbb dec add dec sahf jb sub cmp outsl sbb jno int iret roll sbb cmp sbb arpl inc aaa dec arpl push stos sbb and test sbb dec (bad) mov movsb dec dec es pop daa pusha (bad) inc add xor cmp push jg xchg in dec push daa push and push jb xor inc out push mov outsl adc ss pushl xor jne scas push insb or sbb add xchg and add jl imul push adc mov gs cmp loope pop ror (bad) mov push or sbb jecxz arpl fs pusha test inc add seto loopne sbb imul rclb jo pushf out stos adc outsb cmp arpl pushf mov adc add inc mov daa dec adc push mov sbb adc push adc in shrl push orl or cmp insl rol inc test add out repz inc mov aaa aas cmp xor jbe enter (bad) jno xor repnz mov mov pushw dec sbb aam add xor sbb sbb dec stos into mov cmp sub xor xchg jnp pop movswl sbb jg sbb jle add ss pop xlat add inc jl (bad) push push xor or repnz loopne daa xchg int3 mov dec cmp xchg scas xor xor out add repnz xchg mov dec ret cmpl cltd add push pop and in outsb adc bound lods mov retw scas je cltd push jbe jp cmp test dec xchg mov push jbe adc jo sti push lahf jnp add cmp mov or adc jne mov xlat rcrl test andl adc andl or dec or add inc sbb inc ja loopne dec dec shrl xor addr16 sahf mov (bad) lret xchg dec int3 enter (bad) cmp (bad) sub or lods into mov and mov cmp lcall out in pop shlb jne sbb ds mov adc sub push and lods mov ds ret cmp lea pop addl sbb sbb repz push hlt jmp (bad) adc cmp icebp loopne shlb xor js xchg lods cmc sbb hlt (bad) xor inc sub sub add cmpsb sbb mov notb iret dec test movsb jle addr16 mov fs jmp push xchg or add test (bad) push mov sub scas nop nop into in sarb popf lret stos lds mov push fild cmp cmc add (bad) das cmp jl xor mov adc daa adc mov bound mov xchg adc xchg add dec dec loope roll andl pusha or sbb cmpsl cmp mov psrad sub jle test cs dec movsb pop push imul mov cmp or sub outsb icebp sbb arpl xor mov cmpsl adc dec sahf dec and gs adc test js cmp sahf hlt inc sub or mov ftst mov ja cmp sub rcl add xor push pop push adc add cmp nop mov or xchg inc mov push iret bound pop sub sbb sbb sti pop cmc push js sbb enter movsb dec mov or icebp or mov orb dec cmp add pop ret loop dec adc imul mov cs ja out popa call push push inc fstps add dec inc jg push fcomps nop xchg shl and (bad) mov jl in sbb cmc push mov mov adc imul xchg ljmp push test pop or pop test jo pop inc push jmpw add push iret or call lcall xchg or cmp push sub add loopne push setle fwait pusha sub lea iret push adc aam mov aaa nop xor or inc sbbb lods sbb add mov arpl push xor sbbl cwtl add pop icebp push and dec ja add jmp mov dec add adc push push mov push std inc add pop dec dec push sbb mov imul pop out sbb lock and shlb sub or aaa lcall bound or cmp cmp fnstcw pop inc pusha jno fcoml cmp sbb mov or adc jne stos lods cmp push mov loope (bad) pop jae retw loopne fimul pushf mov sub out data16 pop pop shll test and and ret mov jo xor xchg test jle jle jno shr xor pcmpgtw jne pop mov mov hlt jp out arpl xor cli sbb and js std push pop subb fmulp adc lea xorb aas sub cmc or andb js pop mov jmp iret or push cmp (bad) ficompl das es xor sarl and pop enter and arpl pop xchg jmp dec cmp inc movsb rcll test sub add sti inc sbb pop (bad) or fyl2x jg mov xor popf pinsrw push mov movsl mov dec rep jecxz sbb jle pop mov inc and mov push fdivl fldl mov xchg pop aam scas dec arpl loopne pop into xor mov jns dec aad sbb iret pop lods jo movsb loop xor cmp dec cmp sbb or popa xchg jae (bad) push dec pop js push lahf xor push aas dec sub and xchg test sbb hlt jo mov mov pop outsl mull push add leave or adc lock scas pop je xchg xchg clc dec and pop or adc adc test dec in or sbb mov adc lret xor adc inc inc idivl sarl mov mov add add dec push std orl jmp cmpl lahf imul arpl push (bad) dec inc or stos jne lods inc xor lret out push (bad) in pusha je adc pop or test ljmp push push xor addl cmpsb rolb pop inc and pop inc adc adc inc pop rcr sbb sarb mov idivb sbb rclb mov push adcl add add adc mov mov dec xor adc lods dec add jae,pn nop xchg dec stos sbb rcll sbb push ret and gs jb fmul cmpsb sahf pop mov pop adc cmpsb and test xchg lock mov imul daa clc out or xor adc inc sbb push add aaa (bad) es les pop (bad) dec push pushf pop test jmp add jne pop iret adc or leave xchg sbb addb or out mov lock mov sti mov adc lahf (bad) and and sbb fisttpll in es sbb (bad) loopne icebp je inc cmp jne push mov add sbb adc or je pop test imul fldl push les sub icebp jne xchg inc pop int3 or xchg dec xor mov push insl sub repz push pop outsb xor and and jb lds push out jecxz push int xor icebp xor mov inc pinsrw (bad) dec je xorb fsts cmp cld mov mov aas inc rorb xchg mov xlat out push loope add adc dec pop xor xorb out sbb or xor popa and push cmp jno and mov and xlat push mov fwait (bad) and ljmp jle,pt jne cmp out mov dec out add push inc mov (bad) and jp int xor aaa or mov rcl xchg mov mov test jb jbe sarb loopne add (bad) jg add lock dec ret xchg sbb add pop mov push shrb dec test insb pop dec add mov mov mov pop in fnstenv sub and test or jo addps pop sbb test adc add vpshufhw cwtl lret add cmc add add mov imul ret mov or (bad) cmp cmp sahf sbb lcall scas fstl scas cwtl movsl daa xor ja scas and ret push js in daa adc adc push add andl nop mov movsb push pop into pop and and push add jo pop sub shrl mov and (bad) (bad) cmp aad repnz sbb loope fbstp pop or pop cmp andl mov orl or pop cltd imul pusha and ljmp test lea movsb mov jne pop sub lods xor fadds movsb rolb xchg xor packssdw cmp pop (bad) mov or rcr inc jae inc aaa jne push test stos xor or sub mov andl mov dec cmpsl shll adc jo dec sarb mov sub (bad) xor xchg or in pop push es es mov or lahf mov fisubrl sub pop pushf inc subl outsl test and pop sarl mov cmp mov mov pop cmp (bad) mov ds shufps adc push aam loopne into push iret lret leave adc xor rolb jmp stc lods xor dec sbb push xor push fs arpl jo cmp xor cmp lds mov adc pop dec js adc xor mov push jge,pn cmpb push outsl cmp or cmp xchg jbe je outsl fcomi or test pop pop (bad) out xor push sub fnop js cmpl mov mov mov (bad) je push mov adcl mov jae daa (bad) hlt push test and and mov push jmp bound xlat incb in dec cmpl test push sub (bad) push push lcall fstl push mov xchg push xlat (bad) sub dec push add xor or push cmp dec int3 add mov lret sarb inc iret xor sbb out sbb mov inc cld inc jmp jne test (bad) rolb mov or enter jne (bad) mov xor inc and mov jle or pop and xchg pushl jge sub or and adc ja lock sub xchg rorb aaa pop adc push push (bad) xchg add xor adc xchg or add adc cmc mov into inc xor icebp leave xor iret add fcomps mov shrb push ficompl cld mov scas mov or mov leave das push cmc nop mov sub add insb dec and data16 push sbb push enter and adc adc xor call loop lods inc aas es cmp je mov push or ret (bad) nop jecxz mov push clc pop mov adc lods je inc sbb jbe mov xor clc mov adcl lret adcl adc or mov pop or adc add xor xchg clc mov imul sub lds or or mov leave pop out xorl sbb in mov inc adc mov lds test inc jb inc inc stos sub aaa jge inc push rorb sub sub add stos xchg stos in adc xor mov jae pushf mov inc sub push clc clc lock xchg out or in or leave das lret mov addb push test aam cmp les sahf (bad) mov cmp mov or push stc mov popf mov mov add or and pop test (bad) nop or push movb or mov popa and int3 pop or cmp cmp shlb mov ficoml sub add cs or cmp or rcll add (bad) pop (bad) pop out dec mov dec mov inc sub sbb (bad) mov mov push push dec or pop cmp jbe add sub xchg mov push mov mov jmp adc and fldl (bad) jge adc or loopne pop int push adc das cs int test ficom push mov and jle adc jp dec add push mov push rolb dec sub dec fcoml lock pop mov and into adc ja or fucom push and into adc into inc dec push push insb mov repnz (bad) mov xor popa xor loopne pop dec mov jle inc rorl pop cmp and (bad) mov sub fmull or sti mov xchg cmp clc leave movsl (bad) sbb imul sbb sbb and add xor push jb push mov imul adc add je fidivl das mov bound add fcomp jg pop xor pop shr dec dec cmp pop jnp imul dec fs inc inc xchg jge dec and enter dec pop es push test popa xor insl or add pushf dec test into xchg ret call sbb unpckhps mov or mov push (bad) sarl test push mov mov or pusha add cmpsb jno jge push add fmul (bad) movsl jne add std dec sub inc sub push jmp xchg int3 and inc xor inc enter lock ret imul cmpb jnp sbb dec or mov and cli pop adc xchg inc push clc push imul xchg dec movsl imul inc push cltd hlt mov xadd push jecxz loop mov xor sub sub test push and push xchg jbe pop xchg std adc mov call nop push or pop adc sahf adc (bad) jbe jmp dec fidivrl (bad) push sub add int3 sahf push add jge sarb sbb and lock xor add push cmpsb bound cs pop add (bad) fild add in rcrb sub jecxz adc push add xor fistl push mov cmpsl jo mov imul leave aam popf test es pop pop mov pusha lods xor jge nop mov cmpsb sbb or in divl mov and rolb cwtl jno (bad) inc mov push mov xor add clc setae iret add test xchg add es ss movsl adc jnp dec adc xchg orb inc and (bad) or inc xchg dec fs fsubl loop outsl jg roll loope push add pop cmp les adc and fldt cmpsl jl and cmp sub push out mov sbb push lock sub sub inc loopne mov inc add sub mov inc loope sti add add scas mov hlt or xchg inc data16 adc rorb and sub xor sub test cmp add pop adc or xor clc inc hlt xor and adc in gs jmp shll mov adc insb fistpll dec aas or fldpi sbb xchg rcrb or xor pop pusha aam sahf iret add sub and jg sub test or jne mov inc lods xor gs sbb test mov pop adc inc jno cmp inc push hlt into dec mov mov cmp add mov jbe iret dec jmp mov scas push mov mov add scas inc enter push daa xchg xchg xchg popa gs int3 fidivr xlat (bad) jp sub clc add fiadd addb sbb scas jge dec sub leave cmpsb mov mov cmp pop pop push push push cmp mov test cmc rclb je in mov outsb push lods push inc les inc inc ds jns sbb arpl jl fadds push hlt add xor mov dec ret and adc add mov (bad) jmp addr16 pop inc xchg mov roll push and inc mov cwtl rolb pop jbe call inc mov dec pop adc push add cmpl xchg cmpsl xor sub ja add jl divb push or push rcrb xor gs sub add push jo and cmpb dec rol subl mov nop adc adcl jl mov and jb rcrb mov pop mov mov jno cmp lds rol or addb inc std xchg jae adc and mov clc imul imul xchg cltd dec jbe insb dec call insb dec call fdivs sub add addb ret sbb in test add xchg pushf sub cli out or aas xor cmp jge inc outsl enter jno xcrypt-cbc cmpsl nop and (bad) sbb pop or pop das sbb sbb add fldcw jle jo nop sbb pop fisubr movsb cmp out sti insb cmp push inc roll cmpsl (bad) xor lock pop jmp ret jge xchg sub lock add ret xchg sub cli xor iret ret jae adc (bad) sbb pop repnz xchg or push or cmp out jmp pop xchg dec dec mov add push icebp adc incb in fstps jo mov ds add es ja ret sbb push lahf insb add inc mov add movsl xchg ds mov sub mov clc sub mov (bad) pop nop or in in lock inc or fldt call sub push and or hlt ds jo or movswl adc xor (bad) out jecxz test push fcmovb mov cmpsl hlt and adc icebp adc add add sbb xor out js hlt mov aad xlat pop les rorb ret xlat and jae mov je and adc jecxz,pn sahf push jg shrl and cwtl mov sub or xor ret scas xor in fld cmp sti arpl dec dec aam js (bad) adc clc (bad) push aam test sbb pop mov push mov sbb ret xchg xchg lock je (bad) cmp pop xor test ret lret or add cwtl or sbb xchg pusha cmp adc cmpsb xor stos ss in movsb pusha push rcrb dec fbld fsts lahf jae inc cmp mov pusha cltd pop iret aam dec cld cmp fs add lahf das dec and mov fcompl pop mull pop (bad) pop lods (bad) mov fs cmpsl and xchg stos fisttp ja ja and fisub lods add inc and mov (bad) pop cmp mov pop andb data16 rolb daa addl xchg popf enter adc push dec popf insl dec ret bound sbb jl or add add daa dec sub or popf idivb cmp push sbb inc fs js xor dec fstps and in inc sahf and mov mov inc cwtl sub clc out adc pop rolb adc fadds mul std lahf mov repnz mov jmp mov push and inc mov push fdivrs jo dec (bad) sbbl xor adc (bad) jb mov ret push add fstpl jmp xor pop mov (bad) xor outsl leave mov out lret cmp adc mov (bad) insl fdivrs iret xchg cmp (bad) push pop sub test out jmp nop push loope sbb pop dec sbb add imul sbb sbb and leave inc push push push das jno fisttpl fcmovne flds sbb mov insl push lea inc movsb nop negl add outsl leave in dec jne into inc inc add sbb mov jmp mov push add repz xor push adc mov pop xchg sub jmp aam push jo xchg ljmp scas pop lods add popa shlb (bad) mov push js dec add fs xor and inc adc sub (bad) out mov add fadds rcr pop or add sub jmp aad (bad) stos sub iret sub sti insl sub addr16 int sbb in dec and jne pop mov dec cmp aad mov cmpsb and mov popa jge ss dec xchg jno xchg insb mov xor dec cmp hlt out mov add lret dec xchg test inc cmp and mov cmc push je push and dec push cmp xchg push mov (bad) pop adc (bad) lods mov fsubs cmpl je out mov inc arpl push add dec jnp xor dec dec outsl or insb push test pop push adc pop push cmp fisubl jp lock in cmp and cmp cli sbb pop and pop test jne push repz lret sahf sub and in xchg lcall jl imul pcmpeqb loope fs and shr or sbb push rcrb jle movsb sbb mov add lret pop add add mov mov mov push scas or test add adc push sbb (bad) and mov or and jp cmpsb pop or and pop push xor or mov jne pop ret jbe mov and adc cmpsb xor adc movb xor pushw incb int3 mov mov js mov push dec dec xlat data16 fistp ds sbb sbb rolb aas gs mov or call and sbb inc bound cmp popa and rol fstps xchg icebp adc mov push pop ret out dec sbb popa ret and rcr inc sbb fldl scas test or mov jecxz enter in and lock loope,pn xchg mov lret cltd into xchg xchg (bad) xor cmp xor pop nop pop rolb cmp cmp push emms mov mov mov xchg mov xor sbb push adc loopne loope sub rolb add add addl incl push dec insb outsl pop clc mov jg dec lret clc or ljmp nop nop and sub fdivr rolb in std pop clc add call pop (bad) enter or inc push jmp lahf lods or in (bad) mov clc fs (bad) xchg xlat test lea add push aam mov xchg mov pop loope xchg fdivrs pop push add ret ja push stos daa icebp and lock mov test inc ja daa fistl and mov inc scas xchg insl cmp xor mov bound sbb sti cmc in scas cwtl cmp mov xor nop aad es mov push out ret inc adc andl stos xor xor pop sub pop adcb imul sub sub and mov js push cmp xorb inc mov push sbb je pop jmp mov xor pusha push push ret sub jne mov vmulsd fdivrs test mov sub sub lods and fcmovu in movsb mov jnp ret mov dec sub push mov add xorb (bad) mov movsb sti jecxz dec pop mov jmp push add rcll inc or in or jmp into push insb out pop add cmp or xchg xor jle inc sarb notl pop lret aad imul xchg test or into mov dec inc rorb insb mov jl (bad) push push loope daa or inc dec jne outsb mull add aas xor mov or or cmp push lea rolb icebp jb fsubr dec jmp xor sbb adc subb dec inc pop stc mov adc push mov and stc ja xor adc inc loop or sbb sbb pop or or cmp das js push adc andl jl jmp mov sbb pop mov ret xor call adc pop add push push pop shlb mov push negl rorb sbb pop add cmp adc sub and (bad) xchg add cmp mov pop and sbb (bad) cmp xchg inc or adc clc (bad) in sarb jl and sub xor adcl jnp cmp fstps add fadds xor or rcrl aaa xchg cmp xor out xchg sbb jg iret or out add cmp xor push cmp notb add xchg (bad) aaa mov add sub aas adc ja cmp add add lods add xchg jg (bad) fwait or mov jp jg pop (bad) mov cmp decb loop add mov sub pusha push sti jmp cmc icebp dec dec and sbb jnp or sbb xor dec sbb dec cmpsb iret orb sbb clc daa (bad) scas mov sub dec jecxz movsb jns lret loopne add add add add jg cld add addb clc (bad) fs cltd mov cwtl xorl adc lock xchg ret jnp sbb lods pop sbb insl rclb and rcrl dec jno xchg sahf faddl sbb push and (bad) xor jne add push ret cmpsl roll add xchg jle cs mov scas popf dec cmc hlt orb adc xchg orl enter sbb out in inc cmp icebp inc mov pop and loopne push rcl xor popa push daa fcmove daa leave pop lret (bad) fildl and pop mov and shr lret or cmp lock adc push adc pop adc jp cmp push add lea pop jae insb mov mov pop insl ljmp aam (bad) sarb loope cmpsb add subl sbb sbb mov data16 jbe jmp sub add push xor add push push sbb pop sbb negl and push jecxz in movsl imul clc mov movsb bound sbb fcoml test js (bad) loopne inc clc xor add iret add lods inc sub adc shrb cmp jo or or sbb adc and dec sbb xor das aam mov pop adcb fisttpl dec and sub das fnop or mov out xchg ficoml rorb pop sbb (bad) mov push sub sbb roll inc jo push decb xor jmp push inc sub inc xorl cld pop add sbb leave insl sarb add xchg mov or inc loope mov push xchg cld lock xchg xchg and nop mov out sbb adc ja sub mov inc add popa sti or xor inc imul or in add sub adc inc and mov xor lods inc pop in push add pop lock js test add cmpsb lock pop mov or xchg mov les cmc sbb pusha jb adc cmp add sbbl mov adc push insb jmp mov or xchg bound fsubrs push xchg pop nop push add jle inc or sbb mov imulb inc push push or jo dec mov fwait pusha add add add fadds sub add pop cmc xchg add dec dec dec mov or jg jno in clc sar jns adc rol pusha inc pop or xor mov sub push jne add hlt add or iret popf lea out pop push push pop sub outsl mov shll jp icebp push mov or pop push dec iret adc icebp or js in sbb push or sbb mov rol mov fs rolb xchg pop xor or inc movsl push xchg and xchg shlb sub and hlt cmp inc adc rolb cmp (bad) xchg mov pop loopne,pn and arpl xor hlt lock pusha movsb rorl or sbb notb bound mov sbb push (bad) es xor fdivrl sub clc mov call mov sarb mov sbb mov mov (bad) adc push mov fiadd adc das and sbb lret adc and div mov mov hlt mov adc dec (bad) ljmp (bad) dec addr16 cmpl enter xchg push mov sbb adc or push into jecxz mov sbb nop or adc pop sbb fwait jmp pop or (bad) jno (bad) fstpl or xchg shrl (bad) ljmp shrb inc push adc test sbb adc movsb fdiv dec lods adc adc lahf add xchg jle add mov mull adc mov adc push movsb push cs ja or sbb xchg pop mov dec dec mov sbb std jne push jl xor xor mov push inc cmp mov adc xchg cmp pop xor fldt push test add inc dec lods pop lret lahf mov add push leave adc dec inc fstps (bad) scas adc cld in jnp data16 cmp mov inc stos jle icebp add (bad) mov cmp or in out jno and aaa negl mov and (bad) lock pop addr16 cld adc or push pop inc mov repz test or push xchg ficomp push rcrl xchg push ret nop in sbb test sbb adc nop out mov inc rclb lods nop jb sub sub add popf sub pusha mov cmp dec sub push jmp hlt in out or inc push mov xor and repnz sti xor lock inc inc aaa mov sub adc sahf inc fisubl pop cmp (bad) push dec dec jbe adc dec pop jne mov mov and (bad) movsl dec jae cmp jne pop cmpsl sahf jo loope sbb cmovl call loope or add jg sub add lock push lret imul mov sub mov mov loope jb push pop movsb adcb adc cmp das outsl popf mov icebp lahf mov loope push dec mov jno mov push push (bad) and lock mov add push ljmp inc out cmp inc pop sbbb push mov jp ret pusha cmp mov andl arpl and and pop push pusha lods dec cmp cmp es minps push ret ret jne mov test mov mov add cmc (bad) cmp pusha and data16 inc cld popl add (bad) pop jne addr16 adc fabs mov repz pop jnp enter adc xor insb mov js inc inc sub lret xor fcoms xchg enter fs arpl push lods add daa imul shl pop popa xor in mov sbb in arpl adc (bad) rol js and rcll clc ficom test push gs cmpsl iret clc add or iret add and fistpl lea pop dec stos add clc push std mov inc dec xor enter push pusha adc inc sbb rolb push xor xchg outsb and jle cmpsl imul lock idivl ss es push push call jg mov scas sahf mov push mov lock mov xchg sbb push sub sbb cld call pop cmpsl cmp insl (bad) xchg unpckhps mov pop cmp dec xor ret and push (bad) gs in pusha pop adc pop or jmp insb out insb jg mov cltd jbe add jno mov ds push pop insb inc cmp sub loop mov sub cmp (bad) popf jbe mov pop sub cmp cltd fildl nop insl pop jmp sbb sarb sub inc pop das fadds push js fcmovnbe and adc insl push hlt test add pop jo xchg call push pop sub inc aaa xlat addr16 xchg push pop addl xlat popa add adc push push test popa mov mov test das mov or or pop ss push test iret mov je cmp jl or dec push pop enter mov sub jg jmp push mov mov xor (bad) mov add jno xor dec mov dec movsb mov int jg sub mov or adc and xchg dec dec sbb inc adc mov sub movsb push ss test adc test rolb cmp aaa out pop and cwtl jns pop add xor pop aas xor inc ret add xor xchg in push dec rclb pop push test adc cmp jns and fidivrl adc adc mov mov fsts hlt xchg insl cmp fcomps popf outsl mov jne int3 xchg outsl add je test jecxz sub mov sub movsl adc movsl sbb sub in cs and aaa mov sbb push pop adc sti es dec dec call (bad) cmpsl and mov or xor out inc pop push and xchg addl js cmpsl sbb in adc inc test lret mov jno out dec pop loop push and out inc (bad) inc add rclb sub and aas sbb add divl dec cld sub movswl movsb cs insl adc scas push das and inc xor push xor loope sub lret inc dec sbb cld das outsb or add out cmp daa push xchg iret shld push mov jg push (bad) loopne loopne inc loopne ljmp (bad) pop data16 in (bad) push inc dec xchg mov jmp add dec inc js lea sbbb inc mov pop cld dec fstpt das call (bad) mov pop dec ret add mov sbb inc add or add sub push push mov sbb dec add or js mov inc or js pushl test pop pop nop test mov lret jle inc ss or or clc dec fs aas fsubrs cmp inc mov vpshld adc in jl push test (bad) cmpsb hlt adc push and pop lods push icebp cmpsb in jbe push (bad) push std and stos pop add imul outsl clc in mov mov in sbb pop or and push popa jo jnp fldlg2 out add cmp mov jae nop cs sub mov xchg inc jmp xchg or xchg xor (bad) je pop in imul cld adc push inc insb lcall es push mov push adcl inc test test add into xor push push or sub lcall mov sub nop lret xor sub push dec jl test je mov xchg or movsb rclb xchg das loope sbb sub cld fiaddl dec cmp xchg mov dec push add rclb dec pop imul dec dec push inc gs fldenv pop push gs push mov sbb daa inc out andl nop push sub pop cmpsl test push insl jo dec in nop push jae inc sub in in inc out (bad) ss fildl dec jae pop fidivl jno js gs cmc sbb push mov add mov pop aam movsl add cmp add mov push mov loopne int fsubrs repnz cmp mov jl mov repnz sub push mov push and or ret fidiv adc sub jbe imul test dec mov push adc sbb dec push pop cmp dec js lret pop jl sub pop sub mov cmp mov or mov (bad) dec rcrb sbb pop push fdivl movb loop movsl scas shr or sbb cld ds cmpsb movsl pop mov int3 adc or and repnz xchg xor (bad) and inc loopne or lock nop fldcw or mov popa outsb adc ret lret mov mov fstl int3 (bad) flds and sbbb cmc mov sub popa xlat mov dec test sub nop mov shlb subl push shr or ret jno mov add and push push das or dec xchg push add (bad) jp pop inc data16 aaa ja mov pop mov jg push icebp out dec inc and mov test or mov sbb test or mov jne mov iret subl nop popf dec push pushf setae mov or inc in mov or or sbb sbb sarl or pop (bad) and and push pusha mov (bad) nop or inc mov inc popl push jbe mov pop (bad) (bad) out pop mov jmp push pushf scas lods push adc xor in shrl pop xor push pop xor cwtl bound and in mov outsb adc sar movsb js nop into cwtl aas or push cli cmp cli es je mov dec push test adc xchg loopne inc leave dec mov mull rcr xchg pushf lds mov push jne jo fcomps jmp pop icebp or push push add je mov push out aam aaa test clc push inc push lds inc xor pop xchg add fdivp (bad) and insb add cmpsl stc push jo nop mov sub leave in pop sub mov adc (bad) push xor movzwl dec lock push movzwl bound sbb lods pop incl and xchg popa or imul sbb xor ret xor dec sbb popf push xor mov fbstp sub sub or push ds imul cmp add test dec jmp mov (bad) js arpl add or or inc rcll add fs adc adc adc cmp dec or (bad) hlt test or inc and or bound sub in dec add pop repz mov adc ss or xchg test xor sub sbb outsb pop xor out mov mov mov pusha sbb lahf pop sub add sbb enter adc stos cmpsl sbb mov pop push sbb sub addr16 js fisub mov add iret repz fiadd sbb and sub into repz xor call inc push mov inc dec dec pop in mov pop pop add je or and movsl in xor add xchg xchg nop xor inc dec push ja loop xor dec arpl (bad) adc add movsb scas push add cmpsl pop xchg icebp sbb add mov add push pop (bad) ss inc xor (bad) or movsb lahf out mov pushf fmuls push lea add add repz xchg mov push jecxz int sbb leave inc jo (bad) sbb xchg (bad) (bad) movsb jnp add xchg xor mov ja xor pop add inc cli adc mov dec enter subl inc sbb fs pop movb roll ja sbb and popa ret xor push pop xor push add (bad) je inc inc dec xchg or pop outsl lret xor jo pop (bad) push sbb gs xchg loopne sbb and sbb cmpsl and xor adc inc add push pop lret aad je jecxz cwtl xlat xor icebp mov cmp rorl sti push adc cmpsl cmp push pop xchg ret push daa pop mov adc sub sub inc fs imull cmp mov adc roll pop cs arpl insb fnsave mov xchg sbbb inc or lea es pop xor fadd xor dec xchg mov inc loope mov call rol push jo mov adc mov xor xchg arpl mov addr16 and push or in pop je clc push or data16 addr16 xchg insb mov push sbb sbb iret or cmp add mov adc inc push ret rorb add jmp pusha cmpsl sub and and cltd mov test sbb aas push gs movsb cmp test rcll ret sub cmp cltd xchg in cmp inc push and mov adc jl add xchg int push fiadd sbb sbb (bad) fdivrl adc inc sub push and test dec popa cs inc or (bad) aas push andb daa inc or xchg popf shlb dec xlat stc xor add sbb mov add xchg push dec sbb sbb and (bad) or adc mov and dec test addl (bad) xchg imul je adc test adc movsb mov data16 and lret pop jae add add adc cmpsb imul cmp inc and cmp inc push ret push xchg and (bad) ds cmp push adc and jg outsb push sub lea sbb or shrb loopne or js jbe jp mov in push das dec sbb cmp add nop fcmovne fcoml push loopne subl call xor adc repz cwtl dec jne test (bad) lret out dec jnp bound lods mov movsl inc pop cld dec adc jnp cwtl mov je push sub add hlt add cmc cs rol das adc cmp (bad) mov adc push loop add or mov push or add mov icebp adc add mov adc ljmp and xor insb sbb movsl arpl out adc aad pusha add into js int jne add (bad) cmp je sub pop pop push sub scas je aas jl mov push pusha outsl or inc in add jns pushf inc loop mov ror xor inc mov test mov jg or sub pop pop lock cmp mov pop ds es mov jae rorl test add popf push cmp jecxz test mov daa pop sub adc add popa cmp mov sbb clc test orl sub cmp dec jmp jge mov xchg jg sbb or mov cs or add pop or jecxz fwait mov (bad) pop clc and jne cmp mov adc push push js lock sbb xor lods mov mov loopne or pop shlb mov (bad) cmpsl leave push or sbb es push sbb gs decl push and out pop xor cmp add mov stc push fdivs rorb aaa loopne psrld push mov cs jle mov stos mov push pop xchg aaa push and fdivr scas dec mov and outsb mov add mov cld sub outsl test (bad) mull pop lock mov lcall ss shlb les fimul imul pop xor mov es scas xchg push into or sub cli pop and jmp les push out adc test adc and mov inc xor and insl adc adc lahf das xchg sub mov or vmread mov and insb cmp dec sbb addb add xchg jne sbb fisubrl sbb or jl cmp push push push xor pop cld mov xchg inc cld movl and inc add sbb adc or mov or xor mov adc test cmpsl adc push (bad) mov add xor jb imul xchg or add adc xchg imul aaa and jl or or jns das xor icebp sub mov aas or lea xor sbb out sbb jp sbb loop sbb adc xor outsl xor adc les jae adc popa lods mov ret nop movsb pop mov push loopne aam jne fs icebp mov mov or or pop sahf add orb jmp dec xchg in pop js add (bad) jle das sti es cmp cmc xor dec enter dec mov xchg aaa mov mov jecxz cmp mov mov ss ljmp xchg daa call sbb imul inc hlt mov mov add xchg xor push fisubrl pusha dec sbb into add xchg cmp xor cmp out iret adc xor mov xor push or cmp xchg ja adc rcrb stc in adc push pinsrw inc push ret idivl jmp out lahf lock sub sbb sbb jmp inc mov out mov jg xchg lods dec xchg rolb int mulb addr16 les dec add push leave test jo jae int cmp sbb lods rcl cs mov cli mov inc (bad) xchg push int adc (bad) adc jmp cmp adc xor push pop dec sbb pusha aaa push and insl add inc xlat and roll outsl inc mov mov mov mov cmp addl sbb push lea add jb inc pop loop subl int dec mov xchg sub (bad) dec xor outsl popa mov push add dec cwtl inc jo add subl divb mov mov or pusha data16 dec push mov daa (bad) cmp hlt xchg dec adc push in add xlat daa les mov or and leave divl and push pop imul ja or lock xor pop adc or xchg adc out fbstp int3 idivl push jmp stos fwait jb fidiv pop call xor call ja mov fist sub cmp clc mov and leave enter fistpl daa mov fcoms js pop leave (bad) sti sbb aas aas jne jo or lahf jmp and add dec mov in mov or mov cmc push nop or inc inc ret cmp or jmp sub sbb pop popf hlt and push insl loop call sbb fldl gs insb and sub addl add outsl arpl inc and cmp jb adc inc xor xor inc jl pop sub jb nop sub adc cmp mov (bad) ja popa (bad) icebp jl push cmp fmul or mov sbb xchg mov inc xchg movsw cmp pop push popa inc scas jmp adc (bad) cs arpl es insl pusha sbb dec add mov ljmp dec inc dec dec or stos es rorl shlb or pop add xchg push aam push mov insl (bad) xchg sbb mov fdivs fsubs xlat cmp pusha sub cmp leave push aam inc mov (bad) dec hlt js scas addr16 dec clc es mov xor fstpt pop or xchg fiadd mov mov jl jecxz ljmp mov lahf shrb jno pop inc in sar repz pop inc ret sbb in lcall adc sub fbld or or inc iret jne data16 fisttpl mov push mov xor or loopne movsl inc daa xchg sbb shrb aam and insl add lock or and jno test in test xchg outsl imul and xchg shl xor cmp imul xor pusha or clc sub mov and jb push ja sub or pop stc mov pop sub add movsl add or mov adc mov inc pop push jno addl sub arpl mov sbb in sub in arpl popf push push adc push dec inc das jmp in xor xchg push xor cmp fisttp xor cmpsb aam daa xor xchg pop aam sbb in push je fsubr in mov ja clc (bad) mov sbb inc outsl or or xchg xor xchg add das test jns inc ds inc (bad) xor in xchg mov push or sub pop sub out test adc dec dec repnz push inc add dec cmp adc test mov or xchg inc and movsb mov movsb ret jbe adc inc xor adcb test ret ja jecxz cmp imul sbb cmp lea movl leave add cwtl outsl mov mov ret or sbb and repz xchg push mov sbb adc outsl cmp jne fidivl and dec push je mov adc dec mov popa loopne sub aas mov and push movsb aaa adc test mov push ffree lock dec movsb cmc fcoml aaa dec xchg adc sar push or call cmp push imul ret xchg adc push sub shrb or nop lcall push ja xor inc in ret xchg ret push in xchg fild add dec pop cmpb movb roll cltd add add xor xchg imul rorb cmp cmp push add push inc sub aas or rorb add sub jle int3 outsb mov cltd sub dec insb ljmp jge sub push popa jb mov adc add jle adc push dec shlb js enter pop or bound insb pop cmovle loopne into adc les scas adc popa mov pop inc stos adc mov jne adc pop add int aaa mov xchg pop rcl xchg stos fdecstp sbb js arpl push add daa mov insb icebp pop fs dec cmp push outsb cmp int lcall push xor push jl dec mov fiadd adc mov mov cld and in or xchg lea sub out push adc mov popf in add mov mov dec fidiv add add dec inc ud2 test sub mov dec inc les test loopne mov push adc inc dec dec jo repz loopne adc dec push movsb (bad) in ds add dec and lock out inc push fs test and pop dec cmp js imul in stos (bad) lods and insb push jbe mov inc pop les pop jp lock cmp insb push rcrb sbb inc and xchg jae je adc lods inc xchg ret cltd aam lahf pop (bad) mov mov jb stos xchg ja xchg jno mov jb add lock outsl dec imul mov dec sbb leave fildl jns pushf imul sub jecxz imul cmp and mov push inc inc imul test dec cmp addl test fs and sahf jne nop jl dec push cmp scas pushf hlt outsl inc fbstp cmovge jo add add inc xchg clc nop or cwtl mov inc xor les cmp inc mov bound sub icebp mov pop in xlat cmp sbb or js outsl or xor sbb mov xor sbb push or mov mov push dec pop pop lea push arpl es psubusb cld (bad) hlt js or and (bad) shll cmp mov jp (bad) cltd cmp (bad) xor lock cwtl sbb les sahf xlat in pop lea inc in out sbb mov loopne mov and jno xchg or gs mov and sti test xor pop lods rclb and dec dec xchg jno mov mov scas mov daa test fcomps mov into pop pop and int3 mov lea out dec or inc clc push in xchg xlat roll cmp pop sub add in mov scas push pop addl jl add or add xor cmpsb xor inc in inc addl inc fistpll mov inc mov addl call roll mov pop pop and (bad) xlat inc aam or mov sarb pop and aad rolb xor icebp iret mov and inc adc enter mov push pop cmp imul scas fdivrs push sarb xchg cmpsl inc mov test bound lea (bad) or cmp test nop clc inc out andps mov shl jmp hlt cmp jo xor push popf jo fistp jb fnstcw inc jle push imul or or or xchg scas mov js out clc (bad) movsl fdivs add push fisttpl or rcl test lret out rcrl and push sbb ja ror nop loopne push push add repnz inc cwtl pop push mov cltd fild fcomps nop lcall push nop pop xchg inc xorl nop or and and add pop inc out clts or sbb pop call in in hlt cltd xor insl sahf xchg push imul jecxz xchg and test mov cmp pusha mov push add jo jo in adc setae jnp test inc mov test push movsb jno xchg nop push inc (bad) outsl nop mov ret nop mov cmc jge inc and shlb mov decl xor xor inc mov dec dec dec dec dec dec loopne and xor push push push pop pop pop push mov das subl adcl add and mov aam fcoms lock mov dec xor jo pop or or (bad) push rol rorb mov pop (bad) fbstp jbe lret jae inc cli and add add xchg mov add addl push daa lret sbb xorl mov jg or pop add and and incb daa add sbb mov mov dec mov mov sbb loop jge add mov or or rorl or sub fsubr inc jne mov cmp push inc jge imul shrl cmp push (bad) xor or lcall stos pop cli push sbb loopne push popa cs fs nop cmp das cmc jnp cmpsb (bad) das nop and andl xor mov loope add sbb stc xor jmp inc inc inc dec rorb xchg sub sbb dec mov sbb das or dec push pushw leave (bad) pusha mov dec inc and or sbb inc or jb les divb xchg sub sahf sub nop hlt addr16 fcmovnb mov and lea mov lahf cmc fstps push bswap or add mov sbb push xor lock and add dec les adc aaa fsubl fs lea pop add mov ret out fdivrs mov jmp popa and mov mov jmp daa sub mov add jbe pop insl lcall or jmp inc (bad) sti push add movb add pop cli pop pop mov mov dec cmp mov and add mov (bad) xchg mov xchg (bad) xor test ja iret push mov fidivrl inc pushl sbb (bad) clc adc xor pusha je mov add or cmp jg mov ret (bad) ret mov xor fcmovnbe js mov imul mov popa or and push int ljmp loope js lcall jle int3 push push mov es insl pop add sub fsubr outsl cmpsl lods sbb or jo lahf cmpsl lods lock ss pop xor jmp imul xor je (bad) xor pop pop (bad) jne nop pushl aaa in xlat adc imul jg mov adc lea pop adc out cmpsb je dec xor ja xchg (bad) test rcrl mov pop dec and lea push add mov sbb inc imul stos cmpsb xlat je push sbb cmp pop call xchg push movsl jge add imul cmpb daa (bad) xchg push aas cmp fnop cmpsb xchg loope addb mov in inc lods mov test pusha inc xchg add sub add and sub loope cmp pop add add and pop mov (bad) jo aas les outsb dec outsl sbb jo (bad) fmuls rclb pop sub cmp lock sbb inc aas int3 aas inc inc test rolb mov mov icebp pop sti adc xor add (bad) pop fwait dec cmp add aas fsubs je add mov stos mov jnp sub add adc adc dec dec rcrl or pop gs jmp inc js repz xchg not mov out jle (bad) adc cli add push pop xchg xchg inc sub js push data16 add mov adc inc dec inc push dec sbb jne or scas nop mov rolb cli and leave xlat cmpl add sub das xor imul jmp ds push jae add push add pushf fs sbb sub outsl add and xchg mov sub adc dec es inc inc add jg ljmp lret aas lret sub push inc rclb mov and or push adc fwait lods lea and dec xor push mov bound inc sbb push cmp ljmp or imul imull pop inc shr ret cld lods pop fsubrp lea xor cltd cmp movsl cltd out inc into pop xlat or jecxz mov jecxz ss xchg movsl or (bad) push adc push inc pop jge test sti adc fdivrl int3 sub lock adc push jno fistpl mov into or push in jmp inc push adcl add out add insb dec push inc rcl adc pop hlt dec dec mov sbb cld les sbb mov mov pop scas fistpl xlat icebp add sti dec push fdivl insl pop adc xchg add adc fcoml aam jmp inc in push outsb mov cmp mov cmpsl jp inc sbb test or inc (bad) or sbbl lods testb inc bound aad and adc aam icebp in mov mov sbb mov mov mov inc movswl jecxz or pop adcb pop dec inc test push je jp outsl mov inc in and add lock xchg insb out pop cmpsl or sahf cmp sub es popa decb inc push test cmp sub inc loope or push adc ret jo and xor iret pop ds lea shll xor inc pop push (bad) lds lds aam and fstps shlb arpl or cmp sbb in push clc dec mov mov aam xor (bad) push jbe sbb loopne dec test xchg xor mov and dec out je int inc or lods push ret gs or or pushw lock inc aaa cmpsl repz xor push sbb mov mov inc arpl test ljmp nop xchg nop mov (bad) in mov nop dec cmp xchg adc call loope,pn mov mov push cmp aam mov or add je fwait add adc pop push mov sti sub xchg sbb or inc call pusha push push (bad) sbb loope (bad) sarb adc dec mov (bad) aas add js pop testw rorb adc mov inc fiaddl add out sub pop mov sub push xchg inc push out mov add pop or or aad or sub mov or mov pop adc cwtl jecxz test out push rorl stos mov and dec and inc inc rorl icebp loopne stos test fadds push mov xchg ret nop loope xor pop push jge mov fisttp imulb je inc rcr mov cmp sbb enter sbb mov rcrl mov xlat dec cwtl sbb or adc stc jns pop loopne stos inc cmpl mov iret dec cmp pop dec inc sub pop lahf dec add iret dec pop das jl popa ljmp test push xor sub xchg std xchg cmp adc mov nop movl ja pusha mov jle sbb (bad) in int3 (bad) shlb and jo ss movhps xor movsl (bad) mov inc ret sub ret hlt mov mov add sub sti adc dec imul inc xor sub sbb hlt xor cmpsb xchg sub push push dec sbb mov out nop ret sub or xchg xorb lods jns lahf add inc cmp rclb invd ret dec je in mov lock sbb dec mov sbb lock inc cmp dec add dec ret xor and pop push push inc in divl adc cmp dec icebp push fsubrs dec hlt js shrb add dec (bad) mov push pop pop mov cwtl mov jge adc pop mov scas test imul adc or or (bad) inc pusha or add inc push enter sub pop lock inc inc enter aad cs xchg add pop test out and lea orb sub test push lock inc mov inc pop sbb shrb sbb or jnp pop mov pop mov test hlt pop into hlt and subl rep or insl je repz xchg inc jne mov inc insl sbb imull leave lock stos fdiv rorl cld add push ds test movl fildll push and adcl sbb movsb in ret fadds movsl or dec (bad) ja orb leave and mov jp xor rep ja ss jge aaa fistp dec push push push lock loopne mov push sbb add daa call mov in das ja or pop mov push jg jl iret push inc xor or imul test loope cmp orl sbb loopne arpl psrlq fisttpl xor cmp addl iret cmp xchg pushf or sub add sub aas loopne jecxz xchg mov test add push mov add repz sub push nop sbb add or cmp sbb pusha data16 dec or call and ret out rclb nop fwait xor push in dec xchg mov les leave imul and sbb push push call or cmp sbb stos inc clc push and adc pop jmp orl sub lock nop (bad) jo xor add repnz pop dec lock add add scas (bad) in addr16 lea and xor jbe dec xor js sub push pop inc and dec pop pop nop or (bad) movsb repnz mov add pop popa add push test leave jae and adc pop sarl and loopne ret sahf pop cmp and hlt inc dec loopne or (bad) mov (bad) and rorl or dec icebp test and outsl jecxz rcrb rolb adc push fwait push add mov test add inc fidiv jl jge lcall rolb enter les push int adc lcall sbb aas mov dec jmp sub insl mov inc lret xchg dec pop pop pusha inc push test insl sbbl and adc sbb add adc mov push fs cwtl daa inc jp xor jl dec shrb or push inc dec js mov test xchg push dec ja out xor movl pop and sbb repz sub push dec dec pmulhrw outsl push or shrb xor add add pop mov sbb popf mov outsl imul xor mov mov xchg cmp je call inc dec or dec sub xchg insl sbb add fmuls xchg jmp dec dec es cltd xchg sub xor push fimul pop mov ds repz mov cmp or test xchg and (bad) and cld sub pop mov in xchg add adc cmp or or (bad) int (bad) jge jle push xor cs pop adc incb hlt adc push and push add sub popa stos xchg bound aas lock inc aad inc ds incb add imul cld movl movsb frstor and xor sbb outsl fdiv ret push mov insl sbb mov fs cmp aaa xor testb adc inc or add adc cmp ds scas inc sub mov frstor jb pop jb push pop jg pop jp aas mov pusha (bad) fsts pop cmp ret je or jne xor xor fs jb inc push sub popf shr pop xchg rorb jle dec stos push lea cmp loope xor ret add jecxz dec cmpsb fs mov enter add pop (bad) (bad) cmp jno out cmpsl test popl pusha jg shlb adc push sub push rcrb ret mov mov or xor or pop push adc outsb test mov mov sub ds inc push ds add inc inc or loopne or vpsubb mov scas mov fs iret sub add add or xor sub xchg xor (bad) call adc xor push test push arpl and das xor movsl outsl pop in mov cmp cmp add and lret cs cmp inc fcmovu pop aaa jo mov mov (bad) push ret mov je xor lds push inc dec js jg mov loopne jmp subb push mov inc sub jbe and adc jge lods aas fs or mov and sub sahf ljmp sub inc stos pop or loopne xchg push adc push push sbb push jg pop xchg pusha pop xchg sub imul add pop fisubrl xlat cmpb sahf gs fcoms jecxz mov xchg xchg outsb jmp jne xor sbb mov and and add (bad) xor jmp mov inc inc popf push arpl insb sbb clc and sbb (bad) iret cwtl jp imul pop lret or sub das mov dec cwtl sbb pop xchg adc xlat pusha movsl mov ret push and data16 push in mov (bad) adc js lahf ret push xchg jmp or pop xor mov push adc add and ja or aas jno (bad) inc and dec cltd push sub cwtl dec fldl insl mov sbb mov xchg test out jl jns inc inc inc mov inc nop loope xchg cmpsl addr16 or push xor ret orl je fnop sbb mov lods cmpb out scas out cmpl cmpsb add clc loop ret iret int mov mov loop gs cmp pop popf ja add lret or push fs lret idivb fistpll push cmp cmp popa ret jnp sub sub imul js mov xor insl mov and lock jo and les xor and push push mov mov inc pop lret lods adc xchg movsl aas dec cmp insb jae inc inc xchg movsl add jne popa shlb insl cmp push push data16 sbb je (bad) rcrb movsl mov cltd nop enter hlt xlat or push dec jne xlat mov pop dec pop aaa movb and mov and xor mov adc pop icebp push pop je or inc and mov out push adc (bad) faddl insb repz dec cmpsb add pop movsb jge inc bound cs or data16 push adc (bad) test push push ja fcomps pop jl les xchg inc jl jl sbb ja xor mov add test mov into xchg in mov (bad) mov ret (bad) mov inc aam xchg inc mov xchg loope sub push popf adc adc inc pop inc and lea (bad) mov sbb iret adc add sub int3 xor jno xchg fcoms pushf xor xchg outsb mov sar call cmp pop pop sbb mov jge push jge or daa fisub decb pusha das push mov mov ss adc nop in sbb test cmp add jne cltd xchg std int3 add pop imul xor inc push lock test cmp push out sbb sub shrb mov push push push jl mov ss xchg shlb das inc add jb sarb cmc mov pop adc push xchg dec verr cmpl mov (bad) mov sub (bad) iret int3 add leave dec add call addl out jmp xchg jns sbb mov or outsb movsl aas enter cmp adc push dec add out sbb cltd loopne leave sbb enter push mov dec pusha sub leave and enter (bad) rcrb add inc rclb adc xchg les and push or dec pushf jbe jne dec push pop dec xor outsb je loopne fs sbb aam push mov push sbb outsb dec repz xor rclb pop mov pop lret xlat test adc fs ret lea sbb inc cmp and int3 push jbe (bad) push gs mov jno les (bad) sub jp or rclb dec dec cmp adc enter mov aaa jle rorl xchg fdivl dec and outsb inc or insb cli imul and and in fsubs pop mov inc xor std dec jmp inc fcmovnbe xor inc cwtl pop sub cmp fidivrl jle jo arpl imul xchg pop or (bad) dec pop cmp insl fnop loopne pop cmp or loopne mov cmp sahf dec xor loope loope int inc sbb sbbb je mov jbe subl ret clc and push jge push xor sub add (bad) fwait ss lock (bad) test adc jno and aad mov mov test mov mov or and sbb ds mov aaa call and xor or ds cmp pop cmp mov push inc pop adc dec and mov (bad) dec add xor adc (bad) xchg mov aas inc test mov int3 xchg (bad) test xor outsb mov dec ret xchg cmp pop inc sbbl cmpsb (bad) mov cmpb movb xchg aad daa add pop jne dec mov fadd push push jl cmp aaa dec and dec inc jne mov movsb (bad) jo idivb mov sub int cwtl pop cmpl stos mov into call int3 sahf outsb lods jl adc add xchg fcomp rorb mov int3 xchg lods inc lea sbb cwtl lea ljmp xor popa mov in and popa push and cld fdivrs inc cmp push xor sub pusha pushl mov jae adc imul lods jne mov fsub test inc stc daa call ficom clc (bad) jmp push mov mov xchg mov xchg push push lahf mov daa xchg imul mov sub int3 sub addr16 daa sbb je inc or orl lock mov xor and ret mov sbb sbb (bad) inc and hlt sahf push aam inc jnp mov or mov mov ret add or sub lds data16 gs into add mov scas add add and aad rolb pop test add pusha int3 call outsb sbb js pop add dec ss call pop pop push mov iret call add jp ret pop or js data16 loop inc imul or push out pop sbb lock das inc into aas dec cmp cmp stos das (bad) nop xor adc pop adc test out adc bound cmp dec popa mov call sbb pop shl push (bad) push mov sbb or adc push addr16 add jmp dec outsb pushf xchg inc mov jo test push jnp in jp ret xor add jmp ret dec inc jnp sub push add xchg jbe andl mov or movq fcoml in mov lods add push or mov add (bad) lods setae jecxz dec ljmp clc aaa add clc adc inc (bad) pop int3 cmp jp mov popf add dec lds dec in or sbb mov add xchg inc inc sbb push popa cmovo jo mov push mov loop push cli data16 cli movsl (bad) add cmc add pop xchg mov inc sub push mov mov and and add (bad) push inc sbb fwait je imul mov push icebp jo sarl fs fimull cld mov push dec inc mov sbb inc insb (bad) inc les mov add add icebp sbb pop xor push rorl out dec xchg bound lds cmpsl add or sub jno adc loop push mov mov ja pop push lahf sub (bad) sub pop je sbb inc cmp je xor push shl pop xchg movsb fbstp ret push and fcmovnb mov inc xor inc cmp sbbl xchg cmpl daa mov imul pusha aam inc add enter subb and mov mov lret jnp fadds lahf push test dec fnstenv ret add push sbb dec push sub cmp mov jne pop clc jb pop ja cwtl fs int mov pop jp das (bad) sbb stos adc cmp jp pop cmp loopne or xchg jl rorb push inc lcall add mov rorl adc andl push dec arpl xor pop (bad) or inc mov into stc sbb push xor push ret js xchg inc addr16 negl pop mov pop mov in dec pop dec xchg das cmp jnp add mov cmp mov jmp jnp insb cld ss imul test xchg addr16 and aam rorb push pusha ja rcrl insb daa adc inc and sub lock dec aas pop nop iret enter dec inc dec inc enter dec jno mov cmp push outsl pusha and or and outsb push inc xor je ret sbb mov push or mov xchg jno jmp in sbb xor cmp popa xchg cmp pop dec fs ljmp sub incl push fiadd jmp (bad) out push mov ds fsubr sub push daa xor and dec add sub out xor xor jmp adc hlt pop pop pop cli imul xor jo sub push xlat sti jge mov push mov pop shlb pusha lds and lahf cmpsb mov faddp mov scas or and ja andl imul fcmovbe mov jge inc into add push or sarb les jmp sbb out sahf rorl pop addb (bad) int3 mov adc xor jne pushw xor sbbb add jns jno add lock or das enter js or and stos into or sbb (bad) adc mov in aaa in insb sub mov xor ret mov push rolb cmp cmp leave push clc pushf dec hlt test addr16 les mov mov test int3 mov fdivrl test les jnp sub pop jb lods or pop pop cmp nop outsb in movb je add or inc inc pop mov aaa mov push int mov push pop push or xchg lods xchg and push adc push bound push push aas nop push loope je mov out cs cmpsl sbb fimull cltd xor aas cmp xchg and adc xchg push pop orb xor imul xchg mov jo sbb jne add cmp lret out add dec xorl mov dec pop daa inc test adc js adc dec xor or jmp inc shrb cmp push jo xchg jno and inc inc pop pop xchg test ret syscall je xchg addr16 cld das adc pop rolb cmp sbb push fimul (bad) add lods (bad) rol repz jae sbb fs lods aad and cmpsb cmpsl repnz and or sbb (bad) fstpt hlt jl inc pop add push (bad) fs dec lods mov xorb xchg push xchg push pop push jecxz lods cmpsl add or int enter xchg pop orl scas test dec cli test xchg jg fsubr ficoml sub or (bad) mov daa sub js cmpsl sub jge je xor pop add add insb das sub pop (bad) out xchg lods sbb dec and mov push jbe cmp sbb mov imul outsb imul inc push aam adc test test add test fwait rorb jge clc in adc or xchg loope pop pop and mov dec sbb pusha psrad mov push aas test add shl jno rorb jo rcr (bad) jbe (bad) adc rolb addl or mov mov movsb adc and or mov adc and inc rol aam or lcall xor adc ficom mov sub or xchg test fcoml testb add and enter in xchg lock jl and sbb sti add das cltd fdivrl out xchg cmpsb xor or adc in (bad) push sbb fmull mov cmp xchg sbb cmp roll adc mov inc pop fmull or sbb mov mov pop mov sbb dec (bad) pop lds pop adc and add cli sbb cltd adc in push dec pop andl je push in movsb jmp fmuls roll inc inc push cwtl enter in loope sbb xor push outsb cmp call stos scas push dec mov inc or pop ja add cmp and add dec mov push push lds jecxz int3 cli frstor inc shl mov and (bad) lahf or push push add shlb jmp js (bad) cmp test cmp daa rclb and inc pop ljmp loope cmp inc inc std adc inc popa add mov pop add inc add push div mov addl pop sub insb movl mov mov aaa dec xor mov dec jmp jge add add cmp jns pushf nop sub xchg inc or push mov cmp push pop mov add aaa iret popa and pop ret or mov std mov insl (bad) cli xor inc xor adc sqrtps cmc data16 mov inc dec mov xor sub (bad) out jle sub or in pop imul loope mov (bad) dec movl dec add dec jae mov dec and mov sub test and xchg rorb jg jmp xor imul xchg lea adc xlat sbb (bad) sub or fcmovnb (bad) shlb sbb or pop mov inc movsb jge pop ds je add insb inc push adc aaa pop xor sbb sbb pop (bad) imul add xor jo scas push or or test jg cmp jne inc ss scas insl dec xor nop sbb (bad) xor mov jne rcr add cmpps pop inc adc hlt test xchg mov clc and jl mov das mov xor es jl inc sbb jo pop inc js ret mov scas arpl cltd testb add ret sbb cmc adc sub sarb ffree adc fimull les iret repz in sarb jp cmpsl jne adc mov mov out jns lcall idivl mov imul xor nop iret jnp out mov fld jns or rcrb cmp (bad) mov pop mov jle adc (bad) mov inc or scas (bad) lret mov mov sub cmp (bad) or and xor pusha xchg (bad) jb xor inc test loopne cmp inc (bad) fwait test fisttpl pop lahf and push mov imul jae adc loope sbb cwtl jle or dec outsb arpl dec dec rcrb shr xor fnsave mov mov addr16 ss adc pop cmp (bad) jae je add cmp inc iret lds fs dec dec push dec inc inc iret insb int3 (bad) pop adc mov xor add mov mov and add xchg insb dec roll or sub jge dec dec ficom loopne dec nop loopne or daa xchg inc aaa call pop and or sti push lock mov cs movsb sbb sbb push mov add enter adc mov jns add or je adc es stc adc sub fidiv dec movsb jae ds (bad) movsb or mov push insl add outsl fs mov mov (bad) (bad) cs int3 or repnz inc cmp in inc push push cmp bound jl dec sbb cmp into pop sbb aad test or out mov daa aaa lcall ja mov inc imul mov enter fcompl or dec cmp mov push sbb cmp sub xor or ss nop fimul fadds lcall and add lahf test fildl cmp adc add mov xchg jnp negl and insb push add inc push movsb pop push shlb inc jp lods ret xor nop xchg pop xor ljmp shlb fadd and sbb std or aaa stos add dec or data16 or dec loope inc cmp movsb xchg mov rcll (bad) outsl sub cmp bound insl jo (bad) cmp or jp pushf orl dec or add xchg jae or call add jno and movsl iret ficomp push es and nop or je xor xchg push nop sbb fcomip ffreep push add mov loopne inc or sbb push pop and or aaa xor push cmc and adc fsts (bad) (bad) jmp push icebp testl pop leave push adc adc and xchg adc push push xchg and in and pop inc or xor sbb sbb in mov lret sbb mov xor repz add adc pop and sub jg mov shll pop and add push xor xor es sub sbb sub adc push sub or dec and xor das (bad) leave add or inc xchg pop push push cmc inc and and cmp add add push sub leave cmp push cmp cltd nop and pop and pusha (bad) ss adc or push dec add inc lods dec aas dec adc adc loopne rcl scas aas mov dec outsl outsl imul and inc add sub dec mov xor in sub rclb je or sub jp mov push xchg shrb js fidivrl pop das movsb scas rclb dec outsb or jmp scas stos data16 and cmp and sub or cmp mov xchg adc or aas (bad) pop ss mov fbld or mov je push adc push adc add inc scas sahf push test xchg or add push les (bad) lea jno pop pop and add addr16 adc test sti inc adc jmpw sti les and and or roll sbb lea mov lsl and int rolb popf imul xchg lea hlt cmp fs pusha xchg mov mov push es cwtl ffree jb or mov out lret cmpsl dec mov call into mov adc mov sbbl and (bad) es je or push aaa xchg (bad) sahf cltd mov inc nop xchg mov pop and xchg or or push test push push or iret mov (bad) mov or in (bad) add rcr jl add roll test push jne jns stos (bad) lock out outsb dec aaa adc sub daa xchg loopne push cs adcl dec jae push push push dec mov add js ja frstor or pop cld mov adc inc popa sbb insb pop aaa push out xchg mov pop add (bad) addr16 nop mov mov fdivl sahf lret adc inc jb cmp inc iret xor inc xor imul loope sub push cmp inc (bad) adc jns out inc push sub loopne inc adc nop in inc xlat push pusha inc repnz inc js outsb out pop dec cmp push push lock js div xchg negb fidivr push or iret lock inc outsl xchg sbb clc and iret fcoms out insb push adc nop in dec loop fsubl inc (bad) ss idivb cmp cmp push push add cmp push popa jmp aaa add mov and pop ljmp lods lods fcoms push sub add mov in sbb mov inc mov mov or dec loope adc sbb add or xchg or mov lret loope xchg mov mov scas ljmp add or call mov imul adc push pop push sahf cmpsl stc sub mov fcoms adc sahf out mov sub data16 xor ds sbb inc or push insb sbb jnp pop sub xchg push sub les out call or add mov repnz and push inc iret notl es push icebp fcompp insb xchg ljmp sahf notl push push jo or push cmp sub mov adc loope sahf mov out push test push mov pop sbb fcoms loope movl mov adc pop dec mov cmp pop loope add mov push fsubs jmp xlat outsl pop sbb cmp pop push jecxz add push std rcrb out mov (bad) pop cmpsb lret pop or and cltd out add loopne lods sub fcoms push or inc insb mov jns push pusha movsb fldenv mov inc adc jns cld jmp adc sub inc es and ret fiadd push ljmp sub and xchg add add (bad) inc mov and jmp dec mov stos out inc jmp sbb mov mov dec insb or fmull xchg xchg push or cs call jmp lcall and enter adc roll pop fwait inc pop dec pop and dec adc or fdivrl xchg xor xchg xor mov push and and xchg sbb test and and and mov mov lods frstor out sbb sub out lea imul cmp inc adc cmp cmp test xlat inc cmp xor nop or jo add test into scas loopne adc es inc dec or adc and pop cwtl cmp fdivr fwait sub inc pop dec shrb jl test (bad) dec nop cld sub inc mov pop mov mov fs cmpsl pop fisttpll loopne mov js movsl test or sub xor decb xor js jae ret push data16 xor xor test lods (bad) pop arpl (bad) xor (bad) xor pop xor xlat and and xchg (bad) mul sub int (bad) inc data16 pop int scas cwtl inc loop popa aaa mov in in out cmp or (bad) inc jne and (bad) adc sbb add pop mov fisttp add (bad) and and pop and or mov decl cmpsl inc lcall es push out inc pop dec pop dec cmp out cmpsl mov (bad) and dec cmp inc dec ds cs or test fcoms xor sbb inc cwtl mov inc push enter insl roll pop leave inc inc sar rclb mov mov outsb aad inc sbb rolb dec pop test mov mov mov or pop mov dec or rorl aaa and dec test loope sbb dec xchg jno aaa and and test xchg dec inc lods pop adc (bad) xchg dec mov and push mov mov popl cmp push cmp lods addl push and push jb mov and push inc inc sub pop pop push pusha ret test jbe rcrb shrl enter pop pop add sbb fwait pop pop push fwait inc fistp (bad) xchg xchg rcrb jmp (bad) fadd mov or xchg cs inc or leave add sub push and mov pushw or or int3 insb ss out xor adc nop sub test loopne mov dec pop or out pop sub pop cmp ret mov add shrb sub cmp daa or push pop lods cmpsb sbb dec push push mov push mov cmpsl insb xor test aas cmp mov mov mov ret dec push (bad) sbb fadds xchg (bad) je inc xchg enter nop lock and insb (bad) jb loopne push inc add cmp clc inc push (bad) hlt push or pusha mov dec pop mov andps add lods ret rcrl inc nop addr16 and rolb push or or xchg add jmp cwtl aam clc xchg std cmp ret push je and or push inc pop les or (bad) mov mov out icebp insl mov aaa mov adc adc loopne (bad) cmp pusha insb jge stc je adc pop addl js mov rorb dec loopne adc sub leave sub js outsl dec adc hlt mov insb popa repnz js enter jns fadd push aaa popf push mov pushf add sub (bad) xor sbb ds stc dec cmpsb xchg (bad) imul mov pop or fimul (bad) lcall rorb add (bad) loopne ja mov (bad) mov xorb rol dec lds push test (bad) mov cmp sbb mov push adc pop jo cmp jge enter je mov and mov jne pop push out jbe sar jecxz daa push or flds cld cmp mov cmp adc scas add ret mov xchg sub xor sbb repz sub arpl mov popf fbld iret sub xor mov (bad) outsl cmp or jno stos xchg sahf jl test jae sub repz inc and sbb dec (bad) jae loopne add cmpsl dec xchg lock cmp add add or jae add add mov repnz adc pop sbb sbb icebp fisubl je mov jae xchg imul testb cs sbb adc lcall adc mov movl inc xchg xor ss fistp aam and rcl sub add (bad) cs daa add jo sti aaa xchg insb inc dec add sahf clc fs sub stc lock push xchg int push and pop in inc pop mov adc hlt xchg push and mov daa js sbb and sbb push and dec or mov gs push inc or les inc sbb cltd mov out ds inc mov add pushf (bad) cmpsl hlt mov mov xchg icebp vmwrite lahf sub stc push or adc or sub adc push sahf mov repnz add pusha cmp jmp imul pop cmpsb adc jecxz xchg add sub jne fildll cmp inc sub add pop int and inc dec daa cmpsb mov xor inc add adc push (bad) mov cmp or add into mov cmp add faddl shlb xchg or inc dec pop push lcall sbb pop ficoml inc ss ret xchg sbb jno fnstenv inc push and imul sub lock push cmp xchg jp lock jmp sub add add pop ss les rclb adc mov cmp clc pop bound mov les adc sbb jo inc dec lock setl xor mov stos mov in xor dec pop mov mov mull adc mov xchg add out cmp sbb dec jecxz inc neg (bad) (bad) sbb pop hlt neg jmp arpl lods add je add and and adc cmp adc lahf bnd mov mov pop xchg cmc out insl cmp addr16 jb pop inc dec arpl (bad) aaa or cmp or xor inc inc mov xchg sbb mov rclb add add (bad) mov lock sub mov je sub mov pop (bad) xchg pop pop and adc (bad) jp orl xor or jmp fs pop fcmovb pop inc jb inc xor (bad) idivl xor or rorb popf imul mov and or lret inc mov in sbb fwait ret mov sub mov out jge rclb movsl loopne sar and push je ja popa sbb or jmp (bad) data16 push xor push jmp inc xor les push sub rcl dec adc aaa pop mov mov ss jmp push in dec scas sub push cld adc mov inc push and lock and cmp repz popa jge mov out (bad) xor daa or aaa add jp sbb cmp push dec jo movsb inc xor jl mov jle push sub adc dec inc dec out (bad) mov push sahf push push and leave inc adc sbb jae or push loopne ret adc mov fdivrs push and mov add jne mov xchg add inc addb add or adc clc std pop sub or fsts sahf push dec inc add inc xlat sub inc jmp xchg cmc ds decb pushf push (bad) ds jge and dec adc add test fisubr ret je pop das pop addl paddw lret pop jecxz aam mov or or rorl (bad) (bad) push and mov or loop push cmp adc nop dec inc ja test and (bad) jo ds or mov adc xor mov das mov shll or sbb cmp nop mov popa add movb ret jae cmp mov rcrb pop mov push dec push dec stos and push xor jmp push jp sbb jmp and add push cmpl sub xor jb adc cmp xchg pop xchg xor mov jb cwtl push sub pop and pop pushf inc adc (bad) fnop call push push psubusb in fistl stos lock adc (bad) and push push sbb jp add mov test mov inc jae mov pop cmp xchg mul inc xor dec aam (bad) sbb shlb je or notb dec sub adc xor lea mov xchg int3 orb lea xchg shrb loope mov and add or je xchg outsl xchg adc add mov adc adc imul mov mov sub mov lods dec shlb mov adc sbb sub push push xchg pop pop jne lcall jmp sbb or leave mov inc jb add sub pop mov sbb lock enter cmpsl push jo adc mov out aaa faddl (bad) mov mov sub sub adc insl cmp add cmp lock cmpsb test xchg mov sbb pop pop or loopne sbb push dec rolb push push add mov adc add push popa add pop adc enter rcr jns les ja sarl sub sbb or stos outsl push adc sbb xchg out or or mov xchg mov dec sbb sub lret push inc daa xor scas sub push in mov aam or sub inc fstpt arpl and pop dec outsl pop jb inc or and xor xchg dec icebp outsb (bad) or pusha push daa out (bad) test xchg lcall adc inc cltd popa ret es mov lret dec loopnew sub adc cld push xor and gs rcl xor xchg push or sbb sub pop sub inc mov xor test ja jbe push push lea push mov addb inc jl xor addl outsl or lds sbb out sbb add mov addr16 mov mov sahf fs inc jo ss in fistpl mov sbb xchg xor jae mov xchg add xor inc in stos jge inc (bad) pop aaa adc ss sub jle stos frstor popa sbb mov rcr adc and xor in or addl add dec sub loop mov add xchg aad das incl cmp mov add dec je add movsb or cmpsb push add push adc fisttpll jmp inc hlt mov adc test add (bad) in pusha jne sbb loopne ret or sbb jns or rclb add inc or and mov hlt pop dec mov jecxz xchg dec push adc mov and push fldl mov sbb dec int or loope (bad) loopne push and sub hlt mov pusha pop popa fild mov or sub pop int mov and sahf test daa dec out jb sub pop add mov add fist inc add dec cwtl bound daa outsb push add dec in xor fs xchg pop and repnz (bad) and and cmpsb lahf rcrl and mov and inc inc or push ja (bad) ficoml (bad) lds push fldenv movsb aaa push mov mov dec xor add mov outsb or (bad) cmc insl sub lea js out stos lea hlt push xchg xchg rolb cld sbb adc pop lret xor mov xchg mov push mov lea repz inc adc fwait loope andb (bad) adc and mov add inc enter in mov inc cmp aas push repz xorb cmpl test fildl test sbb mov shl push aad push dec ret mov lret (bad) popa enter jbe sbb ret inc popa movsb inc iret sub pop popf sbb sbb dec das xor mov pop xor arpl loopne pop cmp sub mov or or sbb jo xchg out inc out fildll lods sbbl (bad) repz ret mov lcall in fldl popa dec inc in adc add xchg test push xchg and push cmp mov lea cwtl xchg enter sbb lret push jp popa jmp shrb pop mov addl loopne clc andl fadds cs push add (bad) je sbb in xchg add sub cmp lods fldl imul outsl sbb lock and and pop dec and dec or fisttp cmp inc (bad) mov dec imul or aam xchg add rclb pop dec lods test add dec xchg xchg daa xor (bad) lds in mov jb neg inc roll in and fcoms sbb ret add inc pusha adcl jo mov sbb addl dec jge xchg iret mov cmp ds sbb jne ja xlat adc das sub sbb into lea (bad) jne jnp lock in or insb dec jp jle jne cmc in and mov stos mov scas xchg call (bad) or in jmp cmp lahf iret jo pop cmp inc mov mov xchg lds mov push pop repnz or sub mov popa push gs xchg mov mov add inc (bad) dec loope hlt mov xlat pop jo dec jo jg sbb je adc and pop je daa xchg adc mov dec mov mov ss mov aam and (bad) rep xchg daa fimull xor add mov pop rorl add and out push push push adc sub out pop or add test inc mov dec xor int push and aas inc repnz pushf lret cmc adc nop cwtl jmp or and cmp push mov mov lock push add dec pop xor mov sbb divl cmp and push lret push ss add sbb inc push outsl pop sbb fiadd adc xchg adc xchg mov add adcl and sub sbb adc in rorb adc in addr16 out pusha addl loopne test inc push out lahf lods inc jmp mov and sbb sbb data16 call aaa rcrl mov push and sbb fsts imul adc inc js fnstsw cmpb push and inc pop xorb mov xor dec push scas xlat xor fcmovnbe cwtl xchg mov cmp cmpb imul andl dec mov movsl adc out (bad) das push loopne add adcl (bad) xchg add das insb test mov jp pop adc mov add xor enter (bad) arpl ficompl sub or cmpl fwait jae cmp std or sbb add dec or push push mov mov movsl mov repnz pop dec mov fisubr ljmp clc xor or jmp mov es test pusha inc out pop (bad) ret push cld push jb mov add hlt pop aaa test adc pop add int push sub xor lods pop pop sub sub pusha repnz js aaa fcom add je xchg inc (bad) dec dec and sbb add inc adc pop add adc adc mov lcall cmp mov mov or cmp jae pop insb enter loope adc ja xchg fwait orb adc inc clc mov pop xchg pop push jo add and push sub push imul and cmc mov and sbbb js test inc mov sbb cwtl and and jno mov pop and imul test add test mov and adc mov gs lsl pop insl xor inc jg cmp insl loopne in ret jb or xchg and dec or test push pop mov jecxz sub mov icebp (bad) dec je daa cmpb mov pop jne sbb xor cltd test jne ret jge jmp mov in xchg cwtl sbb add xchg push in leave adc insb repnz and inc movsb mov or es mov and sub jbe mov in adc into cmc imul mov test arpl ret aam sbb inc sub inc lcall int movsl lea jmp sub pop fs dec jnp out popa jnp cmp or mov aad add out mov add rorb cmp adc mov sbb cltd sbb lock arpl mov push xchg xorl fsubl adc hlt mov in ret jae ds nop add pop push out arpl add or lock xchg repz rorl push and cmovae xchg and rorl lea adc pop repz xchg jecxz ja lea mov mov add add repnz and and xor or adcb dec les sub (bad) fnop sub inc mov jbe mov jg push push cmp test scas pop or inc add movsl fldenv (bad) sub mov pop push add test add jbe push mov xor inc pop pop or and imul mov mov aam nop fistl cmc add xchg add cmpsl sub and dec movsb mov push mov inc xchg addl push fiaddl push out cltd push dec cmp or clc inc jo shr add xor roll aam orb flds clc (bad) in adc cmp mov pop adc sbb lcall or test neg xchg movsb mul adc mov in je aam and rorb nop lret arpl xor (bad) or leave in xchg leave shlb dec and add cli and sub push fimul ret adc enter add add mov mov and insb add pop sub pushf sbb xchg dec pushf cmp sarb sar or mov iret cltd js adc adc (bad) in lods pushf cmp les in push das mov add (bad) mov jg pop imul in jne imul inc pop cmp lcall xor push xchg mov inc or dec xchg or or adc in fistpl inc nop add shr je adc sbb loopne or (bad) jne sub popf jl les testb jl cmpl jnp ja int3 pop fs add sub adc mov xor test sub or (bad) push mov push mov sbb iret jmp fistpll je or sbb ret icebp xor cmp cmpsl movsl and xor aad mov adcb test imul or icebp push sbb inc sbb mov add nop fbstp cli nop and cmp and add add and (bad) ror and data16 xchg sahf adc sub movsb sbb push sbb mov out cmp dec outsl mov fcmovu fcompl mov sbb js adc test fisttpl sbb push daa and xchg mov ljmp jge mov mov lods arpl and and sti add push dec rcrb scas (bad) or movsb movsl rcrl pop inc (bad) add lahf sbbl xchg int3 cmpsl sbbl cli test jno icebp out (bad) push nop test mov add test mov or jnp arpl inc (bad) push mov (bad) push mov stos fmulp test repnz cmpl and xchg xor cwtl mov mov push push pop sbb aad xor xchg ret adc xor push lds repnz pop sub fiaddl out push mov in pop test in pusha les xchg ljmp jne ja fwait jmp nop fisub mov (bad) sahf xchg cmpsb dec jo cld popa pusha ss xchg push lea lods add inc daa fdivs jp int and and xorb clc movsl ljmp jl or or sub je enter test or and add das add mov in or pop push dec inc pop mov mov dec ret clc je mov adc sbb mov enter aas int cmp add sbb fiaddl aaa (bad) cs sub gs add pop (bad) lock cmp push adc je incl mov cmpsl push push imul rcrl and adc inc push pop loope mov retw xlat and js mov aas pop dec popf or pop out (bad) in (bad) sbb fdivrs (bad) push add push mov pop shrb mov loopne loope sarl xlat inc notl add ja push setnp xchg pop xor inc jo daa pop ret fsub lret cmpl xor sbb pop mov into push ja loop xchg jmp mov mov pop and sbb enter add movsl mov cmc xor push lret xor bound add and jae adc xchg inc mov cmp (bad) movsb inc ja cs in add outsb mov push push cmp cwtl xor js mov out cmp out mov cs jae sarb mov in or push outsb sbb movsl cmpsl pop or mov ret push push mov sub mov add jp add push fisttp push and lds pop add push cmp cmp add add (bad) pop push jnp ss ss sti (bad) lock jg imul xchg cmp and add add xor imul push xchg push pop push mov aad int lods sub inc push mov pusha pop adc lea sub mov push push add push cmp pop or dec inc movsb mov bound lcall adc xor cmp sbb test pop ret mov cmpl or sbb cld mov movl push clc pop or add cmp pop mov sub mov adc fsubrs cmp sbb cld mov pusha popa add mov adc and adc pop add add push cmp jns imul mov addl rcrb cltd jne negb mulb sub int add jne adc jmp das imul fwait mov or lods lea mov sbb xchg fchs push cld sbb ja adc mov fsubs inc sbb cld outsb jnp out add xchg jo inc xor add pusha sbb imul add pushf add xor and cmp adc and adc adc daa out popf insb push aas add mov or add sbb mov or sub pop adc push mov add adc nop mov mov sub or jl rolb xor or add stos mulb arpl add jns xorl shlb push lods jmp fadds push les leave push and lods adc dec data16 mov pop mov mov sbb mov or js cld dec fbld mov push adc jmp dec and call push push pop pop add in xor dec inc dec push fisttp decb pop adc pop or out or dec mov call das fcoml mov mov xchg nop cmp loopne cmpsb std and call adc adc sbb pop or add inc mov pop sbb sti pop pop sub add lock in and push cli (bad) fnsave mov pop incl idiv dec inc cs jo jnp lods test cmc out pop sbb push (bad) dec daa call sbb in scas and je mov push nop ret jg mov dec sbb inc cmpl jne (bad) movb cmp inc mov call dec and mulb xchg inc or push inc cmp je lock add mov jne test cmp mov ja iret test cli (bad) dec nop mov pop mov inc adc popf pop mov iret (bad) sbb fwait inc loopne xchg and jbe dec jae adc xchg xor and clc xchg loope,pn push pop sahf cs rolb pop xchg daa dec pop xor incl push insl jne mov cltd (bad) jmp adc inc aas xor adc pushf add and adc sbb lcall in sub dec dec mov or add add aas add or stos fnstenv sbb sub je (bad) sbb cltd js sub lock sub jne push mov mov (bad) sarb jae loopne cmp js dec add dec push cmovle loop movsb adc popa inc lahf jmp and rcr or sbb hlt sbb pop lock mov lods inc inc pop icebp add outsl push inc xor arpl test sub (bad) and jne lods xlat mov fs mov nop mov mov add cmp scas bound mov bound or (bad) cmp and mov xor cmpsb cmc loopne add and hlt and and jb test jne inc cmp insb lock and lock sub xchg mov add int3 adc adc lahf sub aaa aad daa adc aaa lods mov mov mov ret rdpmc dec or cmc sbb adc mov add ja cmp aas (bad) ficompl or adc push mov and mov cmp inc cmpl test cli cmp je ja dec inc and cmp xor jecxz movsl outsl or movsb mov (bad) jmp mov xchg dec in cmpsl rolb (bad) cmp adc inc pop test inc call int3 inc fidiv dec test pop mov sti sub push in inc movsb pop or push xchg push mov je clc lock mov leave gs dec mov cmp mov xor adc inc orb jecxz cmp xchg cmovbe in inc cmp xchg push shlb sub in (bad) jbe pop dec jbe movsl imul add dec add roll nop sub verr scas or pop nop andb fstl mov mov aaa inc dec dec mov fdivp test dec sub imul movl mov fbstp arpl cmp sahf and adc and pop mov gs dec xor mov inc push js sub push shll (bad) mov add jmp push push mov (bad) lock mov mov pop pop loopne xchg or hlt fisttpll popl xor icebp das adc shr mov pop dec add sbb popa lock inc int movl or (bad) push loop xchg rcll pop (bad) repz and xor sbb push add fidivrl les icebp es test xchg fmull pop sbb roll dec enter sbbb xor jmp dec rorb enter pop cmp adc nop lret add fmull pop andl nop sub cltd push dec jmp test fdivl fwait add (bad) jno fistl inc loopne test ja into and imull insl in scas rcl and adc sub jge ds pop cmpsl adc les and je in and xor xchg cmp int jo xor popf mov inc and dec (bad) dec adc jbe mov inc mov inc jbe test test pop inc xlat dec roll push push mov in mov jae leave adcl cmpsl clc std stos adc jl and je xor add (bad) call lock cmp add inc fcoml mov unpcklps (bad) inc xor xchg pop push (bad) std sbb inc shrb xor xchg imul mov mov push addl mov lahf push push mov outsb cmp xchg sbb jo je mov movsb pop loopne inc mov ret dec push sub push or push mov adc push xchg js jp mov push dec das ss insb dec or shrb ret mov or inc xor fsubrl mov ret xor arpl jl dec pop cmc mov bswap mov les add pushf xchg cmpsl call inc pusha pop adc aas pop mov or cmpsb dec jmp adc push pop into movb lods and insb add or nop adc jmp xchg xor (bad) cmp imul add and sub add add stc (bad) aam loopne arpl inc or inc aaa cli xchg mov and mov sbb mov mov xchg hlt sbb push dec add stc add leave mov fnstenv xor fildll inc out or cmpsl pop pop xchg xor shrb ficoml loope fwait push (bad) xor pop jo shrd cmpl adc adc inc cltd dec mov add mov movb mov or jne outsb adc jmp xchg push insb mov pop xchg test pop sbb xchg jns and adc and lret adc mov jecxz pop and sbb dec daa call ss idivl aam (bad) and ret xor rolb mov add dec push sub nop add push pop push sbb out xor cltd (bad) cmp cmp xchg push cmpsb jne push xor push in xchg cmp jl clc mov xor sub adc lock dec add xor dec loop mov and (bad) mov or lea adc jbe mov in add mov sub or fiaddl push push and sbb mov test sbb mov add rcrl loop inc push loope int3 jge sub mov mov cwtl push scas fcoml push add loopne mov subb or mov sbb sub pop add loopne and in iret sahf dec dec inc dec cmp mov pop loopne lock gs and repnz clc dec nop mov subl jo push dec es mov mov sbb add fstpt cmpsb cs movsb add movsb add jmp pop aas data16 jmp mov test shll xor xchg sarl xlat cmpsl mov movsb push cli daa mov sub fwait add xor pop xchg imul aad cmp outsb inc nop lods xor (bad) add xorb icebp inc adc push pusha std add es or and mov addr16 and sbb inc xchg xchg loopne xchg xor pop push add rolb cmp xorl dec xor aaa jo sbb movsb mov and jmp addr16 xor xlat (bad) xor jecxz mov shlb sbb mov int3 add stos xor fs pop pavgw loopne fmuls cli cmp add movsb outsl ljmp push mov shl loope and aas pop dec add or pop sbb (bad) mov leave mov or popf mov insb pusha es (bad) loop adc and ss cmpsb jne cltd sbb mov mov sub loopne or movl add adc jge enter inc in ret (bad) jmp adc in subl lods sbb pop xor or or and loope pop push clts pop jecxz outsl movsb imul fisubl icebp xchg and adc inc cltd mov inc stos in bound or shrl inc fs mov sar dec ss rcrb iret or jmp xlat (bad) dec aam call icebp mov js cld lds mov outsl lods inc ss xor rclb pop test mov or inc sarl push loope and repnz aad sub ja cmpsl or stos dec leave rcrl add ret cmpsl push xchg sub add adc insl jb and pop ja add adcb or sub sub xchg or dec test daa pop daa and inc jmp sbb jne and pop add adc pop pop stos inc mov fisttp cmp inc ljmp adc dec rclb cmp cwtl pop push sbb jl hlt and sbb stc lods and andb ret scas scas adc inc loopne sub mov mov jmp cmp mov xchg jmp cwtl movsb mov or inc ret sub xchg inc lods add das aaa inc or ret shll adc add add jg mov jo rorb mov mov mov loopne mov and pop daa in movsb ss sbbb aas je or or bound loopne mov add leave and aad jne add sbb cs cmp cmp xchg daa popa or adc add addb dec js enter pop add callw les in adc pop gs arpl adc outsb sub out sbb mov stc fsubrl js popf inc pusha rorb das push xchg add cli orb aas aam xorb mov sbb call aad inc mov or mov mov fcoms mov pop cmpsl or data16 mov shlb adc xor sub pop pop dec jnp sbb mov addr16 pop jl out cmp mov or cmp loope sbb pop rcrb movsb in adc out lock inc negl pushf and pop pop inc xchg mov movsl xchg inc mov loopne pop mov or cwtl jmp lret sub push adc xor pop push mov shlb iret inc (bad) int3 mov cwtl or xchg inc xor xchg and jmp pop test mov jae insl inc shr inc fsub push fstpt mov sarb das lods mov aaa xor les nop das jne or out pop xor add or repz gs aaa add cmp (bad) pop jnp loope push dec adc jl shlb pop mov or in xor mov pop pop cltd loope cs ds inc (bad) mov push roll roll (bad) push mov xchg fs cmpsb dec sbb pop adc push sbb outsl adc lock and test push cmp or test (bad) or push add xchg push fadds ret or pop lcall mov xlat loop cwtl xor mov out pavgw xchg mov cli push aad daa adc pushf inc jmp rorb andb sbb add adcb mov sbb mov jo mov cli or movl or jecxz pop inc mov ljmp mov xchg testl orps pusha push call in subl mov call mov mov call xchg call out xor push and nop loopne and aaa xlat paddsw pop ds es cmp fimull dec call sbb sbb or sbb push test lock push push push nop jnp lret loope mov mov adc dec call adcb mov jge xchg adc flds pop or aad mov cmpb xchg add push sbb or fisubrl push lods aaa fs or cmpsb daa ret mov push sbb paddb dec aaa inc push scas cltd dec xchg fiadd push xchg sbb pop add or ret cmp popa lds adc jnp xor xchg je or fistpl jne pop fildl mov out adc dec mov imul mov dec stos cli mov pop pusha xchg lock (bad) aad inc sbb or push fsubr pop add mull sahf jno pop data16 ret aam aaa scas push cmp add outsb add fnstcw inc (bad) (bad) adc arpl stos aas addb push add jno ja jo pop adc ss push xchg inc bound jnp push mov sbb add push or fwait aas inc scas or pop rolb sti and sub pop and jge movsb and jmp sbb cld cld and push nop sub xchg cld cld cld arpl xor cld add addb fisttp xchg (bad) cwtl fsubl jbe cmp test int mov shrd fs jno,pn jo (bad) dec jmp popa dec mov mov aam inc fcmovnbe das out lds cmp or lahf push insl mov iret ss and mov mov (bad) or xor xor aaa pop adc pop dec pop or or andb mov movl sbb cmp clc loopne and xchg mov xor adc push push xchg and pop jl adc adc push and es add sub add mov dec and lahf int3 roll fsubrp mov int3 cmp pop pop add dec push mov sti aam cs push xor test (bad) pushf pushf pushf pushf dec xor push mov and mov dec mov mov push sub mov cwtl jl mov lods lds inc ret push cmpsb sbb (bad) pop dec mov dec dec xor push es cmpsb pop pop enter (bad) push push dec out adc dec ficom mov and inc push cwtl je sbb mov jo sbb xchg dec pop push and ror xchg loopne mov pop mov imul loopnew outsb adc lds and pop inc ret shrl pop pop push leave das pop adc (bad) ljmp inc inc pusha mov loop cld cmp out jl or jle pusha fs es add mov inc adc pushl out xor cmp jge inc xor clc xchg clc fcomps pop or jmp adc lsl xchg and or (bad) in and sub adc pop jg jp xor push pop sbb test out pop fisubl outsb push mov adc int adc add push insl ljmp or sbb gs push ja lock outsl out clc shrb jbe sbb lock lret pusha sarl pusha xlat into add mov ficompl mov add sbb xlat imul jo pop jo cmc add sahf loopne insb xchg push out loopne test loope jmp leave or ret adc inc dec arpl inc cmp push out mov pop jno test imul insb addl dec iret push sbb fistl clc leave mov pop xor (bad) les loopne cmp and mov test (bad) jo cs pop mov and jae (bad) js imul and push aad mov inc lods leave jp cmc cld jmp xlat or sar pop push sarb mov jne cmpl (bad) std mov (bad) push jmp add mov push xor cmp call add inc or (bad) cmc push xor insl js pusha adc (bad) aaa dec adc inc orb cmpsb push or divb inc inc pusha aaa jno pop add cmp or sbb jl push subl or inc jns iret push std and lds jp and (bad) cmc mov add test pushf inc into insb xor das push gs lea xor pop dec or push imul push add and (bad) ja test adc sub add outsl or imul and xorb mov pop xchg inc jbe dec mov out dec inc pop nop divb or push pop and sbb popf cmp icebp xchg add push fisub callw ret push mov pop pop (bad) cmp push testb xchg clc insb sub inc push inc and mov inc dec testb and xchg or sub cmp das dec push fiaddl dec mov adc rcrb test xchg xor mov mov xor add nop sub fnstenv in mov dec rolb push push jnp popf imul sbb cmpsb inc test hlt push pop mov pop movsl add mov and push mov cmp pusha in inc push out sbb jns fs or pop sbb pushf cmpl jo sub lods push into push mov mov mov add sub sub ficompl cmp je pop push pop adc add jno (bad) cmp cmp popf out dec push arpl orl sub jg inc or xor lock sub pop sub inc jmp sbb push subl or clc hlt cmp iret add hlt roll ss push mov inc sub pop jbe inc inc mov xchg xor or push inc adc repnz fdivs inc add loope jns nop inc les jge dec adc inc mov sarl dec mov orl clc push push sub adc (bad) mov sbb jo push xlat cmp iret push aam and push mov and sbb pop insl ffreep cmp add pusha push add xor jl mov sbb push pop lea and add or aaa (bad) dec and lock inc or clc push cs addr16 enter aas inc and sbbb add add dec jmp jno rclb inc sbb fldenv sbb inc popa enter in (bad) add idivl pop xchg mov and add or jl push rclb and repz inc ret jne adc inc sbb dec inc add orl pop jmp mov add subl test xchg push pop cmp mov sbb loop push insl dec imul mov mov mov shlb pop xchg je lods jnp cmc icebp dec adc fild inc sub mov pop lret movsl cmp (bad) je jmp adc int adc xor (bad) in push mov lcall pop push (bad) jns nop fnstsw dec mov jg aas movsl (bad) bound into pop (bad) adc push jbe dec inc int inc xor push add int3 xor add adc loop cmp push xchg lock push js dec inc or or lods mov je pop mov (bad) mov rdtsc add outsb inc pop and in xchg sbb adc push subb fmuls test leave or dec jnp and es cmp sub cli test xor xor ret xor jnp add sbb fcoms jo xchg mov pop sarl adc pop jne pop sti push ss js or xor fwait lahf dec pop xor movb and jns loop imul movl hlt mov outsb jl xor je or int or or add mov or or enter push or xchg fmull loopne sbb bound cmpsl adc hlt jmp xlat insl fistl daa or mov lea cmp mov daa cmp sbb je dec aaa in add mov movsl pop rorl xchg stc mov push loope sub sti xor sub loope enter daa and test push call sahf add jg dec inc dec dec dec inc ficoml and js les mov icebp rcrb ja in or or push rorb lods leave mov sbb sbb pop inc sbb cmp fadd xchg out pop lcall or push push push (bad) inc dec pusha xchg mov sbbl ret in jbe sub fs cmp add cmp insl cmpsl dec xchg and icebp out inc pop rol dec loope dec xlat (bad) sbb inc daa nop bound sbb push xchg sbb orb ret sbbb mov movsl scas mov int or pop cmp loopne push push pop or mov dec rcl mov ret dec add test movsl (bad) iret lods dec pop mov or xor adc lret add and dec jg mov sub inc xorb inc das repnz pop push aaa out fadds imul and movsb or adc inc aam and lods xchg mov or add and movsb adc inc push fs mov jp sbb sbb (bad) sbb insb inc js ss js pusha jg adc and cmp outsl fwait pop int3 mov jo dec je sbb cli pop das js out xchg es fimull pop xchg ret cli adc and outsl or fild dec mov pop lea cmp push out ljmp repz pop add or xchg mov xchg les je cs js inc (bad) pop sbb lods push sub pop lret nop sbb jecxz (bad) sbb push adc adc outsl in mov mov aad add xchg pusha mov or dec movsl and loop insl or ret push mov ret add mov mov jl cld or sub or loopne push mov jne test sub mov fsubrs test in xor xor xchg xor rcl addb add adc sbb dec shufps pusha fidivrl adc outsb dec test aad or pushf pop xor xlat push andb pop (bad) and sbb jo jne dec mov outsl add add lahf test lock xor test rorb test mov and pop adc (bad) fistpl stos inc pop fdivrs push clc cmp push add lret mov xor call adc xchg and jmp lea sarl xchg cmp (bad) (bad) mov sbb fisttpll cltd inc jle push jg fcmovbe adc pop ret or and (bad) dec jnp mov push sub dec pop jp xor mov lret imul adc roll jbe imul popa pop and adc cmp imul add sub sub call pop jb jno popf loope sbb fsts out add fbstp add dec icebp add jl add push lret (bad) ficom or pop stos sub or cmp into icebp inc pushf dec sub inc dec push inc test hlt pop xor mov cwtl comiss aad xchg lret or cmp pop jg mov hlt clc movl shl pop cld js adc ret mov addr16 imul inc stos out ja mov bound fbstp test adc xchg inc cltd xor cltd adc jg inc mov sbb push lods imul dec mov fwait mov sub es mov jbe insl clc xor repnz js ret inc xor adcb lsl add xchg add cs inc push fidivr add push pusha ficomp dec loope mov pushf xor add stos and and xchg xor scas adc mov (bad) mov (bad) pop hlt mov mov rcll push xor das in mov mov push jmp or mov dec push dec cmp out pop inc sub cs shlb and ljmp sub adc lret mov inc rcrb jmp mov jmp adc adc (bad) cwtl mov cmp inc sub lret ret rol pop aaa enter rorl mov mov sub fcmovnb cmp pop pop add sti ja or or add jge (bad) jno dec into push add dec inc test jne int imul inc dec add pusha jno arpl push inc mov push jbe jae je fildll mov lock aaa or mov add movb inc inc cmp jo adc fcomp adc push enter rcll mov insb je test or push aad jb sbb aas roll mov lds inc and xlat mov dec mov dec sub imul adc cmp rorb je push lret out pop and push dec (bad) mov mov aam push loope std or dec out cltd pop mov cmp les pop clc pop test mov push cmp scas movsb rcll je dec cltd add mov mov dec dec iret adc xchg orps cmp mov or push pop lcall dec mov pop mov push in adc fstps mov popf (bad) cmp daa pop and add jo mov mov or adc aam xchg pop push test je or inc mov cltd jno or in sbb fsubl sbb inc push inc inc fild push xchg cli rol ljmp cmp addr16 incl inc fild inc jno xchg sub add add mov int3 stos pop add mov lds push add imul or sarb sub fsubrs iret add loopne push cs cs out sbb test fsubp ss push xchg dec add jmp out cmp cmp pusha jmp xchg (bad) add add mov loope mov jnp cmp data16 jns xor fisubr test loope cmp mov fistl and sub ljmp addr16 mov xor xchg mov push jnp and sub add cmpsb push add cmp mov add sub int3 daa fdivs jg je or es mov pop inc xchg fildl inc daa cmp inc sahf popa iret inc mov sbb and rcrl or addl fs loop pop jmp inc xor pusha in pop repz or push mov mov xor cmpsb test push sbb movsl push rcrb into subl sbb addr16 fcompl je xchg mov inc loopne nop lret sarl xor cmp arpl jae or (bad) jne cmp movsb (bad) (bad) imul nop push add add movsl xchg sbb jge pinsrw xor stc sub into movl and adc inc dec and ret cmp mov mov roll fnstenv ds (bad) or clc xor (bad) leave push pop mov pushf stc fs push jne dec (bad) xchg mov mov add mov jl sbb add shrb pop cmpsl and add (bad) add dec push outsb sbb xchg inc lds ja xchg sbb addb xchg rorl subl push lea addr16 mov inc daa jmp inc arpl out mov mov mov push sub inc fisttpll jo sub pop or push mov lock les jecxz in dec sub xchg add je mov aam (bad) sub mov xor (bad) mov mov ds aaa sbb aad les lret push shll movsb or popa hlt mov mov add pop add dec mov pop dec jp cs data16 mov pop inc sbb lods mov out mov jno movsb sbb mov inc or test cltd lcall xor lahf dec adc orl push adc dec sub adc add inc leave arpl jp dec or call popf push movsb adc sbb jbe xchg xor dec push iret test sbb loop lods mov pop cmp xor mov adc add xchg lret loope push (bad) push repz xchg sub mov push test or mov push xchg test in inc mov dec mov mov pop xchg xchg scas daa xorb sub add sbb lods xor lar adc push fcoml inc pusha add xor pusha xor test imul cmp adc (bad) dec andl push call mov push inc dec add xchg daa fs hlt push in subl mov jg dec push xor addl int3 movzwl push in inc popa inc mov (bad) pop or or jl sbb sbb xchg movsb scas dec lahf or push cs pcmpeqb iret jo cmp xor inc aas cmp adc sub movsl and adc sbb imul mov clc stc pop sub adc sbb fnop nop rolb (bad) push sbb push and pop inc inc cmp fcoml or and or adc (bad) push xchg clc xchg (bad) int sti call or adc (bad) popf xor push cmp jne add repz adc dec test leave adc sub mov mov fwait add les push cmp fsts cmp insl dec mov lcall inc inc sbb shrb aas mov imul sti (bad) push rol sti fist in lcall stc adc outsb add (bad) and dec in lret push dec es add insl dec jmp das test (bad) adc xor sub cmc jmp outsl notl push jmp (bad) and and adc mov ficom lea sahf fwait inc inc test test xchg jmp sbb into add fs or push xchg imul dec stc bound arpl sub dec pop hlt inc cmpl cmp mov sbb sub sub clc push fisub sub pusha xchg xlat lahf insb adc mov aaa fucomip cmp andl loope arpl pop std outsl xlat push add jmp inc mov xchg xor jmp rcll jp or scas insb and mov (bad) inc adcb pushf jo cmp xor pop xchg dec lahf mov cmpsb sbb or cmp push xor add je (bad) xchg nop lock dec xchg xchg loopne and gs test mov popa lret cmpb loope frstor lcall jne xchg fcoml stc shl pop add jns jg inc pop insb insl push add and jo mov pop push or repnz adc inc inc pop daa addl fimul jle mov mov loopne or add sbb inc dec pop dec popa ja sub clc nop inc mov mov lds or and loopne jmp fildl mov mov adc jmp add mov bound into sub inc sub (bad) xlat cmpsl pop mov inc fsub or pusha roll inc push mov inc (bad) decl jl repz mov mov dec mov jge sbb jmp cld repnz mov lret dec sub pusha push test fildl push push jp cmp mov dec and add push adc xor addl js mov insl lret or rcrb add and xchg xor loopne pop sar mov clc jge,pn mov sub cmc shll xlat test pop push jg orb rol adc mov and mov jns idivl sub pop inc sub mov lcall xchg jbe mov in pop mov ret popa inc push inc decb sub mov mov cli push arpl je inc pop ret inc mov loope cld jo cmpsb faddl (bad) cmp iret clc rcll push jmp mov adc jmp dec add or xor stos mov into sub mov and push mov in mov mov or mov fadds or xlat jo or icebp xchg push xchg push (bad) scas insb mov test cmp fldenv sub repz or push out loopne mov push fisttpl imul or aam mov sbb (bad) inc or mov add (bad) sub push pop mov andb int3 insb std sbbb sub nop lea xchg daa dec or out xor jmp jo,pn xchg enter cld loopne pop cmp test es mov cmp cmp andb js mov int test mov adc xchg mov xor pop out faddl mov aaa rcrb dec (bad) push push mov fcoml add mov add cmpb xchg dec fldt sbb jecxz iret jl (bad) xor push push lods push mov push sbb inc pop xlat lret nop push xchg xor dec xor jns je adc lock xchg pop repz sub or xchg (bad) negb nop push sub fsubrs sub inc sub popa maxps pop jns jmp pop or mov or push add scas mov inc adc jl add in push cwtl adc jo in movl fwait shlb les aaa and mov shlb xchg jmp lods ss pop cmp sbb inc cmpsl mov xor (bad) mov add sbb dec ficoml sbb xchg dec pop mov xlat sub adc mov push pop in add pusha daa dec test or push dec or push sbb xlat dec cld outsb inc jbe cmpsb std cmp je test aaa lds pop mov adc push rcll add sub popa insb enter mov imul xchg mov imul dec xchg decl add nop lret int3 enter inc add inc sub test data16 sub add jmp gs or add add add lret roll push int3 rorb bound push ret cltd jae in scas (bad) mov add test mov test popf or fprem xlat pop xor aam (bad) xor sub add push in add jl mov test fsubl sub add pop pop jg add mov mov cs dec mov mov push xchg push xor push scas dec pop add bound cmp (bad) and pushf pushf fmull xchg nop mov test pushf pushf je insb push fs pop pop nop daa (bad) mov xor mov scas and add dec or inc fisub mov sbb push dec cs and pop aaa add or sbb mov push inc adc lcall dec jo or or dec js into jbe jo ficompl add sbbb push lds insb enter cmp les inc xchg mov mov jns ljmp test rcrl fnop mov shll pop jmp xor pop sub sub add push cmpsl pop mov or mov fidivrl add and pop or out jno add dec pop inc jecxz mov cmp add sub out fiadd (bad) dec nop push add add scas repz inc push xchg lods mov orb mov loop or js hlt jno and adc xlat dec push add push dec pop leave test in lea dec push and pop dec pop pop nop pop add xchg pop ss gs push mov jb sti add fsubs mov arpl or jo jle inc nop add sub inc cs pop push sahf fs xchg mov jae mov xor dec xchg out dec ja add imul xor mov add or imul pop pop sub xlat add arpl outsb xor das cmp add sub mov faddl jo outsl xlat xchg insl nop xchg je loopne (bad) in sarl int3 push dec aas test fcoml rcll xchg push (bad) xor lods inc nop pop pop sub scas ret push daa mov sbb inc or les nop adc lds jno xchg xor xor cmpsb mov jmp orl cld jne ret sbb push add jbe adc movl add sbb dec leave add or lods cmp and (bad) ja lock pusha ja dec push inc pop nop pushf or pushf int3 fwait jb fdivl fldenv xchg pusha or xor adc shlb push add add js dec dec inc jno xchg cmpsl inc xchg push push dec roll mov and sahf or mov push pop andb repnz push sbb xchg out leave sarb inc lahf dec pop and adc add jae push add add add jns (bad) push add fsubrl loope outsb xor pop in add leave or dec je jmp dec call (bad) adc cwtl xchg (bad) jbe add lock mov into dec in mov xchg call jo push xchg pusha ljmp jnp adc insb cwtl push fs inc cmpsl fiadd pushf and sbb insb pop or cmp bound ret or push or jle jmp out sbb mov test out jmp popl enter (bad) mov rclb stos adc adc xchg cli jl (bad) incb lock sbb xchg arpl add push xlat cmp stos jbe pop push mov js dec sbb jne xor push mov fildl sub pusha pop in push fsin and insb add inc xchg (bad) dec sti repz push sub and inc nop sar mov sbb cmp mov cmpsl jno cmp add fsubs dec mov push sub test dec mov (bad) movsb mov scas inc inc sbb imul outsb add cmp rorb inc mov or outsl movsb xchg and push inc imul inc das or push xchg les or dec inc pop or add gs inc iret ror adc and adc cmp dec lods mov and mov and xchg xchg jl mov out inc dec mov and nop inc insb sub xchg sbb aam sub cmp sbb (bad) adc inc or inc int push cmp or ret in and push sub cwtl and enter (bad) cmp jmp inc inc xor push mov add test dec pusha dec leave inc add cmc dec or popa push std dec int3 push fwait push add adc jno mov xorps jge push pop mov xchg aad movsb test push push into test mov inc add xor mov scas sub inc cmp or mov inc add pop add jle aam mov and orb mov adc push adc daa inc cmp pop and push xorl xor jnp mov movsb mov inc push or data16 in push inc or nop inc pop pushf jg lea add andl mov jns sub addr16 inc and fsubs je (bad) dec xlat mov mov jp je or loopne push xor xchg mov iret insl xor cs ss fwait xor sbb bound fwait push and sbbl add fmuls xchg mov (bad) es out mov sbb lods popf ds fildll push push sub sahf xchg add lret jmp push dec outsl js mov mov jno cmpxchg mov shll pop xchg inc popf pop ret xor adc add dec fildll fsts nop out add mov add (bad) xchg or nop cmp xor dec and ds icebp inc push xor pop (bad) cmp jno pop pop lock push mov mov dec lea or inc jg pop lahf or es (bad) test inc inc popa dec lods pusha cmpsl loope adc push push jns push loopne xor jge push and mov or test imul fs dec (bad) into rorl popa sub aaa fisttpll push cmpsb ss mov sti push pop dec add mov or out loop ret aam jbe (bad) imul xchg nop lahf and mov push ja mov loopne rcr scas and sub (bad) out add fs orl ja push jmp cmp jmp pop enter mov sub arpl push xchg lret andl or and dec in lock test lret inc (bad) jae pop push out xor jo leave leave in xchg cwtl xor int xchg sbb in aad mov mov insb push mov insl (bad) mov and ret and xor int dec js cmp push rcll sbb mov xchg hlt and adc sub out cmp mov inc ret fstps mov pop andb mov xorl add adc jne inc js xchg push jne (bad) jmp sbb dec cmc aad add enter shrd sti push dec cmpsl add lock sub daa aad push adc xor decb inc xor cmovae mov mov sub outsl or jp scas xor adc xchg shll xor sub sub leave xchg fidivr out pop and pop sub cltd fsub adc (bad) push pop (bad) jg mov and push xor lea or jns jle jg js cmpl jp jns mov andl movsb xor outsl aaa dec popa mov add cmc pop xchg add dec mov repnz sbb xchg push out jmp pushl push xor sub xchg jle inc push addr16 push ss shl mov adc xor pop aam loopne pop es test out sbb lidtl fs jp mov jmp iret adc xor or movsl std mov in or xor xchg shl dec add pop js mov mov or sub xor dec and inc mov enter mov ds mov imull inc jb inc sub add std out inc adc dec jne jg fsubl les adc pop popa adc arpl xlat push push push das push xchg frstor pop cmp and movsl ja test push lea sbb pop les mov pop movsb xor mov jp andl aaa (bad) arpl adc pop sbb mov push subl mov (bad) mov mov and push nop sub fmulp jle repz cwtl ljmp faddl jmp pop dec jmp data16 dec hlt mov push xor jge xor scas addl adc cmp xchg sarb cmp or inc es f2xm1 jp jg fwait xchg js (bad) xchg hlt jp mov invd sbb cmc and push test nop pop ja es dec cmp add ss aas mov mov and mov fmuls mov clc push cmp dec addl xchg ret loope xchg xor sbb jge inc mov mov aam xchg xchg jo lcall add orl jae inc dec inc pop scas movsl cmp sbb add and mov sbb mov mov (bad) lea (bad) pop aad aam mov mov mov aad sub cwtl push xor xor jno inc pusha fbld add inc sbb mov fcoml jne test jmp jmp xor inc ret and push (bad) out adc adc leave cs add rcrb es xorb push and push (bad) mov rcl pop bswap cmp push lcall push inc nop out movsl dec sbb sub sub enter sbb bound scas das jle mov adc lods sub loop push mov rorl or cwtl mov pop popa adc adc mov pop xchg inc sbbb mov fsubrl jge nop lahf mov lahf jmp or add and xor pushf mov sub push jae sub or and inc cmp sub pop icebp inc cltd dec insl dec or cmp xor jbe push sarb cmp jae movsl ss and loopne or bound mov cmp push push jnp or (bad) shlb dec fildl mov mov movb push adc icebp (bad) bound clc cmp xchg mov adc xor popf in (bad) or pop dec jl push xor ret or jp pop inc imul fwait push mov pop jmp jnp rcrb lock or loope push nop dec pop mov inc push mov arpl xchg mov iret jl mov (bad) mov fs jge and inc cld xor inc jbe ret outsl js sbb or sbb and daa mov in ds jle cmp movsl and movl or push dec sbb inc jle mov cmp or cmpsl push movl in dec (bad) adc pop shlb sbbl nop xchg bound dec fistl fdivs jbe mov or xchg xchg roll adc imul ljmp adc call stos jb add shr sub cmpsl or inc dec sbb addr16 cs daa pop repnz and xchg cld dec dec stos sub push or or enter mov inc aam je xchg cmp lods in imul xchg bound fisubl push and mov or add mov outsb xor pusha or js push test inc xlat pop xchg pushl mov mov jle xor movsb inc mov push mov js dec jge mov xchg pop ret fwait pop sub mov movsl fnstsw shrb mov mov (bad) rolb hlt xor inc inc push push and xorb pop adc sub aas gs hlt cmpsl dec fwait or or out loop add cwtl xchg xlat add push decl cwtl or or hlt xchg andb add insb les dec cmp add in or add push add jbe loopne nop div mov test xchg sub add pusha inc and adc xchg dec add pop das lds push int3 xlat mov lea arpl pop test je dec jno dec adc fcmovbe imul hlt sbb cwtl cld (bad) setns ret push inc icebp divb fdivl xchg lock cmp inc jb stos cld adc push test std xor xor aas or sarb inc push add test test outsb push xor insl pop clc sub inc lcall xchg data16 sbb xor dec sbb test push (bad) hlt clc pop mov leave hlt sbb jne insl and or test push aad cmpsb scas cltd inc push xor sbb sub sbb mov (bad) mov cmp das xchg sar aad frstor ret xor fs and jle or xor jo mov mov lock adc sub dec je scas sbb push test jle lods call (bad) hlt jmp dec pop xchg push fstpl aas xor mov inc add push push loop mov add iret add inc dec leave sbb enter adc js or dec lahf sub pop cmp fcoml jb inc xchg cmpsl (bad) xor add mov nop/reserved cmp scas push mov stc pushf mov mov stos aad loope and xchg or out jne mov cmp add add inc sbb or jecxz popf cld mov test (bad) mov dec insb inc xor lods mov and mov push sbb out fldl mov xor jne packsswb mov loopne xor test xchg pop pop lret xor mov and ret test test (bad) and imulb sbb (bad) xchg lods push ret nop loop,pn cmp in cmp dec (bad) ja sahf in outsb and js cmp loopne sub add aaa dec mov scas dec insb sub xor or mov mov test push mov sbb dec fwait pop and and pop or inc xor xchg fs adc push xchg mov push add movsb movsb scas add jno inc adc addr16 lock push fisttpll xor (bad) (bad) outsb pop cmp mov std mov sub jb xchg add aaa test sbb movntq xor repnz mov push movsb sub adc imulb or add icebp (bad) in sbb sub lods enter jo shr shl add repz add nop push (bad) mov xchg or rorl or nop cmp lret loope adc adc out test mov jp inc add adc push sahf inc dec sbb lret adc repnz dec outsl ss test add pop fnsave gs sarb sbb push in push test adc push mov push arpl mov pop mov jo add cld sbb mov add inc loopne pop (bad) ja jne xchg push stc repnz orb mov and xchg insl inc sub rclb dec add lock push pop inc or push out shrl (bad) xchg faddl and jmp or cmpsb mov dec into adc adc xchg dec mov js inc inc pop mov dec cmc mov loopne add je data16 and or (bad) pop add mov mov ret loop test test mov icebp outsb pop sbb pop mul imul sub shll call xorl push push push mov push push mov mov fsubrl inc inc mov lds adc nop cwtl stos pop pop shrb push movsl cmc pop repnz mov sbb xor iret dec cld sbb adc jbe pusha xor arpl leave shll push inc pop or push pop add pusha push rcrb lret test mov push cmp add jmp push sbb addb insl dec insb ss adc loop test pop inc adc xor hlt data16 push inc inc sbb ja pop and xchg xor lcall and xlat pop cs lret add jmp adc add sbb adc in insl test cli lods inc fisubrl out ss push pop and xchg nop inc adc dec add jbe in sbb push (bad) mov push add in or mov mov test cmp dec sub fisttpl inc dec cwtl sbb (bad) out jno inc add sbb lds (bad) xchg add lods mov rclb or cmpsb push xchg arpl lahf mov mov add dec fild or cmp ret loopne jmp or inc add lea xchg sub subl xchg mov and push bound andl add push movl adc cld jbe inc clc lods cltd push cmp je add aas push lea jge js xor aas sbb mov nop sub and inc add fwait rolb add cmp in ss lret add std pop addr16 dec int3 inc cli or and popw insl mov jl lcall outsb imul popf out xchg mov jo,pt add cs in inc push mov loopne jecxz aam jmp pop fidivl inc push adc adc ret sbb push or dec add inc add and add jg dec add test decb test inc sub sub mov mov (bad) les adc add push dec scas mov pop inc sbb stc or insl ljmp (bad) (bad) in aam decl hlt (bad) xchg push xchg xchg or dec gs mov fwait add arpl test add pop push push mov cmp xchg or popf or add xor fnsave js in outsb ret scas pusha sti add clc repnz xor out inc jo adc xor jp jno dec out pop rorl pop int3 movsb jno gs mov pop and and push cmpsb or pop xchg jne movsb xlat or icebp xor gs inc dec stos xchg ss les add inc xchg jmp pop imul ss add or and pop call mov mov jmp in icebp or xchg and or arpl and icebp add movl cmp mov lea push loope call pop stos and sbb lcall (bad) jb mov mov ret lea dec cmp ficom xchg and inc jbe pop mov aad out sub cmp cli or lods push xor lcall xchg cmc mov jae or inc test add add adc movsb pusha push out arpl in rclb lea test mov fnstenv add jp lods cmp or add pop and sub or inc or int inc adc pusha add and pop (bad) js or pusha sub jmp push sbb lea fldpi mov jo sbb inc jecxz mov pushf cmp int xor sub movzbl push xor or sbb add push adc add ja in fiadd insl std push add jmp repz fimul and fistl push sub mov inc inc or jne xchg (bad) stos in dec jne sub stc jp xor add xor add je or push jg hlt push add or xchg popf sbb cwtl clc rcrl or lock push jmp push mov scas lea add jmp leave int3 adc adc add pushl rcrb add add cmpsb cmp repz outsb or test mov xchg inc stos mov mov inc pop fisttpll cld fmull push fildll add into popa add cmp loope pop addl dec jne mov xor loope inc xor push popf or lcall cwtl xchg mov and mov mov fldt inc mov (bad) outsl mov or inc fdiv add mov inc mov ret xchg jp insl loope loopne mov fisubrl in add or xchg mov fwait mov jo cmp pushf scas inc aaa xorl aam imul in out pop jl sub scas mov iret cmp mov subb sahf inc adcl out arpl repnz cs xor xor jmp inc push mov cld sub cld mov loopne stos mov mov in fimul or mov mov sbb lret cld jnp sbb xor arpl jne and pusha or arpl jecxz (bad) or cmp popa pushf popa and mov push dec jbe adc and cwtl push add outsl xchg xchg push jo out int3 enter mov movsb mov xchg call (bad) in cwtl int3 add dec ja addl pop arpl fiadd add cmp xchg inc in fiaddl stos and and add rcll push sbb mov add sarb fisub inc test int3 pop push gs imul xor push xlat mov push mov in adc in lock mov call mov (bad) shlb mov push pop xchg bndldx jle lods call movsb out movsl cltd add sbb fldl push mov jnp and popa in mov sub pusha inc mov sbb insb mov mov add ds stos adc jne xchg push and stos sub lods movsb lods xor push push and fsubrs adc mov push sbb pop inc fbstp adc mov mov xchg add push (bad) mov or push decl sub push dec sub pop adc cltd add cmpsb adc sbb rorb mov aaa add nop jne and or cli mov movsb stos adc inc sub fsubrs jge mov mulb scas mov lea mov add and pop pushl fsubr das imul pop ud2 inc xchg pop adc sarl inc cltd je push and dec and call shlb xor cmp arpl add movsb adc mov lret jmp xorl loopne rcrb cld movl or push rorb inc js adc cltd leave ljmp sbb nop inc push mov je pop incl stos call mov call jne xchg push cmpsb mov adc xor xchg and dec daa test sarl dec sti sbb cltd ret cmp xorb (bad) or fldl aas and jg mov dec push ds cs aas test insl aam repz dec xchg xor je sub inc mov loopne cmpsb lret cmp movsb lea cmp fs sbb and mov lds ss mov pop jmp adc and jmp add mov pop xchg into sbb push push mov jo jno clc mov cmp mov rcrb sub and movsb xchg int3 aaa and loop data16 sub xchg dec add cmp add mov inc ret mov add ret jl xchg fwait pop dec push lea add mov cmp adc push xchg inc dec push in fsts and cmp mov outsl or mov sub (bad) in add push add cmc jmp ficom stos add movsb add push adc xchg fmull iret jns push cs xor and leave add (bad) stc lcall xchg cmp adc or mov (bad) (bad) pop in fs cs adc mov nop js daa data16 jno fisubrl push aas sbb sub add pop cmp imul dec push sti inc mov adc xor lea xchg push mov xchg lods (bad) mov sbb out adc cs xor ret aas adc xchg pop adc push adc loop roll shl mov (bad) and or and xchg inc mov jecxz fmul repz push imul cmp xchg jae mov pop movsl lret push push rclb mov sbbl push out les dec mov in and push sub clc mov mov and push pop ret sub dec lret sbbb aas mov mov jg,pt mov repz insl lahf test in invd xor jns inc xchg sarb aam insb mov cmpsl nop mov stos popf dec ror (bad) adc outsb pop fldl xchg test ficomp inc push sub (bad) and inc nop dec adc vdivsd movsb lret inc fmuls faddl jo call jns int (bad) loopne into inc into repz inc testl mov push dec clc dec aam jne iret push int3 sbb mov jle lods jns cmp call mov push push andl js push sbb pop add mov and push pcmpgtb jge lret pusha cmp popa das and aaa add inc push mov and sub mov popa stos imul mov aam in cmp lahf push ret nop mov sbbb mov push inc pop iret dec and sub test mov clc clc and stc rorb add mov pop leave xchg mov roll xorps int3 in mov dec sub clc inc ljmp or jl js jae dec iret js jns jns ret add dec pop ja lret xor jno xor xchg je xchg xor or dec xor xchg xor lea andb ja outsl (bad) pop fs (bad) adc ja popf cmpsl sub jno popa xchg or stos ss cltd push add add shll mov jo nop dec or mov add dec dec aaa mov bound mov or add pop test add add fsubr (bad) push movsb loopne adc sbb sbb jbe nop inc push jbe sub fs push sbb xor cmp and jo clc mov repnz sbb xchg rol or xchg add jl ss push daa adc push adc push push fildll fdivs fcmovne or xor adc fsts adc push sub and (bad) add sbb sbb inc pop xor scas push adc scas sbb test dec pop jg loopne mov or add repnz out mov sub std (bad) scas sarl sub dec sub clc mov sbb loopne mov pop and jp,pt or es jmp adc or outsb mov test orb sbb or add add leave orb cmp adc xor push jl jmp icebp aaa test jae sbb inc xchg sub aam popa js cmc (bad) cmc fnop stc sub popa js fst cld (bad) sub push inc dec repz test dec loope rolb mov adc loopne das ret adc jmp pminub xchg xor movsb movsl popa cmp frstor in nop inc push cmp or jmp and addl push jns dec jbe jo fdivrs lcall xchg (bad) dec sub dec add call pop pop pop and xchg movsb cmpl or and addr16 test test out mov popa ljmp jo dec js ds push push or sub dec or xchg leave aad repnz leave gs or inc sbb aam jno xlat cmp xor fs fnsave mov pop or je or sbb and push mov jno cli pop push or in push (bad) les adc xor and push pushf movsb mov test pop sbb (bad) push je dec fwait shlb sbb ljmp dec mov pop mov sub daa pop pop mov adc nop inc adcb in inc and sub lock adc xor movsb and push pop call dec insb inc mov orl mov (bad) mov sbb out xchg cmpl pop sbb xor cmc sbb mov push sub jb nop (bad) iret or fcom mov inc sbbl pop jg (bad) (bad) xor mov mov sub mov and lods push (bad) ja aam jmp jmp les xchg fcmove in movsl or adc shlb imul popf adc fnstenv int and sbb dec cmp add lock adc clc insb jmp push mov outsl fnstsw adc or pop add push push int3 push and xchg and sub roll sbb adcl out xchg mov aas push and push pushl push scas pop inc pop sub add ss xchg daa or fcmovb cmp push ffreep testl add add inc or pop (bad) mov insl or out dec (bad) mov das adc sbb jecxz push ret lea cs dec or push fadds dec xchg or pop inc ret imul adc inc movsb push xor inc push loope incl or xchg jno xchg sub jmp pop mov dec orps cmp mov and iret ljmp push jp jg cmp mov sbb add rolb adc xlat aas scas iret xchg cs push movb iret out stos add dec js outsl mov sub add fisttpll nop sbb rcrb dec leave adc scas inc cs cmpsb xchg push pop dec mov sbb dec sbb inc fcmovu enter sub sub clc mov stos sbb adc sub push mov sub inc adc cmpsl mov jo mov outsl xchg cltd push push cltd dec xchg pop inc jne sub test imul mov fstp xor xor dec push push jo ja in lea ds enter test inc pop jmp mov push in or push jge rorl gs fimull or sti lcall sahf mov inc and cmp dec adc pop rclb pop xchg mov cs sbb sbb jae xchg js jmp fsubr rcrb outsb and scas mov push xor mov fsubrs insb aas (bad) int3 js mov nop sbbl test call push adc idivb test repz mov mov or aaa js push push add jo adcl xchg cmp add or xorl adc cmp adc sbb mov sub inc pop pop daa loopne flds lods sbb orb push fs xchg inc into push lods test icebp nop enter (bad) repnz sbb orb addl pop push je cmp sub fsubrs outsl jo jl das sbb xor add cwtl mov add mov add sbb movsb mov sbb out inc inc push fs push pop enter je adc outsb mov mov outsl in nop fildl inc sbb subb add or sbb mov fidiv pop aam mov push loop push push pushw jae iret repz cmp aad sahf out sub cs out (bad) push call negl shl hlt push cmp jnp add push leave (bad) push inc push popa repz rep jnp xchg mov scas mov push xchg push out sahf out sub jns pop loop add xchg mov push scas mov xchg incl je adc adc add xor imul (bad) mov ss push arpl inc dec ficom pop sbb pop mov lret pop enter repnz xchg bound push outsb fstps push fdivrs fimull lods push ljmp out lret pop pusha fild es das and cmp inc sub pop sbb cld ret add and iret and inc mov inc cmp out inc and and pop or dec call push mov loopne pusha sti loopne mov sub inc dec push inc out xor js cmp mov push xor sbb and repz test push jo enter jnp sub mov test adc sub int clc inc stos sub push push xor nop xor out ds incb sti pop cld test addr16 lock movsb or and jmp or pop cmp xor ljmp add push mov push or scas cs mov mov dec das lods repnz jl je lods bndldx xchg mov fisttpl (bad) cmp push inc outsl ffree dec add insb rcll adc in pop add ret cmpsl mov ja sbb pop sub test pop dec push call adc daa sub addl add push push jg dec (bad) mov adc enter sub pop jmp and addl addr16 pop ret aaa sbb mov push inc leave out nop enter adc dec jl jle sbb sahf mov fcompl sub pop adc and outsb add sbb cmp mov cmp jb and int mov cmp mov das mov rclb or xor movsb in lret and (bad) not xchg shll shll mov test je adc cmpl xor pop std aaa mov and testb cmpl mov or add xlat sahf lock sub xchg nop xchg sub fwait data16 inc adc cmp pop or dec leave popa mov and lcall pop pusha mov movsl add cmc js push out xchg adc es add push jp jge adc push ljmp mov mov mov sbb add xchg repz addb in rcr call xchg idivl sbb xlat jl fdivs xchg pop add sbb or cmp stos test inc adc pop xchg adc data16 pop arpl rcrb jecxz loop nop out pushw jno or mov inc (bad) fnstsw mov gs cwtl pop push fcomps inc js or pop push nop ret fidivr mov ret jnp xchg daa cwtl adc push inc ja shr xchg addr16 pop sub push pop test xchg mov hlt push add call dec and aaa xchg dec cmpsb sub inc cvttps2pi pop xor dec ljmp jmp jecxz and loop popf push cmp xrelease inc std clc mov mov mov sbb adc lahf addr16 pcmpeqw nop dec aas or jns enter jle ds push int pop mov cmpl sub adc dec pushf push dec add aaa addb rcll fs jne mov lret loop push stos adc loopne movl push inc pusha clc (bad) mov movsb jns nop pop sub inc push mov rolb pop cmp cmp hlt add shl mov add sarb push js xor pop sbb in in or push jl mov or in jne insb adc ljmp inc aad xor add sbb lds push or xchg xchg jno mov jb jno add mov push mov add cmp gs xor pop ffree xchg push push inc movsl add jb inc mov hlt jae fmuls add (bad) adc xor call sbb jne and test push mov test nop cmp pushf mov xchg xchg je sub sub movaps jno aad aad movsl and test fisttpl and push in adc xor mov in popf cli add mov jbe,pn add xchg push shrb (bad) ljmp mov xchg push mov xorl mov test out jle push xchg sub jle adc pushf testl xchg cmc adc aaa or push aaa cs inc mov leave or sub inc sub mov enter or sub mov mov jno jbe lock sub pop push orl and xor xor mov dec xchg dec dec nop dec cs adc mov rorb sub adc jnp mov test inc jecxz inc jmp jae mov pop dec add mov jns jno xor add pop cli cmp je inc cmp jne shlb sub xchg jb pop inc push adc call pop and add pop mov stos (bad) ret add pop cmpsl les sbb xchg in dec call mov jno ret xor pop mov mov jle jno cltd or sbb or sbb mov cmpsl (bad) inc or ret leave nop incl loop mov jmp xchg pop dec xchg lods iret xor andl mov add push push mov sbb stc mov dec lret jmp xchg ljmp daa push (bad) lods adc cld mov leave mov push addr16 js inc or push cwtl fcmovnb push and es jb or inc rolb push adc jne call and icebp sbb sbb pop dec nop mov lret and mov in incl nop and mov cmp ja mov in dec add call lods add dec pop jg push mov call mov pop inc xchg add aaa fs jae jge pop lea pop nop jmp mov imul pop hlt (bad) in lahf insb inc jo in test jo adc push adc in js dec push mov sub pop movsb xchg test adc cli or xchg jecxz inc (bad) push cwtl mov add cmc add js inc pop sub xchg imull jmp aas push add adc inc test imull movsb test rclb inc push nop dec movsb sub fwait jmp (bad) aaa dec adc push jmp scas add jmp outsl inc inc movsb adc sbb out ds push and daa call inc push (bad) fisttp cli inc cmp or pop pop sbb fistpl push dec lea xchg inc es and cmpsb add loop sbb dec repz adc je movd fwait cmpl push mov daa pop push fst in sub pop js lock push xor add popa or mov mov loopne test fmull dec movsb out sahf push cmp movsl movsb pushl sbb test jne mov inc test add push pop rclb or pop or dec push gs jne subl mov and pushf inc punpckhwd or pop xor das and adc orb lds test (bad) out pop xchg insb or cmc roll push mov push pop sbb adc xchg imul dec mov xor pop pop jb push imul int add (bad) push adc mov gs shl add mov ret add out repnz mov lock stos inc movsb imulb push xor rclb mov adc mov stc adc pop xchg ret sbb std fstp les jg add jo push xchg jle jne xlat adc sbb jae mov and xor js mov push movsl or sub and je push xchg jg lock mov outsl jb and test popl popa and test cmpsb inc jb jo add xchg add lods jne dec mov or adc mov jp add lods je mov sub xor jo or mov jno mov xchg roll leave sbb jne jg test and lods jmp adc or data16 adc rcr rolb adc mov push divl xchg popf hlt icebp inc aad push push cmp enter clc dec test addl jo inc push sti icebp mov cvtps2pd repnz or lahf int jmp addb leave in pushf mov add ret dec inc stos push leave push xorb and mov test add xchg push mov push inc jno pop lret pop and fnop in in sub lock cmp rolb dec enter add push or sarb roll or pop and dec add insb pop arpl sub loopne xchg sbb inc enter repz adc add out leave dec or sub cld repz and xchg add scas mov (bad) cmp sbb sub or mov jbe inc jecxz popf mov js adc je hlt xor jg lock jg hlt (bad) dec inc or nop xchg pop pop sbb pop cmc add fidiv loopne pop das push cmpsb cmpsb mov dec push push or or out and data16 jp jns jl cmp movsl inc repnz clc es pop clc sub xchg je sub and mov jl fdiv xchg mov insl xor jp inc pop test cmp jbe in mov aad inc icebp jbe mov addr16 mov mov sub mov pusha lahf add dec adc xchg jbe sbb and aad insl lock sbb mov (bad) or adc pop push sub je and pushf cmp jg mov out lret aad xchg dec imul sub aam xchg xor pop pop shll outsl shr cmpsb dec ljmp pop subl loopne adc rclb inc sub sbb add or fistpll sub fcoml iret sub adc sbb inc or loope inc or ja int xchg jle jl adc xor mov inc push dec push fs sbb adcl inc push (bad) mov test xbegin cs fsubs clc pop sbb les les cs mov fcomps adc mov adc clc xor inc out fdivrs shrl clc jbe inc sub and inc lcall sbb pusha xchg dec dec mov or jne mov and sbb mov mov and sbb and pop fildl xchg sbb and sbb push ret bound inc add mov iret add push clc xchg les dec cmpsl fcompl lds sbb or (bad) xor outsl bound push sub dec aad dec pop popa sbb sbb cli and mov cmp or movsl movsb out addl pop enter dec pop push dec xchg push push xor ror mov lcall dec jb add sti or xorb push test cltd jmp bound jns add js movsb push rclb xchg inc loopne xor aam outsl dec hlt xor rcl push push dec cmp jecxz out adc in mov jbe dec pop jg in fdivs cmp push test mov lret fwait mov stc mov xchg push insl data16 std es add sub xor xor js pusha or and and lcall lret iret adc xor inc std inc xor inc mov cwtl sub xor cld aaa rolb sub sahf sahf popf mov push or (bad) and and subb clc inc lock call (bad) jmp imul je lods xor adc sbb test (bad) lods orb cmpsb inc pop jo add add add mov and pop ja sub cmpsb cmc repnz clc gs cmp and sbb and imul pusha pop roll mov mov jl jbe mov testb inc inc add mov inc mov fwait inc inc add xor incl pop add jmp flds fmuls fucomi popl fdivrp movsl add inc add mov rolb pop dec sahf add inc lahf or add iret inc xorl aad aad jne (bad) add mov push lods jns enter enter adc dec xor mov add mov (bad) bound ret add imull cmpsl shrl adc sbb shlb mov xorl push cmp rolb dec dec movsb enter mov add pusha push scas or xor mov mov sbb or (bad) out aaa orl dec push std test inc inc sub lods popa xchg cmp push adc nop and pop xchg outsl add test mov imul adc mov pop sbb xchg or fstpt ret xchg xlat aam push fbld and inc mov lds add mov mov sbb clc jle cmp outsl mov negl inc and lds jge dec and jo nop mov lahf daa dec pop xchg xor sbb add jg out pop pop push push add push push aaa scas add pusha aam stos sbb or nop (bad) xor xor shlb mov in xchg fadds (bad) fild push aam fucom cmp es pop nop cmp repz insl aas and loop jo mov repz inc lahf mov pop mov movsb in xor jecxz jnp repz mov nop dec adc sbb pop mov sbb jmp in push ss dec ret and inc addr16 testb adc xor jb xchg ret and dec pushw and add pop adc mov or or jle or (bad) pop and jmp xor push sbb loop pop or sub xor or mov mov cmp cmp dec jae int3 loope pop sbb lock (bad) loopne loop and add inc ja mov fs jmp addl (bad) mov loopne and and sti cmp dec dec push cmp mov dec xchg scas lock sbb pop mov push pop sub dec jne rcll xor mov adc mov sub ret or xchg loop add fwait mov sbb and or dec add das movl mov ja sbb ja inc cmp sarb and fcoms sub adc in pop sbb or outsl inc and inc call add add push out pop sti add imul xor (bad) sbb in mov fisttp dec xchg dec insl in rclb into leave out out scas in pop inc xor in dec js int decl add sub pop fcompl (bad) xchg add lods jle ficoml pushf add push push add push clc dec (bad) inc aaa dec sbb add movb inc imul insl jo das rolb jbe or cwtl mov pop or pop add inc dec adc cmp test pop xor lret int int jno xor adc adc rorb push iret or rcr add jmp adc inc pop pop enter dec rorb cs adc pop enter mov cmp jo push xchg adc sbb mov je add cmpsl sbb pop cmp add jns add dec push sub es push mov or jb arpl fs add or xor gs cmp daa sbb js and imul cmp ljmp mov loopne cmpsl jmp jle fcompl fadd sbb in pop add push or clc aad into mov jb add or aam mov or push cld js xchg xchg call push ljmp cmp lcall fldt pop mov mov inc rcrl and xor cltd add rclb xchg or outsl sub sbb sbb cvtdq2ps lret repz test or lret cmp mov push mov cmp pushl inc js movsl shrb mov pop xor and sbb inc cmpsl imull pop xchg and push cmp jns out push push or or pop or or cmpsb push cmpsl test hlt adc push adc adc cmp (bad) iret jnp sub or or popf out cmp or or push (bad) lea adc movsb mov fcomps pop add lret int xchg movsl (bad) push mov pop iret and mov sbb or or pop and push jmp push pop adc dec adc add xor jle std sbb cmp into lea jmp pop add imul mov je pop dec or loope pop add hlt lea mov push jae or push aam xor lret push sub add jl aam and rcrl rcr jnp (bad) cmpsb xchg pop test xor stc testl add stos or fbld sbb in lea enter xchg mov es pminub or ret push or in sub or push dec pop (bad) in (bad) and push ja jns lahf inc pop mov movsb adc fcomip nop out or scas mov xor fcoml imul add mov jo and sarb fadds push jle cmp push in loopne dec inc scas test sub xor sub and pop and scas lret mov xor arpl rcll dec xchg pop (bad) fwait shlb dec dec into mov out adc inc test sub lcall outsl cmp cmp mov inc push or pusha xor in jbe (bad) imul mov imul mov in pop add dec loopne loopne movsb or jp mov add pop add fstpl fwait push (bad) ret out (bad) jne rcll mov adc loopne jb lret pop inc pop mulb call jecxz stos add daa adc sbb mov cld mov arpl push or mov ljmp push outsb add fdivrs mov dec jnp outsl mulb mov cld shr adc nop jmp xchg dec jne mov orl adc mov mov xlat (bad) pop fnstcw inc popa lea adc addb rolb mov fdivl add and sub ficoml push pop ja insb add jg or ja or jbe (bad) mov imul sbb outsl aaa mov pusha and mov xor mov push and test fistp jnp aad mov xchg or mov in inc int jp adc mov push int or scas dec pop push add add push xor adc cmp adc dec popa mov in or jo rclb dec pop jmp test int3 int3 push jmp nop scas push mov add adc adc sbb pop mov or dec or sti xor fcmovb mov faddl jmp adc sub xchg repnz stos movsb (bad) ja adc movswl bound add or dec push add or sub or popf pop mov dec in lods (bad) or xlat inc pop xor pop or sbb mov popa jo ja cltd xchg jae lods nop das pop and shrb mov cld or ret ss or rcll movsb push cmpsl daa xchg in pop mov push push hlt scas sub call push outsl clc pop pop add inc mov and daa and mov inc clc or jae mov in in mov or mov push xorb jp pop cmpsl insb pop xchg mov and pop cmpsl (bad) fwait out cmp lods and and dec and cmp insb insb dec push je nop int3 ja xlat and dec test fdivrs cmpsb bound add fcmovbe pop call or sub push test int3 pusha cld sbb sbb fisttpll or mov dec dec cmp ja fiadd adc push inc mov or or fiadd (bad) lock add pop jae and dec mov mull push pop cld stos sbb leave adc inc fbld add nop or outsl into movsl and sub and insl lret ja ret das push jbe cmp push push mov or push int3 pusha fldenv fcomp jge incl (bad) addr16 jb mov imul insl inc push add mov cmp call jo sub dec add xchg sbb adc les hlt push adc add or cwtl push adc lods nop add addr16 and add inc lahf call pop xchg orl push mov fildll nop outsl faddl insb cmp fcomp aas cwtl sbb or fnstenv push in ja cmp mov push cltd jp jno inc sbb and sbb std imul les repnz add cmp stos dec or inc jns sahf leave sbbb mov and mov lods (bad) inc mov mov pushf xor dec or mov fisub mov ja mov and adc and add jns push daa sub mov dec add cmp int3 (bad) mov cmpsb push and xchg andl rcrl pop (bad) mov arpl push enter mov stc andl and aaa in repnz push pop pop inc cli test or adcb inc inc jle or mov mov mov xchg or dec das pop enter pop pop jns jns movsb adc add cmp xor jae loopne xor imul xchg and push sbbl inc dec mov adc pop clc (bad) adc inc push dec or je jbe and add jmp inc into sub sbb dec sahf mov pop rorb in (bad) call enter cmpsb push test movups dec dec ds xchg cmc mov push scas pop test dec push adc enter and es pop dec and mov sbb cmp sbb fmull ss clc cwtl sub das mov fstpt sbb bound ret mov push inc push data16 xor inc fwait (bad) incl mov inc mov cmp adc xor adc jge adc in loopne jbe inc addl xchg push lahf add bound es test cmp dec dec jmp sub ss sub dec sub inc inc or adc dec sub xchg or pop lahf je sub and mov inc enter fist ds pop and pop int3 adc loopne (bad) xchg sbb ret xor cmc pop sub cmp add mov xchg scas jno xor (bad) mov and int xor and jge jne (bad) in cmp jbe pop pusha jo xchg cmp popf outsl notl adc addl inc enter hlt cmp xor out xchg movsl xor in sbb popf sub push gs pop or add cmpl pop pop adc hlt push xchg out xchg int xor in out inc sbb mov dec insl and pop sub (bad) addr16 test loopne xchg out (bad) sbb sbb iret repz mov mov (bad) inc mov pop sbb add inc jne clc jmp enter mov add add lods sub cwtl std faddl movb jmp test jno daa and mov and insl int jbe call mov mov ljmp pop push out fcmovu (bad) mov push loope imul scas ljmp test pop nop jge cs les (bad) pop shrl xchg mov mov xor push mov hlt mov cltd push outsl adc jl push addr16 mov adc add int3 jle neg adc dec or sub push call mov jmp add mov dec out test push adc pop imul xor or pusha in dec or or insb inc dec pusha mov or pop adc ds jbe adc jae mov mov mov popf xor xchg or mov pop inc pop repnz ror xor lcall ficoml cs clc outsl add ret or pop jne int3 xchg or jae inc xor xor sbb popf mov inc dec jnp hlt sbb sbbl lret sbb dec (bad) aas pop hlt sbb sub mov out js adc call call xor lock call in in loope cmpsl imul xor cld fcoml cltd add adc addr16 sub inc out imul les rcrb out in sub icebp sub jg jecxz dec fcomi xchg push push mov sub and call out adc mov loop icebp add scas pop lock push and mov jp mov sbb out add lcall dec sbb mov cmp xchg sbb xchg mov js xchg push shrb pop xor inc mov xchg xor mov call ss add fs call jae sub jecxz push fmull shr sbb mov push lret pop xchg or test or in add int3 (bad) in mull fstl clc dec cmpsb mov add push jmp sahf jge aaa xor les outsb neg mov daa gs mov push push lds sar sub sbb add je outsb xor sbb jmp push ret or fdivrs and push mov jge xlat aaa test or imul fisubl push movsb mov xchg (bad) and mulb ds mov (bad) out add mulb fbstp div mov add mov sub add jmp rclb jle pop pop pop pop pop movsl or dec sbb or jmp adc cs sbb and dec loopne xbegin imul push sub loopne sub mov xor add mov jbe jge jne add aaa popa jo push inc outsl push push (bad) dec fdivp cmpsb or cmp testb in sbb inc int3 sub adcb addr16 sbb xchg call pop push or addr16 lock cmc ret jnp rorl mov loop cld fstpl lock ljmp je xor mov lahf xor inc rol mov clc mov inc dec lods jp inc repnz push movsb data16 xor pop je mov mov lds movsb insl xlat and sub nop jge data16 pop xchg jmp sub inc pusha gs js (bad) mov aas dec and test dec pusha inc les mov push ror fdivs aas outsl add mov ss (bad) push inc pushf and pushf push ds mov or add mov jne (bad) mov cmp mov cmp cmp jmp stos data16 subl or inc add hlt cmp ja les cmp ja xor call pop mov loop shrb sub sbb mov and ljmp iret xor fcmovnu js pusha or scas rcrl test arpl add (bad) sub dec xor xor sub adc mov sbb xor sbb push mov orl adc (bad) icebp xor sbb cmp xor cmp adc pop jmp inc mov inc xlat out pop gs adc loope mov xchg inc cmp jge sub out std clc xor add scas xchg add test xor xchg push (bad) cltd pop jb (bad) mov push mov mov call loopne xchg and push mov es fcomip push fstpl sub hlt fs shll out clc decb (bad) xor loopne or mov dec adc cmp jg pop sub push imulb and jnp nop jmp insl rorb daa jle xchg cmp flds xchg in imul les jne sbb sbb cmp adc fcoml xor dec adcl sysexit std inc xor in repz lock mov outsb ss xor out cmp sub and fwait cs sub xchg adc rclb stos and mov xor sub cmp lea arpl sub and dec rorb fsubl fs testb jmp jl pop test dec or and pop xor and push adc mov sub add push out cmp nop xchg sub ds aaa jmp add (bad) push and dec bound xchg mov and imul ret pop lods xchg and mov adc (bad) lret cmpsb sbb int3 pop push je nop in push int3 mov push aas fidiv xor addr16 lods mov adc push xor cmp cwtl (bad) mov das sbb fcoml mov dec add loop push sbb mov mov lds lea inc mov push xchg dec pop xchg mov push cmp mov push xchg mov xchg mov fcompl pop imul add loope or cs inc aaa xor mov in (bad) sbb (bad) add mov pusha jno sub pop push shlb mov inc xor adc pop movsb aas lret mov push in test call add mov xchg inc pop push mov add mov cli or mov mov mov ret sub jbe out ret hlt jbe lods in ljmp jg ret cmp jae mov add adc and push js lods mov idiv pop mov shl or mov stos ss outsb or add stos jb repz adc xchg repnz (bad) out (bad) xchg mov mov cmp ja or gs adc fldcw gs cmp pop inc insb les add in mov cwtl fstp cmp jbe jle fmuls push dec adc data16 jb sub pop xor push mov daa clc push je mov push sub xlat mov nop add inc (bad) ss inc pop jmp or mov adc pusha shr mov sub jbe imul les shll mov lret gs adc add rcrb fsubl adc leave rol imulb icebp jbe lods cmp je sub lret loopne mov stos dec add xchg pusha not loop and pop loop dec xchg lea xor ffree adc cmp daa sbb xor mov push inc inc into cmp mov add out jecxz mov aam and inc mov dec movb dec mov sbb dec mov fstl jle and ret mov dec test leave cmp cmp and lods shlb in pop sti dec imull shrb xor movb or inc pop cld add ret rcr orl pop andb (bad) inc subl inc sets pop bound dec test sub xor and sub rorl add xor mov and ret fidiv es add orb test xor pop xor mov clc sub ja mov mov mov ja and mov mov cmp push movsb stos add push lods pop and loope leave xchg pusha or add into je inc loopne sbb sub mov mov sub pop push mov add ret in or and cmp scas push stos xchg sbb imul and push pusha cld sbb lods adc push sub cmp pop pop stos (bad) pop addr16 fstpt pop roll hlt xchg mov cltd (bad) inc insb lea stc add test add jge outsb lods and lcall imul outsb cs mov popf aad (bad) and push mov and fmull mov sbb add cmp ljmp mov test mov cmc mov pusha inc or outsl andl mov outsl pusha dec and popa adc or push sbb fldlg2 jg xchg mov inc cmp jne fucomip out add jmp mov adc in mov out add out repnz jo bswap and es mov movb outsb movl mov in mov sub insl pop inc cmp ret pop mov pop or scas or ret add add sub sub ljmp aaa fwait add jno jmp add rorl push inc add lret pop sbb fcmovu mov xchg dec mov fist mov pusha inc pop pop dec or add int mov jne push fimul xlat xor cltd pop les addr16 (bad) (bad) inc or dec cmc push loop inc cmp mov lea mov lock outsb pop cmp fcmovne pop sbb cltd sub daa sub push inc cmp push mov pop sub push push movsb mov mov push pop fcomps push push push insb cmc sti add dec pushf js or add and ret and cli mulb insl lods bound cwtl aam dec xchg push cmp adc scas call adc inc data16 push pop jbe xor mov in cmp sbb jl sti xor pop jmp mov cld mov imul add and cmpsb sbb cmp outsb inc into add jge ss shrl xchg push out cmpsl adc pop clc lock nop jmp xchg gs xor or movsl jg out dec jl pop call ret mov add inc pusha sub adc add push and or fiaddl adc mov xchg dec dec lea sub xor imul and ficoml xor das adc in adc push or insb and xor and pop dec leave in mov add mov lea or les pop push (bad) inc test pop or xchg out inc cmp daa cmp mov dec lds mov daa fs cmpsb inc jae cmp lea sti add sub cmp jg leave sub ret mov mov jae or pop mov popf pushf jle out stos popl mov loop push push je enter xor pop dec test sub push outsl add push rep cmc hlt pop push cmp sbb js adc mov outsl dec mov ss jmp or cwtl insb (bad) (bad) sub push mov insb inc loopne dec pushf pop and push push insb test xor sub and cmp cmp mov jg xchg icebp or add outsb shll popa and pop ret lock or cmpsl divl flds add sbb or push pop rolb pop xor loopne sbb push sbb pop jne cmpsl and sbb lret incb add rcr adc sub dec or cmove dec loopne inc cmp sbb iret dec sbb pop ja lahf dec push imul lea push or mov cmp lock mov lock mov jecxz or mov or inc cmc nop mov inc in es pusha pusha pop pop shl nop out and push pop enter sbb pusha out or inc test loopne jmp xchg inc clc in xchg adc or push ja inc xor es lret sbb nop sahf out das add pop pop movzbl lock mov push add insl adc pop pop lods pushl cmp aad lcall into aas mov movl and rorb xchg cmc sahf cwtl push xor lea cmp xchg jne lock je loopne jg (bad) aaa push sub movzwl sbb add ret jge imul stos mov mov jge push or push pushf imul and xchg sbb adc push mov shl lcall clc inc pop clc loopne cmpb movsl pop inc or ja inc mov jne and or and sbb mov in fmuls pop pop mov bnd push mov and or lods daa icebp jle mov push div pop cli shrb pop mov inc mov or inc sbb mov dec bound add and dec jl stos and pop shr int cmpsb mov jne jle push and fnstsw mov jmp jle cmpb and or push pop movb mov cmpsb pusha jle clc inc test stc add pusha pop jae cmp jne popa adc xchg ret popa push test inc inc loope push mov ret inc xchg jl mov xor sbb cwtl fmull push push pushf or cmp jge shrl fistl or pop xor cmp adc dec mov sahf dec arpl sbb inc adc cmp ret push add (bad) mov sub clc push (bad) jbe inc xor push dec int outsb lods dec mov push push mov cli sub test rorb nop ret aaa insl cld mov hlt fs pop inc sbb enter and adc or jo mov test inc and add rcll scas jb sbb outsb add das inc mov xchg add lahf jb inc inc or cld mov xchg mov hlt incl sbb fildll fdivs sbb and adc inc sub lock push push or fstpt neg adc cmp push mov xor push ss cli ljmp xchg div add push sub fdivs push mov inc shr ds mov pop or mov ss mov lahf or (bad) and xor (bad) add mov push aas data16 dec add (bad) imul (bad) fst orl (bad) jne fldz jmp push mov add mov or inc sub sbb in fisttp loopne loopne adcl cmp stos push shll outsl sarl fstsw not and scas sbbb pop mov decl xchg xchg inc push sbb or outsb sub sub dec sarb mov sub sbb ja nop pop popa or insb outsl popa je mov in mov addr16 inc jnp fisubr jg mov pop mov lahf add fwait add and or dec out scas inc cs sub mov iret mov pop mov sti inc insl je (bad) or push mov add dec sbb out fs and clc xor pop jns inc sbb mov mov mov xor jno ja cmp (bad) add pop and scas cmp fldenv scas sub in xor movsb pop dec shl daa inc insb shrb pop subl mov inc jne ret sbb insl cmp insb inc shrl pop mov mov dec inc inc push jae adc rol jnp (bad) stos jg dec and jb mov in test incb cmp jp addb in mov and pop push jo cmp push fisubl (bad) pop pop push cmp jns sti push and push add push jmp pop sub xor pop (bad) incl sub mov dec xchg push sub or lcall mov inc mov dec push mov pop xchg push sbb test xchg sbb add cmpb pop push push inc jno or leave add sbb xchg adc mov xchg aas mov adc xchg pop inc test je mov inc fldt cmp scas push daa cmc adcb xchg leave (bad) mov cmp push mov mov add pop nop iret into sub fstps push xchg sub sub scas gs js in pop insb push js jb jb rorl rcl aam jb jb (bad) xlat fsub (bad) jae (bad) pop cmc cmp jl jbe js push cmpsl sub push push in push adc cmc data16 decb and cld mov add push pop pop xchg (bad) mov sbb cld push add subl sbb enter pop mov jge sub dec dec gs or push and adc adc call xor xchg pop inc dec or sbb fsub pusha sub mov and and sub dec push jne imul test leave insb (bad) xor int3 cwtl negb lods (bad) ficom pop push pop inc mov jmp add or inc insb sbb adc push pop (bad) dec adc (bad) lds test adc or pop sub adc popf dec je icebp pop jecxz mov sub sub adc push adc mov lcall sub outsb pop xor sbb dec and sbbl sub sbb outsb push dec and dec push xor adcb test rorb or fs pop gs add adc fcmovne inc pop ss test xor popl and sbb cvtps2pi sub bound mov xor sub jbe xchg out dec mov push inc cmp or cmp or inc sub xchg sub pop dec push in and jae ja pushf pop pop dec cmp movsb push pop push mov and xlat mov scas push subl inc cld stos mov push dec add add mov inc sub pop rolb push pop lret fist add adcb in fcomps sub dec mov or movl pop mov adc fs jge lret mov push clc xchg push les pushf insl jnp fdivrs pop push nop pop push (bad) pusha ret push (bad) pop das insl push sbb imul mov pop add jae sub call sub jnp push adc jns,pt scas das (bad) cmp add (bad) jbe adc cmovno xor dec add test adc adc pop test add cli or or adc (bad) dec jmp sbb adc das sbb pop in cmp cs xor pop mov andps dec pop lock test jecxz ficoml cld daa js aad inc inc push push roll jmp sub es cmpsl outsl xor pop add xlat loope cmp dec dec rcrb adc or bound push lock dec push add push mov es clc sbb dec add cmpb lret movsb in cmp cmp xchg pop or xchg movb and test inc aam es add push dec out nop adc xchg nop aam leave movb or pop (bad) pop pop and clc cmp adc inc pop test mov cltd and sbb test inc outsb push scas or sahf mov push hlt dec rorb fs sub hlt les pop xchg pmulhuw pusha mov xchg xchg cmp repz insl jne mov movsl iret repz aaa inc movsl ja cs loop scas cmp pop sbb and and les ds movsb es adc out mov add repz sub je or je or add add add add fs cmpsl shll mov sbb fwait dec and adc divb xlat mov sbb push mov lret lahf push adc out sub or add cs push daa iret leave xor add mov push inc or mov lock xor in push es in or out pusha mov into movsl push adc movsb bt nop push adc pusha fcom jge push mov cmp fldl leave ja xor movsb pop mov popa scas js ret push loop cs add faddl in popa cmp enter fs mov std or add add cwtl xchg add xchg cmp insl in push in je fistpll fild xor dec aas xchg jmp icebp inc rcll lea add addl mov push mov xor inc gs dec add or les hlt fldcw inc jno push scas lock fist ret movb add mov inc lods pop push adc mov lea push (bad) mov bound push add mov and push jp outsl push in and into clc sbb dec or lea push dec in inc and sahf lret rclb or ret mov bound push outsb inc fs add adc in mov sbb adc fsubl mov add xor xor push mov pop rclb add adc mov bound lods pop nop nop out lds push dec sahf adc data16 es push or or int adc inc aad inc or movsl mov add decb or inc jae imul and mov test push xorl sarb jnp cmp xor addr16 sbb sarb and jg adc cmp push jb leave js ficom push aas inc imul nop loopne (bad) repnz (bad) cmc outsl pop and xchg push or pop fcmovnb xor add jb sti or inc fs mov sbb inc rolb and dec or icebp mov pop mov inc insl jno rcr je neg add mov mov xchg and adc inc fs or cltd inc imul fstpl (bad) mov out aam lcall mov mov dec nop hlt imul imul pop int3 incl add call shlb inc in or dec fiadd pop mov cmc inc inc fcomps jnp pop push nop adc or or lea adcb push movsb mov and xchg sub adc pop int add add jae sbb pop inc or jnp add test inc mov push imul jo xchg fs iret dec test push cwtl shll outsb xchg aad std lret add or stos lcall cmpsb sub and pop (bad) decl mov add cmp xlat xor sbb adc or dec loope fadds in mov test (bad) adc mov outsl pop popa sbb nop dec enter sbb ret add adc adc or jo mov imul adc (bad) lods mov jo add daa sbb or jbe sub sbb js inc inc (bad) outsl and xchg jp and sahf xlat aas mov mov (bad) cmpsl cmp or sbb inc ss pop and sbb add cmp xchg mov (bad) push mov mov mov mov jmp push mov dec movsl or mov dec cld mov pop or jmp inc pop xchg dec dec or or jle jns and cmpsb lock mov xor hlt pop fistl sub add out dec shll dec mov loopne test jns sbb mov xchg xchg or jns in push out adc addb adc subl push adc inc outsl je (bad) in jmp adc push mov pop inc mov add int3 cli addb inc movsb imul or sbb stos or push mov push push mov mov test loopne add stos roll ss inc fildl dec or sub mov sbb outsb js dec (bad) add mov insb push imul and xchg hlt inc push push and or (bad) jae loopne inc dec cltd jmp dec nop mov fsts faddl aaa mov jle test sub adc lret jmp movsb add and cmpsl mov pop in lea stc add gs test mov ficom aaa sbb es push ja (bad) add or shlb enter aad in add push cmp test jmp lret gs ret mov add push mov xor iret sbb ja inc nop push add dec dec lock jo hlt cwtl pop pop jno,pn inc (bad) iret lds pop repnz and test fadds or jo and cwtl test add aam das je aaa in push push jne pusha js add sub push push adc arpl push jmp push test jo and push lods pop xor pop enter movsl fwait and imul mov mov push adc push adc cmp test push push cmp adc outsl push cs idiv clc cmp pop les pop dec push jbe jb test bound rorb pop push enter cmp jo pop enter adc inc je aas dec mov add rolb jbe push mov push and cld jp loopne or cmp mov out fld test adc mov pop xchg mov inc subb jnp and leave mov adc fadds pop pop cmpsb cwtl pop or add sub xor icebp and sarl cmp es sbb and rolb js dec push cmp cmp ret xor inc cli cmp and jl dec repz addb jge adcl push push mov and fucomi call jecxz ljmp popa in add negl ja cs jle push fimull ret idivb or out lahf (bad) and push adc push xchg jbe sub jle and addr16 xchg sbb add or push add cmp dec xchg push pop lods push fnstcw sbb inc sub xchg imul (bad) repz jns cmpsl ljmp xchg (bad) mov (bad) or or push enter es testl sbb ds cmp movsl push fistl test sbb jp test push pop xchg mov aaa mov loop add push dec test cmpb or das pop icebp or push sahf inc (bad) fsts es adc in push insb push jb je daa in in jp jl js or outsb insb repz mov dec push mov or inc dec dec fadds ds stc add sbb xchg dec mov hlt pop sbb mov dec mov nop lods lods test pop repnz mov cs mov inc inc (bad) ror cs and enter xchg rolb aam mov in (bad) push cmp adc pop push loop push and ljmp or cmp in xchg xchg dec cs pop es lock sub dec and movsl clc mov leave lret add repz icebp push or outsb jmp cmc dec int adc adc adc in jne sbb dec leave enter cltd sub mov sub sub cld add leave in xor cmp dec cmp mov stos inc inc gs inc cs test jb dec push pop push nop xchg dec cs pop cmp xchg cmp pop rcrl adc aaa and pop mov dec enter cmp add pop jb jp enter jl js push cs inc in lret push inc mov and andb inc cs mov mov out inc mov xor jb sbb loope jae push add sbbl enter enter ret nop lret cmp and hlt jb fs hlt int3 enter pop rcl or aam and rcr add in and mov sub lock xchg out int3 and dec in jge loopne xchg lret enter repnz je mov xchg pop pop sbb repnz (bad) jl dec cs inc fdiv lock arpl pop aam xchg lret dec cs add (bad) shlb lret add or jno jmp les push and xor outsl in add inc adc mov mov rcrl scas xor dec in nop or in les outsb and cmp loop out add fsubrs add dec mov xchg cmpsb daa or inc mov ret clc adc add mov push xchg jle sbb xchg push mov add mov or jecxz rcrb lahf xor test mov pop add lods add pop and mov and xor cmpsb enter lea or rclb in inc or push cmp dec mov out add jl mov sub add adc jnp or enter dec push loop push out jno xchg (bad) xor push frstor xor and cmp and pusha cmp push push cmp into rolb mov mov xchg push sbb push sub push push inc gs xchg adcb dec push sbb sub rclb loopne push dec jmp mov daa es scas mov push aas xor shrb jo push nop nop mov add sti jg xchg inc and mov nop xor mov add and or (bad) add les das mov cs aam and add pop adc mov mov mov mull xorl stc or das lea in sbb push imul popf nop adc or movsb inc sahf cmpl inc ja pop sbb push in xchg pop cmp cmpw mov out gs icebp sbb mov or ds cmp mov (bad) hlt icebp test (bad) xor jo ljmp js xchg in movsl mov nop or ret add cmp xor mov dec add push push adc adc cmp cmpsb jne nop push mov jae push mov and fistpl enter push or out pop sub clc or xchg pop add lds cmp jge or fdivrl push shlb insb mov mov mov pop adc push scas jmp out push push mov inc xchg mov nop pop jl mov mov rolb pop cmp jl arpl lea scas mov data16 dec dec inc xor push push dec push outsl push dec jns (bad) out cli pop dec push aaa push dec jns inc pop dec insb jo sbb (bad) adc lods mov nop mov push pushf and arpl imul or mov int push pusha push fdivs adc loopne cmpsl test repz push pop je push sti xor int fmull pop in pushf pop cmpsl stc xor and jo inc pop ja jl insl aad adc adc mov test int sarl (bad) loopne mov out jl lods xor notb movsb cmpsl push and cltd lock jbe lcall fs in loop jns out mov jl inc repz out push ds mov pop push pop icebp sarl sub push inc push dec rcll lcall push fsubrl scas jge jne sbb cmp or add mov and pushf ja mov inc mov fs mov push sahf imulb test (bad) repnz xchg clc out cmp push push jns (bad) ss push or dec mov jnp jp cld test sbb dec repz pusha and jo push mov fs divb cmp loopne ds flds inc outsl adc popf test dec repz push idivl out mov mov js js dec push push push push movsb push push push or fsubs divl lock (bad) lock mov push sti fidivr xchg push clc pop mov push cmpsl jge dec pop jo inc add ror (bad) or fcompl lods pop pusha iret repz push cwtl mov push shlb (bad) mov adc test push into notb push test scas fmuls jle out mov or mov scas jb shlb jl hlt inc es dec je add inc mov inc adc add xor mov rolb ds dec (bad) jg div and andb push lret int3 enter enter fcomp sbb lret (bad) loopne jecxz in pop mov adc mov and fwait mov popa je xor xor xor sub adc xor mov push push adc add (bad) sub mov popa pop and ret lret jg xor push sbb lock xchg xchg scas (bad) add es clc inc jae jns ja push adc and sahf out sahf xor inc dec push pop jns out pusha push jns out nop cwtl mov sahf mov ror fdivrs out loopne lock jae je out fiadd adc and leave in inc xchg add add fs fs gs dec xchg fs mov xor fs js dec jns sahf mov push jp jnp and sahf int3 pop les paddq sbb sbb cmpsl (bad) xor jns pop add add or add add mov fldl push push lods pop inc arpl pop fcomp mov jg or jp addb pop add lods fisttp push mov or cmp icebp rcll (bad) jo inc incb nop movsb repz repz aam clc out sahf out aas sbb cmp sahf out sahf pop insb js pushf lods ss jns lmsw add cli (bad) adc push jl inc inc popf sbb inc xor jmp jl lods imul add aas or xchg or xchg pop test popaw jg sub jns (bad) push or jle sbb subb negb add pusha aas adc mov push jo add push negb aas adc fisubrl mov aas push in aas push cld repz mov jg or push cmpsb lret and sti xchg cmp dec cmp iret repz in pop push add add repz bsf loop iret repz adc mov adc sbb cmp repz sbb push adc repz test rorb cmp repz lock out sahf cmpsl sbb inc add out sahf push push fs mov pop movsb push out sahf xlat and dec repz add or repz cmp pushf push add int3 dec in clc sbbl inc jns out mov mov nop mov mov lahf out sahf mov or cmp repz and cmp loopne ljmp (bad) (bad) jbe (bad) cmp pusha mov or push (bad) int loopne ret add jle frstor cmp jno adcb pop (bad) in sbbb out or mov xlat or lahf or mov sub dec imulb adc or addb and mov dec insl ljmp inc pushf shr dec add iret repz ror in cld out jns out cld sbb cmp pop jns out push pusha push repnz nop mov mov mov testl mov and jbe,pn xor shrb adc and xor sub pop jle aad mov movzwl mov daa daa fisttpll add (bad) daa daa daa adc adc je sub popa xchg prefetch add lcall roll addr16 icebp pop in in adc push xchg in push adc mov test rcr push or int3 (bad) fadds fucomi cmp xor inc pushf add jns and xchg into and out cltd rcrb jl movsb lahf out sahf mov aam clc or repz sub push repz repz fcomip cmp mov jbe jge cwtl mov push aas add push fdiv imul pop test imul dec mov popl inc dec adc xor aas (bad) fistpll inc mov or (bad) push lsl pusha lods push std repz repz cmpsl stc cmp stc lock add negl imulb out push repz jns out mov mov sahf mov enter jl out in jmp ljmp and xchg add out mov adc mov ret cmp or je aas add ljmp or or add sti fcmovb lock xchg adc js inc adc sahf inc mov lcall add push movl dec pop pop outsl inc add out mov adc push in je add das cwtl loopne test add adc out or add add mov xchg mov in ja pop add jg repz xchg stc mov repz cld std (bad) (bad) repz repz (bad) test jns in cmpl push add mov call out or lahf ljmp call push sldt inc sti test sbb sub cmp scas add cmpsl and iret repz sbb cmp cmovle inc sbb jp push dec fldcw inc and adc jns cmpsl ss xor pop out sahf out js pushf test out sahf mov dec adc repz xor fs repz pushf mov cmpsl stc cmp fsub hlt or cmp repz sub push push fs repz repnz nop sahf out iret cwtl mov rcrb cli push adc sbb scas repnz invd sti jg inc aaa sti fcompl xor iret int xchg aas aas adc loope lahf push out addr16 in leave add out ret rorb iret ror movb call (bad) in mov scas and xchg push enter xor dec adc fstpl sub pop cmp ret add (bad) mov sti and dec fsubr and dec lods pop sub les lcall lret sub decb rol std mov ret xor mov mov pop lret aas loopne scas sub repnz sub inc scas dec sar in jg jo sbb pop or lret dec xor pop pop pop lock jnp (bad) (bad) (bad) repz imul dec jp cwtl jg out jmp dec push scas inc sub pushl dec outsb and fstl cmpsb aam dec cmpsl mov aas mov mov jo (bad) movsb sbb pop std pop addr16 add (bad) idivl push dec std xchg adc mov dec lret imull pop pusha pop aaa mov pop dec or stc mov or fistl in scas in lock cmc sub lods std fwait mov and in addr16 ret pop (bad) int3 int3 mov mov inc xchg in jl xchg repz dec (bad) imul fwait push stos mov mov mov icebp shll lret int (bad) in jns pusha imul or mov stc lret push sub pop cmp xor pop dec push mov mov (bad) pop stos dec pop sbb dec push sahf das sub insl xchg pop std test jle repnz jle stos sub lods sub mov insl pop sahf or cmpsl sar sub jg mul dec mov lock inc mov and jecxz icebp out in mov loope push jbe dec jl fs orb cld addb adc subb dec xchg fildll mov js pop sbb and xchg push jecxz push xor stos pop push fadd ljmp mov pop push test dec (bad) mov mov lock adc mov lret xlat (bad) (bad) out lret pop fstpt inc dec push push into scas loop pop mov es icebp sar xchg sub mov enter not jbe lret and and adc mov es in sub jno dec inc outsl cli mov aad pop aaa and and pop mov xchg xchg je mov lods pusha arpl dec divb aas sbb jecxz lock sar and xor pop mov mov xchg push jmp icebp cmp dec dec out aas dec or inc dec mov faddl sti mov adc mov fwait or mov cmp roll sets test cmp test icebp addr16 dec jo and imul push dec in lcall and (bad) sti dec fimul sbb add in andl sbb xchg xor dec push push lret dec pop imul (bad) mov and pop push cmp mov lret repnz lock sub inc imul out xchg negb pop cs cli in (bad) push aas lsl test and pop add pop subb cmp pop adc mov lret (bad) stos fadd stos dec cmove xlat cvtps2pd and mov out mov pop push jns jmp outsb lds insb mov and loop lahf xor out clc int lcall outsl mov adc je xor out add jle incb mov dec sub lds fs sti sub arpl rcl xchg push inc insl mov inc jp mov sbb pop mov mov enter lods shll xor (bad) mov mov jae inc push aaa sub xor arpl dec mov bound pusha inc dec mov mov pop dec es and test pushf in and or lods mov fwait mov idivl ds aad push aam or push dec dec xor sub pusha mov arpl (bad) aaa shll mul scas xchg (bad) dec mov lods sub jnp enter mov pushf dec jo (bad) dec mov lret (bad) mov cmp or (bad) dec jo push mov cmp mov aaa ja mov mov mov xor cmp pop enter loopne in add ficoml push cltd std lods adc push scas jnp imul mov imul test scas popf std sub jge mov in (bad) cld imul and iret cmp pop lret cmpsl xor or xchg jns mov ss mov mov adc dec icebp xchg adc in (bad) jg out pop enter (bad) imull push je cmp push aam add push mov dec xor rol adc clc loopne jnp fcomps or sub mov cmp jecxz scas jecxz xor sub mov pusha scas mov lahf lock pop cltd out call lock jb dec and cmc jmp dec faddl sub fisub scas sub out bnd lret scas pop ds leave loopne push (bad) mov dec sub rorb in hlt inc daa jno sarl imulb push sahf jl lds ljmp pop pop sub pop cli xlat movsb add dec outsl dec adc hlt pop rorl cmp enter pushf call sub mov movsb mov pop xor cmp scas xor jo shl pusha movsb sahf mov loope sbb (bad) lret xor push cmp stos mov loopne sub add xchg or in jg mov scas lock pop dec mov pop mov enter adc sbb cmp jo jg sbb mov cld cmp sub jmp stos add ljmp icebp sub mov push or adc xchg movsb imul mov (bad) nop test mov popa hlt (bad) cmp dec xchg cmpl in xor mov push ds test sub mov mov lods dec lods mov lods inc mov mov fiadd in aaa dec mov add outsb mov shrl adc int jo sarl rorb int3 jle out fcmovnu std inc cli dec lcall les mov lcall lds je (bad) es bound mov mov xor lods call adc (bad) das fbld mov dec loopne jmp sub hlt enter cli dec or pop jge dec (bad) jecxz repz or shr adc pop cmp popf loope push repnz dec sahf pop adc nop mov cli or pop (bad) sbb and rclb pop pushf dec js aad adc shrl push adc adc stos sub mov mov mov fmul and arpl jg pop xor aam mov addr16 dec in in outsl mov jl sub mov jae jge mov dec test mov dec shl sub mov (bad) push loope fistp out outsb pop xchg mov inc loopne and ficoml std in shlb mov cs pusha and xor addr16 sub sub sbb jecxz inc aad add hlt rcrb pop or nop scas inc xlat js mov push inc or adc mov cmp add sub mov (bad) cld imul fsubs cmp ss enter mov mov adc mov cltd std cmp roll movsb jmp mov sub dec inc sti lahf sbb mov and xchg mov push loopw fadds mov adc mov lds push test push test lret stos mov xor nop sub loope xor push inc sub cli mov inc jmp in jmp pop test pop cmp add mov dec stos scas add push les call mov fmull sub (bad) out mov (bad) jns dec aam cmp lds cmpb sub jge (bad) dec call daa xchg lock loopne loopne xlat ja mov loop pop cld dec dec mov inc stos loope pop or dec pop fsubrs (bad) jb sub sbb je ret (bad) aam push mov out dec fs repz mov daa mov cld mov rorb cwtl xchg sahf push sbb cmpsb (bad) cmc inc setnp lret test mov jo xor ret push loop test sti pusha cmpsl mov xchg imull es imul mov push ror (bad) int3 xchg ret insl sub cmpsl (bad) outsb (bad) (bad) ret add or loope nop fnop pop cli mov pop ret ss dec enter loop imulb pop lods push sub cmp fldl push lret aad pop clc push push clc in pop pop dec divl dec sub add sub outsb sub pop cli inc repz dec (bad) mov out sysexit rol out xor mov in sbb (bad) xchg adc movsl xor dec daa mov test loop dec clc lret addl and push mov sahf insb or ret or add cmpsb (bad) or push pushf cmp cmc or cltd fstpl pusha cs es jl lret jle jp inc dec xor sub dec xchg dec icebp pop xor enter leavew loopne sahf out dec rorb dec push inc cmpsb pop (bad) dec dec leave cwtl dec loopne or mov ret imull xor push cmp mov sbb mov cmovns enter lahf add insb dec or (bad) sbb dec mov fstpt lods mov sahf mov pusha loopne add ror rorl mov movsb stc mov cmp inc jbe ror ret jp or gs rol fmull (bad) mov loop jle andb push cmpl dec fs dec int pop (bad) inc or xchg mov loopne daa lea scas pop idivl stos sbb mov xchg scas mov add imul lcall (bad) js inc dec scas xchg clc pusha ret popf mov pop lahf xchg clc mov push in sub cmp std cmp cmc pushf dec xlat sbb ds jne jge pop xchg das hlt cwtl or xchg clc push (bad) (bad) call xchg enter dec dec xchg imul push pushf pusha (bad) dec (bad) adc sarb pop sub sahf cmp mov mov mov add mov scas and xchg jbe mov stos js jno push std xchg push loop jo mov dec adc dec push mov push aad orb mov js push pop in sub jecxz div pop inc dec sub testl (bad) xchg ja sbb push fisttpll pop xor inc cmc bound jne inc lock (bad) sub jns jle xchg dec jp sbb and popf xor dec insb or sahf push out pop fisubr jne vandnps movsb pop cmp mov out dec inc push xor stos xor es push cmpsb (bad) dec xchg cmpsb add push fdivs arpl and (bad) mov push mov stos aaa push (bad) (bad) lock (bad) cwtl xchg pop add add push (bad) sbb push dec cmpsl mov or aad push repnz lret and mov sub mov (bad) shl sub and dec mov dec movsl std enter mulw sub pop mov xchg out lret inc cmpsl and sbb inc xchg (bad) mov cs mov mov (bad) pop aaa pop adc adc xchg popf or pop dec sub lds (bad) cli jle push sbb lock data16 and dec cld loope (bad) movsb mov jle mov xchg add jmp mov mov jae push mov test movsl push clc test enter inc xchg pop je jo push daa out (bad) cld std int3 dec inc lea xor dec jae xchg loopne add fistpll bound addr16 das lods adc add dec dec clc cld mov dec ss mov cmpsl repz test sti pushf inc addb stos jo sbb gs movsb xchg inc test (bad) cld test repz ljmp jbe pop dec sbb sub mov sub xorb mov cmp loope dec add xchg fwait arpl jo stos sbb dec inc (bad) mov push les add sbb rcll loopne mov aam jp rolb js xchg mov fimull lock push divb sbb or fdivrs sub jnp inc scas add decl xor inc rcl or push mov adc and xchg adc inc fs or je sbb pop and xor or sbb ds addr16 into (bad) dec inc lods lds (bad) inc js xchg pop fidivrl fcompl loope mov mov js inc fwait mov sbb subb pop push popa hlt adc sub stos xchg pop jp pop ljmp aas je sbb pop loopne push add stos adc (bad) sub dec clc mov cmp ljmp into dec addb rcrl sub sbb andps aaa out arpl jg cmp or adc icebp or add dec mov mov push jb xchg cmp js push mov fwait clc push shlb nop iret push loopne and enter xor bound jg hlt pop xchg sbb rorb xchg sub rcll jns jo xor mov mov sbb dec dec repz movsb (bad) arpl adc cmc test mov rolb roll stos lahf mov or push dec in cmp fsubl adc shlb and inc adc jle loope bound cmpsb test pop mov lods add in subl push sub fcompl aad inc mov inc add mov push stc push or mov inc xchg lahf jg test dec add cmp lea mov outsb ret mov test pushf pop or in cs cs lcall mov sub pop sbb adc or add push (bad) lock xchg nop dec sbb fbstp mov mov divl push orl push or cmp xlat pop hlt outsl mov sub mov addb mov inc add test adcl and cmp (bad) rcll cs dec jl sub (bad) out add adcl mov enter add push add andl or adc in push stc dec or jb adc jns out sahf push add popf hlt repnz jge mov sbb add cmp xor jle dec adc mov sbb sti aad push inc mov xor add mov lea sub mov push or sub lods cs rcrb mov js push (bad) out inc xchg loopne xchg sbb into lret insb lods scas xchg mov push in test hlt mov sub (bad) cs lahf cmc push lret loop push js dec out lea mov inc lcall cmp jbe xchg jmp or dec jge hlt inc aam pop inc fisttpl ror mov push mov fild fstpl push xchg push xor sub adc dec pusha test sbb jmp out fwait jno sub pop add hlt push (bad) ja bound movsl lret jnp mov xor pop pop sbb (bad) push pop popf jns rclb and xchg stos neg xchg mov aaa sahf mov (bad) xor xlat loop in jcxz dec add test xor ss pop cmc cmc (bad) dec insb or mov subl mov dec or xchg jnp mov dec jo rorl (bad) xor (bad) mov imul repz into adc push push (bad) out mov mov (bad) sbb dec pop ss push mov cld popa lcall loop pop fist (bad) inc pop (bad) lea pop subb dec jns mov test out mov or cmp sub pop neg pop push inc push and fsubl and xchg mov pop loop or stos cli stos adc pushf add push mov mov mov mov (bad) xor loope divl (bad) in gs or outsb stos rcll jge clc dec scas mov inc test fdivs inc stc push add jl dec push mov stos icebp inc out mov nop ja popa inc fsubl aam cmp mov ljmp in daa sub aad mov mov mov dec mov inc dec pop xchg push bound jne dec cmpsl inc sub pop push es cmp out dec cmpsb stc popa mov test dec pop dec lret cmp ja pop rorl mov pop sarb scas test lds pop and sbbl ljmp enter mov lcall aad sbb test shl mov xchg ds fnsave aam mov imul outsb mov dec jb loope lock fidivr ret cltd mov sbb pop dec fwait add outsb mov jecxz mulb dec mov jnp notb lret mov notb pop pop js fs cmp test sub pop sub push inc or fs mov fldl cld insl cmp loopne xchg loop loope test cmpl fimull insl or dec pushf mov hlt xchg lock add notl bound aam test sbb lret adc movsl stos sbb lahf test in cli scas mov dec and dec pop test bound mov or (bad) mov mov aas push or or and sub dec (bad) ss jecxz cld enter stos subl xchg mov int3 roll rorb add jbe mov insb dec pop pop add loope push mov popl or (bad) mov mov sbb imul fisubl dec orb xchg pushf lods pop add mov (bad) add jl fimul mov mov icebp sbb f2xm1 and mov and popa push imul aad rcrb call mov lretw jle and jl dec mov cwtl push cli dec adc test jbe movb (bad) adc cmpsb add ljmp push (bad) hlt inc movsl loop and popf into sub daa popa fildll dec loopne and mov adc pop jo hlt mov imull out pushf dec (bad) sub bound dec cs sbb or (bad) adc and (bad) cli dec add dec mov mov xchg mov hlt or sub out xchg lock pop or pusha inc inc or movsl dec pop les jmp imul fsubr push mov adc add or (bad) ficompl out out inc fs sahf sub test add sub xor into xchg mov je inc data16 lret jge sub push (bad) sahf or and dec add or int3 push nop not clc jmp (bad) sub out and mov (bad) imul add or dec jmp xchg icebp mov sbb add dec and mov lock loopne jp fdivrl jecxz cltd dec mov loopne out mov out pop lea cmp dec pop mov (bad) lret push fistpll push jecxz fadds nop adc dec leave push loopne pop push cmpsb push mov adc (bad) dec mov leave sbbl lock popa xor pop fisubrl xchg les mov movsb jecxz movsb sub adc mov int loopne popl mul mov xchg fxtract dec lret dec lods xchg inc aam dec (bad) cmpsb lcall push nop lret lock int inc dec loopne push sbb push jmp fwait push scas and sbb jne gs add negl into idivl loope,pt inc mov mul add add aas sub stos push xor dec pop dec popa add push cld out sbb aad inc hlt test mov leave outsl out and pop (bad) jg xchg inc xor sub mov rolb dec sbb mov push jb xchg aas add or and jae jle ja and fnop pop pop insb mov mov dec mov jl sub dec movsl sbb adc mov lods push inc cmp jl daa hlt cmp nop loop push fisubr (bad) xlat or inc stos imul dec ja cmc jg (bad) mov mov xor test int3 add in data16 xor pop mov dec dec xchg adc mov inc (bad) sub mov and les push mov lods mov fwait adc cwtl repnz aam cmp cmc mov dec jns push jnp cmp dec (bad) fs stos sbb (bad) lock mov sarl and dec lcall lret scas adc add pop inc cmp sti cs sbb loop arpl xor jo mov dec inc icebp xor sarb sbb cmp clc mov fcomi les loop ljmp xchg mov xchg ret jmp data16 cmp and cmpsb mov enter movsb negb xchg or test jl jp pop mov push and sbb int3 sub mov add sbb stc sbb xchg cmc inc mov dec mov push mov fdivrs adc test and and movl in lret mov xchg add ds sub add sbb ljmp rorb inc dec les mov imul add in into jle mov push jmp lds jo mov adc ja (bad) lret or lock inc or add jecxz jmp lock adc mov mov popa dec int3 dec pushf mov mov mov fnstcw lcall sub je pop (bad) hlt cmpsl sbb movsb (bad) push clc mov daa sahf lods cmpsl lds pop pop sub bound sub dec xor in mov mov inc loop cmp fxch push loope and loopne repz fsubrs imull sbb add in push sbb je jo loope clc jbe sub adc cli push movsb inc mov jns add or inc fsubr mov cmpb sbb mov pop dec mov ficom dec ret jl (bad) (bad) rorl mov cs mov sbb jbe mov repz push icebp movsl out test ja mov lret push pop inc dec mov mov push mov repz cmc dec xchg lcall repnz jle popa jge cmp or clc mov stc fstpl sbb mov sahf or shlb dec std jnp shr xchg inc mov cmp arpl int3 (bad) dec repz cmc add (bad) mulb mov int dec movsl mov sub jp or icebp cmpsb aaa push into or jle out sub jle pop lret pop mov test or adc adc pop xor adc adc add xor pop pop (bad) xchg push add ret in mov and in les leave jmp mov pop jne shlb cmp hlt (bad) xlat sbb mov aas jae sbb mov imul data16 adc call or pop shrb mov leave or loope sub sbbb push aaa jg and js inc jmp adc xchg sbb pop jge movb stc mov shll repz (bad) push rclb icebp shll mov dec cltd dec pop pop nop jg (bad) lret fsubs bound xchg rorb mov adc cmp mov inc sbb cmc mov or adc loop dec dec les mov in lods sub jge dec xor sub pop sahf addb xlat inc jnp and loopne pop mov loop pop mov sbb push or fs dec mov addr16 xor add sbb pop sbb xchg test loope mov pop mov sub dec popa and push scas dec (bad) or mov loop shll dec mov mov mov sub sarl sub inc mov into and sbb lock sbb les dec test ret cmpl inc and dec pop dec loope subl lcall add jmp mov xchg mov dec lret test dec mov aad ret das jns pop nop sub dec mov aam (bad) mov or inc aad pop lock mov clc inc dec or sub inc ljmp sbb push dec ret dec std xor sete xor inc cmp test cmp xor lds dec loope mov rorb dec mov mov aam jo dec or dec xchg mov enter xchg inc shr xchg insb bound dec xor rorl mov sbb outsl (bad) (bad) cmp mov xchg arpl ret sub jo dec icebp sub add pusha test mov fs incl loopne and xchg and pop dec pop loopne pop pop fsubs or idivl aam sahf stos pop dec or mov dec dec xchg dec and clc xchg cltd adcl or lock loopw cmpb xchg or pop (bad) loop jno push in adc mov mov jnp outsl mov pop or mov inc rcl rcrl add clc mov inc jnp dec pushf mov sarb dec pop mov adc popf push push rep mov (bad) sbb (bad) dec test mov xor add andb es jo orl cmc mov lock repz mov pop repnz xor cmp and jp test iret xorb js imul scas iret mov packsswb mov repz aaa mov push add sbb push jecxz in dec cs adc aaa cmp add mov pop mov loope and xchg mov dec out pop lods loope pop mov push outsb out rolb outsl fsub decl dec mov sub nop lods data16 mov xor inc (bad) adc inc imul mov and or lock lret jb,pt mov sahf ret sbb popa addb sub jbe sbb (bad) and outsb jnp popa sar ds push pop mov mov hlt jle mov in insb lock adc scas dec test push mov inc cmc rorl dec pop movsl push sub mov les inc jge loopne in dec stc inc mov push inc es adc dec das scas cmp lcall nop div dec in adc dec mov pop sub testb inc push dec mov ja mov mov jmp pop flds loopne in lds pop push movsl mov xchg lods or gs pop in jo (bad) xorb popl push shll push inc (bad) push fimull cli dec inc inc lods xorl sub or jmp mov fildll imul fdivs sub mov rolb mov jnp movsl fist pop jb ficomp mov mov push push push fs mov add mov pop or pop mov dec fdivrs hlt (bad) adc addr16 rcrb out enter mov fstps mov push sbb pavgw xchg push (bad) (bad) (bad) std aam test rol adc push inc jo jmp rcl loope push imul inc les arpl mov movsl jle inc push loop push inc xchg dec dec test dec (bad) add add fwait add les xor sub and sub insb pop adcb cltd mov mov loope inc (bad) lds cmp xchg cltd dec mov cltd mov sbb jo jb je fimul sbb push xor aad push stos movsb hlt or (bad) xor inc push into jle adc sub lret aas dec adc dec pop adc scas decb out idivb add sub ds sub std scas and imul ss and ret add or dec mov or pop add fwait pop dec bound jb cmp fs xlat cmppd insb push adc ficoml or sahf or outsl jg jl sbb adc dec shrl sub and push repz cmp or xor or dec cltd stos dec in movsb jle test mov dec inc mov xchg dec and pop clc dec dec mov mov dec lock sbb in rorb lock test xchg lret mov testb (bad) mov sub insl in and or mov and inc pop pop add xor xchg pushf mov rcrb enter inc dec pop lret fldl add roll adc std push sti push clc xchg inc dec ficom xor xor cltd jp scas xor adc sub adc mov icebp sbb mov subb loopne inc mov test lret cmp jo push insl sub scas test push mov nop jo or insb adc bound dec jns inc addr16 imul jle in push xor push loopne sti out dec daa cmpsl jp mov repnz dec or int insl push or aam test add ja inc bound push push hlt pop or leave fbld jo pop movlps dec jo push js dec adc xchg shrb dec push lods mov jns out icebp or sbb popa je scas daa and lcall loopne dec push lock push lret mov inc pop stos or inc jg sub arpl loope cmpsl cmp add jb sbb insb ret mov inc test lcall or cwtl in rolb pop mov cs dec (bad) js nop dec jne,pn sbb cwtl mov mov lcall dec inc mov inc xor add out mov inc xchg jmp and ss mov mov xchg (bad) lcall push (bad) cmpsb shr ja addr16 xor fisubl mov adc cmp adc test dec lea xorl popa sbb and sbb ret pop push cmc pop pop inc cmpsb xchg dec ret xchg inc sbb dec call sbb xor mov hlt pop sub shl mov xor fwait sub ja jnp stc lods shrl adc cmp and pop mov sti cmpsb pop mov jge mulb lea mov int (bad) mov aad clc nop add mov mov test ret add jo sub push scas (bad) ljmp addr16 or hlt bound pop mov pop rolb xlat mov dec jg cmc fs xor jecxz (bad) loopne,pn loop dec or cmp pop sub pop mov and sub ret fld pop jbe ss jp and addr16 jl pop leave mov int3 push cs mov dec lock fwait push and out sbb dec ret lahf (bad) xor das lret lock mov mov test dec cmp inc aad adc ret sbb cmp xor and push lcall pop xchg (bad) aad jle inc or mov pusha cmp fwait out xchg popa lea rclb in mov cld test xor test xor movsb mov jge push mov mov sub fwait scas mov pusha lea pop push pop rorb fwait movsb push adc xchg ficoml (bad) mov sbb xchg sti pop mov jecxz pop imul push push jl xor push push hlt add dec repz lock in hlt addr16 aas or mov lea jns jae dec and jp cmp mov cltd xchg sbb rorb loope shll in (bad) jg push sbb loopne dec xchg (bad) cltd test cld dec or rcrb dec gs sbb into dec fwait jle shll pop (bad) sar or movsl mov add pop in lret or cmp xor and rorb loopne mov cmp std inc test sbb ret dec sbb dec cmp sbb sar lret loop jmp or and fistpl cs dec adc push add frstor loop cmpsb mov xchg mov je pop xchg call mov scas dec jmp sub or stos test jbe mov add imul jp sub jae insb lods call jge sub xor adc sti xchg in mov inc jbe jb bound cltd lock sbb scas and and inc push cmpsl or data16 xor data16 cld int xchg adc push cmp iret mov (bad) inc jns leave mov loope nop dec jns add and mov rcl arpl stc rcll pop mov imull jg stc rcr dec ficompl dec sub dec add or aad sbb cmp sahf push cltd push sub sub lcall dec iret sbb popa aad sbb (bad) loopne mov fdivrl mov mov dec push mov out cmp dec pop xchg mov pop cwtl ret test (bad) dec pop add cmovo adcb or rorl addr16 jl cli insl xor inc or fmull loop and inc out (bad) sbb mov pop mov sbbl cld cld jmp popf jecxz int rorl lret icebp int3 mov push cmpsl add mov daa icebp mov out cld shr push inc cmp in push dec and mov dec pop lcall icebp hlt icebp movsb test arpl dec sbb sub jg lock lea divb aam lea es cmp or sub push mov in mov jge test push jbe push inc mov push dec (bad) stc mov push sub mov mov add sbb aaa adc loope sub cmp idivb lahf lea push js push mov pop int in dec out testl mov jbe,pt and fisttpl cmp mov loope xor loopne or mov inc push sub ja xchg xor imul sbb sub cmp je int xchg and mov hlt mov popa pop cmp dec cmp jne xchg cmp leave sbb and aaa and (bad) sbb cs push outsb fdivl or cltd jl push lods dec stos and hlt mov cmpsl aam sbb sbb nop adc cwtl xchg lret fnop inc movsl mov imul mov xor into int3 test push cmp pop adc dec sysret pop enter sbb movsb dec int or sub adc ret enter inc es inc and cltd iret jb and adc push call mov mov sahf ja mov or rcrl shll xor and xor hlt (bad) mov add pop xchg iret or or mov mov sarb leave fiadd pop rcrb mov fsub pop mov push or out or stos mov sbb out pop cli daa cwtl movsb dec mov fdiv (bad) shlb push dec jno pop xchg adc or mov test scas lock mov mov subl mov rorl dec icebp (bad) enter sub xchg jo and pop mov xor lds pop jae push negl jmp xor jns dec add sarb sbb mov enter mov mov stc (bad) push inc les pusha mov and inc jg loope push fnstsw adc aas repz mov mov sahf outsb cwtl test cmc inc sbb sbb jnp push mov (bad) jmp push xor lds inc imul es outsl mov mov pop cltd push scas and mov sbb or xchg dec cmp push mov arpl cmpsb mov or inc cwtl ss mov add sbb call or lock lret out mull mov ret or mov mov dec or and dec ds sbb mov pusha xchg rcl int3 or sbb sti fnop lds popf cld nop stos push and test sbb cmp sub add mov lock push lahf ljmp rorb or scas push scas jl movsl mov es movsb sahf sahf out ret stc mov repz fwait push push sbb lock mov (bad) cltd jecxz clc int3 pop sbb mov scas mov shrl dec out jno cmp orl xchg pop sub xor jl cld or mov push xlat (bad) rolb scas pop jmp (bad) lret scas dec sub insb pop sbb sbb arpl sbb cli dec sbb (bad) push mov arpl mov lods dec jno daa xchg adc dec stos xchg mov iret mov dec fwait push sub push rclb negb push or dec xor dec push and call mov sub jmp xor push stc mov push fldl xor and subb mov clc dec inc scas enter mov sbb cmp sahf cmp sub and stc clc cmp pop test sti cmp adc add nop int3 adc inc mov mov jmp lock je adc shlb inc cmp inc jecxz arpl stos or or jbe bound mov test jmp repz cmpsb jns ret or pop (bad) lock mov xchg ds les fidivl mov sub push ret sbb sub js outsl in (bad) jnp fcoml in inc sub sbb cmc int3 imull frstor cmp nop sub jg cmp push aad in adc scas xchg aam lret clc ss add es adc fwait ret popa cmp push (bad) in hlt cmc (bad) mov ficom imul mull mov pop cmc mov xchg (bad) xchg dec dec adc add mov daa lock test jne les add ja int3 into mov sbb cmp aad add insb sub popa roll test lods add push iret test (bad) jo clc pusha or sub into add dec sbb lret jno jo jo cmp jg sbb mov loopne push daa sbb sarb test xchg adc repnz cmp sub push test mov xor pop fs fsubrs add rcrb inc sbb scas or cmpb or cltd pop jo sahf sbb cmp (bad) sub inc call mov repnz into stos push cmp insb stos lods test jge movsb hlt jo loopne stos add push insl jne aam iret xchg jno adc (bad) or push pop sbb les mov pop and mov sub test fbstp sahf xor lcall popa jno ret push std or mov ds mov add and and inc test jmp aaa (bad) es das pop arpl mov rcrb sbb and pop jmp scas push (bad) icebp jns (bad) stc inc ds jo (bad) notb nop sarb out sbb es aad cli movsl repnz dec mov or jno jne cltd call sbb xorl pop inc out cli lret xor repz jbe adc jb mov call mov daa cmp (bad) xor add (bad) (bad) lea jle cs rcrl mov mov inc push xchg cmp faddl push xchg and add ja xor adc mov rorb mov je call pushf sub lock hlt repnz sub iret cmp or or push in cmp out faddp add inc pop mov jl dec out mov adc mov dec ret ljmp sub (bad) jb iret movsl cwtl inc mov jb jno lock loopne jae out ret mov push shr push push push push inc (bad) fcmovbe addr16 mov jo adc mov or cwtl inc add outsb lock jnp mov sbb div sahf negl push test cmpsb dec out (bad) fmulp mov lock ds sbb sbb jo or js jns fiadd dec inc inc and andb and xor fidiv sbb fcomps inc xor dec xor notl inc dec clc push lock (bad) fidivr js push inc jo jbe add in xorl mov fcoms nop pop ds iret loope cmp push fmuls push mov fcomps call dec mov push test xchg sahf jb ficomp push enter mov jle jle inc clc pop push pop mull add cld mov push cmp cmp out test push mov (bad) xor pop cs mov mov lock dec nop pop dec or ds push out mov sub push push loopne pop aas in loopne movd rclb ss mov divb out rorb push push xor neg (bad) jbe push push push pusha inc addb sub test mov inc xchg fild out mov andb push in (bad) loopne nop subb push cmp mov push pusha push or inc scas fcompl or jp lods push outsb inc sarl dec scas push xchg sahf cs mov inc mov aas cs mov xor mov aas js lds mov mov xlat aaa pop pop adc and mov (bad) loopne push out loopne sahf js call jp pop push adc ds adc call (bad) (bad) iret sbb push or rcrb dec int3 mov aas js push push inc sahf rcll dec aaa xor (bad) xchg push clc daa (bad) (bad) mov fidiv js and pop movsb sarb pop daa orl mov out out pop cmp xchg pop testl ret sarb nop jo xor jo (bad) mov inc push xchg mov pusha ds pop cmpxchg jae push push sbb inc xchg aad fdiv pop dec cwtl mov roll pop pushf add data16 mov jle sbb push mov outsb mov scas dec mov jle je mov es sub dec pop push sahf xchg xor inc sbb nopl inc mov mov inc mov sub push subb or inc adc or add push pushf and add xchg lds inc add adc adc mov add cli cmp inc push dec add jnp cs add pop inc sbb fmulp jnp inc and dec pop push and pop ficomp push pop dec add sub in cmp push dec xchg push sti jle repnz push inc mov pop jmp jnp push sub push or mov mov inc adc or inc push push addl and lret mov push and pop sbb roll xlat pusha in rorl daa mov faddp push and push push dec or loopne jbe rcrb dec arpl fisttpll push inc push cs mov fidivr sti or inc sbb inc js jnp jp dec dec push rsqrtps lret (bad) loope pop inc aas or rdmsr lds jmp push add inc aas or xchg adc add mulb add or and or in cmp add cmp testb out pop rolb sbb or push subb pop add sar fdivrl xor cld jg clc aas push in jns pop jmp rol popf in insl add pop or push aas (bad) jg andb add inc cmp popa add test pushf int cmp pop jo pusha xor mov add pop adc jg add insb ss push out ficompl popf xchg (bad) cmp add xchg lock sbb pop push (bad) aas pop jnp xchg pop cs pop xchg pop lock xchg add pushl push pop xorl fnstsw imul add in cmp out jle rolb inc add jo cltd cmp mov rolb mov lock xor ds push xor out (bad) or push cltd pop (bad) cmp jg add inc cmc jns (bad) cmp (bad) decl scas out cmpsb mov add add fwait int inc and cmp mov comiss dec pop sub (bad) aaa fnstcw pop std clc lock aas inc imul add insl jmp notb pop outsl clc popl shrb arpl sub inc xor sub iret xor nopl xchg add cwtl shrl xlat pop in pop and adc jae pop cs add addr16 xor ja pop cld push cmp stos push fs fsubrl aaa adc das xchg pop lock or push sbb loop inc fldcw jge cmp sbb push sub sahf int mov add inc addl fsts xor sbb push push sbb dec rolb fldt loopne jne ret roll lock cmp xor fcompl jl sbb (bad) fstps sbb or test or push insb push shl xchg pop xchg out and add push xor addb mov push and add or add fs ja mov cmp andl shrb cwtl mov daa sbb cmp in scas mov daa and out pop neg xor and sahf jnp adc cmp clc dec push dec jnp (bad) sahf push mov push push enter daa lret xor daa xchg mov outsw push (bad) sbb js dec addl fisttp adc xlat mov (bad) cmc sbb popa cmp mov pop xor cmpsl lahf adc pop test cmp inc and xorl and fistp pop daa inc push neg imul daa dec sub aas push es cmp xor mov dec sub loope jnp pop aas jns dec and mov es and push pop in lods frstor and and cmp fsub mov jmp pop push fldenv xor push mov jnp xlat push lret push xchg push mov or (bad) push cmpxchg8b daa dec daa push (bad) mov repz sub jae mov push xchg mov jecxz adc xchg inc inc inc or data16 push mov scas dec push pop es repnz (bad) daa inc aad push in mov push dec dec pop daa mov and xchg add push incb in rolb add clc daa add int jecxz add mov in fdivs mov test data16 add inc arpl daa ds shll jne jb xor arpl ror in sbbl (bad) sub out cmp dec fs cmp ror insl push fbld fnstcw aas daa dec lret fdivrl pusha ljmp hlt sahf insl es daa dec add sub jle xor in repz sub jecxz test orb or add xor in inc xchg fdiv loopne sbb or stos movsb sub jae out adc daa xor fcmovne cmp daa aas das es mov jg in push (bad) repnz inc sub push daa xor mov stos and push sub rcll pop outsb data16 inc push addr16 (bad) je push inc mov data16 je mov mov clc daa fsubrs mov (bad) pop lock cmp jmp dec push outsl pop fldenv pop xor dec xchg daa mov subl adc xlat (bad) jo jmp pop jne jecxz cltd and xor inc sub and loope je jle adc cltd xchg shrl sbb lock cmp daa (bad) addr16 lret fisub clc or sbb xchg fidivr vrsqrtps dec xor dec daa dec daa dec out sbb daa clc dec je dec (bad) jne mov adcl rorl dec out aas sbb (bad) push pushf sbb push lahf mov jo xor cltd cltd or push mov lret jb out pop pop insl adc daa repz les sbb adc dec dec iret mov (bad) jb cwtl and add adc push arpl repnz mov cwtl sbb and push nop stos mov mov mov inc ja shrl pusha and cmp pop es dec mov addl ds (bad) jmp je mov push pushf mov mov rcr (bad) lock aaa into aaa daa cmpsl test and lret jbe stos sub aaa sub insl rcr xchg mov daa xchg adcl pop mov fldln2 sbb push and pop dec jmp xchg rolb add lds pushf aas lahf add aad push mov jmp sarb and sub inc fbld xor xchg pop (bad) (bad) aas jae cmp jae aaa xor pop add push sbb in and sbb aaa add xor jae cmp mov xor aaa jle outsl lods push test pop or xor add push sub (bad) adc fistp sbb inc outsl dec icebp lock pushf jg sbb fnstsw xor mov lcall (bad) stos dec mov jl pop lret pop out insb xor jo sbb sbb cmp jo aas and mov pop lods xchg and push push dec aas push aas xchg pop in pop call ss add pop mov push pop jg jae fisttp ja fwait cmp add (bad) push ja sub cmp and mov insb mov pop and xor mov jg mov jb fbstp adc or cmpsl push jnp add in or cmpsl mov add jae pop pop shrb jae int3 in push sbb jle das sub pop xchg out (bad) xchg (bad) adc and bound pop out pop xchg aas out cmp ret cmp out mov add inc pop cmp cmpsl adc mov push push push cmc pop stos pop or mov jae ja xchg adc pusha (bad) fisttp mov aas lock test aas shlb adc fcoms aaa jbe das out mov xor das (bad) sbb sbb (bad) cmpsl das add sbb mov cmpsb das push or aaa pop jne pop fimul add cmp push jae jae pop inc cs iret fdivrs fidivrl pop push jo sahf sbb stc or jo fucom out push pop pop jae mov test pop adc dec xlat mov pop inc lret push mov movaps js xor sbb lret in aas push pop mov lock popf mov cs xchg adc pusha mov xor or adc cwtl ljmp enter add dec dec mov pop adc sbb jnp jae ss sbb sbb sub ss add (bad) sbb or js out mov je jb add fs in fimul or dec push jnp jnp js or mov roll das es inc sbb cmp insb push xor inc or insl mov iret gs push inc adc arpl fisubrl push data16 push mov data16 xchg repz adc outsb or (bad) push jo dec mov jb sbb jnp xor outsl push push jns dec lds sub arpl ffree subl cmpsb dec cmp js data16 xor mov dec aaa cmpsb outsl andl outsl jo xor and jb jne jo jbe loopne xchg dec (bad) ljmp lock jecxz outsb outsl cmp jno pop or das add scas sbb cmpsl push mov pop jg movswl lds aaa mov push lock jae out popf or fwait pop adc data16 ja out add cmpsb xor gs jnp adc inc sahf dec mov mov ficomp xor xor arpl arpl (bad) pop mov sub fs sbb out sbb ret mov jo fwait fs and dec movzwl testw ja movd imul jne mov sub sbb arpl shrl and push xlat imul lods adc addr16 cmp dec push push sahf bound mov jle jbe fadd sbb ret (bad) mul fistl jb outsb cmp shl int fwait addr16 das popa (bad) add cmc xor or inc sbb mull addr16 xlat xor notl sti and icebp data16 jne and mov (bad) pop push jle ljmp fwait insl rolb lret sbb pusha pop jae (bad) jo mov add cmpsl (bad) cmpsl or inc fwait jns mul sub push ds push jb push jmp (bad) packssdw mov mov push lcall adc lods pop adc aas addr16 nop bound mov xchg sub add sbb or xorl std js xor inc sbb (bad) jo push decl cmp pop adc fadds mov add jno pop add push push or push out add or imul imul subl fcmovb icebp loope,pt mov or mov ss inc ljmp fist xchg add (bad) or jne push inc pop adc lods bound dec inc xor stos (bad) or cmp pop sahf bound mov pop fbstp mov xor sub ds imul cmpsl and push jo pop mov sbb ja ss and insl xchg loope xchg shlb (bad) shl lret cmp fisub adc push jl ja out jb das sub jbe inc push xchg add add fs imul sbb ds push jecxz decl das pop sbb mov mov out push push pop dec mov sub fldl mov insb lock hlt sub cmpsl jo outsl test js and rcll dec jnp sbb and aaa xor add daa in xchg fwait mov jns dec push push repz push xchg mov repnz das pop jb push test sbb push mov cmpsl inc outsl mov outsl popa inc mov inc jns lods sbb jo daa sub mov pop fs xor dec test es shrl jmp pop faddp pop jb fisubrl pop push icebp sbb arpl and rorl setg (bad) jmp fs lcall push sub jb add sbb mov pop push (bad) xor sub and insw in (bad) or mov mov inc push mov or (bad) xchg ljmp mov cmpsb es fsubrs pop imul testb push inc dec arpl insl sbb out inc lret push push aaa mov push es push adc jle,pn outsb aaa dec das dec dec sub pop cmp add push mov (bad) add rclb sbb lea daa arpl push fninit dec add das (bad) jg fwait pop push xlat jno mov or lahf pop jnp aaa sbb ret cmpsl add mov adc add lds add jmp mov sbb jns es or out idivb inc aad dec data16 repz lods imul push lea stos daa mov lods (bad) inc and pusha cmpsl adc pusha and add ficom imul xchg mov popf cmpsl fiadd scas (bad) mov or or in lea mov data16 or test js sub mov loopne das fildll and jae add push mov je jb out add mov cmp jno adc jbe popa pop jbe ljmp dec nop loopne out jnp push add push mov add pop sbb xchg arpl or push push bswap jb dec mov xchg or addr16 mov mov fildll pop push rol sbb sub xlat dec mov pop jp fidivl xchg inc (bad) jl pop in sub (bad) addr16 adc adc outsb mov (bad) iret daa dec out and insl (bad) imul fsubs dec lods inc xor iret jo das jl and (bad) push test jnp (bad) jb xchg stos pop adc fwait je cmpsl idivl inc bound pop (bad) push (bad) mov dec cmp xchg mov push sti mov xchg xlat jb jbe jl dec push xchg push mov inc mov xor (bad) adc adc push and dec mov xor sbb mov out sub pusha or into dec imull (bad) ljmp push mov dec jnp (bad) sbb jge mov fbld daa das xlat xor mov js dec cmp loope lods xor shrl pop (bad) (bad) push jmp jecxz or add enter (bad) adc repz adc pop mov mov and out js dec mov cmpsl aaa xchg sub outsl pop sbb or gs add pop dec push or arpl shrb sahf sarl push loop out outsl mov pop sbbl rorb call bound je stos adc cmp xor stos ss dec fist inc add mov mov add pop popa ret mov pop mov push inc sub imul test pop jnp push rolb out and je cs test inc lcall (bad) jo pop mov insl (bad) pop mov xlat adc push arpl push xlat ljmp pop lods dec stos cmp iret push push bound lret sub fs sbb stos fdivs adc sub lock (bad) aaa js scas mov andl ret fisubl ret pop jecxz xchg sub pop sbb pop stos pop ljmp push sub vorpd iret (bad) out and xor or imul jo pusha lds shrl adc xchg and cmpsb popa mov out or subb test js aad xor cmp into (bad) mov and inc dec lahf mov and mov (bad) mov sbb (bad) sub jnp test cmpsb pop pop pop jae insl add sub daa data16 mov fwait scas ja mov inc push mov xor pop test push lcall jb xor push xchg daa and and sub xchg and (bad) cmpsl inc jge push test pop push jb lods pop jmp push stos pop out (bad) jmp imul shrb dec push aas push rclb das jmp jnp sahf sbb jbe mov mov pop stos or arpl insb inc sbb mov push or sub sbb outsb xor std pop and mov aas daa inc ffree xor sbb fisttp sti jo inc mov pop add push xor jbe inc xlat dec arpl push and fisub mov push sbb push mov push fistpl push pop ja add frstor push jnp pop xchg or outsb daa or push daa xor push into repz pop dec (bad) (bad) inc addr16 add add add pop sti jne andl bound and pop scas repnz notl repz adc adc cmc sti push sti jne push or adc jbe jno pop and sbb sbb out push sbb and jno pop and insb lods sbb stos mull push jp adc jae pop push inc jae fwait or mov sbb out xchg (bad) xlat cmp adc loopne sub adc sub sub lods xchg js (bad) aas push mov ss call jnp je pop aas cmp cmpsl fisubr push pop inc movl push and jmp jne lods les lods inc pop stos xor iret sbb mov inc (bad) movsl movsl mov dec insb fadds sub out es push and adc aas arpl add jmp roll repz or stos ljmp inc clc out aas or add rclb (bad) pusha adc push and adc sbbb pop cmpsl dec xor bound aaa pop bound inc push addr16 mov jg push mov jecxz and adc push pop addb jecxz xchg andl das mov pusha adc outsl mov sub sub push inc mov and mul inc outsb add pusha clc (bad) jae daa popa pusha inc bound push or xor adc pop xor cs lds adc cmp mov add cmp jmp inc shrb adc pop adc pop bound int inc scas dec mov inc xchg mov aad xchg inc sbb out push (bad) and jg ficoml jmp pop lods scas mov jnp dec movsl (bad) lds mov mov imul adc push arpl scas mov test mov rclb aam push sti xchg rcl mov add dec sub pop mov scas and xchg movsb (bad) fs push pop pop cmp mov dec and mov fbld pop adc or mov daa imul dec imull xorl loop inc movsl aam pop das xchg data16 add and jno lea mov outsl inc and inc or add addr16 xor inc mov xor or ret cmp xor push aam or and xchg inc lods cs dec shlb lea mov xchg push adc (bad) adc jmp jbe inc ds popa test fs imul sti sti jns pop je jmp stos scas or hlt out aas imul insb lea dec dec lahf outsb xchg arpl jo adc sbb jecxz xchg arpl xchg xchg mov jmp dec jnp cmpsl sbb add add fcos (bad) (bad) dec mov and inc scas xchg dec mov inc mov lea lret pop movsl loopne lcall pop sti (bad) out or adc mov out int3 mov push and jmp in mov cld jl and jp arpl stc cmp rcr jge lock stc lcall (bad) shlb int3 in mov (bad) lcall (bad) push scas lcall add enter stc xor int movsl mov push jg (bad) jmp test push adc mov add or repz repz (bad) (bad) jmp push cmp jne sbb inc rol cmp (bad) mov xor jno mov lds mov pop xchg out bound add stc ds (bad) (bad) push xchg repz cmp xor std mov jno dec dec dec aas fcoml mov push aaa mov (bad) fistpll ret xor cmpsb aam push pop imul sub ret cmp test hlt fcompl in (bad) popa mov jp out sbbb std (bad) (bad) inc mov vxorpd dec (bad) xor loopne test dec mov scas test jecxz aad fsubrs mov and imul (bad) (bad) pushl xor push push jne inc cmovnp pop xchg push and xor mov pop adc sbb (bad) (bad) (bad) fild scas arpl inc fdivr mov (bad) dec adc xchg repnz in inc mov fwait mov movsb dec fcomip push iret dec xchg add call decl gs movsl mov (bad) movsb cmp out stos push andl push (bad) adc movsl jmp inc inc mov loopne lret cmp loop scas dec into imul push (bad) (bad) ljmp push lds and testl dec loopne loopne sbb je cld (bad) (bad) call fwait nop add adc and or loopne sub movsb jg mov gs push enter (bad) (bad) call hlt pop pop add mov inc (bad) xor jmp aad (bad) (bad) jmp hlt add push (bad) ss mov adc dec popf push add and mov pop decl xchg imul or lcall push outsl inc sahf jno inc jnp insb and or (bad) cltd push sbb xchg pop sti (bad) inc and shrl cmpl addl mov orl sub add decl adc lcall sub sub fidivrl out push xor xor sbb and and adc jmp add dec mov dec (bad) (bad) (bad) (bad) (bad) jns pop sub pusha sub or jmp ja mov sub push or (bad) mov xchg jne mov test jp push sbb (bad) (bad) (bad) (bad) fistl jno push pop insl dec cmp xchg std xchg testl xor sbb leave (bad) out pusha rcr stos (bad) int3 lcall push mov mov (bad) (bad) (bad) pushl adcl lret xchg mov (bad) std dec mov rol mov (bad) mov inc pop int3 jp sbb sub je mov scas adc add inc mov sub (bad) push rorl mov inc lcall incl or xchg fisubl jp mov test (bad) jmp dec cmp and xor or xchg dec shrb pushf aas fwait fs aam (bad) (bad) fbstp jne dec sbb lret stc imul (bad) std xlat js stos cmp mov jae cmpsl push jnp sub dec sub jg (bad) cmc lcall sub enterw sub add push ds ret fwait shlb (bad) inc push sbb aam lahf inc in inc jmp aad (bad) (bad) and out lahf push sbb mov (bad) lcall stos mov dec out and (bad) arpl jns rorb shll call shr sbb mov ret scas mov jne sti (bad) (bad) (bad) cld ds push rolb fildll pop sub std dec int3 pop shr fwait pop roll mov inc and xchg push add pop sub cli push movsl and int ret jp cmp dec repnz sti (bad) fbld xchg inc daa xchg jne cmc cmpsl add test (bad) lcall sar test sbb or std mov add dec fnsave aam xchg xor lahf (bad) int3 ja mov cld rol pop sbb bound negb xor adc aaa and mov mov and mov outsl test insb mulb sub adc pop divb xor arpl loopne dec (bad) jg (bad) jnp push (bad) pop (bad) das imull test cli ficomp xchg hlt jecxz mov (bad) (bad) (bad) call mov dec ret bound mov mov sbb pusha rolb mov mov movsb mov mov out lock addl (bad) mov sbb int pop sub lcall xchg push dec out popa hlt mov icebp loope jl lock mov (bad) lcall lock repz cmp (bad) ret int dec dec jecxz pop cmp (bad) (bad) pushl xchg sbb inc mov push xlat sub sub rorb cs (bad) (bad) mov and xchg in xlat cwtl je imul mov inc in lcall cmc je pop mulb add popf mov lcall or dec (bad) test lods and dec xchg sbb (bad) (bad) (bad) jmp lret cwtl xchg sub push dec jle cli and imulb and pop ficompl jnp mov (bad) dec sub imul adc dec mov or ljmp dec aam call enter sti mov sub jns add loope insl pop (bad) (bad) pushl insl or pop in stc data16 mov xor pop lret lds pop mov sub mov or ds jns test (bad) (bad) (bad) pushl dec jo (bad) cmp push (bad) dec and sbbl cwtl jl (bad) xchg (bad) (bad) jg pushf sbb test enter outsb jno and fidiv dec mov inc (bad) (bad) (bad) decl std movsb out dec xchg pop fsubr out popa sbb pusha inc jne pop mov out out pop lock mov xor push add (bad) call aam jmp in out sarb orl mov out dec rorl mov ljmp jns fcompl lea nop test add test ljmp sub mov imul dec push mov sbb ss pushl test add xchg or decl (bad) jmp in jmp dec mov stos clc or sub cmp stc adc (bad) jmp (bad) orl push sbb mov xchg (bad) (bad) (bad) (bad) fxam mov push pushf cmp xor pushf add jle dec or jg ljmp adc jle push dec popl mov mov into or mov jnp sar jmp (bad) out (bad) les cltd (bad) cmp lcall inc mov dec xchg (bad) (bad) incl ret xchg pop je mov pushf loope fisubl or (bad) jns add (bad) (bad) call xor or sahf jl mov inc adc jno (bad) (bad) call mov inc rclb sar adc cmpsl mov jns rclb cs pop (bad) or pop insb sub mov idiv pop add mov in fs adc mov test ljmp xchg dec call mov jb outsb inc jge loope jmp mov (bad) push mov mov xchg pop lods sub popf pop std ds movl (bad) inc lret test xor loop push dec jle push and mov call (bad) push sti enter or push faddl jp sub jnp sbbl fcomip jg xchg test stos sub push pop jne xchg fnstcw (bad) (bad) incl xchg fwait je clc push stc nop scas scas insl repz int3 enter adc (bad) lcall (bad) xor cmp add sbbl dec adc cmp int3 add (bad) (bad) incl and popa imul int sub sub mov jp stos (bad) decl je xchg mov or jns push mov adc mov jmp dec int fsubr cmp arpl add je jns ret roll jge bswap (bad) pushl xor xchg ficompl insb xchg or dec cmp (bad) (bad) (bad) (bad) jle clc jo or or jge out pop lahf cmp mov dec dec push imul (bad) sub (bad) jmp cmpsl addr16 sti dec (bad) adc test cmp int3 test (bad) call test and (bad) jae mov add or repnz pop repz xor push testl jo test sbb stos jp xor mov int mov add (bad) (bad) (bad) (bad) lcall push cs push add or je fwait sbb mov outsl mov sub dec (bad) xor and ljmp rolb repz negb cli inc dec out ret call std dec jge push shrb addr16 mov jb aaa pop mov xlat (bad) (bad) call sarl incl jmp cmp mov ss std (bad) jmp enter pop test xchg or dec mov jecxz cmp int idiv (bad) jmp xor es push int3 fisub mov (bad) pop and (bad) (bad) (bad) mov fdivr arpl mull fstl jge test fsubs ss pop cmpsl fstl xor push stos aam out sbb insb fldl (bad) lock outsl cli lcall fisttp mov xchg shrb and movsl (bad) (bad) (bad) jmp call rcll jmp fs and ss mov lds sub cltd add push fidivr ret (bad) (bad) (bad) incl test dec pop ljmp pop cwtl rorb adc push aam cmp lds adc test cld insb clc test (bad) inc cmp (bad) (bad) iret pop hlt cli btc ljmp fs loope mov (bad) (bad) mov push dec (bad) cwtl scas and insl sarb lods fcomps adc scas clc push dec mov pop mov psubw jb,pn imul xor jns scas idiv (bad) ljmp loop adc jne xor int3 insb sub cmp (bad) fwait pop or test (bad) (bad) mov cltd mov enter movl hlt loope jmp mov jl test adc lods imul mov pop mov test (bad) (bad) pushl int add and xor imul (bad) (bad) (bad) (bad) cli mov dec data16 jg scas jne cwtl aad out pop mov jns call call xchg (bad) repnz or setns xchg jne (bad) (bad) (bad) call sbb xchg jp (bad) fisubr and in call loope pop sub data16 (bad) (bad) jg mov call mov or and push cmc rcr adc (bad) (bad) incl xor sbb icebp sarl hlt jne enter push les and mov (bad) mov push cmpb and push imul mov into xchg and (bad) loop roll cmp push mov jbe lcall dec adc cmp push mov hlt dec xchg push add aas add (bad) (bad) dec stc xor sbbb sti aas sahf imul adc insb pop fild xchg imul outsl cmp sbb jns repnz mov test or pop mov dec stos and jne notl imul (bad) lcall adc not test xor stc scas loope push pop lcall push inc arpl xor data16 jg int mov cli mov push ljmp sar clc mov hlt add je aas xchg push movsl push push sarl in imul ljmp push fdivrs xor (bad) decl cmp push es in xchg test sub dec es pop mov cmp lcall xchg sbb dec daa in pusha dec int3 xor popl mov ljmp jb loop loop ds adc xchg cs (bad) call (bad) (bad) jge lea stos push ret dec lods push pop cmp test (bad) jbe and (bad) (bad) lcall test pop je dec das fs pop push mov inc lds sbb dec (bad) jmp push das cmpsb jno lahf xor int mov inc lret int3 jmp push pop fdivl (bad) mov sbb lcall or div cmpsb mov aad adc cmp sub cmp (bad) jnp inc cmp mov push mov xchg fwait xchg mov inc jg out sarl ljmp fmul add outsb xor xor mov xor adc stc imul or add inc pop decl (bad) pushl push xor int test add aaa lods jmp data16 pop dec mov cmp jmp incl xor lret fcoml adc adc clc incl pusha xlat cld push popa loop push (bad) sub adc jmp or xchg bound lock mov scas pop inc adc pop xchg test add (bad) (bad) jmp das xchg adcl call sub push arpl and jbe ret add jg inc mov xchg and cmp adc adc aaa inc sbb mov mov lret int3 or test jp (bad) mov sub jg test out mov sbb bound test mov mov ja (bad) lcall in lret xchg scas movsl or sub mov jnp stc inc dec (bad) (bad) lcall add lea mull imul imul clc mov rolb cs (bad) fsubrl test inc sbb arpl (bad) jg ljmp aam jge adc dec and rclb call pushf imul ljmp jb add mov pop cld xchg (bad) mov outsb in test lcall es fisttpl sbbl dec lea jle sbbl jecxz in sbb pop inc sbb clc test out imul add fsub dec jg jb inc inc in sub test cmp mov (bad) (bad) jmp stc pop jno aad movsl mov sub cs and mov or jmp xchg mov out mov push mov jmp (bad) xlat jmp push sub bound inc xlat mov lret jno add (bad) decl and mov mov add insl cli (bad) incl mov mov imulb arpl out xor (bad) ljmp sbb and or push roll lea pushl ret inc jb roll (bad) ficoml arpl aaa push jno mov popf sub dec outsl fsubl or sbb incl push (bad) lock push inc ret pop mov les into mov sahf fidiv dec std jne cltd cmpb jp fs (bad) mov sub sbb in pop cmp adc (bad) (bad) fcomip out sub and js sbb inc push fwait sub cld pushl imul dec test pop push (bad) (bad) jg cld ret fwait xchg jp cmp push aas mov jb mov daa add mov adcb scas std aaa cld mov push push xchg leave mov pusha test jmp loopne ss push xchg xor push pop gs mov sub cmp sar jmp or movsl mov jge mov or cmp (bad) ljmp (bad) sti shrb out cli mov les inc stc fildl xor inc push loopne (bad) (bad) jg pop mov push mov inc movsb rcll jp mov sub (bad) jg clc pop inc xchg mov and or mov jp incb clc (bad) incl leave daa js in cmp clc push xor dec je nop xor scas std inc (bad) ljmp rcll out daa cmp (bad) mov (bad) lcall xchg cmp out rol int3 (bad) or xchg mov xchg repnz cmp or int3 mov jo jo outsl insb sub sbbl bound and (bad) (bad) (bad) jmp movsl mov (bad) pop mov mov je ja mov add sbb notl cmp in push fsubs (bad) (bad) (bad) incl sbb loop dec or in dec and add lahf inc aaa cmp push cli pop cmc pushl ret lcall cwtl test (bad) fs and jg sti cmpsl sbb cmp add (bad) jno,pn cmp (bad) (bad) push mov loop notl cmpsl setp inc dec outsb in lret mov mov icebp pop leave xor (bad) ljmp clc jbe into inc pop cld jle sbb push repz push xchg adc ja stos fimull cli sub xchg push lcall xchg xchg je lcall push fwait push int3 popa push add mov or gs hlt pushf jecxz (bad) (bad) fbld outsl repz je lret push aaa outsb inc das stos or rclb (bad) mov pushl inc and roll or add cltd pop test fwait (bad) repz fdiv (bad) (bad) (bad) ljmp fnop into cmp xor dec les adc push (bad) (bad) mov lret mov jbe cltd into in jg js xchg add xor pushl mov or outsl lods push sbb cmpsl and cs mov test ja lods push (bad) add jmp push add jns dec fistl addr16 (bad) (bad) push leave push clc or fsubrp jp push sbb (bad) pop cltd jp (bad) cs mov lea lock (bad) (bad) out loopew cwtl rcll daa std adc cmp icebp adc insb fsubs mov sub pop aad lret xorl push jmp cwtl jae xor (bad) (bad) ljmp adc popf mov iret and add out inc lds xchg imul pop rcrl sbb (bad) (bad) aas leave iret cltd popf xchg loopne insb in pop bound fist movsb mov mov mov roll xchg sti xor addr16 aaa popa dec mov loop push icebp fld1 in call lock sahf pop xor insb mov push rcll xlat decl lock cmp shlb repz mov dec test incl adc scas and sahf pop push (bad) (bad) push bound add fwait jno ud2 jae cs je inc loop aam aad xchg pop icebp jmp add loop out rcr subb (bad) ljmp push or xorl hlt insl dec mov rcll cmc subl lret push adc pop sti lcall mov fistp arpl mov ljmp pushl stc inc or orl or dec and imul xchg cmp or xchg dec mov mov jns mov outsl cli call test sbb xor mov sti xchg mov mov (bad) (bad) jmp hlt std mov push lods or or mov loope fstpl jle aad push arpl jecxz loopne call xchg hlt or (bad) (bad) (bad) lcall outsb xchg mov lret and aad mov jp aad imul sti jmp lcall loop outsl jae lret (bad) stos loopne movsb call incl mov xlat sbb or and sbb sbb sub idivl jp lcall mov in icebp scas icebp sub subl mov loop shll adc sub push (bad) (bad) incl cmp into dec stos xchg fs or insl mov mov (bad) ljmp addl int3 jnp dec sbb sbb (bad) (bad) (bad) lcall sbb inc ret bndldx jle ret cltd dec (bad) jae push xchg or sti add test arpl or repnz pusha hlt lock dec pop ret mov fwait cli decl pmullw popa lret (bad) clc dec loope out pop sti (bad) (bad) mov push or pop sub dec mov inc cmp (bad) pushl cld rolb pop pop push dec pop push and mov out adc ljmp mov add or and in fidivr push bound xor (bad) sti ljmp (bad) ljmp sub ret aad sbb aaa push pop sbb mov (bad) movsb imul (bad) jmp jp cld test stos mov clc into (bad) aam fmull dec js bound add test (bad) (bad) mov data16 mov outsb test ljmp mov decl mov stos mov inc bound outsb cmpsb cmp lahf testl or mov add (bad) in pop das dec and jmp fs scas scas ja dec mov (bad) (bad) ljmp and popf ret loop dec pop push loope xchg jb dec or das push add push je decl fwait lret add or icebp mov cmp (bad) in test xchg inc adc (bad) movsb stc pop loope lret add push (bad) jmp stc mov ret xlat adc fsubrl inc mov mov (bad) (bad) ljmp lods lret mov mov ss popa js repnz je sti stc sub lret sbb das stc cmp loopne ja sbbb dec and cmp mov (bad) jmp jmp je sti push out sbb mov lods add dec test pop jnp mov cli mov decl pop jg int jmp pop in (bad) pop js sbb dec (bad) (bad) (bad) (bad) sti pop popf push sarb sahf push jne inc sbb (bad) fisubrl (bad) imul cmp ja out (bad) insl scas inc outsl cli pop pop rorb in inc repz sub shll shlb popf mov fs out call cmc incl aas add cmp pop out mov aaa pop push cmc stos push out (bad) call jge mov sti xchg in xchg mov call sub jae sti xor loopne ds xchg mov in scas gs int3 cld stos call jmp out or and daa aam insl xchg mov leave daa add cmc mov pushf cmp xchg xchg xor add outsb add lods sti sbb xchg or ffreep or in mov mov inc jbe ret (bad) (bad) jg mov mov pop adc mov jp mov into lahf push push jno cmp inc (bad) (bad) jmp and cmovnp arpl lea in clc cmp jnp xchg xlat dec sub sbb dec mov (bad) incl mov (bad) pop inc and repnz and dec mov inc dec xor adc scas or jge dec sbb push sti movsl (bad) in push pop enter ljmp out xchg aam rcrl or inc stos jbe arpl repz (bad) (bad) incl jnp fcmovu push lret fwait insb ds rolb in mov stos push mov scas inc sub arpl mov lock push ljmp pop test ret test dec je ret out loop in inc ret xchg xchg lock or jo fstpt xchg dec (bad) call xor and rcrl int lcall xchg push iret fstps xor sub (bad) fcompl jnp hlt test pop adc mov pop ret leave inc cmp clc incl pop fwait cmp add jecxz pop add rorl jle and jae (bad) mov insl jne mov nop sti fisttpl cltd add cmp push test (bad) decl jns test je and daa mov push xor (bad) (bad) dec xchg and xchg cmpsb lods loope adc mov movsl (bad) pop cmpsb add scas sub (bad) ljmp scas ror xchg jl ret mov inc (bad) (bad) decl cld insl and popa jmp imul inc (bad) lret sahf jae in popa dec pop test push shlb sub aaa clc sbb sub and out sbbl (bad) (bad) (bad) jmp mov push loop int3 inc lods dec ret aas adc cmp les test sub mov int3 lods jl inc pop mov sahf xlat loope (bad) (bad) out ss or lret rcll bound xor aaa xorl push mov rcrb jne add (bad) mov iret jae,pt jo int3 add (bad) movsl fdiv jp inc mov add (bad) mov sbb ficoml (bad) fcomip sbb xchg push mov and add fildl (bad) ljmp mov cs rcrb ja insl jl dec dec outsl clc (bad) call fcmovnu das jo mov sub and loopne mov mov push loopne mov xor xchg int jno or (bad) fnsave xchg xchg call mov (bad) mov movsb ficomp jo xchg adc (bad) decl and scas dec out (bad) (bad) das jle xchg (bad) pushl hlt jns aam movsb sti pop pop mov dec imul add data16 xlat inc popa cmp add loopne stc jb icebp adc mov push pop push add rolb (bad) mov and jl mov or (bad) imull popf add fnsetpm(287 (bad) (bad) call hlt pop jb xchg dec lret pop push cmp jbe adcb push sti rcr inc inc or pop and rorb fidivr jl adc adc inc or rorb mov pop mov imul fcoms sub sbb adc xor dec push jle (bad) (bad) (bad) ljmp enter inc jl mov fadds idivb cmp addr16 and mov mov lods jg inc js mov cs dec push out inc (bad) fcomip incl icebp and out popf pop push sub stc jno lcall test in (bad) push dec pusha mov cmpsb inc push cs lret decl test or push nop movsl aad dec pushf fwait (bad) (bad) (bad) (bad) jg jl inc int test sub dec cmp add cli or and cmc xchg jns ljmp stc out sub push pusha mov sub notl and dec in in (bad) pop cli (bad) (bad) decl mov cmovs sub jp (bad) adc or and mov pop lock inc arpl xchg xchg ss push mov (bad) (bad) call loope push pop mov (bad) out pop fdivrl mov sahf ret sub daa adc sarb or incl sub and std fildll xor inc (bad) (bad) (bad) jg lcall roll aad outsl jnp cmp (bad) cmp mov or (bad) lcall ja adc dec or rcrl push inc (bad) dec pop in negb std dec adc sub (bad) (bad) (bad) jg push cmpsb adc stos pop mov ficomp pop jmp test std dec clc mov (bad) (bad) call jl test push loope fdivrp inc dec or xchg iret pop (bad) cld sahf lds cwtl dec jle inc stos les jnp and sbb sahf data16 mov movsl xchg jb (bad) (bad) lcall mov lcall scas push adc and (bad) lcall jp mov mov cltd pop test cmp (bad) jg cmp outsb cmp pop jmp fwait xor idivb cld inc pop pop inc sbb addr16 jb shrb (bad) (bad) (bad) fistl lahf mov inc add (bad) test les fldl mov (bad) (bad) sti xchg int3 jns iret dec imul add sub (bad) (bad) incl xchg rcll mov and mov mov call push cmpsl xchg add out inc insb addr16 inc cmp (bad) bound adc je jmp inc aad or movsb je xor in mov (bad) (bad) ljmp cmp dec loop sub mov sub adc mov adc cwtl testb xchg notl jle adc fisubr icebp lds cmp or xor mov scas call pop ds mov (bad) decl jnp dec mov or sub fistl call nop pusha pusha inc xchg inc lock mov (bad) cmpsl fcomps outsb fist push ja out jne rol mov fs mov (bad) (bad) aas int out or pop mov cltd mov (bad) fistp and aas and (bad) cltd mov mov xchg imul (bad) (bad) jg lea out (bad) out mov or inc adc push fidiv lods out ljmp push fistpll sub repz and xor pop lahf fisubr pop dec aaa gs fwait ljmp xor inc jge inc test dec fs mov (bad) fimull adc add fldl sti (bad) (bad) (bad) fldt jbe cli mov clc and push out jecxz and dec test (bad) lcall adc adc movsb aad inc out pop jge or cmpsb arpl (bad) mov push adc je lret push rcr inc and jb fidivl and decl dec inc push fwait lods jp iret fisttpl jno outsb roll cmp (bad) (bad) jmp sub (bad) and jle inc mov in mov out inc mov popf les mov stc mov adc ja clc add in sbb jo ss sub jae insb add xchg pop jbe icebp (bad) mov arpl push xchg adc cmp pop or mov add fsubs dec pop or cmpsb lret xor repz les cmp (bad) (bad) (bad) (bad) (bad) cli loopne xchg mov mov lods dec cmp iret fwait aam inc (bad) xchg cmp (bad) ljmp test add or shrb je int3 (bad) (bad) (bad) lcall stc test cmc push jb loope int3 pop es push (bad) testb call xor jp xor cmp (bad) (bad) pushl mov leave pusha stc jb mov push std mov call inc aam pop push xor jno data16 out or outsb and testl lahf test xlat out sbb inc lret daa cmpsl aad cltd adc insl dec addr16 xchg lcall push fisubl pop bound dec ja fnsave scas and clc xchg call mov and shr adc add incl test lret xor pop (bad) mov push or xorl cli or (bad) jne pop mov mov (bad) jg std adc pop mov das fadds xchg bound mov (bad) ljmp sbb dec lret inc inc mov (bad) (bad) (bad) jg cmp pop clc movsb ds icebp int (bad) sbb xor cmp (bad) push adc dec rolb insl push leave (bad) (bad) jmp sub and insl pusha les sbb inc sbb push push sar (bad) (bad) jg (bad) mov sub pusha arpl xchg pop nop hlt add xor sub pop jg das shrb aam xor es xchg adc ljmp push xor sub insl mov xorl (bad) incl or (bad) fistpl pop insb clc dec repnz cli ljmp pusha movsb idivb gs stos cltd mov push inc sar (bad) (bad) lcall xor cwtl stos jae mov xchg mov pop jno mov pop lock pop (bad) popa add out mov xor fcomip das adc dec sti xchg (bad) dec mov xor jne push les and inc xor movsb sub (bad) notb dec or stc (bad) (bad) (bad) jp imul insl sbb addr16 mov push jle cmp clc arpl fcomip das shll push aas mov push jb out imul (bad) (bad) call lock jl loopne inc dec push imul movsl popa xor dec sub push loopne test dec lock xchg inc cmpsb loope mov (bad) (bad) jmp add xchg out sub mov mov mov addr16 adc lods mov pop bnd xlat push fdivrl mov pop ds jmp (bad) (bad) (bad) ljmp add cmc adc sub dec inc ud1 inc push cmp (bad) loopne (bad) pop das fisubr dec mov push jns push inc lods loopne xchg incl (bad) adc sarl out sub or in (bad) (bad) (bad) lcall xlat xorb sbb pop dec into xor push mov pop jne fdivrl clc pop adc rcll mov add pop (bad) pop cmp das add adc jno mov mov and jmp je sub dec xor sbb jo aad and (bad) (bad) lcall lcall jmp add mov fistpll add pop jle repnz (bad) (bad) js and ljmp out xchg cmp dec imulb (bad) (bad) decl xchg (bad) sub pop stos or jmp outsl lcall por (bad) add add dec inc mov cwtl mov xor decl rcrl (bad) aaa jle or lock (bad) mov add pushf xchg mov cld mov inc adc push and hlt mov jno js inc scas pop jg lods mov pop loope pop mov jg mov (bad) into clc or push lcall dec mov (bad) (bad) pushl movsb pop push daa clc insb mov mov leave stc int jl popf push (bad) lcall mov (bad) mov es mov loope jmp jg (bad) (bad) mov xchg push (bad) mov daa (bad) lret mov je push outsb pop or inc jg (bad) xchg sub push cld adc hlt ret lret dec stc (bad) (bad) dec pop xchg and and jb (bad) aaa ss cmp sub mov fisttp js loopne mov arpl clc shrb popa dec push jge adcb jecxz lret divb jb push adc (bad) pop jnp insb imul (bad) (bad) decl xchg xchg or push rorl int3 in addr16 popf stos mov push mov mov push lds ret sub mov cld adc mov sar out jge jbe subl or ljmp add movsb (bad) repz push or out mov (bad) lcall adc rolb pop cmp adc fidivrl push sub jns,pn aad jle scas pop xor sub mov pop stc out ljmp fstpl fnsave test (bad) (bad) ljmp and sbb pop and pushf jecxz pushl mov xchg aas stos xchg pop out movsb mov shl cmpsl dec clc push (bad) fistpl xchg or pop jbe (bad) (bad) jmp jle jp popf pop xchg jae adc cmp fsubs insl repz (bad) mov popf add xchg lea cmp add sti (bad) mov leave dec xor outsl (bad) xorl (bad) jmp cmp int xchg insb sbb and sbb jge xchg dec and xchg cld (bad) ljmp or or cmc cli jnp pop jecxz and fisttp das leave dec loopne fwait (bad) mov in ret mov dec das dec sub lret cmp sarl inc jnp (bad) (bad) (bad) jge loope fmul sub aam pop sub xor xchg out test (bad) call int pushl roll aaa mov popa je push repnz xor cmc cld (bad) (bad) (bad) stc das ret (bad) out cmpsb and repz rcll aad mov mov mulb and sub dec sbb sbb (bad) (bad) decl inc pop jl enter lret andb mov stc adc xor or call push fistp ss or xchg insl xlat pop adc fwait xchg xor scas leave inc incb xlat (bad) (bad) (bad) mov pop push dec xorl daa pop sbb sbb mov std or adc sar pop mov (bad) (bad) mov pop adc mov aam adc mov dec imul push (bad) push jle mov push pop jge dec push inc push fistl arpl (bad) mov cwtl mov pop jne (bad) fbld sbbb inc out cmp scas clc incl cli and cwtl sbb clc add mov dec (bad) mov (bad) ljmp add pop repnz and jecxz mull jmp fnstsw xchg call icebp cmp in mov cmpsb scas dec jbe fdiv dec add call cmp dec cmp (bad) dec mov ljmp push xchg lret mov jo xor xor nop pop xlat sub das inc daa faddl repnz decl std stc pop (bad) aaa adc insb ljmp das and pop loope (bad) lcall add sub lock or data16 cmp (bad) adc in jg push pop ficoml jmp loop xor push dec rcl and cmp pop aas ret mov lahf add (bad) (bad) mov (bad) mov sbb mov jnp or add mov jecxz pop inc jmp das xor pushl jle add js call inc xchg push sbb dec inc pop xchg and aas lea mov scas add jne fucomp add xchg dec repnz (bad) lcall sbb xchg (bad) xor xchg cmp jg fs mov repnz lcall outsb fcoms and inc mov iret xor mov lea (bad) (bad) (bad) ljmp mov xchg addr16 cwtl call arpl sbb push out sub inc dec push ljmp and sub movsl mov (bad) (bad) (bad) ljmp sbb out push cmp xchg bound fnstenv pop mov add ljmp rolb insl outsl xor pop (bad) (bad) (bad) dec or mov fs xchg jae bound adc aad daa test inc xlat pop pop (bad) insl xchg pop push mov icebp stc fprem add sub adc jmp lahf cs push cmpsb leave jne or pop int xchg in xchg mov (bad) out lds mov addr16 fistp add xchg cld fcmovne (bad) jb or das stc (bad) (bad) push or cmc addr16 jb loopne dec (bad) xor mov (bad) jmp (bad) pop mov cwtl popa inc add or dec imul dec pop (bad) hlt add (bad) xchg js std sub outsb loope pop (bad) (bad) (bad) jmp xchg iret fsubrs aas notb push test test in mov cld gs ja inc (bad) dec mov in sti or das loope push sbbb sub xchg dec mov sbb int mov mov pusha out nop (bad) (bad) jg mov les arpl or (bad) out mov push das jp pop movsl lock or mov pop lret outsb add push (bad) (bad) fcomip push gs (bad) and jno push push mov test idivb lods dec sbb pushf sar (bad) dec mov movsl cmp and movsb sub dec xchg inc or clc (bad) ljmp dec cmc pop lock cltd frstor push mov sbb lcall or mov lcall push xor repnz jns rep cmp (bad) lcall test imul jl inc push inc lcall (bad) (bad) lcall jae imul stos and pop add mov dec push cmc xchg xchg mov icebp mov jle dec sbb pop sbb outsb mov adc push xor andl sbb mov push (bad) clc fcomps (bad) (bad) decl jg fnstsw mov in mov jns cmpsb inc in stos xor cld (bad) ljmp push test xchg adc dec (bad) adc cmc jmp sub fs dec insl (bad) (bad) (bad) jmp cmp jg notl fwait xor test inc leave fildll mov push inc and flds stc (bad) (bad) xor add sbbb inc (bad) (bad) (bad) inc inc fs gs pop xchg outsl push sbb enter insl popa inc (bad) fs (bad) mov lcall mov outsb rorl (bad) (bad) (bad) lcall fcomi fwait xor mov (bad) repz sbb das inc inc xor leave (bad) (bad) jmp mov push xchg jb push xor shrb popf mov adc cmp insl decl imul push sbb pop pop ljmp pushf mov loopne movsb cwtl pushf popa mov xlat push mov sbb fnstenv (bad) jg call xor mov sub mov sarl sub out call js les scas sub fwait cmp jb call inc es push jle into pusha and push outsl lahf ss test (bad) jg push jl int pushf hlt mov inc (bad) mov and xlat stos repnz movsl leave (bad) (bad) (bad) (bad) mov std jmp popa sub jmp divb rcr notb cmp mov xchg mov (bad) jg popa sarb push xor out orl mov xchg pushf inc (bad) (bad) jmp cmp inc aaa mov daa addl popl and out out adc mov cmp mov dec jns (bad) (bad) (bad) pushl xor fstpl mov lea mov cli sbb stos rcl into xchg push gs decl decl mov pop pop outsb out or mov and cmpsb ret push or (bad) (bad) (bad) jmp adc sub cmp mov add arpl mov clc js jge ljmp stc call test jne fstpl sub arpl push pusha pop dec repnz jne pop sub dec aam iret fmul call nop or ret repnz adc jecxz push gs jne mov inc imul (bad) mul mov pop addl or cmpsb pop loop daa mov leave (bad) (bad) push (bad) shll sub push into or mov stc insl xor sar jg test lock mov push stc and das aaa das popa push adc std (bad) jg jp xchg and das or in daa mov push xor cwtl jle jl mov jb and ljmp in xchg insl dec lea dec xor add aaa xchg stc mov hlt jle scas jge call repz sti fadd inc (bad) shlb and in mov mov cli (bad) ljmp loopne jmp push jbe xlat imul pop enter cli push loopne call push pop inc xor or jbe cmpsl adc data16 in cli (bad) movl incl repnz sbb add jns mov or cmc test mov cld lcall or bound cmp push (bad) push and leave sar into stos jnp add sbb js adc jp clc (bad) (bad) ljmp cmpsb sbb inc shrl mov into mov mov scas sbb push push fcomip incl mov fildl (bad) stos int3 divl aaa lcall in or jae mov xlat pop add (bad) jne push out push xor and (bad) jg daa xchg sarb xor test shl scas clc (bad) jle int3 insl daa cli mov mov pop adc adc (bad) jb xchg sbb popa sub (bad) (bad) pushl lret cltd clc sbb subl jo add (bad) (bad) mov lahf in or inc jp push xchg pusha and (bad) (bad) (bad) incl mov sub sbb jl mov into cmp add mov push hlt idiv (bad) dec movsb mov int inc (bad) sbb cmpsl leave clc incl cmp sub fadd cltd es (bad) (bad) pushl push inc xor ds testl push addl stc (bad) adc cld xchg mov dec mov mov or sub (bad) fcoms (bad) (bad) (bad) pushl mov test movb xor adc std in fs notl xchg xor cmp mov (bad) cli jl inc add mov xchg push and lock clc xchg xor imulb push mov int ds (bad) (bad) (bad) ds add dec add insl xchg ja add popf mov int3 rorl pusha out sbb jno leave adc (bad) pushl and fstpt add xchg xor (bad) (bad) in mov stos inc loope inc dec ljmp xchg insb sub loope jmp imul sbb jle (bad) (bad) mov and ret or or and jle nop jae pop (bad) (bad) (bad) ljmp cmp loopne jmp adc mov mov cmp sbb (bad) (bad) jg push fcom movsb xchg cld jb cmpsb jge push xor cmpsl clc aaa int3 mov push xchg aas sbb cmp mov jns add push inc subl cmp fpatan push push or outsb (bad) (bad) (bad) (bad) mov (bad) shrb mov mov jne lret (bad) jge std outsl incl cltd mov in push mov fcompp popf mov aad (bad) lcall xchg or ficomp in pop icebp jne std mov fimull loop repnz (bad) jmp out inc aaa cmpsb push addr16 incb lods ss pop mov bound sub (bad) decl loope repz loopne mov mov and xchg xchg pop repnz (bad) ljmp js stos xchg movsb test sbb imul pop mov lods jns lret (bad) (bad) lcall sahf push mov pop xchg lret movsb add scas stos in sbb inc movsb pusha scas cs mov iret xor call je lcall std call sub jecxz in pop ds inc jb cmpsl into (bad) (bad) pushl rcrb fs add jp js cmp xor dec xlat or call inc notb pushf lahf je cmc mov call loopne outsb inc ss shrb push subl out xchg daa dec jmp (bad) jmp ja cs lds xchg mov daa fwait push pop addr16 add adc incl sarl push aas out add popf (bad) push or cmp or out js jne jge mov jo insb mov xor (bad) (bad) cmp fistl mov jecxz jecxz insl jg (bad) decl fldt fs adc aaa inc sbb ret adc (bad) call xchg je lret xchg dec fsubr test cld cld sub push push arpl inc je call loopne pop and pop arpl das xor rclb stos (bad) (bad) (bad) jnp popa sub sbb enter ljmp ficompl lods cmpl je mov (bad) jmp or movsw mov jmp test sbb (bad) mov flds les adc (bad) lcall mov adc pop (bad) pushf movsl jmp movsb mov mov (bad) decl je lods lock aas inc enter xor lahf sub and int jl movsb jno dec flds incl inc xchg push dec in aam inc dec icebp sbb jbe xchg add (bad) jg mov in jecxz fstl xchg jne stc add in sub push lock sbb pop in mov mull mov push mov aam jo (bad) (bad) ljmp stos (bad) std sub pop jmp jle,pn add dec jo xor jg lcall dec sahf add add or ss xchg lahf mov jecxz call cld mulb dec sub insl pop movsb in subl dec (bad) (bad) decl sarl outsb xor lea and pushl jb xor popf xchg jl fiadd cmpsb fs test (bad) (bad) jg mov jbe pop pop jp enter mov (bad) jp je add pop lods out cli das clc ljmp lret (bad) fistpll add in xchg mov add mov cli scas add rol add jo cld adc loopne mov pushl and sub adc push push inc imull (bad) (bad) jl repnz js sbb fcoms notl rorl pop adc (bad) (bad) dec popf mov mov sub mov add addb fistp cld insb sbb ja push adc mov les xor dec add (bad) (bad) jmp mov fwait clc icebp mov dec mov repz mov ljmp xchg mov fwait pop fistl ja sti dec xor lds xchg pop xlat mov (bad) (bad) call mov and shll add sbb cld (bad) (bad) decl mov mov aaa aam insl dec dec mov pop scas cmp sbb (bad) call incl popf sqrtps mov sbb (bad) fisttpl jge shrl cmpsb movsb imulb cmp and pop in roll incl inc lcall sub fildl int3 xchg aad decl lcall sbb mov scas mov jae cmp xor pop pop (bad) fcmovne xlat dec dec add mov dec icebp iret daa (bad) adc push lods ficompl not lds fsub fnop push jae cli (bad) (bad) call dec mov push lcall sti cs and bound insb insb sbb jg fldenv sbb mov cmp pop pop loop or (bad) (bad) (bad) mov inc mov lock jae xor push movsl or and dec cld pop mov scas mov push add repnz cmp sbb dec (bad) (bad) (bad) inc vmovntps pop stos sbb pop scas gs xlat push and flds aaa xor dec repnz jmp xor and push pop addb fdivl das rcrb xchg cmpsb leave mov shrl lret (bad) (bad) call cmp xlat xchg cs mov out loopne pop sub add icebp xlat repz cmp jbe pop cmp neg call lds insl (bad) in mov jns andb bound pop es popa (bad) in mov mov (bad) (bad) (bad) inc add dec es or loope std inc stc lock dec dec xor call imul inc hlt pop cmc decl adc fmuls or cmp out dec movsb cld dec cli (bad) mov negb int3 mov jmp mov xor bound dec stos fdiv mov sti stc cmpsb mov call xchg mov or fidivr arpl ljmp xchg lahf pop adc add xchg cmp cmpsb dec dec fisub daa jg pop stos mov (bad) call sti sbb std cmp insb inc adc mov xchg and lahf insl adc popa (bad) lcall cmc test mulb mov sub sub jnp (bad) (bad) (bad) pushl sarl (bad) loopne cwtl sbb orl pmulhuw push and mov jg pushl fiadd adc push pusha lret jp test sub (bad) lcall mov or nop sub int in mov fldln2 mov out mov lcall pop inc stc or mov loopne jo repnz sub mov in mov pop das lock popa pop add test in je mov cltd pop sub xchg jne mov mov xchg out outsb fcoml popa dec inc (bad) (bad) call or xchg fwait je jns sub jmp cmpsl negl scas std decl int3 cltd rolb mov and push inc mov (bad) (bad) call cmp sbb sbbl jp pop scas (bad) mov out dec jbe xchg shrl imul mov inc mov jae in test incl pop notb dec rcrb xor mov xor fs jmp loopne (bad) mov xor pusha mov add and out mov or call push and call cld xchg repz cmpsb fnstsw leave test insb arpl dec pop ret dec (bad) pushl cld inc imul pop pop es repz aad sti cmc cmc cmpsl fcompl nop (bad) decl test sub nop xchg fsub push sbb mov (bad) (bad) ljmp andl push push repnz mov pop js jne mov repz aam scas ljmp and je push int3 xor (bad) (bad) pushl roll stos rol or cmp mov pop mov mov lods add (bad) dec (bad) fwait mov pushf adc dec or mov mov (bad) fdivr xor ret lcall or es sbb in scas (bad) mov decl dec or es daa (bad) sub lcall cmove mov xor (bad) jnp cmp aad lods movsb ja (bad) (bad) (bad) mov popa or arpl and ja cmpl xlat mov ljmp jnp ss or or (bad) (bad) (bad) (bad) (bad) clc push pop xchg nop jno ret push mov dec mov adc pop pop (bad) jle pop aad insb (bad) in pushl es add mov mov ret stos test (bad) decl (bad) fsub dec lret or add iret into mov xor sub repnz (bad) jmp cmove mov popf add stc xchg and jp (bad) movsl fcmovbe dec jecxz (bad) hlt pop aam out (bad) je xlat test dec mov shl (bad) and inc (bad) cmp inc mov push imul mov clc lcall mov je push lock push repz aaa (bad) (bad) jmp push push rcll out pop mov or mov xor push dec jns mov gs (bad) jmp daa cmp pop jmp movsb (bad) xchg mov cmp (bad) (bad) call fistpl sti jp push mov shrb fiaddl daa fs sub pop cld (bad) (bad) call inc push out cwtl add fs mov test or mov arpl (bad) lock (bad) (bad) call pushf ljmp and out out (bad) jb,pn lcall (bad) (bad) fidiv iret push xchg add jge jmp aas lods in mov das inc decl icebp sbb ss ja (bad) sahf dec pop enter dec (bad) (bad) (bad) jmp push sub xchg inc lea xor pop mov cmp xchg mov sti inc mov mov imul clc cli sbb sub dec loope pop xor (bad) (bad) (bad) jg lahf xorb stos jne nop stc test mov fs or hlt call sti hlt dec and addr16 ds lahf ds lods add pop (bad) (bad) (bad) (bad) jg imul ljmp iret mov test sbb mov icebp decl dec add (bad) addr16 int push xchg and pop and (bad) testl jne insl add test sahf jmp or jp and and cmp sbb dec push or and nop dec pusha stos ret ss stc xchg (bad) fsubr shlb or (bad) (bad) decl divl pop out faddl daa xchg aam pop in pop rcrl or mov mov xor jge pop test shrl pop fidiv jg incl sti iret enter gs or jns push movsl mov cld (bad) call repz pop jl sbb fild mov fildll xor movsb mov lcall fsubl loope pop pop push cmp movsl es dec xchg out repnz (bad) call addr16 pop out popf in loop cmp cli bound out icebp les add pop jle pop and loopne and ss inc call (bad) mov lea in imulb loopne std das in in gs lcall je and add and into gs (bad) (bad) ljmp std or jne jbe jns addb sub adc clc fcoml mov lcall incl mov loop loope sub lcall (bad) (bad) (bad) decl mov pop jno xchg (bad) ss dec aaa js (bad) cmp popf and (bad) das cli enter ja mov push ljmp cmp lcall dec dec pop daa jecxz pop sbb mov scas and jmp xchg test repz lret sub jp (bad) lcall mov xchg sub xchg adc sbb inc xchg fadds fst (bad) incb pop pmuludq push mov jae push cmp repz sbb or (bad) lcall movsb sti pop xchg (bad) jne fildl (bad) outsl negl jg cli jnp in mov inc (bad) pushl cld xchg add mov scas inc fisub (bad) push (bad) enter in or pop cmpsb pushl mov lret inc loop or cmp or pop xchg ret add ret repnz cmp mov or mov dec xchg push les icebp (bad) (bad) jg mov ret jge aad inc addr16 in add pushf aam faddp mov (bad) mov (bad) (bad) call (bad) mull movsb dec jecxz into fildll push jle andps mov push mov cmp je (bad) (bad) (bad) jnp add cmpsb aad pushf ss sbb popf gs pop nop subl push xor lcall mov mov std (bad) or decl test (bad) popf arpl movsl cmp sbb mov ja fs (bad) (bad) (bad) out jecxz call cwtl fs or sbb leave pop push sbb rcrl dec repnz (bad) (bad) pushl dec dec sti adc orl fdivl mov xor pushf nop xor jl (bad) ds cli jmp dec mov jne fs fwait sar (bad) mov xchg jmp xchg nop jg cmp mov push test jecxz push fldenv test leave sbb (bad) mov adc in and fnstcw sarb jecxz lcall int3 jle jg adc movsl les test jmp test (bad) jmp push add aad mov clc add cmc jae mov dec jp and imul movsb add pop or fldl (bad) lods fdivrs fisubl inc sub mov inc xchg fsubrs cmp mov mov or lock cmc (bad) lcall fisttpll sub das popa aam add test loope (bad) lcall (bad) out mov dec dec fsubrl sbb dec mov leave xchg mov jae jne pop daa xor pushl cli and pop pushl adc xchg lcall push test sub jecxz mov sbb sub mov dec loope mov push insb ficom or xchg ljmp lock loope fsubp or cmpsb aam sbb and loope jl (bad) mov inc jno cmc sbb int mov aas clc (bad) call sub mov in fwait hlt ret pop mov loope sbb inc (bad) (bad) ljmp cmc or inc sub xor arpl cli shlb sub repz test in stc dec (bad) imul hlt cld jne ljmp popl lock lods push xor fmull aad adc test pushl js into cmp std enter jb mov les fwait stos mov dec xor decl outsl lcall gs adc ljmp movsl xchg in mov xor push jmp push int sbb vmovq (bad) fwait test leave inc (bad) (bad) (bad) jmp (bad) xchg mulb in inc out rcrl mov cld mov cmpsb pop repnz jg (bad) (bad) sti mov dec pop adc or arpl aaa jmp dec xchg pushf xchg imul (bad) call in shrb cmpl mull in pop push xchg mov bound leave (bad) (bad) cld daa pop clts fldcw adc gs xlat xchg sbb and or cmp (bad) (bad) push jmp cs (bad) xchg popf fistpll push lahf outsl fsubrl das or adc push js add pop add nop sbb mov (bad) ljmp xor or mov add minps inc movsl xchg data16 (bad) (bad) inc aam cmpsb mov clc and mov mov mov cmpsl sub inc jne and fistpll fwait inc lret mov jl hlt repnz pop add adc and stc fisttp xchg std sub mov inc outsb inc (bad) lcall fdivr add mov inc stos es push mov jb pop leave mov incl imul pop cld mov jg sub test movsb pcmpeqd mov and pop pop cltd cpuid mov aad das cmp (bad) jmp pop inc mov fisubrl dec mov xor call inc cmp jne xlat popa (bad) dec dec test (bad) (bad) (bad) (bad) in xlat leave mov cmpsb sub aad xor and sub cmp fld1 cmp push jbe repnz pushl fs cltd stos push in sbb sbb outsl xchg push cmpsb push popa sar (bad) (bad) jmp jne mov and jge xchg ja adc sahf loopne scas xchg xlat lret sbb (bad) call jge dec mov arpl scas pop cs mov (bad) (bad) (bad) jg es xchg push test dec or ja push xchg test stos aam repnz mov (bad) (bad) call cli lret pushf fistp inc jo in jo push ja mov stos stc test jbe xor sbb xor sbb data16 inc xor (bad) (bad) ljmp and cmp ds or pop pop push jmp push test jbe daa pop lahf es inc out mov adc ljmp in push mov mov pop mov mov or (bad) and mov mov xchg jg and or sub int add (bad) (bad) (bad) out mov mov xor and lcall cmp sub (bad) test sbb (bad) mov or (bad) das push (bad) jbe pop xlat mov jle push in (bad) (bad) mov sarb mov push fdivrs imulb fcoml fyl2x mov (bad) call aas push cmc sbb push imulb mov xchg xchg pushf in adc mov cmc cmp (bad) (bad) lcall jge shr insb and stos xchg sbb test inc shl dec (bad) pop cmp (bad) (bad) (bad) fidiv fisubr stos test ljmp nop les mov imul lret push outsl incl (bad) xor popf push xor aas popa sub out xchg add shll mov jecxz jp rcrb lods dec adc xchg or xor gs pop inc out je and mov scas or jl lock xchg rcr jns (bad) (bad) ljmp cmc push mov add xor sub cmp lcall js nop sbb xchg dec inc cmp mov jg push cmc sti mov sahf push inc xchg shlb fstps leave repz inc sbb les add dec adc mov pop inc ljmp pop lret scas jnp (bad) ljmp addr16 test mov fisubr (bad) (bad) (bad) (bad) in int jne loope inc pop pop ds mov hlt ljmp rorb (bad) decl mov dec fyl2xp1 mov data16 sbb cmc pop or fdivrp mov mov mov leave inc and lcall out lret orl dec cmp enter insl push mov lcall hlt jae adc sub sub push in rorl mov ret std (bad) (bad) ljmp daa and cmp mov and rorb sbb sub outsl push push sub dec ss and inc ljmp and inc xchg data16 jge out adc pop gs and fs lods cmp push lea lea outsl (bad) jmp fcompl (bad) (bad) ljmp enter popa or adc mov les push in sub cmp sti lock jg lret dec (bad) xor jnp push jg movsb add (bad) decl or or imul push adc mov and jae pop lock jg jle mov dec pop mov xchg (bad) xor mov movsb mov stc stos (bad) add inc jnp xor sar (bad) (bad) pushl push jmp jns lods add add inc adc ficomp iret loope icebp jno clc (bad) jg ljmp popf xchg push movsb lcall jmp pushf shr jge (bad) (bad) (bad) jns mov mov xor scas sub xor push subl (bad) aas leave push fidivrl ljmp jns mov pop test rcr out (bad) (bad) (bad) (bad) lcall (bad) cltd loopne divl enter cmp insl out push cltd xchg fmull (bad) xor cmp mov data16 or mov arpl sub bound lea testb pushl mov inc xchg adc xchg cmp cmpsl inc aam test fwait push (bad) (bad) (bad) mov outsb lock out js shll pop rorl mov cmp ja test push push sbb gs xor ret aam dec (bad) (bad) (bad) out pop sbb add pop insl sbb ljmp inc je sbb loop (bad) (bad) jmp or sbb xchg (bad) (bad) inc xchg loop js dec int3 test incl mov (bad) jmp xor pop fimul mov aam push pop xor stos shrb mov (bad) (bad) call ret inc lods fimul and and and std xchg stos sub mov in aam in inc add call and rcrb imul mov xchg xor jns (bad) (bad) (bad) aas les ja out nop mov mov mov add test (bad) (bad) jmp inc es xor push (bad) pushf cmc push test fistp (bad) (bad) (bad) mov test and xchg sbb in fiaddl pop sbb (bad) (bad) (bad) fcoml (bad) cmp mov jg in jl ret js out movsb outsb sub icebp mov adc add xchg mov (bad) (bad) (bad) (bad) cmp jge aas dec pop test cmp lret fnstenv divb or push mov push in loopne jmp mov dec call idiv (bad) jg ss cli jo imul dec pop mull data16 dec andl clc (bad) decl mov in test push fdivr cwtd pushf faddp xchg xchg das (bad) ljmp mov mov mov pushf and das cli scas jbe push push pushf or mov cmpsl fistpl xchg aam sub call jns outsl and mov xchg jp xchg insl (bad) (bad) (bad) lcall leave mov je or out lret lahf pop test dec sarb (bad) lcall fsubp (bad) sub pop fild inc loop jne aaa std jg xchg sbb popf mov sub (bad) (bad) (bad) incl imul cs gs mov mov mulb inc aas push jo lret dec jnp inc addb jns push sti xor lcall dec mov xor ljmp cli push pop xchg cmp lock mov (bad) jl push jecxz or mov lcall pop sbb (bad) pushl adc push and stos in fildl (bad) (bad) (bad) cld or dec cmp mov dec rcrb les jbe mov fisttp sub cltd adc lock xlat out push (bad) call (bad) pushl js xchg add js cwtl int sti pop sahf stos je test roll negl inc jl mov lahf cs adc stc das sub fldt (bad) (bad) (bad) inc dec (bad) std or (bad) mov pop lock addl cmp cwtl xchg std sbb fstpt xor sub inc popf mov ret dec add in mov jl push std incl into (bad) iret jo pop dec mov xchg imul pop addl ljmp es les popf shl mov je (bad) mov hlt xlat rorl or push (bad) fnstsw andl add (bad) pop leave aam cmp mov (bad) cwtl subl loope ljmp adc movsb add lcall fisubl jns push push sub jnp xor dec push call (bad) (bad) (bad) std into push ds aaa arpl xlat sbb mov repnz sub lret cmc push (bad) (bad) decl lds movb or das movsb out lret out pushf jl test (bad) (bad) in stos cmp loop inc push int3 mulb jl fmul push pop cmp (bad) cmp pop lret (bad) mov cltd (bad) mov (bad) xor subb loope stc lods pusha inc clc adc jnp popf int3 lds inc addr16 pushl (bad) out jne push adc movsl ljmp mov (bad) (bad) out clc adc cmp int3 lret and cmpsl pop xor push and mov pushl daa iret data16 shl and mov jne mov pop sub push jecxz sub mov pushf outsb dec jo and jg std jg (bad) pushl inc mov stc mov je jb xor cmpsl sar stos (bad) jns jg in sub sub (bad) (bad) (bad) (bad) jmp push ret lds push or mov pusha pop push call stc mov int3 mov pop pop jb inc mov mov (bad) decl mov push mov sub hlt pusha lods jg (bad) cmp stos mov dec out dec (bad) (bad) ljmp outsb imul xchg lahf clc arpl xor (bad) (bad) (bad) call js imul test mov sub jg push pop or jmp ljmp pop outsl ss mov cmp mov jle ror jb (bad) (bad) (bad) (bad) sti les in cltd jmp (bad) mov cltd ljmp push ret mov or and std or xchg fwait pop dec push mov imul decl mov loope lea sub je (bad) fisttp in imul js pop es mov or add mov test fs nop mov leave (bad) (bad) (bad) jmp das cmpsb rcll xchg jns fsubrp or cli ds rcrb rcrb mov dec xchg int xlat jmp ljmp push mov (bad) (bad) jg vandps dec addr16 mov lds outsl out fdiv aam xchg call sub mov inc enter loopne pop (bad) (bad) cmp (bad) jno push js rolb daa loope inc (bad) mov mov xor outsl bound lods adc mov xchg ret jmp adc dec cmpsl push enter fistp mov mov dec xchg push cmc mov mov mov jmp lcall dec sti dec jl cmp stc mov cwtl pop adc mov pop cmpsb decl cmp add inc fsubp dec mov repnz (bad) decl inc sbb inc dec or (bad) out (bad) lret mul (bad) (bad) decl dec pop int3 out inc jns shlb loop or push shl jl pop jp (bad) pushl aas mov int3 scas jl bound dec leave mov int (bad) (bad) (bad) clc push sbb idivl inc mov stos in das dec imul shl jecxz (bad) jmp je outsb xor in hlt pop xor sbb icebp int ret cmp cld repnz pop addr16 cli scas clc inc adc mov fs loope pop push fnsave jg arpl mov lret adc aaa push sub in stos push mov arpl cmpsl mov mov xlat inc jne mov lds mov ret decl pop adc int adc outsb sub fstps mov cmp idivb scas adc xor push dec test imul pop mov inc mov inc fistl xor sbb stc dec out repz xchg imulb ret pop xbegin clc lret mov xchg sahf cmpsb icebp adc mov lods dec rcrl mov (bad) (bad) ljmp dec fistp out arpl insb jne call rol fs inc lahf movsl jb inc sar decl (bad) outsl inc adc repz jmp dec push loopne cmp imul inc (bad) (bad) (bad) ljmp jmp xor pop lret stos (bad) mov inc jmp dec lea jne (bad) xchg lods jmp jl data16 cmp push (bad) jg call sbb and fwait cmp into xor dec push cmp lods loopne (bad) je sti pop dec xchg mov aaa (bad) mov inc push or imul call jg (bad) decl (bad) pop inc loope sahf scas lods fadd mov mov test mov aas pop sar (bad) call popa mov pop inc mov sbb ror cmp (bad) (bad) ljmp pop jp sbb adc mov xchg cwtl rep jg mov adc adc adc std (bad) mov dec jle in inc cld nop push aas xchg (bad) out push jns out (bad) fiadd movsl nop mov xchg (bad) (bad) (bad) ljmp cld call pop mov fist in cmp scas pusha loop cmp dec pop je adc (bad) decl or movsb adc (bad) popa cmp fwait add push shlb (bad) call ja data16 fcmovnbe jnp mov cmp icebp (bad) fistpll jbe push xor test or (bad) mov jle lcall dec stc sti xor lock xchg mov gs (bad) (bad) (bad) (bad) lcall pop aad sub inc inc mov fdivr out mov dec or lahf incl stc call jp cwtl ljmp push pop jge xlat std fidivr cli in jge in (bad) (bad) call enter and daa jge xorl mov inc jne add (bad) mov cmp bound dec movsb fld ja adc mov lcall test fnstsw mov pushf or (bad) mov dec dec fmulp stos mov ljmp and mov (bad) fldenv (bad) sub xor (bad) decl inc pop (bad) jecxz sub xlat je ficompl push xchg adc rcll stc (bad) (bad) incl mov xchg cltd into mov pop inc mov sub and cmp jnp in mov (bad) jmp push out cmpsl int sub jae or mov popf cld (bad) (bad) dec dec bound pop iret cmc repnz outsl popa loop movsl jmp push (bad) jne popa sbb (bad) (bad) call sbb outsl cmp (bad) push insl es mov push dec xor imul (bad) ljmp jecxz flds push fsubp ja mov iret std mov cmp enter addb add cmpsb notb cmp inc or adc mov test decl (bad) (bad) jnp mov xor mov sub jne cmp (bad) (bad) (bad) decl imul xchg fbld and andl scas scas push ds add lcall cmpsl jbe sahf xor or mov lret (bad) lcall pop jo pop cmc push add cmp lea jmp adc mov adc mov mov scas fistpll jbe add sub mulb cmp (bad) pushl fstps mov xor fidivr xchg aas and adc xorb cld adc jns jg test fcmovbe fldpi xchg xor (bad) lods enter cli (bad) (bad) (bad) lcall pop xchg mov imul mov mov mov call mov call lds das xlat ja andl mov jmp clc data16 push sub mov jg mov jne imull dec std (bad) jmp xor inc and call sub dec cs sub (bad) jg mov inc shlb mov adc roll (bad) lcall dec ret les (bad) add loopne rorb je shrl xor push sub pushl jmp jbe or fwait movsl enter inc adc repnz lcall xchg adc xchg mov fist imul call push test lret stos movsb bound (bad) in movsb mov (bad) or gs dec (bad) (bad) (bad) pushl imul dec int jge xor pop out out mov inc inc lock rcl jbe out cmpsb (bad) jg (bad) mov les mov cltd mov arpl fsubs and test (bad) jmp adc (bad) sbb or (bad) popf and cwtl or not pop icebp pop lods or mov push add jnp lcall mov push repnz xchg push (bad) (bad) (bad) lcall inc fs sub (bad) clc push mov addr16 xchg push pushf outsb imul mov decl (bad) push cmp sbb shll (bad) (bad) (bad) (bad) jmp sahf js sbb xchg and ds xorb add call xorl pop cmpl popa aad mov addl call mov cld lret push mov cli push test push mov stc repnz jg loope jmp enter dec (bad) in and stos cmp jns outsl cmp scas xor enter dec add iret cli aaa lea (bad) push gs inc pop inc dec dec mov mov (bad) jmp push aaa mov int (bad) ljmp push push insb push and push mov addr16 adc cli ljmp dec or pop mov popa aam (bad) xor mov shrl call nop mov ret cmp (bad) mov lds sub aaa gs add and xchg sub mov sub (bad) call inc sbb scas imul jnp mov jp lock std (bad) (bad) inc fdivl je xchg shrb adc leave stos inc in mov jae mov xor clc (bad) pushl mov mov cltd shll (bad) leave add cs pop sub mov lea popf lret lods movsl frstor mov (bad) dec movsl mov jae,pn add (bad) (bad) jmp insb jbe ret push xchg jns pop sbb dec sahf daa sub bnd jnp int cmp lcall cmc (bad) mov adc push loopne and xlat (bad) (bad) (bad) pushl rcl adc push lock out cmp stos add pop in scas xlat mov mov mov and scas scas insb (bad) insl sub pop loopne cmpsl xlat push je push imul or mov sbb call loope jg test cmp pushf test and cmpxchg (bad) (bad) ljmp cli fbstp hlt sub push hlt dec icebp mov out ljmp jl imul (bad) mov ret xchg ljmp fstpt incl sub jg jle xchg jne push lahf xor insb mov push pop adc std cmp test jnp xchg pop pusha loopne mov ds ljmp jnp jmp lods xrelease lods js jns nop and sbb (bad) (bad) ljmp call mov enter sbb or rclb (bad) int jmp cmc push push pop aas jnp mov movsl cmp or (bad) lcall inc add ret rcll popa mov test call add inc pop aad xchg pop rolb (bad) (bad) (bad) (bad) mov stos hlt inc (bad) xor pop add xchg cmp cmp dec insb ret aam jo dec (bad) std incl (bad) cmp je (bad) push mov adc cltd fidivl pushf aaa (bad) loopne (bad) (bad) jmp out sub mov out fildll or (bad) (bad) (bad) (bad) cmp imul add cmp dec cwtl mov hlt into shll jmp jecxz mov or dec push ljmp sub leave dec sub lds (bad) (bad) (bad) lcall xor lret jbe rorl aas out out test pusha inc add mov imul repz xchg sub addr16 pusha jb mov mov (bad) xchg jecxz (bad) jns js xchg test cmpsl cmc jecxz lret mov rcll mov add lcall pop bound ja cmp jbe int xchg (bad) (bad) incl lahf xchg stos inc pop mov ljmp movsl add mov inc fdivr inc clc (bad) mov cli mov repz clc xchg insb or call sarl (bad) inc mov xor sar ljmp fist mov sub and sub add mov loopne decl (bad) mov jnp dec sbb or ss into stc lret (bad) (bad) jg cld and xlat add xchg sbb das sub cmp xchg test aad std (bad) decl or fadd cmp mov cs sub movsb jb fwait (bad) (bad) call adc or push or rcll pop jae cmp add jo (bad) pushl add bound cmc fdivl clc stc xor sbb sbb dec add icebp mov cmp mov pusha call (bad) (bad) call mov mov and sub bnd (bad) hlt mov daa stc decl inc and and adc cmp pop fnstenv (bad) (bad) (bad) aas pop cmp inc cwtl fld sbb inc dec adc jmp mov push test pop aas sbb mov cmpsl das shrl loopne outsb pop loop rcrl movq inc mov out sbb push iret (bad) (bad) decl inc repnz pusha push mov push (bad) xchg insb pop movsb in orb push or sub bound mov inc icebp or (bad) mov and jnp insb enter aam push add fwait test sbb dec cmp (bad) lcall xchg fisub push jbe pop push add inc cmp or (bad) mov jp push cmp mov mov rorb inc adc or icebp (bad) (bad) call and movsb inc or mov enter in sbb pop mov sti pop push out scas jge cmp sub sub cwtl (bad) (bad) (bad) jg inc pop pop push mov adc pop dec push je sub and xchg sbb ret stos shrb bound (bad) (bad) (bad) inc jo dec ds or mov out in lahf mov cmp mov cmp lcall rorl inc dec out imul repz outsl (bad) mov pop mov inc scas int nop je jg (bad) (bad) (bad) jmp movsl loop mov sbb xacquire mov and and inc lds pop pop lock (bad) (bad) lcall push rcrb lea mov push (bad) xlat xchg aad or jge (bad) (bad) call in shlb adc dec dec and movsl lret or jg add jg repz popf (bad) jg loop testl call xchg jne xchg pop xor jbe js ds push (bad) or mov call inc cld and outsb cmc mov in and fwait (bad) (bad) (bad) decl daa push fcmovb fcmovb mov ret imul loope mov pop jg mov aad xchg lcall xchg lods or test enter adc inc push lret arpl je cmpsb ja cmpsb js xlat jno push inc mov inc out (bad) ljmp sarb sub mov cmpsb (bad) xor dec mov mov pop add imul ror scas mov cmc and (bad) call jl lret out in mov and test mov incl stos (bad) mov ror sbb test lods je add jge mov (bad) jmp pusha push or gs aaa push das sbb insb daa out cli das es inc dec enter mov insl lock aam fbld fadd xor dec inc sarb (bad) (bad) pushl loope les (bad) outsb out jns push roll inc mov lock and in pop and lcall ds or ja add (bad) cmp (bad) (bad) jp sbb push dec ljmp test cli fisttp pusha das mov das push lock and adc lea cmp (bad) ljmp (bad) pop or dec pop insl pusha inc in add pusha sub mov pop lock imul sbb cltd xor sbb sbb ljmp mov lahf sub sub add inc (bad) (bad) (bad) (bad) sti daa push lods inc (bad) or ljmp stc test dec scas std pop cmc cld rclb and decl xchg cltd lea cmpsb mov imul es je mov (bad) (bad) incl inc (bad) idivl fsubl pop fidivrl repnz ljmp imul mul mov and adc pop dec mov add xchg and adc (bad) (bad) cmp sub lea sub or xor adc (bad) cmpsl dec addr16 sub push loope out adc sbb pushf push (bad) lock cli test jecxz dec sub sub add in inc loop cli (bad) (bad) fcomip inc test (bad) mov inc das es jae call xchg aam jmp pop ja push sub jbe cmpsb (bad) (bad) incl lea sbb jp cmp out cmp add (bad) pushl or inc inc insl jae xchg fdivp mov dec jae mov dec cmovl rorb pop dec jae mov decl imul cltd jge inc add inc pop mov cwtl and (bad) pop xchg and or inc fstl cmp nop gs std (bad) inc mov aas xchg mov fwait les (bad) mov jle,pt pop pop pop cmp dec in andb insb cld add inc (bad) (bad) call into ret dec pop push mov icebp and stos fwait lahf cmp ret adc (bad) outsb jg icebp xchg dec pop mov mov decl dec mov fwait jmp xchg daa scas cli (bad) decl scas stc mov (bad) ret movsl push dec jecxz out test out icebp mov sti push (bad) push jmp mov sub push or ja (bad) and imul pop push inc sub mov fwait and add (bad) call mov sarl adc sub (bad) cld scas mov push lret out mov push gs cmc incl mov jmp notl sub inc sbb dec test movsb add rol xor pop (bad) stc rcl mov jecxz and das das leave mov mov sub fstpl pop subl (bad) (bad) (bad) incl lret fldt xchg sahf inc jne les idivb mov jno jae mov (bad) ret int3 (bad) call nop icebp fidivrl fiadd push mov (bad) into lcall mov add mov (bad) out test sahf or xchg (bad) decl jne mov jp fidivl movsb add movsl inc add jns mov repz (bad) ljmp (bad) jmp ret or sbb stos ss pop test add pop rep mov fidivr cmc xlat ficomp call (bad) (bad) call inc (bad) sub fistpl cmp je cmp adc (bad) jmp (bad) ljmp pop int cmp insl loope pop cmpsb int sbb mov loope add outsb push dec repz out popa xor pop pop das (bad) decl push inc dec in mov jnp sbb xchg mov inc jmp ja push push dec popa xor sbb iret sub xchg (bad) (bad) (bad) decl stos mov xchg dec orl xor sar addl dec sub jmp shlb (bad) cltd in mov inc fidivl cmpsb (bad) (bad) (bad) decl inc cmp fistp das popa into call dec dec incl and xchg and (bad) jmp xchg adc sub xchg inc lds daa sbb (bad) (bad) (bad) decl out cs std xor jo cmp and test inc (bad) je ljmp (bad) dec fdivp ret sahf mov xchg mov inc in inc fstl (bad) (bad) jg sub iret clc xchg push pop jg bound mov push jne mov btl xchg (bad) (bad) ljmp aad mov data16 movl sub push adc cmp (bad) call xchg andl dec stos inc xchg out sub iret sub stos (bad) mov in adc ja (bad) out test jecxz dec fild ljmp jbe pop push rcll sub mov mov (bad) (bad) (bad) mov call mov jnp jp insb mov pop addr16 idivl inc adc mov movsl mov cli jne fwait test xchg push pop xchg sbb xchg jne js jge orl (bad) (bad) lcall cmp leave inc mov inc pop sti into push enter jp inc add dec shrl in adc jnp scas sub (bad) (bad) (bad) fildl hlt ja ret mov jp add add sbb or add sahf fwait ds xor jl fisttp (bad) (bad) push loop mov cmpsb mov sub or sbb js lea push ret clc jle xchg mull xchg lods roll insb fistpl and mov mov or pop fmul add (bad) (bad) decl vaddsubps ret dec dec imul rol pop push sbb mov adc aas popf outsb (bad) (bad) (bad) jmp mov cli xchg subb pop xchg nop iret xor stos push out jne stos and data16 lcall sub pop (bad) movsl loop and scas xchg adc repz insl add (bad) jle pop cmp loope and ja das jl dec push shrl jle inc inc mov sarl push adc or and adc dec jmp std inc (bad) (bad) (bad) call sub mov cltd pop arpl add pusha popf pop movsl push pop in cmpsl movsl in dec lret shlb xchg cmp out lods mov cmp jno stos cmc shll and sarl shr mov pop cmp xchg and (bad) decl inc movsl mov lods sub inc daa hlt mov leave out push sub (bad) call or fidivr stc push lods inc push sub xchg shl inc mov loopne popf adc adc fucom test xor push fsubp pop lea sbb cmp (bad) mov dec loopne data16 xchg add jo dec sub and inc icebp ret dec push jge (bad) rorl pop xchg fstl setp pop mov imul ljmp fwait in pop cmc xchg cmpsl stc test arpl mov xchg cli sbb mov (bad) (bad) (bad) pushl lret adc fwait sub xlat data16 mov repz jle aad pop mov (bad) decl xor int3 mov fcmovnb push daa pusha popa leave push hlt mov or outsl cli out sbb xchg sub fisttpl (bad) or bound repnz iret stos xorl (bad) fcomip xlat mov mov and inc xchg and or shll (bad) (bad) (bad) call cmc jbe push incl add mov mov test cmc lock mov out xor loop add cld incl xlat aam cmp imul adc ret stos out jecxz and push inc aad lcall lock arpl test sub xor lret sti pushl std scas ret and pop (bad) pop cld cmpsb xchg or fisub jne sub (bad) ss mov jg and dec cltd sbb out push add int3 fstpt mov decl pop and add xor inc (bad) inc sbb jb push lret (bad) movsb test (bad) incl lea stc mov lret test xor mov (bad) (bad) jmp scas dec mov jo icebp dec and cmp mov mov (bad) ljmp xor and cltd xlat fiaddl fcoml inc inc sub jge stos test das inc sub movsl stc jns addr16 pop pop adc mov out mov jg pushl inc repz stos sub cmp pop inc cwtl dec movsl shr js out cmp mov imul inc (bad) lahf in (bad) or pusha es (bad) incl push cmp fwait leave ljmp xor incl xchg imul push adcl lds aas xchg push (bad) (bad) (bad) jmp sbb gs adc jp sub (bad) cmc fwait mov push adc (bad) and (bad) (bad) aas or aaa pusha add xchg cs push cmp mov (bad) (bad) (bad) (bad) cli popa lea xchg adc inc rorl in aas in xor xor pop mov out test sbb and loop push xchg xchg jg test push mov cs adc add (bad) (bad) call and insb shll into sahf cmc insb jne xchg test push (bad) fimull aas leave (bad) lcall cmp cs nop aaa add clc adc sbb (bad) (bad) (bad) inc orl xchg add xlat or xor mov je and les (bad) pushl aas enter pop and mov and ret pop std push (bad) (bad) mov (bad) outsb cmpsb int3 adc aad inc leave mov mov sbbb (bad) xor (bad) aas xlat pop or unpcklps das incb popf les push shlb mov incl out and jmp ja std (bad) (bad) (bad) aas test addr16 icebp int3 xor xchg jbe and ja movsb mov mov scas test subl mov jg (bad) scas cmp cmp sarb in sub xlat outsb jo popf out fidivrl or dec push clc call push jl fisttpl (bad) mov mov push dec (bad) jp mov icebp inc rcrl shrb xchg bound inc fcom adc jmp push push push hlt push dec sbb lds jno pusha xor jnp rclb push cmc dec inc mov xor (bad) call mov lods sub aad mov adc addr16 fldenv data16 (bad) (bad) jg cltd lahf push js mov xchg test xor cmp lock (bad) (bad) (bad) call insb lret xchg push adc addr16 into xabort inc mov xchg jmp clc test mov out cld inc (bad) (bad) call dec jnp adc and mov inc and lods mov push (bad) lcall pop mov pop (bad) cmp mov gs pop add ljmp adc jl enter mov incl sbb test jae int3 fldcw ret in adc fdivl popf adc dec (bad) (bad) jle scas xchg mov sbb or je out xor lcall jmp aam jl pop int3 pusha ret in push and cmpsb ret cmpsb jle lea ds inc idivl pop xchg sub lock aam fldt scas add inc xchg mov loop call (bad) jg ljmp dec mov cli cmpsl sub add sti dec ficomp and in pop sub adc fsubs push or (bad) ljmp dec mov pop loope leave or cli pop out push xchg fwait loop pushf call (bad) (bad) incl cmp stos xor mov ret adc mov (bad) incl bound lret lds inc xor test cltd inc int mov sbb imul xor sbb call xchg test jo mov mov pop hlt decl pop icebp rolb arpl (bad) div popa sbb mov ja jle mov rclb repz rclb std incl ss cmp cmp lea mov push sti or mov lahf sub (bad) call lret gs add sahf shlb pop negl iret or mov ret xchg rorl enter xchg (bad) (bad) in (bad) jmp mov (bad) icebp icebp incb jbe enter or repz ffree sub decl arpl mov (bad) (bad) (bad) jg sti sbb dec fcmovb lret in cld jmp outsb add jb rorb sarl fisubl jmp fsubr mov loop dec dec mov fmull repz inc sub xor rcrl ret mov stos mov mov sub mov out cmpsb cs add aam inc jmp dec jecxz xorl call lret inc data16 gs andl adc inc sbb sbb lcall fistpl hlt shlb out or sub add sahf (bad) (bad) decl and pushf fcoms push lahf lret mov inc inc lods das (bad) (bad) (bad) (bad) out sbb pop inc xchg pop mov in adc lods enter movsb cmp push aaa xlat out mov aad xor xlat mov adc inc cmp shr xchg inc fisttpl loopne fcomip adc jnp lds cmc movsl lock mov mov (bad) (bad) (bad) jg loop scas in aad xchg sub ja sbb lcall rcrl (bad) (bad) jmp cs pop xchg sbb dec mov xor (bad) xchg in testl out jne mov inc jmp das enter out mov adc ljmp ret sub dec aas pop dec in push jg cli (bad) fcoms inc mov aad pusha mov cwtl les (bad) (bad) (bad) ljmp mov int3 sbb enter pusha sti add in into in cmp (bad) mov nop (bad) lcall mov movsl or xorl xor lods sarb lcall sub fisubr jne,pn push pop cmp xor bound lods add call xchg fdivs inc test mov cmpsb mov (bad) lret lcall (bad) push push nop fdiv inc xchg out orl inc imul xchg inc push xchg dec ret ljmp pop movsb ret lock (bad) call nop push insl mov push jae push (bad) fcmovb scas and jg pushl aam xchg (bad) out mov xchg mov lret jp sti test sbb (bad) push (bad) mov push push into icebp (bad) or pop shrb inc jecxz incl cld ljmp cmpsl fcomps fwait aad fildl xchg jmp xor scas inc ds in inc loop,pn incl inc push dec jne pop push mov lcall gs inc aaa push fldenv call jo cld aad fsts stos adc loopne cs xchg (bad) or push (bad) and mov xlat rcll cli and or lcall loop out incb idivb mov mov jo xor mov lcall out or (bad) jge negl out imul mov rclb inc xchg fucomi (bad) call std add jp iret mov and ja movsl rcl data16 or shlb mov mov jbe push into push lcall ja or add ret sarl mov int (bad) (bad) (bad) (bad) cmp incl int3 fnsave pop das rcrb arpl bound jnp inc sub loop and or mov lret xor call (bad) cmp iret lcall loope not in in (bad) (bad) (bad) jmp test jp xchg (bad) mov mov jecxz add out jg lcall cmpsl inc sub pop fldt adc std jns dec cmp push (bad) (bad) (bad) (bad) (bad) cmp sub mov push frstor imul scas cmpsb (bad) (bad) imull inc xor das (bad) ljmp stc rep je,pn mov inc rcll sub imul es rorl stos push lret call jb out push scas sbb push jmp ror pusha lods lret (bad) (bad) decl int3 std jo (bad) nop fucomi push cmp lods xor stos imul sti orb out cwtl xlat mov pop mov and mulb dec mov xchg add cmp ljmp mov sub xor in cmp nop bound pop popa aaa imull sar outsl sbb test arpl xor std dec sub (bad) out sub enter fsubrs mov push sti fcomps cmp push and inc xlat push icebp mov decl repnz in lods sahf dec daa pushf leave call push dec (bad) (bad) jg imul pop repz xchg mov js mov (bad) insb int or (bad) (bad) incl push xchg or mov fucomip xor ss or or stos (bad) jg add popa fwait cmovs loope or mov (bad) (bad) call loope pop sub cwtl inc insl sub imul and mov jae mov loop test and push add (bad) (bad) mov (bad) mov mov cmpl hlt pop cli xor dec inc in lods mov pop sbb repnz dec enter cmc nop lock xor popf mov push jbe cmpsb xchg std and sti dec mov or clc fwait jge push (bad) (bad) (bad) jmp sub pushf stos adc mov pushf cmp push mov mov or or ljmp push mov (bad) (bad) (bad) (bad) mov pop mov in outsb sti mov cli (bad) daa and leave mov mov lods test stc pop xchg mov loop push lock adc xchg cmp pop pop sub mov cli push jb ss test imul movsl sti push in ljmp stc js das scas call xchg (bad) or jo cli add test pop dec (bad) mov adc sub lods lods imul and decl dec jns orl dec inc mov push (bad) pushl cld rol and outsl xor jnp (bad) mov push daa dec sbb jo add add (bad) das mov add sbb into (bad) sbbb in (bad) (bad) jmp das stc mov mov cmp in and (bad) (bad) pushl mov ja mov push leave pop aam mov aaa ss fdivl inc dec xchg jne rclb xchg pop fimul (bad) (bad) lcall pop lahf xchg outsb (bad) fsubrl adc mov push cmp cmp mov mov (bad) (bad) fldl2t je sub (bad) sti int in sarl push cmp xchg (bad) (bad) (bad) (bad) lcall push sub aas jmp mov popf sub shr out sbb ljmp mov addr16 imul loopne add mov lahf jg push xchg rcrb shrl in mov test cltd or aaa mov pop in cmpsl dec popa js orl xchg sub and dec (bad) int jnp jecxz inc loop clc call mov nop fwait dec (bad) mov inc subps cmp cmpsb ds (bad) (bad) jmp sub xor bound or mov movb imul fcomip decl sarb arpl sbb fwait std imul mov sub add call inc movsb inc int3 xor sub fs xor pop subb pop out outsl insb (bad) mov sub push cs in ja sbb xchg and push aam (bad) (bad) call push outsl mov mov and adc in repz lahf inc push adc decl fstl xchg mov (bad) (bad) decl jp bound sarb rol fcomps jb cmp push adc sbb cmp andb fstpl sbb leave cmp (bad) out cli or adc dec cmpsl cmp stos lret fnstsw push dec lods cmpsl pop sahf (bad) (bad) (bad) (bad) incl mov push pop mov cmp enter xchg lods repz pop xchg test cmc cli (bad) pushl push jecxz out push xor in xor adc (bad) mov mov test lock lock icebp ljmp loop repz pop fsts or fist dec repnz addr16 xlat call push stc and or in dec fstps (bad) sarl xlat pop xchg xor inc sub test (bad) (bad) (bad) ds mov fidivr cmc imul js cmc stos sub jb out lcall out push test inc (bad) popf sub pop jmp cmpsl outsl sar or sub xor in repnz icebp scas xchg (bad) (bad) (bad) jg out pushf in in or jmp cmc or jne push fimull (bad) pop mov fistl repz cmp (bad) mov xchg cld lcall loope ljmp push pop cmpsb mov mov xchg (bad) (bad) inc inc or fisttpll test adcl popa enter push mov and push ja mov or lea enter out dec test (bad) (bad) (bad) (bad) ljmp insb jne and jno jp inc cmc and inc add (bad) xchg lods rep (bad) jg (bad) cmp iret fnstsw rclb scas sub jl das mov inc in scas and das cli sbbb cmp jns (bad) (bad) pop stos (bad) (bad) sti mov mov sub adc (bad) (bad) fcomip xchg or js cli xchg sub (bad) add jmp test jo mov decl mov aam flds push nop ljmp movsl incl sbb and sbb imul dec call cld pushl fs push out test adc pushf sahf xor mov stos lods fsubrl cs fwait add (bad) clc fucomp xchg adc ss cmp out dec fnstsw dec and daa (bad) fildl adc sub dec loope repz or lea pop pop fld jo cltd xchg dec aas mov sbb and xchg xchg lret xchg je pop repnz aas fisttpl push insb sahf jg mov push cld daa scas cli (bad) decl shlb xor mov ljmp aam push push xlat (bad) (bad) jmp sarl cmp adc xchg sub lret clc ljmp les mov dec xchg cmp push inc ss lods adc imul and sub add faddl push add add mov (bad) mov inc sbb (bad) loope repnz xor dec (bad) clc ja jbe and pushl mov ret bound inc add js jecxz in inc inc imul push dec (bad) ljmp sub or fnstsw jae sbb pushaw add adc (bad) (bad) call push outsl mov int3 mov jl mov ja cmp jmp fwait cmpsb dec push dec insl adc lods mov mov mov (bad) es xor pop cmc jbe add and xchg ret mov mov dec fiaddl test cltd stos ljmp adcl rol stos (bad) decl (bad) push scas jp out outsb sbb outsb mov add mov add test lcall enter insl aas inc mov xchg mov fcoml repz into lret and lahf sub jns adc (bad) fildll jb push cltd and xchg cld incl adc aas pop add jns mov (bad) (bad) mov int mov cld sbb mov gs jb jno cmp xchg cmpsl fyl2x movsb rcll add push mov mov xor arpl (bad) (bad) incl mov dec mov mov popl jno add mov push jo and or mov movsb mov mov inc cld (bad) pushl dec add (bad) push push cwtl sahf xchg sbb pop dec dec pop inc mov call les cmc sub stos cwtl jge addl outsl jge notl ret mov xor pop pop mov sahf das adc cli jns mov lret (bad) (bad) jmp cmpsl pop mov mov into xchg mov xchg mov mov stos add push jge dec mov sbb mov xor outsl cli (bad) mov fwait les fisttpl xor mov cmp (bad) (bad) fidiv or mov push dec dec jle js push (bad) dec inc ja xor clc mov and gs pop flds adc andl out cmpsb (bad) mov pop dec cmp sbbb sub ss ljmp fnsave xchg fstpl std adc fsubp lea aam ret ds scas aad xor adc ljmp xor fdivs ljmp out or (bad) std jg inc mov insl inc in dec (bad) (bad) decl addr16 test scas rolb push push lcall lcall (bad) fsubs adc ret dec sub cmp icebp cmpsl cmp dec movsb jbe (bad) (bad) jmp scas sti nop rorl push jle mov fcmovnu or xchg cld (bad) (bad) call mov lds inc idivl and push out js movsl aas out dec (bad) (bad) call or push jbe stc lock stc sbb test sbb out (bad) (bad) (bad) cmp push jbe es pushf mov jmp std adc xchg push (bad) (bad) decl sub add (bad) push mov call das xchg jbe xor (bad) (bad) jmp sbb cmp and test lcall fcomps stos fcomps (bad) decl arpl adc and bound lret pop lods mov sub pop (bad) incl test jnp ds add fstl inc or scas adc and lods or xchg pop adc (bad) (bad) push lds fwait out out stos sub fs xor and lods mov pop push pop pop (bad) (bad) incl mov adc iret insb icebp mov pop dec or sar jg (bad) clc in mov movsb sub push xorl cmp (bad) addr16 cmp clc (bad) (bad) lcall sahf imull cmpsb test ds push sbb xor mov fdivp adc mov jno mov leave push aam push je stc pushf xor pushl cmp cmp (bad) out push mov adc push repz inc push test adc xchg pop aas jp mov cmp or imul pop cmc call into xor sbb daa mov cld jb nop sar pop or add push cltd jp xchg fnstsw out adc (bad) (bad) lcall pop ficompl xor aad cmp push pop imul je mov and pop loopne inc xchg stc add jno jb (bad) ljmp mov lea xor gs mov xchg push lock (bad) dec sub adc push aam push cs sub fs lcall cmpl je cwtl ljmp lock enter js cmp icebp and stos jns ss call inc mov fildll xor popf add cmc gs in push popa ds jl (bad) addr16 test cmp add ljmp lret xor and out xchg call jl pop mov mov pop xor ficompl dec incl cmp (bad) out call lret std mov (bad) mov dec jns mov sbb outsl xor sar inc addr16 xchg or mov aad mov or xchg inc ljmp xor mov pop cmpsb cmp pop cld fildl das fisubrl loop roll cmpsb pop rclb lahf in icebp and mov xor out mov mov arpl (bad) (bad) call mov mov and out cmpsl pop pop sub out mov mov pop repnz sub cld imul pop jnp mov push (bad) (bad) mov dec pop insl add pop pop fldt push add xor movsl (bad) (bad) push inc push out push mov int jb add jecxz cld or gs gs (bad) call jne shlb adc xor jns push sub mov addr16 (bad) (bad) (bad) ljmp sbb mov fidivrl popf (bad) std mov lods jbe test or pop push cld (bad) decl imul adc or mov pushl data16 test push in js (bad) xor dec xor incl int cmp daa into cmp cmp orl push aaa adc test aad xchg sub mov or adc mov (bad) lcall mov mov inc aaa xor in (bad) (bad) (bad) fmul jo push mov xchg clc sub dec ljmp ds les sbb pop push xchg enter (bad) decl pop add in mov rol test (bad) (bad) (bad) (bad) jmp loope (bad) mov and pusha xchg xor cmc (bad) out cmpsl lret loop xor cmp xor sbb fisttpll (bad) imul adc lods and dec loope add rcl (bad) (bad) call test ss out or test push (bad) mov push lcall add cli jmp and pushf or adc xlat mov inc gs (bad) (bad) jmp cmp jg sbb push pop rol mov cwtl pop jae sbb mov push cld fsubs out xor fcompl fdivl adc (bad) (bad) (bad) jmp and jo sub fcompl insb outsb je jns sbb jg sub mov jo inc dec rclb stos les pop int decb lds inc movsb add and outsl sub pop addr16 data16 aas dec xor mov test (bad) fmulp add or iret and (bad) (bad) jg cmpsb data16 jo (bad) pop cmc push xchg inc jno mov pop (bad) stos (bad) ljmp ss pop setle dec daa pop js (bad) je dec cmpl pop test xlat jb fwait in pusha inc pop lahf mov sbb lcall xchg inc popa cld sbb sbb repz inc push aaa lock cwtl adc je lcall shll es stc shrb (bad) (bad) (bad) (bad) pushl xchg push pusha scas adc xor add stos cmp jg fistp jnp pushf insb sbb xchg (bad) inc aam jl dec xchg add push and aad popf adc mov dec xor push and pop loop add or cld xor xor push mov (bad) ljmp daa les popf sub pop pop jg sbb adc cmp mov lods and xlat (bad) push pop add pop inc xor cmpsb (bad) xchg sub out movsb dec out sub (bad) lcall test pushf mul js cmp or dec inc push and mov (bad) (bad) lcall push out sub (bad) cmp add pop xchg scas ds jnp movsb incb sbb xchg dec cs push repnz push hlt jns out sub call xor ficomp mov add (bad) (bad) (bad) push add pop fwait sbb dec lcall xchg inc cmp pop repz mov repnz inc lcall xchg mov je push (bad) lcall into and cmp add hlt addr16 cmpsb call push cmp lcall jp add push xor push rolb mov mov (bad) jmp or cmp (bad) dec lock icebp mov add pop mov mov das cli (bad) ljmp sbb adc movsb (bad) adc cmp subb mov (bad) push inc aam jmp mov repz hlt in shrb xchg fwait cmc inc (bad) (bad) (bad) incl scas enter loope sbb sub pop xchg sub sbb pop aas fs lea xor (bad) jg leave dec out scas adc (bad) (bad) incl mov (bad) cmp divl pop les stos xlat cld (bad) (bad) decl xchg into pop push xor inc add (bad) sbb sub (bad) mov insb repz jg mov call pop jnp dec cld (bad) and push addr16 adc pop lret stos (bad) fwait (bad) scas arpl or es mov jmp ret test sbb mov xchg dec lds (bad) (bad) (bad) incl pop cmp sbb pop cld xor rcr lods cmpb lcall in xchg cld call lea call ds push mov mov sbb call mov or cmp cmpl jno adc lock inc decl jmp add push sti fs xchg lret xchg push cld in incw lock add clc incl (bad) xor je cwtl and iret push out aad or es (bad) fdivrs mov loope shl sbbl mov (bad) (bad) (bad) mov fistpll dec mov mov mov push xchg add popa aad dec add mov and pop push mov in mov ss lcall xchg xchg std xchg stos fsubr add fistpl or jmp pop push fldlg2 push test add dec mov cmpsb dec in shr test fwait jp jns cmp pop lret in cld lock (bad) (bad) (bad) incl arpl dec or fiaddl vpsrlw pop xor mov div adc add (bad) pushl dec popf jae ss fisttpl jmp (bad) fadd scas adc (bad) jg das ljmp pop mov adc cli (bad) aad hlt insl mulb push ljmp test addr16 xchg movsb push ret sub pop and fiadd data16 dec (bad) pushl fstpt xchg dec cwtl xchg pop (bad) std mov pushl roll loopne das aas mov jg loopne xor andb or scas packuswb lret mov xlat cmp (bad) (bad) (bad) decl xchg ret aas mov loope icebp popa xor pusha iret mov adc add add add adc ret inc js insl popf cld nop push jecxz push cwtl stc dec sbb jmp mov lock and cwtl daa xchg and andl outsb and into lds push fs jo (bad) (bad) decl sub mov or jp push jl (bad) (bad) fnsave (bad) (bad) incl push cmc mov add pusha push flds dec mov int3 rcrl push call inc xchg imul cmp lret pop sbb dec sub pop mov jmp (bad) (bad) mov (bad) mov dec cmp mov enter and mov push xor into loopne loop lcall ds push cmp jge out mov in mov pop (bad) (bad) (bad) (bad) mov adc and cmp jbe mov in xchg sub pop mov call sbb ja bswap sbb dec aam iret addl mov jmp lahf push lret sub in insl and inc and incl cmp fbstp insb dec mov js cmp xchg fbstp (bad) icebp cmp mov jle pop mov inc ja repz dec ret insl imul and mov test (bad) pushl bound pop mov iret in inc aas nop sub xchg lahf mov (bad) (bad) incl dec rcll aad add cmp (bad) pop out in loop das sar jbe sub negb sub imul cmpsl mov scas inc jmp out inc xchg jae pop add pushf pop addr16 pop clc lahf (bad) (bad) ljmp clc pop cmp add aaa ficomp in aas cld adc mov xchg hlt test (bad) dec rcl (bad) ficoml push lds sbb adc aas imul icebp dec test mov pop add mov std dec or sub pop dec rcl inc mov xchg sahf sbb sahf addl pop adc (bad) lcall mov or dec adc xor pop in imul (bad) (bad) call or repz lods pushf push mov (bad) jno cmp inc jmp fistpl ror (bad) fldt push (bad) xchg dec sbb negb and mov test das mov pop jne scas pop mov cltd loope test test jo pop cmp fmul or insl movsl inc stos sub xor bound sbb movsl cmpl or shlb pop (bad) icebp (bad) xchg pop (bad) mov jb fcom lds add jno jp pop cmp ljmp sbbb lcall sbb (bad) (bad) call or test jle arpl or loop outsb inc (bad) (bad) mov rclb (bad) (bad) incl push mov sbb repz out lret insl rcll xchg and push and mov test aam (bad) decl js xor inc outsl cmp pop or int3 ret jns lods div (bad) (bad) (bad) cmp cmp stos test pop ja xchg scas cmp jmp stos nop mov into lcall push push imul fist or (bad) (bad) call les loope addb lcall or (bad) mov ljmp or lcall xlat pop and stc inc test sub pop std and pop aas jg fs loope cld js hlt sbb jg and jae push cmc (bad) (bad) jle mov xlat ss imul sti test out (bad) lahf fstps adc pop lcall add lods dec daa and dec popf fsubl jmp lods faddl pop imul out mov jb out bound stc push push notl ljmp dec (bad) mov fsts mov push insl push (bad) stc (bad) (bad) (bad) mov add mov das sub cld push roll ss nop lret cmc xlat jle pop sbbl scas xchg add mov adc push add nop hlt (bad) mov pop pop inc aaa arpl rol fsubs cli (bad) incl dec out or in sbb pushf sbb test (bad) ljmp or (bad) jle pop inc jb and dec add rcrl (bad) (bad) (bad) ljmp ljmp mov jnp (bad) faddl rorl (bad) (bad) (bad) jmp les scas cmp nop dec push sub imul push (bad) (bad) (bad) (bad) mov ljmp sarb test sbb notl movsl inc lcall or xchg xor or hlt (bad) (bad) (bad) mov jmp jmp leave mov jns xchg dec dec repnz mov cmpsl fsqrt inc sub sbb fs xor insl cs jle sub mov cmp ja xor add inc jge add (bad) decl pop sub test add sbb imul add call imul es add (bad) (bad) (bad) sti hlt xchg sbb xchg push xchg xchg push lcall xor xchg mov imul (bad) (bad) (bad) mov push dec xor xchg inc xor es inc sub push sar (bad) jmp pop inc push pop cld adc mov ret lods push xchg clc scas dec cli jg mul push sbb cmp and pop add call repnz add add (bad) pushl add (bad) lret (bad) (bad) insl dec pop mov push pop test hlt into fcmovne and in mov mov jnp adc sbb mov or pop sub jmp imul call sbb cmpl aaa call adc in fwait pop sti lock inc (bad) lcall sbb xchg shr daa fstpl mov subl mov adc (bad) lcall fsts fldl fstl divb dec in adc dec (bad) (bad) pushl inc test mov jns lret fnstcw pop cmp (bad) decl pop mov aaa add test lahf repz and sbb (bad) ljmp push mov xchg sbb (bad) mov pusha daa mov push push imul fistl clc xchg ljmp mov cwtl mov and cmpsl mov (bad) (bad) (bad) incl xchg scas mov add jnp aaa pop (bad) div mov (bad) xchg gs loope lds out mov in inc (bad) call xchg inc rcr inc adc lret (bad) pushl jnp stos mov adc cmp or hlt pop (bad) clc aad movsl ret out xor jns cmc lret fisub test fisubr aas pop js ljmp (bad) fdivrs ljmp mov push or lods popf mov mov int3 xchg test movsb lret mov mov in ljmp sar das push sbb push pop icebp cmp xor repnz (bad) (bad) (bad) mov push jge cmp fwait mov adc fs in fisubrl push (bad) push (bad) adc bswap cmp jae mov push and push add xchg shll stos mov into jg (bad) es ljmp js leave (bad) (bad) mov jge insb hlt jge mov inc jae sbb fldl incl cld push pusha lds inc xor dec add fnstsw xor jae (bad) (bad) lcall pop mov jb fnstcw (bad) test mov cmp push test (bad) decl scas je xchg sub cmp mov je mov (bad) mov mov push and jne or mov xchg imull jne jns mov add fdivrl cmp scas and jmp xor in cs mov and cmp jo jnp lret sub push jmp popf xchg inc icebp cmc sub sub add (bad) mov cmc repnz stos pop cmpsb fcoms cmpsl sub jmp jecxz (bad) ljmp pop push lods inc jecxz push sahf sub push and mov xchg (bad) jmp imul lcall (bad) jg decl mov das stos fldcw sub or into push mov cmp (bad) ds or cmpsl mov cmpsl nop mov ljmp (bad) incl push js ret cltd mov stos (bad) daa mov nop xchg loope jne aaa cmpsb cmp lcall sub pushf add pop int (bad) (bad) mov jmp inc outsb jae or test jno mov (bad) (bad) (bad) fimul and pusha add out mov jmp push ljmp incl pop aad add fildll daa cmp (bad) (bad) mov inc adc mov sahf lods xchg in nop repnz dec loope cmc push jne sub stos leave lock ret jns xor sub add and mov mov push pop and dec (bad) in xchg (bad) (bad) ljmp add in fwait mov pushf ljmp cmp (bad) (bad) mov int popf mov mov mul inc inc xor lahf or xchg push iret adc xor ljmp movl cli and or jmp xor (bad) (bad) fucomi mov fsubr sbbb (bad) cmp ret or add cld (bad) incl sub lods sbb aas push mov pop xchg pop ja decl mov std cmp mov mov cwtl mov mov rcll ror lahf es lret outsl push add divb (bad) jg clc neg xor sbb addr16 fs push (bad) iret ljmp enter and xchg in dec fwait les icebp sbb and jmp stos inc push movsb imul leave adc adc in push xchg lods cmp (bad) jne jp mov cmpsl cmp jecxz out cld (bad) (bad) decl mov outsl inc aad mov and and hlt lahf dec or (bad) call inc imul je ja add push mov mov loop mov inc fwait jbe enter ficompl clc mov adc sbb arpl lds (bad) (bad) (bad) decl loopne fmul ljmp mov in or adc mov mov nop call mov aad (bad) call xor lahf popf push fs dec xchg (bad) (bad) (bad) ljmp sub fsubr jmp (bad) ljmp loope dec inc sub push and (bad) (bad) jnp pop sbb out cli rorl lea loop xlat lcall (bad) loopne mov dec pop push ret mov mov (bad) (bad) jg inc in sub sbb push adc aam loop inc sbb fidivr (bad) jne cmp jns jg mov popa push and pop repz (bad) (bad) decl pop hlt jnp mov adc nop into jg sbb sahf push cmp call adc xchg push xchg adc repnz mov add lock jbe add test mov jecxz (bad) (bad) (bad) jmp adc dec popf or sbb jo je sbb xlat (bad) call imul xchg inc cmc xchg sub (bad) fistpll fnop xchg (bad) addr16 ffreep cmpb pop js enter mov jg ljmp (bad) ljmp pop fist push and std bound decl lock xor or sub mov or (bad) ljmp push nop sub pop test xchg mov daa ret out sbb sbb pop or gs lds push es (bad) (bad) decl cli enter stos mov xor push data16 and and repnz pushl add les call jne sub lds negb pop cld lcall jecxz push insb inc mov es test (bad) insb int3 dec out mov (bad) (bad) decl in inc cmpsb jo add pop push and es push mov or (bad) (bad) decl movsl shll cmpb sub mov in (bad) jbe (bad) (bad) mov add dec push insb lea jo push fmull in aam xchg push nop faddp aaa gs sbbl xor (bad) call addr16 mov loop xchg push cmp mull cmp or ret mov mov add mov or dec cmp cltd inc mov fwait (bad) (bad) (bad) stc test dec mov push out iret mull add cmp int (bad) jmp xchg nop pop popa push add push adc add dec das (bad) call loop push xchg cmp outsl (bad) std or xchg (bad) ja (bad) (bad) decl les (bad) outsb xlat adc movsl sbb sti push cmpsb in adc dec cmp decl inc stc push push sub imul cmpsl mov ret inc lret daa (bad) (bad) (bad) (bad) in push mov aaa add add outsl sbb emms xor sahf call cli adc add sub mov das xchg test mov lcall decl pop mov inc cmp lods dec sub mov ljmp inc cli sbb (bad) (bad) (bad) (bad) ds xchg pop repnz mov mov das xchg stos sarl and mov pop cmc push jg xlat aam cld mov sub loop repnz daa dec outsl fwait nop xor iret shll add jg jne arpl test fisubl cld (bad) (bad) call (bad) mov (bad) aas adc in jp in pushf xor je (bad) (bad) (bad) ljmp popf icebp or adc dec add push cmp rcll or xor push scas or cs (bad) (bad) jmp roll mov jns scas sub pushf or dec je inc cmp (bad) pushl icebp and orl sub xlat sub dec mov hlt (bad) (bad) call add dec xor or ret jnp mov pop cmp addl xchg (bad) mov icebp ret or lret or jmp leave icebp (bad) (bad) pushl out cmpsb ficoml roll sti iret push movsl es or dec insb dec add jae call mov cmp outsl sub or jns (bad) call push cmc mov into outsb xchg xor insb pop sti cmp sbb cwtl mov (bad) (bad) lcall out cltd (bad) inc aas inc xor jns mov or pop (bad) (bad) call or jle inc int3 mov imul (bad) pushl fisubl fwait sbb push push lds jb and loopne imul loope scas mov mov mov call mov (bad) (bad) dec outsb cmpsb (bad) fmuls mov arpl enter push ja sbb xchg daa stc incl pushf cwtl out mov flds mov xor pop out pop dec rcrl xor pop pop push movsb js rcr scas push inc cwtl or add fcomps push cld (bad) lcall test div mov (bad) xchg std ret fldenv ret stos pop dec inc loopne add ret loope (bad) (bad) ljmp sahf test inc push inc xchg inc jecxz or jo repnz leave fwait out dec xchg mov or (bad) cmp xlat xor pop jecxz fdivl in (bad) (bad) decl inc pop loopne adc mov cmp sub xchg add repz pop lock pop mov add xor ljmp sbb notl addr16 sub movb incl ret dec scas sbb and push xor mov push inc in (bad) daa (bad) cmpsb mov jecxz mov jle mov decl cs sbb fwait mov out dec std lods cmc rcl push in sbb leave cmp xorb outsl idivb test arpl lahf dec jge pop (bad) mov jmp fisttpl loopne fimull mov add cmc xor cli rcrb jmp in decl mov dec push dec fs jo and adc (bad) incl mov hlt (bad) clc fnsave jl jmp push ljmp inc and lcall not xchg aas pop mov push clc arpl or jns int3 mov decl lcall das rcll mov movsl xchg mov cld incl into dec or dec sarl data16 out push adc idiv gs jg rcrb neg out (bad) sbb xor jp mov lcall (bad) xor scas jl mov mov in test dec pop cmp subb sbb sbb xchg pop add add (bad) pushl mov xor outsb ret sub loop insl adc (bad) cmp lcall jg (bad) push call out fwait or loop push sarl push cmp pop push ss jl cs adc (bad) call pop fildl movsb mov adc xchg pop add push repz inc mov jecxz movq mov jno shrl mov jmp call mov jg rcrb fsubl into icebp loopne cs call pop addb psllw int3 mov rcrb add call popf sub cmpsb pop mov clc pop adc add adc mov push xchg enter jecxz arpl aam adc imul inc push test outsb shlb (bad) pushl pop sbb sub int outsl mov xorl push sub clc les movsl aas (bad) (bad) (bad) pop inc in out in cmp data16 test or mov aas lea push mov in mov enter pop sub daa sbbb (bad) (bad) ljmp js pop mov inc xchg cmp and out rolb dec int3 or or (bad) (bad) mov push imul decl es push cld mov repnz sarl test inc adc cli incl adc movsl data16 inc jge out aam inc adc std (bad) (bad) (bad) in insl mov ja aad mov mov cwtl out mov push sbb loop hlt cmp cld call es sarl dec hlt and das and (bad) call or push or bound and (bad) call es cli (bad) decl fst add stos mov rcr cld inc aad insb nop ss jmp jae xchg repz ljmp jmp push lcall call adc addr16 push cltd dec sub clc push push xor addr16 lcall jb std push dec add (bad) (bad) (bad) lcall imul lahf mov mov adc inc cmp mov xchg xor mov fwait addr16 int3 xchg inc pop stc stc (bad) (bad) (bad) ljmp je xchg jge jb ds and push repnz xchg in adc add jg sub pop jo in xor pop int3 inc fnsave push jmp xchg ficom pop sbb adc (bad) mov add lret or mov in iret cmp lcall adc adc pop fldcw in xlat icebp xchg cmp pop inc mov addr16 lods inc aaa pop fstl (bad) call cmc pop lock dec push dec repnz repz fadd mov (bad) push jge and add sub xchg dec mov data16 pop (bad) (bad) jg add mov lock mov sti pop loopne fs push mov add ljmp aam (bad) (bad) jnp inc fild out adc mov iret add sub cmc push mov (bad) aas aad sub pop das or jnp jne loop shlb ljmp scas push fsubrl test fisubr dec cmp pushf insl inc pop addr16 sub (bad) jg outsb and sub adc fwait pop lock mov mov (bad) decl xor stc pop in repz sub insb int add outsl inc mov mov xor enter or (bad) dec sub (bad) inc gs pop (bad) lret sbb mov jae dec (bad) mov cmc stos ret cwtl lcall cmp jle das mov pop clc mov dec sti aaa mov mov jbe pop outsl clc xchg add mov mov push (bad) adc sub pop and push and mov mov cmpl dec sub inc push ljmp (bad) (bad) decl cli cwtl arpl (bad) mov int mov mov insb in cmpsl int (bad) or (bad) lcall add shlb mov (bad) lcall neg (bad) stos std xor insl cmp fisttp fisttp mov push ss xor jl (bad) inc push jo dec cmp sub inc into and push xchg int pop or sbb loope (bad) mov (bad) jmp out roll push std mov out cltd outsb cmc test mov (bad) (bad) pushl stc lods ds fstps push fldt jg jg sbb mov jae (bad) push push hlt xchg jb mov test (bad) incl xchg adc mov std loop loop xor cmpsl pop sub ljmp dec fisttpl jb add test lcall test dec fstpl push xor cmpsb (bad) jecxz in sbb movsl mov ja and mov inc les add adc push inc lea pop repnz loop adc or cmpsl pushf arpl sbb cmpl int push fbstp orb je sub (bad) fildll mov sub mov pushf pop push push lcall mov stos (bad) xchg sbb std outsl sub xchg inc std stc in and add (bad) (bad) fldenv cltd out dec sub sar clc adc lods push cs incl roll xchg cwtl and mov inc jmp mov (bad) mov ss lahf hlt aaa outsb icebp cmp xchg ret iret mov or cwtl popa jle mov mov jae xchg sbb (bad) (bad) pushl stc cli cmc sub test movsb in cmp sub jge mov mov pushf lea std dec push sahf ret call out jge pop lds (bad) (bad) pushl fisubl xlat push pusha test ds mov push cli dec (bad) (bad) call fmul out mov add jle orl (bad) call and pushf icebp mov push dec lea test loop add (bad) incl jns jg lcall cmp mov mov xchg push mov sbb jl (bad) outsb lea test cwtl mov xchg rolb adc cld jne jns dec jecxz jmp rolb mov lret (bad) (bad) pushl inc sahf jmp sub mov xchg push cs (bad) (bad) (bad) (bad) fstl sar dec dec or orl jg mov dec sub push sbb add (bad) call sub sbb cmp xor and (bad) jmp sub cmp cmp ret add or fidivl aam outsl hlt jg cli xor mov aad rorb das add xor xor in cwtl aas add jmp pop hlt ja pop subb push aad test inc jg bnd gs ret push pop (bad) xor (bad) (bad) (bad) ljmp jb jno xor iret jecxz das cmp inc push int3 cmpsb add inc popf rcll xchg jp decl push fisub pop adc mov sti cmp aad out sbb scas cli (bad) ljmp je xor jno jl aad mov pop lret jecxz push cli (bad) push pop mov dec out add scas out jmp sub (bad) (bad) aas sub (bad) mov (bad) jne or mov in push sub pop cltd sub aad (bad) (bad) pushl cwtl sub imul inc xchg pop imul insl loope cmp mov (bad) jg inc push cmpsl movsb dec cmp ffree test lds and or pop stc mov lock decl arpl sarl push sbb dec syscall clc xor push (bad) ljmp and addr16 sbb mull addr16 ja es (bad) (bad) (bad) decl jg leave jae xchg incl cmp out sbb and inc inc cmpsl dec jne aas lds int3 sub sti mov (bad) (bad) (bad) jmp les into xchg mov adc inc mov wrmsr imul adc lods (bad) dec shll pop loopne fisttp adc insb cmp dec lock push jecxz movsl pop sub and (bad) addr16 popf stos xor call pop repnz pushl mov imul ficomp call mov (bad) clc xchg pop (bad) fcmove mov pop inc xor add sub and push mov (bad) (bad) jp enter xchg aam sahf fwait lock gs imul (bad) (bad) mov hlt bound testb les pusha jecxz mov cs and push (bad) jmp cmp inc in mov (bad) in mov pop es and loope add psubw (bad) (bad) decl cmpsb pushf shrb pop sbb sahf test push and mov ja mov dec sbb movsl repz jg fcmovne pushf ss (bad) (bad) jg xchg push xor outsb sub mov aas sahf dec shll jle (bad) (bad) jmp mov adc xor insb movsl sbb sar jns jl mov bound or mov pop stos ss lcall jb ret nop aam test bound cld scas sub sub push fadd cs lods cmpsl xor lock jl lret (bad) (bad) lcall scas sub mov jo insl or sub outsb mov xor repnz (bad) call into fsubrs inc loope sahf dec xlat push and arpl daa je int (bad) (bad) decl std xchg loopne mov fwait in and mov int cmpsl jmp (bad) lcall call inc enter add push (bad) jb,pn mov lock (bad) jmp gs int sbb testb mov gs into jbe sahf lods adc sub (bad) (bad) call dec std push mov pop inc enter push popf stc (bad) (bad) call inc or ja inc inc inc push jecxz orl clc mov jmp cmp add push inc and sub or cmp jb nop lcall imul mov aas das test dec (bad) (bad) (bad) lcall pushf cmpsl shll push fcompp sub loop mov dec or lcall decl sbb mov mov aas push or out (bad) (bad) (bad) ljmp jns mov andl mov push fcoml imulb mov icebp mov mov sti xchg cmp ljmp add cmpsb mov addb pop and mov mov ds es aam adc mov ficompl sti nop mov push out lret (bad) cmp sbb aam (bad) (bad) (bad) ljmp (bad) and scas push ljmp stos fsubl pop sub jmp add mov jo arpl out push jmp mov loopne sbb lock mov inc sbb mov adc or lods sub jle loopne jp mov cmp jmp and sbb adc loop insl (bad) pusha ljmp stos orb fistp mov inc movsl insl popf cli iret outsb jb popa xchg nop aam jmp movsb mov movsb mov mov lds push rcll mov pushl jbe and cmpsb ljmp inc add hlt pop test add scas sar pushl pop or add vmovntps mov (bad) decl pop std pop xchg mov mov outsl dec xchg xchg sub pop das cli scas mov lock xchg leave jg es scas push pushl call sub je jecxz mov inc nop lahf gs (bad) (bad) decl rclb loope aad jle adc fmuls gs mov fdivrl (bad) decl dec cmpsb movsl push aad data16 and jmp (bad) dec rolb out fwait mov xchg sub aas and aas and call (bad) (bad) mov clc test pop inc (bad) (bad) (bad) (bad) pushl cs into or jle fmuls xor inc jne jb pop jnp pop dec jbe sub ret cs mov add repz stc stos daa lcall push std (bad) (bad) jmp jb add dec mov mov ds fbstp bound fdivs imul lock outsb cmp mov (bad) (bad) (bad) ljmp ja adc cld iret lret add sub aad loop dec cli fcomip mov int mov ret sub pop movsl hlt add out (bad) add cld (bad) ljmp push pop add addr16 fidiv push clc mov pop cmp jns in and std mov xchg movsl push loope loope pop xchg lock lods fldt fidivrl dec pop xor (bad) (bad) mov je sub in rorb cwtl nop or mov (bad) cmp inc aas sbb xchg out xor movsb pop dec jp rol jg subb lods cld pop push push ds sbb fdivr (bad) (bad) lcall pop mov out iret sbbb test (bad) nop adc xchg rol aas mov jo popa dec bound out mov popf adc (bad) (bad) (bad) lcall shlb inc mov jle test push jne pushf mov pop lock shlb or ds cli pushl xlat sbb mov inc adc cs (bad) (bad) jmp ds imul or and sub jb dec xor pop pop int3 cld (bad) (bad) decl aaa and pushf cli adc adc push cs push inc (bad) (bad) call fisubr adc nop mov sti fsubrs gs sar push stos xchg fisubrl lret test ljmp fidivrl imul dec inc push pop dec (bad) mov (bad) test movsb adc addb mov (bad) (bad) ljmp (bad) xchg adc imul iret inc or inc cmp jne (bad) decl add out xor sbb pop or mov out dec fsubp stc (bad) (bad) decl adc xor lods cmp xor out lcall and test (bad) ljmp movsb and fwait clc aaa xor cmp cwtl and push fcom aaa sbb (bad) jmp pushl std movsb xchg dec and imul in adc push xor (bad) lcall xchg sub mov mov subb (bad) cwtl lods push pop movl aas std pushl cld lods xor fiadd daa push jnp sar pop das mov (bad) (bad) mov in add dec dec rcl jg sbb ds dec fwait (bad) (bad) ficompl pop adc sub xchg xor pop mov pop dec int3 sub cmp mov adc ret xchg das (bad) (bad) (bad) mov xor mov cmpsb (bad) loop sbb add jns repnz (bad) decl faddl lea (bad) imul pop and or lock (bad) incl ret pop push push push xchg and loope flds pop das rolb cmp (bad) cld (bad) (bad) (bad) frstor sub testl sub lret jmp shrl test lcall push sub mov fisubrl das cmp (bad) (bad) out fs adc jb mov and inc xchg cmpsb (bad) dec cmpsl ljmp inc push adc (bad) mov ds mov xor sub lcall fild ljmp cmp xchg (bad) adc scas adc addb xchg ljmp lret leave push daa (bad) (bad) (bad) (bad) jl or sbb out jnp lret (bad) jbe aas lods ljmp lahf lock (bad) aam xchg add clc aas mov or cmp pop push or ljmp int3 cwtl (bad) fs (bad) (bad) lcall mov std scas inc xchg cmp mov and pop mov mov cltd daa dec or (bad) call js mov sbb and push inc add (bad) (bad) lcall aaa out add in adc pusha sub (bad) (bad) mov jne xor jne xorl xor (bad) pushl les cmp lea push mov inc mov adc repz mov (bad) (bad) call jb inc insb adc test cli (bad) (bad) jg sbb jg (bad) lea stos push fcmovb into scas xchg gs test (bad) hlt call ret js sbb mov xchg add xchg incl rcrl jge rcrb dec push inc push inc ret into mov (bad) (bad) call inc insl cmp shrl out rol sub push add jp cmp push push or call cld xor mov sub xchg (bad) (bad) (bad) (bad) mov jns push push jae sub ficoml ret mov mov jo sub xchg fwait or mov jp sbb add aam call (bad) jle pop data16 mov jae and adc icebp pop ret (bad) (bad) incl dec xor lods popa (bad) cmp pop or fs xchg adc loop stos ret cli and clc lea and mov (bad) repnz (bad) (bad) ljmp dec lcall push xchg add pusha out das hlt xchg dec jp jo imul jnp push out lods (bad) icebp and or inc outsb test (bad) lcall ret pop test stc dec jmp icebp inc mov int3 out lods (bad) (bad) (bad) incl aad sub cmp adc out (bad) mov add imul sbb (bad) lcall cmp or arpl sub fadds jecxz popa stos xor or mov (bad) fadd pop ljmp icebp cmc test pop roll push out inc mov loopne scas pop aaa xor xchg sub mov rcl (bad) (bad) call push xchg jno repz shlb loop mov adc mov sub das bound imul ret rorl cmp (bad) (bad) fcomip cmp push add push xchg inc adc imulb mov inc sbb decl cmp pop fidivrl jbe aaa test jge add out sbb dec adc out out (bad) (bad) (bad) incl and scas ljmp mov pop scas mov adc dec movsl cwtl insl and push pop cmpsl ror mov call sub popa cmp sbb pop add es or mov sub xchg insl pop push or repz inc pop push sbb (bad) lcall xchg xchg mov or sbb roll dec push adc push (bad) (bad) incl mov or (bad) push cs mov xchg push (bad) push (bad) jb cld (bad) (bad) in mov xor popa gs movsl in jbe (bad) cmp fsubrl imul push sub outsl (bad) flds sarb and fs pop push xor jmp push aaa jns adc mov loope push loop add sbb xlat pushf imul xchg cmpsl sbb in jp (bad) jg lock xchg lcall enter test push adc (bad) (bad) (bad) jmp cmp dec xor jp sbb jbe stos mov aas mov aaa push in pop xchg jg push in or sarb jns jl (bad) (bad) decl ja andb add push es pop (bad) sbb adc cmpsl push pushf adc pop pop add (bad) (bad) jg xor cmp xor fbstp push mov lahf mov mov dec ss or mov movsl sbb (bad) mov sub movb xchg dec mov cmpsl xor daa cli push loope pop cltd push mov rol repnz lret cmp dec dec loop add mov mov iret pop imul mov cmp mov dec and test sub mov pop es mov jecxz lcall loope sbb pop cmp cmpsb jg mov (bad) (bad) lcall mov js pop pop js pop fldt scas cmp add and mov repnz (bad) inc scas std push jle das jb xchg or int3 and test roll aad inc push mov lods (bad) (bad) decl lahf sbb push fist ljmp out imulb ficoml repnz (bad) incl pop hlt loop pause jne mov jmp mov jg mov insl inc (bad) (bad) mov sbb addr16 xlat or aaa sub insl mov sahf (bad) (bad) decl push or ret aam mov stc sbbl add mov (bad) mov lods fisttp xlat scas xchg pop addr16 (bad) (bad) jmp pop xchg pop out mov lea sar add cmp repnz in (bad) jmp incl cmp subb stc push scas push insb pushf cmp aam add (bad) (bad) inc sbb adc (bad) xor pop and repnz xor jmp sub jmp jle mov add cmp jnp mov icebp (bad) (bad) call add icebp clc lds push add sbb in xor sub lcall nop cs lods outsl adc aam ret inc mov adc sub mov (bad) (bad) (bad) (bad) fadds lds and and adc push cmp jb loope les pop bound lcall (bad) and (bad) decl fwait mov and sar sbb stos idivl sar (bad) incl cmp ja jg iret ret push xor dec dec dec loopne sete jg cmp cmp arpl or (bad) jmp mov aad and outsl cmp loope mov decb and imul ds jp inc mov cmp jno (bad) (bad) ljmp pop loope push push mov sub jmp dec int3 push dec decb out cmp mov int3 dec out lret pusha push pop sbb (bad) cltd jns xlat loop (bad) (bad) jg sti test push jl xchg adcl sar mov inc int arpl xchg xchg (bad) xchg lret pop cmp jg clc incl mov mov movsl mov hlt icebp mov clc (bad) lcall aam push andl hlt push cltd int3 add test in hlt (bad) mov xchg mov (bad) or cmp push (bad) (bad) xor inc loopne stos mov loope cmp dec icebp sahf mov es ds (bad) (bad) call (bad) out cltd addl pop add jmp mov mov mov (bad) (bad) call mov sahf ficoml add jge arpl (bad) out cli leave push js mulb push or insb ret loope fcoml xlat add push stos lods pop aaa les scas and hlt clc pop push subb lcall imul in jge flds clc pop (bad) jae cmpsl daa sahf lock push (bad) in xchg adc sub addr16 sub jecxz arpl test xor cmp hlt fcmovu sbb push imul add loopne ja flds enter cmp mov dec emms movsb adc ret (bad) (bad) (bad) decl jg sbb icebp xor ret insl adc daa inc arpl mov outsl sbb (bad) (bad) incl hlt xor pusha cmp les xchg mov xchg xor aas xor xor sub das test or fwait xor in pop sar cld fbld mov aas jecxz fisubrl mov (bad) aas adc leave push mov test ret (bad) mov ds stos or (bad) clc cmpsl insl or xor inc in cmp and jge dec mov loope xor add incl push mov mov fsub aad (bad) (bad) incl sbb cld jge inc inc faddl pushf mov pop scas jmp jp xchg pop add dec nop scas sbb mov jnp pop divl xchg addr16 (bad) (bad) (bad) jg and pop ja rcrb daa insb fcoms xor dec mov loop fdivs jo add leave (bad) (bad) (bad) cmp and xlat fildl rol xor push mov insl mov aas jo push push inc push cmpsb adc xor icebp enter addr16 jae sub inc in (bad) pushl dec push imul push orl les adc push pop adc lcall and (bad) dec and adc mov dec sub outsl icebp sub in (bad) (bad) jns negb inc or cmp xor fs dec dec cli mov jo dec int3 mov push rol (bad) out lods lods outsb out dec jge adc shr mov decl mov sub data16 (bad) mov cmp ret cmp cmp in stos inc popa mov (bad) (bad) (bad) call (bad) mov outsl add (bad) out aam sub mov pop dec es mov rorl fs in adc fwait dec cld sbb das cmp inc ljmp pop loopne mov pop and loop or and mov (bad) (bad) jg test lret insb and jmp jle pop or test sbb jne sub push loop mov insb cmp push test scas mov dec (bad) sub movq jne imul sub iret adc (bad) ljmp sbb sbb into push push cltd (bad) (bad) (bad) call arpl orb sbb mov cld xchg mov jecxz lahf shll sbb clc jge and jmp jecxz popf push adc cmp (bad) (bad) (bad) jg jmp sub sbb push cmp cltd in jnp test addl (bad) (bad) (bad) call out test adc push sbb xchg stos call shlb (bad) ljmp fmull sub in pusha pop mov push jae xchg xor ljmp mov dec out xchg stos jb cmpsl les ds (bad) call movsl add xor sbb pushf int stos ror (bad) mov push imul dec inc popf test decl xchg popa or ljmp cmp fistl fistp aaa add ja test add cmc jmp xor (bad) ss pushl or cmc adcl imul mov add jmp jl xchg sbb mov or fcompl cmpsb jp fwait and mov push sub int xlat dec scas jo mov inc xor out mov or xor cmpsl ja loopne std testb lcall xlat ror mov in or icebp or js or daa pop (bad) (bad) (bad) pushl addr16 jmp pop jns dec sub fisttpl ds fs push test push xchg and (bad) call mov jle sar jns stos or adc or fcomps fstps mov inc mov lock faddl lods jg clc (bad) mov push adc fcos fwait sub test inc hlt (bad) mov mov mov in shrl int3 js or rol pop mov xor ss call pop cwtl sub lods daa add cld (bad) jp push and mov push adc mov les (bad) xchg loope movsb dec cmp cld mov ljmp fistp sbb xchg mov xchg ljmp int3 inc insb xor sbb cmp scas pop call mov in in sarb pusha push mov xor int (bad) aas inc cmpsl mov dec test mov scas cs lahf push scas mov (bad) dec roll clc cltd mov stos sbb inc sub mov (bad) (bad) (bad) mov rorb cld xchg push cs adc inc ss jo xor (bad) decl dec xchg push int sub push inc loopne in adc jmp pop push pop adc out and and sbb xchg lds (bad) (bad) pushl adc std mov repz in js lret (bad) jmp icebp or inc in jle xchg inc or dec outsl dec aam xchg nop sub jg cli cld mov inc sarl push loopne jecxz cmpsl mov std xor mov nop test dec pop imul adc shll stc push ss xlat dec std jmp inc in sbb cmp mov mov or data16 rorb inc mov sahf lret xor jg ljmp fistl mov ss out lcall arpl adcb (bad) (bad) pushl ds jns mov mov lods or push xchg es (bad) lcall lcall in lret push lahf andps je movsl bound xor pushf iret mul dec out inc sbb (bad) (bad) (bad) (bad) fsubp cltd xchg sub icebp divb adc data16 push adc (bad) cmp adc out ret xchg imul xor loop push and bound mov test (bad) (bad) (bad) fcmove mov cmpsb dec sahf ds popa loope mov es ljmp cmpsb add jmp dec or repnz adc (bad) and jl (bad) aas dec pop int adc test cld xadd paddsb (bad) (bad) (bad) incl or jmp push sub mov push sbb sbb cld mov in jbe jmp stos mov or inc pop push mov je cli (bad) (bad) (bad) jmp xchg test jns push stos inc add mov in loop (bad) (bad) mov pop shl xchg cltd shrl sarb scas pop jecxz (bad) ljmp or clc dec fbld cmp movsl ja iret mov cwtl mov (bad) add or push mov cmp cmpb (bad) (bad) (bad) decl out mov (bad) jl add mov xor pop cmc push lret jmp push xlat ret (bad) jmp cmp mov stos test fwait test incl lcall stos add insb mov mov iret adc lods and (bad) mov fwait adc iret aaa lods jge jno or push lret push fidivr jg js je push cmp incb push pop cmc sti dec pushf es cli xlat xchg cmp pushf jne pop insb or rep adc inc jle ret push leave push sbbl loope or mov rcrl xor sar (bad) (bad) jmp mov xor inc popf adc loop mov mov es sub hlt jbe pop in lcall fidivrl sub adc jg movsb cwtl lahf add lcall push push and cmpb shrb mov xor cmc or pop add psubq notl test inc (bad) xor sub pop ljmp (bad) push or inc mov (bad) (bad) fildll cmp mov addl ret lea xchg adc loopne xor dec xor out addr16 (bad) inc scas in pushf (bad) divb test sbb fsubs clc test mov rorl xchg add (bad) incl push xchg mov enter mov call and ljmp inc jg add es lods mov fs mov jno imul aad jb (bad) lods stos aam (bad) and jb add jl scas stos xor es (bad) (bad) lcall cmp idivb pop and mov (bad) call sub and outsb lcall jmp lret xor repz lahf loopne test mov test mov sub stos mov incl dec (bad) fdivl cmp pop push in push fistp cmc ja pushl cld add push mov movsb cs js lcall push popf call js repnz and or (bad) lcall rol cmc sub and mov jle xor shl sub jmp add addr16 jle outsl mov mov inc dec mov rcll mov aam inc sbb pop lock ds sbb mov push mov test cmp idiv rcll mov sar ljmp cmpl push add xchg mov decl popa imul ret adc das js jo int3 jns add mov add (bad) stc or (bad) fild xchg xchg addb decl sbb pop jns xor test xchg mov pop xor add icebp (bad) mov (bad) lea outsb push xor clc test mov or xchg cmpsl pushf ljmp (bad) aad jp dec rolb lret jbe (bad) rorl (bad) and inc loopne mov sbb push xchg or pop pop hlt (bad) jmp pop add jnp inc pop cltd gs in gs pop add rcll out ret jmp enter test inc es push inc imul add jno jnp fs pop (bad) (bad) (bad) (bad) (bad) in iret add mov test add xchg or cmp jno cmc jg (bad) (bad) jg sbbl mov imul xchg or (bad) (bad) call xchg cmp es popa xchg xor imul dec pop inc and push call roll and mov outsb and jg test test mov pop sbb lcall push and (bad) (bad) jmp mov push int cwtl sbb sub (bad) mov jmp mov jle les cli cli ljmp sub add stc pop inc loop (bad) incl add shr pop call fucomip mov push add (bad) call sub fmull mov cmp (bad) (bad) call repz (bad) xor xor es loope adc dec ret dec xchg mov add jecxz es inc inc pop pop lock (bad) jl mov out or cs repz aam sbb lock out ss daa icebp (bad) lcall popa sub enter cmp loopne inc in cmc xchg fisubr dec (bad) (bad) lcall into inc test cmp xor jno adc add imul pop cmp (bad) (bad) call dec inc mov jp hlt adc in push (bad) (bad) fimull mov mov cmp shl popl inc sub inc (bad) je mov xchg ret lea mov arpl cltd ror cmp rcr daa (bad) push fs jmp or push (bad) decl insl shrl testl sbb cmp add mov mov ror data16 imul push dec mov decl pop insb iret jb fisub (bad) idivl (bad) ljmp stos mov sahf mov or and cmc in pop sub loopne inc cmp mov insb xchg cmp dec (bad) mov rol rolb rcr lcall xchg sbb or or (bad) call add lea push lret jne push scas dec pop hlt adc cmp xor nop jle (bad) (bad) lcall iret jno lcall pop nop xor push jl popf jns (bad) xchg or test int and cli decl std fld jo (bad) repz cmpsb or xor (bad) (bad) (bad) jmp xor mov add scas sbb dec mov (bad) lahf outsl dec clc jl sub sub ljmp or mov cmp adc jae cmp (bad) (bad) (bad) push scas movaps mov stos repnz inc jmp jle xchg es js in mov add scas (bad) mov cld movsb outsl inc std rcll inc int3 stos cmp dec jbe fwait (bad) (bad) mov cs push mov adc sbb push mov (bad) (bad) incl pusha mov ficompl add inc mov fldt jp daa rcr mov aaa cld dec push jge imul ret jg xchg out cmc pop fisubl cwtl and xchg stc push add pop inc mov in in sbb jmp inc push aam rorb nop (bad) (bad) pushl outsl and (bad) mov aaa js adc mov sar (bad) decl jecxz (bad) jbe loop dec cmc popa xchg jae and shrl mov xchg adc jae push pushl (bad) (bad) call out xchg ret xlat push pusha loopne mul mov and (bad) (bad) lcall dec sbb std or sbb lods or jp testb ljmp mov arpl ljmp std ror adc insb jns sbb mov push in push pop and rcrl popf sti add js lcall adc lret imul ja mov pop xor dec xor mov and add (bad) pop orl rorb loopne pop arpl sub cmp mov mov in gs cmp and (bad) ljmp cmc push sbb jno (bad) cmpsl lds mov test jo sbb (bad) cld int mov leave xlat (bad) ss fist adc (bad) (bad) ljmp mov mov mov popa mov mov and sbb stc (bad) (bad) cmp add sbb add sub mov xchg out (bad) or add mov xor shrb inc dec cmp (bad) (bad) (bad) jmp sbb lds into jo mov cs sti pop pop mov repz sahf or (bad) jmp test bound pop je,pt inc cld fstl (bad) (bad) (bad) (bad) fiaddl inc gs push xchg jns jl mov mov sub dec xchg add (bad) xlat (bad) call push pushw (bad) jmp jo sbb pop push ds xchg lds cmc xlat fdivr (bad) (bad) incl sub je jp,pt mov mov outsb call scas add incb push rclb ror stos dec add repz lods (bad) (bad) (bad) (bad) jmp sub mov cmp stos or nop into stc mov roll pop cmpsb pop xor pop add ret popa adc loop hlt ficompl jl insb adc xchg sbb test (bad) (bad) ljmp lret pop dec loope inc pusha imul mov sarb pop data16 scas lock xchg ljmp push pop cmc adc iret adc jne in sub cmc mov outsl clc (bad) (bad) cld cld dec (bad) stc fwait or in xchg les inc mov int3 xchg xchg jg cli (bad) cli add mov xor jl xchg push mov (bad) (bad) fimul jno sbb jne mov rcl outsb dec in in sub repnz xor (bad) mov mov lea pusha lods das add jg pop xchg pop mov stos mov mov loope ret (bad) (bad) (bad) (bad) in xor repz (bad) jae nop aad mulb jbe pusha insl pushf int3 ficoml fsubrl sub jecxz and fstpt lcall jle pop fadds and or imul add inc inc xchg push xchg inc pushl push addr16 imull (bad) (bad) (bad) incl int3 xchg imul add xor rcll in dec mov enter stos adc lcall cld mov cmp adc stos (bad) (bad) jg push mov les sub xor test subb nop cli (bad) std mul fwait push pop push hlt (bad) (bad) jg movsb call (bad) fcomi scas js adcl ror (bad) (bad) ljmp sbb mov cmp or sbb lods out mov lahf mov pop inc (bad) (bad) (bad) jl dec pop add pop mov jmp mov jmp notb (bad) (bad) (bad) jg xchg jo push cmp pop adc and (bad) xor andl sub call shrb cs fdivrs xor jnp pusha (bad) (bad) ljmp sbb jmp dec out out xor (bad) (bad) jg stos mov (bad) jnp rol int3 std loope or repnz int3 lret and pop sub jmp ljmp mov clc xchg mov push fnsave jns test out cli (bad) jp (bad) fcomi les addr16 or aaa inc shlb clc cmp ljmp call mov or mov int repnz enter mov (bad) (bad) jmp lock sub xor icebp orb in mov mov jge out inc (bad) jmp ljmp dec repnz scas inc (bad) movsb cmp ret lcall lcall (bad) icebp xchg rcl rcrb xor lock mov std (bad) pushl sbb jmp loopne (bad) aas cli aaa push in (bad) (bad) aas dec xchg mov push add cltd push cmc jb xor xor divb sub fsubrp (bad) (bad) ljmp popa cmp mov adc imul inc sub ret mov inc (bad) and (bad) push mov or (bad) out and (bad) (bad) ljmp lods mov jns repz cmp xchg mov cmpsb loope into mov mov call in add repz ret jae mov (bad) (bad) (bad) call jmp push mov addr16 sub dec popa mov cmc mov test xor mov mov cmc movsb paddq (bad) (bad) jl and sbb xchg push add repnz mov dec movsb push jbe xchg into inc lcall jmp cmc es rclb negl (bad) (bad) (bad) incl std imul xchg mov int3 mov mov add aad inc mov jmp jbe call int rol imul dec jae rcrl lcall xchg adc push push fnstenv mov fldcw xchg push sbb sub (bad) pushl movsl nop orb scas stc ret add mov mov (bad) decl clc mov pop pushf inc loope sbb (bad) (bad) ljmp lods clc xchg scas scas (bad) int push pop cmp mov fst (bad) int3 out add mov sbb mov lcall mov dec fincstp add jle dec cltd add cmp sub (bad) das into in lahf test jp scas (bad) incl and aad mov or sub cmc pop insl mov (bad) (bad) incl jb cld les lcall sbb daa imul add lcall cmp dec gs push cmp fs lahf mov adc xlat jo xor lods pop jl mov xor xor fldcw cld pushf dec cli andb push insb jge mov es iret jbe adc aaa sub xor clc jne and ret out rcrl cmpsl rcll dec add stos (bad) lods mov add test push icebp in fistp jo jae lret (bad) (bad) (bad) call lods dec adc xor xchg stos sbb sarl xor xchg cld (bad) call lds and mov popf inc arpl fwait (bad) (bad) ljmp cltd cmp sbb lock ja jbe mov dec pop jle (bad) and lock (bad) jmp scas inc in push fsts mov add into aaa lret leave add (bad) decl mov mov mov push sub jle (bad) (bad) jmp lock scas out orl cmpsb adc in punpcklbw (bad) jmp stc mov mov push in ret movsb mov jecxz fadds sub int dec orb adc add insl lock leave cli inc call hlt mov ss cld cwtl xchg scas je xchg scas ret (bad) (bad) (bad) lcall int pop mov jmp push add inc adc dec rcll lock add aas call test fldl2e xor adc out sub push push sbb (bad) (bad) pushl jp or repz sub or (bad) (bad) (bad) (bad) cmp movsb out stos test push iret dec cmp mov fldenv das or jg lcall sub lods sbb (bad) (bad) incl dec jmp jno xor loop (bad) mov mov sbb popf or (bad) ljmp divb pop xchg push stos or mov loope cmp xchg dec mov out xchg ret popf mov xchg xchg sbb cmpsb mov (bad) (bad) (bad) call mov mov xchg scas dec arpl dec push push dec mov jmp (bad) (bad) jg test (bad) xchg (bad) and lret dec and shl rolb icebp (bad) call mov xchg adc mov jnp dec push rcrl scas or sub fs pusha mov repz (bad) movsb mov (bad) ljmp mov inc rcrb xlat push loope lea aam call imul push push cmp pop mov inc pop loopne jg cli int loopne adc iret in pop jmp sub jmp sbb sarl sbb mov xlat mov cmp lea cmp repz pop jmp aam aaa std call pop mov and (bad) movsb ret add rolb fistl cmp (bad) (bad) decl fs sbb iret bound dec jnp int adc cmp fstpl (bad) lcall imul xchg insb mov sub mov (bad) fisttp repz sti xor call inc push (bad) push mov scas lods je pop sarb cmp inc movsl sub or pushl mov add fcmovu repz ljmp std (bad) (bad) ljmp pop gs push loope lds dec push or or jo in sbb mov sub in pop (bad) (bad) (bad) jg xchg (bad) mov push mov pop push es mov in stos in add dec pop subl aaa cmp es loope out out pop test jo (bad) rorb jge add insb sbb (bad) (bad) jmp fdivl lods mov aas rcr das (bad) aam pop or in es pop pusha lods and inc out jae cmpsl dec prefetch or and mov inc fstl repz idiv (bad) (bad) jmp xor imul mov lds dec pop fdivl pop add imul xor imul sbb push dec jmp push mov imul sub jmp stc mov mov mov push dec (bad) (bad) incl mov or out mov inc xor xchg jno (bad) jmp xchg push jnp (bad) movsl ret or add ljmp sti mov mov cltd stos pop pop mov xchg (bad) mov jg ret sbb insb pop pop (bad) cmp (bad) (bad) frstor adc and mov xor push fwait mov push call scas jp adc lcall xchg nop pop (bad) (bad) (bad) mov or sbb out pop subl and not (bad) cmp lcall mov adc or test sub cmp jnp arpl ljmp (bad) dec es push sbb clc (bad) (bad) call rorb mov int3 bound out (bad) cld jp insl test add out ss dec insl (bad) mov cld or fcmovb call push je (bad) int sub data16 (bad) push xchg mov pop (bad) (bad) jmp rcl mov push jp xchg divb mov fistpll iret popa mov dec icebp fisttpl shlb icebp sub add jecxz mov push sbb into dec loop pop addb jle adc divb jmp fnstsw push push jmp gs xchg inc (bad) (bad) (bad) pushl sbb and test sahf out or and push push xchg out dec push lret pushf fdiv fsubs imul hlt mov sbb test sar incl sub daa (bad) mov sti lcall jecxz cld (bad) (bad) decl mov (bad) jns pop jo lds cmpsb push jae out loope add jmp mov xor cwtl jp cmpsb in adc (bad) (bad) jmp mov cli fs dec mov sub sub clc mov test cmp and jbe mov fiaddl into imul icebp adc dec jb cmp test pop cld cld mov icebp mov scas sahf das lods fist or out test jp (bad) mov adc sub dec sub cli call push mov arpl test mov leave es out push mov scas sbb gs xor push enter add adc dec xor in scas imul popa roll fs cwtl jb add (bad) inc sub pop int jbe dec daa xchg push (bad) mov xchg lcall mov sub push xor ss sbb (bad) (bad) (bad) (bad) mov loop and (bad) aam sub jbe gs out pop mov jge jnp inc xor std decl mov mov enter inc xchg jp pop dec dec loop inc cs xor push clc outsb cld push (bad) (bad) (bad) (bad) mov jns (bad) push scas outsb cmpsl test inc adc (bad) loopne jmp int3 addr16 (bad) mov cmp out outsl gs push xor push (bad) (bad) (bad) (bad) in mov int3 cs xchg sahf es sti mov je mov mov out in cmpsl sbb cld ret lods xor es ds (bad) (bad) (bad) lcall insl daa inc repz mov lds jb fsubrl or out mov jne push mov incl retw add mov adc in xchg test test mov jns loope sar jge xlat into push mov insl mov cmp mov cmp cld (bad) jmp xchg pop push fnstcw jb mov lds repz (bad) (bad) lcall pusha (bad) xchg fnstsw mov adc rol pop sub lods loop (bad) incl mov pop push mov ljmp xor inc movsb mov mov cmp mov ljmp ss (bad) (bad) ljmp inc (bad) leave das xor sbb or xor ret pop mov sarb ret dec pusha jl clc test (bad) (bad) call aas sbb dec dec mov ljmp jmp std (bad) (bad) (bad) ljmp ret ret mov cld shrl imull xchg cmpsb shll add inc scas inc mov jp mov jg sub into (bad) fdivr (bad) (bad) decl xor outsl repnz out cmpl fildll (bad) ss mov outsb arpl or decl enter in js xor and loop mov (bad) (bad) (bad) cmp mov dec cli dec xchg pop adc (bad) mov pop cmp mov test scas ljmp stc or add iret imul hlt ds mov lcall rcr push cmp fimull ret dec (bad) out rcrb or movsb cltd push in test xlat dec ljmp ss dec outsl ret mov shll jg cmp bound das and pop mov dec mov arpl or lds imul icebp test int das mov je (bad) jg mov lahf shlb mov stos (bad) xor pop push clc (bad) call movsb or nop mov push mov mov (bad) ljmp out sub js inc fdivr out (bad) icebp das out and notb xchg cmp decl push cmp daa sub push aaa lret push outsb mov add (bad) jg rcl inc mov jo mov leave gs dec rolb lcall (bad) cmp (bad) mov xor adc repnz mov jecxz xor nop mov cmpsb dec das push inc dec test test push out push test jge cwtl outsb ljmp dec aad mov pop jle lahf mov dec (bad) mov sbb cli mov hlt pop add (bad) ljmp lods cltd or pop sbb aaa fldt pop movsl lock call sbb cmp std call call and (bad) (bad) lcall mov cmp dec shl mov pop or loop mov mov mov (bad) call add ds add in shl xchg cmpsl into int3 dec mov push pushf lcall in iret into fstpl in es push sbb clc and stos call or push loope,pn stos adc (bad) xchg mov and pushl pop push rcl jp adc add mov mov add arpl dec pop pop xchg sub insb lcall mov stos dec imul popf pop fisubrl ss fbstp push (bad) (bad) (bad) (bad) (bad) pusha mov mov jo sbb (bad) mov std scas test jmp cmp stos dec stos and das lds arpl and (bad) mov bound jb loopne out cld dec ficoml push mov mov cmpsl add in shlb jbe dec roll jg push int mov jl fs ret ds jne lods xor sbb leave mov lcall outsl idivl mov out ljmp data16 jg lock mov xchg sbb outsl out xor (bad) ljmp (bad) jge mov nop shlb adcb xor push push imulb (bad) call dec jnp sbb add stc add popf aaa pop mov mov pop xor (bad) (bad) (bad) mov jne xor mov into mov call jns sbb xchg mov mov xlat ret lods jmp fistpl push adc jge (bad) (bad) call popa or rcrl ljmp mov dec int sbb hlt jecxz jbe xor jns lret mov (bad) (bad) ljmp jae into add push push lds int and fdivrs int and (bad) jp cld outsl clc ljmp sahf (bad) ljmp add mov mov aas jo inc jge push dec cmp lods in xor in aam int imul clc sti in mov mov arpl push adc mov outsb xchg dec pop inc and cmpsb mov call cmp mov mov outsb es sub std mov jp push fcoml pushf arpl push int3 mov (bad) xlat inc push sub int (bad) (bad) (bad) jg or repnz call xchg test mov pop das xor cld pushl cli pop inc xchg (bad) mov mov inc repnz incb mull icebp (bad) lcall pop mov dec dec lock sbb xchg mov inc jg push in rcrl (bad) call out ljmp adc rcr ds hlt popf mov std call push cmp cld test pop (bad) jecxz ljmp xor or mov test adc loop xchg or movsl jg movsb sbb fwait je inc test sbb xor mov (bad) scas mov xlat mov lock mov aaa mov ja or (bad) ljmp mov js das test or lock dec ficomp cmp (bad) lods in xchg cltd dec mov cmp (bad) fcmovnu and (bad) rolb sub xchg sbb ljmp push lcall int3 roll sbbl (bad) (bad) ljmp mov call inc imul mov lods mov stos ret mov push sub lock hlt lock (bad) (bad) (bad) ljmp and xchg jb adc ja cmp outsb push icebp fsubrs fimul sbb jmp mov pop mov add xlat lahf xchg lods (bad) (bad) (bad) jmp adc enter fmulp dec jae cltd sti add pushf sub and mov xchg scas pop call imulb int and pop lahf faddl xor (bad) inc ljmp mov sub aad pop insb xchg sub dec and or stos fs cmc sub loop adc xlat fldt (bad) rorl add dec xor (bad) ret jg mov iret in int ficompl jmp push mov fcmovne mov in fmull (bad) xor (bad) sarl (bad) (bad) gs sbb mov or xor repz cmc outsl stos shrb xchg or push out ljmp scas and pushl std xor adc pop fnop cs call repz jp es fs inc adc ja sbb adc stos xor cmpsl sbb out mov pusha shlb cmp sahf pushf push xchg sbb imul mov (bad) sar cltd mov (bad) jmp js,pn add cld mov mov test push inc cmp incl shll sub cmp xchg (bad) dec xor (bad) (bad) mov cli pop pop mov cs mov mov xchg dec cld incl jnp hlt ljmp outsl (bad) dec lcall lcall xchg jo push and (bad) (bad) (bad) jmp jl cmp mov hlt push and div mov cmp or dec int std outsb add add push lods stos cmpsb fisttp pop sbb sti dec ljmp adc dec jo sub or pop addr16 and (bad) (bad) pushl push imul and fdivl out cwtl dec outsl cwtl and pop mov sar pop pop sub in pushf js out xor loope mov decl inc cmp enter jp pop sub jl (bad) jg ljmp pop mov and outsl jecxz dec insb pop inc sub movsb decl call jb dec push (bad) (bad) (bad) lcall dec adc or (bad) xchg push out jecxz mov xchg cld jmp mov push jns fsubp cli xchg jmp sub (bad) (bad) (bad) decl push mov push in ljmp xchg sbb xor jo in arpl out xor mov out xchg mov xlat mov fscale mov cmp xchg xchg test add push in in test inc (bad) mov cmpsl repz testb test notb cwtl ficompl lcall (bad) jno aaa (bad) icebp dec das mov fdivr (bad) decl sub jge lret xchg fmul mov push enter cmp lret inc sub repz lahf sahf les mov xchg mov addr16 add xchg push cs (bad) (bad) (bad) cmp in out jno mov popf loope cmp xor mov push xorl stos ret pop jg jecxz in pop and arpl lahf das ss stos and incl jb cmp sbb lcall add and in sarb icebp pop data16 sahf movsl test dec mov (bad) jnp (bad) ljmp pop cli ret mov or jb into or roll sbb pop ljmp stc lcall jae loope xchg dec xor lods xor inc cmp sti pushl xlat dec adc es pop hlt and mov loope or jnp inc lcall xchg fmuls or and dec and push popf xor sub (bad) (bad) incl leave (bad) repnz xchg (bad) mov je xor fnop jnp shr pop es bswap (bad) lcall in push sub and test stos out and (bad) (bad) std pusha add xchg mov xlat sbb dec popf jnp clc (bad) ljmp jl fwait insl pop (bad) xchg inc push jmp push push shlb ljmp aas mov ret repz rolb (bad) (bad) ljmp lods ss xchg ret aad mov test mov jg or imul faddl lea jno mov addr16 jl mov sbbb mov jne pop cld out cli orl mov push mov notb in sbb mov ljmp mov std lcall pop pop (bad) (bad) cmp pushl in loop mov shlb push call xchg xchg dec into pop mov fsubr jmp jbe pop xchg xor xchg and loope in lock pushl push xchg lcall mov add inc stos jle sbb cmp xor mov ss es ret rorb pop test (bad) (bad) decl mov pop mov cld pop xlat xlat ret rorb adc mov jl (bad) (bad) jg iret sbb es fmuls pop pcmpgtd cmpsb jp mov faddl (bad) call dec iret mov lret adc (bad) xchg (bad) enter (bad) (bad) incl mov and fidiv out lods jnp outsl rorb pop and inc call repz push inc sub ss clc (bad) incl or mov mov mov das aad hlt in xchg dec mov das in adc int3 mov adc inc es (bad) (bad) call std dec lret ljmp xor and dec dec rorb clc jb std (bad) pushl xor mov sbb sbb (bad) je dec mov icebp cmp xchg adc mov std incl xchg sbb daa lock dec call in clc (bad) (bad) call push daa pop test sub or xor test pop and icebp scas sbb dec pushf test mov fdivr addr16 sub jnp push pop xlat fimull xchg mov or jmp sbb sbb inc (bad) pushl xchg test test cmp (bad) (bad) decl test imul test or adc sub dec mov jmp adc (bad) xor mov ja pop jle (bad) (bad) (bad) aas pop jno xor (bad) mov loop orl dec and ret pop and je call je xchg mov add mov xchg andb mul (bad) (bad) (bad) lcall icebp dec jbe push mov dec mov arpl mov xor mov inc fmull dec (bad) jmp scas xor or addb inc ret inc mov outsb inc push scas fisttpl jecxz shrl in jns (bad) push mov mov decl (bad) push iret cmp fcmovne rcr insb sti (bad) (bad) (bad) jg movsl xchg or mov mov gs sbb jge nop xchg (bad) (bad) lcall out mov mov popf sbb push or mov mov inc mov clc stc insl inc mov lret mov scas xchg stc dec (bad) mov pop loopne test (bad) sub pushf pop jne sub fsubrs mov xor (bad) mov sbb imul adc test (bad) xor (bad) (bad) (bad) call dec cmp aad test pop lret stc mov mull sub in sar xor add inc lods test (bad) (bad) (bad) lcall xchg in mov jge xchg add mov int xchg fwait test adc in test idivl mov andl cld je push xchg (bad) (bad) ljmp je mov xchg subl es add jbe decl mov push jae and mov lds cltd inc push push (bad) lcall (bad) aaa mov test das call lret dec push jns shrb fmul (bad) (bad) mov sub sbb arpl insb pop lods push xchg inc dec pop fildl jp push into mov call cmpl mov pop cwtl popf pop or ljmp das adc (bad) into sbb fs cld cmpsb ds pusha pop cmc jae adc lock adc (bad) dec daa cmpsl mov test rcll jecxz cmp outsb (bad) (bad) ljmp mov jle sarb mov sbb sub (bad) (bad) (bad) jmp outsl jno xchg jle add sbb mov xor data16 xor fwait sub (bad) (bad) jmp and not lds fstps xchg dec mov test (bad) jns (bad) in cmp sbb sti aam adc push dec bound pushf stos inc sub push (bad) call pop mov aad mov loope sar pop pusha rclb fucom sbb ljmp (bad) out movsb xlat jo jecxz cli dec inc mov sbb push dec fimull lds ds mov or fdivr ja (bad) lcall push mov or cmp hlt push lods les aad sahf push loopne or dec mov mov xchg loope (bad) (bad) incl iret fidivl loope lret lcall mov mov and or inc mov and xchg cld (bad) ljmp shrb pop jmp mov mov or ljmp inc es pop or jno mov mov (bad) lcall or ret sub cltd call jno mov in dec add (bad) call xorb cmp inc and jl (bad) (bad) (bad) cmp push icebp rcl andb daa faddp outsl adc pop mov dec dec lret aas mov adcl (bad) (bad) jg or xchg xchg loop fnsave lods jbe imul roll (bad) lcall cs lcall sub pop mov or push xchg icebp jl in out pusha push (bad) (bad) ljmp cmp pushf jnp mov daa icebp sub nop pop sbb (bad) (bad) jp iret xchg in mov fist stos out ljmp (bad) ljmp cmc mov pop rcrl adc pop cmc int das (bad) (bad) (bad) incl inc outsb popa push mov mov movsb inc jnp sub bound push movsb adc cmp pop adc decb inc push inc push pop jno mov (bad) (bad) incl decb pusha or fbld xlat mov ret dec jle aaa je scas fnstsw (bad) pushl add jns icebp push mov sub bt (bad) (bad) incl or in jo nop (bad) je movsl adc je std pop and sahf or add inc xchg cld (bad) pushl mov and sbb xchg add mov movsb enter jmp pushl dec sub cmp fs add sbb jg fldl rorl (bad) call pushf mov mov push or (bad) cmpsb fisubr je lds (bad) call and and xor sub and mov adc ljmp in pop das stos into fidiv jnp sti les xchg in les cmp bound dec mov rolb and jne dec dec (bad) ljmp xchg mov shrl clc mov rol pushl push rorl cli cmp or icebp incl int3 cli pusha push add int3 dec xchg lods adc (bad) fildll outsl push cld fisttp or pop clc cmc aaa test add movsb sbb lret out and (bad) (bad) jg jmp xchg pop sahf test mov and loope outsl xchg lods loopne (bad) aam adc mov (bad) xchg mov mov push adc mov or and mov jb call jge add xchg lea cmp or dec cmp sbb sbb movsl cmpsb dec scas push imul sti mov int3 push ffree insb dec sahf (bad) (bad) jmp fimul push mov cs mov inc in mov dec (bad) (bad) (bad) (bad) (bad) out add xchg movsl lret add out rcrl (bad) aaa daa cmp sub xor (bad) (bad) jg xor test daa stc in push mov xor (bad) (bad) push ret ret mov dec pushf dec es iret loop test cmp aad cli cmp dec push ret (bad) aas leave or data16 pop fbstp loopne in push das scas inc add call stos ret jmp fdiv xchg stc jno outsl ret xlat jmp or xchg gs packsswb inc movsb lret inc sbb jnp rcrl inc aas outsl xor push js adc jg fidivrl fisttpl rcl pushf test pop mov je cmp dec shrl stos cli (bad) (bad) jg mov aas es or pop inc ss mov icebp std dec cmp fstpt pop (bad) (bad) ljmp cmp pop add sbb mov or and pop sar jle jg int3 xchg mov (bad) (bad) (bad) ds xor jle jp pop ret aad dec call fwait pop push inc or jae jg and xor pushf or out pop mov jl popf mov test mov xor mov mov sub rol push dec pop jmp (bad) pushl xchg addr16 aad cmc rclb and (bad) (bad) jg out inc cmp enter lret and dec fnstenv decl (bad) incl int xchg addr16 xchg out out mov bound lea lret sub pop decb mov mov out mov sub notb mov lcall xchg mov pushl in std enter pop jecxz sub lret mov mov lds test cmp (bad) push neg (bad) xor loope pop loopne adc les daa push pop jb and fsubs nop (bad) cmc xchg les fstpt add incl or icebp push mov test push push addb cmpsl daa push cs push jnp push xor loopne das mov (bad) lss jnp test (bad) ljmp ljmp mov (bad) adc lods mov xchg (bad) call stos mov jge mov xorl mov std lcall sbb lahf sub mov sub push stos mov stos inc inc fwait outsl lahf insb inc jne cli scas add incb mov incl iret in cwtl nop lret mov mov jmp adc inc lods les sbb pop daa mov (bad) (bad) jmp add imul in outsl mov cmp lods pushl std cmp neg aam repz into imul shrl sub cmp div out (bad) insb dec mov (bad) fcom jnp sbb push ficompl div out xchg jns add pop jecxz inc jae adc push xchg cld (bad) jmp pushf and bound fwait push fdiv mov cli adcb repnz pop (bad) jg push dec mov incl ficomp lock push out dec dec inc mov mov (bad) (bad) (bad) cld pop negl movsb xor std mov fistp inc mov or movsb dec (bad) jg jne xor sub repz mov (bad) (bad) (bad) call xor xchg into (bad) fdivrl pushf shlb cld push icebp stc fwait es xchg gs xchg ljmp scas ficoml xchg inc clc xchg sbb (bad) (bad) jmp mov insb fwait push (bad) repnz test xchg icebp add xlat std inc js andps leave mov adc cmp pop popf hlt incl movsl mov inc (bad) xchg mov push cmp mov push scas jge add cmp fdivr lds enter jne ret pop jns xor out (bad) pushf pop cmp or sbb int jb in call enter mov xchg mov sahf inc (bad) loop or mov and and ret push nop lods xor notb (bad) fdivs in subl adc loopne (bad) (bad) mov xor pop lock mull icebp mov rorb jb fs out rorl ret jns jp rcrb mov (bad) (bad) ljmp imul jl push sbb ss xchg fisubr mov xchg iret push cs repz dec (bad) jmp xchg mov outsb lea repnz pop ds adc sbb cwtl ljmp incl inc (bad) scas add fs dec sbb lret cli mov cmp mov hlt (bad) decl mov jo or cmc mov clc cwtl cmp imul leave adc xor in test stos (bad) mov bt cmp scas pop mov leave (bad) (bad) call push xchg and sbb into movzwl and mov (bad) aas sahf cli insb add mov pop and rcll pop xchg adc jns adc daa push adc movsl call jp scas fs cmp std sub (bad) mov mov jecxz aas xchg pop dec ja xor in inc xchg (bad) (bad) lcall dec mov sbb aad jbe pop cmp jg,pt xchg pop xor xor (bad) (bad) mov push ror sub sub mov push test (bad) call icebp mov mov and pop xor divl (bad) ljmp aas stos sub fwait into js sbb dec into jb sbb rolb pop cmp (bad) (bad) jmp xor fs or imul sub mov mov dec out or (bad) (bad) jmp xchg jge (bad) lock lods lea sub clc hlt (bad) (bad) (bad) (bad) sti jae into sbb sbb inc imul (bad) rolb pop addr16 cli (bad) (bad) jg jbe pop xor sub (bad) nop ljmp push cmp sti test (bad) (bad) push add lcall jmp out mov xchg xchg xchg (bad) decl enter cmp xchg mov popl and imul mov mov dec mov mov out xchg or adc incl mov data16 adc jecxz jg rorl mov adc enter fs ljmp cmpsl outsl cli pop lock mov mov sahf in add or mov jo nop mov push and inc repz xor (bad) (bad) out cli shlb jp jbe lock seto sub sbb sbb fwait xchg jmp (bad) (bad) jle addr16 xor lret jb fisubl (bad) ljmp (bad) sbb fdivl adc sub ja push in and frstor mov repnz fwait popf sbb (bad) in sub ja jle inc sbb mov or and jecxz add or mov ljmp adc mov fidivl xchg aam xchg ret xor (bad) call insl pop mov mov out lahf outsb loopne ret inc xlat cmpsl (bad) (bad) (bad) (bad) incb aam jge jno fldt inc pop mov mov mov mov add es cmpl dec pop scas add and btr sbb outsb vpsllq aaa out shlb push mov mov ficomp jno xor lcall dec xchg addr16 mov repz hlt lds (bad) mov fisubl jne xchg andl (bad) push push repz fldcw out stc cmp jae (bad) (bad) xor in add das sar sub (bad) in outsb adc inc cmp ljmp jg test testl dec cmp (bad) (bad) (bad) call xorl dec jmp cmc push sbb adc ret mov (bad) call sahf lret mov mov cmpsb pop int sub movsb leave xor nop js push pop enter adc pushf inc sbb jl cmc (bad) (bad) mov mov push cltd xchg cmc cltd fcoml sub push lea (bad) lcall add insl in lods add out pop out sub push sbb (bad) (bad) lcall sbb and mov dec pop cmp push lods inc out lock (bad) cmc cmp stos (bad) repz in mov adc xchg in dec xor xor jmp cli ds xchg push mov inc push sbb jmp hlt sbb scas (bad) nop jg xor (bad) std jl out clc (bad) mov sub sub adc je scas inc or or decl pop xor lahf pop and mov (bad) pop push es inc addr16 aad (bad) (bad) imulb inc mov arpl cld inc test icebp ljmp xorl xchg jb imul add (bad) jg jo push cwtl sub push xchg (bad) cli sub je push (bad) lret aas popf ret pmaxsw leave mov mov insl sar (bad) (bad) call sahf pop sti mov lahf sub dec dec jge sbb lret popf and (bad) out jg lcall lret dec cmpb negl leave sub incl cld call or gs jmp lahf sub aam fbstp shrb (bad) decl inc add dec lds cmc jmp add dec (bad) push (bad) (bad) push aas xchg (bad) (bad) aas cmp js enter shrb roll cmp mov cmp add xor rcll xchg je dec adc cmp (bad) ljmp adc lods inc jle jl mov scas cmp nop pcmpgtb (bad) mov cmp fbld lcall clc scas mov mov ror scas shrl cmc aaa std jecxz imul pop (bad) mov sti mov dec add push sub and sub shrb outsb stos or cs xchg (bad) pushl outsb call pushf fdivrs mov pop gs scas dec pushf flds jmp stos pushl test adc xchg add in mov inc repnz xchg xchg fwait lret sbb int3 ljmp sti pushf das mov cld pop cltd xchg mov cmpsl iret in (bad) (bad) (bad) ljmp push das pusha pushl sbb cmp mov into add test pop jg aaa iret xchg and cmp mov ja cmp hlt dec (bad) (bad) jg clc insl push repz das leave enter mov icebp pop movsb push or in inc cltd ret pop test xchg add idivl xchg xchg fcmovnu rcrb (bad) je (bad) lcall dec scas int3 jecxz,pn and push scas push (bad) lcall (bad) pusha jmp imul inc rcr dec inc xchg arpl (bad) xor pop fidivrl or aad (bad) (bad) (bad) fldenv dec sahf mov xchg mov mov push xchg insb push xchg ret out neg sub ficom or mov cli and add pushl sub aas mov xchg mov and sbb mov rcrl bound cmp mov xchg ljmp das add inc xchg nop sub or jmp (bad) in cmp mov fwait and (bad) inc mov fucomi mov cmpsb mov ss and and lretw rorl clc ljmp clc in xor sahf sbb dec xchg loopne add fidivr adc (bad) (bad) aas vpunpckhdq aam adc mov sub ret addr16 adc (bad) (bad) lcall xchg into xchg mov addr16 pop sbb scas dec std enter negb jge pusha es mov fsubrs hlt out push lods (bad) out jg out clc dec insl adc insb jp test fwait pop lahf (bad) pop imul mov std mov bound sub sub mov mov clc push lea out sbb cld inc out dec fstpt push xor add out pop ror or (bad) jmp and pusha icebp mul cmp xor dec outsl mov imul xchg je pop inc mov jns into inc es stos mov lcall jecxz loope rcll insl je rclb sub jmp icebp mov dec outsl and or pop ds (bad) scas out cmp aad xchg cmpl sbb xlat pop pop or xchg add jecxz testl xchg lahf xor push push aaa cmp and mov (bad) dec pop paddsb fwait or jb mov dec xchg mov fcoms pop xor cmp sti out in mov and mov pop fcom bnd sub mov dec pop clc or (bad) (bad) jmp fldenv roll notl sbb pop subb iret pop out dec js pop cmp mov hlt test out into jge pop (bad) call sbbl sbb push jb popa addl (bad) aad int out cld inc fmul mov cwtl add mov js or cli lcall imul mov mov lcall adc pop fstl mov lea ljmp adc push (bad) mov stc push insl sub mov sbb cmpsb lock adc lods jle loopne lcall push out jmp in shr or (bad) (bad) call popa (bad) pop inc cltd stos mov inc cmp xor insl add mov cmp mov sbb addr16 jae lods (bad) (bad) (bad) lcall cmp movsl adc pop mov subb dec cmp push mov push nop xor ret nop loop (bad) cmpsl outsl nop shrb test call push out fisubr incl test adc hlt pop pop cld xor lcall das (bad) sbb push dec xlat imul add outsl pop or pop xor jnp dec (bad) nop lret mov jbe pushf jns mov (bad) cmp (bad) mov adc mov mov mov orl mov xor sub lods mov or fucomp into shrl mov push cmp (bad) (bad) jg push add mov bound pop mov or push movsl fcomip inc fmulp pop mov jo sbb (bad) (bad) (bad) ljmp add cmp fstps repnz adc dec sub lea cltd push sub stos sbb (bad) out push pop xchg and ror ret mov aad pop mov stc lds (bad) (bad) lcall xchg or aad roll cltd adc loop outsl ljmp fwait sub mov addr16 push push ljmp push jecxz add aad sub decl mov in sbb mov test jge (bad) aam cli decl and (bad) in push fist mov inc std insb inc pop sbb cli xchg push shl mov (bad) jmp mov mov dec ja bound mov push cwtl enter loop roll cmp xchg imull pushf rolb mov jbe (bad) (bad) (bad) mov movsb rolb ficompl xor in xchg icebp (bad) inc mov sub outsl sbbl pushf xor (bad) (bad) lcall adc scas sub adc cmp mov ret loopne shr cmp (bad) (bad) call and mov jbe shll int3 mov jno push push (bad) sti hlt mov cld dec lea cmp adc scas outsb mov (bad) decl cli and lods push sbb inc adc mov ss mov cmp bound stos clc and cmp jns fbstp (bad) decl push adc and mov sbb (bad) leave cmp and out js cld ficom inc fdivrs xchg int gs fbstp push lahf add rcrl rorb push out mov push sub loope add mov mov or fcoms roll xchg data16 xor popa dec mov (bad) (bad) jg sub loopne dec dec stos cmp fnsave popf add aaa inc imul leave (bad) (bad) (bad) (bad) data16 add push ret sub call gs (bad) (bad) (bad) aas cmp mov mov lahf das cmp imul mov (bad) incl jno (bad) mov lock imul (bad) ljmp rolb mov mov (bad) es aam (bad) call pusha lock sub leave pusha add sbb stc xchg push sub ss fcmove movsl lea lcall (bad) (bad) fdivrs fwait add inc addr16 lcall or fdivrl cmpsl arpl rcl ret add mov mov sub call add cmp les dec jno mov (bad) (bad) call or rcl mov pop cmpsl xchg or (bad) call test sbb (bad) xadd pusha jae (bad) ljmp inc cmp push ret nop repz or xchg out fsubrs mov jecxz sbb jo or and (bad) mov imul subb mov (bad) (bad) (bad) inc pop pop inc mov js and popa jge bound (bad) sub movsl imul imul xchg pop stc mov je adc add (bad) (bad) pushl out cmpsb push jmp fcomps or pop es leave sub (bad) mov mov cmc rorl add xor push lcall icebp xor aam dec mov ret ret xchg xor (bad) (bad) ljmp sub enter mov mov repz (bad) je dec cmp icebp jecxz stos adc je int xchg xchg xor or inc std and fdivrs pop pop pop push (bad) (bad) (bad) lcall adc inc (bad) sbb push pop leave xchg or negb pop pop cli dec (bad) call sbb and ret lods icebp or mov inc ret (bad) (bad) (bad) push jns add repnz mov sub xchg es pop adc xchg pusha xchg mov outsl pusha mov call adc rorb stc movnti mov push (bad) jmp mov das add cmp (bad) aas movsl movb sub add adc bswap jmp cld lcall int adc or mov std fwait gs mov fiadd (bad) (bad) lcall aaa les inc adc mov jmp sbb pop (bad) decl xor and push dec lret dec pop inc outsl mov inc sbb (bad) pushl gs sbb cmp pop bound addb fidivr (bad) ljmp stc inc bound lds xchg or xchg jge std imulb daa test pop cld jmp mov add fadds test movsl cmp sbb or xor add cmc mov push roll inc and push repnz mov popf movsl insb dec pusha xor enter (bad) xor rcrl add aad out je arpl mov scas cmp inc int (bad) (bad) ljmp cmc neg cld and xchg xchg push clc lcall sbb ret (bad) (bad) (bad) mov sbb add xchg lds sbb dec mov daa lahf sahf push (bad) (bad) decl inc push xor adc dec xor aad push jl aam inc insb xor sbb (bad) mov in cmp push cmp sub xchg pop jo (bad) cmp sbb (bad) (bad) jg mov movsb outsb in jno je pop push pop cld dec pop mov dec xchg lcall adcb shr mov mov lret dec pop mov and jbe mov incl add jns gs (bad) aaa (bad) repnz xor sub sbbl aas ret lahf mov dec js jl sub cld int3 ja popa add enter in sahf mov in ljmp or arpl xor ffreep sbbb (bad) clc incl fisttpl int push clc pop mov push xchg ss sar dec push js (bad) rcrl (bad) (bad) inc jae sub ret jbe jnp imul mov repz ss ficom dec push pop add (bad) push xor inc mov mov mov or call push leave adc aaa (bad) lcall inc push leave sbb jno push pop into mov cltd jmp mov cmp (bad) fmuls mov inc mov and cwtl add pop xchg cmc aaa adc inc mov xchg cmp hlt cmp pop pushf les mov or push sbb push mov test repnz jp inc lock ret dec lahf jl xor sub sub (bad) mov je sarl leave ja imul (bad) jmp imul repnz ljmp jo xchg push push mov in jp push (bad) jg (bad) pop js jno fildll jg cltd or (bad) (bad) (bad) jmp ret into jo fdiv cmpsb and popa mov jmp jecxz enter sub mov sub out clc ljmp (bad) pop stc cmpsb movsb jle jo loopne mov sbb lret push loopne (bad) lcall aas or arpl adc inc sub push inc push cwtl and sub inc (bad) (bad) pushl mov shll mov arpl addr16 jecxz xlat mov (bad) (bad) (bad) pushl cmp or sub aad xlat addr16 or and add icebp (bad) jg (bad) hlt dec adc sub jle inc lods loopne in stc rclb dec (bad) je rol push mov lret adc call mov addl cld jmp cs push das mov mov (bad) (bad) call addr16 inc sub adc daa push xchg out mov xchg call push sub addb pushl push clc mov int cs sbb adc mov inc mov (bad) into outsb mov mov stos enter mov fisttp inc ljmp das mov test xchg pop je cli call movsbl xchg jg (bad) (bad) (bad) mov add dec xor jp inc gs lock xor cmp (bad) (bad) decl iret notb sub push push sbb enter adc (bad) (bad) lcall lds or loop push xchg adc fs mov sub pushf cmp pop in mov lock jp dec adc test enter pop push subps ljmp cli (bad) incl imul add mov pop pop pop scas in (bad) (bad) incl (bad) out inc dec sub and (bad) mov xchg xchg icebp push scas mov ljmp incl loope lret add xchg push aaa jb xchg (bad) (bad) fcomip nop dec fldenv iret mov adc mov flds (bad) ss pusha mov lcall xor (bad) repnz (bad) ljmp adcl dec xor xchg inc js fcmove leave sbb ret or (bad) (bad) (bad) std lcall pop add or scas (bad) ja test mov lds (bad) jmp ds xor les repnz out (bad) adc mov (bad) (bad) mov and push mov rolb and push mov (bad) fnop xlat test push pop out mov xchg cmp sbb ljmp mov (bad) pushl mov sarl popf dec xchg add sbbl lret mov push std ljmp ret lods cmc push xor dec daa push (bad) outsl push lea jo cmc push (bad) mov mov rorl and loope loope jmp call mov inc mov fisttpll inc ljmp cs test and inc std mov aad or inc cmp cwtl jp mov es inc js xor (bad) int mov sub push mov inc xor nop (bad) (bad) (bad) sbb mov aam fsubp mov jae jecxz iret xchg xchg mov je and incl (bad) out xchg stos rcrb sahf pop dec pop imul jns (bad) jmp xchg adc hlt subl mov leave xchg inc lock mov mov add xorl pop xchg repnz adc popa jb and ret mov (bad) call mov cs mov cmc arpl push and (bad) call dec call cmpsb mov bound or imulb xchg jmp xlat out or mov push (bad) in or fmull addr16 sahf in mov xchg clc (bad) lcall xor popa cmp jno and xchg push jge cld mov pop dec add sbb imul pop test ljmp inc repnz push sbb lcall and negb inc int3 jp xchg dec push insl (bad) lds stc jmp jl xchg sub dec pop adc push sbb ljmp pop sti cmc repnz jg mov add inc add ljmp jb les xchg and xlat ljmp test clc std imul mov roll push add popf lods (bad) call inc jae mov mov sbb xchg ds jge scas dec adc add (bad) decl cmp mov ret shl mov imul dec push xor rorb out mull (bad) (bad) (bad) (bad) (bad) sbb pop test cmc sbb sti imul adc hlt xchg cmpsb lcall push sbb xor cmp push subl xchg adc aad (bad) (bad) (bad) fbld xor arpl out out loope inc and sbb cmp sbb rcll loope dec or pop lea (bad) (bad) (bad) pushl loop pop xchg test cmp xorl pushf (bad) xchg mov cli ror pop adc into subl inc jae mov (bad) jg dec xchg mov push scas call mov pusha fnstsw (bad) (bad) (bad) decl jo test (bad) loopne and mov addb dec fdiv xchg jp stos mov sbb scas sub jmp outsl add insl clc cmp int3 mov push ret (bad) int3 mov push test ljmp lahf mov push xor dec mov (bad) (bad) pushl fwait mov fldcw cli fcompl les jecxz test push pop ffreep or (bad) decl cmp mov aam adc fwait adc popa ljmp nop sub jns jb incb or push mov (bad) xchg out inc xchg (bad) (bad) decl pop sbb incl movsb mov lea testb dec (bad) push ss sub pusha movsl call sub inc adc gs add (bad) (bad) (bad) std repz mov push jge pop push lds mov pusha lcall sbb pop mov pop fist mov das icebp xchg call cwtl (bad) jbe clc (bad) lcall fxch mov xchg mov fs jge dec cli mov sbb dec push push sbb mov xor jecxz aas (bad) stos (bad) (bad) call push sub (bad) aam cmpb movsl push push xchg cld (bad) (bad) ljmp sbbl mov test (bad) ds push add imul (bad) call lahf pop dec lret cld (bad) push cmp cs mov (bad) push je ja jg xchg adc faddp cld push ja mov fiaddl sub sarb or or mov jle cmp fisubrl mov cmc jae push xchg jecxz (bad) inc xor lds (bad) (bad) (bad) push push xchg inc push inc call adcb jl xchg imul icebp and push jmp fidivr push (bad) (bad) (bad) decl pop arpl add adc inc arpl sub scas arpl sar pop daa cmc ljmp cmp and sub decl or in gs adc imul stos test inc mov cmpsl pop mov jg push pop ret sub dec loop aaa mov jle (bad) aas adc rol ss dec mov sarb (bad) (bad) (bad) decl cltd mov ret and inc mov mov fcoms mov lcall or mov jbe dec cmpsb (bad) (bad) (bad) call fwait push jge dec adc mov sub popa cmp (bad) mov mov loopne mov (bad) mov shr sub sbb cld (bad) fbld in jbe stos popf add mov inc sub lcall and jns jnp repnz loopne stc inc add push test in push aaa into mov and cli (bad) jmp push mov fldl scas xor hlt (bad) call or jns out sarb pop fsubs adc xchg mov (bad) (bad) call int stc cmp dec push sbb and dec adc imul lods vmwrite (bad) (bad) lcall mov sub and mov inc push into sahf daa mov lcall (bad) incl mov fisttpl mov test (bad) decl inc ss add mov outsb jg popf xchg ljmp jmp repnz xchg push insl adc xchg ret sbb les add sbb xor cmp sub jnp sbb and insl inc das push data16 std dec cmpsb add mov test aas imul ljmp add jae push iret inc idivl xchg mov enter (bad) incl push mov dec stos push pop in stos fsts add lock xchg mov (bad) (bad) decl call icebp sbb dec jne jno adc pop jo je (bad) (bad) jmp sbb cld adc sti sub jp cmp add mov mov pop or sbb out (bad) movsl movsb fstps cld (bad) (bad) cli jne mov xchg repnz mov xchg fidiv aaa pop imul aaa rolb jns adc xchg pop jecxz (bad) (bad) incl movsb lds inc loopne (bad) scas movsl aam mov cmp dec jmp cmp sub (bad) (bad) (bad) cmp xchg imul sbb (bad) xor aam (bad) (bad) incl imul dec fdivs imul rcrl xchg (bad) (bad) (bad) mov nop pop xor out loop fs je push arpl popf (bad) (bad) (bad) jg mov out jmp xchg mov nop xchg mov sub jno dec popf leave (bad) (bad) pushl fiadd jmp jb bound in das xorl sbb push es add jle neg jb into mov or js sub (bad) mov mov lret mov xchg inc jle (bad) mov repz pop pop jmp icebp xchg fadd add mov and nop cmp mov adc jp xchg add test std add call loopne pop inc or cmpsl dec sub (bad) lcall std int nop inc fbld cs add push bndstx (bad) (bad) (bad) cmp fidivl fwait repz adc pop mov (bad) (bad) decl mov (bad) cmp loope sti inc sub xchg (bad) and push add lcall (bad) decl mov sub rclb lret push fcomps (bad) (bad) jmp pop out pop adc int3 sub cs mov xchg cltd je les pop rcll stc (bad) (bad) (bad) incb lret pop subb dec xor add cld or pop push sbb fsts cmp (bad) das cmp dec push orl pushf cmpsb push mov (bad) xchg leave sbb js cmp (bad) (bad) incl idivl mov mov dec sbb jmp mov aas pop fsubs jle cmp xchg fldcw pop and (bad) call sarb loopne mov pop jp int3 pop mov or lods (bad) xchg mov ret sub (bad) mov aad pop fnstsw sub mov jp imul (bad) (bad) call les cmp xor xor lahf jl pusha clc data16 mov adc lock (bad) incb mov insb test sbb jnp fwait xchg xor (bad) (bad) call into movsb pop test cmp sub imull ljmp addr16 outsl or pop adc out pop lods cltd cmp adc mov dec push gs loop jge mov lcall inc (bad) xchg clc inc mov test inc je in mov pushl mov push ds (bad) (bad) call push jb ds sahf sub js into pop cwtl mov pop fldt pop dec cld shrl scas loope jge fisub jecxz (bad) (bad) jg loopne mov lods fstpl adc and jno stos jmp enter in (bad) (bad) cmp mov int3 iret ret push mov xorl std arpl sub (bad) lcall lods mov movsl aaa imul cmpsb js xor ret aaa pop push xchg out xchg test xor mov mov cmpsb fimull pop loopne adc cmp in push frstor and (bad) mov fwait or fwait outsl mov lods movsl xlat mov incl cltd dec adc (bad) in jl mov aas jo std test sbb mov into adc (bad) (bad) (bad) mov in jecxz sbb es jl movsb mov gs (bad) mov scas mov mov lock aas lret (bad) ljmp add icebp daa push add movsb sub (bad) (bad) (bad) jmp mov cltd addl negl ss mov int jge jbe jmp pop mov inc sbb add (bad) repz and adc jmp enter mov subl (bad) imul dec inc add popa push idivl (bad) jmp mov xor iret andl and (bad) (bad) mov cmpsl xchg insb push push lock movsb xchg dec mov loope fcmovb cmp inc fnstcw incl aad push xor sub cmp fisttpl mov and sahf cmp dec push mov (bad) jmp or stos lret cmp xchg add add ds jp in (bad) pushl push adc dec xor xor adc incl adc dec call pop cmp or (bad) pushl sbb mov sbb clc lcall loope pop inc int3 clc int3 xchg xor xchg xchg iret cld push or call (bad) (bad) (bad) call sbb (bad) hlt jmp adc ret cli or cs push jecxz outsb bound lock (bad) jmp nop xchg sub idivb fwait sbb push out addr16 (bad) (bad) (bad) in cmpsl loope and push data16 sub xor lcall imul iret (bad) ljmp stc sbbb les and jbe add les addl and mov pop test call movsb nop xor scas pop rcll incb dec incl jae (bad) xchg jo stos push push pop loop pop ffree sub push pushf gs imul sub (bad) ljmp push scas addr16 (bad) pop insl shrl sub jecxz jp push (bad) (bad) (bad) jmp int3 cld push cmp adc lods imul xor movsb pop fcoms jp add sub push mov or adc sbb xor pop mov lds (bad) (bad) (bad) cmp mov cmp aas into or rorb hlt xchg (bad) xchg hlt mov outsl mov pop cld jb push cmpsl and inc sbb hlt pushf lret imul or dec lretw push test (bad) lahf mov (bad) pushl mov inc cmpsb ljmp mov popa add jae jb cmc push ljmp nop hlt js inc clc cmp and push inc jns cmc (bad) (bad) (bad) incl mov scas lea lret adc inc mov xchg aas and pushl js mov ds lods push add inc in (bad) (bad) ljmp inc aaa outsb mov fdiv xor jne sbb pop cltd mov (bad) xor jo je iret jo push xchg push cmpsb ss inc sub sub push idivl push sub mov call (bad) movsl mov (bad) (bad) ljmp cmp out test sub sub (bad) mov imul cmpsl adc scas fistl fistpl (bad) push imul int test jno pop or out add (bad) pushl sbb ds fild inc mov xor pushw pushl mov std xlat sbb scas mov sbb icebp (bad) ljmp rol fldt mov pop xchg push adc sbb das cmp je push inc cld mov fsubrl insb add ret inc push (bad) (bad) (bad) (bad) in scas lods mov into mov in adc push fdiv lea test pop call sub push scas ja iret arpl inc mov add push dec push stos stos ret cmp stos dec pop std jp mov mov testb gs call jmp jecxz test call mov xor inc inc push clc roll adc pop (bad) (bad) (bad) (bad) clc fisttp xchg xchg (bad) jmp sub data16 dec xchg cmc mov xchg or dec (bad) decl push xchg cmc fdivr adc mov sub test (bad) (bad) (bad) ljmp leave mov popl fdivp adc push fisttp nop mov jmp dec (bad) dec xor scas sub out fstpl jg adc outsb add (bad) call scas mov xchg pop pop sub jp andl test xchg xchg mov (bad) sahf scas xor repnz (bad) lcall inc inc dec lea lods mov xor in cmovge mov cwtl mov mov push mov (bad) mulb pushf out pop ja or mov test mov hlt xor adc (bad) (bad) decl shlb xor lea mov push jg inc bound adc fadd lock ds mov push adc mov or dec fcos (bad) (bad) mov (bad) jle jo jmp lret movsb adc mov orl repnz (bad) (bad) jmp or xchg xor ss mov push push fidivr inc lea push dec mov add pop push adc sbb orl (bad) (bad) sti mov int xor (bad) adc mov cmp mov inc ljmp mov and in lds scas mov mov (bad) mov cmpsb sti (bad) mov lock aas xchg xchg lds sti pushl repz xchg jmp mov in cli pop adc lcall inc inc mov cmpl js cli test and (bad) (bad) incl ret rcrl (bad) mov std dec xchg dec xchg (bad) pop jb pop sbb clc pop mov jb pop movsb xchg sbb outsl (bad) stos dec adc test (bad) ljmp out xor roll mov push movsb and dec mov andl add jmp and push xchg in rolb popa ja mov (bad) (bad) pushl mov lea adc pop cli adc nop mov out faddl in es xchg cld (bad) inc push and daa outsb arpl push popa sarl int3 leave (bad) (bad) aas std mov jecxz pusha jp mov or pushl (bad) xchg adc (bad) (bad) jmp mov or popf sti pushf ljmp loopne scas cli jg inc scas or and push mull dec (bad) (bad) (bad) (bad) cmp adc cs cmp push loopne lock lock jmp mov push cs pop stos push adc lds pushf and cmp cmc imul (bad) jmp mov adc mov int3 lret push dec icebp and fcomip not (bad) pop popf xchg jnp leave ds pop in jg sub pop enter enter mov lods repnz (bad) (bad) fild aas stos jmp add pop jecxz out cmp inc jo fstpt mov mov push and incl sti xor jbe subb ljmp sahf push outsl scas mov (bad) (bad) (bad) lcall cmp xor iret add (bad) cmp dec cwtl push test repnz cmpl jb mov mov dec add sub mov in in inc lock sbb adc push pop xchg insl out mov add loope fldl2e add sub mov cli int aaa sub cmpsb test push daa and cs daa in or jg out dec lret sub jge pop lcall dec lahf xlat dec cld incl sbb addr16 lds mov xor (bad) fbld sbb mov dec inc push pop iret aas sar (bad) (bad) fcomi mov jo imul dec lock into jnp cs jo dec push adcb add pop into mov (bad) (bad) pushl cmp iret mov lods jp in inc adcl mov (bad) (bad) pushl neg sub jecxz inc inc jg cltd push (bad) (bad) (bad) decl sbb xchg sub vorps cmp jbe lret and adc fistpl aad or das ret dec push dec scas outsl jbe into incl xor lock in xchg pop mov (bad) incl enter leave cmp xor xchg and into fistpl jg cwtl adc (bad) pop mov or (bad) (bad) jg cmpsl nop aam int movsb cmp mov adc and pop (bad) (bad) (bad) jmp dec xchg inc jo cmc jno push and std inc mov pop (bad) push xchg push inc pop mov jg sub dec (bad) mov jg mov adc adc inc jge lret cmc enter (bad) (bad) call test dec out push jecxz adc xor xor mov mov lcall dec inc mov (bad) ds cmp (bad) in into cmp (bad) (bad) dec stos cld xor dec xchg mov out loope cmp mov pop jmp xor mov movsl test or mov inc mov fcos call addr16 callw adc sub shlb and pop cmpsb call xchg (bad) loopne sbb push inc insl mov (bad) ljmp xchg adc repnz adc xchg push stc addr16 (bad) (bad) jmp int loope jnp xor mov fwait xor data16 or dec adc sub decl xor lock repz inc mov iret mov lods push leave stos hlt mov sbb pop in popa subl scas sub (bad) repz aas adc in stc and leave sarl repnz mov addb sub (bad) decl pop xlat repz inc outsb js and pop data16 sbb imul es imul inc lcall inc lret add int mov pop jnp insl xchg push int3 pushf sub dec shll (bad) incl cwtl mov mov fisubr mov pushf push sub hlt add clc xchg adc mov (bad) (bad) (bad) mov mov mov pop push push lock jmp mov fisttpl jo lock push insb or cmp lret stos lahf sub mov jle cld (bad) call test repz imul stos (bad) jns popa xchg (bad) jecxz push jo (bad) (bad) fucomip addr16 xor mov cld push bound std nop jp mov in hlt dec cmp inc call mov lcall (bad) call inc mov xchg cltd ss jnp ret pop fbstp add (bad) inc cmc cmpsb sahf inc test enter out adc fwait aad lea xor mov (bad) xchg cmp add dec pop push cmp push stos and xchg cmp cmc dec (bad) (bad) pushl pusha test pop xor push int ljmp addr16 lds lods imul sbb mov ss or pop (bad) jns (bad) je into loopne and lret mov mov lods push (bad) mov insb and imul in ljmp jecxz push sub (bad) call js les push cmpsl pop gs adc jbe jmp into pop icebp pushl data16 popf out rorb subb adc inc mov (bad) jmp jle adcl lcall ds xchg sbb cld (bad) dec fisubl (bad) jo stos push popf in adc (bad) es int3 adc mov ret jecxz mov subl rol rcr (bad) (bad) (bad) inc leave xchg (bad) mov in sbb fadds and mov popf cmpsb adc (bad) decl inc cmp lret imul fnstcw jno dec ret (bad) lcall fdivrl mov push add outsb dec push clc or mov xor push fldl scas xchg inc and mov sub gs xlat (bad) (bad) ljmp dec nop sarb lods xchg mov les rcrb cmpsb outsb jle je not sub dec push gs xchg mov (bad) (bad) (bad) cli push dec sub or lea out jecxz adc jo and iret pop pop int mov loopne dec (bad) (bad) decl push and sbb hlt js inc xchg call push (bad) (bad) (bad) call test aad push in push push je mov (bad) cmp adc scas sarl xor cmc pop mov push dec xor std pop pop pop sub movsb (bad) (bad) (bad) (bad) call adc idivb into xor xor cli pop or shrb sbb das mov sub sahf cli ja decl nop jnp mov inc (bad) (bad) data16 inc cmc xor push adc cmpsb jbe xchg adc cwtl mov xor (bad) (bad) mov and cld ss mov xchg cmp xchg and (bad) incl lds mov pop xor add ljmp pop aad bound mov mov lcall push cmp mov and int3 mov dec mov ret xchg (bad) ljmp incl inc sbb lahf xchg cli dec jno and scas lods jns push out clc (bad) jmp jo aas dec sbb push aam cwtl sbb stc jp xchg fidivr mov hlt (bad) lcall pop outsl aam out push adc and jle pop (bad) (bad) (bad) decl xchg (bad) and sub sub aad sub ss dec aaa pop outsb leave push lret (bad) (bad) ljmp out das imul leave and and in and sti add (bad) aas int out iret iret es push push push mov rclb ds aad mov and es pop hlt (bad) pushl adc xor test jne clc xor sbb ljmp and add int cli mov jmp and call es cmp pop mov sar mov daa movsl sub sub inc std mov cmp (bad) adcb ljmp (bad) mov pop adc insb jb jo and jbe (bad) or mov inc sub fmulp mov aas inc dec xorl pushf sbb lahf push cld into test fstpl or jecxz push ljmp jne cmpsl sarb mov shl orb cmp push fcmovne out mov inc mov outsl or pop repnz leave fs mov in (bad) xor push fimul dec pop sub out cmpsb push sub loopne sub (bad) nop nop (bad) (bad) (bad) pushl sbb mov mov xor jle sub rcll imul fnstenv call test loop xlat mov mov xchg sbb cltd pushf (bad) (bad) (bad) call inc sub pusha mov aaa out test mov ret call cmp mov inc mov enter mov cli (bad) fnsave and movsl (bad) pop out insl fisub jb and jae mov in lods mov notb daa fnstenv (bad) (bad) (bad) mov cmp out mov push sbb jp pop js xchg push fdivr hlt test scas (bad) (bad) decl or int xchg adc jo stos (bad) jbe mov imul rclb gs (bad) (bad) pushl bound fistpl push (bad) jb jb xor mov xchg xor in dec fstpl out sbb (bad) call or push stos pop cmpsb mov stos push xor (bad) (bad) call jmp inc and add xchg push push dec test nop (bad) adc aad xlat fildl inc addr16 movsb int3 int3 ljmp add mov cmp adc daa pop cmp jae mov (bad) (bad) (bad) call movsl sub inc cmp sahf push jp pop cmp (bad) jmp cmp push lds pop xchg lahf stc adc xchg (bad) (bad) call add ljmp xlat lcall pop sub dec cmc add jg (bad) decl inc pushf push shll ljmp push (bad) fs push (bad) jo,pt in gs dec jg lea mov test int adc sbb push lds in dec es cmp sub fucomi pop lock (bad) ljmp sahf lahf enter push (bad) mov pop pop into stc push cmp (bad) pushl jl mov or nop adc jmp ja mov clc or es cld dec jo shrl (bad) call ja inc inc divb (bad) (bad) mov jbe popf mov push (bad) jmp call cs jne pop xchg pop xor (bad) decl (bad) daa test pop cwtl xchg push xor nop (bad) stc movsb aaa inc call xchg out shll pop cmpsw jbe and fisttp (bad) (bad) mov or jge dec push into jbe das ljmp inc (bad) repz sub call (bad) (bad) fcmovbe xor push mov arpl mov mov out mov decl faddl sbb xchg pusha (bad) xor sbb hlt pushl movd (bad) cld pop (bad) sbb lret ret jle adc and bound ret adc ret loop fisttpl mov loope dec cmp mov fbld inc adc (bad) lods push lcall mov mov push adc stc cli (bad) jg into xchg in (bad) data16 int3 ljmp inc cld out call inc ficom pop mov add mov push (bad) int3 or hlt fs mov pushl movsl outsl xchg insl into and aam sbb adc xchg js mov xchg stos loopne loop (bad) pop cli xor adc and scas (bad) lock mov cltd adc push push sbb out cld (bad) call and xchg out mov xchg mov fs fwait mov pop xlat mov pop mov jne jecxz xchg loop xchg lock adc inc push rcrb (bad) out mov mov mov pop into or cmp and inc lcall mov std sbb aam rcl mov rcl hlt adc mov add js inc lds orl jmp hlt (bad) ljmp gs and (bad) sbb loopne pop or pop push cmc in xor jmp (bad) (bad) decl fcomi and adc aad clc rcr pop cmp pop sub enter jo aas sbb sub pusha jp cmp decl push dec fidivl pop (bad) mov int3 xchg cs mov xchg jge in (bad) cmp enter pop pop sbb add pop (bad) sti mov jg test cmp pop jle inc rcrb mov jle adc xor push or cli das clc call dec dec sub inc mov aas (bad) ljmp mov je mov pop mov std (bad) decl mov pop fstpl cwtl insl ret mov out gs mov (bad) adc add icebp ret xor push add jmp cmp mov jae mov jp out and adc cmp int jo inc in add sti (bad) pushl push mov fidivrl lcall ficompl test or (bad) (bad) jl sbb fisubr cs dec insb cs mov fdivrl mov jecxz xchg push cmpsl sti jmp mov push push push das ljmp inc (bad) out test lock sbb insb pop cli (bad) (bad) (bad) jp rorl ret out inc lods testb out or stos shrl incl or adc add cs stc and mov lods adc pop cmc mov cmp (bad) out sbb jns jbe,pn mov (bad) fldcw repnz xor out pop push ss xor or add incl in pop dec ret out jnp push mov fs dec inc mov xchg es adc lcall in (bad) fucom aam scas rorl test aam clc aas xchg lds ljmp xor mov jns rol cmp andl mov push push (bad) ljmp xor cmpl (bad) (bad) (bad) decl (bad) adc sbb adc dec add xor leave rclb imul push and xor cld incl mov sbbb add sbb jmp jle adc lock sar lcall cmp xor sub addr16 dec mov loop mov (bad) (bad) jg cmp bound pop and (bad) outsl in fs jle cmp (bad) push lret xor popa call xor xchg xchg mov xchg and sbb (bad) repz mov and xor (bad) mov popa stos test aad pop cld add subl call es sbb jnp pop mov mov jp hlt test (bad) jmp mov movsl or stos jnp std xor and jmp sahf bound pop into popf pop jp xchg int (bad) jmp pop fsubs rclb test and stos xor sarl insb call mov mov fwait out jo inc lcall inc sub es loop inc aaa in outsb mov sti (bad) (bad) call dec and dec psubsb mov aaa mov sar ds mov (bad) (bad) decl flds add mov fwait sbb fstpt pushf adc insl pop push test add (bad) jns movsb iret pop xlat pop inc push out sub pop lret (bad) (bad) ljmp int sub dec shl xchg lret pop jecxz cltd test lret lret xor jmp and xor jb inc xor jmp fidivr jp loopne xor bound mov (bad) psllq mov (bad) in cmp or adc sbb andl into es push (bad) mov lret repz movsl loopne dec pop imul add (bad) jmp xor or (bad) or push add pop fnstcw pop inc and or (bad) jg push xor or mov adc cmp (bad) call (bad) int xchg movsl dec xor mov arpl lds fidivr dec adc (bad) (bad) (bad) ljmp out xchg pop xor sub imul and mov jecxz xor (bad) decl outsb cmpsb cmp inc sysexit fwait loop cmp ljmp iret add (bad) (bad) (bad) decl repnz pop hlt dec sahf xor jo mov call test cld (bad) decl xor lret xor insb or in stos pusha cmp xchg cmc mov pop push cmp pop xchg push test fild inc and daa les lods pushf sub lcall jge sahf cmpsb sub in xor (bad) (bad) jg ret lahf in ror pop insb shlb sub repz add out xchg std imul dec lahf jb xchg sti ret mov mov (bad) (bad) (bad) fcmovnu (bad) or jl mov lret int test push int3 sub sbb or daa and insl stos sbb sub ficom mov std pop xor cmpb aad xchg cmpsl add (bad) (bad) jmp fdivl push ret xchg mov xchg xor and push push jp or fild cld xchg mov test (bad) clc das xor adc outsl stos std ret ljmp push movsl aad (bad) (bad) jns mov cmc inc jae cmp jo dec push iret mov pop insl jg push hlt jp xchg (bad) jg and movsl adc jno mov (bad) (bad) (bad) call cmp jg mov loop xchg fsubr mov pop dec mov mov pop cld out inc test addr16 push jg mov pop push pop or pop pop decl jns sub add les push (bad) mov (bad) call rcrl fdivrl stos lret aad lret cmpsl ja sbb std mov xor ljmp decb (bad) cld dec cmpsl je inc add adc (bad) (bad) (bad) jmp lods loop stos jne jp stos enter cs mov mov dec cltd iret jmp fdivr push scas dec pop das inc lret pop ret pushf aas dec std inc dec add test xor lcall push pop sub cld es (bad) (bad) in lds fs mov add xchg jnp jae arpl push dec or lock out (bad) adcl xor xchg sub decl loopne cwtl hlt sahf mov xchg jle dec jecxz es fwait (bad) nop jo call call sub aad arpl call aaa sbb or out and adc (bad) and (bad) (bad) cmp add fwait repz add mov fcomps incl cmpsb inc inc das pusha push fwait add push fs mov (bad) mov pushl pusha sbb or lds mov jns aaa into pop fwait sbb add incl xlat incl stos jle dec cmpsl in and daa mov lcall incl adc stos sar movb repz in and (bad) (bad) mov (bad) mov jns mov xor pop ret sti or loopne adc clc mov out aam flds push (bad) fcomip ljmp xor aad arpl push int cs cmpsb sub cmp call daa push stc mov es repz mov (bad) ljmp add inc xor bound cs insl and es xchg pop pop mov (bad) mov adc jle mov mov (bad) (bad) decl les pop push lds or outsb mov aam lea mov pop (bad) (bad) decl in shll push outsl inc cmp fdivrs (bad) push xor add (bad) pushl out jnp test sub aaa inc xchg sub push pop lret jns ds (bad) (bad) incl push mov lcall pop dec mov movsl cmc in push mov (bad) (bad) call adc mov mov addr16 jmp ljmp cmp xchg jbe cmp rolb cmp mov ret and pop es sub dec (bad) ljmp xchg mov scas pop and fisubl dec into nop cmp stc mov sub xor sub ja jns test mov cwtl sub jns lret push cs pop xchg push ds into sub (bad) lcall and and push cmp adc and inc leave hlt fwait jmp mov and decl lock mov push mov inc xchg inc mov inc (bad) (bad) (bad) incl inc push fs rclb add cltd jg fidivrl sub jg incl xchg jl sarl leave sbb pop pop icebp pop sub jle fwait (bad) (bad) (bad) jmp daa lock and inc xchg cmp jp adc enter mov out data16 push (bad) pop in test cmc add pop push xchg jb push dec lods fimull lcall fs cmp call sbb jno adc out cli xchg outsb xlat test sbb mov adc aad add mov std icebp inc scas push push mov jg sub (bad) (bad) (bad) jp das idiv (bad) or daa (bad) movsl mov add ret inc push popa xor mov sbb cwtl movsb stos out data16 out (bad) (bad) (bad) jmp fs arpl jmp ffree mov out push popf mov lahf (bad) repz (bad) jg movsl lods lock sbb imul cmp inc rdrand sub xchg pop (bad) lcall insl mov mov mov mov dec push iret add xor jl cld jbe cltd movsb push push xchg jns or enter (bad) (bad) mov gs mov add mov jmp (bad) mov sahf mov out fwait dec scas inc lods pushf lahf (bad) cmpsb ja mov xchg pop jg lods (bad) mov sub aam xchg shr lret mov (bad) (bad) (bad) inc push pushf lret xor xchg cltd mov xchg inc jno mov das test jg cmp icebp adc push call lcall push scas mov pop imul insl dec dec (bad) jmp mov iret cli xchg inc inc mov sbb jg mov or push cld (bad) call mov out lods mov mov lock lock xchg std (bad) (bad) mov (bad) data16 pop test dec jnp and mov icebp fmuls cmpsb (bad) ljmp out add and mov rolb xchg push jo pusha or test int mov jb les addr16 cli mov stc xor mov jno cmp aas xlat cwtl fs imul shlb (bad) (bad) lcall mov enter fmull loope xchg je pop enter mov repnz (bad) lcall cwtl pushf jns cmp and jecxz lods hlt adc xchg js push mov mov fcomip pop sahf (bad) or shrb xor xor sarb sbb addr16 ljmp sbb lea aam les lods or mov imul mov cmp addr16 add adc (bad) (bad) (bad) incl ret inc mov mov imul mov xchg push pop lcall jno lret lds rcl (bad) (bad) incl inc testb gs nop int3 jge dec aad (bad) sbb mov fcomip (bad) jmp mov je bound and add insl or test icebp movsl aas (bad) insl out inc push inc outsl jnp (bad) (bad) (bad) (bad) jnp (bad) cmc iret pop sahf pop cmp in and repz or xchg jge jns out adc adc stos (bad) call in mov outsl and add or lret mov cld mov adc dec shlb jp push xchg pop subb cld lret leave (bad) decl mov into jp dec dec rcll xchg rorb (bad) (bad) (bad) pushl enter repnz pop inc ja dec mov paddsw add inc lahf in decl jbe push test (bad) cs lret pop imul or xor (bad) repnz mov test call jl movsl mov lcall (bad) fist daa stc imull sbb lea jmp movb mov (bad) push cld lcall pop cmpl mov mov lock (bad) incl pop sub int3 sbb ficompl stc js xchg insb in jmp (bad) jg shrb jne pushf pop cli mov jno or mov ror clc dec xlat lds xorb (bad) pushl aaa jae xlat daa popa sub sbb jnp lock adc sub nop das cmpsb js sub (bad) fsubrs jo data16 adc sub (bad) (bad) decl clc mov popf sbb mov pop inc jecxz mov pop xor cmc sub push cli arpl xor test (bad) (bad) (bad) (bad) mov adc ret les inc or (bad) pop or jecxz mov or xor mov dec or (bad) (bad) incl sub in stos notb and push cwtl xchg mov pop xlat rcl hlt ljmp jp adc imul leave mov inc rcr add scas add (bad) jmp outsb lret cmc and std dec adc stc das inc pop dec jmp (bad) (bad) (bad) mov cmpsl pop add push mov or out nop daa sub dec (bad) in adc mov stc es out add adc loop int3 clc (bad) (bad) (bad) ffree adcl push (bad) (bad) dec pop rcrl fdivl mov clc (bad) jg int bnd rcl inc aas mov (bad) fmull (bad) (bad) out fdivrl rcl call loope movsl or add pop adc or mov cmp cmp nop add fidivrl addb sbb mov inc mov and xchg pop pop xchg in iret insl or add lods ret daa pop pop cmovs out jmp push inc pop mov lock inc mov (bad) (bad) aas push sbb add dec mov push (bad) int mov rcl orl push imul scas iret aas push lds sub shrb lods mov (bad) incl mov xor mov jp mov mov sub mov mov mov call in adc fdivrs cmp cltd fnop push repnz (bad) mov xor jo jle cwtl mov add push add fidivrl inc ljmp out sub movsb es (bad) (bad) (bad) (bad) jmp enter repz jae pop icebp pushf je push add lahf lcall jb add jmp into pop (bad) push lret jo shr data16 repnz adc mov mov fisub shr (bad) (bad) lcall cmp (bad) sub jae ror jns push sar test test (bad) sar mov add sbb (bad) pop shrb dec inc in and xchg (bad) call mov xor out sub insl xchg mov jns pop mov nop test adc pop lock (bad) incl fnstsw pop insl jg arpl fidivrl add stc fs fwait (bad) fbstp pop xchg xorl or cmp test ljmp daa xor sub inc dec (bad) cmp (bad) jg call test xor sub dec sub push (bad) mov mov mov mov addr16 (bad) (bad) cmp lahf jb mov sbb int3 pop jecxz je pushf xor gs (bad) (bad) ljmp cmpl rorb sub pop add dec push or test jge negb jae aas outsb push out xor (bad) (bad) incl xchg pop dec jg fwait sbb sub (bad) lcall cmp cli pop popf jmp call scas jb jp cmp (bad) rol xchg icebp and out add (bad) (bad) call fildl cmp clc lods iret ficoml xor cli aas jne mov xchg mov xchg (bad) ljmp lcall outsl pop add mov (bad) (bad) decl sbb mov xor cmp mov insb jg cltd scas fwait push sub aam int3 icebp sarb (bad) ljmp push sarb sbb mov lea mov (bad) (bad) push (bad) mov sub sub push sbbb idivl aaa push (bad) (bad) aas pop cmp pop dec mov dec loope pusha insl xor (bad) decl xor sub push ret insb movsl aas mov adc popa js (bad) inc stc (bad) (bad) (bad) ds inc out dec fwait (bad) sub xor inc pusha dec mov add cs (bad) jmp and sub xchg clc test add out paddb (bad) pushl xchg push jmp je mov push in sub mov jp add (bad) call clc xchg test rcl movsb lods fdivrl cmc addr16 loop (bad) (bad) call cli dec rclb popf pop sub in sub in mov test decl push and fwait jecxz push sub pop cmp lahf sub aaa in (bad) (bad) (bad) ds pop and push gs lret mov mov xor cmp (bad) decl scas push lock push or xchg fstpl jno dec adc jg pushl mov mov aad xor xor (bad) and or push mov add je stc adc sub lret sbb xchg cmp mov lcall aam push es mov add mov push incl test sub jge iret jg scas inc pop push pushl or push and (bad) imul (bad) out xor adc inc cmp xlat (bad) ljmp scas or dec lock dec sub popa repnz (bad) pop ds incb sub mov dec adc push adc dec add nop sbb jnp pop sub mov clc jge xchg xchg cltd sbb mov push fnsave mov jmp pop mov jmp leave sti rorl pop addl xchg aas add xchg mov inc lods jg pushl movsl (bad) andl push dec sbb mov rcr sahf (bad) (bad) (bad) lcall ror pop push sbb mov fbstp dec (bad) movsb add jmp outsl pop sub pop mov mov sbb (bad) (bad) (bad) jmp mov (bad) pusha rclb loope push jno,pt fimul ret jp into (bad) idiv das stc jmp mov mov inc jno inc mov push cli lcall pop sbb push por or (bad) (bad) ljmp sahf in push test mov inc xchg inc aam xchg mov or add pop and xor (bad) (bad) jmp das dec pusha sti test int3 imul and dec push cltd (bad) rorl bound inc clc pushl int3 movsb jge inc push jns (bad) (bad) (bad) (bad) jl std rolb push pop mov mov (bad) fnsave cs pop jge mov lret mov jmp stc pop imul or lods cli incl mov into popf adc rol rorb inc ret ljmp sub (bad) mov daa popa sti fiaddl fwait inc data16 xor jne push decl out xor adc scas jg xor pop (bad) (bad) (bad) ljmp in adc inc arpl ljmp xchg mov insb pop sub movaps sti repz ja mov mov push loopne jg mov adc cmp fstl xchg imul insb mov xor lcall mov inc jmp pop lock jnp xor rcr adc ljmp aad and xchg mov jge (bad) (bad) inc sbb ja xor jecxz fadds cmp int3 out imul add decl jmp in cwtl sub inc push cmp icebp xchg jg movsl ljmp mov sbb dec in dec pop push lcall jp mov mov adc lret mov cmpl fnstcw sbb gs add in pop sbb (bad) (bad) (bad) incl pop mov jns outsb mov push clc mov cld xlat and fnstcw push aas mov test ret enter imul push out rcr arpl cld (bad) lcall jne nop jae dec pop enter mov cmp sbb add inc lcall sub cs data16 lret pushf adc les loope (bad) inc sbb fisttpl mov sahf insl fdivrs (bad) decl insl std mov pushf mov iret push cmpsb in (bad) shrb mov pushf out pusha push fxch outsl nop push clc mov scas test inc pop imull pop bound mov xlat clc mov mov (bad) ljmp add push push dec sub out shrb je cli pop stos add push jmp das ffree lahf xchg je mov mov add lea mov cmc ja push lahf xor mov hlt push sbb int3 fisttpll push and mov outsl cmp jae mov xchg aam out (bad) (bad) (bad) incl call adc xor cwtl mov mov push add fstpl fcomip and adc das test sbb (bad) pushl pop cmpsl mov leave mov rclb lods ret adc (bad) jns cmp (bad) (bad) ljmp lcall es push movsl and (bad) xchg push jbe inc (bad) jg clc xchg jmp aad fsts mov (bad) jne xchg mov (bad) (bad) jmp mov jmp (bad) pop fwait sub inc addr16 mov cmp cmc lret test push xor inc cmp lea popf pop je xlat sbb adc xchg inc cmpb lahf inc sahf dec icebp adc clc (bad) (bad) decl jg inc cld fsub (bad) jl aam jmp adc cmc xor (bad) ljmp sub jge inc and cmpsl add popa aas push test xor dec outsl lret les call decl xchg mov mov xchg sbb pop cld (bad) mov daa mov sbb out push pushf iret cmpxchg push mov jne pushf xchg cwtl inc imul bound mov pop cmp test ljmp inc xchg mov push (bad) data16 enter (bad) (bad) (bad) (bad) stc sbb sub mov pop xor mov xchg clc adc sub (bad) (bad) mov lea sbb (bad) mov lods cmp add pop cmc loope out fmul adc push rorl add ja xlat (bad) cmp (bad) sar dec adc (bad) lock std cmp push mov (bad) (bad) jg push mov inc loop sub (bad) adc (bad) mov jnp sub leave (bad) (bad) call fsub xchg mov add stos xchg push cli jg aas sbb imul aad rcr dec and inc (bad) incl inc dec (bad) ss test outsl or add cs add xor jl call (bad) ljmp mov aaa stos adc cs popf push ja roll (bad) fbstp test inc ret inc cld add xchg data16 pop xchg lcall icebp mov or scas paddw add mov fisubr pop pop mov or mov push arpl and enter fisttpll insb (bad) xor mov inc out (bad) (bad) (bad) jmp jge push out fimul repz lods (bad) push fwait (bad) cwtl add (bad) decl pop dec (bad) jb lcall stc xchg (bad) sbb adc xlat decl cmc sti push sahf mov cmp not dec test (bad) (bad) (bad) js lods aaa pusha (bad) loope xchg sub xor pop gs pop movsl test adc dec loop lcall pushl or push pop add sub lcall xchg sarb (bad) decl inc jp xchg (bad) add lods pop cmpsb cmpsl or subb nop pop xchg push out sub in pop outsb jg dec (bad) (bad) ljmp jo jne or cmp and stc xchg and push pushf repnz psubd jge (bad) lcall mov mov mov mov shll das inc sbb movsl push loope or (bad) sub (bad) (bad) (bad) decl mov mov xchg (bad) push sub jb cmpsl mov sbb decl adc ret jne ss or stos mov cs (bad) (bad) (bad) mov out fistpl mov std nop jne xorl cld push nop js cmp add xchg mov loope outsl mov sbb sub fnstcw mov and xor sti cltd pushf in loope mov dec lahf cmp mov js or dec cmovnp jno into aaa mov int3 cmp icebp mov add incl daa stos (bad) xlat mov imul push mov outsb flds mov in dec push add mov fbstp sbb hlt ret repz (bad) lcall or jecxz pop mov jle mov cltd fidiv adc leave pushf xchg out iret daa and shr in (bad) mov cli push jecxz dec pop fcmovb add rol fcomip (bad) aas stc mov push jo cmp or outsb ja (bad) lcall (bad) repz sub hlt data16 mov adc dec xor push (bad) (bad) (bad) pushl mov pusha bound aad or or pop cmp pop lret das int inc das stc jmp in jecxz adc adc cli loopne (bad) (bad) fbld ret mov cli xchg inc (bad) and mov mov sub lcall mov enter cmp cwtl push ja nop repnz xchg push sbb jg (bad) (bad) jns xor (bad) cmp cltd sbb (bad) incl cld jmp movsb inc in int data16 movsb add repnz and leave or call (bad) fwait sub sbb dec aad cmove push xchg pop lcall dec pop inc icebp sub jb and dec clc inc lcall cmp mov stos loopne or and movsl mov fildll mov daa sub shl (bad) (bad) ljmp pop push push mov adc push jmp icebp mov (bad) (bad) mov stos pop rorl lret jge xchg add sahf mov lds pop xchg movsb call push xchg dec loop ds pop (bad) (bad) (bad) ljmp adc rorl (bad) jbe in das mov sbb (bad) movsl sub sarl incl stc pushl jmp mov or cli and jmp popf out nop cmpsl test mov mov bound mov fs divb scas std (bad) jg jns popa mov sarl mov adc (bad) push outsl push mov aam sub scas clc mov (bad) cmpsb mov aas cs jmp (bad) jg add push xchg sti mov sub push push pop es in (bad) lcall (bad) sahf pop push iret cli inc xchg sahf mov mov mov (bad) (bad) push (bad) dec pop mov data16 imul sub sti bound pop jmp test xchg loop int3 mov xchg (bad) pop repnz in push xor push mov out cwtl mov xor cmp lods mov (bad) push mov dec adc lret arpl popf jno (bad) ljmp and in xchg mov ss in (bad) scas cld lods fsubl mov sub sub jmp sub inc inc mov lea imul push mov dec inc adc scas outsb or mov sar mov sbb scas push insl dec subl mov incl xor and mov mov stc stc mov add push into pop ret test (bad) (bad) mov fs adc clc add push rolb sbb addl pushl (bad) outsl lret fwait or pop mov iret and notb jae mov nop out sbb xchg and test fnsave (bad) (bad) (bad) decl mov sbb mov sub mov (bad) fwait mov mov inc incl bnd mov mov mov (bad) fcoml (bad) (bad) (bad) call inc sub repz rep clc ss sub inc cmpsb test in cmp xchg and fcomip cmp repnz mov andb lahf sbb add sarb imul repnz mov in jne dec cmp (bad) (bad) lcall jns pop stos mov and mov (bad) xchg loope in mov mov mov cwtl sbb (bad) (bad) aas add loope ror inc sub adc add incl mov ds lock pop pusha mov (bad) (bad) jmp xchg push push xor pop dec fisttp mov jecxz (bad) pushl xor xchg bound rcll loop sub cmc and movsb adc push scas dec sub cmc (bad) (bad) dec mov xlat pushf adc cmpsb jno (bad) enter jb aas imul stc sub lcall cmpsl mov int3 (bad) jbe rclb pop xchg loop pop and inc pop inc fidivl decl cmc sbb lock mov outsl les (bad) (bad) ljmp aaa bound jp (bad) mov stos stc int3 (bad) or aas addr16 rcrl (bad) loopne bnd xchg lret in jno inc xor push (bad) (bad) call ret loope out fistp mov (bad) sti pop movsl ja pusha jns mov cmc (bad) inc jne adc inc movsb and popa mov mov subl pop pop lea sahf cmp lret xor faddp nop pop xor daa (bad) lcall push scas (bad) mov cltd push adc sub jne lds stos adc xor pop shl add push popa push fsubl jbe cmpsb xor inc cli ds dec mov add (bad) (bad) (bad) cmp js in add cltd cli or sbb add cli das (bad) or mov cmp adc push xchg xor adc (bad) (bad) jmp faddl xor lret cmc xchg pop jl mov (bad) cmp fwait lahf fs ja (bad) popf inc mov pop jg test inc jge jp jle,pn (bad) (bad) decl fwait (bad) jmp aas xlat push jg int3 popf scas ljmp ja push stos jle lea dec mov sahf add push cld fild pop (bad) jo je dec or (bad) mov mov popf push pushf xor (bad) decl or mov out inc imul mov xchg aad data16 inc int3 cltd in mov cmp fcomip add or and inc add call cli mov movsb (bad) (bad) (bad) (bad) call jmp mov xor out xor sub fidivl (bad) (bad) decl xor add and sahf xor test and out cwtl cmpsb imul (bad) sub mov xor xor ret lret stos lock push xchg mov and sar push int3 xchg add push aaa jmp pop test adc out sbb pop xor dec clc (bad) ljmp imul arpl mov jmp cmc mov cmp pop push cwtl sbb outsl pop cld (bad) (bad) call (bad) insb clc dec in aad loope mov orb lcall (bad) call insb out xchg ja jg mov adc enter push into cld (bad) (bad) (bad) jp mov test ret ret (bad) xor jle mov movsb test (bad) xchg icebp mov enter cmp (bad) (bad) incl cs or ds mov out adc push add ljmp pop xor mov cmp shrl (bad) fidivl mov js xor scas xlat xor jge sti aaa lock movsb es (bad) (bad) pushl mov push es jbe imul inc and push mov mov out into (bad) popf adc sub or fidivr mov (bad) call inc shll rorl cmc movsb or popf pushf call dec (bad) paddsb movsb xchg or mov jae pop fdivl lcall xchg lcall (bad) add outsb inc arpl (bad) dec or (bad) (bad) fcomip dec lahf popa aas dec test dec adc outsb lahf mov sbb xchg iret pop jg push dec pushl fwait repnz xor mov fwait mov cwtl jl pop call xchg loop lret fst (bad) (bad) call stc push mov lcall sbb repnz popf stc pushf lea (bad) aad xchg push mov orb (bad) jg (bad) mov addl jnp inc pop mov out mov sbb jne (bad) icebp addl stos mov (bad) (bad) inc insl out pop lock dec icebp or stc or in lods cmp je lods lods pusha (bad) adc (bad) sub (bad) sub pushf fdivrp sub cmp pop pop sbb insl lods imul pushl mov icebp lock (bad) mov rorl dec mov push mov jle pshufw xchg mov xlat dec cld dec cli sub loop mov push inc pop bound sar in lcall icebp lret pop mov dec adc (bad) sarb out adc aaa scas jbe lcall imul sbb fs push or repz cld call in xchg cmp cltd (bad) xor and ljmp mov sbb pop or lds push les sub test jmp dec (bad) addr16 ss mov pop xchg stos inc sub rcl xchg (bad) (bad) jmp cmp xchg (bad) dec ss mov sbb dec adcl fisttpl jmp jmp and pop push cmpsl jmp pop dec sbb sbb into scas call mov (bad) incl int dec shrb pop xchg xchg cmp rorb hlt mov jg pop jmp sub stos jp push sahf das into cmp pop xor (bad) (bad) (bad) incl (bad) and std fcmovbe push xor dec push push jp ja pop (bad) and pusha (bad) jg ret in outsb or jl cmp in es xchg add cld decl (bad) popa mov inc rol add mov aaa dec pop and test jmp int scas lds cmp xor (bad) (bad) (bad) jmp jmp adc ljmp or mov fstps (bad) ljmp push ret popa xchg jl dec test popa loop imul (bad) out test dec push inc pushf ds lds leave sbb js outsl jnp mov lret test addl lcall xchg lahf iret fwait dec xor jnp movsb call cmp (bad) mov mov xchg sub lods mov imul add (bad) (bad) incl cmp sub dec inc fs call push sar adc stc xor test (bad) call dec leave mov or pop adc test mov push call (bad) adc stc jmp js xor imul pop and decb jnp mov cmp sub lcall xlat aaa inc cltd jp sub jmp mov mov push in stc (bad) (bad) (bad) mov in pop pop lahf push out xor dec adc push and movsb adc (bad) ljmp aad lcall cmc fidivr dec ss or stc (bad) (bad) (bad) cmp xor sub lret pop or jnp or mov fwait xchg mov cli (bad) incl iret push cmc ja stc insl dec dec popf mov outsl xchg push xor push sub (bad) (bad) (bad) out fimul sbb pop cmp push cwtl addr16 loope je call cli pop sub and push xor mov jg shlb cmpsb and mov (bad) (bad) jmp repnz cwtl pusha or xchg cmp and insl fcompl dec jbe lcall lods sub (bad) rcrb enter lahf dec pop mov jno movsl pushf jl aaa add mov (bad) lock int mov sbb cmpsb test arpl lock out push js lahf inc dec mov fcomi (bad) (bad) call jecxz inc push push mov xor jmp mov jo out popf out sar (bad) ljmp push out xchg mov adc out jns xor decl jmp ss loope inc popf adc inc insl add outsb jbe (bad) (bad) jmp mov inc sbb lret cmpsl sbb hlt outsl aam sub cmp (bad) (bad) decl jne out stos xor dec popw hlt jne movsl jb dec test (bad) (bad) call xor pop push pop ss xor sahf or adc mov inc jo push push (bad) sbb dec pop adc test sbb (bad) fistpll pop mov pop xchg js xchg lock or mov adc mov call or mov arpl cmp cwtl je push test (bad) (bad) incl jmp fs addb xor aaa mov repz push mov xor (bad) ljmp pop cld inc sti cmp ja mov (bad) lea push mov mov fisubr sti inc rolb lock (bad) pushl push hlt cmpsl lock (bad) mov cmpsb imul pop enter cmovl or or sahf cmpsb sub stos jle inc enter std ja sbb sub es (bad) cmpb out (bad) (bad) lcall (bad) fildl loop push inc xchg lahf mov jp (bad) (bad) cmp rorl inc cmc and (bad) out loopne xor pop repz lcall imul js mov sahf pop sti pusha xchg stos lret mov jle fcmovnbe jb (bad) push test adc adc fadd ljmp jae push ficoml int3 addb xor lret bound dec cmp rcll cltd loope adc push pop sti les adc test out push sbb mov (bad) inc data16 cmp add cmp add sbb fdivrl fisubl add xchg fwait sbb xor insb jo mov mov pop lcall add sbb outsb aas sub imull das jns (bad) (bad) (bad) fdivs mov rcrl mov mov (bad) ljmp lea testb into mov pusha inc sub (bad) (bad) ljmp ret mov popf pop es clc push les inc pop out cmp mov lret sub and sub outsb cmp mov (bad) push movsb loope std clc pop orb cld and xor cmpneqps or xchg mov pusha xchg hlt outsl cli pop and repnz out clc pushf incl add pop mov mov aaa adc dec (bad) (bad) ljmp pop jnp mov jp adc mov out lret mov (bad) call inc aad push insb popa pop pop loopne test sub xorb hlt inc push mov inc in fisubl fs jp fisubl inc cmpsl (bad) clc jg lret xor sti jp jo jmp (bad) (bad) jmp push fld pop xor orb jno mov jmp rcrb ret das stc (bad) inc mov ror notb (bad) mov push cmp icebp inc mov sub xchg (bad) inc jne dec mov pop outsl xor cli sbb adc iret mov adc ljmp out cmpsl pusha enter or nop jo adc std (bad) cmp std repnz insb (bad) jg or cs out sbb pop mov stc mov pop lods out cltd mov sub adc mov out xor xor push cld inc test insl jle cmp lret stos add sahf lahf push push (bad) incl jnp aaa or stos push mov fwait pop stc movsb inc mov dec adc xor sarl das push push imul enter pushf xchg bound (bad) (bad) (bad) jmp inc and (bad) xchg cs scas scas jbe jb pop lods cmpsb pop fnsave aaa (bad) mov mov ljmp stc inc pop test jecxz in sahf out push cltd shll call aas and cmpsl (bad) notl pushf (bad) push inc loop jecxz inc mov int3 xchg nop pop inc pop inc adc cmp jno push mov movsl jle je mov mov mov cmp in (bad) (bad) mov or dec imul sbb ret scas push add jne mov and dec jmp jnp push xchg xchg js (bad) call push sub mov (bad) mov in shr mov insl lcall sub jmp aas stc jo mov dec sahf movsb push idiv call test loopne and (bad) (bad) (bad) (bad) out addr16 mov scas push fcmovb mov clc mov iret je cwtl enter lea jne bound inc in movsl push lahf xchg pop lahf mov and or xchg pop scas inc and push (bad) jg in ljmp ljmp lds jp push int3 in mov rcrl mov jl or ret hlt mov mov mov push inc dec mov hlt sbb cmc sbbl lcall add imul (bad) and hlt pop ljmp (bad) sbb (bad) sub cmp aas or movsl bound out (bad) jg cmp ret or mov jle mov ds int3 sar decl fiaddl insl xor outsb orl cs hlt jmp dec test inc int3 daa (bad) (bad) (bad) call xchg adc fmulp andb xchg cltd cmp jmp pop push or push insb iret mov mov jo ljmp arpl (bad) (bad) out (bad) and sbb cmp mov ret mov (bad) (bad) (bad) pushl adc pop cli adc call icebp mov cmpsb test ljmp push test ret adc push (bad) mov (bad) jg pushl inc mov or add shll mov incl pushl xchg xchg (bad) icebp shlb insb dec mov (bad) ljmp mov push pop (bad) xor inc inc (bad) out imulb mov jp (bad) out and sar call call les (bad) call inc fnstsw rcrl and (bad) mov arpl (bad) (bad) mov fldenv xchg arpl push xchg push cmp call aad jae cmpsl (bad) call xchg in add xchg inc insl lds pop jecxz (bad) (bad) call popf repnz adc in add (bad) (bad) jns hlt sbb call cmp fistp inc test (bad) (bad) (bad) jg (bad) aad aaa shl jg pop popf sub (bad) jns aas gs bound push xchg (bad) (bad) pushl ss push mov jo cmpsb out subl jmp (bad) decl inc std pop insl cwtl cld icebp push aam xchg jmp ret sbb out adc jecxz xor iret jp nop test inc clc mov sub in ficomp inc loopne adc inc scas (bad) decl lock mov fldenv repnz popf int push and xchg orl xor jns out popa jle (bad) xor jnp or jne ljmp in adc mov dec add mov pop cwtl ret xchg xchg (bad) jmp mov out les jge (bad) jb scas jmp ljmp add std (bad) daa stos pop aas popf pop rorb (bad) (bad) (bad) call inc nop out mov jecxz js int jl push test and jecxz jg mov (bad) cmp mov xor ss out sub xchg sbb (bad) ljmp mov (bad) js (bad) (bad) mov test movsb pusha xor lcall jecxz (bad) (bad) pushl pop sub xchg mov adc cli or mov push lret imull (bad) lret sub (bad) cmp pop xchg fmul das xchg (bad) stos or call pushf mov mov es cmp xchg sub dec push testl (bad) aas (bad) xchg push movsl mov sub enter (bad) fstps lea pop dec xor (bad) (bad) jg and lcall das xlat xchg inc int3 fisttp sbbl push mov cmpsb dec adc mov (bad) data16 cwtl and (bad) (bad) (bad) js mov jecxz cmp mov push clc aaa jle mov pushf test aam xor and js and (bad) (bad) call cmovg sahf ret sbb (bad) int out stos clc xor add pop inc inc pop ret lret ret aaa jb inc jp repnz cmp inc test mov inc adc (bad) (bad) (bad) jg stos fdivs mov (bad) xor jl icebp add xchg (bad) jne (bad) xor arpl cmpsb (bad) (bad) incl stos mov loopne scas test xchg mov xchg pop pop dec loop (bad) jmp iret push scas insb cmp lret sbb ffree and push (bad) (bad) (bad) (bad) std dec fldl2e repz xchg in mov mov stos pushf popf into fwait lcall lcall cld rorb cmc xchg xchg mov aaa in mov add aaa cmpsl pushf jl xor (bad) (bad) incl add lret cmp sub xchg xchg sub xchg push scas mov (bad) fdivs scas inc sub (bad) sbb adc xor pop hlt (bad) jmp (bad) aaa fcmove or in push stc pop movsl (bad) popa inc xor inc jno loopne or (bad) out lret push xor stos out cmp out sbb decl (bad) cld and es adc (bad) hlt test rcrl mov xchg (bad) jmp pushl mov sub adc push inc dec cmc cmp imul push (bad) (bad) (bad) decl repz xor gs jg or sub cwtl lret mov add rorb loopne ret cmp push pmaddwd (bad) (bad) fildll sbb jge int3 mov xchg enter mov fnstsw dec bnd and pop fwait mov cmp (bad) in test enter mov aas push dec add decl mov addr16 gs addr16 (bad) jg insb sub lahf mov lock clc pop xchg sahf and outsl out adc push (bad) pushl mov or mov adc pushl sub sti leave cmpsb in pop sahf outsl loop aad sub adc ffreep jno pushl mov cld (bad) call jmp cmp dec fisttpll scas jae test shrb (bad) call sub pop (bad) adc loopne movsb ss jnp add jnp mov push dec (bad) (bad) decl mov xor xor or adc push stos pop test push outsb test repnz call xor clc mov ret (bad) jae xorb ljmp push push mov jmp add xchg outsb call push cmp cmp aaa dec clc push lods loopne rorb add add shl data16 lds lock xchg outsl jle fs dec jmp test das xor pop mov add adc mov pushf add push cmp ljmp gs pop and mov jecxz hlt daa les pushl ja or or shlb in inc (bad) sarb pop in inc shrb pop add cs (bad) jp sub mov inc or shll or mov xchg test (bad) pop cld or inc inc push negb jnp jnp cld subb jp ss (bad) mov clc (bad) push js inc xchg push lcall lcall push js cmp lds or insb dec add les and mov dec or add (bad) cmp fistpll pop xor dec xchg adc fsubs loop cmpsb insl fcomip (bad) lcall std in nop push mov call push or jns xchg adc in imul jae scas xor push mov cmp clc (bad) jg dec mov fdivs les rclb push xchg (bad) (bad) call lcall push lcall jmp das push mov jmp aas or push mov icebp fbstp push (bad) (bad) (bad) (bad) jmp jae mov pop jmp cltd lret (bad) jno js into jl mov mov ss leave (bad) decl adc fdivrs pop mov xchg push sub (bad) (bad) mov in xchg push xor and (bad) (bad) decl dec lcall adc lea pop xor mov dec shl (bad) (bad) (bad) mov pop das mov mov fidivrl je sub (bad) lcall jge cmpsl mov adc pop fisub jp or addr16 jne cli mov (bad) sti icebp (bad) scas pop scas loop sub enter pop pop jp int3 xchg push js popf std (bad) js into inc mov fs outsb and popf imul enter sub dec aad jno push inc mov (bad) lcall scas mov push dec and jo adc pop mov sbb xor cld (bad) incl sub pusha fxch and (bad) cmp sbb movsl pop mov and (bad) (bad) aas enter add pop jg mov in pop cmp sti maxps into popa xor (bad) dec push fcmovnbe push mov adc add cld stc pop test mov pop inc jl ja jecxz (bad) repz push and (bad) (bad) call dec and repz jp mov (bad) adc popa xor sub sub mov adc scas push mov (bad) (bad) jg mov pusha lock pop pop fdivl js repnz hlt (bad) (bad) mov aad mov add call leave data16 dec test (bad) (bad) incl adc je outsb sub mov (bad) pop jno jle xlat (bad) push test bnd mov xchg xchg fistpl cwtl adc loop stos cmp std ljmp xor mov aam dec lods pushl inc cmp or pop or ret lcall lcall mov sbb fistl push sti xor (bad) incl xchg dec mov stc cltd fistl lock fadd stos lods (bad) add mov or mov ret push call fwait popf pop rolb outsl mov push mov mov (bad) (bad) clc (bad) test mov mov mov nop daa out loopne lds push sahf (bad) sti (bad) mov dec cmp jns pop mov aad fmull cmpsb fwait gs (bad) lcall nop xchg clc roll nop arpl xor sbb cltd and inc out xchg pop adc call dec sbb jge jmp jl jl out inc inc fcompl arpl add xlat dec mov mov nop test icebp test ljmp xchg enterw sar (bad) jmp pop mov pop mov insl (bad) xchg xor dec mov jecxz fdivl mull jp std jns into inc sub cmp out in stc clc mov imul adc (bad) (bad) jmp mov jnp jno xchg sbb pop call ljmp ljmp adc das jo push and xlat aad pop std fimul jmp (bad) (bad) in inc and push out scas sub pop int3 cli adc pop jo out pop adc jg jp add pushl (bad) (bad) pop xor mov mov mov (bad) jg arpl insl cli mov in push and inc mov add clc incl jle aad cmpb mov jno (bad) (bad) pushl adc rorb insb and mov mov cli xchg movsb xor mov jg clc test gs pop repz imul pop lret xor lahf and jo imul ss stc push adc sub jecxz aad mov jbe sti dec add cmp lea out lea (bad) (bad) mov jns ds inc or lea lods add mov or xchg mov sahf (bad) mov aam je icebp mov cmp cltd (bad) lock mov roll xchg rcll aas xchg fsubrs xor js mov adc mov mov bswap cwtl fidivr pop repnz jmp aad pushf jae jecxz mov lods cmpsb lret aad out (bad) repz xchg fwait (bad) (bad) (bad) decl enter ja sti incb xor mov and pushl lea inc xchg (bad) loop clc jno stc pop clc out pop (bad) mov pop pop xchg mov int lea aaa cmp (bad) mov add jmp lcall test xor xor js in jg call xchg int3 or stos loopne ret lock hlt (bad) (bad) call xor (bad) (bad) cld ss test xchg sub pushl fisub in ljmp int cli jne push xor xor mov stos mov mov (bad) (bad) (bad) decl jmp pop imul shrb je mov pop pop xchg cmp movsb (bad) call sbb data16 add inc jl push shrb adc xor (bad) call jbe movsb dec or pop mov push flds xchg js aam je sub fisttpl in lds sbb lock pop push mov ds push pusha cmp sahf (bad) jo mov lret ret clc jecxz cmpsb xchg xchg incb push out aam int (bad) incl stc (bad) repnz add lea jg (bad) push mov or (bad) push or jl popf std mov aas xor inc dec lret hlt hlt or lock decl and xchg in mov pop inc cwtl add or pop or sub sbb mov xlat fisub shrl dec pop in add leave lods mov ljmp fidivr in test push jle jge rorb mov jle (bad) call test das add cmp in cwtl adc or ljmp outsb insl mov punpckhwd dec outsb leave xor (bad) (bad) ljmp pusha mov xchg out ljmp add mov pop fmuls jecxz push out in cld sar dec (bad) lods loope cwtl push mov (bad) sub popa mov jg mov (bad) xor stos push outsl lret mov sbb daa pop ret mov pop jbe das out jmp and inc xor movsl das push outsl dec mov sbb add mov rorb (bad) (bad) cli shl outsb test push lahf in jns xchg insl inc sub jno sbb xchg xchg dec cmp sbb push fldcw outsl ljmp imul sbb lret sbb fucomp jmp and or inc push pop mov stc mov mov ljmp (bad) incl mov (bad) call fiadd cmp (bad) (bad) decl sarl icebp stc xchg es fnsave jp pop jmp cltd movsb jo outsl mov dec (bad) (bad) ficompl dec repz ror xchg sbb push test aaa inc (bad) (bad) (bad) pushl push ljmp aad add fs or push and push mov lret (bad) testb xchg test pushf in jle or pop hlt (bad) call test cwtl sahf push stos mov pop iret inc or (bad) (bad) lcall lahf popa lahf fs hlt fisttpl cmp test mov mov fbld pop (bad) (bad) (bad) jmp sbb and mov lock xchg test (bad) (bad) pushl inc jmp jl jbe lds dec jge sub cmpsw dec add nop (bad) (bad) jmp xor jae psubusb xor push adc (bad) (bad) lcall ja mov rorl iret sub sti (bad) enter xchg loope push add sbb xchg sub (bad) call cwtl push sbb adc dec jo mov inc gs shll sbb mov and mov sarb and into andb pop mov mov fwait (bad) (bad) incl pop mov add cmp adc insb add or clc lds (bad) ljmp jbe cmp ds xchg jecxz,pt (bad) decl aaa mov push lods xor dec jb pop cmp xchg jnp (bad) (bad) decl cmpsb xchg sub (bad) std jge fs fidiv mov imul push mov jmp leave iret test fstl jbe hlt xor add daa jo inc ja (bad) (bad) (bad) mov jno pop sbb clc jne fst aas test lahf out cmpsl xchg jmp cmp (bad) xor add movsb std out repnz in gs (bad) (bad) ljmp sub aas pop scas in out cmp or inc mov call mov (bad) jg mov or pop xchg out push jmp sub (bad) sbb mov push push push xchg imulb insb ret or movsb shrb fsubl cld inc in (bad) cmp imul inc mov add pop fabs push sub lret xor iret lock cmc pushf jmp ret pop xchg int3 (bad) lcall pop xor adcl mov adc mov imul aad imul push (bad) or clc pushl subb incb pop xchg add xchg inc cli lock sbb scas (bad) dec popf adc push ljmp popa push mov std mov lret (bad) (bad) fildll sbb cltd fwait stos out lods lock push xor xor call (bad) movsb test std incl fisubl scas sub scas jmp xchg xchg ret (bad) inc jle mov movsb jle jne std dec fdivl in jmp (bad) clc push mov jg test lods add push xchg or jmp (bad) (bad) (bad) inc (bad) mov xchg adc add pushf (bad) xlat xchg xchg inc mov scas mov inc test xchg (bad) jp arpl xlat fidivl aaa mov cltd rorb cmpl xor jl add (bad) (bad) push pop test or xor xchg xchg add pop or loopne mov (bad) call sub (bad) xor jle jb shll jns fistpll hlt out fs dec pop ss cmp and add loop push (bad) mov je mov lcall fcompl jecxz xor (bad) push sbb aaa sbb sbb lret add and adc movsl jecxz in (bad) and mov ljmp mov xchg mov mov and mov call leave pop lret outsl jo mov cli xchg mov ret sub inc adcb (bad) (bad) (bad) mov aaa dec jo pop dec dec fcom jae mov fxch mov xor (bad) (bad) decl sarl les (bad) ret jp adc outsb pop sbb (bad) (bad) call int3 push adc pop pop mov fdivl and inc lods cmpsb mov roll sbb cmp dec lahf outsb xor jl jecxz clc (bad) in push je xchg cmpl rcrb push std std ja jmp loop add les sbb inc mov sbb call or xchg cmpsl mov enter outsb sbb out mov lea and mov jecxz aam das stc (bad) call add stos scas pop lds or and add call push aad int3 push loopne ret sbb into arpl fs (bad) incl movsb pop and dec popa bound mov and stos cmc add dec fcos pop test adc scas pop pushf das imul fidivrl jmp mov dec push dec xlat arpl aad addr16 dec hlt (bad) mov inc adcb mov sar pusha push lahf or or pop test outsb mov lcall pop stos mov mov popf xchg xor imul push and fnstsw and lods icebp js add notl (bad) (bad) ljmp push test roll cmp popa cmp imul bnd aad (bad) mov inc negb xchg (bad) jb mov dec pop insl inc loope bound adc jp or ret aam push (bad) mov (bad) (bad) ljmp popf inc getsec lret iret adc sbb mov imulb imul fs push inc std xchg pop lcall std mov jg (bad) mov xchg jg push add into mov pop je adc mov inc test pop (bad) outsl loopne mov jg adc inc int3 cmpsb pop or stos jg dec ret xchg (bad) (bad) jmp ret inc dec movsb ljmp fisttpl stos in nop inc and or push jle scas dec jne fcoms dec ja cmp test jne addr16 imul (bad) inc cmpsl pop add fbld std or daa ljmp decl add pop in dec push lcall sub incl cld xor xchg inc lret data16 pushf inc lahf mov jo sub fiaddl ljmp leave pop jecxz aad loopne outsl movsb (bad) adcb and add (bad) jmp sahf out aam mov xchg (bad) aas xlat push push aam inc (bad) (bad) fisttp sub bound icebp mov pop stos ss inc cmp jmp sarl dec int3 arpl push mov (bad) call mov xchg fwait ja push lods push (bad) insl mov (bad) rolb jb decl clc popf push inc sub xor aad sub (bad) jg or jbe lods push mov inc or dec xchg (bad) mov or xchg cmpsb mov jno cmp jp insb push dec xchg mov xor mov push inc xchg mov test or push push ret jne inc dec lcall (bad) mov push dec mov dec push sbb dec lods cmpsb outsl (bad) mov xor stos inc pop inc and jmp pop push fcmovb jne imul aas or stos jl clc (bad) fistp or dec cltd cmp stc insb xor (bad) mov mov mov scas insl aam xor cmpsl outsl (bad) fbld cld fistpll mov push and push daa jge sub and pop mov call adc sbb mov fidivl (bad) (bad) (bad) dec dec fs mov lret sub into xchg push push mov lods pop test out cmp and (bad) dec stos push mov push push fldt (bad) decl adc sbb cmp imul xor pop hlt popa jmp add icebp inc lods cwtl lret hlt das xor bnd sub dec (bad) jg sub test pop push jnp cmp xor (bad) (bad) call dec jne insl inc stos aam fidivr aad fstl je fsubs sbb fldt leave outsb add jbe or incl xchg push test and movsl mov (bad) incl mov xchg in jbe cmp jae inc mov push jmp nop adc push (bad) stc or adc test lods pusha popf pusha cmp mov push xor loop cmpsl dec pop mov dec pop and movsb sbb insb add push aam dec sub sub and daa pop (bad) (bad) lcall xchg sti and addr16 (bad) cmc arpl push sub (bad) inc xchg cmp (bad) (bad) (bad) mov gs and push addr16 fimull sahf fcompl fwait in (bad) lcall lret xchg cs jmp test xor xchg xchg cmp icebp fldenv das nop jge dec mov lcall scas add inc or lea or (bad) (bad) (bad) ljmp or sub mov sub xchg xor xor mov aad xchg or (bad) das call jns hlt push dec dec push or xchg mov decl adc ja dec mov xor daa (bad) (bad) (bad) (bad) mov enter jo cmp jecxz nop lcall cld fisubrl mov stc add xchg aad push inc insl sbb mov push mov jbe (bad) (bad) pushl sti outsb sbb push or xchg (bad) sub test mov jge int3 loop aaa jp sbb cs outsb sub and jo cmp (bad) lcall jmp jecxz ret popa gs jae cmp nop mov jne sub and mov jg hlt xchg jmp jne or ljmp lds mov rcl push (bad) dec mov scas cmc and out jmp fsubs lea daa cmp shrb xlat insl cld pop mov clc imul test cmp pushl mov ss and dec xchg pop ja into sti in push adc (bad) (bad) (bad) pop inc adcl mov or fdivl lcall lret jg fisubl (bad) addr16 insl dec fistpll add jnp lds jbe cmpsb jecxz sar decl orb cmp adc adc inc pop aam sbb in jne sbb test fmuls sbb xchg dec js (bad) (bad) jmp pop sub push fidivl rcrb cmpsb cmp mov sbb cmpsl dec pop dec cmp xchg pushl mov (bad) dec cmp xor leave dec cmp adc and (bad) (bad) incl lret cmp fmulp shrl adc mov lods (bad) fs pop push insb into fsubrl and dec and std and mov mov (bad) in xchg mov out shll add out enter xor (bad) (bad) (bad) inc out mov add jno xchg jne mov mov mov (bad) jns int3 mull adc push (bad) (bad) decl jmp ret (bad) jle dec sub cwtl xor mov (bad) xchg adc adc mov add xor bound push pop push mov xchg adc and popa mov push add sbb mov aad (bad) dec js add mov ds push inc cmp xor cmp (bad) (bad) aas jp pop and mov loopne stos shrb imul pushf enter xor rolb or xchg jae mov fisttpll outsb icebp mov repz lock inc daa int3 add ss ds inc mov dec lcall leave (bad) movsb cld xor add cwtl dec add in stos inc jl rcrl or ja cmp negl mov call adc cwtl dec pop mov inc pop inc not (bad) (bad) (bad) jg mov mov xor xlat sbb inc rcll jmp pusha leave cvtpi2ps (bad) ljmp xchg add insl scas pop repnz repnz lcall xor ret into fidiv mov pushl nop je movsb out and lock push mov les and xlat aam push and jecxz jg xchg icebp addl ficoml xor mov dec aam dec adc pop scas gs rclb (bad) (bad) (bad) jg xchg orb call aaa ret push mov jle loop cltd push leave (bad) (bad) pushl xchg sbbl (bad) mov repz cli imul lret (bad) (bad) (bad) aas jmp je push xor pop push outsb jg jmp out add or mov (bad) (bad) call (bad) mov je jl inc sbb mov sbb mov xor gs (bad) (bad) (bad) mov fsubl mov por mulb xchg push pop lods push mov call pop movsb loop cmp call dec hlt inc dec or (bad) (bad) (bad) (bad) cmp dec leave mov fwait hlt (bad) imulb push std mov daa mov pop aam repnz decl stos cmp dec in (bad) hlt jo int mov (bad) call jb das scas out subl push leave (bad) hlt in and fcmovbe push mov sbb (bad) cmp pop rcl sahf fmul xchg and mov (bad) (bad) decl rclb rep cmp cmp fidivl or sub ljmp pop cmp cltd inc dec xchg push xchg xchg shrb fs (bad) pushl mov mov pop cwtl adc pop (bad) (bad) (bad) (bad) (bad) fdivs shlb lods push inc jbe jnp inc popa cli cmp pop inc dec cld (bad) (bad) cmp adc pop add xor cltd and adc pop push push xchg pop ja pop mov fistpl or push repnz (bad) incl cmpsb jns mov lock and notl ss movsl shrl add (bad) mov or rcrb gs jo inc (bad) lcall add xor dec lea inc fstp int xchg cltd and and test repz es or call out dec lods cmpsl push cmp or xor popa dec aam mov push pop aas xor dec mov xor pop adcl repz pop adc push imul (bad) (bad) lcall xchg inc xorl ja adc in cmpsl sub imul xchg clc (bad) (bad) aas fs dec inc (bad) jp ljmp icebp loope inc cmp push incl scas iret (bad) inc xchg cmpsl adcl loope push hlt lods cltd inc es add (bad) decl jmp mov inc xor jecxz add xchg ljmp jmp lock shrl cmp fsubrp (bad) (bad) (bad) incl popf push lret insb xchg fwait popa jle stos mov jo dec repz cmp cld bound call dec fstl push stc lods pushf cmp xor mov in (bad) (bad) lcall mov into loopne dec (bad) or push dec cwtl xchg movsb jge popf cltd xchg mov cwtl (bad) add incl mov das test and sub mov sar out add push enter and jge sar mov (bad) (bad) (bad) decl ret jp or adc fldt or push jg add lret decl inc cmp xchg leave sahf popf and inc movsl pushw pop in sub inc or outsb stos add xchg iret cmpsb adc adc xor xchg and sub decl mov mov push or mov (bad) (bad) (bad) lcall adc mov add mov stc xchg sbb test decl lcall fisubl cmp inc pop mov or (bad) (bad) (bad) jmp nop loop movsl insl mov pushf push mov mov pop cmpl sbb xor (bad) jmp dec mov mov fnstsw and cld add (bad) (bad) ljmp jbe and pop arpl pop fcomps cmp rorl int pop adc in hlt lea add xchg je and sti in (bad) sar (bad) lcall mov cmp push call lret fidiv hlt mov stos cmp fs clc (bad) fldl pop pop icebp dec in pusha std and ljmp or xor jo mov adc lea jle dec mov pop cmp dec and adc js sbb lcall jno (bad) mov stos cmp incl test int outsb xor loopne push push adc xchg push push imul sub ja mov xor frstor and dec gs icebp enter incl xor or sbb in mov mov sub cmc cmp test sub adc cmc mov insl or lock jmp (bad) (bad) pushl fwait ret stos push jbe faddl push (bad) jb pop mov outsl outsb cmpsb sbb call test cmp clc ljmp (bad) call test imul mov (bad) (bad) call fs das sarb mov and push ja cld jb cli shrl mov imul sub pusha pop int (bad) (bad) (bad) jmp nop lahf or and movsb pop xor pop adc pop xlat or (bad) (bad) push bound adc ja incl out and mov or add push xchg add (bad) (bad) call sub lock mov sbb xchg sbb aas push (bad) (bad) (bad) dec push jg mov dec data16 mov or (bad) xor ljmp push (bad) (bad) decl jb ret jp lahf (bad) (bad) or sub test (bad) (bad) call mov loopne (bad) orl mov outsl adc xchg fisubl and decl jl icebp push fiadd out out push mov dec aad xchg sub mov addr16 fmuls xorl call aam push out jb out adc mov pop ss (bad) (bad) ljmp xchg flds out ret nop in pop mov fldt (bad) scas pop cmp pop add cmp xchg or push mov or int (bad) call (bad) xor cld fbstp inc repnz inc imul das cmp xchg mov (bad) (bad) lcall rorl jne push dec adc outsl leave cmp jg adc sub jb mov pop mov push inc and adc insl or sub insl cmpsl cld test ljmp hlt rep in cltd cmc mov pop sarl repnz incl mov test adc shll mov push std (bad) (bad) jmp int3 jecxz xchg movsl repz pushf imul push push test mov movsb shr sbb ljmp mov outsl pop cmp sub cmpsl (bad) (bad) (bad) lcall sub lret cmp mov lahf insb xor xadd (bad) dec inc inc pushl ljmp out aaa or test subl sub (bad) (bad) decl jo jle es rclb pop adc jb dec pop in cmp xchg sub adc pop hlt sub popa xor pop cvtps2pd xchg rclb (bad) (bad) jmp jge js mov jg lock xor xchg and mov mov cld (bad) (bad) (bad) fildll fmull lret mov pop jmp jl shr je xchg xchg (bad) rorl pushf (bad) (bad) call test xor in and fs (bad) stc aam lds or (bad) outsb or (bad) in sti ljmp jae mov jmp mov (bad) (bad) decl ret add xchg lods mov dec sub scas and (bad) (bad) (bad) lcall dec mov sar cmp (bad) mov (bad) fld bound jecxz xchg push adc ja (bad) (bad) decl rcll stos test sub cld mov add dec jmp push adc jbe mov int add cmp in movsl mov xor ljmp jg test aam insb cwtl scas in mov mov (bad) (bad) jmp lret mov push rolb pop imul cmp movsb fimull sub dec dec clc sub inc mov bound rorb lcall add out jbe (bad) dec mov mov mov push mov lock inc clc mov ficomp and add jge fucomip daa notl inc push in popa outsl jb inc sbb cli incb in fsubl inc sbb daa (bad) loop xor inc (bad) cwtl int xor rcll lock jg sahf add inc nop cli aaa jg or dec std (bad) (bad) call push xchg mov xchg fsubp inc and iret adc sahf xor lods lcall cmp xor adc rclb (bad) (bad) lcall sbb xchg sbb dec rolb and cmp or jecxz sar fcoml add mov mov add cld (bad) incl and mov push (bad) sahf mov stos jo (bad) pushl mov or aaa cwtl jbe aam push push cmp sub into fiadd sarl (bad) or push inc or mov mov (bad) (bad) (bad) (bad) jnp jge cli pusha push cmp push mov adc dec push jge ljmp stc inc jmp jne push adc cmp push cltd dec mov fnstenv (bad) (bad) ljmp or push data16 popf push and xor int3 incl mov push pop mov push aaa dec add cld mov movsb repnz std pushl mov daa (bad) test bound decl inc setae arpl cmp add mov mov (bad) call cmpsb mov pop test mov push in lds ret push out (bad) (bad) ljmp clc repnz loope and pop std idivl addr16 aad cmpsb test andb stos (bad) int incb cmp lods cmp ret hlt xor inc cmpsl mov inc jmp inc sbb cmp in (bad) (bad) lcall mov es or repnz cs loope cmp lcall test loopne jg xlat and test in movsb jnp outsb adcb push fldl or out bound pop pop cli cli xchg pushf push loopne imul fsub mov mov ret mov fldcw out lcall (bad) fidivrl xchg repz nop popf add lods (bad) mov mov cwtl mov and into xor cmpb xor mov outsl adc adc daa lret fnsave and movsl (bad) (bad) decl ds add call adc sbb or cmp xchg stc (bad) lods imul ss ds cmpsb xor in je loopne aad in lea inc mov aas movsb xor xchg cmp repnz pushl lcall xor movlps push (bad) (bad) (bad) call mov xchg jb das xchg pusha xchg sbb push pop xor inc fcompl (bad) ljmp ljmp mov pop push loopne arpl cmp ljmp mov in push lret shrl cli jl (bad) (bad) (bad) jg in rcr aad into add int push scas adc xchg aaa repz mov sub ljmp in loope adc (bad) pop fimull sbb (bad) (bad) lcall push das inc xchg andl cmpsl stc stos js out and sbb adc jns jns imul (bad) std jle inc add push lods xor (bad) (bad) (bad) fisttp pop pop popa insl cmp stc mov fst iret pop idivl stos add nop clc das shlb fisubl cltd mov scas and aam les push ret sti dec faddl xchg mov (bad) lcall jb addb xor xlat xor into xchg sub xor (bad) (bad) ljmp lds adc loope (bad) mov add inc sbb mov call std cmpb call mov in xchg mov pop adc lcall sub push jle mov fcompl jbe push enter (bad) decl mov and cli xor lcall or pop xor fistpll and mov (bad) (bad) incl lret push dec test add xchg xor shlb and xor (bad) incl cld mov adc loop jmp lods out add aas fstpl ljmp loop lock pop lret mov xor jmp lret out mov xor jne hlt mov loope fstps (bad) xchg popa sbb std mov push adc adc icebp stc cmp xchg (bad) (bad) (bad) fnop push (bad) lea lock pop push call (bad) dec imul test inc test sbb mov lahf mov fisubl scas lahf xor push adc rol rcrl loope mov scas jnp mov (bad) fmuls cmp inc pusha mov dec sbbl xor mov adc je test (bad) (bad) jmp (bad) jecxz fnsave test mov pop ret push outsb fwait xchg xchg xchg (bad) (bad) ljmp icebp xlat pop inc pop fstps pop pop mov pop inc cmp xchg pop out pop sar (bad) jmp jmp std ret rcrl fcmovnu outsl mov inc pop faddl or lods popa mov cmpsl xor (bad) jmp adc jmp mulb cs jmp gs (bad) incl mov (bad) repz dec jmp sbb and push jmp (bad) push scas ja wrmsr clc (bad) (bad) call sub cmpsl mov mov push rclb (bad) (bad) (bad) jmp loopne lds bound cli ffree and into inc jns dec sbb and cld decl enter cmc fildl xchg or or (bad) incl adc xchg cmp dec pop push sub pushf out js push xchg xchg xlat sub ljmp ds sbbl mov idiv (bad) (bad) jmp push xchg mov dec dec mov add out adcl jns fisttp dec jmp xchg or sub pushf imul inc rorb cmpsl xchg negb mov mov mov jg std sub add repz xchg xlat movsb mov in jge stos hlt in adc (bad) decl frstor pusha loope dec dec inc lcall sbb scas test sbb sbb xchg or jnp cmpsl adc imul (bad) push xchg (bad) (bad) call enter leave in mov or mull lcall jmp pop xchg dec mov push dec (bad) pop push out scas (bad) xor and adc pop cmp icebp pushl pop and test fistl push adc push jb das ficomp into push test (bad) incl sbb dec insb (bad) fwait push push loop lret rorb rcrb mov mov pop or sahf pop and (bad) pushl pop or insb mov ljmp (bad) call cwtl pusha push rcl mov out xchg roll scas out cmpsl insb and (bad) mov decl jg pop out ret push push mov mov (bad) call cld push pop mov mov or jg or dec sub pop lret lea sbb clc (bad) (bad) dec mov and test xor add xor mov push pop lret jmp stc sbb pop lea cli push nop lcall lcall inc cmpsl mov xor jmp sahf icebp cmc movsb iret sbb (bad) add (bad) call mov insb xchg aam lods jl std jg and sub (bad) (bad) decl ficom es es inc data16 je dec loopne xchg out adc (bad) fiaddl int mov xchg sub pop mov (bad) (bad) (bad) call ds dec dec pop sahf pusha ds dec mov (bad) pop or inc in add (bad) mov fucomi xchg call dec jmp rcl push inc mov and adc mov jg fs mov aaa pop inc pop mov or jno cmp orl lret pop fnstenv cmp (bad) (bad) (bad) ljmp (bad) decb cmp adc aas addr16 shrl xor sub push out cltd dec sbb xchg push push mov cmp inc and (bad) (bad) dec lahf sub test iret jg or jno xorl xchg pushf mov test (bad) mov inc mov inc loopnew pop lock ljmp pushf push ds push (bad) pop (bad) lcall and mov and cld and lods adc loopne inc ljmp dec jae sbbb das rcl (bad) jg inc repz setns mov xor ja push hlt sub xchg and xchg test xchg push fwait movsb push inc mov sub movsl and addr16 (bad) sbb cmc mov fsubs xlat cmp dec int or jge xchg movsb out dec int mov inc xlat add pushf mov (bad) jb in dec lret call lcall out push pop dec stos dec and push mov pop and hlt (bad) (bad) dec ljmp sub movsl mov out test dec scas push inc out out add sub xor lcall cmp mov sbb cmp loop cmpsb (bad) mov sub adc sub les icebp test (bad) sahf movsb js movsb outsl xlat movsb decl (bad) jb fidivr add mov sbb jle or cli push out jnp sarl (bad) (bad) decl xor fidivrl jl scas iret ja push inc aad shll fistpll (bad) lcall (bad) pop pop rorb mulb mov sub pop cmp add shrb mov mov shrl sahf xchg (bad) mov into xor lcall push cmpsb sub (bad) (bad) (bad) aas dec movsb xor lods add out cmc pop loopne mov or je inc xlat in (bad) pushl fcmovnb jne nop pop cli leave sub inc pushf and subb (bad) mov sbb lahf scas rorl pop push cwtl lds (bad) jg lods inc lret arpl in std sub fnsave out dec push cmpsb push negb nopl sti shrl adc test xchg mov xchg (bad) adc (bad) (bad) (bad) decl jno sbb adc add fisubl push out and mov inc mov mov and push mov (bad) (bad) jg xchg adc mov ljmp xchg mov popa add enter (bad) (bad) jmp ficoml dec cmp xor sbb mov popa mov or sti adc into orb push bound call ljmp (bad) idiv mov enter aam lahf sub mov or push xor add sar (bad) call enter les idivl pop jp movsb dec ficoml loope sti dec repnz jmp iret mov mulb (bad) fcompl mov lcall cmpsl mov sbb xchg pop stos cmp sub loopne stos pop (bad) xchg arpl call jmp sbb mov mov sbb add add (bad) (bad) (bad) (bad) call std sarb shr jmp sbb adc int3 xchg adc pop (bad) loopne push xchg or jmp imul adc and jns (bad) (bad) jg mov jns mov push bound push push or mov decl (bad) iret test xchg aas and mov jne scas sar decl fisttpll sbbl adc inc dec (bad) (bad) lcall (bad) cltd inc out loopne cmpsb mov push std out or sub fs lods jnp (bad) (bad) lcall add sarl (bad) xor jecxz test add imul popa imul push (bad) (bad) lcall sti sbb push push mov imul repnz sbb cli repnz (bad) lcall push and cli xchg add pop cltd ss jmp inc xor push js (bad) incl add push (bad) sbb lods cmp cmp fdiv sbbb (bad) ficomp cmp lds lret push repnz push inc addb fcos dec test movzbl pop push movsb add (bad) (bad) (bad) pushl adc in jmp adcl dec scas push fstpl xlat jp add (bad) push mov cli mov ss jb and jg gs mov add mov test (bad) (bad) (bad) (bad) in notl jmp (bad) mov hlt xor out mov hlt daa scas mov adc or cs jne adc (bad) xor mov orl lcall (bad) dec (bad) rcrl icebp sub and cli rcll mov (bad) mov (bad) in xor xor mov mov loope (bad) jmp dec fisttp inc push addb ss pusha xchg (bad) mov loopne clc jle test les xor test idiv pop mov insl cmc mov scas xchg or push add (bad) (bad) mov data16 mov xor jnp xchg pop lods fidivl mov (bad) mov jb hlt push push pop aam sbb xor pop test adc leave mov add sbb ss mull aas adc (bad) dec inc mov push out outsl ds mov xchg lcall pop fidivr sub sahf or shr in leave mov pop push es lea jmp in (bad) pushl jle into xchg test sbb es mov sbb into mov lock pop mov xor sbb xchg clc or add dec fadds fwait jo out stc into jo add jb mov lock xor push mov out outsb (bad) mov call xchg mov mov jl mov sbb mov hlt pushf xchg xor push stos ljmp dec cmp (bad) mov push fsubl cmp jbe les decl sub inc cli mov cwtl les and push test jns repnz (bad) lcall insl jns aaa dec outsb scas xlat xor int3 and add mov shll iret (bad) call and xchg inc mov sbb cmpl (bad) ljmp clc rol pop xchg cld cmp hlt add imul cmpsl (bad) push lcall (bad) in cmc (bad) icebp dec icebp mov insb sti and cmpb (bad) xor mov fstl jp push dec or push jb and lcall jo or fwait mov or (bad) (bad) (bad) jg test gs daa lea call jmp mov cmp in mov xor xchg jae (bad) (bad) incl stos add inc mov lds cmp mov cld inc leave fs and (bad) ljmp sbb movsb aad sub andb (bad) (bad) decl je dec jg movsb adc mov adc push (bad) xchg dec lods jp arpl call cld mov fldl rorl pop pop movsl ds popf (bad) (bad) (bad) jmp nop pushf or notb mov add in mov mov inc dec cmp incl fmull (bad) ljmp fs xchg stos test mov (bad) ljmp fwait std subl fsubs mov dec jge pop popa repnz mov adc and jg mov push ljmp xchg push sub (bad) (bad) jmp mov adc mov push cmp xor sbb pusha pop sbb jae call sub ret movsb cmp stos mov push adc jmp rcrb icebp and adc or cli dec neg (bad) cli andb mov imul scas clc pop in add xchg mov mov shr sbb data16 adc outsl fiadd (bad) (bad) (bad) (bad) jmp cld mov sbb mov mov test xchg and inc xlat xchg insb ljmp and jns fist or loopne add (bad) call jecxz push pop fstpt cltd sbb scas xor jl dec mov pop cmc mov dec cwtl push sub dec je in cmp (bad) (bad) (bad) mov mov shl xchg es pop outsb lods dec (bad) mov icebp dec mov mov sar and cmp jbe push mov mov idivb imul cmp xor (bad) mov or inc movsb and (bad) (bad) decl lahf jle mov fdivrl jp (bad) js (bad) jne inc xor push scas mov mov (bad) ljmp mov dec inc fnstcw inc pop repz xchg pop mov (bad) sti cmp mov jns or adc lcall pop jmp test fildll dec arpl add loopne (bad) (bad) call inc mov xor mov xor inc dec dec push test push std not cltd test popa mov popa pop jnp or (bad) mov xlat xor cld or cmc xchg jns sbb dec (bad) decl loopne inc mov loop into lock (bad) sub mov clc (bad) jmp dec push cmpsl cs in xor pushf adc aaa sbb cmpsb (bad) (bad) (bad) mov insb in mov iret xor aad mov (bad) ljmp mov pop fimull mov cs jbe xchg jle xchg imul inc ljmp xchg pushf jo jmp adc xor loop (bad) test leave mov mov jnp lret jmp mov pop nop sbb pop les mov (bad) (bad) incl jmp rolb inc (bad) xchg cmc add aaa pop push and ret rorl (bad) repnz (bad) (bad) (bad) jg imul dec ljmp inc loopne or enter lock decl scas divl daa aas adc ret in jle cmp js jmp sbb inc icebp xor out add adc sub (bad) (bad) incl push mov mov call mov jae arpl jle clc scas int xchg cld dec or mov (bad) (bad) (bad) decl pusha jp mov mov cltd hlt outsb into inc mov sbb in mov add into bound xchg out addr16 jmp or scas mov pop or (bad) (bad) (bad) call data16 mov call fsubrs ds aad adc out ljmp stc lcall mov xlat mov subl (bad) (bad) (bad) in cmp jecxz mov clc pop loope out cld aad popf daa inc les daa pusha scas jecxz add popf push ficomp test enter stos cmp mov fimull cld fs cmp rcll js sub (bad) (bad) xor (bad) decl idivb push xor icebp add ret ficoml mov ja and inc ja decb iret sub cmpsl push mov add xchg inc mov cmpsl std push xor (bad) lcall (bad) sbb data16 aas js push add psubw scas daa hlt (bad) jg mov es mov rdmsr repnz (bad) (bad) incl (bad) xor xchg add and fisubrl mov mov rcrb je mov decl cmp enter jb out push sub xor dec jg mov imul (bad) pushl pop cmpsb (bad) dec xchg cmp push and (bad) rcrb xchg icebp sub (bad) cmp pop jg in push dec sti icebp cmc pop push repnz (bad) jg ss adc or push scas xor dec (bad) int (bad) jg adc mov mov shrb mov dec in mov xchg jl and stc mov in add adc andl or xchg xchg and ja or outsl jg push jno sub les jge decl incl mov add outsb lods pop in fldenv incl xchg pop (bad) (bad) (bad) (bad) pushl movsw bound pop push add lds push leave fsubr jae lcall ljmp push neg jmp sbb imul lahf push (bad) (bad) (bad) call cwtl dec iret sahf fdiv or pop enter call lea mov in pop in aad pop cmpsb pop cld rcrb cmp loop jp (bad) lcall clc aam add sub mov mov sbb mov test or xchg cld stos (bad) lcall (bad) xor xor adc mov or sbb gs adc ret ja fld es lcall or xchg xor aad rorl sbb sarl sub mov pop jge fisttpl mov movsl mov rcrl mov lcall xor and jns (bad) sbb mov divb fwait dec mov dec movsl mov icebp cltd inc and incl out mov lret jl pusha jae ljmp jg jo sbb xchg xor jno mov ljmp outsl push jmp aam cmpsb mov shrl xchg xchg subl test mov jne jno leave cmp inc shrl (bad) test xchg pop mov bound xchg jl dec cmpsb lds sbb jb cs dec dec adc jg cmovnp dec into mov (bad) mov adc jle mov ljmp mov adc mov aam repz mov repz lods cmp pushl jno fildl dec pop cmpsl adc mov (bad) (bad) (bad) call mov mov rorb pop sbb stos or inc in xchg jmp jbe mov cwtl imul xchg popa sbb daa test (bad) (bad) ljmp out jo lret fldt cmpsb dec arpl inc sbb inc fiaddl aam inc andl test adc sahf mov pop cmpsl sub mov inc inc gs add arpl pop mov cmp xor jno push fucomi mov (bad) add xor sub hlt sub test std ljmp add adc pop jne push push stc sbb cli int shrb or inc call (bad) and rcrb sub mov inc rolb stos and and sub adc nop push cltd cmp (bad) (bad) (bad) jg loop and xchg xor dec movsb xor push aad jne mov cwtl push xor (bad) decl add pop (bad) xor mov movsb inc data16 ja xor (bad) jmp insb or sub xor mov xchg addr16 (bad) or lds sbb cmp lock push stos add pushf mov and cld (bad) (bad) call lret adc jmp pop popf pushf fsubrl mov jno cltd or sub add ja (bad) mov xchg mov (bad) (bad) pushl popa loope sub aam inc in ljmp stos icebp (bad) (bad) lcall imul outsl mov les and pop movsl jp (bad) (bad) lcall fldt enter rorb and pushl jge out jno xor cmp adc ds (bad) jmp decb xchg mov fisubrl insb (bad) sub jmp mov out jp sti cs add inc sbb pop and jmp movsb das stos mov mov push rclb aam sub cmpsb jecxz out cli push xchg cmp mov push cld push popa mov (bad) fcomip mov adc pop add add dec stc cmp add lcall or roll xor inc cli (bad) incl gs iret push out mov (bad) fdivs (bad) (bad) mov clc lcall jne cmp dec xor inc mov aaa cmp mov (bad) aas jo test pop fwait add ljmp xchg out hlt into xchg int3 test inc xorl lret ss (bad) (bad) jmp es jo dec xchg jecxz pop movsl push xlat test imul ret mov (bad) icebp jae pop (bad) out insl sub bound ss jbe pop sub mov dec dec lea adc sbb movsl sysexit jecxz jmp (bad) (bad) (bad) call lret clc aas adc add fisttp inc stos push pop lods aad cmp (bad) js aas fstps js out orl xchg fwait (bad) clc (bad) (bad) lcall icebp popa sahf enter int3 (bad) cmpsb fwait adc int (bad) ljmp hlt out pop (bad) pushl loop data16 sbb mov out sarl outsb ljmp loope push aad fs and (bad) (bad) (bad) pushl pop out xchg cmc jbe dec mov adc xchg jmp push movsl inc mov (bad) out push popf inc lret inc das js cltd decb jl aaa sar (bad) (bad) fucomp add add and push add fs lcall mov push inc sub stos add xor sbb (bad) (bad) (bad) pushl mov mov mov fsubrp sub fwait pop xchg dec sbb dec lds cld (bad) fstpl (bad) or sub fcmovu fldt xchg (bad) call je add iret xor fs int3 mov sub and (bad) (bad) (bad) incl hlt ret jbe push jg or (bad) push push xchg loopne lock sbb inc (bad) mov mov les in and test (bad) fcomip cmp stos push mov lock insl push andl pop insb roll roll icebp frstor sub ja jo loope xor (bad) (bad) jp or mov mov sub in xor outsb mov or dec (bad) (bad) ljmp arpl adc pop cmpsl (bad) cmpsb dec mov fdivrl mov shll and scas inc and cltd shr (bad) mov or or (bad) lock and (bad) ljmp lds push test mov sahf test mov nop add (bad) (bad) pushl mov push mov jecxz jmp adc pop adc sbb rorb xchg adc (bad) stos xchg in hlt rcll push repz les mov mov adc icebp mov jg insl jl fildl ds add (bad) cld pop xchg hlt scas std decl add add test nop push dec lcall dec lret xor add aad add fcomip (bad) fcomps negb scas das data16 loop or push push jb ds das rcll popf ret push (bad) jg rclb (bad) cmp mov out pop loopne pop lcall call push mov scas mov test pop int fildll add mov xchg mov dec inc cmp adc outsl std das enter add loopne dec rcrb dec ljmp ljmp mov dec adc shlw fwait inc dec ret and mov push rcrl lcall dec mov movsb sti jge roll jp or decl lea pop adc (bad) (bad) (bad) jg xor sub dec push and lods inc mov cld jecxz add lcall or ja cmpsb (bad) or scas lret fisubr mov incl sbb cmc (bad) pop mov imul mov jo clc (bad) in fs jmp test inc xchg cli in call (bad) push sub stos arpl scas sub ljmp adc incl dec cmp push insb cli arpl imul push jo rcl sbb sbb xchg cmp (bad) call and jae sbb mov mov das add es add lds ljmp nop dec (bad) (bad) pushl cmp jno outsb aaa hlt push cmpsb dec out daa pop push push lock (bad) incl push fimul cmovnp xor dec mov inc xlat fwait mov pop (bad) (bad) decl fsubr enterw subb inc sbb gs cmp jle push mov (bad) jg or nop (bad) mov movsl (bad) (bad) (bad) call icebp xchg push dec mov out sub mov mov jbe add inc inc loopne or dec sbb xor pushf adc mov (bad) ljmp jo enter dec and hlt jb cmc mov adc jae addr16 (bad) (bad) inc aad xchg inc rol pop adc mov fs mov in lret cltd (bad) (bad) ljmp inc mov jle inc add rcr imulb or cmp ljmp lock stc sbb xchg lret imul push cmpsb fs jg (bad) mov out push mov fnstsw mov add sub (bad) lcall arpl add rclb mov cmp loop leave rcrl jo or insb xor adc (bad) ljmp inc xchg dec addb inc cmp fpatan or adc lcall ljmp jne lahf mov sub push mov mov movsl dec and std (bad) decl ja xor dec mov inc mov faddl push sahf mov repz mov popa adc negl insb sbb outsl mov aam stos pop lods mov jmp addr16 fwait push (bad) call xor cmpsl push inc scas std jbe bound pop xchg pop mov aas or or (bad) mov fs xlat mov jb sbb dec xor adc (bad) mov add mov sbb stos push aad (bad) (bad) dec rorb rcrb mov out sbb test lret (bad) mov push cmp mov aaa repz loopne push imul and xor sbb into dec mov or add and inc in xor inc sbb nop addr16 out lret or lahf bound dec scas jge and pop dec jl (bad) (bad) (bad) jmp push add je sub (bad) pop clc or sub jb and jae xchg (bad) (bad) (bad) mov je jb xor push xchg dec xlat inc lods insl mov aaa mov fwait adc in jecxz dec pop lock loop (bad) (bad) ljmp rcrl fisttpll cmp fisubl pop xchg dec mov inc icebp xchg jae dec inc cli or cmpsl xchg xchg shrl clc jmp repnz mov push inc in repnz xchg (bad) incl mov cli out xor (bad) mov out pop xor (bad) (bad) (bad) (bad) call cmpsl fnstsw xlat dec ja loope push mov (bad) (bad) and xor dec adc call mov test jg cli dec loopne loope sub jns ljmp orb (bad) ffree cs outsb pop cmpsb clc loop pop aas mov or out add adc xchg xchg sarb lock pmuludq (bad) jg (bad) (bad) (bad) aas xchg inc jge or imul jne out mov ds ficompl pop xchg inc cs andl add add hlt inc dec add decl jge sbb int3 mov cmp or mov fdivl call iret and std and xchg mov push sbb mov push cli sbb dec enter xor jg lods xor xlat (bad) je xchg push mov push sub jns gs test and lcall dec lret neg ja in nop push popf lods or mov decl lock jecxz ret cmpsb test out (bad) (bad) incl add jbe xchg insb fisttpl test in sarl jnp pusha gs repz std and jg (bad) sbb lock lea lds add xor mov cs adcl in (bad) (bad) cmc mov das pop adc test mov add std in jne xor std ja cmp (bad) (bad) jg adc aaa xchg fdivr loope xchg sbb lods xor and (bad) (bad) ljmp mov andl xchg lock adc pop cmp or ljmp jne cmp cmc or mov clc mov lret aad cmpsl int3 mov lods sbb or call cmpsl fcmovnb lcall xchg dec xor out xor (bad) (bad) pushl inc mov (bad) pop or sub pop dec xchg roll xchg cld (bad) inc out jnp push mov insb fist push arpl (bad) (bad) (bad) incl or inc in sbb cmp push mov jle bound (bad) std out jno fcompl clc inc (bad) (bad) call dec and nop push clc ss add pushl loop mov mov (bad) (bad) jg stos dec mov sub xchg lcall xor adc pushl (bad) ror sub ret pop add lret nop in adc push sbb loope (bad) aad sti sub (bad) (bad) (bad) (bad) in and movsb jo (bad) push (bad) inc cs jp or xor or jg (bad) ljmp pop imul out dec push dec sbb in adc (bad) (bad) (bad) jmp lahf lahf mov pop fdecstp rcrb movsb mov das inc (bad) jo aam aas leave (bad) (bad) clc loope fsubl inc jge (bad) fisttpl mov mov (bad) (bad) (bad) decl insb sub add mov test ret stos jae cmp mov std dec jl (bad) push lret rorb xor std xchg notl or or xor pop icebp cmp test mov cmc cmp (bad) push imul sbb rorl mov int mov mov dec xchg (bad) jmp cld mov test xor mov clc sti sub (bad) into (bad) scas ret (bad) push aas cmpsl mov stc sbb scas mov popa jne movsb loop inc mov loopnew (bad) call mov (bad) jb mov mov test cmp cmc (bad) (bad) (bad) (bad) call test mov incl sar jmp xchg fcmovnu mov cmp and inc (bad) in dec incb imul loope mov (bad) (bad) (bad) call pop sub rclb inc jno in inc pop mov mov and pusha shl call (bad) ljmp cmp push sarb ret scas dec fs (bad) (bad) dec sti lret dec xchg and pop fildl or pop mov loop js repz aad jno outsl (bad) mov clc (bad) ljmp shl sti mov mov or movsl bound cmpsb inc das jg incl fsts mov xor pop imul xchg sub loopne ret mov dec lods cwtl sbb (bad) (bad) jnp dec and test xchg inc out loopne sub (bad) xor add es push adc daa stos adc add (bad) ljmp mov std arpl gs xchg aad add sub dec dec (bad) (bad) call repz mov or pop mov or mov dec je jecxz pop jae jl je cltd daa cmovp mov push js loope cmp scas clc outsb adc lods lcall movsl pop jb xchg jne imul mov loopne jmp ss test (bad) movsl fisubl nop loop sar data16 pop mov rolb mov (bad) fxch sub andnps sti jp dec mov xchg fs decl sbb add je mov mov push divl push out xchg jo (bad) lcall bound cmpsl inc push push dec xor mov mov insl jl daa xlat aam fimull pop cmp (bad) scas out adc in mov sarb push mov outsb cld std (bad) (bad) dec xchg or into pusha icebp pop aas sub sub ret sbb add dec and mov xor cmp inc das stos xchg sbb sub fistl mov cmovle jnp sub mov loopne lret sbb jae mov pusha out pop nop jae stc mov mov add incl inc jle outsl cld dec or adc fistp in out xchg inc lret movsl dec and and add lret inc inc les xlat test mov mov (bad) fwait test pop xchg or dec xchg fwait push adc bound sahf adc pop popa pushf lea inc insl fdivrp mov ret xchg lret jg scas inc arpl jb and xchg mov call mov (bad) (bad) pushl negb sub ljmp pop shrb sahf inc shrb push xchg pushf negl fiaddl add (bad) jl mov repz scas cld jl pushf lahf (bad) xlat add das clc (bad) push pop mov nop inc out outsl into mov xchg (bad) test mov sar hlt inc cmp test sbb cmpsl repz xchg lret data16 (bad) (bad) (bad) mov (bad) popf (bad) push jmp xchg outsb inc mov push insb inc cmpsl jge imul lcall ss or bnd in pop imul loopne lock sub mov stos (bad) (bad) push adc mov in (bad) fldenv xchg cwtl notb push lds loopne mov xchg pushl sbb sbb cmpsl push pop lahf out xchg lods or xchg (bad) (bad) incl stos and cmp mov aaa push cmpsb fnstenv aas test call sti mov cs push icebp mov or icebp fnstcw in mov cmp add orb mov (bad) (bad) ljmp rcr in orl xor adc mov sub lret mov lcall or hlt into inc sbb std add dec shll inc stos cltd mov movsb mov je cli sarb add xor dec (bad) (bad) decl scas in jmp lahf cs inc add sbb das test scas or dec rclb xchg lods inc (bad) das xchg pop call in andl jmp andl dec jge (bad) outsl out (bad) lcall gs out (bad) popf aam sbb stos jmp (bad) jl (bad) mov inc dec movsl (bad) jne jne nop clc add jne push fnsave (bad) lcall stos shrl dec xorl cmpsl and shll sbb push sbb pushl push xlat popa ret ret mov and outsl (bad) (bad) (bad) (bad) (bad) call imul pop mov fildl adc jne,pn jg aaa xchg (bad) (bad) lcall int mov push sub add fs shlb test iret mov pop daa test cmp push aad (bad) les pop or lret mov inc nop sub iret fnop xchg sub xchg jmp push sbbl jge data16 mov nop xor shr xlat int and add je sub cmc clc das stc dec pop cmp push lcall cmp adc incl movsb jecxz imul or ljmp aaa or push sub and push es xor xor ljmp fs ja push push cmp push call (bad) (bad) (bad) pushl and push adc hlt xor fyl2xp1 shll jb cmpb mov in fdivr (bad) decl lds dec pop push mov pop in add ss lock (bad) jmp repz loop pushl mov pop mov cli loopne stc in into mov ds xor jmp int3 enter sbb mov clc pop test rcrl in (bad) (bad) (bad) pushl push insl pop pop inc lock lret mov dec daa out fldt (bad) call jmp adc rcr cld dec test lret push (bad) (bad) mov into aad inc push in push or daa push es xor decl xchg cmpsl dec push mov jb pop (bad) (bad) decl out pop roll pop pop je inc cli cwtl sbbl in cmp mov popa fadds loope adc (bad) scas sbb mov adc insb cmc dec dec dec rcrl (bad) aas mov (bad) cli stos ficompl repz jnp add pop popf test (bad) (bad) (bad) stc (bad) iret imul (bad) shrb mov cmp (bad) (bad) mov jo into jmp or adc fstpt xchg mov iret and out cli jmp jno imul inc inc mov push loope pop (bad) (bad) jmp roll dec mov repz clc in pop jns stos decl cmp lcall shl repnz jl add ljmp std ljmp insl dec sarl (bad) (bad) lcall and shll subl cmp enter loope xchg pop out or adc in mov out mov mov mov dec shrb xchg cmpsb xor (bad) call sbb insl popf mov mov aas xor loop xor sub mov jmp (bad) jnp jne mov pushf sub stos (bad) (bad) (bad) pushl out cmpsb fidivr jo mov jb sub cld xchg sbb mov xchg add jg (bad) jmp add sub sbb mov and adc inc and lds fbld stos mov in mov orl decl lods sub rcl fnstsw jg dec mov sub sarb outsb mov lds add (bad) mov iret test (bad) (bad) inc (bad) jle std popf fcmovnb xchg scas lcall (bad) (bad) (bad) ljmp inc xchg jno sbb and fcmovnb dec (bad) xor out lds (bad) (bad) lcall data16 and js lret or daa in or jmp sbb incl sti sub movsb mov mov adc imul sti and ljmp pushf mov (bad) incl cld int3 adc lock insl adc jmp out gs rclb cltd (bad) (bad) (bad) jg cmp rcrl and stos lret jl adc repnz dec jae repnz jg,pn push xchg leave (bad) (bad) (bad) (bad) fistpl inc into popf out mov sbb sbb mov push or sbb aas lret add cmp rorb inc idivl cmp inc jecxz clc jecxz xor dec in (bad) incl stos adc out push pop dec ds das xchg add (bad) call jp (bad) outsb push push inc push xor cli je or (bad) and (bad) pushf xchg adc and fwait pop stos lods aam (bad) mov jp push add in (bad) call mov out (bad) pushf sahf adc loope addr16 (bad) (bad) (bad) jge (bad) dec xchg fcmovbe lea (bad) (bad) jno lods cmp hlt es rcrl pop sbb inc jmp fdivrs loopne pop and (bad) call push or pushl notb mov (bad) ljmp or mov pop xchg add xchg cvtdq2ps push daa stc cmp pop mov fildll out inc aam cmpsl cmp cmp (bad) (bad) (bad) decl and aam xchg fmuls push or addr16 and pop cmpsb cmp push fcompl dec (bad) jg (bad) cld push jns push or dec inc pop in pop nop (bad) gs (bad) (bad) (bad) (bad) ljmp out dec mov sub cmpl sub mov divb add jns std or jb cld mov ljmp add mov inc push pop mov push clc (bad) (bad) call lock jo lds stc fnstsw cltd (bad) call jns jg das (bad) jmp mov push repz stc xchg push cmp or (bad) (bad) (bad) ljmp insb push je and leave mov (bad) fidivr div jmp mov test nop shrb outsl push (bad) xor (bad) (bad) (bad) mov sarb lahf dec shl jne data16 sub mov dec pop loope xchg inc or outsl stos cmp add (bad) (bad) jg pop dec cmpsl xchg in es notl lahf xchg mov xchg addr16 cmp or mov pop mov sub xor imull cltd xchg (bad) mov sti pop movsl xor dec jno adc jnp repz in stc mov fdivl adc rcll aas adc jl sbb sub bound adc aas test or inc jb push pop lds test ss ja lcall inc (bad) shlb mov (bad) jo test jg jmp push les and sub stos gs (bad) (bad) out cli int3 out lods pop (bad) js fstps mov sbb push fildl lcall pop divb and je andl (bad) jg clc mov loop mov xor mov cwtl pavgb (bad) (bad) call mov jo je sub push pop and pop inc ljmp aas sti icebp fwait add xor adc (bad) (bad) jg ja xor jg cld jg mov mov xchg (bad) (bad) (bad) pushl aaa jle mov (bad) cltd ljmp clc adc adc cmpsb into popa mov (bad) (bad) call jae or lcall mov jo clc (bad) (bad) (bad) call daa pop int lods push lods xchg (bad) addr16 fild or imul jo pop (bad) jmp or das jmp enter jg jmp inc data16 mov imul jp dec push mov cmpsb (bad) (bad) jg lea (bad) pop xchg xor adc dec out int3 in pop pop jecxz ljmp sbb xorl sbb adc add fsubl push (bad) (bad) (bad) (bad) incl aas lea pop loope scas lock mov dec hlt out test nop mov or (bad) jg rclb jnp dec fidiv adc addr16 sub or (bad) jge cltd les cmp fisubr inc (bad) decl pop xor aad (bad) sti jge cmp sub pop inc pop sub icebp dec out pop xlat or push add (bad) (bad) (bad) (bad) fnstenv mov xchg inc ficoml sub sbb pushf shrl push jmp (bad) (bad) ljmp adc in mov cmpsb inc test cwtl (bad) (bad) (bad) jmp (bad) repnz and jnp xlat fildl out inc xchg loope leave (bad) xor xor xchg (bad) decl mov mov fs les lds jle dec notb test (bad) pushl xchg popf add orl bound sti pushf jle (bad) (bad) fildll push add mov push push inc pop push in xor mov (bad) (bad) pushl cmpsl out fisubrl push inc (bad) adc enter pop loopne adc adc cmpsb jge mov sbb or rcrl xor cmp lock cli pop dec test gs (bad) adc xor (bad) ffreep mov ret mov xlat sahf jne inc mov inc notl lock lcall mov ja loop pop and sub mov sub push adc (bad) sti sahf mull outsl xor (bad) cmp out cltd ret or hlt jge repz (bad) (bad) mov mov dec dec test (bad) mov pop pop inc mov and push insb push cld inc aad pop (bad) leave lock (bad) (bad) cmp lret lods fldcw fwait repz push sbb mov mov jo push mov int mov lods jb jmp (bad) (bad) lcall jbe lds ljmp mov out cli movsb xlat (bad) (bad) incl xchg xchg push mov dec xchg jp jb mov (bad) ljmp addr16 (bad) and add cmp test mov std mov ficompl loope inc and mov call xor mov dec add adc decl popa add mov xchg mov mov data16 inc ficoml xor pusha cmp lock mov mov cmp sub outsb dec xchg or or sub mov fidivr cli (bad) (bad) call ljmp xchg cli or js inc stc fwait insb pop daa mov scas inc push add movsl pop lret fadds jo adc mov add popf stos (bad) pop push (bad) jg cmp xchg fistpl stos mov dec jne mov imul and cli in xor jae leave (bad) (bad) clc inc mov js imulb ljmp movsl fild stc sbb mov rorb adc jl dec sub or incl add pop sbb mov (bad) call or mov mov fwait xchg jle addb mov cli out int3 fdivl dec bnd or imul mov nop jmp (bad) (bad) (bad) jnp sbb or xchg mov stc out lods push in es mov pop dec int3 insb aam lods (bad) jmp cwtl mov mov (bad) aad (bad) (bad) jmp std lds jo cmp xor adc int3 loope jg test jne icebp jl cmp lret sub mov ret push mov (bad) mov or (bad) lcall iret loop pop outsb pop inc leave dec jbe ficompl les mov dec scas imul sar scas sbb jl xchg cli daa xor sarl (bad) jmp incl push fs mov sub mov inc push imul clc lods sub inc scas dec (bad) (bad) jmp sbb push decl dec mov mov ret push xlat mov test (bad) (bad) call dec fdivs push mov cmp outsl or scas mov jle add stos add pop xchg pop and (bad) in sarb (bad) (bad) aas sbb mov add xchg sti sbb es xor (bad) lcall xchg or aaa lret lcall adc (bad) aaa sarb sbb cwtl int3 (bad) lcall sub mov (bad) popa fadds inc aas sarl pop mov in (bad) (bad) (bad) lcall lcall iret pop jnp mov jns mov add in dec movsl sub or and aaa add jmp daa repnz adc loop decl gs cwtl xor or movsb or clc xchg in sahf adc jnp loope xlat test pop dec xlat js dec movsl mov ret adc scas sbb or movsl dec cmp mov (bad) mov (bad) (bad) fbld mov sahf fdivrs push aad xchg and loop lods push insb ret bswap (bad) (bad) lcall hlt idivl pop pushf lods add out mov sbb dec inc and (bad) pushl (bad) xor fdivrl outsl dec aad xor push sahf sarl addr16 int aas arpl popa ret sbb jbe push sarb (bad) (bad) call aas dec xchg mov push jo scas xor lret inc loope jmp sbb roll mov lea les sub (bad) (bad) (bad) jmp cmp loop bound sub lcall push dec fisubl jl decl xchg pop xor or lea sbb (bad) (bad) jmp xchg pop xchg addr16 in pop test out mov insb loope scas shl pop xchg mov cmp es jae (bad) (bad) call inc rolb mov pop push inc mov add lret xor call test cmpl inc cmpsl add out test jecxz,pt xor mov dec and es jl add jecxz and jle in out pop cmpsb cmpsb popa sti sahf sub sbb jae shll or inc or (bad) aas pop ret test ret movsb adc sti push (bad) (bad) (bad) decl aam mov dec or mov jns sti pop es mov pop or loope clc mov (bad) jg jmp sub push mov adc xchg (bad) jmp imul add out sbb lret mov adc sbb (bad) bound nop (bad) out lds rcr in ljmp (bad) setge outsb outsb pop test dec adc (bad) (bad) sti fs popa and cs insl jne inc mov clc test aas push mov arpl mov (bad) (bad) mov je out data16 jb mov xchg dec mov inc mov call sbb jmp or or lcall xchg dec ja sti xor leave lcall adc (bad) (bad) dec rolb and loope ds and mov ja push jg (bad) pushl jp je and cmpsl dec or add push cwtl mov fwait mov jbe aas lock ja dec dec dec loope addr16 mov inc leave sbb mov inc mov push daa and aam es decl lods push jmp inc fstpl push scas stos in pop pop pop inc fdivr (bad) (bad) dec mov adc shlb sbb popf add cmpsl mov movb (bad) jmp stc sub sbb bound (bad) je fucom mov cmp and (bad) (bad) (bad) mov jae mov cmp dec stc pop push popa pusha icebp mov arpl (bad) xor (bad) call cmp xchg repnz push sub push icebp pop ror mov xlat and nop das mov fsub mov imul sbb call rcl les (bad) (bad) jg out mov jge arpl mov in or adc xlat (bad) (bad) (bad) jmp fnstcw inc clc movsl dec out jp (bad) stc adc adc fs xor pop clc add (bad) incl in adc ret dec sbb jl outsl loope popf mulb (bad) jg insl stos dec adc mov movsb lds jp scas ss xlat movsl scas xchg pop loope and mov push sti lods out nop mov (bad) (bad) (bad) pushl out ja test jp,pn stc jbe xchg out adc push mov mov push pop sbb jmp (bad) push dec test push pusha outsb xchg xor dec cmpsb or sub repnz (bad) (bad) pushl add mul pop mov sub mov repnz popf cmp stos (bad) jg rorb push jle fist (bad) (bad) out test iret (bad) push test icebp jl dec xchg jae aaa adc pop pop (bad) pushl aam cs lods ficompl push cmp (bad) mov loop lahf (bad) dec fsubs loop,pn fidivrl jle dec dec (bad) sbb push mulb imul lret cmp loope adc lcall lock and std adc xor pop push jecxz sbb lcall lret jae mov out cmp in add test lcall pop add cmp add jecxz pop out (bad) call aad mov bnd sar imul (bad) (bad) (bad) (bad) jge pop sub dec bound push cmp popf jne int3 cmp in dec incb cld pop daa push rcl inc in ficom stos shr mov (bad) (bad) call dec xchg jge,pt or mov inc sub push inc int (bad) mov daa inc cli std out lret dec xor test (bad) xchg cmp xchg (bad) iret (bad) mov (bad) pushl push sbb inc xor sbb mov mov jne sub (bad) mov mov icebp rcrb xor lock xchg fs call sub mov arpl repnz cmp push daa es (bad) sahf adc jae shld (bad) lcall into push in aaa scas cwtl in mov mov add push incl mov jno test push inc stos gs (bad) call pop mov mov push (bad) jae mov inc add xor ljmp cli mov mov mov je mov popf (bad) (bad) jmp jp mov mov (bad) mov xchg lret push fcos mov add dec lcall sub mov mov and loope xor lcall lock push xchg xor jae pushf movsb es add (bad) (bad) js stc pop add (bad) stos imul (bad) mov pushf nop scas mov xchg adc sub mov mov sub ss pop shll insl mov pushf (bad) (bad) decl sbb mov pop sbb jo dec shrl rclb or pop jb xor lock cmp incl jg jb and sti jg (bad) sub (bad) pop push cs mov cwtl or outsb mov mov jbe or scas adc mov (bad) (bad) (bad) ljmp mov add and (bad) mov (bad) test je std ljmp hlt pushf aam stos xchg mov cmp (bad) (bad) lcall hlt cmovp ds fsubl dec aad and mov (bad) (bad) lcall dec std sub mov mov inc in pop xor inc pushf add cmp (bad) lcall imul aaa mov pop addr16 ja mov (bad) lcall mov or and lahf mov inc sbb jnp out push movsb loopne fwait (bad) call (bad) (bad) xchg sub xchg mov cmp and sub (bad) (bad) (bad) jnp inc rolb xchg repnz cli outsb movsb cmpb in and aam jp aaa dec (bad) ljmp mov (bad) cmp inc rclb lea (bad) mov jae sbb jl imul dec (bad) nop sub std inc dec mov sub sbb jmp mov cwtl ljmp cmc loope mov andl (bad) push and xor test or mov inc or (bad) jmp push loopne outsb push xor cmc cmp (bad) (bad) jmp repz insb add mov inc adc adc xchg test xchg pop jg mov mov cld lcall or jle sub call xchg sti stc dec call adc pushf sahf or push pop (bad) (bad) mov jecxz jo arpl mov jp repz mov aam pushl outsb or in add je mov lret aaa rol out add adc (bad) cs dec shlb xor ljmp inc and outsl mov jmp inc push hlt test out in and adc fcmovnu hlt mov adc or addr16 sbb xchg ss push into ds repnz mov das cmp push popl fsubr pop andl (bad) (bad) (bad) jg cmc push add or sti jo aam outsb (bad) js lods fistpll lret lret xchg (bad) (bad) push push ficompl mov cmp std mov dec xchg nop jge (bad) (bad) (bad) mov jle pop scas push lods cmpsl outsl push test sub xor enter jg push cmp pop das add or fdivrs mov decl jne out mov (bad) jge cmp ljmp (bad) (bad) (bad) (bad) (bad) out leave dec lahf je cwtl dec std mov popf lcall es cltd xchg (bad) lcall fdivs adc lret in and es repz push jl xlat iret cmc (bad) (bad) (bad) (bad) cli popf fldl js sbb xchg shl es int3 in clc xchg add lret (bad) mov mov stc sub inc xchg pop and out aam enter ljmp cmp fbld loopne mov jl notb std (bad) ljmp outsb out xorl mov mov and popa cld lds xor test rcr mov rcll and xor insb sub std fcmovnbe mov xor (bad) push (bad) (bad) lcall inc outsl jp inc adc mov push jne jg dec addr16 mov (bad) call xor jbe push ja clc push or lock mov leave push inc mov (bad) lcall daa xor xor orl and xchg insb and adc or push mov sahf lret mov into cmp pop dec faddl cli inc rolb add repz test jno loopne (bad) incl scas fistl (bad) add ja leave test cmpsb insb inc push mov add or (bad) mov jno mov mov (bad) stos rclb (bad) andl (bad) (bad) (bad) jmp lret imul mov in inc int (bad) insb push xchg xchg add rcrb (bad) (bad) fsubrs pop popa ret mov out push dec out hlt (bad) jg adc imul lret pop push add dec or cmpsb ret inc jl dec xorb testb das jp je ja sahf mov js cmc ja sub cld mov pop lds stos pop mov mov into jo pusha push (bad) sbb add cwtl and in jns sti adc lock cmp or cmp push das call jg fldcw outsl mov xchg lock pmulhw mov jmp adc fsubrs sub xchg faddp mov aaa mov into dec add inc jb push cmc (bad) std test and jns xor out adc std (bad) (bad) (bad) pushl inc or out lahf rcll cmp js (bad) mov push hlt int3 rcll (bad) inc in sahf mov dec enter push popf lret ss les (bad) (bad) call pop sub mov xchg out out jae addr16 mov push in popa inc fwait mov (bad) aas and (bad) mov loopne pop rorl mov jnp pop ds (bad) (bad) inc test jbe stos ret clc mov es xor inc sub add (bad) ljmp es (bad) aaa and xchg shlb mov jp pop (bad) (bad) ljmp mov je pop pop mov rorl fucomp xchg jo cs (bad) (bad) (bad) call mov sbb cmp mov loope push jnp (bad) sub lods into dec mov and or mov jmp (bad) lods lcall jmp cs adc sti in jg sti xorl push sbb add add incl mov inc (bad) (bad) (bad) jmp (bad) jo pushf addr16 cli bound dec ja hlt mov sbb xor mov jmp push aas and adc mov lods xlat fidivr and sub add add incl mov hlt xchg and mov (bad) (bad) jg mov inc xor push in pop popa push fs add data16 (bad) jg cmp test push outsb (bad) or xchg fildl lods push out pop outsb or dec (bad) (bad) (bad) jmp cltd cli pop rcl pop pusha loop ja mov pop pop rorb jb bound sub fbld adc leave jmp lret cld (bad) call sub imul cld or lock aaa dec cmp jg and ja push movl dec (bad) inc pop das (bad) (bad) mov jge (bad) jbe call jbe mov lret arpl js data16 loope mov mov add int3 push scas sbb and loope bound push mov stos ret ret (bad) call lret out aas xchg ret xchg popa mov insb jbe mov mov dec jg (bad) decl push bound (bad) hlt xor js test scas into dec dec (bad) (bad) (bad) incl push dec pop dec pop jmp mov pushf mov or jg add iret push or (bad) jg jmp mov pop and adc test inc jmp mov dec sarl ljmp dec cli (bad) int jp xor (bad) mov pop in (bad) (bad) fisttp mov mov mov pop mov add mov or clc fwait push mov pop mov xchg adcb loope pop jbe movsb into scas adc mov call clc stc dec inc fistpll sub add lods (bad) jg sar mov inc jl dec mov btr (bad) jg call arpl imul rolb sbb out cli (bad) (bad) (bad) sub (bad) lea sbb repnz popa cmp mov mov (bad) xor loope movsb jmp sahf push test lea (bad) (bad) incl push lods out (bad) loop add xchg push dec pop jnp ret pop dec mov das sub insb (bad) (bad) lcall lea es in xor dec out push lds jnp inc in (bad) lcall inc in iret int3 jns push daa inc pop sarl dec icebp jmp and mov sbb (bad) ljmp jle or push adc xchg mov mov or ret cli (bad) call in or mov insl fwait pushf sarl out (bad) decl (bad) jae aad sub jb std push xchg fs pop add (bad) (bad) (bad) lcall sbb jo mov pop mov mov into addb push adc shlb fildll or (bad) (bad) (bad) (bad) fbld and xor cwtl and xchg rol mov sbb lret movsb (bad) fcomip mov inc mov jmp (bad) (bad) add mov (bad) call pop or inc test jg mov push jg mov jnp add decl leave sar std pop adc cli and cmpsl cltd test test stos imul adc pop mov and add (bad) (bad) (bad) cmp insb and out mov lcall movsb call fdivs sahf mov movsb int fbld mov add push mov cmc jae loope fcomip fwait test push and in pop popf das clc (bad) decl xchg cmpsb sbb (bad) jg fdivrs and imul out jo jg clc sbbb popf icebp js or negl sub (bad) (bad) jecxz sarb aam sbb aas test into xchg mov dec movsb dec (bad) mov arpl pop jecxz jmp (bad) ljmp cmp mov dec mov inc imul popa sbb cld (bad) (bad) jmp out jmp hlt xchg aaa jp jno xchg cmp sbb push cltd rorb (bad) (bad) call test jp fidivr (bad) lods jmp (bad) mov lods cld (bad) (bad) incl mov push jg xor xchg stos adc iret pop lods (bad) mov push add decl mov aas jecxz dec ret lds jb sub jo aad or jmp cmp clc cmp lcall pop mov int3 jne xchg out (bad) jg cli insb stos pushl sub sub jmp xchg ja pop (bad) pusha (bad) add (bad) decl inc xchg add ffree add fsubrs in call inc adc jne push inc stos fiaddl xor aaa (bad) call mov cmc mov push mov scas (bad) (bad) (bad) jmp orl insl jb jg jecxz adc sbb hlt psrlw inc ret cmpsl and inc (bad) sbb es (bad) jmp dec inc (bad) fmull stos pop call pop jmp push mov pop lcall (bad) jg (bad) cs in jbe ret mov out jne cld push repnz (bad) mov push sbb jg sarl les mov jg add or outsl push inc (bad) aad jmp imul call aad loope pop or adc dec or push in sbb and and js pushf out mov adc int incl lds sub mov cld out clc jg pop ljmp add jl addr16 popa bound sbb (bad) jg add mov and jne sbb insl cmp mov cmp data16 and mov cmp add incl fdivr sub sub movl or cltd scas (bad) movsb pop dec imul insb insl pop xor sahf in (bad) sahf std inc mov fmuls fucomi (bad) decl outsl inc add outsb add mov sti inc in jl (bad) (bad) push fdivrl jg lret dec mov cmp mov jmp jb (bad) mov jns push sub jle ss js fstpt (bad) (bad) inc loopne xchg daa jge sub test or xchg setno jo jg cs cmc scas or xor inc lret imul sbb (bad) out add loopne in faddl call xchg xchg (bad) (bad) aas jns aaa inc pop and pop and faddl idivl xor incl push aam sub fwait stos jle (bad) test mov lea pop inc (bad) movsl sbb es xor lea test std mov lret ljmp pushl stos push xor or (bad) pushl (bad) (bad) out aad addb test add mov inc add js cld (bad) decl mov arpl pop sbb gs mov mov cmp pop inc gs in int (bad) (bad) mov cld pop mov (bad) jae leave test xchg adc cld mov (bad) jne ss inc repnz sarb dec xor adc mov and push lcall shll ret int push lock mov xlat xchg or cwtl ja pushl mov gs rol popa mov add out push nop sarl inc dec xor mov icebp jle jb inc (bad) (bad) (bad) (bad) cmp pop push xchg pusha or sub adc push addr16 sub loop (bad) xchg jl or repnz call pop push mov inc repz or notl xchg dec mov (bad) (bad) jmp pop lret popf shrl xor testb sub mov (bad) or scas xchg push insb push jae ds pushl out lahf adc (bad) (bad) jmp enter das push push (bad) leave jno or insl xchg sbb pop inc push lcall subl adc sahf cltd ds cltd sbb dec jnp jb mov (bad) decl addr16 jae insb or cmp cmp loope (bad) (bad) lcall dec stc cltd sti push jmp daa lock push and call repnz cmpsl xor push mov sub idiv (bad) lcall int3 pop (bad) push lds sub jo rorb adc cmp pushf call (bad) mov cs mov lods jae ljmp clc mov ret cmp or (bad) incl imul mov ror sbb jg jbe xor aaa adc stos adc xchg incl icebp mov mov fbld mov out push adc dec add clc push loop push mov mov push cmp ss or fcmovnb cmpsb mov xchg mov movsb lea sub and jmp push popa lret (bad) stos push mov int mov daa pop mov dec (bad) (bad) mov mov dec sub mov leave push mov nop std std (bad) fildll jo pop outsb rorl fs inc sub mov push (bad) sbb fisubrl sub jp pop div (bad) or push sub jmp ficoml lods mov out js adc mov lcall aas cmp cmpsb jno mov sub mov insb push xchg and (bad) (bad) inc or mov leave jmp enter fdivrs roll cli (bad) cmp inc aam cmp or sub (bad) (bad) (bad) (bad) decl pop int3 cmpsb mov mov jp rcrb jne mov push popf enter and ret lcall into shrb into popa mov mov (bad) incl inc outsl and loope push inc push hlt push fnstsw leave (bad) (bad) jg or pop xchg dec ss adc lods out movsl clc test mov fsub pop xor ljmp sahf and add jg pop or adc adc sbb lock fcomip push aas fiaddl add int3 jp inc lret jnp jl scas mov mull push mull dec inc (bad) (bad) (bad) pushl into imul in (bad) lcall adc aaa lods test lock and daa icebp pop in iret push add sbb lcall or mov push xchg fimull mov cmp ret ljmp jg roll testb out je cmp pop mov mov mov mov fdivrl xchg test push pop xchg dec outsb mov clc (bad) (bad) (bad) jmp aad ljmp pushf gs repnz rcll adc stos push cwtl adc pop in pop in cmpsb jge outsl fucomi out xchg xor das add lret mov (bad) (bad) call jbe pop push or daa dec (bad) cmp sarl add mov lods and loope inc es mov das push fcmovb xchg bnd dec outsl (bad) dec cmp mov jae xor sbb push leave add mov scas ja sar inc xchg jp inc cwtl ficom clc incl pop and arpl aas mov dec enter add xchg hlt dec repz in adc pop out and pop and (bad) dec movsb xor aas in dec pusha dec icebp xorb jp aas popa pusha jmp mov sub pop sub mov sbb sbb ja or out push jbe pop test (bad) pushl popf aam mov or repz icebp mov test (bad) ljmp xor nop or dec jl fistpl pusha int xchg fdivs and mov push jb popf inc mov addr16 (bad) dec mov cli cmp sub xchg or ljmp mov jb add sbb loope mov fildl and insb add mov fdivl add push sbb mov mov stos inc fadd mov bound (bad) (bad) lcall sub inc and push stos lcall xor mov xchg leave gs stc sub jg test ss push clc xor cli and lock test mov (bad) (bad) (bad) lcall (bad) sub movb jl mov dec lods xchg inc pop out popf push inc out sahf sahf jp (bad) decl pop cwtl loopne (bad) in test lahf insb outsl call jnp (bad) ljmp and cmc call iret test ss ret stos xorl jno jg (bad) push pop ss repnz pop ja hlt shrl outsb sahf adc mov mov (bad) pop into (bad) repz (bad) (bad) (bad) out xor ror push mov icebp shrl es sub mov lock pop inc add (bad) aas sar jmp adc inc popa jae movsl cmpsb xor xchg ljmp pop fisttpl fwait adc pop xchg jb into popf fisttpll (bad) daa push insb lock xchg (bad) pushl sbb pusha lock stc mov pop xchg (bad) (bad) (bad) aas insb mov add pop or mov cmp mov out sub (bad) (bad) call cld sbb in (bad) out bound loop sbb sub cld (bad) (bad) jg dec inc xlat mov (bad) call stos mov addr16 push pop sub xor (bad) call cwtl sbb add ja pop mov jo pushl shrl in xchg mov (bad) ljmp icebp fistl clc leave mov sub sti (bad) jp stos pop sbb fisubl add jle (bad) mov addl cli cld or (bad) cmc js popf outsl ret dec adc (bad) (bad) (bad) (bad) mov and pop adc sub xor mov mov loope movsl lds aad cli pop or push mov test mov test mov inc repz int add (bad) (bad) (bad) call jns in pop pusha xor mov cs jb xor cmpsb jae movsl mov mov les push xchg mov dec push jae xor pushl pushf dec and orb add jge mov cmp outsl cli lcall loope mov xor lods pop push (bad) (bad) (bad) jg repz mov ret mov sbb mov cmp popf popf in (bad) decl imul rcrl add stos sbb or scas or incl in notl lahf cmpl int push fcom push xor int (bad) insb xor cli mov sti dec and aas lds incb jae out (bad) jl add hlt jbe jge dec negl lcall xchg (bad) (bad) mov (bad) mov xchg (bad) (bad) cmp mov inc mov pusha bnd sub dec fnstenv popa (bad) cld (bad) sub push and pop sahf add push nop mov mov js xlat xor adc aam test and scas (bad) cli jae ret ret inc dec into pop mov mov nop pop ja pop and dec mov or push mov and lock negl in out dec jno sub stos push jl mov xor (bad) ljmp outsb mov gs arpl aaa cmp shrb in dec pop loop pop ja (bad) incl mov xor pop stc pop and es mov dec int mov cwtl (bad) ljmp loopne or or mov sbb or adc lret (bad) (bad) jmp rcl lcall xchg mov sub cmp and (bad) jg and pusha imul sub cmpsb (bad) mov loop dec int3 out lret loope mov mov stos hlt pop hlt in xor out push dec bound ret inc mov imul push or adc rorl mov imul xchg iret xor cli pushl std or and insl push push enter lock shrb mov insl xor mov shll (bad) (bad) (bad) mov pushl test in rcrl pusha push pushf cmp add adc movsl sar (bad) ljmp and pop or mov or sahf xchg lods js (bad) ljmp imul dec prefetch or (bad) sbb insl pop loop lds imul xchg mov or pop sbb xor adcb and bound cmp mov decl mov cwtl cmp cmp mov sub incl mov (bad) jmp sbbb ss (bad) pop mov decl out (bad) (bad) (bad) (bad) std pop mov arpl out or adc inc pop mov loope dec xchg jp test adc call push inc jp ror cmp fcmovnbe in je rcrb orb (bad) (bad) (bad) decl xchg mov add popa fistpl xchg sbb mov pop sub jg (bad) dec sti fwait or pop sbb (bad) hlt or adc lds jb fnstenv repz sub jge arpl push sub clc bound or (bad) (bad) aas imul (bad) xor pop add xor fstpl repz (bad) incl lods cmp cmp and into outsl daa jl jo outsl jo iret mov lods jle dec mov pop cmp scas stos sbb mov adc jae and (bad) ljmp cmp daa add xchg repz add std add lock push aas fs or ljmp push sarl push (bad) incl testb add in (bad) (bad) jg push pop notb push notb std mov out mov xchg pop and das clc jmp aaa shrb pusha xor adc dec cmp imul pop andl pop popa inc js sbb aam fistp stos ret lcall mov mov out mov sbb mov cmp or or mov je (bad) clc cmovae jmp add push jae (bad) lcall mov out (bad) dec pushf movsb push add incb or (bad) hlt (bad) decl dec adc in push mov das or dec test clc push (bad) (bad) (bad) cmp out pop fdivrp lods or ds and data16 cmpsb jecxz pusha add add sub inc jl push and cmovg sbb xor lea (bad) (bad) (bad) jg mov mov and xchg adc cmp icebp cmp out test (bad) call test outsl loopne fisubrl sbb xchg lahf cld (bad) (bad) (bad) jg adc repz add ljmp dec js nop gs cmpsl cwtl cwtl mov inc mov ljmp add inc cmc cmp pop jp cmp xchg jge lcall jp inc mov mov and adc pop cs (bad) (bad) incl enter mov fstps sbb pop imul pushf (bad) out mov sub (bad) pop push das xor dec arpl jl sbb clc (bad) call pop lds fnsave dec mov or pop xchg (bad) dec adc or sbb decb addr16 push std adc (bad) (bad) incl cmpsl mov into sub scas mull inc int imul sub mov std (bad) stc or pop jle insl xchg data16 xchg ret cwtl lcall or adc imul loopne xchg xchg lret das cli fsts xor adc mov cmc add sti icebp in hlt popa je and (bad) jmp insl ror mov popf mov push or imul (bad) (bad) (bad) call mov fstp inc sti ljmp movsb sub and cld (bad) (bad) ljmp add inc loopne sbb pop insb popa jns or icebp nop stos jle dec and call lock pop sub sub mov data16 mov int3 inc mov mov mov ljmp ljmp popa shlb cmp movb (bad) ljmp arpl notl pop hlt and fsubrs (bad) inc adc push mov lcall fist add aaa testb pop cld jg mov shlb stc lods jo orl (bad) incl jno sbb clc sub mov loope sbb cmp lcall (bad) mov negb int mov inc (bad) out cld (bad) pushl iret cld sbb sub pop cs out mov mov clc scas cli in dec pusha push sbb fiadd jp fidivr scas stos add mov pop xchg add adc daa les dec pop inc push pop gs (bad) (bad) lcall (bad) popa add jne mov xchg (bad) and scas aad sti xchg xor dec fstpt test pusha push roll mov incl icebp popa test movsb loop inc insl sahf sti iret out push jbe pop mov push fsubs mov push jae xor loop or sti (bad) (bad) (bad) mov xchg js ljmp xor jne inc scas sub mov (bad) lcall in cltd ret push (bad) insl sub orl sbb pop enter test scas fimull sbb cmp pusha add (bad) jg scas (bad) lret orb popa cmp pop pop mov hlt xchg pushf xor vmovupd test call mov dec jae xchg out push xor xchg dec mov sub mov fild lcall (bad) out cli dec iret pop rclb add pop cmp sub hlt leave loop mov inc rcrl scas mov jl push repnz (bad) (bad) jg mov xor sbb sub movsb loope mov mov or pushl das sti dec or and or inc test jo mov sbb cmp lods fmul and sub pop mov (bad) (bad) (bad) pushl mov inc dec inc mov jp scas xchg cwtl or xchg and call mov pop adc mov sub mov (bad) call jns lds cs or pop je push sub scas sbb jo lods push mov jmp dec (bad) sarb movsb pop jg cmp add movsl int sti (bad) (bad) decl mov jne ljmp push xor out fbld out pop add jg out cmc notb sbb insb call les repnz xor pop jge cmp (bad) (bad) (bad) pushl fcomps das adc jl mov push pushf dec je cmp add cmpsb pusha inc dec xchg fidivl lcall or out jno inc lea rolb xchg scas (bad) fwait clc (bad) (bad) call jno lea mov out sti call arpl mov lods (bad) sub (bad) jg fwait and mov xor repz jge cltd test ret (bad) call loopne fidivrl lods push leave add mov pop mov leave pop adcl xor ss loopne (bad) repz xor jmp (bad) cmp mov mov jg (bad) (bad) (bad) incl fadd pop lods lret sahf mull xor ds jno loopne sbb sahf xchg (bad) push dec cld jecxz mov mov js idiv fstpt push aad pop mov enter pop ret js pop movsl gs (bad) fbld in lods or pop mov push ret movsl ljmp repz or fiadd xchg add cmc cmp sub cmp sar (bad) pushl inc sub cld mov lods mov (bad) mov js clc inc sbb popf sti mov push push cmpsl cld imul sub (bad) (bad) (bad) lcall rcl pop mov nop add int mov push push rcl scas fs (bad) aas leave xchg or lock xlat mov sahf fucomp and push (bad) (bad) (bad) (bad) cmp jne mov inc mov mov jecxz stos imul cmp lcall fdivs push xchg jne xor jp pop push push pop insl (bad) (bad) (bad) jmp aaa or lcall mov cmpb outsb (bad) sub andb fucomip in inc inc cmp or push sub inc (bad) (bad) (bad) lcall in mov adc cmp stc ljmp faddl fbld dec or jmp stc cmp lcall fs test push xor (bad) jmp pop mov add and into pushf add add jecxz add mov das stc aam or xor inc mov fnstcw (bad) pushl scas hlt dec in sahf jmp sbb insl leave sarl iret mov cli scas mov and mov jmp faddp jmp test push push inc mov (bad) push mov xor mov pop xor ljmp dec lock in mov call and sarb lods sub cmp fyl2x jmp adc sahf or mov sbb sarl xor fsubrs sub ds decl cmpsl mov adc sbb mov lahf or pop mov (bad) jg mov adc xor sub cmp cmpsl inc pop int (bad) ljmp (bad) imul negb (bad) jg scas lcall fldlg2 dec dec popf adc xchg cs sbb mov pop mov imul pusha pop pusha sub dec push decl add or xchg fdivs push pop std or inc fstpt (bad) cmp and pusha xchg scas mov ret cli call fist (bad) (bad) ljmp mov mov sbbl push ja loope loopne pop in jl (bad) (bad) call or xchg test pop (bad) loop (bad) cmc ret jge adc int3 fsubs (bad) (bad) jmp popa sub jbe sahf mov stos inc mov clc push push (bad) (bad) (bad) (bad) sti or inc jns push lcall xchg repz data16 jb lret (bad) mul pushf decb pop andl (bad) (bad) (bad) inc inc jp adc xor int adc or fwait jmp rorb push and (bad) jmp xchg sub jmp cmp push inc pop xchg das and fwait repz cmpsb mov mov mov jnp cmp pushf lods cs cli ljmp jnp ljmp pop out inc in xor mov jmp push loop loopne das nop (bad) pushl mov jl test dec es jo mov jmp lods dec shll or cmp adc (bad) (bad) (bad) aas negb (bad) xor jl pushf outsl pop and cmp push rolb (bad) adc out pop mov (bad) (bad) (bad) flds (bad) int3 lods pop arpl gs sub outsl icebp fdivrl xor lock fildll lcall mov sbb sub adc sbb (bad) icebp pushf sbb mulb add inc in (bad) ljmp xchg neg mov dec pop shll pop jb pop dec xchg mov sbb lcall lret mov jno ret sbb loope mov (bad) (bad) jmp inc insb dec cmp dec jbe aad mov cmpsb fstps push jno int3 xor jg mov call mov scas pop jnp fwait nop les outsl divb (bad) pop (bad) incl test test add movsb lret fwait inc cmpsb push std sbb jns add (bad) jmp outsl fdivrs or add mov dec push test lret sub inc and call mov push sub xchg lahf xchg arpl dec mov dec xchg mov ficompl ljmp adc push jp out movsl push stos xor loop das sar es sbb add (bad) dec std push cli fmuls sbb jp push dec and fld (bad) decl es ja push lock mov xorb (bad) ljmp dec inc iret push enter inc jns in add cmp ljmp or stos mov push ds and and dec call arpl and add push aad (bad) faddl clc into add bound shll out jb bound nop mov lock (bad) mov push sarl out push push mov test and add xchg push or sub dec shll inc mov gs adc (bad) aas add sbb jnp (bad) (bad) fcomip jae jmp pusha neg lods sbb adcl and scas dec clc push int3 push pop daa scas adc push add test pop dec push mov (bad) ljmp icebp int3 mov pop test xchg inc roll clc repnz xor adc lcall jb pusha sbb mov out (bad) (bad) (bad) ljmp pop daa pusha jg add xor push pop fsubl jg cmc hlt mov out xor (bad) call pop or mov cmp push jmp in rolb movsb movsb sub outsb ds xor push cwtl sub adc (bad) (bad) (bad) mov arpl cmpsl cmp or mov sahf fwait and (bad) (bad) (bad) ljmp jl mov pop sbb lret mov mov lods push lret adc adc mov repz pop sbb test add cltd xor ljmp imul lret jo sbb fistp xor xlat loopne (bad) jmp addr16 popa and jl push adc dec mov pop out ljmp inc mov and ret jl jno xchg push adc (bad) (bad) decl add sbb xchg ja fistl imul jo popa or (bad) (bad) (bad) jmp cmpsb xor test add or ja mov mov pop push or sub (bad) jg test js lods cmp xchg lahf pop jns popa pusha mov inc cli mov inc push addr16 push addr16 push mov or xchg loop stos sahf (bad) lcall mov pop mov cmp pop roll jle inc xor sub stos push (bad) sbb jbe daa enter sarb frstor pop and nop cwtl jg icebp (bad) incb call mov cwtl jmp or adc adc leave adc in sbb add pusha mov sbb call repz cmp pop dec imul xchg mov in je je adc inc push or fistl add emms lcall aas mov cs jl ljmp icebp dec or loopne ja test and (bad) xchg je stos (bad) jno cmpsl in int dec repnz push mov gs push mov and (bad) (bad) (bad) pushl xlat dec adc and sub sub clc sarl (bad) add incl inc sti sbb jo sub sub push xchg push loopne cmp mov fbld mov jb (bad) xor repnz fdivr ljmp out pop stos mov mov cmpsb scas and movsb (bad) jae test (bad) lcall push notl outsl es loop mov jg sbb (bad) mov lock jnp stos cld enter mov and push mov push icebp pop xchg sub mov jg je rcll stc lods pop into jmp sgdtl mov imul cmpsl jmp fcmovu dec sahf (bad) das inc test add test pop ds fnsave inc sub pop scas in lods mov push lods dec mov sub add push decl cld iret mov fsub out and in lcall push inc das out and push std mov cmp sbb int sub sbb jg in push adc pop cmp or movsb pop loop stc out fild jmp scas aas xchg bswap (bad) ljmp imul bound insl addr16 sahf hlt fisub fs sub std adc push add pop lahf mov in fwait in das mov (bad) cwtl pop sub xor and ljmp (bad) xchg mov pop mov nop je repz arpl sar (bad) ljmp outsl dec es leave stc fmuls dec int test sbb enter (bad) (bad) (bad) call push mov xor hlt mov xor ret movsb push mov mov sub (bad) decl xchg fdivrs scas and xchg add movsl (bad) sub (bad) fcomip cmpsl popf fsubs mov xchg adc fimull pop cmpl cmpw pusha pop add push clc decl adc jl sub (bad) test (bad) (bad) ljmp popa mov enter (bad) add mov std add jno push test call incl popf push int3 mov cmp jbe sub (bad) (bad) fxam bound jmp sub xchg push cmc out xchg lods insb aad mov xchg icebp call mov mov sbb pop mov mov or mov xor insb jne orl hlt outsl (bad) js jmp jns mov sbb jl (bad) jl add and sbb push cmp dec push pop and mov (bad) (bad) ljmp cmpsl sahf fcomps jb sti adc jnp fnsave movsl (bad) fistp xchg lahf sti mov mov push sub adc (bad) (bad) (bad) cmp fistp std (bad) adc xchg fidivl (bad) cmp lahf pop inc mov bound or mov inc loop ljmp addr16 in push (bad) (bad) pushl int xorl enter mov adc pushl mov stos xlat insl cmp mov inc mov dec mov mov decl sar dec mov fdivr aaa mov cmc and xchg sub ja mov jno stc (bad) (bad) inc subb sub ret popl popf dec rcrb inc pop insb lret push das and jmp mov cvtdq2ps mov ror mov outsb jmp cmp repnz (bad) (bad) lcall stos push jge sub (bad) xor frndint jmp in ss pop (bad) (bad) incl fstpt loop push repnz cmp dec jmp mov xchg insl lcall repnz mov adc ret pusha cmc jae jg mov lret inc push loop,pn rorb pop xor cmp (bad) fidivr out hlt dec popa loopne das ljmp jno inc push push iret fs pop shrd jmp cmp add fnclex shlb add (bad) (bad) (bad) jmp add mov insl xor leave test pop dec ret pop leave iret jno outsl pop mov movsb adc lcall and pop lret out outsb mov and shl jno adc (bad) lcall inc (bad) mov jo aad stc hlt mov xchg pop jae mov outsb mov mov dec out mov pop mov mov mov add pop (bad) scas enter imul roll (bad) (bad) (bad) (bad) push and stos or mov js push jb loopne scas pusha mulb movsb jnp ds xchg mov adc (bad) (bad) (bad) aas outsl push push jne shlb icebp pop cmpsb icebp push ljmp cs xchg leave (bad) in (bad) ljmp jbe mov or sahf dec fsts jne push test mov call push or arpl adc jo test adc test ljmp pushf and cmp leave pop rorb (bad) call test mov xchg sub mov mov mov gs (bad) ja imul add lahf into push and adc in add cltd pop add push loop jecxz (bad) push xchg (bad) scas jecxz mov mov das xor les mov test aaa sub out (bad) insl jnp xor add pop sti add pop ret adc scas daa sar (bad) mov push rcrb jle shrl lahf and std fmul ds xchg lock mov xor pop addl stos loop inc loope imul test ret es and and or (bad) (bad) (bad) cld jne pop popa add pop aad adc rorb mov je push cmc mov add pop sti mov xor xor (bad) lcall sbb cmp daa popf repnz push (bad) mov jp sub fisub dec adc inc mov dec push jle (bad) std scas (bad) aas pop inc dec sub pop and call fisubrl jo (bad) call aam lret negb jne in and into fcmove push mov jle push mov mov fsubl stos push (bad) (bad) (bad) inc mov cmpsb outsb mov nop cmp push aam sahf or jb scas stos mov movsl mov (bad) ljmp into dec jg cltd mov in gs lods sub lods (bad) (bad) (bad) ljmp pusha outsl push sbb mov orb mov ret and add sbb inc inc lea stc add adcl pop mov add lret mov inc inc inc lcall pushl das pop mov push pop mov (bad) lods aam push jl mov mov loop (bad) fs xchg inc push jmp jnp mov inc and jge (bad) (bad) pushl push notb push jnp call test mov cmp (bad) (bad) jmp mov xor test outsl fs mov insl sbb decl lock or mov jl and adc and add jne popf call repz loope rcll add push mov adc push xchg lods pop or xor jo jl jb push inc mov dec and xor jg cmc fstpt aas adc pop xor rorb push xchg add adc cltd insb inc jecxz jns cli (bad) (bad) (bad) jmp cmp ljmp mov inc cmc xchg ljmp xor test sar mov mov push xor xchg xor in out in decl add (bad) xchg dec sbb into cmp xorl sbb inc ja sar repnz push in fcmovb in bnd cmpsb mov (bad) pushl mov sbb push mov jno stos clc mov (bad) (bad) lcall push and loopne test (bad) xlat sbb std decl jb jg (bad) lcall fildll ljmp pop fisubr jb mov mov dec lock mov or lahf xlat (bad) mov mov fsts stc xchg add push mov cli (bad) cmc mull inc jmp lcall pop (bad) xchg imull xlat xlat adc adc inc dec pop mov (bad) fstl (bad) push inc clc mov jmp movsl enter pusha fwait clc (bad) pushl sbb inc lret xor lods mov (bad) ss inc (bad) (bad) ljmp stos rorb js test cld pop dec sbb pop add decl adc add adc pusha pop jge,pn lock (bad) cmp outsb pop je fwait cmpsb gs (bad) jmp lcall mov ss push nop cmp mov sub pop (bad) ljmp (bad) mov into je or aaa jl iret pop mov js ds sub pop push aaa into sub dec (bad) incl add pop lcall out inc push add sbb imul mov mov sahf inc decl dec jns rorb sbb xor jg aas push mov call jl mov rclb mov aam and inc cli (bad) out or stc jle add (bad) (bad) call cmp jl clc stos repnz cld and cld xchg shrb imulb sbb int3 mov adc fidivrl arpl jbe jbe add (bad) pushl jae jno dec jo mov loopne dec in lds lea fs int3 add (bad) outsb mov test mov add (bad) incl scas pop pop lods push les add lcall lcall mov cld jbe sahf scas or lods xchg push jp in out loope icebp cmc push popa pushf (bad) aas add (bad) jmp scas aaa aam fisttpll je leave jb mov mov (bad) (bad) (bad) mov aas jmp inc into sbb sahf fs push fldl out les pop cmpsb sub add icebp lcall (bad) ljmp fs sti or cmc addl inc mov mov addr16 cmpsl jne fcomip lcall jbe push xchg sub outsb or xor test addl das add ljmp rclb ret (bad) xor add push ljmp sbb sti sar push std aam enter in imul lcall push fistp or dec gs sbb inc imul sub call mov leave mov jae inc push scas call or pop push xchg sbb ret xlat les mov (bad) jmp mov inc push lods lea adc mov xchg hlt test incl stc incl sub and nop fsubs xor pop fidivl (bad) (bad) call (bad) hlt nop cmp pusha push fisub icebp sub (bad) adc xchg loope call mov jg push sub pop xchg lds aas jecxz mov sbb cmp stc xor cmp data16 or xchg fnop mov cld (bad) (bad) ljmp (bad) mov cli mov mov lahf dec and rorl imul test (bad) (bad) call and out scas inc (bad) jp movsl dec dec add xor mov push movsl or jp cwtl push or jmp push int3 dec hlt rcll inc int (bad) (bad) (bad) (bad) jnp mov pop subl mov xchg movsb es lret and ds out xchg cld (bad) incl jae cmp das mov lret jo test hlt cmp fcmovnb (bad) pushl inc arpl xchg mov (bad) (bad) fbstp stos adc dec bnd inc fldenv push dec sahf mov adc jg test bound cmp pop jne mov and (bad) lcall add lock or cmp mov cs jmp push sub scas fist ret (bad) (bad) (bad) jg pop out sub jle stc out push mov push cmp addr16 arpl arpl (bad) (bad) dec sarb jge xchg pop mov dec jecxz adc sub arpl pop into push jge (bad) incl pop or mov cwtl or (bad) rclb (bad) sbb (bad) jmp mov jae mov je sbb mov push inc (bad) ljmp cld rcr and mov xor pop inc (bad) (bad) fild loope popf xchg and shrl cmp xchg (bad) mov cld (bad) mov nop scas inc mov outsb mov pushl aad pop xor inc pop cmpsl test sbb dec or cmp bound stos int3 test scas lock add and push das sbb (bad) jg inc dec jmp (bad) fs fistpl stos mov cmp (bad) call repnz pop sbb mov mov lret cmpsb repz stos fldt daa (bad) jmp hlt and fwait (bad) enter ret scas int adc fs fdivl ljmpw lock cmpsl in fdivs mov and lahf pop push push out cwtl adc aaa add (bad) jle jl xchg xchg (bad) test rcll loopne repnz (bad) ljmp lret addr16 sbb or jne outsb shl mov faddl or leave jecxz push imul mov sbb lret repz dec dec shrl (bad) inc jle xor (bad) ljmp inc sbb shll mov mov push je repz pop out jge,pt pop outsl inc ret jg cmpsb or les push add and pushf std imul xor cli sub mov mov xlat sbb mov pushf incb out enter sti sbb hlt (bad) (bad) call lea mov pop test jecxz frstor stos lea jns (bad) (bad) incl push jno push test movsb mov scas (bad) es ret fiadd mov (bad) (bad) aas leave es repnz xchg or pop rolb or pop fld1 inc scas clc push inc jns push out mov popa push rcrb enter jbe,pn (bad) testl pop adc xor (bad) jg aaa mov fidiv pop pop adc push sbb (bad) (bad) (bad) push adc out rcll (bad) adc xor fistl in jp adc pop mov inc cmp xor push push insb add xchg jne pop mov pop xor dec xor mov pop mov (bad) ljmp mov pop mov mov pop jns sbb aas int out xchg arpl int bound add (bad) (bad) (bad) lcall pop jb cmp aad add pop mov cwtl jp jnp les iret cmp push xor cmp and dec scas sahf insl das dec mov mov (bad) (bad) (bad) lcall or imul inc xchg fidivl adc addr16 cld cmc aam mov decl test mov jo dec jge cmpsl imul cmc (bad) (bad) jg lcall push scas mov cmp mov stc add (bad) fild mov loope loop clc inc fcomps (bad) jg cwtl mov ljmp jbe fbstp (bad) sbb xor pop or jae leave adc loop call int3 add les sbb aaa inc mov adc fs loope cmpsb add (bad) (bad) call fwait add fdivrl (bad) mov cvtps2pd cmpl sti inc dec cmpsl push clc fwait pop in loop sbb pop add incl mov inc and lcall shll add xor test mov incl sbb sti or inc xchg mov xchg inc in aas lret lahf mov cmp add stos or xchg scas call (bad) mov outsb mov (bad) mov bound roll call mov adc ret mov mov mov (bad) (bad) incl scas lds out mov push clc ljmp mov xlat clc (bad) jno ret (bad) (bad) (bad) mov jns int3 push scas loope out mov lods pop mov mov jl sar pop mov divl (bad) mov insb adc cmc xchg pop sub cmp shlb jg bound rcrl ds ljmp hlt lcall lock push aas mov jp jb inc add loop das cli ljmp xor int3 dec push cli je push add (bad) fldenv aaa xchg lcall mov fisubrl into popf cmp mov cli icebp mov idiv (bad) (bad) jmp cmp push in lea lret adcl (bad) (bad) (bad) (bad) mov repnz daa enter mov out mov es (bad) decl addr16 and mov mov dec pop roll and xadd add decl imul xor adc push dec (bad) jg dec arpl mov js cli and sbb mov adc lock ljmp or inc jno (bad) cwtl and movsl inc dec mov mov cmpsl jmp sbb pushl inc sub (bad) or testb (bad) stos add lcall clc call cwtl ja out fiadd test repnz (bad) jmp fsubl cmc adc pop adc jmp dec push icebp pop jne mov or mov jne inc scas sub (bad) (bad) mov pop jae sub iret pushf dec dec push iret cltd dec sbb lods and incb test add ja fildll jbe and ret aas push mov decl (bad) leave adc or and out lds push sarl repnz (bad) push sbb mov cmp rcr xchg aaa and mov loop js (bad) lcall int in scas (bad) imul arpl sbb (bad) (bad) ljmp pop in inc cltd jle sti adc and jle cli in and outsl sahf mov sbb jmp xchg (bad) mov out ja (bad) lcall cmp xchg rorb pop aas cmp faddl call inc adc js lahf test pop lock and inc or (bad) jg dec mov push add std movsl cs les ret call aas (bad) (bad) (bad) push add stos adc adc fistpl xchg (bad) adc xor (bad) aas leave jo or lds add clc xchg dec (bad) fucomi (bad) (bad) (bad) incl mov ja in scas push and scas xchg xchg mov mov push popf or (bad) (bad) mov lock lods fsubl and cmp fistpll les (bad) sub std ret cltd push add xchg and push xor or cmp cmp ss aaa dec clc (bad) jg mov and push inc loop push sbb push ljmp xlat test out cwtl stc mov rclb sbb mov aas jo ret xor cs mov push (bad) jmp xor loope ret sub lods push xor orl dec xchg jg xor push jecxz je daa dec pop push lcall xchg add stc test (bad) (bad) call subb jmp mov insb adc sub in sbb jo aam add jge arpl pusha mov test pop (bad) (bad) jg stc repnz ret nop dec cmp mov das cmp lods repnz (bad) jg decl data16 jno aam mov sub lahf nop sbb enter imul das outsl or add out outsl (bad) std cmp (bad) (bad) pushl inc mov lods sub xchg sub sti stc and jno ficom adc dec ds insl cmpsb mov call push mov enter lods (bad) push xlat (bad) (bad) (bad) jmp mov out pushf xor pusha push loope (bad) scas subl movsb clc xchg jo aas and call or cli divb and mov pop fwait imul (bad) (bad) ljmp fs call push or sub icebp mov mov pop loopne mul cltd test fist stos std (bad) aas jo and sub jle scas test mov cli (bad) call mov rcl aad daa icebp pop mov lcall or outsb fisubl notb jbe in pop cmc ljmp mov das mov fistp push sub mov pop leave fs stos scas dec (bad) push std mov test inc in fildl xor jecxz (bad) (bad) (bad) (bad) cmp or rcl mov in push pop xchg out fld cmpsl in or ret (bad) jg or ja mov rcrb push mov pop sar sbb add or outsl cld (bad) lock mov mov test rcrb int mov pop std incl mov mov mov and sti and lods (bad) jg add jb jmp sub pop xor mov rclb clc lcall repz movsl jae sub xchg ja inc mov add add (bad) sbb and (bad) out mov dec and je sbb scas mov cmp jo (bad) cmc (bad) popa jns (bad) (bad) (bad) jmp pop inc cmp push (bad) xchg or orl iret or (bad) ljmp sbb adc and push nop (bad) (bad) (bad) incl repnz pop push or mov pop movsb cli test inc cmp sub xor (bad) (bad) jno movsl xchg jns and test inc sahf leave mov gs pop cmp (bad) (bad) out pop lods ret add xor mov test popf (bad) xchg lock addr16 scas jle loop mov scas inc incl movsb mov movsl lea jbe imul nop lock push clc bound scas add popf mov (bad) jmp dec and jle addr16 dec dec mov add pop mov mov paddusb (bad) (bad) mov xchg clc sbb repz iret out cmc jg or mov orl call addr16 mov mov (bad) (bad) jg sti dec adcl ds dec lret rolb cmpb (bad) (bad) decl mov movsl fsub aad pop and pop jno mov or jl mov ss outsl (bad) outsl xor (bad) pushl and cmp fwait and mov pop inc xchg les push in mov stos enter mov pop insb clc xor adc or jne dec cmpsl lock popa lods xchg adc dec shrl nop cmp (bad) fidivr fsubp pand inc or std lods jno xchg mov lds daa stc dec adc in xor (bad) or mov shrl sub (bad) (bad) (bad) (bad) out pop adc mov cmpsl mov mov mov rcr mov ficompl std jmp das stc push cli in push mov adc cwtl mov in jno (bad) (bad) (bad) fdivrp jb sub leave fsub loope (bad) mov or outsl lea mov test hlt and mov insb push movsl bound ljmp add or mov jae ja adc inc pushl mov add scas sbb loop push inc pop mov or pop in pop out sbb lods mov jmp cmpsb pop lods and popfw arpl (bad) dec and test jecxz push mov ds xchg mov (bad) jmp xor pop mov mov adc inc scas sbb mov lods xor sti mov xlat xchg mov pop xor repnz jecxz add ljmp push std imul mov push jo and inc jns in mov je sbb sbb gs inc fcomps lods xchg push push xchg insb aaa idivb mov cmp xorl bound fcoms jp les pop (bad) (bad) jmp mov push sub mov rcrl add es cmp int3 test mov or and jne (bad) not or cmp call mov xchg xchg das sub mov (bad) (bad) ljmp push movsb xor push adc sub or call xchg popf lahf notb xchg data16 jg (bad) (bad) cld inc mov jecxz test xor notb jp ljmp add sbb mov or xor (bad) (bad) (bad) call add out jecxz push mov mov sub jae js ret dec (bad) dec les (bad) lcall push shlb stos pop lock dec imul add (bad) (bad) jmp stos mov rcll es into mov cwtl inc icebp mov jnp inc cwtl ljmp aad inc icebp xchg lods cmc fsubs stos decl inc cmc shll push js adc adc out or (bad) jmp adc lea push dec shrl es jmp (bad) ljmp call pop and in jecxz mov fstl (bad) hlt inc (bad) jmp clc (bad) (bad) call cs inc mov je xchg dec adc xchg xchg ret pop dec clc dec aam (bad) ljmp aam in add push adc add (bad) out clc (bad) push nop inc into into pop pop (bad) pop testl cli mov adc mov les jns inc push adc (bad) (bad) (bad) (bad) fsts rorl push push aaa aaa ljmp mul xor out cmpsb adc sbb and inc fildl test stos ss (bad) aas loopne push repnz dec (bad) (bad) (bad) decl push mov mov sbb pop xchg xchg jg cmc pushl push adc movsl push sub adc mov stos iret popa (bad) aas adc mov (bad) repz call sahf mov movsb pop scas lock (bad) jmp pusha mov adc ljmp subl aaa push xlat dec cld lcall (bad) xlat int jb fidiv jecxz inc aaa rcll or ljmp jbe std testb mov arpl inc sub in scas pop jmp into (bad) jne (bad) dec mov aam push adc add mov pop lcall (bad) (bad) stc or ss xchg mov cmp xchg xor test add call out (bad) bound es popa jmp add rcrl jne cmp (bad) jg cli push cltd mov fiadd mov mov adc ret (bad) jle pop cmpsl (bad) cmp adc test xlat scas in xlat (bad) incl loope mov add jnp loope arpl jb (bad) (bad) aas test roll enter lods mov mov add (bad) (bad) jmp iret sbb fnsave xor cltd idivl cmp and jae fmuls add push daa aad scas xchg popf mov iret push out (bad) (bad) (bad) lcall aaa mov or sarb pop pop add addr16 mov cmpsb sbb jne stos (bad) cmp loop add (bad) mov out ljmp ja dec cmp movl subl pop jl popa (bad) pop nop mov es cli dec push lcall lock jmp lcall add push dec imul (bad) jmp mov and test sti out pop (bad) pop xor xor cmp jle jb hlt push fsubl mov or sbb sub jno inc and arpl mov mov out fadds into fidiv in jne shrb hlt pop jecxz (bad) lcall imul xchg cmp ds sbb jno or mov push mov pushl sbb addl inc loope lcall xchg sub mov pop lcall (bad) cmc fistl mov and jmp ljmp popf (bad) (bad) ljmp loop mov mov mov dec shr adc jge xchg xchg add incl pop dec cmp aas flds in inc clc jg nop add imul lahf cs (bad) dec push add std mov jmp jp js pop cmp inc mov add mov movsl cmp adc jecxz pop mov jnp nop (bad) cmp fdiv incl cli adc pop xchg daa ror pop (bad) (bad) (bad) jg mov mov adc icebp fisubr in or jnp sar subl jne mov or outsl jno (bad) (bad) (bad) jg sub sub jae xchg (bad) icebp jg mov (bad) cmp and stos sbb sti not imul fwait lods cvtdq2ps incl outsb jae mov (bad) lret cmc jp iret cmpsl mov pushf adc (bad) incl pop pop dec and or rep int3 stos jl pop mov jmp aad xchg or jg (bad) jg mov or cmc cs es adc (bad) (bad) (bad) (bad) pushl pop fbld repz lret adc sti pop aad (bad) lcall dec mov adc xor mov push sbb mov xchg (bad) lcall mov push sbb ret cmp jb subb (bad) fstps mov xor or popa push lds or loop incl cli into popf jns push xchg adc lret cmp call cmpl jb ljmp dec jb movl inc inc sar ja lret sti sub call push jmp add xor imul clc loopne aam repnz cmp outsb fldcw stc inc lods jl je xchg flds inc fwait jno add jmp pop adc decb in ret pop cli (bad) (bad) decl mov loop (bad) rcr out cmp mov ret xchg (bad) ljmp pop xor movsl dec mov movsb mov (bad) (bad) lcall and in add dec incl lret enter lods ret jnp std ljmp stc fdivs icebp mov aas pop and mov xor (bad) pushl (bad) mov jne pop jb and inc into jecxz inc out pop pop mov (bad) inc push (bad) mov xchg (bad) (bad) call or xor cmp inc (bad) mov pushf (bad) repnz nop aam pop and icebp inc mov lods cmp bnd incl repz xchg adc mov cli in (bad) (bad) call out and cmp mov (bad) cmpsb cmp ja pop sub push mov xor dec xchg cli (bad) (bad) outsb xchg sbb stc cmp sbb sub mov das sarb jae jne or mov inc outsb std push dec imul xor cmc mov dec pop lcall and std push fs mov pop loop stc mov xchg js (bad) (bad) pushl mov add inc mov xor rolb loopne repz cmp add push add decl mov xlat dec es xlat inc cmp in and into jmp rorl sar adc pop cli sub fmuls in data16 or mov enter add fbstp pushf out ret (bad) (bad) (bad) out xchg mov adc cmp int cmp (bad) (bad) push lock add (bad) adc push cmp lds (bad) lcall inc aaa cli jae cwtl or pop movsb lret mov xor js lock fcomip jmp ficompl xchg adc inc lret mov test jge sbb ret mov inc jnp sub dec (bad) lcall and or sub or das mov xchg (bad) je mov popa cs popa nop stc test and aam addr16 (bad) jg mov movsb popf movsl lea cmpl addr16 rcrb jbe (bad) jg daa icebp push pop xor addl add rcll (bad) xlat xor jg mov jns aas sub leave mov and cld jp cld (bad) (bad) call sub cmp int xchg add lea jl jb sub inc je movsl sub mov incl push sub dec jmp fcmovb call pop add lods pusha (bad) in pop aas and jmp add mov mov adc loope xor inc jp (bad) fisttp push pop xchg add push loope and ret decl outsl fwait clc arpl xor dec test dec inc push jb jo mov into pop cmpl ret mov (bad) jg push cmc jecxz pushf cmp dec pop inc xor fisttpll into mov inc cmpsb sahf mov (bad) jmp mov xchg bound loop pushl xor mov mov fcoml (bad) (bad) call cmpsl mov adc enter loope clc xor adc or (bad) jmp push push int mov lcall push dec add incl mov leave sub je in xchg data16 fisub pushl sbb or inc es jge cmp mov or (bad) mov daa jne mov call nop stos mov (bad) (bad) lcall mov or mov sbb insb int3 sbb cmpsl jne inc std cwtl lods jge push cmp call mov cmp leave jg pop sub (bad) lods add add daa rolb pushf bound iret movsb bound inc sbb xor cmc mov sbb xchg add or incl lahf push int3 lods jbe xlat pop stos ret pop ror (bad) aaa add mov or js mov or lock lods mov mov call add loope and push (bad) ss lahf ret sbb test pop push (bad) fcomip repnz flds inc call (bad) fist fisttpl movsl mov cmp lock (bad) lcall pop ret sbb sub lods jp dec aaa xor cmp fdivp (bad) push push int or movsb xor in in loopne (bad) pushf inc das lcall cmp mov lods movb mov cmp les dec int3 inc xchg fwait jmp mov jno aam stos gs enter and std (bad) call ret mov movsb adc dec pop inc fistp inc incl inc (bad) (bad) (bad) aas adc mov in cmp rcrb gs mov (bad) (bad) inc or jg sahf stos jge in ja sub movsl stc mov inc dec lret call ljmp sahf dec lcall push lahf inc mov xor pushl aaa inc pop gs cmp inc fidivrl sub test (bad) (bad) (bad) jg rolb bound or imul sbb push xchg dec leave (bad) (bad) jmp inc sbb fstpt push mov jle (bad) (bad) (bad) aas mov insb mov jmp fwait sbb insl (bad) push out jnp repz sub adc (bad) (bad) (bad) fild sbb aad mov popf in mov rep inc rorl ljmp (bad) mov push outsl mov adcb inc orb (bad) (bad) ljmp jmp nop scas xor jg mov mov in popa pusha fcomps pop stos paddusb and popf inc adc (bad) (bad) (bad) decl incb arpl add js out test mov outsl add dec enter rolb ljmp jo or pop add int xchg pop fst and adc (bad) xor lcall inc mov xor or repz sbb (bad) call out (bad) lock and rclb mov cmp (bad) (bad) jg (bad) imul test and movsl jg xorl movsb pop fmul jecxz sahf add xchg xchg mov adc xor sbb in in (bad) (bad) (bad) inc sbb outsb sahf ficoml ljmp inc and cmp xchg into notl out sarl sbb int3 test jg insb cmpsb push jo fcmovnb sub mov add or ljmp sbb inc (bad) xor das aam xchg leave push out adc push leave or xor (bad) mov lcall scas cmpsl push pop (bad) (bad) (bad) jmp addr16 movsl aam pop push cld int add mov lcall mov test and incl enter cmpsl fistp mov add daa mov repnz repnz cmpsl (bad) (bad) (bad) decl popf aam loope fisubr dec sbb xchg push mov pop or enter sar decl add jae test inc jne (bad) (bad) incl adc add (bad) adc out aad add loop mov fwait inc loopne lcall sub rorl fstpl ljmp popl das int sub popf add xor imul pop jae add and (bad) decl jno lods mov loop or loope or imul pop pop inc call inc xor das shrb dec cli in movsb sti andl mov mov in sub add xchg cld fcompl daa add xchg aaa lock lods mov ret sub into pop adc mov lea nop pusha aaa cmp in (bad) out mov or (bad) pushl (bad) mov add sbb rorl cmp xorl sbb mov es and cmc movsb mov xlat push rcl popf out (bad) adc popa rorl cltd push xor mov (bad) test sub and (bad) lcall stos xchg xchg add mov sbb push (bad) (bad) (bad) pushl or loopne dec idivb push mov jg cmp icebp mov aas jbe mov repnz inc adc cld jg aam lods nop inc or sbb lcall in add pop insb das jbe mov shlb xchg (bad) out dec int3 xchg mov pop jmp fsts jbe (bad) (bad) incl lcall jmp add ljmp stos orb mov test mov push push xlat (bad) (bad) (bad) (bad) dec sub add xchg push (bad) testb pop inc insb mov stc sub xor jno int3 loope stos mov mov pop xor in fsubrs scas jae mov loopne in incl or dec mov and loop imul aas inc mov jmp mov or (bad) mov lea aas inc pop scas int mov cwtl and negb out mov in jmp jmp call scas (bad) mov mov rcr int (bad) aam jle mov cmpsl add idivl fidivrl or insb (bad) (bad) (bad) inc (bad) cwtl cwtl imul push mov dec add outsl imul fildll cmp cmpsl (bad) decl ror movups subl je outsl (bad) (bad) (bad) call ss sub in incb daa in lcall (bad) cld sub cmp mov push (bad) incl stc jnp jns inc and push fstps pop fwait jl ret jg (bad) jmp insl cmp adc push cwtl mov inc mov mov add jg lret mov inc ss pop addl add adc (bad) (bad) mov or loope xor lods mov mov cmc repnz call mov mov sbb fwait lods push fwait roll mov call mov add fisubrl pusha mov cmp pop jg and dec (bad) call mov mov mov cwtl out test pop (bad) ljmp arpl pop sub mov bound out fdivr mov push (bad) (bad) jmp pop add (bad) gs fiadd loope xor sbb pop mov mov bound (bad) push mov cmp stos loope decl mov push mov mov mov and lock call xchg out jmp jl scas (bad) (bad) lcall adc cltd outsb xchg test inc cmp aad inc mov daa sbb pop sti dec sbb lock (bad) cli mov ljmp inc out test inc cld dec push and (bad) (bad) lcall test xchg (bad) rorl lcall add push dec adc jle jmp aas xor push aad rcrl fistl inc stos sbb js in fcomip (bad) call arpl cmc div or xchg dec call or cltd cmp (bad) (bad) (bad) mov xchg mov ret rcrl (bad) fcompp sub push mov out pop fnstsw mov jg inc cld pop pushf fs xor fs cwtl xor mov or nop mov jo dec sbb fild (bad) icebp out pushf mov inc loop in cmp xchg cmp sub mov mov sahf add or in icebp iret mov shll popa xchg call jmp mov leave and jno or mov sarl dec shl xor ret and cmp dec add aaa xchg es push xor cld (bad) ljmp sbb mov jmp sahf jns add js mov and mov mov arpl aam xchg pop push (bad) incl pop and (bad) mov pop imul imul jmp out xlat repz rolb rcrl addr16 push add subps jns rorb std pop jle mull sub sbb push adc fwait jno into push ss jnp xchg fldl ljmp cmpsb inc jo rcr jo sbb add rcrb ljmp xor stos in add fisttpll dec cs jg ret (bad) int inc sbb dec mov dec cwtl or int aam mov mov ljmp into jp jns pop cld dec and cmpsl (bad) decl or cltd adc out out jo mov fldt cli fist in lcall sub out stos jnp cmpsb and sub test add (bad) (bad) in ja and sub test dec mov sub stc mov (bad) (bad) incl lret sub push jge inc loopne xor ds mov and (bad) call jecxz ret sub inc xchg push xlat ja xor mov imul cmp fldt mov jmp dec lret leave fdivrs mov xchg mov loope or in in loop sub sub clc bound std es in jp push fsts ret test mov call (bad) xchg test scas lds sahf test mov cld (bad) inc inc mov dec out sub and or test iret (bad) (bad) decl mov arpl inc loop hlt movb jmp xor (bad) jmp xchg xchg out mov rclb (bad) (bad) (bad) jg jno jg int add pop fidivl and cmp dec adc sbb sub (bad) ret fs jnp loope sub icebp mulb jge (bad) (bad) jg fmuls push (bad) sbb dec fwait mov push add in inc jns sbbl cmp (bad) fldl andb ret push push pop das or (bad) lret orl add subl nop adc aam lret stc xchg nop pop (bad) (bad) (bad) (bad) cmp pushf stos jb (bad) dec bound jecxz push push faddl dec cs mov movsl cld push roll cmp shlb sbb in (bad) ljmp lret mov ss loope inc jecxz jle cmpsl and push add aad iret das sahf xchg jnp mov loopne leave (bad) pushl test mov pop icebp aaa les int3 mov incl push sbb jo (bad) adc dec or xlat cmp (bad) jns,pt and mov and xchg push and mov dec inc fsubrs xor ljmp pop inc popa ss or in lahf insl out fistl fistpll (bad) (bad) or daa stc (bad) lcall mov or pop js jbe pop mov shrl (bad) (bad) (bad) (bad) ljmp inc sbb pop add scas hlt pop shl jge xchg outsl call (bad) mov loope pop repnz pop push sbb dec movsl jg lcall sbb pop mov movsb es lds (bad) fdivrs mov jmp cmc jne mov dec gs xor dec (bad) sub xlat (bad) ljmp test rcrl sarl out rorb ja (bad) jmp push fisub and pop mov lcall hlt (bad) cmp jl jbe mov jnp mov call jmp fstpl pop (bad) lret adc loop decl inc or pop mov decl jns mov std sub divb sbb xlat in cmp aaa lds (bad) call stos repz dec (bad) call rcrl (bad) inc jo xlat dec cmp clc (bad) jae and jnp fildll xchg stos and adc aas jo push (bad) push out (bad) loop add sar (bad) dec and mov push xchg xor mov or jg cli jg movsb add iret data16 aad adc (bad) incl scas test dec ljmp lds ret sub std pop out jae das cli jmp stos and xchg lods fldcw inc xchg mov xor sub (bad) xchg (bad) (bad) (bad) decl insl sbb sub shl aam adc orl test mov xchg mov and aaa add je jne xor cmp icebp pop (bad) (bad) call mov fcomps sub enter cwtl call fwait cmpsl pop test and test call and mov pop xchg mov scas add fstpt cld xchg dec cmp in (bad) jae mov into mov cmp mov lods inc stos sahf and int3 lods bound pop (bad) (bad) decl (bad) sarl pop mov out mov jg (bad) aas and xor cmp scas or xchg cmp in push cmpl insb adc out adc sub xor sub pop xor xchg js or (bad) (bad) ljmp sbb mov sub push dec sbb loope add sbb (bad) (bad) lcall stos sub jmpw aad std dec inc fmuls pop jns cmp xor jl jge (bad) (bad) jmp adc push and add loop fimull (bad) mov mov mov rcr inc (bad) pushf aas (bad) xor fsubs add sub lcall repz pop cvtpi2ps pop (bad) js mov (bad) call out jge stos popa sbb jo dec or mov sbb add add sub mov cmovbe (bad) incl push cmp xchg repnz push sbb aam jle adc pop repnz cmp std (bad) (bad) decl adc ss hlt cltd mov push loop (bad) lods cmpsb daa mov mov adc popa jmp xchg (bad) (bad) (bad) pushl (bad) cltd loope mov test mov lods js bound and pop dec loopne cli mov cld and xchg sub mov pusha mov xor push jmp dec dec nop gs (bad) push dec enter add (bad) (bad) push sbb daa push mov je mov enter ja sbb pushf int jg std push cmovs (bad) jmp jg adc in outsl repz es dec sub pushf lods (bad) (bad) inc adc (bad) adc (bad) adc cmp lods ja sub lea push mov dec cltd add jle mov fwait add pop inc ja aam pop cld adc (bad) (bad) (bad) (bad) ljmp mov loope sub mov call sbb mov cli decl jge mov sub jns push out push lret xchg (bad) (bad) incl in jecxz push and sub jae push imul (bad) mov shlb mov sarl sub lret (bad) call rcll or popf test ds mov inc rorb xchg sbb (bad) (bad) (bad) pushl mov and in or fcmovnu xchg push sub cmp (bad) mov ds call and sub nop inc dec in mov (bad) (bad) jg pop inc and lret pop jae mov iret shr stos mov cld mov daa into int mov sub fstps dec mov or aaa adc mov call push je lret divl mov into sti mov test push push dec bound call inc cld cmp sub mov into mov cmp (bad) (bad) jle les and push jge xchg cmp mov and decl jg push shl jnp rcrb inc jnp mov sub (bad) (bad) jmp test rcrb xor ja movsb mov jb icebp mov xchg stc (bad) (bad) incl and es stc ret xlat stos mov mov aaa daa jns cmpsb (bad) ljmp int3 fiadd hlt pop xlat mov add pop jno or pop (bad) (bad) (bad) ljmp (bad) repz test dec xchg pop push push arpl dec push mov lret sub lods push sbb (bad) call dec cmc dec inc popa dec jl lods and mov ja lahf xor (bad) (bad) (bad) (bad) js popf sbb (bad) push enter pushf das (bad) pushf movb jle and mov sbb push fs add es ljmp (bad) dec loopne sbb or inc insb scas faddl push add ret mov add push sti movsb outsl mov movsb xor xchg es aad (bad) std (bad) lcall iret aad pop mov movsl ja lret push jno pop mov sbb movsb mov ja leave jbe xor ljmp pop or into cltd iret ljmp decl mov insl iret cld ret jae ficompl (bad) (bad) cmp xchg int nop mov sub scas in ret mov (bad) fildll test orl xor add (bad) (bad) mov adc imul imul decl rclb jle out or outsb leave in sbb bound mov out call incl testb out pop mov add (bad) (bad) incl cmpsb (bad) mov aaa cmp jp pop nop fimul shll scas xor jg push cld call adc cmp les jbe jp and add cli int shll cwtl clc sbb imulb cmp ljmp push sarb pop jl dec icebp outsb sub jmp mov dec sub loop or xor addr16 ljmp dec xchg push cmpsb cwtl sub pop stos xchg lods popa xor (bad) rcl or int mov loopne clc pop cld lcall mov cmpsb or jl lcall insl (bad) (bad) jg int aad addl out sti insl dec imul sar sbb adc push dec sub jecxz mov cmpsb std sbb adc adc ret and mov adc inc inc jp or push mov lods and clc (bad) push push sbb or movsb test in rol (bad) mov xchg ret into add mov jo hlt loop test mov xchg lds cli adc mov jle cvttps2pi cs push outsl iret lcall add sub outsl fdivr test jmp xchg xchg mov loop notb fstpt adc (bad) popf xchg cld (bad) (bad) pushl sub cmp xchg dec js pop scas es (bad) rorb or cwtl adc (bad) ds push sarl adc mov (bad) call bound in test push std hlt dec mov rcrl call clc (bad) call jns rorl aas lret xor jle mov je mov add (bad) jg xor push jp test xor (bad) sub sub cmp (bad) (bad) mov inc aad and std xor (bad) cmp jb push mov cmp call dec lahf mov or cmpsl push mov jg call fisttpll mov push pop push (bad) inc mov push scas subb std ljmp fs or addr16 es (bad) (bad) (bad) incl stos js push in push cltd jbe addr16 cmp mov lods add loop data16 sub xchg dec (bad) (bad) jmp daa dec mov nop in loope (bad) nop jmp int mov stos (bad) (bad) (bad) lcall add mov sti dec jge inc je lahf (bad) in cwtl mov dec cmc pop pusha jmp mov dec inc das push xchg out xor sahf xchg roll sub cli xor xlat xor nop jle cli pusha mov or xchg out or adc xor adc daa inc lret inc sub lds adc aaa movsl test sbb dec mov pushf cmp inc sbb (bad) pushl add idiv cmpsb fildll adc dec lds push insb fnstsw cmpsl dec clc ljmp fildll jbe inc pop cmp (bad) (bad) lcall adc pusha out data16 pop pusha xchg and imulb push int popf (bad) nop mov fwait test sub stos cmp push decl loop xchg movsl sbb (bad) (bad) call dec adc into fnstcw dec push jg mov out xor repz mov xor adc mov sahf les out out nop mov out mov cmp jo fidiv ljmp adcl faddl mov aam push jecxz call fs mov test inc and (bad) mov push mov stos roll lcall (bad) ljmp rolb pop lret rcll movsb pop es out jno inc jo addr16 scas adc aaa imul add out mov (bad) jg dec popl mov push push leave mov aad test (bad) ljmp aaa add add xor in mov inc int decb mov dec fnstenv and cmpsl cmpsl lea (bad) (bad) (bad) incl xor jmp cmpsb jge iret fcoms movsb sub xchg cmp xor xchg push notb (bad) lret (bad) (bad) decl jmp ja xchg push leave xor pop ds dec mov jg xor out shrl loopne outsl ss cmp roll sub outsl jo mov (bad) pushl mov dec movsl das and add decl sbb push scas in xchg pop fnsave (bad) (bad) incl dec or and arpl jae (bad) (bad) jg inc enter sub addr16 or mov aaa dec xchg and (bad) (bad) (bad) call cmp xchg pop push dec fsubs sahf push or es (bad) fwait fs jp mov push loopne (bad) call (bad) out mov push jbe and outsl lret pushf xchg mov adc (bad) lcall or rolb out mov addl test xor mov (bad) cld (bad) incl loopne and push notl mov daa popa push (bad) call cmp imul push adc arpl mov daa push or dec pusha popa add adc (bad) pushl xor fdivs movsb xchg sub (bad) (bad) and sbb adc (bad) pushl xchg lods or (bad) dec fmuls push mov jbe lock out cli pushl dec movsb lret add xchg mov adc xlat mov or call (bad) jbe dec mov lcall mov popa or push out movsl push (bad) stos movsb popf adc fnstenv shlb inc add sbb ret xlat (bad) lahf scas add lea or and test sub jecxz movsl idivb incl dec adc xchg (bad) xor xchg mov stc (bad) (bad) jg pop daa pushf mov hlt and fcomps mov ret out jmp add xchg lock dec push xchg aas jae rorb cmp jmp cmp cmc pop fisubl test and xor sub xchg jecxz (bad) jo sub ljmp cmpsb fsubr aam or mov insl ror jne dec andl pop and addl inc cltd repz mov scas jmp cmp ror cmc mov or imul jg xchg and into xchg cld (bad) cld cs xchg in outsl rcr in push inc test (bad) call fldl pop scas jmp enter imul mov pop sbb (bad) (bad) incl cmp inc cmp fimull movsl ds inc push inc aad jl lods (bad) (bad) mov or movsl dec dec mov or sbb inc or inc dec fldl (bad) jg dec lock adc gs scas gs or idivl add mov xchg or (bad) mov xchg dec cmp cwtl popf xor mov (bad) xchg sub in nop pop mov inc dec mov add cmp sub fiaddl test dec add lcall (bad) call lds jns outsl jne xchg (bad) jbe mov sbb and adc in in in adc (bad) mov jmp xor (bad) xor push out iret pushf push rol (bad) jmp dec inc jp pop push xchg or bnd dec in and (bad) (bad) ljmp mov (bad) jne pop push hlt insl (bad) jbe aam xchg inc es outsl push (bad) movsb clc data16 dec cmp je stc cmpsl (bad) fsubr push xchg adc (bad) (bad) dec pop ret into fsqrt mov adc push (bad) push inc je sub in addr16 lods xchg sub inc xor das stc (bad) fnsave rorl jle xchg ret es (bad) mov (bad) (bad) ljmp jb or inc sbb inc aaa mov in push aas rorl push add mov in jl daa push pop in hlt js out dec addl decl lods xchg imul fwait cmpsl mov outsb popa ja es jg add jl inc lods decl (bad) xor inc mov mov ror jo pusha or loopne xor xor sub (bad) (bad) decl jecxz xor xchg cwtl leave jmp ss (bad) rcr (bad) fidivl pop pop inc dec lcall or mov jno (bad) (bad) (bad) (bad) mov jg je out in and sbb fisttp int3 xor push xchg mov lcall stos jmp scas jno pop cmpsl aaa hlt sub test (bad) mov mov (bad) or pop and in xchg (bad) (bad) (bad) jg shrl fwait (bad) mov xor adc jecxz jg dec in lret aaa aam mov insb data16 rol out jbe test jl push (bad) lock (bad) jle xchg out pop out mov out jmp xor lcall push stos aas aas push ja in in adc mov mov or jbe mov sub and (bad) (bad) jmp mov lock mov out adc inc mov push pop cmp jmp in jns adc aas xchg repz das xor sub push jecxz ljmp call cmpsl pop and outsl sub mov inc int je out cwtl pop addl and addr16 fistl rclb or test inc (bad) hlt mov push sub les scas lret loop movsb arpl xchg lahf jb xor decl inc lret mov scas inc sarb (bad) (bad) (bad) pushl les negb cmp stos cmpsl inc ret mov add jne pop repnz lcall (bad) jno addr16 pop jecxz dec adc (bad) (bad) (bad) ljmp ds ret aad (bad) cmp stos pusha movsl pop nop mov js imulb xchg ret loopne (bad) jne xor inc jmp call fs xchg sahf (bad) mov mov (bad) (bad) (bad) inc mov or cmp inc pop ljmp pusha gs sbb pop imul mov call and or aad fstpl int cmp mov fwait (bad) aad mov push scas ret mov push shll loope pop adc lgs sti decl ljmp xlat push dec jbe jge cmp aas dec loope or jmp (bad) (bad) clc jmp mov pop mov jo or das mov lahf movsl call fsubr sbb jmp push mov dec mov insb and movsl mov cmp mov (bad) (bad) (bad) lcall and fwait out (bad) sbb or or lea adc (bad) xor and das das push and fwait push mov xchg xor mov js pop mov fwait icebp decl ljmp ds push imul stc mov (bad) (bad) (bad) out pop mov rcrb xchg mov fisttpll std jbe mov (bad) (bad) lcall rcl cwtl dec mov dec mov mov imul xchg arpl cld test pop and cs push cs lds stc add jne fucom xor pop add mov call mov push adc add xchg (bad) (bad) sub xor mov daa das stc (bad) ljmp pop mov or fwait into push mov sbb mov (bad) pushl out mov inc sarl in es pop dec shrb sub xchg add fldenv (bad) (bad) fnstsw cld jnp push mov xor adc (bad) lcall sub ret pop sbb add int3 pop dec xor lret lret loopne out in jg sub lods incl push pop push sbb lret and mov cmc cld (bad) (bad) (bad) mov mov dec clc fiadd push jmp aas shll punpcklbw pop add and sub loope subl dec (bad) mov mov outsl hlt loope xchg imul das xchg test cmpsl xor adcb mov pop sub arpl mov xchg daa outsb bound cmp shrl ljmp call dec add sti (bad) in mov jno stos fs push and icebp cmp daa jae mull popa hlt mov sbb das jae push clc (bad) decl icebp jecxz cmp lret push jl add jae add push (bad) or (bad) call (bad) mov mov hlt mov fdivl in aaa cs pop xor movsb mov jo ret xor imul inc sub fimull test jge mov push jno fnop dec mov pop lock cld mov cs out punpckhbw pop sbb addr16 hlt xchg insb ljmp sbb imul stc sub sub das ja or (bad) (bad) (bad) (bad) aam das enter inc lret insb or xchg inc clc ljmp out or xchg pushl js out ja mov (bad) jmp out push into stc add sub adc adc fdivs cmp (bad) or cld jno xchg decl (bad) and pop mov rcrb sbbb pop or mov or jmp mov pop or push fwait lods lcall call call cmp jp adc loope decl lcall pop sub sbb or mov mov mov (bad) (bad) fcompl jno out xor pusha add rep xchg xor (bad) (bad) (bad) ljmp push and push (bad) icebp mov or xchg pop cltd fwait push cmp nop (bad) (bad) lcall (bad) rcrb dec addr16 flds test pop xor fsubrl loope test adc (bad) (bad) jg outsl xchg sbb pusha icebp sub sub mov jnp mov dec jl in adc or add cmpl pushl je pop push mov fadd int3 rol pop incl push mov sbb sub inc popa ds mov xchg xchg mov ficompl pushf add cli mov pushl jno adc pop js (bad) jns loope jo cmp adc gs jg ljmp mov ret movsl addr16 mov jno sti inc inc inc (bad) xor setns pop cld call jp daa and aas mov aam mov mov fdiv (bad) mov (bad) enter push jg push (bad) (bad) (bad) call mov sub fimul mov mov dec sarb icebp out das ljmp or ficom pop imul dec adc cmp dec and or (bad) stc ljmp test in (bad) jg popf aam in orl xchg xor ljmp jge (bad) add cmp loop xor clc pushf sbb sbb mov mov cmp cwtl xchg push push cmc mov pushl or xor adc lcall cli or and mov pop lcall push inc out (bad) bnd and dec push clc inc bound nop and dec loopne movsl outsl imul and xchg fwait xchg pop xchg push imul (bad) cmp mov xorl xor es movl mov xchg fbstp and jmp add popa jns cld inc xchg shlb dec adc (bad) scas mov add pop popf lcall adc lods add push (bad) (bad) (bad) jmp push aaa jns (bad) rcll cmp jp ret xchg imul push and xchg fwait adc pop jmp mov (bad) pop mov packssdw push sbb pop decl mov sub xor mov arpl mov (bad) (bad) (bad) pushl mov out imul fcoml cmp fwait int or js mov sbb push mov mov (bad) (bad) (bad) decl jle mov sbb mov add xor mov mov add aas leave (bad) fstpl xchg mov or inc (bad) std ret cmp aas repz (bad) (bad) (bad) fldenv insb fsts mov lods sbb pop pop mov mov js scas add sbb lcall xor mov mov sub mov pop (bad) (bad) (bad) ljmp mov dec pushl pop jg repnz push arpl mov push cmp fidiv dec dec sti push push jno imul (bad) (bad) mov daa loop leave (bad) lea ljmp (bad) and push scas leave mov pop jb ja das les xchg mov lock and adc movsl mov ljmp (bad) (bad) jg pop mov jle mov out push sub push scas lock mov inc aam mov cld mov lods mov push dec out popa out adc dec aas dec fdivrl aas sbb dec push sub std call or push ror xor and aaa pop xchg icebp ljmp xchg stos dec dec cmp clc iret inc cmp (bad) js lcall mov movsb push mov loopne sarb mov cmp sbb (bad) incl cmc xchg hlt and inc lods adc mov inc xchg sar incl jg push inc imul lock adc (bad) (bad) jg jno cmpsl mov lock pushw pop mov and in mov mov and pusha in sbb dec test call (bad) ljmp adc je pop add sbb mov outsb inc (bad) mov lret add (bad) (bad) jle xor sub cmp repnz (bad) lcall repz out xor mov in repz pop xor push adc pop insb and mov xor jo lock test cmp repnz cmovle lods (bad) arpl popa stc cmp mov push rorl subl test mov lret mov sub mov pusha gs mov pop fndisi(8087 push ret push jg (bad) (bad) ljmp mov and jne es cmp sti loope add cli stc pop adc aam xchg ja xchg loop sub xor push cld into or fimul dec fistp dec fadds (bad) (bad) aas inc mov mov orl shlb cltd icebp mov (bad) (bad) jmp add (bad) adc out sub rorb and rcll mov push ficomp jns test scas (bad) decl enter jl (bad) jb mov mov mov pushf lcall pop mov enter cmp fs iret push xor mulb cmpsl out in and jbe enter dec fdivrs jne sahf mov insl arpl (bad) (bad) lcall imul scas shll mov mov roll ljmp pop lea into adc adc stc pop aam (bad) lcall ljmp lcall ja cltd (bad) (bad) (bad) (bad) call mov add mov mov cmpsl fnstenv test (bad) mov mov add push lods and mov daa shrb leave decl sbb mov aas push mov pop dec adc (bad) pushl pop std mov mov pop cmp loope cld faddl (bad) xor mov (bad) incl add ja insl fidivr sbb loopne xchg xor imul and andl xor (bad) pop pop divb outsb dec pusha lods (bad) mov cld jae inc fldl sub mov pop icebp outsl cli mov cmpsb ljmp mov mov (bad) ljmp xor adc xchg inc (bad) cmp cmp cld sub in (bad) (bad) mov sub out and scas adc fld mov int add incl mov es sbb stos dec push outsl fwait mov adc (bad) in jg and icebp sti in fs bound jae mov test orb mov mov jg cmpsl pop sahf xchg xor jo and sub test add pop imul (bad) test ljmp add js cli gs and lcall push lret je (bad) jg rcr inc int jg dec test add rcrb adc adc pop sbb sahf mov and mov test inc ret mov (bad) (bad) (bad) lcall mov ja or sarl mov pusha dec cmp xchg (bad) jbe shl pop in jbe mov sbb fldl je jbe subl mov iret cmp mov (bad) cmp sbb push xor (bad) inc push (bad) lods pop pop es out jmp cmpsl sar std into clc sbb mov jg call inc mov stc add or cld loope push xor call jns in (bad) (bad) jmp ljmp psubb repnz out or dec fs dec test (bad) cmp jb and (bad) pushf sub aad outsl popa (bad) inc insl mov (bad) decl jbe inc out xchg rcrb scas movsl inc or test xlat dec ljmp lods or adc jae popa ret out pop adcb das xchg push sti adcb mov lahf mov mov testl in pop mov (bad) xor in lret sub fwait xchg pop (bad) lods add dec mov xchg imul xchg hlt (bad) pushl mov outsl dec sbbl incl (bad) and or cmp popa aas lcall add xchg sbb call inc pop push cmp (bad) (bad) incl fidivl xor pop scas push push xchg dec js add adc mov sbb adcb ret decl jecxz fwait and adc pop inc xchg scas adc decl sub inc jae xor xor push out xchg mov jb mov (bad) lcall sub gs jp dec nop lret imul sub nop (bad) (bad) jg cli out inc adc out or js xchg int jb lret jp push dec cmp (bad) push out mov hlt dec adc pushf lods lret (bad) call sub sub loop sub ds jne jno in (bad) dec fst mov mov lea xor addb je stos (bad) pop (bad) call rorl lea or pop mov stos (bad) (bad) jg mov and bound jmp dec jle ds pop in pop pop cmpsb out lret lods pop dec loop or dec jns push ljmp (bad) (bad) out add rcrb adc dec test pop push sub test sub negb mov stc and dec call inc rorb xchg mov call cld xchg push mov sbb (bad) (bad) cld xor xor xchg scas hlt in mov lock daa and arpl int3 rol sbb ret popf push lret mov insb push mov call loop jo xchg mov mov fstpt fwait into inc adc add mov sbb pop mov stc (bad) jg sarb arpl (bad) fnstenv mov jge (bad) call loopne js push icebp iret icebp pop add jo pop sub hlt (bad) pop inc xor stos jmp add insb ss add mov fildll popl add mov repz in (bad) jb clc mov decl movsl outsl inc mov mov jne int3 rcrb pop push xlat stos mov ljmp xchg (bad) decl jo adc loope pop scas pop adc lret nop push mov jo cli cld (bad) (bad) ljmp xor jo and push push adc cld sub adc mov imul aaa int adc sub (bad) mov cmp jle loope loope std movsl cmp fisttpll cmp xchg pop (bad) fistpll jmp or cmp mov and push add hlt sbb (bad) (bad) out cli ljmp gs pop (bad) in pop dec pop and nop cmp push or pop jle lcall int3 xchg inc aam in adc adc stos dec cmp (bad) decl mov (bad) leave and pop lea push lcall decl (bad) sub pop sbb outsb push rorl mov adc das pop push imul xor inc (bad) (bad) (bad) push lods xor (bad) mov adc scas fidivr jl push mov ds pop inc pop or push call inc fbstp ss (bad) (bad) incl aas pop cld cmpsb mov idivb mov or loope pop jno or call fst and mov lcall test jmp push outsl (bad) imul pop daa xor gs (bad) (bad) call inc pop mov mov xchg pop scas cmpsb movsb andl mov lcall (bad) movsb jle xchg fidivr fsts xor or inc add push xchg and into adc cwtl mov (bad) decl lock test xor enter hlt test xor (bad) jg push in into and jle inc cmp stc jbe push push stos xchg (bad) (bad) mov scas lea mov popf loope push (bad) fcmovnb bound das or inc jns data16 inc inc add (bad) (bad) ljmp int cld nop (bad) test or sti int mov repz lret push repz aas xchg ret jmp in inc sub or insb and insl add decb lret aam ljmp push mov inc aam insl shrl pop adc ret cmp xchg or fcomps rcll xchg mov adcl dec xchg sub (bad) jg cmp scas mov mov addb addb add push outsb jno push enter ficom (bad) ljmp sub mov jmp dec bound es rcrb fs and stc insb lahf push (bad) pop in sti mov or int3 pop mov sbb xor xor cmp call aaa push in add mov mov add ja dec (bad) mov aad jg in fisubl (bad) (bad) (bad) pushl pop mov (bad) sbb mov (bad) mov sub repz mov push push scas mov decl pop std mov or add (bad) (bad) (bad) fisubl add (bad) cmc xor xchg push dec and dec add imul into cmp (bad) jmp and sahf (bad) jle push cld pop pop movsl lahf xchg cmpsl lea (bad) (bad) (bad) decl outsb add adcl pop call mov loop daa lods sbb lcall iret sbb lock jbe test xchg mov xchg aam outsl mov ljmp push mov sarb jbe add xor pusha fnop int mov scas push jae xor fwait cmc push mov (bad) (bad) jg or jp int lods iret mov xchg inc dec xor and sbb dec xchg sar scas sarl loope cltd cmp cli shlb lcall mov lahf repnz push cmpsl cli (bad) (bad) incl adc sub inc add add stos sub xor ljmp jbe mov es dec icebp popf push fistp cli jg clc push sub or inc cs dec pop lock adc dec jp in bound dec icebp (bad) (bad) jmp fsubs xor mov test mov cmp ror (bad) (bad) (bad) mov es mov mov mov (bad) (bad) (bad) pushl sub inc sub inc ret jle pop outsb jne xor jge (bad) lcall nop insb mov sub xor stc mov movaps cmp sar (bad) out xchg outsb lods (bad) xor ja ja fscale adc loopne rolb cwtl or hlt lret mov mov subl lea enter (bad) (bad) jmp push test pop iret add lods cli or dec in adc arpl xor cmp add mov sub push shlb fwait mov sub (bad) in imul dec sarl add and jno imul mov xchg cwtl ja dec pop int3 clc mov (bad) inc (bad) jnp pop cmp aam sub cmp imul jecxz out pminsw mov (bad) pop mov imulb cmp (bad) (bad) lcall fistl in xchg mov adc dec fwait gs push mov adcl in mov xor pop out pop inc dec or loopne (bad) (bad) (bad) ljmp repz das outsb loop loopne scas sbb inc or push bound fst call (bad) mov mov mov xchg push das sbb mov mov call push push mov and out mov adc (bad) clc inc ss int fildll mov aaa icebp adc (bad) fdivrp (bad) fisttp mov ret sub pop xor negl inc ljmp push xor inc ret es ret mov and or add cmpsb in ficomp push (bad) (bad) jg mov fs cmp mov push es aaa aad addb lock decl xchg pop xchg adc (bad) or sbb fcomip pop lock sub ljmp and pop nop (bad) arpl movsb test adc mov and ja xor aad xchg jg jg mov inc push ret andl pop dec inc pop (bad) (bad) (bad) call movsb xchg outsb loopne adc fnstsw mov jbe lcall cwtl int cmp popa xchg jecxz aas sbb (bad) ljmp xor mov divl lcall ret out fisubl jno movsb jg cmp lea (bad) mov leave imul jg,pt adc pop adc sahf lods mov in push pushf mov xchg (bad) (bad) mov cltd mov jo xchg mov fwait (bad) out cmp push lahf jbe mov xchg hlt test mov mov mov cmp sub adc (bad) fcomip out xor adc arpl push xor cmp repz (bad) (bad) (bad) jmp adc sbb cmc pop sti cmp cs sub sub (bad) (bad) jmp mov xchg adc jge ret adc xor lcall scas dec test jmp pop pushf and test icebp xor inc sub cs (bad) (bad) jmp sarl mov movsb jg insl in cli repz sbb fldenv pop jp (bad) (bad) mov xchg xchg jg stc imul jge (bad) jg (bad) pushl inc inc pop mov push aad ret fwait pop das or dec lret loope jno pop pushf and lret xor push loopew cmp xchg mov mov imul (bad) pop aam add int3 outsl daa inc pop add aaa dec daa jp (bad) jb (bad) jle stos out add decl repz int3 pop aas ds xor fcmovu xor jns (bad) cmc ljmp xchg add push mov lcall pop loope jp pop out jae mov lea loop push movsl (bad) mov inc mov out (bad) mov stc daa imul cmc pushf adc es ss adcb pop fcoml outsl imul test ja sub mov jnp popa push sub movsl push sbb (bad) (bad) ljmp jno jge lahf pop in mov lea mov inc cmp pop inc (bad) leave and aam lea addl stos and decl add pop popa popf test data16 mov (bad) (bad) (bad) pushl xchg push ret pop test fildll xorb arpl rorb jae lea xchg popa mov jmp dec mov (bad) cmp insl and push repnz rolb mov movsl (bad) decl sbb push mov and jecxz dec mov sbb shrd stc dec mov (bad) (bad) ljmp jl (bad) mov movsl out loop (bad) xchg and flds lcall push add jae addr16 mov (bad) (bad) ljmp fs and mov and fs decl fwait mov sbb jne and in pop je push ret mov jns sub inc push push dec div fucomp jg aaa (bad) (bad) (bad) decl loopne mov fs test cmp mov pop mov enter cmp sub repnz adc lret cmp mov and (bad) dec mov (bad) (bad) (bad) inc pop sub pushf xchg add cmc dec and popa jne iret lock (bad) jg imul int movb mov lea mov jae mov xor (bad) (bad) mov mov jg sbb mov add mov arpl iret imul pushf jne (bad) add pop cs lret pop (bad) (bad) (bad) inc lea (bad) in jbe xor nop jmp lcall sbb loope fwait loope and (bad) call clc and idivl cmp push and push (bad) (bad) (bad) (bad) jnp fiadd adcb rcrb ss jge jp sarl out add (bad) (bad) jns pop sahf loope aam adc outsb lock dec push loopne or (bad) (bad) (bad) jmp push ljmp ffreep rorb pushf xchg jb push shrb xor cld jg call adc push imul lds call lods cmpsl aaa dec jae push jmp (bad) call dec pop je rcr and push push xor xchg and add (bad) (bad) incl movsl xchg mov addl pop (bad) xor jns movsl push and stc sbb dec add (bad) decl hlt push outsl jno dec call (bad) jo ret ret (bad) mov out lcall sbb xchg add loope and lcall ljmp dec outsl xchg dec call (bad) (bad) (bad) jg mov inc inc lcall (bad) arpl jle (bad) (bad) lcall lods divb jge sub repz pop scas rorl sbb mov (bad) mov incb inc inc popf hlt mov (bad) decl movsl sub adc dec stc rorb mov jmp sarl addr16 mov pop xor lcall lcall jl jns xor and mov daa das push js outsl std (bad) jg mov push xchg and jle in mov lock mov mov xor cltd xor out movsb sbb pop loope mov jne pop testl mov xlat push add sahf (bad) jmp (bad) sub in inc icebp sbb and ds dec (bad) (bad) dec pop divl jle jnp in ret (bad) fcmovne pop hlt (bad) mov jmp or cs cmpxchg mov xlat mov sahf out inc push cmp leave jne jp xor jl cmpsb (bad) jmp sub push lcall jmp in add repz or xlat hlt call sub push (bad) xchg js mov imul (bad) call lahf (bad) aaa inc xchg addr16 in sbb dec adc movsb cwtl ljmp insl imul inc (bad) decl lods pop mov cmp jp sub pop inc mov sub incl pop add in fsubl (bad) jg push out xlat mov inc fstps mov cmp and jns (bad) call ljmp clc cmp outsl mov fild inc and mov mov dec xor pop mov stos fild notl aad call pop out pop or sub fistpl xchg aaa jg icebp ljmp daa (bad) insb pop dec cvtpi2ps sbb inc (bad) popf sbb (bad) cmp pop dec test xchg mov ret jne (bad) (bad) (bad) jmp push push push mov ret xorl sub and inc stos imul pop outsl cmp mov pusha push add xchg cmp (bad) lcall ss sbb adc mov cltd add dec shrl xor (bad) decl push adc sub pop push xchg cmc (bad) sub repnz cli (bad) (bad) pushl in pop imul (bad) (bad) (bad) (bad) adc (bad) sub (bad) jmp mov fbld sbb shrl (bad) ljmp cs (bad) call cmpsl push xor xchg add sbb or cmp dec out fwait (bad) (bad) (bad) (bad) out outsb aam in xor pop inc add jmp jg xor inc lcall xchg sbb bswap loopne jecxz fyl2x (bad) std stos jmp mov mov (bad) (bad) push mov cmp hlt and adc push pop pusha jno shrb fldt out xlat dec std test mov and into xor xchg std (bad) decl int and pop cwtl (bad) (bad) jb mov xchg mov add pushl ret stos or in cmpsl out outsl data16 iret inc int lret adc data16 and (bad) mov popa stos out xchg jp inc shr sbb xchg cli pop das sar cli mov sub cli (bad) cmp add add inc xor push inc in imul pop inc ret adc rolb jo (bad) (bad) jmp mov rolb or jns enter or dec pop iret pop sbb cmp aas push (bad) pushl and and jns cmp scas orl (bad) (bad) cmp xchg fistpll jecxz sbb pusha sbb xor cwtl and jnp sub mov stos shrb nop jno jnp dec push jmp or sbb ret (bad) (bad) (bad) lcall mov out or and mov sti (bad) dec xchg dec push sbb or mov popa inc (bad) (bad) (bad) (bad) stc cli pop std cmp jb mov stos and adc dec pop mov rorb or das stc sahf mov cmp jbe (bad) (bad) lcall xor add (bad) mov scas add jo xlat or xchg mov jp sub dec jle out xchg je jmp cmp sub leave push out movsb mov fwait cltd sti inc mov (bad) je cld mov adc (bad) inc jbe ret xorl inc (bad) cmp clc divl int jno jmp (bad) xlat mov push std and xchg (bad) (bad) (bad) decl ret jp shll call rcrb out push pop sub lret ljmp stc (bad) cld int push cmpsb icebp push or stc ss popf enter movb (bad) ljmp push cmpsl xchg cmp jge insl movsl jno jp and cltd incw and out cmp movsb and cwtl xchg jbe (bad) incl scas js loop jecxz outsb nop jbe pop push pop pusha push sti mov cli out push data16 pushf sub push ret out mov mov mov jae aaa jmp ret mov sbb popa das dec bound lcall mov out negb sub in or lahf (bad) jg inc ds scas xor mov lods je cwtl or sbb (bad) les daa mov faddl (bad) (bad) (bad) jmp repnz lret negl push pusha lahf outsl dec mov jl (bad) dec xchg and (bad) dec test adc dec repnz test lret clc xchg or (bad) (bad) cmp test mov or (bad) or (bad) (bad) jmp dec pop sbb rorb mov mov (bad) mov repnz leave (bad) sbb imul outsl iret push loopne pop rolb movb mov decl adc hlt jne in iret cmpsl repz outsb mov mov jbe mov dec xchg ret outsb jns sahf (bad) decl enter out hlt ficompl mov lods add push jl sbb add mov cmp add inc mov (bad) (bad) call mov dec and int3 andl xor (bad) (bad) mov cmpsl mov mov cltd xchg xchg je mov sbb adc dec jae pop hlt (bad) jp rorb and pop mov or movsb mov mov (bad) aas mov test movsl (bad) jb push xor test pop sbbl (bad) (bad) call adc pop stc rolb jbe insb sub pop xchg adc add sbb repnz and ss ljmp sti pop inc inc rolb lret xchg lock jge lods mov aad or test xchg aad (bad) and push jo sub jecxz cld adc pop mov sar (bad) (bad) out sbb popf cmp dec cmpsb out xchg rorb adc (bad) sub mov pop lock cld out cmp mov cmp xor (bad) ljmp fyl2x popa pop or sbb inc add push (bad) (bad) jg scas sbb mov adc out popa sub cmp add push test ret dec xor adc incl xchg cmp out pop (bad) popa es jne call repz jg test cwtl icebp shl hlt es lods mov mov imul mov ret sub ss imul (bad) cmpsl incb call pop inc mov into push rcrb (bad) (bad) (bad) cmp push jnp out pop dec push xor push cmpb adc rcrb das stc (bad) ljmp enter jae pop in (bad) sbb dec jl gs and cmp cmp pop fiadd in mov xchg mov insl add dec or jae cltd shll ljmp ret mov fwait rcrb incb pop jne (bad) incl adc xchg mov dec dec or int in mov decl cmp and mov addr16 jg in push aad push mov xchg aaa dec dec push pop cmpsl mov inc jno (bad) dec shl (bad) sahf inc or xor adc (bad) (bad) pushl cmp loop roll xlat jmp mov int3 dec cwtl sbb push xor jecxz inc dec (bad) ljmp and loopne bound sbb pop loope cli aad pusha fxch (bad) mov sbb xlat jb sti cmc je into mov xchg cld stc mov sar and ficoml cmpsl jns xchg mov (bad) in adc movsw enter push into mov (bad) (bad) (bad) call dec stos mov jmp inc sub dec and fisttpll and jns shlb enter call gs fs push sahf jns call mov push adc sub (bad) jg rcrb xchg push pop cmc jne add loope push repz (bad) ror sbb mov cld lcall int push adc inc cmp inc (bad) (bad) decl mov ljmp push lods sub insb push pop jno mov jo inc push (bad) (bad) mov in mov insb mov out daa inc mov lock adc (bad) call lret push push mov push push repnz mov lret mov (bad) (bad) (bad) xor outsl push cmp mov ja les xchg sbb je aam iret push (bad) jg inc xor jae or push cmp (bad) jmp mov xchg dec loopne pushw sahf adc imul jmp push mov push add push mov push inc std xor stc cmpsb int scas add cmpsb (bad) pushl movsl sbb sti mov cs imul sahf inc jg jb repz (bad) ret mov in pop add add inc fnstsw aaa movsl jg mov pop pop push jg inc test jg (bad) (bad) aas jmp lods mov (bad) xchg fidivr pop jbe cmp pop fildll mov adc and sbb js (bad) (bad) (bad) mov xor repnz xchg test mov cwtl cmp mov push push (bad) lcall sub imul daa iret xlat lock jo jmp lock js inc and jae call rcr in movsb lret (bad) sub dec ds jbe mov mov pop mov (bad) sub jle (bad) (bad) mov mov outsl mov inc sub (bad) ljmp (bad) mov sub int stos mov fnstsw xchg iret mov (bad) (bad) (bad) cmp movsl pop aas dec gs insb sti notb repz push jl shrl xor repz (bad) aas inc adcl repnz aad fwait dec popa fistpll mov (bad) pushl xor int and shrb jmp mov and push movsl (bad) (bad) (bad) lcall xor mov sahf ljmp pop add adc ret hlt (bad) mov push rol mov (bad) mov mov mov jb dec fmull lea sub dec lea loopne jmp push repnz pop pop inc and inc imul fisttpl ret adc xchg sbb rclb (bad) (bad) (bad) (bad) mov fwait aam in mov xchg insb popa mov jmp loopne daa mov or jmp (bad) cmp test or push push pushf xchg push leave cmpsl shrl icebp sbb stos sti adc xchg aaa mov push pop call and push xor cmpl sbb mov decl dec arpl roll jb inc (bad) jno (bad) (bad) ljmp add pusha loopne (bad) pushl mov xor fnstsw sub imul jp pop xchg bound test test lock (bad) ljmp dec and fidiv xchg (bad) mov jbe decl sub lret push and pop mov aas add and add sub add fbld (bad) decl pop cmp sbb xchg sbb imul jno push imul cmp dec imulb mov push push adc or xlat fstpt dec dec das cmp pop test ljmp adc mov adc in jmp nop ret or jns inc (bad) add pop js insl xchg (bad) (bad) ljmp add data16 mov jg or mov roll dec mov pop xor lods mov sub add and arpl (bad) jmp inc sub out roll xor lods add mov lds cmpsb scas inc hlt (bad) fisttp dec cmp sub mov sar (bad) incl mov adc shrb cmp aaa jmp mov fldt xchg pop hlt shlb xchg push dec imul fild cmp incl adc (bad) mov daa es std (bad) (bad) jmp dec sahf push inc out and adc push inc mov rclb inc loopne scas movsl rorl jmp push lock push cmc je dec out sub xor dec cmp mov or pop xor xchg popa testl testb sbb add gs xchg xor jnp fyl2x xchg xchg mov (bad) lcall xchg inc out jnp cli mov inc pusha (bad) fistp mov out sbb pop fs aad int dec cwtl shr andl sbb test lcall int fdivrl cmp in mov (bad) (bad) decl inc pop je rclb xor dec sbb mov push fldenv rep sub das cli fildll inc dec xchg sub into (bad) (bad) mov mov (bad) repz add pop xor cmc aam (bad) (bad) call pop fild pop push or xchg sbb in (bad) push adc pop pushf mov sub das xor stos mov (bad) mov inc mov or ja adc mov loope (bad) (bad) call aaa lds icebp daa fsubl xor jmp push xor fwait xchg lahf xlat xor and dec fidivl jg jns sbb jne ret xchg mov (bad) pushl std jp pushf rcrl or icebp data16 xor dec push (bad) mov add adc repnz sbb rcrb (bad) (bad) lcall addr16 sahf dec cmp pop cmp push fs negb lcall bound outsl or arpl (bad) (bad) (bad) jg sbb adc cmp inc xor push adc (bad) pop jns int lea leave cs jecxz (bad) (bad) push pop movsl sub mov jo mov push mov repnz fisubr (bad) (bad) (bad) mov out (bad) sbb outsl mov add xchg pop xor jnp in ja xchg inc xor jmp shlb sbb outsb into call mov xor fnstenv or add call jle mov ficoml inc fs rcr jle jnp dec mov outsl push push cmp fsubr (bad) ljmp mov xor popa push inc (bad) jns jg mov pop cltd fadds jge testl jb mov inc js ror sub daa push nop std imul jg es movsl (bad) (bad) (bad) jmp jo mull push fnstcw test popa and (bad) aad mov ja jle icebp pop xchg (bad) (bad) ljmp push (bad) fiaddl sub jae dec pop stc cmp adc mov add fisubrl mov es mov sub adc int3 pushf pop (bad) decl adc test (bad) xor test add scas lods js stc xor dec movsl cmc adc je push adc and jle (bad) (bad) lcall xor push (bad) cmp mov xchg add jno bound or enter jmp repnz incb (bad) nop jg pop insl stos ss (bad) out and (bad) (bad) (bad) fsubs in xchg jp xchg or outsb lds scas pop add mov movsb sub jb out fmulp cmp mov xchg or or leave outsl (bad) (bad) (bad) jg dec xchg in mov bound cmp (bad) imul dec je jbe xor ror (bad) (bad) call mov sub mov lds jge iret stos (bad) (bad) (bad) aas scas lds xor xchg mov adc jb jne dec test rol nop (bad) (bad) pushl hlt mov xchg stos sub int3 test jno adc and daa xchg lsl in das movb outsb xchg sub into dec or lahf and mov enter fildll (bad) (bad) lcall cmp jg scas popf push or test mov aas in mov test jns jmp sub push ja cmp cld fisttp (bad) (bad) (bad) mov push sbb xchg inc sbb popf sbb mov fsts adc leave (bad) fsubl jb pop sbb enter cmc jp cmc fs dec lcall (bad) mov xor sbb inc sahf fidiv int3 pop add push lcall (bad) (bad) call push mov xor addr16 std lcall adc (bad) (bad) jmp inc cmp cmp loope les dec in mov xchg jg (bad) (bad) decl push push fsubrl mov scas repz stos xchg push sbb pushl mov aam lds fwait mov loopne dec mov (bad) out xchg pushl push jecxz aad mov stc fucomi (bad) jp inc pop or ljmp out inc scas push (bad) (bad) jmp push xchg fs shr clc push dec aas jecxz sbb inc push lea inc xchg test (bad) (bad) (bad) ds push push rolb pop xchg push popa xchg jmp loope mov aas (bad) push mov (bad) (bad) dec xor dec mov leave mov mov (bad) xor and cmp xor push (bad) cli (bad) (bad) lcall mov push fsubp gs fwait adc es pop sub mov jp xchg inc pop in lock insl push xor out stc cmp push (bad) jg and sbb xchg mov (bad) jb mov mov and sahf (bad) (bad) (bad) (bad) (bad) inc cld sbb gs mov mov jl add jecxz add (bad) cmp mov fldt (bad) push jo sar (bad) (bad) ljmp or les push test mov test movsb add leave rclb cmpsb ficomp mov mov (bad) fiaddl mov mov js mov cmc (bad) pushl test addr16 lahf xchg dec xor lret xor js test cmp xchg xchg push je jnp data16 jmp aad imul lahf outsb loop arpl inc cli pop lock sub (bad) (bad) (bad) inc sbb or ds mov ds iret sbb jmp ljmp mov pushl pop cmp pop jb arpl aad mov (bad) jg lcall adc adc sbb mov imul outsl jns mov ljmp adc in xor fldenv enter mov sub ljmp and fdivrs dec je and das clc pop pop xor dec out add mov push xor hlt call roll mov mov sar inc ret inc test cmp sbb jbe jle add (bad) (bad) mov cwtl lcall jbe or xchg test ljmp test sub sbb notl and add jmp xor jnp stc mov cmpsb rorl add push or mov sub cmc outsl dec aad ss stc xchg pop fsubrs mov (bad) jg ficomp dec lcall test sub dec test call out mov (bad) incl and mov mov scas data16 int push sub jne or call push and and (bad) lcall idivb movsl adc mov int3 (bad) sbb dec cmpsl movq add (bad) hlt fnstsw fisttp mov jmp mov lret mov sbb lcall mov cld push push insl or cmp (bad) repz jae cmp lods fdivrl and xor sbb mov mov imul (bad) or loop (bad) call rclb fnstcw pop mov jae ds in cmp adc dec out xor dec fptan rclb out mov (bad) (bad) (bad) push jnp (bad) xchg mov add fild adc lcall or jmp cmpl test mov xchg mov pop (bad) aas test pop out inc int lcall out cmp (bad) (bad) lcall leave mov xchg or outsl inc loopne push mov inc fwait test xchg imul lock push mov fnstenv xchg pop dec pop (bad) call dec xlat sbb ftst mov push add add jmp (bad) lcall pop or and mov jbe mov dec out (bad) (bad) pushl fldcw scas cmp arpl sahf fnstenv adc push not bound mov repnz mov lea push inc sar (bad) (bad) jg daa sbb pushf popf cmpsb orl push addr16 mov sarl out lret popf or aad std (bad) decl bound mov xchg mov ror xchg inc mov into ds loopne inc pop sti inc cmc lds (bad) jmp aaa push call mov cmp xlat jne mov cmpsl sbb (bad) (bad) mov shll mov add fidiv js (bad) (bad) (bad) cmp add insb lods in int3 mov iret jo (bad) mov test inc pop or addr16 push push test fs sub sbb popf pop (bad) jg clc cld or popf mov push and xor adc (bad) (bad) (bad) decl ds cmc jne insb testl fwait jg dec lods inc test sbb mov fldl mov sbb sbb xorb fwait (bad) call pop stc in aaa lea ret movsl iret fsubl add ja,pt (bad) pusha fmuls icebp cld out sub jp add add pop sbb rcrl jmp dec inc incl cmp ret xchg out (bad) pushl daa mov and pop js xor cmpsb mov pop add (bad) fcompl call dec inc and rorl push clc ljmp scas cmpsl xor xlat loop push das repnz in xor mov test (bad) (bad) lcall ret cmp loope test push pop cmp push cmp mov xchg xchg (bad) ljmp mov and push cmp aas push jo xor inc pop test add or cwtl sahf lods mov (bad) jno pop or in pusha (bad) (bad) mov hlt test stc xor and pop dec lret cmp (bad) mov (bad) jp ret adc lds inc add xor (bad) xlat cmp test pop sub rolb int3 popa test idiv jno (bad) mov dec test pop add or movsb push cli lock (bad) lcall lds mov addr16 leave jp lcall enter out cmp popa add data16 pushl inc jae lods jae cmc jl push xchg dec je dec add int3 movsl pop sbb ljmp adcb pushf cli (bad) jbe stos mov in mov test fwait test icebp xor or iret xchg (bad) and sti lods mov adc les mov bound or stc aad dec int3 jnp jge push add (bad) decl xchg push rcll and mov mov mov ret ret into jmp lahf in lcall dec pop dec mov jg stos xchg sub mov cld (bad) (bad) (bad) pushl and xchg ds xlat outsl std or or push push in add xor push xlat pop sbb pop mov sbb lahf (bad) divl (bad) (bad) ljmp jp dec test inc ljmp sbb or ds dec (bad) (bad) pushl jns stos cltd mov cmpsb pop xchg dec in inc mov lea sti (bad) (bad) call pop int mov add add cld pushl xchg sub mov mov mov imull sub jne (bad) adc and xor inc jge rorl sahf rcr popa out rcll jnp or (bad) mov sahf int pop lea test xchg out scas daa lds je (bad) jg (bad) cmp push cli ret adc inc fs insb fsubs and dec dec mov (bad) (bad) (bad) call lods mov add pusha push cmp mov push test and push cli bswap incl mov pusha nop push lea mov (bad) mov pushl es or mov sub das mov sbb mov (bad) call xchg mov jmp or aam nop je ss das (bad) (bad) incl cmp jle rcrl lret pop enter mov into fcoms pop scas test decl sbb inc ljmp cmpsb loopne mov mov out cli stos (bad) sub icebp push mov mov push std (bad) jg xchg icebp jo movsb out enter dec cmpsl ljmp and idiv mov vcvttps2dq sar mov mov cmpsb test (bad) (bad) call inc in cld dec jg,pt jne loop jnp add dec mov cs sbb mov out cli call or mov in int3 jbe or lds call leave xchg mov or pop xchg or arpl into insb mov (bad) (bad) (bad) jmp movsb leave inc add das sbb cld das xchg (bad) xor int call jl xchg repnz adc push popf pop imul (bad) call or jno shrl ret ret push test and cld decl push xlat fcmovne push lret and insb mov (bad) idivb xlat stc pusha inc rorl xchg lret xchg (bad) xchg xchg jo jne andl aad out push pop les loopne ret lods clc and adc sub cmp cli (bad) sbb pop popa push sti sbb or pop (bad) fmuls adc add inc rorl dec cli outsl (bad) incl imulb jmp loope mov push adcb nop loopne sar (bad) (bad) ljmp mov fcmovbe pop jecxz jge fstp sub pop push int3 out lret xchg adc lods pop ljmp xor mov divl pop rcr call jmp aaa sub cmp mov cwtl adc xchg fdivp out imul pushl in mov jl pop arpl fildl push std (bad) aas push jecxz push mov movsl pop movsl scas pop repnz push (bad) (bad) call cmp or mov sbb adc jbe imul jg clc sti notl cmpsl mov in aam (bad) (bad) out mov outsl push pop jno sub nop push pushl hlt lret mov mov in mov repz ljmp inc pop sbbb or fwait cltd scas stc fstpt (bad) (bad) (bad) lcall jecxz shl sbb push insl mov sbb icebp mov lret lahf ret in test sbb fs cmp (bad) (bad) jnp out loopne nop out jo shr cmp mov sub pushl cmp (bad) lea pop (bad) lret fcomi out aaa (bad) jmp or xchg mov mov pop cmp pushl push lods sub out jl dec xchg mov cli pop stc lcall push sahf loopne test pusha stc gs xor scas loop mov lock mov call aam mov push das or pop test dec cwtl pusha mov popa (bad) cs cmp sub ss dec aad sbb sub bound or xor mov jge pop out aad or js sub dec je and and loope out imul mov sbb arpl push out lods dec movsl cmpsb inc jns mov xor xchg dec out (bad) ds adc mov int3 jge and (bad) pushl add xchg push pop mov jb xchg or movsb aad mov inc test mov (bad) (bad) call (bad) cmp push ja test leave sti cmpsb cs and lods test or jmp pop leave js cltd pop lret pop stos pop (bad) (bad) jg das pop in ror movsl pop ret icebp lock lea and outsl jbe sub sub enter adc xchg js cmpsb push (bad) or jne (bad) (bad) (bad) jmp push out push ja mov cmp push push or push negl or nop aam aas leave (bad) (bad) cld adcb inc jmp jmp in fnstenv sub (bad) decl aam and jle imul dec fst push orl lds jg (bad) incl xchg cmp test mulb sub push sub (bad) (bad) decl adc mov or cwtl and pop nop cmp sbb ror xchg rclb mov cli jmp mov add sbbl sahf xor and dec test jle (bad) and cltd pushf (bad) (bad) (bad) jmp fdivrl xchg fucomip cmp cmp inc clc js fwait jb push ret mov pop push stos es (bad) aam or push cmpsl pop sub inc cmp cmp (bad) (bad) (bad) stc icebp sbb mov sbb into xchg popa arpl sahf out mov mulb mov lcall jmp lods pop add addr16 in fucomi inc mov add (bad) (bad) (bad) lcall mov xlat jno xchg dec cmp xor (bad) mov pushf (bad) ds cs dec rcrb repnz jmp sub fwait rclb rcll pop int mov mov ljmp xor xor add fldenv subl push xlat in adc decl push xorl ljmp inc mov out mov and in jne fwait (bad) pushl jmp cmp ret push out fsubrs mov das xchg mov test lds ljmp clc in lods (bad) mov scas fistl and scas or sub aaa sti pop addr16 xor (bad) (bad) in jg out in das push (bad) pop jnp mov sahf inc andb sbb push push mov js int3 pop out (bad) mov sbb push inc jne mov dec mov xchg mov inc repnz jno sbb cld (bad) call push daa push lock mov push rcll pop into pop pop mov out sbb mov ret pop pop fwait in xchg jb (bad) (bad) incl dec nop movsb pop pop ret mov mov jle loope sbb mov decl adc cmc and mov fs mov ljmp (bad) outsb lcall add ss mov xor xor cli jl hlt dec cmpsb ss (bad) ljmp inc and pop and xchg lcall mov int3 cld (bad) (bad) ljmp push adc punpckhwd outsb push cmpsb add cmp adc out adc cmp (bad) cli ss (bad) jmp loop enter scas mov and lret push jno xchg jo (bad) jg fcomps inc lret jg adc xchg aaa add (bad) (bad) jg fbstp or cwtl mov cmp into int3 cs les (bad) (bad) (bad) (bad) ljmp jbe ret mov mov inc xchg sbbb sub rorb in mov pusha orb ret outsb inc inc notl push sbb (bad) (bad) lcall in daa xor jo mov push mov cmp and jmp push out sbb lods jge popa pushf (bad) leave dec sbb cmpb push xor xor int (bad) (bad) ljmp push iret pop mov dec into in pushf jp sub sub or and xor fisubr cmpsb cmpb (bad) (bad) (bad) mov das shll sarb mov andb cmp mov pop ljmp sub or mov lcall mov sbb jo movsl pop xchg xor idivl mov (bad) (bad) (bad) decl loopne dec ret adc jae jmp into push out cmpsb sub xchg (bad) push iret orl mov push (bad) (bad) (bad) jg lret jl mov xchg mov jno mov arpl cmp sub jmp decb arpl std mov pop shrb dec mov (bad) (bad) jg (bad) jmp mov aad push shr cmp cmpsb xchg pop int3 out push pop mov adc insb sub xchg insb or mov ja loop (bad) (bad) incl mov (bad) arpl sub in pop mov mov ds mov dec cmp (bad) divl pushf repz repz jmp test fwait data16 adc call arpl mov pop xor dec cmpsl dec cmp sbb or and mov dec (bad) ljmp adc sbb imul lea test jae or inc pop es jbe pushf xor pop mull stos mov ljmp xor sbbl or mov sbb aaa and call notb fdivrp test idiv (bad) jg stos fsubr mov dec js xorl scas (bad) hlt mov test jg mov ja rorb add jb mov ljmp add (bad) xchg adc adc cld jbe cmpsb movsb scas xchg leave cltd inc sub (bad) sbb jg cli shll aam dec pop sub dec add dec cld incl jbe mov fwait dec lret inc push (bad) jg sbb std jnp mov lcall and cli mov ret lods jge int3 repnz incl push add pushf pop fcomps push sub push aaa and pusha cmp (bad) (bad) pushl add ja es lds nopl mov (bad) (bad) lcall lret jo jecxz lds xchg in and in sbb inc pusha jecxz (bad) (bad) ljmp dec and mov push insb in cmp push lods add fwait or (bad) jg pop movsl outsl push cmp out adc inc and hlt cmp add mov dec ljmp loop scas inc cs add mov test mov pop lahf rorl (bad) mov pop push bound xor popf (bad) dec ljmp fucom movsb sbb cwtl iret xchg dec je setno sbb mov test cli cltd repz sahf pop mov (bad) repz movsl jp,pn add adc popf sub mov leave subl lahf repz (bad) mov (bad) mov (bad) push hlt mov mov adc sub cmp enter stos xlat ljmp int3 dec repnz inc bound pusha jle (bad) jg cli add xchg xor lods pop jp jp mov sbb clc dec movsl dec jecxz aaa adc leave adc pop pop gs ret inc push stos xchg repnz (bad) push xor (bad) (bad) (bad) incl loope lock xchg (bad) pop jmp cld bound loopne test push dec add cltd jno or stos and mov push (bad) mov scas rcll lcall pop cs lcall pushf mov cmp out inc push std (bad) (bad) pushl add outsb cld pop pop cmpsb or (bad) adc lea bound cmpsl pop xor aas and xor jo div adc (bad) (bad) decl xchg enter imul jbe sub push hlt popf loope xchg pop icebp gs repz inc scas add mov inc cli ja mov push in (bad) mov xor gs sub (bad) (bad) jmp xchg es cli add pushw inc xor or iret or mov lret test pop mov jmp jg sub add fistpl mov pushf int (bad) (bad) fisttp fildll and sbb in cmp mov add aad jo add (bad) xchg mov mov in pushf mov (bad) stc fwait int3 dec pop push scas (bad) pusha testl mov insb mov push jno lods test scas adc push jp mov add pop push and jmp xor aad push xchg sbb loopne icebp mov jb mov mov mov sub bound loop mov imul cs int test fisttpl outsl mov movlps (bad) (bad) (bad) (bad) call fs sbb aad ret imul sahf dec cmp sbb decl jmp fcompl jl imul inc mov ret mov (bad) mov dec xchg lcall daa movsb xchg sti (bad) daa mov pusha ret lret push lcall or jno cwtl cmc out add mov jge push add sar (bad) pushl and add and mov lret mov outsl int3 das movsb call ljmp lret mov movl sub (bad) ljmp in jno push pop push push mov xchg cld sar (bad) (bad) (bad) clc outsl imul (bad) fnstsw jns aad mov lret and sbb sbbl mov adc sahf or and (bad) pushl sub push and add or hlt jne jmp (bad) pop cmpsb std nopl sti imul outsl (bad) (bad) (bad) (bad) cmp and cmc cwtl (bad) xor rorb inc xchg rorb negb aaa and (bad) lcall fwait add inc jle scas cmc push repz clc add mov aaa std (bad) jns push mov xor push xchg out dec xchg ret rcr xor cli (bad) (bad) (bad) jmp push mov rorl sbb insb sbb aaa mov (bad) mov (bad) jg mov lea test test (bad) (bad) lcall aad jp cmpsl and out mov arpl hlt push inc nop popf cmp call fild inc xor std mov nop pop test (bad) (bad) lcall xor xchg adc repz dec iret jo es rol cmpsl xor sub push xor cmp mov push mov cmp out jle movsl fdivs inc push pop mov pop or jmp mov cld (bad) nop jb in xchg sbb xor xchg rcrb aaa or hlt aad scas xchg xchg js fiadd popf mov gs aad (bad) jg scas xchg (bad) loop pop adc push sbb imul mov (bad) (bad) call in icebp cli fwait xchg dec jno inc cmpsb pusha insl mov pop gs xchg adc faddl sar les xor mov jne sub adc shll mov loopne jmp xchg adc insl lcall adc stos je push out outsb and popf inc out fbstp outsb test insl movsl out or lcall incb dec pop dec int3 mov add mov inc mov (bad) lcall xchg fwait movsb xchg jo insb mov sbb js in mov dec jbe ljmp pop push sbb mov idiv cmp (bad) (bad) (bad) call mov mov adc aas ja cmp (bad) sbb movsb cli inc inc movsb xchg pop movsl (bad) lret stos es mov jle push (bad) (bad) (bad) mov xchg push adc add xor jb cmp or in (bad) repnz (bad) incl movsl daa loope ljmp inc xchg or xor dec cmpsl scas adc jg movsb add pushf dec push daa and rolb xor inc (bad) dec loopne movsb mov jg inc aad add adc daa pop in jne ja sar jmp pop sbb leave stos fiaddl mov sar mov movsb lcall pop jmp pop cli mov ss pop and mov push iret jecxz sbb (bad) (bad) pushl ja,pt fisubrl jbe ds push or int into test dec ds xchg mov jbe aaa rol call adc sbb sub adc into lcall lock and je or mov incb (bad) (bad) (bad) ljmp loop addr16 inc add stos movsb cltd mov add add sahf ds xor (bad) mov cwtl js jns (bad) pushl repz adc loopne adc (bad) (bad) (bad) (bad) (bad) jmp xor or (bad) jae stc pop cmp mov dec mov aas push mov xor int ds int mov push pop lods (bad) (bad) (bad) jmp (bad) sub and mov cld inc imul xor xchg mov cs (bad) cmp mov and dec sub jae sti cmpsl and jecxz xchg sbb stc add cmpsb fcompl mov test inc insl arpl ss cmp popa pusha push stc aaa dec push fnstenv jecxz and lock (bad) (bad) ljmp outsb push mov jl jmp lcall nop mov mov bound xorl xchg sbb sbb jl lcall decl sbb mov test enter xor loopne in sub ret in mov adc je push xchg cmpxchg outsb (bad) or (bad) (bad) jg mov and pop idivl repnz insl mov (bad) (bad) (bad) cmp out pop mov xor mov roll mov fsubp std push insl out test (bad) decl and sub movsb push mov mov test aaa std stc push sti iret dec aas mov cld jbe insl mov (bad) (bad) fscale das call iret adc clc inc xor lcall pushl mov xor pop and jg out sub mov mov xor jecxz out cmpsb sub xor fcmovne (bad) pop icebp xlat mov push test xor sbb sub inc mov sub lcall sahf outsb mov test rcl sbb outsl iret push (bad) loopne push xchg push (bad) (bad) (bad) jle dec mov rcll stc das and jle repz push ljmp fisubr gs adc jb mov fdivr (bad) (bad) jg sbb popf fcmovnbe or (bad) jge xor jecxz out (bad) in xor sub dec outsl in (bad) lcall jge mov mov loope lods daa push movsl mov call decl ret pop xorb inc mov (bad) mov iret (bad) pushl push data16 and shr movsl jne jg cmp jmp mov ljmp lret push and ss ljmp mov sar pop sub call lock cmp scas xchg xchg jmp in jl ds in and or fucomp (bad) pop punpcklbw cli fnstcw fwait ret cli jne (bad) mov dec adc mov roll inc (bad) jo cs (bad) ljmp jbe daa out repz out inc inc sbb clc in in jo loope (bad) mov in outsl es pop in jns mov (bad) (bad) pushl inc decb test dec fcompl jecxz inc xor xchg aam mov cld (bad) ljmp inc test xor les jns (bad) aaa and adc add dec jb cs dec inc aad ret push mov dec push movsb rcrl fist imul mov das cli pop cld inc fidivl enter pop and add lock jg rcrb pop lret cmp xor cmp xor pop pop scas and sub neg aam mov (bad) (bad) cmp or cmp inc mov fldenv inc pop lock mov std lods xchg ret jb mov push inc (bad) pop cmpsl sbb fucomip dec xchg lret loop (bad) decl jns lock movsl out out mov andl sbb (bad) call gs ljmp fxch lea addr16 (bad) (bad) decl pop (bad) lods mov mov iret jmp pop arpl repnz mov das fcmovnu lock (bad) dec lret clc scas movsl pop xchg loop mov lods (bad) mov jg (bad) push mov loop nop sub push jge std pop sbb lock sbb stc adc add cmp ret ret fnstsw (bad) (bad) (bad) jmp sbb inc push mov stc mov adc mov popf sub mov sbb cmp sbb ficompl jno xchg call lock inc loopne jmp int3 les sbb clc mov (bad) (bad) (bad) (bad) dec rorl arpl xchg shrb and sub sub mov jo in cli (bad) mov jmp (bad) bnd jns fs pushf cmp xlat mov icebp mov negb pop mov xor lods dec std (bad) inc pop addr16 pop adc daa outsb fistp jo xlat inc std fwait push mov leave ss (bad) incl (bad) loop leave ret fadd test mov lods cmp cmp and add add sub and mov fstl lcall pop or xchg xchg icebp jbe and loope fisttp cs inc push inc out lret add mov push mov test (bad) dec sbbl shlb test mov cmpsl cmc (bad) decl pop adc jl enter repz in hlt fdivr ljmp fisubl pushf jae xchg push adc jno pop inc jg add xlat and ljmp sub push leave mov xor cli inc push in flds inc stos test push push cld (bad) push nop cmp or push dec adc stos sbb pop xchg mov xlat lock aas outsb popf stos xor movb and popf pop mov sub (bad) (bad) (bad) decl adc mov push ret xchg outsl fisubrl arpl pop jg (bad) call sub xor sti cmp dec push sub sub insl mov out xchg mov mov sbb xor enter pop cmp add inc and cmpsl xor cld fmul pop int3 lcall jo cmp cwtl (bad) int mov mov arpl inc cmp ja dec lret xlat pop mov (bad) lcall add aas add (bad) cli aaa hlt cmp scas push rorb (bad) ljmp icebp pop or push cmp (bad) mov das arpl (bad) jmp lds sbb xor sbb mov mov incl push cli (bad) (bad) jmp stos ds call adc mov lds (bad) (bad) inc (bad) jmp inc jbe repnz mov daa ss xorl xchg lahf jp,pt add ret xlat sti cmp or sub (bad) (bad) (bad) (bad) stc mov call jo lds clc outsb aad cld bswap mov pop mov popf pusha cmpsb (bad) jg aaa pop mov pop fimul or sub pop and push inc inc mov cmpsl push loopne mov cld adc push adc js loop cmpsb aaa ret jg mov xchg xor jecxz push insl movsb mov or pop mov mov leave push sbb in aaa push mov hlt dec and popa xchg fs shr cmp pop xor xchg test (bad) mov jge xchg push xor or mov and push mov ret cltd hlt push cmp mov inc icebp or sahf push std (bad) sub add test adc inc (bad) lods cmpsb pop (bad) (bad) (bad) (bad) sti pop out sbb lods inc sub add mov inc fbstp cmp dec cmp bnd out add pop aam in insl (bad) jmp ficom adc dec mov push mov sbb (bad) mov adc xchg sub dec insb cmp stos lcall xchg adc adc ret ljmp stos jecxz daa sub jae (bad) and dec icebp pop int3 cli (bad) (bad) jg mov pop push or dec or dec adc add ss ds jns enter jo sub (bad) (bad) push cmp and ret cmp notl in lcall lods daa inc loopne push sar dec adc imul (bad) mov xor push mov jmp and mulb aaa or std pop cld (bad) ljmp mov sub adc test int3 mov pop out jg push into shl orl (bad) push jg (bad) ljmp jb pop les or push (bad) and cmc (bad) fcomi jp push jbe jae repz push cmp incl mov sahf jbe dec fs jle adcl rolb (bad) (bad) decl jb or addps fwait ja mov lods imul and push adc or cmp jo or icebp in arpl xchg (bad) jg cmp iret inc dec and test cmp lea imul xchg out call jg sti (bad) (bad) (bad) decl sub fbstp add cmp xor aad sbb sbb or mov pushf iret lea push push dec pop pop or cwtl lock mov lcall pop (bad) aam insb sub cmpsl mov push mov fldcw dec jg std ljmp add fidivrl dec or stc jmp add jp fxch add (bad) (bad) call scas fidivrl and test test out mov xor inc cld (bad) (bad) jmp mov fiadd cmp xor dec mov jmp xchg fcmovu ret push mov inc (bad) call sub adc push das jae add aas push movsl lret dec mov jbe cmp mov les xor (bad) insb stos cld pop sub jmp xchg shrl jg sub popf ja (bad) (bad) (bad) (bad) std stos aam mov sub xchg data16 inc mov inc (bad) (bad) mov pushl enter xchg cmp sbb pusha push das jecxz fmull repnz pushl mov (bad) sahf mov xchg add sbb and (bad) dec movsb addr16 sub mov push xor cmp repz pop pushf je (bad) in add das push lret push inc imul ret cmp mov jae (bad) (bad) call ljmp repz in cltd loop sub inc (bad) mov push add mov ror add aad (bad) (bad) call fnstenv xor pusha in or xchg lahf (bad) shrb xchg (bad) sbb ljmp test ds cmp mov mov dec xorps adcl addl int (bad) jg inc pusha push or push sbb mov inc mov loop xchg add pop outsl out into xor loop or lcall mov (bad) (bad) (bad) mov sbb repnz inc (bad) lock aas inc pop add xchg and sub cmc int aas decw adc (bad) dec and or jae cltd cwtl (bad) mov sub xor lret cwtl and inc fidiv jl cwtl in ja dec jmp jl and inc adc ljmp (bad) incl clc daa inc je cmp cmp sub mov add (bad) (bad) pushl pop sbb cmc sbb ret nop lret (bad) xchg cmp mov cltd popa iret jb loope in add mov cwtl dec arpl insb (bad) (bad) (bad) (bad) std inc pop rol out mov stos jp test xor mov adc and mov pop sub mov or sub (bad) (bad) (bad) out add mov outsl call sahf fneni(8087 fstps cmp mov adc mov dec sbb cmc xchg inc gs stos clc aaa mov push pop std (bad) (bad) (bad) pushl sbb cmp sub test xor push cmp mov rol (bad) (bad) cli xchg jle dec lcallw xor loope add (bad) (bad) incl mov rolb popf xor sbb cmpsl jp clc jmp sti jmp pop sub push in ret cmp rol hlt je mov int3 (bad) aas pop mov jne out push cli idiv out and xchg or (bad) (bad) lcall test and push pop or inc mov mov bound jl xchg jle jmp mov sbb popa mov ret movaps mov inc push cmp aad xor dec push adc add es idivl shrl xchg test xchg test ljmp js pop cmp push test and or gs jmp xrelease mulb dec mov scas aam scas push adc (bad) clc sbb ss lods xor (bad) (bad) ljmp lds lea jmp loopne stos adc movsb or (bad) (bad) (bad) cmp fldt sahf xor out xlat jge cmpsb dec push cmc sub cmp ljmp inc mov imul popf push into cli popa push xor and ljmp jnp xlat test adc xchg pop lea cmp pop fnsave mov or mov lods hlt jge (bad) incl xlat adc out (bad) outsl cmp pop mov jb js repnz inc push adc lock push add add mov pop jb shl add movsl hlt shll xor ljmp ror xor adcl (bad) cmp incb jb xchg sti add lcall xor inc pop jns push or xchg (bad) (bad) (bad) incl xchg gs push (bad) stos jp not inc lock mov out scas add (bad) (bad) ljmp fcoms push bound lods push scas inc (bad) mov (bad) (bad) aas lret lds test in pop xor and mov push jne xchg jo inc and aaa cld out ds loop or jno movsb adc decl (bad) sub pop add icebp pop ja pop push adc (bad) (bad) (bad) push adc loop fsts or dec dec rorb or cmp or addr16 pop bnd iret test add jmp mov inc stos cld (bad) (bad) (bad) incl lret cmc jo xlat iret fstpl pop sbb ss xchg or ss xor add (bad) jg lods data16 jb out dec pop aad and pop std jg add xchg in adc jge and pop ror dec test xor (bad) (bad) ljmp sub mov push pop add sbb fs movsb (bad) loopne pop adc in mov jecxz cmp sub cli xlat clc decl ljmp fs sbb jg (bad) incl pop ds and int cmp dec (bad) cld xlat push pop add icebp push ljmp aaa nop fs xor ret dec adc test fcomip lcall in (bad) hlt mov in jnp inc jae inc add scas idiv lcall mov out iret enter (bad) int cltd cmp adc mov (bad) fidivr sub (bad) adc fisttpl sub jb bound mov pop stos (bad) cmp jmp aam jae ljmp ds cmp and movsb mov mov and (bad) decl in sub test push push cmp push dec ret xlat test enter shrl rcrb sub je sub sahf adc xchg pop xor push fsubr (bad) (bad) pushl iret push sbb and test repz pop mov pushl mov fwait pop lcall mov mov iret xlat das mov pop and (bad) jl sbb jnp imul fsubr stos and (bad) js inc jecxz xlat adc add xor fldl2t (bad) ljmp inc icebp mov in lds fdivr inc pop pop mov cmpl xchg fs pop repz les mov push inc inc cmp cmc (bad) or test es cmpsl inc fildl pop outsl cli (bad) pushl push cmp fsubr cmp or (bad) (bad) out push or pop xor sar xchg jbe and adc cltd xor hlt mov das adc insb add jp (bad) fcmovbe icebp jb,pt (bad) (bad) call adc mov lock mov mov cmp cld cli and ljmp cmc mov xor mov cs or (bad) call cmp imul jne jnp pop outsb adc xchg (bad) aad xchg jl mov insb ljmp mov lahf or ds (bad) mov dec mov cmc xchg xor dec cs or (bad) jg ljmp jg aad xor and jno bound sahf add in ljmp push data16 pushl inc xlat dec int3 scas das aad lcall (bad) sti mov jae sbb (bad) aaa call (bad) mov xchg cmp dec fidivrl pop xlat or mov lcall aad jp (bad) addr16 sub inc jge fimull xchg cmp or out or adc js gs leave xchg fucomi repz in inc push cld (bad) fistpl push mov inc push xchg mov lods jecxz cmp pushl adc leave inc mov dec fistl lahf xchg sarl fcomip insl addr16 ret rcll (bad) inc out nop pop std mov lock push push cs lret adc rcll clc inc jp and sub pushl std repz in pop movsl inc xor pop xchg ss mov insb inc cld push pop clc cmp les push cmp fsubs add jg outsl jp clc je bswap or jno das ds inc mov js inc test inc mov iret loope arpl sbb fxch outsl aad cmp lcall add mov out aas mov push stos xchg (bad) (bad) lcall stos mov clc mov into add stos inc sti stos aaa push icebp dec out fcomi xchg mov adc jg sub fsubl ret xor push fstps fstl cwtl (bad) (bad) (bad) jmp sub shrb lret loopne cmpsl push aas add mov cmp daa or in in pop xor mov lds sub das nop jp pushf lods lods jnp lock jcxz or pop inc hlt lcall mov popf das subl inc (bad) ljmp aaa testl arpl pop and lock and lods imul icebp mov push jae (bad) mov inc hlt aas mov jno and pop daa dec in mov idivl rcrb jge stos cld (bad) (bad) ljmp mov add (bad) mov insb psrlq scas movsl (bad) add pop nop outsb lock sbb add inc inc mov cltd in cmc (bad) (bad) (bad) lcall xchg or sub add and cmp and jnp inc testb xchg cld (bad) incl mov out jmp les int3 out ss popa test das cli (bad) in dec lcall and scas sbb clc dec shl xlat cmp push (bad) (bad) (bad) incl ret divb cmp inc iret fdiv out sub jp xor (bad) (bad) jg mov push (bad) adc scas aam gs mov mov add add mov insl jns aam rorb jmp (bad) stos mov test or loope or arpl jns add or mov inc sub (bad) (bad) (bad) mov push push dec jns sub mov mov es (bad) adc out stos xchg dec jg sub (bad) push ljmp lret cmpsb subl lcall jnp jnp mov into push es inc pop pop mov jb add lock sub push decb movsb mov cmc (bad) mov popf add add mov inc or mov xchg mov (bad) (bad) (bad) pop rolb add enter sar cmc inc hlt cltd sbb or dec ljmp scas lods popa movb aad sarl lret (bad) ljmp cmc xor dec lret movsb xor mov pop xchg cli or push mov inc jns (bad) ss mov mov push imull push xlat mov leave (bad) (bad) (bad) (bad) push pusha adc jecxz scas sub (bad) cmc lods xor int (bad) jns cltd out js and xor jecxz and lods insl xchg mov test (bad) (bad) pushl and loop loopne mov jg outsb hlt fdivrs cmp push mov pushf lock push mov call push mov in adc cmp aam xchg (bad) (bad) (bad) incb in lcall cmp cli mov mov fisttpl loop mov (bad) pushl dec mov cmc out loop aam dec cmp gs (bad) (bad) decl mov stc inc das adc out popf dec add lock adc push test adc rorb sbb pop js fmull fldt out mov cli (bad) incl in cs dec (bad) divb leave fistpll add insl test push ret pushl adc push pusha sbb stc cmp imul (bad) aam push repnz cmp inc mov sub pop fdivrs (bad) (bad) incl ret pusha (bad) fist pop ret pop out pop das sbb and xor jl add decl sub xor inc icebp jge pop pop xor mov cmp arpl imul jmp inc popf sti aam add jp xchg sbb (bad) (bad) lcall mov cmp fs jle mov sub mov pop jae decl pop in cld dec inc sub (bad) pop adc dec movb or cli (bad) (bad) (bad) decl rolb fwait dec inc mov cmp aad pop push aaa pop fwait stos dec stos sub das lods aam in xlat (bad) (bad) (bad) inc fidivl ret xlat dec mov xor lds ja push adc sti add lcall cmc mov xor dec adc cltd jns and mov and cmp stos (bad) (bad) pushl sbb repnz mov cs cmp inc jo add int mov insb mov pandn sti (bad) or xchg mov ret fsts out arpl (bad) out cli dec (bad) iret addr16 out jb jbe hlt mov repnz (bad) cmp incl jmp sub popf mov sti mov mov xchg cmp insb (bad) (bad) cmp ljmp shlb (bad) push ja cld (bad) mov sub xor push sub jno bound (bad) fstl lret repz mov (bad) ljmp faddp rorb out mov or mov ss mov cmp push mov imul inc dec popf ret sbb xchg inc (bad) (bad) jmp cmp add repnz sbb stos inc sbb (bad) (bad) jge inc pop jae lods stos push adc jo std movsb jle negl stos mov fldcw (bad) incl sbb push and mov mov or adc outsl cli jmp mov ljmp adc or jle mov popf add pushl imul lret es clc xor int in sbb call insb sbb adc bswap into add test (bad) jmp pop lret mov sbb in push arpl lcall xlat sbbb jp add pop out cli xlat mov (bad) decl push sti dec ss dec lock dec ret (bad) test data16 inc in aad push popl lods lcall arpl int3 imul cwtl push (bad) dec sub mov cmpl loopne decl lock pop sbb nop sub sbb fsubp les cli lock and sbb cmp (bad) jmp add (bad) hlt xor test in sbb ret (bad) (bad) out mov mov pop sbb das loopne pop hlt iret dec and adc mov lcall cmp add xchg adc inc inc xor or xchg out pop out pop mov xchg jbe mov pushl cli shlb adc mov movsb xchg stos cmp pop adc mov sub movsl sbb mov jb jle adc mov push xchg lret pop lea push ds (bad) lcall lahf clc adc dec ficoml in pop push ret out repnz push (bad) (bad) (bad) jg ret test fist cmp in enter jne es mov inc (bad) call neg pusha ret mov push out test movsl in sbb decl fwait icebp push je sub lcall sub (bad) (bad) (bad) cmp xchg push or insl gs xorb dec mov jmp (bad) ljmp stc rol push fwait dec out push inc addl imul (bad) (bad) (bad) jmp dec test negb arpl shlb lea sub lods pcmpeqw adc cmc stos xchg in jne and cmp decl dec imul adc cmpsb jle add movsl mov (bad) decl inc into rcrl xchg and lea dec inc mov and adc jo fcos orb adc (bad) (bad) (bad) pushl sbb inc out push mov push inc mov (bad) ret lock std subb aas ret (bad) fildl out loop or mov repnz cs incl or out mov and jg jo dec rorl ret jmp dec sub scas or fidivrl xchg cmp sbb cli xchg sbb cmc incl cmp dec sbb pop sub out push (bad) (bad) (bad) lcall pop dec fildl inc lret dec mov bnd fs mull adc dec data16 es (bad) call and stos in xchg push push movsb std loop lret push jo or (bad) test dec sbb mov (bad) mov gs push add fisttpl pop jl icebp mov aam inc or jl (bad) decl mov xchg sbb jo adc rorl or call xchg pop es fsts cmc adc pop ss adc aas sbb iret ret mov and lcall sarl data16 adc add pop (bad) (bad) (bad) mov lcall dec daa repnz cmc jnp fimul shrb mov (bad) (bad) decl imull test pop cli loope sub mov (bad) incl in mov (bad) xor or dec (bad) lods inc mov pop inc test (bad) ja cli pushl pop inc adcl push cmpsb aas mov or jmp xchg sub dec mov mov outsb fcoml call adc repz mov sub jge (bad) mov jle imul jp pop cltd lea adc pop adc (bad) jbe xchg pop push inc push sub mov insb (bad) (bad) jg (bad) mulb and (bad) xchg push mov js or sbb movsb adc pushl data16 out mov mov lds fdivrs pop outsb jns pop mov xlat hlt adc push lods (bad) rorb sti dec push mov dec cld pushl cmp jae scas mov (bad) je ficoml mov incl pop jno adcl mov ret lods push push adc lcall add sub mov (bad) pop push push mov (bad) (bad) call mov cmp mov (bad) mov fstl dec rcll bound pop xchg (bad) xchg or pop add test (bad) cwtl ds mov push enter inc ljmp je insl sbb int3 xor cmpsb scas (bad) cli (bad) cmp int mov push dec mov test (bad) (bad) ljmp xor enter push mov xor adc in ficomp inc mov stc (bad) push scas xor jo cltd cltd imul inc int3 adc sbb push (bad) outsb add adc mov iret shrb (bad) (bad) (bad) pushl in setl gs repz loope lods and outsl scas xchg and jae jp inc (bad) jg ret xchg jns inc out test adc test mov (bad) in lcall ljmp or sbb mov pop sti decl js and push fs cli mov cmp (bad) call pshufw mov (bad) int3 (bad) call mov push add decl enter or loop cmp test (bad) fildl mov imul mov call addr16 xchg mov pop push negb fistpll jno jmp (bad) ds mov xchg call adc xchg in (bad) (bad) (bad) mov inc push xor inc fistpll or jge inc cmp sbb jae inc repz ja inc orl rol jp inc iret jmp xor cs inc cld (bad) lcall add fnstsw mov test sbb mov ds pop (bad) (bad) mov daa xchg scas sbb scas in mov add dec outsl cmp or adc lods push (bad) (bad) (bad) jmp and lcall aam (bad) popa sti adc aaa imul mov mov (bad) in imul je incl ds fs scas xchg and and out ja cwtl aam (bad) decl sbb cmp pop (bad) and arpl (bad) sahf xchg push sbb and jg aad jmp inc pop icebp in cld repz pop jno xor mov xor movsb aas loop notl inc xchg add scas and call xor lds sub or scas dec add push (bad) lcall xor adc pop mov pop mov clc (bad) (bad) jmp mov pop movb stos cmc mov and les lods das adc ljmp mov inc (bad) in mov cmp cmc rcrb ljmp insl into inc push (bad) sub mov into jp (bad) (bad) (bad) incl add mov inc add or in mov xchg sub and repnz mov test repnz loop daa into hlt cmp jge lcall clc mov push jne (bad) (bad) ljmp push xchg in and xor mov or ljmp xor mov push inc jbe sbb scas push icebp or cld inc xchg fldenv mov sar incl sahf inc loopne pop mov push jns bound or push push sti test cltd rcrl pop dec sub jnp xchg cld (bad) (bad) out push (bad) push popf sbbl fdivrp inc aaa xor stos add pusha jnp sbb pop cmp sub sub xor arpl xchg popa jmp pop ss out lods iret dec mov jae ljmp or xchg pop pop lock test int adc dec jb sti add (bad) lcall (bad) push xchg outsb (bad) pop outsl mov mov push inc or mov out push int3 sbb pop hlt ljmp les pop inc push ljmp xchg dec cmp rolb test mov cmp aaa hlt (bad) lods add mov arpl xor fcmove inc fisttp (bad) fildl inc (bad) adc clc incl xor jmp sbb or xchg sub clc (bad) ljmp lods mov or xor neg out jle js or (bad) loop cltd mov fsubl cld pusha cli pushl push icebp mov pop fildll (bad) jae movsb adc dec (bad) pop adc nop fnsave test and pop sbb cltd mov lcall (bad) (bad) jmp inc (bad) fs in (bad) sbb xchg inc mov mov jmp aaa pop mov xchg xchg notl clc addr16 pop lret add (bad) (bad) (bad) mov push fldt mov enter lahf popa leave aaa loopne jbe xchg test outsb shlb mov mov data16 (bad) (bad) pushl shlb adc push lahf cmp jbe stc mov mov mov pop cmp jg (bad) (bad) fistpl dec jb loopne add xor cmp push insb push push pop fbld decl push dec mov inc std push pop push std (bad) lcall (bad) lret (bad) mov push movsl dec pop add push mov gs test (bad) (bad) pushl incl gs (bad) and jle in push dec pop lock sti dec sub (bad) pushl cmpsl mov lock addr16 push xor in sbb (bad) (bad) decl dec adcl imul lock push aad push mov mov (bad) (bad) (bad) (bad) xor lret push fimull lds sub mov pop sbb jg jp ret into mov or xchg mov gs pushl add movsb cmp jp loope loop bound ljmp cld inc lret popa or mov mov (bad) (bad) (bad) jmp pusha sbb daa dec (bad) cmp sub adc mov call mov in jmp xor orl ss gs (bad) insb jo test movsb and fistpll mov cmp sub or lahf add adc outsb (bad) jp bound or nop (bad) scas call jae mov call iret imul mov cld jno adc pop push out inc pop dec jne cld (bad) call inc (bad) bound push mov pop mov xchg xchg test xlat cmc jg stc adc nop cmp mulb incl out mov out cmpsl test pushl inc fisttp fwait (bad) idivl into outsl lcall jo inc pop (bad) test (bad) (bad) jg stos sub jno popa jb jae or sti lods fs mov or clc (bad) (bad) jg aaa dec pop cltd dec daa xor mov lret insb into int3 fsubl sti stos pop push cmp mov ljmp mov arpl mov clc aaa ljmp icebp push call jl jmp ss (bad) aas xor arpl mov mov test cmp in jl frstpm(287 push movb jb jecxz and lcall nop mov popa push jo test lds xlat cmc (bad) jg jl mov mov notb ss xor pop mov xchg pop mov into adcl test or shr fstl loop sar test fistp mov (bad) call into ja movsl sbb xchg mov pushf out jnp hlt xor sub cmp in mov fisttpl rcrb addb pop test (bad) lcall inc (bad) jg out popl jnp adc dec fwait cvtdq2ps sub les out out (bad) (bad) (bad) ljmp movsb adc inc mov push xor call lock leave (bad) (bad) call hlt xchg and call fisttpll or icebp mov jmp (bad) (bad) aas sub jo and and movsl or pop lea push cmp sbb repz lret repnz jg or jae test push pop ret push out mov or sti movb insl test push add lret pop fs sar jecxz (bad) (bad) (bad) (bad) in je pushf cli or nop xchg push sbb push dec sbb sbb imulb mov or sub mov or decl cld push loope jno sbb xor lcall movsb (bad) pushl stos das push fbstp dec jg pop mov mov mov aad clc add cmp loopne test and in mov sub (bad) inc mov in das popf inc mov adc or push xchg adc mov sub pusha shll lods cmp mov push xor loope lds aaa cmp call lcall stos push inc adc xor out add pop mov adc push and idivl pushl and inc sub enter ret jecxz add cmp or sbb loopne xchg (bad) loope and mov cmp arpl ljmp jmp lret or rorl add xor inc pop mov imul pop push sbb inc inc ret arpl lcall lock pop sbb repnz scas xchg push xchg (bad) cld dec enter pop or cmp scas test (bad) ljmp sub sbb dec or daa dec add clc call in mov arpl add aam mov and or (bad) fist dec test rolb inc imul ret jo,pn push sbb xlat mov les (bad) (bad) aas adc js popl adc mov or dec sbb dec cltd cli incl xor call cwtl cmpsl mov cld pop mov aam pop xchg pop movsb push or jl jg jg fxch imul push jge scas (bad) (bad) pushl les pushf das pextrw adc add or add mov decl sbb (bad) lds push (bad) enter adc lcall pusha xchg push std sbb sub jle dec dec hlt insb (bad) jg dec push mov adc arpl xor nop xchg inc cld jmp aad sbb nop mov (bad) incl fidiv adc mov jns cmp mov and outsl mov (bad) hlt cmp xchg push sbb dec jge iret std incl jae sub ror xchg mov mov lret adc movsb sub dec loopne roll xor cld (bad) (bad) cmp mov or cli adc inc popa lods xchg cmc stc push movsb pop xchg cmpsl adc (bad) jle pop aam and dec xchg inc (bad) (bad) (bad) pushl out dec iret inc test insl cmpl or mov xor adc mov add (bad) lcall pop jne addps rorl mov adc test (bad) in (bad) jmp and jns in xchg ss das pop mov call imul xor loop (bad) (bad) (bad) in ds cmp or test (bad) rcrb jl mov (bad) push (bad) (bad) call (bad) push xor test clc jl lods push mov or in (bad) (bad) (bad) jmp sub inc addr16 lea xlat sbb inc push mov mov inc sbb iret add sub xchg push adc xchg decl xor idivb xor mov clc insl rclb lods mov ret inc in out sahf lods or andl decl enter push sub add (bad) (bad) fisub xchg inc out sbb fsubrl imul mov and and rorl std xchg dec je push cmp dec fist fs (bad) (bad) call adc imulb mov nop test cmpsl dec jg and ror jne push mov dec mov dec iret xor jnp arpl mov pop lds aaa push (bad) (bad) mov xchg dec mov mov popf mov rcrl enter (bad) decl ja xchg lea pop mov (bad) (bad) mov aam call jb andl and add jle sbb insl outsl inc flds (bad) ror xor and call popl ss and pusha mov push mov push fisubr (bad) sbb mov lcall decl mov enter fstpt (bad) push sbb ds cwtl pop in outsb and push clc pop stos sahf sbb and (bad) mov dec jp jae lock std ds jo xchg sbb and dec lods pop dec pop call dec cld addr16 iret (bad) mov cwtl (bad) adc (bad) inc mov or mov mov cmp adc iret (bad) mov lods hlt mov frndint loop add lret out mov sbb nop xor repz (bad) (bad) (bad) inc lods xorl cmpsb pop lea sahf js inc xchg jmp adc ss mov xor fmul fucomp jle cmp scas ret leave mov push (bad) hlt and in bound sar and xchg jb (bad) cmovae pop mov dec jbe mov inc les add push jl push xchg negb ljmp add jecxz adc inc sub push mov test (bad) (bad) call inc xchg mov test mov jl or adc and push ja lahf pop cmpsb xchg mov rcrb mov pop adc enter (bad) jo std (bad) lcall fdivl sahf sti sub insl leave pop sub (bad) dec outsb ret test aaa rcrb arpl pop js imul xchg jecxz or call inc sub bound and je and (bad) (bad) jns cmp jp or sub movsl sahf idiv into push mov push stos jge mov mov call adc (bad) ljmp jno sbb adc push dec or into stos pop loop jle aaa lods sbb lret add sbb pop add inc xchg pushl push (bad) sarb pop sub hlt addr16 and (bad) pushl les jae mov jmp push jb scas adc aam or (bad) xor insb ljmp jg cli bound cltd add pop in pop int3 mov mov pop pusha clc (bad) (bad) jg and js bound fstps (bad) fldt sarl cmpsl xchg fnsave repz (bad) aas sbb nop lods out add xchg cltd int push je (bad) (bad) (bad) jmp mov sub jge pop mov andl paddw int3 cmp (bad) (bad) jg aam decb aas test nop and push push cmp sbb push rorl aas leave jns push sahf or cs out sbb in and jne lcall jg xor or mull test pushf std jae faddl jmp jmp je push aam mov push sbb or mov mov jae pop sarl pop add in decl lock push sub dec jne push pusha in pop push jo or and (bad) ljmp mov popf pop cmp sbb sub enter (bad) (bad) jg mov jecxz cmp stos xor adc cmp xor sub (bad) fcomip inc sub adc enter fiadd pop lret mov outsl jle (bad) call mov dec xchg lds fiaddl push mov adc or (bad) (bad) pushl jns xchg or xor rcrl pop jno push imul (bad) in lahf imulb fistl int3 sbb pop inc stc jno scas (bad) (bad) (bad) decl push xchg xor inc stc cmp inc sub xor inc inc mov lock ffreep bound mov jmp test sbb scas loope jo xor xchg negb (bad) (bad) push push mov or push mov cmpsb cwtd clc pushl pusha cmp stc clc lret sbb xor jmp mov popa roll cmp lock xor add and push icebp (bad) mov leave mov xchg les xchg lea (bad) hlt jo pushf ljmp mov (bad) in lcall (bad) (bad) (bad) fistpl sub jp jp or mov xor sub sbbl mov std jg pop push mov xchg push rolb xchg (bad) mov mov cmp into orb (bad) pushl std pop scas out cld fwait jbe mov loop (bad) js enter insl es int3 sahf xlat inc (bad) and (bad) jne xor ljmp mov mov push cmpsl add ss xor (bad) mov ficomp cmp outsb xor mov dec daa pop outsl and xor push lcall push fcmovnu push dec loopne mov adc ljmp xchg inc (bad) (bad) (bad) (bad) jg mov jae rcl shlb jb jae or (bad) (bad) fidivrl adc dec mov (bad) out ret inc rcr in inc enter lock sub mov lret add aam jg jmp (bad) mov cmc jno sub lret aas test adc decl fwait ror ljmp pop mov das fldl pop (bad) (bad) (bad) (bad) cmp push out inc jmp fadd mov jo ljmp dec sub sbb (bad) jmp stc xor popf decb lods add ret repz (bad) (bad) (bad) jmp addl enter in mov into inc sbbl lds xlat xchg (bad) call inc inc icebp dec imul jno jne mov sub test push xchg mov jle je test dec js gs aaa mov jp xchg cmp jl test xchg cld scas cmp sub loopne loop mov mov cmc test (bad) (bad) (bad) pushl pop imul addr16 ret or cmc pop insb fldt push inc mov lcall cmp dec scas mov das dec sub stos dec sbb and sub lods daa lcall sbb sbb xchg stos ret xor jge xchg xor testl mov mov decl movsb jecxz mov jle lcall xor inc jae fisub sub inc sbb out pop jecxz aad jmp iret xor je inc dec or sub (bad) (bad) ljmp imul and push imul or gs bound xor jne std cs rclb cmpl sar pushl fsubs movsl (bad) inc fiaddl (bad) js dec adcb call outsl les xchg cld mov xchg stc push cmp mov cmpsl popf movsb aaa call mov mov adc daa sbb (bad) (bad) (bad) jmp imul xchg and dec mov or pop (bad) iret in push (bad) cli sarl test cltd xlat ds (bad) mov mov xor mov aam lods rorl clc lcall jge pop in cmp dec out icebp sbb shlb pop hlt (bad) iret popa out scas adc jecxz or xchg pop aad xchg int sub decl sbb mov outsl adc add dec sbb (bad) lcall fcoml in dec pop or pop cmpb lock incl movsb push aaa hlt shrb jmp rolb and mov pushl xchg mov fs inc mov sbb test mov (bad) jmp pop aam mov rclb add arpl ret fdivr stos movsb (bad) and loopne cmc pop dec roll sbb (bad) (bad) lcall aam dec adc mov sbb jbe mov loop (bad) incl push inc dec icebp movsl cli xor push (bad) sahf ja out jmp (bad) jg mov adc jnp mov sbb push ds mov shrl (bad) (bad) pushl inc fstpt pop pop sbb or pop lahf xchg adc xor jae das xor (bad) call or mov (bad) out arpl cld insb lret idivl (bad) (bad) pushl sti or ror and inc add loopne (bad) js and adc (bad) out cmc rolb ja jb (bad) call pusha xchg rorl or sbb nop jl add loop bswap (bad) mov (bad) mov aas sti aad cmp bound adc cmpsb ljmp jl lods int3 xchg pop sbb out sub sub mov (bad) incl inc mov dec mov sbb xlat dec sbb mov fiaddl test (bad) cli xchg jns mov aam out sbb (bad) jg popf (bad) mov mov lahf sub jp adc (bad) hlt (bad) (bad) lcall test jge cmp lea sub mov add cmp mov cmp sub adc rcll lcall pop or add push aas repnz xchg cld mov cmp stc fmull cli jge fild aam addr16 pop (bad) (bad) (bad) call mov mov std insl shll stos mov mov fistp rsm inc or out icebp testl or push push pop cmp xlat (bad) (bad) decl cli inc imull les aad pop les pop nop rcl jecxz (bad) jg dec mov push test lret inc pop sub imul (bad) mov add (bad) out incb dec pop adc pop popf arpl lcall mov lahf cmp mov xor or and (bad) (bad) (bad) jg sti lret mov (bad) mov sbb (bad) icebp cltd ret mov xor nop jmp push jecxz (bad) (bad) pushl pop xorl jl into push add je (bad) das xchg mov aas rcrb push xlat in inc cs mov pop push pop and dec add adc leave (bad) (bad) decl (bad) les popf lea popf mov sbb std (bad) adc dec leave out clc (bad) jg fsubs lcall out jl lea fs (bad) (bad) (bad) ljmp gs outsl jecxz xor push push mov mov inc or adc shlb push incl dec sbb imul cmc fdivs lahf mov add insb push push (bad) dec mov mul repnz aam stc (bad) jle shlb (bad) lcall jmp push cmpsb lock adc jge add (bad) decl fadds cmp inc in cmp fs (bad) (bad) (bad) fucomip mov movsl add adc jb push aad stos xchg inc xchg movsl jg and pop rcr add pop sub cmpsb adc std push sub lcall jo das mov jns sub lds lret sbb outsl fcmovnbe data16 lcall xchg push jle mov add inc pop (bad) fdivl in dec inc mov gs xchg mov or xchg ja jmp fcompl daa mov dec dec dec into (bad) add pusha jmp lods stos in fs xchg dec dec xchg int3 ja (bad) inc push in add ret and in inc cld lret pop jecxz pusha in scas xor dec and test mov fldcw call cmp (bad) (bad) mov and lret push mov mov fsubrs and (bad) (bad) incl stos loopne or lret add or clc mov outsl jbe mov (bad) jmp inc pop int3 mov jno lret mov icebp (bad) decl push dec lea jecxz test pop leave scas fwait (bad) cltd sbb decl stos stos idivl iret lahf int3 scas inc sub pusha jge push icebp (bad) (bad) call loopne dec cld cmp sub insl ja xchg cmp cmpsb sub (bad) (bad) incl inc lret cmpsl (bad) pushf cmp push mov aad and push jne (bad) stos fldcw adc (bad) jg (bad) mov inc mov sar push inc test dec pop dec sbb jmp int repz sbb loop push insb js inc inc sub cmpsl mov leave push fildll addr16 cwtl xchg push into pop (bad) (bad) (bad) (bad) out mov xor mov cmc and pusha sub hlt clc cmc lods xor ret jg ficompl and test test loope jb imul aas jne mov enter mov mov mov popa or pop shrl (bad) incl movsl jne sar pushf (bad) cmp push pop aaa out mov incb mov ret push mov (bad) (bad) inc adc lret popf rclb movsl push in jbe lods out mov xchg or xchg push faddl push test stos jle mov mov lcall (bad) (bad) (bad) ljmp xchg pop popa ljmp int push (bad) popa mov mov repnz lret (bad) pushl ja mov jle mov jb mov call jae pop pushf (bad) pop xor jo mov xor jo push dec lods lods (bad) (bad) jg mov pushl pop xchg inc dec sbb pop aad ja and mov mov cs (bad) (bad) decl pop cmpsl jecxz sub push dec push mov xchg (bad) js inc pop in cmpsb push pop cltd sub sbb pop popa jmp test mov ja inc daa sbb push mov gs (bad) (bad) (bad) mov add jo inc jecxz lods mov fwait mov (bad) jmp inc inc dec jnp popa aas and mov or insl addl adc in ds cmp testl mov (bad) ds xchg adc xchg loope sti (bad) (bad) (bad) jmp addr16 outsl inc sub cmp pop jle mov sbb (bad) sub test loopne cmc adc adc mov mov xor js (bad) call lds lds ret popa jno test addl add (bad) call pop insb pop fwait mov pop movhps adc ret pop in add dec push push xchg pop or cld (bad) incl (bad) and mov nop ret cs mov jg call or jnp xchg inc dec xor inc stos xorl inc mov iret dec dec imul mov mov sub inc lods lcall jmp loopne jg dec leave in sbb cli imul cmp pop mov out hlt or mov jo mulb and (bad) xlat (bad) mov xchg adc or dec add mov dec (bad) andb pop aaa stc inc lahf mov mov (bad) sahf jns cmp push nop sbb (bad) pushl dec (bad) jae sub dec clc insb and sbb mov mov (bad) pushl adc dec mov push js cs enter jnp imul add mov push xor sahf xchg push mov pop push adc bound ljmp insl cmp lret (bad) (bad) (bad) mov fs gs cld jns xchg xchg imull in or dec lds mov mov jp (bad) dec add insb lea test out mov pop xor mov jns ljmp testl ja mov inc push cs aad fmuls mov test decl (bad) dec mov jb sbb mov sbb jg (bad) dec fcom popf xchg lahf enter loopne incl es mov cmp mov js mov sub movsb or outsb loope mov pop int sub leave (bad) cmp xlat setbe mov pop or (bad) call pop test sbb jl xchg stos mov test fiadd pop mov mov cmp loop xchg out mov (bad) (bad) pushl std pop lret gs cs je stos and fisttp cmp dec xchg movsb loop ret or xorl push adc cs pop pop push and (bad) (bad) ljmp mul mov cli fwait push jbe lcall fisub inc dec xchg mov (bad) (bad) pushl icebp popl push enter cs jbe pop dec jbe test pop into out sub (bad) lcall loope mov (bad) repnz mov dec shrb push (bad) inc jmp decl imul and inc or ret sub jle xchg xchg clc rorb push (bad) (bad) (bad) jmp mov xor cld loop or adc je mov jecxz aad add (bad) jmp mov cs scas iret lret cmp and mov (bad) jo fmull pop mov js (bad) (bad) (bad) call outsb hlt or out in out dec mov aas scas xchg movsb scas (bad) dec jno push (bad) in call fs mov fs nop (bad) jg nop sbb loop ror aad stos loop mov sbb insb pusha cmp out (bad) (bad) (bad) mov dec or sub cmp rorl data16 or lods les push imul or pop loop das ss (bad) (bad) mov and syscall xchg stc ljmp addb dec mov inc hlt incl push imul orl add (bad) (bad) incl outsb inc mov sti jge push lds lret jo in fcomip push repnz stos mov adc lcall lea fmul dec es push int3 add ljmp sti add dec push cmp fsubl out dec cmpsl xor sub lods mov push xchg scas adc adc push cwtl cs xlat add pop mov incl in icebp xorl jecxz addr16 add (bad) jmp std inc arpl (bad) jo push cmpsb ja xchg xlat push movsb xchg inc hlt ret scas push nop inc push lret or xor cmp dec (bad) (bad) jmp fstpt mov xor cmp idivb dec cld aam (bad) (bad) (bad) in mov loope in cwtl lcall test in jb pop lods mov (bad) mov das (bad) lock rcl rorb rcll arpl (bad) (bad) fbld fs mov fwait adc out loopne xchg xchg roll (bad) xor les pop xchg (bad) (bad) (bad) std pop daa (bad) push cmp ljmp cli push mov cmpsb cmp mov and test std int3 push aad aas xchg xor xchg cmc mov sbb (bad) (bad) call loopne push mov cmp aam (bad) push pushf or push or push hlt shl or push ret pop fcoml push (bad) add (bad) (bad) (bad) decl xlat mov mov jg jge cmpsb (bad) mov mov inc js cmp cmp paddq and cmp popa add aam rclb dec sbb repz inc inc aam sbb xor ret or out jg mov ret adc pop mov test out movsl and sahf (bad) call adc push cwtl mov dec pop mov (bad) call jns sub inc jecxz lock bound das lods jp adc popf xchg add pop add fdivrs sahf mov (bad) jo iret call sbb fwait or out hlt repz test jmp scas loopne pop repnz jne mov pop sub push lods imul or mov movb xor enter and jo imul rcr ljmp or fwait xchg ljmp sub aas pop rolb xor js mov and (bad) mov rcl sbb jo mov sbb adc bound jmp or cld mov ret rorb iret (bad) (bad) pushl fcmovnbe addr16 dec in and imul enter (bad) push inc enter pop gs in test imull sbb ret xchg mov xor lods jg int3 flds imul lahf fistpll inc (bad) (bad) (bad) decl lds nop repnz pop adc sub sub lret jbe dec mov pop nop lea xchg or xorb xchg ljmp inc mov xor add adc pushf mov mov xchg clc jmp and scas lea xor or stos (bad) (bad) (bad) decl push sbb adc push or fnstcw jle jmp cld push mov imul aaa cld lret (bad) adc mov push imulb add (bad) call push imul je sub mov (bad) (bad) (bad) (bad) cmp jo adc push outsb icebp or pop push adc ss cmp call fs decl sti aam outsl gs dec lcall movsb lock and xchg lcall sub mov jl push scas add (bad) (bad) jns jp dec out mov jb xor aas and cmpsb pop jne outsl dec fiaddl jns sbb mov jmp lret sbb push mov add inc inc lea sbb pop cltd xchg xchg test push xchg mov xor loope ja (bad) mov stos dec mov jg mov adc movsl mov xchg or add and jg adc loopne sbb push add sub lcall xchg je test pop (bad) cmc push test test (bad) (bad) jmp xorl mov dec loop mov es pop and insb jae xor xchg lods out test adc shrl (bad) (bad) call push push sub (bad) mov jecxz mov mov cmp inc and mov (bad) (bad) cmp test fimull cltd adc cwtl mov dec or (bad) jg icebp stos adc scas mov dec sub mov (bad) (bad) decl bound fs xchg fwait adc in mov mov stos push int cmp pop xchg lock or jbe js xor inc repnz pop dec call (bad) jl xchg hlt pop mov pop sub rorl cltd jae repz (bad) (bad) push ds roll movsl add (bad) mov (bad) (bad) (bad) jg test push push cmp mov shr pop (bad) std jg and jno push and jecxz xchg (bad) (bad) call mov negl jae int test xchg out fwait xchg jecxz sub incl pushf loop cmpl cli popf jnp loop bound (bad) lret out cmp loope (bad) iret lret pushf ret movl xchg inc or test add and std (bad) mov js jge fild or dec cli sbb (bad) (bad) pushl leave pop jae (bad) mov ret adc mov adc popa out pop loopne lahf pusha or call jne pusha add fdivs sbb jae cmp (bad) pushl sbb push cltd rcrb jo adc sahf out ret out pop lahf inc call add data16 pusha add dec mov and (bad) jg adc push jb stos or popa inc dec iret ja jae push xor pushl (bad) sub mov movsb adc xchg bswap ret daa adc sbb les dec fcomi ret jl jo int3 sbb call lahf ja (bad) repnz (bad) call mov cmc cmc pop mov ja mov popf arpl popa xchg lds in fdivs pop pop xchg adc outsb mov (bad) (bad) (bad) (bad) fist inc imul sahf adc jmp mov (bad) out rolb xlat test pop add dec outsb (bad) sub nop pop xchg into imul cmpsl adc (bad) fcomip pop mov aam jo sti push negb pop adc mov stc (bad) sets cmc (bad) push ja stos leave xor call test outsl mov push mov cmpsb and es incl inc repnz (bad) hlt in in (bad) fbstp nop movsl lcall jecxz adc mov mov sarl or pop inc (bad) lcall cmpsb dec es leave xor leave pop push or push mov (bad) (bad) (bad) call inc mov ljmp sti push outsl or popl push cltd sahf call clc (bad) out push cld sbb or call packssdw jo sti hlt (bad) ljmp int cmp inc ss xor iret inc push xor dec cmpsl sbb pop xor lcall ja xchg js mov aaa (bad) rcpps stos hlt jg pop adc addr16 movsl add (bad) (bad) ds in sbb lahf add mov (bad) (bad) jmp movsbl fsubr cmpsb test and jno cld dec pop dec push adc adc cld (bad) (bad) decl mov and jae push sahf addr16 sahf ficomp inc hlt loope mov inc call fmull idiv (bad) cmpsb pop cmpsl out mov test fwait adc scas or sar fs outsl mov sti sbb or addl decl (bad) ret dec lods popf mull (bad) or stos leave dec mov (bad) (bad) (bad) jmp sar out int3 sub ret xchg sahf cmp inc lods cwtl mov adc xlat movsl push inc adc lcall sarl lcall push js shrb int jbe cmpsb (bad) (bad) (bad) ljmp scas xor dec idivb jle pop out cwtl cmc lods sub dec mov jp sbb pop (bad) (bad) fiaddl test xchg fnstenv les (bad) (bad) (bad) cmp loop cld (bad) cmp jl pusha inc loop and inc test sbb (bad) decl roll scas pusha iret mov adc test push mov icebp lcall je imul psubb pushf and test adc (bad) mov loope idivl jo inc mov and mov dec pop ret in aas ss xchg ret es (bad) (bad) decl add dec rcl outsb pushf xchg jge xchg icebp xchg and mov pusha (bad) pop mov incl test (bad) fmuls add lock jno adc out xor (bad) call mov and dec ds imul lret fimul mov aas leave lcall sub loop jl fwait sbb fimull cmp push sub lret cmp (bad) (bad) call insl test jl dec adc ret mov mov (bad) repz (bad) jnp addr16 pop mov jne inc mov mov pop rorl jge (bad) (bad) (bad) (bad) (bad) frstor rolb aam sub push es (bad) jnp push (bad) stos push add push (bad) mov mov xchg notl push pop setbe hlt (bad) jg negb test std mov rcrb sbb ljmp aad lods sarl scas aam or out iret mov loop xor sbb mov mov and add sub add pop push test stos insl test mov mov sbb push cli jg inc imul fstps (bad) jmp mov pop pop idiv ljmp nop cmp std cltd test (bad) (bad) lcall imul inc dec iret rolb aas xor (bad) jne jecxz ljmp jae stos add xchg scas add inc pop push dec std imul mov jg (bad) sarl sbb mov xor rclb cmc mov lahf loope,pn cmp cmp sbb insb dec insb pop push (bad) (bad) (bad) call inc add cmp aas sbb cld repnz pusha int3 jmp cmpsl mov xchg rclb lcall pop (bad) push (bad) push je loopne inc jmp rorb cs mov in cmp mov dec int3 test ljmp sbb loope jo mov or test (bad) jg mov rclb or outsb mov sub push inc ljmp mov cmc ja mov inc mov dec lret jmp mov ljmp xor or dec inc imul mov addr16 test (bad) lcall xlat mov fidivrl jno add xchg jae mov test (bad) fistp test mov lock jle pop adc sti (bad) mov (bad) mov mov xchg sub insb push (bad) cmpsb cmpsl (bad) (bad) (bad) decl and cmp pop mov out daa sub out sbb inc push fucomip fs push or leave xor mov fwait push push (bad) lcall add jnp mov xor inc shll in pop in addr16 clc (bad) (bad) pushl ror and add add into and imul push in cli or pop gs lret fnstenv cmp mov (bad) (bad) (bad) incl pushf push or nop adc in in lods xchg cmp lret out xor imul clc xchg int3 repnz sub xor jne (bad) (bad) aas test jl jg and jg nop xchg and jp (bad) in mov (bad) (bad) (bad) call aaa xchg jns inc cmp or movsb mov mov xchg adc nop mov push mov in into mov popa adc hlt in mov int (bad) (bad) (bad) ljmp mov adc outsl mov xor cmp adc or sbb jmp repnz lcall loopne xlat sub (bad) (bad) (bad) (bad) jg ja xchg or stos nop inc arpl mov jbe cwtl pop add shlb mov add pop (bad) fwait stc mov pop stos pop add sbb inc xor pushf int3 (bad) xor pop sub mov mov fstpl (bad) push and mov mov pop ljmp ret lock shll test sub movb (bad) (bad) incl pushf pop repnz mov incl (bad) movsb popf pop sub inc jno loope sub cmp and (bad) ljmp push push rolb pop addr16 in mov (bad) pushl and mov pop shrl sbb push add int3 cmp or cld fnstenv loope mov pop icebp (bad) decl mov dec movsb cmp js adc push sbb ret cmp sbb (bad) mov jbe jno in fildl mov call mov push cmc jmp (bad) (bad) call gs mov std sbb jae ljmp (bad) shll push or out movsb adc out push enter gs incl xchg les inc pop jl aam (bad) (bad) jmp es dec or aaa pop jbe out xacquire or or scas testb data16 xor push sub xchg aad loope jmp mov dec fwait jmp pop xchg mov or sbb pop sbb mov lea sbb call pop icebp shr cmpsb insl (bad) sub mov sbb aam mov hlt ljmp push fwait add mov fisub (bad) (bad) lcall cmp dec sbb ja (bad) je aad mov (bad) ljmp pop decl cs icebp in es repz not dec test (bad) (bad) (bad) (bad) insl inc sub adc out mov push fmuls fstl incl movaps cmc cmp jnp or aaa out pop sbb mov push sub loope nop add jbe (bad) stos (bad) (bad) inc sarl test mov incl daa and std stos in pop loope js sub scas mov mov push ljmp push push mov pop fisttp adc fcomps xchg dec arpl aaa cld ljmp fisttp jmp nop cmp lcall cmc mov ret jge ror push adc test adc inc pop sbb dec leave mov cwtl cli xor mov xchg xchg sbb adc or decl inc xchg stos jno xor sbb std mov push pop (bad) (bad) (bad) incl add dec cli push dec pop adc push mov popa inc icebp lret hlt mov ss (bad) lcall xor in ljmp push jb xor jb aas (bad) xchg jae (bad) (bad) (bad) decl popf and leave inc movl mov cli outsb sti ror test cmpsb adc sub lahf mov test cmp out xchg rcr js push mov (bad) cmp (bad) out roll lret sbb lret imull lea dec sbb dec mov sub es sub add std (bad) (bad) ljmp in sub jle dec daa cltd mov cmp sub call dec sbb sub cltd add mov dec xchg mov call cmp push jmp mov push mov sar push setae arpl mov fdivs mov (bad) (bad) clc mov sbb fimull jge out xor sub clc aad or das and lret mov or ja sbb inc inc cmpsb sbb sub outsl pop bnd and cmc leave test fisttp jmp fsts (bad) (bad) inc shrb xchg xchg jge pop cmovl into dec push jl xor popa mov mov lock inc enter xchg adc sbb and pop push push lret lods and hlt dec (bad) gs (bad) (bad) jl dec cli int cmp dec lret (bad) je les test arpl aaa scas std (bad) scas sbb or push pop pop jae insl sub jmp enter (bad) je ljmp pop sbb not xchg lahf in inc cwtl mov incl sahf and (bad) xor sbb dec dec jmp mov cmp aad push jbe cwtl call pop mov pslld (bad) (bad) decl adc sub push cltd pop bound jg lds cmp sbbl mov (bad) mov enter out in hlt (bad) (bad) (bad) (bad) clc out cmp in movsb in bound iret dec pop ss rcll jmp xchg ljmp imul add dec out roll pop sub pop (bad) (bad) (bad) jmp dec jle out dec mov and test mov push scas lcall icebp pushl leave sbb or loope pop inc aaa arpl (bad) pushl daa loop xchg aad repnz loop (bad) (bad) mov nop inc push xchg scas mov jne sub pop jp repz adc push leave sbb jp test xor (bad) jl add rclb out cmp cld mov jb lea sub jle mov mov loopne fidivrl lods pusha push xchg mov cmc (bad) ljmp or stos xchg dec jl add ret cli (bad) (bad) call dec adc push test jmp (bad) lcall add (bad) aas sbb push dec xchg adc shrl and or (bad) inc (bad) mov adc cld sbb pop outsb xchg imul jne ret pop push dec call jg jmp js jge (bad) jb sub cmp pop sub mov pop pop out ljmp imul scas lcall (bad) mov xchg clc dec push push fidivl adc ljmp (bad) adc (bad) (bad) decl and jge das adc jecxz ret or pop xor cmp inc jg cli incl inc (bad) jne mov cmpsb or and (bad) ljmp (bad) jb sub sub push out add cmp lahf into or pop push push ljmp jae jge js rcrl (bad) ljmp lds sub lea cmp mov push (bad) decl out imul rcll sbb dec jo idivl lahf cmp xor insl loopne add (bad) aas call lods jno lods sub sbb sbbl mov cmp fmulp cmpsb fisttp and mov mov pop push (bad) add sbb (bad) incl xor nop inc xchg (bad) (bad) (bad) mov push dec icebp mov cmp jp mov mov ja,pn cmpsb fadds jnp push dec call jp push imul add add sbb mov daa lret add (bad) (bad) mov dec inc movsb out outsl mov int3 inc mov lock (bad) fdivrl mov fwait sbb fnsave sub jl pop adc jne in mov lret mov inc stos dec (bad) mov fs aam dec add pushl pushf or cli cmp pop adc lcall inc dec push lock pop sub mov jne lods xchg adc enter sti and xchg or int3 dec and scas cmp or mov (bad) decl mov sti or mov ss nop aas test daa aas jb sar or std popa or loop pusha into movsl imul (bad) xor adc incl or mov pop (bad) std mov push ss add mov add push cmp lcall call in std cmp std es loopne jb or sbb sbb sub clc and aaa clc sbb (bad) (bad) fnclex xchg mov add imul cmpsl fsubrl inc push jnp adc (bad) jbe int3 sub (bad) call mov fist jmp and rolb (bad) (bad) mov inc int dec jge outsl push push push dec and jecxz jns or (bad) mov pop mov aam inc dec mov in stos stos mov sarl je out dec cld (bad) or mov out fidivrl ljmp dec and jbe adc fdivrs xor xor dec inc es imul in dec dec xchg out scas (bad) mov (bad) dec pop (bad) (bad) call sub mov mov shrb sbb shlb scas (bad) decl out xor cli jmp sbb scas (bad) lcall jno sbb lret mov xor test loopne notb (bad) (bad) (bad) (bad) call push and pop (bad) xor lahf dec jnp stc daa popf jge inc mov in sub inc test dec mov stc push roll cmp cmp inc (bad) fidivrl call aas shrb (bad) dec jmp lds fmull mov lcall (bad) mov mov rcrl hlt (bad) (bad) dec inc inc icebp mov insb cmp (bad) push add jge cmp scas loope push mov jb sbb push icebp sub jg sub cwtl dec lret pop push sahf rorl ret mov pop cs cltd xor fnstenv frstor xchg sahf outsl (bad) (bad) (bad) decl pop jno out stos test inc std arpl push mov mov mov xor scas or push cmp (bad) xor (bad) lcall pop cmp scas sub push dec inc xchg mov sarb cmc aad mov or mov add sub movsl ss cmc mov push push jl sub cmc lahf sbb xchg mov (bad) jg adc fsubr push fs and cltd pushf pushf loop xchg sbb dec (bad) (bad) ljmp call push mov leave or movsb push jb jns (bad) (bad) (bad) ljmp outsb adc out jp dec or mov js out pop pop jbe rcrb cmp test (bad) (bad) ljmp cmp in std pop cmpsb mov hlt out jns cmpl (bad) lcall push jge sbb push int fpatan imul (bad) decl cmp xlat sub (bad) (bad) jg lock mov (bad) mov mov addr16 xor adc jno shll cld inc push cmp insl dec bound push mov dec cmp shrl add dec test or add movsl sub xchg cld (bad) jmp test inc sbb adc lods loope lods sbb in mov mov in mov out inc (bad) prefetch stc test incl icebp jecxz negl lret roll fdivs xchg jne jmp test cmp dec imul mov lds pop mov loop adc add test jge xchg pop jle lods (bad) adc fildll or rorl ljmp cmpsl lods inc loop jmp inc fsubs mov repz inc je (bad) jg stos inc sti repnz xor inc in sbbl pop les mov popl xchg xor (bad) (bad) (bad) ljmp cli mov lock mov sub push (bad) pop inc sub inc cmpsb (bad) pop repnz pushl out lock gs xor push out dec push ret add in idiv (bad) (bad) mov push xchg cmp shlb scas xlat out adc dec scas pushf pop cmc lods addps xor aaa imul pop sbb mov movsl pop mov jg es in adc push cmp ljmp add int3 roll por clc push mov cmc inc mov pop adc and sbb scas dec (bad) cmp mov sbb leave mov repz iret in sub (bad) fcomip fisub test jne push jge and roll add ret jmp push (bad) adc pusha ret add adc ljmp mov adc inc pop movsl cmp inc stos (bad) cltd jne test (bad) (bad) ljmp dec arpl lods pushf mov stos fmuls pusha push fcmovb mov (bad) ds lcall rcl jae or daa sub and sub out ds (bad) (bad) decl inc out lods jl outsb loope sbb setae gs int3 pop and xchg mov stos sub and lret (bad) call mov repnz int3 or push mov or fldl2e dec xchg sub and push pop jl iret outsl ret in sub test aaa mov (bad) cmc mov mov sub sub xor push (bad) ljmp add mov jbe pop daa push pop jl enter in sub ljmp test add (bad) (bad) jmp jmp pop add js or cli cmp fiadd sub hlt sbb test gs nop pop (bad) in dec sbb jae add pop add jle dec fdivl popa (bad) sarb jg (bad) decl mov test pop scas ret imul adc jmp (bad) jmp inc pop ret inc movsl lods dec cltd mov mov dec sbb fs dec imul (bad) mov pop lcall push push lahf xor js and mov pop clc pop sbb std lods dec push dec xor lret (bad) sub ljmp xor push mov jb dec lahf (bad) aas fstl pop scas jp sar ljmp adc nop push pop jnp lock or psubd ljmp mov lret or (bad) iret and sub (bad) out sbb xor jno scas stos movsb jb fucomp pop dec mov sbb inc pcmpeqd adc mov lea or loope fdivl (bad) (bad) (bad) (bad) in out or js dec insl push repnz jno mov and test mov push push push mov inc push pop in ljmp stc mov ja push pop int call sahf je inc (bad) cmc pop mov addb insb jns add aas sub decl cmc jne in movsl insb xchg in sbb push hlt push mov adc pop decl call cmc xchg pop sti fsub cmpsb (bad) xor add ret mov (bad) (bad) call and test in jmp out sbb test hlt dec inc pushf imul xchg in (bad) jg (bad) sub sbb sub aaa std jmp out cmpsb out insl mov int3 incl and inc (bad) and fcmove in cwtl mov shl mov mov xchg clc jmp test outsl lea leave push (bad) (bad) (bad) (bad) jge mov mov adc push mov jl mov push cmp push lock jmp cmc std pusha icebp adc pop cmp mov pop cmpsl mov incl jle (bad) (bad) incl ret pop or sbb xchg in (bad) push push push jno repnz xchg adc pushl movsl sbbb mov add cmp in (bad) (bad) jmp mov push aam (bad) ja out pop addr16 jge and lret les jecxz icebp pushl ffree cwtl (bad) jbe jp clc push ljmp sub pop mull hlt (bad) cmp insb (bad) push test and dec xor xchg (bad) jg pop ret stc popa rcr repz add sub lock cld imul mov (bad) jg sub dec xor sbb cld cltd jo (bad) (bad) (bad) call and dec pop sub and pop jae pushf fdivrs pop cmc mov out sbb les jl outsl add fcoml les stc stos xchg loop (bad) (bad) (bad) lcall dec push js gs testb lea fildl hlt jae popf decl jmp or imul data16 add adc call ficomp or push mov xchg add std (bad) mov daa mov sbb push insb mov add xor call aaa or or add out sub das inc aas lret jg arpl mov cmpsb jnp and clc pop loop jmp dec xchg push dec mov dec and cmp in ret lock rcrl cmp push mov icebp rcrb int ja imul mov pop repnz (bad) cmp cmpsb stc in and mov cwtl popa cli pop cli (bad) call or adc cmp (bad) call and xor fldenv jnp popa mov dec aaa divl sub cli repnz pop imul cmp sub jno push inc sub fiaddl xor lret xor jae pop (bad) mov js sbb addr16 push ret ss jns add push in mov and rcrb jecxz popf cs (bad) (bad) decl lret push or test push cmp pop adc out loope pop push sti or add fstpl add call adc xor pop inc test xchg mov adc (bad) (bad) jg and addr16 and cmc jb lock stc insl pop and test icebp xor inc insb ljmp loopne pop hlt (bad) incl push ret adc inc fiadd rep xchg pop stos push out (bad) decl (bad) and and enter lcall dec (bad) stc mov adc push lods test mov xchg jo push sarb (bad) jl add sub (bad) (bad) jg pop push fnsave fs xchg dec and add lods test (bad) ljmp fstps aaa hlt inc sbb pop inc jg cmpsb (bad) mov push (bad) jne push adc mov cmp (bad) pushl pop jns dec shrb pop outsl add ret (bad) call inc push cmp sub xchg in lods sub ret out jg pop add (bad) (bad) call cli outsb mov push sbb sbb push xor mov loop inc inc cld (bad) incl enter jbe loope aas icebp mov scas arpl inc push xchg das mov push lods jbe xchg mov inc xchg adc (bad) call pop mov sbb ja push (bad) jmp daa (bad) (bad) (bad) pushl es push sub bound outsl mov jb inc inc dec mov scas out cltd adc (bad) (bad) jmp shlb (bad) mov mov push in mov mov lret fcomip push dec or iret es push cmc or in lret or andb mov addl dec sub jns outsl jge scas inc js add inc (bad) jge jno (bad) (bad) (bad) ljmp jae mov adc adc inc adc push mov mulb ljmp push (bad) (bad) jmp and jo sub xchg add (bad) (bad) jmp mov or cmpsl add cmp xor ljmp adc mov jmp clc jmp sbb fistp mov test pop imul mov arpl mov xchg lea sar outsl cli (bad) mov andl xor popf or or add (bad) mov enter clc icebp lcall mov (bad) les repz int repz (bad) (bad) lcall cmovl iret mov repnz push inc int or fucom hlt and outsl mov icebp mov lahf jno in (bad) lcall lret ficoml negb sbb aad (bad) (bad) pushl mov movsb xor lock mov loopne xor hlt stc lock inc aam push bswap (bad) jl clc push fsubrl cmp cmp pop ljmp cli mov ja inc dec lahf xchg lcall push dec in pusha xor arpl push fdivrs mov incl push fstp add ljmp lret (bad) divb decl rcll ja pusha mov push cmp sub xor std mov (bad) sbbl (bad) mov xchg jo mov push outsb in stc mov xchg jge adc (bad) (bad) cmp (bad) inc mov jae xchg mov jmp mov movsl iret sbb push mull add (bad) jmp notb sbb cmp mov rep (bad) (bad) fildll and in les ret addr16 mov jmp pop cmp stos pop (bad) call (bad) cmp repnz cli jo outsl cmp and lock push (bad) sub insb nop jne data16 fist (bad) decl mov push mov aad xchg icebp pop mov adc dec pop repnz (bad) (bad) mov push pop in xor jge sbb mov sub add cmp stos call push punpckldq stos and push cltd icebp and jg (bad) mov outsb inc (bad) scas cmpsl repz stos test (bad) in imul ljmp (bad) pop xor mov sahf outsl cmp mov mulps pop xchg cmpsl pop push fistp mov lahf inc push call push cmp in jae cltd push fwait cmp cld mov cli pop je movsl lahf imul cld (bad) (bad) pushl mov push cmp push test out mov push pop inc cli pop mov inc pop (bad) and (bad) call adc push mov repnz xlat out adc xchg jle jge cli (bad) (bad) (bad) cli mov or fnstsw mov test std andl inc mov lcall pusha xchg jno sbb xor repnz mov (bad) lcall inc ja sub fdivrs lock adc ss xorl call (bad) ret or data16 fwait neg add (bad) call icebp mov cmp push and mov (bad) incl push jo mov repz insb stos cmp data16 push pop adc pop mov dec push std add and inc pop (bad) (bad) (bad) decl aam mov push mov add pop push into cmc add cmpsb inc cmp adc frstor cs and or hlt adc (bad) (bad) pushl cmp mov hlt sub mov jecxz pop aaa add mov jne mov pop jno xchg pop cld pop cld (bad) jle pop mov xchg and scas rcl mov add xchg mov sbb xchg sbb add psubusw (bad) (bad) call and pop sarl xor mov incl push loope sub rorl xor imull xorl jbe ds sbb (bad) (bad) (bad) decl icebp or push imul es and or lock aaa jnp scas lock (bad) mov repnz xor (bad) ljmp add inc or enter scas cmp scas rolb mov jecxz fstps insl push (bad) push dec prefetchwt1 or mov test (bad) (bad) (bad) (bad) stc mov jb movsl out outsl adc xchg pop jbe sbb xor (bad) lcall jg cmp xchg push inc xor out mov (bad) (bad) call rcll data16 out lea dec mov push jle xor add xchg jp jg dec popa inc iret arpl subl mov mov mov xor inc xlat mov rorb iret in (bad) mov jns xchg stc adcl xor push push ljmp jo (bad) jno mov in scas cmp pop xor dec (bad) (bad) (bad) mov mov dec xlat inc rcrb dec outsb jb jne and jmp incl ret dec and lcall inc aad cmpb iret out hlt (bad) ljmp pop ja mov sti and or popa cld std repz ljmp ljmp into xor std bound mov sbb addr16 mov pop or loopne (bad) (bad) fbld jae ret push cwtl data16 out cmp bound pop sub ljmp out sub nop add push jl add iret ret out jg,pt (bad) jmp push clc test xchg pop mov mov iret fwait or cld (bad) (bad) incl stos sbb inc (bad) push fisttp mov (bad) xor das adc xchg push test jge add gs mov (bad) jg notb xor pop andb mov jnp sbb push pop mov gs mov cltd jo xchg and sbb addr16 loop jmp jbe,pn xor mov insl rcll push mov mov sbb cli (bad) incl cli mov cmp rcl pusha mov (bad) jmp mov rcrb (bad) (bad) mov cmc cmp decl cli call cmc sbb jp sub test mov xchg fmull xor loopne (bad) outsl xor jae sub shll push dec lea ds mov insb xchg jl call (bad) mov cmpsb lds out or (bad) (bad) jg (bad) jle lcall mov ret je pop loope mov std cltd xchg (bad) push push fcmovb xor fdivrl mov out subl (bad) (bad) ljmp jae dec xor xchg jmp jle fidiv cld sti pop mov sbb adc inc (bad) pushl aad cmpsb ret sti mov in jnp dec jecxz jp lahf pop and jmp lcall loop or xchg cwtl (bad) (bad) (bad) jmp jmp (bad) hlt leave rcrl mov adc or lock xchg add mov decl loope push dec jecxz xor inc dec out gs push test incl jne xor les jmp mov sbb ja stc pop int int3 xorl (bad) mov stc mov sti call jg (bad) pushl popf jne xchg sbb in sti push movsl addr16 (bad) jmp mov or dec pop xchg pop stc cmc dec cmp out mov call dec xlat sbb mov dec mov gs sub ficom mov (bad) mov fs lock xchg notl imulb lahf dec int3 xchg insb mov movsl xchg icebp inc lock int3 xlat or shrl fimul int shrb jl (bad) (bad) (bad) incl lea lds pop stc test sub rcrb (bad) dec call jmp sub pop push (bad) jmp (bad) (bad) (bad) (bad) call rcl sbb lcall jl xchg int lods fstl shrb (bad) xchg cld call hlt stos (bad) mov jb fisttp xchg shll and orl sbb in in (bad) (bad) lcall mov sub sbb fsubrl add stos push cld leave pop out dec push and cmp into (bad) pop push (bad) lcall pop mov repz gs leave out xor das cld dec ret push data16 movsb cwtl push sub (bad) (bad) call out je xor inc stos sbb lret clc jge mov mov (bad) (bad) mov cmp (bad) fwait push fldt xchg adc adc pop sarb (bad) decl add std data16 pop nop xor push fsts (bad) dec movsl (bad) jg mov and mov out fist (bad) (bad) lcall cmp sub sti push cmp adcl jge repz icebp xor cmp fildl (bad) call ret add sub daa adc lods add (bad) xor jne xor (bad) lcall sub fwait stc ficom push xor or (bad) clc (bad) ljmp mov hlt pop and lods cmp ret dec sbb dec adcl clc (bad) pushl test lahf pop push inc inc pop jge (bad) or lods (bad) push rorb decl leave adc addr16 hlt int3 mov xchg pop cltd mov js mov push mov or jecxz jnp fimul (bad) and sbb sbb push scas dec cli decl repz into push push dec fmul ja and (bad) (bad) mov xchg scas push xlat lret ja fistpl in (bad) in popf (bad) push dec inc inc pop and ljmp mov xchg pop cli push call xchg xor (bad) mov imul in add and sub movsb or xchg and nop (bad) ljmp mov push sub jle pop jo leave mov (bad) call adc outsb (bad) xchg imul cs sar (bad) (bad) pushl shlb pop add jns and std cld (bad) dec fwait adc push incl (bad) pop xchg repz lock in outsl (bad) (bad) (bad) (bad) flds mov or ret fstl sub push pop aas jne lret mov xor xlat dec std jmp sarb es adc dec and mov (bad) (bad) (bad) ljmp pop sbb add sbb xlat xchg xor push jp inc inc mov std icebp test lods add or popf dec push (bad) (bad) aas lea fcoml xchg repnz je and mov push js (bad) (bad) (bad) decl add insl mov push in int3 pop ja les xor fstpt jo fsubrs jg push insb mov cli je lods dec es push scas mov sub jg (bad) (bad) jg lcall ljmp aam sbb pushl cmp repz sub rorl (bad) (bad) (bad) (bad) mov ljmp push jb adc push pop out xchg pop sub or std mov ja inc ret push xchg (bad) (bad) (bad) jg in cmp imul ficom cmp jge insl gs jmp (bad) ljmp add fistpl ljmp ror ja add add hlt mov call mov rorl scas jnp add (bad) fcomip ljmp push inc adc inc pop jmp hlt xchg pop notb rclb lods mov sub (bad) outsl or sub pop pop decl scas test or mov int jle push mov std (bad) incl add sub sbb xchg call cmp sbb inc je pop jg rclb pop xchg jp inc int pop jbe pop push (bad) pushl push dec pop dec fs (bad) and or test push or lcall cli (bad) (bad) cmp jp inc adc pop jg das pop dec test (bad) ljmp rcll xor pusha in call mov ja pushl jnp mov push call xor mov (bad) rcrl add arpl add imul and xor jl scas pushl mov xlat cs (bad) (bad) (bad) ljmp jmp fsubl insb imul aam and dec jg fbstp xchg xchg mov (bad) (bad) ljmp cmp adc (bad) dec push and push add mov aad cvtpi2ps (bad) jmp sbb pop clc xchg mov push add cli out insb or add cmp ret cmp shll das clc decl mov jae (bad) mov mov xchg inc int mov (bad) decl sub xlat sbb pushf pop pop mov pop fsubrl fcomps push (bad) (bad) (bad) pushl push repz xorl mov inc out jg outsb in push mov sbb pop or (bad) lcall cmp mov inc xchg lea dec dec xor cmp (bad) jmp in dec pop pop and lret dec xchg jbe jl outsl pushf dec int3 aad int3 sbb cmpl jl (bad) sar arpl (bad) (bad) jmp sub aaa cmp mov mov into addl in jle (bad) (bad) call mov stos daa pop mov pop pushf mov fxch (bad) mov loopne or decl add xchg fcompl cmpsb jge push or pop lods and std add mov (bad) xchg rcl dec mov mov cmc (bad) jg icebp dec ss jns pop cmpsl mov pop sbb scas scas inc loop pop cmp cli int3 es jb (bad) (bad) jg popf mov dec cmp mov mov push pop xor imul (bad) mov aaa outsl or lock jns lods sub das fidivl xchg in xchg ljmp lock imul hlt scas jp pop cwtl orl movsl ret lock jg sarl sub popa popf cmpsb inc mov pop leave dec sub fcomip cwtl (bad) xchg rcrl cmp test adc subb sbb jle imul leave mov fisttpl adc (bad) mov (bad) call pop inc std mov stos mov sub xor int3 dec adc js test (bad) decl xchg test (bad) xor outsb loopne xchg clc push (bad) xor (bad) dec xchg lcall gs jnp (bad) dec or mov mov xchg aam and aas mov (bad) decl fisubrl pop test insl in and rcr mov pop out mov (bad) (bad) jg (bad) popa xchg test das cmp iret loop or mov lret push mov scas jne (bad) (bad) jmp mov stos jb or push negb push mov (bad) dec (bad) incb add sar sarl (bad) (bad) mov jle xchg xchg xor inc hlt popf stos xor cld clc fadd int lock mov pop pop pop sahf lcall hlt sbb and mov iret pusha sbb (bad) xchg add (bad) lcall sbb cmp lcall mov pop mov xlat insb xchg xchg lods jmp xlat test fimull loop sbb es outsl cli pushl xchg mov fdivs sbb clc aad pop ljmp cmpsb add and (bad) stc adc lahf es cli inc mov mov divl (bad) (bad) (bad) jge sub jecxz pop mov decl (bad) jae xor mov lds cmpps addr16 xor jmp aam dec adc loope outsb mov icebp call mov (bad) jne fwait xchg inc enter xchg jns lods pushf mov cmp adc scas sub loope push popa rolb xchg call aaa mov popf cmp popf dec cld frstor sar arpl test add jns gs mov mov ljmp out pop icebp mov pop test in pop pusha loopne pop repnz (bad) call jge out xor push adc jne pop fadds in fildl push xor and xchg inc (bad) sahf ds mov aad cs sub daa dec outsb lock arpl lahf adc ss pop push fimul mov push (bad) (bad) (bad) incl mov adc sub jno out lods xor fcoms pop inc mov inc les jp jl popf lods inc notl (bad) lcall shl movsl jnp lret lcall sbb sbb (bad) jmp sbb test push inc add cmpsb in (bad) sbb pop mov fdivrl adc sahf iret gs sarl mov cmp es mov das (bad) mov aam mov fisub js cmp dec aaa adc jmp repnz cwtl std setae (bad) (bad) dec shrl mov sti fcmovu test inc push push sbb insb or jecxz (bad) lds test (bad) (bad) jg cmpsl ljmp dec mov push jns xor loopne xor inc push (bad) (bad) call es cmp jns repnz fwait mov sub pop popf js sub (bad) in into xchg pop cmovae (bad) call test jge mov fcomp mov (bad) push add test lcall fsubrp push fnsave cmp (bad) ljmp adc or in push hlt mov xor (bad) ljmp and dec adc adc ljmp pusha nop mov repnz out adc (bad) (bad) (bad) (bad) jg rcr ja out loope inc (bad) in inc cmpsb dec sub scas aam loope stc sub (bad) (bad) (bad) cmp das mov jl inc popa push sub popa adc sub xor push dec xchg mov push sub popa (bad) (bad) ljmp out lods movsl xchg lods insb or (bad) mov les lret psubsb jae adc ljmp jmp xchg aas incl cld cmovae sbb xor cmp (bad) (bad) (bad) dec mov rorl pop xor xchg (bad) push (bad) fldenv mov inc jmp (bad) jns rorl pop xor imul pop xlat ljmp aas add mov movsb mov (bad) mov sub insl adc adc jae scas fdivr push fsts mov sub adc or repz push scas cs push xor (bad) (bad) (bad) call sbb mov das push js push mov ljmp scas pop and (bad) mov jg,pn ficomp mov aaa pushf imul sbb jecxz stos mov (bad) lcall aam mov mov pop mov lahf xor pop inc aaa lahf mov sbb jecxz push sub sub adcb sbb mov jmp lret cmp inc inc data16 fdiv mov pop clc (bad) pushl sub ret xchg lock jo push movsb rol push icebp push scas lds jnp shrb mov pop xchg (bad) data16 ret (bad) fildll xchg jbe fildl sub ret (bad) adc xor jno lods incl mov scas mov mov (bad) mov aad das sub (bad) fisttp data16 add call mov adc stos sahf lds icebp (bad) (bad) fsubrl mov cmp stc and out dec add (bad) lcall cmpsb test mov stc mov adc aad mov decb push movsb lcall mov mov inc xchg int3 scas xchg adc cmp ljmp add loopne sbb push rorl (bad) (bad) (bad) call push mov dec xchg rolb sbb rcrl stos roll int3 call jmp int jmp fldt push fnstsw decl repnz (bad) xlat push jb xor pop movsl sub and ds mov dec or repz out adc cmc lret (bad) movsl pop or fdivl test sub insb sar (bad) (bad) (bad) (bad) cmp outsl mov add xchg pop addr16 testb movsl push movsl in ja fldt mov call xor mov mov dec mov mov (bad) fisttp jecxz jo fdivrl inc loope aad push int3 jmp (bad) (bad) push rolb or and cmpsl or out (bad) (bad) ljmp das cmp ret js xlat jl xlat movsl cs fcmove or (bad) cmp (bad) dec sbb gs je sbb dec cmp popa pop adc iret ret into nop sub pushf incl or daa stc inc ret inc repnz outsl mov lods push fisubl xor or icebp (bad) (bad) lcall fdivrp xchg mov or cltd mov push dec popf inc dec addr16 mov clc jmp movsb inc xor stos pop out dec das adc call aaa cmc mov xchg test add cmp inc jecxz cmp mov jne cld ja cs cmc je pop push (bad) (bad) (bad) jmp xlat ret mov and mov and hlt pop mov add das nop cmc (bad) mov (bad) in push adc mov cmpsl inc ss nop sub push sub sbbl hlt xor (bad) sub lock push add cmp jne xchg pusha mov fsubp hlt divb push (bad) dec pop movsb (bad) rclb test cmpsb movb (bad) incl push pushf (bad) xor mov and call jecxz mov test test stos mov push clc inc adc push or inc (bad) pushl mov popa mov outsl gs in sar (bad) decl pop pop outsb mov xchg fnstenvs cmpsl insb xchg mov out pushf mov or aad imul data16 cmp js jmp xchg lock int mov sub sub test lock mov sbb (bad) insb fwait vmwrite push inc add lcall mov scas mov dec push decl lock subl fwait scas adc mov shrl (bad) incl scas int3 sarl xor or ficom (bad) icebp lcall movsl call insl test jge pop fild (bad) jg mov insb push pop xchg mov mov jp mov adcb cmc mov decl or aas adc pushf (bad) xor lcall cmc hlt pop cwtl push cmp sbb cmp cli xchg (bad) scas sub sbb decb (bad) sbb mov lcall sbb mov inc incl test dec jbe sbb push cmp (bad) (bad) mov dec jp outsb insb dec stc mov rorb enter out mov loop pop icebp pushl (bad) cmpsb mov pop jl dec je (bad) pop (bad) fldenv mov dec fwait orl pop jp sarb hlt (bad) (bad) fild mov inc pop sbb pop inc ds sbb insb lods mov pop hlt or cltd je mov and cltd out cli (bad) jg xor je cmp mov mov imul cmc (bad) (bad) push dec loope jb xchg fwait imul mov lds inc out xchg repz sbb cmpsb int mov (bad) ljmp sub arpl imul outsb ljmp fcmovb (bad) jmp jl xchg inc add sbb aaa mov (bad) es lcall sub nop/reserved shl or push iret ljmp jmp sti dec rcrl ds jle push adc dec xchg or (bad) push dec sarb dec loop loope fdivs pop fwait mov sub lds movsb pop rorb xchg sti pop sub push daa ds dec push dec push mov pushl dec fild int3 xchg ret sub movsl mov mov (bad) push mov mov mov ficom (bad) mov pop cmp (bad) (bad) jmp out mov push fstl test sub push dec ret je lock mov les lcall (bad) ljmp cmpsl rcr std mov rcl pop cmp inc inc pop mov add sarb jnp push test or mov (bad) (bad) (bad) ljmp and lods ret push push jmp das dec xorb jo mov mov mov leave decl inc mov push sub and pop add jle clc push in les lahf (bad) (bad) (bad) jmp sub fstpt das repnz fmuls xor and adc in inc mov lcall ljmp (bad) (bad) (bad) cmp push add push mov fdivrs mov jmp in jnp push pusha lcall sbb xor mov lcall pop dec xor dec adc sbb or lods nop add stos xchg sub in push repz lret ljmp jecxz mov fsts das subl enter (bad) cmp aad jmp mov sbb add pop (bad) xchg fldenv sbb add call mov mov jnp pop (bad) into mov inc out xchg (bad) (bad) (bad) call mov outsb fcomip (bad) ss sbb sub fs jp scas pop in call dec or sub dec pop mov adc jae lock (bad) (bad) pushl or (bad) or push repz rol pop xchg jge inc fistpll cmp shrb data16 (bad) jns repnz jo sub sbbb (bad) jg clc fistpl mov mov popf inc sub insb icebp (bad) (bad) ljmp test rorl addr16 dec cmpsl and mov sti repnz stos mov ja or pop mov enter les idivb jmp divl inc cmpsl (bad) iret sub pop mov test (bad) (bad) lcall sbb push frstor pushf aad xor ret jb sti sbb or lods (bad) (bad) decl xchg inc les cs bts test xlat mov fisubr pushf add (bad) (bad) decl fildl clc sbb scas addr16 mov xchg adc xchg add inc cmpsb rolb cld lds nop aaa rol decl icebp cli sub in test dec imul lcall or push xchg dec shll sub or mov (bad) decl xlat icebp jl xchg sbb test pushf scas in stc into xchg cmp shrb adc adc inc mov aam push cmc lcall enter arpl jo xchg inc xchg (bad) or jnp (bad) (bad) ljmp scas mov js aam push mov lds xchg inc jg add cmp adc push out pop in arpl cmpsb ja imul ljmp mov repnz inc dec sub inc enter stc pop into jo or leave scas std ljmp fs dec xchg lcall iret loop jae ds ss cmpsb out push sub addr16 ljmp lcall js lods adcl pop daa loop jo ret mov js js xchg sbb sar stos (bad) (bad) (bad) jmp mov push shlb lret pusha pushf nop xchg or in rorb movsb push dec (bad) (bad) ljmp jmp out adc leave test cld add ret (bad) decl sbb pop push data16 mov or cmovno push mov sar aaa std ja xchg clc and xchg jne out or pushf incl movb push ljmp push insl adc fistl out push orb sub lcall outsl dec jbe clc mov je inc int fldenv push lret (bad) (bad) (bad) (bad) std je xor test mov mov test mov mov cmp xchg (bad) (bad) lcall push out push xorb lock pusha inc cmc movsl stc fs lcall mov and xor inc test sub xchg adc lret cmc call std cmpsl sbb xchg mov shrb (bad) out lret and jl mov push push pop adc shrl ljmp cli and inc out hlt dec push add ja jne push repnz sub (bad) (bad) incl jmp mov sbb pop jl mov imul sbb (bad) lcall mov and aaa adcb push mov push inc cs lock js call (bad) (bad) jl in mov inc cmpsb jp mov mov adc cld in daa cwtl jae aaa push sar jne sub mov pop adc scas cli das je repz mov repnz adc ret mov test (bad) decl mov mov gs mov repnz pop add popa mov das mov or (bad) jg dec jne cmc dec push mov xchg mov rcl out jae sbb (bad) jmp sub pushw pop dec cmpsb adc and (bad) (bad) xorl mov insb cmp sub pop js xor (bad) (bad) jmp lock mov fcompl leave xchg cmpsl inc decb mov imul lcall lcall inc andl pop push and (bad) (bad) fstpt mov pop or pop mov xchg push in mov jl xor nop mov xchg add rcrb adc (bad) (bad) dec (bad) xor mov push pop inc nop pop push shrl jge xchg mov into push xchg ja in (bad) dec jg inc add loop js fwait popa jns inc ds (bad) (bad) incl test mov adc inc sub repz push push mov sar (bad) jmp dec sahf mov dec mov cmp popf inc sarb mov push aas cltd inc xor xchg inc jle pop cltd mov das dec dec inc mov (bad) ja scas sbb mov adc (bad) (bad) mov pop loope test push adc pop mov in loope lcall and sti and andl pop push je movsb (bad) (bad) (bad) mov popa (bad) (bad) insb cmp shl fcoml and mov (bad) jmp xor lret sub dec mov sbb inc (bad) (bad) (bad) (bad) out leave mov or xchg jge std and fwait jle (bad) add jecxz mov push bound cmpsl jecxz pusha sub and sahf lock (bad) (bad) jg int xor pop gs adc inc mov mov (bad) cld dec mov jg cli jmp call mov xchg mov mov (bad) (bad) pushl stos frndint push pop sub cmpsb inc (bad) pop in push mov inc pushf ret cmp mov or sbb in aad (bad) lcall and aas ds or mov (bad) (bad) ljmp mov dec or push (bad) mov mov xor seto pop cmpsb add mov inc loope or (bad) call mov push xchg pop movsb decl (bad) push stos push or (bad) (bad) ljmp sub mov jbe mov stc pop or mov shrb sub pop mov xchg (bad) (bad) ljmp and pop push xchg fsubl jb inc jb push lds movsb je jle pushl inc in sbb sub ljmp add aaa mov add (bad) fildll rorb sbb sub push inc in mov dec pop sar push xchg sub xor sub mov dec gs popf rorl jg in decb jl push cld (bad) pushl mov mov xchg mov pusha pop lretw jp repz lock call repnz inc add or insl push in popf (bad) lcall loope push pop adc hlt stos xor cwtl adc ss xlat cld jg pushl add jno xlat sbb xor jo enter push pop add and (bad) incl pop popf mov fstps cs mov hlt jbe int3 and movsb rorl lcall fwait sub fistpl pushf sahf (bad) sti push or (bad) (bad) (bad) jg shrl xchg into hlt pop out mov in jle mov ret repz xchg fsubp (bad) (bad) inc popa loope nop sti mov pop mov mov leave xchg inc mov (bad) incl xchg int inc jae lock and pop lock mov sahf adc push (bad) cmp mov bound inc xchg cmp inc clc insb fs ljmp ret ret mov pop mov clc scas and sub sbb (bad) (bad) notb mov out pushf sarl stos clc fstpt icebp (bad) hlt std mov mov jmp inc fstps push sar (bad) (bad) decl (bad) les xchg hlt imul jbe mov sub xchg sbb stc push push jp pop jg (bad) call xchg sahf jne sub in dec mov (bad) incl push dec xchg mov jbe and hlt cmp sub adc loope sbb in incl xor inc aaa cs mov (bad) mov neg outsl clc inc pop sbb es sub outsl sbb push xor (bad) (bad) decl mov out ja ss jns (bad) cmp pop ja pushl call (bad) mov mov mov and in aaa inc dec idivl sar (bad) call loope xchg mov (bad) mov aad pop shlb dec int inc jl insb sub cmp (bad) cmc popa dec bnd rclb test cltd xchg pusha repz std push in xchg pop jne lcall loope push push xor xchg dec (bad) out mov pop insl xchg sti ljmp les push iret lret jno (bad) call jmp push icebp sbb scas lret mov mov or fidivl sbb (bad) (bad) dec xorb xchg movsb repnz adc popf enter test (bad) call addb dec es push in mov int3 jg push loopne mov lcall loopne adc xchg jae stos (bad) push add jp shr loopne mov das (bad) decl push pop and aas loope cmp (bad) in sub add rcrl xor insl les sti adc xchg nop shll imul jne ljmp or ljmp xchg xchg call (bad) fildl add jmp scas xor in cmp xchg mov daa cmpsb stos sti ja mov sbbl mov incl jno aas pushf push or ljmp (bad) call lods jmp jp sbb std sub insb xchg ficomp mov (bad) call cmc push call call inc ret ja (bad) (bad) jg cmp pop dec pop sbb pop cmpsl pop xchg test xchg mov (bad) (bad) ljmp ffree adc or jbe,pn and ucomiss andb test dec stc clc (bad) (bad) (bad) jmp lret out lds push into cmovne mov mov or fstpl stc (bad) gs stc (bad) incl add hlt js dec mov mov mov inc push lret clc jmp sub sti lods cs sbb xchg scas ljmp cmpsb hlt cmp and in jae cmpsl (bad) xor sub jle ret mov nop ljmp mov into fsubrs jnp clc test sub (bad) (bad) incl xchg aas push (bad) enter add enter movsl mov nop out cvtpi2ps les ljmp fbld fldt xchg into cmpsl adc xchg iret (bad) jg dec push dec push cltd mov adc (bad) mov pushl stos mov imul scas pop sbb dec or ret mov jb idiv fildll sub ds outsl and rclb lcall adc aad jg adc mov dec adc outsb flds cmc adc imulb mov aam (bad) (bad) ljmp pop movsb dec dec les test and mov mov int lret add mov fcmove ficompl test xchg mov jecxz stos cmpsb push or test pop pop pop xchg mov cmpsb test jnp pop inc test (bad) ljmp xchg cmpsb fdivrp jnp sbb adc or icebp incl adc or aam cmp lcall add test sub in fimull jno pop notb outsl les jne sub ja lcall push dec xlat pop sbb ja insb lds in rol mov cwtl int3 popa test adc mov aam incl (bad) xlat pop add or fild test (bad) mov cmpsb mov push movsb inc mov (bad) and push mov idiv pop mov sub outsl adc pop inc movb cmp xchg (bad) adc lds dec mov or cmp cmpsl ret cli incl repz jo rcr ljmp dec (bad) ljmp pop imul xor int3 je in leave (bad) pusha jecxz dec mov imul lock imul int3 test out push add xchg (bad) incl hlt icebp push or fcompl or popf mov insb cmp mov lahf daa ja imul and (bad) ljmp daa cli cld push cli sbb aaa addr16 xchg jmp cs jge iret out cmp ljmp add stos fstl jmp (bad) inc popf xchg ja sub lods pop imul jns mov jle push mov fs in jnp arpl mov das stc (bad) call sbb xor (bad) cmp aam fidiv and rolb lcall (bad) (bad) loopne bound das ss push push push xchg inc xchg daa dec or or (bad) (bad) clc jae cwtl test inc xlat sbb cmpsb popf mov jg dec into adcl setge or jl and mov inc cmp mull jl sub lahf jbe add add fnop jg lcall mov push clc incl in adc fistpll repz jle daa fistp sti in mov sub and mov cmp imul out pop mov jp icebp (bad) lcall cmpsl je subb lods sub jb dec mov lcall dec ds xchg test mov sbb lock xchg mov mov push sahf push jae (bad) mov or ret sub cmpsl cli lret mov push pop sahf int3 lods (bad) (bad) (bad) clc notl push sub cmp jb stc push xlat xchg ds push pusha push stc inc add (bad) jg xor stos jbe in push mov xor pop enter cmp push jg push rol jecxz cmpsb into int3 cli mov cmp sbb cmp movsl lret movsl imul xor fninit sub jo xchg dec sbb push cli (bad) (bad) jg dec pop into cmp adc mov mov fwait push add sub aad fidivrl jno dec (bad) lcall lea stc jge or adc push fmuls sarl incl xchg setle je xor imul sbb enter js xlat test sbb mov mov fnop loop (bad) (bad) (bad) mov test (bad) rcrb sbb insl push movsb xchg add xchg sbb sub xchg sbb in push popf cwtl cmpl out lock mov dec shrb jbe pop mov add (bad) decl or leave (bad) and add xlat decl bound sahf or add pop fdivs and xor insl ds mov hlt cli push mov and es pop aas in shll sub sub xchg pop ret add insb sbb aas and mov repz mov fbstp psubsb loopne mov xlat cmp loop rolb cld cmp pop push or sarb test mov outsb loopne mov popf cmpsb sahf (bad) ds lock ret jecxz (bad) (bad) ljmp outsb sub sbb stos stc push cmp out xor and xchg sub stos push in daa std ficompl cmp lret or push popa std ljmp xchg js (bad) mov xor pop clc wrmsr mov or cmp xor clc pop cmp (bad) lcall sub or or fdivrp int3 popl aaa pop addb add mov mov (bad) mov iret call je or sbb inc jne repz (bad) (bad) incl (bad) sub xchg out out adc shr test lahf fidivr dec cmp push push add (bad) inc dec popf (bad) mov jno leave jnp mov pop (bad) fist mov (bad) es leave daa rolb adc std (bad) (bad) inc jo cltd fstpt mov xor xchg ss aam fmuls (bad) je mov pop sbb insl sub es rolb push (bad) mul inc lret in imul mov jecxz (bad) (bad) decl nop dec lahf test lcall divl mov and (bad) jmp lods ja xchg xchg movsb in les sahf jo (bad) mov cmp int aaa cmp adc jo int stos loopne lret imul cmp stos enter xor cltd lret incb psllq xor fisttpl mov jl cmp sub or hlt or pop test test pop aas shr or mov sub (bad) jg scas jnp (bad) fsubrs out xchg je sub dec and (bad) (bad) (bad) jg pop lea test testl sti fsubs xchg mov xor pop pop pop xor imul in in cmp add (bad) incl and and mov stos in jle daa ja or gs aad pusha ficompl in mov mov sbb mov mov out enter mov xchg jns (bad) (bad) decl and and pop add (bad) aad push rcll dec sub stc ficoml loope mov adc daa inc pop (bad) lcall jmp nop xchg jno outsl push sti jp outsb mov (bad) mov sbb loop or and xchg jns sbb pop lods in xchg lret (bad) scas push pop incl hlt mov push add or mov mov jo (bad) push jecxz decl xor gs xchg bound mov xchg adc adc test cmpsb std call pop out test xchg insl std (bad) dec inc call xchg jp aas cmpsl enter popf sahf cmp aaa push pop adc call and imul (bad) decl pop mov jb add push mov loope std mov dec loope test lcall mov xlat stc sbb or or and (bad) (bad) ljmp sub jnp sub hlt fcmovne inc sub sub mov call sbb add xor lds pop pop jb aaa sbb mov bound dec imull xor add (bad) (bad) decl fist xchg sub pop cmp or jb insb xbegin lret pop loop xor ja cmpsb outsl sbb or sub sub cmp pop mov rcl movsl jmp stc jp (bad) (bad) decl cmpsb repnz loop xor cld aam cmp and negl add ljmp stc ljmp movsb (bad) repz jo cmpsl scas lock mov sub (bad) (bad) (bad) (bad) in lret push cs xor test xor in mov jo (bad) mov test aad dec out and or xchg icebp test (bad) mov inc arpl adc and cmp jg push inc push dec mov mov (bad) (bad) dec pop leave sbb or sub les stos ret sbb cltd loope mov enter inc out inc mov fdivr fnstsw cmp jbe in idiv (bad) (bad) call dec rorb jno inc outsl enter cmp sub push (bad) daa sub push (bad) aas and imul push (bad) jae add movsb add jecxz xchg or (bad) (bad) (bad) fldenv fdivrs fistpll enter into xor movsl sub (bad) stc in inc outsl (bad) lods decl dec sarb fisubr (bad) ljmp movsl in loop mov aaa sti mov hlt inc xor js enter (bad) ljmp movsl call cmpsb xor outsb loope xor mov pop xchg jg push icebp pop test jle xchg addr16 (bad) mov sbb mov and (bad) mov clc xchg add mov insl cmc push cmp adc hlt cmpsl dec out mov sti xchg (bad) (bad) (bad) jmp je js inc xsavec arpl mov inc cmp or lods xor ljmp fucomp or neg dec pop (bad) sbb push or xor icebp fildll jae push pop push das (bad) (bad) (bad) pushl ret enter out cmp notb (bad) enter icebp mov (bad) jmp xlat outsb les lock pop popf adc mov mov scas adc sbb jno jg ljmp jl mov jmp or call stos inc mov outsl fsubp movsl or in fwait loope or fcos xor cmp aam dec cmc jnp lret rcll daa fs mov test (bad) (bad) call adc xchg neg cmp call dec jns data16 scas sub scas scas pusha popa (bad) ljmp xor aaa and mov clc cs and or (bad) ljmp xor rolb outsl pop mov in or scas (bad) je or xchg jbe out mov sbb mov jge adc or (bad) mov dec inc xor lcall jne jae ss add decl adc sbb mov push mov (bad) (bad) (bad) jmp jns imul repnz mull fnop xchg pusha adc in outsb mov lcall cmp nop js subb dec adc jmp iret sbb add (bad) (bad) (bad) call adc dec push sub jne das (bad) ja cld mov push insb movsb add (bad) (bad) (bad) out pop inc or es pop leave jg push mov dec scas (bad) (bad) (bad) dec xchg fidivl and add sti dec test sbb mov cmpsb mov pop and (bad) (bad) (bad) jmp in dec inc fadds inc add aam sub fucomip insb push cmp (bad) (bad) aas lahf push jle rcll std in adc movsb arpl cs adc pop test decl lock sub inc scas in clc mov (bad) push call cmp pop stos pop pop std pop ret lds mov cwtl lcall daa scas push das mov movsb ret adc mov xchg mov test out jmp incb ljmp outsl dec (bad) (bad) (bad) jmp sub test jo movsl mov dec jbe (bad) jle dec adc pop adc sub loopne mov scas xlat loopne sar inc jg jno test and sub in jle (bad) jmp orl xchg pop loop inc jmp xor push cmp and cmp pop je daa hlt dec in cmp lock adc jb jg icebp ret cmc lea and ss mov (bad) (bad) (bad) mov push mov movsb push adc mov push add pop jge into fist or xchg ljmp inc pop add sub inc pushf aas fistpll decl dec inc inc push (bad) pop jp leave inc popa xor and je int lods cmp mov (bad) (bad) hlt sahf mov (bad) (bad) mov es sbb loopne lods popa (bad) jge fadd into stc (bad) (bad) (bad) call sarb sub int push aad pop sti mov inc sub sbb js (bad) pop mov int3 lcall dec out insl dec cwtl into data16 mov aam les movsb (bad) (bad) cmp adc (bad) jbe sbb adc mov mov dec iret cmp stos mov pop (bad) (bad) ljmp mov xor push inc test popf push inc insb mov (bad) mov fcomps fisubrl shlb fldcw out jge lea jae call shrb mov cmpsb sub fcoms stos fisub ja mov outsl cmpsb lock mov enter cmp lahf outsb std call push pusha out cli jp jno xlat (bad) aas mov jmp ja mov cltd mov frstor sarb mov sub sub in ljmp pop adc out xlat addr16 (bad) out sub cmc (bad) ljmp (bad) mov xor jmp sub mov or test (bad) mov push (bad) (bad) ljmp push int3 insb repz cmp xchg dec hlt (bad) add (bad) sti pop enter mov call inc insb xchg test mov movsb xchg orl (bad) (bad) lcall mov iret data16 cmp jnp jbe dec stos incl sar cmp xchg subl lock dec fnstsw shlb (bad) (bad) (bad) ljmp pop test test dec inc mov cmp aam xlat shll jge insb js mov cli cmpsb imul bound lret fsubr inc roll (bad) (bad) jmp lods je (bad) xchg xchg sti fcoms push test int push sar (bad) sti and pop les dec pop pop xchg popa sarl test (bad) (bad) ljmp roll leave imull jne dec jnp or inc aad push pop cs pop xchg sub (bad) call fnstsw cs dec sub mov sar lcall mov repz pop pop dec or bound test nop push mov pushf ljmp (bad) mov out (bad) pop sub mov lahf icebp add subl in (bad) decl mov jle lds inc mov cmp hlt sar (bad) (bad) call loopne or push mov lcall jns ljmp call pop pop repnz push cmp (bad) (bad) (bad) lcall mov loope jg mov xchg inc loopne and jge xor pop push and jge std sbb or sub ret or (bad) lcall sub pop jmp or (bad) mov cltd fwait notb mov call faddl pusha and loope adc mov push scas dec lcall jne imul fs push cmc dec lret fbstp (bad) sub xor (bad) call loopne inc inc insb popa or dec fwait push xchg sub push adc xchg pop mov jmp in sahf stc xorb aas mov popa pop jp adc std (bad) (bad) call hlt incb shrb sub or sub cmp mov mov decl inc pop out or cmp inc pop mov sarb xchg loope pop ficoml mov int push jbe (bad) pop dec rolb lret les push push movq incb or movsb in fwait (bad) (bad) or sbb ss clc (bad) jmp push pop mov fs xchg mov inc lret clc dec adc std sti xchg ljmp dec cwtl mov in and addl data16 sbbl lods dec aaa (bad) aas adc xchg adc mov (bad) mov jmp and push inc xchg xchg fildll in flds add jmp (bad) hlt call adc cmp inc nop adc (bad) call push jmp sub lahf inc test (bad) loope add bound (bad) ljmp cmp dec mov dec cmp mov jne enter adc pusha fstpl sbb inc cmp std mov pop ret (bad) cmp inc xchg jo xor xchg sub or (bad) pushl pop xorl subl addr16 or ljmp sbb sbb push mov call pop jmp in insl jmp fsubs xor cld pushl pop loopne cli mov push sub scas push in movsb aaa jl and mov (bad) (bad) mov nop jmp cmpb push test (bad) popf sub ljmp cli jle popa and mov ljmp mov jg (bad) call into mov jb push insb sti rorb push mov xchg stc lcall js jmp xchg lahf dec lcall add dec clc (bad) call push push inc ljmp sbb push xlat mov (bad) (bad) ljmp cmp xor sbb lret fwait and push aam and (bad) call xchg mov and loop scas std pop lock inc or pop ljmp dec (bad) notl push xchg testl ljmp push iret add dec movsl addr16 inc cwtl lods sub jmp sub int popf sti dec sbb pop aaa (bad) (bad) (bad) (bad) out jbe inc sbb mov sbb pop testl xor push std fisub sub cs fsubrp jns xchg mov dec outsl pop xor mov (bad) xor (bad) (bad) (bad) cmp repnz dec xchg inc shll cli dec lds cmp fwait push es (bad) decl unpckhps xor pop ret icebp push inc sbb (bad) jmp std mov in inc jae jecxz stc sub jmp add cli push lods xor pop mov push cli push fldt test xor cmpl sbb add add (bad) nop push sahf es pop xchg (bad) (bad) (bad) jmp push inc out jno xlat or dec fdiv push mov loopne loopne inc xlat insb arpl incl stc mov stos test es add pushf xor push or scas call aaa sub xchg fadds shrl daa mov test sbb pop add jne cs loopne or mov dec popl or dec lods push rcrb iret mov mov outsb outsl into xchg fs pushl mov ss cwtl mov dec cmp jg sub std sbb (bad) (bad) (bad) lcall in cld faddl mul and pop inc cwtl popf mov mov cmp jmp mov xchg xchg mov sub stos mov ss cmpsb movsb shlb sarb (bad) lcall adc data16 out int push sarl xor adc leave mov out outsl daa xchg pop add pop out fwait hlt jecxz lcall push or (bad) mov lahf pusha xchg idivb or mov out (bad) (bad) decl popf cld xor jbe call rcr push stos xchg hlt lcall add jle mov inc inc arpl mov movsl mov aas add push int3 xchg or inc or mov (bad) inc loop fidivr (bad) mov xchg (bad) (bad) (bad) decl mov in mov xchg xor test je cmp mov mov testl fs inc fisubrl mov jae (bad) (bad) mov popf cmp stos lock push mov dec xlat jp inc or ljmp and or jg iret cmp inc loopne jmp dec icebp aas cli repnz ljmp mov into mov mov xlat insb repnz mov pop mov (bad) hlt int3 out out adc mov pop lods sbb xor push (bad) out adc popf aas sbb jb sub outsl dec (bad) call (bad) adc loopne pop push push inc cmp incl cmp dec mov push adc sub lret mov incl cmp repz push cmp xlat dec dec cs (bad) (bad) inc (bad) pop jbe es xor (bad) mov sbb rcl xor xchg pop xchg idivl sub ja clc or mov cmp decb add mov push mov icebp lahf push (bad) or or jmp ljmp inc (bad) cmp xchg (bad) lahf jmp data16 mov loope and dec ror mov (bad) fdiv (bad) cmp sbb mov sub pop lods loope pushf std (bad) (bad) lcall mov leave inc mov jb cld lock add (bad) (bad) jmp sub sub add and xor lahf mov loopne jge (bad) (bad) (bad) mov sbb or (bad) out loop out pop dec inc cmpl sbbl test test sub test xorl push push push jne inc add add and pop pop dec cld (bad) ja outsl popf ret mov test data16 pusha (bad) imull jmp test int cmp pop jbe mov mov inc (bad) (bad) lcall out stos or (bad) mov jg call or lcall out cwtl lcall fstpl ffree mov mov shrl cli mov xor mov pop xlat test call imul jmp ret add daa pop mov inc mov gs das jo add ljmp mov daa jp iret (bad) loop xchg mov sub or pop sbb bound mov outsb clc decl mov xchg out dec ret mov (bad) mov lcall push xchg pop inc fcoms ljmp outsl inc iret xlat adc push ja add add inc sub dec clc pushl insb stos mov or (bad) (bad) (bad) decl xchg arpl gs outsb cmp inc jmp xor out stos xor push rcl dec (bad) imul (bad) (bad) (bad) cmp add loop dec cltd mov xchg cmp add (bad) (bad) jg negb jnp push mov push shr inc add loope lds (bad) mov dec push fldl fstp out xor ret jmp dec movsb jno jae mov imul (bad) (bad) (bad) (bad) inc int jl bound sub dec daa roll jnp aam xor xor out mov mov inc jns sti loop lock jg dec in pop pop or adc cmp xchg (bad) in js stos scas xchg sub (bad) (bad) jg dec sub pushf lret jmp pop gs jae lcall xchg adc or call jne mov inc movsb out out mov pop (bad) repz (bad) mov or pop scas push dec dec push push aaa enter iret mov inc jb mov mov fsubrl int cli fstpt in sub inc mov inc jnp clc (bad) (bad) call sbb pushf into jmp add lcall das jl out in (bad) mov add lods into cmc and (bad) mov movsl sbb scas int3 sub mov jns adc stos add (bad) lcall pusha lret arpl push addb adc push or mov xor ret jno xchg cltd scas mov les sbb dec movsl cmpl mov (bad) pushl push sbb std xchg lods mov je and (bad) incl add in mov stos into aas sahf and adcb das test jmp jns add rcll adc movsb mov cwtl stc shrb (bad) mov addr16 dec test cmc xchg cli (bad) (bad) lcall data16 aam jbe jp mov ljmp pop add lea lahf inc mov cmp (bad) mov dec mov or loop sub inc add je jecxz lret loopne lret pop (bad) ljmp test mov clc rcr pop (bad) xor cmpsb arpl stos add incl jno aad jmp or dec scas (bad) (bad) jg jecxz (bad) cmp adc test enter std out sti (bad) or pusha jne add adc arpl int lods pop aaa inc ds xchg pop (bad) cmp fwait les in (bad) mov (bad) (bad) (bad) decl mov and cs (bad) push mov inc or xchg xchg pop outsb lods adc xlat test inc mov test lock lcall cld (bad) (bad) (bad) (bad) jl call and loop xchg inc and js out bound push sub and pop lds sub inc loope (bad) (bad) jmp pop and test or cmp rol fist popa push xor cmp pop dec jmp pop mov dec outsl inc out jnp mov popf mov (bad) (bad) call (bad) sbb sti pushl ja (bad) mov fistl iret in mov dec sub repnz cmp orb mov push xor xor sahf sub call dec add (bad) dec ljmp add (bad) (bad) (bad) pushl xcrypt-ofb cmpsl sub sub imul add add out jno (bad) lcall fisttpl xorl je jns pop push outsl clc ja inc sbb data16 or pop lods idiv (bad) ljmp mov inc aas pop lret adc mov rcl sbb push cmp into test mov or test xchg call push pop loop sbb fstpl mov mov sarl mov scas sar push push fldt cmp xchg movsb test outsb cld (bad) (bad) (bad) fiadd lea lock sub rcrb mov call sarl xchg pop out cmp je inc push push je (bad) ret decl fs je xchg mov (bad) (bad) jmp inc or ljmp pop (bad) (bad) out adc pop and bound stos lock out sahf mov sbb xchg push (bad) les (bad) (bad) (bad) jg lret xor sub mov jo xchg add add mov xor dec xchg (bad) (bad) incl dec data16 xor clc insb xor rol dec fnstsw (bad) jmp adc pusha inc pop sub mov add loope xchg (bad) lcall push (bad) repz push mov out cld pop (bad) ljmp add out (bad) xor adc dec ljmp loopne incl lods xor mov cmp test (bad) leave push dec mov xor mov and (bad) (bad) ljmp movsl in in (bad) pop pushf lret mov lods lret loopne arpl addb mov mov das ljmp popa cmp xlat (bad) xchg in das imul test cwtl lods mov ljmp mov (bad) jg xor int3 sub lret cmp adc (bad) pop pushf mov push sbb sub lcall inc jmp add repnz adc cmp cmp adc push or (bad) jg neg add ljmp sahf xchg push mov sbb (bad) (bad) mov es daa jnp imul shlb mov clc sub mov push and icebp sbb push out add (bad) (bad) jns jnp test sub fwait adc (bad) incl add ljmp repz add mov mov (bad) push dec insl mov movsb pusha es (bad) push jl scas out cmp jg,pt mov adc sub push cmp icebp std inc (bad) lcall aas jae (bad) sub inc loopne add (bad) push call pop imul xchg or pop aaa lock ds arpl repnz test lcall stos vpmacsswd or xchg pushf pop add (bad) (bad) ljmp mov jne inc push jne inc jns int pushf mov ss mov fcmovu stos sbb movsb sbb mov (bad) jg lcall in push fisttpll inc out xor ret xor out sbb add sti scas xchg imul data16 sub (bad) cmp out fidivl (bad) std cmp dec jae movsb call mov dec pop mov (bad) (bad) jmp or adc dec dec add test das in leave daa jl sub (bad) mov inc ss insb cmp fs sbb (bad) decl dec lret pop sub das pusha inc push (bad) push mov push adc stos ret loope cmp fxch push (bad) push mov or push and (bad) (bad) (bad) std movsl xor ja mov out mov (bad) rorb xchg xor adc adc incl sbb sahf jl stc mov (bad) lcall dec add out rclb loope jmp in ret int repnz mov sar repnz and fadds jnp xchg fldenv (bad) (bad) (bad) ljmp cli divl gs xchg out mov pusha loopne mov (bad) (bad) jmp nop outsb das xchg js movsb clc sbb mov nop out or push xor sbb mov xor inc cmp lcall (bad) jg data16 (bad) jmp fild insb lret sahf call push sbb jg xchg aas add lods lods lahf psubsb lea (bad) fdivp push idivl sbb push mov lcall rorl dec jl and adc out rclb scas mov mov jg mov sub inc add push in vmptrld (bad) lock (bad) (bad) inc fldt ds mov jne jge dec cmp les pop imul test stos (bad) cmp cmpsb mov xor or insb (bad) ljmp cmp mov shll fldl inc iret (bad) fild mov cmp call adc ljmp test xchg insl bound arpl adc test (bad) ficompl data16 jp or cmpl dec ja add (bad) push fldl push xchg pop cmp aam fist cltd in dec std (bad) (bad) ljmp aad add scas mov cli pop fistp add (bad) pushl call lahf cmp lds out neg push mov or incl jae mov aas mov adc stc push (bad) (bad) (bad) incl cld xchg (bad) fcomps fstl cmp push mov pop inc inc mov or cmpsb fldl stc (bad) (bad) fcomps adc push inc jae cli test ficoml aad mov mov rclb xor lea cmp (bad) int3 cmpsl push adc cmp adcl call mov scas xchg and sbb pop das add aaa and pop mov (bad) (bad) jmp fdiv jl mov (bad) xchg stos mov xchg mov pop das pushf push ljmp (bad) jne scas mov gs (bad) pusha pushf or lcall jg nop insb movsb pop (bad) push ss (bad) (bad) dec test or mov or stc cmp xchg lcall mov js sbb arpl ror add ror cmpsl (bad) (bad) (bad) push xchg popl jge cmp lea adc push sub iret rcll cmp (bad) pushl xchg das xchg out stos push lret out fwait and out pop dec mov add cs (bad) (bad) dec repnz mov add das jns jg cmp cmp insb adc xchg cld hlt cmp cmc ds (bad) (bad) ljmp insl add xor enter test pop sbb mov jnp (bad) jg inc stos fdivrs test std xchg repnz fsubl ret mov out add imul ret add cmpsb sub sub das lods mov jbe push sti sub ljmp movsb outsb ds jo (bad) jnp cmc sbb aaa add sub or inc cmp in (bad) test (bad) jmp xlat in (bad) or test aam xchg jno test (bad) call fdivr int (bad) out out loopne dec and lret stc jo fstpt decl push sahf lock pushf jo (bad) mov mov mov cmp in push (bad) jne dec mov adc pop cltd (bad) (bad) and xor (bad) jb (bad) pushl lcall pop popa bound mov (bad) subb std adc fwait pop mov cmp (bad) mov jmp and lahf jp cmc xor in sbb (bad) (bad) mov std mov add xlat clc loope fwait and loopne sub add dec ret test cld das insl cld test ljmp jb (bad) (bad) call stos (bad) loope fadds mov inc jnp jb in cli inc mov pop mov (bad) jg clc fcomip je mov pop test leave pop xchg or adc jo mov in xchg scas pop lods (bad) (bad) (bad) mov dec push jmp or jnp cwtl stc mov ja jl es or adc incl push pop notl (bad) cmp cmp aas jl outsb popa (bad) out pop es or mov pop outsl mov decl mov push mov (bad) (bad) lcall add mov mov push rcrl iret mov (bad) (bad) call lahf xor stos int push push or dec aaa movsl mov mov (bad) jns ret add data16 push mov jp cmp ret add inc (bad) (bad) ljmp inc xchg js notb stos loope pop popf iret std adc (bad) out mov push adc dec and adc icebp (bad) jmp adc out rorl mov (bad) mov (bad) call out inc jl xchg stos je and mov shrl mov cmp mov fcmovne sub push (bad) call fmuls lcall mov rorb data16 scas sbb (bad) mov mov sub add (bad) incl or xchg xchg pop (bad) mov outsl mov sub mov mov cmp into lcall inc jmp out leave add inc loope pop jle in sbb ret push fnstsw out pushl mov mov adc insl mov les add ljmp movsb out add out inc pop mov mov sti fisttp pop jle cmp dec dec jne jo hlt test cmp (bad) (bad) iret enter lods adc push xor (bad) (bad) incl mov ret adc sub test rorb xchg ljmp sub clc cmp inc test dec fildll (bad) decl jle push jb mov xchg pop add arpl (bad) (bad) inc mov int jg lret rcr mov fimull dec add push std aas mov or int cmp xchg (bad) jg dec rorb out xor inc movsb test out les ds (bad) cld stos xlat mov adc addr16 jle sbb ljmp (bad) ljmp jp cmp iret fwait add rorb mov sub ja jmp lock mov pop cld inc stc sub mov out or mov sub mov push or add imul clc dec inc imull and xchg test cs test (bad) dec sub xorb js or mov push icebp (bad) lret ja mov mov (bad) (bad) mov sbb sbb mov sahf test push cmp mov jge jg clc incl mov call xrelease jl mov decl or inc adc mov sbb push insb mov aad dec (bad) mov sbb dec sub clc call mov pop loop pop jo lahf enter mov xor cs (bad) (bad) incl mov fwait into xchg into repnz cmpsw push ror hlt ficomp and cmp std (bad) jg xchg clc and jmp fs push aaa test xor sbb decl mov ljmp out je mov cs (bad) xor mov ret insb jbe add pusha xor cwtl andb loopne jns jle lahf out ja adc push in in (bad) (bad) (bad) pushl push jecxz inc leave mov xchg sti sti daa ljmp add mov in sbb mov movsb ret ffreep popa pop xlat les cmpsb les inc adc (bad) out cli jmp daa (bad) call ret loopne xchg and scas insb pushf sbb dec push push jmp clc jl jb add andl incl fstp dec mov bound test cmpsl pop das mov fisubr xor jge (bad) fadd cmc push (bad) (bad) (bad) fisubl (bad) mov test mov sahf fistl push je es (bad) (bad) (bad) pushl sbb or test lahf nop xchg jb pop mov fwait push and xchg xchg cmp dec ret sub mov (bad) pop into or jne sub std pop cwtl add aas sbb mov adc jns mov (bad) decl jl inc (bad) and lea and (bad) aad or (bad) mov pushf movsb (bad) lcall or int3 lcall xchg lcall lock and fwait iret and (bad) pushl fisttpll lret mov pop xor lret mov add repz clc call fdivrl insl cmp mov (bad) ja mov (bad) ljmp mov jb in or out (bad) jbe cs (bad) call sbb jno jle lock aas and mov inc sbb (bad) ljmp inc cmp inc repz and data16 add jp push (bad) cmpsl (bad) (bad) jg jg loopne mov and shlb push xor cli mov lock test mov shufps adc rolb push xchg mov outsl sbb shlb push jle xchg jo mov sarl scas pop repnz stc (bad) lcall adc fimul (bad) ja out xor push iret mov push jo push (bad) push daa imul jl sub (bad) (bad) mov add push mov cmp ja inc (bad) lcall mov ja xchg push icebp adc adc xor rorb xor (bad) (bad) pushl test out adc xor mov dec fstps adc loopne mov (bad) xor cmp mov test popf xchg mov imul (bad) lcall popa jecxz jge cmp sub jp dec jbe divl stos xchg hlt popf mov aam mull sub push je loopne pop push xchg ret mulb (bad) (bad) jle mov hlt cmp test jle cmp mov std (bad) mov fs mov and movsl xor cmp mov (bad) movsb fistpl pop xor leave dec scas xchg fistpl test sbb (bad) (bad) (bad) (bad) jg outsb sarb dec pop js or stos push or clc gs fiaddl mov cmc mov and jmp loopne jle in dec inc outsb push pop addr16 (bad) jle sub data16 pop push jp sub (bad) (bad) lcall lock sti ljmp sbb push fcmovb (bad) clc jns stos (bad) jl ljmp cmp (bad) ret popa mov xor incl lock xor rol sub or push push shrl mov cld add cmp mov jg add loope (bad) (bad) sti (bad) (bad) jg ret ss pop or xlat mov rorl jns inc aam push insb pop (bad) (bad) (bad) ljmp mov lcall and aaa (bad) enter inc push sub add push add mov in jl jbe mov lret cli lods insl fstpl pop in push ljmp test pop or ds pop pop pop add (bad) dec and insb pop mov movsl cmp (bad) (bad) decl sahf (bad) xchg fimull fcmovu and inc add xor rcrl insl fnstcw (bad) (bad) mov out inc add (bad) popf add cmpsb lahf lock add loope negl in aaa jl ljmp xlat incl lods sbb dec and enter add add insl cmc mov jg cmpb mov lret xor sub test cmp (bad) decl sbb std std lods in cmp test push pop inc in into cmc fcmovnu (bad) (bad) jmp sub mov and xor cmp cmp enter sbb jg mov mov pop fstps pop push sub mov fistl adc ljmp cli sbb in jb ss iret or add (bad) pop imul push push (bad) decl adcl mov xchg xchg sti (bad) inc mov (bad) fcomip ljmp sub stos dec mov or pop mov jge xor ret decl ret pop xchg jp je pop jle cli sbb ja and jmp sub cmp add bound nopl push inc mov pop (bad) (bad) (bad) fist mov push lea pop insb lds add cli into (bad) push loope adc arpl (bad) (bad) lcall inc clc imul sbb bound jne loopne cmp push dec fbstp (bad) jnp frstor in roll dec popf xor fsub mov movsl pop int3 lret ret xchg pop mov pusha (bad) lahf insb add lcall mov mov dec bnd jmp jle (bad) sbb sbb (bad) jb mov (bad) pushl cmp adc xchg jmp divb repnz (bad) (bad) (bad) ljmp or pop xor sbb mov mov loope test (bad) call dec sub pop xchg in call jecxz pop inc adc (bad) (bad) call add inc imul sub mov push rcl jo xor lds cmpsl cmp outsl inc pop fs mov (bad) incl aas pop fcmovb dec cmp push adc dec sbb add dec pop lret in mov gs in dec push dec jb push push add xchg idiv xchg cmpsb sti and (bad) call or daa into (bad) ds insb (bad) mov scas mov sbb je sahf movl decl pop adc cltd adcb sub push sti hlt test sbb (bad) (bad) push mov inc ja movb loopne testb dec xor jbe pop jno cld incl push add ror faddp (bad) mov ja mov popa lods push cmpsb push jo mov (bad) mov cmp (bad) (bad) out addr16 mov push mov sub imul cmc push push iret and (bad) (bad) (bad) inc movsl jl xor ja dec sbb mov xlat sbb adc mov jmp or dec dec dec insl sti xorl dec push cld xchg xlat add call ljmp outsb fbld mov shrl sar (bad) (bad) out jne pop addr16 inc movsl insb lcall jnp mov (bad) dec pop xrelease adc aas popf aam loopne jb xor sbb jle out inc (bad) (bad) (bad) push pop xchg cmpsl (bad) subb mov es mov ja fs or clc pop negb lods sbb pushl loope scas mov pop jbe jge enter mov (bad) pusha andl (bad) (bad) pushl pushf adc lods jg lcall xlat sub push syscall imul ljmp (bad) std cmp pop mov in xchg lcall (bad) (bad) (bad) ljmp xchg mov mov mul jle into clc cmp cli mov dec pop sbbl push lock adc jo xchg mov xchg pop clc jl pop adc in sbb test lock add and cmp jecxz ss cmc (bad) (bad) (bad) mov arpl pop cmp or sub mov sub mov (bad) ljmp cltd mov ret scas (bad) lock xchg leave cmp jae ret mov and dec (bad) (bad) decl (bad) push jecxz and imul in dec nop pop gs dec sbb push and sub xchg adc (bad) out jae xor xor push (bad) (bad) mov aas adc mov mov sub in popa (bad) loopne pop xchg jno out jmp dec call cld repz jmp cmpsb lahf outsl pushf stc (bad) (bad) mov sbb stc int mull movsb sub add mov and testl fdivrs cmpl add in sub or jne cmp mov out shrl mov aad jl (bad) (bad) (bad) call mov inc push jecxz loope cmp popa or or add xlat stos incl add imul fwait mov icebp jge dec fwait decb push flds xor into mov stos pop sub mov fildl sahf xchg cmpsl and pusha or cmpsb (bad) ljmp push push dec and mov mov jmp sbb (bad) incl push dec push lcall jae jnp and lock cmpsl sar je lods mov xor repnz (bad) (bad) (bad) (bad) (bad) out es (bad) icebp hlt and mov cmp in adc xor cmp or mov das stc (bad) cli sbb or sbb lahf add roll daa mov pop mov jmp and dec dec lock pop aas (bad) in xchg ljmp xchg cmpsl mov mov mov add add sub and test push add push es lcall or (bad) aaa mov pop fwait cmp inc les pop push add push jb leave and push insl add dec adc dec or dec bound jno mov pushf (bad) push (bad) xchg cmpl cmp sbb push sub outsl fs push popf dec jne insl loop dec and inc (bad) in mov xchg jo or inc cmp push in inc inc dec inc inc pop pop xchg mov and dec cwtl push clc outsw sub mov and nop popf push add or jmp push mov das sub and push (bad) scas or divb lret push push jo dec fmuls adc ljmp dec sub sti adc xor jbe cmp fistl (bad) sub push sub gs insb inc push dec inc ficoml jbe pop movsl shlb int imul leave iret inc adc sub out out jbe daa movsl adc adc andb insb jo mov stos ss popa sbb inc insb and sub sub sti push mov push gs (bad) aas xor mov sbb push dec xorb adc xor in sarl jns fst inc fcmovb or push js adc sbb ret add adc push push roll loop arpl add push pop mov rcll inc jle loopne add inc dec int and adc fwait inc add sahf or xor orl xor cmp sbb lock mulb daa xor mov mov adc or mov loope xor mov jb jbe add adc enter and fiaddl and adc adc push cltd mov mov mov clc add inc push push inc or inc out or adc add mov and add ret jae push mov repz mov test bnd adc add and fsts lods and add adc flds sahf (bad) (bad) (bad) jmp jle mov fidivr xor ss cmp sbb and inc (bad) (bad) (bad) call mov fwait dec mov mov xlat rcrl xchg (bad) das jmp cwtl and (bad) (bad) lcall mov fisub addr16 insl stc sbb mov test (bad) (bad) incl and repnz xor dec inc mov out (bad) iret mov out out mov repnz jmp adc push pop das fcmovb mov inc add ret scas pop test add jo and push and outsl fild push jge push and test xchg popf icebp mov loope adc outsl pop or test xor and and or and mov or test add adc test xchg add or jno xor or (bad) jo cmpps add add in adc jle add pop sbb ja adc adc cmp add mov xchg addl xchg add mov mov mov xchg and nop push and add addr16 int iret add mov (bad) enter add imul inc pop cwtl pop lds xchg jns sti out push or (bad) or cmp or test and loopne lea add sbbl scas xor xchg lret add incb or icebp inc and pop lret xor dec cs jg pop std mov test pop andl or pop fcoml xor mov pop or jo dec cmp es shl cwtl mov cmc cmp sbbl nop mov mov popf or sub sub pop dec xor mov fildl xchg popa pop cmpsl lea lea hlt shlb push add add mov adc sbb xor add test push xor inc xor pusha fisttpl jo sub xchg jo or or adc and inc pop pop xchg mov flds orb add pop add adc test (bad) push leave add in or adc or sub sub mov cltd jecxz (bad) iret movsl (bad) adc jb adc adc inc pusha sbb pop inc lcall or and icebp inc add bound std and movsl call pop pop add pop sbb es add mov lds add (bad) outsb es popa jb jbe xor add sbb imul out and inc or xor add xchg pop leave xchg add xchg pop leave add push add inc mov daa or add gs mov cld out and push gs xor adc shll or sub movsb xorb push popw je arpl add add dec andb inc adc xor sbb insl es cmp add cmpsb sbb popa push imul inc add or je inc xor or and outsl or jp outsl fnstenv or pop xchg insb sbb and fs (bad) stc pop fiaddl fisub sbb lods dec inc mov xchg fnsave push lcall mov dec stos rclb gs int3 sub pop pop imul push dec sbb dec dec cmp and or add sub push inc sbb push outsb insb les icebp mov pop sarb sbb mov dec imul inc and and and or inc (bad) into jp sub sbb cmpsl add dec inc dec inc daa push cmp add sbb inc test cmpsl cmp pushf js sbb jbe and ret sub push dec xchg add inc and mov movsb push and lods popl rcrl outsl daa inc out sbb xor xor inc push jnp insl jno mov add xor sti pusha mov sub dec fs adc cmp pop sub mov (bad) mov pusha mov int3 mov inc push push shll ss sbb sbb pop outsb loopne sbb mov fnstsw sbb push pop ret sub sbb ret pop mov pusha mov cmpsl mov mov pop sbb or mov mov dec xor cltd (bad) imul or push sub roll jg fadd mov mov or fldenv (bad) adc mov jno add scas jno mov popa rol inc inc rcll cmp xchg aaa cmp and or mov fnstcw push pop aad inc mov rcrl imul aas lcall jne loopne add push je ja adc pop arpl inc adc dec adc push inc cmc push mov mov mov and jl sbb sbb jo xor fmuls push mov data16 mov rorb enter inc pop in xorl sub js push and mov sbb lea add jbe rcrb sub into test das and shrl lcall in and loope adc inc imul sub push test loopne cmpsb inc fisubl jb cmc xchg add or out mov loope lahf cmp dec sbb or cmp nop and jne sbb push push fwait mov js push dec jb pusha insb xchg pop or xchg adc inc daa push push inc ficoml mov push loope add dec push xor fwait adc arpl cmp inc sar dec inc movsl push pop fwait daa dec and jmp fistpll xchg lcall sbb add ljmp mov inc cld mov inc jg xchg adc mov adc out xchg push sub and fidivr add jbe mov cwtl inc loopne add jne and sbb push fiadd test jae fisub inc and dec cmp add arpl adc xor pop nop inc pop insl push add add xor push dec xchg and adc inc xchg lods dec mov xlat push cmp dec sbb inc mov ret inc and (bad) rcrl rcrl sbb fdivs inc and pop or sub (bad) inc outsl pop mov ret adc dec ss (bad) add adc ret sbb insb sub imul push jge imul cmp and arpl inc and cmpsl sbb dec dec and call aaa add packsswb outsl mov and pusha aam je jle xchg sub sbb movsl popl inc pusha jp jo mov and jle xor icebp je pop pop dec outsb dec mov (bad) xchg mov mov jb fnstcw add or movl jbe sub nop addr16 (bad) mov lea push push (bad) cs lods and outsb adc jae sub and and cmpsl pop (bad) fsubs testl dec xchg mov push test loop data16 sub push (bad) mov in sub and popa mov add ficompl (bad) fiadd mov daa arpl test add inc xor and andb add sbb xor inc dec sbb rorl outsb arpl sub sbb or mov mov sbb inc and je js les out pop insl adcl add inc ror push sahf xor push jo push loopne jl or inc and data16 cmpsb imul scas and outsb sbb ret push icebp cmp arpl insb add sub sbb sbb in jecxz int3 and adc mov sbb sbb mov jge imul jne inc and sbb and inc fcmovb adc daa pcmpgtw xchg (bad) dec xchg js mov pop xchg sbb lods xchg push lods faddp mov popa adc mov out fisttp adc repnz jbe loope or arpl fisttpll sub mov sbb adc push pop push xchg sbb push (bad) pushf pop std sub adc push add outsl pop lock sub dec xchg sbb nop and lock or (bad) mov ja shrl sub xor mov fistpl fs std nop loope push mov jne cmpsb mov push je mov out jae cmp cmpsb cmp inc xor push lahf cmp cltd push enter sbb rol jns sub adc insb sbb sbb (bad) imul sbb mov and outsb in push stc inc adc cmp loope clc push fsubrl adc and pusha and fdivs fsubr sarb lds loopne ret in inc and lea sub gs iret pop jno or mov adc xchg jl and mov sbb into push pop and jne push inc push in mov jo mov jns adc push sbb loope in mov ret lret dec pop test shll stos jmp inc sbb (bad) lahf inc out add inc mov sub mov pop sub adc dec cmpsb add and adc aaa push in bound or adc pop ja int3 insl (bad) xlat cmp lods sbb (bad) mov jnp inc push test inc test enter lcall fiaddl les sub shll icebp jmp mov mov dec out sbb push mov scas push fdivl ret pop int xor nop lea adc sub jno shll inc fs sub jne or movsl out pop sbb lds lods sbb mov pop adc mov push sbb imul test insb pop inc sbb push int pop or push andl bound push popa mov add and inc in ret popf das sub jne or inc (bad) popa inc adc imul jo dec sbb push add fs xchg out adc cmpsl mov jp jmp cmp lea cmp insb add inc out mov or push jae pop das in adc sub cmpl ret dec mov add das and jmp mov (bad) scas mov dec rol mov add push js mov inc cwtl (bad) das pusha movsb sbb push rcll lret and iret pop add add imul in mov push mov in add fidivl lods enter xor arpl sub and inc mov and aas push push data16 mov dec sbb cwtl dec add jg icebp cld adc aas loopne popl add fs add adc mov add nop/reserved ljmp movups lcall sub add mov subb ds cmpsl loop mov dec inc inc scas pop int3 pusha mov adc and inc and rclb insb jno mov or outsl xchg mov jno or xor xchg clc in cs push xor insl (bad) lock je,pn jae pusha lahf cmpsl sbb fisubrl jo mov xchg add iret fwait popa add jns loop jae dec pop add and mov es movsb cmp dec xchg and mov add add add add add add add pushf nop pop add mov (bad) jmp nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp loopne dec add xchg dec add 