push mov mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl movl jmp mov add mov mov add mov mov add mov mov cmp jae mov movsbl sar mov mov mov mov mov movsbl shl and mov mov add cmp jae mov movsbl sar movzbl or mov mov movsbl shl and sar mov mov add cmp jae mov movsbl sar movzbl or mov mov movsbl and mov mov mov mov jmp mov movb movzbl mov mov mov mov jmp mov movb mov movb movzbl mov mov mov mov jmp mov movb mov pop ret push mov movsbl cmp jl movsbl cmp jg movsbl sub jmp movsbl cmp jl movsbl cmp jg movsbl sub jmp movsbl cmp jl movsbl cmp jg movsbl add jmp movsbl cmp jne mov jmp movsbl cmp jne mov jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl jmp mov add mov mov mov sub mov test je mov add mov mov movzbl push call add movsbl shl and mov mov movzbl push call add mov movsbl sar movsbl or mov mov movsbl cmp je movsbl and shl mov mov movzbl push call add mov movsbl sar movsbl or mov mov movsbl cmp je movsbl shl and mov mov movzbl push call add movsbl movsbl or mov jmp mov sub mov movb movl jmp mov sub mov movb mov mov movl mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov jmp mov mov pop ret int3 int3 push mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl jne mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl jmp mov sub mov cmpl jl mov add mov sar and je cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov pop ret int3 int3 push mov sub push movl movl movl movl movl movl movl mov mov mov test je movl movl movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge mov shl mov shl lea mov shl add mov movl mov shl mov shl lea mov shl add mov movl jmp jmp jmp jmp push push push call push call push push call add mov cmpl jne jmp push mov push mov push call add movl movl mov push call add mov mov add mov mov and sar mov mov mov add mov mov and mov mov mov add mov mov mov mov mov add mov mov push call add test jne mov cmp jge cmpl jne movl mov shl mov shl lea mov shl add mov cmpl jne mov shl mov shl lea mov shl add mov mov mov mov sub mov imul mov shl mov shl lea mov shl add mov mov mov mov add mov mov shl mov shl lea mov shl add mov mov add mov shl mov shl mov shl lea add mov mov jmp mov sub mov shl mov shl lea mov shl add mov mov imul mov shl mov shl lea mov shl add mov mov mov mov shl mov shl lea mov shl add mov mov add mov shl mov shl mov shl lea add mov mov mov push call add mov mov add mov mov and sar mov mov mov add mov mov and mov mov mov add mov mov mov mov mov add mov jmp mov push call add test jne mov push call add mov jmp movl mov push call add movl jmp mov add mov cmpl jge mov movl jmp movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge mov shl mov shl lea mov shl add mov cmpl jl mov and shl mov mov and shl or mov mov and shl or mov mov or mov cmpl jne mov mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov mov cmp jne mov mov jmp jmp mov cmp jne mov mov mov mov mov mov add mov movl jmp mov add mov mov shl mov shl lea mov shl add mov mov cmp jge mov shl mov shl lea mov shl add mov mov imul mov mov mov mov jmp jmp jmp jmp jmp cmpl jl cmpl jl cmpl jge jmp jmp mov sub mov mov mov jmp movl movl movl jmp mov add mov cmpl jge mov cmpl je cmpl jne mov mov mov cmp jge mov mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov jmp mov add mov sub mov mov cmp jge mov mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov mov jmp mov cmp jge mov add mov sub mov mov cmp jge mov mov mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl movl mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov movl mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov add mov movl movl jmp mov add mov cmpl jge mov cmpl je cmpl jne mov mov mov mov cmpl jle mov movb mov add mov mov add mov mov push mov push call add movl jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp mov mov push call add jmp mov movb mov add mov mov add mov mov mov push call add jmp mov add mov sub mov cmpl jle mov movb mov add mov mov add mov mov push mov push call add mov add mov jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp mov mov push call add jmp mov movb mov add mov mov add mov mov mov push call add mov mov jmp mov cmp jge mov add mov sub mov mov movb mov add mov mov add mov mov push mov push call add mov add mov jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl cmpl jge cmpl jne cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov jmp jmp movl jmp mov add mov mov cmp jge movl jmp mov add mov mov cmp jge mov mov mov cmp jne jmp jmp mov cmp jne mov mov mov mov mov add mov jmp movl movl jmp mov add mov mov cmp jge movl jmp mov add mov mov cmp jge mov mov mov cmp jne jmp jmp mov cmp jne jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl cmpl jne mov imul movl mov imul movl mov imul movl mov imul movl mov imul movl mov imul movl mov add mov jmp mov sub imul mov imul mov mov mov imul movl mov sub imul mov imul mov mov mov imul movl mov sub imul mov imul mov mov mov imul movl mov add mov mov cltd and add sar add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push cmpl jge mov add mov call movl movl movl movl movl movl movl movl movl movl movl movl cmpl je movl mov push call add mov mov add mov jmp mov sub mov jmp mov sub mov cmpl jl mov imul mov imul mov cmp jne mov add imul mov imul mov mov jmp movl jmp mov add mov mov cmp jge jmp movl movl jmp mov add mov mov cmp jge movl jmp mov sub mov cmpl jl mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp cmpl jge xor jmp lea push push call push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add call push call add push call add push call add push call add push call add mov mov mov mov mov mov lea jmp dec dec dec dec xor pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 push mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov cmp jge movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov movl mov mov mov mov mov cmp jge movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov mov movl movl mov mov mov cmp jge mov cltd and add sar cmp jge mov movzbl test jne mov add mov cmpl jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov shl mov mov mov jmp mov add mov mov add cmp jge mov mov mov mov mov add mov jmp mov mov movl jmp mov sub mov cmpl jl mov mov mov sub mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp mov add mov jmp mov movzbl test je mov add mov movl jmp mov sub mov cmpl jl mov mov mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp mov add mov jmp movl movl mov cmp jge mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov push push mov add push call add add mov jmp push mov add push call add xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push push call add mov cmpl jne xor jmp mov push call add mov mov push call add test jne mov push call add mov push call add mov jmp mov push call add movl movl mov cmp jge movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp movl mov push call add test jne mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov add mov jmp mov push call add movl jmp mov add mov mov sub cmp jge mov imul mov push mov imul mov push mov imul mov push mov imul mov push mov imul mov push mov imul mov push call add jmp movl mov add mov mov mov mov addl cmpb jne mov sub mov mov push push push call add xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov movl jmp mov add mov cmpl jge mov movb jmp mov mov cmpl jne mov add mov push call add mov mov mov mov movl mov movl movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movsbl cmp jne lea mov mov add mov mov mov mov addl cmpb jne mov sub mov cmpl jne movsbl cmp jne mov add cmp jle mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp call jmp jmp movsbl cmp jne mov add cmp jle mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp call jmp jmp xor jmp jmp movsbl cmp jne jmp jmp movsbl cmp je movsbl cmp jne jmp jmp xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov call mov xor mov movl mov push lea push push call lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov movb movl jmp mov add mov mov cmp jge mov movsbl cmp jne movb jmp jmp movzbl test je lea push push call push call add push call add call cltd mov idiv add push call push call cltd mov idiv add push call cltd mov idiv add push lea push push lea push call add push lea push push lea push push push call mov push lea push push call push lea push lea push call push push push lea push push push call push call mov xor call mov pop ret int3 int3 int3 push mov sub push push call push lea mov addb lea mov lea mov lea mov lea mov lea mov push push push mov push call push push push mov push call mov push call add mov push mov push call add test jne xor jmp push mov push call mov push push push lea push call test je lea push mov push mov push call test jne lea push call lea push call jmp mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl movl movl movl movl mov mov push mov push call mov push push call mov movl movl movl push mov push call mov lea push call mov pop ret push mov push mov mov push push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov cmpl je cmpl je cmpl je jmp mov and movzwl mov mov shr and movzwl mov mov mov cmpl je cmpl je jmp push push mov push push mov push call jmp mov push call jmp mov push mov push mov push mov push call jmp jmp lea push mov push call mov lea push mov push call jmp push call jmp mov push mov push mov push mov push call jmp xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je cmpl je jmp mov jmp mov and movzwl cmp je mov and movzwl cmp jne mov and movzwl push mov push call mov jmp xor mov pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp cmp jne repz jmp mov push mov sub push xor cmp jne call push push push push push movl call add or jmp mov cmp je push mov mov lea push push pushl lea push movl movl call add decl mov js mov mov jmp lea push push call pop pop mov pop pop leave ret mov push mov lea push pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov mov push xor cmp jne call push push push push push movl call add xor jmp mov and pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add xor jmp mov and pop pop ret mov push mov pushl call test jne call jmp xor test je push call pop or pop ret xor pop ret mov push mov pop jmp push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add xor jmp xor mov cmp setne cmp je xor cmp setne cmp je call mov cmp jne call movl jmp mov cmp jne call movl push lea push push call add jmp push pushl push push call add mov movl call mov call ret pushl call pop ret mov push mov push pushl pushl call add pop ret mov push mov push push mov xor cmp jne call push pop push push push push push mov call add mov jmp push pushl pushl call add mov cmp je xor jmp call mov pop pop pop ret mov push mov call mov mov pop ret call mov imul add mov mov shr and ret mov push mov sub push push push xor cmp je cmp je mov cmp jne call push push push push push movl call add xor pop pop pop leave ret mov cmp je or xor divl cmp ja mov imul testl mov mov mov je mov mov jmp movl test je mov and je mov test je jl mov cmp jb mov push pushl pushl call sub add add sub add jmp cmp jb test je push call pop test jne cmpl mov je xor mov divl sub push pushl push call pop push call add cmp je mov cmp ja mov add sub cmp jb mov jmp mov movsbl push push call pop pop cmp je incl mov dec mov test jg movl test jne mov jmp orl mov sub xor divl jmp orl mov jmp push push call xor cmp je cmp je xor cmp setne cmp jne call movl push push push push push call add xor call ret pushl call pop mov pushl pushl pushl pushl call add mov movl call mov jmp pushl call pop ret mov push mov sub push push mov xor cmp jne call push push push push push movl call add or jmp push call cmp pop mov jge mov push push push call add cmp mov jl mov test jne sub jmp mov mov push mov sub mov test je mov mov sar mov and shl testb je mov cmp jae mov cmpb jne incl xor inc cmp jb cmp jne mov jmp test js call movl jmp testb je mov cmp jne mov jmp mov mov sub add sar and lea mov mov shl testb je push push pushl call add cmp jne mov mov add jmp cmpb jne incl inc cmp jb testl jmp push pushl pushl call add test jge or jmp mov cmp ja mov test je test je mov mov mov testb je incl mov sub mov mov add pop pop pop leave ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret mov push mov push mov mov test jne call movl or jmp and cmpl mov jne push call add andl pop push call mov pop test jns and mov jmp test je test je test jne movl pushl pushl push call pop push call xor add cmp setne dec mov pop pop ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp mov cmp je cmp je cmp jne pushl call pop mov push pushl pushl call add mov movl call mov call ret pushl call pop ret mov push mov push push mov push xor or cmp jne call push push push push push movl call add or jmp testb je push call push mov call push call push call add test jge or jmp mov cmp je push call pop mov mov mov pop pop pop pop ret push push call orl xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp testb je mov mov call ret push call pop mov push call pop mov movl call jmp mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl push push push push push call add orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl push push push push push call add orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret mov push mov mov decl js mov movzbl inc mov pop ret push call pop pop ret mov push mov push push lea push call mov mov push add push adc push push call cmp jl jg cmp jbe or mov mov test je mov mov leave ret mov push push push mov call movl mov pop ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov sub jmp pushl call pop test je pushl call pop test je leave ret testb mov jne orl mov call push call pop push lea call push lea push call int3 mov push mov cmpl jne call pushl call push call pop pop pop ret mov cmp jne mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov ret xor ret push push call xor mov lea push call push pop mov mov cmp jne mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov jmp mov xor inc push call pop test jne push call pop call test jne push call pop call mov call test jge push call pop call mov call mov call test jge push call pop call test jge push call pop push call pop cmp je push call pop call test je movzwl jmp push pop push push push push call mov cmp jne push call call mov jmp mov mov mov mov push push call pop pop ret mov mov mov cmpl jne push call call movl mov jmp xor inc ret mov movl mov call ret call jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov call mov push call pop push call push call cmpl jne push call pop push call push call leave ret mov push mov push push mov push call mov mov pop test jne call movl orl or jmp test je call movl jmp push xor test je mov test je mov and mov mov mov and or mov mov mov test jne call add cmp je call add cmp jne pushl call pop test jne push call pop testl push je mov mov lea mov mov sub dec cmp mov jle push push pushl call add mov jmp or mov or jmp mov cmp je cmp je mov and mov sar shl add jmp mov testb je push push push push call and add cmp je mov mov mov jmp xor inc push lea push pushl call add mov cmp je orl or jmp mov and pop pop pop leave ret mov push mov mov push mov movb test jne call mov mov mov mov mov mov cmp je mov test jne call mov mov cmp je mov mov test jne call mov mov testb jne orl movb jmp mov mov mov mov mov pop pop ret cmpb je mov andl ret mov ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov mov addl mov mov pop ret mov push mov mov addl mov mov mov pop ret mov push mov mov addl mov mov pop ret mov push mov sub mov xor mov push mov push mov xor push mov pushl lea mov mov mov mov mov mov mov mov mov call test jne call movl xor push push push push push call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov test je inc cmpl mov jl mov sub cmp ja movsbl movsbl and xor jmp xor xor movsbl push sar pop mov cmp ja jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov cmp mov jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne add mov mov cmp mov jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov lea push movzbl push mov call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmp lea mov mov mov jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je cmp jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov cmp je mov cmp je testl movswl mov je cltd sub sar movl jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb movl je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je mov mov add jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov test je mov mov mov jmp movl xor mov add mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call pop call mov add and je cmp jne lea push push pushl call pop call pop pop cmpb jne cmp jne lea push push pushl call pop call pop pop cmpb jne orl inc mov push jmp movl mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je cmp jg jl cmp jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmp je inc inc cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test je mov mov mov jmp cmpb je mov andl mov mov pop pop xor pop call leave ret nop mov lret inc add lret inc add inc add int3 inc add int3 inc add into inc add mov mov pop ret mov push mov sub mov xor mov andl push push lea push push call lea mov lea add mov mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea movl mov mov mov mov movl movl mov call push mov call lea push call test jne test jne push call pop push call push call mov xor pop call leave ret mov push mov push pushl call pushl mov call pop pop mov mov pop pop ret pushl call pop ret mov push mov pop jmp mov push mov pushl call pop test je pop jmp push call pop pop jmp xor push push push push push call add ret mov push mov pop jmp mov push mov mov xor cmp je inc cmp jb lea cmp ja push pop pop ret mov pop ret add push pop cmp sbb and add pop ret call test jne mov ret add ret call test jne mov ret add ret mov push mov push call mov push mov call pop mov call mov pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov xor cmp jne push push push push push call add push pop jmp call mov mov xor pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov xor cmp jne push push push push push call add push pop jmp call mov mov xor pop pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp mov cmp je push pushl mov pushl mov pushl lea push movl movl call add decl mov js mov mov jmp lea push push call pop pop mov pop pop leave ret mov push mov pushl push pushl pushl call add pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp pushl lea pushl movl pushl movl push mov mov call add pop leave ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp push mov push mov cmp je cmp jne call push push push push push movl call add or jmp mov mov cmp ja mov pushl lea pushl movl pushl mov push mov call add mov cmp je cmp jl decl js mov mov jmp lea push push call pop pop cmp je mov jmp xor cmp mov setge dec dec pop pop pop leave ret mov push mov pushl push pushl pushl pushl push call add test jge or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jge or pop ret mov push mov push xor cmp jne call push push push push push movl call add or jmp push mov cmp je cmp ja call movl jmp pushl pushl pushl pushl push push call add cmp jge mov cmp jne call movl push push push push push call add or pop pop pop ret mov push mov pushl push pushl pushl pushl call add pop ret mov push mov push push xor cmp jne call push push push push push movl call add or jmp push mov push cmp jne cmp jne cmp jne xor jmp cmp je mov cmp ja call movl jmp call pushl pushl pushl cmp jbe mov mov inc push push push call add cmp jne call cmpl jne call mov jmp mov push push push mov call add mov cmp jne cmpl jne call cmpl jne call mov mov jmp cmp jge mov cmp jne call movl push push push push push call add or pop pop pop leave ret mov push mov pushl push pushl pushl pushl pushl call add pop ret mov push mov pushl push pushl pushl pushl push call add test jge or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jge or pop ret mov ret mov push push pop test jne mov jmp cmp jge mov mov push push call pop pop mov test jne push push mov call pop pop mov test jne push pop pop ret xor mov jmp mov mov add add cmp jl push pop xor mov push mov sar mov mov and shl mov cmp je cmp je test jne mov add inc cmp jl pop xor pop ret call cmpb je call pushl call pop ret mov push mov push mov mov cmp jb cmp ja mov sub sar add push call orl pop jmp add push call pop pop ret mov push mov mov cmp jge add push call mov orl pop pop ret mov add push call pop ret mov push mov mov mov cmp jb cmp ja andl sub sar add push call pop pop ret add push call pop ret mov push mov mov cmp mov jge andl add push call pop pop ret add push call pop ret mov push mov sub mov push xor push mov mov mov mov mov jmp inc cmpb je mov cmp je cmp je cmp je call push push push push push movl call add xor jmp movl jmp orl mov jmp movl orl xor inc inc mov push cmp je lea mov cmp je movsbl cmp jg je sub je sub je dec je sub je sub je sub jne cmp jne orl movl jmp or jmp testb jne orl jmp movl jmp testb jne mov and or mov mov and or mov jmp cmp jne orl movl jmp sub je sub je dec je sub je sub jne testl jne or jmp cmp jne andl movl jmp cmp jne or movl jmp testl jne orl jmp testl je xor jmp orl inc mov cmp jne cmp je jmp inc cmpb je push push push call add test jne add jmp inc cmpb je cmpb jne inc cmpb je push push push call add test jne add orl jmp push push push call add test jne add orl jmp push push push call add test jne add orl jmp inc cmpb je cmp je call push push push push push movl call add jmp push pushl lea pushl pushl push call add test je xor jmp mov incl mov mov mov mov mov mov mov mov pop pop pop leave ret push push call xor xor mov push call pop mov xor mov cmp jge mov lea cmp je mov mov test jne test jne lea cmp ja lea push call pop test je mov pushl push call pop pop mov mov testb je push push call pop pop inc jmp mov mov jmp shl push call pop mov mov mov add cmp je push mov add push call pop pop test mov jne pushl call pop mov mov jmp mov add push call mov mov mov mov cmp je andl mov mov mov mov orl movl call mov call ret mov push call pop ret int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov add xor call mov mov add xor jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov sub push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne mov lea mov mov mov mov cmp je lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je push push mov call jmp push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret mov push mov pushl call test jne pop jmp pop ret mov push mov push pushl mov call test je mov cmp je push pushl call call test je mov jmp mov push call test jne push call pop test je push push call test je pushl call mov mov pop pop ret push call pop ret mov push mov push pushl mov call test je mov cmp je push pushl call call test je mov jmp mov push call test jne push call pop test je push push call test je pushl call mov mov pop pop ret call ret mov push mov pushl pushl call call pop ret mov ret mov push pushl call mov test jne pushl call pop mov push pushl call mov pop ret mov push mov pushl pushl pushl call pop call pop ret mov cmp je push pushl call pop call orl mov cmp je push call orl jmp push push call mov push call test jne push call pop mov mov movl xor inc mov test je push push mov call mov push pushl call mov mov movb movb movl push call pop andl pushl call movl call push call pop mov mov mov test jne mov mov pushl call pop movl call call ret xor inc mov push call pop ret push call pop ret mov push push call pushl mov call call mov test jne push push call mov pop pop test je push pushl pushl call pop call test je push push call pop pop call orl mov jmp push call pop xor push call pop mov pop ret mov push call mov test jne push call pop mov pop ret push push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop andl mov test je push call test jne cmp je push call pop movl call push call pop movl mov test je push call pop cmp je cmp je cmpl jne push call pop movl call push call pop call ret mov push call pop ret mov push call pop ret mov push mov cmpl je cmpl jne push pushl mov call test je pushl pushl call call mov pop push pushl pushl call pop call pushl call mov cmp je push push call pop ret jmp jmp mov push push mov push call test jne push call pop mov test je mov push push call push push mov call push push mov call push push mov call cmpl mov mov je cmpl je cmpl je test jne mov mov mov movl mov mov call mov cmp je pushl push call test je call pushl call pushl mov call pushl mov call pushl mov call add mov call test je push pushl call pop call mov cmp je push push call mov pop pop test je push pushl pushl call pop call test je push push call pop pop call orl mov xor inc jmp call xor pop pop ret mov push mov mov call mov xor mov mov push xor mov mov mov cmp jne xor jmp cmp jne call mov call push push push push push movl call add or jmp push push mov mov sar lea mov and shl add mov add sar mov mov cmp je cmp jne mov not test jne call xor mov call push push push push push movl call add jmp testb je push push push pushl call add pushl call pop test je mov testb je call mov xor cmp lea sete push mov pushl mov call test je xor cmp je test je call mov mov xor mov cmp jbe mov mov test jne mov mov xor cmp sete mov mov add cmpl je mov mov mov andl push lea push jmp movsbl push call pop test je mov sub add xor inc cmp jbe push lea push push call add cmp je inc incl jmp push push lea push call add cmp je xor push push push lea push push lea push push pushl inc incl call mov test je push lea push push lea push mov mov pushl call test je mov mov add cmp mov jl cmpl je push lea push push lea push mov mov movb pushl call test je cmpl jl incl incl jmp cmp je cmp jne movzwl xor cmp sete inc inc addl mov mov cmp je cmp jne pushl call pop cmp jne addl cmpl je push pop push mov call pop cmp jne incl incl mov cmp jb jmp mov mov incl mov mov mov jmp xor mov add testb je mov mov test jne mov cmp jbe jmp mov mov andl sub lea cmp jae mov incl mov inc cmp jne incl movb inc incl mov inc incl cmpl jb mov lea sub push lea push push lea push mov pushl call test je mov add cmp jl mov sub cmp jb jmp mov cmp jne cmp jbe jmp mov mov andl sub lea cmp jae mov addl movzwl inc inc cmp jne addl push pop mov inc inc addl addl mov inc inc cmpl jb mov lea sub push lea push push lea push mov pushl call test je mov add cmp jl mov sub cmp jb jmp cmp jbe mov andl sub push lea pop cmp jae mov movzwl add add cmp jne push pop mov add add add mov add cmpl jb xor push push push lea push lea sub cltd sub sar push mov push push push call mov cmp je push lea push mov sub push lea push mov mov pushl call test je add cmp jg jmp call mov cmp jg mov sub mov cmp jb jmp push lea push pushl pushl pushl call test je mov andl mov jmp call mov cmpl jne cmpl je push pop cmp jne call movl call mov jmp pushl call pop jmp mov mov testb je mov cmpb jne xor jmp call movl call andl or jmp mov sub pop pop mov xor pop call leave ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret mov push mov mov push xor cmp jne call push push push push push movl call add or jmp mov pop pop ret mov push mov push push mov mov mov and xor cmp jne test je mov push mov sub test jle push push push call pop push call add cmp jne mov test jns and mov jmp orl or pop mov andl mov pop mov pop pop ret mov push mov push mov test jne push call pop jmp push call pop test je or jmp testl je push call push call pop neg pop sbb jmp xor pop pop ret push push call xor mov mov push call pop mov xor mov cmp jge mov lea cmp je mov testb je push push call pop pop xor inc mov mov mov mov test je cmp jne push call pop cmp je incl jmp cmp jne test je push call pop cmp jne or mov call inc jmp xor mov mov pushl push call pop pop ret movl call cmpl mov je mov call ret push call pop ret push push call xor cmp jne push call pop jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne pop pop pop jmp test jne shr and cmp jb rep jmp nop mov mov sub jb and add jmp jmp nop jmp nop mov testl and mov mov mov mov mov shr mov add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea mov inc add inc add inc add inc add inc add inc add inc add inc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov movsb clc inc add inc add clc inc add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop inc stc inc add inc add inc add rorl add jmp cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea in inc add stc inc add stc inc add stc inc add inc add inc add inc add cli inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov inc cli inc add inc add inc add add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret push push call xor mov lea push call movl push push pop push call pop pop cmp je mov mov lea jmp movb orl movb mov movb movb movb mov movb add mov add cmp jb cmp je mov cmp je mov lea lea mov mov cmp jl mov movl jmp push push call pop pop test je mov lea mov addl lea jmp movb orl movb andl andb movb movb andl movb add mov add cmp jb incl cmp jl jmp mov andl test jle mov mov cmp je cmp je mov test je test jne push call test je mov mov sar and shl add mov mov mov mov mov push lea push call pop pop test je incl incl inc addl cmp jl xor mov shl add mov cmp je cmp je orb jmp movb test jne push pop jmp mov dec neg sbb add push call mov cmp je test je push call test je mov and cmp jne orb jmp cmp jne orb push lea push call pop pop test je incl jmp orb movl inc cmp jl pushl call xor jmp xor inc ret mov movl or call ret mov push push mov mov test je lea jmp cmpl je lea push call mov add add cmp jb pushl call andl pop add cmp jl pop pop ret mov push mov push mov push call pop cmp jne call movl or jmp push pushl push pushl push call mov cmp jne call jmp xor test je push call pop or jmp mov sar mov and shl lea andb mov pop pop pop ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret push push call mov test je cmpl jne push call pop andl push call pop mov test je push push call pop pop movl call cmpl jne pushl jmp push call pop ret push push pushl call test jne call mov call push call mov pop call ret mov push mov push mov push push call pop cmp je mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov jmp xor push call mov sar mov and shl pop movb test je push call pop or jmp xor pop pop pop ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl call pop mov jmp call movl orl movl call mov call ret pushl call pop ret mov push mov push mov mov test je test je pushl call andl xor pop mov mov mov pop pop ret mov push mov push mov push xor cmp jne call push push push push push movl call add jmp mov test je test jne test je or mov jmp or mov test jne push call pop jmp mov mov pushl pushl push call pop push call add mov cmp je cmp je testb jne push call pop cmp je push call pop cmp je push call sar push lea call and pop shl add pop jmp mov mov and cmp jne orl cmpl jne mov test je test jne movl mov decl movzbl inc mov jmp neg sbb and add or mov or pop pop pop ret int3 int3 int3 int3 int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret mov andl andl movl ret mov push mov push mov push push mov movl mov test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl movl mov pop pop pop pop ret mov push mov mov mov movl mov andl mov pop ret mov push mov push mov push mov movl mov mov test mov push je test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl jmp mov pop mov pop pop pop ret mov push mov push mov push push mov cmp je mov mov test mov je test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl jmp mov mov pop pop pop pop ret cmpl movl je pushl call pop ret mov test jne mov ret mov push mov push lea push mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push pushl mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push movl call pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push call pop ret mov push mov mov add push add push call neg pop sbb pop inc pop ret mov push mov mov add push add push call neg pop sbb pop neg pop ret mov push mov mov add push add push call pop pop xor test setg mov pop ret lea ret mov movl ret mov ret mov push mov pop jmp mov push mov push push push push pushl call pushl mov mov call mov pop pop cmp jb mov sub lea cmp jb push call mov lea pop cmp jae mov cmp jae mov add cmp jb push pushl call pop pop test jne lea cmp jb push pushl call pop pop test je sar push lea call pop mov pushl call mov add push call pop mov mov pop jmp xor pop pop pop leave ret mov push push push call mov push call add mov mov test jne push pop pop ret andl xor pop ret push push call call andl pushl call pop mov movl call mov call ret call ret mov push mov pushl call neg sbb neg pop dec pop ret push push call andl mov cmp ja push call pop andl push call pop mov movl call mov call ret push call pop ret mov push mov cmpl jne call push call push call pop pop mov cmp jne mov test jne inc push push pushl call pop ret push mov cmp jne push call pop test jne test jne inc add and push push pushl call pop pop ret mov push mov push mov cmp ja push push mov cmpl jne call push call push call pop pop mov cmp jne test je mov jmp xor inc push jmp cmp jne push call pop test jne test jne inc add and push push pushl call mov test jne push pop cmp je pushl call pop test je mov jmp call mov call mov pop mov pop jmp push call pop call movl xor pop pop ret mov push mov mov mov pop ret mov push mov push push call pushl call pushl mov call push mov call add mov pop pop ret push call pop ret pushl call pop ret mov push mov pushl call pop test je pushl call pop test je xor inc pop ret xor pop ret mov push mov sub mov push push push pop mov lea rep mov mov pop mov pop test je testb je movl lea push pushl pushl pushl call leave ret mov push mov mov mov cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne call xor pop ret push call xor ret mov push mov push mov push call pushl call add cmp ja test je pop pop ret mov push mov call pushl call pushl call push call add pop ret mov push mov push call test je push push call test je pushl call pop ret mov push mov pushl call pop pushl call int3 push call pop ret push call pop ret mov push mov push mov jmp mov test je call add cmp jb pop pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov cmp je mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov cmp je mov xor pop pop ret mov push mov cmpl je push call pop test je pushl call pop call push push call pop pop test jne push call mov movl call cmpl pop je push call pop test je push push push call xor pop ret push push call push call pop andl xor inc cmp je mov mov mov cmpl jne pushl call pop mov mov test je pushl call pop mov mov mov mov sub mov cmp jb call cmp je cmp jb pushl call mov call mov call pushl call mov pushl call add cmp jne cmp je mov mov mov mov mov mov jmp push mov call pop push mov call pop movl call cmpl jne mov push call pop pushl call xor inc cmpl je push call pop ret call ret mov push mov push push pushl call add pop ret mov push mov push push pushl call add pop ret push push push call add ret push push push call add ret mov push call mov push call push call push call push call push call push call push call push call push call add mov pop ret mov push mov cmpl je pushl pushl pushl pushl pushl call add pop ret mov push mov push push push mov push push xor xor mov cmp je inc mov cmp jb cmp jae push call pop cmp je push call pop test jne cmpl je cmp je push mov push mov push call add test je push push push push push call add push mov push push movb call test jne push push push call add test je xor push push push push push call add push call inc pop cmp jbe push call sub add push mov push sub push push call add test je xor push push push push push call add jmp xor push push push call add test je push push push push push call add mov pushl push push call add test je push push push push push call add push push push call add jmp push call mov cmp je cmp je push lea push lea pushl call pop push pushl push call pop pop pop leave ret mov push mov xor mov cmp je inc cmp jb xor pop ret mov pop ret push call pop cmp je push call pop test jne cmpl jne push call push call pop pop ret ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret mov push mov push push push call mov test je mov mov push mov mov push cmp je mov imul add add cmp jb imul add cmp jae cmp jne mov jmp xor test je mov mov test jne xor jmp cmp jne andl xor inc jmp cmp je mov mov mov mov mov cmp jne mov mov mov add cmp jge imul mov andl mov mov inc add add cmp jl mov mov mov cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl pushl push call pop mov jmp andl push call mov pop mov or pop pop pop leave ret mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push push xor cmp jne call mov test jne mov mov cmp ja test je test je cmp jne xor test sete mov movzbl push call pop test je inc inc jmp cmp ja inc mov test jne pop mov pop ret cmpl jne call push mov push xor test jne or jmp cmp je inc push call pop lea mov test jne push inc push call mov pop pop mov test je mov push jmp push call mov inc cmpb pop je push push call pop pop mov test je push push push call add test je xor push push push push push call add add add cmpb jne pushl call andl andl movl xor pop pop pop pop ret pushl call andl or jmp mov push mov mov mov pop ret mov push mov push mov push xor push mov mov mov movl cmp je mov addl mov mov cmpb jne xor cmp mov sete inc mov jmp incl test je mov mov inc mov mov movzbl push inc call pop test je incl cmpl je mov mov incl mov inc mov mov test je cmpl jne cmp je cmp jne test je movb andl cmpb je mov cmp je cmp jne inc jmp dec jmp cmpb je cmpl je mov addl mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne cmpl je lea cmpb jne mov jmp xor xor cmp sete mov shr test je dec test je movb inc incl test jne mov mov test je cmpl jne cmp je cmp je test je movsbl push test je call pop test je mov mov incl mov inc incl mov mov incl mov jmp call pop test je inc incl incl mov inc jmp test je movb inc mov incl mov jmp mov pop pop test je andl incl leave ret mov push mov sub push xor push push cmp jne call push mov push push mov call mov mov cmp je mov cmp jne mov mov lea push push push lea call mov add cmp jae mov cmp jae mov shl lea cmp jb push call mov pop cmp je mov lea push add push push lea call mov add dec mov mov xor jmp or pop pop pop leave ret mov push mov mov sub push push mov push xor xor cmp jne call mov cmp je movl jmp call cmp jne push pop mov jmp mov cmp jne cmp jne call mov cmp jne xor jmp mov cmp je inc inc cmp jne inc inc cmp jne mov push push push sub push sar inc push push push push mov call mov cmp je push call pop mov cmp je push push pushl push pushl push push push call test jne pushl call pop mov mov push call mov jmp cmp je cmp jne call mov cmp je cmp je inc cmp jne inc cmp jne sub inc push mov call mov pop cmp jne push call jmp pushl push push call add push call mov pop pop pop leave ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret xor inc ret mov push mov xor cmp push sete push push call mov test jne pop ret xor inc mov pop ret cmpl jne push xor cmp push mov jle push mov add push push pushl call pushl push pushl call add inc cmp jl pop pushl push pushl call pop pop pushl call andl ret mov ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp jne mov jmp test jne mov shl or mov not mov pop pop pop leave ret andl ret mov push mov push push mov push mov mov mov push push mov call or pop cmp jne call movl mov mov jmp pushl lea push pushl push call mov cmp jne call test je push call pop jmp mov sar mov and shl lea andb mov mov pop pop leave ret push push call or mov mov mov cmp jne call andl call movl mov mov jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and jne call mov call movl push push push push push call add or mov jmp push call pop mov mov testb je pushl pushl pushl pushl call add mov mov jmp call movl call mov orl orl movl call mov mov call ret pushl call pop ret mov push mov incl push call pop mov mov test je orl movl jmp orl lea mov movl mov andl mov pop ret mov push mov mov cmp jne call movl xor pop ret push xor cmp jl cmp jb call push push push push push movl call add xor jmp mov and sar mov shl movsbl and pop pop ret sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret mov push push mov push xor lea push push call xor movzwl mov mov mov mov shl or lea stos stos stos mov add lea sub mov mov mov inc dec jne lea mov mov mov inc dec jne pop pop ret mov push mov sub mov xor mov push push lea push pushl call mov test je xor mov inc cmp jb mov movb test je lea movzbl movzbl cmp ja sub inc push lea push push call add inc mov inc test jne push pushl lea pushl push push lea push push push call xor push pushl lea push push push lea push push pushl push call add push pushl lea push push push lea push push pushl push call add xor movzwl test je orb mov jmp test je orb mov mov jmp movb inc cmp jb jmp lea movl xor sub mov lea add lea cmp ja orb mov add jmp cmp ja orb mov sub mov jmp movb inc cmp jb mov pop xor pop call leave ret push push call call mov mov test je cmpl je mov test jne push call pop mov call ret push call pop andl mov mov cmp je test je push call test jne cmp je push call pop mov mov mov mov push call movl call jmp mov push call pop ret mov push mov sub push xor push lea call mov cmp jne movl call cmp je mov andl jmp cmp jne movl call jmp cmp jne mov mov movl jmp cmp je mov andl mov pop leave ret mov push mov sub mov xor mov push mov push mov push call mov xor mov cmp jne mov call xor jmp mov xor cmp je incl add cmp jb cmp je cmp je movzwl push call test je lea push push call test je push lea push push call xor inc add mov mov cmp jbe cmpb je lea mov test je movzbl movzbl jmp push lea push push call mov add imul mov lea mov jmp mov test je movzbl movzbl jmp mov mov or movzbl inc cmp jbe mov inc inc cmpb jne mov incl add cmpl mov jb mov mov movl call push mov lea lea pop mov inc mov inc inc inc dec jne mov call jmp orb inc cmp jbe inc inc cmpb jne lea mov orb inc dec jne mov call mov mov jmp mov xor movzwl mov shl or lea stos stos stos jmp cmp jne or mov pop pop xor pop call leave ret mov push mov sub push lea call mov cmpl je cmpb mov je mov andl leave ret cmpb je mov andl xor leave ret push push call orl call mov mov call mov mov call mov cmp je push call pop mov test je mov mov mov rep andl push pushl call pop pop mov test jne mov pushl call test jne mov cmp je push call pop mov push mov call testb jne testb jne push call pop andl mov mov mov mov mov mov xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp pushl call test jne mov cmp je push call pop mov push call movl call jmp push call pop ret jmp cmp jne cmp je push call pop call movl jmp andl mov call ret cmpl jne push call pop movl xor ret mov ret mov ret mov push mov push push mov mov xor push cmp je cmp je mov cmp je cmp jne mov cmp je cmp jne push call pushl call pop pop mov cmp je cmp jne push call pushl call pop pop pushl call pushl call pop pop mov cmp je cmp jne mov sub push call mov mov sub push call mov sub push call pushl call add lea mov cmp je cmp jne push call pushl call pop pop lea movl cmpl je mov cmp je cmp jne push call pop cmp je mov cmp je cmp jne push call pop add decl jne push call pop pop pop pop pop ret mov push mov push push mov push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop pop pop ret mov push mov push mov test je push push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop mov pop pop ret mov push mov test je test je cmp je push push pop mov rep andl push call pop pop pop ret test je test je push mov cmp je push mov call pop test je push call cmpl pop jne cmp je push call pop mov pop ret xor ret push push call call mov mov test je cmpl je call mov test jne push call pop mov call ret push call pop andl lea mov call mov movl call jmp push call pop mov ret mov push mov push push call mov test push pop sete inc mov mov cmp je xor cmp je cmp je cmp je call push push push push push movl call add or jmp and jmp or mov jmp orl mov pop pop pop ret mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov ret push push call mov test je push call pop andl mov test je push call test jne mov cmp je push call pop movl call cmpl je push call pop movl pushl call pop mov test je cmpl jne cmp je push call pop movl call mov mov mov push call pop call ret mov push call pop ret mov push call pop ret mov push mov pop jmp push push call call mov push push call pop pop mov mov test jne call movl xor jmp call call mov mov mov mov push call pop andl pushl call pop movl call push call pop movl pushl call movl call mov call ret mov push call pop ret mov push call pop ret jmp xor ret mov push mov push push mov xor cmp jle push lea add pushl pushl pushl call add test je push push push push push call add dec jne pop pop pop pop ret mov push mov push push push mov push xor push push call mov mov add test jne xor jmp cmp jne lea cmp je push push lea push push call add test je push push push push push call add mov jmp push push mov call cmp jmp cmpl lea mov jne cmp jae cmp je push push push pushl jmp cmpl jne cmp jae cmp je push mov push push add jmp cmpl jne cmp jae test je cmp jne push mov push push sub push call add test je xor push push push push push call add cmp je test je incl lea push push call test pop pop jne or pop pop pop pop ret mov push mov push push mov push pushl pushl call add xor test je push push push push push call add lea cmp je push push push pushl pushl call add lea cmp pop pop je push push push pushl pushl call add pop ret mov push mov sub push xor inc push mov call pop mov test je push lea movb mov mov lea lea pushl mov push pushl push push push call mov add mov movl push push push call add test je xor push push push push push call add pushl mov pushl call pop pop test je andl incl mov addl shl lea lea pushl mov mov push pushl push push push call add cmpl jl cmpl jne mov mov test je push call test jne pushl call pop mov test je push call test jne pushl call pop mov andl andl mov mov mov jmp pushl call mov mov xor pop cmp je push call test jne pushl call pop mov cmp je push call test jne pushl call pop mov mov mov mov mov pop pop leave ret mov push mov sub mov xor mov mov push push mov push mov mov mov mov mov call add lea mov lea lea add mov mov test je cmpl je cmpl je cmpb jne cmpb jne push pushl pushl call add xor test je push push push push push call add cmp je xor mov mov mov mov cmp je mov mov jmp push call mov pop mov cmp jae push pushl call pop pop test je push pushl call pop pop test je andl lea push push call pop pop test jne lea push push push call add test je movzwl mov mov lea push push pushl call add cmpb je mov cmp jb mov mov inc push push push pushl call add test je xor push push push push push call add jmp xor cmp je push push pushl call add cmp je push pushl pushl call add pushl pushl pushl call add test je push push push push push call add mov jmp xor mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call pushl mov lea push lea push push lea push push add call add test jne xor jmp mov shl lea pushl lea push call pop pop test je lea push call add push mov call pop pop mov test je mov mov mov lea add imul mov mov mov lea push push mov lea push call mov lea push mov mov mov add add push push call add test je xor push push push push push call add mov mov add mov movzwl mov push lea push pushl call add cmpl jne mov andl mov mov mov mov mov mov cmp je mov incl mov mov mov mov mov mov add cmpl mov jl jmp mov test je lea mov mov mov mov mov mov mov cmpl jne push pushl lea pushl push push push push push call add test je xor mov and inc cmp jb push pushl lea push call add neg sbb inc mov jmp andl mov mov mov mov cmpl jne mov mov mov imul push call pop test je mov pushl mov call mov pop mov mov mov mov jmp cmpl je mov add shl lea pushl call test jne pushl call pushl call andl pop pop mov mov add shl movl mov mov mov pop xor pop call leave ret mov push mov sub mov xor mov mov push push xor mov push mov cmp je cmp je push call pop jmp shl mov jmp movl mov cmp je cmpb jne cmpb jne cmpb jne mov push push call mov pop pop test je sub mov je cmpb je movl mov jmp mov push push pushl call add test jne pushl call pop cmp je incl add cmp jle inc push push call mov xor pop pop cmp jne cmpb jne cmpl jg push push lea push push call add test je push push push push push call add pushl mov lea movb call pop test je incl add cmpb je inc cmpb jne xor cmp je mov jmp xor jmp push push push push lea push push call add cmp je lea test je pushl lea push call pop pop test je push lea call pop test jne and jmp incl inc add cmp jle xor cmp jne cmp je call mov pop pop xor pop call leave ret mov push mov cmpl push push ja cmpl je xor inc push push call mov pop pop test jne call movl xor pop pop pop ret push push call pop pop mov test jne push call pop jmp push push call pop pop mov test jne pushl call push call pop jmp mov mov call pushl mov mov call pop test jne pushl call pushl call push call add jmp pushl mov pushl call pop pop test je pushl call pushl call pushl call push call add xor jmp mov mov mov mov mov jmp mov push mov pop jmp push push call xor mov cmpl jbe call movl push push push push push call add xor jmp call mov mov call orl mov push push call pop pop mov mov cmp je push call pop movl mov mov call mov call pushl mov mov call pop mov cmp je cmp je push pushl call pop pop test je movl push call pop movl lea mov call push call pop testb jne testb jne mov mov call push mov add push push call add call andl call jmp mov mov xor push call pop ret mov push call pop ret jmp push call push call pop pop movl call mov call ret mov andl ret mov push push xor lea pushl call add pop mov cmp jb pop pop ret mov push mov push mov push call add cmp jbe or mov pop pop ret mov push mov mov mov mov pop ret mov push mov push push xor pushl call mov pop test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor push pushl pushl call mov add test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl call mov pop pop test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl pushl call mov add test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp call push pop add push push call pop pop mov call add push call pop mov lea push push pushl call add push call mov call add push push call add movl call mov call ret call add push push call pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov mov mov or xor cmp sete neg sbb and mov pop ret mov or xor cmp sete mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je mov add test je test jne add lea lea mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret mov push mov sub push push mov xor push mov cmp jne cmp jbe mov cmp je mov xor jmp mov cmp je orl cmp jbe call push pop push push push push push mov call add mov jmp pushl lea call mov cmp jne mov mov cmp jbe cmp je cmp jbe push push push call add call movl call mov cmp je mov andl pop pop pop leave ret cmp je cmp ja call push pop push push push push push mov call add cmp je mov andl jmp mov mov cmp je movl cmp je mov andl jmp lea push push push push push lea push push mov pushl call cmp je cmp jne mov cmp je mov jmp call cmp jne cmp je cmp jbe push push push call add jmp mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub pushl orl lea call lea push pushl mov pushl lea pushl push call add test jne mov jmp or cmpb je mov andl leave ret mov push mov push orl push pushl call push pushl lea push call add test jne mov leave ret or leave ret mov push mov sub pushl lea call movzbl mov mov movzwl and cmpb je mov andl leave ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov mov cmp sbb neg pop ret mov push mov pushl push pushl call add test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov pushl push pushl call add test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov test jne cmp jb cmpl je jmp push mov cmp jb neg and je sub mov add sub jne mov shl add mov shl add mov and shr je rep test je mov add sub jne mov pop ret mov ret mov push mov push mov push mov mov cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je xor jmp xor inc test jne test jne mov cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp jne mov mov xor test jne xor test jne mov xor cmp sete jmp cmp jne mov mov mov and neg sbb and neg neg sbb neg cmp jne xor inc jmp xor jmp xor cmp sete mov pop pop pop ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov mov addl mov mov mov pop ret mov push mov sub mov xor mov mov push mov push mov push pushl xor lea mov mov mov mov mov mov mov call orl mov cmp jne call push push push push push movl call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne cmp je mov mov mov cmpl jne cmp je xor mov orl orl orl mov mov mov mov mov mov mov test je mov jmp mov inc xor cmp mov jl mov sub cmp ja movsbl movzbl and jmp xor mov imul movzbl xor shr inc mov cmp jne cmpb je cmpl jne push lea push push call add test jle mov cmpb jne cmp jne push lea push push call add mov jmp mov mov cmp jne push lea push push call mov add dec lea mov mov cmp jne cmp jl cmpb jne cmp jge cmp jle mov mov mov mov jmp cmp je cmp ja jmp cmp jne cmp je cmp jne cmpl jne jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp or jmp orl jmp orl jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec lea mov cmp jne cmp jl cmpb jne cmpl jge cmp jle mov shl lea cmp je pushl push push jmp shl mov mov cmp mov jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec lea mov cmp je shl mov mov cmp mov jge orl jmp mov movb mov mov jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov lea push movzbl push mov call pop test mov pop je mov lea call mov mov incl test je mov lea call jmp orl jmp movsbl cmp jg je cmp jg je sub je push pop sub je sub je sub jne add mov mov orl cmp jne cmp jne cmpl ja mov shl lea cmp jne movl mov jmp testl jne orl jmp testl jne orl mov cmp jne mov cmp jne addl mov mov jmp sub je dec dec je sub je dec dec jne push pop testl je cmp jne addl mov movzwl jmp cmpl ja mov shl cmp jne lea cmp jne mov jmp pushl pushl push jmp mov movzwl push push lea push lea push call add test je mov jmp cmp jne addl mov movzwl jmp cmpl ja mov shl cmp je mov movzwl mov mov lea mov jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp je mov mov cmp je mov cmp je testl movswl mov je cltd sub sar mov jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb movl je orl jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp jne lea cmp je pushl pushl push jmp mov mov call test je testb je mov mov jmp mov mov mov jmp orl movl mov test je cmp jne mov mov mov add mov jmp pushl pushl push push call add test je jmp cmp lea mov mov mov jge movl jmp jne cmp jne mov cmp jne mov add mov jmp cmp jle mov mov cmp jle mov add push call mov pop mov cmp je mov mov jmp cmpl ja mov shl mov add mov mov mov mov lea push pushl movsbl pushl push pushl lea pushl push pushl call pop call mov add and je cmp jne lea push pushl pushl call pop call pop pop cmpb jne cmp jne lea push pushl pushl call pop call pop pop mov cmpb jne orl incl pushl jmp movl movl jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp cmpl ja mov shl cmp jne lea cmp jne movl jmp pushl pushl push jmp test je cmp je cmpl ja mov shl cmp jne lea cmp jne movl jmp pushl pushl push jmp mov mov mov jmp test je test je cmp jne addl mov movswl jmp cmpl ja mov shl cmp je mov movswl jmp cmp jne addl mov movzwl jmp cmpl ja mov shl cmp je mov movzwl jmp test je cmp jne addl mov mov jmp cmpl ja mov shl cmp je mov mov cltd jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp jne lea cmp jne mov jmp pushl pushl push push call add test je jmp mov mov xor testb je cmp jg jl cmp jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp mov cmp ja shl cmp je mov mov testl mov je cmp jne mov mov mov mov jmp movl mov mov mov jmp dec cmp je inc inc cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne cmpl je cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub test jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test jne xor cmp je cmpl jne cmpl jne cmp jne xor cmp jl mov lea mov dec je dec je dec je dec je dec je dec je dec dec jne mov add jmp mov add inc add cmp mov jle incl cmpl jge xor jmp cmpb je mov andl mov mov pop pop xor pop call leave ret nop inc inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc or je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov sub mov xor mov push mov push mov xor push mov pushl lea mov mov mov mov mov mov mov mov mov call test jne call movl xor push push push push push call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov mov test je inc xor cmp mov jl mov sub cmp ja movsbl movzbl and mov imul movzbl push shr pop mov cmp je push pop cmp ja jmp xor orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne or jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov mov test jge orl negl jmp mov imul movsbl lea mov jmp andl jmp cmp jne add mov mov mov test jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je andl andl lea push movzbl push call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmpl lea mov mov mov jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je test jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov test je mov test je testl movswl mov je cltd sub sar movl jmp andl jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb mov je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je add mov mov jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov push test je mov mov mov jmp movl pop add mov mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call pop call mov add and je cmpl jne lea push push pushl call pop call pop pop cmpb jne test jne lea push push pushl call pop call pop pop cmpb jne orl inc mov push jmp mov mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je test jg jl test jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmpw je inc inc test jne sub sar jmp test jne mov mov mov jmp dec cmpb je inc test jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test je mov mov jmp xor cmp je cmpl je call push push push push movl push jmp cmpb je mov andl mov mov pop pop xor pop call leave ret mov adcb jg inc add push inc add inc add inc add push inc add push call xor mov push call pop mov push pop mov cmp jge mov shl mov add cmp je mov testb je push call pop cmp je incl cmp jl mov mov add push call mov pushl call pop mov mov inc jmp movl call mov call ret push call pop ret mov push push xor mov cmpl jne lea mov push pushl add call pop pop test je inc cmp jl xor inc pop pop ret andl xor jmp mov push mov push mov push mov test je cmpl je push call push call andl pop add cmp jl mov pop mov test je cmpl jne push call add cmp jl pop pop ret mov push mov mov pushl call pop ret pushl push call push call pop ret push push call xor inc mov xor cmp jne call push call push call pop pop mov lea cmp je mov jmp push call pop mov cmp jne call movl xor jmp push call pop mov cmp jne push push call pop pop test jne push call pop call movl mov jmp mov jmp push call pop movl call mov call ret push call pop ret mov push mov mov push lea cmpl jne push call pop test jne push call pop pushl call pop pop ret mov push mov sub push xor testb push push mov mov mov movl mov je mov movb jmp movl mov lea push call pop test je push push push push push call add mov mov test jne test jne cmp je orb mov and sub mov mov je dec je dec je call mov orl call push pop push push push push push mov call add jmp mov jmp test je test jne movl jmp mov mov push pop sub je sub je sub je sub je sub jne cmp sete mov jmp movl jmp movl jmp movl jmp mov mov mov and mov cmp mov jg je cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp cmp je cmp je cmp jne movl mov movl test je mov not and test js movl test je orl orl orl test je or test je orl jmp movl jmp test je orl call mov cmp jne call mov orl call movl jmp mov mov push pushl movl pushl lea push pushl pushl pushl call mov cmp jne mov mov and cmp jne testb je andl push pushl lea pushl push pushl pushl pushl call mov cmp jne mov mov sar mov and shl lea andb call push call pop call mov jmp pushl call cmp jne mov mov sar mov and shl lea andb call mov push call pop pushl call cmp jne call movl jmp cmp jne orb jmp cmp jne orb pushl pushl call mov mov and sar mov pop shl pop mov or mov mov mov and sar mov shl lea andb mov andb mov jne test je testb je push or push pushl call add mov cmp jne call cmpl je pushl call jmp push lea push pushl mov call add test jne cmpb jne mov cltd push push pushl call add cmp je push push pushl call add cmp je testb je mov mov test jne mov and jne or jmp or mov and cmp je cmp je cmp je cmp je cmp je cmp je cmp jne movb jmp mov mov and cmp jne movb jmp mov testl je testb mov jne mov mov and cmp je cmp je cmp jne mov cmp jbe cmp jbe cmp jbe cmp jne movsbl xor dec je dec jne movl movl jmp push push push pushl call add or je push push push pushl call and add cmp je push lea push pushl call add cmp je cmp je cmp jne cmpl jne movb jmp mov cmp jbe cmp jbe cmp ja push push push pushl call add or je push push push pushl call add and cmp jne jmp mov and cmp jne pushl call pop call push pop mov mov jmp cmp jne push push pushl call add cmp je movb jmp push push pushl call add jmp movl movl mov sub push lea push pushl call add cmp je add cmp jg mov mov sar mov and shl lea mov xor and xor mov mov sar mov and shl lea mov mov shr shl and or mov cmp jne testb je mov mov and sar mov shl lea orb mov mov mov and cmp jne testb je pushl call push pushl lea push push pushl and push pushl call cmp jne call push call mov mov and sar mov shl lea andb pushl call pop jmp mov mov sar mov and shl mov mov pop pop pop leave ret push push call orl xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp mov pushl push pushl pushl lea push lea call add mov movl call mov cmp je call mov jmp xor cmp je cmp je mov sar mov and shl mov lea andb pushl call pop ret mov call ret push push call xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp orl xor cmp setne cmp je cmp je mov and neg sbb inc je mov pushl pushl pushl pushl lea push mov call add mov movl call mov cmp je orl call ret xor mov cmp je cmp je mov mov sar and shl mov lea andb pushl call pop ret mov push mov push orl push lea push pushl pushl pushl pushl call add test je or leave ret mov leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call xor cmp jne cmp je mov andl xor jmp mov cmp jne pushl pushl pushl call add cmp je mov andl jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov movzbw decl incl movzwl movzbl testb mov je cmp jne movzbl testb mov jne movzwl mov jmp mov mov cmp jne mov jmp shl movzbw or incl movzwl mov mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbw movzwl jmp movzwl mov mov movzbw movzwl movzbl inc testb mov je cmp jne mov jmp mov decl cmp je shl movzbw or movzwl inc mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbw movzwl jmp movzwl mov mov cmp jne cmp je cmp jne cmp je mov andl xor pop pop pop leave ret sbb and dec cmp je mov andl jmp mov push mov push pushl pushl pushl call add pop ret mov push mov sub push xor cmp jne xor jmp push pushl lea call mov cmp jne pushl pushl pushl call add cmp je mov andl jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov movzbw decl incl movzwl movzbl testb je cmp jne movzbl xor testb je cmp je mov andl xor pop pop pop leave ret mov mov cmp jne xor jmp shl movzbw or incl movzwl movzbw movzwl movzbl inc testb je cmp jne xor jmp mov decl cmp je movzbw shl or inc movzwl cmp jne cmp je cmp jne jmp sbb and dec cmp je mov andl jmp mov push mov push pushl pushl pushl call add pop ret mov push mov mov mov pop ret push push call andl pushl pushl call mov jmp mov mov mov mov xor cmp sete mov ret mov cmpl jne push call andl movl mov call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov mov xor cmp sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret mov push mov sub mov xor mov push xor cmp je cmpl jne call mov cmp jne mov jmp push lea push push lea push push call test jne cmpl jne call cmp jne mov push push push lea push push lea push push call push call mov cmp je push lea push push lea push push call test je mov mov xor pop call leave ret movl jmp push push call xor mov xor cmp setne cmp jne call mov call movl push push push push push call add or jmp pushl call mov push call pop pop mov mov decl test je mov movzwl addl push call pop mov cmp jne orl movl call mov call ret push call pop ret push push call push call pop andl pushl call pop movzwl mov movl call mov call ret push call pop ret mov push mov sub push push mov xor cmp je cmp je cmp jne mov cmp je xor mov xor pop pop leave ret pushl lea call mov cmp jne mov cmp je movzbw mov cmp je mov andl xor inc jmp lea push movzbl push call pop pop test je mov mov cmp jle cmp jl xor cmp setne push pushl push push push pushl call test mov jne mov cmp jb cmp je mov cmp je mov andl jmp call movl cmp je mov andl or jmp xor cmp setne push pushl mov push push push pushl call test jne jmp mov push mov push pushl pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp mov push mov mov push push test jl cmp jae mov sar mov and lea mov shl cmpl jne cmpl push mov jne sub je dec je dec jne push push jmp push push jmp push push call mov mov xor pop jmp call movl call andl or pop pop pop ret mov push mov mov push xor cmp push push jl cmp jae mov sar mov lea mov and shl add testb je cmpl je cmpl jne sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call mov or pop pop pop pop ret mov push mov mov cmp jne call andl call movl or pop ret push xor cmp jl cmp jae mov and sar mov shl add testb jne call mov call push push push push push movl call add or jmp mov pop pop ret push push call mov mov sar mov and shl add movl xor cmp jne push call pop mov cmp jne push lea push call pop pop test jne mov incl movl call cmp je mov sar and shl mov lea push call mov call ret xor mov push call pop ret mov push mov mov mov and sar mov shl lea push call pop ret push push call orl xor mov push call pop test jne or jmp push call pop mov mov cmp jge mov test je mov mov add cmp jae testb jne cmpl jne push call pop xor inc mov cmpl jne push lea push call pop pop test jne mov jmp incl andl call cmpl jne lea push call testb je push call add jmp mov mov push call pop ret cmpl jne movb orl sub sar mov shl add mov cmpl jne inc jmp push push call pop pop mov test je lea mov addl mov add cmp jae movb orl movb andl add mov jmp shl mov mov sar mov and shl mov movb push call pop test jne orl movl call mov call ret push call pop ret push push call xor mov xor testb je add testl je or testb je or pushl call cmp jne call push call pop or call ret cmp jne or jmp cmp jne or call mov mov cmp jne call movl call mov jmp mov pushl push call pop pop or mov sar lea mov and shl mov mov mov lea andb mov lea andb movl movl call cmp je mov jmp mov xor cmp jne mov sar mov and shl mov lea andb push call pop ret push push call mov cmp jne call movl or jmp xor cmp jl cmp jb call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl call pop push call test jne call mov jmp mov cmp je call mov mov call movl orl movl call mov call ret pushl call pop ret push mov sub mov mov mov mov mov shr jmp lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne mov mov mov pop ret push mov sub mov mov mov mov mov cltd mov mov xor sub and xor sub cltd mov xor sub and xor sub mov or jne mov mov and mov cmp je sub push push push call add mov mov test je mov mov add sub mov add sub mov mov mov mov rep mov jmp cmp jne neg add mov mov mov mov rep mov add mov add mov sub push push push call add mov jmp mov mov mov mov shr rep mov and rep mov mov mov mov mov pop ret push push call andl movapd movl jmp mov mov mov cmp je cmp je xor ret xor inc ret mov andl movl mov call ret mov push mov sub xor push mov mov mov push pushf pop mov xor push popf pushf pop sub je push popf xor cpuid mov mov mov mov mov cpuid mov mov pop testl je call test je xor inc jmp xor pop leave ret call mov xor ret cmpl jne xor ret mov sub neg sbb not and ret mov push mov mov lea push cmp jbe call xor push push push push push movl call add push pop jmp xor cmp jne call jmp mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp cmp je mov mov xor pop pop ret mov push mov push push pushl call mov test jne pop ret mov andl andl mov xor mov movl inc pop ret mov push mov mov mov imul add jmp mov sub cmp jb add cmp jb xor pop ret mov push mov sub mov mov push mov push mov sub add shr mov imul lea mov mov dec mov test jne push lea mov mov mov mov mov mov test jne sar dec cmp jbe push pop mov cmp jne mov cmp jae mov shr lea not and decb jne mov and jmp lea shr lea not and decb jne mov and mov mov mov mov add mov mov mov mov mov mov mov sar dec cmp jbe push pop mov and mov jne sub mov sar push mov dec pop cmp jbe mov add mov sar dec mov cmp jbe mov cmp je mov mov cmp jne mov cmp jae mov shr not and decb jne mov and jmp lea shr not and decb jne mov and mov mov mov mov mov mov mov mov mov jmp mov cmpl jne cmp je mov lea mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or mov mov shr lea or jmp cmpb jne lea mov shr mov or lea mov shr lea or mov mov mov mov decl jne mov test je mov mov push shl add mov push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne push push pushl call mov pushl push pushl call mov mov imul mov sub lea push lea push push call mov add decl cmp jbe subl mov mov mov mov mov pop pop pop leave ret mov push mov push xor cmp jne add imul push pushl push pushl call cmp jne xor jmp addl mov mov imul add push push pushl call mov cmp je push push push push call mov cmp jne pushl push pushl call jmp orl mov mov incl mov orl mov pop pop ret mov push mov push push mov mov push push mov push xor jmp add inc test jge mov imul lea push mov pop mov mov add dec jne push mov push shl add push push call test jne or jmp lea mov cmp ja mov sub shr lea inc orl orl lea mov lea movl mov movl add dec jne mov mov add lea mov mov lea mov mov andl xor inc mov mov mov inc test mov mov jne or mov mov shr not and mov pop pop pop leave ret mov push mov sub mov mov push push mov push mov mov sub add shr mov imul lea mov mov and dec cmp lea mov mov mov jle test jne add cmp jg mov sar dec mov cmp jbe push pop mov mov cmp jne mov cmp jae shr mov lea not and decb jne mov and jmp add shr mov lea not and decb jne mov and mov mov mov mov mov mov mov sub add cmpl jle mov mov sar dec lea cmp jbe push pop mov lea mov mov mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or lea mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov lea mov mov jmp mov lea mov mov jmp xor jmp jge mov sub lea mov lea mov sar dec mov mov cmp jbe push pop testb jne mov sar dec cmp jbe push pop mov cmp jne mov cmp jae mov shr lea not and decb jne mov and jmp lea shr lea not and decb jne mov and mov mov mov mov mov mov mov mov add mov sar dec cmp jbe push pop mov lea mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or lea mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov mov xor inc pop pop pop leave ret mov test je mov push shl add push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne cmpl jle pushl push pushl call mov mov imul mov sub lea push lea push push call add decl andl ret mov push mov mov sub push xor cmp jne or jmp cmp push mov push mov mov jle mov cmp je mov mov lea mov mov lea mov mov mov mov mov push xor cmp pop lea mov mov mov rep jl cmp je mov add cmpl lea jne cmpl jne mov mov test je dec cmp jg incl jmp mov sar dec cmp jle push pop lea incl cmp jl test jne cmp jg lea cmp jne mov cmp jb jne add inc cmp jl mov mov cmp jne xor andl lea mov mov mov cmp je mov cmp je mov cmp jb add cmp jae mov and add lea cmp je cmp je mov and add mov cmp jne cmp je mov sar dec cmp jle push pop cmp jne mov cmp jne incl mov mov cmp jne cmpl je cmp mov jge mov shr or or jmp lea shr or or mov cmp jne mov cmp jne cmp jne inc cmp mov jl mov mov xor mov cmp jne mov cmp jne addl addl shll incl add cmpl mov jl mov cmp jne mov cmp jne add incl mov cmp mov jl xor pop pop pop leave ret push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push pop jmp mov push mov push xor cmp jne xor jmp mov cmp jne mov cmp jbe call push push push push push movl call add jmp mov xor inc jmp push mov cmp je cmp jne cmp ja push call pop test jne call push push push push push movl call add jmp mov movl xor inc jmp call movl xor pop pop pop ret mov push mov sub mov mov imul add add and mov sar push dec cmp push push jge or shr orl jmp add or xor shr mov mov mov jmp mov mov and and or jne add mov cmp jb cmp jne mov jmp mov mov and and or jne add mov cmp jb cmp jne jmp cmpl jne add mov cmp jb cmp jne mov jmp cmpl jne add mov cmp jb cmp jne call mov mov test jne xor jmp push call pop mov mov mov cmpl je mov mov mov mov cmp je mov mov and and or jne andl mov lea mov and and or jne incl mov add jmp mov mov imul lea mov mov xor and jne mov and push pop jmp add inc test jge mov mov mov sub mov sar dec cmp mov jle push pop cmp je mov cmp jne cmp mov jge mov shr mov lea not mov and mov decb jne mov mov and jmp lea shr mov lea lea not and decb mov jne mov mov and jmp mov cmpl mov mov mov mov mov mov je mov lea mov mov mov mov mov mov mov cmp jne mov mov inc cmp mov jge cmpb jne mov mov shr or mov mov shr mov or jmp cmpb jne lea mov shr or mov lea lea mov shr or mov test je mov mov jmp mov mov add lea mov mov mov mov lea mov test jne cmp jne mov cmp jne andl mov mov lea pop pop pop leave ret mov push mov sub mov push mov push pop mov mov cmp jne call andl call movl or jmp push xor cmp jl cmp jb call mov call push push push push push movl call add or jmp mov sar push lea mov and shl add mov test jne call mov call movl jmp cmp ja mov cmp je test jne cmp je mov add sar mov movsbl dec push pop je dec jne mov not test je and mov mov mov jmp mov not test jne call mov call movl push push push push push call add jmp mov shr mov cmp jb mov pushl call pop mov cmp jne call movl call movl or jmp push push push pushl call mov mov mov add mov mov add testb je mov cmp je cmp je mov mov inc decl movl movb cmp je mov mov cmp je cmp je mov mov inc decl cmpb movl movb jne mov mov cmp je cmp je mov mov inc decl movl movb push lea push pushl push mov pushl call test je mov cmp jl cmp ja mov add lea testb je cmpb je cmp je mov cmpb jne orb jmp andb mov mov add mov mov cmp jae mov mov cmp je cmp je mov inc inc mov jmp mov dec cmp jae lea cmpb jne inc inc mov movb jmp mov jmp incl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpb je movb mov mov mov jmp cmp jne cmpb je push push push pushl call add cmpb je movb inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc mov sub cmpb mov jne test je dec mov test js inc jmp xor inc movzbl jmp cmp jg cmp jb dec movzbl inc cmpb je mov movzbl movsbl test jne call movl jmp inc cmp jne add jmp mov add testb je inc cmp mov jl mov mov mov inc cmp jne mov mov mov inc sub jmp neg cltd push push push pushl call add mov sub shr push pushl push pushl push push call mov test jne call push call pop orl mov cmp je push call pop mov cmp jne mov jmp mov mov xor cmp setne add mov mov jmp cmp je mov cmpw jne orb jmp andb mov mov add mov mov cmp jae mov movzwl cmp je cmp je mov inc inc inc inc mov jmp mov add cmp jae lea cmpw jne add mov push jmp mov jmp addl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpw je push pop mov mov mov mov mov mov mov mov movb jmp cmp jne cmpw je push push push pushl call add cmpw je push pop mov inc inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc inc sub mov jmp call push pop cmp jne call movl call mov jmp cmp jne mov jmp xor pop pop pop leave ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je mov cmp sbb inc jne call mov call movl jmp push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret mov push mov mov push xor push push cmp je mov cmp ja call push pop mov push push push push push call add mov jmp mov cmp jne mov jmp mov mov mov inc inc cmp je dec jne cmp jne mov call push pop mov mov jmp xor pop pop pop pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret push push call mov xor cmp jne push push push push lea push push call add mov cmp jne xor jmp push call pop mov jmp dec mov add cmpb jne mov cmp ja dec push call pop mov cmp jne push call pop mov test je add push call pop mov test je pushl push push call add xor cmp je push push push push push call add mov mov mov mov mov mov jmp push call pop pushl call pop movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret mov push mov cmpw jne movl pushl push push pushl pushl pushl call add pop ret push push call xor mov cmp jne push call pop mov cmp jne push push add push push call add mov mov cmp jne push lea push push call add xor jmp push call pop mov mov mov dec mov test jbe lea cmpb jne movb jmp push call pop mov cmp je lea push call pop mov test je pushl push push call add xor cmp je push push push push push call add mov mov mov mov mov mov mov jmp push call pop pushl call pop mov movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov pushl call push call pop pop mov jmp movl call call ret push call pop ret int3 int3 int3 int3 int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl add ret test je mov add cmp jne add or je test je mov add cmp jne or je cmp jne or je add jmp push push call xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp cmpl jne push call pop mov push call pop mov cmp je mov sub mov jmp mov movl call cmp jne push push pushl call mov mov call ret xor mov mov push call pop ret push push call call mov test je andl call jmp xor inc ret mov movl call call ret call mov test je call jmp push push call pushl call pop test je andl call jmp xor inc ret mov movl call int3 push call pop mov ret mov push mov mov mov mov mov mov pop ret push push call xor push call pop mov cmp jne mov pushl call mov movl jmp mov pushl call mov movl pop cmp je cmp je call mov movl call cmp jne xor jmp xor push call pop ret cmpl je pushl call pop xor inc call ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret pushl call pop ret call add ret call add ret push push call andl mov mov cmp je cmp je push pop cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne call mov test je mov cmp jne pushl call pop mov test je pushl push push call add pushl mov call pop test je mov mov cmp je jmp mov add mov imul add cmp jae cmp je jmp push call pop andl cmp je cmp jne cmpl jne push push call xor inc cmp jne mov jmp call mov call mov movl mov mov sub je sub je sub je sub je dec jne pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov pop movl call cmpl jne mov mov jmp mov push call pop ret cmp je cmp je cmp je cmp jle cmp jle call movl xor push push push push push call add or call ret push push call xor mov mov mov cmp jg je mov push pop sub je sub je sub je sub jne call mov mov test jne or jmp mov mov jmp pushl mov call mov add mov jmp mov sub je sub je dec je call movl xor push push push push push call add jmp mov mov jmp mov mov jmp mov mov movl push call mov pop xor cmpl je cmp jne push call cmp je push call pop xor mov cmp je cmp je cmp jne mov mov mov cmp jne mov mov movl cmp jne mov mov mov mov add cmp jge mov imul mov mov incl jmp call mov movl call cmp jne pushl push call pop jmp mov mov cmpl je push call pop ret push call pop cmp je cmp je cmp jne mov mov cmp jne mov mov xor call ret mov push mov mov mov pop ret mov push mov push push push pushl call mov mov xor pop cmp jne call push pop push push push push push mov call add mov jmp push mov cmp jne push call mov cmp jne call push pop push push push push push mov call add mov jmp push push call mov cmp jne call mov mov call push call push push push push push mov call add call push call pop jmp push call pop mov call push push mov call cmp je pushl call push pushl call test jne call movl call mov jmp xor pop pop pop leave ret mov push mov sub mov xor mov mov push push mov xor cmpl push mov mov jne push push lea mov push pushl mov pushl push call mov add cmp jne call cmp jne push push push pushl pushl pushl call add mov cmp je xor inc push push call mov pop pop cmp je push pushl mov push pushl pushl pushl call mov add cmp je push push call pop pop mov mov cmp jne cmp je push call pop or mov pop pop xor pop call leave ret lea push push push push call add test je push push push push push call add cmp je push call pop xor jmp cmp jne push push mov push pushl pushl push call add test je mov mov movzbl push call pop test je mov mov imul add sub inc inc cmp mov jl jmp mov push mov mov mov pop ret mov push mov sub push push push call andl cmpl mov jne push call mov test je mov push push call test je push call movl push mov call push call movl push mov call push call movl push mov call push call pop mov test je push push call push call pop mov mov cmp je cmp je push call pushl mov call pop pop mov test je test je call test je lea push push lea push push push call test je testb jne orl jmp mov cmp je push call pop test je call mov test je mov cmp je push call pop test je pushl call mov pushl call pop test je pushl pushl pushl pushl call jmp xor pop pop pop leave ret mov push mov mov push xor push push cmp je mov cmp ja call push pop mov push push push push push call add mov jmp mov cmp jne mov jmp mov cmp je inc dec jne cmp je mov mov inc inc cmp je dec jne cmp jne mov call push pop mov mov jmp xor pop pop pop pop ret mov push mov push push mov xor push cmp jne cmp jne cmp jne xor pop pop pop pop ret cmp je mov cmp ja call push pop mov push push push push push call add mov jmp cmp jne mov jmp mov cmp jne mov jmp cmpl mov jne mov mov inc inc cmp je dec jne jmp mov mov inc inc cmp je dec je decl jne cmp jne mov cmp jne cmpl jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov mov push xor cmp jl cmp jle cmp jne mov jmp mov mov jmp call push push push push push movl call add or pop pop ret mov push mov mov mov pop ret mov ret mov push mov sub pushl lea call movzbl mov mov test jne cmpl je mov mov movzwl and jmp xor test je xor inc cmpb je mov andl leave ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov sub pushl lea call mov test je cmpl jne push push pushl pushl call add cmpb je mov andl leave ret cmpb je mov andl xor leave ret mov push mov push pushl call pop pop pop ret mov push mov mov test je mov mov add pop ret mov push mov mov test je sub cmpl jne push call pop pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov push push xor push mov cmp jne push push xor inc push push push push call test je mov jmp call cmp jne movl cmp jle mov mov dec cmp je inc cmp jne or mov sub dec cmp jge inc mov mov cmp je cmp je cmp jne mov cmp jne mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp je jle push xor pop div cmp jb lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov jmp mov cmp je push pushl pushl pushl push pushl call test je mov push push push pushl pushl pushl call mov mov cmp je testl je cmp je cmp jg pushl pushl push pushl pushl pushl call jmp cmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push push pushl pushl pushl call test je push push cmp jne push push jmp pushl pushl pushl push push pushl call mov push call pop pushl call mov pop jmp mov mov cmp jne mov mov mov cmp jne mov mov mov pushl call pop mov cmp jne xor jmp cmp je push push lea push pushl push pushl call add mov cmp je mov push push pushl push pushl pushl call mov cmp jne xor jmp jle cmp ja add cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push push call add pushl push pushl pushl pushl pushl call mov cmp jne xor jmp pushl lea pushl push push pushl pushl call mov mov add neg sbb and push call pop jmp pushl pushl pushl pushl pushl pushl call mov cmp je pushl call pop mov cmp je cmp je push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl call add cmpb je mov andl leave ret mov push mov push push mov xor mov mov push push xor push mov cmp jne lea push xor inc push push push call test je mov jmp call cmp jne push pop mov jmp mov cmp je cmp je cmp jne mov cmp jne mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp je jle cmp ja lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov test je lea push push push call add push push pushl pushl push pushl call test je pushl push push pushl call mov push call mov pop jmp xor cmp jne mov mov mov cmp jne mov mov mov pushl call pop cmp jne xor jmp cmp je push push lea push pushl push pushl call mov add cmp je mov pushl pushl pushl pushl pushl call mov cmp je push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl call add cmpb je mov andl leave ret mov ret call mov mov cmp je mov test jne call mov ret mov push mov sub movzwl movzwl mov mov test jne or leave ret andl push push mov lea push push push xor inc lea push push call mov lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call push push pushl or lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl push lea push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push mov push lea push push call add or mov pop mov pop leave ret mov push mov push mov test je pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push push mov cmpl mov je push push call mov pop pop test jne xor inc jmp mov call test je push call push call pop pop jmp movl jmp mov add mov cmp je add push call mov xor pop pop pop pop ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov lea mov mov mov cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push mov push xor push mov mov cmp jne cmp jne mov mov movl jmp push push call mov pop pop mov cmp jne xor inc jmp mov push pop push rep call xor pop mov cmp jne pushl call pop jmp mov cmp je push call pop mov cmp jne xor inc pushl call pushl call pop pop mov jmp mov mov movzwl push push push lea push push call mov lea push push push lea push push call or lea push push push mov lea push push call add or je push call pop or jmp mov mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov lea mov mov mov cmpb jne jmp mov mov mov mov mov mov mov mov mov xor inc mov mov test je mov mov mov test je push call mov test je push call test jne pushl call pushl call pop pop mov mov mov mov mov mov xor pop pop pop leave ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov lea mov mov mov cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp push call pop mov cmp jne push call pop jmp mov cmp je push call pop mov cmp jne push call pushl call pop jmp mov movzwl lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or je push call push call pushl call pushl call add jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov lea mov mov mov cmpb jne jmp push pop mov mov rep mov mov add mov mov mov mov mov mov mov mov mov mov xor inc xor mov cmp je mov mov mov cmp je push call mov cmp je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret mov push mov sub mov xor mov push xor push mov push mov mov mov mov mov mov mov cmp je lea cmp jne push movzwl push push lea push push call add test jne push call push mov push mov call push push mov call push push mov call push push mov call add mov cmp je cmp je cmp je cmp je cmp je mov mov xor mov mov inc cmp jl lea push pushl call test je cmpl ja movzwl cmp mov jle cmp je lea mov cmp je movzbl movzbl jmp mov movb movzbl inc cmp jle inc inc cmp jne mov push push pushl add push push pushl mov push push call add test je mov mov push pushl mov push add push push inc push push pushl push call add test je mov push pushl add push push mov push inc push push pushl push call add test je mov mov lea xor cmpl mov mov mov lea mov mov mov mov lea mov mov jle cmp je lea mov mov cmp je movzbl movzbl cmp mov jg lea jmp mov incl mov mov inc inc mov mov movzbl cmp jle mov inc inc mov cmp jne push lea push push call push lea push push call mov push lea push push call mov add cmp je push call test jne mov sub push call mov mov sub push call mov sub push call pushl call add mov movl mov mov mov mov mov mov mov mov mov mov mov pushl call pop mov jmp pushl call pushl call pushl call pushl call xor add inc jmp lea mov cmp je push call mov mov movl movl movl movl xor mov pop pop xor pop call leave ret call mov mov cmp je mov test jne call mov ret mov push mov mov test jne pop jmp mov mov pop ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call add ret xor ret mov push mov sub push push push pushl lea xor call mov mov mov mov shl pushl call pushl mov call add incl cmpl pop pop mov lea jb lea push call mov pop mov test je andl mov movb pushl mov inc sub lea push push call add test je xor push push push push push call add push call add mov movb pushl mov inc sub lea push push call add test je xor push push push push push call add push call add incl cmpl pop jb movb cmpb pop pop pop je mov andl mov leave ret push call pop ret mov push mov sub push push push pushl lea xor call mov mov lea mov movl pushl call pushl mov call mov pop pop mov add add decl lea mov jne lea push call mov pop mov test je add movl mov movb pushl inc sub lea push push call add test je xor push push push push push call add push call add mov movb pushl inc sub lea push push call add test je xor push push push push push call add push call add add decl pop jne movb cmpb pop pop pop je mov andl mov leave ret push call pop ret mov push mov sub push push push pushl lea xor call mov mov mov mov shl pushl call pushl mov call add incl cmpl pop pop mov lea jb lea mov movl mov pushl call pushl mov call addl pop pop mov add decl lea jne pushl call pushl mov call pushl add lea call pushl lea call pushl lea call lea push mov call mov add test je push push push lea call andl lea mov add sub mov mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call mov lea mov mov pushl mov sub add push push call add test je xor push push push push push call add push call incl addl cmpl pop lea jb lea mov lea mov movl jmp mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call lea mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call addl addl decl pop lea jne mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add cmpb je mov andl pop pop mov pop leave ret push call pop ret cmpl push mov je push mov test je mov mov incl inc decl cmpl jne pop pop ret cmpl mov push jbe push cltd pop idiv add mov inc decl mov test jle cmp ja mov mov dec mov mov mov dec mov inc cmp jb pop ret mov push mov push push push mov xor mov cmp je cmpl mov jbe push cltd pop idiv add mov inc decl mov test jle cmp ja mov mov dec mov mov mov dec mov inc cmp jb jmp cmp jae dec lea test je push cltd pop idiv mov add incl mov dec cmp jne mov add sub jmp mov pop pop leave ret mov push mov push push movsbl cmp push push mov mov jg je cmp jg je sub je sub je sub je sub je dec je sub jne mov xor cmp jl cmp jg jmp mov xor cmp jl cmp jg mov mov jmp mov xor cmp jl cmp jg mov mov jmp mov movb mov incl decl jmp mov xor cmp jl cmp jg cltd push pop idiv mov cmp jne push pop jmp sub je push pop sub je dec dec je dec dec je dec jne pushl pushl jmp mov xor cmp jl cmp jg cmp je lea jmp mov xor cmp jl cmp jg mov mov cmp jl cmp jg cmp jge xor jmp push cltd pop idiv cmp jl inc jmp mov xor cmp jl cmp jmp mov jmp mov cmp jl cmp jle call xor jmp cltd push pop idiv pushl push add imul add jmp cmp jg je sub je sub je dec je dec je dec je sub jne mov xor cmp jl cmp jg pushl lea push jmp mov cmp jl cmp jg mov pushl push pop mov mov call pop jmp pushl xor pushl push push cmp je push pushl call add test je mov cmp je mov pushl movb mov incl decl push push push push pushl call add test jne jmp push jmp mov xor cmp jl cmp jg mov mov jmp mov xor cmp jl cmp jle call push push push push push movl call add xor jmp mov mov jmp mov xor cmp jl cmp jg lea jmp sub je sub je dec je dec je dec jne call call mov xor cmp mov setne mov mov mov jmp mov xor cmp jl pushl cltd push pop idiv mov jmp pushl xor pushl push push cmp je push jmp push jmp mov xor cmp jl cmp jg pushl xor inc jmp mov xor cmp jl cmp jg cmp mov jg mov jmp mov mov call xor inc pop pop pop leave ret mov push mov sub mov xor mov mov push push mov xor sub push je dec je mov jmp mov jmp mov cmpl mov je cmpl mov jne mov mov add push mov mov inc mov mov mov mov mov mov mov mov push xor push mov lea push push pushl mov mov call mov cmp je add cmp jg call mov cmp je movl jmp push call pop cmp je movl add mov cmp je pushl mov push push lea push push pushl call dec test jle mov mov cmpl jbe mov mov mov mov incl mov inc decl dec test jg pushl call pop xor inc lea pop pop pop mov xor call leave ret mov test je mov mov cmpl je xor mov mov inc inc cmp je mov movsbl cmp jg je cmp je cmp je cmp je cmp je cmp je pushl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp mov dec je dec je dec je dec jne mov jmp mov jmp movl mov jmp mov dec je dec je jmp movl mov jmp push push call pop pop test jne add jmp push push call pop pop test jne add mov mov jmp add test je mov test je cmpl je cmp je pushl movsbl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp inc jmp mov dec je dec je dec je dec jne mov jmp mov jmp movl mov jmp mov sub je sub je sub je dec je sub jne mov dec dec je dec dec jne mov jmp mov jmp mov cmpl mov jg mov jmp mov cmp jne cmpl jbe movsbl pushl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl decl jmp cmpl jbe pushl movsbl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp mov dec je dec je jmp movl mov jmp mov dec je dec je jmp movl mov jmp mov dec je dec je jmp movl mov pushl mov pushl mov push pushl call add test je mov jmp xor jmp mov push mov sub mov push pushl xor lea mov mov call mov cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov mov cmp je mov cmp jne mov mov mov mov cmp jbe mov cmp je cmp je lea movsbl push push call pop pop test je xor inc cmp jbe lea cmp je mov mov mov incl decl mov mov mov mov incl inc decl jmp mov cmp je inc xor cmpb jne inc inc push pushl lea push lea push mov lea call add test je inc cmp ja cmp jbe mov mov sub mov cmp je mov andl jmp mov mov mov cmp jne cmp ja call movl jmp cmp jbe movl jmp call push push push push push movl call add cmp je mov andl xor pop pop pop leave ret mov push mov pushl push pushl pushl pushl pushl call add pop ret mov push mov push push pushl pushl pushl pushl call add pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret call mov cmp je mov test jne call mov ret int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret mov push mov xor push xor inc cmp jl push push test je mov add cltd sub mov mov sar lea pushl mov pushl call pop pop test jne mov add mov jmp jge dec mov jmp lea cmp jle pop pop xor test sete pop mov pop ret orl call mov mov ret mov push mov sub mov xor mov push mov test je cmpb je push push call pop pop test je push push call pop pop test jne push lea push push pushl call test je lea push call pop mov xor pop call leave ret push lea push push pushl call test jne xor jmp lea push push call pop pop test jne call jmp mov push mov xor mov cmp je inc inc cmp jb xor inc pop ret xor pop ret mov push xor jmp mov sub inc cmp ja add jmp mov sub cmp ja add movsbl shl lea mov test jne mov pop ret xor mov inc cmp jl cmp jle sub cmp ja inc jmp ret mov push mov sub mov xor mov push push mov call mov mov add call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop xor pop call leave ret mov push mov sub mov xor mov push push lea push mov and push or push mov call test jne xor jmp lea call cmp je cmpl je mov push mov call push mov call pop cmp pop je xor inc mov xor pop call leave ret mov push mov sub mov xor mov push push push mov call mov mov add call mov mov push lea push mov neg sbb and add push push call test jne andl xor inc jmp lea push pushl call pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne mov test je push lea push pushl call add test jne pushl orl mov call pop cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je push lea push mov neg sbb and add push push call test je lea push pushl call pop xor pop test jne orl mov cmp je or mov jmp cmp je pushl call pop cmp jne push jmp cmp jne cmp je lea push pushl call pop pop test jne push push mov call pop pop test je orl cmp jne mov mov shr not and mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call mov mov add call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push mov call pop pop test je orl mov mov mov shr not and mov pop xor pop call leave ret pushl call sub neg pop sbb push inc push mov call testb jne andl ret pushl call pushl sub neg sbb inc mov call sub neg sbb andl inc cmpl pop pop mov je push pop jmp mov call push push mov call mov test je test je test jne andl ret pushl call sub neg sbb inc pop mov je push pop jmp mov call push push mov call testb jne andl ret mov push mov push push push call mov mov add test jne orl jmp lea lea mov mov test je cmpb je push push push call add mov andl test je cmpb je mov test je cmpb je call jmp call cmpl jne push push push call add test je mov test je cmpb je call jmp call jmp mov test je cmpb je push call sub neg pop sbb push inc push mov call testb jne andl jmp movl call mov mov cmpl je mov sub neg sbb and mov call mov mov test je cmp je cmp je movzwl push call test je push pushl call test je mov test je mov mov mov mov mov mov test je mov mov cmp jne push push push call add test je xor push push push push push call add jmp push push push pushl call test je push lea push push pushl call test je push push sub push pushl call add xor inc jmp xor pop pop pop pop ret test je xor test setg lea mov ret movzbl movzbl sub je xor test setg lea mov ret mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov ret xor ret mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov ret xor ret mov push push mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne xor pop pop ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne movzbl movzbl sub je xor test setg lea mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp lea jb inc add out add ljmp stos loope add jmp inc add loope add in add call inc add inc add inc add add loopne add jecxz add out add fildl jle inc add inc add inc add inc add fiadd loop inc add out add fiadd push loop add out add push push mov mov sub je dec je dec je dec je dec je mov mov push push pop jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test je mov jmp movzbl movzbl sub je xor test setg lea mov jmp xor test jne xor pop jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea mov jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea test je mov jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl jmp mov mov movzbl movzbl jmp xor pop pop pop ret imul inc add inc add repnz add testb cli inc add incb pop repnz add inc add inc add inc add icebp inc add stc inc add std inc add icebp inc add cmc inc add stc inc add inc add hlt inc add cld inc add lock add hlt inc add inc add out inc add inc add inc add call in push andl push mov test jne xor jmp push cmp jb lea test jbe mov mov mov add add test je cmp jne mov test je cmp jne mov test je cmp jne mov test je cmp jne addl cmp jb jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp mov mov jmp mov test je cmp jne inc inc incl cmp jb xor pop pop leave ret movzbl movzbl sub jmp int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret push call pop ret push push call mov xor cmp jbe push pop xor div cmp sbb inc jne call movl push push push push push call add xor jmp imul mov mov cmp jne xor inc xor mov cmp ja cmpl jne add and mov mov cmp ja push call pop mov pushl call pop mov movl call mov cmp je pushl push push call add cmp jne push push pushl call mov cmp jne cmp je push call pop test jne mov cmp je movl jmp xor mov push call pop ret cmp jne mov cmp je movl mov call ret push push call mov test jne pushl call pop jmp mov test jne push call pop jmp cmpl jne xor mov cmp ja push call pop mov push call pop mov cmp je cmp ja push push push call add test je mov jmp push call pop mov cmp je mov dec cmp jb mov push push pushl call push call mov push push call add cmp jne cmp jne xor inc mov add and mov push push pushl call mov cmp je mov dec cmp jb mov push push pushl call push pushl call add movl call cmpl jne test jne inc add and mov push push push pushl call mov jmp mov mov push call pop ret mov test jne cmp je push call pop test jne call cmp jne mov call push call pop mov jmp test jne call cmp je movl jmp test jne inc push push push pushl call mov test jne cmp je push call pop test je cmp jbe push call pop call movl xor call ret call jmp test jne call mov call push call mov pop mov jmp mov push mov mov push xor cmp jbe push xor pop div cmp jae call push push push push push movl call add xor jmp imul push push mov cmp je pushl call pop mov push pushl call mov pop pop test je cmp jae sub push push add push call add mov pop pop pop pop ret mov push mov push mov push call push call pop pop test je call add cmp jne xor jmp call add cmp jne xor inc incl testl jne push push lea cmpl mov jne push call pop mov test jne lea push mov mov pop mov mov jmp mov mov mov mov mov orl xor pop inc pop jmp xor pop pop ret mov push mov cmpl je push mov testl je push call andl andl andl andl pop pop pop ret push push call call mov add mov xor xor cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov push call mov pushl pushl pushl push call mov push push call add movl call mov call ret mov push call pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov mov sub cmp jne andl jmp mov cmp jae movzwl mov mov and movzwl mov jmp pushl lea call mov pushl pushl lea push push lea push lea push push call add test jne and cmpb je mov andl movzwl movzwl and leave ret mov push mov push mov cmp jne xor leave ret mov cmp jae movzwl mov movzwl movzwl and leave ret cmpl jne pushl lea pushl push push lea push push push call add push pushl pushl call add leave ret mov push mov pop jmp push mov sub mov mov mov shr pxor jmp lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea dec jne mov mov pop ret push mov sub mov mov cltd mov xor sub and xor sub test jne mov mov and mov cmp je sub push push call add mov mov test je add sub mov xor mov mov rep mov jmp neg add mov xor mov mov rep mov mov mov add sub push push push call add mov mov mov pop ret mov push mov sub push push pushl lea call mov mov xor cmp je mov cmp jne call push push push push push movl call add cmpb je mov andl xor jmp cmp je cmpl jl cmpl jg mov push mov mov lea cmpl jle lea push movzbl push push call mov add jmp mov movzbl movzwl and test je mov inc jmp cmp jne orl jmp cmp jne mov inc mov test jl cmp je cmp jg test jne cmp je movl jmp mov cmp je cmp je movl jmp movl jmp cmp jne cmp jne mov cmp je cmp jne inc mov inc mov mov xor divl movzbl movzwl test je movsbl sub jmp test je mov sub cmp movsbl ja sub add cmp jae orl cmp jb jne cmp jbe orl cmpl jne mov dec test jne cmpl je mov andl jmp mov imul add mov mov inc jmp mov test jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp testb push pop setne add mov mov test je mov testb je negl cmpb je mov andl mov jmp mov test je mov cmpb je mov andl xor pop pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub push push push xor push push push pushl mov mov call mov and add mov cmp je push push push pushl call mov and add cmp je mov mov sub sbb js jg cmp jbe mov push push call push call mov test jne call movl call mov pop pop pop leave ret push pushl call pop pop mov test jl jg cmp jb mov jmp mov push pushl pushl call add cmp je cltd sub sbb js jg test ja mov pushl pushl call pop pop pushl push call push call xor jmp call cmpl jne call movl or mov jmp cmp jg jl cmp jae push pushl pushl pushl call and add cmp je pushl call pop push call neg sbb neg dec cltd mov and mov cmp jne call movl call mov call mov mov and cmp je push pushl pushl pushl call and add cmp je xor jmp push push call mov cmp jne call andl push pop jmp xor cmp jl cmp jb call mov call push pop mov push push push push push call add mov jmp mov sar lea mov and shl mov movsbl and je cmp jg jl cmp jae call mov call push pop mov mov jmp push call pop mov mov testb je pushl pushl pushl call add mov jmp call push pop mov mov movl call mov call ret pushl call pop ret mov push mov mov cltd push push pushl call add neg sbb pop ret mov push mov push mov push mov mov sar lea mov and shl lea mov add push movzbl movsbl and sar cmp je cmp je cmp je cmp je cmp jne orb mov lea mov and or mov jmp orb mov lea mov and or jmp andb jmp orb mov lea andb test pop pop pop jne mov pop ret neg sbb and add pop ret mov push mov mov cmp je cmp je cmp je call movl xor push push push push push call add push pop pop ret push push call xor pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret push push call mov cmp je cmp je cmp je cmp je cmp je call movl xor push push push push push call add or jmp mov cmp jne call movl jmp xor cmp jl cmp jb call movl jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl call pop pop mov jmp call movl orl movl call mov call ret pushl call pop ret mov push mov sub push xor push push cmp je pushl lea call cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov cmp je mov cmp jbe call push push push push push movl call add cmp je mov andl mov jmp mov cmp jne pushl push pushl call add cmp je mov andl jmp mov movzbl lea push push call incl mov movzbl lea push push call add inc decl je cmp je cmp je sub mov jmp xor pop pop pop leave ret mov push mov push xor cmp jne cmp jne call push push push push push movl call add mov jmp cmp je cmpl ja pop pop jmp push pushl pushl pushl call add pop pop ret xor push push push push push push push call mov ret xor push push push push push push push call mov ret mov push mov cmp je cmp je push call mov cmp je cmp je push call pop ret mov push mov mov mov inc inc test jne sub sar dec pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne pop pop pop jmp test jne shr and cmp jb rep jmp nop mov mov sub jb and add jmp jmp nop jmp nop cmp add add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea or inc add adc add adc add adc add adc add adc add adc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov and inc add inc add add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop les inc add push inc add mov sub shr sub cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea fs inc add add add add inc add inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov rclb add push inc add push inc add push inc add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret mov andl ret mov push mov mov mov mov mov xor mov mov mov pop ret mov push mov cmpl je jmp mov mov pushl mov call pop mov mov test jne pop ret mov mov test jne xor ret cmp jl cmp jg movsbl sub inc mov ret xor jmp test je cmp jl cmp jg movsbl shl inc lea mov mov cmp jne mov inc mov cmp je or ret mov push push mov push xor cmpb jne inc mov mov mov cmp jl cmp jle cmp jne xor inc mov movsbl cmp jg je test je cmp jne lea cmpb jne mov inc mov movsbl cmp jg je sub je sub je dec dec jmp cmp jl cmp jle cmp jle cmp jne inc mov jmp movsbl sub mov inc or mov test je or jmp and cmp jge mov mov test je and or jmp and mov and je cmp je cmp je mov jmp test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or and sub je dec dec je dec dec je dec dec jne and or jmp and or jmp test je and or jmp and jmp cmp jle cmp jle cmp jne and or jmp mov jmp inc mov mov cmp jl cmp jg movsbl lea mov call or jmp mov jmp mov dec jmp or jmp sub je dec je dec je sub jne inc mov mov cmp mov jl cmp jg movsbl mov or sub mov test je and or jmp and test je and or jmp and or test je or jmp and and sub je dec dec je dec dec jne test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or jmp xor test sete add mov jmp and or jmp and or jmp or inc mov jmp mov cmp jl cmp jg movsbl inc add and mov cmp ja jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and jmp and jmp and or jmp and or jmp and or jmp and or jmp and or jmp and or jmp cmp jne inc mov mov jmp xor test setne add mov mov pop pop pop ret nop push sbb xchg sbb aam inc add sbb add sbb add sbb add sbb add inc add not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov and xor cmp setne mov ret mov shr not and ret mov shr not and ret mov shr not and ret mov and ret mov and ret mov and ret mov shr not and ret mov and ret mov shr not and ret mov push mov mov not test mov mov jne inc inc pop ret mov push mov push push mov add and cmpl mov je push call pop jmp test ja push pop mov push cmp jae mov cmp ja push push mov call test je andl jmp xor test je mov test je mov jmp mov sub mov mov jmp xor jmp sub mov mov mov lea pop pop pop pop ret mov andl movb andl ret mov push mov mov mov mov mov mov mov pop ret xor cmpb setle ret xor cmp sete ret movsbl ret mov orl ret mov shr and ret xor cmp je testl je inc ret cmpl je orl ret xor cmp je testl je inc ret orl ret mov shr and ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov test jne xor ret mov jmp mov test jne xor ret mov jmp mov push mov mov test jne mov pop ret mov pop jmp mov push mov mov cmpb je mov mov cmp jle mov pop ret mov push mov mov mov mov mov mov mov pop ret xor cmpl sete ret mov orl ret mov movl ret mov push mov mov mov movl mov pop ret xor inc ret mov ret mov push mov mov cmp jae mov mov inc pop ret mov push mov mov mov movl test je mov cmp je cmp jne xor mov pop ret mov test je mov test je mov mov jmp xor ret mov test je mov test je mov mov jmp xor ret mov push mov mov test je pop jmp mov pop ret mov push mov mov mov mov dec neg sbb and add movl mov pop ret mov ret cmpl setne dec and ret mov push mov xor inc test jne or mov xor mov mov mov mov mov movl mov movl mov mov movl mov mov cmp ja imul add pop ret mov pop ret mov push mov mov mov orl mov mov movl mov pop ret mov push mov cmpl jge mov mov push push mov call mov mov mov call add pop mov pop mov pop ret mov push mov mov mov call test jne mov mov pop jmp pop ret mov push mov push pushl mov mov pushl mov call cmp jae pushl mov mov push call pop pop ret xor cmp je inc inc cmpb jne ret mov push mov test jbe sub mov mov inc dec jne pop ret mov push mov cmpl jne xor pop ret mov test je cmp jne inc inc decl jne movzbl movzbl sub pop ret mov push mov mov mov orl lea orl mov mov mov test je push mov mov mov pop jmp andl andl mov mov mov mov mov mov movb pop ret mov push mov sub xor mov and and push lea push push lea push pushl mov mov call mov add leave ret mov push mov sub mov and and push xor lea push push lea push pushl mov mov call mov add leave ret mov push mov pushl mov pushl call pop ret mov push mov mov push mov push mov sub cmp jle mov test jbe mov mov sub mov push mov mov inc dec jne pop lea pop pop pop ret mov push mov cmpl push mov je push push mov call test je pushl mov call jmp xor test mov setne dec and mov jmp andl movb andl mov pop pop ret mov push mov push mov mov andl cmp je cmp je xor jmp mov andl mov cmp jne push call pop mov test jne movb mov pop pop ret mov push mov push mov mov push mov push test je test jne mov call lea push push mov call mov test je jmp mov mov lea push push call movb jmp test je movb pop mov pop leave ret mov push mov cmpl push mov je push push mov call test je pushl mov pushl call jmp xor mov test jne movb pop pop ret mov push mov push mov andl movb andl cmpl je push push mov call test je pushl mov call jmp xor mov test jne movb mov pop pop ret mov push mov mov push mov andl mov cmp jne push call pop mov test jne movb jmp andl mov pop pop ret mov push mov push mov cmpl je push mov cmpl je push push mov call test je mov mov mov mov jmp xor test je incl mov mov pop mov pop pop ret mov push mov mov cmp ja mov cmp je cmp jg mov mov mov mov mov mov jmp push jmp push mov call mov pop ret mov push mov push push mov mov movl test je cmpl je push push mov call mov mov test je test jbe mov sub mov mov inc dec jne jmp andl andl pop mov pop pop ret mov ret mov test je mov mov ret xor ret mov push mov pushl pushl pushl pushl call add pop ret mov push mov cmpl jne push push pushl pushl call add jmp mov pop ret mov push mov mov cmpb pushl jne mov incl call jmp pushl call pop pop mov pop ret mov push mov pushl call mov pop pop ret mov push mov push mov cmpb jg cmpl mov je cmp je cmp je test je push call pop push mov call jmp push call mov pop pop ret mov push mov push mov cmpl je push call jmp push mov test je mov test je sub je dec push mov je push call test je pushl mov push call jmp push call test je mov movl mov jmp xor mov test jne movb jmp movb pop pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov cmp je xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push mov xor push mov mov andl mov mov cmp je cmp je mov mov mov cmp je cmp je cmp je cmp je cmp je cmp je cmp jl cmp jle cmp jl cmp jle cmp jl cmp jle cmp jb cmp jbe testl je inc inc mov mov cmpb jne push pushl mov call mov mov test je inc mov cmp je andl movb jmp cmpb jne movb jmp movb mov pop pop pop ret mov push mov sub mov xor mov push xor push mov push mov andl lea mov mov push push pushl dec pushl call add mov or mov mov mov jne lea sub push push mov call mov pop mov pop xor pop call leave ret mov push mov sub mov xor mov mov push mov xor mov andl cmp push lea mov mov mov jg jl cmp jae mov neg adc movb neg mov push jmp xor push push push pushl dec call add mov mov mov mov or mov jne pop cmp je dec movb lea sub push push mov call mov pop mov xor pop call leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg mov mov test jne movsbl push mov call jmp cmpl jne push mov call jmp push mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp mov test je cmp je movsbl push call jmp push push mov call test je push mov call jmp xor push mov call pop mov pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push push mov mov test je movsbl sub incl cmp ja mov andl andl shr not test je and sub je push pop sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push jmp push call add push lea call mov mov mov mov mov leave ret push jmp push mov call mov leave ret mov push mov mov mov mov test je cmp je push jmp incl push call jmp push call mov pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp push push mov call test je movl mov jmp xor push mov call pop mov pop pop ret mov push mov push mov cmpb jg push push mov xor cmp je cmp je cmp jne push call jmp push push mov call cmp je xor cmp je inc cmp jne push push mov call jmp xor push mov call pop pop mov pop pop ret mov push mov sub push xor push mov mov andl movl mov cmp jne push mov mov cmp je cmp je cmp je mov jmp push mov call mov mov cmp je movsbl sub cmp ja mov push lea inc push mov call push mov call jmp andl lea push lea push mov call mov sub cmp pop pop jle mov cmpl je lea push call lea push mov call cmp jne push mov call cmp je jmp push mov call pop mov pop pop leave ret mov push mov push push mov mov push mov mov mov push mov mov call lea push call pop push mov call push mov call mov cmpb jne incl mov pop leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov sub push mov xor cmpb mov jne inc movl mov mov cmp jne mov push call mov jmp cmp jl cmp jg movsbl sub cltd inc push mov push cmp je lea call push pushl lea push call add jmp lea call mov mov mov mov mov mov jmp push push xor jmp test je cmp jl cmp jg movsbl sub push cltd push mov push mov push mov call add mov adc inc mov mov mov mov cmp jne mov inc mov cmp je push mov call mov jmp push jmp xor push push cmp je cmp je lea call jmp lea call jmp cmp je lea call push pushl lea push call add jmp lea call mov mov mov mov mov mov pop pop pop leave ret mov push mov sub mov mov andl andl test je movsbl add cmp ja jmp push jmp push jmp push jmp push lea call mov movsbl incl sub je dec dec je dec dec je dec dec jne lea push lea push push call mov mov add jmp mov mov mov mov mov leave ret push jmp push mov call mov leave ret cmpsb das inc add das inc add das inc add inc add call in mov movsbl sub sub je dec dec je lea push call pop mov test jne mov mov test je cmp je cmp je mov push call jmp mov incl shr not test mov jne mov push lea push lea call mov mov mov mov mov mov leave ret incl mov mov mov mov leave ret mov incl shr not test mov jne mov push jmp incl push mov call mov leave ret mov push mov mov mov sub test je cmp jne incl mov mov xor and mov mov leave ret push pushl lea push call push lea push push call add jmp push pushl lea push push push lea call mov call mov call mov leave ret mov push mov sub andl push push mov xor inc mov mov movsbl mov sub mov je dec je dec je cmp je mov cmp je cmp jne add shl movsbl inc push lea inc mov cmp jbe push lea call push push lea call push lea push lea call mov mov mov mov push lea push lea call mov mov mov mov cmpb mov pop jne incl jmp push lea push lea call mov mov mov mov mov cmp je incl jmp push lea call mov mov mov or mov mov jmp push jmp mov movb jmp cmp je push mov call mov jmp mov push lea movb call jmp cmp jne mov cmpb setne dec and add mov mov incl mov andl mov pop pop leave ret mov push mov mov sub push xor cmp je call cmp mov jge mov cmp jne lea push push lea lea jmp andl push push mov mov mov test je push lea call jmp mov decl test je mov cmp je push lea push lea push push call push lea push push call add mov call push lea call cmpb jle cmp je lea push lea push test je mov jmp push lea push push lea push push call add mov call mov call mov mov mov mov lea push lea push call mov mov pop pop mov or pop mov mov pop jmp mov push cmp je lea push push lea push push lea push push lea push push call add mov call jmp lea push lea lea push push push call mov call mov call push pushl call mov pop pop pop leave ret mov push mov sub push pushl lea push push call push lea push push call add mov call mov leave ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov mov mov sub push push mov xor mov mov inc cmp mov jg mov cmpb je lea push call pop push lea push push lea push lea call mov call push mov call cmp jg mov cmpb je push jmp mov mov test je cmp je push lea push lea push call push lea push push call add mov call push mov call mov cmpb jne inc mov cmp jg cmpb je push mov call cmp jle cmp jg mov cmpb jne push mov call push mov call mov cmpb jne incl jmp cmp jg push lea push push call add push mov call mov pop pop leave ret mov push mov sub pushl lea call mov mov incl cmp jne mov mov incl cmp jne incl lea push push call lea push push call mov mov add test je cmp je inc mov mov test jne cmpb jne dec mov push jmp mov inc mov mov mov mov mov leave ret push mov call mov leave ret mov push mov push push mov mov test jne mov push call jmp push cmp jne incl lea push call push push pushl call add jmp pushl call pop pop mov leave ret mov push mov sub mov xor mov mov push mov incl push movsbl cmp push mov jg je sub je sub je dec je dec jne lea push call lea push call cmpb pop pop jg cmpb jg push lea push lea call test jne push mov call jmp mov mov cmp jne mov mov movb jmp movb lea push push push lea push lea push lea call mov call mov call jmp mov cmpb jne incl push mov call jmp lea push call pop push push push lea call jmp push call jmp decl push jmp cmp je jle cmp jle cmp je cmp jne push lea push push call lea push call mov mov mov add mov jmp lea push call testl pop je push lea push lea call lea push call push call pop pop test je push jmp push lea push push cmp jne push lea push call add mov call jmp push lea jmp push lea call cmp jl cmp jg lea push call pop push lea call push lea call sub je dec je dec je dec je dec jne lea push call pop push lea call push lea call lea push call pop push lea call push lea call lea push call pop push lea call push push lea call jmp push call pop mov mov pop pop xor pop call leave ret mov push mov mov xor sub cmp je cmp je cmpb jne inc mov mov cmp jne mov push call jmp push push pushl call jmp cmpb jne pushl inc pushl mov call pop pop jmp push mov lea push push call mov pop pop pop test je lea push push lea push call mov mov mov add jmp test je lea push push jmp mov mov mov mov mov leave ret pushl push pushl call add mov leave ret mov push mov pushl pushl call mov pop pop pop ret mov push mov sub mov xor mov push xor push mov mov andl mov movb movl cmp jne push mov mov mov cmp je cmp je cmp je mov jmp push mov call mov mov movsbl sub cmp ja inc mov push mov lea push call jmp and mov mov cmp jne inc mov push lea call jmp cmp jne inc cmp je mov lea push call jmp cmp jne lea push call testl pop je push lea push lea call lea push call push call pop pop cmp je push jmp push lea push lea push lea push push call add mov call jmp push lea push lea push lea jmp and lea push lea push mov call pop pop mov mov mov mov mov sub cmp jle mov cmpl je lea push call lea push mov call cmp je pop mov mov pop mov xor pop call leave ret mov push mov sub mov movsbl push xor mov and and push xor inc cmp mov mov mov jg je cmp je cmp jle cmp jle cmp jg movsbl pushl lea call cmp je lea push lea push push call mov mov add mov mov mov mov mov mov mov pop pop leave ret and mov cmp je lea push call push lea push push call add push lea call mov cmp je mov call cmp jne push lea call push lea call mov cmp je movb mov cmp jne mov mov mov mov jmp inc mov push mov lea push push call mov mov add mov mov mov cmp je cmpb jne lea push lea push push call mov mov add mov mov cmp je lea push lea call jmp dec mov push mov call mov jmp cmp je jle cmp jle cmp jne movsbl inc cmp mov jg cmp jge cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl mov call jmp movsbl pushl jmp movsbl pushl lea call mov or mov mov mov jmp cmp je cmp jle cmp jle cmp jne push push lea push call mov add or jmp movsbl inc mov cmp je cmp jne push push jmp cmp jg cmp jge sub je dec je dec jne movsbl pushl lea call mov mov cmp jne push pushl lea call jmp movsbl sub js cmp jae pushl lea call mov movsbl incl cmp je cmp je add cmp jbe decl jmp lea push lea push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push push call pop pop mov call push lea call push pushl lea call jmp lea push push call pop pop lea push pushl lea push lea push push lea push lea call mov call mov jmp movsbl pushl lea call push lea push push call mov mov add mov mov cmp je test je push jmp lea push pushl lea call jmp cmp jl cmp jle cmp jle cmp jle cmp jne movsbl inc cmp mov jl cmp jle cmp jle cmp jg movsbl pushl jmp movsbl pushl lea call mov cmpb jne lea push call pop push lea call mov cmpb jne incl jmp lea push call pop push lea call push lea call mov mov mov mov jmp movsbl pushl jmp movsbl pushl jmp xor inc movsbl pushl lea call cmp je cmp je orl jmp mov push mov mov sub cmpb jne cmpb jne orl orl orl push mov push mov lea mov lea push mov inc mov inc lea mov mov cmpb movb jne inc mov lea push lea push push call jmp push lea push push call mov mov add mov mov test jne movb cmpb jne lea push call push lea push push call add push lea call mov test je mov call cmp jne push lea call push lea call cmpb je mov cmpb je incl mov mov mov mov mov pop mov mov pop mov pop leave ret mov push call mov leave ret mov push mov sub mov xor mov mov push mov movsbl push mov sub mov cmp ja mov incl push push call mov jmp andl mov and cmp jne lea push push call pop pop mov mov mov mov mov mov inc mov cmp je dec xor mov cmp setne inc push lea call jmp mov push mov push mov call pop test jne addl jmp mov mov push mov call pop test jne addl lea push call testl pop je push lea push lea call lea push call push call pop pop lea test je push call jmp push call push lea push lea push lea jmp push lea call push lea push lea push lea push push call add mov call push lea call jmp cmpb je cmp jne mov xor and incl mov mov jmp push push lea call mov mov mov mov pop cmpb je mov cmpl je lea push call mov mov mov mov mov mov pop xor pop call leave ret mov push mov sub push push mov push xor push lea push mov andl push mov call add push mov call mov cmp jne mov mov cmp je cmp je push lea push push lea push lea push call pop mov call mov call push mov call mov mov cmp jne incl jmp cmp je push jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call push mov call pop mov pop pop leave ret mov push mov pushl call mov pop pop ret mov push mov mov sub push push mov shr xor not inc and je test je xor mov movsbl andl mov and incl sub je sub je dec je dec je dec je dec je dec jne push jmp push jmp lea push mov call push lea push push call mov mov add mov mov jmp push jmp push jmp push lea call andl and test je mov mov mov mov lea push call pop lea push lea call mov mov mov mov mov jmp mov decl push call mov pop pop leave ret mov push mov mov cmpb jne inc cmpb jne push pushl call pop pop jmp push push pushl mov call jmp push push pushl call add mov pop ret mov push mov sub push call add push lea call mov cmpb je movsbl inc mov mov sub je dec dec je sub jne mov push call mov leave ret lea push call pop push lea call jmp push lea call jmp push lea call push lea call mov mov mov mov mov leave ret mov push mov sub push push push xor mov and mov call mov mov xor inc cmp je testl mov jne mov cmp jne mov push call mov jmp cmp jne push push pushl call add jmp cmp jne mov mov mov mov jmp mov andl mov mov je xor mov and cmpl sete mov test mov je and jmp and test je mov and cmp je cmpl mov je and jmp and test je mov and cmp je cmp je test je mov mov shr not test je shr not test je lea push call push lea push push call mov mov mov add mov jmp lea push call pop push lea call mov mov mov test je and jmp and test je cmp jne lea push call pop mov push lea push push lea push call mov call push lea call lea push call mov pop test jne push lea push lea push lea push push call add mov call push lea call push lea call lea push call mov pop mov shr not test je mov shr not test je test jne lea push lea push push lea push lea push lea push push call add mov call mov call mov mov mov mov jmp and and and and and xor mov mov mov mov mov mov cmp je and jmp and cmp je cmp je mov and cmp jne lea push call mov mov mov lea push mov call mov mov mov lea push mov call add jmp cmp je mov and cmp jne lea push call pop mov mov mov mov lea push call pop mov mov mov mov xor cmp je cmpl je mov and cmp je mov and cmp lea push je call pop mov mov mov mov jmp call pop push lea call mov mov shr not test je shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call mov cmpl je cmpl je testl jne push lea push push call add push lea call jmp mov mov mov mov and xor mov cmp je lea push push call push lea push push call add push lea call testl je mov mov mov mov jmp xor push push mov call cmp je mov movb andl mov lea push push call pop pop mov mov mov mov mov mov test je and jmp and test je test je mov and cmp jne push lea push lea push lea push push lea push lea push lea push push lea push lea push lea push push call add mov call mov call mov call mov call jmp test je mov and cmp jne push lea push lea push lea push push call add mov call push lea call jmp push lea call push lea push lea call push lea call push lea push lea push call push lea push push call add mov call push lea call test je mov and cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call mov shr not test je test je mov mov mov mov mov mov mov mov jmp pushl lea call mov mov test jne mov and cmp jne lea push pushl call pop pop jmp test jne mov and cmp je test jne mov and cmp jne push pushl lea push call pop push lea push push lea push lea call mov call mov call jmp test jne mov and cmp jne lea push pushl call jmp test je mov and sub jmp mov and neg sbb inc test mov mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push lea call jmp cmpl jne mov and cmp je cmpl je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov mov and xor cmp sete neg sbb test jne mov xor cmp sete neg sbb test je lea push lea push push call add jmp lea push lea push call pop pop jmp mov mov xor mov mov cmp je and sub jmp and neg sbb inc cmp je mov shr not test je mov cmp je and sub jmp and neg sbb inc cmp je cmp je mov and sub neg sbb inc jmp xor inc cmp je lea push lea push push call mov mov mov add mov mov test je mov and cmp je test je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp jne lea push lea push push call mov mov mov add mov mov shr not test je cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl je push test pop sete jmp mov and neg sbb inc test je lea push push lea push call mov mov mov add mov cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je testl jne lea push lea push push call mov mov mov add mov test je lea push lea push push call mov mov mov add mov mov mov mov pop pop pop leave ret mov push mov sub push push mov push test je andl lea push push call or pop pop mov mov mov mov mov jmp mov mov cmp jne inc mov cmp jne cmp jne lea push call mov pop jmp inc mov cmpb jne jmp lea push call mov mov xor inc pop test je test je mov jmp andl mov shr and cmp jle mov mov mov jmp mov mov test je cmp je lea push call cmpl pop je cmpb je lea push lea push lea movb call mov mov mov cmpb mov mov je lea push call pop mov mov mov mov lea push lea push lea jmp lea push lea push lea push push lea call mov call mov mov mov mov cmpl je test je or mov mov test je or mov test je mov test jne mov mov test je cmp je push jmp incl test je cmpl jne test jne andl andl lea push lea push call pop pop jmp lea push pushl call pop pop jmp test jne push mov call mov pop pop pop leave ret mov push mov sub push xor push mov push mov andl mov mov mov jmp mov mov cmp je cmp je cmp je cmp je cmp je push lea push push call add push mov call cmp je push lea push push call add push mov call mov mov cmpb jne inc mov movsbl sub je dec je sub je dec dec je sub push je lea push lea push call pop jmp lea push push lea push push lea inc push push mov call add mov call mov call push mov call movb jmp lea cmpb jne cmpb jne mov push lea push push lea push push call add mov call push mov call mov cmpb jne incl jmp push lea push push lea push lea push call push lea push push call add mov call jmp push push lea call push lea push push call add push mov call mov cmpl je lea push call jmp lea push dec push mov lea jmp lea push push lea push push push call add mov call push mov call cmp je mov mov cmp je cmp je push jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call push mov call pop mov pop pop leave ret mov push mov mov mov sub test jne pushl push pushl call add mov leave ret cmp jl cmp jle cmp je mov push call jmp push movsbl sub inc mov cmp jne mov test je movsbl sub inc cmp mov jl cmp jmp pushl push pushl call add jmp test jl cmp jle or cmp jne mov push call mov jmp andl andl push mov mov push mov mov mov and mov je lea push lea push push call mov mov mov mov add cmpb lea mov push je lea push lea push call push lea push push call add mov call jmp lea push push call add mov mov mov mov mov mov test je cmp jne mov incl and cmp lea push je call pop mov mov mov mov test je mov shr not test je lea push lea push lea push call push lea push push call add mov call mov mov mov mov jmp call pop push lea call jmp push jmp lea push push pushl call add jmp lea push call pop push lea call mov shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call xor cmp je push lea push lea push lea push push call add mov call mov mov mov mov push push mov call cmp je movb andl mov mov jmp xor lea push push call pop pop push lea push lea push call push lea push push call add mov call push lea call mov and cmp je cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call cmp je mov mov mov mov mov mov mov mov mov jmp push mov call mov pop pop pop leave ret mov push mov sub mov mov push push mov and push xor mov movb test je cmp jne pushl lea push lea push lea push call mov add cmp je mov mov mov mov jmp mov mov xor cmp setl and movsbl push mov dec and add sub and mov pop mov sub je dec je sub jne mov shr not test je push call add cmpl lea push je lea push lea push push call mov call mov mov mov mov jmp mov shr not test je push call add cmpl lea push je lea push push lea push call mov call mov mov mov mov jmp mov mov shr not test je shr not test je push call add cmpl lea push je lea push lea jmp call incl mov cmpb jne pushl lea push lea push lea push call mov add test jne mov mov xor cmp setl movsbl dec and add sub jmp mov mov mov jmp cmpb je inc mov cmp ja pushl lea call lea push lea push lea call mov mov xor mov mov cmp je lea push lea push push lea push lea call mov call mov mov mov mov cmp je lea push lea push push lea push lea call mov call mov mov mov mov test je cmp je push jmp cmpb je lea push lea push push call mov mov mov mov add cmpb lea push mov lea je push lea push call pop mov call jmp push push call add mov mov mov mov jmp mov cmpb je lea push call pop push lea call mov mov test jne push lea call jmp incl cmp jne mov shr not test mov je and cmp jne cmp jne lea push lea push lea push call pop mov call mov mov mov mov jmp and cmp jne lea push call pop push lea call test je lea push lea push push call mov mov add mov mov test je lea push lea push push call mov mov add mov mov xor mov cmp jne mov cmp je mov test jne mov cmp je push lea push push lea push push lea push push call add mov call mov call jmp test je mov mov mov mov jmp mov cmp je push lea push push call add push lea call mov or cmpb je or mov mov mov jmp cmp jne mov cmp je testl jne mov cmp je push pushl lea push push push lea push push call add mov call mov call jmp push push pushl call add jmp mov cmp jne push mov call mov pop pop pop leave ret mov push mov sub mov mov and xor and and mov test je cmpb jne mov cmp jne addl lea push call push lea push push call add jmp cmp jne lea push push call pop pop mov mov cmp jne mov mov lea push call pop mov mov cmp jne xor leave ret cmp je testl jne mov cmpb jne mov mov jmp pushl lea call mov test jne mov test je mov call inc mov add and push call pop mov test je pushl lea push call mov mov jmp cmp jne inc mov inc jmp inc cmpb je jmp mov inc inc mov test jne mov mov mov leave ret mov push mov push push mov mov push xor push cmp je cmp jl cmp jle cmp jne pushl lea call mov mov cmp je cmp je testl jne push lea call cmp je push lea call lea push pushl call pop pop mov jmp push pushl lea pushl pushl push call xor cmpb sete push lea push pushl call add jmp push lea call pushl lea call mov cmp je push lea call push mov cmp je cmp je push lea call push lea call mov mov mov mov mov pop pop pop leave ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov movzwl push push pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov pushl pushl pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret mov push mov mov mov sub push push push test je incl andl movzbl mov and mov or cmp movb jg je sub cmp ja movzbl jmp push jmp push jmp push jmp push jmp push jmp cmp je jle cmp jle cmp je cmp jne mov mov incl mov movzbl cmp jg cmp jge cmp jg cmp jge test je cmp jne pushl lea push call push push pushl call add jmp decl push lea call jmp push jmp cmp jl cmp jle cmp jg push jmp push jmp push jmp cmp jl cmp jle cmp je cmp je cmp je add cmp ja lea decl push call mov pop mov mov mov test jne mov mov mov jmp push jmp push pop mov mov and xor mov mov mov mov cmp jne push lea push lea push lea mov or push call add test jne push lea call mov mov mov mov jmp push jmp push jmp push jmp push lea call jmp mov and jmp lea jmp push lea call push lea call cmp jne mov sub je push pop sub je sub je sub je sub je sub jne movzbl sub je sub je sub je sub je sub jne lea push push lea jmp lea push push lea jmp lea push push lea push call mov mov add mov mov mov cmpl je push lea push push call add push lea call mov mov mov mov mov jmp cmp jne test je push lea call test je push lea call jmp test je push lea call lea push lea push pushl call jmp pushl push pushl call add mov pop pop pop leave ret mov inc add fs add fs add fs add fs add add add add add add mov sub mov movsbl push xor mov and sub push mov je sub je sub mov je dec je push pushl call pop pop jmp push lea call cmp je push lea call mov mov incl mov lea push lea push pushl or mov call jmp mov cmp je cmp je mov push call jmp inc inc mov movsbl sub je sub je dec je dec jne and push lea push push pushl lea inc push mov mov call push pushl call add jmp push pushl inc pushl mov call jmp pushl inc pushl mov call jmp pushl push pushl call add mov pop pop leave ret mov push mov sub pushl lea call mov mov xor cmp je cmp je cmp je lea push pushl call pop pop jmp incl cmp jne mov push call jmp lea push push pushl call jmp incl andl push lea push push mov lea push lea push call mov mov mov mov lea push pushl call add jmp lea push push pushl call add mov leave ret mov push mov sub push push push mov call test je andl movb andl mov jmp xor push pushl call lea push call add pushl lea push push lea push lea call mov call push mov call mov pop leave ret mov push mov sub mov xor mov testb push je push call pop call test je push call pop testb je mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea mov movl mov mov push mov lea push push call lea add mov lea push movl mov mov call lea push call push call int3 mov push mov mov mov mov and not and or mov pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov cmpl sbb neg pop ret mov push mov mov and pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl call pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov movzbl push call pop test jne cmpb je pop ret xor inc pop ret mov push mov pushl pushl pushl pushl call pop ret mov push mov sub pushl lea call pushl pushl pushl pushl call cmpb je mov andl leave ret mov push mov push push mov xor mov mov push mov push push xor xor inc cmp jne push push push push call test je mov jmp call cmp jne push pop mov jmp mov cmp je cmp je cmp jne cmp jne mov mov mov mov push push pushl pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl call test je push push cmp jne push push jmp pushl pushl push push push pushl call mov push call pop mov jmp pushl pushl pushl pushl call lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl push call add cmpb je mov andl leave ret mov push mov sub mov xor mov push lea push push pushl movb call test jne or jmp lea push call pop mov xor call leave ret mov push mov sub mov xor mov mov mov mov mov push mov mov push mov mov push xor mov mov mov cmp je mov lea push push call mov test je cmpl jne lea push pushl call test je cmpl jne mov movl cmp jne pushl call mov pop inc cmp jle cmp ja lea cmp ja call mov cmp je movl jmp push push pushl pushl push pushl call mov cmp jne xor jmp push call pop cmp je movl add mov jmp mov cmp je lea push push pushl call add push pushl pushl pushl push pushl call test je mov cmp je push push pushl push push pushl push pushl call test je mov jmp mov cmp jne push push push push push pushl push pushl call mov cmp je push push call pop pop mov cmp je push push push push push pushl push pushl call cmp jne pushl call pop mov jmp cmpl je mov mov pushl call pop mov lea pop pop pop mov xor call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp push lea sub and add sbb or pop jmp mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor push cmp je cmp jbe cmp je mov push mov cmp je mov cmp je cmp je call push pop push push push push push mov call add mov jmp cmp je call push pop push push push push push mov call add mov jmp lea pushl call inc pop mov cmp jne xor jmp cmp jbe push pop jmp pushl pushl pushl call add pop pop pop pop ret mov ret mov ret mov ret mov ret mov push mov call mov mov pop ret mov push mov call mov mov pop ret mov push mov call mov mov pop ret push push call xor mov mov mov mov mov mov push call pop mov call mov lea push call pop cmp je push push push push push call add lea push call pop cmp je push push push push push call add lea push call pop cmp je push push push push push call add call mov mov or mov mov push call pop mov mov cmp je cmp je mov cmp je push push call pop pop test je mov cmp je push call pop push call inc push call pop pop mov cmp je push push call pop inc push pushl call add cmp je push push push push push call add jmp mov cmp je push call pop mov push call cmp je xor inc mov mov imul mov cmp je mov imul add mov cmp je mov cmp je mov sub imul mov jmp mov mov lea push push push mov pushl push push push pushl mov call test je cmp jne mov mov mov jmp mov mov mov lea push push push mov pushl push push push pushl call test je cmp jne mov mov mov jmp mov mov mov movl pushl call pushl call pushl call add movl call cmp jne push push push mov pushl call add test je push push push push push call add add cmpb jne movl inc push call pop imul mov mov cmp je cmp jl cmp jg inc jmp xor mov push call pop ret cmpb jne inc push call pop imul add jmp cmp jg inc mov cmp jge cmpb jne inc push call pop add jmp cmp jg inc mov cmp jge cmp je negl movsbl mov cmp je push push push pushl call add test je push push push push push call add jmp mov mov mov call mov mov call mov call ret mov push mov sub andl cmpl push push push mov mov mov jne and jns dec or inc mov jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov shl mov jmp mov shl mov mov lea cltd lea mov idiv push pop inc push mov mov cltd idiv mov mov sub mov lea cltd and add sar mov imul add add lea cltd pop idiv mov imul sub add cmp jg lea jmp add cmpl jne cmpl jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov mov jmp mov mov cmp jle sub jmp and jns dec or inc jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov jmp mov add imul add imul add imul add cmpl jne mov mov mov jmp lea push mov mov call pop test je xor push push push push push call add mov imul add jns addl decl jmp mov cmp jl sub incl mov pop pop pop leave ret mov push mov sub push lea xor push mov call pop test je push push push push push call add cmp jne xor jmp mov push xor inc cmp jne cmp je cmp je movzwl movzwl push movzwl push movzwl push cmp jne movzwl push push movzwl push push push jmp movzwl push push push push push movzwl push call movzwl movzwl add push movzwl push movzwl push cmp jne movzwl push push movzwl push pushl push jmp movzwl push push push pushl push movzwl push call add jmp cmp push pop push pop movl mov jge push pop mov movl movl push push push push push push push push push push pop call mov push push push push push pushl pushl push push push pop call add mov mov cmp mov jge cmp jl cmp jg cmp jle cmp jge mov pop pop leave ret cmp jl cmp jg cmp jle cmp jge xor jmp mov imul add imul add imul cmp jne xor cmp setge jmp xor cmp setl mov jmp push push call xor cmp jne push call pop mov cmp jne call incl movl call call ret push call pop ret push push call push call pop andl call movl call call ret push call pop ret push push call push call pop andl mov call mov movl call mov call ret push call pop ret mov push mov mov push mov push movzbl lea inc cmp ja add movzbl lea inc cmp ja add test je cmp je pop sub pop pop ret mov push mov sub push pushl lea call xor cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov cmp jne push pushl call pop pop jmp push mov movzbl lea push push call incl mov movzbl lea push push call add inc cmp je cmp je sub mov pop cmp je mov andl pop pop leave ret mov push mov push xor cmp jne cmp jne call push push push push push movl call add mov jmp cmp je pop pop jmp push pushl pushl call add pop pop ret mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov pop jmp mov push mov pop jmp mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov push push push mov xor cmp jne call push pop push push push push push mov call add mov jmp push cmp ja call push pop push push push push push mov call add mov jmp xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov mov cmp je movb lea movl neg mov xor divl cmp jbe add jmp add mov inc incl xor cmp jbe mov cmp jb mov cmp jb mov jmp mov dec mov mov mov dec mov inc cmp jb xor pop pop pop leave ret mov push mov cmpl mov jne test jge push push jmp push pushl pushl mov call pop ret mov push mov xor cmpl jne cmp jge inc mov push pushl mov pushl call pop ret mov push mov mov mov push pushl pushl call pop ret mov push mov sub push xor push cmp jne call push pop mov push push push push push call add mov jmp cmp jbe xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov mov mov mov cmp je neg adc movb lea movl neg mov mov pushl pushl push push call mov mov mov mov cmp jbe add jmp add mov mov inc inc mov test ja test jbe cmp jb mov cmp jb movb call push pop mov mov xor jmp movb dec mov mov mov mov dec mov inc mov cmp jb xor pop pop leave ret mov push mov xor cmpl jne cmp jg jl cmp jae xor inc push mov push pushl pushl pushl pushl call pop pop ret mov push mov push mov push pushl pushl pushl pushl call pop pop ret mov push mov cmpl jge xor pop ret pushl pushl pushl pushl call pop ret mov push mov sub pushl lea call cmpl jge xor jmp pushl pushl pushl pushl call cmpb je mov andl leave ret mov push mov sub push pushl lea call mov lea cmp ja mov mov movzwl jmp mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp xor mov movb inc mov push pushl pushl lea push push lea push lea push push call add test jne cmp je mov andl xor jmp movzwl and cmpb je mov andl pop leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl pushl call add pop ret mov push mov mov add pop ret mov push mov sub push push pushl lea call mov mov cmp jae mov cmpl jle lea push push push call mov add jmp mov movzwl and test je mov movzbl jmp cmpb je mov andl mov jmp mov cmpl jle mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp call movl xor mov movb inc mov push pushl lea push push push lea push push pushl lea push call add test je cmp movzbl je movzbl shl or cmpb je mov andl pop pop leave ret mov push mov cmpl jne mov lea cmp ja add pop ret push pushl call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret pushl call pop test je call push call push push call add jmp mov push mov push pushl call pushl mov call pop pop mov mov pop pop ret pushl call pop ret int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret mov push mov cmpl push mov jne xor jmp push test jne cmp je call test jne mov test je cmpl je pushl call pop mov jmp push call pop cmp jbe mov cmpb jne push pushl push call add test je add mov test jne xor pop pop pop ret mov lea jmp mov push mov push push mov xor cmp jne call push pop push push push push push mov call add mov jmp mov mov cmp je cmp ja jmp cmp jne cmp je mov push pushl call mov pop cmp je push call inc pop mov cmp je cmp jbe push pop jmp push pushl pushl call add test je push push push push push call add xor pop pop pop pop ret mov push mov push push push xor cmp jne call push pop push push push push push mov call add mov jmp mov mov cmp je mov cmp je pushl call pop mov cmp je push call mov inc push push call add mov cmp jne call movl call mov jmp pushl push push call add test je push push push push push call add mov cmp je mov xor pop pop leave ret push push call xor xor cmp setne cmp jne call movl push push push push push call add xor jmp mov push pushl call pop pop cmp sbb neg je push call pop mov pushl call pop mov movl call mov call ret push call pop ret push push call push call pop xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp mov mov cmp je cmp ja cmp jne cmp jne xor inc jmp xor cmp je cmp je mov pushl call pop mov cmp je push call pop inc mov cmp je cmp jbe movl jmp push pushl pushl call add cmp je push push push push push call add mov movl call mov call ret push call pop ret push push call push call pop xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp mov mov cmp je mov xor cmp setne cmp je pushl call pop mov cmp je push call mov inc push push call add mov cmp jne call movl call mov mov jmp pushl push push call add cmp je push push push push push call add mov cmp je mov mov movl call mov call ret push call pop ret mov push mov sub push push pushl lea call mov mov xor cmp je mov cmp jne call push push push push push movl call add cmp je mov andl xor xor jmp cmp je cmpl jl cmpl jg push mov mov mov mov inc cmpl mov jle lea push movzbl push push call mov add jmp movzbl mov movzwl and cmp jne cmpb mov jne orl jmp cmpb jne mov inc mov mov push pop cmp jne cmpb je movl jmp mov cmp je cmp je movl jmp mov cmp jne cmpb jne mov cmp je cmp jne inc mov inc mov mov mov cltd push mov push push push mov call mov mov mov mov mov mov movzbl movzwl test je movsbl sub jmp test je mov sub cmp movsbl ja sub lea cmp jae mov orl cmp jb ja mov cmp jb mov cmp jne cmp jne xor cmp jb ja cmp jbe orl cmpl jne mov decl test jne xor cmp je mov mov mov mov jmp push pushl pushl push call xor add adc mov mov mov mov incl mov jmp mov mov test jne test jne and je cmp ja jb cmpl ja test jne cmp jb ja cmpl jbe call testb movl je orl orl jmp testb je andl mov jmp orl mov mov pop test je mov mov testb je mov mov neg adc neg mov mov cmpb je mov andl mov mov pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call mov xor cmp jne cmp je mov andl xor jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp cmp je push mov cmp jbe call push push push push push movl call add jmp mov cmp jne pushl push pushl pushl call add jmp pushl push pushl push pushl push pushl lea push call add cmp jne cmp je mov andl mov jmp add cmp je mov andl pop pop leave ret mov push mov push pushl pushl pushl call add pop ret mov push mov push push push push xor push mov mov mov cmp je mov push push push push push push push push call mov cmp je push push call pop pop mov cmp je push push pushl push push pushl push push call test je lea push push call pop pop test jge cmp je pushl call pop mov add mov cmp jne xor pop pop pop leave ret or jmp pushl call pop jmp mov push mov push andl push lea push pushl pushl call mov add test jne cmp je call test je call mov mov mov pop leave ret mov push mov xor cmp jbe mov cmpb je inc inc cmp jb pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov mov push push push xor mov mov mov mov cmp jne push mov push push push push push call test je movl jmp call cmp jne movl cmp jle pushl mov call pop mov mov cmp jle mov push call mov pop mov jmp cmpl jge xor jmp cmp jl mov cmp je cmp je xor inc cmp jne mov cmp jne mov mov mov cmp je cmp jne cmp jne push pop jmp cmp jg cmp jle push jmp lea push pushl call test je cmp jle cmpl jb cmpb lea je mov test je mov cmp jb cmp jbe inc inc cmpb jne jmp cmp jle cmpl jae xor inc jmp cmpb lea je mov test je mov mov cmp jb cmp jbe inc inc cmpb jne jmp mov push push pushl push push pushl call mov mov cmp je mov test jle push xor pop div cmp jb lea cmp ja call mov test je movl jmp push call pop test je movl add mov jmp andl cmpl je push pushl pushl pushl push pushl call test je push push pushl pushl push pushl call mov test je jle push xor pop div cmp jb lea cmp ja call mov test je movl add jmp push call pop test je movl add mov jmp xor test je push push pushl pushl push pushl call test je push push pushl pushl pushl pushl call mov push call pop pushl call mov pop jmp xor xor cmp jne mov mov mov cmp jne mov mov mov pushl call mov pop cmp je cmp je push push lea push pushl push pushl call mov add test je push push lea push pushl push pushl call mov add test jne push call pop jmp mov mov pushl pushl pushl pushl pushl pushl call mov test je push call push call pop pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl mov pushl lea pushl pushl pushl pushl call add cmpb je mov andl leave ret mov push mov sub push pushl lea call mov xor cmp jne cmp je mov andl xor jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp cmp je push mov cmp jbe call push push push push push movl call add jmp mov mov cmp jne lea push push pushl pushl call add jmp pushl lea push pushl push pushl push push push call add cmp jne call movl cmp je mov andl mov jmp add cmp je mov andl pop pop leave ret mov push mov cmpl jne pop jmp push pushl pushl pushl call add pop ret mov push mov push mov jmp push push pushl call add test jne mov mov cmp je test je add mov test jne mov sub sar neg pop pop ret mov sub sar jmp mov push mov push push mov xor mov test je cmp je add inc cmpl jne push inc push push call mov pop pop mov test jne push call jmp push call mov add add pop mov test jne and mov pop pop leave ret mov push mov sub mov push xor mov cmp jne call push push push push push movl call add or jmp push mov push mov cmp je push push call mov pop pop mov cmp je cmp je xor cmp sete mov mov cmp jne call mov cmp jne cmp je cmp je call test je call movl or pop pop pop leave ret cmp jne push call pop mov cmp je mov cmp jne push call pop mov cmp je mov mov mov cmp je sub pushl call mov cmp pop jl cmp je lea pushl call pop cmp jne mov mov mov mov jmp mov mov mov inc lea cmp jne cmp jae push push pushl call add cmp je jmp cmp jne cmp jge neg lea cmp jl cmp jae push push pushl call add cmp je mov lea mov mov mov mov mov cmp je mov push push call inc pop inc push call mov pop pop cmp je push push call inc pop inc push push call add test je push push push push push call add mov mov sub add mov inc neg sbb not and push push call test jne orl call movl push call pop cmp je pushl call mov pop mov mov jmp pushl call mov pop mov xor jmp mov push mov push xor cmp jne xor jmp push push pushl call mov inc push call mov pop pop cmp je pushl push push call add test je push push push push push call add mov jmp xor pop pop pop pop ret mov push mov sub push pushl lea call mov xor cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov cmp jne pushl push call pop pop jmp movzbl testb je inc mov cmp je movzwl movzbl shl or cmp jne dec jmp movzwl cmp je inc movzbw movzwl cmp jne movzwl cmp jne cmp je mov andl jmp cmp je mov andl xor pop pop leave ret mov push mov push pushl pushl call add pop ret int3 int3 int3 int3 int3 lea pop ret lea lea xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp movl mov jmp add inc add add add aas inc push bound pop popa insb insb outsl arpl je inc inc add add add add aas inc push gs gs imul inc inc add add add inc mov xor inc add inc add add add add add add add add add add add add add add sbb add add add add add add add add add add add or add or add or add or add or add pop add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add or add add add add add adc add push add add add add add add add add add or add insb add add add add add add add sbb add jb add or add push add add add add add add add add add add add add add xchg add add add add add add add add add cmpsl add add add add add add add add add add add add add add pop add or add or add or add inc loope add add add sub add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add (bad) (bad) incl mov inc add add add aas inc push bound pop arpl je jae fs inc add jl inc add add add aas inc push bound pop je jo imul add add jl inc add add add aas inc push pop pop outsb outsl outsb pop jb je pop outsl bound arpl je inc inc add mov inc add add add aas inc push je jo pop imul add add add add clc test add add add test add add add add add test add add add cmpsl inc add add add add mov add pop cmpsl inc add add add inc add add add cmpsb inc add add add cmpsb inc add add add add cmpsb inc add add add add add add movsl inc add add add add add add add movsb inc add add cld mov add in mov add fsubl add fsubs add enter add add pop add add add or add adc adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add popa bound gs imul jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add in add add movsb add add jns and add add add cmpsb fild add add add add add add add cmp add add mov add cmp add inc incb add add add mov add cmp add inc incb add add add mov in call add add add add mov add add push ficompl and pop fisubrl xor adc add xor incb add add inc add (bad) (bad) incl add add add add add adc inc add jmp add jmp add jmp add jmp add add add add add inc add lods inc add mov add jmp add add add jmp add in add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor inc add inc add add inc add add inc add add inc add inc add mov add mov add inc add mov add inc add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add inc add add inc add add inc add add mov add add add add add add add add add add inc add inc add inc add inc add jg jg jg dec out inc add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add icebp (bad) incl add add push add push add out inc add lock add (bad) (bad) incl add add add add (bad) (bad) incl add add add add (bad) (bad) lcall add add add add add js add xchg add add add add add add add add add add add insl add add (bad) (bad) lcall add add add add add ja add xchg add add add repnz add add add add add add insb add add insl jo jno je je add cs popa jb add cs popa jb add cs popa jb add cs popa jb add fs popa jb arpl popa jb add cs popa jb add cs popa jb add cs popa jb add fs popa jb add add add add adc rolb inc add add rorb addb add or push add pop add push inc xor mov add pop add or add adc xchg add daa add inc push add shrb orb add sbb aam (bad) aaa add push inc je mov add pop sarb add inc test and adc rolb adc add add rorb adc movsb add or push add push inc mov mov add pop add sbb push xor add sbb push mov add sbb in xor add push (bad) ja rcrb hlt pop mov add xadd add inc add xor adc rolb or rorb or dec add xchg add es xor mov add lahf add or push add sub or shrb or pop add push (bad) mov shrb je mov add pop sarb or bound adc rol inc xor or add ror xorb or sbb xlat push (bad) ss add mov mov inc adc sbb loop sbb add push push push sbbl cmp add in pop jo shl adc int3 push xor mov sarb cmpb pusha cld pop call inc adc movsb add aas sbbb sbb mov lock add inc push add and dec or inc ret and adcl inc ret rolb popa or inc mov enter push orb or inc rcr add and and call cwtl push (bad) ja rcrb dec pop rclb pop dec add and xor mov adc test rorb or pushf test daa pusha xchg or and lahf add sub inc or push sarl add adc mov add xor mov ret adc push or mov add mov adc mov clc pop add nop mov mov or pop (bad) into push xorb pusha xor test cs push cwtl xor pop ret push add insb add add or sbb or mov cmpb loopne adc pop das sarl cmp push add popa addl push jge lock add or add or pop add ret add xor decl or les add rclb xor dec or arpl cmpsb add xor or gs sub jo add and xor mov push je shlb push rolb sbb lret xor test mov rcr pusha cmp dec push push pop xor jns pusha imul rcl add insb add xor enter or push inc xchg ss or adc dec xchg aaa mov inc test lock or addl shrb or loope or push adcl sub add js add push nop je jb inc ljmp enter sbb cmp inc xchg push add cmp xor imul or cs pop cmp sbb push repz dec jp (bad) push rorb mov shr addb xchg das loope pop cwtl cmp cli pop aam (bad) (bad) or jle inc add adc xchg add sub dec jle push add push cmpb or sbb sti pavgb cld add and cld and add add add sub adc addl and add add inc mov test or sub lock inc add inc test and xor push add ret dec sbb sarb test add inc add or add sbb or sbb inc and inc mov js add fmull adc mov add sub adc adc sub dec or rcll sub mov mov sbb inc bound test add cmp adc ja jb mov (bad) cmp xchg push mov mov test adc inc rcll xor adc pop les insb add add push push pop add push xchg ret aam shll inc dec mov add subl sbb nop xchg les push pop and cmpxchg add add roll and orb adc mov mov pusha std mov mov inc mov or adc adc and dec (bad) pop adc adc cmpsb and dec and adc xchg nop dec mov add es or push ss xor insl adc inc int3 push jno mov or sbb mov inc bound mov pusha cmp or add nop xlat mov dec inc (bad) add sahf ret mov mov (bad) insb and aas (bad) cmp popl insl test sub inc mov adc inc dec sub mov and adc push inc test lock add add or add sub scas sub inc mov push loope add sbb dec or push mov add inc dec xchg mov (bad) and ret mov test and subl into or add sub and cmp and add ss mov and add fadds inc or shrb sbbb pop sub inc inc add push sbbl test or adc push (bad) ja mov mov inc push push jge jl and adc add adc add (bad) add inc sbb adc add std orl cmp and or inc mov pop inc add cmp loop add lock or xchg adc sub test and sbb sbbl fsubrs xor or scas (bad) ss pop subl and test sbb bound mov ret xor xor loopne or add push dec and or loop or and (bad) push adc daa add mov push adc dec add push jo lds mov dec or pusha push (bad) mov test inc lods adc sub test push pop pop push pop (bad) fcoml call loope mov adc mov xor or sbb in pop xor lret jae add add xor rclb and add push add or sbb add rolb add jns xchg push mov sarl mov sub pop cwtl pop inc cmp xchg jp aam mov test adcb mov and xor rclb cld subb shrb sbb add jg out pop loopne add popa mov pop mov das add push pop sarb add lock add inc add test and add orl sub inc int3 xor andl push mov mov orl sub cmp lock loope add les daa orl sbb adc and and inc or add and or adc dec (bad) pop adc mov test nop dec (bad) andb sbb orl ss adc test mov rclb mov lock xor sbb cwtl cs inc sbb mov push push xor subl and ret lock xchg xor mov sub subl xorl adc inc out and add push sbb inc push add jns aam mov jecxz sbb add popf or das loopne pop js push jbe adc adc pusha sbb call inc cli xor and add or push add mov add push sbb add adc divb rcrl or adc or loope xorl rolb (bad) add or inc mov mov inc add inc push nop and and push rol sub and adc sub xor add inc adc and push sbb xor sub and loopne push les inc push add insb orl pop inc and mov popa inc add adcb or lea sub sub (bad) mov inc movsl add xor push movsb adc push xchg in adc mov cld gs xchg xor mov sub (bad) out push shll mov arpl mov sbb xor or add add mov cmp mov jecxz vmread inc fimull add push call mov mov pusha (bad) faddl adc add sub pop add sbb add nop sbb aas add bound add and and pusha dec add push loop addl dec add shrl or popa or lods push in xor andl cltd inc push and mov add (bad) fmull js js inc hlt push xorb or inc rcr mov (bad) lock jae cwtl sbb cmp or test adc mov orl or xorl add adc pop sbb insl xchg inc sahf add and jl mov test inc sahf adc lds adc inc sbb mov test dec adc cmpsb push sub push xor push (bad) mov mov inc adc rol mov push mov add inc (bad) mov fs add or sbb nop adc xor cmp mov cwtl jb loopne inc nop shll sbb inc add inc add add add orl test jo pop mov pop jp xor mov mov jecxz add jno andb adc orb in mov rolb adc xchg add sub dec or pop add pop push addb xor inc add pop xchg addb call addl push add or or roll dec add je mov add xor mov dec ffree push adc arpl push mov add and sbb pusha cmp add dec inc pop cmp or in rolb adc mov and (bad) push adc add sbb fimull sbb roll addr16 fsubrs ret pop sbb or cmpsl test inc movsl add or jecxz sbb cmp mov fdivs mov dec cmp pop invd js les cmp out add pop arpl push lock (bad) nop and fs and subl push xor pushf sub pusha aam adc push js mov jo add sbb sub xchg shrb cmpb addps pop ss or jo adc pop ds add xchg inc xor (bad) ja mov mov inc push cmp push and sbb add and add pop hlt sbbb jmp add adc add and add inc mov jl (bad) popa pop (bad) cmc inc les push jmp pop or pop or xchg fs popa adc or xchg jo inc add mov xchg out (bad) js mov push hlt xor popa pop adc mov or cwtl sbb or or cmp cmp or push pop sbb xchg sbb (bad) push daa adcb ds mov sti add jl add mov xor inc sub add sbb mov add loopne,pt (bad) mov cwtl xlat push inc xor test or inc in xor paddq lds loopne les pop andl in jo xchg aas andl loop mov repnz add rcr call push pop add loopne add aas rorb pop test ret into pop clc jnp add loope or add repnz add inc adc aam inc add pop xor movsb andb add adc cwtl add or inc sbbb fsubl and or add add addl test mov les roll sbb icebp xor or jmp or adc push (bad) or movsb xor imul sbb mov dec xor test push popf push movsb pop push cmp fcompl js mov nop aas or jns mov (bad) pop or nop pop jo sbb adc adc mov push dec add inc mov mov mov or and clc jo jo xor cmp add adc (bad) movsb or add jno push or inc mov jo les loopne add and and jne sbb xchg xchg fimul fsubrs (bad) push or out pop je popa ficom clc xor fcomps add cmp test movsb push adc push (bad) incb or cs sbb sbb mov les pop orl adc add pusha mov push adc and adc orb adc lods add popa cmp mov ret fmuls add sbb and add rclb pop add add ret push adc loopne adc cmc inc and pusha lret xor std and loopne push insb xchg dec and or add xor test add inc and push mov aaa and sbb aaa addl inc adc rorb pop add mov pop adc test (bad) enter cmp mov rcl mov and dec orl hlt xchg sbb or les icebp flds cmp add sub jo add inc add adc or mov sbb sbb xchg adc syscall dec adc cmpsb add sbb push (bad) lods cmp scas and sub mov out cmp je nop push add in andl mov enter in (bad) cld sbb icebp and add pop jl inc imul adc inc loope xchg cmp add push nop xor icebp add push js bound mov push fadds inc or rolb nop add les add icebp sbb jl mov je mov ret ljmp and add or dec add subb or add pop add adc ret adc decl push sbb adcb or mov dec or adc mov pop adc pop dec mov xor sbb add add xor mov loopne xorb or imul jae cwtl sbb cmp or adc subl adc xor cltd add adcl dec inc insb inc jo test daa add and shll mov loope and add and (bad) lea lcall ret adc movsb adc adc cmpsb add adc adc push mov inc inc pop test mov add add pop dec pop and and repnz push loopne test or mov and inc lret pop xor xor cmp inc push cwtl xor add mov add (bad) mov dec incb xor or add aaa add or loope pusha cmp xor andl and dec bound cmp mov subb xor add stc pop mov mov inc and adc rorb adc pushf add or pop add pop adc adc add add add add xchg add cwtl adc sub xor and test dec sbb or sub mov add xor mov xchg push and xchg (bad) dec xor test add sbb roll xchg rolb xchg dec xchg pusha adc test outsb ret push dec add sub jmp shlb mov test ret xor inc adc cmpsl and push add test and push dec sub mov xor les mov jmp mov dec or jo loopne movsb movsl push loopne orl adc pop xchg inc push lock rorb and sbbb add pop sbb rcrb rclb nop fs (bad) cmp sarl add jbe mov popa sub add lsl add and adc rorb adc add dec push add sbb fcoml cmp add mov and clc add andb or and inc lret xchg add mov sbb pop mov xor push (bad) rol jno or and push xor add dec insb dec jo mov and loopne leave jo rorb pusha or sbb es nop xchg xchg call mov loopne add pop pusha js mov inc ret or sub repnz xchg add pop add and or inc mov mov inc (bad) pop aaa and enter xor adc into sbb lock test sub movsb or add add sub lods add cmp mov loopne inc xchg cmp fs and nop mov nop cltd and add inc ret pop sbb leave sbb rcrl bound mov cwtl or push enter add mov fildl sub orb mov pusha or jno add andl and xchg das loopne es inc in xor aam loop addb mov in lcall dec add xorb inc pop add push hlt xor dec psubb xchg adc add les ret add pusha and lods dec repnz push ss mov loopne mov loope inc lret sbb movsb popa and lock dec mov jl mov (bad) movsb xor xlat (bad) jl fs in pop cmpl jecxz and inc pop dec popa mov jg jo dec into dec (bad) je clc xor and pusha adc cltd xchg test pusha mov mov rolb adc inc ss loop (bad) jo and lcall and dec adc arpl dec loop mov inc lret mov mov int3 sahf test or sub ljmp call xchg dec (bad) cld mov stc daa (bad) icebp inc mov and ror sub (bad) fidivrl jno orl roll mov int3 inc mov jo or add fadds inc or rolb sub add sbb loopne xchg or add dec mov fs add adc rolb xor test add inc pop sbb or test sbb inc pop add les add ret mov (bad) incl push (bad) addb or add nop leave or or (bad) mov loopne adc inc mov fadds xchg sbb dec add push and ss hlt push (bad) sbb fmuls inc ret repnz lods xchg add cmp repnz mov inc inc call int3 push adcl dec sub xor mov sahf add inc adc enter inc popa or xor mov shll lock (bad) pop aaa sbbb adc mov pop sub shlb or pusha push add add adc mov push add in mov cmp jnp push cmp mov outsb cmp pop xchg in inc faddl xor into push jno add and push dec xor cwtl push shlb dec and js add subb mov les push fadds inc or rorb loopne or (bad) rcll nop pusha call push push mov inc out pop mov rorb cld adc add adc add sbbb sbb sub adc nop add and add push (bad) addb push adc sub mov rclb sbb pop adc xor and dec mov inc xchg addl ret xchg sub xchg push jno adc or and push push jo adc xor imul inc shl loop or add cmpb cmpsb add add cmp push adc (bad) add dec orl mov mov addb adc (bad) adc and dec test adc sbb push inc xchg dec (bad) test jecxz or inc xchg xor js inc movsl add or loopne sub nop in les movsb inc push subb xchg sbb test push mov shlb inc popa ficom loopne inc xchg cmp xchg or xor or movsl aaa push cwtl xor xchg rolb insl adc add cmpl and push xchg and call fadds or pop jo add add jl movsb push inc clc or or add adc cwtl add sub push or pop add jg les xorb adc pop addl loopne inc mov lock or popa add push adc mov popa pop shlb sbb sahf xchg je pusha pop sub dec sarb and sub xorw mov loop sub rolb add xor test lret xor in les push adc pop subl push mov jne xor sub xor or inc xor icebp rorl adc add sbb test adc adc dec ret push loop or add push (bad) js push dec or loopne sbb push lret shlb lahf add push loopne mov test push add mov mov inc push push adc pop adc daa shll pop test mov andl stos popa bound mov rorl sbb cs pop mov push jo mov or inc insl adcb jecxz pusha cmp dec xor ljmp mov mov push ret cmp mov lock mov loopne add xchg add add jl mov dec stos ret push add adc mov add rcrb pop add push and add mov hlt and inc add adc sbbl adc add les add mov insb stos test or cwtl xchg xor pop or dec fs adc clc xor clc (bad) lret (bad) mov dec inc les or push outsb adcl xchg test or inc rcr adc xchg in and cmpsb push and add lods gs and inc cs dec leave adcb inc xchg inc pusha popl insl mov or xchg adc ret and or push lret lock (bad) mov test mov mov add push mov adc xor icebp pop dec es add dec cmp je mov and or sbbl xchg les insb add add push inc push add cmp dec mov popa ljmp pusha mov repnz cmp add mov add sub pusha and adc add pusha adc lods add aas andb sbb add adc add and cld xor add add cmp les call repnz inc mov add add js (bad) (bad) sub ret mov or ret fistpl push scas add push push pop push mov sbb push push xchg test jo (bad) mov dec push mov test mov shrl and xchg (bad) loope adc in inc nop adc inc (bad) and add add and or dec or adc inc xor inc add or push lret xor push add adc mov push inc xchg sbb pop push in scas add jle adc xchg les jb loope les mov imul or jae cmp xor add ss insl adcb or lock (bad) push inc push add and rclb jne lods add inc cld pop adc fcompl add pop mov pusha push cmpb test fstps lock adc cwtl add sub pusha or pavgb adc sub or push add orl subl inc mov inc or mov lock or cmc xorb movsb and adc add test inc push adc xor test and inc push inc (bad) xor mov (bad) ds rclb sub pop mov xor sbb enter pop rcl clc scas jecxz adc das sbbl mov nop dec lret add jb or inc rorb adc add or and add inc sub add or inc scas or sub mov inc mov rcrb sbb mov fisttpll sbb xchg cmp out or inc popa ficom pop inc jle adcl lret adc sbb ret (bad) add (bad) mov rorb pusha add in pusha cmp adc mov add add js int3 add inc negb push roll xor add mov and add jo or add xadd or add shlb or mov pop inc add loopne or dec lock fadds dec add sub inc ret xor jecxz sub inc es jnp loopne cwtl dec inc dec xor cmp fmull add and sarb adc imul and adc or movl adc test rolb xchg sub cmp insb or loopne adc and dec xchg aaa mov add cld sub (bad) sahf adc sub adcl sub pop add adc sub subl mov bound pop sarl pop xchg ret dec lret adcl adc xor ret push jo mov inc mov xor adc add adcb mov orb add sub subl (bad) cld das adc sbb mov xor (bad) ja mov mov sarb pop addl mov pusha or add sbb add adc add or mov cmp add subl lock push add xchg jl mov hlt sbb add lock test inc add mov popl or aaa popa pop push pushf and (bad) xor add sbb and sub add dec orb add and (bad) jl arpl sbb pusha cmp test cmpb dec inc add icebp cmp mov call bound adc and sbb lock pushf push test sub jo add inc add mov or aam test andb or or push sub pop adc mov lret push sbb roll test nop ljmp fstps rorb jb mov add inc pushf pop (bad) mov add add mov and mov dec jb aam mov out xor or add aaa inc (bad) add mov add push ret test inc nop mov xlat mov loop add xchg dec pusha (bad) js int3 mov mov call nop jge lock add add or dec add andb mov lock sub add and dec adc pop add addl lcall add adc rolb push adc adc push test mov push xor pop sub pop subb or or push mov adcl mov mov adc xor mov rolb xchg test or inc (bad) movsb cmp lods inc adc xor sub jno and pusha pop xchg adc loope sub or xchg add jo sbb sub adc lcall add (bad) or xor cmp and sub push fiaddl pop aaa and cmp dec int3 pop adc (bad) jl add sbb add test mov pusha push add push test or (bad) mov subb test xor adc das (bad) pop and ror push xor lret cmpw movsl lds sub cmpsb or xorl call xor xor ret cld pop inc jno xchg pop xorb mov jb cld add pop enter pop xorl add sti pop loopne mov add adc cwtl add sub dec or add addl add jno test popa std or adc add and or popa add lock lcall adcb adc leave xchg mov fs rclb mov cmp gs ret jo mov or inc (bad) pop sbb popa and xchg cmpb cmp test pop sbb cmp inc adc add sbb and and add and sbb xor cmp and sub popa inc (bad) pop mov push sarl add sub addl sub mov sbb pop test movsl aam mov add xchg push cmp arpl pop push es push dec pop adcl push jo mov pop push (bad) ss nop add mov xor sub cmpl pop inc jbe mov adc call (bad) cmp xlat mov add seto inc fcompl js jl add lock adc mov add inc push add pop adc insl add mov add or inc or adc add and and popa add pusha adc inc addb mov mov bound les xor sub sbb mov adc sub sub cmp inc xor add fsubs fisttp lock lret (bad) hlt xchg clc sbb ljmp mov test adc sbb (bad) pop dec loopne add adc int3 and mov shll and pop inc rclb and pop mov add pop pusha daa inc test xchg data16 jl add nop adc loope mov out or subl add adc cmp mov cmp jmp xor mov and mov outsb or stc xchg test pusha pop inc xchg or in test pusha int jo inc fcompl je or and push rclb mov add fmul orb pusha outsb andb shl push loopne or js add cmp or cwtl add icebp seto add ds repz mov inc push and mov add add dec or pop add pop push sbb or addl add rclb and dec add shll pop add and add and pop inc add pop push xor insb and or jo add mov sbb fiadd xorb or inc rcr sarb int3 jnp jae cwtl sbb cmp movsb cmpps pusha dec inc pop daa nop inc adc rolb inc push xchg lock std add dec test loop add add lock mov or add mov add adc mov mov mov sub inc dec or inc lods and add sub and add or xchg adc lock (bad) jo add dec shlb push leave add pusha inc outsl movups out pop or fs sub xor and cmpl and sub test rclb xchg add add add add or add loopne sbb add pusha nop je test pusha adc pop adc enter pop mov jl js pusha cld adc add adc cwtl add sub dec jle push add (bad) xor loopne (bad) add mov mov orb or sub mov sub dec mov roll add inc pusha popa or xor or jb jo mov sbb out icebp out mov shl or ret test lock dec dec jl and (bad) adc test inc xchg incb add test adc mov subl add roll sub inc adc mov or ret bound sbb stos push mov inc mov mov and pop test cmp pusha mov xor sbb sub movsb adc adc call and pusha int3 and inc pushf popa pusha mov aam mov ss mov or or test and rorb pusha outsb add sbb jecxz popa xchg mov add pop push xchg (bad) add or lods jns sbb mov and adc icebp xor xchg add push inc outsb add or andb inc pop popa icebp rolb sbb add test (bad) fiadd lock add rclb mov add and or test cmp and (bad) and xor xor scas or (bad) sbb movsb popa and ret add xchg adc xorb mov xor popa (bad) jbe sbb add adc add cmp pop daa nop inc add mov or add test enter sub inc test adc or sub mov daa inc (bad) or adc mov movsl dec push mov inc sub adc (bad) or or in or inc inc pusha or scas add xor ret test adc sbb xor or enter mov lret adc sbb push mov mov xor lock push fmul orb pusha add in add inc sbb adc sbb data16 loope cwtl mov nop xchg inc (bad) arpl out les and add pop xor test and push add push cmpb add add push sbb sub rclb and inc or adc adc movb mov push jmp int3 addl xchg enter and (bad) ret adc push and xor mov or dec or sbb loopne adc imul push mov xorl pop jo add packsswb add ret ret pop pop loope add and dec orl int3 jl sbb lahf (bad) fs sbb adc inc cmp or sets out enter adc dec (bad) adcb sbb adc sub in repz leave add pop mov pop inc push movsb movb shr hlt sub arpl and sbb dec (bad) xor pop shll (bad) mov rorl nop cmpsl or or adc insb mov xorl add add or sub pop clc pop xchg lcall dec sub xchg and adcb sub sub pop mov add sub je rcrb leave xchg (bad) hlt inc inc jge dec leave add sub stos addb adc add or add push cmpb or pop xchg lock inc xor adc xchg adc and dec or adc mov jl (bad) add adc movsb pop push mov xorl (bad) pop cmpl inc add adc rorl insb imul dec inc inc dec or and xor (bad) lcall mov dec insb push xchg test or sbb cmp lock xchg xor mov or push cmp add jb add outsl mov add jae xchg (bad) (bad) bound xor rolb dec rorb bnd inc xchg and xor push pop add mov cmp ficom cmpsb mov push or xor cmp add adc cmp add pusha adc mov mov mov sbb leave and add pop jo sbb leave loope or pop lock push imul adc mov jo add push fadds inc or xor mov add add dec mov adc dec sbb cmp cld das adc enter pop jo inc cmp nopl cld pop mov xor adc add cmp inc push add add add mov add or rclb and test jl (bad) add or sub adc cmpsb xor adcb mov rolb and sbb (bad) sub (bad) rol popa mov pop adc jb adc or sbb rcrb jb bound movsb popa and andl or xor imul test sbb (bad) jl (bad) jbe loopne lret push xchg add push loop add ret lret pushf inc and xor xor insb adc add sub rorb adc fwait or (bad) inc cmp data16 subb into adc push dec into adc aaa test popa dec add and or lods adc sub mov movsb mov (bad) xor mov movsb dec arpl adc xchg sbb lret cmpsb pop adc mov mov xor (bad) dec or add aas (bad) adc or inc imul add inc insl sbb add xor outsb xchg sbb rcrb push pushf adc sub push jo sbbl add add and enter pop add xchg add or pushaw jge dec ds push fildl add or add sbb add lar add les add adcb push add add adc dec or inc stos push and adc add inc or push adc push or push push push cmpsl test inc push adc adc mov push xchg mov push pop popf mov xor sbb test pop int insl or adc and pusha inc popa or sbb orb or fwait test adc push add inc dec (bad) pop push mov inc adcb push movsb sub enter test xor mov add and cwtl sub inc push or and add sbb scas pop cld pop and sub push fs fdivrs test pusha ja sarb mov lods sbb push pusha in pushf addr16 test or xchg ret and add fadds inc or shrb nop add (bad) lock xor jmp js add das and or lock mov jl adc add (bad) stos rolb adc add add loopne add stos inc xor test (bad) loopne shlb sub inc std or adc xchg adc and dec or push add and or adc cmc inc and xchg popl xor gs and andl and push add fisubl rolb imulb mov add inc xor sarl mov dec lahf dec and mov rcrl lahf ret add cwtl and jno sbb adcl out adc rcrb adc or inc repnz inc add adc dec loopne pusha inc (bad) xor rorb sub add adc les nop fild add mov aaa xchg inc sub add xchg adc test mov nop push add dec add nop lods pop and pusha mov jmp shr lcall push ret mov xor lahf and (bad) rorb in test pusha int3 sbb mov and or inc pop add loope add sbb add int3 rclb loopne add cmp push (bad) jle test xchg cmp mov jg cmpb wrmsr jp int3 add xor xor and add or add push nop lods add or sbb cmp or addb rol dec add (bad) push add and push add xor adcl addl or dec and mov xor scas (bad) imul add js adc xchg test xor cmp cmp lock pop dec sub mov add and jbe cwtl pop add add out mov (bad) repnz xchg add (bad) in adc mov fs dec mov and push or (bad) pop push cmpsb cwtl xor and dec (bad) pushf lods (bad) cltd add mov data16 adc push or ret and cwtl adc test test inc push or inc scas or sub out mov push in push movsb (bad) or out (bad) jo xchg lcall fldenv mov mov out add cs or sbb or rcrl jg and cmpsb cs push pop pop push pop les adc add int3 rclb mov add (bad) in or sar xchg pop aam divb push mov addb in xor xor mov cmpb xchg push adc shlb add adc xchg add sub enter add pop add pop loopne add jo xor mov rclb or or adc add sub les pop add push add push or xchg xor pop push fildl pop or or shlb push sbb inc mov pusha push stos sbb rcl call sbb push lock pushf dec add mov dec pop imul jno xchg stos sub pusha cmp adc xchg pop and lds pusha dec xchg inc sets mov ret add sub sub add sbb mov inc push inc cwtl and add xor or inc scas or sub bound cmp mov cmp pop loopne xor xor cwtl add rorb lret dec xchg pop (bad) aam (bad) cli push and add mov ret popa and adc add mov pop orb fildl sub cmpl pop and mov ljmp mov mov rclb mov cltd xchg pop pusha sbb call mov adc loopne add or xorb add push add inc mov xor rclb or sbb add pop xchg pusha and pop add adc or cmc xorb and mov mov rorb adc test xorb push enter adc popl sub dec mov lock sbb fs ljmp add push add xchg or fadds rcll and inc xor cwtl dec adcl fcoml loope add mov sub push dec fwait or add adc or addr16 add inc or int3 loop xor push sbb mov push or inc lds inc push arpl sbb cmpsb enter add fs add dec pop cmpl sbb (bad) xor add xchg enter add add add addl add sbb jg xor push push fld adc mov inc dec xor loopne add xchg int3 int3 pop pusha jle loopne and add or xorb or push (bad) sbb add inc inc sbbb and add add adc test and enter xor sub add xor inc mov icebp push add mov xchg shlb inc inc ret mov push (bad) aaa add xor ds or sub cmp or inc add push ret mov pop sbb push cmp cmp or popf inc call aam ret push add loopne push mov sbbb add mov ret loop add and js push dec xchg fiaddl add adc (bad) mov outsl mov add add add sbb push les cmpsb (bad) mov jo test mov ret mov dec cmp ret mov mov (bad) and subl push xor add pop inc adc mov adc mov add sub mov jno add addb int3 orb pusha outsb xchg add pusha or sub dec push pop xchg inc andl cmp push cmp add jle rolb sub pop mov inc cmp xchg imul push inc outsb xadd inc inc add add or pop add imul mov push and loopne add adcb or dec mov nop sub adc mov stos gs lret jp add rclb sbb pop adc xchg popa lcall lock ss test jo xchg jo mov or jb adc or and aam ret outsb xchg sbb jb shrl fisub rcl shr pusha cmp fcompl js inc imul jb push mov addb add adc nop add mov dec fwait jl add add inc (bad) push xor sbbb pop push repnz test adc movsb or pusha push add add or push test loope sub (bad) jo sub inc (bad) push cltd cmpsl or test (bad) (bad) xchg or rol push xor cwtl cmp sbb inc or enter imul add pop or add push push call mov in sbb pushf imul push adc add mov dec cmpsb pop jo sbbb or add inc add jo adcl inc je xor ret add jne push lcall and push (bad) lea xor inc mov jecxz xchg lea inc jecxz adc in adc dec loop arpl fcoms add cltd push or push xchg cltd lock add popa push dec insb dec jo mov and inc inc add test outsb or sub out test mov or dec inc or scas jecxz or arpl push int3 dec rorb sbb add xchg adc outsl inc ss lods fsubrs inc sahf adc sarl add sbb (bad) in push adcb or test push add or mov les movsb add add xchg loopne push cltd mov dec xchg sub and aaa enter pop andb sub nop les pop push enter or add dec add add pop clc dec xor sbb mov push or add icebp pop nop pop (bad) xor lock clc push xchg call mov inc push add or sbbb or pop add jg les xorb add incb add rclb orb lods inc mov test inc add call xor add and imul pushf add loop sbb adc rclb or push mov stos and daa adc imul inc (bad) ds adc lea arpl sub das push cmpsb adc or push (bad) ja sbb add loope add outsl loope sbb and mov inc xor mov sbbb leave sbb jo and push daa adcb and test sub pop sub lock add or bound (bad) lods adc push andl pop add cmp mov mov dec pop and cmp pop xchg mov cmp fdivs inc pop push mov mov inc mov xor adc cmp insl adcb fldl add push or roll jnp mov xor je add sub jo push mov stc das (bad) xor ljmp pusha and xor rclb adc add push sub and add adc dec or adc mov dec or mov push mov xchg or or jg insb iret inc or pop inc push xchg aaa pusha mov and movsb or jle or push xor inc jmp jb bound movsb popa es (bad) jo jo jl shrb cs call lods jnp and jo sub xor in out sbb add adc adc sahf inc add loopne sbb mov rcll rcll test lea popl mov or (bad) movsb lea add adc dec pushf xor add ficom cmpsb add add adc adc sub scas or lods test pusha mov call inc test ret jbe jle adc or inc inc je call loopne mov sbb cs pop xor test js add pop adc push cmp xlat push enter or sbb add add add ret inc call fdivrs loop pushf inc das ret xor lar add push test adc adc adcb mov adc sbb aam lds sub push add and or cwtl jg adc and or adc add addl in add xor lods loop xchg adc mov arpl add out cmp (bad) rol push push lea jecxz cmpsl or jo xchg mov xor subl add and adc ljmp loop adc push (bad) add and xchg pop lock jge test push cmp loopne pushf js cmpl cs dec (bad) insb adc (bad) xchg dec (bad) subb pop ss enter mov inc push or subl or xchg mov add insb pusha in js pusha mov jmp nop ljmp lock enter sbb in mov (bad) aam shll pop subb dec dec push lock push cwtl xor inc nop add add sbb cmpb adc jb je pop mov add dec pop loopne xorl add punpcklbw mov ret lock adcb or push je inc xor test mov lock inc add bound add and or inc dec or adc add or add xchg mov xor and mov fisttpl hlt or or jb pop xchg sub mov xor xchg iret addl rorl dec insb push xchg xchg subl and test scas add lock fmull push add dec les adc push mov shrl imul inc mov inc insb les and inc or daa add insb sub adc out xchg or mov sbb imul cwtl dec inc mov inc add sub mov mov sub rorb nop sub or add add adc push and or jmp arpl mov jle push out or xor or and and xchg add push enter and add adc add add xchg in sbb jecxz pop cmp sbb adc andl test push or pop inc repnz pop (bad) xor loopne add push cmp enter sub and xor add mov add or sbb sti add adc andb and add push jl rolb pop adc adc cmpsb and dec and or mov xchg out pop or (bad) jae mov dec sbb inc pop add xor sbb sub add daa add imul inc rcr lock or inc xchg sbb inc xchg sbb mov mov add jo sbb enter or xchg add inc inc xor add sbbl nop out cmp dec add or sets popf or mov or push pop add adc inc adc test cmpsl cmp sub (bad) lods adc jb adc sbb aam inc xor add inc mov adc out push loope into sbb lock add (bad) pop adc rcrb aam mov inc out and add push add add cwtl jg inc cmp cmp mov and xchg push call test mov repnz jns shl ret sbb pop leave roll adc add or add mov add add add aas data16 sub nop adc and dec or adc push add xchg rclb cwtl add gs push xchg or inc pop add ret dec pusha into xchg mov aaa cmp rolb mov mov bound inc adc add xor or push nop lea or inc rcr add lea adcl dec sub jno mov jmp mov clc sbb mov dec or add and rolb xor cmp and insb adc and cmp lahf pushf (bad) jmp roll (bad) jl add pop push jno test push inc dec or (bad) movsb or add loopne inc push adc xchg loopne push imul scas add inc popa roll sbb js xchg add push inc mov jo inc ficom clc xor cmp jb dec call pop xchg jne and push mov ss or jb sbb ret test xor dec (bad) or or out incb mov lods test sbb addr16 packsswb add dec mov sub mov push adc mov add add sbb add (bad) rolb or dec add add cmp xchg adc orb int3 mov roll or and mov sbb inc mov add fwait int3 xor sbb mov (bad) pop adc popa and clc dec and inc xchg sbb xchg data16 jae js mov les inc pop add cmpsl pop add outsl dec cmp shlb pop push and cwtl adc push adc adcl sub pop add dec xor aam add jl adc popf or popa sbb cmp in fwait and pusha mov jb mov sbb push pop js (bad) adc sarl and inc sbb pusha add sbb dec push lods sub xchg fld cwtl jae lcall punpckhwd push (bad) jbe out rol sbb mov inc push xchg add add or push add jg int3 and xor jb mov popf mov mov add sbb push adc mov sbb push mov xor sbb or sarl pop adc and jno add sbb (bad) jae mov cmp rcr adc mov fs mov cmp sbb ja fs xchg shlb mov lahf add adc mov push add or and bound mov nop cmp mov js rcrl pop cmp jo mov jo inc cmpl inc outsl add daa test sbb (bad) push js test dec smsw (bad) push (bad) mov dec cmp mov and into push fs mov bound mov add and or pop push test es adc inc mov xor iret cmp jecxz loopne sarb dec (bad) push add jle hlt jns add add or push add les sbb pop xor add inc and add xchg adcb xor sbb jo adcl int and frstor mov repnz or in push and mov adc inc adc sahf push push cmpsl xchg add ror cs xchg int3 push mov movsl or adc cmp push and and jns int jo cmpsl sahf cmp stos test adc xor inc mov xchg mov ret mov fld1 push lock add test out add and rcll lods hlt popa mov lcall in adc roll test loopne or push inc inc cmp add push add adc sub mov adc pop cmp add or out add rcrl jle sbb (bad) push gs cwtl or inc ret popl addl pushw loopne dec or jae or inc loopne pop sub push inc mov and ss mov xor or addb add cs jb xor addr16 cmp aas rcl fwait cmp ret (bad) aaa call repz rcrb hlt add in punpckldq subl cli and cltd (bad) add adc nop add sub dec or or add test mov sar and mov add pop add or adc mov jl test clc adc fistpl mov rcrb lea inc repz inc popa adc cmp xchg inc (bad) jae,pn mov or fnstenv int dec add jno cwtl push add jecxz popf aam pusha jne xor or add ret pop cmp mov cmp pop rolb add orb cmp dec or loope pushf adc dec or push inc inc xor arpl mov dec or adcl sbb dec test loope add jnp fistp sbb lock pop add add push bound xchg push dec mov jb xor add sbb imul insl mov mov and loopne add and add addr16 jl sysret (bad) repnz pusha ret or rclb orb or subb or add push mov lds and and les and (bad) or add dec or add push add ds setb and sbb repnz add mov mov popa pop push in je adc loopne (bad) cs pusha xchg add fiadd into daa add imul inc shl xor mov push pusha jne pusha mov les xor adc dec jbe mov add and ds inc sahf add daa jno,pt lds cmp test adc mov fisubrl xchg mov dec adc inc sub in ret xor cwtl adc test mov nop push (bad) mov add and sub lcall test cmp hlt or xor clc pop ret clc mov call in popa hlt add jecxz test xor stos jge jmp pusha add testb inc pop orb fildl xor sarl sbb fidivrl fdivrs add arpl mov inc cmp (bad) faddl mov adc lahf js in aas add pop jle (bad) mov stc dec out movups enter push ds adc andb add addb aas inc arpl mov add and mov cmc lahf mov cmpsl out aas jns (bad) loopne adc andl and adc nop adc jg lret andl and cwtl cmp ret jns (bad) pop push icebp arpl movsb rol (bad) and inc inc pop rclb add sub popa adc adc es mov cmp mov xchg outsl jo test in sub add pusha push (bad) mov test adcl push loope sbb sub mov fdivrs gs sbb cmp ficom aas (bad) je divb jo pop fs fiadd or psubd orl aas stc xchg nop add inc loopne sbb js xor enter or adc push add addb rolb pusha add fmul orb outsb or test cmc push push orl add repnz xor (bad) ja mov mov out inc mov enter cmpxchg adc add inc push add pop push addb (bad) cmpsb sub pop mov add adc mov nop and incl jmp addb push adc add sub call dec lods pop dec push xor rorb pop or pop (bad) sbb xor push fadds adc mov sbb sub into daa add in and or inc mov pop adc dec test fistp cwtl sbb popa xchg dec and or adc scas and xchg add addl dec add or and or add xchg adc mov push adc mov into sbb jb mov sub inc push sbb cmp mov inc mov mov lret ficomp pop or ja jo xor mov popf add ficomp pusha cld dec pop les orl add loopne mov pop add adc pop inc nop and add jns adc cmp lea (bad) mov cmp (bad) inc inc test add adc orb mov or sbb or addl add sub inc loope sub (bad) mov je andb adc rorb adc pushf add jle push add test (bad) or repnz xor or and pop ss pop add adc jno sahf pop lock push and mov add adc pop ret dec jnp sub add xor and push or mov adc xchg adc sub or insl mov or or icebp cmpsb adc das add dec inc xor jno add inc inc add adc jne addb add es xor insb shlb sbb pusha adc inc pop mov push test push int3 aaa pusha xchg or and sbb or adc adc mov out cmp (bad) xor cwtl sub loope test inc fs fimull or mov and adc (bad) jl les mov adc xor xchg cmp and cmp shrl xor and test push push enter add or dec add andb or add sbb es sbb or inc add or add mov cmp roll and cmpl pop loop adc xor sub sbb or add or pop jno xor add inc mov nop repz adc dec xchg xchg ret sbb mov (bad) sbb in inc bound setae popf popa adc adc or daa lcall adc add xor (bad) push push rclb push bound cmpb aam dec xor outsb inc jbe mov test ficoml js mov popa orl lock inc sbb sub les daa aas push adc das mov or test test sbb pop mov and xchg xchg dec inc push push int3 ja xchg mov push ljmp mov inc imul adc call adc inc nop add xchg inc add shr ficompl cmp jo dec push push test mov inc rorb inc inc add adc xchg add daa add inc repnz mov (bad) cmpsb pop xchg sub add push xorb and or gs loope push jp loopne and inc sub or xchg test add push int push icebp mov addb push xor and enter rcll push push xor movsb popa inc lods xor rcr (bad) mov and sub aam push lock mov and xchg mov inc mov rorl ret cmp call inc mov jne fsts sub xor push dec mov inc repnz sub adc jg or xor add movsl gs sub add enter sub fimull adc movsb cmp or test rcrl jmp adc jecxz sbb or add les rolb (bad) aaa add mov add adc inc add sub add sub pop mov mov inc lcall mov push add or popa and or cmp push fs add push (bad) jo nop mov xchg pop inc add inc cmp add and and inc dec add add add xor enter sbb mov (bad) jo lock call subb addl and lret sar cmp daa insb sbb mov call xor (bad) xchg add adc test sub inc pusha rorb es inc cwtl mov dec add sbb xorl daa push cmp add and pop sbb pusha cwtl add adc adc and movb xchg inc push int3 adc add mov or adc lods shlb or inc and pop rcrb mov mov sub ret mov js repnz xchg or rcrb xor mov in (bad) fcomps rcll push xorb adc push inc inc sbb ret test andl inc push adc inc sub clc loopne bound sbb adc test dec and dec fwait das repnz adc inc sub add inc cmp xor xchg pop mov add pusha adc sub das rcll int addl pop add and loopne cmp and or cmp jo xchg dec add and lret sar cmp daa insb add push (bad) jp je adc aas les add mov sub or rcrb (bad) mov mov sub inc rolb nop xor cmpsb add dec cld pop push lock dec mov or add lds andb daa add adc sub or mov adcb and adc int mov inc jb mov or cvtpi2ps add adc add hlt sbbb pop and mov adc addl adc pop and xor xor dec mov addr16 fmull inc aas and xor jl je cltd pop imul push movsb dec mov mov sbb mov or mov add jae and lcall and or sbb popl xchg insl xchg and push xor orb inc insl mov sbb inc push jno xorb and adc rorb adc movsb xor (bad) movsb add pop add add add mov add add inc dec fimull sub inc sbb add xor sbb rolb push rcrb adc mov sbb popl fadds js mov mov inc dec js fsubrl xchg or adc cmp xor sbb pop push ficompl xor add and xchg test (bad) shlb and enter lahf nop mov xor mov gs sub inc xchg icebp dec mov add out inc dec or and add (bad) mov loope lea push movsb adc mov xchg cmp adc addr16 sbb psraw cli mov adc adc mov jb xor pop dec cmc inc mov adc jo mov push push adc imul pop pop dec sti inc sarb add and sbb mov mov ss pop mov (bad) jecxz adc dec or inc push inc orl ss shl sub dec xchg push mov rolb and add and dec inc or pop (bad) inc push in add in imul or les adc add push add adc mov and push add inc sub nop or dec mov push je loopne add xadd push inc bound xchg and push mov adc push adc or rcrb nop aam add rclb xor and outsb (bad) fimull and or mov rcrl mov add inc shrb cmp xchg or fldt adc xor pop test sbb adc movsb pusha lods daa cs enter xchg movsb lea jmp xor add and pop inc icebp fwait adc adc sbb inc dec dec and bound sub dec shlb mov and adc dec dec sub xor and dec (bad) js xchg dec mov ss and xchg and (bad) cmp push pop mov xor es bound dec mov aaa push cmp lock fs xor je test or push inc add push dec adcb add dec dec cmp add and sub js aam or daa loopne adc nop inc lock int3 and push push jp ret jle fldcw inc adc mov inc negl bound xacquire and add or add add hlt sbbb xchg call js xchg addb dec mov sub or inc dec cmp mov xadd stc lds push insl and inc cmp sbb dec dec sub fldl outsl and or outsb (bad) fiaddl push and les xchg or push inc pop xchg jecxz adc push call dec es test insl inc inc aam nop mov inc and pop inc sbb lea in and add and and sub pop adc add xchg hlt test push sbb fwait dec and xchg add ret inc dec les push test pusha test (bad) and push or pushf mov adc push or shrl mov mov enter mov xor push dec mov inc mov xchg bound dec mov mov dec shll rcrb and push orl xchg outsb xchg andb dec mov les arpl and push sarb popa add or rcrl add and mov rolb movsl imul mov push mov and adc rorb adc pushf add jle push add mov ret hlt cmp ret adc das enter add and subl push mov xor adcb add inc dec mov adc mov pslld mov push andl iret rorb xchg add inc mov enter inc cmp scas lahf sbb xchg sbb push add js in cmp sbb xchg add adcl mov fs and mov adc add popa xchg or inc or and sbb adc cmp sub dec add adc mov and ret inc (bad) mov dec push mov pop or dec bound cwtl jae (bad) xchg inc mov push pop inc sbb jbe (bad) or mov mov add inc dec pop inc xchg push enter sbb inc and mov adc lcall fldl adc test adc loopne ret add push in adc test pop sub ljmp leave insb dec push hlt mov inc pop jno push in hlt mov and adc rorb adc add sbbb sbb pop stc insb lret xor add loop mov (bad) add decb rclb push jl les xorl mov inc cmc or mov adc pop dec repnz fldcw jmp int add das dec mov fimull push push push adc lods add inc jo sar xchg shll dec add sbb nop push and scas adc jecxz mov daa inc and cmpsb add or sub je movsb fldenv jmp add adc xor push adc add add inc adc xchg ja out sbb xchg mov popa sbb dec inc bound cwtl mov sbb sbb jne inc cwtl in mov push loope adc addl xchg sbbb cltd inc lret xor cwtl pop mov ret ret cli sub (bad) cltd ret pop sbb pop push xchg jecxz jge push mov push lcall adc das push test push push push (bad) int3 ret insl adc add adc xchg add daa add inc or mov mov or or sbb cmp roll and cmpl dec ret xor add dec (bad) adc and cmc push cli lcall or fadds jle aam movsb sub push push push adc movsl and sub inc pusha rorb imul and xor cmpsb nop fstl shlb sbb pop push mov add adc cmp sub fwait or sbb xchg push inc (bad) loope inc mov inc or adc push push or inc xchg setae adc lds pop mov fwait xor add fimull dec inc stos insl or and insl mov mov and jbe mov cwtl inc add xchg mov lcall pop xor leave test sub jl jo sbb cmp jne mov xchg stc cmpsb jmp push and ficompl sysenter add adc xchg (bad) jb xor lahf js test (bad) ss xor push or cmpsl inc sbb fistl repnz loopne orb or push add subb mov jg int3 xor add mov jb mov inc mov clc andl jo mov sub les or inc xor popa or inc dec jno ljmp ret loop lds imul pop cmp enter push xchg adc int3 das popa push add adc test cmp sarb hlt out cmp xchg je test inc ljmp mov jb mov adc int les push cmpsl pusha push loopne add or lea addb add and cmpsl cmp jp inc popl clc xchg test and les inc mov lahf lods lret and jbe pop xchg xchg inc cmpsl insl add sbb push popf roll dec dec (bad) push loopne add pushf andw and add stos adc movsb sub flds push pusha jae (bad) or and aaa ror in cmpsl jns in dec add xchg ret out or adc lock and jb add loop test cmp inc aaa popa inc rorb cmp je cmp push cmp cmp in rcl mov sbb dec pusha inc inc ljmp mov mov and dec jb shl lahf adc daa int (bad) adc pop jo daa aad (bad) dec sbb rclb mov pop cmp xor hlt cld subl mov or pop pop shlb mov or out dec sub ret rcr and test inc mov (bad) lcall inc cmp push cld cmp mov adc in add xor mov push adc sbb pushf sub inc cmp (bad) jmp pop andb dec or jmp add push push push repnz enter add adc push in sbb cmp jecxz mov or jecxz adc stos adc popa xchg or push inc lret shr xor les int dec sbb inc sbb mov pop inc cmpsl test add rcrb stc jge fsubl in and pop push call pusha add fs jl dec mov push out and or inc add movsb or sub movsl inc dec sub insl rclb lds test xor out xchg inc xchg pop mov cmp inc or mov inc addr16 mov push jns sub add mov sbb xor mov jmp rcl jb jne and sub inc and push push popf inc stos ds cli jl xorb sub lock xchg test jae or movsl add xchg add cmp ja ret pop test sub push push pop add test xor add dec or leave fwait leave movsb movsb xchg pushf in lret sbb es push in cmp adc xor stos dec push jb aam cmp push mov mov movsb movsl xor inc loop mov push scas movsl xorl or xchg lret sub add sub inc cli sub xchg push xchg jae test push xor mov das sub dec or ret adc mov mov adc cmpsb xor setp int xchg dec enter stos iret fs adc add jne sub loop sub repz (bad) movsb mov pop test push sahf je sub and aam es sub dec mov push ret inc adc ret jne sub insl (bad) insb imul loop in mov xor cmp daa mov stos pushf shl lahf adc ljmp and es mov rclb call loope push mov xor xchg sahf mov xchg inc movb and lret jmp mov cwtl pushf daa stos add dec push shrl dec mov push add push add add inc sbb sub or or arpl (bad) daa rorb mov and testl test mov mov mov jae and mov cmp mov inc xorb jecxz roll push sub roll loopne or orl sub adcb adc pop and mov push add sbb xor (bad) adc add test dec mov push rcrb push movsl and push imul test and push mov into nop nop cmc dec xchg add jo mov dec or and xor xchg cs mov push call xchg clc sub push and test and or inc adc mov sub lret sarb leave push test cld movsb jne push addb or or jns mov shrl xchg dec pop push or cmp movsb repz repnz movb pop stos or push push mov pusha in sub cmp jl lock jno aad ss mov enter mov push lds sub add add or dec add mov and push bound sub push test inc sub ficoml jl (bad) stos test xchg adc popa in ret and jne mov add xchg lock lahf xor and cmp nop mov imul dec out adc test je loopne (bad) and ljmp jp and insl bound mov cmp xor sub and lods mov sbb stos mov cmp and and lcall and and sbb cmp aaa sbb cwtl lcall loope inc mov test inc leave test das cvtpi2ps sub or int3 in sub or jmp pop or lods lret push es in test dec cltd in lds mov test fs xchg push pop aam push bound inc bound mov dec or dec pop inc sarl (bad) mov mov push push or int3 in insb insl push sub into (bad) sub push adc xchg loopne rorl and adc xlat pop data16 jbe icebp and ja inc adc inc push rcll pop push rorl or pop push cltd popa mov test mov xchg call jo in loopne mov in mov pop adc inc les popf and add ljmp sub out sub lret jno and ret jnp mov test loopne push mov repnz imul es xchg dec dec sub lods lods dec xchg xchg cmpsb push testw and add mov xchg ret dec xor les sub repnz mov nop and xor or xchg in and mov inc test push push pop fisttpll pop sbb enter shr mov push cwtl mov xchg (bad) push mov mov and xchg enter sbb fstp fistl push adc (bad) rorb jo stos fadds push push jno jb xor ja push jb inc jo jns dec dec adc push push js adc mov fisub stos mov leave sub fisttp rclb or mov in data16 daa and rol test fnop fsubl fwait icebp and mov (bad) stc adc and (bad) (bad) lcall data16 xor je outsb dec dec bound push dec xor inc push ja insl cmp inc je inc dec push dec inc imul xor popa push and mov and cmpsb aaa mov xchg mov and mov mov and push xchg sbb dec adc xchg push int3 cwtl xchg fimul inc adc sahf pop sbb sahf sbb pop fsub pop outsl bound xor arpl scas (bad) jmp push or aas icebp sub mov sub ds jae mov icebp sbb and jmp or xchg (bad) (bad) stc adc pop clc nop fld test (bad) stc adc adc (bad) (bad) (bad) and (bad) call cmp (bad) stc adc adc (bad) jmp and xor or scas jmp push inc xor mov push and js push (bad) stc cwtl fistl ja mov cmpsb (bad) and xchg mov pop bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov ljmp es bound push xor mov repz xor cmp pop mov lcall cmp mov scas dec inc inc gs ja push aaa jbe cmpsb and and and xchg test fdivrs inc fstps ds mov faddp jo push mov dec push stos mov push nop loop dec cld mov ja inc dec inc jmp push cmp jl lret dec or mov enter int3 sub dec sub inc out dec inc call inc dec xor sub stos or xchg pusha loope xor push inc dec lea sub popf cltd in dec push inc and stos xor aas adc dec xchg push test pop sahf push mov mov inc cwtl int3 shrl cmp jb stos adc dec ljmp mov movsb (bad) and leave out callw addr16 xchg push pop imul (bad) mov out insb xchg js pop imul arpl inc pop pop adc pop les daa xchg mov mov push insb enter xchg adc xchg dec int and xor repnz adc in inc pop insl loop dec xchg aad mov es xchg xchg incb hlt aad and jle and cltd jg and inc test sub das push adc inc xor adc inc adc jl gs cltd sbb pop scas fisub scas xor xor lret or push rcrb movsb mov xchg (bad) mov mov pushf fisubr xchg xchg insb mov jp adc dec jo insb mov dec enter mov mov xorl es sub les test inc push inc daa inc sbb aam mov mov and and jbe sub fs jne dec (bad) mov cs xor sub loop ja je adc push or inc pop or or rorl mov or sub mov jp mov cmpl cmp dec stos ret mov mov mov ret dec addl inc mov cmp or or dec stos cmp mov pop mov dec sarl sbbl and sub dec lcall sbbl or or or sbb or mov xchg stos rolb xor inc mov jp lret cmp dec stos push ret xor arpl xchg mov and ret mov adc mov shlb mov mov xchg mov mov and shll leave mov ret sub or jnp xchg mov adc jnp dec fwait cmp or or or jnp inc mov mov mov cmp jnp mov or lret mov dec inc lcall or xor stos sub dec or dec xchg xor ret or adc xor and ror jns lret ret mov rcrl or or push mov jae sub leave jns lret lret sub dec ret lret jnp jns stos cmpl or push xchg xor sub jnp xor pop cmp dec sbbl jp lret (bad) dec bound xor ret fwait or cltd ret lcall shll or jp or or xor mov jns jnp or sbb add xchg test out mov xchg call loopne scas sahf into in into mov dec cmp push data16 ja push pop imul inc dec push inc push dec push inc addr16 ror jmp data16 jmp leave (bad) imul imul xor pop mov insl (bad) xchg xor push adc je je gs data16 (bad) movsb test xchg cmc arpl movsl xchg movb inc inc xchg xchg data16 inc ja hlt push movsb inc adc xchg inc adc add movsb adc addr16 pop cmpsl inc gs test xchg movsl xchg pop cltd push mov lea es out sub inc inc dec sub mov and mov cmp mov mov gs xchg nop out (bad) xchg (bad) data16 test pop sub inc int3 mov test dec out testb out push mov adc mov int inc adc cmpsb shll cmpsl je jns sub dec ret lret jnp adc mov ret xchg mov cmp pop outsl insl inc mov dec dec sub sub (bad) or sub mov cmp pusha rcr cmp nop dec dec call jns or fnop inc jb and (bad) sbb cwtl lock xchg imul dec or dec sub xchg je (bad) hlt inc movsl add push fs adc ret mov and xor mov cltd mov jb sbb in test xchg sbb xchg xchg fs inc push inc xor stos movsb fwait sub cmp dec jg or mov mov movb inc sub imul addr16 aaa das adc and rclb adc sub outsb ljmp dec inc inc cmp cmp (bad) loopne push cld inc call mov inc and bound rcrb xchg inc ja and and popf addr16 xchg pop sbb xchg or bound mov xor mov and arpl inc xor lods sub inc and pop dec xchg dec into or or push xor inc fs idivb xchg cltd push or in es xor xchg adc mov cmp xchg cltd cmp or sbb sbb mov inc daa xor test test inc in xchg mov xchg mov adc xchg add fs inc xor iret xchg xor mov cmpsb addr16 push mov or push mov (bad) test inc xchg mov push pop push and lcall lds aad sbb push and cmp daa mov lcall dec imul inc mov fstpt push push push mov dec dec sub dec sub dec data16 xchg pop rol sbb icebp pop mov xor lret movsl sbb sub xor inc mov pop lcall and push popa and and push pushf movsb (bad) call adc inc les adc and loop push in fs mov out ret xchg rol fs push das xor cmp dec and adc and loope adc sahf sbb push adc pop imul push push adc adc (bad) mov (bad) rolb and xor cmp adc mov inc data16 out and enter sbb push insb dec inc inc sub movsb movsl mov adc int3 fnop dec lcall and xchg and nop lods and fbld lcall int3 and xor dec mov and push (bad) or inc xchg rorl out push ret fs ret adc sbb adc mov sub rcll dec cs (bad) call hlt ja (bad) cmp and fnstenv data16 adc divb pop mov dec pop stos mov sbb fstl mov mov mov nop and aaa inc push inc mov cmp push cltd xor or and test jbe inc cmp jle fs xchg pop mov xor cmp (bad) fcomp and cmp out arpl cli and lods sbb add dec inc outsb repnz sub or inc adc adc popf fdivr (bad) clc xchg pop jl stos cmp enter stos adc int3 dec dec fcoms dec push mov stc mov dec pop cltd add jecxz cmp mov dec mov ja adc or imul cmpl jns (bad) sub dec mov and popa leave mov dec mov ret cltd mov dec stos or and xor or imul cmpl jns (bad) sub dec mov jnp mov arpl xor dec cltd (bad) mov mov or mov jns imul lret adc jae or add dec mov jnp or adc jns rorl dec (bad) ret mov jnp and mov dec lret mov xor sub dec pop jb or or xor or mov jp pop ret dec inc fwait and lret xor mov leave mov dec xchg xor xorl mov jp sbb sbb jnp adc dec xchg xor xorl mov jp sbb mov and jns lret lret pop xor stos add adc dec bound ret mov imul or dec cltd mov cmp jns rorl or xchg jns imul lret adc mov jae lret push mov jnp ret pop sub dec rcrl or or push mov jae lret push mov jns sub adc leave jns lret lret pop jns jp cmpl jnp jns sub pop xor or or lret mov mov mov jae shlb leave jns lret or sub cmp jae shlb leave jns lret lret pop jns jp cmp sbb rclb xchg bound jnp lret or and push or dec mov jp jb or dec mov inc push push popa stos or or cmp or adc jb or jnp push rorb cmp or or and or dec addl bound or push inc pop push or or dec rorl or inc and inc adc leave jns lret lret sub mov inc mov jae adc leave jns lret lret sub mov pop mov jnp pop xor or popa stos dec popa mov or or (bad) rol mov or dec xchg xor mov jns sbb mov adc and adc and or jae lret push mov rol jp or sbb mov mov jnp mov or bound rcrb mov jp or and jns xor cltd jns mov jnp xor jp xor adc or pop xor mov add adc bound adc cltd (bad) rorl or or or or mov or push mov sub ret or mov sub and jnp pop mov xchg dec ret mov sarb mov mov mov or push adc dec ret xchg pop bound mov or cmp adc ret cltd mov jp xchg sub mov or mov inc sbb ret ror jns jnp sub push or xor cmp ret ror jns jnp pop mov or or and jae ret ror jns jnp mov jnp test push stos imul jnp and adc jns imul and sarl mov xchg dec rcll or imul or mov sbb pop (bad) lret mov or mov jnp jns stos xor sbbl cltd jns mov imul dec (bad) or xchg lcall xor xchg sub push fwait mov imul fwait xchg or sbb sub mov bound lret ret stos fwait fwait dec stos imul lret xchg or adc or and rolb jb rcrb jae ret ror jns jnp mov push xor sbb ret ror jns jnp ret or or dec jb jp pop jae and jnp mov or dec mov pop dec mov or fwait jb mov mov cmp mov xchg dec mov mov and push jns jb or dec mov inc pop or or jnp ret lret or mov mov dec (bad) push cmp cmp and push or mov cmp or or bound or cmpl mov ret sbb lcall mov stos mov ret dec cltd (bad) dec roll or dec mov mov or ret pop rol and stos movsb cmpsl daa pop test mov xor pop xchg lcall mov sub sbb sbb aaa stos movsb mov mov sub fwait daa xor mov xor mov xchg jg fs pop das fs jns ja addr16 data16 das imul push cmp inc inc push push outsl dec imul inc das cmp imul xor and pushf push fcmovnu xchg inc mov and jne xchg jne xchg divl add les addr16 xchg je inc jecxz arpl ljmp cmp ret and pop ret dec inc fwait and lret jb mov leave mov dec xchg xor xorl mov jp sbb sbb adc rcrl jb aam scas orl cmp dec dec inc dec insb inc cmp xor xor and orl cs mov mov xor cltd in mov testl ss push out daa mov gs lods sbb stos test sub movsb cmp movsb cwtl mov pop cwtl in flds scas jmp test xor movsl daa jb test out jb inc cmpsb cmc test arpl inc push push popa stos psrad xor jnp push rorb xchg adc xchg test and cmp dec add push fs dec inc jno dec test xchg sbb rcll pop dec aam fcoms nop int3 fcomp push fsubs cmpsl xchg cmp sub and and fwait and sbb dec adc lods (bad) jp clc sahf mov je test cmp xchg sbb test xchg (bad) enter fs and mov pop adc orl pop xor nop faddl mov and mov push adc lods fsubs inc cmpsb notl and push push outsl int3 mov iret loop dec enter cwtl gs sbb or mov cmpsb or inc dec lret push jne (bad) aam cmpsl xor lods and mov bound jno enter movsb leave loop popa les adc (bad) imul push xor nop fnstenv (bad) adc and xor and xor sbbl nop test stos mov sbb pop popf popf fsts push pop xchg adc pushf fcompl xchg fsubl ficomp adc pop adc out mov lret loop jp mov pop jb xlat jmp pop popa loop dec mov fisttpl mov inc push popa sbb sub aaa dec mov fmull xor push sbb push xor add int or xor lahf movsb sub cmp ss cmpsl lcall push dec fisttp data16 sahf sbb and mov xchg frstor int3 mov cmpsb xchg mov push pop xchg jg lods (bad) cltd adc popf (bad) pop xchg nop dec push dec lret fistl adc mov imul sub dec mov mov xor mov jp adc sbb leave test or dec dec jo adc xchg push dec (bad) jo insb (bad) out xor outsb nop aam xchg xchg mov nop pusha and xchg sbb mov sbb aam mov push aam lcall adc push pop adc inc jae push inc adc in cmp xor inc dec pop lret pop sbb sbb cmp lret sbb cmp dec sbb ret pop arpl jmp arpl jp adc push int3 loop inc loop push icebp sub inc cmp movsb xchg pop (bad) nop cmpsb sahf insb xchg fmuls cwtl xchg aam push mov xchg roll imul inc das cmp in ja das clc mov bound inc decl insb das dec ja inc dec (bad) call dec call addr16 xchg or pop daa or xchg inc inc xor mov inc je inc mov xchg int3 imul aaa outsl inc int3 (bad) mov into repnz xchg add mov mov sbb inc jns xor stc sbb xchg push jae stos sub movsl and (bad) and and push jmp imul loop arpl push jne xorl fnop xchg push loop imul inc inc inc imul inc inc push inc dec inc inc inc dec imul xor imul inc push imul xor inc dec insb inc push push dec push dec xor imul inc push jns push dec cmp xor inc dec insb inc push imul push push inc dec xor push inc inc inc inc inc inc cmp xor jns push pop inc dec inc inc dec jbe bound inc inc dec push imul inc inc insl inc dec inc inc dec je inc inc xor push imul inc imul das dec ja xor dec jo inc xor dec inc xor inc inc outsl push inc inc inc xor push imul inc imul inc imul inc imul das dec ja jbe push pop jbe push push dec push imul inc push das cmp inc dec insb inc inc push das push das jp inc insl push dec inc imul jp xor ja das dec push outsl inc inc inc inc inc dec das imul addr16 addr16 arpl push ss cmp inc inc dec xor dec inc inc imul dec dec dec jne inc dec inc inc inc aaa xor inc imul jbe arpl push das xor ss xor inc inc pop push pop pop inc fs popa dec push js aaa ja dec sub cmp das dec push inc ja inc push push insl inc ja push jbe data16 dec xor jne cmp dec dec inc inc dec dec dec insl push dec inc das xor imul inc das cmp inc outsl push inc inc inc bound xor dec inc insl push dec inc imul dec jp inc cmp cmp imul push jno dec addr16 ja inc push push insl dec cmp das inc fs inc push push inc push dec insb inc inc dec dec inc insl push dec inc push push outsl pop push inc aaa inc addr16 inc dec cmp ja outsl dec popa dec addr16 push addr16 outsl jbe outsl inc inc dec addr16 inc inc inc inc xor inc push cmp inc dec push das jbe das push pop insb inc xor push aaa das das das das outsl inc push inc inc inc dec je xor addr16 inc ja push inc ja inc ja jbe push pop jbe das xor ss data16 das das das xor inc jbe cmp push inc imul jns push push push inc push addr16 push sub inc inc inc inc imul jae push ss push inc imul push dec insl inc fs inc dec push push imul inc push push outsw jns push inc inc dec imul pop inc dec ja pop push inc dec inc fs popa dec push imul addr16 inc push dec inc xor outsb inc addr16 inc imul dec cmp ja outsb push push xor inc jae inc inc inc dec jb outsl jae imul dec push addr16 dec js xor inc imul jns das das cmp dec push jae inc pop xor push inc inc push push jbe xor dec aaa dec push das imul xor dec cmp jns push push imul imul inc pop arpl outsl push inc dec inc sub ja je jne inc inc inc inc inc jno push pop xor dec jbe xor push inc push pop pop inc inc aaa fs inc inc insb xor dec jp inc inc inc inc sub inc inc dec jb dec xor inc dec jno pop xor inc dec push push gs inc push inc inc cmp push xor fs push push je pop cmp xor inc gs push push inc pop pop inc cmp jbe ja jbe push pop jbe popa addr16 das fs push push data16 das das xor arpl ja dec addr16 inc inc dec inc inc jp push push inc inc push inc addr16 ja je inc dec pop inc fs push xor dec push inc inc dec dec dec das xor aaa dec dec cmp inc pop imul bound fs push inc push xor push bound inc outsl inc inc inc insb pop imul xor cmp inc inc pop push ss xor inc inc inc inc js jp push ja inc pop insb cmp push inc imul inc inc addr16 fs outsb das fs outsl push push jae inc inc insl inc pop addr16 inc js pop dec inc inc aaa inc imul jns push push push inc pop addr16 inc js pop jae push inc inc js pop dec inc push cmp dec dec das das das sub xor inc imul js imul jbe dec das xor insl das das das das addr16 xor inc dec push dec das xor imul das das das sub imul arpl cmp insb xor inc inc dec inc push jp push push inc jo das das das das xor das push pop jbe push outsl jbe js pop jae push inc inc ss push das das das xor addr16 fs fs ss inc inc inc inc inc pop imul dec inc inc dec jbe push pop jbe push jbe xor jbe xor inc dec arpl dec push inc inc dec pop inc inc inc inc outsl gs das das das xor inc pop insb xor inc inc dec das xor aaa inc bound push push inc inc dec jne addr16 inc inc dec and test mov mov mov and mov test and sbb mov sub mov sub push xchg xor loope and xchg xor rcll fs add movsl sbb sarb or sub (bad) fs dec push imul jne inc fs push addr16 xor push xchg mov inc xchg push xor movsl push xchg xchg hlt cmpsl jae adc cmp mov (bad) and mov dec push jbe push push dec push imul inc push das cmp inc dec insb inc inc push das push das jp inc insl push dec inc imul das xor ja das dec push outsl aad ficompl ficoml (bad) pop fistl adc dec sub dec int out or cs and pushf mov xor lods sbb daa sbb and mov xor cltd movsb xchg stos test cwtl xchg cmpsl mov and cmpsb sub sub cmpsl sbb cmp movsl and movsl cmpsb movsb clc mov imul bound xor dec inc jmp into jmp sub out enter sub sub dec sub in out pop sbb adc aam push fidivrl bound outsb mov repnz lcall lcall mov in (bad) fiadd xchg or fdivrs xor fdivrl lea xchg push fxch out push aam cld xchg mov icebp sbb and pushf mov sub stos xor mov sub mov sbb les xchg adc mov adc xchg or fadd inc dec push and fstl or dec push ja xchg sub bound xchg popf mov (bad) fs in push jae les xor xchg divl dec imul mov cmp push jae inc pop xor dec sbb adc adc rcr adc jae xor dec cmp jns repz lods inc mov je inc shll adc lds xchg adc fyl2x and rcrb or adc ficom inc dec dec dec xor inc dec jno pop movsb and cmp test pushf loope data16 inc add and pushw cwtl test cmpsb mov fs adc jns fwait aad xchg or pop push xchg sbb rcrl mov and jno mov push xor dec push inc inc dec cltd pop xor and adc sub jae xor jg inc xor cltd imul adc add popf or lahf adc cmp popf push mov inc cmpsb jno xor xor mov xor mov mov aas adc mov cmpsb xor insl xchg popf and and sub aas mov inc inc push push icebp pop lcall ss push adc inc inc jae outsb and jmp arpl dec (bad) daa fs fstpl dec lret mov push cwtl shll xchg sub pop (bad) aam and (bad) cmp or dec pop enter or mov sbb xor cltd xchg xor fwait adc es (bad) sub xor xor sarl adc (bad) nop lods xchg mov push sub pop push push in gs movsb cmp cmpsb or cs call mov rol jl or pop in xor jns or sahf adc das inc jb fs popa inc push push jbe jne xor push imul ss inc and dec push sbb pusha rorl push pop stos inc sahf pushf inc xchg push inc xchg inc push ds out add mov and mov insb nop pusha mov shlb mov dec cs xor adc mov or mov dec mov cmp jno push jae xchg cmp inc inc cmp dec sub adc dec or push das adc xlat (bad) (bad) cmpsw adc dec sub and mov and dec xlat (bad) les mov mov inc mov sub fiadd popa adc mov mov dec push arpl inc xor mov mov adc sbb es lea data16 stos mov mov daa adc adc xchg in pop outsb sub lret push or rorb popf aam push push push pop xchg cltd lret fstp pop rcrb adc sbb fwait int3 cwtl nop push push push push push (bad) push sbb mov push (bad) push sbb pop xchg sbb adc cltd into dec aad adc adc push sbb pop xchg lcall push push (bad) push sbb pop cltd fwait nop fwait push or pop xchg push (bad) push sbb dec (bad) fwait push or dec fcom dec mov push dec mov rclb push push pop or int adc sbb sbb xchg push adc adc push push push push fwait push or adc cltd into dec rorb dec dec rcll or int sbb or pop fimull adc push pop aad push cltd push cltd sbb rcrl sbb sbb dec aam lcall xchg adc push or rorl int push push push push push fstl dec adc push push push sbb dec aam lcall xchg adc push or fstps fsts dec xchg adc push push pop xchg push adc push xchg fstps or lret lret fcomps mov cltd sahf nop xchg push push ficoml push adc pop int mov xchg pop pushf aad sbb mov dec push rcr adc xchg push push pop dec ficoml lcall rcrl push push pop xchg popf mov nop push dec xchg int push push push push sbb sahf xchg ficom rclb push sbb sbb or push dec pop pop fstl sbb xchg pop pushf aad sbb mov rorb aad dec int3 aad dec xchg cltd ficoml rclb adc fsts int cwtl ficomp pop rorb cwtl sahf nop aam push rcrl push push dec rcrb rorb int popf fxch fimull push or pop push sbb rorl int3 push rorl dec fmuls fsts fwait int3 adc push push push pop lea int3 aad rcl push push pop adc int cwtl ficomp pop rorb cwtl sahf nop aam push rcrl push push dec rcrb rorb int popf fxch fimull push or pop push sbb rorl int3 push rorl rclb push cltd pop aam cltd rclb sbb push push dec xchg adc push push rcrl push push pop sbb rcr rorb xchg popf fsts push push dec ficom push pop aad push push sbb rorl int3 push rorl adc adc push pop sbb mov xchg ficoml push push push push push adc nop push push adc push or adc mov adc lcall ficom lret int3 pop mov adc mov xchg pop nop aam push adc ficompl push push fwait xchg sbb fwait aad (bad) push push push fwait xchg sbb push int popf rcl push push rorl adc push push push cwtl fcoml push push push cwtl fwait aad pop rclb cwtl fwait rcr pop rclb cwtl fwait rcrl pop rclb cwtl (bad) adc adc (bad) rcrl dec into push lcall push push dec adc or nop rcll sbb adc push push adc xchg sbb sbb sbb sbb push lcall rcll rclb adc adc push ficoml push (bad) push adc pop mov adc mov cltd sbb adc rclb rclb fwait rcll (bad) ficom rorb lret lret into push xchg (bad) push adc xchg xchg aad lcall xchg fimull rcll push or push push (bad) pop lea into push sahf xchg or rorb into sbb push lret int dec push push dec push push fwait adc push push cltd xchg sbb xchg pop rcrl (bad) push pop rclb fwait push popf rclb pop pop rcrb ficom push push dec adc fcoms aam rcrl fistpl fcmovnbe dec nop rcrl push push xchg cltd int3 xchg push adc adc rcll push dec rorl push push push aam sbb aad pop fstpl rcrl xchg pop rclb adc push dec ficom push pop pop xchg push pop fcmovbe push dec into pop push or pop sbb push sbb xchg push (bad) xchg pop rorl int3 pop fisttpll pop push mov ficoml (bad) pop lret pop push or push lret fstpl push lret rcll push push aam or aad (bad) fcomp (bad) lret rorl pop fwait rcll dec adc pop rorb into push or xchg pop push xchg pop rorl int3 pop fstl pop push push push dec into push dec push sbb or xchg sbb mov mov ficoml aam push push push pop dec ficoml cltd adc push sbb sbb dec sbb lea xchg xchg push push rcrb adc adc adc push rcll push push adc push or adc lea sbb pop fsts lea push adc push xchg pop adc adc adc push rcll push push adc push or adc lea push sbb pop fsts orb roll fldl add pushf lods sbb xchg sbb leave mov out mov mov mov into mov jb mov test mov nop inc xchg cmc inc mov push adc int3 bound adc pop xchg stos test bound (bad) int3 frstor lret jb cmp mov int3 (bad) xchg fs adcl jge add shll xchg adc and or xchg cmp xchg test mov inc jae push test test gs add xchg xor inc jne out jne cmpsb inc fs (bad) xchg xchg movsb adc adc and xorl xor fs adc adc gs xchg xor or ret cmpsl xor and mov xor sbb test mov cmpsb pop xchg mov mov pop mov test mov and sub mov sub cmp sbb mov sub mov lods sbb sbb gs pop fsub pop fnstenv out sub mov into jo pop inc xor mov xchg adc movsb sbb mov xchg cltd stos cmpsb cltd push and sub lods and pusha mov or or and mov enter lods call dec mov and in arpl rorl pop xor sbb xor mov outsl xor fcom pop pop mov mov inc (bad) (bad) decl jmp sub int3 lods ljmp push nop fnstenv and xchg inc jb and frstor and fstl outsb mov test pushf fstp (bad) rol inc gs sbb adc mov xor dec (bad) es xchg xchg bound es mov dec test mov mov pop dec jmp aaa lcall repnz adcl dec in js inc xchg sbb ret cltd xchg dec adc or inc cli (bad) popa jns lret adc mov lcall and cbtw fcomp fs call xchg xchg mov xor dec inc lret repnz es and popf sahf inc fs icebp sbb push cltd adc lcall aam xchg push push (bad) cwtl push mov daa xor adc aam sbb push lret int dec push push dec push push test lret sub dec loop,pn jns out nop mov push fsts dec dec mov dec in in sub icebp aaa xor ficom and xchg rol sub push fs add xchg mov sbb lods xor mov shll xor mov xor sbb mov addr16 push and adc add arpl mov cmc jbe xchg and dec add in mov push pop mov stos or or mov dec or stc or pop push imul dec movsb cmp and or loop aaa subl sbb add xchg xchg jg mov xchg sub xor fwait adc sbb int3 adc mov mov mov adc ret (bad) mov or or adc ss outsb and push es outsl mov int3 outsb sahf into scas mov mov sbb loope xor dec sub xor call and xor fstps sub or dec or pop mov jp rclb or (bad) xchg clc popf adc inc lds movsb sahf addr16 push inc inc dec cwtl fstp ficom imul pusha roll add in out add pushf sbb inc out repz mov imul inc inc push insl adc ret jl es xor push lds push sub andl sub and mov adc or movsb sbb bound dec xor cmp ja push dec lcall dec jp dec dec dec dec push (bad) xor sub sbb rcll je cmp push dec loop cmp push imul adc enter pusha and xor sub ret pop mov and jae je and xchg pop rcr push and lahf mov (bad) cld dec lods cmp mov imul (bad) bound les int3 in cwtl insb lcall arpl mov les mov fimul push inc xchg aad and inc inc inc adc rorl rclb mov data16 fs mov xor ja inc push inc cmp pushw jno jne dec inc inc inc inc dec push inc inc dec xor inc jbe jbe inc inc inc inc inc dec inc inc inc dec inc inc inc push fs push inc inc sub inc inc inc dec outsl push inc dec addr16 push inc xor gs jbe push pop jbe addr16 inc push inc inc outsl popa push jp pop insb inc das inc dec pop push pop outsl sub das push push cmp inc push cmp dec inc inc inc dec cmp push inc inc push push ja inc inc inc jp dec imul das cmp cmp dec jno aaa jbe das das cmp das push aaa das das jns inc ja push ja pop xor jbe das inc aaa bound aaa pop inc dec cmp inc imul insb inc xor das jbe das popa imul inc inc inc inc js jns push ja inc ja dec inc ja pop push popa addr16 das fs push das das das fs push push xor inc das push aaa das das xor inc push outsl inc ss imul inc jp xor fs dec push das cmp inc gs push das cmp das cmp inc inc push outsl inc inc imul push inc push inc push das fs dec push das cmp inc gs push das cmp inc inc inc inc inc inc das fs ss arpl inc inc inc js push jp inc sub push pop cmp jbe das cmp inc fs ss push inc pop fs dec jno inc data16 das das das jb bound outsb push push addr16 ja dec push inc dec push pop cmp push das das imul inc inc dec jae imul inc inc inc inc aaa js dec das xor push inc inc dec push das sub das das das dec cmp push das sub push ss das sub inc xor inc push inc inc inc cmp push imul inc outsl inc dec inc push inc addr16 inc sub xor dec inc push dec imul inc inc inc inc aaa jp dec inc imul push dec push sub dec inc inc inc jns dec jno inc addr16 inc xor ss dec aaa das das das outsl insl push imul jbe outsl push inc inc push addr16 inc push xor dec pop dec das bound xor je popa dec pop xor jno dec imul jbe ss jb das das das inc popa xor push inc inc inc inc insl inc pop data16 imul pop imul pop push inc dec inc fs popa inc cmp popa push jbe push jp inc inc inc dec pop inc fs sub push inc push addr16 xor bound inc xor inc inc insl push inc dec insb dec popa dec jae push inc push inc inc dec insb xor fs inc push push inc dec push data16 das das das das ss push inc inc inc inc jb outsl je xor push cmp inc inc pop ja jbe push pop jbe sub push jp bound xor dec push cmp das imul inc addr16 aaa sub dec inc push push je addr16 inc inc inc inc inc das js arpl inc inc dec inc xor fs push dec push imul ss inc das jbe xor arpl inc xor inc inc inc inc inc inc das inc push push push push inc jb xor sub dec push push imul inc inc js push inc bound inc inc push inc inc inc dec jbe dec inc xor fs gs push imul imul dec dec das xor aaa dec push jae dec inc outsl push imul cmp push data16 imul je inc inc outsw pop push das das das xor xor das popa dec push addr16 das outsb push dec imul jp das jp inc ss inc inc inc inc inc dec fs jp inc insl xor inc push inc inc inc sub push inc inc inc push cmp dec push inc dec inc xor inc inc inc arpl inc das sub inc inc inc push push inc inc inc das sub inc inc inc push push inc inc push je fs das js dec ja inc inc push inc pop inc inc inc inc dec push gs push xor inc inc dec pop inc inc xor xor inc inc popa inc inc inc inc inc inc dec push js push push dec push dec ja inc dec cmp cmp imul dec dec push pop outsl inc xor cmp inc inc addr16 xor inc sub ja inc inc dec xor aaa xor dec push dec pop inc inc inc inc push je bound inc aaa bound popa imul inc outsl inc push inc inc inc dec xor pop push ss push push inc inc dec push gs inc js js jns inc dec fs dec jae inc inc push addr16 dec fs jb xor inc inc pop push inc fs imul xor je inc jb outsl je xor jno pop inc push inc inc inc push push je pop inc push jp xor jne dec push imul inc xor dec je xor dec push inc inc dec dec cmp push dec fs jns pop jbe imul dec inc push inc inc inc dec push das popa addr16 dec push ja dec push js dec imul popa pop outsl jae pop outsl imul inc inc cmp push outsb pop js das push outsl xor jbe dec and pushf and cmp mov and and mov mov mov xor or dec test (bad) ljmp cmpsb cmpsb daa es sub out (bad) cs insb in scas in push sub das dec or lret or outsb vpminsw or sub or sub or or call xchg push addr16 xchg adc xchg xchg xchg adc ja and xrelease cmc add notl jbe mov fcoms shlb shr test (bad) data16 in nop ret cmpsb insb pushf into fisubl test xchg mov mov cmpsl sub mov mov cmpsl xor cmp push xor inc cmpsb pop cwtl mov mov enter pop and nop in push sbb and sbb adc outsb daa mov inc inc int3 lock sahf (bad) fbld ret rorl push and jae fs ss push inc pop fs dec jno aam fcoml pop xchg push cltd rcrl rclb aam mov inc dec jae imul fimul lret int push (bad) mov and xor inc roll lea lcall xchg bound hlt and inc addl addr16 inc mov and je xchg and and test xor jbe add xchg test movsb adc xchg xor adc jbe xchg inc add adc sbb arpl fs les test arpl ss andl push xchg notb jne fs pop and mov dec enter mov es (bad) in sub or inc adc and popf test fwait adc or nop imul push push adc pushf int3 je ret adc hlt inc inc and jno mov or push fcmovnbe test and scas movsb into push out mov stos push aam jo xchg and and jb inc and cmp add data16 jne daa mov cmpsb sub xor sub and cmp cwtl mov and xor adc lret rclb and mov pop adc fs sub cmp adc sub and sbb je lcall outsw pop push adc bound or mov mov sub fld1 mov flds push cmp enter mov dec adc fucomp or lods test in inc xor sub (bad) xor mov inc call and lret dec lods or and mov lock inc mov rcll sarl mov pop and bound ja outsb push push daa inc mov aaa jmp lret dec es mov gs inc and xchg lret xor push leave sub rcrl je xor je dec inc outsl je xor jno pop inc cltd mov inc and mov xchg (bad) mov sbb jecxz sub fldenv inc addl dec push pop (bad) shrb jnp rcrb fwait jb ret dec js dec loop xor sub xchg sbb in enter gs loop push in xor dec adc xchg sbb and mov or rcrb xchg sbb push sbb int xchg jb sub adc inc inc xchg test jb and loop dec int3 push xchg fdivs lahf repz lods sub mov sub sub xor test inc xor aaa cmp push inc and mov and pop call ret push and xchg inc jbe dec mov push icebp cmp imul in (bad) int3 icebp sub or dec stos add inc cltd adc inc out hlt sbb xor loope enter mov mov dec mov xor and stos mov cwtl test mov lcall nop fsubrs dec dec lret mov push mov outsl cld mov sub aaa movsl cmp ficoml cltd and xchg push loop bound lea mov jp sbb (bad) (bad) xor imul xor inc jae xchg adc jb mov sub sub enter sub les popa dec dec fs mov fimull pop clc nop dec dec (bad) fsubrp nop ljmp jno mov inc sub fs out das push (bad) imul xor mov orl push sub loop dec (bad) es clc pushf sarb popf pop les shrb pusha (bad) (bad) (bad) (bad) rol test bound nop out (bad) (bad) (bad) (bad) xchg mov enter pop jb pushf mov mov (bad) (bad) (bad) (bad) into mov push (bad) nop mov mov nop mov scas into data16 jo nop mov mov movb fisub pushf xchg int3 stos (bad) (bad) (bad) (bad) test mov mov scas push data16 pop jb rclb test fsubrp bound (bad) (bad) (bad) (bad) mov mov mov ljmp (bad) push (bad) (bad) sahf jo pusha mov (bad) mov lods loop shl into (bad) (bad) (bad) (bad) outsb out data16 bound (bad) into (bad) (bad) mov (bad) (bad) (bad) sahf (bad) mov out (bad) (bad) scas lods ficompl (bad) (bad) (bad) outsb out data16 bound out into (bad) (bad) mov (bad) (bad) (bad) sahf aam xchg into (bad) (bad) scas lods fcompl in (bad) (bad) (bad) mov mov into (bad) (bad) mov (bad) (bad) (bad) sahf into lcall ficompl (bad) (bad) (bad) outsb out data16 mov xchg ljmp xchg (bad) (bad) (bad) (bad) stos sahf aam test (bad) (bad) shrb lcall (bad) (bad) (bad) (bad) (bad) in bound (bad) (bad) xchg ljmp xchg nop stos sahf aam test (bad) (bad) pop outsb les insb cwtl jo (bad) (bad) xchg shr mov jb mov sahf mov pusha (bad) (bad) (bad) (bad) enter insb pushf mov pop call (bad) mov fmul movb mov mov test (bad) (bad) (bad) xchg mov mov mov pushf pusha xchg (bad) mov mov mov sahf lods pop jo test outsb out data16 bound movb lock mov (bad) fisub mov int3 mov call pop lods mov out push mov enter movsb mov mov out sahf pop enter lret sahf shl pop int3 pop pop scas mov fs insb sahf outsb jb pop push mov mov test test faddp pop outsb pop pop (bad) ficompl (bad) aam (bad) mov data16 into lock sahf rcl jb pop pop insb test xchg xchg mov shrb xchg mov (bad) (bad) enter (bad) mov call fs xchg sahf into mov mov in mov pusha pop pop pop mov into hlt fsubp lock (bad) (bad) mov mov scas mov pusha xchg (bad) into jo out ljmp scas lods ficoml int3 hlt push pop pop pop pop insb (bad) xchg (bad) (bad) (bad) mov in fcmovu lcall test fiadd out (bad) mov lock (bad) xchg in pop lods in jo fimul jo out lcall ror mov mov bound jo mov in out lods in jo fimul jo in lcall mov sahf rcr mov xchg data16 bound mov xchg test out fs movsb pusha xchg (bad) pop insb mov movsb pusha xchg (bad) into pop aam enter pop lock push into out fs movsb pusha xchg (bad) pop push fcompl into rcr lret xchg pop pop pop ret xchg mov scas hlt xchg mov lock pusha pusha mov (bad) mov push mov ret (bad) (bad) (bad) (bad) mov test pusha mov lcall pushf insb cwtl lcall fs (bad) mov jo pusha lcall pop mov pop fisub mov lcall test pusha stos lcall test xchg mov shrb mov insb cwtl in outsb pop pop jb lock mov pop in pop pop pop push into lods (bad) (bad) (bad) (bad) insb test hlt pop pop pop mov data16 xchg ret fmulp lock (bad) mov mov into hlt faddp (bad) mov (bad) mov mov pop jb lods pop jo fcompl jo fmull in push pop pop pop pop pusha xchg in out ror mov test into stos (bad) into (bad) (bad) ret fisub pop pop push fimull in jo fmull jo xchg mov (bad) mov xchg test movb ljmp scas lods fcompl mov xchg shlb (bad) fisub mov hlt jb int3 pop mov mov (bad) jo lret in pop lods ljmp rcrb mov stos xchg ret fimul (bad) ficompl ret (bad) (bad) jb (bad) sahf into lret pop pop shlb xchg ror mov shlb xchg out nop mov movsb test call movsb rcll sbb (bad) or stos inc mov test inc adc adc xchg adc adcl and jne arpl push fs test xchg je addr16 adc push add jbe aaa arpl mov push add xor enter (bad) and adc and xor cmp sub push outsl je inc dec jne jbe pusha (bad) mov mov mov ljmp xor sbb cmp mov aaa ja push pop dec push push outsl push inc and sbbl sub push push insl dec decl dec dec addr16 mov xor orl and xchg add push mulb xchg jl cs push and inc arpl roll test and or and xor dec (bad) jb mov mov jp es and daa sub popf jb xor push shrl adc xor push pop shlb inc jp and pop and xor and fwait mov and adc mov fimull sbb fwait aam out fwait sbb int mov xchg pop pushf aad sbb or adc and jmp push in push and jmp push inc je ss aaa cmp pop and out push out in xor mov aam mov aaa stos mov mov dec call lret test dec in mov mov mov aaa mov les fstps xchg das inc mov jecxz (bad) xor mov pop aad imul lret movsb int3 hlt push adc mov jp mov mov ret pop mov ret mov jns mov push adc push sub into movl shrl popf ficompl xchg mov enter xchg and pop icebp cmp out jae push sarb jg mov mov fs sbb fimull xor mov sahf inc xchg push sbb sbb or ret xchg mov movsb cmp arpl cmp push push sub test and lea inc or (bad) cmp lcall fs adc hlt loope lods bound and xchg or inc das push mov and xor in dec inc pop cld dec (bad) loop pop mov dec iret push es pushf movsb xor js inc adc dec insl sbb sub (bad) dec cld xchg stos test and push insl addr16 inc addr16 and mov jl push mov push test test shlb and jp mov xchg (bad) (bad) hlt inc inc adc xor jno pop loop inc mov push sbb cmpsl push fmull adc push roll and sbb sbb sub jg xchg push lret xchg in inc imul mov dec dec jl out mov xchg xchg outsb call adc fildl (bad) out data16 inc cltd xchg pusha flds adc xor jno mov je inc scas jne es out dec into inc out aaa push pop push and mov sbb loop aaa dec rcr (bad) out gs xchg xchg mov popf nop mov mov in xor leave lret dec ljmp or hlt (bad) les xor inc jp xchg mov push (bad) jbe xchg push sub es sub ret cmpsb test mov ret movsb mov jmp ds xchg xor test lcall dec dec js fcmove shrb adc push mov mov cmpsl dec xchg xchg repnz xor and (bad) in les cld dec scas jg mov dec icebp sub jl and dec mov inc xor mov clc mov cmp dec loop cmp dec inc push sub push mov out jp inc xor xchg or iret adc jb adc adcb cmp cmp stos adc sub add roll push and fwait and adc dec out std inc or xor jp pop cwtl popf aam dec cmp loop xor mov sub xorl lods test shlb xor mov adc sarl xor pop sbb lret or push movsb inc arpl adc mov dec cmp imul xchg rclb loop dec out outsl jns dec inc icebp cmp xor daa xchg pop fstl adc aam enter mov pop bound xor push push cmp in fabs dec push dec test xchg push mov pushf cmp mov pop les imul dec in popa push imul jbe jnp mov mov adc sbb rorl mov push push data16 dec mov sub mov dec in imul mov or lea pop sub dec outsb enter sub mov in imul xchg sub sub inc or call in mov or call push dec ljmp into in or outsb in push inc push jmp push mov sub in out (bad) in vcvttpd2dq in inc vpmulhw sub sub out pop or add outsl dec call dec or add in dec test enter in call vpmulhw sub sub jmp sub in dec jmp or (bad) out outsl inc in out sub pop or mov or dec sub out mov dec or sub dec or gs in leave push gs in lods sub dec sub test int3 mov dec test sub test jmp es dec dec gs sub sub sub sub test sub mov push int lea mov leavew enter sub or dec cmpsb test or lods sub dec movsl out vpminsw (bad) es dec in dec test vpminsw sub test sub gs in enter sub (bad) in sub inc in or xchg out enter in out out sub int (bad) scas dec scas dec scas dec lods sub test in jmp inc sub cs sub es sub (bad) sub dec insb mov inc enter sub inc sub cs sub dec cmpsb lret sub (bad) sub sub push mov or out sub jmp or dec in enter sub sub sub in call or dec outsb push enter sub sub insl imul insb out sub call dec sub stos es sub (bad) das or dec insb mov mov cs cs insl or mov dec mov mov ljmp cmpsl or test test sub test sub ljmp sub mov dec or or jmp xchg sub imul lret dec or in or mov int3 int3 test dec or mov mov imul push sub imul push or test dec sub sub sub test mov test mov test int3 das dec dec sub mov in call int outsl sub sub cmpsb mov imul sub insb ljmp or stos or int or or dec mov xchg sub ljmp sub stos sub sub movsl in vpsubsw ljmp sub test lret or das dec jmp sub xchg mov sub out out dec (bad) or enter sub sub mov leave mov out push dec sub dec orb cmp lcall cmp sbb sub test movsl pushf and xor cwtl cmp cmp daa cmpsb pop cwtl stos cmpsb sbb sbb xor mov mov movsb mov mov xor aaa stos xor mov mov gs mulb jne mov xchg xor push jbe notl ja jbe repnz bound je adc test jbe movsb test and pop mov adc lods dec (bad) das inc adc daa xchg test repz inc pop inc add xchg adc jne push je repz mov repz cmpsb mov pop adc add imul add xchg test scas inc xorl and (bad) adc fs inc inc xor push or mov cmp dec sub or push pop push sbb push int call sub push int lea test dec inc xchg mov aad fs push xor push xor mov mov jb test mov add pop adc mov or in mov jbe addl fmul sub sbb xchg adc (bad) mov fcoml xchg push dec xchg mov and bound mov adc xchg add sub enter cltd push ja inc bound dec addr16 ja inc inc push dec inc dec push pop imul popa mov bound push adc cmp insl imul mov inc fmull sub xchg ljmp ljmp outsl jp je adc xchg push loope push and inc and or pop arpl dec push imul lret dec push push dec dec inc dec gs jp pop adc adc mov test lret and (bad) lret mov (bad) mov mov es bound xor hlt test pushf stos xor mov xchg dec push dec rcrl pop int3 (bad) push dec aad enter cmpsb cwtl (bad) lock test rolb jb into scas test mov add or dec cmpsl sbb mov xchg add mov cmp cmp or inc sub sbb sub xor hlt jno jnp inc pop dec or das inc dec push imul pop test mov inc or test and cmp or push popf enter mov inc jle inc xchg and int3 mov and cs test and aaa cmpsb daa daa and popf push add dec (bad) inc pop enter andl xor sub and pop push leave test imul xchg or mov les adc push adc mov jl in frstor inc and pop aad ficoml pop mov xchg fs mov adcl inc xor pop and xchg push pop sahf adc cltd adc rcll mov xchg fisttpl int push imul test or mov call mov test xchg push sub test movsb sub adc sub fdivrl adc inc sub (bad) cmc push inc and and sbb mov fist lret push rorl into push or push sahf xchg popf fwait (bad) sbb xchg sbb xchg inc mov arpl xchg or or jb pop out adc adc ljmp and inc out stos sbb daa add in xor inc jbe arpl inc ja cltd add frstor push and lods and rcl inc or je jecxz sbb fcmovnbe test mov insb lret mov adc push loop dec adc dec pop xchg dec jb mov jo mov (bad) inc push mov pushf enter jmp cmp lcall in es sub adc adc push pop clc xchg push fs push dec icebp sub cmpsl jg inc cmp outsb mov sbb xchg sarl dec mov mov sub xor cmpsb xchg fmul mov ljmp sbb stos cmp sbb mov loop das cltd int3 lds mov adc and pop cltd ljmp (bad) or push pop es test pop mov mov xor inc pop jae inc and rorb pushf movb xchg push dec aam insb mov or (bad) rclb push and and inc mov mov jne les mov lods into test adc pop cltd mov movsl inc xchg sbb repnz adc mov inc sbb or or sbb dec flds xchg pop mov mov bound (bad) les push das nop fsubrs sub inc mov sub mov and push or scas dec or int imul sub test sub es dec sub mov push lea imul iret das dec sub push call iret dec dec or or imul test push mov sub sub or sub jmp or dec add sub out mov mov test in sub sub lods jmp inc sub xchg sub sub ljmp (bad) or imul sub sub sub imul sub or test dec scas iret dec mov mov xchg sub or sub sub or sub push out call scas dec sub push sub sub cmpsl cs push sub das sub dec call inc sub into out out dec call stos pop or stos pop push or test sub sub sub insb mov mov sub in test sub prefetch lret sub sub out or or or jmp movb sub sub insb mov out push int into jmp in sub dec das sub sub enter in or dec mov sub jmp or sub in in (bad) mov or vpmulhw mov insb mov call sub test mov vpmulhw mov dec or inc or mov sub jmp xchg sub push inc sub ljmp sub sub in dec call cs cmovp dec ljmp dec push or stos sub sub sub out (bad) or mov call sub dec mov sub dec int sub lret outsb (bad) in out mov imul gs out in pushw sub insb (bad) das dec sub lods push or or sub mov in mov ljmp test lret or and out daa sub dec inc in vpaddsw or mov or stos imul sub dec test mov mov and out enter sub and das or test cs sub lret cmpsl or test out sub dec outsb in mov sub ljmp mov dec dec dec sub dec ljmp dec inc push sub sub test out or in sub gs ljmp enter or into (bad) es mov dec mov mov mov sub das inc in mov dec in jmp in sub or ljmp push into in mov ljmp lret or mov ljmp or mov test lret push sub sub in jmp mov into test in sub data16 jmp test out daa or sub push sub sub mov sub mov outsl dec sub push (bad) insb mov sub sub call sub sub mov sub mov sub sub sub sub sub mov in outsb data16 mov mov sub dec lods out ljmp sub imul sub daa or push sub int3 lods enter insl dec insb xchg dec mov into ljmp sub in out (bad) in movsl in sub sub sub enter lret cs call sub jmp scas or or int3 out inc in mov call sub sub dec das dec sub dec or pop or insl lods dec or push dec sub mov sub sub in dec enter sub es lea dec mov into in sub cs or int imul out dec insb in inc insb mov test push sub dec (bad) cs mov ljmp or cs insb in sub daa or inc push jmp mov sub sub cs mov jmp stos sub and fwait and mov stos xor mov sub aaa mov and mov mov sub and movsl and mov test pushf sub cmp and xchg stos mov cmp and xor mov movsl and sbb cmp cmpsl sub pop pop gs add or cmp adc sarl adc mov out dec je dec outsl pusha das inc inc xor inc aaa dec dec push inc addr16 jae fs sub outsb push inc js dec das inc dec dec insb movsb sub mov mov xor test and sub mov and sbb int3 adc adc mov test mov fs lcall (bad) mov push mov push insl cmp inc fs sub ja and jb cmp rcl mov popf int int3 push popf rcll xchg aad push adc push or pop push sahf push adc aam push adc test (bad) fdiv xchg push popa sub push sbb push pop rclb (bad) sbb dec data16 push and cmpl lcall popa dec adc jns push push push pop mov dec dec jb imul adc jp mov (bad) mov jns jns int3 enter dec jp sub xchg and sbb mov pop or imul xchg sub push sub ljmp sub sub in dec call xchg push inc jbe and and mov fs mov lcall sub jns jno test mov sub jmp mov (bad) xor stos cwtl cmpsl cmpsl sbb or mov add inc dec rol jnp orl pop xor rorb sub sbb mov ficom movsb dec test stos or daa daa sub dec inc in aam addl adc xor add xchg sbb mov jae in dec sub ss in mov pop mov data16 pop xor xor sbb push pop mov ficompl sub fwait push pop popf int3 pop xchg mov bound xor cmpl mov stos jnp (bad) mov sbb or cmp les sarl or ficoml cmp test cmp stos sub cmp lds inc gs xor cmp mov mov dec aam insb mov in enter dec or dec mov outsl dec sub rcrl add xor mov (bad) movsb sub and pop (bad) int3 lds leave and gs mov imul imul inc xchg add cmp enter (bad) inc cmpsb mov inc cs sub gs aam mov call test sbb sbb test into fs hlt (bad) (bad) and or push out (bad) cwtl out cltd inc add dec out xor dec inc inc loop imul xchg les es mov or popa dec cmp and mov mov xchg pop lcall lea push adc jae mov rcrb rcrb push push pop push clc sahf adc scas mov adc into push xchg sbb push mov mov push dec adc add fnsave mov (bad) cltd pop (bad) in test or sub or ljmp imul mov inc and and dec es rol mov movsw push xchg aad add nop test adc and jnp fwait or push push in xor dec nop mov sub test sub xor sub fsubrs popa into inc adc adc cmpsb sbb and cmpsl mov in pop mov repz cwtl popf int3 test and dec inc inc adc in dec imul in sub je in arpl jbe adc push jl leave add inc ja adc lret sub and lret daa ja dec mov sub cmp out xlat icebp sub dec into dec aad sbb in in xchg xchg popf icebp and inc xor (bad) and (bad) rorb sbb xor lcall xchg inc inc arpl mov lcall rorl test mov loope (bad) cwtl ret push cmp mov dec test pop arpl imul mov xor sbb mov stos test push dec push push inc push jne pop icebp sbb adc leave in dec sub aaa aaa mov lea mov mov insb jmp dec jb es dec dec inc mov sub lret dec dec push sub leave push dec dec sub popl out int outsl sub mov dec push and outsl sub insb call push sub or sub mov gs or or sub int mov xchg sub stos xchg sub (bad) jmp sub sub es (bad) mov inc in lea in xchg stos push gs mov test sub inc in lea in lea in lea in lea out cmpsb or gs lea in dec sub in sub gs vpor sub sub gs dec sub in sub and dec out cs push gs scas sub in imul dec lret in jmp and sub test sub or in es insl gs vpaddsw push or ljmp sub ljmp gs mov test sub call or test es (bad) dec cmovne out test lret cmovs sub jmp (bad) sub push or sub sub cs call into int cs sub lods enter sub sub in into ljmp lods dec (bad) in out sub jmp enter or scas out (bad) cs gs dec (bad) or test test sub es pop es pop es pop sub pop sub cs out dec mov sub enter in in mov test test jmp enter dec out ljmp sub sub mov (bad) or in push mov scas sub mov dec lret sub dec mov ljmp sub stos dec out in dec call or sub or in mov sub sub mov lods mov test dec lea dec push dec (bad) insl push or push push test lods lea xchg sub data16 push test test pop or imul or in lea scas dec call imul ljmp or (bad) test sub mov mov sub dec out int dec dec sub dec or out sub or lret ljmp in in out sub sub sub call call cmovl test dec sub dec int in sub jmp data16 stos add sub (bad) enter sub jmp stos out jmp xchg cs push push (bad) call test int3 lea sub dec mov dec jmp sub (bad) jmp out dec add es or ljmp sub dec dec call out in cmpsb enter in sub sub in or vpminsw int mov or ljmp cmpsb or leave push movb jmp in ljmp xchg test gs vpxor call sub cmpsl or enterw sub dec dec sub addr16 inc cmpsb sub sub mov sub (bad) int test dec sub or dec mov enter in sub insb lds in or cs dec or mov lea into in mov enter in sub or add in jmp sub leave stos or in call jmp out enter sub and sub mov sub movsl push test in ljmp push sub in in movl outsb call xchg and outsl sub sub enter or sub sub insl inc sub enter push int outsl sub mov dec mov sub ljmp xchg out (bad) dec mov (bad) sub or mov push dec sub call test dec lea imul or push mov into sub in or test sub leave lret in cmovne lea es mov sub jmp push outsb enter cs jmp sub addr16 or outsb enter or in mov lea push imul sub and sub sub into insl push and lods sbb mov and mov and and sub cmp mov xor mov mov and and jns aaa inc addr16 bound jno jo inc inc push inc imul fs inc gs sub cmp inc xor bound inc push insl inc jo inc cmp das cmp imul gs cmp lret mov cmp or xor mov inc aad xor sub mov loop dec (bad) fisubrl inc inc rcll add xchg adc int3 cwtl push pop sbb pop xchg dec fmul (bad) mov out movsb mov sbb cs add xor enter adc xchg adc rcrb push enter sub sbb int adc aam xor sub int3 pop lock push into xchg lret test pop bound movsb sub jb cwtl mov nop stos push shrb (bad) test mov pushf pop mov hlt lods in fiadd lcall jb addr16 pop je cmpsl adc push movsb (bad) mull pushf sub aaa mov dec or pop gs mov adc scas in jb sbb cwtl loop push adc adcb xor xchg imul in dec dec dec outsb push dec aaa dec je inc inc push dec dec ja dec cmp inc inc dec push push push pop push xor push push addr16 imul xor fs jae jp push dec push addr16 fs push inc rorb fcomps pop arpl sbbl test pop adc mov sub movsl add arpl orl adc lcall pop sbb imul inc push xchg xor mov sub adc rorb pop popf rcll movsb dec push push addr16 das inc dec xchg and out int dec inc inc pop imul rcll mov popf sub mov add xor (bad) mov pop sahf cwtl stc sbb push test push inc nop mov into int3 insb (bad) cmpsb (bad) data16 cmpsb push jae xor add inc movsb sbb into mov inc mov aad inc mov inc cmpsb hlt pushw jb mov mov or cwtl mov int test dec push ljmp push movb jmp hlt cmpsl arpl inc adc mov cmp test push jbe mov test xchg je jg fs ss outsb jne lret mov xor leave or lods lods (bad) xchg inc out mov sbb addr16 enter fwait adc sbb rcr mov push push sbb imul fidivrl xchg popf ror mov pop dec or sub mov sub mov dec inc data16 xchg cmp test and sbb adc sbb sbb push pop (bad) xor movsb and test popf lret into or adc and rclb pushf push push ficoml push push dec insb pushf mov and enter mov test mov movsl pushf and jb cmp data16 xor dec fwait adc popf adc jb xchg es jne push imul test mov cmpsb insb mov and imul sbb hlt xchg adc mov mov adc sub or push cltd xchg lds dec xor out data16 sub sbb fstps test and add jmp (bad) or enter mov cmp out inc xor add pushf or mov or dec jl in call adc stos pop arpl and cwtl popf push inc pushf jae sbb jp (bad) into bound adc jno and stos inc pop push adc aas adc jmp push daa (bad) es rorb inc rclb or rcrl xchg jg sbb xchg fxch mov (bad) test dec cmpsl or or dec call ja add and ss popf gs push or dec mov pop (bad) and les jp insb gs push inc xchg push inc xchg cmp mov mov xchg (bad) stc nop pop ror push sahf jno mov repz les inc adc adc inc cmp push fcomp adc adc or les pop stc push adc test jbe sbb nop roll js ffree (bad) popf icebp sbb aaa mov ja jbe adc mov inc loop fs jae jno jo inc dec push inc cmp push jo js inc inc dec jp jp jp push xor imul je dec inc push dec push inc push pop push push dec push push push inc outsl pop inc fs inc inc push das dec push inc inc inc inc inc push inc inc push inc imul dec dec push inc inc inc inc inc dec push inc push ja xor imul dec pop imul aaa sub dec push inc push xor jb fs push aaa cmp jne push push xor jns inc dec jae imul inc inc dec pop dec popa inc inc inc inc inc inc dec push ja outsl arpl inc inc dec imul inc inc imul push push inc inc inc jb inc push push inc push inc inc inc inc inc inc js push inc imul fs inc inc pop inc inc inc inc xor push inc inc inc dec push jp xor inc dec je inc inc push dec ss jp das das cmp xor das xor das xor das xor ss aaa das das das sub js imul je dec inc inc dec inc jb inc inc inc inc inc ja push dec push inc push dec imul das arpl das arpl outsl inc data16 das das xor inc inc inc xor inc inc push push insb fs imul push bound dec jp push das das cmp pop xor jno das inc dec ja outsl inc ss cmp inc inc jp inc push bound imul push das das sub imul fs inc dec outsl inc insb push outsl inc inc addr16 inc inc cmp xor inc push pop je dec inc push xor push outsl je aaa das das xor inc inc inc xor inc inc dec jp jp jp jp jp jp jp jp jp je dec inc jns push inc push inc push push push inc imul inc fs popa inc sub inc inc inc inc jns outsl dec cmp insb inc inc inc inc xor insb aaa inc addr16 inc push xor xor arpl xor pop push push dec cmp inc xor dec inc pop push jo pop pop xor push xor addr16 ja jbe ja inc push inc cmp jns push imul push inc cmp jne xor dec imul inc ss xor outsl je dec inc push inc dec inc push inc imul jns push push imul sub addr16 push xor inc fs fs ss push outsl das das cmp arpl das xor aaa dec push jae dec inc outsl push imul cmp push data16 push push push push push jp push pushw push push push dec jns imul push dec push inc jbe fs inc jns sub jbe push inc jbe push inc inc imul xor push xor push jne push push imul insb inc dec dec jae push dec dec inc inc inc push inc dec push xor xor fs addr16 insb arpl push push dec inc dec push inc inc inc inc inc push push cmp dec push das push imul inc aaa sub push dec dec cmp addr16 inc inc dec xor jp insb push cmp xor outsb dec xor push das inc inc xor inc inc inc fs outsl dec push dec inc inc dec jbe dec cmp dec dec arpl dec ja inc dec jae push dec push das push push jbe fs outsb dec inc dec xor inc inc ja imul xor cmp cmp jae das cmp cmp xor cmp inc inc outsl inc das xor das cmp ja sub inc inc inc inc dec jae je inc inc inc inc dec push push das cmp cmp xor cmp inc push das push imul push push inc inc xor inc dec push dec inc dec push jo xor dec cmp push inc inc xor push dec inc inc inc inc push das xor push das cmp cmp xor cmp inc push das push ss xor inc inc inc dec data16 sub xor jp insb push cmp xor outsb dec xor push das inc inc jbe fs outsl gs inc inc dec jbe dec das je popa dec arpl dec ja inc dec push dec inc dec jae push dec imul push jbe fs outsb dec inc dec xor inc inc ja imul cmp sub push das das xor push das cmp cmp xor push cmp inc push cmp inc push das push push insb dec push dec push xor push push push push sub das xor das xor das xor push xor fs push das inc pop jp push push inc dec push pushw inc push das das cmp xor ss das sub das sub push imul bound xor dec cmp outsl inc data16 das cmp imul jns aaa inc inc das fs imul cmp das das cmp dec dec xor push cmp dec push cmp dec push cmp dec push cmp inc push cmp inc push cmp inc push cmp inc inc inc outsl xor xor inc dec dec inc cmp inc inc xor je sub push ja jbe push pop jbe push push inc push inc inc push inc imul bound gs pop addr16 js inc xor inc inc dec jae imul push arpl lods cmp mov mov cmp cmpsb mov push xchg sbb rcll adc xchg rcll xchg xchg xchg push push xchg fwait (bad) push cltd adc aad rcll xor and rcl (bad) mov cmpsb sub test cmpsb xor and lods xor cmpsb xor cmp or lods cmp mov dec leave test imul imul sub xchg aam (bad) rcrb test inc push and leave int dec inc or xchg mov in mov push fs inc inc pop inc and mov push and fwait and stos xor xor mov mov das or popf adc in mov mov mov lret jno sbb inc adc adc mov fistl adc popf rcll xchg dec push pop mov or into push cwtl xchg or pop sbb dec rcl sbb xchg dec adc (bad) cmc xor pop roll xchg test test enter xchg fiadd hlt inc es and inc gs inc xor push test sub mov push adc jmp lds xchg adc mov xchg or pop jl dec sub inc dec inc xor insb aaa inc and stos ret jp sbb cltd xchg lret or cmp mov push or rcll or flds inc xchg cmc push xchg les jae addr16 arpl in mov push push inc xchg data16 adc movsl sub mov cmp popf push test mov ss movsb sbb sub cmpsl cmpsb pop cwtl cmpsb sbb mov mov mov cwtl mov dec or dec lret add jns imul dec push inc jbe fs inc jns dec ja jbe push inc jbe push inc inc dec push pop imul imul push adc adc pop adc push js sbb xor cltd dec cmp xor mov pop scas xchg rclb data16 nop inc inc add sbb or sbb xchg data16 mov cltd push adc rcll or or lods push sub push test ret cltd mov xchg rclb sbb push or nop cmpsb out pop and sbb and or sbb dec lret stos add pusha rorb and leave enter sbb or lcall cld inc lret cmp out xor pop inc notb push mov jns mov inc and jnp or push or mov xor (bad) repz inc icebp xor mov sub sub xor cltd sbb or test mov push enter dec dec jmp bound or rcrl mov fmull or in popa and xor dec push adc and js leave jp sub cmp inc int dec (bad) jae cmp add sub sub sbb or call and mov test pop and mov or adc pusha popf (bad) jmp in int sub leave lcall cmp es lock rolb sub aaa ja push dec adc and out imul mov mov das push incb push outsl adc xor sub xor sub pop shll mov cmp pop daa jne sub leave and cld dec lds push jno cmpsb and mov mov jno mov leave or stos adc fwait and into hlt fsubp lahf xchg adc lret push mov push mov lret mov adc mov and loop dec in xor inc icebp sub in dec push (bad) lock inc mov mov jno mov and mov jne dec dec mov mov cs pop adc cmp adc cmpsl xor test sbb test (bad) ljmp adc test in sub outsl (bad) fsubr mov les es pop dec test xor loop arpl pop aad mov dec or xor bound les adc mov and scas mov dec jmp les aaa jne das mov push inc cmpsb mov (bad) daa inc pop dec dec mov inc stc or daa and inc sub xor bound (bad) (bad) rcll mov clc cwtl mov dec pop imul ds je xchg popf jg and cltd sbb dec les and xor xor mov xor mov mov mov test icebp daa and aam mov fwait inc (bad) out jmp adc cs cmpsb mov call dec cmpsb and adc ss je lcall lret fstpl push push nop push push sbb adc or int adc lea int mov xchg pop pushf aad fisttpll rclb cltd adc rcrl push adc adc sbb adc xchg sbb popf xchg pop adc push adc adc sbb adc rcrl popf rcrl push adc adc sbb adc push sbb lea adc adc sbb or xchg sbb dec rcrl push adc adc adc lret aad lea int mov xchg pop pushf aad fisttpll rclb xchg or push push pop dec push push push fst adc push pop adc dec xchg pop cltd lret lret into push lcall adc push pop adc dec xchg sbb lcall adc push pop adc dec xchg fstps lcall adc fcmovbe push pop adc dec xchg xchg sbb lret into push lcall adc pop adc dec xchg push sbb lret into push lcall push push fcmovbe push pop adc dec xchg adc lret lret into push lcall sbb fcmovbe push pop adc dec xchg mov lret lret into push lcall sbb pop adc dec xchg dec fxch lret into push lcall or fcmovbe push pop adc dec xchg sbb push lcall or pop adc dec nop fistpl lcall push adc rclb adc dec nop cltd cltd lret lret into push lcall push push int3 adc adc dec nop push sbb lret into push lcall push push int3 adc adc int adc mov into push xchg sbb sbb push lcall adc dec or push fwait rorl push adc xchg push push adc adc push push sbb sbb dec rorl lret int adc pop sbb popf pop adc aad xchg push xchg xchg pop adc push push mov push fcmovnbe cwtl push xchg push push push push pushf push dec ficoml int mov fxch adc pop pop aam fstpl push or push rorl xchg rcr aam rclb dec adc push adc pop adc fimull push fwait sbb cltd push sbb dec pop mov int fwait or adc or pop rclb push push sbb push or fcmovnbe rcll fwait push push nop nop push pop xchg pop sbb sbb nop push nop push push rcll xchg adc push push fistl rcll int3 dec push adc adc push pop pop xchg adc fcmovbe push push push or fcoms sbb pop or pop rorl int3 dec push or pop pop sbb push dec xchg pop fstps rclb into pop adc into push fwait aad rcll xchg xchg push nop rclb adc ficomp rcrl push push lcall pop adc into pop pop xchg rclb nop rclb dec sbb rclb dec or ficompl push pop fcmovbe push push into adc adc nop rclb dec aad or lret ficom push pop dec fimull pop sbb sbb dec push adc fwait push xchg sbb adc pop ficom sbb xchg dec into push rcrl pop (bad) or cltd aad adc push push pop rclb ficomp pop rorb cltd pop or aad or pop (bad) adc rorl int3 adc (bad) rclb inc dec and popf sbb nop push push sbb adc or int adc lea int mov xchg pop pushf aad fisttpll rclb cltd adc rcrl push adc adc sbb adc xchg add mov into ffree xchg jne and inc sbb icebp xor in xor je lret dec push mov push push jmp and pusha mov sahf out mov cmpsb (bad) xchg (bad) enter insb lcall test popa daa nop fnstenv mov xchg adc xchg fstps popa inc nop fldcw popa lahf adc sbb push sbb sub mov nop fldenv and sbb or sub or les mov push sbb enter and loop inc loop inc adc (bad) adc adc sbb call aam movsl push pop int3 mov lret aam ret popa lcall pop mov xor inc lret adc rorl dec sub sub dec sub js cmpl popa js adc push sub lods or push enter xchg fs inc xor push (bad) sub sub lods mov out sub jns lret mov lcall or dec dec (bad) push push push xchg push push fwait sbb cltd push sbb dec pop mov pushf fsubrs gs jp popa mov mov inc loope mov sub add xchg int mov push pop push inc push push inc outsl insb dec xor xor xchg xor and push or fcoms sbb and jns mov or insb lcall dec leave repz mov and and test or mov aad popa push dec and pop sub dec cmp push jp dec push dec mov mull sbb sbb adc mov push xchg sbb and bound mov push adc adc dec sub sub outsl dec ljmp inc (bad) pop mov dec lods adc mov xor mov cwtl fwait test test popa int3 dec scas js push movsb das xor adc pop mov enter jecxz test addr16 adc inc icebp aaa and push and test ret adc fwait or dec ret xchg mov or data16 arpl in inc inc imul pop mov mov and push nop nop pop push sbb inc xor mov and mov push mov sub scas cmp lret xor push and xor test mov push push adc xor loop push adc fstpl cltd sbb popf ror (bad) ljmp cmpsb cwtl out fisub and sbb jmp aaa jne imul adc push fwait dec rorb (bad) adc arpl pop sahf push clc xchg lea lret rorl test out or xchg push aaa arpl gs pop push dec (bad) in dec cmpsb gs dec in and and or add mov scas inc push sub adc je or dec ret lret and pop popf xchg call mov (bad) mov jmp push xchg cmp xchg dec jmp insl and jns das enter xchg hlt mov mov or imul pop and xchg fwait inc lret sbb in insl push fs dec inc arpl adc mov rcrl push push pop cmp cltd mov or lea orl stos inc xor sub pushf dec sub lcall mov push divl dec sub int3 xchg popf lret fdivr sahf sbb xchg fcmovnbe js pop mov mov dec inc inc dec push dec jp js adc les xor sbb (bad) movsb in lock push enter push (bad) push xchg inc xchg ss ss enter bound push je stos cmp mov push sbb pushf in dec inc ja out lret adc sbb rcr hlt loopne jo fadd test mov hlt dec adc mov into repnz xchg mov movsb xchg daa jne mov test test test adc or je and adc js rol mov es sbb ficomp push addl push mov je and mov daa je inc xchg xor fnstcw pop and scas es dec loop push clc mov enter pop cltd xchg clc nop pushf loop inc mov mov dec mov inc aam inc and jbe sub aad sub jno and sbb movsl jno movsb in dec xor sub pop fwait les (bad) ror (bad) clc xchg rolb loop inc imul inc inc pop push inc inc outsl push inc inc inc xor push push push js dec xor dec data16 js dec inc inc inc inc xor dec jo outsl push imul dec dec das dec insb das push cmp push js push inc inc dec das das pop das jns dec aaa inc fs inc dec xor dec jbe jne dec inc inc inc inc inc sub jns dec push addr16 jns dec das jns inc push inc fs inc push cmp push js push inc inc push push inc fs inc dec push outsb push inc inc arpl inc inc imul dec push ja inc aaa addr16 inc ss dec inc aaa ja inc sub jns jbe jp data16 dec dec push cmp inc inc push imul pop inc dec cmp push ja dec push addr16 inc ss dec dec push ja inc aaa addr16 inc aaa ja inc sub jns push xor data16 dec dec push cmp inc inc imul inc jns push imul inc imul inc ja imul arpl sub sub inc addr16 imul dec push das das das das das dec insb das push cmp push js push inc inc dec push push inc ja xor sub inc inc inc inc outsl push inc inc dec popa inc inc inc inc inc push outsl push inc inc addr16 inc inc inc dec xor inc dec je push jns push dec cmp xor inc dec insb inc push imul push push inc dec je push inc dec push dec cmp xor inc dec insb inc push jns push dec xor imul inc push push dec push dec cmp push push dec inc inc inc inc inc inc push ja das push dec dec push cmp inc inc imul inc inc push inc push outsl push inc inc xor inc inc inc imul das dec ja inc dec push addr16 dec push ja dec push push push inc push imul pop inc imul inc imul dec pop insb das dec ja inc dec push addr16 dec push ja dec push addr16 dec push ja dec push addr16 dec push ja dec push push push inc popa addr16 outsl jno pop das das xor imul jns aaa inc addr16 inc inc inc push dec fs inc dec imul fs inc dec imul fs inc dec imul inc inc dec imul dec fs inc dec imul dec fs inc inc popa dec inc push inc xor inc insl push xor xor pop outsl ja dec dec fs inc inc popa dec inc push js push addr16 insl push push outsl xor pop outsl ja dec dec fs inc dec jns inc push push dec push push inc push dec fs inc dec je inc dec dec push xor push push dec outsl xor push addr16 dec push das das dec inc pop push inc inc inc inc inc outsl push inc xor inc push dec pop inc inc dec arpl dec pop inc inc inc imul inc dec inc push push xor inc inc inc inc inc inc outsl popa push dec push das sub inc jo inc dec insl inc xor das das das cmp dec inc inc inc dec dec push imul addr16 outsl jbe jbe das xor push cmp dec dec inc inc inc imul js cmp inc inc addr16 push imul dec push dec popa addr16 outsl insl jbe das das xor push push inc ja cmp dec dec inc inc inc inc das inc pop push inc push push inc dec ja push dec aaa inc dec push push xor inc inc outsl inc popa dec push das fs push push addr16 inc inc inc xor insb jne xor xor inc push fs inc inc pop inc inc inc inc xor push inc inc inc dec push jns xor inc dec je das inc push dec ss jp das das cmp xor imul je dec inc dec outsl inc inc inc inc inc dec push inc inc inc xor push dec imul imul dec inc inc inc inc inc push xor imul push push popa jbe outsl ja insb inc inc inc push das dec push inc inc inc inc inc push inc inc push inc push dec xor inc push imul inc inc inc inc dec push inc push outsl imul inc dec addr16 aaa das fs jno inc push jae xor dec xor dec dec pop je push push xor jns imul dec inc dec dec cmp push inc fs outsl inc push inc inc inc dec je jae push push push inc inc inc dec je jae push pop ja inc inc dec jne imul push dec inc push inc inc inc inc inc inc js push inc dec cmp imul inc addr16 imul insb inc inc dec push push imul dec dec dec push inc dec fs push xor push inc inc inc dec dec push push bound push xor ss push push bound push xor imul insb dec inc dec insb inc inc dec insb jb inc push push push inc push bound push inc das cmp addr16 jbe inc inc push imul sub dec push das imul das inc ss xor xor inc inc inc inc inc inc insl inc xor inc pop cmp push push inc insl inc xor inc dec inc pop push data16 pop cmp push push inc insl inc xor inc push inc pop push data16 pop cmp push pop inc dec imul dec fs inc xor xor dec inc ss push xor inc push imul cmp inc pop xor and mov lods mov inc (bad) fbld inc inc inc xor push push push js dec xor dec data16 js dec inc inc inc inc xor dec jo push imul dec dec das dec insb das push cmp push js push inc inc dec das das pop das jns dec aaa inc fs inc dec xor mov stos cmp inc dec in and fldenv push push adc mov test inc dec push outsb and sbb (bad) ret dec pop lret lret xchg mov inc adc mov lret fwait mov roll push test xchg pop sarb push jmp (bad) es pinsrw xor and gs daa jbe mov xor adc adc jmp inc dec push push inc ja lods push and (bad) nop mov rcr and js dec test movaps daa or or insb inc push imul push inc dec mov lea sub and dec ljmp out ja das push in das cmp pop sbb sub dec (bad) xchg stos xchg mov pop xchg out push xchg and xchg movsb hlt lds xchg dec (bad) inc xchg xchg mov cmpsb aaa mov cwtl rorb push (bad) rcr rorl aam nop enter in mov aad push and fs dec xchg lods lds in ret or mov adc or or jnp and inc and nop aad repnz movsl cmp and xor icebp sub inc dec dec push loop xor inc cmp jp adc inc xchg inc push push cmc outsb movsb xor (bad) xor dec push push push xor outsl popa push test lds dec scas or xor sbb xor mov addr16 dec inc and mov mov mov fcomp adc adc or xchg adc adc rcll pushf dec fiadd dec fs push push addr16 inc adc push mov adc adc inc push mov dec sub call iret dec jae cltd xor mov sbb xchg popf push inc inc push xor cmpsb and sbb mov and inc mov nop push sub sub out cld dec sub xor cmp xchg cltd mov mov mov dec and fwait mov (bad) clc xchg sbb adc cmp xor sbb adc or jno test adc ljmp mov ss push cld dec mov sub lret int dec or mov loop cmp addr16 jbe inc inc push imul inc ja push das cwtl sarl mov xchg mov das push push movsl sbb and lods test sbb mov and les dec mov movsb pusha mov mov and les fs loop faddl es sub or rorb mov inc xchg jae gs xchg xchg push inc ja pop and movsl add cmp or fs and sub dec push addl lds xchg jg stos mov lcall test mov jne out mov lret dec cmp mov mov sbb xor mov dec mov cltd cli inc mov ret dec iret mov and es dec inc jae pushf movsb cmp sbb sub sbb mov sbb sbb xor inc jo adc push sbb mov imul xchg push mov stos lcall inc push and add mov pop cmp rcl push xchg icebp cmp es xor movsb pushf adc or andl mov es cmpsb push or rcll push dec data16 das xor and pop bound shrb mov dec es push dec or loop inc les and int3 rclb and push inc aam adc (bad) mov mov and fwait es cmp push es leave push push adc inc mov and in cltd fwait adc scas jno daa movsb lahf jmp leave pop inc sbb mov sbb mov pop sub sub or or pop inc adc adc sbb mov rclb sbb or popf into and adc mov mov sbb rcr enter xchg in mov bound ds adc fnstsw decl mov mov or dec pop mov ret and mov dec lcall adc xchg or or and cmp cmpl pop sbb jb mov and sbb sub sbb jns mov lcall stos imul jns inc or ret pop or sub or mov sbb dec and or adc inc lcall cmp mov jns pop bound or xchg and stos adc or or or adc dec and inc mov or or and imul or cmp (bad) or inc dec (bad) ret mov jp mov mov mov bound pop mov adc push cmp mov xor ret jp dec mov jp or or mov jp mov xor pop stos dec or pop dec xchg xor dec ret xor or sub jns jp or jp or or lret and (bad) xor adc dec (bad) ret jnp cmp sbb lcall mov push test adc adc mov jns and sbb sub jns jns mov pop xchg xchg xor sbb jb mov lret lret (bad) adc jae sbb jb dec jns mov pop lret mov or and dec jb popa pop and popa lcall lcall mov mov mov ret sbb imul shrb imul shrb imul ret pop ret bound mov ret dec lcall mov xchg lret cmp pop or lret dec jp and sbb inc mov ret cmp sbb jnp and adc push and xchg inc sbb leave mov fwait sbb or stos arpl pop pop adc and ror mov imul leave lret push mov ret jb rolb xor or mov lcall cmp or xchg jno xorl lret xchg stos mov jae xor mov stos dec jnp ret pop mov sbb mov and lret sbb push or xor sbbl sbb or mov mov mov and lret ret mov rcll jp adc sbb cmp and mov cmp or and xchg mov and ret mov lcall or sub inc mov mov popa ret mov push adc dec andl adc adc lcall mov mov or or or or cmp dec or xor mov jns adc sbb or (bad) pop mov xor or and mov jns mov mov cmp push inc imul cmp jp adc sbb jb adc lret push and lcall lcall jp inc mov stos rolb adc mov stos inc dec ret pop jns jns mov or or jp jnp sbb mov rolb imul mov and sub stos inc mov xchg jp pop cmp jp lcall or adc pop xor or inc lret dec or jns jp lret or inc stos jp dec or inc cmp cmp jns pop xor pop cmp mov or cmp mov adc or sub sbb orl adc jnp push pop or or pop ret mov ret dec mov shrl mov jp popa lret mov mov dec mov mov lret or inc xchg xor or ret stos ret fwait dec jp jp mov or push xor jp and sarl mov or push xor lcall or or dec xchg rorl dec xor or mov dec bound mov xor dec bound xchg jnp push cmp or mov inc lcall rolb xor or leave stos ret jp jae ret roll or dec mov mov or ret pop rol jns xor dec bound sbb xor or jnp mov sbbl xor imul jp jp or or jns sub mov ret mov (bad) mov shll push and adc ret arpl or jns jae mov adc pop ret xor pop dec push push pop xchg pop rcrb rclb rclb cltd into adc or fstpl pop dec lret cltd fcoml push sbb push sbb aam fmul rcl xchg popf mov push adc cltd pop pop rcl or push rorl rcll and xrelease adc repnz test xchg mov adc adc inc push xor xchg inc push pop je xchg or xor jb sub or xor inc cmp mov mov data16 sbb adc inc jne push je (bad) stos pop popf and roll popa fstpl fsts fldcw xor popf push repnz or or inc pop das cltd push cmp mov int les imul sahf push push sbb xor xchg pop movsb and pop sahf push pop sbb rcll mov push nop mov pop mov mov push dec push xchg xchg push or in push pushf mov mov das xor xor push sub and sbb xchg dec jmp daa sub inc or mov or int push sub out enter cltd inc pop dec aad pushf dec mov imul rcll adc mov adc in mov in xchg movsl xchg loop push and ret and add cmp es mov sub sub imul xor ljmp enter push in (bad) into mov out data16 push dec sub fs jp push jb adc inc sbb mov cmp and rcll nop push cmpsb dec jae inc push inc adc arpl gs (bad) stc push push xchg xchg mov jb xchg sbb aad or dec mov movsb pop inc xor xchg and xchg add cli and imul sbb imul cmp jle push clc mov test cmp and dec in call push insl (bad) out mov and and sub jo fcompl jb dec push mov xchg adc push imul in sub and and pushf xchg sahf push les mov mov pop mov or or sub mov imul and fs data16 mov inc outsb push dec imul or inc or jp jnp sbb dec out hlt mov fldcw (bad) push lods push xchg inc xchg jp pop cmp jns xchg lea fmulp xchg fs test mov mov test push xor insb vpmulhw ljmp mov ficoml in imul inc push sub push adc push xchg sbb js ror sub imul mov sbb pushf lods mov and pop push adc jae cwtl mov mov cmp and daa cmpsb adc sbb (bad) jno movsb in dec imul or inc cwtl in popa and push inc adc xor sub mov scas les ret mov adc aaa and sub sub mov fnstenv inc sbb test pop insb jbe ja and sarl imul xor jg out in aaa arpl mov enter cwtl lea repnz sbb call decl (bad) xor inc adc dec test lea push mov sub jb mov inc mov xchg mov push mov es mov mov les inc sbb mov cmp mov and jb and sbb popa dec data16 stos and inc mov and mov mov jno xor aaa imul inc les ja xor dec loop inc cltd loope pop rcr faddl decl leave in and dec outsb mov mov xchg inc inc add adc mov scas in jns dec (bad) xchg jle cmc add or jae ja inc pop and and pop adc lcall mov aaa adc loop dec call mov xchg add and adc push popf test mov hlt (bad) and sbb push test sub mov xor (bad) push adc mov xor pushf int3 rcll lods or push sub mov imul popa dec dec data16 xor in push xchg xchg sub mov xchg fmul fnstenv cwtl mov iret rorl dec sub sub mov xchg xchg xor and adc fwait aam lret cmp push pop fstl repz mov daa xor rcrb mov xchg int3 js fucom push sub stos inc mov dec mov repnz mov es push xor jl or xor adc cmpsl icebp and pop xor xchg and pushf popf aad rcrl xchg lcall jb sub cltd push push pushf dec fwait aam popa inc inc imul iret enter adcl pop call mov sub sub xor mov dec or inc jne push je imul xchg pushf mov enter (bad) or sub call vmovntdq sub leave int sub enter in xchg test cmpsb leave push push es in imul int3 dec dec push sub gs dec test sub cmpsb sub lea sub out mov sub out or dec push push pop or test sub sub es lret sub stos pop or jmp out lret into in insb dec sub leave or push gs or (bad) out insl mov test push dec sub sub sub sub test mov cs insb in ljmp mov lret dec and out test cmpsl or sub sub lea ljmp stos sub enter imul test dec dec into mov xchg dec lds sub lea stos test dec dec int sub mov push xchg push or in sub into (bad) or imul sub imul xchg iret or (bad) lea out mov or sub sub dec mov enter sub enter sub or call mov push sub out or in out into sub sub scas push and cmpsb xchg into sub dec inc out cs out dec call test sub dec dec dec sub lea cs (bad) mov out xchg mov sub lods out mov mov push and in call stos or push or mov mov int3 out dec int3 int dec dec inc or sub mov cmpsb in mov das sub or prefetch call or mov sub imul push sub or push stos add or out sub out enter into outsb test dec test sub in sub or push or push scas ljmp sub sub outsb imul mov sub sub test mov sub sub push sub gs out or sub sub sub dec (bad) sub in sub push sub int3 insl dec push sub push or es (bad) sub in sub sub enter imul sub in dec dec in test sub or lods dec sub push and es (bad) sub in sub sub sub push sub in out sub sub push ljmp or or sub and es (bad) sub in sub lea push push and push sub sub out test or sub or outsb inc in sub gs ljmp test (bad) sub in dec out ljmp or or lods dec sub push and es (bad) sub in sub and sub loopne ret fwait sbb mov and fwait pop xchg pushf mov and mov mov mov mov xor xor sub and mov fwait and sub xor cmpsb daa xor and aaa movsl xchg pushf lods sub dec push xchg sbb xchg or dec push adc fcoml nop aam aad push adc nop push dec enter and push lret into in insb dec sub leave or mov xchg or (bad) out insl mov push pop jb inc pop dec imul push or xchg pop pushf fxch fst pop sbb adc jmp or cmpsl or sub sub lea ljmp sub enter cmp call dec push mov mov inc inc add adc sub or ss add in ret dec pop lret xor mov mov arpl lret and dec sub or cmpsb xchg (bad) sub fs push cmp mov xorl xor aam (bad) mov xchg scas ficomp mov fsubp test movsb pop bound out (bad) data16 ljmp movsb les out call shrb fs push push pop xor outsl je inc inc arpl dec push xor imul cmp push test (bad) cmp mov jae and xor xchg xor push xchg adc (bad) pop nop rorb outsb enter aam (bad) out xchg nop lock and xchg sbb hlt adcl test aam cmp sbb xchg pop loope adc shrb pop pop xor sbb add add adc inc push inc les inc mov je xor dec or sbb cltd and mov mov sbb adc sbb addr16 sub push les (bad) and xchg mov mov mov sbb gs js jns adc inc ljmp and mov incb adc adc cmpsl or inc call pop and jp sub popf inc enter in fstp mov xor inc adc fs sub das sub xchg movsl call mov adcl push sbb cmpsl movsl or lcall mov adc lcall adc rcll cltd ficomp adc clc mov gs and sub jb jb scas mov (bad) enter gs jb movsl xor repnz and sub push sbb lret add sub mov dec and mov loop inc mov xchg mov (bad) (bad) (bad) es (bad) (bad) (bad) (bad) clc fwait sar stc sbb push mov (bad) (bad) inc push cmc stc sbb (bad) aam icebp xor in (bad) (bad) (bad) (bad) cld dec push clc xchg or mov push cmpsb xchg js frstor push adc dec push pop leave ror add int3 shll inc or sub xor js fdivrl ds cmp jns push fwait int sbb repz mov cmpsb push sub loop xor icebp sub decl adc inc lahf jmp popa addr16 dec in push xor inc dec adc xchg xor mov js adc (bad) cld dec sub (bad) (bad) (bad) stc sbb sbb (bad) push sub jle data16 out mov or lret clc xchg push inc test cld mov stos mov mov dec test or sub xchg sub in sub inc imul imul (bad) es loop mov movsl and mov test sub xor mov jbe jno cltd out dec imul sbb nop rorl and sbb js push fs xor lret int or inc imul dec mov dec je clc xchg push mov pop pop rorb ret add lea adc mov mov sub lods and leave adc add or xor inc roll mov add add push inc lods adc or inc lods xor or mov sub fldenv leave mov add inc inc push and shrl movsl cmp inc fucom roll sub int int3 mov add sub or popa inc lods xor and inc push mov xchg mov add movsb loope and push dec or add add inc xchg dec add and rcrl adc dec xor or inc test and sbb sub test mov push inc in sub movsl cmp inc lods push cmp mov xor mov mov inc lea inc movsl add cltd popf or pop cltd cwtl aad loope xor dec gs mov mov cwtl aad (bad) and mov lods pop and inc inc in sub dec adc or add lea sbb mov add pusha fdivrs add lods mov sarl sub adc cmp or xor int lods sbb mov mov and movsb roll sbb xor mov cltd or lds (bad) add sbb aad add inc mov mov cmp or push inc lods xor adc add inc pusha lods mov lods in fisttpll aad dec shll xor or jmp or or add xchg jmp or shll inc add sbb add adc inc inc or adc popf add test in dec cltd adc dec xchg loope movsl pop int mov lods adc rcrl loope loope sub add cwtl (bad) cltd sub xchg in cmp rcrl fxch popf xchg fnstsw push lds test push lea adc cltd xchg push mov popa xchg push jmp mov loope xor gs in adc int popf push and sbb inc int3 mov mov inc loope int cmp add inc int3 mov sbb loope or mov add mov leave adc or mov xchg inc mov push add and pop fsub pop int sub add push popa lods push inc loope loope sub add (bad) aad in cmp pop fstp lods adc cmp dec inc mov lods adc enter xor and enter aad inc inc or add and add int3 pop ret movsb cwtl mov and aaa mov mov cmp mov daa mov sub and xor aaa sbb sub mov test mov and cmpsb mov movsl and sbb and bound dec xor dec inc imul xor xor xor outsl imul and mov adc adc pop rcl int pop pop sbb data16 jo nop test (bad) loop in (bad) insb mov movsb hlt xchg fs xchg les xor and xor pop aad adc push jp xorl jns mov stos or push das cmp push push bound adc rorb and orl (bad) sbb mov xor mov (bad) mov popa xor mov push nop in mov sahf bound test sbb aad cld lret or jb and test or dec sub inc das xchg cmp lds int3 dec leave cmp pop push pop rclb xchg mov (bad) inc aam adc sbb mov cmp sub mov mov push arpl mov mov mov or xor and sub xchg mov sub cwtl and xchg mov cltd xchg jmp int mov or push inc loope dec jmp gs inc enter mov popa xor mov popf pop dec push das fs jns push adc xchg xchg cltd push adc push mov mov dec push push outsl inc push das cmp dec xchg inc int fwait pop dec dec jns inc cmp arpl inc gs push pop jbe addr16 inc and rclb int3 lret dec push dec pop gs jp sub and in adc lods jmp push gs inc das inc enter test push inc enter lods es cmp jnp adc sarl adc inc and adc loop inc adc scas out mov push int and aad pop xor and enter aad mov ljmp and mov loop xor mov inc inc and or xor scas or (bad) push mov addr16 outsl ja imul sbb rclb sbb rcll nop cld enter in add dec je (bad) stc xchg pop pop push int3 sbb scas lods and pop sarl jmp mov and mov adc adc icebp (bad) and mov cmp movsl cmpsl (bad) nop jb mov mov aam clc xchg pop jmp leave push jg inc cmp or cmp push xchg fisttpll xchg xchg fidivrl hlt movsl ss movb (bad) and enter lcall lea push (bad) movsl sbb cmp and dec xor jnp cmp adc inc jmp inc push push inc icebp mov stos repnz dec inc pusha imul and mov xor xchg out mov inc mov push or aam fnstcw cmp cmpsl mov bound xchg dec test lods (bad) lods dec mov test stc nop rcr lret bound adc test xchg dec jmp imul insl inc icebp and cli push and mov sub loop pop in dec inc inc and adc xchg xchg and xchg sub add and sbb lods sub sbb imul xchg imul mov inc clc lcall inc mov push xor mov nop in imul xor and xor inc les and aam sbb popf roll mov aam push daa sub mov addr16 xor adc xchg adc adc int3 xchg sahf aam fsubr es cs mov movsb test in ja xor out out or dec adc jne fldl or adc push in dec push aaa out dec push popa ja xchg insl adc (bad) in push sub andl and cld xchg sub and (bad) repnz cmp jnp adc pop jb test and push insb les mov adc inc cbtw xchg nop mov and push xor pusha fwait mov les lret xchg (bad) mov (bad) jmp (bad) xor nop mov les adc clc lcall aam cld dec dec arpl jmp sub and sub adc in sub add inc out fwait nop fsts pop mov sbb es popa and cld dec leave xchg and and dec int3 ret loop fist lcall aas decl mov es movsl and cmp and fwait sub pop mov test mov test mov mov pop cwtl sbb mov cmpsb pushf mov stos fwait mov mov adc mov mov mov test xor es movsl and mov mov test mov and pushf and and mov sub sbb mov aaa mov cmp movsl and sub cmpsb mov movsl and mov sbb mov mov test stos movsb cwtl pushf and and cwtl lods mov mov mov cmpsb mov movsl and mov stos movsb cwtl cwtl and and mov mov test stos movsb cwtl cwtl and and mov and mov lods mov sbb and and mov movsl test cwtl and and mov and pop mov and mov mov pop xchg lcall mov sbb sub test mov mov mov cmp movsl and mov test xor cmp sbb sbb movsl and mov mov test cmpsl mov mov and test mov and cmpsl and cmp es test mov movsl and fwait and mov xchg mov cmp mov and movsb test movsb and mov xchg mov mov fwait xchg mov mov and daa cmp mov pushf sub mov xor cmpsb sbb pop lods daa pushf lcall cwtl pushf mov mov cmpsl sub test sub mov and pushf mov cmp mov mov and mov fwait adc sub sub mov pop stos xchg pushf sub mov sub mov and cwtl stos cmpsb sbb mov stos sbb mov lcall mov cwtl mov sbb sub lods and mov aaa and sub xor mov sub cmp mov mov sub aaa cmp stos test test mov cmp movsl sub and sub sub mov sub pushf mov sbb mov xor sub xor mov xchg cwtl mov mov mov sub xor mov cmpsl sub mov xor cmpsl xor and xchg xchg pushf test sbb mov test sub cmpsb mov and xor and sub stos mov mov and mov xor sbb xor test cmpsb sub cmp and mov ss sub sub mov and mov mov mov stos movsb mov mov cmp cltd mov cmpsl mov lods and mov movsl cmp xchg xchg lcall xor mov xchg lcall sbbb push dec fs dec inc push jo xor ss dec arpl inc das fs push push push push imul or or or push and cmpsb pushf mov aaa dec imul push test test push fwait sbb and xchg mov lret push test (bad) sub clts or ficoml sbb xchg popf rclb jno sub sub mov popf pop fldenv and movsb mov cmp and mov pop inc adc inc sub mov and lcall ja jbe cmc xchg add test cwtl sbb cmp repz les mov dec out or vcvttpd2dq mov (bad) leave (bad) push jae and mov popf xchg dec (bad) mov cltd leave leave shl int3 mov cs push xor or dec sub cmp dec imul cmpsb sbb cmp mov fwait and movsl mov mov cmp push dec aaa dec push jae inc pop pop popa addr16 jp insb pop push das js inc insb mov pop fsubrl in lods pushf loop mov out xchg adc mov inc imul jns test or xchg sub xchg bound and mov push data16 jae ss and push fs cmc movsb jae mov jne int or xchg jl or mov and stos and push xor inc sub outsl xor inc outsl inc stc adc push nop cmpsb gs arpl inc push scas jo mov pusha mov shr inc test dec dec mov dec push int call jb mov call mov out aam mov stos fmul fdivp mov pop bound mov cltd ljmp sbb cld dec imul les mov je xchg and xchg bound cmp push sarb pop pop shlb dec je test pop imul inc insb stos mov mov ficomp rolb out inc push notb xor mov cmp cltd enter ret in inc dec jbe pop mov stos cmp mov xchg stos dec cmp imul loop dec adc cltd push mov adc mov in jno inc (bad) test pop loope sub dec and cwtl lcall push inc push aaa mov fstpl imul movsl test test xchg xchg sub std inc mov jnp stos jb inc and fimul inc push jb cmp nop inc dec pop fs inc xchg dec xchg mov fs mov inc jo (bad) repnz ret mov jg mov popf adc sub push aad les and das mov adc call adc push xor adc xchg or pushf movsb ret xor xor mov xchg pushf inc enter les lods sub cmc or or mov lret pop rcr sbb adc adc sbb cmp (bad) dec rcr loopne adc push dec pop das push push cltd lods lods pushf ror adc (bad) dec mov pop cli movsl pop push and xchg adc xchg fwait or shrl push xor sbb loop push test inc cmc dec in mov lret pop fisubr int3 pop adc scas inc call in dec jno inc (bad) in lea or dec loop dec ljmp xchg sbb mov pop fs sbb int3 adc mov mov cmpsb cmc jne mov jmp fwait cmp jmp ss bound cld dec dec aas jmp inc cmp push sub and xor cmp dec stos bound pop daa mov mov sub repnz enter inc inc inc test (bad) cld xchg dec xchg sub jl inc (bad) and mov es les and outsl jmp imul out (bad) data16 gs adc dec call (bad) push aaa sub (bad) (bad) and ss push cmp and decl jg mov (bad) cld dec inc adc xor roll adc pushf dec mov mov ds inc xchg mov sub (bad) cld lea in inc (bad) inc hlt mov repnz xchg test repnz (bad) repnz gs jbe fs push lds inc xchg les hlt and xor inc arpl (bad) cmc push adc divb adc lds fs xor inc adc adc push xchg add xchg test xor fs cmc push ss lds fs xor mov adc aam inc arpl je push je adc adc jbe add test xor inc arpl inc cmc push push xor es xor adc adc push jbe adc adc xchg and adc movsl xchg lds inc test pop and and repnz xor xchg jbe adc adc xchg xor push and data16 fs add mull repz movsl push add push push aaa push inc inc addr16 add xchg addr16 mov xchg pop and repz and test mov divl xor pop push and xchg adc (bad) xchg xchg add repnz xor repnz es xor data16 test repz testl xchg movsb xchg xor push add xchg lds lds inc test ss mov repnz add repnz xor xchg jbe adc adc xchg xor push and data16 fs push xchg repnz inc movsb xchg and xor mov es repnz xchg and adc adc test inc adc and adc testl adc mov repnz es xchg les and repnz adc adc xor xchg mov repnz inc addr16 add jae xchg push (bad) addr16 repz and test mov divl xor push inc jbe adc xor ret (bad) repnz xor movsl push mov notl repnz inc test arpl cmc push inc xor and test add push push jbe xchg fs hlt gs es in fs add and xchg adc inc je xor gs jbe movsl test xchg notl movsl and push xor xor je inc push adcl jne xchg notl inc je ss xchg testl pop adc xchg adcl and xchg arpl jb jne add jbe testb out movsb divl xor mov movl xor push in adc mov inc hlt data16 xor xchg lds xchg test inc and mulb add repnz xor xchg jbe adc adc xchg jb inc push inc xor and repnz inc xchg out push mov repz xchg (bad) repnz jecxz xor mov arpl xor movsl test cmc pop xor xchg arpl push adc (bad) cmc push inc xor je mov movsl push jne push add and xchg movb inc xchg xchg arpl xor push test repz repnz inc xchg push push repnz fs cmc push push xchg inc jbe and add data16 pop xchg mov mov pop xchg cmpsb xchg xchg mov mov mov cmpsb and sbb sub movsb mov cmp stos cwtl mov mov sub sub mov mov cmp mov push dec xchg test add nop ret test addr16 or adc les adc adc push jbe inc inc sbb orl adc push ret xor bound mov and lcall pop push adc push xchg xor push and data16 fs or int3 fwait shrb sub outsb test mov inc jmp in sub call push inc loop xor mov fwait std sub adc (bad) test popa popf test fs xor inc xchg sub jb sbb lcall sbb dec popa lret rorb loope cmp nop in cmp mov (bad) decl bound daa and pop nop aam mov stos xchg mov (bad) and inc add loope add inc test loop push icebp and mov xor cmp mov fstpl xchg dec xchg xchg rcrl pop fsubrp xchg cwtl pop adc dec and dec stos (bad) out pusha es jns aam push movsb push inc push push adc (bad) or imul fs push outsl xor arpl cmpsb cwtl xchg (bad) jb fimul mov dec insl test inc jbe mov cmp stos dec or lret popf mov fsts (bad) int mov xchg push and adc cmp inc mov xchg bound movsb aas mov mov (bad) xchg push repnz test imul daa nop shll and xor adc stos (bad) adc ja imul das dec xchg mov mov (bad) xchg xor int3 push pushf call test inc push push xchg inc sub adc rol adc cmp dec test mov in jb inc dec xor pop xor inc movsb sub cmp movsb pop pop imul adc dec push xor adcl jns xchg push nop stos or sub sub out int or lret jno xor int3 mov mov das or inc dec sub das dec movsl xor and mov ret mov nop ficoml scas test xor test jo xchg rol pop xor bound aaa sub or lds lods jmp int cmp sbb sbb dec cmpsb xchg dec fs xor loop dec cltd loopne popa mov push push and enter and and js sbb les popf fcmovbe adc push mov push xchg mov inc je jae mov xchg mov inc les and je movsl mov roll xchg xchg push jmp aaa clc popf lret les mov adc adc mov es jae orl cmp pop mov aas mov pop in dec je xchg cltd mov (bad) cmp fnstcw inc inc daa gs pop adc or lcall out int3 mov in xchg out arpl sbbl sbb pop or and fwait pop or bound mov mov stos push nop push add mov add mov ss imul push imul or add fwait cmp sbb fwait sub enter iret les mov fwait sub xchg enter test fstl adc mov dec adc push push push jb mov stos (bad) and or bound les xchg mov pop (bad) icebp and test rorb mov sbb inc les cmp fsts xchg aas in push push xor arpl iret in dec fs xor mov push mov dec movsb cmp mov mov lods daa sbb sub arpl pop dec aaa loop dec loop dec and sub pushl push jnp adc (bad) out mov adc call cmpsl jg mov jg sbb daa je mov jmp adc and inc nop (bad) icebp sub jmp mov and les jp enter imul mov icebp pop stos jg ja cmp dec dec mov inc adc dec mov addl clc xchg shll addr16 or xchg cmp or adc pushf mov cmp push inc dec mov inc adc xor mov sub sbb lods sbb inc adc mov pop mov lret enter sahf push jmp dec sub ljmp sub imul test call in outsb or test sub cs test sub in scas movsl ljmp insb in in push sub dec call lea enter in mov sub sub ljmp push or into jmp mov jmp jmp push and sub test sub pop or sub iret or stos es test lret test test mov dec inc lods in jmp test mov test sub mov or or or or test dec dec imul lret ljmp xchg in outsl dec jmp das sub sub dec sub sub call and in out sub lods dec sub scas cs outsb in push outsb (bad) or inc call sub push test or lods sub test mov and call sub xchg sub imul in or dec or test imul stos or stos pop sub or cmpsb push or lods sub mov sub das push or sub sub sub es imul dec or or sub sub or inc sub mov sub into sub es call pop cmovne or sub mov dec out jmp imul mov insl push insl out or in lea push dec cs push in outsb int xchg sub imul or jmp cs ljmp call sub dec into call sub in call test int3 lods sub dec mov push iret or or imul stos and es sub enter (bad) enter mov mov dec int into jmp cmpsb imul enter mov test add dec dec sub es out addr16 sub int3 into call cs stos or mov or lea push or sub mov out leave or sub out call out enter sub sub das dec sub jmp stos enter sub mov sub push into jmp outsl sub int leave or call stos sub push in dec or sub sub push int dec lods out call in dec int3 enter int sub sub sub pop sub mov call sub sub sub cvtpi2ps sub lret mov cs test and daa sub inc lea sub imul mov call stos push push pop es or in push push test sub dec stos pop or enter (bad) es dec and mov and and xchg pushf rcr scas cwtl (bad) mov mov ljmp ljmp in out push out (bad) stos bound hlt pop push fs mov (bad) jbe adc cmc adc mov add add xchg cmpsl je inc loop xchg gs hlt test jbe xor inc jne divl push mull jbe push adc sbb xlat sbb dec push lea xchg push push push sbb rcll nop lea rorl fmul push xchg and and sbb sub mov and sub cmpsb sub cmpsl and mov sub sub mov test mov or adc aad push sbb push xchg push mov jns xor enter outsb (bad) test (bad) lcall addr16 inc xor cmp dec inc push inc push push push push inc inc inc push inc inc dec push dec popa cmpsl sub mov stos cmpsb sbb xor or int dec scas dec or test imul push push push cmp push push push imul push inc insl popa dec push fs dec push fs cmp push imul mov call xor and in mov adc add into sub (bad) dec sub cmovb in arpl dec push out in imul das push dec xor cmpsl adc inc imul scas pushf movsb lret (bad) cmc inc xchg xor dec sub and loope mov inc xor xchg test fabs push pop adc sub fs mov xchg mov sub and inc ja push bound lcall mull and je test inc adc je sub repnz dec dec imul inc jb outsl jbe cltd movsl inc sbb out enter and repnz push jmp imul int leave add xchg aad add mov (bad) cmpsb mov insb (bad) hlt stos fbstp imul jae adc xor pop mov cvtpi2ps (bad) jmp lret mov lea or out fisub cmpl fimul aam aad or push lods sub and and rcrl in test or into nop repnz rcrl pusha mov mov mov lret xor arpl inc or (bad) push stos (bad) and jns inc (bad) dec arpl jae xor push fimull jp push inc arpl popa jmp test or xchg (bad) mov mov cld dec movb xor inc inc (bad) rorb and push mov enter test mov mov aaa xor cltd int3 (bad) sub int sub (bad) pushf xchg or mov sbb push mov movsb inc cs mov push push out stos dec mov push fsubp fnsetpm(287 cmp inc std sub test in mov insl sbb lcall sub popa sbb (bad) mov les lret sbb sbb nop mov xchg stc sbb inc dec clc xchg fwait (bad) loopne (bad) es mov dec sub dec dec and lret pop ficoml pushf xchg and and aam adc fmuls mov arpl and sub out out daa sub ja xor hlt (bad) hlt inc arpl jne xchg in xor dec mov dec dec xchg int3 in aaa les and jno sahf mov repnz or sub test ret push push and or adc mov mov push adc dec push mov iret adc mov dec jnp (bad) xor mov loop das cld inc dec cld mov sub and push dec mov inc les cld dec dec bound cltd movsl int shll out sbb jp push aad dec daa add (bad) (bad) (bad) (bad) pushl arpl mov mov sub xchg inc xor fcoms (bad) dec enter test cmp adc enter push push ss das xor xor cwtl shll lods les fnstenv gs es adc inc sub lods test inc push inc inc inc push xor xor inc push jb inc inc push push push imul outsl bound inc inc push cmp dec inc inc dec push inc push pop push dec push inc push outsl xor inc push jb inc inc dec push inc push push push dec xor inc imul dec addr16 inc inc dec push inc push push push dec xor inc imul inc pop jo inc inc dec push inc push push push dec xor inc imul inc push jo inc inc das inc push push push push inc push push push imul outsl sub inc inc dec xor inc inc push push push imul inc dec inc push inc inc inc inc inc ss xor inc inc dec inc push push push xor inc dec inc push jno inc inc aaa das outsb xor das xor push dec xor inc push inc push imul push inc push push imul outsl jns outsl inc inc push cmp dec inc imul dec imul xor inc inc pop jno dec push push addr16 inc push inc popa dec fs push push das das cmp dec inc inc das fs push ja inc jo inc inc inc inc push addr16 inc inc outsl xor dec inc push outsl jns pop inc inc dec popa inc dec dec push inc inc inc inc inc push push imul dec addr16 inc imul outsw outsl outsl inc inc inc push bound push imul inc inc inc inc outsl dec data16 das xor push xor aaa dec push imul dec jae inc pop inc inc inc dec push push jp inc popa inc pop inc inc inc inc push pop outsl insb inc dec inc imul dec push das imul inc cmp das xor push push imul das xor xor dec inc inc inc addr16 xor push push imul das xor inc inc dec push inc dec inc inc dec push inc push push push push das push imul inc push push imul das xor imul push push imul das xor dec inc dec xor inc inc push imul inc dec inc inc inc ja sub ja inc inc inc push inc push pop insl gs inc inc push push inc inc dec push inc push push push dec xor inc ja inc inc inc push das cmp popa dec jo inc dec xor inc ja inc inc inc push das cmp push addr16 inc push dec xor inc ja inc inc inc push das js ja imul das imul jae push dec dec inc inc push popa inc dec inc addr16 inc inc inc push fs push outsl arpl inc inc dec xor inc addr16 inc inc inc push das cmp ja push ss dec push jno push inc dec push addr16 inc push push das push push das cmp inc dec xor inc ja inc inc inc push push push imul das fs push jne jb das xor inc inc dec push inc fs je inc push cmp dec dec inc inc dec xor inc addr16 inc inc inc push push das cmp dec inc inc inc dec pop inc fs pop pop das js xor inc inc pop xor ja push jne xor pop jbe sub popa jbe outsl dec popa cmp inc push push inc inc inc imul inc inc inc inc inc addr16 inc addr16 inc push xor push push imul arpl inc inc addr16 imul inc inc inc inc das inc dec js inc dec push insl xor imul xor dec xor inc push xor push dec dec dec dec dec push inc inc inc inc das push push imul addr16 inc inc inc dec jae dec push push arpl inc inc pop xor inc inc inc inc inc push xor insb pop arpl push inc push dec ss dec xor das sub dec push dec push push imul das fs push push push push imul inc inc dec push cmp das das push push outsb das fs push arpl js inc ja inc inc push push imul inc inc inc inc das fs push push push ja inc dec push das push push insl inc ja push push das xor inc push cmp dec inc inc outsl dec bound das xor pop jbe das das sub push push imul inc dec inc push push push xor push das cmp dec dec inc inc dec pop inc fs imul inc inc das xor xor inc outsl push push push inc inc dec jb ss push das das sub jp push push inc dec push inc push xor push das push push push imul das xor inc dec inc push push ja inc inc push push imul inc inc xor push inc inc inc inc dec cmp outsl dec dec inc inc inc sub ja inc inc dec xor inc push imul inc inc inc das inc arpl push inc outsl popa dec jo inc dec xor dec push inc inc inc inc push das js dec ja inc inc push push imul inc inc inc inc dec push inc inc inc push push cmp dec dec inc inc dec insb inc dec inc push inc sub xor jae push dec dec inc inc push popa inc dec inc inc inc inc inc inc push fs outsl arpl inc inc dec xor dec inc inc inc inc inc push das cmp ja push aaa popa dec push jno push inc dec push addr16 inc push push das push push dec xor inc inc push push push imul inc inc inc inc dec push inc push inc push push cmp inc dec push das push das das cmp push ret mov cwtl mov fwait and mov mov test mov cmp mov and stos cmpsl mov and xchg pop mov test movsb int3 rclb ja stc or icebp sub pop test lds call je inc push sub loopne xchg lods imul mov dec mov cmpsb hlt inc ss adc addl xchg sahf es in lea sub imul dec popf cmp test xchg inc mov inc mov sub adc add es (bad) out sub sub lods sub inc inc push xor cmp sbb push movsl xchg xor and mov mov and and imul hlt mov xchg sarl cs mov int inc jae adc sub add pop xchg fstps rorl cld (bad) sub and adc pop mov js push mov ror stc sbb adc int3 dec sub push scas into stc xchg push sbb push dec rcrb inc dec inc ja movsb pop pushf cmpsl aaa mov mov out stc or adc imul dec call lea adc dec popa inc ja push ss dec push jno movsb xchg rcrb sbb mov mov dec jno mov jb das xor inc xor mov adc mov push adc mov mov addl push lds addr16 ret push arpl jb inc inc pop arpl and mov inc imul inc cltd popf xchg in or ficompl insb daa add bound jp push ret arpl imul mov or stos jno roll adc push pop mov xchg test scas jno mov dec push xor insb pop arpl nop fnstcw addr16 aam es and xchg pop pop mov cld dec dec movb js jbe mov dec stos mov test dec bound and mov inc imul je push xor push das and jb mov mov or or and sub hlt mov sbb pop push loop dec and mov or sub call bound inc data16 xor aaa clc xchg push jno and les dec adc icebp xor icebp and (bad) and and int3 xchg jmp call repnz and bound mov inc inc sub xor adc and xor lods inc sub enter in outsl sub das or sub or xor cmp rcrl aam mov mov mov (bad) nop xchg pop out xchg mov xchg out lret (bad) jo inc ja (bad) sbb scas out movsl pop xor test sbb pop or xchg pushf lods jl ljmp and loop xor popa and cltd adc adc mov js adc aaa (bad) rorb xor mov cmp push xchg sub push xchg movsb mov data16 jb test sbb test cs sub push (bad) push sub dec data16 fs jae mov pushf aaa and fdivrs in dec dec or and dec lea or jp cmp xor andl mov pop and (bad) sub inc inc inc mov inc sub and and or and lods jmp dec enter and xor xchg cli inc dec (bad) stos mov test inc inc inc cmp fs adc aaa xchg mov dec faddl push es and loop mov adc fwait pop and jbe ss arpl in popa js call adc fwait sbb xor push jmp push cmp dec pop and mov xchg push xor or movsb xchg mov loop dec mov sub and push es andl or adc pop cmp pop pop int3 mov lcall xor cltd es push popa dec (bad) ljmp loop inc cld dec push lahf adc inc je je xor enter jo ss (bad) int bound adcl push dec jmp mov and push sub bound (bad) cld dec or sub (bad) aam inc je xchg enter adc daa xchg mov enter les mov enter iret loop jno xor push xor cmp mov adc mov sub frstor movsl popa (bad) and push inc lods sbb or adc cmp inc int popa inc lods and add mov pop inc mov add or add gs xor add popf or rol loope or mov add cltd or in inc ror adc add and int lods inc sbb loope roll inc sbb sbb or mov sub int (bad) in add sub dec inc test lods xor and add sbb mov add and add lods adc adc pusha rol adc xchg or gs add inc movsl cmp dec inc movsl push inc lods push and adc test movsl mov test mov add push (bad) sbb add lods pop adc lods xchg dec mov adc and shrl adc add cwtl mov lods push and int lods push and or loope roll inc cmp cmp inc lea (bad) mov sub int in loope add or test lods xor and add sbb roll sub add lods adc adc pusha rol adc xchg or int add inc movsl cmp dec popf movsl push inc lods push and adc test test add inc mov add adc or lods cmp aam inc push mov sub in sub dec add inc xor test fucom lods inc lods and inc nop fsts lea dec or mov adc xchg or and cmp cmp adc adc rol adc movsb loopne mov add add inc lods sbb sbb in test imul sub adc fldenv lds add pop cmp mov add (bad) sub push mov add and add lods gs add lods test add dec inc fnstenv xor adc add lds fstps rcl add lods adc inc mov leave int cmp leave enter push and mov lods adc adc add movsl call pop inc popf or inc aad or loope pop mov popa inc movsl jmp and xor cwtl shll roll mov shll fstl add fadd fsts push leave enter push and mov lods adc adc and in pop movsb int lods adc xchg xor dec pop inc popf or mov and xor cmp movsb mov test mov sub mov movsl dec dec cmp push push insb inc inc dec fs mov mov xor movsb ret mov xchg xchg (bad) (bad) xchg test pushf lret xchg pusha mov or es inc inc dec and cmp jb xchg pop rorb faddp repz (bad) int bound adcl xor dec inc mov add sub adc test inc inc push xor movsl sub fwait and cltd or cmp xchg push sub and cmpsb xor sub mov dec xchg adc popf adc bound test test mov xchg mov xchg cmpsl lods sbb inc int3 mov xchg cltd cmp cmp inc push cmp xchg les xchg out loop addr16 sbb pop cmpsb inc push pop outsl jns enter mov sub sub dec test pop les dec fs js and sub pop add int stos mov popf mov sub sub faddl adc cmpsb nop (bad) jo fmulp fsubr (bad) mov inc adc js push push adc sbb or jae adcl cmp mov adc inc xchg mulb test ss dec arpl sbb push push and dec xchg into push test insl push outsb jmp lret dec inc in inc data16 jnp mov insb imul dec inc imul push addr16 pop dec cmp insb jo push pop imul lods cmpsb mov lods test sbb pop sbb push sbb pop xchg sbb dec push es outsb out enter (bad) and enter inc inc adc out loop js test cltd xchg sbb pop pushf mov lahf cltd pop gs popf xchg dec sub lret sub dec (bad) ljmp arpl cmp pop les and lahf adc pushf push dec dec test fs push movsl xchg xchg xchg push push adc stos sub and mov xor stos sbb dec inc outsb jl lret cmpsb inc dec push data16 (bad) fcompl jb rcrb test es daa sub mov push cltd popa rcll rorl cwtl enter movsb ret and xor fs xchg jae jae (bad) xchg xor xchg cltd adc inc mov test (bad) (bad) ss je push dec bound or lea or dec sub int call and dec inc jae lods mov or movsb and xor xchg adc and dec push fsub leave sub dec add dec inc inc xor or rclb pop push inc pop arpl sub xor jbe dec push xor ss dec cmp jp sub popa dec addr16 xchg sbb cmp cmp test push add (bad) mulb pop add sub mov mov push push and cwtl xchg push mov outsl xor jns jno or and or test cmpsb pushf and adc xchg xchg push sub mov xchg dec adc cmpsl icebp sub in outsl inc jbe arpl inc cmp ja mov loop das cld inc daa xor cltd pop lods movsb leave sub mov jno fwait in cmp ss push cmp inc inc push test sbb and and adc cmc jbe xor adc mov and xchg test es cld inc sub and mov push test adc stos jle jae xchg sbb cltd int3 loop inc rcrb rcrl and sub out dec dec movsb push shlb mov and adc and bound out push cmp dec xchg inc and sbb push and sbb push xchg adc enter xor stos cmp mov ret je jne adc ret adc mov cmp loop dec adc adc cmpsl xchg dec aad inc dec call pop (bad) es sbb sbb inc dec imul stos imul sub mov adc fwait cmp mov sbb jns mov inc push sub cltd (bad) jns mov or mov adc inc lret and mov sbb dec push xchg pop or test or sbb inc mov pop cmpl mov sarl imul mov sbb jns jns adc jnp stos sbb sub or adc adc sbb inc sarl inc jp or push subl or jns lret cmp or and dec inc andl cmp mov ret imul push or xor mov imul push or xor jns mov orl sbb mov dec inc lcall jb mov cmp imul cmp or adc mov andl sbb dec popa leave mov cmpl cmp or dec cltd mov push adc jnp push or or ret cmp mov jnp mov mov inc cmp mov stos cmp or or or ret cmp mov jp xor jp xchg mov xor cmp or dec mov bound mov or push stos inc ret dec mov ret jno mov dec jns adc and and or mov or or mov mov mov cmp jnp mov mov or push xchg xor or dec mov xor push xchg xor mov mov or push lret jnp jns dec mov dec inc sbb addl or or mov stos cmp or mov or ret cmp jns stos xor jp xchg mov xor or or dec mov and mov or dec stos ret cmp ret lcall jb test dec xchg jno cmpl jp mov sbb mov dec or or or or sbb sub pop jns lret push sbbl mov jnp mov jp adc or mov or xor mov mov stos jnp mov pop (bad) stos dec stos or inc cmp ret cltd jns stos imul xor arpl sub bound inc sbb or ret push adc dec mov mov test xor bound xor jb xor cmpl and jns cmpl mov or and jp adc sbb mov sub cmp jp adc or dec inc fwait adc mov or jb mov (bad) or or sbb or mov jnp xor mov cltd jns mov jns or sub dec xchg xor mov jns and mov xor sbb pop or or or mov roll lcall jnp jns stos add adc dec xchg xor mov jp fwait shlb mov push leave jns lret lret pop jns jns dec stos xor pop jp push and or push xchg dec mov mov push cmp pop sub ret mov mov and xor stos or sbb bound jnp mov xor jno mov adc mov ret push lret pop jns jp or sbb mov mov (bad) and jns fwait pop or dec mov jnp mov mov mov inc push or and ret mov ret or mov lret sub dec pop jb or or xor popa mov dec inc lcall jp inc sbb sbb jns mov dec mov push adc bound fwait push and sbb mov mov xor jns jnp lret inc pop and cmp push stos mov inc (bad) inc or push lcall push mov stos cmpl sub and and jae sub jnp mov xchg mov adc jns jp xchg sbb or jns cmp lret lret sbb pop rorl popa stos mov and pop mov jns pop stos adc cmp or xor pop dec lcall cmp rorb or or sbb jnp mov or dec arpl dec xchg push inc or or and cmp pop dec and cltd int3 push sbb push sbb rcr push or dec dec rcr sbb dec int3 int3 adc fisttpll rclb aam adc xchg xchg adc push push rclb xchg sbb fsts mov xchg in xchg sbb mov nop mov mov mov ss jp inc sbb es mov sbb test insb inc add or inc call inc inc testb repnz xchg adc add push push jns pop int fimul or mov call out enter cmpsb (bad) or insb ljmp push push push je cltd sub (bad) xor out in imul xor daa jae je je xchg pop or xor mov cmp push mov pusha test sbb or imul insb addr16 and and cmpsl mov in cmp dec mov mov int test movsl push addl je xor and adc ja adc push mov cwtl mov mov jo jo fs and mov dec stos xor and pushf test pop pop scas into pop aam enter insb mov push push outsl insb push inc in inc dec inc adc movsb (bad) lods sub clc mov mov aas (bad) (bad) decl pop xchg sbb fiadd mov sbb or pop mov and (bad) push mov xor jae sub pop mov xchg or push push les cmp pop rcll xor push cmp dec data16 xor jnp inc cmp adc aam mov data16 xchg push mov add push inc shr call xchg adc inc imul into jmp sbb fwait mov mov (bad) sbb mov mov mov adc push mov push inc popa inc pop inc dec and lods aaa mov sbb sbb sbb bound xchg inc adc push (bad) and pop and cmpl mov jp xchg mov mov lods shll and dec cs enterw adc ficoml imul aam int3 in adc and imul stc cltd ror rcl rorb push dec inc sub and daa xorl jo adc enter mov (bad) popf mov sub sbbl sub dec dec arpl das adc xchg and inc js and xor es and sbb inc push aaa inc icebp and xor xchg dec enter movsb and (bad) daa cmpsl sub (bad) rolb sub push xor stos popa stos mov and pop mov jns pop stos adc cmp xchg xor pop xchg je rol or mov push into xchg fs cmp xchg popf shlb jns xchg or dec test aaa and sub movsb xor pushf shll jbe push addr16 and das adc js cltd xor sarl decl sbb dec in sub or es stc lcall cmpsb (bad) in mov and mov mov mov jecxz dec add jmp test add (bad) addl mov xor inc adc (bad) push and daa fs jo mov icebp xor mov jg loop adc test mov inc lock and jns enter mov dec out pop test push daa adc stc adc push mov stos xchg mov int vpunpckhqdq xchg mov mov or xchg mov pop loop push loop dec adc js les or mov rol incb es sub stc sbb mov and jno and pop mov sbb push cltd sbb lret mov lods dec or (bad) dec fmuls das icebp sub jg ret bound fucomp inc sub mov insb dec inc insb insb insl adc js xchg mov test dec dec mov sbb add dec adc popa push pop rcrl xor sbb xor cmpsb pushf mov sbb xor cmpsb sub test mov mov xor mov test sbb pushf mov pushf sbb and aaa cltd movsl mov sub sub sbb movsb sub mov mov and mov movsb lods sbb and sub cltd lcall es cltd sub pushf sub cmpsl and movsb lods sbb xor xor and mov cmpsb cmpsl and movsb cmpsb mov cmpsb test sbb sub cmp cmp xchg cltd mov xor test xchg movsb test pushf and mov mov xor cmp mov test mov mov mov xor test mov pushf cmp cmpsl sub mov stos sbb sub test cwtl mov cmpsl and mov sbb mov mov mov lcall sub pushf sbb sub xor mov lcall daa xchg mov xchg stos lods cwtl mov xchg mov mov cmp and pop mov mov sub cmp xchg mov mov stos pop mov stos and xor sbb mov stos mov xchg mov sub xor sbb xor mov cmp mov mov test sub xor cltd sub and mov cmp sbb lods mov ss mov sub movsb cwtl mov mov cmpsl mov mov mov sbb mov sbb sub fwait movsb lods pop mov cmp mov sub and mov mov mov sub mov cltd cmp mov sbb mov mov mov and and mov sub mov lcall test cmpsl sub and fwait and cmp mov sub mov cwtl and cmp sub mov pop mov sbb xor mov test movsl sub cmp and test cmpsb adc xor and mov aaa mov sbb sub cltd xor mov mov mov and stos test sub cmpsl and movsb mov lods sbb sub sub cmpsb sub mov sbb mov stos mov mov mov cmp aaa mov cltd xchg xchg cwtl mov mov mov mov sub cmp xchg xchg lcall mov cmp mov cltd lods cmpsb stos sbb lods xor and xchg cltd lods sbb movsl xor test mov mov fwait and xor mov sub sub sub xchg mov and mov pop xchg xchg xchg mov mov cmpsb xchg mov and fwait sub sub cmp sub cmp mov sbb and and mov xchg mov mov sub test mov cmp lods cmpsl mov mov stos cmp ss and movsb mov movsl and and lods mov movsl and and mov sub cwtl cmpsl cmpsl sub test sub cmpsl and cmpsl mov mov cwtl sub and sub xor sbb cwtl xor daa and mov xor test fwait and cmpsb sub test mov lods cmpsb fwait cmp fwait test and xor and pop xchg xchg xchg fwait sub cmpsb sub test fwait cmp fwait stos and cmpsb and and stos mov stos stos cmp xchg fwait xor mov and mov and and cltd test daa stos mov mov mov sub sub xor cmp sub and fwait es mov sbb and and mov and and sbb lcall xor sbb stos sub mov mov mov cmp movsb mov es stos cmp sub sub xor cmp lods and fwait mov xor sub pop xchg mov mov mov sub test mov sub test sub xor cltd test movsb test sub cmpsl and mov mov xor adc rorl ficomp lcall push or fcoms rcrb xchg pop push push or xchg into or xchg fistl xchg push dec pop fwait int3 rcr rclb push adc nop pop or xchg dec ret mov dec inc pop xor dec dec dec dec xor ss cltd lcall es inc and in dec xchg xchg mov movsl fnstsw xchg mov sbb lds adc or xchg mov (bad) push dec mov mov jnp mov sbb pop lcall gs popf inc pushf lods and or add adc adc inc movsl adc inc or aad mov xor inc dec dec sub pop imul ja arpl imul push push push push pop push push cmp inc push adc push add cwtl fdivrl into inc push jb insl jo dec sbb mov sub pushf sbb sub xor test in mov push das inc sbb xchg mov add or adc push xchg cltd sahf adc ficom push push push ficoml (bad) mov jnp xor popa rcrl mov dec cmp bound outsb inc jne jno mov gs xor sub fmull cmpsl mov inc lock nop inc pop je inc dec dec insb cmp dec push gs sbb mov (bad) sahf shrb (bad) xor or and cwtl lock cmp xchg sbb push or stos sub inc mov dec das cmp sbb xor and pushf roll mov inc fs pop and sbb xor pop mov jns mov xchg inc mov dec and sub sub xor mov or int3 stos mov inc xor (bad) sub mov sbb pop pusha mov scas test data16 ljmp inc mov sbb pop mov sub cmp sub push adc adc (bad) out retw mov movsb push push xchg sbb cltd jle adc mull fisubr and dec fwait mov dec push sub out or cmpsb addr16 outsb inc ja test mov les xor sub lea pop push xchg (bad) (bad) fwait adc adc mov pop insb jbe push pop jbe cltd test in fcomp and ds jae mov rcll sbb pop mov jnp or repnz dec xor mov inc icebp daa cmpsl or je and in inc xor roll inc (bad) pop xor xor sarl popf inc mov inc xor inc test es pop daa jae sub push fnstenv dec jmp (bad) or push inc icebp and stos sub js adc xchg cmc pop mov dec (bad) loop xor inc test and pop or and inc repnz shlb data16 pushf xor adc enter out mov inc je pop dec dec js and and and cmp int in call push push arpl adc sbb dec es mov inc or mov and dec mov test imul mov and dec dec lret and clc popf mov sub scas push in cltd adc daa inc dec mov sub jl int3 sub adc adc stos cld mov sub mov and pushf lea fcoms (bad) popf enter mov cmp mov xchg xor and int3 lea out mov test inc arpl mov sub dec sub mov cmp xor and rorb inc and and lcall and int3 mov nop lods andl and xchg sbb lds icebp and jmp mov mov cltd push test and adc mov and and or sub imul icebp and or lods dec mov sub test out adc les fidivr push scas mov pop enter test je les adc insb vcvttsd2si dec into dec xchg xchg inc push jne gs dec imul mov test xor cmpsl mov jl or push push je push les pop ljmp or push pushf clc xchg mov dec push adc inc xchg xchg adc sahf push jb mov test in push movsl jmp inc test test adc adc xchg arpl xchg arpl addl adc addr16 inc jne xchg jne fs addr16 inc movsl and adc arpl and xchg test inc push cmpsl adc ja adc test push xchg adc pop xchg push je adc test je push push xchg add gs inc movsl daa adc arpl pop je push push xchg add inc xor xchg push xchg xchg addl adc xchg (bad) push inc les addr16 xchg je xchg daa xchg xor and xchg hlt pop mov out je adc and push aam and ret add adc adc ss jne push xchg push inc push mov push movsl push xchg push push fs movsl push movsb aad add xchg je push jb mov jbe (bad) je adc adc test cmpsl movsb xor mov and push je mull testb push je xchg adc test inc xor data16 push and je arpl test and xchg and movsl xor xchg repnz inc push movsb and movsl cmpsb ja je add adc xchg push je xchg adc and movsb push xchg adcl push xchg lds repnz xchg test xchg adc je je je cmpsb addr16 push adc xchg mov push je adc xor cmpsl (bad) div xlat (bad) repnz inc push inc aaa xchg repz hlt fs adc add adc add and xchg addr16 repz inc adc and inc add repz inc es adc xor repz xchg xor xchg mov inc je and ret addr16 testb je push xchg push (bad) hlt rcll movb movsl mov test and push inc andl repnz data16 hlt mov xor adc movb movsl cmpsb push je testb divb jne adc fs in gs xor adc movb test movsb and fs in fs push mull adc adc inc hlt gs inc testb hlt out xchg push aaa je push xchg jbe les les divb and adc xchg add addl push adc push adc adc arpl xor add divl xchg movsb les xchg xor inc notl inc and divb adc adc jb jbe jae ss jne inc arpl test hlt out xor adc add xchg test xchg push je push xchg push xchg test hlt xchg repnz inc push inc gs push xchg xor xor inc push inc hlt gs xor inc inc xchg in inc and mov adc push inc inc and repz adc notb adc fs testb testb divl adc inc hlt gs xor push test inc push push ret movsb inc mov repnz push xchg inc push inc inc jae xor adc jb es push xchg add add jae xor inc adc adc adc daa xchg xor xchg mov and push adc xor test repz xchg test jne test aam and xchg test inc push inc adc adc push mov adc adc inc xchg and xlat je push adc push inc adc xchg fs xchg jb repz push xchg arpl inc push mov (bad) movsl xchg xchg mov repnz xchg adc add push push xchg inc push inc xor cmc test adc inc movsl push addl pop (bad) repz testb testb cmpsb inc gs repz push inc aad inc test jne test hlt adc adc lds adc jbe xchg xchg mov repnz push xchg movb pop push mov adc adc je push je adc xor xchg push add and xchg and push add repnz hlt inc inc xor push je adc test (bad) adc cmpsb aad adc out push inc xchg repnz adc test movsl xchg xchg mov repnz push xchg and push add repnz hlt data16 xor inc addr16 out push inc xchg repnz inc push add push push xchg inc push inc inc mov lds inc testb lds mov out push inc xchg repnz adc mov repnz test xchg xchg mov repnz push add adc xchg ret adc xor push test repnz hlt gs inc adc xchg and xlat xor cmpsl jbe adc gs addr16 and notb data16 je adc xchg adc repz addl test je push push xchg add cltd dec mov lea (bad) mov push lea or sub sub mov imul mov or sub sub or or or test or call sub out out das sub call cmpsb xor mov pop mov sub mov enter and int movsl push gs sub push inc les addr16 xchg je xchg daa xchg xor and gs hlt pop mov out je in adc push aam and ret add and cmpsb sub sub xchg push sbb pop xor push inc mov push add test xchg add dec ss das inc pop jp push push inc inc sub inc gs das jbe das push imul dec push xor inc inc pop insb xor arpl ja jbe push popa dec cmp push xor xor push ss pop push dec dec inc outsl je aaa das das xor inc push inc dec push push jp inc push dec inc xor inc dec loop xor shrl adc lcall push push xchg rorl cltd popf rolb inc xchg mov sbb dec vpsubsw inc aaa xchg repz hlt arpl test cltd stos and dec dec mov fisttp inc das addr16 xor push dec xor jp cltd jns mov ret popa stos adc adc or pop mov xor mov hlt rcll movb movsl scas nop lret nop insb xchg nop pop cwtl push xchg movsb int3 aam xchg (bad) movb movsl scas inc ss adc cmpsl adc push mov mov int3 pop hlt les arpl and xchg mov dec jne popa arpl dec mov cmp dec es xor xor sub or sub push movsb and and rcll int fcompl nop push (bad) pushf push push sbb fstp fxch or les mov stos (bad) jb ficomp in dec push les dec jbe enter pop dec data16 aam xor and xchg and (bad) push and icebp sbb sbb cmp dec int ss decl sub cmpsl or adc xchg enter stos inc inc push inc inc sbb js int3 or fs sbb sbb cmp and dec pop ja outsl insb dec aaa push adc outsb and dec and jmp or das inc sub inc mov faddl and xor fwait mov dec sub xchg push fs push cmp (bad) sub dec adc and sbb push mov push ret addl or nop inc test cmp popf daa loop les mov inc adc and daa cmp fwait bound in dec ja inc mov (bad) repnz (bad) enter adc mov rcrb bound xchg or xor cld inc push das dec insb xor push enter in scas push out lcall (bad) lods mov out lods ret imul dec dec loop dec icebp sub fldl2t mov insl inc dec dec push insb adc addr16 and xchg adc jmp nop mov faddl and test call clc xchg sarl inc and mov cmpsb (bad) clc mov push mov pop inc sbb lods dec int dec imul adc mov inc data16 dec jmp adc dec lret push inc inc adc lahf les xor je pop pushf mov mov icebp and icebp sub cmp dec push dec lret sbb xor rcr lret pushf ffree outsb arpl and sub dec inc jbe inc dec dec push push dec dec inc ss ja push dec push imul outsb inc adc sub dec push mov push gs je xor push cmp mov and inc xor or adc (bad) repnz (bad) int3 pop xor or enter aad mov push inc adc hlt xorl movsb mov lds ss adc push mov xor rcll or dec call sub jbe and push fadd and movsb int3 int dec outsb dec dec cs int es push test dec xor dec push insb cmp lods dec repz dec and rcl pop shll imul (bad) cmpsb mov inc repz sbb lods leave fst and mov aad mov push pop sahf push inc int3 rolb xchg test inc push inc and xchg xchg xchg test push jne gs cmpsl jbe adc data16 aaa mov mov adc addr16 jae xchg adc push je pop notb jne je and and xchg xor inc movsl movsb xor xchg xor jne mov xor xor test out fs xchg adc jae ss adc xor adcl push jbe adc gs addr16 repz xchg ret adc adc xchg add data16 movsl adc xor xlat xor push je and push jae addl inc xchg mov inc inc (bad) hlt xchg xor jb movsb adc adc add mov inc mov adc xchg add xor xlat xchg addr16 inc movsb xchg aam repz addl push ret repnz xor hlt adc xchg jecxz mov and notb adc jae je je inc hlt xor xlat mov xchg xor push je adc and xchg inc fs inc je xchg and push adc je adc cmpsb jb xchg add test and and adc push (bad) hlt and les arpl push lds jne inc and adcl ja cmpsl add adc push xchg xchg jae adc adc mov xchg arpl test adc inc (bad) push xor gs roll movl xchg xchg arpl xor xchg push mull test repnz test cmpsb mull xchg mov adc and mov adc movsb xchg ret xchg and testl les jbe je ja inc push inc pop cmpsb testb andl testb es adc adc adc add adc lds jbe testb adc xchg out and xor daa xor inc push je add testb mull aam adc (bad) jae xor xor xchg push xchg (bad) xchg push xor xchg mov xchg les xor addl adc xchg (bad) mov test fs push xchg in je adc add adc lds jbe hlt xchg and mov xchg jb addr16 test add inc loop xor and fs (bad) repnz test xchg lds jne movsl es movl ja lds jbe addr16 inc xchg push xchg xchg addr16 test jbe adc adc adc hlt adc xor es repz xchg mov xchg jb addr16 test add inc loop xor and fs (bad) repnz test xchg lds jne movsl es movl add adc adc xchg adc adc push xchg add data16 adc xor cmpsb jne push xchg push adc xchg lds gs inc inc inc and xchg push xchg mov inc xor fs and jbe mov xchg cmpsl adc add jbe add ss hlt adc inc testb fs out adc and repz xchg xorl inc add and jb repz xor adc inc ja add adc jbe hlt adc adc inc movsl movsb xor xchg ret adc inc hlt addr16 je adc cmpsl jbe mov adc inc adc xor inc addr16 mov mov repnz inc gs movsb xchg mov adc adc adc in push in adc aaa add addr16 xor cmpsb inc fs cmc pop (bad) repnz out hlt adc repz jbe jbe mov adc inc adc xor inc addr16 add push xchg test in adc adc (bad) in push data16 test adc adc les addl and xchg repnz je push loop xor movsl adc xchg fs and es inc test test push add adc repnz test xchg je push xor xlat xor push jbe xchg push adc gs hlt pop cmpsl je mov inc xor (bad) inc ss mov jbe push data16 xchg repnz inc push inc daa adc es inc es (bad) testb push mulb divb adc adc adc and movsb les and and inc je xchg inc gs je push adc addl aam inc cmpsb data16 movsl inc adc xchg test in adc movl xchg xchg movsl xchg arpl xor xchg aam adc (bad) repz addl je push test and xchg movb bound inc repz xchg xchg adc xchg adc repnz xchg xchg adc push xchg hlt xor inc addr16 arpl ret push aam adc inc fs test pop xchg je xchg push jae in dec and daa pushf xor sbb mov and and xor cmp stos xor and cmp stos cltd or popf sbb and mov adc flds int shrl imul dec push push fstl inc xor dec and (bad) and rcrl or inc gs addr16 repz xchg ret adc xor (bad) sbb adc mov or jnp sbb sub movsb int adc into insb into in cmpsb mov inc imul push sub sub or insl push xchg xor and mov mov mov test out dec pop push dec push pop ss dec sub das das outsl push inc outsl inc dec dec cmp inc inc xor cmp and adc cwtl outsb xchg call fs (bad) outsb repnz nop in out (bad) into mov call mov js pop sub inc cmp sub das inc inc inc xor push push inc xor push addr16 inc push push addr16 jns cmp push xor jo push xchg cltd mov jbe arpl jecxz roll push xor gs sbb dec lock aam xor dec xor push dec mov insb mov scas movsb push mov (bad) hlt fsubp repnz (bad) (bad) mov xchg (bad) fs xchg ret sbb and add add nop mov sub pop lcall or and cmp mov dec pushf fiaddl inc push jb daa mov jno and cltd test movsl push gs lea lods or sbb shll push inc (bad) mov mov rcrl loop jo dec xor sbb rcrl inc xor das xchg adc es addr16 sahf push adc aam mov cwtl daa xchg scas adc leave adc nop fnstcw add (bad) (bad) and outsl stc push cltd fst jl sub push lcall test xchg scas lods push nop in (bad) aam les (bad) in lcall pop jb loop cmc jno mov int fstps and add daa xor adc dec dec or sbb fcoml mov in xchg ja add xor inc or int call xor out mov mov or push cwtl gs movsb xchg mov and lds sub shl add xlat adc xor lds pop (bad) fimul shrl repz sub cmpsl test fmuls les lods adc sub xchg dec int3 icebp cmp inc mov xchg je pop nop cltd push fcom push imul or xlat dec imul dec ja push inc mov mov dec xchg or icebp ss pushf loopne sub inc dec jb faddl mov mov movsl test (bad) mulb sub inc mov jmp xchg pop out dec pop push inc xor outsb inc push xchg movsl push sub mov xchg insb fs dec fs loop jns sbb test cmp sbb sub dec (bad) inc push xor enter out icebp xor or cs sub loop arpl stos mov cmp cmpsb mov bound mov inc lea outsl adc stos inc (bad) xor inc cmp xchg xchg mov xor push loop push enter int mov or (bad) in or dec xor xor dec into sahf xchg iret mov xchg loopne pop lock jbe sbb inc test push push movsl jb outsl mov dec outsb loop popa les rclb adc rcll (bad) mov movsb clc popf adc loop mov cmp xor (bad) repnz mov inc loope lds les mov jecxz or push aaa (bad) fdivl adc les pop mov sbb test dec sub push sub jle daa sub inc in in int loop inc dec xor jns sub inc in imul sub add pop clc (bad) into jb mov mov mov lret test mov out fsts or test xor rclb lret ficom fst jl int3 lahf adc iret les adc sbb or ret adc or lret dec dec inc xor inc jbe les stos (bad) and bound and lret xor adc in add enter aad dec inc xor push inc aaa pop dec adc xchg push adc rcrb sbb jb lcall mov cmp inc sub xor dec adc or push mov mov cmpsl pushf mov xor xor xor xor mov cltd and adc mov sbb mov lods sbb lods pop mov sbb cmp movsb test xor mov sbb mov cmp movsb xor mov movsb cmp mov and cmp fwait test mov and xchg mov mov mov mov mov pushf daa mov movsb mov cwtl sub daa cwtl lods cmp xor cmp stos cmpsl mov sbb sbb mov mov mov pushf aaa and sub cmp mov mov xor mov xor cwtl cmpsb pushf and xchg mov mov mov lods cmp lods cmp mov sbb mov aaa mov xor and movsb test mov stos lods cmp mov sub mov sub cmpsb and stos mov mov mov mov lods movsb and mov and pushf and and mov sub mov mov sbb mov mov lods daa mov mov xor mov mov pushf xor sbb sbb and cltd mov mov pushf sbb cmp xor pop mov mov fwait test mov xor mov and sub mov sub mov and lods cmp cmp xor mov mov sub and mov mov movsb sub sub movsl cmp lcall cmp movsb and xor movsb xor pushf and pushf xor sbb mov mov sbb cmpsb sub mov mov xchg mov mov lcall cmpsl cmpsb sub and sub mov sub cltd lods mov mov and pop mov test mov xor xor mov mov sub cmpsl sub mov sub pushf mov sub mov sbb xor sbb sbb mov mov stos sbb mov sbb mov sbb mov cmp mov and mov aaa mov test mov xchg mov mov mov cmp stos mov sub and sbb xor lods and xor mov lods xor mov sub mov mov cwtl xchg test cwtl cltd mov sub xchg lcall cltd test sub cmpsb test cmpsb daa sub and xor sub cwtl cmpsl sub mov mov mov stos test stos mov lods cmp cwtl cmpsl sub cltd xor mov mov mov cwtl mov mov sub cmpsl aaa movsb mov mov mov movsl cmpsl sub sub xchg pushf mov sub mov stos cwtl cmpsl sub cwtl cmpsl sub cltd aaa test sub sub xchg pushf mov sub test sub cwtl cmpsl sub cltd aaa stos xor sub xchg pushf mov sub mov sub cwtl cmpsl sub cltd aaa stos lods sbb mov cwtl mov and movsb mov and movsb mov cmp xor mov mov xor sub sub sub cwtl mov and xor and and cmpsb mov mov mov mov pop cwtl mov sub sub sub cwtl mov and xor and and cmpsb mov mov mov mov pop cwtl mov sub sub sub cwtl mov and xor and and cmpsb mov mov mov mov pop cwtl mov sub sub sub cwtl mov and xor and and cmpsb mov mov mov mov pop cwtl mov sub sub sub cwtl mov and xor and and cmpsb mov mov mov mov pop cwtl mov sub sub sub cwtl mov and xor and and cmpsb mov mov mov mov pop cwtl cwtl pushf mov cwtl sub mov aaa and and sbb xchg pushf mov mov movsb mov sbbb add test lret lret hlt movsb mov rolb mov dec inc jae inc sub inc and mov sbb lods pop mov sbb cmp movsb test xor mov sbb mov cmp movsb xor mov movsb cmp mov and cmp fwait test mov and xchg mov xchg lea rcrb pop adc push push mov dec dec adc rcrb dec adc adc push sbb aad xchg dec dec out inc push out imul dec mov sarl ret jb mov mov cmp mov dec pop push or mov cbtw dec cmp das arpl inc inc insl imul das push pop jne push xor sub and mov mov sub or cltd dec adc and rorl imul mov sub insb in xchg xchg test xchg mov xchg xor inc hlt jae and cmp mov movsb hlt push xor jno and or gs mov jne fs jbe mov adc or cwtl (bad) push push mov dec sub cmp enter and mov nop aam mov lods mov scas (bad) mov mov lret loopne (bad) fsubrl insb xor inc inc jb adc and dec lret sub cmpsb divb test inc mov sub (bad) rcrl or add or popf popf sub movsl adc or ja movsb pusha gs jae test and out fs loop mov bound sub (bad) push or sarl sub or test lret dec mov sub jmp dec adc mov rcrb and outsl sub cmpsl cs scas push xor sbb push dec bound inc mov pushf inc insl bound outsl les xor mov sub fnstsw aad nop inc dec js addr16 push inc insb xor outsl xor inc and xchg sub push sbb add xor and dec dec xor mov lods xor mov sub sbb mov aam dec dec aam push push dec add int mov dec dec pop jp icebp daa sub xor mov jp xchg adc loop inc enter aad or lds adc sub in in sub imul popa dec cld dec ljmp test dec ljmp sbb pop adc js xchg int3 in xor enter fsubs or and dec gs stc cltd sbb jo loop inc push and (bad) (bad) es sbb sbb loop dec icebp sbb jg clc lea inc test (bad) (bad) and mov add arpl stos dec dec mov xor adc and xchg push sbb cmpsl les aaa dec dec jae inc cltd cmp fstl (bad) repnz (bad) xchg cmp nop ret pop and mov call or mov adc aad jno and mov lea (bad) mov and sbb or sub inc fs and sub dec or ret stos push pop and and push dec les test mov dec mov push cmpsb aaa xor mov lds sub imul push sub jnp subl nop int push fcoml mov fwait mov sbb push mov shll (bad) push imul mov mov inc enter andl or cwtl push xor mov cmp dec dec enter out lods clc mov aam adc xor or push shrl mov loop push adc test cwtl pushf add outsb xchg adc lods dec sub push cmp ja stos mov sub rorb fs xchg pop mov enter rorl dec repnz inc adc adc dec inc xchg push and sub adc pop and arpl mov lcall sub test push or arpl push and adc js sbb dec or xor lret or lcall pushf mov dec or inc mov xor dec push fnop (bad) sahf fcmovb and inc and sub repnz pop enter (bad) and (bad) rcrb xor bound mov xchg sbb dec cmp mov adc and adc pop cld mov enter push adc cmp or mov mov mov mov mov test (bad) xchg popa adc icebp and mov xchg mov mov fcompl rorl xchg jno sub inc push push addl sbb loop inc call stos js push pop lret fimull push sbb push push push push sbb push nop nop push xchg rorl adc xchg adc push push push pop adc push pop adc pop adc adc int3 push pop adc xchg pop adc push adc pop adc dec int3 aad dec ficom push pop dec rcl or mov push adc fstl sbb push push int push push push push push fcmovnbe int fimul rclb pop rcrl rclb push adc aam lea push push pop rcrl rclb push rcrb aam (bad) int mov push mov fcmovnbe aad push xchg lret ficom push pop lret fimull push sbb push push push push mov nop push push pop adc pop pop rcr (bad) cwtl pop rorl fsts aam dec xchg pushf mov lret lret aam dec or cwtl xchg adc push push fst pop rclb push adc push lcall adc adc pop or int3 push or adc push dec xchg adc lret lret lret adc int3 aam dec int3 aam rcll cwtl mov cltd lcall rclb adc rcll nop push adc popf rcrb rorl xchg lcall rcl push push xchg adc fwait rcrb fcoms sbb push mov or mov mov lret int3 pop adc xchg mov lret lret adc pop xchg pop or xchg adc dec mov xchg aad int push push push push push fwait int3 xchg mov or lret int3 push sbb ficompl push push dec int3 popf rcrl dec ficomp xchg push fcoms pushf push push push rcrl lret into push dec ficom adc rcll xchg push or aad push adc nop push fcoms xchg push or (bad) int3 pop push push nop nop push adc fcoms fwait push push push rcrl lret into push dec into pop mov adc push lcall push dec into pop push popf cltd lcall push dec adc lea pop rclb push xchg rorl rclb push push xchg xchg adc fwait rcrb nop fwait pop push push or ficoml mov aad ficompl popf mov fxch adc dec xchg push pop adc xchg pop xchg push or aad push adc nop push dec xchg mov or lret int3 push or cltd adc rcll cwtl ficoml lcall lret int fistl pop lret fxch fnop cltd sbb pop ficomp rorl rclb xchg int3 cwtl push sbb (bad) push cwtl push pop fwait push push push rcrl lret into push dec into pop pushf nop aad adc fistl aam lret lret int3 lcall xchg push or aad or ficompl mov int sbb nop push push cltd xchg sbb xchg adc fstps push pop rclb lcall rclb fwait pop push push or rorl push lcall push aad (bad) cltd popf mov fxch adc push (bad) adc pop popf rcr sbb or mov aad xchg xchg fcomps adc (bad) adc sbb mov pop pop push or xchg push or aad push adc nop push dec xchg mov or lret int3 push or cltd adc fwait pop int adc int3 pop push adc push mov sbb dec pop rcll xchg push or aad or aad into dec push rorb dec and mov xor cmp sub and es sub cmp and movsb movsl and and and and fsubl lock fmuls pop data16 xchg pop lock mov rcrb mov jb lcall mov fiadd xor mov jp mov leave mov or xor mov or out (bad) and xor and pop cli inc and arpl popa stos push pushf pushf jo (bad) mov repnz sahf out and cmc add and repnz mov xchg add data16 xor push xor push adc add data16 les sbb stos dec shlb arpl mov and imul pop cwtl mov cltd lcall adc adc inc dec inc inc xor mov adc mov adc imul dec or cmp push inc xor popa ret sarl xchg xor cltd jns mov hlt cmpsl test jae gs adcl mov arpl push adc and movsl mov mov mov test mov movsb cmp adc (bad) xor shll bound sub xchg lret or data16 sub in sub dec mov sub inc adc pushw les inc push addr16 ds cmp dec push inc es xchg sahf and ficompl popf test jo fs pop add sub dec jmp push or imul lret aad rcrb ficomp rorl rclb xchg int3 mov pop in jb push and jnp xor out sub mov xchg lea or insl enter into insb in scas jmp sub imul cmp adc dec das inc je jmp in sub addr16 dec push insl push dec into outsb lock stc xchg sbb dec pop call mov nop sarb out cmp aad adc mov outsb xchg out iret (bad) push xor xor xor dec adc adc sbb lods or and inc dec jmp inc adc mov and and jg mov cltd cmp dec cltd mov inc sub arpl inc cmc movsb das mov (bad) mov xor cmp mov add lret or sub pop outsl ja mov into inc push repnz test and xor and pop xchg dec add mov (bad) hlt out mov nop aam scas (bad) nop fmuls into inc xchg test jmp dec push and jae (bad) xor xor sarb ret pop mov les push icebp sub bound mov mov or push push cli inc xor mov inc cs es xor fwait and and cmp push out or call nop flds roll xor popa fwait stos dec mov lahf xchg mov fs pop lcall mov (bad) aam (bad) xchg push nop mov lea fcmovnbe mov enter cmc int3 insb lock loop fsubs inc decl arpl cwtl mov push movsl test xchg push dec bound icebp sub les push dec push push jbe pop addr16 dec ss outsl inc ss arpl ror dec or stos mov int dec sub sub scas dec dec dec jmp add jno sub xchg or (bad) sahf push sub stos dec addr16 test aam push xchg pop adc movb test jmp push push cmp mov mov in xchg and cmpsb lahf int3 bound xchg in mov addr16 adc jg mov aaa pop sbb jno mov xchg inc cmpsb cmc inc clc popf push dec mov enter adc xchg push xchg in cmc add mov inc push movsb jecxz sub mov mov fmull inc and ret stos dec inc adc (bad) in and mov out clc nop int insb push adc push data16 jno sub xor dec cmp and imul hlt adcl in and cmp add push test cmp add loope and lds fdivrs add sbb mov push inc mov add add int3 leave gs rcrl mov jmp add flds sarb mov push cmp add xor dec cltd popa mov sub inc add mov lea cmp and popa sub xchg mov dec xchg or pushf lds loopne popa popf frstor imul dec xchg push adc fldcw fnop mov dec movsl cmp dec lds and movsb (bad) int push and popa adc and loope sbb add popa mov mov sbb lds pop lods cmp dec sub mov mov sbb and sbb inc movsb mov push and add shl lods popa lods or pushf in mov popa popf push sbb lds shll popf enter mov movsb vandpd or sbb add fsts or mov fstl cmp or pushf lds loopne popa pushf mov lea aad and dec xchg push adc fnstcw lods cmp in frstor inc mov movsl push popa shrl mov sbb xor sbb sbb loopne popa mov add movsb enter mov mov gs or sub add xchg lea adc loope fs lea aad xchg sub cmp lds rcrl or adc cmp dec sub aad mov int or mov add xor mov call les lds sbb xor test xchg test mov add dec and sbb test mov mov inc lods cmp or imul mov xchg rol leave mov add in mov lea lds imul cmp fsubrs sbb and push rol sbb sbb mov add cmp lods mov dec call or leave inc cltd mov dec lds popf adc dec cwtl mov sbb or fdivrs add mov leave and in sbb cmp lods mov int lea inc loope push cmp add rol mov lds pop shll mov movsb lods in fisttpll or popf or add inc int3 mov add push push or lods and push adc pop fs sbb inc int3 mov mov lods adc roll lds and sbb inc int3 mov pop inc mov or jmp adc mov mov mov push and frstor inc cmp mov sbb add pop mov sub add loope or movsb lods loope pushf leave pusha loope adc aad adc inc inc add in inc test loope test mov add inc add sub fdivrs (bad) cmp sub movsl xor add popf aad mov mov fisttpll popf or add in sub or sub cmp mov xor shrl push popf add leave add popf inc add or dec popa add shrl sub lea add lods or add push xor mov fabs popf or and push movsb lds add cmp lods adc and fisttpll popf or int lods adc and inc fsts lods adc add popf leave add add rol (bad) fstpl add add xchg and add mov popf and or sub cmp mov shrl loope flds lods adc or add mov rcl sbb and mov stos mov test cltd sub and cmp cmp xchg mov cwtl mov mov sub stos sub pop xchg lcall mov cltd sub movsb xor xchg mov mov mov mov fwait sub push cltd call xchg cmp pop rcl es insl push dec inc push cltd or xchg (bad) dec xor xchg mov enter out lret clts or jmp or test or push inc nop fldcw fnop lds lret lret sub enter das or test inc cltd and jecxz and ret js mov inc mov dec sub inc pop outsb outsl pop sub cwtl movsb and and xor sub stos and add (bad) xor or pushf in mov jb mov and or inc or sub sbb mov mov lcall or aam pop pop fsts repnz fs inc sbb push push test jmp (bad) mov jmp loop inc and bound or push fimull push xchg add xchg inc inc sub mov and fs sbb sub mov loop and xchg jg dec mov test mov mov leave stos enter gs outsl inc sub out cs dec sub es adc xor push dec leave xchg rorb pushf pushf pop mov xchg pop in pushf ror call (bad) stos push shrb scas sub cmpsl cs cmpsb sub push push inc and xor adc sbb adc xor mov gs andl ss and xor bound xor dec mov jp gs ss test xchg rol or (bad) loop push and mov lcall mov adcb cmp sub aaa inc ja adc lds add inc int3 mov cmpsb inc mov add mov pop lock jo (bad) mov adc and push ja and mov test and push dec mov mulb mov mov jae adc fs push js movsb and mov in inc fs imul test popf sub fnstenv int and (bad) cmp sub lea fisttpll int3 cmpsb fsub es xchg shlb xor clc xchg adc into jo lcall inc xchg or or pop push adc inc pushf lea sub hlt test xchg and aaa movsb mov xor or sbb push or popf xchg pop xchg adc xchg mov mov daa test and push mov orl mov es dec enter int adc sub addr16 clc lea cmp and dec sbb and inc cmp adc push (bad) push jno aaa in outsb cmp (bad) sbb and dec pop mov dec push lret clc xchg push jne data16 mulb mull test and test xchg and adc adc mov aaa adc mov (bad) lock jae xorl mov gs cmp outsl icebp and bound pop cmp mov mov (bad) inc jb dec inc ja decl fmul imul sub xchg ds arpl xchg xchg sbb lcall lret mov mov xchg sub mov xor sub and inc jb imul fwait mov shlb daa xor mov call ret xor cltd xchg adc cwtl cltd shll les lds jp test and or push and sub and dec test movsb xchg je xchg xchg lcall sbbl (bad) adc enter es stc or popa xor xor dec int3 icebp sbb sbbl jne mov sub sbb dec daa fs movsb inc inc divw push (bad) aam and aaa int3 jo fiadd (bad) adc adc repnz dec enter fwait xor mov sbb xor and sub enter movsl int3 push jno test xchg test mov lds inc fsts dec pop adc (bad) and movsb sbb sbb mov sub inc es push aaa cmpsb icebp sbb adc pusha ret xchg lods and int mov add add mov mov or add in leave add popf inc add inc popf or cmp int lods or inc in popf mov inc cltd fs sub adc fstpl sbb add mov and dec test inc loope mov sbb mov inc popf add in add adc (bad) aad aad popf add popf xor add lds inc fldl mov mov inc inc or leave xchg inc (bad) in sbb mov popf inc add mov inc in sub mov inc fstl leave fstl add loopne push sub mov adc fsts lds push push lds push push leave enter sub mov gs add push lds add frstor push cmp lods adc adc add fdivrs xor add mov add fstpl (bad) inc adc add inc mov xor aad and pushf leave pusha loope xor rorl xor test xor in dec mov mov sbb loope add or add or add push inc loopne gs add shll cmp cmp mov cltd dec cltd movsb loope xchg imul mov sbb adc pop mov mov inc inc or or cmp xor and mov pop fnsave fstps movsb lods in fisttpll dec push pop mov sub add inc test (bad) lds and int mov and xor inc lods (bad) gs in imul lods adc mov frstor (bad) in cmp add inc enter shll sbb dec popa pusha aad leave pusha roll rcll add rol movsb mov mov or shll adc dec gs rcll fisttpll mov mov and lods int sbb mov mov test sbb inc rcr dec rcrl pop adc and popa dec xchg add inc and frstor inc lods adc add and lea lods fsubrl xor mov cmp sbb xchg or dec adc gs adc lea lods inc lods add loope add test gs adc pushf int3 int3 roll in xor dec and test mov cltd popf cltd xchg inc fnstenv inc mov or or popf adc and cmp or jmp lods or mov and inc dec mov and xor shrl inc sub inc xor int loope pusha mov fstl add mov loope or movsb lods in fstl or popf popf jmp cltd xchg adc (bad) fstps add xchg inc popa mov mov sbb lds gs sbb and movsb shll in cmp or pop add mov lods adc cmp push inc or lods xor cmp lods add mov nop lds adc adc lea xor and test dec xchg mov adc test and sbb sbb mov inc inc or mov mov (bad) xor gs in sbb mov add sbb popf cmp lods add int3 mov sbb cmp lods in fstpl loope test sbb call inc adc mov sbb and rol test mov leave and sbb sbb inc push lds mov or mov mov lds lds and adc inc inc or cmp rcrl loope lods sbb add loope or movsl lds xor pop inc and adc pushf leave pusha loope sbb xor test mov imul sarb pop inc fstl mov mov and mov fwait xchg mov test xchg pushf mov and and mov test mov xchg cltd test mov xor fwait cmp mov sbb cmp mov movsb mov xor test sub cmpsb movsl and adc mov cmp mov xor aad aad popf add popf xor add lds inc fldl mov mov inc inc or leave xchg inc (bad) in sbb mov movb js dec adc aam rcll pop pop mov es push dec int3 (bad) push mov push scas lret push test cltd cmp mov movsl cmp sub and push and mov add dec inc push jbe cmp addr16 push mov out dec or pushf pop or fisub adc xor and pushf lret jne testl mov int3 movsb out repnz movsb rcrb mov jo dec fs insl inc das xor inc dec inc xor dec das insb inc cmpsl sub stos cmpsl mov and lahf push dec dec das push sub push imul pop dec imul xchg (bad) int3 (bad) mov dec sub leavew int3 mov sbb lods sbb cmpsb rcrl xchg lcall xchg or bound rcrl dec push adc sbb fucomp xchg sub sub mov xor mov frstor and xor and and mov and pop das inc xor arpl xor dec inc inc xor adc adc inc jbe push push imul je inc inc sub mov cmpsb cmpsl fs and fisttpll pushf mov xchg bound xchg mov mov lret sub sub (bad) rcrb rorl test test dec sub push sub imul sub sub lcall pushf lea nop sahf pop es mov xor fs jno jbe bound lea xchg inc cmp jae and sbb jo call adc lds repz inc xchg xchg push xchg push daa add sbb stos pushf inc test (bad) cwtl ficompl insb mov fimul xor jno inc mov xchg adc sahf pop push test cltd adc adc (bad) sbb or push push push xorl rorl repnz rclb xchg cltd pop adc lods mov stos xchg bound and rorb xchg xor data16 stc nop push (bad) int enter data16 sbb xchg lcall fs imul jg lods test dec inc pushf ffreep stos pop mov inc dec imul and lcall pop xchg adc lcall adc iret cld xchg jmp dec dec pop inc and mov push aam les mov bound inc xor xor inc push int3 out outsb rol loop adc jns xchg fimull push adc (bad) and inc cmp or mov xor movsl sub pushl dec adc mov xor (bad) push jle xor fs mov nop decl (bad) hlt testb xor add dec arpl adc rcrb mov dec dec dec add loop push mov mov xor and lcall sub enter (bad) mov sarl out or cltd (bad) into push loop dec repnz sbb sbb shrb gs fs dec dec ja cld dec or mov aas xor push cmp xchg cltd int3 or out adc and jno mov cmp and xchg xchg out xchg loop push repnz sbb repz sub cmp loope inc push icebp aaa adc lods xlat les mov movsl in fwait loop pop (bad) out cld mov jmp xchg (bad) push mov int3 mov icebp int3 (bad) pop test jb icebp and mov xchg dec dec mov fs cltd xchg dec aad adc je fs call fwait inc icebp cmp int out add les cmp mov dec lret mov cwtl icebp and and inc push test repz push fs mov adc adc xchg aam and add ss push xorl adc jbe je arpl divb xorl xacquire inc adc aaa cmpsb divl push je (bad) xchg push daa and jbe jae (bad) jb repz (bad) xchg jne xchg jne xor push inc (bad) xchg adc jbe xor xchg roll mov adc addr16 adc gs addr16 test adc push adc data16 xor xchg adc xchg and xchg pop (bad) repz repz aam adc inc adc inc es adc movsl test adc inc add xchg mov adc xchg adc xchg mov addr16 push jbe add (bad) repnz cmpsb push je out mov adc add repnz es addr16 mov movsl adc adc xchg ss xchg aam and ret xchg push xchg adc roll adc push data16 testb mulb mov repnz push movsl push xchg adc inc add testl adc movsl push xchg movsl push ss ret add fs jne inc testb cmc pop push mov inc xchg push xchg adc roll adc push data16 testb hlt mov mov adc add and ret test adc arpl addr16 loop repz hlt xor adc xor xor je adc movsb push jbe adc push push movsl xchg test mov repnz push add jae jae hlt in movsb and xchg and jne loop repz repz jae gs push push movsl xchg test mulb cmc push add inc movsl xchg test push xchg and add adc repz (bad) jne gs push push movsl xchg test mulb cmc push add ja add add movsl xchg test mulb cmc push add jae jbe inc adc and adc (bad) cmc jne inc and add adc repz repz add adc out xor push repnz push movsl test (bad) repnz je adc push ja hlt data16 movsb xor push push xor xlat xor gs cmpsl jae je je xchg adc adc movsl test repz mov in adc adc ret xchg xor mov les adc add repnz je mov test adc inc add cmpsb not arpl cmpsb ret xchg xor inc (bad) xchg movsl test mull addl (bad) cmc jbe and xor xchg xchg repnz adc xchg movsb test xor fs xor xchg xchg repnz push push je mov mov repnz repnz repz adcl xchg push movsl xchg addl vptestnmw adc test jae push push jae adc movsl xchg addl (bad) xchg je je adc mov repnz hlt gs movsb xor xlat xor push xchg xor push adc xchg (bad) mov repnz roll adc (bad) hlt adc xor adc adc mulb not push loop repz test push je hlt gs movsb xor je repz notl les mulb adc data16 xchg and aam arpl test data16 adc (bad) mov add hlt adc push (bad) push gs adc jae ss mov adc fs xchg jb repz mov push xchg inc push daa data16 in je movsb xchg pop je push je je adc fs test push cmpsb cmc adc add and xchg arpl jne (bad) repnz (bad) testb test jbe push push xchg mulb xacquire push aam repnz gs je movsl test data16 jbe push push adc push adc adc hlt gs inc xor adc inc adc add and divb mov repnz jb arpl aam and fs hlt gs movsb xor movsb xchg jbe in inc inc adc mov xchg push fs adc mov push push in adc mov fs in adc mov and movsb inc adc roll push movsb inc adc jne adc ret adc push inc inc adc mov add inc inc adc xchg addr16 inc inc adc je out xor xchg xchg xchg test je hlt xchg mulb push (bad) mov adc inc repnz adc mov push (bad) mov push xchg and push xchg and push xchg and mov mov push xchg and ret add adc ret add push xchg test push xor and adc inc adc movsb inc adc jne adc ret adc mov adc xor repz hlt aam movsb inc adc test add notb xor movsb in xchg jne je lock and xor mov mov lcall mov and pushf sub sbb cmp movsl and test cmpsb mov cmpsb sbb mov mov mov mov fwait and fwait xchg xchg pushf cmp sub mov sub sub xor mov mov and nop fstps mov movsl fisttpll movsl sbb xchg mov dec lods mov and xor and mov mov mov cmp ret cmp or cmp jp or or xor xorl mov mov dec or push xchg push pop push aad adc push rcrl jb pop jb popf cmpsl adc mov pop xchg mov nop fsts sub in fldl ss xchg shll cmpsb sbb lods mov push jns fucomp int sub xchg cltd jmp mov test adc shll inc mov rorb inc data16 xchg fsubs mov pop adc sub cmp das push adc sub adc inc mov inc cmp sbb adc xchg enter into mov xchg test mov push jp mov stos jp jp pop les and push adc fnstcw and sub in popa adc (bad) enter test cld dec xchg fs arpl xchg jp adc sbb sbb imul push mov dec inc lcall pop jo data16 es and cmp test xchg adc mov and test sbb loop xor popa inc enter jae sub and daa cld mov inc cs adc out das ss dec xor xchg (bad) mov dec lods icebp xor mov mov push xchg xor push adc dec jns jbe cmp push push insl outsl inc adc sahf inc es push and jns dec dec xor jno inc and sub mov arpl mov and adc sbb pop rcrb mov (bad) jb jns arpl xor sbb pop adc xchg iret dec das imul push bound cltd or pop dec mov or (bad) or daa arpl mov lods in cmp ret mov ss insb push and lcall push arpl int3 test mov sub in rcrb xchg stos cmp imul or imul (bad) inc inc nop aad cmp in inc pop inc and sbb adc dec enter mov out xor push jae sbb nop rclb pop push and xchg cmp lods xchg dec movb push xchg movsl dec leave push adc inc dec xor mov daa push cmp int push mov in jno movsl dec shrb daa xchg jns cltd push mov shrb dec cltd fldenv cmp movsl cmpsl xor inc imul inc aaa mov dec push mov xor mov adc test dec sub adc push xchg movsb in xor jno cltd loop inc adc inc xor lret sub adc es loop inc mov mov ljmp test mov and inc jae push mov inc jbe and push movsb inc push sub cmp or and push imul mov fldenv and dec int3 ret nop fadds adc fs sbb jp dec mov lcall fwait adc mov imul jmp or mov mov loop inc adc imul adc push mov pop xor xlat mov jecxz ja test mov xchg xor (bad) sbb or sub sub lea lock call data16 das clc cltd int3 decl push xchg int3 mov dec push dec dec aas int3 mov xchg lret sub xchg xchg into sbb repz xor mov fs xchg lods loope rorl stc sbb xor pop dec dec mov rorl inc cmpsb popf adc call adc adc cmp inc jbe inc sub fs xchg inc push movsb adc bound loop cmp leave or sub push mov outsb in dec dec xor movsb mov xchg or mov imul scas and sbb fwait int3 dec pop xchg pop xchg sahf sbb sbb push fimull fxch xchg push adc adc or sbb push push rorl popf rcll push push or rcrl rcll push sbb xchg pop sbb mov xchg push adc pop xchg dec lret lret lret rclb pop int3 xchg sbb push push sbb push dec push push fst xchg pop xchg push adc cltd xchg or lret pop rcll dec pop sbb rcr rorb adc push pop sbb mov sbb nop nop push or nop nop push push pop adc adc cltd pop rcrb int dec pop xchg fimull lret lret ficompl sbb cwtl dec adc push rcl cltd or adc pop push rclb adc push push sbb push push push push push rcrl sbb sbb lret lret aam push rcrl cltd push push xchg or lret lret int aam push cltd push push pop push xchg sbb pop push sbb xchg sbb push dec fstps pop ficoml cltd or dec push fcmove (bad) adc adc or rcr mov lret int or cltd aam pop push or lret lret (bad) sbb (bad) push dec fsts push sbb or lret lret lret fsts push (bad) push or rorl lret lret lret lret into push lea dec rcrl lret lret lret lret mov lret lret (bad) rcrb (bad) xchg mov or cltd sbb fwait rcrb or ficom int3 push sbb adc push push push push cwtl sahf pop rcll rclb fsts ficom pop lea dec or lret lret int adc sahf push push sbb rclb dec pop push mov adc dec lret lret adc sbb xchg push dec xchg push (bad) rcrl pop push mov push xchg push xchg xchg aad fwait rcrb rorl rcll push rcrl ficom push push adc push mov xchg sbb pop xchg push push push adc xchg dec adc lea mov fcom int rcr adc fst push pop fstps rcrb push push dec push xchg sbb pop adc push mov ficoml fcmovne xchg dec sbb xchg sbb fwait rcr adc lret into push xchg mov push rcrl fstl or into push xchg mov push rcll cltd pop adc xchg push sbb push dec push nop rcll rorb sbb push or dec adc push push pop adc sbb popf rclb sbb sbb pushf rclb cltd pop int (bad) rcl push push push push push xchg xchg sbb rcll lret lret lret fstps pop push push sbb lret lret ficoml pop xchg int int nop push push rcll push sbb sbb push push sbb or dec rcr xchg push push push push fcmovnbe sbb mov aad ficompl fstpl push xchg ficoml mov aad push adc nop push dec xchg fwait push or lret int3 push sbb pop push or int lea lret (bad) sbb xchg push push push push or sbb push push mov dec dec xchg (bad) or adc adc fcmovnbe xchg fwait sbb lret int adc adc or xchg push push dec lret lret rclb pop sbb push nop pop mov (bad) rcll push rclb xchg pop xchg push (bad) dec (bad) adc nop push (bad) dec xchg push push pop xchg push (bad) dec (bad) adc nop push dec xchg fwait push or lret int3 push sbb sbb xchg or xchg pop nop aam push rcrl dec ficompl fnop push push push cltd mov xchg rcll aam push rcrl lret into push dec xchg adc push push xchg or push push or sbb ficom adc push push pop adc lret sbb adc sbb push adc dec dec xchg ficompl ficoml into sbb xchg adc lret lret sbb fcmovbe push ficoml adc push pop dec or sbb push push or pop ficoml push push push push push into sbb adc fimull pop lret push dec push xchg sbb pop adc push mov int xchg pop adc rclb sbb fwait aad adc lret into push xchg mov push rcll cltd pop adc xchg push push push push dec push lea sbb dec int sbb or rclb push push pop adc sbb push push push push push dec push adc or or sbb adc pop mov lret lret int3 aad pop dec sbb lret int push popf adc rclb xchg push push push push dec dec dec rorb adc nop rcl push sbb sbb push push ficompl int3 (bad) sbb ficom push pop sbb mov rclb sahf xchg rclb pop push push sbb fwait rcrb or int xchg mov or xchg cwtl xchg xchg dec xchg int3 sbb push push rcll xchg pop sbb adc push push push push cwtl orb sub cwtl cwtl mov xor mov cwtl test xchg mov sub and and xor mov xchg mov mov test cmpsl mov xor and sub cmp es and fsubrl jns sbb bound and pop jb mov jb mov mov cmp jnp mov mov adc xor mov push adc nop nop push cltd adc adc cltd pop rcrb int hlt sahf shlb es mov xor nop lods xor movsl sub and xor or test dec imul mov movsl sub and sbb les mov mov into rcr mov and sub dec loope mov jb lret fwait cmp mov mov sbb and jnp nop test xchg xchg into mov sub popf mov lods xchg gs mov push cmp test sbb sbb xor lods xor insl insb push xchg je add daa pop test xor mov pop xchg mov sbb and int3 test repnz pushf movsb test cwtl push xchg mov enter jb push (bad) jo fnop in dec push inc fs jns js push dec leave mov insb cltd and ret mov addr16 cmp sub sub aaa movsb mov cltd sbb or push mov push arpl dec inc es outsl push jp inc push push bound inc insl imul jp inc cmp jns pushf adc data16 xchg js xchg adc adc push mov int3 data16 in and mov mov loope sbb nop test mov adc push test mov xor fwait int imul lcall sbbb jb jl sub lret push pop dec ss dec push icebp xor int icebp sub sbb push mov or fcmovnbe sbb mov int3 daa addr16 push add fwait and jns and sub inc mov jns lcall dec xchg (bad) or dec push outsl inc xor jp pop mov rcrl stos mov dec sub sbb jp mov test into xchg insb stos (bad) clc popf sbb and or movsl insl sub pop mov mov inc xor (bad) mov mov sub sbb shll adc xchg and in dec pop push cld lea dec mov test bound inc xchg pop loope or data16 outsb mov arpl cmp cs movsb xchg dec cld dec jmp lea add adcl push cmp inc jbe imul sub repnz cmpsl mov popf sub lahf nop (bad) in and mov and dec mov dec lret xor add and test sub mov iret adc adc cltd fnstenv nop ret (bad) ret and insl sub cmp rcll insb mov and movsb aaa jae inc and adc test repz push adc movsb (bad) sub inc fs movsl or js dec (bad) out rcrl or mov sub les stc sbb arpl lahf les decl outsl (bad) inc aam jmp mov mov and adc mov xor daa inc je bound rorl fcoms decl add sub enter xchg mulb jb (bad) mov push push rcll outsb daa jbe sub sub lahf xchg or es jns dec je loop dec icebp and pop icebp sub mov popf mov dec cld mov jno inc xchg lds call bound sub and adc mov lcall scas xchg mov inc inc mov insb dec das dec dec enter in lds cld dec outsl and adc or adc dec dec push fistpl adc (bad) mov pop cltd adc adc daa daa sub push adc mov cmp mov lea pushf dec loop,pn cbtw shll dec sub test adc int3 out xchg call adc popf fcos nop lods rcll (bad) popa dec cmp xchg loope add les push gs inc popf or mov adc popf add popa int pop movsb lods loope push gs pushf lods popf inc push jmp popa add popa inc movsl sub jmp and movsb in mov mov adc dec xor movsl adc loope adc dec or cmp adc shll jmp test mov dec cltd loopne or cltd jmp add sub int (bad) fldl int push movsb ror movsl fstl inc inc jmp add mov lea (bad) fstps popf leave loope adc enter xor sbb dec mov popf or mov int pop (bad) mov mov add or lods test loope fldenv lods sbb int sub inc mov add loope xor in add sbb pusha rcll int test sbb mov mov sbb xchg pop loope adc mov mov add jmp (bad) mov mov adc lods and pop inc popf or adc and sbb imul (bad) aad push and loope xor fadd pop xor and inc int sbb pop pop lods test mov xor lods sub and adc inc inc add inc xchg dec pop inc popf or fisttpll and aam inc mov inc mov add movsl pop inc popf add or or test mov pop fldl rcll or int3 (bad) aad imul xor sub mov and movsl fisttpll movsb roll push shll mov add mov int3 fadd mov adc mov sub popa sbb add add rcrl loope inc lods adc or inc aam cmp loope in pusha mov shrl imul mov xchg or xor xor or fmul cltd aad mov mov lods and inc mov or lods adc add sub add and or push inc lods sub add lods sbb lds add popa pusha aad roll and or popf push sbb int sbb add add movsl pop (bad) sub dec add push inc loope leave xor mov sub movsl adc mov gs mov sbb mov inc inc or rorl rorl dec adc test inc mov lods adc lods sbb xor or sub inc add dec fstl jmp add int lods sbb inc shll lods and mov cltd or mov adc add pop inc popf or popa add int mov mov add dec pop inc popf adc flds popa add shrl imul cmp mov add add jmp push add mov or mov sub add mov mov lea lea mov aad sub test test xor push pop sbb in popa cmp popf add adc pop shll add (bad) xor add int mov sub loopne xor lods inc mov adc add fldcw sub add dec xor test xchg dec adc xchg dec test xchg dec push mov xchg inc jmp mov xchg sbb movsl pop inc popf or adc test mov lds fstp int push test inc lods leave mov lea mov xor aad mov lea mov pusha int3 loope fstl rcrl inc mov lods adc loope sbb pop test or add test or mov add int xor loope or and xchg push pop or aad aam xchg push push pop push pop sbb pop rclb lret lret cltd fnop pop into adc push sbb xchg lcall rcrb lret push pop xchg adc fwait push rcll adc push rcrb rcrl push adc sbb push or adc push rcrl ficom sbb aam (bad) or sub mov addl cmpsl jae xor or sbb sarl cmp or bound lcall lcall fsts cmpsb push jp dec dec push cmp cmpsl cmp xor cmp sub aaa stos xor mov push cmp out xchg fmuls (bad) scas mov int3 xchg lods into mov xchg fs arpl pop xor mov out xor leave or fcmovnbe dec mov stos xchg out inc adc test cmp pop mov mov into sbb bound adc mov dec into in or inc sub ljmp jns dec and mov and mov lods and ficomp pop xchg adc push cltd pop int3 push inc jmp sub imul enter add (bad) repnz xor movsb mov and or cwtl sahf nop aam dec mov and jbe ja lea cmpsb or xchg add xchg adc mov push popa mov xchg int popf aad rorl jmp cli imul or add in imul mov add and mov (bad) xchg mov mov outsb (bad) fdiv iret mov fwait lea nop push push jl add and xor push gs push mull xchg popa ret ror jp jnp adc push insl das and sbb push arpl addr16 (bad) testb cltd jno test lods pop and cmp adc mov scas xor push sub inc movsb int lods sbb lds enter or mov and and fs sub rorb sub and push rcrb and movsl and test cwtl daa aaa mov dec int3 aam jno and and movsb gs inc push push jns pop lret ficom add fwait adc rclb call scas pop sbb or or lea dec lret xor sub xchg lret fsubl push pop mov scas and lcall pop pop push out inc repz inc ss dec jp pop and inc imul inc imul (bad) mov xchg xchg test dec and repz mov xor inc pop adc or mov inc push and pop enter mov jp dec data16 push mov sub sub (bad) mov lret mov inc out adc bound sahf mov sub (bad) enter cmp mov out or and mov fisub or lret dec dec (bad) xor adc inc mov or jg test and repz repnz mov add dec ret icebp ss mov iret sub mov bound sub mov addr16 dec ja push inc inc mov aam pop fisttpll shl push inc push push mov sbb into adc das or and lods enter mov je inc sub mov mov lods popa jmp or dec fisubrl imul fisttpll xchg out or xor mov data16 mov int3 int mov loop inc and enter dec loop inc cli and and sbb dec into call (bad) push inc adc lcall and jne xchg sbb dec pusha pop jb pop mov xchg insl jne push inc xor and lcall xor repnz daa sub dec inc out push ja stc adc sbb mov (bad) repnz movsl adc mov sarl jno xor fnclex xor dec inc and push loop arpl or adc movsb shlb push nop movsb fs push dec adc adc outsb es pop mov cmpsb hlt repz dec mov mov cwtl aad adc (bad) push das xor mov fisub and mov es xchg out les mov add or sbb xor es in mov dec es adc cs dec mov pmulhuw inc inc sub xor daa je dec or xor enter stos and call dec (bad) mov mov and hlt inc ja add sbb inc or pushf (bad) mov jmp and inc xor lcall cld dec jmp (bad) and movsl mov adc and popf leave adc inc inc cmp adc inc push mov sarl sbb dec fsubrl adc rcll sbb popf and rcrl flds xchg mov sub inc inc or leave or leave xor xor inc push movsl shrl fstl cmp sub inc inc or xchg int sbb movsb lods in fstl or add or push popa frstor push pusha rcrl sbb inc int3 mov push and (bad) and mov mov push and sbb sbb fdivrl pusha rcll leave sbb inc mov mov mov loope inc fstl add or add (bad) in sub pop xor leave popf xchg rcr fnstcw lods lods (bad) popa add cwtl mov roll add lds roll cmp int xor in in rcl in adc fstl lea fdivrl lods lods and and rcr lods loope add inc mov test push imul rol sbb and fisttpll test cwtl mov mov dec mov inc gs or popf dec loopne aad shrl mov add imul cmp sub and mov or int add popf dec add in sub in inc movsl or enter or adc imul movsl sub dec cmp mov mov int lds fstps or add push popa popf push sbb inc loopne popa popf adc and loope int imul xchg inc loope mov sbb mov push mov sub add adc movsl push pusha loope mov loope add and in pop loope adc fxch pushf lods push roll (bad) add add or add mov add xor push pop mov popf add pop (bad) mov sub inc inc mov xor or mov push sbb and or rol loope adc fcomp fdivrl rorl add push inc lods sub add imul cmp mov lds jmp mov sub inc mov push and adc add cmp in pop gs add add fsub pop lds mov sbb mov and lea sub push fldcw lods adc or add adc test mov dec or adc (bad) mov and or mov mov rcll sub mov sbb mov inc mov sub mov sbb mov inc lods sbb int mov sub or push inc lods sbb xor lds xor aad dec or (bad) loope mov lods adc or (bad) loope mov lods adc or (bad) loope mov (bad) lds fnstcw mov cmp inc inc push and adc dec or add cmp inc mov adc test sbb mov mov add fcomp cltd pushf mov add dec or push adc inc lods sbb lea mov or gs cmp mov lods sbb cmp mov inc push sbb mov mov adc mov fsts lods adc add (bad) sub push mov mov or or imul aad aad int pop gs pushf lods push roll fabs or add or add mov add sub lods mov or pop movsl push inc lods sub or sub inc and sub sbb add and adc pop ret mov test xor mov mov test movsl movsl mov and call ljmp cs sub call outsb in dec dec imul push or or ljmp in jmp cs lods call jb adc xchg push nop nop pop mov push adc adc repnz xchg xlat adc pop pop rclb sahf pop rcll (bad) rcll push push xchg sbb test and add jne xor mull adc test test (bad) test arpl inc jno test push jno jns and sbb leave push push or add mov or bound pop mov dec mov lret arpl xor roll mov jno dec mov mov ret xor mov mov mov adc mov mov dec lcall lret cltd mov mov and jae sbb push inc sub mov mov push inc sub addr16 imul dec insb out or stos dec or stos das inc inc mov iret sub mov push inc cmp dec cmp dec push insb xor push inc inc imul addr16 cmp jne je push pop inc outsb push jae pop jmp in ljmp outsb dec sub test sub sub inc cmpsl xor daa sub mov sub test adc xchg enter push and cmp adc and pop int and sbb push ret jns mov adc mov lock pop inc push aam and fwait mov sbb aaa mov test sbb mov out enter into insb in xchg das or ljmp aad push bound dec inc and int xchg addr16 rcrb adc aam xchg nop rcrb sbb push movsb push push sbb sub dec push adc jae repz mov or in xor movsl inc movsl xchg xchg mulb push sahf xchg adc cmpsl js xchg jae sub in pop and xchg popf mov mov sbb sub aam and lea sub leave jae mov bound inc xchg test sbb test das or popa inc inc dec push addr16 bound jnp imul ljmp inc inc adc les adc movsl pop mov in or test adc (bad) es cld dec enter and jb cmpsl mov bound clc pushf into and cmp adc and icebp sub or pop mov mov xchg push gs testb enter sahf and xor enter mov sub inc loop xor dec test inc pop jb inc pop dec imul cwtl push mov cmp jg xor sub lods inc cbtw xchg xchg loop dec mov sub dec inc mov jne cwtl push mov mov xchg fstl bound (bad) rclb nop loop cmp incb mov jg hlt pop icebp xor or xor sub dec cmpsb xor and test dec dec mov shlb adc xchg aam adc dec stos dec ds push cmp hlt les xor repnz sbb dec es clc sahf pushf mov das decl (bad) inc movsb pop test xchg xchg jno mov loop cmp cld dec jmp mov icebp cmp les (bad) and data16 mov jg and xchg mov jno mov es mov (bad) into push dec mov xchg int xor xchg or shlb xor insb pop arpl popa dec dec inc (bad) fiadd dec into sahf aam ljmp repnz fwait sub aam xor jnp mov pop push loop dec les inc inc cmpsl jae sbb call nop pop clc xchg sbb enter add cwtl and ficompl inc scas (bad) data16 and xor sub add popa test leave xor push push jae addr16 dec push popa jns popaw ja loop push xor dec dec push push js inc cmp xor xchg and movsl sub or bound xor ds xor aaa ss pop xchg mov or adc test aam adc adc test xchg push inc mov inc fs sub test ljmp sub pop shrl int and aam and bound movsb mov pop push push adc pop jo (bad) and test adc ror lock repnz sub loop cmp and sub or nop (bad) roll es mov sbb sub call push xchg icebp xor xchg xchg pushf test sub cmp mov mov mov xor mov test sub cmp test stos mov cmpsl cmpsb sub mov movsb cmp mov sbb sub xchg xchg pushf test cmpsb sbb xchg xchg mov sub mov sub cmp mov cwtl mov and and mov xchg mov sub sub aaa lods and xor mov sbb ss sub mov mov pop xchg fwait mov mov pushf mov cmpsl mov mov mov movsl and pop mov test movsl mov xor mov cmp lods and cmpsl and cmp pop mov movsb mov mov mov mov cmpsb cmp pop xchg mov sub cmp stos cmp and and mov xchg cwtl sub movsl and movsl sub test mov test mov and mov stos mov and stos and movsb stos mov mov and mov movsl and pop xchg mov cmp movsl and mov and cmp pushf sub and mov test mov and mov es movsl and cmp mov test stos movsb cwtl cwtl and and mov and xchg mov test cwtl mov mov sub movsl and mov cmpsl mov mov cmpsb xchg mov mov test mov cwtl sub mov aaa cmpsb pop cltd xchg xchg lcall mov es mov test xchg cltd stos cmpsb mov stos aaa mov lcall mov sbb sub test mov mov mov cmp movsl and mov test mov cmp and pop xchg xchg fwait cmpsb mov mov adc mov cmpsl mov mov mov sbb movsb mov daa sub xchg cwtl stos stos sbb and mov mov cmp and mov sub test mov mov mov and cmpsb pop test mov mov cmpsb and mov aaa and mov mov mov daa xchg mov xor mov mov movsl xor pop xchg lcall cmp and and xchg xchg xchg mov xor test mov and and mov xchg mov mov mov cmpsb sbb pop stos xchg cltd test movsb mov test mov stos test movsl cmpsb mov mov xor mov cwtl mov and pushf cmp sbb movsb cmpsb sub test mov cwtl cwtl movsb xor mov movsl pushf and sub test mov cmpsb mov movsl and sbb cmpsb mov mov sub movsl and movsb sbbb xor mov test sub cmp sbb mov xchg dec into pop push push adc lcall mov das sub cmpsl cmpsb sub mov movsb cmp mov sbb sub lock and roll int3 mov mov test ret fmulp ret (bad) mov (bad) mov mov aaa stos cwtl lods sub sub aaa lods and xor mov sbb ss sub mov dec (bad) or int sbb jo fidiv fs divl push xchg inc in stos sbb and sbb lods and cmpsl imul test ljmp icebp and popf xor fmuls and xchg lods pop leave and adc adc rorb dec push inc push pop xchg sbb sub xchg test lods lods or push dec stos sbb xchg xchg inc out test hlt fisubr int3 pop pop hlt mov fs test xchg xchg and mov cmp pushf sub and dec enter adc sub aad push sub fnstenv shll pusha nop cmpsb pushf test mov nop xchg data16 pop fdivp movsl (bad) shlb push pop fcmovnbe ror sbb pop xchg popf int3 lcall shlb mov ret ficomp push test enter aaa mov mov or inc inc pop aaa cltd cltd leave fld adc aam jae xor adc push cmp out loopne in outsb pop and xor mov xchg cwtl stos stos sbb lcall inc xchg cmpsb and cmp fsubs mov (bad) lcall mov cltd movsb and mov pusha test cmp jns cmp inc fstps cltd mov dec mov stos and and enter mov xor pushf and or push hlt test push (bad) push ret and fsts mov inc movsl adc inc push inc mov arpl push mull xchg adc int3 xchg sub inc push mov adc sbb js cmp repnz sbb mov and rorb or in inc dec inc icebp and pusha xchg dec jmp decl int3 into xchg mov dec cwtl aam dec mov inc and pop xchg dec repnz mov fs inc push xchg inc daa and push push les lds dec adcl or push sbb dec mov mov stos dec mov adc dec dec out adc les (bad) movaps cmp inc lcall nop mov ljmp dec enter jbe arpl inc sbb test addr16 xchg je sub cmp mov xor adc sbb xchg fimul je xchg daa jae je je push mov jle and adc insl lahf les cmc arpl xor mov jnp jl and push push pop fisubl and sbb and dec xor cmp (bad) dec push xchg jb or fadd inc xor test sub mov adc bound dec push cmp sub xor dec inc adc inc shlb movsl sbb inc xchg in cs xchg xor lcall pop stos sub mull dec or xchg bound loop xor sbb sbb repnz rcr loopne dec sub pop pop ss insb mov inc fs sub pushl or mov or adc adc aam rcl adc test xchg and or fdivs inc and clc lcall (bad) hlt in xchg cld lret out sub addr16 xchg mov sbb lahf adc and pop push gs fs xor hlt movsb daa adc bound adc lahf mov or cmp mov add adc push daa xchg and and mov dec cbtw xchg lcall push aas mov adc mov cwtl xchg add out xor jnp andl xchg dec xchg xchg int push push mov inc mov adc addr16 mov push xchg pop inc push daa push mov sub fyl2x and xchg cmp imul and xor es adc fcomp sbb les xchg dec loope sbb push lahf loop dec xor cmp notb nop fnstcw aam (bad) popf mov mov shl dec inc adc les decl xchg pop cld dec or (bad) push icebp cmp jle inc setno data16 and loop dec cld dec mov test mov fwait cmp pushf sar sahf dec aas les mov (bad) mov xchg (bad) (bad) mov xchg mov (bad) mov xchg mov (bad) mov xchg mov (bad) mov xchg mov (bad) mov xchg (bad) (bad) xchg test push xchg mov test rclb enter cwtl outsb xchg nop out (bad) xchg (bad) (bad) mov mov mov xchg ror aam pop pop push pushf ror in pop pop jb insb xchg test lock hlt pop enter ror aam pop pop jb pop lock out (bad) mov out (bad) mov mov int3 aam pop pop jb pop jb cwtl movsb movsb xchg aam mov pop int3 pop pop stos mov test mov int3 aam pop pop jb pop jb pushf ror aam pop pop jb insb mov mov nop mov push insb xchg aam pop pop push mov nop mov mov insb xchg outsb insb pop pop jb scas les mov test into lret test (bad) (bad) lods fadd hlt out mov mov mov xchg movsb xchg (bad) mov mov jb nop pop pop push xchg test mov bound pop jb cwtl pushf (bad) aam mov sahf mov (bad) xchg bound pop jb cwtl movsb movsb xchg aam mov pop (bad) fcmovbe (bad) push pusha mov mov mov mov out (bad) mov xchg cmpsb push (bad) (bad) (bad) (bad) lcall test mov bound aam mov (bad) (bad) mov fisubr (bad) aam mov (bad) (bad) mov mov test mov mov pop mov xchg pop data16 fs hlt lods stos out (bad) mov mov test mov out insb (bad) mov mov mov (bad) enter enter (bad) xchg mov test out nop mov pushf rolb (bad) (bad) stos xchg bound pop data16 xchg insb mov mov test (bad) pop mov hlt xchg xchg (bad) stos mov pop mov mov nop scas mov pop jo jb mov lods insb cwtl push data16 test into lret test mov in data16 mov push into push rcrb aam fimul pop ficomp push into shl pop pop pop shlb xchg insb mov nop movsb xchg test data16 xchg lock mov outsb mov cmpsb hlt xchg mov mov shlb mov rorb out loopne mov bound bound mov enter (bad) enter jb xchg test pop (bad) fidiv test test lods (bad) (bad) mov bound outsb in fisub pusha outsb mov mov mov xchg test mov stos out (bad) mov mov mov (bad) (bad) push mov test daa xor and sub push cmp stos (bad) adc (bad) jne dec loop,pn pop int3 mov mov dec inc dec stos or imul es cs xor mov inc jae je je xchg adc adc gs mov cmpsb sub xor cmpsl or in sub leave dec dec imul in mov sub xor lods adc es ret fisubl mov pop push adc nop rcrl xchg push or push or fcoms or and pop sub push inc fs mov movsb loope inc mov out pop sub dec sub insl enter into insb in xchg in insb arpl xchg nop fcomps pop adc into push push or int into pop rcll nop push push adc push dec push adc nop fs dec arpl imul (bad) sub push and clc lcall xchg inc inc inc xor lret sub mov dec push xchg imul mov or nop xchg jle gs inc cmp rclb movsb fs stc nop mov ficompl lea push and adc test loop sub dec sub and cmp sbb or leave dec jmp (bad) (bad) sub inc push and loope xchg stos bound mov jae push popa xor mov ret (bad) pop and repnz xchg repnz cwtl and inc push dec mov xor sbb cltd mov adc in adc roll and lahf adc sbbl adc sbb aam test je repz sub xor sbb xchg popa push mov stc lcall xchg sbb push dec push push dec int xchg adc adc or rcr push adc sahf or push adc xchg dec mov and outsb ja cmp adc aas mov adc dec scas clc lcall push dec and (bad) shrb cltd aam enter cld lret sub mov xchg xchg bound and jp mov enter push jg cld dec out ds push pop fistpl jno sub mov and mov xor mov jns mov pop xor sub cmp inc call inc adc mov sbb daa xchg popf xor ret icebp and movsl cmp lret test mov push dec push icebp sbb adc ret adc pop xchg lock lret into mov push test dec dec fsts adc or pop or inc pop les cmc sbb mov mov in mov stos pop mov repz mov inc push mov das pop popa dec inc jp mov stos jnp sbbl test adc and sub jp cmp roll cmp fwait daa movsb stos inc test adc sbb lcall add xor es divl inc ja xchg pop xchg push jle add sub xchg lcall mov arpl xor push or lea jno test popf aam adc cld dec or (bad) outsb out mov cmpsb mov sbb icebp xor loop cmp xor loop cmp inc cmp inc push dec enter mov fisub je adc test and js push les and dec mov aad movsl inc adc inc sub add (bad) xor inc mull mov int and in (bad) jmp xor in dec jbe mov fwait (bad) ljmp cltd sbb movsb ret sub mov jno and mov cmp in xor push loop dec dec aam loop (bad) daa es mov push cmp xor or sbb lcall mov insb mov mov cmpsb jle jecxz mov ficoml mov push push cmp in lea fmull push sub stos les mov adc xchg sahf adc fwait lret (bad) mov dec cmp inc inc dec outsl data16 push aaa adc and mov js sbb or test nop flds sbb les in adc and insb (bad) push insb mov mov (bad) in (bad) icebp and mov ss insb dec sub call jnp in dec pop inc mov call jnp (bad) and dec xchg xchg mov jno dec jmp insb mov jmp (bad) call mov loop inc jb das das das xor inc dec xor inc push jne das das das fs push pop push xor ss dec push das das sub push ja inc dec outsl inc pop dec push das das cmp dec inc inc das fs push ja dec dec push ja push jbe xor imul inc inc push sub inc push push ss jne das das sub imul cmp push push jae inc inc inc pop xor inc inc inc inc inc push xor insb pop arpl push push xor inc inc das xor xor push outsl jp jb das sub push pop jbe push push inc push das xor imul push push popa addr16 jno push push das push push addr16 xor inc dec xor inc inc outsl inc push pop inc inc push cmp dec push inc inc dec pop inc fs ss push data16 das xor popa inc inc arpl inc outsl dec push pop inc inc push cmp sub push dec dec push inc inc dec dec cmp inc inc xor cmp das push cmp inc outsb das fs push imul inc inc outsb das push addr16 ja push jbe ja push dec aaa dec push imul push dec addr16 inc ss push dec das das cmp arpl dec xor inc push insb inc insl imul inc inc dec xor inc outsl inc inc inc inc push ss push xor js ja ja pop push pop outsl insl inc dec dec addr16 inc inc inc dec push addr16 inc push dec addr16 dec data16 das imul arpl jp inc ja inc inc cmp das xor imul inc dec inc push inc inc inc inc push das cmp push push inc dec dec push push push push inc inc ja js push push imul inc inc inc inc das xor inc dec inc inc inc inc inc inc push push push imul inc inc inc das xor dec cmp inc push push imul inc inc inc das xor inc dec inc inc push push push imul inc inc inc das inc push inc inc push push inc inc sub xor xor inc inc inc inc inc inc push push push imul dec cmp das imul insl dec xor cmp das push outsl jae push push imul inc inc inc inc inc push ja inc das js push ja inc inc popa inc push push push inc das inc insb insl inc ja push dec push sub das jbe das push pop inc das inc inc inc xor je dec inc jp dec jne das das xor gs inc bound push fs push dec aaa dec push imul imul ss push push push insb arpl inc push inc push inc popa dec push inc inc inc push push imul inc inc inc inc outsl inc inc push das xor cmp dec inc inc dec push inc inc push cmp inc dec xor dec push inc inc inc inc push das cmp push push inc dec dec push push push push inc inc ja js imul inc dec dec push inc inc inc inc push das cmp insl push pop inc inc dec xor dec push inc inc inc inc push das cmp dec fs inc push push inc dec push inc inc inc push push das push push push imul inc inc dec pop inc inc xor inc inc inc inc inc dec cmp xor inc inc inc sub inc inc inc inc dec xor dec inc inc inc inc inc push push push imul inc inc inc inc das xor push inc push push imul inc inc inc inc das inc arpl push push inc dec push inc push pop push dec xor inc ja inc inc inc push das js ja imul push push imul xor xor cmp imul xor push inc pop ret pop xchg xchg xchg cltd test mov and fwait es rcrl adc push push dec pushf sbb nop xchg adc push cwtl xchg mov fimul xchg add inc inc stc or mov pop rclb rcll or mov jecxz push push imul cmp push push jae inc dec pop xor inc movsb sub cmpsl mov repz adc sub mov mov cmp cwtl lods movsb mov mov sbb test cmp xor mov mov sub and aaa mov sbb movsb movsb test mov sub sub mov test xor mov and dec rclb adc cwtl mov pop enter lods shlb bound xor cmp test xchg test sub leave leave xchg mov mov jmp xor ss les movsb jbe xor sub adc mov lods aaa mov movsl xor and push cmp sub lea push jae adc sub es pop push adc mov mov mov and popa sbb inc (bad) xchg call mov imul mov sahf movsl push test mov push sub push xchg jnp cmp xor hlt les ja adc test jne lcall dec push dec push sub das jbe mov adc pop adc pop fwait rcrb pop pop rclb lcall adc and sbb push inc popa dec and push jne adc aaa in cmp icebp and sub inc pop adc fs lret mov mov jp dec push adc sbb (bad) mov les mov xor push inc (bad) and mov inc and lcall xor mov sub repz mov sub cmp adc xor sub lret int3 enter (bad) and and push pop inc enter out cld inc sub adc lcall xchg jno mov add adc cmpsl pop loop dec (bad) cld inc imul sub cwtl les mov fmulp sahf loopne adc dec sub push outsb adc xchg or inc inc outsl inc adc adc xchg sbb and xor and jns xor xor jb adc pop and dec dec test sub pop cwtl inc mov adc rclb and outsb cs outsl inc jmp dec dec dec call add fmuls fs repnz cmp inc or jmp sub sub sbb nop xchg les xchg int int3 mov pop inc push loop dec loop xor jmp adc movsb loope inc dec or or (bad) or lock cld dec test mov adc xor stos icebp sub jle mov inc es cmp icebp and xor pop aad ret loop xor dec sub loop data16 dec enter (bad) in push insl jbe mov ret sarl mov inc imul outsl mov (bad) mov cmp cltd loopne in test inc fldl adc sub xor lods pop std sub push inc dec pop mov and xor xor or cmpsl stos inc les jb xor mov and adc loopne aad adc cltd lea pop rclb xchg shll pushf movsl cmp sub dec lds mov insb ja repnz inc mov (bad) or mov scas enter mov sub dec jae dec xor imul imul inc fs mov out xor adc cmp jo mov lods dec push shrl xor cltd inc inc xchg lds test inc inc arpl les (bad) dec test dec push push cmp inc cmp inc cltd cmp push mov sbb nop lods xor popa and mov bound int3 insb xchg pushf push aam enter (bad) daa adc xor or dec in loop ja sbb add dec push jns dec jae xor inc dec adc enter insl dec inc jb xchg fwait int3 dec rclb enter stos and fstl aad or adc xchg push mov jg pushf ror adc scas adc xchg adc sub sub sub call sub dec dec pop loop dec adc (bad) in out data16 addr16 push pop mov xchg cld dec push addr16 inc xor push xchg push fstps les scas (bad) xchg xchg (bad) mov movsb lods fmul cwtl jo in push pusha mov fisubl into pusha fsubrp pop pop ret loop push xchg pop int3 pop pop rol test mov cwtl cmpsb (bad) (bad) mov (bad) lods movsb (bad) jo ficomp outsb (bad) test bound out xchg call fdivs test repnz mov shr lret lret out mov nop lcall (bad) (bad) xchg call (bad) push xchg mov hlt test fdivs xchg fdivs xchg fsubs sahf rcrb int3 pop pop aam lcall pop push cwtl movsb lret lret (bad) mov xchg (bad) (bad) (bad) (bad) shlb push pop in jo rcrb xchg mov out (bad) (bad) (bad) (bad) shlb jo into pusha in fcomp outsb out fcoml (bad) sahf hlt test mov mov shrb fs out mov rolb xchg enter xchg int3 mov push pushf movsb out pusha mov xchg fmuls nop (bad) lock mov stos mov stos xchg call (bad) mov pop pop shlb out lods fcmovu pushf mov fmul xchg rcrb shlb xchg insb out ljmp pop in mov push mov mov mov aam lcall pop push cwtl int3 int3 shl pop mov in lret lock mov pop movsb int3 cmpsb cwtl movsb lret test cmpsb xchg int3 int3 into outsb cmpsb (bad) mov pop pop pop pop pop enter (bad) int3 hlt pop pop outsb (bad) test (bad) xchg mov xchg mov cwtl mov shrb mov ret data16 xchg enter (bad) pushf jo rorb test test rcl jo nop mov mov mov hlt mov fsubrp ret pop push out shr xchg xchg movsb int3 ficompl into fs mov xchg repnz push out (bad) lret lcall xchg out into into (bad) ljmp fisubr mov mov fdivs in mov pop push xchg int3 lret int3 lret jo rcrb ret test test (bad) pop pop push cwtl movsb mov into hlt pusha fcmovu pushf scas int3 int3 lock data16 data16 sahf data16 mov sahf (bad) (bad) (bad) (bad) shlb xchg shlb mov pop mov (bad) pop xchg out (bad) movsb mov ficomp pop lods fcmovu pushf mov in mov rcrb pop pop movsb lret movsb into mov movsb mov test mov (bad) push test in pop test hlt pop movsb lret out call jb xchg mov enter enter pop lock out mov (bad) enter test hlt ficomp (bad) fsub bound push test sahf rcrb pop pop enter insb mov mov xchg call xchg stos mov push test rcl pop pop pop in mov mov pop pop push mov test mov mov (bad) mov shlb (bad) (bad) mov push repnz xchg mov mov fadds movsb movsb mov mov xor mov test mov aaa mov mov mov cmp mov xor mov and mov sub xor xor cmpsb and mov movsl cmp int shll in or xchg sbb inc lods adc add fstl fstp pusha shll xor push xchg call (bad) push xchg mov and movsb mov rorb adc dec fcmovnu xchg sbb sbb push cwtl movsb lret inc adc inc inc and lcall sbb xor aaa mov cltd fldl cs xchg pusha in fcomp outsb out fcoml sahf hlt test mov mov shrb test out mov rolb xchg enter xchg int3 mov push movsb out pusha mov xchg test mov pushf pop nop (bad) lock mov stos mov stos xchg call inc adc cmp pop mov cmp mov or xor ja dec push inc push dec jb push dec push das das xor sub rorl xor enter lcall inc xchg and push push dec int3 mov pop xor xor jnp aaa xor das adc xor ret mov and push and or jns xchg sbb push (bad) cmpl sbb mov jb out test test xchg mov pop lret mov jb ret mov insb scas push test jb and fldl or fstpl in inc inc inc stos mov insb xor push sahf push mov sbbb xlat adc or js push and cltd rcll ror loop dec repnz mov dec ficoml inc imul test and inc adc xchg cmpsl (bad) cmc inc pop lcall pushf push sahf outsb pop enter pop icebp les cmpsb sub xchg xchg cwtl mov sbb leave leave in adc xor sbb adc aam adc js pop or in mov or mov adc xchg cmp lods movsl inc roll in loop add and aam and mov es lret rcl cmp push test or cs test sub and enter int3 mov push dec xor jb inc mov bound jle xor push cmp inc ret add xchg xor mov inc push mov test cmp mov and jnp cmpsb inc xchg scas and mov push push enter test es sbb test xchg sub or (bad) dec xchg outsl dec dec cli arpl jnp pop mov and and imul ljmp push divb data16 mov mov mov push adc sbb adc xchg lret clc xchg fwait enter lea inc sub adc stos or int sub pop arpl ret repnz movsb (bad) lock inc xor inc mov inc inc push xor xchg mov in push addr16 mov ljmp adc das enter andl inc mov movsb inc xor incb movsb sbb out aad or adc popf (bad) push dec push or sbb mov aaa je xchg xchg push dec cwtl push js push js fwait enter push daa push cltd nop fwait rclb adc mov mov push xor inc and test cmp xor lock adc xchg jno sub push sub push sbb mov cli inc adcl pop int cwtl test in call into mov sub or mov (bad) sbb or aaa cmpsl pushf mov es (bad) cmp sub movsl stos js push jb cmp lcall nop into insl (bad) call loop jp jp mov jp mov mov mov lret pushf mov scas and sbb and pop mov out rcrl enter mov loop push cld iret sub and sub mov inc inc outsl dec in cmp icebp and in cmp inc loopne les dec sub inc and fs mov push dec mov mov mov push jp dec jae adc ja mov xor cmp loope (bad) movsl sbb pushf loopne fcomp mov adc cwtl mov inc inc or add mov mov add add cmp (bad) mov loope popf popa fstps push and imul lods push test fsub leave or add add xor pushf ror mov ror imul in pop loope or dec inc test add mov lods adc xor and test loope int pop rol pop adc movsl (bad) mov rorl lods or popf adc add (bad) cmp aam popf leave add rcr or shll inc mov and frstor and aad lods inc fdivrl popf add add cmp gs adc dec push add fstl and cltd add or mov mov ror add mov adc gs sbb add and pushf fstp mov add rcrl and popf and or rcrl xor inc or add rcrl sub and leave push and add mov or cmp adc add in mov and adc adc add xor mov add loope add rcr or loopne pusha rcll in nop lods and frstor and aad lods inc fdivrl fldl add cmp gs adc dec pop add fstl and cltd add or mov mov ror add mov adc gs sbb add and pushf fstp movsl or or inc rcl pop sub (bad) add rcl pop and popf add adc sbb movsl xor adc add and sbb or and mov or popf sbb mov inc xor fstpl xor in loope popf or int cmp test mov or add gs xchg fld add test add xchg push fstps add fnstsw rcrl add loopne mov push mov mov sbb add push movsl dec dec movsl gs pop fldl leave push pop adc mov sbb mov mov gs leave adc pusha sarb and fstps mov add sub aad add mov cmp xchg popf xor xor test xchg cltd in dec dec or sbb and xor add enter mov xchg push mov mov sbb xchg movsl int lods movsl inc roll loope or popf in popa add xchg (bad) loope inc and mov frstor add xchg xor adc and rcr popf add in add lods sarb popf add test gs pop fldl pop mov xchg movsl xor fstpl sub sbb sbb dec popa pusha aad shll push popa and push sbb inc test gs inc or add lea sub xchg adc inc inc or mov movsb loope leave fisttpll push mov add mov sub add inc add adc mov flds sbb mov sub add mov or cltd xchg add xor xchg dec sbb call or fxam cmp xor add mov sarl pop add or sbb int3 rcrl mov int push movsl gs pop fldl adc xchg dec cmp test mov aad popf add in inc mov add int leave add ror adc and aad lods inc fdivrl sub xchg mov pop cltd test stos xchg mov sbb sbb and pop mov test xor movsb mov fwait pop mov cmp mov mov daa sub daa mov cmp pop xchg mov stos movsb mov mov sub cwtl sbb mov xor cmpsb stos mov and mov mov adc pop push push push pop int3 or or cmpsb xor pop dec imul mov aaa and sub das aaa push ja push dec aaa dec push jae inc popa dec cmp dec dec xor dec insb dec cmp jno push cmpsb and and xchg mov adc dec rcrb rclb sbb inc xor inc scas cmp sub xor xor xchg mov cltd sbb mov movsb adc lods sbb or test sub push push aam push popf rorb aam nop push rcll popf int3 movsb shrb repz xor adc adc add cmc adc adc test outsb out mov je bound dec push cmp dec dec inc (bad) dec dec int3 (bad) mov mov orl test xor int fstl out mov mov jae jnp pop and or jp jns xor mov shlb inc gs jae and mov mov setno movsl (bad) (bad) and fldl mov dec cmp mov es lret dec fwait push or bound mov icebp xor sub addr16 and mov or mov and pop pop push gs cmp inc push inc jne and mov and sbb cmp inc imul mov xor xor mov xor jnp sub ret int3 inc in (bad) cmp mov mov add sbb dec rol loop inc fs pop (bad) rcrl adc sbb or pop rcrl mov int sbb dec push xor mov adc leave xchg mov pop je dec dec inc loop dec cltd movsl int lods movsl inc in dec addr16 movsb lret lock mulb addr16 xchg je inc push inc fist and adc (bad) or jb (bad) scas and xor cmp inc gs js cltd or out into lea push dec push arpl dec popa pusha (bad) inc xchg push test and adc ret sbb sbb dec mov nop (bad) xchg test push das cmp dec dec inc and adc or mov cwtl xchg scas in (bad) mov fiadd data16 aas xor jge dec popf adc call jns aaa loop push sahf push scas cwtl rcrl inc sub mov adc lcall dec push inc xchg add lods adc lcall push dec les mov bnd and or pushf out pushf (bad) int3 mov (bad) nop push xchg mov and inc xchg xor enter into and and stc adc lods mov inc mov push dec and sub inc cmpsl cmp and stos mov cmpsl sbb push data16 mov imul mov pop cwtl rol ror aas adc sbb sub adc (bad) xchg push xor mov and sbb mov bound and adc push pop (bad) ljmp xchg adc imul inc clc cwtl push icebp and je test xlat insb dec push (bad) (bad) (bad) cld dec sub adc adc xchg es (bad) (bad) movsb aas xchg and aad cld inc lret sbb rcrb mov insl lods xchg sub mov pop adc rcrl cmc add xchg push xchg inc jae cmpsl je test lcall pop pusha xorl add dec mov or lcall rorb push je push je loop movsb and mov test jb and dec lcall scas es xor or mov xor xchg les ret arpl adc cmpsl inc xchg int into popf mov dec lea mov mov movsb mov sbb xchg xchg mov mov sub cmp cwtl mov pop xchg xchg mov stos cmp cwtl sbb sbb sbb mov mov mov mov mov sub xchg mov mov mov cmp xchg xchg pushf mov cmp mov xor mov mov mov mov adc xchg mov mov sub mov movsb mov sub aaa cwtl xor pop xchg fwait daa sub stos movsb mov sbb pushf mov movsl mov test cwtl and fwait and xor mov cmp cmp mov mov adc cmp pop xchg mov mov aaa stos mov mov sbb fwait xchg stos mov sub and mov mov mov mov mov mov xchg cwtl mov cmp mov mov mov cmp xor xor sub daa fwait mov mov stos and xor mov mov sub xor movsb mov mov cmp movsb mov sbb test sub movsl and movsb lods and xchg mov sbb mov mov mov movsl sub xor pop xchg pushf xor pop mov mov pushf pop xchg mov cltd xchg fwait xchg mov sub mov sub mov mov fwait cmpsb mov sub fwait and and mov xor test mov cmp xchg cwtl test mov xchg mov mov mov mov mov test mov sbb cwtl cwtl daa mov xor sbb and mov cmp sub mov cmpsb daa cmpsb adc cwtl mov lcall xchg cmpsl adc sbb mov cmpsb xchg xchg xchg xchg stos movsb mov sbb sbb xor lods and fwait mov sbb sub pop xchg xchg mov mov test sbb cmpsl mov xor xchg xchg cwtl sub cmpsl lods sub mov sbb daa sub cmpsl xor sub xchg pushf test cwtl cmpsl cmp mov and sub xchg mov mov sbb sub xchg xchg cwtl mov mov xchg xchg stos mov mov sbb sub xchg xchg xchg mov pop mov stos stos xchg mov xchg stos mov stos sub pushf mov cmp sub and adc xor sub xchg pushf test cwtl cmpsl cmp mov and sub xchg mov xchg fwait xchg xchg lcall xchg cwtl mov mov mov mov sbb sub xchg xchg xchg mov xchg mov stos stos xchg mov xchg stos mov sub pushf mov cmp sub sub sbb xchg xchg mov and and and and mov lods xor xor mov mov mov mov cwtl and mov sbb pushf sbb ss and xor daa mov mov sub mov and test mov movsb mov xchg xchg pushf mov mov xor sub cmp sub xchg xchg cmpsb sub sub sub test mov cmp cmpsl lcall mov cmpsb test mov mov cwtl lods sub cltd stos movsb mov lods xor movsb mov and mov mov ss mov sbb xchg pushf test pushf mov sub mov xor test stos pushf mov test sbb mov sub xor cmpsl mov xchg mov xchg stos lods stos and mov fwait sbb xor sub pushf pop mov mov xchg xchg cwtl mov xor mov mov sbb sbb mov mov test lcall and mov fwait and cmpsb sub and mov pop xchg xchg mov sub mov pop cwtl mov mov sub and test and movsb mov pushf stos movsb mov mov mov mov movsb sub mov sbb daa mov mov mov mov pop xchg xchg mov pop test xchg fwait sub pop xchg xchg mov sbb cmp stos movsb mov and stos mov and cmp sub mov cmpsb orb mov push cmp xchg and (bad) divl test cmc pop or mov es fstps nop push popf outsb sbb adc rorb push push lea pop push sahf pop rorl les and add movsb adc jbe xchg movsb ja test sub mov int3 imul sub out in push mov cltd pop push dec fisttpll test pop inc popf push and lcall jns adc int mov pop sbb push pop rcll (bad) mov mov data16 sbb int3 sub sub sub xchg dec aam lret lret sbb pop test scas (bad) lods xchg pop outsb pop and scas dec add push jns xchg mov mov push push and mov in xor fs movsb (bad) and test imul out test int push xchg (bad) push adc int3 xchg push sbb lcall cmpsb xor movsb mov push scas jae push das cmp jae cmp dec dec inc pop mov enter sahf pop enter fs xchg arpl addr16 rclb mov pop xchg pushf adc dec mov push addr16 pop xor push into jo stos rcrb mov adc mov (bad) into out imul sub or icebp and dec in into ljmp push xchg sbb movsl arpl adc cmpsb data16 cmp sub and pop mov test inc adc xor rol lds inc mov xchg rorl push jno mov cmp repnz sbb or enter or inc and out push cmp push dec xchg mov out push imul jb and nop rcrl jb stos bound adc in mov movsl fiaddl lds cmpsb dec in fs push push adc inc jne mulb mov push das cmp ja push dec push xor mov dec test loop das (bad) negl xor bound sbb lods mov int (bad) mov xor lods xor gs dec push bound xor ss insl jo popa dec push inc adc jns adc (bad) pop cmpsb xor inc dec jbe inc push push push sbb (bad) pop fstpl push adc adc mov and stc xchg int pop pop adc data16 jne push js xchg xor in xor hlt mov mov mov xchg int3 sub comiss lahf xor cmp mov cmpsl in dec push enter imul sub ss pop mov bound push sub cmp adc xchg mov dec dec insb adc xchg cwtl inc xchg imul xchg and sarl inc sub dec add dec in inc inc push (bad) nop mov loopne sbb mov bound push mov outsb ljmp sbb push and push cmpsb (bad) shrb inc cmp rcr adc inc push mov je sbb or push in sub xor dec leave sarb cmp and mov push repnz cmp jl sub sbb clc popf pushf enter (bad) inc data16 (bad) stc adc rclb adc or mov mov adc cmp xor mov adc push es loop inc xchg mov roll cs mov movsl incb pop imul push icebp sub loop data16 pop push das adc push dec ja inc dec in jae jo adcl int mov dec loop inc and shrl into push test ret movsb mov and mov inc imul jns aam aaa movsl mov js xchg dec mov int3 data16 push mov sbb dec mov stos jns rcr adc (bad) inc pop xor and or mov and imul jg inc inc outsl cmp push push push bound movsb aas adc mov xchg nop call mov dec dec adc daa mov mov (bad) daa arpl mov stos les mov xchg lods faddl dec push les inc arpl pop and bound enterw sub cmp push lret xchg sbb cld dec sub adc mov add int lods and mov lods adc rorl add popf sbb cmp mov inc mov push inc lods sbb dec adc rcr rcr xor lods sub inc movsl loopne add test or loope add mov lods sbb xor leave adc add in mov add adc adc mov and shrl push mov mov and adc add in xor xchg push or mov add mov add aad push in inc add shll mov leave xor add popf cmp add popf add int fdivrs inc inc or roll mov lods inc inc or roll mov lods inc inc adc adc cmp add rcrl or add popf or mov popf cmp mov lods xor sbb int inc mov lods inc inc or int inc mov lods adc push (bad) add popa inc pop push inc in sub dec xor pop mov inc test adc mov lods adc cmp inc mov add or inc test call lds lods adc inc test adc mov adc inc test sbb mov mov push inc lods xor adc rcll push or inc add xchg or mov add loope inc test adc ror adc add push inc lods xor adc rcll xor adc rcll push or inc add xchg or mov add loope inc test adc mov rcll xor adc lods adc lods xor adc adc mov lods sub add inc push push sbb add test adc mov or inc lea and (bad) and adc test or sub mov add cmp pusha mov sub push mov mov or mov mov or mov fabs dec pop fldcw pop fldcw in fldcw loope fstpl in pop rcr mov lea pop movsb lods loope push lds popa test or lds cltd fldl fldcw lods adc add popf add add leave mov add int and add pusha int3 loopne or lods adc popf xor fldl and mov fldl cmp add popf or xchg inc movsl cmp shll add test mov imul add int and or sbb leave mov leave sbb add add in or or or xor adc mov mov adc add gs in int sbb movsb lods in aad mov in rcll add sbb add dec aad inc popa add or cmp rol shrl adc mov imul add sub jmp mov sub add lods and inc mov adc mov inc add mov mov sbb add lods mov push add mov lods adc sarb add cmp push and mov mov and or or inc sbb popf or inc mov and fsts movsl dec mov gs lods and sbb mov fldenv aad mov mov inc sbb cmp test mov inc add das push inc inc das xor dec dec addr16 das das das imul mov fadds into mov pop sahf rolb int3 inc push divb and inc or dec (bad) out stos add xchg stos out sub rclb or pop fcmovbe xor mov pushf and xchg push inc mov int3 in xor leave adc push adc lcall push xchg dec dec adc pop adc pushf enter inc rcrl aam out (bad) (bad) aam cmpsb ljmp shll mov mov dec mov out stos add inc inc outsl cltd popf cmp mov das inc js dec cmp push rorl jmp jp or push clc nop push loop inc xor popa (bad) xor and jbe and cmpsb cmp aam inc aam xchg sbb jno,pn movsl jg adc mov xchg rcrl jb inc xor jne aad aaa mov xchg cltd xor pop mov ret push cmc mov sub dec or xchg and mov inc push loop pop call bound or lcall adc psubb aas adc (bad) loop dec jmp popa dec push decl jbe cwtl (bad) fsub fldl enter (bad) push xor add sbb adc decl lret (bad) out lahf enter push mov fldl pop fldcw data16 nop call sbb xchg pop rcr mov lea pop movsb lods loope push (bad) fs dec sbb nop movsb int xchg mov lods adc add and test test int3 loopne or sub popa stos mov adc inc mov push insb rcrb popf or int3 lock pusha mov xchg test mov xchg push call sbb or in inc push inc (bad) (bad) test or mov popa mov or xchg cltd int3 shlb mov gs mov (bad) into push js push and cmp adc pop and push test mov pushf scas lods imul inc push arpl hlt fmulp mov repz and and mov xor or xchg lods mov test jmp das js pop les mov fs and cmc pop (bad) data16 add ret mov addr16 pushf mov dec jno mov shlb test movsl dec inc sub lcall inc stos xor push js adc mov and inc rolb push pop in push inc mov mov mov mov cmovs jno es add lods (bad) jns jno and jae inc dec mov inc xchg xchg movsl add add inc push movsb ja scas inc xor les sbb or fwait jg push dec cltd movsb shrl sub inc or sub cmp test ljmp lea sbb mov jle push lahf cld leave dec in in lods sub xchg adc (bad) repnz cmp nop push sbb dec dec imul int3 mov and aaa mov pop mov adc sub or das dec and adc cmpsl stc xchg adc push pop or lock adc push push push nop mov mov cmp adc and or cld dec or dec dec icebp ss loop jno (bad) or and pop pop inc mov ljmp fwait rclb test xchg xchg cltd cmp (bad) les clc xchg (bad) and mov dec adc les pop dec inc clc xchg push mov xor mov test cld dec data16 xchg out cld dec dec adc insb mov ja ja and mov (bad) (bad) (bad) (bad) (bad) jmp xchg lcall pop (bad) call or inc or cld dec lds and adc jg inc inc mov mov aam lods fwait adc das adc pinsrw jae clc lcall daa inc push gs cmpsl adc or dec dec push inc inc ss jno push aas xor mov add xchg xchg push fwait pop roll (bad) (bad) lret jmp sub mov inc and adc xchg mov cltd shlb jbe decl in xchg call mov mov (bad) and dec int3 jmp lea lcall jg sarb insb dec lods jg and cmpsb inc pushf addr16 out mov in push cmp inc dec jno push popa ss addr16 inc addr16 imul inc inc outsl das outsb jbe das xor cmp push dec fs push addr16 xor inc jne inc jo das das push inc dec outsl inc push inc xor inc fs imul jno das das sub inc push pop js push imul inc inc inc dec dec fs push dec ss push inc das das das inc push ja inc inc pop xor dec inc jp xor dec das das xor arpl ja inc inc inc dec fs push cmp dec dec inc das das sub push dec inc ja inc das xor xor inc outsl ja dec das das xor dec dec dec push pop inc inc inc dec push inc push pop pop xor inc inc inc inc inc push xor insb pop arpl imul inc inc inc dec push dec push das das push xor fs addr16 xor pop data16 pop dec dec das das xor push xor popa dec push push push inc das inc pop jns push addr16 dec push gs ja sub addr16 inc inc inc outsl inc popa inc inc inc inc inc push xor cmp inc push cmp inc push cmp inc inc inc das inc pop push inc push addr16 dec cmp fs das das fs inc push das js pop addr16 dec inc push insl outsl inc popa addr16 outsl inc inc inc inc addr16 cmp inc inc bound inc push js push addr16 dec push inc aaa ja push push js pop aaa inc pop xor inc inc outsl inc inc inc inc inc dec xor dec das das das xor inc dec pop push das inc pop inc inc push addr16 inc ja push push imul pop jae das das das push dec je inc dec push addr16 das dec push xor fs jns push push imul inc inc inc dec xor fs das inc popa push inc push addr16 push das js imul inc das xor das js imul inc inc dec jno push popa ss addr16 inc addr16 imul mov pop fsubr pop pop push cmpsb cwtl enter lods (bad) adc push sbb mov popf sbb and sub (bad) jno dec xchg sbb pop push adc or insb mov sbb sbb bound leave mov mov dec cs inc dec xor adc rcrl nop call mov nop shr push or pop ficoml imul rcll adc mov mov xor lds mov mov test pop push mov xor lret xor es jae ja mov push jno mov mov lds inc dec ljmp dec push adc xor mov lods scas dec inc push insl outsl inc popa addr16 outsl mov adc mov jge xchg xor mov ret pop sarl es adc and mov dec push dec push push push pushaw aam mov outsb pop push call fmul in and bound and inc push inc inc inc and popa cltd jl int3 cmp in jno cltd clc lcall xchg in aad push jns push adc pop gs jne movsb movsl sbb push or test fmul pushf gs jae gs sbb sbb ss inc adc xor and and or or sbb xchg aam xchg pop sbb pop xor call outsb in pusha insb (bad) es mov push pusha es dec lods xor and daa mov xor inc inc dec dec push nop fldenv (bad) push aad int3 xchg mov inc push insb dec into mov sbb (bad) inc push js adc xchg test sbb inc cmp dec out pop dec leave in jp dec adc adc push mov daa enter mov and rolb push test enter xchg mov cmp dec pop inc adc sub push inc inc imul enter stos inc fs adc and or fsubp into out lds movsl mov push and jno mov movsb stos inc xor imull xchg nop inc fs dec dec sub into push push adc les ss stc xchg push push rcl cltd or out pop cltd sbb and cmp cmp dec jno sub inc je les adc arpl in dec imul dec dec cld dec call mov test adc (bad) and leave sbb mov fwait shlb das inc push stos mov pushf test push push cwtl cltd sarb adc pop pushf cwtl or cmc push in leave sub lahf repnz mov aam mov test mov adc test xchg fwait inc arpl and xchg xchg jne mov enter mov (bad) jmp leave fwait ljmp je ss cld dec dec mov movsl mov aaa fwait pushf (bad) cli test xchg div es xchg push push jp jbe push xor and lods mov dec push mov test and or (bad) call mov test sbb mov xchg push lcall push jle in (bad) and jl imul adc xchg push pop adc arpl cmp xchg add dec mov push xor (bad) and call aam xchg (bad) cld dec call push or push push fwait rorl push shll pushf dec sub sub push and psubb xchg mov cmp mov inc imul lcall jb cmpsl mov jae and fdivs push dec adc or inc sahf xchg adc mov adc dec dec insb inc and adc les xor jnp mov jle fs sahf sbb fs repnz fwait bound xchg mov das dec sub pop xchg mov gs adc dec or inc ja jae xchg or (bad) stc or mov insb dec inc icebp cmp xchg dec dec decl pop jl sub inc imul lret jae pushf scas lods data16 mov aad mov gs jb inc pop xchg pushf inc aam adc jbe inc or (bad) daa gs cmp mov inc adc xchg xchg add out and xchg aas mov lret mov adc or fstps and das and mov int3 xchg push and inc push (bad) loopne pop pop push aam (bad) in adc aam push dec adc cmp les icebp sub sub adc mov in daa jne dec imul xor mov sbb sbb xchg xchg xchg mov mov mov mov cmp movsl and mov xor cmp xor lods sbb aaa movsb sbb cmp sub xchg cmpsb xor mov xchg xchg pushf stos sub xor stos test sub cmpsb mov pop mov test cmpsb sbb lods sbb and mov and mov xchg xchg cmpsb sub test adc mov pop xchg xchg mov mov mov mov cmp and mov and movsb cwtl mov cmp test mov movsb es movsl and sbb mov sub mov and mov sub test mov mov mov cmpsb and mov xchg pushf mov mov mov sbb sub stos mov stos cmpsl sub test stos movsb cwtl mov mov cmpsb mov movsl and mov mov mov mov cmpsb sbb xor test mov sub movsl ss cmp mov pushf and mov daa adc sub cmpsb movsl and movsb cwtl mov mov test stos and pop mov test cmpsb daa xor cmpsl sub test stos fwait and xchg movsl sub test mov test mov and cwtl mov mov cmp test mov cmpsb cmpsb mov movsl and sbb mov sub mov and mov sub test mov mov mov cwtl sub mov mov pushf mov mov mov sbb sub stos mov lods and sbb mov and mov mov mov pop cwtl xchg mov mov pop xchg movsl cwtl sub and test mov and xchg xchg pushf cmp and movsl mov test mov mov aaa mov and xor cmpsb sub mov sub mov xor test mov sub test stos cmp cwtl mov cmpsl cmp mov mov cmp mov and pop cwtl cltd aaa mov sbb xor xor test cltd stos cmp ss xchg xchg movsl cwtl sub and test cmpsl cmpsl cmp movsl and mov mov sbb cmpsb cmpsl sbb mov and and stos cmp movsl and movsl sbb cmp movsl and mov mov pop mov mov mov sub test mov sub and cmp xor test lods and lods fwait and cmp and movsl mov mov test lods mov mov cmpsl sub test mov xchg mov mov mov movsb cltd sbb mov test add xor lret lret rclb push adc ficoml push push push push adc nop push dec dec dec sbb rclb adc pop sahf pop aam rorb push sbb adc push sbb rcrl pushf rcrl insb mov mov push push insb gs push inc push inc push push dec and and mov test cmpsb sbb lods sbb and pop lea or cmp lds mov test mov (bad) pop lock lcall and shlb movsb mov push movsb test inc xor inc dec stos mov imul xchg or bound dec or (bad) mov xchg push les sbb sbb sbb xchg (bad) out pushf cwtl fiadd xchg push cmp mov int3 lods jo stos les adc loope mov push push js pop inc mov or sub sub push inc es cmpsb sbb xor test sbb sbb xchg fcmovnbe adc fcmovbe fwait pop ficomp fs mov data16 sbb push jae and sbb sbb cltd pop nop jno cmp mov inc imul adc loop inc decl dec inc inc inc jmp ret ds sbb add lds pushf (bad) and add dec es sbb mov mov mov and mov lret das addr16 inc xor inc mov rorb xor push sbb enter insb jmp pop inc push dec ss jp adc and pop rcr (bad) enter (bad) cmp les inc inc repz cltd xchg (bad) fisttpll lcall or inc inc adc mov and sbb icebp xor enter enter sub or jecxz xchg sub sub adc sub mov psrad mov mov call mov js xchg jns dec sbb daa add and mov push lods jmp cmp inc pop jp push jbe dec xor mov mov out in inc push inc xchg sbb add dec in mov das (bad) cld dec sub push xor xchg sbb cmp popa push stc sbb adc loop pop and sub adc dec out lds jno lds je xchg or adc jmp mov fwait sub mov inc push mov dec mov cmp shlb movsl lods mov sub mov push push cltd mov inc sub inc sbb repnz sub dec (bad) sahf ror fsubr adc mov (bad) (bad) (bad) (bad) push sub sub adc out rolb test and lcall rclb xchg xchg sbb movsb dec insb aaa inc mov xchg or int pop sbbl xchg mov add hlt xchg inc fs mov push lods sub fisubl or and fs inc push xor ret sbb xor cmp sub mov and inc dec push push aaa les or dec xchg fimull adc and inc fs xor add xor mov fnstcw dec call je mov and nop dec mov and gs sub mov sub movsb enter call outsb les xor pushf mov and sub frstor mov and sbb lods xor int3 and mov mov into mov jo push test inc inc jecxz iret jmp fs gs mov xchg popa xor loop push loop xor adc lcall adc imul push xchg xchg xchg arpl inc jns jno and mov xchg xchg jns or bound adc mov adc adc push mov jns cwtl fldenv adc mov gs push mov and push mov fstps (bad) hlt repnz mov pushf sbb fwait lcall mov nop (bad) in mov sub enter mov fstpt push pop rcrb mov sbb push push push push rcll aam pop pop ficoml int3 push push pop sbb mov pop adc pop push adc dec push push nop xchg xchg ficoml xchg pushf push push xchg or push pop push popf rclb push pop adc pop int3 fstp rclb push mov or adc lret lret fimull rclb ficompl sbb or ficompl rorb xchg sbb lret fsts aam lret into push rcrl nop aam rclb push lret int3 aam rclb sbb rcll pop rcrb xchg pop rcll aam aad pop rclb adc pop adc rcll aam pop pop ficoml int3 push push pop dec adc rcll rclb push push nop rorl fwait push sbb xchg lcall sbb int3 lcall xchg rcll push push push push push aam xchg xchg push push push push push rorl fwait sbb adc xchg dec nop rcrb mov or xchg adc cltd adc push dec xchg adc dec lret into or sbb pop rcl push push xchg lret int3 aad pop pop rcll push push or adc push cltd nop aam push dec ficoml ficoml push push sbb fcmovbe rclb xchg lret int3 aam rcll dec adc adc lret int adc adc adc push dec xchg adc dec lret lret adc xchg push popf mov push dec push rcll lret int adc adc push pop rclb dec adc rcll pop adc push ficoml xchg cltd adc push push sbb pop xchg sbb adc xchg pop sbb push sbb push ficoml push cltd adc push pop int3 sbb nop cltd int or xchg lcall push pop push pop fcmovbe adc int3 cltd rclb push push push adc nop push dec push push push push rclb push pop rcll pushf push push xchg xchg sbb nop xchg sbb xchg or xchg push mov pop rcl popf rclb lcall xchg sbb pop push cltd push pop push adc push xchg sbb xchg ficoml xchg cltd adc push pop nop lea push push int push push nop push push rcll rcrb push rcrb push nop push adc dec sbb push adc pop rorl push push push dec fcoml push xchg push or sbb lret fisttpll push push xchg pop push adc aam pop push xchg pop rcll dec rcr sbb (bad) pop dec sbb or nop lcall aam adc push push pop rcll push fnop push push push push push adc push pop fcmovbe adc push nop aad (bad) xchg fwait mov int dec adc aam int sbb aam aam adc or into dec dec push aad or nop nop mov push xchg push xchg adc pop xchg adc aam ficoml int into adc nop aam aad fcmovnbe push or pop xchg adc aam rclb cltd or pop cwtl (bad) sahf push push push rcll ficompl fmul lret lret aad int3 push push xchg pop adc xchg mov lret lret lret fsts aam ficoml xchg sbb or or int3 push rcll ficoml pop lret lret lret lret int3 aam rcll push push xchg pop adc xchg push sahf mov lret nop aam aad dec push push xchg pop push cltd adc pop int lcall nop aam aad dec push push xchg pop push cltd adc pop int push sahf or lret nop aam aad dec push push xchg pop push cltd adc pop int adc or lret lret rcll push xchg pop xchg push pop aad xchg sbb xchg adc lret int push push nop aam pop xchg push pop aad pop adc (bad) adc push dec nop dec pop or lret lret rcll rcll ficompl fisttpll adc push push push lret int rorl into or push push push push push dec push push xchg pop fwait int adc lret int3 pop push xchg nop aam push push ficompl fisttpll pop aad dec push push xchg pop adc xchg fstpl dec lret lret lret fsts aam push fwait pop sbb xchg adc push push fisttpll xchg push sbb push push push or into dec adc aam int push fisttpl lret lret rcl nop aam adc dec adc int lret int push adc aam ficompl or nop aam dec sbb push nop aam push or mov fimull rcll push adc aam or or adc dec lret lret int adc ficomp xchg sbb push xchg xchg pop rcll push popf push or xchg pop pushf fxch (bad) sbb xchg or push push push xchg adc rcr adc or lret fstpl sahf xchg push push rcrl push ficompl rorl pop nop xchg push push rclb xchg rorl push push pop push push push push push adc xchg push or dec aam adc nop push push adc adc push push push push push (bad) push or nop push push push pop aad (bad) adc rcll lea nop rcrl cltd rcll push pop fstps push nop nop push rcrl or push pop dec or ficompl push push lret int sbb lcall cltd xchg xchg push fwait push fwait rclb push dec dec aam adc nop push push adc ret xor push push push rcll aam pop pop ficoml int3 push push pop sbb mov pop adc pop push adc dec push push nop xchg xchg ficoml xchg pushf push push xchg or push pop push popf rclb push pop adc pop int3 fstp rclb push mov or adc lret lret fimull sahf ror (bad) mov nop call test xchg pushf cmpsl mov mov cltd cltd and rorb and adc push push push mov cltd loop dec cli imul lea pop movsb lods in aad mov push leave lods dec dec jns push aam xchg xchg push je inc data16 push jecxz sub and mov or xchg xor es mov mov sbb pop (bad) repnz es loop lods stos xchg mov test cwtl and movsb and or loop popa adc lret sub stos mov hlt inc bound push sub inc push push xor test lods sub mov sub cltd subl data16 pushf shrb adcl test cltd shlb push les and mov xchg xor lret mov xor sub adc adc add cmp xchg or fs dec mov mov lret jmp push inc inc inc and mov inc adc pop loop stos test imull push push xchg pop push and adc xchg adc fcompl and xchg and inc int3 mov int or (bad) jmp dec (bad) push test pop mov push adc xchg into dec dec push aad and test bound and (bad) mov mov xchg mov ficompl mov pushf aam mov stos cmpsl mov mov mov test arpl scas mov mov dec (bad) rorb dec inc sub push es xchg lods dec nop sbb lods cmp loop js sbb or dec cmp dec or push dec fs adc and mov cmpsb aaa push das xor xchg jmp imul call loopne and int3 xchg mov fimul xchg or movsb (bad) and fsubp scas outsb pop daa inc subl nop rcll adc dec mov push xor inc cmp sub and push dec sub test mov cs insb in out out daa ss int3 enter rolb cmp and push test add inc adc mov insb xor adc sub dec fisubr int3 addr16 mov es int int cmp add fwait mov mov adc dec ds fisub call push push aad mov sub outsb addr16 xchg adc mov js pop jae inc les mov sub dec jo mov (bad) mov test mov (bad) mov inc xor xor xor into jno inc arpl dec in or jg stc sbb (bad) and adc (bad) testl sbb loop xor mov inc and xor cmp jp test addr16 sub int3 lret out ja jns inc inc sub cmp push inc and pop xor add in es dec dec mov pop inc cmpsl jae test test adc enter fisub xor xchg test push sub (bad) xchg push in dec cmp xor cmpsl xor stc adc dec ljmp mov and popa sbb lret cs movsl inc (bad) fisttp sub xchg aad ds dec int3 aas adc loop dec mov cmpsb cmp dec sbb int3 dec mov push pushf push adc movsb push ret shll das mov je outsl inc inc xor lcall sbb adc aam pushf push adc push inc or sub aam inc jbe inc ja addl mov sahf es popa sub and popa fmull bound and and fwait cmp mov (bad) les mov daa aas jmp cmp imul sbb push adc mov rcl mov (bad) and test push test inc insl (bad) daa movsb pop adc and stos shlb and xchg jns push lea cld test or movsb inc xor mov or mov enter sub (bad) mov pushf into sahf rorb arpl imul (bad) and cltd pushf adc xchg fimul imul sub sbb mov and bound inc sub and sub mov icebp sub jb cmpsb mov sub or gs lods sub mov mov fld movsl imul push lods mov or inc popf or leave adc add cmp in pop xchg movsl or loope mov mov add pop xchg fadd pop xor and and gs imul popf and mov push inc lods adc or inc fnstcw lods xor adc loope call cmp inc xor movsl jmp adc mov inc or xor movsb rcll loope int and adc mov inc xchg or add test dec or loope lds lds fldl add inc dec lds mov add inc and sub or xchg mov add sbb or test mov popf add adc add loope fstp lods adc adc int3 lds sub add or inc xchg adc rorl and adc add in sbb and and inc inc or add push inc mov shrl mov lods sbb or inc push inc in or cwtl mov inc mov leave mov loope lods adc lods adc sbb pusha mov push adc lds cltd push or or movsb lods pop xchg fadd pop xor and and imul inc add add mov movsl cmp inc test movsl cwtl in fdivrl inc popf or xor aad sub mov add or sub adc mov loope or mov mov rcll add loope inc mov lods adc sbb add adc add dec rcrl xor add loopne or int add loope fnsave mov add mov adc inc inc or gs and adc add loope fstp lods adc lods adc dec loope call adc lods sbb or rorl (bad) lods adc lods dec add adc adc or adc or xchg sbb and test inc lea and adc mov xor mov or xchg test jmp cmp popf add shrl adc inc inc or push mov inc loope in sbb add loopne mov mov inc sub popa leave add mov lea pop movsb lods in aad mov aad lods adc and sub mov and and sub xchg stos lods mov lods sub stos adc mov cmpsl cmpsl xor movsb and mov and sahf aam pop pop jb scas lret (bad) in (bad) (bad) jo fidiv mov bound out mov rclb enter cwtl outsb xchg mov out (bad) cwtl (bad) mov test xchg (bad) inc es xchg push and test lods xor adc loope call cmp inc xor movsl jmp adc mov imul (bad) stos mov ret cwtl lock lods mov (bad) pushf and sbb je mov data16 adc add add test es movsb jne pop int3 (bad) in sub or and push jns dec ficoml jb inc xor inc (bad) xchg movsb faddp lahf mov pop movsl xor mov sub loop inc jmp or call and lds fwait adc xchg int3 mov dec add ja push movsl and mov mov mov or mov and mov dec sub adc nop mov int3 jb inc data16 lea in loope popf sub or push fwait adc in mov repnz mov push jb sub les daa movsb sbb or clc mov dec xchg lahf adc sbb lcall push les (bad) nop mov movsb jo adc mov and inc mov sub lea call push js pop cld dec or sbb sub lods adc or sahf nop push and or and adc xor xchg cmp mov xchg xchg push push xchg repz es and dec int3 xchg and in lea push in or push adc test imul inc mov cltd fcos and ret pop inc xor mov loope and inc xor xor mov daa inc push xor and and dec xchg sbb adc inc mov and pushf movsb mov (bad) les enter xchg push pop xchg fstl push aad adc ficomp jb outsl enter arpl js dec dec dec imul push xor dec insb cmp outsb outsl pop insl cld dec dec movsb arpl xor fwait jp mov xchg push nop dec push adc xchg pop adc sahf adc mov xchg das adc xchg push inc xchg xchg cld mov lods cs inc push jae outsl loop push adc insb dec or and or mov or jp xchg xchg jl sub out das or push dec xor and push dec sbbb fiadd jne lcall les int3 es scas and add sahf lcall jne les movsl inc roll mov ret pop mov cmpsb sbb push dec rcl push and int3 leave inc cltd test and cmpsb push push dec pop mov fwait aam jno movsl js adc or xchg push add jae dec imul adc inc je and je test inc mov mov lea xchg shr sarl and inc dec sub push mov sub stos mov mov pop cmp mov lea sbb rcrl or xchg adc pop mov int xchg adc rclb lock scas mov cltd xchg int3 push bound jb and lret ret dec sbb mov ljmp push and ret inc push adc xchg (bad) jno repnz int3 int3 adc adc lea les mov js push outsl inc pusha in (bad) pushl rclb inc xchg xchg xchg or or mov sub mov xor rclb push adc and inc push push imul push adc xor jb xor adc (bad) int3 and or pushf lret test dec (bad) and mov nop push push mov inc leave xor and cmp je imul loop jae pop mov insb inc ljmp out imul scas adc mov fwait adc nop cltd sbb push sub inc adc cltd lret dec adc movsb inc jb dec les and mov insb mov and inc pop dec mov mov lea cmp lret cltd test gs insb insb cmp je inc push push and jns icebp sub xchg dec dec or popf push js push inc hlt lea dec mov mov inc mov push daa inc inc xor mov jae adc enter dec enter xchg dec jmp imul pop daa inc adc xor inc imul sub mov dec push sub cs mov cs mov cs mov cs out stos sub out sub leave stos sub sub push mov sub cs sub dec in push gs dec call sub in call lret or imul in mov test jmp lea mov add dec sub or sub and sub or es imul data16 (bad) enter out lds mov in daa or call into out push mov int3 in in mov sub mov call mov dec in sub sub mov in (bad) dec dec lods inc and in daa or call iret or or mov ljmp test sub push gs lds jmp sub dec ljmp out scas in test sub sub enter push int outsl dec jmp sub sub sub imul sub mov dec sub sub leave dec sub scas dec call out int outsl or enter out lds mov out imul lods lods in (bad) push (bad) in es mov sub sub or dec dec gs lds jmp sub sub iret or and (bad) mov inc daa or lods xchg cmpsb imul ljmp or cs insb in jmp in sub push sub cmpsl or mov enter das sub lret dec dec dec das push or insb es mov sub mov call sub sub sub sub enter sub sub sub es leave add call sub leave sub dec imul dec out inc ljmp sub sub imul sub sub sub sub dec push stos test sub xchg sub push mov sub mov (bad) jmp out xchg push mov in mov mov stos dec in dec dec mov sub sub sub or or in sub dec add push mov or insl es outsb in lea sub dec in jmp in sub leave sub dec dec sub test or xchg inc mov in push imul cs insb in ljmp es or mov or mov sub lods daa or sub sub lods dec dec insb mov sub sub push sub or imul stos (bad) or imul movsl imul insl out test sub imul or leave sub sub lods xchg sub sub and inc pop je inc push cmp dec les inc das xor imul mov adc inc test lds xor (bad) jp das push xor das xor or adc jb xor mov sbb les mulb repnz add test mov sbb push or rorl nop push into sbb lcall xchg sbb inc (bad) mov push pusha loope in leave sub inc lods mov xor mov bound ret mov jae xor and addl cmpsb loop inc pop xchg lds sub push push push inc imul and mov and mov cwtl xchg std inc ret xor arpl xchg pop pushf jmp fisttpll rcrb int push adc addr16 addr16 push xchg pushf cwtl push inc xlat jbe adc movsb mov mov daa push sbb jbe jbe push or mov dec sub sub leave dec sub scas dec call push loop dec test xor outsb xor rcll test cmpsl in jb pop xor and (bad) push lea push adc dec (bad) and addr16 dec and jb aaa mov and xchg lea insl loop dec icebp cmp or push xchg or (bad) ret fwait or loop xchg les jne (bad) xor push push or inc jnp nop nop pop and xor jp pop push mov enter adc xor movsb xchg mov dec mov bound dec dec das xor aaa dec push jae inc bound mov mov mov adc popf push mov dec adc fldcw lods sub and lcall sub xchg stos lods test dec push inc cmp xor (bad) mov sub movsl add sbb sub adcl dec nop lea dec arpl dec repnz pushf jo daa push push es lds scas sub sub lods daa adc push lcall adc scas imul mov mov ror test enter push daa mov cmp push fadd cltd roll xchg hlt and es dec inc cmp enter jmp data16 int3 push mov (bad) jmp stos lret xchg or xchg (bad) inc push mov xchg cmp bound adc sahf adc test mov inc dec loop jno adc dec xchg xchg sub jb and movsb xor mov adc adc lds push ds mov in mov inc adc push sbb inc andl dec push insb out xchg hlt out xchg mov sbb pop mov cmp sub sub mov ret lret mov lea mov mov add inc daa sbb (bad) adc sarl cmp into cmp lcall inc adc add xchg cmc mov (bad) and outsb int3 test and dec ja xchg pop aad rorl es sub ret cmp xor call outsb adc aam pop push pop mov xchg push xchg rclb or aam adc pop sbb or rclb int3 into xchg int3 (bad) ljmp test popf (bad) pop inc aaa dec fs adc xor ljmp sub xchg sbb sbb cmp bound enter in daa movsb sahf daa ja daa test sbb stos cwtl cmpsl cmpsl sub enter int ret mov inc push inc les sbb mov xchg and lods inc mov test or inc mov adc or sub mov dec es dec call ret mov inc mov mov ss or xchg fmull sub sub sub js sar decl (bad) lods fmul pop push test hlt nop movsb lret (bad) out inc (bad) repnz cmpl xchg adcl and and sbb lcall push pop and or loop inc clc nop push or inc jbe cmc aaa pop sbb dec mov sub mov lcall adc fimul adc xor push sbb insb and adc and les inc movsl push cmp notl xchg je push adc dec cs pop mov rorb and dec dec pop adc nop pop loop pop mov lcall jno and insb test xchg int3 mov rorb int3 stos or dec out and mov mov cmp sub lods and cmp xor xchg pushf sub movsb test mov sub cmp cmpsb mov sbb mov and xor movsl sub mov sbb cmp cmpsb xor cmp and cmpsb sub test xor xchg pushf sub movsb mov adc pushf and xor sub sub sub xor mov mov cwtl sub cwtl mov movsb cwtl lods sbb mov cmp sbb mov pop xchg mov mov mov pushf and mov mov mov movsb mov adc mov mov mov sbb test sub mov sub mov xor mov sub test sub xor and xchg xchg stos xor mov xor mov mov pop stos pop xchg cltd xor lods cwtl mov mov ss stos mov mov mov cmp and stos mov mov xchg stos sbb mov lods fwait cmp movsb fwait cmp mov mov and mov sub cmpsb mov mov xchg lcall mov and lcall mov mov ss xor aaa mov mov pop xchg pushf cmp mov pushf cmpsb mov sub pushf xchg mov mov and pushf sub fwait cmp mov pushf pushf mov sbb mov mov fwait mov cwtl sbb mov mov mov sub stos and stos and mov test and and cmpsb fwait pushf cltd stos cmpsb xor and and xchg mov mov xor mov mov aaa pushf cmp mov mov mov sub and mov and mov mov mov cmp cmp mov mov daa and mov movsb mov and xor test mov mov test movsb sbb xor sub mov and xchg stos sub stos cwtl pushf mov mov cmpsb pop cwtl stos cmpsb sbb sub and sbb mov mov mov sub and fwait and sbb xor mov sbb cltd mov sbb cwtl sub xor mov mov xor mov mov xor mov sub mov mov stos and cmp mov sbb stos mov xor cwtl xor movsb and cmpsl sub movsb aaa mov cwtl and stos sub mov pushf sub cmpsb movsb test mov cmp mov stos xor mov cltd xchg xchg cwtl and stos sub mov mov and mov mov mov mov pop mov movsb lods pop mov mov cltd lcall mov and mov mov cwtl es sub mov cwtl mov cmpsb mov lods adc mov mov cmp adc test cmp stos pushf aaa and pushf stos xor mov mov mov sub xor lods sbb cwtl sub sub mov cltd mov lods cwtl cmpsl sbb stos pop cmpsb cmpsl mov and sub mov mov and mov lcall xor cwtl sub mov cltd mov xchg mov and mov cltd xchg xchg lcall cmp sbb cltd and cmpsl es mov xor es mov sbb mov xor cmpsb pushf and and stos and and test cmp and cmp mov fwait cmp pop mov xor sub sub mov pushf pop mov cmp xchg xchg lcall sub cmp es sbb xchg mov cmp stos sub cmp mov and cmp mov pop movsb mov cmpsb xor mov xor sbb cmpsl sbb sub pop cltd mov aaa movsb mov mov mov sub aaa test cltd xchg xchg lcall xchg mov mov and sbb mov mov sbb xor xor sub mov cmp mov test cmp mov cmpsl sub sub xchg cltd stos stos stos stos xor mov and mov dec and or adc push popf rclb sahf xchg adc into adc pop nop rcll lea sbb lret into adc push push adc pop fstl xchg cltd pop pushf xchg push pop adc mov test and cmp mov sub mov sbb cmp cmpsb xor cmp jmp lahf mov sbb push into adc xchg push push dec imul int3 call jae add (bad) xchg push xor xchg adc xor test push ret jb and pushf loope mov (bad) into pop into push into xchg mov push pushf call test call out (bad) test insb mov inc cmpsb hlt jecxz sbb jb fcmovb mov int3 mov inc dec push ja push or lods mov inc xor inc and mov pop xchg cltd sub push dec push lret int rcrb sbb pop adc dec aad mov (bad) push push push pop pushf (bad) fimull into inc mov ret adc and mov lods cltd mov and mov nop pushw fs push jno inc bound sub inc sub mov and adc insl and stos and adc ficom sbb xchg adc inc out and dec sub imul xchg mov sub leave jp and cmp push les and dec and in push sarb test (bad) outsb pusha data16 (bad) ljmp xor pop sub lods pop sbb mov nop imul push dec push outsb cmp inc pop and lods push mov movups mov cmp adc lcall cltd cltd fstpl and repnz loopne stos sahf aam mov dec adc es and mov push sbb int3 xchg inc ljmp scas sub add adc pop xor fs (bad) xchg adc sbb (bad) ficompl inc js jbe inc xor push push (bad) xor in sbb test mov fstps mov xor fs push aaa and mov and call push add loope inc gs fs jo stos mov movsl test sub int3 sub or or push lds notl mov jns push pop sahf mov int3 jle test sbb fmuls test test jb je xchg addl ja loop inc mov (bad) mov out popf rorl xchg cmp sub aaa inc jns jno jo inc inc push inc imul cltd push add loop xor imul dec xor sbb lcall adc pushf dec jno sbb daa inc adc imul xchg sub (bad) pop push out or leave cmpsl or cs dec push call cld dec push inc ret xor iret adc sub adc in ljmp xor dec mov xchg mov ljmp out insl in sub test mov popa push and xchg mov les inc xchg test pushf int3 (bad) push and pop push xchg mov aad dec or ja jne in push ja rorl sub addr16 stos movsb outsw arpl pop inc and cmp mov inc addr16 xor arpl pop movsb cmp xchg ficoml push adc enter lcall adc inc stc sbb mov push mov mov repnz dec call clc lcall push outsl and jb rclb mov inc fs xchg dec or sub dec inc incb divl pushf (bad) stc or pop in pop mov inc dec ljmp nop rcr sbb xor call adc and int cwtl push inc (bad) mov mov dec or test inc and inc ret lcall adc out iret add jae xor mov pop mov sub and jmp xchg mov sbb sub aaa cmpsb mov fdivs mov inc pop dec inc dec push jns xchg (bad) mov cmp inc fs push outsl inc outsb cltd lea inc xchg xor out push dec inc push sub inc aam or cmp inc sbb mov jl int3 imul push rcr mov mov fisubl dec mov in mov fisub inc test icebp and dec xor xor adc mov dec mov inc inc inc xor lret arpl sbb mov je inc push cmp ja push outsl les in mov and inc arpl (bad) icebp sub jle adc pop mov jne mov mov mov add cmp shll rcl and int inc add push in rcrl or imul loope rorl pop push sbb int lea and loope in sbb or fisttpll cmp or lods and enter xor movsl sbb popa inc lds enter dec sub sbb and movsb roll sbb or adc fdivrs call mov mov loope rorl fldl lea adc adc mov mov in push inc in add inc popf adc mov or adc and int3 (bad) xor popf inc sub popa lea xor adc pushf lods fnsave or cwtl fdivrl fsubrs sub inc aad int3 aad push (bad) mov lods sbb xor in inc add (bad) cmp shll adc inc movsb rorl push cmp mov xor or popf dec sbb int3 mov sbb mov shll shll adc and rol sbb dec (bad) xor sub add fldl adc sub add add test mov add test mov inc mov lods mov mov shll and add dec in fdivrl test popf test xchg leave pusha lods mov int3 (bad) xor movsl pop int pushf leave popa xor mov inc in sbb sbb mov mov push popa flds lods xor add push mov mov add mov sarl mov add cmp lods xor or add imul push inc movsl push pusha loopne int mov in sbb cltd mov mov and cmp mov rcrl fnstsw mov mov cmp fdivrl add and shl adc add mov push (bad) inc or and or fisttpll loope sbb and inc fucom mov frstor and frstor jmp pop test and mov or add add xor fdivrl dec add add or add xchg push mov mov xchg adc rcl in and rcrl int mov mov cmp mov adc movsb ror movsl movsl and flds or xchg or add inc mov jmp inc mov cmp inc and rcrl add in inc pop push sbb dec and lds and or and or sbb cmp mov add xchg dec or enter in pop lea lds sbb and call sarl sbb adc sub add sbb inc add rcrl adc add popf add adc add int xor or (bad) xor cltd fucomp enter lds shl or cmp add sbb add adc popf add pop fsts or gs add add rorl push dec dec adc inc mov loopne inc mov sub aad xor int3 rcll push and int mov cmp add sbb add adc add add or gs add add int push movsb rcll int gs aad sbb pushf loope xor or add mov and cltd leave mov and xor or gs add pop aad fsts add mov frstor dec push mov loope and or cmp mov inc pop aad lds inc xor jmp fldl mov pop cmp and push cltd fstpl lret lret lret rclb push push push rcll push push dec push dec rcrl sbb (bad) push dec aad pop dec sbb pop fstps push cltd adc push lcall or adc adc push leave cs movsl out (bad) cmovg test dec sub call jbe xlat cmpsl je out xor movsb adc mov adc and pop bound ret cmp fwait cmp lcall mov add rcrl cmp mov add or jb movsl cltd and adc xchg pop aam sbb adc dec xchg sbb xchg adc xchg inc jmp int outsl sub and jno adc adc sub xchg adc push inc int3 (bad) xor popf inc sub popa lea bound (bad) into push nop dec das push das jns aaa das ss aaa dec les adc push add and mov inc cmp mov mov dec mov shr mov mov inc xor push dec push cmp mov or or popf dec sbb int3 mov sbb or or adc cwtl daa xchg push sbb sbb sbb mov sbb adc ficompl adc mov inc push lods dec mov jbe push das xor adc dec das push das outsl pop cmp jns inc xchg mov sbb adc jns inc cmp mov xchg xchg leave pusha lods into lret dec or arpl mov and pop movsb nop int in xchg iret or push inc das xor dec stos ret xchg and dec addr16 inc and xchg mov adc sarl sub dec mov sub movsl and mov stos cmp sub int3 int xchg adc dec mov sbb fwait fs je adc dec out inc addr16 (bad) into xchg mov lds or push fisub inc add xor push inc aaa push addr16 inc inc jbe dec cmp mov mov mov mov gs dec sub lret pop adc dec or repnz sub inc icebp cmp inc mov nop int mov inc and movsb cltd adc sbb push bound push xchg int3 mov lret outsl dec sub dec xor je inc inc xor push mov lcall and dec or cmp in pop pop inc inc cmp mov and fwait and pop mov mov or es dec jno nop sarl mov sbb sub test cmp mov jo inc push arpl push mov mov cwtl es movsl sub cmp cmp xchg or inc adc stos mov inc inc dec push ss jae icebp sub arpl push xchg dec adc inc cmpsl mov test cwtl mov inc adc (bad) lcall dec icebp sub push jne inc jo loop push mov sbb in lds sbb rcll add stos xchg lea jno xor dec mov arpl out cmpsl jg pop mov sub xchg lret cmp dec sub sbb xor mov cmp and shr out mov outsl dec popa dec inc push pop fist sub insb mov mov test xchg in and (bad) adc sub or jmp fldcw mov and jb mov adc and xor jg loop inc repnz xor js popf mov and xor sub loop and dec (bad) fsubrp mov aas icebp ss je inc inc bound mov fwait adc dec mov imul repz sub cmpsb mov scas pop adc sbb fwait xchg mov rorl sub or push push sub pop push mov loop das (bad) aam loop push adc dec test aam (bad) aam mov fdivrs stos mov rorb aam aam sahf hlt enter call xchg and adc sub mov mov xchg nop inc mov (bad) clc lcall add push cwtl xchg or shlb mov inc mov ret ret pop adc nop push pop data16 lcall cltd movsl adc leave sub and dec push sub jb and mov pushw int3 int or sub fmul inc dec xchg or sbb clc lcall cmp lcall jb mov je je adc daa adc data16 and jbe adc lds es xchg pop ja jb cmc inc push adc hlt loop push adc adc xchg inc je inc fs inc adc xchg adc adc add xchg adc inc loop test adc push xchg (bad) ja jb fs jae mull inc push movsl adc adc adc inc inc xor adc adc and (bad) push movsl adc adc inc hlt fs xor xor add xchg and push adc adc fs arpl repz cmpsb test and cmc and test inc aam jne divb xor notb test and test je aaa cmpsb mov mull adc arpl xor data16 and push xor addl xor divb pop arpl adc jbe push je in aaa test addl xor testb xchg xor out es adc jb addr16 xchg loop push adc push test xor test ja xor push data16 ret add mov aad inc inc je adc xor aam adc adc adc inc fs es inc repz test xchg add jbe test je inc repz adc adc movsl xchg xchg xorl xchg add inc movsl push addr16 push test inc hlt adc adc jne cmc adc adc adc les inc les xchg inc (bad) hlt xchg les xchg test data16 lds xchg je xor adc les xchg test xchg add inc xchg inc gs es cmpsb testl xchg test inc daa and inc push xchg inc ja adc push (bad) repz xchg and inc push je arpl and arpl xchg and xchg inc inc xchg add (bad) divl inc mov testb jbe xor arpl inc push xchg (bad) push xor test mov lds fs xchg adc push adc repnz gs push gs je inc pop pop adc repnz repnz lds adc mov es adc xchg xor cmpsb (bad) repnz mov in adc adc inc hlt test xor adc xchg repnz jne inc adc inc je adc adc fs xchg jb (bad) div jecxz bound push repz xchg and xchg adc adc fs jb bound xchg add aam adc adc repz add inc xor (bad) repnz inc adc ja cmc arpl add inc xchg (bad) adc xor xor repnz test xchg inc push ja push inc xchg adc gs je inc inc (bad) repnz repnz push jb xor xchg adc add adc data16 mull repz add xchg notb divb xchg push adc adc adc adc fs adc arpl cmpsl jae (bad) cmc gs addr16 xor andl mov (bad) hlt test push je push je movl repz xchg mov inc data16 data16 and inc adc adc adc lds push xchg cmc xchg xor inc inc ret jb xacquire xchg xchg data16 ret adc xchg xor add hlt andl push je adc mov ss and inc inc jne adc adc xchg mov push cmpsb in cmpsb jae je adc mov ja adc adc jecxz test push gs cmc push add adc testb jae adc inc push pop je inc and les jbe data16 xchg inc push daa je inc fs push cmc test jae mov adc xor data16 inc xchg push lds xchg lds xchg arpl in inc inc jne adc data16 inc xor testb adc xor push adc xor cmc ss push jae (bad) repnz testb testb adc xor push adc xor xchg inc mov repnz push je test xchg movsb xlat movsb xlat movsb xlat movsb gs je pop xor fs xchg add adc xchg push addl arpl in xchg inc inc hlt divb add data16 (bad) push xchg xchg push inc xchg add es mov adc adc adc adc xchg push mov mov adc xor adc xlat movsb xlat movsb aad xchg addr16 xor add jae loop xchg fs jne xorl xchg pop fs add xchg es add adc adc xor xchg xchg addl xchg mov inc je inc lock and cltd rcrb push push push pushf push push cwtl push xchg xchg xchg sbb fstp rclb fwait push lcall dec pop fisttpll dec push fwait rorl push push pop adc xchg sbb push push push push aad (bad) adc adc rclb ficomp or int nop adcl sbb jb in push mov xchg mov lcall sub fs xor xor add xchg and pop or jb rcrb bound cmp dec pop je inc dec je inc ja outsl addr16 insb inc inc dec imul lods sub (bad) outsl dec inc leave call inc data16 jnp cltd pop (bad) push pop pop mov dec inc mov xor in rorl out push aam mov jb sbb mov adc fs dec lcall xchg add inc pushf lods sbb inc dec sub es sub rcll adc (bad) aam les inc jp imul sbb mov or or xor lds rcrl adc mov mov push sub ss xor sbb cmpsl cwtl sbb push addr16 imul cmp gs sarl adc les xchg pop movsb mov pop fwait xchg roll cwtl addr16 in adc dec int3 shlb adc testb xchg and jnp (bad) sarl (bad) sub dec push xchg dec enter in fstp inc aad xchg loopne int in mov (bad) sub push je arpl and arpl sub enter (bad) xor inc js mov and mov dec (bad) adc sub cmpsb mov test pop (bad) lock enter (bad) les bound das xor cmp jl dec repnz loopne fs mov in sbb push push cltd pop aad cmp mov ds xchg je jnp jno mov jns cmp test sbb mov (bad) int3 cmpsl xor insb mov lret sbb cltd xchg dec push mov adc jno cmp sbb mov or sub sub sbb es inc push jb xor mov stos xlat les dec mov outsb das jbe cltd and fmuls adc push mov popf int lods mov out fchs fldcw or jmp mov mov sbb push lcall fstps push les out inc leave push sbb dec cmp nop rcrl dec xor and xor mov pop sub (bad) jb push cltd roll mov out gs test xor repz cmp push xor (bad) mov mov xor inc xor mov xchg xchg xor mov xor fs aaa pop xor clc xchg push inc stos mov pushf inc iret pop (bad) gs push xchg inc mov sbb jo (bad) mov push mov mov jmp push push nop push inc mov adc adc in jmp xor xor sub mov daa addr16 and or xor cmp adc outsl adc sbb movsl popf aam or xchg push sbb xchg adc ficomp adc push sub xor xchg mov mov xor enter mov inc xchg sbb ret mov dec jmp push dec sub adc xor imul sub sub bound cld dec mov push test nop mov (bad) decb push stos mov adc inc xor push divb inc js sbb mov andl and in popf cmp lds inc sub (bad) ss mov adc out pop scas fimul inc je inc pop sub or popa xchg mov dec arpl jp dec out bound dec jb adc (bad) jmp imul mov mov (bad) (bad) (bad) decl sub test int3 out dec call cmpsb mov (bad) sbb (bad) push sbb push adc test xchg mov daa jbe push or sbb push xchg movsl cmpsb xchg adc roll push test sub jp sbb mov out and fsubl js xchg sub adc jmp inc xor and stos and das xor fstps push mov bound mov dec inc or (bad) hlt ret and xchg xor mov pushf mov mov or scas es mov push add cmpsl arpl mov mov adcl adc pop mov aaa (bad) fsubs adc daa jne cmp mov mov lods sbb cwtl sub cmp cmpsb and mov pushf movsb cmpsb sbb test xor mov movsl sub sub mov ss sub cmpsl cmpsb pop cwtl stos cmpsb sbb mov mov mov sub cmp sub sub xor cwtl sub mov mov mov lods sub xchg xchg xchg stos stos cmpsl sub mov cmp and cwtl cwtl and sbb xor mov cltd lods xor lcall sbb and mov mov xor fwait es mov cmp pushf sub ss cmp mov sbb sbb cmp and fwait sub cmpsb stos sbb cmp movsl and cmpsb cmp cmpsb sub test pushf pushf mov cltd aaa test mov and movsl sub test mov sub mov sub cwtl test mov pushf mov movsl sub test mov sub mov mov sub test mov sub pushf xchg mov and sub cmp test mov xor cmp xor sbb mov cmpsb sub test mov test mov and sub sbb sub sbb mov sbb sub mov sub mov xor sub mov cwtl sub sub and and mov mov and xor mov sub mov cmp mov movsb sbb mov xor sbb test movsb mov cmp sbb movsl xor xchg pushf xchg pushf xor xor mov mov sub and and mov mov lods mov fwait and and mov cmpsl mov mov pushf xor and mov movsl sbb cmp and mov mov mov sub lods sbb cmpsl sub cmpsl sub test movsl cltd sub stos sbb mov mov sub sub cwtl xchg cmpsb mov pop test xchg xchg xchg xchg cmpsl sub sub mov xchg pushf stos xor mov mov mov movsb mov xor pushf stos xor mov mov mov sub xor lods sbb cwtl sub stos cltd cmpsb mov mov cmpsb sbb xor movsb mov daa cmp mov daa sbb mov cltd mov cltd pushf and mov movsb xor xor movsl sub xor adc xchg pushf cwtl movsl cmp and mov cwtl mov xor sub mov pushf and cmp mov xor test mov mov sub mov sbb xor sbb mov movsb mov and sbb cmp cwtl lods and mov sbb mov lcall cmp mov mov daa sbb mov and sub mov cmp cwtl adc stos sub cmpsl sbb xor mov mov mov xor sub xor mov mov test and mov mov mov xor mov and and cmp mov lcall mov mov lcall sub xor mov mov sbb mov mov cmpsl xchg mov pop mov sbb mov mov mov daa sbb mov cwtl sbb cwtl adc mov and mov fwait mov sub mov cmpsb pushf and cltd mov cmpsl mov and and mov movsb mov mov sub mov sbb mov mov and mov sbb and sub mov sbb and mov movsb sbb sub xor cmp sbb mov sub mov and cmpsb cmp sub cmp sub movsb mov mov sbb cltd mov sub sbb mov xor sbb sub cmp es xchg cwtl sub mov cltd mov lcall add (bad) mov xor mov cwtl lods sbb cwtl sub cmp cmpsb and and and xchg mov mov sub sub pushf sbb sub mov sub mov sbb mov mov mov sub cmp sub sub xor cwtl sub mov mov mov lods sub xchg cmpsl sub mov cmp cwtl cwtl cwtl and sbb xor mov lods xor lcall sbb sbb and and mov sub fwait es mov and pop int3 loope (bad) mov adc fnstenv fucomp inc cmp xor inc fdivrl push inc and jp mov (bad) mov jns sarl adc mov dec pop mov fwait aam push push pop adc movsl sub mov sub mov mov xchg movsb xchg je xchg xchg lds lcall jp popa xchg dec xor int3 loope (bad) movsb loope int mov mov pop inc cmp subl inc dec iret mov es and test mov xchg and mov xor lret mov sbb (bad) jns xchg push push push xchg sbb bound and adc fs adc data16 xchg inc es (bad) xchg mull cmpsb cmp mov dec inc push popa inc inc xor dec mov pushf les and test xchg inc lods mov mov mov enter (bad) mov (bad) insb xchg scas mov mov cmp insb ss dec dec addr16 xchg mov sbb mov fsubs imul popa mov adc push mov loop cmpsb movsl cltd push xchg xchg aad sbb fimull pop sbb pop adc push adc test fsubs xchg adc and test push pushf inc es jns adc dec into push test mov sub and repnz sbb xchg xchg and sub call test cltd and mov inc out inc inc dec xor xor push mov outsb stc adc push xchg mov inc adc jb cmpsb gs aad and inc cltd cltd or or movsl add mov add and mov mov mov push rol and mov and or add fmul jmp sub insl ljmp xor mov popf test cmp cwtl adc stos sub jecxz inc push mov in fsubrp nop fisubrl mov test scas test and stos adc sbb mov movsb cmp mov cmpsb cmp mov movsb lcall and sub jae and dec rcll fcompl dec mov xchg adc mov mov sbb adc (bad) rclb outsb out mov xchg adc sbb (bad) dec es sub or test mov mov inc outsb out es scas inc lret js aam and or fdivrl cmp lods (bad) cs jl mov cmovne imul push mov xchg sahf pop add hlt inc inc cmpsl mov push fs fs dec xor xor dec push insl das xor xor or es jae insl inc outsl xor jnp rcll nop dec lcall jae and mov sub cwtl mov mov and dec sub imul (bad) decl lods sbb enter dec cld mov test xchg mov fcoml and pop adc nop fisub nop (bad) push and xchg sub sub push inc and in sahf and xchg dec addr16 push dec jb ja jae mov out int3 into mov lret fs push adc test loop gs push xor sub int3 (bad) rcl nop xchg movsb pushf adc dec push mov cltd repnz sbb mov stos cmp mov shll dec sarb push and mov rclb mov adc subl mov push or sbb or (bad) mov or mov or or or mov pop stos xchg mov or or arpl inc ret jnp xchg mov sub or sbb sub xchg cmp or and sub or sarl ret xchg mov lcall (bad) mov rcrl mov xor bound mov dec rcrl and stos dec sbbl arpl and xor or and inc roll bound stos cmp mov shll dec sarb push and mov rclb mov adc subl or imul cmp or (bad) or or or rcll cmp jns xor orl (bad) sbb inc adc mov or dec adc lret stos adc cmp jae mov mov arpl mov ret sbb or or bound dec sbbl (bad) dec (bad) mov mov mov fwait cmp cltd lcall dec mov jno jb jno (bad) ret cmp cltd fwait cmp mov rorb or mov xor rcll mov or push popa andl xchg adc jae arpl or cmp sub ret or rcrb xchg fwait or jp mov xchg mov cmp sub or sbb sbb push and adc ret xor and adc rorb mov dec (bad) adc xchg mov mov pop lcall rorb rorl cltd ret (bad) jb pop cmp xor popa jns mov lcall dec or mov bound mov push mov cmpl test sub or or or lcall test cmp and cmpl sub or mov bound pop dec inc mov jns stos jb lret fwait sarl xor mov stos sbb pop or lret or or sarl pop stos xchg or pop xchg mov or or xchg ret sbb xor jae xor jae sub bound cmp adcl adc orl (bad) sbb mov adc sub or sbb dec mov stos dec stos ret mov cmp xor mov (bad) or jb cmp lcall dec (bad) or or bound mov mov inc mov xor jnp xor fwait lret or mov sub and jno rcrl dec ret sub or rorb sub mov lret inc mov pop xor sub and and roll jns imul bound xorl xor adc dec push bound inc sbb pop mov sbb dec ret mov sub cmp sub mov cmp adc mov mov or dec pop xchg dec sbbl bound cmpl mov (bad) ret and jae dec ret mov mov cltd fwait sbb inc mov mov dec or cmp mov or imul sbb sbb mov and or pop (bad) ret ret dec ret dec jae xor arpl orl (bad) sbb xor xor sub or sbb (bad) ret pop xor sub shll cmp cmp (bad) cmpl xor and or ret sbb lret sub sub jb push fwait mov rorl orl stos dec ret xchg mov lcall rorl ret pop adc sub and sub and ret jb popa ret sbb test mov jns adc sbb ret dec ret ret xor xchg lcall mov bound adc push stos lret lret inc mov cmp push mov adc sub or sbb dec stos ret mov cmp fwait mov imul pop jb dec ret mov inc xchg push inc dec dec or or and mov mov inc mov xor jnp xor fwait lret or mov sub and jno rcrl dec ret or or rorb sub mov lret inc mov pop xor sub and and or dec xchg rcrl mov inc xor bound add sbb mov roll or dec pop stos dec sbbl sub lret dec lcall jns mov cmp adc mov sub lret mov lcall stos cmp push jns pop or mov sbb pop or and mov inc xor xchg lret or mov bound sbb jb mov sarl pop dec xor ret stos mov pop or or dec adc lret stos adc cmp jae mov jns arpl mov ret sbb or or bound dec mov and dec fwait rorl mov jno dec mov sbbl arpl and imul ret cmp cltd fwait cmp mov shlb or mov xor rcll mov or push popa andl xchg adc jae arpl or cmp sub cmp xchg mov stos mov lcall and sbb or mov (bad) or fwait mov cmp or cmp adc orl (bad) sbb inc adc mov or dec adc lret stos adc cmp jae mov jns arpl mov ret sbb or or bound dec mov and dec fwait rorl mov jo (bad) lods sub xor movsl pushf sbb cwtl and movsb mov and fwait cmp and sbb pushf mov mov and mov fwait movsb xor test das dec xchg daa or dec es (bad) or mov mov jnp xchg mov sub mov mov cmp xchg cmp or and sub loope push aam xchg sbb push mov hlt bound enter (bad) fmul enter sahf xchg jo xchg test cmpsb cwtl bnd data16 sahf cwtl enter push jb fs inc adc movsb out addl addr16 je and mov (bad) cli inc mov fwait and pop sbb rclb push adc push push fistl dec das push inc or test sbb sbb aam fimull adc les push and push and jae and mov popa xchg sbb push sbb or insl mov push lret insb in outsl sub or lret dec les movsl bound call fcompl mov into data16 nop hlt mov (bad) out fiaddl mov in aam mov lcall in mov xlat push sub push outsb outsb jo cmp popa push xor shrb leave dec fldcw dec test and (bad) cwtl mov bound xchg (bad) movsb xchg inc arpl mov mov clc lcall xchg adc pop (bad) lret ficomp mov push rorl rcl fcmovnbe fucompp or dec dec iret sub jns dec ja je addr16 push xor pop mov imul mov fcom dec mov mov cmpl mov bound bound pop dec inc mov jns stos jb fwait sarl xor cmp sarl das jmp in test or or xor jae sub sbb inc push push arpl lcall mov xchg adc push je xor push test and lret mov mov inc mov xor jnp xor enter ljmp sub mov sbb lret or mov sub inc or out mov test sbb xor push lea fnop lcall adc and movsl loope cmp dec inc addr16 cmp ja dec adc es dec adc orl and xchg bound adc and fstps and xchg and inc and xor sbb sbb shl xor popa push test sub inc insb loop pop cld dec or outsl push dec adc les (bad) out iret adc mov push push sbb mov cmpsl les xor (bad) inc and es adc jo adc pop inc and jns adc sbb rclb mov push daa xor test adc (bad) and movsb cmp es (bad) clc popf sbb dec test mov mov dec dec jg xor inc push sub push aaa adc icebp sbb in inc xchg adc imul mov jp sub or les add dec mov push pop xor and xchg lret or loope mov add (bad) call sarl mov or fs jp loop dec adc (bad) fsubs movsl dec (bad) push test add sahf adc cmp mov xor icebp ss sbb sub cmp es xchg cwtl sub mov cltd mov lcall xor mov mov mov cmp mov mov lods mov xor cmp sub xor mov mov test mov movsb mov xor and fwait sub mov cmp mov mov xchg xchg pushf xchg mov and and sbb sub xor cmp mov lcall mov mov lcall sub cmp movsl stos sub pushf pushf mov sub mov mov cmp movsb mov cmpsb sub mov movsl xor mov mov sbb test xor lods mov and mov sub daa cmpsl pushf mov mov sbb mov stos sbb mov and cmp mov and test sub sbb daa cmp xor sbb mov cmpsb sbb cmpsl cmp mov mov and sbb cwtl sbb xor xor cmp mov sbb sbb sub cmp es sbb pop mov cmp stos sub cmp mov and cmp mov pop movsb mov and xor stos movsb mov sub sub mov movsl xor sub sub test movsl sub and stos sub mov mov mov cltd sbb mov mov and mov test stos sub and sub and test and mov sub movsl and sbb mov mov mov ss cwtl movsb mov movsb xor sub sbb xor cmp and stos cmp test xchg mov cltd test sub test mov and daa fwait sbb and sub mov fwait sbb mov mov movsl sub sub mov xchg test sbb lcall xor ss and mov and cmp cmp movsb pushf es mov mov cmp and sbb and stos adc test mov mov mov mov cmpsb sbb sub xchg test test ss xchg xchg xchg xchg cmpsb sub test movsl cmp mov movsl daa mov test and cmp xchg xchg xchg lcall mov lods sub daa lods sbb mov cltd sbb lods movsl xchg cwtl sub mov xchg pushf mov test cmp xor movsl cmpsb sub test movsl cmp mov movsl daa mov test and sbb cltd test cwtl xor mov pop xchg xchg xchg mov cltd sbb movsb mov mov and mov cmp movsl mov cltd stos sbb cmp pushf daa lods pop stos xor cmpsb pop cwtl sub mov xor movsl mov cltd cltd mov sbb sbb sbb cmp mov cmp xchg fwait xchg xchg lcall cmp movsb mov movsb xor cmp xchg xchg mov test movsl cltd test test movsb test mov xor xchg xchg cltd aaa movsb fwait sub xchg mov mov mov sbb and xchg xchg pushf mov xchg mov sub mov cltd stos sbb movsb xor mov mov xor cwtl sbb xchg mov xor sbb mov mov cltd cmp movsb sub xor mov mov sub xor xor mov xor sbb movsb mov sbb xchg lcall xor movsl sub sub mov mov mov mov xchg mov mov mov xchg fwait sbb mov sub ss movsb mov xchg xchg pushf and cmpsb cmpsb mov mov mov lods mov test cmp xor test and sub and xor test test xor xchg xchg lcall xor and sub pushf cmpsl cmp sbb cmp mov mov mov sub fwait and cmpsb sub test mov movsb sbb pushf pushf mov sub and mov mov sub test and xor mov mov cmpsb cmpsb sub sub xchg mov mov stos mov xor mov mov xor sub stos and sub mov lcall sub lods aaa mov cmp sub and mov xor sbb cmpsb pushf movsl cmpsb sub mov mov mov mov and and mov cmpsl and mov mov mov xchg cmpsl cmpsl xor xor cmp lods pop stos xor cmpsl sub xor sub lcall movsb mov sbb and mov mov sbb cmp mov lods movsb mov cmpsb pop xchg mov mov test lods sub sub sbb mov mov mov and lods and cltd pop mov pushf sbb xor mov mov cmp lods fwait mov pushf and sub stos cmp sub sub sub sbb sub xchg xchg xchg xchg mov stos stos daa lods sub mov and mov aaa mov cmp test mov mov mov movsb xchg xchg xchg xchg mov stos lods daa lods mov cmpsb cltd stos cmpsl mov sub mov sub mov sub fwait xor movsl xor xor mov mov sub pushf and sbb sbb cmp mov cmp mov aaa movsb mov mov cwtl adc cmp es xchg cwtl sub mov cltd mov lcall xor mov mov aaa mov mov mov lods mov xor cmp sub xor xchg mov test mov movsb mov push adc nop dec xchg cltd rclb push adc ficomp pop rcl xchg cltd xchg or lret into dec fimull (bad) xchg xchg pop nop dec adc or rorb out pushf into nop (bad) mov mov jae and les push dec push pop arpl cmp push gs dec dec xor ret push sarl jbe mov and es es insb imul pop xor dec pop cmp inc ja pop inc push xor imul inc dec jae xor xor or xchg sub lods lods outsl dec call sub dec or mov sub dec out test mov inc xchg lret lcall mov stos mov je sub or dec jb outsl and stos ss inc xchg push and inc mull cmpsl jae (bad) cmc gs xor sbb mov and sub and movsb mov sub stos movsb movsl sub sub movsl sub movsl xor sub les push adc mov (bad) pop popf (bad) lret ficomp dec xor dec cmp dec imul mov lret sub daa add dec push inc test test and mov sub and sbb mov mov pop mov and adc fcomps xchg xchg fstpl mov shr inc xchg daa je repnz mov adc pop pop mov lcall and nop pop loop inc mov fmul sub cmp xchg push dec inc (bad) scas test dec mov push dec mov dec imul int push adc pushf sahf popf fcompl adc push (bad) mov push mov (bad) lock fs push xchg stos push fwait imul movsb inc push insb in dec inc pop adc xor movsb pop movsb sbb cmp int3 call mov cmp pushf daa lods sbb cwtl enter xor sub rcrl int mov mov sub xor mov jl sub push or lods cmpsb into in inc jmp imul inc cmp jp and iret cld inc insl bound xchg rcll sub adc xor outsl adc dec mov das ja dec test pop ficom mov jb test push mov dec jmp adc dec add push sub cwtl sbb xchg mov mov sbb dec inc ljmp sub or call test add adc movsb les jne (bad) sbb cwtl xchg push inc (bad) leave dec xor insb insb dec adc push adc fldenv mov lods sub ss movsb mov enter enter adc inc adcl or dec imul push or data16 popf adc out and cwtl mov mov fs inc or mov test dec push cwtl push mov int3 xchg pusha stos (bad) mov adc imul cmpsb mov arpl inc mov mov int3 mov test in xchg or and test and and adc jl dec test or adc mov push addr16 in adc dec inc or leave stos or mov fsub ret inc adc xchg sub lcall push out sub dec dec (bad) out cmp ja cld lea ljmp xchg add iret mov and sbb test xchg xor xchg mov hlt fadd popf adc addr16 and data16 lods and les mov and jno lods or cmpsb push (bad) test xor ret adc ss mov mov push inc adc test jl or inc addr16 cmp add dec dec inc dec aaa cmp inc dec das inc jp and loop cmp jae cltd push add xchg je arpl and sbb and es dec sub and popaw inc jns xor cltd mov rorl stc xchg push push adc inc pusha mov ss and inc xor xchg and leave pop and pop ret push add out icebp sbb rclb pop mov dec adc (bad) jno sbb or sub les or test push xor cmpsb sub sub dec dec and sub and stos mov cmc xchg ss sub and les xchg in and and cmp xchg cltd fnstcw insb hlt call xor and inc imul arpl jb push inc pop outsl pop xor inc xor inc inc insb inc inc inc inc addr16 push inc addr16 cmp xor inc dec insb inc jp dec cmp inc push push das sub ja je xor xor imul addr16 ss dec push pop push inc inc inc inc inc ss jp jb das data16 inc jne inc inc inc dec inc jp arpl inc dec inc inc inc inc jb cmp inc inc inc inc inc inc jp push push inc dec cmp cmp cmp je push popa dec inc xor push ja dec push pop push dec fs dec push ja bound xor pop jp dec pop jne je data16 das jns dec dec push push inc xor xor jns dec inc inc inc push push push push inc inc insb inc inc inc imul inc pop insb inc inc inc dec dec push inc inc inc jne push push inc pop insb push inc inc push push inc inc inc jns push push inc dec das xor aaa dec push jae dec inc outsl push imul cmp push data16 je push push inc aaa fs inc dec imul inc inc dec cmp imul push addr16 dec das push imul outsl inc inc pop imul push jp jp jp fs xor dec jp jp push fs jp jae js push dec inc push inc inc inc dec push inc js dec inc dec gs js dec inc dec dec je inc dec je inc inc popa inc xor xor pop push push inc inc inc das ja inc js inc inc inc inc push inc pop push dec outsl inc popa dec inc ja push ja aaa dec dec inc xor dec push dec push ja inc dec dec pop inc inc push inc jp inc inc jo ja inc inc inc pop aaa xor inc insb ja inc inc dec je inc inc push inc push inc popa dec inc aaa addr16 inc inc inc inc dec cmp inc outsl dec cmp inc xor inc inc inc inc inc push dec push push popa inc ja push addr16 jb jp inc push inc inc push push inc inc outsl inc jb sub jp push pop push push outsl dec push push imul inc inc fs ja push push push push inc inc dec inc ss aaa jns push imul xor inc js inc dec xor outsl push push dec imul cmp push dec pop inc inc ja jb xor inc inc dec inc push dec inc popa push inc imul sub jns ja push bound dec inc inc push inc ss jae inc inc inc push je jno xor dec inc inc xor dec jbe ja addr16 ja jae push push inc popa cmp push push dec inc dec xor aaa dec dec xor inc sub ja push dec pop outsl insb dec xor sub xor popa push dec inc sub cmp jne push bound imul insl imul pop inc xor arpl inc inc push aaa addr16 xor sub cmp jne push pop imul ja inc inc dec dec inc insl inc push dec jns dec aaa inc xor push pop ja inc inc inc jbe inc inc dec dec insl dec jbe imul inc inc inc inc insl dec push push ja pop xor popa push dec push arpl das xor inc imul dec push bound push inc dec push push dec push addr16 je addr16 imul jno das xor inc inc dec dec imul insb push jno je imul dec inc inc push je sub xor inc inc inc pop aaa xor inc jo dec inc inc inc pop aaa jp sub dec inc inc dec aaa cmp inc inc pop push sub push inc addr16 inc jbe cmp inc inc inc insl dec das xor xor pop outsl imul addr16 inc inc inc inc jp insl pop aaa xor push das fs ss das das das xor xor insb xor pop pop addr16 jae ja popa dec push gs jb inc inc inc inc pop aaa jp push push push das fs inc push das das das xor xor insb ja dec push inc dec push inc xor xor xor cmp inc ja push inc inc inc inc dec push popa jns push arpl jns insb push jae pop push data16 push dec push inc xor cmp imul push imul arpl xor inc aaa arpl xor inc ss dec xor inc dec xor push inc arpl aaa ja dec dec js push imul inc inc dec dec cmp inc dec push jbe xor bound inc outsl dec inc imul bound inc das xor ja xor ja dec sub imul pop inc das xor das xor inc xor inc inc dec sub arpl ja inc inc pop outsl pop das pushw xor addr16 inc inc inc inc fs xor push dec push inc push pop inc dec xor inc ja imul inc dec push push dec push pushw ss jbe arpl das ja inc imul das data16 push pop dec dec das das cmp inc popa inc das xor cmp xor xor push xor imul pop push inc das xor imul pop xor pop xor push xor gs data16 dec cmp dec cmp imul jo imul ja fs xor inc push popa inc dec and and sub lods aaa lods sbb sbb and mov movsb xor sbb mov mov cmp and pushf xchg xchg xchg cmpsb sub mov mov mov lods and fwait cmp movsb sub sahf or mov popf (bad) ljmp fs insb inc dec inc and xchg and dec test cmp sub pushf movsb mov mov mov movsl and adc lds imul pop (bad) movsb ror popa jmp popf rcr cwtl fdivrl inc or lods sarl sarl add inc or aad or mov movsl sub or pop mov mov and mov sbb mov fwait and jp pop xchg dec adc dec stos sub lea and and daa sbb mov stos mov sub rcrl push mov pop xchg jno cmpsb rcrb xchg pop xchg sbb enter mov mov (bad) lcall dec dec mov sbb or xorl inc xor addl or xor pop xor mov out jb mov (bad) pusha mov les lcall je inc add jae mov mov inc dec dec es test xrelease mov lret fsts stos mov dec jmp jp stos xor leave mov mov mov lcall push mov push inc push add inc ja test cmc gs xchg inc and icebp cmp mov adc mov cmp or movsb inc xor cltd popa leave sbb popf pop push dec inc popa push inc imul sub jns ja push bound push adc xchg (bad) and xchg mov dec enter push jae push push inc popa cmp push push dec inc dec xor aaa dec dec xor pop fwait mov roll mov test pushf lods mov in aad dec mov lret push sub xor xor xor arpl and mov dec and int3 rorb daa and mov and mov cmp mov mov dec inc insl dec push push ja pop and fisttpl int3 or les test rclb mov insl daa sub gs and hlt xchg inc arpl add adc scas mov pushf dec push clc sahf cltd (bad) fmul inc adc jae dec lds push xchg fxch loopne nop sahf pop push mov icebp sub cltd popa pushf fsts rcrl mov mov pop mov inc and movsb or je sub mov dec enter mov test ljmp dec es sub ret lods (bad) daa xchg cltd push adc fwait and les mov dec imul jo insb pop xchg and push mov sbb mov (bad) loopne and xor out inc bound inc mov sub jae lcall xor lret add jl mov dec dec fmul insb enter pop lcall xor loop xor cwtl loope mov inc xchg test cmp xor sub sbb lods cmp pop rolb (bad) pop xor int3 pusha lret jo and or daa xor test fcoms jne repnz cmpsb adc pop mov xchg sbb and sbb mov repnz pop push outsb and popa xor cmpsb sub sub sbb adc cld test push sub dec and and pop mov or adc out mov dec insb movsb xchg popf xchg les dec out sub or cmpsb xor sub aaa mov movsb pushf mov ficom xchg mov mov sbb sbb mov inc jb lea or out xchg and daa mov cld dec sub adc cwtl int fstps mov sub push fs call jp and sub lahf mov aam inc cmp mov das xor (bad) out push popa hlt cmpsl push xchg test inc dec sbb nop bound outsl adc mov cmp mov mov arpl cmp cld dec into cwtl xchg or rorb jle mov sbb rcll jb adc and test test xchg push adc mov enter lahf xor adcl nop loope imul (bad) and adc xchg cwtl nop mov mov cltd push adc adc scas out and mov fnstcw and dec inc inc push arpl fcompl push fsubrl adc push sbb mov aad mov out scas (bad) shrb test shrb nop rolb xchg nop test push out mov call (bad) loopne ret lret movsb int3 cmpsb xchg movsb lret movsb int3 rclb mov loop lock mov stos out xchg pushf fsubrs test (bad) xchg (bad) mov push xchg movsb into test bound pusha shlb stos mov (bad) xchg mov mov jo lcall push (bad) mov fnop pusha xchg mov (bad) mov xchg xchg mov into stos (bad) insb mov push pop push mov lods push (bad) fisubr lcall pop aam (bad) (bad) mov mov mov (bad) into (bad) (bad) (bad) xchg mov cmpsb cwtl test test mov mov out in mov pusha mov out lret (bad) jo cwtl out int3 jb in xchg fmul push fmuls int3 mov lcall pop (bad) (bad) (bad) (bad) int3 rcl cwtl movsb lret mov cmpsb cwtl test test (bad) lret push out in mov pusha mov out lret pusha lret out stos insb xchg mov cmpsb xchg movsb lret jb pop mov stos movb data16 shrb (bad) mov (bad) (bad) xchg movsb lret enter int3 (bad) cmpsb fsub ret mov xchg mov mov (bad) (bad) cwtl repnz lods insb xchg in out out lret (bad) jb cwtl (bad) fsubrp test test xchg out lret aam out cmpsb shlb mov lret xchg cwtl movsb lret jb pusha jo aam push push fcompl test fcoml test out lcall xchg mov enter shlb xchg aam mov jo jb repnz mov lret (bad) jo cwtl repnz mov xchg call pushf insb lcall into lcall insb test jo into cwtl mov xchg pushf jb (bad) xchg lret mov cwtl pop pop pop pop rcl mov xchg fsubrp pushf out sahf call push mov test (bad) pop xchg cwtl movsb mov outsb mov test test mov repnz into sahf out mov cwtl rorb test repnz test lock mov mov pop call (bad) sahf (bad) sahf hlt test stos out fs shlb (bad) sahf jb hlt hlt test cmpsb mov (bad) mov (bad) (bad) test sahf lods scas into lock (bad) mov in outsb xchg into sahf xchg pushf into lcall lock mov lock (bad) mov pop pop pop lcall pusha (bad) stos mov shlb push les into jo xchg jb lcall test pusha (bad) push int3 mov nop mov xchg jo insb (bad) (bad) lcall in (bad) (bad) into (bad) (bad) enter push mov test aam sahf enter repnz lcall pusha (bad) xchg stos pushf (bad) (bad) mov cwtl into lret (bad) (bad) lcall mov test into in mov cwtl out fsubrs out out (bad) (bad) test pusha (bad) mov mov mov into (bad) (bad) (bad) (bad) mov (bad) into (bad) (bad) jb xchg xchg enter out pop les mov mov xchg pusha test (bad) (bad) jb xchg test (bad) stos pushf (bad) test (bad) (bad) mov xchg (bad) (bad) (bad) into (bad) enter lock (bad) mov fsubl pusha mov in cwtl enter hlt fsubrl into (bad) (bad) mov mov (bad) (bad) insb out stos pushf (bad) xchg (bad) (bad) (bad) (bad) mov fsubr test (bad) (bad) (bad) (bad) mov ficom (bad) (bad) fsubl bound (bad) (bad) (bad) out push lcall lcall outsb xchg mov scas lods push mov int3 lock bound lcall pusha (bad) fisub test ficom enter repnz test out lock push les into jo test lcall into (bad) (bad) xchg ljmp (bad) (bad) (bad) xchg jo pop (bad) (bad) lcall mov test hlt pusha (bad) xchg into outsb lock in ficom (bad) (bad) sahf out into (bad) fiadd xchg jo pusha mov xchg (bad) (bad) nop stos sahf into (bad) fiadd insb out ret into (bad) (bad) (bad) into (bad) mov (bad) test mov (bad) fiadd shlb lcall int3 pushaw xchg cwtl out mov mov push (bad) (bad) (bad) jb fiadd push dec and sbb test mov and movsb mov daa sbb mov and mov movsl sub mov movsl or mov sub push es push (bad) dec call in scas jmp sub dec xor mov movsl sub mov mov sub stos xor lods mov cltd pushf cmp pushf and mov movsl lcall ret pusha xchg mov (bad) mov xchg xchg mov stos (bad) insb mov push pop push mov lods push (bad) fisubr xchg (bad) mulb add cmpsb les ss addr16 je mov test test mov mov gs inc xchg jbe mov adc out xchg movb add xchg xchg push xlat data16 jbe and sbb (bad) lret push out rclb rcrl and arpl push xor movsl data16 push xchg arpl lcall xchg pushf cmpsb pushf enter int3 (bad) cmpsb fsub ret mov dec arpl mov inc adc xchg testl jecxz adc movsl inc adc xor mov xchg sbb add sbb mov (bad) lret lret ret jb xor jns fst pop mov rorb adc fsts push nop mov out xchg scas jo jb repnz sbbl pusha mov xchg rcll or rcll fimull nop test adc mov bound lcall movsl lods inc mov inc adc adc rcll xchg inc mov xor dec gs jmp push int out jmp sub out push xchg cmp test and cmpsl sub cmpsb sub cmp sub sub sub xchg mov mov mov arpl inc dec int lods call sub aad fisttpll and jb mov dec insl push sbb mov test and xor and mov int or call sbb mov inc dec call push adc aad test sahf test (bad) test xor jge in push push adc xor mov inc les cmp or fstl xor inc push (bad) out cmc adc xchg int daa sub enter xchg enter popa loop inc incb test mov jge jmp loopne ret (bad) call pop or dec popa mov or inc mov sub xor out push in lcall popa mov xor stos mov xor ret push gs mov mov cmp stos sbb mov hlt sub sub push test dec sbb sub jp addr16 xor nop xchg adc cmp clc xchg or loop jo mov adc adc adc ja and and imul mov push xchg mov adc test icebp and jl push push and clc sahf dec and xor enter jae pop xor cmp roll (bad) and aas repnz and xor mov dec imul cwtl and adc popf aam fwait or int3 mov rcrb dec in cs inc inc push adc pop pop mov clc xchg adc test nop xchg cld dec or (bad) and cld dec or push mov mov lret mov loop jae sub mov cwtl xor sub push and sbb or test xchg jns aam fnsave pop mov push adc adc and jne adc xchg les jno cwtl jle jecxz movsb dec stc adc incb xchg add leave or (bad) push jo dec push push call adcl pop je cmp inc adcl das mov rol push push adc adc das mov and (bad) in sub (bad) jmp lods movsb xchg repz sbb cmpsb mov fiadd movb sbb aam xor jg insb xor bound xchg les and push test int3 call sbb or or int3 roll mov or inc adc or and or fmul int adc or xchg sbb add add adc movsl push popf and pushf leave pusha roll loope xor int fldenv fstp inc fstl adc popf fsts movsl push int3 shll shll add sbb sub mov aad or xchg sbb add popf add sub dec cmp shl or aad popa xor or dec add inc sub inc gs adc inc in adc in or add dec sub popf inc mov mov mov or lds or jmp add loope and adc xor fstps xchg adc adc lods int lea int and loope add xchg push or xor inc mov xor fsts xchg rcrl fldenv fsubrs in lods movsl push popf adc in lea xchg cmp mov ror pusha (bad) aad movsl push popf sub test cmp mov loope aad dec dec imul imul dec adc or movsl push pusha loope fcom pop or shll fisttpll sbb add add adc adc xor or fldenv loope add inc movsb mov or inc fdivrl and loope leave mov and sbb mov rol flds lods shll cmp mov lods inc fisttpll test adc adc or or fstps int popf lea add push in mov or or fstps shll lds rorl or fstps fisttpll popf adc mov frstor add popa aam mov or or fstps inc push inc popf adc push frstor add pop enter lods mov add lds mov xor and fsts in mov or cmp in mov shll mov leave test mov shll mov sub pushf mov (bad) xor xor flds in mov jmp mov sbb dec loopne mov jmp mov sbb sub mov xchg push ror fdivrl adc or mov inc test mov mov lods mov adc aam mov inc movsl adc popf push ror fdivrl and mov and mov push inc popf adc mov call lds cmp mov and fldenv xchg mov or add inc mov (bad) popa gs mov or add inc mov (bad) pop inc xchg mov or add inc mov lods push cmp mov (bad) mov and mov fsts xchg mov or add inc mov rcll mov fdivrs leave cmp mov pop inc popf adc sbb call (bad) sarl mov inc flds xchg mov or add mov pop fstl movsl fstl rol (bad) lds mov pop inc popf adc rorl rcrl frstor lods adc add inc fdivrl mov loope cmp loopne mov sbb test mov xchg test mov xchg xchg test mov sbb aam mov xchg push (bad) mov int3 mov sbb mov mov or mov movsb int int3 fldenv nop mov cltd adc mov or lods aam mov inc flds mov mov test mov push dec int3 mov jmp lods mov and pop loopne inc mov nop mov or aad mov pop push pop ret dec add pushf int3 roll mov or inc adc or and or fmul int adc or xchg sbb sbb xor sub or dec or shll push ret lcall mov lret lcall xor rorl (bad) dec dec xchg sbb or jb and and cmp xor int3 call or sub dec (bad) push test or insl daa sub push jns adc push push xchg adc xchg push push push mov push add addl pop jns ret rcll inc stos mov or dec mov sarl jnp popa ret sbb sub dec daa gs test adc lods or xor sub cmpsb and cmpsb and cmp push cmpsb and sbb cmp mov in lods addr16 sbb xchg fwait dec data16 bound mov fmull xchg int3 outsb pop lcall mov out test in mov xchg mov mov xchg mov mov xchg cmp push or mov pushf movsb sub dec inc inc ja je ss dec insb loop push les movsb sbb cmp sub mov jecxz adc and (bad) in mov je inc add and push inc adc repz inc sub rcl push sbb insb test fstl sub call push lods cmp mov xchg xchg fwait mov mov sub pushf (bad) in adc mov sbb rol mov arpl xchg adc and inc pushf mov xor es gs jae adc mov xchg and fcompl or mov aam and leave pop enter mov push adc cmpsl add sub push cmp adc jno push ror enter jno inc mov dec in mov pushf dec insb (bad) ljmp ret cmp (bad) cmp jnp jle adc mov dec stos popf and popf xchg inc movsb and loop ja lret sub test cmp sub adc int stos in push loop das nop (bad) (bad) and ret pop bound mov sbb daa mov enter lods adc mov cmp or outsl les clc xchg (bad) arpl out xchg mov (bad) in pop daa inc imul (bad) aam dec dec in or inc in or sarl mov test and or push orl fisttp sub insb das (bad) nop enter mov fcoml and sub leave adc or pop xchg enter (bad) clc pushf fnstcw stos stos in gs out lahf adc loop fs shll fisubl mov mov mov popa ss push xchg popf mov push sbb inc data16 xchg push xchg adc mov jbe sbb loop inc and stos mov or jae mov or (bad) pop dec or xchg pop loop inc clc xchg adc mov mov and int les cld dec lea push fmull sbb iret adc adc push enter mov sbb xor aad loop addr16 es mov dec or dec icebp xor cld dec mov adc and push xor les and dec dec or (bad) sub out inc mov sbb fs fs aad inc xchg (bad) loop cltd adc and adc clc cltd fdivs mov aam enter inc es adc inc xchg xchg int (bad) aam sbb mov and xchg inc push mul dec dec sub cmp bound enter pop adc daa jae dec mov ss push cmp mov xchg sub inc pop sub fmul mov inc push push push cmp inc (bad) xchg stos cmp lcall mov in pop inc cmp xchg jg xchg movsl clc nop push icebp sbb inc (bad) xchg xchg pop shrb and mov gs iret adc ss xor es test xor js pop cmp (bad) and cmp adc mov adc sub fisttpl loop js nop stos adc dec rcrl in dec push das adc les call inc pop inc (bad) jno xor int loop xor and enter mov sbb xor icebp sub js adc sbb dec push sbb cltd mov mov and cmp mov and push cmp fdivrl or sbb mov mov inc movsl adc test test mov cmp mov and gs fs or or rcr mov xor imul lds cmp mov cltd inc popf adc pusha fisttpll (bad) fnstcw mov int3 fsts lds int int3 fsts fs xchg test lods mov or or rcr mov lods (bad) mov xchg test lods mov xchg test mov aad popf add (bad) popf mov flds enter xor mov in aad test mov and xchg in mov xchg jmp mov cltd inc int3 mov adc add shr pusha mov mov and pusha mov or mov rcrl movsl mov rorl cwtl mov and test pop sub mov sbb mov lods frstor mov push and pusha mov or mov rcrl or rcll movsl add fstps les or sbb mov pop frstor mov push and pusha mov or mov rcrl or roll mov and dec lods les xchg or sbb movsl inc popf adc sbb pusha mov mov xor call aad add rorl pusha mov sub in dec aad jmp roll aad add rcr push mov sbb inc lods fldl adc mov call and sbb add in or cmp fdivrl movsb lods in aad movsl or sub cmp or xor inc inc or add cwtl fdivrl popa lea pop movsb lods in aad movsl or or or push (bad) popa fcomp mov or or roll sub add fucom roll sbb adc mov and fdivrs pop xchg fadd test add mov xchg loope inc adc lds xor and and and test push or mov mov or xchg adc rcll add adc adc dec or add adc add sbb lods xor cmp mov mov lea pop movsb lods in aad movsl or or or push (bad) popa cwtl fdivrl insl arpl xchg fcom int push mov push fisttpl sbb adc push push push ficompl xchg or adc rcll or into adc sbb push push sbb mov int or adc push push aam shlb gs jne adc fsubrs push stos stos push cwtl mov ljmp xorl or ret xchg fs push mov (bad) hlt dec or fs dec inc les adc xchg and jle cmpsl add sub shrb jae jbe xchg push xchg adc push and enter pop adc xchg scas sub cmpsl add (bad) hlt popa xchg xor sbbl push nop pop call bnd jbe add xor test bound aaa xor inc call xchg sub sub push dec inc inc and xor push icebp xor fisubr test ss enter rcll sub ss jne mov cs mov sbb push or inc mov and mov inc jne xchg mov dec fs adc mov fwait nop mov test leave cmpsb das push cmp push sub cwtl cmpsb ljmp loopne inc push and test (bad) shrb mov int lods mov call dec push inc ss fs jp adc adc sbb fldcw mov inc push push xchg and and adc in xchg mov cmp xor rcr mov fnstenv test test sbb xor mov mov nop movsb xchg (bad) (bad) lcall in ja add and xor mov pop push or mov sub push inc push mov rorl (bad) fmul xchg push dec aaa dec push imul dec jae inc inc inc inc inc popa dec push inc push dec adc loop jp and cmp mov or push push inc fs cld dec push mov aaa (bad) cld lea or mov mov fimull or dec cs push sbb cmp imul xor pushf lcall xchg xchg adc and popa mov sub inc (bad) out loop imul inc jns (bad) (bad) inc pushf (bad) stc push push push adc cmp push jbe dec js shr inc fs push arpl jb inc inc jbe jbe adc cmpsb enter push and xor enter shl inc xor mov adc pop adc push xor sub jle aaa lahf and xchg mov mov xchg sbb push fcompl (bad) hlt cmc inc and xor dec mov daa imul xchg movsl xchg fsts leave int3 mov xor inc adc cs mov and cld dec or dec dec ds push xor test int3 mov out xchg fadds push sbb inc arpl nop loope loope mov sub mov arpl push sbb cmp repnz lret and cmp ljmp shlb cmpsb xor out cltd adc dec fstps inc push mov jmp push push jbe xchg sub cmp cs repnz aaa mov (bad) leave popf (bad) xchg scas addr16 cmp inc push push sbb sbb fisttpll and imul sub inc movsb dec ljmp mov arpl adc dec or xchg in xchg shll push imul pop dec dec jg daa xchg xchg aam in dec imul sub mov adc pushf push mov or enter aaa movsl jno mov test out add sub push rcrl pop inc clc sahf adc dec daa loop imul adc cmp mov nop push bound icebp daa mov popf pop icebp cmp xchg or test and rcrl movsb clc nop cltd xor and xchg (bad) fsubp icebp sbb sahf (bad) inc (bad) cmpsb ja call loop jns adc (bad) xchg mov daa adc nop xchg mov (bad) mov dec dec out mov mov mov push imul push xchg adc cwtl xchg push and mov daa mov mov test inc cmc gs xor xchg xor stos aaa pop enter loope (bad) and (bad) (bad) jmp inc bound es and sub enter mov sub leave mov je xor ja rcrl sub sub stos jnp les and and inc into aad enter icebp adc icebp daa cmp dec ljmp (bad) aam icebp sub inc (bad) jae (bad) (bad) and fistp lea (bad) clc popf fstpt imul jns xor loop xor das sub push dec das das das pop outsl jbe pop arpl jbe push push dec addr16 das das xor jbe inc inc ss inc jo jbe pop pop jae push imul imul inc inc push push ja inc dec addr16 push jbe das push push imul dec push inc push dec jae xor inc dec inc inc inc inc push popa inc js push imul inc inc inc inc outsl push data16 das xor ja dec outsb das das cmp sub ja imul inc imul outsb imul inc aaa das das xor dec dec inc jp popa dec dec cmp inc outsl insb insl push das xor push inc push inc pop insl push dec inc push inc inc inc inc inc dec ja imul inc push jbe das cmp insb push push insl push aaa das das xor dec dec inc jp popa dec jne push push inc outsl pop xor das xor push inc push inc pop insl push dec inc push inc inc inc inc inc dec ja imul inc dec jbe das cmp insl imul addr16 das das xor dec dec inc jp popa dec dec cmp inc outsl dec inc push das xor push inc push inc pop insl push dec inc push inc inc inc inc inc dec ja push dec aaa dec push imul dec jae inc inc inc inc inc popa dec push inc push dec ss xor dec push inc push dec push dec fs dec inc jns imul xor inc inc inc push insb dec inc dec push inc push push pop inc inc inc inc dec popa inc dec inc inc inc inc inc inc inc ss xor das sub push das pop outsl jbe pop arpl pop ja das das sub jbe das ja cmp push inc inc dec insb jae inc inc ss dec jne das cmp xor inc push cmp dec fs inc dec push jge movsl pop xchg xchg cmpsb sbb mov and mov sub mov aaa cmpsb mov pop cltd xor mov and lods sub cmpsl sub xor sbb mov mov cmpsl mov sub sbb mov test mov cmpsb mov movsl and mov mov popf adc pop push into fsubl xchg push test jae xchg push xor mov mov sbb push or jnp push jns mov pop jns push mov push push and nop fsts pop fnclex insl push repnz gs shl mov dec dec (bad) es dec test cli jae mov pop pop dec inc lcall mov lods and das fs push insb dec xchg inc push imul cmp leave insb out sbb sbb pop int3 pop push fsubr cwtl in cwtl out pop jo xchg lcall and push cltd int3 adc rcrb xchg sbb shlb and mov xor sahf push inc jb daa popa sub in push pop mov sahf daa inc shrl xor outsb inc jne inc jns sbb es popa jns mov or test in jno pop mov and inc xor xor jb movsl sbb fmul into inc ljmp push (bad) fucompp out sub inc inc adc dec inc inc xor inc mov mov es jne imul enter stos and enter jmp and call mov dec fisub data16 call lea in dec sub cltd push loop dec (bad) (bad) daa and stos pop lret les fist stos jle xor clc popf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std sub popf add cmp or and jae mov mov and sbb mov and xchg pop mov adc cmp inc inc dec dec xor sbb mov sbb xchg sub mov push and inc (bad) scas adc push inc xchg inc arpl add test idivb xchg test pop enter xchg ja and xlat mov or test push adc inc push dec and mov xchg nop enter ljmp inc jne jns mov aam mov and and jno xor out in and cmp adc pop loop push icebp sub add test sub xor adc mov xchg xor hlt dec xchg dec dec (bad) mov inc je aaa pushf adc adc push cmp jo pop cwtl xchg shll dec cmp and jnp or push adc mov inc mov ss out jmp test cs dec dec xchg sbb jle xchg dec and cltd fadd mov sbb lahf adc inc mov cmpsl icebp adc inc inc je jno mov aaa js nop loop jb adc jno and les mov and adc mov mov bound popf les ds ja and cmp bound call sbb cld dec push addr16 (bad) daa jae and stos icebp sub jo adc loop inc mov loop aad sub and nop push fs inc dec inc adc dec out cmp or inc out repnz aas les dec das add xor inc mov and pop mov mov inc cld dec insl push and imulb (bad) ret clc nop sahf mov in pop dec inc xchg xor inc out addr16 clc pushf pop inc test adc adc das aas mov mov data16 aaa dec inc adc fs sub les adc lea lods mov dec inc push xor inc jb inc adc pushf dec xchg js mov mov dec push xchg or push jb inc adc push js int (bad) (bad) (bad) inc aaa daa add sbb or pop inc ja inc and sbb ljmp repz inc jno inc inc push dec xor xor xor cmpsl test gs bound mov pop ret lret cmp jp mov push inc mov or mov aad int aad sbb fstl sahf es and cltd sbb test and cmp sbb xor loope lea cmp dec cmp icebp and popf jmp sub jg cld dec dec pop adc (bad) incb je popa sub mov (bad) icebp and jg stos out clc xchg pop (bad) and mov (bad) nop lcall fwait cmp push jle inc adc sub dec inc popa push inc jae push inc or stc adc rcrb adc nop xchg loop addr16 dec dec cmp dec in inc adc sub inc adc mov push pop and and mov dec aas mov push and sub and adc lods add cmc clc nop xchg and (bad) (bad) out loop inc (bad) es (bad) (bad) push and mov dec push out int3 data16 dec ljmp mov sbb or in adc mov sub sub sub sub stos cmp xor pop sub sub push xor sti or or int3 mov (bad) adc sub insl icebp xor push inc cltd imul or or les push push test arpl cmpsb fsubrl rorb test mov les xchg lcall mov or int3 xchg lcall pushf xlat loop jp (bad) in les loop outsl in dec push insb stc adc rclb lcall adc imul inc xlat xchg mov jle adc cs dec cld enter dec stos pop cld dec dec aas mov (bad) (bad) (bad) and jbe adc das adc das jmp inc dec stc xchg cltd rcrb push cmp mov (bad) inc test pop addr16 and (bad) (bad) (bad) (bad) (bad) cld dec inc (bad) (bad) decl jmp dec addr16 inc ret push sub icebp xor icebp and jg test (bad) jmp and jle pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec dec js pop mov call adc inc lcall pop decl icebp and (bad) (bad) (bad) cld mov mov loop inc (bad) (bad) (bad) (bad) (bad) dec lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jb (bad) (bad) (bad) jmp gs (bad) and dec (bad) inc (bad) icebp (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and (bad) (bad) (bad) (bad) clc xchg aam (bad) (bad) (bad) clc nop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc adc adc (bad) xchg and xor inc inc jae pop movsl adc test mov popl test pop ret mov sub dec dec or sub xchg and in add inc push jp inc inc inc push and dec and pop fs dec xor adc ficom adc inc loope mov xor ret xchg pop xchg inc xchg (bad) inc adc inc shll dec jo fadds dec stos and dec push dec adc mov test inc adc mov icebp and sub push xor mov add inc adc push add add cs nop xchg in addr16 xor inc inc adc or fnop lcall push sbb cmpsb xor cmp rcll adc xor (bad) es sbb adc dec call repnz mov inc test nop shll dec cld dec push decl test les jg adc outsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec xchg (bad) (bad) (bad) (bad) inc (bad) mov or sub (bad) jmp cmp (bad) jmp inc inc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld mov sub (bad) (bad) (bad) cld dec call and or (bad) clc xchg sarb jmp xor or jmp inc push (bad) (bad) (bad) (bad) (bad) (bad) decl xor inc push pop jno push xor xor aad push cwtl push sbb pop pop dec pop pop sbb ficompl lcall cwtl dec popf pushf rcll ficomp int3 pop sbb dec sbb xchg or fisttpll aam pop sbb xchg push push pop xchg fimul xchg sahf pushf lret aam sbb adc int3 dec pop xchg mov or sbb aad or cltd pop pushf (bad) ror fisttpll rcrl push sbb cwtl mov aam lea frstor cmp mov inc push mov xor lods mov and xor lods imul outsb sub out mov mov dec enter iret dec out in dec or xchg sub dec dec mov (bad) in sub push dec dec out stos add ret sbb andl rcrl mov popa lret cmp mov mov rcll mov mov inc xor sbb and xor pop xor mov mov nop rclb repnz aam push mov fcoms mov loopne (bad) fdivl rcr insb cmpsb fsub loop fsubp ret in fs sahf pusha call cwtl fisubrl bnd in (bad) out (bad) cwtl mov lcall repnz lcall nop cmpsb pusha jb lods (bad) call in pushfw lretw mov push lret insb sahf fsub insb push hlt call xor cmp sbb mov (bad) (bad) (bad) (bad) (bad) (bad) cld dec dec inc dec mov data16 xchg (bad) mov or xchg scas dec inc jmp call push pop sub inc gs mov out inc and sub sub dec in jmp test mov test stos push int imul dec in dec or test sub imul outsl cs mov mov dec enter iret dec out in dec or xchg push or dec insb mov push or xchg dec dec lods mov stos lret or int sub das or or test enter or outsb mov test lret sub int mov ljmp insb (bad) mov in jmp sub es in sub mov in xchg lods insl lret inc int3 int push insl mov sub out sub cs dec dec scas inc call out mov test out daa cs inc call (bad) stos or pop or leave scas dec ljmpw popw sub es mov (bad) insb cmpsb gs or (bad) leave in into lds xchg movsl out out leave popl or inc and into movl dec or dec or sub int mov lods inc dec int mov das sub sub sub mov iret dec outsl sub sub iret sub or sub iret dec imul insl sub sub sub sub test lods ljmp lods ljmp insl enter ljmp dec mov iret dec outsl sub dec or dec insl lods mov mov das sub call call lods push ljmp imul push in dec out dec sub in in pushw or in lea or insl stos int dec push iret sub push or test lret dec ljmp mov das sub jmp insb jmp inc lods pushw sub jmp sub sub dec mov (bad) or imul dec mov das sub or sub int sub into int3 imul dec sub jmp sub sub dec mov (bad) or imul dec dec jmp sub es cs stos push scas dec mov inc sub push int3 insl sub mov iret sub or insl sub sub call lods or in lea call push or push (bad) or lret mov das sub jmp int3 insl sub sub call lods or in lea in mov out push or stos iret sub jmp int3 insl sub jmp in in in lea das sub or sub int sub into int3 imul dec sub jmp sub sub dec mov (bad) or imul dec dec jmp sub es cs stos push scas dec mov inc sub push int3 insl sub mov iret sub or insl sub sub sub call lea dec jmp sub dec ljmp es int3 insl sub pop les arpl inc xor inc jbe inc hlt xchg push push data16 daa and push jb inc addl and mov jecxz mov mov adc adc inc and push je jbe movsb ss aam adc push and xor test xchg jne mulb and push xchg mov xor mov mov ja (bad) xchg xchg xchg movsb in push and cmpsb jae mulb inc cmc adc fs es xchg xor push adc inc adc and gs test adc xchg xchg jne push movsb inc and fs push test inc push push add push adc inc xchg jne add adcl arpl jbe hlt push test aam xchg inc xchg out repnz mov mov les xchg cmpsb xlat pop push ss data16 mov xchg xrelease pop pop daa and daa push and aaa and pop inc adc push (bad) shll ja xchg addr16 pop jbe les aad ja xchg cmpsb xor add test add gs es and ss xor mov push es mul adc cmpsl inc ja divl fs mov xchg mulb (bad) mulb mov and rol fisubrl les enter xchg out (bad) (bad) (bad) xchg (bad) repnz mov xchg aam lcall dec rcrb ficompl je xchg rol fs into mov lcallw repnz and dec mov adc int insl lods mov sbb mov xchg mov adc mov push fstp les test hlt adc (bad) mov test enter inc lret sub sub lret dec ljmp enter dec and and or adc loop imul and cmp xchg cwtl in xchg dec or or nop pushf aas inc or stos out or cld dec push sbb insl fmull ret call arpl loopne (bad) dec in (bad) (bad) (bad) stc adc jmp inc jne and mov (bad) (bad) (bad) call popa xchg xchg lcall adc and pop dec or adc icebp sbb loop xor cwtl nop les xchg pushf les and dec lret dec dec pushf dec dec aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push insl push sbb xor cld dec insb (bad) (bad) (bad) clc lea cld dec xchg dec imul sub (bad) stc adc push dec test mov loopne and push mov in cs and adc or dec imul adc sub int3 icebp xor push xchg adc inc adc mov mov mov shlb jno mov pusha push incb test and jle add and lahf and dec (bad) ret cld dec sub and mov data16 outsl icebp sub dec push jno sbb call adc cmp int mov rclb sub jp xor or inc mov decl daa les xchg adc push adc pop dec sub inc inc jp adc int3 dec leave cld dec sub inc jmp mov and xchg sbb dec mov inc imul loop dec adc insb dec mov cmp icebp and enter jb adc pop dec insl jg or and fcomps jg dec dec cld xchg data16 rorb and jno cmpsl jb sub mov fnstcw aad dec dec mov xor sub les stos adc test adc xchg or aam shll inc (bad) clc xchg mov and mov xchg dec lret add (bad) enter fist mov cld dec lret xor push push xchg imul xor inc stos out xor imul cmp mov mov lods mov movsb mov and stos mov and lcall mov xor and xor cmpsb mov sub movsl mov pushf cmp and cltd daa cmp cmp mov sub sub mov cmpsl stos sbb sub mov mov mov stos movsl xor lods sbb xor lcall cltd test sbb lods cmp mov sbb sub stos sub sbb cmp movsl mov cmpsb and mov and mov mov mov and mov mov test mov mov mov mov mov mov test mov mov mov mov mov mov cmp mov mov mov movsl and and and stos sub sub xor stos cmp mov xor xor cmp xor pushf mov xor sbb sbb es cwtl daa sub cmpsl mov mov mov xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg mov sbb cmpsl and cltd daa cmp cmp xchg xchg xchg xchg xchg pushf and and movsl and lcall mov xor xchg pushf pop xchg mov sbb movsb cmp mov mov mov sub movsl mov pushf cmp xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg cwtl mov daa mov xor mov and mov mov mov and and mov mov mov and mov mov mov and mov mov mov and mov and movsb and mov mov mov mov mov mov xor mov mov mov and mov mov and mov mov and mov mov and jecxz add inc xor inc pop imul push dec inc inc inc push inc inc ja dec inc addr16 inc push xor inc inc inc push inc js push inc push outsl bound xor jns push dec push pop outsb dec inc imul ja dec imul jp inc push xor addr16 push push xor push inc inc inc push xor push imul jo push inc xor xor push insb dec push push push pop pop push inc insb popa push xor pop insb cmp push dec push inc push insl pop xor popa insl je bound jbe dec inc jns xor outsb fs pop jo dec xor data16 dec pop das push push jbe bound pop push jns dec inc dec dec jbe dec inc push push inc les fiaddl adcl or pop adc mov cmp and movsb inc and fs push test inc push push add push adc inc xchg jne push test jne out jbe push adc xchg rcll cmpsb inc test inc adcl pop test movsb roll inc mov xchg jns (bad) (bad) incb cmp cld dec or inc or inc mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std or xor push push inc dec mov or int3 push popa push addr16 aaa je push cmp mov sbb add inc xchg je inc sub (bad) mov int3 test (bad) xchg and inc sub inc je mov pop clc nop pop bound loop push lret push xor enter repz (bad) call mov dec dec call inc es out (bad) (bad) cld dec dec fnop nop popf jb mov xchg push js mov popa push (bad) (bad) inc mov (bad) (bad) (bad) (bad) (bad) (bad) call (bad) (bad) (bad) call adc rorb adc arpl adc cmp or cmp lret mov lcall or adc adc or adc or or mov mov or adc xor mov ret test cmp imul push mov adc or mov leave lcall jae lret imul mov leave lcall push (bad) cmp sarb lret stos or adc adc push arpl push lret and and xchg jb lcall mov and arpl or jae sub adc sbb (bad) sarb xor lret mov pop or or (bad) or push imul stos or mov adc adc lcall xchg jb adc adc push or mov rorb mov sbb adc or or sub adc or or or stos or push sbb or or or or or push mov mov mov or or adc cmp or or or mov or or arpl or or or or dec or or or or or cmp sbb adc adc mov dec or mov sbb adc sarl push sbb adc and adc sbb adc inc or or adc dec or mov inc dec or mov pop or or bound inc dec or or jb inc pop or inc pop or cmp inc or pop or cmp bound inc dec or or or sub inc or dec or or bound sub lret lcall adc mov adc sbb or or adc sarl adc lret lret stos or or jb cmp lret mov ret mov lret or sbb xor or mov stos or mov adc push ret and inc stos or cmp lret stos or cmp (bad) or lret mov lret push or mov xor inc cmp sbb adc sbb adc inc dec or or adc cmp inc or mov bound cmp mov ret or or lcall or ret mov or or or stos or or arpl or or adc or jp ret or xor rorb pop or mov lcall adc or or stos mov lret or lcall adc xor (bad) or push sbb adc adc mov ret ret pop or cmp pop or ret mov or mov xor mov inc dec or cmp bound cmp mov sbb adc or pop or mov or or adc adc adc rorb mov lcall or or or mov adc inc sbb lret lret stos or or or sub sbb xor jb sub or or or or or cmp mov inc push rorb lcall sub jb or or mov jae adc or (bad) or adc or stos or and mov bound lret mov mov or adc or mov mov cmp or or or or sbb sbb mov sbb adc xor mov xchg mov (bad) or mov jb adc or (bad) or and push or jp or or stos or or jp or or (bad) or or or lret cmp mov xchg cmp adc and push or or dec or or mov xchg or bound cmp and or sbb adc or stos or mov or or adc mov sub adc adc cmp mov inc mov or pop or cmp and adc rorb stos or or ret stos or cmp cmp sub (bad) or sub or or or mov jb cmp adc or or mov lret (bad) or sub or or or or or adc or mov push or sub adc or or push rorb mov or sbb sbb sub sbb adc or sub and adc adc or or mov lret (bad) or sub ret inc or ret mov mov sbb sub or adc or ret mov bound xor rorb cmp cmp sub (bad) or sub ret sub cmp inc or or or (bad) or mov or or or or adc inc or sbb adc or sub and adc xor mov cmp lret lcall adc sarl stos or or and cmp or cmp mov cmp sbb xor bound inc dec or adc or sub and adc xor bound cmp or mov mov cmp sbb or or or (bad) or or or mov sbb or adc and lret mov push or stos or cmp mov cmp or mov push adc ret or mov cmp or mov stos or mov jp inc or or or or or or adc sbb adc or jp arpl mov jb cmp adc or lret push or stos or cmp mov cmp or mov push adc ret or mov cmp or mov stos or mov jp inc or or or or cmp and adc jnp or and sbb arpl adc cmp or mov dec or mov lcall cmp or mov mov or or or jp inc mov and adc arpl sbb and mov inc or push rorb ret mov mov mov cmp (bad) or mov bound inc cmp arpl adc sbb or or or or adc inc mov and adc arpl (bad) or adc cmp or mov dec or mov lcall cmp or mov mov cmp jb cmp adc or or adc or adc sbb or arpl mov stos or or or inc or push rorb push adc ret or mov cmp or mov stos or mov inc or or or or cmp or or (bad) or or or and sbb arpl adc sbb sub lret mov mov mov cmp or cmp or or (bad) or or or and sbb arpl adc sbb sub lret mov mov mov cmp (bad) or mov bound inc cmp arpl adc cmp or mov or or or or or cmp or or (bad) or or or lret cmp inc or dec or test movsb sub mov xor (bad) (bad) addr16 movsl adc xchg sbb rclb push adc pop rcrb adc les and mov daa mov and lods sub sbb and mov sbb cmp sbb movb int dec lods sub int sub xchg cmp mov sarb arpl sarb lret scas inc xor bound ss cmp xor xor daa sub (bad) fisubrl jp jae sub adc mov sbb mov inc mov xor cld mov lret push inc out xor and test mov sub and mov jns xchg push pop enter add aam add and jno mov dec inc in push inc jo sbb sub cld dec inc mov and and ret test and inc cmpsb out mov (bad) (bad) push sub dec jo mov clc xchg adc pop inc and sbb xor push push popf jno sbb inc inc (bad) inc test es jg inc xor imul xchg adc nop push enter mov or call and pop (bad) (bad) clc cltd sbb sub inc xor dec dec (bad) (bad) (bad) call mov incb adc cmp (bad) and push and test call or jg or (bad) (bad) call or xor mov enter (bad) decl jmp pop addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and (bad) decl (bad) (bad) (bad) (bad) jmp push inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) and outsl (bad) clc cwtl pop clc nop popf aas (bad) push and (bad) cld dec in (bad) (bad) (bad) (bad) (bad) inc test mov lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push and (bad) and pushf dec dec pop (bad) (bad) clc nop xchg jg gs les sbb (bad) (bad) call adc (bad) (bad) and adc or jb roll addps mov (bad) les jmp (bad) mov movsb lods pusha cmpsb scas push mov xchg ljmp inc and xchg push mov imul fwait shrb ret add push inc jbe (bad) es add movsl push stc sbb sbb cltd dec sbb mov xchg add cmp cmp leave dec mov mov pop in adc mov mov xchg sahf push xchg aad test (bad) (bad) mov (bad) (bad) inc les xor mov arpl daa je outsl (bad) stc sbb rcrl cwtl rcl popf inc mov and xorl sub loope mov push add dec dec push push push push jp xor pushl lret imul mov and mov sbbb loope dec popf or sub sub sub mov test and mov cmp push push popf jno sbb inc inc mov cld inc mov inc inc les xor in ja inc mov inc xchg adc scas cld dec dec adc pop les adc push or and dec mov mov adc sub mov push dec dec push jp (bad) fsubs mov mov push pop adc xchg dec rorb xchg loop inc xor push lret sub dec dec out jp xor jns adc pop or in lret out inc (bad) cld dec dec mov call (bad) inc movsb cmp inc aas adc aas (bad) (bad) es jle pop pop (bad) (bad) inc test (bad) (bad) jmp gs dec mov stos mov mov or sbb nop push xchg or mov push mov (bad) and jle adc xchg adc xor jmp push ja (bad) (bad) and (bad) (bad) (bad) (bad) call and xor push pop (bad) push and inc lods mov imul (bad) (bad) push and inc cmpsb mov (bad) decl (bad) (bad) (bad) (bad) (bad) (bad) es jg (bad) incb adc sub xor xchg test xchg inc or adc jno stos xchg (bad) call mov dec mov sub inc cmpsb cmp (bad) (bad) (bad) stc adc dec sbb mov inc push sub dec adc mov xor push sbb dec dec dec lret push aad sbb pop push lcall adc xchg cs imul dec mov (bad) dec xchg mov (bad) (bad) push and (bad) (bad) (bad) (bad) push sbb mov xchg xchg add ljmp insb jae adc in inc fs loop xor jg (bad) lret movsl sbb call mov in (bad) (bad) (bad) (bad) decl ret (bad) and jle pop lahf (bad) (bad) inc (bad) pop adc mov mov les clc nop dec jle gs aad xor xor enter cmpsb push and (bad) (bad) decl mov (bad) (bad) (bad) (bad) push and (bad) inc cwtl mov add and jg and aas (bad) (bad) (bad) (bad) (bad) cld dec inc pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc nop xchg jg adc mov aas (bad) (bad) (bad) inc test dec inc arpl jbe inc imul inc dec xor mov call mov data16 sub dec dec sub sub call mov lea and dec sub xor mov sbb sub into call les loop jp ret cmp xchg or in push inc jns imul (bad) (bad) iret mov mov daa sbb (bad) (bad) jmp push addr16 jmp inc imul dec (bad) pop inc fs (bad) and aas icebp and inc push je pop xchg pop (bad) jmp mov or loop ja xchg pop inc or adc inc mov and and out decl (bad) call or sub mov pop adc inc je outsl (bad) clc xchg aam mov loop cmp xchg cltd (bad) decl es pop (bad) and (bad) inc test decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) and jl cs push cmp fiadd test adc loop push clc xchg fprem nop pop jg adc mov sub (bad) (bad) (bad) and jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec mov inc test (bad) (bad) (bad) (bad) decl push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc jb (bad) decl cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and jg inc movsb out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in adc pop dec or rclb pop sbb xchg sbb dec aam shr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl addr16 les adc jg cld dec push (bad) clc nop fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov (bad) push and arpl xchg aas loop push loop jp les mov (bad) and cmp das aas adc or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov mov mov and movsb xor mov and dec inc push push inc bound addr16 or mov ret and loop jns (bad) or (bad) loop inc cltd adc scas adc push call and and push and sub inc cmp push xor or rorl cs dec sub sub ljmp xor push rcll adc dec sbb aam out push push xor icebp sub incb push add and nop movsb mov xchg inc xor and push stc adc lret lret icebp and cltd or cld dec mov mov (bad) and fnop cltd shl push dec call or adc adc inc pop out adc or enter sub jb ja and adc mov and or and (bad) sahf ret inc mov test push jno mov ljmp loop jno and sub push xchg add mov push dec outsb inc inc jae loopne and and cwtl mov fisttpll inc outsb bound mov and or dec sahf insb pusha test mov and in adc inc dec xor adc dec dec loop popa mov aam gs and mov loope dec out sarl mov xlat jno es mov adc mov dec mov sub mov mov daa je xchg fiadd fist jp dec outsl and insb jae and dec pop (bad) clc xchg or mov mov in dec sub icebp aaa mov sub es jg jmp das (bad) incb inc add icebp xor xor loop popa cld dec mov icebp sub jle jne les xchg xchg bound jmp pop mov test push jg stc adc pop inc bound (bad) jmp mov repnz lcall scas mov decl and incb cmpsb mov adc enter sub ljmp sub mov mov aas (bad) cld test dec outsb push inc imul movsl (bad) inc int3 xchg and pop movb fs (bad) cld inc push mov inc nop jno les (bad) xchg lret (bad) (bad) jmp sbb pop call or (bad) (bad) jmp je je dec xchg sbb aam (bad) (bad) call mov xchg sbb and pop mov cmpsl jmp lcall xchg (bad) (bad) (bad) jmp inc xor (bad) (bad) (bad) (bad) jmp xor test fld scas icebp and (bad) jmp das xor cld dec ljmp mov in icebp and cltd mov (bad) (bad) push adc push mov enter mov jg sbb jmp jns mov adc jmp inc dec je clc mov mov pop dec cmp mov pop decl and fwait xchg adc pmulhuw pop inc (bad) inc jb loop jb dec ljmp cld dec sub jge mov cmpl (bad) out push push inc inc icebp and frstor popf add imul inc das xchg rol rorl and mov mov sub and imul dec pop jb in mov adc test (bad) (bad) incb test sub bound mov mov mov mov mov decl and cmp mov inc ret test clc nop lea (bad) stc or adc mov mov pop adc dec dec or (bad) cld dec ljmp dec sub inc ljmp (bad) push pop xchg clc (bad) fdivrs shl bound inc (bad) jmp jb loop je dec sub cld mov sub pop jg and (bad) mov in inc jo (bad) inc jb enter jmp mov push xor jno test adc (bad) (bad) clc xchg adc aas (bad) (bad) clc lea stc adc rcr (bad) (bad) clc xchg fnstsw mov cmp mov mov into (bad) les stc adc push int3 aas (bad) clc mov (bad) call adc or scas adc icebp cmp (bad) jmp sub mov fisttpl daa test (bad) cld inc jmp (bad) inc insb jmp insb ret les pop lret adc mov sbb (bad) (bad) (bad) clc xchg fnstsw xchg mov mov pop mov test dec push or out xchg push js xchg jg orl and mov lahf mov es adc mov and push (bad) and dec inc ljmp rorb fwait clc xchg (bad) adc xor test (bad) call and cmp mov jmp cmp mov stc or cltd pop call cmp (bad) call sub pop fisttp mov sbb icebp cmp adc pop (bad) (bad) and jg mov adc mov dec mov mov fs or sbb aas (bad) call arpl inc dec dec inc (bad) jmp insl js push (bad) cld mov push adc xchg loop inc (bad) (bad) cld dec scas pop mov (bad) push xor xor aas (bad) decl mov inc das (bad) lret (bad) clc sahf pop mov jmp xor inc dec jg decl mov cld mov dec pop adc (bad) (bad) jmp popa inc (bad) jmp inc sub cld dec daa add sbb add xchg mov vpmulhw icebp and (bad) lret les xor das in dec pop xor and cmp dec sub test inc dec ja push addr16 imul adc jg mov call sbb mov popf pop push inc enter push cmp je adc (bad) stc push dec fsts test and pop mov sbb push sbb fistl inc out (bad) inc and jne icebp sbb jle inc sbb xchg into xchg and push dec push adc imul inc adc pop mov xchg or push inc adc adc adc adc dec sub in lahf and and cmp enter xchg movsb inc and jno les enter into es les stc adc fwait call or pop les and nop sarb and mov add enter xchg in ss adc dec in decl jg mov adc cmp xchg dec fwait int3 loop adc es inc inc mov stos and es test dec test or lea cwtl xchg adc inc mov dec test inc xor sbb ja adc insb dec enter xor xor inc pop mov cmp cld dec dec pushf mov scas loop inc mov dec mov cmp inc out cmc clc xchg pop or cmpsb xchg add sbb or fiaddl inc xor mov cmp push sbb mov cmpsl mov xchg and ja arpl adc dec jl push cmp les mov xchg or inc inc mov test adc sub sub adc into bound adc and daa adc and dec out dec mov es test into cmp sbb inc hlt idivl adc mov fimull lret push dec out inc sub aaa mov and (bad) (bad) clc popf int (bad) scas adc dec inc mov and into daa inc cmp clc nop xchg loop imul mov mov test loop inc decl jno mov in adc adc iret loop jae and add xor xchg pop cmp (bad) (bad) cmp nop aad mov dec es dec pop mov test pushf dec in push xor push adc rclb inc out (bad) jno xor and xchg lret push dec out cmp in pop mov and clc lea aas (bad) clc nop sarl nop dec mov (bad) mov es and clc xchg dec jg xchg fidivrl rclb jg jns adc and out dec dec pop cmc push call or cwtl push adc sbb cmp movsl cmp cmp bound xor pop push insb arpl push pusha test enter (bad) nop fsubr lods out fs (bad) in mov lods out stos mov les add mov dec in sbb add and dec push imul test lea mov cmp lea lea dec leave pop rcrl aad sbb int rorl mov test xchg pop lea mov cmp lea lea push leave loope imul popa gs mov dec mov in leave mov push leave sub imul adc mov aad popa dec mov sbb sbb inc leave loope mov pop and mov or lea pop push test sub add popa mov mov imul dec sbb enter pop dec mov imul cmp lea dec inc lea jmp dec leave pop rcll jmp lea mov gs dec xor gs sub pop fldl and dec inc lea lods lea add int int in enter pop lea xchg sbb sub fs pop jmp or jmp imul or cmp lea lods imul sbb push sbb sbb xchg inc or in pop sbb imul mov int popa add sbb mov sbb test loope imul mov mov dec mov popf or or cmp mov dec mov pop dec rorl imul test add sbb int pop pop fisttpll popf add imul lds pop aad mov or mov sbb fs rcll mov pop aad add sbb imul in pop aam pop sbb sbb add and mov fisttpll cltd add pop pop adc leave loope add leave pop roll inc add pop loope xchg and test add rol mov dec roll shrl fstps mov imul add imul mov pop dec inc lea mov xchg inc or xchg mov sbb pop fldl mov adc sbb pop sbb add and dec push xchg popa cmp imul add and fldenv jmp dec mov in int popa add and fldenv jmp push mov rcll xor add gs dec mov sbb (bad) and aad popa or test roll imul test jmp mov or xchg adc pop inc mov mov xchg sbb or or cmp mov lds pop int rcll loope add leave pop rcll xchg sbb mov imul aad fisttpll lods add sbb aad int mov pop xchg fsts sbb cmp mov sub pop fldl dec imul int inc add adc sbb loope pop fstl loope push xchg mov adc pop push test mov popa popf add test inc leave loope mov push add test push mov rcll sbb gs imul int pop lea imul mov popa dec rorl dec mov lds or pop mov int pop lds mov sub gs dec rorl and mov inc pop loope mov xor and inc enter sbb adc add popa or mov adc lods mov sbb add lods mov adc sbb xor rcll jmp lea movsl add popa dec shll rcll mov test mov fs rorl cmp imul shll push leave pop test mov or mov cmp test shll push leave pop test mov or xchg sbb mov test mov fs rorl sbb pop mov int pop lds mov push add imul jmp dec popa mov or mov cpuid mov mov test cmp sub sub mov xor xor sbb mov xor and and sub sub cmp cwtl sub and xor mov adc jae and leave loope xchg push mov fsubs fisttpl dec dec xor adc push push fs xchg and or add leave loope mov pop and lods push inc je inc inc adc push adc test test xchg sub les (bad) sub xor lods rcll adc pop sbb adc pop fisttpl and and scas and jp test dec lods sub dec and incb jne mov cmp dec test lods inc jne imul ja cmpsb inc test or sbb mov push pop dec dec and addr16 inc adc mov lret fisub pushf mov inc push daa sub or sbb inc movsb push arpl int3 dec imul mov pushf mov cltd test cmp sub cmp and mov mov daa cmp sub mov sub sbb sbb stos lcall mov mov xor sub sub cmp xor stos cmp and and sub cmp sub cmp sub sbb movsb and cmp cmp sub mov and sub sub mov cmp xor sub mov sbb sub sub sub ss lods lods and mov test sub stos test cmp mov sbb test xor xor stos and cmp xor mov cmp sub and sub sub lods daa sbb stos cwtl mov movsl sub sub cmp test cltd test mov sub sub stos ss sbb and mov test movsl ss sub sub pushf mov xor mov lods lods and and lods cmp ss cmp xor stos sub mov daa xor lods cmp and cmp mov daa xor lods cmp and mov mov movsl cmp and and sbb cltd mov xor stos cmp and sbb sbb adc xor daa sbb sub cmp cmp mov lods sub sbb mov mov cmp cmp xor and sub mov xor lods cmp and sub mov mov lcall cltd sub mov lcall and sub cmpsl sub test sub sub mov lods sub mov sub stos mov sbb mov xor sub xor mov test ss mov sub movsl cmp sub xor sbb mov and cmp and cmp mov mov ss and xor mov sub mov ss and mov stos and mov sub and xor stos mov stos cltd sub sub mov cmp mov mov mov lods sub sub mov and mov sbb stos cmpsl xor and ss test and sub cmp lods sub sub and stos cltd sub xor mov and aaa sub xor sub sub and stos cltd sub xor mov and and sbb stos cmpsl xor and ss test and stos lcall sub cmp cltd sub sub sub cmp test mov mov lods and sub sub and sbb sbb and cmp sub xor sub mov cmp ss cmp xor cmp test mov lods stos test xor mov cwtl cmp sub and test mov mov sub pushf mov stos mov and movsl ss sub sub mov sub cmp and sub and sbb mov stos and mov sub sub cmp sub cmp sub mov stos cltd sub sub stos cmp mov xor mov xor test movsl ss sub sub sbb mov movsl ss test ss test and mov sub mov sub cmp and cmp cmp and mov xor and cmp test mov xor lods cmp mov cwtl mov sub xor and sbb mov cmpsl sub lods daa sub sbb test mov sub mov lods sub cmp mov mov sub and mov stos sbb stos mov mov sub and mov stos sbb stos mov and mov cmp mov movsl and and xor mov mov sub sub sub sub cmp xor sub cmp and xor sub cmp sub mov stos lods cmp and mov and sub stos cwtl mov mov lods cmp ss sbb ss mov sub pushf cwtl mov sub mov cmp cmp and sub cmp sub cmp sub sbb test and ss mov sub pushf cwtl mov sub mov cmp sbb and ss lods and sbb ss mov sub pushf cwtl mov sub mov cmp mov sub sub sub sub test sub mov lods sub cmp sub cmp and test sub cmp sub and sub sub sub mov ss mov mov cwtl mov sub mov cmp sub xor ss cmp mov mov mov daa sbb mov cmp movsb sbb sub mov cwtl mov stos sbb cmp sub mov mov mov lods lods and xor mov mov mov mov lods sub mov cmpsl cmp and mov sub pushf mov mov sub mov stos xor cmpsl xor sbb sub mov mov sub mov xor stos mov xor cwtl mov cltd cmpsl xor sbb sub cmpsb cmp sub mov sub movsb mov sbb sub xor stos xor lods ss mov xor mov xor sub mov stos xor and sbb sbb mov sub stos cmp xor test mov lods sub sub cmpsb mov sub mov mov xor and sbb xor lcall and mov sub sub sub mov lods sub cmp xor mov sub stos lcall sub mov sub cmp xor test sbb sub xor sbb movsl xor cmp mov and mov sub movsl cmp and sbb mov and sub and sbb mov sbb cmp mov cmp xor mov lods mov mov mov mov sub sub sub pushf mov mov lods lods cmp sub daa lods stos cwtl mov cmp and lods sub xor sub mov test cmp ss cmp sbb sub mov stos cmp lods daa sbb sub cmp sub mov test xor xor sbb mov cltd movsl ss sub sub cmp sub sub cmpsl sbb stos cltd xor xor mov xor test mov lods sub xor mov sub and xor and mov sub stos lcall sbb mov cmp sub cltd test cmp xor and and xor mov sub stos cmp sub cwtl sub cmpsb mov mov mov lods sub cmp sub xor and and lods and test movsl ss sub sub mov cmp mov daa xor stos xor mov stos xor lcall xor stos sub mov mov sub sub sub mov mov sub test sub sub cmpsb mov test mov sub mov mov mov mov and and mov lcall mov lcall stos lcall cmp xor and stos lcall lods sub cmp mov mov mov mov stos cmp cmp daa stos cwtl mov mov mov stos pushf mov mov pushf mov sub cmp sub movsl xor xor and cmp mov sub mov test sbb and mov mov xor sub test cmp xor and sub mov mov mov and sub mov lods sub xor sbb sub mov mov sub mov pushf mov sub stos cmpsl sub mov sub and xor sub cmpsb mov sbb sub mov sbb and cltd xor xor mov sub mov sub lods cmp mov sub sub xor stos sub mov mov mov lods sub sub lcall and cmp mov stos sub and sub cmp mov cmp xor movsl xor and sub mov aaa mov stos xor and cmp cltd sub mov sbb sbb and xor lods cmp mov mov and sub sbb cmp sub sub mov stos aaa sub sub sub xor and stos aaa sub sub stos sbb cmp sub mov sub subb inc inc dec xor bound jo push push push bound pop jo inc push ret fadds cmp imul add imul (bad) lret sub lods bound push xchg enter leave rcll mov pop aad add or leave push push inc fs dec jns test enter and mov movsb and enter and adc cmp xchg xchg mov mov xor ja cmpsb inc test test dec enter sub push adc fwait or xchg xchg popf xchg mov fwait (bad) push adc push push xchg or stos ret fsubs push ss (bad) imul (bad) in enter mov and ret mov pushf enter mov stos or add push test dec pop inc push dec dec jbe lods hlt (bad) hlt lcall popf adc push insl push xor movb les es and cltd or test rorb or stos dec in sub dec pop and shll bound xor and mov nop pushf jg inc inc push inc push xor loop dec enter hlt and test mov xor mov ror xchg cmp jae test int and (bad) adc dec addr16 inc mov dec test repnz iret loop push repnz xor and fidivl enter jae shll and lcall lock aam movsb adc xchg and cwtl in lea cwtl nop nop movsb pop ja push les daa jg xor mov iret pop mov mov in jo insl in push sahf inc cmc adc shll sbb cmp les fld (bad) fsubl ss dec mov and movsb scas mov aam or outsl inc cltd imul dec adc add icebp sub adc cmp dec js sahf jg inc sub adc cmpsb and enter mov daa test (bad) and push xor inc xor adc xchg xchg jns fistpl mov adc outsb and or leave ret adc dec enter push and jg mov outsb loop decl les mov cltd gs cld inc mov mov popa ja cmp ret xor mov and xor (bad) (bad) pusha es and dec sub icebp and inc xchg mov in out (bad) clc xchg push jg (bad) (bad) inc test and mov loop dec (bad) incb fs dec dec fcomip sub rcll int3 dec dec jle dec rcrl lods pop xor adc scas and fbstp push and adc mov enter push xchg (bad) and stos aas icebp and or jg int in dec jae clc cwtl pop jno ss dec data16 (bad) and dec push enter fisttp sub push mov es cmp call stc adc push pop xchg push mov clc mov and ja and loop ja push push inc clc nop fsub pop insb jmp push outsb les inc jo xchg push lahf (bad) and ss xor inc xchg test push push (bad) and lods dec bound adc mov cmpsb pop adc mov and jg xchg pushf icebp and inc push les sub inc mov addl and lods jmp jp adc lcall sbb push adc add mov xchg cmp movb movsb jecxz fwait or nop push mov xchg mov rorb loop xor pusha (bad) mov pusha dec xchg icebp cmp les inc stos js adc xor les nop pop inc push movb inc call icebp cmp popa xor and test sub sbb bound lds xor bound push ja outsl inc insb dec insb pop xor pop pop dec xor bound je gs arpl dec arpl push xor push pop push dec insb pop xor popa pop push xor pop xor arpl jbe addr16 inc je dec push pop pop push push pop push dec xor insb xor push insb arpl dec jns pop inc xor dec inc pop push dec jae inc dec inc push insl push outsb push push xor push push ja push pop xor ja push xor inc gs arpl inc dec push pop push fs bound jp push je gs inc sub dec insb pop xor fs pop push push pop push insl inc insb dec insb fs push jne dec dec jo pop dec dec bound push inc arpl dec push inc push xor arpl dec pop pop push dec pop pop dec outsl push inc inc jns push xor ja inc arpl ja inc dec insb bound push bound xor xor dec inc push xor arpl inc arpl push pop pop dec outsl inc dec pop inc push xor arpl inc pop pop dec xor cmp popa inc inc inc jns inc inc arpl ja inc push inc pop pop push push push xor arpl push pop pop push dec pop pop insb push pop pop dec push jns inc inc arpl ja inc insb je inc cmp inc je gs inc inc jne inc inc arpl ja inc push jne xor arpl inc inc dec arpl xor arpl inc pop pop dec xor cmp inc inc addr16 push pop push insb arpl push pop pop dec xor dec insb push xor fs push jp inc inc push inc push js bound je arpl push xor xor push push popa push push inc jge mov cmp ss sub sbb sbb xor xor and sbb cltd stos cmp lods sub test and cmp mov mov sub sub mov sbb stos test cmp and xor movsl and and stos mov aaa sub lcall and or mov jno cmpsb adc test dec bound lret rcl test clc cltd adc or addr16 inc mov push adc push adc nop push push push push dec loop dec dec push dec pop pop dec outsl push inc inc jns xor ja inc arpl ja lods shlb inc and push add and push dec les dec (bad) or es push and loop push lcall dec xchg rol mov movl push jg std sub aad or lds sbb stos mov or fmuls pop xor xor stos sub and mov mov mov movsb cmp mov or es and je out and aad rcrl mov and stos pusha rorb shrb nop out (bad) hlt mov adc mov faddl xchg dec dec leave pop or mov xchg pushf or loopne fisubrl cld dec call dec jb push push je outsb mov pop push and or test sbb sub and lods and pop pop (bad) jmp dec lods enter or push or or xor lcall jno mov xchg push push (bad) adc sub and pop jns mov mov (bad) cmp push cs and or pushf fs insl inc je xchg add push scas mov xlat icebp and mov (bad) les fs push imul out push dec insb cmp cmp leave nop xchg pushf add test mov inc adc data16 cs aas and dec cmovb loop xor adc sbb sbb sbb and or push sub lcall push inc mov iret and sbb les daa mov cwtl mov insl pop les ljmp xchg push jg gs inc xchg ss adc mov scas es jg pop inc adc rclb lods or pop jmp arpl push adc cld dec (bad) pushf mov cmpsl jg and dec jmp inc addr16 pop les push push loop jno jb clc nop xchg jno sub xchg push mov nop test (bad) and mov fdiv stos nop xchg in les movsb xchg and clc xchg xchg cmp or out jmp mov ss cld dec insb cld dec lea inc js push push adc dec loop,pn ja cmp adc mov adc mov (bad) call popa push cld dec stos sbb (bad) call ret and les jb adc mov arpl inc popa icebp ss aad cld inc or icebp and (bad) and jg and clc cwtl sarl dec mov jne and lahf mov loop ja xchg xchg mov xor (bad) mov mov mov cmp dec sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) daa movsb outsb and scas and pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and lods int or scas mov jbe movsb (bad) enter es sbb dec dec sub mov dec shl xchg sub in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec sub jge mov inc adc xchg xchg and inc notb jae push and xchg in push inc test outsb enter mov rclb stos push stos mov lods fmul mov lods fiadd (bad) (bad) (bad) (bad) (bad) (bad) cld mov test dec sub or sub in sub or adc sbb je adc jbe inc pop je xchg push or inc outsl cltd fldl (bad) clc xchg or adc or (bad) (bad) inc mov xor mov pop jnp inc stos or jnp lcall ftst inc push inc push xor dec inc ror mov nop nop test pushf outsb into push mov sub test loop ja push sub dec sub dec sub jns adc imul mov adc adc adc dec or mov aam and push outsl adc sub jmp or es and cmp bound adc daa mov and mov pusha inc fs inc and push daa movsb shlb cmpsb stos and or icebp and test lret push bound in inc inc dec adc int3 dec test adc adc (bad) out or test cmp inc hlt (bad) clc xchg adc test adc dec jmp pop or les js (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc adc lods mov dec lret (bad) (bad) (bad) (bad) stc sbb and call xor mov inc das loop ja nop lods add (bad) (bad) cld dec int3 (bad) decl push and js sarb adc inc jmp inc ja mov push sbb mov les adc aas jmp inc push cld dec scas cld dec dec pop icebp xor icebp and jle push cmp cmp xor xor icebp and fwait aam adc mov mov dec mov push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec mov mov xor les push mov ja es cmc and nop pop bound mov es push sbb int3 addr16 push sbbl fs (bad) clc pushf xchg aas in pop dec pop (bad) and out (bad) dec scas into test je dec cmp push xchg loop inc enter cmpsl and mov jae mov xchg popa mov jb (bad) sbb push lcall fistpl push adc or xchg cwtl fisttpll xchg pop mov dec enter data16 jo pop test (bad) ljmp jb xchg (bad) (bad) in xchg divl inc sub rclb push pop aad dec xchg adc pop xchg pop mov push inc mov mov xchg cmpsb test xchg mov jg xor jo dec inc adc dec push push inc adc and or mov sbb fnop (bad) nop xchg in inc cmpsb xchg fwait dec dec adc sahf pop adc push popf dec movsb mov dec lea test (bad) daa je in push in and es ja mov xorl cmpsb (bad) hlt xor daa sub mov xor cmp movsl mov dec or push mov test dec fist sub inc sub xchg xor or push mov pusha cltd sarl push sbb push test sub mov test aam xor adc and loope and call test sub mov dec lret or (bad) cmpsb or mov call adc cltd sbb and dec sbb dec insl adc xchg nop jb mov popf xor in pop jmp hlt pop dec mov inc xor inc jbe dec das inc dec jbe dec cmp js jo dec cmp xor inc xor inc push inc cmp inc mov push dec dec inc imul and mov movsl pushf xor cmp enter out rclb xchg lcall push push ss adc ds jbe xor and mov and mov sub sbb enter pop nop aam into out lcall push sbb pop xchg adc fstl in outsl je adc mov pushf es adc aam xchg push dec popf rcrl dec shl test daa mov mov push mov mov call dec adc inc xchg rorl daa inc push mov xchg mov hlt gs stos pop or push fwait mov sub mov cld dec test inc cs sub popa mov mov pop xor rorb push insl push and xchg pusha roll loopne stos and loop push adc js adc mov cmp es push sub and dec push and mov sub sub lods dec dec mov rcrb sbb popf sbb and push and mov sub sub mov cmp mov mov pushf cwtl and sub lcall sbb mov mov mov sub and mov inc inc je inc rorl test push push adc mov ja jbe inc pop inc xor inc and or adc (bad) lock pop inc sbb adc add test test into push and daa sub adc nop into movsl mov dec adc sub es inc adc push ss xchg cmpsl mov aad inc and cwtl (bad) mov mov into mov inc cmp mov movsb cmp and pop insl js push inc push sub mov xor mov sbb and lcall inc jns xor and mov inc loope cmp inc and rorl add push and nop push pop sbb mov fs and mov imul stos sarb ret popf adc mov xchg push insb arpl push pop push js dec inc push inc gs inc inc aaa adc test xchg jne cmc pop xorl stos xor mov movsb test mov push mov dec or ret test (bad) cld dec dec movsb cmp inc dec movsl mov mov cmpsb cmpsl cmp push movsb push fs and loope adc imul dec pop movsl sbb sbb pop rclb nop pop sbb pop hlt adc inc stos imul or sub stos rolb nop xchg mov (bad) jmp mov adc adc and outsb call movsb push inc inc pop mov repnz push push push push adc mov mov adc mov adc inc sbb lcall outsb (bad) and repnz stos inc push repz and jp ret jb test (bad) jb cltd fwait and xor lret xchg xor imul mov cltd lcall imul lret cltd lret mov rol and ret mov leave jp sarl jns pop pop xor pop xorl stos sub popa stos jp pop stos jnp jno pop xor stos adc sub mov jp push mov stos arpl test fwait cltd mov pop jnp mov test jae mov push jns jnp xchg mov mov mov xchg mov mov mov sarb stos bound stos bound ret popa stos sub popa stos sub arpl or pop sarb xchg pop sarb xchg pop rcrb mov sbb pop stos jp pop stos jp pop stos jp pop (bad) pop fwait pop (bad) pop fwait pop adcl and lret sbb lret sbb lret xor pop xor pop xor mov jae mov jae mov push push push push push push push dec lret push dec lret push stos adc stos adc stos adc mov imul xor mov xor mov xor mov sub lcall dec lcall dec sub mov sub mov sub mov or inc jnp cmp or inc jnp cmp or cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb cmp or dec sbb cmp or dec sbb cmp and mov jp cmp jp cmp pop sbb jp sbb jp sbb jp sbb jp sbb jns jae leave xchg jae leave xchg jae leave xchg jae leave xchg jae leave xchg imul imul imul imul imul imul adcl adcl adcl adcl adcl jnp jns jnp jns jnp jns jnp jns jnp jns push dec lret push dec lret push dec lret push dec lret push dec lret push dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec stos arpl stos arpl stos arpl stos arpl stos arpl stos pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop mov adc mov adc mov adc mov adc andl cltd andl cltd andl cltd andl cltd andl sub mov mov sub mov mov sub mov xchg or mov xchg or mov xchg or mov xchg or fwait adc ret fwait adc ret fwait adc ret fwait adc ret fwait adc ret fwait adc ret fwait adc ret fwait adc ret fwait adc ret fwait adc ret fwait adc mov lcall mov lcall mov lcall mov cltd mov jnp cltd mov jnp cltd mov jnp cltd mov jnp cltd mov jnp cltd mov pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg xchg lret mov xchg lret mov xchg lret mov xchg lret mov xchg lret mov xchg lret mov xchg lret mov xchg lret mov xchg lret mov xchg lret mov xchg lret mov leave ret mov leave ret mov leave ret mov leave ret mov leave ret mov leave ret mov leave ret mov leave ret mov leave ret mov leave ret mov leave jnp mov pop jnp mov pop jnp mov pop jnp mov pop jnp mov pop jnp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov stos adc stos adc stos adc stos adc stos adc stos adc stos adc stos adc stos adc stos adc stos adc stos arpl stos arpl stos arpl stos arpl stos arpl stos arpl stos arpl stos arpl stos arpl stos arpl stos arpl mov test mov test mov test mov test mov xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov orl arpl or arpl or arpl or arpl or arpl or arpl or arpl or pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop fwait pop (bad) pop sub mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov jae mov imul or mov imul or mov imul or mov imul or mov imul or mov imul or mov imul or mov imul inc jnp cmp or inc jnp cmp or inc jnp cmp or inc jnp cmp or inc jnp cmp or inc jnp cmp or inc jnp cmp or inc jnp cmp or inc jnp cmp or inc jnp cmp or inc jnp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb jp sbb mov push jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jns jnp jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp xchg mov xchg or mov xchg or mov xchg or mov xchg or mov xchg or mov xchg or mov xchg or fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg pop lret fwait xchg mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov orl imul or mov imul or mov imul or mov imul or mov imul or mov imul or mov imul pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop dec jnp pop stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov stos xchg mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov or or or or or xchg mov or jp or or cmp cmp or cmp or sbb cmp sub mov sub mov dec or cmp lcall or sbb or push ret or add and or or sbb or shrl imul or or sbb or cmp mov or or cmp cmp mov arpl or or stos mov adc push and or or lret lcall adc cmp mov xor or or mov mov push mov cmp mov jb inc push adc sub or or imul ret popa mov or cmp and dec mov sbb cmp stos dec dec or inc sub stos xor or mov cmpb cmp cmpsb mov sbb xor pushf mov and pushf pop test pushf cmp pushf xchg test pop xchg xchg fwait xchg xchg mov sbb mov lods sbb aaa sbb mov lcall lcall xor movsl sbb fwait cmpsl mov inc out test lods into push leave in dec jmp outsb into es scas dec sub xchg aad adc sbb insb jo push int3 ret mov movsl xchg or pop stos jp fs ss mov xchg pop sbb mov sbb mov mov movsl and scas inc xlat pop push sbb sub or call cmpsb mov inc push xchg push inc jne je repnz sbb cmp mov mov test pop xchg jg aam (bad) inc insb xchg call dec dec cld mov ljmp mov xchg int3 sbb push xor in jb xor dec ret les or jmp cltd mov notl (bad) cld xchg int3 pop (bad) stc sbb push cmp mov (bad) (bad) inc fisubrl jmp jne (bad) jmp jne jno (bad) dec loop loopne scas fcos (bad) (bad) (bad) cld mov push jg (bad) (bad) jmp outsb jo (bad) (bad) (bad) (bad) (bad) push xlat pop push push (bad) (bad) (bad) jmp outsl popa inc push jmp sbb jp (bad) (bad) (bad) push and jg (bad) (bad) jmp jnp pop dec (bad) (bad) (bad) (bad) stc or sbb jg (bad) (bad) lcall in (bad) (bad) (bad) (bad) clc pushf lea (bad) (bad) (bad) (bad) (bad) clc lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp stos mov (bad) stc adc rclb adc pop rolb dec inc inc addr16 inc dec ja push inc inc push addr16 inc outsl addr16 inc inc dec outsl inc inc push adc mov or cmp pushf (bad) sub jbe inc dec dec js jp dec jno xor mov rclb les inc inc pop xor inc insl ja inc inc inc inc inc xor and cwtl rolb and or inc cmp mov arpl or inc stos mov adc push and push inc jae ja push xor ja xor inc adc push rorb adc rorb adc inc push adc xlat and xor mov rcrb adc rcrb les ljmp sub dec xor jns cltd fiadd inc push adc jl stos sub imul je lret lcall pop cwtl mov mov xchg mov mov fist or and fcomp rclb add xchg fs push push xor and test jmp out jmp dec push les movsb pop push gs aam je sub sbb fsubs rcrl rclb pop add (bad) and jno sub lods xchg test xchg mov or xchg popf or fisttpll in test and shll xor call mov mov sbb inc and mov jmp adc mov push inc test mov and xchg lods mov jecxz jno test lods cmp test xor call xor and or push xchg pop cwtl rclb xchg push rclb push test enter xchg movsb lcall stos daa mov mov gs xor lcall lods and aaa enter ljmp dec add in and inc jp adc pop les xchg enter mov cmp test or push adc push push stos enter out dec dec test push into ljmp sub sub sub les inc outsl push adc and and push dec mov inc xor mov dec push push xor cltd xchg and test daa test test ror mov push and orl mov push adc fcomps into loop push rorb and les sub mov and (bad) xor sub les xchg and stos fwait test stos es mov out dec sub sub sub dec push test es fcoms cwtl bound cmpsb xor adc inc es xchg jle xchg cmpsb inc push ja inc dec adc sub mov mov mov mov mov and sub test and test sub mov and mov mov mov test (bad) into mov mov and sub mov xor mov and cmp movsb test xor mov cmpsl mov movsb mov cmpsl sub cmpsb mov lods and mov stos mov and mov and aaa xor sub sub mov and mov mov mov stos movsl mov or pop lret test xchg lods call sub dec out push inc bound xor (bad) jae cmp fwait sbb imul nop pop lcall pop push nop xchg lcall cltd rclb pop pop rcll inc pushf in inc and adc sub or sub popf mov ror dec and xor xchg adc pop test xchg adc movsb cmpsl es xchg aad push fs je jne mov and adc xchg adc xor adc ja xchg test roll je xor xchg inc aaa adc je inc add adc sbb cmp adc rcrb rcrb sub (bad) fs add xor xor clc nop pop jl dec sub inc mov enter test dec sub inc dec inc outsb in dec fs les test (bad) rcrb adc cld dec dec faddl adc dec pop repnz mov xor adc outsl adc lods sub sahf push lcall mov shrb xchg lods lock ret aam repnz les loop inc and xchg inc mov imul daa sub in iret cmovl cmovns out leave lea xchg mov jmp (bad) jmp dec inc jo adc pop cmp pop mov add adc ficom (bad) (bad) (bad) decl jp jns insb gs push imul mov int3 (bad) push mov and xchg adc xchg pushf mov (bad) xchg jo mov movsb pusha (bad) fcmovu rorl pop (bad) (bad) cld dec dec xor cmp test test mov (bad) jmp push insb bound sub sbb (bad) (bad) jmp push jae (bad) (bad) (bad) incb push lds pop into push adc jne inc xlat movsb cmpsb aas mov lret (bad) inc enter cltd sbb adc (bad) in inc inc xor push pop rcrb inc les push pushf (bad) es loop xor (bad) (bad) clc xchg pop (bad) (bad) and and (bad) and lahf (bad) decl test (bad) (bad) (bad) and (bad) (bad) (bad) (bad) (bad) (bad) jmp inc je push popf rcrb (bad) loop xor decl jb or inc inc dec xchg ss das dec jbe xor push dec push inc dec push ja push push xor xor int adc push sub (bad) lods enter mov insb insb stos mov movsb call ret loopne mov (bad) (bad) xchg xchg fs insb (bad) ljmp lods push loopne in cwtl mov in mov lock into (bad) call nop les inc xor xchg ja xchg ss ss mov xorl push jecxz inc push and push arpl inc in aam jne je xchg xchg arpl aaa xchg jne mov mov out test (bad) sub or dec dec mov test int3 out or inc leave mov sub stos gs enter dec mov sub xchg xchg ss ja daa and roll inc mov cmpsl jae jae data16 push pop push xor out aam je push push xchg and xchg inc xor inc xor push adc add gs push mov xchg xchg adc mov xchg je fs fs push xchg cmp mov js inc cmp dec pop dec push insl inc jae inc data16 pop inc jo mov and sarl inc movsb insb fiadd (bad) outsb shr out (bad) jb (bad) mov mov aam in movsb movsb addr16 xchg xchg ja cmp lea lret dec push or dec invd and push inc jo js jno dec ss dec imul outsl push cmp jp push push dec xor pop pop bound jp inc xor adc mov mov ret xor loope sbb pop ror roll rol dec mov or gs jmp aad rcll lds vmovapd and or test lret mov xor roll inc sbb xchg imul jns and rcrb add jae inc xor xchg sarb sbb fwait xchg mov sbb jno xchg cltd mov pop xchg or push xchg sbb mov xchg fistl test sub mov cwtl daa cmp inc and mov fmuls xor ja xor dec push push aaa sub pop push imul pop dec dec insl ja xor outsb cmpsl sbb sub mov sbb xchg xchg mov cmpsl xchg xchg cltd pop test inc pop lds adc push fnstenv cltd push mov lret sub xor adc mov dec rclb popf lret int3 int3 fs push and adc pushf fcomps cwtl dec sbb xchg popf test shll xor cmpsl and and xor mov push adc xchg fcompl adc mov xchg lock jb bound fs and mov sbb mov fcoml fwait xchg push or sbb fstps push dec pop rclb push xchg fisttpll lcall pop cltd fcomps popf adc rcrl (bad) aad pop cltd popf mov sbb rorl xchg adc dec push adc fcomps or fstpl fwait mov mov adc (bad) push pop rcr aam into sbb rcrb rcll dec pop sbb xchg or popf sbb into pop rcrl push sbb adc sbb ficom fwait pop pop mov cltd int3 adc push pop cwtl cltd or or fistpl popf push sbb sbb dec push dec adc fstpl fistl pop mov ficom mov adc mov sahf pop nop aad int3 push fistpl aam rclb adc dec or adc mov dec xchg pushf xchg int fistl push pop sbb pop cwtl sahf pop int3 fstpl dec adc sbb push (bad) fst pop or lret lret lret int xchg xchg push push push push push push push push sbb lcall dec dec cwtl push into pop (bad) push adc sbb push pop xchg push nop nop push push push push push push pop push or xchg (bad) sbb xchg xchg sbb xchg xchg adc push push push push push push rcrl push push push push push push push push int aam xchg fwait sbb fwait sbb adc sbb lcall lret lret lret fst push push push push push push push push push push push push push push push adc sahf fwait push push push push push push push push push push push push push push rcrl push push push push push push push push int sarb dec enter mov (bad) cmpsb sub sub dec outsb (bad) stos stos lods scas dec dec cs cs or dec in dec mov sub dec mov mov (bad) lods dec into (bad) imul imul sub push mov sub sub push or int int3 dec dec dec movb scas in inc insb mov (bad) or sub in ljmp stos dec push out lods lea scas stos cs test dec lea dec addr16 pop or int3 (bad) adc sbb ficom fwait pop pop mov cltd int3 adc push pop cwtl cltd or or fistpl popf push sbb sbb dec push dec adc fstpl fistl pop mov ficom mov adc mov sahf pop nop aad int3 push fistl push mov inc and jae addl arpl movsb xchg xchg push cmpsl and inc xchg and popa imul fstps (bad) xor or cmp frstor das xor inc push push inc inc mov dec int int es iret dec data16 es sub push lret adcl stos or nop mov mov mov dec dec lret dec or and stos mov imul mov xchg sbb and lcall inc dec push pop and shrl dec mov mov movsb int and cmp imul push adc dec push adc nop shlb add sub xor (bad) and mov (bad) repnz sub mov xchg xchg mov inc insb jo push stc sbb adc push (bad) cmpsb mov mov ljmp inc lcall push nop cltd or (bad) sbb fcmovne push adc pop push adc jne adc inc inc jne in adc div push inc inc jne mov jne mov adc addl push mov push aam inc sbb sbb and mov adc push bound popa xor dec pop xor arpl cmp shll pop outsb push int3 in in loop movsb mov ljmp rclb into mov in mov lock test movsb sahf ljmp mov sub sub mov dec in dec dec out mov out push sub bound mov sbb mov call push pusha jb lods pusha outsb shrb cmpsb scas in jb loopne xchg xchg lcall mov nop jb (bad) cwtl xchg sbb stos adc sbb and xor and lcall lods cmpsb test xor les and sub mov sub lods inc push mov adc and mov ret bound xchg mov outsb int3 movsb jo pop mov movsb lock fsubrl test cmp and sub push iret inc cmovp or or mov call jmp sub dec xchg cs test push lret int mov insl mov scas sub cmpsb in mov int3 cs inc in stos inc out sub push dec or daa or xor stos mov or int dec into dec lret dec data16 inc jmp in and push inc xor or insb fcoml xchg aam jb xchg nop (bad) in mov lods test aam xor movsb cwtl test test adc mov mov mov and in insb stos push test xchg das dec int3 insl sub jmp out mov pop or xchg push cltd mov outsl jp push jp dec cmp aaa imul push insl push mov mov dec sub dec push jo dec push inc insl xor ja push gs je push push push ss dec popa jns push push push push imul inc data16 sahf sbb sbb push dec sbb pop sbb aam xchg lcall repz xor leave mov call dec mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc inc mov and (bad) push and mov (bad) (bad) and js push jg adc inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl call dec sub xchg or pop mov xchg or call inc xor mov inc lcall cld dec mov and inc jo clc xchg xchg jae and xor xchg popf mov rcr (bad) les shr push xor call stc (bad) fisttpll pop sbb movsl and (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push jo insl xor sarl or xchg push dec sbb push push es xchg xchg push and enter scas ret xchg xor mov outsb jae jns pop jns cmp hlt (bad) aam jae sbb cwtl loop cmpsl xchg push jno mov fmuls mov jno xor fmull sbb add cltd popf bound adc push jb les dec sub inc ss dec jb and imul adc dec insl ret enter cmpsl adc dec lods aam xor (bad) es mov es shrb incb adc mov rcl fstpl nop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec sub ds or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec test (bad) hlt lcall imul pop pop (bad) rclb cwtl pusha movsb mov fs inc push ja dec push dec insb dec push push insb scas push inc push push inc ja js imul lock hlt (bad) lock movsb stos lods mov mov adc (bad) xor ret (bad) xchg pop xor sub pusha mov lock fadds dec inc imul dec addr16 dec inc cmp jo pushf aam insb movsb mov mov repz sub push and mov mov inc mov leave adc (bad) xor inc lea push mov rcll inc gs xchg (bad) (bad) xor sarl ret inc sub inc mov andl inc push dec mov sub dec test sub (bad) (bad) (bad) call and mov (bad) xchg test sbb pop push dec inc push inc inc xor mov adc out xchg push popf or push in inc push push mov cltd flds fdivrs out (bad) incb xchg ds adc xchg adc xor mov test mov (bad) es jno cmpsb bound and or mov add adc pusha (bad) mov xchg push fisttpll (bad) adc je cs sbb rorb cld mov sub sub mov dec dec mov adc inc push and enter xlat push xor icebp and dec (bad) (bad) (bad) push and (bad) iret clc cwtl xchg jno mov and pop inc push xor (bad) and pop loop inc (bad) (bad) decl push xor dec mov push and (bad) clc cwtl pop (bad) (bad) call rorb (bad) push and jg inc outsl decl icebp daa xor (bad) and inc test or decl ret jae sarb pop cmp cmp lret mov adc ror xchg inc arpl mov mov sbb mov xchg xorl dec dec adc shrl shll xor arpl jb adcl mov stos push dec pop (bad) cmp rcrl xchg mov lret imul lcall andl pop cmp inc arpl and dec dec dec cmp lret addl sub sub mov inc adc xchg mov stos bound adc or dec xchg arpl stos push mov mov rol jae adc jae or xchg (bad) leave lcall dec jae mov sbb dec adc arpl xchg mov mov lret xchg sarb sbb imul xchg push sub imul imul adcl lret rcl mov bound cmp subl mov mov lcall dec inc inc mov (bad) lcall sbb mov leave mov adc mov jnp xor adc dec pop (bad) inc jae leave lcall adcl rol xor sarb popa xchg or mov adcl rol xor sarb mov and xchg adcl stos push ret adc adc adc orl jb adc mov xchg mov dec dec adc leave xchg mov sbb orl xor adcl sbb ret and mov xchg ret inc (bad) leave lcall mov mov lret lret xor sarb popa xchg or mov adcl sbb push andl pop pop (bad) sbb sbbl mov and arpl (bad) sbb inc sbb push fwait sub xor xchg sub xchg mov stos sub sub mov adc pop and mov sub mov test inc mov test xor xchg sub xchg mov stos sub sub mov adc pop and mov sub mov test inc mov test xor xchg sub xchg mov stos sub sub mov adc pop and mov sub mov test inc mov test xor xchg or mov or jp or or rorb mov dec mov push sbb fwait push xor mov mov lret push shrb stos lret pop rcrb imul push imul addl xor cmp jb jns sub or pop rcll dec jae andl mov adc mov ret mov jnp (bad) push jns sbb jns cmpl shlb mov arpl mov sub jns adc or push pop lcall jp or jnp cmpl sub mov or mov cmpl xor pop push cmp push jnp mov imul shlb or push add and xor mov or xor mov xor ror inc mov or dec sub cmp and push mov lret pop imul stos shlb imul jp cmpl mov jno imul test lret addl jnp stos lcall or mov xor jno mov mov arpl xchg jp sub jp sbb jnp jns sub mov jnp or jnp mov sub jns rcl mov mov jns sarl sbb push xor ret ret mov push push lret pop mov mov stos push rcll and or and lret sbb jae lcall push mov jnp and sbbl or adc adc or pop push sub push stos lret inc push bound imul bound mov lcall jae imul dec rclb rorb addl rorl xor mov push lret pop jae rcll push xchg xor or jae mov jae cmp jae sbb jno cmp jp imul lret push pop inc jnp or jnp imul (bad) and mov rcll mov rcll mov push xchg ret dec mov jns imul xchg mov test mov fwait rcl mov cmp cmpl mov xchg xor push xchg lret ror mov dec lret stos push lcall push lcall and leave lret rcrl pop sbb mov pop imul sbbl xchg mov dec pop mov push pop and or mov rcrl mov jp mov adc or and or or adc or adc jp or push stos ret xor inc mov or mov and adc mov or imul push jp imul mov jb sub jb addl stos and mov rol xchg jae cmp jno imul mov jnp lcall cmp jnp cltd test jnp imul jnp jp jnp sarl mov mov jnp sbb dec mov mov cmp push jb (bad) mov mov lret mov sub leave lret fwait push lcall push cltd pop xorl xchg sbb fsts pop fcomps xchg sahf pop lcall sbb int3 pop push dec rcrb pop adc pop cwtl mov adc xchg pop adc popf push push int push fwait push sahf cltd adc pushf adc scas test or push mov lret imul lcall adc mov movsl inc push xchg inc es push xlat mov and fcompl sbb push pop aad dec sbb push xchg mov adc dec out int3 sub lods xchg pop pop dec jp sbb test movsb cltd es loopne dec in insl cmpsl sub xor and or dec inc cmp pop rorb int dec in lea dec (bad) stos enter dec repz and pop adc dec int3 mov mov lds mov lret jo dec xor push dec bound jbe dec push and (bad) sub (bad) dec jns jae (bad) jb mov dec les inc add out dec inc mov mov es and sub xor xor or es xchg xchg mov lds aaa test pushf les xchg pop inc data16 mov push xor mov iret (bad) clc xchg pushf add push and cmp adc inc and xor stos mov sub lcall xor jb sub aad dec or (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov mov mov sub out das dec lea aaa test movsb addr16 aad pop xchg push aad push xchg cmc inc mov pop rcrb imul push imul hlt movsb ficomp stos (bad) pushf lods into bound mov ret ljmp mov xor push push xor xor sbb test cmp pop mov xor int or ror sbb ficom push dec adc mov or adc adc or push pop lcall jp or jnp cmpl test push pop jne inc and jne inc es jbe jp xor adc adc mov xor mov mov mov jo inc js inc dec xor cmp mov mov cmpsb mov mov mov ljmp repnz aam pop lcall dec xor jp inc dec bound push xor push jns inc inc sub xchg cmpsl xor cmpsb xchg push rcrl sbb pop int3 int sbb rcr cltd aad out push push push inc xor daa movsl and fistpl int pop pushf push push fcoml (bad) cmovle out mov leave daa ss notl inc inc repz cmpsl push xchg sbb mov or (bad) stos or cmpsl add inc and xor and or xor cmp sub pushf mov sbb xor mov test cwtl mov mov sub aam mov les or shlb imul sahf and adc mov das dec dec dec sub leave sub adc mov push xchg cltd mov cmp push jp push dec insl mov push dec pushf pop cwtl pop xchg pushf movsb bound push pushf daa sbb cltd mov insb imul xor pop xor mov lds out loopne loop sahf in cmpsl and and jmp push fmul inc or jmp push repz jbe inc push add fs xchg mov test (bad) aaa cmpsl movsl jne hlt adc pop lret adc xchg xor xchg push pop pop or daa lods inc push das dec inc imul mov mov jb mov in mov movsb test pushf mov xor sub ss outsl mov ret inc sbb stos sub stos or add mov inc adc or adc mov xor xor and push sbb xor or mov lcall or mov or dec adc and xchg dec or mov adc cmpsb inc xchg cmpsb push imul test test jnp cltd test inc push in imul je dec aaa push aaa and push xor mov mov fs ljmp inc adc sbb push pop sub popa push imul jp push push jo sub xor push js das dec jp popa push xor push sub ja inc inc inc inc inc inc dec inc inc inc inc inc sub addr16 push inc push dec dec outsl ja jp je inc outsl js push jo pop imul inc dec dec pop ja jae dec inc dec arpl ss js push outsl jns push imul jns inc dec imul jns inc dec pop dec jns jp push dec jns jp jp jp xor ja push cmp inc push push dec inc pop xor push imul push push dec dec cmp jo push je push ja push push push dec push pop xor pop dec dec push pop push dec insb arpl jbe bound inc xor inc fs dec dec dec xor inc insl xor push ss jp imul sub cmp xor push ja addr16 inc inc inc inc push inc inc inc inc inc insl dec inc addr16 push arpl xor addr16 inc push dec dec push ja push dec dec dec outsl ja inc inc jbe push addr16 jp inc dec pop ja outsb inc inc push jne dec inc dec arpl xor dec gs js push jp data16 inc jp dec dec push dec arpl pop jns inc dec push dec dec imul jp outsb dec push outsl xor push imul xor push xor bound ja pop jo push cmp dec push pop xor xor pop inc dec imul inc pop dec dec insb inc xor popa addr16 jno xor popa jae push arpl jp xor fs dec xor bound dec cmp xor dec cmp xor dec sub ss data16 jp xor inc push xor inc imul push xor dec xor js push dec dec dec xor push push dec dec arpl push xor xor push imul imul push xor dec push jae push jp arpl ja arpl dec pop xor dec popa ja inc push outsl fs jo ss jno dec outsb ja inc dec inc inc inc inc push inc inc inc inc push dec inc inc ja push inc popa dec dec dec ja jp dec dec dec arpl inc inc ja dec inc ja push push push inc ja push cmp dec js inc inc addr16 push jae pop jp jae pop jae addr16 inc push dec pop push js inc dec ss pop addr16 push dec xor pop jns push dec arpl dec jns push dec sub xor push jp insb dec xor imul dec cmp aaa push cmp imul inc push fs inc push xor push inc dec inc inc xor push push arpl cmp dec xor push dec dec dec push xor push push dec push push xor push push dec dec pop inc xor fs popa dec xor pop jae data16 inc push pop fs push xor pop dec dec insb dec xor pop jno outsb inc xor popa insl dec jno xor bound outsl xor arpl xor pop inc gs sub xor inc arpl inc inc xor dec push jae push push insb dec dec push addr16 dec pop ja ja outsb insb dec push inc ss inc jno dec jo ss jp push fs je dec xor aaa outsl push jne aaa dec aaa xor aaa dec jns cmp js push dec dec cmp xor push push cmp xor pop jae push popa cmp xor xor arpl dec push xor sub jp jb jp das push inc cmp xor inc inc inc inc addr16 inc inc jp inc inc inc inc arpl push inc je push xor popa inc inc sub xor jp dec dec fs js push jo insl dec jns push cmp addr16 push dec dec dec push push dec dec inc cmp pop push jo inc cmp ss push je push dec xor push ja pop dec xor pop inc dec outsl xor push pop imul popa dec dec jo xor popa imul bound jae xor jp imul xor push dec dec js xor arpl jp xor fs dec xor pop push fs dec push cmp push xor jp gs inc push xor inc outsb ja push dec ss push outsl push dec imul dec outsb addr16 jno dec jno ss jb dec addr16 aaa dec push jae dec xor jp push dec imul push inc push push jae insb jp insl push push cmp inc inc inc inc imul outsl inc inc inc inc dec jae push inc outsl dec push push jns inc dec push jp jp push cmp outsl jp push dec jbe js xor push je dec ja xor insl dec push ja push jp cmp outsl xor pop outsl dec cmp dec push push dec insl inc xor popa inc dec jae xor arpl xor push dec dec xor push push dec push outsl xor jp jp addr16 dec push jno xor aaa insl push jne dec xor inc push ja push inc outsl cmp xor jae dec jp popa push pop dec cmp xor gs cmp push xor push push pop sub xor sub aaa inc push jae sub push dec push xor fs sub ss das inc dec inc inc inc dec addr16 inc inc inc xor xor inc inc inc dec dec imul inc insb dec outsl js inc dec dec dec je jns inc dec aaa dec arpl push dec dec dec xor fs dec inc dec xor push popa dec sub sub outsl dec inc xor insl push push imul push ja push imul push arpl dec xor push push dec popa dec xor push pop jb imul push xor arpl outsl inc popa js je xor fs dec cmp sub inc dec push imul jae pop push dec dec ja aaa jae jne dec imul jp xor inc cmp jp push dec cmp aaa push xor dec cmp xor push inc cmp xor push xor push inc xor push cmp xor arpl inc push xor push outsb push sub aaa inc push jne sub cmp pop das push jp jae cmp inc inc inc inc jae inc inc jns inc inc inc inc addr16 push push dec dec xor ja inc xor dec js push jne bound je dec inc dec arpl js push dec cmp pop jns inc dec sub inc jp jp push dec inc dec xor push js dec inc xor push insb dec inc imul push jbe pop pop xor push push dec bound sub dec imul push pop jno outsb xor popa pop dec jno xor insb dec jbe xor inc popa jp sub dec inc push xor jp push dec inc arpl dec pop dec xor dec bound dec jbe ss push xor xor jbe dec ja cmp ja push popa jae jbe xor push imul push imul ss push jo sub aaa inc pop inc sub lea push sbb dec aam lea fcmovnu lea push sbb rcrb pop push or dec ficoml rclb push test cmpsb movsb mov mov and cmpsl aaa mov mov and lods xor movsl cmpsb lods cmp mov mov es mov cmpsb mov cmp mov test xchg mov mov sub pop cwtl ficom fstp lcall pop nop ficoml adc xchg pop push nop fmul adc mov adc out insl dec lret lret sub sub int push dec or dec int dec mov enter mov mov lea (bad) in sub out data16 or or out mov sub mov push es arpl xor inc and mov (bad) call int3 out or dec call in jbe (bad) and xchg test and adc test cmovns aam test xor loop mov sarl es imul xor mov rcll sbb xchg je jae cmp jae mov and mov test mov imul xor jecxz jae and xchg sbb cltd mov aam int sbb adc push adc push pop mov mov ret bound and leave push test outsb aam bound test pushf sahf movsb (bad) push aam fcompl insb inc dec push jae push jp arpl ja arpl dec pop xor imul or fcoml dec dec dec es into in sub inc push inc inc and stos sub xor or fmull icebp sbb sub xor sub push fwait ret xor mov or scas push xor push xchg cltd xchg dec or adc push dec cmp test sub and and in adc in xor sub and movsl adc dec cmpsb add push dec push inc pop stos sub cmp les sub sbb leave inc jmp fs mov pushf fstl or int3 xchg dec dec sub in out push outsb leave (bad) sub test inc movsb hlt xor push cmpsl cmpsb mov cmc dec fwait adc out mov xchg out cmc adc popa cmp call outsb enter sahf push push (bad) imul lcall bound lods mov mov hlt fs bound xor sub jp jb jp das push inc cmp xor inc inc inc inc addr16 inc inc jp inc inc inc inc arpl push inc je push xor popa inc inc sub xor jp dec dec fs js push jo insl dec jns push cmp addr16 push dec dec dec push push dec dec inc cmp pop push jo inc cmp ss push je push dec xor push ja pop dec xor pop inc dec outsl xor push pop imul popa dec dec jo xor popa imul bound jae xor jp imul xor push dec dec js xor arpl jp xor fs dec xor pop push fs dec push cmp push xor jp gs inc push xor inc outsb ja push dec ss push outsl push dec imul dec outsb addr16 jno dec jno ss jb dec addr16 aaa dec push jae dec xor jp push dec imul push inc push push jae insb jp insl push push cmp inc inc inc inc imul outsl inc inc inc inc dec jae push inc outsl dec push push jns inc dec push jp jp push cmp outsl jp push dec jbe js xor push je dec ja xor insl dec push ja push jp cmp outsl xor pop outsl dec cmp dec push push dec insl inc xor popa inc dec jae xor arpl xor push dec dec xor push push dec push outsl xor jp jp addr16 dec push jno xor aaa insl push jne dec xor inc push ja push inc outsl cmp xor jae dec jp popa push pop dec cmp xor gs cmp push xor push push pop sub xor sub aaa inc push jae sub push dec push xor fs sub ss das inc dec inc inc inc dec addr16 inc inc inc xor xor inc inc inc dec dec imul inc insb dec outsl js inc dec dec dec je jns inc dec aaa dec arpl push dec dec dec xor fs dec inc dec xor push popa dec sub sub outsl dec inc xor insl push push imul push ja push imul push arpl dec xor push push dec popa dec xor push pop jb imul push xor arpl outsl inc popa js je xor fs dec cmp sub inc dec push imul jae pop push dec dec ja aaa jae jne dec imul jp xor inc cmp jp push dec cmp aaa push xor dec cmp xor push inc cmp xor push xor push inc xor push cmp xor arpl inc push xor push outsb push sub aaa inc push jne sub cmp pop das push jp jae cmp inc inc inc inc jae inc inc jns inc inc inc inc addr16 push push dec dec xor ja inc xor dec js push jne bound je dec inc dec arpl js push dec cmp pop jns inc dec sub inc jp jp push dec inc dec xor push js dec inc xor push insb dec inc imul push jbe pop pop xor push push dec bound sub dec imul push pop jno outsb xor popa pop dec jno xor insb dec jbe xor inc popa jp sub dec inc push xor jp push dec inc arpl dec pop dec xor dec bound dec jbe ss push xor xor jbe dec ja cmp ja push popa jae jbe xor push imul push imul ss push jo sub aaa inc push je sub push xor push xor gs sub xor das insl push sub cmp jns das pop push ja inc inc inc inc dec inc inc inc inc inc jp popa dec inc addr16 jp dec dec dec xor inc inc dec dec push push jns push pop dec jno jns inc dec imul jp inc push inc dec cmp xor jae ja xor push push dec dec imul push push dec inc inc xor push popa dec push imul inc push fs popa push xor pop dec dec fs xor push arpl jno xor dec xor jo dec outsb push ss jb ss jno push dec jae jno ja push push ja pop push xor xor inc inc xor push imul push insb imul jp inc xor inc ja inc inc inc dec imul inc inc dec push arpl jp ss push cmp jp xor xor inc dec das dec xor jp push push push dec sub sub dec inc jae fs push ss dec imul inc push xor push xor push jo pop xor jne pop inc dec arpl xor push xor pop push dec jo xor bound jbe xor fs dec xor outsb jp jbe sub dec push push outsb inc push dec inc outsl xor dec push xor dec popa dec xor dec push push ss push bound addr16 sub arpl das jp dec dec js aaa dec push xor ja push jne dec ss aaa ja jbe dec jns cmp ja push push dec cmp xor popa arpl jae xor pop cmp outsb push je je sub inc inc xor inc inc aaa inc inc inc inc inc outsl ja inc inc push dec push xor push dec insl dec push push jns jp inc dec insb pop jns jp inc dec pop inc xor imul xor pop dec dec arpl xor addr16 xor push push fs imul dec insl dec xor popa push dec jo xor bound jne xor push dec jns xor fs xor insb push dec cmp xor je das imul insb xor outsl xor dec bound jp outsb popa dec gs cmp dec data16 dec outsb addr16 jo outsl jp jne jb ss jb dec jbe ss push popa dec xor arpl dec cmp aaa push jbe dec jp cmp push push dec outsl cmp ja push push dec cmp xor cmp xor pop push cmp xor push cmp cmp xor ja fs xor sub sub outsl sub push aaa jp addr16 das inc inc cmp jp das push push push push cmp aaa inc cmp inc inc ja inc inc outsl inc push inc inc dec push inc jae inc ja data16 dec dec dec jae outsl inc inc xor xor insb dec dec xor push inc inc dec push xor push arpl arpl inc inc jns push inc js inc inc push dec push pop js inc inc imul inc ss pop inc js push dec dec pop dec js push inc jo popa cmp push inc aaa dec arpl js dec pop dec gs js inc dec xor ja inc push push dec push dec xor imul dec push dec insb imul dec jno outsb xor push dec imul jns push push dec jne jns push insl dec jp jp push dec xor gs dec outsl dec cmp xor jb das ja dec inc push aaa dec inc push xor push dec dec dec outsl xor push push imul push pop dec jno xor pop aaa dec xor xor inc data16 das xor inc push addr16 dec push xor inc imul xor dec jbe ss jp cmp pop aaa push jp push bound inc dec aaa xor xor je inc dec cmp xor dec jae push jp addr16 push xor jo xor bound js xor data16 push jp arpl dec sub aaa inc push je sub inc xor push js das push push pop push xor pushw dec push xor das inc push ja inc inc inc inc inc inc dec push inc inc inc inc xor pop inc inc cmp arpl jp dec dec dec xor dec jp dec dec insb xor push cmp push jns jp xor arpl push gs jbe jns push dec push dec jns jp jp jns xor push dec fs ss inc push ss ja xor push jp inc outsl xor dec dec pop ja xor dec push jae gs popa inc dec jbe xor outsl dec das xor dec jp inc dec dec xor jno push dec dec xor push push imul outsl ss push xor imul push jo dec xor aaa jo jbe dec cmp xor dec das dec aaa inc jp bound inc cmp js push dec pop cmp jp outsb push push inc cmp push ja push push dec cmp xor push ja insb push bound inc inc inc inc inc inc inc dec ja inc inc inc dec dec dec dec ja inc inc xor xor pop inc inc push dec bound js jp je jae jns push inc dec inc xor addr16 push jbe bound jne pop pop dec push xor push inc pop push dec insl cmp addr16 popa push dec jno xor bound jne xor push pop js xor push jp outsb dec xor imul dec ss xor addr16 dec inc pop xor jp xor push push push xor jp jb dec pop xor push push dec inc cmp dec pop dec xor dec arpl dec pop xor dec imul dec insb push ss jno dec je ss jb dec addr16 aaa inc inc je dec xor gs jne dec aaa push aaa ja jbe dec cmp inc push push dec cmp inc inc xor pop xor imul push jno sub cmp xor push das dec push cmp inc inc inc inc inc dec push inc inc inc inc jno inc dec ja push jno dec outsl ja jp xor addr16 push inc outsl dec push inc ja inc inc outsb dec push pop js inc inc imul js jp xor xor dec insb dec push js jp jp push jns inc dec jo jp jp push dec push dec xor fs inc dec xor push popa dec sub cmp jns push push xor pop outsl dec jbe xor addr16 dec popa addr16 dec jo ss jno dec jae ss js aaa dec jp inc dec xor imul dec cmp xor dec sub inc jp dec push inc outsl cmp inc inc cmp xor dec cmp xor push inc cmp sub imul push xor push fs cmp push addr16 gs inc push jo push sub aaa jp insb ja js cmp inc inc ja push inc arpl inc inc dec jp push dec dec xor je dec push dec gs cmp dec dec xor xor data16 inc push pop push andl push xchg dec aam push push push or lret rclb into (bad) daa movsb push adc sub mov push mov pop push add rolb imul ret dec (bad) imul adc ret cmp push bound inc pop (bad) push xchg inc jb roll cmp fsts sarl push xor popa adc cmp mov inc repz push movsb out xchg and inc xchg xchg out jae fs adc out push es push xchg out shll push inc and out inc and cmpsb es gs and test xor cmpsb aaa add movsl push xor jecxz mov movsl inc inc push out inc inc movsl inc jae hlt push adc cmpsb xchg ret dec and jp dec mov mov jns mov andl jae mov mov or jnp dec mov jns mov (bad) (bad) jnp ret or mov int inc push loopne es aaa mov fstp xchg adc rcll pop pop adc lcall (bad) mull mov jb mov imul movsl xchg out adcl movsl fs xor insl dec insb jmp or es lea ljmp push inc inc push mov mov fadd fldl sbb in inc push sahf xor pop dec cmp xor gs cmp push xor push push pop sub xor sub sub mov fwait mov movsl test and sub sub aaa mov fstl test hlt test xchg outsl js inc dec dec dec je jns inc dec aaa dec arpl push dec dec rorb call dec das dec or movsl push inc outsl inc dec inc xor xor mov push fnstsw push lods lds pop lea popa and mov sub xor dec dec pop mov sbb mov cmp cmpsl sbb cltd mov mov fsubrs lret mov ficom out ljmp cvtpi2ps pop add adc sub inc inc dec add sub push shlb test enter jb inc push push in mov mov stos and test loop inc adc or add test sbb mov lock aam ljmp fs xor lret lret lret iret mov lds test xchg push push cmpsb movsl ss in xchg popf mov out adc xor int out das dec sub into sub inc bound rcrl pop xchg mov dec rclb or hlt aam mov push inc insb push dec pop xchg mov cmp out xor inc push xor or cwtl into adc sbb rorl push mov addl (bad) push pop test ret repz xchg mov adc push or adc rcll inc xchg or cltd push nop rclb mov stos sub sub dec dec sub mov xchg pop rorb adc xchg xchg or aam movsb and adc xor and scas dec push jmp inc push xor test inc fstps fcomps hlt loop mov jne add (bad) and and push leave or out adcl outsl add adc into and mov or push and sbb rcll inc push add cwtl mov inc xchg movsl test xor push inc push dec adc push xchg in inc bound or data16 lret repz and dec sbb pop int sahf lcall int imul dec int ljmp insl mov lods sbb insb pop hlt ficomp xchg aam mull and cmp inc dec xor mov aam jmp test push xchg adc dec jp inc dec insb enter bound adc xor les sub ret ret cmp mov pop cmp mov lea xor je adc (bad) popa sub jno jnp shrl daa mov xlat adc inc test sbb mov pop sahf jo outsb outsb test popa clc popf fsub dec push xor les sub sbb pushf cmp push pop inc lds fidiv mov inc je test and xchg add inc jae inc ja data16 dec enter fwait and bound dec sub pop rcll stos mov dec das add adc (bad) and andl add adc jl or lods mov sbb mov mov out sub xchg xor inc and cmp sub (bad) stc lea cltd push adc les sar xchg dec rcll adc rcll adc or sahf xchg (bad) adc (bad) rorl sbb rcll ficoml xchg sbb adc fcmove push rcrl rcr lea adc push dec aad popf sbb int3 cltd int lcall int3 pop pushf fstl adc adc or adc adc or xchg sbb (bad) sbb aam xchg dec ficoml rcll or or sbb dec fstps dec or adc rclb push push push nop push adc push push push dec push push push pop (bad) adc mov push pop fstp ficom push adc or pop lcall pop ficom ficomp xchg sbb cwtl fimul adc pop push pop xchg ficom push lcall fimul pop fxch push lcall pop adc popf int3 dec aad or xchg sbb cltd push sbb popf fwait int3 popf adc int rcrb adc or xchg push ror or xchg ficompl int sbb dec lcall or ror push dec int3 xchg sbb dec rcrl popf fcoms push sbb adc dec or sahf fwait xchg adc dec or sbb dec push lcall fistpl lea push push nop push nop push pop rclb push rcll rcrb xchg adc push dec push push xchg adc rcrl push or pop (bad) pop push pop xchg push xchg nop lea aad fstl pop xchg push push xchg or xchg push push xchg xchg fwait dec or aad push push pushf dec or lcall mov push pop adc sbb ficomp dec rcr cltd aam rcl dec adc cltd int rcrl adc rclb pop xchg rcll dec sbb rorb push lcall pop push fwait nop push fmul or xchg fsts aad ficoml xchg xchg sbb xchg fistl dec xchg fstpl int adc aam rcll rorl push sbb dec fst sbb int ficompl push adc or push push mov pop fimull or push push push xchg or dec ficompl or push nop push push push push push push pop push push push pop aad nop pushf push push pop fstp push nop int3 push push pop (bad) aad sbb push adc rcll pop xchg push push pop adc adc sbb xchg int pop fstp or pop xchg pop adc lea push xchg adc ficom dec xchg pop cltd push xchg rcl dec push pop pushf adc fcmovu mov push push xchg adc fwait rcrl cltd int fcomps pop push pushf push rcr sbb pushf adc aam lea aam ficom adc ficompl or push lret rcrb rclb sahf popf adc nop dec push pop mov push fimull pop adc pop into pop xchg or push sbb dec dec lcall push pop lea sbb ficom push adc push pop rclb rclb push push push xchg adc sbb pop dec push push push adc xchg xchg mov cltd popf int3 push push push push push lcall adc xchg mov fwait into or pop cwtl pop push popf sbb nop pop cwtl (bad) mov sbb int xchg sbb sbb sbb or sbb xchg aad int xchg sbb pop xchg sbb mov xchg fsts fwait push fstps sbb pop pushf push push fcompl pushf ficompl mov sbb push ficomp aam popf xchg ror push or adc int3 push adc sbb dec adc sahf sbb sbb adc into or popf aad adc dec push fimull pop fimul pop push or adc xchg dec rclb int3 or aad pop adc adc lcall int3 push or dec fistl int rclb push push push push push dec adc push push pop fst push nop ficom push push pop int3 adc fcmovu adc lea sbb mov sbb adc rcrl pop dec rcll xchg rorl lcall ficom xchg (bad) sbb xchg adc sahf xchg xchg xchg xchg adc xchg into adc sbb pushf dec or push sbb (bad) fxch int3 ficomp dec adc aam sbb xchg dec or lcall aad rcl aam or adc push dec push ficomp dec push pop fwait sbb rcrl push push (bad) cltd int adc pop rcr popf int adc sbb adc pop int push pushf pop aam pop into pop lcall rcl or dec fcoms pop push sbb dec ficom or lret or or aad dec push or mov push push push dec rclb push nop push aam push push push push push push xchg pop aam adc fstl adc push adc pop mov sbb pop or or pop dec push adc pop sbb pop rorl ficoml push push xchg int cwtl (bad) dec pop sahf xchg sbb nop dec push aad push push lcall adc cwtl push xchg pushf sbb pushf lcall mov nop dec mov xchg adc sbb rcl push dec sbb lcall ficompl int pop fwait rcll push dec rcl sbb dec fcomp popf push adc push dec fstl int rcll ficoml into adc sbb dec adc adc into sbb fxch sbb adc push pop mov push adc mov adc or adc pop into pop fimull fcompl lea dec ficomp int3 push sbb fsts popf lret ficom rorl push rclb push pop rclb push xchg xchg push aam fcoms rcll push xchg pop fcoml adc push rcrb ficom pop adc adc sbb xchg fcoml pop fstp or adc pop lcall pop pop ficom xchg xchg rcrl pop pop adc ficoml (bad) push xchg adc pop xchg pop xchg adc rclb adc push dec pop adc into or push push push xchg cltd push or push xchg sbb cltd dec or sbb int3 push pop xchg push rcrl push push rcrl sbb mov int3 ficomp cmpl xchg aam sbb adc rcll adc or sahf xchg (bad) adc (bad) rorl sbb rcll ficoml xchg sbb adc fcmove push rcrl rcr lea adc push dec aad popf sbb int3 cltd int lcall int3 pop pushf fstl adc adc or out inc sub or pop or daa das or aam stos sbb and shl lods lods adc push inc loopne mov inc int mov inc aam mov call inc dec push inc dec and lods and sbb movsb mov mov and cmpsb movsl sbb cmp sbb aam pop ficom ficomp xchg sbb mov xchg stos lcall cltd mov and cmp stos and (bad) rcll sarb lds imul mov xchg adc leave rcll mov movsb sbb cmp movsl xchg aad aam ficompl int sbb dec lcall push or sub out mov jmp (bad) dec in dec or or push push mov push outsl dec dec lret cmpsl or rcll inc mov adc je bound push pop dec mov push xor sbb loopne jmp repnz aam mov cmpsb in pushf les mov xor push inc pop push dec insl cmp adc test or (bad) les sbb cltd test sbb rorl cltd aam rcl dec or push mov push sahf lcall lea call dec insb leave jmp cmpsb scas (bad) dec enter xchg in lret es (bad) ljmp inc dec insb inc cmp xor sbb mov call outsb daa push in dec leave cmp in inc sub loope adc dec (bad) mov data16 pop adc mov inc xchg in dec jnp sarl add pop fs push jno aaa mov cmpsb cmpsb mov mov adc rcll pop xchg push and imul cmp mov ss mov pop lea push xchg adc xchg mov dec das dec (bad) adc push dec enter repnz and and adc inc rorl mov pop xchg fsub outsl push dec js aaa adc repz mov jns pop mov sub inc or inc push xchg daa mov mov add inc and mov xor xchg rorl or xchg es ja push inc arpl addr16 movsb test push sbb and in pushf int3 fs test and (bad) jae dec xchg mov jp mov test cmp pushf leave add (bad) xchg test mov dec jae xor dec push dec sub lods sub cmpsl mov sbb push aam int arpl mov fwait xor cmp mov mov (bad) jmp out and jp inc inc sbb cltd and sbb mov cmp push mov xchg inc out inc push push xor les je stos and pop push mov xchg mov sbbl cmp add or outsl sbb adc or sbb pop int3 dec mov or imul sub xchg mov adc dec out push inc dec inc push xor mov jb or bound mov push (bad) fxch enter out inc lds inc (bad) mov jp imul sbb rcl dec xchg mov fcomps (bad) shll lcall aad adc xlat jno lcall adc notl rorl enter push sbb pop push sbb dec ficom or pop cmpsb test push imul mov adc adc adc inc cmp push adc and es nop loopne cmp push dec dec dec jo jns push dec addr16 xchg push adc leave int3 imul dec dec or and popa dec dec jo cmp mov and dec dec inc dec xor (bad) fimul inc je dec xor sbb xchg int jbe (bad) out shlb jae cmp ljmp sub in inc add roll push mov jecxz xchg mov arpl pop (bad) int3 push sbb mov push or dec rclb (bad) xchg inc and mov and mov push test out sbb dec fs imul and les mov pop push sub sub dec jo mov xchg gs mov stc sbb mov arpl dec insb push ss inc xor arpl inc inc inc inc arpl inc dec inc inc inc inc inc addr16 push dec imul popa imul xor push push aaa dec jp bound push das arpl addr16 inc inc push inc inc inc inc dec arpl push dec push dec push push aaa dec push push dec dec pop xor dec insl inc aaa sub dec xor jns push inc cmp pop push addr16 push dec sub cmp cmp inc inc inc inc imul push inc inc inc inc dec inc ja push inc push dec inc js push inc dec jno jns jp js outsb push jp push pop dec dec jo xor dec popa inc xor dec popa ja jae insl xor addr16 dec arpl xor dec jae ss xor inc inc inc inc outsl inc inc inc insl inc inc inc inc inc inc xor push dec push xor dec push bound push xor dec pop jae outsb push insl outsb dec bound jne outsb inc dec arpl xor dec arpl dec push outsl insl dec push ss push arpl inc imul jae xor dec push je dec xor imul xor jns jbe dec jp cmp js push inc outsl cmp js push dec xor outsl jp xor dec ja cmp pop push push ja pop inc xor push popa xor xor push push inc sub xor sub aaa inc push je sub cmp push cmp cmp inc inc inc inc ja push inc inc inc push inc inc inc push addr16 inc outsl ja inc inc gs dec dec ja push inc dec dec push imul inc inc dec push xor jp js pop jae push pop imul inc je bound ja dec dec dec fs js jp jo dec js push inc dec dec push dec insl dec imul inc dec fs insl outsl jns push dec dec dec jb jns push jae push dec dec dec xor dec cmp arpl push dec dec inc inc xor push dec dec xor ss xor cmp push push push pop dec push xor pop push outsl dec pop dec xor push push dec pop outsl xor push imul xor push pop dec gs cmp push pop push pop jne outsb xor bound je xor push outsl dec jbe xor arpl js xor arpl jp xor fs dec xor push push imul xor gs dec xor imul dec dec cmp xor jp fs sub cmp inc dec inc addr16 push pop dec inc dec xor inc push xor inc push xor push inc dec dec push xor push push dec dec xor jb push dec inc xor dec push xor dec pop xor insl push insl outsl dec arpl jp outsb bound push xor dec imul push jb dec jae cmp dec jns aaa dec push je dec xor popa inc jne dec xor aaa insl jp push dec ja cmp ja push inc imul push js push inc xor push jns push dec inc cmp jns push dec dec cmp jp push dec outsl cmp xor push cmp dec jp dec push push cmp bound dec push pop push cmp xor push arpl xor push inc inc inc push inc cmp inc inc pop inc push addr16 inc push xor push jae dec inc xor xor dec ja addr16 push inc dec dec xor push push dec dec push xor push arpl inc xor push outsl dec dec ja jae push xor xor push inc dec dec push xor push dec dec dec inc xor inc push pop dec dec ja xor push imul xor inc push ja push push xor inc push cmp inc xor push dec dec push ja inc inc push push dec push xor push outsl dec push ja dec inc push outsl dec push ja arpl dec pop ja inc inc inc inc xor inc dec inc inc inc inc push push js inc inc inc dec addr16 inc inc dec arpl push jns inc dec xor ja push inc dec dec dec insb push jns inc dec imul jns inc dec cmp push jns inc dec push dec jo jns dec inc inc inc dec addr16 inc inc inc xor bound ja dec inc dec arpl jp dec push dec fs js inc dec arpl inc js inc dec outsl dec gs cmp dec data16 inc inc inc dec addr16 jns inc dec dec dec push dec pop dec push dec imul jns inc dec ja push jns inc dec cmp inc jns inc dec dec dec imul inc dec push dec insb addr16 inc dec addr16 insl push jns inc dec jae outsb inc jns inc dec xor outsb ja addr16 dec inc dec outsl addr16 inc dec push dec jo jns inc dec arpl inc jns inc dec outsl dec jno jns inc dec xor addr16 inc dec inc dec jae jns inc dec dec dec je jns inc dec pop dec je jns inc dec imul jns inc dec ja jbe jns inc dec cmp inc jp inc dec dec dec ja jp inc dec push dec js jp inc dec addr16 jns jp inc dec jae jp jp inc dec xor aaa addr16 inc dec pop dec insb ja pop inc jo dec addr16 inc inc push inc inc inc inc inc inc inc inc inc outsl dec sub cmp dec ja inc inc addr16 pop inc inc inc inc xor dec sub aaa inc jbe dec xor popa inc js push dec inc cmp jns push dec ja je jp push dec cmp inc jp push dec push cmp inc ja push push inc cmp xor push cmp xor fs sub inc aaa ja push cmp xor imul aaa addr16 js das arpl inc das das inc cmp inc dec inc xor inc inc ja inc inc inc dec inc inc ja inc inc inc dec dec addr16 inc inc imul ja inc inc push dec dec ja xor inc imul ja inc inc xor inc inc js inc inc push dec push ja dec inc inc dec dec push push js inc inc inc dec popa inc js inc dec imul js inc dec dec dec push jns inc dec arpl push jns inc dec outsl dec jb jns inc dec jae addr16 jp inc dec push dec xor push inc dec imul jp inc dec push dec aaa inc jp inc push arpl addr16 inc push push dec inc push xor push addr16 inc ja push push pop dec dec xor push imul xor inc push pop dec push inc xor dec dec push xor push inc dec popa push xor push xor inc xor pop outsl dec push xor pop arpl xor pop push dec insb ja inc popa inc dec jo xor popa xor jae xor imul dec xor popa inc fs xor outsb inc imul xor inc dec sub ss data16 das xor imul xor inc push xor inc imul inc push dec dec addr16 inc imul push xor dec push inc xor dec pop push xor dec bound xor dec gs inc inc outsl push ds cmpsl daa mov fwait and and mov add or cmp lds lods cmp pushf rcl push mov (bad) leave push mov popf add or or sub or mov or mov out dec mov stos es dec dec test in test in mov imul (bad) das dec or dec ljmp or pop sub dec add fisttpll sbb cltd add adc shr xor xor push imul cmp adc int mov cmp adc aad jmp mov aad mov fisub hlt adc mov cwtl lcall sbb xor stos lcall mov mov adc aad mov leave push mov aam jmp pushf fldenv test lea push (bad) cmpsb (bad) sub jmp out es movb sub push int or popl or xchg or out das dec jmp or push es es dec movsl push stos stos or inc call imul cmp or push mov aam into lcall lret xchg out out mov mov mov mov lcall mov inc ja (bad) and jne test (bad) inc push xorl xchg inc push test test ja xchg aam mov push inc cmpsb inc (bad) (bad) notl xlat daa aaa xchg inc movsb (bad) xor aaa movsl xchg movsb hlt movsb rcrl into adc or xchg push xchg xchg xchg dec sbb mov nop mov xchg xchg push xchg lea pop xchg fwait rcll stos pushf mov mov or int3 scas out lret int dec sub out bound je xor outsl dec jbe xor arpl js xor arpl jp xor fs dec xor push push imul xor gs adc cltd pop push lea xchg mov int3 push cltd cltd adc mov jp dec mov push or call dec sub jmp dec sub daa mov lods inc inc cmpsb aam sbb mov data16 outsb bound les inc jns lret adc adc inc jne dec xor imul lcall inc (bad) and xchg mov add (bad) pop or push dec aam fs push dec and roll add and add sbb xor push push inc inc adc lds popa adc cmp int and xchg adc inc fadd popf adc cmp dec inc cmp inc ss mov cwtl daa es test pushf fwait adc mov sbb sub adc cmp inc test adc and movsb cmpsl sub cmpsl sub cwtl movsl and mov sub dec push xchg pop and push fs inc (bad) (bad) ja xchg fs xchg xor xchg pop xchg and es dec adc xor mov repnz add cmp inc cmpsl ja je test ja and int3 mov inc jl or and and pushf dec sub dec inc dec cmp xchg xchg mov push adc and cmp inc cwtl xchg (bad) jno test dec arpl xchg fisttp or mov sub dec imul xor xor leave test inc dec push loop jns pop and and jle jae cmp (bad) stc sbb int3 in (bad) sahf push into outsb addr16 and inc xchg push add cmp cmp dec dec js roll and mov mov push into cwtl push (bad) mov mov mov push adc mov cli inc cmp push dec mov pop push mov test test sbb xchg bound loop inc adc xchg rcll lcall mov push inc loop pop cld dec sub xchg xchg fs push inc adc cwtl in outsl dec xchg lea cmpsb and or popa xor jae xor adc xchg xchg xchg fnstsw into es mov and cmp cltd mov rorb xor (bad) stos sahf test ret dec dec scas js cltd icebp aaa stos cmpsl mov fwait sub sub daa mov fwait xor mov cmp cmpsl mov aaa mov cmpsb and cmpsl cwtl test lods and aaa cmpsl lcall cmpsl fwait mov aaa cmpsl xchg mov mov and cwtl sub cmp and pushf and test test cmp cmp sub cmp and cmp and mov stos and mov sub cwtl sub pushf mov sbb test test mov xor pushf cltd mov cmp xor sbb mov sbb test xor test and sub xchg movsl mov mov mov sbb xchg mov adc xchg mov sbb xchg cltd and mov adc mov mov cmpsb mov and stos mov test mov and mov cmpsl mov mov test and lods cmp mov mov cmpsb test mov es mov es and mov cmpsb mov mov cmpsb cwtl mov xor mov mov aaa mov mov pushf es mov cmp mov and cmpsb mov sub cmpsl sub aaa cmpsl sub sbb sub cwtl mov sub mov sub mov sub mov mov mov xor cwtl mov xor and xor sub mov test fwait and cmpsl xor cwtl pushf mov cmp cmpsl xor cltd and mov mov xor cltd mov xor cmpsl xor sub cltd sub sub cltd sub sub cltd xor sub cltd xor mov movsb cmpsl aaa mov stos cmpsl cmp cltd aaa and mov cmp mov cmp xor movsl mov xor daa sbb cltd mov xor mov xor xor cmp and lods cmpsl mov cmp cmp cmp cmpsl mov cmp cmpsl mov cmp mov cmp cmpsl mov cmp daa mov cmp mov mov mov mov mov and mov cmp mov and mov mov cmpsb mov mov cmpsb mov mov cmpsb mov mov lods mov mov adc xchg mov sbb movsb test mov mov adc pop lcall mov mov cmpsb mov and test test mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov test sub sub daa mov xor mov cmp cmpsl mov aaa mov cmpsb and cmpsl cwtl test lods and aaa cmpsl lcall fwait mov aaa cmpsl xchg movsb adc and inc adc dec adc mov mov in inc sub dec (bad) or test inc jp dec push cmp xor push cmpsb sbb stos and mov sub inc inc es ret or lcall adc mov pop jp stos sub and pop (bad) and ret ret mov dec orl cmp aad or xchg mov sbbl sbb push push push push push push xchg pop rclb adc push adc push adc adc rcll cltd fstp xchg adc push push fstp aad pop rcll adc push sbb (bad) pop test cs sub mov or inc mov mov scas mov es outsl dec addr16 xchg xor add xor inc jmp xor popf jmp out inc dec cmp xor mov test sub cmp lds pop mov (bad) or or sub mov sub sub and dec dec pop mov and out jmp dec lock ret and or int3 cmpsb ss pop jae mov nop (bad) mov fs xor xchg adc sub mov enter int out pop inc dec imul movsl cltd xchg push push lcall outsb xchg push adc mov test popa addr16 jno test cmp adc cltd xchg mov cmp inc inc test inc (bad) movsb inc push adc push adc aam push sbb sub loop imul (bad) sahf out cmp dec cmp rcr mov mov xor test sub and pop andl es mov inc stos imul jmp cmpsb mov nop jo mov pop lret test push push pop lcall adc dec dec dec push push xor dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fcomip adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc add add add das sbb out push ficom add nop push adc push xchg xchg inc mov fsubs mov push add mov push rol add mov and or dec or add pop dec das or lcall aas sbb jg ret or and xchg (bad) adc mov or mov movsl add xchg sub test insl mov sub sarb adc xchg testl cwtl cmp sub ret cmp or or push sbb popa xchg orl sbb sbb sbb sbb sbb sbb xchg push dec sbb jecxz lock cwtl lcall stos lcall mov es sbb sbb gs or ret or gs or ret or or test inc sbb or stc adc ret or jo or inc adc ret or ret or lea sbb sbb sbb xor popa xchg popa xchg popa xchg popa xchg inc sbb popa xchg popa xchg loop sbb sbb sbb sbb adc sub pop mov xchg popa xchg popa xchg popa xchg sub ret or ret xchg popa test xor and ret or ret or xlat xchg xor or mov push xor or ret or ret mov push inc or les ret or ret or push or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or ret or int3 push fidivl scas fldenv mov push in in hlt push sub in push or addl int push pushf lods inc scas adc xor add ret cmpsb or popa rorl push lahf add shld adc adc in xchg or mov pop out push bound adc adc sbb xor inc add test adc sub or add adc mov js or ljmp sub or sbb pop add sbb mov sub xor inc fs and aam inc sarb imul rcll xchg pop push xchg gs rclb cwtl xor cmp mov dec rolb xchg popl shll cmp cwtl in aaa add mov stos or movsb adcl bound cmp sbb lret inc test sbb mov movsl or adc imul adc dec in xor adc jecxz adc push mov and sahf mov adc adc loopne add xchg jl adc jo inc dec mov sbb aam mov imul pop pushf xor sbb mov xchg mov cmp xor movsl repz sub sbb sub adc repz and gs in cwtl (bad) js mov adc nop push adc xchg jno (bad) sahf xchg repz xchg adc push mov dec addl push sbb sbb adc jecxz mov adc mov rorl push pushf xchg inc add inc or sbbl push je sub push inc nop loope mov push addr16 clc xor push mov movsb cli sub (bad) cmc add sbb popa push cmp adc jns dec dec mov ret lcall push pop fdivs push mov aaa (bad) loope mov je inc call mov sbb add jo dec cli mov jo inc pop fdivs inc adc (bad) xor clc popf ss push orl and jecxz adc adc adcl push push jo (bad) loope pop lods icebp add push jo (bad) loope add sbb pop arpl ret adcl xchg sbb xor loop std arpl sub adc mov sahf nop icebp addl loopew push mov arpl mov mov imul xchg sbb xor adc xchg into push adc into adc dec leave xor dec dec mov (bad) mov sbb add ret adc inc roll repz sub subb ret fwait cmp add add lret adcl inc adc repz popf and popa and imul mov sbbl pop inc adc repz add adc adc inc adc pop mov fs adc out gs out adc inc int mov adc pop adc data16 sbb or inc test lods sub sbb adc cmp aam jbe sub pusha lea dec test test xor xor cwtl inc and into push dec add and add addl adc mov inc push arpl add dec or add mov xor daa sbb pusha roll jb arpl mov mov sbb mov adc dec push mov aam call add adc jle inc sub add jae inc daa add and addb orl push enter xchg sub or stos pop add orl xor rcl cmpsb js aam pop aam push cs call sbb loop lds adcb in in lods stos ss pop add pop fidivl push sbb adc lea sbb mov aaa or inc sub and push and mov fwait pop lds pop xor xor xor cmp adc xchg outsb (bad) repz jne in xchg shrl cmp jo dec dec test push add jne xchg push cmp popa leave xlat xlat xlat xlat xlat xlat xlat adc xlat push mov roll test mov jecxz sbb imul add dec sbb (bad) add out mov sar ret js lcall in pushf jne inc and pop push inc dec fidivrl ljmp and pusha and in test sbb push enter xor imul bound insb aas addr16 mov mov ds ret add nop pop cwtl pop mov add and sub push and lods mov test punpckldq hlt xor arpl out pop movsl cltd rol xchg sbb in rorb sbb push cmp jecxz mov mov stos cmp push push icebp in cmpsl stos int3 dec push inc test jecxz inc jg (bad) xchg jne push push push cltd inc lcall dec push lods pop push mov stos sub jo or outsl pop movsb arpl or inc daa mov add (bad) (bad) cmp fisubl xor jne movsl mov mov xor cmp dec cmp cmp cmpsl push hlt loop (bad) movsb addl loop xchg cmpsl imul inc imul lret cmc fisubl adc mov test inc aaa icebp and lods sbb lods roll and xchg stos sub or add movsb inc movsb xchg stos sub test jnp out pop push jp pop andl xor sub cltd pop lds inc loop xchg cmpsl clc sbb inc stos push inc insb pop or sbb lods (bad) mov adc sbb cltd sbb jmp sub xor test data16 push sub insb xor js loopne xchg pop (bad) out dec cwtl mov in test inc sub xchg pop mov icebp dec jp xchg pop enter outsb push subl xchg loope ljmp and lods xlat mov insb jmp sub xor mov aaa fldenv inc or mov stos enter aaa rorb or aaa xchg xor icebp and ja push and cld enter xorl cmp and push push push adc mov fildl mov inc jb mov adc push ret jmp shlb inc stc mov pop sbb push mov xchg mov data16 fwait test and jne cmpsl dec je inc test loop aaa inc test stos add cmpsl push inc repnz adc lods (bad) jbe xor stos push mov movsb dec inc fs mov ss jnp stos push push loop icebp cmpsl insl je (bad) (bad) xor push push pusha mov mov inc in add sbb mov movsb xlat inc in add test pop in add mov (bad) jae loop out in sub fdivrl push rep add es mov add lods cli jne mov es adc or push or jae lahf or imul pop mov mov mov xchg xchg and ja dec and jmp jbe (bad) jbe xchg xchg sbb mov sbb xchg sbb rclb int scas loop or ss (bad) mov sbb clc lods mov jp leave lea dec xlat scas pop and shrl pop lods inc push sub sub pop sbb push arpl clc push gs add arpl mov stc push stc dec je int adc push mov mov scas rcr inc enter les jmp (bad) arpl push jmp mov adc (bad) jbe xchg jnp gs mov stc std xor and (bad) mov fadd dec enter inc jno nop dec pop mov test adc in sub inc (bad) fwait and jno dec ud2 rcrl (bad) cmp pusha leave pop lret mov test bswap and test lret inc mov adc inc imul lds aad add xchg mov inc inc sub xchg mov popa and adc xlat frstor push jo (bad) jbe xchg and (bad) pop mov and jecxz mov popl (bad) ret or sbb lds xlat mov pop outsb jns faddl scas pop pop rolb mov xor mov out and stc stc out ret lock clc jge inc pop mov xchg inc rorb mov adc stos sti rcr mov push add test enter and pop (bad) xchg push out and rcr push adc ficomp dec es mov adc es sub call das jo mov icebp adc sub lods (bad) cmp fdivs loope mov push lea inc std mov sbb xor divl ror ss outsl pushf pop adc push add mov sub push push orb scas adc xor mov les popf fadds mov data16 sbb dec fwait xor sbb je or sub adc nop (bad) in popf push faddl aad jne stos insb aaa lea popa ljmp stos pop or mov push daa leave xchg lock nop cmp cmp cmp sub push mov sbb sbb push mov movsb pop insl dec cmp jnp sub add gs xor and out jecxz dec jbe out out ficoml dec pop aaa sbb mov inc mov xor (bad) bound aad in mov xchg cltd xor sbb clc vxorps not mov or jb mov ss imul fwait sbb cs cmp sub insb jnp scas xor dec pop (bad) xor ds xchg xchg dec rolb test mov jns cli mulb enter xchg ret push add xchg retw lock insb test cmp enter pop fcmovne pop (bad) ja loopne orl xchg addl or sarb mov enterw es push push dec cltd ss sbb adc leave gs xchg adc or pop push sbb mov dec and dec or rol mov dec xor add data16 xchg or pop fs ja lds adc sub mov icebp mov call pop and inc pop mov dec test and in (bad) arpl fadds mov inc xlat jae fs outsb in (bad) out or mov jp xor rclb xor sub inc and inc lret and movsl int3 xchg movsl sbb push test shrb mov stos mov ja push inc adc (bad) pusha mov rclb and test jae sbb mov sub pop jmp (bad) lds sub mov insl (bad) lret adc lods adc sbb pop mov movsl outsb add jne adc or sub jo data16 (bad) imul or xchg xor push mov adc dec cltd pop int (bad) xor sub sbb add xchg add pop lret add xchg add lock fadd aas pop cmp rorb sub test sub push mov mov inc and popa (bad) (bad) in mulb mov test (bad) call mov les mov nop mov or inc inc and cli mov xchg mov xchg mov ret xor stos pop (bad) mov sub arpl mov pop mov add mov jo jnp ljmp fwait inc and je push mov addb lahf fild add call inc imul push insl adc push xchg add int3 or adc adc (bad) add or fcmove pop test sti pop xlat dec (bad) fabs movsl xchg sub cmp ss dec dec sub imul lcall inc mov loop pop push loope push arpl push xchg lods xor jmp jnp rcll xchg jl es aas ljmp push les cmp outsl pop mov je icebp mov mov and or movsl (bad) enter dec mov popa xchg outsb cmp sub insl and push shrl push out sbb loopne sahf daa movsb dec sbb pop adc ss pop push sbb pop je stc jecxz mov call scas popa dec pop pop sbb jo mov pop iret in sbb mov xor sbbb dec and insb or inc sbb xorl push inc adcb cs (bad) add pop pusha mov cmp adc adc push xchg sub xchg sub jo adc pop sub (bad) out ret (bad) inc xchg cmp add lret cwtl add dec adc mov cmpb jmp shrl jl push sbb add (bad) (bad) xor inc es adc sub cmpsl mov sub fdivrl push and mov dec lods jbe push loope pop testl mull sahf iret jo in les stos mov (bad) loopne push dec (bad) xor adc pop pop out lods ljmp add xor cmp jb inc or ds adc pop lcall or pop movsl (bad) lret lods adc jno in lock sbb mov sbb lds push xor add or jno pop push jmp jae sbb sbb add sahf sbb mov or or int add int3 and add add mov xchg sub daa lods and roll and int inc dec cmc ret aad xchg outsl sbb in pop sahf push xor or mov test sbb arpl sarb test or push inc push test int3 mov outsb sbb pop cwtl mov jbe adc xor adc sub sbb push sub cmp mov aaa pop xor les loopne leave movl or push or mov mov (bad) push cs pop fnstenv ret leave cli mov stc dec cwtl aad pop cmp insb mov fsubrs out xchg repz or push cmp sbb int3 (bad) and jo aas data16 lsl or cmpsb mov rclb (bad) fdivrl pop push cmp add psrad lock dec add (bad) pop xor pop xchg xor loopne int3 fadds or sub mov das inc xchg in xor mov shl rorb lods scas inc or push fnsave mov mov push sbb outsb xchg xlat push jae xchg push enter pop inc ret push mov popa push dec daa cs fs pushf inc adc rcr lret pop inc mov imul xor inc ret lock mov pop jb lcall or cli loope rcrb test mov sub and mov stos arpl ds cmpsb pop cmp insb dec loop mov pop adc adc add cmp jl cwtl inc dec cli enter inc dec mov sbb add dec mov mov cmp cmpsb mov fisubrl insl xlat or pushf out movsb or add pushf shrb pop sbb mov xchg insb push mov lock popa xchg xor xor cmp fmulp pop dec adc xor clc cmp sub out popf xchg cmp mov cltd pop cmp inc roll jae push xor ljmp inc inc xchg in cli pop jle fwait test dec stc cmc fdivrl cmc (bad) xor fsubs pop cmp repz dec in loope pop mov jmp inc push test xor cmp inc data16 xor stos xor sbb pop mov or xchg mov cmp xor add (bad) in out es push dec jmp inc xor adcl add out cmc mov mov xchg xchg cli jp bnd out push imul sub xchg mov adc lods (bad) jae sbb dec jns mov outsb cltd stos jns test dec push out push imul inc pop pop or call jns mov xor mov mov (bad) stc dec pop xlat lods xchg ret (bad) mov dec in inc dec push inc out push data16 push jmp inc fidivl adc shll mov jmp jnp add xor daa jb or inc inc dec dec or (bad) mov cli aaa add nop xor xor lcall inc (bad) shr data16 xchg loope push imul xchg adc jae jnp dec lods jge fdivrs cmpsl out ret insl test mov mov fiaddl jae add mov subb mov lock test fistl add js mov dec (bad) rclb jae add and loope jmp mov mov inc mov mov pop adc cli repnz nop inc fwait int fwait rcl nop mov nop adcl push adc pop add push and rcrl rcrl inc pop or mov inc mov jae inc insl cmc push aam aad sub xor ret gs mov rcl rcl rcl push push aaa xchg popa push xchg jno xor cmp xchg cwtl jae repnz jns movb mov popa pushw xlat add dec and add lcall adc jl daa add add mov jb icebp push and pop gs pop inc loope xchg and cmp and and shrb mov inc push mov push or push and push mov xor cli repnz jno pop dec jns push clc lea lcall mov pop jecxz lcall dec push and vpaddq mov ret xchg mov mov mov push pushf fcmovbe roll sub jecxz xchg push imul add mov test and add pop add add jae xor int jnp aam xor sub test aam xchg dec mov push mov cwtl std inc and cmp and jns xor inc pop xorl rclb adc inc pop stc push ss or cmp pop test pop cmp std or (bad) std or mov add cmp pop dec and dec and push push push push or xchg jecxz push sbb repz push push push push push push or ljmp call jne dec fidivrl dec sub es push push push push push or or fs test cmp inc xchg andl andl push pop sbb stos and xor or push pop or and imul xor mov push mov and push cli loopne jl adc inc xchg mov pop add and je enter enter dec fwait add int3 inc jno js pusha pusha cmp loopne add enter xor add xor pop or jl test mov or mov cltd or cltd add mov cmp test push test sub (bad) xchg inc pop jle or (bad) call push loopne daa mov ret inc mov sbb or add js insb cmc loopne and adc and enter aam pop ljmp sub mov lods push cmpsl mov xor add (bad) xor sbb or lret adc mov enter add push xchg mov add fisubl test cmp aaa or push mov ret or dec mov inc test mov sbbb xchg test and xorl sbbb cmovb out fsubrs pusha das add or pop dec or push mov xchg dec dec xchg inc dec xchg es shrb jle add or rorb add outsb add rcrb (bad) out push add in (bad) pop or fs ss dec or rcrb mov dec shll push les mov pusha jp or (bad) mov inc cmp adc sbb add or and (bad) sub lret pop or and sbb and add dec pop or and pop inc dec andb add fdivs insb pop sar mov sbb xchg pop mov pusha sbb stos sub imul sarb sub adc stos sub insb sbb lods test pop mov fcmovb clc jp mov xchg lcall adc imul insb and insl pusha cmp push insb lea cltd xchg mov lods or leave (bad) ss insl xor sbb leave sarl imul xor fs pop or cmp insl xor or pop or adc insl pusha cwtl or push shll dec shr leave nop cwtl cs or push mov fwait es mov or call or fs jb fs xor pop mov add shrb insb mov inc push (bad) jb adc add mov imul add pop fidivl int enter lret inc dec jne cmp enterw out insl cmpsl insb xchg pop shrl adc popf add mov mov insl pusha dec enter xor push push (bad) out insl cmpsl insb (bad) fcmovb jnp xor mov mov xchg loopne pusha imul data16 pusha jno fsubrl jno fsubrl jno faddl and popf or lods (bad) int3 je add adc vunpckhps dec jno fcmovb (bad) adc fcmovb (bad) adc fcmovb (bad) adc fcmovb (bad) adc fcmovb (bad) adc fcmovb (bad) adc xor vunpckhps dec jl xor vunpckhps dec jl xor vunpckhps dec jns xor (bad) dec js xor lds inc xor ret mov inc xor xor or adc and xor adc sbb push push movsl or cmc xchg push xchg jno push push ss mov flds inc test addr16 test mov or sub lea adc push test cmp lret rorb push test nop divl xor xor sbbl mov stos call xor jno nop pop rcr call add ljmp lret daa mov inc test or int push and in adc jns rcr mov call add sub lds stos mov and js jns inc in xor and daa fidivl cli (bad) dec cli or jp or lods (bad) int3 je xchg sub bound addr16 or enter xor dec inc xchg sub lcall xor pop xchg push xor or lods std and mov pop rcl shlb inc push cmp data16 cmp mov mov xor pop mov mov inc mov popa in imul adc mov sti xchg push adc in ret arpl xchg adc sbb mov or sti pushf push mov notb mov mov sub test sub ret jae sbb sbb data16 sbb sbb push sbb sbb (bad) (bad) push push jmp fs imul mov jmp insl mov adc inc mov notb negb jecxz push js sti pushf sub mov pop sub pushf sub cmpsb xchg mov pop sub jo xchg add popf or mov lcall icebp adc jmp notl sbbl pop cmp mov and xchg jo scas push cltd pusha cli adc xchg dec mov adc dec daa pop ja dec xchg pop xlat std inc push (bad) lock pop cmp xchg jmp pushf sbb jmp cmp insl rcll test imul (bad) pusha repnz and dec and dec and and (bad) adc add cmpsl arpl and add adc repnz adc es jo push adc lock andl sub xor xchg and jp and jns std xchg xor nop test xchg add or lock shrb imul and pop jo repz dec (bad) pop (bad) mov pop cmp and inc xchg je dec dec cmp add dec dec cmp sti jle mov repz or lock insl cld (bad) cmp repnz sub and jbe xor xchg mov andl mov adc imul repz mov mov mov sbb or stos lret push add and into into into into into into into into lds test int dec or cmp inc (bad) mov mov (bad) lret cltd jbe lret mov add inc inc push imul pop inc mull sub fwait fwait rclb into into into into into (bad) call jno inc ret bound repnz inc cmp mov repnz in sbb (bad) lock lock mov xchg jl enter push inc orl sbb cs outsb or les adcl into into into into into into int cmp push repz enter movl cmp jmp inc shlb test jo pusha lock add inc in outsb into lret push enter sbb inc ret push mov inc xchg bnd (bad) jb cmpsl sbb into into into into into into mov push imul popa jno insb xor xor bound data16 ds bound (bad) mov popa jle mov imul pop pop (bad) push sti xchg jno scas pop and add fdivp fs inc cmp (bad) das das das das das das das sub sbb mov cmp imul push addr16 pop (bad) jno mov add adc test and mov ficoml call je data16 (bad) dec mov adc mov jno mov push jbe insl test mov (bad) les push jno lods jb int cli mov xchg jno push gs mov shlb mov pusha mov and bound in lcall dec jb lds rorb inc pusha mov bound scas enter int3 xchg push sub mov int arpl jb sub xchg jnp es jo jnp mov cwtl mov (bad) (bad) cwtl mov (bad) arpl pop jb lret cld jno jne jno les cmpsb mov add fsts xchg addr16 fsubl fdivs jg enter cwtl mov xchg and jb fmul mov imul lret push gs jbe jo test es fadd (bad) loope leave movsb data16 and dec adc mov and jb cs jo xchg cli add ljmp in (bad) fist mov and or mov in pop into cwtl mov bound mov xchg mov or dec es mov or fs push lret addl push aad mov in adc adc jbe push int3 pop add bound mov mov and jnp adc xchg mov cwtl repz (bad) int roll cmc and sarl insl arpl sub adc rcl js sbb cli lcall add cmp (bad) lret or jb push hlt or lcall (bad) les cmpsb mov add les jbe xor sbb in test movb enter ficoml cs nop add mov mov stos mov mov mov adc cmp leave ficoml test loop mov push adc repnz bound sti jne mov sub out xor adc leave push mov xchg mov ljmp cltd div jno sub out xor and bound push bound bound mov shrb add rol adc inc call and repz (bad) cmpsl jne jl add jne and enter inc cmp (bad) fnstenv les jne and repz xchg jmp enter sbb cmp enter call sub dec xchg jne repz adc rol repnz in adc or mov sub push or or mov repnz fisubl xor sbb and int3 jno adc sub lret test adc cmp cli push push cwtl xor or and repnz jp or and gs test adc xor rol js jae imul or jge fwait test enter test or ljmp or cmp lcall jno test jno adc or jae test int jbe loop add sbb ret inc int3 loope jecxz loope jmp jl jge jne and xchg lods add imul sti repz arpl int jbe loope hlt repnz addr16 mov xchg repnz mov mov repnz sti (bad) xor or sub mov mov ret mov xor sbb sub test ror mov subb (bad) rol test icebp enter dec adc xor cli push push cwtl xor or sub (bad) jae sub (bad) cmc enter or sub mov (bad) hlt push enter or sub repnz sar gs or sub aam jnp popa add mov sti loope sub ret inc mov lods loope dec push jecxz loope in jmp jae push push cltd or jge jne shr gs and lret js (bad) je or (bad) jne rolb mov test enter (bad) adc xor test mov sub dec test adc xor test test rol cli test adc sub ret dec test adc xor mov cmpsb ret in popf jno inc and pusha mov xor shl popf jno inc sub inc ror and sub ret dec test adc xor sub sar push enter or and xor stos cmpsl mov cmpsb lds rol sbb imul and xor shl popf jno inc es repnz cmp cmp jp ret dec test adc xor jbe repnz ret dec test adc xchg int xor push arpl mov pop push adc mov jae hlt aad (bad) js (bad) xchg jl fnsave ja (bad) mov jne adc gs aaa push dec sub jbe or mov in jecxz xchg xlat xor xchg xor push jecxz cmpl in fnsave jo dec roll mulb pop inc mov jno popf push int3 test add bound and aam pushf or add in sbb or push mov add cmp les push fdivrs lret je lea fs loop jae clc jp cwtl in cmp add inc cwtl pop addl mov test xor xchg and mov or add lea cmp popa push lea test sub jg adc in shll ljmp mov and add cmp test xchg mov jbe pop mov fbstp and stos icebp dec push xor ljmp jo dec xor lds add mov adc fs mov mov mov fisttp mov mov shr sub sub out dec sti xchg movsb mov adc nop mov ja xor inc fisubl stc add add push xchg loop sbb ja popa cmp lahf mov lea ret daa insb cmc xchg les xor mov popf mov stos sbbb add mov sbb insl xchg inc mov in rclb jle cmpsl add xchg xchg loope and movsl mov jne pop add jbe inc mov stos jo ljmp push inc jns lret popa pop mov push test out cmpsl dec add and sbb rclb or adc adc xchg (bad) lock cmp xor cmp or jb add arpl dec enter mov test cmc push ret and aam cmpsl or mov add ret xchg lds cmp mov cmp bound je bswap je les xor int3 movsl in out sbb push in sbb (bad) inc sub imul sbb test rorb and ja pop jo sahf insl cmp aam adc sbb cmp or mov cmp dec (bad) int adc or inc jl sub loope repz dec test (bad) int adc or movsb or ss jp push fcomi cmp jnp or das mov xchg (bad) ficompl xchg (bad) in sub add pop mov add jno mov fild mov cmpsb push cmp dec aas add cmp sub lcall inc cmp or pop cmp mov xchg push popa lock pushf dec sub fsubrl dec (bad) call fdivs jbe jmp or mov mov loope test add add add out push imul add jns pusha inc jecxz sbb jecxz ss mov mov push imul jae ss mov es aam add bound push push jns add add (bad) ficomp xchg and add add cmp xor jb orl push subl jb orl inc sub loopne inc push xchg dec adc lods cmpsb push mov fisubl mov and and orl ret jecxz pop cmp pop addl add adc mov pop fisubl add ficom pop addl pop adc push add decb imul sbb aam push add ficom jmp cmp and xchg into add sub lret xor xchg add enter fiadd insb ret or jl pop pop hlt push int and in push mov ret push data16 cmc mov pop xchg xlat add push lret xchg ficom push std cmc pop xchg ficom push lret xchg fistl shrl hlt nop jecxz or inc cmp mov in inc cmp (bad) sar push xor ret or popa popa and jb and jb and mov call pop jp mov mov sbb cmp test xor cmp popa popa popf or mov cmp sbb loope popf pop sbb adc push push out sti sub movl dec cli jo popf pop jge ret push addr16 popa imul push lret push sbb xchg xor and dec ret or dec pop ret gs xchg sub insb inc repz mov cmp ss xchg adc and (bad) std cld jp mov pop jge ret push popa dec addr16 popa imul hlt push lret push data16 popa imul fldt sbb insl rcll adc xor pop mov adc shrl xor popa popa popa ss push adc ret jne jno ss xchg sub shrl mov mov cmp ds popa call sbb hlt push out dec cld jp mov pop jge ret push inc popa dec addr16 popa imul hlt push lret push data16 jo xchg inc popa pop loope sbb test mov sbb outsb mov mov insl rcll mov popa xor pop mov adc shrl xor popa pusha stc andl mov sbb outsb mov mov insl rcll pop adcl in repz ret imul fldt je ret jne jno ss xchg sub shrl popa popf or mov cmp cmp sti loope call sbb push in mov ret jne jno ss xchg sub shrl popa popf or mov cmp popa xor sti loope loop and (bad) adc popa in rorl or imul hlt push fldt jp mov pop jge ret push popa dec addr16 popa imul hlt push lret push data16 xchg inc imul js inc adc inc mov cmp mov test inc rcl fdivl jl test stos sarl mov adc jno inc dec or cld jo movsb xchg push jge push mov roll hlt std loope loope popa jae mov fninit adc xchg and add jno (bad) cmp enter into or push jno xorl push mov or add push lds adc cmp mov or sub mov in lret aas ds in xor outsl xchg cld jp xchg jge push mov roll cld mov add add leave fsts leave inc test push dec jecxz mov add push mov push aam jno jge leave inc and dec outsb mov fwait enter into or daa adc cmp lock fsubrl repnz clc notb adc lret add jmp enter repnz or push add fsubs rcl rcll orl and incl pusha hlt aas iret xlat xor sbb add mov mov in pop (bad) jno pop mov mov xchg movsb push jb hlt xchg cld (bad) jno js sbb rcll add roll rcl sbbb inc or popa fsincos icebp jl cs movsl addr16 test xchg mov sbb or (bad) mov roll notb inc push add adc add decl push add mov clc mov fs rcll add and fstps (bad) jne xchg repz and inc fcompl and and mov adc repnz cwtl mov and mov rcl inc cmpsl cli lcall insb daa lods repnz jne pop pop jg js and push ret mov aam cmpsl cmp fldl jne pop cmpsl cmpsl dec repnz jne pop int3 pop cmpsl cmpsl inc in repnz jne pop pop int3 xlat cmpsl dec lods repnz add cmp inc int3 out dec jl rcll mov sarb hlt test dec xlat xor outsl stos xchg rcr and mov xchg and and sbb inc or cmpsl inc rcll repnz mov fldl sbb lds inc mov addl mov (bad) xchg enter inc flds jp jge jge mov fdivrl mov sbb jne add jge jne add xchg iret lret xchg je mov mov (bad) cmpsl and lret daa jne mov movl jnp pop mov and xor cmpsl xchg jecxz flds lret pop mov jno jb cmp rcll imul shrb orb popf xchg rcll and dec fcoml loop mov pop addl les push fs adc jecxz std or jne xchg mov pushw push push add es pushf push add ss sub jp cld pop xor addb adcb sub es scas addr16 mov xchg negl push movsb add push jecxz and ret adc and pushf pop xor adc jb push xor sub adc popa jnp push rcrl jge rolb mov xchg add (bad) (bad) dec inc sub mov inc lret fdivr icebp js xchg xchg jo les cwtl rolb xchg jb lock dec and jecxz xchg push daa repnz or repz jo cs imul mov sti and loope andl mov scas push add dec shlb jae xchg add popa push xor js mov mov stos jecxz cmpsl fcoml repnz pop adc or mov (bad) jecxz jb popa mov add mov jb popa mov bound stos sbb inc (bad) loopne data16 pusha shlb add cmp inc sbb sti out adc mov jns jo add xlat add adc ds mov cmp push cmp movsl push and sarl scas inc movsl insl mov mov sbb add and push jge add js jbe test adc into add push adc adc scas adc push push xchg ljmp dec sub mov jecxz inc cmpsl inc es cltd aaa sbb into add adc adc ds mov fisubrl push push nop xchg mov jns dec dec fcoml pop push dec sub jno jge,pt adc add (bad) mov repnz mov mov fwait xchg inc xor push dec (bad) and or jns insb and lods sahf adc not adc (bad) push aam pop fild insb test (bad) sahf lea data16 sub dec pop popa or aam push arpl mov mov push adc test inc and push sub mov sahf inc xor shll dec ljmp cmp test out lcall cmp cmpsl lcall adc or call in mov jmp movsl adc sti pushf push cmp push adc lds aam js pop jb sbb sbb pop adc lcall mov mov and loope movsb push sub (bad) scas xchg dec xchg fsubs adc cmpsb inc push int dec cbtw cld push xchg xor unpcklps je cmp nop stos jmp cmp jmp in nop stos call add in int3 pop jno jnp in (bad) adc fisubl dec dec or sti inc add dec jmp cmp cmp ficoml mov scas mov fidivr fs mov in or into test mov shlb xchg pusha mov mov outsl mov test xor sub adc (bad) xchg test pop movsb jne aam mov popa lea jns sub dec or call mov add ficompl mov rorl pop inc add xchg sbb jns sti fs aad or fcompl (bad) mov rorb aam ret sbb inc and jnp jae adc mov or call adc and push mov xchg jmp jle inc push mov or test or adc lret stos jb push inc dec cld sub or and jb pop movsb loopne xor imul (bad) push loop lret ret push push ret mov ds sbb cmp push mov xor inc ret mov and mov or adc xchg inc movsb xorl pop and loop jb push sub shlb and cld mov xchg dec test cmp adc or jge cltd or cltd popf inc xchg push sbb aam cwtl push sub enter notb je cwtl add fnstcw xchg (bad) ret adc pop (bad) jne pop cmp lods or sub rorb inc sbb dec inc inc pop into clc (bad) clc stc lret out mov sub int aaa daa or adc bound pusha sub movsb aad imul xchg dec or mov pop insl push out shl aas mov mov pop cltd ret xor lods ljmp push aad push rcrl mov (bad) repnz les scas mov xchg xlat ja rorb aad out lret loop add int3 sub sti add test mov ret stc or and notb jbe adc arpl lods xchg jle (bad) xor inc (bad) pop mov or add cmpsl ret pop jg xor fstl or test sbb aas xchg and mov shrl scas lret mov dec mov inc push cwtl scas pop mov xchg inc xchg pop lea lds pop iret ficom sarl mov or jecxz mov cli jl mov pop bound jnp pusha push sub insb push lock sub rcll add insl push push mov mov cmc pop lock bound dec xor and cmpsb mov pop aam pop cld push and mov lcall mov notl push jl and and add loopne push sbb push sub fadds cwtl cmp in sub inc ljmp add pop or in adc dec mov and lods fidiv popl mov add test pop jno jl and sbb xor or jae int3 std loopne or xchg les lahf add pop cmp xchg sti call out push pop (bad) sub xor add dec repnz andl cmpsb (bad) lahf fdivrl stc push mov clc mov lcall cld lea loope aas mov dec in popl pop aad nop gs andb roll and push bound push mov imul mov scas pop jns xor test mov xchg add inc mov subb jge cwtl add mov (bad) jmp loope push xchg arpl fldcw xor xchg mov cmpsb xor fwait push test cmp ret jl addb mov loope stos mov mov sbb or adc cmpsb mov mov sub or lods jl pop or dec fstps sbb add mov xor mov ror dec or in enter inc sub imul test sub cmpsb addb imul imul (bad) (bad) adc xor icebp (bad) cmc xlat es gs testb adc lds add xchg inc jb loop cltd adc inc addr16 adc jnp es inc jecxz repnz repz and cltd adc mov bnd sbb arpl inc cli xor add cmp loop stc sbb (bad) jb je adc cld and inc inc mov or fidivl push icebp imul insl xchg jb push inc push repnz lret ja mov (bad) xor adc xor enter inc mov ss lock push push (bad) jo push lret je adc xor repz and cwtl icebp dec xor inc inc push popa push (bad) adc inc stos xchg inc icebp inc or xor sbb (bad) hlt cmp add mov dec xor adc xor jecxz mov aaa mov lods xor repnz xchg inc and inc jne out xchg sub stos add pop ja adc sub fwait ja (bad) cmpsl adc sbb xor mov and hlt and aam add adc divl add jecxz cli loop repnz xchg icebp inc sbb mov mov inc hlt loop cli ljmp notl inc xor ror push sub xor clc xor dec pop xchg inc adc pop cmp repz add xchg ret xor or xchg jb jecxz add push dec (bad) jno lods inc sub loop pushf xchg add repnz cmp jo cli jb sbb inc add or repnz mov mov test inc inc popa pop popa mov xchg cli les xor sbb repnz js enter jp repnz adc inc popa push lret inc (bad) stc add dec (bad) fsub mov add popa push sbb (bad) testl dec sbb adc stos add sub (bad) sti and in mov pusha adc lret lods xchg leave mov in arpl push pop loop or xchg inc mov ret inc push and mov dec xor arpl xchg add mov inc stc inc inc xor xor daa cmpb cmp xor and adc sub sub pop add mov sbb icebp hlt repnz mov imul fwait sub adc mov mov cmpsl add pusha cli mov inc xor dec xor cmp dec popf ficompl test pop adc test pop pop out jecxz std (bad) mov or and push leave xchg add sub rolb call xor (bad) dec data16 push jae (bad) ja jbe aaa js inc xor and mov push stc mov aaa pop jp scas and and mov dec dec sbb shll and or dec sbb mov mov pusha imul lret (bad) mov shrl adc xor inc xor jmp cmp fiadd loopne dec xchg subl ja push adc ljmp sbb xchg ja jb xor xchg mov pop aaa in or dec dec addr16 cmc sub jp dec sbb (bad) out pusha out clc push (bad) jmp add mov cmp jb sbb inc inc xlat mov or mov inc push inc xchg and in mov lds and int3 jmp and xchg xchg inc int test mov mov add mov lcall in std fdivs mov xchg xchg push or cltd xchg pop outsb or or add or cmp jae gs or inc cmp jae gs or cltd repnz pop ja cmp cmp testl and jb xor and shrl mov (bad) mov xchg repnz inc mov and xchg mov shll sub js ss es ss ss and jno ror add loop add lret and add pop rcrb xchg (bad) lock loop cmpsl add jmp push arpl pop or imul jb or push (bad) jno mov (bad) cmc adc into xor icebp jp adc fidivrl popa pop aam lods mov and mov push add mov ret imul add mov push xchg lret call mov mov or sub repnz (bad) mov push inc pop bound add or mov cmpsb or jnp cmp mov mov push pop xor stos (bad) repz test adc push add xor jge addr16 adc sti adc icebp test add bound fisubl addr16 or jbe out push or icebp add mov add dec imul mov out add xchg add (bad) jb add push inc jo xchg or add jnp (bad) jno mull xchg in ficoml dec push sti es jno dec icebp jno insb push add adc add push jno jle (bad) add stc (bad) insl repnz clc and or cmp cmpsl mov repz ret ljmp (bad) repz mov ds aad xchg cmpsl pop call int mov test push sub adc pushf pop cmpsl sub push or ljmp and push dec xor add test add or or xchg insl adc add addb xchg test pop sbb cmp pop mov stc test test add push pop mov xchg arpl insl stc in xor add sbb or test or ljmp add adc mov lock push imul pop add js pop xor fs ss add push xchg dec xor inc jno mov push jmp cmpsb or or xor pop and out test sbb adc ja pop je xor cmp sub test stos leave push pop inc popa jno inc dec enter (bad) jno sti test pusha imul arpl inc add pop push arpl or out pop push popa push or mov ret add movl jmp arpl std jle push or xchg xchg pop roll add add xlat add push add inc mov xor out xchg add hlt and popa push push xlat neg xlat sti in cld sbb out xchg subl out jae jbe and aam rcl push pop xlat clc pop fsubrs xchg fimul and orl xchg or or xchg jmp fwait mov add inc in lea rorb add add add add jne pop fs data16 arpl add add outsb sti mov add lret fiadd insl icebp mov push nop mov xchg xor cmp xlat sbb jae jns push mov fstpt push xchg add or inc add mov icebp mov add movsb fcmovbe adc mov in es sbb mov sbb or insl jp mov popa push pop or leave jae add inc cmp xchg add jecxz or imul bound xor ret add imul out cmp test xor cmp (bad) movb out and jno dec xchg into int inc mov mov adc sbb ljmp xor js loopne add into rorl insl add mov ror pop lret mov clc lods loope pop mov ret lret add inc sub or mov or cmpsl and aad stc cs xchg mov xchg cmp adc or daa inc sbb push or popa xchg add xor mov or and test cmp test add repnz add mov cld inc xchg bnd ret repnz push xchg pop jecxz test mov inc pop push xchg out push sbb mov adc pop cmp jnp add popf fdiv in in inc mov imul lods insl pusha jb adc pop loop xor ret pop clc xchg ret loop cmpl or adc mov xchg ret rclb adc (bad) enter xlat cwtl xlat cwtl jmp js fwait dec mov cwtl xlat cwtl jmp push mov cwtl xlat cwtl ljmp les pop arpl push mov shrb outsb lahf jl sbb cmc or dec push mov sub mov cld das jl mov sub and or dec push mov shrb xchg mov cld das jl repnz and or dec push mov sub mov cld das jl es or mov sub mov cld das jl sub cmc sub mov dec push mov sub mov cld das jl and sub and jmp adc ss ss fldenv aaa push cmp std pop mov mov (bad) into push lds repz ljmp mov das or rol push adcl add and sbb rolb cmp sbb movsl or xchg dec aaa and xchg roll inc inc xor enter xor inc pop sbb sub xor push ret adc and xor pop roll add xchg inc repnz push sbb and js testb nop repnz add sub js add mov dec mov (bad) dec sahf push movl xchg dec push scas arpl mov mov push add (bad) sbb fstpt and jne ret push xchg cmc les (bad) movsb (bad) in and mov inc and and add hlt dec mov js fstpl jo icebp pop inc repz mov add inc js pushl clc and stc push xchg pop push inc repnz sbb stc push mov pop pop ret test ret cmpsb clc stos mov addr16 lods mov int inc jne and dec mov push clc stos loope in inc jns inc rorl sub stc push cmpsb std cwtl and icebp and cmpsb clc cmpsb dec and cmp push std cmc fldenv adc mov dec mov sub dec cmc fldenv adc mov and dec cmpsb roll call hlt scas cmp inc adc (bad) cmp cmp and jns call (bad) and add and hlt sub pop xor lds mov inc adc movsl pop push mov mov and jbe (bad) and push fsubs push xor and push and xchg inc adc pop push or jne test dec (bad) test test sub pop call hlt add subl and push pop mov sub mov hlt sub inc mov and jg rcll int3 rcl mov and test mov loopne inc bound xor scas cld push or inc mov sub loopne mov jbe pop xchg add sbb push jle add adc sub push push adc pop dec lret hlt jmp push mov aas push decb add jg add or push mov or adc push mov test and addl mov adc and inc pusha push or addb adc add push pusha scas loopne (bad) xchg mov cmp rcll test bound int3 mov mov push add mov mov inc test dec adc arpl in mov nop loope add xor inc pop hlt inc inc bound adc roll out and xchg pop add push jmp xchg adc pusha (bad) jae andb test and inc rorb push add loop shlb add adc mov mov add scas jnp pusha xor imulb xchg xor and out cmpsb and jl mov sub adc test add shrb mov xchg mov jle xchg stos lcall int inc and mov data16 rcrb mov pop andl sbb mov jle xchg cmp and push xchg mov push xlat inc dec aad shrl cmp mov mov shrb inc adc pop dec outsb popa jmp xchg or ljmp push mov scas pop push sbb inc inc sbb adc fisubr jno adc nop imul pop test xchg mov sbb cmpsl (bad) mov push fsubrl ljmp (bad) push pop test and adc aaa or cmp pop sbb cltd loopne xlat mov mov dec in sbb inc pop (bad) adc sbb mov loopne leave rcll inc ja mov adc and lcall movsb cld xchg xchg inc jae and sub into loopne adc (bad) je xchg mov ja push push xchg repnz jb nop insl bound mov mov xchg mov mov cwtl pop inc popa mov pusha and nop pusha and dec add push push jmp pop or push dec sbb cmp inc add pop push mov jmp mov add (bad) mov mov mov (bad) xor mov and mov xchg (bad) icebp push pop jnp mov jne repz mov cmpsl add xchg dec push push push pop negl out and insb outsb ret pop mov mov inc push mov mov ret cmc loop jno xor push pop sub pop sub ret loop pop mov inc test out fsubs mov lds mov mov inc push mov stos xchg sbbl inc and arpl mov push sbb adc mov loope loope mov pop pop ljmp mov xor pusha mov out cmp sbb add cmp imul lds mov into mov push call xchg (bad) and push lret scas imul std inc jge cmp jb adc fcmovnbe jbe loope mov or cli in aad cmc call xor and std adc mov mov jge mov pushf aas add pop aam mov pop out mov gs imul dec push (bad) cmc xchg mov push mov push push cmp in xor jo xorl repz pop xor jnp jecxz xchg xor mov jle imul xor xor cmp (bad) gs lcall cli mov ret cmp sub call cmp cmp push outsl and adc add or stc inc in imul cmpsb add inc (bad) jbe mov cmp rcrl jno loop ret xchg dec movsl and or dec gs cli (bad) and cmpsl nop push aad sbb test out ds test pop xchg sbbb mov lds mov mov pop mov jns mov jnp or or inc movsb mov push push add xorl jge mov stos sbb aaa xchg out call and jne xchg jns mov xrelease mov xor sub jb mov test ljmp mov xorl popf and cmp dec sbb addb push mov cmpsl popa jno aaa inc mov dec jne xor or xor sub rcl cmpsl or push jmp add repz adc inc jecxz xchg stos cmpl or stos rcl (bad) ja xor push aad test cmp jae sub sub push jnp test cmp fwait test mov lcall addl dec (bad) jb xchg push xor (bad) divl or insb std sbbb mov repz (bad) sub sub jnp xchg test imul jmp cmc sub sub xor cmpsl idivl mov adc sub cmp loope add pop in ds jne repz push dec pop push dec call jno xchg je xlat push cmpsl std cli push lds xor jno mov ss xor jo (bad) and add inc xchg lock mov mov sbb out sub xchg add scas push movsb fimull stos jge imul clc and sbb sub sub sub loopne movb imul inc gs gs sahf scas incb cwtl jl sub in stc xchg add xchg sub mov push orl addb and mov push mov pop insl adc xchg cmp mov fsubs mov mov pop sbb cltd pop in sbbb or mov jp add stos nop adc subb cmp cmpsb add lods mov sub and push push adc xor and xor sbb adc sbb add xchg gs pop add int mov js push or addl mov roll mov data16 mov (bad) aam shll and imul popa xor xchg aad dec ljmp cltd imul sub adc test bound sub iret cmp adc cli jns dec in push data16 sub ret or mov arpl push int sub (bad) push push test ret adc pop mov test test sub mov in sub cmp sub fnstcw cmc dec sub or push push lea ja and mov stos dec sbb add sbb gs push and inc shrl jp push sub add cmp push push or test addl pop dec scas mov add ds sbb dec or or sub mov lock adc push in aas mov pop lds or add jbe pop icebp adc add inc jb sub and and jecxz loopne lods (bad) shrb adc pop arpl adc mov push (bad) bound xchg jp (bad) repz imul andl icebp mov arpl add arpl and addl icebp orl add add mov mov lcall arpl mov or sub mov ss popa leave xchg xlat sub mov and sub or gs inc orl jecxz lret mov add jno (bad) mov push mov dec mov mov cmp pop jno mov mov inc insb pop jno mov mov andb mov xor aad mov adc ljmp rolb mov pop jge cmp jmp add addl lods ss rcl test xchg mov xchg xlat imul push mov adc andl aaa div inc cltd push inc adc push imul cmp loope inc loope xor ja inc inc inc add add cmpsl push inc add aaa ret add cmpsl mov in mov push call add cmp in lret (bad) rclb adc orl in icebp (bad) aad push out popa orl in movl mov in movl pusha and lret (bad) in and lock out andl mov andb lods ss push icebp mov push out loope rclb adc orl out movsl icebp xchg aaa hlt loope loope in or xchg orl mov or push arpl repz lods es cmp arpl in mov and mov mov arpl xlat add xchg aam sub lods inc push push push std dec imul aaa mov and jae push push jno addr16 mov adc xor inc inc add stos push std xchg mov jbe imul sub cmpsl js (bad) jbe ss insb or icebp mov je repz jne jp sub ja rol jl cwtl (bad) jb lret cmpsl jae aam mov inc insb jne mov sub cmpsl inc arpl jns sub repnz cmp xchg add inc aad sub jae cmp test cmpsl ja adc rcrl popf mov insl and xchg aaa xor bound sub test and sub jno xchg and aam je aam mov mov jns cltd jae xor xchg ds xor popa mov loope into inc jns dec idivl cmpsb and rcl shlb rcl xchg mov add (bad) fyl2xp1 jecxz adc repnz out ljmp inc sahf xor or jl sbb and test sub jecxz movsl add stos ljmp sbb imul aad lods out adc repnz xchg hlt adc aam cmpsb xchg mov in sub lret cmp jno lret mov add popa jb add je inc popa mov pop cwtl lods pop pop loop fisttpl int dec and xchg lret pop xor mov dec lock xor movsb adc daa sbb and fsubrs loop jno test test icebp jno cmpl popf push flds or jns repnz pop xor inc subl int3 or xchg and mov jnp movsl or and push andb xor xor cmp add test or or jb lcall test sub add (bad) sbb cmpl ret jmp mov xlat ret push rorb add cwtl lods pop push push jno add lock insl cmp out aaa xor add mov test add gs push popf stos cli add jecxz xchg movsl xchg xchg add xchg nop idiv cmp loop shlb iret jnp jecxz sbb or adc dec (bad) aam jae mov xchg gs jecxz pop andl adc push lods stos push icebp pushf mov (bad) mov push call mov mov jmp add lods sbb xchg push icebp xchg dec aad adcb cltd or add ret xchg insl test lret rol xchg rep lods test jne rol push in sbb dec xchg popf test pop or popf test add inc pop xchg xchg cli jg ljmp imul or mov lret scas mov mov popa popf test jne rcll cwtl (bad) jge lcall jnp icebp xchg dec inc and repz in cmp lahf test push mov ret mov mov std push or mov mov xchg add adc mov movsl pop cmpsb mov hlt (bad) mov repnz xchg push push in push or mov mov out in ror mov int add lods push push leave add jmp sbb rclb ljmp and push in add cli (bad) js in (bad) mov pop push lret xchg sahf fadds rclb (bad) xor add aaa rol pop test out movb (bad) dec out movb (bad) dec out rolb pop or pop or movsl movb jmp sub or mov xor and (bad) xor jmp mov loope ret sbbl dec cwtl arpl hlt or push xchg mov test sub xor mov dec rcll sbb negl and mov rep push (bad) xchg andl mov mov test and ljmp lds stos and repnz into cmp mov jecxz movb xlat jmp and rcrl lds rcrl gs arpl inc inc hlt dec shrl mov test in cs cmovne inc jmp test xchg inc fcmovnu dec mov rcll jne mov popa xchg inc fcmovnu mov (bad) xchg xchg js in cmc jo push adc jmp inc fcmovnu or nop inc cmc jo adc movsl pop jmp inc shrb add popa popa bound sub bound test aaa xchg (bad) mov das cmp out ret std xor popf jno in adc dec push mov sub xor in addr16 aad mov inc mov adc inc mov jp mov cmpsl adc enter mov popa mov movsl xchg cli aad (bad) mov xlat mov cs out bound mov fistpl rcrl loop loope in push in jno sub xlat jmp bound dec cmc (bad) mov enter loop pop jb dec daa repz cmc aam xor (bad) mov sbbb loope out or jecxz ror cmp gs cmpsl loop enter out bound or out aam mov xchg loope lret clc inc in sbbb in push gs fdivrs jle pop xchg adc fdiv int3 cmc lret cmp and jb mov and mov xor jl xchg push xchg lret mov mov (bad) lret adcl jb adcl jmp in push imul outsb insl and outsb insl and decl dec xchg xchg mov ja hlt and and pop push pop enter dec xor push mov inc xchg loop inc ret adc add or xchg loopne fs mov stos cmp aad jl in aad or clc cld aad sarl imul data16 xor frstor inc mov shrl mov divb bound bound popa xchg out sbb icebp outsl push xchg push int gs aam xchg bound sahf aam fstl sub loopne popa pop dec pop sbb popa insb mov mov hlt pop out push mov andl shll mov adc bound mov inc hlt push xchg in xor (bad) nop loope dec jmp and loop fmul xor in data16 popa xor frstor call cmpsl loope out mov mov dec outsb push xchg jmp mov repz in sub popa push sbb adc mov jge popa xchg loopne rol icebp popa push sub in andl popa mov in es popa mov in es dec popa bound (bad) push insb xchg in inc fiadd lret xchg mov xor inc daa bound mov xchg in shll shlb in lret add rcr pop in andl insb out inc pop mov push add mov dec (bad) and add push mov cmp lods pop jne (bad) popa fsubr jbe jbe fldenv loopne xchg mov shl jns (bad) pop sbb mull add sub jl cmp or scas bound rorb fsubrp pusha (bad) mov adcl arpl pop int push stos xchg rorb jns jmp rolb call ljmp aad movsb jbe hlt cmpsl out stos ficom aad ret rcrl scas jns cmc dec test cltd push mov xchg test jmp addl popa ja cmp out pop mov push xchg ficoml sbbl dec push sub cmp cmp fimul scas hlt lahf cmp mov call mov jp test jecxz mov dec aaa xchg in andl popa inc sbb sub pop out lods ret cli lods jle jmp mov scas xor (bad) lods pop adc arpl sub xchg jp dec mov rcrb fstp push xor std in mov jb pop xor aas inc jae into pop add js cmpsb pop dec shll cmpsb pop push loopne in mov pop movsb jg outsb cmp mov fmuls stos hlt ja adc inc mov popa dec mov lea loope rcr xchg in (bad) je popa sarb mov mov scas ss sarb orl mov and or loope out out xchg lret insb rcr test out mov rolb add cmp out inc outsl es in mov sbb cwtl test fsub or sbb bound mov fwait jecxz lret ret mov jnp inc or xor push sub cmp stos ficom gs ss xor mov mov lds dec mov adc sub xchg pop and out imul mov and lret xorl mov sub mov sub sbb hlt push xor mov pop cmp lea pop mov jbe pop out outsb pusha mov repnz sarb (bad) arpl jo ja jbe lcall cltd fbld pop fistl jbe jbe scas cmpsb enter movsl clc out fwait or in pop jne dec pop ret insb cli inc mov loop jo lret sub movsb sahf push xchg jo fisubl jns mov cmp add jg pop pushl push rol pop inc mov jge mov test adc mov adc cmp sub loop pop ret ss xchg xor xor and sbb pop sti mov jo aas fst and add loopne mov sub in cmp cmpsb dec arpl fisttpl jbe movswl and cmp shrl mov and lret xchg add jno jp jp mov loope xor cmpsb push and xchg or and and jge inc xor push add out xor mov push pop push test jo and je xchg lock in inc push adc data16 mov add xchg push push jle jae jno test bound mov stos ret (bad) in inc cmpsb add aam inc bound addr16 push iret pop xlat test mov dec and data16 and pop enter xchg cmpsb push mov xor in std xchg push push push js cs out xor xlat test xchg xchg test pop out push stc push add ljmp mov icebp mov push ljmp jns ss push loope,pn (bad) and inc mov aaa and insl xchg test xchg data16 mov xchg mov (bad) mov adc pop ret push pop enter add add ss xchg inc xchg push inc mov xchg xor std ja fs jecxz cmp mov pop (bad) jecxz test xchg jno xor ja out adc or mov jle cld inc hlt repnz movsb in roll testl cmovno xor movsb pop out jnp cmpsb sbb jno imull std xchg shll inc ret add movsb (bad) mov mov sub xchg movsb inc pop (bad) arpl add adc std xchg push push push clc lock cld xlat test rcrl js xor std xchg sti push adc bound out ja les lock pop jecxz icebp jmp test inc ljmp std inc js push push dec (bad) ds jg xor mov xor or mov out and rolb scas cltd negl test cmp push and in insb cltd sub sub mov imul or push in push pop mov out jbe ror mov pop cwtl sub lret push push mov mov pop cmpsb aam ljmp mov xchg cli jp dec adc sbb adc jb jmp cmp adc jae push out ljmp adc roll and mov pusha mov scas xchg in and test sub add imul push shr xor pusha xchg mov mov jmp or xorb pop iret or jnp mov jno inc imul fsubs or push pop loop loop repnz (bad) (bad) lods jl cmpsb mov jmp fwait xor push sub cmpsl cmpsl mov pop stos sub push pop inc xchg stc and loop out jl fnstenv mov push inc xor xchg jnp sbb jno mov sub std mov jmp jnp (bad) (bad) pop insl jno mov push cmpsl (bad) mov fnstcw jne lcall pop add hlt ds icebp push ss xchg adc add dec push loop and adc sub pop stos push xchg out push adc js pop pop push stos mov rcll cli and mov inc insl movb sbb push sbb xor imul push leave and stc dec and in jno push add and in (bad) addr16 pop dec shl jecxz xlat inc mov pop xorl or arpl push push mov mov xor jne or and in xchg out inc gs mov cmp pop movsb mov testl out mov mov pop dec inc fs mov fnstenv repnz fwait adc or xor xchg sub out mov fs ret mov inc push adc push adc push out xor mov pop pop and loope gs dec xchg test call inc loope fnop shl repnz xor adc adc inc bound std or clc shr pop xor jbe mov mov clc shl push push mov loopne inc andb mov sbb and call mov jne ja xchg sbb mov test ret or inc add repz mov xor popf imul in pop and xchg and fwait mov mov mov jb xchg imul mov push inc andl sbbl nop push mov dec cwtl lods jecxz in loope or mov add xchg push in push xchg sub les nop mov xchg es xchg mov add in lods test push lds (bad) and dec or insb outsb inc xchg inc (bad) ret inc inc mov mov xchg push mov insl testb inc loope aaa in pushf or inc xor sub gs lret mov call push mov jne inc jo xor (bad) fwait daa sti addl enter push lods mov pop mov jo xor (bad) fwait movsb jmp cmp insb xchg (bad) mov push push test flds add test xchg test adc inc add mov retw inc push adc insb push ret sub mov gs test hlt push sub jbe xchg es mov scas fs add or mov dec fwait popa js adc icebp cmp jne push mov push mov and mov popf pop les jecxz mov push add jmp mov add inc in inc jmp (bad) xor pop (bad) push or jno in or shr imul mov xchg cwtl out add fs jnp nop test mov mov lahf mov rclb mov cltd or popa (bad) repnz ljmp fnstenv fistl lds sub insl test xchg xchg xor jae jnp push push testb mov nop js outsl pusha jo fsub aad test push or je mov mov fwait jge shrl push sti sbbl mov xchg insb outsb ss imul dec mov mov movups sbb fcomi pop jno sbb out pop dec mov cltd enter add (bad) iret repz lea (bad) sub sbbl add inc cmp mov sub into roll mov inc scas addl es xorb (bad) test adc add push mov (bad) mov outsb and sub mov divl inc imul popa pusha adc popa popa fs adc mov lds push adc xchg adc inc pusha pop adc inc inc inc mov adc xor push inc notb bound repnz jbe add adc ret push push (bad) push addr16 push cmp pop icebp gs push imul popa repnz nop mov xlat repz jo push add and pusha icebp popa cmp mov mov cmp aaa mov repnz nop jl mov fcoms icebp (bad) mov insb jo push add loope and xchg loope arpl movsb jb mov bound icebp insl int3 adc addr16 xchg add repz mov repnz add dec cmp mov jno mov sub push cld sub popa loope pop les inc rorl or mov repnz insl jo popa sub push imul sub fcoml clc inc inc dec inc inc adc test icebp (bad) cmc push xchg pop mov xchg popf pop in repnz insl cmpsl adc push inc repz nop pop cmp push nop pop xor jne (bad) adc (bad) loope inc (bad) icebp xchg int nop pusha (bad) mov push pop push imul mov stos repnz dec out sub jo je (bad) repz ret inc jb mov xchg xchg jno mov test inc ret sub dec xchg mov and push fsubl add fs hlt cmp sub stos push fwait cmp and loope inc aad sbb stos lcall ret and repz repnz repz clc mov push negl mov cmc ret sar pop sub addr16 mov pop and movsl enter cmp aad inc cmp inc inc pop loope xor in or xchg and mov xchg and gs in in cmp stos stos in and ftst nop add lods or cmc adc pop lods dec ja repnz or (bad) lcall mov mov pop and sti pop adc cmpsl arpl add mov rorl xor loope mov inc movsl out jb icebp mov out jb icebp mov fwait repz cmpsl pusha mov jb (bad) jae loope fs repz jmp notl xchg jmp mov in add aam loop in popa inc mov cwtl or pop fldenv dec ret int sar (bad) mov cmc cmp (bad) nop movsl jecxz jecxz inc mov cmc cmp xor and fs mov sbb nop movsl jecxz jecxz inc mov shlb cmp push push xor and inc (bad) in movsl jp jecxz sbb jge push cmp and cmp mov (bad) out dec arpl mov nop test add dec and test cli roll in sbb inc sbb inc test and lds roll rcl inc inc mov dec mov inc jb inc dec test loop adc inc inc loope ret cli test dec xlat and push dec arpl ret movsl mov mov xor dec sbb jg push jne xor jmp in pusha inc aad faddp inc inc in fidivl std push mov jb fwait repz jb addr16 lds adc repz dec pop movsb xchg hlt push jmp addr16 adc xor inc in shrl clc jae loop inc sub repnz lds mov cs in bnd cmp (bad) fs bnd fadds sbb mov fadds sbb fwait hlt mov adc movsl xor out jb hlt mov adc pop mov and (bad) loop js insb xchg test sbb sub mov adc ret cmp out dec and int3 fadds mov fldcw push mov loopne mov jbe mov or cmp out aad inc cmpsb adc cld inc jae movsl (bad) xor sbb inc xchg mov cs in xchg inc pop addr16 clc mov jmp or cmp repz fbld inc incl ret jns xor in pop cltd mov jecxz loope mov outsb es enter (bad) jecxz iret ja fwait repnz mov lret mov mov ret cmpsb aaa and lock jne in repz jmp mov in repz jmp lock movsl cmp adc sbb jno in (bad) jb (bad) in bnd jecxz sbb movsl cmp mov sbb bound jmp jecxz mov inc push out cmp jmp jecxz mov xor cs jecxz mov mov (bad) cmp push mov ret cmpsb aaa and lock cmp fwait clc ret xchg jmp inc cmpsb dec push jecxz xchg loop fwait clc jecxz jmp jecxz sbb movsl cmp adc bnd adc clc gs jmp in div jb andb cmp cmpsb adc std addr16 nop cmpsb sub cwtl add aad inc cmpsb add icebp xchg roll mov arpl jb addr16 adc aaa sbbb cmp popa inc dec aaa pusha sbb jne xchg and cmp leave mov fldcw rcll add jb xorl mov xchg mov xor cmp (bad) jmp push mov cmc xor cmpsb lock mov xor in addr16 adcl popa inc push loop mov addr16 adcl fwait stc adc mov mov std inc mov add pop pop pop push pop or pop lods pop mov shl cli xchg inc rcll xchg jmp adc sti clc gs in popa nop movsl repnz fsubrs dec cmpb xor add pop and xorl js mov mov xor mov aaa mov adc jne jecxz mov adc loope arpl adc jno in and inc jo jae (bad) call data16 stc mov sbb add adc xorl inc out data16 add adc push test push xchg xchg pop aaa in xorl xchg jl pop rcll dec cmpl push mov test popf loope pop pop int out aaa jmp adc sub xlat jecxz mov cmc and jecxz adc jcxz ret adc cmp add sub aas dec aaa imulb jge hlt mov sbb repz add fcmovnb hlt adc lock jno pop cmp sbb cmp jno mulb jbe sbb out lods (bad) mov adc inc adcw mov and enter push cmc shlb adc enter lods aaa repz jo adcl sub aam sbb cmc jne aaa rolb mov js test xchg (bad) mov sub xchg sub inc cmp sarl je mov leave mov aaa test out xorl or (bad) jno jp std aaa cmc testb cmpsb xor hlt mov xor repz cmpsl divb adcl icebp cmpsl notb inc inc push add push pushf inc mulb adc xchg pop repnz cmp xchg cmpsl testl popa add fcmovnbe cs dec clc aaa xchg imulb cmp adc jb sub icebp jno jno div adc xorl not adc loopne adcb sbb push xchg jno cli pop lahf daa test mov jnp (bad) push ret mov jb xor adc dec cltd and sbb sbb adc clc insl daa sti adc cli xorl or sbb sbb mov sub mov cs pop arpl add sub cmpsl out push mov fsubr or and push test push cmc pop inc shrl ljmp inc test arpl arpl add jno stos stos cli andl test stos xchg jno cmp es pop insl daa neg sarl dec or adc sbb add add jno xchg add xlat in mov cmp ret jo jp push lret jb jae fstps dec sub repz icebp jns popf inc aad inc jb iret add jb jbe bound mov in out xor jne and xor jno and pop inc jg mov mov and add sbb inc pusha push jge lahf nop int sub push adc cmp mov adc and and mov mov (bad) dec aas adc jmp or mov cld mov cmc push nop mov data16 mov sbb inc and and cmp int3 mov in int (bad) test icebp mov (bad) and lcall (bad) sub iret popa jo scas cli ret and hlt adc xor stos int3 adc dec repz fsubr jnp rep (bad) cmp mov push in mov mov push jmp cltd (bad) mov lret mov pop sahf lret clc dec and cmc push out sbb lock nop xchg lret pop stos sub mov test cmp mov jmp push mov sub imul ja cmp inc inc cs cmp jo pop roll mov insb or add and jo notb jl push add (bad) push inc insb iret mov jp nop dec (bad) jmp nop xchg pop sahf add inc mov and dec (bad) cmp pop (bad) sub xchg movsb je xor adc sbb fmull repnz adc pop jns and daa stos insb adc sbb into gs xchg cli lret mov or lret aad lods push lds sub fsubs ss sbb xor insb mov mov mov movb dec or or mov and adc pop pop mov jo jb or loopne dec and xchg loope sub rcl adc and fs and and rcl aad jno test push ljmp push mov add adc dec ret ret loope adc sbb rol cmp in xchg add lods int jbe data16 icebp (bad) sahf and in int movsb (bad) js test sub fs adc add repnz mov add cmp aas and sbb mov cmpsb adc movsl mov cmp dec daa add imul cmpsb inc mov imul and adc pop push push dec repz inc inc cmpsl lods out test xlat pop jnp pop pop movsl pop test add add icebp dec cmp push inc add gs sti or ret add movsl push repz dec clc add or movsl sub sti repz adc add xlat mov xlat movsb notl lock mov adc jne aaa push movsl dec lods push push divl movsl pop mov int jo pop rclb inc fstl loope pop xlat cwtl (bad) ss xlat mov inc adc imull jmp movsl push ss addl mov inc daa xlat test ss mov xlat test ss mov inc insb xlat test xor or cmpsb add add (bad) xlat jmp add add jo adc pop push xlat jmp mov dec mul adc (bad) sub roll xlat ret jo adc fdivl push xlat push add dec pop movsb cmc ja js (bad) jo repnz jbe add xchg je and inc add int3 fstps movsl add pop xchg adc adc add stc and mov jns add or ja lret imul mov add push mov shll mov jae add mov or arpl in adc jl sbb inc mov xchg pop fnop lret mov aaa xchg xor add dec mov clc and movsb icebp inc imul inc inc je faddl xor xchg xor jecxz inc roll jo inc inc xchg push adc sub jno sub push (bad) loope roll or in pop shr cmc dec adc sub xchg sbbl xor inc push hlt mull pop les sti inc test imul adc arpl cmpsb sti cmp and rcll sub fs fadd mov add inc std repnz adc inc dec (bad) sti push mov lcall or dec fldcw sahf push imul add and imul test sub icebp jge xorl push lcall inc xchg popa out and cmp cmpsl fs cs fs sbb fs push icebp orl add cmc cmpsl arpl push push dec or popa inc mov inc add sub rorl and push mov jle push add add rorl add dec mov xchg push push lock mov div xchg jle xlat movsl fs fsts int3 xlat movsb lret mov rorl pop fs mov rorl adc movsl xlat xor adc adc jmp xchg add push xchg inc jno add xchg enter aad loope mov xchg mov bound xchg nop and jb and jp cmpsl add and xchg popa cmp xchg in dec inc mov ja (bad) pop gs adc or cmp sub pop fs adcl xchg adc xor and sahf sarl loop lods xor gs push push rcrl inc jbe add mov (bad) xchg insl pop retw add mov ret cwtl (bad) xchg insb xchg insb into xchg addr16 and std inc mov jp sbb add aad pop xchg mov xlat add cmpsl xor dec shl hlt out adcl xor pop hlt bound repnz inc inc xchg mov inc inc popa aaa bound mov aas pop insl rolb addr16 xchg test inc add movl cmc cwtl int add pop push inc inc inc inc lret fsubs andl inc xchg (bad) mov popa aad jp pop gs add in (bad) or imull fsubs xor mov pusha and jo (bad) xor mov mov jno loop icebp xor xchg roll insl js adc movsl (bad) ret jecxz bound (bad) xchg xor cmp mov pop popl insl rolb sbb mov movsl cwtl xor inc cld imull push and ret sbb ljmp inc insl xchg sahf test xchg movl xorl or imul ds xchg std mov xchg out pop sub (bad) outsl outsl imul rol out push outsl sbb sbb popf push add push outsl sbb dec jno xor outsl outsl outsl insl xchg fwait jle in push xchg popf xchg xchg sbb addr16 aad lods mov (bad) sub fs or insl mov fs mov gs dec outsl ds mov dec mov inc (bad) lods outsl dec dec pop sti push aam dec fadd inc dec test xor pop mov scas inc iret aaa or mov dec and mov cmpsb das aaa sarl lock mov repz dec inc pop cltd test stc cmp iret dec push nop lcall cli ret pop leave cs inc cmp mov inc mov addr16 fistl sub movsl insl xor inc lods and inc inc les (bad) lods pop inc les imul and (bad) lods shr sub mov ret inc inc fcompl adc sbb insb add incl inc sti cwtl jg insl mov mov imul cmp mov dec adc add test mov xchg and dec stos adc push xchg popa pushf xchg inc jo adc add push inc fldt loop dec mov push dec and add shll cmp ret ficoml jnp add xlat push loop inc inc insb jo inc inc mov dec push inc inc inc adc gs xchg jmp add cltd pop adc sub inc dec add in adc add inc (bad) (bad) ret mov xor jb inc insb stc movsb sti cli int3 push jns or aad or sub add mov mov hlt mov sbb rolb jnp (bad) dec mov adc adc dec xchg add mov mov lret adc push xor lea dec jns cmp add out rorl fstps les ret adc test loope inc xchg jno rcll sbb xchg ret or dec add cmp jecxz in sbb fiaddl fdivl sub add adc xchg and daa rcll in adc xchg ret push lock dec jp ljmp fstpt adc in and inc (bad) inc rorl pop sbb jne pop movsb in rolb pop cmpsl mov and cld mov enter cmp inc push mov push mov pop sti mov adc xchg push mov mov xchg xchg pusha rcll std lea dec jp mov inc mov or jno pop mov clc in push lods fstps sbb add mov jae insl rolb inc dec in ret jecxz xor or (bad) adc popa push pop dec rol and jb mov pop xchg inc leave cli pop and push cwtl pop and js inc dec and cli mov mov push mov xor loop push xor pop xor add leave mov mov rcll ret push xor mov mov in mov sbbl out lods mov sbb inc push inc and and mov fistpl out int3 jns in mov sbb ja hlt test push xchg idiv sub fs cmp movsb mov inc popa inc mov repnz andl mov push sbb and push sarl shll mov sbb sti adc lret xchg push mov out insb cmp xor movsb loopne lods in pop and pusha inc xchg sti cmpsb adc aaa inc cmpsl loop mov aaa lret push icebp cmpsb mov push adc or movsb dec cli mov push mov mov andl lret aaa inc cmpsl jmp dec lods xchg ja cwtl (bad) ret push mov je int dec jl and jl cli mov cmpsb mov pushf ljmp lret add adc loope or jnp xchg push xchg xchg cwtl xchg xchg xchg cwtl inc push push push jle fwait pop lea mov mov cwtl mov cwtl push cwtl inc push push add push push push pop xchg cmpl cwtl xchg cwtl jno popa cwtl push cwtl inc push push pop or ret dec and pop js divl lods enter loope xchg loope pop arpl jmp mov or pop sbb jecxz mov or insb (bad) out mov cld adc insb orl jno sbb loope adc jo mov xor icebp movsl and push ret fs xchg pop push jo mov fstpl pop clc sub movl jae mov mov mov cmp jl xchg add stos mov dec mov mov shr cld dec adc adc shlb sbb addl adc enter cmp outsb pop add add (bad) rclb mov add aaa jmp pop shrl movsb adc adc adc int add adc sbb fs add fiaddl inc orb sbb ret rcll mov icebp jb and or int mov adc or test xchg adc jb ret xchg loope js pop ret dec xor int3 adc fmuls je jno inc push jmp jo in movl pushf sub inc or in cltd into adc gs aad xchg push or daa cltd mov adc mov pop inc xchg (bad) scas pop jae or pop sub pop shlb cld test mov inc je arpl lods pushf or nop xchg mov xchg lods adc add (bad) cmp push jae lahf enter push enter xchg lds sbb add and jbe xchg pushf jmp movsb mov sub add pop xchg and push ds inc adc stos jecxz mov mov pusha call mov pusha sbb dec push cmp pop add fistl xchg xchg and mov test adcl sub arpl adc mov sub call adc mov pop cmp popa lea adc pop mov out imul sub and (bad) aam (bad) pop lret xor sbb dec outsb bound mov mov sbb sbb in jl lret xchg xchg jle fbld push or jne dec adc fwait imul cmc ja arpl cmp (bad) fmull jb cmp ret sbb add pop mov inc gs addb lret xchg add mov xchg inc sahf and daa sbb in sbb pusha pop enter fdivs add xchg std fcomps inc test movsl (bad) adc add xlat movsb and lds mov xor sahf sarl rolb xchg lcall or popa inc pop push negb dec xor mov stc pusha aaa lar and xor mov add xor dec or add adc sbb sbbb mov xorb sub mov inc and dec jg xchg sub or adc mov xchg roll jb or jae push lock and xchg xchg sbb inc inc mov push mov fdivs aam lret inc push lcall imul sarl add inc fimull aaa lds ljmp or cld cld cld cmpsl les push sub mov andl das out das lahf js mov cmp pop sub inc movsl notb rol or mov add sub mov out cwtl loope push arpl cmp fwait ror mov xchg sbb inc dec mov jnp iret push push or mov sbb fild cmp push sbb xchg arpl testb cmp (bad) sbb test pop cmp out iret push and (bad) mov outsl or sbbb icebp mov sbb sbb out inc mov or xor sub jb xchg arpl idivl and inc add loope xor lcall mov cmp mov cmp (bad) push or rolb repz xchg mov pop out inc rcr adcl cli pop sahf push dec dec loopne adc xchg hlt dec imul sub add icebp je or insb ret insb inc popa xchg pop mov out mov sub xchg sub add pusha nop je test (bad) loop pop call imul adc mov pop jae orl data16 jmp push jmp inc leave jns dec cmpsl push leave data16 inc xchg repnz out push in in jmp inc cmpsb (bad) divb sbbb sub jno imul stc je mov repz mov div in xchg xor and add stc cmp mov dec inc test push dec enter push jns push adc repz fwait andl add daa add and mov cmc mov sub sub and xor stos xchg addr16 repnz push test clc mov rcll ljmp and dec and cmpsl ret hlt test ror sub lds inc sub and (bad) hlt and mov mov loope shll sub adc and or sub rcll pusha or fcmovnu movsb subl pop mov sbb shll or push jp push sub jmp push jno mov and mov enter mov aad pop rolb and fcoms push jno addr16 repnz fwait pop imul xor adc clc mov mov sub out sbb clc in repz loope js repnz add pop sbb loopne fwait call add adc mov jb mov mov in push mov xchg pop cmpsl adc cmpsl aaa adc and adc jo repnz loop push arpl data16 adc jl add push ja test jae push jecxz push (bad) repz pop fsts pop mov jns jns mov mov xor jb jmp xchg sbb js divb push mov xchg mov (bad) mov clc repz jae pusha repnz add inc push je repz dec adc adc jb pusha mov adc insb push arpl xchg clc pusha daa push mov loop repz jne push mov sbb lock mov movsl fwait xchg ja add repz cltd jo dec sti push jmp adc or push xor lcall push mov cltd mov mov jae ja mov lret xchg add jo les xbegin insb inc repnz inc jb je and inc inc push js lock test mov repz cmp loop jb fsts adc lods inc or cwtl inc xchg push sbb push xchg add aad enter xor nop nop repnz sbb movsl push arpl hlt (bad) jb inc lock stos xchg jbe mov inc lds push flds (bad) aam rol mov sbb push jecxz dec push js out xchg stos and xchg jns dec (bad) jb mov push mov nop nop repnz sbb movsl push arpl hlt (bad) jb inc clc or cmp shrb pop adc pop cmc mov and jnp jle ret adc mov popa ret jnp and xor ret cmp stos loopne inc sub xor jmp sub ja je pop test jb mov hlt sub jb fucomi bound dec mov mov sti jb cli push push jb lcall call jno dec jb mov xchg loop jnp lea mov jb push test (bad) jne jno push add jnp add arpl sahf rorb jp rcrl or in aaa (bad) xchg js stos or jno jl mov cmp fwait pop sub pop jnp inc jae loop ja push xchg mov jo push popa add adc dec fildl jl mov (bad) jno and test retw adcl test bnd jle mov cmc mov mov push push push mov mov fldt lods push push push (bad) jae repnz (bad) mov or sub jb jnp jl in mov adc jbe jo xchg and daa cwtl mov xchg jp push push mov mov jno xchg jp jns jns jb pop dec divl jnp clc repnz mov dec sahf popa adc mov packsswb out jp mov inc xor and xor add cs icebp in ret cmc xor lret push push jo cltd out jge adc (bad) roll mov pop add inc pop push inc in mov pop cmp mov jno in add xchg xor lret mov pop adc icebp andb and fs fwait xchg xchg (bad) je movsb fistl int ds sub jae sbb stos push rcrl ret push enter or insl clc pushf mov adc mov lret lret cmp lret mov push lods push pop insl push push lods adc dec aam sbb dec loopne outsb aad or push pop inc stos in mov xlat add lods xchg cmp in loope pop add mov mov and hlt imul mov std pop popa lret pop xchg cmpsl xor popa or sbb rolb mov pop pop test rcrl xchg div ljmp adc sarl add sub mov jns std pop xchg cmpsl popa imul and les ss lods add xor pop out inc dec mov inc xchg fadd push test adc jne push cld mov cmp ret aad cmp push pop mov sub dec add insb add (bad) inc xchg (bad) adc mov repnz ljmp xor sti aaa add pop test push mov pop mov mov xorl xor (bad) or mov aad rcrl add jno scas push inc push pop add or test pop stos int3 sbb push or shrb xchg inc sub addl inc sbb mov and cltd pop (bad) cli xchg xchg mov test je jb inc mov nop jo mov mov inc fidivl loopne and out loopne addl fcomps aad jl ljmp les imul arpl mov mov fist out pop fcomps sub js rol jge push stos jns lahf adc popl lock sub xchg adc jp or addl test dec xchg mov or mov adc inc mov lds mov scas out mov and pop (bad) and jo lock cmp outsl push push fs mov andb sbb in jo nop inc cwtl sbb mov inc or xor and cmp jge xor je (bad) mov jg hlt hlt js cmp je stos mov movl shrb sbb lock movl ja imul xchg enter add add sub pop dec xchg lods ret jp movl rcl sub pop movsb testb sub or sub xchg xchg lahf jo or (bad) xchg add in in sbb sbb xchg push pop jo dec int3 xchg rcr adc adc xor rcr pushf and sbb gs lahf jo jo bound and pop or in insl inc (bad) inc leave add jns jle imul movl xlat adc xchg adc adc arpl jne cmp push cli cli fildl pop cmp jae (bad) jae in in add insl cmp ret xor pop and add push das jno repnz fs pop add cmpsl add popf jno or rcrl cmc shll cmp lods xor or xor xchg cmp call sarl fwait mov jno and rorb sub sbb dec popa cmp cwtl sub pop sbb jp push add (bad) jb cmp add dec (bad) xor (bad) pushf jp les cmp stc out pop sbb pop sbb (bad) or in adcl xchg or add pop and leave adc xor inc inc sarl hlt test push mov fisubrl sbb ret popa inc (bad) xor dec rcrl (bad) in andl (bad) mov adc jecxz add inc ffree pushf push sbb jbe pop sar push loopne push adc pop (bad) jecxz add mov dec jo ret mov push daa orb push pop mov arpl push imul cmpb or add pop add lret test sbb fnstcw cmp push mov push stos xchg ret cmc push lea push shlb and add mov add xor inc jge mov pop sub push enter xor and dec jl mov adc rcrl insb cmp int fcomps xchg sbb cwtl mov loopne aam popl add call mov xor jo repnz xchg dec es fidivl dec and cmp push pop sahf push cmpl sbb out xchg mov xor and stc test (bad) jb jnp cmp xor (bad) sub pop sub push pop and mov pop add dec adc push test imul je imul or out cmpsb add sbb inc imul jl mov add popa pop fimull push inc out lods sub shrl (bad) mov adc gs addr16 fmulp (bad) imulb addr16 sbb cmp mov into push fiadd lea pop inc sbb or mov mov jno xchg inc fildl ds mov dec (bad) xchg in sbb and roll and movsb outsl imul adc sub dec (bad) mov and inc sub ds imulb mov add (bad) repz lret cmp jmp bound gs jnp push jmp lcall int sub rcr and sbb (bad) int sub mov (bad) fcompl sarl sub mov mov inc fcoml imul or lods push sbb mov popa sub push pop xchg push push lret adc aaa inc pop scas push mov rcrl (bad) xor cltd shrl rcll sub test movsl test mov cmp or or jle mov or sub push pop jp jo (bad) mov mov pop inc cmp mov mov xor mov fldcw xchg mov push adc rorl icebp dec (bad) sbb jns sub and int and lds insl (bad) shlb rorb jo jo add movsl or pop mov bound mov lds and sbb inc roll outsl mov pop mov mov dec pusha stos loopne mov aas or shl call in test mov inc imul inc inc data16 test add pushf popf or ss cmp push mov add js jb mov mov jbe jl (bad) jno inc (bad) xor mov jnp cwtl inc (bad) dec sbb jp cmpl jb (bad) jbe jno ja cmpsb popa jno mov in xor je in jno bound push add xor mov je in jno inc popa jno add stos xor mov ja test pop in jno loop in and push popa jecxz mov inc mov jo inc dec jb jae repz xchg jno jl repz xchg mov test push popf xchg dec aaa cmc lds inc mov inc (bad) sarl sbb jo inc sahf roll adc mov mov pop mov stos push mov xchg jno (bad) inc jae or vmovd lcall and lret xchg ret jae mul lcall xchg add sbb mov outsb cltd xor ret jp ja push loope pop test push xchg iret aaa cmc vaddpd roll jne addl pop pop ret sti push mov inc (bad) into pop xchg sbb jo inc sahf roll adc mov mov pop mov stos push mov addl dec cmpl inc nop xor inc mov addr16 jno shr sbb jo inc sahf roll adc mov mov pop mov push mov addl jecxz inc out jl nop xor mov test pop data16 popa jl lahf xchg xchg lods icebp mov stos rcrb push jecxz imul jl lahf xchg (bad) stos dec outsb gs xchg test aas inc mov addr16 in push sahf and xlat sbb jo inc sahf roll adc mov mov pop mov push mov lahf xchg scas xorl repz lds jae inc mov jnp imul pushf xchg mov test push mov ret inc and or xchg das insl push arpl push jecxz dec imul push ja (bad) ja add push arpl mov inc push pop xchg add repz jmp in insl push push rep sahf add sahf add inc stos les inc push jcxz dec mov mov ret jns sbb imul ljmp aaa jecxz jno xor daa or les test jecxz imul stos ret movsb and xchg mov lahf xchg subb stos movb lds inc dec imul cmpsl in (bad) sarl sbb cmpsb fs add inc push cmpsl in bound add daa sbb jo inc sahf roll adc mov mov pop mov push mov inc xchg scas xorl mov ss xor mov test push sahf cmpsl xchg iret aaa cmc (bad) pop pop aad inc mov adc nop inc lds jg aas inc mov xchg inc inc lods cmp xor cmpsl lds sarl adc (bad) mov cwtl sbb inc inc lods aaa lds xor jae repz cwtl sbb inc inc lods aaa lds add jae repz cwtl sbb inc inc lods cmp jnp imul pushf popf shll lds lret push test inc dec push mulb inc inc or scas (bad) push jae or cltd xor ret jp ja jecxz loope pop test push lahf and pop pop (bad) inc stos push mov inc push inc or addb and xchg fcoms sub ss test sub mov inc xor adc and push fnstenv pop and test fwait sbb repnz lods xchg and sbb movsb pop (bad) (bad) stos mov sbb jl pop push and add inc cmp and inc dec loopne mov pop cli test adc or mov mov jmp mov outsb mov and inc test fwait and gs dec shlb test add xchg cs int and pop sub jo mov out movsb xor ret adc dec inc push adc mov inc adc xchg inc loopne mov jne inc sbb sbb stc (bad) lock fmul adc sbb arpl mov sti incl ret inc nop dec leavew push or aaa push les shrl subl or xor adc fmul adc and int and cwtl fs ret xchg movsb and adc and push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc adc mov rcll flds and data16 adc mov add ret inc mov add test dec adc leave test loopne mov sub loop faddl shll xorb push adc mov mov adc cmpsb adc pusha inc test mov or insb popa shlb fadd gs dec test inc lock or and bound add pop pop inc and mov rolb or mov pusha orb ret es sub mov dec jmp mov or mov jmp mov sbb test pop inc add adc dec or adc adc sbb test lods cmp mov ret addb and add sbb insb adc popa xor mov pop sbb add loopne mov mov or mov or test add and adc xor popa push adc push adc xor adcl add sub add mov ret (bad) (bad) clc ret lahf inc aas dec stc pop pop add inc test ret incl mov add (bad) push ret (bad) lcall and push push loopne inc mov adc add sbb and inc xor pop add sbb rcll adc jnp xorl (bad) notb mov or xchg add jg jae inc push clc ret (bad) das mov jnp das inc arpl rcr or or add pushl xor mov push (bad) call push jbe mov adc popa xor adc (bad) incl nop adc sbb (bad) sub xor xlat or add insb dec (bad) or cmp stc or push jp or dec pop sub inc scas add inc scas sbb add or dec pop xor add (bad) (bad) (bad) (bad) (bad) (bad) (bad) push or ret orb in mov adc jl push hlt or (bad) xor (bad) cld popf inc add xor and pop loopne scas loopne jb sub and (bad) mov mov loope jmp xor push inc and or mov adc incb lods and inc decb add cld xor mov idivl div jmp jle fdivp loope aas push pop ret scas and mov fildll cwtl bswap pop xchg xchg ror out lcall jg aam mov rorb insb loope in jb test icebp adc mov push ret xchg lret mov mov lret stc jnp dec pop xchg bound jmp out mov shrb and (bad) xlat jecxz mul lret stos xor in mov arpl pop in bound repnz dec mov sub push pusha pop mov inc testl xchg scas jge push dec mov cmp js sbb rorl je push push lahf scas jbe xchg sub jmp xlat and fs (bad) dec in sbb scas mov jb fs inc mov or adcb gs add lods jbe mov jne sbb idivl idivl or xchg shll js notl aad enter dec sahf cmp add pushf (bad) mov fdivrp mov sarb imul (bad) add add ljmp push add cmp gs adc and cmp lods pop rcll push wbinvd mov das xchg cmc clc lock stos cs or pop test mov ljmp push pop dec mov lods mov xchg adc pop inc mov xchg into test add stc mov std cmp es fmull aam ret cs pop dec into mov in dec jp js (bad) loop or rcrb xor pop inc ja ljmp jb (bad) out pop je pop dec and notl sbb jbe (bad) sub (bad) add pop push mov mov jb sarb xor lret test js loop aam push dec test xorl cmp cwtl movhps mov push rorb sbb sbb inc (bad) mov sahf sbb adc in inc js fisub push mov xchg dec ud2 stc inc adc push push push aas aaa repnz cmp in shrb jnp icebp or sub pop jg add lret test adc mov mov lret jb sbb pop das jecxz push cs xor es push cmp jecxz jmp les pop mov rolb (bad) int cmp popa es ret (bad) jb pop mov pop jl ljmp clc and or jb pop lret fiadd xlat mov rcr pop and and (bad) (bad) out out mov ss inc mov out idivl js ja loopne test xchg jo mov pop jne (bad) js ljmp mov icebp cmc xchg fwait mov std out jnp ljmp pop mov pop xchg mov sbb sarb dec les push push cmp jb xor fisttpl cld ljmp scas xorl (bad) lock or daa mov jg add pushf inc mov push push push fdivl mov or inc xor mov les (bad) int fldl loopne insb or lret test ja fdivp mov jb outsl cld inc lock stos cs mov inc clc jb add (bad) jae and xchg jb loopne inc pop das loopne aaa std out jnp icebp or daa adcb ds pushf inc mov push push push fdivl mov or inc xor and ljmp mov add fdivp mov cld outsl cld inc lock xchg pop daa loopne gs and leave push adc (bad) out mov push aad ret fwait (bad) idivl call cs arpl pop mov sub pop (bad) lods movsb fnstsw int3 mov idivl fnop ss (bad) js mulb push adc mov repnz in inc insb push jecxz cltd push push pop cmpb dec cmp rol xor sahf sbb idivl call mov repz and jb add add js loop mov fwait mov es xor add clc pop xchg out cmp ret icebp loope push pop add lret push adc in mov jg idivb or pop xchg jno (bad) jns jb ds sbb jmp sbb cmp in sarb (bad) out cs mov mov orb sarl pop xchg test adc int3 mov mov stos pop push aaa dec sbb mov idivl add push rcrb jg mov int3 pop enter loopne mov gs push push dec les pop insl xor lret adc or mov mov inc mov mov and outsl je (bad) aaa add add jecxz xorb loopne out mov cmpb (bad) lock call ss pushf mov (bad) and lock jb mov cmp hlt sub jo push je sbb cmpsl sub mov out idivl jnp cmp jnp jmp fnstsw xchg mov mov idivl (bad) dec and les and jno jnp stc mov jnp idivl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov loop ret lock xor xchg (bad) jno loope pop js pop push adc movl push lea in lea cmp es shlb xor insl (bad) sub insl (bad) sub jo sbb pop and outsb cmp outsb cmp outsb cmp outsb cmp outsb cmp outsb cmp (bad) mov mov xchg mov cmp and ret lock inc fdivl idivl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop js pop push adc jp dec loopne push adc movl adc movl jno cmp sbb cmp sbb sub insb cltd inc add sbb (bad) mov mov (bad) mov sarl dec and enter cmp dec and enter cmp dec and enter cmp dec push push call fldt inc inc inc push mov enter xor hlt jp mov mov enter inc mov (bad) ret lock cmp mov cmp and ret cmp sbb cmp sbb cmp sbb sub insl (bad) sub (bad) sub cmpsl xchg jmp sahf inc cmpsl xchg jmp sahf inc cmpsl xchg jmp sahf inc cmpsl xchg jmp je cmp ror hlt icebp adc cmp push xchg dec mov cmc sbb cmp push xchg dec mov cmc sbb or sbb cmp push mov aaa inc jp insb aaa dec and leave je jmp push dec movsl mov mov popf jl pusha xor xchg or fsubrs mov cltd push jb sahf (bad) imul mov lcall inc sub loopne (bad) and mov fs sbb xchg mov ret ror adc fs lret mov adc and dec sub ljmp xchg stos lahf (bad) mov scas shrb sahf or and and sbb test out jno iret mulb cli mov outsb test jo xchg jecxz dec jb pop and inc jo fs push lock cwtl xchg xchg pop dec test mov fs mov xor inc test loop and aad fs xchg outsl pushf leave ror lahf in leave (bad) xchg stos dec ljmp rorl into fs inc iret mulb leave lahf pusha imul xor insb and int3 dec inc into push cwtl movsb fs icebp and dec fldl jno lock out dec sbb cmp pop mov cmp push cld shrb jmp (bad) icebp xchg inc or test jge and or out or adc shl movsb jge mov nop xlat imul jp fldl jne xor mov sbb loope sub push dec dec push into dec insb lock das popf dec dec and and enter push lock cwtl xchg lea popf dec dec and and clc loope sub push dec dec lock das popf dec dec and and leave xchg loop push dec push mov and stos lahf (bad) mov movsb aaa ljmp sub dec push mov sbb (bad) xchg into movsl cmpsb nop xchg (bad) (bad) popf mov bound lcall pop imul mov xchg cmc insb pushf sbb and test dec leave xchg stos or adc movsb fwait out jo xchg mov adc pop sub rorl into fs leave lahf mov movsb jecxz out rorl xor xor sub push dec std dec leave xchg stos xchg pusha test and pop add outsl dec leave icebp bound pop cmc mov add xchg and int3 mov fs mov dec fiaddl cmp xchg es cltd xor xchg es fwait xor xor fisubl in leave mov dec sbbb jo leave xchg xor test dec out sahf movsl push dec and push push bnd imul pop cmp mov xor xchg cli imul adc sarl dec enter decl xchg and sbb rcll inc mov cmp or cmp ret and adc (bad) pop or jo pop or mov and dec sarb imul test sbb xor jns js or jns jo pop or outsl dec ret mov mov pop mov int3 or adc inc aaa pop inc adc dec pop sbb or and ret mov nop les xor or stos (bad) jo jnp je push push std xchg push adc out or or mov (bad) dec test (bad) push jmp test mov fcmovb daa lea mov sbb pop gs pop gs pop gs pop gs pop adc adc mull es fs fs fs cmpsb pop gs pop gs pop data16 div div div div div div div div div div div div (bad) mov div div lahf pop pop pushf repz idivl (bad) aas inc inc xchg dec mov dec sti push cmpsl pop andl out sti ja jg div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div div ffreep movsl xchg pop js jmp into or jg mov negb fist sti pop or cmp aad cmp lods icebp lods loope jl lock aad cmp scas or xchg pop int3 jl repnz jl sub movsb loope scas mov jl jl jo adc xchg pop in int3 and jmp jl lock jl repz movl imul gs (bad) mov cmp jl gs (bad) mov in aaa (bad) mov jl loope insb sub lock jnp fisttp fdivrl and jmp xchg dec pop adc push sbb fistp cld into sbb jl lock enter mov jg mov scas mov lahf adc mov sbb sub jnp loopne xlat lods xchg pop in ss stos xor mov pop fdivp int3 jl lock jo adc xchg pop and out enter fistp cld into sbb fadds xlat lods xchg les and ret lahf sbb mov imul dec xor pop and mov mov arpl gs mov notb xor and sbb mov imul mov imul out insl imul divb ds xor notl push cmp daa int mov fistpl jns std lahf sbb loope outsl or or lock movsb scas xchg mov sbb jo push xchg test out and imul pop lea fcmovnb loope in addr16 int xor lea ror icebp scas sets notl outsb dec movsl jl pop fiaddl loop push mov pop leave push pop mov sti pop repz pop das sbb loope ret das push mov (bad) pop add ficoml mov std lahf ss lock test mov add js sub lea loope scas jno fisubl mov movsb mov push dec imull sar pop xor lea pop in es mov pop add das sbb call dec mov cltd test sub mov in out (bad) mov or adc adc push jmp mov pop sbb sub adc xchg or xor pop pop clc cmp jno ss icebp gs push and test mov xchg (bad) mov js das fcmovnu icebp outsb aad dec mov in push pop fimull movsb sub mov dec xchg mov popf fwait mov inc lret sarb ds fisttpl mov add leave cmpsl mov mov mov loop lahf xor out inc jp fisubl or xor push pushf pop dec jbe lods mov lret ss insb ffree mov pop xor fidivrl in popa mov cmpb (bad) cli push outsl sub rol int or xchg push mov mov fcmove inc mov inc cmp jmp lods lods adc push insb iret jb iret lcall cltd pop sub imul icebp and jnp sub mov push mov mov leave xchg sti ds mov (bad) gs pop jb mov faddl jns or aam lea sub ret push sahf fimul or fmull xor leave call das push add push mov sahf loopne pop mov lock xchg mov pop les subb fwait aaa pop sub ret push sahf fimul or loope cld mov movsl lods les les aaa mov setnp ss std lahf xor jnp arpl mov pop outsb out add adc ret ret push cmp lcall xor (bad) mov add sbb bnd jecxz loope push sbb outsb mov out pop movsl sti mov pop sbb shrl (bad) fstpt add xchg insb loope ret imul ja or mov push mov mov jno xor mov imul adc ret in pop sub xchg in push mov loop addr16 jo repnz loop inc inc ficomp (bad) ss loopne lret xor insl loope sti aaa outsl xor cwtl cmpl mov push fcmovnu div jl arpl (bad) mov mov in or aam lea outsb (bad) mov leave push cmp arpl loope jmp clc jo pop mov test outsl or mov cmc mov jmp mov sbb mov scas icebp pop xor cmovnp aam lret aaa xorb mov arpl mov imul mov add arpl mov lock jb add mov les lret data16 and fcompl and sbb hlt add or inc ret mov data16 sbb hlt add or inc ret mov cmp (bad) xor aam mov fwait insl ffree pop xchg inc add std mov sbb mov scas icebp pop xor cmovl (bad) popa jns (bad) add push test xlat sti insb push (bad) pop loop addr16 jo mov and mov or not pop mov nop scas sub pop pop (bad) mov les les xorb and popa xor cwtl dec ss push mov jo jb xor inc js (bad) xchg lea (bad) push mov adc (bad) mov mov lds xchg (bad) dec aad je cwtl inc jnp decl mov leave and xor mov lods bound push (bad) cmp mov pop inc rcr or ret pusha (bad) push ret xchg dec push pop dec pop xor fs pop pushf iret xchg (bad) mov inc icebp xchg fadd mov rcrl pop sub icebp and js mov push rep pop push adc pushf add pop ret pop ret and (bad) mov sbb or push popa (bad) in cmp outsb fndisi(8087 lock xor ret sbbl iret imul loope sarl in jge or sbb (bad) lock mov insl fcmovbe mov cmc xchg dec mov shll sbb pop stos add gs xchg data16 in xor mov in gs push jl cmp jecxz cmc mov movsb subb push fcompl ja ds xchg in xlat xchg (bad) pop dec sub ret jns in dec xchg lret sub fisttpl sbb imul sbb adc jb fcmovnu cmp jns pop xor sub ss cmp pop lods imul mov or sub sarb or js inc pusha sahf adc aaa ret icebp push sub fwait or lock cmp add sbb mov imul or loope scas xchg mov (bad) fldenv in pop mov sbb pop daa rolb loop push ret (bad) (bad) sbb xchg ljmp fisubl lds or mov repnz fsubrs mov popf fwait mov lret cs cmp pop (bad) outsl xor fldl lds pop pop ss dec loope js sub repz fldcw test imul (bad) mov (bad) mov sbb divb mov test sub and ret js aad bnd imul jecxz and out cs mov sbb bnd les jo push mov mov es hlt imulb ret or mov fidivrl cmp push fcompl in mov push push fcmovnb out lds pop iret fwait dec clc nop fimul in dec lahf daa into mov and popa dec xchg loop mov outsl insb gs pop adc cmp aad or mov mov outsl or or popf sbb imul in sbb add ficomp shrl adc fisttpll sub loope rclb or test or ss pop ret addr16 mov or fimull iret cwtl mov imul (bad) mov lcall test jge add lret (bad) cli mov lahf adc mov mov ds push in push movl mov jnp add (bad) ss insl or xor lds or pusha lods pop or pop ret jno mov (bad) pop or fwait or lock cmp out add xor xchg adc nop push scas mov dec mov inc mov roll or test or push outsb ss (bad) fldenv in pop mov inc sbb pop daa rolb pop in daa or xchg imul pushf mov push adc ret sub add sub (bad) daa das or mov dec xor daa fwait test std lods sub in stos loop (bad) push sbb lret pop push mov sub pop mov cmp in dec or nop mov pop das inc inc lret (bad) push push daa mov test lods sbb ret inc mov loope push mov and jge stos aaa xchg fstl sahf ljmp jo popa mov jecxz and (bad) mov push sbb mov nop sbb or or dec out cmp push add push inc es into inc jo sub es dec imul mov xchg ja pop mov adc adc repz sub or or add fldl adc sub mov mov jo mov (bad) mov sub xor loop push mov jnp lret inc pop pop outsl sub lock mov jecxz lods jae mov cmpsl jb ss repz xor mov aaa pop xor ret dec lcall mov insl push mov (bad) repnz imul adc cltd pop cmpsb or xor xorl jnp and mov add or pushf test pushf das ja dec push mov dec in js xchg pop xor loop imul push mov sub imul (bad) mov bound ficomp dec jae mov (bad) pop adc sub outsb mov in js xchg pop xor loopne adc mov shrl movsb jnp arpl int3 xchg out sbb add push cmpsb fstpt xor ret dec push aad or adc inc jo test das or lods mov fistpl clc inc cmp (bad) dec fnop aad fsubl aaa dec insb inc xor daa mov push cli mov jle mov dec xchg pop jbe rcrb mov pop pop int3 cli xchg out sub or inc out jne push mov pusha iret (bad) or iret test mov out jnp mov out or inc (bad) sub xor repz push fmull icebp std mov loope fstpl cmp dec sub mov sbb jbe (bad) test push in test pop in and out jmp dec mov or pop jg fadds lahf and xchg or sbb jbe fldt and repnz jg inc push lcall mov jnp insl and ret idiv enter outsb inc mov idiv jnp xchg dec decl bswap adc jnp xchg shrl push ret out jb test sbb pop imul lret push rcrb fstl push cmpsl pop inc jl adc aam push scas and jno flds (bad) out xchg jo and popf push or fist sarb mov stos aad stos in and push and sbb xor fwait repnz rolb call (bad) cmp jae dec int3 mov mov scas jae inc idivl pop movsb and xchg icebp lock mov sbb mov std arpl gs sub inc out mov mov dec push es addb xrelease adc out mov or arpl aas mov sbb lea arpl sbb mov das xchg pop inc add mov inc inc or daa adc or and cmp ljmp out or adc dec fst and add inc enter jmp stos push inc or daa pop pop dec mov push cmpl adc dec dec movsb and add sti and loopne and enter call addl inc or daa adc or cld sahf add and mov mov daa outsb ljmp aad stos sub pop mov or mov sbb scas int rolb scas add cmp jmp or fisub mov add sbb mov jne addb inc out jnp or mov xor push cmpl fs mov iret test jl ljmp add jg pop icebp or cld outsb cmp fstpt mov cmp subl iret nop inc sub pushf inc jns scas jmp jbe loop sarl fwait ja in mov mov fsubrp cmpsl mov adc and jne mov push dec rcl (bad) or loopne js in fmul cmp mov aad ret (bad) out aaa mov mov and sbb inc test stos sub idivl mov aas cmp jne in xchg mov hlt mov lock fsubrp mov mov xchg popa xlat push ror cmp icebp xchg loopne mov jnp dec out xchg popa xlat push fmul jns inc pop or scas in inc cwtl jmp add pop mov inc out xchg xor inc stos idivl out mov jne jp jl ljmp pop push cmp or ret push and call rcrb jle lods and arpl sti inc jmp jnp push (bad) in mov shrb test arpl ljmp ss aam jecxz inc mov xchg rolb cs jae cmp lahf stos insb call loop xchg jbe in jnp push jecxz sub and dec xchg inc push outsb cwtl or xor or add rolb fisttp daa mov (bad) mov xor mov leave jnp dec push mov push mov sbb loope mov repnz sti (bad) or jg xor sahf scas jnp add cmp jno enter sbb mov xchg adc rcrb inc add repz inc or daa outsb ljmp mov add aad and cmpsb pop adc rcrb daa and adc add jge add xchg add inc mov pop fs mov jmp add xchg pop into mov add out fucom das and inc jmp js and adc roll stos sub pop mov adc jnp sbb stos outsb (bad) pop adc rcrb rcrb add mov daa push pop (bad) mov push cmpl adc dec dec mov adc xor fmull mov push notl mov cmp movsb or adc push mov enter loopne mov mov add dec aas mov mov and inc mov sbb inc dec sbb jle comiss cmp xor mov out mov jns out ja scas or outsl jne in push jnp idivl mov mov mov mov popf out jnp idivl mov mov mov sahf add jnp idivl mov add mov push js mov and cmp idivl xor ret mull scas add mov call push add pop pop orb dec add mov nop add dec xor sub add jle lea sahf (bad) xor sub imul fwait jle xor sub insl sub add add add flds nop leave adc fs push dec add xchg leave inc rolb inc popa sub and mov or xchg mov sub mov jl add add shrb inc loopne mov fdivp mov mov push (bad) dec mov mov mov mov push test gs mov jnp adc fnstsw addl xor push push mov pop jnp push dec cmp inc sbb div out je sub test out xchg add jnp adc fnstsw addl xor push push mov pop jnp push jb rorb and test outsl je push (bad) dec mov jmp mov lret mov push cmpsl shlb jnp or sbb (bad) dec mov (bad) dec mov je xchg out test outsl jnp jmp mov shrb frstor fdivp inc and mov jne cmpl jnp jmp dec mov jb rorb sarl call std out cmpsl mov ja dec push adcl fnsave mov out jnp scas jb inc (bad) inc cwtl push cwtl mov add jnp inc cmp ljmp jnp shrb or pop dec add idivl mov pusha xchg push cli add jnp idivl mov aaa or fdivp mov mov addl and pop dec add idivl mov push inc fdivp mov add jnp testl sbb out jne shrb push mov idivl in mov idivl mov je repnz or sbb scas jnp idivl push inc lret out jnp idivl jnp push add jmp pusha pop jne push xchg mov jnp idivl outsl je or mov mov mov xor xor loopne aam sbb mov in mov idivl mov xchg mov addr16 loope or mov les or xchg jnp (bad) xchg mov mov xor or jmp pusha add fdivp mov mov pop rclb and add jnp idivl mov adc jnp idivl mov shlb test jnp idivl mov dec popa push sub ja out jnp idivl les or xchg jnp out jnp idivl mov push add push adcb fdivp mov mov imull pop lret fs movsl mov mov mov adcb rclb sbbb out jnp idivl xor scas gs jne out jnp idivl mov orb mov mov out jnp idivl addl mov add aad xchg jmp pusha adc push add idivl mov push fisttp out negl idivl mov push and push lods pushl jnp idivl mov (bad) or push add add idivl mov pusha xchg out jbe adc jnp idivl mov fisubl adc ret out loopne idivl mov addl scas gs je (bad) idivl (bad) (bad) (bad) (bad) (bad) (bad) push jmp das (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld xchg daa cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push (bad) (bad) es les insl leave in ds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std sub (bad) std cmp nop jae mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in sbb cld jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc dec leave in push jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli pop dec push (bad) (bad) and stos gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp mov (bad) (bad) (bad) (bad) call lret push bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) outsb push orb dec xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld movsb mov aaa sub jmp mov (bad) (bad) (bad) (bad) jmp daa scas push lret push bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) outsb push ljmp ja fnstsw (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or cmp lret jmp jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec dec jg call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec lret jg leave in push std xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli pop dec pop inc test ds leave in paddb (bad) (bad) (bad) (bad) (bad) push mov fwait scas jmp inc jae jb sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push cmp fnstcw (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld movsl xchg daa xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lret rcrl aas repnz mov (bad) (bad) (bad) (bad) call lret (bad) and push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call ds xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli pop dec jg les mov les or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc mov xchg mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push jb xchg popf mov xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld movsl addr16 push hlt call push pushf stc mov mov repnz (bad) incb xchg mov lahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc mov loop decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld movsl aaa sub jge les in jmp jb mov call xchg cld mov mov mov (bad) xchg push idiv and stc adcl fsubl (bad) (bad) (bad) (bad) (bad) arpl call std xchg inc mov xor (bad) (bad) (bad) (bad) (bad) (bad) cld movsl addr16 (bad) cld inc cwtl xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in sbb push daa xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lret mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) outsb push dec sub cmp rcr adc jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec lret jbe adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc dec leave in push jl scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov pop jmp push jae sub (bad) cli adc xchg popf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push stos xchg mov adc xor call aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec lret jns into push lret lret jbe adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc dec cs lret and xchg xchg enter fnstsw (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp test pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push xchg fdivr call cwtl xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lret mov les std pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov (bad) sub xor incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std sub mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov (bad) cmpsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli pop dec inc push bound cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) xchg push push inc cwtl xchg jg jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov push bound cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) xchg push pop aam xor (bad) fstpt (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call call iret incb (bad) sarb push (bad) fistl (bad) jmp xor (bad) (bad) (bad) (bad) (bad) cld and (bad) (bad) (bad) cld lahf (bad) push sub repnz (bad) fadd cs (bad) dec rcrl aas cld movsb xor inc mov (bad) xchg xchg (bad) fadd and in stc xlat (bad) jne (bad) (bad) stc sub (bad) jmp (bad) sti arpl dec aas clc out sub xor jg jmp dec cmp (bad) pushl (bad) push fdivl (bad) (bad) lcall ja clc lahf (bad) (bad) push sbb pop (bad) push and cmp (bad) ljmp jo (bad) (bad) (bad) clc xor inc jo cltd jg dec adc jno (bad) (bad) cli into mov lahf (bad) (bad) push pusha lret orb (bad) incb adc jno (bad) (bad) cli push test pop (bad) (bad) push inc sub and ja (bad) inc mov (bad) (bad) (bad) (bad) (bad) incb int3 xchg je cltd add mov popf add inc popf addr16 and fs push inc mov or popa shlb or and adc add je cltd add enter (bad) decb cmpsb popf add inc sub loopne pushl jae pop and push (bad) push inc inc nop mov mov sbb mov (bad) xchg inc dec nop ret je cltd or cmp dec xchg cwtl (bad) add shll push mov cs cltd or lea call lret xor call sbb xchg nop cmp lods or out xor lods call inc nop pop je cltd add rolb int3 orb clc sbb cmpsb inc mov rorb sub popl rorb and cld fs into andb mov pop in mov in inc mov lret push and add inc rorb push push or add cmp movsb movb inc mov je sbb add mov or inc and aam loopne dec mov xor ret (bad) decb pushl stos icebp les das (bad) flds inc (bad) mov incl and test push adc mov or cld data16 cltd add lret xor inc or call xor aam push cld push sbb pushl add pop pop add mov add rcrb jg add call or pusha push enter and push je sbb add pushl cltd add (bad) ljmp jg (bad) lds add je add sti inc clc and sbb nop push sub or into mov mov cmp stc stos cmp cmp xor out rcl in fsub into in out dec imul mov push hlt repz sti xor pop rcr ljmp loopne out mov dec mov jl pushf mov ja jb lock je subb dec sbb or lcall pop pop xor into xor mov dec xchg mov inc loop add test mov clc mov mov mov sub insl sub dec mov xor cmp sbb mov sti cmpsb jle test sub andl mov cmp jge mov adc mov pop sub (bad) push jp push mov int cld push cmp cmp sub hlt mov in adc mov mov std inc repnz mov jl cmp mov sub mov cmc lret daa sub stos sarb into cmp sub repz mov out insb aaa hlt dec lcall xchg fistpl out es fimull pop jb mov cmp fiaddl lahf imul fmul adc hlt mov neg xchg xchg dec pop (bad) mov lcall mov andl mov insl daa sub or inc hlt mov clc sub and mov or push mov sbb in enter insl cmp cwtl cmp xchg sub cmp cmp addr16 xchg cmp push jp xlat stc jns sbb inc mov xor mov xor arpl mov mov punpckhwd mov ret cmp jge lret cltd pop jge sarl lret pop imul fistl cmp adc mov mov push cmp stos pop popf cmp mov jbe mov jo jnp mov mov push stos pop popf and push push lcall push aaa mov push stos pop popf cmp in data16 nop mov push jp sub (bad) push jp sub pop or and push stos pop popf cmp mov or mov xor xor dec push mov jns insl jl push in into popf dec nop in add hlt out sub (bad) int xor sbb cmp pop or mov mov xor pop or addr16 idivb sub insb mov mov lds enter cmp aam cmp jns cmp pop cmp cmp push rorl cmp inc dec adc push cmp mov andl mov xchg jmp mov call pushf sub out push dec mov dec test out dec test (bad) mov xchg jnp mov inc cmc out insb cmp icebp cld movb cmp dec imul cwtd sarl jo sti and pop or mov std pushf pop cmp dec push inc mov test lcall test adc mov clc ds std pushf pop cmp pushf inc cld cmpsb std mov dec adc sbb push leave jo pop lea out add mov add dec push mov lret gs ret sub loopne loopne hlt mov cmc loopne subl inc mov imul adc (bad) jmp cmp pop and jns xchg notb fidiv and loop mov adc repnz adc leave jb std jge dec adc cmp jo mov popf dec mov daa jbe mov jp mov sbb inc mov popf mov jns int loopne sbb orl lret addr16 fimull mov int sbb push std mov mov jp add sbbl xor loop hlt sub mov mov or pop lods or insb mov repz sbbb notb mov dec mov mov jl pop out bound push out sbb mov jnp mov xchg cmp sbb idivl bound (bad) cmp subb or shrl insl pop nop jmp (bad) dec data16 add push fisttp push pop mov addl test push scas popf (bad) push sbb imul lds fsubr lds cmp pop xor andb mov dec ss test clc cmp mov mov jae inc and push add pop lods push fcoms je cltd into (bad) int or dec cmp sahf add loopne fsubs xchg adcb add lret popa rclb cmp pop or dec pop je mov sub xor mov push insl fimull int out insl mov jne inc nop in inc (bad) mov repnz push pop pop cmp pop dec ss or sbb xchg test sbb cmpsb xchg push test sbb iret xor nop jle push mov add sub adc xor or cwtl mov inc add add lods or mov push adc mov sbb iret add dec adc xor rolb js push cs add mov imul or mov aaa pop lds push adc ret mov movsb sbb lret fs enter (bad) and and jae xchg dec adc dec test mov pusha dec mov lret ljmp sub mov sub jo jae sarl push adc mov sub xlat inc scas aad (bad) push cmp pop mov es sub and dec test in into test outsl stos add dec mov lret xchg insb es stos adcl shr out cmp lret sahf lds push out pop pop cmp mov (bad) or outsb sbb (bad) or inc mov or popa mov mov insb insl push or pop mov in ss push in dec xor or sub cmpsl push inc and out push push jmp cmp rorb cmp add ret addr16 repz or lods iret add and test test mov xor int3 adc xorb enter aaa cmp sub bound mov xchg icebp dec mov pop pop es mov sbb (bad) ss sub sbb mov pop sahf lods pop movsl inc or nop add and and push nop mov ljmp mov adc jne or push mov pop sub inc mov mov or das adc dec xchg out xchg push or and add data16 scas mov xchg inc xchg xor rorb jo jbe ja sbb call cmp dec add shrl mov (bad) jmp into pop cs sub push pop mov push push push subl pop adc push jne in inc xchg lcall or stos mov sbb insb add jo insb mov paddsb xor pop mov xchg push or lret out pop (bad) mov imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul mov xchg or lret xor push cmp mov imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul test push sbb mov sbb and add add inc add or add add mov imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods add (bad) lods inc aad pusha dec sub xchg inc pop (bad) mov imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods and mov push sbb mov sbb rclb add or add add add add pop (bad) mov imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul lods imul pushf add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) (bad) (bad) (bad) cld stos loop lods push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push jne (bad) (bad) mov (bad) (bad) (bad) (bad) (bad) cld sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cld mov jno adc and pop dec mov cli loop cs cli mov scas and pop dec orl (bad) mov scas and pop dec test mov das fmull fidivrl in pop dec cld push mov push jl (bad) inc lret jno sub aam test and lret pop into and pop pushf dec mov negl mov sbb loop xchg les cmpsb jno pop dec loop inc cmpl sbb cs les jnp mov out and jmp (bad) cli mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec popf fdivrs (bad) (bad) inc sub cli mov (bad) (bad) (bad) (bad) (bad) (bad) inc sbb jp test jb and (bad) (bad) (bad) (bad) sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb (bad) (bad) in aas add lret pop cmp (bad) jmp (bad) push mov decl (bad) push gs cmp pop or xlat aas std cld pop call (bad) (bad) cld add dec (bad) incl push clc addr16 out mov (bad) clc and ret aas (bad) (bad) lahf call or jle (bad) push (bad) inc lock (bad) (bad) inc dec sarl cmp aas (bad) (bad) sub mov decl decl mov xchg jg ret (bad) cld add stc aaa ret add ret loope icebp outsl lock aas (bad) (bad) ljmp add (bad) ljmp (bad) cld add (bad) (bad) scas (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) cli mov inc aas (bad) (bad) ljmp (bad) (bad) (bad) ljmp (bad) incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc inc inc (bad) lock jmp inc xchg clc stos adc or test add mov (bad) clc mov jb popa adc pop xchg adc mov inc add pop push mov or daa pop xchg test popf jb jns inc adc add (bad) (bad) jmp (bad) (bad) (bad) jmp push (bad) (bad) (bad) (bad) (bad) ljmp std ss add inc lea inc bound sbb or inc (bad) xor ljmp inc shll and pop subl (bad) cld das (bad) dec mov loopne lahf rcr cwtl or dec mov test adc clc inc sub call inc adc scas cmpsb aas jbe fadds cmpsl ror ds hlt aas stos cmp cwtl cmp jg adc push daa fistp es xor inc imul add mov inc and test pop cld test adc jg inc add mov mov mov mov mov ljmp bound mov and test mov (bad) add xor and and or cwtl test cmpsb lods andl pop add (bad) stc adc stos mov xor cmp inc add add leave push cli jo clc mov sti push cmp sbb sbb jb and jge std hlt jb pop fnstcw fisttp pop sub and pop adc mov xchg or dec test xor add or fs ds (bad) lret push jecxz icebp je outsl push sbb ds loope xchg scas (bad) mov sbb pop (bad) fistpll inc jl lods rcrb and or xor push lret xlat jecxz sub fistpll fistpll fistpll fistpll fistpll cmpsb icebp cmp jno jmp add inc add xor sti in jb mov sub inc jb mov pop xor add add lea jo xchg add (bad) mov xor inc or dec ss cmp push cli pop add add mov sarl mov mov sbb sbb pop jl insb mov imul push imul imul clc pop call pop jmp pop jmp les ret js js js js xchg xchg xchg xchg aad aad aad aad shrl imul pop lea push sbb jno jno jno jo mov or pop jns jns jns jns cmp cmp cmp cmp cmp sub sub sub sub imul pop ja ja ja ja ja ja ja ja jl fsubl data16 data16 data16 data16 pop dec pop dec pop dec pop dec pop dec pop dec pop dec pop dec pop dec xchg xchg xchg xchg xchg xchg xchg xchg xchg mov xor xor xor xor xor xor xor xor xor and and and and and and and and and push insb push insb push insb push insb push insb push insb push insb push insb push insb or jl jl jl jl jl jl jl jl jl pop icebp pop icebp pop icebp pop icebp pop icebp pop icebp pop icebp pop icebp pop icebp pop in dec in dec in dec in dec in dec in dec in dec in dec in dec in (bad) or or or or or or or or or std add add add add add add add add add add mov insb mov insb mov insb mov test sub sub sub sub sub sub sub pushf pushf pushf pushf pushf pushf pushf pushf pushf pushf pushf pushf pushf pushf pushf pushf pushf pushf pushf pushf lret mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push or push or push or push or push or push or push or push or push or push or pop jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp js js js js js js js js js js js js js js js js js js js js and and and and and and and and and and and and and and and and and and and and and adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc sbb pop out out out out out out out out out out out out out out out out out out out xor imul xor imul xor imul xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov fnstsw jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jnp jno sarl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait stos fwait cltd imul cltd imul cltd imul cltd imul cltd imul cltd imul lret mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jo jo jo jo jb jo and jb mov js test push and push push mov cwtl adc jae sub mov aad js push nop add xchg test xorb movsb jo mov jo (bad) ret xor inc shl (bad) lock xor testl cwtl adc adc mov add mov adc adc test xor push pop xor nop jo ret test mov xchg repnz jo jo jo jo mov and mov aam and inc xor jbe fsubs jo ja mov js hlt and daa adc addl mov xchg add (bad) repz ret xchg data16 adc (bad) dec adc xchg mov aaa mov sbb rcrl testb jmp cmpsb push and push in inc lock and into je lods ret add and push mov add cld add insb out out sbb enter cli cmc dec pushf out sbb es sbb adc pop nop les lods jne les jae or adc push out dec addb xchg push jb fs jae xchg ja sbbb xchg xchg jnp adc jle dec es icebp ljmp dec add or or dec sbb pop jl inc push lds mov in or jmp ljmp test push pop add or push jecxz clc clc dec cwtl or adc inc adc and test rcll push enter mov pop (bad) push loopne leave adc add inc stos xor or scas (bad) stos lock push (bad) (bad) adc sub push scas (bad) stos icebp jmp adc and jo pop popf add inc test adc inc push add mov adc add fsubs add insb push push push and mov lock add push pop xor in mov push in dec xchg mov cmp rcll cld jp push mov add jp inc cmp and sbb or inc pusha dec loope xchg push or ret dec add call stos icebp ljmp add or mov add insb push push push and pushf out mov out pop test and xchg into jb add into jb enter jmp sub jae lods aad roll pushf std sahf scas pop addr16 shl jae cld das push mov in packuswb iret ret cmpl sbbb addr16 ret repz jle push addr16 jle pop out into inc sbb jae cld push pop or pushf out mov cmp and jae cld push push or (bad) rdpmc pushf in push addr16 inc add cmp lock mov ret lds sarl into jle or and inc stos repz out add pop aaa into jae xchg std sahf lahf pop out enter mov pushf in lods push addr16 inc or clc jecxz into jle dec out into inc or mov cld mov mov lds cmp jae mov das pop std jp sbb add mov dec or les addb ds loopne int3 out mov adc out pusha mov xchg add mov ret xor adc pop sub pop sub (bad) hlt add or (bad) and pop push cltd das popa sub xor add sub or mov mov adc andl test (bad) nop xorb push mov push or ds addb ret lret cmp pop out lds or out into jae out adc add test fwait xchg (bad) or add shrl inc inc pushf out into jae out xchg into jae dec out into and pushf out jns jae cmp cmp sahf jae dec out rclb les ror add inc xor imul cmp inc push adc insl loopne or sbb inc push mov push pop rorl push mov loop cmpsl cmp jae out aad repz out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out jns and jns pop cmp mov add pushf out xchg into jae inc aas jae fsubrl cmp add ror add xor cmp add jae or pushf add pushf jecxz cmp jo into jo into jo sbb cmp jo into jo into jo sbb cmp jo into jo into jno xor jae loopne pushf loopne pushf loop addr16 out rorb lds enter loopne dec cmp test xor into js rorb sbb cmp pushf loopne and add push jae sahf jnp out adc pop cmp jae out cmp out rcrb (bad) scas ss push cmp or add into add sbb (bad) adc adc jb jb ret addb ret ret sbb rolb lret jp ret push push push push push push push sbb xchg push push push push push push push xchg push push push (bad) sbb push (bad) push push push adc cmp jae out into jae out into jae out into jae out into xor inc cmp jae out into jae or pushf lock lods cld push add cmp or cmpl add push cli or (bad) cld pop repnz lock xor outsl movsbl inc outsl jl cmp popa loopne popf jmp and push add jne inc loope sub nop push add push and rol shr and add into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae or addl cmp jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae out into jae loop jo pop cs or ror mov insl add jo mov add data16 pop stos test je bound xchg mov pop mov (bad) adc fsubrs jae out into jae out into jae out into jae out rcrl into jo into hlt push into lock mov or adc addl sbb in into jo fidiv out sbb cmp jae out into movsb add (bad) dec add sub xchg iret mov orl pop roll adc loop inc fsts repz adc popa or inc mov mov add mov data16 test jp push mov cmp mov mov add and cmpsl inc and cmp add loop out cmp adc sub push or pop pushf clc sub jl mov jl into and sahf mov sub adc in into daa add stos and lds test mov nop cmc xor add test adc pop mov insb lds test adc cmpsb xchg adc pop lret push xlat loopne or inc dec xchg mov mov inc mov xchg cmp push xchg cmp add in lcall and dec or xchg out movsb mov xchg hlt (bad) cmp pop ret cmc pushf mov rorl jle adc in lahf out (bad) and popf adc sub pushf or add ret les inc pop xor sbb adc out ret popa cmp test jp jecxz cmp add movsb adcb adc mov push jae push push inc and cwtl test imul and jl dec fcompl mov pop repz out sub adc jle adc dec jae add adc pop sub adc iret dec or pop pushf loopne dec (bad) and xchg inc test push movsb data16 int je dec cwtl je in pop lret subl cld and (bad) fildll pop pop jp call add fildll ja jns add inc jo sub (bad) daa out incl cmp outsl lret aas sbb lods push sti xchg imul xchg rcll push test aam mov xor jo rclb mov lea aas mov lea (bad) cmp xchg pushf dec arpl test mov test adc loop in adc loop (bad) movsb cmpsl adc push popa (bad) movsb das mov cmp mov in mov nop inc shll popa adc sbb cmp or cmp lea mov xor or mov in add inc add add add orb jl inc daa dec add push jne push push add fsubl jb jmp mov inc mov pop aas add and (bad) jo cwtl in in (bad) hlt enter gs gs std and stos dec aad (bad) and add pusha pusha insb mov mov dec sahf stos stos (bad) sub push pop ljmp int3 pop add mov popf int xchg pop jg loopne imul dec add cmp pop mov cmp adc out jnp mov loop out sbb and sbb dec ds into (bad) or (bad) sbb imul mov adc (bad) or mov and and and mov push jbe pop insl jo xor xchg pop push inc push mov pop loop bound xchg stc pop cmp pop sub adc (bad) push jnp (bad) out idivl jecxz cmpsl sbb mov cmp push xchg xchg xchg sti and sti cmp and lret mov nop mov adc (bad) les add xchg insb cmc fcoml xor inc imul jp in mov dec in inc xchg out mov xor mov mov jge xchg mov arpl loop cld cltd rclb inc mov popf cmpsb lods mov jl fcomps call xchg sbbl aaa fisubl jmp daa rolb mov adc inc add push or and mov inc jmp add mov sbb xor mov movsl ret push subl dec sbb push dec test add pusha adc (bad) inc push push inc push mov push mov mov pop fldenv out cmp sub xchg mov push adc push shrl cmc push leave mov and clc cmp xlat xor out cmp lret inc inc inc and inc jl rol push es (bad) sbb imull xchg xor ja sarl or or repnz dec inc inc dec mov roll mov fdivrs mov es adc ss lcall divl rcll ret stos xchg pop inc inc fs adc test rcll (bad) sbb mov vmovaps (bad) repnz inc xlat cmp pop dec testl xlat jecxz sbb sub pop (bad) inc sub ret mov jl aam in mov movsb mov (bad) testl aad mov jno mov push fwait xor lods loopne xchg add orb (bad) jo mov (bad) jo (bad) fnstenv out xor xorb movsb cmp or push ljmp cmp cwtl enter cmp ss mov shrl mov imul and lret pop stos loope mov mov xchg mov pop ja gs mov cmp or (bad) xchg cmp or sub sub div loope or sbb adc xor mov and inc xor pop add clc and sub hlt nop stc xor sub stos sbb movsb sar int3 sub sbb pusha icebp inc cld and and adc adc add jne sbb andb mov andl xlat popa addr16 pop (bad) xlat cltd ret xchg mov nop sbb adc jb (bad) rcr inc and add loop adc xlat stc xor and add in sub jae and enter or pop and mov pop pop jne addl xchg ret inc cmp xor sti stos lds inc adc push jo lcall inc nop imul mov mov add fwait sbb sub fwait daa sub std dec push push add (bad) cmp js or lock cld lock imul and and xchg lock test adc pusha data16 mov push xor xor and stos movsl and and shll test dec stos inc mov jo lods add out cld jmp jmp lret push inc test xchg movsb aam cwtl xchg push sub add or pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl lahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld or add add add ret add add add add jo add add add add push xor add pop add add add adc add pop jb add xor add flds add fldl add add pop jb add push add or add or add add add push add lds add dec add or iret add pop pop add lds add add or add pop pop add or add inc popf add dec enter add adc add push add add add adc add push add rolb add add fildl add sbb add or fildl add add sbb add or roll jo add jp add sbb add push roll adc add jp add xchg add pop add adc add adc add xchg add add and add adc add xchg add add and add and sbb add add pushf sahf add movsl mov add sub add push adc add faddl add mov add push adc add xchg add scas faddl add add add lahf add pop xchg add sbb add mov push add xor add sbb add sbb add into int add stc add ss add scas add sbb add into int add xchg add ss add push add sbb add sbb xchg add jecxz add cmp add cmp add sbb sbb add out sub add add aas pop add pop sbb add out sub add stc add aas pop add inc mov add and add cli stc add push jl add add inc inc add and add and add jl add push add inc inc add inc lahf add and add add adc add add inc lahf add dec aam add add es add sbb add daa mov add dec xchg add es add daa loopne add mov add dec xchg add dec in add daa loopne add jae add xchg add aas and add push data16 sub add add add and add push data16 push clc add sub add sub add dec mov add push clc add push je add add sub cmp add add push je add add sub cmp add add insb (bad) add pop test add das cmp add flds add add add pop jmp add add xor add xor add add cmpb pop cmp add add xor add add cmpb mov add add pushw add xor add xor imul xchg or add add push cltd add aaa sub add push add push cmp add sub add mov add lret imul add add cmp add lods lret mov add insl ret add jb add cmp add cmp add mov pop add jne add cmp add mov sahf add jne add js add cmp stos add leave sahf add ror add js add jnp add ds add inc xor add lret add ficom add jnp add jg add inc xor add add ficom add jmp add add les add add jmp rolb add stos add inc inc add inc les add rolb add fwait add subl add add add add add xchg add mov add inc movl add addb mov add inc movl add addb flds add sbb add add dec popa add flds add sbb add add dec popa add dec testb xor add cli add mov add nop cmpsb add dec testb dec insb add ds add dec pop add nop cmpsb add xchg xor add dec aad add add push sub add xchg lahf add dec aad add add push sub add xchg lahf add lcall add add pop bound add add lcall add add push dec add bound add add mov add add add push scas add gs add cmpsb add add dec add push scas add insb incl add add test xchg add push scas add push dec add jne add or add scas addb push scas add push dec add or add scas addb mov add push dec add push cwtl add test add jne add dec add push cwtl add mov add aaa add roll add add mov add mov add roll add add pop or add out add (bad) call add pop or add add xchg out add fwait cmpsb add lret movl add add pop fwait add fwait cmpsb add stos lods add into std add iret add pop or add add stos lods add mov add iret add aam add pop fwait add pop sub add mov add aam add fiaddl add pop mov add mov add add pop mov add mov adc add jno add and add add pop sub add rol add fbld add mov add pusha mov add lds add inc add in add call mov add add fiaddl add adc add jmp add popa jecxz add add loope add jmp add jmp add out lcall arpl add pop add clc fiaddl add lcall arpl add add fiaddl add sti add out sti add lock add add fadds add sti add adc bound add stos add fadds add add adc xchg add icebp stos add repnz add add lea add xchg add xor add repnz add add lea add add xor add xor add hlt add clc mov add imul cmp add sti rolb add add imul das sub das das xor xor xor das dec das outsl das js inc xor xor cmp xor xor xor inc ss ss ss aaa inc cmp cmp push cmp cmp xor inc inc inc inc inc inc inc inc inc inc inc inc inc dec inc dec inc dec inc dec inc dec inc push inc push inc gs inc addr16 jne ja xor inc xor inc inc inc inc inc inc inc inc dec inc push inc push inc push inc push inc pop inc pop inc inc addr16 push inc inc inc inc inc inc inc dec inc dec inc ja das inc xor inc inc dec inc push inc outsl inc inc inc bound dec dec dec inc dec inc dec inc dec inc dec dec dec push dec inc dec inc dec outsb dec inc dec dec dec push dec xor push inc push dec push push push addr16 ja push push addr16 push push inc push dec push inc push push outsl push inc push dec push dec push push push push push gs sub push addr16 outsl push inc push push push arpl pop aaa pop inc pop inc pop push pop pop pop arpl pop pop outsl popa cmp popa dec popa bound bound dec arpl inc fs fs fs fs fs dec push outsw xor addr16 addr16 arpl push xor imul imul imul inc imul insb inc insl dec insl push outsb inc outsb inc jo jno jae jae je je je je je jne jne jne jbe ja ja ja ja ja ja ja ja js js jns jns jns jp jp jp jp sub inc sub xor cmp cmp push das push das push das pop das arpl data16 jbe jp push xor xor inc xor xor dec ss ss ss das aaa inc aaa inc aaa dec aaa push cmp push cmp xor inc cmp gs cmp inc outsl inc jp push inc bound inc dec inc sub xor inc inc dec dec dec inc dec inc dec pop dec das dec cmp dec push dec xor dec dec pop push xor push push push bound push jp inc push pop push gs push das push inc push inc push dec push push push xor inc push jp push insb push ja jp cmp pop cmp pop pop insl pop outsl pop jae ja inc pop pop popa inc popa dec popa push fs gs gs gs data16 sub xor addr16 addr16 addr16 inc push dec push gs sub imul imul das push push push insb xor inc outsl push jae jae jae jae jne jbe jbe ja ja ja ja js js js jns jns jp sub dec sub dec das jns xor cmp dec xor insl xor inc ss aaa popa cmp imul cmp inc pop inc push inc dec inc dec inc push inc push inc jbe cmp inc inc inc dec inc arpl inc dec inc dec dec jo cmp dec dec dec dec dec dec dec dec dec xor dec dec outsl dec das push xor push dec push ja dec push push push push push push push inc push pop push arpl pop das pop inc pop insb pop inc pop inc pop jno dec bound inc arpl inc arpl ja push fs addr16 addr16 addr16 pop push inc imul inc push push push imul imul insb dec insb arpl outsl inc outsl dec jo jo jno jb je je jbe jbe jbe ja ja jns jp sub das dec xor push xor dec xor inc xor push xor xor ss ss aaa inc cmp cmp push cmp aaa inc dec inc push inc pop inc insb inc insl inc ja inc inc dec inc outsl inc inc inc xor inc inc inc inc inc ja jb inc dec push dec cmp dec cmp dec push push inc push push push jbe dec push inc push arpl push jbe push push pop pop arpl pop inc pop inc pop dec pop inc pop gs addr16 jae inc arpl inc fs fs xor push ja cmp insb xor push insb pop insl push outsb outsl jae je jne jbe jbe jbe jbe ja ja ja ja js js js js jns jp sub dec xor inc xor xor xor xor dec cmp inc cmp das cmp xor inc xor inc xor dec inc dec inc jb inc inc dec inc dec dec xor dec das dec jns dec dec insl dec inc dec push dec dec push cmp push push push outsl push dec push pop push imul push push push xor xor pop dec pop fs push pop dec popa dec popa push arpl arpl inc fs arpl addr16 push pop imul inc jo jb je jne jbe jbe jbe js js js jns jp jp jp sub inc xor ja xor dec xor popa cmp cmp outsl inc xor inc dec inc push inc inc inc xor push dec push dec ja dec dec cmp push das push inc push dec push outsl push js inc push je ss gs dec push das push sub pop dec pop imul inc bound addr16 addr16 push inc push xor dec imul push insb xor jno jno je je je je jne jbe ja ja ja ja js jp sub das inc das push das ja xor outsl xor dec cmp cmp push cmp je push xor inc push inc push dec outsl dec inc dec inc dec xor dec push dec push push xor addr16 dec push pop push bound push xor push ja xor push inc push jne xor fs addr16 addr16 addr16 addr16 das push je inc imul insl inc outsb inc outsl inc outsl inc outsl dec outsl jns inc jno jae jae je je je ja js jp sub xor aaa xor inc xor xor addr16 ss fs jae push inc arpl pop inc ss xor inc popa dec ja xor dec inc dec push dec arpl push push push pop push inc push jb insl push das push xor pop ss imul inc inc addr16 outsb dec outsl inc outsl dec jb jb ja js jns das xor jne outsl xor xor das cmp jae sub inc inc inc dec inc pop inc pop inc jns outsb dec jp insb push dec push inc push dec push push push jne pop push push push push dec push push push addr16 xor pop bound arpl pushw jb xor insl inc outsl inc outsl addr16 jbe ja ja jns sub dec xor dec xor xor imul bound dec cmp pop inc dec inc dec inc xor inc push dec inc dec inc push aaa push inc push dec push push push push push xor push cmp pop addr16 dec arpl dec fs addr16 push push dec insb cmp dec insb insw dec outsl cmp jae jae je jne jbe jbe ja ja jns xor xor xor xor xor dec inc outsb inc push inc inc dec das dec push dec push dec push push dec push dec push push jo das push inc push sub push xor popa jne push fs fs outsb fs push push insb fs je je je je je js js sub push xor xor xor ja jp cmp push aaa data16 jbe dec cmp das inc xor inc jp inc inc insb dec inc dec xor dec inc dec inc dec dec dec insb dec ja push push xor pop push pop inc pop inc bound dec addr16 jns popa outsb outsl imul js aaa inc aaa addr16 ja sub inc inc push inc xor inc jae ja jno dec dec inc dec outsl dec dec dec dec push inc push imul push cmp push outsl pop xor ja dec data16 push push imul insb push jae jae jne jbe ja js js jns jp sub xor dec cmp inc dec inc inc inc dec inc jp push inc gs inc inc outsb dec inc push inc push imul gs inc pop dec pop push popa das popa dec popa bound das arpl outsl gs push dec imul bound je je je js js sub dec sub jp inc das inc das push xor insb xor dec xor das cmp dec inc imul inc dec das dec inc dec dec push jae jb xor push jae xor bound push gs push imul jae jae jne js sub xor xor inc xor cmp dec inc dec inc inc dec jae push dec inc dec inc dec dec push xor pop push arpl push dec push addr16 imul push ja dec pop push popa dec popa ja xor insb imul jb inc jbe jns jns jp xor ss cmp jne push inc xor dec xor jo je insl dec outsl push jne xor push push push bound push push push push push insb push insl push inc push gs imul outsl pop jns push popa arpl gs gs push dec imul jb inc jo jno je jne das dec xor inc cmp inc inc inc jo dec inc dec inc push sub push inc push dec push pop push xor dec push arpl pop gs push push insb inc jo jno jbe jbe jns jp sub inc xor ja jbe push dec dec dec inc dec dec dec push dec dec dec dec dec inc dec gs dec push inc push dec push jns inc push push push xor push jae fs pop addr16 insb outsb push jbe jns xor xor js push inc imul dec dec addr16 dec dec ja dec dec dec push push push jno dec pop jb dec dec push addr16 push push insl xor je sub xor dec inc jbe das inc jb push dec inc dec cmp inc push push push xor push cmp gs addr16 xor push inc dec inc fs dec push outsl push outsl jne jbe jbe xor cmp cmp arpl inc jno imul push inc pop dec pop dec imul push jo je js jns xor xor dec dec dec jns inc push push push dec pop push outsl pop dec jno jae ja ja das jb dec cmp cmp inc push inc inc xor jbe jns push dec addr16 das pop arpl xor bound ja js xor inc imul cmp jae cmp dec push dec dec dec xor push insb push push push dec pop dec pop push inc imul outsl imul push xor cmp dec xor xor js dec push dec pop ss push gs data16 push imul gs jp xor das xor xor ss sub pop inc push inc inc inc jb dec dec pop dec outsb push push push jno jb push fs gs addr16 inc outsb dec outsl dec jne jbe sub xor xor cmp push imul inc pop inc arpl inc outsl jo inc jno jb jae je jne das ss push xor gs inc dec push push dec push sub insl popa inc push dec imul dec sub dec xor xor dec xor xor push inc fs sub dec ja push fs push push dec je je xor push dec xor dec dec jp dec pop inc bound inc imul cmp jbe jp jp sub sub xor inc cmp inc cmp dec inc dec popa push inc push jae ja sub xor pop cmp cmp inc ja xor insb push insl pop jno je jne jne jbe js js jp sub ja xor dec dec push push inc push imul push push push push popa jno jb je js xor inc dec dec dec imul outsb push xor push push jae jbe inc push ja inc fs addr16 push das jbe xor inc cmp outsb inc dec dec dec dec push push pop push push push arpl sub fs inc imul push jb jae je xor xor push ss aaa inc inc inc cmp dec ja xor aaa push pop push fs push popa push imul pop je jne ja jns sub push xor dec dec dec dec push push dec push push push push bound jb push push push imul jae das imul xor xor inc push cmp popa imul push ss push inc pop inc popa inc pop dec dec dec push push inc push inc gs dec push outsl xor xor inc xor outsb inc push inc arpl inc inc dec imul dec cmp push dec push outsl pop inc dec addr16 outsb xor dec ja js xor dec aaa inc inc pop dec dec pop pop arpl inc push outsl push xor xor outsl inc push dec push push push data16 cmp sub inc cmp inc inc push jb pop dec jne sub push dec addr16 cmp pop jb pop addr16 imul push outsl popa jae js xor jbe addr16 das inc jbe inc dec je je xor arpl sub dec jns xor pop dec pop push aaa arpl arpl pop push js dec ja xor bound dec xor sub inc dec sub dec pop push push push push push inc data16 imul push ja js xor dec xor push inc push inc pop dec xor fs insl push outsl data16 ja jns jp sub pop xor xor xor cmp jo insl dec dec push dec pop dec imul outsb push outsb push arpl pop dec pop fs pop push push outsb jo jb xor jae jae jne jbe jbe jbe jbe jns jns jp jp ss ss cmp sub dec xor push dec push ja gs push xor push push push pop push pop push popa push bound popa xor pop bound dec popaw bound dec js xor cmp cmp push ss addr16 xor inc inc inc push dec cmp dec dec push das push dec pop jno insl insb insb insl insb ja ja inc jb cmp inc push outsl dec xor dec jne dec push dec bound inc jae jbe ja ja js jns jns jp jp sub jo jno jp push ss ss ss ss ss bound arpl cmp arpl xor inc imul inc inc inc inc dec dec imul popa bound fs push insb xor insl dec outsb sub je jne jne jne jbe jp sub inc imul dec jbe push jb push popa sub arpl data16 jne jbe jbe ja jns xor xor aaa imul push inc je dec inc imul inc jns addr16 inc dec xor ja push dec addr16 ja inc push xor pop push jbe ja push arpl addr16 imul jne jne jbe ja xor dec inc jne xor push outsb push je jns xor pop insb pop ja push bound insl bound jp xor inc push inc inc inc jns push xor pop push popa pop bound gs jo xor insl xor jo jo jno jb jae jne jne js jns jp jp xor xor sub cmp jne jns imul inc jp push dec push dec jbe push inc push insb push jo jns dec push xor pop push pop outsb pop push pop imul popa push bound bound inc bound outsb arpl arpl outsb fs fs gs push imul insb jne dec js jp jp inc push inc js push dec push dec inc dec jns imul dec push xor jae ja cmp inc js xor dec dec jne xor push insb pop push arpl insb jae jno push xor dec inc push inc imul jb inc push jno push imul imul ja push jae jne sub jne push inc jb jae xor dec push insl jbe xor je ja xor xor xor xor xor jne imul jno ja ja ja jp xor xor push inc gs gs xor push inc dec inc jne xor dec push dec imul jns jp xor dec jns push push insl push dec push dec push xor push xor pop push insl push dec push xor push push push push push pop push outsb pop xor pop inc pop push pop jo xor bound bound pop bound insb arpl arpl insb xor dec gs gs push je jbe jns jp insb js xor push insl xor xor dec insl dec imul push xor push pop push inc push dec pop push insb dec insb push xor push inc xor inc addr16 popa push xor imul insl dec jae dec cmp dec arpl addr16 xor xor xor xor jne dec inc insl inc push inc push dec imul jp inc popa xor outsb push xor insl pop insl jo xor outsl outsl jno jno popa jb jb jb jae jae je je je jne jbe jbe jns jns xor push xor push inc js push inc outsb inc je cmp dec push dec push dec pop dec push dec jb imul bound popa xor popa jns jns jp jne js ja ss js popa inc gs gs ss dec dec jno insl push outsb bound bound jne push jne push je jne bound outsl xor jb jb je jne xor dec push xor xor js cmp cmp cmp jne sub dec xor dec ss dec dec dec jno inc dec inc dec dec dec bound dec insl dec jo jae push push push push gs jno dec push cmp pop cmp arpl fs gs gs push jp cmp jo jno jae jne js jp xor aaa push push push dec js sub push push ss jp xor imul jp js js push push xor xor jp xor push inc xor inc jns ss push inc jp push dec xor dec xor inc dec xor dec push dec fs push dec bound dec dec xor dec push dec pop dec gs jb cmp push ss cmp pop inc pop sub bound cmp push jp sub imul outsb push outsl sub outsl cmp jo jb jae jae jns jns xor xor xor xor aaa jp xor inc cmp dec aaa dec jp bound dec jne aaa dec inc dec xor dec pop dec dec jne jns xor push pop push jp jp xor cmp addr16 jp xor outsl xor outsl push push ja ja xor cmp inc xor dec aaa dec outsb dec jo jb ss dec dec dec dec dec dec imul push arpl xor imul inc je ja ja js dec pop dec outsl dec je dec 