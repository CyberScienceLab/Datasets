test icebp pushfq (bad) mov push outsl lock js lock xchg jb ss rex.R ja enterq fbstp clc lahf add imul in imul (bad) callq lock gs rex.B (bad) cmpsb sub mov push fidivl fisttp mov jbe test and in add mov xor or in rex.XB (bad) cmp movslq hlt iret int3 (bad) add imulb js xor int (bad) in jge pop ja jmpq (bad) mov rorb cs in loop mov sahf or loop (bad) jns (bad) test mov add or push cmpsb clc test js push nop and rex.X repz imul imul shlb mov add movsbw bt rol mov clc jmpq ja bt jmpq mull add retq fadds out and cwtl rex.WXB sub movabs jno movsl mov ja js push xchg cmp faddl adc jb repnz sahf adc (bad) ss movabs rex.WR rex.R stos sahf rex.W xor (bad) mov or rcrl lods lret sub (bad) push mov xchg fstpt rex push sti xor (bad) mov cmp (bad) std lea (bad) nop rorb mov sarl leaveq (bad) data16 out cltd mov (bad) push (bad) scas mov (bad) (bad) pushq pop xchg (bad) xor mov (bad) test and sub xor rex.W rex.RX xlat mov fisttpl sbb and clc pop (bad) mov rex.R rex.RXB jmpq jmpq pop ljmp jp in outsl rex.X mov out sahf xor int (bad) sti and in in fisttp (bad) movabs clc in movsb mov rex clc push (bad) (bad) pushfq int3 add (bad) (bad) mov (bad) pop cltd rex.WX sbb jb adc icebp (bad) repnz push mov mov lods add (bad) adc sbb mov mov rcll xchg fidiv sub xor (bad) rex.RXB add (bad) (bad) sti lea adc (bad) (bad) (bad) (bad) insb xor leavew xor add sbb insb xchg xchg (bad) (bad) (bad) (bad) (bad) in rex.R pop test sub jns retq rex.X (bad) movabs jbe imul (bad) icebp movsb mov or rex.RB sbb popfq and add mov rex.RB test outsb inc add bt bt mov stc test test test jmpq je stc clc cmp jmpq movsbw movsbl mov setnp mov not xchg mov lea movsbw mov mov lea jmpq repz clc loopne (bad) push add (bad) rex mov (bad) (bad) or cld in cltd fwait stc jp stc (bad) xchg std cld jp xor out mov (bad) outsl rex.X cwtl movsl lea xchg xchg (bad) fnstcw adc cmp pop lret insl adc rorl cmp insb rex.R or scas (bad) (bad) (bad) cld or (bad) (bad) (bad) (bad) fidivrl mov in jp mov (bad) cmp cs (bad) fldt test xchg fcmovnu sbb push cmpl scas mov add ss nop sbb jns cmc movabs cmp pop sti out rex.RX iret lods mov rex.WB cld adc cmc or movsb enterq jae adc rep cmp sbb adc (bad) ja lret test add popfq out int jns rex.B loopne (bad) pushq (bad) xchg scas adc or (bad) test rex.W movsl test test pushq scas or ss adc mov (bad) mov jg xor mov (bad) mov mov adc or add cld add mov cmp add pop mov jae xchg test (bad) (bad) (bad) std mov add add lea (bad) rex.WRX jns pop lea cmpsl jne cmp push xchg fnstsw fwait stos rex.RB mov retq fmull push hlt xlat ja sub jge out (bad) pop rex.WRX pop int (bad) out out jmp adc movabs std cltd mov sbb (bad) cmpl cltd sbb (bad) rolb loopne push cmp push std mov mov movabs mov sub rex.WRX roll dec sahf jg push sbb test lret fwait xchg mov or stc (bad) outsb rex.X xor add cltd ja (bad) jno mov cmpsl push rex fstpt push sahf (bad) int3 in (bad) decb sbb (bad) out sub xchg jle (bad) (bad) sti pop cmp (bad) (bad) cmp rex.RX mov mov je ficompl mov je rex.WX xchg movabs xor mov ffreep jmpq retq or jae lods sub sbb rex.RXB sub (bad) rex.WRX (bad) jmpq jmpq cmc cmp xor jmpq clc repnz jmpq je clc stc stc sub cmc jmpq je rol shl xor shld xchg mov clc sbb neg or mov rcl bsr shr shrd mov test clc test or jmpq (bad) out int lret cmp fmull mov and sub mov sahf scas adc or sbb (bad) add xchg sbbq push in es int (bad) pushq pushq (bad) (bad) ja jno fcoms xor jle je (bad) sti (bad) or movabs stos (bad) mov mov or cwtl adc jno (bad) (bad) (bad) (bad) ja out shrb negl lea loopne (bad) (bad) push push cltd add xchg stc lret (bad) (bad) enterq (bad) (bad) rex cmp xchg pop int js fwait rex.WRXB and adc jne out ja std pop jae jo nop (bad) jrcxz lock xor and adc push callq jge add test (bad) hlt (bad) mov movabs adc cmp outsl rex.X stos rex.WRB jmpq mov pop repz (bad) sbb sbb jno pop mov (bad) out sub cmp push in nop retq repnz fcoms xor jno push xchg xchg fdivrl rex.WRXB rorl (bad) retq outsb jmpq (bad) pop adc (bad) (bad) xchg mov (bad) sbb (bad) (bad) sti cmp (bad) (bad) (bad) (bad) sbb push test (bad) in cmp add fiadd (bad) lcall jbe jl cmpsl imul push (bad) popfq cmp jae (bad) neg rex.RXB add mov pop mul rex.WX adc mov cmpsl (bad) movsl cwtl add jnp (bad) icebp movabs or int3 add jmpq jmpq pushq jmpq scas or push nop out (bad) rex.WRB sbb mov out movl rex.WR cmp fwait and jbe (bad) (bad) jle cmp test (bad) and rex.R xchg (bad) cmc push outsl push xorl rex.WRXB push repnz xor rcrl xchg test sub (bad) or adc movabs (bad) (bad) sti jo mov push (bad) (bad) (bad) (bad) push (bad) insl (bad) xchg (bad) (bad) callq sbb test or add popq jns (bad) fadd jmpq loope in (bad) sahf mov (bad) jp rex movabs jno (bad) (bad) xor rex.WR lods mov mov rex.WX (bad) sti in iret fadds (bad) cmpsl mov loope (bad) (bad) mul rcll and push jb loop fnstcw mov repz movb fwait and mov sbb sbb mov cli shll and sub ss jl fs push (bad) rex.X mov sarl lahf movsb stc add add or pop leaveq lock xchg xchg test rex.WX xchg jmpq ficoml mov rex.WRX mov adc cld icebp add jae sub mov add add jmp fninit rex.RX pop lret rex.W adc nop and adc xchg rex.X out push and div (bad) xchg and mov addr32 rex.RB fistl xlat mov (bad) add (bad) mov adc push mov or cld rex.WR push xor mov adc and decb mov cvttps2pi callq push (bad) jnp mov orl (bad) lea pop (bad) jbe (bad) pop cmp xor lret sti push loope out rex.B adc sbb mov add push fs (bad) push cmp lock pop (bad) lret (bad) mov rex.WR jmpq stc jmpq rex.B push xchg adc cmp divb or outsb imul or jmp movsl adc cld loop and or stc cltd rex.WR std jo nop sbb stos (bad) sbb sub mov enterq negl cld test jle scas jg sub or pop sbb rex.WRB mov xchg rex.WRB xor (bad) (bad) std or xchg mov rex.WRX jnp out shlb or js mov or (bad) push rex.WRB rolb callq add jns cltd xor callq cwtl cmp cmp sub (bad) push idivl pop js jae mov push cld icebp and js leaveq and push (bad) mov mov adc (bad) je sbb sub mov rex.WRB and adc jmpq not pop xchg sete pop bswap pop jmpq push push rex.RB xor cs insb add andl add jp clc cmp jp ja cmc setp add add add clc cmp or cmc xchg dec cmp xor clc mov ror mov bt stc bt push data16 (bad) mov cmc cmp cmc cmp sub jmpq je mov icebp mov jle adc test fnstcw movslq shrb mov cmpsl (bad) fucomp rex.W rex.RB movabs and mov clc repz rex icebp rex.X cmp lods pop push scas rex.W ss xor sbb insl pushq fcmovu adc cltd xchg std rex.WRXB popfq outsb insb rex.RB scas (bad) sbb (bad) cmp roll (bad) (bad) cld packssdw (bad) (bad) out test (bad) (bad) xchg mov add cli adc sbbl js pushfq sbb idivl mov (bad) xor jbe add fwait cmp stos loope (bad) mov cmp pop iret imul adc push mov add jo int pop pop iret movsb adcb popfq sti sub add lods sbb retq pushfq mov add cmp pop repnz sbb mov movabs and mov jmp mov or movl pop mov adc xchg mov ja retq mov popfq add repz in add adc movabs cwtl jb mov (bad) xchg int and fidiv movabs nop (bad) add insb icebp jo (bad) rex.WX cmpb cld ss je xor (bad) leaveq js (bad) (bad) mov cmpsb std cltd xchg sarb (bad) (bad) cld rex.W mov (bad) rex.WR pop int3 jl rex.RXB adc nop cmpsl adc movsb xorb or (bad) in xor mov sbb and jno rex.RB rex.WB retq sub movabs addr32 xor sub add add xchg mov test (bad) stos fidivrl (bad) rex.WR add cli popfq mov pop rex.B sarl pop cmp rex.WB add xor stc scas (bad) addr32 adc movslq push es push ds repz test sub clc test bt cmp jmpq or or xchg jno rex.WB mov fadds (bad) sbbl cli or js faddl (bad) (bad) iret (bad) sbb push movsl jg subps (bad) adc or mov or xchg sbb pushq or imull fild cmpb jb test stos movsb mov jb add test movabs movslq cld mov adc (bad) (bad) (bad) ljmp sbb rex.WRB lock mov ja (bad) in mul lret rex.RX es push (bad) scas pop add add (bad) cmp mov loop or fwait or push sub mov lahf rcrb cs (bad) repnz mov add fnsave sbb pop (bad) and mov sti sub cmp insb adc and adc imul jp (bad) stc cmp mov lods lods ucomiss adc mov sbb sarl sbb sub fidivr imul insb rex sbb repz mov sbb (bad) stos push sbb fmulp cmp cmpsl out jbe (bad) jmp (bad) movabs adc sub xchg mov movabs (bad) (bad) (bad) cld jg movslq or jbe push adc rex.WX pop pop jg imul iret stos cmp fcoml rex.WB jnp cmp (bad) jbe imul test jo loop sbb jrcxz jp adc add (bad) (bad) (bad) sti cmp (bad) (bad) (bad) sbb sub mull (bad) scas or es fstpl pop (bad) jg xor mov (bad) jo adc push shrl mov pushq rex.WRX sbb (bad) incb rex.WX cmp rex.WX or and (bad) stos xor callq fstpl xchg cmpl jnp sbb pop pushq mov rex.WRX rex.X xchg test adc bswap mov jmpq callq cmp cmp bt stc or jmpq test mov pop leaveq pushfq push cld (bad) (bad) cmc fcmovnu imul roll push rex.WRX mov pop xchg (bad) mov add (bad) rex.RXB js (bad) mov push or cmpsb movabs pop adc adc (bad) add sbb (bad) (bad) (bad) stos loopne jo push jmp movsb fdivs xor (bad) (bad) (bad) (bad) std or cwtl pushq (bad) (bad) std push add or adc cmp insl in movabs stos stos sub fcomps loope test and addr32 mov fwait jo movabs rex.WB ds cmp adc rex.W add add or mov fiaddl jb cli movabs ss pop jb (bad) push ds outsb cmp jnp test push clc sahf sub jle imul push clc jo pop stc xchg cmp ja (bad) out sbb lahf sbb lods mov (bad) sub push idivl (bad) xchg cmpsb mov sub mov or sub out sbb push sbb fdivrs cltd xchg rex.RXB sub lock cld mulb adc mov in movabs jnp (bad) (bad) dec movabs ja or (bad) or push xor rex.WRXB cld rorl jp int3 (bad) mov fnstenv fbld int mov add mov (bad) push or negl in jg lock shl in mov jp jnp cltd cmc insb adc adc pop in jge cmp fstpt (bad) xor es fisttpl jae out (bad) in (bad) fstpt sbb enterq pop and cs cld xor addl rcr lock push push (bad) sub push rex.B mov insl movsb cli (bad) outsl retq rex.W subb (bad) movsb (bad) es (bad) (bad) cli jmp je rex.RXB (bad) (bad) std lret (bad) scas adc and (bad) sub xchg rex.WRB lock cmp outsb pop rex.X sbb orl sarl repz test andl in retq add (bad) decl (bad) mov sub sub (bad) (bad) (bad) pushq rex.W jmpq and rex.X mov adc adc cmp fwait (bad) cltd icebp lahf test (bad) jnp mov mov jp add nopl (bad) callq rex.R rex.WR xor add fwait rex.WR sbb rolb (bad) jb stc xchg out insl pushq insb (bad) (bad) xor cmpb outsb fs adc repnz sub pushfq sti callq shl lods sbb je movslq pop xor mov movsb lods add nop jo rex.WRX hlt push outsl xchg jne rex.WR js and (bad) (bad) inc movsb and (bad) (bad) nop jb add add add rex.RXB out enterq movabs loope rex.WB mov add vcvtss2si movsb lret addr32 cmpsl (bad) scas xchg rex.W xchg movabs (bad) (bad) mov push jmpq movzbl jmpq lahf mov rex.R xchg addr32 mov rorb jmpq (bad) (bad) and imul sbb (bad) (bad) mov xor jbe xchg sbb fistpl xchg push (bad) mov xchg movb insb sbb (bad) out jg retq scas iret rex.WR insl mov hlt (bad) ds push cmc push addr32 jmpq lods (bad) (bad) (bad) (bad) sti dec es xchg (bad) (bad) (bad) (bad) fimul and and sbb leaveq jg movsl (bad) cwtl enterq mov xchg fs out mov mov xor movabs outsb mov mov rolb and ffreep add add jae add sub pop adc enterq pop (bad) sbb and popfq cmpsb test xlat (bad) jge mov jo pop cmc add out (bad) psrad or lret (bad) repnz (bad) sub out stc movabs rex.X (bad) mov (bad) xor cmp punpckhbw rex.WXB (bad) mov adc mov mov xor or lahf sbb (bad) (bad) (bad) (bad) outsl xchg jl imul xor movslq push jae orb pop (bad) push fdivr (bad) (bad) cld cmc testl (bad) dec jns sarl (bad) mov stos shll jl gs cmp (bad) mov (bad) test mov sbb (bad) jl rex.RB test and (bad) roll and mov pop enterq jmpq stc test jmpq jne cmp jmpq jmpq clc mov shr mov dec ror clc movsbw mov shr push rcr or cmp movsbq mov rcl sub inc inc sub movzbw bswap mov lea not movzbw setl mov xchg movzbl bswap mov not lea movzbw lea xchg mov movzbw lea jno callq rol bt mov jmpq je test cmp cmp jmpq jb je shrd sub jmpq je jmpq jmpq add add cmc stc add btr clc shl shl mov bt shr stc jmpq bt clc jmpq jmpq ror bsr mov cmc add test stc stc jmpq jmpq je cmp sub jmpq add rex.RXB gs gs imul (bad) insl add movslq pop add (bad) (bad) lock repz leaveq cli (bad) xchg mov (bad) imul adc int and add rcll xchg sti push jb lods mov rex.WB ds (bad) cmpsl (bad) cmp adc xor pushfq (bad) in int (bad) (bad) (bad) cld js sub lcall imul push pop loope negb mov adc fsubl mov js ja mov in ficom adc add add mov jg pop (bad) push jg mov add retq insl adc rex mov pop adc or (bad) out or std pushfq rol mov or lock pop cmpsl jo nop je cmp cmp jg je cmc clc clc cmp jmpq jmpq jmpq pop not not jmpq clc bt cmp bswap lea movsbq not lea bswap movsbw movsbw pop jmpq cmp jmpq push and or js ss movslq and pop movzbl in add lods sar (bad) stos rex.WB cs movsl and rex.RXB out xor rex.WRX (bad) adc movsb roll (bad) loopne push (bad) or xor jae loope pop (bad) nop (bad) cmp rex.RB cwtl cmpsb mov in xchg cmc rex.W sbb rex.WRXB push cmpsb ds int3 rex.WXB sub shlb addr32 or stos jmp pop div xor mov stc mov subl div push fistl jp mov lods clc loope (bad) (bad) std sub popfq pushfq add add or out push or and (bad) or sbb or repz gs (bad) xchg mov (bad) xor loopne (bad) mov loopne push push xor xor fs insb add add test and jmp adc xor jmpq jmpq jmpq rol cmp jnp bt stc shr jmpq jle rex.WRB outsb jl jp jo js insl jbe data16 pop jb pushq push insb rex.W pushq push in jl (bad) rex.WRB (bad) out pop insl pop in jl ds (bad) out std movslq stc fistp push fistl fnstenv rcrl int xchg rex lahf cmp fwait (bad) mov sbb jg (bad) jge jo xor jns ja pop pop cmp flds sub out xor rex pop push out pushq js jg addr32 and std rcll shrl rex js (bad) pop je push pop jo or push out jmpq jo and cmp rex.WRB jp rex or stc jle cmp ja rex psllq (bad) mov add test movabs xchg (bad) lea stc testl in jmp out in loope fstp (bad) jp rcl iret int ja and rex.WXB (bad) push mov jl jo (bad) mov pop ds rex (bad) jo cmp mov stc jg (bad) mov xor cmp xor adc notl loopne cmp or pop cmp outsb (bad) lret inc mov ja and fmul retq jl sbbl adcb stc stc ja movabs cmpsl mov fwait mov mov fistpll out pop adc xor pushq rex.RX adc cmp mov fwait mov mov out cmp pop (bad) fdivrl fwait rex.RXB pop rex.W movslq (bad) cmp mov fwait adc xor rex.XB rex cs jo (bad) out jo pop (bad) mov fisub (bad) cmp pop pop sarb iret fisttp out rex.W adc and out mov fwait (bad) (bad) jo mov cmpsb cmp scas mov (bad) rex.WRB rex.W movslq scas cmp pop adc sub scas test icebp fiadd push push cmp (bad) insb (bad) pop callq mov xor (bad) lahf mov pop rex.WX (bad) insb jbe mov cs mulb lahf mov cwtl mov icebp orb test (bad) movsb (bad) and mov lcall add xchg mov jg,pn jo xor add cli sbb js loopne cmp xchg push scas mov mov mov lock cltd xchg mov gs pushq (bad) mov mov scas and movabs mov pop in jb mov (bad) rorl xorl icebp jge scas sub (bad) (bad) and push in movabs push adc lea adc insl jl rex.WX (bad) outsl out mov rex rex.W rex rex mov (bad) out mov jmpq jmp (bad) (bad) stc movabs xor (bad) (bad) sbb adc add rex.X jmp insb cmpsl cmp sub cmp xor cltd fbstp test mov sbb out adc out xlat mov fs jrcxz (bad) shr mull (bad) pop mov popq insb xchg lods movabs outsb mov rex.WRB rex.W movslq mov mov fwait pop (bad) (bad) icebp adc rex jo mov mov out movslq (bad) pop rex.WRXB outsl mov fisttp adc and scas or jo (bad) fwait (bad) (bad) (bad) rex.W movslq (bad) repz sub (bad) mov fwait xor jo sahf repz (bad) cmp push sub mov cmp rcrl pop (bad) jge and jo rex adc pushq mov lea rex.RXB pushq cmp ds incl add jl add rex.WX (bad) cmp (bad) cli fsub jg sahf rex.XB and faddp test ss movslq rex.WRX mov stc fs cs add pop cltd (bad) add or xor sub pop mov movabs or std (bad) jne test nop lahf mov (bad) mov stc cmp out and xor jp (bad) push sub testb cwtl nop fistpll cmc mov lock xor (bad) rex.WRX jge (bad) xchg in out in sti add (bad) bndstx (bad) hlt cmp subb (bad) xlat xor faddl (bad) add mov push mov out jg jg out rex.WB add jl mov mov in js jle add cmp lret mov shl gs movabs mov mov pushfq mov jb cmp rex.WX rex hlt xor adc adc test sbb (bad) sti mov mov cli test mov out mov and leaveq mov push push mov mov xchg rex.X pop (bad) rex.WXB mov push (bad) jb and jg cmp mov (bad) mov (bad) int sbbl sarl and jp pop jne mov sub xor stos subl add repz add add mov xlat jp jns pop jge rex.WRXB add (bad) (bad) or ds fcoml jnp push movsbl iret jo sbb xor bnd sti add rex.WRB adc and jb popfq rex.W jg movabs (bad) ror or sbb scas sbb xor rex.B int (bad) sub ss mov adc loope and test (bad) inc add test mov outsl lret rcrl add jns cmp jrcxz mov test push test retq loop out js xor vmaxps jle test (bad) and sbb sbb adc adc sub mov mov cmp pop adc jo lahf fwait iret (bad) out rex.W jo jge rex.WRB push outsb (bad) xor jnp (bad) sbb outsb (bad) out pop push jb addr32 (bad) adc rex.X (bad) pop adcb stc out add (bad) and insl outsb push in jbe hlt mov jb insb jo (bad) out xlat pop cltd sbb std rex.X rex.WRB lahf out and imul insb mov fwait rex (bad) in cli rex.WRB rex.W rex iret out push mov out std or (bad) cmp pop fidivr pop xor (bad) (bad) movabs sahf or movslq pop (bad) (bad) pop mov xchg (bad) sbb movslq data16 scas mov rex.WRB scas (bad) jg movslq (bad) cs rex rex.WRXB icebp fnstcw xchg in (bad) (bad) (bad) push cmpsq movslq sub punpcklbw jo addr32 sbb mov movslq pop add cmp sbb mulb pushq mov mov fwait jnp sti rex.W mov lret movslq rex.WR stc out mov pop stos movslq sub (bad) pop insb out imul shlq push decb rex.WRB sbb movslq adc cmp add xor (bad) movslq je jae repz cmpsb movabs mov add (bad) pop rex.WX movabs movslq jrcxz xchg mov rex.W rex.WB xchg popfq movslq (bad) cmp mov fwait ds cmp movslq jge std pop mov rex.W (bad) pop (bad) out (bad) mov xchg sbb in out (bad) mov rex.W insl fistp jle cmp mov sub jbe jne cmc mov xchg movslq rex.RX test cmp mov fwait gs in mov scas pop pop fwait add movabs mov xor mov mov rolb leaveq pop rex.WX push mov shr test (bad) pushq imul rcrl out adc icebp xor and out jno icebp fwait movabs orl pop movabs rex.W loope addl cmp pop xchg (bad) mov cmpl (bad) sub rex.WRB mov cmpl (bad) hlt add xchg (bad) mov pop in and cmp (bad) (bad) icebp test cmpl out fadds add mov icebp enterq pop mov rex.X mov icebp push (bad) rolb pop adc rex.X and add xchg (bad) mov cmc fbstp (bad) rcrl rex.WRXB cmp and cmp idiv (bad) (bad) (bad) cmp sti iret rex xlat ds (bad) jo jge pop outsb cmp xor (bad) rorl jo (bad) (bad) cs out jge rex.WRX sti jb je mov xor (bad) frstor push data16 pushq cli cmpsl push xor mov scas mov imul (bad) icebp (bad) xchg (bad) fisub fldenv in scas rex.RB repnz fwait mov xor mov mov xchg fs cs (bad) scas cmp in pop (bad) popfq cs and jle mov lahf xchg cs (bad) popfq out or loopne cmpsl (bad) rex.WR jmp pop (bad) out cmp addl xlat xchg movabs movsl jne or ds int movsl in movabs (bad) cmpsb sub jmp cs fwait mov mov repz xchg xchg mov imul mov lods pushq or pop fisubl fisttpll idivb sti xchg jnp mov out in stc (bad) jge cmp sbb jne cltd (bad) jmp jo lret test leaveq mov (bad) sub fucomip stc cmp jnp push out (bad) pushq mov jmpq fucomi sbb scas fldenv pop lahf rex.WX push sti sti xlat (bad) jbe decl (bad) lea idivl mov in icebp div push retq shrb cltd icebp cs jb sub xchg movb (bad) jb xor shll pop lods and pop jb cmp out (bad) xchg mov movabs lods xor (bad) rex.WB jo,pn xor test in cmc jbe cmpsl fildl mov mov outsb (bad) cmp jmpq (bad) outsb fldt fmulp loopne push enterq (bad) cmp stc or mov test pop sub jrcxz mov or out push cmpsl sbb iret in sub rex.W (bad) addr32 std jmp mov outsb sub jmp mov mov leaveq (bad) mov mov pop outsb xor sbb (bad) (bad) pop outsb lahf cs scas pop sub (bad) sti insb adc fstps rex.X movsl sbb enterq pop insb jo (bad) in (bad) cmp cmc (bad) cli insb pushq mov (bad) fdivr pop cmp (bad) icebp xchg pop pushfq jge cmpsl roll stc shll xchg pop callq push cmp fistpll (bad) movsl cmp xor (bad) cmp (bad) mov mov subl rex.RX rex.WX push mov xor xchg ja insb fldt cmp std lretw (bad) icebp scas lret and cmc mov sub push insb sbb jrcxz cmpsl push nop sbb adc (bad) mov push (bad) out mov xor (bad) mov ss xor xchg sub in and test comiss cmp je mov retq cmpsl ds jrcxz mov fbstp out (bad) out retq xor rex.RX js repz (bad) pushq movabs in (bad) (bad) mov sbb leaveq test (bad) mov (bad) hlt pushq xchg mov pop out rex.WXB out fs xchg movabs add (bad) cmp cltd lods push (bad) (bad) cs jo out int3 xchg lahf cs es (bad) pop pop xor outsb sti movsl shl jo xor add out pop idivl xchg xchg fcoms adc pop jrcxz (bad) xchg mov lret xchg test pop fnstenv retq popfq rex.WR test pop (bad) sbb mov ja (bad) cmp xchg outsb mov jo fiaddl rex.WRX pop fistpl cltd jnp jns xchg cltd gs in stc fwait movabs rex.WRXB mov and pop rex.WR (bad) jmp pop fwait xor rex.WX fldenv cs push std cmpsl mov incl fiadd and jnp (bad) rex.RX lea xlat outsb leaveq lods fldenv rex.X cli rex.WXB in in rex.RXB and lret cmp in xlat xor fnstsw xor sub cmc cltd xchg in movabs rex.W xor lods xchg scas xchg xor cwtl cs repz cltd cmc scas sub in shrl int (bad) es xchg cltd popfq pop (bad) out (bad) adc mov xor cmp adc std insl movabs scas out cmpsl mov icebp xor push pop jo mov mov (bad) (bad) sbb xor rclb rex.RX add add mov pop movsb xchg rex.X and add pop (bad) cmp lea (bad) int3 out scas xchg rex.X nop out enterq (bad) (bad) and pop jp pushq (bad) mov mov (bad) (bad) (bad) rex nop xor test add rex.XB add pushq addr32 (bad) or (bad) or jno ds retq add (bad) std add (bad) cmp mov (bad) pushq pop and mov mov mov jae cwtl push xchg mov mov rex.WRX and sub add test sarb push std cmp inc xchg rex.W fwait or jg (bad) cmp rex.WR rex.XB jno (bad) add scas (bad) addr32 gs scas jl add rcrl lods ds movsq push (bad) jle (bad) gs movabs mov mov xchg loopne in jne add pop lea add nop (bad) test pop rex.RX sub out scas cmp cmpsl icebp movslq in sti (bad) xor imul add out ja add or jle test jge xorb (bad) js mov mov xor imulb add enterq add (bad) (bad) sub rex.WB rex.X (bad) and repnz incb icebp leaveq add or sbb mov insb and sub jb cld cmpl mov jmp sbb rclb fildll sub mov in sub or add std out movabs xor (bad) rex.W rex.RXB pop mov in callq test add (bad) movabs add fistpl popfq lahf je xor movslq mov fldenv mov mov rex.B xlat in jmp hlt lret xchg xchg outsb xchg rex.X or jae orl fiadd outsl fcomps movslq xchg jbe movabs or sub add lret mov jle xchg jmpq xchg push cwtl cltd xchg add out and (bad) jne lahf movslq lods in rolq scas mov add in xchg popfq cwtl jg subb or jg push pushq xchg (bad) add (bad) jg jb xchg loopne jae (bad) cmpsb cmp add repz or mov cmovs (bad) pop push movabs mov xchg incl (bad) add rex.WX fsubrl adc rex.WXB rex.W add (bad) mov xchg and (bad) rex.RXB rex.WRXB rex.WB (bad) adc cmp rex.WX outsl or jb rolb pushq and mov add lea cmpsb icebp insl incb push rex.XB xor add leaveq retq fisubr add mov or xor test retq push (bad) jrcxz cli pushfq popq repnz (bad) (bad) clc xor add in lock pop rex.RB mov mov add in sbb imul and es mov (bad) loope popfq pop rex.WX add (bad) (bad) lret insl pop add lahf jnp mov add xchg xchg fcmovbe xchg (bad) add xchg cmpsb movabs (bad) add fwait pop rex.R test mov jle mov (bad) mov or enterq sbb (bad) lock add test lret lods out test (bad) mov xor jle (bad) mov and test jbe pop (bad) xor add jnp add mov rclb cmp lahf mov fild pushfq add repnz add pushq jae (bad) pushq sbb mov mov (bad) add rex.RX mov rorl pop rex.WB push out xlat cmp add (bad) jno add add (bad) insl cmp or imul add xchg sbb (bad) loopne pop add movsb cli lods xchg push jnp jle push add mov (bad) gs mov mov rex.WB sahf xchg xor add retq fcmovu stc mov adc js jmpq (bad) pop xchg add push sbb rex.W push add (bad) mov fcmovnbe addr32 push jle outsl add test je rex.WXB loopne mov rex.RX push out adc add sbb add mov push jp rex.B rex.WRXB mov mov adcl sbb pop rex.WB adc cmp (bad) rex.WB insb js sub jne mov hlt mov and or fisttpl rex.WX rcrb adc pushq jo jb popfq push cmp and and incl ss add mov movabs movslq add sbb and add rcr jns xchg out push mov fcmove cmpsb jmpq rex.RX push negl mov pop popfq cmc jl jbe (bad) jge mov xor or rex.RX (bad) jb sbb or cmp movabs int3 adc mov rex.X rex.RB rex.B jno rex.WX (bad) sarl (bad) sbb sub cli mov cltd clc push xor leaveq push (bad) xchg (bad) add test (bad) jne andl cli clc push mov (bad) (bad) or hlt add test (bad) movslq icebp (bad) rex.WRB loope mov xchg jo xor mov mov cmpsb callq xchg jb je int out add add (bad) (bad) jns (bad) loope (bad) (bad) or std mov incl (bad) jae push lods movabs and mov add mov mov je loope lock xor rex.WB mov gs jg insl jle jrcxz fidivrl sti out rex callq mov fistl pop jb nop (bad) movabs xlat stos sbb or or (bad) insl fwait add adc lret xchg outsb stos xchg mov ss fs push fs cmp movabs data16 xchg (bad) je mov mov sti fwait mov add sbb xchg rex rex.R mov movabs cs jg cmpsb (bad) push rorl fisub and pushfq hlt add cmpsb rex.WR jne cmpsl push or in (bad) shlb rex.X (bad) std mov mov rcrl (bad) stc in mov in (bad) sub loop mov outsb lods add cmpb adc retq cmp in cmc add or cmp (bad) out adc sub and add mov sbb sub (bad) fadd (bad) add cmp jb xor rex.WRXB add rex.B enterq cmp stos cli rex fildl rex.X leaveq mov rex.R and add loopne push test in mov xchg xlat roll xchg cmp mov std mov (bad) addr32 sub add jne sbb mov add test xchg add rex.WR push jl (bad) xor out (bad) sbb add (bad) ja rex.RX jmpq jrcxz icebp add (bad) (bad) outsl (bad) mov rex.RB (bad) (bad) xor add rex.WRX pop add xor mov add xor mov push (bad) pushq add callq mov add jae fiaddl (bad) mov sbb (bad) add mull xor insb (bad) mov add (bad) divb in cmc (bad) add mov mov ror loop (bad) enterq mov and add stos pushq add (bad) shrb add ds test sub ja sbb sub rex.RX sbb rol adc and rex.RB sarb je testb leaveq (bad) scas test in mov sub mov iret adc movabs jmpq fdivrl scas push jg jns sbb jg rex.WRX add mov mov ds adc (bad) add retq fsubrp nop or hlt int loope loop addl xchg or insl test mov shll (bad) (bad) rcll popfq (bad) jp lods mov lock pop fadds add jno test pop fs fsts icebp (bad) xchg mov test pop xor add jne mov repz movsb es out insb mov jbe in push (bad) sub adc (bad) cmp movabs or cmpsb jbe ds rex jp fildll cltd nop jb mov (bad) imul retq add mov cmpsl add jns (bad) idivl cmpl xchg rex.WX rex.X rex.R gs sti repnz xchg rex.X rex.WXB (bad) mov lahf cmp out mov mov jrcxz cmp rex.WRX int (bad) mov add (bad) adc pop add cmp jne (bad) movsb and jg sbb mov jmpq movabs adc xchg and mov mov sahf (bad) xchg sbbb sub (bad) ficompl fistpll sahf sti (bad) and mov sub mov lahf push leaveq add movslq add sbb or or xchg movsb (bad) sub movabs ds (bad) jo xchg xor xchg and insb mov jne jg (bad) add xor cmp mov xchg iret add lss test xchg out cmp add sub pop sub or xchg test fiadd and rex.R data16 xchg in (bad) add ja in add jne add add mov mov jae pop add pushfq rex.WRXB add outsb lock xchg add data16 adc (bad) rex.W roll gs mov push sub enterq (bad) xchg (bad) mov rex.WR rex.XB test add or xchg pushq in outsl (bad) scas adc movabs adc fcoml (bad) push inc movb mov or add (bad) cmp jno outsb and loope mov xchg adc mov push fucomi cmp jl sub test out fldl xchg lea or incb rex.WR retq jp sub jle cmp movabs rex.WRB rex.W (bad) xor and sarl popfq addr32 mov (bad) add adcl (bad) pop mov add pop movsb in xor adc cmp adc add and (bad) rex.WXB sbb sub int (bad) xchg out imulb rex.X (bad) fnstsw add mov pop stc (bad) insb push in mov (bad) mov add int sub add fdivs jmp add out lock sbb jbe pushfq xchg (bad) jno pop pushq adc (bad) mov ss pop movabs xchg rex.WRXB int3 fimull jne out lret sub rex add (bad) adc mov out cmp mov cmpsl push lahf jno cmp pushq xchg and or rex scas rex.R jl add idivb jp jo (bad) mov mov mov fcomps out add adc (bad) data16 mov (bad) cmp fs movabs outsl add pop fildll add push xchg cmp adc xchg pushq pop cmp jno add xchg pop (bad) scas mov (bad) jg negl cmp add adc sahf pushq (bad) push pop jg (bad) and cld add and rex.WX mov add popfq mov add lret test retq add pop rex.WRB add fwait (bad) or icebp add (bad) rex.WRX mov cld push jg in add rex.XB xchg pop (bad) mov add jmpq mov out add xchg lock out incb and (bad) sbb fidiv in jb lahf jp jne mov add xchg popq (bad) leaveq rorl add sbb je add rex.RX jmp iret (bad) sub xor movsl scas es rex.R sbb mov jle retq xchg add cld add movsl std xchg xor (bad) add jbe jg rex.RXB sbb fs int3 cld test movabs pop stos push xchg cmpsl addb xor jrcxz pop add jp or (bad) in mov adc sbb stc add gs push sub add outsb cmpsl add xor (bad) movabs pop and adc loop pop rex.X (bad) cmp lahf (bad) rex.WRB mov pop or adc cmc (bad) jl jno (bad) pushq rex.RXB jnp movabs jp xor (bad) pop sub cltd push add pop rex.RB sbb adc in (bad) movabs or add pushq cmpsb xchg lock jg cmp lods jp sti jge add mov jp jbe push and rex.WX add mov add std pushq sub (bad) jp test jg imul add xor rex.WXB lock add iret rex.B rex.W popfq jge test (bad) rex.W rex.R (bad) out rcl jno jp lret movsl mov fistpll (bad) pop movsb jb (bad) xchg fnstsw lahf jrcxz faddp jge mov or xchg cltd rex.WRXB notb frstor rex.RXB mov sbb movabs rex.WR sub sahf add and repnz cli lock rex.WX sub rol mov out mov (bad) insl mov lods (bad) stos mov jmp ja xchg cmpsb rex.W mov sahf or divl in rex.WRXB lods xor fwait (bad) (bad) push jg subl xor retq jp adc or cltd sbb movabs hlt clc rex.B jle lods xor (bad) test jb (bad) (bad) test (bad) (bad) lret rex.WXB insb cmpsl pushfq add movabs movabs add or push loope push xchg sbb add adc in scas retq xchg sar fnstcw cs fadds or add cmp (bad) mov retq retq sub mov ss or mov cmpl or imul movabs imull out out stos data16 (bad) repnz rex.X ds jl (bad) xchg fist and jl addl loope rex.W xchg jp (bad) push fldl movslq cmc (bad) xchg (bad) or insb clc lods add jo out je (bad) add jbe rex.X mov movabs jle lret adc ja xchg xor outsb and rex.R adc scas add pop movabs cmp xor jle (bad) cmpsb notl (bad) jb (bad) xlat scas sahf or pop add pop xchg rcrl sub loop jne mov xor cmp (bad) mov xor jno mov fstpt rorl (bad) mov fmuls sbb add scas sbbl xchg fisttpll je outsl pop jnp psubw (bad) xor cmp fistpll mov (bad) rex.XB rex.RXB shrb jmp rex.B rex.WRX mov rex.WB imul fstl (bad) or (bad) lods push or (bad) scas lret rex.RX cmp (bad) sub cmp (bad) out pop scas mov cld rex.R or xor cwtl jl lods movsl mov movsb cs xchg cmpsl xchg fwait rex.XB mov ss iret retq rex.WRX pop mov sti adcq stc je loope rex.XB add stos rex mov jne int jb add (bad) mov movsl adc cmp mov sub (bad) fs (bad) leaveq ds lret jg movabs movsb rol pop out push add add xchg loop rcrl rex.WB mov sbb (bad) or sub adc xchg fmuls cmp or repz adc fidivl (bad) xchg (bad) adc xchg (bad) (bad) (bad) sti js imul (bad) (bad) (bad) (bad) pop or xchg pushfq (bad) (bad) rex pop or sub xlat or (bad) (bad) (bad) (bad) callq jmpq (bad) pop and push add (bad) imul sbbl jmpq cmp movslq in jns pop (bad) xor retq rex.B or ja lods sub sub test adcl (bad) sbb add loopne adc jmpq add rex.WR (bad) imul add (bad) movsbw bswap lea not lea movsbl movsbl mov jmpq bt clc repnz jmpq int3 push cmp out int3 stos (bad) out xchg add add mov lods pushq adc jle and add movslq (bad) rex.B test mov mov loope repz leaveq movabs lock xchg rex.RX xchg xchg xlat (bad) mov lods xchg (bad) (bad) (bad) sti in sub insl (bad) (bad) (bad) inc pushq jae (bad) mov out out movslq callq add add adc cli mov xor testb mov rorb jg (bad) mov pop mov jg (bad) vpshufd jne jle stos lret movabs adc mov mov ja adc (bad) and callq cmc bt cmp or jmpq jne neg cmp (bad) icebp mov clc or jmpq pop rcr or repnz je (bad) push push xor mov (bad) (bad) mov xchg (bad) or rex.W (bad) add add or sbbl push sub add sub mov sub xorb movabs test cmp jne mov (bad) hlt mov rex.RXB (bad) test (bad) (bad) cwtl xchg mov leaveq lods pushq rorl rex.X push rex.X test test add cmp test add jmpq jmpq jmpq ja rol rol add rcl setb add cmp inc bt clc xchg sar jmpq adc in mov add fcmove scas sbb mov leaveq sahf xor adc (bad) lods pop test mov (bad) (bad) ljmpw leaveq clc add test nop test out rclb push insb (bad) lahf (bad) rex.WRX cmpsw mov pop xchg (bad) jae sbb jrcxz jbe pop negb mov (bad) lods callq std mov outsb mov rex.WRXB xorl imul cwtl lret mov nop xchg (bad) rex.XB xchg ficompl lahf test pushq lods (bad) insb mov xchg and (bad) decb (bad) (bad) (bad) (bad) hlt or leaveq mov outsl ds (bad) add mov sti rex.WX sub cmp es imul mov xor lock push pushq (bad) loopne mov adc mov fs sub outsb mov xor (bad) lahf jmpq cmpb jmpq xchg xchg icebp divb cli (bad) sarb (bad) loopne (bad) cwtl lret mov cmp movabs mov (bad) (bad) sarb mov clc lahf icebp retq rex.WRXB rex.WX mov rex.RX movslq in xchg movabs mov (bad) and insb pushq movabs (bad) (bad) (bad) sti add pop cltd (bad) (bad) (bad) (bad) std jrcxz icebp movabs xchg jmp or xchg pushq (bad) stc cmp mov out sarb rclb rep sbb neg out repz icebp pop loope and callq jns xchg push or out rex.R mov xor pop mov fisttp rex.RX negl loope rex.X sbb (bad) adc (bad) push push (bad) jne jmpq jmpq subl repz fucomip rcr mov (bad) sbb (bad) and adc jns jl add (bad) stos shlb cmp mov mov jg pushfq (bad) and fbld jno sub add jrcxz sub in (bad) rex.WR push movsl fistpll push adc pop adc in rex.WRX rex.XB gs fs mov sub movabs adc (bad) or (bad) (bad) (bad) (bad) bnd rex.WB adc test (bad) adc add add jb (bad) rcrb test test cmp xchg pop adc and or (bad) cmpsl shr xchg adc movabs xor scas lods (bad) add ja mov test (bad) notl add jg outsl ds adc push mov out (bad) int stos sbb pop push jnp xchg add std cmp outsl jle (bad) retq mov lea popfq retq out (bad) out jmpq or (bad) (bad) mov fisubr mov xchg mov shl mov (bad) mov pushfq cmp jne (bad) (bad) cld jge in push (bad) (bad) (bad) lcall mov rex.RXB int3 rex.RX rcrl (bad) stos rex.B callq (bad) (bad) add pop and add adc pop jns,pt xchg imul loop andl and fdivrp lahf jge,pn rex.XB cmp data16 mov cmp xchg add mov xchg rorb bsf jmpq jmpq scas or (bad) cwtl rex.WR out and pop rex.B xor push addb (bad) jrcxz jmp (bad) fcoml data16 lods xchg test add xchg subl mov add jae popfq jl xlat adc (bad) xor or cmp and imul xchg scas mov incl addb stos and test lock mov xor pop rex.XB scas int rcl add add rex.WX rex.WRX rex.RB xchg (bad) mov sub pop rex.WR mov rex.XB mov imul jg push mov sub rex.WRXB or xchg add mov and adc fldt jmpq clc jmpq clc jmpq jne jne cmp bsf mov jmpq callq lea and ror bswap add bsf inc mov cmc bt cmpb jmpq jmpq jne test not btc bsr mov and sub shld sub neg mov stc sub bt bt stc cmp pushq clc cmp cmc test cmp jmpq pushq jmpq jle sbb out jp xor fsubr retq fstpt xorb mov addl test xor sub (bad) (bad) hlt in mov push cmpl outsl fs loop rex.WR pop notb (bad) std rex.WRXB rex.WX iret test (bad) cltd int cmpsb jge (bad) or (bad) sub pop or sar (bad) sti jmpq (bad) (bad) (bad) dec push int3 jo in adc pop adc jno (bad) gs xor insl xor push xchg sub (bad) (bad) movabs stos in xor or icebp adc jnp sbb add insb cmp jo movabs (bad) pop (bad) mov push imul cmp gs clc in (bad) (bad) nop mov pop shlb jp lods int3 adc scas popfq rol mov mov mov rex.WR xor cs insb add (bad) mov shl je fdivl mov repnz in loope adc in movsb adc jl fcomi icebp (bad) xchg vaddsubpd adc xchg rex.WRX mov jmpq shr rorb rex.WRXB mov pop imul fwait cmpsl lret pop push cmp lods jne callq cmpsb movsb xor (bad) (bad) cld cmp shlb lcall lahf mov mov (bad) mov add (bad) (bad) test (bad) rex.WRXB mov sub (bad) mov je (bad) mov fisttpl movb add (bad) mov popfq addr32 rex.WR fnstcw movslq lods mov add add out xchg push jb cwtl (bad) ss hlt test vmaxps mov (bad) mov testb mov stos (bad) xor mov rex.RB (bad) mov popfq mov adc jns mov xor jge adc push sti movabs mov push subb not mov jo std mov leaveq retq pop jmp rex.WRX push in mov rex.WRXB sti frstor mov xor test outsb adc (bad) lock callq xchg lods icebp pop push xor (bad) (bad) (bad) cli mov (bad) (bad) (bad) std fwait sti (bad) (bad) movslq fistpll fsub (bad) (bad) scas adc movslq (bad) insb rex.WXB rex.WR mov sub pop mov (bad) (bad) callq gs rex.WRB adcl pop retq ds callq cld (bad) xor add sub xlat mov mov xchg nop lahf jl (bad) (bad) jp out xchg mov mov push (bad) mov jae adc xchg mov ss testl jb push (bad) rcrb push xchg out sbb in icebp repnz sbb (bad) fstl (bad) push (bad) out int sub rex.XB callq xchg jrcxz or xor xchg loopne stos movabs fstpt callq mulb loopne jbe sti or (bad) test sbb (bad) mov js out (bad) (bad) (bad) rex.WRB rex.RB (bad) jo rex.WB fidivr stos add pop lret js xorl sub sbb test movsl adc test cmc cmp jmpq callq sar shrd bt add ror shl stc rol mov bt test jmpq outsb movabs addl sub popfq imul xchg fs loope (bad) rex.WXB movabs and out mov lods push sub std fwait xchg sbb insb jg xchg add xchg jne mov cmp pop pushq out stos or sbb xchg (bad) (bad) cli (bad) test (bad) (bad) std lods retq mov (bad) pop stos test lahf rex repnz xor fdivs idiv jno (bad) (bad) inc rex.WRX (bad) rex.WR rex.XB nop insb adcb movsb mov mov jg shlb sub mov (bad) imul fidivrl (bad) or add xchg stos lock push lock std std (bad) push xchg imul retq jne jle enterq and add adc (bad) rex.R ss enterq jge sub jno rex.WRX rex.WRB and (bad) pop push (bad) in fbld adc test sbbl push rex.RX jl in xchg (bad) es (bad) cmc xor jns (bad) retq (bad) xchg xlat rex.WRB mov mov rex.RX rex.WRXB addr32 mov rex.WX loop shlb xchg (bad) (bad) scas leaveq mov loope mov jp add sub stos sahf repz int3 jb pop pushq rex cwtl rex.WRB mov pushq xchg add cmc icebp test add imull pop xor mov rcr cmp cvtps2pi jo scas (bad) (bad) in adc (bad) add xor movsb xlat rcll shll sbb rex.W (bad) sti (bad) ja popfq je loope addr32 jnp (bad) (bad) sti cwtl clc mov loope (bad) (bad) (bad) js mov imulb je mov xchg sbb (bad) (bad) (bad) (bad) clc (bad) loope xor jle out or xor mov stos mov or mov imul rex.WRXB js lret subb imul adc hlt test jns xchg jmp inc not add not add add inc xchg xor mov neg cmp cmp not mov jmpq pop retq jmpq jmpq sub pushq hlt (bad) sti out mov xchg mov jl out lock mov jae and xchg (bad) pop rex.B xor movabs mov ja rex.WRX rex.RX flds rex.B in (bad) (bad) mov (bad) or mov sub notl add cmp xor movabs out adc mov (bad) (bad) (bad) sti icebp (bad) jnp mov shlb (bad) jl add xor rex.XB test add add mov sbb push pop cmp cmp movslq (bad) insl (bad) rex.WRX rex.R add jmp rex.RB js sub lods jge add (bad) add mov (bad) movsl jmpq icebp adc and fnstcw xchg mov out push addr32 jg movsl cmc jmp (bad) pop gs cmp mov cmp or imulb retq cld pushq (bad) jnp pop cmp out mov pop mov mov xchg xchg adc jrcxz movabs adc rex.WRX xor pushq rex.X cmp jmp (bad) (bad) (bad) std or (bad) (bad) std mov (bad) mov mov (bad) ja add add or nop rorl adc push rex.WX repnz clc pushq jae or xchg sti (bad) movslq mov or mov lret notl xlat int movabs cmpsb clc add sahf push pushfq (bad) and sarb rex.RXB adc (bad) push (bad) add shr movabs jmpq jmpq je movsbl xchg mov setp mov lea mov movzbq mov not movsbw lea jmpq jmpq ss in sahf push mov add mov (bad) data16 push (bad) fs fimull movsl (bad) jmpq rex.WX add (bad) fnsave sbb sbb cmp in (bad) in mov rex.B cmpsb int3 add (bad) rex.WRB fwait in sub hlt cmp (bad) cli movabs addl out retq sarb rex.WXB xchg (bad) rex.RB pop sbb xchg sub (bad) (bad) incl pop jp in mov (bad) pop popfq rex.RX stos mov pushfq rex.WRXB mov and ds repz (bad) jmp sti add (bad) (bad) mov fstpt pop pop packuswb loope adc or cmp jmpq jg jne jmpq jmpq test jmpq in jrcxz (bad) jge (bad) movslq add xchg push rex.WRXB mov sbb xchg jge (bad) add mov sbb xchg jmpq clc xorl (bad) enterq sbb test movabs out xchg xor push push jg pop out sbb sbb mov xchg sbb rex.WXB cwtl cmpsb (bad) fs (bad) sub sub (bad) stos and out fidivrl addr32 fbld add mov xchg outsl adc rex adc cs jge in (bad) stos out or sbb (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp sbb mov and or cmp cwtl test in adc (bad) test stos fdivs out (bad) pop (bad) or ror (bad) rex.WRX in loop movabs (bad) jno fcoms adc mov sbb (bad) jnp mov xchg jmpq or sub (bad) (bad) push mov movsl sbb mov jp mov (bad) int3 (bad) faddl or movabs movabs mov mov sbb cltd rex mov (bad) decb rex.RXB pushq (bad) mov (bad) mov pop cmp pop cltd mov fisttpll xchg mov and cmc pop xor jle mov fcmovne movsl xor sub rex.RB sub add xchg cli pushfq imulb retq cmp (bad) pop hlt jmpq mov adc enterq (bad) imul movabs mov mov xchg xchg sub gs imul outsl outsb rex.WB outsw add sbb fsub add scas xchg rex.RB add sarb jb movabs insb jne insl push mov cmc callq lods es (bad) (bad) jbe ja mov test mov sbb test jnp mov (bad) or fcomip xchg test (bad) (bad) incl cwtl pushq mov sub fmull icebp xchg mov mov rolb lods and sub mov sub js lods xchg mov rclb sbb or (bad) mov add lea jmpq xchg stos lret cmc pop xor mov jmpq (bad) addr32 jl mov rcll rex.WR cmp adc cmpsb jae mov enterq (bad) movabs rex.WXB mov add mov int test (bad) jrcxz add adc insb (bad) int3 (bad) lret pop cmp je sbb add js (bad) xchg mov mov (bad) (bad) cld rex.WRB ds (bad) (bad) ljmp rex.X rolb (bad) div mov fdivp data16 rex.RX out jg jp sbb cmpsb out (bad) xchg adc (bad) add add and out nop stc sbb (bad) mov xor test mov pop (bad) adc sti std imul cmp lods sbb cmp cli rex.WX rex.RX mov jge xchg mov sub xchg adc (bad) outsb stc clc cmp shr jmpq jnp (bad) out adc fisttpl push (bad) ja insl cmpsb (bad) adc cmp mov mov stc push and cmpsb pushq (bad) imul and pop incb sbb hlt cmpsb (bad) lret fcmovu add mov jmpq xchg (bad) or jrcxz sub outsl xchg subl (bad) xor movabs xlat int3 add mov mov (bad) (bad) sti cmp pop test (bad) cmc test and std pop sbb cmp adc (bad) (bad) callq or rex.W xorl pop pushq rex.RXB rex.WX cmc xchg mov mov (bad) cli lahf cmp xor sahf retq xchg int3 movsl out in mov xchg mov xchg ds xchg (bad) push push push push xor cs insb add adc hlt cmp btc neg mov cmp shl jmpq movzwl jmpq ss (bad) pop mov cmpsb sbb jrcxz lock push sbb (bad) mul in rex.W mov jae adc iret repnz and adc out or leaveq or adc cli jno (bad) sub data16 xor (bad) sti (bad) or mov (bad) xchg lea sti adc jmp (bad) movsl add add jns xchg pop std popfq sbb push icebp xchg mov push or (bad) leaveq scas lret adc add rex.X loopne nop mov cmp (bad) add jb (bad) js mov jne sub callq jmpq jne bswap bswap sub shrd cmp sbb mov xor stc not add stc neg cmp mov test test jmpq callq bt sbb bsf add btr xor mov cmc cmp clc cmpb jmpq add test test test cmp mov jmpq jmpq ja ror add adc mov clc jmpq callq jmpq jmpq rex.RX jle mov mov pop out adc (bad) in mov jp pop addr32 lea movabs rex.WXB (bad) hlt pop or movabs mov out sub icebp icebp add popfq rex.WX rex.WX nop cld movabs ss lods data16 adc xor sub jns mov xor fdivrp (bad) (bad) sti rex.RX push movabs mov cmp retq pushfq rex.WR (bad) xchg stos (bad) (bad) (bad) (bad) jmpq test repnz lahf std or mov cmp fs push clc xchg mov adc adc pop rex.X xchg pop lret pushq cltd mov cmp data16 rex.XB (bad) (bad) and pop mov addr32 mov cltd mov xchg movabs adc xor insb gs xchg pushq popq div int xchg adc pop jge outsl adc fadds ror sbb sub (bad) in (bad) (bad) xor (bad) retq cmpsb mov adc xlat stos outsb cli shrb and push add faddl test xchg je test (bad) sbb movsl pop (bad) test push lea jmpq sahf rorb (bad) rex.WR out (bad) loope jo icebp fwait fs pop mov mulb pop movslq fnstcw (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp icebp mov scas rolb (bad) sub pop out movabs cld sbb scas adc xor cmc enterq jge fisubrl pop push fs (bad) adc xchg jmpq insb or rex.WB (bad) (bad) repnz rex ss xchg push jnp movabs mov (bad) jle lods jmpq cli pop push notl (bad) stos (bad) mov lods (bad) jle (bad) or rex.WXB xor jle (bad) retq lret (bad) mov out rex.WB (bad) (bad) decb leaveq mov (bad) popfq mov loope icebp lods fnstenv sbb rex.RXB in rex.RXB pushq (bad) mov in (bad) movabs add rex (bad) xchg rex.WRXB xor psraw jae mov fwait mov rex.WX add sub in pushq imul sti mov (bad) mov loopne (bad) mov sub jnp pop pop rex.WB sahf cld callq in fnstcw mov or imul fcmove (bad) push in cltd repz cmp scas sub cmpsb mov (bad) adc jg add xor movabs enterq cli (bad) (bad) (bad) (bad) jmpq (bad) (bad) (bad) callq leaveq xor pop rex.XB add add rex movabs in jle add (bad) jb imul sub cmc fwait (bad) jns or mov je rex.RB cmp adc xchg (bad) fdivl mov in (bad) mov jae lret or xchg pop lret or (bad) xor out and gs movsl testl push xchg cmp (bad) mov sarl adc popq shr xchg pop (bad) lods es add mov inc dec mov test cmc cmc test mov test clc add jmpq cmc test xchg bt clc jmpq jmpq add jmpq or bsr test cmp mov shld btr or mov cmp push and mov bsr ror and sub (bad) hlt test dec sar push test not ror add push shld bsr push neg push rcl sbb clc xor mov bt cmc cmc test jmpq je bsf bt dec push movzbw cmc add mov bsr rcr sub lea lea jmpq je stc cmp sub bt cmp jmpq jb retq add jmpq jne rcr mov adc sub rol mov test cmp cmp sub bt test clc clc pushq bt clc clc test cmp jmpq jmpq xchg mov shl jmpq iret sbb and xor jmpq shll js push mov rex.WB callq xchg (bad) cmp (bad) xchg mov enterq jno or push rex.WXB scas loopne cli lock xor mov scas loopne in popfq cmp (bad) jbe jbe (bad) rex.WRB pop sti movabs pop fwait (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) hlt or gs insl jns xor stc rex.WB nop cmc push (bad) mov jl cmc mov outsl mov rex rex.RX rex.WX jbe xadd out jo cmp or cmp xchg lods (bad) adc push (bad) push jge insb vpsadbw (bad) pop cmp iret cmpsl stc xor mov es movsl or mov rex.B fs fistpll (bad) divl jo xchg callq movabs jmpq (bad) add cmpsl (bad) cmp loopne and xchg mov xor rex.WR xchg adc popfq sbb out (bad) data16 insb add cmp ss sub pop rex.WRB cmp rex.WR cs xchg and rex.WRB addr32 pop addr32 lock jno sbb (bad) adc push (bad) (bad) (bad) sti xchg (bad) mov (bad) addr32 (bad) lods pushfq retq (bad) fldenv jbe (bad) lock fbstp scas out add cld (bad) (bad) (bad) ljmp loope jmp sub out or lods cs mov pop rex.WXB retq js mov cmp enterq xor movsb test push adc (bad) mov sub mov cmp mov lahf cmpsl mov xchg js add jmpq jne je clc test clc cmp jmpq (bad) jge test jrcxz stc cwtl rex.RB jg scas mov (bad) fmull lret (bad) (bad) (bad) movabs jo (bad) lret xchg mov (bad) (bad) std out xchg cmp add add add add or or lahf mov rex.RX mov mov jmp add jno js jne mov adc adc sbb push sub push rex.WRB push xor (bad) repnz pop xchg (bad) pushq rex.RX pop loopne (bad) mov movabs adc jmpq jne bt bsr inc bsr sub adc rol setge or mov rol add test rcr mov cmc cmc jmpq out lret pushfq cmp add lret outsb roll imul ss pop xchg push mov add jns xchg (bad) addr32 rcrl mov out cli out outsb rex.W rol mov rex.RX pop lahf add lahf (bad) icebp jmp (bad) fdivs rex.WXB (bad) mov xor add pushq scas jb (bad) (bad) (bad) decb xchg mov cltd cs jo mov (bad) lods fs cmpsb gs pushq shl addb sub (bad) int3 sbb adc (bad) push movsl (bad) enterq (bad) (bad) (bad) hlt or retq ja sbb cld and js es (bad) adc (bad) sbb movabs (bad) lock rex.WRX imul rex.WX add pushfq pushq pop (bad) mov scas xchg pop adc lock jae xor bsr add shl mov neg dec cmp mov bsr mov stc clc cmp cmc sub stc repnz jmpq je and movsbw jmpq dec bt cmc not test clc cmp sub jmpq jmpq bsr sub mov movsbl lea jmpq add cli jne add add bt bt shr cmc cmp jmpq jmpq out rcr movabs mov add or retq iret xchg movsb cmp imul (bad) movabs mov outsb pop xchg fisttpl addr32 (bad) mov pop imul in (bad) icebp out push hlt movabs (bad) pushq (bad) mov mov rex.WB push sub push push (bad) and pop test (bad) (bad) sti mov mov (bad) nop (bad) push pop push enterq mov rex.RXB (bad) (bad) rex.WRX fwait rex.B add add stos mov sub cltd (bad) fisttpl mov xchg andl lahf mov adc (bad) in sbb mov adc adc or (bad) loopne adc mov rcr add and rex.W rex.WR push rex.WB cs insb add out fmul lock pop (bad) sbb mov (bad) mov push cmp js cmpsl mov sbb cld (bad) push jle callq gs sub lods and je xchg cli test sbb cmpsl (bad) and loopne sbb sar (bad) rex (bad) rex.WRB rex.RXB rex.RXB adc sti movsl mov (bad) (bad) incb (bad) adc xchg mov adc in pop out pop adc mov push add add jge outsb adc cli jge add cmp sbb in or sub xchg add mov or jrcxz mov add rex.WR xchg mov fisttpl int3 outsb (bad) adc or (bad) rclb adc lods retq test je clc sub jmpq jne test bsf rcr xor jbe mov not movsbw mov jmpq shr add bswap cmc mov clc cmp sub jmpq mov (bad) loope sarl imul cmp add (bad) or retq jrcxz leaveq sti jmpq push test xchg rex.XB xchg jg test rex.RB jl (bad) jae imul rex.WB loopne pop outsb push loopne rex.RX mov xor and rcll (bad) std mov xor add adc rex sahf pop test add mov cwtl movsl ds rex.WB ss lods mov sbb imul or imul xlat stos std cli movabs xchg sbb andl pop rex.RXB mov enterq push rep test mov jp pushq sbb sub mov movsl (bad) mov icebp callq in sbb icebp (bad) xchg outsl fidivl js lods mov mov jns mov push xor jns mov (bad) mov xchg mov xor scas (bad) jp mov jb mov jnp mov cmc test jb mov mov jnp mov xchg pop mov negb (bad) je mov jo jle mov jle mov xor pop lock sub jle mov rex.WX xchg jle mov (bad) mov mov mov mov leaveq rex.RB movslq popq lret sbb cmp xchg (bad) (bad) ja mov mov sbb lret push jrcxz in mov ja xchg mov rex.WRB mov rex fist (bad) insl mov jle cmp add jns mov add test stos nop sbb mov jbe test or sarl xchg orl mov in out test mov rex or lods fnstsw insb (bad) je pop fucompp rex.RB sbb movsl leaveq fwait ljmp sbb cmpsb (bad) rex.RX stos sahf sbb (bad) adc rex.WX ds pop cld or insl loopne and cs test sahf add leaveq cmp insb out and rclb pushq add add add popfq push test in (bad) rex.X adc sub (bad) imul mov (bad) adc movslq adc in adc out in mov (bad) pop test rex.WRX xchg punpckhwd cmp fs (bad) push clc lea adc adc imul (bad) es popfq jo sub loopne pop (bad) imul (bad) mov adc scas movsl add (bad) lods in mov or cmp negb stos frstor or cwtl adc jge jb push mov sahf fdivl rex.WRB xor sbb sub in add add or jp rex.WXB (bad) cwtl test push mulb xchg mov mov sbb mov popfq mov pushq xchg cli pop jmpq jmpq jmpq pushq jmpq jne shrd not setb data16 icebp mov stc stc or jmpq jae jmpq jae cmc cmp jmpq jmpq rex.WXB rex.RB rex.WRX rex.RB xor cs insb add mov bswap not lea jmpq jmpq je inc cmp sub mov rcl mov bsr bts shld mov shl stc shr btc rcr rcr mov cmc cmc clc or jmpq andb int add xor and xor xchg movabs imul mov jns add mov movabs or jg icebp ud1 jmp loop loopne xor cltd cmp rex.WR (bad) cli movsb rcrl (bad) std sub pushq pop xlat or pushq cmp test (bad) adc (bad) mov and leaveq pop jae jne rcrb xor lret popfq sahf cmp (bad) (bad) (bad) (bad) push mov (bad) loop (bad) (bad) jge rorl or cmpsb jg shlb cmp retq insb xlat test sub rex.WR mov sbb or cmpsl mov out rex.WB mov cwtl mov hlt test test (bad) adc cmc imul test cmc add jmpq cmp jmpq rep movzbw mov pop jmpq cmp jmpq jne adc jrcxz test or negb jl xchg cld stos (bad) rex.B sub (bad) xlat cwtl rex.WB push (bad) nop sub (bad) in (bad) cmp movabs or rol shrb mov stos jae and xchg retq rex.RXB rex.WXB rex.XB int jo pushq rex (bad) mov (bad) (bad) sti stos (bad) or data16 (bad) (bad) decb mov stc (bad) xor jmp sahf rex.WRXB (bad) mov push add add rex.W jmp cli movabs pop (bad) push movabs (bad) xchg clc shll sarl mov cs xchg add xchg in (bad) shrl movabs test (bad) (bad) add rcl push rcr ror clc mov setne bts ror rcl sub bswap setle mov bswap lea jmpq ja jmpq je jmpq bt cmp jmpq je shr push dec add xadd mov shrd stc sub jmpq je cmc cmp jmpq data16 repz clc cmc cmp and jmpq cmc movslq (bad) jrcxz enterq leaveq jle popfq cmpsb mov adc and jno jae (bad) xor add (bad) lret push rex.X rcr leaveq incl movabs (bad) sti push rex.WB mov test pushq lods or jge movslq mov (bad) (bad) (bad) cli stc or or (bad) (bad) std fsubs lods (bad) (bad) jg (bad) stos (bad) lret retq jl mov (bad) xor push sbbb js repnz incl sahf frstor nop push (bad) frstor (bad) xchg scas (bad) pop mov sbb iret jp xchg cli in (bad) mov add sbb in xchg rex.WXB (bad) (bad) (bad) mov xor push pop cmp mov pop cmp mov sub push add in sub mov or shrl fimull fstpt xor sub mov lods (bad) cmpsl (bad) jae imul (bad) (bad) jmpq je or push rcl test add mov bt shr clc sub mov lea jmpq ja shr sub btr setno add shl sar bswap mov cmc mov jmpq mov js mov sbb repnz mov enterq ja jns jno mov pop add rex.WX xchg sti callq (bad) fmul mov (bad) test or jp,pn fwait in add fmul (bad) (bad) (bad) dec xchg movabs xor add xor sar (bad) std test rex.RX add add jnp out rex.WRXB xchg mov (bad) icebp rex.WB mov mov jne push rex rex.W rcr jo (bad) xor adc mov jne xor jb adc adc pop (bad) fisttpll callq iretw hlt cmpl xor (bad) retq loope sbb loope fnsave xor movabs jrcxz rex.WRXB and (bad) mov (bad) xor fwait loopne or jne loope rorb (bad) mov test jb xchg out fmull int rex.WR (bad) (bad) (bad) sti out xchg cli cmp (bad) (bad) inc or jge fwait jno fwait mov pop adc add add rex.RX rex.WRX pop addb (bad) sub or cmp shrb fwait (bad) insb jp nop mov (bad) rex.RXB jp mov sub (bad) sarb adc outsl add push movslq xor cs insb add test jmpq jmpq jl je clc test cmp jmpq mov jmpq callq jmpq (bad) jmp or mov rcll icebp sbb in rcr mov pop jae retq xor fidivl rex.WRB test (bad) (bad) (bad) adc lods adc add pop xchg (bad) cmp int mov cmp or xchg add (bad) cld in and (bad) inc jge and fs loop rex iret jl outsb mov rex.RX pop stc sub lods mov outsb adc xchg (bad) sbb or (bad) retq imul mov notb cmpsl mov scas push addr32 movsl fdivrs sub rex.WX movl (bad) mov xor mov out fadd idivb lret (bad) (bad) sub adc (bad) orl xchg iret pop cld fdivl (bad) xor sar (bad) callq cmc (bad) loope jne mov mov gs callq jg lock mov adc xor insb rex adc jns xchg (bad) imul out (bad) pop sub adc rex.R or sbbl add clc mov or rol ror mov sub not add cmc mov cmc clc xor bt repnz jmpq callq bswap jmpq rep jmpq (bad) sub hlt add xchg movabs jl xor adc cmpb rex.WRB fnstenv mov mov mov movabs loopne jno in rex.XB mov cmp adc movsl (bad) sbb loopne fidivr fldt xor jnp jl mov xlat and leaveq add outsb xchg sub out js mov mov mov (bad) (bad) sti jrcxz imul inc (bad) std pushq fsts jmp cmp add add rex.X int sti lods xchg test movsb (bad) sub adc adc cmp sbb mov js xorl xchg rex.RX pushq push stc in pop divl rex.XB test push xchg rcrb push (bad) cltd rex.WXB rex.WR sbb xchg callq movsl (bad) out sbb mov (bad) jb std mov movsl pop (bad) jbe jle lea outsb fidivrl mulb (bad) push in hlt insl or push fnstcw push mov sti jae push or jo (bad) insl pop imul lcall pop mov pop (bad) (bad) (bad) decb (bad) mov (bad) (bad) fisubr mov (bad) rex.WXB cs test and ja movabs push or xor (bad) (bad) (bad) (bad) lods jle movabs (bad) negl repnz xor xchg add (bad) movabs jbe in or fwait sbb cmp mov mov sub (bad) imul rex.R int3 (bad) lahf fwait lock mov imull and cmp cmpb jmpq pop mov movsb cmp leaveq jmp retq jrcxz cmpsl movl push (bad) repnz cmc out and shlb repz cmc xchg (bad) (bad) adc rorl fwait out rex.RX sub jge and jmp ja and lret mov cmc adc out or lret jrcxz nop callq popfq rex.RX scas adc xchg stos mov sahf cwtl testb (bad) sti int3 idivb xor (bad) (bad) (bad) lods js rex.WXB adc roll add add rcrl test or int ds subl rex cltd xchg mov repnz pop cmc push int mov (bad) adcl mov mov jl stos (bad) xor push sbb mov mov rex.WRXB (bad) jmpq xchg add (bad) mov (bad) mov outsl pop add adc jge pushfq rex.WRX ss jp mov xor cmp xchg rex.WB rex.RXB sub and gs jae jo cmp push sbb and jl (bad) (bad) (bad) (bad) sti cmp loop jbe (bad) (bad) (bad) sbb (bad) hlt lods (bad) xchg nop (bad) cmp cli int fstps xchg or xor adc rex.WRB idiv mov sti adc mov iret lret movsl (bad) mov pop (bad) (bad) (bad) pushq rex.WX repnz mov rex.WR rex.WXB repz data16 push push not mov scas mov cmp add fstpt (bad) push jmpq and insb rex.R jmpq bt bt bt add cmp stc mov cmc jmpq test and callq movabs cmc orl (bad) sbb or out lcall jp xchg cmp mov (bad) mov sbb xor callq movabs (bad) (bad) std cwtl shrl xor (bad) mov jp jl push cmp pop je sbb (bad) xor push mov punpcklwd adc shll movsl rex.WX jrcxz mov retq xchg xchg add sbb sbbb retq (bad) test mov add jnp hlt sti insb jl (bad) push mov lgs je cmc cmc cmc add test cmp jmpq jl cmc bt mov inc sub neg setp mov jl adc and rcr mov movsbl push stc mov (bad) repnz push (bad) repnz jmpq (bad) pop mov (bad) (bad) gs out movabs mov fidivl retq movsb adc int std (bad) (bad) (bad) test test cmpxchg pop or sbb jge fbstp xor movslq fnsave enterq jbe sbb (bad) inc mov pop out retq movsl cltd (bad) out fpatan out adc (bad) (bad) sti mov in out stos push (bad) jmp and sarb pushq (bad) jp (bad) (bad) (bad) sti hlt xlat repnz pop rex.WB pop roll decb popfq push addr32 sub xchg mov sbb (bad) mov add add or mov pushq push cmp stos lret cmc stos sarl (bad) movabs mov gs mov or test mov mov (bad) pushq or sar rol mov cmp add rol shr cmp rcl jp add mov test jmpq sub (bad) test cmpsb mov mov fcoml (bad) imulb mov addr32 xchg (bad) repnz in (bad) div add jb sub repz push and (bad) mov cmp rex.WR xor sbb fidiv hlt fstp nop sbb (bad) (bad) sti pop jle (bad) fcos (bad) (bad) (bad) cmp or fisubl adc rex.WRB or movsb movabs repz push jge jmp xchg ss (bad) lahf (bad) (bad) (bad) jmpq jae xchg movabs movsb xchg rex.RX mov fldl in sub (bad) mov mov adc mov (bad) iret mov xchg pop cmc mov sbb xor adc (bad) repnz pop push mov stc mov imul js (bad) adc clc callq hlt in out (bad) and or sub xor insl and sti pushq rex.B es cld data16 (bad) mov rex.WR rex.WB mov jrcxz movsl callq sbb xchg test sub mov retq sbb push xchg in mov loop iret leaveq rex.WRX mov (bad) shll mov outsl and repz (bad) repnz in xchg callq (bad) (bad) (bad) cld or (bad) (bad) (bad) callq cmp xchg rex.WRX cli enterq add add mov pop cld sahf (bad) (bad) movsb enterq fistl (bad) (bad) mov xor sbb push mov sub jge (bad) (bad) ss add push or xor (bad) push jmpq mov jmpq and fidivr mov rex cwtl mov insb leaveq sti pop sub cmc add (bad) add pushq mov cmp test lea add (bad) fiadd (bad) scas sahf rex.X or fiaddl (bad) (bad) push sbb (bad) xchg mov cmp (bad) add (bad) jbe push push or lods (bad) es sub cmpsb cmp int3 icebp mov xchg loope (bad) (bad) (bad) sti pop mov fcompl (bad) (bad) (bad) cmp loope jp jbe sub (bad) (bad) (bad) mov scas push movabs push push movabs (bad) jrcxz cs (bad) rcrl jp pushq sbb rolb (bad) jg (bad) test rex.W mov rex.WB adc out mov movabs je movzbw add shl bt sub rcr or shrd shr shr bts mov rcl btc bswap dec add stc shl sar add adc bt btc mov jmpq in insl stos rex.RXB rex outsl or retq retq (bad) xchg rex.RX scas repnz mov cmc lock mov out scas (bad) jle hlt stc adc mov jae gs (bad) push pushq or stos mov rex.XB (bad) mov or pop loopne mov push (bad) scas shrb rex.W xchg jle mov test (bad) (bad) (bad) cli in rex.WXB std (bad) pushq ja xchg sarb sub mov rex.WRX loop or movabs orl xor out mov and fisttpll xchg jg repnz (bad) xor xchg (bad) stos loopne adc loopne pop int rex.W push xor mov mov cmp sub cmp test bt pushq jmpq jmpq jmpq rex.W out je cld and sub mov jp mov out movabs sbb in sub (bad) pop or rex.XB mov (bad) cs mov cmp or (bad) insl test adc mov (bad) movslq fild (bad) push (bad) mov lret int lock jge (bad) (bad) (bad) (bad) mov (bad) jnp scas or iret fs pop lret movabs (bad) scas shll gs mov adc adc pushq adc add icebp movsl adc rol mov clc cmc rol jmpq jmpq movabs outsb xor xor loop xor fs (bad) (bad) mov adcl jne mov fdivs sbb xlat cmp test and out cmp and (bad) sub sub je mov fisubrl and lock push callq loope xor mov in es pop rex.RX (bad) (bad) sti lods (bad) cmp add (bad) (bad) decb movabs or mov je mov and xor rex.WR hlt (bad) jle rex.RXB xchg cmp push cli and cmp add and rex.B (bad) gs push out jno int3 lahf mov mov adc cltd mov (bad) ficomp lods adc jmpq pop jg rex.RB mov or sahf push rex.WRX sbb xor rex.R test test stc movabs fidiv (bad) rex.XB add fdivr xor (bad) (bad) sti jno (bad) es (bad) (bad) (bad) push lods movsl jle in rex.W add imul sbb xor (bad) and sub (bad) movsb (bad) std (bad) or test fsub test (bad) mov cmp (bad) (bad) (bad) jmpq jmp mov sbb cltd pushq cmp mov xchg rex.WRX rex.XB cmp cli adc int lock and xor stos (bad) cmp push test fbstp push sar and sbb cmpsb (bad) lcall (bad) xlat stc in fwait rex.RB rex.WRXB (bad) nop (bad) imul nop jrcxz imul repnz fwait and mov out mov fisttpll mov push movabs movsl (bad) xor adc and mov fidiv lock sbb xchg fmuls out jnp lock (bad) (bad) (bad) cli mov (bad) (bad) (bad) std fcompl lock rex.R int3 outsb pop or and add or or cmp (bad) mov ja and ja leavew pop (bad) (bad) (bad) jmpq (bad) pop jnp xchg push test sub (bad) outsb rex.R retq fimull (bad) (bad) mov jp iret mov movabs jae mov mov divl rex.W stc mov mov mov jmpq xchg out cmp leaveq jp repz (bad) shll (bad) (bad) mov mov cs scas leaveq es clc cltd rex.WX cmpsb lret rorl (bad) adc fnstcw cmp mov sbb sahf movsl lret (bad) mov push push rex.WRXB jle rex.X sub sub xor push out mov in subq cmp rex.RXB mov sbb (bad) (bad) (bad) sti add (bad) xchg (bad) (bad) (bad) (bad) sub (bad) mov push imul lods sub out sar fwait in rex.XB add (bad) (bad) sbb sarb retq ds jp mov push repz push sub mov pushq rex.XB jns addps (bad) pushq fwait xor rex.W (bad) rol sub (bad) mov mov movsbq pop jmpq jae cmp cmp xor jmpq cmc and bt cmc jmpq jae callq stc xchg push rex.WRX (bad) sar movabs pushq rex.WR push (bad) (bad) mov rcl rorb xchg adc rex.WRX rex.W rex.WXB test push movabs or test mov lods (bad) add cmp loop scas (bad) and mov (bad) cli mov (bad) (bad) (bad) std popfq test movabs movsb ja push cwtl or lret mov cs add iret jmpq xor (bad) or movsl rex.RXB sbb (bad) jae add add push loopne xchg cmc (bad) fwait xor adc sbb rex.WRB xchg pop adc rolb enterq jns jge (bad) cmp mov (bad) repz imul bswap mov movsbw movzbw mov jmpq mov lea mov jmpq (bad) mov or insl pop (bad) stc push mov add jmp jrcxz rex.WRX nop retq repnz enterq ja xchg cmp push cmpsl jl test mov fidivr sub mov stc pop or in in lock mov pop shlb (bad) gs gs sbb jmp lods leaveq sub jbe fidivr mov (bad) (bad) (bad) cld mov rclb insb adc lea push imul xchg clc (bad) mov add add rex.RXB cli fcmovnbe cli scas rex.RXB stos mov lretw push rex.W push push or cmpsl (bad) lods xchg mov jo shrl mov rex.RB add mov fistl and (bad) sbb mov rol ja mov and mov xchg lods add adc ffreep jne mov (bad) pushq notl xchg sbb in nop rex fs movabs or cmp xchg (bad) xchg std sbb imul (bad) (bad) jp (bad) mov sti jnp xchg adc xchg addr32 stc adc fmull xchg mov xlat or rex.WX sbb adc movsb stos scas in stos xor mov test adc (bad) (bad) decb sahf push or (bad) mov std movabs (bad) decl mov rex.R shll movabs (bad) je xchg movabs (bad) ja mov movslq rex.WB fmul mov retq (bad) outsb jl xchg sbb push jns mov in adc fucom xlat xor fcmovbe (bad) mov fs cmp negl rex.WRB outsl pop mov jb out test (bad) cmpsl es repz in (bad) ss rex.WXB out jno fldl addr32 ja and cmpsb rorl js (bad) lods lret hlt out mov leaveq and or xchg movsl out (bad) mov scas rex.WRB (bad) (bad) sti loop xlat pushq (bad) (bad) (bad) inc (bad) cltd lret pushq pop cli int add add jnp test cvtps2pi addr32 callq jbe rex.WRX xlat sbb sub adc push adc ss (bad) jge pop enterq (bad) rex.R sub jne push loope pushfq and rex.W adc adc pop (bad) or (bad) jmpq jmpq jmpq jmpq in (bad) rex.WRB pop repz hlt movabs mov cld rex.RB rex.RXB test (bad) stos cmpsb rex.WX jl jle push xchg adc (bad) xor data16 and lods clc jnp rex.RXB jns je in mov mov cwtl rex.R addr32 nop mov add int3 lods stos or xchg sbb push xlat scas (bad) (bad) (bad) std or cmp pop out shrb (bad) adc (bad) (bad) (bad) std or lret scas (bad) fiadd add or pop sub add jrcxz loopne hlt lods sub out fdivs pop lret in xchg loop sarb (bad) jle mov mov rex.RB (bad) jge sbbl jmpq pop int3 mov push cmc xor (bad) int3 cmpsl ss cld push (bad) push fmull mov (bad) addr32 movsb rex.WR lahf mov mov and rolb or rex.WRX enterq xchg rex.RXB and fucom and hlt jmp sub in fnsave imul push imul mov add lock (bad) callq mov repz rex.X (bad) mov and mov or push sub sahf mov mov xchg (bad) (bad) (bad) sti xor test mov (bad) (bad) (bad) adc out rex.WRXB cmpsb (bad) (bad) (bad) (bad) (bad) callq xor (bad) mov out adc jns and (bad) fisubl (bad) (bad) stc xchg sti xor stos out callq test subl (bad) scas sbb test scas mov test rex.WRB sbb gs mov mov mov (bad) out pushq (bad) push popfq sbb lods mov sbb popfq lret lods sbb lock (bad) lods rex.WXB push pushq mov (bad) fildl xor (bad) (bad) add sub sub xor or in push and pop push jl sbb test mov mov mov roll popfq jmpq or sbb popfq pushfq add fdivrs (bad) (bad) cld sbb leaveq pushq (bad) (bad) (bad) clc push (bad) repnz pop (bad) (bad) hlt xlat mov jb add add xchg sub push sbb (bad) jge rex.WX in pop mov (bad) push or nop (bad) sub pop cli fdivs (bad) and sti push (bad) rex.R add jo fcmovne outsb pop stc sub mov adc pop in sub test adc sub int3 movsl mov jno jae test jge add or mov mov mov movsb cltd rex.WR imul cmp rex.XB rex.WX rex.RB sub lret mov mov rex.X jns mov mov xchg stos outsb loope (bad) cld (bad) xor (bad) sti mov shrb (bad) (bad) (bad) decb or xchg mov jb jns fmull jo jmpq pop push mov add adc xchg scas cltd (bad) iret scas es (bad) mov rex.WRXB and mov add add sarb cli rex.RB insb adc cmp rex.R callq rex.WRB rex.X rcl rex.R (bad) (bad) insl mov jmpq repnz xor jne mov add and jmpq mov add shl bsr cmc add ror clc bt add and shr rcl mov cmc clc shr clc test cmp jmpq jmpq jmpq callq jmpq pushfq cmp sbb cmpsl movabs jle mov jp addr32 mov (bad) repnz push rex.X in xchg jle push sbb mov xor fdivrl fisttpl rex xchg mov or (bad) mov fdivrs imul cmp and mov (bad) (bad) (bad) sti push rex.WB callq (bad) xor (bad) (bad) movabs xlat rex.XB (bad) (bad) (bad) pushq loope xchg (bad) sub xor or adc add rex.WR jrcxz jnp insb jp xor rcrb (bad) movabs mov enterq loope test lahf adc jmpq ja cmc stc imul cmp cmp add jmpq (bad) sti in (bad) cld mov movabs sub (bad) pop ds cmp cmpb rex.RXB and test (bad) mov test sub roll je rex.RXB (bad) (bad) fcmovb mov (bad) jle and cmc cs or rex.X mov jrcxz sbb (bad) sub (bad) lret sahf std xor rolb sti icebp mov (bad) (bad) (bad) sar outsl pop jns test cmp stc lahf iret repz rex.WRB add add movabs rex.WRX rex.WXB fisttp rex.RX stc popfq and gs ja pushq pushq int jo mov cltd int lret fnstenv pop icebp mov sub mov sahf cmp jbe jmpq rex.X sti lods mov mov jrcxz pop or jns mov mov lsl pop movslq scas fstl (bad) and nop imul (bad) sbb xchg (bad) xor icebp (bad) cmc (bad) (bad) rcl xchg pop iret (bad) stc insb (bad) movabs (bad) (bad) sti sbb mov (bad) std cld and hlt out add imulb icebp jrcxz (bad) (bad) (bad) jmpq xchg push pop adc fwait iret lock (bad) mov rex.WRXB outsl rex.RB mov shll imul mov subb mov test (bad) rex.RX mov movabs jno mov or rex.WR incl rex.RB gs stos add rex.WRXB push add mov mov and xor lock loop push mov (bad) (bad) in popfq (bad) rex.WX lret jmp frstor mov stos cld imul leaveq imull mov (bad) jae cmp imul ror jne lret out sub sub mov adc out (bad) (bad) (bad) (bad) sti rex.WRXB fwait cmc sbb (bad) cs add and rex.WXB (bad) cs fdivrp (bad) (bad) ljmp (bad) stos xchg mov jle xchg fs (bad) movsl hlt pop insl enterq (bad) or (bad) (bad) rex.WXB shll or cmp in xchg push (bad) pushfq cmc (bad) push (bad) rex or adc lods retq sahf mov xor jb test jmpq jmpq jne neg neg bsf mov cmp add stc stc movzwl rol bswap mov bt cmp add test stc mov cmp bt jmpq add jmpq movabs retq movabs shrl lock (bad) pop pushfq es rex.WR jge nop xor fwait rex.B mov in sbb (bad) jae in pop (bad) mov (bad) and scas (bad) test retq adc leaveq rex.WRX rex.WB rex.WRX (bad) data16 rorl nop in leaveq and rex.WRX mov leaveq rex.WRX mov std outsl (bad) sbb mov xor vcomisd cmp or (bad) cmp and rex.XB int (bad) stos add int mov pushfq sti cmp shlb fnsave test cmpsb mov mov jl in jmpq xlat sarl push fwait sub (bad) ja add mov rex.WRB cmc xadd sub shld movzbl adc shr bsf adc xadd mov jmpq push rex.RB push rex.WB rex.WRXB rex.WRX cs insb add out jmp jmpq lea lea jmpq sbb mov (bad) cmp mov movabs adc push lods pushq (bad) sti in out mov jns cltd sbb (bad) xchg movabs and mov sbb test adc (bad) rex.WX or (bad) (bad) mov insl and (bad) (bad) rol mov mov pop sub (bad) (bad) (bad) hlt or push adc (bad) pop pushfq pushq cltd xor fadd mov mov mov ss test (bad) sub (bad) rex.WB rol out cli mov mov (bad) movabs fstpt mov cmp mov out mov mov fldcw loope ja mov xchg mov adc rex.X adc jmpq jmpq je jmpq jae jne cmp sar mov or mov jmpq and fsubrl jmpq xchg in xchg rex.WB callq push mov decb mov fcomps rex.WRX (bad) or sub (bad) sbbl adcl jrcxz xchg out sub subb test or movsb sarl adc xor mov pushfq test (bad) (bad) cld scas rex.RX fs (bad) (bad) (bad) out (bad) (bad) roll mov mov sub movabs rex.R add add or sbbl xor sbb sahf (bad) mov fidiv rex.WB lods cmp mov sahf std pushfq lods mov mov iret jne fstpt cmp movb clc test test jmpq add cmp neg shrd not mov cmc stc cmc cmpb jmpq add add je bt or jmpq jne jmpq jae xor bt xadd mov setle adc add seto jmpq or stos insl cwtl movsb (bad) mov stc mov movabs or mov insl rex.B push pop orb out ds rex fidivl jg push test cmp pop fimull imul shl orl mov (bad) test mov (bad) (bad) cld pop mov (bad) (bad) (bad) cmp fldt or jb sub xlat cmp sahf adc (bad) sahf xchg lods sbb mov (bad) sti movabs add cmp ucomiss cmc movsb (bad) mov xchg rex.RXB leaveq lahf cmp in (bad) mov add and mov insl cmp sub mov outsb (bad) notb cmp pushq cmp adc insl popfq mov (bad) mov rex.RXB pushq or mov imul mov or loopne rex.RX stos (bad) std clc xchg rex.WRX rex.W nop cwtl cli push jno pop push adcb xchg rex.W xchg jp (bad) (bad) enterq pop fstps cmp sbb jno rex.XB stos test jns xor adc sub jae push mov sub in (bad) fwait (bad) data16 outsl adc xchg jge and (bad) (bad) sti pop sbb (bad) (bad) cmp mov (bad) jne test out fcomp mov fwait (bad) (bad) (bad) (bad) mov test (bad) adc mov js (bad) cmp cs int test icebp mov (bad) xorb pushfq add xlat rex adc xchg adc adcb xor add cmp adc test jmpq add add add add (bad) addb add sub (bad) addb add xor (bad) addb add rol (bad) addb add test addb add add test adc bswap xchg add cmp mov bsr btr or btr sub neg or shld mov test sub cmp bt pushq cmp cmc cmp jmpq callq bt clc or jmpq clc cmp jmpq je jmpq je stc stc rcr push shl xor mov neg bswap sbb inc sub bswap not movsbw jmpq jmpq jmpq push not mov not lods bt cmp neg jne dec cmc bt not test clc bt test sub bt cmp movzbw lea not lea lea bswap js movsbw pop jmpq callq jmpq cmpb jmpq jp push enterq jnp ja rex.RXB push popfq rex.WX cmp fisttpll (bad) icebp mov pop test push xchg int sub push sub (bad) cs mov (bad) fisubl loope (bad) lea je loopne leaveq jp jo movsl adcl xchg sarl jae movabs test rex.RX rex.RX adc xchg xchg jno in test or pop clc (bad) jg test jge rcr (bad) (bad) (bad) cld insl mov (bad) (bad) decl movabs mov add mov add (bad) rex.R jg xchg (bad) fucomip mov sub (bad) (bad) (bad) (bad) imul rex.XB orl sbb (bad) (bad) orb (bad) incl pop int3 scas and repnz pop rex.W xchg mov (bad) mov xor scas mov shll add lods push movabs (bad) add fmull scas fistp rex.XB sub adc stos orb adc int3 or popfq (bad) insl (bad) (bad) nop (bad) sbb fisub cmp sti fcom shlb xchg push adc (bad) adc fbstp cmp (bad) mov repnz mov in js movabs pop outsl push pop sub loope sti fidivr (bad) (bad) (bad) cld or xchg sahf (bad) (bad) (bad) (bad) callq lea xor cltd int3 cmpsl repz add pushq subl or out test (bad) mov jb rex.X cmc xchg idivb (bad) nop mov mov leaveq test push cmp xor jb pop adc mov (bad) (bad) bnd pop adc stc stc cmp cmp jmpq ja stc bt imul stc stc add jmpq jmpq cmp bt test jmpq pop fist cmp mov (bad) in lret in pushq rex.R scas (bad) add mov adc fidivr sahf and gs xchg push jg rex.WR jb popfq int (bad) movabs jne pop jp sub jmpq lea popfq sub xchg fsts rex.WR rex.WX mov out or rex.RX lahf icebp lret movsl cmp movslq jge xchg shll iret adc (bad) pop jo (bad) (bad) sti (bad) movabs mov (bad) xchg rex.WX mov out sub rol (bad) jns xchg hlt mov xlat (bad) (bad) (bad) jmpq in rorb rex.WX lret fs (bad) pop fnstsw rex.WX jb lret lods fwait add mov add jae movabs iret insl add mov (bad) mov cwtl sti jmpq rex.WB adc and lret mov (bad) out (bad) popfq rex.RX leaveq repnz xchg (bad) jmp jbe retq mov fisttp adc push callq mov (bad) lea rex.R xor je jl push enterq (bad) (bad) (bad) rex.W scas sbb (bad) sti xor (bad) (bad) (bad) (bad) decb sub fmull rorl lods (bad) xchg (bad) (bad) (bad) jmpq fildl cld mov jb (bad) rorl imul mov xor int3 scas pushfq std rcrb (bad) movabs sub retq xor sbb rex.R gs rex.WRB mov xlat loop mov gs xchg loopne xor fimull jns sahf (bad) fist rex.RX rex.WB rex.RB (bad) mov cwtl cwtl clc sar sbb scas (bad) (bad) (bad) popfq stc sub sti sbb (bad) sarb fimull sbb cmp retq addr32 (bad) icebp xchg rex.WRXB fwait cmp jo js test pop nop pushfq xlat jl je mov sbb (bad) xchg mov (bad) (bad) (bad) cld add mov (bad) (bad) jrcxz xchg leaveq es rex.WRB add add movslq mov rex.RX adc mov push jg (bad) rol jne mov xor pop ljmp rex.WXB sti cmp leaveq (bad) sub mov cld retq push push xor jp rex.RB rex.WX or clc cltd xchg adc xchg test pop adc cmc test test cmp jmpq jmpq clc cmp sub jmpq clc stc stc sub stc clc add jmpq std jo xchg adc jp pop shrl sub test addr32 (bad) cwtl push je movsb sarb (bad) popfq cli (bad) mov fincstp test sub cltd movabs xchg adc mov out test (bad) (bad) mov ds outsb (bad) (bad) xor lret sub out fwait iret jno insl mov xor (bad) adc xchg iret rex.X pop cmc pop sbb pop fxch (bad) (bad) (bad) sti movsl pushq (bad) (bad) incb test jns or movsb imul add add add adc (bad) xor (bad) rolb icebp stc out test and insl push lock or add (bad) (bad) cmp or pop cld add mov sub out in rex.WX adc (bad) sub adc jmpq fdivr in scas mov (bad) fcomi mov pop (bad) movabs int3 cld mov sbb (bad) test or gs cmpsl out mov (bad) mov jnp add jnp (bad) jo jo scas ficom lret out add imul pushq push jle (bad) rex.X rex.WRB (bad) lock in enterq and ds (bad) imul fidivl test xor mov (bad) (bad) sti rex.XB gs (bad) (bad) (bad) and (bad) fs (bad) (bad) (bad) jmpq (bad) shll ja jmp xorl retq out fmul (bad) scas or (bad) rex.RXB add (bad) (bad) (bad) (bad) cmp jne movabs jl insl (bad) cmc (bad) mov pop out mov (bad) mov jrcxz rex.RXB clc test jmpq pop cmp (bad) (bad) xor out es cmc loope xchg (bad) xchg icebp scas adc push fs jp xchg rex.RXB rex.WR rclb nop jae bts mov rex.WB mov scas mov rex.WRXB xchg sub lret popfq out push sub push adc (bad) sti (bad) cmp pushq (bad) (bad) (bad) sbb movabs (bad) and xchg lret callq xchg jg add mov cmc (bad) insl (bad) (bad) (bad) (bad) std pop (bad) pop mov shlb sahf rex.WRB lock mov (bad) scas adcl callq (bad) xchg addr32 (bad) js add (bad) outsb or adc (bad) sbb or add mov fimull and callq stc test clc jmpq and sahf (bad) in lea mov jp movabs or mov (bad) callq (bad) (bad) mov in mov loope or adc (bad) and xor lods mov out jge rex.RB mov mov jns ljmp or (bad) ja mov divl (bad) rex.W cmc pop fdiv cltd pop fldcw jo out (bad) pop fstl (bad) mov pushq (bad) and or in xor xlat lcall xor adc (bad) (bad) (bad) jmpq (bad) jmp pop repz (bad) cs stos mov test mov loopne rex.RX or cli cltd jrcxz shrl cwtl xor in (bad) mov (bad) sub cwtl iret out test adc cs add add rex.RXB gs gs imul jp ja stc bt imul bt jmpq jmpq jne btc sub movsbl sar cmc sub mov mov clc add shr mov cmc jmpq je jmpq jne movzbw movsbq setnp mov jmpq setle not lods jmpq pop (bad) subb shlb out pushq iret sti lock push and jns sbb (bad) addr32 cmp jbe xchg fildl outsb out fild rex.WR test (bad) (bad) sub mov mov stos rolb retq xchg out pushfq sti addr32 (bad) test jmp mov cwtl rex.WRX pextrw movabs push test sub jb rex.X jp jmpq mov and scas (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) cwtl movabs scas mov out jne incb add add xchg or pop cmp movabs sysenter and test mov cmpsl stc add mov sbb xor fdivr mov sbb mov fucom movsl sub mov fsub xchg stc jmp movsl lods shl imull andl push (bad) sarb pcmpeqb or sub iret idiv cltd mov xchg xchg mov js adc popfq sub rex.WRB fwait (bad) adc imul in lods cmovnp (bad) jg xchg movabs rcll jno (bad) (bad) (bad) decb jb mov movabs outsl stc imul jg rex.X lret adc imul mov clc (bad) ficomp sahf mov adc jno rex.WX or (bad) sub jae pop and (bad) (bad) ljmp lock imul std fidiv imul jno callq clc fidivrl sub faddp adc pop fsubrl movsb scas pop cmp cmp popfq xchg test cwtl sbb (bad) movsb mov (bad) mov mov fdivp (bad) xor (bad) rex.WRX iret xchg (bad) test hlt jmpq pushq (bad) rex.X cmp out rex.R adc xchg fwait cli mov sub rex.WRXB add rex.WXB shl mov (bad) (bad) decb jno jge andb rex.RX vpunpckhdq icebp rex.WRXB (bad) adc stc mov mov std push (bad) mov cld icebp out fs lods fsubrl hlt (bad) jmpq lods callq mov (bad) pushq xor mov leaveq mov fild icebp repnz ds jno pop cmpsl sbb push retq iret mov out callq xchg imul or movb insl push adc mov movsb rex.X js notb movabs cmpsw (bad) jbe stos cld (bad) mov or loopne or and or (bad) (bad) sti scas and decb sub sti mov lahf xor and outsb ja rex.RXB add push jno rex (bad) mov pop int3 lahf scas sbb push rex.WXB (bad) orl imulb mov jle cmpsl mov mov retq cltd mov or out jns mov loopne push cmc push jmpq cli xchg loopne lahf add sbbl jmpq popfq add xchg lret clc jmpq or (bad) movabs int xor fimul jmpq (bad) nop push xor cltd (bad) lret movabs pushq sub mov (bad) icebp adcl (bad) sti rex.WRX (bad) (bad) (bad) sub xchg mov mov int3 pop pinsrw mov pop sub hlt rex.WR iret rex.RXB and adc fwait lods movsl xchg xchg scas adc repz jle add (bad) (bad) (bad) scas in sbb xchg cmp jrcxz rex.WR push and cmp or in or xchg in xchg std rex.WRXB sub (bad) insl cli retq mov imul test push add mov lret sub sti mov je bsr push bswap shl rcl setg mov (bad) hlt add sub setb jmpq jmpq bt sub cmp pushq cmp stc cmp jmpq push icebp (bad) adc xchg (bad) outsb repnz sub mov test rex.WRXB pushfq movsb and and adc adc (bad) xchg push pop scas jrcxz sub icebp movabs ja (bad) rex.RX movabs pushq adc rex.WRB rex.XB jno imul cmpsb data16 (bad) (bad) std and mov (bad) (bad) (bad) push mov xor xor movaps push sub or cmpsl mov sti pushfq and jg,pn push (bad) (bad) pop adc add mov loop add and adc pushq jmpq callq movsbw rcl cmc mov add btc mov bt test cmpb jmpq (bad) packuswb xor cs xchg fistl jbe sbb push sbb cmp loope (bad) rex.WRX rex sbb (bad) jne jae sub jle,pt push sbb movabs roll or (bad) (bad) rex.WRB sarb (bad) pop loope and fstl shl jp (bad) sti imul rex.RXB hlt push jbe (bad) or rex.WB cmp mov jrcxz (bad) (bad) mov (bad) icebp push ror mov adc shl and sub movsbw not mov jmpq jmpq (bad) shrb (bad) fwait mov jns mov xchg cs lock (bad) or adc add (bad) fdivrl or icebp out or rex.WB shll cmp cmp out jns mov pushfq mov and movslq jmp (bad) fdivrl stos and mov (bad) movl je xchg (bad) movsb and pop scas (bad) popfq or cmp rex.R (bad) add cmp mov (bad) (bad) (bad) (bad) popfq retq adc loope add add sbb rex rex.WRB rex.WRXB jne xchg (bad) mov pushfq or adc cs in xchg push or rex.WX es rex.WX stos std rolb ds (bad) (bad) jl dec test out rex.B xor adc adc sbb xor (bad) (bad) (bad) clc jmpq not mov jmpq jmpq callq jmpq jmpq jmpq je jbe not movsbq not lea bswap xchg movsbw movzwl lea movsbl jmpq test shl jge je movsbw bswap jmpq jmpq jne jmpq jmpq jmpq jmpq jne not movsbl mov jmpq lret stc icebp fdivs jge (bad) add or fildl add clc or rex.RB rex.W sbb fdivs mov repnz mov mov and cwtl es pop mov push jns,pt cmp sub jns xchg mov enterq mov (bad) lret mov sub (bad) (bad) xchg xchg mov (bad) (bad) cld rex.RXB mov (bad) (bad) decb pop xchg add lods enterq loopne add add add or fmull jnp cltd mov adc rorl fistp movsl rorl jne pop leaveq pop adc rex.X (bad) cmpsb addl mov add add adc and sub cmc btc mov xadd cmc cmp mov sbb adc bt not mov cmp cmc stc bt sub bt bt repnz jmpq mov jmpq add add lret add add (bad) jl add add add add add xor add or sub vmovhps xchg sub vmovapd adc add add add add add push lods sub cmp sub xchg sbb add sub add movabs add add add rex.B add fucomp sub sbb add add add add mov add sub add add movabs sub add mov add add add sub add add jp sub (bad) stc (bad) test add or rex.RX int sbbl sbb pop ss or imul jrcxz and (bad) xchg mov divb cmpsl incb cltd or out rex.XB xchg adc push mov imul cmp cwtl jo xor gs sti cmpsb shll movabs rex.RXB rex (bad) add sub cmpsl cmc (bad) cs mov cli sbb retq rex.WB rorl pushfq test jmpq addl movabs cmp pop add xchg (bad) div adc (bad) testl rex.XB ja cmp (bad) scas stos mov push rex pop jb (bad) sub rex.WR lock cmp (bad) jl rcrl mov rex.WRXB vmwrite test add xchg in sub rex.WRB mov movb mov movabs rex.WR (bad) cmp (bad) jmpq cld incb cmp jle mov push lret adc xchg rex.XB iret test and loope lea movabs pop (bad) (bad) int3 (bad) xchg cltd xchg scas adc lcall js mov adc cli mov sub jge test lea in sbb (bad) fidivl imul pop movabs int3 sti test rcll (bad) cli mov rex.WRX xlat enterq pop outsl fistp movb sbb je xor mov addr32 (bad) insb mov or mov add in pop int3 xchg xor shll sub out or adc and cs in test cmc movabs rep movabs cmpsb (bad) mov test or push (bad) test sbb jle (bad) sub add retq push xchg mov fild jrcxz icebp fwait mov lahf popq (bad) fimul mov rex.WXB mov jp pop retq je rcll cmp rex.X adc fisttpl cmp mov fildll fisttp push mov rex.WB cmp sbb fmul (bad) mov mov mov (bad) sub cmp retq fucomp jo (bad) mov jae rex mov rex.WB rex add test out movabs outsb sub mov sub jle cltd sub mov pop sub mov or outsb jmpq sbb es fisttp stos jl stos jne adc pop rex.X rex.WRX jae loop rex.WXB push jnp mov fbld rcll and rex.W stc sahf cmp es xchg sub cmp cmp jge mov repz (bad) cld cmp pop rex.WRXB jrcxz (bad) pop fsubs xorl int mov (bad) fs (bad) in (bad) ja sbb add and in xchg and mov imull rex.WRX mov lock rex.WXB mov mov (bad) (bad) and mov in pop sub xor int3 xor fisttp push movsl (bad) lret jge sti std (bad) adc fsubl xor adc xchg je xchg rex.RXB add jbe jg movabs (bad) popfq (bad) stos iret and mov (bad) int sub jbe (bad) (bad) sarl lods out loopne,pt and (bad) sahf jb mov rex.WRX push jb rex.WB (bad) insb pushq fsts fnsave outsl gs (bad) out push int3 pushfq nop mov in mov (bad) data16 xchg (bad) mov mov pushfq sbb scas insb shrl repz adc cmp push mov fstps out rex.RXB rex.RB scas movabs sub mov xlat add mov cmp (bad) data16 xchg data16 cmpsb mov movabs pop clc js pop jp rex.WR (bad) mov mov adc or cmp in in (bad) adc mov rex.X paddq leaveq outsl mov jns rex.WXB adc add enterq ds popfq fucom or iret push repnz movabs or xor lret retq packuswb push (bad) hlt (bad) test (bad) or out fildll outsl negl addl rex.WXB imul stos hlt push test ss (bad) out or leaveq adcb sbb sbb fisttpl cli loopne and push rex.RB rex.WRX rex.WRXB cmpsl sub rex.WR loop mov xchg sar rex.RXB jle cwtl js xor decl movabs sbb fildll rex pop (bad) jo (bad) callq movsb scas movabs xchg mov jae (bad) add adc (bad) popq vpinsrw adc xor push lret fstpl cmp pop mov xchg jrcxz,pn fisttpl (bad) out rex.WX stos rex.WX rex.RX rex.WRXB cwtl (bad) mov adc (bad) (bad) (bad) (bad) int3 (bad) rex.WR pop and movsl mov cmc or or cmpl mov mov clc std cmp sub (bad) adc cmp (bad) xor jl lret jmpq mov adc add jmp pop clts fs cmp out out (bad) sbb adcl scas mov retq movabs out mov mov leaveq lret and sub cmp jle shrl add jp in mov rex.W jno jmpq (bad) pop pslld xor push outsb add in lret fstpl (bad) sub pop rex.RXB fist adc xor and mov imul (bad) pop retq fwait adcb or rcpps adcb (bad) push pushq lret lea rex pushq sbb movsb sbb xlat adc rex (bad) ja cmp pop cld rex.R sbb cmc add ds rex.WRB sub sarb sbb (bad) insl rex.RX rex.WR rex cs callq adc adc repz (bad) jne negb xor sub stos push adcl (bad) xchg fdivs cmc fidivrl ds pop or sarl shrb add rex.WXB sub stos jle (bad) imulb lret xchg js (bad) xor cmp xlat add (bad) mov lahf icebp enterq (bad) fstl in popfq lret add cmp jmp fs (bad) outsb jns (bad) cmp retq pop retq rex.XB int3 ja test cmp out in callq jb push test imul insl mov fs pop cli xor add sub adc sub (bad) adc (bad) sbb lret push (bad) es in mov mov pushq rex.WRB sub pushq (bad) hlt rex.WRXB sahf xchg sbb (bad) push pop (bad) rex.WR in (bad) cmp iret cld xchg cmp (bad) pushfq movabs cmp push mov push test int (bad) mov xor sar scas (bad) sub sbb cmp clc loopne movsl rex.WB mov callq rex.XB and movabs and fwait mov sbbl and (bad) xchg loop mov add xchg mov (bad) (bad) rex.XB jne stc (bad) movsb push test mov cmc insl rex.WRX fmul pop imul mov repnz adc popfq pop rex (bad) adc insl jne in in jge mov and (bad) nop jp fcmovnu xor enterq add or (bad) or lahf sbb (bad) leaveq rex.R rex.WXB adc add (bad) or and sbb xchg adc cmp (bad) sbb jge scas pop out mov (bad) (bad) scas adc mov xchg scas and add test xor sub and (bad) or xor pop add sbb fld mov cmp bnd mov (bad) mov rex.WX hlt sbb (bad) (bad) xchg xchg xor rex.WRB (bad) pop xlat mov (bad) sub cltd add cwtl mov pushq jmpq mov movsb jp movabs or rorl in (bad) fsubrs (bad) and in out (bad) mov jp xchg mov mov stc movslq adc shr fdiv xor rex.WRB (bad) add (bad) push callq (bad) adc pushfq fildll sub fmull push (bad) mov lea loopne mov xchg sarb xor (bad) xchg xchg movabs sub add or (bad) push rcr loopne cmp add jne fildl lock subl add mov xchg decl rex.X adc repnz xorl fiadd stos push popfq (bad) xchg (bad) (bad) fcoms pushq jl movabs add jb cmp adc mov test mov jns (bad) loopne adc loopne xchg push rex.WRB xchg mov xchg ja sbb js cltd and enterq (bad) rex.X je nop rclb mov xor sbb mov sub (bad) cmc movslq (bad) hlt lods adc adc xor sub rex.RX pop (bad) fwait mov pop in jae fcomps sub (bad) push fwait (bad) rex.WRB xor xlat adc lret adc int3 in xchg (bad) sbb popq (bad) (bad) sub mov loop,pt cld xor jae loop pop rex.WRXB movabs sub xchg lret cwtl xchg int3 rcrl adc cmp sub lret (bad) (bad) out stos test push in js lods pop (bad) idivb push mov mov mov cmp lea jge stc mov mov gs retq rex.WRX xor jle mov test outsb rex.WX repnz and mov xor (bad) (bad) (bad) (bad) xchg lret xorb jns cmpsb push jl in cmp rex mov in hlt (bad) rcrl js pushq xchg hlt imul and xchg js test cmpsb pop cs stc or ficom xor push rex.WRXB mov or adc lods adc fs lahf rex.RB je rex.WRB jnp mov pop int sub push sub orl cltd mov and adc int rex.RXB (bad) sbb (bad) int fdivrs movabs rex.WX rex.WB rex.WXB int3 fimul retq sub cmpsb scas (bad) insb ds rex.WB mov rex.R sbb rex.RX pop xor loop mov cld (bad) mov data16 rex.X pushq mov fstpt ja or sbb jl idivb or cli cmp mov cmp or rex.WR jns xchg mov retq mov push sbb lret rex repz xor add or in movabs imul (bad) mov xorl (bad) mov iret mov movsl adc jge xor (bad) (bad) (bad) (bad) pushfq xchg rex.RXB adc push sub cmp movsb movabs jle divb jrcxz insb rex.W leaveq fwait movsl mov (bad) xor mov cmp mov movslq (bad) mov fnstcw leaveq sub lret xorb subb jp sbb mov lahf cmp cmpsl iret in movabs sub in pop rex.WB imul xchg sub sub jge (bad) (bad) sub or rex.WRXB hlt mov xor scas pushfq in js xor add test jae jne sub movabs jl sbb mov (bad) xor pop rorb sbb in xchg jo jnp (bad) adc hlt xchg and pop sbb adc jae xor add push fimull andl cmp and pushq (bad) popfq (bad) pushq mov pop sbb sub cmpsl jmp rex fdivl adc jl or je (bad) and push (bad) xchg movsl adc or subl adc stos int3 movabs mov jl mov outsl (bad) sbb jg fbld imul xor mov loop shrb cmp jns mov in push cmc lock sti insb and (bad) decb lods movabs (bad) (bad) dec pop add repnz (bad) rex.RXB popfq lods movabs cmp xor (bad) add nop enterq or push int3 movabs sbb imul adc sbb test adc clc adc setb sar mov sbb sub btc neg mov clc bt sub stc pushq jl bt cmp jmpq mov and fmuls add mov stos mov mov or mov jo xor fsts (bad) out sar out stc jrcxz adcl (bad) lock imul rex.B int sub or mov movsb cltd (bad) xchg cmp int sbb and movabs xchg xor insl xorl sar (bad) (bad) decb (bad) (bad) (bad) (bad) callq test xor pop pop (bad) push movabs jg loopne rex.B xor adc out jmpq out or (bad) enterq std mov mov rex.WX add movabs jrcxz xchg test (bad) (bad) cmp jg ja (bad) in ficompl (bad) out mov int3 movsb and enterq (bad) xlat jl in and add mov or sub sub rex (bad) sbb fnop add fstl (bad) mov (bad) fbstp rex.W and pushq cltd (bad) add sbb pushq jl loopne retq iret rex.WXB stos jmp jg rolb imul rex.WXB (bad) or cmp rex.WRXB sbb mov retq mov add or ss (bad) (bad) (bad) sti sahf (bad) js jge (bad) (bad) (bad) jge (bad) jmpq movabs (bad) cli insl (bad) (bad) (bad) (bad) std cltd rex.WR (bad) (bad) sub rex.WX stos retq sbb and rcrb icebp movabs imul insl je out or add icebp movabs xchg and lock sbb mov push (bad) rol sbb cmp fdivr cwtl pushq cwtl (bad) rex.WX sub (bad) jl adc push sub bnd sarb (bad) xor rorb popfq retq add sbb mov pop jno sbb sbb (bad) mov add (bad) fnsave (bad) (bad) nop imul mov js js cmpsl xchg out cld loope test pop cwtl pop (bad) mov test mov jp mov xchg sbb (bad) (bad) decb (bad) (bad) (bad) dec xchg cmp lret (bad) xchg xor (bad) cmp add rex.RX insb rex.WX rex.W xchg mov mov (bad) and jmp rex.WR testb leaveq test rex.X push or imul (bad) mov or xlat sahf add shlb stos sarl cmc bsf sbb add mov bswap shr cmp mov cmc bt cmpb jmpq cmp mov pop iret xchg pop (bad) loop outsb pushq (bad) movabs (bad) mov jmp (bad) mov nop scas adc sbb push rex gs (bad) mov cmp (bad) sbb in lret sub popfq pop add xor movabs mov jno (bad) rex.WRXB lahf mov push sbb adc (bad) cmp (bad) (bad) outsl fs cmp scas outsl (bad) (bad) (bad) sti jns rex.X (bad) (bad) (bad) pop and mov mov movsl pop or (bad) (bad) (bad) (bad) fstps mov jg cs (bad) rex.XB sbbl loop add (bad) pop out fstpt sbbl sti nop out rex.W add mov (bad) pushq rex.WR or sbb fdivrs rex.RB int lea xlat movsb adc rex.WXB pushq jb mov pop cmp lret loop and mov mov pushfq fwait (bad) (bad) mov rex rex.R rex.WR es xchg (bad) (bad) (bad) (bad) (bad) lods (bad) adc sbb sbb gs mov lret pop and (bad) mov cli rex.WX rex.RX jmpq stc (bad) mov js insl sti lock mov xchg mov movabs cmp and lahf test leaveq sbb fbstp or (bad) je in (bad) sub int3 rex.WRXB sbb rex.B pushq fwait nop lret and fisttpll (bad) shlb push and (bad) fild cld fnstenv add rcl (bad) rex.WRXB jbe imul fsubrl pop ljmp mov addr32 xor mov adc pop xor push cmp lret (bad) (bad) jg lods mov fbstp (bad) jns loop rex.W shrb pushfq rex.B rex.WRB add add or cmp cs sarb fs xor mov add mov sbb xor lock pop mov (bad) xor mov rex.RB rex.WR mov add xchg mov jne sub xor movabs pop xchg data16 jp xor test xchg js pushfq adc (bad) push es mov jl push scas in sbb sub (bad) movslq mov in (bad) je and fs sti (bad) xchg imul in (bad) jo pushq movsl cmp imul jne adc mov lret jmp sti (bad) adc lea in cmc (bad) push rex.W lretq (bad) (bad) (bad) sti (bad) (bad) add (bad) (bad) (bad) (bad) mov (bad) cld movabs cmp (bad) adc stos xor test mov xchg std movabs insb enterq (bad) test sarb ljmp in mov (bad) pushq insl cli ss fidivr mov or jmpq movabs fcmovb mov adc nop rex.B adc jns mov pop mov sub test mov mov sub xor cmp (bad) mov jle jne cmp movabs xor mov test mov mov (bad) sbb mov and in fnstenv (bad) (bad) (bad) sti jb pop cli (bad) (bad) (bad) (bad) (bad) push mov xor mov add in (bad) (bad) (bad) (bad) callq test pslld insb or clc jns or sub andb (bad) ds popq fistpll movsl add (bad) callq lea (bad) (bad) mov (bad) rex.WRXB pushfq je jae clc cmp jmpq sahf fnstcw sahf cmp (bad) sbb sbb retq (bad) mov rex.X fnsave rex.R cmp add push jrcxz xor jmpq xchg hlt cltd add sbb fwait insl xchg cmp (bad) shr (bad) jne es sub rex.R push movabs mov (bad) (bad) xor cmc jl push fidivl add sti pop out rex.RXB fwait (bad) mov (bad) xchg rex.RX int or sbb xchg and mov and adc (bad) add push add sbb fnsave (bad) (bad) (bad) (bad) cwtl jne cmp ss (bad) (bad) (bad) decb (bad) (bad) (bad) incl fs cli push xchg (bad) rex.WRX lahf push cli or outsl xchg cmc xchg (bad) data16 xchg mov pop outsl lret adc movabs bswap movzbl mov btc sar sub test sbb data16 mulb lods out mov test clc sub stc jmpq xchg add (bad) adc insl adc pop rex test (bad) rcl cmp movl gs cli fistpll xor lods xchg push imul cmc mov mov sbb or mov or sub (bad) popfq insl imul jno xchg leaveq rex.R enterq rex.RXB popfq insb pop sbb out adc js iret mov push (bad) (bad) (bad) decb sbb repz test decl rex.W add (bad) jrcxz int fwait rorb jp out rex.WX movabs lock out sub (bad) cmp mov (bad) add (bad) negb rex.WRXB rex.WX xor fisubr mov push movabs pop mov mov jmp repz repz ss scas (bad) (bad) push (bad) xchg rex.WRX outsl pop test (bad) ficoml popfq or in and (bad) data16 loope test adc (bad) callq cmc sahf rcrb mov jns jmp jns retq jge sbb adc (bad) mov sbb lods adcl data16 xchg and rex.X adc push icebp ss (bad) rex.WRXB sub or in rex.WRB and adc cli sbb insl addr32 out rcrl sub push ds ror fisttp imul (bad) sbb mov and cmpsl mov rex test or xchg cld sub and jle rex.WR jb retq jns push ds push (bad) adc (bad) (bad) std or add (bad) (bad) (bad) std rex.WRX cmp cli or sbb rex.WRXB mov mov and in fisttpll cmc popfq and sub add or test fisub jbe xchg jg pop enterq fisub and (bad) shr mov (bad) mov and (bad) callq rex.WB rex.WRB mov adc (bad) sarb (bad) cmp (bad) in lea ja pop adc jmpq je cmc cmp cmp jo je cmc test test cmp jmpq rex.WB test mov jp and subl rex.B nop rex.XB mov cltd xor mov xchg outsl cmp jae flds and fcmovnu movsb lret (bad) lods add cmp push jp,pn (bad) or movabs rex.WB (bad) (bad) stc mov (bad) (bad) cld imul sbb loop insb retq sub addl sar (bad) (bad) rex.WRX pop insb movsl mov subl rex.W (bad) mov fnsave scas mulb adc jb in jrcxz (bad) rex.XB test and movabs jge out sarl rex.WRX rex.RB fucomip out push test rex.R (bad) gs lret (bad) movabs mov shrl sahf (bad) adc mov lea (bad) sbb mov add vaddsubps rex.WB jb or push insb adc cwtl mov (bad) mov faddl mov or addr32 (bad) (bad) lret pushfq pop cmpsb mov iret iret (bad) xor (bad) (bad) (bad) std lods (bad) rcll stos retq cwtl rorl jp xchg sub jns add jmp or (bad) push xlat (bad) int3 push xchg addr32 sub pushq push in lea fwait js rex.WB sub (bad) jns fiaddl or fwait jrcxz rex.RB cmc mov out cmpl (bad) test adc and fs clc popfq mov (bad) out pushq rex.WRX add rex.R rex.RX jle adc jae (bad) xlat movzwl mov andl push mov xor adc test sub xchg mov imul add test cmp sbb sub push (bad) stos rex.WRB add int jns outsl imul rex.W adc rex.RX (bad) pushq divl outsl push mov (bad) decb (bad) (bad) (bad) (bad) cmc sbb cs ds (bad) jmpq rex movslq add jp rex.WRX adc mov clc mov mov sti (bad) xor add sahf mov out cmc push in mov jbe cmp rex.WX iret outsl movsb cld cwtl lock mov xchg jmpq cmp stos popfq mov adc jmpq lea mov movsbw mov bswap movzwl movzbw lea bswap movsbw bswap mov jmpq jae ror jmpq jmpq setae dec add mov jmpq stc bt bt or jmpq stos cmpsb and int3 lods lahf rex.W jne push xor out sbb and rex.R std xchg in out mov icebp adc in rex.B rex.W lret jbe fucomip shlb or lock nop rex.WXB repnz pop jbe rex.R (bad) (bad) pop xchg sbb out or pop (bad) pop xor es adc add leaveq or (bad) jbe lock (bad) (bad) sti int3 (bad) js movabs mov mov jp repz mov add add sub add cs cmp rex.WXB xor rex.X jnp jae cltd mov insl lret sti pushq (bad) fs add push (bad) (bad) mov int pop imul mov movabs popfq mov add test adc bt jbe bt bt sub jmpq adc fstpt shrl xor (bad) mov std out (bad) mov and (bad) lea pushq (bad) (bad) repz fmull icebp test movabs pushq fdivr imull sub mov or pop rex.R sbb ficomp test xor (bad) (bad) (bad) (bad) adc movabs cmp add mov (bad) (bad) callq mov jge fadds scas mov loop fnsave test popfq sti (bad) test jrcxz leaveq movabs sbb je adc adc cmpsb je setb mov jmpq jne xor xor bts cmc mov stc not setnp neg add sub dec add sbb mov bt test jmpq or xchg or nop cs or jo jnp ja int stc mov sbb push pushfq sbb insb (bad) mov cmp jnp lahf rex.WRXB add movsl and test (bad) xchg rex.WRXB jl jae (bad) pushq (bad) mov (bad) test loop clc adc stos (bad) push xchg mov xchg mov push rex.RX cld int3 shll cmpsl and jne sbb pop cmp adc sti mov pop xor (bad) (bad) (bad) decb fisubl (bad) xlat add fdivrs sbb add push jo jnp lods push xchg sbb nop rex.WRB sub mov sub mov or cli pop (bad) jae test roll mov std xchg in nop mov hlt mov sbb rcr (bad) sub mov sti mov and movabs mov (bad) rex.X jle je jo enterq lock mov imul jle loope rex.RB jle scas (bad) rex in retq stos rex.WB (bad) push in lods pushq jmpq (bad) xor (bad) (bad) (bad) sti lret rex.WXB loop (bad) (bad) (bad) (bad) stos gs lods add cld or retq mov (bad) leaveq fmull add outsb or and in (bad) pop jle ja movabs mov xchg mov ds std movabs xor scas (bad) (bad) mov pushq jp vpshufd (bad) je mov sbb xchg adc rex.RX push (bad) xor and xchg mov (bad) (bad) (bad) negb (bad) rex.RXB push mov mov retq hlt scas and cli out lock add cmp movabs adc rex.XB (bad) (bad) (bad) sti fiadd (bad) (bad) (bad) mov push push sub (bad) retq rex.WR add add xor (bad) clc xchg cs in xchg clc movabs subl sub nop cld pushq and js jo jae int int hlt stos adc out sbb (bad) outsl (bad) mov sbb loope retq sar in sbb and in pop in xchg sbb iret in movabs rex.RXB sub movabs cmp rex.WRX shrl jbe (bad) cmc pop rex.WRXB mov mov jge clc in repnz add pop jge (bad) (bad) (bad) ljmp icebp or (bad) sbb mov gs movsl leaveq (bad) adc je gs lods std (bad) and jbe pushq (bad) cmc lret (bad) lahf mov movabs push rex.B mov adc sbb in out mov mov sbb (bad) jbe cmp pop rex.RX pop imul in jmp cmc outsl js int3 fnsave lea in flds jge add xlat (bad) cltd push pop sub rex.WX rex pushq pushq pop or and movabs (bad) (bad) std mov in rex.X repz add (bad) (bad) jle xchg imul pop rex.WRX adc test in adc (bad) out rex (bad) (bad) int mov xor int (bad) js sub outsb retq xor repz or xor sti (bad) out (bad) pop xor xor movsb (bad) add xor iret add js xor or pop xor mov pop icebp js cmp cmpl rex.WRB in (bad) ss movslq cmp pop jmp fldenv mov ss addr32 (bad) jmp (bad) ja lret (bad) jno cmp (bad) jge cmp (bad) in repz jae jae xchg push rex.XB mov jno xchg (bad) movsl xchg jge cmp scas (bad) jnp xor out (bad) callq out clc repnz stc jmp rex.WB js (bad) outsl pushq lahf outsl rclb enterq xor cmp cmp pop push (bad) (bad) (bad) and rol fs cmp jg ds jne cmp jns mov popfq pop (bad) mov rex.WX (bad) ja (bad) lods jbe cmp insl test cmp pop and xorb cmpb mov test xor cmpsb nop enterq (bad) or rex.RX jae xchg leaveq sahf (bad) pop rorb mov retq lods mov xchg (bad) xchg (bad) adc pop xor (bad) push out fbld jge cmp fidivr xor (bad) incb repnz movsb rex.B in (bad) (bad) (bad) rex.WRXB push mov (bad) lcall (bad) insl xchg je test rex addr32 add test rex.X rex.X rex.WRXB and (bad) or int3 loopne jae mov rcll (bad) gs (bad) jo xchg andb orb fiaddl and (bad) mov jl jmp xchg add lahf int repnz pop retq out ds (bad) leaveq or sbb adc (bad) (bad) mov cmp or imul loopne sbb xlat pushq mov (bad) stc adc test mov jmpq je jmpq jmpq jne gs xor fs insb add or add test add jmpq je lea jmpq cmp mov sbb outsl rex.WRXB imul out rex.WB adc add test std xchg xchg (bad) mov in fistpll xor rex.WX stc (bad) mov int3 sub hlt (bad) xchg or (bad) movabs rex cs jb rex.RXB loop jne icebp pushq pushq mov lcall jle rex.WX jl callq (bad) std (bad) xchg (bad) lock rex.RXB fcmovb fcoms (bad) pushq adc sbb mov and data16 add add or (bad) add sbb cmpsb mov (bad) sarb cld push (bad) (bad) lret test cmp stos int3 add outsl or pushfq add jns add mov and (bad) (bad) rex.WRX jmpq add push pushq xor rex.WRX gs add (bad) cmc rol jbe callq cmp cmc jmpq bt test bt sub jmpq ffreep cmpsb xor xor rex.RX lock movabs cmp push fstl jne icebp mov fildll mov mov xchg push add sbb cs push pop movabs rex.RB or nop and sub fwait mov repz push stos xorb ficom (bad) xchg rex.XB out cmp (bad) (bad) sti in out rex.X (bad) (bad) (bad) dec and je add out rex.WB sbb jmp (bad) add add rex.WRB lods addl pop (bad) lret (bad) outsl pop or sbb xor mulb cmp (bad) xchg jmpq outsl iret pop fistl cmp mov mov and ficompl adc rolb (bad) cli add jrcxz callq (bad) adc ja popfq lret add (bad) xor push push movsl and movsb pop push nop movb xchg scas sbb sbb cmp sarl lods mov bnd pushfq fnstcw (bad) adc pop mov ds add adc xor movslq rcll (bad) cld pushfq andb (bad) (bad) (bad) (bad) jnp mov mov scas (bad) sbb retq (bad) testb je imul jge retq insl and sub insl retq (bad) rex.WRXB (bad) sbb gs cmc enterq int3 pop xor add add jns,pn test ja outsb and xchg mov fs (bad) rex.W cmpsb stos mov repnz nop mov mov cmc ja gs mov add (bad) mov xor mov and mov (bad) (bad) (bad) jmpq or mov and xchg rex.X out out adc push jl cmpsb sbb (bad) pop pop sub mov pop (bad) (bad) test (bad) clc (bad) mov or (bad) mov jrcxz (bad) lret outsl leaveq data16 insl xchg loope and xchg mov movslq outsl shll (bad) (bad) (bad) sti adc lods imul hlt adc (bad) (bad) mov jns and mov jl mov mov or movabs test out and outsb (bad) jge mov xchg mov add mov and jo rex.XB rex.WR (bad) mov or add jno (bad) movsl int rex.WRB outsb in rex.WRX imul mov scas cmpl fwait xchg js (bad) in adc cld sbb lods pop push cmp xchg sar xor and mov pop xor jmp mov (bad) iret add lret in mov or xchg int3 add (bad) test mov (bad) lock scas and (bad) cmp out (bad) rex.WB pop test cmpsl jl (bad) fisttp jmpq (bad) (bad) rex.WR movabs cli (bad) (bad) jo (bad) rex mov rex.X pop mov mov (bad) push (bad) cmp in sub lock jnp lods (bad) (bad) (bad) (bad) rclb cmpsl (bad) (bad) leaveq insb pop cmp lods (bad) fiadd add add bnd pop cmp cltd movabs leaveq or and jns mov nop sti (bad) movslq insb scas lret mov (bad) pop out pop adc xchg rex.WXB add jne mov and or adc cmc clc jmpq sar add bswap adc not shld shr inc test ror ror mov rcl add jmpq xchg jne imul decb (bad) ja test cmp sub mov (bad) push mov rex.WXB cmp pushq lahf (bad) (bad) adc adc or cmpsb lret and pop sub cltd sub iret js cltd xchg movsl and stos adc bnd jb outsl sar (bad) cld in mov ljmp rex.WXB out push rep pop cmp fimull jns pop xor (bad) pushfq mov rex.X js xchg mov insb mov xor icebp jne sub pushq imul mov add add jnp pop retq movsl ds mov pop rex.RX int enterq es mov cmp xchg add imul (bad) fidivrl push clc punpcklwd rex.B and in (bad) mov and shr (bad) fistpl lahf adc popfq (bad) add mov mov rclb movslq mov adc movabs iret out test xchg mov and and shrb in insb rex.XB lahf (bad) and jno (bad) movl (bad) mov rex.WXB cs cmp hlt adc mov add mov mov fcos (bad) (bad) decb (bad) (bad) (bad) pushq int3 add (bad) movabs pop cmc cmpsb pop nop es rex.WX rex.WRXB or add (bad) and push xchg add (bad) adc sbb (bad) and sub (bad) mov xchg rex.X nop (bad) pop mov (bad) mov movabs jo fsubrs loope cs rex.RX or in jnp ds cli movabs adc loope sahf mov popfq iret lcall repnz leaveq (bad) lahf sarl mov (bad) out xchg rex.WRXB mov pushfq imul and hlt in hlt pop rex.WRB sbb add and fimul cmpsb mul in rex.WRXB in iret push repnz scas rol imul out test pop leaveq nop mov jmp (bad) (bad) ss (bad) (bad) (bad) je nop jno outsb pop xchg (bad) (bad) (bad) decb (bad) (bad) (bad) pushq fiaddl jrcxz xor sub sti movabs pushfq mov jp xchg sub movabs (bad) adc rex in rex.WRX shrl xchg fdivrl test mov ja mov or pop mov (bad) adc mov adc retq lret sub jb movabs (bad) rex.WRXB rex.XB (bad) ss mov cmp pop nop push adc movabs (bad) ds xchg jnp lret jmp push xchg mov (bad) mov (bad) (bad) (bad) decb cmp (bad) push cvtpi2ps (bad) rex.WB mov out (bad) mov movsl (bad) int3 lods add jmpq or loopne out out xchg repnz movslq movabs add cmp adc rolb pop cmp xchg mov scas lahf sbb out stc out lock movsl (bad) out adc mov jg mov push xor cltd jns sbb imul movabs xor jnp jg sub xchg cmpl callq (bad) mov cmc std push (bad) addr32 xchg xchg rex.RXB cmp (bad) retq adc adc fistpll ja,pn icebp xchg rex.X repnz cmpsb leaveq (bad) (bad) (bad) std or movsb jmp (bad) (bad) std rex.WRX lock lods pushfq iret fnsave add add or (bad) cmc (bad) jrcxz rex.X xor jne mov retq or jmp imul or xchg jne rol lods and (bad) mov mov pop add enterq loope (bad) mov push xor test or mov mov sub sbb js jmpq (bad) pop (bad) out callq scas vmovaps test leaveq cli test cli cld fnop or or or jrcxz js lea pop jg cmpsl xchg (bad) fsub add sub (bad) adc rex.RB fs sbb nop int3 outsb xor rex.X idiv (bad) (bad) std rex.RXB pushq (bad) sub pop (bad) jo jmp push out xchg ljmp add sub stos movslq add cmpsb and mov rex.WR xchg pop mov push add cld and jg add add or sub push adc push fimul sub or add rol xlat retq adc and or pop mov icebp mov movabs clc test movb clc test jmpq out not adc and hlt jne negb rex.WB lret jl xchg sti in movabs xor icebp sbb push mov loop xor loopne adc (bad) sub test adc ffree testl push (bad) adc movslq (bad) movslq pushfq rex.WR and shlb int movsb lea callq sti test (bad) (bad) sar (bad) (bad) incb rex.W shlb add cmp out adc xor mov cmp lock (bad) rex.WB (bad) add rex.XB xchg add stos mov cmp xorl xor lods cs fistpll and rex.RXB mov sub pop nop mov xchg jbe add mov (bad) adc in icebp xchg xor mov mov cltd and mov adcl mov add mov mov stos push (bad) (bad) rex.RX es cmp cs add imul mov outsl sub cmp adc mov test (bad) cmpsl cmp sahf xchg (bad) test pushq sub rex.WXB xor add cmp xor (bad) (bad) cld sub or and or rolb xchg (bad) movsl testb leaveq rex retq xchg test (bad) enterq roll add add pop fist in xchg ja (bad) fstl adc je insl fisttp adc nop lahf lahf (bad) mov xlat jle out lods mov (bad) push and (bad) xchg mov push icebp loop leaveq popfq stos mov sub (bad) je test test cmp cmp jmpq js jg jbe xor adc (bad) scas (bad) in push push xchg sbb or imul and or xchg and push jge popfq rex.WXB idiv repnz movabs test sub rex.RB out mov mov xlat and cmp cmpsl sbb xchg cmc loope (bad) (bad) (bad) cli (bad) mov (bad) cmp (bad) (bad) std mov and roll xorl scas and vmovhpd (bad) sahf xor sub or (bad) (bad) (bad) ljmp sbb in mov cltd jle add mov or nop mov mov mov cmc add sub mov or cmp int repz adc jno (bad) pop je movsb jmpq fiadd (bad) (bad) and loopne leaveq rorb rex.WXB or xlat punpcklwd movabs lret and push (bad) in (bad) jo mov (bad) adc cmpsb (bad) xchg leaveq stc (bad) pushfq sti xlat xchg decb rex.X (bad) rex.WB lock push sbb (bad) (bad) jge mov repnz cld adc adc pop sub xrelease imul pushfq pop cmp xor je cli (bad) movsb mov scas add sub punpcklbw (bad) (bad) sti fcmovu push imul (bad) (bad) (bad) mov add fidivrl jl (bad) mov mov add cmp cmp sub mov lods (bad) cs out stos adc rex.RXB or gs rex.RXB (bad) jl pop ss cmp push adc xor mov add xchg popfq mov jmpq cs rex.WRX rex.WRXB std xchg sub in out cli cli movabs sarl (bad) shrl adc (bad) in and or adc (bad) and cwtl jmpq (bad) adc lretq push stos adc and mov jae (bad) sbb andl lock lods rcll leaveq scas mov jl in loopne and rclb or adc jg sbb (bad) (bad) (bad) std or in (bad) (bad) (bad) std (bad) xchg (bad) push or mov in stos jle add add mov fsub (bad) rex.RX test repnz cmp lret test out (bad) mov mov movabs xor fisubrl popfq mov cs xchg mov xor push rex.W fscale popq sbb outsl ror xor movabs add loop adc loopne lock icebp jae cmp jb add fdivrs fs rex.WRXB add pushfq lods lea sub test shll (bad) pop idivb (bad) sbb pushq leaveq es jle std (bad) (bad) (bad) sti out sbb adc dec xor sub cltd push add (bad) movabs pop (bad) lahf nop mov sbb fstl pop lretw movsb adc xchg add add add cmp and in rex.RX pop push test cmp (bad) add cmp jae (bad) or rex.WRXB mov (bad) add jp vpermt2d sbb testb test or xchg (bad) (bad) jo int3 rcl (bad) (bad) jo (bad) movabs push push je rex.RXB ficomp ffreep lock rex.W xorl or cltd outsb data16 divb (bad) pop rex.XB clc pop sbb loopne negl in sub sti mov cmpsb movb add sbb mov sahf (bad) (bad) (bad) cld adc (bad) (bad) (bad) (bad) hlt fmuls jae stc pop (bad) mov push cmpl (bad) add mov cld test sarb fdivrl cld imul add cmovbe (bad) lods pop andl rex.WX jl sub (bad) (bad) (bad) rorl sbb rex.RX scas xchg sbbl adc or xchg push add mov xlat leaveq mov xor jg add mov adc jne shr jmpq stos jmpq dec cmc bt clc jmpq (bad) cld out xchg rex.R mov (bad) (bad) sbb rex.RX xchg (bad) leaveq in adc push movabs outsb movabs leaveq (bad) jnp xchg scas lret lods sbb repz or cmp sub add sbb leaveq cmpsl and jb sahf std jo insl shlb test movabs xor (bad) pop (bad) or (bad) (bad) (bad) sti test (bad) (bad) (bad) decb loopne jae jns add add or sub iret fs rex shr (bad) js notb jns shrb rex.WX adc push stc in mov adc push movabs jmpq adc ja mov (bad) rex.X (bad) mov out jg and (bad) mov rex.RB rex.WRXB pop mov xor or rex.WX xchg (bad) xchg mov cmp add push mov cmp test mov enterq in cmpsb add xchg rex.X (bad) (bad) (bad) cli repnz mov ja (bad) (bad) std rorb (bad) (bad) mov scas leaveq xchg faddl mov xchg jno (bad) cmp cwtl leaveq imul sbb jg pushq jmpq rcrl xor sbb ljmp add cmc gs jae rex.R rex.WR (bad) rex.X cmp mov out ja and jno jb mov mov fs rex.WRXB mov pop loop add (bad) cmc or shrb loope pop rcrb lret imul cmp xorl pop or fildll std add jmpq rex.WX or push (bad) cmp (bad) lea bnd (bad) int mov rex.RXB sub stos cwtl cmc ss movsl jb lret xlat sub rex.WRB out and cmp (bad) cld (bad) addr32 insb (bad) (bad) (bad) (bad) out test add out in (bad) add push add add data16 (bad) repz scas sbb or movabs and packsswb rex.X add std movsb punpckldq imul (bad) mov test rex.WRB adc cwtl addr32 mov andl fisttpl or cltd add sub fisttp movabs rex.WRX mov loopne (bad) out lods sub fmull js (bad) sub fwait rex.XB fst (bad) lret xlat or adc scas (bad) (bad) add rex.RB (bad) (bad) (bad) cli iret add (bad) (bad) std scas rex.R mov sub jrcxz mov cmc jnp (bad) (bad) pushfq sarl or xchg rex.X leaveq movabs (bad) cltd stc mov jae scas pushq lods mov insb fiadd and test push fisttpll (bad) mov fmulp movsb andb lea rex.X test test push btc jmpq jmpq insl rex.XB or push test jns mov stos rex (bad) ja rex.RX jle pop lahf es mov lea fnop (bad) ds xchg rex.XB stos (bad) and (bad) add jb icebp int hlt (bad) stc (bad) pop cmpsb sub ja sbb (bad) mov clc test test adc xchg lahf (bad) jg or callq test push fwait rcll cmpsl sbb pushfq (bad) jo rex.WXB sbb jne leaveq imul cld adc jae (bad) (bad) (bad) (bad) (bad) repz pop cmp shrl xor add add jno jl adc jns add xchg mov (bad) std cmc sahf std push (bad) push xor mov (bad) js stos cmpl movabs pushq pushfq mov adc ds sub xor icebp flds xlat sub imul (bad) jno mov or (bad) or enterq sub mov and rcll (bad) (bad) mov xor push (bad) pop rex.R xchg pop imul and retq scas iret rex.R sarb cld rex.W ficom xor mov (bad) (bad) adc mov mov add (bad) mov stc push (bad) jge mov xchg por xorb mov movabs rex.R and xor cltd sarb rex.WRX xchg in cli mov rex.WX (bad) xor movsb adc xchg clc and cmp std push loopne cmpsb cmc (bad) pop imul adc push cmp pop mulb add adc mov jmpq jae bsr btr mov btc movzbw data16 (bad) ror mov movsbl mov test xor cmp jmpq je bt test test add jmpq add add add add add add mov sbb add add or add or add fsubs sbb clc and add rcrb add add movabs add add add add add add add add (bad) add sbb xor sbb rex.WR sbb pop sbb (bad) sbb outsb sbb mov sbb test outsb jae (bad) insb insb add fs gs rex.XB jne je jb gs push je imul gs movslq jb add outsl js rex.R insb add jb imul add outsl mov xchg xor fs push clc stc enterq rex.X rex.RX sub add loope mov push ja adc xchg xchg rex.X xchg cmpsb sub (bad) or cmp sarb movabs pushq icebp decb mov rex.WRXB loopne int (bad) rex.WR xlat int3 fwait xor (bad) xchg hlt pop out (bad) jle mov jno (bad) mov repnz cli (bad) add sbb fnstcw ljmp jmp faddl (bad) (bad) mov (bad) adcb mov rex.WXB xor (bad) (bad) mov (bad) sub pop sub popfq repz xor rex.R sbb (bad) xchg rcl adc rcrl (bad) rex.RX fdivl test stos mov pop (bad) outsl adc mov test pushq (bad) rex.RXB jmpq out pushfq jnp stc ss callq fidivl lahf adc cwtl lahf mov sub and jp movl or jo sti push and xchg cli or popfq mov jl mov adc sub in movabs jrcxz test xorl cmp add sbb mov pop movslq (bad) adc xchg push insb (bad) pop movabs jl (bad) pop push test sahf pushq and cmpsb insl and jp (bad) pop std sub insl mov ja add fwait cwtl jne xchg movsb push stos movsb fnstsw push (bad) jo mov ss jmpq xchg iret loop (bad) sbb scas lar sub adc rex.WB jle sbb ss xchg xor rex.WR adc cmp (bad) in rex.X (bad) (bad) jns xchg retq (bad) and or (bad) push lods jrcxz cmp (bad) movsb jb xchg shll test mov pop ror rex.WRX sub shr or in and cmp shlb repnz jmp movslq or rex.WXB rex.W sti repz xlat ficompl outsl jmp pop hlt mov xchg rex.WXB rex.WR mov (bad) mov mov xor test and mov fldenv jge pop sbb jno add xor outsb adc rex.WR rex.B (bad) notl fisub (bad) xor in xlat cmc fs stos adc lea (bad) (bad) (bad) xor (bad) and in jnp test and shr iret movsb jg (bad) push (bad) or fs sti (bad) push cltd sarb xchg rex.WRX rex.WRX jae adc (bad) pop jbe sarl cmp retq mov rex.B int3 movabs mov loopne pushq (bad) clc mov sub xor clc pop stos insb fwait sbb out fimul and lock repz rex.XB pop (bad) and mov (bad) mov out scas (bad) (bad) cld rex.WX (bad) xchg jno pop jb callq cmp movsb and (bad) mov pop roll scas (bad) mov lods pop loopne xchg cmp cmpsb pushq (bad) fsubl mov and push or movabs stc ja mov rcll sbb and sub (bad) leaveq (bad) push out mov rcrb (bad) xor hlt pushq pop clc xchg (bad) lods gs xchg movabs push or xor jl sarl testl push mov rex.RXB movabs int3 jl lock add rex.WRB pop rorl sarb in (bad) cli rex.R and (bad) fbstp adc mull leaveq or xor mov lahf adc pop cli sub outsl (bad) lret rex pop (bad) popfq (bad) jae clc xor (bad) data16 mov fmuls xor (bad) jae sti sbb (bad) jno retq or (bad) rex.WR leaveq scas es pop sub addr32 fmull test mov pop lret lret sbb lods sbb and (bad) enterq xchg pop adc lahf sub add pop jno push rex.RB rcrb rex.RB (bad) adc loop movabs in pop pop loope mov (bad) movslq sbb jle movslq xor cltd pop mov imull (bad) adc and loop andl fcmovne in sarb push enterq (bad) mov add cmp notl pop movabs and test scas out mov lock fcoms and (bad) (bad) xchg lods xchg mov jmp mov iret jae (bad) neg fwait lods jmpq pcmpgtd sub mov loopne pop cmp sbb cmp push jb repnz pushq push pop sbb retq lods mov (bad) mov shr imul in lahf sbb retq imul icebp or je push jo fmull cld repz cmp iret and add addr32 jae rorl sub cs push pushfq imulb mov data16 (bad) (bad) cwtl negb int3 shlb std xchg movabs xor (bad) orl (bad) femms icebp repz or (bad) (bad) fdivs sarl lods js pushq fimul rex.R pop movsb rex.XB and push sub movsb jno adc retq (bad) leaveq rex.WRB test xlat (bad) jmpq and jp enterq movabs and movabs and mov (bad) pminub xchg out lock (bad) sub popfq and xor push jbe (bad) je scas sub fidivrl scas cmp pushq mov fisttpl pop sahf pop push imul sub gs in pop stos retq int3 add incw cmpsl (bad) out ja jbe (bad) mov add rex.WB or lahf fstpl jmpw (bad) sti mov fisttp roll js int3 in and push mov or (bad) fs pop movabs (bad) fadds rex.WRB in rcrl rex.WXB stc pop mov xor icebp rex.WR jmp add adc mov fistpll and sbb rex.WXB rex.RX (bad) cltd (bad) add (bad) cmp js (bad) repnz jne je mov sbb stos and jrcxz enterq (bad) cmp jmp mov cmpsl mov sub sti adc (bad) cmp rolb orps mov addr32 gs stos movsb (bad) (bad) (bad) lock adc lret mov mov fildll mov rcrl cmp insb mov jns (bad) out cmpsl jnp jb jo xor cmp iret in xor movsb fstpt (bad) mov loopne movabs (bad) jmp pop adc jno jne (bad) int jns cmp imull sub outsl in imul gs mov adc fcmovne (bad) (bad) jns sub vcvtsi2ssl xchg push callq jle jb rex.WB (bad) jno mov push sub adc in icebp push cmp jge (bad) (bad) xchg or fisubr adc mov and sbb adc (bad) rex.RB mov frstor push ds lods fnop or outsl lods adc insb xchg out sarb (bad) jg jg rex.WX jno outsb int sbb mov cli fimul shrb xchg mov cmpsb jmpq pop rex rex.X nop jge mov mov pop rex.RXB mov lahf int or cmp mov push outsb xor rex.WRB rex.RXB loope (bad) imul test (bad) jns sub lea (bad) sbb adc xchg sbb rex.RXB rex.WX rex.R rex.WR clc sub cmp pushfq pop (bad) nop pop sbb stos pop and cmp push out jns mov jge cmp rex.WR out jns jns (bad) adc or xchg lods fsubr (bad) movabs xchg jg mov jo imul lock rex.WRX repz (bad) repz mov (bad) cld out pushq outsl adc cmp sti mov and (bad) scas hlt cmp mov in (bad) callq je xor cmpl fisubl lock pop (bad) cmc or mov rex.X rex.W mov rex.W (bad) jmp pushq cmpb lea ficomp pop cmp (bad) push xchg jmp insl jns sub sub push xchg adc sbb add cmp cmp (bad) (bad) pop int3 in mov xlat rolb rex.R rex.RB gs (bad) (bad) ja (bad) and int3 xor xor idivl movabs data16 xchg (bad) cmc test out ds outsb test xchg repnz test sbb testb int3 adc loopne mov cmp lods (bad) lret mov neg pushq addl fdivp mov xor (bad) (bad) rex.R xor adc push adc fnsaves rex.WRX or movabs cmp cmp xor rex.XB fisttpl hlt mov rex.W (bad) stc push xchg (bad) ss mov cmp sub repnz add (bad) rex.RB gs enterq stc (bad) fmul or push sbb pop lock push mov (bad) sbb and xor push xorl repnz mov xchg test xchg sub mov (bad) jmp rex.WRB vunpcklps push push push enterq pop (bad) mov push (bad) jb jnp iret insl test pop and sti rex.X xor xchg nop rex.RB movsl (bad) mov rex.WRXB mov mov rex.WX mov outsl in test ja clc out and psadbw (bad) rex.RB out jl mov and fstl (bad) push jmpq mov es xchg rorb (bad) xchg repnz out scas stos and push outsb insb outsl (bad) fs gs rex.XB jne je jb gs push je imul js jb js pop insb insb add imul cs insb add add add popfq mov jmpq jne ror clc stc mov test cmp cmp cmp ja ja movzbl bswap pop bswap not jmpq jmpq jmpq pushq out jns and imul adc jbe scas lahf out jb xchg fsubrs xor rex.WRX ds (bad) shrl icebp jb ja jle (bad) lock xor je push (bad) jmpq jae cmp rex.WRX (bad) (bad) xor sub and jo out (bad) std or push rex test in out jg stos jne xor sti sub gs (bad) pop shll lock rex.WR jl adc jo jge rex.RX jbe movslq ja cmpsb repnz add sbbb fisttpl push cmc rex.W push pop insl (bad) hlt std movd jne pushq xlat rex.RB (bad) (bad) sti push rex.RX scas mov rex.W jbe leaveq clc sbbl jle fistpll mov jbe jg and negb pop xor sbb fisubl jp pop repnz jg scas (bad) and push sub rex.WR and jne nop movabs push pushfq rex.RX (bad) jl cltd xchg jne mov pop jle out clc scas mov ja sub loope sub popfq rex.XB insb adcb sub (bad) sbb scas xor rex.RX (bad) lock jle out jo push (bad) rcl divl subl fdivrs jne outsl rex.WX mov fwait rex.WXB cmp sub mov fst (bad) rex.WRX rex.WX or jo pop in mov xchg outsb (bad) outsb lods movsb cmp pop sub scas imul sbb out fwait mov repz mull pop (bad) xchg or fwait movsb (bad) sbb out (bad) vmovaps insl decl rex.WX mov push jg cli scas and test rcr or xchg (bad) xor sahf stc (bad) subb or jle popfq xchg sub jne (bad) mov jne loop stos iret lods pop and pop loope out clc jnp jg mov rex.RXB cmp imul rol clc (bad) mov ds and ds outsl (bad) push mov scas popq fwait jae jne cli xor sub ja jno xor (bad) cld (bad) std xlat xchg pop mov mov pushq mov ja jbe jle loope jg rex.X jbe imul cmc jp incb mov or pushq fsubrs (bad) and xchg scas cmp or xor rex.RX rclb rcrl xor (bad) mov movb pop mov xor push sub addr32 rcrl cmp rex.W mull cmpb (bad) cmc je (bad) sbb mov mov (bad) pushq or fs pushq mov jno scas pop cld (bad) sbb cltd (bad) mov (bad) cwtl (bad) sub cs (bad) mov (bad) idiv (bad) pushq (bad) xor cmp jl enterq cli data16 cmp fstpt test xor (bad) fdivrs out outsl add sti mov sarl mov stos lods sub rex.RB sahf sub mov mov retq cmc mov sti pop jo scas push pop sub push in sbb cmp fistpll pop lock (bad) imul xchg (bad) outsl (bad) mov sub pushfq xor lahf ljmp adc fisttp jrcxz rex.WRB pushq mov or stc add callq (bad) xchg xchg (bad) (bad) (bad) sbb xchg scas push in sti cmp lahf pop xchg jge incl xchg fist and (bad) in xor sti rex.WX xor (bad) fistpll repnz insl ss iret outsl push repnz ja outsl pop outsl cmp pop mov jle idivl cmpl (bad) (bad) mov lahf jo andl (bad) mov es jp jg stc xchg (bad) mov xor out rex.WRXB in xor adc insb pop insl enterq inc out movsb push std imul stc pop cmp jo jo scas mov xor (bad) pop push and mov (bad) outsb in rex.RX cmp rex.WX add (bad) in rex.WRX rex.X scas (bad) pop and lods stc xor (bad) clc lahf stc js mov (bad) movabs xchg stos jmp ds push data16 (bad) scas insb adc stc xchg notl pop cmpsb push add cmc imul rex.W pop rex.WR repz cmp out sub (bad) lcall and xchg outsl idiv fisubrl push xor loop mov add fildll jrcxz xchg (bad) repz (bad) std jo xchg (bad) add (bad) mov (bad) jge push negb mov rex.WX jo scas pop rex lahf pop xor (bad) and int3 cmp (bad) adc mov fidivrl imul bnd jne cmp rex.WX cmp or add stc adc stc mov rex.WX jae sti jl and div sbb js push cmc mov ds sub imul rex.WR rex.WRX xlat cmp data16 jne rex.WRX cmp (bad) jnp out cmpsl (bad) mov jl outsl and xor pop jne out outsl sti subl fisubrl mov xchg jbe (bad) adc or hlt addr32 std or testl or clc mov mov rex.WR jrcxz (bad) jo rex.WX repz mov testb sub pushq cmp popfq push insl js (bad) callq in scas mov (bad) (bad) pop in pop mov out adcl movsl mov insl stos (bad) xchg cmc sbb (bad) cmp rex.WRXB (bad) (bad) in pop scas fiaddl push sti mov or (bad) (bad) ja mov (bad) adc hlt ficomp jnp cmpsl out callq fwait cs loopne and jnp (bad) pop or mov (bad) scas mov mov stos (bad) or xor jo stos sarl repz sbb fs fs iret jrcxz jno (bad) (bad) in (bad) pop pop xor movsb cmp (bad) (bad) out std (bad) fst ja gs add sbb xchg mov sbb rolb (bad) (bad) sbb jno mov addr32 jo lods (bad) pop mov jno (bad) (bad) divl jge mov ds cmp jb mov lods scas xchg repz jle rcrl stc outsb cmp sub adc ds js outsb (bad) insl adc mov xchg pop imul cs add retq jo scas test adc fildll in cmp rex.XB rex.WRX push sub cmpsb ds scas iret (bad) nop jno add cmp enterq add rcll jnp stos stos (bad) callq xchg xchg and lret neg jo xor fidiv mov lahf (bad) dec xchg fldenv xchg pushq sub pop lret xor ffreep rex loope (bad) xchg cmp mov stos repz jge notb (bad) in (bad) fildl mov mov sti pop mov movsl movsb movsl scas jne pop outsl mov pushfq je out pop xchg and lods fstps loopne orl mov (bad) xor scas scas fcoml push push sub xchg xchg fildll in mov (bad) (bad) (bad) jl jle cmc mov outsl (bad) jle mov jg xor push xlat ds jns ja (bad) sbb or or int (bad) and mov jl pushfq lahf cld out mov (bad) cmc push js mov add jo (bad) jp mov enterq jle adc rex.RXB neg rex cmpsl add mov fidivr mov je pop sub (bad) pop js scas fs cmpsb mov stos pop iret mov ss jp mov scas mov (bad) (bad) mov (bad) (bad) (bad) adc cmpsb (bad) rex.X mov (bad) rex.WX and cwtl push and scas xor xchg out (bad) pop cmp xchg mov rex.RXB (bad) xor add jp repnz nop int3 push (bad) mov pop jle pop push and notl outsl mov (bad) cli in gs mov xchg rex (bad) mov jmpq (bad) sti fwait je xchg js jp (bad) jg data16 xor rex.RX sbbl adc outsl rex.W cltd xchg xlat push jp xchg rex.RX xor test sub scas retq jo (bad) test ja (bad) (bad) xor (bad) fwait xor sbb mov jno add rex.R (bad) imul cmp (bad) (bad) ds mov (bad) lahf shrb in mov xor retq rex rex jb lods pop cld cs jo pop inc imul xchg rex.WRX scas sub mov notl in (bad) ja insl icebp jo cli gs xor sbb shrb stc clc ds rex rex sub sbbl adc gs jo pop outsl mov mov sub cmp cli cltd pop cmp mov xchg iret rex.WRXB insl (bad) push out pop out mov jp add (bad) enterq loopne xchg (bad) fidivr fidivr or (bad) in sbb lahf outsl (bad) pop rex.X cmp out mov stc rex.W fcomi or icebp (bad) ficompl (bad) cmc mov imul mov std fst je es scas push xor jo mov stc cs fnstcw pop mov cmpsl mov mov test divl (bad) jge (bad) (bad) mov (bad) ficomp notb rex.WR push jmp jne rex.XB es mov fwait (bad) pop loope (bad) mov or (bad) (bad) (bad) (bad) add inc jne (bad) mov mov add rcll push test mov test lret punpckhwd fcmovnbe fnstenv fsubrp jnp (bad) mov jns (bad) jle mov (bad) and fdivr shll stos popfq jl in jmp je add mov fisubrl rex.WX rex.WX scas or rex.WRX imul jp xchg jmpq adc and jae cmpsl loopne and es retq mul enterq rcrb and int3 fsts fsubrl (bad) in lock std icebp mulb jns xchg ja rcr (bad) shrb mov clc lods add sbb test repnz popfq jmp ds sub rcll js cmpsb icebp cltd cmp test fidiv movabs mov out mov callq scas enterq (bad) (bad) loop mov pushq lods jg loope gs outsl sbb cmp fisttpl jmpq xchg xchg push sbb repz and cltd rex.WRB lock (bad) cmc mov in fsubrs rex.WRX (bad) push and or xchg outsb cmpsb xchg cld lea pushq sbb andb push movl pop pop jp cmp (bad) insl in xchg ja push imul jae loop xchg mov mov rex andl sti jl out mov lret jrcxz or callq and ss (bad) pop xchg es ds sti (bad) hlt notl out fnstsw pushq (bad) mov mov and (bad) jnp,pt in push mov sbb ja int3 stos pop cmp rex.RXB sub fsubrl cli (bad) fisttpl sbb stos cmc (bad) (bad) (bad) jp fwait retq mov (bad) mov callq mov (bad) icebp pop and push cld (bad) xor gs cmpsb (bad) sbb hlt repz scas sbb xchg cmpsb xor (bad) (bad) jp es out outsb in jns (bad) jnp scas jo jnp jb ss in push or out xchg lcall (bad) and push insl xchg jo (bad) fisubl (bad) or loop cmpl imul scas sbb mov (bad) data16 in imul (bad) jo cltd fidivr lcall (bad) mov jo loop,pt sti mov mov and mov rex.WRX lret jne xchg (bad) int adc mov cltd add pop sar jg,pn cmpsb pop rex.XB (bad) cmc push out in int (bad) pop lea jnp in out sti jg jb (bad) (bad) xchg je repnz (bad) (bad) js push sub leaveq cmc or (bad) in movsl clc cmc sbb (bad) and in pop sbb rex.WRB jp mov sbb fidivr scas fsubl push (bad) cld fwait mov rex mov icebp rex.RXB or xchg ds mov fwait cmp jno lahf sbb jne add cmp xor rex.WX jge pop mov out jne sub pop ja and enterq mov xchg xor or (bad) mov rex.XB icebp retq iret xchg add mov nop cmp push sub rex.WXB fisubrl sub add leaveq push add (bad) scas xchg callq lods xchg clc and xor (bad) scas jbe fwait pop xor (bad) adc in (bad) (bad) ja loopne push ficom sbb (bad) outsl xchg enterq imul roll pop pop mov xchg (bad) mov loopne and out mov ss or or std (bad) not outsb scas pop cwtl xorb (bad) ja int fs and sahf jo mov (bad) clc add (bad) fild popq mov mov sbb rex.WRX insl js or outsb pushfq cwtl adc sub enterq adc pushq in xchg cwtl rex.X rex.X sbb cmp retq adc adc scas jns sahf xchg xor popfq roll cmp (bad) icebp pop xor adc cwtl mulb loop stos lods mov jg andl in scas leaveq mov (bad) repnz rex.WRX push mov adc or jmpq jg adc iret pop stc mov mov imul and xchg jo jbe xor notl cmp pop xchg rex sbb xchg pop and rex.WXB rex rex.WRB retq jne or cmp (bad) hlt (bad) (bad) jg insb (bad) pushfq mov add movslq in cmp gs movabs rex.B xor jmp rcr movabs cmp sub (bad) xor cmp lcall enterq and xor mov out fstpt and fldenv scas cmp pushfq (bad) lcall lret outsl loopne movslq stc test and test jmpq (bad) movslq pop mov mov jne repz and fsub pop cmpsl test cli jbe neg sar (bad) pop (bad) (bad) (bad) test (bad) or stc mov gs rex.WRB jae insl in (bad) jns sub rex.WB ja xor mov cmpsb jne jge std (bad) or callq xchg mov jle (bad) (bad) xor cwtl callq gs (bad) ficom sbb in (bad) (bad) xor rex.RB push sub (bad) cmp imul adc cmp scas pop stos fstpl mov xchg rex.W rex.WX sub retq xchg sub xchg cmp (bad) rex.WRB cmpsl pop rex.WRX out xchg pop (bad) mov or out in sbb pop mov out (bad) rex.WX pop out (bad) mov (bad) (bad) (bad) test pushq sub rex.R adc gs jnp push ja sbb std (bad) jl push rex.RB rex.RX (bad) test mov rcll ds add outsl pop testl push lcall fwait sarl vpaddsb callq xchg rex.WR stc insb jne push (bad) add pop (bad) (bad) cmp int3 (bad) xor push sub lods rex.WX push cmc xlat (bad) in cmp push ror ds (bad) cwtl cmp in sub outsl mov jns cli in test out mov push mov int jbe mov (bad) iret fidivr sti jns out scas cwtl int (bad) rex xchg cmp mov cmp pop rcll cwtl cmp (bad) (bad) stc (bad) fidivr fidiv adc iret mov and cwtl cmp rex.WX rex.WRB fdivr push and insl cmp fsts sbb scas int3 add rcr xorl (bad) xor rex.WRX pop out (bad) scas jb xchg xchg data16 mov insl push sbb sbb test pop pushq (bad) or mov repnz out movsb pushq cmp rex.WRB rex.WRX out idivl (bad) cmpsl in imull scas sbb adc lahf es (bad) fwait ss std notl jmpq rex.WRXB cmc rex.WRXB xorl insb push jbe and rex.WRB sbb jl std or pop xchg cmp outsb int3 stc mov insl shrl jle scas mov andb adc insl loopne mov sub mov jp sbb cmp (bad) (bad) in (bad) outsl or xor loope (bad) xchg addr32 add retq fchs mov or (bad) imul (bad) or jo pop pop mov rex.WXB test sahf in imul (bad) outsl fstpl leaveq push (bad) retq (bad) rcll xor rol jne cmp in pop pushfq mov (bad) imul in and cmpsl (bad) sti jl callq rex.XB icebp fist cmp lock rex.WRX adc pop notb xchg rolb jmpq cmpsl pop or jmpq jg jmpq (bad) fbstp addr32 cmp notl movsb (bad) jmp imul (bad) rex cs fistpll xlat fistp jp cmp jo jp rex xor fildll addr32 pushq (bad) pop lea int3 lret push xchg lock in insl fistpl (bad) divl sbb nop loope sti cmp hlt add or push (bad) cmc cs (bad) mov (bad) jle rex.RXB outsb pop (bad) mov and sub xor pop jg jp ds movslq scas jl add fisubr clc jnp fsubrl mov pushfq gs jb rex.W push sub cmc leaveq sub xchg stc je lret xchg jge test or mov fidivr pop in insl movsb jrcxz mov sahf jp (bad) xor adc add or adc out negl jb (bad) sbb add pop mov pop rex.WX jle jnp and leaveq (bad) iret mov mov cli xchg movslq shrb test pushfq mov (bad) xchg scas adc (bad) pop out rex.WRX pushq or fdivp pop rex.RX or mov and cs jl mov jno push fistpl pop (bad) jmp jp,pt push clc xlat pandn xlat insb mov pushfq sub cmc out fldt callq cmp cmpsl mov cmpsl movsl mul cld add jno xorb jnp cmc mov imul cli outsl mov xlat imul sahf movabs mov sub loope add insb iret pop jnp cmp stc (bad) rcrb xchg scas pop push xchg cmp mov leaveq adc or mov lods sub (bad) fcmovu jp xchg jbe ds iret mov jb jle push pop stc adc (bad) mov adc (bad) sbb push or ja pop sbb (bad) pop mov (bad) test scas pop mov iret (bad) mov out and adc jle (bad) cli xchg (bad) (bad) and sti mov mov (bad) pop cmp pop fldt rex.WRX popfq (bad) jle and cli pushq jb and (bad) mov (bad) sti or js gs and stos add push pop pop push mov jrcxz es clc in je xor lock sub mov xchg (bad) (bad) pop adc loope,pn cmp cmp pop mov (bad) or loopne adc rex.RXB imul cwtl (bad) cmpsl cmp in lock mov pop add and (bad) xor mov rex.RX movsl xchg mov and outsb in outsl fidivr repnz rex.X movabs fist fstpt rex.RXB xchg js scas (bad) std jl loopne jp cmp (bad) push or xchg insb cmp add (bad) xor xor cli rex.WRXB jle scas push cmp rex jp sub lahf xlat xchg push cmp push rcrl stc sbb add lods xchg xchg mov js (bad) jns cmp (bad) jl jg mov lods sbb (bad) pushq mov push pushq (bad) sbb out pushq scas sbb xchg insb jnp ja lret int in shrl sbb popq cmc (bad) jg sbb outsb push and test xorl adc mov xor xchg repnz ficompl out (bad) bnd cs retq cmc mov jbe movabs outsl jp andps movabs in stc fwait mov cmp push sbb test mov jmp addr32 callq push lea adc addr32 jo (bad) testb xchg and js xor jmpq int3 callq mov lret clc fistpll adc cmp adc (bad) xchg or xchg adc push push and lahf fs cmp push pushq (bad) testl idivl mov callq mov jbe (bad) fwait loop rex.WRXB (bad) or jbe icebp outsb or sti (bad) movabs sarl pop outsl pop xchg jmp hlt rex.WRXB pop stc mov lret mov leaveq fwait scas js fwait iret js (bad) in pop pop or in mov punpckhbw retq (bad) sbb xchg push or popfq int3 (bad) jnp sub cld testb scas xchg out jl fwait mov cli (bad) out ds jmpq xor add js outsb push iret mov xchg (bad) jo lahf push jns movsb fistpll (bad) stos cli int mov pop mov jmpq int adc jle scas test xchg xchg pop cli add insl mov (bad) test ja push sub jbe and iret pop lods jp jle rex.WRXB sbb pop jge sub in xor (bad) add in lret jo jp scas hlt (bad) mov retq sti xchg cmpb mov or jmp addr32 cmp pop (bad) (bad) (bad) (bad) fildl xor pop test std xor jrcxz jle iret (bad) jg jmpq xor jo push rex.RX in iret (bad) pop lock ud1 cs rex (bad) mov insl lods xchg cmc xor xchg cld pushfq rex.WR movsb lods (bad) ficompl (bad) mov pop popfq sub mov std setnp icebp repnz (bad) js add add push movabs cmpsb iret out jbe loope retq cmp push add scas fucom fs out ss pop adc mull (bad) adc jmpq leaveq or rex.WXB mov movslq movsb push sub iret lods stc clc out adc sbb es lret mov and rex.RX (bad) scas retq rex.WRB sbb callq add pop cli xchg (bad) cmp jmp xor lahf sub add jmp push rex.WRX rex mov sub push stc (bad) xchg rclb and mov xor movabs adc scas push lret imul incb jl pop rex.RB push rex.RB jb scas mov push jl out rex.WXB jne or sbb decl nop fldt in jae cltd (bad) retq fs rex.WX rex rex.WRB mov pushq xchg imul mov add fcoml (bad) loope (bad) (bad) xlat sti (bad) pop add out (bad) fwait mov cmp std jne rex.X in mov (bad) sub jrcxz jge loop rex xor jg rex.WRX rex.XB jnp push nop stc (bad) cmp mov rex.X es lock rex.WXB and rex.WB and ja push inc leaveq retq xor sahf xor (bad) mov mov pop (bad) data16 scas stos (bad) stos add push scas sub stos stc in out mov (bad) callq data16 pop add adc xor sbb cli enterq std loop rex adc outsl (bad) adc mov cmp hlt jmp movslq (bad) (bad) pop push pop negl push test out in and iret in idivl fmull lods fildll and rex.WRX fs add and fcoml mov mov (bad) out icebp cld mov (bad) pop neg callq imul fcmove sub add out (bad) pop (bad) mov push cmpsl jbe adc push pop cmp sub adc out rex.WXB fnsave mov rex.X (bad) iret rex push icebp push jo sahf outsb (bad) movabs xor (bad) mov movsb jne pop out (bad) fs lods fistpll popfq add jo xchg outsl cltd jno sbb jbe std (bad) in (bad) rex.WRB outsl (bad) scas movabs add scas scas mov pop out add stc in xchg cmp adc scas and in push notl add out insb xor jle (bad) jg xchg and pushq push (bad) xor rex.WRXB xor xchg xlat mov std add sti test rex.WRB or (bad) sti (bad) fisttpl jp mov sub scas sub fisttpll cmp pushq xorb cmc jp push ss jne retq or insl (bad) mov idivl mov or iret imull ss rex.R add mov mov rex.B xchg sbb test popfq xlat std out xchg outsb cld and shlb and gs fsubrp ds lret test lret mov gs jmpq sti (bad) (bad) (bad) rex.WXB mulb (bad) pop push (bad) ja (bad) sbb cmp fisttpl sub sbb es repnz (bad) jbe (bad) mov cmp push mov pushq fistpll jmp scas imul pop (bad) fildll out xlat mov jbe sti cmp (bad) (bad) leaveq shrl iret sub ja fcoms imul pop jmp (bad) lock (bad) (bad) pop jo lsl callq (bad) (bad) mov rex.RB (bad) (bad) rex.WXB stos rex.WB (bad) (bad) pushfq notl jo movslq gs pop movslq jb imul jle (bad) fldt (bad) and jbe (bad) and int3 xchg notl jne mov jmp mov rex rex.WXB fist mov shlb pop faddl sti test cwtl rorl jno repz xchg shrl pop jno or jg fwait adc xor (bad) rex in insl cltd sbb lahf js (bad) repz cmc (bad) cmp test add (bad) jge (bad) and xchg mov iret fs imul test jae push in mov pop (bad) mov cmpsl insl rex.R ja (bad) out mov test lods fildll jmp in jrcxz pop test (bad) xchg xchg js es pop jae (bad) (bad) (bad) fstps scas insb sub pushq mov pop out addr32 je xchg pushq push addr32 xchg es mov lret (bad) pop fptan cmpl rex.WRX ja lods fnstsw (bad) cmp add jbe (bad) sbb cmpsl mov mov (bad) (bad) cmp insb jle cmpsl xchg in (bad) stc out std scas and jo adc push mov movabs (bad) xchg fildl (bad) adc jp stos or in insb fisub cmpsb (bad) out insb outsl (bad) cmpsl add in cmp (bad) mov jg (bad) sub sarb outsl negb xor rex.RX frstor lods iret jnp (bad) jl mov (bad) fs lahf xchg cmp rex.WRXB outsl xchg out out movq fildl (bad) jmpq testl sbb iret (bad) rex.WRX push (bad) std fucomp ss pop insl gs cmp and pop imul es (bad) rex.WR pop ds (bad) scas pop adc pop mov ja lock insl rex.RX enterq fsubs idivl jrcxz es mov out movslq (bad) (bad) outsb jl iret scas push pop (bad) ror ja fsts mov (bad) fistpl jb callq dec and sti xchg xor lahf cmpsb rex.XB xor xchg (bad) scas lock mov (bad) mov scas (bad) adc (bad) push or jge pop xor xchg out lods mov test sub rex.RXB fldl movslq pop pop test cmp pop cld fildll adc sbb add cmp outsl jg out int3 (bad) (bad) out xchg mov out mov movabs shr loope movabs cmc or mov (bad) (bad) push adc or test scas mov rex.RXB rex.RX jg scas pop scas addl mov push test rex.WRB retq pop sub nop (bad) js lods mov nop (bad) hlt data16 rex.B lahf (bad) out adc add fildl test (bad) mov sbb leaveq fucomip pop sub or pandn rex scas xor and fbld xlat mov out xchg push pop imul imul sbb and jae pushq js (bad) or repnz jp je jo data16 (bad) jbe mov fsts pop (bad) (bad) in cltd (bad) mov in pop iret mov push add movabs or sub mull imul jno and (bad) ror and cmp int3 rex.XB mov test (bad) (bad) xor xchg pushq push lock pop (bad) mov pop (bad) (bad) je xor (bad) (bad) sbb fwait stc mov (bad) pop out (bad) sbb xchg mov (bad) imull rex.WRXB jne (bad) jb (bad) pop pushq movabs repz xor rep adc jl rex.XB fwait sbb scas xlat push mov (bad) outsb jb mov sbb push sti out (bad) sbb or out mov rex.XB popfq jl (bad) stos scas rex.X jo sbb clc pop and jl xlat mov mov js jmpq push insb sti mov jl scas int3 jne gs push retq (bad) fldenv or or jnp iret retq cmp rex.WXB scas rex.RXB jmp rex.R mov mov or mov (bad) pop rex.B test rex.RB xchg adc (bad) sub xchg sbb rex rex.XB rex.WRXB jmpq pop jg out (bad) std rolb movsb rex.WR jns adc leaveq nop adc enterq mov fnop std (bad) xchg movabs adcl rex.RB or xlat (bad) mov scas xchg cmp cmpsl movabs pop lods or rex.XB mov xchg fldenv data16 rex.WRX pop add jle rex.RXB enterq (bad) sti lods (bad) cmp jp scas xor movsl push fistl (bad) mov push ljmp iret mov leaveq jge jmpq repnz sti fidiv pop add xchg insl popfq jbe rex.W or xlat pop fs or mov adcl scas cli cmpsl in jl out in adc std jge out mov rex.WRXB mov and push je xchg jns xchg or mov sti mov cmp (bad) movabs xor movabs idivl outsb (bad) cmpsl xor rex.RB xor adc add imul leaveq jp mov data16 and pushq loop mov fldl sub (bad) jae pop test icebp cmpsl and xor fucomip and push imull lods sbb pop pop xchg (bad) adc pop divps gs je xchg cltd cs stos pop out mov jle or retq fldl jg retq clc lods mov cmpsl fsubp ja fdivrl sub ficomp cmp in sti push (bad) jne sarl (bad) pushq jno fisttpl and rex.X rex.WRX test sti lods sti (bad) cmp mov loopne pushq rex.X push test sub pop jge push jle mov and cmc jle adc lcall cmp rorl (bad) jg jge int (bad) and or int3 idiv xchg sbb xchg rex.WR rex.WRXB (bad) (bad) test pop rex.X sub fdivl sub push outsb pushq xchg pop pop scas rex.RX mov je (bad) jbe fbld enterq rcrl xor icebp cmc and rex.XB xor int es mov add (bad) or jne jg cmp rex repnz lret xor movsl rex data16 mov ss mov mov lods fsubs rex.RB mov (bad) pop xor and shrl out (bad) xor loope imul shr clc jo cmp adc and xchg loop rex.W jg add (bad) cmp mov sti ds pushq lock (bad) test test fstl mov in jbe repz test cmp callq sub out (bad) imul xor jae xchg test scas add mov sbb mov movabs jns js sub mov js sub in hlt cmp xchg out rex.XB and mov es jle xor and cltd pop cltd jmp nop (bad) add xor pop scas jno jle rex.WB (bad) cmc push and mov scas mov rex.B out lods cwtl adc movabs fcmovu fisttp add pop in loope xor or add sbb je xchg (bad) and int enterq pop outsb (bad) rex.X imull mov shlb or xchg outsl and and rex (bad) clc cmc or and insl loopne outsb mov jg ds rex.WR (bad) outsb cmp xor cmp ss cmc cmp jbe pop jmpq jg mov in pushq mov pop pop in lret adc lcall test rex.WRXB (bad) adc pushq (bad) rex.RX pop (bad) (bad) imul lahf mov jle fprem1 sub leaveq cmc cmp pushq rex.W jo rolb (bad) pop sub jp cmc push xchg outsb (bad) cmp scas mov pop xchg (bad) (bad) movabs mov cmpsb jns mov (bad) mov imul push ss adc jl (bad) hlt addb sub idivb lods xlat xchg push clc xchg pop pop scas callq orl icebp sub cld mov int3 xor imul (bad) or rex.RXB rolb and rcrb jns out sub hlt xchg retq mov (bad) (bad) cmp xchg icebp and pop repnz mov cmc repz mov jae cmc rex.B (bad) and repnz scas pop clc (bad) xor and stos repz rex.WX hlt mov xchg rex.WXB pop sarb rex.WRX (bad) (bad) mov mov cs addr32 or (bad) add clc cs add insb outsb rex.XB pushq rex.B repnz (bad) sbb mov rex.WRXB stc push int scas in xor pop sbb mov (bad) test pop callq outsb rex.W cld repz fldcw int3 mov rex jmp (bad) in gs push rex.W (bad) and in (bad) pop (bad) mov (bad) insl pushfq jmp rex.B fstpl iret lock jl mov sti and pushq (bad) sbb iret lea sub rex.WRX jne shll rex.X mov and insl push or push jl sbb (bad) (bad) in insb xchg sti out out es pop rex.RB lea fcompl fstl ss outsl cmp (bad) jnp (bad) ja je rex.RB (bad) push xor pop es clc mov sbb outsl in lret (bad) pop retq fistl js or pop mov cmp rex.WB mov jl (bad) cmp lahf ficomp sbb push mov sbb jnp icebp xchg cld ds sbb xor sti jle rcrq (bad) sti mov scas sbb jnp repnz out pop jp lods stc cmp or in rex (bad) rcrl cli in movabs clc (bad) jbe xlat ja rex push push mov jmpq xlat xchg shr sahf (bad) pop cmp adcl js imull shlb cmp stc xchg in out (bad) (bad) jns (bad) fs xor push mov (bad) (bad) out (bad) rex.WRX adc sahf xchg jns or lods enterq test (bad) (bad) in test ficom (bad) stc pop in cmpl and (bad) rex.X stos in fisubr scas lods rex.WXB (bad) xlat out mov shlb (bad) callq sub insb and sti jp scas stos iret cmp in (bad) pop cmp js shrl xor scas adc ds mov insb lcall mov mov pop rex.RXB rex.W push fbstp in jp rex fsubs mov notl scas rex.W cli jb stos out fildll cld shrl jno (bad) (bad) sub (bad) rex.WRXB push je xchg push xor movsb lret pop mov pop jge push test jns (bad) (bad) xchg rex.RX callq mov insl cmc mov or mov rex.WRXB jo (bad) rex.XB jmpq or cli je fisub out or mov lods idivl clc sbb decl (bad) mov fiadd push adc iret and xlat int ja cmp (bad) jg mov pop cmc rex.X out clc xor adc repz rex.RX jb or loopne insl vpsubusw push (bad) loopne outsb (bad) jbe scas test (bad) flds cmp icebp xlat jge jne cmpsb push push xchg mov pushq negl rex.WR (bad) (bad) xor (bad) (bad) jae mov cmp pop cmc enterq ja mov mov test movabs pop xchg push xor rex jg cld mov out cmpl mov rex.RX nop pushq and jp,pn jne (bad) es (bad) lods or xchg xchg callq out mov sbb rex.WRXB pop sahf in mov xlat es pop or outsb sub rex.WXB pop pushq (bad) rex.RB fs sbb insb xchg mov jnp (bad) xchg fild add out add (bad) or in pop (bad) cmp (bad) jmp mov addr32 add mov (bad) imul (bad) (bad) (bad) rex.RXB scas lock rex lods (bad) loopne insb in (bad) test movabs imul pop data16 lock jmpq rex add mov rex.RX rex.RX push jmp cmpsb test cli jp (bad) xchg pushq mov xchg cltd push cmp ja scas add insb jle insl xchg pushq rex.RXB push pop mov insb sahf test cs sti rex.WR pop lock or (bad) rex.RB movabs rex.WRB addr32 mov fstpt pop rex.RXB cmp (bad) cwtl insl sbb not push lahf (bad) xor nop cwtl push outsb pushq jg test jo push ja (bad) pop js jmpq jo repnz pop mov push js scas out (bad) cmp mov movabs movslq sub in rex.WX js mov loope pop lods rex.WR gs rsqrtps clc lods test outsb mov rex.RXB rex.B sbb sbb cmp pushq rex.WXB rex.XB jne jnp xchg cmp orl pop rex.WRX (bad) scas xor addb jne cmp outsb lock sbb cwtl mov rex.RB rex.RB push outsb (bad) pushq stos (bad) pop rex.WB mov loopne rex.WRX xchg repz retq pushq add push fist sbb test or xor gs jl fidiv rex.WR movabs sub (bad) (bad) jnp outsl pushq push fimull and pushq lea pushq add fbld in retq in push pushq mov or pushfq (bad) repnz jne leaveq (bad) repnz mov rex.RX fs imul jns pushq outsb mov jle imul jns mov xor popfq push (bad) (bad) jle in xchg repnz and nop rex.RX out (bad) mov cwtl cmp pushq lret xchg push int3 (bad) rex.W hlt imul pushfq (bad) jge rex.WX jrcxz and fdivrs cmp mov (bad) (bad) or (bad) stos mov pushq hlt jl insb xor rex.RX rex.RB sbb sbb pushq fnstsw fistpl jae (bad) in jge mov cltd jmpq sbb xchg jl or mov (bad) (bad) adc xchg jae mov jns decl (bad) lods (bad) jle pop jbe outsl pushq or and fisttpll (bad) iret jrcxz mov lods retq imul rex.RXB rex.WB xchg cmp mov (bad) gs mov (bad) (bad) mov (bad) fsubl add (bad) scas fldenv (bad) negb movabs rex.WRX rex.WRX lea insl pop imul scas pop stos fsubrp stc outsb iret rex.WRB mov or leaveq cmp mov adc fdivl psubd mov cli in jo (bad) jnp lock mov add add pop (bad) cwtl and sbb and cli (bad) ja out push int3 nop jle adc pop rex.WRX sar pop leaveq js clc cltd (bad) mov sub sahf push (bad) (bad) mov (bad) (bad) and lods lret pop notb (bad) mov (bad) mov sbbl add xlat pop push or (bad) jmpq sahf jbe rex.X rcll ss rex.WRB addr32 mov jg pop (bad) xchg popfq mov cmp rex.WXB (bad) in jmp jnp xor mov (bad) mov mov shrb sub xchg and pop pop (bad) cld loop pop mov pop pushq nop rorb fcomip (bad) (bad) decl mov sub mov jg sbb mov clc divl jg mov (bad) xchg std cs mov and test iret mov icebp jle adc pop movabs mov mov or jb rex.RB rex.RB pop jp jl lret scas xchg xchg repnz imulb orb xor jle add or divl cmp in jp scas outsl movabs jnp sarl (bad) cmp and enterq pop jg pushq adc leaveq lods xchg rcrl pop es push (bad) xor jnp (bad) mov rex (bad) cmc rex.WX jge lock test fisttpl sbb cmp imul and push (bad) insb cs sbb leaveq sbb pushfq scas (bad) (bad) sar mov fisttpl std movsl je cwtl stc push (bad) pop pushq jne and cmc or cs adc in xlat in data16 sub lahf adc cld (bad) sub rex.R int3 xor pop ss leaveq loope icebp ds out rex.WRB int3 rex.X mov rex.WRXB test repnz fbstp xchg icebp (bad) std (bad) fstpt (bad) (bad) in jno in mov test repnz cltd rex.WRB mov (bad) cwtl xchg fmul clc xchg jb scas jae xor jp xor data16 fsubs sub fisubrl mov shrb jp pop jmp jo mov test std jo jo adc rex.X rex.X sahf (bad) out or xchg pop fisub adc push frstor adc mov cli xchg add jg jne adcb fcomp lods or cld mov popfq rex.RXB test fiadd sti and pop insb jp push fildll leaveq xor mov mov outsl fist jne xchg cmp movslq fs lea retq cld (bad) jg jle xchg (bad) jns cmc mov iret lret out pushq cltd rex.X hlt mov (bad) (bad) xchg sbb insb xor jbe in sub rex.RX xchg sbbb xchg ficom (bad) test shr push rex cli pop in jns std (bad) callq and sbb sti xchg jp rex.XB rex.WX gs jge icebp (bad) jmp (bad) mov imul std xor lea fwait jnp scas add mov xor mov jno (bad) lods mov cli leaveq rex.WX xor rex.WRB adc int3 scas jbe out add xor (bad) in js outsl rorb callq insl xor adc jne loope jg jbe sarb rex.WB repz cmp int sti movabs or leaveq clc cmp (bad) icebp (bad) cmp movabs adc (bad) (bad) xor sbb mov pop xor adc scas pop push outsl (bad) loopne cmp test fidiv callq shrl add (bad) cmp sub (bad) jb (bad) ja jle dec rex.WRX enterq mov outsl out rex.WX int3 or sub stc jae mov cltd jb imul insl lods js shrl (bad) push jl (bad) mov (bad) in jb sbb sbbb idivl lahf jl test sub jb fs cli xchg mov rorl mov cmp jne cmp lods cmpsb fsubr (bad) xor sti test test imull stos or outsb test movabs (bad) leaveq push je mov stc out out add push rex fisttpll jnp,pt sahf mov ficoml jl fnstenv (bad) cmpsb outsl test rex sti outsl pop imul rex.WX in test insb cmp retq loope add fs jns jl add mov pop or (bad) in insb repnz rclb enterq pop pop imul es cli or pop (bad) cmp adc addr32 jne pop std adc rex.WX mov ss loop test jne ficoml and sub (bad) xchg jmpq mov (bad) retq sarb data16 add int es test lcall sbb lods xchg test jns (bad) js rex.R pop (bad) xor sbb cmpsl loopne and pop push test scas (bad) rex.WR mov iret mov out cli (bad) cmp test leaveq mov js int3 rex.WRX cld (bad) lret frstor loope scas cmp rex.R clc callq sbb jae lret (bad) fisubl jg callq xchg add mov punpckhwd in cld xchg jmp loopne pushq jp je pushq sahf cmc outsb rex.WRB or sub pop mov scas lahf (bad) notl cmp xlat lods xor xchg rex.WB rcll rex.WR rex.WRX mov shrb mov jbe cli rol xchg scas (bad) pop jbe mov jo addr32 pop cmp (bad) push rex.R gs xor outsl (bad) cli adc (bad) xchg adc push std stmxcsr (bad) fistp (bad) repnz push push (bad) push out rex.WRX (bad) rex imul (bad) (bad) rex.XB sub pop (bad) cmp lahf mov test push (bad) add movabs and (bad) mov and jg or ja jnp sahf cs in sbb sub sbb out ljmp (bad) pop lahf fist adc rex.W adc (bad) (bad) jmpq xchg mov pushq cmp test sarl fsubs push cli lea cmp add cwtl loope out popfq (bad) orb xchg cmpsb cmc cmp rex.WXB xchg insb sbb sti adc push jge in rep fcomi push pop or out pop fsubl adc rcrl pop out adc enterq jne outsl test movabs cltd lea adc (bad) (bad) (bad) mov mov int pushq pushq push scas (bad) jmpq xor es pop fsubs sub rex.WRX rex.R rex.RB mov mov rex.WXB xor pop insb or mov lock (bad) pop scas jb js (bad) scas shlb adc fsubrp jg mov (bad) scas xor cmp in adc psubusb (bad) es adc sahf loope scas lahf jno (bad) out imul xor (bad) pop cmpsl outsl xlat sti cmp (bad) loop pop or cmp cmpsb pushfq (bad) mov kmovw add ljmp adc lret or rex.XB sbb add scas sub adc (bad) rcrl cmp pop stc int3 lock ss jle test jbe je lock mov outsb jo mov (bad) xor and xor jrcxz mov pop test sahf sbb shrb ja movabs rolb out cld jns fwait pop (bad) mov fadd xor cmp scas ljmp sahf rex.XB std jnp (bad) fcompl jle push ss fdivs rex in (bad) rex.R xor data16 fistp pop repz and cli push es fsubl rclb lea hlt (bad) fwait insl fldl cmp (bad) lock xor jb lret (bad) (bad) test and (bad) insl rex rex.WX (bad) in pop xchg loop in movabs (bad) icebp in std adc std pop cmpsl cs jl sbb std (bad) dec jne rex cmp pop pushq (bad) sbb (bad) xor test sbb repnz hlt enterq leaveq sbb or xchg out loopne jb ficoml rclb xor mov idivb sub jns cmp int clc push mov rex.B rex.WRX addb rex.XB rex.R jb jno xor rex.B movslq jno lock bnd sbb cmp (bad) je (bad) cmp (bad) std cmpsl fwait shl mov (bad) outsb imul test xchg out adc retq cmc (bad) mov push sub rcl scas pushq (bad) mov imul xor cli fiadd je mov movabs cltd mov pop jp sub xor rex.WRB mov rex.WRXB (bad) in sti out xchg mov jp (bad) push cmpsb jbe pushq sub jle jrcxz jo mov std (bad) clc sub out mov push (bad) div push loop sti (bad) jp test sbb (bad) js xor cmp rex (bad) mov mov ficomp jle lock rex.WRB rex.RX hlt jae out and push imull addr32 jbe sub js jbe cmp rex.RX ja (bad) or xchg mov mov imul push insl pushfq int jge cmc jp (bad) xchg sahf pop pop imul js rex.XB rex.W (bad) mov xchg xchg js repz rex addr32 ss (bad) pop and xor xchg rex.WRXB add out push test adcl mov imul in mov xor rex.X (bad) pop out and jo andb mov stc js or jge pushq clc out (bad) jmp xor mov rex.WX popfq xchg sbb repnz callq or push in rex.W pop retq or and (bad) mov or (bad) jne jbe test movslq rex.WRB jmpq push jge pushq xchg rex.RX xchg jp rex.R rex.WX or (bad) cmc and lock or out jge rex.WRXB xor sarl mov (bad) scas insl adcb shrb adc rex (bad) jne pop and jo sti outsl jl (bad) mov scas push cmc jg out (bad) fbstp push repz cmp (bad) pop outsb jns (bad) (bad) and cmpl jle jbe (bad) adc mov jbe hlt sub sarb add pushfq jmpq and gs jnp jno jnp mov pushq xchg jg scas movsl jno,pt cmp (bad) lods xchg in push sub loopne rex.RX (bad) sbb imul test (bad) jmpq (bad) fisubr lods jmpq ja outsb jle or xchg (bad) rex.WB rex.WX jl scas movsb retq shlb jrcxz xchg cs leaveq push pushq int (bad) outsb shrb push pop jrcxz cld test add ss jnp xchg (bad) movabs ja jge fwait or (bad) outsb test pop (bad) rex.XB stc roll cmc and rcll rex rex mov mov rcrl (bad) (bad) gs insb xlat xchg lcall mov xchg std (bad) pushfq mov (bad) jle sbb sub and jge (bad) xlat retq (bad) movsl je jmpq retq (bad) (bad) (bad) gs insb jl or (bad) jmp leaveq cmp (bad) adcb out clc jmpq jl jmpq cmp sub clc pop movabs or xchg js add (bad) sub callq pop xchg jb pop hlt cmp pushq jne (bad) (bad) movsl push rex.WRXB mov xchg sub and mov cld jrcxz xlat lea add std movabs (bad) pushq jae addr32 sub cmc retq imul js jbe outsl sbb push pushq sbb out adc and push (bad) or sbb (bad) xchg jo in jp out sub sti rex.WXB pop lods pushq imul mov in sub xchg and xchg pushq cltd test xchg je jrcxz out jbe mov (bad) cmp stos jo movsl out (bad) sbb fdivs (bad) (bad) js (bad) adc xor mov or stc jp scas push shll insb xor jne shl sbb xchg (bad) scas pushq (bad) lret xor rex.WR (bad) movsl scas jno (bad) test cmp out jo int3 lock push js out adc (bad) imul xchg and (bad) xor js insl (bad) add (bad) fcmove mov jae fisub out (bad) mov fidivr popfq leaveq pushq mov testl mov jo sbb cmc mov jae ds add lea (bad) sub je xchg rex.XB in fnsave data16 (bad) jo cli jle scas (bad) in out rcrb cmc cli rex.RXB rex.W loope pop xchg (bad) (bad) data16 (bad) push stc clc jbe scas add ja outsl jge (bad) push stc divb scas test and (bad) callq test fldl sti (bad) fiadd testb push iret sbb (bad) or testl sbb sub (bad) insl pop rex.WRX rex.WRX cmp jne pop outsb imul pop (bad) outsb fistl mov out sbb sbb mov scas out movsl (bad) cmc xor lea rex.WR jrcxz (bad) cmp lods fiadd sbb rex.WRX xor out add lock outsb fnstenv xchg movabs jmp outsl rex.WRX jmp (bad) scas insl xchg in push imul (bad) gs (bad) jle adc jge sbb loope es fild jmp fistpll (bad) nop cmp (bad) imul adcb cmp mov rex.WB fistp movslq (bad) push ror jg cmc orl sub in ror jge xchg or (bad) sbb clc cmp js int sub movslq stc or pushq (bad) int in insl stos movabs cld adc and jl lock rex or std adc xchg push vmovupd rex.WX pushq iret leaveq ss push rcl addr32 fstl loopne lods retq rex.R imull xor mov (bad) add (bad) rex.WR ja push mulb mov rex.RB jmp pop outsb hlt pop lods (bad) xchg jle jp (bad) xchg adc mov xchg out outsb movabs (bad) cmp pop (bad) pop cli clc ss sub jmpq (bad) jp out rex.R rex test cli jnp (bad) mov (bad) or pop pop test cld rex.WX rex.XB sbb mov jo jl scas xabort (bad) sahf pop (bad) mov movsb (bad) cmp retw cmpsb and je fsubs (bad) sar jp scas or shrb mov inc mov mov (bad) xor cmc je data16 mov faddp shr (bad) xor ja (bad) rex.X mov cmp cmc mov sub push (bad) insl repz (bad) xchg push (bad) in nop rex.WRB jno mov add cmpsb (bad) sub pop js rex.X rex.WX fwait ds (bad) pop cmp sbb cld lock (bad) sub push pop mov push (bad) sti rex.B ds rex.WX rcrb ja sub or mov xchg jle xlat pop pop xchg add sbb gs (bad) std and cmp leaveq std jns (bad) pop fstl jae push mov or cli outsb scas (bad) out stos out xlat mov iret icebp es lea shrl retq test jno rex.WRX scas sub pop mov jo movsb cli (bad) cli movsb rex.RX rex.R repz scas shrl or cld mov cmp stc fld mov rex.RX (bad) scas pop and (bad) cmp test xor rorl mov jae jb in testb adc mov callq fidivr scas cmp fstpt lock in cli jnp adc add (bad) xlat rex cmpl imul rex jl (bad) and lock nop imull mov and add stos fsubs (bad) (bad) pop xchg rex.RB xchg rex.B rex.RX loop lret cltd scas jo movabs adcb testl insb mov (bad) outsb (bad) pop push xchg jg xchg cmp mov jne stos je or in gs rex jns push jo fwait jbe pushq rex (bad) scas xchg mov iret xchg adc add push rex.RXB push sub movsl es and sahf xchg nop rorl pop xchg fcmovnu (bad) cmp sbb sub push jno cmp repz stc and fsubrs icebp pop pop imul mov cmp rex.WB rex.B rex.WRX adc mov repz adc pop jns jo xor popfq scas pop test jb imul scas sbb (bad) cmp (bad) test iret jmpq and xlat rex.RB (bad) movsl cld cmp enterq test xor (bad) jle lock xchg jl mov imul (bad) rcll (bad) ficomp cmpsb mov mov adc jnp mov ja mov pop movslq and push push (bad) scas callq test negl leaveq sub sbb pop rex.X out push push stc (bad) push jne (bad) stos imulb or rex.WXB gs (bad) movabs mov mov nop out adc rex.RXB out sti retq (bad) imul mov or jno outsb scas test pop or fstps lret stos cld jp or fsubrl jmpq js xor cmp je movabs xchg rex.XB es pop outsb insl movsl lret in ljmp (bad) xorl push (bad) stos (bad) nop imul (bad) pop xlat int3 (bad) pop fstp nop in imul sub xor fisttp rex.RX push iret pop rex.RXB rep lods test xchg int jge jge adc jb adc (bad) rex.WX stos sahf cltd pushq retq outsl rex.WRX rex.WRXB gs xchg sub jb jno fcompl pop add jle insl pop sahf pop add gs (bad) (bad) (bad) (bad) pop adc js mov (bad) stc pop rex.WRB (bad) cli xor nop and sti fwait push ljmp int3 test ja insl std sahf add mov mov push rex.R lret in pushfq sub outsb jmpq cmpsl sbb ja add callq and fnstenv fisubr sbb jo pop data16 sti pop insl (bad) fdivp (bad) mov lods retq fbld fldt push mov (bad) sbb (bad) mov clc (bad) and (bad) jp mov jns retq iret xor lret movsb (bad) add loope divb iret pop pop (bad) xchg xchg mov push add xor rex.WRX data16 fsubl imull ficom cli out xor testb add loopne jp lea (bad) jg sub mov cmp jo or js (bad) push mov pop rex.WRXB test pop hlt sbb leaveq sub adcl or push adcb stos outsl and loop cmc cli xchg mov lahf adc sbb jo pushq push pop sub and out push test mov mov (bad) scas pop hlt mov fldenv (bad) and cmp outsw insl in insl scas int3 jns imul scas int3 cmp fbstp (bad) mov adc sbb (bad) jae push out (bad) out lahf ja mov adc rex.WRXB js (bad) or stc pop out rex.X mov jo add xchg insl adc in cmp rex.RB sbb (bad) loopne jrcxz xchg cs sbb fwait insb int3 in add pop jae or cmp fwait imul in cmp and out (bad) rex (bad) mov insl (bad) pop sahf sbb xchg enterq rcrb pop (bad) sbb rex.RX mov (bad) pop pop (bad) (bad) (bad) sub jno test repz jmpq mov fs xchg leaveq rcrb push rex.X rex.WRX sarb negb (bad) jo hlt sbb sbb (bad) rex.WRXB fs sbb jne scas (bad) xchg out (bad) cmc jle rex.RXB jmpq pop movabs mov and (bad) out (bad) sahf (bad) in pop (bad) int pop je je add je and fiadd cmp data16 sbb (bad) jrcxz scas in (bad) (bad) shrl push cmc jb mov (bad) xchg sti loope jmp xlat rorl xchg rex.WRX cmp enterq cwtl rex.WXB loope stc xchg rex.RX test mov or pop jne xchg (bad) rex.X (bad) (bad) xchg je (bad) loop mov jbe imul cmpsb out or jl cmp sti insb cld insl jbe or sub mov jle jl rex.WRB in ds sahf jbe jns cmp fcmovbe cmp rorl (bad) add ja lea ds outsb cmpl add jns imul cmp scas (bad) mov and push mov pop push js test (bad) out push scas movabs fcomps jp push fs stos gs mov cmpsl jrcxz cmp mov (bad) mov jb or rcr rex.WXB pushfq movhps (bad) scas movslq cmp insb pushq bnd sbb xchg retq (bad) sbb rcl (bad) mov in (bad) pushq cmp xchg rex jmp and (bad) (bad) jp sub push in mov mov jnp lahf (bad) mov mov pop xor push iret scas sub (bad) sub xor cmp nopl xor sub sub xor rex.B rex.XB (bad) mov and jle (bad) loop lods add movsl lods jl rex.R test pop (bad) fstpt (bad) jbe push rex.WRX or lods sub pop adc (bad) ja or push scas xchg fnop (bad) ja fidivr (bad) outsl callq callq sbb rex.RB fwait lods mov (bad) push out jo outsb scas xchg jl lock push cltd movabs jl fwait xchg pop jle sub lods add pushq test sbb push sti sbb mov divl insb mov mov cs movabs rex.RX gs shlb (bad) (bad) mov hlt mov jae jb push mov int jmpq jns fisttp xchg rex.RXB out fbstp mov or out push ss outsl (bad) movabs cmp xor pushq retq xor cmp sub jrcxz cmp and jmpq scas or pop jp xchg in sub rorl out in xchg rex.XB nop data16 xchg (bad) xchg xchg (bad) (bad) or test mov out sbb std adc out jmpq iret fdivl xor icebp rex.WRX lock pop mov fistl bt cld jg mov mov xchg or rex.RX lods sub rex.R pop (bad) xchg cmpsb pop sub xor xchg scas pop (bad) adc jrcxz cmp rep retq (bad) in pushq cmp jmp test add imul xchg cmc xchg sub (bad) (bad) shrl rex.RX and xchg jb (bad) sub jge adc xchg rex.R mov xorb in sbb (bad) sbb jl jle int test pushq mov push pushq int outsb or js pushfq ja sti cmp and imul fsubr sbb in and enterq add stos cmp xor (bad) rcll push jmp cmp xchg push cmpsb sbb rex.WXB push js mov ds (bad) rex.WRXB xchg rex.X xor outsl in (bad) (bad) jle xchg insb rex.RB and mov clc (bad) (bad) pushfq stc (bad) in cli movsl xlat (bad) lock int3 flds loopne cmpsl pop insb (bad) test mov mov movabs xchg fs int out in (bad) out sti (bad) (bad) cmpsb mov jmpq xchg rex lods fnsave adc rcrb (bad) pop adc int push js and sub add stc iret out es (bad) mov (bad) jrcxz cmp (bad) (bad) lahf sbb push scas repz rex.RB retq out mov fistp std add adc (bad) cmc (bad) fldt retq fldenv retq ds icebp or (bad) loop pop (bad) out jp jmpq add scas jmpq iret sub (bad) xor cmc rex.W roll sub sub fisubr (bad) or jrcxz xchg lock imul sti (bad) mov mov xor scas pop mov (bad) out xchg mov jo mov sbb rex.RX scas pop insb pop mov mov outsb cmp retq jo (bad) out jp (bad) fldl jl (bad) rex.WRX jl (bad) rex.X jbe movslq push sbb (bad) xchg (bad) xchg enterq out pop mov sub jno vdivps cmp jnp faddl xchg idiv lods jo ss cli adc sbb out or jmpq mov rex.RB lock and insb insl (bad) repnz jp and and mov ss out push mov in push lahf sti mov in jle movabs mov xor rex.X sub xchg sbb outsl jp mov mov fmuls cld xor or cmpsl movslq lods fwait pop pop in setl adc push xor notb or and or ja scas loopne ja cmp (bad) cmpsl fildl or cld or (bad) rex lret lret scas xor rex.B ss and (bad) (bad) rex.R (bad) and xchg pushq jns sub rex.B xor (bad) cmp iret xor sub mov lahf jns popq and lods and rex.WRX mov fdivl pushq out and fstpl mov in lahf (bad) jl cltd rex.WR jmp mov insb retq rex.X gs mov mov and mov jge (bad) xchg pop popfq push pop push hlt xor (bad) rcrl insb (bad) in rex adc cmpl xor mov mov loope rex.WRX pop fdecstp sti (bad) xchg stc (bad) jl mov and movsl and jnp fistp sarl test xor fbld jp jmpq out cmp lock rex jb adc jb je rex.WRXB ss pop outsb jle (bad) rex push loopne jbe xchg movabs repnz or jnp iret jle jns sbb add retq rex movabs add shr mov xor xchg fnstcw cli cltd lahf mov (bad) and fdiv rex.RB and imul mov cmp incl pop iret sbb (bad) cmp iret lock pop cmp loope lahf js hlt (bad) mov mov sub in (bad) jne jrcxz cmp xchg outsl ss sub sbb fidivr xchg rex.WRX jno movslq test (bad) (bad) mov sub (bad) xor lahf xor imul (bad) scas in callq xchg pop fwait xor (bad) and out callq imul je rex.WRB pop xor in (bad) xchg xchg jno lahf movslq fucomi repnz rex.WRXB sbb or (bad) (bad) add je jae xchg ss (bad) fidiv sbb rex.WRXB (bad) ds fs sub clc test (bad) sarb fmuls ss int movsl in jnp pop jle xchg insb adc pop addr32 (bad) pop stos or pushq pushq (bad) jmp rex.WR sbb sarl movabs mov je (bad) fstpl mov cltd js insl lret (bad) out jp mov push (bad) jle cmp decb mov fcmovne push cmp std loope jno lods xchg movslq nop leaveq (bad) loop pop and adc sub ficom mov pop or in jo rex.RX pushq adc push orl push loopne or sti rex.WR cltd in test out out cld (bad) pop rex.WR mov add imull add jmpq data16 and outsl jmpq out pop in mov xchg (bad) sbb rex.WB xor incb out cmp cli lods cmp insl cmp rex.WR repz test (bad) in (bad) testb addr32 xor (bad) xchg (bad) fcmovnbe fidivr sbb ja xchg cli or incb jp cs (bad) adc cli loopne test rex.X push mov xor (bad) (bad) sarl (bad) cmpl jmpq mov or sbb (bad) lahf cmp rex.WR cmp faddl sbb fdivrl sub (bad) mov xchg mov (bad) push cmp iret (bad) (bad) sti dec (bad) jl mov cmp pop mov ja movsl rex.XB jno pop jno test jnp std out and mov rex.RB jrcxz fcmovnbe mov jns loopne flds cwtl mov stos loopne jne (bad) fidivr test push loope int pop mov (bad) (bad) adc jnp rex.R sbb (bad) adc rex.WX pop or adc mov rclb hlt mov stos xchg icebp lahf ja nop or sti mov mov insl push retq cli push rex.WRXB fiadd std rolb mov xor mov pop xchg negq out push sahf sahf test divl pop lods iret push cmp jb outsl (bad) testl pop outsb xchg rex lock mov rex.X jmp imul and push out sbbb or leaveq or sti (bad) ds jnp,pt rorl and xchg mov insl stos lahf sarb out mov sbb punpckhdq scas or testl mov mov pushq divl movslq ds fstpl fdivrp rcl repnz (bad) in mov sahf cltd pop (bad) rex.WR ja pop fistp rcrb jmp pop je xchg scas ffreep push loopne test loopne imul fdiv lods jo out cmp and jae sub scas sub cmp (bad) xor rclb jno vmptrld sbb popfq rex.RB pop mov push insl or lods rex.WR testl (bad) jne andb push std rex.X jo mov and movsl pop push cmpsb movabs (bad) andl scas add sub repnz lahf sub and cmpsl cmp fildl add pop lret pop adc stc movabs push retq rex.RB rorl mov decb fldl movabs (bad) pop xchg rclb (bad) jne xlat xor movsl rex.X (bad) jmp out xor lahf sti mov sbb xor (bad) add frstor test jo xor fiaddl cmp repnz (bad) movabs or cmp insb scas rex.XB cmp imul mov xchg xor (bad) mov imull sub (bad) jp mov out rex.XB test xor adc pop jge jo jnp cmpl je lods popfq pop xor js cmc callq (bad) jmpq fmul rex.RXB outsb jge rex.WX cs rex sti movabs fild sub push divb movabs mov push pushq shll mov or xorl xor sub (bad) seto movslq rex.WXB rex.XB sbb movsb stos es addr32 or rex.WR retq or movsl gs fmulp pushfq mov jae pop push mov hlt stos xchg (bad) rex.WRB rex.R xchg mov je jo outsb (bad) mov rex.WRB mov jl ds loope mov insl or repz fsubrs imul (bad) repnz pushfq (bad) (bad) addr32 jmp (bad) mov nop (bad) lahf mov rorb out push adc pop pushq (bad) addl sub fcom lods jne repz out and vshufps sbb es sahf lret callq icebp adc xchg pop xchg mov (bad) outsb pop rcrl ja jne in jp mov (bad) in xorl vpsubusw out out jp jg cmpl cmp and xchg ljmp jge scas addr32 pop test cmp (bad) cltd callq xor jp xchg sbb (bad) jg insb (bad) mov sub cmp movsl sbb add xchg xchg pop jb jl cmp test mov mov out (bad) movabs cmpl fnstsw or int jrcxz xchg (bad) jne ss xlat push mov xchg xchg cmp cmp add mov stc sbb mov ds imulb hlt test (bad) pop pop (bad) fist xor mov and pop iret and add xchg xchg xchg sti jmp js lods rorl push fidivrl rex.WRB rex.RB rex.XB insl or out fstl shrb jmp (bad) insl hlt std sub (bad) xor movl rex.RB jbe xchg in test rex.WRX xor outsb sahf rex.R sbb xchg rex.RX (bad) (bad) mov (bad) xorb shrl out retq adc decl adc jbe int (bad) rorb pop movabs xchg (bad) out (bad) ss fnstsw xchg movabs lock mov jle cmp fidiv cmpsl jge je jae mov or test rex.WRX mov xchg jp fdivrp mov loope scas (bad) and leaveq repnz ss es (bad) or mov fidiv add and rcrl jmpq and pushq adc add fcompl retq and (bad) gs andb mov and (bad) sti enterq mov push movsl add adc sahf stos rex.R pop jl imul adc (bad) jl sbb sbb mov mov rex in iret out insb out push fidivr mov (bad) scas cmp fisubr and rex.RB loopne add add loopne pop push psrad shll mov int3 out mov jns lods adc add rex imul fs negl (bad) fs mov fcoml fs xchg cmpsl xor ss rex.RXB (bad) lahf xchg (bad) mov clc add jbe and rex.WRX mov push (bad) ror cmp and xchg rex.WRX jle out rcrb loopne push xchg rex fwait push jge (bad) outsl pop jle imul icebp push mov ss stos mov sub sub cld fwait rex.WX sbbb or xor test (bad) stos xor (bad) xchg enterq out mov cli sbb (bad) movabs sub mov (bad) repnz rex.WRX and mov pop fisttpll mov sbb (bad) rex.WRX test lahf ja pop pushq pushfq pop jp sbb icebp lret or ja fistpll rex.R (bad) scas cmp jmpq mov pop mov xchg test (bad) jg imul shrb outsl or xchg rex.WR insb cmp insl (bad) xchg sbb js cmp rex.WXB js stc jp js and je outsl rex.WRB retq pop (bad) ja (bad) sub (bad) rex.WXB out scas jmpq rex.B addr32 repnz push (bad) test (bad) (bad) and loopne fistpll icebp mov pop jo ja pop (bad) movabs rex.WXB xchg outsl mov stc rcrl and jrcxz jmpq push ss (bad) loopne (bad) sub add push mov jrcxz outsl jne imull stc mov stc push or cltd mov cld scas rex.R rex.X jne movabs std cmp mov pop ljmp es sub test push fildl cmp pop rex.WRXB jno js outsb pushfq (bad) lret ljmp xor xchg icebp cmpsb cmp imul retq pop in sub (bad) mov xchg std rex.WRX rex.WRXB insl push pop jge jb (bad) jo in gs push rex.W ss jae (bad) rex.W pop jno rex.R or sti out push jo xor ss jge push pushq jle lods jne cs xacquire leaveq jns callq movabs add cmpb (bad) rex.WR (bad) cmp int imull rex.W mov rex.X rex.WRX add push scas jae jl xor mov xchg add (bad) jmpq stos sbb xor pushfq insb push jl rex.WX jmpq cmp sub adc mov movabs rex.WRB cmc in fmull mov xchg sub (bad) sti lods (bad) pop in sbb movabs pop adc sti shrb mov scas xchg (bad) or rex and and pop pop adc cmp fisttp jmp sbb insl xchg pop xchg or sbb or adc rex.R cmp outsl cmp mov lock sbb outsl sti jns stos cmp pop pop faddl cs rex js (bad) (bad) lock clc (bad) fidivl (bad) mov scas jae xor leaveq (bad) or rorb rex.B rex.X es jnp insl pushq xlat negl (bad) cmp mov stos or in rex.WR insl jle loopne in or or (bad) in mov add sub pop jle clc (bad) stos movsl cmc pop mov jrcxz mov sbb jle and sbb mov (bad) shrl ss callq test lods pop gs jo lods cs stc fsubrp and push rex rex.WXB test mull jg lahf out pushfq iret testl or rex.W (bad) pop jne loope push fsubrs (bad) mov cmp ja sbb js test sahf int add repz jrcxz (bad) insl (bad) rex.B gs (bad) xchg (bad) (bad) neg mov rcrb gs sbb mov mov jrcxz mov jnp xchg (bad) movabs and pop lret xor orb jle (bad) out callq push rex jb adc cmc divl mov rex.WR (bad) sahf jp push outsl push mov out lret movl scas push adc outsl push jne push cmc jg out dec fs (bad) (bad) (bad) fisubl rex.X rex.XB xlat (bad) insl test pop xchg loope lock scas ljmp (bad) clc fs mulb rex.RB (bad) add rex.WRXB sahf jl scas sub pop cmc data16 mov pop rex.WR mov (bad) jb (bad) ljmp out add (bad) fucomip outsb lahf (bad) push xchg (bad) (bad) scas sbb rcrb add mov test pop adc std jg sub imul mov (bad) adc sti xchg outsl jnp xlat mov imul or (bad) mov movabs add and or rex cmpsb sahf in xor mov adc xchg jns jg sbbl pop gs sahf rex.WRXB cli divl ja pop mov sub in neg mov adcl test (bad) and repnz iret (bad) rex.WXB in sbb sbb jge push jae (bad) rex.WRXB test rol gs jle pop rex.WB fdivp fldcw rex.B rex.WX cmp jnp (bad) je xchg jg mov xor jo in push xlat rex.W mov pushq (bad) fmuls sbb xor (bad) jg cmp (bad) rex.WX rex.WX rex.WRX (bad) (bad) retq jns rex.X push (bad) lods jg jnp jmpq sbb and fcomps decb adc cltd pop fbld rex.WR (bad) (bad) xlat cmp jg out pop loope pop outsl push in jnp imul push sbbl (bad) (bad) sub push fdivp enterq sub cld (bad) jle add mov (bad) mov std bnd xchg pop cmp sub sbb jg fnstsw jo jne je leaveq xchg jp ss jnp xor (bad) sub ja rex.W ja (bad) test sbb stos jg in test jns rex.WX (bad) sub in jns xor jrcxz movslq pop in cmp test adc cmpsl pushq mov enterq mov notb rex.WR test or lock rol idiv loop sbbl cmp lods hlt jp and rex.WRX xor jb imul jmp stos cs sbb fs scas sub jl stos cs mov (bad) test in xor xlat std fs sbbl xchg pop xchg insb rex.WXB pop sbb cli out and add sbb out out loopne and movabs scas in lods cmp cmp cmc lahf adc iret mov fildl icebp (bad) outsb (bad) (bad) (bad) xor (bad) lods (bad) rex.WR cs cs std cmc jae fdivl negb lods gs mov add mov pop sti push (bad) (bad) rol (bad) cmp mov or vpunpckhqdq in (bad) rex.WRX loopne pop mov rex.WX and in sub or (bad) loop mov (bad) (bad) setnp in movabs out lods jmp cmpsb jg mov or rex in jp rex.RXB jmp push mov (bad) pop jmp iret sbb loop mov jnp rex.RXB movabs and sub mov std fiaddl xlat sbb add mov outsl pushq (bad) in (bad) jle out (bad) sbb ficompl or push push js scas jmpq mov jb jne jno jo std (bad) fbld jo xchg pushfq divl out push mov cmc and (bad) mov rex (bad) and rex.WR xchg sub (bad) jmp xor cmp pop out xchg xor int pop mov addr32 nop pushq in insl (bad) lock pop sub neg pop jns adc ds scas mov movslq std pop in xchg (bad) sbb xor mov retw jae rex.X lea fnstsw (bad) (bad) lret and fs addr32 out lret lods xor repnz mov lahf out rex.XB scas movabs je (bad) test jge adc mov mov sub sahf adc (bad) clc cmc nop mov and jns rex.B xchg movabs jmpq cvtps2pi pop mull (bad) xor repz ljmp enterq jl jmpq in jae (bad) cmpsl nop int3 mov adc std add or xchg scas es rex.W and xchg push ds jle (bad) xchg js iret xchg jo (bad) jl test (bad) cmp adc push outsb sbb mov mov adc pop lods jbe mov mov mov js or jrcxz incb jnp lock or adc cmp fwait rex.W out mov push xor js cmpsb out mov jrcxz mov pop mov sub jns hlt pop xchg xor lea loope rex.WR cmp test (bad) sub rcrl mov pushq (bad) pushq imul lret (bad) stos jl lods sub fmuls js imul (bad) add in scas std jb adc cmp jp jp xchg xor sbb and (bad) adc and je movabs loop fistl xor (bad) (bad) sbb jrcxz (bad) or sub sbb clc pop adc sbb scas mov imul nop outsb repnz xlat mov lea out adc rex.RX rex pushq rex.WRXB lret push and clc xchg (bad) xlat rex.B (bad) frstor cwtl jle mov mov fwait cmp add test or stos mov (bad) fistp rex.RX frstor idivb and fildll xchg jo out repz gs popq stos (bad) mov cld cs repnz pop loope addr32 outsb or pop mov orps (bad) out (bad) int3 lret sti fstl test xor xor cmp rex.R in out test lods rex sbbl pop xor mov (bad) xchg imul or mov cmp pop jo test (bad) mov pop cs clc jmpq push ds sub and fdivrs ss cmc stc or (bad) int3 cs pop out fs callq ds test cmp jb rex.WXB mov imul fild jo test cmp mov rex.WRX mov sub scas push pushq sbb adc divb pop scas popfq test rex and lret scas lahf movsb rex.B xor stos ds pop jl push push add loope loopne rex.WXB pop and jb pop jbe fldcw cmpsb and ja lods lahf outsl add std mov in (bad) xor pop (bad) pause jbe (bad) xchg leaveq lret adcl xor xor mov cmp retq xor rex.X rex.WXB lock movslq (bad) jp test test (bad) test div outsb fildll es shlb fstp rex pop (bad) and rex.WRB or pop je movabs iret repz cwtl es sbb testb stos xor mov mov add (bad) xchg gs scas jbe in add push scas push rex.WRXB mov rol outsl ja (bad) pushq hlt outsb (bad) add (bad) callq scas test in cltd mov pop outsb je mov pop (bad) jne sarl xor and (bad) adcb gs push sub xor test sub xchg push (bad) add test rex.X movabs jmpq out sub xchg fsubp jrcxz push sahf jge (bad) adc xchg sub lock repnz (bad) rcl frstor movsb retq je fistpll sbb out and (bad) pop pop fist pushq scas or cs and sub retq rex.WRXB sub rorl jo movabs out cs pop sub fs mov sub jb adc sti cwtl xor cmc imul jrcxz lock xorb rex.WRXB lea insl cmpsl sti push out cs out jnp xchg xor vpmacsdqh test lahf cmc movsb andb adc jne lock (bad) adc xchg or mov xor movabs cld adc int3 push std xor out es cmp jo movsl imul callq roll fwait sub pushfq and push xor adc adc imul push lahf sti push movsl cmp out push pop rcr (bad) in outsb mov push fdivrl lock jle adc push pop sti (bad) out es mov rex.WX adcl out mov retq out mov (bad) out jno lock rex.XB sbbl xchg js shll xchg in rex.XB fistpl movabs scas sub sti cli xchg xlat ds adc clc jae jo mov rex.WR ds fidiv or out push loop scas (bad) adc imul (bad) (bad) jo sbb outsl mov es mov ficoml fisubl (bad) scas xor xchg push popfq iret pushq jae rex.WR outsl sub xchg pop movsb mov and sub (bad) lret sahf mov jnp pop (bad) (bad) or jrcxz and add rex.WRX stos lods ss scas add (bad) (bad) xor xchg push rex.RX insl sahf mov out rex.WRXB fs push ja rex.WR lea pop (bad) (bad) xor sarb jg jg cmp cmp scas loope mov mov xor xchg xchg test insb (bad) test xlat add pop xchg xlat cmp add cmp fmulp lods mov cmp decl mov jne jo in imul adc stc in callq pop mov movabs mov adc sub jle mov rex.WRB cmpsl out rex.WR rcrl out fs add rex.RX cmp and lea xchg (bad) leaveq xor and jp (bad) imul std rex.RB fsubrs (bad) add repnz xchg (bad) pushq cli xchg or xlat fisttpl push cwtl movabs (bad) rex.WB test int fnstenv jne shlb sub pop lret pop adc stos pop and mov push pop xor or jp cld fsts mov jp sbb outsl add scas cld movabs subl mov leaveq outsb jmp mov xchg clc mov pop mov pop cwtl (bad) ja jmpq (bad) loop testb adc (bad) (bad) (bad) (bad) jmp cmp and sub iret rex.RXB jo and (bad) xchg mov jo iret rex.RX addr32 hlt mov add pop in ja in adc mov mov rex.RX pop in shlb ds shlb fbld jae jmpq rex.R iret in addr32 clc mov (bad) leaveq mov (bad) outsl pop (bad) rex.W jo in jle pop rex.W jno lock insl (bad) adc ds mov scas jae jl mov (bad) push (bad) sbb in ficompl jle loope pop repz retq add cmp pop jmp mov scas (bad) mov cmpsb adc out lahf nop mov test movabs jnp scas (bad) xor ds mov jge cmp mov sahf popfq cmp out (bad) pop in es rex.RX clc sahf jrcxz jne or push jo (bad) (bad) cmp jno push pop adc add push fadds es rex.WXB jle pop sbb pushq rex adc or mov stos fisub xchg fwait (bad) mov outsl insb sbb rex.W lock fdivp xchg cld cmpsl add ja (bad) movabs mov rex scas rex.RX ss or out lret ss rex.WRXB jo mov outsb jmp stos (bad) sbb pop rex.WRXB gs xor test pop fist adc int mov (bad) fisub rex jnp jmp cmpsb jbe (bad) rex.WR lods xchg (bad) scas adc adc and (bad) rex.WXB lock ja jnp fadds add jne rex.WR rex retq sti je mov jbe scas stc rex.WR insl rex.RX rex.WB cmp (bad) out and mov mov cmp cqto jle pushq insb mov or sbb js sahf out cmpsl add roll pop jo jle imul test mov cmc (bad) jl fwait sub out xchg rex.WRXB (bad) sti or repz pop insb xor jae xor (bad) jbe shr (bad) (bad) rex.WRX loope push loope cmp flds rex.W pop jl scas jl jne,pt jmpq mov cmp mov ja out jno xchg fildll pushfq mov retq jns repnz repz jge or lea (bad) sbb xor jbe ss fild xchg stos callq mov cs mov fbld xor callq clc sbb addr32 ja,pt jl rex int testb sub mov loop (bad) leaveq jo or cltd jmpq (bad) and adc (bad) rex.WRXB jrcxz adcb or xchg jb jle imul add fbstp test xor fsubl in (bad) icebp fbstp or add rex.RX imul (bad) test jg jge retq xor (bad) nop repnz cld (bad) mov imul int3 lock fs pop (bad) rex.WX cs jl mov hlt jo pushq mov mov mov shr push sbb scas (bad) addl push pop jo or rex.WRX (bad) lods jbe adc rex.WXB idivl rex.RX jl mov (bad) sbb rex.RX movabs sub enterq movabs lret icebp cmp test loopne push (bad) push rex.WRX rex.WRXB lock rex.WRXB cli sbb (bad) push jns scas sbb popfq pop lock pop sbb (bad) rex jb rex.WRXB and pushfq insl fidiv xchg stos (bad) cld data16 fcomps gs js sbb je (bad) shl jge pop adc fs (bad) lret clc rex.WXB ss repnz in popq (bad) cwtl cli sub testl rex.WRXB adcb mov xchg scas out jbe cwtl add repnz (bad) sti mull sbb clc icebp rex.XB cs es sbb xchg notl (bad) movsb lock (bad) std jo jle in repz pop (bad) xchg mov mov jbe outsl xor pop jne rex.WX test rex lea (bad) lret retq fisttp sbb lods cs fstpl xchg gs and (bad) pop addr32 test push and nop xchg (bad) mov sub cmp scas and test fwait rex.WR and push mov mov (bad) enterq and (bad) jrcxz fiaddl lea jne jl leaveq adc cmp xchg je es or ds rcrl (bad) jb test (bad) cmpsl add mov nop out cwtl imul (bad) mov jrcxz lea subb jmpq sbb mov xchg mov insl xchg pop (bad) xor (bad) (bad) (bad) mov in (bad) jo add je es (bad) nop movabs or imul sub pushq ss jb fidivr (bad) std mov mov pop rex.WX in push repz outsb imul (bad) sbb enterq mov jl lea pop je out (bad) xor fcmovbe rex.WX jp sbb cwtl loope pop rex.R in lods mov test test cmp cmp pop jo cli pushq (bad) je (bad) pushq cmp jl pop jne rcll rex.WX pushq movsb test retq rex.XB cld sub (bad) (bad) jg cmp callq clc repz cmp xchg xlat int (bad) sbb pop and (bad) and add cmp ds lret (bad) mov xor add nop (bad) xlat adc add or mov jge pushq clc movabs outsb xchg sub ja fsubs cltd and fisttpll imul pop movabs (bad) cmp popfq insb push xor xor data16 (bad) sbb or mov mov (bad) or shll movabs fildll out rcrl outsl sti icebp jnp push pushq rep (bad) sbb rex.X (bad) sub rex.WRX cltd jnp jbe pop je xorl jbe jb add scas cltd callq pushq xor (bad) scas rex.WRX xor (bad) test clc xlat or xchg (bad) (bad) shll (bad) or out insl (bad) imul adc loope (bad) rex.RB (bad) (bad) mov sti xchg xchg ss xchg adc test out in and out mov pop jnp (bad) scas push mov lock adc gs outsl out cli ss movsl xchg ja sub rclb fstpl pop mov sbb shll jno jmp je adc pop add iret rex.W mov divb xor outsb stos lock lods add (bad) mov pop add gs (bad) push rex.RB pop cmp (bad) (bad) (bad) (bad) and cli (bad) (bad) xchg and sub sbb add cmc (bad) mov cmp push out subl pop adc callq sbb jb (bad) pop je rcrl add sub add mov sti fs in sbb (bad) fisubl fldcw (bad) cmpsl hlt rex.WX sub mov fisub xor icebp sbb or scas js stc add shrl ss movabs add (bad) and (bad) fnstcw out cmpsl push rex.WX in movabs xchg xchg test loop shrl xor rex.RB mov push jns jne movslq push rex.R jmp and jg cs stos (bad) jp mov subl shrl xlat fucomip in outsb iret (bad) jbe out pop lahf mov add in lods cld leaveq mov (bad) rex.RXB mov xor loope sbb pop adc (bad) and push rex.R jle push sub andl jl xchg mov rex.WRB jnp push pop pushq mov pop roll out and (bad) (bad) sbb (bad) (bad) in xchg jbe sbb test adc fmulp ss sbbb xchg jmpq lahf (bad) push fidivr mov rex.WB movabs jrcxz pop fidivr adc je,pt mov (bad) xor jmpq sub cmp xor in jnp or (bad) int3 sub jge pop insb cli insl out (bad) iret or (bad) enterq and lahf fmuls retq stos mov js test (bad) fidivl jl mov jg sahf (bad) cld jbe sbb stos leaveq hlt lahf js (bad) adc (bad) mov (bad) out ds mov sbb stos out jo xchg pushq rex.WR add ss jns in sarb mov test add (bad) cld jge stos sbb pop cld and mov loopne sbb or fidivr (bad) (bad) rex.WRXB ja scas mov push jns lcall mov sahf sbb rex.W mov rex.WR jbe stos sbb ss out rex.WRB (bad) clc and pop pop rex in xchg repz adc adc (bad) pop mov movslq shl sub jp jp pop ja adc lret (bad) lods adc rex.WRXB (bad) (bad) sbb jbe sbb (bad) sub mov xor xchg fs mov (bad) jl jnp jle rcll movslq (bad) mov (bad) xor (bad) pop sub jmpq jo mov or ja xor xlat cmc and or push cmp mov fstpt rex.W pushq popq pop and cmc (bad) movsl rex.WR mov jrcxz adc iret mov (bad) movabs xchg sbb sub sbbb and out std movq mov cmp mov xchg stc mov retq cld negb (bad) xor ficoml jp sub imul out jl (bad) push fwait pushq mov sbb jo lods xchg pushfq xchg mov fistp sbb movabs rex.X std jg leaveq cmp or (bad) push push loope sub rex.XB and jb rex.WX sub push fstpt std outsl pushq jae jge js xor (bad) jbe push stos sbb cmp add rex jne xchg xor mov cmc (bad) stos xchg cmc pop mov sub lcall in add pop or mov lea cld jg (bad) rex add (bad) jge adc (bad) lock rex xchg es pop jg mov mov out jmpq out jbe adcb insl xchg jl pop idivb pop rex.RB mov dec rex.RB mov cmp fcmovnbe sti rex.WRXB cs rex pop (bad) ja rex.WB cld (bad) pop sbb js data16 stc pop incb xor rex.WRXB cmc rorl std cmp ja add mov cmp jg scas ror lret sbb push (bad) cwtl test imul fstl pop test cmp jne jnp (bad) (bad) cmp (bad) jnp cmp mov stos sahf test xchg scas rep lock (bad) cmp and scas pop xor pop jnp mov mov xor xchg (bad) xor ror es lods es shrl loop ds xor pop pop push sub jg xchg dec cmc xorl (bad) jae push in repnz pop sti add cltd rex.WRX add loopne jo sub pushq (bad) jne sub lods pushq add jno std pushq jg pushq gs iret (bad) loop cli (bad) mov sub (bad) (bad) jmpq xchg mov scas shll jo jne subl and outsl insb divb (bad) pushq scas pop fxam cmp add and mov pop add mov cmc pop stos data16 outsb sahf imul lods xor stos rex.WX rex.RX decb (bad) outsb outsl sub rex.RX rex ss (bad) imul or and push sub (bad) adc cmp lret mov clc xor jbe test (bad) mulb mov xchg add or add adc xor and jg xchg (bad) jp push (bad) jo xor (bad) lods xchg xor insb jl cmp (bad) mov sbbl scas icebp (bad) mov loop andl jae (bad) add (bad) test lods jg scas cmp (bad) stos lret sub rex.WX jl leaveq (bad) (bad) pushfq cmova addr32 cmc mov add and sahf pop mov movabs mov or in cli (bad) sub fs cld lock jp pushq movabs (bad) xchg mov test shl (bad) sbb rex.WR (bad) scas add jg lods iret adc shrb in (bad) pop jg push add rex.WR rex.X loope push jo sbb or rex.WB jle adc sub movabs movabs push fxch pop and pop (bad) jbe mov js (bad) cmp rcll (bad) stc (bad) pushq pushq lret jp mov sti push jne cmp scas rex.WRX pop mov jle xor mov cmp ja jno stos pushq insl jbe add (bad) xor idiv (bad) and and jl mov divl rex.W outsl mov retq xor mov test retq movabs mov rex.WRXB xchg loopne popfq movsl rolb jo rcrb jle (bad) and hlt rex.B add test (bad) insb xor jge push (bad) out rex mov lods xor (bad) fistp push fcmovbe jb enterq add cli xchg notl mov (bad) mov mov pop pop rex.W movabs xchg ss stos je scas push test (bad) fsubrl add mov (bad) xlat xor mov cpuid cli pop push fildl pop rex.X mov pop mov in pop insb fcompl xor (bad) pop bnd (bad) mov ss rex.WRX xor cmpb jae rex.R push movabs insl pop lret rex.WRXB mov (bad) adc std cs lock lahf (bad) (bad) in test xor (bad) cmc mov xchg push stc jbe loop out int3 out adc lods movslq adc fbstp sti (bad) pop xchg roll xchg out hlt loopne int3 jne js (bad) js scas (bad) mov jns out movabs callq (bad) mov (bad) rolb scas rex.B mov imul xor rol mov stos rex.WXB push or push retq lods and mov rex.RXB mov ja out fwait push in lret (bad) ja mov decl jrcxz lods xchg jbe sub test (bad) (bad) es pop shl add movabs insl scas data16 test shrb cmpsb xchg add mov xchg push mov je lahf mov mov (bad) ss addr32 (bad) (bad) movabs std insb fstpt adc add rorl es pop jnp cld mov outsb incl scas cli push lahf pushq movabs roll (bad) and jbe xor xlat packsswb xchg callq (bad) ja testl rcrb jge outsb (bad) mov rex.WRX (bad) imul pop (bad) mov rex.WRXB xchg sub clc cs rex.RXB add (bad) rex.X cmp sbb mov mov insb adc (bad) gs cmpsb (bad) jg std mov rex.X out jp rex.RB adc xchg mov (bad) pop pop (bad) outsl sbb outsl sub outsl cmp sbb outsl (bad) pop adc imul or (bad) cmp jge xchg fcomip shll mov and add stos cmp add xchg mov cli je jle fiadd data16 (bad) shrl cli rex.WX cmpsb movsl rex.X insb xchg rex.R movslq (bad) out sub jg,pn out and imulb mov pop mov (bad) cli int3 rcrl jge std jo scas in outsb push rex.WRX jg jmp cwtl nop xor insb (bad) movabs (bad) mov xchg pop imulb movabs retq iret data16 mov sbb adc or rex.R jnp scas adcl stos imul pushq in and retq stos fwait dec mov scas xor movabs (bad) repz cmp add repz and jno push jl out lea (bad) jrcxz jae add test mov (bad) int3 pop rex.W add cs std scas sti test rcrb rcrl (bad) nop fnstcw outsl pop sbb repz sbb (bad) stc testb cmp insl xor (bad) neg int rex.WRX add sbb cmpl sti or out sbb outsb xor rex.WX sub fnstcw test adc xor test (bad) rex.WRX ja xchg push jb sub (bad) mov iret cmp fistpll fildl in cmpsb push pop mov lcall rex.WRB rolb xor xchg ja jnp rex.WXB pushq testl pop cld pop sub cmp loopne repnz shlb (bad) notb mov jne ds bnd divb jo loop and rex.WX (bad) (bad) decl ficompl adc pop imul adc pop mov fprem cmp outsb sub rex.WRX ljmp pop (bad) outsb or sahf push xor and (bad) lret jae cltd push imul lods xlat lahf fwait test push sahf frstor (bad) add (bad) xor or gs cmc push in and mov mov pushq (bad) push adc test adc pushq decb movsl pop jrcxz mov xor (bad) lret lock pop int3 lea imul (bad) test jne add sbb mov rex.WRXB sub push out pushq jo rex.WRB xor (bad) jmpq test mulb hlt sbb jnp mov imul rex.WRX (bad) sarb (bad) rex.RX mov push push mov sub rex.WR test and add xchg es insl pop xor sti mov pop sbb callq vcvttss2si sbb (bad) je xchg (bad) out punpcklwd sbb hlt cmpsl fstpt mov (bad) add cld and rex.RXB rex.WX cli repnz std (bad) fwait (bad) pop mov rex.WRXB imul xor and orl roll xlat xor stc xchg ja int out icebp mov cmpsb (bad) (bad) stc test xor sub (bad) pop in repz xchg or (bad) xor xor jnp (bad) (bad) lahf jl movsb mov scas rex.WRX rex.RXB enterq out movsb mov scas out rex.XB ss push sub ror cvtps2pi fidiv (bad) xchg movslq (bad) ss sbb incl sub cwtl cmp cmp (bad) (bad) push (bad) and (bad) jge scas xchg rex.WRX cld jmp mov lods jne jrcxz jb outsb jp ror movabs ss cmp (bad) outsb out add and (bad) mov (bad) loop int mov xor pop or fildll fadds lea cmp pushfq hlt mov (bad) retq popq stc xlat rex.RB sub cli rex.RB xor (bad) (bad) cmp out (bad) out cmp sbb pop pop cmc rex.X add pop jle rex.R stos (bad) sahf pop (bad) cld loope xor (bad) (bad) jg rex.B pop sti (bad) movsb callq in lret fs sahf notb adc xchg pushfq and xor pop jmpq rex.RB mov fildll (bad) rex.XB mov fndisi(8087 out xchg pop adc fstl mov retq xor psubq jae jrcxz sub cmp lods (bad) sarb (bad) popfq adc push test repnz mov loopne xchg sub in fild pop xchg lea pop sub cmpsb in loope sti xlat imulb ds idivb fbld rex.RXB faddl imul in fistpll (bad) mov movabs cmc negl insl fsubs (bad) mov adc jnp int xchg jmpq insb mov (bad) (bad) cmc xchg xchg rex.W stos mov movabs (bad) (bad) sub sti add fwait mov fs insb mov (bad) test rolb (bad) mov (bad) test rex.XB and xchg push adc fist ljmp rex.RX in adc js jb adc in fstpt xchg rex.RXB in rex.WR mov add cli rcrl rex mov and and mov add jmpq cwtl cmpsl sbb (bad) push xor cmp push push sti lahf retq mov jmp cmp (bad) lock jne xchg rex.WB rex pushq repz ds fnstsw cmp jl mov cltd add std sub rex cmp cwtl stos mov out in mov fwait jb rex.WRX rex.WX in rex.WRX bnd (bad) fldl pandn fwait ds idivl mov jrcxz mov (bad) jo xchg shrb xchg ds outsl rcr iret mov movslq fwait mov mov mov in xchg loope jge pop (bad) mov lahf lahf imul rex.WB xchg adc (bad) iret xorb mov fmuls jg add (bad) cltd jle lcall push (bad) fidiv xor adc add jae rex in sbb jge insb ds and out pushq push outsw (bad) in cmpsb adc gs mov cmc mov cmp outsl cmp icebp mov scas adc ss cmp xor push lahf mov stc lret (bad) mov push fisub insb outsl negl test movabs scas (bad) jge (bad) cs xchg sub jg fistp pop ds mul cs sbb out mov xchg rex.W xor pop mov (bad) xor xor cmpsl (bad) jae cmc hlt (bad) (bad) (bad) icebp movabs fbstp test adc pop vpmaxub sbb cmp and mov popfq sbb (bad) mov mov std xchg (bad) jno movslq je fistpll (bad) mov push pop pushfq jrcxz and add mov pop sahf rcrb and ds bswap mov (bad) rex.RB xor fisttpl rex.WRB push push jns (bad) cmpsb pop jnp jb sbb in stos neg pop jbe cmp and mov (bad) mov mov int3 insb jl (bad) int sti xor sub xchg out stc rex.XB stc cmp sub adc add sbb test fwait or rex mov xchg in xchg (bad) mov lea xor jne cmpsl test jo jb or add repnz retq mov sahf int3 loop (bad) jl shrl mov cmp cmp rex.RX enterq cmp pop mov mov cld sub insb cld push pop rex.W popfq fnsave clc movabs sub sbb movabs cmc (bad) cmp (bad) sub rex.RB out jno rcll or mov mov sbbl xor jo in test jnp stos ja in ja (bad) outsb out jl out loopne es in mov cmc (bad) pop or push add leaveq jl cwtl sti outsb xchg pop pop incb push cmc (bad) mov in xchg jne cmpsb xchg jae leaveq in insb test or or (bad) ficoml and (bad) test movsb ja shrl jrcxz fisubl mov outsl scas jg mov cmc mov (bad) movabs cmp and lods icebp xchg mov rex.WB outsb sub rex.X jae mov repnz pushq callq rex.XB callq jo cli loope rex rex.X (bad) (bad) lahf sbb xchg xchg mov mov rex.WR sub rex pop xor rorl test out (bad) jp mov rex.RB (bad) sbb pop mov out mov andl movabs hlt add xchg pop outsl pop mul sub mov addr32 in rorb pop (bad) (bad) xchg jmpq xchg retq push mov sbb (bad) cmc out je incb scas divb (bad) rex.WX rex.RX pop rex.B push insl (bad) repz int3 movslq pop pop cmpsq jb jrcxz icebp scas pushq lret adc scas test (bad) sub rex ds (bad) lahf outsl (bad) push lods and iret callq xor pop orl pop jrcxz cmp or xor jge in repz rex.WX push mov sbb or rex.B xchg adc ljmp pop int mov push push (bad) push push sub or jmpq out push pop (bad) movabs mov mov jo test sarl (bad) jo movabs jo sahf mov mov ja mov mov sbb pop icebp (bad) add retq xor and (bad) cmp (bad) (bad) out mov (bad) rex.WRX icebp es cmp cli (bad) xchg rex.WRX repz pushq negl insb jne (bad) rex.WRX pop mov xor (bad) mov mov mov mov insl pushfq rcr lock scas outsl lahf cmp leaveq sbb leaveq mov jo lret adc or fldcw (bad) jge std or jp pop xor (bad) mov mov rex.X rex.XB rex xchg push movslq or (bad) movabs rex.W fsubrl movabs std jmpq xchg (bad) insl jmp popfq jmpq imul fxch rex.RXB js xchg and push rex.WRX rex.R movabs push cmp cmp xchg pop scas mov mov icebp sub mov push lret sbb fcomps (bad) scas (bad) (bad) cmp movslq pop rex.RX pushfq sub enterq rcrb rex.R clc (bad) fisubl mov (bad) (bad) mov imul lret in sub xchg lret jmp sarl mov mov mov adc in rex.WRXB scas mov mov fisttp jne sbb ja (bad) jl cmpsl sbb (bad) (bad) outsb scas mull pushq callq sub fwait scas mov movsb jo jnp lods (bad) jrcxz repz pop adc mov xor sub (bad) stos add andb outsl jle (bad) clc movsl mov fisubrl sti repz out insb adc cmp jl scas (bad) js (bad) or pushq movsb jb rex.W test insb imull fwait pop adc scas bnd lea fisubrl outsl mov and pop mov loope cltd callq shll push mov rex sbb data16 rex.WRXB rex.WB cli lahf rex.RX lods mov or xchg jae int data16 mov rex pop lret out (bad) fcomps or fnstsw scas movslq pop outsb leaveq sub scas (bad) (bad) loope out movabs cli rex.WXB mov in rex.RB lea orb adc push scas shlb jbe scas enterq idivl lock (bad) mov add sbb mov leaveq pop cmp repnz cmp sbb fisttpll rex.X sbb cmc (bad) adc sbb loopne pop xchg jmpq pushfq mov (bad) xchg (bad) rcrb insl mov incb outsb imul (bad) lods test push pop int3 mov imul mov jo rolb out cmp test xorb jrcxz ljmp insb pop pop (bad) push mov or mov mov js sub scas ds js (bad) or xchg mov gs push (bad) jle (bad) out cmp (bad) rex.WB mov cli movabs mov hlt test out repz shlb imul (bad) addr32 movsb cli ss insb out (bad) cmc std (bad) mov outsl sti mov retq jbe enterq jp rex.WRXB mov mov xlat (bad) mov push movsl gs orb mov jns gs cmp divl xor add add (bad) jle fldcw pop js or in leaveq sbb scas (bad) fild callq push xchg mov add (bad) mov rex.W lahf cmp movsb lret repz lret mov xchg (bad) rex.B mov and sbb jrcxz sbb std xchg sahf out fidiv outsb (bad) test orl pop jb lock insb (bad) adc cmpsb push scas data16 scas adc xor scas sbb fdivl mov (bad) pop sti or movabs xor cmp add pop mov movabs push jge fldt lahf ds testb or stos or sbb scas std scas cli cltd or pop or mov in cs sub push iret (bad) xorb (bad) or outsl push retq rex.RXB mov ss cli fisubrl test push (bad) mov pop data16 cli movsl scas (bad) int push cmc jmp sub pushfq scas jae sub (bad) sbb (bad) cmc rex.WRX cmpsl or cwtl xchg (bad) jrcxz,pt xchg cwtl jl ficomp (bad) callq (bad) rex.WR cmp xchg cmp add jle divl lods in (bad) jmpq scas push and movb iret (bad) ja jl mov xchg rex.WX cmpsl add (bad) mov jne rex.XB mov sub retq (bad) jbe ja xlat adc add (bad) fxch orl mov add sbb jl add push mov stos (bad) mov xchg pushfq xchg rex.WRB pushq mov jrcxz imulb rex.WR jp push shrl mov (bad) iret adc lcall sbb mov add sbb cwtl test sub cmp rorl rcrb pop xor jbe (bad) (bad) rol jae (bad) or mov xchg stos sub fnsave lret lods adc pop or es outsb jg jg test pop pop rcrl lock mov pushfq jrcxz sahf (bad) xor sbb rex.X push xor xchg clc lret and mov pushq jl rex.WRX sbb popfq in mov cmpb pop movsb pop out rex.WRXB stos imul in imul xor (bad) pop lahf mulb (bad) ds add mov jbe mov jbe nop rex.WR (bad) int3 cmpsb sti int3 pop cmpsl (bad) mov rex jno in movabs pushq hlt xlat sbb cmp rex.XB pop pshufw sbb retq movabs mov mulb sub jg pop (bad) pop add rcll stos ja iret popfq mov jo jrcxz (bad) scas and jrcxz outsl int lock sub rex.WX mov int3 fmuls mov cmpsl clc scas out loope fs pop (bad) test jmp cmp push sub shrb movsb (bad) (bad) loopne in adc rex.RB and fidivr (bad) xlat adc jp mov not add loop cli sbb (bad) adc xchg (bad) shr mov add iret movabs or scas rex.B or sub roll rex.RB sub cmp loope insl xchg pop lock mov rex.RXB mov data16 mov (bad) mov fcoml rex.XB rex.R cmp outsb and xchg ds sbb jae xchg (bad) sti rex.WX fs rex.WRXB iret retq (bad) es test (bad) (bad) cmp pushq lock or (bad) lock adc popq cmc (bad) retq movabs neg add scas pop iret jge scas movabs jbe and or scas rex.W xchg es notb lock (bad) jns xchg fnstcw not (bad) cmp mov sub outsb jb mov mov addr32 leaveq popfq cmp sub and sbb jne push sti xor stos jle jle flds repnz xlat (bad) jrcxz (bad) sub outsb mov (bad) xchg xchg mov outsb rex.WRXB rex.R (bad) and (bad) jno fnstsw xor mov rex.WRXB jb mov (bad) (bad) jb (bad) mov sub ss add pop pop or lahf addr32 jp mov rex.WRB mov xor add xor js jns clc mov mov out loopne or pushq out mov or mov cmp mov mov pop (bad) es (bad) sarl jmp test or fldcw hlt or mov cmp cmp es in xchg and jne (bad) (bad) (bad) retq (bad) xlat mov hlt and sbb pop js (bad) (bad) cmp rex.B (bad) (bad) divb add push add mov sbb cmp or add push xchg fistpll mov pop and and insb mov mov mov retq pop adc pop jrcxz ds and movsb cmp (bad) rex cmp (bad) sub adc push lret adc adc jo (bad) (bad) std jo xchg mov int (bad) sbb sbbl mov js outsl (bad) enterq sbb mov lret jbe sbb sbb insl rex.RB push sbb cmpl adc sbb out mov sub (bad) sbb lret (bad) in xor nop jrcxz or mov es (bad) (bad) add add lods test scas (bad) hlt jo mov xchg shll mov in jl rex.WRX xchg rex.WRX xlat icebp pop pop cltd xchg mov mov outsl (bad) (bad) mov out test rex.RX or out notl cs stc icebp xchg popfq add (bad) xchg pushq xchg cmp sbb (bad) sbb stc movaps rex.WR movabs sahf (bad) or movsl mov sbb std or cltd in lods mov sub rorl fistpll rex.WRB (bad) lahf mov jne (bad) stos or push cmc roll pushq (bad) (bad) std jp insl (bad) scas (bad) lahf movabs lea rex.X sbb add (bad) sub lock pop fwait imul sbb xchg sbb callq fs pop cmp adc mov mov jge iret (bad) jbe (bad) jbe jrcxz out (bad) or sti add or push stc mov mov cmp or sbb add (bad) out sub pushfq fnsave push xor or mov notl adc jg pop cld pushq push movslq adc std jmpq cmp jo rex.R scas cmp pop cli or rex.WR add lods xchg insb outsb (bad) (bad) adc cmp jg mov test mov stos jne pop xchg std pop xchg pop jb adc mov cmp pop cltd and ja mov nop out cmp push out push (bad) mov jno lock sbb add jae (bad) ja test jbe xchg mov add xchg cmp xchg mov icebp and mov in pushq mov imul jo pop addr32 out outsl rex.B jnp (bad) sbb rex.WRX pop (bad) insb rex.WR push out (bad) sub add fdivr jle jp (bad) (bad) jnp ror mov jge (bad) mov xchg out pop rex.WRXB bnd adc mov xchg add stc pop sbb mov rcrb out (bad) imul shll cmpsb callq sbb pushq (bad) (bad) mov sub pop cmp (bad) xchg or roll pop ss (bad) out icebp repnz fbld rex.X pop sub add mov (bad) add shrb pop leaveq rex.WRB movslq shll (bad) movabs adc movsl lods imul jle add rex.W (bad) lret add xlat movabs mov addr32 pushfq insl jmp (bad) out add outsl pop (bad) pushfq push sbb add mov push (bad) packssdw sub rclb retq and sub in fstpl push cmpsl and out push in (bad) sub cmp jbe int3 cmp rex.WRXB repz adc mov jo stos pop jo jmp icebp (bad) fmul ss lret push cmpl xchg mov outsl (bad) js adc jbe fisttpl xchg pop int3 test (bad) push rex.WRX outsb out jge in scas and adcl lahf mov (bad) xor pushq icebp sbb sahf and adc push jo (bad) mov push (bad) (bad) (bad) push jnp rex.WX pop outsl mull pushq clc xsaveopt ss stos pop sbbl ljmp or insb andl mov cs rex.R push out rex.WRX cmc jns movslq jle (bad) cmpsl repz iret jo (bad) rex.RX adc jns or xchg repnz mov mov pop adc cmp pushq xchg cmpsb (bad) out pop push insl iret pop sbb mov (bad) andl xchg push shr fwait mov or (bad) out (bad) retq mov push fstp (bad) cld push jmpq lahf jp or (bad) cmpsl in rex.WR cs or cld jmpq rex.WRX jge rex fisttpl pop nop (bad) xlat sub test lahf int mov std scas (bad) cmpsb sti (bad) mov insb rex.W hlt addl pop movsl cli (bad) icebp push xor leaveq in or negb cmp (bad) pushfq (bad) cmp sbb lods lret cmpsl lret stos sbbb (bad) or rex.RX movabs out loop pop (bad) push push jbe sbb xchg repz js mov js adc mov cs je sbb out sub mov fmull rex gs lods jnp mov mov test popfw icebp push cwtl rex.RX fwait mov in sub adc leaveq sub mov leaveq loope js mov (bad) js test test rex.RXB (bad) xchg xchg cmp out fidivl (bad) (bad) (bad) push stc addr32 (bad) pushq rex rex.WRX pop sub pop mov ficoml mov lods rex.W xor mov push sti jg cvttps2pi mov jp sub cmc (bad) insl rex.R xor scas insb rorl fadds out ja sbb in sahf stos sbb jmp retq xchg sbb popfq lods insl (bad) add scas or rol movabs xor repnz rex.WRX jne rex.RB ja mov sbb pop adc stc std pushq in insl (bad) sub (bad) cmp rex.WX adc test repz clc (bad) cmp cmp pushfq repz xor cmp repz jno or (bad) sbb shrl mov outsl loope popfq push scas mov pushq in imul sbb and mov (bad) jo lods jbe movabs jge scas (bad) and movsb shl and mov (bad) (bad) (bad) adc (bad) add and xchg xlat cmp andb fmulp jae sub or (bad) (bad) (bad) ss insl rex.WR outsl (bad) (bad) push pushq sbb and sbb jo (bad) cmc jl sti mov rex.WRX jrcxz addr32 movsl insl push xchg cmp cmp (bad) test xchg pop ss es mov mov repz je std (bad) (bad) sub (bad) ds pop add ja and or sti js movabs loop jge test push fnstsw fucomip lods mulb (bad) jb lahf (bad) jne adc jp cmpsb push ds adc cmp pop mov int3 out push ja sbb jne cmp popfq stc fstpt pushq (bad) cmp or (bad) mul stc insl js cmp pop and cmpsb fs cmp add imul xor cmp notl in and stc mov and (bad) sahf in mov fist pop push in rcrb cmp add scas faddl je adc push sub kmovb (bad) repnz (bad) rex.WRB test (bad) sbb es mov adc ds jl sarb pop faddl scas or cli in and std push in sub jp popfq sbb adc rex.WX (bad) jge jle (bad) fsubs or xor add repnz pop rcrl (bad) and mov (bad) cmp xchg mov (bad) out loope or jne (bad) sbb cld add and (bad) jmpq in sub xchg stos nop mov and pop and xchg lret ds sub lret jle lods orl scas add (bad) icebp pop pushq mov xchg rex.R int3 in push or popfq outsl rex outsb or mov cmp callq cmc xorl or clc mov adcl mov repz fdivp mov rex.XB mov cmp xchg pop shrl movabs in icebp add xchg xchg sbb scas scas push sbb mov lcall movabs rex.WX sbbb jbe lods test (bad) js hlt outsb movnti movabs fimull lods mov sti lods callq roll (bad) rex.WRX pop bnd and (bad) pop cmpsl sub rex.W and fwait callq jle mov mov fistp mov in ss ja or sahf fnstenv sbb and in and push pop movsb add pop stos out cmp rex.WX sub mov movslq and sbb fisubrl (bad) xor jmp mov (bad) xor (bad) (bad) (bad) notb xor push enterq clc rolb xchg (bad) xor (bad) rex.RXB push mov in and (bad) cltd cmp or movabs cltd rex.WXB push sbb enterq scas and (bad) js jg scas xchg mov or int3 (bad) fucomp jo sub (bad) push in movabs fildll pop mov insl (bad) rex.RX adc or icebp cmp movabs push lret cmc (bad) rex.WXB idivb mov scas (bad) cmp push rex.WR rex.R sbb adc out xchg hlt adc js enterq adc adc (bad) out pushq sahf jl jns jrcxz cmp jle sbb pop std adc cmp sub rex.RXB and (bad) sbb xchg pop mov (bad) retq sub xor icebp cs fiaddl (bad) push outsb xchg sbb andl (bad) cmc clc xchg in and loope scas pop xchg sub (bad) mov sbb (bad) negb cwtl xor sub test sahf fisubl lods fistl jmp mov leaveq (bad) mov jg in scas or (bad) mov (bad) jle (bad) out (bad) rex.RX xor xchg pop jge (bad) rex.WRXB jmpq and mov pop pmulhw mul mov es (bad) mov xchg out je sahf jl cltd adc sarl jp xchg ja sbb push fwait fwait pop insl in je mov xor incl add sbb movabs fldt and push js sbb rex.WR cld xor cwtl rex.X xor idivl pop pop sub scas scas cmp fcoml rorl (bad) test jmp cs pop jl addl push sbb rcl sbb gs scas or movabs es jno rex.RX cmc insb rex callq sahf mov subl cmp out rex.R push (bad) (bad) (bad) pop pushq int punpckhwd repnz rclb rex.WR rex.WXB fs (bad) sahf adc xorb repnz sahf jbe in fnstcw lret out loope mov iret cmp xor jo,pt fistpll mov addr32 cwtl in rex.R gs (bad) ficompl jg movabs leaveq xor rex.WX (bad) sti shrl insl mov sbb insl cli out or cmp movabs repz add fdivrs xchg je cli or pushfq mov cltd mov pop sub or lods push movabs xor rex.WRB sarl orl mov retq and (bad) jmpq mov lock clc or lods cmp rex.RX push (bad) xchg jg out jns xor (bad) xor (bad) jrcxz mov push ds lahf ja add jne xlat mov sub or rex.W cmpsb jrcxz popfq in jge jnp and (bad) sbb imul add or xchg rex.W cld (bad) int3 enterq push lret in sbb jg vxorps fs (bad) mov (bad) mov rcl cmpsb (bad) retq cmp mov (bad) (bad) jo pop mov out imul and and test push pop out imul lea outsl sbb pop (bad) (bad) lret lods mov cmpl out (bad) sahf imul lock addl jp out stc (bad) xchg jo movsb rex.RX orb iret sub test xchg mov adc mov rorb rex.X negw sbb sti adc rex.WX and and imul pushfq or rex.XB pop iret pop fs rex (bad) movabs imulb cld clc jb shr jo popfq (bad) test movabs imul fldl hlt rex.WRXB sbb jle rcrb data16 jmp push mov (bad) push pushq stos or add mov (bad) mov sub in and rex.WX xchg outsb (bad) push pushq iret outsb repz jp (bad) mov add retq (bad) mov xor xchg or xchg xor adc icebp pop push (bad) sbb (bad) pop sbb adc jl inc sti sar (bad) push data16 rex cltd cld movabs ficoml rex.WRB (bad) (bad) (bad) ss ja sub movabs (bad) iret push scas icebp (bad) outsb (bad) push lea (bad) (bad) add (bad) clc es loop in rex insb lods neg (bad) mov scas rex.WRX repnz rex.WXB jrcxz rcll insl add test pop mov jmpq popfq outsb rex.WRX in add xor push out sub fnstsw push es int (bad) out pop jae movabs loope repnz xor out pushq lcall pushfq jl (bad) fisubl shrl add pop iret imul lock xchg (bad) lea data16 add sub addb rcl jg sti jo lea and adc stc mov add repz out xchg mov jo scas cmp stc mov fisubr adc jl sbb in rcrb or sti xor (bad) fsubl fnstsw stos mov cmp subb ja pushq add fdivrl and rex.WR (bad) mov adc sar scas std add mov mov pushq lret (bad) (bad) fisubr enterq scas sbb mov orl (bad) jbe movabs sub movslq movsb xor (bad) in roll icebp jo (bad) insl push pop cmp out and jmpq push (bad) sbb sub xchg jnp loope rorb pop and push push shrd rex fcomps (bad) ja sub rcrl push ljmp mov mov push mov or retq testl xchg sbb clc ja fs cmp and movabs (bad) js movabs jmp jmpq (bad) es lret (bad) fmulp rex.RX test cmp addr32 cmp pop push (bad) sbb and jg outsl jns pop add pop pop pop xor mov xchg rex jns fistpl (bad) enterq (bad) out rex.WRB fsubs xchg cmpsl addb rex.WXB jmp es clc sub fimul outsb jne (bad) adc movabs push lods sbb fisttpl (bad) cltd cli in sub lret or cld mov cli mov jle mov pushq rcrb ficoml js movabs (bad) xorb std push loopne (bad) rex.W rex fs cmp jno ja rorl (bad) xor mov std (bad) rex.R or stos add fidiv xchg fucomip fmuls pushq (bad) jns (bad) mov mov or jle ss pop cmp jp mov hlt rex.B jmpq rex.RB adcb rex.B jmpq (bad) pop scas (bad) loop adc scas jns (bad) or pop stos rex.W rex.RX mov sti scas icebp in or test (bad) cmp (bad) mov subb out lret adc lods rex pop jge rex pop fdivp fcmovb cmpsl clc and cmp xchg mov (bad) mov xor or and sbb pop mov lods jp rex.WB repz in (bad) xchg flds pop roll (bad) fisttpll in orl (bad) insl mov test mov rcr (bad) xor pop mov add mulb mov jae (bad) sarb outsl mov xchg (bad) lahf (bad) loope sub iret xor mov callq push adc cmp fildl fist ss out js cmp cmc fs pop rex.WXB add (bad) jne xchg movabs movabs jge fs (bad) sbb retq and push or outsb mov xor lods out pop clc add mov js and mov sbb std mov pushq repz or outsb (bad) jo adc jrcxz rex.RX cld rex.RXB scas xor rex.B xchg jno imul subb outsl addr32 sarb (bad) in mov jrcxz insl xchg rex.RXB rex.R (bad) adcb add cmp movsl cs mov jrcxz mov outsl fisubl movntps push (bad) add (bad) adc pop mov rex.WR rex.RXB scas lret imul and lret insl fs xor xchg add (bad) or mov xor adc in jmpq insl std ficomp push callq (bad) push push loope lock sbb mov scas pushq lahf rex mov xchg fs rex lahf (bad) imul cmp sub xchg xor shlb rex.RX lret xchg or (bad) (bad) xchg outsb lret imul sar (bad) jmpq gs rex.WB fs pushq incb rex.RXB (bad) (bad) xor fwait jmpq pop pop xor and insb push stc cltd out test cwtl test outsl sub scas and (bad) mov push jmpq or outsb push cmc cmp push and rex.WB loopne,pt (bad) (bad) hlt clc adc push mov sbb cmpsb (bad) sub (bad) sahf mov sub stos je ja lea and sbb outsb sbb scas xchg icebp outsb mov xlat je pushq sahf sub scas iret je imul movabs sbb (bad) movabs sbb scas adc or rex.XB andb lret pop shrb (bad) adc pop pop outsb rex bnd pushq pushq and adc in (bad) hlt lea jp mov and ds cmp in adc xchg xchg cmpb js (bad) rex.R cmc push jns mov add sti scas mov sarl int lods (bad) shrb out cmc sub adc jle (bad) in xor data16 retq (bad) test jmpq (bad) loope loope xchg insl cmc add xchg out je mov jo leaveq add jb jne fldt (bad) mov push in imul (bad) movsl test xlat mov in xchg movabs retq (bad) xchg sbb mov sbb (bad) adc pop scas test cmp mov xor (bad) test imul add lock mov jle sub scas rex.B (bad) mov repnz (bad) nop subl mov sti add cltd rex cs lods callq std (bad) (bad) (bad) (bad) rex.RX rex.B ds pop rex.WX cs sbb sti jbe test rex.WX xchg and sbb sti callq pop test xchg js mov mov lahf push xchg cmovb idivb std cli negl or fcom xchg push mov insl icebp fstpl out jo rex (bad) out add roll fisubrl cmp xor or fidivrl cld scas (bad) sub adc (bad) movsb sti (bad) ja (bad) pop mov jle cmp or gs insl in (bad) mov outsb sbb in out jge and push test (bad) cmp mov pop iret (bad) pushq pop pop (bad) scas fldcw add cmp lods movsb cmp (bad) int3 jge sub mov (bad) (bad) (bad) scas jmp outsl mov or in xchg (bad) outsb outsb rex.R jno mov (bad) mov jmpq jge mov jl test rex.WRX repnz cmpsb jno sbbb stc popfq (bad) or lea es rorb insl (bad) pop jmpq addr32 xlat pop iret movabs pop adc (bad) mov sbb (bad) js xor sub lret or sbb rex.WR (bad) (bad) (bad) pop sahf push test (bad) pop std and jrcxz or insb cld cmp stc adc (bad) rex js cltd loopne ss sbb cmp xor pop and pop (bad) leaveq movabs scas je rex.WRXB mov pop jne loope lahf xor rcll sbb (bad) sub sbb mov out (bad) jge push pop adc (bad) cmp or rex.WB (bad) xor test mov and repnz sbb jg outsl rex.XB ss sbbl mov cmpl jbe outsb bnd je test adc repz and (bad) scas (bad) es (bad) rex.W and (bad) sbb scas mov outsl or pushq (bad) or scas test pop jmpq or leaveq out cmp or xlat xchg fstps je or int3 ds lret xchg mov xor in jl lret rex.RB (bad) sahf xor out sarl test and pop sub mov add xchg outsb mov adc mov lret jg jl jns pushq pop pop mov fisttp movabs scas hlt fldenv loop hlt jo je mov jge (bad) cmp or jg jns insb xchg cli and outsb adc es mov pop mov push nop cmp sbbl cmp cmpl jmpq pushq rex.WRB jp lahf movabs (bad) and repnz incl xor iret stos adc lahf insb rex.RB mov jnp rex.WB rcrl test pop rex.R lahf pop fbstp movslq pushq wrmsr (bad) pop lahf mov mov sbb fs jno shrl cmp sub in idivl jg fldcw rex.WB fldt out (bad) outsb fwait pushq sahf xor add outsb pop jg roll scas sbb imul jne cld sub jmp mov hlt or (bad) (bad) mov mov sbb adc xor mov fwait jl vmaxpd sahf xor jle sbb mov (bad) lods mov rex.WRB insb (bad) cmp repz pushq sbb rep xchg sti rex.WR xor (bad) scas pop adc and mov (bad) (bad) sub xchg insl insb jmpq insl data16 push test jo cmp and (bad) push fdiv (bad) out movabs rex.WRB mov movabs lods sub pop stc test (bad) outsl pslld adc cmpsb (bad) push lea cmp rex.WR cmp push clc rorl std stos push and rex.WRB fidivrl xchg jp xlat xchg (bad) rex.RB mov mov rex.WRX push jmpq lret jle (bad) jp loop (bad) in pop xchg sub in (bad) jrcxz movabs subl stc (bad) adc pushq sbb rex.X push and mov push addr32 clc mov jmpq cltd cmp sub push retq (bad) movzwl js xchg (bad) callq (bad) in rex.X rex.WRX rex.W loop scas pushq mov in insb jo imul add sub scas rex.X fldenv xchg rex.WB rex.WR mov jae jl (bad) lret (bad) cmpsb (bad) (bad) hlt movabs cwtl xor cmpsl mov pop pop pop xchg outsl (bad) incl rex stc or cmp rex.W xor xchg (bad) sbbb sarl (bad) lret pop pop stc rex add rex.WRX adc (bad) sub sbb lahf (bad) push std in std adc (bad) outsb jp and (bad) lahf (bad) xchg sarb js gs fldt and jrcxz (bad) jg mov lea (bad) callq (bad) sbb std movabs insb jne pushq jl cmp outsb sub (bad) stos ss cmp insl scas lods nop push and sub pop cmp icebp imull cli push test pop and jb fs stc xchg and add fmul lahf jnp repnz pop adc rex.WRXB and lock fidivr or mov lcall (bad) xor rex.W ja cs pop pop rex.WRXB repz fstps popfq stc (bad) sahf xchg cltd xor rex.RX or loop (bad) mov xchg xchg adc (bad) (bad) rex.WB and xchg (bad) (bad) (bad) cmp jge pop insl pop scas rex.WXB pop callq andb jbe pop (bad) jo (bad) push (bad) rex.WRXB add push (bad) jge test sub mov (bad) ja rex.R or jl divb xchg pop mov add fucomip outsl cltd std (bad) pop (bad) xor insb leavew cs imul xor shl (bad) and cmc pop movabs outsb or jae (bad) pushq movabs cmp pop xor shrl mov sahf sti rex.RX jl outsb and (bad) xchg lea cmpsb out sbb loope (bad) insb rex.WR and scas loopne pushq popfq roll orb mov push xor js stos mov mov or mov addr32 pop push leaveq and (bad) (bad) add (bad) cmp or pushfq retq lret mov loopne (bad) in or mov es loop pop mov (bad) add js adcl push (bad) mov mov cld std repnz repnz lods cmp xchg out idivb sbb add mov (bad) test mov rex.WR xchg cmpsb pop fwait scas push ds mov jle imulb orl cmp out push std scas pop pop rex data16 sbb (bad) or or rex.WXB (bad) xchg fs data16 movsb ds (bad) push movslq jae sub cmp (bad) loopne stos jl add sub cmc ljmp sti jrcxz and rol lods jge mov fstps xor imul mov test sbb push add scas (bad) ja pop mov (bad) add (bad) xchg jnp cld xchg sub cmc and mov insl cld outsb rol (bad) in lods repnz and vdivpd (bad) rex.WXB pop mov rex.WRX rex cmpl jle jnp (bad) lods lods cmpsl push lahf insb retq and je js rex.WRX jmp and out js out movslq fnstcw (bad) rex.WB rex.B gs xor addr32 in imul enterq xchg lods push (bad) insl rex.B rex.WR (bad) (bad) rex.W roll cld push cmp movabs push adc test push (bad) scas and lods lods sarl jb pushq bndstx jae jae cmpl lret test xchg loopne (bad) xor lock rex.WX cmp adc adc pop loope adc add cmpb fnstcw imull rcrb outsb xchg rex.WRXB enterq jg int rex.W ds jrcxz test cld subl pushq push repnz lock pop (bad) test and adc push add jge lahf jle (bad) and mov xor ja sti rorb loop rex.W mov cmp mov jae pop ja add adc sbb outsl scas jne push rorl sub xchg rex.RX jmpq in sbb mov test imul rex.RXB in fisubrl rex.B mov xlat sbb jrcxz in cmp out xor jl xor (bad) outsb scas xor hlt mov pop add stos and (bad) cs push jmp jno cmpsl movabs and test xchg imul rex.RX jg mov ficom xor rex.WRX add movabs imul (bad) pop pop pop jge int3 (bad) or (bad) icebp sbb sbb loope cltd insl and cmp (bad) in sbb insb mov xor push sbb adc lret hlt xchg mov sbb imul (bad) cmpsb cmc rex.XB mov xor mov pop (bad) sti movslq sub xor ja xorl jl scas mov movsl (bad) (bad) mov mov (bad) rex.WX outsb retq sahf fs out and test cwtl (bad) cmp scas xor mov scas fs pushq movabs sahf sub jnp inc mov cs and lret jle and rex.WRXB push adc add xchg (bad) pop test (bad) ss pop (bad) xor (bad) lret and (bad) out xor xor mov data16 lea pop insl loope jbe (bad) (bad) or sub pop add outsl loopne mov add xor cs pop mov fwait jle (bad) insb rex hlt (bad) cli fbld rex.RXB iret mov mov (bad) retq outsl fs rdpmc ss rex.WRXB repz shrl rex.WRX callq cmpsb mov fcomp adc (bad) lods jns jge (bad) rex.WR cmp mov test insb xor adc nop adc pop fldcw xchg sub lret xchg insl cmc adc cmpsl adc movabs mov and movsb addr32 push stc stos xor mov xor sti rex.RX (bad) ror (bad) lahf rex rex.XB rex mov mov add cmc sub xchg (bad) test rex.W xor jae (bad) outsb cmp imulb insl (bad) cmp pop mov ds push push xchg and loope (bad) xchg insl adc frstor (bad) sub xchg xchg sarl sbb loope xor mov xchg movsl add fs insl mov sub int xlat sub xchg mov cmp (bad) mov (bad) mov mov in sbb push xor or movslq push add jg xchg rex.RB (bad) mov jno push divl movabs cmc outsl test push push jbe mov loopne movabs xlat rex.WR sti fs retq lock jno (bad) pop jbe cmc sub (bad) sub ds repz pop loop rcrb scas push fcomi lods movabs pop push rorb (bad) (bad) rex xor or mov fcoms and insl retq xchg cmp stos push ss mov in xchg pop rex jg cmp or rex.WRB add (bad) cld or (bad) or xor mov push mov repnz sub (bad) cwtl pop gs pop mov in mov (bad) xor out (bad) jmpq jp jo stc js push clc and outsb ja adc jbe sbb xchg rcll in sti (bad) mov sahf rex.W movabs rex.WRB sbb loopne (bad) add jb insl loopne lea and push (bad) xchg jo movabs jp sbb loope (bad) (bad) add rex.RX xchg frstor rex.R xchg push iret rex.WX stc imull ss xlat xchg rex.WR rep rex.WRXB mov orb rex.WXB xor adc leaveq push movabs rex.RB pop addl mov xchg jrcxz cmpsl rex.RXB ds add sub xor push insl cmc out fsubp subl (bad) scas mov sub xor pop push pushq (bad) add jae in mov cmp mov mov sbb mov cmp jmpq ficomp cmp (bad) (bad) insl icebp enterq adc and outsl test fcom adc in (bad) je xor pop fsubrs pushq mov mov sub or jge xchg and mov movabs lods (bad) sbb push cmpsl mov add push je xchg sub jno (bad) jne out rex.WRB rex xchg pop test shrl cmp ss insl jb cmp rex.X (bad) cmc sbb or int sbb iret repz jg notl mov bsf mov cmc out xchg rex.W rex.RX repz rex.WRX lods scas fsubp imulq lods mov fisttp clc jne adc lock mov out (bad) lea (bad) mov push fisubl jb loopne data16 mov lods (bad) jne jl mov sbb popfq xor xor idivl jg xor icebp movslq pop jnp outsb lods cwtl (bad) (bad) cs xor movabs (bad) mov fisttp in jmp lods addr32 fsubr mov adc movslq test (bad) mov or xchg or xor ss cmp (bad) cmp rex.X push sub push ja test and (bad) sub nop xor out (bad) int addr32 or xor (bad) mov xchg in adc es test rex.WRX rex.WRX add sub movslq (bad) divb hlt in xor xlat pushq data16 push and jge or pop cld movsb sub rex.B rex.WRX (bad) add pop lods shrb (bad) (bad) or cwtl or imul cwtl sbb pop rex.R movabs loop std xchg movsl adc xchg push movabs out sub or xlat jmpq rex.RXB pop outsl or fistp fucomi movabs adc pushq (bad) push popfq fiadd cld cmp out and and rex.X gs rex.WB repnz pop int cli and (bad) pop retq rex.W xlat adc xlat jg ds test jp fwait outsb pop mov orb lret (bad) test std lods addb add movabs jl push or xor fldcw (bad) xor (bad) hlt fbstp mov or cmc mov js sti jbe jmpq fcoms rex.X mov cmpsb mov xor xchg insl int3 xchg xor (bad) clc cmp in xlat cld repnz mov xor adc ds out cmp ja je shrl (bad) add xchg jg xlat (bad) (bad) cmc (bad) in pop cld lods pop movabs sbb retq pop vcvttss2si and pop ds orl (bad) (bad) mov ja sar push decl addb scas xor fwait pop rex.RX (bad) (bad) xchg xchg sbb vpmaddwd ds or sti pop sbb adc stc jb pushq mov jg scas jnp pop mov ds xchg mov xchg push cmp cwtl pop (bad) fisttpl xor stos sbb fdivs pop outsl stos (bad) ss (bad) or outsb mov rex.WXB mov xchg cmp pop shr or (bad) pushq (bad) (bad) (bad) adc out mov cltd sbb push or stos fs fsub mov mov nop mov xchg push rex.WXB std sub jmp (bad) rex.WRX stos xor jg adc out or mov lods sub and xorb loop retq push (bad) pop push mov (bad) movabs pushfq lea cmp ja (bad) mov out pop xor rex.WXB pop (bad) test stc clc rex.WR data16 pop outsb (bad) scas jne js popfq imul sahf mov fs loopne insb or (bad) jp cmp mov (bad) mov addps xchg push (bad) movsl pushq (bad) rex.WRB in jge retq jmp cwtl rex.WXB (bad) rex.W (bad) hlt orl rex.R pop mull repnz cmc sbb rex.WX insb cmp cld (bad) rex.WRXB retq jl cmp pushq insl rex.R outsl jle negl (bad) rex.WXB fs xchg negl fidiv push xlat in je pop cmc (bad) jmpq cmp push adcb stc jge sbb cmpsb imul mov sbb lods xor out clc fwait jp test pop (bad) (bad) sub (bad) nop pushfq pushfq popfq pop mov outsb push movabs xchg add stc negb adc sbb xchg xor lret jge jg clc jl mov repnz out push rex or js data16 xchg fisubl test (bad) mov (bad) int3 repz lret mov or adc int3 (bad) sub mov xchg mov jns insl rcr (bad) stos movslq movabs (bad) push pop xchg out (bad) lods in push pop rex jns xor (bad) pop in (bad) mov rex.RX rex.X push (bad) push jmpq jbe mov (bad) mov xchg sti cltd sub xor adc pop and xlat (bad) jg fldcw in data16 mov jmpq std mov fnstenv rex.WRB mov (bad) scas fiadd (bad) cmp movsb pop addl (bad) (bad) mov xchg (bad) sarl mov es fwait or loopne push out scas test jl lret rex.R fbstp ss in or pushq fdivrp mov jmpq data16 lea and fisubl es frstor rex.X adc mov sbb and push popfq rex in loopne nop rex.WR mov leaveq fildll and ja in add cmp movabs xor decl and movabs mov push mov or mov mov xchg out or xor ja stos test rcrl enterq sti xor (bad) jo (bad) mov std (bad) sahf fcoml cs fdivrs jne push sbb and adc lea insb xchg jne loopne jmp rex.WRB (bad) lahf adc cmpb jp sub sub fisttpll rex.WR or rex.WXB rex.WRXB enterq mov push lods sub rex.X fdivrl add cmp callq or cmp cmc and xor sbb in imul shlb (bad) ds in leavew ja mov test jrcxz (bad) or shlb jae and mov out push cld jne imul jmpq cwtl pop pushq pushq (bad) jp scas jbe rex.WX xor (bad) jrcxz pop mov xor add mov or xor rex.WX add pop ss mov cmp out sub lret jae ja mov rex.RB (bad) xor test fcmovnbe out (bad) fist jmpq adc ljmp sti adc mov jl pushq mov int3 xor shlb hlt sub rex.WRX mov cmc int rex.RXB data16 js loope sub add push outsl xor push mov (bad) out pop leaveq (bad) (bad) imul rex.X rex.RB repz add jmp rex (bad) cld fwait xchg lods xchg idivl out push outsl scas rex.W rex.X and add pushq rex.R jno sti (bad) sbb sbb fmulp (bad) jbe xchg xor pop mov fsubrp (bad) mov sbb jl jp shll faddl mov mov (bad) sbb fdivp xchg (bad) std js sub xchg gs sbb and mov fstpl jnp and (bad) cmp in and rex.WRX jl mov sub jle jnp cwtl add icebp mov int3 movabs rex.WR add rex.WXB rex.X and scas xchg add fadds (bad) cmpsb or jo std movabs mov rex.WRXB lods mov cmp insl jo mov cmp xor sbb sbb (bad) cmp scas outsl in cli jnp,pt xor pop pop jg sub lods insb push pushfq adc rex.X in stos mov (bad) sub (bad) fdivrs mov rex.W mov pushq and rex.RB out stos xorb (bad) icebp pushq xlat jl idiv cs jrcxz pushq pushq jnp fisttpl rex pop xlat rex.WRX (bad) movabs data16 pop (bad) add add sub sahf fucom (bad) (bad) je lea lret fdivrl cmp xor movabs rex.RX stc (bad) xor (bad) fisttpl negb mov xor fisttpl leaveq (bad) rex.WRB mov stc movsb mov rex.X and lods (bad) pushfq add addl mov mov sbbl cmc jle jbe retq lods test push sub cwtl jl xchg mov loop (bad) je push jo jo outsb scas mov rex.RX or pushfq (bad) xchg imul (bad) mov movabs jmp movabs mov (bad) adc jno out jge imul insl fs and push pushq in sub retq pop outsl pop or leaveq imul ja xchg sbb callq fnsave scas fisttp js out jbe lret in (bad) sahf test rex.RB sbb std jle rex.W rex.WB out jp scas (bad) insb (bad) ja fs popfq rex.W imull or xchg adc rex.RXB rex.WX rorb and js xor jb ds fnstenv (bad) push add cmpsb pop cli scas pop xchg rex.WXB rex.XB pop and cmp gs (bad) lret ss mov cmp outsb imul (bad) mov nop (bad) rex.WX jns js (bad) movsl (bad) sbb xchg jmpq int xor jp jle js (bad) sub int cmp int lahf test (bad) rex.X jle pop push test mov jnp (bad) retq ss test inc rsm cmp jp popfq mov cmp rcll cmp jge lea cmp sbb mov and repnz mov push rex.RB pop (bad) jnp imul sar test pop and cs fisubrl fisub mov iret adc mov test jae (bad) (bad) shrl ss pop mull pop adcb push lret enterq rex.W pushq lods sub pop and jmpq es mov xchg mov or cmp sub movsl jl lcall rex.WXB jne xor test mov xor push test pop loop jne test mov jns out (bad) pushfq (bad) xchg mov pop insb loopne out sbb jl jg add in sahf outsb push fadds jl xchg jmp push addr32 pop mov fstpt adcl (bad) loope std or (bad) cmp (bad) fcmovne scas (bad) imul leaveq sbb rex.WR repnz mov shrl fstpt gs push add mul mov pop sbb mov outsl pop rex.WB cli mov int fs pop cmovae (bad) mov lahf jb cmp sub cmp outsb sbbl mov (bad) cwtl cld lods cwtl js cmc pop adc add in or rex.WRB fidivl data16 xor fsubs cmp jp push movabs addr32 mov cmp sbb pop addr32 jo cmp pop (bad) stc push push jb rex.R sub or movsb (bad) mov sub jo cwtl js xchg or xchg lock xchg add xchg rex.WXB rex.WX (bad) rex.WR rex.WR out rex cmpsb jbe sbb sbb rex (bad) ds xor sub and mov vmovhps rorb outsb rex.X xor nop outsb xor callq fistpll jl add xor lock scas es cmp mov (bad) jbe outsb imull lret cmpb lods test xchg int cmp pop sub (bad) loopne hlt loop rex.WRX (bad) push add leaveq (bad) out cld jns (bad) mul (bad) rex.WB mov or (bad) lahf insb jg mov jno adc pop cmp notb insl sbb xor nop scas ja pushq movd add push add jbe mov sub sbb negl out rex.WX pop rex.RB or (bad) lock xor push hlt mov sub cmp ds rex.WRXB add and ficom (bad) mov hlt sti fdivrp hlt pop fcomps pop int3 mov (bad) in movabs jbe hlt and mov fcompl (bad) (bad) movabs in add cld adc sbb cmpsb sbb cli outsl imul shll fcmovne sub pop int test cmpsl jle divl shrl xchg iret pop pop (bad) rex.WXB rex.W mov cli movabs (bad) push stos pop ds mov lret fldlg2 jo imull xchg rex.WX es lahf mov (bad) pushq mov xor sbbb fdivrl cld mov adc sbb (bad) (bad) fdivrs (bad) pop std jns sbbb xor retq in mov ss mov xchg lahf (bad) push sbbl jle mov mov data16 sti ja rcrl fidivr and mov movsl andl sahf mov pop (bad) cmpb add lea jp out mov rex.B pop jae push outsb sub xchg and sbb xor mov mov std xor sub cltd test imul adc xchg add (bad) sub movabs cmp fucom retq lahf movslq push (bad) cmc adc popfq mov xchg and mov cmp jl (bad) movabs rex.WRB sbb pop movsl ja push outsl mov sbb jbe xor pop rex.WRB movabs (bad) out or jnp sti add rex.WXB mov outsb mov pop cmp (bad) test rex.WB ds (bad) cs div ss pushfq in jge test rol mov (bad) stos cmp addl je jo jno (bad) pop jbe sub out sarl jmp xlat (bad) (bad) (bad) fcomps jns out rex.RX sahf or es rcrl cmp movsb xor negb (bad) (bad) ja mov (bad) xor movabs and pop pushfq clc cli sbb mov mov insl stos (bad) (bad) test mov sbb rcrl jle (bad) or cs jns rex.RX add rex.WR add adcb or repnz pop and mov sub scas movabs imul mov (bad) fmul std in popfq push jp fcoml and iret lods rex mov outsb iret rcrl jp test push sbb fsts (bad) cmc rex.WRX (bad) jle jbe cmp pushq shr jl and rex.RXB push sub (bad) sbb pushq (bad) adc mov popfq addr32 (bad) rex.WRX scas adc sbb pushq xchg int3 movabs or push es fdiv insl leaveq mov js cli or cs (bad) xlat jrcxz sub sahf (bad) mov push xlat std lret test (bad) mov mov sti pop mov cmpsb stos pop mov (bad) jnp outsl pop push pop fidivl jnp fistpl xchg insl rex.WRB test mov imul mov and xchg test test (bad) shrb add test (bad) rex rex.RB imul (bad) movabs (bad) adc frstor rex.XB mov lret rex.XB fistpll icebp pop or cmp js test sbb jns or (bad) and jl adc insl nop and out nop push (bad) rex.X fmul (bad) push movabs push fs sti (bad) (bad) (bad) (bad) jle pop (bad) xchg int imul (bad) negb rex.W ds retq cmp rex.XB es (bad) pushq sti push fnstcw mov movsl sbb xor mov rex.X pop cli push adc cmp (bad) outsl mov (bad) sbb lahf in es insl adc (bad) iret lahf cs nop rex.WRX jns sarl imul (bad) pop adc in pop rclb adc jl and ds js rex.RB outsl cmpl cmp cmp es es jp pop or or mov and jmpq add jp mov and add pop push and cmp shrb (bad) rex.WXB rcrl pop xor ficom mov je js ja andl lods push xor cmp sub loope gs repnz pop imul push scas rex.X fimull (bad) fdiv test jbe sub jmpq add (bad) xlat js outsl outsl fnop (bad) sub mov in or pop repz rex.B xor addr32 push mov movabs rcrl mov (bad) (bad) jns sub cmp jg std cli or add jne (bad) jl push in pushfq (bad) rex.WB repnz pop or push xchg outsb (bad) (bad) adc pop jg retq jle mov (bad) mov in sti lods jp nop add pop std adc mov jo cld in cmp jmpq add mov pop add pop pop icebp and in rex (bad) es and mov push and or xchg mov xchg fcmovnb ja fcmovnbe jg (bad) xchg (bad) (bad) add xchg xchg rex.XB xchg addr32 jl cmpb jle (bad) jb fcomps data16 sub loope xchg jmp in (bad) cmp test mov jo (bad) in or cmc rex.RX push cld mov xor fsubs add sbb fs xor (bad) (bad) jl callq (bad) pop mov jge js jg mov (bad) lahf rex.W (bad) add or xchg xchg sti rex.X or std pop and or pushq (bad) insb mov rex.WX rex.WR (bad) xor jb movabs subb iret (bad) pop push scas cmp sub lock cwtl repz sahf fldt mov (bad) xchg (bad) pop andl mov push jnp callq rex.WRX loope pop in lcall ror lahf je xchg pop addl xchg (bad) jne add jns mov jmp (bad) scas int3 push nop rex.WRXB mov rex.B ss pushq push fwait shrl lret nop mov jns mov push push pop rex.RB repnz outsl rex.WXB out (bad) ficompl push jp (bad) insl sub add mov cmp cmp or out in adc xor ds popq testl andl adc sbb enterq or (bad) pop or mov and (bad) outsb push jge mov (bad) (bad) mov movabs in jrcxz and rsqrtps adc jne push sub cli rex.XB rex jo xor pop cltd mov sarl popq fcoms sbb sub adc (bad) idivb and mov (bad) mov (bad) pop push (bad) cmp cmp jmpq rex.XB push lahf and jg test (bad) mul outsl jrcxz in cmc ja (bad) fs testl pop gs int3 pushq jmpq mov sub pop (bad) ss loop (bad) cld (bad) (bad) test lahf imul (bad) fcmovnu pop movsb xorl and rex.WXB rorl std cmpsb leaveq outsb pop jns jbe add gs or mov rex.W (bad) jg std (bad) push jo (bad) (bad) jo (bad) (bad) (bad) and (bad) mov outsl rex.X jnp,pn or mov push jns jo (bad) mov mov sub rex.WRX cmp test mov push jae test rex pop mov sub dec mov xchg pop nop cmp add mull je fs (bad) (bad) and testl stos xchg (bad) sti sub xchg (bad) cmpsb (bad) sub pop push mov xchg (bad) insl mov sbb pop jle cs jge sub loope in vmovsd or (bad) pop jns loop jns cwtl sub (bad) std out push (bad) jno scas insl rex.X rex.WXB pop mov sub (bad) jno xor fbld mov repnz (bad) in sti fucomip sahf out jmpq cmpsl insl js (bad) jns jnp add cmp adc repz out adc ljmp mov sbb scas sub mov out repz rex.RX jle cmp pop (bad) cmp cmp pop cwtl icebp jo cmp (bad) gs xor mov xchg mov divl jg data16 scas push repnz mov leaveq and pop jae (bad) sbb in and pop sub fst pmaxub adc enterq jle addr32 (bad) fwait retq add pushfw or push sti data16 repnz scas loope test rex.WRXB jne movsb xchg rex.WXB test idivl add mov lods sbb add (bad) and mov pop mov and out js sbb sub test ss add (bad) jns mov hlt mov sub jg sbb fldenv out mov rex.WRX lea or pop subl jne sub insb ds fldt (bad) mov test rex.RB mov sti loop and jp fs xchg mov jnp (bad) in movslq fldt rorl jg mov sahf in mov adc sahf jrcxz jae leaveq pop mov adc cld fldcw test js rex.WXB rex.WRX jp xchg rex.WX fucomip rex loopl cmp jle scas push jne in fildl adc lret (bad) mov push fstpl mov pop jne and (bad) lret test (bad) xchg cmpsb rolb adc xchg shr (bad) outsb cmp mov cmpsl (bad) xor sub repnz sub add jge jl cltd test lods test jno (bad) sarb mov insl int3 divps sbb rex.WXB rex.RXB imull ds rcrl (bad) std movabs cmp sub pop fs leaveq adc pop pop fisttpl es roll jmpq mov jmpq mov add cs rclb xor (bad) mov jns push out cmp mov in and mov (bad) or jo jbe sbb flds rex.W idivb xchg sbb push mov shrl rex.WX sbb pushfq push mov sbb fnstsw lods xchg xchg jo rex.B lods mov mov mov or frndint scas xor pop sbb iret jle xor fistpll cmp mov (bad) stos jmp ds mov and jle cld (bad) (bad) jae retq lret cmp pop jl rex.WRXB xchg (bad) (bad) pushfq jle sar negl adc pushfq test sbb rex.W mov test shr (bad) (bad) in in or test and fisubl je sub jno (bad) gs mov test clc xor cmp loop and add repnz jo jns (bad) movabs in lods lods sbb rex.R je cmpsq in xchg fsubl jae pushq rcrl fimull addr32 fdivr mov mov (bad) callq xchg imul and (bad) sub mov fisubrl and xchg clc adc movabs jb add mov idivb retq psrlq pushq imul mov fiaddl jo (bad) fdivrl lret pop js pushq and in (bad) outsl pushq js pop add fstps mov pushq je (bad) and out pushq je (bad) mov sti gs pop or stc pop mov jp pop cmp dec ja jle loope jl es (bad) cmpsl (bad) (bad) (bad) push outsb jae je jp (bad) or clc subl adc jle jmp xchg in xor movabs mulb out loope xchg leaveq sbb divl fnstenv rex.WRX jne andb xchg or mov js jg movabs jo (bad) pushq insl fildl mov adc (bad) mov xchg data16 xchg (bad) or and ds (bad) in in (bad) push jl or add add ss stos xor jne (bad) (bad) test jae xchg lret insb jle lret mov mov movsl pop lahf (bad) repz (bad) mov fstpl hlt (bad) (bad) (bad) (bad) ljmp cld mov jne mov sub fist xchg xlat jle orb fmull (bad) insb (bad) fsubrs lods and jmpq cld xchg jns jp mov xor add pop fdivrp repnz pushq rex in rex.RXB rex.WRB repnz rex.WRX je divl jl (bad) (bad) rex.WX idivb jl (bad) push jne (bad) jbe (bad) mov jb ss (bad) jbe (bad) (bad) mov lret std mov rex add retq movabs je sbb out and xchg (bad) (bad) (bad) pop out xchg popfq sbb test add rex in xor push cmp fidivl jbe imul rex.WR jmp mov push jo or push xchg (bad) fistpll scas pop mov jle cld (bad) (bad) insl icebp pushq clc enterq pushfq rex.WR rex.WRXB xor xchg lret sar callq jbe sahf jge mov cltd outsb rex.RX (bad) pop rex.B jmp icebp iret ds rex rex.WRX mov cltd insb pop (bad) loop pushfq rex.X repz movabs rclb xor rex.RXB jle sub pushq xchg mov insb imul sub fsubrp mov xchg rex.W rex.WRX or je int3 int3 sbb (bad) jl test sbb and cmp (bad) jbe jns (bad) push xchg (bad) or push (bad) jae loope jo (bad) mov (bad) in (bad) hlt jns ja loope jno sti pop rex gs cmp pop lahf mov jl pop rex.B imul jl sbb (bad) xchg shll push (bad) test or and jae sbb jnp sbb (bad) sbb add push stc incl stc sti insb jbe mov (bad) jle jle out (bad) rex.RX out pop loop lret jo mov jo mov jo mov jo movabs shll jp jbe outsb push mov fbld mov mov jmpq loope lock lock movabs jl (bad) adc fistpll out fild (bad) mov mov retq (bad) (bad) cmp cmpsb (bad) sub xor lahf xchg and cmp sahf add movslq push cmp scas rex.B repz sbb and rex.WR out fistpll mov in iret scas xchg lock rex mov jns lret jmpq incl addr32 xor cwtl xorl cmp (bad) push xlat sbb push (bad) pop retq lahf pop pushq jns repnz clc (bad) enterq insb imul int3 je add (bad) (bad) (bad) cmp out cmp pop xor ss sbb notl in std jle xchg std xor loope cmp cmp outsl (bad) sbb (bad) mov fistpl and (bad) xchg callq add and push loop rex.RB movabs push mov push retq adc xor pop stos push insl je enterq std add xchg mov jge fdivrl pop cld jae rex.W lock shll push (bad) mov or out fstl jnp shrl (bad) scas fs repz push cmp rex cmp mov mov (bad) sarb rorl or or iret xor lret (bad) pushq scas sub divl divl leaveq mov pop fsubl rex.WRX xor or (bad) sahf popfq rex.WRXB mov cmc xor clc (bad) lock (bad) sbbb vpcmpeqb (bad) mov rex.B insb mov push fs test jo (bad) cli ja mov rolb pop sbb fcomip push jrcxz loope cmp fbld mov rcr clc in enterq hlt pop cmc (bad) or push std jge,pn sub (bad) insb mov sahf rex.WX push rex.WXB ss rcrl push mov subl jo mov (bad) jmp outsb je push (bad) fucomip jbe xor xchg sub xor pushq pushq (bad) jp xchg pop jbe xchg sarl ss sbb xchg mov pushq push (bad) lods pop jnp jmpq (bad) mov cmp jnp stc cmc jnp (bad) mov rex.WRX or jns (bad) jo mov in fstp scas pushq and (bad) push sarb ja xchg fbld (bad) in cmp notb (bad) cmp out sub push mov scas xchg test xchg ja jl rex.WXB xor cld xchg rex.WR (bad) jl xor sti cmp xchg jge xor insl (bad) sarb push std sbb jg mov mov rex.B movslq loope js mov cli mov hlt sti (bad) rex.WRX jp,pn jne sti clc and (bad) jnp movabs pushq cmp sti or movsl sarb sbb rex.X rex clc xor jmp test adc rex.RX pop pop cmovno fcoml and rex.WRX rex.X pop sbb pushq incl outsl cmc out nop/reserved stos xchg cmp rex.XB cmc jp (bad) (bad) std push xchg xchg and mov fdivs jne xchg data16 enterq movsl xchg ss (bad) sbb xchg mov (bad) or ljmp std (bad) lock jmp pushq loopne mov fsubs test int (bad) xor shrb (bad) vpslld xor movabs pmulhw pop (bad) imul mov add fdivl (bad) nop jbe fdivrs cmp imul cmp cmp add scas (bad) repnz cs rex.WRXB push insl xlat mov xchg data16 and scas ss rex.WB test sub (bad) iret sbbl xor or (bad) movsl and pop cs sbb sahf xchg movabs leaveq mov mov fadds or stos fs clc push and loope mov pop (bad) popq cmpsl (bad) js (bad) pop sub fisttpl (bad) xchg in pop sub mov (bad) in push mov add sar pop pop fimul ficomp (bad) jne mov cmpsb push ja mov and (bad) or subl mov in (bad) cmpb (bad) or push lret mov add xchg xor int3 rex.W pushfq (bad) sbb std add in or pop movabs pushq imul mov mov idivl vmovdqu16 add pop jg (bad) xchg leaveq rex.R rex.RB xchg test sbb notl lods (bad) cmp loope mov out push movslq jno stc lods leaveq sahf jmp pushq (bad) jb in adc push pushq stos push imulb fsubrl sbb js (bad) jmpq rex scas rep rex.WRXB stc and sbb (bad) rex.WRB out rex.XB testb in fbstp mov lods cmpsb mov (bad) cwtl push push xor rex.XB add pushq scas sbb mov lret idivl mov je movsb push cs ja out and lahf and (bad) gs lods jmpq xchg jge fwait cmp xchg imul fsubl incb xchg leaveq xor jmp jae pop mov push xchg rex.WX adc scas sub rex.WRB pop adc (bad) cmpsb pop pop xorl or rex.WRB rex.W rex.W sub and adc rex.WRB jb jp mov out movabs xchg (bad) sbb and rex.WRXB nop mov jl out sub (bad) fsubrs pushq test fldenv loop sbb pop pushq pushq out (bad) push clc xor mov (bad) sbb cmp mov cld xor (bad) js (bad) seto mov icebp (bad) cmc rex.RXB (bad) xchg jg incl adc rorl insb stos (bad) sub rex.WR retq flds xchg xchg cld pop mov out xchg add (bad) xchg movslq fcomps (bad) icebp (bad) lret js out idiv adc lahf xor fisubl mov mov int3 fsubrp jne jnp scas (bad) cmp jbe xlat rorb sub xchg mov jl imull (bad) sub (bad) (bad) jg push and cvtpi2pd rex.WRB cmp repnz (bad) (bad) jge adc outsb xor push sbb sahf shrl xchg fadds jmpq or mull clc cwtl or push imul movabs or (bad) push adc je mov rex.WXB sbbb (bad) pop pop sbbb mov push negl jl jmpq jno mov sahf stos (bad) insb mov loop sbb (bad) pushq or imul push rex.WX xor int js icebp movabs data16 jns pushq je mov pop and (bad) movabs sub std clc mull je fiadd push push cmp (bad) (bad) repz sar in pop pop cmp adc cmp push (bad) pushfq jae push cmpsl retq (bad) fucom push hlt (bad) xchg outsb pop xchg in (bad) repnz push addr32 (bad) add lea (bad) lret (bad) shrb xchg loopne xor (bad) add mov mov icebp iret xchg sahf retq test shlb rex.WRX movabs lret (bad) mov xchg addr32 es rex.WRB mov insb stos adc insl xchg mov insb cmpsl mov rex.WXB outsl cmp xchg pop pop rex.WXB (bad) fwait out int3 mov (bad) ss or imul mov jns movabs sub push add movslq (bad) mov outsl (bad) scas stos mov pop mov (bad) (bad) int3 (bad) (bad) sbb test cmp xor sub mov out in and mov (bad) mov or xor (bad) insb jbe imul loope movsb movabs in stos mov pushq shlb scas cmc insl test rex.X int3 (bad) xor cmp xor push lock cld pop pop (bad) cld test insl imul xor jmpq insb (bad) jo jmpq or rex.WRX movabs jb pop push mov jns mov fstps fstps cmpb jnp (bad) shl frstor jl callq jp andb rex.B movabs lahf xor mov (bad) jae and fdivrp mov scas jnp (bad) jl sbb loope mov sub rcll (bad) movslq sbb mov imul rex.XB addr32 pop rex.WRB cmp nop mov (bad) jne sar sub leaveq (bad) or push and (bad) xor push cli adc addr32 imul and mov and shrl mov gs xchg ds rex.X sub lock fild xlat adc pop xlat bnd pop cmpsb (bad) mov xchg and cmpsb (bad) stc (bad) mov je add sub gs sbb pop rex.WXB ss loop xor (bad) mov outsb xchg test lods shrl int pushfq push sub sbb callq mov callq fcmovnb in (bad) out rex.X (bad) imul rex.RXB ficompl jbe addb mov vaddsubps add (bad) (bad) xchg scas sahf add xchg out pushq loop fucom rex.WRX cmp pop push scas ja data16 cmp jnp mov xchg (bad) mov int rex.WR rex.WXB rex pushfq rex.WRX sub outsb ror test std mov or loopne sbb push mov es popfq push rex.WB (bad) mov cltd or (bad) (bad) jns mov movabs data16 ficomp or and xchg sub cltd repnz lods xor idivl xchg loope callq cld fildll lret loopne (bad) and fdivl (bad) cmp (bad) scas xor test je lock or js cltd movabs out adc pop pop movslq fist pop outsb jae subb (bad) add rcr (bad) cmpsl cmc jbe and mov (bad) jp xchg and (bad) xchg in sub or addl pop jmp rcll (bad) movabs pushq int3 cmpl (bad) lahf push retq lret notl ds addb adc insb loope jg rex.RXB add fisub rex.WRXB stos pop sbb (bad) or hlt pop callw getsec jmp in sbb (bad) scas callq adc jl std (bad) push pushq cmp mov jmp add ja (bad) and rex.WX movabs out je pop sbb sbb repz xor rolb imull (bad) xchg test movsl mov jbe popfq sub (bad) in shrl (bad) icebp xor fwait movsl stc std sbb rex.B and cmp ja jp cwtl and (bad) cmp and jnp (bad) rex.WB (bad) xor rex.WRX fdivl rex.W sti outsl in add roll retq movslq sbb nop jrcxz and cld (bad) repnz lock cs andl jb rex.W adc sub pop and push jle rex.WB addr32 fstpt int3 sbb mov adc mov rex.B sub xchg push (bad) fldl and xchg (bad) mov sbb (bad) in and (bad) sarb xchg loope add movl add mov (bad) sti jbe test in fisttpll addr32 xchg lods adc adc xor xor sub rex.X pop in loopne callq mov xor mov (bad) push outsl (bad) or sbb movb test stos cmpsb mov std gs add jle jl leaveq push mov fwait sub cmp mov repz retq fwait loope loope scas jp ja (bad) rex.R imul or (bad) xchg mov xor rex.RB movsb xchg (bad) (bad) rex.W rep cmp pop outsl ss jmpq sbb (bad) jnp (bad) mov jmpq (bad) cld movlps jmp js (bad) lods out rolb in retq cmc rex.RB cmp mov (bad) sub out pop getsec lret es sub sbb adc lods sub mov pop (bad) stc push rex.R jmp adcb cmp pop add (bad) (bad) and imul outsl (bad) int js sub mov mov (bad) push (bad) test xchg iret (bad) test test push test js rex.W mov cs test sarb mov jnp and xlat mov push mov push mov or loop test lods (bad) rex.RB rex.B ss mov or xchg pushq jne xor lods rex.WXB jge (bad) xchg sarl imul pushq pop stc (bad) mov jle (bad) xor jmpq cmp push mov (bad) adc cwtl cmp cbtw (bad) cmovl mov incb js sub (bad) pop rex scas add fistp jg addl cmp add jp insl stc test mov push out in std rex.B int3 lods jmp in (bad) movabs test (bad) je sub jg (bad) pop std insl lret rex.R jb,pt insb std push sahf sub (bad) lea sub jp cmp xchg jbe and jo cld adc (bad) lods jb sarl jo add rex.WRB jp ficoml and mov test sub adc pop movabs mov (bad) (bad) testl mov mov lahf add jge sti sub add scas (bad) or cmpsb xor jrcxz (bad) out jb lahf lods gs jmpq (bad) ds pop mov mov xchg add add test pushfq (bad) and lock movabs and mov pop mov rex.WX out int rex.WR ds (bad) fisub in xchg and or mov fildll or (bad) adc retq cmp stc (bad) fs pop jmp (bad) repnz addr32 sub ja (bad) lea data16 mov xchg ficompl push hlt sbb cwtl fimull rex.WRB rex.RB pushq xlat (bad) jo xor fmul nop sbb (bad) xchg rex.WRX outsb cmp imul and fnstsw scas cs and cmp (bad) fxch adc (bad) clc (bad) insb (bad) adc imull adc js cmp rex.WR (bad) pushq scas rex.R sti mov fldt shll in jmp mov and adc movabs add lods mov push fistpl xor fwait insl and test jno sub mov mov jp sar rex.WRXB and (bad) (bad) and jp movabs popfq jb jnp mov jno lret shrl (bad) icebp mov je jb lock mov lods lods mov mov sub cmpsl loopne scas jae rex.WXB mov rex.WX cmp jns and clc adc fstps lock sub push rex.WRB add (bad) (bad) jle pop fs outsb sbb repz cs xchg sub cmp imul movsb pop mov sbb or pop addr32 push sbb jnp retq rex.RX outsb (bad) mov ds pop mov jae scas fisub jb out add notb (bad) (bad) callq (bad) outsb jb clc sbb (bad) xchg (bad) (bad) (bad) sti lret (bad) hlt rex.R movsb (bad) fimull jrcxz pop add cmp (bad) (bad) and cmp rex.WRX mov mov jl mov mov pop pushq (bad) xlat push leaveq iret sti out sub shlb xor fbld enterq jge scas add rex.W cmc jg icebp sbb ds jbe cmc push adc sbb rex.WRX mov nop (bad) push in rex.WRB pushq xor movslq and sbb addr32 jmp mov (bad) fsubrl push pop and (bad) adc mov fs jge pop pop xchg sbb int3 or xorl cmp mov (bad) retq xchg xchg xor insb callq js mov (bad) cmp rcl test pushfq cmp decb sub xchg mov (bad) cmp jns adc icebp fimul lods xor imul and notl cmp (bad) stos (bad) xor loop lret movabs (bad) mov and lret sti cmc pop ja movsb (bad) (bad) mov pop mov mov jo scas sbb adc push mov (bad) scas loopne (bad) (bad) sbb cmc add pop loopne faddl pop mov movabs repz addr32 cmpsl rex.RXB cwtl sub pop and ja cs xchg movabs ficom in pop frstor sbb retq or (bad) pushq fsubr mov jmpq cmp or mul fildl adc lods (bad) xchg pop jmpq rex.WR (bad) (bad) jbe in sub jmpq (bad) imul (bad) clc cmp adc fsts rex (bad) jnp outsb outsl insb sbb jbe movabs mov xor (bad) rex.WX mul (bad) jmpq sub and lret loopl es jbe add or (bad) leaveq hlt or rex.RX pop sbb (bad) in js mov (bad) and mov jg cmp xor xchg pushq sub shlb (bad) (bad) cmc in and jge cmpb (bad) mov rdmsr jle cmpsl adc mov add add jnp imul (bad) (bad) push push mov jae mov test mov leaveq movslq outsl (bad) pop pop or mov in repz sbb (bad) cmpsb sub pushq sub addr32 in cmpsl scas push and adc xchg std cmp (bad) jo (bad) test add ja retq mov rcl (bad) rorl lock pop fadds sbb pop pop test mov negb movslq (bad) pop cmp pop sub clc retq clc sbb (bad) movsb (bad) xor pop (bad) xchg or push ja lret or callq imul int push fdivrp pop cmp cmp jno cmp andl jo (bad) jns leaveq add clc test xchg jmpq (bad) movslq sti ficomp js (bad) fisub mov mov cmp and pop mov rex.W rex.WRXB fwait callq imul xchg sti scas (bad) or scas xchg add (bad) rex.WB ja in pop retq (bad) cmpl xlat (bad) cmc pushfq fsubrl cmc (bad) add cmp mov sahf or retq test jns callq mov add lods xor js fstpt fidivr adc test rex.RB scas hlt xchg sub insb mov notl cmp sub outsl fwait loopne jge (bad) ljmp rex.R out xchg scas mov cmpsl pop fcomip lods js mov pop or lret outsb pushq (bad) adc hlt xor jnp data16 mov rex.X cmp xlat push pop push mov fwait or movslq sub sahf mov and pop insb stos adc (bad) (bad) sahf adc vpmuludq (bad) incl cld retq (bad) adc add (bad) mov jno xchg pop incb (bad) movsb vandps jl or jb out jo sbb (bad) cmp (bad) rex cmp outsl rex.RX and cs pushq jbe jle add movabs cli jp or rex.WB sbb (bad) hlt int fwait mov rex.WRB (bad) mov rex.RXB (bad) retq cmpsb xor out (bad) out bnd nop mov loop orb nop rex.WRXB rex.XB mov in fucomip jno pop xlat pop in out outsb cmp cs notl add jmp shrl shll mov shrb and mov mov jno (bad) test (bad) rex.WRXB iret sahf lods shrl xchg rex.RX jns (bad) jmp sbbl and mov lret addr32 (bad) pop insl stc pop push mov adc pop imul and cwtl cmpsl add adc or std mov je xchg (bad) gs (bad) (bad) fnstcw and pop add out add jmpq or jle sub (bad) mov or (bad) cmpsb in (bad) data16 scas cmp xchg xchg (bad) xor mov sbb adc mov out test mov sbb add push subb rex.W rex rcl enterq out add (bad) retq cwtl mov xchg adc push adc mov mov sbb mov sbb sahf xchg cmc pushq sbb mov outsl pushq cmp or jb scas mov fyl2xp1 pop gs mov cld outsl imul lahf outsb push pop and out or (bad) movabs outsb in stc jmp rex.XB mov (bad) cli imul pop sar sbb cmpsl jbe mov (bad) push (bad) cmpsb (bad) fdivl xchg fbld ficom fs jp rex.WRB add adc and sub or test ficompl push mov rex.WXB out (bad) jrcxz xchg outsl imul fcmove stos mov jmpq hlt (bad) cmpsb (bad) addr32 repnz pushfq insl scas out out lahf lods pop (bad) mov mov repnz xchg xchg pop jnp rcrl rex.R repz loopne ljmp (bad) cmpsl callq mov cmpl insb callq mov push adc or add add add (bad) pop sub out cmp jno data16 xor outsl mov sub sub insl ficom mov add xchg xchg (bad) mov es imul js movabs loope repz cmc adc and push (bad) sahf add mov in mov shr xchg faddl mov (bad) fldl xor fsubr fist (bad) adc addb cli pop movabs (bad) lods js scas clc lahf (bad) popfq (bad) stos jo stc jb rex.B (bad) fimull sbb js rex.RB and pushq out (bad) int3 jae jno cs pushq imulb sub cmp out mov add (bad) pop cld or jrcxz xchg jp adc js ss std pop xchg stos jl scas lods push mov ja (bad) movsb cmp (bad) (bad) out iret (bad) jle scas sbb jno add cmovle jnp lahf insb push lcall test cld rex.XB xor push mov testb rex.WR movabs mov flds pop (bad) mov (bad) (bad) jno rex.WX cmp (bad) out rex.WXB repnz sbb (bad) vmaxps mov jns mov fistpll sbbl or mov rorl adc push scas shlb cmp (bad) and out sub cmpsl or jbe loope xchg jmp xchg loopne (bad) mov mov pushq insl in jo je ds push cli gs mov outsl (bad) (bad) iret jns sbb (bad) pop sub or mov xchg sub sbb mov sbb mov xchg jp fs sbb movslq (bad) lock retq jmpq xor outsl (bad) sbb mov cmp scas mov stos sbb (bad) fnstsw rex.WR sbb sbb rex.WR push out lea xor mov outsb jrcxz ficompl mov movabs push xor outsl outsb movabs lock jbe frstor push mov (bad) js fisubr gs imul rex.WX lahf rex.X lods xchg movsb mov out movabs mov mov push fist xchg pop sub adc lahf push or (bad) retq rex (bad) pop mov or sub push (bad) mov test fild add cli (bad) and lahf rex.R add ds mov cwtl scas outsb sbb fwait (bad) or movsb jrcxz fcmovb cltd mov jle callq (bad) lods jae (bad) repnz in in lock scas lock (bad) imul orl in add pop and scas mov rex.W sahf pop insl repz xor xor jle xchg imull mov xor in cmpxchg (bad) (bad) add loopne movabs mov or in scas fs rex.RB pop jnp jae rex.RX jle loop adc xchg in xor or (bad) and mull cld out iret cmc (bad) jle (bad) fadds push jbe push sub pop cmc ficom movslq fs add gs (bad) mov (bad) mov xor jbe fistl rex.WB insl and loope mov (bad) rex.W rex.X cmp rex.X int nop pop (bad) jp (bad) jl lods outsl sbb pop rcrl outsb mov rex.RB es scas sbb jg sbb rolb jle movsb outsb imul (bad) fs (bad) sbb mov scas pop jo pushq pop insb rex.X or (bad) pushq int3 insb xor enterq add sahf sub addr32 in mov cmpps clc testl movabs adc cmp pop std in sarb sbb (bad) pop iret stc adc out test sbb (bad) rex.RX ss adc cmp push (bad) es pushq rex.WRX std cli stos scas xor and push lods (bad) retq fcomps cmc jmpq xchg neg mov cmp (bad) add pop sbb movabs xor and push jae lods sbb push and scas (bad) movsb lahf movabs push imul jnp push std or test (bad) jl fldcw scas mov or ss rex.RXB sbb insb idivl ds (bad) push in push or pushq addr32 (bad) pop push push cmp jbe scas sahf movsl (bad) cmp xor out sbb adc add addr32 (bad) mov push mov icebp gs cwtl jrcxz mov divb mov rex.WR lock xchg popfq rex.WRX mov repnz add adc xor (bad) imul rex.B mov ds push rex.WXB test test (bad) sbb (bad) pop jae and mov out jb shll xchg or ficomp (bad) jo (bad) pushq pop cmp shrl xchg rex.WRX rex.WRX rex.WRXB movabs adc nop std mov out and mov out rex.B repz adc mov mov xchg jne pushfq addr32 roll outsb push (bad) mov test (bad) insl jbe sub out rex.RB negl rcr cmp mov cmpsl sub pop je fisub outsb (bad) rex.WRXB popfq subb imul and mov repz cwtl mov pushq cli mov mov (bad) (bad) cmp movabs or mov lret hlt addb cmp pop adc mov xor xchg lea fimull cmp rex.W and rclb outsl mov sub xchg xchg cmp push xchg (bad) fcmovbe imul outsb std sub rex.XB cmp adc pop jmp std xchg iret cmc imul pushq sahf std out push and out icebp rex.WRXB insl sub rex.WX shrb enterq cmp adc out jno (bad) mov fildll push rex.RB cmp xor sbb mov callq mov xor jne (bad) cs movsl rex.X fistp fnsave insb adc or sbb jg xbeginq test sbb test adc cs lods mov sbb cmp shr stos jp jnp rex.WRX xchg jle jo out pcmpeqd sbb xorb sahf lret sub (bad) push ja push cli movabs jo (bad) not not adc rex.WXB (bad) loopne and fbstp iret (bad) (bad) hlt adc loopnel add int mov icebp cmp rorb retq mov out pop ja (bad) (bad) out cmp hlt cmc jg ss nopl (bad) pop adc pushq rex.WB rex.WRX and rcrl xchg (bad) (bad) cmp in fadds cmp push pop xor mov push cmp xchg mov (bad) stos xchg (bad) cmp (bad) (bad) mov xchg (bad) (bad) notl out lret sbb sbb rex.WR divl pop sub pop add jle or mov imul mulb cmc out data16 std (bad) test (bad) xor gs int3 lods jp jg shrb push push js mov out add pop pop cmp rex.RB cs or callq data16 cmp rex.R rex.B rex.R cmp ja add jbe jg mov jl push pop js (bad) mov (bad) pop push and xchg adc jbe pop ja out mov cli sub ja and ss adcl lcall (bad) rex.WRX out popfq sarl (bad) (bad) pop int3 mulb mov movabs pop addl sub out add rex.WRXB rex.RX xchg rex.X data16 rex.RX jbe push pushq sbb pop jno push out movsb mov cwtl test mov (bad) xchg movabs je leaveq cmpsb xor and or xchg (bad) mov jle clc test pop adc scas rex.XB pop retq callq (bad) testl ja jns push push mov and fdivs imul adc imul imul repnz xlat (bad) (bad) xchg retq (bad) outsl (bad) in or outsl ja mov cmpsb imul push retq mov jns sub (bad) jnp add jne pop jo (bad) es rcll rex.X jnp cli mov mov sub rex.RX gs in fistpl or or cmp add js pop ror fistpll mov movsb push out sub repz stos test xchg and (bad) push mov xchg cmp mov ror jge in and stc jo (bad) std pop xchg js (bad) std cmp jne (bad) jno sbb or movabs scas callq push (bad) andl rex.WRB cmpsl or (bad) jmp sbb fbld jle js in sbb nop cmc pop and rex.WR rorb mov or lods jae jns scas (bad) xorl mov sub and (bad) sbb (bad) insl jb stos cmc rcr pop push cwtl xchg cmp (bad) adc lret pushq testl mov sbb (bad) xchg insl mov push ja mov fdiv sbb xchg loope outsb sub scas xor mov lods (bad) sub imul int3 fldenv ja (bad) mov (bad) icebp repnz movabs notb repnz push jns test out fistpll push mov jnp adc in jne mov pop rex mov pop fmuls jo push and sti add sbb cmpps (bad) jnp cwtl mov (bad) adc int xchg lods out pop (bad) rex.RXB sbb jl (bad) and (bad) sub rorb (bad) insl mov sbb int3 xchg jo cmp cmp push pop imul fadds mov lret jle sub es mov in jrcxz adc (bad) mov frstor jns decl or xchg js rcll cmpsl movabs (bad) adc movslq jmpq (bad) movslq divps pop (bad) imul jmpq scas rex.WRB nop std fwait cmpsl sub jl test pop adc scas movabs mov (bad) fld fmul stc rex imulb ficom mov mov sub (bad) repnz and rex leavew out jrcxz xchg xchg mov imulb jmp out push enterq push fadds mov retq pop test retq sub scas mov pushq mov xchg (bad) lret xchg xchg jmpq bsf add mov callq jmpq add pop sbb cmpsl (bad) push out pop ss scas movabs lods or fdiv imul (bad) ljmp ss repnz xchg (bad) rex.RXB mov mov loopne push jno and rcrl (bad) (bad) nop add mov rex.RB (bad) mov pushq rex.RX xchg rol rex.WXB js rcrb and jbe std or mov mov (bad) negb ja out fbld jle fidiv rex jle rex.XB es mov mov pushq callq cmp xor and xor (bad) mov jp fistl add (bad) cwtl xor sub and fmull lods cmp fimul icebp std and dec sbb gs (bad) mul movabs xchg mov fimul std or mov sbb jb (bad) (bad) pop js and push xchg (bad) nop (bad) mov lahf insb mov rex.WRB ss add subb or mov ss rex.RXB ja mov pop xchg fnstcw push ficompl cmp jl out jo insb scas out jo (bad) fmuls xchg fdivrl js js movabs pop mov rex.WXB rcrl xor push movabs ja xchg movabs pop (bad) (bad) adc vandps xchg (bad) fistpll addr32 pushq jg jns ja shrl mov xlat mov scas push pop mov xchg or sbb loopne scas xor rex.XB cli retq pop mov out pop fstpl jmpq rex.WXB in (bad) lods and fisttp cmp lods pop pop hlt movabs jns mov je in int and mov sbb jno outsl mov jg or insl repz jmp mov retq or sub fdivr xchg outsb js mov pop jb jl movsl cmpsb out lahf (bad) lea xchg jp mov pop (bad) jl sahf (bad) and sahf scas rex.R jrcxz ja pop cwtl and rex.WXB rex.WRXB rex.WRXB mov pushq push movabs push add pop jl or xchg popfq in in fs rex.RXB mov (bad) jle jnp (bad) fwait stc lods retq (bad) xchg (bad) (bad) xchg subl add add xchg retq out sub ss (bad) test and fs pop outsb mov mov add rex.WR sub movabs add in xchg out es push mov or and outsb jle cltd jne scas mov xchg stos xor pop and jrcxz rex rex.WB (bad) xor add outsb xor xor cmpsl int jle stc jmpq mov pop test or cmp (bad) pop xchg rex.WB sub pop lahf pop push xchg (bad) push or mov fnsave (bad) pop adc cld lods (bad) and or sub js mov clc movabs or mov cli cmp movabs iret (bad) imul (bad) nop (bad) sahf mov (bad) (bad) cmp xchg incb cmpsl jno pushfq shrl (bad) adc xchg rex.W xchg outsl nop popfq mov (bad) mov mov xchg outsl andb (bad) fwait or xchg pop inc pop cli rex.WR rex.XB xchg movabs mov (bad) cltd mov icebp xor stos rex.WR lods fiadd cld mov in imul icebp jg xchg fs out (bad) imul retq clc rex.WRB (bad) pop lret enterq sar jbe jmpq (bad) or fcmovbe gs callq hlt jae cld sub stc adc fwait jb test adc (bad) outsl rorb stc mov (bad) pop test in rex.B outsb (bad) push xchg and sbb mov imul (bad) scas sub rex.WX (bad) adc jg and lahf push pop cmpsl outsl xchg callq jnp pop jl rex.X adc pushq rex.X jne iret cld lock push add insb rex.WR mov out test (bad) sub rex.WX gs jne fs movabs mov xchg and je fdivl (bad) jmpq stc repz push push repnz (bad) sahf (bad) jno sahf push push rex.WRXB (bad) mov cli rcrl hlt movslq jnp mov xor callq negl xchg cmc pcmpgtw pop and fs (bad) iret int (bad) imull data16 lea pushq adc pop lock xchg (bad) rex.WRX popfq in rex.RXB mov in pushq rex.X imul adc retq (bad) mov iret sub rex.W out pushfq mov xlat data16 adc cltd mov insl mov fdivs movsb mov retq mov jb cld (bad) jo mov push pop sbb sti jg (bad) int3 jl adc (bad) rex.WRX push (bad) in xchg jbe mov xchg push (bad) (bad) movabs out testl (bad) push jno hlt jg pushq mov push sub (bad) (bad) fstpl cmpsb or (bad) movabs (bad) cs fistpl rclb adcl push outsb rex.WX repz cld iret rex orl push or jrcxz (bad) xchg xchg in std fistp (bad) and xor decl cltd mov sbb jl cmp (bad) jae pushq rex.WRB rex.WRXB rex jne push pop mov rex rex.WX jo imul (bad) jl mov pushq stc sbb mov mov or jns jne jp sbb rex.RX jnp mov jge mov fcoml pushq jns addr32 in sbb js out jg mov jne sti jo in push jnp mov xchg (bad) cwtl mov pop jns (bad) cmc test ficomp mov and stos js cmp pop fistpll icebp jrcxz rex.RX rex.WR fidiv ds xor icebp jg lret rex.RB cmp scas notb and (bad) sbb jo in rex.WXB rex.WR xor xchg lods cmp and icebp pushq stc xchg (bad) nop sbb mov jb adc rex.RB xchg push pop js in leaveq imul insb jp movl cmpsl sbb pop jle cmp rex.WRB imul test imul sub xor sub jge outsb pop (bad) push lock fdivs hlt leaveq cmpsl js jnp in and xlat (bad) retq lahf out (bad) (bad) hlt jg pushq (bad) movabs sub rex.RX popfq xor sub fldl negb xchg (bad) sbb mov pop iret add shrl test je rorl cmp std or lahf test rex.RXB or rex.RXB addr32 int3 (bad) divl negb iret sbb cld (bad) std gs shl rex.W (bad) push js pushq xchg cmpb jge je jle ss imul xchg sub pop (bad) (bad) (bad) or mov fwait jp movabs pushfq xchg rex.RX xor test mov notl sub jo ds (bad) sub (bad) retq mov push sbb (bad) xor (bad) xor mov fadd cld mov jle mov (bad) (bad) jl fucomp jp cmc out js (bad) out jbe es je ds jb push in or out or fwait push pop fs in mov cmp jl orl (bad) repz xor sub jg (bad) out cmp loope add push xchg pushq rex.RB add (bad) xor or ja fdivrl (bad) pushq mov push clc (bad) callq ds lea and sbb lods (bad) and xchg shlb (bad) push addr32 vpandn jne jno lret xchg or fidivl rex.WB imul (bad) mov jnp (bad) xchg jl adc jb hlt repnz in divb pop (bad) scas and hlt scas mov sbb addr32 test (bad) lahf loop sti (bad) add js lods cmp mov je mov lret iret pop (bad) pushq lods test sub rorb fbld push scas insb ja imul addr32 and scas xor jo pushq xor rex.WRXB icebp mov rorl fildl and pop (bad) (bad) xor out jl (bad) xchg shll mov lret rex.RX lock scas cmpsl push ds jle mul mov hlt jo push out shll cli pop jp sub rex.WRB fsts js (bad) insl cmc scas std fsubr mov sub cmp xchg fstpl mov push cltd fs lcall (bad) outsl jne roll jae or cld rex.X and fist test (bad) push xchg xor mov (bad) rex.WRXB xor (bad) cli sub test fbstp sbb push fst imul xchg jo loope sbb fildll sub jne cs and outsb sub out jnp cmp sub insl vcvtss2si pushq (bad) fist fdivl out (bad) out stos cmp add fist pop pop imul xchg (bad) test mov cmp rex.RB ds jmpq xor in (bad) stos (bad) ds (bad) (bad) cmp lahf rex.W lods or jno lods or (bad) scas push xchg out jge (bad) int scas icebp adc addr32 cmp add fnstenv fsubrl (bad) xchg shrb (bad) imul stos cmc fbld (bad) pop mov (bad) in push sar xchg xchg fnop testb pushq (bad) lods outsb pop shll pushfq add hlt movabs hlt jl xchg mov jle std (bad) test cli pop sbb test psraw loop push cld lods or pop and or or push mov mov sbb (bad) mov (bad) push mov mov in (bad) (bad) test xor (bad) loopne sbb outsb sub push sti jp in sbb (bad) icebp rex.RB scas std gs fbstp pop jle scas std lret jmpq mov (bad) pop insl loope jae stos out ljmp iret and cmp rex adcb cld out mov rex.WX or and adc (bad) xor pop mov and (bad) lods jl sub imul pop jo jg sbb jp adc (bad) (bad) (bad) cmpsb push insb neg movsl fisttpl (bad) mov jge push and in cs stc mov sub clc (bad) jmpq (bad) sti jo ja rex.WRX mov std (bad) (bad) jmp or cltd pushq addr32 jle test jb (bad) std insl xchg mov jne (bad) movabs fistl pop (bad) or cmp xchg mov fidiv popfq (bad) and (bad) retq (bad) icebp jmpq and (bad) and mov pop retq mov andb xchg cmp imul insb push and and div xchg imul (bad) fbld cmpsl imulb rex.XB (bad) rex.WR rex.W (bad) fistpl fs xchg sbb xlat (bad) push movsl fstps (bad) pushq cmp cltd fs xchg stos sbb scas mov xchg sti push insb loopne hlt std (bad) scas fstps fs fcoms cmp scas out (bad) or data16 out (bad) cmpsl insw (bad) xchg push (bad) jmp mov (bad) movabs (bad) (bad) pushq fdivr or and lahf xor jbe mov insl add rex xchg std lock jle rex.WRB mov pop add nop jne xorb mov outsl sub cmp iret and add sahf mov pop ja (bad) clc lods sub (bad) or cltd mov cmp rex.R (bad) (bad) push xchg (bad) int3 jge (bad) jbe xor fist xor rcll rex.WRX sub mov out lret cli push (bad) mov lods adc mov sbb (bad) cmp jbe gs test pop cmpsb cld mov cmc ja pushq mov mov rex.RX jg stos xchg in xchg and (bad) je (bad) fwait adcl mov push imul mov (bad) repnz cld jle lods (bad) insb fldcw retq (bad) pushq sbbb out outsb or xchg out pop lret faddl rex.XB pop mov push ja or sub sub (bad) mov adc movslq mov pop movabs and lret sub in mov idivl add jg (bad) or dec sbb xchg sti adc fbld cmp jne shrb (bad) xor scas lods push mov jmpq jmpq xchg jbe mov pop (bad) push pop insl adc lods mov js (bad) pop xchg icebp sub xor mov out addb jne (bad) movsb (bad) mov ja mov (bad) clc (bad) rex.WRX jg lods in pop loope or ss mov ds in insl cmc pop add movsb in sahf fnsave scas rex or fnstenv jne and pop mov outsb fisttp mov xchg xor vpandn or and (bad) rex.RB test push lcall xor shlb add ss idiv std pextrw (bad) loope adc sbb rex.WR test rex.WXB cs js jo rex.WRX fsts add sbb xchg jmp jmpq lock push rcr rcrb loopne rcrb clc mov cmp and mov cmp pop jo rex.WRX and (bad) mov fstp scas lods (bad) pop fisttp add (bad) cltd jb sub faddl out and xor push test jmpq outsb outsb (bad) rex.WRB push add sbb negb jg sbb and jp xorb mov lret add imul decb in jno imull xchg (bad) icebp push fwait (bad) std and pop jle lods je cmc xor ficoml rex.WRXB loope (bad) cmp sub cmpsb retq cmc rex.WX add cld movabs rex.WRX movabs out jl rex.W (bad) leaveq mov xor or out insb xchg pop js stc lahf jge fs push (bad) mov adc rex.WRXB (bad) notl mov or jge je lods idivb rcrl mov (bad) sar movabs insb cltd ss xchg retq (bad) rex jg adc nop rcr loopne jbe jne jbe insl in imul scas rex.RXB xlat es testl cmc (bad) jl (bad) cmpsl cli leaveq in push insb std mulb and fbstp lock fsubr xchg cmp dec sub cmpsb cmpb jl cs out (bad) (bad) hlt sub adc adc jge iret scas add cwtl (bad) xchg (bad) rex.WX rex.WR cmc outsl iret (bad) or rex.WRX fdivs (bad) lret out xchg (bad) ds xor fs fist test push scas jo lods (bad) in iret ja std je mov imul jo push in or insb mov rex.WRXB es je mov rex.WB sub loopne mov data16 in (bad) or in jns cmp and pushq rex.RX fadds (bad) test out and sub sub mov icebp pushq sub and push or xlat or and jbe mov in xchg fmull fs repnz std out pop fidiv rex.WB rex.X rex.RX jle jnp pop cld (bad) mov (bad) insl gs jo jl callq movsb xchg iret cmp (bad) jae jbe (bad) repnz sbb pushq lret js or jo insb sar mov (bad) fisubr roll mov outsl (bad) jbe int3 mov in jo movslq cmp mov outsl jno adc xor scas sar (bad) movabs lahf scas iret sti lahf insl or add fwait mov int3 (bad) fisub xchg cmc push rex lock fldcw and sahf sub sub or out push fcompl (bad) sbb sti (bad) cli gs and andl jg insb or mov (bad) negl (bad) sub cmp sub (bad) rcr or jb adc mov add cltd rex.R cld pop add pushq cwtl sub insl fsub loope retq (bad) in or (bad) jg xchg js gs (bad) insb stc sahf pop (bad) rex.WR rex.RXB jrcxz pushq fimull cs movslq stos mov test xchg mov (bad) ja sbb or jo mov cld out js sub in mov lods push add xchg (bad) hlt rex.X jnp rex.R gs jmp (bad) je test pushq push pop and (bad) outsb rex.WR mulb xchg addr32 outsl fisubr fwait lahf jnp adc (bad) in jl test out rcll sub scas jns rex.X sarl xchg mov lret mov fldt cmp leaveq je mov (bad) lock in push pop xchg iret cmp mov test fldenv sbb (bad) xor iret incb jle popfq mov pop shrb out jbe mov (bad) and add (bad) mov rcrb (bad) xor cmpsb (bad) adc jrcxz movabs ss imul rex.X gs (bad) lahf jg rex.WR mov outsl (bad) ss imul (bad) xchg rex.X (bad) or (bad) sahf insb in jge sti loopne xchg jae imul push test xor sti out rex.W xchg rex.WR sub mull pop scas rex.RX (bad) lret test rex.WR xchg or and mov cmp and insb mov mov (bad) and mov hlt rex outsl repnz (bad) (bad) or jo cmpsl sub in cmpsl jg (bad) (bad) notb test push push and and jmpq idiv jmpq fs negb xor neg pop frstor cmc mov (bad) xor mov cmpsb jne sub clc out cltd jmpq stos sbb xor cmpsb cmp imul jg or xorl jnp pop jae (bad) xor cmp cmc (bad) loop lods adc in insl sub out pop lods mov (bad) cmc rex.WRB cmp sub (bad) adc xor fsubr xor (bad) jg adc cmp cmp jno cmp fistpl (bad) adc xchg jo scas shrl loopne (bad) and cmp add lods mov jb test rorl fist cld outsl (bad) (bad) (bad) je pushq rex.WRX rex.R rex.W xchg out mov pop xor jne mov mov sub movsl jmpq lcall lcall mov nop mov hlt jle jnp or mov xor icebp movabs (bad) mov lods rex.W sub mov pushq int3 sbb movabs jo rex.WRX shrb sti iret xor lahf lret stos and (bad) flds stos lods and rex.WR imulb sub in jmpq (bad) out pushq pop retq cmp xchg lret xchg jrcxz rex rex.RX in and sub (bad) or callq fwait cmp jnp js (bad) insb out pop insl rex.RB test push jmpq rorl loope (bad) xor xor jo or hlt xchg sub add jo or jle pushq scas xchg (bad) jbe jmpq add test shll stc sub pop push movd std pushq (bad) insb jb (bad) jp mov iret cwtl icebp push rex.WRXB and pop imul out je sarl cltd cmp jne (bad) shr rex.WRXB loopne lock jp loop pushq out sbb jrcxz cmp pop sbb (bad) rex.WRX clc sub js loopne je lods (bad) sub mov mov repz lods pop push jmpq pop rex.WB pushq cmpsl mov ja fcos cmc insl xor jo and ja,pt sbb int3 jp cmp sub lods (bad) js jb rex.WRX xchg sahf out retq outsb fidivr scas pushfq shrl int3 (bad) ljmp cmpb add jo push rex.W repz add repz pushq fsubr jmpq movabs cltd push mov xchg mov adc push fwait out adc js mov stos xchg sbb test sbb push in (bad) rex.WR push outsb in ja idivl mov jne and sbb rex.WRB js hlt pop int3 (bad) mov xchg adc (bad) movsl pop cmc (bad) fisubl push vsqrtsd xchg lret pushq outsl push xor xchg movsb xor (bad) (bad) xor jmp cmp pop lods (bad) shlb mulb ja ja fucom ror pop std sahf push xchg lea (bad) mov icebp iret and ficom xchg rcll sbb mov add rex.WXB mov adc lock fdivl adc jmp leaveq (bad) pushq stos pop mov jb jb mov loope jo (bad) loopne (bad) sub (bad) popfq sub rex.WRXB out shrb cmp mov mov rex.W mov mov imul mov add (bad) rex or or and fistpl testl jo imul mov movabs in jo iret movsb outsb xchg in imul rex.RX mov out rex.WRX js xchg movabs loopne sub leaveq or mov (bad) (bad) and cltd cmp push rex jns xchg cli loop add clc lods xor cmp fwait mov mov cmp (bad) add cld pushq (bad) jle gs mov (bad) pop jmp (bad) fbld nop jge cli (bad) xchg (bad) xor jne fisubrl outsl jne pop rorb mov mov xchg loope or out (bad) (bad) cltd stc lock (bad) cmp or adc cmc cmp callq outsl pop (bad) cltd fldl rex.WR outsl (bad) lods iret mov movabs push mov mov ss add xor or leaveq testl stos or pushq sub or loop mov decb rcrb out pop (bad) incb fwait mov js (bad) pop push callq rex.B andl imul and (bad) jns (bad) test cmc fiaddl gs xor push lods (bad) in mov iret xor (bad) cld (bad) pop scas outsb xchg movabs ja in rex movabs (bad) fadds push test pop and and (bad) int3 int3 or jmp jge cwtl jl mov enterq scas sub xchg (bad) out (bad) es leaveq mov jmpq or repnz lods or insb gs repnz ficom movabs fist stos and rex.B hlt out testl xor shlb movsl cmp sbb (bad) je,pn in (bad) adc in (bad) adc fist loope jno adc stc pushq sbb movabs jb leaveq push (bad) jp js (bad) (bad) xchg sbb cmp (bad) jb rex.W xor cld notl test (bad) pop xchg sbb mov retq ficomp push mov xchg lock mov (bad) cwtl mov imul mov sbb fcmovbe rex.WRXB ss rex.WR loop leaveq addr32 push mov lret rex.X ficomp repz push je decb (bad) pop mov sbb loopne test imul (bad) adc jmpq outsb xchg xchg push scas scas (bad) jbe scas adc sbb adc pop xor fdivrl cmp std idivl (bad) add (bad) push mov in add out add (bad) xor (bad) jbe (bad) lret add rex.RB rex.R fs shrl (bad) (bad) jae div jl loop mov mov test sub (bad) adc (bad) in js (bad) jmp (bad) jg (bad) mov xchg outsb scas mov mov mov rex.B (bad) clc push add or xchg sbb (bad) jrcxz int (bad) jl (bad) lret (bad) iret cld mov xor movsl mov std test cmp nop jne cld cli cmpsb fdivr std xor out cmp (bad) xchg incb mov loope js push leaveq testl mov rex.WXB out push in out out cmc and add or adc adc (bad) push out cmp scas sti mov adcl enterq (bad) cltd (bad) callq popfq fnstenv (bad) nop (bad) (bad) (bad) idivb cld mov cmpsl test int3 mov outsb (bad) stc sbb neg (bad) std xchg pushq insb mov stos mov pushq retq rex.X (bad) fxch adc movabs xor fs sub out xor jae (bad) xor rex.WRX lock jl je pushfq (bad) fdivrs adc stos movsb insb (bad) sub cltd push (bad) fs (bad) punpcklbw mov xchg shl (bad) sti sub cs cmp pop retq je sbb add mul push jmp xchg (bad) jg jo jnp shr or mov test rex.WRXB pushq test pop sub imul add fsubrs rex.XB and pop fidivr xchg jo notl insl cmpsl pop cmp pop (bad) mov js out push rex.WRB (bad) jne (bad) rorl out lahf rex.RB iret imul cmp ja scas addr32 loope out adcl gs adc cmc sahf mov rex.WRX out mov (bad) mov fsubl adcl mov pop mov cmp cmp jle jrcxz mull cld in (bad) (bad) (bad) in insl (bad) scas rex.RX sti and imul (bad) rex.WRB push (bad) add test or (bad) rex.WRXB xchg xchg jns (bad) std jno or xchg test in and cli cwtl or adc imul rex.XB mov pop (bad) rex.XB (bad) decl and sub mull mov (bad) jrcxz sbb fs sar (bad) cld rex.RXB cmp imul imul shl sahf jl out mov (bad) out insl pop cmp xchg data16 je pop pop js cmp rex pop jno (bad) lea fcomps add out (bad) sahf push fs nop enterq and rcr repz in cmpsl cmc rex.RXB cmpsb or (bad) push jl mov jbe fcoml adc fmulp sar lock pushq rorb movslq cmp sti jnp (bad) rex.B lahf rex.WR lock in rex.W xchg jmp loop fdivp in mov pushq ficom negb jp (bad) in cltd rex.R cld jb cmp sahf js js pop add rex.WRB outsb imull std sub (bad) lret (bad) idivl pop mov (bad) jge or fidivrl (bad) in (bad) jl (bad) in and mov shlb outsl pushq stc sbb jns cld callq pushfq jp insl out (bad) (bad) mov scas callq sub jmp xor cli rol mov lock pop pushq outsb (bad) (bad) notb repnz hlt jns clc outsl (bad) jmp (bad) fstpt (bad) jp je and je insb sub push lock movswl pop test push sti repnz imul mov orb jbe,pn adc lods (bad) sub outsl sahf fcomps pop gs cmp cmp (bad) cmp in jb int3 (bad) (bad) fist sub jne xchg insb mov fsubrl fisubr cmp or sbb retq jae loopne add ds xchg mov notl (bad) adc add rex.WRX rex.B mull xlat pop push xchg add (bad) (bad) fidivrl jle je add cmp adc lods (bad) sbb cmp (bad) out adc or mov xor movsb int imul mov (bad) adc lods or outsl mov push rorl rex.WRXB jbe test xchg lahf hlt cld xor movslq and in (bad) jmp xchg mov outsb (bad) mov xchg push cmp cld jbe movabs mov mov xchg adc movabs fidiv add (bad) icebp stos adc push stos pop adc cwtl xchg cmpsl js je out push loop iret (bad) xchg cltd rex.WXB (bad) pop add jle rex.W insl int3 or std (bad) jbe scas push pop rex.R (bad) jo icebp fs out imull mov movslq out test sahf rex (bad) add (bad) icebp iret in mov mov lods jo xchg (bad) icebp rex.W mov ffreep lods (bad) (bad) outsl cmpsl (bad) fild cmpsl movsl (bad) int3 sub sbb (bad) sub pop (bad) jge lods jne (bad) js jge cmp idivl mov (bad) xlat outsb rex.W cmp scas mov sbb mov pop jo pop pushq clc loope cmp or mov (bad) (bad) adc (bad) (bad) add movsl or imul out lods stc rex in add cmp sahf sub pop (bad) js cmpsb sub clc stos (bad) sahf imul in adc mov (bad) rex.RXB (bad) sub pop push ror push (bad) mov test or test (bad) ja (bad) mov jno pushq mov pushq push xchg push fsubrp ja rex.RXB adc jo xchg jp mov or ds pop pushq adc xchg sbb cli jnp fdiv xorb cmp mov ds movslq insl rex.XB sbb xor (bad) push clc pushq jne xchg cmp or sahf (bad) mov sti jnp rex.WR rex.WRXB mov enterq rex.WRXB fstpt xlat push jo xor out pop or jrcxz mov ds add jmp cmp jg rex.WB imul imul pop movabs popfq out scas xlat pop icebp in (bad) sti sub jp in jg sub mov mov jns and rex.WX adc cli mov and xchg mov (bad) scas pop xorb insl or loopne rex.WXB sub mov mov (bad) (bad) push outsb mov xchg jle out pushq pop sti leaveq sbb pop push xchg rex.RX js in mov jmpq test xor rex.W in (bad) sub (bad) jrcxz lahf js sti addr32 out pop decb pop pop addl and cmp adc jge jnp xor stc fbstp testb (bad) xchg sbb hlt cmp push lcall xchg in in gs rex.WRXB std sbb outsb loopne (bad) sahf callq sub out in (bad) imull addl sub stc (bad) cmpsl mov outsl mov icebp insl xlat ja repnz rex.WXB xchg clc std jmpq push (bad) or stos adc jmpq rex repz cltd int3 (bad) push sbb fcoms gs xchg rex.WRXB out in cmpsl rex.WX rex.WRX hlt fimull xor sub lods js (bad) jbe incl pop cmp (bad) sarl out (bad) movsb pop xchg pushq pop sahf (bad) mov neg pushfq (bad) shr pop mov rex.WRX sbb (bad) (bad) insl pop mov jns mov pop sbb rex.WRXB imul in sbb or add pop movslq outsl mov (bad) insl ja mov outsl push (bad) outsl (bad) test je outsb xlat movslq pop incb mov xchg jns cmp cmp test imul sub loopel rex pop sbb and ja (bad) (bad) cmp rex.XB cmp jl jno rex.RXB jl and jo sub lret add popfq ljmp xor xchg adc cli or test push mov jge repnz addr32 (bad) jae addr32 (bad) (bad) and scas retq sub rex.WRXB ja jnp pushq je out (bad) fadd stc cld repz sbb fwait cmp faddl (bad) (bad) pop (bad) pop or addr32 ja or pop (bad) cltd and (bad) movabs rex.WR stc je adc gs jl scas xlat sub test jmpq out xchg negl sub xlat cmp (bad) mov out mov adc (bad) shr (bad) lret sbb pushq mov clc jl jl callq jbe gs cmpb jbe jg outsb packssdw leaveq mov std (bad) jl cmc jle pop je xchg rex.WR cmc rex.WRXB test mov sti jle rex.WR cli (bad) ja rcrb or enterq mov out push pushq mov push pop lret add jno or divl pop pop pop mov rex.WRX pshufw pop jb pop mov pop js out insl pushq jno,pt test sbb rex.X rex.WRXB test pushq (bad) addr32 out fcompl (bad) and ficomp rex.B fwait outsl adc leaveq negb jne xchg xchg (bad) mov jrcxz add xorl mov cli data16 mov (bad) xchg insb sahf icebp jo push ja mov lahf xchg fist (bad) (bad) (bad) cli adc or fs xchg pop pmaddwd sub pushq (bad) ja or xor ds mov sbbb cmc push xor jo outsl js loop xor xor xor std xor xchg pop (bad) (bad) rex.R (bad) sti mov sub jnp scas fdiv or test mov add rex.WRXB shlb sti and cmp jle or rex.WRXB mov pop xor add cmc insl rex.WRB xor mov (bad) imulb jns cmpl test mov (bad) (bad) jne xor jl shrl hlt or (bad) cltd (bad) out jle lock xchg stc sub cwtl mov xchg jl insb ds mov (bad) mov mov xchg jne icebp nop ja pop outsl jb jge pop es repz pop outsb imull std outsb insb insb push test rex.WRX outsb lahf movabs movsl out mov (bad) jno jmp xchg lret xor clc xor frstor outsb pop (bad) rorl scas ja mov jge in push lea pop rex.WRX pushq push nop pushq or outsl pushq rex rcr (bad) pushq (bad) (bad) xor xchg callq callq test pop fnop jle xchg (bad) mov cmc int3 rex.WRXB cmc xor mov add gs adcb repnz push fucomip jmpq xor mov xor cmp outsb std cmp sub pop loope adc cmp pop add cmp leaveq or fwait mov (bad) int (bad) jb jbe rex.WRB pushfq jge int mov cmpl (bad) (bad) flds lret pop ljmp mov (bad) repz mov int3 and xor in rorb pushq rex.WXB pop and jb ja pop cmpsb pop jns xor cwtl rex.X cmp retq sub out sub xchg in or int rex test rep rex.WXB adc js scas seto (bad) icebp pop (bad) (bad) outsb shlb popq lods es nop mov popfq (bad) pop lret (bad) jnp fstpt cld repnz jmp jnp sti out sti pop fldt imul mov loopne lods rcrb out rex.RX imul mov (bad) lods sbb adc mov pop mov mov cmpb cmp fstpt and jbe (bad) je (bad) pop pop adc jb cwtl mov (bad) ds jb rex.WR xorl or rex.R jp stos decb fcoml rex.X jbe cmp in outsb mov mov sti loopne (bad) (bad) scas sbb lods add out fcompl outsl adc push std cmp (bad) sbbl sbb sub cmp (bad) jp xor mov mov cmp lods shrb js idivl icebp push sub imul (bad) iret or imul and in cmp test frstor jo rex.R rex.W pop (bad) xor push rex.R rex.WXB insl cmp jmpq add or mov out mov mov rex.WRX gs sub mov jp shr (bad) fimull lret and (bad) test jnp mov in jns jl repz xor xor adc jle cld imul (bad) jne add mov in fsts sbb cld lahf scas mov rex.WX sub sbb jno (bad) retq push mov or pop jl (bad) push adc xchg lea icebp imul add cmp rcll sub (bad) shlq rex.WXB test and push (bad) (bad) icebp imul pop vfnmaddss and jp icebp sub rex.WX rex.RB out vpunpckhbw jmp leaveq push movabs rex.WXB pushfq in rex.RX or movsb sbb addr32 cltd ss (bad) in pop (bad) pop push (bad) cld xchg mov cmp ss movslq jmpq xor icebp insl rex.XB (bad) pop (bad) ror jno and (bad) addr32 jg cld push fcmovnu insb mov fldt sub sub (bad) or scas (bad) xchg or (bad) xchg cmp push stos retq xchg jmp (bad) sbb adc (bad) mul xlat mov (bad) (bad) cmp xor rex.B (bad) add sub repz jmp callq jno mov stc push rex.WRX lret (bad) xchg imul rex.B jge ja (bad) push rex.WRB mov sub push enterq cmc (bad) jl ficomp (bad) push or (bad) punpcklbw fisttpl fs loopne out cmp (bad) int std add jo ficom mov out sahf sub add loopne xor cld outsl imul or int scas jmpq mov jg pop retq or xchg (bad) fdiv or (bad) pushq outsl stc and hlt cmp rex.WR (bad) js int3 (bad) cli rex.X mov cli xor (bad) stc fstpt jb pushq push neg fstpl ja stc fsub jmpq lock add cmp ja in sub (bad) (bad) mov clc add mov ficom sti nop ficoml lods or rcrl pushfq (bad) (bad) out jmpq sub jp addr32 rex.RB xchg outsb push out xchg mov jle insb (bad) in je imul add pop insb cmp clc and ss js lahf mov in rolb mov (bad) out rex.XB outsl xchg xor nop fdivl mov movabs cmp push (bad) xor movabs jne xchg add gs rex.WX jmp (bad) pushfq callq jo rex.WRXB pop cmp pushq sahf leaveq push adc jns addr32 ss jbe jo jne paddusw pop movabs movabs sub jae adc and scas sbb xchg mov mov outsl sub insb je scas lret cmp (bad) (bad) insl pop out add outsl stos adc pop (bad) mov loop jrcxz xchg scas rex.W repz push adc rex.WXB hlt cmp fldenv adc rex.W rex.B add sbb movabs (bad) add rex.B mov sbbl cmp xor enterq nop sarb or addr32 xor jl enterq (bad) scas hlt mov mov cmp cmp adc xadd (bad) out leaveq and pushq cmp add js xchg or mov int3 mov rcr and js,pn (bad) out (bad) (bad) loope xor stc (bad) pop jo (bad) (bad) mov (bad) lahf cld gs out push (bad) (bad) (bad) ds rex.WRX push (bad) (bad) adc (bad) (bad) (bad) pushq rex.RB mov stc xor (bad) xor push and cld notb iret rex.B ja mov (bad) icebp jmpq xlat out and imul cmp push sbb lods jl and (bad) pop nop xchg mov (bad) sbb rex.WRX iret js pop fcompl test push scas in std add out scas or repnz movsb adc sub adcb movabs (bad) push (bad) (bad) and (bad) rex.WRB rex.WRXB rex.RB lcall xchg jp cmp retq rex.XB and (bad) pop rex.XB (bad) mov minps mov (bad) (bad) out pushfq pop cmpsl jbe (bad) test sbb (bad) fdivl sub test jbe (bad) rex sub in xchg mov (bad) jae in outsl sbb callq xchg pop test or imul cmpsb test jp or push mov loopne jmp pushq rex.WRX repz rorl push orl sbb (bad) mov out adc or push (bad) fdivs test (bad) adc rex.RX sbb sub (bad) clc push iret or (bad) test (bad) (bad) jns lahf pop adc sub mov xchg (bad) movabs mov rex.WRB mov jne scas ja ds out (bad) mov rex.XB xor (bad) pop sbb or jp mov pop or rcrb sbb movabs imul out cmc jle (bad) xchg jmpq jle (bad) mov xlat je sub insl xchg in xchg fcmovb sbb stc pushfq rex.WR test lret and xor (bad) mov add out jnp lods vsqrtps xchg stos or (bad) mov mov cs mov jbe (bad) mov xor rcrl (bad) or in jbe in jp insl shr mul (bad) push in push mov sub jp jbe and pop rex.RX rex.WR lret (bad) (bad) insl hlt (bad) int3 rex dec scas xchg iret pop retq ss fist pushq fbstp movsb push adc outsl pop (bad) lret mov xor out shlb mov pshufw movabs fsts jbe jo mov es shl jmp in mov movsb mov movabs pop lret push jnp scas insl adc xchg rorb rex.R jp pushq loopne xor jmp in sbb (bad) xor lret add jge jge cmc (bad) scas (bad) (bad) cmc fs mov div (bad) rcll pop sub mov rex.XB jnp pushq cli loopne push jge ja (bad) xchg in imul addr32 push (bad) xor movabs and jl cli mov (bad) xchg cwtl mov int3 stos rex.WRB addr32 jmp outsl mov rex.WRB (bad) xor (bad) rex js and icebp cmp nop jmpq xor movabs adc fstpt (bad) (bad) sbb rex.WR jge or insb clc rex.WRX loop xlat xchg retq rex.WR data16 popfq retq testb push (bad) repz and movabs retq rex.RXB rex.X mov lods loop scas add outsb sub (bad) leaveq test ficompl xchg stc pop mov sbb inc (bad) je loopne add (bad) (bad) mov or imul push sub lock loop jrcxz (bad) js in mov sbb jbe movabs (bad) xchg cmp adc leaveq mov jg test jg fs test rex.WRX pop jrcxz adc pop rex.WRX sub fcoms jge imul sub jb xlat (bad) and push stos pop xor pop mov cs mov pushfq jnp sub inc fsubrs ss cmp jrcxz (bad) jl (bad) push movsb xor push test jb repz rex.WX mov jmpq xor (bad) mov fstpt mov mov imull rex.WX movslq (bad) or (bad) sub pop jmp and fisub pop insb out (bad) fdivs jmp (bad) rex.R jp outsb imull adc jg insb (bad) push rex.W int3 test lock xchg sbbb (bad) addr32 in rex.WX rex.W roll idiv out adc (bad) cmpsb jg je adc (bad) (bad) imul sbb lods repnz orl or xor (bad) out jns fisubl (bad) imull cltd pop add lods mov data16 callq (bad) sbb push retq and jle lcall xor movabs xchg jge int3 pop adc in imul add out jns and int fisub outsb mov (bad) (bad) jg test xchg iret ja sbb cmpsb enterq enterq repnz jl out pshufw lods sub pushq test repz sbb (bad) mov mov (bad) and fstpt jge in gs mov or icebp and (bad) jge std or movabs pop frstor jg rex.WR fs or xchg outsb retq rex.WX cwtl pop rex.W pop rex.WRX or jo (bad) jp xchg xchg jnp lods (bad) jmp xor adc cmpsl rex.RX rex.WRXB push outsb nop int3 pop jo or out push and fild cmp iret (bad) push outsl fcom lock sbb jne pop (bad) in int shr (bad) mov jrcxz scas shr mov int3 scas cld adc out pop mov (bad) jns and clc push xchg mov je jne subl mov add lret (bad) (bad) (bad) push decl stos pop rex.RB mov push es cmc xchg jb mov (bad) (bad) ds (bad) retq rex.WRB xchg sub push push pop xor push and popfq repnz cltd pop movabs movabs (bad) stos sbb pop mov or cmpsl mov and fimull (bad) in clc int3 push (bad) cmpsb push pop fdivp or cmc pop out loopne fldt jbe xor sbb pushq (bad) (bad) ljmp pushq mov fnop mov (bad) add cmp (bad) and adcl mov jo jg out mov mov shr and scas push adc push rex.W pushfq es mov (bad) test add pop imul pop movabs jno rorb adc jmp stos add mull testl (bad) (bad) (bad) cmp pop scas rex.RX (bad) mov outsb outsl mov (bad) (bad) jne jge add xchg stc push fldt rex.WR je push pop (bad) insb rex.WR (bad) mov add fyl2x lea or fwait sarb (bad) xchg jb pop sub push fcmovu mov push decl mov sti sub cmc adc (bad) (bad) (bad) lock cmp jmpq stos sbb lret mov movabs jbe pshufw rex.RX rex.WX pop cmp callq cmc nop (bad) in leaveq mov out jo (bad) cmp testl cwtl sbb adc outsb in (bad) movslq lret cmp ss and rex.RXB (bad) sub cmovge and fdivrs (bad) and sub callq mov xor adc or (bad) pushq xor std rex.WRX testl or (bad) and pop adc (bad) je lahf sahf in rex.WRB scas jmp (bad) cmpsl push test lods (bad) ja cli test adc (bad) insl or mov (bad) scas pop movsl jg out pushq adc in imul xchg out and adc cmc mov jmpq mov nop in mov push lods idivb out sti repnz (bad) (bad) mov sbb (bad) ds cld (bad) pop jo fdivrp cmp lods (bad) ja pushfq mov xor xchg fcomps sub mov sbb dec mov xor (bad) loope jne jo (bad) in jae fdivrs cld ds pop cli cmp rex.WXB in cmp test pushq jnp push in cmp mov cmp jp sub pop (bad) imulb cmpb sbb (bad) (bad) out cmp cmp mov jl std adc out out pop mov adc ja,pn stos xchg pop out sbbl push pop out sti jbe push ja (bad) movabs imul (bad) (bad) rex.WXB xchg jae idivb xor fcmovb xlat mov fisub pushq mov and xchg retq and (bad) mov std in js negl rex.B xchg std scas insb sub mov pop sub in or (bad) rex.XB sahf jns int out sbb mov (bad) fcom jbe scas movslq xchg mov fsts movsb test jge fdivrl (bad) (bad) lahf std pushq rex.WR cmp cwtl clc out retq incb pop lods movabs je or je out or (bad) adcb mov (bad) or xchg jrcxz mov out mov test add rex.RB push ja movabs sub out mov std push (bad) cmc cmpsl clc and pop lret (bad) sbb stos pushq inc mov mov test stc xor fucomip (bad) bnd jo push int pop xchg (bad) in sub cmc xchg rex.X movsb (bad) mov cmp jrcxz imul or (bad) (bad) hlt rex.WRB sub (bad) add scas (bad) test out outsl jrcxz jne enterq pop (bad) and cmp or xchg std push cmp jp outsl sub mov xchg (bad) addr32 mov stc mov ja outsb (bad) add sub movabs pop idivl sti jl cmp lahf rclb test cli in jmpq in retq mov jp xchg out (bad) movabs subl jmpq (bad) movabs jmpq rex.WRB pushq cmp (bad) loopne mov movslq push mov (bad) cmp std gs lods mov jrcxz or cmc sbbb ficomp out cs out (bad) push insl test retq or fs subl movabs xchg cltd push (bad) (bad) pop jne scas pushq test popfq add pop adc ja pop xor (bad) lea and in pop (bad) (bad) jl (bad) (bad) pop sub adc mov int3 xchg (bad) cmp je test jmp mov push neg ud2 (bad) mov (bad) addr32 mov jo (bad) rex.WXB repnz cmpsb cmp (bad) loope (bad) (bad) mov xchg mov fistp enterq fiadd and (bad) (bad) cmp xchg mov xchg fnclex adc adc jo jmp and (bad) loopne scas xchg ds insb push stc rex.W callq mov iret xor divb enterq sbb sub pop xchg ss mov scas and popfq and xchg mov popfq lods and cmp leaveq lret movb test adc popfq jbe sub idiv (bad) cs (bad) xchg xchg rex.X push jmp pop outsl push sar (bad) test fmull cwtl rex.XB fs jle cli rclb std sub imul callq stos retq retq negb (bad) or out je jle mov (bad) outsb or xchg (bad) fisttpl sahf test add push or jl cld mov jg (bad) cld mov cmpsl jae cmp pop pop or adc pop (bad) ja imul jne cld pop add cmc and jl xor (bad) repnz sub xor mov mov jrcxz push or xchg add (bad) jl (bad) jge xchg lock (bad) clc rex outsl stc (bad) pop (bad) xor jl pop push jo,pt shlb test ljmp ficom out outsl jg push lods cmp (bad) pop sbb pushq mov mov mov rex.WRXB stc mov pop xlat (bad) rex.WR rex.WRXB rcrb jb ficomp fdivrl mull rex.WR lods mov xchg scas add pop mov xor (bad) loopne and jmpq xchg imul js adc js jbe retq jp (bad) and jle cli rclb imul xlat jle xor clc nop push ficom adc stos jmp lock pushq (bad) lea rclb mov lahf jo (bad) mov mov je adc andb ss outsb rex.WRB testl xor add scas fisubrl test adc pop andb cld rex.XB scas in cli popfq xlat and rolb or (bad) rex (bad) cld xchg (bad) jns loopne jae xorb rclb jmp and std lock (bad) std movabs out jbe or jp cs sub insb pop push ljmp pop fsub jnp in add ficompl push je (bad) jbe push add cwtl outsb jle (bad) xor std movslq xchg cmp rex.WB sub shrb or (bad) fstpl flds in rex.RX rex in imul cmp pop push (bad) test rex.R jbe scas mov loope fsub and fildll xchg xor subb imul lods loopne insl insb fisttp icebp (bad) pop cli xor pop pushq je nop rex.WRX jmpq decl sub cmpsl mov (bad) jbe jae test cmp jne insb lahf out (bad) xchg (bad) fistl xchg xor add stos xchg and movslq mov leaveq mov jne movabs retq repnz rex.WXB (bad) in callq enterq sub cltd rex.RXB popfq js pop add (bad) scas lahf mov movabs fmulp and sbb jl xor (bad) fisubr pop (bad) or scas push sub leaveq cmpl mov jle push fildll fldcw mov int3 sti (bad) mov lea rex.XB (bad) cld icebp (bad) mov leaveq (bad) sub in mov xchg (bad) lret flds (bad) (bad) (bad) rex.RXB ficomp in mov mov xor mov movabs sub xchg mov in sbb mov (bad) lock (bad) mov subl (bad) outsb fidiv (bad) es mov fimull in iret bnd test jb pop sbb scas movabs (bad) ljmp in (bad) jo (bad) stc push adc gs sbb adc std and cli pushq cmp cmc fstl ja loopne sub cwtl xchg (bad) pop pop outsl pcmpgtd out pop push mov add push imul xor cmp lahf scas (bad) sbb (bad) push fs (bad) xchg out rex rex.WXB cmp data16 outsb scas mov sub xchg xor jns cmp sub test jne rex.RX xorl and jns pushq fidiv (bad) (bad) mov and mov imul dec jne (bad) rex (bad) jns (bad) mov (bad) push push sbb xor and xchg negl rex.X cmp add fdivr xchg idivl rex.RX ss retq ja rex.X pop cld mov fimul (bad) jrcxz cli mov rcrb pushq mov je pushfq push (bad) xor adc (bad) xorl shlb xchg hlt sub lods push xchg sub sbb out out pushq mov iret out out pop lret (bad) mov xor std scas mov sbb cmp jo,pt mov jo push cmp sysenter mov popfq pop (bad) jmpq jp ja mov movabs rolb sub mov loop rex.WX (bad) (bad) repnz notb rcrl jp sbb std (bad) push push rex.RB int xor push push push repz mov loop (bad) lods (bad) mov mov xor (bad) insb mov test insl xchg (bad) (bad) data16 pushfq insb orl test pushq adc (bad) pop outsl lock outsl or outsl (bad) mull mov jrcxz (bad) outsl rolb loope mov out xchg fs jg or sub xchg ds or cltd (bad) push (bad) push jle test mov in mov ljmp jp outsl loope cmp (bad) jg push xchg mov insb add and jbe test imul push mov sahf and xchg jrcxz cwtl test rex.R xchg lret loopne ja xlat in ss (bad) rex.WX (bad) fldenv insb (bad) xor test xorb pop cs loop fwait sbb in ds loop pop pop push xchg movabs sarl std outsb rex.RXB jmp repnz out mul sub and out out out in cmp callq cmp ja cmp mov hlt outsb (bad) mov rex.WRB push cmp data16 and adc xor xchg pop jno int rex.WRXB fs imul jp or insl push outsb callq pop rex.WXB sbb push (bad) testb rex in (bad) nop pop mov rex.WRXB ss rex.B gs nop movabs loop sbb push mov loope rorl fisub sbbb and xor sub iret (bad) push xchg rex.WRXB std pop jns jp fcoms mov sbb (bad) cmc test out jno adc movabs and pop imul gs clc or or stc rex.RX jbe or (bad) lret pop and jp or jns rex.RX in pop push push subl add out pop ja sarb (bad) out jne retq in (bad) out rex cmpsb jbe in sbb rex.R cli jb xor xchg rex.B (bad) mov xor jb xchg xor clc lret jg xchg (bad) (bad) jge jl (bad) cld lret xchg xor or orl out rex.RXB (bad) je sbb and pop cmp lock xchg in rex.WRX jo imul xchg mov or pop sub movabs sarl fstps cmp pop (bad) (bad) ss fwait pop (bad) (bad) rex.WRX jp mov addl xchg out cld jle mov test fistpll pushfq fs scas fstpl (bad) cmp fadds rex.WRX mov fdivrs jo outsb repz negl mov jle cmpsl jb pop test cwtl mov insl adc (bad) xor jo insb xchg sub cmpsb jp fwait (bad) gs movsb js pop xchg je add jmp jge add and rex rex.RX fs std (bad) rex.WRXB jg cld js int3 xchg add in sub js movabs rex.B sub pop data16 cmp xor mov movabs (bad) (bad) or xchg in out movabs rex.RB add and jb in mov push sbb je cmp js push out and (bad) stc pushfq scas in adc cld or vpcmpgtw shll loope rex.WRXB rex.WR (bad) jnp sbb sub cmp jno nop insb outsb jmpq hlt cltd jrcxz mov subl test sbb cmp iret outsb sbb pop pushq roll (bad) rcrb (bad) xchg or movabs sti rex.WRB mov jg (bad) (bad) std gs jg jbe sub scas rex.X clc add jns,pn (bad) icebp xor jrcxz adc pop sbb movsl sbb jl pushfq jmp repnz movabs add loop xor (bad) ds cmc and cld or mov mov lret fistp adc fs sbb jbe jle rex scas cli mov (bad) (bad) or (bad) xchg fistpll mov ror jp (bad) sarb stc (bad) retq out mov iret addr32 scas in jmpq scas pushq scas movslq in sbbl rex ss push (bad) (bad) mov fdiv bnd (bad) lods cltd xor cli sub mov jbe rex.RX xor (bad) (bad) (bad) es cmpb push scas insb rex.R clc rex.WRX enterq stos or pop scas cmpsb pushfq cli xor (bad) sub (bad) insb scas repnz (bad) sbb or lods xchg outsb jle (bad) rex.XB pushq jbe mov insb rex.WRB imul sub rex (bad) (bad) mov cmp and xchg cmp (bad) xchg (bad) lea pop xchg lods jbe fucomp outsb jp xchg push movabs sahf iret mov mov in push mov fiaddl pop jb jge mov cltd sti neg fs xlat gs xor std mov sub rolb movsl mov sub enterq ficoml pushq mov fwait adc (bad) push (bad) int3 jo lcall cld push lret cmpsb push lods (bad) cmp lcall push pushq clc outsb outsb movabs push in xchg icebp pop (bad) testl jo mov rex.WRB jns mov insb rex.WXB pop scas mov (bad) jns xor cmp add out pop cmp (bad) jmp cmpsl mov enterq xor cltd or jo rex (bad) jle cmp mov out mov cmp jo pop cmp pop xchg (bad) sbb cltd sbb (bad) mov sub rex.WRB (bad) in sub (bad) cld nop sub stos mov pop sti scas ds sti (bad) sub rex.WRXB sti push ds rex.WXB (bad) fmull add (bad) cmp fldcw in jg data16 xlat rex.RXB fbstp pop add jns (bad) sbb mov test or push ds jp push out push sbb or (bad) cmp pop iret (bad) (bad) jne xorb pop test scas lods addr32 popfq or sub jnp (bad) in xor (bad) cmp sbbb push rex.WXB in or cltd pushq idivl cs pushq scas shrb push (bad) add (bad) pop negl in outsl mov (bad) (bad) mov lods nop push (bad) push loope callq jmpq outsl shrl loop rex.WX rex scas push pop xchg or imul mov mov fwait insb jo lret xchg js clc xor mov stc ss js lock or repz fs xchg sub rorb packssdw scas push cs sti jbe fcompl out push je sub rex.RB adc (bad) push (bad) (bad) imul retq sub rex.WR lock (bad) (bad) fsub and and orps std (bad) js xor rex.WX jae in cli sub sub js rex.X lods leaveq xchg insl xor test jno test fs out xchg xchg add test out cmp adc rex jl (bad) jrcxz pop xor pop push (bad) jp (bad) scas lahf (bad) insl imul sahf rol jge adc cmp imul sub lret pushq in (bad) jo jbe pop in xchg or mov mov imul mov js rex.X jmp rex.R pushq and pop rex.WR cmc mov mov (bad) jns fadds ja xchg rolb rex.XB popfq subb jle cmpsl cld (bad) cmp add rex.WRX jmp fadds addr32 or rex.WXB jbe jmpq movsl ja clc or outsb sbb ds push movsb (bad) ss std or xchg cmp mulb jbe test jbe test add test mov mov (bad) pop pop jrcxz sbb or js jo mov and pushq push scas jge mov (bad) imul mov rex.WXB (bad) lahf movslq clc rex.RB rex.RXB mov retq std fistpll movslq (bad) (bad) cli fidivl mov lods rex.WRX sbb pushq pushq and leaveq test mov cmp xchg test (bad) mov loope sub (bad) cwtl lods out lods jnp adc lods push jle ds xchg fisubr (bad) scas add mov shrb jbe rex.WRX test jne hlt mov rex.X outsb xchg negl fistpll je std (bad) es xchg or insl cmp sbb and and (bad) xor loope subb repnz rex.WB (bad) data16 push add (bad) jmp and test xchg imul cmpsl (bad) (bad) rex.R (bad) mov sub and xchg (bad) rex.RX jae add rex.RXB (bad) mov jo pop pop rex stc xor out cltd shll (bad) idiv (bad) out in push mov loopne out (bad) bnd jne sarb xchg and imulb cmpl (bad) (bad) jne lods lods jmpq mov fnop sub scas jrcxz fstps (bad) movsl rex.WRB rcr repz push js sahf or jns xchg (bad) jrcxz (bad) sbb pop pop (bad) jbe (bad) and xor push outsl mov sbb add repz repz pop xor xor jmpq lret sub xchg or lock or fwait mov rex rex.R repnz xor (bad) push jns js (bad) cwtl lret (bad) in hlt fldcw (bad) stos (bad) rex.WRB add scas cld mov insl rex.WRXB jb (bad) jo rex.W mov sahf (bad) sub out test movslq push sub cli xor cmc pop lea lea sbb movabs rex.B (bad) rex.WX cmp iret test lret sub mov out jge test jb jge xchg out mov push stc pop test or pushfq mov mov (bad) int sub lods mov rex.B pushfq test fbld sub lea out mov jmpq and (bad) insl lods xchg sub fistpll add cmp rex.W scas outsl ds pop sub push or mov lods pop sbbb pop out stos mov and sub (bad) xor rex.RB icebp push xchg push pop and sbb leaveq orb and fldenv ficom xor push xorl sub or lret psubsb xchg or xchg xchg shlb pop hlt data16 jmp js xchg pop subl sbb rex.R test cltd or rex.RXB (bad) retq test cmp jle (bad) jbe fistpll xor sbb (bad) data16 mov movabs out cmp mov push (bad) iret sub sbb pushfq in outsl rex.WRX pop movabs lods push (bad) stos ficomp sub in int3 adc or xor ficompl pop jo (bad) cld adc adc out (bad) add fbstp movsl push xlat pop imul adc clc cmpsl jo (bad) roll test ja mov push adc (bad) movsb imul rex adc (bad) scas or (bad) idiv rex data16 jno (bad) push (bad) test jg lahf in cmp shl loope popfq mov mov (bad) fwait adc or mov rex.WRXB and movabs or mov adc and repnz xchg or mov or and (bad) xor mov sbb scas mov rex.R in lods sar rex.R (bad) (bad) retq mov jnp xchg icebp push (bad) std mov add gs mov stc jne insb (bad) mov (bad) (bad) cld mov imul (bad) addb fcmove in jp out rex.WXB mov xchg fnsave adc jmpq adc sti rex.WR rex (bad) out cld jns jbe mov pushq jg pop cs adc cli loopne xor mov std fwait cmc xchg out or fistp push jb insl sahf ss std lock pop push cmp cmpsl loope sarl mov sbb ja es outsb data16 (bad) cs test sti adc jno xor repz lods (bad) pushfq mov xchg jg xor xchg jmpq (bad) (bad) cltd or js addr32 jo hlt push mov ja test (bad) jmp xchg cmpsb mov addr32 sahf pop jne or fs jge imull add pushq (bad) hlt jmp jne test pop or jle adc sti rex.WR pop xchg jp (bad) sbbl int pushq jl mov xchg gs std outsl testl repnz (bad) pop data16 rex.WRXB mov mov sbbl lods pop ds scas rex.RB xor xchg subb insl (bad) cmpsl cli adc int lret scas rol fwait rex.X mov push xchg sub pushfq scas xor pushq (bad) in rex.WRXB (bad) je jrcxz ss (bad) notl rex.RX (bad) rex.WX or shrl xchg callq test xchg out iret cmp gs rex.WRX mov wbinvd retq or movabs test gs mov test pop idivl jmpq fildl cmp hlt adc pop rex.WX xlat xchg add shlw push ss mov pop std in jno mul hlt jge outsb adc sbb xchg es pop xor xor (bad) imull stc rcrb jbe sub (bad) outsb (bad) (bad) xchg mov cmp xor pop insl xchg rex.R rex.R pushq cmp cmp lods shrl loop (bad) cs sub cmp rex.RX cmc add mov or or xchg scas jmpq test (bad) sub fcmovbe rex.RXB cs out mov rex.W rex.W outsb (bad) rex.RX xchg cmp lods or xor xor movsl xchg sbb (bad) cld or leaveq cmpb rex.RB cltd ja (bad) callq (bad) and add adc sub mov iret leaveq rex.WRX sahf test packsswb jns or decb callq cltd sub popfq cli xchg pop insl add hlt (bad) test or cmp insb push scas (bad) movabs jmpq rex.WRXB push jge mov cs clc fcoms loopne xor callq rex.R mov fidiv (bad) fdivl jg rolb js (bad) (bad) (bad) (bad) int3 loopne sahf js sub fistpll test shll in mov mov (bad) or in pop jge fcomps push scas rex.RXB cli rex.X lahf push frstor sti mov (bad) gs add fcmovnu (bad) add jo (bad) cmc (bad) ds pop xor cmp mov stos mov loope jg sub shrb xchg sub pop mov (bad) jb mov js,pt loopne pop sub rex.WX insb cmp fnsave and (bad) push mov in out lret (bad) (bad) cmp out (bad) repz rorb fisubl push mov adc (bad) scas js scas out push ja mov jb (bad) leaveq fistl or rex.RXB stos jle pop (bad) (bad) (bad) pop adc add sub xor or xor pop movsb jb pushq cmp (bad) rex.W clc add fwait adc (bad) (bad) adc out fndisi(8087 (bad) (bad) int3 (bad) jp or nop rex.W jo add lea or movabs lods (bad) (bad) jbe movsl xchg (bad) xchg stc push xadd test (bad) test mov loop stc mov (bad) mov or in push add (bad) rex.WXB rex (bad) (bad) push pushq and cli jge addr32 rcrl mov sbb loope add cmp enterq (bad) mov pop in and pop std out mov jns xchg jmp or pop fwait xchg sti in mov imul pushq (bad) pop test pop scas jmpq rex.R cmp subb cmc push std jg rex.B jl (bad) scas rex.WRX rex.RX icebp rex.WRX mov clc sub mov mov (bad) ja (bad) rex.WRX cmp mov (bad) (bad) rcrb rex.W sub lahf rex.WX (bad) cmp xor jrcxz push andb cmc xchg mov sub jo or sbb test (bad) mov sbb lcall loopne (bad) cmpsb (bad) scas push rex.XB cmpb mov mov rex.WRX jmp mov movabs fmul mov (bad) insb callq add (bad) jbe mov fist sub mov xor sti mov test js add rex.WRX mov mov iret rex.WRX rex.WX (bad) (bad) rcrb or (bad) fisubr mov pushq (bad) ss or rex.X rex rex.WRX mov add shll in pop jrcxz jrcxz out cmpsl nop adc gs jge mov insb mov loop sub hlt int3 rex.X scas jo rcll cmpsb xchg pop callq jp cmp cli loop mov xlat cmpsl mov mov out loope rex.WRX stos (bad) rex.WRX rex.WX push (bad) (bad) pop pushq pushq add xor xchg (bad) out push pushq scas int out out sub pop scas mov rex.WRXB outsl fs and cltd xchg clc and js (bad) adc fdivs and outsl insb rex.WX (bad) popq pop jns outsb push cmp pushq jbe divb movabs jbe leaveq es loope mov jp sbb add rex.WR in pushq and push ss adc loopne (bad) stos insb int3 pop push add jp rex.WR xchg movabs shll adc or and pop sub scas sti push push int3 movabs scas xchg (bad) jo repz push data16 insl pop xchg xor jo xor out lods mov pop ss (bad) roll rorb mov fsubrl (bad) xor and jmp add pushfq stos sbb jbe std sbb repnz (bad) push xor xchg out mov pop (bad) cmp movslq cmc rex.RB mov test int3 pushq rex.W data16 imul rex.WRXB rex.WR addr32 fadds insl mov adc stos std in cmp mov xchg xchg fmull xchg cmp (bad) (bad) xor retq and ss lret xlat movabs mov and callq and shll gs sbb push cld icebp pop ficom int3 xchg test (bad) scas clc sub jle imul jbe std and stc movabs pop sbb rex mov xor out popfq rex.WRB cmp ja jge jbe (bad) insb xchg gs lods xchg jno xor shrb fs cmp and or lock outsb sbb (bad) pop ja rolb mov xchg scas rex.WRX cmc push lahf fisttp (bad) pop (bad) lahf xchg sbb add imul lahf shlb jl rex.WX jl cmp pop mov jmpq notl xchg orl sub cmc jg jnp (bad) loop rex.RB (bad) (bad) pop push xor adc ljmp outsl pand rex.WRXB lock mov outsb lock stos repnz ss sub (bad) fcoml callq pop cmp test sbb insl mov iret (bad) mov stc (bad) jns (bad) add xchg push loopne (bad) sbb movabs xchg and (bad) imul cmp mov loop cmp pop repz rex.WRX (bad) imull sub (bad) (bad) gs push idivb sub jne addl sbb jg mov (bad) jnp add xchg nop and xchg movabs push (bad) push scas (bad) movabs outsl js test pop mov std push fisttp push cmp scas cs jae es jbe movabs jle rex movsb (bad) jne scas mov sarl sub adc lods (bad) sub sbb (bad) sbb xchg callq mov cmp pushq xchg pushq fistp std jle test adc sbb sbb orb insb hlt jns fs pop xor sub pop ds (bad) jne sbb imull and rex.RXB andl fidivr movslq jp out jle cmpsl mov outsl sub scas push retq in (bad) or (bad) mov fdivl mov mov (bad) iret in cmpb test fidivl sub in fwait xlat (bad) (bad) fisubr push scas or pushq adc jmp outsl (bad) pop movslq outsb or and xchg callq mov sub (bad) ja mov (bad) movabs (bad) fsts rex.RB out xchg mov in dec scas jp ja mov insb rex.WRX rex.B popfq push fnstcw stos cs rex.RB (bad) cli movsb mov sub (bad) pop jg xchg adc sti int3 idivb addr32 jp pushq ficoml lock imul (bad) (bad) adc jbe out movabs movabs or mov mov (bad) std scas clc mov pop in (bad) jo jo test fiadd (bad) lods cli je jns pop out jo push insb lahf movslq mov mov push (bad) sub mov icebp cmp mov imul cmp (bad) mov (bad) cltd (bad) pop movabs outsb jmp mov pop pop cmc sub pop push rex.RX outsb fsts add fs lret mov (bad) data16 test je stos repnz pop adc sarb addr32 add cltd pop rex.WRB (bad) cmc jle xchg int leaveq xchg movabs retq or enterq int3 sub mov hlt and shrb or mov cmpsb movsl std stos pop cmc (bad) (bad) jns rex.RB test int scas gs rex.RX loope lods mov or fbstp movabs (bad) xor test scas (bad) jae cmpsb pop hlt rex.WRX ds jp repz rex.RX pushq scas lods (bad) adc pop cs jne jg insl jns (bad) cmp lock cmpsb jo insl rex.R or (bad) movsl mov mov fisubrl rsm addr32 movabs and cltd rex.W jl sbb pop hlt (bad) push (bad) jns clc pop pop rdmsr push jnp sub sti ss stc push cli in xchg sahf sub mov push mov cmp rex.X jrcxz mov jmp (bad) clc lods mov add pop cltd and jb je mov or je (bad) js repnz fbld (bad) or outsl pop lods test scas or incl pop out add push pushq sahf rex.WXB xchg ss rex je insl adc pop lods lahf ss imul out lea jle jne xchg jb rex cltd outsb in add repz pushw in idivl test push sub (bad) pop je in rex.WRX imul push insl lea cmc loopne,pt (bad) insb jae fwait jp (bad) jmpq jb add (bad) pushq outsb mov jae mov xchg loope callq sbb sbb xchg outsl (bad) (bad) pop rex.W jb xorb clc xorl movabs gs and (bad) cmpl imul xchg jne sti ja or fldt mov out (bad) cmc jne sbb push jle shrl or pushfq (bad) adc jp lods mov xchg stc sub rex.WB jmpq xor (bad) pushq pop insl sub (bad) mov sti nop test outsl or xor sbb pop clc (bad) fsubrs xchg scas cmp mov mov (bad) (bad) (bad) jrcxz cmp pushq mull mov or xchg rex.R sbb (bad) or and (bad) jle roll hlt (bad) or rex jno rex.RX rex.W ror jle es jo addr32 pop or (bad) xor sub rex outsb or loop jle sbb (bad) js mov cltd jb cltd es xor xor (bad) ja sub fistp test hlt es loope rex mov out lahf pop mov pushq repnz ja jnp fisubrl push xor mov (bad) or mov sbb xchg push data16 or scas insl mov out data16 xor push cwtl ss (bad) outsb push (bad) (bad) jo (bad) add cwtl ds and and xchg and (bad) push mov and rex.R jge sub cmp sbb out (bad) test xor xchg cmp and sub jns and icebp jne xchg (bad) ds (bad) mov lods lret jmpq xor xor imull callq xor test sti imul jne icebp mov outsl in cmp xchg sub adcl fwait (bad) rex fidivr rex sbb cs jae pop xchg xchg rex.B jge mov (bad) jnp cmp (bad) pushq (bad) cmpsb jnp rex mov push pushq rorl fs jo pop lods iret stc or sbb sbb xchg jo cmc mov stos adc lods jo mull jo cmc (bad) push push jo iret (bad) cmc jnp,pn mov jmpq or (bad) stos and xor imul jg rex.WRX xchg cmp cmp sbb xor push lahf ja pop (bad) sub jbe sub hlt mov jmp rex rex.WRX ss std movabs push cmp pop movabs icebp rex rex.WX je (bad) iret cmp rex.WRX and (bad) sub jg nop push rex.X lods cs fs or pop sub pop (bad) jbe jne ds jo mov xchg out outsb jle cmpsb ja xchg jb mov int3 imul sti jbe pop iret jo pop cmc imul scas ficom mov (bad) (bad) jge lods loope xchg es xor ja clc add stc mov jbe (bad) fidivl mov stc lret notb jne (bad) js vcvtsd2ss push lahf adc fsub xchg and ss jle adc and fcoms pop rex.XB cmp scas shrd rorl pop xor mov (bad) (bad) xchg rex.RXB rex.WRB (bad) mov iret sub add test clc scas jo xchg test mov mov (bad) jo lret out fs jo rex.W in lahf xchg (bad) sub jg scas popfq adc (bad) test xchg mov add xchg jl xchg (bad) lods fs push adc sti pop gs xchg ja repnz adcb push (bad) push icebp jmpq test repnz rex.WRXB adc movb loop pop (bad) pop xlat out bnd div fisttpll ja test pop and lods je jl loopne std jmpq rex.RB test (bad) pop rolb push lea and xchg in std movabs jmp sub (bad) hlt scas mov jrcxz rex.RXB mov push rorb sub (bad) sub test add fstps rex.B fisubrl or and fsubl lcall add scas cld loop outsb jp (bad) rex.WR mov je (bad) pop data16 jp pop rex.B addr32 in xchg out mov xchg jnp xchg fstp xor xchg rorb adc mov outsb sahf cmc mov out mov insb data16 pop scas insb ja (bad) pop scas jbe sahf rex.WRB fiadd gs or xchg pop xchg mov add jmp xchg insl lods shl test xor and loope xchg (bad) mov es xchg xchg xor sbb retq pushq sti fmull mov and and jnp xchg (bad) rex.WRXB (bad) loope clc (bad) movabs push test (bad) mov rex.WR add (bad) sti outsl mov clc rex.XB ss cwtl sbb push rcll int jmp cmc icebp mov xor fwait shl sbb nop popfq sahf es cs xchg mov (bad) nop mov and pop cmpsb out pop pushq (bad) loopne (bad) push (bad) callq data16 mov (bad) sbb outsb lods add (bad) xor imul shrl xchg mov test (bad) jmpq cmp cmc js jae and (bad) movabs fiaddl movabs sbb adc add xlat sahf xchg nop lret mov (bad) and test jp cmp pushfq (bad) in or in mov jmp adc ja mov lahf mov out (bad) or xchg sahf retq rex lahf mov cs adc pushq push std sub mov js add sbb std rex.XB nop (bad) push push imul fcoms repz lahf sub rex.RB rex.WXB (bad) (bad) cli pushfq jne jg sbb loope shrl sbb xor rex.RXB retq mov sbb adc fdivl fwait sbb (bad) cmp lahf out sub xchg pop fildl mov mov retq jle mov mov pushfq pop rex.XB rex.R rex rex outsl out jge jnp jb and scas jns jl fs pop movabs rex repz retq test std fs movabs (bad) pushfq pop cli or jg push pop xor (bad) (bad) fildll insl fcmovnbe adc fcompl (bad) xchg pop sbb (bad) sbb outsb (bad) adc mov data16 (bad) scas push mov jb sbb fidiv rex.WX subb rex.WXB es add rex.RXB pushq fsubrp push cld xchg loopne es jno sbb rex.WR xor movabs sub (bad) test out cwtl (bad) out jrcxz out scas xlat (bad) lods jns ss cmp mov jbe es (bad) js fs jge fldcw mov xchg pop jge rex.W mov outsb mov cli and xchg pop rcrb cmp rex.RXB lcall or push and scas cmp cmp add mov enterq mov rex.WXB add test xor (bad) jae (bad) adc test sarb or lods jge scas jmpq es (bad) rex.WRX (bad) shll scas (bad) and add jg mov add xlat gs and hlt (bad) push jrcxz rex.XB gs retq (bad) jp insl cmpl pushq xchg (bad) cli xor movslq jno es shlb or sub jg js push (bad) rex.WB xchg xchg fisttp adc (bad) cld adc rex.R jo adc data16 scas jge (bad) mov loope jns repnz mov (bad) sub pop clc test xchg cvtdq2ps movabs jo imul insl pushq jp mov (bad) jp rex.WXB (bad) or fnstenv rex.RX ja (bad) jne sbb pop lods (bad) int3 (bad) mov mov rex.RX in in cld rex.WX (bad) xchg (bad) sbb (bad) xor sar pop jns jl xchg rex.WRX mov jp mov sti push in stos sbb jmpq rex.WRX shl cmp xor enterq or imul out sub fistpll stc rclb shrb loopne or rex.B frstor jle sub or (bad) js xor sahf sbb pop fwait mov fcoms (bad) out jg pop push movabs rex.X mov imul ficomp xchg push rex.XB rex.RX stc xchg ja sbb icebp ss jg sub sbb mov int (bad) push sbb rex.WXB (bad) mov rcrb xor pop ss fisubr pop rex.WXB test pop insl rex.WB or xchg jae (bad) jl xchg mov jbe out mov rex.WR insl add (bad) (bad) (bad) cmp or movabs ss rcl ss (bad) pop jne mov mov pushq testl jmp je test jrcxz rex rex.WRB rex.WX jp rex.WRX rex.W outsl ja jg fistpll mov (bad) sti rex outsb loopne ja (bad) sbb push ds mov (bad) fucomi fdivrs jo data16 rex.XB insb rex.RX xlat (bad) test lret test sub imul cs (bad) and cmp int xchg clc movabs std (bad) hlt adc add sbb in or (bad) jbe,pt cltd xchg rex.WRB movabs adc jrcxz rex and push gs iret mov push xchg movd fistp imul jl out mov xchg jo pop push incb rex.XB rex.WB repnz mov in add sub jg sahf idivl outsb rex.WXB jo,pt cmp push (bad) and mov xchg insb cmp data16 push (bad) (bad) jne xor sbb iret (bad) jge xor xchg lea data16 not scas cmpsb sbb xor add jae (bad) cmp add jle push jns ja pop scas icebp (bad) lahf rex.RXB sti mov fstpl xchg push lret cmp ss (bad) imul xor (bad) sti movsl sti and ja lods (bad) vcvttss2si out and iret sub cs pop pop (bad) (bad) or icebp mov pop (bad) pop addr32 in sub rex.WR pop jb rex.WRXB jo ds jge xchg jbe in pop icebp jl jbe cmp insb pop std xchg int xor orl add rex pushq rex.X fisubl (bad) decl rex.WRXB cltd pop mov rex.WR test rex.WRX rex.WX test cwtl xor outsl rex.RXB fsubrp xchg outsl imul iret (bad) cmp in loope xchg out scas mov xchg push push out fs add rex.WRXB or iret rex.XB imul scas gs rcr cmpb roll and and ficom mov (bad) cmp lret jns outsb (bad) shll (bad) sbb ds lods (bad) rorb enterq clc and (bad) push mov std out xor xor (bad) (bad) stc nop ja mov addps outsl rex.WRXB rex.WRXB jae scas stos mov rex.X or mov push fs cmc rex.WRXB xor (bad) (bad) add fistpl (bad) and movabs (bad) jp movabs xchg sub (bad) rex.W cs addr32 sbb stc imul ds and cmp sahf (bad) sbb movabs jb xchg hlt fsubl cmp pushq push leaveq sbb cmp (bad) scas rex.WRB fs push iret ja stos ja or in lods adc cmp push hlt pop jmpq push iret addr32 cmp test (bad) (bad) jrcxz (bad) imulb pop repz sub sti cld mov cli int3 xchg (bad) add test xchg popq out xchg rex.W fwait and pushfq (bad) (bad) je cmpsb idivb insl test fisttpl fcomi pop mov addr32 mov xor (bad) gs and (bad) jl pushq (bad) jo xlat icebp callq movsl jo int jmp outsb rex.WRB sbb jp scas pop cmp movslq jns ds sbb (bad) pop pop and sub xor xchg movabs add fdiv je in pop mov insl jbe iret rex out mov xor and scas xorl xchg mul xchg pop fwait cmp insl or imul xlat and cmc fsubrl hlt movsl jl xchg outsb xchg pop adc insl add (bad) pop pop rex.WRX pushq movsb retq lods mov enterq incb (bad) data16 xor mov sarl punpckhbw cld adcl flds stc (bad) push (bad) xor test callq rex.WRB out cwtl jmpq (bad) jo fdivp imul add xchg fist loop sbb shrb outsl sarl rex.WXB in insb cmp (bad) stc iret push xchg mov vxorps test lods or iret pop cltd ja xor (bad) cmp add and pop xor jbe sub pop clc jl fs (bad) jmp es std nop xchg testl push or rex.WRXB outsb cmp out lods and scas jge and lods (bad) rex.B push or cld in mov in cltd push bnd mov (bad) xchg movabs sar repnz jo mov rcrb test mov test mov gs (bad) lret jmpq data16 or sub jl loope cmp outsb xor cs jl xchg cmp scas cs xchg xchg cmp rex.WX nop sar jp int3 mov jae retq xor sbbb test pop (bad) std callq test sarl cmp jmp idivl mov (bad) xchg lods (bad) fsubrl repnz lods test sti test cmc push sub (bad) or rex.WRB jae (bad) mov out and mov sub hlt cmp neg test cmp jbe lods rorb rex.WRXB hlt cli imul (bad) outsl (bad) je out pushq jb pop out xor (bad) pop rex.W and rcrl xor add (bad) pop sbb push push pop sbb std sbb mov xor cmp (bad) mov or jae cmp fnstsw in pop lods int pop in movslq (bad) mov push push in nop cwtl (bad) push rex.XB loope (bad) jge mov jl pop insb and push cmp stos jo (bad) (bad) cltd adc pop ss jb sbb rex.WB rex (bad) insl lahf add iret xorl sbb cltd mov add (bad) xor xor (bad) out cmc or (bad) pop (bad) rex.WRXB or scas xor (bad) popfq hlt jle out sbb rex mov mov out out and push mov rex.R jmpq jmpq sbb and out movsl lret xchg movsl mov fsubrl sbbl and ss movabs rex.RX fldcw xchg shrl (bad) pop sti stc movslq cmp leaveq sbb out add push cli ror mov mov ja int (bad) sub lods lret loopne outsb scas cmc (bad) (bad) movslq ss scas rcrl cmp scas add (bad) or scas (bad) repnz pop adc push out push fsts cmc mov repz push (bad) xchg rex.RXB (bad) ja sbb rex.WRX rex.WRB loopne (bad) jo push adc or mov rex.WX jb rex.WRXB decl jge in test xor idiv callq (bad) xchg mul adc add pushq mov sbb test fld1 pushq xchg (bad) mov clc imul sbb jmpq repnz jle xor test (bad) (bad) rex.W pop rex.WRX pop (bad) mull andb cmp test (bad) rex.WRB out add push fmuls test jg sbb movabs mov cmp test cmp loopne test out jge rex.B data16 jl mov xchg xchg incb rex.WX mov sub or js and pop jae sbb or pop cld add jae adc jns xchg add and scas lea fidivrl rex.WXB test mov (bad) push xchg repz jp scas adc ja lahf jne xchg cltd ss or or xchg sbb leaveq lods adc adc sbb (bad) jbe out (bad) in divb clc or xchg (bad) std pop xchg scas (bad) test iret add add rex.WXB push pop rex.WRX rex.WB ss xchg mov push js sub fistpl or sbb pop and test clc jne pushq add xchg pushq rcrb retq xchg mov pop rex.WRXB movslq jo stos jae fwait lods add or cltd es rex.RX jl rex.RXB jo pop shll jmpq push movabs fsubrl ficomp jo rex.WXB adc xchg fsubrl (bad) jne scas rex.WR sbb cmp imul rex.RX pop movabs es xchg lret ds int jle sbb pushq imul mov and (bad) sub pushq push movsl lret insb cmpsb sarb (bad) movabs sti mov imul mov scas fwait in je (bad) rex sarw retq jmp or (bad) imull test lods (bad) (bad) mov cmpsb xchg jmpq xchg cmp movabs sub (bad) test cmp out jae add fldcw pushfq fwait add sahf xchg jb xchg jl mov rex.WRX or jnp out rex.RX jb fadds test (bad) fiadd shrb (bad) ja or xchg (bad) retq nop rex.RX fsubl test pop pop rex.B jg pop adc lret rex.RXB outsl (bad) and xlat lret icebp xor repz jmp jge clc xchg jo outsl jb rex.WB mov (bad) idivl movabs int rex.WRX jle iret rex.RX shr adc stc jp jno or sub (bad) mov jle scas cmp xor scas push leaveq jo test jg (bad) pop mov in lea jo shlb pop adc mov (bad) mov add mov jmp movaps fisub or jo jns jle xor lock (bad) jp (bad) jnp mov push xchg jns push xlat mov insb or mov adc lock add insl jb adcl movsl mov ja leaveq jl rex.R rex.WXB push std add cld xor cld (bad) mov pop jmpq out fstl fstpl pushq jno sahf fnstcw mov ficomp insb jp (bad) xchg mov movsb xchg jnp repnz jmpq int3 adc (bad) (bad) add mov (bad) std jge movsb cmc (bad) je (bad) lock pop xchg or (bad) push xchg (bad) std pop loope cmp rex.R fwait jb jle xchg pushq cld jae cltd push test mov push rex.RX data16 lock jns je cmpsl std pop test xchg insb xor out adc (bad) push out add mov jnp xchg cmp (bad) out ss (bad) stos jbe mov rex.R (bad) test (bad) pop rex.WRX push jp gs pop std xchg pop sti (bad) lret in adc jo or fwait adc movabs (bad) rex.R scas adc pop and and shr rex.RB sti sbb ja out add (bad) pop mov cli (bad) ja mov rex.WX xchg movsb subl scas jnp lods pushq hlt xchg mov lahf jrcxz mov int3 rex.WR mov add scas cmp jle cwtl in popq (bad) jmpq (bad) in rex test rex.W cmp cmpl popfq fisttpll or fldenv pushq pushq insb and ds jl (bad) rex.WRX jae mov mov loopne pop mov and cmc xchg and jmpq insl fiadd xchg jo jl (bad) jbe je rex.WR (bad) jo mov lret sbb jne jge add jmp add mov shrl (bad) ss rex.WR rex rex.W fs pop imull pushq imul test (bad) pushfq (bad) in rex rex.WR rex.WRX (bad) or movslq insl sti ja rex.RX rex.RX jbe (bad) (bad) data16 and jno flds sti and mov loope retq cmp (bad) pop rex.WX addr32 mov and movslq xor callq (bad) push (bad) or mov (bad) add mov pop xchg push imul ss (bad) ss (bad) pushq adc cmp jg pop add pop (bad) pop add ss rex sbb idiv (bad) test insb in sub (bad) jne (bad) cltd ss scas es insl fadd push je cmc (bad) xor jns adc ljmp (bad) pop mov xchg sub push push mov in xchg outsl (bad) or std idivb loop rcr xchg add movl lods fstpl (bad) cmp cmp ficom gs (bad) (bad) lea jbe ds (bad) cmp sbb fimull xchg cli std xor pushq add rsqrtps xor pop jne pop (bad) sti stc mov out flds jne pcmpgtd (bad) or lret callq imul rex.XB jmp sub cmp (bad) insl adc xor rex.W es movabs jb fs rex or pushq add (bad) mov xchg mov cwtl adc lods and mov pop add scas out mov sbb jle push and std roll jge adc (bad) sbb movslq movabs outsl (bad) jae xor cmp (bad) notb pop insb jl (bad) std sbb fstpl imul std sti stc jno mov (bad) divl and sbb pop gs (bad) mov mov xchg js scas pop or incb or xchg cltd push (bad) out outsl rex.RXB (bad) (bad) jg mov add jmp insb sub cmc mov xchg idivl (bad) fisttpll sub sti fnstenv scas jp pop xchg rex.X ds (bad) pushfq cmp mov (bad) in jle hlt xor (bad) pushq mov mov (bad) cmp loopne jle (bad) cmp xor adcl mov and rex.WRX imul mov scas (bad) ja adcb (bad) mov add xchg (bad) orl ds scas fsubl xor jmpq sub js (bad) or test imull or or icebp scas fisubr sub add push nop outsb or ja addr32 xchg es sbb fs movabs cltd fwait (bad) (bad) loopne in std fs retq xor mov adc xor mov mov mov add in jns push jrcxz in pand pop je in test pop lret fincstp loope sarl pop rex.WRX (bad) cld jle sbb scas loopne fdivrs adc rex.RX cmp fldenv orl xchg iret jo rex.WXB (bad) cmp (bad) pop cmpsb sbb (bad) hlt rex.R rex.W iret jmpq cmp out movabs rex.WR xor jo push xor and addr32 jmpq mov outsl lahf (bad) (bad) ds (bad) divb es push (bad) nop push mov (bad) push adc addb jo xor add stc xchg jrcxz adc fcoml je push rex.WRXB xchg rex.WRB test and fdivrl xchg xor (bad) pop add out retq cmp (bad) sub test (bad) jns repnz xor mov push scas icebp mov sbb (bad) shl mov rex.WRB (bad) jo jge pop pop callq push xchg fstl lahf add scas adc subb mov ds (bad) xchg insl jle cltd xchg rolb clc rex.X sbb jbe in in std jae (bad) (bad) jl jne add movhps rex.RXB mov or pop pop shld in mov cs jbe push in callq rex.RX sbb hlt or stc xchg sbb rex.R test push retq fdivrs push mov ss adc rex.WXB cli and ss (bad) sarl mov xor mov jnp or sub orl and sbb lock (bad) mov push xor (bad) jne sub pop gs (bad) pop xchg rex.WRB repnz scas mov rex.WXB (bad) cmpsl clc repnz out add pop sbb enterq scas fisttpl pop jb (bad) rex.W (bad) ds rex.RB rex addl pushq pop xlat ss ss negl iret sti imul xlat jmpq jbe icebp (bad) xlat fiadd jnp cmp in (bad) jle pop mov in (bad) xor in sti ja jle movabs xchg out loop movabs scas int cmc mov jl scas xchg es int rex.WRX rex.B (bad) add rex.RXB xor xchg (bad) (bad) cmp ja adc rex.WXB lret sub xchg decb sub cmc fcmove rex.WR sti imul (bad) fimull icebp pop cmc gs int xlat fcmovu pop push jl or cmp or rex.B xor iret or or jo,pt in jnp jnp xchg movabs lahf jb (bad) sarl or cmp jg xorb (bad) insl cmpl mov loop pop xchg jno (bad) lret xchg mov xchg jb jmp pop jo (bad) js rex.RXB push jbe rex loopne pop retq cli psubq (bad) jmp (bad) (bad) (bad) xlat jge fcomip insl adc adc pop (bad) (bad) gs out (bad) (bad) out push xchg pop sahf subb push pop scas push movabs rex.X mov (bad) add outsb jmp add fucom fildl cmp cmp mov repz rex rex insb scas cmovne out (bad) cmp out testl xchg cmp repnz shrl test stos insb rex.RB rex.WRB push adc jl shrl (bad) push js jge and ror popfq shrd (bad) mov test cmc (bad) rex.WRB or std add (bad) xchg cli ss pop xchg cmp retq pop jnp scas pushq repnz fs xchg sbbl (bad) xor xor notb (bad) repnz movl jl comiss xchg (bad) movsb or cmpl sbbl cmc hlt (bad) (bad) ss (bad) loopne loope sti scas sub push repnz jp jg adc sub rex.RXB rex.RX push sub sub enterq (bad) mov xchg jmp xlat cmp loopne movsb pop test and (bad) (bad) iret scas movsb rorl shr movabs scas cmp rex.WX xchg rex.WRX rex.WXB mov push jbe mov sub xchg mov hlt scas (bad) pushq xor lods (bad) fstp adc lret (bad) lret sbb in lods add loope sub jmpq adc (bad) fidiv testl push rorl mov pop xlat cli jg (bad) insl jp insb out mov pushq test or rex.RB stc jo ja scas pushq fwait and ss xor fs mov cmp (bad) (bad) jl xor imul stos add (bad) pop mov rorl js pop (bad) sbb ss and test lret in (bad) notl scas jb jb clc lods movabs pop jmpq mov xchg push scas clc lret (bad) gs cli in xchg mov and (bad) pop add jns out in jmp in xor ss cmc mov (bad) jp xor rex.WRXB sbb jle and int3 and cmp rex.WR rex.W ds (bad) jbe (bad) sbb sub xchg bnd mov loope cld rex adc leaveq rex rex.RXB rex (bad) movabs xchg cmc out data16 divb test mov (bad) pop rorb rex.WX out sti std int3 loop (bad) jg je and out ja ss push stc cs mov repz leaveq (bad) sbb adc sti xchg jns (bad) shrl rex.RB jmpq std jge push rex.WR test adc (bad) test pop lods sbb in pop jns fwait (bad) scas ss scas pushq push imul rex.X fdiv int jbe jo mov sarb movabs pop mov jmp and fs std sub pushq adc mov jrcxz sbb in push (bad) (bad) mov outsb cmpsb xor sbb scas insl stos sbb adc adc (bad) (bad) rex.RXB mov fs xor test cmpsb mov insl push jge xchg mov imul pop (bad) jnp cs (bad) (bad) adc fadds adc (bad) cld (bad) or (bad) mov sub (bad) mov cld xchg fsubrs lods jp outsl mov (bad) (bad) test and pop xchg (bad) adc xlat outsl movabs scas pop cmp test incb in test rcrl cwtl mov lret imul jp adc fcmovnbe and (bad) iret (bad) iret xchg outsb jg in cld mov sub loope add mov mov test jp mov test rex (bad) sub xor and movsb push rex.WRX (bad) (bad) js fidiv jbe rex.WB rex.RXB rex.WRX hlt and ss mov and mov (bad) test push sub (bad) cld std fs adc jbe cmc stos outsb or jne (bad) (bad) mov or cli rex.RX or gs jle jl (bad) movslq mov in nop fistl jb in movabs (bad) repnz fidivrl jns add jb scas sub data16 mov xchg adc setle or (bad) test push mov jp jl loope lods out ds cli mov fstl add ja pushfq sub pushq (bad) scas mov test rex.XB (bad) insb (bad) lock (bad) xor xchg out insb or (bad) mov jns (bad) insb cmp in xchg mov add out cmpsl add cmp scas xchg fwait rex.RXB (bad) cmp movabs loop movsb insb and pop rcr scas push mov sahf cmp mov je mov mov pushq (bad) js sbb or rex.RXB movslq adc (bad) mov iret (bad) adc (bad) in or xchg (bad) push xchg lea scas xchg jo rex.RB lock add xor adc add leaveq (bad) (bad) push rex.WRXB xchg movabs shrl ds xchg or lahf fistpl (bad) and jo pushq and push pushq pop pushw test mov imul loopne cmp cld retq or pop jge xchg loope js testl sub sbb in push sbb mov gs movabs ja icebp es imul rex.WX out fdivs btr loop movabs fildll xchg lea pop out sbb xor (bad) adc (bad) (bad) mov push pushq mov leaveq mov jo and mov scas repz jno fistpl cwtl ss (bad) and mov (bad) xchg addr32 and js pushfq rcrl lret insb jb mov (bad) jo (bad) rex.WR pushq cli scas rolb or push (bad) lock cmpsl lods out or fisttp and sbb test movabs xchg shl cli cmp mov sarl insl movd push (bad) xor ss pushq sub or mov negb int test (bad) mov push jp sbb stos in movsl mov and lahf mov xlat or out xor pushfq (bad) in add cmc (bad) retq rcl rex.WRB jo and rex.RX scas jbe scas sbbl addr32 repnz (bad) xchg pop pushfq (bad) add (bad) enterq in outsb data16 js pop stos rex.RX imul mov fidivl cli or (bad) ss mov xor pop push int rex imulb decb imul jne cmp outsl std rex and cwtl pop xor lahf ja jg fs gs cmp lock fcomip sub loop fsubrl pushfq (bad) out movslq rex.WB loope mov rex.W mov in retq xchg jg rex.WX (bad) (bad) cld sbb (bad) jne (bad) data16 add ja lea mov repz cmp adcl push out mov iret outsb lcall sub rex.R (bad) mov movabs insl xchg mov gs sub nop leaveq xlat lea movabs repz rex.W rex.B or mov imul scas sub jne pop cmpsl (bad) insb loopne xchg mov rex.X jg jle mov jp (bad) pop cmc pop out test idivl mull mov repz xlat mov imul and ja (bad) mov (bad) jg (bad) or imul in and paddusb rex.WRX test fucomip mov add (bad) scas insb ss mov (bad) sbb (bad) rex.RXB rex.X xchg push fsubrl pop rex.WR sbb jo (bad) (bad) push rex.RX (bad) rex.RX rex.R rex.R push in sti (bad) add data16 lods shl outsb sub jl outsl repnz lods repz xor (bad) mov mov (bad) jg fstps xchg jo stc lods imul lods repz xor insl mov xchg cmpsl loop mov pop add out pushq rex.WRB jp scas jrcxz jle cmp negl test cmp fistl mov ja scas push and rex.WRX (bad) rex.B out jl shrl lret mov sbb sbb movabs sbb (bad) cmpsl pop mov (bad) or sub cmp rex.WR repz cmp (bad) data16 es sub (bad) insb pop jns js (bad) sahf lods xchg rex.X rex.WX add jns es cs jbe ljmp add mov cmp jae jbe pop sub jo (bad) gs in sub add jne callq cmp (bad) (bad) lea mov imul out jle out rex.WRX or int3 retq jns (bad) (bad) and cmp icebp mov xor idivb sti mov ja andl (bad) leaveq outsl mov rex.WRXB xor (bad) mov insl xchg movslq cmp xchg xchg (bad) cmp pop sbb pop xor adc mov loopne (bad) hlt movabs mov int callq gs stc gs outsb xor (bad) scas rcrb in mov (bad) xchg int3 jnp mov xchg icebp movsb (bad) sub jns mov xchg out clc iret cmp negl iret push lock fldcw (bad) jmp rex.XB push (bad) or std jne outsb sbb lahf loope imul jp insb (bad) adc mov mov jge,pt lods sbb and rcrb jno pushfq mov pop fimul roll cs fldl adc sub ja nop mov jo xchg mov cs pextrw push sahf sbb (bad) (bad) popfq mov je rex.WB and sbb xor (bad) xchg jmpq (bad) jp xchg xchg scas retq (bad) icebp in (bad) pop cltd (bad) insb sub sbb sub xchg rex.WB cmc out lods jrcxz and mov cmp fidivl movabs pop jl jb cwtl lods test jp sti jg cmpsb data16 pop loop pop xchg js mov xlat repnz adc test fistpll pop and std jl test (bad) je (bad) xor scas cmp lods add (bad) cmpl sub add jp std jg cmp pop rolb jnp xchg es cmp jno idiv jnp pop xchg rex rex.R loop (bad) jmpq in mov lods pop mov rex.WRX xchg movsl insb shld jg (bad) jge (bad) or cltd jbe imul test cmc leaveq in movabs retq jns cli add fdivrs movabs xorl fwait (bad) icebp cld xchg rcrl add add movsb test idivl push xor jno xor mov clc jl test repnz cltd push out pushfq imul rclb cmp sbb rex.R scas jmp jl jge lods in sub adc scas rex.X (bad) xor or cmp and add sbb xor xor in (bad) (bad) outsb cmp scas fs jl (bad) std add out add sbb jp lods or or in movsl jo push out pop cmp (bad) cmp sbb in stc jp rorl out fcoms (bad) gs (bad) fnsave (bad) rex.WR push lret xchg sbb sub sbb jge pop mov rex.WRX or insb rex.WB jp fcomip insb lods push (bad) (bad) pop jns jl rex.WRXB rex.WXB test stos (bad) xor pop sub out mov rex.WXB mov rex.RXB rex.WRXB (bad) std stos in je imul cmp cmc (bad) js sbb xor mov lods sub (bad) jp add (bad) jbe movsl xchg fimull ja xchg (bad) jnp divl cltd xchg pop jge outsb xchg jnp data16 shrb sbb sub mov fcomi scas jle xor pushq jb mov repnz (bad) push out jne fsubrl xor mov mov rex.XB test jbe scas pop scas insl jne pop adc jmp cs lar hlt rex.WRXB sub in mov pop in scas xchg mov pop (bad) rex.WXB (bad) xchg mov push xchg rex.XB (bad) pop jle lods stos pop cmp (bad) jbe adc jp cmp outsb pop sbb enterq lret sbb mov jle rex.RB xchg fistpll push stc cmp addr32 jl jle lahf cmp iret ror add jl lods (bad) outsb push jl movabs es mov test push fistpl ljmp add xchg pushq push rex.B mov add pushfq lods callq sbb js xchg test pop mov (bad) ss mov je pop js (bad) sbb shrb (bad) mov enterq jb rex.R out jb es ficomp callq ss add xlat jmp jb sub cwtl stos lret outsl (bad) (bad) sbb gs xor in fdivr out (bad) roll mov adc ja rorl lods (bad) rex.WRX test int3 jne fiaddl lahf push and rcrb push xchg fs jae rex.X test add icebp (bad) (bad) insb decl jrcxz insb xor mov cld mov scas cmp (bad) xor jle sub pushfq xchg and jmpq nop push and pushfq loopne fbld cli (bad) jge mov xchg je nop loope imul out (bad) jrcxz fwait jrcxz in jb out and (bad) pop in rex.B pop pop (bad) test sarb imul xorl (bad) jle (bad) mov sbb pop std add loope (bad) in or idivb rex.X jo out mov sahf (bad) (bad) (bad) adc adc addr32 lret mov test cmp icebp sub out xchg in test xor je cmpsl sbb xchg stc cmovno jle xor in leaveq adc jne lods (bad) pushfq cmp subl pop xchg xor insb and xchg pop jge,pn shrb addr32 test outsl imul (bad) sub gs adc pop callq jg xorl out fiadd test mov or rex.WRXB jp (bad) adc cmpsl xchg stos sbb sub sub jne sbb mov (bad) mov xchg xlat pop movsb in cmpsb and scas pop xchg pop push xor pop movabs (bad) int3 jae (bad) (bad) jge xchg add movzbl xor (bad) jle std (bad) pop rcr xor jbe movabs mov (bad) rex.W es lar xchg jl (bad) int3 mov shrl sub sub mov rorl push mov test jae xor out enterq fistp sbb icebp pop pop (bad) mov rex.WB std or cmc (bad) shr sub faddl adc divl xor stos cmp xlat sub pop out (bad) push (bad) movsb loopne (bad) flds pop scas movabs cmc sbb rex.RXB pop jrcxz insl or mov (bad) rex.X or sti loope (bad) jg imul jo mov sbb (bad) mov jl mov and (bad) (bad) and (bad) or outsb (bad) sub pop xor (bad) (bad) xchg rex.WRB fildll addb or pop (bad) movsb xor (bad) scas lea imul (bad) rex.RX rex.WRXB (bad) rclb xchg fild and data16 push add jp xchg pushq addr32 int3 and pop rex.WRX jb cmp iret lods jb clc (bad) out sti scas nop pop mov icebp jo callq xchg jge cmp add or out rex.RX jae mov rex.WR xchg shrl jp insl xorl and xchg rex.W cwtl rex.X mov idivl xchg jge out out rex.W rex.RX jrcxz xchg mov xchg jns jae pushq (bad) lret in xchg rex.R jl cmpb (bad) fs xchg add sub jno movabs pushfq mov (bad) cwtl in xor movslq fs (bad) sub or cmc ss (bad) jl (bad) xchg sbb cmp fstpt andl rex.WXB outsl (bad) lods out add es xchg (bad) (bad) push jb or gs (bad) jbe jb scas cltd mov (bad) mov mov cld mov sub jmp sti shlb xchg fbstp xor (bad) fwait (bad) (bad) mov jns xchg cs popfq cs push mov cmpsb sub push shll test rex.WRX data16 fwait je sbb jg pushq mov push rcl xchg push jne imul pushfq mov enterq rex jle ss mov and fwait in insb mov pop cmp push rex repnz (bad) sbb (bad) mov adc cmpl cmp xchg movabs insl adc imul sahf sub push xchg pop repz orl add icebp cmpsb or add push shr insb mov repz imul lods cmc xor loopne lods cmp add movabs jno add pushfq lods mov mov jl xchg jns (bad) mov movabs movsl pop xchg mov addr32 xlat sbb or mov xchg in lea nop mov (bad) xchg fistp fimul jns sub cmpsl loopne xchg mov sti rex.W mov movslq out pushq js mov xchg insb cmp lods (bad) cmp cmp rex.WRXB jle mov test sti callq mov sub pop xor push stc outsl jbe,pt callq xchg insb out jbe pop sbb in popfq rex.WRX push jno jo pop test pop retq out jb xchg jg jnp push jb loope jae ja mov sbb mov (bad) jne jg sub addl icebp idivl jmpq repz fwait iret xor xor imul (bad) repz mov xor leaveq (bad) or jg jle and add (bad) xor (bad) and retq cmpsb iret loopne nop lods rex rex.WX mov movsbl pushq mov test iret loope pop jg sbb push cmc (bad) sub (bad) cli (bad) mov pop rex.RXB imul adc or xchg or leaveq hlt mov mov rex.WR insl pushq pop jp or (bad) pop in adc outsb rcll rex.R shlb mov jnp cmpsl lock jns out push xchg (bad) jns rex.R mov scas mov pop icebp (bad) rex.RB xor add rex.RX ror xchg xor fucomi xlat imul push xor jmpq outsb ja shl sub xchg hlt sbb jge movabs icebp mov fmull jle scas mov negb fmuls mov and movabs lock rex rex.WRX (bad) rex.WRX es mov xlat push movabs cmp push notb (bad) cmp retq outsl xor scas rex.R (bad) mov (bad) jbe mov orb adc xchg mov xlat (bad) xor (bad) or (bad) outsl push or jl insl js lret add mov (bad) (bad) push jp out push cmp test (bad) fwait rex.WR push pushq out jmpq cmp jmpq add and (bad) sti push (bad) or add ja scas and movabs testl pop (bad) hlt incb xlat push sub or (bad) js jmpq fiadd add jrcxz jbe push (bad) (bad) enterq jmp mov (bad) fs (bad) cltd cmc (bad) cli outsb jg jmp xorb rex fwait mov push and stos (bad) fs rex.RX pop stc jmp std (bad) sbb iret scas movabs and (bad) sti or std mov out leaveq scas cmp xor out rex loope jp (bad) push (bad) rcrb or and push fimul sbb sbbl (bad) cmp outsl (bad) mov jb (bad) scas push fist cltd std and iret sbb rclb (bad) jb and outsb test xchg iret je sbb ds or fcompl cmpb jb (bad) pop mov sbb jb rex.RB repnz std sbb and hlt jns cmpl sub xor rex.WR xchg retq scas (bad) (bad) outsl xchg jo scas adcb lods fcoml mov lret imul pop push (bad) enterq (bad) sbb pop jb insl insb jg out jo lods jne cmpsb test rex.R nop (bad) setb (bad) in js xchg out push imul xor scas jge outsb (bad) rcll sub div mov (bad) (bad) cld movabs movabs test add jp jbe in xchg fldenv jl scas movabs lret test and js adc (bad) es iret (bad) jl jge (bad) mov lea cs js adc rex rex rex.RXB add adc mov mov sub ja mov mov pop xchg and adc (bad) outsl adc (bad) test jns subl push push sti rex.WRXB xor mov fwait sbb rex.WRXB gs sbb (bad) in syscall lea lret (bad) out rex.RX scas xor mov xlat pushq imul xchg iret mov (bad) xchg sbb xor cmpb pushq lock insb or (bad) (bad) scas xor sbb rex.WRXB or xchg rex.R pop loopel out jle adc push stos (bad) sbb mov sbbb std decb movabs xchg negb jle in enterq mov xchg rcll or popfq out (bad) pop push pop lahf rcl cs ja int3 movabs xchg pushfq or leaveq add pushq (bad) (bad) mov or in xor sub (bad) jbe cmp jge test xchg rex.B adc in mov xlat adc pop (bad) push xchg (bad) int3 sub pushq lock and sub fs jmp mov sbb sub jge adc cli xor nop lods mov adc test int3 sbb cmp jo xor in sbbb cs push subl add (bad) cmp movsb js andb ja mov (bad) xchg jae cltd jmpq retq mull (bad) rex.WRXB fsts and jp (bad) and push mov or sbb xlat and pop adc or jg mov jrcxz out sub push (bad) ja fdivrp mov cmp rex.WX retq sub retq xchg jp jne fild (bad) sub sub loop (bad) jo callq push mov movabs adc sbb leaveq cld out or jbe movslq push cld xchg sub mul sub decb vcvttpd2uqq fiadd xchg je data16 (bad) (bad) (bad) nop fisubr add rex.WXB mull jnp data16 (bad) clc rex.W (bad) mov jbe enterq mov sbb sbb out lret xor outsl rcll cmpb in imul rex in pop pop retq pop lods lahf sbb mov jns xchg (bad) je (bad) in out xchg pop push rex.WX insb pop adc mov clc rex.XB pop ljmp xchg mov out js mov out out adc cmp (bad) sbb rex.XB xchg clc repz out repnz xor andl (bad) rorb fsubrs or fisub lret push cmpsl fcmovbe fsubrs (bad) mov ds xlat mov jno xor push rorb adc lret xor jmpq (bad) jp jb (bad) out mov gs fildll sbb cmc (bad) cld fs out mov int3 iret (bad) cld cmp jg not scas movsq cmp xor test sub cmp (bad) addr32 jns,pn out repnz rex.B cmp pop movsl sub rex.WRXB rex.R xchg mov punpcklbw outsb loop push out rex.WRX jle sbb push clc rex.WRXB cld xchg or jl rex.R lret jp scas cmpl cmp scas ja imulb rex.B rex.WB pop (bad) add rcll (bad) js std (bad) data16 (bad) mov (bad) callq hlt jge repnz xor stos sub push imul rex.RB data16 repz cmpb out push add jb callq lods mov rex.RB rex.WB sbb add add (bad) cli shll jo ja (bad) add rex.WXB rex.RX fldenv out rex.XB repz in std outsl cmp xor insb xchg pushq test ja repnz loopne je pushq mov rex ds out jg out repnz jrcxz cmp pushq faddl pop adc fldcw (bad) add push shrb sbb jnp sahf mov insl (bad) (bad) pushq out or fiadd (bad) jnp outsb mov pop insl (bad) jbe (bad) xor out fmul repz sbb sti add (bad) js jl mov jbe rcrl cld int xor xlat (bad) jo (bad) idiv movabs jbe push ds sub and ja pop pushq pcmpgtd and (bad) sbb vpperm pushq callq mov pushq fwait int fidivl out loop iret sub jb out and hlt imul push rex.WRB out mov out pop outsb in notb fsubs add mov push mov cmp (bad) rep (bad) cmp jo sti repnz cmp icebp sbb testl test scas mov pushq push mov jo mov rex jp rex.WXB lahf mov mov js jmpq pop pop mov lods andnps jns sbb rex.RXB rex.XB cmp out fbstp rex rex.WB repnz fcmovnbe (bad) mov enterq iret callq pop (bad) rclb (bad) lods (bad) jge mov xor scas cld push rex.WR lcall popfq lahf mov movabs sbb jp lods (bad) xor sub cmp stos (bad) rex.WRX rex.WX in xchg (bad) xchg fisubl (bad) lret mov faddl pushfq pushq (bad) jle or shrl je mov movabs outsb mov jl cmp (bad) loopne scas adc data16 xor rcl cwtl mov pop fiaddl cmp (bad) leaveq in lea xor cmc (bad) (bad) rex.RX push adc pushq (bad) (bad) loope (bad) stc (bad) jbe scas retq loop jae (bad) outsl (bad) cmp jo jo test pop jae ficoml xchg fdivp fidivrl es pop fdivp push sub xor popfq sbb mov and xchg (bad) sbb scas jge ds lret jmpq cli fwait loopne sub rex.WRX (bad) (bad) mov mov rex.WR out pop xchg (bad) pop xchg xor and pop rex.WRXB test push push out jge (bad) (bad) pop xchg xor pop imul in adc and je (bad) sarb movsb out (bad) test adc xchg mov sub js sub rex.WXB (bad) int3 pop rex.WX in rex.WR lret cmp mov lahf mov (bad) test jmpq jns jg je scas (bad) movslq rex.B mov and jbe,pt icebp (bad) add push mov jmpq fst movsl lret push (bad) jbe add and mov imul xchg sar fdivrl in insl (bad) (bad) sbb xchg js and cmp sbb xor (bad) mov scas jge iret or sbb pop imul pop or int3 data16 jbe sbb (bad) jmpq (bad) xor xchg pop test in (bad) movabs data16 (bad) clc jrcxz pop cmp push xchg jmp rex.XB lret (bad) outsl (bad) outsl (bad) push cmp rcrb sub adc jne rcrb mov jo test cmpxchg pop jle ja push (bad) jns jno add ss pop push cli jl sbb sbb push nop cmpsb cmp scas out pop rex.RX (bad) divl jle lret and pushfq and (bad) in xor mov add rex.WXB pop xchg icebp push jnp ffreep (bad) subl xchg or popfq rex.B fbld outsl mov pop jp (bad) mov jl cld mov pop adc out rex.W callq add imul cmp or mov jb push data16 enterq rex.WX (bad) jo (bad) push rex.WXB pop shrb movsl fmul xor out cmp loope idivb mov and test pop sub (bad) and rex.WB (bad) lret adc and xlat rex.WR fistpll scas pop insl (bad) fsubl sahf cmpsl stos std mov pushq adc and orl jbe jp es (bad) mov out mov data16 xchg jns rex.X imul sub (bad) jo sahf sahf cmpsl divl faddl (bad) jl mov lods (bad) mov leaveq mov or push (bad) ja adc cs xchg fdiv imul mov fiadd imull mov jo pushq and (bad) addr32 test (bad) (bad) rex.WRXB lret sti in cmp iret sahf sub (bad) mov cs lahf pop pushq cmp mov movslq (bad) mov rex.WB xchg xchg popfq (bad) fdivr ja mov iretw mov insb xchg xor and xor imul outsb pop std or or mov pop std outsl fs sbb test in push sarl jb nop lock xchg outsb rorb (bad) pop xchg fisttpll mov insb adc sti mov pop and sbb or rex.RX rex.WRX (bad) rex.XB xchg outsb sbb push jg in rex.RB jrcxz pushq jge jmpq jne js mov (bad) movb adc fimul popfq push outsb stos jbe (bad) jle idivl pop mov jg (bad) (bad) or loop addr32 xlat (bad) data16 rex.W movsb mov pushfq mov fs mov in movabs jmpq xor pushfq lea lock in xchg int lods and mov (bad) cltd push pop adc (bad) add movsl hlt jl mov iret in and ds xchg pop iret enterq xchg mov cmpsl sub xchg insb pop mov mov test xchg mov pop (bad) (bad) out xchg rex.WR fs iret insb in rex.X cmp add (bad) outsb shlb outsl popfq rex.X fs test (bad) (bad) sub scas mov std rex.RX and xor rex.WRB push movsl pushq (bad) jnp cmp test rex.RXB in jmpq pop fdivrs outsb pushq rex.R mov fdivrl mov rex.WX js callq mov lods lahf sbb test jbe js push repz fwait pop stc cmp adc push fistpll repz fwait xchg pushq (bad) sbb cmp pop outsb (bad) mov xchg data16 xchg and sub (bad) test (bad) (bad) or shrb (bad) bnd xchg jp pop (bad) es (bad) (bad) sub insb (bad) or (bad) sub pop rex nop lret mov xchg (bad) fiadd jb fbstp sub fsubrl and leaveq cmp pushq mov scas sbb adc adc (bad) rex.WB ss xchg or jnp pop (bad) leaveq jmp and out jp add (bad) pushq or loope std xor push pop xchg stc mov adc cli fucomip push and sub mov jp fldt mov idivb (bad) out rex.WRB rex.WR jl frstor xchg outsb add and (bad) push pop (bad) outsl jl push mov pushq movabs and lret push (bad) stc cmp cmp xor mov cmc or stos retq (bad) cli xchg cmp insl sub int3 (bad) (bad) sbb mov out repnz (bad) (bad) fisubl (bad) outsb pop test and cmp cli adc adc rex.WXB ja rex outsl stos push test pushq pushfq cmp (bad) mov cmp cmp (bad) stc in sbb sub or xchg jo cli fimul stos fcomi leaveq movb int scas movntps jmp jbe (bad) adc cmpsl imul (bad) pushq stc lods std test mov jbe xor adc lods sub sahf add fiaddl mov push or push pop (bad) jnp iret mov sahf jmpq and cmp stos adc mov sahf (bad) (bad) rorl add xor rex.W rex.RB xor pop pop jp rex.W mov mov pushfq add lock xor movslq ficompl out pop out (bad) cld imull mov (bad) sub cltd jne retq mov rex mov adc mov not out push lock pop movslq push (bad) cmp cmpsl fdiv movabs jmp test (bad) mov in mov ss mov negb (bad) scas push retq int3 mov (bad) or in mov push mov push mov (bad) pop lock and movslq jns jp or (bad) rex.WRX xor xchg sbbb lock xor jmp test mov retw js jg or retq rex.RX sbb sbb jno out test (bad) (bad) imul test (bad) in xchg pop jle add rex.XB jmpq jmpq test add (bad) emms movabs or (bad) (bad) in idivb gs je and jrcxz lods cmp (bad) xor jrcxz fldt fldenv enterq fwait sti mov pop int3 adc (bad) pop outsb fisttp ss xor xor lock pushq rolb ss mov lods sub sbb sub adc lods or divb mov in loope xor xchg xor mov sbb xchg outsl jb out jl stos sbb movsb (bad) sbb callq mov (bad) (bad) sub adc fucomp xor (bad) (bad) mov rex.WR lods (bad) xchg fisttpl pop xchg and xchg (bad) outsb imul mov std cli repz xchg mov ss rex.WB jbe repz push callq jl insl or pop and je pop hlt test xor rex.WR xchg insl jle adc (bad) fiadd sarb mov (bad) pop pushq or imul test lods (bad) pop cs jl bnd (bad) cmp jmpq rex.X rex.WX loope fdivl stc jns cmp stc in pop adc (bad) and cmp rex.WX jnp rex.WR or clc cmp js push lods int (bad) scas (bad) cmp pop jbe (bad) lock je (bad) (bad) push clc add in mov insb ja push roll xchg nop xor data16 (bad) bnd loope mov pop lock xchg adc enterq (bad) fwait xchg cltd sub lret add jmpq and or jge pushfq cltd (bad) push xor or pushq fstl pop cmc pop fcompl mov sub (bad) adc sahf jmp mov fdivr repnz pushfq in jle mov cwtl (bad) (bad) mov (bad) jle sbb sub mov (bad) in jb mov imul mov pushq cmpsb in in or faddl add out jle xchg (bad) xor push xor stos pop jge pushq insl cmp loope push ja cmp (bad) sti add adc cmpsl add jle or and retq xor insb push mov mov sub repnz sbb cli rex.RXB sub sub jmp mov ljmp movsb (bad) mov js jmpq mul scas mov andl stc sub loope (bad) fmull push cltd mov pop out (bad) stos lock (bad) push xchg mov sub jns push sub (bad) out cltd lods js (bad) cmp mov xlat and in pop cmc xor cmp add incl xchg push repz xor sub (bad) pop insl sbb jns js (bad) clc push push push or adcl xchg rex.WX (bad) jae jl stos (bad) cwtl xchg xchg and or lock jo outsb xchg mov or imul xchg cmp rex.WRX jo divl mov xor jne pushq outsl (bad) (bad) jae add pop rex.R imul adc push js fldt jne (bad) idiv insl (bad) imul rex.X fisubr imulb mov sti sub jne sub (bad) sbb test jb cmp cmc rex.WRXB rex int cltd push jg sbb shlb out sub insl lock push push nop cld jbe int (bad) ss (bad) (bad) mov and mov shlb sub enterq icebp outsb loope cmpsl pop (bad) and push out scas cwtl mov out bswap (bad) cmp cmp movabs rex.RX in sbb fcoms sub pop push rex.WXB hlt (bad) loop lahf xor xor xlat adc sub sub pop outsb adc cmp xchg jae cmc adc xchg sarl fs pop and pop ja jne (bad) ss es (bad) pop in (bad) pushq jp lods test fcmovnbe out cmp jo xlat int push xchg jg (bad) (bad) jp gs (bad) jp cmp cmp enterq rex.R test push lea mov out sbb (bad) lea push (bad) fninit sub jne adc mov (bad) or jrcxz cmp shrl stc jne jns pop test jrcxz xor nop rex.WXB cli sbb rex.R data16 cs fnstenv test out pop and pop data16 es mov imul rcrl cmp mov stos add lods cwtl in out jo sub sbb pushq adc ds loopne test mov (bad) mov or movabs sub in pop in mov sti push jl pop (bad) cwtl shll jp outsb and push pop scas xchg fisttpl ja test jnp callq sub jmp rex.RB vpaddw sbb and rex.WRXB xchg mov (bad) xchg ja mov push shlb scas xchg (bad) imul add pop shrl loopne and xor push mull xchg push cs mov cmp mov jns mov (bad) xchg add movabs (bad) out jrcxz lods xchg push test lods jbe cli mov xchg pop jmpq and retq cltd imul xchg or mov pop rex.RX xor (bad) out cmp scas (bad) push adc nop xor rex.WX jne mov fldl or mov leaveq movsb (bad) lret xchg mov sub or push rclb fisttpl xchg ss jmp jo outsw jl rex.WXB test jns test and mov jnp js jno jl push adc out sub adc imul subb pop cs out jnp xorl jo fld pop mov fild jmpq movabs incb add cmp sub xchg orl cmpl cmp div divl imul cli (bad) mov (bad) sub or mov notl js test (bad) in (bad) xchg shl repz outsb fist insb adc in xchg cli pushq add mov out or mov movslq sbb cwtl push mov sbb rex.RXB je jne push xchg cmc (bad) divl lock jo fcomip push stos pop add out rex.X (bad) xor xchg cmp cmp hlt xchg (bad) jg mov cmc ds xchg sti cmpsl loope int jl jl mov icebp rex.WB add mov cmp rex.R (bad) (bad) lret sbbb jb sub lock test stos and scas rex.W fs push sti std fildll mov xor in add mov test cmc lret rex.RB test outsl stos movsl xchg lods notl adc mov xchg xchg gs pop fstpt imul xor rex.RB int add jl lods jmp (bad) jne mov jns or mov jae and pop lock clc or mov (bad) pushq pushfq (bad) sub movabs and int pop jg sarl cmp rex sti sbb xchg (bad) and mov (bad) (bad) pop rex.R push mov fwait je (bad) repnz rex.R std jmp and ss test mov rcll (bad) idivb fwait sti jmp mov jo pop fwait (bad) retq gs fstpl lock adc icebp test movsb divl fdivrl out (bad) cmp rex.WRB rex.B scas pop repz sub rex.WRXB mov cmpsb cmp add imul rex scas add xor cmp jle lahf xchg rex.RX cmp cmpl movabs jbe mov (bad) pop mov addl jmpq (bad) (bad) rex.RB pop and sbb sti shr (bad) mov cmp xor xchg retq fsub or mov scas rex.W rex.XB jle in imull (bad) xchg out fdiv jle (bad) scas push sbb notb test in movabs insl cmpsb or rex.RX std in outsl pop or mov movabs jrcxz add nop add out ror push cmc incl shlb insl fistpll adc sub adc fcmovb sbb xchg callq ss icebp jae jo or xor push popfq lea push (bad) ja es ds loope (bad) jmpq (bad) pop int3 loop ds rex.R pop sbb ljmp fild fstpl push sbb jrcxz fadds sbb sbb adc scas push rcll outsl xchg test fistpl callq pop roll movabs sbb cmp iret sub sub divb es mov sub pop scas cmp pop and adc sub mov fsubl xchg (bad) adc popfq jrcxz repz outsl (bad) es icebp pushq pop mov mov int rex.X test mov (bad) sub imul rex.W pop sub sti mov cmp jmpq outsl mul sub (bad) pop mov mov addr32 jrcxz out mov push adc ficomp xchg (bad) outsl mov mov or scas rex.X insl rex.WRX xor ds jg sti or mov pushq icebp jle add sahf sbb repz add rex.WR pushq sti std out rex push sti jne xor cmp mov mov out sarl rex.WRX callq leaveq cmp adc testl sti push imul jne (bad) sbb fist cmp (bad) rex.WRX (bad) addr32 cmp fidiv insb lods fdivrl push lahf (bad) adc fidivr (bad) rex.WXB cmp rex.WRX ds lock cmp push icebp outsl retq sbb pop add push sbb rex.WRXB adcb scas ja add sti retq rex.WXB (bad) (bad) add cmp mov mov out mov sub (bad) (bad) pop lret outsl sub out rex.X (bad) es add push ds (bad) xchg out mov push push (bad) lret adc cmc adc nop lods rex.W scas push push rex.XB insl cltd push loope push mov sbb (bad) icebp pushq icebp jl (bad) loopne sbb repz ds mov xchg push and jmpq and add addr32 jne and outsb cmp jmp jmp push enterq sti cmp and leaveq in jo,pt sti (bad) out fisttp pushfq iret leaveq mov or mov jne scas (bad) ja (bad) pushq lahf mov mov out sti testb jg pop ds mov shl rex.WRB cld push cs sti rcrb (bad) std rex.WX cmp (bad) xor (bad) add rex.RB ds rorl xchg xchg stc xchg in std rex.WX ds or hlt (bad) cmp outsl pushq adc rcrb rex.WRB clc mov outsl (bad) mov mov mov or (bad) jmpq outsb lea (bad) mov cmp (bad) push (bad) and (bad) pop (bad) movd cli divps mov push iret (bad) mov push scas (bad) loope lea repz fistp retq lods imul imull rex.W pop jo addr32 rex.WRXB (bad) ja add (bad) pop cmpsb push (bad) ja mov outsl (bad) imul mov testl push (bad) ja (bad) ds pop outsl sahf idivl mov rex.WRX jle scas (bad) jo (bad) addr32 (bad) cmp (bad) push outsl div cmp (bad) xor addr32 and rex adc idiv cmp sbb movsb in pop sahf pushq mov jg repz outsl pop (bad) outsl pop notl mov scas ja rex.RXB ds pop pop outsl (bad) divl divps cmpsl ds pop mov mov (bad) pop or ja and sahf pop push outsl mov pushq cmp ja or pop cmpsb mov rex fidivr xor outsl and btc pop (bad) push pushq (bad) xorl outsl outsl iret testl mov lahf pop iret outsl (bad) mul mov outsl ja sbb pop pop xor (bad) movabs ds jo or xchg enterq add pop mov gs sbb jle xchg jmpq fprem adc andb (bad) fcoml imul pop sahf pcmpeqw xchg pop sub in test lock mov rex lret jno xchg or xchg mov scas outsl rex.WRX xchg rex.B xchg fcmovnbe jbe mov outsl and data16 push sar add jmpq notb (bad) cmp je iret pop add xchg or idivl jrcxz in add mov scas rcrl mov int sbb or test cwtl pop sub (bad) rex.RB add movabs jl fwait xchg pop sbb rex xor (bad) sub imul xor out pop insb and add retq rex.W sub (bad) sbb jmp movabs addl jbe or not sbb jns scas jmp cmp cmp movsl stc loope pushq pop test retq pushq nop mov scas jo iret in out loope iret (bad) cs fst xchg mov ss push fsubs addr32 mov (bad) pushq xchg fisttpl (bad) xor push mov mov sti jo test pop imul xchg sub xchg in jp adc test fisttpll or cwtl vandps (bad) icebp outsl pushq (bad) pop xchg (bad) and sbb retq xchg (bad) rex.X rex.W cmp jo push (bad) insl callq insl (bad) push mov (bad) cli js (bad) mov jae xchg repnz push lea (bad) rex.R xchg push and adc jmp jns fisttp and adc adc fimul jmp or nop mov push mov testb stc sbb fistpl add imul pop add rex.WX rex.WRX mov sub nop adc pop rex mov scas insl and fsubs lahf cmp cld cmp repz and repz repz pop ja sbb lahf pop test pop fcmovbe cwtl iret in or (bad) xchg push pop cmp (bad) (bad) xchg test xor cmp (bad) loop pop or scas gs rex.WXB mov sbb cs (bad) hlt in pop cmp adc sub cmp jp (bad) (bad) fist pop pop sub (bad) xchg push imul out movsb cmpsb mov (bad) movabs movsb (bad) push callq sbb xor or imul test stos pop fldcw notl rex.RB push rcll jae lods sub push xchg jo push lcall sbb frstor cmp out ds mov shll and imul fnsave callq fucomi sub outsl (bad) cmp sbb callq (bad) sti shr (bad) (bad) jmpq pop rcrl out rorl outsl sbb sti jo pop cmp lahf out movabs sbb xor jmpq repz outsl negb sub imul sbb fistl clc xchg out (bad) movabs mov lods mov (bad) pop push cmp fbld rex sub and movabs jrcxz mov (bad) or outsl iret jrcxz mov lock mov lret rex incb sbb (bad) icebp lods out mov (bad) pop xor push and fadds cmp loopne mov (bad) lret adc xchg mov imulb jge (bad) xchg or (bad) test (bad) nop push xchg rex.WR ja cmp cmp loope jge sar xchg pop ror mov out mov iret (bad) nop inc (bad) mov faddp (bad) and push add cmp xchg adc jo (bad) repnz or jns jmp test rex rex.RX (bad) imul cmc xchg rcrl rex.RB js shrl data16 mov push pop adc or int mov sub in (bad) (bad) xor outsl mov shrl xorl or test add jbe ficompl rex and xchg push std (bad) add imull (bad) test sub sbb je movabs mov mov sbb (bad) (bad) js movabs ss callq xchg rex.R cmp adc (bad) adc xor pop xchg push imul je xchg sub (bad) xchg movsb test or imul cmp loopne scas mov je xor xor (bad) mov insb lret je xchg je pop jle (bad) pushq lods xor xchg popfq or out fs lret add jo out jrcxz cwtl cltd sub sahf mov out cmc ficompl mov sub insl (bad) cmp mov scas xor movslq incb gs cmp mov jne loopne mov sub (bad) clc rex.R rex.WR (bad) stos (bad) movzwl sub outsl push repnz jmp sbb iret sub jnp adc ja (bad) rex.B push fwait (bad) decl mov mov add mov (bad) xor retq pushq (bad) rex.W repnz push mov out (bad) or xchg rex.WRX icebp (bad) cwtl in or (bad) cld stc xor (bad) in outsb (bad) pop xchg mov decl sub (bad) pop fistl pop rex.WRXB movslq fimull jnp ffree pushq retq mov xchg xchg push scas sub (bad) sbb fsubrl sbb lret (bad) mov hlt addr32 rex.W fisubl movslq add pushfq (bad) out xor push mov scas mov adc (bad) insl sbb test sub sbb imul rex.WRX xor out lea jb (bad) je cltd test decb pop push mov in stos jl or pop xchg fistpll iret jp fnstcw test je pop out cwtl (bad) scas lea jl (bad) fimul jle rex.RXB (bad) stos pop notl mov shlb cmp divb out mov (bad) mov (bad) pop or mov sbb (bad) xor cltd fbstp jl sbb out mov sub test (bad) repz cmp push loop jrcxz (bad) notb pop mov out pop test mov rex.RB jp es (bad) ja out (bad) repnz rex.WRXB jns (bad) sbb pushq pushq xchg imul mov pop mov fnsave pushq pop imull xchg mov je,pn xchg mov rex.RX jbe xchg pop pop insl stos loope mov movsb rex.WRX out or rcrl out jns mov jo sar (bad) mov imul test cli (bad) mov (bad) mov idivl leaveq pop or xchg insb mov sub je adc mov (bad) (bad) sub outsb add pop std sub xchg notb divl xor lods test mov sub mov addr32 std imul xor scas loop jle std mov mov sti mov out mov mov cmpsl pop sbb nop and sarl xchg xchg (bad) mov lret adc sub data16 sbb out fsubp out mov jmp cmc push cmp sub out sub orb sub rex.X mov push rex.WRXB or out xchg (bad) negb xchg fbld movsb sbb sub stc rex.WR jge cmc subb scas and jb ja (bad) mov int mov add xchg movsl movslq and fs out jbe mov cld shll (bad) lret (bad) ja jbe scas adc jo rex.WXB push lods sti gs xchg sbb pop ds movabs (bad) mov jmp sub mov jp fstps mov cld or (bad) (bad) movabs mov pop jge fistpll or jl ffree push sahf rcrb std or xchg cld (bad) jp lcall insb pop iret je rex.W pop push mov or (bad) or fwait insb add (bad) pop fimul (bad) cmp out xor lock imul pop adc loop sbb cmp sub push rex.R mov xor (bad) cmp mov rcr in jrcxz movslq scas jo sub (bad) mov rex.WXB pop jne cmp ficom pop push out cwtl jrcxz rex.R rex.B movabs out fnclex jp (bad) (bad) outsb ja callq jo pop (bad) rorl mov mov mov icebp int jmpq jbe xchg push mov testb cmpl mov (bad) sub insb mov (bad) or punpcklbw (bad) repz (bad) and sbb lret sbb mov jmpq iret out (bad) mov je rex.WRX jp cltd lods js cltd jle (bad) sbb divl mov rex.B or scas (bad) callq loope pop cmpb stos jg (bad) loope sub addr32 (bad) gs rex.X fsts push repnz jne mov jp sub rex scas cwtl jmpq jrcxz insl cld fmul push mov out xchg mov cltd pop cmpb pop xchg cmp and imul outsb outsl jle fnstenv xchg (bad) xchg cli fucomi lahf std out rex.X xchg mov mov sarl jl loope sub push enterq (bad) fisttp repnz adc (bad) fistp movslq xchg (bad) rex.WRX (bad) insb rex.WRXB jp sti bnd ds rex.RXB andl xchg rex.WX imul rex.WR pop stos (bad) push jmpq scas enterq push ja lret test and rex jnp jge (bad) or xor jle and addr32 popfq rex.RX (bad) movslq or test cmp rex.X fwait or (bad) and dec std outsl (bad) mov jo in rex.B add rex.XB (bad) ja fild (bad) pop imul retq outsb mov imul sti mov (bad) push cmp jg movabs mov sub loop imull mov (bad) and rex.WXB cmp loop (bad) xlat outsl (bad) out jg scas (bad) outsl (bad) sbb div xor pushq rex.WRX test jmpq jg (bad) and (bad) push xchg pushq imul pop pop fdivrs callq clc jo scas movabs clc xor pushq sbb rex retq rex.WRB rex.WX mov outsb pop sbb adc (bad) mov sbb movabs (bad) sub mov xor adc push enterq stc xchg shll rex.RX cs cmp js pushq (bad) jbe jbe or (bad) rex.WR (bad) repz loop leaveq cli std js out cmp adc repz incl es test rex.XB rex.RX scas rex.RX leaveq (bad) mov icebp mov xchg scas mov push cmc (bad) test jmpq sti retq mov rex.WX ja (bad) (bad) sub lret fmulp jge rex.R es (bad) (bad) jg outsl rex.WRX (bad) push mov and (bad) idivb mov in sub imul insl sub fs (bad) (bad) out sub stc imul gs cmp (bad) insb pop rex.WX insb xor scas scas mov sbb loopne (bad) adc insb outsl ss pop add (bad) fildll clc iret jns push fcomps in mov pushfq cwtl std (bad) popq sbb (bad) jmp jl gs (bad) xor rex.RX jmpq outsl xor xchg pushq lock fimul jrcxz insb lea test pcmpeqd cld or loopne xor rex.XB ss rex.RXB adc pop sub rex.XB jle xor cmp (bad) jbe data16 int3 rex.RXB rex.WRB add add rex.R cmc in repz (bad) ja cltd adc rex.RXB mov rex.W es pop cli int3 scas fbstp mov gs sub pop (bad) cmp int3 mov (bad) rex.WX rex.B jge xchg jbe add cli jl add scas adc jo rex.WRX insl iret rex.B pop and test (bad) movabs sub rex.B rex (bad) js or xchg rex.R (bad) (bad) jl insb fwait sahf pushfq cltd imul mov out pushq in cld scas jl ja pop cld (bad) rex.W repz cmp xor rex.WR subb (bad) mov push jge scas jge test fwait pushq xchg (bad) or xor xchg fs mov adc or rex.XB imul jp xorl rex.WRX stos insl or scas mov jne (bad) xor (bad) fdivrs xor rex.WX adc int outsl push (bad) pushfq and (bad) sti scas sub mov movsb testl jb push jmp rex.XB rex.WB fwait repnz add iret adc (bad) movabs rex rex.WXB mov ljmp rex.WRB xchg push jge (bad) xlat jrcxz cmp sbb jnp xchg repz xchg orl xchg cmc out jno rex.R and in iret xchg jl addr32 scas and cld or sbb in js (bad) jno xor (bad) jae data16 rex.WR movb mov jle cltd lods (bad) push adc or fwait or mov ja out ja adc repz cmp mov in mov pushq jge test or scas cs lods fdivrs adc push shr and test mov (bad) jo xchg mov mov rcll pop pop (bad) addr32 pop notl jl rex.RXB rex.WRB out (bad) jno movabs js mov cmc mov add cmp outsl sbb (bad) sub rex.B callq sarw rex.WR cmpl movabs cs mov (bad) rex.WX retq jrcxz movsb sub test xor rex.WX (bad) pop xlat ja xchg out mov xor mov loop xor add pop pop shrl rolb cmp roll ss sbb sub add push cli insl fsts notl fucomi pop or movabs and repz mov mov movslq cs push out je push stc (bad) pop pop xchg (bad) sti outsb jl je jbe hlt add imul adcb jbe mov mov and cmpsl rex.WRXB mov push jmpq iret jo movslq rex.XB sarb or (bad) xlat pushfq and and sbb pushfq (bad) mul in repnz rex.WR jge sbb mov (bad) repz sbb gs xchg jg adc push xchg rex.W mov jns pop ds pop mov (bad) mov cmp rex.R (bad) pop jo insb jle xor push cmp xor (bad) adcb fstpl jo ja add (bad) or sbb jnp and push rex.WXB in hlt add fnstcw mov cs pop rex.WRX pop lock scas scas test rex je push mov cmpsl out or (bad) jp mov repnz xchg push pop rex.RB cmp pop cmp xor imul enterq pushq sarb je (bad) or or sub pushq in rcrl pop or mov movabs push es pushfq push xor (bad) roll lret fs sbb jno out jge cmc insb rex.RXB cmp jmpq adc cmpsb jns push sbb rol rex.WXB iret pushq xchg data16 test jl sub imul addps imul and insb jbe mov cmp cmp jae rex.WRB sub mov sti xor push js or (bad) rex.WRX (bad) push mov xor or pushq ljmp mov or insb mov and jp cmp cmc jl je jb (bad) movabs shrl mov lahf insb cmp cld jb add js insb xchg sub insl cmp rex.WX rex.X stos jo pushq pop mov (bad) test jmpq (bad) je or jmpq rex.XB or xor scas (bad) pop push rex.RB and sub iret stc mov xchg rex.WB (bad) out mov movsb pop (bad) js imul je rcll pop rex.RB mov rex.W movl test stos mov cli and js rex.R test and pop mov mov jrcxz cmc pop pop mov (bad) sbb (bad) jbe icebp je je cld test out addl pop pop iret cmp jl sub xchg (bad) pop sti fdivs (bad) jmpq push fs jge outsb sahf jae rex.WB sar bnd rex.R xchg repz out jnp enterq ja int3 xchg movsb insl (bad) mov jne iret rex.RX test (bad) cmp je jns shl fadds retq out loope mov xor and rex.WRXB iret rex.B popfq jrcxz (bad) sub xor test rex.W insb cmp icebp mov ss sti test push jnp xlat (bad) jg in addr32 hlt jge pop rex.X insb ja shrb rex.WRX jo pop jbe pop jo jmpq (bad) vpunpcklbw lret (bad) jne imul scas and mov push mov (bad) sbb sub (bad) jns mov (bad) rex.WX in (bad) ss (bad) jne xchg iret sub std and rdmsr (bad) sub push js cmp cmp mov jne xchg add pop insl push flds movsb sar mov retw mov pop out push mov cltd cvtdq2ps mov out and jl xchg xchg jb pushq out andw jno rex.XB cmc stc jo clc mov sbb cmp out pushq out mov xchg rex.WR push frstor ss sbb rorb push loopne (bad) mov (bad) pop cli data16 mov jl (bad) mov mov hlt mov push pop or mov cmp and xchg pop (bad) mov push stos jnp,pt insl pushq andl or push cld xor push (bad) repnz outsb gs xchg add lahf insb ffree (bad) (bad) imul or mov xchg rex repz ja in repnz (bad) xchg xor or push test sub lods jb adc fyl2xp1 ja sahf in jo outsl ror (bad) push mov js scas enterq jae and test out xlat add jg pushq (bad) lods rcrl or lods callq pop (bad) rex.RX lahf add sbb lea shrl movsbl out pop (bad) (bad) push sub sbb insb je rex.WRX mov test pop xor loop (bad) jbe sub scas push lret rex ss adc mov ljmp xchg outsl scas mov pushq jg ja imul push cmpsb jnp decl loope fisttpl test pop jbe and rex.R rorl rex.WB fnsave (bad) andb cs imul rex.X fs push sbb add jns mov vpsubsw movaps cwtl pop data16 (bad) scas out pushq mov or adc test (bad) pushq rex.RB movabs xchg and (bad) xchg mov push test sub xchg jb scas rex.WRX jbe jl cs (bad) (bad) rex.X stc (bad) jbe (bad) (bad) in imul stos (bad) sub pushq mov in push (bad) cmp stos int3 in xchg pop push cli int push fistp (bad) pop adc cmp out scas pop scas xor jo shrb or (bad) mulb sti outsb jrcxz loope pop je jl pop test xchg sar js xor mov pushq scas lret jo or adc (bad) fcmovnbe push mov negb mov rex.W (bad) scas (bad) cmp (bad) mov jo addr32 stc push rex stc cli xor cmp add adcl rex.WR std rex.WX clc rex.WR jnp mov js (bad) sbb movabs ja pop jae jno fdivrs (bad) es add xchg test (bad) subb xchg sub jb (bad) adc lods cld jb cmp lret lock ja repnz je andl jp push js (bad) (bad) je ds testl outsb pop scas lock push jo adc mov mov mov push rex.XB lea sarl lret jge hlt jnp mov scas (bad) rex (bad) xor rcrb jl js pop jl scas pushq (bad) mov (bad) bnd xchg rex.X pop mov leaveq sti xor shrl pcmpeqd shl cs push js scas retq or fidivr movsb rex.W stos out js rex.RB sub adc sub jg cmp jo fisttpll adc sbb lock scas mov mov pop insl test (bad) push adc movabs (bad) mov jge test rex rex.WRXB (bad) scas rorl mov (bad) xor (bad) pop fistpl je rex pop jb cmc (bad) xchg jp insb test mov outsb (bad) sbb in xchg jl jg leaveq mov adc testb insl loopne pushq (bad) (bad) movslq (bad) jns addr32 (bad) sahf test rex.WRX (bad) fiadd mov pushq jmpq (bad) (bad) insl pop xchg idiv (bad) std jg lods (bad) xchg es ja (bad) mov xchg ja or fcmovnbe (bad) ss pop add (bad) rex.WRX or out cmp push andl mov pop cmp idivl jge pop xor stc fs (bad) rex.RX cmp jge mov out std lods (bad) (bad) xchg and js cmp cs in std lcall xchg push pushq rex.WRXB mov cmc scas (bad) jg std jge sbb mov adc cli rex.WR (bad) insb movabs shl cmp jbe cltd je pushq xor rex.WX rex.WRX jb mov pushq mov ds rex.W mov (bad) jp out xchg mov push imul (bad) jmp mov xchg in or enterq mov push mov sarl rex.R adc fsts stc xchg int enterq scas cmp jae jae (bad) insl addr32 outsl hlt xchg rex.X fstpt (bad) xchg stos (bad) adc repz rex.WX in xor xchg cwtl imul sub jo in callq lods rex.WXB (bad) mov rex.X mov icebp outsl (bad) (bad) rorb cs addr32 or add insl fwait cmp add xchg sub cmp cmp xchg jle jg jmpq ficoml popfq (bad) mov sahf jp stos sti stos shrb mov mov movabs gs iret adc imul or xlat jnp hlt xchg jl insl (bad) jl std pop xchg xchg movslq pop adc hlt add shr out xor stos repz xchg out insl (bad) rex.R movabs ja hlt lods scas in and in jg push rex.WR mov and outsl mov lret lahf push scas jp mov jnp cmp or or (bad) xchg data16 (bad) cmp (bad) jle pushfq (bad) xor sahf jns push movabs fs cmp jl add js imul iret test lahf adc jrcxz mov xor pushq pop movabs xchg lock idivb cmp mov xor retq mov movslq out mov add mov (bad) std rex.RX js es or xchg rex.WRX iret xor out pop cmp repz xchg mov incl lods stos pushq (bad) mov imul pop pop (bad) outsb ja pop mov cli scas rex.X rex.WXB repz sbb rex.WX cmp or add (bad) out nop lods jrcxz cmpsb fcomi out fcomip pop xchg rex.WR ja imul sarl (bad) in (bad) jo xchg (bad) rex.X out push imul mov jne pop jmpq cmc (bad) xchg (bad) sti mov pop (bad) pop imul jrcxz sbb repz (bad) sub jg add je adc jp and xchg sub pop test mov lret (bad) in cwtl fiaddl cmc imul mov mov xchg (bad) int3 data16 or out movslq (bad) stc pop adc cmp jb lods notl data16 xchg xor push out fldl xor stc fcoml rex.RX sahf cwtl shll scas xchg stos rex.WRXB scas imul and movabs movslq outsb pushq (bad) fldl rex.WX mov iret fidivl (bad) in enterq push push push icebp in ss (bad) sarb lret out mov (bad) rex.WRXB cmp or rex.XB ds push mov jo inc pop and sti cmp (bad) xor cmp rex.WX fsubs pop (bad) mov and test xchg int3 mov (bad) fs and test lods lahf xor rex.WR insb lods add (bad) xor retq lret rex.WB sbb orl (bad) rex.WB jmp push rex.WB cs or scas je,pt sbb fwait (bad) jg jno lods xchg test add rex.WB scas mov mov lret xor xchg out and clc scas imul loop and je scas jmpq xchg (bad) xchg pop adc xchg (bad) lods xor jle mov rex.RB popfq rex.XB pushq sub cmp (bad) cmp add and std sbb rex.RB lods fidiv ja insb rex.RX shr jnp shrb clc push (bad) pop xor pushq jmp out and xor or jo (bad) pushq xchg or (bad) fwait pushq je jp pop test rex.WRX (bad) rex.R rex.R push xchg callq pop rex.RXB iret xchg shrl movsb callq (bad) cmc (bad) mov fistpll mov test pop and fnsave enterq pushq sub mov je rex.WRX ss xor ljmp rex.WRXB outsl add cli cmp sbb adc jl mov test (bad) sub mov (bad) sahf add js pushq xchg out rcrl retq std or adc sub mov int3 outsb pop sarb mov or negl (bad) cmp (bad) rex.WRX cmp (bad) imul (bad) retq jg fisubr lock addr32 (bad) adc movsl rex.WR push xchg mov rex.WR in ss cmp cmp cld mov (bad) (bad) cmp xor addr32 adc movabs out push lret mov or push jl cltd rcll push sbb mov sbb (bad) fdivr adcb xchg (bad) jb jrcxz (bad) (bad) movslq ss pushq jo rex.WRX cmp jno jbe xchg (bad) fldt out or in or (bad) in lea jns (bad) rex.W int fiaddl jle push pop lods js roll mov mov test xor mov shl xor rex.WX sbb (bad) iret stc (bad) sbbb lock mov lret cmp pop mov sbb adc jo (bad) mov (bad) jo imull jo cmp push test (bad) rex.W or je push loope insb cmpsl jmp notl sbb sbbl mov stos sub push (bad) sbb fisubl sbb xchg (bad) gs scas loopne (bad) notb cmp rex.WR pushfw sub adc lock and rcr mov clc mov sbb (bad) push pop pushq pop pop mov out mov test imul jrcxz sbb retq repz jae fistl xor add fildll (bad) in ss loop iret xor out js gs sub (bad) insl jb jnp adc mov outsb cmp sbb rex.RXB rex.WR push loop in xor (bad) imul jmp rex.W in and add js sub (bad) and scas fcoms fsubl data16 out ds pop rex.RX rex jle mull jle add pop stc popfq andl sahf pop mov and retq xchg pushq pop xchg cmp gs adc ror push sbb push jmpq cmp or nop test cwtl sub xchg js stos movabs xchg lret jbe xchg out adc mov outsl out outsl (bad) pop outsb lods rex.X lods mov jle,pn lods test xor jmp rex.WR (bad) decl shrl cltd je shlb (bad) fidivr xor pushq out movabs and insb jns pushq (bad) sti test cld mov jbe or push sbb (bad) pop repnz (bad) jae leaveq fcompl (bad) (bad) ja es ds cmp and xlat fiaddl push cmp xor imull and mov insl jb pop jrcxz add xchg mov push jmpq ja pop shll (bad) mov sar cmpsb leaveq mov outsl pop lods leaveq (bad) sbb pushq loop mov or rex.X popfq jbe in jl pop pop jmp push lret (bad) subl xchg jbe jo rex.W jp cmp std nop fdivp mov adc jbe pop sub and (bad) (bad) cmp jl insl sarb rex.WB std pop push mov js mov (bad) rex.W in sahf xchg in je insl (bad) jge icebp movabs mov (bad) test int add incb int (bad) js xor pop pop sbb mov jo fld mov in retq scas xor ds lret jrcxz adc test lret mov jge scas jmp pop or mov add repz movsb (bad) sbb xchg cmc mov rex.RXB mov std push jl callq movabs ljmp lahf cli gs ds jb loopne pop jl sbb outsb scas mov xlat pop xchg stos out lods mov pop out (bad) rex.RXB negl outsb pushq xchg orb fwait movabs cmc pop (bad) (bad) gs (bad) movsb cld jne mov pop addr32 insb out sub lods movsb sbb (bad) mov negb pop out pushfq mov jp (bad) pushq jg pop pop in jge pop pop xchg lock neg cmpsl insb cs xlat movabs pushq movabs mov retq jo rorl fisubl pop out xchg (bad) cmp pop xchg adc rcrl jrcxz (bad) sbb and rex lods jp xchg (bad) addr32 popfq leaveq (bad) clts (bad) (bad) shlb (bad) lret andl (bad) mov sbb pop (bad) sahf cmp sub std mov movabs cmpsb int3 (bad) mov (bad) adc pop out shll xchg sbb add (bad) out jle rex.W mov out mov add pushq insb and outsl (bad) xor enterq pushq cmp stos mov (bad) movsb add imul jo rex.WRX (bad) jnp out in js lods sub mov sti mov std decl jle test or stos pop and rex.RX rex.B movabs movabs ds rex.RB rex.RX mov ss stos rex pop ds adc movabs fs out adc pop stos sbb mov icebp jrcxz (bad) pushq rex.RB fdivs xchg rex.WRX pop jl,pn (bad) rex.WRXB movabs (bad) rex.RXB movslq jl scas divl or movabs rex.WRXB (bad) (bad) cmp (bad) test (bad) mov push imul callq test mov sbb pushq (bad) (bad) in and mov sahf jnp rex.WRXB imul jmpq pushq lock add pushq (bad) test jnp js test xchg xor (bad) ss (bad) imul loop (bad) xlat imul (bad) rex.X movsb cltd rex.RB mov ss retq or xlat jp nop pop insb fisttpl rex.WB insl sbb xchg lods add movsb rex.RX jnp in mov icebp in add jg callq adc pop jo (bad) lods rex.WX divl mov iret pop pop jg out rex.B ss jo jl rex mov jg mov rex.WXB mov adc ds push jnp,pt jl push rex.RX subl jne fbld (bad) std js lret or xchg andl (bad) rex.R scas sti fild add shrb (bad) movsb jle hlt iret adc ss rcrb mov xchg in push vaddsubpd or (bad) (bad) scas test and rex.WR (bad) xor sbb mov (bad) mov mov jrcxz xor fcomps push int3 scas or int data16 (bad) cli sub lea addr32 ss mov push (bad) lret or mov add push cltd outsl rex.WXB sub add retq callq mulb push insb outsl jnp jno jmpq fdivl xchg mov (bad) sub push mov xlat and push es pop (bad) in rex.R outsb fsub xor adc popfq adc je in js push pop pushq and ficom fwait shr movups retq jae (bad) xor leaveq and fist leaveq out jg jge imul jb xchg fs xchg shrb (bad) or xchg cwtl sbb sbb adc and rcrl or xlat sub jbe stos gs lret jle ja out jl jmp rex.WR xchg (bad) enterq mov (bad) push pop (bad) jnp fist pop fisttp and ror (bad) or or out (bad) xchg jl je (bad) retq pushq xchg (bad) fldenv fisttp movsb rex.W rex rex.B roll mov mov sub mov jnp scas mov mov and push lahf (bad) pop mov xchg outsb scas jno pop mov and fstpl outsb mov cltd mov (bad) int3 sub std shrb (bad) cld test mov fistpl insl in rex.X sti jnp mov sbbl sub push sub int sub stc cmp sbb (bad) rex.WX sbb lock cmp jg mov pop sahf sbb nop and rex.R xchg adc and (bad) int3 xchg pop (bad) movsl dec pop add (bad) pushq fadds mov rex.XB leaveq (bad) jmp (bad) pop pop rex.X xchg xlat mov (bad) gs jbe movabs cmp cltd jb repz iret hlt cmp enterq sbb or mov scas xchg cmp cld sarw pushq andb jno (bad) fwait (bad) mov rex.WR sub cmp push movsb insl rex.RX shrb fimul rex.WRX jae stc sbb (bad) popfq out mov mov icebp jb loopne (bad) repnz ja xor jp mov (bad) jae xchg jns xlat rclb (bad) scas lret insb stos xchg mov sbb and add sub ss xchg pop out sub xor mov jg rex.RX xor xor xchg (bad) xor callq sahf enterq add rex.WRB rex lret xchg mov jns (bad) rcrb sub pop fildll pop js cmc jl ja xchg cmp pop sub jo mov jrcxz cmc loop int rex.WXB (bad) scas jmpq mov cs (bad) movl ficompl rex.B (bad) orb xlat xor pop lret mov repz adc clc sbb and lock iret xchg test (bad) pop lahf mov ror cmc out push sbb sub and xlat mov sbbl jae push jle xlat incb fidiv cmpb mov fpatan cmp repz cmp mov enterq movabs jmpq gs cmp jle or js pop shl stc jg vzeroupper cmpl jp xchg lock pop js outsl retq lods lret lret sti out sbb jmp cmp psllw imulb rex.RX rex.RX pop gs (bad) add (bad) out jo (bad) mov lahf jae add and add cmp push sub ds cmp jo loopne retq fildll (bad) cmp add cmc pop outsb in loop jmp push pop pushq repnz rex.WRB cld scas rex.WR rex.WX enterq cmc rex.W addr32 clc sbb nop mov lods rex.W jle sahf xorb jl bnd (bad) (bad) and add or rex.RB jns lock sbbb movabs sahf pushq movabs (bad) push mov loopne (bad) movsl and insl pop jle js push mov jg icebp sub out xchg movabs jmp movabs add xchg and xor and out rex.WX lods rol lods (bad) movabs or insl cli (bad) popfq sub nop or jae and test xchg pop cld rex.X (bad) gs test jl test mov rex.RXB loop mov jge jo imul pop lods stc jbe mov sub callq (bad) (bad) rex.WRX rex.B (bad) lods jge rex.R rex.WRB jl scas push loope pop sub jl shlb imul repnz (bad) and movabs push rorb sti (bad) rolb add jle jne sti jo sub outsb mov es std mov movabs loop cld (bad) jbe test iret mov rex.W jmp rex (bad) movabs mov or (bad) cmp push push outsb (bad) sub and mov test push pushfq (bad) jge or mov push xchg and pop popfq or enterq pop movabs out cmc jns (bad) test jo movabs (bad) sub cmc pop add sbb rex.WRB rex.RX in mov fnstcw cmp (bad) (bad) jmp sub xchg jmpq fcmovnb mov mov rex push movabs jrcxz mov pushfq fimul lret ror xor xchg xchg lods lret movabs (bad) pop (bad) add je push fs lea retq cmpsb jo xchg (bad) push or mov addb pop or xchg scas outsb imul ja jle fwait or cld mov xchg mov push cld add jb out and addl (bad) pop xor orl mov retq lahf lods and retq js pop sbb out ss mov (bad) rex.X jo xlat jge jns js pop fwait cmp mov (bad) xor (bad) pop js paddusb lret shll adc fidivr rex.WRB sub scas mov orb scas (bad) (bad) jo out gs rex.WRXB rex.RB jb (bad) pop lahf retq cmpl pushq iret lock fildl jp adc lods jns sbb rex.XB adc xchg lahf fistpll pop xchg outsl rclb lock or fnstcw js scas xor pop addr32 sbb (bad) fcmovu cmp add cmp cmpsl (bad) insl sbb sbb (bad) (bad) (bad) out rex.WRB fs (bad) rex.W jmpq add fistl sub pop mov push je test ja xchg fsubrl scas insl movabs jbe lea mov cmpb (bad) fs xchg mov pushq xlat jbe push movsl repz (bad) js (bad) xchg scas ss jo or mov out rex.XB (bad) sub jb (bad) fistpll (bad) cmp (bad) add stos lods adc xchg mov pushq (bad) pop sub (bad) insl sti sub andb (bad) jbe movabs jmpq insl (bad) stc lret xchg mov scas data16 repz cli pop mov or ror in (bad) out (bad) imul and jns sbb lods cmp (bad) fildl fimul retq sbbl or maxps sbb fsubrs mov out mov xlat es sti add and (bad) repz rex.W add (bad) mov adc (bad) lret (bad) gs scas jle rcrl outsl add mov add adc scas rex.WX (bad) jrcxz add iret (bad) xor (bad) loope rex.WRB mov xchg addl (bad) jp jns sbb xchg sti icebp rex.R jge scas (bad) fisttpll push ficomp jb (bad) cmp mov movsb fmull stos rcl nop rol lods (bad) rex.B idivw je push rex out xchg mov pop jo fsubrs and clc (bad) (bad) mov callq xchg sbb js std iret sub (bad) push xchg (bad) out pop (bad) test test (bad) (bad) xchg retq test fisttp (bad) js mov jo addr32 cmp jb je (bad) pop jo enterq out mov pop scas ss (bad) fisubrl add outsb std bnd mov lahf or jg xchg pop pop (bad) jg pop xchg scas mov xor rex.RX outsb rex (bad) rex.RX rep cmp scas negb mov je data16 (bad) (bad) xor rex (bad) add (bad) xor mov rex.W es (bad) movabs xor or (bad) sbb in and rex.RXB negb loope mov (bad) stc pushq rex.RXB icebp rex.W out cmpsl fcmovnb fimul rex.WB push cmp icebp cmp xchg rex.R addr32 rex.RX cmp (bad) movabs insl outsl rcr jne mov movsl xchg (bad) jl mov adc fs cmp xor gs jne (bad) sbb or xor js cmp scas sub lods cmp fldcw (bad) sub nop pushq sbb sub fisubr int mov scas adc insl out adc xchg insb xorl xor pushq outsb out std sub xor xor rex.WRB (bad) jmpq fcoml rex.R jns es cli lahf (bad) mov sbb lock out out pop (bad) mov mov insl (bad) xchg adc push rex.B mov sub xchg outsl jo adc (bad) lret movhps in mov adc fs cmc xchg cmpsb sbb pop mov sub rex.WRXB and shrb (bad) divl callq mulb xor outsb jnp add and cld cmp sbb adc xor outsl rex.W iret outsb xchg push lret lret (bad) jp xchg mov iret mov (bad) xchg rex.X cmp scas xor jg rex.WB ds punpcklbw mov std repnz sahf mov pop (bad) jbe add (bad) gs (bad) (bad) (bad) xchg cmp jle adc outsl pop jl push mov jns mov (bad) adc cld rex.WRB adc mov pushq fs fcomi jp jns and fstpt sub rex.WR push pop ja rex.WXB mov mov mov (bad) mov pushfq cmp lods jo mov rex.X rex.WRXB pushq sub insl cmp and jge mov xchg cmp je je rcll mov sub insl iret push scas add push cmp sti rex.WR loop (bad) retq stos loope lret jg outsl js scas jb (bad) mov fdivl pop outsb iret cmp imull and repnz pop outsl (bad) (bad) rex.WRXB cmp (bad) sahf add repz mov (bad) and (bad) test test xchg pushfq push rex.XB gs xor xor ss cwtl (bad) fldl2t mov jns jo adc in push and mov pop xlat pop xchg jo fs (bad) xchg pop lret lea test int3 push je xchg xor int insb mov mul rex.RXB outsb cli insl cmp shrb rcrl test mov (bad) subl stc stos rex.XB jns lea jg (bad) rex.WRX gs movsb rex.RX sbb (bad) xchg jnp (bad) repz rex.RX cmp jo imul callq in (bad) iret jo iret stc (bad) pop js push pop mov or fstps xchg ja jae cmp (bad) inc leaveq xor push js flds rex.W (bad) (bad) lahf push test (bad) rex.WRB xor xor rex es jne insb (bad) xor (bad) and fildl outsl (bad) ja adc add sub fwait cmp rex.WB (bad) insl mov idiv (bad) popfq xchg cltd jns mov leaveq cmp ss rcrl rex.WRXB icebp cmp callq mov rex.W (bad) sub rex.W xor mov outsl (bad) movabs insl xor rex.W xchg fiadd (bad) adc mov icebp rex.WB jns int3 (bad) loopne cmp rex.RB jle push xlat lret callq or es int fnstcw mov xchg clc and cltd pop scas lods jrcxz jbe insl addr32 mov mov scas cmpsb es rcrb clc cmpsl jg imul xor movb stos jp and mov (bad) xchg pop (bad) mov test lods (bad) je in mov rex.RB (bad) xchg rex.WRX outsl testw lock jmp pop out test callq fst jl mov (bad) or xchg mov out retq sub push pop (bad) imul fs mov hlt (bad) shll in cli fistpll cwtl and push or sbb cmp rex.R pushfq pop add iret rex.RX mov retq (bad) adcb xchg adc cmc and sbb ds (bad) rex.WRX hlt enterq adc popfq sub pop lods cmp (bad) mov out loopne insl cmpsl and mov xor test lock cmp mov cmp pop fldl rex.R out rex.W sub rex.RX (bad) xor push outsl ss xorb fwait jle push jge mov movslq test icebp mov push lock add (bad) and add jmpq (bad) pop push repnz movslq mov cmp insl pop int out lods (bad) cltd fsubp test mov (bad) sbb sub rex jle pop testb sbb adc (bad) or fcmove and test js or in out mov add in rex.WXB shrb mov xchg pushq mov push outsb rex.WXB (bad) push jnp mov adc jae iret movabs sbb sub (bad) mov jns adc stos out pop (bad) xchg loope and pushq or fidivl mov rex.RXB adc sub pop jg wrmsr (bad) push cli (bad) in sub rcll jmp pop cmp xchg mov or pop (bad) fmul add cltd or stos jo (bad) xor retq (bad) sub js rex.WX rex.WB in jle test or jl cmpsl insw sti (bad) push fdivl pushq insl xlat movabs jmp fsubl cmpsl leaveq in (bad) rex.RX pop (bad) rex.X xlat cs jmp cld jrcxz pop push pop jae jg mov mov int3 mov jno xchg out (bad) lods out repz insl lahf xor rex.WR rorl cld mov lahf mov js mov and mov cmc lods sti xchg addr32 cmpsl retq xchg jne test (bad) xchg xor cmpsb movslq (bad) pop xor adc sbb or push ja rex and jmpq sbb out pop fimul (bad) insl cmc (bad) sbb nop (bad) subl (bad) movabs repz pop xorb (bad) in hlt testl in ds mov mov sub mov pop fbstp adc int3 cmpsb iret pop (bad) in repnz stc fdivrs fisub imulb mov retq retq test mov shlb adc movslq movsb fwait add lret lock jmpq imul (bad) movsb in (bad) (bad) ds idiv sti cld mov ja jne pop jle push mull cmp pop sarb in jrcxz cmp movsl rex.RX rex mov add outsl insl sub loop sarb out test ds adc out pop fildll pushq or icebp (bad) test callq mov fcmovnu js rex.WRB imul adc ficoml sub out sarb xor mov xchg roll jo cmp pop scas pushq rex.WB rex.X repnz rex.WRB (bad) mov mov mov cli or (bad) pop lods jo push jb repz pop movabs cmp cmp pop cmp pop cli pop jl xchg pop (bad) jo cld adc xor xchg shrb xchg add rex.WRX push (bad) mov push jne pop int3 add xchg cmpl ljmp movabs push xor pushq nop mov jp jrcxz push fildl cltd pushq cmp xchg mov stc (bad) js gs cld rex.RXB sahf fdivr jg xorl rex and pushq scas hlt pop test sbb xor jmpq rex jmpq jp xchg divl jg mov jrcxz ss (bad) rex.X nop lock pop jg jg rex.WR cmp movsl mov xchg movb scas sbb pop add jmpq rex.WRX pushq popfq add mov sbb mov fcoml incl retq mov rex.W gs sub xchg jns in jo insb rex.WRB mov jnp (bad) out mov (bad) push xor or jno cmc ja xchg jbe rorl test insb and xchg push movabs cmp cwtl (bad) sbb test sub inc std mov notl jb retq cmpsb jo rex vpaddd sub mov gs ss fsubl (bad) or lock mov or rex.RB push pop jle rex.W mov mov cmc xor lahf outsb xchg pop std (bad) xchg and loopne jb push push repnz xor test sbb pop movabs rex.WRXB leaveq rex.W out rex.WRX (bad) mov test sarb push push pushq sbb stos sbb rex.WR pop (bad) leaveq xor outsb mov cld rex.WRXB cmp mov (bad) pushfq rex.B imul (bad) scas ds fs sub rex.WR js sub cltd rex.WRXB js out popfq (bad) cs lret test pop mov xchg (bad) or in in sub pop icebp mov lods cmpl notl lock mov out rex.WXB and out test repnz (bad) rex.WRX int mov xchg mov notl movslq (bad) (bad) negb cmp and xor mov mov rex.WB fildl pop (bad) sbb divb jo or (bad) adc push jno push clc scas xor rex.RB ds xchg sub jmp ja mov jmpq cmpsl pop adc (bad) mov sub stos lea fsts mov mov pop xor (bad) (bad) push callq (bad) jno rex.WRXB sub clc jns jne jrcxz lods repnz or out int3 rex.R jle scas cwtl loop orb out callq cli xor ds mov std ss out stos pushq or (bad) sbbb frstor gs (bad) xchg pop out mov insl jb cmp (bad) mov (bad) pop notl jae movabs ds mov (bad) (bad) xchg ljmp test hlt fildll pcmpgtb outsb (bad) insl mov cmp pop mov push (bad) (bad) rex.WB mov adc (bad) and and adc out bnd and (bad) testl insb icebp in je cmpsl test je lods decb pop adcl (bad) pop outsl out xor imul lods je sti outsb rex.WR faddp rex.RB rex.RB (bad) mov mov push fstps and cli out cld orl rex.WX lahf and xchg rex.WXB jns pushfw mov lock xor enterq rex.RXB lods outsb pop mov xlat xchg jl icebp int3 rcr cwtl jle xchg pushq jne adc xchg or add xor nop out fldcw adc in (bad) movsb (bad) cmc fdivrp scas and scas jp mov (bad) (bad) (bad) jp rex.WRX jle pop std mov mov push rex.WR test sbb mov rcll lea sub xchg in or retq mov sti out insb push jne cmc jle or (bad) push (bad) sub cmc ja test or rclb test jo jbe or sbb xor pop jae in in idivb movabs xor je js sub sub push sti mov mov (bad) sbb pushfq repz out sbb inc scas xor stc rex.WRX gs add loope jnp pop scas rcrl mov push add imul sbb (bad) subl xor (bad) jne (bad) push not xor pop cmp (bad) fildll pop retq (bad) xor std xchg cmpsl mov mov add loope mov xchg or movabs out sahf int std imull xlat (bad) fbstp insb outsl jge jrcxz mov xorl out cs sub xor roll rex.R (bad) sbb repnz and mov cmp sub add sbb adc mov fist xor xchg xchg insl in pop rex.WXB pushq (bad) in sub mov loopne (bad) cltd rex.RXB mov lret outsb cmp (bad) loopne mov je xor pop add sub fbld (bad) sub add (bad) jle gs xor rex.R rex jge fnstsw cmp imull pop add xchg rex.RX cmp xchg sbb rex.WR jno push cld (bad) adc cmp pop fstl hlt or int outsb (bad) jl addr32 cmp rex.W pop ds pop push rex.WRB jp rex.WRXB lods cwtl mov js or mov (bad) jmpq jmp clc mov repz cmp (bad) sub adc pop (bad) push (bad) jbe push jle rex.WRX (bad) push xchg addr32 push ds adc push out repnz rex.WR sub mov mov rex.WRXB rex.B rex.X fisubr mov fwait lahf ja std popfq cwtl mov mov movabs mov add sbb xor xor leaveq fisttp jg jp loop,pt jbe pushq jrcxz adc sti (bad) ds (bad) jle mov retq mov mov and sub cmp sarl movslq test mov pushfq lods mov mov or movabs rex.RX ds es xor lock ss pushq lea (bad) xor mov in sub rex.RXB (bad) sbb pop (bad) fidiv (bad) (bad) jp rex out pop cmp fistl (bad) jl iret callq jle rex.WR rex.WX jbe mov xorb lods or lods sahf and cmp (bad) mov mov imul or xchg jb in pop (bad) test movabs (bad) adcl rex.B mov lods shrb lea (bad) (bad) sarl jne xchg sbb (bad) mov add sbb and xchg rex.WR and rex.X stc push jbe imul test jo or std mov push testb mov (bad) or out (bad) mov cmpsb rex.B (bad) std (bad) stc (bad) add pop lcall cmp rex.WB cmc jmp adc lods enterq int3 (bad) jno mov adc sahf fwait jrcxz iret lods ljmp xchg mov and add and (bad) test clc outsb and js xchg insb (bad) add sahf mov mov (bad) xchg data16 cmpsb sub rex.W nop repz xor pop pop int3 pop cmp loop cmp in movabs retq add jmp data16 or cmp xor push (bad) mov sbb mov out push scas testb xchg cmp lret idivl (bad) add adc pop xchg rex.WR ds fistl (bad) mov (bad) std pop pop test mov (bad) add xchg movabs cli (bad) sub rex.RX repz xor and or js (bad) test sbb mov in jl (bad) mov jo and rex.WB mov js cmpb add or (bad) (bad) cli fs add sbb (bad) (bad) rex.WXB and out movslq rex.WRB std nop mov fbld sub pop cld pop (bad) sub (bad) add and xchg (bad) xchg lret xchg pop or cld add (bad) mov pop jmpq push pop imul scas sub adc xorl rex.WXB retq rcrb rcll pop xor rex.WRB jrcxz rex.WRXB rex.WRXB pop xchg jp mov sahf outsb gs pop jns jo out mov gs xchg xor mov cmp xchg popfq lea movslq (bad) xchg push (bad) jne sbb flds rcrl xchg mov push add (bad) sahf outsl (bad) (bad) adc out cld test rex.X js movabs (bad) pop mov sbb jp jmpq (bad) pushq es insl ffreep xchg rex.WRX outsl fcmovbe test (bad) rex.WRXB (bad) test mov mov outsl idiv (bad) insb sub movabs rex.WB jne or (bad) xchg cmp std movsl scas rex.X push jrcxz enterq scas rex loope ss mov jo add (bad) lods xchg hlt sbb cmc leaveq mov and jbe callq out pop mov fs lock sub clc pop xchg jb out (bad) in and pop loop mov out sbb rex.W mov and icebp (bad) test out (bad) movslq hlt sub pop and jb js in mov je (bad) lea push int cmp mov (bad) gs adc in adc (bad) in sbb cmp sub (bad) std pop (bad) (bad) sbb movslq xchg pop nop fucomi mov xchg mov sbb fcos cmpsl repz hlt hlt mov out (bad) test pushq jmpq (bad) (bad) rorl sub sti decb jp stc out xchg out retq rex popfq sbb sbb sbb (bad) cmp mov (bad) rex.WRB (bad) adc rex.W jo insl fnstsw jg xchg stc (bad) sub sub mov (bad) clc in mull ja fsubrs xchg pop por cmc or bnd retq es fdivs jge cmc rex.B rex.WXB fiaddl jg sti mov push mov cltd sub pop movsl rex retq rex.RXB std mov jo mov xor in test xchg subl rex.WRXB std or addr32 mov (bad) mov out cld pop mov (bad) gs xchg js jge repz cli cmc cmp pushq (bad) (bad) (bad) rolb mov scas add xchg mov insl (bad) rex.WR rex (bad) test rex.WB jmp (bad) sahf mov sub je mov out negl (bad) insl out rex.WRX sbb cmp sub stos out rex.WXB rex xlat (bad) lahf fs cld cltd rex.RX in adc repnz xchg mov (bad) loope cmp add (bad) (bad) xor add jmpq loope mov (bad) enterq cli xlat (bad) lods (bad) repz scas pop pushq cwtl scas out decl xchg pop pop mov (bad) cmp movabs movb ds jo js sub std sbb rex.RB push std sbb repnz adc cmpl gs or fiaddl outsb retq in iret ja sub (bad) (bad) add in cmp (bad) je rex.WRXB jg cli fiadd in mov push (bad) mov (bad) cwtl in rex.W addr32 movabs (bad) xor xchg (bad) std movabs sub mov mov xor repz and scas sbb rex.WRB rex.R out cmp xchg xchg xor jmp fcomi sbb sub cmc insl mov lods lret jrcxz sub jrcxz (bad) divl jmpq rex.WX movabs iret push cs shrl cmp insl jne xor mov fs int (bad) movsl jl jg mov xchg (bad) fwait (bad) in mov pop fs push pop cltd incb in pop insb scas jp loope idivl je jrcxz shl cld mov movsl jle sub (bad) (bad) fsts (bad) movl lret icebp je nop pushfq cmpsl or jne xchg (bad) mov adc (bad) sub (bad) xchg xlat rex std nop xchg pop jmp sbb (bad) test add (bad) sub pop movabs (bad) sub in xchg xlat lret pop and js repz out xchg cmp xor (bad) lret (bad) jp mov or xor sub leaveq lret (bad) testl cmp in rex.WRX mov mov mov cwtl (bad) lods mov lret mov callq rex.B mov (bad) mov mov cmp out (bad) (bad) callq (bad) mov pushq stos out enterq jbe mov movabs mov add rcr push loopne cmp out mov xor sbb pop push (bad) clc addb loopne insl (bad) xlat scas sbb jb xchg in jp or or std xor xor and (bad) in out (bad) cmp and (bad) xor ja sbb lcall or stos (bad) ja out shll mov insb (bad) (bad) jg data16 test or (bad) mov jge rex.WRX (bad) (bad) leaveq lods int outsb retq sub ss pop xchg push outsl in (bad) movsb lahf outsl scas jle mov std sub (bad) in rex.WXB jle loope mov rex.WX callq or mov mov pushfq jbe in shrl (bad) rex.WR rex.WX movabs es fucomip int3 mov addr32 adc mov test jmpq jb xchg mov and flds out mov (bad) (bad) movsl mov fistpll sub pushq icebp add movsl pushq scas pop rex.WXB xchg shrb cmp (bad) vzeroall sub retq out mov xor jl je rex.WR and (bad) pushq retq and or xchg (bad) sub stos jmp gs sub sub jbe cmp cwtl ja xchg mov jae xor mov cmp pushq push js sbb cmp scas (bad) jp fistpll jg add loope jb jns or scas icebp (bad) sbb fisubrl mov (bad) in push fild fcmovu mov xchg imul loope cmp js rolb add insb faddl retq (bad) movabs test jae (bad) rex rex.WXB fmull xor jmp add mov cmp xchg sbbb xchg sbb enterq jbe sbb stos xchg or sti xchg push jmp and or clc (bad) fnsave repz mov je adc mov xchg (bad) jle outsl mov and or out test xchg outsb std fdiv mov push leaveq jmpq jne jnp rex.R lahf leaveq add rex.W insl (bad) rex.RXB jle int3 rex.WX push or xchg jno jp adc pop rex.W rex.R jbe rex sbb (bad) stos rolb scas rex.WR adc add (bad) scas es subl mov and rex.WXB (bad) mov pop pop cmp mov jg (bad) adc pop push add andl (bad) xor pop xchg push (bad) sti (bad) (bad) (bad) add jl idiv std mov outsb sti outsl ja rex.WXB movsl in rex.WR xor movabs loope int3 (bad) fmul push je jns lea in pushq (bad) jb sar jmpq sbb loope imul mov test lret mov mov jo sub push jp cmp mov and cmp lock pushq (bad) add imul scas add (bad) outsl movabs pushq (bad) mov rex.RB rex.WX repnz jle jns jo mov xor insl (bad) out pop cmp shll mov rex scas xlat outsb (bad) xchg jmp (bad) sub (bad) (bad) stc lods (bad) (bad) rcrl rex.WRB sub or and mov pushq js (bad) and mov xchg sub (bad) lcall mov xchg mov outsb pushq rex.WX push xor je iret pop cmp rex.WRX rex ja and ss sbb fs (bad) rol in mov rex.WXB retq pop lock sub mov in xor sbb ss pop xchg xchg lea in sbb sbb je std (bad) movabs (bad) xchg xor andl (bad) mov fbld xchg rex.WRX ror or fdivr int je or retq in mov fdivr mov repnz mov push (bad) outsl fidivr iret add rex.WRXB repz xor mov flds repnz (bad) cs pop adc cmp fisubr in jne js (bad) cmp cmp fistl sti std cs and sbb js cmp rex.WXB (bad) fstp stos add push xor hlt insb scas xchg gs xchg movabs xchg jnp (bad) jg and jne (bad) or jle (bad) jmp outsl pop cmp push rex.RXB cmp cmc cmp and jnp (bad) pop and pop mov xor imulb jmpq repz fs notb (bad) decl out rex test jl rex xchg rex.X mov (bad) sbb imulb sub mov (bad) (bad) es sbb sbb fsubl jbe adc mov stos lahf pop in sub (bad) push jmp movsb xlat adc outsb pop (bad) xchg cltd jb push out in pop fstpl (bad) cmp iret jrcxz scas callq mov (bad) movabs js sbb mov cmp sub or xor pushq rex.RB ljmp (bad) rex.W jge pop out popfq rex xor jge mov cmc in cs xchg rex.WB fs or adcb push js pop lret sbb mov cs mov (bad) jmp and test add xor mov pop (bad) xchg mov sti fnsave jl icebp testl sbb sbb add xor (bad) sub retq adc mov repz or mov pop movslq scas icebp repz cmp pop adc fs and (bad) jl sub shr (bad) jl mov rex.WXB lods (bad) (bad) sahf iret movabs insb loope push mov or shll out idivl (bad) out data16 jne xchg cmp rex.RX movabs gs sahf add gs adc out nop mov push mov cmp push fmull out shrl xchg mov mov jbe cmc xor rex.W (bad) movslq addr32 fwait mov (bad) pop (bad) sbb (bad) (bad) jo cltd stc in andl test xor (bad) hlt lcall jp,pt movsb stos rex adc (bad) in push jrcxz rex.RX fdiv rex xchg jp js (bad) and insl repz mov retq fistp mov xor in mov imul rex.XB rex popfq xor repnz out pushq loop and sub adc jae insl lods retq jo popfq imul sub pop cmp xor lahf jo push xor push jle push (bad) push popfq cs int3 rdpmc je adc and scas (bad) callq (bad) scas gs mov loopne add mov cli rorb data16 sbb (bad) (bad) rex.X push mov sbb scas (bad) sahf rex.W xchg je cli callq mull callq retq rex.WRX mov int jl fiadd (bad) in (bad) pop rex.WB jge mov mov stc shr mov mov jl xchg pop jbe cmp rex cld rex.B fiadd rex.WRX and outsl push std sti imul fistpll mov sbb (bad) (bad) rex.RB ficom jl rex.WRB lock icebp xor cmp jmp outsl jo mov and shll adc xor scas xor adc adc iret imul test add xchg jns mov ja rex or cmp test ss movabs or fbstp xchg xor std (bad) mov data16 sub xchg (bad) std sub jo (bad) (bad) iret (bad) (bad) push xlat rex.X xchg jl,pt out cmp xchg out sub (bad) imul rex.WXB cmp push pop out jl out and push loopne out xchg adc cmp mov pop lret push pushq pop js (bad) repz rex.WRX outsl push (bad) idivb idivl ds jo clc stos sbb movslq sbb js (bad) xorl xchg and jae insb in rcrb cmpsl xchg mov xchg pop clc lret mov jge mov (bad) cmp imul stos xchg push sub js (bad) pop jge mov fistpll push rex.XB mov (bad) movabs ja rex.WRXB test js cmpsl xchg movabs jmp mov jge js pop loope pushq jg (bad) out sub repnz cwtl cmpsb pop or cwtl test push cmp xor retq enterq rex.WRXB add jmpq in retq faddl pop xor jle in xor mov sti (bad) mov retq out rex outsb sbb adc mov lahf (bad) (bad) pushq push subl mov stc js sbb jne out stc test pop nop (bad) lods stos rex rex.WRX mov (bad) sti fwait and pop mov (bad) (bad) mov lock ja jno pop and cmp fwait loope sub cwtl lods push stos movabs cmp shrl in or jl or out mov xor (bad) mov loope insb fidivrl pop hlt (bad) mov (bad) push sbb mov iret outsb adc in rex.WRB (bad) outsb mov (bad) xor shrb (bad) rex.WX negl imul (bad) stc adc push stc rex.X lock sti mov (bad) jle (bad) (bad) xor or push leaveq adc (bad) lret pop mov xor cmp out leaveq stc jg pushq xor js mov loopne (bad) in fisttp out (bad) jne pushq and std jo mov pop (bad) or cmpsb outsb cld movsb jp or testb sahf jnp cmp outsl jne add pushq xor jge rol cmc rex.WRX fs movabs xchg adc idivl mov sub ficom mov sbb and lea mov push cli (bad) (bad) frstor cld pop (bad) (bad) fiadd je test rex.WXB cmpl movabs iret mov push xchg mov data16 movsl lea mov (bad) callq sbb (bad) icebp imul push mov and fmull sub fbld push repz (bad) cmp or fcomip int push std cld cs lods sar jae out sub hlt scas and push sarl ja scas sbb iret and enterq rclb outsl push xchg out add outsl movslq or test rex.WRX sub adc addr32 adc pop (bad) outsl mov pop xchg or retq sub (bad) mov outsb sub scas sbb js xchg sti jg xchg jmpq andl data16 xchg rex.WRXB cld in rex cmp iret mov retq sbb sbb pop jne scas outsb rex.RB xor cmpsb (bad) pop and (bad) and adc add fstpt jmpq xchg xor (bad) push (bad) add js scas (bad) (bad) xor (bad) repnz mov cli sti sub jno stos insl test sub shl out rex.W rex.RB and insb out (bad) pop xchg in cvtps2pi sbb and (bad) xchg mov shrb and mov stc sarb and sub xchg xchg mov jle rex.WR jmp jae (bad) add sub adc cmp cmpsl (bad) adc pop loope (bad) jle enterq int3 pushq (bad) mov pop sbb (bad) or idivl (bad) xchg sbb push and mov (bad) cmp (bad) push pushq popfq mov pushq (bad) jo sbb adc mov pop pop (bad) (bad) (bad) std jae hlt lods sbb add fcomp mov mov insb pushq stos cmp jo (bad) retq xchg gs sahf push insb pop jl imul cmc sarl subb mov or sub pop jge xchg cmp retq xor mov rex.X and sarl sbb jrcxz (bad) mov in out in jbe xlat adc or mov addb xor add iret fdivs jge rex.RB adc (bad) (bad) lods movslq out je rcl (bad) mov xor ss cmpsb test xchg cmp stos xchg ss movabs rex.WRXB push fnsave rex.X out lea adc (bad) adc (bad) es (bad) ja out mov clc (bad) mov fcoms xor sbb fcomps mov stc push rex.WB (bad) mov divb push sbb movabs xchg pop xchg add nop cmc jge xor jl js sub mov (bad) movslq mov xor mov je rol push mov stos scas sbb pop in fsubs je es (bad) jle (bad) ja jle out (bad) jmpq cld mov and adc push and ja cmc (bad) imul in cmp lahf hlt adc (bad) cmp cmc pushfq (bad) test in mov jp (bad) mov jns in or push (bad) xchg jmp mov jne adc or adcl jo xor leaveq and js imull adc rex.W rex.B scas sub lea cmpl mov (bad) xchg push (bad) sahf rex.X loopne jmpq hlt cmpb sbb ss cmp jle mov js adc add (bad) rex.RB scas stos xchg xor movabs adc pushfq mov jo jne or sub (bad) pushq jge rex.WX xchg cmp add rex.RB mov xchg fwait cmpsl pop rex.RXB add loop shlb out jrcxz or je popfq fsts callq rex.X sbb pop jl rcl pop jp (bad) cmp cmc rex.XB pop jmp sbb (bad) push xchg lahf in jl push hlt shr mov lods push (bad) jns adc push iret ja mov sub mov add fbstp pop test insb (bad) rex.X ss add (bad) (bad) (bad) rex.WB fbstp add cmp insl insl je (bad) ja (bad) sub movabs pop push xchg cmp sbb pop xor leaveq addl cmc cli rex.WRXB fsts jne cmp repz (bad) xor mov iret mull push (bad) (bad) xchg jrcxz sub lret test rex.WX pop std cwtl and (bad) mov pop pop xchg push add sbbl jbe (bad) sub sub jl (bad) and mov mov out (bad) mov xor test icebp sti lock retq imul add sbb addr32 and insl cltd mov shrl fwait nop sbb xor scas (bad) rex.WRXB cmp mul (bad) cwtl pop rex.X (bad) notl xchg stos add lahf (bad) mov mov mov rex.B cltd xchg (bad) fdivrl (bad) outsb addr32 cltd movabs (bad) sti and rex.WRB rex.WR jnp cmp loop fiadd (bad) jmp rex.RB out rolb cmp ror (bad) mov test xor or dec imul (bad) mov out int3 adc mov mov mov lahf in pushfq and in (bad) clc outsb sub je cs rex orl mov xor outsb jp jo sbb sbb sbb fsubrs nop lret xchg xchg (bad) repnz jl movabs or sbb sarb xchg decl mov rex.B gs pop push js cmp push cmc jg adc xchg or and cli rex.B es scas and mov rex.RX in mov (bad) jo cld push lret (bad) sub sti (bad) sbb imul cmp sbb (bad) idivl sahf push pop xchg (bad) mov jne in ds imul stc and xchg int pushq cmpsb loope sbb mov shlb sti mov and or (bad) jmp (bad) imul stc in lods repnz cld cmp xchg cli or js mov jo mov adc xlat pop jl or adc xchg sti xchg out xchg xchg pop (bad) in lret jge out jge and (bad) cmc mov jns scas ds xchg insb pop xchg rex.WR cmpsb pop mov or sbb (bad) callq imul push outsl pushq cld mov xchg xor xchg incl (bad) mov xchg xor sub mov add or adc mov movb cmpsb cli rex.RB (bad) int3 (bad) sti (bad) ss mov rex.X push adc int3 (bad) (bad) je movabs repz loop scas cli cmpsl out lods imul mov add lcall std adc sar fwait jg movabs pushq pushq insl jbe pop insl je push insl jb rex.W sbb and sti cmp xor sub and pop or sbb push sti out out out fildll xlat mov sub jnp movslq cmp jns push adc mov pushq cmpsb mov sub pushq mov gs out (bad) sbb cmpsb cmp sahf push repz fidivr lea es repz push sbb data16 jp and xchg xchg sub leaveq xor fdivp out xchg xor mov repnz mov out add (bad) rex.RX callq xor pop xor movabs mov retq cli cmpsb movabs push (bad) (bad) jno (bad) xchg or cmp scas callq add iret cmp jo insl mov (bad) sbb xchg push adc addb retq jmpq sub out (bad) lock add pop (bad) push (bad) sub (bad) or pushfq cwtl movabs fiaddl (bad) out sbb popfq icebp xor and js jg imul jnp rex.WXB pushfq fisubrl xor (bad) push leaveq cmp pop mov pop fs out rex.RB (bad) pop cmp pop pop mov sbb or hlt (bad) (bad) pop cmp pop pop incl fidiv cmp push cmp push (bad) or pop out fbstp xlat and iret mov scas (bad) jne mov scas pushq cmpsl retq sti lahf (bad) xchg push pop (bad) (bad) push sbb xchg cmc mov xor ja (bad) cmc fldt sbb hlt cmc pop sub pop cmc push cmp cmc rorl out rex cmc rex.RXB ds popfq (bad) pushq (bad) (bad) sti (bad) mov (bad) xor adc (bad) sti idivb pmaxub (bad) and (bad) mov or jne mov scas pushq cmpsb (bad) sti sahf mov (bad) adc adc sti js jo (bad) pushq pop and push ss (bad) sbb rex.W test ds or xchg (bad) mov out bts mov rcrl push nop rex.W mov pop jo decb fs rex.WB insl xor cmpsb rex.WX xrelease out movabs mov lea pushq scas sbb sti xchg cmp cmp adc insb mov (bad) pop push (bad) mov pop loop push jrcxz fs push movabs ficompl xor or ljmp test xchg rex.XB ds pop cmpsl gs scas or rex.WRXB lahf jmpq ffreep sbb mov loope (bad) jno test and cmp and outsb pop popfq (bad) loope rex.WRXB test hlt mov pop push add adc xchg push (bad) (bad) sub cmp cs pop sti rex.W sub cmp cmp push rex cmp out fistp xor popfq fxch sbb xor mov xor paddd callq sahf jns mov addr32 rex xor jge or test nop sahf es cmpsb rex.RB (bad) loop (bad) mulb mov pop stos rex.RB rex.WB fdivrs fxtract cmp or xchg gs (bad) pop mov faddp cmc insl push jmpq (bad) iret (bad) (bad) callq (bad) addr32 lock (bad) sub (bad) test iret mov (bad) loopne test fdivp in xchg frstor out (bad) and movsb mov xchg movb push sub (bad) pushq mov or jns pop (bad) sub mov sti mov shr repnz int (bad) fbstp sub mov (bad) mov rex.WRXB mov (bad) movabs mov (bad) (bad) (bad) rex.W movabs sub jbe out (bad) mov cwtd insl repz (bad) out xor mov mov rex.XB loop movabs pop mov fwait rex.X testl es (bad) in popq iret xor pop mov jg iret jbe fstps out cld xchg (bad) pushq scas lret (bad) div idiv mov pop rex.WB sbb push fdivrs (bad) sti sarb jbe xchg iret and je sub sub (bad) fildll int in (bad) outsl mov test rex.RX std gs pop movabs mov rex.RB rclb cmp es add in pand pushfq movabs jmpq cmp iret xchg rex.RX out mov or add (bad) jmp mov and (bad) stc pop stc fs out adc jge cwtl out hlt xchg jns (bad) movabs shll xchg cli cld sbb mov outsl cmp xchg loop or cs or and mov jle cmp cltd (bad) or outsb mov (bad) mov addr32 test rex pop movsb sbbl push cltd (bad) in sbb jo cmpsl add scas test (bad) in mov jne mov (bad) out sbb lret outsl jb stc movabs pushfq rex.R jo mul (bad) adc cltd mov out js or or (bad) jrcxz movsl jp push pop pop rcrb cmp lods sub out (bad) sub cmp xor flds in (bad) lea (bad) mov imul (bad) xor rcrb xor or pushq js jnp shrl jnp push jle rex.WR jge gs movabs (bad) mov mov sahf movabs lahf (bad) xor adc (bad) (bad) and fistp cmc rcrl decl ffree jge jns test push and xchg xor ja fimul adc movsb sbb loope callq fidivr bnd jbe add add lret rex.XB in xor (bad) (bad) js sub sbb mov jle pop add movabs leaveq jno lcall mov (bad) or (bad) (bad) jbe jp in (bad) jo add (bad) pushq jo xor pop and (bad) mov nop test sbb and pop callq xlat (bad) sub sub jg retq mov mov jmpq mov sti jmpq int fnstcw and scas (bad) cld (bad) pop stc (bad) fxch idivl sub mov xor pop sub and (bad) cmpsl and lods leaveq rex.XB addr32 jmpq (bad) (bad) jrcxz or push sub notl adc rex lret lods (bad) pop test hlt push (bad) jne je pushq cmp rolb adc adc movabs movabs mov xor div (bad) push test (bad) (bad) iret (bad) rex.WRB pushq xchg jrcxz pushq pop out es out push rex.W jrcxz sahf or rex.RX mov and jo pop mov iret mov and mov out pop out rex.WB stos mov mov rex.WRB pop xor mov je cmp std and insw nop or loopne idivl xchg cli mov adc jbe pushq add (bad) clc (bad) lock mov pushq ficoml fmull (bad) lret lret rex.RB cwtl mov jo push (bad) neg out jno mov lahf mov movsl (bad) std mov or subb imul xchg retq cmpsb (bad) movabs jp outsb movabs fsubrl cmovs testb and in fs insl xchg stos in cmpsl je rex.R stc gs jrcxz push sub lret or lods in (bad) cmp mov outsl cmc (bad) rex.RXB adc cmp add in push lret (bad) xchg outsb js outsb push pushfq sbb pop roll or movsb addr32 xlat jo lods pop fsubrs adc pushfq sbb adc fadds sbb sub adc sub (bad) mov outsb scas (bad) or push addr32 stos push mov rsqrtps in shlb rolb (bad) xor xchg mov stos mov (bad) rex.RX pushq add and pop push or out rex.R jrcxz rex.B out rclb push (bad) divb pushfq movsl jmpq cmp (bad) jns xlat xchg jne mov (bad) pop (bad) or (bad) sub add xor (bad) mov fisttp cmp callq mov (bad) mov jnp test movsb rex.WB jg movabs (bad) rorb cmpsb (bad) mov neg outsb jbe gs rex or stos rorl xchg fstp mov mov jmp addr32 jmp cmc (bad) (bad) rex.WB rex.WRB mov (bad) adc pop (bad) rex.WXB jnp lahf gs fisttpl mov sub jae rex.WR scas (bad) xchg sbb and adc mov lock outsb jle enterq jns out imul fs jp rex.WRX mov rex.WRX sbb rcrl (bad) insl pop test pop mov outsb push in xchg repz mov (bad) mov pop xchg ds (bad) lret out or mov or mov test cmc (bad) push fnstsw mov loope fcmovnbe xor lods je xor fdivs out rex.WR fmull sub sbb rex.RXB jae callq je fisubl jo (bad) xor (bad) andb push rex.WRXB repz add movabs in int sub pop bnd (bad) push (bad) lock mov gs fucomp rex sub jnp pop es sti shlb (bad) or jo push pop insb shlb rex.WRXB jo stos (bad) and rex.WRX jle (bad) cmp ja loope push sbb rex.WX mov xlat xor cmp xchg imul adc flds js mov nop adc test jmp insl push movabs cwtl fnstsw adc cltd (bad) xor loop adc gs fiaddl sbb pop (bad) (bad) mov mov pop cmc (bad) movabs mov rex.RB je (bad) outsb js mov push (bad) jb in rex.WRB scas shr xchg jo (bad) mov fstpl cmp outsb imul test rex.R jp pop push retq (bad) stc jp push pop mul (bad) cmpsl (bad) cmpsl pop rorl or and (bad) (bad) push add sub pop cmp adc jmp sti and movsb xchg (bad) mov sahf fsubrl outsl int imul jmpq hlt lret and pop (bad) stos (bad) js mov pop jb jl insl jmpq rex.WRB jge (bad) in add cwtl push popfq rex.WB rex.X addr32 jbe (bad) pop fsubs rex.RB lods jo gs mov cmp (bad) and cmp std adc sub ficom mov cmc pushq nop jp fsubs xchg push (bad) pop sti jp (bad) int3 pushq mov sbb insb cltd and outsb (bad) (bad) mov retq xor es leaveq jrcxz (bad) lret sub loopne push fs sti mov ds rex.RX jbe adc imul mov or xchg jmpq mov or rex.WRB cli lods push mov popq cmc movslq icebp pop mov (bad) and cmc sbb ds (bad) test cmp (bad) (bad) (bad) sub sbb cmc test xchg rex.X in rex.WR (bad) jne rex.W movabs xchg fimul outsb jb xor mov loop stc mov mov xchg sub push enterq push loope cmp (bad) addr32 movslq (bad) stc and es mov push xchg lock push mov in movabs addb push add cmpl jbe jo mov cli je jo fs jg (bad) mov ja testb ja pop movabs pushq sbb pop add and data16 imul push (bad) stos sbb sub in adc rex.WRB scas and lods (bad) (bad) add fwait sbbl repnz pop in pop (bad) xchg in xor cmpb (bad) stos movabs fsubl lods xchg mov rcll fldcw mov insb or jnp jp or shrl xor sub ds cmpsl fxam jmpw xchg pop xchg loope outsl and add loope pcmpeqb pushq xor xlat cmpsb (bad) imul fs fs xlat imul negb adc idivl lods add xor callq stc out rex.RX rex.W addr32 ds sbb loopne test imul std fisub mov pop adc jo push adc xor pop adc rex.R xchg sbb pop loopne (bad) sub cmp imul int3 add rex (bad) stos jrcxz mov test and xchg sahf movabs and add xlat (bad) hlt mov and (bad) mov out (bad) push (bad) and in xchg push cmpsb (bad) mov movabs lahf int cmpsb in push mov mov mov insb dec add mov jle (bad) gs cmpsl (bad) mov cmp out test (bad) int sti (bad) add fisubrl adc fdiv cmp movabs mov sbb decb pop jmp pushq notb mov (bad) sub js sub mov mov (bad) pop jno rex.WRB outsb jle mov xor in in (bad) out pop mov add (bad) js sbb pop or (bad) (bad) push mov stos cmpsl (bad) movabs rex.R rex.W pop rex.RX addr32 pop mov insl sarl fistp pop stc jrcxz mov outsl pop xchg jne (bad) xor movsb lods jp xlat xchg mov mov push insl fs jmpq movabs (bad) lahf xlat push pop adc mov and jnp jp ja out mov movabs xor mov clc test stos rorl scas mov (bad) (bad) int (bad) (bad) fcomi ja outsb (bad) (bad) lret (bad) sbb imul xlat jp cmp int3 (bad) imul (bad) pop cmc std add in (bad) xchg pop or push (bad) lea rex.B int3 cmp cmp jns out (bad) pop and imul xchg rex.WRX rex pushq insb jbe pushq test pop data16 pop (bad) jle rex.WR je pop xchg sub push outsb jne (bad) (bad) (bad) movabs loop pop outsl rex.WRXB (bad) adc mov xor cmc pop cmp callq js sti insb ficom jns xchg rex lcall insb (bad) jne pushfq hlt sti or rex.WRXB js lahf outsb imulb jp int pushq or push sub or (bad) jle shr sbb ffree pushq fisttpl adc push sub mov cltd and pop loop and pushq je adc addl sahf psubq rex.XB or push push xor xchg rex.XB jbe out callq (bad) movsb and jns pushfq cmpsb pop sub (bad) ljmp rex.W es xchg jmpq orl cmp xchg (bad) lret repnz insl in in pushfq (bad) xlat pop mov mov ss xor mov jg mov movabs add and and es mov loope pushq addr32 sbb jmp mov xchg sti scas (bad) sbb mov pushq hlt xor test (bad) in test pushq and add retq (bad) cld (bad) (bad) insb sub sbb (bad) outsl fsubrs or push pop sub iret xchg cmp scas insb repnz adc xor jns ficom add ljmp mov cs addr32 movabs rex.X hlt jno xor imul je js cwtl sub scas out (bad) sbb (bad) addr32 sub mov jl out cmp and jne cmp test pushq rex.WR and cmp rep and mov add scas out fmuls std repz and int3 pushfq icebp jne adc or (bad) or mov int and in bnd in rex.WX xor rex.W add es xor insb push ja cmc jns add push pop cmp pop pop cmc add or jb rex out pop mov rex jne xchg cmp mov test mov adcl rex.RX push (bad) shrb ja and sub rex.WRX mov jp xchg js xchg mov xor fwait test movabs (bad) cmp js (bad) xor loope (bad) add sahf xchg outsb std gs rex.WRX (bad) pop cmp pop out cmp pop cmp cmp ds out adc int3 sarb (bad) out in (bad) push lock imul rex.WRXB cli test (bad) (bad) repz pushq fistpll out rex.X sub (bad) mov (bad) xor xorl int sbb push shll jne rex.RXB jnp or xor pop mov (bad) and mov adc and in mov pop (bad) sub xor (bad) in pushfq js and jmp (bad) and rex.WRXB repnz or xorl rex rex xchg mov jns outsl rol fldl jge rex.XB (bad) xor jle mov pushq stc pushq outsl insl and movabs pop adc or stos js lock sbb jae jmpq clc js rex.B jp iret (bad) insl jmp stc mov or (bad) bswap cmc addr32 push js fwait rex.W fwait rex rcrl pop rex.R jle icebp outsb in js jg out mov sbb cmp and pushfq outsb stos (bad) lahf pop (bad) std (bad) movabs (bad) xor pop pop addr32 lock scas mov and rex.WRXB pushfq scas xor scas out sahf movsl mov mov jge pushq nop mov ds adc ficoml xor outsl (bad) mull fs fucomip adc (bad) (bad) rex.WR cmc leavew jp xor pop pop insl push stos int outsl cmp iret pop scas jae and xchg rex.WR imul and movslq fsubl mov insl sub xchg adc jge in xchg in fistl in cmc mov je in sbb movabs (bad) rex.WR sub lea xchg ja (bad) (bad) sub fisubr and outsb mov (bad) xor cs mov rex.X (bad) push mov outsb (bad) mov in pop xlat shrl xchg (bad) add pop push (bad) rex.RB jb xchg add sub out insb fisubl push loope enterq mov loope lret sbb rcrb rex.WX outsb out addr32 sarl pop callq callq test lahf cmp or xchg test xor lock rex rex.WRX and out mov (bad) and mov mov rex.WB xorb outsb xchg data16 icebp rex.RXB jo mov std or fistp test rex.WX xchg (bad) mov (bad) imul imulb (bad) or rex.WX (bad) fnstenv xchg test mov (bad) jp,pn jbe loope cmp (bad) and (bad) push (bad) outsl and fidivrl ja orb or (bad) rex.WRX (bad) jle pop adc (bad) idiv jne sub rex jge out bnd test (bad) and (bad) out (bad) lahf jge jae rex.WRB xor rex.WR xchg (bad) xor jmp or xchg out adc adc je rcrb rex.WB cmp jg int3 je jmpq fst movabs xchg mov mov loopne rex.WB pushq test cmp cmpsb add jae push cwtl pop pop (bad) lahf mov insb jg xchg pushq pop mov adc retq xchg fnstcw jl and insb jb jns (bad) xchg (bad) xor mov test mov insb cmp pop adc jbe sub int cmpsl xchg xor mov or and lods out vpcmpgtw xchg rex.WR insb (bad) mov insb xchg cmc clc add fstpl xor sahf rex.R in in rex.R xchg (bad) mov js scas (bad) icebp scas (bad) sub rex.WRB sti iret pop addr32 rex.W adc pop and cld mov int cld lods fiaddl in ds rex mov pop push decb and insb or (bad) pushq sbb pushq pop int3 lret xlat (bad) (bad) cltd sbb test cmp enterq xchg pop adc ss sahf movsl pop sbb and notb (bad) hlt add in xchg pushq movsb or (bad) or jae lret (bad) retq mov pop ja test xchg out ja (bad) sbb insl fs pop and rex.RX (bad) adc (bad) jg add test testl mov js out cmp (bad) jmp pop or mov mov insl pushfq (bad) jns cmp (bad) incl (bad) ds mov stos in xchg outsl (bad) (bad) insl in xchg (bad) (bad) fincstp (bad) ja pushq rex.RXB insb mov scas fs rex.W gs outsb or cmp out (bad) mov xchg or movabs mov rex.RX lods rex.RXB pushq jle out rex.WRX pop (bad) rex.WX callq adc adc jp sbb movsl (bad) iret sub xor xor add cmc (bad) jae lcall std pop jo mov je test jp pushfq test rex.W fdiv jmp adc push sub nop sbb jle insb pushq icebp jbe js mov pop lret imulb adc (bad) in add loop (bad) xchg shr scas cmp rex mov (bad) cmp or pop sub outsl fdivrl enterq ds out movabs adc cmc mov neg and out cmp (bad) pop mov cmp xor cmpsb jg int (bad) ds (bad) xchg outsl (bad) div cmp cmp pop adc cmp sti cmp (bad) (bad) (bad) (bad) popfq sbb shrb shrb sahf stos (bad) sub js or std xchg (bad) jne xchg fs pop imul outsl rex.W sbb mov in callq clc sub push decb xchg mov (bad) (bad) (bad) cltd enterq cli xchg fldl pushq (bad) jo mov fisubrl scas scas pop add (bad) std mov (bad) xchg in test shrb ja mov mov idivl xor in pop ja (bad) vcvtdq2pd sub clc (bad) loopne jl push in stc outsl out scas (bad) je mov movabs out loop cmpsb (bad) xchg pop rex.X cmp (bad) and sti iret out (bad) (bad) rex.RXB rex.WRXB pushq sbb jbe xchg sub lcall (bad) jnp (bad) or or sub xchg xchg ss pushq and or ds ss jp sub rex.B (bad) jbe cs or (bad) popfq pushq xor out and notb (bad) pushfq xor gs popfq xor lods outsb mov (bad) sar (bad) in rex.W iret sbb lods (bad) xor fcoml out pushq cmc outsl jp rex data16 cwtl pop icebp mov mov ds (bad) pop es pushfq imul push imul pop rex.RX notb int (bad) rex.WRB (bad) cltd lods rex.WRB mov (bad) sbb pop mov fs int xor outsb callq adc sbb cmp repnz fbstp xor (bad) outsb cmpsb pop pop fidivl idivb (bad) sbb mov fcompl mov push xor loopne fucomp cmp leaveq loop jae (bad) shl hlt in pushq or stc lods add or lods outsl jbe pop (bad) sub js imull xor out sub std retq mov mov sub jbe (bad) shll test jo xor and and outsb or sub addr32 mov imul repz jbe pop clc out imul adc xlat (bad) xchg pop push negl rex.RB ss out std je sub mov data16 pushq fnsave (bad) xlat (bad) fcomip pushq mov xor test rex.WRXB rex.WR pop pop rex.WR mov rex.WB rex.WX std out repz or xor (bad) mov adc jp pop cmp sarl scas (bad) iret es xchg xor int jp (bad) (bad) xlat stc out mov hlt lahf xor in icebp pop insl (bad) jp pop sahf in adc (bad) (bad) loopne push fs (bad) scas mov cmpsl cmp scas xchg out (bad) fbld imull out xchg xor sti cmpsl push jge shld or (bad) jl (bad) add fdivl movabs scas jo rex.WRXB add sub ja pop adc mov (bad) sub scas and insb pushq push (bad) cli cmpsb sbb mov shrl rex.WRXB sub jp imul add retq stos xlat cs cmc jge mov jo push shrl lret add fldt mov neg insl addr32 (bad) (bad) sbb pop adc add or sbb cmp cmp rex.WR rex.WRXB and sub sbb mov sub test insb shrl (bad) (bad) (bad) xor fnstenv (bad) jmpq hlt sti (bad) mov fsubrl in cmp or shr out cmp sub jbe jo shr (bad) cmc cmp push rex sarl in (bad) insb ds pushfq (bad) rex.W movslq (bad) pop adc not es out fimul fdivrl (bad) lret sub push (bad) rex.WR (bad) lret cmp pop stos (bad) (bad) jge and out out (bad) mov add (bad) mov insb (bad) sbb out out icebp cmpsb and and fcmove sub sub rex.X insb ds mov xchg (bad) pop loopne ficomp (bad) ds push xchg fwait out (bad) hlt fisubl mov callq cmp pop sbb (bad) cmc (bad) cmp push sbb (bad) xor movabs jns stos iret ja lret int cs (bad) outsl mov loop push adc sbb jnp jne std int3 lret adc cmp (bad) adc or ja scas rex.WRXB (bad) pop rex.WRXB movabs (bad) sti xchg sbb je int rex.RX (bad) jnp fsubp pop fldt (bad) mov sub cmp fsubrl mov cwtl sti repz xor rex.R jle mov push xchg sub xor in pop std mov (bad) (bad) xor cmpsl push or sub lods rex.RXB loope sbb insl pop fisubrl xchg lock add jge mov mov (bad) je mov es rex.RX in jbe test lea mov insb popfq mov sub mov std or in (bad) pushfq sub (bad) mul imul es (bad) es sbb int push lock imul mov fadd xor mull push pop mov rex.RXB shr movslq pop (bad) in cs mov in ds ss jno movabs sti mov (bad) jo or mov (bad) fwait or leaveq adc stc (bad) outsl mov stc out (bad) sub sub pop andl push mov and cmp xchg push add and in (bad) rex.WRB push push imul cmp sub out pushq cmpsl int jmp imull sti cmp xlat icebp (bad) out rolb (bad) mov rex.RXB addr32 rolb fwait int3 rcrb sub movslq lea rex.WRXB cmc jge mov (bad) pop out pop (bad) and ja fildll in repnz lahf hlt jnp push sub cmpsl lea imul push sbb cs loope hlt (bad) pop sub fadds loopne rolb or in lock pop (bad) repz callq pop div fisub pop ds negl and out in insb sahf out (bad) in pop lea cmp pushfq pushq or (bad) test (bad) insb jmpq adc mov push fldcw scas pop or ds mov mov pushq (bad) fmull in xchg repz push jge sbb lret ja xchg (bad) ror adc rex.WRXB sub in push mov and and sbb sub imul mov xor fwait es push xchg es repnz xchg jbe xor (bad) jae rex.W adc lahf mov rex.RXB jne (bad) xchg (bad) xlat xor sbb rex.W pushq repz movabs jrcxz fcmovnu pushq gs or movabs (bad) icebp in in int3 fidivl xor rex.WRXB pushq (bad) int ss outsl out add stc loop rex.WXB (bad) xchg cltd scas addr32 js cld (bad) cltd cli lods mov add clc scas rex.RXB lahf jb pandn or rex.X pushq jp fstpt add jmpq clc icebp scas sahf sbb xchg adc shll or cmp jle pop test scas (bad) icebp xor jbe push lock xchg leaveq or pushq (bad) je rex.RB (bad) xchg (bad) iret movl (bad) mov push je scas or outsb pop rex.W insl (bad) rol and sub add sbb cmpsb (bad) retq jnp jp movslq push mov (bad) js rex.WB data16 cmp (bad) cmp pop scas jbe add mov ja cli sarl push sub outsl lods push in test fidiv jl or es orl pop xchg cmp jbe insb rex.W rex.WXB mov shl (bad) cwtl (bad) jle fwait mov (bad) sub sub test add mov loope insl (bad) or vmovupd scas fistl push and rex.RX std (bad) add idivl rex.W scas pop rex int stos add icebp mov test popfq add and rex.WX adc in imul mov pop adcl je or fwait rcrl jbe jo pop pop test xchg (bad) sbb adc retq and xchg rex.RB and cltd cld jg movabs loop retq movabs in xchg rcrl adc callq pop (bad) (bad) notl and jl fsts mov gs pop cmpsb callq cmp loop (bad) or push fldl lock mov movslq andb gs jnp lea sbb adc rex.X xor jo test (bad) andb lahf and sbb fld xchg xor rex.WB (bad) fs (bad) scas (bad) sarl insl jmpq adc cmpsl gs mov cmp ffreep (bad) mov and cmp (bad) hlt (bad) notb sub xor rcrb cmpsb lahf mov (bad) jg rex.WR rex.WRX fadds (bad) mov outsb lock xchg or mov retq cmp xchg negb loopne out add movsb scas (bad) lods rex.WRX xor jno sbb loopne scas and (bad) cmc insl rex.WR fsubrs add sub lods loope vpand jrcxz in xor jo (bad) push jle js popfq xchg or (bad) pushq in jns outsb (bad) jl xchg cmpsb (bad) cmp sti addb test jl jo xlat and mov (bad) jmpq insb push add jp js jle or std push addl sbb pop mov or (bad) (bad) cli (bad) mov jle jrcxz xchg (bad) add fcomps (bad) (bad) fdivr pop stc lods (bad) js (bad) rex.WXB insb add cmp adc loopne fsubrs scas jno movabs sti (bad) jl imul cmpb sbb mov imul repz loopne ss and pop (bad) icebp (bad) sub nop movabs scas fs sti (bad) jne lahf je push mov or push enterq je mov imul xchg and (bad) insl (bad) fsts mov mov js pop rex.RB rex push add push adc je in mov xor outsb test mov rex.WXB push scas jp lods mov (bad) mov je insl push or int (bad) or rex.RX notl add lcall mov push fisubr mov or ja push adc mov movsl js lock jg jbe rex.WRX scas (bad) mov sbb xorb push jge pushq scas pop leaveq cmpsb clc pop fbstp movsl add retq adc and cmp xor mov or test mov cmp (bad) (bad) rex.RB adc xchg xchg imul loopne cmc sbb js mov addl clc test insb imulb mov jle pushfq stos and xchg sbb sbb sub fs rex.RX and stos (bad) xchg push imul (bad) xor andb je test (bad) imul adc (bad) xor and xchg js flds jge adc (bad) sbbl push sahf jrcxz js jp imull scas xor sub iret mov fs or (bad) leaveq xchg sti mov jrcxz out in movups cmpl je (bad) jl ja sahf jno jb fnstenv std (bad) js jle pushq test insb (bad) rex.WX xchg (bad) nop xor (bad) mov sub push push and jge fistpl cmp in insl rex.WR mov xchg sub jns pop icebp xchg mov movslq pop (bad) subl rolb push mov neg (bad) notl mov add push out retq mov test (bad) and (bad) pop (bad) xor sub sti jg or movsl movsb (bad) mov lahf mov pop iret mov pop xchg jl repnz xor jo mov or xor jns xchg jo rex.W test scas test popfq enterq retq mov xor rex.WXB (bad) je scas (bad) rcll mov out ds int fs (bad) sti jle (bad) xor push ds fdivrs and (bad) cmp mov sub rex subb stos sbb test xchg insb pushq jl scas (bad) scas push and xor (bad) (bad) xor rorl neg lods pop jge (bad) (bad) cmc pushfq std and rex.X retq rex.WRX fs decl mov sbb test scas xchg rex.WRX pop xor mov jl xchg mov std popfq jmp iret push (bad) pushq insb in movabs sub prefetch or push (bad) rex.XB loope and (bad) fidivl js xchg (bad) lods movabs (bad) adc or (bad) mov mov repz cmp lahf callq sub fidivl cmp (bad) add in loope (bad) addb out (bad) bnd shrl and rex.RB fwait (bad) or in or imul outsb or outsl and notb in callq fidivl jge rex.WXB lock movsb imull (bad) push retq jge rex.WRX rex.WR pushq scas ror scas ss (bad) mov cs stc pop pop sahf (bad) fdivp rex.WXB sahf (bad) jne out loope icebp andb imul sar sahf andl rex rex ficompl pop mov pop lret xchg pushfq pushq (bad) (bad) push (bad) jnp scas (bad) mov xchg adc push fistp imulb rex.B rex.WRB fistpl outsl (bad) repz out incl loopne scas lods (bad) imul or pop sub test stos imul mov xor jl (bad) cmp (bad) (bad) sub push rex.WX cltd test clc and add push jp fnstcw jo test jl jrcxz rorl js fldcw hlt in ss sub loope push add fbstp rcrb (bad) jge add (bad) adc push js sbb int3 rex (bad) rex.WRX pop pop jo,pt insl cmp stos pop xor mov ja insb rex.WXB int3 xchg mov sbb cmp add sti xchg popfq in (bad) mov or xchg lock jle rcll sbb sbb stos cmp push out in mov (bad) cmp fs js pop lock (bad) scas hlt (bad) (bad) (bad) pop adc jbe sub rex mov outsl icebp in icebp lea icebp (bad) roll mov jg cmp imul add lahf add cmp jmpq rex (bad) cs out scas fstpl adc repz xchg (bad) scas gs jo mov push sbb mov jbe ja xchg loope testl data16 fdivs jge repz imul xor in add add in (bad) rex.W out adc test (bad) retq push mov cmpb loop scas sbb xchg xchg movabs rol cmc fidivr cli jns rex.WRB test pop mov notl mull movslq mov jmpq jmp cmp imul sub jp imul push in push (bad) rorb sub lret xor rex.WRB int3 jne pushfq std nop outsl insb jg xchg jl mov idivl (bad) lods (bad) pop or mov (bad) fcos rex.B scas movabs fs sbb mov loopne (bad) xor (bad) adc pushq xchg sbb jl mov (bad) add rex.XB push mov cmpsl mov in (bad) (bad) rex.WRX lods (bad) adc mov ss cld add pop hlt roll (bad) sbb lods xchg (bad) fnsave in lahf ss push lea mov fstpt fnstsw ja loopne out imul rex.WRX push repnz loope (bad) rex.WRXB adc add rex.WRX out and test push sbb xchg shlb outsl cwtl leaveq rorb (bad) (bad) jrcxz std retq rex.RB fistl pushq jp xchg sbb pushfq je retq mov movabs movsb sub sub (bad) (bad) (bad) add pop push sahf sbb insl push imul lods adc sub cli fs loop loop (bad) sub rclb xchg xchg lods test pushfq add push xrelease jp cld mov xor gs in sub lea mov lahf cmp pop mov loopne add jrcxz lods ja or mov (bad) jns jle xor rex.RX movabs jl idivl mov fisubl jb pop movabs loope jnp pop jns (bad) mov xchg out (bad) cli adc std repz in cmc outsl sbb stc rex.WRX (bad) (bad) jge mov jb sub mull incl jmpq pop (bad) out in pushfq in sbbl incl (bad) ss popfq cmp scas pushq mov xor loop mov or rex.R xchg sbb sub jnp int pop rex.RXB (bad) xchg jrcxz (bad) mov (bad) in (bad) (bad) gs cld push (bad) (bad) pushfq sbb sbb outsb jg (bad) shl (bad) test imull icebp lahf (bad) outsb push and in rorb jge scas or (bad) rorb (bad) or int sub lods imul xchg imul insb insb rex.WX xor xadd push gs push jge push mov jp adcl mov scas mov rex.B (bad) data16 sbb xor push mov scas (bad) shrl xor xchg idivl ja imul fist pop (bad) rex.WRB xor mov scas rex.WRB add xor and movslq jmp ds imull xchg pushq (bad) xchg rcl jns jo (bad) fcoml pop add adc adcb clc xchg (bad) scas add imul cmp sbb sbb push (bad) push mov es cmpsl push mulb sub or xor (bad) outsl xchg pop loope (bad) outsb imul and (bad) (bad) stos (bad) or in outsl mov in icebp sbb movabs ja mov push jo cmp (bad) mov jbe pop sbb cmp xor sbb cs rex.WX test push mov fidivrl xor (bad) fs movsb in lock loopne (bad) (bad) cmp sub (bad) sahf cld (bad) mov xchg cmp (bad) rex.WR insl stos lret (bad) (bad) xchg add jp xchg callq movslq cmp (bad) xor addr32 js cmc pop shrb std (bad) insl in mov adc (bad) jae icebp adc outsb (bad) repnz rex.B fisubr sahf pop in rex.WR add js out sbb sbbl popfq imul movabs mov sahf std es enterq pushq xor movsl mov or insl retq andl insl lret lahf out data16 imull js fstl sbb jae pop (bad) jp jle incl ljmp jp rex.X rex.X cmp rex.X fwait subl shrl lods cmp rcr and bts cld pop (bad) fidivrl jl cwtl sbb push xchg (bad) out int3 icebp iret scas (bad) mov int sbb xchg addb and (bad) movsb xchg rex.WRXB (bad) in fisub add cwtl (bad) addr32 jge pop lret (bad) out jo xchg callq sbb sub and stos push (bad) pop push and (bad) or jp rex.WX add sbb xor rex.R mov (bad) xlat xchg xchg addr32 lods mov imul (bad) (bad) pop add cmp or roll jg or rclb cwtl jg and (bad) jp (bad) (bad) clc push (bad) cmpsb insb cmp or sub (bad) xchg imul rex fwait insb negl cmp jg std stc js mov mov mov test rex.XB add mov jno or sbb add andb sti (bad) jns fstpt sti icebp pop stos (bad) pop shr lret pop (bad) divl mov rex.XB rex.XB rex.WRX rex.WRB sbb xchg pop (bad) sbb mov test out int scas cli mov mov jle imul mov in (bad) mov (bad) jmpq cld rex.WB xchg pop (bad) sbb jbe fwait xorl retq (bad) stc and (bad) mov pop outsb (bad) cmpsb lods jbe int sbb cwtl xchg or adc cmp cwtl sbb xchg test rex.WX jmpq or jl fsubrs xchg es mov imul cltd outsl in push adc imul pushq std retq fldenv add icebp in push lret jp insl rex.WX sub (bad) js data16 jle sub mov test sub cmp cs fs (bad) mov mov push iret stc jp movsb rex.RX cmp lods push xchg rex.WRXB sbb (bad) xor (bad) cltd (bad) movsl hlt pushfq xchg movsl sub (bad) rex.RX mov scas ss (bad) pop sbb xlat mov fsubrs cmc (bad) scas cmp add lret rex scas pop jle or xchg push jg jg (bad) (bad) xchg (bad) rex.WRB jne scas std repz je pushq jo fiadd adc jl mov lods push jg sarb pop callq and sub xchg xor rex.WXB jmpq pop cld (bad) insl fmuls retq and sub movsl pop (bad) push jne and cmpb cmp cld xchg (bad) movabs sub movabs rorb mov jmpq movabs pop (bad) jo loopne retq test lock in dec (bad) scas cwtl pop insb js (bad) and rex.RX rex.WRXB rex.WXB (bad) in sub or add retq or pushq jle (bad) scas jmp cmp pop xorl fistpll pushq insl pushq sbb cld iret (bad) scas mov push jne in add push (bad) or lret cmpw sbb retq mov test xor rorl and js adc cld push cld rex rex.WB fimul or add test scas xchg and rcrl cmp jle nop lret int3 mov pop leaveq (bad) rorl data16 and pushq (bad) xchg (bad) rex.X adc je div pushfq jo rex.RX lret clc or rex outsl mov xchg pushq test enterq push ja adc mov mov cmp jle imul sahf push cmc ja pop outsl jge,pn add jl or fstl xchg sahf out xchg insb add data16 push outsb mov xchg or xchg mov stc jo movabs fnstenv outsl sub movslq jl outsb (bad) jle jge jbe xchg jbe add xchg pop punpckhwd (bad) lret cld in pushq mov sahf jmpq test lcall scas (bad) push je imull xchg shrb cmpsl lahf add orb fcmovb test sbb pop movsb pop ror popfq fild (bad) (bad) ss (bad) movabs scas and stc scas lcall roll (bad) lret sub pop pop xor and pushq cltd (bad) (bad) mov push imul in js xor mov (bad) fldpi cmc pop mov xchg cli outsl xor movslq test data16 pop loope xchg jns xchg rex.WRXB (bad) hlt lods mov (bad) jg cmp (bad) xchg sbb jbe jns decl pop mov movabs rex.WR in xor mov gs jle cmp push (bad) mov rclb (bad) sarl scas orl (bad) mov and in insb pushq xor adc test mov pop lret mov sub (bad) in (bad) or sbb push (bad) jbe (bad) (bad) jnp jl scas cmpl repz jg cli add xchg out lea nop (bad) repnz jle xor jbe xchg xor add lahf jp jl fiaddl loopne stc insb outsl mov fdivrl jl pop cmp mov stc js jbe push xchg jle sbb and test sbb lods xor movabs (bad) rcr lods stc outsl pushq pushfq pop xchg loop mov rex.R movabs jne callq ds adc outsl jo fs xor hlt lods rcrb sahf or pop rex.B xchg fldl imulb ficomp xchg sti or rex.WR jle adc push fistpl cmp sbb jbe (bad) outsb test mov xchg mov cmp push pop sbb fdivrs repnz rcrl movabs jb jge pop rex.RXB push (bad) push mov jne iret or mov cmpl std add and repz je movabs scas jp hlt (bad) jo std cmp push cld clc lods loope cmp xchg cmp out cmc movabs fdivrp (bad) pushq outsl add cmp xchg pushq rex.R or rex.X cmp mov imul (bad) jnp mov push test sub clc jrcxz xor in rex rex.RX sbb (bad) (bad) cmpsl xor jg,pt cmp xchg je (bad) je lock movabs jg mov adc jle cmc jl (bad) cmp nop enterq outsl jo or (bad) mov and in jne icebp xchg and mov std or and (bad) je imul pop rex.WRX rex.WR sahf orl mov sbb rex.X rcrl jp jl xchg rex.WX (bad) ss insl lahf ljmp test repnz icebp jl rex.W or lret movsb mov sub mov push test add std enterq rex.R movabs and imul cmp jbe fsubrs jmpq add jle outsl jb sbbl out or hlt (bad) xchg (bad) icebp (bad) out jo xchg or (bad) adc out insb repz pop cmp push cmpsl out test in es stc rex.WB (bad) (bad) stos cli jle outsl (bad) test (bad) cld ds int3 jp lcall rex.RX (bad) rex.WRXB xchg (bad) (bad) push scas xchg add pushq mov or mov push fisubrl mov (bad) cmp imul mov and jle jl mov push cmp movabs sbb mov adc cli sbb add shr outsl js sbb or ds jp std adc psrad cmp je jp (bad) icebp je ffree (bad) mov mov pop fbstp jl mov callq sti xor jle mov (bad) push pop xor mov (bad) jmpq jrcxz lock sbb (bad) (bad) (bad) xor callq sarl pushq cs (bad) pushq callq adc push lods push (bad) rex.WRXB jb retq ja cmp (bad) push (bad) ficomp or xchg push adc and or imul mov xorl in rex.RXB js addl push int fwait xchg (bad) cmc lret push repnz pop scas sbb mov mov cmpsl incl sbbl and jrcxz (bad) in sub loopne (bad) rex.WRX xor gs iret decl stc rex.WB xchg outsb ficompl mov leaveq (bad) fnclex xchg (bad) scas (bad) sbb rcrb jge mov mov and jrcxz enterq xchg frstor jg pop data16 idivl and jo (bad) notl (bad) sbb jo jmpq mull and (bad) rex.WXB or sub leaveq fnstenv int outsb sbb cs addr32 xor fldl scas sub mov ficoml xchg movsl or xorl pushq (bad) jg or callq in rex.R outsl add rep leaveq or mov push xchg scas jmp cmp and stc movabs je out scas ss xor je adcl ss xchg (bad) (bad) (bad) rex.RXB cld movslq test adc sti (bad) enterq outsl stc (bad) cltd (bad) cmp cmp pop jle (bad) (bad) sbb hlt sbb pop scas push jns test pushq cwtl shll push rex.WRX stos data16 int3 mov mov rex.X cltd lahf pop scas cmp sbb test jmp mov rex.R cmp xor imull (bad) jmp xchg mov cmp rex.WX push xchg retq (bad) cmp or rex.W pop pushfq (bad) testb (bad) rorb lods js xchg rol xchg rex.WRB fnstenv (bad) push add ja cmpsl in pop ds add ds xchg (bad) jnp in jns cli rex.W add (bad) jnp clc out es pop mov rex.X (bad) pushfq xlat pop adc ja (bad) fldcw rex.WRXB xor jo mov nop enterq mov cltd push pushq (bad) mov movabs add jmp adc (bad) clc (bad) mov in sub in xchg rex.RXB (bad) pushq pushq rex scas (bad) lret and cmp mov mov es repnz fldl pop cmp xchg scas jp add test (bad) scas jp push (bad) movsl insl icebp and pushq adc lea stc js pushq and adc jb sub (bad) mov push test rex.RB repz fwait xor (bad) movsl jg cmp sbb or fwait sahf cwtl clc or pop pop lock jo jo cmc mov mov decb jge rolb cmp mov rex rex.WB rex.WB rex.X (bad) clc (bad) push jne vpmovsxbq pushq shrl xchg adc cltd pop push jo (bad) neg xchg cmp test sbb xchg (bad) cmp outsb (bad) jrcxz (bad) data16 clc movabs loopne test cli (bad) (bad) rex.WR mov repz fidivrl pop xor rex.WRX add repz xchg push scas rex.WR pop movabs frstor pushq push scas retq mov (bad) divl mov jg or rex.RB mov xor or decb callq std test rex.WX pushq jrcxz add retq jbe pop (bad) outsl jo jae rex.WRX scas jg (bad) jb (bad) test repnz add jns (bad) xchg xchg (bad) jno or xchg je jrcxz push test push js jle pushfq (bad) xchg vpunpckhqdq pushq mov mull es je jle jmp cmc push push clc add std or rex.RX idivl (bad) imul mov sahf jl adc xor push jae insb adc sbb int clc push test pop test rex.RB rex.WR lock ds jo push frstor cmp mov fdivrp mov push xorb mov xlat imul (bad) cld lods cmpsl rex.X (bad) fmulp rex.RX mov cmc mov (bad) (bad) gs (bad) repnz jo insl int clc add sbbl ss xor jge sahf nop adc (bad) and mov (bad) xor mov nop cmp push fistp mov cld xor rex.WRXB mov add loope roll icebp jo pop loope sbb rex.X (bad) add in in xor ja mov pop scas or (bad) (bad) ja sbb pop monitor jo mulb (bad) add enterq add stos (bad) (bad) add xor fs lods out xor add jo rcrl cs mov idiv movabs stc in jp sarb sub cli mov xor bnd lock sbb (bad) xor (bad) icebp mov push pushfq test xchg or outsl jl mov pop lahf nop fwait xchg mov out lahf js xchg jo rex.R mov enterq insb pop (bad) nop sbbl test jmp jl insb retq add (bad) adc adc fs sub xchg xlat sbb add (bad) jl enterq push or stc xchg (bad) iret jle in adc jb jo jbe out ficoml in test (bad) es pop jo cmp push (bad) (bad) (bad) xor and stos pushq (bad) enterq scas out mov cld out jnp push mov mov pop fs nop and shr jo int insb xor sarb lcall psubusb gs test rex.B repnz (bad) lock pop movabs rex.WRB mov (bad) andl xor jle push (bad) jmpq (bad) (bad) sti (bad) cmp xlat loop iret fldcw and cmp xorl pop test (bad) jnp cmp insb retq lock idivb out imul jne fldt rex.WXB and movsl and (bad) js push pop incl pop push pop rex (bad) (bad) jnp (bad) and rclb hlt jge adc sti pop outsl sbb xor in add in sbb mov (bad) push push xor cmc and nop repnz xchg test sbb movslq rex.W ds adc lret ss insl xchg adc (bad) or jmpq sbb xchg sysexit jne movslq test mov mov pop out cmp hlt pushq (bad) (bad) notl adc test and sbb rex.R data16 (bad) sbb lods adc in (bad) movsb add (bad) movsb and lahf pushfq (bad) pop (bad) pop and and xchg imul and lods sbb (bad) (bad) rex.WRX adc cmp insl xor xor jne mov cli notl scas iret mov jl mov ja push xor mov fsubl xchg rex.WRB (bad) hlt cmp and xchg test add out and movabs (bad) jmpq mov scas or pop cmc mov js movabs or scas (bad) js jne scas jae (bad) add icebp add jge (bad) (bad) adc or adc test ja,pn scas adc ss cmp sub (bad) mov movabs scas and (bad) cmp imul xor cmp rex.WRX imul pop gs roll js std rex jmpq std sub xchg (bad) movsl cmp add out cld hlt xor test jns std clc stos jbe (bad) std leaveq cmp retq push (bad) rcr nop rex.B popfq xchg out pop adc sahf cld cmpb ror (bad) (bad) sbb loope push movsl mov nop es xchg rex.WB sahf jle ficomp mov cmpsl xchg rex.R test pop movslq sub push repnz push cmpsl shlb xor xchg push add lods xor jo cmpsb mov mov imul pop xchg mov gs (bad) test imul xor (bad) or pushq in mov rex.X cltd out in es pop cmc sub cmc fistpll pushq mov jo repz (bad) mov (bad) jg (bad) pop (bad) popfq xchg pop or pop sub jnp push mov roll or mov add js jmpq push mov (bad) jp xlat cld sbb movabs scas cltd movsl data16 lock jmpq push imul fbld leaveq push mov mov test (bad) pop pop sub lock or xor lahf and addr32 (bad) pushq rorb sahf (bad) enterq ljmp sbb sbb jnp je mov mov jl movabs cltd (bad) cld mov mov (bad) add sbbb bswap fwait pushq (bad) jne outsl jrcxz add in or xchg loope (bad) (bad) or repz clc (bad) (bad) xchg mov ficomp mul rolb cld gs test (bad) mov sub cmp add (bad) lock rex.X (bad) (bad) in mov fisub int3 pop in jmpq sahf push repnz fdivrs jne in jg (bad) jg je rex.WRXB outsb movslq insb std test std movabs (bad) mov rclb out jae sti jg gs jrcxz bswap add rex.RB fwait js (bad) cltd iret gs insl out and out cmp push test xor (bad) (bad) jle fbstp fwait push stos repnz sub insl sbb rorb pop scas adc xor xorl test out ss cmpl (bad) fdivrs imul cli sub cld pop or (bad) (bad) addr32 jp pushq rex.RX (bad) incb sbb retq cwtl xor adc jno rolb cli fs or rex decl fdivs (bad) xor sub mov stos pop rex.W (bad) (bad) and pop mov rex.WRB in push fdivrs cmp sub sub in nop int3 jge cli xchg xchg mov (bad) (bad) adc rex.WRXB sub push cmp lea cmpsb (bad) fsubl add mov (bad) pop rcrb cmp rex.WX sub pop lret jg (bad) mov add repnz shl (bad) (bad) enterq scas and (bad) jae jo stos icebp (bad) retq cltd jl mov in cmp xor (bad) stos out enterq out (bad) (bad) rex add outsb sub shrl cmp outsb movabs mov fdivs nop rorb callq jrcxz push retq pop mov rol fidivrl xchg xor push shlb test insl je (bad) cmp push (bad) addr32 repz in fiaddl (bad) or pop xor movsb xlat in xor out (bad) mov loopne sub mov adc rex add (bad) sub and (bad) pop add (bad) pushq jbe pushq jp jnp lods movslq sbb jo xchg cmp in loopne add fsubs push rex.WXB rex loope pop rex.RXB out fcmovu pop jl cmp jmp cmp int3 cmp or out outsb repnz sahf pushq mov pop (bad) cmc and jmp adc pushq jae enterq mov xchg sbbb mov jae rex jp xchg cmpsl sahf outsl sahf jl scas cld stos cs cmp add jb out out insb xchg add mov adc gs jo outsb test jo nop jo jb movabs jno sarb xchg sti or xor xchg mov xor jb add (bad) jmp xchg fsubrl xchg jbe xchg (bad) adc xor (bad) push data16 (bad) mov add (bad) lods (bad) cwtl rex.WB jno cmpsb add (bad) mov scas ljmp std rex.R stos pop jb (bad) mov rex pushq clc insb clc js xchg jbe incb scas out (bad) pop jns mov (bad) cmc rex.WR xchg cmp movabs (bad) insb adc sub std sub push std retq retq cmc sub xchg je rex.X fs cmpl fisubr mov pop or cmp jg in movb pop xchg cs (bad) cmp (bad) jmp jae cmc subl mov or (bad) or icebp jg in cld mov data16 mov ja rex cmpsl data16 test out or fmulp xchg sub or insb xchg jnp js xor jne pop jle or pop or repnz lods fcoms (bad) adc push or sbb pop nop mov ljmp in lods fisttpl (bad) int3 or rex.WRXB sub xchg cmp sub mov push adc jb jae sub out rcrl imul ja stc xor gs pop xchg lret jnp lock pop fdivl lods stc cmp pop pop roll xor (bad) cmp hlt cmp cmp js xchg jns je rex.RXB pop xchg cltd jbe sti fs cmp jl mov add (bad) imul iret xor push pop and xor jae addb jae cmc cli jmp and xor iretw xchg xchg cmp test mov lods out xchg sbb mov sub pop cmp (bad) cmp jb cmp shrb popfq (bad) cmp in gs test leaveq xor addl (bad) gs adc cli mov push (bad) fistp andl fadds fisttpll cs (bad) mov cmpsb lods rex.WRB (bad) in fmulp rex.WRXB je pop js rex.W imul je cld outsl pop (bad) pop faddl fistl out rex.WRXB je (bad) fdivs loopne callq and (bad) icebp std paddd cwtl jbe add scas or mov nop retq xchg cmc xchg movsb rorb cmp sub movabs (bad) xorl jbe es jle (bad) rex.WB movsb mov lea pop je ja (bad) xchg js jb rex sub add sub mov xlat cld (bad) jp sahf mov mov add rex.WRXB add xchg jmpq xlat sarb lock xor sahf in fwait insb (bad) sti jo (bad) loopne cld (bad) jo push (bad) mov data16 sub rex.WR adc sti insb jo in sbb (bad) rex.WRB mov std cmp push repnz sbb in push (bad) xchg jno (bad) jno jle pop scas leaveq cmp out int3 fcoml jl and or rex.WRXB ds mov (bad) pushq clc (bad) lock retq cmp in push and notb (bad) (bad) pop fs (bad) fs add rex.RXB ss out push scas and outsb (bad) lret js or (bad) xor sub cmp mov scas stos retq xchg or jg (bad) jno mov adc mov pop add mov or je retq cmpsl mov (bad) shlb out (bad) push jl sbb sahf mov push pushfq cltd jp adc (bad) movabs sbb jae jo movabs orl outsl callq mov jrcxz adc (bad) (bad) (bad) pushfq sub add addl (bad) rclb movslq cmpsl (bad) sbb push callq rex.WX enterq xchg insl addr32 sbb (bad) adc insb xor push lea mov in mov retq test int xchg (bad) lods fnstcw mov cmpsl rex.XB out stos pushq pop or jnp xchg callq cmp xor hlt rex.WRB and cld test js pop xor xor and loopne lock (bad) callq in mov imul rex.B fwait push loopne xchg adc add or repnz rex.WX (bad) cmp pushq pop in (bad) adc xor xor (bad) (bad) and (bad) leaveq mov pop (bad) push imul xor sbb xor add sbb cld rex.WRX je out xor (bad) (bad) (bad) ja cmp clc pop jg sub push (bad) js fldl jae cmpsl sub cld push rex.RX jp (bad) test (bad) imul or (bad) retq mov cmc out mov add mov jae push shrb pushq bnd jl xor ds (bad) push sahf ja jge (bad) sub lahf mov insl int3 test mov xchg xchg pushq std and or xchg mov jae fdivrs rclb test add nop callq rex rex.WRB gs repnz jo sub outsl fdivrl adc and (bad) xor lods adc insl mov fiaddl notl jp and stos sub jno test in add jb add sbb rex.WX test mov addr32 rcll mov es adc (bad) jo and movabs xor jl movabs fild rex.WR notl movsb pop ja cmc or adc adc icebp pop (bad) xchg (bad) push sahf rex jle jp sbb std ds adc repz add pushq or gs setnp mov lock out sbb push pop (bad) (bad) (bad) pop pushq pop push mov xor cld loopne in gs out push (bad) (bad) xlat lods mov pushfq add movsl mov sub lahf movslq jl movsb (bad) cmpsb sub mov jns cmp (bad) rex.WR (bad) mov or mov cmp xchg adc test leaveq rex.RXB cli imul outsb imul sbb xor fs rex.WRXB js lahf xchg insl jmp or jg xchg loopne xor sbb repz ss jb fs outsl (bad) pop callq fisubl jrcxz pop sub pushfq sbb ficompl shlb sahf sbb rolb shr and push or xchg sbb loopne movsl cmp pop loopne shr or push jp callq test repz outsl lods jmp mov jne rex.RX (bad) fstps push pop callq jns rex.WXB cmpsb and xchg (bad) fadd xchg pop push (bad) test rex (bad) (bad) retq movabs jnp xchg cmp js shrl repnz rex.WRX mov js (bad) push clc cld mov xor jle js and sub mov and cli rex.WRX rex.WXB (bad) push xchg mov sub mov pop pop ror push outsl out add or push jo orl rclb ss fimul sub sub in mov ja sahf stos fimul push sub lea pop (bad) pop cmp ja rclb (bad) scas lock push pushq mov push mov insb or xchg fidiv mov push idiv out clc push sar pop insl push stos mov (bad) push jmpq (bad) mov js mov or adc movsl mov ds mov clc (bad) int test ss insb (bad) iret fcmovbe insb rex.WRXB (bad) shrb mov int3 rex.R push in loope lods outsb sbb int3 cmp push movsb int fwait mov movabs pushfq sub enterq movsl pop test repnz pop movabs (bad) (bad) pop mov clc pop (bad) rex.B cs out mov or sbb cli ja jnp in js int3 (bad) jge rex.WB fldl jle (bad) mov negl mov ds rex.WRX cmc mov imul in scas push loop data16 imul (bad) xchg outsb movsl movabs jo insl insb pushq xor movl push nop xchg (bad) or push (bad) push fisttp pop (bad) cmpsb mov pop mov sbb mov mov jge cwtl sbb lret clc loope jl rorl xchg ja (bad) loopne xchg movsb (bad) cmpsl sub xor mov mul cmp loop (bad) (bad) sub lods jbe rex.WRX mov sbb fidivrl adc sub je fidivr (bad) or imul sbb sbb jbe enterq sub scas (bad) pop not jne in (bad) outsb rex.WRX cli fs lea in out (bad) popfq cmp fbstp mov (bad) (bad) clc out fwait push pop jrcxz rcr fldt pop add or jmp loopne pop movsb xchg mov cmp lods cmpsl push sahf ds sbb rex.B and std ds rex.RX rex.WRXB mov mov in seta imul mov lret or in orps jmp clc mov ja fisttp std (bad) repz (bad) add jp (bad) or pushq pop pushfq std cld in retq xchg xlat mov test lods (bad) sub imul sti sbb sti push sub sub cmc lret (bad) movabs gs cmp outsb jle xchg js shrb out (bad) (bad) imul (bad) rex.WXB fisubl adc jne (bad) movsl jmpq adc cmp in in rorl hlt jrcxz (bad) fdivrp lock int3 decl jns sbb adc jns out cmp pop or cld jl rex cmp cld imul and out mov lock fbld xchg out in out outsb cwtl mov out cwtl xchg sbb push cmp js pop callq xchg std insb jl jp repnz xorl lods adc rex.RX fdivr imul (bad) xchg out (bad) (bad) (bad) cmpsb repnz out (bad) xor movsl cmp sbb mov sbb and push js std out rclb cmp jo jne idiv adc fnstenv ds pop and pushfq rex.RXB outsl sbb jp push jbe add pop xchg cmp jo outsb sub int3 push loop push fisubr test cmp movb outsb callq xchg xchg mov hlt (bad) mov (bad) scas (bad) fwait push jo rex.RX lret nop test pop fiaddl mov stos es sbb (bad) jl rex.RX jns cmp fistp sbb cmp rex.WX mov or subb jbe in xchg pushq jne cmpsl push clc lods mov negb (bad) sub (bad) xchg jbe sahf adc pop or jmpq pop jmpq sbb push (bad) jo jb mov stos jo pop lods ja movslq pop cs rex.WX out xor popfq cli sbb add neg in or loop mov sub fidivrl jmp or ss sbb jnp cmp in por sub rex.W loopne xlat es sbb adc out imul callq retq adc lret js jb mov xor fs xlat es rorl icebp frstor push fildll sti rex.WRB icebp push scas (bad) rex.WRX cmp sti (bad) (bad) rex.WR (bad) jns mov loopne sarb rex.RXB js or sbb js pop retq xchg mov xchg xchg xchg mov adc imul sahf lret jmp jp jne lret cmp std jmp insl rex.RX (bad) pop jo jl pop xchg ja out sbb fldcw (bad) xor mov jmpq xchg jrcxz movsb movabs and jne xchg cmp (bad) add pop mov stc js mov scas and or retq leaveq leaveq push pushq mov test cmp push jg pop ja mov mov jmp rex.WRXB in scas push xor rex.WXB imul cmp sub pop sub pop pop (bad) outsl pushq loopne gs cli js pop (bad) pop rex.WRB rex.WXB rex.WX jmpq cli push cmp adc mov fimul and stos sub pop callq add (bad) fwait pop cmp mov push in and rex.WR (bad) fildll scas sti rcrl hlt (bad) cmc rex.WXB jmpq (bad) mov xchg or cmp scas fldt jmpq xchg test jb (bad) faddl sub scas (bad) push sbb je mov addl cmp or test test sbb cmp gs fwait test mov je cmc mov leaveq jle,pt xchg insb cltd (bad) rex.WRX pop xor lret (bad) (bad) data16 movslq lahf test movabs jge pop sub or sti stc and (bad) lahf pop sbb and insb push (bad) (bad) fbstp popfq jl xchg int3 fldt insb jo enterq and cmp je xchg rex.WX test (bad) cmpsl pop pushq callq imul lods mov ljmp sbb cmc (bad) jge cld xor out mul xor repnz rex.WRX (bad) xchg rex.WB jne add pop rex.WRX shrb js gs cmp (bad) pop outsb mov int push (bad) callq lret in outsb movabs fistp decb adc loope fldt fsubrs (bad) outsb jo xor lods rex (bad) movabs jns sarl rex.WRX cmp xchg rex.W movsb ds (bad) test push (bad) jmp xchg jb sbb leaveq sub jne sub rex.X add xor (bad) pop pop lock (bad) and and retq cmc or in push add imul ja ja (bad) nop xchg (bad) rex.R rex.RB push (bad) (bad) fild sbb cli rex.XB xor push cmp mov out mov rex.RB rcrb cmc fisubr (bad) outsl sahf pop (bad) scas clc pop outsl (bad) (bad) mov and xor leaveq rex.WB mov pop xchg mov jns jo (bad) fiaddl lods pop (bad) adc rcll xchg pop pop out scas (bad) (bad) mov (bad) adc pop push mov mov or jg cmc idivb ds jl fs sbb xchg jo xchg rex.WRX (bad) pop adc (bad) lods cmc lock fs mov rex.WRB repnz jo jg or cmp in jge je xor (bad) (bad) (bad) push std add rex.WR and (bad) xchg mov test lret or movabs icebp sbb outsl xchg scas sbb (bad) fwait hlt pop js cmpsb (bad) test pop fnop mov pop fsin (bad) shrb (bad) mov (bad) cmpsl and (bad) repz jno xchg (bad) lods rex.WRXB out mov data16 sbb rex.WRX icebp jbe popfq add (bad) push scas xor stos cmp mov fwait (bad) pop sti or jp xor (bad) rex outsl negl sti xchg pop jo cmp add xor ja (bad) test jp (bad) cld jbe stos jl pop movslq lock sub add (bad) outsl sbb (bad) pop rex.R outsb out (bad) pushq push push jl cmc (bad) cmp xor (bad) fsin (bad) (bad) shr (bad) jne (bad) std (bad) sahf (bad) jrcxz (bad) mov imul scas je out ja,pt mov sub idivb rex jo stc add in cmp jo jge adc sar rex.B sub callq mov mov (bad) divl jo (bad) jne fcomip test sbb jrcxz (bad) stos xor in rorl push pop (bad) jnp (bad) mov fwait or (bad) (bad) push add (bad) (bad) sbb cmc mov insb mov (bad) (bad) cmp hlt fidivr fisttp cmp scas and (bad) mov push ja rex.WB cmp outsb cmp ds pop retq (bad) pushq xchg insl rex.WR incb push jae data16 (bad) mov sbb jp mov fwait jo push pushq test fmull stc and addb xor jp and cwtl mov loopne push sti (bad) pop jbe (bad) xchg (bad) jbe rex.WXB rex pop cwtl mov (bad) xlat (bad) sbb (bad) sti scas jo sub sti (bad) (bad) cmc divl rex ja push outsl out sti ja or (bad) sub lods (bad) cld scas sbb mov adc retq mov mov jno sbb sahf rex.WXB loope outsb insb pop jrcxz pop not mov jge outsl pop (bad) cmc int sub fistpll pop or adc insb xchg (bad) sahf fdivl (bad) mov mov jl (bad) fmull jo roll jne or rex.XB and (bad) rex.XB cli xchg or lahf stos push int pop xor xor fistpll jnp or xchg (bad) rcll mov scas in vdivss jp in mov out fstl retq (bad) stos lock out loopne in sarl jg ds add test (bad) callq test iret sub (bad) jmpq cld mov rex push outsl sbb fldcw (bad) lret pop sub xor idivb lock jle fstps mov jnp scas lret sti fbld xor (bad) pushfq mov xor rex mov push fbstp (bad) jo xchg (bad) cmc pushq xor sarb sbb rex fisubrl or jmpq mov (bad) rex.WRXB sahf (bad) sbb sub (bad) sahf cli not leaveq rex and mov xchg fistp mov fsubrl out pop (bad) mov xchg (bad) push je push insl xor jne pop in outsb rex.WRX (bad) fcompl insb (bad) outsb (bad) fs loopne add mov movsl (bad) sti lahf mov pop jne xor adc sti pop xchg test (bad) outsb (bad) nop or (bad) (bad) notb mov rex lahf xchg js push xchg outsl sti mov cmp (bad) mov push outsl jl fidivrl push jnp jge fucomi pop scas fcomp movslq pop xchg fsubp and jle fcmovb cmpsl sahf xlat fstps lahf adc pop pop pop repz lahf pop push scas jno cmpsl int3 cmp pop insl out (bad) ja notl fcomip jl leaveq xor (bad) push rex.RX mov fdivrs pop mov cmp pop (bad) fs (bad) idivb mov pop jne (bad) (bad) (bad) pop mov mov (bad) (bad) (bad) clc or (bad) movabs insb mov fbld pop incl mov (bad) or (bad) sahf xchg (bad) (bad) lods lahf xchg shlb (bad) fidivr cli adc adc (bad) test or pop jmp out cmpsb movsb out (bad) push jb sub outsb je rex.WX out add mov add cs imul imul (bad) xchg insl mov rex.WRB clc rex pop mov mov sub iret callq sbb mov (bad) mov and outsl push jo xor (bad) ljmp fs cwtl (bad) jb mov iret fisttp vmovupd scas push xchg pushq xor fstp fs fidivr (bad) mov adc decl cld test cmpsb pushq rex.RB cmc out sub (bad) ja (bad) pushq scas pop out movb rex.RXB rex (bad) lods insb cs (bad) mov lahf cmp scas adc sub fdivrp pop iret jbe jns rex.RX lret lret rex.WR (bad) mul sbb orb callq jbe fcomps mov retq (bad) hlt iret jo repz (bad) or pop clc or sub insl (bad) xchg rex lock and lret push jg (bad) rex mov fsqrt mov mov rex.RX mov fs callq pushq clc add mov movslq rex.RB or mov data16 xchg jge scas xchg (bad) cmp add fidivrl push leaveq cmp pop and jp or push mov jno push push xor jnp rex rex.B div sub dec scas (bad) adc movsl jo adc jg (bad) mov repz mov outsb leaveq loop sahf (bad) cmpsb jno pop pop rex.WRX ss cs ds sbb push pop (bad) retq mov mov faddl rex.W ss (bad) addr32 lahf jp cmp (bad) xor mov mov lret std clc jne pop rex.W test jmpq cmp outsl (bad) (bad) and adc (bad) insl pop lret jnp (bad) loop cld and sahf mov mov xlat xlat test cmp loopne jne pushq add mov (bad) sub fsts insb fmull jne jle jg mov bswap movzbw pop retq movzbw mov bswap mov bswap mov not bswap movsbw not lea jmpq clc jmpq callq jne adc jmpq je bswap movzbw xchg lea movzbl jmpq je stc add cmp clc cmp jmpq pop jmpq popfq cmpsb ds sbb insb sbb xchg sbb mov shll mov js (bad) mov pop xchg mov (bad) mov add test adc (bad) lods rex.X jb (bad) movabs movslq push out jle (bad) xor (bad) in roll pop lock xor in shll push (bad) adc (bad) jbe (bad) (bad) sti add (bad) (bad) (bad) (bad) jmpq insb (bad) cmp (bad) or (bad) mov (bad) (bad) jmpq push rex.X mov sub (bad) data16 es mov sbb or fidivr mov pushq mov rex.WR rex.X enterq cltd mov not lea mov setnp bswap pop mov mov lea not movzbw movsbw mov lea movsbq jmpq pushq out jns rex enterq xchg imul imul or rex leaveq shl jle inc cmp insb xchg loope shll jge pushfq out std jo jae cmp or jge jns sbbb pop sub mov shll (bad) (bad) (bad) repz and sub ja jns mov fldl hlt insb out sub in imul sbb pop cltd rex mov cmpsl add sar xlat sub lods pop je rex mov adc jbe adc (bad) in (bad) jnp add sbb (bad) gs sti jle divl mov fcomp push push (bad) decl jmp outsl mov and sti (bad) fsubs mov push sti jb movabs jo repz (bad) lahf (bad) cmc push mov push jae fisubr mov push scas jno rex.WR (bad) cmp std addps add adc (bad) push and repnz pop mov jne sbb cmp outsl sbb pop and jb xchg rex.RX rex.W mov jo xchg mov xlat cltd cmp notl jle imul jg sub sbb and rex.R (bad) scas outsb notl js movsl test mov (bad) ss pushq sahf test rex.R ds repz cmpsl sti pop mov (bad) jp cld mov rex.B outsl jg scas rex.WR cmpsb rex.X or clc jg or rex.RX nop pop (bad) adc jmpq in xchg mov (bad) pop (bad) imul decl ja rex.RX outsl pop or out loope pop (bad) outsl sbb push cmp clc pushq cmp ljmp scas incl mov (bad) xor jo and mov rex.WB (bad) cmp or leaveq outsl (bad) js out callq rcrl pop punpckhbw insl pop rex rex.R jne divl jp (bad) scas sub add rex.WRB rex rex.RXB rex.R orb cld in jle (bad) movl xor (bad) jge out rcll adcl loopne or movabs (bad) pop scas movabs pop (bad) or fiadd sbb (bad) jl repz (bad) stc cmp lods xchg (bad) cmc (bad) or (bad) or pushq mov or pushq sub adc push loop (bad) movabs pop xchg loope jle repnz fs sub out mov js imul sti xchg (bad) jns rex adc add xchg fs cmp jl and cmp or sub imul xchg scas imull insl mov and (bad) cs pop pushq js std (bad) or (bad) fldcw or outsb fdivr add sbb sbb xor retq mov pop rex.X rex.WR lods pop outsl ja sbb and cmp ja cmp pop add sbb jle rex.WRXB hlt rex.RXB addr32 jl std out out out jle mov testl push xchg lock stc mov mov rex.WR (bad) sbb shll jl outsl xchg jg xchg xchg rex.WR push gs add (bad) sub retq jnp hlt rex jle fcomps es or leaveq lock movabs mov out xorb movslq (bad) test (bad) cmc sub lock jp xor outsl sbb repz adc sti in in (bad) cli pop (bad) retq cmp cmp pop (bad) jmpq pushq (bad) rex.WRB ds clc jne adc pop (bad) rex scas or pop repz (bad) or imulb std fwait retq int or cmp out push rex.WR outsl (bad) jo cmpsl sub rex.RX rex.WRX jl stos es scas fidivr scas xor adc sbb clc (bad) fdivrs cmp jo jp xchg pushq sbb mov jge cld lock test mov outsb loope scas rex.WB xchg movabs mov mov (bad) (bad) jmp jnp add rex.X mov decl sahf cltd xor cmp in rex.RXB adc scas lods cwtl pushq sub retq (bad) rex.WRX (bad) push lcall sub mov sarl gs pop fwait push (bad) sub in jmp (bad) (bad) ficomp (bad) sub push or or std outsl fsubr out jp (bad) (bad) iret sub sbb mov pop pop ds scas sub movsb rex.X repnz hlt out xor in mov ljmp or (bad) jne in xchg pop imul outsb data16 mov insb mov scas sub (bad) loop jmpq lock pushq fisubrl xchg jno loop pop and mov sbb mov sbb repnz ja xor (bad) sbb sub adc (bad) rex.RX retq insl icebp xchg rex.WRX push fimull (bad) rex.WR pop (bad) push rol push rex.RX in jo mov xchg mov (bad) gs and out in cld fwait mov std (bad) in add jo cmp (bad) jnp leaveq push std lret xor jno js (bad) (bad) imul cmp jo sub rex.W scas add popfq jg retq jo jno repnz push sbb pop jl test scas rclb jb test sti rex.R js pushq leaveq sti (bad) mov (bad) (bad) rex.W (bad) pop rex cmp and jrcxz cmp push in (bad) pushq fcmovnbe adc jbe rex shrl push popfq mov xchg mov (bad) rex.W add rex.WX ds scas (bad) jle movabs cmp xchg rorb jo (bad) mov pop jp push mov repnz fs adc je xor mov sti incl scas icebp pop cmp lods xor adc (bad) cmp (bad) jp push lods shlb (bad) clc cmp push jle (bad) scas lods stos popfq (bad) xor (bad) lods std xchg enterq repz orb (bad) rex.RXB ja out pushfq movsb pop movabs sbb rex.WRX jl rex.WRB ljmp imul pop stc cmovo mull lods cmp cltd jg and (bad) std cmc sbb xor fcmovu (bad) sti cltd rex rex.RX cmc jg (bad) movslq jno or loop lods mov mov outsl rex.WRXB adc add (bad) mov lahf scas push ja sbb (bad) insl jg pop iret pxor pop fcoms je je (bad) rex.WRX jns leaveq ja cmp jp (bad) jne out mov jmp (bad) add push adc xor (bad) mov push (bad) (bad) adc cmp jp sub mov xlat test out lods (bad) cwtl jnp in push cmc and insb jg out cmpsb mov (bad) imulb (bad) (bad) sub xor sbb rex.WR data16 adc xlat or jl push jbe (bad) rex.R scas and rex.R in push stc in lods cli (bad) js rex.X add or cmp iret (bad) or rex.X std or fisttpll sbb (bad) cmc sub sub ss insb (bad) lods cmp push push xor stc add mov loop (bad) add or (bad) jbe jns jo cmpsb insl adcl push push imul jp jo sub fistpll jle push sub cmpsb xchg pushq mov jbe in test ds cltd insb adc rex.WRXB repnz push (bad) jbe adc in movabs outsb (bad) push fbstp (bad) cmp fs (bad) es out xchg (bad) imul rex.WXB out rex.WR imul loop sbb mov rex.RXB fidiv xor fimull insb xchg outsb (bad) test pop mov cwtl xor or pand rex.WRB rex.W idivb movslq jbe jp cmp insb cmp jle and repz sub mov jno loope (bad) fisttpll lods add jmpq jns lcall loop jo jns lahf stc (bad) push (bad) lods xchg test (bad) jo pop std rcrl xor (bad) leaveq cmc rex fmull pop xchg rex.WRX sbb pop repz adc movabs je lods ja rclb (bad) cmc (bad) leaveq stc xchg sub lret imul insb (bad) mov pop pop (bad) (bad) (bad) rex.RX xor add test fidiv or sub push cli jp push loop (bad) cs (bad) nop fimull lret fisttp fdivp insb insl (bad) add clc cmpsb leaveq (bad) sbb jo xor (bad) (bad) rex.B (bad) (bad) repz pop lods rex.RB jrcxz,pn fnsave movabs or sub xchg fidivrl rex.WXB sahf add (bad) mov (bad) jne loope outsb rcrl callq (bad) xor fisttpl lock (bad) (bad) imul hlt je shld or rex.WRXB es (bad) jrcxz (bad) push or imul (bad) js cmc jo lods and movabs sahf out add ficom rex.WR pop pop and pop rex.WRX cld and cmc (bad) rex.XB in lods addr32 stc and icebp (bad) xor fxch rex.RXB fs xlat lods (bad) mov retq pop out outsb pushq movabs cmp sub xor icebp sarl vpunpckldq jl cmp repz adc (bad) xor icebp or cmp fild fmull je out jp xchg push adc (bad) pop xchg sbb ds or jg addr32 (bad) rex.R sahf rcll imul (bad) and xchg or xor outsb mov loopne fdivp mov (bad) cmp and push outsb pop (bad) mov or jae imul and and mov add jno (bad) (bad) sbb movslq xchg jge ja out std rex.WRXB jl cmp out lods ja (bad) (bad) (bad) jge mov out jle mov fistpll retq mov leaveq rex.RB xchg push movabs fisubrl mov int3 pop in jp sahf push mov fldl pop (bad) or sbb push shlb sub mov pop es pushq rex.WRX fs rcll mov movslq jbe (bad) xlat rex.R sbb je jge jbe and jo adc and lods sub xchg clc mov fsubrs mov add scas out repz sub sbb stos fsts test xchg movsl mov mov add (bad) clc jg (bad) jg xchg jge in sahf cwtl (bad) ja mov (bad) rex.WRX rex.RX sub (bad) pushq sbb sub mov adc mul fwait (bad) stos cmp rex.WRXB fmuls mov jo push repnz jp fldcw out rorl cld imul jne imul mov cs rex.WRXB mov rorl jne sub je loope repnz mov js add jl nop clc rex.X push mov lcall subl test sub (bad) out pushfq jg,pn shrb and pop (bad) cmp cmp sub (bad) jle or pop xor cmp (bad) mov idivb push pop (bad) pop (bad) jns (bad) out movsb mov pushq in ljmp xor pushq (bad) jo rex.R imull jmpq jl clc leaveq cwtl pop mov mov jp pop in in outsb cli xchg lret lods or push in xchg (bad) in fs xor cmpsb adc out rex.RB cs rex.RXB rex.WR xor loopne jne jo ja movsb jmp sbb mov in outsb gs insl pushfq mov pop sub and adc repz je jl mul callq rex.WXB sti rex.WX adc std sbb mov (bad) cltd or push lock iret iret ja pop adc lods mov rex jns add mov (bad) outsb and sarb rex.WRXB sub test rex.RX (bad) rex.W rex.RX cld xchg xchg idivb jg rex.WRB (bad) jns add xor (bad) (bad) leaveq lods ss insb pop jp mov cld pop sbb cld push xchg (bad) outsb stos xor (bad) mov (bad) imul rex.RX fisubrl cmp shlb lock rex xor rex.RXB hlt jbe adc in and xchg sub out (bad) fs rex.WRX sahf je mov in rex.WRXB xchg mov mov lods insb (bad) cld push and (bad) mov or (bad) lods retq mov xchg movslq xchg (bad) pop in insl rex (bad) out jbe (bad) (bad) incb rex.RX out rex.R adc jbe cmp js rex.WR sbb hlt imul repz lahf jl (bad) out sahf lea cwtl out shld mov out jg sub cs jge repnz (bad) cli pop adc (bad) xchg mov add mov jp fsubrl nop lret sarl mov jo (bad) jl stos mov pop iret fst addr32 push scas cmp sub jge int add retq stc jns xchg xor mov mov adc sbb in imul jb pop sub jrcxz jp out stos cmpb pushq lahf xor (bad) rex sub mov (bad) ja mov (bad) xor fdivrs sbb push and pop xor mov test cmpsl rex loopne add pushq rorl xor icebp xor jg in or (bad) push ds (bad) rex.WX rex.WRB pushq pop push test jg (bad) jmpq (bad) xchg cmp es fmuls (bad) callq lods mov hlt rex.WRXB ss (bad) js rolb (bad) mov sub (bad) xor cmpsl and loopne or mov xchg decl ja sahf mov (bad) jbe pushq mov pop out jp clc xchg lock sbb pop (bad) cs cmpsb mov (bad) sub loop fcomps cmpl (bad) cmc pushq xchg fwait cs jg rex.WX rex.RX fsubrs ja sbb movabs jb (bad) imul and stos fnstcw lret jnp (bad) (bad) mov mov or nop mov ficompl mov negb jne rex.W mov cmp jae movabs mov pop (bad) rex.WXB nop shl gs cmp fldenv idivb insl add adc rex.RX ja (bad) lret or pop and jnp (bad) rex sbb sbb mov (bad) stos pop jl push fisubr outsb (bad) mov push cld (bad) pop mov sbb (bad) addr32 sub hlt rcl mov pop movslq cmp xchg testl mull rex.WRX repnz test or xchg in rex.WXB and jge cld imul push (bad) push scas fildll (bad) and (bad) xor callq movsb rex.WR ds jae pop rex.RB jb sahf jbe ja xor scas and jo sarb jo rex.X mov outsb and jp rex.WRXB cs out mov (bad) pop xor in pop mov (bad) ds out fs fmull xchg or xor leaveq data16 (bad) rclb ljmp rex.WR std cltd in mov push outsb mov jbe lock pop sub pop scas mov (bad) lods je repz xchg pop jg (bad) mov lock mov cmp xor (bad) cmc add jb enterq jo jnp mov ss pop rcr repnz cltd rex.RB rex.RX out jbe xor callq adcl xchg adc (bad) or punpcklbw lret jle bndstx negl retq lods and rex.WRXB mov sbb mov fmull (bad) cmp rex.WX push push jne jbe rex.X js in rex.X mov lock (bad) insl mov cmc pop jnp outsl adc mov (bad) jns adc push lahf mov cmp mov js retq cmp xor (bad) cli jnp mov rex rex cmp movabs imul (bad) (bad) fildl nop hlt (bad) cld fimul mov mov sti xchg jb (bad) jge (bad) (bad) hlt je movsl pop rex.RXB rex rex.W lret iret (bad) outsl pop int3 subl pop (bad) ja cmp fsubl out fidivl (bad) testb (bad) rex.RX (bad) and movsb mov xchg rex.WXB pop or rex.WRXB xchg out outsb jg rex.XB push push or sbb rex.WXB and (bad) stos jb rex.WB ss pushfq pushfq (bad) int loop sbb cmp cwtl (bad) mov ljmp pop loop movabs mov test mov push rex.WRXB fild add mov sahf mov rex.WR lock (bad) rex.W in add pushq mov ds jnp (bad) gs cmp imul jnp and push out jno out sbb pushq movabs ss insl ja adc jle loopne fdivrs (bad) scas test cmp subb jmpq pop push jge (bad) ja rex cld lahf push imul fcmove (bad) (bad) jbe mov (bad) repz cwtl pop mov callq hlt js cli repnz push pushq sbb adc fwait sti add test int3 (bad) (bad) and (bad) hlt mov xchg (bad) mov add push mov insb or addr32 (bad) ja ss subb pop cmp (bad) (bad) pushq (bad) push sbb push cmc insb (bad) sbb cmp data16 (bad) cli imul fcompl je (bad) xchg sub cmp data16 add rex.WRX and pushq sbb sub jg rex.WRX (bad) loop out xchg xchg xor mov jp jrcxz jl cli mov loop and (bad) rex.WXB rex.RX (bad) xchg xor xor sar (bad) (bad) lods fcmovnbe (bad) ja (bad) jbe cmp mov out pop jae rex.X cld (bad) xchg xor (bad) ja mov rex.W (bad) cmpsb cmp mov mov sbb in negb xchg sbb or push rex.WRX pop cwtl or js push imul sub (bad) (bad) jrcxz push nop fisubrl (bad) pop jno lods mov cmp xor push hlt cmp jno (bad) sbb pushq (bad) pushq cmp jrcxz (bad) cltd fisubrl xchg int pop rex.RB pushq cmp adc add pop adc lahf in jns xor int3 hlt cmp pop shr stos xor out cld iret pushq sbb cmp sbb adc mov out fldcw push cld movabs data16 mov sti rex fimull fsubrl jg mov loop stos retq push jae (bad) shrb jbe mov sub xchg enterq cmp fld mov push jae add pop decl js rex.XB movl (bad) out mov adc add jmpq (bad) in mov sbb xchg add fimul enterq and pop sbb (bad) xor (bad) xchg pop ds outsl sub out lret scas fstpt mov hlt iret cmp rex.WX rex nop mov xor xchg mov mov out and cwtl xor (bad) rex.WB rex.WRXB and adc (bad) (bad) adc movabs jl rex.WRB cs out pushq insl cli testl pop cmp cwtl (bad) cmp jl mov cmp sub mov imul cmpsb cld (bad) and jl add sub out cmpsl (bad) (bad) (bad) jmp rex.R test mov lahf push rex.WRX incl std int (bad) jmp out pushfq xchg gs xchg imul sbb lea (bad) fist in pop mov in out retq rex.RXB mov (bad) and sub (bad) movabs mov pop xchg rex xchg jno cmp retq lret leaveq adc add cmp jae int3 (bad) mov loopne rex.RX rex lods (bad) (bad) (bad) cmp out stc mov cmp movabs cmpsb out (bad) jne movsb xor (bad) movabs jrcxz xor xchg jmp pop add mov ss sub out jno xchg adc jbe jo rex.XB (bad) (bad) cs (bad) xchg xchg fildl sbb pop pushq outsb pop xchg (bad) sbb jns mov xchg (bad) out sub rex.X jg (bad) fs pushfq jbe rex.RXB fs fidivr rex.WB rex.X (bad) xchg (bad) jne test ja xchg xchg cmp push pop sub and ja mov outsb (bad) cli cld fimull pushq jbe mov mov insb jl jb (bad) movabs mov xchg sbb pop xchg (bad) (bad) ja pushq (bad) xor ficompl (bad) mov adc fbld (bad) (bad) outsb mov (bad) negb cmpsb or adc xor popq insb or out push mov in jle out cltd jge nop (bad) cmp rorb rex.WRB movabs outsb adc xor push mov movslq std nop (bad) mov pop lock and hlt stc jge sbb out rex.XB outsb outsb test (bad) mov rex.WRXB pop rex.WRB xchg rex.WXB rex.WRXB mov add lret xor jg (bad) xchg xchg movsb dec jp jb cld (bad) movabs sub rex.R (bad) sbbl jmp jg push mov scas sub mov rex.WR ja xor mov pop ja jg nop clc fild repnz fdivs mov mov mov pop imul xchg or jo pop stos stc repz clc fiadd add scas fcmovu (bad) (bad) xchg mov hlt mov fild cmp jmp mov (bad) mov movabs ja mov sbb insl cmp mov popfq outsl outsb outsb push sbb cld jle (bad) imul jge out rex.RX test ds rex.RB lea roll xor pop jp lahf outsb pop cwtl adc cli mov push xor ficom push rex.WRB jae lcall rex.WRXB pushq mov inc lods in fyl2x imul test mov rex.X (bad) rex.X (bad) movsl je ds pop cmp pop frstor or (bad) push jmpq adc pop sub pop pushfq and or adc cmp gs popfq add push jo mov jl je rex.X movabs mov rex jb,pt in mov mov (bad) rex.XB es pop push iret cmp xor mov rcll pop push ss jae in scas cmp xchg insl xchg lea iret jmp shr adc dec imul cmp std mov or xor out pop add iret (bad) sub jp add rex.WRXB (bad) imul jno sarb mov std push stos jb rex.XB repnz insb jg (bad) cli pop add pop jne mov xor push mov dec (bad) mov (bad) cld fbstp popfq std jle sbb adc xor add cmp out cmp je (bad) insl movabs mov jnp (bad) (bad) and shl and test cmp outsl (bad) adc sub mov gs movabs sbbl add outsl (bad) and fidiv cld rex.WX repz push data16 idiv and popfq sbb out idivl mov xchg push pop rex.WX mov rex.X (bad) out jle cwtl subl cs (bad) hlt pop gs test pushfq xchg fcompl mov in cmpsb mov sbb mov mul rex.X add pushq out rex mov lods pop pop mov mov pop ss sbb test je cmp xor jb js push cld rex.X (bad) rex.WRXB jmp repz push ss adc rex.WR jg mov and push mov rex.RB int3 or push mov cld sbb callq pop lock je mov pushfq (bad) (bad) cmp jge cmp rex.RB test sbb rex.XB push pop (bad) adc sub ds pop lahf adc mov retq pop rex jb adc sub (bad) xchg loopne (bad) out movabs rex.RXB insb rex.WRB (bad) leaveq test in jnp imul leaveq xor jae pop mov sub insl jbe outsb pushq loope push pop (bad) mov rex.R (bad) rex.XB rex cmpsb (bad) leaveq jg jne ja cli stos xor ficom sub scas jle jge mov rex.W or (bad) cmpsb mov sbb outsl rcrl push (bad) cmp rex.WX rolb sub pop pop mov cmpsl jne jg fidivrl out mov push (bad) insl (bad) push xchg rex.X lods mov cmc xchg outsb sbb lret (bad) iret pop mov movabs xor sub mov pushfq or scas rex.X and add outsl xchg or test outsb xlat jp rex.RX pushfq or lret stos fcoml xor pop mov js in (bad) mov imul flds xor imul pushq (bad) pop (bad) addr32 xlat xor sub sbb outsl push scas cmp cli jb push (bad) xchg (bad) jb rcll (bad) mov (bad) insb ficom ja pop mov lea out fcompl jl enterq push mov and imul mov shll icebp outsb cmp stc sub xchg pop mov lret rex.RX xchg (bad) jbe xor mov pushq pop out imul ljmp and (bad) lret cmc ds mov fidiv add pop fldl (bad) insb nop cmpsl cli sbb rex.WRX xchg jnp movsb xchg in xchg out (bad) rorb jb fisubr insb and ucomiss mov (bad) in insl hlt cmp ja pushfq ja or xor movabs scas push push (bad) fist rex.WRX pop leaveq mov (bad) data16 je jp pop scas (bad) std sahf (bad) outsb cmp (bad) pop repz test popfq mov xor lret out cli sub and jbe notb push xor fisttp lea jbe cld jge (bad) xchg (bad) jae add mov (bad) pop jg xchg out cwtl push mov or rex.R (bad) lahf cmp (bad) rex.WB add outsb lods mov mov movsl clc cs xchg outsb test rex.RX jne cwtl mov notb push addr32 jmp ds shll pop adc lret cmp pushq rex.WRXB stos fwait mul xchg in je pop (bad) movabs in push sbb jnp xor push rex.RB sub rex (bad) pop ficoml (bad) or cmp push movsb insb sub out xchg adc rex insb ss xor jnp and and xchg (bad) (bad) and rex.WRB jg pop callq sub data16 adc mov incl jmpq cltd fadds add rex.RXB and in in out and jnp roll rex.WXB rex.W cmc jl mov (bad) fcmovnbe shlb sahf movabs (bad) mov shrl jp rex.WRB rex.WR fdivrp test xor ds xor ja sub jmpq rex rex.WRX pushq add fwait (bad) push test cmp (bad) rex.X or rex.RB mov xchg xor sbb adc scas std clc mov sub hlt sahf jne push cmp jle in sub push xchg ss xor add repz in jge xchg notb ja jnp mov repz or mov xor popfq (bad) cmp pushq jno movb lock in gs int andl cmpsb mov rex.RX push (bad) pop adc add movslq xlat cmp out (bad) push xor lock cmpsb xor add or cmp movsl lret xor sbb mov out in test movabs xchg (bad) mov (bad) xor retq jl xchg (bad) jg (bad) sahf popq rex.WXB mov rex.RX and mov (bad) jp xchg retq mov fidivrl cs mov jae clc nop xchg iret pop sbb fmuls mov cmp xchg cmp (bad) rex.B repnz (bad) shrb cld xchg add sahf lret out push mov jnp jne pushfq imul fs (bad) outsb mov and outsb (bad) mov scas pop (bad) jne outsl xor and adc jmpq lock ja jbe (bad) mov js jne (bad) sarb jg nop cld scas jge jp (bad) push sub ja mov test fimull insl push movabs mov pushfq fwait mov popfq pop outsl test xchg adc fbstp mov push (bad) rex.XB rex.WRXB repnz pop mov cmp loopne or jg xchg push jno rex.WRXB rex mov mov jle and sbb xchg hlt in (bad) iret stos pop jle mov mov pop pushfq data16 cmp movslq mov ficoml sbb push stos rex.WRXB or movq cs or test in or (bad) cli pop callq ss lods sahf xchg xchg cmpsb js (bad) out push movsb mov sub in frstor push xor fist outsl jbe (bad) loope fwait jno scas xchg mov add fidivrl jl jg fst xchg (bad) (bad) adc fbstp lahf xlat mov mov pushfq push xor (bad) mov ja jb add mov neg rex.WB pop in (bad) xchg cld (bad) insb adc sub xchg (bad) js or decl (bad) pop test xchg outsl imul xchg subl mov sahf jo (bad) ror sub mov jo mov and adc rex.W (bad) sub mov and and xor in (bad) loopne and sbb jle mov notb out and out jbe out adc outsb (bad) jns xchg imull mov out outsb add pushq mov mov (bad) sbb (bad) jno rex.RB (bad) cmp jo adc add push jle lret mull xchg jp out out je sub jle xchg lock cs xchg cld out pop lods sub (bad) xchg xor (bad) rex.WRB outsl std add adc sbb andl mov jl mov retq xchg pop rex.XB imul pop jmpq cs and lods adc cld rex.WR mov test ds mov (bad) rex.W rep cli stos out rex.WRXB ficompl loop rex.RXB (bad) sbb rex.RXB sti mov jbe ja jge xchg sbb fs fincstp js (bad) cmp xor xor mov in rex.WRX fstl add hlt std and cmc cmpl sub pop out (bad) pop rex.RX xlat and fs (bad) push mov cmp fnsave rex fcoms bnd add xchg (bad) enterq fnstenv sub and pushfq pop mov sti test mov xor rex.R repz fist jo jl outsl pop mov loop fildll movntq jge fwait or outsl lahf push fnsave mov pop pushfq sahf pop xchg ds cli mov (bad) outsl xor jne push out rex.WRX rex.RX js pushq add jle sub (bad) outsb sub xchg ja mov ror movslq xlat jge jmpq fs adc cmp stos sub jl out jp (bad) cmp jbe jle je jl rex.WX jb outsb rex.X pushq mov insb or or in fs es cmp adc jg (bad) in pop push pop mov or scas cmc movabs jl jp push rex.WX movslq push (bad) jrcxz rex.WRX rex.WR mov outsb jo jle cli push scas xor push pop xchg jl out xor jne xchg push movabs test popfq mov loope mov lahf movabs loope in je (bad) jnp jl pop pop cmp push jle mov (bad) (bad) notb pushq cmp loop pushq out pop or (bad) (bad) adc mov add out out (bad) (bad) lret cwtl cmp xor cld outsl mov (bad) adc adc (bad) pop and rex.WX loop mov xchg fidivrl lret and mov ja stos retq mov (bad) pop lret fdivrp fsubrp fcmove retq cld add jbe insb sbb ja mov (bad) cmc xchg (bad) imul sub cmpsl push mov movabs cmpsl (bad) lret imul mov (bad) xor push jno mov (bad) mov (bad) rex.X (bad) fnstenv (bad) mov jnp sub jns (bad) jg js adc sbb xchg js js rex.XB cli mov hlt pop pushfq (bad) movabs rex.WXB or mov jnp test jmpw mov int3 mov mov jbe mov movabs (bad) (bad) testb xchg push xor out clc pop out jbe rex.B cld fsubp nop out punpckhdq pop lods iret clc cmp notl data16 push cmp cmp pop xchg xchg mov (bad) rorl sbb rex.XB pushq jle out psubb (bad) cmp ja (bad) repnz movsl addr32 sahf jmp pop leaveq std fldcw rex.WRX push push not rolb rex movsb mov rex.WX fs (bad) mov rex.RB outsl fsubl rex.WRXB hlt gs fcomps (bad) fdiv cmp stos scas (bad) cmp xchg cs movsl jle add rex.XB fwait imul xchg jg mov pop xor rolb xor outsb add negb jo (bad) pop xchg fadd je fnsave cwtl sahf or movslq jb sub fisubrl pop mov clc xor pop xor mov cmpsb push lahf movabs mov out shlb pop push and movsb outsl (bad) sub push xchg (bad) mov stos js rex.WXB fidiv xor outsb retq rcll out push pushq lock insl (bad) adc pushq pop (bad) pop mov jl xchg (bad) (bad) xor clc pop out cwtl test andl add jle stos rex.WRXB rex.X ss js cmp cld mov (bad) out rex.RX xchg lods movabs (bad) (bad) push fsts pop xchg xchg cmp mov fldl lods (bad) cmp sub xchg cli loopne leaveq mov (bad) sbb or pop (bad) popfq and pop add rolb lods pop sbb test (bad) mov xchg andb hlt sub (bad) out (bad) (bad) pop jnp (bad) mov clc and hlt mov xchg xor out (bad) pop (bad) cmp push xor pushq mov jnp pop cld (bad) insl ss mov and movabs lock ficom scas outsb js (bad) int ss callq test leaveq push addr32 andl and xchg stc fmul push mov cli jge stos pop ds jnp pushfq (bad) fdivl (bad) outsl clc cmp push adc jo cwtl jbe test mov (bad) insl rex.RXB or rclb fdiv adc mov loop callq push adc insb adc jle jl mov adc (bad) pop fadd (bad) insl (bad) and movabs loop (bad) xor (bad) popfq or icebp jmpq test sbbl sbb (bad) retq (bad) sahf (bad) or cwtl lahf add outsb int3 rex.B sub rex.WR push (bad) rex fidivrl rex.WRB pushfq repnz es cmp (bad) (bad) movslq xchg (bad) (bad) xor outsb (bad) mov imul xchg jl (bad) jns pushq (bad) repz cmpsl sbb cmp add adc data16 (bad) mov sti cwtl sub (bad) or (bad) cld fs test je sbb jae callq cmp push fisttpl (bad) imul fistpll sub pop cltd pushfq jp xlat rclb or jae icebp xor jl jns es xchg cmpsb movabs fnop add jbe lods enterq mov movslq int3 callq push (bad) adc pop pop push mov push cmp popfq (bad) cmc add rex.XB xchg ficomp and adc cmc rcl out sub mov (bad) movb adc in cmpsb add jo insb (bad) hlt mov mov (bad) jge push jbe cmp fisubrl adc rex.WRX insb in retq pushq lods cmpsl cltd stc loope test xchg add ficoml cmp fs fmuls (bad) (bad) adc outsl cmp stos pop mov jns pushq (bad) imul cld imul movslq jmp mov push (bad) leaveq outsb (bad) jl rex.WR in rex.WRB je xchg sbb stos push test sbbb pushfq xchg mov jne loope jmpq jno enterq negl xchg repnz frndint cmp retq cmc lock cwtl clc outsl (bad) (bad) mov mov mov and add mov ja cmp mov rex.WRX cmp hlt cli or test mov (bad) movabs lock cli jle ror mov mov fdivr rcll imul (bad) mov insb push (bad) or mov pop lods jg movabs add lods jnp insb pop mov pop mov mov notb push and xor mov jge mov xor pushq pop xchg add mov leaveq shl pushq retq xchg pandn mov int3 pop (bad) cli add add out (bad) xor and loope rex.WRX lods (bad) mov test movabs rex.B add cmc sbb (bad) mov mov (bad) (bad) paddw mov (bad) cmp stos sar mov retq mov movslq movabs gs mov movabs push shrl sub mov pushq and ja outsb mov in rex rex.WXB or mov not out push mov shlb loop mov (bad) xor cmpsb outsl mov push (bad) cmp in add movslq add (bad) fimul cmp out je mov out jae,pn (bad) sub mov mov sbb int3 cltd addl cmp adc pop stos (bad) xlat mov cmp pop loopne or (bad) adc fmull in je jns mov fnstcw in rex.WRXB (bad) adc pop rcrl shrb stos out sbb (bad) fldt mov and mov in mov add jae xor mov fisubrl nop (bad) rex.RB mov jne rex.WRB jmpq xchg outsl pushq in repnz in jp cmc sbb fs loop mov pop jnp jo movsl jns retq rex.XB jno cmc in ficompl outsl (bad) xchg imul jge js mov mov ja jg push mov mov (bad) pop nop insb hlt movabs sbb outsl imul (bad) outsb jp mov (bad) cli rolb mov stos je (bad) cmp mov (bad) xchg movabs jp int3 sbb rex.WX lods sti cs jle movabs jne test xor movb mov sbbl sub rex.WRB rex.B addr32 int3 movabs (bad) mov pushq mov sub nop callq cmpsb jo es ljmp fcoms pushfq sbb cmp push or movabs lahf cwtl jo stos ljmp leaveq lret sarl lret ficoml rex.WX (bad) mov iret shll cli jmp sahf (bad) or movabs rex.WB rex.RXB cld fidivl clc xor adc or pop bnd mov push xchg test cmpsl (bad) negl xchg movabs rex.WRX decb pop add fldenv pop outsl fsubs fdecstp mov cmc pop int3 out outsl (bad) rex.RB mov xor (bad) ja mov or ja loopne xchg mov cmp mov hlt xchg out add or fldcw pop pop mov loopne pop jne es (bad) add (bad) idivb mov cltd (bad) adcb xor ds sub xchg sbb stos test nop rolb add test mov jno mov push lods (bad) ds out repz in callq fsubrs xchg add leaveq mov mov mov pushq pop shrb lods loope icebp rep out in icebp mov cmpsl sub fistl xor pushq jp adc sub xchg rex.WRX add push test in mov shl movsb xor jbe fcmovnbe push cmp in pop sbb (bad) (bad) sti add lea test mov or out fisttpl (bad) rex.X mov mov std adc test (bad) mov pushfq outsl testb in gs imul push insl (bad) ja add pop pop add lahf icebp lea cli sahf (bad) lea cmpsl loop push lret pop lock push ja rex.WRXB imul jrcxz (bad) movabs pop in mov (bad) (bad) rex.RB movsb cs fldenv lods jmp fistpl or rex.WRXB rex rex.XB (bad) jge ja pop and shrl jg xchg or add fwait xchg retq lock rex.WX mov addr32 callq addr32 (bad) in mov pop jbe rex jrcxz mov pop (bad) cmp fisubrl cli (bad) icebp rex.WXB sahf pop pop outsb rex.RX mov pop cli pop (bad) jne jrcxz mov push jbe cmp insl mov (bad) jne leaveq (bad) subl callq pushfq lret out ror pop lret cmpsb outsb jne cs pop and sbb out or lret retq xor imul rex.WRB xor ds clc pop mov iret push xchg adc js movsl push cmp retq push cld fwait adc xchg jne (bad) pop mov ficom xchg clc iret lods rex.RX mov imul cmp retq (bad) (bad) outsb xchg mov rclb jle cmp adc (bad) test push cli insb (bad) or bnd rex.WB (bad) ficompl xor or and (bad) hlt mov loop clc adc retq (bad) in sbb (bad) sub mov mov fstps pushq test rex.X (bad) rex.R ja pushq jmpq xor out pop rex.X out insb (bad) fimull in push (bad) pop in outsl je and (bad) imul (bad) js add movabs sbb pushq (bad) jmp jg insl out clc in xchg fnstcw sbb testl lods mov pop jg out fstps (bad) pop jge jle (bad) sub rcrl jno pop in loop xor shlb mov out (bad) pop mov lods (bad) imull (bad) (bad) ja jp and xchg mov lods incl loopne xor xlat (bad) pop rcrb add cli (bad) xchg movabs pushq fisubr imul rolb (bad) pushq nop int3 jrcxz xchg jg jg or jb xor (bad) (bad) lahf mov rex jg sub mov jnp cmpb mov sbb imul jg jg outsb push rex.WXB lahf mov pop pushq rex.WRXB mov retq retq rex.WRXB rex.B xchg lods divl pushfq rex.WR mov (bad) xchg rex.X push (bad) push rex.W enterq xchg (bad) test mov icebp jno (bad) pop lock out rex.WR push out mov js imul xor fldl adc push js xor nop lret adc cmp jmp add sbb test cmp xor mov sbb shlb fidivr and rex.RX rex insl retq ficompl jb add or jrcxz mov int3 push push cmp ss stc incb push lret (bad) jl (bad) mov jmp adc xchg jmp (bad) popfq cmpsb insb adc push (bad) mov movabs mov or sahf fildl lods (bad) xchg mov leaveq cwtl sti iret xchg sbb cmp mov stos or mov pop testb rex.RX push pop (bad) push (bad) and adc mov (bad) callq mov outsb retq cmp nop hlt mov mov sub xor (bad) fucomi (bad) push (bad) mov mov (bad) out or retq rorb mov add cwtl insl add and rex.WRB (bad) cmpsb insl cs cmpsb outsl sub rex.XB xor and lods (bad) push cmpsl lea xor adc jnp mov rex.WR subl jmpq jo sbb fs pop xchg mov cmpsl insb rex.RX xchg jbe fwait (bad) (bad) js xchg fisttp jo mov pushq pop jl mov insb pop rex faddp cmp iret sbb rex.WXB rex.WRX cmp jo shlb sub (bad) jb push insl ljmp mov js jno cmp (bad) xorb (bad) push (bad) (bad) in cld out movabs xchg or cmp rex.W scas adc pop in jb add adc in xor insb stc pop jle mov retq clc jg,pn sub rex.WRB push push xor pushq push and addr32 rex.WRXB sbb subl add mov fsubl movzwl rex.WRB jns xlat mov pushq (bad) in sbb insb rex.X rex.WX cmp jb and (bad) loopne (bad) or loopne pop movslq insl sti pushq movabs (bad) rex.XB (bad) pop or addr32 jo out cwtl mov jno cs (bad) outsl jae jbe sbb jo jrcxz in insl sbb mov jns cmp jae (bad) jl out (bad) (bad) jge outsl scas cmp fidivl push stos adc mov (bad) (bad) jb mov sbb fiadd dec lods jns pushq sti loopne insb jmpq fcomp js rex.WRXB jp and jg and pushw jmpq mov sub pushq rex.X xchg movabs rex.WRXB retq lock movsb cmpsb (bad) pop (bad) divb mov cmp (bad) mov mov mov mov imul pop jno ljmp sti (bad) cmp push xor int3 pushq jb sub adc jg iret hlt sub or cmp (bad) and pop jmpq xchg jle mov or fucomi sahf lahf fldt or jl mov fcoms add (bad) (bad) cmc (bad) lods mov xchg retq pop mov (bad) std jg or adc movabs jp (bad) cmp jne jg int3 rex.WR or rex.WX mov fs sub pop cmp mov out (bad) rex.RB imul repnz stc (bad) lahf xchg fmull pop outsl enterq mov push scas insb shrb mov xchg scas mov ss and cli idiv xor ror (bad) sub jae jl (bad) repz insb js emms int pushq xor in (bad) jne (bad) rex jg test add out jp pop imul push fabs es in (bad) (bad) js out mov addr32 notb pop movabs and mov jge jns (bad) std (bad) pop jle add xchg mov mov jmpq or adc (bad) jg (bad) loop pop cmp jle addr32 rex.R rex.B adcl cmp add (bad) xor mov cmc jns mov out insl (bad) jb xorl cld mov je stc mov jne repz jl push popfq xor js jne shrl mov cli and fisubr sbb loop (bad) fbld adc rex.WB rex.WRX mov int push addr32 lods xchg sub outsb (bad) fcoml xchg movslq push xor lods rex.W sbb rex pop js stc jmp mov (bad) idivl (bad) (bad) and rex.WR rex.X rex.WR retq jp orl movabs and or mov (bad) idivb cmc sbbl (bad) out jl mov cwtl rex.WRX (bad) outsw nop rex.X jmpq es jle rex.XB xchg (bad) movabs mov out add stc pop lock outsb jae xchg lret mov scas (bad) movsl loopne adc jp gs (bad) lcall hlt loope js and (bad) pop add outsl pop iret imul and jnp jge stos jbe mov xlat pop xor (bad) out addr32 (bad) scas mov mov rex.WB xchg (bad) jns sbb rex cli je rex.RX mov scas es add cld outsb insl (bad) xchg stos jle add sbb xchg (bad) pop mov xchg pushq mov rex.RX (bad) (bad) cmp in xor (bad) lahf in sbb icebp pushq mov (bad) xorb in retq (bad) mov jmpq adc je ds xor mov jmpq andl (bad) js sarl ja rex.W cmpsb (bad) leaveq cwtl mov sbb jnp xor mov push jb leaveq lods (bad) push insl movb js repz out lods fwait lock rex.XB rex.WRB sbb xchg xor mov xchg (bad) hlt pushq in lods and (bad) cmc adc (bad) (bad) movabs ja pushfq mov pushq rex.RXB cmc rex.RX sub std sbb ss pop out fstpt rex.WRX movabs mov (bad) and mov popfq rex.WRXB rex.WRB mov sub or cmp jg mov cmp mov retq cmp jbe scas lods pop jle and xchg (bad) add imul add (bad) pop (bad) out push pushq sub xchg rex.WRXB leaveq loope fistp add cmp movabs (bad) jg pop rex.WRXB and push pushq mov in jns mov adc xchg scas add xchg jmpq and (bad) decb add movsq push mov (bad) mov push lods mov mov push stos xlat sti test mov jl cvtdq2ps add cli subl add test push cld push push push test xrelease je clc insl pop andl xchg fnstcw push cmp retq sbb insl jns jp mov mov rex.RXB (bad) jmpq cmp (bad) outsb sbb sub (bad) mov (bad) jl retq je xor mov out out stc push andl lods iret jp jge jne xor fwait push outsb cmp rex.X mov or cwtl int jg rex.WB jl in movabs (bad) mov jmp (bad) push mov scas cwtl xchg lea (bad) (bad) rex.B repnz scas sarb (bad) outsb shrl cmp fbstp (bad) jp movabs mov repnz stc and xchg lods (bad) jnp psraw sbb and outsb jno jl rex.B and xchg adc mov stc (bad) outsl add js (bad) (bad) rex.RB pop push fbstp mov lods jg (bad) fstps outsl hlt xor callq shrb adc xchg lret fstps (bad) int in add stc pop sbb clc je and pop scas push jle xor rex.WRXB cmpsl xor sub adc mov enterq mov rex push rex.W addr32 jbe adc loope icebp rex.WB out lcall fbstp xor outsb jg rex.WRB mov jo in xor movabs (bad) test or and rex.X cmp retq jmpq adc (bad) xor movabs addr32 imul lods data16 rex.WR hlt mov icebp lahf loope rex.R (bad) (bad) jb mov xchg (bad) rex.WB adc add data16 fild adc (bad) movsl stos (bad) push jp and (bad) pushfq cwtl roll (bad) or jmp retq sbb (bad) jns js and pushq rex.WRXB mov add (bad) scas xchg callq jno jmpq mov mov add (bad) js and adc sub xlat repnz in (bad) sti jg push mov lahf sbb lock push xchg pop sub or ss xor loop jp sti mov loope movabs loopne (bad) sbb mov (bad) cwtl sbb add (bad) (bad) jp mov sub (bad) add (bad) scas verr cld pop and jbe cmp mov (bad) insb (bad) adc add jnp pop cmp cwtl retq cli mov sbb (bad) push outsb rex.W subl jg scas rex.RXB add xchg mov add cmp jnp xor rex.WRX test rex.W mov pushq mov add out xor add rex.XB rex.RX xchg (bad) add movsb cmp and xor xor cmp add stos cmc xor jg (bad) (bad) jne and add or sahf mov int and fistp (bad) adc test sbb mov cmp and lahf mov outsb push or test add push jrcxz testl (bad) fxch (bad) sbb popfq xchg or movabs cmp xor adc rex.X scas xchg jp movsl lret sti xor add sub (bad) (bad) jl add cmp sti pop in lea rex.W rcl xchg mov outsl (bad) xor rorl push jne mov pushq js fcoml add gs jp lret (bad) lahf (bad) out add cli (bad) adc int3 mov es scas test and (bad) cmc (bad) cmpsl lods (bad) es pop push jp add mov movslq or sar (bad) jbe (bad) xlat sub fs sub rex.WRB (bad) mov rex.RX lods mov xor out sub (bad) add rex.WRB js,pt roll and push bnd pop xchg jl ss in mov sub (bad) jg imul movsl jrcxz (bad) pop rex.B jle cwtl rex.WXB mov add (bad) mov add (bad) loop push lret jbe (bad) push xor (bad) xchg sti (bad) jl push rex.X andl scas add sub jne movslq (bad) jle scas imul pop addb pop outsl (bad) sbb cld addr32 cli iret data16 or rex rex.RB outsl ud2 int iret iret xor fs mov pushq (bad) jg fsubrl xchg sahf sahf sub clc xor stc (bad) (bad) add push callq out xchg or stc repz testl jg pop js fnop pushq add (bad) stos in jle outsb mov (bad) mov insl mov rex.WB imul insl imul test mov movslq sub jl or or fidivr mov jo (bad) xchg enterq (bad) (bad) js jle (bad) xchg pushq pop cmpsl js push fldenv rex.WXB rex std fs mov add xlat and pop cld js fldenv fild xchg cmp xchg leaveq (bad) jb (bad) push loopne (bad) bnd xor loop cmp or pushq idivb lods or xabort pop jns out ja scas pushq pop idivb xchg std (bad) rex (bad) rex lea hlt add xlat je test adc movabs iret test ss add pop jbe jg movabs (bad) fcompl xchg clc mov sahf fisttpll outsb loopne (bad) cmp pushq pop divl push or fsubrp add sbb sub out sar mov (bad) (bad) or adc mov rex.RX add jp rcrb outsl retq rex.X (bad) rex.W pop idivl jle fisubr xlat in jo rex.RXB rex.R and lock jmp ds es (bad) test jne movsb lods loop (bad) icebp (bad) mov (bad) (bad) pop pop (bad) pop cmp mov push test jp (bad) sbb cwtl jle cmp sbb pushfq xchg jg adc (bad) (bad) jo pop jge imul fidivr rex.WRB jl lods mov xor add adc pop sbb lock js jge jge rolb (bad) xchg rex.WRB (bad) rex retq xchg adc add pushq ja sbbl push (bad) pop pop (bad) (bad) sub and lock jae cs jle (bad) cwtl (bad) incl imull jl lahf fld mov jp rex.WX (bad) push mov test or pop test rex cmp fild mov add lret (bad) (bad) pop mov out pop mov xacquire mov jl je cmpsl movsb push xor mov mov add addb lahf cmp pop jp (bad) or mov (bad) adc pushq rex.WB rex.WRB pop mov xchg test mov fldcw loopne jnp add mov outsl lahf stos adc in (bad) (bad) mov ja jp push movsl subl rex.WXB mov sti ficoml scas sbbl rex.WRB xchg xchg sub imul jae xchg jo pushq insb jp jne jae rex.R sub jbe jo xor pushw mov test rex.WB js (bad) imul scas (bad) sbb or rex.XB (bad) mov jle rex.XB xchg rex.WB imul cmp addr32 in cmpl insb fistl pop test jle jnp fwait (bad) sub imul jo sub mov jg add rex (bad) add jg xor (bad) mov mov push rex.XB shl jge mov add loop or xor jne rex rex.RB pop (bad) loope rex.WRB jae movabs out pop pushq retq (bad) sub (bad) fldl pop pushq rcrl mov fwait add pop enterq outsb push push lea test cmpsb mov insb mov jbe lock mov lret out sti outsb sti sahf int3 movslq test insb pop out insb stos leaveq scas movslq jle lock adc pushq mov outsb jge sbb jbe out (bad) scas (bad) jne rex.WRXB fs push lods jnp pop sbb mov je es gs jnp movabs add movabs outsb jmpq insl rcrl xchg hlt (bad) xchg (bad) imul xor rex.RB rex.WRXB in sahf test rex.WXB scas add sti adc jb rex.B rex.WR popfq insl xchg mov pop mov data16 movabs outsl mov push ja rex.XB movsb sbb sbb jl jrcxz ds jmp jle js jnp mov callq scas (bad) jle fimull je mov insl pop jle repz (bad) adc pushq push adc rex.WRXB adc sbb shlw cmp pop adcl pop and adc data16 jbe (bad) callq roll rex.WRXB outsb out mov cmc sub mov sbb retq jg (bad) mov fmulp mov xchg (bad) imul and out sbb xchg sbb jb (bad) and push fmuls jbe adc (bad) testb sbb push or pushq (bad) stos scas (bad) jnp ja (bad) fmull rcrb mov sbb sub pop shr (bad) xor mov sbb mov fnstsw mov cmp mov pop jl cmp cmp sub scas adc jrcxz cmpsb movabs xor push jb fiaddl xchg jl (bad) movabs je int loop std mov movabs and jmp outsl jge xor sub cmp imul sti movabs popfq js je,pn (bad) (bad) cwtl rex.RX or (bad) xor (bad) mov movabs pushq shlb xchg cmp rex.RB xor movslq adc xorl xchg stos out push scas jmpq add push mov jg jg stos rex.RB repnz jmp cmpl or out (bad) in pushq cmp or stos fidiv (bad) pop js or or and pushq imull test jo sahf (bad) fwait rex.RXB and sbb popfq xor (bad) (bad) fdivrl js (bad) data16 (bad) insb push pop or or out movl (bad) rex.WRXB mov rcrl mov insl xor jmp jg insl and (bad) jg sbb rex.XB adc (bad) or adc sti imul rex.WRXB push pushq out jl imul jg outsb jns outsb (bad) out rex.W mov and lahf lret enterq in jb leaveq fidivr (bad) xor (bad) out fstpl (bad) cmp (bad) cmpsb xchg (bad) adc nop and pop (bad) mov and rex.WR sti pop push jnp pop xor mov jg ja clc mov jo in movsb addr32 (bad) mov (bad) (bad) rex.XB adc (bad) cs jmpq fmull xchg mov sbb xchg cwtl push xchg stc pop jg jnp (bad) nop (bad) sub and jg nop or (bad) fisttpl (bad) imul mov xchg mov jbe test (bad) pop scas lahf cli (bad) out jrcxz cs movabs (bad) lods xchg imul jrcxz in cmp (bad) and mov (bad) and (bad) push and ficom jl xchg in ja sbbl mov movabs (bad) (bad) xor rex mov pop out scas mov and out jnp callq mov rex.WRXB outsb push nop adc sub and fcmovu push rex.WRXB mov jrcxz rex.RXB mov ja rex.RXB sub jg or xor mov rex adc (bad) lea cmp rex.WRXB rex.RXB adc sahf incb outsl fistpll fucomi xchg pop (bad) (bad) (bad) xchg mov sbb mov xor nop enterq sbb jo mov stos and (bad) (bad) add jg xor enterq stos outsl adc sub in adc packsswb (bad) (bad) sbb lret mov in (bad) jg (bad) or jnp adc mov jmp movsl pop (bad) lea cmc mov rex.WRXB lret and (bad) mov (bad) lcall (bad) jge adc mov (bad) (bad) rex.WRXB outsl lret movsl (bad) (bad) scas pop outsl cli jg fldenv scas (bad) (bad) mov push jg push jne mov in stc iret lret rex.WRXB rex.R (bad) (bad) sti (bad) (bad) mov mov jo and in (bad) repz fcmovu push loop pop pop rep xchg jo iret and sub sub (bad) sti push (bad) (bad) pop fbld imul jg or add lret xchg and hlt jp and fcos xor stos insb xchg add mov xchg xchg sub xor add rex.RB mov pop jge cmp (bad) andl adc nop add sti fwait pop (bad) shrl (bad) (bad) rex.R decb (bad) fs cli (bad) int3 in add rex.WXB rex xchg xlat insb rex.RX mov popfq xor add (bad) cld (bad) jmpq sar (bad) (bad) mov rcrl cmpsb jae scas (bad) fisubl rex.W (bad) fs rex.WR retq sub jp add jb mov fwait and sti sahf jl (bad) je int3 mov (bad) (bad) xchg cmpl add xor jb (bad) push andl pop sbb sbb xchg outsb add adc xchg (bad) sar test lock roll lret jg (bad) sub subl sbb mov (bad) imul movsb xchg (bad) jg mov fiaddl in stos sub jp adc rex.WB movabs add jae pushq (bad) pushfq add rex.WRX jnp shrb jb scas pop nop pop rex (bad) add (bad) insl add pop push pop shrb xchg adc cmp movsl je cmp cwtl sbb rex.WX out cmp mov cli rex.WXB lea (bad) es sbb movabs add (bad) jae xchg (bad) (bad) jno pushq sbb jge movabs cli (bad) jo test cs shrb stos in pushq cmpb push (bad) repnz add (bad) (bad) cmp jmpq ss test push rex.WRXB jle repz sahf fsubl rex.WRX pop jmpq push and out movabs sub add outsl sbb (bad) jno rex.W lock add sahf repz and iret test movsb loop (bad) jnp sbb sbb and mov (bad) mov test add stos and in imul pop xor cwtl icebp jle add movsl orl (bad) decl outsb rex.RX cli mov fs enterq (bad) pop hlt adc lock xor insb add ja je shr add sbb rex.X jg pushq jl addr32 (bad) (bad) mov jmpq pushq rex.X lea (bad) pop fisubrl movsb retq jns addr32 (bad) adc (bad) add jmpq (bad) or and mov ja addr32 outsl jne add push or and test mov mov popfq xlat add movabs outsl movsb and rex.W xchg mov sti push jge (bad) (bad) iret fcomps rex.RX rex.WRXB add xchg shl add sbb (bad) rex.R int3 rex.XB retq lret sbb mov (bad) es mov repz mov rclb (bad) jg push add notb test sub rcl add mov add jne add out (bad) in add int rex (bad) add cld shrb and cs jl pop xor mov jp cmp xchg xor cltd cmp (bad) movsb clc callq in mov xchg sbb sbb mov jbe (bad) js adc lods lret (bad) lahf ds cwtl or add (bad) cld pushq imul add loopne mov or rolb push (bad) adc jle rcrb leaveq in pop sti rex.WRXB adc mov test pushfq jl jrcxz jno (bad) (bad) rex.RB push cmpsq add (bad) add int sbb repnz mov rex.WXB outsb mov sub nop out (bad) (bad) xchg jle mov enterq mov add repz rorl cmp rex.X es rex.WRXB lret stc add test pop rex.WR sub int3 in movabs push jmpq push repz rex.WB mov (bad) add out (bad) (bad) fwait movabs js movabs jo scas pop sbb pop fs (bad) jp jb xor xchg out add imul sbb (bad) add pop rex.RX stos pop add mov cmpl ss pushq mov rex.RXB ds hlt add stc jo add rex.WRB xchg pop je mov xor xor pop mov (bad) or add sbbb movsb test repnz fs sub (bad) jno rex.RX rex.RX lock shlb jo mov add mov lahf and pop or lea xchg and cmp data16 cmp flds push sbb divb (bad) push jae imul xor icebp sbb jbe iret mov ja jp mov outsl xchg cmp imul loope mov (bad) pop jg lods frstor movslq pushq mov jmpq loop rex.WRB add stos js movabs je cmp rex.WRXB movhps rex.X jl or jp (bad) out rex.RXB pop or rex.WB rex.RX pushfq (bad) cld lea jmp (bad) pop pushq (bad) icebp mov add fidivrl push jp xor add add pop addr32 test or stc iret jb sub pop andb lea xor and ja add cmp (bad) loop adc iret mov rex.RB addr32 jg cmp rex.WX std xor xlat mov leaveq sbb test (bad) rex.X or push add rex.R js cmp add push fild add orb rex.WB movabs je sub lock adc adc (bad) leaveq add (bad) pop cli jae insb fs mov (bad) xor xor repz pop nop jbe std xor lods add sub outsb cmp add xor out pop loop in fild jp sub movsl push (bad) mov mov sbb mov (bad) mov outsb (bad) (bad) fcoml cmp (bad) push pop xchg jp sub add rex.X test (bad) movabs lret pop fs add out retq test xchg and xor sub mov push lret jle rex.W int3 add (bad) jmp and (bad) (bad) mov fisubrl adc movabs mov mov xor mov sub add fistpll or xchg (bad) sub add lods repz mov jb pushq addl adc pop sbb sahf rex.WB test xor in mov (bad) add jmpq (bad) and int3 cwtl add add (bad) adc pushq cmpsb orl cld cmp add test add mov stc or rex mov movabs xor and fadds rex.WRX neg jne xchg in repnz cmpsb xor lret xor (bad) mov (bad) sahf lahf int3 insb lahf (bad) fiadd add mov bswap mov cmpsb stc sbb push jp (bad) pop jns (bad) punpckhdq push add movabs or rclb imul enterq mov pop mov and in jg insl xor xchg rex.WB ja je (bad) push sub (bad) cwtl data16 push pop test movaps adc and push movsb rex.WRXB (bad) out (bad) add movabs sarb mov cmc rex.R (bad) ss pop rex.RB outsb rex sbb in pop int3 scas jne scas rex.X rex.WB push outsb lods callq cmp mov (bad) sub xor cli jle js repnz (bad) jl sbb xacquire rex.RX jne add sbb or ds add add xor outsb mov mov and lods xor xor jno shrb clc mov pop jmp ss xor lahf in add add cld outsb jnp ds lock iret in scas xchg adc (bad) pop rcr rex.RX lcall movslq cmp pushq rex.WB imul callq insb ja xor jae xchg rcrl push and sbb js je jo xor pop xchg jle (bad) pushq pop add pop sub cwtl xlat push sub (bad) sbbl mov mov (bad) jp gs or (bad) rex.WRXB lock adc xchg rex rex.RXB or (bad) (bad) add xor fisttpll (bad) jb or sub (bad) xchg (bad) push movabs outsl sbb push cmp movabs out addl push or add adc in (bad) xlat std sub add add pop ss jmp jge pop js adc mov mov subb (bad) (bad) lods rex.WX jrcxz es rcrb add insb decl fwait xor adc add cltd (bad) test mov rex.WR push popfq (bad) rex.X addr32 xor out fwait add cmpl cmpsq sub or push xchg or movabs (bad) (bad) (bad) and mov (bad) xchg add xor ds jp sub rex.WRXB jae (bad) (bad) (bad) fbld rolb and gs add cs callq pushq (bad) mov js push add xor je xor (bad) popfq jp or lods cmp jg mov rex.RB and mov xchg movabs add rex.B lahf iret jno xor lretq add or pushfq add gs add pop pop cltd cmpsb sbb (bad) fwait add mov push adc mov xchg stos std xchg mov cld mov xor je push gs fwait mov add cs fnstsw (bad) jnp pushq es or (bad) jg movabs test clc rex.WRB jp (bad) lods or pushfq mov sub and pop add adc (bad) jl (bad) popfq jmp int3 icebp ror sub sbb movabs mov xchg retq sub jg,pn (bad) (bad) cmp and (bad) mov js (bad) gs adc repnz mov (bad) cmc jge (bad) cmp add and (bad) movabs pop mov (bad) mov (bad) xchg pushfq mov movabs clc int3 popfq je mov test mov xor jle cmp (bad) sub jg jne cwtl rex.WRX adc or mov cmp mov (bad) sub sbb and test add movsl mov xor mov xlat mov ja int3 insb (bad) and sti jp movsl cmp rex.WB repz outsl pop test std (bad) loop sub (bad) cltd sarl rex.RX jle jns loop adc movabs xchg add test pop nop mov lahf (bad) add sti int and xor (bad) push addl cld or movabs movabs sub jno pushq (bad) (bad) jb outsl mov rex xlat sti (bad) add pop and push je addr32 ja adc (bad) (bad) popfq int3 pop gs rex.W xchg xchg (bad) fwait adc jle mov jle lock (bad) (bad) (bad) scas movabs jae jle ja (bad) jmp cmpsb xor push sub xor add jg rex.B xchg adc lea jb (bad) add rex.WRB ds rex.WXB pushfq add rex.WR rex.WX sbb add data16 or (bad) movsb add (bad) xor adc add movabs push jg jnp lret in stos test sarl fbld sub (bad) stos jne add sbb pushq loope (bad) and cmp loopne cs xlat outsb imul push or rex.XB repnz (bad) int3 movslq cmp cmc out (bad) test (bad) (bad) sub adc fwait mov and mov and pushq push rex xchg mov (bad) cmc adc movsl outsb mov (bad) popfq and mov mulb pop shrl outsb test (bad) push pushfq add xchg lea pop adc add movabs push jp (bad) movslq rex.R insl jg rcl and cmpl pushfq (bad) and rex.X jle (bad) (bad) pop outsb shlb adc sub mov mov cld (bad) (bad) rex.R rcrl rex.X outsb rex.WRXB cmpl (bad) add xor rex.WB or pop rex.X mov cwtl (bad) fwait mov pushq adcb adc mov pop cld rex.WRX or cmp jg jb xchg jno and push add ds pushq (bad) pop add in or pushfq push sbb (bad) icebp jnp add cmp cmpb pop adc mov imul pushq stc push add push (bad) test pushq cmpsb jno jo jg (bad) fdivl outsl cmc incb rex.WRX xchg (bad) add mov (bad) pop add push mov (bad) fisub clc adc add or lahf mov push (bad) and insl imul jno test and fcomps (bad) pop jbe (bad) in pushq rex.X push pop jl fs lods sbb (bad) (bad) popq in (bad) add (bad) push sahf fdivs stos inc icebp in xchg mov xchg xor or mov (bad) pop add pop rex.WRXB rex.WR roll cmp xchg js mov pop mov sub movabs (bad) fwait bnd add and sub je mov pop add jno sar adc sbb cmc orl loopne jle movabs pop addr32 rex.RXB fcomip loope callq lcall rex.WRXB adc clc (bad) rex jp lods push add out rex.WXB loopne xor out xchg fwait mov lahf (bad) loop cmp pop pop stos push js adc mov outsb jbe add and sub jge movabs jp mov xchg (bad) (bad) jae js gs sbb xor movslq fsubl xchg loop movabs pop push mov add (bad) rcrb cmp jp hlt fnstsw lock jge lahf (bad) pop mov mov imul mov mov test cmp mov mov xor pop pop and ffree jne add rex.WRB addr32 sbb jae mov (bad) push cmpsb clts add jbe xchg pushq in repnz ja rex.WRXB push mov mov idivb push or (bad) jno adc callq xchg mov pushq add movb add xor test adc ja (bad) jns (bad) push rex.WRB adc rex.XB (bad) jbe (bad) xchg rex sti and rex or rex.W sar xchg insl leaveq scas out jbe cmpsl outsb out hlt sub (bad) movabs (bad) fnstenv xchg fmull sahf mov sbb fisub in mov rcr ficomp iret (bad) and cmc (bad) je adc cld and or xor cwtl mov fs rex.X int movabs data16 imulb and mov icebp jb xchg or fwait test rex.W add xlat (bad) rex.RXB (bad) pmaxsw sbb or push push (bad) sahf cmp jmpq cmpl (bad) popfq sub pop and jle rex.WR hlt sbb (bad) movsl and (bad) xchg mov rex.WXB add insl test (bad) scas mov lock addr32 and out xor add in rex.WB jle pop stc ucomiss (bad) jrcxz mov cmp movabs movsb cmp add (bad) imul sbb rex.W sub decb addr32 incl jle test rex.WXB add (bad) xchg (bad) jp mov (bad) (bad) rex.WXB js adc jg sarl cli add sub rex.WRXB rex.WRX lock add movabs outsl xor cmp mov (bad) (bad) cwtl divb add stos imull sub or xor ja sbb add rcll add movabs mov rex.RB (bad) xchg add out add jb jbe (bad) mov (bad) (bad) (bad) (bad) lods cli sarb pop (bad) jge mov movslq mov js (bad) rex mov or (bad) (bad) js mov test out insl xchg xor leaveq add and pop (bad) test jl faddl callq in cwtl insl out rex.R es pushfq xorl rcrl stc (bad) mov js jl sbb xchg push lret rex.WRB xor notl jmpq rex.WRX rex.R (bad) adc mov xor iret jg int3 mov rex.XB movabs nop iretw adc jl sbb movabs enterq leaveq mov jns fs fdivrp jo (bad) pop testb fdivs sbb or fiadd add retq (bad) jnp push fsubrs (bad) adc nop xchg (bad) fwait packssdw (bad) cs movsb and movslq pushq outsb jae mov (bad) je sahf (bad) fs loope jg sbb rex.RB add pop sub subl (bad) pop (bad) (bad) mov sub test jl add int and cmc or jb (bad) xor icebp setge add push (bad) add xor pop and popfq (bad) stc jle scas movabs js xor jbe ja mov sub adc loope test adc jns xor imul add mov sub add pop subb (bad) jns ds pop (bad) or add adc push add pop push jns rex.X loop xor or (bad) mov xor andps sub adc adc (bad) push data16 movsl in add stos mov rex.W xlat (bad) add sbb rex.WRXB adc add xchg flds jmp lret outsl movabs pushq push fisubrl or loop add xchg mov xchg pop sahf xor lods mov cmpsl mov scas je int3 jno es (bad) jnp cmp mov lock rex.RX (bad) mov stc fisubr mov or cltd and adc fidiv jg rex.WRB mov sbb rorb rorb lret out lods std mov xlat rex.RXB add (bad) rex.XB pop or add (bad) jb rex.X mov xchg cmpsb xchg xchg leaveq or in add jle add jne scas jb xor andb (bad) sbb adc lret fnop (bad) scas (bad) out add clc add in pop (bad) ror or add and (bad) rex.X movabs add fwait (bad) movabs add vcvtpd2dqy ja in pop adc lea fs (bad) test scas cmp jle pushfq xor repz add in rex.WRXB (bad) add (bad) leaveq std nop test or in xchg sub movsb sbbl out and mov pop fdivs xor test (bad) or movsl sbb or int xchg mov clc mov add xchg mov add jrcxz sbb loopne scas rex.W rex.X rclb insb pop leaveq (bad) cld mov pop jge rex.WRX cmp add lret adc mov xor add div (bad) jae (bad) push add mov pop add jl mov movsl jb (bad) test mov push xchg jp mov jl adc add rex.WX (bad) sbb add rex.WRX (bad) clc jp jle add pop mov (bad) scas test rex.RX sarl pop jns cmp add rex.WRX incb jmp xchg rex (bad) xchg loopne add loop js add and mov and mov add push adc mov and add test mov xchg pushfq (bad) (bad) and push scas xor int (bad) pop adc pop add sti (bad) fnop rex.WX xlat adc (bad) mov add loop (bad) or jg loopne (bad) xor rex rex.WR xor (bad) mov adc cmp sti (bad) (bad) xchg out rex.WRXB rex.XB jp push (bad) rcrl add mov rex.RX jmp jg sub nop jb mov mov mov fldcw mov insl jo add fcom add ror callq (bad) xchg cmpsb ficom or (bad) enterq add mov out mov (bad) cltd or (bad) stos xchg xor outsl jp out xor (bad) (bad) mov loopne,pn rex.WB insb (bad) jmp sbb nop scas test decb add cmp lock mov xchg (bad) sbb jno (bad) mov rcrb leaveq jrcxz mov outsb mov mov hlt out stos loopnel adc jne rex.WXB add rex.RB mov xchg adc xchg add adc roll out jbe cmpsb and outsl sti loopne fild out lods sbb mov sarl nop shr cltd stos repnz (bad) cs lock movabs pop idivl jrcxz and mov std sbb insl retq cmp mov in xorl or imul (bad) outsb movabs fcomps xchg cmp rex.XB rex.RX (bad) movabs mov imul add mov jrcxz fildl mov clc jns push (bad) (bad) mov outsb add retq add (bad) xor rex.XB pushq (bad) insl push scas rex pushfq add rex.WRXB or insb mov and subl stos adc jb jrcxz (bad) rolb mov icebp mov rcrb pop test negl jg add mov xor addl repz movabs lock mov add mov sbb jb,pt seto mov (bad) or jp outsb xchg fstps (bad) mov imul test cmpsb adc mov jp stos and in loop cld jg (bad) repnz (bad) adc pop and (bad) stos pop add jb xchg icebp cmp or test lods data16 repz cmc rex.WR rex.WRX (bad) ds or jmp stos adcl in (bad) cli adc cmp imul (bad) add fdivl mov jnp jb pushq out add rex.WRXB fnstcw add add jp add jrcxz mov cmp jb nop (bad) sbb cmp add mov mov push (bad) jrcxz (bad) stos adc xor jno xor and push cmp jge movslq rex.W adc add add cmp je add cmp mov add cli and mov (bad) add and (bad) outsb cwtl rex.WR rex.WRXB rex.RX imul xchg xor jne jmpq out pop push lahf xlat mov add sub add mov xchg mov cmc (bad) xor or jno fisttpl icebp or jbe jmpq cmp out (bad) add outsb mov insb jp xor test (bad) and (bad) in add insl and mov adc push gs repnz nop cwtl rex.RX pop or cmp jae and jb add cmp (bad) add sub mov hlt or fwait mov and pop mov push cltd (bad) push sbb cs or (bad) stos sub (bad) es mov mov fcoml (bad) fwait in add push pushq cmp pop xchg add push adc add cmc jns mov rex cmp rex.WRXB push or jb (bad) or (bad) pop sbb cmp xchg rclb jae rex.X pushfq sbb insb (bad) jbe callq adc mov (bad) (bad) and in pushq push scas ljmp fadd hlt sbb jge (bad) add gs mov rex.X add callq shlb sbb xchg mov sbb push in es fwait enterq add pushq fisub or loope sbb (bad) mov movslq push clc (bad) ror rcll shll fldl jne add sbb in pop icebp ja int gs cmp (bad) pushq movabs (bad) mov sub jg add orl (bad) xchg (bad) mov out adc sbb mov nop and out es cli or jne fild (bad) add cmp rex.XB jo leaveq xchg lock retq rex.RB adcl scas rex.X jae and xorl rex.XB sbb jl and decl (bad) jp popfq in mov lret jrcxz cld fistl (bad) (bad) fisub retq incb out loop adc mov in push rex.WR (bad) imul stos mov xchg rex.WRXB je pslld addr32 add (bad) out pop mov enterq rex.WXB in mov sub movabs negl retq (bad) mov cmp pop (bad) movabs adc scas sbb add adc xchg (bad) push lods sbbl pushq pop or in loop jmpq mov (bad) (bad) (bad) cmpsb sbb xchg (bad) add push callq sub mov xorl movsb (bad) (bad) mov (bad) (bad) jle gs and cmp mov pop (bad) stc (bad) jno mov push fimul or (bad) (bad) in decb icebp and (bad) mov pushfq movsl rex.X shll jbe push in rolb mov and (bad) pushfq (bad) mov std adc mov lods jrcxz stc cltd sbb subl jle add sahf jbe scas rex.B sbb or rex.WX movabs (bad) add lea jp mov jp loope,pt rex pushfq in out or fidiv mov adc add xchg fdivl mov int3 (bad) jge jne rex.WXB repz sbb data16 cmp sub popfq xchg (bad) (bad) adc fs rex.WRX test loope es push push sub cmp idivb mov rcrl (bad) lcall imul add pop (bad) rex.X and jo insb push (bad) fdivl push jge add movabs (bad) fnstenv pushfq stos jmpq retq sbb (bad) or rex.X xlat (bad) jmpq (bad) add cmovo fwait jp stc mov subl jo adc pushfq jl jge cs add pop jmp rex.WRB xor jne xchg stos in or jg adc movabs idivl (bad) cmc fisub or rex.W test fistp frstor lahf cmpsb test xchg (bad) mov callq test and jle cmp icebp (bad) jmpq push popfq cmp push in jle and imulb leaveq fdivs (bad) ss sub mov adc fisub outsl rex.WRX outsb add mov (bad) cs jmp (bad) or lea pop roll lahf xor mov jne lret sbb popfq sub xchg add movsw fadd jmpq ss (bad) (bad) (bad) rex.WRXB lret outsl mov sub rex.RB mov xchg pop ljmp outsb sbb xor mov pop mov shll mov mov leaveq cmp pcmpeqw push and je rex.RB lock je cmpl movabs retq movslq movd insl (bad) (bad) (bad) fidivr data16 or (bad) jg hlt xchg (bad) (bad) jle pop mov lods cmp ja rex.RB jo mov je cmp and mov sbb (bad) xchg jmp cli imul xchg mov rex.X (bad) sti scas sarl (bad) (bad) (bad) (bad) mov ss sub (bad) mov add lock fstl (bad) jg pop add pop push stos (bad) movsb sub (bad) int jmp lock adc (bad) es cmpsl mov mov pop cli shl jmpq movabs sbb or or (bad) addr32 popfq (bad) cmovg imul mov (bad) out add ja nop rcrb xor xchg sub setb cmp imul addr32 jp (bad) adcl pop pop movsb cmp fimull stc sub in xchg mov fistpl mov (bad) fucomip sub (bad) out mov jle repnz test cli rex.WRX int fcomp cwtl rex.RB (bad) shrl (bad) imul mov nop gs shrb hlt xchg ficompl xor cmp adc pop sti (bad) push sbb adc fcmovnu mov rex.XB adc outsb fs and in mov sti cli jo pop mov movabs fisubr flds pushq adc xchg or sub rex.WB incl (bad) cmp je lods test cmp or (bad) add lods sbb add insl loop out adc add push jae (bad) adc xlat es out repz mov rex.XB and jo or (bad) insl (bad) jle sub (bad) jge (bad) adc popfq loop or pop movslq lea fcomps mov (bad) rep sub mov rex.R pop pushq shrb jo scas jp test pushq xorl and cs cmpsl jo ss nop push mov (bad) jo repnz pop je sbb imul mov loope push (bad) cld rex.W mov pop mov xor sbb sub insl movabs out adc mov push retq sahf jp jmp jbe idivl mov and fdivrs cmc push push idivb add outsb jp movabs xchg (bad) es sub cwtl and xchg or jle (bad) mov pop fsubl xchg jg fcomip notb sub cwtl popfq rclb (bad) jp leaveq insl xchg jne movsl push push jge pop sub cmp cli jne pop mov jrcxz mov push sbb loope adc fbstp (bad) push repnz lods (bad) ficomp outsb cltd xlat and and je iret (bad) retq negb jno sahf iret pushq sub popfq retq add jbe hlt jbe stos push movabs or icebp and sahf sbb (bad) lods js out mov (bad) jbe (bad) adc mov mov jmpq std insl xchg fistp movsl pushq sub rex.XB rex.WR mov cltd mov mov callq (bad) fidivr jle bts pop or sub mov je xor jl movabs cmp adc pop adc (bad) jg fmuls lret add scas mov mov rex.R mov (bad) stos movsl movabs data16 icebp mov pushq sbb insl xchg (bad) addr32 insl mov jle (bad) stc xor callq scas sub cltd jns clc mov jg cltd push and rex.WXB icebp jbe test jp push jo data16 pushq sbb movabs rol cs loope rex.WR push push pop mov lock pop mov fdivs xbeginq sub xchg (bad) pop stos pop pushq in or pop outsb mov sbbl iret mov lret nop scas (bad) jp sub xchg jle adcb test fwait xor jo (bad) pushq rex.WRXB cltd cmpsb cmc divb sub (bad) or int3 jl jo (bad) pop outsb insb (bad) xor insl out (bad) cmpsl jae push imul (bad) (bad) jbe outsl pop movsl mov cwtl pop and adc frstor fwait jmpq lods mov cltd mov adc lret (bad) (bad) movq pop mov orl cs retq jl lret pushq rex.R lahf or jle (bad) lahf sbb add mov stos insl sti push test (bad) cmp outsb mov callq mov hlt out vsubps loop nop shl sub je xor rex.XB pop pushq imul (bad) movsl jo fldenv outsl stc and in cmp movslq int3 xor movabs jl pop repnz loop xor xchg and in jl clc scas es cmp and jmp push test add and sbb pop jbe js mov fs (bad) push enterq xchg test (bad) sti movslq data16 lahf and and in sbb push outsb jl retq mov in shlw (bad) out rex.WRXB fldenv push fwait adc lret or jmp mov jle xchg ror lods sbb cmp es mov (bad) repz xlat xor leaveq ljmp jl (bad) out andl pushq rex.WB mov sahf lods jle sub jg and (bad) (bad) sub (bad) push rex.WRX mov mov push mov out rex.RXB mov (bad) xor xchg cmp (bad) lret nop (bad) (bad) (bad) leaveq add rex.RX iret not pop rex.WB std outsl add loop mov hlt (bad) test cld add adc (bad) int pop and (bad) push sbb fsubrl add sub and pushq jl or cmp rex.B scas stos test sbb fsubrs rolb sub sub fsubrs ds retq mov cmp xor imul (bad) mov sub (bad) sbb (bad) mov iret mov rex.R int rex.X sub rex.WXB rex push cs cltd mov leaveq (bad) cwtl rex (bad) mov outsl test (bad) cmp add and xor mov cmp shrb (bad) cmp sbb pop jb add fnstcw (bad) rex.B (bad) test nop js (bad) subl (bad) pushq or out in fiaddl pop fdivrs lods (bad) jno mov jmp (bad) loop xchg shr add lods push add and int rcrl callq pop movsb rcll (bad) shrb xor test push cmc test jge fnstenv movslq movabs insl cmp mov (bad) xchg imul scas jb pop mov jo pop fs add cmpsl (bad) addr32 stc and mov (bad) or xchg (bad) rex.WRB xchg pop addr32 (bad) icebp dec movsb imul pop (bad) (bad) or push pop pushq cmc xchg (bad) sub xchg in rex.RX adc insb (bad) ja (bad) xor fwait lea pop and lret jle test sub mov movsl (bad) frstor mov (bad) (bad) (bad) fiadd adc test jle orl (bad) movsl cmpsl jae (bad) (bad) add pop test loop push (bad) push jne retq jns out mov mov xchg xor (bad) shl sub movabs cmpsl add rex.X js stos iret add in adc cmp and mov imul (bad) or pop mov movabs (bad) cmp xchg loope sahf jns (bad) test in sbb sarb and lods rex.WXB (bad) pushq lahf mov mov lods rex.W push or jno out int cmp (bad) int3 jo rex.W pushq rex.XB pop cmc fildll fwait mov (bad) test xchg (bad) int mov mov mov (bad) ss rex.RX icebp (bad) mov add in xor jp mov mov icebp mov add testb (bad) push (bad) rex.R fnstcw loopne rex.RX add rcr fmull (bad) addl movslq (bad) cmpsb mov jg enterq (bad) rex.WRB jg pop outsl repnz jp jne mov xchg lods adc sbb out imul xlat (bad) lods (bad) or decl rex.RB rex.WXB (bad) outsb stos mov sub mov decl je stc push rex.WR rex.X iret pushq mov int jp (bad) pushq js or mov addr32 pop cs mov lea add (bad) pushq int3 jnp pop (bad) mov jne mov (bad) imul enterq and mov movabs sti (bad) out retq (bad) imul xchg sbb mov pushq add in mov (bad) es rex.WXB cs jle and pop and iret lods mov lods cmp pop (bad) lahf cmpl fnstsw rex.W and (bad) mov nop sbb adc leaveq fnstcw pushq jmp scas test scas jae outsb movabs retq lahf (bad) rex.WR sbb mov imul shrb rex.WRX xchg adc jl (bad) imul xor fidivl addr32 xchg imul movslq pop rex.WRXB sahf jrcxz (bad) fmul cmp sbb (bad) pop movabs cmp jo pop xchg testb out (bad) or and jl add push addr32 xchg cmpsb add outsb mov sbb out mov jg (bad) pop rex.X xor negb in outsb movabs rex.R rorb mov cmp insl in int (bad) and sbb cs sti ss sub fistpl lods cmp and pop xor rex.XB cs mov movabs rex.WRB pop cli mov (bad) callq cld scas cli pop outsb rcrb sub jbe add push (bad) sub cmpsb mov mov std fsubrl rcll pop js jl pop adc jno scas lret test rex.RXB jno (bad) mov mov add ja mov lret loop stos rex.X (bad) jl pop xor rex.WRB cmpsb cmp mov rex.WRB bnd imul (bad) mov (bad) (bad) mov push cli insl adc push rex.R hlt rex.X push xchg adc jp pushfq pop (bad) (bad) sub lea scas je lods xor xor movabs test xchg jge rex.X outsl mov movabs xchg pop sub cmp (bad) cld rex.WRX xor (bad) jl imul rex.RXB mov xor xor (bad) jmp lods jg xchg idivb test mov cld pop (bad) clc sub stos jb callq roll jne jmp xchg xchg jbe or or clc (bad) (bad) (bad) rex.WXB push sub int3 imul std rex.WB mov sti repnz rex.WRXB scas mov cli lahf imul xchg (bad) (bad) sbb pushq mov je fiaddl repnz (bad) jnp and fsubrs cmc sahf (bad) fimul (bad) xor jo rex.WRX ja sub xchg push jg loop outsb rex.X xchg jl mov decl lock fwait xor pop push (bad) movslq push adc jp sub sbb add (bad) pop sbb pushq (bad) out outsb or outsl retq imul push (bad) lods sub js pop pop push insl notl pop (bad) pushq jbe mov loop and fdivrs or repz repnz or add fiaddl jbe mov jb lret cwtl xchg cmp pop mov jl mov push lods and fidivl fisubr add pop (bad) jle sbb lods ds pop rcr movabs loopne mov pop (bad) fiadd push imul loopne movslq rex.W jno (bad) cmp (bad) push (bad) jle fcom add xor sbbl and sti (bad) mov sub clc jp mov popfq sbbl pop (bad) test test repz (bad) xchg add (bad) cld jns in insl cmp add lods mov cmpsb int pop pushq push push jns decl push pushq pop mov and (bad) cmp (bad) jbe mov pushq xchg pushq jb idivb ja pop sarb leaveq adc (bad) cmp (bad) cmp cmp jl (bad) (bad) scas rex.WX fisubrl mov xchg data16 push (bad) test (bad) ja retq jnp adc imul out in pop rex.X xorl jmpq nop lods js stc cmp mov pushq cmp rex.WRX lret mov out bnd incl scas ds lahf push in fcomp mov roll xchg cwtl rex.WRX incl add jrcxz add xchg and loopne jg xchg (bad) or or fistp shll (bad) jb icebp push mov insl mov test orb movabs sub cmp jle sahf jne xchg inc mov pop jno hlt (bad) lret mov (bad) repz sti lods xchg mov (bad) (bad) xor (bad) cwtl loope repz (bad) iret jo scas (bad) jl rex.WRXB lcall in movsb adc sahf outsb scas jnp mov sub scas (bad) jno movabs ficoml insb jbe xor jae cmc (bad) movsb mov mov (bad) data16 pop iret pop mov jmpq in lea rex.RB fxch xchg (bad) (bad) (bad) sub (bad) adc (bad) or and pushq cmp sarb or cld fcompl (bad) mov sarl jg jmp jne std jp jae out int3 lahf fs movq rex.XB test (bad) rex.WXB int xchg and rex.WX rex.WRB sbb xchg xor mov xor mov rex.WR rex.WRXB rex.WXB enterq (bad) sbb and rex.WRX add (bad) rex.WRB add stc jrcxz rex.WB vmwrite rex.RXB xor cld mov (bad) fwait jb adc movabs sbb xchg mov mov out and xchg add (bad) sub movsl add movabs sbb rex.RX stos lcall jbe sub nop iret lret clc cmp movabs insl pushfq icebp out or cmpsl rex.WRB mov jbe and push (bad) jge xchg jp mov (bad) lods cmpsl sbb and and (bad) fcompl jmpq fdivrp iret lods add sbb push movabs test add loop or in cltd (bad) jp rolb xlat outsl (bad) (bad) and fs rex.WRB stos (bad) std jae insb test roll retq cmp pop (bad) mov mov loop cmp test fldt std or cmp lret fdivrs mov shlb iret imul or (bad) sub jb js sbb and movsb (bad) sub scas out sbb rex.WRXB (bad) imul rolb add or jb xchg leaveq mov xchg mov pop (bad) cmp pop mov add rex.RX xchg sbb jne jrcxz mov cs add or scas jo cmp sub push cmc loope stc (bad) pop jge add in es cmp mov sub retq rex.RX je pop or (bad) cmc stos rex jno xor (bad) loope stos mov (bad) in cmpsb xchg pop add jg scas rex.W jrcxz rex and mov xchg in and xchg rex.XB push xchg mov (bad) sahf add (bad) rex.B xor idivb mov (bad) imul fs mov (bad) jbe jns lods mov movabs push (bad) pop int jrcxz add (bad) (bad) mov jnp popfq (bad) xchg mov (bad) movsb repnz loopne (bad) (bad) (bad) es imul adc rex.RXB sti movabs sub pop cmc rex.WRB pushq stc out jrcxz rex.WRX (bad) add push xchg mov cmp jnp and sarb fistpll (bad) mov iret (bad) imul mov jl mov fisttpll loope mov rorb int3 (bad) imul cltd cli (bad) mov mov add stos (bad) lods jl rex.XB fldt (bad) shrb mov sbb sbb (bad) and (bad) xor data16 callq iret rex.B pushq rex.WR rex.WRB (bad) jne sbb jle lret cmp (bad) cld movabs xor (bad) jbe (bad) mov jp (bad) movsl movslq mov xchg and cli movabs (bad) jae fwait push pop mov add imul sbb jno ljmp std lret cli (bad) cld push mov gs addl rex.WR std pushq mov jge (bad) cmpsb push or jle icebp rex.WXB bnd imul lahf loopne (bad) (bad) pop (bad) icebp rex or sahf mov sub mov add pushfq movabs hlt pop jns leaveq data16 (bad) scas add jmpq push and add (bad) fcmovne xor sbb xchg lea stos mov or lods jae test sub and jp xchg mov jno rex.RB rex.RX rex.XB insb retq movslq add jmp xchg mov out or iret (bad) xor adc jno je rex.WRX (bad) jle fistl pop mov sbb cmc adc pushq sub pop sub sub lahf (bad) mov setle mov (bad) lahf stc rex.XB rex.RXB fidivl test sysexit int3 (bad) pushq movabs je xchg rex.WRX shlb (bad) (bad) or sbb fnstcw mov jl gs adc fiaddl loopne repz push (bad) add push out icebp cmp sub pushfq xchg sub jp mov jle (bad) (bad) in shlb xchg (bad) add (bad) jmpq cld js mov push int mov xor jbe pop repnz xchg jmpq sbb movabs mov pop jmpq rcr insb fdivrl mov rcll stc cwtl add jge and jg (bad) mov rex.R push and (bad) int3 adc sub cmpsb sti xchg test jg movabs cmp and pushq add mov movabs adc mov jle movabs in lea mov movsb movabs add insb es cmp iret rex.WX out rex.WXB in cli add pop gs add scas lea pop (bad) out jno mov pop add popfq mov insl pushq std pushfq cmpsb rex.WRX cwtl or (bad) rex.B adc mov pop jle mov cmp jae scas push js mov adc int3 (bad) (bad) add repnz pop jrcxz (bad) callq pushq rex.RX add mov (bad) gs (bad) add jrcxz sbb and jne cmp repz out sbb lock decb (bad) add and mov (bad) loope int3 (bad) xchg sub (bad) or add lock sbb rex.R out push mov sub or adc sub fsubs jne mov pop sti rex.W pop jle pop jne (bad) lods jnp push andl jge jns jno pushq sbb sbb shl test pcmpgtd loope mov add jmp (bad) xor in xor ja xchg mov add callq cmpsb add in or fwait fs test (bad) xchg sbb pop and mov rcll loope mov es (bad) loop mov push (bad) insb adc outsb lea popfq stos and lahf jle rclb out imul push add pop cmpsb mov pop add mov push idivl (bad) mov jrcxz rex.WRB (bad) fisttpl retq mov stos (bad) movabs imulb adc callq or out xchg jrcxz push sbb xlat rex.WRXB jb fdivrs leaveq int3 cmc mov rex.X es sbb jno fdivrs pushq (bad) fiaddl add lods jmpw and mov add mov (bad) leaveq mov insl mov (bad) mov pushq (bad) js vdivsd rcl jp iret or (bad) imul retq push jp outsb xchg adc jg movabs rex (bad) cmp xchg jmpq iret rex jb fildll rex rex.RB jrcxz xchg cmc (bad) (bad) add rorb jns lahf rex.R rex.WB mov jmpq add outsl mov sub pop mov (bad) cli add icebp push stos cmp jge mov shlb sti sbbb adc jo loopne add in je in jle jne sbb retq outsl movabs mov rex.X es rex.WR addb add movsb fsubrp je (bad) cmp or add sub retq rex.WB (bad) (bad) mov icebp (bad) lea (bad) jnp js out add clc test xor hlt (bad) and (bad) jp cltd xor (bad) sbb ds stos (bad) add cli push popfq fnstcw rex.WRXB add (bad) stos lock sarb (bad) jns mov cmp xchg sub (bad) out je movsl xlat hlt or add insb rex.WR fiadd cmp jae nop xchg push (bad) pop (bad) sub int3 out xchg mov rcll add push hlt sbb and sbb fwait sub mov popq rex.WR es mov mov rex.RXB std pushq rex.WRXB xchg jmp fadds jo mov (bad) jp xchg pop (bad) xchg mov std sbb movabs in pop not lods (bad) sbb in sbb jnp jp mov mov sbb (bad) loopne (bad) or add xchg xchg mov rex.WR add retq (bad) add mov rex.RXB mov stos testb xchg (bad) and clc vmovntps jg push movsl sub xor and stc mov mov (bad) (bad) scas rex.WRB std (bad) test adc push (bad) fldenv sub int3 xchg stos and and push (bad) scas add cmp cltd mov loop jge leaveq rcr sbb (bad) retq (bad) cmp (bad) rex.R fcomi add jb mov xor rex.R sbb jle jp push stos xchg rex.WR push cltd in pop jmp or imul outsb and mov sbbl nop movabs fdivrl mov push adc lods rex.RX ss (bad) repnz fwait sbb popfq (bad) insb sub push cmpsb sbb adc add mov (bad) fdiv add adc pop rex.WXB movabs pop (bad) pop outsb jge (bad) jmpq cmc mov rex.RX fwait adc xchg rex.WB pushq mov out mov out sahf mov sbb cmpsb scas enterq jl and es testb pushfq ss lods sbb xchg lcall cmp js data16 jge imul (bad) mov mov add or add movabs mull sarl (bad) loop data16 pop xlat outsb xchg (bad) sbb test jg popfq pushq hlt add mov cli shrl sbb add adc nop fidivrl and movabs paddq mov (bad) jle mov outsl mov and sbb out popfq xor add jb outsb lea rex.WX xchg mov (bad) insb jmpq add lods je pop (bad) push stos (bad) cltd rex.WX sub jp jo (bad) imul (bad) (bad) rex.X cmpsb xchg pushq stc rex.W scas add sub mov (bad) add mov es lods (bad) jbe mov decl jg sub add or je mov test jae (bad) rex.WX add cmp rex.W xchg je jp data16 (bad) (bad) ds (bad) xchg or jg or out jle lea jg push sete shrl or jg cmp add movsb hlt and pushfq fnsave mov and rex.WRX cmp negb (bad) hlt in fcmovnb loop insl jrcxz cli (bad) stc adc outsl xor add mov and pop (bad) and (bad) jle ss rex.WR xor mov callq in add testl push add rex.WRX add pop andl in (bad) js enterq cmp rex.W rex.WRXB jge push callq jbe or push jae stc add or add push rorb loop adc lret out cmc jg mov cmp sti or add rex.WX fsubs fisubl lahf ds rex.WRXB (bad) fidivrl sub cmp rex rex.WX add mov sbbl add out std (bad) xor and add movslq mov add cwtl mov scas rex.WRB jb fsts rex.WR mov cli sbb or (bad) jns (bad) or movabs in add cmovnp (bad) sbb std mov jg jne mul movabs xor movsl xor (bad) mov rex.XB (bad) cmc jae mov rex.RX push testb mov add and adc movsl rex.R mov push (bad) cmpb cltd int3 or movabs movsl mov lret mov push or (bad) sub cmpl sti sbb adc (bad) (bad) sahf (bad) rex.WRX add add rex.RXB imul and jne pop xchg rex.X xor movabs mov (bad) (bad) xor xchg xor xchg xor test fbld add (bad) cli add stos or add movabs outsb rex.XB sub jb pop mov pop jmpq (bad) retq rex.WB cmc adc mov ja add xlat cmp jg out jle cmp (bad) xor xchg add callq (bad) jno nop sahf (bad) xor xchg (bad) xchg mov add push xchg enterq cmp mov ficom add mov ja rex.WB ds add sbb add lea jmp insb nop jbe loopne int3 pop sub loope fwait cmp sarl (bad) xor mov sahf xlat (bad) add (bad) and leaveq lods ss jl js xchg push int3 (bad) stos pushq sbb jnp lahf insb scas add je sbb movabs jg jmpq sbb mov roll shrb mov rolb fwait (bad) and nop sub (bad) (bad) loope and sar jmp test (bad) sub movabs add test (bad) mov jb rex.R testb add rex.WRB mov cwtl xlat in add cltd rex.B movsb add pop outsb rex.RB add in idivb pushq cmp (bad) decl rex.RXB mov sbb add shrb mov test leaveq jp imull lea rex.WRXB shl pushq (bad) (bad) jns loop add mov cmpsl mov mov scas cs sbb pushq mov ja addl (bad) js mov add push mov (bad) (bad) cmpsb mov rex.W pop jmpq insb add repz mov ss (bad) sub cmp or loopne notb callq add pushq data16 xchg or mov or outsl cmc lea xchg pop pop xor hlt pop movabs (bad) in (bad) js jp fnstenv insb ds rex.RX adc std push mov icebp or sub mov add rex.XB sub xchg sarb in (bad) gs mov push (bad) fisubr add adc out rex.X int pop imul jl,pt xchg add out mov (bad) sahf add (bad) sub mov cld (bad) outsl repnz jg fnstsw xor rex insb movsl mov imul xchg movb orl add loop rex.RXB rex.RX cmc ja jb jmpq (bad) fildll mov fiadd addb xchg (bad) mov jle pushq movslq rex.RB and sub jae add push mov cltd and mov cmpsl mov or adc rex.WRB push adc iret pop lret pop andb pop jl xor scas adc out rex.RXB int test mov xorl in mov rex.W (bad) jle lret and mov jp fldt repz (bad) js (bad) cmpsb movslq (bad) sub pop xchg (bad) insl sub rorl (bad) (bad) jne rex.WB js (bad) (bad) jno test ss scas idiv leaveq pushq fcomps jl rex.WRB in (bad) roll je sahf ds decl mov movabs jp imul rex.WRX (bad) in cli push movabs xor (bad) or decb rex.WXB movabs es (bad) in test (bad) sbb rex.WRX mov xor sbb cmc rex.WX xor push scas adc add addl sub movabs (bad) lcall xchg add cmp push add hlt (bad) xchg test mov or mov push xchg addl (bad) hlt fsts lods loopl rex.B rex.X mov clc jae add in sub xchg stos push jl xor sbb lahf lods (bad) push add scas (bad) cmovge pop mov leaveq pop movsl (bad) mov mov popfq jp (bad) movabs (bad) push adc (bad) (bad) fsts movl rex.WRXB jl loope jl mov xor (bad) or mov jmp or scas lret mov nop test jb rex.RB (bad) lods jl shlb jp scas (bad) gs and or stos jl ficom scas retq pop cmp clc jg nop rex.WX rex adcl lret xchg pop pop clc sub loopne lods insb jbe mov lods jae lret mov jnp mov movslq xchg mov xchg jae ljmp ss or imul insl push (bad) or (bad) (bad) clc movabs cltd mov xchg mov int3 push rex.WB fwait mov je jg and and movabs leaveq sub (bad) jmpq sub mov (bad) movslq lods (bad) (bad) or (bad) rcrb lret out xchg in nop (bad) in xchg mov je lahf (bad) xchg in jle or insb jge lret (bad) mov int (bad) xchg repnz loope and in fucomip or add jbe imul mov add ds mov (bad) push push frstor rex.RX pushq ja rex.WR adcl and je (bad) pushq mov iret pop jo cmpsl (bad) pop stos insl push stos adc sub leaveq scas xor pushq pop or rcrl loope adc sbb lea frstor jns scas test jno rex vmwrite cmp jnp hlt xchg mov sub sbb retq imul movabs test lahf roll jmp mov fildll mov (bad) int rex.WRXB jl insb test mov or cmp fadds lahf mov sub xchg add rex.R outsb (bad) out mov mov sub cld jge fmul divl js cmp sahf jo pushq sbb shr mov faddl add mov add pushq fistpll rcll cmp testb xchg mov (bad) (bad) and push cli mov pushq (bad) mov and in adcb pop xchg mov (bad) xchg in outsl fisubr push cmp dec outsb js adcl pushq divl cmp rcl sub xor rex.RB (bad) enterq or mov lea push movslq ds mov (bad) (bad) rex.WR pop mov jbe (bad) pushq or mov jle pop test cmp mov pop mov xchg adc add out je in (bad) movsb and imul mov jmpq (bad) lret jp rcll mov (bad) mov lock mov mov rex.WXB (bad) ljmp int jmpq (bad) adc lods add jrcxz loope,pt (bad) lea outsl test jns or jrcxz push pop (bad) scas push outsl push pop mov push and mov sti cmp je test (bad) mov add sub xor cmp or jle push pushfq pushq test test sbb (bad) gs (bad) movabs adc add (bad) rcrl mov cmp movabs adc out add rex (bad) rorl lock ljmp pop (bad) jne sarl out cmp jl lret lods sub add jbe retq (bad) push jl jrcxz (bad) iret pop in icebp jge lods (bad) repz xchg pop cmp rcrl sbb pop cmc ss adc jmp and jb add cld rex.WRXB lods sbb mov cmp stos rex iret rex.W add test rex push adc rex.WRX pushq xlat mov movabs mov adcl sti nop jp mov rex.WRX cmp push mov jp adc (bad) movsl negl ds cld add mov (bad) mov cmp (bad) in (bad) jl enterq pop push cmpsl add jrcxz cwtl loope rcrl and xchg xor adc mov pushq mov jle cmp pop pushq jnp sub cld xlat jge xchg stos add pushfq pop (bad) js fnop xor mov xlat enterq and (bad) jne loop pushq mov cmp shlb (bad) pushq movabs fidivrl (bad) sarb (bad) cli sbb mov movabs outsb xchg out jo movabs outsl (bad) adc pushq movabs jle (bad) (bad) mov loopl lods jb and pop xlat rorl push lods jo push push or (bad) cli jle cmpsb je adc pushq (bad) sub and jo pop mov jmp jge xor xchg add jbe imul push mov mov sbb or and sub sarb (bad) imulb (bad) xor push inc push loope fildl and rex.B cmp (bad) (bad) cli rex.RX sbb and pushq insb xor stc in rex.R mov decb cmp (bad) and add rex.WXB vmovaps xchg pop movabs mov add and (bad) cmp xor movb xchg add lahf sbb in movabs cli cltd adc sbb fdivrl (bad) mov (bad) jb add clc jno (bad) xlat jbe or shl xchg iret repz (bad) movb lock (bad) je (bad) add rcll add mov mov lods xchg pop add add hlt cmpsl add fwait (bad) push stos (bad) sarb rex.W rex.R rex.RXB mov jle cmp bswap repz (bad) test int3 rex.WXB rex.RX rex.WRX cmp decb xor addl outsl add neg add retq int mov (bad) callq add (bad) xor add ja adc js (bad) jl out es push mov (bad) jl adc xor (bad) mov rex.WX jl rex.WRXB repz mov mul mov mov insl rex.R add lea mov push (bad) movabs rex.W out and mov or (bad) retq fldl (bad) lcall leaveq ficomp movabs cli fadds sub adc adc (bad) imul rex.WXB nop jne movslq or cmp cmpsb add adc divl (bad) jg movabs sbb add (bad) mov lock pushfq jrcxz cmp (bad) sub xor xchg jne icebp sbb mov jae jnp movsb or jo iret xchg mov pop sub pop sbb mov mov mov (bad) pop add jmpq jg out xor rex.WXB movabs sahf jnp (bad) add and jo in fidiv retq (bad) test imulb pop add rcll mov (bad) fdivl orl pop (bad) rex.WRXB movabs push (bad) outsl xchg jle test sarl movabs mov xor in rex.RXB or rex.R jb add (bad) pop js (bad) movabs and je mov (bad) or jl and stc pop jns pop mov (bad) sahf mov sarl jo mov xor add lock mov (bad) jle xchg std mov mov (bad) (bad) (bad) ss add jbe lock jle stos or outsb insl movabs add cli mov adc jmpq and push jg mov hlt loop jl in xchg cmp xchg sbb roll jge cs lods push loope (bad) mov add notb rex.WR out cmp add and jno (bad) add (bad) jb pushq (bad) rex.WX out outsb (bad) adc mov push ds adc and rex int (bad) (bad) (bad) adc lret sub mov lock push xchg sti rex.WR pop add jg push xor rex.RX rolb mov cmp adc push movabs cmpsb push imul add or js pop mov sar mov rex.WRX sarb xchg cmpsl enterq or (bad) out lock add push (bad) jl xchg ss sahf and jp test pop adc stos jle sbb xchg xlat fs cmc push mov int3 add fstps test loop imul (bad) jb or jg mov mov lcall sub rex.WX out and jo jle sar shrb repz jle jne adc add retq add (bad) pop lods add adc xor std jl (bad) or add test addr32 (bad) fdivs jle jle (bad) mov js add and int3 sub adc rcrl sbb mov lea sbb fmuls rex.RB jle jl add lods mov hlt and (bad) out push and push mov rex.RX iret test incl add mov fdivs jne stc adc rex.RB rex.XB adc (bad) jle and out (bad) retq (bad) test (bad) xor (bad) pop jp movsb pop mov (bad) loop sbb movsl mov xchg loope loopne cwtl scas fs add rorb (bad) repz sahf (bad) (bad) add stos (bad) rex.WR xchg mov mov outsb and fsts mov pop add je icebp xchg in pushq out add rex.WR jge insl rex.W rex pushfq jae sbb xor cmp mov jb hlt mov (bad) (bad) retq pop in adc outsb addr32 sub lret sti fwait out add mov jge mov hlt (bad) jp,pn (bad) fs int3 sahf xor sti add adc ss push cmp callq and sub pop xor rex.WRX add fiaddl fldt mov ss cmpsb or xchg push cmc popq enterq imull sbb sbb cmpsl add rex.RB pop or jnp idivl je ss nop out add rex.WX add adc jmpq orb or mov jl add mov (bad) mov and rclb jmpq sbb (bad) sbb jl jg mov mov in out rcl (bad) xor mov sub xlat xor adc fwait and mov insb jae,pn sub sbb test adc stc mov int cmpsb mov jle rex.R loopne xchg (bad) lock add xchg ror sub jle xor cmp mov iret pop cmp lods rex.RX push add retq add (bad) (bad) repz cmp xchg icebp retq repz pop leaveq lods xchg xchg insl mov xchg adc add sbb xchg in repz mov stc test rex.WRB add sbb mov push mov sub fs cmp movabs loop icebp jne nop leaveq add adc mov sub rex.R movabs fnstcw or sub push js rex.XB rex.RXB jae add lods movsb xor std notl rex.WR cmpsb (bad) mov add xor push cmp pop or xchg pop rex.WRX rex.X add cltd mov jb rex pushq movabs incl xor jmp pushq rex rex.WXB fwait mov mov mov or stc xchg adc add (bad) (bad) mov mov sar enterq int stc xchg testl hlt test cmp mov (bad) sub nop (bad) (bad) pushq push mov rex.WRX rex.WRB mov rolb mov (bad) xor jg mov cs xchg jle std imul rex.WRXB jbe iret fsts (bad) js (bad) (bad) sbb add xlat jmp mov (bad) jb and xchg jg mov or (bad) jle adc add addr32 int3 movabs adc (bad) jno add mov rex.W fwait and rex.RX test movslq jge mov jl mov and lea ja fcompl add int3 (bad) stos push pushfq cwtl jp jb (bad) and js ljmp xchg test retq xchg lret xchg xor in add cmp sbb add scas clc fiadd xor lods pop mov (bad) sub cmpsb mov rex.B fs outsl jl rex.X in lea add insl jle pushq rex outsb (bad) rcrb push gs adc rex.RB jge jmpq fsts mov (bad) data16 lret (bad) callq or rex.WRB jle fldcw jbe jg fsubl iret insl mov sarl je (bad) mov jmp (bad) adc pushq outsb mov jl cwtl and out test js (bad) or pushfq add (bad) pushq imul rex.WRXB cld hlt callq push pop xchg add je scas or jns xor icebp cmpsb addr32 mov in out lods jns jg imul in outsl add cmp movslq sub (bad) xor add movsl iret xchg stos mov (bad) in jns jg sub and jb mov pop sbbq mov (bad) xchg iret fistp mov or outsb mov je fwait push jb cmp in (bad) ss xorl mov movabs cmp and cmp (bad) pop rorl add fcomip retq (bad) jae (bad) sbb jle mov mov sub cmc xor movsb scas out pushq sbb cmp pop rex.WB incb add int adcl (bad) (bad) stos jmp (bad) std adc jle jp movabs mov (bad) adc lods add stos xchg cs imul cmp sub movslq jns mov (bad) push mov push xchg or add jbe lret outsl xlat cmp or (bad) std add callq scas mov out enterq loope pushq (bad) (bad) add fdiv mov je movabs (bad) pop rex fs js roll cmp xor pop add xchg pushfq xor fcomps add jo (bad) (bad) sahf gs shrl rorb fmull push lock add (bad) retq (bad) sub jbe cmpsb rex.RXB and jb mov fldcw test stc pop retq (bad) (bad) sbb mov cmpsl add (bad) rex.WR add mov out jne pushq sbb addr32 jg orl rex.RB xchg push test popfq pop add out shr adc add movabs jno adc (bad) push and jp popfq jl rex.X rex.WB xor stc int3 rex data16 es nop test movabs test fistpll (bad) (bad) (bad) mov mov sbb add rex.WRXB jp and callq jne movabs std (bad) out (bad) retq cs clc xor mov xor (bad) jbe test cmp mov cs (bad) cmc cmp jb (bad) adc pop xchg (bad) stc (bad) mov rex.X xor add orl and and lea movabs xor jb or xor fmuls (bad) popfq stc (bad) or fcmovnbe fs mov scas xchg xor out movslq jg lods sbb push fldt ss loope ficompl cltd xor push js add imul or lock fstp pop or int mov jp mov outsl mov stc fs notl sub rorl out mov xchg add clc xchg ss mov in jp loopne cmp mov (bad) cmp jo in lret mov add repz sbb jl adc rex.WRB enterq ja mov mov sti rex.WRB fwait add (bad) and jle loope jb jl (bad) adc mov xchg stos jle out repz xlat out xchg mov rclb jne and (bad) (bad) in push js mov out fdivrl pop sti jo pushq (bad) sti xchg out shll stos pushq cmp xor hlt rex.W mov sbbb adc retq mov data16 xchg lfs jg std xor gs add jrcxz mov nop (bad) cmc movabs sub testl rex.WB mov (bad) mov fbstp (bad) pop clc jne add rex.WB mov lea or shlb mov lock and lret mov mov xor (bad) iret mov ja mov loop rex.RB movabs stos mov add jnp (bad) ja rex.WX std in in jge data16 cmp xchg (bad) fucom pop and (bad) adc mov mov seta sub shlb push or pop cmc rol movsl rex.R jle or push icebp int (bad) (bad) and repz sbb xchg pop (bad) cmc loope (bad) sahf add imul pushq cmp add xor clc jg push mov faddl pop (bad) pop push loop add js movabs (bad) clc stos jne out rex.RX rex jg jno xor sbb cltd adc sub sbb jnp cmp add repz pop xchg sub (bad) mov leaveq loop scas xor bnd fdivs rex.RB (bad) push xor rex.RX movsb (bad) (bad) and add mov or subb movabs movabs (bad) (bad) and rcrl int mov pop callq cmc add (bad) (bad) mov mov add pushfq and sarw mov test fldenv cwtl scas (bad) add cmp mov int3 mov movabs outsl and shll es mov or jle pop push adc fidivr (bad) jb adc or test adc and rex.RB (bad) or (bad) (bad) cmc push mov incl push (bad) xor jae xchg rex fs movabs jl retq push scas inc lods nop xor movabs add lahf (bad) jae rex ds adc enterq in xor (bad) (bad) jns mov xchg (bad) fdiv jge je sub (bad) out cmpsl mov adc jge pushq mov (bad) jb sub lods (bad) mov fsubr xchg es fnop pop lea cmp jb and or lahf lods jae rex.X rex.RX xchg lahf and fadds js adc fstps out (bad) jl (bad) adc fbstp rex.WB jrcxz shrb adc hlt (bad) mov mov xchg pushq int3 cmp jb or (bad) sahf add out sbb (bad) mov mov sub idiv add loopne cltd movabs sub add and add rex.RXB addr32 xchg nop (bad) add shlb cmpsb jrcxz cmc mov retq and (bad) jne or add (bad) pushq rex.WRB and (bad) rex.W rex.WB add adc cmpsb out (bad) cmp repnz fnstenv xchg add fiaddl fistpl or jnp jle jle out and add jb insb clc jp mov test add jns (bad) adc (bad) add rex.WRB (bad) mov out and test add cli cmpsb add pushq push hlt (bad) repz pushq xor sbb cmpsl sub divb jbe outsb repz lock iret nop lahf rex.WXB (bad) rcrb adc es es in add rex.RX (bad) add xor (bad) pop jno (bad) sub sahf negl lods rex.R pushq sbb push xchg rex.WRXB stos rex.WR and and rex.RXB rex.X (bad) clc (bad) xor rex.RX rex.WXB fisubr movsl insb js add jns xor mov add test rorl rex.R rex.WRXB (bad) push in fidivr push insb sahf mov rex.X out push (bad) pushq sbb imul mulb out add in vandps pop sbb retq pop add rex.WB fdiv push mov clc mov jle callq xchg (bad) jg std (bad) adc jb jp (bad) jg repz rex.WR add out cmpsl jge mov (bad) shlb mov push js jne fadd cli jb mov (bad) fwait repnz incb lahf (bad) pop xchg lods xchg rex lods rex.WRX mov add js outsb cmpsl sub add adc push cmp rcrb add hlt in mov xchg fcompl lahf imul mov sbb imull (bad) pinsrw imul retq movsb in xchg add pop or movabs movslq xchg rex.WB sub sar rex.RB retq imul (bad) add scas fucomp (bad) jmp jl popfq in cld push and rex mov rcr outsb shlb adc xchg mov leaveq mov xchg (bad) sahf imul xor adc push jno loop je mov (bad) sub std cs jne add incl movabs and (bad) sub cmp xlat mov or add push std (bad) and mov and rex.WXB or jle jg mov movabs retq js rex.RX (bad) (bad) jg movabs retq movslq pushq (bad) sbb mov fisubrl mov add fnstenv (bad) cmp movslq jle in cld and rolb addr32 add nop or stos fisubr add test mov add in rclb rex.WRX mov add add mov hlt adc scas test push jb push (bad) sbb fxch mov (bad) outsb xor icebp data16 sbb xchg and rorl (bad) (bad) cmp or jne sub lea jle pop fimul repz cmp (bad) add or xchg mov (bad) (bad) add mov add (bad) jg out cli (bad) xchg (bad) or xchg lahf rex.WX (bad) xchg fwait sbbl es int or repnz jnp mov mov jmpq sbb pop sbb pushq iret cmp mov pushq testl push pushq ss (bad) (bad) mov sbb pushfq xor pushq rex jle sub jnp pop (bad) jge jle movsl pushq sbb xchg jbe (bad) lret mov pop rex.X jle std retq xchg push rex.WXB lahf xchg jl push jmp out (bad) decb rex.R sub jl frstor iret xchg je jo out scas rex.WRX jle add cmpsb out cwtl add jrcxz lock mov adc cmp or sub sbb add jno mov and (bad) mov fcompl or pop cmp test xor (bad) (bad) xor or movsb fisubr (bad) insb (bad) push jb cld adc jbe callq (bad) je callq jnp (bad) (bad) int (bad) jns add fnstsw mov pop iret (bad) cltd add or sbb repz imul ds xor data16 test jp xor xchg std add xlat (bad) adcb icebp add jno and mov push adc retq (bad) sahf jbe icebp int3 xchg mov mov mov retq (bad) add (bad) loope sbb repz add rex repnz mov sbb (bad) imul (bad) add (bad) outsb hlt sub clc cmp movabs and or add lret (bad) xor rolb (bad) xchg hlt sub scas or push pop xor (bad) mov imul sub adc movabs insb mov sub jle mov lahf rex.WR rex.WX stc pushq xor push and (bad) push jmpq lret pop mov in movabs cmp add mov push jrcxz popfq stc leaveq enterq mov cmp (bad) lret outsb stos mov rex.X or test xchg push xchg int3 incb leaveq (bad) rex.X (bad) jb rex.WB rex addr32 mull stos add add and cwtl xchg gs add movabs mov (bad) pop and rex.X xor movabs int3 test push andl ficoml add xor sub es push xchg jp jle pop ja fidivrl mov add lods mov pop adc mov mov and repnz jle std adc add out fwait add jns add sub out and out add pushfq sarl (bad) imul loopne xlat (bad) pushq pushq xchg jl test es fistl (bad) pop (bad) rolb pop fisub add out jge add add (bad) addr32 jb loopne sahf mov scas shrb icebp orl or add xchg xchg int3 je adc add hlt cmpsl rex.WX pushfq (bad) mov js ltr int3 cltd repz in std jae (bad) sahf mov (bad) (bad) or imulb jns jg retq sub (bad) cmp out fnstcw cmc cmp (bad) pop adc lea sbb xor jae add out repz xchg jl (bad) mov xor fnstenv add hlt cwtl add (bad) xor mov movabs dec std push es gs clc pushq jb outsb add sbb movsb add test (bad) scas add sub lock jl mov lods scas stos cmpsb jg jb movb adc mov (bad) idivb add rex.WX movabs xor cltd (bad) insb jne xchg jp pushq cmp sub add int3 icebp (bad) add out cmp cli add (bad) out push mov lea (bad) mov (bad) cltd jmpq add ja shlb mov add sbb ja (bad) adc (bad) pushq cmp sahf and jno clc cmp push rex.RB (bad) movabs fdivrp rex.RX mov cmpsb (bad) or and rex.WRB xor jo pop bnd or ss sbb hlt add mov push rex xchg mov out cmp sbb pop mov jne mov jg rex.R (bad) xchg popfq retq test leaveq add xchg retq stc js (bad) mov pushq (bad) jp rex.RXB fdiv (bad) (bad) xor mov sbb add push rex add fimull (bad) movabs notl lret rex.XB int3 mov rex mov lahf stc xchg adc xorb (bad) (bad) sahf xor mov jae or rcll or rex or mov jle test nop sub xchg pushfq idivb (bad) push jp rep add sub movsl neg cwtl mov out add movabs mov retq (bad) jbe add or out sub add retq pop jle (bad) outsb push jg xor iret (bad) xchg (bad) add lods outsb xchg add ficom jbe and popfq jl and sti rex.WRB rex cmpsb jle fidivl sub rex.W nop je repz sbb rex.RB rex.WRB sub outsb scas test fldl cmc mov xor or (bad) add movabs xlat imul or (bad) rex.RX fs (bad) (bad) jnp (bad) test add xchg cltd or popfq sub callq mov add (bad) and sbb rex.RB add int3 xchg (bad) jge (bad) rex.WB (bad) jle sahf mov idivl cld sbb cmc cmpsl (bad) push ds or jle jg xlat xchg (bad) pop jnp pushfq mov xchg roll lret sahf lahf rex.R push pop mov insb int gs fiadd add cmp or (bad) mov pushfq mov pop ss and jp repnz sbb rex.W gs rex.WRB scas xor fs jns (bad) jle std pop mov retq fwait pop adc (bad) mov imul mov cld mov (bad) (bad) pop lret mov fs (bad) xchg out jbe cltd cmp cmp xor js mov pop mov test stc popq jp cs add mov pushfq sbb (bad) jns sbb (bad) movsb xor (bad) fild add fwait and sub jg push push cltd movabs and (bad) leaveq jg rex.WRXB jo clc fisubr retq jl outsl sub movsb fs add jl xor mov add fnsave jbe repnz roll add xor jp (bad) out jle jae iret sbbl add rcll mov mov callq std pop jl (bad) (bad) or adc jle pop xchg or push add push icebp popfq cmp jne xchg mov and mov adc (bad) push idiv jno ror add mov callq comiss cmpsl divl ds retq jg add (bad) pushq rex.WB and repnz add stc and (bad) pop pushq rex.W or out jo xor pop jnp jge test push add mov loope int add or fs xor jo mov sub movabs add lahf cmpsl rex.WRX rex.WR jns icebp cltd (bad) sbb retq movslq mov add out ds callq (bad) pushq lret jl and adc lea test add je adc (bad) sub pushfq add rex.WX sub add (bad) cmpsb leaveq sahf sub rclb out rex.XB cmp rex.WRB faddl jle xchg scas jrcxz pop xchg rex.WRB add (bad) jne nop xor add es movabs rex.WX sub movabs subl out lret scas cmp (bad) test add mov je mov fistpll shrl shrl (bad) jbe mov mov add (bad) pop add xor retq mov insl movabs (bad) and icebp sub (bad) and (bad) and lods callq scas and out xor push fnstsw nop (bad) loopne jg (bad) fidiv imul insl rex.WXB rex.WX ja xlat add mov adc adc add mov nop cmpsb rex.X sbb out and rex.WRXB mov mov xchg cld xchg push notl jg mov fidivr (bad) ja push (bad) ja (bad) adc cmp mov pop scas xor outsb (bad) fcmovb add push jl jle and es xchg (bad) out cld cli pop out pop (bad) (bad) jle mov jp pop mov fimul imull jl mov jg rex.XB sbb cmp jg movslq jg loope mov (bad) add push sub or (bad) hlt scas repnz sub jbe (bad) test std fidivl cmc cld lods retq pop or sbb rex.WX sahf pushq rex.WRXB (bad) cmp (bad) (bad) xchg mov rex pushq (bad) test insl xchg icebp pop jg (bad) loope mov push adc pushq jg sbb fs ds movsl (bad) cmp jb pop fisttpll jmp rolb pop lock sbb (bad) and jg int3 (bad) lret jns push add xchg and add iret mov mov mov subps fwait (bad) rex.X sarl mov jb in pushq mov cmp test lock xchg (bad) gs rex.R rex.X leaveq and push nop sahf rex.RXB jbe jmpq adc mov jmp xchg rex.RX iret ja stos outsb ss push js rex.RX rex jmpq subb rex.X adc xor cwtl jrcxz (bad) (bad) rex.WB pop shlb xor xor mov rex.R jg push pop rcll push (bad) jnp adc sbb sbb in cli (bad) pushq stos pushq rex.R xchg rex.WXB xchg mov add add cltd mov rex.W rex.WRX sub fldl sti divb mov (bad) ss movabs (bad) mov (bad) mov test add in xlat add and imul (bad) or add pop (bad) sar (bad) xchg add insb movl sbb sub rex.RXB cmp in out lret mov callq add movaps xchg iret negb add in mov xchg jle sbb mov cmp mov and mov outsl add (bad) push rex.WXB adc (bad) add notb cwtl jmpq (bad) clc cltd mov stos lret and (bad) addl (bad) sbb mov fidivrl rex.WX cmpsl iret jg jle add (bad) enterq pushq add (bad) and rex.RB cmp pushq rex.RX (bad) (bad) xor add int3 outsb or push rcll (bad) pushq xchg rex.R ja rex add nop pop mov add mov push mov xchg rorb add cmp movsb int jp rcrb mov add pop and in rex.WB bndldx add rex.B pop or (bad) mulb sarb andl pop xor (bad) jge xchg and divb pop pop movsl testl callq mov mov xor repnz rex.B jl popfq pop fmull fcmovne add jge xorl mov (bad) scas (bad) xor loop movabs xchg rex.X jno addb jle cmc jb hlt out nop pushfq push cli in int3 test cmp sahf jo gs adc (bad) push mov cli popfq rex.RX rex.WRX repz js (bad) xchg fsubrl je in jg xchg imul data16 (bad) jle jg lret stc xchg rex.WRB jl stos movslq rex.WB mov scas mov ja movabs (bad) js jbe (bad) xor test sarb pushfq (bad) mov leaveq enterq (bad) pop out ror (bad) (bad) cmp iret jl jae mov retq nop pushfq (bad) mov jl out jle (bad) jl push iret sub and movsl outsb and pop sti xor add (bad) mov (bad) inc cmc push (bad) sar outsb rex.WRXB insb fildl clc push out in rex.RXB add fimull cmp js and repz add sbb sub rex fdivrl or (bad) out (bad) (bad) gs nop int3 add es in add or add (bad) lods lret std rex.WRXB pushq mov sub jae callq (bad) (bad) fnstcw sar xchg cmpsl pushq (bad) outsl rex.RX mov push ficompl rex.WRB rcrl or (bad) rex.WXB jp cli out sub jg movslq in and std imul rex.RX adc add pushfq and scas xor xchg (bad) rex.W adc and xor (bad) mov pushq (bad) movslq leaveq scas and idivb pop pop jne mov or sub mov sahf xchg jno (bad) retq xor xor jne vmrun add callq movabs push outsl or sbb (bad) (bad) in (bad) xchg ficompl cmp add rex.RXB rex.RX sbb in insb stc (bad) xor callq retq imul mov adc cmp movslq xor (bad) pop mov (bad) and sarb hlt (bad) lock xchg mov ss mov cld (bad) or rorb lret (bad) jo pop jbe,pn pop sti pop pop jg adc stc (bad) movabs (bad) fwait and pop mov jle sti gs mov mov sub add (bad) pop cmp int3 push mov out rex.R (bad) jg xchg pop sub and add or movabs sub add movabs pop jns mov or clc mov (bad) add jno sarl (bad) add movnti add movslq pushq frstor outsb (bad) or jb add retq mov test repnz mov jp adc push fcmovnb add and cwtl push add in (bad) (bad) movabs add std cmpsl push xchg fnstenv and mov loopne lea js mov cs pop (bad) rex.X adc add outsl pop lods or callq jg mov (bad) add push retq rex.W js cltd rex.WRB cli add jle jo push (bad) out stc mov shlb cld jle (bad) in leaveq xor test pushq jbe xchg movsl jp enterq movabs scas push jmpq (bad) (bad) cli cmp mov (bad) decb in rcll sub jb out pop sahf (bad) test incl popfq stos rex.X add movabs (bad) (bad) shll lock lahf movabs movabs mov movsb movabs fs (bad) scas mov pushq loope data16 pushq fwait mov rex.WRXB jmp out add test adc xor fsubr cwtl rex.R add xor sub add stos pop mulb (bad) mov mov rex.R rex.WRB (bad) add xor xor ss sarb add lret (bad) mov cmc rex.RX mov jg loop stos add enterq (bad) scas test stos fsubs sub (bad) lret cmp and (bad) rex.WR (bad) add rex.WX cmc xchg add mov cld pop lret stos mov jne push push xchg cs cmp js cmp jb mov push xchg iret cmc add and cmp jg add stos xor mov fistpll rol out or add xchg jle adc add pop sub (bad) sub leaveq push or cmpsb cmp rex.WXB add add jl jle add retq rex.WX mov mov (bad) hlt out cmpsb pop mov (bad) cmc mov repz popfq add lret push and sbb jrcxz adcl cli mov lods (bad) sub jl stc jle insl sbbb mov sbb pop cmp pop rex.X ja test (bad) popfq adc or jb cwtl rex.WB in jae movabs xchg add sar add push lods add mov or icebp jg mov leaveq adc (bad) mov add (bad) nop test sbb jne sub sub ss (bad) leaveq (bad) jno pop rex lret lods (bad) xchg jo add data16 js insb (bad) add xchg notb (bad) sti sbb loopne loop (bad) lods sbb mov sub outsl jnp or lods (bad) pushq sbb fs loop adc pushq xchg scas ja (bad) movsb cmpsl lods push popfq cltd lock add lahf gs (bad) xchg rex.RXB (bad) test clc adc jb rex.WB xrelease enterq xchg sbb lea fwait adc mov sbb jne icebp pushq add xchg fsubrl push and (bad) xlat and loope lods sbb insl in shrb lods lods mov xor or or cwtl (bad) (bad) push jmpq movabs incb sbb or pushq (bad) jbe or mov (bad) fbstp rex.B clc jle ffree (bad) (bad) ja imul rex.RB scas out xchg ficomp pop cli (bad) movabs mov outsb (bad) lods xchg cmpsl cmp and (bad) jmpq push xchg jno xor push movabs sub jns (bad) (bad) (bad) cmpsb (bad) mov and cltd insb mul pop xchg out (bad) sbb and stos sbb rex.WX jne cs (bad) (bad) cmp cmp lret cmp ss jno xchg je mov xor fdivrl outsb rex.WRB pop divl adc mull data16 adc sub test pop (bad) ja xchg xchg movabs icebp jne mov (bad) jg jnp mov add pop (bad) mov push lods sub hlt jp je (bad) and scas icebp sbb jl sub movslq lock retq add jno mov data16 mov add pop adc mov rex.RX rex.WRB lock callq mov (bad) add adc adc pushq jle or icebp int3 pop rclb sldt pop leaveq retq pop fldt jns ja iret (bad) or xchg add jb sub movsl jno (bad) movslq sbb rcl add mov cmp sti or rex.WR jbe adc pop jnp mov (bad) fsub (bad) cltd hlt add pop jp (bad) jg jle or add jmp (bad) test (bad) jle (bad) pushq add ss (bad) sahf mov jb outsl xor ss xlat add movabs iret jne movabs pushq jnp pop (bad) and pop lods and or sub jbe mov jnp callq mov (bad) je sbb add adc imul xor rex.RB jo (bad) lods negb or xchg xchg mov cwtl js fbld (bad) (bad) lret rex.RB (bad) pushq mov shrl push adc cmp icebp mov js mov test add loopne enterq cmc pop sahf (bad) sub mov js (bad) je enterq adc pop rex outsl (bad) jae (bad) pushq sarl or pop rex.RB lea pop (bad) cmp add jae rex.RXB jns movabs fldl push idiv stos pop cltd shlb cmp rex.WX es rex.WXB cld lret xchg (bad) xchg retq rex.RXB iret outsb ss (bad) jp sbb loope scas add out fidiv setns rex.R addr32 lock jg rex.X rex.B lods es repz movslq sub outsb fwait sbb callq movslq leaveq (bad) (bad) pop push pop cld add xchg repnz movabs xchg add and pushq in add shl mov xchg test fmull ds rex.RX clc add andb jg xor and jmp int3 add in (bad) jns adc push mov xlat xor add cmp divb in rolb iret mov add and jg jmpq sub jb sbb jg not mov jg xchg mov fcoml (bad) jrcxz movabs xchg or rex.X (bad) mov rex.WRXB (bad) clc jnp rex.WXB pop rorl cmp rex.W movslq jle adc pushq and push in xor and push pop mov mov cli out cmp mov lret or test ss jo jnp rex.WB data16 hlt scas ljmp std addr32 pushq in (bad) adc in fwait xchg jb fnstcw callq mov outsl ss rorb push or lret xchg fsubr (bad) cmp rclb rex.WX (bad) ror ss sub cmp and (bad) insb add rex.RXB mov jg in add movabs std or pushfq and xchg add out rex.RXB rex.W (bad) insl sub lahf xchg jrcxz xchg or mov add and add (bad) cli rex.R (bad) xor add cltd (bad) mov add repz outsl not iret push cli xor out cmp jl std data16 callq jbe push add je fnstsw leaveq fdivrl or paddd incl popfq mov movabs movslq pop (bad) xchg mov xor jmp cmpsb xchg cmpsb xor cmp cmp insb add retq jge lret sbb cmp lea jg mov sbb sbbl xchg rex.R mov jp mov cli add (bad) xchg mov pop sbb sti addl icebp or mov loop and (bad) adc add and jne jg and inc gs push (bad) jl,pn stos pop sub in vmread js (bad) int outsb pop mov (bad) jl push or (bad) cmp cmp insl loope jle repnz or cli push outsl out js rex.RX (bad) xlat cmpsl popfq outsb movabs jne jle mov xchg xor je (bad) imul push jge xchg pop ss jl mov jl (bad) mov scas cltd retq rex.WB rex.RB idiv (bad) rex.WR (bad) movsb lods (bad) mov mov pop (bad) and callq rex.W xchg hlt out and xor adc ficom (bad) push jb mov stos idivl adc test mov movabs div push jge lcall (bad) pop add xchg mov leaveq (bad) jg fwait and cmpl xchg pushfq imul (bad) mov scas in jbe mov stc rex.RX jo jle movabs adc leaveq ja (bad) cwtl mov add lods rex.WRX mov add mov (bad) and (bad) push and movabs addr32 int jp pop mov rex.RX lret rex.X cmp (bad) std je fs rex.WRXB (bad) (bad) mov jno cltd outsl and add jp pop (bad) rex.WXB (bad) movabs stc (bad) or movabs ljmp cli pop jp repnz xor (bad) mov cmp movsb (bad) (bad) xchg rex.W rex pop movslq cmc imul outsb jbe mov test add rex.WRX and lods rex.X movl push xchg xor (bad) (bad) add test pop jg add push imul lret enterq jns cld mov lea jmpq rex.WRB cmp in (bad) int lods add (bad) (bad) hlt and rex.WRB push jp sub insb movl jp (bad) add mov nop addr32 mov loop xchg add xor pop cltd stc lea (bad) data16 rex.RB ss cmp xor cmpsb iret cmp pop jns cmp rolb rex.XB leaveq incl add stos (bad) loopne or enterq leaveq pushq fdivrs callq rorl test push flds lods rex.RXB sub sub xchg rex.WRB clc (bad) rcrb (bad) sbb cmpsb push pop stos ja push rex.WX movsl rex.X (bad) push mov pushq sub jp xor movabs and sar adc (bad) pop lcall mov rex.WRXB rex.WX mov mov rex.X andl xchg (bad) xchg xchg (bad) (bad) rex.WRB mov (bad) ja pop fsts add movabs fs mov int3 add rex.WB rex.WX add sub and jne adc add (bad) (bad) pop (bad) pop fwait cmp icebp rex.RXB rex.WB jl or js nop mov add scas rex.X bnd pop rex.RX (bad) shrl or jp rorb mov jl sub adc (bad) (bad) xor (bad) int (bad) rex nop adc sbb test add fcmovnb xlat add je mov clc (bad) add rex.RXB cmp sub or lret (bad) imul jp jb sub lret shll ss xchg pop xchg rex.WRB or pop (bad) int retq add mov xchg add (bad) xor pop std (bad) shll add shlb jle lock cld lahf xor scas add xor mov sti jg sub add mov popfq jl (bad) rex.WRXB sbb rex.X rex.B add imul cltd repz jge jl cmp test add add jle xchg xor movabs (bad) jp (bad) repnz add (bad) or pop adc sbb push xchg xor cmpb and fnop sbb (bad) sub sbb rex.WRX repnz jge sbb adc (bad) in and add ja add enterq rex.RB scas jae fsin adc cmp rex.W add pop jp (bad) cli cmpsl add in rex.WRXB (bad) xor or out push jmp jnp cmpsb jbe outsb movsl ja push test xor sub fldl jmp sti movabs retq or push pop adc (bad) (bad) add (bad) ja pushq stos mov cli rex (bad) sbbb insb sbb (bad) (bad) lahf insb and (bad) fdivrp fadds mov sub xchg in and cmp fdivrs pop in xchg cmp jns lea push movabs (bad) jae ficomp insb cmp rex.RB mov (bad) nop in (bad) (bad) stos sbb and or add mov insl (bad) mov jno xchg jnp fnop movabs clc out cwtl lods jge adc mov test (bad) sahf (bad) mov jo (bad) out adc xor callq lret je cld rex.RB fs push scas data16 sbb rex.WX (bad) pop add or icebp incl push loop jl (bad) xor pop out shl lret cmc cli jns sti cld lock mov cmp pop sub je mov movsl (bad) xor (bad) xor rex.RX data16 cmc xor sub (bad) lock jbe jmp jle popfq mov test fs fistp or cli (bad) jnp jrcxz sub and out callq cs pop cmpsb rex and cmc jo xchg lods pop xor jle push sbb or (bad) loope popfq rex.WRB rex.RB decl scas cwtl pop jns (bad) (bad) mov jns out (bad) loopne shlb xchg addb cld sbb mull (bad) jbe jge mov (bad) xchg faddl cld (bad) pop fidiv sbb stos xor and or insl push (bad) in cmp cld (bad) jl in rex.WRB xchg addb scas (bad) pop in fstpt and (bad) ja jno scas outsb jge push cli pushq mov (bad) cmpsl out pop pop (bad) xchg jl sbb xchg mov outsb push rex.RXB insb push insl or cld js cwtl xor mov rclb pop nop cmp enterq jb sahf cmp mov xchg repnz out (bad) stos add imul icebp (bad) imul rex (bad) jnp (bad) (bad) cmp rex.WB ja cmp out out (bad) gs and adc pop (bad) xor or pop repnz outsb sbb test jle xlat add sti and jne test mov int adc adc fisubr rex.W (bad) imul sub add sti sti xorl (bad) jne adcb pop fsubs repz mov imul adc ss mov mov (bad) or pop mov cs imul add movabs mov jbe adc (bad) data16 and loop or nop out mov rex.RB (bad) mov out xor fwait stos and (bad) rcrl add cld lods leaveq mov mov add pop jae xchg lods add xchg or (bad) jg jrcxz and (bad) jmpq mov or callq sub loopne add test push in sbb imul movsl js mov testl jge sti or mov sahf icebp (bad) sbb outsl outsb add gs insl add xchg pushq in rex.RX cmp rex.WXB and sbb mov scas add sbb mov mov push and (bad) pushq pushq lods leaveq shrb sub (bad) mov jrcxz jbe rex.WR pop and jne std movabs decl int3 add pushq rex.RX jne add add or iret rex.WRXB sub jb insb mov jno (bad) add or lahf cmp (bad) repnz adc incb cmc add popfq (bad) adc pushfq flds pushq (bad) rex.WB add retq in test pop je int3 icebp rex.WR rex.WX data16 leaveq pop rex.WXB add (bad) rex.R stos fucomi sub cmp jo (bad) in lret hlt ds repz and add push iret jg cli (bad) imul sub adc stos pop add adc test js jno movabs sbb pop leaveq and in add outsb or sti movabs rex.WRB mov pop and sbb callq (bad) pop adc cltd jo cmpl or jg jns cmp (bad) popfq add fs mov outsl mov push cmp (bad) rex.WRXB in add (bad) mov pop rex.XB xor cmp lock xor jg leaveq addr32 lahf cli notl fildl cmp (bad) jae fsubs (bad) xchg xor pop loopne int jl roll outsl mov push (bad) insb cmp out (bad) push divl xor fildll (bad) jns add pop rex.WR rex.WB fprem (bad) xlat pushq adc insl rex.RXB cmp jle sub jno popfq xchg lcall mov adc push scas mov leaveq push paddd scas (bad) (bad) cmc jne int3 mov lock rex.R gs iret jp jle jp test lahf mov jp (bad) mov rcrb push (bad) punpcklbw add xor test loope jrcxz cmp add sbb (bad) mov imul popfq popfq std mov movabs sbb cld jp cld lods pop es pop shrb mov outsb lods xor (bad) addr32 rex.WRB sbb insl xor fisub movslq rcll jp nop jp pushq in rex.WB mov scas frstor and fbstp repnz rex pop movslq mov outsb lods pop rex.RXB in fsubrs (bad) (bad) outsb lods jb mov loop fwait cld insb shl cmp clc cmp (bad) jo out push xlat test sti push movslq je or (bad) sbbb (bad) add jl sarb rex.WRXB int movsl add pop pushfq nop jp jle mov shrb cmpsl test loope sub pop sub lods leaveq rex.WR movslq or and pop jmp sbbl fnstsw (bad) (bad) clc mov cmpsb js out (bad) rex.RX (bad) (bad) and scas scas add jg pop retq and fs fldcw ja rex.RX cmpsb sbb leaveq fxam mov add jnp fimul (bad) mov or (bad) jne jl stos imul or (bad) hlt sub cmc fcoms fstps rex.XB pop jae cwtl movabs xchg cmc pushq (bad) ss xchg cmp push rep mov pop push mov rex.RB rex.RX fucomi test imul scas pushfq je loopne fistpll xchg rolb rex.WX mov fidivrl jb fildll jo sub lods loop callq rex.WB cmp (bad) mov sbb xor out in jmp rex.XB sbb in mov mov insb rex.RX push xlat ja addr32 je mov jne clc (bad) insb xchg (bad) jns and mull (bad) mov in test sbb add (bad) rex.WR cmpsb (bad) insl pushq rex.RXB mov sub rex.WRX stos adc sbb cwtl jbe cmp (bad) ja movsl outsb (bad) add adc rex.WXB es rex.WX (bad) rex.RB xor sub push lods (bad) rcl mov push (bad) push nop mov hlt (bad) xor and rcr rcll sbb loopne rol fnsave pushq shll mov adc (bad) push (bad) out ja push mov mov je (bad) add notl or out xchg data16 rorl mov cwtl (bad) or lods sti cltd rex jns adc push leaveq jle and lods sub or std insl (bad) stos adcl (bad) insb (bad) push ja stos push xchg mov (bad) mov or je xchg xchg (bad) sub xchg test and fsubs rex.RX add rex.XB pop adc sti movslq (bad) sub jp rex.WRXB retq (bad) popfq sti sbb sbb mov cld fcmovnu mov (bad) movabs sub jae std rex.W gs (bad) in xor rcll jbe jae mov sbb jne subb mov mov and rex.WXB rex.RB xor (bad) add cli test jbe,pt or retq enterq lret icebp pop push (bad) test jle hlt lret jg mov nop ficom loop scas pushq fcompl jo outsb jl xchg cmp (bad) jl mov int3 or in in out mov adc std decb rex.WB add pushq insl xorl jnp rcrl sysenter (bad) rex.RB (bad) (bad) pop pop sub add stos jb rorb mov (bad) scas scas cmp outsb test and fs je movl cmp push scas (bad) cwtl push test xchg pop xchg mov push sbb (bad) cli imul mov pushq (bad) (bad) (bad) sub nop xchg mov mov in sub icebp sub cmp pop (bad) pushq jge pop (bad) cmp (bad) fldcw test cmp mov lods callq cmp retq push insb jg pop mov test xor jg insl or cwtl sbbl (bad) hlt (bad) js sti jb xor (bad) push mov (bad) (bad) es jbe jge ja movabs xor mov rex.R lret (bad) adc callq pop sbb cmc pushq addr32 rex.B test nop fdivrl jbe (bad) (bad) jl fs xor add mov movabs ss and cld cwtl jmpq and (bad) stos fidivl lea rex.WRX (bad) or sbb or xchg adc jp jle (bad) xchg cwtl xchg rex.WR mov jp repnz push pop rex.WRXB pushq es cmp rcrl (bad) sbb (bad) cli jae pop pop outsl packuswb jo data16 cmc je jbe fcoml es es mov scas xor lock iret jge stc jo adc outsl xor ja outsb scas jae rcll sub sti insb jl push jns (bad) jg stc push jle jo (bad) (bad) mov subl shr rcr (bad) lahf fdivrl scas (bad) (bad) lahf pop cmc sbb cmp pushq sbb add scas retq sub push fs es (bad) js jns adc pop fnstenv adc js (bad) (bad) jl xchg lahf scas adc pushq jns push (bad) test test adc scas push mov (bad) cld (bad) in stos sub test outsl cmpsb adc leaveq (bad) popq idivl pop loopne jnp or test scas clc jno,pn rex.WRXB jbe sbb jg jge cmp (bad) scas lock outsl rex.RX mov insl sbb jmp or (bad) jmp movsl mov sub xor rex (bad) pop imul jns jle ds cmp pop (bad) negl rex.RX mov out cmp outsl sub insl lahf sarl cmpsb xor (bad) cs (bad) pushfq xchg (bad) gs add push rex.WRX jp cld cltd fimul pushq fisubrl fnstenv xchg sbb adc shrl xlat and (bad) (bad) jl fldt jo sar xchg sub insb outsl jle add or mov jmp rex.RB rex.X insl push scas nop jmp rex.WRB and out in std imul pushq je stos xchg xchg mov rex.B outsl pop scas xchg ja cmp test jnp (bad) and mov pop jg (bad) (bad) jnp outsb (bad) xor cmpsl (bad) cmp jge pop test int push pop out imul cmp ss cmp push data16 rex rex.R jmpq andb push xor cmpsb out push or ss pop jl push and xchg clc cli xchg (bad) (bad) jmpq xchg pop lock mov leaveq (bad) push scas and faddl pushfq int3 mov sub xor and rex.RX fisubl sbb callq test (bad) mov lcall pushq (bad) pop leaveq std (bad) or cwtl rex.XB fdivs sub rex.R push xchg mov mov insl jbe xchg data16 pop pop pop pop loop rex.RX pop xor ds pushq xlat mov mov pop pop movabs add sbb or loopne xorl mov in rex push pop xchg pop incl mov rex.WRX test pop lock and rex.WRX and out xchg (bad) mull cs out and pop and popfq (bad) fdivl sahf mov pushq jrcxz cmpsb cmp cmp jl mov sub rex.RX pushq lods push repz (bad) or outsl (bad) jne rorl not pushq pop xchg sub test rex.RB fnstenv popfq movabs or imul jo loopne repz mov out insb push cld out mov pushfq pop (bad) je push insb rex.R jnp sti stc std add outsb imul mov push ss xchg mov cld mov fcompl (bad) insb and xor cli (bad) cmp rex.RB lock xor jns lods add jbe lret loopne mov loopne sub jbe and jge out add push jl test stc gs and out sub add cmp movabs imul callq jns xor push mov fnstenv movabs sbbl jns ficoml push js test (bad) ds rex.X xor data16 (bad) push and movabs icebp out mov jo push rol subl div sti sti ss pop ja mov or out movabs scas rex.WXB mov jp faddp sahf sub xor pop cmp iret sbb stos fildll data16 pop scas imul (bad) mov (bad) mov scas ss pop lret lods (bad) mov jne or adc or push xchg jo (bad) xor cld out rex.RXB frstor mov or ficompl xchg push imul imull (bad) movabs ss xor imul xchg clc sbb jl cli fistp sub adc mov jp outsl insb xor rex.W pop cmpsl sarl test repnz stos rex.RX cmp cmp add outsl sbb scas or push (bad) lods in test fisub rex.XB insl adc xchg retq pop pop cmc xchg pop (bad) roll mov pop fcomip cmp cmc (bad) mov lea pop or xchg rex.WRX nop sar in ds adc out (bad) push in jle adc out out jmpq fldt mov std jns xchg data16 adcl imul add push sbb fldcw cmp enterq loop or and std (bad) xor jns es test push sub mov or jge popfq mov xchg jo (bad) (bad) and (bad) mov iretw pop pop scas sbb (bad) (bad) xor push xchg ds cmp add pop es je mov xor js pop pop pushq nop xchg imull je cmp jrcxz sub (bad) pop subl xchg gs xchg outsb repz addr32 adc adc jp and push in add cltd fstl jb jge fwait sub add rex.R jne movsb pushq out (bad) rex.WB add test callq rex.WR (bad) cmc retq jmp sahf rex jp mov callq jmpw rex.RX data16 imul jge jns xchg pushfq sbb xor (bad) xchg cmp pop xor cmp data16 imul rex.WX xchg sarb dec in insl (bad) fwait ja xor (bad) out (bad) incl jnp rex.RXB rex.B jle (bad) shrl adc (bad) (bad) xor (bad) xor ds in divl mov in (bad) imul fwait repz add xor jle xor js mov xor (bad) out and sbb movsl js sub jp xchg cwtl insb xor add push rex.R in callq mov rex.WRX push jne rex.WB pop callq and fstpt jle rex.RXB rex.WR rex.WRB and ja jmp jb xor (bad) movabs (bad) jns sub cld jrcxz add adc rex.WXB sbb push movslq rex rex.WRXB fnstcw movabs (bad) add rex.RXB xor vandps test rex.WXB xor jne addr32 cmp pop ja jbe sub test pop pop (bad) pop (bad) xor pop and fstps jmp xchg (bad) (bad) xchg outsb loopne add rex.WR sub rex.B or adc cltd fstl rex.R add rex.W rex.W rex.WR out (bad) sub pop (bad) rex.WRX mov xor (bad) testl jno repnz out pop sbb mov in lods fcmovnu pop cmp out and adc sbb push clc outsl outsl adc jrcxz adc (bad) jbe sub (bad) cli pop nop (bad) (bad) ja jb sub sbb (bad) adc jae push (bad) int repnz cmp loopne pop in insb sub mov sub mov faddl jg mov mov xchg adc (bad) (bad) pushq jbe insb in sub (bad) stos xor imul adc pop loope pop addl jbe (bad) jp pop out (bad) std sub mov sahf insl iret mov rex.W cmp in mov push mov jle (bad) mov pop jb in jge ss cltd sti cmp jb xlat repz adc push fnstsw imull push mov callq xchg (bad) enterq popfq adc fistpll out jge sbb pushfq fwait adc (bad) push (bad) int3 jo lcall cld adc xor cmp incl pushq clc outsb outsb movabs push in xchg icebp pop (bad) testl jo mov rex.WRB jns mov insb rex.WXB pop scas mov (bad) jns xor cmp es (bad) outsb jp jp sub loope data16 xor (bad) xor out xor jno add xor jle cmp mov out cmp cmp sti (bad) rex pop mov std push in ja (bad) addr32 and rex.WRB sub xor xlat addr32 xor (bad) idiv (bad) (bad) rex.WXB pop mov (bad) scas outsl mov (bad) (bad) imul sub (bad) out rex.WXB cmp (bad) xchg cmc or (bad) fs in mov sbbl xor push sti scas sbb (bad) in xor mov lods movabs cmp (bad) repz pop pushq (bad) or rex fs callq rex (bad) outsb push sbb pushq jbe jl lods sub std xchg or shr mov imul movslq mov adc je cmpsl mov jne xor rex.WRX addr32 pop test cld (bad) jl shll cmp mov jg jle iret (bad) sbb rol idivb xchg (bad) jl fisubr xchg pop mov sbb mov push (bad) movabs rex.X push (bad) xchg jno xchg pop rclb pop es sub rex.WRX rex.WRXB js xchg push xor xlat sub jmpq insb jne xor xchg cvtps2pi rex.WR sub (bad) mov cmp in xchg jb sbb rcrl pop (bad) and and addr32 mov (bad) jmp cld insb rex.WRX mov (bad) pop out std (bad) hlt jle mov data16 jo xor movslq rex.WRX fadds jae sti rclb psrlq (bad) rex.WX cmp sub jnp cmp (bad) mov mov fldenv jl pop jmpq xchg or rex.WB (bad) (bad) pushfq rex.WRB mov loop int3 cmp adc and pushq (bad) pop xor int3 (bad) jnp data16 jle (bad) (bad) (bad) scas (bad) rcrb clc push cmp out jno in pop stos rex.RX lret insl sbb iret gs fisubr callq enterq adc rex.RX pushq je rex.XB (bad) rex.WRX (bad) jo pushq adc xchg lods imul xorb movsb fcoml sbb or lock outsl in int3 test xchg leaveq pop in fsubrs (bad) in fs pop xchg (bad) mov jmp lahf pop rex.RXB imul scas rcrb (bad) (bad) xorb js outsl jl out jl or fwait xchg imul (bad) repnz jo (bad) rex.WRXB cs adc jle insb (bad) fimul cli js push std sub mov out lahf fist scas movsb addr32 lock jb sbb imul cli (bad) jmpq jnp addr32 xor xchg fildl pop (bad) fdivrs shrl popfq (bad) lahf jle andb cltd out (bad) push mov in int3 imull sbb pop scas cs je sub jnp retq jrcxz jl std xchg mov jg (bad) imul lahf test ss xchg pop sti rex jbe jb (bad) jo gs cli lret (bad) xor add outsb jmp cli (bad) mov lret rex.RX fs movabs mov in cmp jb xor (bad) (bad) imul mov out rex.WR mov shrb mov cld fdivrl movabs test or jp insb pop pop xor mov mov callq jg sahf jns and jg jbe mov rex.WB sub out add (bad) mov adc jno out xchg stos ficom cmpsl pop negb cmp xor lods rex rex.B ds and pop rex.RB mov int3 add jp rex.WX int xchg jge (bad) xchg scas lock jmp push mov mov adc fstps repnz xlat stos xchg lcall pushq and pop adc rex.RX scas test (bad) cmc jrcxz in movabs push or pushq in or imul (bad) (bad) adc add xchg cmp scas jbe (bad) lods push out jl jns jge sbb callq hlt std fild popfq (bad) iret adc cmp xchg out sbb mov lods jge scas sub adc rclb mov cld pushq lahf popfq xchg add lods int3 (bad) cmp pop out test jl icebp or jo repnz setnp add jrcxz jo cmpl pushq cmpsl (bad) jl xor movslq jno es cli repnz rex.B outsl movabs loopne adc pop jg js push (bad) rex.WB xchg xchg fisttp adc rex.B adc rex.R jo adc pushq jge (bad) push push movslq cmp insb data16 outsl rex.RB clc test shld fistpl pop stc jb cmp jo jbe pop insl (bad) test loopne mov xor test (bad) andl or push lods mov fwait mov test cmp ror cmp cmpsl movsl test (bad) jp adc or jbe rex.R jne mov xchg (bad) cmp ja sub add fisubr xchg rex.WRX pop imul (bad) pop jo push xor test sbb cmpsb mov adc loopne insb jo xor mov (bad) (bad) or jge in (bad) jo xchg add jns mov rex or or andl mull or xchg jb jne insl pop xchg (bad) outsl adc ss out adc pushq jmpq negl mov imul (bad) (bad) sahf iret (bad) xchg rex.XB mov stc js int sbb rex rex scas cmpsb imulb (bad) fmuls lock xchg rex.W sbb (bad) sbb cmp in (bad) and fdivr mov addr32 leaveq jne sbb pop mov rex.WR rex.WXB data16 ss xchg (bad) fistl jae xor fnstcw pop and jle xchg jae test outsb add cmpsl scas or pushq push cmc insb pop imul mov jo (bad) sbb js cmp xchg fmull xchg js rex.WRX mov jmpq jnp adc fisttp test (bad) sub push add imul rex.W outsl ja (bad) sarl xor test out mov rex.RXB xor (bad) cmp sbb (bad) cmp and cmpsb nop jnp rex.RX rex.RB shlb loopne jg sub (bad) xor jl mov insl jae scas (bad) mov rex.RB shr movabs xor iret cmp (bad) cli mov pop insl in pushfq mov rex.WRX (bad) xor gs cwtl pop pop jge sbb int3 fidivl (bad) cli (bad) jb xor cld and (bad) add mov (bad) cmp rex decl pop cs pop int3 sbb rex.X insb xchg repz add push cmp pushfq xchg rex.W repz (bad) pushfq int3 jmpq jns,pn movsl pop icebp outsl sti or iret (bad) iret cmc jne sub add xchg jge scas push out pop fildll (bad) pop mov iret xor lcall mov push andl in es and decl icebp sahf xchg pop (bad) mull imull lock pop orl pushq lock cmp ds xchg xor xor (bad) ss mov pop push (bad) and gs iret pop xchg jnp leaveq mov fistpll (bad) insb fidivrl (bad) jl xlat (bad) (bad) data16 pop popfq pop incb cmp cmp in sub pop pushq xor rex.W rex.WRXB rex xchg cmp jle adc enterq lret xor adc jmp lret xor sbb cld mov push lret std jg or pop rex.WB and xor push (bad) cmp in rex.X rex.B rex.WX ss or movabs movslq xchg imul loope popfq xchg xchg mov and in rex.WRXB or scas insb std mov jae or fcmovne ds lods add adc xor fs mov rex.RB cmp (bad) rex.X mov jl jl clc retq je je adc sub fs js pushfq adcl cmp jmpq sub cld outsl shrb jge ja lock rex.W add out sbbl sbb fs pop (bad) leaveq (bad) (bad) in pmaddwd pop and push cltd sbb (bad) shrb rex cs or cmp jns insb out scas (bad) cs sbb mov jno (bad) mov cld sub jns mov mov js cwtl push xchg (bad) push jle pop data16 ss (bad) ss mov pop fs or xor lea es (bad) pop mov rex.X rex.WXB std mov jae mov push fstpl movsl xor xor adc pop mov (bad) jrcxz (bad) (bad) icebp jmpq mov jae scas cmp (bad) (bad) mov lret or jne jae cld pop and add (bad) rex.WX repnz cmc out cltd rex.RX movsl push (bad) mov (bad) movslq popfq pop (bad) (bad) cmp (bad) lock in stc jmp (bad) xchg sub xor (bad) lahf mov pop jb cmc or (bad) xchg outsb (bad) cmp mov mov adc pop movups sbb pushq scas pop (bad) jae data16 and vmovsd out mov xor repz (bad) rex.WB rex.RX cmc xor push jmp (bad) fnsave mov pop scas es rex.RX insl outsb movsb mov scas and (bad) out callq mov rex.WR rex.R jle out jp (bad) mov data16 popfq cmpsb cmp outsl imul cltd test fbstp iret jp out cmp mov hlt rex.W sub xorb push add push scas test adc sbb rex.R pop (bad) jns int3 scas movabs push adcl pop (bad) adc gs jg push test and mov mov and sbb push fdivrs rex.X mov or hlt jae imul lahf (bad) loopne (bad) std mov movslq in adc xchg insb xchg jp hlt sub pushfq fnop lock sub and clc or test xlat (bad) mov out rex.B sarb int pop fstps callq push sti es adc mov jb (bad) jp mov in in xchg out fcmovnu or jns jo jp (bad) scas push enterq out mov mov rex.WXB or std add or jg leaveq push (bad) fdivr mov leaveq mov fwait out (bad) loopne (bad) cld or xchg and and (bad) mov jns mov lea push xor pushq and jle lock mov in scas and mov jb shrb ss rex.WRX ds cmc (bad) (bad) jo and xor (bad) jle lea (bad) jmpq outsl stc rex.W pop stos jo test lahf lock pushq mov mov push (bad) ja xlat scas sarl cltd or pop sahf mov (bad) test jmpq (bad) (bad) out rex.WRB fisubl and add mov enterq cmpl rex.WRX push outsl cmp (bad) xchg pop rex.X lock cld pop scas (bad) fs cmp and xor repz lret (bad) insl callq (bad) and jo jl xchg add out (bad) orb loop sar adc adc xchg pushq iret test xor loope jbe xchg rex.R (bad) (bad) xchg jmpq jge jp push mov (bad) fs cmpsb add lods rex.RXB push xchg fidivrl (bad) icebp lahf pop icebp sub jo add adc (bad) js (bad) loop pop add (bad) xchg xchg test or enterq int3 mov cwtl lahf gs in stos sub in ss int mov cmp cmp cwtl push and sub out rex.WXB js callq lods (bad) push rex.WRX rex.WB mov sub mov pop sub (bad) (bad) int3 out out ljmp scas imul xor rex.WRB rex.WRXB rex.WRXB cmpsl (bad) jmpq test sbb push sbb insb vmovlps cmp or adc xchg nop insl jne (bad) js cli cltd subb xchg push xor pop mov (bad) mov push sbb icebp (bad) cmp and mov mov imul movsl cs cmpsl (bad) add cmp jg mov rex.B or (bad) sbb in xchg cmp rex.B push xchg rex.X (bad) (bad) mov (bad) outsl gs rex cltd rex.B rex.RXB (bad) cmpsl negb pushq rex.WRX addr32 rex.B movntq sahf (bad) push out out fistpll (bad) fidivl (bad) rex.WX push std pop rex.WRX inc callq mov xor lock push outsb ds repnz sbb cltd fidivl cld enterq rex mov insb xchg sub xchg pushq fwait (bad) je movsb (bad) outsb pop xchg je out and jge cld negl rex.WR decb (bad) (bad) rex.W mull cld js (bad) scas sbb js and pop jbe test (bad) cmp pop adc pop rex.WR movabs sar sbb push and push fbld sbb scas lret rex.RXB xchg xchg jmp sub enterq fisubrl (bad) jnp int rol xor sbb cmc mov repz lock fsubs mov jbe imul sub jge scas test in ja lea (bad) (bad) cld (bad) rex.B (bad) imul jb outsl (bad) cmp xchg insl mov jmp test rex.W mov (bad) cmp jmpq gs push imul fnstcw lret gs pushq xor push mov rex.WR mov out fildll mov (bad) iret fbstp ficoml out js jrcxz hlt fwait rex jge mov lahf rex.WRB xchg (bad) push mov gs stos in retq (bad) int push addr32 out add push js fldt test out sbb callq mov xchg or pop (bad) std sub add iret insb sbb push xor rcrb rex pop rex.WRX test jbe cltd cmc cmp jne jo jle rex lock js (bad) pop sahf stc ja sbb movabs std (bad) lcall or sbb cmp in in pushq jl popfq or shll or (bad) out ftst jmp (bad) sti rex.WR orl lods je retq hlt and sti movslq sbb pushfq mov movslq fwait pop pushq add or or jg scas adc cmpsl ss rclb (bad) pop xchg cmp jle insb or jbe or fwait xor scas xor (bad) pop jl sarl jnp (bad) sub adc rex.WRXB sub pop (bad) leaveq addr32 decl pushq rex.WXB subl (bad) fildll mov mov rex.W and out imul (bad) cli cmp std nop (bad) fisub and (bad) sub scas test shr out ss cmpsl pop and mov imul pushq shll and mov pushfq add (bad) rex.W jle mov sub stos cmpsl (bad) xchg jge jns mov out outsb jge (bad) rex.WRB push rex.WXB rex.WRB in lods mov pop mov (bad) push loopne (bad) scas cmp jmpq scas mov xor adc vmread bnd rex.R sbb insb movslq push ja mov or fnstsw fbstp lahf add or notl xor cmp popq mov pushfq jge (bad) (bad) xor mov int ja rcl fisubrl adc out clc xor in (bad) loope icebp insb bnd mov mov (bad) pop (bad) or movsl (bad) lret jnp cmc or xchg (bad) xor sbb xchg nop sub jp push out sbb xlat pop lret jmpq jle gs movabs cmpsl rex.W lret clc adc rol pop or (bad) pushfq xchg push adc sbbl mov jnp xchg (bad) (bad) mov (bad) mov xchg mov and int3 or and sar jo (bad) divl lea sub test rex.R rex.WRX punpckldq std jmp sti out pushq loope push xor (bad) push test (bad) mov pop iret insl push sti and jle paddd (bad) fidivrl rex.WX pop outsb or rol or and icebp xchg mov in or push (bad) jge mov repz lret insb mov rex.W nop xor or sub jle and fiaddl jns sbb rex.WRXB xchg rex.B mov (bad) adcb out sarl jae ficoml cmp cld stos (bad) rex.WRX rex.WX push rex.W insl pushq pushq jg imul (bad) popfq xchg test jl mov movsb cld scas out out (bad) repz lea (bad) cltd iret pop scas decl jmp pop rex.WB pop mov mov icebp jns,pt icebp push pop gs out scas cmp loop pop (bad) retq xchg sti movabs cmp (bad) in (bad) (bad) mov rex.RB (bad) mov bnd cmpsl pop jmpq rex.RXB es xchg cmp cmp and callq xchg pop push gs push scas (bad) pop lea loop and jl (bad) scas pop ja or rex.RXB (bad) (bad) test or (bad) cmpsl testb scas pop push sbb data16 movslq sti push cmp add std mulb add rex.R lahf sahf sub stos rex.RX sbb ja scas jo or lret (bad) fcomip cltd xlat lahf or mov (bad) mov fistp rcrl rex.R xchg rex.WR rex.WR pop jae rex rex.WR rcrb notb xchg (bad) cld pop cmpb rex.W movabs loop shlb fidivrl pop rex.WX pushq iret jmp cmp cld sbb push cwtl (bad) (bad) mov (bad) mov out xchg pop insl xchg int3 fsubrp out xchg xchg jrcxz in jp cmc xchg es fs rex sahf pop rex.XB mov sbbb data16 jmpq rcrl jl insl sahf pop jl (bad) push jbe mov (bad) lea data16 sub (bad) out lock roll pushq out repnz scas fbstp push sub loop (bad) divl (bad) push ds rex cmp lock in nop mov mov pop jb (bad) jl pop leaveq (bad) sbb cmp outsl xor test test gs cmp rex.WB rex.WRX (bad) mov loope,pt pop sub adc push decl fxch sub sub iret retq add test in gs shrl jno (bad) pop xor pop (bad) cmp mov stos fwait hlt (bad) jle scas je push and sbb jnp push jo cwtl xor outsb jns sub scas sbb adc iret rex.WR fwait rex.W test mov rex.RB pop rex.WRX sbb jo (bad) mov stc xchg jns mov xchg push loopne (bad) sbb push (bad) sub and (bad) fnstsw rex.B (bad) (bad) cmpsb cs pop mov movslq xchg rex.B repz movabs imul test sub test movabs std in jbe sarl rex jnp add xchg cmp and repnz addr32 xchg rex.X cmp pushq data16 fcoml xchg push rex.WRX idivl jl (bad) adc rcl cmp imul add movsb (bad) jne scas cmp jle or sub jb subl xor jne sti push sahf sub push mov retq movabs adc xor cltd rex.X cld jne and imul outsl jrcxz adc subb testl xorl xchg lcall retq lods mov (bad) test out adc in in test movabs pushfq movsb adc out subl icebp jae out (bad) roll pop je cmpsb fidivr xor mov (bad) js and lahf pop (bad) (bad) mov scas (bad) scas loopne fist jb sti addr32 mov sahf scas imul scas movabs and nop mov mov imul retq enterq push mov and mov or jp xor scas cmc mov out cli ficoml pop xor rex rex.W or insb popfq adc jle loop gs and retq movabs or scas (bad) sbb sar rex.RX rex.RXB xchg fildll jns cmp js jo lock test out and pushq test out rex.WR jbe jmpq jle cld scas shl in scas mov mov cli js jo jns mov outsb ds add leaveq insb pop in rex vmovdqu mov sub outsl lcall mov rolb out cmc (bad) imul icebp (bad) or (bad) ds iret (bad) mov jns xchg jrcxz insb mov mov out mov rex.WX (bad) fimull stc divl (bad) (bad) (bad) (bad) addr32 mov mov (bad) jns push jmp outsb sub mov rcrb mov std add rex.B lock jo pop cli xchg out iret pop lret (bad) mov fbld push andl gs out rex.WRB in sub fmull rex.WRXB and mov xlat cmpl movabs jmp adc sbb cmp fiaddl (bad) or (bad) orl es popfq jge movabs imul notl ja ja lret jg fs gs push rex.WRXB (bad) movabs repnz adc pushq xchg lods outsl stos xchg mov jg lods xchg mov adc xchg xchg rex.WRX rex.W (bad) xor add out (bad) out mov jle es mov pop (bad) pop scas imul icebp idivl test xor ja pop rex.RB rex.WXB rex.WRX xchg lods cltd fnstsw add movabs lods fisttpll mov and mov es xchg movabs mov insb cltd rex.W xor jg std out and out out std (bad) data16 rex adc jns ds mov mov fsubrl add out jb mov scas jmpq rex movsb sbb mov fnsave fidivrl jmp test cmp jo rex.R ja outsb test jnp add movabs or sbb mov gs out rex addr32 jb jl jo (bad) mov mov pop in std mov pushq push out jae cltd outsb in cmp pop pushq xchg rex.WRX in (bad) (bad) pop mov jb and push mov (bad) push stc pop je mov sbb cs rex.RXB (bad) xor fwait outsb out jp (bad) (bad) sahf sbb out pop jrcxz cs jns (bad) fldt jo adc pop mov xor cmp xor fwait adc je mov mov fnsave repz jg gs and ss orl callq push (bad) and out imull ja orb outsb fldcw xor iret pop pop rolb rex.RX (bad) (bad) rex.WX movabs jmp loope test jb out cmp xor imul cmp je jrcxz out fs or fisubl jne jge and mov xchg (bad) js rex.B and (bad) and test jg test sbb data16 pop movabs sbb (bad) scas jmp xchg xor enterq rex.RX jmpq xor jmp addb imul cmp sbb rex.WX (bad) sbb push insl and rex.RB rex.RX rex.RX (bad) fwait jo jne rex.WR divl scas xor rex.WXB testb sti (bad) (bad) (bad) and je cwtl (bad) cli (bad) lods enterq xchg (bad) pop cmovo gs mov outsb imul fild jns cmc sub push pushq movabs nop cmc pop lods out adc sub scas in nop sub (bad) mov xchg push rex or xlat xor xchg (bad) xchg sahf xorl xchg xor sbb jg rolb push mov xor mov out xchg hlt jp and or stos jb jns adcb rex.WR jno notl sub nop sbb pop ljmp sbb rex and int or add adc jl (bad) jl ds scas outsl add movslq (bad) lods (bad) push mov mov (bad) lods rex.WX jl imul sti test fwait (bad) rex.WRXB rex.WRX xchg out scas (bad) add sahf jl imul iret jge pushq sahf (bad) pop mov xchg rex.WR xchg data16 and lods int3 out or fcompl pop mov mov scas movb imul sbb sbb xchg jo pop rcpps out pop vzeroupper andl lahf mull xchg gs mov std rex pop pop std jmpq and out push stos (bad) scas pop out xchg jge lods rorb mov xchg xor sub insl xchg mov sbb (bad) mov movabs js and imul loopne (bad) (bad) sti fndisi(8087 insb outsl jb test mov jbe cmp add jp lods rex.WRB rex.RX (bad) data16 (bad) jle test repz pop clc xchg adc jno xor or mov out outsb (bad) mov (bad) or (bad) in lods jb incl pop cmpsl sti jbe pop fildll shrl mov (bad) (bad) in sub cmc adc (bad) mov cmp pop adc pop and push je (bad) jb repz notl push (bad) imul push cli pop push (bad) js stos hlt (bad) sbb jge (bad) or (bad) loopne pushq gs iret and or jle or (bad) jnp sbb js or je sbb sub insb clc or rex.WR jns and mov mov mov or sahf push ds clc decb sbb and push fist push xor add movslq stos pop retq push outsl enterq (bad) icebp pushq adc sbb jno rex sbb divl sub fs fwait mov (bad) and fwait mov pop retq ja flds pop or (bad) add (bad) fstl (bad) or xor lcall outsl pop xor int3 adc in test jo insl out out out mov pop push lret insb pop vtestps lods loop sarl adc movabs js fidivr clc and popfq test adc (bad) xchg (bad) push stc pop (bad) scas push xor sbb sub (bad) enterq ja (bad) pop and lret (bad) repz push iret and push out (bad) je ss scas pop leaveq clc push rex.RB xor push in loop xor movsb (bad) pushq (bad) jbe cmp (bad) pushw jno rex.B rex.WRB (bad) jae rex.RX jg mov icebp test (bad) xor fbld pushfq pop mov popfq (bad) rex.B add cmp cmp outsb scas in (bad) (bad) loope xchg sub xchg cmp rex.WRX pushq mov xchg jmp incb jnp xchg cmp ja iret push rorl xor (bad) mulb movsb jle jae stc (bad) push rex.RX xor jae rex.XB jne outsl cwtl pop xchg cltd cmp lods xlat jo movabs data16 adc mov fs add mov push or (bad) loop loope xlat rex.WRX push es push rcll xchg rex.XB cmpsl adc (bad) mov (bad) pop movabs push pop out and mov int3 out addr32 jo shlb movsb icebp idivb (bad) sbb jmp in xchg pushq int xchg fsubrl rolb (bad) pop test iret fwait xchg (bad) cmp (bad) sub jo fcoms jbe jle scas out lret iret js data16 scas addl cmp pushq xchg rolb rex.RX sar cmp jo test jrcxz rex.WRB xchg mov cltd sub imul movsl pop (bad) pop rex.XB std mov pop cmpsb xchg (bad) cmpsb add out stos ss xchg rorb sub xor fildll pop (bad) add retq jle push push lock sub cmp xor decl int3 movabs outsb in test testl (bad) mov (bad) fistl scas adc testb scas fisttp (bad) jbe xchg jl mov pop (bad) movabs xorl sbb (bad) pop rex.X test xchg jbe insb adc xor jo and jne movslq testb test int3 lods (bad) pop sti lret jmp or cli hlt pop (bad) repnz xor pop rex.XB std sub (bad) mov pushq rex.X jl out or loope pop mov movabs lods (bad) outsb (bad) xchg mov rex.B and sbb scas pop fiadd and and push rex.WRXB pop mov jo,pt pushq and adc es fwait mov push jbe (bad) lods (bad) (bad) jg or and xor (bad) mov xor pop test cs xor mulb in (bad) mov sub mov in inc mov outsl jmpq cltd stc push cmc outsl mov cmpsb outsb insb mov pushq (bad) mov or cmp mov iret test fwait clc jns fs notb jnp mov rex.X adc jg out mov xchg or xor push (bad) out scas mov gs (bad) (bad) (bad) mov mulb incb xchg lods rep js mov and stc cld (bad) insb pop in imul jg adc xchg adc adc out xor cli sub rex.RX xchg imull loope imul jb pop xchg test mov xchg cmc and jb jo sub jge js out sbb mov imulb mov in fmul fidivr push jne je cld stos rex.WR mov out (bad) sub sbb xor (bad) sub (bad) push or cmp test xor cli jo rex.R iret hlt mov mov cmp (bad) mov lret enterq adc or or jg jo test movslq subl (bad) cld xchg setb fidiv out rex.X sbb lods scas jmp fnstenv cmc fcomps and fidiv hlt or jrcxz test (bad) push jp js movslq adc mov sub (bad) and sub lock (bad) (bad) cld in div movabs push (bad) mov (bad) movsl pop cmpsl jmpq (bad) mov fisubl sbb cltd cmp (bad) not rex.WRB and sahf gs callq push rex rex.X jno adc pushq loope (bad) stc rclb outsb lock sbb cmpl push scas out notb and jne sub (bad) xchg sbb rex.W rex.RXB movsl shrl jge loope jp rcrl testl pop stos mov jb (bad) jp imul clc iret fdiv in stos pop push lods cmpsb ja nop and jbe mov adc sub outsl jg cmp or rex.WR xor lahf fisttp mov scas rex.WB pop rex.W insl jb sbb (bad) and sbb pushfq enterq jae test xchg cmp xor cmpsb scas fnop rex.R ss jno je xor ss mov xor push push data16 pop scas jae (bad) xor pop lods jle fadds mov mov fucomip test mov cltd mov lock jbe fisubrl out (bad) rex.XB movsb (bad) cmp pop callq in fiaddl mov and cmc rcr cmp out pop sbb rex.WR movsb rex.RB add ds callq test pop xchg and clc insb add outsb xor icebp ja lods (bad) pop sbb mov movsl jbe repz test push cmp jmpq push insl or pop and je scas pop test cmp (bad) scas xchg insl sbb ja stc rex.RX mov jg adc jge test cmp scas sub xor pop sub jg repnz (bad) cmp add test rex.X movabs insl outsb insb sahf pop ja (bad) jnp (bad) outsl (bad) (bad) mov in fs mov jae movslq scas sbb js,pn push lods int pop scas cli adc jbe rex.W jmpq (bad) fcmove in pop cmp cmp fwait mov mov mov sarb jrcxz jnp outsb repz in (bad) jbe mov xor and cwtl cmp callq mov mov lods jle rex.X pushfq cltd (bad) test orl fwait sbb rex.WRB pop adcb rex.XB iret (bad) frstor out mov fldcw std pop cwtl add (bad) rex.WR rex.RX rex.WRX repnz rex.B pushq sahf iret rex.RB adc and mov and (bad) (bad) std gs test xchg sbb mov hlt jo sub out xchg pushq push test ds int3 (bad) js cmpsl jmpq (bad) mul insl pushfq add cmpsb fnstcw xchg push fldt (bad) fmuls mov pop pushq ds nop sti movabs rex.W in jg lahf sahf jle jnp xor mov mov xchg lods fwait adc movslq cs stc out adc nop sbb sbb cltd pushq ss jno add pushfq xchg out es mov (bad) push cltd or pop testl retq and cli xor push or cmpsb out out fldl mov outsl pop xchg mov pop movabs cmp push mov subl fadd lret or fwait js cmp xorb sarb pop sub pop sbb retq jmp push stc adc idivb ficoml fnop (bad) pop push add ficoml (bad) ss rex.WRX and xchg pushq or fimull rex.X rex.WX scas jg pushq fistl popfq scas clc (bad) pushq mov cmp rex.X push pop rex (bad) cwtl mov in lea jo jp popfq adc sub mov pushfq pop stos stos outsb jmpq pop xorl out (bad) jg fimul add sbb cwtl add mov int push xchg cmc rex.WB mov mov pop test sub fnstenv sarl lock jge sbbl (bad) movsl mov out (bad) pop rex.R loope (bad) pop sub imull jg in adc and js int add loopne callq (bad) iret fnstcw mov rex.X shlb lret in and retq mov loop (bad) sti add (bad) or stos lods lods (bad) rol addr32 mov movsb subl xlat rorb (bad) xchg (bad) callq sarb adc rex.X pushq (bad) push js jno and mov jnp test sbbl jle insl je pop jo iret push cmp fisubr stos pop and (bad) sbb std imul pop cltd movabs jno scas (bad) cmpsb (bad) push mov sarl clc imul jl jbe sbb or retq pop pop rex.WB jne cld mov xchg rex.WXB xor (bad) cltd retq movabs xchg cs jle jbe data16 lret (bad) jo jbe xchg retq xchg sub (bad) jl sbb xor jo scas and insl (bad) repnz pop std jp rex.W (bad) or test hlt jns sub shrl std mov mov leaveq xchg (bad) bnd (bad) je lret movslq (bad) imul lock jo outsb test xchg sbb pop rex.B mov cmp js or decl xor (bad) (bad) jae pop jl pop insb push imul (bad) insb or fisubr insl test rex.WR rex.RX lods jmp pop or (bad) mov lods (bad) rex.WRXB xor leaveq push cmpsl mov push adc mov shll sbb and pushq shlb sub movabs add fidivrl outsl loopne jne xchg imul outsb (bad) imull pop mov rex.WRB pushq xchg cmp (bad) iret leaveq push add lods adc (bad) out (bad) rex adc mov rex.WR movabs mov mov xor pop roll (bad) sti imul (bad) jge or pushfq and imul nop int3 (bad) mov out outsb insl imul jns add mov out data16 jp jrcxz xchg push mov sbb adc outsl pop push cwtl movabs cmp frstor and fnsave outsb (bad) popfq jmpq pop (bad) outsb mov pop outsb sahf jl xchg (bad) test (bad) sbb rex.X mov insb sbb pop scas scas insb (bad) out scas cmp lahf fimul js (bad) cli cmc imul lods fidivrl js push fsubl sub jl mov add pop (bad) mov jle clc add rex.WB rex.B loope movslq js (bad) jne rex.WR pushq xlat jrcxz (bad) lods in push int (bad) lods (bad) cwtl add (bad) (bad) sbb pop scas insl addb movsb xchg ss rex.R add rex.WRXB fildll and data16 add jle enterq mov jbe xchg jle jmpq xor rex.RB js fldt pop xchg jo pop (bad) (bad) add leaveq (bad) jl stos loopne in nop or adc rex.RX lahf cmc xor mov out pop rex.RX hlt rex.W mov xor lret push lahf pop push movabs rex.WX leaveq outsl cmc jp ror rex.X sub rex.WRB (bad) test scas xor cwtl out cmpl jg rclb (bad) adc insb xor retq pop rex.WB xchg adc xor mov add sub mov pop jl negb fcmovbe push (bad) scas rex adc (bad) rex.WRB mov lods je lods fstpt and push out mov rclb add xor int pop cs pop adc lods outsl int3 (bad) data16 int3 pop scas xchg jo rex.WRX scas (bad) jo icebp (bad) mov sub or popfq (bad) idivl adc fisubr (bad) mov in (bad) idivl rex sarl push out push add std sub (bad) (bad) retq in je loope sub movabs cmp repz pop add pop lretq lcall (bad) rex.RXB test callq icebp ja or xor movabs cmc xor enterq outsl sub data16 sub (bad) cld mov movabs movslq andb jrcxz movabs in imul xchg sub push jmpq lods jo mov out jnp pushq insb cmp mov imul ss xchg and rex jb pushq lcall pop repz add (bad) add insb rex.RX sub int imul rex.WX cmp push lret adc mov push xor xor test pushq scas pop or fs rex.RXB (bad) xchg mov (bad) sbb pop imul xor (bad) outsb imul (bad) clc mov std xchg fidivr lock jmpq orl sti rdmsr jp gs (bad) xchg test or mov xor mov hlt test or mov pop adc cmc mov rclb out xchg cmpsl (bad) or jbe in rex.WX and test adc adc sub xchg mov push imul adc or xor jp insl cmp sarb add push outsb mov adc pushq sub lahf data16 setg xor mov xlat mov sub add mov cmp rex.WRXB jbe (bad) cmp (bad) jae and (bad) pop (bad) (bad) stc cmpsl (bad) (bad) idivb lret mov mov cli rcrb adc lea xor push pushq mov rex.WRXB xchg sbb rex.B pushq negb cmp (bad) pshufw sti (bad) cmp (bad) out outsl (bad) neg cmp (bad) (bad) jo addr32 mov cmp (bad) mov sbb cmp mov (bad) ja (bad) ds pop sbb divl mov (bad) movabs ljmp (bad) xchg pop sbb cmp (bad) mov mov out sti scas mov sub or sbb jo subl hlt push xchg jmp push mov push (bad) mov pop jmp leaveq out pop xor push in mull adc repz repz ss (bad) cmp pop rex.RXB push rclb (bad) (bad) sbb sarb imul and (bad) jb pushq setae es (bad) pushq xchg fimull sbb clc cmp xchg scas rex.WRX mov icebp xchg (bad) (bad) (bad) jmp pushq pushq insb js or cmp (bad) (bad) out test mov jae mov in callq mov pop (bad) (bad) jle pushq insb xchg sub movabs (bad) rex repz mov xor cmp ds cmc leaveq cmpsb (bad) rex.XB rex.XB or xor scas (bad) pop push test and mov movabs rex.WX mov add test (bad) rex.RX mov push sbb je adc adcl ja leaveq xchg cwtl (bad) fnstenv cmpsb imul sahf sti xlat shl xchg loope cli rex or (bad) fdivl jmpq pop adc xchg cli cld test cmp rex.W lock outsl and outsl js movsl cmp lods test jl cmp js (bad) rex.WRX repnz test push jbe jbe and outsl xor ficomp xor out callq fldcw cmc sub jl fidivrl hlt jbe xchg and lock fdivrs push movabs cmp repz or adc jl jb push fildll imul test (bad) adc rex.W pushfq scas rex.W js fiadd movslq pop xchg out (bad) and movslq cmpsl notb jno scas cmp outsb mov pop cmpsl (bad) fdiv sub and jrcxz sahf sar xchg (bad) jle push (bad) loope ja and (bad) insl push sarb punpckhwd imul xor loop xchg fs mov callq lock out lock (bad) push pop test (bad) je sbb jo scas rol (bad) out rcrl pop in lret vmread xchg xchg movsl pop nop loope ja and loopne movabs fstps pop imul lods insl insl pop (bad) (bad) outsb pop outsl xor fistl icebp xchg lret add rcl test rex.RX mov rol add std xchg rex.R adc fbstp or out mov (bad) jg rex.WRXB adc insl jle scas gs pop rex.WR es shrb imul pop mov xchg mov in (bad) push adc ficoml lret repz mov xchg in hlt push lods (bad) mov push loopne pop imul lahf (bad) xchg add pop stos jl (bad) outsb sahf cmp cmp jg pop mov jo mov insb je sub mov gs rex.X ds sbb retq movslq pop and pop rex.WRB adc lods sub repz rex.W mov movabs test test outsb add repnz (bad) int (bad) xor adc fwait scas (bad) (bad) cltd jbe xor xor pop lret adc rex.WRX popfq gs rcll test rex.WRX xchg notl xchg shrb out mov mov mov jb jns add push insb pushq pop jns imulb cmp adc int3 rex.R (bad) push add rex.WRB cmp repnz jne jae je outsb test jbe jl (bad) movslq xor rex.B mov sahf pop rex.WRX mov rex (bad) (bad) fwait cmc jae cmpb jrcxz sysret (bad) jmp imull fsubs scas rex.WRB mov add fistl or rcrb imul adc (bad) cmp insb in jp xor xchg (bad) ds mov jg jl cs xchg lods pop cltd mov xor xchg pushq mov cmp or jns (bad) adc verr enterq addr32 mov out shrl fisttpl pop outsb cmp add loop push jbe and fistpl rex.WRB addr32 repz rex rex sub repz hlt mov leaveq add sbb ds scas push fbld push in divl rex.RB pop and cmpsl cltd pop jg xchg xchg rex.B rex.WRX sti sbb pop xchg rex rex.WRX mov scas mov mov or rclb pop sub (bad) pushq or or gs jge fstl in xchg ss sti cmp add and test sbb and retq xor rex.R (bad) adc (bad) retq xor or pop scas xchg rex.WRX in mov push sarb lods sbb lahf pop cmpsl movsb adcl jne in popq mov insb insb jp push xorb cmp jbe sbb cmp xchg out mov shlb jge (bad) sub adc stos je addr32 out jb scas mov rex.W idivb adc cmpsl pop adc lods jo nop iret fnsave lock rex rex.WRX jo cs es mov in insb xchg xor rex.R rex.WX rex.RXB mov mov jle test pushq add mov notl mov mov add pop out imul frstor adc or pop lret fs jmp jmp orl pop callq pop fdecstp jmp repnz imul jo mov mov rex.RX pop movabs ds rex.RX add in jb adc cmpsl (bad) lods retq int3 insl cld rex (bad) jge repnz mov jns rex.WRB rex.WX (bad) mov jg test push nop (bad) insb add and cmp jle scas mov cmp add mov (bad) xor cmp pop sti pop mov jnp outsl adc (bad) (bad) sbb (bad) insl movabs (bad) mov xchg jno lock xor (bad) pop jne imul xor rex.W shrb in lods jl sahf push nop push pop cmp rex.WX movsb cmp fnop insb jmpq je (bad) fidivrl scas retq pop ds sbb (bad) out hlt (bad) mov pushfq or (bad) divl mov mov jbe sti int3 pop mov rex.X pushq (bad) test mov adc jl in fiadd (bad) (bad) outsb rex.WRXB nop fisubr add pop mov push (bad) cmpsb stc cmp stc callq jle pushq and pushfq adc icebp jbe cld addr32 js (bad) jb jg and ja fsubs cmp test add retq (bad) int jne in jo (bad) sub jle add jl in xor outsb and rex.WR push jb jg jbe out out movb sbb xchg cs add jne jle cmpsl rex.XB fs jg mov cld pop lahf (bad) mov (bad) bnd xchg (bad) outsl (bad) sahf rex.R outsl imul rex.WX (bad) (bad) out adc cmp in pop popfq rcrb cmpsb jns sbb test (bad) or loopne out divl or adc jbe data16 rex.WRX pop xor sbbq (bad) outsb and test or iret sbb in or mov fmuls jne jmpq scas adc iret lods pop rex.RX or movsl fisttp retq and pop pushq push (bad) (bad) fistl add insb insb movslq pop sti loope lret xchg lahf (bad) cmpsl fsub jo callq callq rex.WRX (bad) pop adc cmc sar xchg cmc xchg divl xchg repz rex.WB mov clc mov (bad) cmp pushq xchg push shrb push mov or cs mov clc jl cmp pop cmp pop jg or icebp lock sub jl add in mov add xor xor (bad) and (bad) jnp cs mov push push fild (bad) pop stc ja iret pop pop sbb cmp ds jno mov pushq lods (bad) mov or sbb jrcxz (bad) adc or ljmp fistpll add test scas sti out rex.WXB ss sahf je push (bad) cmp add (bad) pop or cmpsb stos (bad) popfq rex.WRB sub testw push (bad) jns jb loope cmp cli js xor or scas jg insb xchg pushq push add (bad) adc fbstp test lods jmpq add (bad) cmp add rex.WX sbb idivb out xchg xor scas or sahf add iret out (bad) add sti pop pushq sahf jae idivl xor repnz pop hlt xor xlat or pop jmp (bad) jrcxz push lods and sbb lret (bad) rex.WX sbb (bad) xor xor (bad) out (bad) retq xor xor repnz out out js cmpsl xor sub mov cmp rex.X add xor sbb (bad) or int jo ficomp (bad) callq pcmpgtd sti in and pushq mov mov (bad) jge (bad) xlat je out sbb sub out out rex.WRB xchg data16 out mov pushfq out push (bad) push (bad) push cmp out xchg sub rex.RB icebp adc ja loop add cmc sub add addr32 jb xchg repnz (bad) adc mov sahf sub xchg sbbl adc (bad) push loopne (bad) mov test (bad) std fs and sbb jmp retq jmpq (bad) (bad) mov push imul lods (bad) fnstenv (bad) mov out cmp cmp sbb jne mov or movabs fsubl (bad) cmp rex.W mov rcrb out (bad) sub cmp jnp sbb fildll jge mulb enterq movslq rex.W xor sbb fidivl lea cmp push jne xor rex.X scas jrcxz rex.WRX (bad) outsb mov test rex.X rex.WRB data16 push (bad) pop sbb push push (bad) sar loopne lahf pop addr32 jo adc cs mov cmp retq sbb cmp push enterq gs (bad) mov push sahf sub jo xor rex.WRX sahf mov cmp (bad) jo push mov xchg pop sbb sub lock data16 sub retq fstpt and data16 psadbw stos leaveq out mov xchg icebp and divl mov mov outsb (bad) push sbb mov adc mov rex.X fsub (bad) and and loope rex.XB icebp scas (bad) out (bad) xchg ds cmp fistpll sti rex.RX rex.B js rex.RXB rex.WR (bad) sbb insl pop cmp cli and ss or jbe shrb in mov sub movslq sbbl jrcxz (bad) mov sbb mov (bad) lods data16 imul mov (bad) mov rex.R jl rex.WRXB scas (bad) cmp nop mov jmpq or sub (bad) rex.RB and data16 mov lret (bad) mov test lods rex.WRXB cmp pop mov cmp push pushq xchg push cvttps2pi sub sub sbb cld mov and lods iret add lahf mov pop (bad) or add xor pop xchg mov (bad) rex.X fsincos and jmp imul scas movntps vpshufd adc push std out xchg sub popfq (bad) jns xor nop lods xlat popfq mov and mov mov sbb imul cltd jns (bad) insb sbb push fbstp rex.WRXB clc (bad) and imul pop push xchg outsl rex cwtl jae icebp addr32 sub adc (bad) push scas (bad) xor mov rex.RB orl and rex.WR xor mov pop sbb jns iret jmpq hlt movaps enterq test push (bad) add imul cmp cmpl cmp pop cmp mov outsl jle (bad) cmp (bad) negb cmp cmpsb mov adc sbb insl jns incl movsb iret add jp (bad) xchg cmc jo es andl adc (bad) jmp add std imul scas and (bad) fldt js jb (bad) xor pop (bad) jge addl retq jbe jns jo test outsl jle jb adc lea or fs js push push rorb mov add or std or addl fs pop int3 jl cmp jne scas xor xchg lods push cmpsl mov push cs cmpsl (bad) xchg pop jg insb pop rex.WRX scas rex.WXB test cmp movsb ja lea imul rex.WR icebp hlt add mov out ffreep fsubrs sahf (bad) in (bad) xchg cmp hlt (bad) callw fbstp jp or fmull mov shl movabs fadds pop addr32 (bad) cmp mov movslq (bad) (bad) in (bad) (bad) testl mov (bad) pop rex.WRX in or xchg sub and loop or xchg rex.RX (bad) insl pushq (bad) mov sbb (bad) jge (bad) pushq mov imul sub rex.R fs xor pop sarb mov add in fisubr (bad) jo data16 leaveq and test scas or cmp jne push adc repz pop lcall adc cmpl scas test cli pop and cs pop rex rex.WXB loope (bad) push add callq (bad) mov in outsl sbb or jg lock cmp xchg sti pushq stos insl (bad) and push mov mov (bad) rex.WRXB fistp scas fisubr jae es retq sub (bad) rcrl callq lock int sub je mov jmpq sub insb sbb test mov xchg jnp rex.WRX xor mov stc test pop (bad) (bad) mov fsubrs cmc callq jb (bad) jbe rex.WRXB xchg fisttp xor sub mov (bad) xchg ss (bad) (bad) rex.WRXB xchg xor jmp lret adc cmp callq test fsubp rex.WRX and jb add ja sub or mov pushq (bad) mov (bad) jo and jl in or jae pop outsb jge fcomip xchg adc jbe fstl push cwtl pushq mov (bad) cld jg jp nop lahf rex.X je jno jb sub (bad) rex.WRXB ficompl jp pop fisubr rex.WRB pushfq callq mov cmp xchg xchg fisttpl xor (bad) sub pushq rex.R jmpq cmp jle nop fidivr jle rex.WXB mov out lods outsl lret fiadd fsubrl and (bad) in mov push scas jo lea lods rex.WRB cmpsl movabs adc lret and push mov jmp or scas xchg (bad) js pop enterq xor push clc xor out (bad) lret mov xor (bad) std ja xchg pop or rex.RB cmp (bad) hlt cmp cmp in (bad) jbe or fnop lret (bad) cmp sarl pop lods fwait sub out (bad) adc sbb scas rex.WR (bad) loopne pushfq (bad) (bad) rex.RXB rex.WXB rex.B enterq movsl sub xor pop (bad) sub adc push fs nop leaveq mov sbb pop xor jbe rex.WRB sbb divb fildll adc push add in cmp add sahf xlat popfq xor rex.WXB xor clc fnsave xor fs ds rex.WRXB rcll rex.R or out sub fwait pushfq xchg fnop push cmp mov xchg mov rex.WRX lahf scas fstl cmp sub imul test and sbb in cli cmpb fldenv xor pop (bad) jb mov or rex.X mov scas xchg (bad) xor and add loope jmpq fnstcw imul xchg data16 push mov or (bad) jmpq xchg in cmp push movslq pushq test roll jbe xchg push ja jp or xchg jp movabs cmp mov insb in (bad) or pushfq jmpq imul (bad) or (bad) xor (bad) jle and rex.X rex.X rex.WRXB js,pt jns ficompl jo (bad) rex.WB (bad) test scas fsts jmp addr32 flds or js (bad) imul xchg insb es imul or pushq loope jne lret sti (bad) sub (bad) retq xchg rcll xchg mov cmp (bad) mov adc (bad) pop out (bad) int je scas (bad) mov (bad) lock rex.W jl push (bad) rex.RX (bad) jge scas vandnpd rex.XB cmpsl jne jge or jp sub xchg or sbb sub ljmp push jb xlat cmc je pop mov adc callq add sarb (bad) jbe and stos insl test (bad) (bad) jrcxz jnp outsl ds cmp pop pop xor jmp (bad) movsl js cmpsl pushfq jnp rex.X (bad) push add mov sbb xlat push gs repz insl nop mov lret out (bad) mov mov fldcw pop jl in insl sbb cwtl mov (bad) jp cmc sar ljmp adcl sbb scas mov and xor jp pushq or ficom test (bad) mov jmp outsb mov movsl fwait xchg std cli jp (bad) scas movabs rex.X pop leaveq callq (bad) (bad) fmuls out jb imul std mov in cmpsb xor ds (bad) clc jnp test out xor (bad) or retq mov enterq (bad) jp or nop movabs lea jmp es jo out in mov retq rex.W leaveq jrcxz cmpsb (bad) fs lea pop test rcrb (bad) fucomp insl repnz movabs fwait sbb (bad) cmp sub cmpsb xor (bad) or push sub jmp in scas decb cwtl cmc pop add cmp (bad) xchg cmp push scas cmp pushq pushfq (bad) jne jns nop (bad) xor ss cwtl or jmpq gs test cmp movabs xchg sti lret mov cltd out std jrcxz scas pop scas sbb (bad) leaveq outsl jae out (bad) and xorb mov (bad) xchg push pop jmpq rex.X (bad) notl imul sbb stos addr32 xor (bad) shr sbb xchg sti adc pop mov and lods jl cltd outsl insl push leaveq fistp mov mov callq and cli rex.WRX scas mov lods movsl adc or mov imul jae fnstcw clc stos pop xchg hlt (bad) rex.B (bad) movabs cmp xor movsl cmpsb popfq xorb fnstcw (bad) ja xor cltd xchg ja outsb lret sbb xchg add movsl sub mov pop adc pushq mov add adc push (bad) fcomi movsb sub xchg notb sub (bad) lods (bad) add rex.W jns orb xor (bad) rex.RB cmpsl js push rex.WRXB clc test movabs (bad) popfq (bad) add (bad) cmp frstor pushfq adc xchg and xchg out xchg sbb pushfw xchg cmp xor testb retq push imul (bad) add sub sub or and in mov out ja (bad) adc outsl jmp out xchg lock xchg pop adc jo,pn (bad) xorb fdivrs (bad) xor (bad) jb add test lock stos callq jl add scas jnp out jb jge push (bad) in adc rex.WR out pop add movslq shrb clc jp (bad) and pushq movabs shrl xchg (bad) shrl and jbe rex.WXB (bad) pushq mov mov sub push mov rex.W jbe out jns retq imulb test data16 je (bad) stc (bad) rex.WRX sbb jne enterq xorl jno cmp ds xlat mov rex pushq test pop jl rex mov cmpsb jmp cld test stos out test cmpsb cmp (bad) (bad) (bad) jne lea and ficomp js insb scas test jns rex.WRX (bad) scas sub pop cmp test test outsb scas xor (bad) fcmovu (bad) movabs mov mov jrcxz (bad) (bad) push push mov pop test lea enterq rex.RX mov retq (bad) pushq rex.WRB lock frstor outsl and (bad) es cmp hlt cmp loop nop sarb cmp or mov hlt push mov in add ds mov pop cmc or cmp xor sub mov test outsb sti adc xchg sub push lods es (bad) popfq callq xchg (bad) cmp movsb rex.WRXB push (bad) rsm data16 push (bad) xchg xor repnz int sub adcl in cmovp rex.B rex.RX push mov pop xchg adc jmp mov insl or and cmp fild lea jns rex.XB mov and cwtl (bad) test pop jbe rex push (bad) fistpll in pushq sti repnz rex.WRX xchg (bad) test (bad) rex.WRXB rex.WRB jo mov pop sub addr32 (bad) xor rex.RXB rex.WRXB push scas in jne push imulb cmp pop adc jnp xchg xor adc xor push or cmp insl (bad) fldt (bad) rex.WRXB jae push enterq (bad) (bad) rex.WXB idivl rex.RX pop rcrl sahf cmp sub retq test imull cmp pop jo rex.W in pushq stos jge pop es mov jmpq (bad) (bad) fsts sbb mov and jbe fnstsw rex.W jno cmc in js jge pop lret insb (bad) es mov (bad) cltd loope jb pop cmp pop iret in xchg xor jno fsubrs fmulp (bad) sti fsubr mov data16 ss jmpq push fs jge (bad) sahf mov rex.WB push shrl rex.R xchg repz (bad) ljmp (bad) hlt imul mov rclb (bad) add out xlat sti pushq sbb or out adc sti and rex.WRX jmp add add lods mov mov gs adc movabs test xor adc xor push scas std (bad) push push imul (bad) (bad) (bad) (bad) add cld scas jbe mov rex.WRX push pop std retq (bad) cltd xor sub insb shlb pop xor in retq push pushq (bad) (bad) out mov mov jp sarb jbe jo and pushfq mov (bad) or (bad) adc (bad) sbb insl jbe test add xchg mov popfq mov (bad) int repz fistpll (bad) ss fstpt divl test out or sbb add ss idivb mov sarl mov cmp (bad) cmpsl lahf and retq add popfq cmp rex.B and mov (bad) rex.WRX rclb xchg xor mov add xor mov add test jp or (bad) mov fistl mov (bad) lods enterq in (bad) xor fs cmp adc in xor (bad) out xlat xor rex.RX and movabs (bad) mov mov sar mov xor mulb gs add (bad) cmpsb rex.RXB int enterq sub cmpsb test test pushq add loopne fstpl xor test push mov sbb orl rex.W retq add (bad) clc (bad) add jbe rex.R push mov sbb movabs icebp idivl lret pop xchg out movslq xlat add cwtl leaveq push add mov cltd fwait mov (bad) sbb and insb (bad) (bad) (bad) movabs xor jp adc es sub cmp adc add cmp jle xchg xor or cmpsl mov rex.RXB adc mov jns outsb rex adc retq movabs repnz mov pop sbb and loop je jp (bad) outsb add sub in fldl pushq cld rcll xchg rex.WRB (bad) push pop (bad) lods (bad) (bad) push retq add jl loopne xchg jb jae cmp pop (bad) push adc add (bad) roll jg shlb mov test (bad) fist (bad) add rex adc jle (bad) outsl cs movslq pop add xor jo or sub es jg sbb (bad) scas jrcxz xchg roll (bad) jg loope mov rex.RB (bad) jg mov cmpsb sub fstpt mov lret jp xchg iret mov add lret in (bad) push add (bad) leaveq fbstp jnp mov (bad) stos or cmpsl (bad) sub xchg clc xor sti fcoms jge roll xor and (bad) fwait xchg mov je sarb add add rex.XB (bad) mov mov fs (bad) xor es sub xchg (bad) mov imul jb in out std (bad) xchg outsb pop (bad) add test (bad) adc pushq fistpll sahf lret in loopne add add (bad) mov (bad) xchg jp (bad) cmpsb push sahf mov sub mov neg int3 add cmc sar mov cmpsb jle (bad) mov pop push rex.WRXB mov cld retq mull push add lock jmp add shl (bad) sbb jrcxz mov repz pop rex.WRB (bad) cmpsl and jo sbb hlt jo sub scas out rex rex.WR data16 in mov or (bad) punpcklbw outsl (bad) sahf negb xchg or pushq (bad) pop pop pop pop push add rex.WRX rex.WR rex.WX rex.W add ds cmp add xor sub sub add and sbb sbb add adc or or add (bad) std sti stc div add icebp out in jmp out jle loope fstp (bad) test lret leaveq movl mov mov mov lods stos test movabs xchg (bad) lea addl xchg movabs xchg insb push callq out fnstcw fsubr jrcxz jmpq loope std xor pop insb fistl cmp adc mov push scas (bad) movsl scas insl int3 sub xchg lock roll xor scas and stos jg (bad) mov add mov loope cmpsl jns insb fbld rex.RB adc out pushfq cmp sbb retq rex.WB pop xchg movsl rex.R (bad) fbld retq insl push xchg fstpt and fidiv mov xor xchg or idiv cmp lock (bad) movabs xchg fwait rex.WRXB loopne push xchg mov rex.WB rex mov insb xlat and xor mov pop lea and in mov sarl lods (bad) cmp loopne and xchg movabs cs pop pushq lods pop add xor and rex.B cs sbb sbb mov (bad) cmc fcoml scas je repz in rex.WRXB rex.WRXB sbb pop rex.WRX mov insb rex.B scas adc lahf jrcxz out and insl stos movabs sbb xlat lahf in push adc rex.RX out scas cltd push xor jae jne push mov negb cmp fsubrs icebp jno jae (bad) push pushq scas cwtl xchg shrl adc cmp out (bad) sti lahf xchg out jl lods rex.WRXB sub in pushq mov rcrl sbb (bad) (bad) mov (bad) lea sahf add scas sub notl mov (bad) jae out mov fsubrs (bad) pop movsl int xchg out pop test and xlat (bad) xchg (bad) repnz (bad) (bad) cmpsl pushq data16 popfq xchg mov test (bad) (bad) xor (bad) in in gs js xor or cmp or mov shr sarl icebp out jmpq adc rex.W es cltd idivl mov mov sbb pushq (bad) (bad) add stos mov shrl mov repz jge insb rex.WB jge lahf rex.RXB mov mov fildll add (bad) sbb cmp sbb (bad) fistp or and outsl iret rex.WRXB js (bad) pop (bad) sti pop enterq out lahf xor fsubrs fisttpl test retq and jae cmc fdivrs jno (bad) cltd (bad) rex clc mov jns jno jbe out mov cmpsl sti js fdivs pop rex.RX js,pt push xchg jo cmp (bad) xchg pop pop (bad) pop add pop fdivrl mov xor cmp (bad) sbb cmp jne rex.W fstpt out jl cmp pop sub scas (bad) pop jle (bad) and movsl jl push jl jl cmp (bad) (bad) add out pop cmp jle jle and (bad) pop add scas (bad) jg jge jns jne jno add imul pop pop pop push push push push rex.WRXB rex.WB rex.RXB rex.RB rex.XB rex.B add xor (bad) add and (bad) add adc str add incb cld cli clc div repnz add (bad) callq fiadd (bad) fcom (bad) rcl (bad) add lret (bad) add mov add movabs nop mov mov push std fisttpl xchg xor (bad) lods frndint mov rex jg,pn mov pop or (bad) adc mov sub push lret outsb lea push and cmp movabs push movslq jrcxz xchg loope ss fidivl fnstcw (bad) xchg mov jne (bad) jmp cmpsl iret fbld mov js lahf fwait lods cmpsl icebp in jnp scas rex.WRXB mov mov fbld imul mov (bad) (bad) mov lea out std pushq mov xchg mov loop insb bnd scas and cltd fs (bad) gs sbb in movabs (bad) out (bad) std sbb rex.WR fmull sbb sub xchg fsts (bad) cltd rex and mov sub outsb out (bad) mov push push fbld (bad) push ficomp loope (bad) rex.X (bad) (bad) or (bad) fprem1 fistpl fs mul sbb mov push je cmpsl stos mov pop test add repnz loop (bad) out lods cmp movabs (bad) cmp rex outsl xor mov lea mov adc rex lea jp idivb cmp jb sbb lahf cmp cmp scas xor sti mov sub lret cld (bad) mov (bad) pop and fidivr (bad) negb cmp callq test scas cmp lret rex.R mov fidivl cmp cs loopne fstl xchg pop ss mov in movabs ja cltd (bad) fs pop rex jno (bad) std jne pop jle xor cltd (bad) mov xchg repz mov cmpsl add rex.WX stc fstp xor xor fcmovnbe xlat in push pop cmc out rex mov imul in movabs outsl (bad) xor ffree fxch std push jmpq stc lock cltd movslq xchg cwtl (bad) mov lods (bad) (bad) sub fstpl rex.WRB xlat sub in outsb ljmp mov sahf sbb rex.RX cmp cmp (bad) sbb mov adc out mov xchg loope (bad) imul scas push hlt mov (bad) retq (bad) jp cmp xor or insb add jo rex.WRB rex.WRX pop sub sub xchg in movslq sbb addl movsl sub sbb or ds clc scas mov pushq sbb sub rex.W mov (bad) cli cs (bad) ds out pop addr32 in sbb xrelease (bad) repnz mov rex.R rex.WRX mov pop (bad) fwait cmp rex mov rex.W pop imul push insl mov jb pop fadds fsubs or lahf jne,pt gs xor xor fsubrp fdivr push out jo movzbl fwait rex.WRXB outsl rex.W movslq lahf cmp sbb movslq jo scas cmc outsl out mov sbb decl (bad) out adc (bad) and and sub xor out push mov fwait (bad) (bad) pushq js movslq xchg pop mov xchg mov fwait cmpsb (bad) scas rex.W icebp mov out (bad) mov fwait out out rex.W (bad) cmp pop pmaxsw mov fwait (bad) (bad) (bad) rex.W movslq (bad) cmp pop sarb fistp jo cmp (bad) mov fwait mov movslq mov pop fsubrp (bad) mov fwait rex.WRXB pop rex.RX (bad) iret rex.W icebp (bad) cmp pop (bad) negb (bad) rex.W movslq out cmp psllw rep (bad) mov fwait iret or (bad) xor movabs addb je mov (bad) je (bad) mov mov jl ds and (bad) (bad) adc adc and rorl push xchg (bad) mov lahf mov jp cmc rex.WX gs cwtl scas jbe mov adc clc jp (bad) rex.B pop (bad) adc jne insl and add fisttp (bad) out shr jb mov xor adc sbb movsl clc fwait loopne jl jb ficom xchg je mov fidiv jne cmp push xor scas or (bad) out sbb rex.WRX cs je mov push fxtract lret adc add and push (bad) frstor adc shrb mov push xor movsl mov (bad) pop (bad) and scas mov (bad) push mov lods xchg cmc jo xor pop dec adc rex.WRX (bad) and (bad) rcrb and sub pop mov mov jns and cmc xor out add sahf or fistpl push out movabs test enterq and push add mov jne rex.W fcomp movabs xor insb mov (bad) cmp movaps (bad) (bad) jle mov mov add (bad) mov cmp mov outsl (bad) mov repz pop pop adc rex.WB out test jmp loop jl cmpsl outsl cltd sub scas pop jo cld (bad) mov roll test adc (bad) xchg push js xchg popfq pop mov (bad) and jle fldcw add movsl (bad) rex.WX (bad) (bad) retq xchg push outsb nop xor cmc lahf xlat rex.WRX std imull lock loope add (bad) xchg add jrcxz (bad) shrl adc jb,pt js jo jo (bad) iret xor (bad) repz fildll pushq xchg cltd js jrcxz loope shlb cli (bad) (bad) (bad) stc or mov mov (bad) cmpsb int (bad) frstor push fwait rorl int cltd in (bad) fbld lahf roll push loope sub loopne jmp rex.WR mov xchg in xchg and (bad) or jle je jbe (bad) incb push int pushq push mov mov push (bad) movabs xchg clc xchg sbb rorl or push ss cltd iret leaveq rex.B cmp scas mov push (bad) jo (bad) movabs sbb and xor fildll movsb pop (bad) add rex.WX test add (bad) pop mov jno add mov repnz add mov (bad) sbb xchg xor fnstsw sbb adc rorb and jno xor add fiadd cmp (bad) or (bad) callq jns rex.RB mov jp cmp jg pop roll in and add repnz fidivr xor fucomip fistp movsl lods repz xchg cmp cs js pop scas rex.WRB std xor sbb pop cmp or and fwait in idivl xor mov sub cltd sti out ss (bad) ja lea adc or imul sbb iret cmp pop rex rex.WB (bad) (bad) jo in xchg push mov hlt and (bad) jo mov cmp push (bad) and cli lahf out jmpq movslq icebp (bad) add and cmp rex.WB xor loopne and iret test loop push (bad) mov mov add int3 scas jle rex.RXB in pushq jp rex.RXB or cmc pop testb xchg (bad) icebp (bad) (bad) jle pop (bad) mov cmp mov (bad) imulb test jnp lock sti rex.WXB rorb xchg idivb mov mov movslq cmpsb out and int3 in jrcxz xchg and push or enterq or (bad) je test add rolb pushq enterq outsb (bad) stos (bad) xor retq adc rex.RXB rex rex.WRXB mov fwait repz sub fstpt cmovno std mov adc rex.WRX test movabs (bad) jle sub sbb sbb and push flds int3 shrl pop xor sbb psrlq movslq rex.WB push out (bad) movsb and sbb (bad) add add cwtl fwait lret repz jne push pop sub insl movslq adc and sub outsb sbb rex.WRX (bad) and sbb push adc jle jg mov mov (bad) mov mov popfq iret pop fs outsl rex.RB ds mov (bad) jrcxz push mov jo push jg jmp rex.WXB rex.WRXB rex.X (bad) (bad) (bad) out iret rex.WRB rex xchg outsl add scas (bad) (bad) (bad) imull (bad) cs rex repnz push xchg fbstp mov (bad) out (bad) mov ja stos movabs fidivr fimul cmpsb push and rex.WRXB sub jg (bad) pop test mov outsl adc out cs (bad) loope testb cmp idivl (bad) lods adc mov xchg (bad) leaveq jnp jl cmpsb js andl cs ficom mulb out pop rex.RB cmp out rex.WRX (bad) movsb (bad) (bad) adc in xor mov out lret or fnstcw cmp insb js and pop jo je mov xchg (bad) xchg fisttpl out pop (bad) jo push sahf pop mov (bad) data16 pushq jle (bad) (bad) pop xchg pop (bad) mov (bad) xlat (bad) (bad) sbb rex.WRX outsb enterq xchg jg mov rex.WRXB rex.WRX dec xchg jle mov (bad) (bad) jo adc cmp pop (bad) mov jo sbb (bad) jl lahf in (bad) test jbe pop rex.WRXB sbb sbb pushq adc (bad) jo (bad) jle rex.WRX rex.X (bad) sbb lcall (bad) jbe jb je callq pop sti mulb pushq addr32 fistl cmp add out pop (bad) cmp mov rex.WRX int pushq jl add (bad) in outsb fs cmp (bad) rex.WRX insb and mov sub or mov sbb sbb es rex.X pop jg mov cmp and stc sbb jo je js jl pop rex rex.WX fstpl (bad) pop jo add fisubrl (bad) cmp imul movslq outsb jp mov (bad) mov adc adc in pushq push (bad) movslq add (bad) (bad) outsb icebp rex.WRXB mov (bad) xlat sbb push mov rex rex.WXB rex shrl sbb sbb mov pop sub sbb pop xor mov insb mov lahf rex.WRX cs std (bad) pop jle jl sahf fs add js insb jl pop (bad) push xchg addr32 shrb push std pop (bad) or cmp (bad) mov fnsave (bad) fwait push sahf jle mov (bad) sbb negb js movsl insb xchg (bad) mov rex.WRB rex.WRX jo push jo push jo push push jle rex.W insl mov adc movabs pop rex.W enterq xlat outsb rex.WRB rex.WRX out push pushq insb pop outsb rex sbb cmovo sbb pushq pop pushq ds in jo in cmp rex pushq (bad) jnp out fwait rex.W rex.WR data16 cmp scas rex.WX sbb sahf pushq jo pop mul adc adc pop fs in fidivrl jb je sbb xor rex cmpsb sub push rex.WX fs rex.B add pop and mov rex.WRX jno pop lret data16 (bad) mov jl lahf js jp mov add sbb lods pop jle push insb sbb (bad) jnp or fwait pop sahf rex.WRXB pushq (bad) cld gs sub xchg mov out jns pop mov pushq xchg lock (bad) std decb repnz out cmp fistl (bad) add iret rex mov outsb loop pop cmp (bad) jno popfq jp movabs xlat mov rex.WXB rex.WB pop (bad) pop (bad) fisubl insb fwait (bad) out out and adc cmp ljmp jge cmp xor cmpsl lahf xor jge imul jo rex mov pushq mov icebp outsb cs adc xchg fwait pop pushq pop cmp xlat callq outsb pop jo cmpsl (bad) imul outsb sbb (bad) add cli pop fisttp (bad) mov sbb pushq jge push outsb out fisubr mov fistpl outsl (bad) sbb pushq and sub ds or pop mov sbb ror ds jle mov pushq jnp (bad) jo fstpt sbb add rex.RXB test mov outsb and rex.RXB lock pop pop rex.WRXB fisttpl insb insb mov je outsb (bad) repnz cmpsb out data16 (bad) fcmovnb (bad) (bad) jno or fldt push xchg (bad) pop mov push xor jbe,pt mov mov loope mov fwait xor xchg in mov (bad) (bad) xor xlat (bad) js js sbb fistpl jo pop iret outsl fild data16 fbstp xchg (bad) mov movslq pop jle,pn mov clc ja adc repz fild hlt mov outsb scas rex.W mov (bad) jo fs pushq jrcxz cli je push out mulb repz cmp pushq jbe sahf and test xchg (bad) xlat (bad) ja scas pop rex.RX mov push (bad) xor xor divb mov and ja std xlat icebp fildll push mov (bad) push int3 xchg jg push pop insb push fbstp (bad) (bad) push outsb rex.WRXB fsts push (bad) cmp adc sbb mov xlat push pop out and retq jrcxz outsb (bad) mov iret mov rex.R neg sahf lret js leaveq and push (bad) fnstsw jg nop pop lahf (bad) idivb pop test xchg (bad) js movslq lahf neg (bad) in int3 outsb ja or (bad) out std (bad) pop insb cmp in jb out movabs fucomip pop js (bad) pop out out outsb (bad) nop int (bad) (bad) and xor int and nop xor xor cmp callq incl lahf pop iret lret rex sub pop test cmp (bad) mov jbe xor outsl mov or out push or mov and movabs rex.RX insl push cmp rex sub jmp (bad) (bad) nop mov (bad) lahf outsb sbb (bad) (bad) stos pushq in mov fisub cmp cmp pop or mov cmc xchg jae (bad) sahf outsb rex in or (bad) cmp adc adc popfq mov sti cli pop xchg add xor lahf push scas pushq mov ja adc pop rex.WRB rex.W idivb out decl and iret add (bad) callq (bad) out ja pop jg or fistpl (bad) (bad) push xor je sbb addr32 and andl (bad) fnstenv (bad) (bad) adc (bad) rex.R outsb sahf movsb and repz xchg mov cmp imul mov pushq mov fistp pop test outsl divl jae mov cmp push pop out rex.RX lcall jmpq jmpq in cmc outsb mov push outsb sahf mov pop adc insl push insl pop jbe xor push pop je hlt push gs rex.WX pop rex.W movsl (bad) fs mov rex.WRX mov sbb lea xchg scas retq mov (bad) pop lret jle clc scas rex.RB xchg xlat mov pushq mov lret enterq lahf and (bad) xchg je rex.W (bad) (bad) callq sbb ja rex.XB cli pop pop lahf (bad) idivb xchg (bad) mov xor pop mov jo jrcxz rcr je pop outsb xchg hlt xlat jp pop in cmp (bad) sbb mov rex.RX jg jno sbb rex.WRX xchg (bad) jp out sub cmpsl insb (bad) js fidivl ss (bad) sti fbstp mov pushq rcr (bad) ss jo in mov outsb cmpsb mov or divl in (bad) or sahf insb mov jle iret mov punpcklbw (bad) vunpckhps out or out xchg mull fmulp data16 mov rex.RB adc pop (bad) in dec jge insl outsb out test ja cwtl loope sti xchg data16 xchg and stos scas cmc sub xor (bad) addr32 rex push (bad) jg mov xlat outsb jnp (bad) lods sbb sub lahf jnp je outsb xor (bad) sbb jo (bad) xlat gs (bad) retq mov out and jge fidivl (bad) fstpl adc outsb rex.RXB xlat xchg jo pop and or mov (bad) (bad) sbb jp xor or jbe repnz ss retq roll xchg and outsb jg cmp jo ds rex.W es add out out push callq fimul pop (bad) jl pop mov mov adc sub (bad) jge or mov mov cmp outsl in (bad) pushq xor jo pushq movsl outsb (bad) sti xor (bad) cmpsl xchg iret (bad) iret mov outsl push pushq scas push out xor insl outsb (bad) xor ds lods imull rex.WR cmpsl pop mov or rex.WRXB cwtl rex.WRB pop cld jl out pop pop (bad) mov fisttp (bad) (bad) jo and loop idivb push loopne mov (bad) insl repnz mov add outsb rex.RXB scas pushq outsl and (bad) (bad) adc stos sahf movabs jge rex.WXB (bad) scas out rex pushq mov push rex.WRXB jo pushq mov mov std mov jns cmc sbb rex.RB rex.WRB adc sti push sahf pop (bad) mov in mov cmp jge rex.WXB outsl fmulp (bad) push pushq (bad) sbb ds rex.W (bad) mov pop in (bad) ja div addr32 push and xor pop jmp repz fstl div jmpq xchg js mov sti xlat js sbb pop por jg out jo (bad) in mov lahf cs js movabs xchg data16 setno ds lock jl sub js mov pushq pop cmpsl ss mov std rex.W mov scas or sbb (bad) sahf jb jbe rex.WRB rex.W jle (bad) (bad) (bad) (bad) ja pushq push mov std jg add xchg out js fsubl pop xchg pop fucomi mov sahf addr32 sarb (bad) stc (bad) gs loopne popfq push lods sub insl (bad) jge lea js xor (bad) (bad) (bad) repnz jp xlat js je outsl xlat push lret (bad) adc xor (bad) fstpl out jb cld cmp outsb insb and or lock retq rex.W adc cmpsb ss js pop (bad) xor divb cmp fmull mov push and outsb out (bad) (bad) jge cmc rex.WXB xchg (bad) mov cmp fidivr adc (bad) mov jo sub sub jle sbb pop add (bad) jge fs fistp and outsb (bad) js (bad) movabs cmp stc retq push outsl rex.RXB insl (bad) pop fs (bad) pop outsl pushq fistpl push (bad) outsb divb mov rex.XB push pop (bad) sub jg mov or push rex.WB xchg xchg cmc outsb (bad) pop stos (bad) and int3 xchg sbb cmp cmp fwait rex.W outsb rex.WX mov jg lahf pop mov jae incl jbe mov pushq rex jo mov (bad) (bad) adc out jo (bad) imul outsb pop jo (bad) lods imull pushfq push outsl pop outsb rex (bad) scas jo xchg outsb mov push rex.WRXB mov sbb pop (bad) out (bad) rex.WRX leaveq imul rex.RXB repnz rex.WRX outsb js (bad) rex.RXB loopne popfq rex.R insl jo (bad) cmp xor repz pop outsl xlat mov outsl jmpq je sbb pushq ds (bad) mov outsb (bad) xchg (bad) pushq jmp mov (bad) push ficoml adc sub add (bad) lahf (bad) jno out outsb (bad) outsb idivl (bad) stos mov loop repnz mov fcmovu sub xchg rex.WXB mov test push xor fildl outsb ja (bad) jge cmpsl push outsb lahf (bad) adc pop sbb jg (bad) notb in push rex.W push rex.XB jp fbld (bad) pushq (bad) scas pushq std (bad) pushq pushq (bad) rex.W and (bad) rex sbb push rex.XB std rex.WRX add mov xchg in add (bad) popq push sbb (bad) cmp out cmp insl (bad) jmpq pushq mov jge (bad) pop xor divl and (bad) xor jo push in mov outsb pop jo jb je ja sahf mov jo cmc mov jo insb outsb (bad) rex.WXB rex.WB rex.RB cmp (bad) negb pushq test (bad) adc (bad) pop mov cmp xor js outsb jl div (bad) rex.WRXB rex.W rex.X out (bad) pop jo pop fstps sahf (bad) mov adc rex.XB rex.B (bad) (bad) pop pushq (bad) xchg insl mov xlat push stc sbb xor cmp rex.X insl jo js leaveq jle out rex.WR xchg (bad) xlat cmpsl xor add js out jmp rex.R rex.R rex.W (bad) or jle icebp out (bad) sub mov (bad) lods rex stos xor insb outsl out pushq insb or pop fucom (bad) adc sbb outsb (bad) mov pop jb pushq xlat movabs retq adc xchg movsb mov cmp cmp cmp ss hlt outsb push pushq xchg cmp pushq (bad) adc or imul scas rex.W (bad) outsl mov pop lock xor cmp jrcxz (bad) (bad) out fildll xchg mov (bad) std jo in push je (bad) retq (bad) mov rex.RXB jp cmp (bad) dec (bad) rex.WRX rex insl pop (bad) pushq (bad) jo pop and out pop insb cmp cmp outsl insl pop pop adc and cmp jle mov lahf (bad) mov pop adc lock roll lea idivb pushq iret xor ds (bad) fs cwtl add hlt rorl cmpb add popfq lods ror pop and scas rex.RB xlat (bad) rex.R addr32 add insl sub std fnstcw adc (bad) xchg cs jo lret out stos lods addl add out mov addl (bad) xchg mov jo xchg cmp xchg sbb jo xchg outsl pushq sbb decl movslq (bad) mov jo movslq (bad) rclb out repnz fwait mov mov sbb repz iret rex.W icebp movabs fwait or (bad) rex.W mov push imulb add fisttpl movslq jg addr32 rex.RXB sbb mov fisttpll rex.WRX rex.W icebp fstpt cmpsl pop jae rex.RXB fwait (bad) (bad) retq movslq cmp sbb sti mov fwait mov movslq sub (bad) pop fsubrp retq jle insb outsb mov (bad) jne jo sub jl loop lcall and or ljmp gs add fisub cld pushq (bad) xor fisttp stos lahf rex.WR in jle sub movabs add xchg sub rex.WX pushq sub rex.XB je notb adc test add mov xchg xchg add pop jae in movsl mov (bad) jl pushq retq add jb rex.R stc add (bad) add (bad) xor jnp pop lahf sub pop push std (bad) jg or rex stc rex.W jne add jmpq or popfq mov in sbb rex.WRXB push cmpsb (bad) sub fcompl (bad) add clc pushfq (bad) ss add mov (bad) jl xchg cmc addr32 jb in rex.RXB lods mov add pop or mov rex.W jp lea imul pop lahf (bad) add rcrb jns enterq lret out rex.R testl mov xchg mov (bad) movl stos sbb addb callq cmp pop (bad) add add outsl jle lods test lahf and ljmp mov xor stos (bad) rex.W lock cmpsb repz imul retq push repz (bad) jp cltd rex.WX and xor xchg push adc fcompl adc sub adc mov rex.WXB add fldl (bad) and fs sub add retq push mov rex.WRXB clts jge mov stos jp or (bad) sub rex.B lea rex.R insb roll sbb lods nop in (bad) (bad) jmp (bad) rex.W (bad) jne add fldt cmp cmp adc rcrl (bad) test cwtl adc sub add rex.RX add (bad) jmpq add adc (bad) sub js rex.W addl int jnp xchg loop add xchg add std (bad) pop xor xchg (bad) fldcw lahf (bad) jp sub adc sahf mov mov mulps add int3 jns and insb mov pop (bad) and retq jp hlt jle fxch mov incb rolb retq pop mov and add fcompl sub (bad) cmpsb add pushq fs test (bad) iret ds jnp (bad) out add jo rex.WRB and (bad) leaveq (bad) adc (bad) xor movslq fidivr out mov (bad) add jmp cmp or jle sub decl rcpps jbe mov mov lods (bad) (bad) xchg pop add mov add (bad) mov adc rex.WRXB (bad) mov fildl insb iret sbb rex.RXB xchg enterq data16 adc jg jmp sahf sti xbeginq (bad) std xor pop retq jle add sbb or jle sub jl xor mov icebp add repnz add lock callq loopel popfq add (bad) retq add and and fstl lahf jg mov pop jrcxz repnz jg (bad) pushw (bad) (bad) loopne icebp jl (bad) in (bad) add (bad) push jno rex.RXB (bad) stos jge (bad) cmc leaveq fs mul add cmp jp jbe rex.W rex.WRB (bad) push rex.XB popfq cmp out mov out adc sub adc retq jp mov cld movaps xchg loope or cmp and jle add rex.X icebp shl add out js cli adc hlt shll retq jle lahf push xlat (bad) or mov (bad) ja sub pop jb faddl fimul psadbw mov ss add movabs lahf mov rex.WRX fisubl and xor adc (bad) cmpsb and mov rex.WRX insl addl push out mov fidivrl add add or and rep lea jmpq (bad) rclb rex.WB and lods rcl cmpsl mov cmp add sti push jmp rcl xchg or sub jbe (bad) (bad) mov (bad) ja addr32 xchg test rex.WXB (bad) cmp add mov adc rex.X dec jle (bad) rex sub cli jge (bad) sbb pop insb xchg pushq test movabs jmpq and scas in (bad) (bad) (bad) faddl (bad) leaveq sbb movslq pop add (bad) test sub mov mov xchg lret jmp movabs cmpsb mov (bad) or mov jae lea in (bad) fistpll callq adc lock xchg cmpsb movsb fdivl xchg (bad) mov xchg cmp mov mov (bad) mov pop outsl and (bad) or insl add std xchg xchg adc (bad) (bad) jb in mov cmpb stc jo jle mov jg fbstp jno rex fs jge (bad) rex.WB push sub xchg (bad) cmc mov jo movd jle gs or add orl add loopne sbb add add (bad) insl cmp xchg je (bad) xor sub enterq and (bad) cmp (bad) (bad) jl cmpsb je (bad) (bad) testb lock icebp int3 (bad) sub fcmovnu adc (bad) movabs mov (bad) scas or (bad) stos add pop adc je sub sahf add (bad) jle add and (bad) (bad) imul mov iret jl push pop cmp ja (bad) (bad) cmpsb push mov xor rcrl (bad) add mov add rex.RB xor cltd insb data16 push (bad) jb lret andb out pushq test gs (bad) (bad) xor mov lock rex.WR jl (bad) (bad) movabs movb sub add push out rex.B js mov fstpt jge add scas (bad) loop (bad) (bad) xchg mov test movslq add loope scas sti add sbb add (bad) adc callq (bad) movabs cli and jns scas pop rex.W or cmp rorl mov mov roll incb xor out sub pushq outsl insb and pop or cmpsl andb fs mov fistpl xor fwait retq (bad) mov add add retq xchg cmp push add out add outsb (bad) cli add out (bad) lret mov push add (bad) jns (bad) mov sbb in and (bad) (bad) jl cli add jo out xchg fs fwait add or imul callq (bad) (bad) fbld cmc add cs jmpq mov mov insb adc adc loope icebp ss (bad) or retq push jns outsl cs sbb imul test pushq hlt xor add rex.B movabs jno rex.X ds adc mov retq xor movabs (bad) scas or fildl mov jns (bad) stos push add mov cmp sub add iret add mov pop (bad) jp push hlt (bad) add and fiadd rorb push rex.WX lret cmpsl add and mov repz or add sbb mov retq mov pop jae or out (bad) add fcoms (bad) cmpb xor (bad) and lods add jle rex.WR cmp add rex.R sahf in (bad) in or mov push adc stos add xchg (bad) and addr32 mov ficoml out push out (bad) mov (bad) rol add sbb mov add stos or add rex.WXB sbb cmpsb lahf adc sahf or movsl jbe outsb sbb rex.WRX movabs push xchg mov in (bad) jge movabs test jmpq out roll mov clc stos jb rex.W or loop stc jb mov or rex.X enterq sub (bad) (bad) loop add jns lock mov cmp sbb cmp rex.WRX movabs adc movsl sub mov add rex.WB fnstsw (bad) cmc sti pop mov es xor lods test add add sbb cmpsb stos divb jno mov add or add mov sti mov rex.X lods jg jl push mov stos add mov nop add mov (bad) (bad) push cli xor mov cmp sti sbb xchg loopne jl in rex.WXB fsin shlb mov pushq scas mov retq jmpq push add mov rex.W lock rex.WR adc jo mov add retq fnstenv insl imul pop adc movabs fisttpl outsl movabs (bad) loopne jle imul cmp jl (bad) mov je jle pop test cwtl add mov loop mov out sbb add cmpsl repz (bad) sbb repnz (bad) sub scas rex.RX jge fimul jb scas cld cs rex es (bad) rex.RX jle loopne jo jne fiadd mov je adc movabs xchg (bad) add adc xlat movabs lret repz jp loope mov pop add xor push scas fs mov mov jns insl sbb shrb and add movabs push or imul mov push (bad) mov test xchg sbb adc out mov cmp mov xchg (bad) jae mov xor movb jl (bad) rex.RX gs rex.R push iret add xchg push adc sbb cmc sub add movabs xchg xor (bad) lods xchg repz (bad) rex.WX jns (bad) (bad) cmp xchg mov sbb lahf (bad) add jns gs out add mov rex.RX test mov (bad) fstps rol out jmp subl jle,pn subl sbb xchg xor and std shrl rex.RXB popfq jmpq (bad) shr shll cli xor andl push xor xchg repz adc rex fdiv lret pop test (bad) (bad) mov (bad) in (bad) pop xchg pop iret loop jl jo nop lahf loopne mov rex xor jo,pt xor mov jg (bad) jno cld cmp cs (bad) jo (bad) hlt lcall adc fwait adc loopne mov rex.WR mov scas mov sub insb (bad) fnsave lret or rorl ds fmul (bad) retq pop (bad) orl add add cmpsl and outsl shrl outsl cmp rex.B lcall or lahf std jo,pt sti push push rex.RB ficom or pop cs pushq jl js xor js insl jbe data16 pop jb pushq push insb rex.W pushq push in jl (bad) rex.WRB (bad) out pop insl pop in jl ds (bad) out std movslq stc fistp push fistl fnstenv rcrl int xchg rex lahf cmp fwait (bad) mov sbb jg (bad) jge jo xor jns ja pop pop cmp flds sub out xor rex pop push out pushq fisub loop xor sbb push (bad) (bad) (bad) movsb rex.W movslq insb cmp icebp pop (bad) adc mov fwait pop or rex.W movslq adc out movzbl (bad) mov fwait iret (bad) rex.R rex.W rex.X ficom mov fwait adc (bad) addr32 cmp movslq (bad) pop sahf sbb mov fwait mov fimul movslq out cmp xor (bad) jo lret (bad) jle insb (bad) add (bad) (bad) xchg (bad) icebp out xor (bad) shl (bad) fidivl (bad) jle cmp xchg xchg jle out mov jle rex push or jo adc sbb out sub push rex.W movslq mov (bad) out (bad) mov fwait out out rex.W (bad) cmp pop pmaxsw mov fwait (bad) (bad) (bad) rex.W movslq pop cmp xchg rex.W icebp iret cmp pop (bad) out and push rex.RX adc rex.WB movabs and and cmpl push and (bad) (bad) (bad) mov (bad) jrcxz test jle jl mov bnd (bad) fnsave mov pushq (bad) sahf repz mov cli sahf pushfq lea sbbl fcomip cmp mov add xchg jno pop jl rex.R or lret sbb cmp (bad) negl outsb jrcxz movsl cwtl jae jne pop or int xchg push insl (bad) pop fdivrs (bad) out (bad) pop and sbb jo adc or (bad) jrcxz pushq ss (bad) jne (bad) in (bad) fwait cmpsl rex.RX xchg lods (bad) mov push and xor cmc pushq mov xor xchg std test movabs cmp cwtl xor add rex.RB scas mov add rcr (bad) push mov clc (bad) mov lea adc movabs fidiv add mov (bad) rex.W clc (bad) test out add mov sub retq (bad) and jle adc outsb rex.B scas mov pop (bad) outsb add mov jo mov std sub sbb in (bad) push pop jo push rex.WRB rex.WRX mov rex.WRX jo and pop pop outsb or rex.WXB rex.R out xchg sbb jge movabs sbb push jmp add scas jo rex.WRB pushq jl fstpt pop pop pushq out addr32 outsl out cmp pop fisttp xor (bad) push and or repz rex rex.WRB outsl out hlt pop rex.X rcr push (bad) mov jo rex.WRX mov or lahf pop cs rex.WRX rex cli rex.WRB (bad) (bad) fiadd sub (bad) addr32 cmp pushq lahf out jo and mov jo push shl out rex data16 (bad) fcoml sbb cmp sub sbb rex (bad) pushq sbb push jg std sbb ja mov jo and es push pop jo sbb adc xor rex.WRXB rex cmpsb addr32 jbe in (bad) lret mov xor mov lahf negl jo out xlat in js movabs push divl (bad) push out xchg fs add mov in fist xchg jo jo (bad) outsb notl jb add pop adc outsl jge sub callq jo outsb scas and rex.WRB outsb rex sbb push leaveq push lods jo pushq xchg outsb scas rex.WRX lock (bad) jo pushfq outsb sbb jo repz outsl jo sti enterq pop cmp addr32 jo rex.WXB (bad) push xor xchg outsb scas (bad) push jo xor jo out and shrb push (bad) mov sbb push divl in push (bad) push outsl jo jmpq jo rex.R and push movsb out jbe jbe lret (bad) push xor pushq leaveq test (bad) jbe lret in rex.RXB rex mov xor cmpsl outsb scas (bad) push jo rex.RXB rolb (bad) jrcxz jo push xor lock mov rex.WRX mov js test (bad) stos mov pop outsb mov in ficom jo adc rex.WRX imul out (bad) pop rcl addb jp sti sbb push out jmp push out rex.WRX xlat rex.WRX sub outsb scas out rex.RXB jge (bad) (bad) mov lods mov pxor rex int (bad) movabs push pop jo lret (bad) ja es decb scas pop (bad) jo shrl push shrb outsb scas addr32 jo mov xlat push fidivl outsb mov callq adc cs jo fimul pop rex.WRX pop or gs mov pushfq outsb adc push jo in xor retq jp (bad) rex.WRB sbb fidiv mov jo in (bad) jo rex.WRX rex xchg sub cmpsb pop jmp pushq test jge in rex.WXB out xor xor or imul pop sbb pop pop xchg mov jg adc shrl (bad) jo lret mov (bad) push out subl push jo pop outsb pop lret (bad) and (bad) pushq (bad) scas push jo shrb cmp mov outsb sbb cwtl mov addb jo rex.WXB adc jo outsb scas xor rex.WRB outsb push and (bad) lock jo shlb jo nop outsb scas push outsl jo movabs cwtl pushq jle in movabs xchg push insl jo rex.WXB mov outsb scas out push jo fisubr and (bad) lock jo xchg fwait rex.WRXB jp pop sbb push out sub jo sub cmp (bad) xor sbb add rex.RXB addr32 pop ss iret int3 pop fcompl rcll pop push xchg push addr32 pop sbb (bad) in mov mov mov and loope (bad) xchg rex.X sub insb rex push outsb (bad) push outsl jo imul rex.WRXB pop jo sbb push cmc jo addr32 or pushq in pop cmp outsb (bad) cmp sbb pop jo lret push movsb xor pushq rclb lods scas jle mov sbb jbe fnstenv sbb push repz rex.WRXB (bad) rex.WRX pop cmp rex.WRB test rex.RXB jg mov rex.WXB std outsb jle sub fistp outsb (bad) cmp fxch push lret prefetcht1 jo outsl push jo fsubrs cmp mov outsb fist cltd (bad) out jo mov push jo ja js push jo lock xchg jo (bad) jg mov push jo in sub sub pop rex.WRX cmc xchg je je repnz pushq (bad) pop sub jns push repz pop xor and cmpsb pop shl outsb jg mov cmp in push incl mov pop (bad) sbb pop addr32 (bad) pop and (bad) cmp fsubp pushq out pushq adc loop addr32 ficomp adc sahf callq jo adc movb outsb (bad) rex.WRX bswap decb sbb outsb jg push jo int fidiv mov gs pushq (bad) rex.WRB (bad) pop fimull (bad) in mov sub rex.WRX hlt pop stc add mov or pushq (bad) xchg jo outsb scas sbb rex.WRB outsb cmp jp jge add jo jo in out push pop jo sbb adc cmp (bad) js (bad) cmpsl mov (bad) push add (bad) js divl hlt rex.WRB cmpl fidiv jnp push notl rex.WB js pop jo (bad) outsb xchg (bad) mov shrl xchg pushq fcoml sbb outsb (bad) notl mov pop jo (bad) outsb xchg rex.WXB pushq (bad) out sahf (bad) jo rex.WRX pop and jl adc test sbb lahf rex out (bad) jle movabs add rex.WRX cmp mov outsb out push insl jo rex.WXB (bad) xchg in and add scas (bad) push jo je jo fcoml sbb iret notl and xchg js push fcmovu push xchg rex.WRX xchg fsubr pushq add notl in out fisttp outsl rex.RXB push (bad) out in (bad) idiv push insl pop (bad) xor enterq jg sbb rex.WXB mov jo (bad) jo sub sbb jg cmc int3 rex.WXB movsb mov jo movsl lret push out fwait outsb fnop push or retq push insl jo rex.WXB addr32 cmp mov int3 (bad) mov int3 jbe sub mov jo jo or rex.WRX fucomp (bad) (bad) xlat stos (bad) idiv jo mov xlat jo nop rex.WB rex.WRX add lret mov mov rorl lods (bad) mov mov jo test xchg notl mov and popfq rex.WRB xlat rex.WRX fs sbb pop jo mov cmc push jo outsb sarl add rex.WR outsb xor jo std orb scas pushq div retq or and repz (bad) (bad) mov in fs repz jb add repz and push (bad) rex.WRX pop or rex.WRX frstor mov iret mull pop lods in push adc (bad) rex.RXB imul rex.WB mov rex.WRX divl rex.WRX iret xor (bad) pop mov push (bad) pop sbb (bad) pushq (bad) pushq jo loopne sub imul push (bad) (bad) (bad) jp ficomp cmpsb xchg jo push rex.RX (bad) pop shrl xchg mov pushq movabs mov jo out (bad) rex.WRX outsl lods rex.X mov icebp fiadd rex push mov outsb ja rex.WRX push int (bad) addr32 pop out cmp mov mov rex.RXB rex.WRB xchg outsb mov (bad) (bad) pop (bad) cmp js pop or cmp cmp adc sbb pop cld rex.WRB mov ss movabs (bad) lahf pop pushq out pushq xor and pop xorps jo loop and in iret ja hlt pop jb mov fildll jo movsb (bad) jo jns and pop out jo pop imul rex.WRB addr32 (bad) (bad) pop cmp movabs (bad) jle movhps mov xchg mov decl out (bad) pushfq rex.WRX (bad) out mov je mov (bad) jb out lock xchg jo cltd or movabs add shl pushq (bad) cmpsl (bad) (bad) or rcrl (bad) pop rex.RX jp sbb cmp scas push pop rex.WR int (bad) rex.W pop (bad) cmp jo imulb or rex mov in xchg or push rex.WRX out (bad) outsl test jge paddsw mov outsb (bad) in mov cmpsl jl rex rex.WXB or scas pop xchg pop nop sbb mov out jrcxz xor pushq adc rex.WRX loope out (bad) pop (bad) mul (bad) xchg (bad) (bad) out (bad) pop mov out cmpsl sahf hlt pop mov out (bad) cmp jo movabs sbb mov rex.RXB negb shrl lea pop push push and pop jrcxz shr sbb pop imul iret sbb mov int (bad) (bad) sbb mov fisubr (bad) lret rex.WRX (bad) or add repnz pop rex mov cmpsb (bad) xchg mov and (bad) pop rex.W out push (bad) (bad) hlt pop ss cmp add (bad) fstpt rex.WRB negb and test sbb mov movabs out or insb (bad) cmp pop loope out and negb rex.WRXB rex.WRXB addr32 pop loope fdivrl (bad) pop repz sbb mov pop sbb xchg (bad) mov cmpsl sbb jo outsb jo pushfq jo shr scas addr32 pop lea jg jrcxz pop jo fistp (bad) pop cmp pop (bad) sub test pop cmp pop add and pop rex.WR std pop rex.W outsb xlat cmp mov mov loopne movabs (bad) fistpl (bad) pop rex.R (bad) rex.WRB rex scas (bad) out jge test push pushfq outsl jp sbb (bad) rex.WRX cmp imul cmpsl gs cmpsb (bad) insl fistpl mov xchg outsb adc (bad) pop mov xchg gs callq out sub jp (bad) rex.WRX rex.WB sbb pop sbb pop cmp out sub fs rex.WRB pop adc rex repnz push push cmp fxtract pushq rex.XB cmpsb pop icebp xor out subl jg adc (bad) (bad) pushfq movabs cmp rex.WRB sbb outsb (bad) cwtl cld insl pop icebp cmp iret mov out mov pop mov mov rex mov mov (bad) (bad) mov pop lods outsb mov (bad) cmpsl out mov xlat mov mov rex.WRX pop mov outsb xchg (bad) jo (bad) (bad) sbb jp rex.R pop (bad) sub cmp sub cmp sub outsl pop loopne out (bad) rex jge add mov sub (bad) mov decl pop out callq out jb cmpsl cmpsl loopne pop push xchg pop insb lcall mov rex.WRX outsl out rex (bad) mov pushq callq (bad) test sub adc add pushfq add (bad) hlt outsb jg cmp xchg rex.WXB pop pushq pushq insb jo pushq pushq pushq pushq outsb lcall pushq in cmp rex.WXB pushq scas jo imul jo repnz pushq xor jle (bad) js xor add sarb add in push cli rex xchg outsb fiadd (bad) nop outsl lods pushq out and int3 rex.X rex.RXB (bad) lea insb (bad) pop jb xchg out mov fiadd ja xor rcll rex mov loope add add adc cwtl jle pop add (bad) sbb lock jg and (bad) jne in pop jrcxz xchg xchg xchg (bad) jg test sub xchg movabs jno add in fistl sub ja (bad) add (bad) loop imul (bad) (bad) jno adc add movslq imul int3 sub add cmp popfq outsl add stc cmpsl in xchg (bad) (bad) add (bad) push outsb cld xor (bad) xchg rex.RXB xlat mov push rolb add mov movl xor add ja (bad) lock jae rex.XB cli cmp rex.RXB mov add rex.WR (bad) cmp mov (bad) or (bad) xchg rex.R mov add cmp mov add or in adc lea out nop fbld jae (bad) (bad) add xchg xchg add rex.RB test rex.W xor adc cmp jp cmp pop out jmpq xchg add xlat pushq sbb fbld xor mov xor iret rex.W cmpsb outsl leaveq mov pop or imul xchg (bad) fisubl retq stos jae rex.X (bad) in mov rex.WXB neg fwait incl sub fdivrl mov mov movabs or lock imul rex.WX data16 fs out loopne stc mov addr32 pushq lahf (bad) sahf add imul (bad) xor add ss add xchg (bad) jge (bad) repz test (bad) and jle nop and add (bad) push (bad) rex.R mov out jge cmp (bad) rex.WXB (bad) in mov pop add cld rex.WB sub frstor repnz ficoml sub (bad) sbbb test (bad) push cmc std movabs sbb in add sub add mov (bad) lahf fdivrl jle cmpsl retq (bad) (bad) (bad) testb lret (bad) mov add icebp add add cmp popq out mov (bad) mov rex.R xchg add nop movsl movl cld adc xor sbb pop (bad) add in jne fwait rex jle sub and shr and push in in cmp xor movsb cmp rex repnz stc mov add xchg rex.WB ds cmpsl fisubr jrcxz test stos jg pop lret push (bad) rex.WRB rex.RX popq pop sub sub data16 stos rex.WX out sub jno fwait or stos add fnstsw (bad) sbb xchg add mov loop or jle push hlt shrb scas (bad) or lea lods test movabs rex.WX jle sbb xchg mov mov add xor pop cmpsb mov fsub fcmovb insl cmc (bad) jae jrcxz icebp xchg xor ja add xchg mov cmp rex mov xchg scas std jge sarb je add rex.B add cmp leaveq hlt add movsb js lahf and pop (bad) xor (bad) ss sbb es nop add test cmp rex.RB movabs (bad) mov jle (bad) mov adc addb movabs (bad) cmp add fbld xchg add loop cltd ficoml es rex.X and lahf (bad) stos pushq jb enterq (bad) lret add and xchg int3 pop pop xor add or sub js pop (bad) sbb repnz add shrd (bad) stos int xchg cmp push jmpq sub mov add jns lret jle loop or add push stc pushq (bad) cmpsb xor enterq jns xchg (bad) jbe push add shr adc rex.WRX leaveq int movabs pop adc (bad) (bad) lret jb int mov fdivrp fnclex mov loopne movabs rex rex.WX cmp mov xchg mov (bad) lods xor (bad) (bad) adc and movsb jmp xor out mov stc mov (bad) lock pop cltd cmpsb stc adc add rex.RXB jle (bad) or cwtl rex.WB xor jmpq retq (bad) mov sub or mov fstp js (bad) push add rex.X scas in cmp stos jle lods and rex.XB popfq fsubr je add xor pop jbe pushq add xchg xor es add (bad) xlat (bad) or movabs pushq test add nop test out mov rex.X mov jg pop or pop adc repnz mov out movabs pop and out push rex.RX add movabs mov mov (bad) callq push fisttp mov movl adc jle fwait jge and and jmpq jle xchg xchg xchg data16 mov rex retq jmpq retq jge add outsl jnp iret pop jle enterq (bad) rolb push movabs (bad) repz mov or add xlat outsl mov add es cltd cmp mov and (bad) rex.WRXB incl pop in mov push rex.RB outsb sbb add xchg roll xlat jns mov shlb (bad) movslq xchg rex.X rex.WRXB mov rex.B jbe (bad) mov add xchg jle push mov add cmp xor (bad) rcrb sarl dec retq rolb sub pop mov fiadd lret xor retq xchg out (bad) movsb (bad) add mov jns (bad) outsl and push in jno mov jbe (bad) test and rex.WR cmc adc mov loope jl out mov mov in insb jp retq movabs xor add jne rex.RX adc cmc pop stc (bad) add pushq movsb add scas pop (bad) and add jp rex.WRX (bad) ja (bad) mov repnz mov add fnstsw jo lahf push and outsb insb fistpll fild push rex gs add rex.X jb cmp push fstps jg cli sbb (bad) fwait movabs retq loope (bad) or out jae xor mov out add sbb rex.RB add scas xchg push fwait cmpsl stc add jp xchg test jnp ss ja jg test sub iret jl orl (bad) jnp fs and leaveq in out rex.RX add and ds fs and (bad) repz pushfq or rex pushq in lods add stos push test iret adc xor fsin (bad) rex.WX push movabs mov (bad) add es subl fldt add (bad) (bad) rex.XB jle ja ficom mov enterq cmp xchg in outsl jp pop (bad) mov add stos clc add push sbb mov or retq push add stos jb xchg cmc xchg cld sub fimull (bad) or scas cmp movabs (bad) jle out rex.WB mov lock mov fstpt loop (bad) cli out mov ja cmpsl rex.WRXB rex cmp (bad) adc and mov add (bad) xchg sti cmp pushq std int in xorl adcb test (bad) cld jno rex.R jg add jle mov test in xchg add int and add loop cmp add (bad) int movabs jmp (bad) rex.X add pop push iret movslq add lock or ja data16 push fs outsl xchg mov iret (bad) mov rex xchg jrcxz pushq fisttpl (bad) insl add fs (bad) jmp rex.W fadds and es flds sub pop (bad) imul out mov xchg (bad) xor (bad) mov adc fcomip jmpq xor add es rex.X cmp xchg js test xchg fisubr push lahf jp out or xchg mov test adc out or in jb rex.WRXB stc (bad) xchg insl test add sahf and add jb (bad) es cltd adc movslq pop pop mov jl movabs (bad) jge int3 data16 sub in mov cmp add (bad) push mov scas cld add sub lea jg add je hlt add sarl out cltd add scas je cld xor stos xorl pushq shrl movabs jmpq jle (bad) mov int3 andl add sub movb sti (bad) push xchg sub xor loope pop sbb test sub mov rex.R jb xchg lret jg pop xchg xor sti (bad) mov xchg xchg (bad) jne insl cli jmp mov push (bad) fstpl adcl add fisttpl jb (bad) cld rex.WR outsb mov popfq jnp,pn (bad) xor push jne adc fwait cmp cmp mov cmp cmc xchg rex.B xchg (bad) mov out push scas rex.WXB or adc mov lods lods cmp adc addr32 jb and retq (bad) (bad) xchg add (bad) outsl cmp mov mov gs mov fs xlat push iret ss add rex.RB imul shll lea xlat xorl (bad) outsl mov scas (bad) jmpq callq mov (bad) repnz jp fs adc addr32 sub fisubr add lods mov mov retq rex.WRXB retq enterq rex.RXB ja mov push (bad) stc add imul (bad) jg fs hlt sub jg imul push (bad) icebp test xor fistl pop (bad) jb sbb adc mov mov js jne add add in (bad) add movabs popfq add sahf add (bad) xchg roll enterq mov sbb (bad) and add cli int lock jns es mov loope rcll sub movabs add int3 (bad) mov add sbb adc and jge mul stc mov fstpt insb mov mov (bad) add loop fild (bad) pushq stc xchg add repz push movsb adc out outsb shll movsl mov adc movsb jle iret sbb mov mov mov xor mov jo add mov cmc in movabs add pop (bad) jbe test jno in xor js (bad) mov mov fnop (bad) xchg cmp push rex je (bad) cmpsl cmp rex.WB rex.WRXB jrcxz jmpq mov xchg stos in jp mov out xor fbstp fisubrl add adc cs js movslq xchg pop (bad) mov push jle add faddp rex.RX sub mov (bad) (bad) push int3 mov push test add jns or mov adc add ficom cmc add fwait sar jb jo (bad) in sahf adc outsb je insl hlt repnz adc sbb callq (bad) (bad) jg lock retq sbb (bad) incl in (bad) cli jp sbb sub jrcxz mov lods (bad) jl mov push cmp sahf jbe pop push cmpsb fadds out callq ja sbb (bad) jl add (bad) (bad) scas (bad) adc jg adc (bad) xchg movabs popfq repnz and mov jb mov add rol adc mov mov movabs add cmp (bad) addr32 (bad) push ja jae rorb popfq sarb or insl fsubrs imul add movsb (bad) cs pop sbb insb (bad) mov fstpt callq lea add mov retq (bad) mov pop movsl lock (bad) mov pushfq sbb sub xchg es jo (bad) xchg out rex.WRX lock int (bad) mov jg pop sub or movabs (bad) test mov leaveq std or jle rex sahf retq (bad) jno lea (bad) (bad) fucomp xchg mov mov sbb pushq stos mov sahf cmp rex.WRXB ja fs xlat (bad) cmp addr32 andl imul stc movsl outsl mov adc add movsb add sub rex pushq or test in int lods and gs xchg add fisubrl ja stc ds xchg xchg push add mov subb xchg jg cwtl (bad) cmp sub lcall pushq mov add (bad) or scas imul rex.B retq sbb xchg fisubr rcll cmp int3 and retq (bad) sub pop jp mov movslq pop mov mov add mov roll and mov data16 jle (bad) and (bad) (bad) push (bad) and add jg movabs or outsl xor (bad) (bad) rex.WRXB ds shld cli test push lret add cmc or movsb and (bad) or push outsl scas nop rex.W out (bad) in mov divl add test mov mov add mov cmp popfq je push shrl sub nop (bad) out fdivl (bad) (bad) push pop lods sarl icebp mov stc add outsb mov mov fadds pop (bad) jge mov xchg in in rex.W cmp adc (bad) imul add test rex.WX hlt xor cmp add rex.WRB jge loope sub jg fstpl mov rorl (bad) leaveq (bad) insb (bad) cld mov cmp movslq add int3 loopne testb sub or sahf lahf orl stos rex.WB js loope or jg sbb jp,pn pop cwtl test xor fiaddl popfq jge pop cltq lahf loop sahf sub mov ja fstl pop mov std mov (bad) mov fsubs cmp (bad) fiaddl add pop and (bad) adc sahf rex.WXB (bad) jno sbb mov xor xor test pushfq iret xchg pop push loop xor and or jns movabs or jge pushq test add jae jle rex.WRX cs mov add test int mov mov pop jrcxz loopne push (bad) cld mov fildll pop in rol adc pop cli add sub adc jae int push jp js test (bad) jg testb push hlt mov xor xchg mov cli jae mov (bad) fnstcw add pushfq out (bad) in test add in imulb (bad) adc repnz rex.X and rex.B rcrb loopne mov sub jg test add sbb push test jns cwtl push js testb nop (bad) jb cmp (bad) clc mov fs add lods jbe rex.WXB rex.X imulb add xor jg pop cltd js (bad) mov xor cmp lea jbe mov rex.WRB fs push loop rex pop mov (bad) iret in cwtl fadds sahf lock mov pop add cmpsl xchg fidivr (bad) fwait jb xchg mov adc pop and sbb pop lret je (bad) (bad) rex.WX sbb movabs lods jb sub xor in fs pushfq add cmp add rex.WRXB xor rex.R (bad) (bad) test cld (bad) add (bad) iret loop movabs jae (bad) add (bad) cmp jrcxz mov mov and cmp jle jp fldenv mov movabs mov push jle outsb rex.RXB rolb xchg jg xor retq (bad) mov jg adc rex.RXB xor rex.WRX sub mov xor idivl lods insb jne cltd jp je jrcxz (bad) jle push and mov popfq test add and adc (bad) (bad) pushq sbb lahf add scas sub pop pushfq add cmp (bad) pop (bad) decb sub (bad) or jg leaveq (bad) sub iret jg imul lret movabs and fiadd (bad) in (bad) jo sub mov in je (bad) xchg push add sbbb rex.WRXB (bad) jp push cmc pop out addl (bad) fdivrp push sbb jmpq int and clc cs std xchg rex.RB stos out leaveq sti sbb add sbbl (bad) pop fs fcomps (bad) jae add xor push (bad) (bad) pop je repz adc add xor imul imul jrcxz ss jle rex.XB insb fnsave add add add (bad) cmp (bad) and std sub sub (bad) sbb mov jge xor xchg (bad) sub (bad) add sbb lret or (bad) jg sub jb std pop xchg mov add pop (bad) mov and enterq pop adc nop jg and clc rex.W jp mov js callq add jns in pop jge (bad) int3 mov adc insb stc (bad) add (bad) cmpsl mov in lods test cmp cwtl (bad) (bad) loop jp (bad) (bad) xor rex.WRXB leaveq pop movabs out lret add jle fnstsw rex.WB lock enterq (bad) imul push movslq js retq xor rex.RXB add movsl cmp (bad) add cmpsl lret sbb movabs mov (bad) xchg or mov rex.RXB xchg out adc mov (bad) and lret movslq movsb roll sbb jnp enterq rex.WRXB (bad) pop pushq in movabs fcoms jrcxz mov push or sahf movabs pop enterq cmpl sahf test and lods (bad) (bad) (bad) xlat repnz adc mov and add mov mov (bad) cld add sub (bad) insb add (bad) stos mov sarl rex pop adc jg push jnp jl xchg mov jne (bad) insb fs mov add (bad) rex.WXB or mov (bad) loopne out movslq jb fdivrl data16 lock sahf (bad) cmp xor and fnstsw (bad) xor (bad) negb rex.XB (bad) lahf rcl lret sub movsl xor shrl stos xchg (bad) add cltd (bad) fcompl adc (bad) or adc adc sub loopne (bad) rex.RB xor add jnp andb or pushfq sub xor (bad) (bad) outsb movslq (bad) or cwtl (bad) retq std mov scas (bad) add xor adc (bad) fmul je in (bad) xor rex.WRXB pushq imul xchg jb fwait rolb (bad) pop (bad) add mov out mov sbb pop (bad) xchg rex.WB xor stos gs xchg (bad) jle cmp lods insb (bad) out push (bad) (bad) cmc scas jg out add push lret frstor add lret push and (bad) add lock mov insl outsb add cltd xchg pop xor mov pop add outsb (bad) int idivb mov addr32 add fwait pop rclb rex.WRX (bad) adc add scas add ss add xchg outsl (bad) enterq add xor adc (bad) int movsl fisttp (bad) rex.WXB cmc sahf add pop (bad) test int3 pop andl mov pushfq add ja xchg add pop mov or jl add add jo (bad) retq (bad) shlb (bad) and xchg add ja lahf (bad) add jmpq scas jb xchg fwait xchg in add mov fild popfq cmp out js sub (bad) cltd (bad) cmp xchg jle rex.RXB rex.WXB xchg pop cmpsl jo add cs adc fwait adc mov mov jle scas push jbe jp (bad) fdivrp movslq data16 insb and jne add add xor xchg mov mov rex.WRX xor sahf (bad) jg jg movabs mov add rex.XB push outsl pop sbb cmp out add lods jnp leaveq int push in adc cs (bad) mov jbe and adc adc xor rex.WRB (bad) mov xchg scas mov add loop or (bad) pop sbb mov leaveq jns in add stos (bad) mov add rex.WXB imulb adc pop jl pop rex.RXB mov jb or lahf mov repnz or xchg (bad) cmp addl loopne (bad) push jb rex.RXB cmp insl callq and shll outsb rex.X jae pop add (bad) mov rex.R lock and insb push add pop callq movabs sbb in (bad) sub jmpq in jg cmp add sahf (bad) test add insl jp out xchg cmpb pop mov fsubr add pushq movl rex.RX (bad) (bad) fisttpl sub rex.WRB xchg fcompl mov rex.W rex.R jg insl rex.B add mov xchg jp or add fidivr imul xor iret idivl xlat rex.WRXB in pushfq cmc adc (bad) (bad) movsb (bad) iret (bad) rex.WRX (bad) xor insb (bad) xchg push shrl loop (bad) jnp sar add int3 xchg movsb nop xor rex sbb (bad) (bad) mov cltd add pop jb retq repnz clc rex.WXB rex.WR jno pop mov jmp sbb stc popq fs (bad) add jnp rolb mov cmp add and in (bad) pop movsl sbb sar sbb (bad) pushfq sbb nop jno (bad) add add mov imul jmp xchg mov cmc out xchg movsb add jge or sbb sbb pop ss rex.XB jle pop sub stc jrcxz cmpb ss (bad) jae lods (bad) andl clc (bad) and rorb sbb and xor std pop (bad) (bad) (bad) add iret adc (bad) xor sbbl lret pushfq psrld js cmpsb adc adc lods (bad) (bad) paddd xacquire mov (bad) rolb fiadd scas and repnz js and clc jae pop loopne (bad) mov or add push xor mov sahf and sbb (bad) clc (bad) pop add jb sahf jle push (bad) lret movsq cmp jl add test es add addb (bad) mov add rex.WRB stos (bad) and jl stc sbb mov mov divl xchg xchg mov (bad) stc int ja add cmpsl pop and mov imul xchg pushq add add out mov fdecstp or xor jp sar test psllw mov xchg jle movslq out rex.R add rex.WB fsubs add cs (bad) add adc shrl sbb lret rex.WRX fisttpll or (bad) ficom stos add mov pop sub (bad) lahf add (bad) jg mov scas pop out jle add std jnp xor mov sbb int add fwait test stos add rex.RX rex.R rex.R jg rex.W cmp push mov data16 or popfq mov repnz retq add pushq mov xchg rex.RX rex.X jne xchg rex.X sbb decb js jns mov add movsl scas add and divb jmpq mov pushq add movabs es fs push mov push add mov jl jge (bad) adc jo movabs notb mov rex.XB xor movl pushq pushq xor cwtl cmp (bad) fldl add sbb icebp pop (bad) ja mov xchg jb jne add (bad) cmp repz jle rex.WB imul mov cmpsb pushq jle sbb xchg (bad) xor lret mov adc sahf jl (bad) rex.B out add add loopne add movslq mov xchg addr32 or nop sbb shll out xchg shlb add hlt xor (bad) and mov mov test rcll movabs bnd icebp and mov test jnp rex.WRXB fildll imul xchg popfq and jae sbb movsl and mov icebp (bad) rex.RX jge roll mov and (bad) xor add sub add xchg fstpt sahf mov or xchg icebp mov data16 (bad) (bad) xor (bad) xchg sbb in mov popfq jle jns test jp out (bad) test mov loop rex mov mov cli addb jg out iret mov sub add jmp mov (bad) (bad) sti (bad) rex rex.B mov scas jge imul (bad) cmp and (bad) fist sub jo test (bad) push stc mov cmp mov in and sub adc rex.XB in rex.RB sbb lret (bad) add jns lods lock (bad) pushw stos xor add fcomps (bad) push popfq out mov test push (bad) cmp adc movslq lret and or jg add or test adc vandnps sub pop sub adc add xor or cmp je movsb ficompl (bad) addr32 push fildll out mov outsb rex.XB or rex.X cli or cmp fnstcw shll add (bad) rex.W or lahf xor repz mov rex.WX outsl decb jl jp pushq cs out add out add lock add sarb add cmc scas lret outsb or rex.W in rorl xor movabs xchg rex loopne test xchg hlt (bad) sbb cltd scas js xchg sub (bad) movabs movabs ficompl push or movl rex.RX hlt sub rex.W sub (bad) add jle lahf (bad) cli xchg (bad) mov fbstp movabs (bad) jp callq subl cmc add cmpsb jl add pop leaveq callq add and xchg push (bad) add hlt and paddusb or jns pop (bad) mov in xchg int3 lea and rex.WX test fucomip rex.XB popfw (bad) and scas add stos mov (bad) rex.WRX fwait push rex.X xchg js retq std (bad) pop rex.WXB stc rex.WR mul push add mov cs jl mov hlt (bad) (bad) sar insb xchg cmp jrcxz pop jge ds (bad) out jnp mov (bad) jns rex.WXB or pop mov xor fstpt stos jg lret pop lock rex.X movabs test jle sub (bad) ss rex.W rex xchg jne (bad) jbe mov mov add rex.XB jb retq fisttp mov and add negl mov mov fs or add lea (bad) mov enterq in out cmp pop sub out int mov mov out (bad) pop shrl (bad) (bad) mov adc jae (bad) cmpsb enterq xor (bad) inc cmp roll (bad) or sti adc negl test mov fdivs outsl jg (bad) jl add push cld cs or pop sbb cmp xchg rcrl (bad) xchg add imul jae rex.W or out cmp mov in ss add test mov jbe fimull pop xor sti xor fwait mov adc jg addr32 push fwait sbb icebp xor imul (bad) xchg mov (bad) pop or std rex.R rex.WB stos pop rex.X mov add xchg js and lea stc cmp sbb popfq xchg cmp clc (bad) fist sub push lock or and movsb mov (bad) pop (bad) rex.RXB rex.X lods (bad) add icebp in loope add hlt add xchg (bad) (bad) sahf sub icebp (bad) mov jrcxz add rex.B push add repnz pop insl and mov movslq (bad) add mov mov cmp sub mov and orb addl test iret mov jne add jno rex.XB rex.X js lcall scas retq fs jl (bad) cmp rex.WRXB test cmpl mov test pop cld add rex.XB mov jp add rex.WRB mov jle add or pushq pop xor add or jg outsb jp xor or xor je movslq test leaveq out rclb imul adc out rex.XB sub stc rep fsubp movsl sub pop add push mov jb mov (bad) rex.WB (bad) pop sbb (bad) (bad) jge jle lret jg stc movabs mov cmp movabs pushfq add (bad) jne (bad) nop xor out ss mov (bad) add (bad) xlat clc fadds mov pop rex.WB sub es cmp js mov mov sahf add jle or (bad) xor (bad) stc rex.RXB (bad) mov xchg sub jns (bad) add nop addr32 (bad) (bad) rex.XB (bad) rex.W adc adc (bad) add fsubs fnstcw jp lahf cs add rex.B (bad) pop (bad) add int xor loopne clc js mov (bad) sub movslq shr jle cmp (bad) cmpsb mov push lret callq popfq pop jle jl or fstps rex.WRXB loope mov (bad) mov out fist sub pop jmpq mov je jmp leaveq adc push fbld pop push xlat add rex.RXB xor out rex.WX rep xorl xor (bad) rex.W pop addl cmp (bad) adc (bad) repnz lods or xorl rex.WRX cmpsb sbb iret vpmaxub sub (bad) jns movl cltd push (bad) (bad) mov in jb rex.WRB jne jl xlat jbe rex.XB pop sub js out addr32 lret pushq (bad) (bad) sub jg add fist (bad) outsb rex.R insb mov sbb adc lret xchg jo mov (bad) mov in (bad) lahf icebp fstps cmp hlt or adc ss cmp (bad) ds fs push or jg jg sub xor cli scas mov add (bad) or jmp movntps push (bad) je fs movabs callw (bad) nop add out int3 je (bad) adc fwait rex.RX std data16 (bad) xchg rex.WRXB add (bad) fwait imul cli add movabs (bad) test xlat mov mov negb and (bad) leaveq pushq rex.RX (bad) and (bad) xorl jb movsl (bad) insb xor fsubrs addl stos add xchg in pop icebp int3 (bad) push (bad) repnz std cmp cmp lahf pop mov mov jl rex.WXB mov out (bad) mov leaveq pop mov (bad) cld sti je jg mov stc and or sub mov mov (bad) push (bad) mov xchg stos int3 add lods lahf jmpq or add jp rex lods lock push add xor adc jl mov mov ja adc rex.B test or xchg jo movslq movsl (bad) notb add movabs pop sbb jl push (bad) mov hlt rex.WRXB enterq jmpq out sub cld mov pop push std add (bad) lahf movabs adc and loop push jae mov (bad) rex.R movabs sbb stos out rex.X rex.XB js jno or cltd or (bad) add outsl and fsts and rex.XB fnstenv pop add sbb (bad) sub fs (bad) (bad) int cltd movsb add loope push xor xchg xchg rex.B add xor scas cmc rex.RB (bad) (bad) shrb adc cmp sbb sub out cltd jge int3 jbe out jb mov test (bad) popfq pop jg (bad) in ss (bad) clc cs jno pop push jp add idiv (bad) mov enterq repnz push jl jbe mov jnp addr32 callq xlat (bad) gs div sub push ds mov (bad) out pop push add xlat stos jge jle mov (bad) lea movsl (bad) cmp mov or mov pushq and jb int3 std cmp and mov loopne jge movsb jae (bad) or je or mov jmpq insb rex.WR (bad) xor pop jb loopne (bad) (bad) outsb popfq pop movabs sbb xor (bad) fiaddl stc mov addl cmc sbb pushq in test rex.WRXB (bad) movabs mov add add add cli mov jb (bad) (bad) mov test rex.RX xchg (bad) (bad) cwtl in and mov leaveq outsl lods mov jno sahf add and jns test pushq fnsave xor popfq add loope addl or fsubl pop jb cmpsb (bad) rclb movl push rex.X pop rex.WRXB movsb mov sbb loopne lods (bad) movsl jp xchg jle outsb lock xor movsb jb lret mov movabs stos (bad) lret and (bad) enterq rex.WRXB insl sub xchg jnp mov rex.RX jp lods rex.WRB repz fiadd loope cs jb add lea frstor push add or fstpt mov xor testl (bad) or js punpcklbw (bad) add push out test pop rex.WRXB jrcxz test rex.WB retq scas jl int insb lock loop mov rex.WX sbb add in and xchg push scas jbe push and cmp rex.WRB (bad) jp cmc (bad) addr32 sti rex.WXB add push (bad) mov scas add (bad) xchg (bad) cmp rex.X jle push clc cmp in push add in jp out pushq movsb jo xchg rex.W rex.X fs xor (bad) (bad) add pop mov (bad) sub mov or cmp cmp (bad) add cld mov jp (bad) ss fmuls rex.WRXB mov in outsb jp (bad) scas scas mov pop (bad) iret (bad) sub cltd es rex.RX (bad) js pop (bad) (bad) sub add fiaddl fmull mov leaveq std rex.WXB lahf (bad) (bad) mov rex.RX jle movsl je sbb (bad) mov jp push and retq out stos pushq mov mov rex.WX add insb sbb clc sbb mov or add mov movsb and xor callq sub xor fidivl jno hlt (bad) jp (bad) popfq cmp cld add push loopne rolb mov insb addl lahf repz or rex.RX (bad) int3 mov add mov enterq nop jb xchg in mov mov int xchg cli push and test pop in shll fldl nop imul lret jl cmpsb mov push jnp sti sbb adc rex.WXB mov (bad) (bad) xchg add cltd mov sub stos add and push and js (bad) mov mov pushq jb or pop add and sahf adc mov stos sbb and xor iret sbb leaveq rex.R lock jle adc out shrq (bad) (bad) lock or gs adcb cmpsb insl scas xchg or fmuls ss jbe fadds cmp (bad) movabs (bad) add callq xchg rex.WB gs es lods rex.WXB test jge add ja xor mov xchg (bad) mov imul sub lahf sbb rex.WXB jg insb mov addr32 fdivrs mov add jne pop pushq outsb jrcxz jle jo (bad) xchg xchg jge mov or (bad) sub roll fwait jmp sub loop movsl add mov scas test jp rex.RX cmp (bad) loope cltd stos (bad) fild push movabs xchg cmp (bad) add add (bad) sub fstpt and movabs sbb cld mov movsb out (bad) (bad) xchg add callq mov pushq and addr32 or jle jge xor pushfq ja mov (bad) push (bad) push js jno jp rex.WB sti fwait or testb adc mov mov jae outsb fucomp (bad) imul jl hlt add sub (bad) xchg loope add pop xchg push je cmp lock hlt loope (bad) (bad) insl mov mov rex.WX jrcxz (bad) std popfq rex.RXB rex.WB rex.RX in ds (bad) rex.X hlt jp jae jne enterq cs cmp shrl push cwtl jg adc movabs mov ja sar out cltd loope jge (bad) enterq and movsl cmp xor (bad) cltd (bad) popfq jae cmp xor mov rex rex.R decl adc mov decl jns and test out stc mov add mov or sbb pushq (bad) fild add in sub rex.X (bad) push data16 jl negb add rex.WRB imul mov mov or (bad) add or (bad) rex.RXB repz jp icebp pop orb out lock lret jp (bad) mov stc jns rex.WRXB or add (bad) outsb and add (bad) (bad) add xchg rex.WR mov mov (bad) scas movslq (bad) jle (bad) ds fiadd pop lods and (bad) lock (bad) sbb jmpq xchg sbb roll fstpt mov in cwtl callq mov adc or cli je add and rex.W andl or ja out (bad) clc (bad) clc jae ficom loopne pushq test mov rex.XB (bad) xor je fwait cli mov ja jmp sbb and (bad) pop mov cmp lcall rcl cwtl vmwrite rex.W rex.WRXB adc int3 (bad) icebp xchg cmc pop add pop out mov rex.RX scas jbe mov mov push or repnz pop jl (bad) pushfq (bad) add rex.WX cld fstl rcll adc add int3 fs iret imul cmp jg pop mov pushfq push xchg mov and (bad) adc jo es repz out sti insb add (bad) out fldenv cmc xor and jns pushfq add jle enterq es rex.W (bad) add and sbb imul push pop (bad) jg add rex addl sahf rex.WRXB rex.WR int3 jle movabs outsb sub xchg jbe and (bad) sub mov notb lret incl add or lahf stc insl rcr jle nop jl push xrstors rex.R (bad) fistl sahf (bad) mov mov cmpsl mov loopne add movabs test in push sub and scas mov stc fwait loopne cmpl (bad) adc jp lods fstl xor (bad) lods rex.WRXB sti jne or nop (bad) (bad) rex.X cli outsb rex.WRB shrl ja mov (bad) clc mov jb push sbb jo cmpsl fistpll mov add incl xor jmp push adc mov (bad) xchg pushq sub (bad) cmp (bad) dec cmc xchg mov int3 xor stc sub movabs flds jno xchg add add out rex.RX stos fild popfq push iret shrl (bad) ja (bad) lods and test sbb mov add sbb test add cmp movsl or fs cmp mov add and cli outsl (bad) fistl ficom push (bad) ja es ss rex.RX out lret rex.W (bad) rex.X (bad) add push mov mov cmp rex.R cld and or rex.X add lock movabs jae mov (bad) jp movslq sbb jl (bad) cs adc xor xor roll mov movslq test mov jno (bad) (bad) push cmp nopl rex.RB loope (bad) or mov (bad) insl rex.WXB mov rex.RX xchg icebp push cmp xchg and xchg mov jmpq xor or int3 adc (bad) loop pop mov rex.XB data16 adc pop add mov rex.XB (bad) xor push repz movabs loope lret insb sub jmpq jbe outsl rex.WXB sbb pop in test or sub xor add jbe mov sub in out mov test (bad) pushq repz mov rcrb or jmp adc scas (bad) (bad) je int fidivrl push (bad) fcmovnu or in or (bad) jg outsl and stos je xchg and add push retq insb or icebp jg jae rcll cwtl sahf movabs rex.WXB fdivs rex pop cli add mov xor rclb mov iret (bad) mov sbb rolb (bad) (bad) jmpq xchg imul pop jrcxz xlat insb or jns adc (bad) stos mov adc mov and testb rex.WB test sbb xor cwtl stc jne xor push or sbb (bad) (bad) rcll mov xchg (bad) sbb (bad) out pop jns xchg add add mov iret mov sbb xlat add pushfq push rolb pushq (bad) rorl gs add pop mov jle (bad) pop fadd je mov cltd rex (bad) cmpsl add movabs add sbb mov (bad) (bad) (bad) jl retq (bad) (bad) add jg mov push out fldl and movslq lret imul rex.WRXB movsl js stc jg jmpq ror mov add adc sub (bad) sbb pop out mov push sbb outsl retq xchg pop cli add outsb rex.XB xchg (bad) mov add xchg loop or pop jmp sbb cltd jnp cmc mov and imul fisttpl (bad) jbe (bad) push (bad) fs pushq shrl insb jo jge fidivl clc repz incl xorl xchg lahf add je loope test rex.X xchg jmpq rex.WB push (bad) or fsubrs mov stos sbb (bad) mov rex.WR mov jb pushq adc or addl test jbe add cmp (bad) sub stc in lret xor xchg decb cmp fldl xchg (bad) sbb (bad) cwtl sbb fidivl cltd mov push repnz rex.RXB movabs add insb test and sub (bad) xchg int sbb mov push mov or xchg mov sbb test sbb nop sbb outsl cld rcrl cmpsl jb incl jns cmp test rex.WR add mov insl cmpsl (bad) fldl (bad) sub nop add (bad) stos pushq adc icebp cmp (bad) fbstp or (bad) (bad) xchg test sbb jle mov push sbb mov pushfq cmp js xchg add (bad) loop test jno or cs clc pushq insl pushfq lea repnz (bad) xchg lods retq movabs add pushfq cmp imul adc (bad) push jbe add mov and sbb xchg fmuls sbb and repz je outsb ss push (bad) popfq add cli or or imul adc xchg add or fstpl shrd mov rex.WRX enterq push sar xchg sahf sbb sbb jo or cmp and add xchg xchg jb icebp xchg roll (bad) xchg mov cmpsb cmp rex.X es cmp test mov add in cs or stc rcr and add fsubrs fldenv add cs mov add add (bad) jo shlb rex.WRB (bad) sub xchg mov (bad) pushq lea jo mov mov rolb rex.RB rex.WXB add not xor jns push rex.W rex.WXB repnz or mov jns icebp sar (bad) addl clc (bad) pop jne scas (bad) jnp add rex.WRB add popfq stc push repnz (bad) cmc add xor nop (bad) (bad) add lret movabs jg rex.X jae test mov mov repz imul xchg (bad) rolb mov mov sub loopne movsl loope (bad) or js or cli int cmp and add or sti mov rex.RX rex.RXB cltd rex.R mov jle cmp sub fistpll xchg imul test mov jbe cmpsl mov xchg cmpsb jmp jge iret xor jg jno cmp add (bad) jnp jns out jno jbe js insb int3 fdivl insb insl (bad) cmp add add rex.W shrb int3 xchg xor out imul iret cld jo jae sbb clc cmp push (bad) lods xor pushq jbe repz subb adc fnstsw imul xchg (bad) cmpsb jmp jbe,pn adc jg pushq xchg out jae mov mov jns jrcxz xchg xor (bad) mov subl xchg ja js (bad) (bad) test sub jmpq rex.WRXB std scas lcall rex.WXB xchg mov pop (bad) ja lods rex.WRX pushq rex add (bad) out jae out (bad) and insl lods (bad) mov xor rex.WRXB cmp rex.W add jb jg jp xor fsubrl jge sub insb imul jp outsl movabs (bad) jle stc pushfq lods push decb je add rex.X push pushq push jg jo xor mov and or sbb mov clc jne ds scas cmp sub nop sbb insb cld pushq cwtl ja mov js jbe cmp xchg rex.WR adc test pop pushq pop xlat cmp and mov (bad) sbb jl int3 (bad) push in add sbb pop mov sbb xlat mov hlt negl mov fstpl enterq clc pop lock lods rex.WRB pushq mov jae insb in cmc rex.W jb stos in (bad) pop std (bad) ror (bad) clc jl jnp sub mov repnz loope mov xchg sub js rex.WRX push (bad) imul nop rex.RX or and or mulb sub scas orl cwtl jo movabs or jbe (bad) (bad) mov (bad) xorl xor rex.X cmp je pop rolb jo pop es rex.WR rex.WB ss adc add pop (bad) rex.WRXB es mov xor pop fildl std (bad) or outsb js loop je lods (bad) pop in pushq jo jnp pushq mov jl es jo outsb fmulp or std out (bad) jmp push or xchg fbstp rex jb cmpsl in jp hlt pop scas jle adc fsubs repnz sub jbe adc (bad) rex.RX jne add rorb stos cmp rex.WRB pop addr32 mov rex cmp sbb add mov jo,pn xor in adc je stos (bad) cmp jle sub insb sub jp rex.WRB jle fwait sbb add frstor (bad) test insl sub pop imul cmp sahf pop rex.WX gs (bad) xor mov (bad) mov (bad) and cmpb shrb stos (bad) or cmp cwtl rex.XB scas mov jns xchg fsubrl and and sub mov fildll pushq jae push stos jg es jbe (bad) addr32 repnz push jns adc and out rcr sub lock sub jae add (bad) pushfq movabs out mov (bad) imul loopne fnsave jle jge retq sbb cli (bad) add push imul sbb mov std in xchg pop xchg and push xchg add lahf or jl (bad) outsb movsb xchg rex.RB pop sbb (bad) rex.WRXB lret mov jge lea mov outsl add (bad) push sub jbe mov shll xor scas mov idiv jo xchg (bad) movabs rclb out xor pop rex fs xor (bad) jb mov fsubrl jrcxz test pop ror and (bad) sbb cmp and push rex pop xor addr32 add rcll insb fwait cmp (bad) adc push mov stos mov mov int imul jp adc sbb (bad) lock sahf mov cmovnp add pop cwtl push mov js add loope cmp sub cmp (bad) es (bad) jp xchg lock outsb sahf or rolb in (bad) (bad) (bad) adc fs cli mov jbe insl (bad) mov mov jmp mov cmp mov mov insb mov es sbb rex.WR sub (bad) sbb test es add add out add mov adc mov (bad) rex.WRB add mov xor jle js rex.WRXB adc orl fmulp jns ss add xchg out sbb rex jl loop (bad) mov adc cmp jne mov stc out testl xor mov or shrb rex.WRXB fnstsw nop out mov loop insb mov cmp int3 or sbb pop mov xchg lock notl (bad) cmp (bad) adc insl rcrb movabs (bad) cmp mov cs mov nop cmpsb add (bad) lahf mov add test mov rex.WXB test cmpsl imul (bad) movsl lea push add mov jg cwtl jle jb sub rex.RXB rex.WRX mov or mov pop in retq pushq sahf cmp mov ja mov xchg outsb jae or cmp pop gs add in outsb fucomi (bad) ds add and pop rex.RXB jg (bad) fistpll mov (bad) push and pop testb xor cmpsb mov add cwtl pop jo negl or fwait sysenter imul rex.WRB jns lret lods (bad) test lret out scas sub xor cmp adc rorl jg add xchg iret cmp push sbb outsb fcomps xchg add cmovl add outsb pop fist rex.XB ljmp int (bad) push loop cmc lret cwtl add lods in (bad) xor (bad) fwait sbb jge sub rex.RX es out and fldenv cmp sub (bad) mov adc mov scas fucomp add jl sbb xor cmp pushq jo ja jbe and movabs popfq scas js sub insl pop fld jle fstpl fildl movsl xlat and jae (bad) cwtl add (bad) add je mov movsl stos sub movabs int3 (bad) jb (bad) mov imul mov and cmpsb mov sub rex.WX fs jb psubsb (bad) and xchg sbb pushfq retq add (bad) (bad) movabs mov (bad) xchg addb pop icebp outsb (bad) push push cmp xor or je (bad) add push (bad) add push xchg (bad) (bad) sbb adc (bad) and jmpq mov add xlat lods or cwtl (bad) and xor sbb scas rex movsl lods jg xchg ss js int (bad) sbb icebp jb and (bad) cmp mov stos pop add orb (bad) cmpsl jp hlt int3 push push test jrcxz jb mov sub add loop add enterq add adc mov xlat mov (bad) es add addl mov xor and xchg sub js movabs jno add mov pop (bad) add rex.WR mov sub imul (bad) (bad) mov xchg loope add pop jne rex.WB xor mov movslq rex.X cld cmpsl fs add pop push or pushq insl add std cmp lods (bad) movabs (bad) callq (bad) xor fs rex.WRXB iret rex.WRXB sarb mov sub outsl adcl (bad) pop pushq movsl pushq jg outsl fwait jp cmpsb insl or jl scas mov rex.WXB loope add jmpq (bad) jae mov out and imulb (bad) cmp movsl lahf in (bad) pop divb or clc (bad) cmpsb mov mov out cs jg mov cmp out rex fcompl xor mov mov out test jmpq push rex.WRB sub lahf sbb (bad) int std out pushq (bad) xor stos rex.WR fisub rol rex.WX mov xchg rex.R fisubr incb retq pop out idivl enterq xchg faddl rex.B mov outsl (bad) (bad) test movabs testb add jle ds (bad) cmp (bad) rolb retq int3 mov push pushq rex.RXB in sub gs js rex.WRX rex.WR insl pop mov xchg pop mov outsl insl pop rex pop sub jge addr32 or sar orl add xchg jle mov enterq pop in jns xchg repnz fldcw or add (bad) (bad) cmp mov jp callq and xor int ja xchg outsb rex.RX pushq mov jo testl mov in mov (bad) pop js mov xchg rcrb adc rex.WRX rex.RB rex.X and jmp ds jle rex.XB xchg faddl add outsb push mov mov insb sub or je test sbb (bad) (bad) jrcxz jo push icebp imul xor rex.RX mov (bad) mov cwtl and mov icebp retq jmpq or int3 mov loopne xchg loop add mov sahf (bad) add (bad) mov sbb jge lahf xor ds (bad) sti mov or (bad) xchg insb jnp mov or rolb adc xchg mov lods xchg (bad) pushq (bad) rex.WX xor (bad) loopne add jb xor xor jp fs ja scas flds mov push mov (bad) cs sbb jne retq mov add fyl2xp1 in rex.RXB cmp adc hlt cmovne cmpsl jl (bad) insl jp (bad) (bad) (bad) cmc ds out pop xor mov (bad) sub push pop jb adcl iret mov mov rex.RX (bad) je rcrl imul decb in (bad) or (bad) pop insb rex.WRXB rex.RB mov lea and (bad) mov push mov add lea js xor fnsave ja jns callq mov test jl (bad) test movabs mov test outsl cli (bad) (bad) pop fs (bad) pushq js xor xor movabs test add rex.WRB scas fiadd pop cmp mov xchg lret sbb hlt sub xor outsb pop jne jbe jne (bad) sub andb adc rex outsl fisttp mov dec retq cmp pushq jg (bad) pop and adc js jge pushq lods movslq idiv nop fidivr subq jb adc fsts cmp movslq mov xchg rex.RXB rex.RX xlat outsb or jne or pushq adc rex.RXB in mov fisttp mov cs divb pop hlt (bad) (bad) (bad) jl lock psrad cmp repz rcl (bad) out xchg rex cltd fisubrl jge xlat je pop (bad) xor adc fst jbe retq rex.WRXB pushq data16 adc push ds (bad) sub jl mov sbb out jge cmpsb mov (bad) pushq addl push rex.RXB cmp outsb movsl mov push lret mov cli rcll movsb mov (bad) xor push test sbb pop cmpb loopnel fnstenv sahf mov je (bad) out andl jo (bad) je rex.WXB cs imul scas (bad) rex.XB retq (bad) (bad) jo mov xchg fwait xor (bad) cmc (bad) lea js jg (bad) jg rex.WRXB rex.WB fistpl imul jns cmpsb rex.W add mov sub stos add rex xor pushq shlb loope cmp es cmp mov jb rex.W movslq and enterq jrcxz (bad) insl cmpl movsb push (bad) lock (bad) jnp xchg lods movlps adc jmpq jb adc pushq (bad) mov andl pop jnp sub jmpq jno add nop rolb and mov mov fstpt in (bad) sub xchg add sbb out mov push add add xchg mov sti shrb jle mov sbb fwait (bad) add add cmp sar pop push add add or add fwait xor (bad) pop jge (bad) (bad) lret rex.XB add jne faddl jg cmp sbb insl mov jmp rex.WB ficoml (bad) (bad) outsl leaveq xchg mov adcl (bad) cmp lea add out (bad) xor jnp (bad) xor add leaveq (bad) cmpsw pop xor jp mov (bad) xor js out and mov add fcmovnu rclb xor pop adc sub nop xlat ja or movslq mov fistpll movabs (bad) add outsl adc cmp xchg and scas (bad) xchg (bad) (bad) mov xor nop rex.W rex.WRB rex.WX (bad) int adc add (bad) pop jmp ljmp out (bad) (bad) add iret mov nop (bad) pushfq jno stc fisttpl and sar nop add pop adc or jp adc retq movsl cmp (bad) lahf andl rex.X fmuls out rex.WB lods or mov sub pop adc (bad) or (bad) or imul sub mov imul jle cs mov sbb xchg rcrl pop pop ja (bad) in jg cli je rex.RX and and xchg sti fs sub cmpsb sub rex.WXB rex.XB xchg loop rex.RXB rex.WRX cmpsl test xlat mov sbb pop rex.WB add mov mov add jae ficomp add sub add cmp insb shrb rex.W pop sahf cwtl test lea (bad) (bad) sbb add jle sub lock pop (bad) sub add addb sbb out xor push outsb xchg sub pop test jb rex.WRX sbb or add mov add xchg add data16 test adc mov int3 (bad) mov cmpsb (bad) (bad) jp lret loope sahf mov out out push insb repz (bad) popfq lret push cmp out mov mov xchg add outsb test cltd or in mov xchg mov cli decb movabs rex.WRX cmpsl outsl (bad) std or mov int stc jne add and add xchg mov leaveq or mov iret jnp jp push sbb fs cmpsl (bad) in (bad) mov or jbe xor in (bad) xor cli nop (bad) pushfq or pop add (bad) add add movabs xlat (bad) rex.X int3 push scas jb orb mov jl rex.XB rex.WXB hlt rex.XB test (bad) push pushq rol ds outsb jae (bad) paddw and or pop mov add movabs pushq repz xor icebp insl outsl ss ficompl loopne rex.RXB fwait fs push and cmp addr32 add push mov callq add shlb (bad) pushq sti add enterq iret (bad) addb (bad) rex.RX mov add sbb pop out fs test jmpq pop in and add add pushq jns rex.RX (bad) (bad) sub in (bad) jg add or rex.WRX rex (bad) adc mov add orb add loope loop lea in sub std mov pushq cs adc pop rex.B repz (bad) jg test and mov mov xchg or lods int add lea mov jp mov pop or callq mov cwtl mov add cmp imul pop jns sbb rex.WX pop orl add sbb add (bad) cmc push (bad) loop add rcll outsl gs fiadd divb shr add mov jmp sub jmpq add es mov lea rex.WX addr32 jns js push rex.WXB addr32 push push jno mov ja sbb add mov push jno pushfq (bad) cmp jnp imulb sbb out (bad) ss or mov rex.X xor jg stos xor movsb add callq (bad) (bad) movslq pop incl in (bad) cmpsb add rex.WRX movsb stos in or fwait (bad) cld (bad) cwtl and sbb stos xchg xor lods or mov jle std rex.WRXB sbb rex.RB jg imul int3 (bad) lods add add div and add rex.WRB (bad) adc mov (bad) xor (bad) rorl jns add (bad) lock push pop cmp lods jrcxz stos ss scas mov loop lods in in or mov ds rex.RXB jnp mov jge jns jo jne lods (bad) vsubss (bad) pop imul sub repnz (bad) retq jle shll mov rex.RXB xlat cmp xor imul (bad) and cld (bad) jmp rex.WXB scas mov sub (bad) insl lock (bad) pop imul fstl shr loope stos xchg jne xchg imulb jns addb push insb (bad) sbb cli mov mov cmpsl jmp movsb mov mov (bad) pushq pushfq mov jne mov jp rex.WRB push and (bad) jbe (bad) jb or fisubr push popfq (bad) movabs jg push push nop or or nop fidiv adcl cli (bad) stc rex pop adc test mov outsb addr32 mov or push pop jns js,pn cmpsb rex jb (bad) rex.RB lock shlb mov pop push mov jg std insb movabs test pop mov je js push sti jbe sarb and pushfq (bad) imul cmp (bad) fnsave xchg fldenv rex.WXB add out mov cmpsl je or outsl ss mov (bad) rex.WRX nop or (bad) pushq jo lahf movabs cld sub fisttpll je xchg rex.WXB jno (bad) rex.W jp cmc xor jne jrcxz outsl or mov jrcxz nop scas ss sub add cld mov rex.X jg mov dec je and xchg rorb jge add rex.XB lock rex.RB movsb mov rex.WR sub outsb and int (bad) push add sbb test enterq jns pushq lahf or (bad) (bad) push pop ljmp lahf repz rex.RX cmp or cmp or and add adc jmp add movabs sbb insb (bad) iret mov js pop cmp xchg rex.RB fidivrl xor sbb fisubr pushq jg cmpb (bad) repnz mov icebp mov add gs add mov cmp adc std xor lods (bad) jl cmp and fidiv add and (bad) sub stc fdivrs push rex.RB mov ss fs repz mov (bad) retq (bad) sub and or jg (bad) mov pushq (bad) jl js lret and in cmp add movabs cld pop sbb sti jle xchg mov pop xchg fisubrl adc popfq adc add or xchg and js xchg (bad) add push addl xor pop (bad) fwait cvtpi2ps movabs (bad) jle cmp jg xchg cltd wbinvd je jp and mov pop add cmp data16 (bad) add jne adc (bad) and mov jno (bad) xchg rex.WX jp pop mov cmp jle xchg lea xchg jno stc mov cmp (bad) sub (bad) pop pushq (bad) popq jl cltd in and scas jo adc sub stos outsb rex.XB (bad) xlat mov shll add mov fwait (bad) shlb sub test gs ds and jle pop add jno sbb mov and (bad) jg xchg (bad) shrd add mov out outsl sbb jle shl fidivrl in adc ja and mov add sbb mov stos (bad) jg sbb repz jle (bad) xlat ss fwait jl enterq jmp loop add insl add rex.WRB cwtl pop jl setl mov int jb insl clc mov cmc out ror push add fwait loopne add retq (bad) (bad) in mov roll rcr sbb rex mov jp cmp sub and sub cs mov mov xchg lock pop (bad) fild and adc add (bad) adc or add adc (bad) je rcrb push stc xor and add cmp or rex.WB retq fidivr cmp fstps insb and sub (bad) add cld xlat and cmp rcll rex.R adc negl rex.X insb mov rclb xor pop sub (bad) mov cmpb movslq or (bad) je fimull loopne fidivr jrcxz jne push mov rex.WR cmpsb mov testl add mov sbb outsb add data16 lock jb mov sbb jnp sbb jno icebp movabs cld sub mov fwait cmp push std sahf adc loope mov add (bad) (bad) rex.WX stos hlt stos js xor faddl (bad) (bad) sahf data16 ja (bad) callq mov cmc (bad) (bad) adc cmp mov addb adc jb fs fmuls adc movsb imul cmpsb scas push idivl jae lea lods (bad) in (bad) rex.WXB xor movabs jae lahf mov es ss sarl shl (bad) mov fidivr (bad) outsb xor xlat jl (bad) (bad) (bad) mov push xchg sbb clc add xor test mov xchg xchg movsl jle rex.WB (bad) jg negl mov loopne jmpq imul push mov lret rex.WXB callq divl mov ss retq fs rex.B (bad) lahf xchg out jmp movsb (bad) (bad) jnp (bad) pop cmp mov (bad) popfq rol mov in mov (bad) cmp ss add test insl sub rex.WX addb xlat adc push sub cltd (bad) xor xchg add jne cmp add mov lahf cmp hlt (bad) and rex.R (bad) (bad) sbb lods pop mov fist cltd or mov (bad) js add movabs rex.WRB (bad) retq or cltd rex.XB fldpi mov jno (bad) int3 xchg xor movabs add sbb test cwtl add lahf add imul (bad) fdivl push jp (bad) mulb (bad) pushfq (bad) rex.WR rex.WRB fmull xor mov es addl add in xlat ja mov mov mov ds loope adc jp mov fsub (bad) (bad) xchg jae cmpsb jp scas ds and lret jp rorl mov sbb movl fistpl add rex.RXB outsb or mov scas xchg jbe repnz fstpl (bad) ficom mov mov ss (bad) jo add jrcxz sub jl mov (bad) stc rol push pop int3 icebp cwtl mov imul lahf rex.WX rorb pushq (bad) rex.RXB jo rex.WRX (bad) cltd (bad) imul scas (bad) xchg movsl rex.WRX rex.WRXB rex.WB hlt lret (bad) outsb pop lods lret out jg rex.X cmp out xor rex.X orb jns push jns (bad) repnz or popfq jne add jnp iret js (bad) in xchg jle outsb fsubr imul mov jl insl cmpsl cmp mov je divl std (bad) cmpsb imul rex.RB adc mov (bad) jge lods rcrb (bad) bsr loop or sub (bad) imul jbe (bad) pushq fild rorl insl lods pop in fwait adc jmp (bad) (bad) jne (bad) (bad) enterq mull cmp insl insl in (bad) mov movsl ja rorl movabs test mov xor lahf jl int adc xor push jo out js pop pushq rex.WX scas or pop rex.X mov add cmc fildll (bad) mov pop cmp test sbb fwait mov pushq rex jl negb rcrb fstl out cld outsb cli rex.WX jns and jle jb (bad) (bad) push in mov jle nop outsb scas jns adc cmp sti or fisttp jp sub insb rex.X imul pop sahf icebp js sbb push fimull (bad) (bad) lock xchg fdivs pushq loopne push scas popfq jno fisttp mov jne lods add (bad) push (bad) rex.WR pop fild movabs (bad) sub pushq jnp (bad) (bad) xchg (bad) stos push xor cltd insl cmp pop mov outsb (bad) or mov mov mov (bad) callq ja je and movb pop movsb jbe es (bad) and mov rex.WX mov movslq push jge jg jnp or (bad) jae fs push cli add ja mov sub shrl (bad) rex.RX adc mov imul or nop (bad) add mov in jp rex and (bad) rex mov enterq jmp leaveq in jbe out xor jg or push (bad) and cmp xchg rex.WR divl (bad) cmp push (bad) and mov addr32 jle push (bad) (bad) data16 fisubr rcrb lret ja mov roll rex.R data16 xchg mov jbe xchg pop jp in push mov fistl sahf js cmc xor je add cmp add insb cli or jo pop (bad) xchg push and adc rex.X leaveq adc xchg mov add push jle decb fisttpl jg hlt icebp stc push jp fadds ss xor jae jle rex.WR je data16 callq fwait adc xor jmpq and retq mov mov fidivr gs in mov lock fwait xor xor (bad) (bad) ss lret (bad) pop xchg loope (bad) and enterq (bad) movabs (bad) fidivl xchg xor (bad) lret add imul jb out lahf icebp outsb outsb es rex.WRXB cli mov hlt or retq lods push leaveq (bad) jle add pop fsubp jle mov sub fucomp rex.WRB pop jmpq scas test sarb callq fsubp add cmp lods (bad) loope cmpsb add add pushfq add rcll jb jp mov lahf jg mov pushq xor sub jl hlt (bad) add jb sti test addl add rolb in or push add sbb mov sar push (bad) xor loop pushfq cltd sar add adc negl addl data16 (bad) test decl add scas pop pop mov movabs pop (bad) cmp pop sti mov xlat xchg sub loopne rex addb es cmp fldenv fistl pop mov cwtl mov insl sub jge outsl stc cmp orb (bad) gs rcll rex.X add jl mov cmp test rex.RXB mov add (bad) test jmp shl add add lods outsb movsl (bad) add data16 mov rclb (bad) fisttpll rex.RXB cmp jp repnz add shlb add jg lock stos rex.X add (bad) xchg pop add sbb push out jp cmpsb mov stos test scas sahf shll and decl je adc jb rex.RXB mov add sub (bad) (bad) cmpsb sarb int3 sub or mov scas lods mov jp outsb cmpsl sbb (bad) outsl pop notl test int3 cmp rex.WB js sub mov xor cmpsl mov pop jp in test test (bad) fdivl add in and add mov out add out lret cmp rex.X add rcrb sub mov out icebp lret xor sbbl (bad) adc mov and rex.WR add fstpt hlt jnp rex push (bad) jle int3 mov pop (bad) enterq jp xchg push xorl (bad) xor adc jae adcl ss sbb out jnp xchg std (bad) test scas repnz (bad) loope rol and outsb mov fbstp pushfq (bad) mov mov jp mov mov add icebp sub rex jae add out xor fsubs jg rex.WRXB (bad) fstpt xor in rex.RXB lret xor pop add callq (bad) cs pushq insb fildl (bad) or movsb stos out jp (bad) sar repz pop loope add adc (bad) (bad) add rex.W movabs jle (bad) sbb fs js jae jbe jle test movl ror xor (bad) fld in jbe rex.R (bad) sbb int3 insl (bad) (bad) push scas sbb insb cmc jno mov (bad) rex.RXB lahf xchg int repz or (bad) (bad) and sub fwait rex.WRX (bad) cmc add lret rex.WX (bad) mov xor adc mov (bad) mov mov rex.WX mov repnz add (bad) mov adcl mov lods jnp xor outsl xchg rcrb insl add jl jo sahf push lret add pushq fldenv add xchg xchg rex.RX mov icebp in and shrl pop add gs mulb jrcxz jb mov mov repz roll (bad) stos jae push jl retq js (bad) mov adc pop mov fisubr cmp mov lea movabs and (bad) (bad) push adc jno repz out test mov jmpq mov (bad) cwtl add sub movabs push andl in insb add incl sbb push sbb movslq test je push (bad) add (bad) push in sbb test add xchg mov stos rex.WXB rex.RB xchg xor es (bad) repnz rex.WB add cmp rex.WRX mov add lock test sub (bad) jb sub scas jp mov fsubrs and js jl cs rex.WRXB (bad) or or pop add mov (bad) jbe (bad) and repz in out mov rex.WRX nop pop rex.WRB (bad) or and test gs int3 jle jge out movabs sub pop fnstenv ja (bad) pushfq lods jge outsl (bad) jno (bad) rex.WXB mull scas sbb add jne mov jbe cs fisttp add movsb mov mov cmc movabs jns in movabs rex.WRB scas in pushq mov adc jle movzbl stos sahf and jrcxz xchg fnstcw mov fcompl rex.W insb xlat (bad) jrcxz mov or ljmp movabs stc mov js fs outsl mov (bad) add gs popfq rex.X imul add xor out sahf (bad) sub (bad) sub jmpq add movabs mov xor shr (bad) mov rex.WB and add pop (bad) xchg jb xchg mov and xchg mov cmp (bad) cli mov (bad) fild xor (bad) sub (bad) push xchg lock movabs cmp ja xchg lock add sub lods mov jle (bad) mov or imul rex.WXB movabs mov sbb pushq adc (bad) rex.WRX scas mov stos or jle sub imull cwtl add in push jg add rex.RX or pop xchg (bad) sti fisubrl mov icebp mov rex pop (bad) stos push movabs imul retq and adc (bad) (bad) mov jp movsb xchg rex.W ds pop jnp cmpsb xchg mov add mov pop jae push jg jle xchg xlat add (bad) jmp sub xchg orl add mov sub fstps sti push pop (bad) nop (bad) jmp push mov rex.RXB stc fidiv movabs js jrcxz test rex.WXB fistl movsb test rolb outsl mov fs xor out repnz retq rex.WRXB movabs popfq rex.WRX mov (bad) jb (bad) jg outsl stos rex.WR sbb mov sub sub out stc push push shrl retq rex.XB rex.WRXB pop movslq sub rex.WB rex.X mov retq stc add (bad) push (bad) push sbbl cwtl sti rex popfq (bad) mov sub incl pushq mov add push popfq ficom (bad) cld pop or (bad) pushq add xor out addl movsl add (bad) (bad) fisubrl jnp pop jmp mov (bad) ja mov mov pop add out jbe push (bad) in rex.W mov or test mov (bad) xchg addb imul cmc and andl (bad) fidivrl mov (bad) bnd pushq sbb in rex.X and cmp pop neg xchg insb add cmp mull movsl adc and rex.WR cmpsb add repz loop movabs ds cmpsl add jb jo test not mov lahf and add rex leaveq xor jrcxz test (bad) jge retq or xor add add rcrb or xor lods sbb mov (bad) (bad) xchg fnsave vmovdqa in mov es rcrb imul pop xchg out movabs push add pop sub jo fdivr rex.WXB cmp add push iret outsl add rclb cmp pop add pop repnz or jnp mov adc add mov add (bad) out retq movabs in roll lea (bad) sbb loopne out xchg in cmp test es movabs xchg add jle cmpsl ja xchg fs sarl movabs out mov jl adc scas mov xchg mov leaveq add pop out mov push jbe mov pop (bad) cli fwait jp (bad) rex.WRX rex.W test (bad) (bad) cmpsb cltd iret add test stc pop (bad) sbb idiv cmc cmpsl fs add fisubr repz mov xlat (bad) jns fadds clc test pop jle out decl mov add pop xor addr32 (bad) mov scas pop xchg rex.RX adc jle mov jg jg sbb mov jae (bad) sbb in imul adc rex.WX xchg push gs incb insb or stc sbb lods loope add xchg movabs stc and adcl jmpq or (bad) stos verw (bad) (bad) (bad) (bad) je jle stos xchg fldcw pop (bad) mov pop jbe not jg or or jne xor jns fildl insl rex.R leaveq test adc rex.X add xor mov adc lock rex.XB sub je mov cmp lahf cmp (bad) add mov hlt pop mov loope sub mov jno (bad) (bad) mov cmp ss adc sub cld xor (bad) xor rcrb mov sbb xadd add rex.WRXB popfq (bad) (bad) fdivrl push xchg rex.W cmp sbb xor imul pop (bad) jge fldt add rex.RX (bad) add icebp rex.WR add out and add (bad) add fnsave int clc fs loopne (bad) rex.R xchg stc xor jle xor mov cltd mov lock (bad) xor rex.XB or (bad) jge (bad) std (bad) neg xor test sbb imul push xor (bad) pop jge repz adc jp xchg pushq xchg test mov adc test and mov xchg rex.RB or test and sbb sbb add sub cld pop sahf andl xor xor fs jp (bad) (bad) scas mov add rorb xor cmp mov xchg (bad) sbb out cmp or out stc rex.WR push pop push add or loope shl (bad) mov add jge,pt (bad) rex add xchg jb mov cmp fisttp xchg repnz and cmp (bad) (bad) fcoms je faddl add mov loop fnsave rex.X (bad) mov pop (bad) jge jnp xor callq rol sarb js rex.WRX fcompp movabs outsl (bad) rolb or jmpq retq add scas xchg rcrb pop jg rex.WB rex.WR jnp push fwait mov (bad) and std ljmp callq je scas mov (bad) int3 clc add cltd rex.RX std mov popfq rex.R negb test pop lods stos sarb add xchg cltd jae rex.R adc jmpq imul or adcl xor (bad) push and sar jrcxz ss ds mov push adc movslq (bad) mov jns (bad) xchg push lods lahf add (bad) push rex.WRX (bad) adc sahf xlat mov js (bad) outsb (bad) jl jns je outsb pushq (bad) mov xlat xchg add (bad) mulb fwait clc (bad) fs add and and in mov adc add popfq fisubrl icebp push repz stc sbb insb (bad) (bad) fs xchg pushq leaveq jp mov (bad) je pushq fs xor ss fnop push jmpq (bad) jge int3 jne push int (bad) jge or in shrb stos pushfq or pop mov rex.WB sahf insl sbb in out rex rcl cli xchg adc jge pushq fwait cmp or fs shll notb leaveq adc int3 add push rex.RX jg mov xchg jne rex.B mov jne and pushq hlt push adc push lret (bad) mov add rex.WRX in (bad) lret jo mov movabs cld pop stc mov cmp faddl pop outsl add xchg sbb std out add rex.WX add in add jg cmpsl out iret mov (bad) pushfq xchg push rex.WRB add imul (bad) mov add or addl mov jne xor or sbb fisubl adc nop add fwait iret pop add movabs sub pushfq (bad) jrcxz jle stos rex.WX cli (bad) es xor and rex.RB mov rex.RX fsubr fcmove cltd idivb (bad) rex.WX add mov jb out mov ja out rex mov xor je (bad) insl sub add cmp sbb sbb (bad) test (bad) xchg lods and test xor add lods in mov add cmpsl fcoml pop add insw pushq (bad) xor sub cmp rex.RX rex.RXB test js fldl add insb in fs mov jl imul mov mov pop mov (bad) jge (bad) push popfq mov (bad) nop jg test (bad) mov adc loop (bad) push mov add jns mov sbb add rex.RB out adc jne xchg (bad) sbb insl (bad) in vcvtpd2dqy cmp add adc sbbl add orb (bad) add xchg lret (bad) outsb popfq retq jg test mov and mov lods mov xchg sbb rex.RB (bad) and rex.WB rex.RXB (bad) (bad) in xchg rex rex mov (bad) adc rex.X add jbe cmp and add test addl fsubrs movabs rex.X mov (bad) and rclb lods nop fiadd shrl data16 or jno cmpl xor not sub addr32 scas insb sbbl add jne xlat adc outsl add adcl pop scas xor or sub add (bad) (bad) fdivr mov (bad) shl pushq add in rex.WRX pop rex.RB and xchg test mov pop cmp add and lods mov pop movabs sbb fdivl and pushq mov mov lods ja add xor fnop adc add rex.RB rex.WX lods pop (bad) pop add fwait cmpsl cs (bad) cmp ja (bad) mov movsl mov frstor (bad) fdivrp outsl or (bad) fwait clc rex.WB rex.RX pop xchg mov add popq rex.WX outsb mov jnp imul movabs cs xchg movabs repnz adc cmp jb mov rex.WRX sbb rex.WR (bad) jl leaveq fcmovbe xor mov sbb (bad) fs popq in push gs out int3 movl (bad) add add shll jnp add (bad) jne jg or (bad) and sub rex.RX cmp (bad) xor mov add notb or pop sbb cmpsb add addr32 outsl mov add rex.WRB movabs xor stos (bad) jb adc (bad) scas (bad) out or jg cmpsb jne push fwait addr32 out push out rex.WX mov sbb xchg add mov xlat xor cmc lea imul jns push (bad) add adc test jno stos in sub ja xor je cltd rorb push and xlat pop retq mov sbb shrl pushfq jg mov cld movabs sti xchg (bad) lret rex.WRB jb cli jb add pushq je (bad) popfq icebp jp jl (bad) (bad) js mov je sahf mov add mov (bad) xor out push cmp (bad) sub fmul jle and xchg xor retq mov rorb ss jns add subb ss movabs jbe rex.RX add pop pushq jle rex.WRB rex.RXB mov mov test xor (bad) jnp out cld jp (bad) xchg scas in adc or add int rex.RX jg shl pushq bnd addr32 xchg and stc pop mov xor insb es movsl pushq repz lea xchg (bad) jmp js pop mov callq clc (bad) xchg push or jne (bad) addl (bad) and (bad) mov pop (bad) pushq std xlat movabs lret push fldcw adc and test (bad) rex adc (bad) fnstcw jno xchg ljmp sub rex.WRB jne rex.WB pop pop add test (bad) mov rex.R push cli movslq mov sub xchg push out rex.RXB fadd pop mov rex.WRB in jb lahf push insb (bad) jl movabs jb pop push push test (bad) push movb pop jg negb scas (bad) adc mov xchg sbb loope (bad) scas fstps pop out (bad) sbb out cmpsb in sbb imul loop stos sub insl mov add jg rolb lret or es mov (bad) and xchg (bad) cld (bad) pop out jmpq xchg rex.WR lea rex.WX add fidivrl xor pop fisttp idiv rex.X fs sahf (bad) xor out adc (bad) adcl xlat pop (bad) pushfq in xchg cmp jne lods rex.XB jp add or js (bad) (bad) jbe and clc jge cmpsl cwtl push lahf xchg sub or mov (bad) push rex.WRXB pop jge xor or (bad) movsb repnz mov clc movsb rcrl (bad) mov jns rex.XB std rex.WB add sarl insb mov cmp or jnp scas (bad) jae adc mov fidivrl pop xor (bad) sub rex idivl pop mov data16 movabs rex.RB lods xchg and mov in lock cmp or ja cmp icebp (bad) in pop push data16 sub outsl outsl xor jb mov (bad) ror push mov js sub pushq cmc pop xor stc insl mov sub cli (bad) sub (bad) negb jno movabs loope push punpckhwd ss (bad) stos insb rex jl (bad) scas mov (bad) sbbl movabs jge cmp sbb (bad) jne pop cmpsb rex lret adc cmpsb out sbb rolb (bad) mov and (bad) fsubrs cwtl lret js movslq push sti add xor fsubrl cld sti std and jle rex.X xorl xchg cli mov jge jne,pn sahf clc rcl rcll xchg loopne sahf jne fcmovnu or fstl ja incl (bad) insl ss and fistp rex.X insl pop lret or (bad) jmp iret jp rex.WRX mov mov sub sbb stos sbb insl push (bad) or pop jmp cmp and fdiv xchg jg xchg mov mov ror (bad) clc push sbb (bad) fwait imul testl clc mov mulb xor or insb addr32 add push and pop mov sbb andl popfq nop (bad) idiv jo rex.RX rex.WRXB xchg js xor addr32 vsqrtsd leaveq test js icebp jnp xor scas gs mov cmp lods mov add xchg jnp mov outsb nop jge lods xchg lods movabs sub test ja imul (bad) jge pop xor out imul jle (bad) jnp stos and rex.WRB insb jle fidivl (bad) mov (bad) jns rex.WRB mov rex.R (bad) xchg sbb js loop imul xor push (bad) (bad) movslq push xchg push rex.WX scas jnp (bad) (bad) scas cltd or pushq subl insl in sbb mov xor push rex.X rex.B rex.R and (bad) jne push pushfq push and movabs (bad) pushq xchg jbe out pop cli rex.W retq int (bad) iret xor cmp jnp cmc xor fidivr lods (bad) add xchg (bad) unpcklps pushq or (bad) mov or xlat cwtl xorb mov movabs sub or and xorb mov (bad) (bad) sbb js pop test xor scas pushq ficom outsb js cmp add fidivrl xor (bad) loopne cwtl cmp or and jmpq jp rol xor sbbb jl mov jno pushw rex.RX push (bad) cmpl and mov lods hlt mov cmp (bad) rex gs pop insl xchg jae sub cmp (bad) jne mov mov adc out mov mov movsl rex.WXB sub rep rex.RXB adc test in loopne rex.WX (bad) je jg pop and (bad) jo cmpsb pop jle jbe adc loop in cmp lea xor pop shrb sub jo and gs lret mov rex.RXB callq mov insl lahf out in rex.WB lret scas stos (bad) xor iret cmp shrb (bad) movabs add (bad) sahf sub shl and (bad) callq movsl mov push (bad) mov movabs (bad) xchg outsb xor rolb nop and mov int fstl rex.RXB fidivr mov xchg add enterq shrb incl xchg fmull mov movl movabs rex.W mov sub add (bad) mov rex.RX mov outsb pushq jnp add ror rcll jrcxz and xchg popfq mov rex.WRXB lods rex.R std (bad) scas in (bad) icebp test rclb rex.X add popfq in and pushq rex.WB pop (bad) rex.W add faddp cmp gs shr (bad) add lea scas test negl fsts mov xor lret outsb mov cmp xor or js push (bad) lret clc rex.RXB push add pushfq enterq cmc out xchg (bad) (bad) rex.WXB xor fsubl loop (bad) lahf (bad) push fnsave sti out out out sar js jmp and rex.R or addr32 rex.WRXB clc rex.XB icebp sbb int (bad) rex.WX mov (bad) frstor xchg xor (bad) ss pop add (bad) lea mov jl rex.WRX repnz enterq xchg adc pop (bad) rex.X mov movabs (bad) callq retq add or adc mov cmpsl (bad) (bad) push out pushq jnp rclb out insl jae ja jmp xchg jae xchg loop cld (bad) je rex.R jo pushq rex.R fs mov jae out (bad) add repnz fadds pushfq icebp (bad) jg pop js rex.WRX add insl and xchg jo insb sbb add jno ds mov mov shrb push (bad) loopne sbb cmc (bad) repnz test xchg sbbl mov jge and sti insb mov jno sarl retq jbe repz jbe movabs rex.WRXB jbe or jp xlat jle pop (bad) cwtl jae (bad) xchg jne sbb (bad) cmp xchg jl sub (bad) push cmp gs hlt or jbe add outsb pop mov add xlat jo jg bnd jp movl rex rex.RB pop jmpq testb xorl movabs jg scas js rorb add (bad) fisub rex.WR push mov lret cmpsb mov sub add (bad) rcll rex.WR xchg notb out cmc fs xchg pushq push or add rex.WXB test movsb test and mov adc std (bad) pop fs push and fwait add add (bad) rex.WR (bad) movabs (bad) (bad) (bad) add cmpsb cmp movabs movabs or add rcrb push add mov mov jnp jrcxz js xor jp rex.RX (bad) (bad) mov test mov sub jbe add pop (bad) mov retq iret (bad) push test test xchg jno rex.W add or mov rex.RB mov fistpl (bad) cmc jne pop andl imul test loopne push cmp jmp js mov insl lret push jrcxz fnstcw mov (bad) clc push mov scas outsb cmp test mov sahf outsl fadds adc push add mov sub imul push out (bad) adc mov jo sahf mov jb add (bad) jmp sub (bad) lret ljmp fbld add adc stc adc or (bad) outsb shlb add add jb retq push cmp add gs add xchg rex.WX sbb add mov stos sub and es jg jl scas test shrl in mov (bad) mov (bad) movsl leaveq cli fadds movabs sarl in movsb xchg fistpll mov movabs (bad) in add movsb xchg test xchg jl rolb mov mov loopne sbb popfq rex.WX add and rex.W rex.WXB mov adc pushq pop jo nop add mov (bad) mov (bad) xchg iret (bad) sub callq add mov rex.WR nop nop fwait and fsubs ljmp in test rcrl jg or mov jle sbb adc callq add lret adc mulb outsl mov add rex.X add mov or andb jle cmp mov stos cld (bad) (bad) sub jrcxz fiadd idivb outsb mov rex.XB fbld rex.X mov mov jg mov mov xor pop sub cmc pushq enterq sbb add cmpsb stos mov sub outsl mov add jne mov jle add pop push or rex.RB add test rcrl adc fistp in rclb xor insb imul add mov or add mov js (bad) and xchg and add shlb mov rex.RX shrb insl jmp jo jae sbb or or mul and pushq (bad) movabs stc xchg mov or int3 lock jmpq fmull sub jp (bad) test sbb (bad) (bad) mov and add notb (bad) leaveq or cmpsl rex and and sarl add imul sub (bad) ss rex.RXB mov orl pop hlt jno jp lret imul mov pop callq div imull fdivl shr rex.RB cmp ficompl sbb std (bad) xor shrb fstp cmp mov and test jg jb sub nop pop (bad) pop mov or push (bad) add and push lock cltd rex.W fwait pop jge cmc fcoml add pop push std imulb add add ja jg in rex.W rcll sbb jle and stos imul movabs or xor js je (bad) or (bad) jp (bad) rex.WR addr32 shll and and cmpsb (bad) scas mov (bad) fistl stc push jb rex.WB (bad) push (bad) add fsts jnp movabs fucomip add ds outsb rex jrcxz retq callq xchg adc mov rex.WB popq (bad) ficomp add jns mov testb (bad) xor popfq enterq retq out fimul movsb (bad) cli movabs cltd test mov pop add or adc add out int3 sub pop rex.WRB mov jae (bad) add xchg fnstcw rex pop (bad) (bad) or add sti out mov jle stos imul ja mov movsb (bad) add movabs mov rex.XB repnz (bad) add fldcw rex.RX pushfq out and xchg (bad) retq jns rex.WXB jg hlt orl xchg rex.WX add sbb (bad) sbb out (bad) test fiaddl add xchg (bad) jb (bad) and in sbb movsb fucomi pop add adc movabs jne and lods and ficomp mov xor rex.X movslq (bad) mov clc loop rex.WRB or pushq stc sahf jb insl popfq mov incl or rex.W sub ja movabs push adc imul mov pop lea sbb mov loop (bad) mov add mov adc sti mov push scas lret movabs sbb sub jle mov callq fsubrs rcll pop fnstenv add rex adc sub nop xchg add or cmpsl jmp rex fcomi xchg ss rex.R rex.WB add icebp xchg push add cwtl iret push ss loop lret (bad) adc fcoms (bad) jns fnstsw fs addl mov iret cli (bad) xchg cmpsb clc add movabs (bad) adc add shrb mov mov sub (bad) xchg push add insl add cwtl xlat (bad) iret and mov es mov add mov sub movslq cmp rcrb loope orb fdivr pushq rex.XB cli test (bad) sub outsb add mov (bad) rex.RX sbbl or and ds loope fdivrp xor outsl (bad) jp retq or out jmpq rex.X (bad) rex.W in callq add (bad) xor adc push fstpt add mov pop (bad) push data16 fs std loope je xor sbb pop rex.X (bad) mov sahf retq (bad) mov jge mov mov sti xor push rex.X es and (bad) (bad) movabs icebp jne mov ds in (bad) jne gs outsl loope out rex.WRB pop imul rex.WXB (bad) cmp pop std xor push (bad) or push jle adc std jg xlat sti shrb rorl stos (bad) fs leaveq in or pushq (bad) lods mov std movups sub push ja mov addr32 repz (bad) jmpq loopne cltd (bad) pop mov test es (bad) xchg push repnz (bad) iret rex.WRX pushq hlt mov add (bad) and rex.XB addr32 out orl jno cmc out (bad) mov (bad) jae sbb stc (bad) mov mov mov shll lods jrcxz mov (bad) lret psllq rex.R insb lahf sub iret pop ljmp xchg lods push int fucomi mov fstl xlat sahf mov (bad) xor (bad) mov sbb sub movabs notb cmp add lret or js in divl jle in jae jrcxz mov (bad) (bad) ja (bad) jo cltd or and (bad) sbb mov movslq xchg (bad) rex.WRXB in jmpq rex jne lods cmp es ror xor and (bad) mov (bad) fs or jbe idivl cs jg (bad) (bad) jo push lods icebp mov rolb rex.X (bad) scas cltd jg rex.X adc insb xchg sub (bad) push lret repnz jb adc ficompl and loop (bad) es (bad) ljmp and mov cmp xchg (bad) sarl stc jb add lret rex.RXB mov (bad) push test lret jo or stos insb xlat mov cmp outsl pop mov xchg int mov (bad) fdiv popfq mov pop mov outsl (bad) pop shl cmpsb mov out pushq pop push scas (bad) push sbb add leaveq stos or push repnz xchg lock mov adc cmp addl xchg iret (bad) movslq cmp leaveq mov xchg sub and push rex.XB mov lret pop (bad) rex.WXB (bad) (bad) rex.XB (bad) (bad) jo outsb pop cmp xchg ficompl lahf adc (bad) int repz cli insb pop lea adc jmpq rex.WRXB out xchg cmp jp movslq cmp hlt out mov mov cltd (bad) xor add jnp incl cli stos retq cmpsb std (bad) mov movabs out sbb cmp xor (bad) notb jbe mov mov sbb pushq stos outsb jle es cld (bad) movsb addr32 outsb rex.WXB jp retq mov jle xchg rex.WX pop clc xchg mov insb sbb hlt cmp jo adc rex.WXB adc pop add movslq (bad) sub add add jb xchg jnp mov (bad) (bad) divb repz cmpl movsl lcall and add out rex.WX nop pushfq movabs in pop (bad) xchg mov rex.R loopne mov sub movabs stc xlat repz (bad) (bad) cld add xchg xchg cmovo add xchg ss jb rex.WRXB rex.XB (bad) test je scas (bad) lahf insb rex.WXB mov adc (bad) mov jno pushq xlat xor sbb add (bad) and sbbl cmp rex.RX xchg jmpq in rex.WRB jo roll pushq (bad) rex.W adc xchg (bad) add mov sub adc push adc add add retq stos mov (bad) jl and sbb jns jmpq rex.X vpmulhw rolb cmpsb sti adc sub rex.RB and mov cmp add mov and add push sub (bad) mov (bad) es mov jp lods cli push sahf movabs (bad) repz (bad) mov pushq (bad) cmp rex.XB sub (bad) add (bad) pop jl jp jge (bad) popfq adc (bad) mov mov (bad) mov rex.B rex.WRXB test jno pushq rolb rex.RX jb retq (bad) xchg out push fwait rex.WRB es rex.RB xchg rex.W rex mov cmp jg outsb xchg jnp (bad) mov lea jno push mov add in rex.WRXB add movabs (bad) shlb rex.WRB adc and mov or rcrb (bad) es cmp rex.WRXB cmp fldl2t lock js movsb fistpll xor (bad) lea hlt jl jle ficompl mov faddl and adc (bad) add hlt add outsl lret rex.RXB adc mov mov movabs mov movabs pop jns add negl mov jge add xor hlt add lods movsl cmpl mov stc cli adc in xor loopne xor pushq mov je in in xor loop cmc clc adc push jns (bad) sbb (bad) add add (bad) xchg ss (bad) add (bad) lods jbe mov jnp in retq outsl mov sahf cmp pop (bad) fwait mov or xlat scas sub push retq retq stos (bad) in ss (bad) retq add mov jnp add leaveq mov (bad) incb xchg mov mov jp in mov imul (bad) movslq rex.WX cs or cli (bad) rex.WRB add mov push sbb cmpsb out nop jle enterq retq int3 (bad) ljmp add mov int jb pop notl mov movsl pushq (bad) scas add mov callq clc (bad) jmp or mov mov (bad) (bad) sub mov test xor js nop movabs lock lret jbe adc sbb mov lahf (bad) fstl mov cmp add rex.XB addr32 idivq adc (bad) mov movabs jp push rex.WB adc add jb add xchg and clc pop gs rex.WRXB jl,pn test lahf xchg pop imul and pushq enterq jnp or sbb add jmpq (bad) (bad) add jnp xor sbb add rex.W cwtl add pop or add mov xor sbb mov lock iret fiaddl loope shrb (bad) rex.WX (bad) (bad) rex.WRX (bad) mov movabs mov cltd xor add push lret (bad) mov loop xchg pop jmpq add (bad) popq loop sub adc jmpq sub (bad) cmp jle sti mov xor jl mov addl or rex.RXB cmp test rex.WRXB add (bad) (bad) jae mov int rex.RXB fisttp sbb mov (bad) adc stos js jg jrcxz std rex.WX ficoml (bad) movslq sbb mov push std (bad) ja rex.WRXB jge xlat kmovd jle roll cmpl xor and incl mov cmp adc jp sub add jg (bad) je cmp movabs and sbb add jb out mov rex.WXB mov or add mov out rex.RX ja add (bad) mov mov movslq add jo (bad) nop add je push sbb and movslq sbb xchg add (bad) xlat cltd (bad) gs mov ds shld movabs rcll enterq rex.W leaveq fdivrp cmpsb xchg mov sti adcl mov (bad) push sbb in (bad) int3 cmp fild add xor pushfq clc fisttpll jmpq hlt rex.WRX sub sar and or cmp lret sbb mov add mov (bad) fwait jb mov rex.WB sarb in mov add cmpsl sti add jg cmp in pushq popfq cmp xor xchg mov (bad) pop rex.R (bad) rex.WR hlt jp adcb (bad) (bad) loop (bad) cmp mov add data16 and cmc push (bad) xlat incl mov add pop (bad) add (bad) rex.WRXB or or jle in iret sbb test stos movabs and or jno (bad) js add xor xchg es (bad) mov or in imul movslq mov add stos (bad) callq fild movslq (bad) pushq (bad) xchg mov xor (bad) movsl iret mov cmp pushq (bad) mov jmp xor add (bad) rex.W jge (bad) sub pop shrl jp imul rex gs push or sbb jp imul push jo mov movsl mov pop sbb out cwtl push scas adcl int3 hlt int3 or imull std fmuls mov repnz add movabs es mov xchg xor (bad) push mov or fdivl repz cli scas scas xlat xorb mov mov fistp rex.WRB xor xchg (bad) lahf fld pushq scas in jg movsl pushq rcll mov jbe or and (bad) loop rex.RB jmp add xchg lods rex.RXB fdivr callq add cmp (bad) or pushq adc imul pushfq cmp enterq cmp sub sarl and movsb ljmp sti lret xor scas (bad) incb leaveq (bad) jle movabs outsl movabs pop xchg sub shr pop push (bad) adc push mov jle jge js rcr cmp sahf and xchg (bad) (bad) je loop (bad) cmp adc (bad) push jle sahf clc outsb iret lods js jmpq (bad) adc divb in xchg fwait scas or scas hlt push (bad) sbb pushfq xchg popfq mov stos rex.B xchg jo sbb (bad) jmp cmp js out rex cmp jle (bad) jle sbb movsl rex.WR (bad) mov outsb push push pop (bad) cwtl xchg pushq sbb cld in push jle and ja jge push and xlat xchg jbe sbb lods and out (bad) in add stos scas xor nop xchg imul movabs push rex.WRX xchg scas jae jmp cmp push (bad) (bad) shlb xor cmp sbb jb insb test jp scas mov stc out sti sbbl and add js (bad) lods loope (bad) sbb cmpsb mov shll lret or add jle jne movabs cmp punpckhdq (bad) pop push add out xorl outsl xor push cmc add add xor pop jg sbb jmp ds (bad) and mov xchg pushq jg in xlat jb cltd roll (bad) pushq cmpb icebp jge and adc add jmpq pop mov (bad) adc push movabs mov (bad) sub pop (bad) mov ss jo or repnz mov xchg mov or cltd mov repz jle or (bad) sahf lret pushq mov jbe out mov add adc rex.WRXB rex.X (bad) mov push icebp jl add mov adc sbbb rex xor push mov (bad) js movsl out mov data16 jg js xchg push add movabs rex.W adc rcrl test add rorl (bad) pushq xchg fadd add insl (bad) idivl mov rex.WRB push clc outsl sti fbstp negl movslq mov xchg rex.WRB sub imul test in xor hlt xchg rex.RXB pop loopne xor outsl leaveq (bad) adc cmp add xlat or or mov xor hlt imul cmp add mov cld xor rex fs (bad) leaveq movabs xchg enterq (bad) add (bad) rex.WB movsl inc push ds push jno sub jb xchg (bad) out and rex.WR test mov adc int3 sub and xor xchg mov jae jl test push jle jg xchg or (bad) cmp retq pushq xchg xor xchg jp or mov lods add rex.WXB sahf fldl adc pop rcl push mov js clc nop fs jnp jmp sbb popfq mov (bad) pop (bad) in cmp in (bad) jnp outsl mov rcrl or jp imul lods add and sahf (bad) insl or js lods sub jne (bad) pop sahf pop cmp xor sbb pop jae js and mov rex.RXB rex.XB mov je xlat jrcxz rex.RB push fidivl or adc lods (bad) (bad) or and mov pop scas jmpq (bad) jrcxz fwait test loopne mov nop rex.X imul rex.X xor mov addr32 out out notl iret rex.WXB fwait out outsl lock or pop scas lods pop (bad) (bad) cmpsl insb jb int xor push movabs lahf jae (bad) fs jns (bad) mov fimul push or cs (bad) fisubl insb push stos (bad) imul faddp (bad) fdivs ja jg jnp jg lods outsb movabs mov cmp movslq sarb xor cmpl sub xchg (bad) jns push push sti pop (bad) lods mov in mov mov movabs jae lods jl mov mov xchg and leaveq push (bad) cmp (bad) (bad) (bad) vpcmpeqw pop rex.RB fwait and cltd scas sbb pop xchg outsl icebp test jnp int fidivrl mov mov rex.WRXB jl rex.RX insl mov rex.B insl (bad) rex.W rex.R (bad) adc fisubrl jnp xchg rex.RXB rex.WB xor xor js stc rex.XB jbe movslq cltq (bad) jg sbb pop lods mov rolb mov push hlt add lahf pop (bad) sub int jbe jns jp (bad) jbe loopne mov pushq fistp rex.WRXB je jne push pushfq (bad) jl adc and lahf and mov int out mov or jp push icebp in xchg movabs sbb movsb or jo xchg adc mov (bad) cmpb pop pop (bad) insl push xchg cmp mov cmp sbb pushq xor data16 or (bad) adc (bad) rex.WRXB in sub stos sub rex.WB fwait xchg ror es jo in js sbb movslq test push rolb insb iret rex.B cwtl rex.RB mov jnp jl vpsadbw or push insl mov fstpt jg outsb pushq rex.WRB (bad) xchg (bad) and mov (bad) cli shl jmpq cmp callq and add mov xchg fadd scas jmpq and sbb (bad) fiadd pop mov (bad) iret ficomp mov outsb rex pop or cli add and pushq rex.RB or shrb lods jmpq hlt xchg push mov cwtl sbb iret fstpl push jle or or xchg (bad) xchg push (bad) mov jnp rep pushq negb xchg and (bad) sbb cmp outsl (bad) rex.WB jo outsb in je (bad) push leaveq xchg xor (bad) icebp loop in (bad) sub (bad) and jmpq sbb jo push xor cli sti popfq fsubrp cmp imul (bad) mov and stos pushq rex.W xor push loopne fnstcw (bad) cmp (bad) gs (bad) fistl insb jle mov jbe mov rcll or cmp in (bad) lahf push insb mov (bad) outsb sbb push adc orl repz cwtl retq (bad) jmp sahf rcpps imull rex.X push movabs (bad) pushq in loope cmc sbb insb add jle out pop orl jb push pushfq gs callq rcll push add movslq mov movslq rex.WB jl or rex.WRB (bad) pop adc adc pop push fnstcw (bad) cmp cmc stos ss mov mov (bad) push popfq sub insb jg imull (bad) loopne cwtl insl movabs test and (bad) add mov add out or jrcxz cmp sti pop repnz mov (bad) mov jp in rcrl scas (bad) rcrb mov add cmc jge add sbb (bad) clc push add pop pop (bad) cmpsl testb sub rex.WR mov outsb pushfq jbe or movabs lahf addb push fiadd pushq jp xor xorl imul lahf rex.WR mov cs (bad) add callq add movabs test jns out (bad) outsl push pop rex.RXB (bad) mov movabs cmc (bad) jns push ja rex.RX movslq sbb pop sub (bad) rex.WRXB rex.WRX mov out pop mov mov enterq movsb mov xor fwait add ja out and cmpsb and jp jge jo or or jp and rex.XB jle rcll hlt (bad) mov adc or rclb mov sub out sti (bad) fwait notb ds (bad) fnstcw rex.RXB add loopne lock sbb pop (bad) and cmpsb cmpsl jb lret movabs js ds xor pop testl pop add xchg (bad) pop (bad) decl (bad) mov xchg and jo js and cld (bad) cmp fdivs jns rex.RX jrcxz rex.WRXB cmp jnp add imul jrcxz (bad) adc movsb add test (bad) (bad) (bad) or cld rex.B (bad) add and and adc mov cmpsl out imul rex.RB fucom rex.X cmp jg xorb rcll mov xor fldl jg (bad) (bad) sub (bad) callq rex.B add data16 sbb cmp or (bad) adc xor rex.RX jp rex.WRB add pushfq jmp montmul cmpsb add jle jae rex.X ss sub fnstsw jg lods lea (bad) push movabs callq stos mov or (bad) xchg jb (bad) stos test or add rex.WRX (bad) adc es or xor xchg jge (bad) mov cs outsl mov jno mov mov xor mov push (bad) fs (bad) rolb rex.WRXB sbb mov pop add adc xlat (bad) and out and sar lahf iret jno xchg xor add mov jg xchg add adc (bad) and rex.RXB sbb (bad) (bad) out jae in add sar imul (bad) jno add pop cli movabs mov mov pop je cmpsb loopne (bad) pop mov jne (bad) (bad) js rex.WRB or add popfq mov sub jmpq (bad) xchg (bad) out xchg movl sub or sbb stos roll push push push jnp jo adc xchg popfq loope stc stos (bad) callq mov (bad) and jnp ja in pushq (bad) xchg add repz sbb shlb fsubl retq lock or or sbb or add movsb rex.WRXB xchg jb outsl and movabs popfq lods je (bad) xor xchg cmp pop add adc rex.W je adc rex.RX fcmovbe add mov scas (bad) repnz outsb mov fnstsw xchg (bad) mov rex.X ds jg es pushfq and callq add std insl pop jae xchg retq rex.X cmc add pop and fs sbb je (bad) or stc in sarl rex.RB stos insl jge adc or leaveq in fadds sub pop icebp (bad) add loop cs iret sub js jle in rex.RB and push (bad) xchg add retq xchg fwait push out and leaveq loope adc add rex.RX add xchg xor rex.R mov mov jbe mov xor lods push add sbb xlat cmp movslq leaveq cli and in jg mov cmp loopne xchg jmpq xor movsb and mov jae xchg sub lea mov cmpb add fstps gs (bad) and jle stos out mov fneni(8087 stos push rolb pop and pop retq std fnstcw add test (bad) orl rorb mov movb (bad) cmpsl addl jns add shll and scas xchg add pop add adc push fcmovbe pushq (bad) sbb or xchg in stos out mov fdivrs pushq sub xchg fidivl out testl retq add (bad) insb add repnz (bad) movsb (bad) push add and mov (bad) mov int3 test in and addr32 add (bad) sbb (bad) cmpsl add pushfq and mov (bad) idivl test mov mov test mov cmc mov es jg (bad) movsl pop adc mov rex.WRXB lret xor popfq rex lea (bad) int shll add outsb test add and sbb push (bad) add in rolb repz xchg xor in xor xlat adc pop sub fisubl xor mov add rcrl cmpsl movabs mov loop cmc fscale and mov mov or (bad) (bad) add clc fdiv rex.X (bad) out (bad) rex.X pop cmp adc fidivrl rex.WXB rex.W gs decb add out xchg rex.W fsubs lahf lods jg cltd push or test icebp rex.WB lahf lea insl cli out movabs add cmpsl iret cmc cmp test add loope or mov add sbb pushfq add push (bad) and add adc test pop (bad) cld imul (bad) neg in sub add rex.R imul mov ja movabs push mov cmp jle adc adc (bad) (bad) rex.B pushq rex.RB fstpt notb (bad) insb add xor jle xor (bad) push cmp fs or adc xchg adc mov shrl cwtl retq mov insb in cmp rex.RB or rdpmc enterq addr32 jnp or (bad) xchg pop jnp pop (bad) push add jg and adc xlat in neg and xor xor xchg add adc jp add jns mov fwait addl pop mov insb sub mov fcmovnbe mov (bad) (bad) sbb xchg or (bad) add jb roll in mov xor fidiv sub lahf imul pop pop add imul fs rex.R jp pushfq imul mov pushq and fsubrs rex.X (bad) std adc out xor jae mov orl fcmovbe out movabs pop decb outsl jp fcoms add lahf xlat loopne rex.WX and js (bad) cs (bad) insl cmp pop push jg jmp (bad) (bad) loopne add in int callq (bad) imul and push iret push out mov (bad) jrcxz retq xor xchg add add rex.W pop (bad) jg lods fcmovu stc jg orb or movabs add icebp movsl xchg push outsb and add rex.B out pop mov cli add and adc retq out xor (bad) pop mov mov (bad) add movsl jb jae lods or sub or hlt (bad) retq add jne (bad) data16 ss rex.WRXB mov add cmpsb jb (bad) mov out add test ss cmc (bad) xchg rex.X add out (bad) insb jle sub fwait mov cmc sbb or pushq sub icebp (bad) add jae sti adc cmp jb pop cld roll sbb xor mov shrl (bad) ss movsl je pop int add ss adc out (bad) rex.W xor mov rex.WRX (bad) movsb enterq cmc loopne lods (bad) stos (bad) and cmc xor push xchg push fdiv test stos adc je (bad) (bad) mov adc add cltd (bad) cli roll jb xor rex.RB retq nop mov js add imulb cmp jmp push xor or fs cmpsl pushq pop jmp add cmp sbb movabs iret (bad) xchg pushq icebp and cmpsb pop rex.W mov out or (bad) shr and and jp pop xchg (bad) rex.W cmpsl mov or jmp insb (bad) and fwait cmp fnstcw out (bad) xchg xor mov ds jne rex.W outsb xor or addr32 or (bad) push jg mov adcl fs (bad) int pop sarl xor movb fsubrl std cmp (bad) sbb and std mov mov mov out (bad) (bad) xchg jge cmpl adc outsb adc add add jmpq or leaveq add and sti rex.WRXB movabs rex.RB test loopne add push sbb mov mov (bad) imul add sbb jle sbb clc mov rol insb (bad) xchg (bad) scas fild out je jp sbb jp repz callq in mov loope jo (bad) jnp pop clc jae (bad) movabs jp in sahf pop nop fs fadds mov stos sbb (bad) js (bad) xchg loope xchg lock iret adc jrcxz add add nop add in sbb sahf (bad) (bad) sbb scas pop mov add jmp xchg mov jle push jg sub add in jb rex.X add jle adc xlat (bad) mov sbb mov add mov add jrcxz insb rex.RB and sar retq (bad) push push lea orl sbb jl cmovle retq rcr jp jbe mov out lock mov ja lods cwtl or (bad) jbe insl js,pn (bad) loop sbb jb shll mov movsl rex.WR (bad) vpmuludq cli fs sub mov test (bad) xor cs jbe jne jns jg add add (bad) xor jp cmp outsl lock rex.X rex.WX add jo mov movabs jg push rex lods mov jp std movsl lock vfnmadd213ss je int3 (bad) xchg gs cmp cmpsb add jno (bad) jae lahf add rex.W jo,pn add popfq jb sub xor jae and outsl sahf lock (bad) (bad) movabs nop pop callq add jge jp (bad) out roll mov movslq xlat jle pop or (bad) (bad) add pushq imul orl sub clc loope lret (bad) clc mov and or xchg mov add (bad) sbb add out jne mov (bad) xchg jb test mov mov leaveq xor or sbb pop cmc cmpsb fstpt cmc adc rex.WXB (bad) jle incl (bad) jg stc mov pop jne cmp mov push and rex.WRXB push imul pop jle (bad) andl jg xchg cs xor (bad) mov roll mov js in sbb movslq jl (bad) mov leaveq sub add outsb sub test push divb (bad) scas mov movabs rex.RXB cs adc push in xor leaveq addl movabs icebp (bad) (bad) movsb mov subl push cs rex.WX add loopne (bad) mov sti stos add or (bad) stc (bad) add push cmp jno scas jp xchg lods shrb (bad) (bad) mov rex.RB es incl rex.WXB and push scas mov add pushq push je out (bad) addr32 pop mov mov jp int std fmul (bad) (bad) nop je sbb add movsl rex.WXB jns movslq add in cli xor je rex.X stc push (bad) xchg sub push pushq mov mov iret mov (bad) push add (bad) addl mov adc or mov mov (bad) stc rex.WRXB (bad) add adc xor mov add pop in in fldt xchg jp pop xlat jno mov cmc add (bad) push xchg add iret jle fwait hlt add sbb out jrcxz js rex.WX (bad) jg test jge callq sbb movsb add fistpl fwait (bad) and sbb pop enterq xchg (bad) in jmpq push add add rex.WRXB jl fwait add repnz add loope (bad) ja movslq ds sub adc loopne push and out pop jp scas (bad) (bad) lock adc pushfq in xchg rex.WXB fs add jg and cltd int3 push mov mov callq (bad) rorl xchg (bad) jle not jp (bad) insl xor jbe mov popfq add fildl mov (bad) push jle xchg adc fistpll lods push scas scas mov fstpl add fimull rcr lods jrcxz rex.RB mov in in retq lret mov fisubr mov adc pop rex.WRB lods movabs xor rex rolb (bad) push (bad) jg rex.WRXB mov (bad) jg pushq cli rex.X sbb mov shrb rex.R add mov imul push scas sub mov js test rex.WB mov out mov jl out xchg jl jp sub loop xchg (bad) pop test jnp lret (bad) jl mov sub mov ss (bad) and test xchg (bad) xor xchg jb (bad) movabs iret jae clc pushq adc fistl adc rex.RB js fnstenv (bad) (bad) rex.B mov push popfq rcrl pop sbb rex.B mov and popfq adc sbb (bad) repz imul in sub (bad) imul adc scas mov lods rex.WXB in clc jno jbe or (bad) sub (bad) (bad) addr32 (bad) (bad) lret enterq sub repnz rcr sti out jg jg movslq orl push and in jbe in outsb rorl fidivr pop xchg jp hlt cltd rex.WRX fistpll out (bad) jge (bad) and int3 test cld insl fimul add add imul pop jg xchg (bad) js mov jo xchg xchg jo push outsb pop (bad) jbe (bad) jge sbb sbb (bad) repnz jl sbb (bad) jae (bad) ss jrcxz sub sbb mov hlt jl cmp rex.WXB xchg pop add xchg sbb in callq add rex.XB and mov int add rex.W repnz (bad) repz je mov popfq xlat movabs (bad) (bad) or pushq pop std mov (bad) mov rex.RX pop rex.WB cli mov xchg sbb (bad) rolb pop mov es jge sbb pop pop (bad) (bad) or push rex ss add icebp es sub (bad) cmpsb lahf loopne add pop fs mov mov nop rex.WRXB addr32 (bad) jle loop lahf movsb (bad) rcr mov js fpatan es sbb je mov movslq or outsb mov add and movabs movabs jp (bad) fidivrl rex.RXB fistpl sbb cvtpi2ps in sbb mov addr32 (bad) imul add lock ja cmpsb lret stos rex.B retq add or imul leaveq push mov mov jmpq xchg add iret mov push imull retq sub jle mov or adc jnp add mov sbb add mov lods fs add rcrb jl push jb adc outsl (bad) xor xchg rex.RX cli fbstp and mov and out jne (bad) loop (bad) sti rex.WB add (bad) or rex rex.RXB icebp xchg jrcxz (bad) sahf sbb movabs push (bad) mov (bad) xor hlt mov mov add std pop (bad) imul add and cmp fdivrl xchg pop scas or pushq ss pushfq sbb cmp mov std sbb mov add mov mov out sbb ficompl add movsl addl shll jb andb xchg push jg lcall mov xchg inc push in cmpsl rex.RX clc insb (bad) xor or rex.WRX sbb pop std add test addl repnz rolb mov add lret (bad) jle pop sbb mov mov mov add stos and (bad) jne lods mov fwait lock mov (bad) scas mov jo (bad) pop (bad) pushq movabs movabs pushq pop es rex.R leaveq iret pushq push cmp and jp sti mov out icebp rex.WB rex.W add (bad) (bad) ficoml pop adc mov test nop mov (bad) jno mov or movslq rcr add callq bnd (bad) mov add (bad) stos (bad) adc loope add jb lea mov (bad) hlt sbb (bad) (bad) pushq shll sarl jp (bad) test fnstcw mov stc pop or fidivr fildll jrcxz rex.RX cmp and (bad) movabs (bad) outsl ss icebp sbbb (bad) movslq xor add rex.WRXB rex.WRX lods jg int sub xchg sub movabs add mov cmpl (bad) rex.WRB shr incb loope (bad) push pushq fwait jp push cmp scas jg xchg ss add movabs (bad) add xchg adc xchg mov scas (bad) mov repnz (bad) rex.R pushfq sbb (bad) movabs and add (bad) movslq rolb (bad) hlt add pop mov cmpsl and fisubrl lret mov rex callq (bad) (bad) xchg mov pushfq cmp adc (bad) insl (bad) (bad) jge xorl xchg movabs or xor test mov and push pushq sbb and jns mov or jle lahf (bad) adc jrcxz test adc movabs imul add gs roll scas idiv jp (bad) rex.WRB mov or lods (bad) test add mov je and jle add mov pop out fwait xchg sarb retq add xor push add adc int mov fs cltd notb (bad) jnp (bad) (bad) jl mov cmp movsb push ds fnsave mov cli mov sub mov and std in sbb jbe mov loopne jb in cmp (bad) add push xchg js gs and add (bad) test (bad) sub pushfq add orl pop add jbe rex.RB mov add (bad) add mov (bad) push or jp test or (bad) sahf out lea stos xchg jmpq fs cmp or xchg xor lods movabs sub movslq mov pushfq jl rex.RB imul add lock xlat rclb fs adc idiv cmc jns cmp movabs sbb jl (bad) cwtl add xor and fadds (bad) pop xchg mov rex.X insl in out mov gs or adc loop xor mov rex.WXB xchg or mov cmp jno out test retq lret std push repz sub cmp fidivl (bad) jbe adc sahf or idivl push jg pop movsl clc addl or stos jb ss jg pop cmp push or add imul stc jp sub (bad) adc clc lods outsb (bad) test cmp sti mov cli (bad) mov pop or jle stc sub sbb lea mov add or pop flds (bad) cmp mov rex.X (bad) xor (bad) add sbb insl (bad) cmp rex cmpl lret rol movsl sarb test jmp fmull pop or imul adc jbe xchg movslq sub (bad) faddl lea test (bad) xor rex.RX pushq jge insl adc insb idivb add int jg xchg jle xor cmp sbb lods rex rex.WRXB gs mov xchg mov add (bad) pushq sahf add sbb (bad) cmp add (bad) jns add testl rex.WX mov and jge cmp rex.RB mov push (bad) sub add jrcxz rex.X repnz jno add xchg out outsb add fcmovb jl (bad) imul cmpsl cmp add add movabs mov mov add sbb jle pop mov (bad) in and rclb fstl jae cmpsb sbb pop mov mov repnz xor mov (bad) mov add lret movsl xchg pop xchg enterq mov (bad) out in movabs sbb (bad) jae (bad) loop hlt out or fsubrs fwait rex.RX pop jmpq xor (bad) mov (bad) (bad) xchg insl add outsl mov sahf gs add in cwtl mov mov (bad) mov retq rex.WXB add mov stos cmpb (bad) movsb xchg pop lahf cmp xchg push jge (bad) out pushfq mov mov jmp out mov add cmp push sbb pushq cmp mov (bad) cmp sub xchg (bad) mov (bad) jp add rex.WRB ds (bad) fs mov jne jmpq (bad) out (bad) jl shll (bad) stc pop add punpckhbw outsb mov jns out imul pop std rex.WRX jb stos cltd push lods lahf xchg addr32 or cmpsb leaveq fdivrs lock shr xchg mov jb cmp (bad) mov lods push mov adc outsb xor add push lret adc (bad) repnz rex.RX repz cld rex.RX rex.WRB mov pop pop add leaveq (bad) xlat push (bad) and or pop fsub jo insl (bad) out sbb fstpl movsb (bad) cmp out (bad) jno leaveq pop mov in and lods xchg movabs pushq sarb and and jb adc callq shr add lods adc mov mov fisubr (bad) add or xlat retq jb scas add rex.WRXB test (bad) stos popfq cmpsl jne incb rex.WRXB add cmc lret xor cli outsb lahf (bad) mov or (bad) (bad) pop adc int3 jle fcmove mov rex.XB mov out (bad) (bad) ja sub fsubl xchg add (bad) jbe (bad) movabs mov imul pop rorl rex.WRB rex.WRB movabs bnd (bad) cmpsl lods xchg adc callq sub push fucomi mov (bad) jb outsb sub rex.WXB mov js sti push fwait xchg or addr32 jb in (bad) add xchg mov movabs nop and pushq cld outsl (bad) mov cmp cld rex.WX mov int3 (bad) cs add (bad) lock xchg sbb jl (bad) rex.RX lahf xchg fwait xchg add mov movsl jbe (bad) in cs imull je es or cwtl jle (bad) push rex.WRB sbb xor sahf add movabs add in xor jmpq jp mov rex.WRB and (bad) ds jnp (bad) leaveq add outsl nop (bad) mov stos orl mov mov int jb push and cld rex.WXB repnz pushq and rex.RX faddl mov rex.WR retq mov popfq add jo rex.XB rex.RX (bad) mov iret mov repz in pop jns add mov sar lock popq add add mov pushq jle pushq rex.X cmpsb sub cmpsl sub pushq add stos adc adc sarl or pop test rex.R pop xchg movabs cmp rcrl fldcw imul add stos pop add (bad) (bad) outsb xorl add test cmp xor js out sarl pushq xchg add (bad) roll test jrcxz (bad) add add retq movb mov xchg in sbb stos insl stc shrl cmc add jns add (bad) repnz jle mov mov test push test fistl cltd vaddsd ljmp jmpq jo sbb and mov adc mov shrl movabs (bad) jge fwait (bad) and retq sub mov es add mov xor xchg xchg jbe jrcxz xchg pop sbb (bad) jp in fistp movsb jle push jl lods ror xchg (bad) add jb pop sub (bad) jle test sbb ja jb repnz popfq vmovshdup cmp lret (bad) sbb jp add sub jbe pop cltd sbb fsubrl jno sbb (bad) rex.WRX mov xchg (bad) pop mov xor int3 push andl test pand fucomp test or outsb cmpsb lods hlt xor xor movsb and outsb js jp fcmovu rex.RX cmp (bad) (bad) jb ja (bad) jb adc rolb sti pop clc pop lods mov and xchg (bad) retq jns or retq rex.RX (bad) jno jne (bad) cli or lahf jmp xlat test adc xchg jg jae xchg movslq and (bad) fs (bad) (bad) movsb (bad) pushq sbb jrcxz ficompl outsl add out insb and xor xchg shlb add mov outsb mov add (bad) leaveq and push hlt int lods cmp sahf mov pop or add xchg jrcxz mov idivl jle pop outsl cmp outsl (bad) jbe add and sub movabs (bad) cli (bad) jo jrcxz stos (bad) sbbl movslq pop add vphsubdq xlat sbb lock ds jge (bad) (bad) jno add mov xchg lahf (bad) (bad) xor xor (bad) pushq xchg sub rex.W mov and addr32 add or mov jp rex.RXB rex.XB jmp jle jge movabs es cmp outsb lods fcoml movabs movabs rex.WXB add jns rex.XB out callq add xor pop nop mov xchg sbb (bad) mov int3 in fstl mov add test sub ds fmull xor imul mov mov or add retq jne add xchg cld (bad) or push pushq retq xchg push jnp orl out push pop jbe enterq out lret xchg pop mov cmp adc jg movsl cmp mov test popfq out push movslq cmove sbb (bad) or add adc imul mov push pop (bad) callq xchg rex.WR test or rex rex.WXB xchg pop lods leaveq movabs idivl cmp (bad) pop ja loopne movabs insl rex.WB pop push rex.W retq xchg jmpq mov mov nop adc rex.WRXB lods cs xchg out vpunpckhwd (bad) mov int (bad) (bad) mull lea popq xor mov xchg mov pushfq jle sti outsl retq movl add adc (bad) clc lods rex.WR stos in (bad) pop or insl xchg (bad) (bad) imul test push hlt lods add rex.R xor mov add cmp cmp rex.XB (bad) int rex.W gs or rex.WRXB fsubrl cld (bad) (bad) jp add xchg movsb add or push jp out and sti rex.WRXB mov cli (bad) mov add xchg mov inc add ss (bad) cltd mov or loopne movsl int (bad) xchg pushq rolb mov retq add cmp mov (bad) jp pushfq (bad) (bad) mov (bad) jne (bad) jp xor (bad) rol outsb and mov cltd callq scas (bad) sbb or (bad) cli jl or sub jl (bad) (bad) out fnstenv rex.W mov add cmpsl nop test (bad) scas mov cmp sti loopne setbe (bad) out xchg xchg rex.R jae xor and xchg out (bad) (bad) (bad) rex.WX add xchg jl lahf out bnd xchg leaveq pop (bad) or jl mov sub notl stos fisubr leaveq js int movsb mov jbe outsl (bad) mov addb cs push rex.R jnp,pt std push (bad) fcmovb mov add or xchg jb ss pushq rex jbe or js fstps mov (bad) sub sub (bad) pop rex.X (bad) and adc lea fildll stos (bad) fsubl mov (bad) pushq sbb ds jp shrl jnp or outsl push in adc in sub rex.X pushq and mov clc je divb cwtl mov gs imul mov rex.RB or add stc and fild cmp outsl jo outsb rex.RX scas loopne pop mov sbb jmp cmp adc add mov jb xchg push (bad) cmp insl add jne mov (bad) cmp test cltd add sub add rcrb push movabs pop out cmp adc add sbb (bad) (bad) cmp fldl jp jno mov stc rolb int jp fldcw jp fs callq jns mov or xchg (bad) add test pop xchg jle test or scas lahf rex.WR rex.WXB (bad) mov xor sbb (bad) rex.WR mov add jbe fadd mov xchg lea (bad) sahf mov scas xchg sar add rex.WRXB (bad) fwait int3 push jl and push xchg rolb (bad) loope mov ja in retq pop or rex.WR cmp scas (bad) jl mov mov add rex.WB rex pop add (bad) jno fwait outsb shl push fs or cld rex.WB ds and outsb jne in pushq fldcw imul mov cmp cwtl or push out scas cmp imul jbe add std jle rex.WRB lock rolb pop push (bad) repnz cli add jg ror (bad) outsb (bad) push adc movabs or pop es mov rex.R lock sub (bad) mov sub bnd add (bad) pop outsb xchg push mov retq (bad) jge out sub mov xchg movsb sbb mov pop repz rex.RX jo stc cmp jp sbb out ss cmp (bad) pop incl out rex.WXB imul and adc rex.X out mov pushq push add (bad) hlt popfq cmp test adc and mov jp lea sbb rex.WX repnz fisttp adc scas ror add sub adc xor repnz cmp (bad) cmc jg or adc retq ds incb sbb mov xor mov lods add cmpsl in sahf push jmpq xor ds (bad) mov clc rex.RXB lods outsb mov movabs movabs push test (bad) cmp mov xchg xor mov (bad) int3 clc push sbb movsb cs jge movabs xchg mov cs xor mov jg fistl (bad) (bad) movabs mov movslq repnz rex.W rex.RXB insb insl cwtl add jl add pop out xchg pop add insl test or movabs stos lock in push (bad) mov mov std add sbb mov xchg xor push jg callq add (bad) sahf (bad) clc js,pt rex.WRB inc decb cmp add push mov cmp add lods rex.X sbb fisubrl mov add rex.WR add adc xchg lret rex.X add cmpsb xchg pop add imul sbb fcmovnb xchg rex.XB xor jae rex.RX repz (bad) xchg add rex.WX rex.B pop lods add jg int jmp fiaddl add test jp stos sarl adc (bad) jg pop push (bad) adc test cwtl imul lock icebp add subl vsqrtps xchg movsb add or loope rep std xchg int addr32 rex.WX jp or pushq jns xchg (bad) xchg rcl add jg xchg rcl add je rolb fwait loopne rex jg (bad) out add sub pop or data16 and pushq in and pushq sub out stos rex sti es scas (bad) sbb cmpl cmp mov xchg add mov ds (bad) and hlt or rex.WR subl sti data16 cmpsb out cmpsb callq scas enterq (bad) out leaveq fs mov jg rcl out imul add lods mov jl loopne (bad) and pop adc cld movsb push movabs mov (bad) std js xchg insb xchg add (bad) movabs xchg out cmc sbb xchg sub lods cmp (bad) insl scas in (bad) fcom rorl imulb in lock mov gs cli pop ja (bad) (bad) cltd jmpq (bad) jb sahf jge loope add ss or mov adc jp pop jle rex.R rex.WB xor add lahf rex.RX adc (bad) iret pushq xor in sbb rex.WRX std xchg scas (bad) jmp roll je mov add lahf movsb pop clc pop lods adc pop and cmpl pushq xchg (bad) cli rex.RXB jg fdivl add mov mov repnz outsb enterq cmp xlat vmovdqa rex.XB (bad) shrl dec stos retq jae mov xchg mov je lock cld and cmpsl loop jle (bad) pop cmp sub (bad) (bad) movslq std rex orl in test sub popfq rex.X add add or mov mov stc movabs (bad) (bad) movabs mov (bad) sbb push iret or sti add ficoml movsl outsl lahf enterq vsqrtps push xchg add xchg (bad) subl (bad) rex.WB rex.RX fwait mov rex.R sbb cli add pop push xchg (bad) push xchg jp add jge lock add imul xchg loopne loope lea movabs adc add (bad) cld rex.W insb xlat add rex rex.WR enterq adc add pop xor movsb add xor jle pop movabs sub rex.WX loop sub fstpt (bad) xchg add or adc add cmp jp lret mov or push ja loop jbe test (bad) xor (bad) jg gs cmpsb addl rex.X jg cmp or sub xchg mov int or mov sub cmpsl xor jl movabs xor mov xchg and or add lea xchg xchg and mov mov xor add jns mov rex.WB maxps xchg sbb (bad) (bad) rex.RX add iret (bad) jp cmp nop imul fwait out fisttp rex.R movabs pushq (bad) sub repnz jg out jrcxz add add add test out pop or lret mov pop jne adc rex.WR add test add (bad) adc mov mov cmc and and (bad) jg mov movsb jle decb out cmc cs jg push cmp syscall out mov jp (bad) sbb rex.R (bad) rex.XB pop add adc rex.WRXB mov add add rex.RX (bad) rolb fld push xor adc add retq (bad) jno push rex.X insb cld sbb pop (bad) xchg and push (bad) add pushq stos gs (bad) or loope adc rex.WR out fstl cmp rex.W pop adc (bad) (bad) movabs (bad) jns mov or xchg rex.RXB mov or mov push jmp push clc mov mov rex.WRB (bad) jb (bad) or out repz xor pop push or add (bad) push pop loope push add mov imul cmp sbbb sub std or cld rex.WRX mov xchg (bad) xor cmpl rolb ja (bad) (bad) sub jae add sti test adc (bad) cmpl cmpsl xchg jmp stos jb mov in push jg mov movslq adc cmp jb lea (bad) mov mov fdivrs mov add loope xchg cmp or mov jb outsl pop movabs in (bad) nop fildll add in (bad) cli pop sbb jp retq rclb add enterq callq movabs (bad) lods andl addl repz movsb sub xor es sub lahf (bad) lods cld pop es (bad) xchg ja (bad) sbb cld rex.WXB in sub movabs imul xor xor jnp ffreep pop in lock mov mov (bad) (bad) mov or jbe rex.WRXB xor pushq adc cmp je (bad) (bad) (bad) or hlt xor (bad) xlat (bad) sbb jb (bad) (bad) js fnop loopne movabs rex.W pushq (bad) mov lock (bad) movsl add xor in idivl xlat (bad) add pop out mov and stos jo faddl or scas std pop pop add mov (bad) outsb push add or hlt pushq std in jg,pt pushq cmp (bad) pushq lea rex add jb or in or fs imul rex.X mov lea adc jg sarb sub retq add or shrl add retq imul add mov jae or retq pop je in adc jp mov add test add out rex.WRB (bad) rex.WR insb (bad) jp push xchg scas repnz jp and int3 gs jge or ffree jle mov mov and sbb cmpsb add insl gs rex.WR int jns and notl ja add (bad) lahf std rex.R (bad) sahf (bad) xor (bad) sbb jle sub rex.XB fiadd pushq mov movabs (bad) popq jae (bad) mov std loopne xchg mov ja adc subb loop cltd mov rex.R cmpsl lret cmp cmpsb add adc jmp (bad) push adc xchg jno pop pop movslq xchg stos cmp xchg lret addr32 xor add pop (bad) add fimull adc scas stc mov add jmpq xchg jb push adc movsl push jle jnp pushq std lods xor mov jle sub in mov mov es in rex.X and add jp (bad) test cli mov cmpsl clc xchg rex.B rex.RB mov mov out jae jg sub movslq movabs mov sub out rex.R adc (bad) pushq (bad) clc jae cmp xor rex.WXB mov fs pop and cltd movb jg popfq stc rex.RXB icebp movabs jl cmc sbb add repz cmp (bad) cmp out rol pop rex.WRXB (bad) rex.WRXB mov mov fisubr jno lea stc movabs mov mov decb movabs rex gs xchg lret or xchg mov mov cmpsb (bad) push add pop fwait movslq ja add cld push (bad) pop or cmp and cmp mov ffree adc jbe add popfq ds in mov (bad) out insb xor add cmpsb sti pushq test push subl rex.RB and movabs sbb popfq cmp hlt lods roll (bad) (bad) adc lock mov insb sub sahf test jrcxz jo movabs sub ss xchg outsb jo xor (bad) rex.RB insl insl scas sub jg sahf jmpq loop ja retq repz adc add xor jp callq jmp (bad) jrcxz nop pop add add sbb fadds and (bad) add sbb outsb and add xchg cmpsl mov (bad) out out xor push popfq hlt stc pop push xchg pop and shlb (bad) retq mull pop addb mul paddq (bad) and rex.R add rex.XB cmc (bad) fisub jrcxz xor ja clc jle out hlt add xor sub retq sub loopnel mov (bad) (bad) outsl adc push sbb cli and jl fs adc in push xchg loopne rcrl (bad) mov std push sar (bad) lret or (bad) in (bad) gs and and jbe addr32 mov pushq movabs add push es rolb imul movabs (bad) movsl lahf push push push pop cmp jl std rorl (bad) ds repz data16 movabs (bad) rex.WRX (bad) adc cmp jl test (bad) jl mov sahf addr32 jne insb pop (bad) (bad) xchg mov or push sub enterq fldt out and retq push fbld (bad) add cmpsq sarl popfq add pop out (bad) mov cmp jns leaveq or add sub xor movabs es add test add loope pushq enterq pop rex.RX (bad) mov mov xor (bad) movslq (bad) sti sbb jle mov out fidivr lret ss callq pop mov out cmp fs (bad) cwtl (bad) and sbb or scas sub jno fwait add mov (bad) or and push (bad) mov rex.WR in int3 xchg sbb sbb adc xchg xchg cmpsb add mov movabs mov (bad) sub jp movslq popfq mov pushq push out sub (bad) (bad) push insb sahf iret or (bad) mov rex.WXB xlat retq addl (bad) cmpsb add test xchg sbb mov enterq pop cli add add lock cmp mov jb test fidivr xchg or stos (bad) fist add mov add rex.WX std cltd xor out sub pushfq rex.W out xchg or outsb add lods cwtl repz mov loop xor lahf movzbl mov lret faddl addr32 mov jne rex.X cmc xchg mov or pop mov std rolb cmp cmp loopne and and js rex.RB rex.RX cmp add mov sub fs lods xchg paddd xchg rex retq rex.WRX or (bad) add (bad) mov add adc add pop sbb scas rex.WRXB rex.WR add and rex.WX add cmp (bad) add jle mov in gs clc rex.R rex.WB add fwait mov stc jo sub mov icebp add mov mov orl add (bad) or fscale iret pushq movslq popfq je push or (bad) test rex.XB (bad) xor movabs popfq enterq jns shl (bad) push jmp xor mov pop add xchg adc (bad) hlt orl adc std mov pop ss push fbld or jg mov xchg je stos movb adc (bad) (bad) cmp scas ss xor sub push cwtl mov and nop idivl sub (bad) fisttp (bad) adc rex.XB sbb add leaveq out rex.WB bnd xchg rex.WRXB rex.W rex.XB int3 mov xchg jmpq rex.RB ds or out (bad) (bad) lret mov push or fs add adc stos add adc (bad) add callq mov jle xor and scas sub rcr rex.WX fdivrp and mov movb ja stos loope jmpq rex.RXB add rex.WXB (bad) scas rex.WRX icebp xchg sub rex.RX xor jmp mov rex.W rex.RB incl add pop (bad) sub mov add mov mov rex.WX jg xor sub jns in xor stos adc notb jbe cmc xchg sbb (bad) mov jo mov mov xchg (bad) jge mov imul test cli cmp jp movslq mov mov xchg (bad) mov popq mov pop (bad) pushq xor loop xchg xchg (bad) rex.RB leaveq int3 cmp sub pop xacquire jg out rex.WRB and (bad) xchg fsubs ss movabs sub jg cmc sub pop jg mov push rex.W add jmpq mov insl (bad) jl mov adc push je xor js jl xor sbb pushfq (bad) add jb (bad) in cmpsl outsb jne pop data16 rex.WRX cmp push mov in pushfq (bad) sahf fcomps (bad) mov cmp mov mov add in (bad) xor mov (bad) cmpsw xor clc sbb jg popfq mov sbb ss xchg add fidiv cmc mov test imul mov sbb rex.R mov (bad) push jnp (bad) xchg jb cmp xchg jno int3 sahf movabs push insl push popfq pushfq cmp sbb addr32 fidivrl mov push rex.WRB sub jno fstps (bad) sub mov rex.B and or rex.RX scas jae jbe xchg adc mov xor rex.WX stc adc sbb (bad) mov mov mov scas rex.WR push add jnp pop (bad) add (bad) js jl shlb stos and add pop movabs addr32 test (bad) jp cwtl lods push jno (bad) lret add sti adc pop jo iret jmp movsb jo xchg sbb stc movabs (bad) and sub adc ja push lea mov sub pop rex.WRXB movabs int pop push add mov out mov (bad) (bad) loope sahf in or pop rcrl pop pop add and or add es (bad) xor je test mov push add cli ljmp std push rex.WX pushfq cmp (bad) (bad) jp jle js (bad) cmpsb mov (bad) jmpq callq mov adc popfq cltd (bad) sub ficomp lahf (bad) (bad) mov movsl adc (bad) mov (bad) sbb jns sub movabs jrcxz add sbb mov cmp xchg add pop (bad) mov cmpsb ja add int sub xor pop pop adc outsb out or jb add add sbb int movsb rex.W or pop mov repz pop icebp push enterq rex.X adc xchg push out xchg mov ficomp out adc fisubl adc rex.B add mov ja sti xor jbe fnsave icebp xchg sbb xor add xlat xchg push ss add rex.WR add loopne shlb fiadd adc jo lods leaveq movabs ja stos (bad) ffree mull (bad) cli sti pushq (bad) outsl pop fs (bad) insl repnz jo mov cmp loope fs js rex.WRX (bad) pop clc leaveq mov jns je sbb in adc int3 cmpsb jge frstor adc mov rex.WRX movabs and outsb xor pushq scas icebp test cmp xor adc lods cmp cmpl push mov xchg jg pop (bad) (bad) rex.WR (bad) es ss xor incb out rclb test out pushq iret lcall xchg (bad) (bad) add xchg (bad) mov stos xchg rex.W je stos mov outsb mov mov (bad) cs stos nop add notl jae or pop subb imul cmp add (bad) xor (bad) mov test in je add push movabs jb rex.WRXB popfq rolb or cmc icebp sub (bad) cli (bad) (bad) jmp and outsb cmp push and imul lahf fiadd mov mov adc xchg retq jp push (bad) jb rex.XB add rex.WR popfq add mov jge lods js lret mov and cli mov scas add (bad) shll mov lods pushq (bad) (bad) xchg or fisttpl mov add (bad) cmp pop jg mov iret push punpckhbw retq or mov xor jns (bad) xchg push movsb xchg rorb jmpq rcl (bad) xchg retq icebp sub xchg mov fimull stos (bad) mov (bad) fcoml sub cmp jge rex.XB adc sub mov push add sub rex.WR fwait stos (bad) pop sub outsb mov (bad) in fisub mov add rex.WX push xchg stc (bad) movsl fdivs (bad) cs idivl retq iret cmc in or add iret rex.RX (bad) add test push (bad) icebp (bad) sub add loopne leaveq xlat pop and add sar add fprem1 (bad) sub cs rex.RXB mulps jge jrcxz cmp adc cmp rex.RXB adc xchg push test (bad) es lock (bad) scas add jb pushfq add retq jne loopne ljmp (bad) cmp (bad) or mov (bad) mov mov jle pop mov xor (bad) jg or add insl sbb lock (bad) add push adc ss sbbb mov subl cld push pushq xchg mov add add (bad) js in mov and mov cmp cpuid and jp lahf cmp test in std scas add test lret ja cld and out addl add rcrb jb mov mov std lock xor mov mov add mov (bad) movsl add push fcomi mov add movslq fwait jbe sub loopne jmpq in jae lea jle mov mov mov pushfq add or retq or lock rex.WR xchg pop rex.W callq mov in shrl (bad) sub hlt xor jge pop mov (bad) add leaveq cmpsl retq mov pop add sahf movabs cmp add (bad) retq jp mov stos enterq xorb sub xchg sub fs xchg sub loop rex.RX xchg leaveq out (bad) (bad) mov and and jl test xlat jo mov mov and loop scas (bad) jge (bad) (bad) and xchg enterq jmp pop xchg pop jmp add jle lret mov xchg lods (bad) rex.WR add outsb and ds pop cmp scas pop rex lahf sub hlt sbb outsl imul xor movabs sbb rex.WXB xchg std sbb std jrcxz pop xchg and pushfq (bad) jl adc fs movabs outsb movslq push jo loope add nop fdivs data16 fdivrl callq in jle sub jne (bad) shll insb jnp xor sbb mov jge fwait es add cld loopne jge push rex.WRB add fcomps rex.RX (bad) movabs (bad) adc rex.RX movabs add sbb jmp jb and lock (bad) adc (bad) rcll xor hlt jg (bad) lahf jge mov rclb cmpsl jns movsb mov add mov add mov sub cmp add adc (bad) jle movsb push or loop imulb add cs add xchg pop jrcxz xchg add xor (bad) movabs jno cwtl or jmp (bad) jg mov je cmp (bad) (bad) or mov addb (bad) jbe (bad) add out cld pop pushq retq insb rex.RX mov sbb sub xchg (bad) pushq (bad) mov jl out and and nop (bad) mov push add or sub mov icebp (bad) es rex.RX int3 push rex.XB insb je and (bad) jle movabs add pop mov xchg add add sub jl add fisubrl xchg imul (bad) sahf nop sub or in test (bad) (bad) std mov rex.WRX add rex.X icebp mov jb rex andl xchg (bad) (bad) outsb fwait iret shll jbe repnz mov fisubr pop clc cmp pop (bad) xchg add movabs jbe stos push rex.RB fs rex.WR mov mov push add subl ja je mov mov adc test shrl sbb icebp movsb add xor sahf rex.RX pushq jmpq mov sbb in mov (bad) cld loop mov (bad) jae clc sub rex.WRB mov add jo mov (bad) movsl loop adc jbe sub cmc add and rcrb (bad) rclb fcomps mov pushfq (bad) add in insb pop sub iret jg popfq mov pushq or cmp movabs rex.X movabs add cmc cltd add gs fwait ss add vmovdqa xchg lahf adc sarb fwait stos sub outsb adc (bad) test add add (bad) add sub ljmp jp (bad) jo pop mov push push rex.W test add in rex.WB enterq (bad) cwtl movsb or (bad) movabs sub mov cmp (bad) or (bad) add int3 (bad) adc lods (bad) sahf (bad) push sub push rex.WXB pop add rex.WRX callq add jg out adc add cmp es stos outsb add insb rex.X pop callq es sub add stc mov test push nop mov fdivrp (bad) (bad) movabs jp mov stos sbb jb ss jmpq ficomp mov fsubl (bad) lock xor mov rex.WRX xor (bad) rex.R jg rex.X jle sbb in adc sbb pop and (bad) (bad) xlat std add xchg imul rex.WB rex.XB retq jle pushq and jbe or jl gs js (bad) add fbld rex.WXB adc movsl rex.WB callq test and stos (bad) jbe (bad) pop or (bad) pop rex (bad) rex.WX (bad) cmpsl sub sbb lret rcrl jne (bad) fdivrl mov xorl rex.X ss (bad) xchg (bad) xor jl sbb jo jrcxz retq xchg xchg jo push je xor or xor rex.B (bad) sti leaveq lods std cs stos (bad) mov hlt nop leaveq (bad) ja mov adc cwtl js pop repnz ss movabs or cmp xchg loop rcl rex.B push sbb adc push in fnstenv xchg adc sbb xlat test (bad) add scas rorl jp rex.B xchg fisubr rex.RXB push lods add test leaveq fidivrl (bad) jnp fisttp jrcxz insb cld (bad) mov movabs pushq retq cmp adc (bad) rex.WRX outsb lret (bad) rex.WRB push stos stc movabs jle adc or rex.X out addr32 movabs jle mov jns pop in jno push jl sub sahf std fdivs sub callq lret retq lods in fstl cmp xchg loop sub and fsubrl rex.WRB mov (bad) lods insl or rex.X cld movslq (bad) (bad) lods jo (bad) out fmuls mov mov scas movabs nop mov rex.RB addr32 (bad) fs sub jle sbb jl sub pushq rex.X jl in jrcxz lea jbe test (bad) (bad) jl cld jnp xchg fs out xor or pushq or test out pushfq jl out test movabs push sti fistp (bad) rex rex.WB movsl loop xor hlt movabs rex.X jl xchg subl (bad) pop imul loope (bad) (bad) (bad) (bad) sahf push sub cmp adc xchg out pop rex.WB out xchg (bad) or cmc mov (bad) lock adc int3 (bad) sub sub pop lret or sub jnp pop mov add movabs or lret loope and xchg test mov rex.WRB in (bad) sub (bad) mov mov mov rex.RXB (bad) sub (bad) stos or std movslq nop push lea rex.R repz (bad) scas jmp and mov (bad) lret cmp sbb (bad) mov mov insb adc int3 and ja retq hlt or nop rex or outsb xchg push sarb adc jl test test push cmpl cli xchg mov jle sbb cmp cwtl mov rolb jb mov js pop in xlat jo xchg idiv (bad) mov (bad) stos (bad) xchg jle jg xchg sub rex.XB pop mov cli ss mov fwait pop mov xchg out mull fildll xchg mov in mov or and (bad) pop addr32 push ja fldt push push sbbl imul jo je insb sti (bad) adc fisttp add jnp (bad) test sub int3 test pop mov hlt sahf pushq and mov cmp sub (bad) jnp cmp in pop adc lods or cmp rex.WX icebp (bad) adc lods callq (bad) jl or (bad) jno (bad) cmp movabs jg in jg add insl (bad) (bad) cli movabs (bad) cmp sub (bad) sbb jae jp jrcxz scas rex.WR sti cmp sbb and leavew pushq (bad) out pop mov or (bad) (bad) leaveq sub add rex.X sti rex.W mov adc fistl or rex.RB clc push jb rex data16 (bad) mov add jg (bad) mov bnd pushq jmp out mov push mov lods outsl sub movsb (bad) mov ljmp jg (bad) mov hlt xor xchg scas lods callq xor jg rex.RB jge sub xchg jnp out jae (bad) jmpq jge sub sub fs (bad) jmp xchg xchg add jb sbb sub add rex.B adc pop add test (bad) xchg (bad) (bad) std add lock in or (bad) enterq fsubp in jb adc rex.W enterq add mov scas adc pop xchg fistpll rex.X lods jnp ja jge mov (bad) xor sbb xor cmpsl rex.X mov stc fwait cs roll (bad) xor xchg add (bad) int3 std cmp callq divps shlb adc mov (bad) (bad) add push jae andl adc outsl enterq jg (bad) (bad) jb lea (bad) add (bad) mov push jle popfq (bad) pop test xchg mov repz xchg shrb ficompl lret (bad) (bad) (bad) outsb push push repnz push rex.WRB (bad) (bad) add (bad) pushq lea add xor movabs fildll add or pop (bad) jp clc fwait cmc scas jae xor jp xor fcomip rex.WRXB data16 and xchg add jno (bad) (bad) (bad) or and lret mov lock sbb ja jne mov jg adc outsb (bad) cmpsl mov add sbb je adc cli add adc insl cmp (bad) in stos add leaveq sbb add (bad) imul mov or repz gs rex.WR ss pop pop push xchg (bad) and in add out xchg cmp cmp jae hlt mov jp sbb xor (bad) cli cmpsl pop cmp cli add test add or mov xchg mov or jp iret (bad) adc add sbb test (bad) ja sub cmc cs rex.WRB testl add jl jg xor ss in test push mov lods xchg or xor mov add and int push mov xchg jge jbe mov or enterq push adc cmpsb pop mov xchg pushq (bad) cmpsl add mov cmp adc rex.WRX rex.RB rex.W xchg stos add jrcxz iret pop push imull icebp movabs sahf test rex.R pop xor sahf insb jmp and rex.XB rex jnp movabs add loop cli (bad) add fwait mov xchg add jb (bad) std xchg lcall mov jle jl jg cmp cmp and (bad) mov sti mov callq fisttpl out cwtl mov pushq testl fldl fs out (bad) (bad) rolb add jbe (bad) push fsubl (bad) mov outsb (bad) (bad) pushfq int xor ja fmuls xchg xchg rcll rex.WRX stos jmp cld rex.B rex.W fs (bad) int3 xchg or fsubrp mov shlb icebp mov (bad) sbb sbb jo clc out mov (bad) jl mov decl iret pushfq in (bad) nop loope rex.B pop sar mov add mov jbe or hlt sti rex.WB mov (bad) rex.RB (bad) je jb mov sti add jnp incb push (bad) enterq mov jl lea stos jp and (bad) in leaveq adc insl (bad) add sbb xor jmp movabs cmp rex cmpsl repnz add (bad) pop (bad) ss out test (bad) cmpsb mov test xchg add scas hlt rex.RB (bad) jb movslq ds cmp rex.WRB mov or add (bad) cmpsl sub stos pop adc cld cmc xlat test cmpsb (bad) or rex.W adc mov (bad) fs loopne pop sahf stos outsb (bad) scas rorl lock nop out cmp and (bad) std pop sahf jo movabs stos sti retq pop lret or (bad) imul push (bad) mov and sub adc sub xor cs (bad) sbb test (bad) fadds adc mov out or movsl (bad) pop xor sti cmpsb pushq test sarl movsl jnp xor (bad) fistl push insb jle movsb fnstsw (bad) sub mov retq cld and push (bad) outsl or movabs jns xor mov rex.RB repz imul xor (bad) out in add mov rolb data16 xchg test xchg movsb add (bad) rex.RB repz retq sbb xor rex.W rex.RXB add jne cmp (bad) ja (bad) lea add xor pop rcll (bad) cmp push lods rex.WRB out std cltd cmp cwtl add jl or add and (bad) cmp cli rex.WB pop jrcxz notb mov and mov mov push add test cmc add mov jle jne enterq lahf sbb jae jns mov mov kandb pop (bad) xchg mov and loopne sbbb mov stc rex.R sbb add outsl icebp jg hlt mov and jmp cmc sbb jb adc fnstenv or pop add add jae int cmp rex.B fsts rex.X (bad) rex.RXB jge scas cli xchg lock loope movabs cmp rex.X jno rex.WB rex.WXB (bad) and (bad) repnz (bad) or jno cmpsl hlt (bad) (bad) and pushq add and (bad) imul rex.WB outsl repz fwait add jmpq add mov mov pop fsubl je add fwait out mov movabs jo rex.WB xchg test rorb movabs (bad) int3 outsb (bad) adc or mov (bad) and pop mov out callq (bad) test jae fndisi(8087 and outsb mov push test lret (bad) xchg rcrl lods (bad) cmc or callq (bad) mov jb jp xchg int3 push ja in jle pushq sbb (bad) icebp out mov jp test je pop sahf sahf in (bad) add or adc rex.WXB rcr mov pop (bad) clc lret adc add sub xchg rex.RB add xor pop out add mov mov push (bad) gs xchg add xchg test rex.WXB icebp mov lahf loope adc (bad) add jae (bad) jle cld adc sbb je xchg (bad) test outsb rex.WR sahf rex loop mov orl (bad) xor outsb jmpq pop nop test outsb (bad) cmp rcrb imull add es (bad) int3 jns pop notb lret je stos mov lea adc data16 rex.X xchg xor cmp add or lock xchg hlt (bad) pop scas out (bad) fistp mov (bad) mov ds (bad) pop fs insl mov push (bad) and mov fisttp add sub (bad) lea sbbl xchg mov pop rorl rex.WRX cli xor or cmc xchg mov xchg rex.WX mov (bad) (bad) or (bad) out and lods lods (bad) (bad) es push xor push (bad) sar rex.XB mov xor jno xchg paddusw pop push or or movsb cmp add xchg xchg push pushfq insl pop mov (bad) rex.X jl sub cmc mov xchg rex.W ja (bad) je movsb pop jae cmp cmp sbb int and rex.WRX mov repnz fisubl jb jrcxz cmpsb jge pushfq jmpq mov nop mov sbb cld (bad) stos mov movabs mov out (bad) cmp cmp mov orl add repnz rex.RX (bad) fildll jg jmpq (bad) movd repnz fs out movabs add mov lahf rex.WRXB cwtl leaveq cmc pop rex.R hlt lock sub clc int3 or sbb jno add jmpq scas (bad) mov xchg in (bad) add rex data16 or adc push rex.X loop jp xor retq xchg int3 xchg sub adc repnz js (bad) and test sub adc fsub sub cli add lods fdivl movabs add popfq cmpb and jo rclb (bad) fistpl add test jmpq fldt mov sbb in rex.WB push in cmp and jb cmpsl (bad) pop out add rex.RB (bad) mov jbe push repnz and jbe sarl push add (bad) movsl sub (bad) (bad) incl xor scas xor add out cmp mov imul xchg (bad) (bad) sti movabs adc in push in (bad) notb loope xchg fsubr jp insb hlt sub outsb scas sar or cmp pushq addr32 and push mov add js lret cli int xchg out clc mov sbb ds (bad) adc add add adc push fnstcw out movabs outsb add (bad) cmp outsl add fild sti xchg sbb jle scas jne xchg test mov callq (bad) (bad) jae stc movabs subl push xor jb pop mov out iret pop repz mov cmp mov or jl fstpt fsubrs (bad) rex.WRXB leaveq mov xchg stc (bad) fcoml rex.X ss lret (bad) mov rclb rex.W fs callq rex.R pop in and xor imul iret (bad) jnp (bad) imul adc jns (bad) (bad) int rex.WRB or mov movsl and loope pushq nop pop and (bad) int mov js jp mov (bad) jns (bad) xor jle jbe pushfq mov (bad) fnsave (bad) (bad) pop orl (bad) cwtl cmpsb jle jo mov data16 cmp popfq fisub sbb mov ror (bad) jno mov and clc dec out icebp push add loope pop mov stos (bad) movabs xchg hlt (bad) sub add lods decb adc rex.WRXB fs add add jge add rex.RX iret imul movsl nop (bad) cmpsl mov or push mov adc cmpsl insl loope xchg cmp sub (bad) mov add xchg clc rex.WB add rex.WRXB (bad) rex.WRX mov push rex.WX push xchg and outsb jb addr32 mov xor mov sbb add pop jg (bad) rex.RB (bad) xchg rex.WRB mov cltd mov add jmp add fbld (bad) insb mov pop pop adcl mov fmull sahf add cmp (bad) sbb pop int3 in movabs rex.W cmp stos add xor (bad) (bad) or jb mov (bad) pop cmpsl out (bad) int3 jle (bad) ja cmpl add ss push rex.W mov adc rex.RXB mov add cmpsb loop (bad) push lret pop (bad) xor mov sub js fwait add cmc and retq adc xor mov add add push cmc sti rex.WB xchg rex.XB (bad) pop (bad) mov outsl adc jae cmp jge sahf fmulp mov (bad) cli gs xor add adc push jae push add jo cmp sub rex.X jns mov (bad) push sbb rex (bad) rex.WRX lods pop cmp or and decb js nop cld pop adc cmpsl mov (bad) jbe add jl testb cmp jrcxz (bad) fdivrp jbe cmp (bad) (bad) incb mov and je test fstps push push js (bad) add cmp pop jle jb mov or or nop and add xor pop rex mov (bad) jbe rex.XB add mov xor sbb or (bad) stos or (bad) mov rolb (bad) pop (bad) fadd cmpsb jb,pt (bad) adc or pop xchg xor pop lods std pop cmpsb jrcxz mov and mov sahf xchg cld rcr add or test add or int3 stos pop ss rex.XB jnp adc jmp add (bad) clc outsl outsb pop callq xor fsubs rex.RXB rex.WR rex.WRX (bad) test mov push adc mov out out mov adc xchg lret je add loope or fisubl jle xor es ja add jmpq mov pcmpgtd sub jb in push int lahf pop or (bad) pop sbb xchg xor rex.WRX or cmp jnp pop repnz jp,pn add mov rex.RB or rex.XB jge push rex.WR in mov mov rex.WRB shrl (bad) hlt jrcxz mov mov rex.RB test scas hlt ja rex.RX cs (bad) (bad) mov sub cmpl repnz fmul pop (bad) cmc sub fs loop (bad) paddusb sarl xor rex.W sbb mov (bad) jp or jle (bad) incl movabs sub js movabs jmp cli rex.WX or (bad) pushfq xor rex.RB jl,pt nop fsubs clc push sub rex.WR sahf jp cmp xor pop mov pushq cmp xchg sbb (bad) cmp jle fstpl and repz mov cvtps2pd pop js (bad) cmp in push sub jg (bad) repz xor test in rex.W repz test jge jle std mov retq sbb scas xsavec adc sub jge cmc cmpl jbe (bad) xor pop mov adc (bad) (bad) ss (bad) loopne jnp jne (bad) mov movabs sub (bad) (bad) push mov pop add mov loope push xlat (bad) sbb incb rex.WRXB roll adcb jo cmp fdivp int3 imul in jo adc jno (bad) rex.RXB jo (bad) stos cmc jmpq (bad) jmpq pop (bad) ja rex.XB fist adc movsl lock xor mov imul jnp rex.WRX sub insl add jl stc jg in (bad) jge (bad) rex.W jb (bad) std movb mov iret fimul (bad) push fbld rex.WX pushfq push lock mov mov jnp lahf adc lock lock imul lea fldcw sub fcmovbe (bad) rex.R cmpsb jbe popfq test cmp or xchg lret cmova ja mov sahf mov jmp cwtl add xor sub rex.RX insl push out addr32 out xlat pop int3 sahf jno pop pop add mov movsl add cmp xchg and fnstcw jp mov sbb xor jb pop (bad) lahf mov cwtl lret add fstl sti jp sbb sub push sub xor add iret ficompl and adc ja rex.XB mov in and (bad) (bad) icebp movsb mov add lea jle push xchg mulb mov jbe movslq outsb jp jp (bad) neg (bad) sub add pop adc stos rorb js mov popfq (bad) in (bad) xor roll rex.RX and (bad) mov cmc fs xor (bad) cmp cmp pop clc orl cmpl sahf lret push int add (bad) jbe stos jle fiadd mov (bad) and rcrb sbb push or mov sub insl cld (bad) (bad) je jg (bad) enterq cmpsl sub clc pop cli mov idivb add xor xchg imul adc pop out (bad) lods (bad) jmp movabs pop xor pushq insl add (bad) scas je rex.WXB flds imul pushq cmp sahf pushq rorb imul pushq retq xchg pop repnz popfq outsb mov adc (bad) pop mov rex.WXB and cld int jp (bad) mov jno jg int (bad) andnps pop clc mov pushq outsb add rex.WR (bad) addr32 insb lods and outsb xchg xor loop incl punpckhwd fs cs pop notb jo in (bad) out pushq outsb jg fidivrl js je loope sub mov (bad) std mov leaveq adc insl rex.WRB cmp rex.X rex shl (bad) sbb (bad) mov jge (bad) mov jg sbb jg (bad) neg jns test push (bad) cli fs jle retq and push lods mov (bad) (bad) adc add (bad) add jge and xchg nop frstor popfq pushq js insl push rex.RX cmp rex.WB add or rex.RXB rex.R (bad) lcall mov pop sbb jnp adc loope pushq stos in retq jg fstps cmpsb add sbb xchg jge rex.WRX movsq xchg mov cmp sbb (bad) xchg mov shr jle sub movabs jle cs sbb stos jg and (bad) add pop xlat std (bad) insb sbbl rcrl jb hlt (bad) and stc and jge cmp test movabs je insl sbb mov and nop mov mov shrl retq mov or sbb push mov scas rex.WXB jnp pop add cmp add and sti and (bad) (bad) sbb (bad) jb pushfq xchg and mov mov cmp xchg push and insb vpunpcklwd jb (bad) sbb and rex.WX in add mov (bad) mov pop (bad) rex.X icebp sub xchg roll stos sub and push add xchg (bad) cmp es mov sbbl jo mov mov (bad) sub (bad) xor add xorl rex.WRX cltd pop (bad) movsl imul xchg movabs decb imul (bad) (bad) xor mov add and (bad) and jo lret test icebp imul imul outsb (bad) (bad) retq test ror data16 je mov hlt add lgs or push rex.WR insl cmc addl jle (bad) rolb int3 mov sub xchg cmp leaveq negl (bad) jp jp and and rex jp mov addr32 pop jp add (bad) mov cwtl in mov and je push (bad) cmp jne or and adc rex.WB push fbld mov insb push test rex.W (bad) and (bad) lahf xor imul (bad) cmp sbb clc sub idivb xor jmpq fldt sbb push adc xor jp pop and mov rex.WRB insb sbb mov adc jne ficompl fiadd xchg add jg int repz jno scas rex.WB retq verw pushq add cwtl xor (bad) mov mov xchg (bad) std loope add lea test (bad) fs pop std jne rex.R jmpq xor (bad) (bad) lock add (bad) xchg (bad) leaveq cmp sbb (bad) scas xor jne (bad) or push movslq sub mov retq sarl cwtl mov jb fcmovbe test sbb mov mov (bad) mov loopne rex.B rex.WRXB pop enterq mov movslq sahf out out (bad) fs stos xor gs xor add in test xchg (bad) and sub fs shr (bad) jbe add rex.RB rex.WB rex insl outsl and pop add int3 (bad) pushq pop jnp sbb jbe andl jrcxz pop mov mov mov (bad) jns push (bad) test pop xchg add mov adc lret jle or jbe stos rex.WRX movabs mov cmp pop repnz cmpsb shrb jnp (bad) movabs test insb leaveq rclb rex.XB mov subl sbb rex.RB mov xchg rex.WRX and (bad) lldt movabs fcomps notb cs imul mov enterq push lret insl in xchg (bad) push adc (bad) pushfq add or jo xchg jbe mov (bad) jge loope add jrcxz lods lods movslq jne cli add and enterq (bad) cmp xchg ds rex.X xchg movsb push xor add rex.WB js adc cld movabs sub movabs repnz jmpq add mov mov stc and or (bad) add mov add int imul xor rex.WRXB cmpl jno rex.RB rex.RB lock jae pop fidivr jrcxz sahf xchg add jns pushfq and and imul cmpl loopne (bad) add test jge adc xchg (bad) (bad) shlb or pop lea mov rex.WRXB lods sbb xlat jle rcrl scas pop cmp (bad) mov ds xchg lahf stos out rex.WRB cmpsb fnstenv jl xchg jo (bad) test shlb mov jb vblendvps jrcxz rex.WX lods fisub enterq (bad) idivl push or (bad) push outsb or (bad) jg (bad) fidivr iret in adc leaveq mov jae (bad) stos icebp xor mov repz mov push loopne sahf cmp push xchg callq imul addr32 (bad) add fs je mov js push adc (bad) push (bad) jle subb mov cmpsb jns add cmp jp rex.WRX fs sarl movabs (bad) jbe,pn rex orl ds mov mulb (bad) (bad) sbb js jmpq int3 movsb jg pop out test add mov (bad) js (bad) or xlat mov lea sahf clc mulb es pushq ltr hlt and (bad) adc fnstsw fiadd retq xorl icebp test rex.W rex.RB test or push testb and rex.RX (bad) sti sahf or (bad) lldt sahf add retq (bad) (bad) mov or out mov pushfq rex.WRX clc rex.WR add rex.X mov push mov or jl jo,pt sub enterq push (bad) mov and cwtl mov shll add sahf jb movabs add movabs movabs cld popfq jmpq add int lods jb outsb rex.RX outsl and js sbb fimul (bad) loopne rcrb cmp (bad) sbb (bad) (bad) mov icebp add mov (bad) (bad) rex.RB int pop adc add cmp add neg add imul jp sbb pushq (bad) incb je in jg push stos jbe adc rex.WRX (bad) xchg jb pushfq stos mov fisubr popfq retq sub rex.X cltd fstpt adc or jg adc push jmp and pop jmpq pop jl jbe rex.X in rex.W (bad) nop add test jl mov sbb jrcxz pushq pop fwait cmp es in sbb movslq incq xchg cmp rex.X rex.RX pop cmp js rex.WX cs test out (bad) decb jge sub mov xchg lret rex.X ja mov mov push callq outsb es (bad) (bad) incb hlt mov pushq rex.X and in pushq or sub lea fldl2t pop rex.RB rex.XB mov push add outsb xor add add cld in push in roll jb popfq adcl jg mov and mov (bad) jp nop and xor mov add rex.WRXB add lahf sahf push add xchg cmp and cmpsb rex.WRX fwait (bad) jbe xchg push xchg mov jno rex.R jbe lods loop pushq out jge hlt jge movabs or shlb jne lods subb js cmp stos xor jmpq rex.RXB pop rex.RX mov lods enterq loopne push int3 decb adc adc jbe cmpsb adc jne (bad) jns xor rex.WXB (bad) (bad) std rex.R add jne sbb mov sbb sub jb pop fnstsw nop mov callq mov adc popfq xchg cs fimul lea es cmpsb rex.WX pop pushq ss cmpsl jrcxz add (bad) xchg retq out mov stc clc movabs sub pushq scas outsb mov adc rex.R cmc (bad) out sbb cmp (bad) mov and sub jmpq movsl (bad) rex.WXB (bad) fwait lods in retq ss cmovo sbb mov or pop pop jb jno xchg in (bad) in outsb sub xor (bad) (bad) add and jnp (bad) push fwait mov lods fs mov jg mov jge imul sub jg fwait sar xchg (bad) xchg xchg retq (bad) and add fnstenv nop mov fsubs or (bad) fstpt (bad) xlat rex.W es add jo (bad) and fwait cmp (bad) jbe (bad) iret mov add push mov vmovd pushfq (bad) sub pop mov mov push add (bad) rorl sbb pushq je movabs (bad) xor xchg lods cld cmp pushfq fimul and (bad) and jae in jmpq xchg rex.WR rex.W repnz (bad) test test mov adc pushq sbb jg mov cwtl cld pop add idivb jg xlat add xor add stos lods (bad) pop pop add xor cmp mov add lock adcl test mov (bad) test or fsubs cwtl mov jmp insb test divb (bad) jbe rex.XB or jp movsb add xlat xchg xor sub mov pushq loop push cwtl test and (bad) or std mov stos pop rex.WRB (bad) stos rcl xor insl jg mov add imul add xor fnstsw xchg add clc mov sub jbe push (bad) push sahf movabs xchg (bad) popfq push jge (bad) (bad) (bad) fldl cmp adc mov jmp cmp orl adc (bad) jrcxz rex.WXB adc je out pop retq add data16 pop xchg or add test mov mov jge enterq test xchg cmc (bad) mov outsb add sbb rex.WXB sbb movabs (bad) fldenv push hlt adc jg stos mov push lahf (bad) jle callw mov std insb out mov sbb fisttpll (bad) (bad) jmpq pushfq cwtl (bad) push rex.X out jg subl verw stos pop fmulp js mov iret jg and mov enterq mov add lret add fwait pop (bad) stos jb add pushfq mov testl test jp mov (bad) rex.WX and jle sub test jb mov cmc rex.WRX add je movslq or adc imul (bad) (bad) stos fiadd in ficoml or rex.WR sahf int3 adc (bad) movabs fcmovb or jp mov (bad) sub cmpl jb pushfq lea cmpsb add in roll rex.WRXB rex.WB add fistpl xchg xchg fdiv sbb and retq je adc jo stc and push (bad) and out add je xor pop cmp (bad) xor (bad) cmp sar adc in xor push sbb sbb popfq insb add mov xchg sbb push and mov cmp and cmp fldl stc adc (bad) icebp pop sti rex.W push pop and cmc sub (bad) sub adc jp fcomip notb loop pushq (bad) js cmp and pushq (bad) xor vmwrite sub lret sbb (bad) je (bad) cmc cmp pop sbb cmp sub lret cmp insl loope add xchg stos fidivl int3 pop lods insb and mov fnstcw rex.R and cmp int3 icebp jl fimul (bad) retq jae mov pop int3 (bad) add jg mov (bad) push lods sbb mov nop fadds test (bad) jo incl rex.RX fwait rex.WRB sbb es mov imul sti (bad) roll mov add push push push jbe push int movabs scas sbb rex mov fwait jmpq mov outsb rorl add loop (bad) (bad) push or rex.WXB js (bad) rex.RX and mov jb pop rorl lahf cmp (bad) push loop in imul and data16 xchg rex.B nop pop or (bad) repnz jne xor in jle (bad) add sbb or pushq and subl fs (bad) (bad) fmuls (bad) and pop js xchg sub stos jnp jp cmp js and andl vandnpd rex.X (bad) enterq pop xchg xchg lahf xor jl rex.WRX ja and leaveq (bad) pop pop rex.WR es cmp lods (bad) addr32 pop movb jp fiaddl rex.WRXB add (bad) rex.WRX in retq sub jo xlat test mov jnp jg (bad) out out xchg pop adc cmc repz js or jg movslq jl xchg jrcxz adc pushq xchg movsb fiadd out rex.X (bad) and fs xchg rex.W jp rcll faddl in add cmp add (bad) mov add pop popfq cltd add add out add rex.RXB subl adc xchg rex.XB rex.RX rex.WXB stos jo add xor add jl jrcxz movabs (bad) sub jb pop cltd icebp push mov sbb push (bad) roll insl cmpsb push cmpl push retq pop (bad) adc jnp movabs (bad) callq add jb jg add cli pop pushq std rex.B add push mov rex.WXB pop (bad) cmpl andl hlt jg mov leaveq test rex.B pop mov imul sub in mov (bad) cmp cmp sub enterq mov jbe movabs or (bad) or (bad) add cvttps2pi rex.WRB mov pop fwait (bad) movsl jg xor nop mov xor xchg pop stc or jg mov cld lock test jg push xchg jge cmp iret sbb rex.R (bad) pop (bad) insl je test xchg fistl and pushq rex.WXB je (bad) ss (bad) jb jbe mov es lret or pop enterq lock rorl test push (bad) ja sti sub (bad) stc adc add add cmp adc rex.X data16 add insb sbbl mov movabs ss adc adc rex.RX rex ss sarl movabs hlt and jbe rex.XB std sub sbb icebp test (bad) sub rex.RX sub jnp mov (bad) mov insl (bad) int jp mov (bad) addr32 mov js retq mov (bad) rex.R rex.B (bad) (bad) xchg jl clc (bad) (bad) and jge and ja (bad) mov rex.WRB outsl add in scas (bad) mov rex.R lock add rex.RX add stos addb js repz test jno mov mov (bad) sti movsb (bad) nop jno movabs stos jnp retq lods push sub divb add xchg rex add pop xchg sarl clc xchg push (bad) ss sahf mov jle push (bad) mov fisubr cwtl retq sub jg jg sub lea rex.XB in out push push jp mov loope iret cmpsb cmp xlat add jno cs or (bad) (bad) jns push loopne add out add std scas or jb (bad) push addr32 fcoms jle (bad) (bad) mov adc cmp movabs not scas ffreep rex.WX js addr32 imul jns retq pushq pushq xchg int3 sbb rorl rex.B in rcll xchg sahf (bad) pop rex.WXB subl movabs rex.RXB adc jae mull leaveq lods and mov push add rolb adc mov rex.WR mov mov and repnz add gs jae jns outsl (bad) rex.WRXB test xchg pop rex.RXB jne (bad) mov (bad) add jnp rex.WX fs add xor sbb adc (bad) push js leaveq out jmpq sti (bad) lahf pop rex.RB fisub sbb rex.W pushq rex rex.WRB xor and scas add imul addr32 imul sahf xor fwait rex.X out add out rex.WRXB (bad) imull rex.W callq (bad) mov or push xchg and lret pop jb rex.WB (bad) (bad) in xor (bad) cltd test ja rex.X add and loope sbb jge movabs (bad) add and (bad) subb ds retq (bad) or scas add push lods repnz rex.XB shrl sbb or andl scas clc fimul hlt mov mov rex.WX and decb jge mov mov push lahf xor scas sub add sbb and sub add xchg movsb mov mov data16 (bad) cmp jle jp rorl add test and outsl fidivr rex.RB loopne fs fisubl cmpsl jp jno fdivs orl rex.WRXB (bad) (bad) je add and test (bad) and (bad) jns or mov add sub sbb out repnz and xor outsb loopne rex.XB mov js xchg rex.WX shlb add rex.WRB popfq test jrcxz orl in and jo xor or xchg mov movslq rex.WB icebp rex.RB jno push jmpq fidivl mov pop cmp idivb sub enterq and (bad) jp xchg jrcxz pop add add gs cmc lea ss sti (bad) pop push cli (bad) and int je mov add rex.WRXB jmpq mov incb mov outsb add add jrcxz jg sahf cmp jb add lock mov xchg mov in and rex.WB (bad) jl add (bad) rex.RXB fdivl fs add shrb nop add fstpt test iret cmp (bad) mov movl fstpt xchg (bad) or and sub imul sbb add xor jbe xchg cmpsb add movabs loop jle mov sub test xchg (bad) shrb jns xchg mov mov (bad) jg add jb iret rex.B (bad) addr32 add jg fnstsw and out cmpsb cmp out cli mov mov pushq out insl mov sbb mov scas adc fisubr cmpl iret lods cli mov popfq cld pop adc test enterq sbb adc xchg mov int3 callq xchg (bad) mov rex.R shrb sbb jbe,pt cltd mov pop out rex.W enterq hlt push push jbe mov pop pushq add imul xchg (bad) iret repz (bad) jp (bad) rex.WB cli retq iret and mov loope loop fwait (bad) ja and adc repz cli pop jbe fild pop movabs ja cmp loope mov rex.RX mov shll fidivr mov repz jle retq cmc pushq and rex.R (bad) jns test pop rex.WB mov std xchg test (bad) (bad) jbe jle test mov es popfq cmp (bad) or jle adc rex.R pop popfq (bad) jge mov rex.B std mov fnstenv rex.RXB mov (bad) rex.RX or mov add sahf pop out adc xor push (bad) mov push stc orl pop add clc mov and xchg je ffree rex.B rex.WR shrl hlt push pop mov iret sub cmp sbb fs mov stos ficoml push stos faddl imul repz cmpsb std add lods push (bad) pop xchg or movabs add rex.RB and imul and (bad) jge and push rex.XB mov loope stos (bad) add sbb (bad) adc cmp adc add cli jg or push add push test pop jbe mov push lahf push outsb (bad) sub (bad) mov pushq (bad) rex.WRX and sub xchg push loop pop push rex.R rex.WR jg add callq jle pushq (bad) fcomp fsub or jg or rex.WXB jg out loop jp add rex.RXB mov scas push mov fistpll fs or push out or add fimul movsl mov in add or ss je adc sbb std jp push cmpsb sbb (bad) (bad) add cs imull add (bad) fisttpll stc rex.X (bad) add scas jmpq rex.WXB mov sbb lret push clc repz mov (bad) mov add sub and xchg (bad) rex.RX pop lret (bad) and (bad) andl fs xchg and sbb add jg jge adc leaveq outsb movslq es add leaveq je add std or mov or jbe (bad) and xor (bad) mov add js retq callq mov movabs adc xchg and in xor jle mov (bad) imul jp and pushq leaveq mov xchg (bad) (bad) add add fidivr retq dec cmp or and pushq cmpl rex.X (bad) xor (bad) rex mov push rex.WRX jmp vpcmpgtw cmc pop xchg pop decl insl (bad) retq lods loopne movabs mov pop (bad) repz and jae mov xchg fistp and int xchg push rcrb jo and fs std adc out cmpsb pop outsb (bad) imull movabs xor adc mov mov lret lcall jne lods test and mov jno stos retq mov cmp stos shlb cmp cmpsl subb adc rex push jnp out (bad) add cli movl (bad) outsl js jp shrb sarb mov stc (bad) jmp pushq or and insb js (bad) in loop mov (bad) int3 (bad) mov rex.XB mov add rorl jle cmp xor (bad) jae loop add mov xchg xchg mov add gs xlat pop ds mov mov fwait subl xor js jle lods mov lea in jne rex.WRXB (bad) jle add mov xor (bad) pop jge (bad) or pop xchg jb faddl leaveq test sub insl rolb or nop and outsb repz mov shlb mov and push push jl xor sbb mov mov in xchg fidivr (bad) movl and and (bad) (bad) add mov out movabs lahf ror jmp add test jbe cmp decb mov mov rex.RXB and fs test push xor jo div mov shll jns cs rex.XB repnz rex.WXB gs icebp adc sub retq pushq pop sub or (bad) je and add mov cmp (bad) sub sub cmpb addl rex rex.RXB mov add and (bad) add (bad) sub pop mov (bad) (bad) (bad) adc adc jb adc mov rex.WX data16 stc pop or scas loopne (bad) lret ss int jbe movb andb jle add mov test sbb je (bad) (bad) repnz jb mov push rex push mov (bad) lret (bad) mov pop mov and (bad) add add sub add out fidivr (bad) add pop ja add shr rex.R test cmp repnz sti sub push (bad) lock ja,pn add cli cmp sbb (bad) add mov xor push xchg (bad) cmp jrcxz mov rex.WB add std not cs mov (bad) (bad) push roll data16 xchg xor fs iret sti (bad) xchg mov adc add add jp lea add mov rex.WRXB lock scas test movq je ds mov push xchg std test nop jns or pop rex.WX and adc mov sarl popfq fidivrl jge subb cmc rex.XB sbb in gs (bad) std xchg jle cmp cmp xchg movsb add pushq imul and mov jbe jrcxz (bad) nop cmc add out adc sub adc mov lock rex.WX rex.RXB stos popfq je fs cmp pop div add or loop rex.RX cmp rex.WXB testl (bad) adc add stos repnz and nop sub movabs push jg movaps (bad) mov push (bad) mull xor fs cltd rex.WR add rex.R xor gs repz jrcxz sbb iret je jge (bad) adc jl (bad) mov test shlb rex.X retq rex.WRX nop sahf xchg cmp sti outsb jnp sub roll lea insl cmc cmp jg movsb sti push (bad) (bad) jno mov jbe add (bad) int test orb and add loopne sbb movb pop cld xchg mov mull out xor cmc rcll add movabs popfq jo (bad) (bad) in fildl add fcomps rex.WR jle mov orl xchg sub out (bad) sub retq (bad) (bad) fwait clc cmpsb rolb std push (bad) adc add jrcxz mov and (bad) mov or out and and leaveq xchg mov outsl jo imul std in jns or add pop rex.WRX jo int fimull xor loop imul cmp xchg pop cmp adc iret jae fmulp rex.X pop jl cmp pushfq cmp rsqrtps rex.WRXB rex.R (bad) je jrcxz movabs adc cli sub hlt sub rolb (bad) test mov fs mov pop fs mov mov (bad) (bad) mov fwait rex.WRB adc loope adc rolb add mov (bad) adc negb rex.WB sub (bad) (bad) and (bad) pushq add fcomi mov mov leaveq (bad) jl mov ja xorb xchg callq jmpq (bad) jbe cld or rex.WR rex.WB jns ss outsl (bad) mov leaveq repz push pushfq pop sub pop add enterq stos and cld push (bad) jg xchg ja out add rex.RXB xchg (bad) fs lods repz int3 add addr32 mov add movsb xchg adc gs leaveq mov rcrb push hlt stos (bad) std movslq and (bad) lahf xor sarl mov pop callq xor movsl outsl mov xor add sbb (bad) shrd mov add divl test std outsb movsl rex.WB jbe or xchg xor (bad) cmp outsb (bad) pop xor jns jp mov fisttp add add xchg stos (bad) or jrcxz insb in test jg push (bad) (bad) lret add jp stos (bad) or (bad) (bad) push or cmp popfq movabs std cmp jg push xor fsubrs ja cld cmc nop rex.W xor pop movsb add mov pop jp xchg movabs js jmpq add pushq scas pop mov (bad) sub xchg cltd retq add push xor test push icebp mov (bad) nop (bad) lret push repnz cmp callq add sbb outsb movsb out iret outsb iret incb cmc idiv mov or or fidivl sarl rex.RB push fisttp add rex.X loopnel repz jne (bad) test sbb xor (bad) mov sub (bad) nop mov jle xchg insl cmpsb add pop movslq push xchg xor xor pushq (bad) jns pop (bad) sahf loopne repz fadds (bad) jae,pt push add adc rex.WX pop (bad) pop repnz (bad) adc push pop or push stos pushq mov jns rex.WB (bad) (bad) add data16 (bad) add push jne adc sub push jg jno lock jo rex.RB cli push (bad) testb jl js lods int lahf sub (bad) pushq xor pop and imull jg leaveq cltd jle xchg stos adc cmp lahf fld rex.RXB jge lods scas (bad) xchg ja sbb fcmovb jb sarb lret ss rex add adc sbb movabs cmp pop adc mov in (bad) rex.WRXB jge jns neg mov jbe cmc pop jle scas (bad) rorb std push rex.WRB scas and pop adc and cld jnp jge scas or (bad) loope lock test popfq pop or (bad) adc mov xlat jnp stc xor jp movabs retq lock loop cwtl jb js outsb test and rex.B rex.WRX jle mov mov in movabs movslq rex.RXB xchg sbb mov pushq int outsb push shl jo xor iret (bad) and rex.WX mov cmp jp xchg stc (bad) and and jle sbb and push insb scas or mov add jo xchg jl rex.R ds cld (bad) outsb and (bad) test andl jno xor or cmp add (bad) lock lret popfq mov mov rex.X rex.WXB mov scas cli xor test js data16 (bad) add fldt add xchg xchg scas test movsl cld jae push adc (bad) mov adc out (bad) mov add sbb mov cmp mov sti andl jne mov add fldt fwait pushq sub pushq (bad) jno lea adc cmp xchg push mov mov xor jne mov (bad) lahf mov sbb add mov (bad) clc jmpq xchg push add retq in xchg rex.RX paddd add test add and mov sub in fcoms outsb pop lods rex.XB hlt mov xchg jne and lea mull lahf adc mov jno mov test rex.WR stc mov jg int mov hlt callq std adc mov cmp pushq ja out bnd xor adc mov or push add nop jle cmpsb jb pop fnstcw movabs and rex.X (bad) and outsb pop rex.XB nop push je jmp or mov and stos sbb lock scas push gs (bad) mov sbb xor in je sub xchg (bad) (bad) cltd rex.W and rex.WB fs sub (bad) jmpq sti or adc add jmp jo add add adc sti hlt (bad) jne loopne xchg and callq cmp mov pushq mov cmc and sbb rex.WRB rex.X fnop jbe xor sti (bad) rorl jl test jae test jp int3 imul (bad) int jne (bad) jb cmp add imul or cmpsl add test jno and test nop rex lods ja jg jo fdivrs jp test pop jmpq xor movsb sahf jge test fcompl jnp insl scas jl (bad) (bad) cli mov nop mov cmp imul fucom out (bad) negl mov divl jns lock jp rex.RB fwait (bad) mov pop fcompl rex.WR pushq xchg shlb int jae rex iret sbb icebp xor jnp pop jb lods fsubrp sbb and fldcw enterq rcr callq fldl int push add (bad) loop mov adc pop xchg sub callq or mov cmp (bad) js fwait insb rex.RX jl ror fisubr int (bad) add mov adcb (bad) lret ficompl (bad) data16 js (bad) jp adc jp pop lret mov js xchg fisttp sbb xchg outsb iret rex.WXB cmp imulb test push (bad) rex.B out xchg and rex.B jge mov pop mov (bad) callq mov je adc psubusb rex.RXB cmpb cmp sbb (bad) xor movsb mov mov adc xchg in rex.RB rex.WRX cwtl push (bad) (bad) xchg lret and sahf pop xor test movabs faddl cmp je jo es std sti sarl in (bad) pop cli (bad) mov sub test (bad) scas (bad) outsb out push pushfq cmc xchg push icebp pop mov jne sub push test rex.WR ja,pt cmp pop xlat jl popfq adc push rex mov (bad) xchg pop ja push lock in mov testb cmp rex.WR rex.RXB repnz jne sub outsb js mov (bad) lock retq (bad) (bad) cli pop jne iret (bad) push add jb callq mov xor repz sti mov (bad) add ja out stos js es xor adc fs rex.X lcall movabs fs (bad) adc cmp ja in test retq pop rex.WRXB ss out (bad) pushq cltd fildll js cs jnp cmpsb pop (bad) insl loope negb and adc js xchg fdivrl mov fstp decb sub rex.WRX (bad) (bad) sub movabs push add movabs callq fld movd push and mov rex.RB int lahf xor mov cmp outsl (bad) (bad) cmp or xchg shrl xor imul add and jrcxz xor pushq sbb mov fs add push retq jno pushq lahf cld mov add fidivl jb xor scas (bad) xchg xor loop imul xchg mov rex.R mov in rex.WR shrb adc loopne push mov adc fsubs cltd jo insb loopne movabs stos add imul sub xor hlt or jp xchg xor adc jle cmc cmp mov js callq je rex.WX pop insl jbe jmp decb repz pop movslq adc sbb add iret callq (bad) out xchg jp es fs cld (bad) mov sti pushfq and cltd rex in mov jp test fsubrp js add out cs mov or mov gs insb cli retq add jp nop sub (bad) adc and sub out (bad) add lahf cmp (bad) xchg jl (bad) fisubrl push jg pushq (bad) in rex.WB xchg cmp (bad) and scas lret add mov shlb jmp (bad) cmpb (bad) movabs cld xchg lahf stc (bad) jl jge rex.WXB lods int cmpsb rex.RX mov xor pop rex.WRXB mov cmp adc jmp fsubrs sub (bad) stc pop fstpt repnz jo (bad) insb lock repz cltd mov jg xor add rex.R (bad) jns (bad) mov (bad) movabs (bad) jle mov (bad) decb je (bad) or jo mov (bad) pop movl and mov jle callq (bad) (bad) (bad) clc push out sub add add mov jnp ds add std (bad) rex.WB fwait out mov fs and add xchg rex.B stos cld rex.WRB and mov jmpq addr32 test loopne adc in scas or out lahf add ds (bad) mov pop pushq stc test pushq fnsave loop outsb es add jg mov jns int3 sbb add cmpsb addr32 or jg lahf jg mov xor pop out je sub and lea add xor lret add fwait retq (bad) xlat rex.W test sub popfq sub mov sbb (bad) (bad) adcl pop movsb cs popfq lods (bad) out jnp push lock rex.WRX repnz or movsb (bad) mov fdivrs jo lret mov jb movb add fstl jge mov xor fst jo verw mov cmpsl stc and (bad) and (bad) jne pop cmp xchg jg or mov add xor mov jl stos divb cmp cmp (bad) rex.WRX rex.WRX test es xor cli (bad) js insl mov add (bad) push jg lods es or and sub push negb xchg incl jle int cmp outsl adc fwait jg mov movabs outsb scas cld xchg (bad) cwtl jl jmpq mov rex.WRXB jnp nop rol bnd sbb lods rex.WXB in pop push sbb rex.RXB jb push (bad) (bad) lods adc (bad) jp lea pslld fidivl lods (bad) mov mov jp (bad) jo and nop out add cli sub (bad) mov rcll idiv or jne mov and sub mov (bad) add add movsb adc cmp movabs cltd pushfq (bad) (bad) rex.RX jrcxz je (bad) and cmp leaveq lock adc adc rex.B fldenv push jrcxz movsb out out rex.RX outsl lods xchg jmp ucomiss cli leaveq (bad) add jbe mov mov fdivrp pop fbld incb rcrl (bad) push in pop outsb mov jrcxz sbb (bad) stos (bad) (bad) movl (bad) movabs sarl (bad) imul sbb movabs mov es mov xchg rex.WRXB (bad) rex.X (bad) hlt mov add pushq rex.R rex.RXB retq mov or or out sub pop add lods jrcxz (bad) fisubrl movsb pop sarl sti iret (bad) add out cwtl rex.X mov (bad) mov jb sbb xchg fimul movabs cld test xchg cmp jnp es (bad) jg ficom je (bad) sbb decb mov add stos addr32 cmc andb rex.RXB callq cmpsb je movsb (bad) fs xor sarl and es mov je jo (bad) mov sub mov and std cs mov imul lods out cmpsb retq rex.WRX mov roll movabs add rex.WRX mul es xor lock or test rex.W jb mov stos jae jrcxz popfq jb fwait cmp (bad) (bad) mov loope adcb rex.R mov (bad) sbb and movslq clc outsb loop out or sahf fisubl movabs retq (bad) repz xlat adc jg adc in ja pop nop outsb cmpsl (bad) mov cli mov (bad) movsb fbstp rex.RXB movl and sbb adc pop or (bad) je rex.WR (bad) xchg callq pushq test jrcxz add rex.XB out push jl sbb adc sahf pop jbe sub mov jp and xchg rex.B rex.WR pause mov (bad) lret pop pop lock callq pushw rex.WR sub mov lea hlt cmp (bad) and jmp xor (bad) jg (bad) insb outsb xchg (bad) and shll pushfq (bad) (bad) (bad) jg (bad) fadd loop add xchg fcoms (bad) xchg fldt movslq rex.WRXB pushq (bad) xchg idivb xchg (bad) cmp lahf cmp mov retq pushfq sbb mov test jge and sub (bad) scas fmull sbb pop add jne (bad) hlt jmp (bad) rex.RXB or (bad) (bad) fdiv mov add jns (bad) (bad) xor (bad) add iret jg lret (bad) or xchg int sti (bad) rex.WX adc out rex.RX ss rex.R mov sub push (bad) or add movsl xor pop mov (bad) sub sub fsubs (bad) (bad) ss (bad) int push cli int3 outsl mov xchg sbb ja pushq adc xlat mov jb add rex.WRX out mov jb out sbb jbe (bad) lods fcmovbe xchg (bad) sbb jg ja jmpq outsb jbe push cmp (bad) xor addr32 shll and jnp repnz or repz fwait (bad) vpmaddwd sub jle and (bad) lods movabs jmpq rex.RX or cmp (bad) insb callq fdivr pop je xchg popfq nop adcb sbb mov rex.WRXB scas mov fdivl fidivr movabs (bad) pushq out jle (bad) jmp cld xchg (bad) and out or push or jb (bad) pop pop cltd and jne imul jg (bad) jge push mov sbb rex.WRXB nop jp (bad) (bad) cs out (bad) es jmp push pop (bad) push add fsts cmp rex.WXB std jle sbbl rex.WB sahf and test jb pushq jp and add jne jg mov add in sub jne push cmc xor pop hlt rex.RXB add cmp cmp stos cmp mov and pushfq je and sbb xor jl mov out movabs pop (bad) xor pop pop mov jmp xchg movsb loope sub and (bad) mull rex.WRB lods (bad) retq mov scas rcl (bad) outsl adc pop int push ds (bad) pop mov in or jg outsb orl fnstenv stos pop repz rex.WR icebp xchg add mov add sub pop clc push (bad) rex.WB push xchg jo pop in movabs or pushq in (bad) (bad) rorl rex.WX jle movabs scas (bad) rex.RB push push loop pop ss add rex.WRB cmp add stc or add rex jb add push pop mov cmpsb (bad) add jmpq hlt mov retq and nop rex.WRB es cs imul imul fildll (bad) sbb repz imul loopne leaveq sub test xchg pop ja sbb xchg rex.WR xchg adc popfq (bad) movsb insl or in std ficoml xor rex.X add outsl icebp mov popfq sbb jge rex.RX rex.WRXB (bad) mov fisttp cmp push cmc add movabs ds pushq pop in fs or imul sbb (bad) mov clc callq (bad) (bad) stc xorl jrcxz mov shrb jo add (bad) movabs (bad) repz movabs test pushq sti adc mov and (bad) cmp insl and xchg rex.WRX sub add sti (bad) (bad) test xorl repz sbb and nop leaveq (bad) add rex.WB gs xchg rex.RX sbb mov mov enterq rex.WX xchg sub mull mov jmp test rex.X outsb ss je (bad) jns in (bad) callq jbe in add sbb (bad) (bad) testb test idivl mov mov rex.WX rex.RXB lahf jmp (bad) adc std imul (bad) test add (bad) insl rex.XB mov cmp rclb int (bad) pop xchg pop push push xchg ljmp rex mov sbb rex.X mov (bad) pushfq add mov jnp mov cmpsb cmp and icebp add cltd sub mov jge fptan lock jge rex.RX insb mov jns add scas jbe mov loop icebp and rex.WX cmpsl gs out (bad) movabs jg scas xchg adc and test jg (bad) mov (bad) and out jbe (bad) out rex.WB pushq gs lea jg (bad) push scas test rex.WB pop out jo xchg mov sub insl es xchg pop lods mov xchg mov mov (bad) lret sbb rcll out (bad) ss movabs push (bad) or imul jnp xlat push popfq rex.WRXB rex.W fwait stos add (bad) (bad) xor push (bad) jg pop add add sub jge mov (bad) lock (bad) jae (bad) movb jno and xchg (bad) js jle cmpsl (bad) (bad) xor xchg xchg and pop add (bad) cwtl push add xor add (bad) rex.W rex.B rex.X rex sub push scas pushfq mov (bad) sub cmp stos add fsts scas pushq mov add retq neg and cmp pop (bad) (bad) popq add jb out rex.R rex.WRB cmpsl callq add test int3 add and cld cmp (bad) retq push (bad) or outsb or stos jnp mov cs xor enterq rorl lods add repz retq mov jp notl sub sub outsb pop (bad) jb clc adc or stos mov rex.RX rex.R jge pop (bad) (bad) fnstcw int3 xorb (bad) fs xor clc fsubp out (bad) pop addr32 xorl sbb in sub (bad) imul sub add test (bad) add rex.WXB mov retq outsl add mov xchg nop clc jbe (bad) int3 lret xchg sub insb mov (bad) (bad) jb mov ss enterq lock rex.WX jp jl lea in mov out stos pop mov add packsswb fidivrl mov jmp jge pop lods jns,pn fwait xchg mov fs out rex.X rex.RX jle rolb cmp fadds pop je pop movabs pushq cmp rex.WX rex.WB ss jb xchg jle std (bad) or lahf cmp jrcxz int and adc (bad) mov jnp and add xor (bad) cmc (bad) rex.W cltd adcl (bad) xlat jrcxz rex.WRXB addl pop mov out rolb jge xchg cld jle cmp (bad) loop fisub test test and cmp mov out mov push test (bad) rex.WRX add stos int3 movabs movslq imul add fildl add or jg (bad) rolb cmp add callq movsl or rex.WX (bad) insb add add jno ss (bad) (bad) and or pop movsl (bad) (bad) in add xor rex.WRB rex rex.WB mov retq add test jnp mov sbb add (bad) rex.WR xlat jbe ljmp xor or (bad) mov xchg mov jp and xchg (bad) jne xchg mov (bad) (bad) push lods (bad) jae xchg scas cmp adc int add jno out xlat pop cli insl mov pushq shrl rex.WX jl out rex.WXB xor out in mov ja mov adc and gs movsb rex jp mov (bad) lock (bad) jns data16 stos addr32 and xlat cmp push insb jl adc pop push and add out xchg sub rex.WRXB (bad) adc (bad) lods int and cmp pop ficom sbb pop stos sahf (bad) xor jg test fcomps cmp jge xor sbb (bad) rex.WXB pushq insl test stc stc jrcxz cltd (bad) retq push callq mov xchg or (bad) (bad) out test pop cmp js in adc lods sarb jle loop xchg push je (bad) mulb mov int3 xchg mov sahf (bad) lea jo std fcomip jne add jp movabs add sbb jle mov pushq sarb jb jg repz jmp xorl out cmc xor ficompl cmp and jno (bad) rex insb loopne jle push test out sub cmp jo (bad) cli (bad) (bad) push mov sub pop sub movlps or outsl rex.WRX jmp push add and or divb movslq sub cmp sub pushq (bad) xor cwtl scas sub pop mov outsb push mov movsb and mov andb adc incl mov mov mov imul mov jnp orl movl rex.RX xchg (bad) mov (bad) lea xchg jp pop (bad) fwait cmp nop shrl mov push sbb sbb movabs addr32 adc lods jge test shlb mov (bad) cmp push xchg out or fsubr add sti rex.X (bad) pop rex.RXB idiv mov jmp int3 rex.WX rex.WXB push cltd jmpq jnp outsl mov imul mov (bad) fwait roll mov jo lods xchg data16 (bad) xchg cmp (bad) out js shll mov jno imul (bad) push shrl icebp jp rex.RX (bad) cli mov scas fbld mov and movabs and pop mov out int mov iret retq test (bad) es popfq sbb cld mov sahf cs and mov or mov (bad) sub push pop sbb rcr or or in scas xchg and (bad) xor xor push fcoms and frstor (bad) popfq push shrl xchg sub fistpll punpckhdq jnp test lea (bad) jp imul mov out outsb lahf fdivrl adc pmulhw mov push or imul sbb mov fst mov out callq rex add cld xor mov add jmpq add (bad) cwtl jg fwait cmp sub add test (bad) jg pushfq jl push xor xor pop decb out mov incl (bad) (bad) mov mov sbb test add adc jmp movslq mov jl stc mov test jno jne push cmp pop test mov push insl mov rex.RX jl pushq subb jmpq (bad) jl push fs (bad) xchg xchg xor rex.WRXB xchg cli fdivl pop retw rex.WB sub lock scas lea xor callq jbe fs mov push mov stc repnz (bad) sub pop and cmp push test lea mov js jno fs (bad) and or push ss xor imul rex.W repz and cmpsl mov jmpq fidivl fsubp mov rex.WXB cmp rex jno jno ficoml and adc loope (bad) cmp fiaddl vpunpckhdq (bad) je lahf (bad) (bad) xchg cmp mov repnz callq in xchg movsbl test rcrb testl xchg mov push fisttpll adc (bad) mov callq test add sub test ficom mov mov divl fdivp fdivr cmp cltd test (bad) or and add scas stos add sti push xchg jl popfq or (bad) add ds fsub loopne mov mov scas nop rex.W sub cwtl rex.WRB or pop incl sbb mov fist movabs movb jmpq cmpsb sbb add (bad) pop mov xchg lods ss xchg clc insb sub mov (bad) outsl xchg in adc mov in cltd js sbb movslq cmp cmp cmp icebp fsubs inc or out out sbb xchg jbe fwait (bad) jl jp cmp out sub loopne push pop mov rex.RX push mov fisubrl xchg imul rex shr sub pop jb iret push mov push mov scas sub loopne add out push adc outsl pop sbb pushq xor jo test outsl xchg fdivrs popfq retq in jmp movups mov jb xchg (bad) (bad) imul (bad) loope or pop jmp sbb shl and jg int js xchg sbb jbe es push ds mov xchg adc mov outsl and add xor (bad) (bad) in mov mov (bad) xchg ss (bad) test sub (bad) in (bad) jmpq pop rex.WR (bad) mov hlt in lret pushq (bad) add nop jae cmp ja jp rex.WB pop mov sahf and sbb js pop or (bad) mov xchg mov pushfq fldl loope xor push imul add add xchg insl add pop jrcxz andl (bad) in cmpsb cmpsl xchg pop (bad) stc rex.WXB rex.R fdivrs xlat adc out (bad) jg rex.WRX and movslq fsubp or rex.RX sarl in fdivs (bad) jnp jg sub jle movabs cli nop (bad) sub lahf mov and (bad) scas je (bad) mov (bad) mov (bad) xchg sub (bad) cmc popfq (bad) sbb cld retq pop in add xor add sbb lret push ss xor xchg add enterq lods sub imulb xor stos (bad) retq pushq and stos pushq mov xchg jbe js outsl int3 outsb int mov cmp add je push (bad) movabs insb popfq add out out mov (bad) jg rex.X test pushq pop callq adc and retq mov pushfq (bad) callq pop jle mov imul rex in mov (bad) (bad) insb jle rex.RXB notl (bad) pop (bad) (bad) push adc nop push sbb push xchg (bad) and jge jo pop or push cmp fadds mov (bad) pop retq (bad) pushq mov hlt (bad) jl cmp jo mov data16 stos (bad) stc in cmpsl rex ss outsl adc cli pop adc outsl and pop pop add rex.WB fs xchg mov je mov xchg fmuls push cmpb pushfq xchg test popfq pop jnp jno sub negl add sti add ror cmp retq (bad) cli insl and add sbb push movabs pop insb pop sub rex.WX jno fiaddl jb outsb jb rcrl (bad) lea xor rolb (bad) fsubl jrcxz (bad) cmpl or mov sbb (bad) (bad) (bad) cmp callq sbb retq faddl sti shlb cli jp sbbl push roll (bad) lahf lock sbb jns fdivrl lods rex.WRXB lea mov (bad) cli imul or sbb hlt rcll fld cmpl sub rex.WRX or mov std je int (bad) insb fstps sbb stos (bad) adc rex.RX jp in sbb (bad) add add mov pop (bad) scas add xor mov es mov sub sub jb and (bad) imul mov jbe xor mov lock (bad) (bad) mulq jg rex.RXB add (bad) scas stos cli (bad) fldcw (bad) insb cwtl loopne jns jbe cmp adc jge (bad) jge (bad) sbb ljmp (bad) pushq sbb imul jb push xchg rorl jmp adc scas add cli iret movabs repz insl cmp in retq (bad) cli (bad) (bad) (bad) test (bad) xchg sub stc movabs (bad) fwait in (bad) pop (bad) jbe nop xor sbb sub lret clc adc rclb (bad) rex.WR push scas (bad) (bad) jl sbb xchg (bad) pushq jns sbb xor add (bad) add out add fldenv (bad) mov push push out iret test sbb pop pop andl hlt movabs jle jae mov and rex.WRX pop cmc sub lods xor leaveq pop xchg out lret cmc add mov cmpsb sub nop jbe lret or jnp sbb iret clc cs cmpsl sbb test sbb pop rex.WRX rex.WX out jne fimull pop addr32 out mov mov notl add lods fsub (bad) ljmp jge sub in lahf xchg add adc callq add sub outsl leaveq or (bad) in movsb rex.WRXB xchg add outsb lahf sub cmpl stos icebp decb and pop test mov pop rex.RX movabs mov pushq add add rex.WRX sbb add add (bad) fnstsw sub fs xchg outsl lock xchg sbb fsubr rex.W and (bad) in sbb imul add jno rex.B fs add mov pop rex.X (bad) (bad) popfq (bad) push scas push add and sub incb hlt movabs cld std lret mov retq add cmp sbb (bad) enterq retq mov xchg add xor rex.XB pop scas xchg jp int and (bad) mov pushq test and mov repnz int push xchg je (bad) retq lock out xchg xchg or (bad) mov cmp mov mov xor fnstsw or sub out jg add ja mov cli jb xchg pop (bad) mov (bad) (bad) fnstsw push callq pushq mov rcrb fistpll and repz rex.WB sub adc imulb add (bad) outsb movabs rex.WR jge mov add jo cmpsb insb lods rex.X cmp repz fild add (bad) xchg rex.WB xor repnz rex.WXB or lahf add es addr32 sub pop movabs (bad) leaveq fidivr (bad) add jne sbb mov or jg pop fwait rex.RX jg dec mov mov jle and repnz or add fs cmp mov (bad) or mov (bad) loop (bad) movabs (bad) cld rex.WRX in xor and insl movabs pop jbe movabs xchg adcl out adc idiv scas mov outsl mov loop mov ja movabs jg xchg rorb roll xor xchg jns cmc lahf js fildll mov mov cmc (bad) loope mov jp (bad) xchg orb lods pop loop leaveq mov adcb mov xor add mov (bad) jp xchg push iret test ror mov xchg fistl data16 in retq (bad) addr32 pop int3 fcmovu pop mov cmpxchg fidivr pop xchg cmpb lret mov jno mov ja rex.X pushq sarb cvtdq2ps mov or cmp (bad) sbb or es out add test push lock fcmovnu pushq je rex.R xchg or out jbe cltd mov out test mov lret (bad) in js ja mov jp movabs test mov jno rex.WRXB rex.RXB jmp jp stos (bad) (bad) jae rex.RB cs jle gs and cmpsl movb jmpq cld mov xchg incb addr32 rex.X or (bad) xor fisubrl lret pushq rex.W sub sar sbb insb sbb (bad) imul cmp (bad) (bad) jo (bad) pushq xor (bad) (bad) jo repnz pop (bad) scas (bad) andb (bad) andl mov jp xor pop mov mov jrcxz sbb jne (bad) jle and lahf cmpl in sub pop pushq add adc mov add rcl imul lods notl (bad) xorl (bad) jl std cmp outsl test mov pop cmp lods sbb callq jrcxz (bad) mov mov jb (bad) in jnp (bad) cmp pop pushq add jbe clc and mov (bad) jb mov nop (bad) sub (bad) insb jae sar es rex.WRXB lods xor sub add cmp js (bad) sbb add xor loopne or jae cs sub add jge insl hlt movsb rex.WB sahf sbbb (bad) cmpsl rex.WRX rcrb mov push mov rex.W xchg stos xorl jb sbb jge and jp pushq add add xor cmpsb addl test and or push add (bad) cmp cmp jno and add rex.R movabs xor cmp or xor andb (bad) and movabs rcll jle jne mov (bad) scas (bad) mov add (bad) lods xchg loopne add jmp rex fist stc pop sub popfq sub and lock xchg add jl (bad) jae hlt push xchg (bad) (bad) (bad) pop mov notb sbb xchg incb (bad) push mov outsl (bad) add and outsb pop es cmpl jle out mov sahf rex.WX sub mov pushq cmp and add out mov cs rex.W jg mov fimul pop out movabs je incb rex.WR repz rex (bad) scas jp xor fsubrs (bad) test and (bad) rex.WX repnz add xor jae add (bad) icebp mov and fwait cmpsb (bad) push (bad) callq mov xchg rorb mov callq out (bad) mov rex scas insl or in jnp jb sub mov fdivr bnd shll in xor sbb and loop jno cli mov cwtl (bad) fimul int lea pop (bad) mov pslld rex.RX mov (bad) ss adc push add and mov lret mull (bad) xor add mov or (bad) jp rex.WXB out lret (bad) (bad) push xchg pushq cwtl (bad) in add cmpsl xor loope sbbl push test clc insb add mov negl rex.WRXB or cmpsl jae add rclb fsubr xorl rex.WB lods pop out jp (bad) rex.RXB xchg sub (bad) add push movslq cmp xor (bad) rep xchg xchg (bad) sub add fbstp rex.WB and icebp lret add mov jno jb movabs or lret movabs (bad) add fbld rex.XB lret (bad) pop (bad) pop xor int3 sub jne push add rex add adc divl jrcxz add cmp in xor loope je rex.WR rex.WXB add push loopne test ja jo jg rex.WRX callq mov push mov out add test setnp mov pop outsb sbb jle (bad) add or rex.WX add sbb (bad) or (bad) pop lea mov adc es lods jbe mov clc cmp sbb xchg cmp lahf (bad) mov jnp or (bad) xor xchg es fisubrl enterq jo outsb jbe bnd xor cmpsl jno pop jmp sti cwtl movsb (bad) pushq and push or mov sub fdivr push es ja std retq fisubl mov or mov mov pushfq jp loope xchg sub or test es negl sbb xchg push mov jp mov (bad) rex.XB hlt jns outsl xchg loope pushq cmpsl mov (bad) leaveq pop (bad) mov jge sub enterq loope scas mov hlt mov setae ficom jge sub lods (bad) pop rex.WXB add pushq sub jp ss retq jl and adc (bad) nop mov ss cld jg mov (bad) lretq mov rex jbe es or in rcrl mov fsubr push lock sti or lods (bad) enterq rex.R add hlt and (bad) gs roll or mov in xlat xor xchg movl (bad) jne pushq (bad) loopne lock iret jmp jle pushq out mov mov cmc xchg xchg mov and cs (bad) stos rex.X (bad) lods mov retq cmc test rex.WRB sub (bad) mov mov (bad) hlt mov (bad) ss stos or adc cmpsb pop rolb enterq add and or mov jg xor (bad) scas add (bad) rex.W jne rex.RX jno (bad) or add rex.WRX xchg stos (bad) rex.R faddl shrb mov roll (bad) lahf rex xchg (bad) adc xchg imul add lret rex.W mov xchg or (bad) push js xor out push (bad) sbb out xchg jbe and add (bad) add scas xor outsb lods jne push sbb icebp jno add loop fiadd pushfq lcall pop push lods lahf add sub (bad) push ja jns xchg cld pop (bad) int (bad) jmp mov sahf (bad) mov mov mov or add sub (bad) insb lea jb outsb pushfq mov (bad) mov sti js add mov scas jg cmpsl cli popfq je pop mov jle jns and rex.RX (bad) (bad) and jge cmp jrcxz lret adcl add xor xor sar add jmp (bad) int3 je add sbb add out (bad) sbb pop and cmp (bad) mov sbb callq (bad) cmpsb xchg out push hlt jmp xor out rex.RX (bad) add jl and and jae jl and scas mov (bad) cmc std add movsb nop pop rex.WRXB add rex.WX flds or mov and vsubps (bad) idivb sti and push pushq fmul (bad) adc add lea sub rex.WXB mov cmpsb outsb xor test notl add rex.WB addr32 mov imul add imul mov sbb push rex.WXB cmp lahf mov cs mov leaveq or mov jmpq jge xchg (bad) push xor or fiadd movabs sahf xor callq fcmovnbe cmpsl adc test ja mov sbb fwait movsb outsb and jmpq xor scas int iret (bad) (bad) rex.R mov jg jbe cli jmp sub test (bad) (bad) and loope (bad) mov pop push or jg test (bad) movsb cwtl sub out xor add pop out rex.WRX mov add or lods stos out loop pop jmpq js subb (bad) cli jb xor or outsb (bad) leaveq (bad) rex.RXB data16 popfq stos jo insl rex.XB cmp xchg pop and lret fwait imul pop (bad) jno ljmp movsl jmpq sti add out (bad) retq repz and pop cmp (bad) jg cmp stos xor rex.B es push mov hlt clc sub sbb jle pushfq (bad) test jle js int3 adc jg cmp xor loopne push rex.RXB (bad) (bad) es int3 sahf cmc popfq (bad) mov decb cmpsl xchg xchg rex.RB mov (bad) (bad) jnp or and (bad) fidivr pushq stos stos mov adc xchg test pushq movabs rcrl add repz rex test rex.WRB (bad) jo xor shlb pushq pop push popfq cmp and pushq mov subl and es or rex.R rex.WX mov mov insb cli jo cltd rex.WRB (bad) or pop js xchg (bad) jae xor es (bad) push rex.WR fistpl (bad) mov mulb retq insl jle movabs pushq sbb sub retq int3 cmp (bad) clc js (bad) (bad) xchg cld (bad) sub jl (bad) rex.RXB loopne xchg or pushq sti xorl jrcxz mov cmp rex.W pop iret (bad) (bad) jae xor jl sub push out push add or (bad) out sbb js movabs rex.RX (bad) (bad) jge cs repz adc retq add (bad) and sbb add (bad) cli (bad) pop add mov add (bad) push popfq rex.WX add rex.RB leaveq cmpsb movabs roll movb and movsl scas cld fwait or push scas jle pop sub cltd test jle (bad) shlb stos ja adc pop jns xchg rex.WR or frstor fiadd pop rex.B rex.X enterq mov lret mov stos repz andl (bad) movsl add rex.WRB or mov lret insl rex.WXB add and (bad) fmuls scas add and jp ds (bad) imul rex.WX movl xor and add enterq xor jmp and mov jno rex.RX sti out (bad) cmp out (bad) cmc add or add adc sub (bad) jb mov pop in cmp cmp mov xor rex.WRB loopne faddl js (bad) outsb and mov movsl jae jle movabs add roll test rex.RB sbb rex.WXB and cwtl test (bad) movsl (bad) outsl (bad) xlat adc mov push rex.X es ljmp cmp pushfq outsb add add mov stos pop jb movsbl cmpsb or or nop add fwait jae add add imul add pushq outsb js push or add mov (bad) lahf loope add movabs sub (bad) mov add sbb cmp xchg cmp (bad) stc pushq outsb (bad) clc or add rex.WX stos xor add cmp es insl pushq (bad) data16 pop (bad) sbb sub sub mov sub (bad) adc stos (bad) fs (bad) rex.R add adc (bad) fstpt mov add (bad) outsl jns rex.WX retq cmp sar xchg (bad) xchg movabs xchg je outsl popfq push mov jne add idivb jb stc xchg xor xchg ss enterq lea add out mov mov jrcxz loopne add test (bad) adc fisub in add rcll push je jle xor cmc xchg (bad) or idiv mov mov scas lahf callq (bad) (bad) mov mov sub rorb nop outsb mov (bad) shr negb xchg mov in jb insb mov fidivr jle (bad) adc jo add (bad) rex.RB repnz stc rex.WX stos add lahf add mov (bad) rex.B add mov jp fwait int not nop rex pop callq mov adc movabs retq sub jmpq loopne or incb (bad) cmpsb incb movabs rex.WX retq (bad) adc push push pop (bad) popfq pushq addb push xchg (bad) pop sar cmp add (bad) imul or push add jp fist add rex.WRB (bad) test pop ja (bad) xchg pushq cltd (bad) jle loop cmp push sub or js cmpsl xchg mov sahf imul sub (bad) mov (bad) sti mov xor clc xlat lods test in xchg pushq movl in jge (bad) je outsl sub jns mov xor (bad) and rex.RX adc repz cmp xor movabs lock rex.RX (bad) cmc mov retq jle repz mov push push (bad) xchg icebp add (bad) rex.WRXB and rorb mov mov (bad) or add mov lods jb pushfq add sbb rex.RXB rex.WXB or vpshufhw mov icebp mov bswap add mov sarb jle xor (bad) mov (bad) icebp rex.WX cmpsl jmp insl rex.WRX sub mov outsb movabs (bad) in cld pop jo (bad) nop add pop (bad) movabs (bad) cmp jp data16 sahf leaveq xchg jg out cmp imul rex.RX mov out (bad) xor insl mov fimull and pop out cmp iret cmp cwtl and imul rex xchg iret es jbe adc xchg rex.RXB insb (bad) jnp pop insb jge rex.R add js jns movabs add (bad) (bad) push icebp mov adc out or adc es mov add stos mov add mov (bad) callq or add hlt insl cmc (bad) fxch (bad) (bad) add jge lahf add vucomisd pushfq iret jb rex.WXB mov (bad) callq add mov jle (bad) rex.RB rex.RX leaveq xchg cmp jmpq add stos rex.RXB movabs rcll nop scas addr32 cmp add bswap imul or add cld xorb rex.X mov jmpq pop lret add mov mov (bad) mov xchg push add adc rex.WX rcr (bad) xchg movabs mov je mov inc jg cli sub add rex and mov or jne or imul (bad) push rex.R add and mov jnp xchg fisubr cmc jae in cld incl (bad) scas int3 insb sbb and xor cmp rex.RB testb clc sub rolb mov sub mov rex.WB jns cmp jle xor loopne push lahf push xor orb (bad) cmpsl scas xchg xor movslq lods cld mov sti out mov mov mov outsl add (bad) std or out faddl pushq rex push popfq loop (bad) xchg enterq sahf ror push jrcxz fimul and push insb fcoml addl pop sahf mull mov lock (bad) callq push fiadd stos rex.RB (bad) (bad) jle xlat (bad) ljmp test pop (bad) and loopne jp (bad) loopne push jbe sahf fcomps xchg (bad) push mov (bad) sub insb lods out jae and or rex.R movsb popfq (bad) imul fidiv pushq (bad) cmp jge fcoms out stos out adc shrl add leaveq iret outsb imul rex.XB repz lahf xor je in lods sarb int and jae hlt (bad) jrcxz (bad) shll insb repz (bad) insb mov or int3 mov std jle,pt out fst test insl jb and rex.WRB add lock mov jno ror pop push nop lret (bad) jns ss cmp in test xchg jo mov (bad) pop push rex.WRX addr32 cld imul ja sub and jle addr32 xchg jb (bad) gs andl jbe adc movsb cmp fnstcw pop rex.WRX mov and je push lret mov push and sbb (bad) adc xor rex.WRXB fcomps xchg cld insl (bad) xchg rcrl or pushq lock jrcxz rex repz iret jae imulb jmpq pushq (bad) pop xchg and xor retq insl rex.WRXB pushq and lods sbb (bad) sarl es mov retq (bad) fisttpll (bad) (bad) push xchg mov pop jl or clc shlb loopne xor xchg (bad) adc lret outsl and push mov jbe xor or hlt mov pop push pop testb (bad) xor mov xor mov push pop xchg pushq (bad) (bad) cld jmp mov mov cwtl out sub mov pushq sbb out xor addl fwait sub (bad) sub jl sbb jle mov movabs rex.WRB mov clc scas movabs movabs sahf scas add push push rex.RXB rex.WRX mov adc pextrw add cmp or (bad) loop lea add xchg lahf in out insl data16 (bad) add xchg (bad) loopne xchg add xor (bad) out jo add (bad) test rex.X add lret cmpsl (bad) xor mov mov jle (bad) (bad) insb insl and (bad) movabs adc pop movabs mov sub add lea add (bad) add lahf xor cmpsl (bad) movabs adc ja mov (bad) (bad) fstl jno scas sub (bad) mov pop movabs cmpsl jmp push ja (bad) outsl lea (bad) (bad) test sti scas (bad) xchg or (bad) out or (bad) pop sub jge movabs jo iret pop outsb outsb mov xor sbb popfq xor (bad) rex.WX lock jo fisubl cmp fmuls fistl pop or in pushq hlt int lods jne std mov and xor mov rex jg jns jno and cltd push rex jl mov jmpq repnz cvtps2pi and push setb (bad) xchg xor adc nopl push in xor pop lahf mov add adc push xor (bad) ja lcall mov test xchg jp xchg pop loopne jnp sub xor shr or mov outsb movsb rcr test hlt repz (bad) (bad) and fdivrs out cmp rex.RX jbe push (bad) add and add test and stos mov lods sar or (bad) mov in sub and xlat jno (bad) fildll je xchg jl xor mov fsub cmp xchg sahf jge xor (bad) xchg mov notl retq xlat mov movsl mov pop insl adc leaveq (bad) push in xchg cld rex.WB in adcl lods addr32 outsb mov sahf out cmp ss cmc rex.RB xlat mov out fldln2 bnd (bad) repz out (bad) pop rex.WXB repz (bad) scas pop cmpsl mov jrcxz cs (bad) jo jge fiaddl rex.WR add mov rex.XB movslq mov movabs sarl in sub (bad) fcoml cmpsl fbstp add adc (bad) icebp push int (bad) fisttpl cmp popfq sbb mov imul xor push lldt xchg pop push enterq pop stos rex.XB cs ficomp divb rex fwait out lcall (bad) sbb (bad) jne sub pop xchg xchg sub or pop data16 add movabs or push add (bad) mov add xorb add rcll fs movsb fildll and retq cli sbb (bad) (bad) (bad) add mov loopne movabs (bad) cmp xlat cpuid (bad) rex.R movabs rex.WRXB rex.RXB in fdivrs xchg rex.WX push adc (bad) add (bad) pushfq mov push out movsl pop test es sarb cwtl movabs and nop push pushq cmp (bad) (bad) rcrb mov xor cmp rex.WXB or add sub add mov cmp and rex.WRX mov (bad) cwtl jl jge cli sub out repz (bad) fs fwait or xor (bad) mov pushfq xchg and nop in out sbbb pushq cmp iret rorb fisubrl outsb jl sub icebp (bad) (bad) loop sbb subb (bad) fdivl int xchg outsb (bad) fidivr rex.WX test jle push xchg xor or insl mov cmp test mov js fwait jle xor add fildll in (bad) pop decb (bad) imul (bad) popfq movabs rex.WRB loopne adc rex.WRXB xchg jne mov in push (bad) cmp decl rex.RXB nop rcrb adc mov xor scas movabs xor nop or mov rex.RXB jo and fisttp push lahf mov test add outsl mull lret callq retq rex.RXB hlt sub fnsave xchg jg rex.R retq add (bad) jne mov rex.X and rex.RX xchg xor mov lahf rex.WRB mov sarb and jge pop rex.R cwtl mov xor (bad) pop (bad) push fimul add cmp xor repnz or jle cmc callq fsubp movabs jb lret lea rex.WXB pop notl rclb mov rex.WR add rex.WRXB xor scas push cmpsb mov add mov pop test or jo stos jp xor jb (bad) rex.R and sbb out jp lods push jle int lcall mov in jae (bad) mov or jno mov xlat xor (bad) rex.RB rex.WRX rcrb retq je jp in rcrl add mov lret js and add test (bad) jp pop mov (bad) (bad) pop nop (bad) jb push rcrb add add insb sbb repnz mov rcll add and scas jmp and std and jnp pop xchg lret add (bad) push fnclex js (bad) xchg cmp fdivrs mov (bad) (bad) lahf insl hlt retq rex.W pop movabs negl in rex.RB lock std pop mov jns movabs jp idivl xorl add adc rex.XB add jle cmc push mov out (bad) (bad) pop add out movabs (bad) (bad) cmp jp jno jl adc stc xor cwtl rclb rex.XB or cmp add lock mov rcll or rex.RXB sbb xchg ds pushq mov xor movabs xchg push out jmp std mov add rex.WRXB data16 or jle (bad) fwait shrb (bad) jne (bad) test add cmp outsb pop or add rex.RB jg cmc add jb pop roll imul adc jns (bad) sub (bad) add jne (bad) lahf int3 rex.WX movabs add rex.W rex (bad) xor stc sub mov sar jg push cmp jbe int out or sub or idiv fisubrl jne jge pop add rex.RB jo jle mov xchg retq and sbb js sbb addr32 test ja insl callq (bad) faddl pop xor pop orl in xor xchg std jle add int3 xlat jo pop add nop xor iret jle (bad) loop mov mov rex.RXB movabs xchg rex.X rex.WXB cmpsl add jle sub fs or mov xchg outsb decl stos rex.XB pop jg mov (bad) je or enterq pushfq testb push mov jae test movslq push jp lods out cltd int rcrl add rex.RX jo sbb pop jbe add sub testb xchg cmc mov fwait mov add rex.WRXB cs cmpsl jnp rex.WRXB rex xchg add test in adc sub add or sarb lretw jbe enterq jbe jrcxz je scas stos mov movabs mov in scas lods add jbe jrcxz rex.X in rcrb push clc insl mov jrcxz scas nop pop xor jp rex.WRB in stos outsl cld or test movslq iret outsb add jns jg lock cmp and add hlt cmp (bad) fdivrl jmpq (bad) iret movslq (bad) (bad) push xor mov xchg outsb ja jle and movabs fbstp mov xchg leaveq lods rex.WXB rex.WRX cmp es adc in ljmp mov xchg xor jl xor repnz cmp xlat rex.WRXB cmp or sbb xor in (bad) sti fsubr movslq and fistp mov mov movabs (bad) pushfq jmpq lret add test (bad) jno mov sahf fstl shrl mov insb movabs jo rex.WRX rex.XB rex.RX xor mov out (bad) movsb add rex.RX push pop jnp add (bad) (bad) data16 fwait xchg cmp sbb stos clc cwtl pushq xor jmp out (bad) mov or mov jbe in jle cmp fistp mov loope mov xor sbb mov sub (bad) clc add pushq fxch cmc clc add jge xchg sub adc cwtl (bad) (bad) (bad) insb negl cmp movntps rex.W jle push (bad) cmpsl cmp test gs inc sub add pop jns xchg int3 adc movabs jae (bad) or jle rex.WXB pop mov out (bad) add rex.WRX lea jge subps or (bad) sub cmpsl mov loopne jbe add xor xor xchg sbbl xchg (bad) (bad) (bad) stos rex.RX pop cmp addb sbb jns and add mov adcl addl adc pushq cmp outsb add or mov (bad) sbb (bad) lock xchg (bad) mov xchg (bad) test scas add sbb rex.W movsl decb jge test sbb test mov rex.RB rex.WX fsubl movabs mov xlat sbb add sbb out adc (bad) pushfq pop ss (bad) jnp (bad) jno rex.XB retq (bad) jl loopnel cmp cmp mov mov fwait xor scas (bad) rcrl shl testb add or jnp or or rex.RXB lods mov add rcrl mov (bad) xchg rex.RB pop xor lret jnp or es rex.WR or jo pop out outsl add mov mov adc pushq adc lea xorl mov jg cmp add rex.X imul (bad) pop xchg (bad) xlat jl xor cmpsb (bad) (bad) jp lods mov es (bad) pop rex.WB rex.WRB rex.WXB (bad) icebp out sahf (bad) movabs (bad) xor (bad) xor movabs in jp rex.WRX nop jbe mov xchg mov (bad) rex add rex.WB pushfq rex.RXB in nop add push stos cwtl push scas add sahf jnp sub (bad) fstl rex.WRB movsl push mov sahf mov movabs push fsubrl jne push or ja pushq punpckldq and and add ss (bad) lret (bad) mov in (bad) insl xor mov pop rex.WB sub jp stc (bad) lret xor (bad) cli rex.WRX mov adc (bad) jb in jbe (bad) pushq data16 scas sub ja mov scas mov push stc fbld es fs push cmpsl movabs lret add (bad) movsl cmp xor mov fwait negb shl in adc mov sub add sti movabs subl frstor fiaddl sbb cltd sub pop cmp xchg sbb sub add imul xchg rex.WX pop mov pop leaveq callq mov outsl fbld add (bad) push jle jmp pop cmpl adc movabs test test loope (bad) or add outsl sbb lea pop adc xor jne scas imul test xchg cmp ficoml scas xor xorb jge jmp adc pushq sti add movslq fldenv mov in rex.WRB or jle rcrb imul movabs mov sbbl mov notl rex.WRXB imul jp outsl jp push fsubs jns jge add (bad) insl (bad) sub rex.WR stos add mov sub jg mov push (bad) sub pushq sbb cltd es (bad) movsl (bad) pushq xor add push xchg jg adc cmc xchg sub mov (bad) (bad) int3 pop sbb cwtl rex.WB mov sbb jl pop (bad) rex.WR sbb pop mov rex.RX add sub add retq lret adc enterq jle or js rex.WXB add loop (bad) std (bad) xor retq pop fiadd cmp sti add (bad) iret faddp rex add ja nop pop add movabs jbe and mov mov out pop (bad) (bad) lret popfq lret rex.RB sbb scas add lock stos fisttp jle mov pushq and and mov mov mov loopne fwait add rex.RB scas scas scas (bad) cmpsl add cmp lods test mov or fnstenv (bad) cs adc lret add pop mov test rex.WRXB cltd push movabs rex.RX jle out retq mov sahf scas mov xchg jl push cmp repnz push xchg xchg test jmpq push cmp jo xchg fdivrs sub rex.X jnp rex.RXB (bad) callq jrcxz adcl mov (bad) cmp out rex.W testl mov add pop sub sub jle and xchg fistp lods fs sbb or loope jne in je ljmp add or rex.WR rex.WRX js add add pop fmull cmp fs rex.WRX retq adc in mov rex.WX scas and xchg je (bad) (bad) test fstps ja (bad) scas leaveq (bad) add jle mov leaveq xor cmpsb icebp cmc movabs mov sbb sub incb (bad) iret loopne xor xlat rex.RX fisttpl loope out insb js in enterq adc stc mov roll (bad) add and push add xchg xor push out jp (bad) cmpl mov pop sbb add mov js fwait sub mov add (bad) lret (bad) out mov rex rex.RX sti pop adc (bad) and ds (bad) in add (bad) movsl (bad) and and in xchg mov stos jns movabs (bad) sub ja pop (bad) adc xchg rex.WRX (bad) xlat rex xchg test add rcrl (bad) lods retq fiaddl movabs add (bad) sub adc rex.RB add xor rcrl iret push sbb pushq (bad) (bad) icebp test leaveq rex.WRXB fistpll add addr32 cmc cmp rex.WX sub ds pop add or pop jmpq xlat xor shlb data16 or rex.W (bad) add gs paddsw add (bad) ja movslq leaveq imul add (bad) cmp lea jmpq (bad) enterq (bad) nop (bad) mov jrcxz (bad) in fldt cmp (bad) mov test cmp or cmpsl outsb jle loop mov xor fisubl mov mov jg sti add pop rex.X rex.WX jg xchg pushfq add xor ds (bad) pushq pop cli (bad) rex.X ss or adc mov push cmp xchg fdivs (bad) lock imul cmpsl jno (bad) cmp jl add jp nop sbb fwait movabs data16 jne movabs test (bad) rex.W adc rex.WX lods add rex.RX push cmp add fisttpl roll int3 adc cwtl xor add in and mov add shrl out scas add (bad) push add imul rex.R mov jbe iret adc rex.R (bad) jle hlt fs adc (bad) mov jnp or jbe fiaddl pop loope fs pop mov sbb insl and imul add adc popfq jae sahf rorb add xorb cmp (bad) imul and lret mov lock mov add rex.RX cmp sbb and shr (bad) jg xchg xchg rorl ss (bad) out (bad) (bad) sbb cmp jge (bad) mov pop mov rex.X push ss mov jp rex.RX je and pop mov (bad) push push sub add movsl movabs movsb rex.RX add cld mov js pop add add mov jae stos mov push std rex.WRB jb test rex.R stos outsl lock clc mov pushfq pop adc cmp fldenv add cmp push mov adc lea cmpsb mov rclb scas fbstp je loope (bad) add mov int3 jle test add jle test imulb icebp adc andl ja (bad) mov cmpsb mov (bad) xchg int (bad) lahf mov outsb adc sbb rcl adc fidivl cmc subl insl movl cmp mov retq jmpq movslq and cmpb andl ss jp push (bad) lahf (bad) (bad) xor in int jl xorl repnz sahf fcmovbe add (bad) scas ds lock mov (bad) cltd sbb jle (bad) adc (bad) or test in insl mov jg (bad) (bad) adc mov push mov add shl out sti iret cmp (bad) data16 incl rex.WXB ja mov es xor test lods rex.WRX movslq rex.RXB sarl rex.W cmc movsl sbb cld and add rex scas outsb lcall pop je mov je scas adc (bad) lahf rex.WXB mov (bad) add mov (bad) ja or fistpl mov jp mov out (bad) add push fsubl xchg (bad) adcb pop (bad) mov jp jbe loopne sub (bad) sub mov (bad) jmp roll movsl scas pop xchg sbb (bad) rex.WR mov (bad) adc jmpq and rex.W (bad) mov cmpsl xor cmp mov pop shr enterq pop (bad) rex.WRXB mov fs xchg mov imul rex.WR in pushq movabs and out add mov stos rex.XB sbb add sarl scas iret (bad) outsb add sti out mov add push (bad) rex.WR mov fdivrl or jo mov fldt add pop test push imul xor cmp (bad) jge (bad) movabs int push mov push rex.RB pop rol stos incl (bad) mov out rex.WRXB and sar jp add mov rclb mov fs (bad) movabs push and cmp adc ffree loope mov lret jrcxz pushq (bad) (bad) popfq or (bad) and (bad) mov stos mov addr32 (bad) rex.W (bad) ljmp xchg shlb test sub pop lret sahf imul shrl (bad) imul cmpsl cmpsb insb jo fwait stos clc or and std rex.WXB rex.RXB stos je (bad) fs loop addr32 fdivs orl jns rex.RB add cmp cmpsb outsl (bad) cltd add loop mov pop sbb movabs jnp mov add jbe ss in addl movslq int sub repz pop scas push add and pop (bad) add pop push sbb fs sbb xor xor fidivrl (bad) int sti add push (bad) repnz pushq sahf (bad) (bad) insl je lahf xchg insb cmp rex.WRX callq add (bad) sub mov callq jbe (bad) loope adc movabs movabs (bad) xchg mov (bad) (bad) rex.XB mov shr jg jg sbb jl rex.RB cmpsl rex.RXB push movl or add pushq sbb jnp fstpt jg out imul pop popfq cmp xchg (bad) nop fildll (bad) cmp (bad) ficom add mov out scas mov adc cmpsl gs xchg int rex.RB rex.XB rex.WRB (bad) cmp insl xchg (bad) mov data16 rex.WRXB callq add pushq test add add mov or add push rex.WB add pushfq rex.WRB and loop ss jns jmp xorq decl jnp jg push js sub lret jp orl notl add es mov (bad) (bad) (bad) idivb roll cmovs sub movsl data16 mov imul cmp (bad) popq andb push (bad) xchg ss stc addr32 jnp jp push sbbb test (bad) mov gs mulb fiadd add (bad) push fist jb (bad) (bad) rex repnz cmp add add out movabs out ja cmp pop ja (bad) (bad) jae and (bad) or (bad) (bad) xlat jrcxz jle jb jns enterq movabs adc leaveq (bad) cmpsb and sbb addb (bad) scas test xchg jb fnop test imul push fcoml hlt cmc orl loopne rex.WRX adc out imul shrb movabs xchg (bad) mov cltd (bad) xor push mov lret jl lret mov sarl decl (bad) cmp insb movsb rex.WRX movabs mov xchg out (bad) rex mov (bad) int3 mov sahf scas xchg lock fdivs (bad) sub (bad) pushfq xor adcb mov xchg imul (bad) mov mov sahf cmp lea sbb lret idivb pop (bad) jp insb mov xor xchg or je jg out mov ficompl mov pushq mov cld sar insb rex.RB xor je push sub out pop incb test (bad) pushfq jl stc rex.WB pop jle mov retq lret fnstenv nop notb xlat imul callq xchg and pop xchg adc jnp xchg and push add movsl jne mov rex stc jrcxz nop (bad) jp callq push pop rex.RX (bad) fisttpll or xor (bad) psrlq insb addr32 or and cwtl nop sarb sub popfq outsb xchg cmpsb rex.WX (bad) insl xchg sub (bad) xor xchg std repnz movsb pop shlb rex.W cmpsl pop fimull rcl xchg cmpsb pop (bad) (bad) in nop cmpl insb xor outsb repnz jle sub movabs jle pop cld add (bad) mov push scas sbb (bad) decl jle mov out xchg rex.WB movabs imul lods js pop outsl jg pop lock sti mov mov jbe (bad) gs and sahf push popfq mov (bad) outsl push faddl ljmp in sbb jae push push jmpq jno jb mov mov (bad) pop test lret ja or jo add lret rex.RB (bad) retq sub vpsrlq adcb (bad) sub xor fldcw rex.RXB (bad) lret mov icebp ja test mov xor mov fcompl push out outsl xchg lea push retq lea rorb xchg hlt movslq ficomp push mov (bad) out fcomip loope add sbb sahf rex.RXB add xor test and out mov mov (bad) fwait scas shrl sub cmp je icebp lea (bad) xchg jb (bad) jnp imul add shll push lret (bad) adc (bad) jp (bad) (bad) cwtl (bad) outsl (bad) mov add pop mov xor add push (bad) imul (bad) rex.RX (bad) sbb addl bnd push loopne push subb enterq xor add cld sbb cmp test xor push push mov loopne (bad) push push out int jb addl cmpsb rex.W rex.R in jmp sarb xchg ja iret jle popfq repnz push fidivl scas retq mov jb mov push stc add ja stos add (bad) rex.RB cmpsb cmp add (bad) fild add pushq repz push (bad) and (bad) mov sbbl movabs jp sti jge (bad) rex.RXB repnz rex.WRXB (bad) sbb int subl pushq movabs add vpsrlq mov and xchg in add mov jb icebp faddl push jb sar pop data16 add or lret pushq (bad) rex.WRB fs add jb mov pop mov outsl (bad) retq (bad) sub mov movabs js pushfq lods (bad) int3 fcoml jrcxz fdivrl add pushq rex.R outsl rex.R (bad) jg lahf int3 out fistl push jmp (bad) pop or fpatan leaveq js (bad) jb mov out jmp (bad) imul mov rorb pop mov (bad) sbb pop and cmpsb and (bad) fidivl pop xchg mov cmp push or iret insb sub jp in (bad) loop push jno fcoms pop lret jp (bad) fisub cmp or pop (bad) jmpq movsl pushq (bad) sbb or jl insl rex.RB push (bad) and ss jbe jmpq idivl (bad) (bad) sti pushq scas sti pop movabs cmp jne cld repz xor gs outsl leaveq stc fwait imul add lods insb sti add loope sub mov mov (bad) jrcxz adc cmp test and cmp pop (bad) mov repz rex.WRXB xchg (bad) popfq (bad) pushq test shrl or (bad) and xorl mov push movabs div pop js mov sbbb sub lret pushq iret jl rex.WXB movabs cmp rcrb pop jb (bad) lods xchg imul (bad) lods (bad) (bad) (bad) cmp cli sub rex.WRX out push sub fbld push std (bad) std mov jp rex.RB es lods and fwait (bad) rex.WB loopne xchg callq sti or outsb cmp ja jg adc icebp jge xchg rex.WRX (bad) js and mov (bad) jno mov stos jmpq movsb pop jns rex.WB pop insb scas cmp mov cmpsb nop pop jp callq fsub in loope cmp shrb mov mov (bad) jno jo sarb enterq (bad) or (bad) rex.W icebp cs cmp fimul ds pop (bad) sahf ds cld and mov fdivrl xor xchg loopne jle xchg or fsubs stos rex.WRB or mov ror add cwtl jle lods (bad) lahf clc sbb rex.R pushq xchg cmpsb rcr retq mov mov jl mov (bad) adc xor mov sbb mov (bad) (bad) test jmp mov ja movabs cmp je in js cwtl movabs and (bad) fisttpl sub adc loope push cld xchg cmp jl fist jp test (bad) in rex.WRXB cmpsl (bad) (bad) mov stos cltd lods std add retq insl repz lods test icebp int rex.WRX mov and and or rex.B rcll in sbb adc rol fdivl (bad) frstor callq (bad) fisttpl test pop sub cmpsb subb xlat repz hlt jmp ja out movsl rex.RX rolb add push xor fwait lock sbb push test or pop add push adc (bad) xchg jl (bad) stos (bad) add imul (bad) cmp jo jp pop data16 xor scas jmpq mov push sub cwtl mov (bad) xor (bad) out (bad) xor cmpsb cmp cmpsl jb rex.RX xor outsl retq mov push (bad) test rex.W lock (bad) outsl mov xchg and mov lock (bad) ja push enterq rex.WR mov (bad) iret rex.RB fs data16 pushq mov insl test xor stc mov cmp (bad) test cmp popfq jae cmp iret mov test (bad) outsl xchg cmove insb jmp cld sub (bad) int3 fadd (bad) and movabs jl jb retq push movabs add cmp cmpsl xchg test cmp jl lea rex.R stos (bad) jle adc fbld (bad) push fdivp ds add sub add lahf jbe,pn (bad) rex.R rex.W pop out pop push sub movslq test (bad) cmp sahf fbld push clc test cltd flds sbb sbb jbe jg xchg and rcll or lods xchg rex.B hlt loope xlat jno subl pushfq xchg int imul (bad) jo je push pop or (bad) jb or pop add mov mov int add retq mov adc jo outsb add pop loopne mov rex.RB jg rex.X insb (bad) or (bad) hlt cld test (bad) (bad) cmc test pop shrb data16 test pushq sub mov mov xor movabs jp xor mov rex.XB rex.RXB sbb roll popfq cwtl mov add add jg cmp adc std (bad) lock (bad) sbb incb (bad) lock cmpl mov sbb js mov out mov push loopne and mov shr adc out xchg loope sbb pop stos mov jle fwait scas add (bad) out mov mov add sbb rcr outsl lods jmpq int je (bad) sub jae jmpq popfq jnp push add rex.W xor icebp add cmp rex.WRXB mov pushq stc jo (bad) jl add push mov xor test sbb jg xchg xchg jp mov scas and mov callq lods (bad) (bad) push add repnz out jp jge scas jl clc nop fidiv mov loopne movslq push xchg outsl sub add stos xor (bad) rex.WX subl jae (bad) cmpsl sub (bad) jg rex.WRX rex.RB jb out xor and loop push add (bad) mov mov add movabs push xor rex.RB lea (bad) sbb jmpq movabs push (bad) adc cli cmpsb pop sbb jno pop mov pop (bad) incb popfq sub cmp (bad) and in callq rorb pop mov push add cmp in fwait sub (bad) fidiv mov add jl mov mov mov (bad) callq stos rex.WXB movb pop xchg fisttpl or enterq add rorb cmp sbb jmp or sbb mov iret (bad) rex.WRX std rex.W xorl jg (bad) mov lock enterq (bad) push out mov (bad) cmpsb (bad) loop fist push adc icebp in add or cmpsl xchg enterq int3 or mov jb fldln2 mov (bad) rex.WXB and adc fs xchg jg (bad) fildll add ja sbb rex.WRB add rex.WB rex.WB es sahf add (bad) push (bad) add (bad) loopne cmp push jle ja push cmp sbb rex.WR rcll rex.RX xlat cs jb cmp (bad) (bad) or imul add cmpl (bad) add rex.WR andb add out (bad) mov movabs or int add or (bad) add outsl cmp test rex.R cltd callq push mov cmp in sub (bad) cmp or jrcxz xchg mov xchg (bad) repz (bad) rex jmp jl enterq popfq (bad) cld (bad) insb push add fmull jl mov callq xchg push rex.WR fs adc jmpq jno (bad) xchg in int3 cld rex.WRX add add mov leaveq enterq outsb movslq sbb insl lahf sahf scas jnp mov imul sar add xor mov jp cmpsb rex.RB push pushq or test mov cmp add ficoml add jge sbb fsub add (bad) test mov jle jl stos jp add loop rex.WR fs repnz sahf rorl in out loop sbb movabs add and add add insb (bad) hlt sahf sub or sub cmpsb int3 add (bad) adc mov icebp ja xchg test retq loope mov pushq (bad) cmp jmpq add int push cltd (bad) add pop mov jp (bad) push (bad) (bad) jl cwtl jle enterq in jg loop mov pcmpgtw mov sahf mov mov cmpsl add imul repnz pop sbbl xor ucomiss (bad) retq cmp jmpq fisub stos jge popfq movsl cmp pushq out outsb push mov loopne sub or loope add and insl add sahf movabs mov jge (bad) jmp add movslq mov rcll es and add cmp add (bad) clc adc je adc in or pushq xchg not pushfq add jrcxz test add (bad) mov sub (bad) sub push mov mov jmpq jne rex.X shl adc lock mov add in fwait mov fs cmc ds repz or fldl2t add add xor rex.R jae lahf (bad) stos hlt xor gs jnp mov fwait jb outsb sbb sub add or jle mov sbb out sahf jg cmpsl cmc and js lret (bad) rex.WXB adc (bad) jp (bad) test (bad) movabs rcll or (bad) int3 xchg imul xor xchg rex.R pushq icebp movabs rex.WRX (bad) leaveq jp mov rex.XB fiadd add or mov lahf hlt jg adc add sbb jns stos outsl add xchg pushfq jrcxz nop (bad) (bad) rex.WXB fildll jg movabs sub pop jle sub xor cmpsl outsb sbb popfq std fldt rex.RB sub fnstsw stos jle int3 es xor sub movabs jle movsb add fcompl rcr rex.W jmp cld mov clc ds out rex.WRXB jle callq pop cmpsb movabs cli mov mov nop add divl xchg iret adc mov in ror fwait jmpq (bad) rorb movabs and jbe jg xor sub int3 test rex.WR sbb fstps sbb lock out xor scas iret (bad) test jg sti (bad) (bad) in movabs rex.R fildll cmp (bad) movabs retq xor mov addr32 out sub (bad) movabs jle cs add in rex.WRXB add mov insl loope cltd sub or xor (bad) xchg mov fisttpll cmpsl (bad) pop sbb invd add scas xchg rex.W xorb add sub lock add sbb (bad) add out jbe fadds rolb cmp (bad) cmpsb stos mov add mov movabs sub rex repnz add insb jb cmp lret xor cmp (bad) js jle (bad) cltd mov movabs add adc unpcklps add imul lea rex.WRX xlat test add adc lea (bad) lcall pushq jno and cmp fiadd movsb notl (bad) mov mov out mov rex.W push xchg data16 notb jno jne andb out (bad) push int scas cmovb in jg mov mov add rex.W jb iret jae out xor push cmc xchg data16 (bad) stc mov xchg xchg add rex.R (bad) jb sarl fs mov cmpsl fwait jl mov push adc sbb scas out pop xchg add imul adcl mov (bad) lock clc gs scas sbb mov add pop stos lret (bad) (bad) (bad) fistp add (bad) repnz sahf (bad) or rex.RXB iret push ja pushq rex.WRX jnp jno mov jo xchg xor push (bad) (bad) scas rex.W jg in rex.RXB or cmp stos test nop xchg mov (bad) icebp mov add (bad) jrcxz xor or (bad) sti xchg push (bad) pop rex.WR pop sbb (bad) mov (bad) pushfq inc mov sarb cmp add (bad) fsubrl rex.XB jb loopne (bad) mov sahf (bad) (bad) push jle je sub stos addr32 jb pop xchg cmp push (bad) add xchg lock lret mov jno cmpsb xchg fistpll jo push rex.WRXB retq xor sbb jno lret cmp es xorl pop jl in rex data16 sbb mov loopne add clc (bad) jmp imul scas cmp add retq sub nop add xchg loopne sbb (bad) add (bad) and rex.XB sub xchg movb add faddl (bad) retq jmpq cli (bad) mov mov add addl rex.WX rorb movabs loop (bad) or add in rex.WX rex.X (bad) rolb jbe popfq rex.W add adc add (bad) and xor ja pop jge callq (bad) rex.RB mov retq mov push xchg xor jle jg fucomip jp fiadd gs sahf rex.X lahf int rcrb in mov and jle mov pop loope or jb shlb push mov imul negb insb xchg lea rex.WX cltd pushq cmp push cltd repnz pop (bad) cmp sbb ficompl pushq insl (bad) pop mov xchg push mov and (bad) sbb mov add mov lods fldenv jle mov mulb and int3 and (bad) rex (bad) out in rcrb pop ss mov add (bad) jo cmp nop or lret mov hlt xor jnp adc mov jrcxz rex.WRXB rex.RB jle mov pushq retq sti (bad) add (bad) js pop (bad) fwait jb popfq es out cli js jb mov adc (bad) movabs xchg jo (bad) or sub imul fisttp (bad) (bad) (bad) decb (bad) xor (bad) cwtl iret sbb (bad) jbe xor rex.RXB imul (bad) mov xchg adc fcomp cmp or gs (bad) push cwtl out cmovb mov xor pop div (bad) adc pop push or fs movabs mov mov rex.RB pop cmc mov out mov (bad) std (bad) jb xchg (bad) or (bad) mov movabs mov or mov sbb cmp (bad) fisub (bad) and pop movabs (bad) hlt pushq mov cmp mul cmp add adc pushq sub fdivl (bad) rex.R cs (bad) xor mov test jl mov outsb cmpsb (bad) cmp test sub cmc notb xchg xchg cli jge sbb cmp (bad) jns lahf rcl push mov (bad) test js sbb xlat mov mov in movabs mov xchg xor cmc loope fsubrs std or scas mov add lods xchg (bad) jb lret jge push cmp cmp jmpq insb rcll sub lock insl jno cmp push insb retq rex.B (bad) sub lods (bad) push jl push in data16 mov in mov (bad) cmp retq rclb mov pop xor in cli test jns (bad) outsl add (bad) xchg sarb or cmc xchg mov insl movsl mov add popfq xchg sahf add movabs in sub (bad) pushq int and andl cld roll fidivr jbe push loopne (bad) cmpsl orl pop (bad) js push adc callq add rex.X mov xchg push mov (bad) mov callq (bad) sbb (bad) xchg jb int3 mov add jnp stos cmp mov loope add (bad) sub in hlt in add push rex.WB pop out vlddqu scas mov (bad) callq mov sub lock mov (bad) popq or sub rex.RB nop imul cmp outsl loop (bad) mov cmp (bad) sub ja mov pushq (bad) cmp jg,pn add jns mov rex.WB movslq cs (bad) (bad) ss imul jle int fiadd addr32 movslq test add add rex.WRXB es mov sar mov sbb xchg (bad) (bad) rex.WRXB and xchg fadds cld movabs sti test xchg (bad) rex.WRX test (bad) stos pop scas push gs (bad) pushfq add jle outsb sbb sub add idivl jb (bad) imul jo xchg je orl (bad) (bad) sub and lock cli mov push adc rex.WRB lahf push mov nop xchg jmpq iret pop pushq xor cmp pop test je in add and jns rex.WRXB mov mov add stos pop jge or rex.WRX retq jb clc out (bad) jge jns and movabs fs outsb (bad) xchg jb and movsl fxch fdivl (bad) (bad) mov cmp or rex.WRX xor sbb or and iret (bad) sbb fbld add or mov add rex.X rex.B scas (bad) pop shrb mov add js imul push (bad) stc jne xchg sbb lret insl std enterq (bad) int3 adc pop xchg rex.W (bad) mov scas cmpsl std cltd rex mov testl (bad) rex.WX adc or in mov pop xor adc mov (bad) jrcxz (bad) callq movslq fldcw sub ss or jo ss repnz mov add repz sbb sub add xchg movabs xlat (bad) sbb rex.RXB rex.WX (bad) mov or mov rex.WRXB push (bad) add js (bad) xor push movabs (bad) stos mov add imul movabs subl lock test rex.WR (bad) icebp sub out mov cltd sbb outsb mov and xchg jg mov and callq jns cmp or mov (bad) rex test sbb (bad) movslq leaveq cmpsb (bad) (bad) xor out or cmp outsb xcrypt-ofb cmpsl sub pop jle es jbe (bad) (bad) cmp (bad) imul (bad) mov js iret xchg mov (bad) push (bad) pushq mov jo sub retq sbb jb in xchg adc (bad) mov jnp js xlat sub cmp cld in rex.X in (bad) cmp (bad) or (bad) pop add jne lods (bad) cmp fcmove sbb adc cmp (bad) fnstsw movslq jns (bad) scas icebp ss pop (bad) sahf rcrl push out je push jle sub scas fbstp fidivr outsb rex.WR cmp data16 jnp jg jl leaveq mov (bad) add push pushq mov (bad) fildl rex.R (bad) sub xchg mov jae icebp fsubl out mov add rcr xchg int rex.RB repnz add ds stc (bad) cmc pop add mov pop add mov jle add mov (bad) movabs roll (bad) push and sub mov xchg popfq add (bad) (bad) fsubl rclb sbb rorl or ja test add xlat std mov adc mov add movabs test cmp jo rex.RB sbb xchg movsb xchg and sbb add cmp or adc jrcxz xchg mov clc rex.WXB pop xchg xor add rex.RXB mov jns xor loop add jo fnstsw sub imul clc in movabs (bad) (bad) cs pushq xchg jmp add (bad) rex.X (bad) faddl xorb je jno push repnz jle lods cld fwait jmpq divb jne pop fs popfq test fldenv and mov (bad) leaveq rex.RB jg imulb mov jb fdivrl mov es movsb sub loope mov (bad) scas cli (bad) rex.X bnd add jno shlb add sbb add (bad) (bad) xchg lret movsl add lods xor jle rex.WX out testb sahf int3 (bad) jnp (bad) xchg jbe mov es lock sbb xor imul add cmpsl mov push lods (bad) pop (bad) loope mov add (bad) jbe sbb add je movabs out rex.WR (bad) faddl imul rex (bad) pop add movabs movb sbb xchg movabs cmp sbb f2xm1 mov mov push retq add jne mov imul and roll (bad) icebp movabs rex.WB add (bad) or jge sub imulb mov add xchg lret add (bad) cmp movsb mov pop push jbe mov mov (bad) add cmc sub outsb gs add retq jnp fs push insl pushfq jge lods cli movabs add cmpsl or std rex.W movabs xchg rex.WX rex.X jne jp (bad) jp fidivrl and insl push (bad) jae test and in sub jp mov scas sbb rex.XB add rex.WRXB fisttpl sar and rex.WRXB add pop fistl pop and add test (bad) xlat mov mov (bad) lock fwait out (bad) movslq add js xchg xchg sub (bad) rex.WR (bad) xchg and jno pushq and mov (bad) imul je adc mov sub pop out xlat xchg js and push scas rex.XB rex.X retq sub mov jle fdivp mov test andl rex.WX stos sbb fiaddl adc push lods xchg mov out (bad) (bad) adc fisubl pop (bad) jbe callq (bad) fisubr cmp (bad) mov mov pushfq loop lods push mov insb inc stos insl mov rex outsb movabs (bad) mov jg sbb xchg imul (bad) out push (bad) jmp scas (bad) mov out (bad) pop decb movabs adc mov (bad) (bad) push pop insl pushfq pop (bad) mov add jb cwtl rex.RXB xchg rex.B pop mov repz jmpq xchg cmpsb jp mov (bad) cmpsl push fucom add and rex.RB cld clc sbbl or pop nop mov jnp ror lods loopne cmp iret lret push mov divps std jbe ljmp out (bad) rex.RXB rex jb mov (bad) negb pushq jp jg (bad) pop jbe cli cmp (bad) (bad) test scas sub xchg nop jmpq xchg sub pop popq (bad) add jl clc pop out imul or add gs xor lret mov (bad) jo mov pushq rex.WRX rex.WB ljmp sub idivl xor (bad) js sub add jl rex.XB xor xor (bad) callq addl push or imul (bad) and test adc or rex.WXB lods lea and (bad) (bad) popfq and scas fnstcw imul icebp out push ss loope movabs and in mov cmp pop pop add add or push push retq (bad) and sbbl int3 mov stos xor shll sbb jrcxz and xchg imul loopne popfq jae mov shll shr sbb add add stos (bad) jmpq mov sub mov shlb clc pop stos callq lods (bad) jg fldt ja jae fsts out pop outsl dec jbe movslq xor rex.WXB rex adc sti je rorl push scas and mov xchg pop pop cmp test add js gs cmp pop in test push rex.WRB icebp outsl (bad) mov mov lret pop sub mov lret es jg sub sti fisttpll adc sbb mov (bad) (bad) repnz (bad) in pop adc mov movabs xchg pop insb pop js sub in and mov out add adc jle jg data16 lock lods cld (bad) cmp pop loopne (bad) (bad) xchg xchg add iret fs pop mov add (bad) mov or (bad) (bad) sub je (bad) mov cmp xchg out jmpq sbb lcall retq int3 (bad) mov (bad) (bad) test std incl lahf xchg movabs in je jb rex.WRX stc (bad) jbe add xor cmp xor movabs ja (bad) js cld fisttp out jbe or dec add jo out sarl rex.WRX (bad) testb std data16 out js (bad) jne xchg jle and movsb mov movslq xor ficoml mov mov mov fptan pop add loop fcomip mov mov cmp scas cbtw sub shr stos xlat jge (bad) sbb test scas (bad) cmp rex (bad) mov mov (bad) adc mov ss lret lcall jge sub out in retq sti jo or out pop lods sbb out and addr32 rex.WRXB xor insl je cmpb pushfq (bad) cmp cmp jae push insb mov int3 test xor mov add retq (bad) mov pop stc stos mov movsb nop clc sub movabs callq sbb pop mov repz (bad) xor rex.WRXB stos (bad) ja mov lods push lods adc jle mov push (bad) xor jbe xchg outsl ja stc je and and xlat xor ss jge movabs (bad) outsb jg insb (bad) jp cs jl ja (bad) jo xor (bad) (bad) pushq sarl js mov in xor iret notl out shlb rex.B rex.WRB rex.WRB rex.RX pop scas rex.XB (bad) ja jl (bad) mov ds (bad) frstor cld rcrb movabs rex.XB pop (bad) xchg rex.X push outsb pmaxsw mov (bad) (bad) js pop movabs outsl mov rex.RXB add mov ss insb sahf outsb mov adc lods rex.WRXB rclb fs add jns push rex.RX movabs and mov cmp stos cs nop (bad) or pop loopne ds cmpsb (bad) test (bad) fild pop lea jle mov insb push rex.RXB jnp gs pushq (bad) adc imul (bad) scas rex.RXB repnz mov push jne pop pushq rex.B push push push mov jmpq and push rex.WRB outsb insb pushq add and cmp fucom mov sbb sbb (bad) adc (bad) (bad) mov add movabs mov retq jae (bad) (bad) imul jle (bad) and xchg sbb fcoms rex.WRX lret jb (bad) pop movsb enterq movslq add test cmpsb add rex.WRXB mov repz jg or imul jp,pn push repz rex.RB add adc (bad) ja in scas cmc stos out lods std movabs (bad) cmp in in jo cmp jb xor lret xlat or cmp movabs fdivp xor popfq ds lock out pop movsl fisttpl stos hlt or (bad) rex.R sub lret mov cmpsb jne cmpsb rex.WR sti mov mov sbb int out adc jge imul and add add mov rex.X jnp or sbb mov mov cmp add iret insb movslq rex.RXB rex.WX enterq jbe xchg mov add sbb jb xchg (bad) movslq (bad) add sub xchg mov test (bad) rex.WR jp and mov hlt stos insl imul cmp or mov xchg push (bad) in ror add and ds mov rex.RB jp rex.R (bad) or or loope pop adc retq jns callq ds js and nop mov add (bad) jg xor outsb xor jmpq sbb ss faddl xchg mov sbb add retq je adc movsl mov add jno imul add sub xchg jp lods ss xchg add mov push jl mov (bad) add (bad) movslq (bad) mov mov pushfq lods pop sbb sarb add pushq lea loopne (bad) cmpsl out (bad) cld roll callq insb js mov jmpq rex.B shrl (bad) outsb (bad) (bad) iret sbb add adc or test jo mov js (bad) jg xchg addr32 in (bad) rex.WRB xchg jne insl cmpsb insl ffreep rex.W iret mov lods pushfq addb movabs mov and stos fs movslq int stc jne mov loop (bad) in pop pop cld and pop and push sub adc (bad) mov clc (bad) adcl rex.WB (bad) (bad) in jb jns xchg push sahf rex.RB sub cmp imul sub fsubs mov add lahf rex.WXB jnp movb rex.RXB (bad) xlat sti sub (bad) cmc in (bad) jb scas xor sbb rex.WRXB mov cld fcmovnbe add or mov add add retq (bad) mov lock and xlat xchg (bad) orl repnz scas addr32 jmpq int cmpl xor mov lock sub in test jg adc and clc sub pop (bad) (bad) cmp push (bad) enterq jbe outsl seta mov pop pop cmp jl and jle cmp (bad) (bad) mov jmp sbb movabs (bad) pop repz mov (bad) je mov (bad) sub adc and sbbl jns xor add and sahf mov scas rcl fwait (bad) push fadds rex.R add out fnstenv jle lods lods lahf std sub int sbb xchg repnz mov ss ds add lock fbld (bad) jb sbb cmp push adcb add sub rorl (bad) add stos sahf adc (bad) rex.RX mov jp rex.R rex.WRXB cmp cmp (bad) imul stos or jp adc mov push add (bad) (bad) mov jb jmp mov movabs imulb xor bnd push add fadd mov pop or add xorl jl add add push add rcl mov sbb or pop iret sub xchg sbb imul test mov mov pop icebp and rex (bad) cmpsb rex.X xchg lock xor jne push jg rcl add rex.RXB or (bad) xchg lret insb jle lods rex.WRX sti push mov in sub test mulb mov add jg rolb xchg jb (bad) outsb mov and (bad) int3 cltd imull add cmp gs (bad) sbbl lock (bad) and outsb (bad) imul adc xchg (bad) lahf sub push popfq rex.W rex.WRXB pop (bad) ja iret fidivl gs rex.WB movabs nop pop add lahf adc jmp adc rex.RXB sub adc imul (bad) out add (bad) insl mov retq fnstsw scas sbb cmpsl fimul mov outsl int3 rorl rex.WRXB xor leaveq mov push clc cmp insl test jno movslq xorl push enterq addr32 fwait pop push xor (bad) out xchg out jle mov xor mov (bad) fsubrs cmpsl sahf fiadd fild roll sbb cmp lock jl mov jo fist jne rex.WR sti rex.WRX movsl mov add cmpsl mov (bad) js outsb (bad) sbb mov xchg enterq mov loope (bad) movsl (bad) xchg mov (bad) mov sub sub push addr32 (bad) scas rex.RXB and testb cmpsb sbb mov stc icebp or (bad) scas jrcxz mov fsubl loop pop mov jne sbb icebp xor add fstl jbe int and sub rex.RXB scas add div add loop xchg pop (bad) sbb negb je imull add jle (bad) cmpsl retq mov mov cmpsb int3 movsb add idivb in callq stos push jl js fwait outsb xchg (bad) jge xchg add mov sbb mov add rex.X lret add sti jae stos push adc je cmp out sti pop sbb xor sar (bad) rex repnz fild xlat andl or lret leaveq adc rcrb (bad) lret std jns sbb sbbb or es add sbb addl sub rex.WRX scas retq rex.WXB or in orl adc in jl callq je rex.WB adc ficom (bad) xchg xor andl jge rex.R jg je adc mov jae std fcoml add mov movabs lock rex.WRB rex.XB push lahf es lahf or add sub add mov sti fdivrs scas mov insl rex.WRX fs mov stos (bad) sub sbb addr32 add and movsb imul (bad) sbb insb add out test test and rex.X retq data16 callq fs fld insl rclb jg sbb add add loopne rex.W callq stos js addr32 mov stos rex.X lock (bad) movsb (bad) add mov test add (bad) cwtl test jo add (bad) rex.WRXB rex.RX (bad) jno (bad) cmpsb lock add divl pop (bad) (bad) nop (bad) (bad) imul ja jge add cs imul add movabs mov jne add test adc xor rex.W and out (bad) (bad) xchg sub xor (bad) mov rex.XB adc push xchg jb movabs mov add popfq cltd add rex.X (bad) rex.RX mov sbb xchg (bad) sahf rex.XB mov test shl clc and rex.WRXB pop retq add xorb mov (bad) stc addl xor jle addr32 adc scas paddw and roll sbb mov fist add or rex.WRXB mov lods hlt xlat push (bad) add iret jl add add rex.RXB cmpl loope (bad) pushq (bad) push xchg rorb jb jle cld (bad) sbb fisttp rex.W (bad) push sub push (bad) stos lret add outsl jrcxz stos lock rex.WR (bad) jns pop enterq mov sbb rex.B fwait push imul sahf rex and adc rex.X mov mov or xchg out or push loop sbb lock fs out (bad) je push sbb negb pop rex.WR xor add sbb es fild movabs jne and loopne (bad) rolb (bad) add (bad) jbe rex.WB sbb rex.XB rex.WRXB insl rex.WRB xor movsb std mov mov mov mov pop add jmp or mov movsl lahf adc mov callq orl retq rex.RX in add xor jnp xchg and push add mov mov sbb ss (bad) mov and (bad) out sbb adc adc pop add (bad) (bad) js or and xor repnz leaveq (bad) enterq cwtl cmp push mov xchg jle jmpq mov (bad) stos icebp and add cmpsl jno int3 pop stos jmp and sub ja fcomi pushq or or and test sbb rex.WRB (bad) mov fwait mov out cwtl setle add in (bad) sbb rex.RXB cmp je and mov xacquire stos sarl in add pushfq jnp callq mov mov ljmp xor add add out rex.WXB push add pushq add jg jne cli sub lahf (bad) or mov add js data16 mov mov stc (bad) (bad) cltd rcrl jne cmpsb in (bad) cmpsl cmp rex.RXB js (bad) adc jl iret jle rcrb divb bnd (bad) lods push (bad) (bad) sbb push jg jbe adc fisttpl pop sub (bad) (bad) jb sub sbb xor push jl data16 out int (bad) add loop cmc mov mov mov (bad) mov add xchg xor sub (bad) (bad) xchg mov movabs (bad) rex.RX rex.WB xor cmp callq lret (bad) add (bad) ja loopne mov add mov fs add pop cltd imul xchg rex.RB xchg scas data16 mov add (bad) xor adc (bad) cmp add jle (bad) (bad) shrl test adc add or or and pop popfq (bad) cmc in divb fimull or test sbb xchg add xor (bad) nop rex.RXB add repz xchg add emms rolb movabs xchg push xor (bad) jl (bad) add cmp mov lahf ds sub shlb cmpl sbb xchg rex.WRX data16 rex.WXB jl imul loopne pushq std rex.W stos popfq cmp lret rex.B rex.WX sti push ja (bad) (bad) lahf xchg stc add mov add add mov (bad) faddl movsl je xor fimull or sbb pop fnstcw push fidivrl add (bad) xchg je add push (bad) mov loope fs hlt (bad) mov (bad) pop jrcxz jle addr32 mov or add (bad) pop mov loop (bad) and jae rex.RXB ja mov scas (bad) stc mov pushq sub pushq xor add popfq sub outsl push adc rex.RXB addr32 xchg (bad) popq pushq icebp mov rex.WX add rex.WB jb js sti cmpsb mov imul add stos fcmovnbe sub mov rex.RX sub movsb cli fsubrp repz (bad) jp (bad) mov sub scas outsb sbb pop cs pop or sub jg leaveq rorb jp popfq int3 rex.RX xor add jge add rex.RX mov rcll movabs xchg mov sbbl adc mov rex.RX jge sahf lods pushq adc rex.RB sub cmpl add jp adc sbb mov or xchg push icebp add movabs fnsave lods pop rex.XB add (bad) rex.WRXB es adc jg movabs rex test (bad) scas xorps (bad) rex.RX xchg (bad) nop es xchg popfq fwait (bad) icebp sahf (bad) out outsb add in xchg sarb lahf and jg pushfq test rorb sub rex.W mov (bad) add icebp mov lods add rorl mov cmp callq outsl rex.RX xchg (bad) or pushq push rcr movabs repnz addr32 (bad) sti sub stmxcsr sti jmpq (bad) push sub mov jno nop cmp sbb mov pop out mov fnstcw mov sub rex.R add mov outsb out jns pushfq jbe xchg int rex.WB scas xchg (bad) mov rex.WR xchg clc loope (bad) sti pop cmp test movsl xchg rex.RB nop jne test jg pop sbb add xchg jne (bad) (bad) add mov stos add pop mov jge and jnp push fnstenv jp (bad) rorb add leaveq out mov jb (bad) (bad) rcll (bad) (bad) out xchg add out add lret lods loop cmpsl add sub cmp xchg mov (bad) fildll (bad) repz add (bad) ds pop repnz nop mov (bad) test or scas pop (bad) ss rorb mov lea out jp cmp ja pop movabs pop rex add jnp jne (bad) sbb sub hlt adc push add stos cmpb retq js mov jl pop xchg (bad) std jge (bad) jle lea insb push subl and je imul cmc pop cltd mov adc pushq js xchg loop jp xchg jmpq sub add sbb jge push jb sbb mov (bad) movsb insl adc (bad) cmp rex.WXB cltd es repnz or sub xbeginq or outsb icebp xor xchg mov mov or data16 sbb add rorl lret imul adc loop (bad) rex.WRXB jbe (bad) mov (bad) mov jp (bad) fidivl (bad) sub xchg out ds push pop es pop cmp rex.WRX jae mov (bad) insl (bad) jb cmpl adc movsb mov add lock (bad) (bad) outsb add cmpsb pop fcoms mov je jp jns xlat loopne add pushq jnp rex.WB imul (bad) jge js (bad) pop mov pushfq (bad) (bad) std cmp sbb lods lock xchg ja cmpb (bad) imul (bad) (bad) stc ds mov (bad) push (bad) pop jle xchg in (bad) (bad) idivl mov add loopne xchg mov and nop jp movabs xchg or adc out (bad) std ss in (bad) (bad) retw movslq (bad) sbb test rex.WR jg xchg cld jmp (bad) out jnp (bad) rex.R add lock rex.WX sub testq (bad) adc movabs cmp shrl in adc xchg adc jg mov (bad) icebp push add cmc idiv sbb (bad) lock mov sbb loope ficomp clc iret test mov scas faddl sbb icebp xchg popfq pop add rex.WX (bad) push and rex.XB movabs add lea (bad) lea fs movabs (bad) ja mov and fsubrl rex.WRXB mov (bad) xchg xchg (bad) jb jg sti callq fsubrs (bad) jbe push cmc mov or shll js insb pop scas gs add jnp mov (bad) add jbe adc movabs mov rex.WRB (bad) fwait (bad) (bad) mov jp popfq cmp jb fnstcw fisubr xor or or jns fistpll (bad) fwait add fist movabs add (bad) or (bad) movsb jno jp mov outsb mov sarb xchg mov cld push in add std mov imul pop adcl jno cmpsl jbe rex.RXB add hlt add mov andl sub cli sbb rex.WRXB pop mov hlt (bad) sahf iret xchg in cld std (bad) mov and jg jmp movslq cld add mov movabs stos lahf mov in fistp sbb test add stc rex.WRX jnp add xchg adc add mov add fwait (bad) lods movabs add movsl int add mov add mov repnz cwtl outsb sub rex.WRX repz movabs (bad) xchg js rex.RB or jae xor out movslq out fs je sub xorb add mov neg xchg mov sub test mov jl test add loop cmp out add test cmpsl insb xor push rcrb mov (bad) sbb movabs or rex.XB (bad) repnz mov mov rex.RXB iret pushfq pushq rcrl add xchg cmp rex.RX outsl lcall xor (bad) add adc imul add and in cwtl lret xchg test xor jp mov jge insb pcmpgtw add sub mov mov xor jmp cli clc xor sbb pushq rex.WRB xchg (bad) nop push add cmp stos scas (bad) rcll mov adcl mov sub outsb push (bad) (bad) (bad) int3 in callq push mov add xor repz js shlb mov rex.WX or shrb (bad) mov sti or insl (bad) retq shr add (bad) movabs sub rex.RX sbbb and insb adc ror (bad) pop mov repnz sarb xor (bad) (bad) add fildll xor iret jle cmp mov jg jns push xchg jp idivb outsb (bad) (bad) adc addl and sbb rcrl (bad) cmp pop pushq push clc flds rex.RXB movsl xchg cwtl cmp jae and xchg rex.WRXB leaveq imul cli sbb (bad) rex.WRX rcr jrcxz enterq add shlb movabs movabs movabs push mov insl fsubrs cmp xchg fildl lods mov mov in jns (bad) (bad) rex.W push rex.B rex.RB lret xchg (bad) int mov (bad) add mov mov jle (bad) sub rcll int3 rex.B in pushq shlb cli lods jne lea jo stc xchg rex.R xor insl (bad) test (bad) (bad) jnp scas mov or or cltd repnz xchg (bad) test imul (bad) (bad) mov add jrcxz movabs mov sub (bad) incb jmpq mov pushq cmp (bad) push repnz mov cmp ss xchg jl repnz lods (bad) jp mov js ss (bad) (bad) divb cmp scas xor push jns xchg push adc rex.RXB lea add insb push pop mov mov in cld and xor (bad) cmpsb lock std xchg add nop fs callq (bad) (bad) fimull clc rex.X lock gs out cld and xchg cmp (bad) fldenv rex.XB enterq jo sub pop cld adc or (bad) test mov fisubr or sbb mov xlat fild cmp cltd sub test jge movslq sbb mov ds cld xor jbe in push hlt (bad) mov rex or jg adc sbb movabs repz leaveq (bad) (bad) xor mov cmp je adc loop pop movabs (bad) jbe jg xchg (bad) adc test repnz sbb shr testl sub (bad) cmc rex xchg sbb (bad) movabs sub int pop mov sub (bad) mov jle xor or pop lods hlt add mov xchg rex rex.WB fnstsw adc jl (bad) pushq and out and sahf cmp add out pop hlt jge (bad) push movabs rex.WRB xor ja xchg push lods insl insb pop lret (bad) (bad) mov sub pop (bad) mov js in rex.RXB or sti jb (bad) fnsave mov jae xchg jg push outsl pop (bad) jmp cmp rex.X retq loopne jle lret fcomip mov pushq out pop insl gs (bad) lret mov xchg (bad) (bad) insl insl (bad) callq rex.WXB adc push mov pop subb mov ficompl sbb repnz and xor lock scas loopne jbe jns pop hlt test rex.RX jge,pn pushq fsubrs pop (bad) rex.WRXB rex.WR ss (bad) (bad) sbb outsl jl xor jnp cmp cmp pop divb xor in iret xchg stos mov cmp mov je in xor popfq pop loop movsb cmpb xorl xchg repz fcmovnbe (bad) sbb outsb (bad) xor rex.WRXB std cli rex.WRXB (bad) add (bad) popfq xchg add gs mov int psllw cwtl mov xchg add fucomip xor and (bad) rex.RB rex.WB popfq stc outsb add mov add and mov push movabs data16 cmp movslq icebp and jnp jge (bad) pop (bad) mov data16 (bad) add ja mov rex.RB repnz (bad) int stos cli sbb xchg stos add fwait lea jrcxz insb retq mov mov cmpsb jmp movabs (bad) pop sarl fistpll popfq xor (bad) clc add and jne sbb adc cmpl fstpt fidivl ficomp jle (bad) movabs xchg cltd jne scas xchg (bad) jge jb imul xchg lret add and ficom fistpll lret pop jrcxz (bad) mov addr32 or xchg xchg movslq (bad) (bad) mov add scas sbb fwait jl sbb retq add mov (bad) mov (bad) (bad) decb (bad) mov push jae adc cs xchg movabs lock js sarl cmp add lret or cltd pop jle add mov push xchg mov adc sarb adc (bad) out int3 nop jl rex.RB mov add lock rex.X rex.RXB data16 pop jrcxz cwtl and ss in in out cltd pop add jno mov add (bad) or or (bad) retq callq outsb (bad) stc fucomip sti or rex.RX repnz (bad) mov xor rex add jmp mov pop (bad) push stos push (bad) movabs (bad) add sbb ror insl jb cli out rex.WB repnz push incl cltd rex.RXB roll pushw mov cmc callq pop adc sub js std pushq es adc cli movslq out loopne push jle mov cmp rex.WX mov jb loop cmp (bad) fwait push add jne xchg and movsl (bad) fs sub jae rex.WX add (bad) add or (bad) pop gs (bad) rex.RXB mov fwait pop mov bnd adc imul jmpq cmc (bad) add (bad) rex.X pushq popfq adc sbb fstpt fs mov and out lea rcrb add stos psrlw add (bad) rex.W cmp jmpq test lahf cmpl fdivr rex.WXB addr32 mov insl or xchg leaveq add add rex.RB (bad) outsb sub sub adc sbb pop std sbb xchg lret jno mov rcrb out out (bad) add xchg xchg rex.RX movsb imul adc (bad) mov cs and pop mov xlat and (bad) adc add push movabs sbb add leaveq negl xchg push mov fisttpll jg ds loop jmpq mov adc ja lret and mov mov es scas scas (bad) idiv nop xchg lahf jae popfq (bad) and pop (bad) xor (bad) pushq (bad) jle rex.XB jg xlat insl xchg pushq (bad) and sub xor jae (bad) mulb and outsl jb xchg jbe out or fildl pop movsb loopne ja jg insb movabs sahf loop pop (bad) cltd jp xor jo or sahf jbe xlat clc or push fs xor or nop jmpq xchg or (bad) pop lods rorb jae hlt sub int3 in leaveq push lods xor scas addl imul sub mov loop test insb fimull rex.X or fbld roll imul xor out sub test jmpq sub sarl (bad) mov (bad) jp push in pushfq mov movabs int add popfq mov lock rex.WXB mov add sahf movb sbb mov rex.R jp or lods nop or mov adc sbb fcompl int xchg (bad) or push fidivrl add jbe adc (bad) mov xchg (bad) mov mov pushq and add (bad) pop jl shr xchg in (bad) je movabs nop add xchg int add adc and xchg add out xlat jmpq add lret xor add (bad) ds rex.R mov jno mov or sbb outsb xlat mov callq in scas (bad) insl pop stos adc xor pop pushfq outsb rep (bad) (bad) add mov cs cs (bad) ds adc or fsubrs and jle mov rex.X rex.WRX mov in subb outsb insl je pop cmp cmp movsb movabs lods cld lods lret adc (bad) rex.WRXB pop or pushfq lods pop mov stc scas imul mov sbbb test ds callq rcrl pop (bad) pop jg sarb add cmp xchg (bad) fs cs out repnz cld rex.RXB cmc in (bad) adc shrb fldt xchg sub push fbstp or jg incb repz insl adc int3 xchg fistp and jnp xchg rolb mov movabs jle jge cmpsl imul pushq int mov fist (bad) adc mov mov and rex.B sbb xchg jrcxz xchg (bad) jle (bad) or push retq mov lods movsl rex.WRXB mov outsb push icebp cld fmuls movabs rex.RXB mov xchg (bad) jb push outsb shlb repz loopne adc xchg xor pop or clc (bad) rorb leaveq jnp out adc xchg outsl fildl outsl xchg mov hlt add fidiv (bad) jnp add rex.RX jmpq fsubl (bad) int pushq jg sahf ljmp jo enterq lods rex.W rex.WB test ds idivl movsl cmpsb fsub repnz repz or movabs cmp rex.WR xchg jrcxz xchg test jo (bad) jbe bnd mov cmp loop pop adc jl callq add or pushq mov jmp movabs jbe and adc out jae insb push rex.WRXB retq fscale rex.RX frstor sbb (bad) pop std (bad) and mov mov mov xlat jns adc loope mov lods fidivrl jae fimul (bad) callq pop (bad) test jae iret (bad) jle fildll (bad) rex.WXB pop inc je and (bad) mov mov or clc fs pop add pop ja (bad) fidivr rex.WR mov jp fs jae sbb mov rex.B sub rex.WXB add jle xlat rex.WRXB (bad) out jbe add or jno cmpsb jle loope rex.RXB movabs movsl and lods fwait (bad) add adcb sar pop add adc loopne pop int3 (bad) cs (bad) or imul out rex.WR xchg sahf sub mov mov pop add cmpsl retq jrcxz add or xchg (bad) jo cli outsb sbb pushq (bad) mov (bad) pop rex.WRX add xchg out psrld cwtl fsincos movb xor fidivr and jle push jns,pt cmc out (bad) imul hlt or rex.WR mov fiadd rex.X (bad) jle and pop mov jle retq mov jnp xor (bad) add or push in (bad) fdivrl (bad) mov movslq mov mov jmp (bad) sub or mov jae rex.R and (bad) fwait (bad) (bad) jp add push cmc sbb and rex.WRX fldl (bad) retq add (bad) lods pop pop push mov vmovdqa xor sub xor push pop outsl stos pop add js rex.WRX sbb outsl jae rex.WRXB pop jp push icebp xchg (bad) adc and test mov push add cmp jns rex.WXB cmp and sub (bad) movabs lret xchg (bad) je sub sbb sbb rex.WRXB jbe rex.WX imul and add add decl lods jg (bad) cwtl retq or mov xor sbb push (bad) test xchg mov (bad) mov add xorl fistpl imul mov fistl cmp pop lods mov movabs nop mov cmc callq negb ss mov std jle (bad) sbb (bad) (bad) out cmp icebp es nop scas fwait sub repz (bad) movsb add add mov outsb add sbb (bad) (bad) popfq push mov repz add cld es push cmp add test in fdivrs je rex.WRX rcr (bad) add data16 rex.WX std adc add (bad) or xchg cmp sub add (bad) mov mov in add or rorl pushq mov (bad) add mov shrl pushfq stos mov or jge sub loopne mov (bad) jb jns rex.RX and icebp mov add and jl (bad) rex.WRXB add pop rcll in cmp jnp std fadd (bad) xor repz jle or js,pn sbb xorl test and add (bad) (bad) loopne lret add adc sub (bad) (bad) (bad) or lret add fadds iret shl xchg xor xor jp scas movabs (bad) push je loope mov cwtl rex.WRXB insb sub jb pop ja leaveq (bad) jl mov mov mov mov lahf jb sub jge rorb cmp or (bad) out test add mov or lea stos xchg rorl rcrb fs js (bad) shr cmp (bad) insb cmp repz (bad) sarl mov mov jne fild lods jp push imul lods loope (bad) sbb cli (bad) fisubr push ds fidivrl (bad) jg jmpq lods (bad) mov subb sub push enterq nop std out jo movsl fistl insl retq pushfq jg push and and sbb push pushq repnz jp mov (bad) (bad) mov sbb and xchg in cmp (bad) pop movabs leaveq hlt je cwtl scas outsl pop lods repnz insl (bad) movabs in xchg hlt push pushq (bad) shrl (bad) or mov sub push mov subl xchg xor (bad) rex.WX icebp and in movsb (bad) test lods add fcmovnb es jo imul mov adc mov ja rex.WXB js adc mov add jl js,pt jge jp std xchg xchg mov (bad) rex.B imul and or bnd in jp mov je jbe push retq jmpq push pushq jge pop (bad) outsb sub enterq rex.RB in jle lcall int hlt mov sub xor lahf insl xchg xor jge jbe cmp add nop (bad) xchg jno rex.XB and push in sti lcall or rex mov (bad) rex xlat stos cmp stos leaveq movabs lea sti fistp jbe enterq stc xor in cmp sub stos loop cmp fsubrl rex.WRXB xchg mov sub (bad) sbb nop mov lahf jge rex.WRB or fwait in cmp add pop rex.XB rex.WRXB fistpll pop ds pop scas (bad) cmp in add (bad) jle (bad) (bad) jle repnz pop add cltd (bad) add (bad) rex.WRX pop test add lret and adc sarb sbb rcl add cwtl (bad) and lods icebp js add cltd push andl (bad) lahf jno xor hlt add mov (bad) outsb std fdivl enterq (bad) mov sarl adc lret add mov (bad) cmp add out sub or cmpsb movabs (bad) (bad) cmp rex.X xchg hlt fmull add (bad) rex sti sbb out add or pushq cmc add fisttp int3 jle add rex.RXB mov nop or cld add es mov (bad) imul mov and hlt cmp out cmp fs or xor push imul lods and (bad) rex.X and mov add add add scas lea fidivrl cmp (bad) or mov ds (bad) mov add sarl mov test jp test ds lock mov push add gs fwait out push jp (bad) pushq cli mov or sub loopne rex.WRX (bad) add sbb cmp jg (bad) popq lret stc (bad) push (bad) xchg rorl movl xchg mov mov push rex.WRB jnp sub rex.XB mov sbb mov leaveq pop outsl jne (bad) mov xchg and jle and stos xor data16 js imul cli out xchg popfq pop incb and (bad) (bad) jnp jge and sti sarl in xlat xchg cmc jae sub cmpl lret movsl mov pop test sbb xchg cmp rex.RB push lods pop mov (bad) sbb std mov add (bad) add rex.WRX sbb adc sbb add pushq rcrb int and rex.WRX test add enterq movslq cmpsl jg cmc jrcxz mov add jge insb fldl xchg xchg pushq mov jne fwait sarb cmc mov imul pop rex.B add sbb jrcxz pop mov repnz sub cld adc js retq lods movsb fsubl sub sbb xchg xor movabs jne jmpq push fadds (bad) (bad) callq test ficomp mov add test sbb leaveq clc pop fisubl imul scas icebp decb push incb cmc pop (bad) leaveq push (bad) rex.WB repz shll (bad) mov popfq mov jo and xchg js in pushq test (bad) (bad) push in insb rex.X (bad) xchg test (bad) sub (bad) rex.WRX push pop fcoms jle jl in jae movabs cmpsb jg xor shll pop mov (bad) movabs cli (bad) xchg xor jle js rex.WR movb mov xlat movsl mov mov test rex.RXB (bad) rex.W movabs outsl mov xchg outsb movabs sbb lahf mov retq leaveq mov sahf fcomps xlat adc rex.WXB ja lret mov jge rex.XB lock mov imul or xchg and adc and and gs out xchg lock in fld std mov out cmp pop sbbl int lret (bad) fucomi rex.WRB (bad) (bad) jo (bad) jl pushq add xchg icebp rex.RX sub mov movsl mov cs cvtpi2ps mov retq pushq rex.WR pushq mov xchg and push movabs pop xchg jne pop sarb rex.RX fstps loopne fcoml cmp (bad) jo adc jnp jb sbb jbe jle (bad) cltd xchg pop cmpb mov lahf pop xchg fs push int3 jbe pushfq and fwait cmp repz add rex.XB push (bad) callq fs outsb mov fsts xchg movsb (bad) pop lret test stos (bad) loope (bad) mov adc xchg jl stc mov fstpt lods cltd mov fmul insl ja out adc movslq or adcb and pushfq lret sahf retq jne lods je sub (bad) mov (bad) loop sbb adc test insb or fwait and js jrcxz rex.WRB (bad) adc mov (bad) fmulp not sbbl xor iret xchg nop pop rex.WRXB rex.XB mov xor jbe pop imulb (bad) pop and adc sti mov outsb data16 shrl (bad) xchg test or in (bad) cmp jb test pop retq sub jo lahf idivb jle xchg xor rex.WXB jo xor (bad) leaveq xchg movabs clc fild (bad) xchg (bad) insb or rex.RB rex.WX sti xchg fsubrs shlb mov in fldenv jrcxz decb std sbb (bad) jge rex.WRXB xor imul rex.WRB cli negl test mov in sub pop (bad) jns lock (bad) test fwait int3 lock rex nop pop movslq insb (bad) repz je cli iret lods xchg rex.RX andb push out mov insb xchg or (bad) mov ja (bad) and lahf (bad) pop rcrl lock (bad) rcrb imul mov jbe insl or scas jp jl repz rex ss cmp jno adc (bad) addr32 cwtl jp and outsl cmpsl adc insl repnz pushfq jg loopne adc and add lock mov iret cmp (bad) movabs xor loopne mov scas pop and adc fsubl lret scas cmp insb xchg iret push cltd (bad) pop stc jp jbe movslq and adc adc rcr rex.RB rex.WR jo fnstenv mov add sub or add jl jno push repz or enterq cmpsl js and rex.R or pop idivl jno lods int (bad) cmp lea xchg jmpq pop fbstp sbb (bad) (bad) push rex sub and leaveq out clc push icebp (bad) pop testl enterq add movsb (bad) loop repz push gs jl movslq jle pushfq pop lea jbe (bad) sub (bad) cli rex.WRB or mov movslq shll ja pop clc sbb cld add cli jg (bad) mov fs add pop sbb sub (bad) (bad) jp mov mov rex.WB push out mov in (bad) out mov outsl push sti add int3 and stc movabs push and cmp shll pop jb rex.WXB scas or push add rex.RXB mov or rex.W retq add and xchg or rex.WRXB sub mov (bad) (bad) sbbl addr32 stos and shrb mov popfq jg mov jrcxz jb add int cmp xchg cmp pavgw mov rex.RB jle popfq (bad) jrcxz and fisttpl jb stos pop sbb fidivrl rex.RXB loop faddl movslq sub mov lahf test jp sbb test ss mov addr32 jo xchg xor pushq push (bad) jl cmpsb test push and mov iret movslq pop sub xor jl retq jl pop movslq cld sahf pop jge rex.WRB xchg (bad) imul (bad) mov (bad) shrb push out add add mov sub or clc cmc mov push imulb movabs jb outsb pop adc fimul (bad) jno (bad) (bad) rex.XB retq popfq push (bad) jb (bad) (bad) insl mov add push xchg (bad) jae mov (bad) pop testb test clc lea repz test repnz rex.WRXB out add (bad) js xchg rex.WXB cmpsl stos pop (bad) xchg idivb rex.B add mov adc pushq (bad) pop loope sarb and (bad) rex.X push fs pop sub out imul pop jg gs out (bad) nop fild movb pushq rex mov lock add xchg rep add push movslq and js (bad) adc (bad) jg mov xchg jl or (bad) stos je lret jmpq cmp sub mov cmpsb (bad) and push sti movslq (bad) push xor retq imul in or mov or shrl rex.WXB rex.RXB jrcxz sub cmpsl insl lret mov movabs pop lods cmc fwait repz lahf adc push (bad) (bad) (bad) iret lods sub (bad) js jns pushfq adc mov jo adc lods pop adc movsl (bad) adc rex.WXB add add mov sub adc add (bad) (bad) test cli mov (bad) repz movabs jg in xor lahf (bad) out loope (bad) cmpl cmc fiaddl add loop (bad) ss or xorl xchg or pop hlt push cmp (bad) (bad) (bad) add and (bad) add test je enterq sbb sbb iret or in xor scas (bad) mov movabs xor ss pop movabs sbb (bad) jp xor iret jrcxz add adc pop or movsl xchg add rex.XB pop adcl xchg cmp and adc jg lods sbb mov add sbb jbe or (bad) movabs push jl mov imul (bad) loop add pop mov pushfq cmp cmovnp imul mov (bad) stos (bad) jg mov push sub xor (bad) lret (bad) sbb repz movslq imul jae rorl rex (bad) rex.WX jb sbb and outsb movabs mov xor movabs imul push outsb imul pop pop icebp mov jae push pushfq and in fdivr cli xor cmp cmc jne addb (bad) xchg lahf cld xchg (bad) rex.W jrcxz retq pop rex.WRB rex.RX movsb jbe addl scas jle sbb testb jno and sbb or (bad) movabs jnp (bad) jbe es jo out fbstp (bad) push (bad) fwait lock out fs stos pop or sbbb cmc add adc (bad) out out jrcxz stos out outsb lods (bad) and (bad) xchg (bad) data16 mov leaveq mov (bad) fnsave (bad) mov sbb cld cltd add mov iret mov mov insb sti pushq (bad) (bad) cmc in outsb (bad) or push and orl add adc fisubr retq mov or es xchg (bad) jge adc jb imul (bad) clc mov push jb (bad) jl (bad) (bad) lret callq sarl jl or movabs iret mov xchg xchg out enterq in imul sbb es push mov push jg test push pushq rex.WX jmpq pushq xchg insb mov and out add nop movabs in shll scas movabs rex.WRXB scas sub cmp xchg in xlat rex (bad) xor sbbl (bad) js xor rex.WX (bad) (bad) (bad) and push in fs pop out hlt pop loope or jge addr32 nop rcrl cs ja add mov cli mov xchg mov retq cmp lods jae jle mov xor push insl xor xor jae xor movabs cwtl and mov xchg adc mov sub (bad) xlat repnz pop (bad) retq out rex imul (bad) xor scas lods sub out (bad) rex.WR (bad) (bad) sar movsl (bad) pop adc insl pop jg jg std jo and rex.WRXB ss sub (bad) (bad) (bad) jae (bad) (bad) js xchg adc mov add leaveq add (bad) rex.WB mov outsl and cltd (bad) mov (bad) add stos adc movabs rex.X flds rex.WRB rex.WXB jae xor lret mov movslq in loope pop movabs fildll jle sbb lods jp insb jle ss js jrcxz rex.WR out xor repnz cmpsl fldcw cmp shlb rex.XB cmpsb (bad) sahf movslq (bad) hlt movsb shlb rex.WRB jp (bad) mov enterq sbb add rex.XB std add mov mov add out mov cmp or or jg rex.B jns adc lods rex.RXB xchg (bad) pop jg test cli xchg or xor rex.RX cmc cmp test hlt add out (bad) (bad) cmp pushq cmp adc pop je fmuls insb add sahf push fucomp stos sbb (bad) rex.W gs sbb add add jrcxz push pop (bad) jae pushfq rex.WRXB mov (bad) in jg sbb push movabs loopne pop mov (bad) cwtl or fbstp push insb add rex.WB nop decl jrcxz (bad) jp cmp xchg or add rex.WR pop adc jae rex.WB rex.W jp xchg add hlt (bad) je lea insb mov (bad) xor int add icebp outsb xchg fdivrl lret xor (bad) jae rex.WR jrcxz (bad) stos (bad) rex.RB repz mov cmpxchg jo xor data16 sbb and mov add jl push add fdivl fisubl sub xor (bad) (bad) add jo outsb sub stos add lods jl add (bad) ss mov rolb add cmp rex.WRB je,pn stos add sbb pop xor add lods and sahf cmp nop pushfq (bad) sub jle (bad) stos mov retq (bad) jg jb fwait xchg sub xor jbe movabs sti lret movsb lcall movsl push insb add jg (bad) add xor pushq rex.WB lret pop and add out test cmp add mov (bad) sbb (bad) movabs or mov xchg add sbb and movabs sets sbb fadds negl add movabs add sbb xchg retq sub (bad) pop (bad) or xchg movabs out add cli jge push movsl je or ja add cli out subl (bad) pushq and (bad) add pushq mov andl push cld add in movabs in jp js xchg sbb (bad) cld out gs mov callq jne rex.RXB (bad) movabs in (bad) (bad) add (bad) int3 (bad) xlat pop enterq fimul sub cmp mov roll nop sbb xor data16 rex.WXB je mov xor imul or sbb xchg mov jp cmp fidivr imul sbb adc xlat add lahf (bad) mov cwtl f2xm1 incl roll mov xchg rorb outsl sarl je int3 (bad) rex.WRB test rcll xchg (bad) add pop jb pushq (bad) xchg add sub push add push xor (bad) pop sub xchg mov (bad) or jl gs add pop mov in xor je (bad) sbb incl out fisub rex.RX repnz push add mov jle test and jne cld xchg (bad) ja cmp cmp cmpsb fwait jg imul rex.WB mov (bad) (bad) fistpll jae sub pushq rex.WB jns cmp cmpsb xchg addl or outsl jg (bad) sub xlat fild movslq mov mov jl add mov in rex.RXB fmuls and popfq mov jno mov rex.WR jnp ja out rolb incl (bad) nop mov xchg lods add ficoml push mov adc insl in add outsl stc test retq stos or sub (bad) cwtl add lahf lret je cmpb xor mov adc in scas adc (bad) out fwait sti push mov orl je (bad) imul jbe (bad) loope int adc rolb jle pop sbb rex.RXB gs sbb pop test (bad) jb rex.WRX jae rex.WB rex.RXB rex.RX jmpq fmuls push test out cmp cmp xchg jp rex.X and push xchg sahf je cmp mov sbb cmpsl outsb mov jbe (bad) or add mov and ja mov add or (bad) (bad) rex.RX pop xchg sbb (bad) rex adc cltd add sub pop and sub add xchg mov sahf (bad) lret loope cmp mov mov (bad) lock rex.WXB add (bad) xor mov rex.W rex.WRXB or and (bad) scas in ds jg movabs add pop fidivl mov and rex.X insb (bad) fdivrl add (bad) fs out push xor int xor push jrcxz rex.WXB (bad) icebp (bad) jnp xchg popfq or pop jge xchg (bad) std mov push test repnz add (bad) sar (bad) clc lahf out mov adc rex.WR scas out xchg add add mov jge sbb sahf sbb xor (bad) xchg add and movabs mov enterq js pushq pop hlt jo (bad) add jle rex.RXB xor fs mov stc jle (bad) stc pushq sbb rex.WR sbb xchg jl rex.W rex.WXB mov (bad) fsub pushq push (bad) lock fbld mov nop popfq jp outsb outsb int (bad) shl xchg mov jae pop xor insb hlt xchg add int cmpsl cmc (bad) jg push je or ss xchg and pushfq stos out mov retq cltd movsb (bad) and jb push movabs (bad) mov cmp movsb fs (bad) in not sbb test icebp add cs sbb out loop jg cmp test fiadd test jnp cwtl add rex.WX add (bad) je (bad) xor out (bad) xchg add mov fldt pop cmc lods pop out add je push (bad) scas imul jb (bad) jno rex.RXB mov sti (bad) rex.WX repnz mov movabs sub decb (bad) add and pushq cmp ljmp push in xchg stos nop rex.W mov xchg xor jl xchg cmp lods (bad) (bad) out (bad) movsb add hlt add sub cmpl xchg ja mov rex.RB (bad) stos mov add jle in jle andl add and adc xorl mov jl add leaveq cmp (bad) imul (bad) loopne rex rex.XB pushq kmovw (bad) xor pop sbb mov mov out (bad) mov popfq rex xchg xchg push iret in add cmp in xor rcrb (bad) nop push outsl movabs roll xchg adcb mov leaveq (bad) and sahf pop outsb fwait add rorl mov insb cmp sbb popfq or rex.WRX mov and or lret pop insb add (bad) sbb mov or mov movslq add lea push add mov jo mov mov stc sbb pushq popfq imul add xchg lret add xorl add loopne xor lods jp movabs cltd cmp insb mov jmpq sbb mov mov xor add (bad) (bad) xor xor jo jb or outsl and (bad) scas mov (bad) jg addr32 out bnd xchg cmp out jb rex.R (bad) xchg rex.RX and nop jb add mov xchg adc and movabs adc mov stc mov shlb xor jbe or xchg rex.X mov jle add jmpq mov ss sbb jg popfq xchg add or jrcxz jb sub nop in pop (bad) jp sub adc jg outsl add rex.WRB mov or add test add std pop (bad) cmp xor xor test in mov mov jle (bad) int sarl sbb (bad) add sbb add adc jge rex.WX andb (bad) rex.WRXB xchg rex.X jns lret mov xor mov rex.RX push cli adc jle add and (bad) or movsb add sub std fidivrl and sbb pop push ss add enterq (bad) mov mov (bad) add icebp ss lea or cli fistl int rex.RX notb adc adc add ss xchg in pop add iret outsl add add leaveq jno scas mov cltd add rex.RXB repz rex.RB ficomp movabs pushfq fadds mov lea and pop (bad) shrb lock add add jmp movabs clc (bad) (bad) int3 outsb jp leaveq rex.XB rex.WRXB xchg cmp jp retq adc xor xchg js (bad) add push loop add push rex.RB rex.WRX divl (bad) rex.X addl stc mov rex.R and out test cmpsl xchg jp push jae sbb shrd out mov nop fsubrl sahf cltd fidiv (bad) not sarl fistpll jle stc (bad) xchg add cmp add (bad) or add nop rex.WB out (bad) mov jo cmp push cmpsl or mov insb add sub outsl add (bad) or (bad) rex.RX sub (bad) in ja and callq cmp xchg rex.RXB cmp (bad) loop push pop jl (bad) (bad) in imul in callq sbb jl test rex.RXB (bad) mov (bad) (bad) cmp jg stos stc cli pop movsl fcoml insl adc mov push fistp xor mov in xchg scas mov push fmuls and rex pop ja rex.RX fs xchg rex.X fnsave xchg lock mov (bad) (bad) movq ds add movsb jnp (bad) sbb mov test movabs jl pushq xchg fiaddl mov rex.WX or mov movabs pop xor rex.W rex.RB (bad) jnp pushq (bad) xor rcrb lret sub movabs in imul push in pushq pushq jle rex.WR rex.WRX fiaddl repz cmp ficom cmp sub or popfq es sub mov add add and sbb mov sbb xlat repnz jne out sbb and xor adc nop ljmp add cmp rex.WR andb out sub data16 (bad) jns sahf mov rex.WXB enterq out pushq cltd push sbb xchg retq je notl lock push jne add push and rorl int add fnstenv mov js rex.WB pop add rex.RX rex.X sarl xor rex.RX rex.W (bad) jmp or add jbe sub pop add adc mov clc movabs add (bad) cmp xchg movabs (bad) jnp mov sti scas ficomp pop test (bad) rex.WX mov leaveq decb (bad) and (bad) mov adc ds jb mov mov js sbb test shll fcmove push push outsl mov movsl add stos mov and rex.R adc (bad) rex.R lods iret add add pop (bad) mov (bad) mov icebp cs popfq js mov (bad) in jo add sahf addr32 js jae add rex.WRXB pop or rex.RX xchg mov (bad) or add sti (bad) add (bad) and push jbe pushq jnp imul (bad) lret add (bad) xor movabs callq (bad) jge add jae (bad) (bad) icebp mov jle push stos divl shrl mov (bad) enterq jg add leaveq add add cmp push adc xchg out jge sub leaveq add jne sub mov shr mov add sbb sub pop hlt mov add (bad) (bad) in movslq (bad) mov xor cli or xorb jb jnp lods std (bad) adc andl xchg or xor sbb mov js (bad) popfq notl mov nop (bad) mov add shr jle sub (bad) mov testl and pop jnp jp loopne sbb mov and scas add mov (bad) stc test jl (bad) pop lods adc (bad) mov (bad) (bad) fimull icebp (bad) outsb jg or in icebp (bad) mov mov rcl add sub mov xchg pop fs sar test pushfq sbb xchg stos push mov pop data16 rex.RX cltd movslq adc (bad) (bad) pop cmp mov out (bad) addr32 pop jbe sub push fbld xor sub pop mov add pushfq jge test test rex.WXB mov insb fsub jae mov lods mov (bad) movabs faddl add add mov ljmp js ss cltd adc xchg (bad) mov movabs (bad) (bad) loopne add sarb rep xor out jne mul (bad) add repnz mov adc xor mov xor rex.RX (bad) (bad) xchg (bad) push rex.WRB repnz mov fildll outsb repnz xchg xchg mov pushq insl subl (bad) and lock push test movsl negb add movsb retq cmp js xchg sub jbe test adc xlat (bad) sub push mov (bad) (bad) add insl mov rex rex.WRB jo jnp adc test mov test (bad) movslq subb out pop rolb (bad) pop xor or pop stos leaveq (bad) push cwtl pop cmpsl cmp insb jae retq (bad) xchg and and je rex.WB (bad) jmpq leaveq lea in mov or (bad) callq je pop and add mov (bad) (bad) sub retq int3 fisttp jle jrcxz adc (bad) sub adc (bad) sbb pop mov jl add and and mov nop stos fwait mov (bad) data16 je stos (bad) sub fistl sbb jl je mov andl jne fbstp rex.WB pop insb faddl lret jle int fnstsw sbb (bad) scas jne fistp (bad) (bad) or (bad) movabs rex.WXB jnp pushq loop ficoml int3 data16 mov insb and cmp add cld mov add add cmp xchg (bad) xchg jl (bad) and sub adc out lea (bad) retq cmp outsl mov rex.RX mov mov mov js lahf pop (bad) pop scas cmp mov jrcxz mov push shll xchg pop insl callq nop sub addr32 rex.WRB sbb sub lea (bad) pop xchg jg or jb rex jle and pop out add outsb mov rex.R ja cmp xor (bad) (bad) xor cld (bad) (bad) outsl (bad) leaveq sub retq loope xor sub cmp sub xlat cmp push (bad) leaveq and stos repz cmc xor (bad) rex.X (bad) in mov mov (bad) mov movslq add and movsb cwtl stos xor (bad) jno (bad) pushfq scas xor loope (bad) rex.WB cld mov pop jmp scas pushq jne sahf decb stc scas jge mov rcrl out xchg (bad) jmpq xchg es lock adc jmp jl lods movsb rex.X test pop mov mov xlat jge es icebp movslq lret cmpsl pop hlt movabs mov adc pop sub imulb ja pop rex.XB sub sub or (bad) imul push outsb push std movabs int (bad) stos lods xchg jg ja hlt (bad) or (bad) fnsave repz mov xor wrmsr divl insb rex.WRX rcrb (bad) adc or add xchg test push movabs es fwait movabs retq jns stos mov incl shlb out std add push imul (bad) mov out jb sbb pop (bad) or jne or mov push add push test add roll xor (bad) sbb mov jl data16 movsl and fsubrl outsb repz cmp rex.RX cmpsl movabs lea (bad) sahf jne rex.XB add js shr out scas fild movsl pushq (bad) add mov (bad) (bad) add jge retq mov callq pushq outsl sbb push (bad) sub (bad) rex.WR (bad) movabs cmc clc lea pop (bad) rex.W stos rcll xchg push cmc pop (bad) fs inc movabs data16 add leaveq movsb mov xor rex.WR fnstenv fimul in or retq mov in (bad) jp jb pop add lods (bad) es loopne jle or mov (bad) rex.X stc sarb std add js (bad) or or rcrb mov ds test pop jp add fildl fs lret add jo xchg cld adc leaveq mov (bad) add stos xlat shr (bad) jae jp rex.X xrelease test sbb lret in xchg movabs je and pop mov js fs mulb movabs add fisub cmpsb sbb add popfq outsl add int mov out mov insl add cmp sub shrl int jle and insb (bad) retq cmp mov xor (bad) sub rex.WB rex.WX mov (bad) outsl mov jle xchg xor test movabs pop stc lods mov or adc in (bad) nop (bad) push stc mov movabs add or rcrl and (bad) imul leaveq repz imul jae (bad) loop mov rex.WRX stos jmpq (bad) or jrcxz mov xor fldenv add mov mov repz lock (bad) (bad) push (bad) mov pop (bad) add xor in add jmp jg test test es jb jp (bad) mov lods add pop stos out sub adc (bad) pop xor test (bad) fildll jo lret (bad) test cmp or jns addr32 (bad) rex.WB push xor sbb insb add mov rex.WR xor and push in lret test scas rcr mov insb outsl (bad) (bad) mov pop push or cmp xchg pop jl jrcxz (bad) (bad) (bad) stc xor add xlat repnz xor nop (bad) add movslq (bad) test xchg jb lret ja (bad) mov add (bad) rex.X adc nop rex.RX vmovd out mov out outsb jb jb out (bad) ja (bad) (bad) fisttpll jrcxz jns xchg xor neg jle lock (bad) mov movabs out movabs (bad) mov mov jb fisubl leaveq mov sbb (bad) push sbb jle xor xchg xor insb jne jl xchg fsubl cld test and (bad) addr32 rex adc xor add adc push add and add test enterq shrb sarb (bad) add ja (bad) lret add mov decb pushq (bad) (bad) add fisubr in fbstp mov (bad) mov (bad) (bad) lret add repnz sti mov xabort mov (bad) (bad) pop jl jle std or mov (bad) mov int (bad) push jg pop sub mov lods movabs jle subl out (bad) jp add mov add lret sub add xchg mov rex.WXB xor sub rex or push shr stc (bad) idivl imul (bad) lahf rex.WRXB adc mov fldlg2 (bad) push rex.WXB (bad) (bad) data16 pushfq test nop sbb rex.XB mov push jp rex.WRXB mov gs jbe and in retq mov push add sbb cmp fwait insl mov (bad) xor jg (bad) jae stos add (bad) jg addl add mov loope orl cmp and sbb data16 lret mov xchg cmp callq (bad) push stos jl cmp (bad) (bad) (bad) pop rex.R (bad) xchg rex.WRX jb (bad) scas scas rex.XB ss pop shll nop add add rex.WRX cli mov lahf add or repz ja popfq jl cmpsb in xor xor or and jne rclb and xchg ss sbb jns ds decb mov add repnz jle (bad) xchg out imul mov add mov pop jbe sub fcomps movabs (bad) cs clc sbb pop popfq repnz adc (bad) nop movabs sbb mov or (bad) rex.WR jg in rex nop movsb or add ss sbb addr32 jmp int3 rex.X scas callq xchg shrl jne or stc cli or add in cmpsl (bad) mov lock (bad) xchg rex.WRXB mov out (bad) cmp jmp jg sub fisttpl (bad) jb movabs fs jae (bad) (bad) sub nop andl or pop (bad) xchg adcb rex.WB js sub (bad) adc cmp insb pop outsb and mov xchg (bad) xchg pop jg (bad) pop repz (bad) adc shll (bad) je rex.B lret xor insb add lock add data16 (bad) mov punpckldq mov pop or mov iret rex.RXB mov std sub rex.RX int jg or (bad) mov xor sbb xor add rorl callq jle movsb sahf mov mov sub jg sub sub jg test or rex.WRB jp cli (bad) xor rex.WRXB (bad) movabs (bad) adc xchg jle pushq sbb lods movsb jrcxz stos jbe jno add and (bad) lods (bad) in fsub mov (bad) (bad) stos ficom (bad) mov or cwtl sahf js rex.WXB pop mov add (bad) fs or pcmpeqb sahf insb (bad) rex.W xlat xor test xor cld (bad) and mov and jge pop movabs rex.WR mov and pop adc out adc (bad) or (bad) ficomp sti xor or cmpsl (bad) sub cmpsb and push jg (bad) jns and jo sub loopne popfq (bad) ja insl mov jg out imul outsb pop fimul xor add lahf jrcxz test std sbb sub stc (bad) sbb fldcw pop jmp imul rex.WXB jo mov xchg icebp imul outsl insb (bad) jle lock rex.X sbbb mov fsubs and je pop out pushq jb mov xchg adc imul icebp out insl pop lock (bad) adc (bad) jl jg (bad) and add movslq mov or xlat or adc (bad) pop mov sahf jmp insl sub jbe (bad) push and mov repz xor (bad) xchg imul repz jmpq (bad) cmp xor outsb xor test rex.B (bad) sahf addb push jnp movabs fisttpl outsl ficoml jge,pn mov jb jns rex.WRX mov rex.WRXB (bad) (bad) (bad) (bad) out (bad) outsl xchg jge imulb in cld js mov neg rex.WRX retq stc (bad) pushq hlt movabs mov xchg lret sbb retq (bad) stc jg push push xor push add add movabs rex.WXB mov cmp lret cmp add out out jg pop (bad) rex.WRB mov stc and sub data16 add std mov outsb fs stos je jo sub fldcw lods mov (bad) mov rex.WX (bad) mov outsl cmpsb (bad) pop cltd negb (bad) (bad) jo ror lock (bad) mov and test or push push enterq xor xorb jp adc (bad) pop mov jb or ja sub cltd pop (bad) out movabs scas scas (bad) mov sub mov add xor jg (bad) push (bad) mov pop lock fs rex.RX (bad) xchg mov in sbb and (bad) insl (bad) pop jl add mov jne cmp std rex.B insb js ss int mov mov insl (bad) or and jne sahf pop int jl retq in jb jl adc mov rex.WB cmp stc jb and es rex pushfq loop or lods (bad) adc pop mov cmc (bad) jge pop pop push push xchg pushq adc retq leaveq outsb cmp sub (bad) cmc insl stos mov mov js xorl divl adc cltd enterq cmpsb movabs rex.WXB movslq rex.WX pushq pushq adc cmp lods shrl movabs xor std outsl fwait (bad) xchg add xchg fdivrs xor sub jmpq jbe jne (bad) fdivp retq (bad) je shrl xchg jle push subl leaveq mov jrcxz sbb sub or clc xchg add cmp (bad) jbe mov mov mov mov stos mov lea or (bad) stc cmp sbb jle test sti push mov cli scas cmp jg adc jne movsl insb add xor jmp imul es rex.WRX enterq add cld stc mov add mov test (bad) stos (bad) ds std fs mov rex.WB fs rex.RXB (bad) callq cmp stos or xchg mov jl pushfq mov jp icebp sub retq pop add sub imul mov adc mov (bad) add rex.R js (bad) pop add pop or mov (bad) add out fsub sub add jmp mov mov or mov pop in movb rex.WRX (bad) fwait sbb push add lods sti mov movabs xchg sbb movsb mov popfq mov xor lods (bad) lahf (bad) mov ss retq xor xchg movsl incl leaveq movabs js int frstor pushfq add imul add jg (bad) fwait mov mov js in and xchg (bad) popfq cltd pushq or cmpb jrcxz add xchg mov xor add push lahf (bad) data16 adc movabs int3 rex.RX clc movsl in add mov pop (bad) lahf add pop add (bad) (bad) sti add sarb (bad) (bad) push pushfq movabs (bad) sub jg xchg repnz icebp sbb rex.WRXB add nop ss add rcrb add and in push fwait mov pop xchg cmp (bad) sub callq std test add xchg fisubr iret jrcxz sub xor add rex.WRXB xor cmp lret stos push ss sub pop (bad) jmp movabs movb int mov out popfq add mov lods decl mov jno rex.RX jp mov sbb sub jae mov (bad) mov cmc (bad) fs (bad) fsubrl movslq fs sbb push add rex.XB jl jp and xchg jb data16 js movsb adc adc lret in jmpq add add and and es mov or ja fwait sbb test rex.WR callq sarl fstpl outsl rclb rex.XB mov imul ja stos pop cmc xor cli jp enterq mov retq lret jae jb ss rex.WRXB stos adc nop rex.W mov mov (bad) fs sbb outsb (bad) scas pop sbbl loope jo retq sub (bad) jne (bad) stos (bad) xchg test movsb xchg (bad) (bad) cwtl jmp in repnz rex.WRXB sub (bad) (bad) jne (bad) (bad) divl mov and adc push fs mov sub sbb scas cld retq and jnp (bad) mov xor rex.WRX pop (bad) movslq fildll movsb jns jb jo (bad) jge cmp jbe rex.XB mov sbb jl test mov cmp (bad) rex.RB add movabs retq mov fwait and scas (bad) imul imul fdivrs cmp xor sarl adc (bad) xor pop scas jmp retq mov add fisttpll jns xchg movsb rex.W addr32 mov enterq and sbb out std clc mov add cmp retq (bad) rclb mov (bad) movabs rex.X movsl mov in add (bad) mov add shll loop idivl (bad) mov xor cwtl adc (bad) (bad) jne push add cltd pop (bad) add cli icebp pushq jne xlat add (bad) fnstsw xchg sbb jb add and out add jle or ja (bad) pop pushfq (bad) mov (bad) add movslq outsb (bad) pop add rex.RB adc rex.WRX jl adc orl cmp in (bad) jp test incl (bad) test or fildll jg cmp fcmovbe pushq fadds jge push mov xor and leaveq xchg mov xchg (bad) or (bad) icebp xchg pop (bad) gs xchg adc repnz adc cmp xor xor loope mov callq leaveq js mov sahf jg jl mov xchg fcomps stc outsb int jo add cltd (bad) pop jno out mov fildll xchg (bad) imul jne fildl mov movabs in xlat mov imul jg lret in jge xor add imul jrcxz mov push or jge imul jbe (bad) sbb rex.XB cs pop pop (bad) repnz test sbb jnp pushfq push out fnstenv int3 push movb fs retq lods xor adc rex pushq fidivr ja jl jns imulb sbb xor pop or jp iret rex.RB rex.WRB and nopl or xor mov (bad) jl lods es and (bad) jge jo jrcxz sub scas callq gs out sbb sub rcr adc sbb outsb mov jnp mov push sub outsl jb push insl out and cmc cmp nop (bad) jno adcl xlat jbe adc loopne rex xchg pop xchg test gs (bad) add sub lret neg xchg in (bad) cmp enterq add addl lods mov (bad) jb retq icebp movabs jge add mov mov add (bad) stos mov mov rclb mov mov pushfq xor add ss jle push xchg adc and add or mov add lea ja sub rcll rex.WXB fs (bad) adc (bad) adc imul movabs pop movsl (bad) pop add (bad) sti stc jb push in jl and popq push roll nop sbb jno add jmpq push jp or pop (bad) rex.WR jle ljmp ja mov rex.WB push cli mov sub ja clc xchg js lods xchg stos add add push std callq sti cmpsb cmp push adc (bad) (bad) (bad) jmpq mov xchg and (bad) pop fcompl mov int negb sarl rex.WXB fadds push (bad) outsl pop jp insb mov std adc movabs xchg cmp movsl mov icebp cmp sti int rex.WXB fstps js test (bad) mov jno push jb test xorb (bad) jl lods lret cmpb sbb pop adc mov cmp adc pop adc ja cli fmull nop jg loope or or mov mov addr32 movslq (bad) sub adc je test (bad) jo jbe sub rex.X scas rclb rorb js adc int shrb jp fbstp iret (bad) or test pop bnd (bad) imul jb jg rcrl sbbl jmpq testb ss ss movabs (bad) xchg adc cwtl xchg add mov sti or rex rex.WXB (bad) adc in cwtl mov shlb flds out xchg retq (bad) fnstsw (bad) mov cwtl jae rex.X nop ja and jnp mov fimul lods in and in jne jb or sbb (bad) je jrcxz cmp mov rolb (bad) (bad) rex.WRX test loopne ja rex.WR (bad) sub incb (bad) (bad) rorb sub add callq adc pop add or add (bad) sbb push jmpq xchg jb sub mov outsl pop add mov (bad) jle rex.WR xor and cmpsl test mov jg pushq cwtl cmp rex.WRB rex.RX add xchg mov rex.WRXB rex.WX mov (bad) mov mov push fwait rolb mov (bad) test jnp and jle rex.WX retq cmp (bad) lahf xlat adc (bad) retq and (bad) cmp xor (bad) leaveq jl xchg retq out ss out jo (bad) lock mov sbb cwtl punpckhwd cmpb mov xchg movsl js rex.RX adc add stc pop sbb jp xor xchg (bad) pop jge mov mov pushq (bad) rex.RXB je repz jne (bad) rorl (bad) adc jrcxz jg jg sahf push (bad) and iret int (bad) cmc (bad) stos movsb in add xchg in es test cmp add xor pushq or (bad) je loop retq xor fidivl (bad) mov jb popfq mov add out (bad) push add add jne sub jnp lods jl cmp sub fidivrl movabs add fs or sahf jg imul (bad) jp movabs mov rex.WRXB push or rex.WRXB fs add (bad) in jnp rex.WRX pop js rex.WXB sbb or repz pop (bad) test mov retq je xor (bad) and cwtl (bad) (bad) rex.WX or shr mov xor jl cmpsl rex.WRXB and add (bad) sub outsl add add lea rex.RX rex.WX add mov femms fmull cmc push add lock insb add xchg sub lea sbb add mov mov mov add jbe in (bad) xchg add es in cmp lahf outsb (bad) loop mov enterq in lret sbb mov mov pop (bad) ss mov adc jle add notl shr (bad) idivb pushfq jge (bad) (bad) jg add rex.X rex.WB nop in add and (bad) rol sub mov add mov add jb jge xchg xchg cltd add out or fs je insl int3 add (bad) add rex.WB mov stos subl (bad) hlt sub jp push fmuls lods clc and stos rex.WX retq cmp jle in lock rex.WR jb andl cmp neg and out in mov add sub rex.WXB xor je,pn rex.WRX loop add hlt out frstor rex.XB pop movabs pop pop je (bad) mov (bad) (bad) lock jg cwtl movabs mov cmpsb lods je cmp (bad) jp rex.WX js sahf mov lret fcmovbe addr32 (bad) jbe (bad) movslq sub (bad) cld jle (bad) and lahf mov mov jb xchg rex.WXB mov loope mov (bad) push cld (bad) rex.XB andl outsb es ficoml xlat sub xchg (bad) xor xor jrcxz and addb in rex.RB rex.WX out sbb add mov fs in insb mov in add movabs push out xchg sbb pop (bad) sbb push rex.WXB adc or cs jmpq xchg jl lods and xor test (bad) (bad) cmp js,pt std rex.X xchg lret movabs lahf xor (bad) push (bad) (bad) (bad) add stos jge adc lretw mov (bad) or mov fwait std (bad) hlt out add mov (bad) ds add ss mov (bad) lcall (bad) insb (bad) jb sahf popfq push cmp rex.X rex.WRB incb sbb icebp sti fwait add std gs rex.WRXB sbb jbe xor sub movabs mov cwtl nop test stc add xchg scas mov sbb lock loopne jle clc sub jmpq cs xor mov push add push sub add ja ds (bad) (bad) adc cmpsl (bad) add stc fwait int lods xchg mov fimul or (bad) mov (bad) clc jg and lods jmp scas xor add mov rex cmpl jg stos clc add cld xor mov in insl test or xor (bad) rex.RXB fild xor or movslq addr32 mov rex.RX rex.WX fwait cltd add out mov test (bad) xor mov ss (bad) or jp imul ror (bad) mov mov xchg rex.WRX lret (bad) out mov jmp cmp add (bad) (bad) (bad) cmp nop scas rex.WXB movsb rex.WX mov sub xor xchg pushq mov mov pop (bad) lret scas jmpq (bad) (bad) xor out insb mov push (bad) (bad) xor orb loopne sbb fistpll jb nop movslq and clc (bad) pop (bad) (bad) lret xchg jno sbb jp movsl (bad) jmpq movsl xor nop pop jl adc fcmovnu (bad) jnp cmpsb rex.WRX rex jrcxz rex rex.RB (bad) pop jle add lea push and xchg std js xor mov pushq lock xchg rex.WRB (bad) mov jb push jge xchg in out imul js mulb insb rex.WXB (bad) push xor xor (bad) xchg add push es pop or fs push (bad) push pop cli pop sbb mov rex.W rex.R insb xor rex.WRXB stc iret sti test sub pop cltd (bad) sti test and xor pushq mov sub or stc rex.WRX pop std mov lret mov cmc (bad) movabs xchg rdmsr sahf (bad) (bad) sbb pop (bad) mov adc push in fnstcw jp stos pop xchg outsl idivb enterq rex.WRXB adc (bad) repz sub test (bad) xchg movabs rex.W fbstp sub add fidiv fldl (bad) js lahf cltd rorb adc sbb (bad) sub push cmp outsl movabs ss rex.B jb mov lock (bad) sbb push add mov xchg add xor scas retq adc mov or (bad) xchg rex.RB (bad) mov (bad) pop push enterq sti fs repz (bad) xchg je pop out sub (bad) add xlat mov addl sub loop xchg lret popfq (bad) add (bad) stos pushq (bad) retq int push movsb jne (bad) in je je stos sub (bad) jl in rclb (bad) adc rex.X add mov or fcoms fwait (bad) jb sbb (bad) movl jle and (bad) outsl (bad) mov mov (bad) xchg jle xchg int rex.RX (bad) adc jl sub jb rex.WB rex.XB xor jbe (bad) mov add add jl sahf (bad) (bad) sarl add cmp rex.B cmpsb and lahf fdiv xchg (bad) retq xchg sbb add clc cmc (bad) int3 (bad) rex.XB (bad) and pop (bad) lret jno sub fidivrl jg mov lret scas notl and iret cmpsb mov xchg std jle mov rex imul outsl mov ficom mov imul rex.WX addr32 es mov test jns cmp xor in rex.RB rex.WRXB xchg jl mov jp add xchg out sbb movabs adc pushq jge xchg push add xchg sbb sti test add addr32 cltd (bad) and or (bad) xor (bad) sbb (bad) (bad) cmp rex.RX lahf cmp (bad) (bad) pop rex.R rex.WR sub (bad) and (bad) jp ss mov (bad) imul xchg test (bad) pop rex.XB xor (bad) or mov add gs jp movabs (bad) sub rex.WRX data16 mov or mov rex.RXB adc and imul mov push add loopne (bad) iret out ficoml stos (bad) int xchg lret jo insb movsb mov fidivrl hlt mov addr32 xor add mov rclb scas test test xor shrl (bad) js add jnp add stos test (bad) clc cmc push movsb mov lahf xchg (bad) add pop fwait retq sub jle pushq xor adc rex.WRX scas xchg retq scas jmpq fisttpl jrcxz add add add lret mov pop retq add lods (bad) rex.RX rex.R sbb rex.RB add xchg scas xchg movabs ficoml lret push pushq scas pop rex.XB ja adc (bad) in or jg fmuls (bad) pop std rex.WRX mov and rex.RX rex.WR jp popfq stos notl mov mov xor (bad) lahf rolb (bad) lock and push jl xor (bad) gs adc leaveq mov cmp movsw cmpsl test mov out pushq or (bad) jmpq (bad) jle int3 add retq rex.WRX add rex.RX (bad) jl (bad) rex.XB and mov sahf insl enterq mov insb pop jmpq ror lock xor andl (bad) mov mov notl cltd and xor or or rex.RXB ds jge fcoml sbbl pop je mov xor rex.WX test cwtl lahf or shrb add in es xlat int movslq popfq sub and (bad) movabs xor mov pushq fidivr add pop mov sub jnp adc sahf xor or adc sti mov (bad) pushq mov jle insb mov xor pop mov xor push scas xor adc or sub sbb (bad) test (bad) ljmp pop (bad) cmp pop rex.WRX jg (bad) jnp int rex clc cmp jle (bad) and scas rex.R testb rex fs pop pop mov xlat (bad) jae push mov or mov add pop jnp (bad) fwait lods push add and test add test in jl movabs (bad) mov add mov jno stc sub add pop js or ds mov sub add test scas xchg lahf xor insl xchg cmc push icebp xor push or pop rex.RXB rex.WRB cs pushfq outsb rex.W loope rolb sbb mov (bad) mov (bad) rcrl mov fstpl stos retq add (bad) lret loope insl pushq pop jmp mull imul sub movabs test stos je and std xlat cmpsb pop add rex.WRX data16 cmp xchg xchg fisub ja (bad) jl or and movzwl cmpsb lahf xor (bad) mov loop clc (bad) (bad) xor ja ljmp pop imul scas sti rolb sahf add pushq or add out (bad) rex.R rex.RB repnz pushfq sbb (bad) xchg mov incl and push sbb sbb movabs push sub (bad) (bad) leaveq jg out mov pushq jl icebp xchg sub fs adc push sbb pushq add jl sahf cmp data16 or cmp ja add outsb mov pushq (bad) (bad) adc mov movsl add pop (bad) cmp int3 iret cwtl test mov pushfq jle or fdivr mov and (bad) (bad) sbb rex.WRX mov movabs frstor std push test rcl add fwait cmovo pushq es cld rex.B int3 icebp rex.XB mov stos jp sbb add (bad) neg xchg lahf jge je rex.WXB and loop (bad) (bad) (bad) jge iret cmp repnz sub stos jb (bad) idivl push mov (bad) pushq (bad) leaveq (bad) rex.RX mov jg add fs sub push sub (bad) jb enterq rorb jl jae add movsl idivl (bad) stc icebp movslq sbb rex.RX fs (bad) jae pop outsl stos push lea in decl cmpb push or test xchg jno pop stos sbb cwtl (bad) or (bad) stc jmp icebp mov mov cmp jg fxch addr32 add sahf and xor (bad) in fs js in lock (bad) or divl std pushfq fbld jbe sub cwtl (bad) xor movabs jb retq (bad) pop insl movl jns (bad) xor movsl (bad) (bad) cmp gs mov mov xchg and add cltd sub (bad) jle std push mov outsb out (bad) cs add pop stc mov or mov rex.RX (bad) pushfq jg (bad) or push adc cld loope icebp push mov (bad) (bad) push hlt fs rex loop jp fmuls js rex.W (bad) mov cmp test out mov (bad) rex.XB add addr32 jp xchg jb pushq cmp and jb sub in jl or (bad) jae cmpsl xchg pushq mov sub (bad) jbe rcll (bad) cmp fdivrl pop rex.R rex.WRXB or test pop xchg mov in ss lods mov sbb jmpq and in gs (bad) jnp lock pop in and rcrl rex.X mov jl sbb test popfq callq sub mov cmp jge mov test ficom mov (bad) sub rex.RXB mov test xchg fdivl sbb rex xlat lods outsb and (bad) scas add jmpq or mov mov adc cmova sbb cmpsb repz sahf mov xchg mov xchg xchg fistp andl nop sti jg out (bad) rcl sbb out (bad) test (bad) mov add (bad) lods outsb pop add nop (bad) cmpl sahf push stos pushq (bad) adc xchg or test (bad) in (bad) (bad) retq mov (bad) (bad) add mov or loopne fucomi test jg or sbb loope (bad) (bad) rex.WRXB xchg cmove fiadd rex.WXB rex.B push pop xchg roll add rex.RX mov insl rex.RX (bad) (bad) ffreep (bad) out loop jle mov scas ss movsb xor or mov mulb rex.XB (bad) retq je mov sub cltd (bad) pop jp rex.WRXB (bad) jl fcmovne sahf or pop retq and ds push cmp jo add xor (bad) (bad) add fcomp add add in int outsl outsb adc or jg (bad) decb add data16 add imul fadd sub popfq rex.RX xchg xor movslq pop movsb cmp scas mov xchg ficomp sbb scas fimul jle out xlat mov scas pushq cs add (bad) or (bad) xchg mov rex.WRX data16 add add pop jns pop (bad) fiaddl je and adc outsl shrb mov (bad) imul (bad) fwait ds pop (bad) add jbe pushq imul pop push lock mov cld mov xor jb rex.WRX (bad) xchg xchg or push sub int3 std imul jrcxz std cli in adc rex.WB xchg gs int adc rex.WR add clc in (bad) je nop xchg mov (bad) mov pushfq cmp rex.WXB add add in lock adc and adcb xchg jns pushfq jns repnz fidiv cld test push push outsb sbb push (bad) add jno fiadd rex.WRXB stc jbe rclb or test (bad) stc pushq add rex.RXB (bad) adc rex.WRX stos pop icebp in notb jne stos cmp lods std adc es mov and rex.RXB (bad) xor add (bad) (bad) xor cltd in int3 cmp test cmpsl xchg add mov addl fidivr jae xchg or mov or xor (bad) scas or mov or add mov (bad) popfq fwait cmp cmp adc or mov push (bad) xchg rcrl lahf xchg (bad) rex.WRB xor mov add jle push (bad) insb lahf mov rex.WRX adc or sbb xchg (bad) cmp and (bad) mov loope adc fbstp (bad) cmp clc rex.X mov pushfq add cmp repz (bad) jmpq pop popfq movabs stos pushq mov outsl and ror cld xor jae sbb fistp fdivr (bad) mov repz add (bad) (bad) rex.XB cwtl sub pop ficomp jne jle rol in rex.WRB mov je retq and nop pushq sub mov mov mov loop insb sti cwtl xchg retq pop jg jle rex.X imul addr32 (bad) scas cmp cmp xchg (bad) cmp jbe rex.WB adc hlt sub pushfq add jg push out fstp add add adcb (bad) scas loop jmp xchg stos mov add jne add mov orl (bad) (bad) cmp mov test push (bad) rex.RX scas repnz (bad) in pop jg pop jb fwait cmp movsl pop push std rex.WX (bad) (bad) testb cmp pop int fnstsw mov sub stos je retq xchg add (bad) fldcw (bad) rex.WX repnz push push shll test cmp rex.RX fidivl sarb add test jle xchg mov jl rex.WX lock and mov jbe fcoml mov adc cmp mov rex.WRB add (bad) (bad) cmp add pushq lock cltd and fmuls jle and (bad) clc rex.WB or add (bad) lea xor and push test hlt (bad) mov and callq sbb xchg (bad) xchg add lahf (bad) repnz sbb gs jbe fildl cli mov adc (bad) cmpsb lret adc loop xor pop ja and and movslq add out cmpsl leaveq ja sti jp ds jmp movabs cmp rex.WXB jg mov and imul pushq icebp and out insb rex.WXB (bad) jle jrcxz fs and syscall pop pop xchg test sarb clc stc sahf rex.WR shrb out add jns shll xor sub (bad) insb out (bad) std add xchg rex.WRXB fnstenv xchg stos pushq (bad) cli add ds jb lock leaveq pop (bad) in (bad) rex.X (bad) testb (bad) outsl (bad) add lea fsubrl xor xchg cmp sub mov movabs fistpll pushfq insb fwait iret sarb lock (bad) cmp outsb and in adc xchg adc add jo lea cmpsb add out movsb fadds rex.WR mov (bad) lods icebp fwait add (bad) (bad) (bad) fwait (bad) fild std ss pop ja push pushq in movabs rex.XB jp movsb rex.WXB add rex.WX mov adc (bad) jns add scas (bad) fcompl (bad) test add pop xchg lods sti movsl (bad) std adc push lock sbb sub mov or and lea addl (bad) hlt mov (bad) mov sahf sub rcrl xor rex.XB add ds jnp popfq mov add sahf nop pop and xchg cmc mov adc (bad) rex.RB mov add sub lods add (bad) notb cmp sbb icebp jb jl sbb rex.W fs jle mov rex.RXB movb xchg shrl fcoml sti jb cld pop lods pushq callq add xor stos lret (bad) mov jbe mov in insl orl (bad) (bad) xchg lea mov scas std pop or xor pop vpsubb nop (bad) rex.RB out xchg cmp test adc xor pushfq test gs xchg lods adc fisubr stc jl mov rex.WRB jnp jrcxz rex.WRXB data16 leaveq movsb fsubrl out js insl (bad) push mov sub push (bad) int3 rex.WB and sub adc (bad) gs cmp and (bad) (bad) (bad) xlat in mov scas (bad) mov leaveq sub rex.RXB cmp pushq mov jbe rex.RXB movabs test or xchg push cmpsl outsb mov je jns mov rcr repnz fcom pop mov sub xchg jle mov fldenv movslq movsl (bad) (bad) sbb and mov jg insl fisttp fld movslq mov cmpsb adc ficom push imul xchg (bad) (bad) movabs out cmp jnp pop jo gs (bad) xlat mov sub (bad) outsl jnp shrl xor push nop cwtl test fdivrl push pushq add rcll rex.WRX mov rex.B fs int cli mov (bad) mov xchg out rex.RB rex.XB rex.WB (bad) pop add pop rex.X cmp jle in rcrl adc callq cmp push movl xor and pop jo xor add movabs xchg in xor fisub rex.WRB (bad) add imull add or mov jp rex.WR (bad) or sahf iret addr32 add shll add nop push (bad) mov test add (bad) xor jb cli std cwtl scas (bad) cmp clc add outsl adc rex.XB add sub xor popfq (bad) add popq scas decl and test movsl iret and ja movabs mov popfq rex.RXB cld xchg rex.WRX rex.WB rex.XB add clc cli (bad) (bad) xchg (bad) stos xchg jg fstpl and (bad) scas jrcxz rex.WB jle insl movsb rex js (bad) (bad) leaveq jne ss (bad) (bad) insl xor loope (bad) rex.W xchg xchg mov and mov (bad) sub pushq rex.WB mov or cmp jle rorb xlat cwtl rex.RB xchg mov rex.WRXB xchg (bad) mov sub out es add adc rex.W fs rex.W xchg jbe icebp mov insb (bad) adc add retq jmp cltd hlt test jb xor (bad) fdivrs jp rex.X out mov rex.R out lock mov pop push add movsl (bad) adc or test or pop out cli (bad) (bad) insl and movslq add icebp mov (bad) cltd loope in pushq outsb cmp (bad) cmp iret (bad) push jne jo pop add add fwait loope (bad) (bad) jb xor jge pushfq movabs shll mov es mov fwait insl add int and fs cmp hlt cmp mov (bad) int3 push sahf jp (bad) lods xchg pop shlb test fdivrs (bad) movabs out lret callq cwtl jle lahf xor push movsb (bad) popfq addr32 (bad) addl jl jne ja mov test cwtl (bad) (bad) jnp sub rex pop sarl (bad) es and mov xchg lret nop jle mov movabs pop retq mov rex.WR repz xor shl jp fsub push pop lods int3 rex.RX add rex.RXB or add push mov jo rex cmpsb rex.WX xor insl xchg in sahf movabs rex.R cs rex.WB sbb (bad) and cmpsb xor mov mov sbb mov outsl fs (bad) rex.WRXB (bad) and callq jle (bad) sub sub mov cwtl fcompl add sub jp (bad) movabs sub mov xor push cmc es (bad) mov in sbb roll pop jbe insb shll fdivl jo jns cmpsb (bad) rex.WX roll push roll cmp cmc stos (bad) rcrl (bad) cli mov xchg (bad) (bad) adc xchg mov cs xlat sarl loop out repnz add jge shll adc scas andl mov mov retq outsb (bad) push cld jmpq push cmp xor movabs sub scas (bad) (bad) bnd mov cs xor (bad) ds fistp movabs (bad) outsl loope sub rex.B stos rex.RX rex.RXB xor (bad) outsb jp (bad) push xchg xlat xchg cmp in je rex.XB gs mov movsl jmpq xchg xor fcos rex.RX jae sahf pushq jge (bad) xchg push loope insl movabs jge outsl es rol outsb clc jo (bad) stc push rex.WXB xchg (bad) hlt (bad) outsb loop movabs push pop and fisub mov jrcxz popfq mov push lods js retq fdivrs fsubrl leaveq jl outsl mov adc pop cmp xor fs in ja and movsb iret notb mov mov (bad) sbb rex loope xchg rex.X mov pop (bad) jrcxz mov rex.B rol loop and insb xor mov repnz adc and (bad) xor scas stc loope rex.X fldenv movsb pop jle enterq insb jmp imul or sti xor xchg sub rex.WR xchg mov pop push fsts insl enterq (bad) (bad) pushq mov rex.XB add icebp xorl out adc rclb js outsb mov rex.RB (bad) and rex.RB or (bad) mov pop iret jl fisubr (bad) rex.R rex.WX xchg movslq (bad) (bad) push jb retq rex.WB insl rclb mov xchg cmp xchg repz xchg in xchg shrb (bad) cmp mov pop pushq jl cwtl rex.WRB pop out jg jge (bad) mov xor push jne (bad) adc mov rex.WRXB scas insl jl es cmp xor (bad) mov mov (bad) fidivr pushq mov mov mov adc lahf rex out xchg pop jge (bad) jns iret mov leaveq faddl (bad) push mov xchg push rex.WRXB mov (bad) (bad) rex.WX pop rex.WX or jrcxz testb add lock xchg lock jae je jb pop cmp cld pop lods pushq xor imul stos xor add or (bad) int xor add (bad) sub leaveq scas push xchg add cld incl pushq imul sbb xchg in negl (bad) out and xchg jmp mov (bad) mov movsb add sub sub sbb vorps mov add stos popfq imul add retq jle retq fstpt pop add mov (bad) mov or (bad) push add pop cmpsl (bad) add stos add mov sbb cld rcl fdivl sti pushfq pushq movabs movabs mov iret movzwl jne jmpq pushq mov mov sbb adc enterq adc lcall popfq jl and jb es jo (bad) jb push hlt ds sub popfq imul out xchg and jae in xchg rex.B cmp (bad) stos push rex.WXB jo (bad) js cmc adc push (bad) js mov ds ja add mov mov xchg jo lahf loope (bad) mov mov jo fisttp insb (bad) mov outsl xchg mov (bad) rex.W and add jrcxz mov movabs rex.WR cmp cmp add push movabs pushq jg (bad) mov sbb shll (bad) (bad) imul fs xchg movabs xchg xchg stos movslq sub fsubrs (bad) fsts add in and int3 movl adc icebp or push stos fsubrl push xor pop and pop ja imul rex.RX or cmp add imul je leaveq pop rex.WRXB test rex.WB in jle sahf fldt test rex.WR and js and (bad) (bad) cmp movslq cmpsb add mov xchg rex.WXB mov movabs mov jmp rex.XB movabs jb loopne and rex lock and jns mov jl and fild test popfq mov js mov pop cmp add mov mov icebp (bad) test je repz icebp add pushfq push test jp rex.R cmp popfq (bad) xor movabs hlt jb test adc sub (bad) clc movsl shlw (bad) movabs pop jae insl push add cmp fidivrl and (bad) mov add repnz sub rex rex.XB add push insl adc (bad) and cmp sahf add jne nop (bad) xor (bad) fwait movsl lea push or mov test stc mov add cmp mov and cmp cmp add rex.W rex.RXB (bad) fnstcw int3 fsub cmp sbb scas jmp mov xor insl or movabs mov add xor stc fcompl mov sbb add mov (bad) testl mov adc js xor outsb (bad) retw xchg sti je scas movabs pushq movsb cmp (bad) mov jp test or pushq fsubl jbe add jg mov insb jp jns cmpsb fidivr jl divb ds outsb int lahf jne cmp pop shrb (bad) callq callq mov jle leaveq cmp cmpsl lret stc cli mov mov (bad) pop mov movabs jrcxz ja unpcklps sbb adc loope cmpsl push (bad) jmp jnp xchg (bad) cld (bad) test mov rex.XB (bad) add push jbe ds adc lret pop sti fsubrs fs in (bad) popfq or ds js int3 movabs int imul adc repnz mov movsb add imul (bad) pop roll adc repnz callq iret jl mov subl jle imul lret mov add (bad) pop jae adc sbb add sub cltd add in (bad) (bad) lret xchg jp callq mov (bad) or fimul cmp fnstsw jno jle pushq movabs out orb out sti push add mov lea mov fmulp fsubs add adc bnd (bad) js shr pushq and cmp (bad) push add adc (bad) (bad) xchg rex.WX pop and rol add or adc out xor sarb addr32 jg icebp (bad) or pushq clc sbbl cvtps2pd and mov push out test jne add mov cli jle jge sub pushq mov pop lret (bad) mov jnp and cmp push mov cmc rex.B rex.RXB mov movabs cmc (bad) in jbe sbb jo mov jb or jl in outsb rex.WB lods mov (bad) adc (bad) icebp add lea add push pushq or sub movabs ucomiss mov lods (bad) xchg add (bad) mov jle mov callq pushq pop and pushfq (bad) (bad) (bad) mov sbb sahf (bad) xchg rex.WR lret sub add xchg rcll movsb roll (bad) and xor jg (bad) xchg rex.WX cs xchg popfq idiv mov (bad) jle test add icebp (bad) (bad) xchg enterq xor mov xor mov cmpsl add shlb mov add in (bad) out pop push add jb in add movslq lret out imull movabs stos cld rex.WRX fild xchg cmp add outsb movslq rex.R rex test (bad) jmpq in add lods rex.WRXB (bad) mov (bad) outsl mov jle jb sti mov cmp (bad) lret test jbe (bad) cmpsb xchg lods jge push jno cmp test push or add pushq jp xchg (bad) mov jl cmp pop mov jno repz int3 push and rex.WX js sub add in loopne je insb xchg rex.RXB sub pop xor stc mov add (bad) (bad) retq xorl sbb add lret mov test jno mov outsl rex.WB in adc (bad) decb add mov (bad) int jp test test xchg mov jno cmc (bad) icebp push loopne sub (bad) fdivrp mov cld mov out xchg rorl xchg cmp repnz mov sub pop adc repnz (bad) mov out sbb add movabs (bad) mov mov fldenv rex.X fiaddl pushq ds mov push push loope mov (bad) or mov pop in imul pop and loope rex.W xchg pop (bad) rex.WRX or (bad) test sub push rex or add shll movabs rex.WX ss sub (bad) ja (bad) std add sub (bad) gs rex.WRXB rex.XB push (bad) movabs test rex.WRXB jl rex.W or (bad) int3 out lock xor xchg sub sbb cmp rcrb add insl jge mulb and imul xlat jae sub xchg xchg jb pop pop jbe add (bad) nop imul pop repz js rex.RXB sarb cmc mov out std nop mov std xor (bad) adc cmp mov imul int rex.WB jo faddl rorl sub jl (bad) ss rex.WRXB fs rex.RB imul mov rex.WRXB scas lret in shl xchg jb imul xchg rex.WXB rex.X decl sub hlt stos xor movslq jg lods jmp pushfq test in mov push rex (bad) mov add mov (bad) xchg jp mov test mov (bad) icebp sbb or (bad) scas leaveq pop pop cmp rex.RB (bad) ja movabs movabs jmp cmpsb enterq (bad) jo add xchg mov jrcxz pushfq push and sbb sub xchg mov mov xchg jle rex.RB cmpsb and rex.B test adc add fld adc cli cmpsb fld jmp cld xor sub or orl or (bad) pushq and jnp mov rolb xor xchg insl clc jmp xlat mov fmulp mov (bad) je pcmpeqw xor jle pop (bad) or mov cmp jo jle cmp hlt mov mov lock je add push and out jne pop add (bad) (bad) xchg cwtl sub xchg fldt jae mov clc test cmpsb testl push or sti (bad) jmpq rex.X add loop and or xchg enterq shrl shrb rolb pop rex.WRXB data16 jnp sub in std (bad) repnz cmp jne je (bad) loope xor add mov jmpq rex.XB add je jne pushq (bad) movabs or (bad) cli mov rex.XB xlat out xor in (bad) jl cmp fldl (bad) jb rex.R rex.WXB fs xlat and lods mov pop jb mov imul notl test repnz callq movabs cld js pop cwtl mov popfq leaveq loopne outsb push or xor push rex.WR jge,pt lock lods in pop mov sbb cld or sbb mov jrcxz stos (bad) and loopne xor roll loop mov mov fwait out rex.WB data16 and (bad) jnp in retq mov mov je popfq and insl (bad) rex.X decq rex.WB pushq mov pop (bad) (bad) mov testb testb loop jrcxz fsubl mov jmp cmpsb (bad) adc sarb sub cmp push movslq mov push (bad) idivb rex.W pop pop sub xchg cwtl movq sarb pushq cmp rex.WRX add mov shlb in (bad) (bad) je mov xchg pop add fwait xchg add jmpq (bad) rex.RB subb (bad) sbb lods (bad) add rcl jae fcmovnu jmpq or add or scas (bad) add xor fs pop jg (bad) int3 ds fiadd test cmp or jg (bad) sub xor add (bad) jbe (bad) stos callq and test pop loope mov loopne xchg hlt xchg repz rex.WRX add rorl jle nop fnstcw xchg rex.WRB push add mov lahf jmp or add (bad) iret sub (bad) movsb jno (bad) cltd movabs add fidivr shll cmpsb jno sbb ljmp (bad) (bad) out mov (bad) rex.W push psllw (bad) or test rex.WRB fwait (bad) (bad) jmp jle in or pop jp pop rex.WB pushfq jge fdivrl es jg jmpq pop (bad) rex or jg in cmpsl sub jmp out rex.RXB mov adcl or (bad) add add es xchg and jrcxz int3 add fwait int cmc adc mov push and mov mov repz std outsb sbb or rex.X rex.WRB mov rex.WRX es stos pop cmp and adc (bad) stc mov jle (bad) (bad) (bad) mov add add cmc lea callq sub mov mov sbb add scas std and retq sti mov (bad) rex.B repz rex.WX (bad) sub add add movabs mov xchg xor loope callq rex.B add hlt jl jne test cs fcoms add mov sub and xchg icebp in jp (bad) stc orl (bad) rex.XB loopne imul pop (bad) sbb insb (bad) fwait (bad) add xor cmc add pushq fiadd test jrcxz (bad) adc lock xor or add jl adc jbe pop (bad) cs insb and xchg (bad) (bad) xor (bad) lods jmpq add sub mov push sub jle je xchg xor jb xor fstps (bad) (bad) jns lahf test retq movb rex.RXB rex.WB stc int sub or jae rex.RX rex.R push test xchg pop stos fs mov xor in add lret sbb jp rex.W add and stos and pop pop cli jb (bad) test jge (bad) and mov sbbl push jbe nop (bad) mov adc mov add jo fs mov out jg pushfq cmpsl and add mov jmpq mov sbb icebp sbb mov cli loope mov jge int fwait push jg add mov loope jrcxz cmc jb xor adc rex.XB retq add (bad) sub retq jle int3 adc cmpsl xor (bad) rex rex.W fs sar hlt mov adc push (bad) in cli jns sahf (bad) push movslq rex adc enterq ja jmpq sbb movabs xor or jg test std lods pop mov pushq rex.WB (bad) in insb outsl adc rex.RB sub outsl (bad) andl (bad) mov test out rex.WRXB jg (bad) mov pushq std cmovo or outsl adc lret rex.R pop xchg or mov (bad) mov (bad) or pushq lret add (bad) je (bad) pop jrcxz (bad) add cmc xchg imul lods rex.WRXB or fcmovnbe sbb adc outsb xlat or jbe or cmp sub hlt es (bad) mov sub jns stos popfq or js iret jbe pop flds pop mov lahf sarl mov (bad) adc negl add test test sub sub rex.R repz adc and enterq cmp fucomi xor ds xlat xchg sub pop mov lahf cs out jne (bad) pop sub outsl in pop idiv add stos jb mov jmp mov cmp pop cs (bad) pop movabs (bad) sub (bad) jg rex.WR fisubr outsl xchg push (bad) pop jae mov (bad) je (bad) cli je jo push xor sub (bad) xchg mov xor jp (bad) ja (bad) scas pop rex.B ds ficoml stos lock xchg (bad) xlat pushq xor (bad) insl pushfq imul rol adc (bad) js jmpq sbb std push (bad) js rex.W (bad) xchg cmp pop movabs jrcxz mov and lret pop test movabs or add callq imul xlat (bad) jb hlt test xchg (bad) imul pop packsswb sub add pop fiaddl str adc nop add enterq hlt rex.RX (bad) test (bad) shll add rex.RB subb mov pop xchg popfq jg push (bad) fistpll xchg mov or repnz push add js jbe sub and jnp xor retq in movabs add retq sbb cli stos roll jge mov rex.WX in adc rcll xor jl mov sub add push jl,pn fcmovne lods add test imul (bad) rex cmc adc cld out (bad) (bad) std in (bad) xchg add jg mov movslq xchg (bad) mov mov (bad) fistl jb mov loop jmpq (bad) and imul (bad) js jnp fiadd xchg icebp jne scas sbb mov (bad) jnp xlat jb rex rex.WB sbb cld xchg xchg lea sub mov push jg or stc jbe (bad) sets or pushq sbb jp loopne pop xor insl xchg (bad) test (bad) (bad) rex sbb jle (bad) (bad) jns ss loope,pn add (bad) enterq xchg (bad) cmp mov add or push or mov fiadd cmp add (bad) xor add sar insl and or (bad) pushq stos pop add in cli rex.WB cmp xchg add add (bad) pop movabs add shlb add xchg or imul cli add jg repz cmc mov add xor (bad) sar sbb xchg push fbstp sub xor jle mov pushq (bad) flds pushfq out and in mov (bad) add cmp push data16 add rex.XB and imul sarl sbb rex.WRX movabs movslq and movabs rex.W jl rex.WB je push fnstcw and rex.R (bad) out jns sub rex.WXB xchg ficom mov div movabs rclb and test jo push (bad) jae jbe jmpq jnp sub sbb mov gs mov sbb or psrlw push data16 cwtl sti orl jbe lock fistpll adc stc imul gs (bad) callq negl es cmpl nop outsb shrb mov (bad) adc faddl (bad) clc jp insl rex.WRXB mov and rol (bad) addr32 xor (bad) cmp pop jo and pushq and (bad) jbe (bad) sti ja neg jnp (bad) in (bad) mov adc add rex.RXB callq jle fs sbb (bad) jae negb je imul (bad) pop adc mov jb (bad) rex.RXB pushfq mov faddl lods (bad) pop imul (bad) and mov test fcoms jl in mov movsb out jl adcb sub jbe cmp out push loop add pushq cmc adc add sub cs sub fisubr outsb outsl xchg ds xlat mov neg jo jmpq push lock push in or clc (bad) jb rex.RXB mov xchg rex.WRX callq in in shlb cwtl add and rex.XB mov movsl add cmovno jae (bad) rex jno addr32 rex.RXB and rcrb xchg mov stos ja sbb cmpsl rex.XB rex.WRB repnz or mov push test pop add outsb (bad) pop xchg jl (bad) insb rex.RXB rex.RXB xor leaveq je sub hlt mov outsb rcll mov xor clc outsl mov shr notl adc pop in mov add (bad) sub adc je lods je (bad) outsb cmpsb inc add pushq jmpq pop cmp ss iret and sti xor jrcxz shll xchg push sbb pop enterq (bad) (bad) pop push add rex.WB jbe cmpsl xchg pop or popfq cmp hlt int3 stc sarl cmp mov xchg iret pop fucomi cmp callq jmpq lods push mov imul int3 (bad) movabs rex.WX pushfq js adc out xchg addb sahf test jle sbb nop add outsl pop jl add cs cmpsl jne mov imul (bad) leaveq cmp lock fcoml ja xor out in je jl xor ljmp xchg stos pop push pop sbb cltd rolb jno out sbb add stos add (bad) ss retq out adc add or mov cmp cmp repnz lret test mov shlb or xlat lret (bad) stos mov add rex.B cmp in incl xchg imul rex.XB je jp (bad) movslq std push add cmc adc mov add or rex.X mov adc rex.WXB (bad) (bad) jb (bad) sbb sbb add xor mov xor in roll cli push orl (bad) sbb add fsub add test in mov add sar (bad) add movabs shl or (bad) cmp (bad) pushq add sub xor popfq mov or scas pop mov gs sbb jge (bad) rex.RB pop jg (bad) fwait sub jmpq add cltd or jne xchg (bad) (bad) mov push ds or rex.WB rex.RB mov roll and mov cmpsl mov rex.RXB adc mov mov push out (bad) out repz xchg or xlat jo rex.WRB in hlt mov rex.WRX add pop movabs rcrb leaveq (bad) (bad) fnstsw jle add mov xlat or pop push and pop (bad) retq add adc add (bad) sub cli shrl jle outsb (bad) fnstenv mov jl leaveq loope rex.RX jge xor or jne out rex.RX (bad) and jge rex.X je mov jge sarl and (bad) (bad) mov xchg cmp sub (bad) mov (bad) jne xchg sub retq (bad) jmp adc andl cmp jg jmp pop xor loop pop cld sarl push cmpsl mov (bad) retq pushq movabs rcrb outsb adc cmp fcoml rex.WB (bad) mov rex.WX retq callq lahf lret jge ja (bad) adc xor rex.WRB rex.RXB mov sbb pop je or insb mov sbb mov sub in or (bad) sub addr32 pop lahf fldl cmp out (bad) rex.WRXB fiadd xor xchg (bad) mov rex.R outsl enterq add cwtl mov pop stos movabs cmc nop rex.XB xchg and sbb mov jl rolb mov or imul (bad) mov fnclex xchg fucomp (bad) (bad) xchg iret std je mov fidivrl push xchg and roll test push cld (bad) xor xchg or hlt loopne icebp (bad) (bad) push and add cltd hlt (bad) xchg cli push jge jg rex.RXB repz sbb cmp xor push imul cmc rex repz (bad) or jmp std (bad) (bad) addr32 sahf (bad) jle (bad) out pushfq rex.X rex.RXB push pop mov int3 shlb cltd sbb js retq or rex.RB or push cmp adc (bad) jo sub (bad) imul addl jecxz movabs jbe sub (bad) repz scas jge callq and lods jno shrl outsb push cli jae shll xchg idivb xchg movslq hlt jne sbb pop rex.WRXB jle and int3 (bad) movabs cltd js mov pop sbb ja es stos and ds jmpq pop or cmp cmp (bad) out add add rex.RX (bad) xchg (bad) stc rex.WRB (bad) test jg xorb cmp rex.W adc jmp add (bad) xor std js jbe test iret cld jnp xchg adc imul pop rex.RX rex.WRXB mov and jle (bad) test mov scas rex.WRXB scas push cmp clc pushq fimul add ja pop fisubrl add fisttpl sar (bad) ss add add shll sub movslq (bad) pop leaveq mov adc cmp adc mov loopne mov rex.WX add fwait jp outsb sbb jno xchg and (bad) mov rex.W add cli mov and test fmuls pop (bad) idivl mov rex.WRXB add lahf pop jge jle rex.WX jne (bad) mov jg xchg int pushq sub push cmpsl add mov rex.XB xchg cli faddl jb mov (bad) fs or (bad) jae xchg push movsl push and rex ror cli cmp (bad) ds rolb mov movabs sub outsl js (bad) shlb cli fwait rex.WRB jge int3 xchg nop jb rex.WRXB mov add add sbb ja mov mov sbb (bad) (bad) or mov jl cmp (bad) mov sub xchg loopne and rex.WRB or callq sub adc lret pushfw test sub jae sets rex (bad) add rep movabs movabs and add and jb and sbb negb add jrcxz je mov and pop rex.WB add es (bad) cli rorl xor xchg add (bad) sbb decb (bad) callq (bad) xchg rex.WX or (bad) jle fsubl cmp xchg mov mov (bad) hlt repnz (bad) push add rex.WXB rex.WRXB rex.WR rex.WB shll jl mov rex.WRX and rex.WRX (bad) pop in rex.WRB mov (bad) pop xchg (bad) xor rex.WRX jnp ss jl in mov adc div xor sbb (bad) fldl test jg,pn cmpsb shll jl xchg rex.WX cld sti scas addr32 sub rex orl je (bad) (bad) (bad) out mov shrb add sahf loopne sbb jnp movsb cld xchg or mov in icebp ss mov fs out add cmp outsl (bad) (bad) cmp xchg mov rex.RB pop cmp rex.R out and cld stos movslq xor rex.X and clc jb nop mov push out (bad) or mov divb enterq mov mov jbe push fisttpll mov out (bad) add sub stos sub out mov jl cmp bnd roll out xlat (bad) fdivrl and rex.XB rex.WRB ljmp jne pop lahf rex.RXB (bad) scas xchg jl ja fnsave fdivr xchg add mov movsl jp icebp (bad) and sub cmp mov rex.WRX jb mov add (bad) rex.W pop (bad) (bad) add or rex.WRB (bad) (bad) sbb ja out sbb test fldt jl (bad) cli (bad) div addr32 (bad) sbb add mov sub lods add rex xchg rorb mov push and (bad) (bad) xorb rex.WXB out (bad) rex sub or je loope xchg subl sbb icebp (bad) adc lret (bad) add sbb rex.WRXB (bad) (bad) and (bad) adc and (bad) jns push cs jle outsb fstpt sbb jle adc int sbb add (bad) (bad) sbb fisubl (bad) jle out jb add movabs mov or add mov imul sbb hlt lea or mov rex.WR movsb movabs mov push rex.WRB fdivrs jl imul insb sub in push sahf rex.X (bad) mov (bad) movabs push sbb add divl (bad) (bad) xor sahf ljmp std pushfq insb or xchg sahf movabs mov rex.WX cs (bad) imul repz xor mov jge cmpsb retq xchg add mov (bad) rex.WX data16 add je mov cltd add outsl (bad) adc pop mov iret (bad) mov jg fisubr mov (bad) mov add cs jp (bad) rcr jp stc nop insb (bad) rex lret pushq lods rex.WRB cltd jnp pushfq xchg sbb (bad) imul shrl (bad) mov mov mov jg lahf jle fs sub out adc (bad) repz push add adc shlb pop add adc in in sub loopne movslq je push rex.WXB rex.WX (bad) add callq lods pushq movabs pop add outsl mov addr32 cwtl retq movsb pop jnp pop sbb mov add adcb add fistp sub xchg xor pop cmc jb and popfq adcl (bad) rex.RX movabs std cmpsb fs mov add icebp lock insl leaveq mov (bad) or xchg jp xor xor push cmpsl add (bad) add (bad) cld (bad) mov add lods (bad) fwait cs sub and add push ss stos (bad) mov (bad) jbe mov and je repz movabs cmp fs sbb (bad) lods add cwtl outsl sbb movsb js mov rex.RX pop mov jle or adc and movabs adc jle clc sub jns pop outsb jnp incl cmp sbb cmp pop fiaddl jl jrcxz lods (bad) mov jle shl pop movsb (bad) and rol pushq sbbl rex.WRXB fsubrl jae fs (bad) cmp ljmp jrcxz jl in hlt js mov pop mov (bad) int test push cmp movsb (bad) ss xchg cmp push push int3 (bad) hlt pushq sbb sbb iret in sub or xor je jns jle (bad) out sub int jp (bad) or lret movsb lret pop mov adc fisubrl cli callq add cmp jbe add rcll movabs lock (bad) add (bad) sbb pop repnz sub jle push xchg rex.X adc xchg repz jp jp cmc outsl rex.RB loop xchg (bad) add mov sub add (bad) loop rex.WR pop (bad) out out (bad) sub xchg rex.RXB hlt (bad) jne fwait xor retq int3 mov cmp cwtl add lahf xor lock std retq jb jg mov and xlat loope nop (bad) (bad) jle movsl fbstp cs imul lret fisubl jp mov and outsl lods ja (bad) adc (bad) mov mov nop rex.WB jl loop jge jbe popfq xchg movabs (bad) add xchg rex.X sbb push adc (bad) leaveq rex.WB fcmovnbe mov jge jp jbe lahf (bad) add fs fwait sub cmp je jb cwtl repnz (bad) jg (bad) mov sbb add enterq clc rex.RX or xchg fsts cwtl jle xor mov xor lahf fdiv push (bad) leaveq loop (bad) scas sub (bad) push jmp or (bad) jle jnp mov (bad) push mov fiadd movabs mov sarl rex.WXB movabs movabs roll (bad) sub insl jl outsl imull pop (bad) add xor mov repz (bad) scas (bad) mov pop mov decb enterq mov pop add push push callq jb sbb (bad) (bad) pushfq mov decb (bad) xor movabs movb jge mov add mov or mov fidivrl cmpl jmpq cmp rex.WRB rex.XB xlat xchg (bad) (bad) movabs popfq mov roll xchg mov xchg fwait and xchg loop je andb (bad) adc and add (bad) cmp movsl adc add mov jnp rex.X rex scas pushfq fnop and mov sub mov add sub (bad) shll lret xor decl rex.WR jp rcll in xor jb xor rex.RXB in gs mov popfq ja (bad) (bad) and jl push jg rex.WX ficompl (bad) in fimul out mov fstpt sahf jmpq std cld pop xchg xchg mov jmpq (bad) pop sbb rex.X out sbb cmp xchg jle adc xchg rex.WRB notl sbb insb add int3 (bad) or jrcxz xchg (bad) (bad) cmp jmpq rex.RX adc insl (bad) sti sub enterq pop es jmpq or jge add lods (bad) (bad) callq test xchg leaveq jp or add add add push and test and jns sbb rex.XB and cmp enterq and cmp xlat (bad) add cltd or add and jmpq add cmp (bad) push xor push fist rex.XB jge rex.W add and pop xchg cli cmpsl pop (bad) mov jl mov jb sub gs sar rex.W movabs retq adc jnp in (bad) add mov fiaddl ficomp sbb retq rex.WX adc add (bad) hlt jl fs sub cmp (bad) and out jo rex.W mov mov pop xchg retq add (bad) mov jg (bad) scas jg rex.WRX lret leaveq shr xchg push jl push or test xchg push (bad) (bad) rcrb jl add (bad) xor cld cltd (bad) rex.W in jge movslq sbb jl sbb adc cmp sbb jrcxz out (bad) add sbb rex.XB (bad) mov jrcxz (bad) mov add and mov cmpsl add xchg rex.X sti (bad) stc jle pushq in movsl add and mov add sbb push fist insb and movsl mov ja xchg data16 jl lods (bad) (bad) (bad) (bad) rex.WRXB insl fimul (bad) xchg pop movsb sub clc xchg (bad) jl pop roll and or adc (bad) add and mov insl lock jp (bad) not in xchg adc rex.RX stos pop sti mov pextrw rex xchg (bad) cwtl lods sbb (bad) rex std movabs push and retq xor (bad) and ja (bad) lret jo lahf cmpsl cmp fistp and rex.W (bad) mov jle imul mov and pop loop mov js sbb xchg in movabs sbb rex.W pop add mov (bad) jb add pop mov pop mov (bad) sub cmp add movslq pop jp fdivrs push fimul fistpll xor adc cwtl jb mov ss sbb enterq mov jp sbb lock and rolb fist push mov jmp pop movabs add jmpq rcrb add rex.XB add (bad) xchg lods (bad) xchg out xchg (bad) int rex.WB jne rcrb add mov sahf jp adc push mov rorb lret std add mov add sub incl adc pop mov addr32 jmpq xchg lret jl js movsl stos pop jmpq add rorb fdivp and xchg jle mov (bad) rex lahf outsb repz lods and (bad) in and cs (bad) rex.W js (bad) xchg push add sbb (bad) mov (bad) mov add pop xchg (bad) lods stos out test pop mov jrcxz jnp cmc sub pop fwait popfq movabs cmp popfq (bad) adc adcl (bad) pop sarb movabs mov pop mov xchg fisubl out (bad) add jrcxz adc (bad) imul mov cmp pushq scas xchg sbb adc shr (bad) (bad) push pushq mov push divb or rcr (bad) lock mov nop mov lea rorl mov (bad) ss movabs sbb fsub sub mov (bad) pop ficompl sahf sahf rcrl insb cmp (bad) sarl xchg rex.WRXB add sahf add je movabs movslq sbb in mov rex.XB jmpq mov add add pushq adc mov insb pushq js xchg jge (bad) mov mov sbb fcoml xchg addb rex.WRXB xor (bad) cmpsl cmp sahf (bad) movsb pushq rex.RX rex rex.WRXB and xlat stc cltd sarb and (bad) jmp mov mov jmp xadd (bad) stos (bad) mov xchg add pop push xchg (bad) gs add (bad) push sub (bad) movabs cmp sbb insl push adc rex.WR xor or push sbb fdivrl (bad) sbb in out rex.XB jno cmp rex.W sub mov push cmp and adc scas and add (bad) fwait rorb mov hlt xor rclb lldt or xchg mov mov cmp jnp jno rorl fdivr movd or iret (bad) scas lock (bad) lret xor roll rex.RXB (bad) or test jp movsb pushfq mov in xchg pop pushq (bad) or mov mov add pushq push and pop stc add test rex.X clc (bad) add (bad) xor in scas icebp xor addl rorl (bad) pop add xchg pushq cs push out rcll sub pop (bad) (bad) sbb or fdiv popq test insb (bad) or fs push rex.RB stc lret rex.WRXB movslq pushfq (bad) mov jg,pt test add movabs sub fcoms cmovb fldt leaveq jns pop testb es movsb jle rex.RX sub icebp add xorl jbe (bad) xchg jns addr32 and mov mov add sub cmp adc rex.W and stos or es movslq cmp add enterq fmuls push fs jg (bad) adc (bad) mov addr32 (bad) sbb loope push movsl rex.WX xor add outsl (bad) (bad) cs (bad) or or rex.R rex.RXB jo loop mov and xchg stc sbb jle movabs popfq rex.W (bad) (bad) sbb rex.RX and adc loopne adc pop cltd mov gs test add push cli (bad) mov mov add stos retq mov push pushq xchg pop xchg adc lock sub int repz fmull stos incb mov cmc lret mov test jnp roll cs repnz add (bad) mov jmpq out or scas push ja stos or add pop fsubrs sbb and add retq add or movsl test or fnstcw sbbb iret sub rex.W xchg (bad) rex.WX xchg jle rcr lods divb xchg iret adc mov push imulb scas insl mov je xchg (bad) xchg mov icebp mov (bad) or js (bad) popq scas imul xorl rex.WB movsl xlat pop rex.WR out retq and lret jb pop loope ja fmuls mov repz add data16 cltd or mov mov (bad) fild lea lret sub pop or push add pop jp (bad) rex.WRX cmp jns mov mov or hlt jl cmp cld pushq pop add xor add mov push (bad) and push sbb (bad) xor pop rex.WX or and (bad) push adc mov xor rex.WRXB jg sbb (bad) icebp es lock movabs or (bad) pop xor sbb (bad) std movabs rex.WRXB rex.WXB push jae or and mov jle jp rex.WX (bad) (bad) add retq xchg movsl cmpsb mov and (bad) xor (bad) add cmpsl retq cmpsb rex.WRB add movabs jle or stc cltd (bad) incb rex.XB mov push test loop xor jg out scas xorl rex pushq fmull jle and in js testb jle stc adc adc xchg rex.RB cmp push jrcxz (bad) add push iret or sbb imul outsb loopne loope leaveq add xor lods stc movslq mov cmp cli jg sub jno rex.RX (bad) int xor (bad) lret imul cs sub (bad) pop xor int3 in ja mov push mov mov test es xchg sub mov int3 fwait add cmp sub lahf mov xor fwait sti mov lea sbb shrb cmp nop in out ja mov (bad) jb mov rex.WR movabs (bad) xchg sub mov xchg add mov pushq (bad) xchg js pop pop rex.R jbe mov or scas fisub xchg or (bad) cmpsl xor jrcxz rex.W xchg rex.RXB or (bad) lea cmp imull cltd pop fistl cmc rcl scas xor xchg and out push sbb sub jle mov sarb jbe mov xchg xor gs mov stc xchg scas add fistl (bad) jb mov rex.WRXB lock mov rex.WRX (bad) sbb fs xchg cmp cmp jb mov (bad) mov add retq lret (bad) movsbl and movslq callq incb jle js,pn jne (bad) cmpsb rex.XB fcmovbe push add mov loopl sub (bad) sbb push andl pushq scas jns add mov rex.RXB outsl jnp (bad) (bad) jmpq push sub adc jb mov adc rex.W fildl fwait (bad) psubsw (bad) xchg jp cli mov cmp (bad) add xor push and or fs pushfq (bad) loop add jle sub in add shrl mov jae adc int3 cli lahf push add stos (bad) xor adc pushq push add pushq lods add push (bad) outsb add jns jbe jb xchg add adc shr clc lods retq xor sub xor pop icebp mov xor mov (bad) loopne (bad) (bad) ss (bad) test in add (bad) jae rex.WR sub js movsb insl cmp add mov fwait jg rex.X sahf (bad) xor test sub divb jle cmp (bad) rex.R cld jl jmpq mov out insl mov retq xor mov push or add or (bad) scas out cli mov mov or jp add xchg cmp add mov cwtl add (bad) movabs cmp jnp movabs adc pop fstps callq jbe cmc loopne xchg and push out cmpl stc sub and imul xchg and adc test (bad) add mov rex.XB iret in mov (bad) sti repnz rex.WRXB (bad) rex.RX je cmp mov or retq jp orb and outsb insl sarb lret ss (bad) jns fdivrl pop (bad) xchg sbb xor sub (bad) jns rex.WX jp test insb (bad) adc jb in jo lods jl jb rolb retq pushfq (bad) (bad) mov js outsl push (bad) jrcxz in add xor mov addr32 (bad) mov adc rex.RB sbb xchg mov xchg (bad) ja (bad) rcrl sbb (bad) andl (bad) mov test (bad) or rex.RB rex.B mov pop xlat icebp out rex.WRB add jp jrcxz outsl movsl test sbb in jrcxz test repnz mov xor jns movabs imul xor xchg xor out insl (bad) mov pushq and cmpsb sub mov xchg jne mov jne jno (bad) mov outsl pushq sbb add sarl scas sbb xor rorb test mov (bad) (bad) xchg test pop xor or rex.R movslq mov cmp in leaveq add lods cs (bad) mov cmp mov loopne clc lods (bad) retq mov (bad) je xlat cmpsb mov sbb movsb (bad) movabs rex.RB retq jne leaveq (bad) sahf outsb jbe pushfq cli xor cmp mov hlt insl stc rex.RB icebp adc (bad) out cmpsl mov sub xor xor stos lock out sub nop pop adc sti rex pop xor out add rex pop (bad) adc jle retq out sahf (bad) sbb jp rex.WRX pushfq add adc adc cmp (bad) add test rex.XB mov xchg lret callq out lea add mov add and add sarl xchg (bad) add rex.WRX loop or fimul movabs mov nop adc rex.X adc (bad) test outsb stc jno movslq sbb cld enterq fistpll cli cmpsl sub (bad) repz rex.RXB (bad) sahf xlat rex.WRX lret add callq pop (bad) jne xchg add xchg jnp jmp add or adc imul (bad) ja (bad) (bad) rex.WRX mov add ficompl rex.WRXB mov adc cwtl mov (bad) lea push orb outsb leaveq rex.XB adc (bad) mov xor cmp sbb mov imul movslq movsl (bad) fisub add xlat (bad) or iret cwtl add hlt fstps add loopne imul lock and pop add (bad) mov retq cli repz rex.WRB lea mov (bad) shl sub or out (bad) test add or or push jg cmpb mulb mov mov adcl rclb xchg mov (bad) adc pop jg (bad) (bad) in movabs rex.WRB jmp or insl cmp adc mov loope jl fcmovnb (bad) js cmp (bad) icebp mov rex.WRXB faddl test movsl jl out cli rex.WRXB sbb jle sub sub xchg (bad) fldlg2 out (bad) bnd stos lock and adc pop or rex.RX (bad) xlat pushq rex.WR add push lods xor pop cmp push mov add (bad) xor cmovl (bad) and add jno rcll and (bad) sahf outsl rex.WRX jl or sub rex.W rex.W jb jge cmpsl (bad) pop and paddsw add push jle cbtw rex.B rex (bad) (bad) stos xor movslq pop sbb rex.R movabs pop popfq xchg xchg rex.W and sarl xor jbe cmc imul movabs nop add es jmpq mov mov (bad) mov movslq out sub (bad) callq and mov int3 add sbb test pop gs or mov or rex.R rex.RXB xor andl outsl or cwtl scas (bad) jne fdiv push cmpsb add (bad) rex.RXB add test retq fadds pop (bad) jo (bad) push cmc rex.RB (bad) add cmp mov shlb testb mov rcll shll icebp mov jg clc test jle js (bad) stos (bad) movabs cs xor mov push rex.WRB lock sub jl jge jg cltd outsb jl mov (bad) jl xchg out js jg (bad) movabs jle callq pushq ja or mov scas or or js rex.R repnz leaveq jno subl sub push leaveq lods imul adc outsb push movsl jns pop pop xchg (bad) sub cmp and pop in jo or loopne pop mov movabs or rex.RXB callq jl mov and mov (bad) jge push jae lock (bad) pop sbb adc mov popfq xchg (bad) (bad) lods cmpsb (bad) push jl int3 pop sbbl test loop shrl (bad) fs (bad) push movabs (bad) (bad) retq pop (bad) leaveq pop js addr32 outsb xor (bad) mov or out out in (bad) jrcxz (bad) movb add sub xlat or xor mov pushfq movsb lret jmpq rex.B mov pop movsb rex.RX lret mov movabs pop js mulb sti imul mov or movabs (bad) sub insb (bad) cmp xchg mov cltd jp imul push sub scas lret (bad) mov outsl mov (bad) and jge sarb jle mov rcrb movsb mov pop add out and add rex.W xchg (bad) movabs outsb ss mov (bad) stc (bad) pop (bad) (bad) add (bad) je (bad) add sub jb xchg iret push out negb sbb scas jne in popfq ss sti mov adc fisttpll mov movabs xchg cmp rex.WR jnp in cmpl testb (bad) lret popfq addl loope mov stos rex.WRB sbb pushq and (bad) xchg xchg cli rex lods out fnop and loope jns (bad) in (bad) (bad) int push movabs cwtl (bad) rex.WRB insl push add (bad) sbb test (bad) movabs mov imull sbb (bad) cmpsl xor insb and movslq pop adc in test (bad) stc cli mov push ja rex.WB test rex.WX int and (bad) mov rex.WRXB or xchg movabs xchg fimul mov cmpsb add loope rex.WR ja sbb cmp xor mov add xchg mov out sbb roll lock add movsl (bad) mov jbe xchg rex.WRB shlb ja cmp shrl rex.RXB push cmp rex.X out add xorl pushfq imul rex.WRXB fldenv pop (bad) je (bad) add mov jrcxz xor icebp (bad) add sub add cld pop lods and cs ja in sub or add jo fmull rex.R add pinsrw repz rex.WRXB loopne add or jbe test jb (bad) int movabs add jns rex.WX (bad) sub push sbb imul es jne rex.WXB scas (bad) rex.WX rex (bad) (bad) xchg negb mov int3 lods rex.WRXB or loopne and rex.RB sbb pop jrcxz std jge outsl mov (bad) (bad) stos and es (bad) imul movsl and mov outsb fs jl mov ss jrcxz xor rex.WXB xchg (bad) vpsubq out xchg retq rex.XB and (bad) addr32 jns add push cltd push ss (bad) cli movsb push pop sti add hlt jg xchg sub mov insl sahf push clc fisubr mov xchg jbe sbb add cmc xchg lods repz (bad) or fisttp (bad) or jg or mov mov jne insb leaveq loop xchg pop jb and in adc (bad) add mov (bad) jb vdivps (bad) jp enterq iret rex.WRXB hlt or jrcxz lea loope insb (bad) cmpsb (bad) hlt add (bad) data16 cmpsl jp imul rex.WRX pop add rcrl rex.W test movabs lea xor fmulp add rex.WB fwait cltd add rex.RXB rex.RX stos jp fisttpl rex.WRB and je xchg popfq jp int3 adc pop mov (bad) xchg (bad) (bad) hlt add jae pushq mov rcr (bad) imul pop je int3 pushq out (bad) add jmp (bad) in movslq (bad) or callq addl xchg (bad) rex.R test dec mov push sub imul and add pushfq xor insb (bad) (bad) (bad) rcrl (bad) adc mov add cmc xor adc mov cmpsl add rex.WRX lahf fsubrl sub stc loop add lods rex.RB (bad) (bad) fildll iret loopne lret incl (bad) mov rex.XB rex.WXB xchg cmp rcrb add add add pop movsb (bad) mov movslq mov test pop mov (bad) or add xlat mov pop mov pop add jl (bad) enterq scas mov jl sbb leaveq ja pop movabs (bad) mov es and pop hlt mov lret mov (bad) mov retq cltd (bad) js xchg fsubl or sub mov xchg test mov mulb iret lret fsubr xchg int cli xchg add orb imul mov sub test cmp xchg push cmp outsb xchg jp out xchg adc pop sub (bad) mov fs mov (bad) movslq repnz (bad) jbe ficompl hlt movsl jp push mov clc iret jb (bad) sub cmc adc jl rex.XB xchg es jno pop rex.RB xchg pop adc pop in rex.W lahf fs lock pop and fdivs sti jne add mov (bad) xor push jle mov cs (bad) jl sbb (bad) cmp test sub sbb cld cmpsb mov pushq (bad) test add lods insl xor xchg hlt pushq jmpq decb repz add sub jb adc xor pop mov push rex.X xchg (bad) int (bad) mov sbb cmp push jns (bad) fwait (bad) je mov stos stos push retq add int3 fisubrl and repz add xor insl mov stc movslq sbb add out cmpsb leaveq (bad) push rex.W or pop cld insl (bad) (bad) gs lods cld stc sbb lea sub (bad) jp mov (bad) jp xor hlt addb pushfq in rex (bad) pop jle sub retq or cwtl (bad) add cs and shrb (bad) rex.R pushq or cltd (bad) (bad) push or rex.W es pop add add mov test and rolb (bad) sbb sub mov rex.XB add pop stos (bad) decb push fwait or add jmp mov cmpsb rex.RB mov rex.WRXB std jle leaveq mov rex.X xor divb int3 loop movabs cmp data16 jp mov adc ja adc adc push cmp fistl cmp lret xchg mov (bad) jmp fbstp (bad) std jg cmp xor jo fs (bad) jmpq cltd pop pop xchg xor jns add and (bad) jo mov or mov (bad) cld adc add movabs jg fldcw pushq std sub xchg cmp add mov push (bad) es neg (bad) add sbb mov cs (bad) mov nop je cmp andl out int push callq jne stos loop data16 rcrl addr32 sti (bad) and cld fsubr test insb iret cmp (bad) sub notl sbb (bad) (bad) pop xor mov enterq mov xor xchg mov adc rex.WB and lahf sahf and in sbb xchg cmp xor add xchg lea rex.RXB lock (bad) cmp add mov fnstcw sbb jle pushq insb (bad) add mov out std push sub out pop xor push sub (bad) (bad) add mov add jns cmp out ja jp callq sbb int3 (bad) cli fnstcw add movabs cmp pushfq scas jb mov rex.WRB xchg add rorl or xchg rex.WX test xchg sub fdivrp (bad) movabs mov (bad) sub add test ficompl outsl xor jp leaveq or xor jae mov pop nop (bad) out movabs scas (bad) add rex.WXB in mov sub pop jle ja sbb xor (bad) retq sub cmp (bad) insl rex.X loopne nop movslq cmp stos (bad) fwait jo mov sub movsl addr32 pop ss std movslq ficom add fisttpll leaveq adc add mov outsb cwtl outsl pop idivb (bad) jns mov jg rclb add js push xchg sub mov adc cltd in add (bad) rex.WRX rex.RXB out pop lock rolb es xchg scas push adc (bad) scas test test fwait sub adc pop cmpsl mov add rex.W rex.R rex.WX loope cmpsl clc and es test insl rex.WRXB pop push movsl (bad) xor xchg out mov add lahf cmp mov out add vcmpnlt_uqpd std pushq mov xor enterq jns iret push jle lea divb pushfq out mov movabs (bad) or xor std mov cmp add rex.WRX or movabs cmp jle stos jrcxz xchg addr32 fmull jle hlt pop callq (bad) jno (bad) out jbe push add ja (bad) jle iret (bad) (bad) sbb movups popfq stos pushq mov xchg push insl leaveq rclb (bad) scas lea sbb retq cmp (bad) stos rolb xchg xchg push (bad) fildll rex.XB xlat std rex.WRB repnz fwait add sti adc adc gs mov cmpl loopne rex.WX jb xchg retq mov cltd repz lods stos in rex.WRB xchg iret retq rex.RB rorl xchg xor std data16 icebp jne scas rex.RB (bad) jmp addr32 and in rex.XB imul rex.B test jb lods jrcxz sub sub mov or gs lahf (bad) cmpsb rex.WB cs or and jge lret out lock jbe popfq je mov pop ds pop xor fs add and roll mov rex.WRX stos out test adc roll lret stc pop jns add (bad) (bad) mov idivl mov clc mov jb adc add in scas cmp sbb fiaddl out (bad) mov ss mov test in out shrl movslq xlat sbb insl (bad) movabs xchg jg rex.WB adc idivl (bad) jle (bad) sbb mov xchg add fdivrs xchg enterq es add sub add (bad) (bad) rex.WX jo pop add loope jns rex.RXB rex.WR mov js outsl test pop mov rcll pushq rex.WRX (bad) rex.RXB xor mov adc add scas pop add iret push mov jo movsl cli xor insb sub mov mov sub (bad) push in (bad) je xor add lods (bad) or jae rex.WX ss xor rolb (bad) mov xor callq cmpsb push add cld (bad) push push mov pop add rex xchg xchg jl cmp out rex.WB pushq cmp push loopne scas sahf (bad) or mov data16 clc sbb (bad) sahf and (bad) add xor lods add pop jb pop cmp xchg add (bad) fwait jbe xchg and add xchg (bad) fcomps xchg (bad) fmull int ficom xorl imul (bad) mov and (bad) orb (bad) int rcll add xor ds (bad) rex.WRXB sub add pop mov jnp out callq (bad) stos (bad) mov in loop (bad) pop (bad) add jb pop or (bad) push sti movabs mov add sub shr jg fsts outsb and jrcxz lahf mov add sbbl lock rex.RX jg or insb xchg add retq cmp add push int sub add adc sbb in adc sahf fcos sub sbb scas js out mov adc rex.RB mov and rcr xchg cmp in mov jae cs (bad) add xchg stos cmc mov setp shll adc mov add fdiv repz or mov pushq (bad) (bad) cmc (bad) sarl or imul mov (bad) jno sbb fiaddl sub rex.RXB jle mov insb hlt movslq pushq data16 jb (bad) stc clc sahf pushfq cmp setl lods subl roll or pushq cmp pop cmpl pop lods cld (bad) fsubrs lea (bad) sbb test (bad) out cmp fisubrl (bad) mov loop (bad) jrcxz test ficompl mov or xor stc add (bad) xchg lock test popfq pop (bad) mov xchg leaveq rex.WR add retq (bad) jno cwtl pop add cld cmpsl test xchg pop lods and test pop add insl jbe scas rex.WB (bad) push rex.WR lock and sub jns mov lock je outsb cmp jle shll rex.WRB cmp (bad) cli cwtl data16 mov adc mov or outsl rcrl ss mov movsb push iret and or sbb loope sbb mov ja sbb mov test xchg mov test xchg adc xchg (bad) push insl adc adc or outsb je cmpsl cmpsb jrcxz sbb gs (bad) rex.R (bad) movabs and rex.WB rex.X xlat push (bad) fs jbe xor fdivrs rex.WRB or ja,pt pop add jg cmp cmp (bad) (bad) add mull cmp xchg rex.WRX ja outsb and repnz (bad) jl in lods mov add pop pop adc xor push imul xchg clc movabs cmp and cmovle mov xchg or rcrl jbe or (bad) rex.WRX cld jne rex.WXB pop push mov xor (bad) jg push leaveq adc out movabs (bad) xchg lahf fcomps (bad) in stos xchg add xchg rex.WR (bad) (bad) xor cmpsb gs (bad) mov js mov (bad) (bad) xchg pop jg xor mov (bad) mov push lods mov (bad) jnp (bad) lret rex.WRXB and int jnp xchg jb movabs lret xchg sub fnstsw (bad) pop (bad) rex.WRX xchg jo adc cmpsl pop neg stos cmp or push lret movsb cmp push jae adc imulb test sbb jbe out sbb sbb (bad) stos xchg mov and cmpsl add sub (bad) jrcxz js adc push pop fnsave (bad) std outsb lock hlt jge lods mov (bad) imul rex.WRB repnz xchg sub pop callq out xor jmpq out cmp (bad) hlt add outsb orl cmp mov callq iret jo rex.WR rex.WX jnp lods adcl cmp vmovaps cmpsb xchg jbe xchg mov xchg mov cmp jns rex.RXB jb pop push jo xor lods mov push pop fsubrl jb cmp push jnp mov out xor fisubrl out cli (bad) in imul mov rex xchg and fimull jg rex.X pop mov jrcxz sti rep scas mov jge mov jle add mov out xorl cld jl adc sarb movsb rcll (bad) push roll (bad) xor fild lods cmc shrb pop sbb (bad) pop mov retq add xchg rex.WRXB jp movsb popq pop pop add pop cli xchg mov pushq lret jg rex.X add fisttp add lahf adc rex.WRX xchg fstps add pop cmp hlt cmpl or jl repz rex.WRXB mov mov loope out out adc jne push out jbe jg push sbb add pop out cmovl pop mov jl push jmpq jb jge pushq je rol xchg adc cmp xor jg out or or add xor add imul decb (bad) jo out (bad) sahf push (bad) mov rex.WRXB jge sbb cmpsb adc fs stos in sub outsl (bad) (bad) xlat (bad) lock out sti ja mov (bad) xlat cmp adc jge (bad) mov (bad) mov gs loop ss stos xchg scas repz rex.RX mov sub jle mov pop (bad) cmp pop xchg insl rex.WX adc outsb cltd jmp rorb js pop sub fildll in test iret rex.X xor pushq (bad) cmp rex.WRXB movsl outsb mov adc scas in (bad) cmp mov xchg (bad) adc adc retq (bad) je enterq (bad) or pop cmc (bad) je divl (bad) xor or sub jae mov jle rex.W (bad) or add fadds rcrb lret xchg pop jle cmp pop pushfq rex.WRXB mov stos mov outsl test xor add mov pushq sub xor pop pop and jg sbb push xor or sub jg ds mov jmp add frstor xor add (bad) mov add rex.R movslq add out (bad) mov add clc cmpsb retq mov fwait ss fcomps movslq (bad) mov (bad) (bad) cmp cmp mov add xor cwtl xor stos xorl pushq jle rex.RX fmull out add pushq (bad) add rex.WB add loopne icebp (bad) mov or add mov xlat out add repz out xchg (bad) add sub xchg mov jg rex.RB add pop fisttpl add not shl fcompl enterq es (bad) pop add rex.RXB add (bad) test mov rex.RB cltd xor fildl rex.X (bad) sub lods rex.WRXB rex.WR divb (bad) std gs (bad) (bad) hlt and add pushq in outsb mov add (bad) callq add (bad) mov mov sbb jae mov cs (bad) xor movabs push add (bad) jp cmp pop cmpsl jae mov rex.RX cmpsb cmp insl enterq (bad) lret add lret add (bad) rex.X mov loope or or add (bad) mov in clc es out jno sub nop sub push xchg cmp mov cmc mov popfq outsb mov (bad) sti cltd push xor je xchg addl sbb callq add adcl out rex.B (bad) int fs jne ds loop cltd mov jnp (bad) mov popq (bad) enterq outsl mov jrcxz sbb je mov cwtl xchg ss add jl push add stos jo test callq jrcxz test rex.WXB mov js xchg loopne pop add sub (bad) fisubrl push (bad) rex.RX or mov icebp xchg (bad) iret cmpsb cmp cmp rex.RXB xchg (bad) rex.WRXB imul loope mov xchg cmpsl pushq rex.WRB (bad) (bad) jns (bad) sbb or repnz xor sahf mov cs jg jg rex.W lock (bad) mov (bad) jp cmp fild in jge sbb js cwtl mov adc out insb xchg xor adc pop cmc xchg lock and jno (bad) push add scas rolb (bad) icebp out and rex.B movabs fcompl (bad) (bad) jb gs setg movabs rex.W in mov pushfq or imul callq ss je cs scas add xchg add push retq pop addb pop leaveq roll fldl xchg int3 imul pushfq sbb movabs in scas loop int (bad) rex rex.WX xchg int3 add or imulb jp rcrb or push repnz or jl addl xor (bad) jmpq (bad) push push xchg in roll jb mov or add rex.WRB (bad) xchg (bad) (bad) xchg shlb xchg jp xchg (bad) xor (bad) pop clc (bad) mov (bad) sbb pop push test add adc (bad) rex.WB mov sahf retq xor test iret stc add jle push add shrl es stos jg mov cld lods (bad) adc sub sub add (bad) push clc test adcl nop mov movslq xchg mov xchg add addr32 push movsl jns add cmc adc data16 cli rex.WRXB hlt mov ss mov jmpq test (bad) jbe rex.B (bad) push rex.WB rex.R incb xchg (bad) cmp stos jle push nop or std fsubrl movslq push push cmp movabs lods xchg lea jbe movabs fsubl jle movabs rex.WXB cmp (bad) (bad) xor mov movsl rex.X jb jg sub int3 (bad) jb test fldl add jp adc xchg mov rex.R (bad) lret or push and add and stos add mov rex.RB rex.WRX add jae pop xchg xor add rex.WX rex.RXB fs movsb pushq roll mov jle or (bad) outsl xchg xor scas rex.RX mov in insb (bad) (bad) push mov es xor add rex.WRX (bad) cwtl sarb fsubr sbb and icebp xchg scas and mov (bad) out nop test sti mov xchg add rex.B rex.X add jp cmpl cwtl mov push jle or movabs (bad) rex.B rex.WRX movabs mov or (bad) and stos fnsave jmpq lods xor outsl rex.B lret adc cmpsb test pop push rex.WRB (bad) rex.WB rex.RX push stc mov jmp (bad) add fldenv cmc xchg (bad) int3 or test rex.R rex.B xchg and jb add mov mov xchg repz mov jbe mov mov mov lret retq (bad) fdivs repnz and lods add sub fiadd (bad) mov xlat movabs sbb fwait mov jle xchg (bad) sbb mov mov add xor sbb xchg repnz lahf or sbbb mov add pop and stc int add rex.B movabs adc add and retq addr32 callq loope xchg cltd mov ljmp mov xor sahf clc scas popfq add test add mov rex.WX (bad) xchg mov add or or repz or fistpl mov add mov xchg add subl xchg add (bad) jmpq add fisttpl cltd stos ja mov adc jmpq xchg (bad) jne mov add clc outsb incb (bad) (bad) add adc sbb (bad) cltd repz mov mov jns pop fiadd movabs mov jg add movslq hlt mov cqto add rcl pop push movslq jbe int3 lods cld adc cli add add stos push add (bad) sbb sub rcrb mov and movabs rex.WRXB xchg sub je rex.X pop xchg rex.B adc (bad) cltd rex.RX add xchg jb rex.RXB or lret xor or mov iret hlt xor shl mov rex.WRXB push (bad) stc rcr (bad) jle lods and cmp jae rex.RX jns mov add orb loop mov xchg or ficomp rcr (bad) mov sbb idivb jne rex.WRX pop sub movabs pop hlt (bad) testl push hlt lods leaveq mov xchg int or testb pop adc jbe retq shrl std (bad) ror in (bad) jmp movabs scas rex.WRXB pop sub jo xor mov mov pop outsb vunpcklps jl add rorb add lret cwtl out sahf int3 xchg xlat fstpl cmpsb lods rex.WX jae mov fadd add sbb fstpt int (bad) mov (bad) jg mov (bad) jmp retq je mov add (bad) fwait (bad) pop pop pop iret push (bad) or jl (bad) jns callq fsub out rex.WRX rex.RX cmp or jle xchg lock shr movabs rorl pop mov push notb (bad) mov sbb add mov ja push in (bad) pop sbbb pop xchg test outsb pop pop sbb cmp pop (bad) in xchg out test (bad) jb mov adc pop (bad) (bad) outsl pushq mov cmp mov mov js or rex.RX subl pop cmp mov cs loopne mov es jg (bad) callq pop movl (bad) fs je (bad) mov add (bad) adc (bad) mov rex.X (bad) loop mov mov rex.WRX cwtl bnd movabs adc pop cmc mov sti add pop mov xchg clc xor cs jge (bad) mov sbb xchg out jle xchg rex.B jnp (bad) std (bad) jp out in mov outsb fstpt xlat jno rex.XB jnp js (bad) push movabs add mov rex.W jg jp je and add add (bad) out cmpsb jae xchg stos cwtl movslq iret loope in cmp add lock data16 sub add int3 int xchg fadd gs xchg mov mov js lahf decl xlat rex.RXB (bad) (bad) sti jae lods lea and jns leaveq outsb push add shll or jae push jg jl sahf add (bad) cmpsb xor test adc ds movslq (bad) mov jp jp cld mov outsb retq add cmpsl (bad) mov rex.WB pop int3 lret fsubs pushfq repnz rex movabs test mov pop fadds rex.RX icebp mov lret rex sti pop ss add in cmp movabs cmpl rex.R callq adc movabs rex.R xor or or divl (bad) xchg xor xchg mov fcmovnu xor int cmp mov add cld ja mov add (bad) popfq mov mov insb rex.WRX rex.RXB mov and rex.X jrcxz pop jbe or xchg sub mov jns cmp cs loop in mov mov fstl (bad) movslq sbb (bad) add (bad) iret popfq jp push jg adc xor rex.WX xor verr in add (bad) stmxcsr (bad) (bad) (bad) mov jle mov mov or jg icebp and sarl (bad) jge (bad) (bad) (bad) cmpsl (bad) mov iret rex.WB rex.WRXB (bad) mov sub rex.X int pushq xchg fistl jns push adcb stc mov cmc test (bad) jb push movabs (bad) add xchg cmp jbe retq sti fwait xor in push jmp fisubrl movabs std jae scas cmp mov js retq fwait add cld sti stos rex.X rex.X (bad) mov xor add mov fmull loopne (bad) mov sar testb xor rex.WXB xchg and pop jle jns pushq in jb movslq stos ficompl add jg rex.WXB sub mov enterq jns adc xchg push jg (bad) (bad) pushfq mov jge mov outsb add test mov xchg rex.W add push lahf push push imul (bad) out mov pushq add movabs jo xchg jno scas mov in cli (bad) fs iret mov jg sar test (bad) jnp push xchg xchg rex.W add add add jns jmp callq and in adc pushq jmpq rex.WB fwait outsb rolb push lock pushfq add lahf data16 adc mov jbe sbb or repz fnstenv adc or rcl cltd lahf push jl mov jle imul sbb mov test jb adc outsb stos jmpq loope jl outsb xchg adc movslq (bad) js jne out rex.WX enterq test push jb cmp mov test fcoml add sub rorb movabs lods pushq loop xchg icebp insl movabs retq jp fidivrl sub out rex.X jmpq or (bad) leaveq and jle (bad) jp lret pop je sarb rcll or fs (bad) xchg jb jne pop xor cwtl jle xchg mov (bad) jrcxz pushq mov pop sbb rex.XB movabs iret test rorb movsl add xor and (bad) xor add test rex (bad) and cmp shl xchg ja jl jge sub mov xor xlat (bad) add (bad) imul (bad) ds jns cmc sbb add adcb jnp rorl xchg sub (bad) mov loope (bad) sub add rex.R movabs cmp cmp (bad) movabs fistpll in pop mov pop rex.X xor jae jnp stos jb and (bad) lahf xchg jge stos xchg movabs or movabs jne xchg enterq (bad) sahf rorl rex.W jg frstor outsl data16 and insb and pop jb jg jns mov xchg callq and (bad) xchg cmc add nop pop (bad) cmp pop decb test sbb and stos add jno pushfq fistpll add scas lret pop add xchg (bad) (bad) jns out clc (bad) add sub mov int3 sbb xchg insl (bad) add and add sbb repnz xchg movl retq jle lret (bad) pop mov stc cld hlt popfq or pushq add movsl pop lret add (bad) rex.WRB outsb sub sahf rex.WXB retq pop pop mov je or and loope retq and xacquire add (bad) jg xchg (bad) xor out popfq pop add jo test mov cmp add pop mov test mov (bad) sub lods rex.RX xchg retq sbb push fisttpl sbb rex.WRXB add mov xchg add movabs iret test mov in (bad) pop (bad) (bad) cmp ja mov cmp mov jle sbb fwait add repnz push xchg add mov imul add jmp testl mov cmc in movsl xchg mov (bad) mov clc rex.RXB scas es leaveq (bad) rorb pushq jb mul mov sahf movabs mov sahf xchg add std iret stc (bad) pushq mov jae rex.RB repz add rex.RX loope pop xlat add pop (bad) movabs fcmovnb add jle pushq cmp push sbb push adc jg pop add shr movabs (bad) shll xor cmp (bad) test nop jb clc cs add cwtl scas mov sub jle jle (bad) cmp xchg (bad) (bad) jg outsl add mov (bad) xor (bad) fnsave addl sub add fiaddl adc (bad) scas jo cmpl sub fstpt iret movabs add sbb (bad) in rex.RX rex.WB repnz jno sbbl sarl xchg push rcrl jmpq stos (bad) mov jmpq loope test mov jne (bad) jo xchg or es sbb negb or add adc scas rex.RXB test jb (bad) loop es pop jns xor loope outsl add test mov pop jo or mov cmp ds (bad) outsb add insb mov xor and mov pushq adc mov (bad) test movabs imul outsb mov cmpsb scas xchg iret sub (bad) mov sahf cmc cmp rex.WB (bad) xchg sub rex.WX movsb cmp (bad) sti jns sti js fcompl (bad) popfq mov je push (bad) ss movabs lahf int imul xchg mov mov repnz xchg xchg ss lahf jge push jmp adc push retq pushq sub movabs sub jo fiaddl jb lock movabs callq test and mov add push add pushfq mov jmpq pop sbb rex.WR jmp sahf rex.WXB (bad) pop and outsl xchg cmpsl sub mov mov jb sbb xor rex.WRX mov xor (bad) mov add notb xor (bad) and imul jp,pn rex.R stos rex.WB cmp push jle jae loop pop cmp mov xor pmulhw fistp mov lret (bad) pop (bad) (bad) mov cmpsl cld insb sbb add xlat rcr (bad) fimul in scas and (bad) sbb rex.RX or and mov test fistpll (bad) cmp pushq imulb rex.WRB (bad) insl xor cmpsl jg and scas lea lods (bad) shr rex.WB in xor sarb rex.RB cmp jl rex.WXB rex.RX add movabs stos mov mov (bad) rex.WRB and out iret movslq xorl (bad) mov mov add (bad) mov jno (bad) cmp cmpsb cmp cmp sbb je pop cld or cltd cmp (bad) enterq cmp jp fcoms int3 sbb jle insl rex.RX and jmpq ds mov and pushfq (bad) (bad) (bad) mov fdivrs (bad) add push imul jb rex.RB push stc stc and add jge (bad) xor add xchg test sub repnz pushq clts (bad) out test jl mov add mov ss add (bad) out cwtl lock outsl jbe (bad) push xchg sub add loope jge lret leaveq (bad) (bad) push pop jp (bad) cmp mov pop xor add fwait cmp rcrl pop xor mov rex.WRXB or loope out out cmp adc jg adc ds popfq out leaveq and movabs movb add movabs outsb jp (bad) rex.WRB (bad) rex.WRXB int or ja pop (bad) mov (bad) and test cmp rex.X (bad) js (bad) jae mov sub clc mov sbb (bad) cs outsb jg enterq xchg jbe xchg fwait mov xchg pop or cmc jle jno (bad) sbb (bad) pop insb jne add pop leaveq and adc sbb rex.X lods out xor in and loope cli out or outsb rex.XB rex.RB sarl push es roll or (bad) movslq mov testb movabs or rex clc mov rex.WX test fstpt (bad) xchg cmc fs jg pushfq xorb movabs loopne add cmp popq in cld repz adc rex.RB adc (bad) (bad) cmp je cmc lea rex.WRB add (bad) jg xor pop sbb out je mov in stos icebp add cmp cwtl jbe or mov jp test or mov (bad) pop hlt insl repnz xor sahf addl cmp movabs add ss (bad) or pop sbbl cli add jrcxz rex.XB hlt pop negb fs fistp xchg (bad) fidiv movabs rex.RB mov outsb jp pop mov mov and mov out xor iret mov jo xor ja mov movabs xlat popq add ss push jge add add pushq adc (bad) mov loope (bad) shrl je,pt jle mov test adc ja (bad) out add or rep addr32 xor cmp sub scas jle sub shrb pushq (bad) mov push and imul mov callq pop (bad) jnp jle sbb cmpsl mov cmc nop (bad) add mov cmc js or loopne rex rex.WRX xchg rex.X cmpsl xchg pop sti rex.R add jl rex.WRB lea add rclb rex.X rex.WRXB pop andl adc pop jge movsb insb add jle je sti pop or add cmp xchg (bad) fwait cmpl or or pop repnz rex.WXB sbb fcomip andl fldcw push movsb std add xorl xchg pushq test xchg rex.B or je jl insb sti fcmovbe (bad) (bad) movslq (bad) leaveq rex.WXB lahf je pmulhw sub popfq mov xchg sub retq scas addr32 imul add ja stos xor pop xchg xlat push cld adc xor js pop sub imul (bad) lret (bad) xor pushq mov jp lret nop movabs fldl test xor and rcrl xor mov jg mov (bad) movabs ds sbb in add cwtl mov nop outsb mov jle cltd jns fwait xchg adc mov rcll adc cwtl mov gs or mov movslq xchg cmp test xchg mov insl push (bad) jnp jge mov outsb sbb cwtl ja cli je pushq jo (bad) xor cmp out (bad) imul popfq (bad) jl pop faddl (bad) or sbb jne mov (bad) or pushq pop enterq xchg lea cmp repnz xor rex.WRX sub retq cs or repnz push retq jle popfq jmp icebp (bad) jl (bad) xlat outsl sti loop cmp cmp or jo jg ds pushq mov cmp (bad) outsb (bad) mov insl ss test and mov rex.RB lods and pushq stos shrl add fwait rex.WR rex.B cmp (bad) sbb pop in ds hlt add jno movabs mov fidiv loopne add rex.WXB (bad) jo (bad) cltd cld add (bad) mov rex.WRXB jbe movabs mov in cs add sub sbb (bad) add add faddl iret mov (bad) add (bad) sbb popfq rex.RX gs add pop cmp push loopne iret nop sub pop (bad) jrcxz or clc shrb pop shrb xor jg jle test mov (bad) xchg (bad) popq jbe,pn push mov and fwait pushq rex.XB add (bad) or sti xchg and push sub (bad) movabs add lret push sub lods sub ss popfq mov mov testl jb rex.XB pop adc loop nop outsl retq and outsb adc push mov int adc test lret sbb xor lea pop cmp lock loopne gs flds mov cmp movabs (bad) rex.W (bad) push jg icebp sub cmp scas or jl sub mov gs sti (bad) test rex.WRX cmpsl xor jp xchg hlt add pop nop rclb pop push data16 imul adc (bad) sub (bad) xchg (bad) and loopne rclb and insb xor sbbl hlt push in adcb cmpsb mov and jnp movabs lea out pop (bad) xor (bad) insl clc sahf loopne cmp shl rex.WRXB add insb outsl (bad) jo add mov jnp stc add jmpq jmpq mov loope rex.XB or add rex.WB fldl and mov sbb or cmp (bad) jns add add (bad) rcl lahf jp fidivl callq pushfq (bad) mov xchg andb out callq (bad) loope add movslq in add xchg jo (bad) rcr iret push xchg (bad) add lea (bad) bnd incl xchg mov (bad) mov jp js gs stc fldlg2 movabs add jbe pop adc rol imul subl lret popfq pop jno rex.R outsl pop cmp add sub (bad) mov scas mov scas (bad) pop mov jmp sahf fs xchg push mov add (bad) jmpq fisub mov rex.WR mov rex.WX (bad) lea sbb jg (bad) pop (bad) add lods out lret rcl (bad) rorl loopne out mov add jle jp popfq movabs xor int rex.X (bad) rex.WXB mov shll pop (bad) lea testb retq xchg movsb rex.WB loop cs (bad) iret push in pop add jle in hlt fsqrt roll add lods xchg push xor mov add adc add ficom scas mov push int3 scas xchg sub push iret mov fmul insb in cmpsl jbe add lea in jo pop adc cmp mov add jae pop jle (bad) scas (bad) jb sub testl fsubs (bad) jle movabs fwait retq xchg (bad) sbb pop xchg sti adc (bad) rex.WR push mov cmpsb jmp add sub xchg (bad) outsl adc rex.X ss jbe and (bad) imul or shrb cmpsl fadds add in (bad) rex.XB in sub rex.B cwtl pushq movabs sbb mov movslq fiadd rex.X jmpq push (bad) loope movabs xlat (bad) sbb cmp jp mov rcrl pop jle insl jl (bad) ja (bad) rex.R pop xchg pop add pop in int3 std jl cmp push (bad) jmpq jmp add out (bad) in leaveq lods rex.WX add xchg sbb scas rex.WRXB (bad) std push retq test jno rex.W movabs mov adc rex.WRX pop iret mov cmc je rex.XB jnp stc cltd es mov jo out jbe imul push rex.B in fistp and outsb imul (bad) cli xor hlt mov add and retq or rex.WB and shrl sub pop ds (bad) sbb test and sub (bad) rex.WRB rex.WR sbb lods add pop rex.WB add lods xor jae shlb (bad) cmc (bad) lret insl sbb loop movslq pop add rex.WB xchg iret fdiv repnz rorb (bad) loope mov mov rorb and lock and mov cli fs pop sahf rex.WX mov sahf leaveq shlb rex.RXB lock jne js scas or (bad) loope (bad) mov cmpb jl rex fisubrl sbb (bad) rex.WR xchg stc stos add xor rex.WB and jnp mov (bad) xor add mov stos sbb fs rex.WX callq jle mov jge mov xor add pop idivl pushfq outsb out mov retq jle fadd (bad) mov je sub push negl lret xor xor add (bad) add or (bad) out (bad) mov mov retq xor (bad) xchg rex.WR repnz or mov sbb and lods jle and fs add xor clc movabs rex.X sbb (bad) divl rex.X fsubr (bad) mov xchg add mov ja adc mov cmp repnz (bad) xor sbb and sahf sbb (bad) movabs stos outsb mov add mov mov add shrb int3 popfq jb xor xor in xor adc in jp sub mov jrcxz (bad) jbe and add pop jns (bad) js sahf rex.B mov mov sahf rex.WRB cmp mov jge (bad) or mov mov add sar push (bad) int3 add in add cmpsl int in mov rex.RX pop popfq rex.WX add xchg stos and fadds rex.WRXB (bad) gs pop jp cmp sahf jl (bad) add movabs add xor (bad) (bad) rex.WRB scas sub shlb scas iret jrcxz (bad) in (bad) test pop jp test gs mov xchg mov fildl enterq imull and mov or and fs clc mov add pop add cmp xchg rex.WX jl movabs lea sub lahf in and mov xor jb out (bad) orl fwait add imul rex.RX icebp or xchg xor out xchg sbb (bad) movl and cmpsb sbb es add push in xchg mov add mov movsb jle sahf xlat (bad) gs rex.WX lods mov add adc push cwtl xchg frstor add rex.WX sub (bad) pushfq xchg jle (bad) insl loopne retq push movabs enterq rex.WRXB jne outsb add rex jb jne push and gs xor jbe jrcxz sysret xor movslq movabs scas jnp adc jbe mov jl adc nop cli mov test mov mov rclb (bad) push jo,pn rex.R add cli outsb pop mov xchg cs (bad) test sub mov and add jo icebp rex.WXB and sub cmp and xchg or jmpq rorb insb mov adc movsl rex.WRB sbb movabs pushq (bad) movabs movabs xor or jne adc (bad) jno jg and pushq (bad) push std rex.X out rex.RB sti jge out cmp fs rex.W (bad) jmpq insl add loope outsb fnstsw jle rex.RX mov cmp cmp push add int sbb pop pushq rex.X (bad) (bad) (bad) sahf callq iret rex.WB je (bad) mov (bad) ja nop add jmp jno outsl mov loop sub (bad) cld xor rex.XB in in test rex.RX sub jb sub rex.WR outsb (bad) pop jle mov js outsl (bad) adc rex.W xchg jg ja lods sub adc push shrl xchg xor mov xchg add sub jl (bad) sahf es cmp pop rex.WB (bad) loop out mov cltd push xchg add mov orl jae fnop jb push (bad) (bad) movb mov add es sbb (bad) mov sbb add (bad) cmpsb insl mov fcoms push sbb stos push xchg mov add (bad) mov scas in mov add sub push jge and add popfq mov cltd rex.RX sbb in adc jg cld xchg jl jp test push sbb sbbl (bad) int pop push jp insb cli outsl orl test sub outsb jnp pop push mov (bad) sbb pop es xor out xchg fsub int jp add push movabs jnp cmpsb (bad) cmp pop pop sahf pop add ss enterq js rex.R fistpll (bad) adc mov or dec mov push mov xor cmp mov sub insb mov test jo push jo (bad) push (bad) test rex.R rex.XB rex.WRX (bad) insl enterq mov sbbb fnsave out (bad) pop lret pop sbb fmuls pushq clc or pop js pop outsb mov out rex.WX (bad) jnp retq jbe cmc lahf jge xorl pop sahf scas (bad) (bad) sbb (bad) and fs enterq fistp js adc mov (bad) jnp (bad) rex pop int jge stos repz (bad) xchg roll push pop mov movabs mov lods (bad) add imul outsl test (bad) lahf xchg or rex.WRXB (bad) icebp ss jns add data16 addl add out rex.R movabs push (bad) rex.RXB popfq (bad) add vorps pop ljmp pop (bad) (bad) retq (bad) add add lods andl lcall add sahf mov (bad) stc rex.RXB movabs rclb add and jns rolb and mov (bad) es add loopne mov xor mov (bad) in sbb and (bad) rex.RX mov fnstenv jmpq or out (bad) rex.WRXB fsubrl sub nop lods rex.WRX lahf pushq add std mov cmp ja rex.RX adc (bad) push insb mov mov jle and jo rex.WRXB mov or movabs jno (bad) mov jrcxz mov lahf lret imul ds clc fcmovnb xor jnp xchg jo cli sub mov sbb jae xchg (bad) fs rex.RXB pop in xchg (bad) push adc (bad) pop mov or add pop jl clc jl mov imul hlt repnz cmp stos xor adc out sub ja sbbl adc cmp pushq rex.RXB movabs (bad) lock cmp (bad) jne (bad) jle outsb jg sti fist mov lret out nop (bad) jg mov sub cmp lahf cmp int3 cmp jno xor lret rex ss jbe (bad) jns mov ds pop push mov jge adc mov (bad) stc (bad) fnstsw int3 (bad) (bad) je pop (bad) push xchg repz jmpq jb mov fildll ja rex.WXB jl retq rex.RX cmpsl incb (bad) rex.WXB add pop xchg mov sub movsl insb push shrb outsl or sbb pop xchg rex.WR (bad) movabs (bad) add rex.WRB cld jp out xchg cmp jp ja icebp jb rex.WRXB scas leaveq add rex.RX push mov callq add add sub out add (bad) (bad) mov jb movabs sahf mov push add mov jge jno pop out xchg mov test popfq (bad) and movabs add movabs callq fisubr jl mov (bad) or movabs sbb adc push repz mov jae add rex.XB cld jge push sbb loop in cmp jne outsb icebp (bad) or sldt xchg in cmp sub popq test rex.WRX cli sbb jns cmpb jle and stos add or xchg lahf fildl mov xor or movabs cltd jnp (bad) xor testl mov and mov rorl data16 rex.X (bad) movsb out xor pushq (bad) and push lahf or jle (bad) pop callq (bad) mov cmp imul fs mov in (bad) (bad) xor (bad) rex.WRB je cmp sub (bad) lods rex.WR fsubr stc and add insl callq (bad) notl ja (bad) cmovns cmp cltd ss (bad) divl mov stos xchg (bad) jle jns cltd jl in addr32 adc sub rex.RB outsb adc (bad) out (bad) imul fs fistp (bad) mov mov stos mov loope adc scas sti rex.WRX jle (bad) lods fimull mov push mov movabs lcall fucomip sub movabs cmp push pop add jns andb (bad) js (bad) xchg mov (bad) jns mov sbb movabs (bad) fist (bad) jge adc cmpsb fwait sub or push cmp xor adc (bad) fnop sti push shr pop add movl xor mov (bad) (bad) js in js add sbb add sarl rex.X mov (bad) mov (bad) push jnp jo fistpl mov loopne jg mov push mov lahf jg (bad) rex pop pop xchg stos test xchg (bad) xchg repz rex.WR adc rorb rex.RX mov push (bad) callq out xor int3 add lret mov gs and sbb cmp jb push in rex.W jne loop scas gs rex.B cmpb cmp outsb (bad) cmpsl (bad) (bad) (bad) (bad) clc add outsl (bad) pop add or shrb xchg mov xchg cmpl imul out sbb (bad) (bad) lock rex.WB nop lret es rex.RXB je xchg add imul mov mov adc (bad) rex.WX pushq jns pushq jb lea push xchg je int3 mov rex.RX es jne jge notb jno mov add movabs (bad) movabs (bad) add lret imul or (bad) jbe pop (bad) add stc sbb xor lret (bad) mov add stos add mov pop rol mov xchg xor outsb cmp push fidivl stos add loope mov add xor push test fdivr add mov rex.X lea jl rex.RXB rex.W repnz push jg xchg add insb mov or rex.XB (bad) mov add insb sbb insl cmpsl loopne (bad) out add cmpb test jle int xchg or pop add push xchg push movabs jle xchg add rex.RB rex.WRX rex.RXB sub sarl in mov cld (bad) push fs cmova push loopne or cmp insb movabs and (bad) add pop lods jb out movabs xlat mov sub and rex.X rex.WRB addr32 mov (bad) pop (bad) out jno rex.R je pop (bad) addr32 (bad) cmpb rex.X pop jmp (bad) scas cld xor jge outsl (bad) or rex.WX add icebp and add xor outsb rex.R (bad) push add in xlat jle mov divl out lods sti and and sub jp pushq mov sub loope xchg cli add stos rcll xlat xor push test jmpq rex.WRB out xchg leaveq rex.X rex.RX xchg add or fwait or scas add lret imul lahf add movsb jmpq xchg idivb retq jo addb jb and or jbe add rex.WRX (bad) movabs test idivl movsl cmp outsl (bad) sbb rex.WRB test xchg push movabs add (bad) and add retq stos loop lock mov pushq test mov lret (bad) jmp retq (bad) pop and rex.W add sbb xor cmpl enterq lret sub scas add rcrl add outsl mov mov add add jmpq pop jl xor jbe or sarb popfq rex.RB lods xchg add mov add (bad) rex.WXB addr32 push mov or lods sub (bad) je gs and jg,pt (bad) pushq movsb out jle or mov jg mov hlt es (bad) or mov fdivl fisubrl fwait (bad) (bad) sbb rex.RX and fiaddl loop push xchg (bad) or stc fs std jg push pop callq add (bad) (bad) mov jb xor or incb shr enterq jle jnp cmp xchg mov mov add jb (bad) sahf push fsts rex.WX adc (bad) mov stc mov pop pop add add pushq add imul (bad) jmpq jnp out test rex.XB mov jbe psadbw (bad) xchg sahf fdivrs (bad) (bad) mov sbb pop test xchg mov sub addr32 and enterq rex.XB jg sub shrl mov mov jrcxz add jbe (bad) sarl popq rex.WRX add push movsb lods add imul push sbb mov jp (bad) (bad) rorl add pop vmovlps xchg sbb adc outsl movsb push rex.RXB addr32 movslq retq cmpsb outsb gs sarl leaveq or add rex.WRX rex.WB rex.WR pop (bad) insb movabs add ficompl or leaveq fiadd mov xor iret in movabs and sar sahf jne add mov (bad) or add jns cmc jnp stos movabs (bad) ficoml jrcxz pop fwait mov jl js jg rex.RXB pushq (bad) xchg pushq (bad) loopne add ss xchg jmp movabs push mov jns pop or xchg iret stc fist pop add (bad) jmpq rex.WRB notl fidivrl push sbb mov (bad) (bad) add cld or jle lahf xchg jrcxz (bad) adc cwtl mov rex.WR movabs pop outsb (bad) loope jge xor jno mov ja adc (bad) decb out jb outsb rcl mov (bad) pop pushfq jns sub or add xchg out sub punpckhbw (bad) je notl (bad) add jo (bad) cwtl movslq rex.WRXB movabs retq js retq (bad) addr32 add push sub (bad) or out rex.RXB cmp jrcxz fwait (bad) adc jrcxz (bad) rol (bad) ja xchg stos jmp rex and mov jns movabs sub cmp pop stos je (bad) int movabs jno add sbb hlt outsb test mov (bad) jbe cwtl (bad) and (bad) adc icebp (bad) addr32 add (bad) mov jae lret push pop sub stos jbe out jg and rex.WRB rex.W mov (bad) xchg sbb pop jmp push (bad) (bad) mov push jp add jne jns es int3 movabs (bad) scas (bad) jb lea xor mov mov push sbb outsb sub (bad) in jb movl (bad) rex.RB jbe adc add nop mov sub insl (bad) cmp xchg icebp mov or jns out rex.WRXB jbe test sarb jns fldl push sub or push imul sbb (bad) std std outsl sub fldl (bad) jg lock fbstp jmp sbb (bad) xor (bad) sti add sbb rex.WRX fs notb mov jbe sub sbb cqto add (bad) push repnz add sub movabs rex.WX or cmp add in movsl lea iret rcr (bad) adc and cmp lock repz movsb gs xorl imul mull (bad) out add scas rex.XB mov xor scas ljmp or (bad) jg in add (bad) pop loope test mov add sub scas (bad) js add or movslq xchg icebp leaveq (bad) mov ss (bad) xor loope xchg sub imul (bad) je rex.RX add rex.RXB xor gs std mov jrcxz leaveq rex.B push lock jmp pop repnz imul test insl jl cmpsl je nop (bad) outsb jmp leaveq idivl jns in in movabs (bad) ds mov lret cli jno nop test mov mov (bad) cwtd rol xchg scas pop je mov add cli divb add sbb fnstsw (bad) mov orl push jno or loope jge out jns (bad) rex.W scas adc sarb data16 rex.WR rex.WB out lea xorl (bad) add icebp movslq and xorl iret or jg jg mov callq je lret add push add std jge insl (bad) fucomp outsb es imul add cltd mov xchg (bad) imul add rex.WX adc jne xchg int3 add sub or sbb fistpll (bad) pushfq clc add cwtl lods adc (bad) (bad) out scas jbe repz push out jns xor push rcrb mov (bad) pushq jp rex.RX jne or add (bad) mov rex.R or add jns test (bad) mov add push (bad) mov out sbb imull mov mov pop or (bad) es movsb cmpsb (bad) xor mov cmp icebp sbb (bad) (bad) jne (bad) cmc (bad) add push xor add mov mov mov (bad) fmull retq xchg stc push jbe (bad) xlat (bad) pop jg fsubrs or mov jns lods (bad) push clc jmp jne sbb (bad) outsb sbbl callq test leaveq cwtl adc imul cmpl jb lea fsqrt lods push sbb and test (bad) addr32 push stos callq js lret popfq pop push lock out cli mov movabs rex.WRX mov push outsb mov vunpckhpd add subl jle jbe pop push (bad) addr32 gs mov xchg ss mov sbb add (bad) cmpsl repz lods or test movslq retq (bad) jbe stos fs pop shrl push std adc pop cmp stc (bad) loope movabs xchg or popfq sub lret adc pushfq movsb jb pop data16 xor lods mov jmp and fisubr fildll pop rclb stc jge imul add fs mov mov (bad) es fnop or (bad) sbb sub xchg push (bad) cmp js add adc sbb out (bad) add insl (bad) xor (bad) pushq fs xor popfq pop lods push jo adc rex.WRX movsb mov loope pop (bad) or xchg fsub stos rex.WR sbb adc jl jg or and pushq addb jge add fnstenv fistpll push hlt cmp and rex.WR lock or jl cwtl jg rex.B cmp xchg in jmp jp incl divl (bad) addr32 or cmp (bad) pop loopne xchg cmpsl mull movsb push xchg (bad) in outsw fiaddl fsubrp mov add mov subl mov ss mov and xor mov test insb (bad) xor xchg push mov test fwait mov xor mov (bad) sub popfq insl in sarl xchg repz gs or cld mov sub mov rex.X fiaddl jle sbb rex.R notl add orl jp sti int in (bad) rex.W push cmp xor xlat add push or jnp sti (bad) jae xchg (bad) insl (bad) and fcmove rex rex.B in xchg push add retq xchg imul rex.WXB pop andb jge es sub mov (bad) sahf jns mov (bad) movabs jp xchg mov pop (bad) test fidiv insl (bad) pushq fmull (bad) lahf and xchg sub adc mov loope (bad) jp adc movabs or addr32 (bad) mov or add xor pop mov (bad) in pop or xchg and add scas js sbb push rex.W test jno sbb lods (bad) incb lods stc add pushfq add (bad) jae fwait lea addl (bad) and (bad) stos clc repnz xchg add sub mov jle nop jno in or rolb (bad) cmpsb sar rex.WR and jg mov mov leaveq mov es or xor decl add sbb pushq int mov mov rex.RXB movabs jrcxz (bad) pushq (bad) fs movabs sarl (bad) sbb sarb outsb or push js pop sbb adc clc pushfq xor or fistl pushq add movsb (bad) andl or movabs cmc push xlat loopne fbld sbb pop add sti jbe je test add loope mov movabs sbb out xor rex.X sbb jae (bad) rcll stc rex.RX lahf test or cld pushfq rex.RXB in jle sub mov (bad) (bad) addb std add mov jb jno rex.WB pop rex.WX mov rex.WRB (bad) int3 jno xor test cmc jno add iret mov cmpsl nop xor (bad) jbe es pushq stos (bad) cld movsb andb or xchg imul stc imul sub add sub jne (bad) fnstcw ficom addr32 loop xchg cmp popfq (bad) (bad) adc movsb jg rex.RB mov pushfq insb cld jp xor clc fs gs (bad) addl xchg xor cmc rex.WRX sarl pop jne cmpsb rex.W mov (bad) pushq pop test sub (bad) xchg rclb ficom fnstcw popq test jne rex.B and mov enterq mov xchg rex.WRB adc (bad) clc rex cmc (bad) ja add lret pop (bad) and lock xlat add mov lock sbb xchg mov cli (bad) lahf sbb movl in rex add and add sub add cmpsl retq pop sbbl or add (bad) repnz and push and mov incb or addr32 add push rex.WB icebp rex.WR adc xchg loop,pt xchg jrcxz (bad) in add pop rex.RB add mov out out mov add sub xchg xor or stos rex.WX (bad) (bad) (bad) iret add fstps add add andl (bad) jo xchg (bad) pop mov lea or add addr32 (bad) loope sarb add cmpb rcrl sbb add or (bad) xchg mov out or add rex.XB sbb jnp add xlat add mov jg rex.WRXB push out (bad) and lock movabs adc cmpsb pop jb (bad) sbb add lret rex.WRXB adc shr mull retq push xlat hlt push out out movabs pushfq es stos add adc scas xchg rex.WRX add jg and mov sti int3 rex.WB (bad) mov out xor jb jle (bad) mov add sarl jns (bad) mov scas jmpq cmp adc add push or mov lock or xor cmc or mov sbb push (bad) jl xor jp push test decb add shrb test rex ss xchg xor mov fld1 rex.WB pushq out je sub fnsave (bad) (bad) rex.WXB (bad) adc es popfq lret jrcxz mov rex.X rex.B roll mov fs cmp in fildl jns (bad) leaveq and lods lret (bad) add cmpsl mov jp addr32 cwtl jmp mov add jmpq rorl jne rex.X movsb jrcxz addl rex jbe add imul sub xchg in and stos add pop push mov adc movsl callq (bad) and fyl2xp1 xor sbb rex.WB jo add sub sti rex.RB (bad) rex.W add sahf jle add pushq out (bad) jns xor jle (bad) mov pushq pushq fwait mov mov sub (bad) cs xchg test rex.WRX mov js test pop movabs fildll nop sarb xchg leaveq out xor jl xchg sub and out add jle rex.RXB fs xchg lret int3 push rol cmp add add push movabs movabs gs fwait sahf popfq add (bad) and out adc rex.RX repnz add je insb out adcb (bad) idivb sti test sahf (bad) jb movsb rclb mov add (bad) pop (bad) add (bad) add lret add jb pop fildll add cld loopne js cmp add movsb jp mov add outsl xchg jbe sub sub mov adc ss (bad) clc add (bad) add adc rex.R loope add (bad) push xor shrl xchg jb (bad) in jne (bad) push (bad) (bad) mov data16 fnstsw (bad) push out insb scas push add outsl pop add pop mov xor push push leaveq loope lahf (bad) jmpq movabs adc scas (bad) (bad) movslq repnz and clc (bad) stos lods in xchg (bad) sub (bad) (bad) mov and mov lods in cld push imul rex.WRB and xchg (bad) testl (bad) push incb outsb (bad) (bad) mov dec jae jo (bad) in insl in in fnop (bad) movsb scas std rex.X rex.RB sets mov mov sbb lock sbb movsl jns lods iret cmc lahf retq or (bad) rex.WRB sahf sahf mov rex.RB (bad) rex.R rex.RX outsb jg or jo (bad) push jbe sub lock jp cmp je push (bad) jle (bad) (bad) fwait or (bad) lret sbb shrb (bad) jge (bad) (bad) adc rex.WRX mov mov sbb adc sub push push xor xchg mov (bad) icebp cmp imul pushfq or sbb push sub std cmpsb or (bad) sbb iret mov (bad) sub add (bad) (bad) mov pop jg or jle movslq jmp jl (bad) xchg rex rex.WR push (bad) jo rex.RXB in adc cli div mov jrcxz mov add push add (bad) and je jrcxz mov jl outsb (bad) jno lret in cmp jns (bad) lea (bad) xlat cwtl cmp sub jmpq sub and push lods sbb jge adcb xchg sbb ficompl jnp rex.XB lock push or (bad) add out adc insl mov fstpl addr32 rclb ds out retq ja (bad) fild adc or (bad) push xchg cld jbe (bad) lea es push rep imul cmp shrl add add adc outsl xlat retq iret adc cmpsl jl rex.WRB and adc jle (bad) pop mov js add (bad) mov pop (bad) pop fsubl mov add lea xchg pushq imul loopne and pop add push sub imul add out or jae jg in out sbb mov (bad) (bad) icebp push clc shlb pop jb push in leaveq fisub mov jbe rex.XB scas add add sbb rex.WRB add test xor leaveq jne gs adc rex add rex.WX rex.WRX jge mov sti cmpsb (bad) addl test sub add rex.X and cmp xchg mov cmc orl sarl sub cmp stos lret lret add fwait out sarb xorl jae test cmpsb mov pop lods or scas xchg loope movabs fwait jg rex.WRXB ds sub rex.RX sub addr32 rex.WB sbb pop jrcxz (bad) jne xchg mov add rex.R add out sbb or mov rcll mov push rex.WX or push xrelease loopne xchg and insl movabs add callq fcmovu cmc shll (bad) add xchg (bad) fsubr or in pushq imul sub lret popfq xor lock jge rex cmp xchg pushfq jle xor mov (bad) (bad) outsl rex.XB cmp in pop fstpt lahf sub std (bad) rex.X cwtl sub lods stos sub cmc and outsb (bad) (bad) sub pop jbe pushq (bad) xchg out (bad) pop (bad) or mov mov jg in outsl adc (bad) js mov insl test xchg jbe jae (bad) jo shrl (bad) sarl sub jb (bad) adc (bad) sbb rex (bad) jge jrcxz out sbb (bad) cvtdq2ps ss and push insl leaveq nop stos stc xchg lods push andl push retq cmp (bad) jo xchg callq leaveq ja shrb ds je fwait pop data16 push mov callq push (bad) jmp outsb (bad) xchg mov cli fwait data16 retq pop jl cltd and sahf div mov fdivs and rex.XB mov (bad) cmp insl imul retq clc jle rdpmc and xlat adc retq jle pushq (bad) jne jl subb sahf rex.WRX or sar repnz outsb out outsl nop (bad) fdivr gs (bad) jne or je and (bad) sarl cmp jl lret out sub (bad) rex.WRB sti push (bad) test in mov (bad) adc pushq lret jne cld fstl jl repnz xchg fdivrp xchg lahf insl (bad) (bad) jmpq out jne enterq (bad) jo icebp jbe outsl repnz (bad) jrcxz popfq rex.WRX cltd sub subl rex.WRX jbe jno sbb (bad) rcr insl or rcr out adc stos cwtl rex.RX or (bad) and sahf mov push vmovsldup pop (bad) fwait rcll js (bad) adc movabs pop cmp scas cmp (bad) test rolb cli and (bad) add movsb scas rex.WR rex.RXB cs (bad) (bad) stc add nop ss xchg (bad) mov out add imul icebp push (bad) jle pushq sub cmp jrcxz leaveq rex.WRB testb cld shll adc xor test (bad) (bad) pushfq add mov sbb rex.B sub add push std mov xor in (bad) xchg test add (bad) movabs (bad) fidivrl sbb lock or fmul sbb mov (bad) rex.W (bad) pop add (bad) mov lahf rex.B verr jp repz (bad) jbe mov stos rex.WRB and (bad) (bad) (bad) lahf in std scas jae jmp cmc xchg or add mov xor and cmpsb leaveq jle sub iret mov mov xchg fldl ja cmp fild xchg sahf and mov pop add lods cmpl out push or stos popfq in scas pop sub push and cli rex.RX push rex.RX jg push (bad) (bad) jae (bad) popfq cmpsl (bad) mov rex.XB test rex.WRXB add movsb mov mov rex.WRX cmpsl lods cmp pushq (bad) rex.WXB mov mov movsl sbb rex.RXB mov mov rex.B fmulp cmp in push (bad) rex.X mov loope jle add scas lahf cmp loop pushq mov and mov (bad) rex.WX or (bad) and in (bad) cmc test (bad) jg cmp mov nop in pop mov jp hlt and lret (bad) push stos js (bad) jb mov xor xchg add mov xor mov outsb mov mov mov lock jrcxz jbe ss jo cwtl mov sbb push and in lret add cli xor repz rex fdivs (bad) mov sbb lods add or mov cwtl push xchg movabs (bad) jl mov xchg push fwait mov jmp add xchg adc mov fildll mov fiaddl xchg jle sbb (bad) cld add push movsl adc icebp or rex.R scas cmpsl push xchg bnd rex.WXB pop out in and rorb or js insb (bad) fdivrs cmp pop adc out jle out add xor insl rex.RB jno int3 imul (bad) push (bad) xchg (bad) mov lock pop ror fild idivb xor scas pop movsb jmpq jp loope mov jns sbb push xchg lock mov add ds push xor movabs rex.RXB push cwtl cmp pushfq jo roll jl xchg and pushq (bad) notl (bad) xchg fdivs loop mov xchg fistp shlb cmp sbbb loope jo (bad) xchg int (bad) out pop add jle lahf xor mov negb (bad) mov jl mov adc scas sub (bad) hlt pushfq jbe xor xlat in jmpq js (bad) mov xchg jl adc xor (bad) mov rolb xor out pushfq movslq jrcxz add je jle xchg inc (bad) in fbld xchg outsl mov jrcxz movabs xchg sub add cli in jne jbe push imul leaveq jo (bad) push enterq lods addr32 callq sti sub cmp lahf outsb (bad) insl jp jmpq sub rex.R push sbb jmp mov jnp xor pushq ljmp faddp jnp sbbl fmull (bad) stc (bad) rex rex.RB stc jle xchg adc (bad) push xor pop lea (bad) cmpsb ss xchg callq shll loopne (bad) out mov sbb rex.RXB adc xchg add repz xchg xor sbb pop movabs push and mov xor stc movslq add and rex.W adc jb mov xor loope mov and mov xchg lret jg sub lods (bad) xor fsubr pop pop xchg (bad) push loope movabs sbb (bad) xchg jge orl pop push shrl fistpl and sub xchg orl cli ja sub out or or jno add jp test jo adc pop xchg movabs lods mov add movabs int mov jb jbe mov outsl cs xchg jb int (bad) add fldenv (bad) loop rex in add movabs add adc cli add (bad) fist test xchg incl mov repnz sbb adc retq jg mov xor xchg mov stc xlat stos clc incb xor in jp test in sub mov (bad) (bad) pop add jl and add jp add sbb (bad) jp lock mov add rex.RXB insb rex.RX add push mov or mov fild cltd sahf (bad) insl mov push sbb mov out enterq pop (bad) mov (bad) rex.X jns movsl jg rex.XB mov outsl pop (bad) jb jbe pushq lods xor mov (bad) mov add mov jmpq lea (bad) xlat pushfq and mov sub (bad) cmp imul jbe or mov movslq stos xor mov cmp add xchg fs test jg (bad) mov in mov std (bad) (bad) imul add (bad) jge or add (bad) test xor fidivrl test rex.WR xor pop jg cmp rex.WRXB outsb rex.RXB rex.WXB sbb adc lods mov and fwait adc mov (bad) sub and add rex.WXB and fcoml insl (bad) push add mov sub jg (bad) (bad) cs rex.WB add nop divl sub (bad) mov movabs xchg out idiv xor fs sbb fcmovnb or jle lret ja pop rex cmpsb je jrcxz add scas (bad) sub cld je pop xor pop add cmp jno xchg rex.RX jnp mov xchg movsl jb test jg lods and insl adc fldt pushq je in rol or add cmpsb and add mov fwait jle lret popfq mov cs stos je (bad) add and cld mov mov (bad) pushq (bad) rex.WR movabs out sbb mov add (bad) jl add add mov in imul xor or lock cmp pop xchg mov sub movabs (bad) in sub cmpsb sbb cli jae out stc fsub and fidivr and and rex.WB (bad) out mov movabs sbb imul or mov push add xor pop add rex.WRX movabs je frstor ror cs out mov and (bad) stc xor push sti jp rorb push mov cli ja mov cmpsb xchg int3 fs mov stc (bad) and (bad) rex.W push (bad) (bad) mov sbb movabs (bad) loope fimul mov adc hlt pop faddl pop mov sbb jne (bad) rorb imul and hlt rex.RXB jrcxz (bad) in mov js rcrl (bad) ds lock cmc test movabs jb push rolb rex.WRB out push icebp mov pop (bad) scas rorl int3 (bad) sti rex.RX and jbe jbe cld xchg int3 jb leaveq mov xor pushq vmread pushq outsb cmpsb int rex.WRXB (bad) mov cli leaveq shrl cs shrl sub test push cmp (bad) insl jno (bad) rex.RB data16 faddl mov jae (bad) cmpsl iret rex xor (bad) pop (bad) jg sbb sub (bad) and cmp lea (bad) mov retq lods ss ja push mov mov jp push add stos rex.WRXB fisttpl (bad) rex.WRX (bad) (bad) cmp rex.WX (bad) jrcxz lea and push out sbb rex.WB rex.WRB rex.WX xor (bad) std rex.WB (bad) mov push or xchg int3 jo insb cld cwtl fs and je add jae jrcxz rex.RB (bad) mov shrl test shr es pop in add es rex.RB mov rex.WRXB xor rex.X je movabs jl (bad) (bad) addr32 cmp xchg or mov sbb pop xchg mov andl adc sub push (bad) (bad) sarb (bad) and rex.WX xchg jb xchg rex add xor rex.RB icebp sbb out shrb cld rex.W mov fisub outsb pushq xchg ficoml cmp xchg mov jrcxz pop sub (bad) add push adc (bad) movb mov movabs shufps movabs rex.W std popfq (bad) jge rex.WRX rex.RXB add (bad) (bad) jb fwait cltd (bad) imul pop loop push (bad) add sub rex.WRXB and rex.RXB sub lahf push sbb (bad) pop test sbb rex.WRB jl (bad) (bad) std pop adc sub jle outsb popfq pushq sbb xchg (bad) fldenv rex.WB jg addr32 add sbb adc push ja repnz rex.RXB mov sbb jnp outsl mov adc or fisttpl cmp add push xchg ss out (bad) cmp fs lret mov add retq mov cmp repz mov add sahf add add pop add (bad) mov (bad) (bad) decb cmp jbe xor sahf mov je xchg or (bad) xchg jb cld loopne in (bad) adc rex.B rex.WRX rex.RX rex.WRB (bad) test lock test lods cmc xchg and push xchg push add rex.RXB movl ja movabs rex.WRB rex.RXB out fwait (bad) (bad) ds or rex.WRB xor cmp lock cmpsl movslq pop and (bad) add adcl (bad) stc (bad) jmpq insb add jmp mov mov movb rex.X lahf (bad) movb loope lods mov leaveq data16 jne jmp sub int mov xchg faddp pop in rex.RB rex.W rex.WX add (bad) test insb pushq cmc leaveq add jle jl push (bad) (bad) or (bad) (bad) (bad) es mov ja rex.WR xor out rex.X es (bad) test mov mov retq mov repnz rex.RX mov pop lret lock rex.RB sarl (bad) repnz add jp ja jne push adc xchg add hlt pop add mov add xchg rex.WXB pop push (bad) add cltd stc (bad) xchg mov and adc mov xchg lods pop imull sub jp pop imul add push and add mov adc (bad) add (bad) cmc movsb add (bad) sti jno (bad) add jb mov cmpsl std jmp adc fcmovne (bad) lret add pop sub xchg data16 popfq je pop (bad) rex.R mov add test (bad) pop mov mov xor rex.WR int3 (bad) xchg mov add callq (bad) rex.RB sahf push add es add icebp retq mov sub lock push add sub in pushfq add xor adc rex.W add or push insb add jnp xchg ja jrcxz sahf cmp sbb test xor (bad) cld mov push movslq test jo pcmpeqb (bad) jb mov sub sub fnsave mov es int3 rolb sub (bad) rex.WXB sahf mov xchg jg jle (bad) enterq jge xchg (bad) jns cmp push fdivs xchg scas cmpsb (bad) (bad) cld cmp jge and (bad) scas jnp ss js ficom movslq adc mov movsb callq imul push mov rex.WX gs (bad) jmpq (bad) xor outsb hlt jge mov out (bad) data16 (bad) (bad) rorb hlt rex.WX (bad) (bad) or jrcxz test mov test jno and mov adc loopne pop (bad) rex.W out rcrb (bad) sarb push fidivl mov (bad) mov push mov cmp xchg and add mov cmp jle retq rorb or outsl jle (bad) fwait in scas push (bad) adc (bad) sbb jb imul rex.RB add fsub adc data16 rex.RB pop mov rex.WRX jle mov lea (bad) (bad) rcrb xorl jmp in jnp and lret es xor adc fidivr out xchg and jnp stos rclb sub mov sbb mov cmp rolb (bad) jb xor xchg outsb add cwtl mov mov movabs sub icebp jrcxz outsl rex.R test rex.R loopne jns in rex.RX or mov mov rex.WXB sahf mov lret jmp retq insl cmp in je testl fnstcw rex.WX adc faddl sbb mov add (bad) sub xchg gs rex.WRX jle lods jmpq jmpq jo add rex.WRXB (bad) out add jo outsb xchg mov (bad) retq xlat add js mov add popq xor (bad) rorl (bad) mov add stos (bad) adc sti rex.RB (bad) scas mov btr jle sbb ja pop popfq (bad) xchg cmp mov adc jg and (bad) add mov jns es lea stc push push add iret mov es gs cmp insb cmp sarl pushq rex.RX sub add or out (bad) jg mov add (bad) rclb (bad) xchg mov jle inc rex.WXB and mov movabs rex.WX mov test (bad) shr (bad) test lea js and flds addr32 es xlat cmc fsubr (bad) sbb cmp add push out out and mov (bad) or mov fildl mov push jb mov ss (bad) stos movsl adc repnz js fsubrl mov xor (bad) pushq (bad) sub adc adc rex.R pop movsb or and orl add push or mov outsb jle in jg movabs mov mov (bad) jp push xchg pop jnp mov ds jb fstpl fild jge mov mov mov lock mov adc mov sbb rex and add cmp fwait in add nop mov movl pop lret add (bad) test movabs mov mov (bad) retq xchg push jb,pn cmp rcrb add mov or (bad) ss imul add push (bad) shrb add scas or (bad) add imul mov jrcxz adc ja mov rex.WRX cmp jg mov test cld mov mov mov in movabs lods push data16 add xor add mov fldcw (bad) int and (bad) jnp fwait xor xchg stos int3 in data16 sti mov add xchg cmp add bnd vpmaxsw add int (bad) out jl jnp stos test jbe add rex.X ficomp out (bad) add cmp jnp movl movslq in mov xor jns sbbq push jmpq xchg in movabs (bad) js (bad) (bad) xor cmp std (bad) pop jmpq add mov mov jp rex.WRXB jrcxz mov movabs divb cmc push (bad) mov (bad) mov adc movabs outsb add hlt sbb repnz add stos retq (bad) sub (bad) jg xor fcmovbe addr32 add int3 or cli sub mov js jle loope,pn movabs test imul sub sub shll xchg rex.R xchg callq jb clc movabs jle sbb fcoml rex.WRB jle sub jno scas add std sbb sub add cltd xor xchg jg jl mov add rex.WRXB jmpq cltd popfq rolb movabs rex.WXB cmp (bad) pushq pop loope,pt rex fiaddl rex.WX xchg shr in stc loop adc (bad) jl pop pop and js andb push js rex.WX jae or (bad) jl jle mov enterq jg xchg cmp fidivr addl fwait stos xor xchg ss cmp out sbb pushq retq adc pushq sub mov (bad) ss xchg (bad) ljmp (bad) insl rex.XB sarl adc xor ja mov or sarb scas (bad) jb cltd cli rex.RXB push or sarl mov adc gs es rex.RX sbb cltd rex.WRX mov sbb (bad) jl cmp ja cli rex.RXB (bad) push (bad) (bad) mov insl js fcomp and iret add jnp pop xchg (bad) mov sbb pop jae rex.R callq jb add fstps cmp push sti push mov mov es xchg adc (bad) and pop lods (bad) negb sub adc rcrl sub mov (bad) push out cli rex.XB lock pop jle mov stos xchg rex.WRB (bad) int3 mov mov pop or and (bad) jae add sarb (bad) (bad) incl scas cli pop sbb mov rex.R lret pop adc pop adc sub mov xor add add jl adc xor (bad) jl insl jmp fnsave add test movslq movslq cs cmp (bad) scas jrcxz xchg test std scas adc add rcll and movabs ljmp ss rex and hlt sahf stos jmpq (bad) loope addr32 insl outsl jle lahf js mov jo push cltd cvtps2pd cld rclb (bad) (bad) std lods rex.RX ss jo jrcxz sub (bad) (bad) rex.XB outsl insl xchg ja cli xchg rex.X lret cld movsb mov add ds pushq sbb js out fcoml add movabs rex.RXB pop test out lock pop mov mov out mov xchg xor pushfq (bad) mov push xchg push lret sub add repz repz add (bad) pop sbb (bad) outsl (bad) adc and xchg jmp pop mov xorl (bad) lret adc sub or (bad) fist xor test (bad) xchg shrl xor push adc test and out or out lea jb (bad) rcl mov xchg jb std lahf in sub ds cmp push jrcxz fisttp (bad) mov orb xchg movabs fstp cmp adc cmc insb jl adc (bad) movabs movabs imul testb sahf pop scas pushq retq (bad) or fistpl mov jbe fnstsw jne mov data16 jmpq jbe xor rex.WRX or testb cld notl and jge xor add loope push test (bad) mov rol jmpq mov jo adc xor (bad) out mov pushq insb rorl and roll push loop mov mov cmp adc lret lret pop rol int3 (bad) cld cmp stc adcl jrcxz andb pop rex.R rex.RX rep and (bad) mov test jge (bad) (bad) sub xchg xchg push int3 (bad) stos (bad) push test mov test nop lahf lods sti push (bad) mov cmpsb jmpq (bad) or gs movsb rex.WR cmp pop test mov ja xchg stos pop retq insl sub sub stos push (bad) sub pushq mov add (bad) js out (bad) rex.WRXB retq insl icebp (bad) (bad) jae pushq xor fs xor (bad) imul jp clc fild add (bad) sub (bad) std pop add scas jmpq jbe repnz jge add loopne std jmp add stc or and jg add sub add repnz scas push mov iret (bad) mov scas jp mov (bad) xor jno add adcb jrcxz sub jp nop stos and add (bad) adc fimull clc sub (bad) cmp pop jp cmpsl adc xor add movd add test jo mov add jno jrcxz jb pushq (bad) (bad) pushq xor jg rex.RXB stos push (bad) add cmc retq lret pop mov movabs add (bad) rex.WX pop (bad) sbbl and sahf add lahf mov rex.RB pop add retq mov add scas (bad) (bad) or add adc retq repnz add (bad) xor add ds scas add enterq cmp (bad) xchg imul cmpb lock ud1 jl add je data16 (bad) cli pop (bad) jle rex jbe sahf jnp mov loope icebp or (bad) js movabs jae rex.W (bad) (bad) (bad) cmc adc mov mov cmpl (bad) lock mov cmp (bad) jne jo int3 add (bad) iret pop (bad) (bad) fsubrl (bad) jnp (bad) add jp shll xchg xor add push cmc (bad) or add sub (bad) mov fs sbb add or out lret sbb xor test pushq (bad) incb sub add rex.RX rolb (bad) test or imul out (bad) in mov push (bad) jb (bad) add cmp cmp iret sub add repnz sbb cmp mov adc cmpsb (bad) xchg rex.WRXB sub iret in xor jbe fimull out scas adc movb retq jmp cmp jle orb outsl mov rcrl cld es gs loope insb add cmp loopne pop stc bnd and nop icebp add push (bad) mov data16 add xchg mov sub cs (bad) (bad) fisttpl jb add adc rex.B rex.X sbb (bad) mov lahf or jmpq hlt jg mov rex.RB stos jae pop adc loopne cmp sub jle rex push sar jg mov pushq sbb mov add in leaveq andl add rex.R cmp rex.RX lea sbb jle movsb rorb pop mov add sub sahf adc scas adc (bad) in int fwait cld (bad) sti mov rex.WR rex.RX lock jns mov push jle rex.XB push outsl out std je loop mov add sbb cld sbb add in cmp mov jae mov js faddl add (bad) leaveq xchg retq adc mov enterq fidiv in jb sub (bad) and imul out rex.WXB mov mov pop hlt repnz and push (bad) jrcxz (bad) jl pop idivb jg mov scas jne adc callq cli mov xchg jge mov jns lret add sbbl (bad) in lcall mov and add jrcxz pop rcrl fsts cs add cmp add out (bad) fwait sbb add in movabs sbb movsb rcrl js sub fbstp sbb movabs and push (bad) or mov rex.X add add (bad) cwtl xchg sub or add xchg cmp push rex.W xor lock mov add loope (bad) (bad) pop adcl xchg mov (bad) rex.X mov sub jo test add insb jb in jmp lods push mov rex.R gs sub push adc pop insl in (bad) jbe jl (bad) and jp int3 cmp insb cltd and cmp mov outsl and pushfq sub subb mov (bad) pushq mov (bad) jns test (bad) jg mov mov add add rex.RX rex.WB jge fisubl and movslq adc add lods cmpsb (bad) lahf jbe fldcw xchg xchg insl (bad) pop or loop rex.RX (bad) sahf data16 pop mov (bad) (bad) jnp rex.WXB add (bad) (bad) insl out cld rex.WRXB xor push shlb (bad) pop je adc cli stos repnz pop clc (bad) (bad) insb jg rolb (bad) js insl sub iret lods rex.WRXB jno fisttpll cmp ss loope jle in sub fadd movsl push enterq push (bad) push (bad) adc adc xchg or rex.WXB jne push out hlt testb (bad) xchg adc cli rex.W lret adc xor push mov addr32 adc mov mov mov leaveq xor (bad) jns (bad) push pop jmpq fs xchg cmp sbb cmp jl shll pop jmp (bad) mov in movabs fsubs cmp test js lret jns lret divl movslq hlt std rex.WRX movabs adc mov (bad) outsl cli cmpsb sti cwtl jl cltd xchg fnstsw jp movabs adc and jae rex.X rex.WR pushq rex.R sbb testb fs insl mov (bad) lret (bad) cmp outsl (bad) jg fistpl cli add notl enterq xlat or mov pop jne (bad) (bad) add (bad) mov shr rex.RX (bad) jns (bad) sbb jmp mov ja sahf jae (bad) js out gs cli movabs mov (bad) (bad) mov imul mov jp in in and pop sbb in es rex.XB faddl (bad) gs cmpsb addr32 (bad) mov jge mov pop cld (bad) loopne (bad) mov add jbe rex.RXB roll movslq int3 subb (bad) cld out or jg test adc addr32 rcll scas movl rex.WX rex.X sub lret (bad) push xchg insb orb leaveq nop mov outsb js repnz sbb ja movabs (bad) imul data16 (bad) pushq jl stos scas xchg (bad) repz rex.WRB or xor add adcb push xchg jbe or add andl cmp push and sub lea add xchg (bad) jle mov rclb out xchg lods mov sbb pop mov scas (bad) (bad) add clc adc cwtl add cs (bad) mov add loope mov mov iret (bad) rex.R fisttp adc push bnd jbe gs dec rex.RB rex.WB ss push (bad) xchg (bad) es mov xchg movabs cmc xchg add mov rex mov data16 or add hlt mov (bad) pop rex.WRB out lods out add fdivl (bad) repnz sbb (bad) cmp mov sti iret (bad) (bad) gs (bad) cli test xor and lahf mov movabs xchg iret loopne movslq out jg xchg enterq rex.WXB mov sarl xor (bad) movaps jnp cmp neg xchg pop add loopne (bad) mov insb pushq xor mov outsb shrb pop repz jae add mov or (bad) std int3 out test xchg add xchg mov iret xchg stos xchg (bad) xchg mov add sahf sub and or jb lahf ss (bad) jae (bad) add mov xchg xor sub rex.X xchg add rclb jne mov add push xor js subl mov add and pop adc sbb pushq retq add add imul in add leaveq fimul scas out add lea mov rex.RX add and scas testl ds sub add mov mov or (bad) enterq xchg fwait mov in xor (bad) pushq adc callq add (bad) (bad) je imul rex.R cmp out push ja jae pop idivl pop jg rcrb add xchg outsl mov (bad) lods add cmp jbe or clc (bad) adc mov int3 in cmp mov xchg je add int3 cmp push xchg jns (bad) (bad) push mov fwait test cmp jmpq scas add fcmovbe add sbb (bad) jae stos xor imul cld jo mov pop pushq sbb (bad) cld sbb adc test rex jno fsubl mov (bad) jnp or data16 add rol out sub and (bad) cmp xor mov add jnp lahf movabs and push add sti fwait rclb sub and jl sub retq outsl adc rex.WRX fistl xor or xchg addr32 (bad) xor xchg sahf mov (bad) std fsubrl mov jrcxz cmp sbb rorl xchg mov icebp and mov je xchg jle fadd imul in rex jge ja int jrcxz mov jbe xchg jg mov sbb rex.WX fucomp xor xchg (bad) (bad) shrl mov jb repz (bad) (bad) xor or in and out jb enterq pop fidivl leaveq repnz pop je push add xlat in adc jle jl cmpsl (bad) cmpsb enterq add idivb icebp mov (bad) and add lret je cs mov or ja mov ds ss rex.WXB (bad) cmc (bad) shr or xor xlat add (bad) add rex.W add clc (bad) rex.RXB pop test movabs xchg repnz mov add pop test xchg jno cli fdivp mov flds idivl movabs xchg icebp (bad) (bad) rex.R cmp movsl test add flds adc and add ja rolb leaveq add adc ds (bad) add std push (bad) xlat (bad) fs xchg xchg mov rcll (bad) rex.W lock rex.WXB mov fwait and ss cmp add mov out add pop mov jle xor rex (bad) mov jl (bad) pop jle cmp jb adc (bad) pushq sub rex.RX cmp cmp and xchg or fidiv (bad) (bad) sub (bad) add scas enterq jnp (bad) out (bad) lahf push rex.X sbbl jg movabs add pop add or lods lret out (bad) (bad) (bad) (bad) repz rcrb in jae add pop out cmpsb rex.W add jne mov or sub mov or pop jmp jg mov pop pop (bad) lods movabs stos (bad) add jmpq and pushq jg mov movslq xchg pop ficompl (bad) mov rex.R rex out stos shrb jno (bad) jl movsl add push xlat ficom fldt add cmp and mov sbb mov rex.WXB clc mov xor and (bad) pop lock jb jg cli rex.RB rex.WB (bad) sbb add (bad) fcoms (bad) rex.X pop xchg push and fildll scas sti pop (bad) (bad) (bad) mov rex.WXB rex.B addb dec insb test movsb repnz fwait out and nop push xchg (bad) fisubrl vmovups pushq pop (bad) pop (bad) (bad) (bad) je (bad) outsl sbb sbb out rex.WRXB std or jmpq (bad) and repz (bad) push out (bad) in (bad) imul rex.RB popfq jge rex.WR sbbl cmc (bad) add movsl repz xchg and cmp xchg clc jmpq ja (bad) test lcall (bad) fistpll leaveq outsb or rex sub data16 jg (bad) mov xchg xor js pushq jg xlat imul pop or rex.WRX sbb add addl cmp jle mov (bad) push push lahf pop div sub pop add (bad) icebp push or (bad) xchg and es int3 (bad) add icebp sbb cld (bad) retq (bad) test jle mov pop jg add iret in repnz sbb int3 rcll fiaddl push or xchg pop sub insb add mov jle sti xchg (bad) (bad) mov add add jno lret (bad) mov mov cmp sbb pop mulb cmp movabs mov rex.W fsts callq insl mov xlat add sbb xchg adc adc xchg rex.WB addr32 xorb rex.WRB add test popfq rex.R xchg push rex.WXB (bad) scas sub xor jb add pushq sbb or or mov scas push rex jne pop jmpq cltd lea jb,pn mov sti sbb (bad) out rex.WB sbb (bad) add in jle mov xor pushq mov mov cmp add (bad) je jmp pushfq jle lcall fldcw movabs sub addr32 sub xchg cs mov imul jg or rex.XB pushq lods cmpsl pop int (bad) or fldenv es lcall movsl loopne cmp jmp mov (bad) cmpsb iret add fnstsw adc pop xchg add fbstp add nop xlat xor push fwait rex.W (bad) cmp cltd pop mov je movsb (bad) pinsrw mov (bad) add push mov jnp xchg xor cmp insl add (bad) sbb iret xor add push xchg nop or lret add sbb (bad) out test sub out rex.RB js in (bad) rex.R push rex.W rex.WRB rex.WRX xchg adc add jmp rex.WRXB (bad) push jbe jrcxz shrl sub rex.WRB xchg xor nop add xchg movsb jp push mov fldenv jge rex fwait adc rex.W mov je mov repz pushq add lahf mov jrcxz,pn mov add mov (bad) jne rex.XB sbb and sub rex.R rex.XB mov or pop fs (bad) push push add jnp es test fiadd mov mov mov rex.WRXB outsb je imul pop cli sub push sahf xchg add roll add jb jmp adc sbbl insl add test sub cmp add imul mov pop loope (bad) outsl jmpq rex.WX (bad) cmp rex.RX fs movsb jbe jg cli xor fs or and (bad) jge movsb (bad) (bad) mov jle (bad) xor mov add sub and or lods sub rex.WRXB xchg cli add (bad) xor ljmp cmpl push int cmpsb mov rex.XB pushq add jle or (bad) xchg add add sti cwtl jp and jno mov add mov xor cmp rex.RB xchg callq imul rex.WXB scas out cld sub js fdivr and xchg mov (bad) add (bad) (bad) push cmp callq jle mov andl add push (bad) and jbe rex sbb jbe frstor mov mov mov lahf (bad) insl add xchg sarl (bad) popfq lea cmp (bad) jg cld ss (bad) add rex rex.X rex.WXB (bad) pop in adc mov jp adc sbbl pop (bad) (bad) pushfq mov lods cmpl (bad) (bad) jo (bad) imull (bad) movabs psrlw cs jo (bad) (bad) pushq rclb jbe (bad) shrl cmp rex.WR insb mulb test ss in pushq sbb xor movsl cmp rex.WB ss (bad) mov adc jge pushq fcmovb rex adc pop sub jb mov add pushfq jo std (bad) imull push nop rex.R addr32 add jno (bad) stc pushq callq xchg out xor scas xchg movabs (bad) or mov jle xchg adc cld movabs mov imul (bad) outsl and jge lods rex.RXB int3 rorb test rorb incb sub es rex.WRB movabs jl cwtl add (bad) (bad) jbe xchg (bad) jae xlat fldl lods (bad) js rex.RB (bad) jno mov (bad) adc add and mov and rex.R rex.RXB (bad) pop jo cwtl rex.RB pop cwtl data16 rex.XB jg ds xchg in cmp mov outsb and jbe lods mov notl movslq xor (bad) iret insb (bad) (bad) lret jg rex.WRX (bad) ja xor scas fildl callq (bad) (bad) mov and fcompl js jge jmp pop nop cmp ja jnp rcll stc xlat jp insl sub outsb je rorb rex.RX add and mov rex.WRB es add cmp in jno jo roll (bad) (bad) and jl in pushq jnp jno fs (bad) jl rorl mov cmp (bad) rex (bad) add movabs xchg mov mov adc out rex.WXB fs ss (bad) rex.WRXB or (bad) orl dec push (bad) pushq adc adc push addr32 fmuls (bad) pop je cmp (bad) mov add add mov fiadd add imul clc add xchg push out movsl shr mov (bad) pop ja mov cmpsb fs or sbb rex.RB add xchg (bad) mov pushfq (bad) adc add rex.XB fisubrl (bad) add mov fnclex sti pop mov pushq cmpsl push sub xchg (bad) ja fidivr pop mov (bad) and or insl (bad) outsb adc jbe cli (bad) insl xor sahf movabs lret sub jp mov push rex.XB cmpsl rex.WRX or insb std cmp or adc and jl pop adc (bad) push movsl rex.WX and pop pop rex.WX outsb mov jle (bad) rex.RXB outsb lea test xchg mov jrcxz sub and fwait rex.R cwtl jae push xchg push gs rex.WXB out pop (bad) (bad) jge or insl fcmovbe fidivrl xor mov mov idivl (bad) cmp mov fistl mov fsqrt push pushq xchg (bad) sub or push (bad) add pushq fnstcw movb movsl in callq adc or decl repz (bad) mov add scas jl out add test adc insl sbb mov jle mov testb out rex.X outsl xor scas push pop (bad) pop mov fs mov xchg add add add imul enterq data16 add rex.WXB sbb sti callq pop xchg xor xchg (bad) xor mov adc add xlat repz (bad) push jp jno rex.WRX mov mov retq jo lock rex.RX cmp mov loope xlat icebp ds jp sti or iret jge cmp loopne cwtl out pushq sarb imul sbb hlt std (bad) (bad) pushfq mov pushq nop cmp addb cmpl add mov cwtl sar add sti sbb xor jne add lret popfq in mov punpckldq mov orb retq mov pop mov out xor rex.WRB and pop (bad) stc xor outsl cmp lea popfq fs (bad) rex.W xchg movabs flds (bad) mov push lods sarl cmp add and (bad) xor (bad) out outsb stos add jl xor mov roll xchg push sbb (bad) sbb mov movabs cmp retq ss fadds cmp rex.WB fwait or rex.RX cmp repnz mull loop (bad) mov (bad) xchg adc push and (bad) xlat dec (bad) scas mov cld fldt cmpsl pushq add jno movabs movsl mov sub js pop jb lret (bad) add fwait std jns xchg (bad) mov sub stos mov mov jae pop decl lock rex.WRX pushq push and fiaddl fs cld sub mov es jmpq xchg jle idivb jg (bad) movabs rex.X sub jg jo adc (bad) add imul (bad) callq (bad) sahf add pop jmpq and cwtl retq cmpsb shlb cmp add mov sbb rex.WXB mov (bad) pop jg pushfq (bad) int3 int jne add insl push cld mov fldl push test rclb lret or push rex.XB addr32 (bad) push (bad) fwait sti mov rex.WXB (bad) adc scas add hlt xor add cmpsl movabs in movabs scas cli (bad) iret je jb (bad) icebp cmpsb ffreep lods jmpq cmp (bad) iret mov lea rex.RX xchg addr32 out sub ds cmp xchg sbb mov icebp outsb mov cwtl cmp rex.WRB xchg retq imul rex.B leaveq mov add mov jl in js add outsb cli and cmp cmp clc (bad) push test fnstsw (bad) (bad) xor add and movabs xchg jg (bad) mov pushq add cmp lahf sahf fistp pop (bad) stc loopne stos cli (bad) js lahf out cmp mov or jns mov rex.RB (bad) jl rex.WXB lea stc ds pop pop jge pushq add out jbe xorl adc rex.WRB (bad) rcrb lret and add cmp out rex.RXB insb add int3 xor pushq sarb sub movslq sub sub rex.X rex.WRB sbb (bad) js fs callq shrb (bad) xor out jnp jmp xchg shlb add xchg movslq (bad) scas cmp ljmp push outsb mov addl cli adc cmpsl lahf adc mov mov rex.WX imulb fwait pop jae pushfq pushq and js jo mov rcr fistp movsb push or sahf sti add mov imul repnz (bad) xchg callq sarb mov (bad) xadd (bad) mov jrcxz insb rex.W test jb lret callq sub jb hlt nop pushfq add lahf sti sbb (bad) pop rolb (bad) and mov (bad) (bad) retq (bad) out shrb rex.WX insb sub and addl stos adc flds lahf adc pushq rex.WRX jb jns xlat lock test rex.X rex.WR rex movabs and mov xchg sub outsl iret mov (bad) jae pop add lods mov (bad) (bad) mov lahf stc xchg mov movsl mov adc xchg and imul jo in enterq add fimul rex.W sar rex.WRX imul jle js (bad) nop lret add mov loopne iret movabs mov fdivl adc (bad) jnp xchg mull or xor rol out cmp (bad) outsl jg jns mov (bad) leaveq ffreep pushfq xchg je int3 clc mov lahf loope pop xchg lock decb (bad) imul xor (bad) jl cwtl jns push stos and rclb retq movsl popq or rclb addr32 lahf test lret hlt and je fcoms fstpt shll mov xor jno cmp mov mov je mov test (bad) jbe jno outsb sarb notl add pushq int3 in rex (bad) mov mov (bad) cmp loopne cmp and and push mov mov mov cmc mov (bad) jle loop rcrb (bad) fidivr mov rex.WB loope add xlat lret (bad) pop sbb mov cmp div push jns add sbb add pushq js mov cmpb lret rclb out frstor jbe out sahf sub andl lods (bad) lcall rex.WB jns push repz ss loope or sub cmpsl mov lahf (bad) fmul fidivl add (bad) (bad) jo mov loopne rcrb pop or movabs xchg rex.WRXB stos jp out (bad) push sbb rex xor or out add (bad) or mov mov out mov imul rex.WXB (bad) cli jle movabs add mov cwtl adc popfq cmp mov rex.R test test pop cltd fistpl rorl div cmpsb pop adc (bad) cld push lock stc add movabs sub (bad) add xor jno (bad) jne rex.RB sbbl leaveq jns mov xchg mov fidiv jl addps cmp add (bad) mov pop in out mov xchg xchg addl (bad) fiadd add lret (bad) cwtl rex.WB iret xchg rex.RX pop je adc mov fistp rex cmp mov std jl cwtl sub out add loopne (bad) cmp (bad) jbe mov jne jg cmp data16 pop lods (bad) and test fwait and (bad) jle in shrb (bad) rcll push (bad) sti pop xchg mov (bad) xchg adc sub jnp or scas sub movabs (bad) mov (bad) lods repnz xchg mov idiv (bad) jno scas (bad) mov popfq icebp and pop lahf pushfq xchg retq je out pop mulb sbb loop pop lods (bad) lret test and ds push xorl movabs sub sbb sub mov (bad) jbe rex.RXB mov (bad) xchg cmp int or pop rolb cmp mov jge (bad) ja mov (bad) jne insb (bad) rex.WR movsb outsl movslq popfq cmp jle xor scas nop movslq cmp pop push xchg mov xchg add lea cmc je rex.X jmpq (bad) hlt mov rex.WR repz and or rex.WRXB (bad) hlt sti sbb (bad) lret rex.XB and (bad) adc fildll pushq mov rex.WX test fildll int js es push outsb fidivr ffree cs adc pop xchg add pop test int3 push pop incb mov test orb mov lret movsb xlat rex.RB jle movabs repnz jbe retq outsb mov cmp add (bad) fucom mov bswap add (bad) pushq sti enterq mov in mov sahf cmp lahf sub rex.RXB mov pop loopne jl flds (bad) xchg test scas imul imul pop (bad) int3 mov jg (bad) lock cs (bad) rex.WB outsb or rclb iret jg lods stos scas rex.WRXB ss popfq test jmp cmp mov fistp mov rex.RX push (bad) test push popfq sub rex.WXB cmp or and or cltd jge (bad) jne (bad) outsb and lods (bad) enterq sbb jns (bad) addr32 mov rcrb and fcomi retq adc add sub (bad) movabs and mov mov or loope repz adc jg mov rex.R rex.RXB data16 (bad) mov test test cmp jrcxz add and (bad) je add mov mov rex.R adc repz rolb rex.X jrcxz fdivrp add mov orl icebp lahf lock xor lahf outsb xor xor popfq and (bad) jo jle rex.WR push or cmpsb fs xchg out (bad) mov rex.RX stos mov fs (bad) or rex.WB pop movabs mov rex.WXB loop pop out int3 mov sub int fisubrl sub add sbb pop rex retq (bad) (bad) add jne test add xchg in (bad) add cmp mov fs imul movabs (bad) (bad) mov test sub add andl and add adc cmp rex.RX mov retq push mov cmp imul (bad) mov out mov pop mov je mov lret out jl cmp rex.WRB mov test stos (bad) mov (bad) (bad) icebp rex.WRX adc pop iret mov pushq xchg cmp (bad) callq rex.WB (bad) or sub repnz (bad) jb sbb (bad) sahf adc mov rex.RB xsave jle adc fistpl sub mov jmpq xchg xchg jg out rcrl sbb cmpsl (bad) (bad) leaveq cmpl ds hlt cs fwait mov mov lock cmpsb jae out push rex.W (bad) jmpq cmp std add (bad) stos (bad) sahf cltd sub add movsb clc xor mov mov in sahf (bad) roll (bad) sub lahf rex.RB retq rex.R cmp add loop enterq add jp mov mov je shr movabs jge add adc rex.WR rex.R (bad) or loopne sahf add or fbstp stc jle (bad) outsl cld sub test mov jmpq cmpsb pop add popfq (bad) mov lret imul fwait and xchg sub sub pushfq or outsb jno fs rex.XB mov addl add jp push add rex.WX divb add add addr32 rorb movabs add fwait (bad) mov jle repnz ja,pn pushq je cmc mov movsb (bad) rex.RX add sub fst cs (bad) jnp add rex.XB sbb mov fwait jae (bad) push add (bad) decl addr32 (bad) (bad) jb jbe mov pushfq add adc lock test and xchg testb sbb insb (bad) adc push movslq lea cmp add fs jg jg test cmp ja lods mov cmpsb gs or fs push rex.RX jne xlat add (bad) pop rex.WRX adc rex.RXB es pop test or or rclb xchg (bad) cld adc rex.RXB addr32 mov pop test jbe rex.RXB (bad) cmp mov jnp (bad) jmp and nop xor mov and sbb lahf stc test xchg scas push jne sti sti jmpq sbb adc mov mov lret (bad) xchg sar adc stc jl loop rex.RX sub and rcr rex.WRXB scas mov test adc faddl pushq push stc (bad) sti pop pushq rex.RB mov xchg jmpq nop rex rex.RX cmp imul fsincos or movabs (bad) sbb scas jne jg clc xchg sbb or pushq xor xchg push (bad) xor insb (bad) setne sub sub jo xor pushfq and sahf adc (bad) pop frstor rex.WRX pop fistl stos jmpq or js mov sub rex.WRX pushq adcl sbb loop rex.RB cmpsl mov xor add sbb stos xor shr (bad) out sbb rolb cltd push xlat pop xchg mov test mov or lea scas (bad) pushfq mov jl xchg pop ss mov and xchg jle pushq sub add mov adc sbb xlat xlat rex.RB test movslq scas pop jle push sbb clc adc orl add sub out movabs cld mov outsl scas rex.B sub repnz imulb gs or popfq jnp decl test jb rex.RB cmp cmp sbb sbb (bad) iret loope scas rex.XB fdivrs sbb cs (bad) stos stc mov rcr addr32 (bad) and decb add cmp outsl shr sti or pop lahf cmpsl xchg addr32 mov jbe and imul push (bad) add jp hlt fucomp test cmp xchg pop stos cmp push rex.X fs mov and movabs pushq mov outsb out rcl sahf mov (bad) pushq push (bad) movsb outsb mov callq add (bad) outsl mov and mov push cmp cmp jns (bad) jno pop fwait movd mov or sbb jg pop out jl add rex.WB (bad) (bad) (bad) mov (bad) add jmpq add xor fwait or xchg pushq rex.WX jbe rex.WXB rcl data16 xchg adc jge mov add out push adc in pushfq jge fstpl (bad) js xor movabs sbb stc add adc int movabs mov add lock jle (bad) sahf pop js (bad) mov add sbb andb xchg cmc sub push shr and mov cmp in rex.WB xchg (bad) divb rex.WXB rolb retq xlat in xor clc add add or cli retq add sbb mov add cmp jmpq pushq pop xchg outsb xor jns jns clc push (bad) insb (bad) callq jno and stos jle sub or rex.X rex.WRB add lock test lea loopne add pop movabs (bad) out neg jne mov popfq rex xor sbb orl stos mov mov push jae stos imul or lods jmpq push loope js rex.WXB jmp pushq pushq sub decl add outsb lods movl rex.RB sbb flds jge mov or sub int jne push jmp lret pop iret and and mov jge (bad) xchg callq insl scas adc rex.X out (bad) movabs cmc mov scas and pop (bad) loop pushfq rex.RB or lock lret (bad) movabs (bad) retq rex.WRB scas cld mov xchg mov movsb rol cli jno mov adc rorb mov push sbb xchg movabs int clc push adc (bad) neg cmpsb mov sbb std (bad) movabs mov test mov sub mov jb rex pop test xchg jle cli lods (bad) frstor in sti mov fistpl cmpsb (bad) es xchg (bad) and imul add rex.WRB gs rex.W rorb and and lods push fcoml mov jp in rex.WRXB push mov mov push jbe or cmc sub (bad) mov xlat icebp retq es cld mov movsb orl mov scas lock (bad) (bad) cmp xchg xor cmpsb mov mov rex.WRXB adc (bad) mov incl (bad) imul adc shl jmpq cmpsb (bad) mov xlat mov fwait jmp xor mov imul xchg shll mov xchg and std fnstenv mov fstpt shll fsts pop jge hlt movabs insl xchg sub sbb (bad) mov push cmp vcvtpd2dqy iret lret xchg jne fnop pop gs mov add addl xchg xlat and (bad) jno notl mov mov rex.WRB push xchg xor rclb lea mov cmpsl jo mov scas jmp (bad) jrcxz imul add rclb push mov mov sbb xacquire (bad) outsl sahf mov movl mov jb add jg adc popfq fmull movsl pop shll (bad) lahf (bad) fs push insb (bad) sahf mov jrcxz imulb lods rex.WRXB (bad) jno (bad) movsl jl xchg rex.RXB (bad) lcall test add rex.WX (bad) mov rex.RX xchg push (bad) adc add add push mov rex.WX xchg lret push adcb (bad) (bad) fcmovnbe add movabs (bad) (bad) rex.WB push xor test xchg stos movslq xlat insl jg xor (bad) (bad) sti jnp movabs rcll fldcw rex.RX roll lock xor in sahf add (bad) test mov outsl jrcxz mov pushq std roll mov retq (bad) adc add cmpsb mov je mov mov (bad) int pushq (bad) outsb scas mov movabs mov adc fsub jp rex.W xchg (bad) push jns cmp sbb and mov pop je mov scas clc scas enterq sbb mov xchg add cld xchg rex.WRX imul (bad) xlat pop add sbb sahf push mov rex.WRXB fistp add or mov (bad) shll jb (bad) add xchg iret sub ss lret and gs fcmove xchg (bad) or (bad) outsl rex.XB (bad) jle leaveq and adc pop mov (bad) cmp leaveq pop push mov clc jrcxz sbb je (bad) (bad) sub xchg or or xor rex.WX pop fcoml (bad) je fs push and stos int (bad) cmp add negl sub mov jp sbb mov jle movsl mov cwtl xchg (bad) mov pop cmc fs xchg fdivrl test repnz fiadd mov (bad) or push add sub enterq fiaddl add rol fsubs mov lcall xchg rex.WRX adc add rex.WXB and or adcq faddl (bad) cwtl jle xchg (bad) add (bad) xlat (bad) movslq clc sbb rex.R cmp cmp (bad) (bad) cmpsl data16 (bad) sar rex.RXB rex.WB and js jb or out (bad) pushq (bad) shll roll shrb fnstsw xor mov scas jle fist cmpsb sub or pop rex.WB cmpl adc retq push (bad) (bad) cmp (bad) mov (bad) decb js xor rolb jns mov mov mov (bad) out lods sub xor mov loope jle (bad) sub lahf notb lock cwtl lods frstor outsl fs cmp fdivl in retq outsb cmpsb rex.WRXB and testl mov int3 icebp fwait pushq add test xchg out or jp mov sbb and testl sahf push jns adc sub out (bad) stos xor xchg jp imul sub jb incb fimul es or imull lret (bad) add punpckhbw push lea cmp loope and xchg rex.WRX lock xchg (bad) jmpq adc mov (bad) std sbb push pushfq adc in fs and lock xor pop rex.WRXB mov fbstp imul jg add xchg js movabs int3 jne (bad) and outsb cld xor addr32 rex.WR push rex.WRX addr32 jp popfq rex.WX fiaddl xchg insl jmpq rep (bad) mov xchg (bad) (bad) jno sbb outsb jge mov jle (bad) pushq fild (bad) sahf loop data16 (bad) xor pop es jne jrcxz (bad) mov fnsave sub lret xor rex.RXB rex add mov xor sarb and cmp stos jne jnp mov rorb jl fild in sbb addr32 ds xlat cmc rcl mov leaveq out movabs outsl callq xchg push sub mov sub sbb (bad) (bad) rex pop cli repnz sub xchg adc add jmpq (bad) test lret jp movabs fstpl jge xchg roll xchg sub retq rex.WX jrcxz lods add ss xchg or rex.WRX cmpsb fsts xchg jg shrb retq jl and rex.RX es rex.B (bad) rex.WXB lock or add pop pop stc mov es jrcxz (bad) sbb pushfq pop (bad) add je jl gs lea in mov retq in sbb (bad) data16 movl (bad) test cmp push mov push jae imul rol (bad) jg es adc add sarb xchg jmp mov (bad) rex.XB rex jno rex.WXB out jne sub out and incl and or xor jl add (bad) xor fisubr ja add rex.WX sbb cmp jmpq ja jl sub add mov add add mov (bad) (bad) leaveq cmp push sbb (bad) xor mov out insb sti callq test js mov out enterq sbb push jno in adc mov fldenv movabs mov mov jl pushq js add xchg (bad) rex.X pop rex.X or and cmc and rex.X hlt adc insl cmpsl jmpq add and sahf scas mov jb add cmp stos fidivr je mov js cmp sbb xor (bad) (bad) movsb add jmp sub cld in test pushq sbb jle cmp scas cmpb lahf rex.XB (bad) pop (bad) rex.RXB cmpsl rex.RX jb (bad) (bad) mov cmp fdivr (bad) stos (bad) test sbb js add (bad) xchg mov and imul lods (bad) std rex.WX decl (bad) ljmp movslq sbb (bad) pop mov movsb (bad) sub adc jle ljmp xchg test xchg mov mov mov jrcxz retq xchg rcrb or adc clc movsb pop lret pushq pop in movslq pop pop cmp add data16 xchg add movslq movabs sub mov push (bad) mov sbb cmp sub add mov (bad) jle sahf push test jge js add jne callq or jbe sub adc (bad) adcb out (bad) jl retq mov xor outsb cmc rex.WX xor xchg jne pop jle (bad) rex (bad) pop insl mov push divb iret cli or sahf sbb mov (bad) (bad) cld mov movsb fldenv mov rex.XB add (bad) std xor js or incb push mov repz adc adc psrlq (bad) (bad) stc lods lods add jmpq sbb mov (bad) jp shrl retq pushq jl xchg out jrcxz movsb mov and (bad) outsb cmpsb sbb fmuls shl push std xor mov out or jg add sub mov (bad) mulb xchg sub jg rcr mov rex.W lahf lret jo outsb insl and leaveq (bad) jbe add faddl pop jno movslq (bad) rex.X rex.WRB pop lods stos mov imul fsubrl fbld pushfq sub or and cmp cmc push sub rex.WRB jae data16 movslq icebp (bad) (bad) fiaddl rex add movabs rex.RX callq xor idiv sub fnstsw xchg (bad) (bad) jl (bad) lods xor outsb (bad) mov pushq orb adc adc jne (bad) std repz xchg test pop scas push (bad) ss movabs mov xchg mov jnp ficomp movsl cmp mov xchg jae jbe fsub sub cmp mov xchg (bad) mov jne cmp jbe cmp push (bad) movabs std rex.WRXB xor mov pushq out bnd cmp cwtl fistp (bad) rex.WX jmp cld js and xor or outsb mov jne (bad) push fnstcw (bad) rex.W add retq mov jle and and or (bad) rex.WRB fidivrl mov mov (bad) jle and mov and add jne (bad) jmp pop scas rex.WRX sahf xchg mov ss jne mov data16 sub (bad) mov jmpq (bad) shlb jl repnz cwtl jle movsl jp add pop lret loop sbb mov xchg (bad) div sub (bad) negb movsl sarb pop rex.WXB sub mov rex.WRXB rex.R je push movsb test (bad) jge imul (bad) int3 mov rolb and push mov push insl outsl movabs scas repnz out insl rex.RX add rex stos jae (bad) pop jo (bad) jbe loopne shlb cmpsb pop push rex.RXB callq xor pop lea (bad) or rcrl movslq ja shl retq push (bad) mov outsb cmc add test repnz push jne jrcxz std (bad) jae cmp cmp mov mov sbb mov insb int3 out cmp (bad) insb test fs xor add sbb sbb jle (bad) sbb xchg push orl cltd orl rex.WX cmp insl xor mov (bad) xchg mov jmp jb mov rex.B cwtl adc rex.X sahf es push (bad) (bad) or (bad) test mov movslq stc (bad) add movsb rex.XB add rex.B mov add (bad) roll (bad) (bad) data16 fsub add (bad) lret shll xor mov sub jmpq repz sti rex.WRXB (bad) lods jb jl (bad) mov leaveq cmp movabs lret sbb mov movsb retq cmp pushq add or add push fisubl add test enterq stos or add sahf clc xor test xchg jb xor mov ficom (bad) (bad) add or fsubrp rex add es lret rex.WXB rex.W adc addr32 iret out cmp add movsb movabs sahf retq loop enterq rex.RB mov rex outsb (bad) add (bad) in inc fs xchg movl int sbb add xor rcll movslq pop (bad) (bad) sub jp add rcl (bad) and xchg mov pop add or fimul add sahf in je mov mov (bad) rex.X movabs add xchg adc in add xchg cwtl (bad) adc jne add pop or and add insl push fwait jnp pop add stos xchg movabs jg (bad) jg gs mov jp (bad) jbe stc mov add lods nop cmp cmpl (bad) leaveq sbb and mov xchg adc rex.XB (bad) xchg add adc data16 add cmpsl out jp lret add stos add jmpq movslq fs sub xchg out add notb (bad) push (bad) sbb xchg pop mov loop adc add push xor (bad) retq rex.WRX out and ja jl jmpq sub jbe rex.WRB adcl xchg sub rex.WX rex.WR jne fcoms loop (bad) (bad) and (bad) sbb add in mov and xor cmc es in (bad) adc (bad) sub je mov fldcw adc jae jg rex.WXB rex.W add jg mov and xchg int lret jb xor pushfq mov mov adc imul addr32 cmp cmc mov add iret fs adc add jmp (bad) mov mov jg cltd retq add rex.RXB cmp xor xchg (bad) movl and pop je rex.RX fwait jp js rex jg sub xorl pop (bad) push sub scas push out cmc sbb jmpq test js insl (bad) and sub add retq cmp rex.WRX notl stos (bad) rex.WRB pop (bad) fs (bad) or jg fcoms jp (bad) shrb sbb xor jle test pop sub fmuls movntq insb mov (bad) rolb retq rex.WR rcrl (bad) mov out (bad) mov mov add addr32 in mov icebp xchg cmp (bad) xor add pop jl movslq (bad) sub fs stos jle rex.WB fnstenv mov pop rex.B add mov gs xchg jo mov lret (bad) sub push in jns xor movabs push cmp (bad) sahf popfq in sbb pushfq rex.RX rex.WX add callq jle jge cmpsb movsb add add xchg sbb jg rex.WRX sub adc (bad) (bad) rex.W (bad) sub sub mov (bad) loopne or jo jb (bad) jge cmpsb mov rex.RB jbe flds sub (bad) cmp (bad) (bad) xchg cmp sub push and es iret (bad) (bad) or mov jb (bad) jge in jle int sub stc lods mov (bad) (bad) sbb push (bad) xor add repnz sub jg sbb or mov outsb xchg (bad) jg and out movabs add jge jns mov mov data16 sbb xchg add out cmpb outsb rcrl outsb pop xchg add cmp (bad) add adc add mov xchg jbe xor xchg fs push jg xor xchg adc (bad) xor fisubr callq outsb xor push rcll mov sahf mov add add (bad) jne pop add movsb xchg int3 (bad) hlt (bad) jne outsb jmpq (bad) sub adc push cmp fwait pop jnp adc fiadd jp in leaveq gs js test (bad) sbb or (bad) movabs lahf imul mov cmp mov cmpsb xor push negb (bad) movabs sub (bad) add xchg xchg loopne add fistp cmp sahf bsf rcrq push jbe retq sub sub mov lret (bad) and jb mov std rex.B rex (bad) (bad) es iret ja xor out cmpb (bad) rex.WR adc mov orl xor out (bad) mov (bad) add pop (bad) pop loopne out add mov jl xchg rex.WX test add jno add lods or int add lock add (bad) repnz or xor mov (bad) fiadd mov mov xchg clc xor (bad) cmp test rex.WB ds mov imul retq pushq rex.WXB pop mov mov jrcxz jle pop add adcl push mov (bad) (bad) fdivrp leaveq test and mov mov rex.B rex.X insl (bad) (bad) or (bad) rex.W pushq rolb (bad) xchg ss in jg scas add leaveq pop add (bad) in jrcxz (bad) rex.XB data16 out repnz je (bad) rorb (bad) clc sub and movnti mov sti or (bad) (bad) (bad) sti verw retq xchg in stos pushq (bad) stc stos rex.WR rex.WRXB pushfq add rex.RB mov xor out rex.W fisub push pop adc pop (bad) sub stc test movabs rcrl lods (bad) xchg retq and xor fsubrs push mov (bad) jo and je xchg cs ss (bad) (bad) (bad) jmpq icebp in rex.WRX rex.WB push repnz pop add mov sti xor mov icebp sahf rex.X outsb (bad) stos cwtl (bad) (bad) insb jno outsl add or (bad) out sbb stc pushfq add (bad) jo xchg (bad) ltr data16 push xor in and jns rex.WRXB push or mov imul (bad) (bad) adc mov imul cmp retq jg push movabs rex.WXB xchg lret jbe add pushq sar cmp out sbb imul jb xchg vcvtdq2ps add sub add push (bad) (bad) (bad) mov cmp (bad) (bad) mov lods setl jb movabs (bad) xchg out jmpq (bad) pop enterq cmp (bad) lret (bad) xor mov cwtl rex.WX rex.WRXB cmp mov add add xlat pop ds mov add jnp in add scas rex.WR xchg test sbb sbb (bad) mov xlat add sub jp clc scas (bad) negb adc rorl mov add popfq retq out jle insb jmp xchg rex.R movabs shlb (bad) faddl (bad) rex.RX data16 sbb or xchg mov and pushq add jmpq ss mov xor out sbb rex ss sub xchg xchg movabs jle (bad) jnp jmp rex.WXB rex.RB js rex.WX add mov nop repnz popfq repz (bad) data16 jne jo mov es sub imul rcrl (bad) or (bad) adc (bad) ja sbb sub cmpsb rex.RX adc movsb sahf fbstp js rex.WB test xchg cmp or loop rorb orl fcoml and int3 xorb sbb mov ja (bad) xlat fistpll loope sub jno xor jrcxz fild rex.WB movslq shlb rex.WRX test (bad) pop outsl sahf sti (bad) leaveq rex.WRX jl mov or and mov add or jmp mov mov rex.RX pop sti xlat adc (bad) insl movsb subl movsl push pop cmc (bad) addr32 mov addb pop add icebp lock in ss (bad) jg cwtl sub outsb rcrl jp jle rex.W push insl out or stos jl mov cmp movabs scas and sbb add xchg mov jo imul icebp (bad) stc sahf adc jo callq and insl rex.WX cmp jae insb (bad) jg retq xor pushq push vucomisd mov cld in imul stos loope shl or imul add fsubrs (bad) mov (bad) (bad) rex.B sbb mov (bad) mov mov (bad) adc and rcrb (bad) push ficom std xor (bad) cld mov add cwtl jmpq (bad) mov out and jo rex.WX or stos jbe or xor xlat scas xor or or xchg (bad) cltd add movabs (bad) add es mov add cmp mov cmp add sub or push pushq (bad) and addr32 jbe rex.WXB (bad) xor jae (bad) xchg test jnp test add sub jb jmpq notl (bad) lret jnp rex.R (bad) mov pushq movabs jb and jnp stc fcmovnb outsl push jle jle cmp rex.RXB outsb (bad) insb jrcxz rex.WRB adc stos rex.X add push sbb pushq pop (bad) or insl rex.X (bad) (bad) lahf add sbb jg cmp (bad) pushfq mov sbb ja or cmp sub div jg (bad) pushq sub or incb fs lret (bad) jb out xchg mulb pop add ss add (bad) pop jmpq movabs cmp pop callq or mov xor sbbb sub lea and jg imul pop xchg (bad) mov adc stos movslq je (bad) xor imull (bad) pop xchg add xor mov repz add push jge adc adc scas xchg (bad) mov gs rex.RX (bad) loopne (bad) rex.RB rex.XB jb outsl cs mov add sti cwtl sub add rex.WR xlat and jp rcll (bad) rex.XB (bad) (bad) rex.X (bad) (bad) adc (bad) xor test xor or rclb cmc pushq cwtl xor sub movsl mov rex.B es sbb (bad) xchg add mov xchg xor (bad) movb add or push repz (bad) add jg jmp sbb (bad) mov rex.WRX (bad) (bad) pop outsb sti iret insl add and add sbb movabs je notb cmp add movabs movabs rex.B fcomps pop ja rex.RX rex.W rex.WX in mov jle sub pop js jns fdivrp pushq push cli movabs retq pop (bad) xchg lock fiaddl addr32 push mov retq (bad) sahf jl rex.WXB jne stc (bad) fs (bad) xchg int3 out jmp lock imul cld jno jmpq rex.WRB xchg std pop (bad) rol std jg sub fdivrl sbb add mov mov hlt xchg (bad) pushfq sub lahf imul cwtl xchg jbe jrcxz rex.WXB (bad) pop in pop and movsb decb rex.WRX mov mov lret (bad) cltd add lahf stos pop (bad) lock rex.WB out adc (bad) movsb rex.RX es lods (bad) add mov add mov jnp xchg pop jle lret (bad) fwait mov mov add enterq iret or sub lods (bad) rex.WB flds fistl (bad) mov mov mov fstl (bad) out and cs rex.RB sbb enterq cmpsl int sbb sbb movabs add cs fs sbb sahf ds rex.RXB (bad) cmpsb repz insl out stos pushq enterq mov jno out jg xchg shrb (bad) js push hlt sbb out xchg jl (bad) shrl (bad) (bad) mov pop (bad) in pop nop jo jle loop jbe pop fwait cmpsb (bad) sahf (bad) scas jp out and pop jg (bad) cmc add outsl (bad) jo sub cltd push sbb add pop (bad) rex.WB cmpsl es xchg xchg (bad) clc rex.B rex.WX jrcxz pop sub push jmpq jb jbe cmpb sub cmpsb lods pushq mov insl (bad) (bad) (bad) jp callq sahf movabs xlat (bad) push cmp lods xchg hlt gs mov pushq jbe xchg in mov nop imul rex.RX (bad) cmp push sub jge cmp (bad) out cli add jmpq mov xlat cld rcll leaveq js scas shrb xchg lret hlt movslq rex.W sub roll push (bad) mov sub rex cs mov rex.WXB (bad) cli jbe mov xor rex.WR (bad) int test xchg leaveq sti outsl rex.B pop xchg mov jns imul xchg (bad) bextr jnp pop (bad) test repnz mov je enterq repnz pop scas rex.RX out std (bad) xor fs sub fsubrs shlb int xchg xchg xor jge (bad) loope incl jle out lock andl rex.RX adc mov push and outsl enterq std stos pop cwtl jle add jle loope out retq mov popfq jl out push pop pop cmpsb mov scas xlat mov mov sbb fistpl adc (bad) out jl (bad) mov jrcxz pushfq add cld add (bad) adc rex.RX rex.WX test (bad) sbb mov ss pushfq (bad) add in movsl jnp (bad) and pop sub add data16 rex.RX insl pop xchg add add in clc jb sub ja shlb add add rex.R mov jge lods (bad) movsb clc (bad) jp jae (bad) sub push mov jrcxz,pn pop xlat or mov sahf jae imul test add and or xchg (bad) lret pushq jns cmp mov xor movabs pushfq xchg repnz (bad) jg outsl or rex.X js jle rex.W add lods loop mov enterq repz push rex.WR cmp std std (bad) jp ficom (bad) popfq cmp idivb cmp (bad) callq mov and or push jg imul jle xor add jge cs sub jno mov out lret (bad) add in xchg loop sbb movabs pushq outsb (bad) (bad) or fs movabs mov rex.WXB and and pushq fildl pop xor (bad) add xor (bad) (bad) data16 rex.WXB cmp add mov sbbl add (bad) jl (bad) (bad) insl cs out pushq mov lea xchg fadds cld mov fisub movsl (bad) ljmp out sub add (bad) mov jo add add in or (bad) rcll adc rex.WX mov frstor cmp mov or scas loopne add or (bad) mov mov and jo add movabs rex.XB push rex.WRX xchg xchg shl xor js xchg sahf ja stos mov movslq jb add mov (bad) lahf jbe in (bad) je cmp and push popfq mov add mov cmc vsubss or rex.RXB rex.RB pushq mov sahf leaveq add xchg fwait xor outsb cmpl mov pushfq test add (bad) xor lock lret movslq (bad) cld (bad) add jle rex.X and fstpt divl sbb in sbb add movsl mov cmc add in fcomp jns mov sbb (bad) addr32 lahf jae retq sub add mov (bad) test mov pushfq pushq mov test in lahf rex.RX or mov cmp jns cld loope or mov pop iret int3 add (bad) rex.X mov fsubrp scas (bad) pop pop pushq jnp xchg lret or (bad) add xor rex.WRXB add movabs push jne in mov sti cli mov addr32 push rcll scas data16 gs jb fistpl repnz rex.WX ss lahf int repnz lret sub xchg jnp rol sti scas out jl movsb incl pushfq test push hlt jb leaveq jmpq pop mov pop sub (bad) sbb movsl (bad) xlat (bad) gs mov sahf jae pop sub mov push xchg or pop mov (bad) subb lahf mov test mov retq fcomip jp test (bad) mov (bad) scas push push lahf hlt loope sbb pop out sbb jl jg sti pop jle enterq xlat imul std mov rex.WXB cmp adc jl (bad) (bad) jg rex.WXB and xlat (bad) repnz js in mov push add sub sbb iret jge movabs pop adc adc (bad) repnz and pop (bad) mov mov xchg cmp jae test fiadd mov mov in jns vcvtusi2sd in ds mov roll test js fidivr icebp jns loopne push std outsb add mov stos push decl test adc adc xchg jbe add jnp push in fbld push sahf mov (bad) (bad) (bad) rex.WX adc imul mov pushq add sbb pop cmp fstps xchg in jge rex.XB es (bad) sbb (bad) cmp out test pop mov add adc mov xchg add sbb in mov or xchg cli add (bad) rex.W mov xchg add (bad) mov rex.WRB (bad) cmp add cmpsb std in rex.WRX mov iret jp or shrd (bad) pushfq push (bad) cltd data16 rex.WB add sbb pop cmc (bad) xchg rex.RX jge (bad) rex int jl sti movabs jl adc mov jrcxz rex.WXB pop mov xchg movabs adc push or pop gs (bad) jnp pushq mov lods in push stos jo (bad) mov jno (bad) hlt xchg rex.RB rex.RX (bad) mov js movabs jge int cwtl jns scas xchg lcall cmpsb mov (bad) paddsw pop jno rex.XB repnz fcompl and xor add push cmp fistpll sub (bad) fstpt pop push addr32 lods pop imul repz ja jp and sub rex.WB gs mov jne fildll adc callq cmpb test jl mov shll gs jbe push mov mov or movabs test xchg sarl lods imul cli fisttpl or pop jo adc callq out testl add push mov or shrb and (bad) sbb add out cmp (bad) movslq push scas xchg xchg (bad) (bad) (bad) ja (bad) rex.W jbe and mull movslq cmp lahf mov and je jo pop (bad) add jle mov imul fidivrl idivl movabs push jmp in jg outsb movsl int rorb cmp rex.B gs (bad) movabs xchg (bad) xchg and sub (bad) movsl xchg test mov fimul sub push xlat pop in cwtl xchg sbb jg callq add jl and sbbb scas test je (bad) rex.WRB (bad) jl cld (bad) mov lret jno pushq jl,pt rex.WRB mov add mov flds jbe test jg or xor outsb loop mov iret adc mov cmp adc xchg push std pop int rex.RX pop insl rex.W cld jbe cmp jp cmc jno pushq (bad) imul jrcxz insl int3 lock push mov jno out mov sub sub pop in jo rex xchg sbb insb xchg (bad) cmp cltd js hlt push add imul and or and xchg rex.WRX adc xchg and mov rclb and mull in fwait (bad) mov mov jle out push mov sahf xchg or rex.WRB test or jmp or rex.B rclb xchg rex.RXB cwtl es rol (bad) mov jrcxz rex.WRB (bad) xchg outsl test imul movabs sbb mov cwtl add (bad) orl out rcr callq xchg cs (bad) pop (bad) jae rex.X repz rex.WXB sub add (bad) (bad) mov jnp fmuls rex.W popfq jge je outsl test jbe add mov adc cmp push rex.X cwtl in (bad) rex.RXB test add and ja (bad) (bad) ds lock xchg clc repz lahf xlat sti ja lcall add mov xchg mov add add stc (bad) add or sub push insb movsl fisttpll (bad) (bad) add jnp (bad) loope movabs add sub jmpq push cmpsb test lcall adc lea insl pop mov add popfq pop add xchg pop jl push jnp and lahf sbb (bad) mov outsl add adc rex.R fbld ja mov (bad) fs (bad) lods outsl jmpq jb stos or fs rex.WRB rcrb adc jmp lock pop jne add scas pushq addr32 jae mov (bad) mov fstpt scas cmc xchg nop add rex.RXB rex.WRX add mov fidivr or xor sbb cmp pushq jb cmp sub (bad) movabs rex.RX rex.WR fwait cmpl loop (bad) out mov xchg fnstsw (bad) int imul test test (bad) jne xchg xchg add adc lahf add (bad) and xor cmp push push add jbe add lea push jle jg enterq jg in sub cmp rex.WRB rex.WRX jp push rex.WX lock jno adc movabs xlat ss loope movabs js (bad) addl jae jle rex.X dec mov (bad) rex.WXB sbb xor jge jo mov pushq push callq and (bad) in (bad) add bnd add xchg mov leaveq sub js pop jle mov clc test fisttp add add add (bad) incb xchg imul in cmp movslq mov jle ss mov outsl cmpsb add jg rex.WR jle sbb (bad) xor (bad) fstl sti (bad) ficoml insl pop test mov sub int mov sbb out and sarb jbe adc scas andl xchg data16 cmpsb sub pop mov mov lahf lock lods je imul popfq js push ror or push clc xchg cwtl mov (bad) mov rex pushq mov movabs out mov (bad) jae (bad) add jle test xor (bad) pushq and jl or fcompl mov sbb ja pop clc (bad) es pop sub mov (bad) or add sub or xchg ud1 cmp rex.W pop test cld jne xor js jae (bad) cmp (bad) ss in xor cmp sub ja imul jb lret mov mov gs mov rex pushq push pop jno adc or push jnp mov leaveq movsb outsl jnp rex.XB add xlat jns es jo cmp mov mov xchg jg rex.WRB pop ss js repnz and cmp popfq mov adc addr32 mov jle add sub movabs push test rex.RXB push in rex.X xchg loop imul adc outsb vpsrld (bad) mov push xchg (bad) (bad) jne jno jb jrcxz rex sbb jle (bad) pop pop or callq sahf push add test sub jp imull (bad) neg movl xchg sub in lldt mov add (bad) mov movb insl test or sub jle fucom (bad) cld fisttp and cmp xchg mov mov test rex.X (bad) rcr xor rex.WRXB out es pushfq enterq flds mov data16 add jne sub (bad) pop rex.RXB rex.R mov add test add rex.RX (bad) out lret and out cltd mov subl add (bad) mov cltd mov addr32 xor and (bad) xor mov add xor mov cld sbb push pop clc rex.B adc add jge adc (bad) mov sahf jle movabs lods (bad) sbb in add jmpq fnstcw sub cltd pop rex.WRXB movsl fwait scas cli add or jge jle (bad) xchg xor lahf jrcxz sbb sub and jbe fcmove insb outsb (bad) adc rex.WRB pop clc jl test jbe xchg sub in test insb mov adc jne (bad) icebp (bad) pushq sahf test xchg imul mov rorb mov xchg jbe (bad) jrcxz add mov pushq add push xor in rex.RX shlb jg mov (bad) sbb scas (bad) mov mov sbb (bad) or pop pop decb add adc (bad) and or (bad) jg push test push out pop add cli repz xchg (bad) add sbb jl rclb mov mov rex.XB ss rex.WR retq iret out (bad) (bad) cmpsl repnz orb sub (bad) enterq stos xchg push add (bad) pop sbb cld movabs (bad) (bad) sbb imul pushq (bad) loope adc int std add or je leaveq sahf stc add xchg add mov (bad) ja vmovshdup or (bad) mov lods cli xchg fstpt jrcxz xchg xchg (bad) jg (bad) jmpq rex.WRXB (bad) sbb or pushfq clc lahf pop sub rcrb (bad) jge mov lods or mov hlt xchg stos add je imul rcrl paddb mov or sbb mov xchg add in roll jno loopne push rex.W add (bad) mov xchg jl leaveq cmp movabs sbb out jmp imul (bad) rcll rex.WXB es rex.W xlat adc adc sub cmpsl add xchg pop jp sahf xor data16 rex.WRX push rex.WXB add rex.WR (bad) xchg xchg pushq gs lock outsb rex.XB and movabs pushq cmp movabs cmp (bad) add fdivrl insl or push cmc rep xor push xlat popfq cmp (bad) (bad) mov fwait rex.W jo sub fs movabs movabs and loopne jg jmp mov add imul add (bad) std (bad) mov lea mov mov xchg rex.W pop pop sti rex.XB icebp in rex.RX cmp rorb data16 rex.X callq shll callq xchg in add fs pop adc mov rolb pushfq sub mov movabs add sbb add xor push cmp jnp push and or sub add sbb stc mov and notb mov mov or ja rex.RX sbb sbb int add or shll add lods add push data16 xchg jle or mov (bad) (bad) add pop adc add jle jae sub std popfq leaveq rcll pop add jg add mov (bad) retq mov (bad) xchg int3 (bad) push pop (bad) sbb jp mov add jno (bad) retq add sbb adc notl and sbb xchg mov xchg mov add and fdivr or enterq lea repz rex.RXB cltd xchg fs (bad) jb sar xchg jle xor (bad) (bad) sahf add pushq rex.X cli (bad) add in xor mov add and int rex.RX sbb mov lret fnstcw popfq (bad) stos lahf movabs sbb test jg ja (bad) add pushq sahf cmp idivb rex.WRB test imul sub add add xchg (bad) push cmp (bad) (bad) (bad) or pushq ja stos xadd adc jmp lret mov xor std mov fiaddl xchg (bad) cmp adcb movabs jbe jrcxz cmp jg test push sbb (bad) add jo mov cmp xchg lea (bad) fpatan test cmp sbb sahf pushq mov stc rex.WRXB shl mov adc sub fisubl or rex.RB add cmp (bad) int lods ss (bad) pop (bad) insl mov xchg and in mov sahf cmc outsl push sub shrb jg jbe sbb (bad) (bad) jo addb xchg xchg rex (bad) out scas addr32 cmp cmp jg cmpsl stos push add add (bad) orb xchg lahf loope rex.WRX add movslq jle pushq sbb movabs (bad) sub fs loop xor add mov outsb add mov mov xor add and hlt jle sub (bad) sbb jb and rex.B xor xchg xor (bad) (bad) pop callq pop insb sub fmuls not fwait cld jp push (bad) je (bad) scas leaveq roll cmp std mov lods insl (bad) sarl mov (bad) cli stos jbe fmull mov jl sub push outsl lods in lret andl jrcxz (bad) (bad) loope mov cmp lahf jge gs (bad) adc pop lods fdivrs add jg lret cld jb movabs js sub jle je outsb add push xor push mov add push push xchg fdivs add pushq test and mov (bad) cli mov jmpq add incb scas sbb (bad) jmpq cmp rex.RX rex.W jno data16 mov in retq (bad) (bad) and and fdivrs sbb add mov hlt jge mov or push fmuls xor repnz cld cmp jns jle fistl push (bad) rex.WRXB or xor (bad) add cltd pop in add leaveq sbb cmc std (bad) rex.WR shrb iret (bad) fwait sahf push shll cli add rex.WR addl out pushq sbbb rex.WRXB stos clc (bad) imull pushfq jrcxz sarb decl outsl sarl cmpb ja cmp loop enterq add jg scas and mov fistpl (bad) xchg lock push add rex.R js,pn (bad) add xchg movabs fiadd popfq xchg and sub sbb or or je or sarl out add fiadd mov rex.X pop out (bad) rex.XB xor imul xchg mov mov mov movslq xor sbb in (bad) cmp or add xor loop sbb stos mov insb mov outsb scas imul or mov repnz mov add and rex.WRXB sub jg rcrl add mov cmp rex.B rorb jp xor movslq icebp (bad) movabs mov mov pop adc mov in (bad) mov add pop xchg rex.X es subl add mov jg mov (bad) xchg rolb icebp sbb in cmpsl mov (bad) fs xchg jnp movabs sbb and out es jmp (bad) add xor movabs mov mov idiv mov jnp cmp rex.WRXB lret xor jp and je rex.B rex.XB push (bad) sub xchg (bad) mov sbb add (bad) xor rex.RX outsb rex.WRX mov fs cmp xor adc imul gs js retq cmp test fidivrl and mov mov cmpsl jg jnp cmpsb (bad) add or or stos xchg scas jg leaveq pushq add or push (bad) (bad) (bad) rcr ss rex.WXB add add mov add cld loopne push movslq (bad) iret rex.WB shrb (bad) iret xchg jb rex.WRB sbb xor fs jl pushq pop add (bad) add pop test or pop (bad) xlat fs stc (bad) outsb mov in scas sahf adc adc out add (bad) pushfq int or mov push jnp mov (bad) outsb (bad) (bad) rex.WRB (bad) add mov (bad) loopne and add repz cmp in je rex.WRXB out add adc mov roll cwtl mov rcrb xchg cmc jrcxz cltd sub sub sbb cs rex.X rex.WRX push faddl test fwait or js repnz movabs sub test testb jb rcrb pop rex.RXB cwtl rex.WRXB cmp cmp xlat stos jl adcb (bad) (bad) xchg movsl movsb es (bad) or sbb lock cs (bad) orl (bad) (bad) pushfq xchg jbe imul sbb (bad) (bad) (bad) btl mov test cmp add iret jns mov sub fdivrl jb adc add loopne cmp in movsb add (bad) loopl retq jo fbstp mov nop fs scas jmpq rolb mov xchg cmp lock add cltd cmp add mov callq (bad) or pushq cmpsb add repz push clc je ja add jmpq retq rex.WXB mov mov insb stos add jge or push rex jp cmp rorl sbb mulb jg es loope jl outsb js fisttpl add fnstcw movabs test je jp in push lods sbb ja push lods sub sbb (bad) jbe sbb lahf jg pop jmp or add movabs rex.WRX (bad) push andl rex.RXB in sti in add sub add (bad) (bad) movsl push int3 sbb stos out (bad) lahf xchg sarb and push push (bad) cs sub test add mov xchg mov adcl (bad) and lret fnstsw rex.XB movabs (bad) jo (bad) adc (bad) add lahf cmp jne cwtl mov mul xor jge jo add rex.B or in (bad) ficom rex.WB scas jge lret and and xor (bad) jl mov sbb outsl movabs fstpl xor ficomp out rex.WRB mov cmpsl test insl jbe jns loop cmpsb cmp cmp (bad) fdivl (bad) movswl mov popfq mov add gs addr32 insb (bad) push stc mov sub mov rex.W rex.WX and and xor ss rex.X xor movslq (bad) mov xor (bad) ljmp movabs stos (bad) push xor or idivl pop jns outsl (bad) lock add jg mov push and jl cld adc flds cli out mov cltd (bad) (bad) sbb sbb out mov (bad) pushq mov xor (bad) add (bad) cs xor sti rex.RX jg loopne (bad) mov add or vucomiss nop wrmsr add lret cmp sub pushfq lock movabs mov sub pop and add adc scas (bad) pop cltd jg (bad) or rex.WB js adc sub jne lret push and push out movabs add add add add rex.WRB jle nop pop mov xchg xor mov ds (bad) and pop pushq cmpsl stc mov movslq push mov pop sub rcll jp jmp jo rex and jne xchg fwait outsb or mov test jle add (bad) (bad) repnz pop mov ss sbb add xchg mov (bad) push or mov js retq lods mov jge jns pushq jne mov sub lock jns xchg mov icebp (bad) cwtl add jnp hlt rex.X rex.X fwait std (bad) lods rex.RXB mov insl rex.X xchg or popfq mov insl (bad) (bad) pop rcrb xchg loope xchg mov retq jae lea add sbb cli iret lods sbb jp out outsb jbe rorl xchg pop (bad) (bad) xor scas movabs fist rex.WXB push xchg sti mov (bad) (bad) cs (bad) adc jl rcrl pop lret sub push (bad) push sub jo or inc jp pushq cmp nop push pushq push loop add and and (bad) push je js lods cli jns mov (bad) or rex.RB lock mov pushq rex.X sub push scas and clc xchg in mov idiv (bad) lret jg cwtl xor rex.W lock mov (bad) cmp jbe pop (bad) jge pcmpeqb xchg (bad) mov cmp cltd stc rcrb movsb mov ss push and rcl (bad) rex.RB cltd adcl xchg outsb xlat movslq or (bad) sti cmp out cmpsl fwait js pushq adc cltd (bad) and (bad) xchg (bad) adc and jne mov or sub cwtl jge ds scas push sub lods mov add lods jo cwtl outsb xor add sub xor add (bad) xor test xchg (bad) push loop scas gs xor outsb rex.WRX outsb ror insl (bad) (bad) cmp test (bad) rex.WB and rex.RXB rex leaveq jae lods imul push stos (bad) pushq clc pop pop jrcxz mov rex.RB adc (bad) imul jb (bad) sbb outsb pop xchg pushfq mov xor xchg movabs ror rex.RX test jno insb and add es (bad) push push movabs rex.WRB jl rex.XB (bad) xchg mov stos (bad) pop xchg adc (bad) (bad) (bad) es push std and (bad) test fwait out jl or (bad) xchg fadds cld loopne jne iret movslq divb hlt rex.R cmp clc (bad) (bad) xchg and xchg (bad) clc pop cmpsb adc repz sbb rex.RB pop sub sti cmpsb (bad) add imul add (bad) imul jmp (bad) fldz add push xchg sub jbe in rex.X xor add (bad) (bad) stos add add stos (bad) add fwait scas test mov add clc rcll jno fistl enterq rex.WXB xchg fbstp (bad) pop cmpsb xor jge or testb nop cmpsl or pushq or jg rex.WRB (bad) mov sahf outsb retq lods lahf jg xchg rcrb and jbe sahf sub xchg (bad) push mov xor and mov imul push jle mov scas sub jrcxz (bad) (bad) rorl xchg (bad) jg (bad) enterq sarl lock mov test push (bad) cli fmul xor shrl int (bad) (bad) outsb xchg (bad) hlt insl pushq xor xor sub idivb cmp add fmull (bad) pop outsl sub out mov xchg lock retq je rex.RX rex.X cmp sbb (bad) retq cli hlt enterq test insl sub imul cmp or lret mov sub (bad) rex xchg mov xchg mov es fwait pop push (bad) sbb jg addl add in jle push rex.W lods xchg sub fwait mov popfq sub and mov and sub sub mov sub adc (bad) mov mov hlt mov mov mov sub or jbe faddl rex.RXB and add pushq lret cmp xor std repnz rex.WXB callq rex.WRXB pop sbb rex.WRXB pop outsl mov jbe jb in jno lods pop movslq in leaveq xor cmc lret jge in pop fist sub enterq rex.RX (bad) js (bad) (bad) cmp je fidivr (bad) jge test mov cmpl pop (bad) rex.WB (bad) adc push addl sbb fnstcw retq (bad) lret fidiv ss test test (bad) jle jmpq (bad) cmp or div cmp sub add out fldcw rex.R lods jge (bad) hlt in je rex.WRXB loope repz cmp scas jns lea xorb pop sbb test pushq rex.RX iret in (bad) rex.X fdivs mov xlat out sti js mov out outsb push mov xchg loop jbe pushfq jb rex.XB rex.RXB mov and cwtl retq insl (bad) rex.RX push jg sub ss sub lods jns movsl ffreep cmp (bad) push cmp in and movsb push sub mov mov (bad) rorl (bad) in (bad) rex.WRXB sub pop (bad) es (bad) add (bad) (bad) cld scas jl cmp movabs ja shlb adc out push jg xchg nop rex.WR jge or xor je rex.RB (bad) fisttpl push sarb fs xlat xor mov (bad) add xchg addl (bad) rcrl pop adc rex.RXB mov add xchg jbe mov ja push xchg jp test pushq std xchg and outsb jns out xorb mov (bad) (bad) xor rclb pop sbbl sbb fidivr adc mov int sub in rex.X push (bad) cmp xor jb sbb rcll (bad) xor rex.WRB movabs push (bad) cmpsb imul scas jo add nop jg (bad) lods imul rex.WR repnz sbb rex.XB pop xor fsubl in (bad) mov rex.WX add lea nop adc addl sbb mov jb repnz fld rex.WX lea mov loop cmp pop mov callq ss add test popfq mov fnstsw sti or sub lret scas (bad) pop rex.WB (bad) icebp mov mov jmpq stc adc add outsl and or sti push add mov hlt mov in iret add insb push xor (bad) neg decb lea jo insb jb sbb rex.X cmpsb pop add lock stos jp push scas in adc xor xchg mov scas add xchg shlb movabs mov (bad) sbb cmpsb jmpq imul adc fisubr mov stos addr32 jrcxz mov insl add (bad) retq jnp jp sbb rex.R lods and bsf jp fldl out cmc movabs movsb insb push add out nop loope xchg or pop add jle pop (bad) std cs and lock imulb sbb gs clc mov and (bad) roll loop (bad) test cmpsb (bad) add movabs loop add rex.WX xor cmp pushfq pop add icebp add xor sbb rolb jg (bad) rex.W jle lods rex.X repnz je sbb cmp data16 add xchg stos xchg (bad) cmp jg sti lock insb (bad) test xor sbb pop sub cmpl stc sub imul cmp push add (bad) (bad) mov sub (bad) pop in rex.W jbe clc cli lret outsl (bad) rex.X and stc adc cmp and loope (bad) out data16 lods xchg retq mov jle frstpm(287 push fdivr movabs and fsts (bad) pop pushq add leaveq pop je hlt xor pushfq rex.RB rex xchg mov xadd xchg and (bad) rex.WRXB js mov add add jrcxz mov loopne js push adc je sbb lods fnstenv out or (bad) jl jns jb adc or rex.R cmp xchg rex.X movabs rex.WXB xchg (bad) jmp outsb rex.WR mov rex.WRB jbe int movsl cmpl sbb jmp int3 jne cmp adc rex.W xchg fnstcw (bad) out mov jp fcoml movabs cs insb cmp cld rex.RX fs nop mov mov outsb mov subb adc outsb pop jg jae out movslq mov jb pushfq jle fucomp xchg repz js jae insl and add lods pushq and pop sbb vmovss rsqrtps rex (bad) add xlat pop ss (bad) js xchg cwtl jl rex.WRB pop xchg lret retq fdiv add jg pop jns or mov not (bad) xchg xor cli cmp xchg mov out fisubrl cld (bad) (bad) outsl rex.WR movsl xchg int jl xchg lods flds lods adc xor movslq loop fs mov rex.X mov (bad) xchg pop movslq rex add out add cmp push (bad) in movabs pushq movsb xor jns (bad) xor retq in sub pop push (bad) cltd jo out and push adc adc (bad) or and data16 fist xchg add (bad) cmp jbe jo rex.WXB repz jp leaveq pushfq (bad) add pop mov xor push in sbbb bswap rex.R mov xchg (bad) lods xlat repnz fiadd or add popfq push (bad) pop xor rex.B (bad) sub jle add push in (bad) data16 es adc movabs (bad) (bad) adc mov retq jno in jle mov push and notb movsb pop mov add mov (bad) cli lods lods data16 fadd add xchg or adc loope rex.XB test push xor int3 stc sub stc (bad) movabs mov movabs and outsl hlt cmp rex.W jle adc (bad) (bad) xchg (bad) js (bad) imul cmp mov (bad) sti out sbb add cld (bad) adc sub (bad) out (bad) ja sti push add xchg lret jp movabs hlt xchg int jg in rex.RX cwtl test (bad) ds jg jl sub ss jmpq (bad) pop idivb (bad) sbb test jle and or push movabs sub stc jrcxz jmpq sbb and add test jno repz add in pop in (bad) ja cmc lock xchg and (bad) stos sbb xor adc rex.B mov (bad) add hlt sub and xchg es adc icebp sbb jmpq fs loope (bad) pop mov fidivrl lahf (bad) addr32 stc clc xorl rex.XB faddl add mov and rex.WRB and imull sub add (bad) ficomp (bad) es outsb out fnstcw jmp sbb add pop adc mov adc loopne xlat in rex.WR (bad) xor scas push (bad) (bad) fidiv rex jbe jnp mov out mov jne jg fidivl jle mov (bad) xchg (bad) out jrcxz rex.RX pushq sbb (bad) fadds mov mov callq cmpsl rex.B mov sbb mov (bad) mov stc (bad) mov pop pop (bad) iret insl push (bad) divl sub (bad) (bad) add xchg adc push xor add in (bad) mov loope in movsl push xor (bad) int mov pop cmp or in test (bad) mov pop jns (bad) nop cltd iret js adc jne mov mov sbb scas mov rex.WRXB add sbbl clc mov (bad) push jle rex.RB (bad) fiadd ss rcrb je int3 add push cs cmp shrb mov xchg movslq sub mov cmp sub mov or scas cmc rex.X hlt mov fs sbb sbb cld mov sbb cmp pop jle (bad) cli cmc or test add imul jge rex.RB mov jns cmpsb xor pop rcl push add (bad) xchg (bad) add retq sbb addr32 jle int3 pop xchg pop (bad) (bad) loop xchg mov ja add sarb mov xor mov mov movslq (bad) (bad) sbb lea stos jnp jle add fwait popfq je sahf out or (bad) (bad) and repz rcr add pop rex.WR (bad) (bad) lahf rex.W rex jne push inc int3 adcl add (bad) mov push js (bad) sarl add xchg rex.RX sahf rex.WR (bad) in add (bad) adc rex.WB mov jp insb jns push and adc push in test loop std retq lods xor leaveq mov (bad) (bad) (bad) xchg sbb andb insb out jbe pushq jns xchg (bad) pushq cmc (bad) jns movabs out add rex.RB jne mov mov mov jo stos imul push cmp rex.WX adc push insb mov (bad) mov (bad) mov xchg pop mov jge rex.RX xchg int3 cmp cmp rex.B out mov (bad) add xchg or jmp or rex.RXB (bad) mov iret adc outsb in retq (bad) std (bad) and (bad) cmp addr32 (bad) rex.WX test add add or out sub shrl mov (bad) mov (bad) cmp (bad) repz push loopne enterq cli xorb (bad) movabs rex.W fisub fdiv push mov movabs xor sub add jno decl cwtl sarl sbb sbb (bad) stc (bad) xor (bad) es movsl fldt (bad) mov std lods (bad) fistpll mov or add xor push ja lea sub (bad) or fwait sarb and jl and sbb js out rcrl jns xchg add jp (bad) out callq and pop or pop lock (bad) subl sbb adc jg shlb mov xchg movabs rex.XB sub pushq and add sbbl sbb in xor pop pop rex jns movslq adc jo add rex.R test rex.W popfq (bad) or jp cmp push jle outsb fdivrs rex.XB sub and sub mov (bad) jns add movsl mov jl and ficoml (bad) pop rex.R in xchg ds cmp xchg xor ss push and xor sub outsb rex.RB out add jrcxz jo mov pop imul rcrl add cmc sbbl (bad) add cmpsl push mov push out (bad) xor jb (bad) mov mov jns in movslq loop movabs mov pop xor hlt (bad) std mov outsb test insl (bad) and sub add test out out mov add (bad) enterq int3 in sbb pop std (bad) sbb sbbl xchg sub xchg add data16 clc rex.WXB fstpt shl jb cmp jg callq xchg clc fnstenv cmovae adc je stos fs jge sar (bad) mov cmp jae xchg (bad) adc movsl (bad) loop in (bad) mov pushq in jns sbb sbb jg (bad) lahf rolb sarl add push jne fxch mov subl and hlt movsb rorb retq rex.WR fistl cld int (bad) nop jp sbb out loop cmc sbb stos and (bad) rex.RXB iret outsb pushq (bad) sbb lods mov sub pushfq (bad) jnp retq push or and cmp or xor jge (bad) add (bad) clc jp add (bad) xchg repz jge and jb stos icebp (bad) (bad) loope xchg in add add pop add fisttpll push mov pop adc (bad) sbb ficoml loop mov lahf xchg jno (bad) cli movaps and xor cmc add pushq gs mov fldenv iret incb (bad) xor clc xchg cmp mov sbb popfq loope jbe push jb xchg sub cmpsb sbb add fstp mov test mov sub (bad) xor xor sbb std mov mov jbe in mov (bad) sub test (bad) rex.RB (bad) insb jl dec iret stos fs (bad) push (bad) add jge rex.W jmp add cmp pop jle pop mov lahf jrcxz sahf (bad) loop movabs add (bad) or sub fsubrl mov mov stos (bad) add test add cld es adc stc jns js jge and sub out jle pushq (bad) in movslq lahf add int int3 (bad) add stos add jl push (bad) lods fidivl scas sub jo rex.RX or insb insb jle loopne jge in (bad) lods movabs movslq add verw xchg movabs movabs notb rex.RB sbb (bad) stos jne leaveq rcrl mov in push jmp cli repz mov movslq fdivs xchg fnstenv movabs incb test test pop jl repz std or cmp xlat pop xchg fidivl xor movabs lret jle mov sahf icebp sbb mov cmp lret stc cltd sub mov or (bad) (bad) movsb (bad) cmp rex.RB adc rex.WB mov and rcll rex.B movabs pushq jae stos add cmp or in sbbl adc xchg test loopne (bad) inc jmp lods cmpsb test xchg in sbbb or lock rex.RX xor add and add (bad) sub rex.WRB xchg push stos rex.XB (bad) pop in xchg jmpq icebp pushq jg ficom out mov iret loope (bad) cs add rolb add sahf cmpsb outsb mov add rex mov pop icebp and pop xchg add rex.RX fdivrl add push iret xchg add cld sbb mov rex.WRX add mov out rex.R out jg scas sub js movabs in (bad) add xchg rex.WRB mov imul add pop cli xor add movabs loop (bad) loopne jne jb rex.WB pop mov outsb hlt nop or (bad) lahf fisubr jge fldt (bad) rcrl (bad) (bad) add sbb (bad) xchg jo loop mov mov fisubl cmp xchg scas xchg jrcxz push jnp push lea jle insb pushfq out rcrl sub lock (bad) adc or fistpll add movabs jmpq xchg cmpsl pop es push rex.WB add loop jnp (bad) (bad) enterq movabs jb pushq mov add test add cmp add mov and popfq xchg rex.R movabs push out rex and repnz or add xchg cmpsb stc fildll add (bad) cmpsl and push xchg popfq sbb ffreep sub sahf mov ss add lock enterq mov scas frstor std add mov xor (bad) (bad) (bad) outsl js sub movsb es add punpckhdq (bad) hlt add shrb fwait add jp or fs pop clc lods in roll pop js xchg (bad) sbb jge xchg out (bad) jo fs sti sub fildl push in sbb and xor adc mov es stos int3 add rex.RX mov and test mov (bad) jno pop (bad) outsb (bad) pop xchg add icebp loope jmp xchg jp insb xchg jo stc mov fsubr jp or add mov (bad) (bad) push add mov xor adc icebp add rcll leaveq xor movsl (bad) fs mov (bad) out sub movabs mov int3 add pop incb (bad) clc jb mov (bad) outsl movabs jns jnp adc add movabs (bad) sub rex.RX mov out jbe rex.WB (bad) stc jmp mov add jnp out mov stos mov test scas movsb je push jmp in test and xchg movabs fwait (bad) add push sbb fisub add or hlt vandnpd pushq loope jle xchg sbb mov ljmp in out jl scas jno mov out clc rex.X repz xchg icebp jl (bad) push scas and cltd (bad) jb jrcxz rex.WR std fcompl nop mov shrb add sahf repnz test ror sti sbb (bad) adc in add push cmp ds and mov add sub sub fdivr lret (bad) xor xchg mov in add xchg pop fmuls mov sahf ja mov (bad) or imul xor stc mov stc (bad) jle fs pushfq (bad) sub testb mov xchg add jnp and add pop mov mulb mov and mov add add outsl and jp addl fdivl rex.RX movabs and int repz icebp adc or ja lock (bad) sub fnstcw sub mov jbe jbe sub loope xchg lret adc add (bad) and cmpsb lea rex.RB rex.WB je rex.WXB or add movabs (bad) rex.RB adc rex.WRX lods or or mov (bad) lea xchg (bad) callq (bad) jno cld cltd rex.WXB std mov lods test sub lods ds (bad) pushq lahf je sti stc movabs jnp movabs xchg (bad) ss xlat rex.R sub outsl jb bnd jmpq (bad) or rex.RXB js cmp scas add fnsave (bad) fwait (bad) (bad) add sbb lods or sub cmpsl add out push repz movslq (bad) rcrl rex.R push cwtl outsb lods loopne add (bad) (bad) xchg (bad) jle fdivrl mov xchg pushq test test jns jp rcr out sahf (bad) pop pop scas in rex.W mov je pushq movslq in scas xchg xchg (bad) in xchg cmpsb jge or rex.WR movabs mov pop (bad) add es push data16 outsl decl jne (bad) mov and loopne mov jbe lret sub adc or test rex.WXB jno fldl incb xchg add (bad) add and cmp (bad) mov (bad) test (bad) je add (bad) stos rex.WXB add rex.WRXB xchg add cli imul mov sub mov (bad) xor movabs (bad) (bad) insl inc fnstenv mov fwait xor push imul (bad) (bad) lods insb mov fwait rex.X (bad) add mov cmpl cltd jae add jge jle push imul sarb outsb add sbb sub and (bad) mov out and je or fnsave add stos xor in rcrl (bad) mov jns sub mov sub mov repnz decb out (bad) jl cmp jno (bad) jmpq cwtl shrd out or jmpq test xor or rex.RX je xchg jrcxz rex.WRXB test imul popfq movslq rex.WB and pushq iret out sub jp and add leaveq imul fdivrl nop fidivr pop (bad) pop (bad) or xor sub fildl push cltd or leaveq adc adc pushq (bad) out cld movabs movsb cmp shrl (bad) push outsl jle pop (bad) test cmp sub sub mov (bad) lock pushq mov push in push shll divl add (bad) sbb sub pop rex.WRB in cmp js push sub cmp bnd neg mov jb sub movabs (bad) fwait js cld mov pop jbe je nop (bad) push insl sbb movsb cld leaveq mov (bad) loopne fimull xchg fbstp in fs and mov (bad) rolb jrcxz jmp or cli hlt imul std jg mov add addr32 int3 jrcxz std insl retq retq clc sbb (bad) outsb rex.RXB xchg (bad) rcrl pop lahf xlat mov hlt adc test xchg mov rex.XB lods xchg outsb repnz add sub sub push xlat (bad) icebp pushq ror pop adc or fadds out popfq sti xor cwtl xchg ds sbbl (bad) (bad) shl (bad) pop jns test idivl rex jle (bad) (bad) movabs (bad) mov cltd rcrl xorl sahf ja rex.WB data16 scas and movsb notb addr32 xchg mov xor lock icebp rex.RXB movabs push rcll ss mov (bad) mov (bad) mov addb idiv push xor jmp xor out jmp in cld fldl cmp cmp addr32 jne or jmp (bad) stc jo je jae mov add leaveq fcoms outsb add jne (bad) xchg push scas jnp rep loopne fcmovu and mov adc sub xlat iret lret (bad) mov (bad) xchg xor and jp push rex.XB (bad) out rex.RX jne shl and and xchg (bad) out loopne xor movabs xchg in (bad) cli (bad) ficomp and movslq xchg es insl xchg int pop icebp cld iret pushq (bad) xor push mov data16 scas rex.WRX rex.X sbb push add lods enterq and pushq rex.RXB adcb or rex.WR notb cmp cmpsl rex.WXB (bad) add cmp xchg subl add rex.RB (bad) or sub pushfq pushq in scas sub add jge fcoms lods leaveq add xchg xchg (bad) shl pushq cmp jg xchg push fimul fwait (bad) (bad) xor (bad) pop or rex.R (bad) data16 add (bad) adc jno (bad) mov icebp mov or cmp (bad) xlat cs mov fidivrl add movabs (bad) movabs repz pushfq lret sub xor and cmc add jge insl rex.XB je retq sbb out or cmpsb mov push jg (bad) mov add sbb mov (bad) fildl pop add test fs rorb stos rex.WRXB mov (bad) rex.R adc stos icebp add nop mov in jne mov push sub fdivr xchg int3 (bad) (bad) fildl sbb rex.B (bad) mov out mov incb add (bad) negb (bad) leaveq addb adc pop jae fdivl add jbe int push pop add rex.WR lahf mov add (bad) push pushq pop vdivsd (bad) out xor (bad) jae rclb test (bad) add iret (bad) sbb and js clc rex.W xchg jmpq in lods lret (bad) mov rex.RX sbb add rex.R push sahf push (bad) xchg iret rex.RX bnd (bad) (bad) je jmp sub cs add in adc add ds add int (bad) xchg rex.R mov rex.RX js jle lret jp retq jnp paddw (bad) retq icebp (bad) test mov (bad) (bad) (bad) sub cld xor je sbb fwait adc xor and movabs mov mov movslq and lods gs pushq cmp fs add jp add mov sbb rcll (bad) mov int rex.WRB faddl xchg jb xor adc (bad) jb (bad) lods loope (bad) adc mov fdiv loopne pop incl push fstps mov (bad) (bad) mov mov rex.RXB push xor push out add sbb out rex.WXB add cmp je adc rex.WX (bad) rex.WB add lods mov adc roll push sub test (bad) cltd ja (bad) stos in jg fsub jne hlt adc stos fs mov (bad) mov rex.WXB push fistp or adc cmpsl xchg cli and loopne packssdw push jle (bad) mov and jl rex.RX clc callq (bad) cmpsl (bad) ja cld add sbb mov rex.RB data16 adc jo out add rex.WRXB gs icebp pop mov rex.WRX mov lea add or mov mov add mov test rex.WRB adc sbb repnz pushfq cmp fdivrl mov sbb sbb add cmp cmc mov cld adc (bad) cmp punpckhdq mov jle movsb push pop (bad) fisttpll or rorb add sahf leaveq (bad) xor or lret imul jbe add adc xor or (bad) mov mov pushq mov sub popfq (bad) xor repnz mov movabs (bad) and or mov (bad) sub fcompl lods cld xchg imul jnp cmp (bad) stc add and (bad) add insb out mull and mov (bad) xor (bad) add rex.R test fs mov jmp or lret mov add xchg (bad) xor and movsb in mov jp push adc and jns pop sub add cmp pushq and mov sub (bad) stos mov push add (bad) jno imul sub stc (bad) int3 lret pop (bad) rex.WRX movabs in int3 rex.WRB movslq pushfq movabs (bad) iret cmp js and rorb icebp movabs push adc subl js incb mov stc add rex.RX add pop std or push sti loop (bad) mov int (bad) rex.WXB pop ds jp retq rex movabs pop rex.W iret rex.RB mov jo stos rex.W movabs lea sub insl (bad) (bad) sarb adc fwait pushq mov add xor (bad) jae (bad) (bad) add push addr32 stos movsb (bad) jl cmp and outsb sub jo imul insb cli jp add cld scas xchg jg mov add xor ja in or jp callq mov add jb mov rex.XB mov add sub push mov add lods xor cwtl rolb and sub or mov push sti test rcrl and fcmovb fnsave push (bad) (bad) ja jge neg cmp out jne movabs repz sub xor xchg fs hlt mov mov mov xor adc rex.WRXB insb rex.WXB mov sub clc xchg jl outsl rex.WX js stos imull shrl xchg testb (bad) and jle (bad) pop rex.RX rex.XB sbbb rex lea and mov sarb int stos adc push jnp (bad) (bad) mov movabs movslq retq retq xchg jno adc mov clc pop xor (bad) rex.RXB shrl sarb jp mov xchg cltd mov repnz pop cmp or gs rex.W out popfq (bad) or jg jno rolb jnp rex.RXB and cld lret add add pop int3 (bad) std lods xchg rorl (bad) jns icebp (bad) or mov out lock jge pop fs jb nop movabs repz negb movsl xlat or xor mov pop xchg js mov sub insl sahf divb cmpsl cmpsb adc xchg pushq mov mov and pop pushq (bad) (bad) pop (bad) jne in sub (bad) or xlat xor add andl (bad) cmp (bad) rex.WXB jg and rex.RB test (bad) loopne retq cmp jg int test (bad) lock add sbb roll jbe add cwtl cmc adc loopne add movabs mov jb jb outsl pop in rex.XB cmc (bad) pop (bad) mov push xchg pop flds push lret xchg and xchg imul add add movabs test test or pushfq (bad) rex loope and std mov adc loopne sub pop sbb lahf xchg pop xchg movabs add out mov int add jg or jno push (bad) rex.WB sub imul retq lods int leaveq addl mov or mov (bad) rex.RXB scas add or movabs repnz rex.WXB jge and sub ja cmc mov movsl jp (bad) rorl outsl mov push out add mov add cmp retq sub pushq mov insb rol mov retq rorl js (bad) callq cmp outsb xor (bad) mov mov out add (bad) add ss sub idivb ficoml rex.RX movabs mov jno loopne cmp jb enterq (bad) test and mov jns rex.RB add icebp jo movsl add ror (bad) adc and rex.WRXB jno (bad) xchg rex sarl xchg (bad) mov sub lods jrcxz mov rex.WB test (bad) pop mov (bad) decb add movsl mov (bad) push mov insl mov jbe test jbe nop cmpl mov xchg cmc and jns lea mov test rex.WB (bad) fs lret rex.WRXB push callq mov jrcxz mov add sub outsl rex.X xchg jl sub lret sti xlat sbb stos add or sub punpckhdq cwtl (bad) mov jbe mov std (bad) pop xchg fmulp (bad) or enterq adc clc jo insl add mov sti sbb (bad) (bad) or jl sub lods (bad) shll push (bad) and fstpl (bad) rcrb mov jae shl in (bad) (bad) and outsb (bad) sbb (bad) push pop loope sub cmp pop (bad) mul out mov mov ss cwtl scas pushq adc movslq xchg add fs mov sti xor movabs xor mov js jmp mov (bad) adc jge mov pop rex.XB movsb shrb jmpq push mov add je jmp pushfq scas (bad) hlt mov add mov xlat xor pop or mov add adc outsl push and fincstp retq (bad) callq (bad) iret (bad) jg and test imul js sahf rex.WRB cmp mov movups in mov in pop jp loope add rex.XB (bad) mov sbb test xchg lock test lods test push add (bad) adc add xchg (bad) jle adc rex.WXB jg (bad) cltd repz sub js sahf cld xchg sub mov adc mov fadds xchg sbb jg fwait sbb decb (bad) push jnp rex.WRB push (bad) lahf mov outsb stos add fldl2e mov cmp movsb or or jns jp sbb (bad) (bad) rex.R (bad) pop (bad) testb xor rex.WRX or callq (bad) adc sub std out movabs mov loopne xor insb rex.R add sahf lahf fdivs cmp jp (bad) jge pop lock add mov add movb sti jne mov rol cmp xchg mov mov je orl rex.WX cs add insl jns add xchg cmp lahf int3 imul sub icebp sbb out mov movabs jrcxz (bad) add push pop add sbb sarl (bad) movabs (bad) mov (bad) mov movabs (bad) clc rex es rex.WRX adc push sbb add xchg rex.WRB rex.WX push cmc pop sahf int jg push rex.WRXB adc (bad) not callq xchg sub int sbb jae pop and rex.WRB test (bad) insl push imul (bad) push (bad) mov add rex.WXB retq jl pushfq rex push cmp push std negl outsb rex.X nop jo rex.RXB rex.RXB rex.RXB push cmp iret (bad) sub add cmpsl or mov rcr jne (bad) std test in rex.WRXB xlat fbld fiadd cmp loopne xor sbb add adc movabs mov stos imul shll xchg cmp std rex.WRX jnp and or push mov movsb pop (bad) popfq fwait sbb rex.WX insl mov sub jle in pushq (bad) add hlt sahf add jae test jno and add push rex.WB popq rcr xor adc int3 rex.WRX outsl scas add out pushq add in jae int ltr jne mov pushq add sbbl xor int xchg mov movslq cmp add xchg stos shrb jle push add (bad) sub pop xor cli lods sahf idivb cmp jge movabs (bad) add (bad) in or sahf xor (bad) (bad) rex.R jmp add mov (bad) (bad) add clc adc rex.X jle rex.RXB push out test sar (bad) ja push jg rcrl adc jrcxz jle mov rex.RXB (bad) notl (bad) mov iret push test imul or or mov retq xor xchg add rex.WRXB sbb add popfq mov cwtl rcrl add add sub add xchg rorb movabs neg pop (bad) ficomp (bad) jp (bad) cmp pop pushq sbb (bad) jg push enterq in and (bad) scas fs (bad) (bad) pop sbb std add add fadds js jp adc (bad) rex.WRB rex.X insl js xchg fwait mov xchg xor outsb sarb mov stos push cwtl (bad) (bad) outsb ds mov jg scas cmp jnp or cs (bad) rex.WX repnz lods sahf outsl adc cmp rorl add (bad) (bad) jae xchg mov std lods rex.RB movabs out sbb out lret sbb shll pop xchg lock rex.X dec mov and in insl movabs movabs cmp add fnstsw sbb lea jle pushfq jge in xor pop sub xchg and cmp add add lods adc lahf (bad) scas pop (bad) xchg mov rex.WRB jl insl sub movabs pop adc fsubrs cmp rex.WB (bad) repz push mov mov js std xchg jb mov mov (bad) jg jp (bad) xchg (bad) jg lods mov mov movabs movabs outsb (bad) lods fcmovu test fildl test (bad) mov pop (bad) add mov (bad) jae pushq pop out loopne jge sbb negl (bad) rex.XB xchg fsubrs fldcw adc pop movsb callq mov (bad) pop outsl and xchg in in lods and (bad) data16 imul outsl lahf loopne (bad) and rex.W fcoms (bad) (bad) lahf sub stos es ds mov imul ja jb adc fisttpl cwtl (bad) cli test ds mov leaveq rex.RB loope (bad) (bad) (bad) (bad) (bad) pop insb xchg and ja sub sbb xchg cs jp js rex.R rex.RX stos cmp fmull pop jae cmpsl clc cmp push leaveq test jne rex.WRXB (bad) and (bad) fs incl testl jbe movsb cmpsb jle (bad) push vmwrite out mov xchg adc repnz sub or mov outsl xchg (bad) add xchg (bad) int pop (bad) (bad) cmp imul cmpl pushq cli jb mov pop vextracti32x8 mov jp lods (bad) cmp (bad) pop test lods jne jo std rex.WB (bad) addr32 sbb or and mov imul push mov xchg nop jnp pushfq xchg sub rex.RXB cmp sbb nop fsubrl and (bad) and outsb and cli xchg (bad) fincstp pop (bad) iret jno xlat jle jo fimul push sbb cmpsb retq popfq mov xchg (bad) cmp or (bad) (bad) mov xchg mov addr32 cmpsl rex.RB cmp scas (bad) mov mov sbb (bad) iret jmpq fstps (bad) xchg jmpq sahf out and mov mov add mov clc stos frstor lods callq callq (bad) jb cli pushfq mov sbb (bad) repz shufps adc adc mov sub addl mov sbb sar rex.WB movabs (bad) mov adc fcmove mov sub jl (bad) push pushq (bad) int push insl in pop jl imulb and (bad) mov cltd jg bnd rex scas sti sahf and xchg add lea (bad) and (bad) js cmp int3 push mov jle pop cmp movabs adc rex.WRX and fnstsw jp (bad) cmp mov cmp (bad) mov jno add stos add xorl xor mov jae xor cmovs fcmovnbe enterq sub add sub xor xor xchg loope mov mov sbb mov or cmp (bad) xor push (bad) out es xor gs push jp and (bad) sub xor mov test sub jle (bad) xchg mov movsb mov add pushfq jo test faddp (bad) loop (bad) add add stos fnsave pop add or push sbb nop add cmp (bad) pop or jle jl andl add movsl stc mov sbb (bad) mov add pop jp jrcxz flds lock mov rex.WRXB int3 rex.WR or and callq and cli push mov (bad) in cltd sub rex.WRX sahf (bad) vunpcklpd (bad) ficomp cmpsb add scas insl (bad) add rex.W test push xchg (bad) add add cmp mov cli push add pop stos xchg cmpsb sbb shll mov rex.WRB nop (bad) icebp movabs lea (bad) rex.WB mov adc jb sub sbb mov push jle insb sub hlt or xchg mov out out sbb pop mov lea pushq mov stos mov pushq push (bad) rcr rex.XB shrb sub add callq je push rex.RX xchg shl retq lods popfq movabs add jle cltd es and rex movabs push cli jg lods push mov jmpq (bad) popfq sub notl movabs jbe outsl adc or mov cld jo stos mov lret or adc mov adc stos cmpsl add rep (bad) add movsb push fistpll jmpq sbb scas xor pop jle stos rex.RB lret and (bad) or pop mov test nop mov pushq add (bad) sub cmc loopne push mov xlat (bad) (bad) add loope or mov fistpll cmp pop enterq jbe setbe (bad) rex.WX jg rex.WR mov add out imul (bad) jle (bad) clc nop xor rex.RXB sahf cqto pushq (bad) add cmp cli (bad) sub int3 mov (bad) push movslq clc add cmpsb jp (bad) mov test mov add scas imul hlt mov (bad) loope add pop out ficomp sbb addl jrcxz mov pop loopne jnp xchg test enterq decl popfq adc (bad) mov int3 (bad) pop or rex.X rex.WX movsb mov cmp (bad) push (bad) movsb rex.RB not pushq jg push (bad) cmp (bad) movabs sub stos std lret rcrb and (bad) out add push sub icebp lods adc add (bad) (bad) (bad) add push pushq sub mov or add cmp mov sbb jle add push scas fisttp (bad) lea cmpsb cltd dec mov add rex.WR xor hlt imul out test icebp and leaveq add gs (bad) rex.WRXB fs (bad) mov pushfw iret outsb stos (bad) jno add (bad) leaveq push imul mov int and fs andl test add movsb mulb (bad) xlat (bad) iret loopne add add (bad) lock xchg add mov lret out sbb mov mov std sahf add retq scas pop jnp rex.WXB out es add movabs sub jo cli (bad) fwait mov pop jno (bad) pushq jne xchg jg cwtl add add push add lahf (bad) outsb mov xchg movabs mov retq (bad) loopel rex.WR (bad) pushq pop rex.R (bad) (bad) out jge xchg add out (bad) jl rex.WR pop or pop add adc addr32 jno cmc mov jrcxz cld add ja flds cmp insl and mov or ja rex.WRX sbb out popq (bad) cwtl js pop repnz add xorl gs cli mov add cmp pop icebp loop lahf retq mov (bad) test push (bad) scas mov xchg movabs ficoml add xor add movsb add (bad) push or fiaddl cmp rex.WRB lea add test insb add jle xchg cmc fsubrs jne enterq movsb add movabs ja and imul rex.WRXB (bad) push (bad) sahf enterq sbbl add test mov mov rex.RB rex.R rex.WR movabs add push dec (bad) jrcxz push (bad) outsl pop movabs lock (bad) cmc pop (bad) sub (bad) adc jrcxz callq pop jbe jno hlt popfq (bad) (bad) jle mov (bad) push jmpq xor pop adc xor std pop in jl and in pop sarb push (bad) js (bad) iret add lods loopne rex.WRX fadds rex.WRB xor and lret nop addb jns mov and movsl cld adc mov rex.WRB ss (bad) add push xor push add add sbb cmp popfq fcoml fildll push icebp mov (bad) data16 xchg jge push callq jle or jl (bad) jg rex.W leaveq lods sti rex.XB int3 jns sbb cmpsl movabs jl cwtl (bad) mov mov add jnp (bad) pushq (bad) or lea sbb addr32 rorb (bad) insb sbb stc shll movsl imull add es sub cli std popfq addr32 and and in jb xchg add mov sarb rolb and pop insl add (bad) mov lea test rex.W (bad) (bad) add rex.X rex.WRX neg iret mov (bad) int fnsave in insl sub add jle jmp jl callq jbe lret sbb sub or rex.RB ss (bad) test retq xchg movabs sarl push push fwait or clc add xchg push push movslq jg (bad) jmp je lock scas (bad) (bad) mov (bad) sahf adc loop stos (bad) jge xor (bad) rex.WRXB (bad) cmp mov jae movabs lock pop sahf imul mov mov xchg cmc or cmp xchg stos and add lcall leaveq rex.WRXB sbb cmc jg loopne push push (bad) xor retq xor sbb stos (bad) shrb fistp in push test (bad) jns xchg movsl shlb adc rex.WRX fptan adc pop es rex.WXB mov xchg mov add rex xchg (bad) mov (bad) fisub add mov loopne jb and scas mov cmpsb rcll iret stc (bad) rclb pop jrcxz rex.WB (bad) mov (bad) outsl js callq jg jrcxz lret xor (bad) js jg xor cmp lods (bad) loope push (bad) and (bad) js xchg (bad) std rex jnp repnz adc push mov push cmpl cli and adc out jo adc iret jns cmp jle js (bad) jmp loopne xchg pop add jae pop lock mov rex.RB fs je jmp sub decb sbb fildl (bad) sahf pop (bad) xor cli (bad) add icebp int3 movabs cmpl imul (bad) mov lret xor pushq add lret cmp fs push scas cmp (bad) out (bad) test por adc lock rex.WRXB add xor or (bad) sub (bad) jb es je jno jae (bad) movsl pop mov mov xor mov jae enterq add rex.WX mov add out or add lret mov and cltd (bad) or insb je rex.R add (bad) add push mov notb and add push rex.XB adc rcrl pop and add mov xlat movabs xchg (bad) adc xchg sub rex.W lret add mov mov mov xchg (bad) je xchg mov (bad) jle pop xor jg mov pop test ja lahf (bad) lods fs (bad) (bad) (bad) sbb add rclb xor sbb or jbe or and adc add (bad) jle mov cmp mov jge lock cli mov int3 test mov rex.RX cmpl (bad) xor xchg mov and loop and rex.R rolb mov add rex.RX push jp jae cmc stc (bad) in sub repnz pop sub sarl in int rex.RX fistpll or test leaveq rex.WR xor mov mov and (bad) or mov sbb sahf xchg add int3 out mov lahf or jg mov movsb repz loopne retq xchg sub add pushfq mov mov in xchg outsl sahf rex.W jg mov sti int cmpsl repnz mov push mul and add push callq (bad) (bad) xor xchg out jrcxz cltd (bad) fiadd ja jns nop movsb movl lods add movabs push rex.XB js insb (bad) pop jl movslq fildl (bad) pop loope xor (bad) rex.WR jns fs movabs sahf add mov push data16 lahf rcl jle rclb nop pushq mul scas fild andl int pushq and (bad) jp rex.RX test add ss out movabs jp rex.RX sbb shrd sarb sub fbld (bad) jns xchg stos pop lret mov add mov push jb (bad) lock jg xor (bad) stos xchg (bad) and (bad) sahf add (bad) imul int pop test and mov movsb jnp rex.X rex.WR mov rex.RB rex.WXB bnd rex.WRX (bad) fild addb test movabs and or (bad) mov sti adc in jg loopne andl stos push (bad) lea (bad) mov jno movabs push rolb rolb popfq mov push mov (bad) and or adc scas pop cli rex.WX rex.WR out ficomp add mov fisttpl push jle add xlat xor adc fdivrl fs cltd mov sbb in xor in (bad) (bad) lock (bad) jo add rex.WR jne clc push rex.RX pop in mov cltd lea add mov jge out xor sahf decb insl and add (bad) or sub jno ds (bad) add xor loop (bad) sbb movslq je jle pop or or or ss mov loope rex.WRXB add rex.WR pop adc stc jbe cmp test test xor adc cmp or jrcxz retq pop nop xchg (bad) pop mov cmpsl gs mov clc jl and (bad) fnsave stos or out xchg lods adc cmp sub mov xor (bad) (bad) xor ss xlat push cmp push (bad) cltd (bad) ss je nop mov stos ds or cmp (bad) in jrcxz in mov xchg sub mov pop jmp add sahf rex.WX repnz neg insl adc enterq out sahf and mov js lret pop movabs pop lret rex.X mov rex.RXB adc fs cmp test mov (bad) fcoms sub (bad) (bad) fs push push rex.X ss out fiaddl ss mov jnp imul sahf rex.R jo (bad) cmp stc pushq rex.RB (bad) rex.RXB repz (bad) xor sub sarb xor xchg (bad) and stos jg mov add pop callq jg ds mov and and rex add (bad) pop and sbb rcr rex.RXB mov data16 rex.RB rex.WX xor insb andb rex.WRXB (bad) jbe cmp or retq (bad) xor movabs adc sahf shll shrl repnz and cmp (bad) and xchg out (bad) cmp push mov cld sahf sbb add je test stos xor cmpsl cmp enterq push add xchg (bad) jp (bad) (bad) fcomps fs rex.WXB repz fsin cmpsb (bad) sbb int stos sub cmp lahf (bad) cmpsl (bad) mov mov movsb rex.RXB repz mov add (bad) movslq add sahf clc andl xchg add push (bad) (bad) and addl insl cli (bad) fs xor enterq and in push (bad) adc imul add std (bad) (bad) jl (bad) movabs lahf mov cs add adc push callq imul jle fldenv sti iret xlat add jg iret mov cmpsl (bad) mov pushq sub mov jno add jmp jg iret sar jmpq jbe cmp add mov cmc push (bad) (bad) and retq xor jp outsb ss mov xor mov adc push rex.W fnstenv (bad) stc fist out (bad) mov cmp pop push lock movsb (bad) mov callq pop rcl scas sub jno rex.X sbb xlat icebp and jbe sub jmp jbe je mov (bad) sahf xchg (bad) movabs mov test mov rex.W mov movsb add xchg cli rex.RX callq cmp mov pop (bad) xor mov retq sub pushq jg mov (bad) ss mov mov jmp add xchg in (bad) mov adc adc add push (bad) (bad) lret sti popfq add out mov add (bad) cmp cmp push leaveq add rex.B lret cmp (bad) mov add (bad) pop cltd (bad) (bad) (bad) push lahf movabs pop add mov rex.RB pop fadds adc ja jne (bad) mov jg (bad) fildl leaveq fwait jae callq pop (bad) sub mov (bad) mov test std scas (bad) mov es add lock mov mov retq (bad) mov cld imul (bad) or clc pushq or fsubl xor jg (bad) adc or (bad) lret pushfq xor adc stc (bad) (bad) test (bad) out rex.WB callq adc (bad) xchg (bad) add xor stc movabs adc je add push sbb rex fwait out jle jg mov cld stc add adcl (bad) outsb imul add (bad) out xor and adc jp rex.XB mov incb lret (bad) cwtl sbb rex.W pop je rex.WRB out (bad) jp pmullw data16 add hlt xchg fstpt (bad) movabs je adc pushq mov rex.WB (bad) xchg sbb cmpsl (bad) add and leaveq or sbb add add push test outsb icebp insl sub jg orl rep cmp iret in add js nop add repnz jl clc sbb pop rex.RB (bad) cli js mov add loope mov jno sub shlb (bad) (bad) rcrl rcl ss pushq jle test mov movabs cmpsl rcll mov adc xchg xchg jg mov xchg fist (bad) lods in out xchg (bad) pop outsb xor (bad) (bad) pop adc fisubrl stc imul jge stos pushq xlat push mov imul (bad) nop test (bad) mov scas addr32 lock movabs add (bad) addl mov sub push adc (bad) fbld rex.B rolb callq and fstpl lods cs xchg cmpsl push adc or xchg stos iret xchg (bad) xor (bad) pop xchg (bad) jne add (bad) pop ss jrcxz jno in sbb std rex.RX mov sub (bad) jmp jae and adc (bad) adc adc (bad) jl rex fwait adc leaveq jrcxz add (bad) and nop sbb ss (bad) mov (bad) xchg sbb ja je out pop cmp (bad) sub pop movslq mov push lock pop imul cltd jbe and cli add mov fimull xlat cmp xlat hlt xchg rex.WB imul and in sub icebp jrcxz movabs std ljmp jrcxz sbbl lock mov insl and scas and xchg add xor pop insl bnd or icebp rcrb sti cmp rex.W pushfq pushq xlat gs rex.WX outsl rex.W mov sub adcl or (bad) xchg out lock mov cltd notb pushq movabs outsb jbe cmp (bad) (bad) cmp xor xlat gs out jbe cmp jne (bad) push adc pushq out (bad) pushq fs lea jle pop (bad) adc mov negl mov push xorl rex.WR push lea rex.X push mov pushq mov jne movabs rolb push imul (bad) rex.RX jle rex.RB ds jo mov jge lods sbb and (bad) cmc xchg jl (bad) (bad) mov callq add sbb (bad) jo movabs (bad) cmp callq add sub fwait xor jg movabs lock lea mov (bad) scas notb cmc movsl fidivrl pop mov cmpsb push xlat add repz add (bad) cmp insl jmpq and imulb (bad) sbb add outsb rex.W rex.X rex.RB fs sbb sbb mov out je jmpq rex.RX rex.R ds movl xorl movabs cmpsb (bad) jge add orl mov stc lahf push (bad) std sub js (bad) cmp jg mov mov add roll (bad) pop (bad) (bad) pop jge adc push rex.WRXB fwait push ds rex.B adc outsl xchg jb rex.W rex.WXB add lret (bad) mov test shrb stos jo rex.RX cmp mov add popfq push repz mov sahf rex.WR (bad) jp cmp test (bad) and add jo outsb add and sbb mov add stos (bad) pop mov test fwait (bad) fild jle movabs xchg cmpsl add jnp (bad) sahf cli and cmp push fsubrl mov pop in jl (bad) add rex.RX or in (bad) cmp repnz rex.WRB pop mov lret pop (bad) and rorl movabs pushq ds jb (bad) sub (bad) callq clc vcvtss2usi sub mov hlt (bad) xchg cltd in jp jno (bad) rex.WXB loop add or outsb fimull jg,pt rex.WXB jp (bad) repnz adc (bad) shll sub (bad) sti jge (bad) add jle fnstsw cmp jl decl jnp test rex.W scas add andl shlb lock cmc xor test cmp idiv fdivrs sub test push iret (bad) jl movabs xchg (bad) xor in test jae (bad) fcmove jb lret lods or rex.WRX rex.RX int decl in (bad) jo incb add add (bad) jrcxz add xchg cmp (bad) callq in pushq (bad) scas mov shrb pop iret fidivrl movabs mov jmp popfq (bad) mov pop add and push (bad) cmc std (bad) mov add std jne rex.WRX insl sbb rex jo cmp push or in rcl add (bad) retq jge mov and adc cmp cmpb fsubrs xor jae xor xor cmc (bad) outsl js or jge fsubrl push int jnp mov add insl leaveq mov js (bad) mov add cld pop mov xchg jmpq jmp pop fistpll xchg imul outsl cmp sub (bad) add lea int pushfq push jle lahf and mov xchg cmpsb (bad) or sbb jo (bad) add xchg rex.XB int3 lods and int out insb fisubl pop jg,pt rex.R addr32 sbb jns icebp lret in add rex frstor out clc stos (bad) push (bad) jp xchg test sbb add scas (bad) xchg adc or cltd lods or and js hlt jl idiv mov xorl cwtl (bad) push mov add jl fstpt (bad) fsts mov popfq pop js pop jae mov incb cmp xchg add jle add rex.RB stos mov sahf mov mov (bad) jg (bad) sub fwait sarl mov negl sub mov pushq sub sub fwait in ja pop mov and jp mov sub jp iret movsl movsb lods scas nop xchg pushq (bad) add insb cwtl mov (bad) add je jae sub or rex.X pop pop jb divb lret sbb outsl shl stos je andb (bad) leaveq add mov adc add (bad) mov icebp jge data16 (bad) test jp leaveq sub (bad) cmp add es xchg rex.RX retq cmpsl mov jb adc (bad) mov imul nop (bad) cltd and movslq cmpsb retq cs (bad) (bad) rex.R (bad) (bad) movabs movabs addr32 pop pop (bad) jnp jb push in push andl rex.WRX sub add jae xchg idiv orb adc lahf rex.WXB in add callq pushq mov cmp mov fadds (bad) jb jne (bad) xchg or jge (bad) in sbb (bad) pushfq cmpsb std mov int3 leaveq jle rex.RXB out sarb or cmp push test jmpq jle int rex.RX (bad) jb add rclb insl outsb and outsb add fsub rex.WB add (bad) sbb cld lret (bad) mov xchg loop and rex.RB test add mov movsl pop int add cmovae iret push or (bad) (bad) scas fwait movabs cmp std je (bad) add (bad) (bad) test je sub (bad) scas lea (bad) (bad) add xchg xchg mov loop rex.B leaveq (bad) je (bad) fmuls scas push sub add imul (bad) testb enterq xchg cmp mov (bad) mov fdecstp lret sbb (bad) rex.RXB ja notl add add push jmpq add cltd pop xchg sbb add imul sub (bad) add or add pop jno mov cld xchg mov ss test add cmpb rex.RB jae fs cwtl pop xchg imul cmp xorl adc icebp test frstor xor shrl push mov sbb mov rex.RXB xchg mov push in nop rex.B rex add insl outsl cmp add in loopne rex.RX nop xchg (bad) sub cmpb (bad) jb enterq add add pop add mov in roll add add rex.X add roll fwait icebp mov (bad) sbb mov (bad) jae (bad) mov rex.RXB test js test leaveq sbb or setg add xrelease xor in fs rex.WR (bad) repz movabs callq (bad) push mov outsb xchg pushfq out jae add notb pop mov movabs push lock mov clc rex.XB mov loop outsl cmc lcall xor xor sbb rex.WXB add nop jp jle repnz out lods int3 imul repz mov out adc sub push (bad) pushq or (bad) hlt js jg fiadd idivb (bad) or rex.WRB jrcxz adc lods movabs add (bad) movsb stc std and rex.R (bad) (bad) xor rex.WB (bad) gs mov mov fs movabs and jbe (bad) (bad) and xor cmp mov rex.WR push and pop xor in push test fs rex.WR outsb (bad) jae in lret movslq jo add pop cmp xlat paddd (bad) xchg mov sarb scas add xorq (bad) push test pushq movabs scas (bad) cld or addr32 (bad) fwait rex.WB jg jo mov hlt rex.WRXB mov (bad) sub and mov xor sub (bad) rex sub xlat enterq retq adc mov pop pop test sub movabs fwait mov (bad) hlt (bad) add cs sti jle mov cmpsb in je push pushq sub iret jmp mov add mov add cmpsb push xchg mov xlat jbe mov pop push pop pushfq jp rex.WXB or mov (bad) clc add and rex.WR lods push lock rcl incl pushfq xchg pushq pop idivb ds add (bad) cli xchg jrcxz test push scas repz sub jg (bad) (bad) cs movabs push xor imul cmp and sub jb adc icebp test sbb jb (bad) repz lods pop shll rex.WB sbb out add test sbb fsin movslq fildl and and add jp mov shll retq in (bad) or (bad) or (bad) outsb (bad) (bad) xchg pop test sub (bad) mov (bad) and add pop lahf outsl (bad) mov adc (bad) mov int3 jno and sbb add rdtsc pushq jg rex.W rorb (bad) ds stc add adc xor addl jrcxz mov mov cmp xchg rex fwait xlat (bad) or fs sbb and movabs adc ds fwait or rex (bad) or sub mov jae cmp jne adcl pop loope sahf cmpsl jb jae retq je xchg (bad) js rex.WB stos rex rex.WXB verr cs add movl jle pop hlt add ror sbb rex.WRB cmpsl (bad) add gs jnp lods xorl jmpq or or xchg jge fisttpl stos and std mov rolb rex.RX repnz and xchg loopne add ljmp (bad) add cmp (bad) mov std jle pop test cmp gs mov mov int rex.R sbb fadd test mov adc sar loop insl shrl push add and xor mov (bad) cltd ds pop fldl ficomp pushq jp (bad) jg es (bad) jne push rex.RX data16 mov imul pushq movabs int3 fbld (bad) lea (bad) adc rex.WX stos sbb jne push cmpsb adc cwtl (bad) jo (bad) xchg pushq or push (bad) push insl cltd jrcxz (bad) pop jle,pn add adc iret push mov (bad) fisubr or movb sub pushq mov cmpsb cs repz in out fstpt push lahf rex.WXB push (bad) fsubrs mov (bad) fcomi imul pushfq xchg pop fsubl loop (bad) (bad) add iret mov ss xchg icebp mov adc mov push mov adc lea jmpq cmp (bad) pop pop xchg jo (bad) jbe jae mov outsb jno fcmovnbe mov add (bad) je adc or fstl shr ss cmp cmp outsb or subl xchg pop sub push (bad) push jbe ss xchg jnp (bad) xor (bad) and mov pop pop sub icebp jae mov xchg push sbb out notl (bad) sub jg add push mov xchg add add in (bad) cmp (bad) test movabs rex.B rex.W cmp mov xlat fucom mov sub sbb imul rex.X (bad) cli cld push iret insb rex.R ja cmpl scas xchg add cmp pop rex.R (bad) loop push faddl insb outsb (bad) shrb or icebp sub stc in (bad) pushq xchg cmpsl imul pop rolb add rex.B sbb (bad) (bad) (bad) gs scas mov xchg xor rex int movb (bad) test push and xchg or add outsl cltd rex.WR movabs roll add pop xor sbb mov push imul add cli rcrl push and xor and jmp mull js stos pop sub (bad) movabs add popfq mov add in (bad) repz push and push jns xchg add data16 sub pop jl mov fbld adc enterq (bad) jns rex.RXB push mov rex.W (bad) sti add sahf xor test pushq (bad) rex.WRXB adc movabs push outsl lret rclb or mov movslq cmpsb (bad) xlat movabs outsl add mov (bad) stos add sar je retq add adc in push xchg es add scas push jb (bad) pop jb fidiv imul stc movsl rex.R sti sahf (bad) movabs add rcrl movabs (bad) fildl in pushq sub pushq mov sahf add pop jmp jg (bad) add push subl data16 ss jg cmpsl rex.R loopne (bad) jns fdivrl imul jae xchg add xchg (bad) adc xchg fidivr iret mov add sahf rex.WX shlb or jle (bad) (bad) rex.W (bad) lahf add (bad) jle mov sbbb rex.RXB jp fxtract rex.WRXB jp fwait rex.R in (bad) mov (bad) rex push jl and (bad) cltd rex.WRB or cmc cltd ficom jb nop sbb pushq (bad) add data16 mov (bad) loopne jmpq add (bad) adc jns addl add test insl cmp or in mov lret movslq scas pushq cmc jge (bad) movabs add hlt xchg cmp add pushq (bad) jnp add mov add add (bad) jmpq out adc mov (bad) gs (bad) in rex.WRX jnp test fldcw push add or cmp movsb xor rex.WRX sub ss xor test fs rex.WRXB subb mov add cwtl fidivl mov enterq push jnp rex.WX rex.RB add imul rex.WRB test es and jmpq (bad) xchg (bad) add fwait jge mov out add rex mov (bad) or icebp not or rex.WX shrl jmp push or (bad) (bad) adc mov cwtl add in idiv mov mov mov data16 xor xchg lods push (bad) lods rolb mov fadds nop lea sub mov sbb add mov and loop clc cwtl outsl data16 cmc xchg add (bad) xlat sub movabs cld jl xchg add sahf movabs mov jge movabs outsb push jmp rex.RXB rex.WXB callq jl mov int sub mov outsb (bad) retq sub xlat xor movslq clc (bad) mov subl fist outsb jae callq mov (bad) sbb movslq test (bad) jge cmp (bad) jo out (bad) add xor pop movabs xchg jle cmpsl cmp lods stos je xor jl (bad) pop adc imul mov movabs sub push rex.R xchg (bad) rex.WRXB or fiaddl (bad) sahf sbb adc sti xchg cwtl push ja fnsave (bad) add rex.RXB (bad) (bad) sbb adc cmp jp sbb add sub lods adc leaveq xchg lret retq gs or ss rex lahf xchg lods callq imul mov cltd rex.WRB out push mov (bad) (bad) xchg pop rex.WRX and and push pushfq sub cmp (bad) insb je xor add popfq ds movsl addl imul rex.RB (bad) mov and jrcxz mov pop fbstp jmp jno retq out rex.WRB rex.X jp sbb mov rex lea lahf out je jg mov hlt jb icebp sub nop rorb (bad) (bad) cli adc jne or ffree jb push lods enterq and pushq add fwait nop frstor add rex.WRXB repz jo lahf cmc add int3 sbb add sub jle test mov (bad) fcompl (bad) xchg mov iret add xor xor test mov repnz mov sbb data16 jb cltd ss sub cmp push (bad) std (bad) or sbb adc sub cmp test (bad) rorb retq test push retq sahf sbb (bad) or cmpl add rolb mov jne jo xchg jae add (bad) ja jg rex.WXB add (bad) movsl add (bad) rex.RB pop in push fildl (bad) and (bad) mov bnd (bad) lock rex.R lret out jmpq pushq xchg or jrcxz adc adcb addr32 enterq add cwtl sar jg add mov ficoml sbb jp jp imull pop sbb in fwait jg mov and cmp (bad) rex (bad) (bad) xor mov push xor mov scas outsl rorb xchg iret cmpb (bad) mov mov leaveq push jns rex.RX iret xchg add mov sub mov push callq std cmpsb and mov and add mov add mov rex.WR mov shrb mov es addb cmpsb fstpl hlt cmpsl popfq mov movabs pop out test (bad) lock ficomp cs or sbb add in mov outsb rex.XB icebp nop xchg add (bad) idivb mov jo fmuls or and sbb enterq (bad) repnz add xchg lret add ja pushq (bad) (bad) add je roll jns jg jrcxz sbb mov add fisttp mov fnstcw and rex.WB (bad) out add xchg jno or fisttpl icebp andl icebp mov movabs cmc jl addr32 in fwait mov add xor scas jl rex.X jp jns adc xchg (bad) movsb pop sbb out mov xchg sub mov (bad) pop testl push rex.WR add lods add jle (bad) jne sbb add mov cli lock or add jg fiadd loope lods push int3 adc rex.WXB icebp fucomi scas (bad) jne mov (bad) sub (bad) fsubl xor rorl andl addr32 jae je jle (bad) imul rex.WRB mov add in shlb rex.WX (bad) rex.WB sarl stos or mov fadd mov movabs lea fisubr movslq (bad) cli jle,pn push loopne popfq or sbb test or movabs mov (bad) add (bad) (bad) push (bad) faddl sti xor movsl sub add and add loop xor in flds rex.RXB (bad) in addl xchg rex.WXB adc rex.XB xchg (bad) es rex.WRX add jb rex.WRXB add pop stc fwait mov (bad) push jle and cmp pushq in add mov outsl cwtl sub pop fsubs ja sbb rex sti add js jg mov jbe add or add mov jo add xor movslq out sub repz data16 jp fdivrl add cmpsl jle rex.X andl (bad) xlat adc sub add or pop cmp (bad) jg rcll scas test add mov out ss jo jbe cmpsb (bad) int3 adc rol add gs in add mov sbb jle je (bad) cli enterq mov loop and cli jb jle loop jb mov adc xchg scas add add add vmovq imul outsl jno jl mov iret sub enterq add decl (bad) xor movabs jl sub add xchg jge cwtl xor cmc mov cmp rex.RXB xchg or repz movabs jno (bad) jg ljmp xor (bad) stos out imul (bad) jg mov (bad) mull fadd loop (bad) jae roll fistl add push addr32 fs rex mov (bad) ficom popfq mov mov int3 callq out fidivr lret push jg (bad) mov push notl lret js xor and mov sub cltd fs xchg pop mov and add movslq pop mov stc lahf jp (bad) xor out or pop cmp add shrl mov mov insl (bad) and cmc push repz add (bad) psraw add sbb jmp mov ja sub add add or out jnp push (bad) xchg loopne sub mov add (bad) jmpq jbe push mov cli jp lcall sbb jle mov (bad) sub imul fist jp and push pushq rex.WRXB mov (bad) xchg (bad) (bad) jrcxz sub out cwtl std jnp retq xchg pop pushq leaveq mulb lret outsl xchg adc add cs lods jns mov in shrl and (bad) jae lahf adc jg testb rex.W outsb xorl sub lods out lret pushq es cmp jg (bad) outsb std pop mov pop pushq sbb (bad) mov (bad) pushq jl scas add jbe test cmp loop push push and rex.B mov sbb xor sbb push or rex.X fsubs fist pop (bad) cld sub js sbb add (bad) jns jge fmul jae test jp xor outsb (bad) (bad) in sbb mov jg testl rcl (bad) (bad) sub ss pop xchg pushfq movabs or jge clc jp jno pop leaveq hlt jge push (bad) rex.WB iretw mov out and scas addr32 add rex.WR js nop movabs rex.B rex.WXB shll add lods rex.R js out pushq (bad) jb xchg xor cmpl cmp push rorl test lods sbbl jl pop rex.WRXB (bad) jmpq cmp sahf fsubrl nop pushq rex.RB adc (bad) (bad) xchg or jb rex.XB (bad) pop jl (bad) or (bad) imul ja imul repz rex.WX sbb xchg (bad) sbbb sub jp rex.WRXB mov rex.WR fstl fcoml adc push jbe fildll outsl (bad) cmpb jnp mov notl enterq jmp rex.WRB rex.RB nop (bad) decl xor je stos test push xchg pushq leaveq cmc or cmpsb xchg mov and mov scas mov sub imul int std cmp jle cmp mov and int3 (bad) imulb imul (bad) and fdivrl (bad) fdivr or xchg rex.X jmpq leaveq xchg outsl mov rex.WXB mov ja push test xor (bad) push adcl imul xchg add lods add sbb ja pushfq cwtl jl outsl jle addr32 mov mov jb sti sbb (bad) insl ja out leaveq movabs fcoms (bad) iret jne jnp lods mov mov cs rex.WRB cs rex mov jnp (bad) int xor movsl mov out adc xor iret cld idivl (bad) and rex.RB test xchg xor sub iret mov pop lods (bad) (bad) and push (bad) sbb (bad) out pop jae in or in adc and xchg int insl pop sarl cmp pop jl loopne fs rex.R or data16 cld cs mov (bad) mov outsb movabs adc lock cmpsb add sbb (bad) and sbb xorl adc (bad) loop out (bad) outsl add outsb roll leaveq sub cmp mov jl test lret add push scas pop shrl rex out jne jo rex.X add loope popfq jrcxz pop sbb xorl (bad) mov fs pushq add pop rex.X rorl pushq (bad) add scas (bad) jle jbe (bad) fs mov (bad) cld mov js (bad) or sub (bad) mov cld lea mov retq roll fisub in in rex.WRX push xchg adc jns sub or xchg (bad) (bad) pop hlt incl (bad) scas ja push sbbb (bad) push rex.X xor push (bad) rex.WRX (bad) retq cmpsb push cli es lock rex.RXB jns int3 (bad) sbb rex.WR data16 cmc mov (bad) mov rclb push xchg cmpl jbe mov pop icebp rorb cmp movabs mov (bad) mov and fucomi xor cmp jge outsb out rex.WX (bad) sub (bad) (bad) fwait jns pop cld (bad) loop add jle xlat fsts outsl jmpq xor (bad) mov jg rex.RXB (bad) push loope imul adc je cmp sub imul adc push sbb jne rex.WRB mov xchg push cmpsl popfq pop xchg xchg sub mov outsb sbbl fcomp mov mov je jno xor sahf movabs xchg pop cld test push es movabs out adc adcb in xchg (bad) (bad) rex.R jmpq nop mov in cmpsb push mov roll rex.WX (bad) movabs pop (bad) insb cwtl add sti sub sbb movabs cmp (bad) push jp mov cs (bad) test mov in rex.RXB (bad) movslq (bad) test roll insb in lods xor adc (bad) jg pop and xchg rex.WRX out shrb in (bad) outsl push jp jbe sub mov xlat out sub in cmp sbb mov lret insl xor push rex.WR pop je sahf insb movsb lahf movabs (bad) (bad) rcrl rex.RX jg repz jne cmp ds stc sbb sbb sub jnp jo loopne (bad) jns rcl (bad) cli mov cli rex.B sub xchg mov and pushq push jo (bad) in (bad) push (bad) incl jl rex pop fmull xchg fidivrl lret out lock (bad) pushfq or mov add fbstp pop idivb movabs sbb add rex.RXB movsl sbb rex fcmovne and addb setbe sbb adc jnp push es pop add jge mull xchg mov loop add (bad) (bad) add mov addr32 mov cmp add mov (bad) add repnz add rex.WRXB push mov (bad) add rex.RXB repnz push add mov add add (bad) mov hlt fsubp sub push pop jbe (bad) callq fwait rolb hlt fmul out xor (bad) (bad) pushq sti add shrb add je or enterq lock add rorb push cltd (bad) cwtl cmp add iret pop std test mov push (bad) callq sbb mov rcrb ds mov jle fadds jg repz sbb add jp (bad) je outsb cmp mov jle sub (bad) add xchg xor rex.RXB add (bad) divb or jl rex.WRB rex.X data16 mov leaveq xchg mov push add (bad) (bad) (bad) add mov in insb lock (bad) imul rex.RX rex.RB incb (bad) (bad) jge lods int movabs jg mov pop pop in out fadd add orl add xor test (bad) sahf roll push or cli (bad) mov addb outsl in and or add pop (bad) js fs mov out xchg (bad) rex.WRXB testb outsl (bad) add push lret rex.R (bad) imul add jl pop lods rolb push decl mov xchg movabs rex.WRXB sub jo test add add pslld (bad) jbe (bad) fs jmp add and fs nop lret rex.WRX jrcxz icebp jb mov fdivl (bad) mov xlat pushq rex.WR es sbb mov cmc add out jrcxz mov (bad) (bad) (bad) (bad) (bad) (bad) jb adc xor cmc and rex.RB jg adc je rex.R fwait (bad) add decb out pop jb add nopl pop sub (bad) (bad) jg rex xchg and add pop lahf (bad) rex.WR jno jg mov (bad) fs cmp fbstp add (bad) imul xchg rex.WXB (bad) scas lahf ds jle movabs or nop (bad) (bad) (bad) xor jmp add or pop (bad) out (bad) lea cmpl sub lock mov and mov and xor (bad) mov loop rex.R mov add or jle insb sbb or xor jrcxz jmp adc mov lahf ds stos sbb rex.WRXB add and pop mov (bad) add mov fistpll movabs mov out push (bad) (bad) iret mov add (bad) out and and rex.WRX xor mov add sub and orl (bad) (bad) or sahf rex.WX sub jle add (bad) out rex ds jnp retq pop jg mov fcom mov add scas cld fsubr jnp and repnz mov xorl jl cs mov sbb (bad) mov nop (bad) adc xchg adc add cli jae mov rex.WR jle imul pop sub add adc lods jne xchg mov push xor mov jmpq jb xor rex je or jp sar insb loop andb (bad) stc mov xor xor mov in push ljmp mov movups add leaveq and add clc fsubl sub loop rex.WXB mov (bad) jp lret and cmp adc pushq data16 pop fwait mov (bad) rex.WX lahf in lret push movabs mov subl out movsb jle xchg rex.WRX jg and add not rex.W es (bad) add jg cmp mov movabs xor insb pop add and lret and scas rcr sub jle fld data16 or jnp push xor xchg mov push int3 pop popfq jmpq insb or mov rex.X fs rex.RB jl (bad) pushq xor (bad) and fistpll rex.WX cmp imul push test mov xchg xor movsb fcomp jge push cmp dec sti add rex.WXB sbb xchg mov and rex.RX sarl sbb (bad) (bad) jp (bad) cmp cmc add stos sahf adc rex.WR jmp scas xchg sub mov jle outsb fnstenv cmpsb lahf in xor incl adc nop mov jo (bad) push test mov cmp jno mov add xor and (bad) xchg sub leaveq pushq add movsl fwait lods lock pop jb mov std lret (bad) jno xor xchg sbb and xlat xor out add push fs in rex.WXB (bad) pop jbe leaveq xor and movslq enterq (bad) in pop add test mov mov add (bad) mov push lret xchg add lods cmp sqrtps out or insl rolb shll push fcomi movslq rex.B (bad) jg cmp (bad) xchg mov jl test jg (bad) in or (bad) sub pushfq cmp addr32 (bad) scas adc rex pushq scas lods sar adc push push cltd insl jge rex.WX cs iret rex.B and xor jg jp ds (bad) in adc pop lret cmpsl or adc xchg sti lret mov scas imul cmc add lock jno pushq xchg addr32 shl or movabs retq (bad) rex.WRB xchg (bad) (bad) out je add cmp xor rex.RX fmull jb fndisi(8087 xchg movsl and retq (bad) mov adc jg jrcxz xor movabs insl lock adc rex.W loope rex.WRB outsb or rex.WX rex.R push (bad) cmpsl out push xor (bad) lahf rex.XB (bad) jns (bad) jrcxz (bad) out cmp xchg jne mov mov movsl jl (bad) jge push rex.R add rex.WB add add (bad) negl adc mov add cld sub xchg scas xchg sbb fcompl (bad) and (bad) sub cmc push rex.WRXB add scas cmp std mov jmpq add mov (bad) xlat rex.WXB rex.RX (bad) imul cmp rcrb adc and add cmpl push jl setg (bad) and add add not vorps out and mov (bad) (bad) (bad) adc cli cmp popfq movabs movabs cmpb int3 sbb jb cmp out stos mov add mov out test xchg xchg adc sbb pushq or mov and rex.WRXB adc movabs test (bad) ss (bad) and insb adc nop vpsravd pop xor cmp ja pandn cmp xor add and sar mov and pop leaveq adc jb int3 movabs (bad) gs pushq jne (bad) cltd or icebp (bad) add leaveq js add push ja lods imulb jo push sbb adc or sbbb jns pop mov adc scas add rex.WX and mov (bad) mov ja (bad) rex.R cmpsb insl je mov test fs lods cmp mov sbb add fstpl add imul mov adc (bad) test xor out rcrl xor lock lods mov add hlt callq js ds (bad) enterq stos mov je popq retq jo int3 fimull loope mov fs movabs jg outsl jnp clc rex.WR xchg hlt add push add (bad) ror test std (bad) add rex.R movabs movsl mov or orl jl sub insb cmp (bad) and add stos in sarb (bad) rex.RXB xchg rex.X fisttp out pop add pop and add fldl lret xor rex.WRXB std xor add mov mov test retq loop notb mov mov loop mov cwtl imul mov sub sub xchg (bad) rex.W or roll scas repnz add mov (bad) rex.RB mov (bad) rex.WR add movsb (bad) icebp mov rex.WX std add ffreep xor cmp iret push rcrb callq (bad) sub sahf fbld mov rex.RB insb mov fwait mov retq add jo sub rex ss mov cmpsb fwait sbb xchg (bad) insl lret jp in jl int jge mov loop jae (bad) or fcoms lock rex.RX jmp jge retq nop mov cmpsl (bad) xchg (bad) xchg (bad) fwait (bad) cmp (bad) xlat (bad) scas rex.WB outsl fadd (bad) add stc pop rex xor (bad) movslq sbb lret (bad) es jl popfq imul xchg shlb movabs cld repz pushq out test jg (bad) movsb repnz xchg jnp out or (bad) mov mov (bad) pushq adcl out add adc or popfq vmptrld movabs in (bad) push pop push sbb cs sahf xor pushq fistpll cs sbb xchg and insl (bad) add ficom rex.WRX fdivl adc cmpsb sub pushq data16 rsqrtps pop add insl fidivrl (bad) jae push push xchg scas rex.R adc imul add or xor test (bad) icebp gs push loop popfq pop rex.R rex.WB jmp insb movabs test in xor cmp in adc jne shrl add idiv outsl retq lods stos xor jle xchg (bad) (bad) rex.RX insl and cmpsl (bad) mov outsb (bad) jb jbe add sub (bad) xor (bad) mov cmp xchg xor decl xchg int3 or (bad) outsb callq add (bad) (bad) mov jbe icebp adc data16 xchg lock (bad) xchg sbb movsb pop mov pop pop repnz jbe outsl mov xchg lock xor rorb rex.X xchg pop sub (bad) insb (bad) (bad) sub sbb repz or (bad) or addb sbb jbe pop movabs (bad) push push out cmp fsubrs pop push pop rex.WR sub (bad) (bad) rex.RXB repnz (bad) mov outsl (bad) cmp sbb push pop or scas std ja sti mov in movslq clc rex.XB pop movabs rex.XB outsb rorl or (bad) rex.WR stos fdivrl sbb jl retq xor pop cwtl test xchg add fldenv cmpsl clc adc mov (bad) addr32 rclb cmc outsb cmp adc sub xor imul cmpl rex.X loop mov pop out ss mov jo sbb test pop pop add xchg xchg ja sahf sbb cmc jnp lea nop int3 and movsl (bad) add rex.WR mov (bad) mov (bad) loope std adc repz and jb loop test addr32 rex.B xchg mov adc (bad) jg lret pushq jp jne (bad) xlat jmp sub fistp stc (bad) lret push jp lret sarb (bad) movslq add (bad) pop enterq sub outsb (bad) jnp leaveq fmul (bad) fisttpl js mov mov bswap sub retq or jne faddl jl and jns jo rex.X movabs push mov push adc jmp mov nop pop fisttpll xchg (bad) jge xchg test imulb pop rex.WR pop (bad) pop xchg mov xor insb mov pushq sbbl xor (bad) scas mov out js jle movslq mov pushq pop mov fs or mov xchg or jle mov hlt sub (bad) add jae pop (bad) xchg rex.RXB pop out push xor stos (bad) cmp test mov xor adc lods mov out pushq (bad) movabs mov (bad) rex.WRB mov mov movabs (bad) jrcxz sbb sbb lods rex.RXB jrcxz ja stos push pop pushq jne sbb lods mov jl xchg retq xor rex.WRXB jo callq cltd pop or cmpsb jne jnp,pn rex.W add movsb in pop mov mov (bad) mov sbb sub xlat mov fdivrl js (bad) (bad) xor lea imul rex.R rex.RB iret or shl gs rcpps add idivl rex.X ss and cltd and retq adc (bad) pushq (bad) invd jg rol mov idivb add icebp mov (bad) fcompl jns pop jns add pop adc add lret add mov rex.WRXB fimul add (bad) pop fwait test pop hlt mov jo mov rex.RB clc (bad) stos test rex.WXB mov jg fistpl fidivl add xor mov ss ds lret add xor mov and push rex.RXB adc (bad) scas in (bad) (bad) mov pop rcr es xchg std cmpsb callq or std rex.WRXB notb pop push add vorps mov in fcmovne (bad) add xchg sarl push lods and rex.R xor push xchg insb (bad) or or imul out lahf add add enterq (bad) sub adc cmp cli adc push (bad) mov mov adc add (bad) adc pushq pop jg sub add fnsave lret movabs add callq (bad) (bad) xchg pushq cltd (bad) add mov cmp enterq int insl movsl fwait add (bad) mov loop cmp rcrl lret add jnp rcll fwait lret jbe (bad) (bad) sti (bad) sbb mov pushq (bad) cmc data16 cmpsl pushq movabs rep mov (bad) add sbb cmpsb and (bad) jbe in xor hlt fadds adc pushfq mov or insb cmp (bad) mov test adc jg pop cli clc loope rex.WXB sti mov add mov push (bad) adc jns (bad) push add pop sti callq add jmp push out rex.B movsl add pop sub jno add rex.XB (bad) cmc pop cli mov push pop (bad) (bad) mov (bad) (bad) (bad) rex.WXB pop add rex.WRB fs popfq movsb insb add es jae sbb sahf sbb mov pop (bad) (bad) fimull cltd cmp scas (bad) ss xchg jp lret sub movslq mov outsb mov out callq (bad) add rex.WRB rex.W (bad) (bad) mov fld int3 js repnz add ds test ffree lret add (bad) mov rex.RX fwait pop pop jg jns (bad) movsl jo mov sbb jge or cltd retq pop fwait shlb sbb (bad) sub add nop repnz add (bad) pop (bad) pushq fdivl mov (bad) mov and in rolb jb (bad) std in mov rex.X rex.WR push add imul adc add movsl jb test mov mov add mov (bad) (bad) mov push add mov xchg data16 (bad) mov cmp hlt rex.WRXB fimul rex.WX rex.XB mov fbld leaveq mov int3 add cli or clc mov sbb push addr32 cmp (bad) (bad) push lods cltd cld jb movabs movslq rex.WR retq add rex.WB movabs (bad) syscall decb add mov add lods push or decb sub (bad) mov outsb (bad) adc xor rcr pop jbe sti rex.XB (bad) add sbb in (bad) (bad) xchg pushfq jns in xchg xor fstl fs faddp ljmp cmp subl cmp xchg mov (bad) mov (bad) xor jae out (bad) mov movsb add rex.RB icebp rex.WRX cli add push xchg adc fistl mov cs es notl rex.WRXB push mov jbe loop notb sub jrcxz cmp int3 xchg lahf mov movsl add sbb iret nop (bad) sub (bad) add ss push (bad) xor (bad) xchg add add fldl pop test ja movabs rex.WB movslq or je test adc fsubs (bad) lods sbb sub xchg (bad) (bad) xor rex.WR jnp (bad) out lods xchg sub rolb push cld pushq (bad) jo fldenv xchg rcl sub (bad) lods and mov es (bad) (bad) push adc icebp xchg mov mov sarl and push jl (bad) jne or rex.WR mov dec xchg mov je movsb scas or jge jne add jno out out cwtl clc lock mov push cmp test push insb rex.X add (bad) xchg stos movsb data16 ss jrcxz insb or insl gs sbb and cmc clc pushq std icebp scas pop rcr movslq jge (bad) jno scas je xor cmpsl xor mov cli imul imul lods jl movsb hlt repnz (bad) cmp add js cmc xchg xchg lods stos push imul setl xor sarl xor and test fdivp jbe push insl push (bad) adc in mov sub jl or loop,pn test (bad) pushq js pop (bad) mov jnp (bad) jb xchg jl jl xchg xchg outsb lahf fisttpl imul fidiv out pop insb fist and rex.W cmp movabs pushq and mov shlb jrcxz jg shrl (bad) pop jle cmp (bad) rex and rex.W pushfq lods cmc sti push cwtl adc add xor lea idivl movabs cmp shrb jb lods out xor outsl cmp scas outsb sbb fmuls pop (bad) jno shl rex.R fcomp jge jle (bad) cmc jo in sbb cwtl mov push xchg jg icebp (bad) je nop faddl data16 and mov retq test imul fldl adc mov addl push in push lods lods add (bad) iret mov jg stos punpckhdq or push or lea push cld andl leaveq sbb pushq in test dec mov and sub pushq rex.WX pushq lea fisubl xor movsb rex.R push xchg push and jne (bad) cmpsb ficompl lret lret test cli add and fwait mov (bad) cmp fist rex incl lock rex.RXB adc js sub or cmpsb rex.W mov jmpq pop test mov jle mov sbb icebp sbb stc faddl jp jnp push rex.X test mov pop cmp out addr32 fs rcrb sti pushq jns jbe orb lods add int add pushq (bad) push xor xor repz xchg fadd jl adc push cmp jge adc mov cmp mov (bad) (bad) lock ds (bad) (bad) mov xor (bad) callq js enterq mov cmpsb imul hlt cmp (bad) sub or movsb (bad) lods lods je movabs ds fbstp rex.WRXB cmp iret rex rex.XB ja and add jge int3 outsl mov rex.RX xor xchg pop and out rcll scas (bad) sbb adcl fwait push insl xor pushq retq xor movabs mov sbb jb repz add sub rcr insl or lea (bad) adc incb js addr32 movabs xchg cmp add sbb sub int3 movabs xchg (bad) (bad) cmp jno add cld adc push add sbb add decb mov mov rex.XB (bad) loop xchg sbb iret mov cmp sub cmc and xor xchg out fisttpl (bad) jp push cmpsq cmp mov jmp sahf movabs adc jo push in cmp test push jmp sub and xchg xor jl out jg pushq rex.WRB push out fidivrl scas or cld push (bad) rex.WR (bad) ficomp pop rol add or xchg or add mov pushq jne fcompl rex.WRXB stc andb xor adc fnstsw fsubs add rex.B rex.W sub fldenv mov idivb sub sahf mov negl rex.B lods cmpsb mov adc mov sub jnp sbb (bad) rclb push sahf push add movsb (bad) lea ss (bad) icebp (bad) (bad) out imul cmp jle (bad) movsl rex.WRX adc sub fimull jp mov cmp jp lret pushq and jg test adc rex.WXB mov add (bad) and movabs enterq cltd ss scas lods push mov int callq scas (bad) mov fnstsw add pop js cld stc sbb mov mov xchg xchg rex.W sub xchg (bad) movsl lea pop rcll enterq gs xlat (bad) je jnp add icebp rex.WX cli movl add imul jg mov pushq xchg rex.WX (bad) movsb jg (bad) test lods movb movsl loope outsb lcall je rorl add cmp xor mov cltd lret js add data16 mov rex.W xor test rex.W jg mov mov sbb movsb mov xchg rex.WX fwait movabs rex.RX (bad) fsts (bad) movslq rex.WR (bad) rex.WRX (bad) lock sbb mov icebp adc (bad) pop lock mov mov sbb jmpq mov sbb (bad) andb push (bad) cmpsb movabs mov push loopne clc (bad) (bad) xor mov pop mov xchg (bad) (bad) icebp retq add jo movsb movslq xchg sub add je jge std add (bad) fdivrs mov cs insl test lea xchg loope push iret in rex.RX add jae in jp mov stc stos add mov pushq cmp cld and movsl jmpq jl data16 popfq xor gs lret jae add sub es lahf iret (bad) (bad) push mov xchg sub clc xor cmc mov mov push shr retq add stos mov lods fs (bad) xchg cltd scas add test and pop xchg xor jns sub adc mov fnstsw and push jl push pop (bad) test xor jg rex.WX sahf cld callq add out jle,pn test sub (bad) mov add notb andl add (bad) mov mov stos jo popfq mov (bad) rex.WR lock add je rex.B xlat cmpsl sub sbb push ja add mov or sbb imul mov jle rcrl (bad) and pop (bad) fs je loopne in or jg lea sti rex.XB int std push rex.RXB pushfq (bad) (bad) jne (bad) jae incl (bad) add push mov sbb adc cmp js mov add mov add mov add or adc adc ljmp es outsl test mov pop repnz (bad) mov (bad) scas (bad) add fnstsw add out mov sahf fisttpl xchg jg xchg pop adc jl rex.RX lock out imul cwtl (bad) hlt (bad) add cmp sub imul pop sbb rex.XB incl ja (bad) mov or push (bad) fisubl xchg ss adc sub cmp lods sti (bad) lods fsubrl adc rex.W movabs pushq je cmpsl xchg out shl rex xor jmp mov jp sahf sbb iret sub (bad) xchg lods popfq icebp (bad) xor movslq jmp mov insb (bad) pushq pushq lahf xchg pop (bad) mov (bad) xchg sub cld add loope jp fidivrl (bad) leaveq pushfq jge gs (bad) movabs fwait cwtl fiadd (bad) jne (bad) mov (bad) stos (bad) push add in (bad) jp rex.WXB js (bad) je movsl jnp orl (bad) jo and mov add clc xchg int3 lret (bad) cmpsb add push (bad) fsub js test push je mov pop lahf xchg xorl int (bad) mov in push scas cmp add push adc rclb or (bad) lods (bad) pop xchg xchg jg mov loop (bad) movabs loope adc sub cwtl xor and (bad) and (bad) rex.WB add cmp mov pushq rex.WX xor roll add rex.WXB and data16 mov add imul (bad) movabs movabs (bad) adc xchg (bad) pop push adc add add fcom stos lcall (bad) add xor (bad) push sbb push scas in test or mull imul push cmpsb rcrb (bad) stos lret cmp stc add mov in xchg pushq rex.WB mov rex.WRXB repnz pop jnp (bad) clc push xchg pop stos jle pushq fimul (bad) pop rex.RB mov jle fcomps jge and sar je fcomi fadds shrl jmpq rex.WR pop callq xchg pushq jnp xchg push jl jp (bad) cmp loopne (bad) ja and sahf (bad) (bad) mov (bad) (bad) and pop test stos sbb (bad) lock pop rex cmp (bad) cmp sub jo cmp stos je pop fisubrl jmpq add js xor xor movabs fidiv mov xchg jmpq lods movabs andb clc push cmp mov pop mov or out loope pop lods test repz rex.RXB xor (bad) (bad) push fcmovb xlat (bad) or mov addr32 divl sbb jp pop jns popfq std cmpsb scas shrb cli rdtsc andl sub scas rex.X lock and jnp movsl add frstor push pushq jbe xchg fimul and add in or (bad) jne xor rcll test test cltd (bad) push jne shlb je loop,pn pushq cmp add xor rex.WRX jo mov mov repnz (bad) sub mov retw jmp std sub std cmp jb rex.WRX (bad) xor or rex.WX fsubrs rex.WB idivl cmpsb add pop add pavgb div xchg (bad) xor jae stos callq (bad) xorb (bad) push cmp sbb lock add (bad) test fs insl rex.X (bad) jmp cmp ja xchg addr32 sub lret lods sub xor adc pop (bad) jb movsl xchg adcl sub pop loopne stos add movabs cmc add push sbb sysexit repnz repz add movabs cmp ja xchg xchg mov popfq std or cmp pop and xchg mov outsb rex.RX (bad) cmp ds in xchg rex.WR leaveq jns rex sbb push xor (bad) add out mov jmp jp in xchg add addr32 add test (bad) lret popfq rex.W jae repz mov addr32 fildl maskmovq notl push frstor addr32 jno push adc rex xor test fsubrl mov mov js (bad) cmp (bad) mov adc mov (bad) testl retq movsl pop sbb mov (bad) scas or pushfq push lret stos pop shll rex.B imul cmpsl push and jb rex.R rex.RB rex.WRXB (bad) pop rcrb jg (bad) adc add fisubrl andl test cs int divl adc retq and lods mov sti (bad) lea jns (bad) std (bad) mov (bad) add (bad) and jge pop ja jle rex.RB lock xchg repnz fs xor js adc imulb cld or mov sti rcrb sub (bad) or in add mov pop stc sahf enterq (bad) mov jae rex.WB (bad) rex.WRX movabs movsb and outsb test xchg (bad) mov ds pop repnz mov or jno repz push push and mov mov push (bad) push (bad) rolb mov cld add rex.RXB out cwtl rex.RB rex (bad) sbb imul faddl and mov imul jrcxz (bad) lock (bad) movabs sub test (bad) enterq pop and xchg pushq (bad) es movabs stos cmp and (bad) (bad) or (bad) cmp movabs rex.WR rex.W mov (bad) callq rcrl add mov mov loop stos xor out mov sar imul jns testl xchg jl xchg mov mov (bad) jno xchg mov fildl jb incb mov sub xor jb mov (bad) adc push rex.WRX xchg iret push cli mov outsl pop add cld js pushfq jrcxz fsubrp sub jbe pop sahf rex pop lret jge pop shll (bad) sbb cmp sub and pop (bad) and es push sti add push mov (bad) jrcxz ja in mov xchg mov movabs rex.XB push or (bad) je jb mov lret pop sahf push lods iret xor popfq repz cmpsb movabs pop (bad) fstpt adc fwait (bad) add cmpsb cli (bad) enterq rex.RXB sub retq sbb sbbl (bad) out loopne ja add and mov xchg rex xorl scas shrl (bad) (bad) vmovups (bad) pop mov push js cwtl add jge (bad) movabs ljmp (bad) rclb jp sbb nop lret jbe (bad) jle pushq pop (bad) xchg retq (bad) jle js mov mov add mov mov xchg repnz (bad) pop stos je,pt rex.WB rclb movslq add adc mov iret mov add jl rex add rex.WRB movslq (bad) jbe mov or add (bad) (bad) loop lods mov xchg add repz (bad) insl retq vmovlps scas pop jmp mov fs lock jl (bad) jmp movb pop cwtl rex.W jbe xor xchg mov xchg popfq orl xor hlt mov out je rorl (bad) xchg jno enterq fs scas cltd outsl mov pop adcl xor add (bad) push pushq mov pop xor shld adc jl jrcxz fnstsw mov test cmc and add rex.R pop mov mov push test movl roll mov iret (bad) add cmc ja jle mov fwait scas js jp (bad) pushq ja rex.RXB add in add pop sbb jnp add xchg mov and es ss shr pop out jle incb mov or cld adc in add jp (bad) sub rex.WRXB push (bad) mov mov (bad) pushq popfq xor xchg int jp stc cmpps (bad) rex.WRB sti test (bad) out add es cwtl (bad) divl cs cltd push mov icebp rex.WRB add (bad) outsb retq nop (bad) sbb and sbb and cli xor (bad) jle (bad) xchg xor xchg in mov add jl mov and loopne rex.WRXB fs sub sar (bad) cmp jg jp loop mov jl adc movabs fsts mov xchg mov pushfq mov loop roll jmpq iret add lret rorb cltd fiaddl jle pop xchg movsl loope test repz mov jl outsl pushfq (bad) push add rex.RX rex.WX mov (bad) outsb movabs (bad) jle test ds jmpq mov loopne in pushq je jp or cmovbe js sbb mov add (bad) in or add xchg and jle jrcxz fidivrl mov rex enterq out cs add clc mov cmp nop sahf xorb jmp rex.X int mov mov scas (bad) idivb rex.WRB vpavgw out mov out jl (bad) mov add outsb sbb scas cltd push xchg sbb test pushq fidivl jle lahf adc jge mov test add xchg lahf or insb jb rex.R jne xchg cltd popfq data16 movabs cmpsl add int (bad) (bad) pop cwtl jle cmpsl xchg imul push rex.WXB add test jrcxz rex.WRXB movabs sbb add insb jp or addr32 add adc xor sahf add add in (bad) rex.W rex.WB test mov cltd hlt jb add and loop lock (bad) fildl cmp (bad) jle lret jge mov lahf add sub (bad) sti sar cld sbb ds (bad) mov add (bad) out (bad) jbe lea (bad) sub jle (bad) or (bad) jg lods jnp fwait hlt jg (bad) jbe fcoms mov fisubrl icebp fdiv jg stos mov jno movabs adc sbb clc xchg mov stos or (bad) pop fisttp mov movslq movsb mov cltd cmp adc pop out xchg jp cli mov out mov sbb stc movabs fdiv lret fwait mov icebp rex.WR jg xor in movabs movabs (bad) and xlat cmp data16 add in jp repz rex.WX jmpq mov mov jns (bad) or iret (bad) pop add rolb (bad) push (bad) xchg lea lret iret add and (bad) mull jle add iret xor cmp movb sub jle sub leaveq xchg xor nop ror jge jle adc or pop icebp rex.R imul ja fldcw pop (bad) jb mov cmp rex.WRX pushq add imul rex.XB out (bad) fisttpl mov mov add cmp add mov lods mov gs adc (bad) (bad) in movabs mov jmp and je sbb (bad) jrcxz (bad) rex.XB ss int mov (bad) and adc or jge fildl ss rex.WX out pop test imul push testl movabs int3 (bad) sub jle push callq mov rex.WRB push (bad) jp (bad) adc lret pushq cmp cmpsb loope sub inc rcr (bad) rclb sub scas jb stos mov loop es add rex.WRX (bad) (bad) mov pop sub cmp mov ja xchg cltd jo shrb (bad) xor pop rol lods scas cwtl sub xchg sbb pushq cmp mov adc shrl xor pushq xchg mov sbb jne fiaddl addr32 (bad) xchg mov xchg mov push add sub sar xchg or (bad) (bad) lods xchg mov (bad) jo push rex.RX and jmp and lods out imul add and sarl and jp xchg (bad) (bad) loope imul insb sbb adc (bad) (bad) fdivrl (bad) fwait cmp rex.RX xchg icebp and scas mov pop xor xchg mov push test (bad) jb push xchg mov sbb rex.WB lret (bad) add xor sub lret cmpsl sbb push (bad) (bad) add mov test movabs adc jle xchg (bad) mov rex.WXB rex.WR add jae lcall jg (bad) rex.WR rex.RB (bad) movabs leaveq es je movb jrcxz xlat jle push rex fs (bad) add xor or movabs rex.XB rex.WRXB callq add cmpsl mov scas (bad) roll mov ss rex.WXB jp sub add outsl and popfq rex.WRXB cmp test (bad) cmc sub sbb jp out mov sbb (bad) (bad) push add or adc cmp (bad) xchg (bad) enterq (bad) xchg jb rex.WRXB jmpq adcl pop leaveq mov add sub adc movabs fild pop (bad) popfq sbb rorb fiadd out movabs cmp cli cmp mov (bad) je jmpq rex.X jg es mov addr32 (bad) rorb (bad) jb adc and adcb cld push imul sahf vmovaps fadds lret std scas (bad) pop je adc sahf add mov shlb retq in gs mov mov push adc jg es add shll movsb cmp pushq add movabs int add or xor pop fdivrs or testb cmpsb stos jp mov rorb fwait rex.WRXB scas add push out sar add xchg loope and fs jrcxz (bad) retq push test int3 addb sti sub jg add fadds (bad) cltd loop andb mov pop jle shrb ss pop cmpsb sub jb jp add scas gs fnstsw cld rex.WRX rex.WRB sub jl lcall mov movabs fwait sbb test push add add lods (bad) add sbb divb test (bad) loopne retq jmp sbb in xchg mov add rolb sbb pop rex.RX cmp add fimul and rex test push sbb (bad) jb stc xchg (bad) ds ja cmp (bad) mov rcrl stos pop push (bad) cs add int push mov rorb xor or sti mov fwait add xchg push cli rex.RXB (bad) out ja and sbb add mov mov movabs push or and fisttpll lock mov stos in mov (bad) cs pushq add mov adc add pop leaveq (bad) jg add (bad) or lock mov retq add mov lods and fist sub (bad) jb push xchg mov (bad) imul xchg pop enterq js int3 outsb stc mov mov ja jp jg jge lods (bad) (bad) and jle mull mov or jrcxz add add sti orl icebp test sub rex adc (bad) stos (bad) lods fildll gs lahf add int3 cltd mov sahf enterq and pop pop icebp add (bad) addr32 sbb jo xchg jrcxz add and push (bad) mov cltd sbb and movabs testl stos xor sbb ss mov add push xlat (bad) sar jb and (bad) add push xchg rex.X (bad) jge movabs and push stos scas (bad) imul mov rex.WRXB mov je movsb rex.XB ss xor int3 (bad) xor pop out pushq scas lock mov add and fstpt insb and (bad) add lods rolb (bad) mov std add sbb stos std add stc (bad) pop outsb adc psubusb (bad) cld rex.X sub jg adc sbb rex.WB loop adc roll rex.WXB xor adcb stc stc cli (bad) jb rex.WRXB repz or add scas xchg mov pop add (bad) add (bad) or push fs and sbb mov xchg lahf jae out sub pushq icebp hlt out (bad) push add rex.RXB xor sbb (bad) jrcxz rorl jl cwtl xor vhsubps in lock (bad) jp jmp and mov jl (bad) jle sahf rex.WRX sahf faddl in add cld retq (bad) sub xor add (bad) cmpsl xchg (bad) ss pop (bad) push jle test lahf enterq mov fldl adc cmp mov (bad) in fidivl jg cwtl cmpsb (bad) scas add mov data16 clc movabs (bad) mov push or rex.WRX xchg jb mov cmp jle (bad) mov incl xchg retq add (bad) adcl add (bad) (bad) fmull rex.WRXB add adc push (bad) retq pop add xchg outsl rex.WXB in test shr lods jp rex.RXB (bad) (bad) pop and out jo sahf rex.WRXB sbb je cli add stos push movabs xor and insl mov jno (bad) (bad) ljmp out jb sub mov rcr xchg fiaddl mov (bad) test mov push add stos add stos sti mov cmpsb (bad) jg pop mov repz js lods rex.XB and leaveq pop push rex.X sub (bad) mov (bad) xor rex.R fimul (bad) mov (bad) xchg mov mov out jmpq add rex jl repz mov push test adc shrb push test repz sbb rex.WRX add es (bad) (bad) mov rex.RX rex.RX xchg xor stc and movabs sbb icebp push jl mov cs or rcrl stos imul or add mov stos mov js pop pushq and icebp subl fisubl rex.RX xlat jg es cltd pop ja cmp rex.WRB mov add adc cmp cmp ja cmp xchg andb jmpq ficoml clc iret sub sbb nop int3 callq addr32 mov and jl mov and xchg mov rex.WRXB add repnz sahf xor sbbb cld mov adc rex.B stos out sub add or push add sub rex.WRB es clc movabs ss movabs add or rex.WRX cs lods out jnp fnsave data16 repz push mov sahf movabs xchg (bad) fs jns mov jl je pushq rex.WXB addr32 sbb outsb insl cmp in sbb scas retq and sbb test in rex popfq sub and rex.X pop orl xor (bad) pop (bad) sbb pop jbe mov fs jg and (bad) add sbb movabs jnp xor jae jbe jle imul adc int stc sbb jo cmp jnp cmp ja retw adc push adcl mov rex.WX (bad) in test cmc xchg (bad) stos jne (bad) cmp sub jge add insb pushq (bad) (bad) out (bad) pop jrcxz mov adc (bad) lret (bad) jl or mov jno (bad) js add mov or mov je xchg ds jmpq mov lahf ficoml adc jle sub jns fwait rex.R rcll or pushq xchg add jne cmp fistpl xor cs (bad) repz xchg add adc (bad) jo mov or mov sbb cmpsb test mov jo add jae rex.WRX jp mov movsl pop je outsl mov push or jl sub add cmc scas testl movabs jg (bad) mov pop mov pop cmp imul (bad) rex.WXB push xor pop (bad) adc sub jg scas ficoml shlb rex.W push add sbb pop sbb add (bad) loop add in xorl (bad) movabs jns sbb (bad) pop pop (bad) push imul loopne rorl (bad) stos cltd es add add outsl addr32 add xchg pushfq (bad) cmpsl repnz (bad) sbb adc sbb mov test sub rex.XB and fs popfq movabs stos add out and leaveq rex.WX mov xchg ds adc jle pushq clc (bad) mov insl cmp jb,pn sti rex.XB mov pop (bad) fnop sahf jle xchg ja jmpq inc rex.W lock sub add jl cmpl rex.WR cmpl rex.RB cmpb xchg jp cs loop fcoml addl add rorb mov add pop xchg xchg shrb adcb bsf add imul out enterq ja or clc lahf xchg add (bad) adc int decb addr32 mov mov (bad) icebp (bad) jb rex jg mov and pop fwait orl xchg (bad) xchg cmpsl rclb (bad) (bad) rex.RXB mov cli push jmpq adc nop (bad) popfq add stos pop and int3 std pop movabs lock sub sbb xchg movslq adc fsubs movabs loopne jbe cmp pushfq in or mov adc rex.WXB (bad) xlat jb sbb rex movabs xlat sub cmp add (bad) and (bad) jne std and mov rex.W jbe notb sarb cmp lods (bad) or jne mov movabs leaveq subl jbe (bad) mov sbb enterq (bad) jmpq repz jp jo pop (bad) push stos rex test test movabs and js mov xchg rorl callq imull (bad) mov xchg push ror pop (bad) xor xor jb pushq out rex.WRX jo and in stos cmp fiaddl pop sbb enterq insb lods pop fwait js (bad) rex.WB pop pushfq sbb add outsb jo movabs scas jl (bad) jg add jnp (bad) pcmpeqb scas push jp mov lods stos outsl and xchg sbb push xlat (bad) mov jo fistpl pop insb std mov rex.WRX jle in jl (bad) cmp loop adcl (bad) rex.B xlat mov stos jge xor insb scas or (bad) jg pop rex.W rex.RXB xchg push sbb imul out je cld sbb jmp adc leaveq movabs mov jl in mov rorb repnz add cmc outsb mov sbb rex.WRXB fs mov lods clc ja addb subb leaveq cmp popfq test mov mov (bad) sbb gs or cmp add (bad) mov pushfq rex.RX pop cmp adc leaveq mov add sbb clc mov xchg (bad) subl fcom rcrl mov pop ss mov jb outsl jnp lea or adc jmpq sbb cmpsl and jbe jno add or adc xchg sub movslq pop hlt sbb adcb jmp jnp rex.RX pushq shr fsubp retq cmpsl iret adc negb out mov in and movslq jb adc ror sub pop mov sar pop pop (bad) retq cmpsb fldl mulb out push fsub or cmpsq mov pop rex and (bad) (bad) jecxz add outsb sub rex.B pushq xchg (bad) (bad) in rex.B jg imul ss mov in sbb test xchg add (bad) xchg (bad) repnz rex.B insb adc cld and xchg (bad) mov (bad) mulb outsb je outsb mov cmpsl rex.B rorl mov sbb leaveq sysexit std (bad) (bad) (bad) iret pop lods cmp sub lahf in ss add (bad) fwait xchg jg and (bad) (bad) in pop rex.B xchg enterq movsq stos sub shl lret lods xchg out (bad) and gs in sbb js fiadd int ja scas (bad) jbe mov addr32 shrb pop pop movabs hlt sbb (bad) stos (bad) stc jns imul lahf rex pop jp jp (bad) cmp lahf mov and mov mov push mov outsb jae jg or (bad) repz jno jbe out and sub (bad) pushq (bad) pop sti fcoms mov retq jbe and rex.RB rex.WRX mov xchg xlat insl es sub leaveq push int3 sahf movabs rex.B cli scas movabs (bad) jns jge (bad) sbb out (bad) jns mov mov imul mov xchg clc loope lods pop lock jae lods callq outsl fisubl stos add pop (bad) jbe (bad) rex.W fbld idivb jno xchg out lods rex.B lods (bad) es pop and stos retq (bad) cmp std jns outsb jle sub (bad) (bad) test adc out rex.X push xor or xor cli fwait addr32 jmpq ds pushq rex.WB xchg pop outsb popfq cmp add (bad) jl (bad) outsb cmp enterq jge (bad) jne (bad) jb and out rex.WB (bad) sbb adcl sub ss pop out jge idivb adc pop js fsubl hlt fcoml add mov mov xor jp push ja (bad) add (bad) (bad) ljmp mov push jmpq xchg rex.WRB es sub addl xchg test sub out pop movsl sahf mov (bad) movabs (bad) jl (bad) scas xor gs xor mov test mov (bad) (bad) adc jae fsubrs cmp xor out lahf mov retq jo movabs ror mov or xlat test loope sarl shll or mov movslq mov je fmull sahf push rorl jp xchg jmpq sbb mov xchg mov (bad) xor movsl rex.WX pushq jg jge mov jnp (bad) lock ficompl mov (bad) decl mov jae (bad) mov add and adc js rex.WX ja lods mov (bad) sub rex.R cmpsb (bad) rex.RXB rex.RX gs divb jrcxz jp lods xchg pop cmp clc (bad) negl (bad) adc (bad) rex.W rex.WRXB jnp,pn fcmovnb setge lock fcmovnb scas jnp in (bad) jg in test in fidivrl cmp add ds and add inc imul xor mov rex.WX mov test (bad) add cmp rex.W jrcxz (bad) jmp fsubrs or add jae sbb add pop jle iret mov scas roll xor jrcxz add fwait (bad) lret out xor (bad) movl fildl push sbbl add add in stc cmp add (bad) rex.WRX add jo pop (bad) (bad) movabs (bad) int3 movabs mov rex.R callq (bad) add add jo imul nop jl xchg rex.X xchg and push jnp and adc hlt (bad) mov icebp pushq (bad) jg jl add (bad) retq je pop mov movabs test jno rex.WR mov push rex.R push jbe lock movslq push out mov rex.W add mov xchg fnstcw cld mov out (bad) (bad) clc cmp mov cmc leaveq (bad) ss (bad) addr32 add or fcoml sub sahf or int ss repnz add xchg cmp rex.RX lods (bad) (bad) xchg jo rex and (bad) push cmp push int3 mov cmc rex.X (bad) (bad) pushq ds sbb js sbb (bad) fmulp (bad) or rex.X lret jmpq (bad) xchg mov adcb movabs out add jnp inc fistpll cld pushq sbb (bad) imul jo mov rex.WR fdivrs rex.RX mov callq lret (bad) rex.WRB add mov push xchg mov mov test fstl (bad) add int3 rex.RXB rex.W lock (bad) xchg fmul cmpsb add cmp or stos xchg mov (bad) scas cmp fisub sahf mov or fwait stos add cmpl add mov sub add rex.RXB and in add callq (bad) xchg (bad) sbb popfq mov (bad) or pop or ss pop cmc jbe jno add and imul icebp mov (bad) and lods stc add (bad) fstps insl retq cli int3 sbb pop (bad) mov (bad) add movslq jne cld rcr sub add rex.RXB (bad) adc fisubr pop outsb (bad) pushq mov mov insl push (bad) sub rex.WR test (bad) rex.WB fnstenv sub lret test push ja add mov rex.WRB fs jg fwait (bad) fmull add xchg movslq and adc sbb mov (bad) (bad) ss rex.WR (bad) sti movslq (bad) loopne sbb fwait (bad) roll cli sub or sub push fisubl test test pop pcmpgtw add (bad) (bad) fistl sbbl cmp mov xchg rex.R int (bad) pushq mov fs (bad) pop mov add mov test add xchg rex js mov add test sub xlat jo fwait outsl (bad) mov xchg int3 mov jp sti xor and push pop movsb or jle adc cmp gs mov rex.XB loop lcall mov mov lahf xor test add cmp add push lea add mov sti and jp pop cwtl add clc sub jae idivl add mov movslq push mov mov scas add nop (bad) sub xlat add lods test mov cld xor lahf mov imull (bad) adc enterq mov rex.RX cmp cwtl add and mov jmpq and or movslq mov xor jmpq jmp mov scas (bad) jge rex.RXB shr rex.WRXB (bad) js xchg xchg cmp jg,pt mov in std xchg add rex.WRX shr rex.X pushq ds fucomi and movsb sbb mov push jge sub cmc jl mov pop jp rcl fsubl sbb movsl add movabs (bad) lods mov cltd (bad) pop rex.RX (bad) xchg rex.RXB mov rex.R mov sub test loopne mov insb xchg mov insl addr32 jg mov add cmpsb rex.WX stos idivb xorb (bad) add (bad) push adc adcl sbb add (bad) (bad) (bad) pop and mov add cmpb xor stos (bad) (bad) sbb out add add in adc (bad) cmp mov jp and cmp jge or callq addr32 hlt rclb or xor cli pop adc outsl sti (bad) adc iret sub rex.RXB add jmpq sbb add and cltd and add xorl callq xchg (bad) je imul movabs xchg and jb jbe rolb pushq std lahf fist jg xor add jns imul int3 or flds addb rex.WRX pop popfq cmp rex.W lock rex.RB (bad) (bad) add sub mov loopne rex.RB cmp add push lock adc (bad) cmp add shl callq sbb jno outsb or push sbbb pop mov rex.WB mov jrcxz out (bad) fidiv (bad) clc enterq stc (bad) push rex.WX xor lahf rex.B nop (bad) add mov sub sti mov scas pop mov add movabs jge out add std jbe mov pop and (bad) (bad) (bad) addr32 mov cmp (bad) and or xlat (bad) mov subl cmpsl jb (bad) out jge jnp add out test sbb clc test (bad) mov cwtl adc (bad) stos shll loope mov or cmp lock xchg fsubrs push mov lods sbb fistl (bad) mov pop sahf hlt es jg and add cli and sahf rex setg lret clc pop cmp (bad) (bad) jno sub or cli sbb or es and jae movabs jp in fs (bad) push mov add outsb sub in or addr32 (bad) addl sub rex.RX sbb (bad) js iret movsb add lods imul (bad) and (bad) in add pop fcmovne add movsb xchg lret (bad) fcom jnp cmc rolb add adc out and push mov mov push cmpsl mov rex.RXB xchg sub rex.RX xchg rex.WXB jbe fisttp jbe addr32 sbb xchg scas add xlat xor fs enterq ficoml sbb out sar mov scas or (bad) int jle or movsl lods (bad) sbb test movabs (bad) cmpsl je std mov stc repz in add rex.WRX xchg lods fdivr adc add stos stc cmp (bad) pop imul pop pop add sti cmpsb cmc lods rex.WRXB mov sarl in xlat (bad) or add jg icebp mov (bad) movsl add test xor iret mov rol xchg and test je (bad) adc test jp cmp xor movsl clc stos callq loopne nop push pop adc repz sbb (bad) out jg xor xchg (bad) cld sub (bad) jne mov add mov xor insl xor fs jne push jg mov (bad) addl sbb stos or add (bad) lods (bad) add sub (bad) xchg rex.WRX callq sti lods pop sub rorl mov mov sub test and test (bad) mov lret stc jg sti (bad) push xor adc jno cmp lahf or pop loopne xor stos jrcxz add mov pop xchg xor popfq (bad) icebp movabs out and (bad) movabs lods jo rol mov pop hlt add cld (bad) mov hlt in loope sub xchg stc add sub clc (bad) fs jbe (bad) sti lret xlat rex.WX push js pop test jae flds xchg lock loopne jg and jmp sub pop stos mov and out adc jbe leaveq repz icebp outsl xchg cwtl pop jle callq stos movabs sbb rex.W cld hlt imul jg xor add mov mov pop fsubrs rex.WRB jmpq add sbb insb (bad) jno adc rex.RXB sbb and mov jle jp xchg addl sarb test shll out jns popfq (bad) imul icebp (bad) fbstp fdivrl adc sub cwtl jle or push test rex.R xchg or out jp cmp leaveq add or add sub rex.RB jnp (bad) in leaveq dec stc mov lahf sub cmp pop add jb mov (bad) mov pushq rex.WRXB add xchg mov lods xchg adc rex.WXB imul ss jne rex.WR imul mov jg movsb lahf jl push pushq out (bad) enterq adc je and and jmpq idivl or (bad) jp mov nop jg cmpl movabs xchg sahf rex.WX (bad) pop in mov cmp rex.WXB rex.W cli adc (bad) iret xor or lods out or jb,pn push clc adc jle (bad) movsl js sbb test (bad) (bad) pushq rex.WRXB mov pop cmpsb mov jg fcomi jmpq gs (bad) (bad) (bad) jge (bad) in sub in rcr rex xchg jg (bad) fsub adc jo (bad) jb mov lods mov add jne sub jo xor (bad) (bad) rex.WXB or xlat movabs (bad) and (bad) cmp jmpq jo fmul jl (bad) pushq mov movabs mov insl shlb jle jae cwtl lods pop sbb (bad) sub insb jp mov jb rex cmp adc fs and (bad) pop lods jge (bad) pop push add (bad) jmpq mov nop sub cmp pushq movabs jmp movabs add out subb (bad) sub shll add (bad) fstpl stos rex.WRX add sub xchg add (bad) jle sbb jo xor fwait add or rex.X xor sbb out add ss adc xor mov roll jle xchg shrd pop xchg leaveq cmp xchg es imul add mov (bad) fmul rex.X (bad) stos fsubrs cli outsl pop xchg sahf (bad) jne in or and out or insl nop (bad) fdivrp xor js jle add ja (bad) rex.WRB mov sarl xchg add movabs stc xor fcoml (bad) rex.RX in hlt jl jne std int3 jbe loope xchg lahf rex.B sub jle push clc out rex.XB mov and mov (bad) out xchg cmp push icebp pop add sbb pushq pop es leaveq rol jg mov repnz jp (bad) mov insl mov mov push rex.WB cs or add add (bad) mov imul jp test xor jrcxz add int loop add or fdivl add (bad) mov sahf in test adcl (bad) push (bad) and icebp add shrb add sub andl rex.WRXB pop mov xchg in jmp pop scas lahf idiv (bad) add add test or (bad) (bad) jmpq rcrb rex.RXB (bad) (bad) mov repz stc add retq imul ja addr32 cli clc (bad) xor xor test stos ror rex.RX add lods push jg or mov fwait xchg sub xchg rex.WRB mov (bad) fidiv (bad) rex.WXB in fisttp mov (bad) add movabs push adc test test faddp movabs (bad) jbe packssdw clc push (bad) decb negb int sbb jl cwtl test xchg jg std sbb icebp mov (bad) pop (bad) hlt addl mov stos xor add mov mov jbe,pt add sbb jg pushfq (bad) xor mov and push cmp mov (bad) jg add sub and popfq cmp adc rex.WX jp pushq jnp outsb jne movabs rex.XB rex.WXB sarb rex.X or jg push xchg cmpsb sub jae addr32 fwait retq pop jae mov (bad) mov jl push and retq jne mov (bad) rex.WRB rex.WB jno pop or push movabs add fiaddl out js or rex.WRXB movsl (bad) mov add jg cld jnp mov jmp cmc (bad) loopne int jp outsl pushfq xor (bad) cmp incb mov rex.XB nop repnz pop add cld int3 popfq xlat or add fwait cmp jno (bad) rorb rex.WRXB outsl xchg fsubr fwait add repz pop rex.WX add cwtl (bad) repnz or jmpq xor imul mov (bad) (bad) (bad) jne mov mov (bad) lods (bad) xor jne xor nop (bad) in (bad) imul (bad) sar or (bad) sub xor ficom std and scas lret adc faddp lods sahf stos mov rex rex rex.XB rex callq adc retq jmpq add movabs fwait jl sahf adc rex.WXB add jb (bad) add sbb xor stos jrcxz gs lahf mov ds mov iret add loop rex.WR adc mov jae push (bad) cmp or jmpq lret add mov test mov rex.R rex.WXB sub fimul xchg (bad) jge sti rolb push mov rolb add notb pop add xchg lea cwtl mov and test add xchg rorb xchg add cmp sbb mov sbb std mov (bad) xchg lret test (bad) cwtl jg (bad) sbb (bad) sub movsl (bad) mov jae fsubs add jrcxz xlat jb repz xchg pop adcb and movsl add leaveq pop push add rorb lahf std xor add retq hlt jle jrcxz sti decl add xchg jmp jle adc xchg (bad) decb xchg retq (bad) negl jnp enterq mov pop in cld jbe add xchg xchg jle flds xor test (bad) dec imul add adc sub and and add fisubrl rex (bad) rex.WRXB cs (bad) je (bad) add add (bad) xor rorl pop jns rorb sub pop cmpb jmp js loopne scas lret add testb (bad) fldt (bad) cli or lret cld test (bad) outsb hlt mov add (bad) cli js (bad) outsl add mov push or sbb pop (bad) mov rex.B test rex iret xor ds or rex.WX (bad) adc scas fs add jae rex.XB push and data16 clc sub mov test push mov sbb and stos lea (bad) cwtl stos adc rex.WB jp and mov jle movabs outsb fcomps clc adc int push and cmpsb xor pop mov cld jo mov jp cmp lret cltd fisubr hlt (bad) faddl (bad) adc leaveq fsubs push jl js and shrl (bad) ljmp callq loope jne cld and ja retq js in in add jnp rcr push jl stos (bad) (bad) mov es mov pop or jnp int inc cmp lea (bad) jp rex.XB cltd loope cmpsl rex.WRXB rex.W int lahf repz (bad) (bad) (bad) scas rex.RB sbb fisubr lods cmc lahf adc jmpq sti lods mov add rex.WXB jo or movabs mov fsubrl int3 (bad) scas out add mull (bad) test jno (bad) mov movsl or adc sbb add popfq pop rorb cmp pushw xor mov rex.WR test icebp popfq add cmpsl mov and push jb rex.WRX and (bad) (bad) xchg jmp mov cmp (bad) pop (bad) (bad) and cmp mov push out pushq outsl pop add insb sbb rex.RX rex.RB movslq shrb add sbb add add and xor cltd rex.WRB pop scas and sbb mov lea cmp jp pop or xchg es movabs es (bad) jmpq jbe outsb (bad) or clc rex.RX scas (bad) (bad) in (bad) (bad) add cmp addr32 outsb repz sub xchg (bad) xchg rex.RXB fcomps je cltd frstor pop movabs adc xchg jle or and ja mov in pushq in jrcxz nop pop cmc std rex.W cmpsl js movslq nop rex.WRB fs data16 pushfq sbb (bad) mov jmp sahf mov test sbb cli lods mov cmp add (bad) jbe xchg insl mov leaveq rex.RXB shrl (bad) pop (bad) lea fcmovne or mov (bad) adc rex.WRX gs xorl jbe,pn fild mov xor rex.WB fisttpll pop xor ficoml pushq out sarb cld jo pop movabs or mov rex.WRXB push rex.WRXB jo in jl mov xchg (bad) mov (bad) sbb retq icebp ds rex.WB (bad) enterq push and cli xchg repz cmp (bad) xlat rolb scas mov test repnz xchg (bad) lods cmp and xchg xchg (bad) imul lods fiaddl repnz pop jrcxz lods pop mov sti mov (bad) pushfq xor (bad) rex.WRX lods xchg cmc xor rex.WRXB xor jg movsl jrcxz or iret jp notb rex.RX jg xor and and repz jmpq pop push mov sub rex.WR mov jge (bad) (bad) push adc pop psllw mov jge in (bad) adc rex.R jne jge rex mov jmp sub sbb mov retq rex.WB imul insb add (bad) pop sub mov mov xchg pop movabs adcl jb sbb xor stc add (bad) (bad) lods sub add push (bad) mov (bad) loope mov jrcxz adc pop data16 xor shr jle divl mov mov adc stos and xchg test rex.XB ds stc cmp in (bad) push pushq movl and retq xchg in xor (bad) lods xchg movsl insb jle adc addr32 test in rex.RXB fs repnz xchg ja (bad) jl imul pop movabs mov int3 adc rex.X pop sub insl outsb int ja jmpq mov js int mov lock stos out in test sarb lods (bad) jmpq gs jp cmp fmuls xor lea rex.WB in std movabs or jl ds mov pushq or add pop (bad) add faddl (bad) (bad) popfq cmpsl mov sbb mov adc (bad) jle js sub jae iret add (bad) repnz add xor push jrcxz jp (bad) in rex.R mov shr jns jo jnp (bad) sub out (bad) mov mov sbb adc outsb add testb stos std add sahf adc pushfq int3 (bad) and sbb fs out movabs jae incb pop movzbl fstl sbb pushq rex.X in callq icebp subb rex.R in (bad) jmpq je rex.WR lock xchg add js in fs test adc add (bad) sub mov (bad) push rex.RX cmp loop movsb mov add xchg retq rex.WXB (bad) xchg mov (bad) jns (bad) cli add jb,pn test sbb mov sti je movabs fisubr mov mov pop jp mov mov (bad) (bad) mov cmp movslq test jge add (bad) popq add add mov retq cmc mov or mov cmp out push rorl xchg test test cmp rex.RX jg loop rex.WRB add movabs lahf mov rex.WRB out (bad) shll xchg rex.WX cmpsb jns jae add or (bad) xor jle sbb test and and enterq jge int sahf rex.X adcb lock outsl mov or movslq pop add jmpq clc push push sub or cld jle mov (bad) jns jne mov cmp nop add lods adc adcl movsb xor (bad) mov fcmovu imul add add xchg repz imulb and adc (bad) mov rex.WRXB int3 fwait jmpq fnstenv incb (bad) jbe add pop add pop pop add (bad) (bad) add sbb add lret and adc stc (bad) js (bad) sub (bad) leaveq mov (bad) add and adc or outsl rex.W xchg movsb sub js (bad) (bad) repnz int3 mov clc jge fcomi mov jnp scas mov rex.WX rex.X in movabs push and sbb int insl cwtl xchg (bad) or callq out sbb clc retq iret addr32 fcomps ror stos leaveq push pop ja addr32 stc pop pushq loopne fsubrs addl xor fwait jl rex.RX rex.RB cmc lahf sar cmc ja xchg pop (bad) xchg cmp imul sub nop hlt retq (bad) mov rcrl jl jle fistpll and (bad) ja (bad) (bad) cs mov outsb imul push outsl jbe cld (bad) xchg clc and pop lods xchg fldt icebp jg rex.WRB rex.WX jae sbb fnsave and xor (bad) out mov rclb jge sub (bad) mov (bad) jne add in and (bad) sub loopne gs mov mov sarb jnp sbb add in push in ss push jge lods push pop imul xchg imul rex.RB mov es nop mov andl out pop in pushq movl cmpsb movabs bnd lret jmpq xchg push or sti jp gs pushq (bad) icebp fnsave pop fadds scas jmpq out and jbe cld (bad) shr rcrb sbb sarb pop pop jbe test push hlt sub outsb (bad) addb orps add (bad) mov mov mov movabs idivb adc or out stos (bad) or rex.WRB scas mov mov es mov adc stos xor jg (bad) jbe adc rex.B rex.WR sarb jb (bad) movabs cwtl mov retq add and or pop fdivs insl movsb jno push ds (bad) (bad) (bad) jb and data16 jne rex.WRXB adc mov mov movabs cltd fcoms jns pushq jle add sub or outsl add xchg out add loop mov and mov xchg rex.R jp (bad) pop mov jae add retq (bad) add (bad) xchg rex.XB loop mov adc xor movsl outsb adc push add outsl cmpsb mov pushq or add movslq nop pop scas jae jb (bad) jmpq mov rex.RX rex.WR sahf (bad) jle movabs sbb jno sbb adc jle pushq idiv or (bad) add or add out and movabs (bad) cld xchg rex.WB callq movsl cltd push movabs push add (bad) in (bad) (bad) mov iret cmp sub rex.WRXB std in xor sub adc out cmpsb jge (bad) stc cwtl pushfq mov mov movabs (bad) enterq fcoml (bad) in and xor rex jg fisttpll movabs jns lahf loope rex.W jg cltd add sar movsb jbe mov sahf rex.WRX (bad) rex.WX jl loop cmc xchg pop (bad) jb movsl movabs cmc js or xchg add pop sub and and int mov loopne retq adc add xchg (bad) push and ja movabs add fsts lods (bad) imul (bad) popfq int (bad) add adc fdivrl and mov repnz andl jnp add xor cld cmpsl data16 shll pop stc out sub rex.WX rex.RXB pushq or (bad) jns (bad) jle add rex.WXB xor (bad) loop cmc mov adc test fldcw (bad) fadd add (bad) jo repz jle mov in or insl add and pop fcmovnbe test mov movabs rex.RB je or xchg (bad) jp jbe (bad) jl pop leaveq (bad) sbb cmp stc hlt out push and adc jb xchg repz jp enterq loop mov jrcxz xchg add xchg test add jnp repz movabs add (bad) sub retq out fs (bad) je push andl add (bad) cmc add add or or cmpl mov fmuls xchg scas jne in mov xlat icebp cmpsb mov xor incl movabs add adc rex.X jrcxz fisttpl jns xchg jp cs lret mov lret pop jno add repnz (bad) sub popfq cld sub shr jp (bad) and fsubs jl add add push (bad) ss mov lahf fimull rex.R (bad) (bad) repnz mov out ror sbb movabs and movsb rcll pop jno jle or imul pop jle rex.WRX pushq fdivrs mov or (bad) add mov add add jae pop loop mov lods outsl in jns (bad) add cmp xchg roll push in loopne,pt cmp sub xchg (bad) insl mov push mov rex.R and jg clc sbb jle push pop jp add mov shr cmp fildl xchg xor xor xchg add sub sub add repnz pop (bad) fistl mov fdivs or repnz jge jmp add jmpq mov (bad) movsl hlt mov cmp push (bad) fs addb sahf mov (bad) xchg (bad) mov (bad) rex.RB rex.XB (bad) stos sub fiadd cmp lea add ds out (bad) sti rex.XB adc sarl fnstsw (bad) loopne jg mov cmp jmp or (bad) add mov (bad) mov or add push icebp mov jnp es in jbe mov add jp loop movabs xchg xchg push mov mov movabs loope xor xchg inc outsl (bad) rcrl lret lock pushfq jb push add (bad) andl callq cmp add rex.WB fnstenv xchg and outsb lods rex.WB rex.X add (bad) mov rex.RX xor cwtl movslq jo js es pop stc mull jle jrcxz xchg (bad) cmpsb (bad) add cli mov callq (bad) jl sarq fwait iret xor (bad) retq outsb jb movabs cmp out pop (bad) rcr stc mov xchg cmp push (bad) mov ss pushfq addr32 mov jmpq (bad) popfq rex.RB rcrb (bad) push loop (bad) in pushfq (bad) pop rex.WRXB jae lahf mov pop cld scas mov pushq iret cmp hlt xchg jae mov and xchg cmp rex.B repnz div test stc adc (bad) lock fdivr xchg test pop repnz rex.RX adc (bad) (bad) mulb fsubp fistp lods sbb xlat movslq and sbb test mov add (bad) jne lret xchg (bad) rex.WRB mov fs xor sti add rex.B sub xor popfq movsl jmpq push lods xchg fdiv sub push divl lods nop frstor add cmp lret (bad) in (bad) cmp cwtl (bad) je enterq mov icebp lods mov scas (bad) jnp sti outsb jl adc stos (bad) icebp ficomp (bad) scas push xchg push cli xor jg adc xor stos jl mov jl xchg imul jp hlt cmp adc jmpq and rex.WX mov add nop cld scas frstor cld mov pop mov fsub push xchg out fisttp rclb retq mov mov rex.WXB add mov xor mov movabs pop rex.WRXB add lahf push jns rex.WRX cmp (bad) jb (bad) jrcxz mulb in sarl insl andps rex.B rex.B in mov outsl cmp ja incl iret ds pop rex.X add retq add pop (bad) sbb pop js xchg xchg sub or int3 movabs out rex.RX movsb pop pop cltd push loope jrcxz sbb adc or push fcmovb icebp divl outsb cmp and loop cmp sbb sbb sbb rcrl adc pop (bad) jnp (bad) xor movabs add mov xlat jp mov scas (bad) sub or or jne xchg out and pop adc push test or sbb loopne iret sub retq xchg pop out rex push (bad) pop hlt push pushq rex.XB xchg xchg add and add hlt (bad) cmpsl fnstenv mov out pop pop mov (bad) jge lock faddl cmc test cmp in callq fldt fs (bad) add (bad) rorb (bad) rex.B jmpq xchg and rclb fwait jge int mov clc movabs or ficomp push rex.W and sbbl or add (bad) ds js mov clc add cld mov (bad) jbe mov test and es cs imul rex.WRB adc test outsl add (bad) enterq push add (bad) adc fimull or loope testl or rex.X rcll jnp fisubrl rex.RB (bad) movabs and fldl (bad) negl (bad) (bad) lea cmpsb (bad) rex.R jrcxz push movsl pop and outsb movabs enterq adc adc jp (bad) iret leaveq jp mov idiv outsb rex (bad) sbb (bad) jge fdivrs xchg xchg sub xchg (bad) test xor pushfq iret sbb rex xor xor rex.RB fidivl (bad) or lea mov pop cmp out (bad) cmp sub pop mov pop fsubrl sahf push test rex.WRX int movsb jbe stos xor pop cmpsl or push in jmp push rex.W rex.B rex.RXB movabs xchg stc stos rex ds in mov movsb (bad) jnp sbb int loopne mov hlt jge sbb insb data16 mov ja add je and iret pop push pop push jl cmp insb jbe cmp push or stos xchg mov jl jb rex.RX rex.WRX ss and mov (bad) stc mov mov js cmpsl cwtl outsb rol mov jne jrcxz stos fwait jbe xor rex.WRB lock mov lods mov sub sti (bad) fisttpl mov add and rex.WXB (bad) xchg mov (bad) sbb mov (bad) in stos mov incl and (bad) pushq push hlt cmp jno std xchg add movsb and push add rex.RX (bad) jge (bad) movslq (bad) rex.W add xchg xchg push test iret lret mov cmp jrcxz xchg retq lock stos lahf mov cmpsb loop rex.RB lods jnp rex.RX jg mov mov lret xor pop in push jnp add enterq push test in mov je xchg xchg shlb pop iret in sub add (bad) scas adc (bad) or cmp ja rex.RX mov (bad) rex.XB cmp add pop std sbb fistpl adc not mov pushq sub hlt sbb mov test jle imul int jg xchg mov imul (bad) xor fwait jl mov jo rex.WXB popfq add lods mov jne sbb mov jg (bad) ficom rorb (bad) rex.RB jrcxz rex.W (bad) movsl sbb test mov pop ficom sahf rex.WR test test (bad) jg (bad) adc sahf callq ja jp xchg lahf bndldx in imulb jmpq jns mov nop mov jbe lods xor movabs (bad) out xor (bad) jg insb (bad) push cld push outsl (bad) mov or adc adc pop add (bad) insl movabs mov sbb push jns and (bad) ss xchg movslq fadds mov mov loop cld pushq push out js sub xor and rorb mov fadds cmp rex.WRX jmpq ss (bad) fbstp xchg (bad) movslq test std rex.W repnz cld movabs sub jp (bad) movabs shrb mov jrcxz outsl jb sbb movabs lret (bad) mov scas jnp jmpq mov outsl pop lcall fwait (bad) (bad) movabs out push mov mov es mov adc sub adc jle cmpl loope add repz fnstcw rex.W repnz (bad) pop insl jle js mov lahf pop push add sti (bad) mov rex.WX fidivrl mov (bad) jge lea mov fldl jl cltd jae and sbbl (bad) sub stos nop test loop cmp js pop jb lock sub shl (bad) rex.WR rcr adc insl repnz bnd (bad) iret xchg xchg mov test mov fild loope lea jl cwtl rex.WB sti cmp add xor fwait pop add add pushfq fwait add mov and fisubr loop fildl cmp rex.WXB add sbb rex.RXB movabs rorb cli in imul jo mov rex.X add push pop shlb add xor cmpsl jnp add je adc adc adc add loopne roll retq pushq outsb in mov jp int jae mov or jg xchg push nop mov test fstpt (bad) and jne (bad) sbb scas mov push jnp retq insb jne scas rex.WB add std (bad) rolb mov movsb adc retq (bad) out mov in sbb (bad) cmpsb jl push loopne adc lods rex.WXB rex.RXB add xor jne add outsb addr32 mov and pushfq add push clc mov add repnz loope rex.WXB (bad) add (bad) scas cwtl movabs movslq mov mov push add (bad) iret mov mov stos sub sbb jl nop sub lods adc (bad) adc fmuls pop add imul mov mov int cmp jp (bad) imul scas and sub retq mov out xor test and jg or adc movl mov hlt jg movsl pop mov and adc xchg movabs mov (bad) out rcrl movabs xlat pop mov and pop test insb (bad) cmpsl xor fdivrs cmp (bad) enterq xor test mov rorl (bad) cmc cld pop push rex.X movsl add (bad) (bad) mov add pushq xchg push divb and push fsin jne add mov (bad) cli insb rex.RX (bad) (bad) repnz out imul sarb orl cmpsl (bad) repz push jne (bad) cli add cli cmpsb jle hlt movsb js stos (bad) negb mov adc out fisubl shrb push (bad) movabs mov pop add test rex.RB xchg std (bad) scas cld mov lahf rex.X movabs (bad) stos xchg xchg clc movslq std sbb (bad) mov (bad) fldenv cmp cli jo sub lret sti jnp xor cli jo pop stos pop pushq xchg fcoml xchg (bad) xchg fdivr (bad) (bad) (bad) ds jmp cli andb xor mov cmpsl movb cltd rex cwtl xor js movabs out (bad) jbe js or pop stos mov and or pushq (bad) test xor (bad) xchg outsb (bad) sti cltd (bad) (bad) pop (bad) xchg mov add xchg rex.WR rex.RX incl mov (bad) mov js mov (bad) (bad) iret jb ss negl pushw loopne cmp iret std sub (bad) pushfq movabs fs mov add imul imul or ja (bad) rex.RB test mov cmp pushq (bad) lods xchg mov jle and movabs fdivrp sbb jg adc jg std rex.WR lret add data16 andl (bad) xor repz std (bad) rex.WXB add insl rex.WR retq lods rol cmc stos not fimull jge,pn pop insl addr32 mov jbe es movslq add (bad) clc rorb (bad) lods pop fiadd notl enterq and adc outsl (bad) sahf jbe icebp sarb and adc rex.WXB jp cmp sahf sbb pop adc mov (bad) cmp xchg add scas jle xchg mov (bad) jg rcrb mov adc push (bad) xor pushq (bad) rex.W jb push movabs mov sbb xor sti sub (bad) pop adc sbb jbe fnstenv sub add rex.R sti pop insl callq (bad) scas movsl add imul xor jg,pt cmc and cmpl imul lods push sub callq or rex.RB sbb lret (bad) add pushfq outsl sbb cmc fistpll or xchg rex.R movabs xchg fadd mov test mov (bad) pop mov or adc rex.WRX jne outsb leaveq (bad) cmp mov xchg sub xchg (bad) (bad) or pushq (bad) rex.WRB outsl sbb ljmp int or sub add rex.WXB scas mov mov rex.R fs jo fxch rex.WR je,pn clc std xor rex.WX jmp ficom sub (bad) or retq stos rex.WRX xor (bad) (bad) ja fsubs xlat cmp outsl movabs pop (bad) rex.WRB outsl cltd push or xchg stos outsb vmovsldup (bad) insb cmp xor rclb rorl jp callq (bad) rcll jp and fwait (bad) xor insb test (bad) (bad) mov sarb cld js cmp test jbe add adc or pop test cmp or cld idivl mov jns mov test ja cmp sub mov movslq sti es (bad) test je jbe iret pop push add (bad) rex.RX cli add in lods js (bad) stc addr32 add sub pop fbstp xchg std pop rex.WXB push movslq fsubl jl mov add rex.WX (bad) movsl (bad) and (bad) out ficompl fwait (bad) rex.RX cmp (bad) movsl test cld jge (bad) fistpll movslq lods jmp rex.RX xor imul pop (bad) repz add movabs outsb sub es pop mov rex.WB jle (bad) rex.RXB cmpsl (bad) pop mov lods fnstenv (bad) movabs sbb insb fs rex.W xchg or rex.WRXB rex.XB pop imull adc sub add xchg and (bad) cmp add sub xchg (bad) (bad) movslq xor (bad) pop sahf loope mov push add xchg mov out mov fs rex.R loopne (bad) mov (bad) loop fwait add push xor rex.WX rex.RXB add subb in jg mov cs test sbb movabs rex.W mov jmpq negb mov add imul xor add leaveq imul fildll jl repz and loope retq jns (bad) (bad) xchg jle fst (bad) (bad) cmp (bad) jg sub popfq (bad) add rex.RXB and cmpb sub (bad) imul cli and add loop rex.W test movsb stc and lea lret add rex.WRXB mov xchg (bad) rex.WX clc or pop sbb (bad) jbe rex.RB callq jnp movsb add movb leaveq adc adc pop pop mov sub loope xor sti add data16 add rex.WRX addl cmp hlt or jno ja rex.RXB (bad) sub add and std movabs (bad) repz test or (bad) in shr push adc rex.X iret xorb sarb movabs mov add movsl pop rex.X jo rex.XB ja jb jb fwait sbb fimul lret jp cmp push rex.RXB sbb repz or ja add gs fsubrl fisttp cmp (bad) adc cld mov mov (bad) rolb xor xchg enterq rex or jg (bad) outsl sbb callq jmpq xchg in rex.WB (bad) out cmp and fs (bad) gs rex.RX rex.WRXB jmp (bad) push mov (bad) pop adc sti popfq stc andl jrcxz jne xor leaveq or mov loope jg (bad) jge cli pushq (bad) mov rcrl pop mov je adc adc insl rex.WRXB pushq push mov mov jmpq je sbb xchg mov jl ror rex.WRXB cli push movabs adc pop test movabs lahf pop insb loop (bad) iret xchg (bad) push (bad) mov movabs mov mov ljmp int ja ficomp add rex.X adc add sub movabs cmp jle in or (bad) fwait xlat cmc movslq and mov sub jrcxz sti rex.WRB cmpl or lahf outsb in sub je lret sbb and jmpq sbb (bad) (bad) (bad) mov mov insl (bad) sub pop jnp (bad) imul mov push sbbl cmp fs rex.WRX fcomip add rcl sti outsb sbb xchg or fsubrl out movslq rcl cwtl (bad) add test sbb jmp jle mov in (bad) pushq ffreep or mov mov xchg idivl lods in xor outsl ds (bad) retq lcall retq sti insl imull rex.WRX xchg test (bad) xchg jmp jb jno jne jle imul rex.WRB xor jp xchg jge stos sti sti (bad) rex.WX add mov shlb pushfq jmp callq (bad) sub jge ja fldt imul jl es rex.RX outsb iret ds ss (bad) hlt fidivl loopne insb (bad) and rex.R (bad) notb and pop lret mov cmp js testb cmc insl stc cmpsb in sub mov mov je iret clc push test jnp add fildll insl push fwait test scas rex.RXB scas stos ds jp out (bad) jle or cmp cmpsb (bad) push pop fistpll jb (bad) movsb (bad) (bad) (bad) lock rex.WRXB lods sbb sub sbb (bad) mov or jne (bad) mov rex.XB movabs xor add rorb jg es insb fistp mov (bad) icebp (bad) movabs add sbb add sahf jl rex.RB jg repnz mov fnstenv pushfq or push add fstpt and mov inc lcall add (bad) jrcxz movabs pop add retq out or or testb jb mov paddsb int3 mov (bad) mov push enterq rex.W insl rex.WB loop (bad) rex and push jb je ds mov add mov mov xor cmc loopne cmp test sbb jbe (bad) sub and data16 rex.WXB pop rex.XB icebp adc rex.WRB lahf insb add (bad) cltd mov andl fs rex.WXB xor imul sbb jp sub xor rex.RX pushq adc jge (bad) adc rex.WRX add xchg movabs jg,pn callq cmp add or add fisubl add rclb sbb ds nop stos (bad) push xor jp scas (bad) fsub (bad) cs mov std rex data16 int3 xchg jle or insb (bad) (bad) mov clc and stc xchg stos rex.WX in cwtl movabs sub wrmsr jns cmp mov outsl rex.WXB add jg in rex.WRX sbb int3 mov jle adc leaveq movsl cmp add retq out pushfq pop jp (bad) flds xor (bad) mov insb stos jmpq (bad) xlat jg xchg xor roll movsl shll cmp (bad) xlat cmc pushq and adc mov jle jg (bad) sti rex.WR fisttp add pushfq mov mov loope pop mov (bad) lods cltd cmp cmp or hlt pop mov cs mov lock sbb mov (bad) sti sbb sub add (bad) (bad) popfq mov mov fdivrp xchg loopne mov leaveq sub jl repz (bad) or rex.WRB jnp sbb rex.WRX (bad) cmp cmc (bad) (bad) mov xor int mov lret (bad) add xchg fs rex.WRX rex.WRB jmpq loop jmp add (bad) or int3 jne loop fiadd mov sub add mov divb jp jl lods lret in int iret xlat adc (bad) insl jbe sar mov ljmp mov iret movslq sysexit add xor pushq jbe divl mov and decb or lock adc (bad) jle push mov or rex.RB rex.W (bad) (bad) xor adc imul leaveq pop mov pop rex.WR add hlt rex.XB (bad) xchg int jmpq cld adc jno add pop mov rex.WRX outsb sub add xor stos je mov stos scas adc cli push adc add (bad) enterq jge (bad) rex.WR (bad) lock lahf and and (bad) js jbe (bad) jae jmp mov rex.W push jp jle xchg xchg xor mov xor or (bad) jp mov or adc sub out (bad) or lahf mov fstl outsb xchg jns or jo sub jmpq rex.WR fist add movabs movabs (bad) sahf jg movabs jo and mov pop scas nop mov sub mov add or sbb adc in mov test sub (bad) cmp fucomi imul add (bad) fs add mov sub test std mov (bad) cmp xchg rorl (bad) mov jg insb (bad) (bad) lahf std loope rex pop adc rex.WB fisttpll pushfq cmp mov sahf cmp lret fiadd (bad) scas mov xchg movslq mov out rex.XB fiaddl in mov add (bad) adc rex.RB gs and (bad) xchg and jno xchg xorb rex.WR punpckhbw and add lret pop lods addl stos mov (bad) add (bad) jp adc xchg mov repnz nop mov (bad) rclb sub xchg rex.RB movabs add pushq push lahf jp insl or cmc test fnstsw lahf mov pushfq (bad) (bad) add xchg jl xchg iret or cmp retq cmp jnp cwtl outsb ja xchg pop mov mov (bad) (bad) fcmove (bad) (bad) stc sbb jnp jb (bad) (bad) (bad) std mov js pop pushfq (bad) jbe lock jl jnp (bad) mov fs (bad) fildll jmp xchg rex.XB sbb jmpq xchg js stc (bad) (bad) rex.XB fs clc pop add or loop out (bad) rcrl jp (bad) in mov rex.WXB movabs lock iret cli jns pop lahf retq mov adc mov (bad) fild es cmp mov mov pop jno out pop icebp (bad) jmpq mov in lahf rex.WX mov (bad) fxch xchg pop repnz outsl enterq xor rex.R fldl xor mov ss shlb in push sahf sbb pop (bad) cmp (bad) pop and clc gs push add cmp pushq jp repz outsb mov xor jnp jge jg insl or xchg (bad) mov fildl pop jmp sti test sub cli rex.XB rex.RX test (bad) in js xor sti and sbb xchg and testl imul add mov sbb lret insl cmp cmp (bad) cmp std (bad) adc fwait mov mov xchg rex.X add sub outsb movabs adc cld lea jns outsl xchg add jp add pushfq adc rex.RX jl add add cs movabs cltd xor cmp ja in int sub enterq stos stc mov nop in adc or movslq mov pop (bad) jg pushq adc mov mov add movslq loopne iret outsb fmuls (bad) or add rex.W rex.X je (bad) mov (bad) (bad) outsb cmpsb adc (bad) cmp icebp sbb or mov mov iret test xchg add fbld rex.B pop (bad) (bad) sti fiaddl fwait rex.X or test lea sbb cwtl mov gs (bad) xchg and testb movabs loope sbb add test addl jg xchg jmpq jp mov rcll (bad) test fwait (bad) callq rex.WXB fidiv jbe out mov sbb flds movl outsb xor lret pop add xchg movabs sub push sub push loopne (bad) cmp pop pushq jb jne test xchg pop jb test xor sub add mov leaveq (bad) add int roll mov add (bad) sub mov lock and pop and add movslq pushq (bad) outsl out push test xchg (bad) rex.RXB rex.WRX movabs and mov rex.R leaveq cmp jrcxz movabs (bad) and addr32 xor cmpsb add xlat retq outsl add mov adc and sbb mov add xchg stc xchg cvttps2pi xchg icebp popfq clc retq mov cld or fwait (bad) jmp sahf jg out lea add loope loopne fsubr rex.B pop rex.X add mov cwtl xor cmp scas jg (bad) test jmp (bad) sbbl fstpl cmpsb out loop cmpsb scas fsubs mov or imul rex.RXB (bad) fdivl (bad) pop orl lahf nop jb setb leaveq add (bad) stos or gs jns int3 push (bad) cmpsl out lock xor loopne add jmp (bad) test in retq lods lock loopne add in add add movabs add jp (bad) lahf cld fcos add cmp fwait cmp sub sub test jbe add rex.B pushq add in mov xlat xchg in add nop pushq ja add loope fwait add push (bad) retq movslq mov (bad) shrb cmp pushq scas xor (bad) idivb (bad) push (bad) (bad) stc rex.RB outsl rex.RX mov jo movsb push (bad) jno jo lahf cmpsb mov jmp mov mov add (bad) (bad) xchg (bad) fdivs mov movabs cmp lods clc rex.W js sti sub or stos mov insb xor mov rex (bad) pushfq jne xchg adc (bad) sub lods imul and (bad) adc (bad) mov xor jnp,pt mov jno out int (bad) jb and jns adc rex.RB and rex.R jle add fild xchg and pop mov pop jo mov rex.WB push rex.X out xchg lods adcl sarb jbe retq mov and jne callq jrcxz or (bad) and jbe sbb enterq rex.RXB xchg add add (bad) fwait mov negl jns rex.WRXB or mov (bad) cmp xchg rex.W or hlt pop repnz push push cmp (bad) xor sbb jo xor test cmp (bad) push sbb (bad) pop (bad) insl and (bad) fwait mov je adc mov pop flds cli jno nop mov ss xchg xchg add sti or cmp out cli (bad) (bad) pop (bad) movsl (bad) lahf (bad) (bad) (bad) xchg cltd push or fimull and rex jns hlt rex.RXB decl adc (bad) pop hlt xchg xchg mov in (bad) (bad) lahf rex.WR (bad) cli fs out xor rorl and stos movsb (bad) test fisub (bad) jp mov insb movabs jbe jmp jnp rex.W jno sarl mov mov in pop lahf jns fwait jo sub rex.RX callq rex.WB rex.WX jmpq pop in rex rex.WRX std (bad) test or jns idivl test push cs adcl cmpsb xchg js ja jg xor mov pop and pushq gs mov xor (bad) pop out leaveq (bad) sahf lahf rex.WRX rcrb push outsb fdivr rorb pop popfq cli mov (bad) xchg rex.WB (bad) jo jo mov adc (bad) pushq mov out in add jbe cld (bad) fisubrl pop jrcxz add add jmp lods rex (bad) lods ss shll xchg pushfq cmp add ror and loopne test pop sarl outsb xchg sub jb,pn cmpsl js mov imul and rex.WRXB lods pop cli or popfq pushfq or out xor js adc stos rex.WRXB pop lods psubsb xor mov adc lret mov jl pushfq (bad) cltd pushq fnstcw (bad) cmpsl sbb mov sbbl jp jl jg (bad) (bad) mov jns fstpt pop add mov test rcll xchg mov sbb push or xchg ja retq pushq (bad) (bad) rex.WR cmp (bad) fbld fdivs retq jl cmpsb loop jns sarl ds jns scas cwtl (bad) rex.WRX or or pop scas jl and sti and adc lock lahf and pushq cmp xchg sub cmp xor xor push (bad) rex.WRX (bad) sub sahf fidivl (bad) (bad) stc push pushfq rex.RB test out xchg out or loope pcmpeqb xor rex.X fidivr (bad) or cltd scas ds add (bad) lcall retq loope movabs push jle rclb pop stc sub mov push ja test (bad) add xor and stos shlb mov (bad) (bad) js add xor add rex.WRXB push popq iret (bad) mov rex.B xchg cmp (bad) rex.RXB (bad) rex.WRB pop addr32 pop (bad) add (bad) mov movslq or retq add sbb push cmpsl adc or (bad) push push rex.R rex.W cmp (bad) sub xchg mov push xchg lret add out rex.RX fwait cmp stos add xchg cmp adc out shlb jp rex.R in add js (bad) sub test repnz mov sub mov jb adc lret out add movabs jl fisttpll jl insb ljmp pop push and add mov (bad) mov decl mov xchg jae movabs (bad) sbb mov xchg add and adc and and paddd xchg insl jrcxz ficomp and imul fcoml movslq js (bad) mov fldcw fsubrs rex.WB (bad) mov sarb fcomip cld nop je outsl movsb mov push enterq add mov clc (bad) ss lock adc rex.RX mov loope (bad) push cmp xchg insb setne xchg jnp sbb (bad) (bad) scas popfq mov jmp jmp adc outsl pop or (bad) mov push int or mov and or jns gs or test add out xchg cmp cmp xor xchg mov and sbb sarl mov or and jb or (bad) jmp rex.WRX repz jp (bad) jae push fimul addb rex.WXB jb mov add sub loop mov rex.WRXB add mov push pushq xchg imull push nop mov (bad) in and jmpq pushq xlat nop jle sub je (bad) out pushq test lock add and pop fmul out add cs add (bad) mov lock cmp sbb rex.WXB addr32 (bad) mov pop out mov rex.R imul mov jp int3 (bad) or adc enterq cmp sbbl mov mov mov add sub jle outsl xchg add imul sahf mov xchg repnz (bad) jrcxz (bad) sub cmpb jae sbb (bad) loopne xchg sbb cmp rex.WR in lea rex.XB and pop jp mov shll sub rex.X rcrb in adc lret cmpsb (bad) sbb mov adc adc mov sub outsl rolb scas jle callq xchg or es pop scas xchg loope rex.WR scas repz ss sub add xor mov out xchg sub sahf rex.R sbb jg cmp jle sbb mov adc cltd cmpsl (bad) jl or or and callq jp xor (bad) jnp add and and out push (bad) jp (bad) rcrb (bad) sbb rex.W and xchg (bad) (bad) jmp add pop rex.RX jg rex.XB rex.WRXB rex.WRB movsb jrcxz ss in out mov (bad) jp int3 jb jbe cld sub mov jno mov hlt lahf cmp rex.X (bad) fidivrl andl lea in xchg test xchg rex.WR outsb mov xor adc pop test mov shl rex.X lock add push jge jg jrcxz jg movslq idivb movabs lahf xchg xor jg and mov jp or movsl (bad) out int jle sub add sahf sub cmp es xor add adc xlat jae add iret mov fwait add (bad) rex.WXB outsl (bad) jbe rex.WRXB and jge rex (bad) js jb push gs repnz outsl rex.WB sub loope add out leaveq jle (bad) andl add jae (bad) (bad) xor add (bad) xor push (bad) (bad) rex.WR rex.WRB fisubr jge add cmp hlt mov cmp in int movsb (bad) movabs (bad) add popq jb (bad) punpcklwd roll fcomps rex.RXB sub (bad) push int3 data16 pushq rex.XB mov xor (bad) rex.RB add pushq (bad) (bad) vmulsd (bad) xchg mov pop rex.B (bad) movabs add mov and xchg mov fsub test insb mov jae std (bad) js out (bad) xor retq cmpsl xlat (bad) (bad) xchg mov cmp add jg xchg rex.WRXB int3 rex.WRXB (bad) mov (bad) (bad) insb sti (bad) or in pop (bad) add fidivl xchg or gs fldt add cltd popfq sbb xlat fcomps (bad) mov cmp jb add popfq test add push pop and add movabs mov mov and (bad) ja (bad) add push mov xchg ss add pop push (bad) add vmovdqa or icebp scas and rex.WRXB jo lret (bad) jb divb jrcxz pop pop test add xchg sub je add add (bad) (bad) xchg rorl (bad) add jl sub (bad) std xchg jg vshufpd mov pop rex.WRXB mov enterq push lods out lea retq (bad) (bad) mov ds (bad) xchg jne jmpq sahf callq rex.B mov cmp leaveq add (bad) test test pop mov xchg (bad) rex.WRX sub (bad) (bad) add je xchg fistp pushfq jp pop nop xchg movslq insl lahf cmp mov add pushq jg mov rex.WB fs rex in (bad) add xchg iret fistp jp,pn add lea mov (bad) mov test mov sahf cwtl (bad) sbb rex.R rex.WX mov rex.XB repz sbb cmc adc push rex.WXB lret add add cwtl rex.WB xchg icebp (bad) mov cmp mov sub add movslq rex.RX rex (bad) rex.W cld flds jle movslq fcompl and fsub add (bad) mov adc mov test pop fistp (bad) add (bad) sti sarb rex.RX cli mov rex.W test sub hlt test mov fadds cmp fildl out jo orl xchg mov mov sbb mov movabs repnz xchg cmp pop xor fisttpl fmull sahf out mov jp,pt adc jns lea sub test not xchg flds push sbb (bad) jle add mov fildll cmc ljmp divl js lods jmp addb jg mov fadds ja cwtl jbe jg cmpsb xchg clc pop jl (bad) scas icebp es cld pushq push mov add mul adc cltd enterq test jrcxz rex.WRXB xchg scas pushq add add loop divb xchg push rclb rex.WRX rex.WR out movabs add insb (bad) incl and sbb out mov jge cmp shrl xchg mov mov xor jb adc push pop jg test cmp add sub pop rcl out loope sti xor mov (bad) adc (bad) mov clc xor pushq rex.WRB fs cmp mov lods insl cmp rex.WRXB add out rex.B (bad) sub repnz (bad) fwait mov stc fwait (bad) xchg rex.W jo (bad) jge or jns int3 sbb jbe xchg jmp push jg movsb movslq adc add jnp pop (bad) clc retq and and add add adc cwtl fbld jp add fs cmp sbbl (bad) mov test xchg retq imul push lods js cmp repz push hlt mov (bad) notb add jae (bad) lods fmul pop add sub (bad) movsl rcrb xor mov sahf (bad) scas jns mov rex.RB data16 jbe jb scas fcomp cld (bad) movsl sar cmc decb add imul test or jg rex.WRX vpmovzxbw rex.XB fldl es pop jb (bad) (bad) (bad) xlat add jnp js sbb push (bad) movabs enterq jg ja add sbb rex.XB pushq test mov add test rex.R sbb mov mov in gs sbb push ja notb jl xchg shrb or jbe,pt cmp (bad) fs and cltd xor add fiadd mov sbb (bad) or xor (bad) cs jo mov js cmp (bad) (bad) xor rex pushq rex.WRX adc jle cmp test fmuls pop (bad) cli rex.WRXB (bad) vpunpckhbw (bad) mov add pop cmp (bad) jg (bad) xor ja (bad) shrb shl sti and and adc retq cmp pop mov xor push (bad) jno fisttp rcr or punpckhbw jbe movabs or (bad) jo adc mov sahf pop pop mov rex.WRX rex.R stos cmp es je push fisub cmp add and (bad) cmp fdivl xor adc jg mov lea pop fidivrl in hlt mov and jrcxz callq sub fs movabs (bad) cmp shlb xchg jb ss rex.WRXB out out hlt cmp insl push enterq (bad) jns or cwtl out cmp jle (bad) mov (bad) lahf je cmp leaveq rex.RB (bad) xor fldenv insb push in cmc push sbb pushq cs es (bad) out and lods add rorl ffree rcll jb rex.X cwtl ja adc jg add ds (bad) (bad) cld pop cmp fsubrl (bad) mov je cmp fldcw (bad) xchg cli jne (bad) (bad) and (bad) ja cli out jmp mov outsb jle (bad) sub repnz sbb push addl mov fistp (bad) xor (bad) (bad) xor rex.WRXB jnp outsl (bad) xchg sti test popfq push js mov jl cmpl (bad) jle cli je fs xor cmp adc sbb pop fldl rex jle lret xchg out mov xchg xor scas in (bad) test outsb ficoml mov jmpq repz shrl pop pop out (bad) outsl imul test jnp (bad) cs cmp xchg gs jb insb stos sub out movsl rex rex.R (bad) jp add ss xor jns in cmp movabs pop (bad) xor xchg popfq std mov xor clc jp fisttpll mov sub outsb cli scas adcl pop xchg repz addr32 jo (bad) (bad) rex.WXB rex.RB rex.W xchg rex.WRB sarb mov (bad) rex rex.RB push fwait (bad) outsb cwtl flds add lret xor rcrl mov adc cmp mov movsl rex.WR insb add push outsb lock (bad) (bad) mov push mov pop loop (bad) rorb lods cmpsl or out push xchg sti (bad) outsl cmp cmp retq push pushq (bad) or mov in (bad) in sti movsl jmpq add ss sbb jrcxz (bad) jne and outsl in rex lods imul jrcxz rex.WR mov (bad) jge movsb cmp rex.RX rex.WR mov rex.WX cwtl cmp loop push and int3 (bad) outsb mov rol mov out fwait mov rex.RX mov xor rex and cmp jrcxz imul rex.WXB sbb loope cmp andb insl mov xchg cmp sbb sahf xchg addr32 subl pop rorl outsb movabs (bad) jbe fsubl outsl imul cs pushq jl cmp xor jbe int3 sub popfq ja mov js cmovno mov mov pop rex.WRB js jmpq pop mov sub lret add jmp shrl cmc jge iret lods (bad) sti push jae (bad) sarb outsl jbe jnp test fistpll jl sarb outsl pop loop sub push sbb sbb movslq pop add rex.X add nop ss loop mov movslq in out mov int add scas sahf (bad) jle and jae (bad) mov cltd mov add (bad) pinsrw rcrl pop jg sbb lods (bad) fs mov rex.WR pop cld and pop rex.XB fmull nop push test jae stc (bad) (bad) xlat mov and xchg xor sbb jns rex.WR fcoms cli sub and cmpsb lods cmp xchg jmpq insl movsb jge (bad) pushq fs cwtl testl (bad) pushq jnp pop cmpsl (bad) mul and mov and or out (bad) xor sti in scas std lret in (bad) add xor bsr lret jbe rorb mov add test out (bad) fcmovnbe rex.WRXB insb movsb mov push out push cmp icebp cs cmp xchg (bad) test add push push out cmpsl fistpl rex.RB fistpll retq leaveq add adc (bad) incl add adc es (bad) add (bad) sarb pop (bad) scas fldl rex.W rex.RB mov mov fdivrl shl mov xor lods rex lock rex.B rex.X xchg fsubp mov sub sbb (bad) fwait cs jae add (bad) (bad) (bad) (bad) fcoml mov cmp (bad) sbb movabs dec pop or movslq xor (bad) not addl imul mov add neg adc (bad) jae add xchg mov xchg repz mov push lock add sbb adc pop test cmp jno jnp in jo rex.WRXB movslq jmpq sbb rex.WR sbb (bad) jl xchg movslq (bad) movabs mov jl xchg stc in jg ljmp xor adc nop jb addr32 icebp mov cmp sub xor (bad) mov rex scas mov rex.W idivb add xor mov loope mov jae mov rex.XB test jb sbb mov outsb mov rex.WXB xchg mov mov jb icebp xor repz out rex.WR (bad) cmp rex.W lret adc or jrcxz (bad) add xor mov mov pushq cmc lods jmpq jge or and punpckhwd rex.RXB stos fimull (bad) cli pushq push rorb pop rex.RB in stc retq jne js add rex.WRXB cmpsb xor mov mov cmpsl scas add (bad) add imul jb sub adc hlt mov xorb adc addr32 movabs faddl rex.RXB imul pushfq jp xlat adcl loopne adc sahf clc jns (bad) add fstl (bad) push cli sbb ja xor (bad) vmulps pop int (bad) add sbb push or xchg add iret jbe pop test add test cmp pop xor rex.R fs lods cld sbbq pushq cwtl jno ficomp jmp rex.WRB scas testb lret sti rex.WB sbb xchg fisttpll in mov rex.WX mov pushq mov data16 imul (bad) (bad) out movsl jne lahf cmc pushq cmp movsb (bad) enterq cmp mov out fisubrl ss sahf mov idiv (bad) movabs (bad) add add mov jle roll out iret or stos outsl xchg (bad) push (bad) add imul rex.RX test lahf lret rex.B (bad) cwtl (bad) jns callq lahf sub pop outsb add lock adc jnp (bad) outsl movslq mov push xlat and mov (bad) push rex.X fcmove out (bad) rex.WX jnp pop jl movsb lea loop enterq stos rex.WX movsl mov mov int jg,pn jno fisttpl gs (bad) mov xchg movslq loope pushq test in sbb cmp add sub js mov pop outsb adc (bad) (bad) js cmpb adc push or movslq sbb lods cli out imulb jmpq outsb testb or push lret insl mov hlt retq mov sti or int (bad) loope rex.W mov (bad) (bad) pop cmp (bad) je jl cmp xchg test and outsb xorl andl (bad) lret shr outsl adc in or jp outsb mov js sbb (bad) jg push lods cmp sbbb fcmovb movsl xor rex.RX leaveq (bad) lahf leaveq and or cwtl jg xor sbb (bad) test push cmp ss (bad) push push movabs jrcxz retq jl pop xchg cmp pop loop mov jae test mov roll or (bad) xor fsub stc scas (bad) rex.WR cmp (bad) pop add mov sarl loop jle hlt (bad) mov (bad) cs adc and jge ja mov rex.WX pop test stos sub negl mov sti retq xchg add xor mov adc jp movslq jno mov add rcll hlt rdmsr mov cmpsb and jp push sbb cmp callq jg rex.X out xchg cltd mov rex.WRB sbb (bad) rex.WRX cmp and add xor and (bad) std test lods push (bad) fild mov icebp add movabs cmp xchg or adc add test ficoml adc sub mov cmp mov push movabs fsqrt (bad) rex.B mov jno sar cmp add lock stc (bad) add add ja movabs mov incb sbb push rex.WRB (bad) adc push js jl add int3 or (bad) sbb pushfq (bad) add outsl cwtl out (bad) cmp add rex.WR cmp rex.WXB xchg xchg and xlat or rex (bad) cmpsb add fistl imul out rex.RX stos rex.RX xchg (bad) push rex.WB xchg test sbb js xor (bad) adc retq mov (bad) xchg pop sarl (bad) test jmpq (bad) (bad) or sbb pop out (bad) sbb scas mov (bad) cld fwait adc jne mov mov add cwtl setg in mov mov jge (bad) cmp or mull add jge callq cs ss mov add lods (bad) callq or pop sti sub jp icebp stc (bad) rex.WXB lea rep (bad) out clc and adc jmp es mulb xchg loope movsb fdivrp ss fnstsw lods pop jne sbb mov cs add negl push rex.WRXB es pop mov mov cmp mov (bad) gs xchg jg in sbb cli xor adc movabs js pop in (bad) jb clc or adc ss lahf xchg shlb stos jrcxz ds stc outsl out (bad) jle pushfq rex.WR rex.WRX stos (bad) sarl jmpq (bad) outsb mov rcpps fwait stos lret rex.WXB mov add pop add stc add test and ja mov or (bad) sahf rex.R callq add cltd rex.X mov jle rex.RX repnz mov fs stos mov add lret movl shlb (bad) jg ljmp shrb insb (bad) pop mov xor xchg or jno pushq xchg lea jb outsl incb lock adc decb (bad) scas fistl add in jg (bad) cmpsl (bad) jp cmp rex.WRX (bad) rex.WB or (bad) mov repnz (bad) and loopne jg (bad) push cmp add lea leaveq push in (bad) stos jle pop push pushq jmpq jne push xchg (bad) add or adc test adc out add loope cmpb pop add xchg in mov rex rex.RX add out (bad) rcrl xchg add xchg ss rex.WRB or fimul (bad) stc lods jb pushq mov mov pushfq loope pop idiv and add push or scas xor or adc insb add repz lock js jbe idivb rex.X mov in pushq in (bad) push (bad) ss sbb sahf lods test jp or cld outsb jbe cli xchg rex (bad) test (bad) lods fisub (bad) ss (bad) jnp (bad) and fdivrp cmp mov (bad) rex.WXB xchg xchg je mov jg sbb (bad) xor push sbbl sarb and or sti insb rex.WXB xchg mov movsb adc jg and (bad) sti paddd (bad) sub or mov mov rex.WRXB rex lock movl cmc (bad) (bad) mov mov mov jmpq cld retq jle (bad) mov (bad) insb cld in shlb jnp loop adc mov fs jae rex.WR add pushfq add lods (bad) pop mov xchg or movsl and rex.WXB jnp pushfq push fisttpl and test add (bad) jae js pop fildll jne popfq ds adc adc xlat decl neg sub adc (bad) (bad) mov (bad) lret movabs imul shll jne sbb pop mov cltd ss rex.W rex.RB ficomp (bad) out cld (bad) add rex.WB rorb repz jb (bad) idivl lahf js callq jbe mov adc (bad) jmpq (bad) add out fldl (bad) xor jns or mov add mov (bad) xor pushq loope rex.WX add jmp xchg insl out (bad) add lods pop mov rcrl mov cmp and cmpsl lods movsl rex.X or (bad) pop pop (bad) in (bad) sti fnsave mov adc add add mov lea (bad) lods and leaveq (bad) mov orb xor fs cmc jnp mov jg jp xchg out (bad) test (bad) mov xchg jrcxz mov popfq xor and or loope xor sbb mov sub rex.WRX jae mov rex rex.B rex.RX (bad) (bad) pushq cmpsb pop lods jnp xchg rex.WRX sahf (bad) adc xchg jns outsb out cli fcomi psubusw stc adc sub pop in pushq outsb jg int3 or push gs js in xchg and rex.W and divl callq jg xor (bad) mov movsb clc (bad) push rex.WXB pushq mov jbe pop jle push lea movsl adc loop (bad) jbe std js insl rex.WRX xchg (bad) add add push out jmp imul int pop fildll stos (bad) vsubpd and rex.WRXB retq std (bad) jae out movq movabs xchg and mov sbb jae es xchg (bad) jns cmpsl jl xor fsubp mov (bad) callq pop rex.XB ficomp cmp rex.RB add pop insb or js movabs jmp cmpb jl pop pushq not rex.WR pop ds jb push (bad) jno nop jle pop rex.WR or adc decl (bad) push shll and retq sbb mov jge lock fdivrs (bad) mov test sub fistpl repnz (bad) adc (bad) addr32 rex.WB xchg bnd cmp pop insb add (bad) popfq sbb in or mov jno out std insl mov je push cmc xor jns and pushq add (bad) pushq add mov (bad) lods jbe add shl add ja sub retq mov jg push loop lahf (bad) in add jmp movabs jle scas enterq mov sbb add xchg rex.WXB and enterq sub cmp push lock rex.RXB rex.RX int loop mov (bad) loope cmp stos (bad) (bad) leaveq (bad) sbb xchg add ja push in push fsubl mov (bad) data16 pop jg in stos iret movabs lods (bad) int3 rolb (bad) (bad) gs push xchg lea adcq jge cli cltd jg (bad) xor xlat sbb or add pop (bad) jae jle leaveq stc fwait sub ror std retq (bad) xchg insb cmpl pop clc cmpsl outsb lahf (bad) movsl je or xchg (bad) (bad) add lret (bad) int3 stos je rex.WRB pop (bad) orl cltd js rex.RB andl mov add movabs (bad) jl pushq shlb add out add xor stc rex.RXB cmc lea jo (bad) (bad) jg and rex.R xor std (bad) cmp int (bad) fcmovnu jp or mov jge (bad) sarb rex.WR fs movabs xchg loop fmull stos movsl (bad) int adc and adc push and fild push sub loopne jle jmp sbb rex.R adc xchg jrcxz sub es or ss (bad) mov in (bad) pop jnp int3 (bad) pop stc (bad) rex.WXB je popfq pop sarl pop (bad) rex.W rex.WRXB lahf jmpq or mov fisubr mov scas adc retq jb jnp jl fistpll cmpsb data16 and push push rcl stos repnz (bad) push jb pushq mov ss mov sbb sahf sbb (bad) (bad) xor rex.RX jbe retq cmp sub sbb (bad) pushq or xchg rex.WXB icebp mov adc push inc and rex.WRX (bad) pop mov jp xchg add leaveq mov outsb stc mov add fldenv in or stc xchg xor stos popfq add (bad) cltd int iret movabs js pop adc cmc push xor lahf push pop xchg and test fdivl add lock add sbb and callq (bad) sbb (bad) xchg push rex xchg roll fldt fs cs cmp in mov jrcxz lods (bad) cld rorl leaveq in jno mov or jg int lea xchg add rex.RB add jb mov jl add cltd in add add adc es lret out sub and fwait xlat adc push rex.RX icebp jg movb (bad) rex.WRXB add fldl sbb (bad) cwtl mov sbb (bad) leaveq pushq test jle and add xchg rol jle mov cmp jae push mov nop rex.WB sbb push sbb rex.B in adc rex.WX scas loope jbe jne pop sahf and jb xchg rcl sub popfq adc mov pushq push mov mov rex.R xchg and sub (bad) in (bad) hlt mov push push (bad) xchg xchg leaveq cmp mov jb (bad) (bad) fnstenv rex.RB pop imul insl retq add shrl (bad) mov sub adc xchg hlt (bad) repnz push rex jae je in pushfq mov popfq sub adc mov pop lret rcr out imul fidivr insl sub jmp jl jmp jo outsb sbb mov rex.R fwait mov rex.WXB mov callq in fdivrs gs jl (bad) (bad) lods movslq (bad) (bad) outsb movb lcall xchg push insl sbb push movabs (bad) push xchg jle fldcw icebp lock (bad) push jnp adc movl (bad) lock pop adc cltd in leaveq rex.RXB add add popfq out in rex.WRXB (bad) and jge (bad) rex.WX rex.XB (bad) cwtl and cmpl xor out outsb cld jg xchg cmpsb hlt jg jge add (bad) (bad) fisubrl outsb sti in jp movslq xchg mov imul jns loop scas sbbl outsb ficoml not rex.W sbb stc or sbb jg insb rex.WRB fpatan leaveq mov shrb pop jo mov (bad) retq xor (bad) enterq test push (bad) imul jp rex.XB and mov (bad) jle (bad) callq push xlat fdivrs adc sbb out mov rex.WX push (bad) (bad) xor imul mov fnstsw (bad) es xlat pop callq clc jl cmc jl jb (bad) (bad) xor mov and stc (bad) rex.RXB rex.B jno jge out xchg je mov push loopne addr32 movsb subl sbb (bad) or pop mov movsb jmp movslq xchg rex.RXB mov cmc (bad) fnstsw gs pop add clc sub (bad) or js push scas retq jno fistpll jge imul hlt es leaveq jmpq lods movsl jle pushfq xor notl (bad) (bad) sub fwait cmp (bad) cmp popfq push frstor fldcw (bad) fs xlat (bad) xor (bad) adc fidivl int mov push repnz mov movabs (bad) lods stos cmp fldenv ds (bad) cmp (bad) psubd nop cmp rex.WRX cmp stos movsb (bad) hlt (bad) (bad) fsubl idivb fisttpl rex.WXB lea (bad) retq je (bad) jmpq rorl test add sbbl add mov cmp iret outsl (bad) (bad) divb jnp movabs movabs cmpsb iret out add loopne cmp (bad) lods or (bad) callq movabs mov xchg push or rcrl mov mov retq roll adc outsb pop movslq or xchg movsl adc rex.RXB mov adc (bad) xchg and (bad) pop adc mov imul mov addr32 (bad) fadd xor jnp add jg xor stos movslq add lods test xchg xchg add and rex.R cltd pop add out hlt xchg rcr sbb retq (bad) mov addl and lock jle (bad) iret add pop and add scas adc xchg loop (bad) pop or int add pop (bad) iret mov adc xchg push (bad) sarl mov jmpq stos mov outsb and adc jle (bad) rex.WXB rex.WRB mov (bad) pop jl (bad) mov or movabs sbb pop push or and xor and enterq jl cld xchg pop (bad) mov repz mov ss ficompl outsb push js movsb pop jns add adc sti sub lods or add and pop jne (bad) xchg insb jb iret mov (bad) lret add loopne pop add mov sti cs mov divl fs pushq xor jne cmc rex.WX jnp rex.WRXB std (bad) mov add cs int pop iret push (bad) je insb orb fcomp sahf cmp sbb leaveq cltd add add rex.B movabs callq pop cltd mov mov sti add lahf movsl movsb fsubr add push cmpsb mov add clc xchg retq (bad) (bad) jb sub (bad) jg mov push jle pushfq (bad) mov push in fnstsw out jb retq mov adc mov mov mov rex.X in scas jno or (bad) xchg pushq adc outsl mov pop icebp or jg xor pop int (bad) jo lret and xchg (bad) ds jp xchg (bad) scas out (bad) jmp pop add rex.R jno,pt cmc je test cmp (bad) iret jo pushq stc scas (bad) rex.WB retq pop pop mov jnp jbe jle jno add outsl mov mov in jo orb shll fnsave addr32 (bad) ss (bad) repnz mov mov loope test jrcxz cld fs jnp mov adc (bad) jnp pop clc or nop fs pop sbb rex.WRX push lods loopne cmc sti rex.RXB ss sub icebp xlat push cli ss fdivrs jg imul (bad) repz xor xchg repnz add mov mov ja (bad) mov mov jle xchg and push (bad) mov jp cli jbe js (bad) rex.WB repnz xchg (bad) lahf sub or push jne rolb mov fdivl lret xchg mov out repnz sti std lret cs shrl rcrl (bad) mov (bad) rex.R rex.R and insl cmp xlat (bad) lock mov (bad) jne sub pop fisttpl test and cmp xor and cmpsl lret stos sbb mov (bad) fbstp or xchg jne mov mov xlat popfq cld fdivrs jl rex.X add fcmovnbe jl imul int3 mov push (bad) push pop (bad) cmp ljmp sbb scas in adc sub stos push scas (bad) rex.WR sub xchg lods jg xchg xchg fwait cmp callq or int imul sbb (bad) movslq cmpsb out mov out jrcxz test popfq out and xchg and lret loopne sti iret (bad) sbb rex.X (bad) cli (bad) in mov and fbstp (bad) push jg (bad) jno loop out lods xor (bad) adc sub pop retq (bad) mov and mov and mov pop (bad) lea xor std leaveq and mov and rex.XB js (bad) or rex.X test pop sub or test scas mov mov mov mov mov mov (bad) lods (bad) nop fidivl jmp xorl nop ficomp (bad) (bad) outsb retq rex.WR (bad) (bad) (bad) and lret cmp lods rex.WRX retq mov jge add (bad) xor (bad) cld (bad) je scas (bad) xchg (bad) (bad) jge xchg pop mov cwtl rex.WRB ds (bad) fdiv int3 jb loop add outsb cs lret imul outsb push (bad) cmp insl out jl mov out insl cmp push clc decl mov jb insl or jb cmpsl mov and pop pushq mov (bad) (bad) rex.RXB pushq pop stos and sbb xor add int3 loop ja pop jbe cmp movsl cmp jb or stos outsb nop rcl mov (bad) movabs jno adc xor mov sbb fadds js mov add jb (bad) push (bad) mov (bad) test cmpsl jbe xor (bad) xchg fsts lods jnp es add push jae mov mov mov cmp leaveq xchg sbb mov cld mov movabs callq (bad) loope (bad) scas repz fwait pop or sbb jne mov scas lock (bad) rex.RXB and rex.B outsl mov xchg cmp or (bad) pushq insl (bad) rex.R adc push and xor (bad) jbe sbb rex.WB test push cld rex.WB imul out mov xor (bad) rex.R outsl clc add sbb sub xchg xor sbb adc jg mov sbb sub mov fwait (bad) push rex.WX cld lahf sub sbb add jns (bad) out rex.WXB add (bad) xor and popfq (bad) jle movsl mov rex.X and sub add retq (bad) (bad) (bad) jno stos hlt loope rex.WRXB xor lods add clc cli add push sub test (bad) xchg jb and (bad) mov fs (bad) jg jno (bad) fiadd add (bad) (bad) mov jp rorl in insl lods out (bad) lret (bad) mov fnop shrl out and jne pushq mov (bad) push nop cwtl mov jmpq add retq (bad) pop xchg (bad) in add callq cmp sbb loopne repnz (bad) scas jg rex.WRB imul cmp fidivrl scas in rex.RXB nop rex.RXB lods loop jrcxz rex.RX xchg add sub incb lret mov rex.WXB (bad) mov movabs add (bad) stos nop add fcomip int rex.RB mov outsb add mov pop lea rex.B out jno (bad) incb iret or sbb (bad) sub (bad) es mov rex.XB jle test mov and sar movabs and outsb sub (bad) add (bad) jbe mov stc add mov int3 scas xchg mov jno or jb,pt mov jb ficom jbe mov ja mov roll xchg mov jnp notl add in cmpsb loopne mov retq add retq (bad) mov insb (bad) rex.XB leaveq mov stos mov imul sub adc enterq rex.RX push scas je add and rex.WRB xor xchg mov pushq int3 (bad) mov pop xchg or movslq (bad) cwtl mov jp rex.R rex.WRXB incb mov xchg jle mov cwtl lods xchg sahf xor rex.WB pushq jg je incb add lret out jle sub push incb add cmc rcr xor rex.B add push (bad) mov cmc (bad) add adc insl sbbl sbb mov rex.WX xlat in out cli scas movsb out (bad) add adc cmp adc rex.WR cmp test (bad) fisub orl scas imul pop (bad) or cmp sub and test (bad) pop cmpsl (bad) or cmc movsb rex.RX pop fs adc (bad) fwait cmc mov mov movabs pop xchg cmpsb sub (bad) jge mov rex.W repz ja and (bad) retq cmpsl sahf cmpl fldl cmp popfq jmpq int3 insb mov pop jbe movabs movabs sahf scas xor (bad) jnp cltd mov and cli push movslq repnz fcom loope sbb jne sahf repnz mov mov out push cmp movb outsb jmpq insl xchg cs jl jp xchg cli add mov scas and jno mov cld je adc adc mov mov and mov enterq shlb xchg insl pop scas lods cmp callq mov scas jge cmc xlat add push (bad) sub jae and cld fisubrl pop sub std jle xchg (bad) andb mov popq xchg (bad) out rex.RB pop sti ror pop iret fstpl movabs fs pushfq cmp mov pop mov vmread callq cmp xor test (bad) jl sub or rcrl jl mov push sbb adc (bad) and sahf loopne push xor rol je popfq (bad) lods (bad) scas pop add add cmp test jp jo and sub cmp (bad) jns movsb cmp scas sub repnz movsb adc (bad) cwtl outsl pop adc out xchg xlat xor (bad) jnp xorl test (bad) scas and callq (bad) jnp push xchg mov scas leaveq xchg int3 jbe mov mov mov subl out sbb mov (bad) jl mov movsb (bad) lea sub sbb (bad) mov sar cmpsl out fnop cmc loope popfq outsb es jmpq (bad) xchg retq jg ja sub scas sahf fldt fildll push and nop (bad) rcrl and push mov (bad) lcall mov jle mov fs fnstsw mov rex.W add push jmp (bad) add in mov jge and adc fwait mov pop subl cmpsb insl add ja fnstsw nop (bad) rex.WX fs mov rex.XB mov jmp and out mov mov rex.WX rex.W sti rex.WRXB or (bad) mov in jg (bad) negl insl movsb sarb mov cmp add jmp ja pop cmpsl callq pop orb data16 (bad) jge mov cld repz jmp pop sub mov rex.X rex.R stos loop je add adc in ja in cmp fdivrp stc (bad) (bad) (bad) add callq mov sub and add mov jns mov pop out add add xchg shrl jl mov rex sbb and push xchg ja sarb loop incb (bad) push (bad) or fiadd loopne rorl (bad) mov xchg bnd sbb movsl enterq clc or loope xor rex.R test div jnp cwtl retq sub mov sub add push mov push (bad) movl add rex.WRXB or rex.XB jae lahf icebp lea (bad) (bad) rcll iret rex.R jp cmpl fs (bad) cmpsb jle test mov movabs jmp (bad) and (bad) (bad) adc std mov (bad) and lock pushfq pop (bad) (bad) pop (bad) jg xor add loop subl ss out xor rex.WRXB rex (bad) pop jnp movabs rex.WRX in out addb insb and sbbb pop sti xchg lods icebp pop movsl cmpsl sti subl pop mov jbe (bad) xchg mov mov jg (bad) add (bad) sbb jl pop jg test sub (bad) jno push push rex.RXB jrcxz (bad) and xor xchg int adc cmp adc out jmpq rex.W rex.WRX mov callq (bad) fwait push xchg repz iret jg rex.WRB cmp add jnp jb mov and ds mov cmpsb xchg xchg scas cs in movabs cli imulb fidivrl jg test add xchg mov iret cltd pop sbb cld mov lods and (bad) adc stos popfq mov int adcl adc xor push je std and mov xor movsl rex.B in pop mov (bad) jb je (bad) ja sbb sbb (bad) nop jle xchg cmp adc in sub sub (bad) push ja (bad) xchg fs push rex.WRX fsubrl test jmpq outsb jl movslq xor mov leaveq int3 (bad) or (bad) jg (bad) push lahf outsl sub or push jle iret cmpsb (bad) jne or sti add lods pop mov (bad) loop movslq jnp mov fs xor mov add (bad) (bad) je (bad) (bad) or xchg pop or add xchg cwtl rex.WRXB jl (bad) lahf ss (bad) es jb mov sbb add (bad) jle pop andl or sbb test (bad) xchg lahf movsb pushq add mov loope notl std jmp popfq add mov imul and imulb pop cmpsb and xchg xchg xchg or enterq movabs rex rex.X sub jge mov sbb or (bad) jle mov jb cmp or rex.WXB xchg imul rex.W (bad) add in mov sub push xchg fldcw and (bad) mov sbb (bad) push outsb scas pushfq ja xor xor xchg jb add imul pop insb shrl in ficom add js jae nop cmp xor lret jp (bad) movsl imul es cli fscale push mov lahf lock cli xor jnp rex.R roll callq mov stos mov and cmp fist sub adc sub (bad) mov (bad) cmp xchg cld data16 in insl (bad) ja (bad) lods jrcxz jl hlt cmp ficoml movabs pop (bad) sub scas add std rex.W mov (bad) fidivr xchg cmp (bad) int add (bad) cli add mov (bad) (bad) cld xor sti add (bad) sahf mov (bad) and add sarl adc in (bad) rex.WRX push xchg xor rcr jne movsb cld jle add jp pop add rex.X (bad) rex.WRXB adc (bad) stc add pop jl (bad) pushfq stos (bad) cmp and pop jg cmovs cltd push mov mov jns lea and mov or scas add rex.RX adc add xchg stos cld push add mov or shll jp pop add sti mov rex.B (bad) sub add cmp outsb fdivl add (bad) (bad) cmp shrl cmp leaveq sahf movsb ja mov js add int3 rex.WRX retq and (bad) ds add lods (bad) rex.WB (bad) push rex.WX in mov movsb cmp movslq fiaddl shll xchg jle rex.WB mov (bad) callq stc (bad) mov jp fs add shrl mov (bad) in js mov out jl (bad) andb (bad) mov fwait jno add lea (bad) jae out (bad) (bad) sti jp clc xchg scas out rex.WRXB addr32 jns lret in test sbb fs addb test mov sub mov sahf pop insb jp (bad) mov rex.X add js out jle clc ja leaveq (bad) (bad) scas fiadd fsubl jno add pop in cmc movabs adc (bad) (bad) add in and cmp pop xchg (bad) (bad) idivb jl jns test xchg add scas imul (bad) xchg add movabs adc mov lods clc mov test movb and iret mov or (bad) scas or (bad) out mov mov sub fisubr sahf nopl and mov add rex.WRXB and jns pop fbstp add insb and loopne retq or sahf jle outsl stc (bad) push loope lahf in (bad) add (bad) mov pop stos in js cmp mov flds out hlt sbb add add (bad) mov push hlt mov testl xchg roll mov adc add (bad) out or nop iret ds mov push rex.W rorb adc add int (bad) pop pop repz cmpsb sub jb mov jp pop out cmp mov add add int add fistpll movabs jb (bad) shrb test rolb xchg divl mov pop adc lret rex.WXB jo push xchg scas jp sarb sub and pop jl add rex rex.RB jrcxz movabs (bad) jp out addr32 outsl nop cmpsb and cmp rex.XB jb stos (bad) mov scas mov xchg roll test jmpq adc jl adc rex.WRXB (bad) stos add fsts adc xchg add stos sub jle rex.WX outsl out add xchg adc leaveq (bad) (bad) xchg in add add test xchg add jb sub mov jge fcomip or movsb jmp add sbb pop adc pop rex.WRXB es fisttp addr32 push xchg rorb add popfq push callq jrcxz cwtl sbb mov pop lock (bad) or xchg rex.WX (bad) xlat add and mov movabs (bad) fist mov in add movsl pop (bad) insb xor xor (bad) pushq add (bad) test mov jg cmp xchg rex.RX rex.WRX rex sahf rex.WRXB movsb decb (bad) (bad) and repz jns (bad) repnz in jle scas mov jns jbe or out int3 sbb addr32 rolb (bad) xchg mov int3 cmp (bad) (bad) or jb sahf jp xchg and rex.R rex.RXB rcrl jle mov xchg in ja and loop shrb fs nop in (bad) jae adc xchg sbb outsl adc (bad) (bad) jb xchg (bad) (bad) (bad) jg movsb clc mov movabs fisttpll or adc mov mov cmpsl sarl cmc js pop cltd and jg mov xchg (bad) js leaveq jge sub (bad) mov xor adc movabs mov add (bad) (bad) fs (bad) mov rex.RX repz imul or add pushq xchg fidivr addr32 cmp rex.WRXB jle sub (bad) fadds popfq xchg cli mov rex and (bad) push xchg sahf add pop jrcxz mov and (bad) (bad) popfq (bad) sub (bad) loopne (bad) movabs cmp sbb rorb sahf pop add movabs mov adc (bad) (bad) push add rex.X out stos add and cmpsl mov xchg jb iret outsl add sbb shrl rex.WX ss jno pop xchg add (bad) movsl lods jl jle cmp (bad) fcompl or (bad) xlat movabs cmpsb sbb xchg add andb push xlat rex.XB add xor jle mov mov xlat adcl add fs add stos leaveq jno jmpq pop mov retq int3 (bad) repnz jmpq push and mov or js (bad) cltd out adc add insl xchg mov jb push jmp xlat popfq jl (bad) lods or movsl mov (bad) movabs add (bad) movsb pop mov xchg push ss test sub stc mov jrcxz add shrl rex.WRXB rex.RXB loope sub pop mov xchg mov mov adc add xchg fwait rex.WXB (bad) xor (bad) jbe int out iret jp stos mov jno cmp cmp fistpl and push and add (bad) sbb mov rex.WRB or mov push rex.XB lods movb jmpq (bad) xor and (bad) pop jge (bad) rex.X scas add (bad) add xor retq repnz (bad) fstl add shll mov (bad) jle (bad) (bad) rex.W add icebp (bad) stos clc movabs popfq sub cmpsb lahf jp jrcxz loopne xlat jge rex.WX jmpq rclb (bad) repz xor pop rex.R pushq push lahf repnz sub xor stos rex repz (bad) stc movabs cmc cmp sub fiadd iret (bad) (bad) clc jle adc jg sahf push or mov cmp (bad) cmp add cmp jne cld (bad) pop add mov jmp mov pop loopne rex.WRXB push rcl jmpq fiadd out test mov rex.X rex.WX jmp and (bad) jne mov add ror add cmp push fmuls rex.RXB xchg xchg retq shlb add rex.WRB rex.R in jb cld ja lods (bad) or pop cmp jmpq rex.WRX jnp lods push jle push fistp xchg out lods mov out iret xor and jne repz adc lahf mov and (bad) add rex.R faddl adc (bad) adc mov jnp add (bad) enterq test mov (bad) (bad) jmpq imul or cltd xchg jg (bad) cmp fistp jne testl retq sbb (bad) mov jge mov scas sti iret xchg scas push sahf faddl sub sub mov mov adc or retq incl or fdivr loop pushq xchg jo (bad) push (bad) pop notb sub jb insl cs lods lock or sti cs xchg sub mov cmp jns imul pushfq rex.WR retq lods sub jle movsb mov push int3 add lea push (bad) jge or mov (bad) xchg xor iret mov mov cltd mov mov lods cs jbe test (bad) mov mov jns pushq jns and (bad) adc outsl sti test test fs (bad) (bad) rex.WXB ja mov or (bad) jo xlat (bad) (bad) test jno mov (bad) callq rex.WB sbb cmp pop (bad) cmp xchg shrl pop (bad) pop and (bad) mov jno add ror (bad) jae (bad) rex.WRB js (bad) (bad) rex.RX mov (bad) (bad) pop pop add (bad) loope (bad) in callq pop pushq test pop data16 divb push sarb outsb (bad) (bad) hlt (bad) shl (bad) adc outsb stos jp (bad) test rex.WRB jg cmpsb pop xchg xor add lcall xor (bad) jb mov cmpl insl (bad) add sub sarl fwait cltd sbb rex.WR (bad) jl sub cmp and jmpq push insl (bad) (bad) movsb xchg (bad) mov jl (bad) sbb lock mov jae push repz mov (bad) js jb repnz pop add fbstp hlt or xor sub jle cmp ss ror add jp movsl and or mov rex.WRB movb lea sar rex ds (bad) rex.WB mov outsl pop pop (bad) jp xor cld rex.WR cs pushq pop rcll movsb outsl rex.R (bad) or popfq cmpl clts scas sbb mov rex.RB pop (bad) add xor clc jb sbb scas or xor mov push (bad) (bad) add mov and (bad) mov hlt lea insl loop jo cmpl xor xchg mov (bad) mov xchg adc xor xorl sub rex.XB sbb pushfq cwtl mov mov rex.W (bad) xchg mov sbb test and iret es add rex.WB adc (bad) mov mov test or or add cmc out rex.RB mov adc (bad) or insl rex.RXB sbb xor rex.WXB jmp add adc jg sbbl ficomp rorb add testb and outsl and xchg callq xchg jl mov rol in rcll mov jbe (bad) or ror and out fsubl (bad) pushq mov rex.WX and cmp sub jle and mov scas icebp or addr32 xor jp pushq addl mov fstps cmp mov movabs and in cmp cmp out (bad) add jl js xchg loope jb retq sub pop or jns enterq rex.WRX (bad) cli jnp (bad) mov jle imul hlt rex.WXB fnsave icebp movsl outsb push add sti mov mov rcll jb in (bad) add push jmp xor icebp rex.WXB fildl or mov (bad) mov rex.B adc (bad) test or (bad) jl jnp (bad) sub jge xchg fcompl (bad) jb fdivp push loopne mov and xor add outsb stos retq rex.RXB xchg (bad) push add ficomp add mov jl test jns movabs es (bad) rex.RXB rex.W (bad) (bad) and stc je mov pop (bad) mov pop out add test (bad) and mov push pop je (bad) lods (bad) pop xor clc adc mov std cld scas xchg movabs (bad) loopne popfq cwtl jp cli hlt pop rex.WRXB insl (bad) mov movabs (bad) jbe (bad) fnstcw pop mov (bad) add and mov add (bad) rorl idivl jne jb mov imul add rex.WX popfq (bad) jno sub or jnp (bad) jo (bad) add pop rex.X movsl mov push sahf stos (bad) out jp jb and (bad) movl add loope sbb idivb rex.B (bad) sbb xchg add adc xchg add sbb add movabs sub insb lods add rex.WRXB rex.WRX fsubrs add (bad) jmpq cmp mov movslq jl insb push jae mov shr movsl flds sbb add (bad) scas je repz rex.RX loop (bad) add (bad) mov rex.WX pop mov movl jle mov sbb pop or sbb pop fadds mov cmpsl ficom int (bad) out xchg add jo rex.WB (bad) mov mov (bad) (bad) rex.XB adc (bad) xchg outsb cmpsl pop xchg add cmp push rex.WB sbb imul lods (bad) cmp add adc add (bad) cld (bad) cli or movabs fmul jb cmpsb (bad) movslq loop (bad) sbb cwtl mov mov and adc (bad) cld xchg rolb xlat lods add stos rex.WX rex.WB fidiv movsb and xchg push add hlt and pop jg push iret (bad) sbb mov (bad) cwtl rex.WX jne in pop jae xor jg sbb add rex.RXB push add loop es cli repz mov add in xchg (bad) xor cmp xchg pop rex.X jb xor rex.WXB xorb es (bad) incl (bad) clc add xchg icebp cmp add lret loop adc jp (bad) xchg lods rex.RB cltd lret xlat (bad) cmpsb pop jp fsubrs (bad) rex.W rex.WRB (bad) imulb out es jle mov cmp rex.RXB or jns in or and mov lods (bad) (bad) jbe stos mov xor xchg and mov add xchg rex.RB rex.WRXB hlt and jb adc (bad) add xchg (bad) movslq stc leaveq jbe push movabs mov (bad) sti iret (bad) rex.W test cld outsb out mov add mov jle sbb (bad) xchg outsb lock mov mov xor adc jbe mov or fbld movabs sub imul icebp adc cld test pop or adc rex.WR adc (bad) imul jb (bad) mov add rex.WX hlt (bad) pop stos xchg adc (bad) imul data16 mov in iret mov jg mov mov mov test insl xor xlat sbb sarb cwtl add xor mov rex.WRX rex.WRX rex.WXB xchg or xchg jg outsl mov insl pop rex.WB add scas push jnp and jl mov fsubl in (bad) outsb sti and pushq cmp leaveq jge rex.WB stos sti jg test jrcxz and xchg int3 xlat (bad) push lret retq xor push lock jge movslq (bad) pushfq rex.WRX rex.R js addr32 cmp test movslq jmp jbe pushq xchg add or adc data16 outsl push test jbe jmp pushq data16 retq testl fild xchg lcall rex outsl rex rex.R adc jne ja cld lret retq sbb adcl add push cmp jbe cmp add mov xchg insb fidivr sahf sbb rex.WRB (bad) movabs adc std rex.RX (bad) xor loop mov jo pop (bad) out imul je pop sub jmp js xor jae (bad) push or xchg xor sub jne (bad) leaveq pop (bad) js faddp sub ds sbb jne movabs rex.RXB fmul int (bad) xor (bad) mov push jae rclb insl cmp cmc pop pop add jo rex.WX xchg pop hlt scas (bad) movsb xor xor lods cmp (bad) jle mov (bad) (bad) movabs xchg xchg mov test lods in loopne push decb js sbb mov adcl xchg es cmc (bad) js (bad) jb push addr32 sub mov jbe callq (bad) ss shll cltd outsl stos (bad) (bad) divl xchg enterq ja mov jge lahf in or lahf faddl loop sbb (bad) mov jge (bad) outsl xlat retq fldl imul jmp scas in add xor movabs push addr32 cmp add lret test insb add rex.WXB add outsl cmp push iret mov fstl xor rex.W enterq jp imul cmc add int (bad) (bad) xor rorl lahf xor (bad) rex.RXB or add or (bad) fwait int3 retq iret ficom mov (bad) fistpll jl push insl fs (bad) rex.RX in cmp ds movabs movabs pop (bad) pop fidiv add mov pushq (bad) rex js (bad) jge jg cmp jle fldcw pop test sarb and mov pushq sub fsts leaveq cli sbb lods cmp lahf (bad) pop mov jrcxz push (bad) je xor push jmp movabs test or outsl rex.WRXB jp and mov insb leaveq mov (bad) sbb lret adc push rcrb fistpll repz jle pop jle sbb mov push addl in or xchg add sbb mov js (bad) sub es xchg mov and adc pop adc pop and and (bad) (bad) ja rex.WXB fiaddl in cs fwait (bad) mov pop sub in sub mov (bad) repnz fidivr jl imull lods adc rex.XB and add clc sub (bad) fldenv rex.WRB sbb rex.RXB sahf jo int jl (bad) pop rex.WX fcoml xchg leaveq jmp push (bad) push (bad) (bad) movsb (bad) jne jbe (bad) jb (bad) ror rex.WB rex.W xchg pop xchg fmulp clc cld repnz retq rex.RB sbb mov push (bad) mov imulb rex.B js adc fildll cld in adc push lahf test jrcxz and outsl mov pop cmp mov rex.RB repz in xor rex.R outsb jbe pushq out movsl ss lahf rex insl sbb jnp pop (bad) rex.WRB (bad) cmpsb cmpsb icebp in (bad) fldl sarl rex.XB (bad) mov scas lret cmp push outsl push (bad) fistp retq (bad) mov add cmp jle sub hlt (bad) (bad) and mov fnstenv lods xor stos or sub rex.WB cmc jbe js xchg sbb iret pop pop xlat adc movsb xor jae adc out sahf mov mov enterq xor loope insl mov ror mov mov cmp xor out imul je imul pop (bad) xor mov test mov (bad) pop stos rex.RXB (bad) jnp jae jl xor or cmp rex.WX xchg test stos cmpsb xor jp fcmovbe (bad) and cmp (bad) lret jl and rex.WRX adc cmp jp adc jae adc pushq jb retq mov adc pop pop pop cmp rcll ffreep sub or faddl mov cmpsb decq enterq cli iret and cmp lret jl (bad) jl pushq outsl rex.WRX ja es xlat in scas scas cmpsl sub movslq icebp push outsl xor jno add add mov mov cli nop jg scas int3 fiaddl pushq (bad) (bad) sar cmp pushfq rex.X add mov add rex.WRX cmpsb loop lahf rex.RXB mov js js rex.RX mov adc jmpq jrcxz retq test xor mov adc mov leaveq or std fs rex.WRXB in out push xchg sbb movsl (bad) jae xchg sbb outsb push clc add cmpsl add insb (bad) sub popfq and cs mov cltd xor cld sbb jg or (bad) (bad) in jnp fsubrs add int3 (bad) out movsb (bad) jb mov insb ss (bad) jbe (bad) jno add ja jrcxz push leaveq mov gs add out mov push or xlat sbb cmp mov cwtl (bad) add gs fsubr sbb add or cmp pushq movsb sti cwtl decb mov rex.RX outsl es add sbb rex.XB jg (bad) stc mov scas adc cmpsl add xor ffree fs cwtl lea pop cmpb mov add xchg cs push (bad) cli jb xchg or (bad) movnti sbb (bad) movsl callq mov add clc cmpsl sub sub mov mov cmp xor xchg lret (bad) rex jge lods push xchg loopne rex jb mov add mov adc (bad) add push rex.WRB (bad) in add movabs loopne push lock rex.WRB pushq mov add cs pushfq xchg rex.X rex.XB and push mov cmc xor movsb mov jp (bad) data16 pop sub add fisttpl jle stos cmpsl (bad) mov in xchg pop add (bad) xor xchg sub shll mov (bad) jg push sub mov and mov adcb clc pop outsl xor adc sub add fldenv lret (bad) rcrl push and outsl cmp gs xor xor out (bad) push je mov fiaddl (bad) jmpw push add ja stc add (bad) jb add movabs add mov cmp jg cwtl jno lock mov push sbb add mov rex.WX loop jns push (bad) pushq (bad) pushq movsl mov add lods hlt jb (bad) cmp xor mov xor pop stos clc cwtl jl movsl hlt cmp rex.RB mov (bad) mov jno add pop rex.WXB movslq rex.XB rex.R mov addr32 xchg cmp pushq sti rex.B cmc mov mov xor iret test (bad) jg add pop loopne je movb (bad) and mov add lods and adc (bad) add rex.B (bad) lahf roll mov retq mov and jnp (bad) addr32 insb (bad) leaveq in out int js or xorl test cmp mov jnp in adc push movabs mov test xchg mov (bad) retq addl (bad) (bad) out xchg fs cmp movabs add sbb and jne repnz mov sbb jl pop (bad) (bad) movslq xchg mov push add xor and and (bad) mov rolb inc sbb rex.WRXB out in ljmp pushq (bad) jo cmp (bad) pushq (bad) mov lahf (bad) out push mov outsl sbb movabs out sti jo rex scas fdivs xchg (bad) rcl xchg leaveq incl adcl retq sub mov jo jbe rex.R rex.XB lock int3 adc xchg shrb rex.RX rex.WRX mov scas and and add rex.X adc adc xor add sub jno subb add or xchg rex.XB push rex.WRX cmpsb loop js je ja retq insb cmpb test rex.X xor and xor xor and out pop lret or fs in retq rex pop mov push loopne add rex.WRX imul (bad) mov push ds divb lods jnp fwait rex.WRX lahf (bad) jle rex.WB xor int3 add retq loope idivb mov mov insl or fs scas rex.X cmp retq xchg mov fisubrl mov mov mov adc (bad) mov outsb adc xchg rex.RB and or rex.WRXB fs or xor xor retq (bad) jo jle add lods mov add rex.WX movabs retq push repnz push in incb jno push jmp xor sub add enterq hlt mov xor add fxrstor insw mov jge test iret std and add push jnp or and and rex.RB imul (bad) fs xchg lret xlat mov enterq rex.XB in xorl and rex.R rex.W lods push jmpq shlb sub nop sub jl repnz mov (bad) jo or pop shlb enterq push jmp jg callq sbb or xchg or jle xor rex.WRX stos mov (bad) jg xor rex.RX jle or rex.RXB test shll pushfq jb nop rex.XB xor add add (bad) out lret add je cmpsl mov jbe sahf sbb rex.WRXB decb xor ficom add rex (bad) mov jmp or add retq and jae int3 sbb (bad) or sub and out rex.R fs jl cmp or mov cmp lahf cli popq fcomip movabs adc add cmp add mov jg test lods jo xchg mov sbb int3 pushq xor ja pop pushfq retq idivl popfq stos rex.B (bad) jl (bad) cltd jb (bad) (bad) neg test sbb (bad) repz lret cmc (bad) (bad) xorl fs js jl pop mov jb sbb mov popq and adc xorl sbb test adc or sub add jo cwtl (bad) (bad) jae (bad) mov orl out jl (bad) retq (bad) add xlat (bad) test add add jo pushq xchg sub lret pop jns nop jnp add pop jb push nop js add (bad) movabs cmp pop or pop loope (bad) out iret and lret xor orl movslq loop (bad) mov mov cld fstps imul push mov scas movabs xchg cmp or (bad) add sti (bad) push xor fildl or xchg jle pop sahf leaveq xchg jg imul add ds jo movabs jbe loopne rex.RX leaveq add cmp add test outsb loopne test fldl (bad) stos fmuls mov add or mov mov pop push iret jbe jp mul add cwtl rclb rex.WXB hlt movslq add sbb (bad) sbb stos push push sarb add jp add jge mov add add rex.WRB rex.RX mov test pushfq rex.B leaveq (bad) jbe callq or fildl outsb (bad) cmc rex.XB (bad) mov fwait cmp push sbb xchg test add sti rex.WRB rex.B xor scas repnz cmpsl pop rex (bad) mov add je lock add out mov or data16 mov jle cmc adcl jg (bad) jge add add mov movabs movsl loope sbb mov mov insb mov clc push mov cltd enterq and mov fldl sbb cmpsb mov mov xor xor jle and pop add jge sbb (bad) jg and (bad) jmpq fs or out cmp es adc iret std jns add or (bad) or retq (bad) sbb insb rex.W mov frstor fwait rex.RXB rex.WRB (bad) (bad) movabs jg int3 scas (bad) add rex.RXB mov fprem push pop xorl std xchg callq sbb lods cmp rex.W jle (bad) clc xchg cmpsb add xchg jmpq (bad) outsb jno and cltd cmp cmpsb add add js mov pop (bad) (bad) or (bad) xchg mov xchg cmp rex.WXB add add (bad) stc and in retq (bad) movabs push sub mov (bad) or std pop cmp jmpq sub (bad) mov in add mov (bad) test (bad) or (bad) rex.X shll sbb testl mov rex.WX (bad) lock std mov pop in pop (bad) add mov (bad) add retq add in int3 pushq sub bswap test (bad) cmp repz leaveq (bad) (bad) outsl movabs xchg test rex jp mov insb add add (bad) imul (bad) in sbb jge js xchg cmp hlt cmpsb insl rex.RX ds cmp adc int sub out icebp (bad) pop imul rex.RXB ss adc test jnp jp mov movslq leaveq loop test rex.R rex.WRX sbb retq scas pop mov lock jg test sbb orl (bad) mov ja push xchg iret pop push xchg add or jnp mov (bad) ficoml xor shll pop jl movsb in test cs adc xchg jl lock adc mov and adcb fs add sub and (bad) and sub rex.WXB rex.WRXB mov jmp rex.R lock outsb in callq and jg push mov insb sub mov rex.XB push mov jnp in push movsb cld jbe movabs in movabs ds nop (bad) je flds ja sbb lods cmpsb vmaxpd (bad) or movabs js cmpsb and (bad) loopne negl cmp xrelease mov mov sti rex.WRX (bad) jg loope xlat (bad) (bad) add or jl adc cmc xchg adc cmp jnp movsb (bad) mov (bad) mov rex.WRXB (bad) ds cmp (bad) js popfq rex.RXB rex.X jno or mov callq outsl rex.WXB rex.RX and (bad) jle leaveq push inc mov cwtl rex.B repz mov lret lahf xor and scas test xlat pop fcomps movslq rex.RB rex.WX xchg mov (bad) jne mov cli push ss xor xchg movabs xchg fldt (bad) cltd scas movabs rex.WX jb,pt rex.RXB fwait adc add sub (bad) xor rex.WRB lods jrcxz cs popfq (bad) jb and (bad) (bad) sub add xchg cmpsl adc out sub push rex.WRXB sub pop push jmpq pushfq add fwait shlb or (bad) mov shrb pushq pop lret (bad) popfq adc fs pop es stc xchg rex.W rex.RB test (bad) cmp xor rex.WB je hlt or add and cmp and add lods jae (bad) ficomp add (bad) (bad) sbb outsb movabs jg and jb push stc mov pop (bad) add mov push (bad) push xchg add int3 jp cmc sbb pmaxub xor mov cmp jmpq pop add sub add sbb sbb cmp adc (bad) adc xchg add retq push cs (bad) sbb and add (bad) (bad) fwait pop mov insb (bad) rex.RXB or mov (bad) mov sub (bad) push pop xor xchg add (bad) mov ss icebp xorl cmp mov mov punpcklwd sti mov jns (bad) insl add (bad) mov hlt (bad) and (bad) fs jmpq sbb push rcrb mov mov mov movabs and add mov movabs lock lock mov fsub (bad) roll cmpsl jp movabs add loope xchg push outsl sbb ljmp adc add pop fmuls jns or bswap je jp jmpq adc rex.WRB mov jb pop (bad) xor xor cmp cmpsl loop add test leaveq outsl jb rex.XB insl adc xor idiv lods cmp rcrb movsb add jmp add xchg xlat lea movsl cmpsb xchg popq (bad) adc callq or mov (bad) sbb ficoml xor sub add sahf mov (bad) add rex.WRXB mov mov jle sbb jns jne xchg stc jg pushfq add add enterq (bad) and imul sub stos add icebp andl jge callw push jg xchg int3 test jge (bad) xor adcl pushq sbb xchg (bad) xchg or jg adc rex.W loopne mov and (bad) rex.RB std add stos and jrcxz sbb rex.RB cmpsl insl rex.X add push movslq rex.B in sbb mov movabs incl jle je cmp jmpq rex.WRXB stos insb add rex.WR jae add fadds pop loop sub (bad) hlt rcrl or mov or in (bad) jge jl js outsl in fidivrl (bad) jp out xor iret ja add rcrb (bad) mov jb pushfq cltd push or or rex.RX pop lea add adc (bad) and cmp retq xlat (bad) sbb (bad) adc rex.RB test add xchg in sbb mov scas and rex.X pop cmp (bad) (bad) (bad) mov xchg retq mov add rex.WRXB fcmovb cwtl add pushq sbb xchg xchg outsb add adc pop and jg (bad) in add mov cltd xchg add and icebp adc rex.B gs fisttp jb enterq sbb cmp jb cltd mull lahf or vmovdqu xor rex.B or add rex clc cmpsb pop (bad) pushq cmpsl mov add (bad) jbe or movabs cmp pop (bad) mov jo loop out mov add xchg (bad) jp push jge (bad) nop mov mov ror shlb push jmp (bad) jbe fs ds push pushq or mov add or pop add cmpsb add sub jnp jle (bad) jl xchg (bad) rex mov sub (bad) mov repnz (bad) xchg rex jge lods pop (bad) and (bad) mov stc rclb push (bad) movabs lret movsl adc sbb jg jle mov or jp test jmpq (bad) mov and adc rex.RB jmpq rcrl (bad) jbe ja jg (bad) pop callq xlat insl rex.RXB rex.WR or jle pop (bad) xor int rex.RXB mov rex mov (bad) cmp cs adc rex.X iret lods mov (bad) sbb pushq js (bad) mov addr32 jb,pn pushfq movsb add jo rex.WRXB xchg rex.B rex push insl xchg add jbe (bad) nop xchg insb pop jns je sub rex.WRB repz leaveq mov lahf adc rep movabs xchg push and rex.WB ds rclb and shll imul ror movabs (bad) cld adc retq sub (bad) or addr32 ss pushfq outsl sti in (bad) jnp sbb sbb rex.WR rex.WXB fistl xor sahf (bad) fndisi(8087 cmc movabs sbb rex push (bad) mov test mov cmpsb orl mov movabs mov (bad) (bad) add mov (bad) cmp loopne sti lea fs lods mov xor out mov enterq cmp and out repnz mov adc movabs pushq out adc movabs movslq push out sbb fidiv sub and rex.W and (bad) lahf mov (bad) (bad) push and (bad) pop adcq pushq js addr32 bnd sti xor (bad) je jnp fiaddl mov sbb out (bad) (bad) xor push jmpq retq xor sbbl rcrl push lret add loop xchg (bad) pop add or fadds in push push or (bad) (bad) and enterq maskmovq add pop xlat jle and rex.RXB jl rex.RX (bad) mov cmpsb stos jp lock or (bad) jle mov mov mov push in fsubs adc add jp add xor rex.RB decb outsl jne fs jg push cmpsb xchg jle mov fstpl test jp (bad) (bad) in jle jne sbb js movsl je (bad) insb mov or fs add cmc push mov (bad) (bad) lock push xchg (bad) mov movabs loope stos rcll jg sahf add push jbe add je std loopne push add pop adc jbe (bad) (bad) rolb mov cltd fnop movsl xchg add push rex.WB hlt mov fucom mov jp pop jns sbb fs icebp xor xchg mov ja (bad) rex.WXB rex.WRX sbb jae add push sub addr32 xchg sub mov (bad) (bad) scas mov mov mov push (bad) jno cmc jle xchg rex.WB rex.WRX lret nop pushq mov mov test ja cmpl imul jae adc fcoms mov add (bad) rex.RX adc icebp rex.WRX (bad) popfq fidivl mov and (bad) sbb sarl fs pushq jnp mov and add rex.RB mov fistl add push out (bad) mov (bad) sbb (bad) in (bad) rex.W cmp cltd fistpll jae cmp pop add (bad) (bad) out lret retq add jnp xchg sub jb jp,pt movabs jnp (bad) jb xchg jnp mov or and int (bad) xor xchg repz sub repnz jl adc mov pop xchg (bad) es mov rex.RXB lahf retq (bad) mov test push xchg lcall lock cmpsl jle (bad) pop repnz popfq fisubrl (bad) jg test test lods in ja add (bad) mov jnp xor scas mov ss (bad) xchg std cmp data16 mov rex.WX xchg pop (bad) js retq test add mov jmpq rex.XB out add xchg sbb loopne cli add (bad) movabs in (bad) movslq mov mov sub add (bad) sbb sbb xor divb adc inc add mov sub rex.WRX repz add jl rex rex.WR shlb js sti (bad) add sbb rex.R rex.XB jae add (bad) retq stos cmpsb sbbl test jl repz and jbe fadd rex.WRB test movsb mov rex.R mov mov mov cmpsl outsb sahf xchg (bad) add push not add imul and mov xchg in mov jns add stc pushq rex.WRB cmp pop sbb push add je (bad) xor and retq cmp insb stos rex rex.RXB rex.X sti out mov add mov fs xchg sub pop mov decl jbe fs adc add in (bad) loop cmpsl add (bad) add jl clc and rex.RX jrcxz push add adc iret fs testl jmp lret rorl add pop or add out rex.X rex xchg xchg xchg mov fs push loope pushq rex.B or fnstcw cs stc jle (bad) mov pop test or fwait push rex.WRXB out (bad) pop mov mov cli test (bad) insb jo pop js rex.R cld xchg (bad) (bad) xor callq push sbb sub push loope (bad) (bad) rex.XB xor sete cmpsb stos jg jb jne pushfq js xchg hlt pop retq jns ss adc (bad) pop mov (bad) mov adc mov cmp (bad) lret ss and mov out pop push jae imull jp stos or in sbb (bad) sub test rex xchg jl sub fist (bad) mov movabs (bad) (bad) cwtl add sbb or mov mov adc jbe adc push mov iret xchg lret (bad) negl mov fimul ss sbbl jl movsl test add xchg test loop enterq jg cltd movabs jo sub nop mov push xchg fistl sbb fs movsb xchg push push sub (bad) rex (bad) fsubs movabs mov jne jo (bad) shll (bad) (bad) movslq xchg xchg rcll movabs mov push rex lret outsb nop sub out lret fisubl sbb insb or cmp xor fstl push rex.XB rex.WRB sarl rex.W rex.RB and add mov lock fnstenv (bad) add out sub jmp notl mov retq lret cmp or mov rex.WXB jl (bad) rex (bad) adc xor incl cmp ss (bad) push (bad) pop jge stos jl lret nop fisubr (bad) pop sub jmp rex.R rolb (bad) (bad) mov popfq jl sub sbb scas mov jle (bad) fisubr leaveq movslq mov and jo sbb rorb rex.R lea cmpsb test add test (bad) jo leaveq or packsswb rex.WR (bad) mov leaveq movabs xchg movslq callq mov mov (bad) imul lret pop test add scas rex.WRXB pop mov sbb lahf rex.B (bad) addb callq rex.WR movsl ds add movups add sahf int3 xchg lret outsb fidiv shlb add or sbb (bad) push mov scas rex.WXB out push push mov add (bad) (bad) popq (bad) mov rex.W mov and mov and (bad) push sbb movsl add rex.RXB adc insb lret imull and (bad) mov and mov add or (bad) loop jb,pt jmpq jrcxz callq pop out pushq retq (bad) div xchg jrcxz adc sub xchg xchg mov sbb xor cmp xorq int3 movabs in lahf in cmp test xchg out scas rex fs (bad) out in sub (bad) add (bad) lret (bad) xchg stos mov lret ds sub and jne jle (bad) xchg add xchg rex.X adc (bad) (bad) jp xor (bad) cmp cmp retq gs mov js mov in adc or and xchg movabs movabs jl sub mov mov lods lret in add mov subl es int sbb rex.WXB rcr add (bad) cmpsb add mov (bad) rex.RB sbb cltd sarl cmp sbb js fwait or pop jg iret movsb gs scas lea push jmpq vcvtpd2ps rolb jg mov in mov cltd sahf add addr32 (bad) xchg cmc add mov rex.WRB addb cmp push add lret lret outsl xor pop notl add cltd cwtl lahf push cltd lods movabs shrl add (bad) jns add ja and stos xor jrcxz insb mov std mov in out out mov add imul and enterq stos (bad) adc test (bad) mov xchg (bad) (bad) nop sub xchg (bad) movsl (bad) or int3 outsl mov cmpsb add adc (bad) rex.X lret add add fnstsw loope (bad) (bad) fwait cmc js scas in lock (bad) out lods repz xor scas pop mov in jle repnz add jg fcmovne push icebp in add test movabs movabs mov sub adc insb jg test fcmovbe (bad) jg out xchg nop rex.XB mov add (bad) sarl sbb mov push jne sahf int add pushq rorb rex.W (bad) fidivrl jbe flds xor add test movabs or (bad) mov add vcvtdq2pd xor sbb add xchg addr32 pop pop mov fcmovu std addb jg insb sbb or push jg (bad) rex.W fs and je rex.WRB rex.WX sub mov push add xlat rolb (bad) (bad) mov lahf out add jno fucomip mov jns lods jmpq punpckhwd (bad) cmp pop stos (bad) (bad) xor movabs add movabs mov and xor jp xor lret callq divb add rex.X outsb pop jle sub rex.R xchg rex.B (bad) (bad) (bad) mov or pop cmpl push add rorb pushq (bad) sub cmpl add in rex.WRB mov (bad) imul sahf mov add (bad) js leaveq rex.WX imul sbb leaveq pushfq mov movsl clc (bad) insl sahf imul (bad) gs rex.X ficoml jmpq mov jl mov push or std (bad) in sahf out (bad) and (bad) jle sbb in xchg push rex.X fbld rex.R repnz mov stc mov sub xchg add test cwtl rcr js rex.X mov je (bad) out (bad) cmp add cmp sbbl mov pushq jge hlt (bad) sbb mov sbb test jae rex.R add movabs rex.RXB in callq or jp cwtl fistpll adc pushfq lret or pushq add stos insl cmp (bad) repnz jp (bad) xchg rex.WB test jg lods jb cli cltd and in out hlt stos (bad) mov xchg jp mov adc (bad) and jae movnti scas jmpq add nop (bad) movabs in sub add rex.RX sbb (bad) push js mov rex.RX jp xchg mov jns rex.WX mov rex mov and (bad) xor movabs loopne mov sahf fnstsw sbb bnd movsb jge xor add (bad) retq adc cmp (bad) (bad) mov xchg pop push or popfq or div and add subl cmp jns (bad) (bad) xor xor jmp push enterq mov movabs clc (bad) jle xor fstps sbb mov rex.RB xlat jno mov push andl mov clc rclb rex.X mov hlt retq (bad) pushq sbb scas rorb push cmp cmc jmpq (bad) jne push nop repz xor in test mov stos in (bad) pushq jg add cli xor fimull sahf scas (bad) sub (bad) cwtl and pop es test inc cmp (bad) pop sub jo adc rex.B mov xchg rorl scas fildl data16 xchg pop mull xchg or sub add mov cmp jp (bad) (bad) out rex.X data16 jp lret rex.RXB jg cld es mov (bad) lods jle jmp jl gs sar lods mov (bad) movsb (bad) sti mov cmp fwait outsb or nop add (bad) mov (bad) add movabs rex.RXB and pushq (bad) sbb fdiv adc lret orl jo loope fisubrl (bad) mov rex.WRB repnz mov push out (bad) sub mov sahf rex.R xor jb add addr32 and test fs movabs in sub (bad) jo loop outsl add cmp stos add int es fwait jno insl and andb out sbb mov push fdiv xchg jl jae bswap mov jrcxz stos pop add mov jp stos rex.WR (bad) popfq sbb mov and scas push (bad) (bad) mov xlat sbb pop cmpl repnz in add lea or jns cs leaveq outsl or add push loopne je adc in or lahf xchg rex.X pop incb sahf (bad) sbb imul push xlat jns jae jle and add add loopne je stc (bad) cmpsb cmp push cltd rex.RXB insertq std (bad) fisubl xor pop leaveq fbld rex.XB mov xchg rex in pop mov add clc gs mov fidivrl cmp je (bad) in lock xchg adc jo jrcxz movslq rcrb push (bad) jbe (bad) or mov add fwait retq fbstp (bad) iret jb pop (bad) (bad) loopne (bad) mov js jne in rex.X outsb jns cmp and fdivr adc roll rex.R pop (bad) nop sbb (bad) pushq (bad) pushq sub rex.WRB callq pushq std sbb jbe (bad) mov popfq pushq pop test movsb rex.X cmp divb xchg cmp cmpsl sbb mov rex.W shll add cmpsl (bad) sub loop pop mov mov test mov retq push xor push add xchg mov mov rex.RB rex.W test cli xchg loopne push and fistpll mov (bad) rex.W es (bad) and jl out (bad) xorl mov (bad) jp jmpq (bad) fs (bad) (bad) (bad) (bad) mov outsb out (bad) ss add add mov sar (bad) adc rex.RXB fild mov mov fwait scas lret cmp rex.RXB add stos lods (bad) rex.RB cli sub data16 mov jp pop adc mov (bad) mov scas xor stos jle rex.WXB movabs add clc jle sub mov or stos add cmp and cwtl outsl retq sbb push adc (bad) rex.W mov and out (bad) add (bad) (bad) faddl icebp (bad) sub xchg push movabs (bad) add cld pop mov add fiadd xchg rex.R jle ss mov and cmc adc cmp mov pushq sub add cmp add repnz mov jp add loope mov in sbb jns jb pop leaveq jl mov push in pop cmp mov or mov sbb add scas test (bad) lods lret pop add sub add pop or in jrcxz adc movb icebp sbb rorl add cwtl (bad) xchg cmpl and callq (bad) rex.X es jrcxz add out sub add (bad) int bt cmp out and je imul rex.WRXB add cmp jbe xchg std xchg movsb rex.RX (bad) (bad) cmp insl jg (bad) sbb and and cmpsb imul in push movsl repz js stos lahf cmc rex.W insl add jp and pop xor shlb and lods insl pop pop fistp jge pop imulb fsubrl je lods cld cwtl orl iret rex.XB bnd xor rex.WX sub xor sub (bad) sub add mov xchg mov jno and sti cmp mov in sub pop jb sti mov (bad) jnp int3 xchg (bad) (bad) fucompp adc movsl test mov (bad) fmuls incb lock jbe pop in iret jp adc shr jno callq mov lods lret rex.WB imul clc sti in hlt cmp mov callq nop cli adc enterq fidivl std (bad) lods (bad) cmp enterq pushq std add scas (bad) (bad) jbe stc mov xchg and mov add test lcall sbb jle cmp pushq sahf lret jp (bad) and adc mov imul enterq jle scas xorl mov gs (bad) (bad) adc jmpq popfq mov and sbb icebp cmp addl jle sub xor jae (bad) jp jbe (bad) jb repnz ficomp orb pop sarb sub (bad) cmpsl and (bad) movslq cwtl xlat mov shrq outsl icebp ss pushq xchg mov mov mov imul or and (bad) pushq jg rex.WB movabs xor ss jne (bad) pushq mov or xor lahf mov cmp xchg pushq (bad) adc mov jne cmp add gs (bad) sbb ja pushq mov xchg (bad) sub push pop in fisttpll (bad) movsl jg cmp lock xchg pushq outsb mov add divl push cwtl jle cmp push jp subl adc cmp clc repz (bad) js rex.RX (bad) jle cltd in (bad) jg add pop mov nop and roll iret (bad) add movabs lret jns or push rol xchg (bad) and lea loopne (bad) fildll pop sbb jge and retq xchg rex.W rex.RX rex.WXB xchg push mov loope addb sub rex.W cld mov icebp pop data16 mov push add rex.RXB cmp loop cpuid jrcxz std mov add stos es jge mov rex.WRXB sbb push cmp jrcxz lret pushq out lahf cli add xchg pop and add mov addr32 jne (bad) (bad) xchg repz or cmpsl add pop add (bad) mov (bad) mov add mov or and cwtl jle nop push sbb mov sub sbb adc mov cwtl rex.X fs push xlat adc fimul xor rex.WRB (bad) out retq fidivl sahf (bad) int3 or sub cmp jb jmp (bad) js movsl pop and push sbb sbb in rex.RB (bad) add je adc pop xchg (bad) sti (bad) push stos int3 xchg mov push (bad) mov (bad) mov cmc xchg leaveq scas jg cli and out stos jl (bad) (bad) jg pop add (bad) sbb jle movslq pushq (bad) in add mov rex.X xchg or jbe fistpl and adc mov mov jmpq pop add xor xor (bad) movsl cwtl rex.RB rex.WRXB (bad) pop pushq fidivr sbb rolb add (bad) movabs jge stos xchg sub insl xor add add sbb (bad) movabs out movabs cmp mov imul retq jbe rex.WRB (bad) sbb add and scas movabs insl test js mov rex.WB xor sti es cmp sarl (bad) imul mov rex.WXB push callq xor scas movabs and jae sbb mov testl mov (bad) (bad) jl xchg xor (bad) ja js mov (bad) and cmc or add in add mov rex.X out div xchg lods (bad) cltd xor sbb insl xor (bad) sarl mulb mov sti lret movabs fadds sub retq movslq rex.RXB pop jg insl orb fcompl pushq add (bad) imul add add in jno fdivrl sbb ss icebp sbb lret stos fnstenv jl rorb adc sub sti xchg jo rex.RX hlt fs mov mov flds shrb (bad) and xor add jl mov rex.WXB and (bad) xchg scas xor movabs mov add out xor ljmp jp fs push rex.WXB (bad) push mul mov fs rex.WRXB mov sub sbb leaveq std (bad) pushfq pop mov lret add pop cs and (bad) xchg fmulp outsb pushq rex (bad) mov out js (bad) xor adc rex.WRB xchg rol in mov in fdivs add mov clc or repz pushq jno adc (bad) jnp sub add rex add ss test cmpsl add fscale jmpq out hlt movabs jp subq out (bad) pushfq fwait iret rex.WX loopne mov jae mov push cmp or in jmpq add outsb fldt add fisttpll (bad) sar add pop pushq (bad) push xadd out and movabs cli rex.WR rex sub cmp loope fnop mov mov push add movl mov push std xor pop (bad) (bad) outsb add out rex.R push imul or cmc (bad) jl (bad) lret ficom iret mov add (bad) (bad) sbb cmc lcall out (bad) (bad) sub push (bad) xor xlat mov jae,pn loope (bad) xchg push add cmp outsb out and ficomp add sbb (bad) xchg xchg add lea jp movsb pop mov mov or sbb lock fstps sub (bad) (bad) movslq jnp sbb lcall lods jle jl (bad) out or es lea clc sahf add insl mov add xor ds or and cltd lock mov xchg test xlat xchg or pinsrw or movabs (bad) pushq mov sub jno imul lret rex.WX (bad) hlt js scas fwait add (bad) ljmp mov (bad) mov mov (bad) jg jl mov (bad) cmp lret sub mov sahf adc adc cmc add xor cli insb sub scas lods jg jp mov cmpsb sub push out jnp xor pop xchg add (bad) popfq int pushfq sub (bad) rex.WRXB fwait imull or outsb mov lock sbb add add cmp rex.WRB js mov std jg xor movabs sub imul rex.X movabs sbb callq pop jl enterq (bad) cmp add push xor jo pop (bad) pop xor mul mov and mov and std mov in lea cmp addr32 jg xchg (bad) add int insw movabs cmp lods (bad) movsl pop fidiv cmp shlb fsts adc outsl scas push cmc add (bad) rex.WR cmpsb rorb mov add jnp in mov js and out mov add jg (bad) insb movabs jb pop mov xor sub add (bad) xlat adc xchg int3 add and sarb out sub hlt add orb mov add pop jne fisttpl jae mov imul in xor sti or jae mov pop sarb hlt movsb rex.X mov test sbb cmp and mov leaveq test jg ss xchg mov cmp add jb (bad) out mov or xor add mov jo lock (bad) rex.RX add pop gs add rex.R pop mov and or (bad) mov rex.RX (bad) add push fadds roll mov stos jrcxz rex.WXB sbb pushfq (bad) stos mov mov pop xor movabs rcll add mov outsb (bad) xor jg xchg (bad) lretq and add (bad) jmpq add loope in add (bad) cwtl retq rex.WB movabs rex.WXB sub jge (bad) cwtl mov mov rex.RXB (bad) nop cmp or fcompl (bad) (bad) js test std mov js sub and rex.WRXB pushfq popfq mov loopne rex.RB sub cmp sbb rorb cmp add cwtl xchg mov movb rex.WRX lret push (bad) leaveq pop jle (bad) pop cmp xchg sar (bad) ss add in insb rex.WXB or jbe test std rex.R (bad) sbb nop rex.WRXB mov xchg jp (bad) xor pop cli push (bad) (bad) movabs nop rolb movabs (bad) gs cmpsb outsl lret sahf or add (bad) fild in jno stc mov nop add leaveq addr32 rex.RX (bad) jmpq sbb mov rex.WX cmc push jns adc xchg rex.WRX add out mov add hlt js rex.WB gs stc test mov xchg (bad) es rolb xor fs add clc rex.WX js loopne jp add xchg adc pop pxor (bad) sbb jnp mov cmpl mov fwait jbe rex.RXB lock flds xchg scas mov fisubrl loope and (bad) rex.RX clc push add cmp cli jb int3 pop mov add mov push adc xor ds rex.R or adc (bad) outsb cmp (bad) jl movb sahf outsb (bad) retq lea int (bad) (bad) rex.XB (bad) jge mov xchg (bad) ss xchg rex.W rex.WRB fs (bad) (bad) cmp adc fwait in iret nop and adc gs out jl js sub cli add retq jbe cmpsb sahf or rex.WB jge mov (bad) js xchg and (bad) (bad) jrcxz pop js movabs pop push movslq sub lahf in leaveq jrcxz movabs cmc and mov push rex and and (bad) lods mov imull lea mov xchg outsb xchg movabs insl mov pop adc rol rex jmp out movabs or imul in push pop lods mov orb add cmp mov pushq pop std jle fidivl retq add rex.WRX (bad) shll (bad) (bad) div mov (bad) pop repz push ss mov callq jle pushfq fistpl shll (bad) insl fptan gs loope or rex cltd and (bad) gs mov jle rclb adc insl fsubl ficomp out or rol int mov test pushfq mov xchg rex.W pop movabs imul rex je rex.WRX mov xchg ss cli in int mov (bad) cmpsl or lret sub jbe lret imul cmpsb retq jrcxz minps (bad) (bad) jge insl push (bad) imull pushq sarl jmpq cmc xchg and rcr test mov cmp test and xchg pop pushq in (bad) outsl jmp jbe scas mov or ds cmp int xor enterq xor int3 mov addr32 fucom hlt sbb jle xor pop gs xor outsb cmp cltd repz orl insb lods mov insl cmpsl mov mov cmp jg testb retq shrb movsl (bad) ja cmp test lahf pop negb insb scas lods xor (bad) gs sub jle movabs movabs scas loop imulb mov stos jo (bad) cwtl pop lods pop negl adc int3 sub xor scas rex.X rolb bnd (bad) jle xor iret (bad) movl jns insl rex.WR movsl ss mov (bad) rcl xor imul adc (bad) jl scas int cmp fimull jb or rex.XB es add xchg pop movabs psrlq mov js divb mov pushfq (bad) or cld xlat adc mov js sbbb movsb jno sti jo (bad) (bad) jne rex.WRB pop xchg shll add add or negl (bad) add jmp (bad) pop repz rol jge insl cmp out jl test push sbb jmpq outsl mov insl test cmp lret xor adc (bad) fstpt adc clc mov push xchg hlt pushq pushq rex.WRXB cmp rex.X movl rol rcrl adc xor jbe (bad) and lods lods fistl sub addr32 xor mov insb scas and push movabs cmc iret jb xchg mov rcrb jne add (bad) je loop test rex.WRX repnz xorl nop (bad) jmpq xchg sub rex.WXB std (bad) sub mov movabs sub sbb addr32 (bad) idivl xor rex.WRX leaveq xchg (bad) jrcxz adc mov shrb xor xchg cli imul mov adc or ror movb in xchg movsl add push mov adc or jg xchg jbe (bad) jnp bnd insb rorl (bad) out cmp (bad) sub insb jae sub out adc add xchg adc icebp jb pop rol jbe loopne (bad) pop mov jnp pop (bad) add insb pushq adc or in out sub pop outsl push cmp scas xchg mov adc (bad) insl cli (bad) and movabs add jg xchg (bad) pop (bad) jns jmpq cli jp (bad) mov out (bad) repnz xchg jno push out xor add xchg add sbb int3 (bad) cmp add (bad) cmpsl xchg (bad) std cmpl rex.WRB (bad) jbe cmp pop pmaxsw and and jmpq stos xchg mov add stc loopne mov lret xor in add xor icebp pop sbb xchg sub adc faddl js mov fnstsw cmpsb add sbb (bad) movabs jmpq (bad) out push add es rcrb mov js out and lahf andl mov nop (bad) iret loop jp rex.WX lret cmp jb cs (bad) fldpi xorb xchg sub rorl leaveq jle mov in xchg jl imul xor (bad) mov mov and pop ss insl test push ja jrcxz adc and test cwtl xchg ja fild push jl add pop out (bad) outsb sti and je jnp ffree xlat test callq in subb enterq (bad) or outsb sti pop ja insl xchg test push mov mov pushfq sti mov cmp xor pushq or (bad) iret sarb ss (bad) out movsb ljmp rex jl stc and data16 jg adc xchg or notl mov jne rex.RB fcompl xchg and pop rex.W stc sub mov push mov cmp in (bad) loop cmp sti rex.WXB mov cmp mov sub cmp mov and cs cmp jns fild jae jge pop rex.WRXB pop and push mov pushq nop data16 sub sbb xchg je add (bad) pop in jnp rex.WRB imul jnp (bad) scas sarl push int3 lods xor repz rex.WB (bad) or (bad) rex.WX sahf xchg add sbbl stos repnz repnz fdiv je mov push cltd rex.B jle (bad) mov mov add (bad) (bad) iret push mov xchg clc adc mov out push adc pop (bad) and jbe mov insl (bad) mov (bad) stos xchg mov rex.B cmpsb (bad) sbb mov add lret mov (bad) hlt imull repnz (bad) lret ss loope (bad) or popfq jb pop rep push hlt push lret callq iret add add orl pop and rex.WB (bad) mov and xor rex.RB (bad) rex.WXB rex.RB lret std imul mov push loopne jg test add pop idiv jl mov sarb in mov imul (bad) (bad) or xor (bad) movabs xchg (bad) jp je or lods int3 (bad) pop push fdivrl cmc cmp insl add rex.RB mov or fcompl or cmp xchg xor ss fistpll loop int3 (bad) (bad) jbe adc adc and mov sub retq jae mov movabs rex.R sti data16 sub or fldt imul xor mov mov outsb pop pushfq push insb rex.WRXB add retq mov sbb rorb movsb movzwl (bad) pop pop addr32 adc xor out setbe mov rex.WB or in mov stos pop lods ss rcrb outsl jbe sbb cmp leaveq cli xorw cmp (bad) std sti mov cmc sub jnp movabs (bad) rcll cmp cmc (bad) imul add and push dec lahf rex.WR adc (bad) repz cmp or push mov rex.XB pop (bad) clc xchg fisubr (bad) add mulb ror (bad) faddp js rex jbe iret lods retq rex.R imul (bad) scas out callq movslq outsl rex.XB rex.R mov mov std lock adc fstp lret pushfq out pop adc imul outsl int3 sub movsb mov jmp mov callq stos (bad) mov sub fdivl loope xchg enterq sti and loopne,pt xor add cmp jp,pn push nop icebp stos sbbl stos add sub test movabs pop js rex.X mov fs xor cmpsb stos sahf xchg xor jg movabs mov push test out mov adc (bad) jmpq (bad) cmp jrcxz lods mov je add loope add sbb loop add shll imul js (bad) fimul add add test rex.WX (bad) pop xchg pushq jp cmp add sarl lods sub add movabs insl rex jle mov (bad) nop mov out (bad) pushq jle sti jb movsl xchg pop pop add out cmpsl ds add lock fdivrp sbb insl mov rex.WB xor add jo add jmpq mov mov rex.WRX (bad) add in jmpq push add out mov (bad) push mov movslq pop in out fs sub out pushq movsl outsb test pushq pop mov (bad) (bad) sti add cmpsl mov (bad) or cmp (bad) (bad) xchg push add minps (bad) jg outsl (bad) int3 movsb add and rex.WX out fbstp adc rex.WB (bad) push insb mov (bad) and (bad) enterq cmc xchg movsl leaveq sub push (bad) jb in push callq (bad) cmp subl cwtl jrcxz cs test push jg xor add and leaveq out stos add out (bad) pushq mov fnsave pop (bad) sbb sub xchg or rex.RX mov (bad) outsb push (bad) shr add mov (bad) xchg mov adc mov sahf cmpsb jg callq (bad) add andl mov jne stos (bad) push xchg rex.RXB add (bad) ficom jo movabs rcrb (bad) push fidivrl add stos xor pop (bad) (bad) ss addl sbb fwait retq pushfq sub (bad) add push jge clc (bad) push cmp movslq rex.WRB xchg shr mov ja adc mov mov orb add mov rex.WRX idivb rex.W rex scas rex.RX in jbe lret mov add add orb lahf (bad) add pop loope ds sub push (bad) (bad) or cmp xor xchg ss insl cmp (bad) rex.RXB data16 movabs pushq jnp fwait movabs add mov add divb (bad) or (bad) stos pop xorl and stos mov adc rex.WR fisubrl rex.WRB xor xchg in fadds pushq retq sub cmp add sti loopne jp xor jrcxz decb and push mov xchg fildll mov mov (bad) mov fsubl (bad) stos cmpl in jg add repz or xor (bad) sub shlb pop lret add outsl rex.WX pushq test rex.RX xchg mov jne mov and (bad) cmc mov (bad) jle loope rorl rex.X lahf insl (bad) xor jae rex.WX rclb (bad) lahf xchg mov pop xlat or scas lret rex.RXB movsl mov cmpsl clc cmp loope (bad) (bad) mulb sti sbb js or mov or lods ss js sbb jno ds (bad) rex.B ds add (bad) push rcr xchg cmpsb add mov add push out add add (bad) negb rex.X rex.WXB pop cli xchg xchg (bad) xchg adc xor or out jb add cmp rex.WR (bad) push jb shll (bad) cmp in push mov in movabs mov test mov (bad) leaveq xchg jno movabs cmp add sbb jle scas jl (bad) pushfq jge sub and pop add jle push xchg rex.WXB fistpll xchg in (bad) (bad) movslq jmp pop add int mov xchg subl (bad) jmpq lods xchg add or pop nop jno scas loopne xlat (bad) in mov in mov int3 rex.RXB xchg rex.XB jmp xor out and adc xchg movabs out add (bad) cmpsl mov lahf stc push (bad) add add sarl sbb int3 add push addl or jl mov (bad) fnstsw jb rorl sbb fdivrl mov fnstcw outsb pushq xchg imul xchg xor add adc insb jmpq mov xlat (bad) cmp rcrb scas mov push jns lret jmp je lahf roll fstpt loope cli push rex.R outsl xor lret movabs retq cs jo movabs (bad) stos fdivp lret (bad) add int cmp sbb rcll and mov cmp add leaveq add (bad) mov mov jb pushq cmp pop jle rorb (bad) add outsb pushq xor (bad) push fdivl add jns repnz enterq sub (bad) (bad) cmc insb rex.WRX mov cmpl es add xchg rex.WRX sub add decl add jle adc ja (bad) icebp jg data16 lret pop fs movb pop mulb mov (bad) callq (bad) adc (bad) pop rex.B adc jne add int3 scas and (bad) adc push jnp mov push test jl icebp (bad) jbe stc clc and mov adc shll lea cwtl add pop pushq in pushfq jmpq repz jb xor insl xchg retq scas jle (bad) pushq sub int3 rex.RX scas adc fsubrl jbe adc xchg pushq (bad) push sbb jmpq (bad) add fwait icebp rcrl sub rex.RX retq and jle stos add decb movabs add mov or jp and lods rcrb lods test (bad) movslq or sti test cltd push jp fidivrl cld pushfq (bad) loop jo leaveq sti fwait xor mov and add pop or jb pushq (bad) (bad) sbb addr32 push test fcoml ds add add rex.WRXB rex.W rex.WB lea sub popfq xchg loopne (bad) lock (bad) ss mov adc test addr32 jle es mov out scas (bad) andl icebp sub (bad) cmp mov jle rorb and retq jbe (bad) sub add xor rex.XB divl rex.WB push jl sub lods movabs (bad) jbe push lods jrcxz add in (bad) mov movabs fisttp mov push stos push scas add idiv jg insl rolb or add (bad) adc and (bad) (bad) jle int cli (bad) lahf addl jns loopne jae jb sti or sbb iret or mov and sbb decb je (bad) mov (bad) xor divb (bad) repz mov mov add add and sub rex.R jg rex.WRB sbb js xlat insb mov (bad) xor es mov mov (bad) movabs rex.WX mov mov (bad) push jle xchg rolb sbb add and lea adc add cli add or push mov sub repz fnstsw shrl xchg (bad) xchg sub jle (bad) add add jbe mov push rolb rex.WRX cwtl add in rcrl cmp movsl mov movsb jp cmc xchg test (bad) out rex.XB sbb and mov movsb outsl faddl lahf (bad) adc gs insb mov xchg mov jb enterq mov jp test jg test rex.WR rex.WRXB rex and jl mov (bad) (bad) xor xchg pop (bad) and and mov jbe xchg rex.WRX rclb adc sahf jnp (bad) stos adc sub je,pt (bad) and sarl sbb fs mov jbe cmp movabs xchg push adc xchg mov pushq (bad) pushq (bad) js xchg rolb ss sub lahf (bad) rex.X stos sarb (bad) (bad) jb adc jbe sub movabs xchg pop test lahf sub callq adc jl rex.WRXB movsb add rex.WRXB lret cmpsb or sub (bad) addr32 push jp push rex.RX mov loop (bad) vsubss and (bad) xchg add outsb (bad) mov leaveq add je cmp (bad) stos jle push add mov xor scas sub (bad) icebp stos pop mov lret sbb mov sbb rex.WRX in sarb cli mov xchg cmc movslq pop rex.RXB add movabs in jge pushq add sub pushq jp imul pop rex.RX ljmp (bad) push sbb add sahf (bad) adc and cmp mov rex.B adc adcl and add push mov mov pushfq (bad) jns jle (bad) pop adc add push rex.WB (bad) (bad) add rex.WRX jle add lahf in xchg cs sub rex.XB or (bad) xlat cwtl add jo movabs push mov rex.WRXB rex.WR loopne add jp scas fs xchg cmp xor out (bad) mov (bad) sar add xchg (bad) mov add shr subl add adc stc rex.WRX pushfq popfq (bad) add in xchg (bad) (bad) mov loope cltd int3 (bad) xchg and xor pushq mov and push stc imul adc rorb jrcxz mov int3 (bad) movabs mov in rex es sbb out rex.X movsb fiaddl rex.RX sub jns pushq xlat scas stos in js sarw push (bad) sbb rex push (bad) rex.WXB jle js cmp and movb scas jrcxz (bad) fwait jg add ss pop cltd mov xchg stos sub mov jl cmp fcomps add ds or xchg test (bad) jmp movsb and (bad) jle push js scas stc lods or (bad) or rex.W movsb movsl in (bad) cmp imulb jae adc (bad) (bad) cmp xchg fs imul rex.WB stc xor rex.WR rex.WXB (bad) adc add cmpl cwtl and xchg and and es popfq cltd jns rex.WB stos jmp rex test add (bad) (bad) xchg divb mov rcpps mov jnp outsl (bad) je retq popfq xchg sub test shr cs (bad) sub lret rorl cmp outsb rex.R enterq jno pushq sub xchg imull rex.WB (bad) add rex.WRX or add stos mov add cwtl and pushq pushfq xor and (bad) lret mov mov jp pop mov push idivb xchg add mov flds insb push in add jae addr32 rex.B jl insl cmp xchg (bad) cmp sti bswap mov pop (bad) repz mov cmp xchg pop (bad) add rcll or sbb add jbe (bad) jmp pushq add sub (bad) xor mov loopne mov sub insl jns push sbb mov cmp sti fdivr sar sbb jp outsb mov (bad) (bad) cmp add movsb std (bad) mull (bad) (bad) test mov fwait sub jbe mov rex.WB rex.WX imul (bad) add (bad) (bad) adc add push push rcr jb fsts mov xlat mov cmp push and xchg fidivr cli rex.WRB (bad) or pop (bad) imul add retq mov xchg or push lea pushq fisubr js stos sub sbb or (bad) pop rex.WXB rex.XB or outsb add lods out jle push add insb or jmpq add outsb push lahf mov rex.WRB adc rex.RXB jb (bad) sbb pushq pop vmovmskps movsb in imul outsl (bad) rcl adc jae ss out cli and cmp test adc test jrcxz cmc pop (bad) sub out xchg leaveq imul insl cli push cmp cmp repz nop (bad) jg sub sbb js rex.WB (bad) jne out pop (bad) or (bad) jmpq cmp sub adc xchg jrcxz jl cltd cld (bad) adc sahf in cltd fadds jnp pop xor jmpq mov test es xor pop xor mov loopne (bad) pop jne and jne and pop push jmpq push jnp and lahf sub jns test popfq (bad) mov cmp mov sarb push xor jl xchg insl rex.WRB cs out sahf ss rcrl and sbb lods rex.WRX fdivl fxch cwtl ljmp cwtl sahf sbb rex (bad) xchg mov pop js mov or jl jnp adc xchg popfq lods mov push int add pop pop in xchg lret mov (bad) add cmpl lea movsb (bad) cmp add push hlt jle roll out xor (bad) out cwtl sbb push ss loop rex.WB test pop movsl paddb rex.RXB sub (bad) cmpsb clc fsubrl adcl mov retq fwait cs rex.WRX mov rex.WB cmp add and (bad) (bad) (bad) xchg callq loope addps jp shll mov sbb cs rex.XB (bad) adc hlt and add mov shl lahf pop (bad) xchg sbb jle xchg jno sti test cwtl rex.WB add and add movsl rex.RXB sub (bad) xor add mov rcr push (bad) fs fnstcw xchg (bad) in or or xchg test mov rex.WRXB xchg mov mov jp (bad) loopne mov jns movabs outsl stos xchg setbe add xor popfq mov (bad) mov cmp fidivr sub add rorl bnd pop imul movl es cs (bad) cmp insb fimull repz mov (bad) ja cmp adc cwtl xchg lock mov push outsl cmp xor sbb rex.RX movd imul xor jle xor cmp mov movabs cmc test or xchg jp (bad) imul insb (bad) sub sub mov rex.WRX sbb (bad) jne repnz add push pushfq loop pop mov jae (bad) icebp rex.W cmc (bad) flds (bad) cs (bad) adc rex.WRXB mov retq outsl js cwtl sbb fstpt jp movabs jb adc xchg push (bad) (bad) stc (bad) retq outsb push jae in (bad) (bad) adc pop or outsl sbb repz fmull mov mov loop add push xchg rex.WR ja sub add hlt addr32 xchg pushq (bad) and rex.XB rex.W test cltd rex.WRX callq rex.WB adc popfq add pushq fs push stos mov lods add cli rolb sub (bad) (bad) push jge cwtl rex pop and cmc xchg cmc movabs pop lods sub movabs mov loop xchg cmpsb sti push pushq xchg add callq add pop xor xchg add rex.R imul movsl nop rex.W mov xchg icebp std out cmp or retq fldt add push hlt mov xchg adc add ja rex xchg lock (bad) pushq sbb loop vpmaddwd (bad) (bad) adc in int jg (bad) add push hlt sbb (bad) xchg (bad) jg mov decl cmp add rex.W (bad) (bad) fmull stc lods mov mov cwtl pop sbbl (bad) jge test lock (bad) jb mov imul sbb cmp stc sbb (bad) in (bad) cmp xor push retq (bad) mov rex.WXB (bad) xor (bad) xor xchg fdivrs sti mov adc pop jmp or jo js add (bad) rex.WX add pop rex.B mov adc mov popfq out shll cli outsb and std loop xchg pushq (bad) lret adc lods out mov rex.WRX rex.RXB rex.B add (bad) test pushfq movabs in leaveq callq sar scas scas add icebp movslq fbstp int sbb mov rex.WRXB imul (bad) (bad) in mov out jmp xchg mov push rex.W jp jg jmp jbe mov out out jrcxz (bad) lods pop mov sbb push stos mov cltd pushq nop push fsubs sub lock rex.RXB or lods jbe in fildll mov xor push loope (bad) mov stc cmp vpmovmskb std jo jbe (bad) movslq enterq sub sbb (bad) cmp fstps push jge fwait movabs fbstp jmp xadd movabs movl or sub imul push xlat imulb sub and cs mov retq (bad) jge sub add mov xchg push hlt fsubrl jae jmpq es loopne loopne lcall out pushq rex.WR (bad) mov add scas movabs lods jb mov mov add nop cmp insb pop mov xor movabs icebp pop callq sub xor cmp rex.WB xorl decb (bad) jno pop lea rex (bad) mov fidivrl and add (bad) sub xchg cmc rex.WRXB jge mov add and and cmp (bad) loopne jg cmp push fstl and sub xchg cmpl fwait lods xor js out jle cmp cmp rolb ja xchg sbb push jl rex.WXB (bad) mov xchg or adc fwait popfq or jne (bad) hlt sub lea out nop add or mov in movsl adc loope pop and jl cmpsl in cmp add add or pop (bad) (bad) outsl lahf scas mov out (bad) fbstp rex.XB imul (bad) stc sub fs insl sahf sti (bad) movslq movabs cmp rex.RXB addr32 (bad) imul add pop cmpsl cmp add or int sti cmpl (bad) hlt movslq movabs xchg add movsb (bad) mov enterq pop mov fsubrs cmp xchg jno push retq rex.WRX repz lret mov lret add clc jo (bad) (bad) or jle xchg lods int sti test rex lret test add (bad) fdivr adc push add lret or popfq cmp int3 (bad) loop addr32 lahf fsubrs push add imulb (bad) out pop (bad) add imul add rex.WRB add (bad) (bad) cmp mov (bad) (bad) icebp stos out movabs (bad) rex.WRX fisubrl pushfq int3 sarl (bad) rex.R sub push pushq add pop and (bad) jne (bad) mov out xchg sahf push (bad) add jrcxz or (bad) add jge sarl cmp loop mov adc pop hlt (bad) mov mov (bad) idivl je imul insb rex.W lret add mov mov add sbb pop jge lock out lea gs (bad) rcll (bad) cwtl jg and jbe mov xchg test pushfq sbb xchg xor adc (bad) ja stc test rex.X rex jo cmp jae movl pop pushq and cmp or push adc lahf movabs mov pop (bad) cmc cltd pop xchg (bad) sbb movabs sbb add xor cltd jno lods add iret data16 mov loopne jge jno jle movsl mov jnp stos add and pop cltd test out in outsl mov add mov sti mov (bad) (bad) jrcxz sbb (bad) stc andb adc (bad) (bad) pop jle rex.WRXB cmpsb mov (bad) rex dec movabs lock jg test sub mov and jno rex.XB jl xchg movsl adc (bad) negb (bad) js cli (bad) rex.RB fs stos mov sbb adc mov sbb cmc mov loope or jb scas adc and mov (bad) pushq xor in and data16 test es and push fistp (bad) (bad) jbe add adc psubsw xchg push (bad) pop jg icebp rex.RB xor push leaveq outsb cs (bad) mov jb cld sahf cwtl fidivr jg and ss adc test (bad) cmpsl rex.XB jrcxz je pop pushq addl xchg sbb (bad) pop loope cmp (bad) cmp mov insl cmc roll cld in leaveq mov push je cmp or mov mov punpckhbw cmp and lock push jbe adc sahf nop shlb insb rex.RB jle test xchg jle pop addr32 outsb add (bad) adc xor hlt data16 add rorb stc adc (bad) xlat jg xchg xchg xchg bnd popfq sbb (bad) and (bad) clc pop mov xchg frstor addr32 movabs (bad) scas (bad) (bad) jg lods icebp mov je and or (bad) adc sub jp rex.X xchg (bad) fs sub (bad) xlat (bad) test sbb mov rex.WXB ss cmp sub mov jle repnz (bad) mov add cmp add ljmp rex.W mov jg push adc push lahf ds mov add icebp movsl push xor sbb insb push (bad) (bad) mov sub in xchg add sub cmp lea fdivs mov add (bad) xchg mov push mov add icebp and sahf stos std decl (bad) adc (bad) out xor mov mov mov cmpsb (bad) pop xor test test push sub (bad) xchg cmp outsl out adc mov loope pop add rex.WB int3 rex.WRXB in fadds rex.X xor (bad) (bad) in lahf pop rex.X jo stos sahf je movabs movabs retq gs jne clc cld rex.X rex.WB rex.WRX fwait mov add outsb jle push sub (bad) adc fsubr sub mov imul pushq cmp or pop (bad) pushq out (bad) repnz sti jp or insl (bad) mov (bad) (bad) ja mov lahf popfq cmpsl xor idivl nop lods sub repnz pushq and fcmovne and add lea (bad) jle pushq enterq (bad) jrcxz je gs pushfq lods lret (bad) leaveq (bad) pop xor push mov add sbb (bad) mov jle es rex.W outsl xor mov adc mov hlt fucom rex.WR pop fbstp push lea jne rex.XB xchg outsb adc sbbl fs hlt cmp stc jb xor add lret rorl jno int pop (bad) push cwtl cmp jg mov lahf add icebp mov test leaveq add lods rex.WRB push rcl mov (bad) push add sbb add cli jb adc test jb mov lahf and mov je movl rex.X jle rex.WR iret mov (bad) add ror mov movsb and push pop sbb jl and (bad) mov mov xchg roll pop sbb rex.WB jge mov test mov movq imul xbeginq jmp (bad) hlt pop sub (bad) cmp cmpsb (bad) movabs (bad) movabs rcrl (bad) hlt jmp mov mov test rex.WX std outsb scas loopne mov cmp shlb sbb (bad) push js mov (bad) add (bad) fs cmpsb add out mov mov mov out fisubrl (bad) pop (bad) xchg sar cmpsl sub movl pop (bad) test add repz rex.X icebp jrcxz je xor rex.WRXB insl mov mov add (bad) movzbl add lea xchg cs or stc rex.WXB xchg xchg add xor (bad) decb or sbb cld sahf xlat in cwtl mov (bad) rex.WB rex (bad) mov scas imulb jge test jp mov jbe (bad) rex.RB mov sub mov rex.WRX push scas sub add rex.XB and leaveq mov mov fidivr js sbb or rex.B shrb sarl (bad) xchg std add out cmp rex.WRX test loop fstps mov or jg jno (bad) jne adc outsb mov (bad) (bad) repz insb mov xchg lret lods lea and xor cmp mov fadds rex.WB mov cmp mov (bad) push mov fnstcw addl mov and add xchg fsubl add es movslq loop (bad) mov mov (bad) mov pop sbb cmp (bad) xchg repz mov or (bad) add cltd rex.WX cs (bad) rex.WR rex.X ds cmp adc xchg rex.WB sti movsw jle xor test (bad) mov pop je pop pop out rolb jb fdivrl rex.WB xor (bad) addr32 jg cmp (bad) (bad) (bad) rclb out add jns scas add (bad) (bad) test sbb sbb jnp (bad) retq and (bad) sbb jg fidivl jmp (bad) mov (bad) and addl mov xchg xchg and icebp sbb movabs jae mov cmpl add pop mov je rex.X add fwait enterq sub test std loopne int3 adc cmp sbb cmp jg jge add and xor je popfq or xchg add sub jno rex.X add lcall push xor (bad) xchg data16 retq sub scas sbb mulb movslq jg cmpsb decb imul add jp rex.WX sub jae roll callq sbb push stos mov rex.WB clc in and rex.WRXB ss jge es xor (bad) jbe je (bad) leaveq add cmp xchg rex.WB imul sahf lret out pop add movabs lahf adc xchg fs mov (bad) mov cmp ja push (bad) jl in pop fadds jge mov (bad) push mov pushfq jl movabs push (bad) (bad) cmpsl jrcxz add xchg cmp (bad) or (bad) scas jo out add je xchg push mov fdiv add repz and rex.W fwait leaveq (bad) mov movsb (bad) lods imul scas cli jg (bad) (bad) stos xchg mov mov in js stc lods jmpq jmpq cs out jg clc add jnp rex.R pushq mov rex.R (bad) pop je (bad) idiv (bad) jl movabs cmp jp xor retq pop jg lret lods out (bad) mov sarl je test jb adc mov and jrcxz xor fucompp addr32 sub sbb (bad) adc (bad) (bad) fs loopne fimull pop jmp setp mov push xchg pop (bad) cmpsl push cld (bad) xchg mov push retq clc (bad) pop incl xor xor xor je cmc (bad) lock test fadds stos rex.W and movabs push je push sub cmc fnstcw add jae negb rex.RB rex.WRXB rorl cld mov rex.WX or jge sbb (bad) pop jp push retq divl pop mov int3 (bad) xor imul and cmp jb movabs xchg leaveq sub fstpt mov rex.RB add (bad) (bad) cmp add (bad) jae rex.W rcrl (bad) add rex.WXB add (bad) repz xchg ss insb repnz lea xor xchg movabs and outsl jl andl mov imul mov sbb (bad) jrcxz pushq mov rex.WX adc add mov rex.R jg pop and jp adc rex.WX mov xor (bad) xchg jnp rex.W pop and add std enterq (bad) jne test int push out add (bad) scas xor cmpsb or fcmovnu jg or or jg jle (bad) and test rex.WRXB add movabs jge sub jle loope or push int or cmpl outsb (bad) jnp fldl push data16 outsb mov stc je lods rex.W std mov add or add (bad) push xchg (bad) jnp cmp imul sbb xor pushq (bad) enterq (bad) retq jp pop sub (bad) mov test lret es leaveq mov sub (bad) mov sti rex.W cs lret and loope repz xchg xor movsl shr (bad) addl mov pop add adc or mov insb adc scas loopne stos (bad) xchg xor add cmp ror mov jle cwtl gs push (bad) (bad) jge or jl iret mov fdivrp jo xchg cmp cli rex.WXB sbb mov adc push js push jg std sbb retq scas test rex.R add and in jl (bad) sbb sahf (bad) ljmp enterq cmpsb in mov hlt sbb incb pushq adc fldl jg gs jae mov sti fwait xchg (bad) add add stos roll pop add outsb jge add fildll xchg cmp (bad) cmp rex.R push cmp add je xchg jb (bad) push jl mov (bad) cmpsl rex.R repnz sahf in xor add fwait out (bad) add rex.WR xchg in xor cld sahf jmp lods cmpl jo (bad) add xchg (bad) cmc pop movntq fcmovnu or sbb push mov mov popfq lea in pop xchg js movslq sti sbb jno add movsb xchg push int3 mov (bad) rolb sub (bad) jns (bad) std (bad) or movsl rex.RB fbstp add cmp ds in lret add (bad) jae cmp es add (bad) fisubr or push imul add cmc movsl xor lods add (bad) fimull (bad) add (bad) adc (bad) or mov xchg add mov cld jo mov loopne hlt push push pop ja callq mov sub rex movabs rex.B rex.X add pop adc jle pushq jg out rex.WRB sarb punpckhwd out cmc loopne hlt sti or rex.X rex.WX jmpq test movslq (bad) cmp or lahf xchg movb or mov jnp (bad) (bad) in rex.R repz xor or or cmc cmpsb (bad) js rorl out jns pushfq scas (bad) xchg loopne mov lods add lret adc leaveq (bad) jns adc mov lods sbbl shrl xchg mov lret add push pushq rolb es cmp movabs (bad) or jns rex.WRXB leaveq push clc (bad) add jbe mov rex.WB jge mov mov pop shll (bad) mov mov rex.RX (bad) jp xchg add cmpsb jle outsb add xor in adc popfq jnp xor jnp push hlt imul movabs lods pop cmp ja sar add add or cld fmuls add retq rcll jmpq lods jae callq pop (bad) mov movabs cli adc (bad) jo in imul ja pushq mov fcompl data16 cs mov jb xchg xor mov (bad) in jmpq shlb cwtl rex.WB addr32 leaveq rex.R fs movabs rex.WX jb hlt cmp adc in add outsl rex.WRXB xorl or cmp scas (bad) js test sbb sub xor in sbb callq mov enterq movabs iret popfq or frstor jne mov jle test sbb pop jno nop (bad) (bad) mov rex.WR jl jne notb insl test xor rcrl mull fstl leaveq stc jge rex.XB jl (bad) (bad) (bad) (bad) (bad) inc pushq add std repnz rex.X (bad) push jnp stc xor cmp add or cmp fdivs gs (bad) sub in xor std (bad) jmp mov rex.RXB jrcxz add test add cmp mov jle outsb or (bad) mov add mov sub iret stos add retq (bad) pop adc nop jg jmp (bad) or hlt mov xchg mov xchg rex.WRX add lods outsl (bad) out or push lock lea (bad) pushq xor cmpsb xor rex.WXB (bad) xchg (bad) pushq sub mov popfq add test cmovne sbb add frstor imul add stos add enterq pushq add adc lret in adc cwtl sub add and (bad) pop (bad) lret add (bad) sarl mov mov stc and fldenv std rex.WX sti jae or mov rcll mov retq xchg imul mov loopne sti xchg movsl clc (bad) add lock leaveq (bad) (bad) (bad) cmpsb (bad) out or sub sbb and (bad) movl mov add int3 xchg jp pop (bad) cld rex.R pop pushq fistpll stc (bad) sub retq nop movl in mov test retq js xchg mov jl push data16 lods sub mov lods xchg jg mov jl pop mov jbe rex.RX (bad) xchg mov cmc mov pop or bnd adc and outsb imul sbb pushq xchg and xor rex.WRB cmp lods mov pop mov movabs and xchg lods (bad) clc idivb jbe sub mov rex.WRB jb adc (bad) lret rex.WR or movzwl adc jl (bad) jl in lahf add lods outsb push add rex.WRB loop (bad) sbb adcl incb (bad) in jmp adc es lcall and repnz lret jle pop scas es (bad) (bad) imulb (bad) (bad) pushq sbb rex.XB push push xlat lods mov lock gs pop mov (bad) fs clc pushfq mov adc add pop lret js movsl xchg fnstsw callq (bad) enterq add rex.WRB rex.XB rex.WX (bad) iret adc pushfq add (bad) fwait lret ss (bad) rex.WB movabs (bad) mov and pushq mov rex.RXB lret rex.WB (bad) sti add (bad) mov insb popq (bad) add pop (bad) retq sub jb loopne cmc mov movabs (bad) fsubrp jb xchg cmpsb or lods jne (bad) fcoml cmp insb (bad) lock std sub sub (bad) movslq outsl push adc out xchg xchg movslq jg pop (bad) rex.RX add fnsave add cmp jbe fstpt (bad) push mov (bad) out ss lahf cwtl add jp and (bad) mov mov mov xor movabs icebp xor add (bad) mov ss add xlat rex.RX sarl (bad) mov rex.WXB data16 fnstenv mov fidivrl jbe rex.WB gs jno cwtl jb outsl fstpl rex.RXB lahf mov adc rex.RB out cmp or pop rex.WX jns xor rex.R rex.XB pop (bad) pop lods retq movabs sbb push xor fnstcw rex.WXB push stos jp rorl rex.XB cmp add jmp (bad) lods cmpsl stc add movsl pushq or xchg clc add (bad) mov mov enterq (bad) (bad) (bad) mov add mov jnp xor (bad) sbb xor (bad) jae clc cmp rex.WRXB movsl movsb add mov xchg add and (bad) pop jge cmp loopne adc and movabs (bad) mov repnz fmuls neg gs (bad) cmc out pushfq fs xlat insl stc add mov push xor adc jl pop mov fdiv in (bad) in or xchg (bad) fist mov sub jbe xchg test mov sub add lahf push jae cwtl or sahf sub (bad) hlt out rex.WX rex.W ss or (bad) add lret mov mov insb sbb xchg push out xchg add fidivrl rorb push sub addb jp imul xor xor lea insl (bad) and hlt cmp add enterq lods rex.WXB fs cmp scas retq pushq adc rex.RXB pushq out xchg movslq jbe mov sbb jae in stos (bad) mov jbe jmpq (bad) ficomp lret and out sub jae xchg cmp jrcxz or pushfq fstl cmc mov (bad) jb je adc mov mov test sbb fmul movsb jle sbb rex.WB gs push mov push retq sbb push (bad) and (bad) fmuls jg sub fs in scas pop mov (bad) mov subb xchg movslq (bad) je test pushq sbb rcll jg jge out (bad) movabs gs in rex.WRX rex.XB rex.B rex.RX (bad) imul out push mov gs xor outsl repnz rex.WRB out lods or in push xlat cld or testl callq (bad) (bad) pop movabs sbb pop push mov jmpq mov outsb lret fidiv mov (bad) xor sbb lahf mov jl (bad) adc cltd negl in hlt sbb cwtl xchg jo jge imul fnstsw (bad) xchg push rex.WB xchg mov jp lods repz pushq mul jmp or loop or divl add push (bad) in (bad) sahf or jl pop cmp (bad) fdivs xchg (bad) jmpq pushq leaveq mov fdivl rex.RXB lret cli xchg std (bad) int3 outsb rex.W bnd mov (bad) neg mov (bad) jge and movslq (bad) notl stos sub add mov ds pop jp pop jno cmpsb out mov lods notl add lahf sahf add mov outsl movsl xchg insb jns (bad) pop lock (bad) insl (bad) adc pop stc or loop (bad) rex.WRXB rex.R jle imul repz sub fucomip add (bad) jge adc retq xor sbb mov loopne adc hlt cmp jno (bad) (bad) fisubl xchg adc and pushfq sbb gs add nop mov fldenv cmp rex.WXB ja test lock sbb rcrl outsb cmp (bad) jle jnp push mov adc add int3 movabs pop pop cs lret jns (bad) repnz fldpi xchg mov jne sbb mov cmp push lock callq mov in cmpsl scas ss pop mov xchg sbb mov pushq ror mov or lcall out rex.R or jbe jp je outsl in add jae jno lods cli xchg push pushq lods (bad) (bad) (bad) cmc mov (bad) imul lret cli (bad) rex.WR js ja add pushq jl jnp sbb outsb jl fild pop mov in jbe and rex.WR (bad) cmp pop movsl rclb movslq and sti pop (bad) in pop enterq rex.WXB rex.RX in push pop jno mov jbe xor (bad) cmc xlat insb movslq (bad) addr32 pushq fld out retq mov ja mov xor sbb movsb add cmp cmpsb xchg xchg addl pop mov test retq sub (bad) data16 es mov (bad) ja add test jle sbb setbe add fs (bad) fistp cmpsl cwtl jp enterq push mov sub rex.X add scas fiaddl add (bad) push jrcxz or lahf int mov xchg jrcxz (bad) add xchg jns mov push or (bad) xchg (bad) add clc es (bad) movabs jo retq mov loope int rex.RX out repnz (bad) cs mov rex.WXB add rex.RX rex.RB jns mov push add clc mov adc (bad) imul pushq (bad) sub leaveq rorl mov sbb xchg push add fisubrl lret xchg cmp (bad) lea rex.WX or rex.W gs cmpsb loopne icebp jge leaveq cmp stos xor sub fadds rex.RB mov fs repnz icebp jg movabs (bad) adc outsl callq add and (bad) sbb (bad) test int mov rex.RX leaveq pop jg cmc rex.WR (bad) je int rex.WB movsl jrcxz (bad) add xchg cmc mov popfq add movsb in pop subl clc mov mov mov jmpq add adc xchg (bad) rex.WX rex.WR cld (bad) mov andl sbbb or cwtl add jb imul int3 or add sbb and stc jp add movsb or sub cmpsl out xchg test adc xlat cmp sub adc jmpq movslq adc stos cmc (bad) movslq mov ja jl repnz or pop test sti andb retq jae xor jle push cmp rex.WRX adc in fmull (bad) mov jo adc pop je sbb cmp add (bad) mov (bad) rex.WXB pushfq rex.WRX scas ffreep imulb gs and push (bad) (bad) xchg (bad) jle mov divb rex.B xor jbe add outsb clc (bad) mov add fsubrs callq scas (bad) push (bad) mov xchg jg int rex.WRB (bad) push xchg jbe push mov jp scas jl jrcxz or or xor fwait mov (bad) pop fucomp add jg cltd fiadd mov enterq rcll add and repnz pop (bad) ss lea cmp lret out (bad) pushq cmp (bad) jg ss shr scas rex.R mov (bad) mov lock push pop or rcrl sub addr32 fwait out xor jg mov fwait fs jno jg xchg movsl flds rex.RX (bad) jg std adc (bad) add int cmp jnp (bad) retq hlt pop push jb cmpb sar cmp jb cmp sbb (bad) add jne (bad) or cmp pushq adc mov jnp and fmull outsl fwait jg pushq (bad) mov repnz test add rex.RX fldt rex.X cmp sub or jle sbb movsl add pushfq and (bad) scas xrelease callq icebp jo push test out mov rex.RB fs sbb popfq cmp in jg out adc stos ds mov cmp outsl sbb pop hlt xchg std jl es jns jo jbe hlt (bad) jrcxz stos outsb (bad) (bad) movslq sub out xor gs add adc sub jle mov jrcxz out scas rex.WRXB rex.B (bad) sub (bad) cld push out mov (bad) retq sbb cmc add mov push add mov mov add jp xchg int3 mov (bad) icebp stc add and js jp test sub rex.XB adc or fnop cli push mov adcl add rclb lahf mov adc fistp mov mov jg enterq push cmp pop lahf out add jp jl add mov jg stos jl rex.WX out sarl lea mov sub loop movabs jle xlat cmpsb rex.R rex.WRXB cmpsb add (bad) in push adc (bad) mov mov insb rex.WRX mov rex.WR lods (bad) xlat sub jns outsl pushq rex.WR test repz pop sbb nop insl sub adc push or rex.RX (bad) std xor fcompl retq add es test insb mov je movabs (bad) lods loopne add jb (bad) enterq rex.R rex.X mov jbe setns cmc (bad) jge and nop xchg in movabs lret xchg (bad) (bad) add rex.R in (bad) pop cmpsl xchg cmp xor (bad) rex.RXB add mov jle (bad) pop fsubr xor decl (bad) cld xor shl adc add mov adc cmp pop fadds scas iret adc insl sbb add (bad) xchg mov fwait movabs dec jle add mov scas lods cli (bad) add scas pop (bad) jle sti stos jns sbbl rex.X jmpq jmpq popfq loope sub and (bad) fs rcr fisttpl lahf sub xchg iret mov in or add cmp scas jle sbb stos enterq pushq (bad) cmp lock rex.WRB mov (bad) (bad) sbb add je rorb clc sub (bad) cmp and add mov callq jp and mov stos sub (bad) add loop jp loope test sub mov add (bad) (bad) rcrl pushq and mov add (bad) test test fldcw jl or in (bad) pop in nop mov mov (bad) push mov lahf js (bad) mov pop push (bad) xchg and cmp insb rorl (bad) out adc (bad) mov lret (bad) ror (bad) in (bad) (bad) enterq jp rex.WX jbe loope (bad) jo add mov (bad) fcomip cmp xchg sub xchg mov out pushfq out rex.X jp or je add in in mov rex.WB (bad) (bad) repnz and faddl mov xchg add loop adc fldcw stc ffree callq xor xchg mov xchg pushfq cmp add es lods repnz adc testb sti (bad) push lods rex.W adc push or (bad) iret and nop jg jrcxz and jg enterq sub divb (bad) pop jrcxz outsl mov and cmpsb cli and and stos rex.WR scas cld (bad) pop mov (bad) ja adc mov add or roll out push sbb pop lret xchg xchg fidivrl or jge imul add or (bad) add push jge xchg pop xchg (bad) jae callq add imulb movabs pop jmp add xchg in (bad) repnz add or mov add ja orl add fimull and adc mov rex.W popfq (bad) jmpq (bad) jp out xchg (bad) (bad) sbb or jnp rcll lock insl (bad) push xchg (bad) (bad) jle adc decl jle rex.WR adc xchg or and cmp lock out xor sbb cmpsl rex.RXB callq in or (bad) (bad) outsl jnp rex.R sar jnp test cmc push xchg enterq cmp jg jno or (bad) loopne je (bad) rex.WX add cmp jle rex.XB adc addr32 and out add imul sbb fistpll iret mov movabs (bad) xchg (bad) rex mov (bad) sub (bad) jns gs xchg fwait push add (bad) (bad) jo (bad) vmovapd (bad) cmc (bad) pushq (bad) movslq fildl mov add insl fs jg rex.WRX enterq loop sbb sahf xchg pushq mov or xor sbb (bad) add imul sub mov cltd jge out adc idiv andl or (bad) (bad) cmpsb (bad) in rex.XB (bad) stc jb push pushq jle add mov (bad) xor add pop std xor loope or jb add mov pushq (bad) xchg or sub in mov and fildl jg popfq rex.R (bad) jb add lods push mov out orl and jnp jge adc fildl add mov xchg movabs jp cmc fsts sub add xchg js cmpsb add cltd lods rex.WR mov jmp mov cmpsb add loop movslq (bad) lock mov xchg retq add jbe add (bad) movabs jg jns jmp jno test mov mov (bad) xor fldl rex.WR pop in (bad) mov rex.WB (bad) gs (bad) (bad) and mov lea push jnp cli (bad) sbb sbb pushq (bad) (bad) add (bad) rex.WX and (bad) mov adc ror lahf clc jg fwait (bad) xor int mov (bad) icebp mov or (bad) fnsave (bad) push sbb jp (bad) (bad) or nop mov loope mov sub mov or cs add stc test and add jmpq stos or xlat jg rex.WXB in sub mov fidiv pushq jnp cmp xor loope pushfq or mov rex.RXB jrcxz (bad) (bad) sbb rcrb lret add in rex.XB not xor cs jl xchg addr32 xchg sti or xor mov js jae (bad) jmpq xor je mov fucomp pop rolb clc rex.WX xchg and je add or mov jmpq and add leaveq or xchg rex.WRXB pop out sbb xchg xor es mov add xchg movabs xor pushq mov jbe mov sub je js fcompl jo imul rex jmpq xor add repnz leaveq lods rex.WX es or mov or scas mov cmp sahf or (bad) cmp pop jmp (bad) adc mov movabs hlt movabs stc mulb cmc (bad) push (bad) or jb and jbe add (bad) jb jo retq pop pushq test scas xchg cmpsb add mov xchg cmp loopne callq xchg or data16 sub cld outsl cmp sbb (bad) cmovo mov jno (bad) data16 pop (bad) mov cmp jb xchg retq fdivs std mov (bad) cmp mov sbb rex.WX sbb stos (bad) popq push xchg pushq movabs fild in es cli cmp mov ja loopne (bad) (bad) jnp (bad) jae cmp enterq insl rorb xchg (bad) jp lods mov jne (bad) fidivr rex.WRX (bad) out sub mov push xor adc and ficompl lods je mov sbb (bad) jbe clc cmp sub or (bad) adc jmpq jrcxz stos in in sub dec scas mov neg mov cwtl lods sub or jbe or rex.WRXB pop adc jnp iret pop adc repz mov test iret imul push outsl lret and fdiv negl push test mov jge movslq cmp in mov add (bad) mov gs and xor add rex.WR sub cmpb cmp xor xor mov movabs mov push rex.RXB (bad) pop add outsl (bad) (bad) cmpl ds nop rex.WR push or (bad) add pushfq (bad) (bad) rex.RXB add rex.WR shll xchg mov add lahf rorl jbe cmpsl clc add out and push adc mov or rex.WRXB (bad) fstpt cmc pushq testl jmp jae es xchg or or jae sbb rcll cwtl (bad) cld rex.WR add rex.WX (bad) push or or lahf rex.RX pushfq cmp (bad) pop imul (bad) xor sub fsubrs (bad) cmp xchg add jbe jp (bad) test icebp (bad) fcoms fs jb (bad) pop repz rex.RX adc idivl nop xchg mov and (bad) rex.RXB (bad) enterq (bad) or or pop rorl sahf fbld push loopne jmp mov loope add ss mov in cmpsl add stc mov (bad) mov add lret (bad) or fiadd cld popfq xor add rex.R cmp mov pop rex.WRXB rex.W lret jrcxz lea nop adc mov fimul jnp sub in add add js fstpt add jbe in mov repz xor jrcxz fldl test mov enterq (bad) cmpsl mov rex adc add scas adc mov push (bad) rex.RX rex.WB clc movabs ja fildll pop sub rex.W test pop adc fwait mov add push (bad) fist icebp jp int rex.RX callq leavew sahf pushfq movabs in add icebp imul xchg (bad) data16 setns jo mov ja or movabs add test shll xor add sub insb add retq (bad) out sub add pop (bad) xchg xor loope rex.WRX mov stc cmpsl jle lods cmp mov cmpsb fldz push (bad) mov jle mov cmp adc push adcl (bad) ja xor mov push add (bad) fwait lods stos push add test jmpq or rex.B rex.WRXB mov data16 (bad) jo fwait mov add cwtl test movabs xor pop rex.WR add pop out movabs (bad) mov movsb mov outsb xchg push (bad) je sub jle (bad) rcrl sub add and leaveq stos test shrl mov jo rex.XB rex.RB pushq rex.WRXB (bad) cmova add cmpsl enterq rex.WRX rex.XB and fadds (bad) mov (bad) jmpq add rex cli cmpsb add mov or sbb test or movabs xchg scas sub movsb add fistpll clc fs xchg mov rex.WRXB adc cmp testl (bad) pop enterq jne mov fnstcw add sahf gs int3 test movabs movabs stos movsb jb ja out and loopne add cli fs sbb add xchg fidivrl push callq lods mul mov pushq rex.WR pushq test xor mov pop es fadd rex.WRX rex.WR cld or rex.RX mov cltd push add or add jb rex.RX neg sub xor ja sbb mov rex.W xchg shll add leaveq add xor sbb rex.RX fs (bad) (bad) and pop pop xchg pop xor cmp adc xchg sbb lea (bad) adc loope,pn rex.WXB rex.WR fdivrs rclb mov and enterq addl test sbb stos (bad) nop mov movl shld cltd in adc jp rex.WR cmp cmp add movabs (bad) and enterq sbb retq pop mov cmp cld (bad) jns or pop lahf callq (bad) stc ds andb add sub jno (bad) shlb xor add rex.RX fmulp adc loope xchg (bad) xchg (bad) rex.XB movabs push sbb cmc (bad) xchg clc push add rex.RXB stos rclb pop pop mov add js or outsb vpcmpeqb xchg je rcll xchg rex.RB xor es sbbl rex.R lahf xchg jg pop fnsave mov add push pop cs xchg mov jno rex.WRXB retq rex.WR adc (bad) jle movb (bad) add mov faddl in insl pop cld sbbl pushq fstps mov mov jg pop rex.RB (bad) cmp xchg subb mov mov (bad) std (bad) xchg cli and retq add push test mov adc cwtl adc sub jnp and sbb clc lret pop callq cmpsl rex.RX jg mov movabs sbb (bad) or test mov sub nop jae imul mulb callq pushq rclb rex.RXB loopne (bad) sar (bad) mov and fnstcw int cmp jp jne int3 (bad) xor imul ja mov ds movabs shl ss xchg int3 (bad) lods lods movsl add (bad) push fnstsw (bad) cmpsb jbe movabs jle lret (bad) jo (bad) (bad) lods test mov (bad) sub adc jg in (bad) fsubl std iret add ss xchg rex pushq xchg stos outsb in std and fnstenv rex.XB rex.WB mov add in jg iret lods add jne mov sbb lock cmp xchg mov mov (bad) and pop ja leaveq add rex.WRB movsb mov fwait add out xor jb mov retq pop js xlat add loopne shr stc add movabs jbe pop enterq cli mov xor rex.WRXB add sbb mov cld and add push lods cmp fs fwait add mov jbe cmpsb and add cmp pushq rex.WB pop rex.WRX mov mov loopne mov mov pop out adc adc cmovs or jle (bad) test js in mov clc jge (bad) ds scas jbe add jrcxz (bad) jbe test pop mov jbe add add pop pushq stc xor mov nop repz xchg push add outsb or sbb add (bad) scas int3 (bad) cmc sar add xchg rex.X lea test lahf lret pop imul and jb add (bad) lock (bad) sub pop clc rex.R rex.WB rex.WXB pop je rcl (bad) (bad) test mov (bad) jle mov jo (bad) retq sub add retq loope add repnz add in rex.RXB rex.R callq imul mov pop jl mov sbb cmp xor (bad) mov rex.WX pop (bad) cmc cltd push add or add (bad) (bad) lret rex.WX rex.R scas add add (bad) movabs movsb adc (bad) (bad) pushq (bad) int hlt sar ss jle rex.RXB jp add imul add test push add fsubl xor (bad) mov xchg add pop cld jne jo xchg mov stc xchg stos jl add rex.RB rex rex.RXB push rex.WB lret xorl jg pop add or int3 mov andl sbb mov (bad) (bad) (bad) add fwait movabs int add ja (bad) push movb cmp pop addb icebp popfq sbb pop cld and out rclb frstor xchg add (bad) rex rex.WX test mov fcoms nop sti outsl sahf movabs xchg in cwtl sbb (bad) mov (bad) xorl nop mov cld sahf test and mov imul (bad) mov or sbb xor and and add cmp pushq adc fisubl in ja or (bad) (bad) mov xchg out popfq mov rex.RB and icebp fwait cli pushq xorl mov loop fsubl movabs push (bad) xor cmc jrcxz adc mov and cld lock xchg push ss jl (bad) (bad) cmp jno add pushfq (bad) rex.X (bad) xor xchg add cwtl or (bad) xchg (bad) jle (bad) pop add rol pop or lods sbb in pop and pushq test xchg (bad) outsl (bad) pop data16 in shlb jb scas test xchg adc (bad) cmp sbb mov jo pushq insb fs cmp stc sahf adc ja ficomp ss add fnstcw adc lcall es push cli addb push and rex.XB cmp jmpq mov hlt outsl xchg jle iret (bad) jl mull mov add jae leaveq push jl pushq ficomp fstl xor cmpsl sub rex.X pop movsb pop mov (bad) lret mov rex.WRB enterq fist outsl (bad) fadds js cmp test mov (bad) mov xor sahf xlat mov xlat rorb incl xor adc sub mov xor cmp xchg (bad) mov mov xor (bad) xor fisubl cmp insl es xchg (bad) or popq fildll jle js mov je pop cmc (bad) retq cmp callq ja rorl mov out in mov pop adc (bad) push jmpq jbe xor sbb add imul rex.WRB rex.WR jp cmp rcr stos outsb adc movsb (bad) or decb pop cld mov add jns cmpsb leaveq pushq and xor mov loopne pushq push fildl and rex cli out out (bad) add xor (bad) cltd ja jl jnp retq sbb add cmc (bad) (bad) js fdivp retq pushq (bad) rex.W out rex jns adc mov adc enterq (bad) andl jl pushq outsb fistl cmpl (bad) callq lret rex.WRB lea pop pop cmp sahf out mov (bad) mov cs (bad) je add lahf (bad) add push (bad) mov fldenv cli cmp je sbb (bad) (bad) add push (bad) movabs sbb jb jmpq cmpsl cmp mov test mov (bad) (bad) movabs add (bad) movabs rex.W rolb mov push lret adc pushq std imul rex decb nop mov pushq (bad) imul hlt (bad) jle decb xchg lahf imul movaps lock movsl (bad) jg lahf sar (bad) sbb jo lret jrcxz adc movups pop out mov or cmp std ljmp lods ss add and js pop cs vpshaq xchg xor (bad) sub or and (bad) add adc mov xchg or mov lods imul xchg (bad) xchg rex.X sti mov pop add (bad) outsb ss lidt cs mov or xorb nop xchg popfq (bad) testb rex.R push pushq add rex.XB lea rex.B nop outsl pop movabs pop movabs sbb (bad) (bad) lret xor retq scas add test push pushfq add adcl (bad) loope rex.R lods imul insb test (bad) add cmp cld adc xchg push (bad) insb add sahf rorl ds pop and add push out and insb vcmppd je xchg jb imul pop lahf rcl or (bad) sbb add and (bad) xor sub shrl add vsubss jmp out pop or jbe movslq pop xchg (bad) repz std add retq and push or add int3 or (bad) (bad) adc out sub and (bad) and xor out int jo sub sbb rex.WR mov push in sub (bad) jb and (bad) pop int rex.X add pop xchg cmp add (bad) in test mov rex.R jle jno (bad) jb rolb cmp mov pop add fistl adc xchg (bad) mov mov jg adc jnp cmpsl or incl mov pop sbb callq push adcb pop sti (bad) add push (bad) pop mov lea or jrcxz sbb pop (bad) (bad) (bad) and push push out add or lret add cmp rex.WB push (bad) sub rex.RXB sub mov enterq add jg sub outsb (bad) add cmc (bad) divb mov and rex.RXB mov loop fdivr add sub outsb and xchg jg movabs mov sub sub fisttpll callq add stc sbb push xor fist (bad) insb add or incl rex test add fs add push (bad) mov (bad) sti js outsb jle mov (bad) sub mov mov push es add je sbb (bad) sbb (bad) addl (bad) fwait (bad) out sbb or jbe iretw movl in sbb push and data16 pop ss mov and pop xchg add (bad) movabs jp gs rex.WXB test loop pop lret rex.WRXB jle add pop icebp std in jmp (bad) repz adc stc and fisub add mov xchg rex.WRXB rex rex.WRX rex.XB jl rex.RXB rex.W pop sbb mov or and (bad) sbb fs lret fnop rex.WR (bad) mov out js xor jrcxz (bad) sub fmuls jno nop in fildll rex.WRX or jbe (bad) leaveq mov nop pop loope or (bad) (bad) jno sahf rex.RX ja lret xchg insl xchg xchg rex.WRB pop sbb rex.RXB outsb (bad) repnz mov cltd fildll cmp and pop (bad) jle mov pop xchg iret out jo mov and stos pop fwait pop xor data16 sbbl movabs addr32 mov test inc fnstenv fs retq mov add (bad) mov push add (bad) cmp mov and pop rex.WR ja add incb rex.WXB pop cld leaveq xchg scas imul cmp loopne and cli mov addr32 lret (bad) rorb add fdivs jle sbb out std pop mov sbb callq (bad) insb add sbb addr32 and xchg mov (bad) or stos pop jo mov repnz mov cwtl enterq add cmp imul jo rex.WX add pushq ss adc mov add rex.RX adc mov add xor out mov cmpsl in (bad) (bad) out add fdivrp or sub cwtl jb mov lahf in add mov stos clc push adc adc mov fs mov (bad) lret push (bad) mov sub (bad) add sti pushq jl test decb or mov out xor xor add push fsubrp adc add add stc iret lret mov add xor rex.X add repz test (bad) int3 (bad) cmpsb movsb add scas out gs mov cld and mov (bad) xor test add je mov adc or add (bad) pushq (bad) (bad) (bad) sahf (bad) test mov int sub sbb scas (bad) out nop (bad) xor push jae add (bad) test mov pop xchg jnp nop cwtl jl or stos insb (bad) hlt rex.WR test fs xor xlat and mov sbb mov std stos scas adc (bad) shrl mov pop or fdivs pop mov sbb rex.WX ffree repz cmp mov pop jg mov (bad) rex.RB jno scas setno xchg movq and imul adc pop rex.X (bad) adc jl add roll gs (bad) sub pop (bad) (bad) jle adc push push out push rex.WRB lods add or rex.WB push rcl (bad) pop sarb (bad) cmp xor mov fdivr xchg ss sbb (bad) std sub iret jl and (bad) mov (bad) pop fstps test movslq mov sbb lcall sti mov sub (bad) mov cld movsl add mov adc jae cmp jbe rex.RXB repz iret or sub (bad) jg jge rex.WX adc xchg add mov rex.W callq stc (bad) movsl pop addl push movsb rex.WB rex.WRX (bad) (bad) rex.WRXB jns mov idivl stos int sub cmp jbe movabs rex.X (bad) and sub test or (bad) add clc fs test outsb jl lret je or jp stc movslq idivl rex.B je (bad) adc and jle add leaveq adc (bad) cmpsb in pushq (bad) (bad) add fs movabs rex pushq (bad) cmp sbb (bad) pop je adc jrcxz mov add and test (bad) clc or es adc (bad) add imul jle mov rex.RX repnz rolb xor rex.B stos mov jae and push (bad) callq sbb xor sub sbb mov (bad) mov add mov and es xchg cld mov loope mov jnp fwait jb mov movabs fcom addl or std cmp or xchg jl jp in lock shl cmp mov mov jge jle roll fbld pushq lock subl (bad) rex.R (bad) (bad) fbld popq (bad) insl xchg xchg adc mov retq sahf jne mov rex.W cmp (bad) cmp jp imul jrcxz xchg mov jl mov cmc mov (bad) xor jp mov sbb fwait (bad) test (bad) stc (bad) lret iret add (bad) jle pop jns add sub or (bad) jmp (bad) pop push mov add out retq and jg add xor rex.WRX cli or sub add shl sbb stos lret add shr movsb mov repnz rex.XB xchg mov xor enterq addr32 add (bad) ss xor loopne jns (bad) std pop rex.XB lahf int jge shrb in mov fcomps mov or mov xchg pop clc pushq add (bad) rex.WRX xor outsb push mov mov imulb test jns xchg rex.RX xor stos jge rex.B rolb sub sub jae jle (bad) imul je and xor in xchg xor shrl jg xor jbe and insb movabs (bad) push cmovae push (bad) mov rex.RXB js test mov mov imul test add lods (bad) jrcxz jbe jle pop movabs push (bad) mov movabs (bad) or testb test int xchg rex adc cmc and rex pop sub push sar shlb fmull data16 adc xchg leaveq movsb (bad) (bad) sbb scas (bad) (bad) fistp jge adc adc mov jbe iret lods push loope adc xor (bad) jbe sar retq out xor (bad) mov leaveq stos out ljmp rex.WXB fs adc outsl orl not rex.RB outsb imul sarb nop cmpsl cli cmp adc ss push sub push icebp repz je shr (bad) fs and jmpq (bad) (bad) (bad) pushq add jns (bad) (bad) push (bad) in (bad) ds out adcb insb jg (bad) add clc pushfq fs stos sbb iret retq (bad) gs movsb or xchg enterq push jmpq rex.B rex.RXB jp lods pop jmp and or sbb jmpq sbb fs imul loope (bad) pop fimull popfq jb and jmpq and jbe push hlt adc imul mov jrcxz (bad) add or rex.R and jb xchg cmp test cmp rex.RB rex pushfq pop push in test int imul out outsl imul cld xlat xor rex pop imul movslq (bad) or xor lods adc sub or cwtl je cltd movabs ds std cld out jp pushfq in movabs pop sbb lret and rex.B cmpsb (bad) ja rcrb (bad) (bad) loope stos xor andl cld in lods es mov xchg in rex.WRX rex.WB and (bad) sahf rex.WRXB ds mov rex.WRB repnz push (bad) mov js (bad) cmp imul in in mov mov pushq rex.X (bad) sti cli (bad) scas cmp (bad) or (bad) push retq (bad) gs adc push push rex.RXB mov sbb addl mov xor test js (bad) (bad) jge (bad) movb xor pop div jnp hlt movabs xor push jp mov rex.WRXB fidivl sbb (bad) jg sarb (bad) jp pop add rex.W sbb rcr add insb xchg pop fisttpl lods movabs add xchg mov push jmp sbb clc cmp mov (bad) std mov or rex.WX (bad) jg adc jbe pushfq sar sar fwait scas and jmpq mov xor outsl push rex.X and xor std (bad) test neg rcr jp jb add repz ja movslq rex.XB stos out push enterq or rex outsl lret rex.WRX jl sub sub (bad) (bad) rex.WRB cmp jg retq cmp (bad) mov (bad) popfq add mov mov and mov adcb sub and or xchg and and (bad) rex.WRX (bad) add jle mov add sbb test rclb cmp (bad) add mov mov clc adc addb adc sbb ds adc jp sub add jb stos and cmc (bad) (bad) (bad) cmpsl mov test xchg jbe repz cmpsb jl or (bad) add add pop in fcomps test or cmpsl mov rex.RXB rex.RX or fimull fistpll cmc sbb (bad) add (bad) lock cltd cmp sub cmp rex.W and (bad) je sub add mov or lods movabs jle cwtl movsb rorb cmpsb test add fisubr jp xchg (bad) (bad) push jbe loop outsb add in jle jl in fildl test sub add mov (bad) jo jg movabs xor jmpq test (bad) mov add lock add jae jle (bad) sbb sub push icebp iret add jle (bad) add xor push add movsb outsl push sti (bad) push retq add (bad) in movabs lret incl (bad) popfq mov (bad) jg mov add adc (bad) rex.XB sarl jmp (bad) rcll mov adc jnp adc mov add pop add stc jmp out mov test mov and frstor cmpsl (bad) out mov add and leaveq stos in add mov add sub jl mov outsl sbb rex.X adc movsl add xor (bad) mov stos jb insb add imul jp xchg addr32 lods push clc rorl scas fldl sti cmp fbstp mov cltd jp cmp (bad) jno outsb add push rcl mov push xor fdivl jnp lods (bad) jo sbb xchg cmpsl jg and (bad) mov jmpq jmpq xchg fist jp adc adc fdivrs stos (bad) jl and mov (bad) scas mov pop mov adc (bad) imul mov stc ss roll adc retq add jrcxz or stc mov add movabs pop xor add imulb rex.XB rex.WRX and xchg fisubl xchg insb mov xchg sbb gs mov and and jp mov pop in xchg add fwait imul jl or xchg cmp mov outsb lea outsb mov push fisttpl cmp hlt jle sbb sub (bad) lods cmp xchg mov jg jmpq shr cmp insl add sub rex.XB jg lahf rex.W xchg out and adc cltd push fstps callq movabs sub rex.WX out or sbb jp (bad) sub (bad) and jl (bad) stc sub push cmp sub addr32 rex.RX rex.WRB sbb jb movslq or or int insl adc (bad) mov rex adc out sbb jge cs ja push adc (bad) rex.RB sbb xor imul mov mov rex.WRXB sahf (bad) out push mov lods iret pop data16 jo mov pop rex.WRX std cmp sti pop jle jge icebp sbb gs jns (bad) cmp rcll rex.W out sub test cmpsl lock and gs pop jge (bad) mov int mov sahf push jbe (bad) ss fsubp (bad) add (bad) adc rex.WR rcl insl insl rex.R cmp rex.W mov mov (bad) cld cli mov out shlb mov adc leaveq insl mov roll (bad) fwait cwtl jmp push add mov (bad) rclb fstl mov test ja pop pushq xor or imul and movslq (bad) out xchg (bad) rorl (bad) rex.RX rex.WRB or push movsl rex.WRX sbb imul xor xchg sub sub sbb xor pushq test cmp or retq insl or adc (bad) mov mov sarl mull (bad) out sbb mov jo jge test xor sbbl cmp sub xlat addr32 xchg mov jle (bad) in js movabs nop scas gs add (bad) sub mov mov or retq mov iret movslq idivb es fcomip adc and int3 add push (bad) mov decb pop cwtl adc in shlb mov out add lods (bad) mov cmpsb rcr add adc insl add mov test cmpsl or pop (bad) movsb rex.W not sub andl mov pushq add jrcxz adc add ja test (bad) fistpll and pop add in popq movslq and add add sub movsb (bad) push jl scas (bad) rex.WX stos cmp add (bad) mov iret pop jbe add (bad) cmp add (bad) jbe add (bad) cmpsl cmp js add cmp add (bad) jp rclb mov adc (bad) rex.X mul leaveq and mov je xor add int (bad) (bad) gs or (bad) xor (bad) lahf add (bad) in outsb cltd shrb scas mov pop sti sbb adc pop sahf test cmpsb cs js (bad) mov add es cmpsb rex.W idiv ficoml outsb movb xor mov or add (bad) int push pop icebp jno fs xchg xor mov add mov fild callq add nop int3 (bad) add retq hlt push sbb fimull (bad) mov movabs sub stos cmpsb (bad) jl mov enterq ffreep cld adc movabs movabs lock rex.X in lahf add retq adc jne mov xchg stos fwait cmp mov cld mov jrcxz mov clc add (bad) cltd cmp add push retq jle cmp rcrb jle add (bad) test faddl jg add xor xor jb movabs rex.X xchg jns add insl add out rex.XB jl adc mov (bad) cmp add movslq adc sbb (bad) add or xchg jge testb fdivrl add (bad) lcall lock jno rex rex.R xor adc test fidivr or std rex.WRB lahf (bad) test cltd pop add xor and rex.RB int3 xchg pop xor add mov xchg adc or sub (bad) adc fadds jl (bad) fs pinsrw rclb add test or (bad) rex.X add movabs lahf mov pop add jb (bad) pushfq (bad) jb xchg movabs fnstsw mov lock cmp sub rex.WRXB or xchg cmpsl retq mov enterq and jb repnz lret insl vmaxss gs clc rex.WX sub sbb jrcxz movabs js jge je,pt lret lahf fistl add jge xchg and in add jne ds add jge out (bad) outsl (bad) xchg mov jg cmp icebp cmc jno add push push jo and fistpl adc or rex.W movabs rex.RXB pushq data16 out cmp fs jno (bad) mov rex.WRB std (bad) int3 jo sub adc fdivrs mov jb (bad) (bad) adc add in addb pop cld fidivl sbb int jno fisttp shlb movsb scas mov xchg xchg add fs mov rex shr sub repz insb retq jg int3 push jae (bad) rex.RXB movabs leaveq mov cltd jb (bad) insb fwait pop add xchg punpckhbw scas addr32 fcompl test rex.WX rex.RB sbb movsl and es add mov rex ss sub rdtsc add xchg retq fs push adc (bad) pop stc mov lret add lret retq (bad) add rex.RX rex.WR rex.WXB jb fsts es mov (bad) (bad) mov or add lods data16 lret movabs std lret sahf (bad) (bad) test cwtl pop in test rex.WRXB rex.WXB rex.X adc scas popfq xchg rcrb jp stos jo add cmp mov data16 mov pop decb jb mov pop and movabs ss rex.XB xor adc xor (bad) push ja jb cmpsb rex.X push mov add mov xor add mov test (bad) icebp movsb pop sub sahf or or pushq push movsb in and xchg ja push in jge movabs (bad) pushfq rex.WRXB stos adc sub icebp test sldt (bad) ja enterq or jb rex.WB shr out scas jb adc sbb mov hlt add (bad) movabs in mov rex.WB retq ds pop jle sub gs mov and ss pop icebp add rex.X jp (bad) lret (bad) xor mov stos push add mov cli adc rolb loope (bad) cmc rex.WX loopne xlat mov sub clc jns jl xchg (bad) in fistl js add cmp jge (bad) add jnp pushq xchg mov jmp jne sbb xchg rex.WR mov hlt jo ficom add (bad) outsl test or mov pop adc imul mov xor sbb out (bad) add sahf stos add clc loope jg mov or stc xchg xor leaveq push mov xor shrl rex.WRXB clc (bad) (bad) es sbbb jl rex.WRX loopne mov cwtl shll jo mov and rex.WRB (bad) sbb cmc shlb jle push xor mov jp fwait add ja fimul in rex.X and movabs rex.R sarl fiadd enterq sti sub xchg xor sbb cli sbb and (bad) rcll test xchg sarl in jg xchg add icebp cmpb add je cmp mov and lods jns (bad) or cmp shrl incl jne nop rex.W adcl cmp mov rex.B rex.RB and ds add ror xor scas jae jae hlt cltd movslq xchg faddp sbbb push (bad) (bad) int3 mov in outsb jnp mov rex.WRXB rex.R sbb cli (bad) js popfq mov push fucomip jg (bad) (bad) insl add sahf repnz rex.RX jnp mov outsl and sbb cld movabs test (bad) movabs sub rex.X mov push mov stos int (bad) movabs pop (bad) bndstx (bad) es and jl add nop add cwtl sbb lahf test jp leaveq xchg movsl sbb (bad) fisubr cs rex.WRX xor (bad) xor sbb add cs imul push sub jmp push mov and (bad) jg fwait mov test mov jmp retq lods jb int3 (bad) addl mov rcl out adc outsb add mov (bad) xor stos rex.X mov (bad) jle data16 movslq rex.X sub sti xor jnp cwtl shrb jg xchg sbb cltd add stos (bad) cmp cmp sbb rex.WRX rex.RX sarl xchg test pop and rex.X cltd cs jns add pop stos push (bad) in cli rex.W jl clc (bad) (bad) jg scas add jne mov jl rex.X fwait pop pop and out mov jg test or movslq (bad) int3 xchg rex.RX (bad) cmp mov xor test rex.RB outsl add cmpsl retq add xor pushq or (bad) jo repnz adc ja andl xchg rex.R adc jb movabs rex.X rex.R cmp (bad) (bad) xchg sub cwtl rex.WR rex.WX rex.X add clc or add and adc in add sbb sub xchg loop mov jge push xchg (bad) (bad) jae add jp (bad) popfq sbb or gs add test mov mov out add cmc mov movsb and mov pop repz and jo pcmpgtw jl add add jns mov sbb cmpsb or xchg adc pop add movabs mov cmpsl pop adc add shll rex.X ficomp add (bad) adc jb mov ss jno mov (bad) (bad) pushq retq jno push sahf (bad) shr mov sbbb fcmovb lahf clc cmp pushfq rex.B mov cmp sub mov (bad) cmp add movabs push adc rex.WX sub cltd (bad) xor sahf add std scas add rex.RX pop add lret jno fsub (bad) (bad) cmp lods (bad) jg jle and xchg cmp mov rex.W sbb pushq mov push mov outsl push pushq (bad) cmp sub loopne out jb jrcxz (bad) mov cmp adc mov addr32 iret outsb sub mov cs sti loope (bad) or adc and or pushq test (bad) scas adc jno outsb rex.WRX shrl add cmp pushfq rorl movl repz sbb (bad) mov out lea add adc mov add (bad) pop pop jge rex.R rex.XB jp pushfq jle or mov clc xor (bad) mov sub xchg add adc int rex.RXB rex.XB js add rcll mov pop mov std pop push add jle xor loope mov enterq jle neg test add stos jrcxz rex.R popfq or cmp lods lods mov mov cwtl in sub loop rex.W adc or cmp add rex.WRX rex.WRXB sti fidivr loope (bad) fucom and mov (bad) (bad) (bad) in jnp std jae sub cmp fnstcw icebp jbe (bad) iret or rex.X out jno lea movabs jnp mov sbb mov sub (bad) test cwtl or scas push add (bad) pop (bad) psubw mov rex.WRXB ja scas push shrl (bad) add add jle pop add add push movabs rex.WR xor icebp push add xor (bad) (bad) (bad) add rex.WRX xor mov add xchg sub add add xor xor mov popfq in (bad) (bad) cmp mov fsubrp mov jmpq stc gs add add lock (bad) ss sbb (bad) imulb mov xor add (bad) pushq out push mov sub mov (bad) stc mov cwtl add sbb pop add rex.WRX jb (bad) movsl adc std adc jrcxz pop pushq mov cwtl repnz push rex.WRX adc add cmc and ja rex.XB jae jb lret xchg mov outsl retq rex.RXB or movsl test fnstsw hlt adc retq sahf sub and rex rex.RB rex enterq pushq icebp stos add scas mov add xchg rex.RB enterq mov rorl add cmpsl rex.RXB outsb mov (bad) push fstps stos scas sub add mov cltd add out cmovbe sahf add mov mov insl fdivrp movabs add sbb sub mov rex.XB fldcw (bad) leaveq jg out pop js mov icebp lock push cmp add cwtl (bad) and mov fs xlat pop jo pop sbb roll je (bad) icebp xor sbb xchg xchg test ss scas mov pand mov sarb callq add (bad) rex.WX mov jle add adc insl add xchg xchg lahf jb mov xor rex.WRXB lock mov fs mov movabs movabs rex.WXB (bad) mov cli andl mov jle mov jns jbe faddp (bad) add fsts pushq loope add rcll (bad) rcrl callq jp repz add (bad) jnp std cmp jae and rex.WRXB (bad) mov (bad) and fdivr pop add retq rex.WRX loope xchg lret vpunpckhbw add (bad) (bad) bnd (bad) add movabs negl addl adc (bad) imul lods hlt sarl (bad) mov cmp movabs xchg (bad) mov sub and out sub (bad) cmc (bad) jmp (bad) add mov lock js leaveq jb and or sub retq jg or je shr cmp ja xchg (bad) je mov cmp stc clc test jge repz (bad) sbb je rex.WRB loop jmpq je pop push and sbb (bad) int out and bswap fmul sbb cli and (bad) mov mov out sub add insl es (bad) cld jle test (bad) movabs lods rex.WRXB pop (bad) and (bad) cmp out jbe add fwait or (bad) jb faddl sub out lods cli xor sti stos hlt lret add push shrb pop sbb mov add jg jbe loopne retq lea outsl cmp (bad) (bad) lock in add mov (bad) cmc jns (bad) add clc cvtps2pi or add pushq (bad) ja fiadd jnp mov jb (bad) in mov add int3 push jle mov jno or (bad) adc stc rex.RX outsb fiadd or sub gs cmp movb xlat and jnp (bad) (bad) xchg add rex.RX rex.RXB add fsubrl mov outsl (bad) adc xchg (bad) addl adc (bad) movsl lea jb js rex.WRXB es (bad) lea out je and (bad) xor mov add and (bad) add insb sub jo (bad) (bad) lret rex.RXB ss (bad) cld (bad) push mov (bad) gs sar in add mov mov imul push cmp (bad) (bad) (bad) add (bad) adc add fsubrl sbb cmp cmc sbb cmp lahf cltd cmpsb mov add fwait jg sbb mov callq jle pop mov faddl ja pxor xchg decl add (bad) add and outsl (bad) (bad) add rex.X push or (bad) pushq stc sti add cwtl ss in ja add lock rex.W add mov retq addb repnz xor (bad) out mov andl jp shrl xchg jl repz fisttp mov lret add lods movabs (bad) out add in (bad) jg sti imul decb mov scas jle (bad) rex.RX add jle repnz (bad) cs test pop mov fnstsw sahf push add fdivrl lahf cmp sub jno int (bad) jmpq jbe (bad) jbe pop out add mov test hlt pop outsl (bad) sbb fwait pushq imul mov jrcxz clc jg (bad) or out mov sbb mov leaveq lock or fistp and (bad) in fbstp xor (bad) jp (bad) mov jnp pop (bad) data16 mov (bad) lock jo mov (bad) rex.B jrcxz add lahf xor adc mov gs xchg add popfq rex.XB nop add push std rex.X in mov xchg cmp test loopne movabs sub add lock mov xor out movabs jge (bad) and sar xchg loope rex.WR pushq movsl outsl jge je mov add (bad) cmpl je add jg and insb pop xchg add leaveq std rex.WRB fwait rex.WR and in pop (bad) fnstsw xor xchg adc test rex.R (bad) rcrl mov (bad) xor int3 movsb add jns jg and (bad) in iret (bad) pushq (bad) cmc jns push xchg adc js mov or add (bad) xor xchg leaveq pop pop stos (bad) pop pop jmp testb mov sahf int imul cli add (bad) rex.WXB rex.WRXB mov (bad) jl jge orl insb and push int3 pop sbbb jle and pushq lods pushq and (bad) enterq movabs ds test pushq xchg adc (bad) rex.RB cmp or push movabs sbb mov push repz (bad) (bad) push (bad) jae icebp insl or test rex.WRX data16 and icebp loop jg out jp rex.RXB rex (bad) je pop repnz rex.WR push gs rex.WB or rex.R rex.WR mov callq pushq (bad) mov cld xchg push add add js fdivrp mov decl xlat jrcxz imulb add lret pop lock rex.R rex.WRX jmpq adc hlt (bad) movsb or sbb rex.WX (bad) insl pushq repz (bad) stos fs rex jo xchg rex.RX add fdivr mov popfq mov clc add pop stos hlt cmp sbb test add imul movabs fbstp fcoms add movabs addr32 xchg rex.W popfq xchg lock mov mov jle rex rex.RB adc push jo cmc imul pop (bad) pop repnz jb cmpsl pop (bad) mov and jno push mov add pop xor (bad) jp pavgb jp xor jg pop andl jmp adc lock cs pushfq (bad) jmpq xchg rex.WRB cwtl mov mov xchg or jp or pop mov add pushq mov scas xor rex.WRB (bad) jge movabs lock test retq jnp cmpsb jp (bad) rcrb (bad) movsl pushq adc jle (bad) mov lahf retq xor test test outsl jne xchg cltd cmp rcr retq out add in mov cld sub iret out add (bad) (bad) rex.XB rex.WXB cmp jrcxz or add fcomps cmp push (bad) movsl cmp jl (bad) jno (bad) sahf rex.W and add ss faddl mov scas cli rex.WX mov rex.WRXB in jge in addb xor fxch nop cmpsl xor pop icebp xor rex.XB adc add out mov (bad) (bad) addr32 ljmp in gs xor movabs (bad) out sub and pop add sub lahf (bad) std out mov (bad) imul sbb sub movsb and (bad) jb jrcxz jl cmpsb loop pushq add mov (bad) push ss push out jg mov rex.WX lock cmp add and ja int3 sub (bad) jle cmp cwtl sbb jns vmovshdup adc jns rex int3 mov pop mov mov xchg mov (bad) in or (bad) imul in add (bad) movslq (bad) test (bad) (bad) jle (bad) adc adc decl push (bad) push iret outsl fiadd push cmp cmp xor and (bad) jbe push cmp imul add adc fmull cmp xor jnp je cltd jge fsubs rex.X in jle mov or add jno sar loope or adc in mov out jae mov movabs ja (bad) movabs and pop fs (bad) (bad) bnd retq negb movsb mov add (bad) es repz mov ds cmp roll xchg pushq (bad) add rex.WX (bad) rex.WRXB jb xchg fidivrl fistp pop add retq movslq add sahf cmp (bad) add int mov jl add push in ds cmp repz std roll mov mov in (bad) sahf sub and in fisttp sbb pushq fild callq (bad) imul adc clc xchg jbe cld sub fmulp pop imulb leaveq xchg mov incl add sbb test rex.RX jle adc in jp repz ficoml adc cmp (bad) test int jp test add or enterq sarb sbb sub in pushq cmpsb add scas add adc fs jmp (bad) add out and xor enterq fsubs movsb loopne sub out (bad) sbb xlat add rex.R (bad) add (bad) xchg movabs movabs je lret loope (bad) rex.RXB test out jg retq jno cmp cmpsb (bad) adc add sub add sub or rex.RB mov rex.R pop test (bad) pop cmp add movsb (bad) jl (bad) rex.WB rex.W mov cmp xchg pushq movslq pop add xorl xchg out fisubrl movabs and pop (bad) or out push jg add pop jbe scas repz add (bad) outsb (bad) jg mov push jb test addl loop rex.X rex.WR cmp mov sbb pop jle in sub mov iret gs outsl and addr32 mov adc rcrb add (bad) mov lea jbe fwait add (bad) nop xchg add pop loop add push out or pop hlt add pushfq (bad) cmp (bad) rex.WX mov or or or callq add (bad) shrl xor imul ds cli add sbb (bad) push mov pushq (bad) jg rex.X rex.WRXB movabs (bad) lea jle adc cmp or in idivb and loopne (bad) add fnstsw fs rex.WRXB decl popfq (bad) add mov fsts rclb add rex.WRXB ss movsb xchg lret add cmpsl leaveq fwait (bad) lahf iret (bad) sub rex.RXB je stc xchg add rex.XB and rex (bad) rex.WR jo cmp cmp es test pop mov (bad) xor cmp fadds jp (bad) fcompl mov imul adc addr32 (bad) or and jl (bad) fdivl cld fs fwait xchg (bad) inc or cmp ficomp rex.WXB cs (bad) rex.W (bad) (bad) sub add push movabs rex.X sahf cmp (bad) jp pop add xlat (bad) ficom je (bad) jnp (bad) negl rex.WRX xchg jb adc rex.RXB jns mov test (bad) rcr push sub (bad) add add jle pop callq (bad) int add clc cmp xchg test popfq add in icebp cmp rex.WXB je jo mov push push or or lret rex.X fbstp jl imul rex.RX repz out xchg cmpsl scas adc sti (bad) jb jg xchg rex.WRXB jb jb stos adc mov jle movabs rorb (bad) mov add in lods fdivp pop lahf rex.X lods mov and push scas cmpsb jg je jle (bad) cs (bad) sti movabs outsb push mov mov (bad) xchg add js xchg fdivrs jle es (bad) (bad) (bad) cwtl pop icebp (bad) jle push movabs cmp mov fmuls (bad) (bad) movsb lahf shrb sarl mov incl (bad) cmc fsubrs jle sub jmpq in adc jge rol fdivs (bad) add movabs (bad) add loopne pop jl sbb pop (bad) pushfq (bad) mov rex.W (bad) jne mov jnp mov xorl cmp mov in stc cmpsl mov (bad) (bad) jrcxz jae xor mov (bad) cmp and scas adc (bad) repz (bad) sbb add and pop rex.X (bad) mov pushq or or mov icebp test sub rex.WRB movl mov jg es pop xchg stos outsl addl (bad) movabs cmp sbb fidivr mov fisubr rex.WRB add popfq js ficomp pop mov insb lods js sahf retq and (bad) push mov cmpsl add mov sub mov sub and jns and add lods (bad) sbb add (bad) or pushq lods mov xchg and adc decb (bad) jne fidivrl scas xor (bad) fmuls movabs pop callq and (bad) (bad) sub fwait (bad) stc mov jge xor rex.X inc divl rex.RX cs add adc and hlt add (bad) lret jns (bad) add (bad) test nop imul in stos cmpl mov int ja (bad) pushq imul add mov pushq adcl in scas mov repnz xchg push jg mov mov rex.WRX add mov sahf add lods mov add movabs mov popfq rex.WRB cld test (bad) or loopne (bad) (bad) mov mov verw (bad) rex.WXB jge (bad) rex jae movabs adc lret xor mov xor fs add rex.RX xor movsb shr add adc lods (bad) jbe sbb rex.WRB mov (bad) cmp in adc sbb (bad) xchg shr (bad) repnz fidivl stos (bad) cmp out lea ss (bad) (bad) (bad) add pop movabs and out pop rolb in enterq mov jbe xchg sub lods sbb sti fidivr jrcxz push add nop rcl js loop and fwait int3 movabs and pop pop (bad) add mov retq stc pop jle xchg pushq ss add jae mov add cld rex.WRXB adc mov xchg fwait lahf rex.WXB add cmpl and (bad) rex.B cltd mov std push pop xchg add (bad) clc jl xor repz push fldt stc mov lahf xor and or movabs jp rex.XB mov pop sub movsl (bad) cltd hlt (bad) sbb outsl add loope jp xchg fs sti nop xlat pop std or repz add (bad) adc (bad) (bad) add lahf jo cli jl in mov push xchg pop popfq (bad) rex.RXB (bad) rex.WRXB pop jl pop cmp ds cltd je retq andl (bad) data16 xchg testl rex.R (bad) xchg (bad) imul loop adc movabs xchg popfq pop (bad) cwtl add (bad) stos mov (bad) or movabs jle lods xor mov mov rcrl scas cltd movabs repz rcll (bad) lock (bad) sub xor cmp clflush sub (bad) rex.WXB xlat and jrcxz je stos (bad) lret (bad) (bad) movabs fwait clc (bad) sub rex.R (bad) mov pop sbb movsl jrcxz (bad) push in xchg out cltd fucomi sub fsubrs (bad) push add jl rex.W cld pop stc rex.RB (bad) (bad) adc sbb pushq xchg mov push cmp jge outsb cli insl jno xor loope push idivb (bad) js xor sbb or jle fwait xchg jnp add sbb adc loope xchg mov (bad) sahf (bad) or out sub (bad) lods rex.B js rorl and mov and test or (bad) sub je shrl ljmp cmp jp jp stc es (bad) cmp je sarb (bad) movabs test (bad) lret pop sub pushfq xchg (bad) cli outsl leaveq shll fbstp xlat (bad) pop xor (bad) pop mov fsubp and (bad) std cli jg retq jge cld mov jl shrl jmp pushfq fisubl shrb test rex.RXB xor adc mov rex.RXB in out push test xor sub scas jl xchg (bad) mov jge rex.XB jbe ja fs rex.RX leaveq cmp movabs callq insl jbe scas cld (bad) or (bad) (bad) addr32 xor push in jno rex.WB (bad) add jo imul jge cwtl mov movsl xchg in mov (bad) (bad) test repnz or sbb jmpq pushq (bad) mov jp rcr xor insb fucom imul pushq imull add fisubl test (bad) je jg movabs cmp add mov ficoml lret ja fmull in xchg (bad) negl xor and push rcrb ss rex.WRXB js cmp out xchg movabs in cmp jmp mov gs pushq data16 mov out loop retq or pop sub jnp (bad) (bad) (bad) mov pushfq push cli rex.WXB cmp mov (bad) lret cmp scas in pop xchg outsl movabs cld rol ficom and iret retq xor fdivrl out fnstcw sub rcl adc jge mov push fistp movsl jbe cs mov mov fcmove mov sub cmp popfq clc jb sub outsb scas ficom sbb and sub sbbl mov rex.WRB std xchg loopne or adc icebp vmovhps (bad) mov mov fbstp in js sub adc es xor fs or test retq pop jns jb (bad) sub (bad) sbb jg xchg rex.WXB data16 mov rex.R fildll movsb out pop movabs xor outsl ds sub xor add cmp sahf push cmpb mov adc jrcxz cmc and fisub hlt xchg fs jns xchg pop jns data16 lret (bad) push add (bad) in sbb add fisubl fwait cmp or movabs rex.WRX rex.WR jb mov in xchg jno xchg sbb fldl in mov (bad) popfq iret rex.XB out fmull movabs je rol add push in xor (bad) js stmxcsr jae sahf rex.WX mov sub mov xchg rex.B add jle xor std jae pushq (bad) mov (bad) add xlat (bad) push add jno jg imul xchg add sub pushq push add pop lock int3 mov mov sbb xchg callq (bad) jg (bad) rex.RX xchg lahf scas mov mov int3 push sub mov pushfq rex.RXB scas add nop jp movabs (bad) (bad) jge or movsb sbb addr32 out pop jb rcrb pop xchg mov lret (bad) repnz rorw xor imul sub mov lret add sub push mov (bad) jle out mov loopne and push add cmp js insl (bad) (bad) cmp (bad) subps rex.WR (bad) js fdivrs hlt orl movabs pop loop push je pushfq and fiaddl cmp sti (bad) negl xchg ja sub (bad) (bad) and mov (bad) adc cmc rex.WRB fsts cmp rex.WRX xchg (bad) sub mov jg scas pop pop sub jp (bad) xchg stos sub adc rex.WX js rcll jge rex.B scas rex.RX add imul sti mov rex.X jo add mov rex.WRX out jle rex.WRXB imul or and mov js xor cmp (bad) retq add mov int pop cmc push mov jp xlat pop sbb and (bad) cmp rex.WR rex.W pop (bad) mov rex.WRXB sar (bad) loopne in cmp xchg lahf cs lods jl cmp add out xchg movabs sarb movabs in test sarb in sbb jmpq (bad) test jne stos pop jns loope outsl rex.WB jrcxz js lock adc push js rex.RXB jbe cmc pop std adc mov push rex.RX flds nop rex.WXB push rolb mov and pop fldl movsb test pop cmp iret in rorb rex.WR xchg cmp rclb mov push (bad) add sub xchg leaveq rcl cmp add sub addr32 xchg repz outsl pushq jrcxz mov sub jrcxz add push mov mov pushq (bad) mov outsb sbb movabs fiaddl mov mov addr32 adcl jbe stos (bad) xchg hlt in stos repz or add add adc int cmpsl sbb (bad) imul or mov jl (bad) cmc stos es mov jg xchg vmaxsd movabs retq ds cmp in adc jno clc mov push int ja add mov iret outsl pop mov mov or rex.W pop push test rex.X scas add rex.WRB cld out xlat mov add mov adc scas jg lock add imul data16 (bad) mov mov sbb pop add mov sahf es icebp ja insb stos (bad) jg cmc nop (bad) push mov xchg adc sub stc (bad) lock orl xchg cmpsl std adc rex.WX rex.X (bad) pushfq pop (bad) sub xchg fnstcw cmp popfq mov jb retq sbb or jle cmpsl (bad) (bad) xchg rex.WB xchg (bad) jmp mov jbe xlat imul (bad) jb mov sub jbe mov stc out cmpb (bad) (bad) fiadd jmpq add xchg rex.B jl jmp jno push jae (bad) (bad) or cmpl shlb sub fstps jno (bad) sub jrcxz add stos sub out idiv (bad) repz lods nop (bad) lock and and jle mov rex.WRXB jrcxz (bad) rex.WXB je shll fcomi xchg jle in int retq mov pop add (bad) jg in lock or hlt add sub mov not mov (bad) xchg mov xchg cli pushq stc (bad) incb and sub (bad) mulb out or outsb and add (bad) xor (bad) clc lods cli jle (bad) sbb scas rex.WRX lock mov rex.WX sub rcl add pushfq mov mov imul mov rex.X cmp add jmpq test mov jns lea movsl cmpsl cmpsb (bad) jb rex.X push add (bad) pop rex.RX fildll sti (bad) jb mov and movabs (bad) ja mov cmpsb pushq (bad) mov loope jae mov enterq and xchg add (bad) mov xchg mov add adc pop mov mov jle mulb int3 icebp rex.X movsl add mov minps sahf in stos loope jmpq adc mov incl rex.WRXB insb (bad) mov out jg cmp (bad) add (bad) jg jrcxz or movabs xchg xchg int3 cmp xchg mov cmc gs xchg div (bad) add xlat popfq fwait (bad) push xchg or and std mov lret (bad) add jp rex.WXB cld push lock hlt shll and (bad) mov or mov data16 (bad) jle in nop cwtl ds cmp orl (bad) (bad) xchg shr (bad) outsb adc mov scas jne sahf sbb jb sbb rex lock cmc push cmpsl stc (bad) add (bad) jnp push movabs sbb (bad) cmp add sahf mov scas jbe jbe rcrl fdivrl cmp clc ja or or jp je xor xor lret in std mov add push mov mov push lods add idivl scas test jl mov mov jge (bad) jns orl lahf and std add loop cwtl mov or push in adc in movabs stos xchg or (bad) mov add rex.W mov test mov movl jle add test push push data16 outsb (bad) (bad) rcrl mov outsb ror mov outsl jbe pop hlt (bad) fdivr lahf std imul jle (bad) (bad) jb fistp callq xchg imul jle xor (bad) rex.WXB mov (bad) rex.WRX gs (bad) mov (bad) out and pushq fdivrl push std (bad) mov jne rolb cwtl insb or mov mov (bad) outsb (bad) jle cld lret jnp mov or mov hlt or es adc (bad) cmp sbb (bad) fucomip rorl jns pop push ja pop (bad) xchg sbb movsb rex.WRXB rex fwait pushfq xlat pop int3 in jo push (bad) imul xchg and mov jmpq xchg jnp pop (bad) mov sub add sub movsb rex.WRX mov jne lea pop mov lods add rex.WX xlat sahf out (bad) sahf jb int sbb cli in cmp xorl pop pop je jle fbld (bad) and mov or pushq fidivr imull gs mov sbb (bad) in cmc fisubr callq (bad) std sbb mov rorl (bad) (bad) (bad) adc popfq incb mov in cli or sub cmp fnstenv add rex.WRX or pop ja popfq push pushq add jo xchg mov repz mov ds cltd addr32 mov jl add push xchg lahf dec nop ss movabs jl,pn retq js add xlat jmpq push add in and push sbb (bad) pop out add scas fldl fcoml xlat movsl sbb mov sbb xor lea cmp addl (bad) mov sbb pushfq rcrl cmp js pop mov add sbb push movabs jmp loop or (bad) jb mov xor xchg jae sbb mov (bad) push mov mov xchg mov scas jle push xor rex.WXB mov (bad) (bad) xchg mov jae jnp (bad) xchg (bad) mov push push fdivrl scas ja pop fidivr mov pop mov mov sub sti mov and pushq subb mov (bad) jg rex.WXB pop jl js cmp jne decb cmp push rex rex.XB xor shlb nop test mov ja mov jle loop add mov and rex.B sbb movabs (bad) repz xchg (bad) sbb add (bad) cmp mov stos nop lahf mov add cld mov rex.WRXB clc xchg mov stc sub (bad) je fistpll mov cwtl rex.WR xor jrcxz rex.R or cmp push retq pop jp leaveq stc cltd mov (bad) icebp repnz mov mov sbb leaveq and adc add movabs sub pop flds (bad) iret mull fnsave sbb rex.R lcall jno lret in cmp scas jl repz jmpq jnp jrcxz cmc std mov insb and dec adc pop and rex.XB sti add cwtl mov jns (bad) mov add and outsb adc mov mov cmp cltd sub insl sub push xchg fdivs or jnp cmc mov sarb cmp rex.RB fisub outsb jns pushq sbb fwait shrl icebp add popfq rex.WX addr32 add imulb in cmp add push (bad) lods or cld xchg in mov stos (bad) movabs or add push shrl mov (bad) jp pushq cld mov mov (bad) scas (bad) addr32 (bad) rex push or nop mov xchg ss xchg (bad) scas add lret jl and ror add and retq mov pop scas (bad) mov adc and cmc test rcr jg (bad) fisttpl rex.WRB jno (bad) xchg pushfq clc rolb movslq (bad) mov or lahf ljmp cli sti in add sbb lods rcll xchg jle and xor cmp adc cmpsl xchg mov retq shlb movabs pushq jmp push adc pop test mov xor (bad) pop jae mov rex.WB sub xor mov (bad) xor stc (bad) mov (bad) jno cmp xlat jge scas sub sahf scas repnz push (bad) push (bad) push (bad) jge pushfq je mov rcl rex.WX sub in clc cld mov shrl out adc rex.WXB je imul mov cs sub movabs rolb callq mov imul cli sub divb mov or clc movslq xchg std (bad) and (bad) and scas mov (bad) sub je add cmp xrelease mov xchg pushq and sarl add pushq out xor fs mov test pop rex.RB rex.RX cwtl (bad) clc jae repz sarl out sbb and fs imul jno xchg rcr add add xchg jmp xchg mov adc fwait leaveq add hlt adc xchg add xlat sahf stc xor (bad) rex.RX add (bad) rex.WRB movabs (bad) movl cmp std rex lea rex.WB sahf (bad) lahf pop fisubrl jle jb adc (bad) (bad) xchg sub outsl rex.X jg jge js or callq cmp movabs and xchg sub jmpq int3 (bad) (bad) addl loope roll xchg xchg cmp rex.WB adc ss xchg test xchg (bad) push cmp push pushq lods jg add cs fwait xchg (bad) add (bad) movabs or rolb and pushq add (bad) cmp xlat rex.W enterq (bad) ss lea xchg mov pop addl or cld incb loop mov push sbb jmpq nop movl out and mov (bad) mov mov mov or fistpll cmp sbb rex.X movabs popfq pop sub cmpsb fiadd mov (bad) add movabs (bad) add jnp mov je movsb push sbbb add xchg (bad) jns (bad) repz fs jo cmp add popq rex.WRX (bad) mov (bad) stos push lret sbb test jbe jmpq and jg pop repz shrb push lret sbb sbb or sbb out out xchg sti (bad) lret add add and push nop push lock sbb fildl movabs movl idiv push shrb jmpq (bad) add rclb pop fldt pop jge imul xor rex.WXB (bad) add cs roll rol test hlt mov imul (bad) pop repz jg add (bad) lods adc add (bad) movsb mov mov cmp pop jle xchg int3 cmpsl mov add orb in (bad) add mov jle xchg rex cmpsb xchg add and xor sbb jnp testb add loopne cmpsl add (bad) add test popfq (bad) mov rep xchg fs xchg (bad) xchg jle mov mov int jbe sbb cmpsb add (bad) sub nop add lret scas (bad) xchg and mov add rex.WRXB mov cld test cmp sahf (bad) cli iret and out add test flds stos mov rex push pushq movabs sbb push rol cmp (bad) rex.W retq hlt add nop and xor (bad) mov outsb mov jmp sbb in (bad) (bad) (bad) (bad) push mov push sub in mov cmp ja mov rolb fdivr cmp pop add cmp xadd rex.X sub mov push jrcxz push add test rex.RX adc lret (bad) xchg (bad) lock and lahf lods rolb loope mov shlb adc stos mov (bad) add add cmpsb or and jae lahf movsb or addr32 rex.X rex.WXB cs xchg fsubl outsb retq (bad) mov cs add stos mov movabs (bad) cmc out add and (bad) sub enterq callq fwait mov jo xor out scas (bad) popfq subl xchg add add (bad) mov jge xchg fist roll and mov mov add mov jg (bad) mov (bad) fistp mov movabs rolb stc adc jns fidivrl (bad) sti sub jae in icebp add shl or stc mov xchg loope mov push add mov lea (bad) out lods jle rorl jmp pop jg mov or sbb jg rex.WRB pop jge add jmpq (bad) test pop add (bad) cmpsb retq jl pop clc lods and sub popq jrcxz add xor (bad) repz xchg es (bad) sar pushq pushfq (bad) pop pushq adc gs mov iret rex.XB add adc sub mov push xor imul and rex.WRB (bad) and in xor rex.R int3 rclb int sbb outsl addb icebp movsb (bad) popq fmuls xchg jbe jge repnz outsb popfq mov movabs out cli pop sbb or retq iret xchg fwait jle stc (bad) cmc fnstcw movabs rex.W (bad) fadds rex.B sub jae sbb setl sub fs es stc (bad) mov jns movabs or xchg shrb and leaveq add loope xchg out insb fs sub retq or add sbb wrmsr fldenv cmpsl jb xor (bad) rex.WR push jb mov jne leaveq adc cmp jns add add push icebp (bad) mov mov and lret xchg (bad) (bad) push loopne add fsubl rcrb int3 mov pop mov sub add shll jge (bad) mov (bad) (bad) sub add mov imul mov jl xor fbld out pop add xor mov pushq (bad) (bad) test hlt add gs sahf mov jns lods cmc (bad) scas decb (bad) add and in cmp add hlt jo insl movabs adc adc rex.RB rex.WRXB xchg mov leaveq (bad) rex.RXB imul cltd jp out pushq imul pushq push cmp (bad) mov fdivrl shrb fimull jge (bad) shrb xor fistp in (bad) pop push dec xchg (bad) rex.WRXB lahf xor repnz ss rex.X (bad) stos (bad) cld mov and mov movsb (bad) cmp (bad) sbb addr32 cmpsl mov rex.RB cmpsb xchg mov stc mov rex.WX add movabs mov xor xchg rex.WRXB rex.WR add je jnp test sbb sub ljmp andl retq sbb add xlat ds xchg mov rclb xor cmp push (bad) pop xchg pop and cld (bad) scas cwtl xchg pop (bad) mov jge push mov jle cmp loopne (bad) cmp insl add lods xor sub imul adc subl (bad) jp decb es mov clc push mov add cltd cmp or retq add sub or hlt rex.R push jg fdivrp sbb sub mov add andl jg pop push ss add iret pop rex.WR (bad) rex.R retq sbb callq or cmpb jmp movsl mov rex.R or jl (bad) xor sar cwtl push rex.WR movabs and out ficoml outsl cmp mov mov jrcxz push jg add jp push add cmp pushq mov add (bad) fwait jnp jne movl stc cmp add es mov rex.RB lods mov sti mov add mov rex push cmp jae xchg or sub pop lahf fnstsw test jge (bad) add jp jne fistpl (bad) jp xchg sbb insl and or add rex.WX retq jnp add xchg jl mov (bad) add test js xchg (bad) mov (bad) (bad) add or stc fisttpll or mov leaveq (bad) cmp add (bad) (bad) cltd lods adc or push xchg rex.X xor add cld movabs addl add pop cmp hlt jp pushq sti xor out pushq addr32 (bad) mov loop (bad) and or fidiv and int3 xchg (bad) xor loopne add cmp sahf add shrb adc add (bad) test xor sub mov mov add fidiv jmpq adc je callq and (bad) in push es in (bad) jp or jg movabs lret insb mov pop pop jb outsb or je imull jp xchg xlat jbe or sahf int mov or nop test jrcxz ja retq data16 pushq (bad) pushfq add repnz imul fisttp add retq add or lret rex.WX icebp cwtl int in xchg cli movsb cld jmp sarb (bad) rex.WR rex.W mov add push jg xchg int3 mov mov rex.WXB (bad) (bad) (bad) (bad) sbb cmp jrcxz in add (bad) (bad) outsl clc mov rolb out testb (bad) jb movabs mull sub push jno movabs lahf rex.X sub rex.B mov jle jns adc bnd mov (bad) stos jge jnp jmpq fidivrl cmpsb stos repnz rex.XB rex.R outsl sahf rex.W add fwait jb adc lock (bad) rex.WX jg fscale ja xchg data16 sub xchg rex.WRX fwait jle mov adc adc (bad) mov add xor add out rex.X sar or jb pop int3 rex.R push (bad) (bad) xrelease mov mov (bad) mov sub add js shl cmpsb xor rex.WRXB push sub rex.X mov mov add rolb packssdw mov add xchg mov mov rcl or clc movabs jbe pop mov rex.R sub (bad) js mov movabs out mov push jb or (bad) cmp es outsl cmp add mov test movsl mull lods pop pop jb in test (bad) lret fildl or cwtl pop (bad) rex.WRX add pushq sub es rex.WRXB cltd ss xchg and add cli or icebp xchg fstpl lock cmp movslq pop mov add movabs rex.RXB jns test (bad) and mov cmp adc cmpsl push add (bad) (bad) (bad) out pushq and add lock mov clc lea (bad) cmc cli movsb add cmp mov int3 pop mov add out int3 cmp jrcxz or adc (bad) adc rex.WB pop fs pop jnp mov fxch xchg xchg mov loopne fidivr add rex.WXB ss adc mov add jnp (bad) (bad) movabs sub test (bad) addl (bad) mov sbb movsb jne clc in adc jp rex.R (bad) repnz pop mov mov or jg or notb movsb jle (bad) xor cmp jb and cmp jg gs pop or test idivb (bad) lods or nop ficoml pushfq push (bad) sub negb add mov (bad) pop mov jp (bad) idivl bnd movabs iret jl rex.WXB lock cmc movsl in add subl xor jno adc lret test push (bad) add retq cmp xor rex.RXB loopne xor jle or pop mov (bad) pop mov rex.RB rex ss sub (bad) jbe outsb fdivrp cltd and scas roll xchg rex.RX (bad) jmpq (bad) cmp jb sub movb sbb fcomps mov outsl lahf mov jp cld rex.WRB ds and out movabs (bad) lods out cmp repnz int or in add movabs stos jns sahf sub or loop fstpt or leaveq lods push xchg xchg (bad) or rex add outsl lods (bad) (bad) (bad) rex.RX fwait xor (bad) std cld adc adcb test rex.WRB sbb mov cmpsb (bad) add callq (bad) jo pushq jno add fdiv out fnstenv fnop push iret leaveq punpckhwd stos and ds or (bad) (bad) adc (bad) add add rex.R and mov movabs bnd (bad) out movslq cmpl mov sbb rex.RXB mov xor stos clc jg mov jb insl (bad) movsl rex.R out fidivrl incb (bad) rex.RXB (bad) mov adc retq rex.WRB mov (bad) fldl add lret insl rclb movsb sbb rex xor and rex.WR rex.X add add sahf jle xor (bad) mov cwtl movabs movslq (bad) lods rorb ja rex.RX (bad) jp rcll cwtl jnp pop or xchg retq add (bad) imul mov stos add loop jae loope jnp divl add out and lret adc (bad) rex.WX jg mov (bad) stos or rolb sub lret add sub (bad) and cld pop movabs jns jle (bad) (bad) xchg fwait jle add sbbl jmpq fsubrl pop stc sbb mov adc sbb fdivs mov movabs clc (bad) adc jmpq or adc sub rex.XB es mov cmpsb loopne push push rex.X fstpl or rorb rolb (bad) pop or fcmovnu jp jb testl xor push in or mov mov ja jg je enterq add in loope mov insb decb repz jle in (bad) or jp rex.RX xchg callq adc int sub xchg sbb (bad) (bad) (bad) and jbe callq in pop (bad) out mov sbb mov retq movabs push (bad) (bad) cwtl (bad) cmp mov idivb add js xchg je (bad) lods add in lea pop sub and rex.WX (bad) mov icebp add cmpsl pop or mov sarb rex.WR imul pop sub mov pop (bad) xor rex.WRB rex.XB jae,pt and mov (bad) callq loopne movabs or scas in (bad) push sub (bad) adc punpckhbw rorb (bad) jle in mov (bad) (bad) rol loope movsl xor (bad) cwtl out enterq clc add rex.WRX out outsl add adcb popfq orl and cwtl addl icebp adc jge (bad) add add fadd rex.WRXB or and xor add rex.WR ss jno (bad) outsb mov mov mov fwait (bad) xor and out jle (bad) fsubr (bad) mov (bad) test jp (bad) rex.R mov xchg add mov sub add (bad) out movabs adc movabs hlt faddl (bad) (bad) (bad) sub mov jp mov in xchg scas popfq rolb mov (bad) js (bad) mov xchg movsb scas mov je pushq add cmp pushq out mov or add xchg add rex.RXB xor retq leaveq mov lahf jmpq jno lret xchg cmp jp,pt rex.RB xchg (bad) rex.WRB rex.W lret rex.RXB ds sub xorl jo andl (bad) cmp rex.RX sub or and jno fdivs and scas adc sub jl repnz fsubs (bad) rolb push add jae xchg mov sub (bad) movabs cmp bts retq mov sar stc jb imul (bad) pop ds rorb xor mov cltd add mov adc xchg (bad) ss rex.WR (bad) movabs push xchg mov (bad) mov out jo add xor and pop cmpsl pushq push in fiaddl pushq (bad) pop std jmpq cltd loop movq and pushq add (bad) seto jmp lret fldcw jbe cwtl testb (bad) iret pop sti loop (bad) cld rex.WRXB movslq sbb ficoml ss add xchg xchg add (bad) rex.RB (bad) jns xor rex.WRXB sub or add (bad) rex.R imul sbbl pushfq std (bad) stc adc fs sub rex.RX movb int3 mov mov mov stos lret (bad) and (bad) cli adc mov imul or sahf add mov rex.R xor cld (bad) adc sub and (bad) loope jp rex.X mov add jg pop (bad) (bad) and es (bad) xor jl (bad) pushq loope (bad) or add rorl orb rex.WRB adc mov addr32 sub xchg xchg pop jns jg jno mov xor and in mov (bad) add cwtl fnop add jge (bad) (bad) stos or leaveq repz (bad) pushfq sub lea xchg and mov stc xor (bad) jo outsb mov sbb repnz shrb out rorl imul insb (bad) ja (bad) mov sahf xchg lods out (bad) (bad) insb (bad) popfq mov pop rex.B fisubr cmpsb pop push sar js lahf cwtl js int sub xor lock out rex.X rex.B int push movabs cmp loopne sub (bad) imul lods jmpq test cmp xor xchg sbb (bad) jns ds test test push sub (bad) and cmp (bad) sub adc mov mov scas xor gs imul xlat nop (bad) pop and in adc jmp (bad) outsb cmp rex.WB and loop callq (bad) in xchg (bad) lahf mov push retq test scas pop add rex.WRB rex.RXB insl adc rex.RB gs in (bad) rex lret jg (bad) cmp (bad) loope or insl outsb imul jrcxz mov mov movslq rex.WX repnz xor push sub movd (bad) mov add cmpb outsb and jl mov jp and (bad) mov pop lret rex.RX xor scas mulb xchg mov test (bad) std push cmpsb rex.WRXB rex (bad) xchg fadd (bad) mov lods jmpq lods pop pop cmovo jle pushq mov fbld in (bad) (bad) push rex.W sbb (bad) fwait sub jae rclb ja,pn pushq jp fistp (bad) jne or adc (bad) es or iret loopne xchg movslq (bad) imul cmp jrcxz xchg sub rol add (bad) mov in or lret and adc mov mov fwait gs in cltd (bad) (bad) pop add or pop lods cmp repz push pushq add gs push leaveq outsl addr32 lea lahf jo iret retq jle fwait sub sbb movsb pop (bad) jrcxz outsl (bad) fsubr jp push mov sysexit xor sbb mov rex.WRX addr32 fimul rex.XB cltd cmp xor or pop repz addr32 xchg repnz mov (bad) loop (bad) (bad) stc jp callq andb lahf int3 (bad) fidivr rex.WXB leaveq push mul add rex.X xchg rclb fistl sbb (bad) data16 outsl mul lods (bad) ficoml jno sahf jmp movsb push enterq (bad) jae out mov add insl (bad) sbb pop stos (bad) mull adc rex.R add jle retq jp jb (bad) sub or xchg repnz lods cmpsl adc pop (bad) jae sub xchg loop jns (bad) xchg rex.RXB jle (bad) test mov pushq incl jg outsl (bad) adc cwtl and jb es xchg jrcxz push jl rex.R int3 push sbb rolb cmp ja cld add rex scas (bad) and cwtl and (bad) rex.WR rex add sbb sbb fisub adc xchg rex.RB mov hlt ja xor std jmp movabs retq mov xlat adc cmpl insb cmp callq out xchg pop or ja (bad) lods jns mov sub outsl pop outsb mov addb ds add add in and hlt and sbbl scas pop or mov in jge pop addr32 pop rex.B fiaddl rex.WR insl clc (bad) pushq sahf or mov rex.WR cmpb jge sub (bad) test cmc rex.WRXB in add adc mov or jp clc test sti jbe and mov xor add pushfq or (bad) leaveq stos add or jge lret add iret add mov add gs pushfq jp int3 rex.RXB lahf jp sub (bad) rex.R (bad) fyl2xp1 xchg (bad) mov shrl lret mov adc xlat (bad) incl cli jg mov in xor and enterq pop xor imul notb js leaveq imul mov (bad) pop rorb xchg add in xchg rex.RX mov (bad) push sbb (bad) cs pop test jp rex.RX rex.WRB idivl popfq (bad) mov (bad) xchg sbb add mov rex.W rex.WXB rex.WRXB (bad) jge mov (bad) mov and rex.R rex.WR add (bad) mov add rex.WRXB jp jbe (bad) add pop sub (bad) (bad) (bad) (bad) add scas sub sar add iret (bad) push cltd rex.WRXB jle (bad) (bad) xor js jp cwtl (bad) movabs rex.X (bad) lods xchg (bad) idivb xchg jo mov xor outsl and outsl mov add cltd nop pop rex.XB xor add mov (bad) in repnz mov xor scas rex.WRX (bad) in (bad) pop jbe sbb lods add ficomp ss notl retq adc cmp lret cmp outsl repz lahf sti add or popfq test cs push mov (bad) (bad) add gs add cmc jne rex.WRXB sub (bad) xchg push jbe sbb addr32 (bad) xchg mov rorb pop sbb cmp mov addr32 repz jo (bad) xchg xchg jb movlps add jge lea test out jg rorb pop (bad) sahf lock xchg sbb rcrb (bad) repz rex or loope test js mov sbb adc mov movabs sub lea (bad) rex add add out scas iret popfq adc loope sarb lods cld push jle stos mov rex pushq in add jbe adc jmp sub pop (bad) mov sbb jp pop mov or outsb sti imull jp ss push jno cmpsl rex.RXB mov pop imul xor out mov fwait cmp in iret mov or cltd sub or out std test add mov pop lret mov push stos add jo cmp pop jl xchg jnp cmc mov add sbb (bad) (bad) pop repnz jb jle mov mov test mov and (bad) jge mov enterq js pop lcall sti cld fstl outsb sbb or jg insl out sti add movabs fcomi mov stos imul xchg jg rex.RXB pop or pushfq cmp add nop iret xchg clc scas jns mov mov (bad) lods add mov (bad) pushq rex.R getsec jrcxz insl stc mov notl hlt jg jo rex.XB movabs mov out stos or stos pop iret fs ja (bad) jae popfq (bad) add (bad) pop (bad) add repnz rex.WR and or add and cmp cld movsl in sbb xor js stos pop lods pop pushfq mov or test or fidivr sbb xchg lods (bad) or add (bad) xchg (bad) jle movabs jl pushq pushq shll stc (bad) cltd outsl js (bad) xchg (bad) jrcxz scas jge (bad) sub rex.XB mov xor fistp out xor mov outsl scas (bad) or je in rex.WXB repnz outsl pushfq out xor cltd (bad) (bad) out fs rex.RX sub cwtl xchg test jle loop,pt adc (bad) pushfq push adc jbe vunpckhpd mov fisubr sar mov cmpsb andb jns stos leaveq mulb sbb jo (bad) jb cmc push jbe add scas push sbb rex.RX push jg in xchg insb movabs ljmp sti mov mov add mov (bad) mov add imul push icebp cmpsl mov (bad) mov xchg mov cwtl xchg jg cmp cmp or (bad) cmp ja xor (bad) neg movabs rex.WRX loop sbb cmpsl callq (bad) adc pushq sbb loope (bad) in outsl (bad) sahf outsb insl ja insl rex.WB rcrl pop movabs rex.WB sbb (bad) imul (bad) sbb icebp mov xchg repnz (bad) (bad) sub or xchg (bad) movabs ljmp popfq mov sti sbb imul cmp (bad) gs insb or mov (bad) je lods xor stc rex.XB in rex.WRXB sbb testb movslq loop fs data16 pushq (bad) (bad) jb,pt push orl (bad) cwtl mov (bad) (bad) push (bad) mul and mov loopne sub add scas je or rorb std fsubrs mov jge movabs test popfq outsb outsb in insl jl jmp xchg pop and fwait popfq add xor jbe cmpsb add sti jnp jns jle ss add jle (bad) lock je loopne pushq repnz (bad) add mov jg imul loopne adc jle push pop loope test or mov mov (bad) stc cmpsb (bad) (bad) je cmp xchg (bad) xor decb push scas mov jne (bad) and test enterq rex.WRX retq out cld (bad) cmp movslq ljmp retq cld jb cli or jmp stc (bad) pop movsb xchg (bad) lods callq and adc mov rex.WRB rex.RB scas in mov cmpsl (bad) outsl add mov xchg cmpsl cwtl ljmp add leaveq jl movsb mov (bad) gs cmp cmp jp or cmp movslq mov lods loop leaveq mov ficompl adc or jle (bad) mov push sahf fisttp jl sub js retq ds sbb and or (bad) and insl rex.W (bad) insb movabs mov and xchg lret (bad) pop jle in (bad) mov cld sub push add rex.WB clc test rex.R or push lea xor in (bad) mov decl xor sahf sub pop jbe add sbb add (bad) outsb test jg xor mov sahf jae imul setnp jg rex.X addr32 fiaddl mov sub xchg jmpq icebp (bad) jo jrcxz rex.WR push mov cmp jp pop jp xchg imul es sub xlat in (bad) lock movabs rex.WRX jo mov (bad) stos add (bad) rex.RX adc (bad) mov (bad) add movsl sub add rcrl fdivs or jg movsl pop mov jb cmc cmp (bad) cwtl loope (bad) mov imul mov stc adc movl push xchg pushq scas js push movabs jbe leaveq xchg jg cmp movabs scas xchg (bad) sbb jbe rex.WRX or insl pop movabs callq mov or (bad) lea cmc adc rex.WXB cmp sbb mov jl ss scas gs (bad) out mov sub xchg pop sub (bad) rex.R fistp movsb out (bad) fistp xor pop repnz (bad) movabs movabs ja fmuls jp (bad) rex.WRX pushq add (bad) jno test je push cmp (bad) pop adc mov repz mov mov int3 repnz add (bad) repz (bad) mov repnz (bad) xor fistp (bad) xor idivl mov addr32 rex.WRXB and jbe (bad) (bad) cli push (bad) xchg scas pushfq and sarl scas lods adc adc pushfq ss mov pop add (bad) in pushfq (bad) jmpq lods xor or rex (bad) repz jle insb cmp loope insl xchg scas rex scas mov (bad) xchg repnz push pushq sub pop xor push (bad) (bad) (bad) lock rex.WXB (bad) cmp (bad) rex.XB add mov out jne (bad) or cltd add push out mov fdivr lods add (bad) lods jmp jne mov fmulp jg loop adc sub nop repnz scas mov stc movabs mov jp cltd sub (bad) (bad) xchg retq xchg (bad) add sbb cltd rcll (bad) pushq sahf cmp add xchg andb and test add enterq notl (bad) loopne callq add lods xchg fild sti cmp fdivs sbb idivl add cltd add wbinvd (bad) mov jbe mov jg loope idivb mov movabs (bad) cmp cld sahf and (bad) (bad) jns pop add add pop (bad) jmpq out insb mull xchg lahf xor std adc rex.WRXB xchg in mov rex.WRX out (bad) test movabs mov jrcxz pop pop pop outsl test cmp (bad) pushq fisubl sbb push (bad) pop loope fwait test rex.WRB pushfq lret pop rex.WXB add loop,pt (bad) (bad) add or or pop sarl xor mov fisub add and or jne mov test sbb (bad) and (bad) rex.B mov callq mov push gs rex.X xchg (bad) mov cmpsl add rex.RXB out (bad) sbb fiaddl test jp jmp out push out lahf and shlb int3 add mov stos movsl add (bad) rorl jle (bad) xchg adc leaveq rex fs xchg jno rex cs jp movsb pushfq xchg shlb add cli (bad) rex.X jge loope mov mov rclb insl xor sbb ja jo jb sbb sahf movabs (bad) sub test shlb xchg fcmovnb out (bad) sub test and loop jle in (bad) rex.RB hlt add cmp movl mov fwait nop add mov (bad) imul add test (bad) jle sub add xchg adc mov mov jb mov xor mov (bad) (bad) jle mov (bad) rex.WRX jg sahf mov rex.X (bad) adc jo add push js rcrb adc out add fs xchg xor mov or cmpsb mov imul (bad) pushq rex.WRB xchg icebp (bad) fwait mov (bad) repnz leaveq adc ss clc adc ljmp (bad) out sbb int3 out sbb cmp or (bad) mov movb idivl repz xchg (bad) pop (bad) (bad) fiadd popq jno icebp sub cld test xor imul mov insl jge sbb mov loope rex.WRXB mov scas add imul fs movslq callq fmull popfq stos jns or ja or imul rex.WRB roll insb jg sub (bad) jmpq push mov xlat cmp insl add movabs (bad) rorb jo mov pushq cmp xchg in sbb or or add (bad) rex.WRX es xor add mov loopne cmp xlat mov or add mov scas sbb sti push addl xorb js stc mov add retq jno (bad) pushq xchg pop push imul (bad) je mov mov add retq addr32 mov add imul je mov jb xchg icebp add repz pop mov (bad) add andnps jl push xchg sbb push add rex.X jl out jb (bad) (bad) adc mov adc or add (bad) rex.W rex.WRXB (bad) stc sbb retq insb pop sbb addl (bad) rex.WX rex.RXB lea out sbb cmpsb cmc rclb jg fwait xor add mov push (bad) ljmp xor out cmp jo sahf (bad) lahf (bad) incb addr32 negl sarl xorl movabs xchg test test hlt mov ja sub (bad) scas loope lods negb (bad) mov icebp (bad) xchg (bad) loopne mov adc cwtl scas fstpl push xchg sbb stos add lock rex.XB lahf scas or mov xchg pop add mov pop xor push xchg adc sub push sbb add int cmp add rcr retq xchg push sub test (bad) sbb jg jns stc cmp (bad) jno jne (bad) (bad) (bad) mov mov jg mov (bad) pop pop adc test rex.WRX and rolb in (bad) out xchg insb jg nop js pop insb add (bad) (bad) jp mov or (bad) add test retq pushq jno fistp add lods out mov movabs cmp movsl cmp add cmpsb movsb mov add test xlat (bad) mov stc (bad) icebp push adc add cmpsl pop (bad) mov push add jbe (bad) xor jnp mov rex.R decb pushq fstl mov (bad) (bad) leaveq xlat xchg pushq leaveq sub lock cmc xchg sbb adc jbe sub popq js (bad) and rex.X rex.WRX ss xchg cs jp pop mov sub ror cltd add adc es (bad) rex.XB jle int sbb (bad) addl test xlat rex.RXB gs cmp cmp mov enterq enterq rex.RX rex.WB movslq mov test (bad) (bad) mov (bad) callq callq (bad) mov jp lods in movabs rex.WX iret (bad) pop hlt (bad) rcll fnstcw mov jrcxz (bad) icebp cli pop lret cmpsl pop cmpsb xor rex.R ficom sbb add jp in xchg and (bad) shr cmp loop movabs sbb int cld mov pop xchg movsb (bad) negl pop or pop and push cs rex.WR retq sti addr32 cmp jle insb lods rex.RX push mov js cmp push (bad) or es movabs mov in rex.WRX xchg (bad) rex.W repnz pop xchg mov sub rex.RXB fucomip mov imul roll sbb stc adc rex.XB fwait out pop es cmp stos rex.WX jg lcall xchg leaveq cld (bad) jl fcomps sub mov add pop jmp dec (bad) (bad) (bad) xor in jg rcrb or (bad) push sysenter mov sar (bad) adc pop mov insl mov lods sbb in sub adc lods pop lahf xor (bad) (bad) icebp (bad) (bad) imull rex.WRXB and in cmp (bad) imul push (bad) mov insl retq cmc xchg (bad) lahf pop movsl and js movsb xchg retq add movabs jnp mov push jg adc jl (bad) fwait and mov mov movabs (bad) (bad) cmp add jp imul ja rcll mov imul jg rex.RX addr32 (bad) or xlat or pushq (bad) pop (bad) cmp js (bad) xor (bad) cwtl (bad) scas shrb and (bad) (bad) repnz jg repz rex.RB test outsl jb mov adc or pushq jg sahf (bad) int3 mov ss add and jge movabs rex.WB cs mov push repz xchg xchg (bad) lahf mov pop rex sbb es cmp jns fstl sbbl pushfq pop push cmp (bad) mov rex (bad) pop movabs mov stos (bad) addl (bad) (bad) jmp idivl add rex.RB rex.WR or push push jae xchg (bad) std lea pushfq jle mov adc sahf adcl lret or sbbb jle mov xor int3 movq mov flds jae rex.B nop stos jrcxz imul add or test pushq (bad) mov sub mov sbb sarb rex.WX mov out sbb jnp mov jg pop (bad) (bad) lods (bad) jmp (bad) rex.WX add test ss cmp insl rex.WXB and cmc popfq test mov add rcll popfq sub shlb push xchg sbb fimull add xchg (bad) jl shr (bad) jle rex.WXB sub xchg rex.B sbb lods pop (bad) jp rex.WRX rex.RB jne add push (bad) stos xor push imul sub xrelease rex.RB push mov imulb (bad) jg (bad) pop jb xor sub nop (bad) add xchg (bad) xor callq add add and sub cmp (bad) addr32 sub test cmp out iret (bad) hlt add stc jg jns mov (bad) jp rex.WRXB add push lcall cli (bad) sub push xlat insl mov lods (bad) sbb jg jne mov add ffree adc test jge rex.X jg rex.RB pop lea adc fdivrs jrcxz xor fs jne (bad) fwait mov add cld sahf or xchg pop jnp add movslq stc push cmp add (bad) (bad) or pop mull add pop mov fcoms mov add divl loopne adc cwtl leaveq rex.WRB add pop cli mov or (bad) scas sub ja jl insl or push out push cmpsl add lock sbb shlb rex.XB or rex.B jns (bad) in (bad) xchg jbe rex.R nop mov (bad) or jg jle jae add divl retq jge rex.W movabs add xor stos (bad) cmp rex.RX sbb cmp rex.WX xlat cmpsb rex.R jp jle outsl sub mov add icebp out (bad) (bad) mov mov xchg adc add mov rex.W rex.WR rex.WRXB jl mov push or sub fwait icebp add pop sbb fisttp lock out jnp insl (bad) jb pushq xchg cmp repnz mov (bad) leaveq fs comiss fadd (bad) xlat mov rex.WRX or jrcxz rex and mov and rolb mov mov jle add sti (bad) cmpsl adc lods add fcmovu notb add out (bad) add loop xor fildll sub jle out cs adc rex rex.XB fnsave rex.WRXB sbb adc mov (bad) movslq sti lock rex.WRB rex.W rex.WRXB add cmc xor (bad) xor (bad) rex.WB jg rex.WRX sbb add js cld xchg adc (bad) add mov cmp lret jp (bad) addr32 adc jb jge sub (bad) xor pop add mov leaveq push (bad) jb mov repnz mov add int3 sbb add shrl cmp cmp or add movslq hlt add pop rex.WRX cmc push xor mov jle xchg movsb push jno push and add fs clc mov adc (bad) test sti data16 mov mov add cmp in mov (bad) jp mov (bad) sbb add sbb (bad) idivl imul (bad) mov xchg xor sti jle add push (bad) add and (bad) push (bad) rex.WRXB shll or es pushq sbb pop out xchg (bad) shrb fidiv lods popfq mov (bad) add xor xchg int lcall (bad) (bad) iret rex.WR fisub in xchg push (bad) pushq rex.WRX mov test test mov cmp (bad) rex.RB cmp cmpsl in lods add cltd rex.WRXB outsb sbb xor rex.WRXB sbb xlat pop adc add add cmp adc and or adc nop jp add sahf pushq or push imul adc cmp sahf (bad) mov jp rex.WRB movabs rex.WRB mov enterq js out shlb mov jle rex.RB (bad) (bad) and cwtl add fdivl sbb adc movslq jo mov stos retq add rex.RXB fidivr pushq jrcxz xchg insb clc (bad) scas rex.W xchg lock pop test (bad) mov add test mov outsl add (bad) rex.WX pop jns mov popfq add and movabs mov orl mov (bad) jge (bad) rex.R mov shrl lret pushq jg fisubrl (bad) adc pop ja add add cltd or mov xor test adc cli cmp cwtl lahf and fdivl pushq add adc (bad) push xchg rex.R callq jb stc rex.RX jp rex.WB adc enterq incb rex.XB fldl jmpq xchg cmp add mov mov cwtl (bad) rex.WRXB add sbb jno sbb mov (bad) (bad) in rex.W rex.WRB cmp stc out jp in push add mov js fs pushfq jae rex jne (bad) int3 mov pushq xchg add or add (bad) jrcxz jp and mov (bad) (bad) repnz push stc jle push xchg (bad) pushq jp xchg rex std mul lret enterq or mov mov jl rex.XB mov jbe (bad) (bad) or movabs and ds (bad) pop callq std sub stos rolb pop sub xchg (bad) rex.RXB loop rex.B mov (bad) (bad) cli push rex.RX mov and movsl pushq mov add popfq out shll and pop mov xor rex.WRB (bad) mov xor (bad) test mov add xor rolb and pop pop test (bad) fisub or movabs mov stos rolb std sahf sub pop sub xor stos xchg add je add xor (bad) add (bad) and jl mov loopne or incl add movabs mov xlat and insl xchg mov (bad) js ljmp (bad) jg rex.RX add loopne adc fnstcw xchg jrcxz jl pushq (bad) shll jnp test movabs or adc and xor movabs jp cmp lea and jp (bad) adc rex.X lock (bad) insl xchg rex.RB sbbb (bad) rex.WB mov xor loop rex data16 and rex.XB (bad) add cltd loopne loopne rex.WX (bad) (bad) push movslq push clc and std rol mov rex.B rex.RB cmp cmc xchg jl add (bad) cltd or xchg (bad) pop sub mov add rex.W data16 mov (bad) fs xchg xor jnp add and or in lret out gs cmp sub stos (bad) adc sbb lret jl and outsl sub push mov pop pop and inc or jno xchg rex.WR (bad) cmpsb rex.WB and int3 leaveq pop lods test lods adc cwtl movabs jmpq jp pushq mov rex.XB shr sti lret xchg fdiv cmp rex sahf rex.WXB js adc outsl (bad) int rex.W stos mov mov rex.B jns (bad) rex.W iret lods and sub adc cwtl xor orb or fwait jrcxz test sub (bad) (bad) loop outsl pmaxub movsl mov cmp and addr32 lods rex.WX cs add (bad) (bad) pushq (bad) outsb and ss movabs rex.WRX mov mov sub xchg cmpsl gs pop rex.RXB (bad) movsl push rcr mov fsub rex.RB or pop add (bad) jmpq fbstp sahf rex.WR push sbb xlat mov (bad) jbe mov stc movsl (bad) add pop cs sarl (bad) add jp lahf jae (bad) je or sub xchg add add jmpq (bad) test (bad) incl movabs sub xor (bad) add (bad) out pop je cmp add movabs and jmpq pushq add jle (bad) cwtl mov je xchg outsb (bad) add cltd or jge stos cmpsl add (bad) hlt xchg rex.RX and paddw sub push (bad) jb clc pushq (bad) (bad) mov addl (bad) sub mov loop add sub add or xchg jae and (bad) rcrb movsl xchg divb notb icebp test mov rex.WXB je sbb rex add xor rex.B rex.R (bad) decb (bad) (bad) fnstsw mov sarl int3 (bad) movslq jle xorl xchg and (bad) enterq fnstenv fimull xchg pushq xchg repz (bad) jle repnz cmc std mov jge mov lahf repz xchg int3 (bad) sbb movabs sbb add repnz mov int3 (bad) cs outsb add or test jbe (bad) movsl test push mov lea jle xlat mov rex.XB mov fdivrp lods push scas jmpq or rex.XB and fnop iret and sbb mov sbb mov xor jge retq add outsb xchg (bad) cmpsb and rolb jp jae fst div jp insb sbb add lock incb pushq (bad) shll rex.B jl rex.WRXB or loopne push add pushq sub lahf add (bad) jns and mov (bad) stc jp test jnp add fs adc rex.WRXB (bad) (bad) jle out xlat sbb (bad) (bad) xor jne invd add and jle int and out retq sub adc icebp pop adcl es (bad) iret add jbe mov push sbb adc repz add fimul mov cmpsb rex.W repnz icebp push adc (bad) push je cs outsb mov out mov (bad) add mov rex.RX or rex.XB roll mov xor adc pop xchg repz (bad) in jmpq js es (bad) sahf jne sub or adc jl and mov sub push pop rep callq (bad) lock pop mov jle jno mov pushfq add paddsb jge movabs (bad) xchg (bad) (bad) jle sbb pinsrw out (bad) cmp callq add add scas jrcxz and sbb mov or stos add push jp mov adc pop pop or add jae xor fistpll shll (bad) mov (bad) ds (bad) ja mov out mov push scas sbb sahf (bad) jp jmp adc push callq jbe gs movabs cli insl lret or imul push (bad) rex.RXB xor fidivrl es adc lret mov mov sahf rex.X retq mull push cwtl (bad) pushq xor rex.RB insl (bad) xchg pushfq sub push mov xor mov xchg add ss (bad) jae stos retq mov popfq imul push and lock hlt cmp adc xchg sbb (bad) retq outsl sbb mov js fdiv test sbb fnsave mov outsl sahf pushfq xchg (bad) sub push xchg mov jmp (bad) test rex.WX or jge pop cli int3 js xchg movabs mov je xlat (bad) add test xchg fbld mov retq retq (bad) jb (bad) jae mov sbb hlt and mov jg callq (bad) fwait int (bad) push sbb rex.RXB mov pop or cmp add (bad) mov xor (bad) (bad) add test fisubrl rex.WRX insb lock or mov loopne movabs (bad) enterq out pop xchg rex.RX rex.W sbb xchg lret (bad) jb add roll pop je jg (bad) lods jrcxz push (bad) add outsl xor fbstp je xchg add cmp test mov or jle pop sti insb movsl jg sarb je add and (bad) jle lahf insb rex.WXB addr32 mov (bad) in xchg mov jp mov (bad) mov fiadd data16 cmpsl in or jns stc mov pushfq push (bad) (bad) and insl and add int xchg cmp sub lcall addr32 sub and pop rex.WXB int3 cmpb xor (bad) (bad) mov add and outsb add xor data16 add imul (bad) cs outsb mov mov jg xor fisub shlb movabs or loope (bad) test je mov fs imull mov sbb (bad) pop add je mov lahf lret add gs jo insl cli stc test pop mov fwait add lea lods mov pushq scas (bad) mov jne rorl out xchg movsb jo test sub rex.WB push sbb mov nop (bad) retq rex.R roll test pushq stos cmp sti sub mov mov push push (bad) add je xlat enterq movabs mov add lods pop xchg xchg add (bad) adc add (bad) (bad) mov add sbb jp and (bad) mov idivl (bad) orb add mov mov rex.B (bad) (bad) mov sahf stc (bad) scas iret jmpq roll sbb movsl in (bad) out add test nop es callq (bad) mov add xor jo,pn (bad) (bad) xchg fdivrl mov xlat add pushq popfq jmp (bad) (bad) add pop mov (bad) pop roll decl sub loopne sub add std gs mov lods (bad) mov (bad) jb fdivrp push out movsb ficom stos xlat movabs nop rex.WRXB (bad) in pop and cmp movabs xchg stos stc jp jns (bad) (bad) push out sub adc add add xchg jno pop sub std and scas pushq sbbb outsb cli mov sub scas push rex.RX in adc and mov push insb adc movsl rex.RB stc in sub xchg xor (bad) rex.WRB sbb xchg xor rex.RX cmp or sarl cmpsl stos add loop rex.WRB ja add adc cwtl mov scas add pop movabs mov add mov fsubrl jmpq sar (bad) add adc pop add cmp xchg mov movabs es and push iret clc add xor pop xchg rex.WXB sub movabs insb push mov rex.X movabs xor jmp fwait retq and cld (bad) cmp movabs decl (bad) sbb or (bad) test or mov lods mov or fstl (bad) rex.WRXB jo cmp sbb sahf and mov pop mov rex.X test (bad) jns movsl mov add add (bad) (bad) insl jle (bad) int3 sub xchg (bad) push sub gs test sahf (bad) adc push or add mov out xchg sbb (bad) (bad) sub sub cmp xchg add sbb add mov xchg add movabs callq frstor sarb test movabs test rex.X xchg xchg (bad) (bad) data16 jmp jg (bad) mov and repz fild orl push idiv mov push stos add (bad) add mov movabs jge adc pushq jl jp xor xchg cmc subl rex.WXB mov cltd add sub cmp fdivrl pop movabs xlat test mov jb,pt popfq mov push cmp out add loop or sub jg sti movsb test mov rex.WX rex.XB js and (bad) lahf rex.WRXB loopne rex.WR out rex.X jnp pop negl push or test sbb (bad) jne add (bad) insb push mov (bad) push rex.WRB and mov cld or or mov cmp sahf rex.RX jg (bad) int3 adc lods icebp jp scas cmpsl mov (bad) (bad) add (bad) fnsave push add clc (bad) mov jmpq jae adc add jle and (bad) add jrcxz rex.XB out rex.X xchg rex.X push andb mov jl lods (bad) jne (bad) ds enterq mov sub notb mov testl (bad) jo movabs rex.RX jge clc nop lods fcmovnb out push pop mov xchg iret (bad) fiadd (bad) (bad) xor cmpsl mov adc rex.XB cs cli test sub rex.R jnp mov incb jno loop rex.WRXB scas xchg cmp in out mov mov sub xchg jl (bad) (bad) lea js jle je mov push sbb test sub jne xchg std and sbb and out xchg jg cmp js outsb (bad) (bad) xor data16 mov adc jb jge hlt adc rex rex.WXB add data16 movabs (bad) outsb or xchg mov outsb cld mov rorl in (bad) je jge pushq (bad) cwtl jg data16 sbb (bad) stos rex.WRXB shrl (bad) sahf push xor loope outsb add mov popfq mov xlat xchg in (bad) lods (bad) jrcxz mov push (bad) pop pushfq or cmp adc and cmp mov fadds adc (bad) xor xor jrcxz cwtl jns cld je add rex.RX or add fisttpl in adc cli adc ja and pop jnp jge xchg (bad) int3 fbld test or insb in (bad) cltd cli jne xchg pushq mov testb punpcklbw sbb push xchg mov repnz (bad) pop in rcrb push hlt push jne jnp (bad) cmp and loop sti jne add cli mov adc movabs jrcxz push movabs jmp add jno mov loope jns hlt sub mov xor fcom imul sbb or add callq pop xchg insl add outsl pop imull jg js cld cmpl xchg out insb movabs fcompl xchg xchg mov mov fadd imul leaveq ja xlat add push jge and fs (bad) test push jnp jle mov cmpsl mov add jp push hlt mov push imul fimull loop movslq callq xchg xchg mov mov rex.WB cwtl add movabs or mov sub mov and push rex.W xchg fnstcw xor jl (bad) xlat jbe sub in mov adc jle rex.RX (bad) add push (bad) js mov cmp rex.WRXB jg sets rex.B sbb mov pop rorl loopne rex.WXB xchg xor out cli rorb jb lods add stos mov cld rex.RX mov cli lahf lods in sbb rex.WR pop cs sub rcll lea or and mov xchg outsl push movabs mov test je (bad) pop (bad) nop mov stos jbe and (bad) pop cmp je out mov loop shrb jrcxz add rex.R fldl2t mov (bad) xchg (bad) mov jle (bad) fnsave and mov add insb lock push (bad) sub push mov pop (bad) rex.WX jnp out cmp rex.WRX xlat ja jle fwait je pop scas callq sub (bad) add jmp loop add movslq (bad) add je ss (bad) int3 imul add (bad) mov push lret hlt sarl add cmp pop (bad) lret bswap rex.WRX rex.R xchg sub clc xchg or add rex.RXB rex.X add sub rex.W mov jle cltd pop iret (bad) mov mov push or (bad) xchg (bad) add add in orb and mov jmp (bad) xor fs adc mov add (bad) sbb add shll test add insl enterq jmpq rex.WR xor pushfq in mov push pop mov xor movsw (bad) xor test jb sbb (bad) sahf notb jb add movabs mov add xchg out jnp fwait gs adc out (bad) rex.WRX and (bad) push loopne fwait incl shll out cmp push add xchg push mov out jb retq rex.WXB (bad) (bad) rex.WRXB bnd xchg jno cmp (bad) mov rex.RXB fiadd iret (bad) xlat je push or mov rex.WRXB pop mov fldz sub mov in (bad) jle rex.R fnstcw adc jp jb iret loope jge xchg (bad) insl mov xlat pop xor jmpq and (bad) jg movsl jns (bad) jp cmp loop (bad) rex.WRXB rex mov mov sub jnp add xadd add shlb pop and repz or xor out add jnp cmc lea rex.X callq stc rcr xchg fs movsb (bad) outsl movabs xor clc mov mov scas (bad) rex.XB movabs bswap xor xchg xchg outsb add cwtl rex.RXB jp icebp jg fwait stos rex.WR rex.WRXB (bad) xor xor mov (bad) sbb (bad) jge cmp rex jnp jmp pushq adc pop rex rex.WX (bad) rex.RX add rclb rex.RXB adc (bad) sub sarb rex.WRB ja sahf rcll cs mov add icebp rex.WX xchg iret sub mov add (bad) (bad) fisubr xchg sub pop insl (bad) (bad) mov mov jg (bad) xchg mov adc repnz jbe rex.RB mov fwait mov sub icebp push pop jle add pushfq jg (bad) (bad) mov and fwait mov rolb mov loope sbbl cmpsl out pop pushq imul outsl mov movabs (bad) scas add js (bad) mov imul mov pop add rolb movabs mov push repz rex.WRX add (bad) add movslq rclb and repz cmp sbb or add xor xchg cli sub sub and push mov push sbb stos sbb lods pop icebp and rex.WRB out pop lods adc loop ss andb adc rex.WRXB mov pushq lods (bad) sub rex.B and mov fcoml jmp jp (bad) pop (bad) mov jge xchg cmpsb movabs sub mov (bad) cmp in popfq add lods push sbb (bad) and (bad) add sbb mov sub cmp add movslq (bad) and (bad) in leaveq (bad) xor pop add push scas pop jb insl in repnz rex rex.RXB loop cmp push fisubrl mov mov in scas cmpsl mov js jge gs jg pop outsl jrcxz mov movabs cmpsb lea js lret clc fcompl retq imul fiadd in mov (bad) stc add xchg out lret out mov (bad) test movabs mov jae std pop add sbb rcrl rex.WX (bad) ja (bad) (bad) and pushq add movabs mov add (bad) out (bad) adc cmp add hlt pushq loope jae rolb (bad) add rorl jle mov rex.WB lock jp mov (bad) mov jle cmp xchg rex test sub or cltd cmp sub (bad) xor movsb push rex.W lods fdivrl (bad) lahf jmpq xchg lret push mov jle adc cmp rolb (bad) test rex.WXB sub add add movsb rex.XB mov pop xchg add or std mov rex.WX (bad) sbb hlt fsubr rorl (bad) fisttpl xor rex.RX adc incl mov jmp repnz adc mov or cld mov jno push loopne ja lea adc (bad) xlat stos rex ss add pushq (bad) add jo lret outsb or fwait jp mov adc data16 sarb sbb adc (bad) mov out sti mov fisttp stos (bad) movabs jne pushfq cmp (bad) movabs stc jl scas sub rex.WRX rex.RXB add out rex ds xor push (bad) jns not xchg push add cmp jl xchg xchg incb loop (bad) (bad) std jmpq sub add mov xchg pop int jp,pt je push (bad) ja add rex.WRXB jnp add add pop fstpt leaveq sub rex.RB pop cltd lret (bad) adc mov adc and (bad) push mov mov mov movslq xchg iret add rex.WXB (bad) xchg sbb rex.RX or jae (bad) lahf jp add mov adc data16 sub scas adc jp xchg mov sbb dec pop rex.X repnz add scas rex.WRB jne xchg fidivr jle out sti jg retq (bad) mov pushq xor (bad) (bad) xchg fdivrp mov add jge cmp fwait lods pushq (bad) (bad) (bad) in jle xchg std (bad) insl mov cmp stc in and cmpsl mov push (bad) (bad) rex.WB rex.RXB setb movabs sarb or jmp int3 jg jnp test stc (bad) nop xor mov jle fnstenv cltd sub rex.WXB and shrb pushq (bad) adc cmp jbe xlat add xchg xor je loopne jns pop imul xchg rex.RB fildll mov (bad) movsl pop xchg mov push add rcl jno mov jbe (bad) addb add add add xor sub movabs jp sbb rex fmull frstor outsb testb push fwait or xor mov fsub add add rex.WB jle pop (bad) mov negb sub cmpl mov sbb jl xor xchg out jmpq sub ja mov ffreep movabs or rex.RXB movabs jne push jmp rex.W fidivrl lea rex.X imul add mov movabs cmpsb add (bad) rex.WRX lock fstl sbb fs out out (bad) adc jnp fmull add enterq cli sahf push jp rex.R rex.WRXB and pop insl and and imull sbb or xchg mov pushfq enterq mov lods (bad) xor outsb pop fdivs nop add callq or movsl scas out rex.RX movsb loopne jmpq repnz lock rex.WXB jb or cmp sti mov movsl add mov (bad) iret add lock je int add mov add or movslq addl add cmp (bad) add ds add jge mov (bad) rol cmpsb in mov (bad) std cmp jle mov jg (bad) push jp lea cmp jmpq loopne addl (bad) fwait rex.R add push add add stc sti sbb sbb cmp movabs cs lods xor pop (bad) pop or adc cmc mov shll push (bad) scas movabs (bad) rex.WR (bad) loopne or xchg jle cld loope (bad) leaveq fs fisubr sub xchg adc rex.WX rex.RB mov mov xchg rex.RXB mov shrl pop out jg push jne lods add mov in cmc mov cmp jp fisubl pushq jno mov (bad) enterq mov sub sbb jge mov rex.WRXB lcall lock cli jp imul jb mov sbb xor mov outsb vpxor (bad) mov sti pop add and rex.WB (bad) lock xor std psubusb loop or adc adc ja cmpsb push add jb mov in pushq xor movabs mov add mov xor rex.RX add sbb fiaddl add mov rex.W in (bad) movabs jp xchg (bad) jge add jnp mov xor stos cmpsq pushfq std pop sahf incb add lea xor (bad) add cmpsb rex.WRXB mov fstpl adc outsb out (bad) add jns xchg ds movabs adc jb out cmp mov (bad) cmp add sbb mov add (bad) jns (bad) or js push (bad) sub rex.WRX jg or cmp pop jmpq xchg mov cwtl xor clc xor movabs sub rex.WX stc mov movabs (bad) and mov rex.R or and pop mov jmp mov lret test push leaveq and pop loope icebp movabs mov sub rex.WRB repnz and add xor mov insb push push in (bad) jae mov sbb test add cmp xchg cli rex.WRB lret flds (bad) (bad) test rex.R rex.W cli cmp hlt lock insb or add jno std rolb jbe mov cld sbb jg fdivs jle adc cmpsb and movabs sar stos iret sub (bad) movabs (bad) cmpsb cmpsl xor pop jbe sub or rorl (bad) add int3 mov jge mov movabs or add cmp pushfq iret or mov (bad) rex.X mov movsl add retq stos movabs push jae jp xchg sbbl pop in jg add lods add lods movabs (bad) xor ss imul and (bad) clc mov add and outsb fs and xor pop cld mov cmp andb movabs ja sti mov frstor jmp fs cwtl leaveq add retq cmc ss add sti (bad) sub xor rex.R movabs fdivs sbb fsubrl idivb and or mul lea (bad) (bad) jp xchg (bad) jno sysenter rex.WB add xor push jnp and xchg rcrl fistpll add add (bad) cwtl pop add (bad) pushq (bad) and mov add popfq movabs jle cmc movaps mov sub mov push pop (bad) mov xor rex.WX int or rex.WRB lock iret xor popfq insl mov data16 jp jne addl rex.RX rex.WR (bad) xchg mov xor fadds pushfq (bad) adc jb sbb pop (bad) sahf rex.W rex.W fs (bad) pop scas (bad) clc add or pop jle fwait mov imull add std popfq (bad) or loope mov fadds adc cmpsl rex.XB cs sub add movabs (bad) in (bad) jle lret add or (bad) mov mov mov xor sbb sar (bad) fild (bad) lret (bad) addr32 scas sbb stos leaveq (bad) scas imul lods cmpsl jrcxz and jmpq jmp (bad) adc sbb cli (bad) (bad) pushq mov adc push (bad) pushq out (bad) lock mov or jmpq mov (bad) pop fcomip (bad) scas (bad) mov adc (bad) jle fisub loop and xchg test jbe (bad) xor fist icebp pop (bad) jge add xchg sarl (bad) popfq movabs cs or and jmp in repnz xchg pop jrcxz mov xor test test rcrb imul or mov jns rex.WB rex.WRB add repnz xchg pop and iret add (bad) (bad) iret sahf jns mov test fisubr (bad) outsl pop repz (bad) pop xor adc pop xlat sbb cwtl cs jbe (bad) jbe fsts mov adc ja (bad) jmpq mov pop (bad) sub (bad) cmp or (bad) jl and fwait and cmp jle jb (bad) shlb je (bad) movabs jle push cmp repz xor fldt rex insb push shll sahf scas rex.B pop or sub mov insl mov jl or xor test es rex.WRXB (bad) (bad) retq jne cmc or test cmpsb out pop es jge (bad) stos pop jle std cmp (bad) in sti lret out and outsl scas xorl rex scas scas (bad) pop je nop (bad) pop (bad) mov movabs jge mov add gs mov rex.R jrcxz rex.B jmpq add pop fsubrl testl sbb (bad) and (bad) stos cmpsb adc and and (bad) fdivrl push fldenv outsb pop (bad) cmp xchg lock mov jp or pop fcomps push pop in (bad) retq imul (bad) rorl mov jb (bad) xchg mov outsb push jns push (bad) pushfq std (bad) mov sub (bad) test ja idivb sub data16 jmpq rex repz mov rorl cmp xchg pop (bad) clc xchg sbb pop repnz lods ss cld (bad) mov rex.W ss out rex.X mov push rex.XB cmc nop mov jl (bad) pop sub imul jbe leaveq rex.XB clc pop mov (bad) scas cmp rex.R (bad) (bad) pop add (bad) rex.WRXB rex.RX (bad) pop rex.W repz sbbb pushq sub jmp lret xchg add and movb pop jle out (bad) add je (bad) mov mov xchg fiaddl (bad) clc insb leaveq popfq lahf sbb rex.R jbe movl pop lock mov xor xchg mov (bad) stos add loopne popfq xchg xchg mov jb jg loope (bad) fs rex.W pop mov pop (bad) sub rex.WRXB jp adc mov sahf sahf outsl hlt add cmpsl xchg pop mov add rex.WB sbb je rex sub (bad) data16 cmc je stos test fimul jbe incb rex cmc icebp out add pop leaveq loope mov (bad) imul cwtl (bad) sbb xor pop xchg pop xchg clc mov out (bad) add jge xlat shl movabs sahf fs cmpl jg cmp pop lods rex.R cmpsb add out rcrl (bad) mov add jl movabs rclb mov retq cwtl (bad) mov out or (bad) xchg rex.X repnz movslq cli mov hlt movsl (bad) lea jge mov cmp stos int insb rex.WR xor xchg mov clc loop decb rolb adc (bad) cmp add cmp js movabs pop (bad) cmpb (bad) sar lea (bad) add mov xor add outsb cli adc mov adc je cwtl mov rex.W rex.W push add mov xchg and add sub retq add fstl out lea ffreep rex.W movabs (bad) xor movsb xlat rolb or (bad) or movabs es add mov out imul rex.WRXB ss outsb rex.WRXB lahf movabs sub (bad) lea (bad) cld sbb rex.WXB es data16 lods cltd mov test rex.XB and mov rex.WB pop jg (bad) test xor bnd xchg cmpl loope add mov jae mov add (bad) jnp rex.RX rex.X ja,pn jp movabs std add and sbb add or scas pop mov or outsb xor std cmp add or sbb rex.W loopne (bad) (bad) sub cld pop out imul mov mov outsb push xchg icebp and jle rex.RX mov add lock cmpsl xchg in push fist out add jl (bad) xchg mov mov cmp out xor js push lock (bad) rex.W (bad) fmull cli (bad) (bad) add (bad) jle (bad) (bad) lahf add stos mov jo mov add data16 xor movslq lods loop sub push sub jge pop (bad) add rcrl stos (bad) lea iret mov rex pop rcrb lcall js sub fimul mov lret (bad) pop insl pop adc push test iret mov and mov (bad) ds and decb pop addr32 jge mov or pushq mov (bad) callq add out movsl jae mov fidivrl add xchg test rex.WB xchg fstpl xchg retq (bad) jmpq xor rcrb xchg stc (bad) cmp or mov and leaveq jmpq mov lods pushfq jg cwtl push jns test jne int clc rex.WRB ds xchg or sbb xchg push lock in cmp pushq jnp retq (bad) mov mov (bad) (bad) jo add pop jns jge jne test pushq movabs push mov in callq test and mov rex (bad) lods add or xchg xchg add stc jns add push cltd add mov jrcxz jbe add jo cltd add pop std sub incb stos pushq shlb lret sub jne (bad) mov rex.RB add jle sbb rex.WRB scas rorl or jnp scas or fild mov in roll jmpq ficomp mov rex.WRXB add movabs (bad) (bad) add (bad) xchg rex.RX outsb movsb imul movslq add (bad) addr32 cmp push callq test rex.WRXB popfq add or rex.R (bad) jo leaveq cld push fdivrl add scas fs out cwtl (bad) (bad) cmp je test jo mov xchg add or xchg add xor add (bad) enterq (bad) (bad) xchg mov or (bad) mull (bad) add (bad) add cmp add pop and xor jae mov jp retq push pushq and add rex.WRB jle mov pushfq rex jp,pn (bad) xchg or rex.X or callq sbb xchg rorl (bad) add in cmpsl jl loop lea out sbb adc add pop ja (bad) outsl mov iret movsl flds rex.WX mov fisubrl rex.XB ss outsb or adc imul add loopne jmpq gs pop add movslq lret (bad) mov sub rex.WR mov (bad) jno (bad) movsb lcall adc xorl cmp (bad) sub ja (bad) lahf js rcrl or (bad) fistp outsb xor int3 or fisubr mov jne push xchg (bad) cmp or push adc outsb leaveq lods cmpsl movslq rex.B sub retq jrcxz movaps test cld or jmpq callq (bad) jno jl jp iret jge xchg (bad) (bad) pop (bad) sbb mov loope rex.X nop rcrb xchg jmpq pop lods adc ss lods jbe outsl loopne or add pushfq xchg or cli mov sahf (bad) jp rex.WB subb repnz icebp (bad) fldt sub and push or lahf jne js (bad) test push ja movsl sbbb (bad) nop (bad) add std xchg cmp repnz add cmp add outsl add (bad) push test jge js (bad) xchg push push cli leaveq sbb sbb push xchg notl mov loope imul fwait pop icebp adc rex.WR mov mov sub stos sbb sarl sbb push movabs or mov (bad) add sub (bad) (bad) pushq rex.WX adc adc mov (bad) xchg add rex.W rex.WRXB (bad) (bad) add cld test cmpsl (bad) (bad) (bad) xchg or insb outsl roll insl (bad) repz scas and push add leaveq test fnstsw or jl (bad) cmpsl mov cld xchg push int mov outsl callq xorl pushfq adc mov xchg xchg fsubrl (bad) xchg xor jbe cwtl jo rex add fs (bad) cmp mov cmc lfs fdivrl sbb jbe sub jg mov mov xchg rex.WX movabs (bad) outsb sarb fwait (bad) andl (bad) jge lret pop cmpl (bad) cli scas (bad) pop mov pop in rex.WR ja push jno loopne (bad) or mov retq mov sbb addr32 out add in push xor cmp in sub add sbb pushq mov fiaddl incb jrcxz fistp movslq (bad) jbe sub sub and out add mov jbe xchg fcomip (bad) callq (bad) lret test pop js pushq add scas rex.WRB test fs mov jg (bad) mov mov (bad) loop sbb xor add rex.WXB es addr32 xlat and add or fimul pop mov mov jle loopne lods iret cmpb mov sbb or mov fldenv scas (bad) pop or fldl pop sbb insb or rex.WB (bad) shlb test js pushq incl paddsb test je retq (bad) (bad) es add rex.WRXB gs mov jae rorb mov lods jle rex.RXB shr mov (bad) mov rex.WR lods rex.X nop imul xor (bad) rex.X movabs add std retq rex.WX data16 rex.WR (bad) retq (bad) and adc and pop (bad) jbe loopne adc retq and jae adc and ltr mov jb add cli pushq mov leaveq fsubrl (bad) outsb repz (bad) mov xchg fiaddl (bad) (bad) pop adc movsb push push cmpsl rex.WB or je xor movabs movabs fwait std mov test pop shrb xor (bad) imul add lahf out jp hlt lret (bad) jno nop cmpsb rex.WRB sbb repz (bad) mov push leaveq enterq rolb add mov rorl (bad) outsb mov mov lahf cmp sub out int3 addr32 fldenv iret lods lock and xor (bad) push jg rex.X lods shrb (bad) mov jo ja sahf jbe fldl (bad) popfq cmpsl push movabs jb loop jo lahf divps repz push callq stos cmp mov (bad) add gs push (bad) jmp popfq add jno fcoml callq mov out add push lea jns callq and xor int3 hlt add adc test fs cs add add mov fwait rolb rclb movsl adc add adc (bad) stc add fwait movabs push insb adc rex.W loope jg and lret mov pushq add lret and rex.RXB jrcxz or scas (bad) or sub add out (bad) (bad) (bad) cmpsb in add jnp push (bad) xor decb (bad) (bad) iret leaveq insl mov xor rorl outsl sbb (bad) and add lods cs adc add mov (bad) iret lea ds xlat (bad) pop rex.X sarb mov and add cli mov lret fcmove sbb lea xchg in add or add rex.WXB jp (bad) in cmpxchg (bad) mov jle divb in rex.WRB jg pushq jg and cmpsb mov jmpq cmp in push (bad) adc fs (bad) xor test sahf lahf (bad) rolb test sbb add sti rcl rex add mov jge add xor add pop ds lock sub cli sbb (bad) movabs jne jge mov adc pop ficompl std jrcxz scas sbb jne movabs fidivrl idivl and shrb and addr32 add stos mov lods push iret mov jp jno insl (bad) sub mov sbb pop mov adc lret clc int3 cwtl frstor testb add add xor add outsl push rex.WR fldcw rex.WRXB iret xchg ja mov loop clc jp sub cld callq rex rex.RXB fwait rex.WB insl adc stc jg nop sbb or jae or mov xchg pop hlt jl jb movabs jp sub mov cwtl movslq mov push (bad) rex.XB xlat push add rex.RB mov pop lahf (bad) mov pcmpeqb in jbe add insb (bad) pop andl add jno push add or (bad) push std add jns rex.WXB int3 outsb add rclb jmp and add push lods scas leaveq rex rex.WRXB add fs sti pushfq xchg and jge fistp in test sahf xchg jrcxz cld add sub jmp jo jb and sbb (bad) adc jmpq cmp insl mov rex.WR (bad) mov and mov (bad) add mov xchg or std rex.X pop push icebp rex.XB cmc imul sub retq sbb rex.WRXB (bad) pop xorl (bad) fstpt rcll stos sbb fprem1 or mov rorb lods push (bad) add sarl movabs pop and xchg fsubrl pop scas (bad) (bad) mov icebp add (bad) movabs not testb (bad) test rex.RX lret mov xchg movb pop retq rex.RB loope adc movabs movabs cli mov retq jp jo and push xchg (bad) adc sbb mov push movabs (bad) popfq fildll retq sbb add adcl (bad) (bad) rex.RXB (bad) test (bad) push pop fs adc jbe outsl rex.WXB jp movabs add test (bad) incl cs xor test imul xchg lret jle pop xchg (bad) sub mov cmpsb fisub rex.R jmpq repnz sub add repz (bad) jb mov add (bad) mov movslq (bad) mov sub mov rex.R push addb orl xor fs push (bad) fwait rex.RX cmc pop jge (bad) test rex.WRXB nop and add es sub std jb lret leaveq (bad) pop mov or sbb push outsl (bad) or xchg adc out jb jle mov test add cmp jnp add push lret push add test mov xchg imul je scas push xor (bad) movsl push rex.WRXB xor xor (bad) pop add ss jle rex.RXB movslq push push idivl (bad) cmpsl (bad) adc mov xchg jge cmp rex.WXB insb (bad) mov mov mov push scas (bad) fs (bad) fisttpl lahf es jg fcmovb addr32 je shr shrb pushq scas rex.X rcll test pop or mov rex.WX sub and (bad) sub movabs out sub outsb sahf loop sbb add fdiv cli sub rex.RX rex.WRX in mov test (bad) addr32 cmpsb add mov mov add add and add jbe fwait (bad) or gs fnstsw adc fmul xchg jle outsl sub xlat xchg push pop (bad) pop insl and (bad) (bad) add retq adc (bad) push (bad) jl out adc add lods outsl mov (bad) xor (bad) es cmp cltd clc cmp xchg movabs test push mov (bad) enterq jp rex.RXB (bad) rex.X (bad) xchg outsl retq push movabs test xchg sub stc lea loop xchg add (bad) adc jle jno (bad) xchg rex.X rcrb mov pop roll lret in outsl sub mov jg xchg ja jle rcrb in (bad) jg scas and add (bad) xchg retq and cs es cltd outsl loope sbb jg mov mov in cmp loop xchg (bad) push repz push loope test cmp pop callq xor bswap jle or xchg xlat movabs add add add cld (bad) lret rex.RX jg mov xchg sub jrcxz (bad) in movabs fs (bad) test xor movabs or (bad) sbb and jl pushq rex.RX add cwtl add pushq ds or mov mov int3 pop or int (bad) mov jno add sbb and jnp rex.W out (bad) add xor mov sub callq pop (bad) sbbb test ss add xchg leaveq (bad) (bad) popfq jbe add fistpl mov jl or test std insl iret jg xchg add add cmc push test hlt pop imul (bad) xor sbb lea fsubs and mov mov addr32 rex.WXB test scas retq mov xchg mov sarb jo rex.WRB js mov insb rex.WB in scas add icebp std mov jp outsb mov push fsubl xchg (bad) xchg ss (bad) sbb (bad) fstpl add cmpsb mov xchg and adc stc xchg icebp cmpsl es jb add xchg rex.RX rex.WRB (bad) imul imul (bad) fs loop mov lods outsb add int add sahf retq or push or mov repnz je sar (bad) (bad) ss retq (bad) (bad) (bad) repnz jb (bad) pushq adc add mov rcrl (bad) add pop leaveq jns cmp (bad) jnp sarl adc rex.WRX mov lods stc jmp and jg outsl (bad) jle adc movabs (bad) nop cmpsb sbb cmp rex.WR rex.WXB or (bad) mov rex.RX xchg movabs xchg fstpt insl (bad) (bad) lahf xchg mov xor pop add out fstps add mov je cld pushq gs add cli (bad) adc mov jp in jns add movsl subb add rex.WRB mov clc cwtl add jge pop pop (bad) pushq mov mov sub stos loop pushq (bad) (bad) pop movsl (bad) (bad) iret add mov lret repnz (bad) (bad) hlt scas jle retw test pop jg pop movsb (bad) mov insl fs and push out (bad) push rex.WRB xor (bad) sahf rex.XB push jle movabs (bad) (bad) fstps rex.XB imul add mov adc shrb sub cmpsb xchg (bad) rex.W (bad) test sbb cmp cmc negl adc push jbe sub movq xchg sbb mov mov insl sbb enterq lahf mov sub pop xchg cmpsb xlat push mov mov rex.WX mov xor mov rex.RB loop rex.WB std xchg stc jl int rex.B movabs rex.RXB out callq or and fwait (bad) xchg add imul (bad) rex.B in mov add es int3 sbb cmp (bad) (bad) pop jrcxz mov add scas xchg mov jnp push jmp mov cmp (bad) cwtl add movabs rex.WB cs movabs mov fcoml add cmpsb lods pushq es add int xor pop jg add cmp (bad) scas out in movabs add addr32 add (bad) movabs add sub roll sbb movabs add jmp sbb rex.WB stos rex.WRX rex.RXB (bad) rex.WRB add sub rex.RXB rex.WR and mov rex.B sbb stos add imul adcb comiss cmpsl jg test (bad) mov je xchg test in test add rex.WRX rex (bad) xchg rex.WRXB mov rcll outsl xor rex.RX lret (bad) mov push sbbl (bad) (bad) rex.WRB or mov loopne jg (bad) jnp push enterq xchg std sti lret rex.W movabs xor icebp rex.WR rorb lret push pushq nop (bad) imulb or sub pop or (bad) push out sbb sbb lock loope rex.WR mov sahf add (bad) ror movsb rex.RX rex.X outsb rex.WRXB jb divl cltd cmp fwait mov out add rex.WRXB retq fs xor movabs add pop mull and ds mov xor mov mov in fsts sub rex.W movabs jnp mov jo push xchg rex.XB cmpsb (bad) sbb sahf add mov push pop cmp jb xchg adc sub movabs hlt rex.B pop cmp in fisubl (bad) mov pop sub mov push adc insb pushq pop mov add rex.WX (bad) and push (bad) mov (bad) test cmpsl sahf add callq rex.RB loop incb stos out jle (bad) int3 (bad) (bad) leaveq mov (bad) clc push or rex lods jmpq sbb test test sahf cmp outsb jns stc jmpq xchg nop cld sbb (bad) push and pop fisubl push cmp mov fwait rex.WB jmpq (bad) movsb cld jge stc ja sub mov (bad) pop movhps cmp (bad) int3 (bad) jo (bad) xor jne rex sahf rex.WB addr32 jbe add fldenv mov cltd xchg mov (bad) icebp outsl (bad) add scas mov idivl movslq and xchg adc fimul shrb pop adc scas adc xor add push cli pop xchg rex.WRX ja xchg xor rcrb (bad) or sbb in stos addl (bad) (bad) lods cmpsl int3 pushfq sahf lahf rex.WRX (bad) adc jns jae imul stos (bad) xchg xchg and and (bad) popfq push or lea cmp repnz mov lods ltr scas repnz adc add (bad) insb rex.W xchg cmp nop repnz rcrl jle lods rex.WXB and rex.X jl fcomps pop jl sub mov adc pop xor jo sbb movabs and xchg mov leaveq jbe callq lcall retq adc jmp sbb rex.RB scas ficom clc shr shrl dec adc xchg (bad) xor mov xchg outsl je hlt movabs lods or (bad) fstps stos cmc rex.WB jae cmp jle loope (bad) fidivl stos adc ja lock pop test (bad) enterq jle (bad) pop (bad) and (bad) out jne mov cs cwtl xor mov lret pop divl add (bad) clc sahf jno (bad) rex.WRB xchg outsb cmp xchg jg in xchg cmp adc (bad) rex add (bad) clc xor lahf xchg imul add faddl mov push clc mov and cmp and fiadd rex.WB jmpq in pop xchg jp fiaddl imul xor (bad) fildll or rex.WX (bad) addr32 mov lods sub adc sbb int cld mov (bad) add stos fdivr (bad) jb out fiadd pop xor repz rex.WRB xchg jl (bad) (bad) xlat add out rex.XB retq (bad) jb cs rex.R (bad) add je data16 push (bad) sub rcrb add (bad) pop (bad) cld push sahf rex.WX orl pop cltd or and add (bad) sarb (bad) (bad) callq (bad) gs (bad) rex.RXB rex.WRXB mov rcrb sbb mov mov add adc and xor imul mov sub or xchg cmpsb cs (bad) xor (bad) xchg cld movabs push cli fidivrl or mov sub lahf jae rex.W cmp mov repz fsts mov (bad) (bad) cmpsb enterq xor mov jnp pop adc sbb xchg pushq mov pop add fsubl add xor mov (bad) add cs ss outsl and stos push pop sbb (bad) cmp mov and jp (bad) mov cmc sub push xchg test add (bad) pop sbb mov lahf pushq sub outsl add sub cmp add rex.WRXB add push mov push and xchg (bad) outsl add mov leaveq jle jae test or jg and repnz add not or movsl mov and pop xchg mov rcll fdivrp (bad) jo cld (bad) sub jle and mov (bad) ss movabs je fidivrl sbb rex.WB add push xchg sub adc (bad) cmc insl pop pushq xchg rex out mov loopne cmpsl fnstenv add jge xlat imul push loopne (bad) push (bad) js cmc scas add retq (bad) pushq (bad) push add sub rcll sub sbb lods add nop mov loop sti push add pop (bad) rex.XB (bad) (bad) fsubrl jg jb xchg rep rolb xchg xor rex.WRXB (bad) and rex.X rex outsl sub scas add mov mov mov fnsave scas rex.WB mov xchg in retq rex.XB xor jle xchg imul add jbe push mov fmuls fdivrp cmp movsb add mov mov fldenv rex.RB rex.WRB add (bad) cmpsl out mov (bad) xchg push jge movabs pushq jb mov mov adc shrb rex.WRB (bad) or lock (bad) (bad) (bad) scas adcl xchg js xor rex.WRB pushq rorl rex.W bnd shll cli xchg icebp jmpq movslq jg pop jmpq add test fdivp lods mov pushq mov pushq fsts xor cmp add retq test fnstcw (bad) jnp loopne rex add push sbbl rex.RXB adc add fisubrl stc (bad) pop (bad) or (bad) (bad) xor push push add (bad) xchg xor (bad) repz mov sub (bad) add sbb addb (bad) jge in or (bad) cli jle cmpl test jae mov add out or pop js roll or xlat test xor push retq cmpl fs rex.RXB mov sub rcrl mov jo (bad) loopne imull mov (bad) sub xchg sahf inc (bad) xlat (bad) (bad) adc fisub jle ja cmp repnz xlat pushq rex.X and jp jge lods (bad) hlt movsb (bad) jle cmc ds and adc rcl pop pop (bad) xchg xchg pop jg jbe pop xchg rex.WRX xchg nop or or sahf xchg jno cld push and lods pop (bad) pop (bad) fild xchg insl (bad) xchg sub adc callq rcll push sarb jnp sbb (bad) sub mov jne scas xorl rex.X jo mov jbe fiaddl sahf movabs mov insl insb rex.WRB insb (bad) xor rex.W callq pop movabs xorb jo cmpsl fistpll xchg shlb insl lret rex.R mov push outsl push ds (bad) sub test movsb xor (bad) ss es cmp rclb ss mov (bad) lea jno xchg jge imul cmp (bad) popq cltd test xchg jnp cmp mov xchg xor mov (bad) sti ficomp fidivr test movabs and cmp push rex hlt rex.RX leaveq stos or test (bad) sub and sub pop in (bad) retq adc jl push mov mov rex.WR js rex.WRXB fnstsw movabs sub pop (bad) push or rex.XB and pushq scas fadds rex.B add movabs int3 sub ss rex.WR pushq jmp or (bad) hlt jge mov jle (bad) js push (bad) pop mov (bad) retq movabs scas add xchg rolb js adc sbb mov push lcall rex.R sahf cmp ss lea pop jle rex.WRX outsb mov adc jp mov (bad) sbb add test cmp notb (bad) mov fwait cmpsb add or sbb add (bad) fiaddl (bad) (bad) fwait (bad) jp cs jp xchg add (bad) rex adc add sub stos fstpt (bad) (bad) hlt (bad) xchg (bad) (bad) mov test push adc xchg or cmp xchg push test xor mov loopne cmp fs movd jg (bad) outsb leaveq fmull rex pushfq mov callq jl mov rex.WRX xchg stc in rex.RX jg lea scas mov mov (bad) xchg imulb pop xchg or mov rex.X rex.XB rex.W mov fwait rex.WX cltd fmuls rex.WXB add jns mov push xor movslq add jnp (bad) pop sub (bad) mov (bad) out lods (bad) data16 mov xor enterq test mov in (bad) cmc gs int3 lea (bad) push fisubrl lods (bad) mov movb (bad) test (bad) (bad) rex.WRXB movb (bad) nop push outsl rex.WRX (bad) jbe or outsb push and pop add xor adc roll xchg sbb rex.WRB scas cmpsl jp (bad) (bad) sti in rex.WRXB xlat mov push jp in outsb rex.R imul jmp popfq adc mov insb scas out rex.WB push push mov (bad) jg jb es and jp (bad) mov (bad) mov (bad) popfq test lret insl rex.B int sub (bad) fistpl cwtl mov rex.WRXB adc mov add int3 lahf fdivr retq add pop icebp (bad) or out add and mov (bad) (bad) int sbb sbb rex.WRB jmp out mov lods add jp and (bad) mov stc ror jg rex.WR add scas xor xchg adc movabs mov rex.WRX adc pop mov int (bad) pushq enterq xor sbbl out movabs xor out (bad) (bad) rex.XB xlat mov mull (bad) gs adc mov rex.R rex.B rex.WX std rex.RXB xchg xchg cmc add (bad) stos movsl (bad) mov sti add movabs add paddq cld fsubp add jmp cmpsl (bad) add push rex.RX stc (bad) mov cmc fsub mov iret rex.X rcrb (bad) adc jmpq (bad) popq mov xchg imul xchg insl rex.B movabs (bad) or or (bad) mov test pop (bad) je rex.RX (bad) imul std cmp xchg xchg rex.W or insb or movsb jge add jne and mull (bad) mov (bad) cmpl jp (bad) mov jrcxz sbb movslq sarb xchg cmp jb ss lods or in add adc ss test (bad) (bad) fs addl pop movabs sbb rex.X pop mov adc callq (bad) outsb pushq mov pshufw add js repnz (bad) sub push mov add in jb roll movabs pushq xchg sub stos push add rolb (bad) lods in (bad) out jne push repz icebp sbb push jmp (bad) sti mov jg out xacquire xchg pushfq movabs sar xchg sahf add test scas or sbb and pop cmpsb (bad) and xor add or add lret add jo rex.W rex.WRB rex.WB movsb jnp (bad) xchg (bad) fwait sbb xchg mov fldenv jle fidiv es jle or jg cltd (bad) adc mov (bad) movslq cmp mov mov mulb jae sub std lea xor fadds (bad) rcrb bnd pop movabs rex.R mov jae (bad) pop (bad) (bad) (bad) shrl (bad) (bad) (bad) cmp insb sbb cmp rex.X ja sbb fwait (bad) pop add lods rex.WRB (bad) (bad) jle fcmovbe es movsb out (bad) add movabs gs rex.WR jg ja jg add es fisttpll xor (bad) mov out je cwtl fildl fmul jnp pop cmp mov subl pop addl lods (bad) add mov stos int3 movabs scas add repz insb (bad) push ss jge lods xor cmp add (bad) rex.WRB jns loop je push pop cmp scas cmp fcomps adc pushq xchg sub xchg adc add icebp jno test movabs xchg push sti cs sub add rex.X push icebp cli or rex.R jle std fs rex.RX and insl rclb roll (bad) rex.WRX jmp (bad) jge jle fs add rex.WRXB fidivrl jp loop mov add sub (bad) rex.X rclb add lret xchg pushq (bad) ja and add movsb jle pushq insl (bad) mov sub test sbb stc jae or leaveq cmp (bad) fs subl fldl xchg sarb or and lock xchg int ss push pop sbb leaveq xchg mov and sub mov data16 mov test movabs or adc xlat retq adc imul (bad) jle rclb movabs or int rex xor (bad) clc mov cmp mov pushq stc jb adc in (bad) and pop or (bad) repnz jg (bad) fwait (bad) loope scas fnop rex.WXB rex.X push jg lock adc add xor movslq mov xchg push rex.WRX cltd sahf imul test lods (bad) add push and push (bad) fs xor (bad) popq movslq cmpsb add jnp (bad) hlt pop add or xchg (bad) in jl and shl incb and loop push mov je xorb (bad) je es mov mov (bad) outsl mov mov adc pop mov push rex.RX in cmp fsubr (bad) jg retq (bad) testl xor test (bad) mov sub jb push rolb jle mov lret jp leaveq and mov jmpq pushq (bad) movsb iret (bad) or jg push cmp (bad) sbbb (bad) jge (bad) in mov xchg jle shrb (bad) jp push mov mov sub in shrl push adc pop loope xor pop cli jae fadds ja rex.XB and fwait in fstl and (bad) mov (bad) retq pushq pop pop std push and jl rex.WXB mov idivl sub mov or loope xor fsubrs push fiaddl stos cmp xor outsb (bad) sub jge rclb and push jbe xor mov push xchg rex.R gs cli mov outsb (bad) jge xchg jg (bad) popq sbbb mov sub pop callq or xchg mov gs (bad) rex.WB and add (bad) lret ja fs sbb rex.WX nop adc jno imul flds jp jbe add mov ja mov pushq addr32 callq add popfq rex.WR (bad) (bad) in add (bad) or jl out movabs sub jns mov mov (bad) jp loope mov movb push out add pop sbb jmpq (bad) cwtl test jae push mov mov jns sti add (bad) adc mov (bad) mov rcrb test pslld int3 xor repnz mov and sbb or scas jp xchg stc ds out pop jl stos (bad) jp outsl (bad) fisub jg sbb unpckhps jns cmc jae repnz mov xchg (bad) ss pop cmpsb test stos add add rex.WRB jrcxz je and movabs movabs rorl data16 xchg push adcl loope and mov jo movsb lret movsl sub leaveq jle rex (bad) (bad) movabs rex.WXB push mov iret push pop (bad) cwtl add (bad) mull xchg add shrl jle scas add add cld loope and push cmc adc test repnz (bad) rex.X callq jle sar sbb cmp pop sub add leaveq and icebp adc shrb cmp sbb xchg jl imul cld adc movabs js movslq add (bad) add cltd rcr (bad) cmp add or js mov sub (bad) retq add add sub gs jne rex.X mov rex.X movsb and cmpsl adc jp mov push insl mov imull mov out xor (bad) scas lcall movsl adc (bad) ja add jp pushq je and add and movabs (bad) movslq flds or (bad) sbb sbbl pushq cmp (bad) lahf rex.WRXB out loop or add rex.WB rex.R pop xorb jp (bad) sbb cltd pop adc (bad) xchg rex.X out (bad) xchg jl xchg jl rex.W jae (bad) jb bnd push nop (bad) fbld pushq (bad) (bad) add rex.WRXB js cli (bad) xchg xchg sbb lret movabs lret jg lahf sbbl jp lock (bad) pushq fs add orl sbb sbb mov jnp and (bad) (bad) rex.R js mov pmulhw sarb jb pop (bad) insl clc add callq repz rex.RB (bad) cmp rex testl fs jp retq (bad) fimull stc xchg jge (bad) rex.B movabs jrcxz andl (bad) fucom sub (bad) xchg fmul add mov sbb ds loope xor fiadd imul ljmp mov (bad) jno (bad) in icebp rolb (bad) pop and (bad) loope or int add test pushq lea sub outsl test xchg rex.XB or lods jns or nop (bad) hlt rex.WX rex.XB retq adc jle (bad) rex.WRXB (bad) callq adcl xor rex.WRB outsl mov xchg es xchg xor jbe pushfq (bad) hlt xlat mov (bad) (bad) pushfq jg rex.XB lock mov pushq loope and movslq lret (bad) outsl (bad) cltd movabs insl pop (bad) pop imulb rex.WR (bad) xchg decb lock rex.WR jbe xchg fbld push mov lea es jle adc stc jp push (bad) cmp rex.R es rex.RX push rex.WB xchg push data16 xor sub sub push and lgs (bad) testl rex.B test cwtl subb add stos (bad) fwait mov cld cwtl push jg in adc xchg cmp cld sbb pop jl fs test pushq js jle mov shrb add xor (bad) (bad) and rex.RB (bad) (bad) or sbbl rcl mov cwtl sub push xor je lods in rex.RX jmp jne rex.WRX repz mov (bad) lock or pop fstpt je mov jle (bad) cmpsb add mov mov (bad) pushq rex.WR addr32 add fdivs rolb popfq sahf and es je pushq mov fsqrt insl pop rex.RB add jle lea test add shrl adc (bad) (bad) fwait in (bad) pop rex mov int3 stos (bad) jno lock movslq retq scas sbb cmp insb lahf jo mov mov (bad) pop rex.WRX rex.R icebp decl xchg out sbb mov cmp pop mov rex.WRX sub test fidiv push or sarb (bad) (bad) pushfq (bad) mov shll sbb rex.RXB rex.WR sahf rex.WB sbb (bad) insl cmpl and sub jne add xlat pop adc addl (bad) ja (bad) jae outsl (bad) pushfq sarl lret mov (bad) retq callq sub shrb rex.WRB push lods xorl rorb jl sub pop jp ja push leaveq sbb add add pop sub sbb adc pushq xchg lods mov (bad) sub pushfq (bad) cmpsl xchg adc (bad) cwtl lret pop in orl test add rex out sbb jne test (bad) pop lods mov and ficomp jl pop (bad) xor jns nop incl push sbb xor cwtl js (bad) mov cmp adc rex.WXB xor scas (bad) (bad) cmc jg ficom adc jae cmpsb test (bad) adc divl fidivl adc mov pop mov test mov xchg mov cmp enterq add xlat (bad) addr32 fstl mov faddp lret gs shrb and icebp cmpsl jb movabs (bad) xor test or mov jrcxz in addl push xchg jl sub retq shrl outsl stc mov cmp pop or mov jbe add retq cmp pop add cmpsb mov mov push stc (bad) (bad) (bad) shlb jg stos jo rex.WRXB jb fstp test pushq (bad) cli add (bad) jp sar push js add (bad) outsl xchg cmp pop xchg add sbb addr32 cltd loop nop xchg sahf mov movabs jg pop adc add nop rex.WXB jns fwait lods mov rorb adc insl mov sbb and (bad) rex.WXB add rex.XB cs jnp in jns lods cli subl mov mov es jrcxz fcmovu cld sbb addb cmp imul (bad) cmpsb xor je (bad) fildll in mov mov adc cs xchg rex.WB push adc imul pop sub mov add icebp (bad) (bad) cmp push (bad) mov add mov add jmpq movslq movabs lret lea or sub shl or add test mov loopne mov movabs mov jp sbb or sbb rorl in insl rex.RB leaveq js jmp clc mov mov pop add xlat in mov xor rex.RXB shlb movabs push cmpl insb jb (bad) pop mov rex test push imul fisub jle (bad) jmpq add mov (bad) cmc sub add (bad) (bad) movabs jp movabs (bad) popfq sub sub add in mov mov mov add int cmpsl leaveq shlb sbb (bad) (bad) add mov out (bad) mov rcrl mov popfq imul xchg clc xchg pop lahf sbb out lods xchg lret xor push mov and jle mov or ja pushq sbb push add (bad) fs repz adc xchg (bad) xchg retq sub mov or (bad) rex.WRB enterq rex.W rex.WXB push (bad) je test stc sub out (bad) add insl fwait stos mov movabs jnp add push mov nop out cmp add sbb (bad) scas cld stc ss add push gs cld cmp and imul xchg lods (bad) iret callq mov mov cmp fcomps (bad) movsl (bad) (bad) (bad) stc cld in add icebp (bad) shrb jp add fcmovnbe int3 sarb addr32 test or jne xchg retq rex.WX nop mov add repnz mov pause jns mov lret adc mov cmpsb mov add pushfq lock (bad) icebp mov pop icebp fnstsw lahf cmp push clc jle callq pushq xor js icebp sarb add stc sub add fistpll rex jmp lahf movabs adc lret fdivr lahf (bad) add (bad) jno jp rex.W (bad) (bad) jl pop push xor add (bad) xor xchg (bad) adc xor cmp add lock add sub sar (bad) clc in sbb pop and jrcxz (bad) xchg lods (bad) idivl stos xchg pop mov jne rex.R rex.RX andl (bad) mov or (bad) add sub jae jl lods pop mov shlb gs sub mov cmp sub outsb xlat movl pop retq outsl movsb lret mov mov addr32 cwtl movabs insb imul enterq out xor (bad) (bad) int3 xchg pushq test add mov pop or add add imulb icebp (bad) rex.X jle out jl xor xchg push add mov add insl pop cmp ds jg jrcxz (bad) jp mov decb js mov imul sub scas adc cmpsb (bad) jbe ja cltd sarl push rex.W (bad) jbe sbb (bad) pop add xchg fcomps add sub roll push add xchg rex.WRB jmpq fwait sarb lods (bad) movabs (bad) rex jp iret mov add cld (bad) jb pop mov add and xor addr32 pop sub xchg add sbb (bad) lods add fs mov add cmp (bad) movabs mov movb cltd jg iret movslq cmp jg lea rex.WX adc movabs rex.RB fwait and adc jne outsl lahf rex.R ficom mov jae mov pop or mov mov add sbb js jbe (bad) add addr32 jrcxz lock pop (bad) (bad) movslq mov sub cmp sahf mov mov push callq (bad) fdivrs cli jmpq (bad) (bad) mov xor (bad) jnp jge cmpsl (bad) iret (bad) imul cld rex.RXB mov movabs fldenv mov lahf (bad) addl jo retq xchg stos nop int3 fwait sarb xor jb (bad) retq add (bad) fidivl stc popfq and mov cmpsb fsubs xchg std mov sahf add (bad) or rex.WRB add push jo jmpq add fldt out fiaddl jg pop sbbl sub fscale jmpq add loopne retq fistpll pushq (bad) pop fs mov lea in adc and xchg add outsb jl xor or add rex.WRX mov add in jbe addr32 nop jrcxz and retq sahf sbb lret insb (bad) mov mov cli je (bad) push rex.RB rex.X mov notb sub stos ss movabs mov (bad) ds mov (bad) lret mov nop (bad) rcrb (bad) out and (bad) pop mov adc movsb and adc add jo and mov decb mov add (bad) movsl je rex.B jp shlb (bad) mov mov int3 sbb (bad) jl (bad) xor pop add imul xchg mov ja xchg or pcmpeqb popfq cmc movsb pop fisubl mov int3 (bad) jb fdivs movabs pop movl movabs jl (bad) (bad) or sub xchg mov int3 xchg icebp mov loopne (bad) in mov add mov or jb xchg (bad) jb retq mov ds (bad) (bad) and push movslq imul cmp sbb ja movsb mov jle adc xchg rex.B (bad) (bad) cmc pop rex.WX rex.R push loop mov enterq scas pop xchg and push pop jg cmpsl sti scas rex.WRB adc movabs (bad) cmp lods (bad) push (bad) add rex.WRB lock cmc push fdivs and int (bad) pushfq lret xchg mov fbstp mov je repz adc (bad) sti xor test decb rex.WR xchg rex scas sbb cmp stos rex.WRXB mov rol jmpq callq xchg int rex.XB jnp mov jo out je,pt shrl stc jle lahf je (bad) xchg inc sbb jl adc ss (bad) fbld decb xchg lahf movabs sbb xor add repnz repz and add idivl (bad) xchg xor mov rex.RB pushq xchg cmpsb add cmc scas add (bad) jp jo fisubr add cli sbb sbb jo shrb outsb mov sahf pop cs mov add add cmp sub es adc cltd cmp xchg (bad) ds and jno sub (bad) or xchg or (bad) push and stc mov add mov outsb test nop add add jl add pushq mov retq rex.WB loop pop (bad) (bad) xlat jle (bad) int3 test rorb xor stos adc mov mov sub (bad) lret imul add mov and fsubrs add rex.WRB test cmp lea stc movsb add cmp mov (bad) jle cmc mov movabs movabs (bad) dec push pop jl lods bswap pushq xchg mov jne leaveq jle (bad) stos repz stc jg in mov adc cmp scas je sub in mov sub cmp fs rex.WR outsb retq pushq sub outsb sbb and adc js (bad) movsb test xor add imul stos sub movabs add scas rex.WR in (bad) int3 pop add out mov sub push xchg icebp mov jns jb (bad) mov xchg add out addr32 adc xchg insl jb and mov or insl rex.WXB (bad) pushq xchg js jl iret outsl rex.WX rex.RXB cmp rex.RB rex.WX stos or add mov pop (bad) and jmp (bad) xchg retq add jmpq hlt loope xor mov test fiaddl adc xor pcmpeqd (bad) jg lahf ja mov jge movabs add jp mov pop pushq insb js ja (bad) jbe cmp mov (bad) leaveq mov push xchg es (bad) nop ds (bad) adc jl pushq cmpsl add rex.WX nop and fs in outsl mov test xchg xchg xor (bad) cmp lods pop push (bad) adc xor (bad) popq rex.WRX push jne jp sub addr32 imul push (bad) movabs out sub rex.XB sub (bad) stos pop sub sbb in insb jae rex.WRB or pushq pop movslq test adc cmp out test (bad) jnp add rex.RB pop add retq jae adc pushq insb (bad) mov mov cmp scas insl (bad) sbb fs (bad) pop add fcoms rex outsb fdivl mov (bad) cmpb scas cmpsl ja fnstenv scas clc fisttpl adc pop and out je (bad) vsubss cmp imul mov (bad) mov cmc (bad) (bad) xchg out iret mov (bad) (bad) fdivl pushq rex.WX pop mov roll loope int sbb nop rolb jle (bad) (bad) mov (bad) (bad) jl stc cmp (bad) jbe xchg rex.R notb test mov (bad) fmuls out lock add fcomps (bad) mov pop rolb icebp jg jge xchg (bad) sbb jl imull nop retq icebp jo (bad) xor sbb cmp xchg insl sub out int jno push lea mov (bad) retq insl sbb xchg ja out (bad) repz mov jp lock rex.WR push lret adc add xchg pop mov or (bad) pushq sub scas sub rex.RXB mov add pop js (bad) jrcxz clc movabs add mov push (bad) jnp mov loop push add push pushfq mov cmp invd repnz ja rex.WX cmp push (bad) out sarl adc fwait roll xchg in iret sarb mov push movsb fdivs push or sbb jl push jmpq cmp sub push movsb and pandn pop rex.WX rex.WXB mov jl jnp sahf add rex.WXB loope xchg nop fmull mov xchg outsl (bad) pop lock pushq add cli pushq cwtl rex.WB subps xor rex.WRXB xlat jno fldl rex.WX rex.WR jg cmp std (bad) test addr32 mov rex.WRB (bad) outsl cmc enterq std (bad) (bad) (bad) imul xor add fnstsw sub jns jb sahf mov push outsl cmp sub imul adc add movsb jno mov pushq callq ja (bad) xchg add xchg (bad) cmp (bad) sbb (bad) fwait jl (bad) mov xchg (bad) jbe movabs xor pop xchg (bad) push (bad) (bad) fidivrl cmpsl test sub jrcxz stc lods out add test je fs jb mov sbb jg (bad) adc mov jnp stos cwtl lahf add outsb fs mov stc (bad) rex.RX mov pop lea insb in mov int3 sbb pushq add movabs mov and movsl add cli add (bad) xor ds adc cltd mov add notb or (bad) data16 rex.WRX jle repz rex.W (bad) sbb (bad) add cmovno cmp jg (bad) sbb (bad) (bad) adc add outsl xchg jmp rex.WRX sub (bad) cmp (bad) rex.WXB mov lret xor pushq ja mov add mov sub (bad) ss add sbb sbb rex.WX and add subl (bad) repnz xor mov xchg and callq sbb and lahf clc pushq rex.W mov nop cmp rolb jb pop (bad) lods mov jp loop or rex.XB adc lock xchg cs test jg cmp lods mov movsl xor and mov mov mov cltd in add cmp popfq (bad) movabs mov je jne test nop andl xor xchg (bad) loopne idivb mov xor add add jl or push mov stc (bad) mov adc sbb leaveq jb sub (bad) sub (bad) rex.W rex.X outsl add xlat retq rex.RX (bad) lahf stc scas jae jp push mov rex.RX out mov cmpsb add push rorl (bad) jmpq (bad) jmp mov mov rex.X pop and stos je outsb nop rcr lods add push sbb or add (bad) out imul jrcxz jns in movsl or sti add rex jb fildl test cli xchg sub movslq pushq pushfq xorb push loopne add jns lods rex.RX outsb sti fwait jb pop lods add cwtl orl outsl fadds rex.WRXB rcr pushq xchg cmp loopne (bad) rex.X (bad) cmp ja xchg negl push js jo fdivrs pop mov jb ss sahf scas fucomip cmpsb xchg movabs xor iret sub repz in xor pop imul icebp jg vpcompressd addr32 js add push add (bad) rcr mov mov (bad) int3 lahf jg cmp xor mov clc adc and out lods test pop mov add mov ss jl rex.RXB lock jbe iret xchg sar ficomp jge insb incl pop loop add lretw cmp sub xchg jne jle imul jne mov sahf mov in mov scas jbe cmpsb push hlt shld fnstenv ja jbe jle (bad) jg imul sbb imul xchg fsubr gs sub movslq mov adc outsl cmpl outsb out (bad) fdivr lods lock clc (bad) jo pushq sbb fdivrl mov enterq scas rex.WRB jnp ds decb imul and lods (bad) hlt rorl cmp pop push sub or rex.WX rex.RXB jnp jmpq mov add sub leaveq add and pop rex.WRXB insl insl repnz pop lods jmpq (bad) test rex.X rex.WRB rex.WB insl mov rex.RB (bad) rex.WX cmp pop jle or add push insl sbb nop (bad) and and js lock jge (bad) (bad) adc mov (bad) add (bad) jg jrcxz cwtl cmp rex.B outsl js xlat jbe xor pop rex.RX rex.WRXB rex.WX ror scas jae hlt mov jb pushq rex.WX loope jbe pop repnz fidivr xor pop sahf sub loopne (bad) (bad) outsb jne sahf repnz scas xorl (bad) stos in push test in lock je jp js (bad) vmwrite rex.WRXB sti fildll jbe test insl xor fs rex.WX mov mov cmp (bad) xchg lods add pop rex.WRB fcoml lret push (bad) jrcxz xlat add scas int3 add insl jle mov (bad) adc out adc mov callq shlb jnp (bad) add fwait add rex.WRB repz mov outsl sahf mov xor callq repz add (bad) sbb mov rex.RXB (bad) jnp push xchg pop add shrb callq jne rex.WXB xor or cmp mov loopne clc lods cld rex.RX sbb cmp hlt lods icebp or sub icebp mov icebp add fwait (bad) fisttpll movslq movabs cmp push sub sub jmpq lahf rex.XB rex.WX add rex.R sbb rex.RX scas cmp (bad) test xchg (bad) in add fcmovnb jg fcom addl (bad) mov mov xchg pop add cs outsb mov add jbe jge mov loop mov in (bad) jae adc ficompl lea lret (bad) adc sub jg jb sub jg pop and rex.WR es nop add add movabs add loopne mov push xchg adc inc shrl sub lods hlt movabs and jno insl sbbl int3 rcrb pop sub je mov xor ja (bad) (bad) out jle adc stc mov (bad) lea sub fsubl movabs outsl and pop rex.RB pop scas movabs add iret jne and and adc jbe (bad) cmpsl (bad) lret popfq cld (bad) mov insb nop jp outsl (bad) pop (bad) out push xchg jmpq movups fsubrp push sub xchg (bad) out std xchg fdivrl or idivl (bad) jne push je std jnp mov movslq pushfq test lret mov stc (bad) xchg loope test cmp movabs pop iret movabs adc push cli sahf leaveq (bad) (bad) (bad) push xchg cwtl xchg stos jo push pushfq pushq (bad) out (bad) jge rex.X push ds mov stos seta jae fstpl pop pop or cmp mov outsb rex.R movabs (bad) (bad) (bad) jmp add imul cld iret pop mov cwtl mov fs fist mov rex.RXB pop rex.RXB rex.WRXB pop xor in adc scas rex.WXB mov pop sub fstpt or cmp rex.RX adc pushfq rex.RB (bad) push and rex (bad) imul push loop push js mov pushq lods push popfq lret mov hlt cs pop xchg fcomi xor insl sub lahf in jrcxz jmpq jo (bad) pop and mov jle imul sub scas mov jmpq jbe xor scas fs test sar jrcxz mov (bad) push pop jp or and sarl mov ficom mov and or mov jbe js mov (bad) push enterq jge cmp std sbb or xchg pop pop rex.RXB jg gs pop xor lods negl movabs (bad) testb mov test rex.WR jbe xlat xchg xor sub (bad) xor xor and ror (bad) enterq xchg cs (bad) rcrl insb fbld iret xor je xor outsb cmpsb pushq push rcrl clc addr32 xchg mov ja sub sub in test jb adc lret data16 imul icebp mov adc (bad) repz pop xchg sub lret hlt rex.WXB jb (bad) incb pop (bad) or and add cwtl movabs sahf xchg push jo add fnstenv rex.RX pushfq cmp adc add mov sbbb test sbb rex.WRB push orl cld (bad) cwtl jg mov shrq xlat sub cmpsl xchg (bad) addr32 (bad) cwtl sbb scas (bad) cmc xor (bad) (bad) (bad) or xorl rcl cmpsl add iret (bad) xor mov cmp sbb xchg movabs mov insb add rex.WR lods sbb xor or sarb adc add xlat es nop mov cld mov and and in jp nop jle rex.W sahf push rex.X and push and addr32 (bad) mov leaveq (bad) dec jmpq rex.R or rex repz and pop push cmpsl add (bad) mov add sub xchg enterq pop imul (bad) fidivl stc mov (bad) rex.X jns jle loope fstl pop adc jp xchg rclb testb mov movslq mov sahf (bad) jg outsb or cli mov lods (bad) incl rclb (bad) outsb stos jae movsb rcll test mov add jb mov xchg cld jg movslq (bad) (bad) jae mov (bad) mov push pop popfq mov and (bad) pop push or push pop stos rex.WRXB (bad) (bad) pushfq add (bad) sbb cmp pop jne rex.WR roll rex.WX mov or stos mov hlt xchg add (bad) or xchg or (bad) retq add (bad) and jnp cmp add xchg push movabs outsb ficoml out scas pop push (bad) or divb jrcxz mov ds (bad) in (bad) sbb pushq add and rex or mov loopne mov jb cmp xchg popfq fldl (bad) add (bad) cld jo cli push mov adc scas (bad) or jp mov add (bad) retq jo mov hlt jg scas sahf mov cmp roll jmp mov rex.RX test retq jl rex.WB (bad) add hlt or sbb nop and (bad) icebp fsubrs shrb std pop (bad) add xor xchg je rex.WXB lods insb cmp mov jmp movabs in pushq or or push jrcxz or int xor je xchg jl sti (bad) testl sarb jle movsb lahf cmp nop sub (bad) rex.RX not jmpq pop out flds push add xor cmp subl and int3 (bad) rex.WX add mov or test popfq and (bad) or btc movabs xchg add or mov test imul adc cli stos rcl sub lock add rex.W rex.RXB xchg fistpll movsb rex.X (bad) hlt (bad) and adc in push lahf jmpq mov (bad) pushq mov je jg mov sarb stos mov or xchg imul (bad) jnp movsb xchg pop mov jmpq sbb mov in rex.X iret es int insb fisttpl sub mov push stos (bad) push xor scas mov jl ror xor rex.WXB jg jg jle hlt rex.WRXB ss pushq mov imul jrcxz notb xor movsl pushq mov nop and test popfq iret push lods fdivrs cmpsb or rcrb popfq fmuls adc rex.WRB rex.WRB push jge pop push scas cmpl cwtl lods (bad) mov cs add scas jns rex.RB pop out imul xchg or ror add cld es cmp (bad) rex.WRXB sahf (bad) xchg (bad) (bad) int xchg insb (bad) gs (bad) out fsubrl cli rex.WRB mov jo sub push fs rex.RX and fsts mov jmpq (bad) cli xchg ja mov (bad) or add (bad) xchg rex.X rex.WB or cld cmp pop test std pushq pop (bad) add test sbb int (bad) jo (bad) stc data16 fcmovb (bad) xchg shr nop mov add xchg (bad) movabs cltd jl jl (bad) and jrcxz (bad) sarb cld jae repnz (bad) rex.R lock js jns test mov out outsl sbb mov xor mov std adc (bad) lret mov insl rex lods sub jl (bad) outsl sbb movabs js (bad) fimull rex.WR mov adc push push sub cmp out rex rex.RX add subl in (bad) (bad) push enterq jg imul pop jp in (bad) mov es adc and movsb (bad) jns jmpq sbb rex loope outsl xchg sbb (bad) xor mov movslq sub cmp jge test rex.WRXB out add rex.X mov (bad) rex.W pop (bad) outsl and retq imul movabs add fs outsl (bad) xchg (bad) insb int add fidivrl jbe jne enterq xor hlt mov xor clc fwait mov mov pop push (bad) or mov rex.WXB lret sub shll loop add sbb push pushq xchg js pop punpckhwd movabs push imul pop (bad) mov in add repz rex js lods rex.WB cmp rex.XB lock jrcxz pushq mov imul xchg int ja shl mov (bad) std (bad) pushq adc mov and sub and cwtl mov xchg and cmp (bad) lret (bad) add lahf stos pop jle lods push (bad) push adc rex.XB xchg lret pop pop lods or frndint sbb sbb in xchg std es out add imul fs rex.WRB mov rex.WR sub (bad) int add test jp rex.WRXB push pop insl rex.RX insb fstl std pushfq in cmp in rex pop rex.RX divl fisttpl ja fmulp (bad) cli push rex.X not xchg cmp (bad) (bad) or xorl or clc jno xchg mov cmp repnz pushfq lahf jg sbb (bad) xor mov mov jbe jrcxz pop std push imul movsl (bad) fidivrl push (bad) repnz sbb (bad) in cmp data16 movabs jle mov (bad) mov scas mov insl xchg xchg (bad) js rex.RB jg pop loopne fs fistp and test and (bad) or rex jg jge or scas (bad) retq iret out (bad) add and add mov loope rex.WR mov and (bad) add cmpsl sub sbb mov adc cmp notl push pushfq jle std mov jl retw (bad) (bad) push ficompl pushq jmp xchg mov outsb icebp int mov pushq jns mov (bad) (bad) insb fisttpll movabs ds icebp xor push in mov mov (bad) rex.WB jle,pt leaveq (bad) xchg cmpsb pop idiv xor out sbb xor mov adc rex.WRX outsb test int cmc mov xchg mov cmp mov rex.XB movabs sub (bad) cmpsb rex.WRXB (bad) insl (bad) mov fmull and sbb (bad) (bad) (bad) xchg jo push adc shll in jne adc cmpsl add jge or cs pop adc xchg adc fimull pop push out insl fsubs adc cld movabs mov add loopne cli pop mov shrb lods add adc (bad) movabs mov jae rex js,pn hlt (bad) push cmp xor fiadd cltd (bad) add (bad) or xor add callq es push verw outsl scas xor (bad) (bad) pop push je (bad) jl loopne movsb cld xor jp cmc fisub add and jo cmp and add sub cmp sti jl push and cmp (bad) fmuls (bad) lea push pop sbb sub lods jg mov icebp xchg lcall jnp std test test je cmp rex insb adc cmc loope and push (bad) mov js imul or pushq mov xor (bad) roll fidivrl pop (bad) (bad) hlt ja incb mov gs std (bad) xor fwait hlt cmp mov pushfq mov loope sub test fldenv rcrl test xor pop mov in (bad) fs in fistpll sbb jno rex leaveq test (bad) jae mov push negb add loopne out fldl xchg cmp push mov sub jbe movl cmp movabs (bad) jns rex.RX gs mov in rex.WR rex.WRB ja and insb lods (bad) xor rex.WX (bad) mov or add retq xchg sarb (bad) fildl rex.WXB push leaveq (bad) sub (bad) add enterq jbe rex.RXB pop xor add rex.B mov (bad) loopne (bad) xor jbe loop rex.WRXB (bad) insl sub and jp add mov push and cmpsl mov imul xchg jo (bad) in lock (bad) cmp jp cltd (bad) push mov fwait sub sahf mov (bad) (bad) imul movabs test (bad) (bad) cmp mov lret pushq (bad) mov stos divb movabs or mov xlat mov pop ss mov (bad) mov movsb sub push (bad) (bad) mov enterq cmc sbb adc xchg in test movslq xchg xor inc cmp xor add rex.R mov addl mov std cwtl pop add adc loop jmpq (bad) cmp xchg fs xorl or or je mov add rex.WX and add (bad) (bad) iret mov cmp shld adc (bad) fisttpll in subl (bad) rex.WR mov pop mov fildl rex.RB add xor jmpq lret loope sub cli xchg rex.R jge mov xchg outsl pop jg (bad) jns sbb lock decb lret loopne cmp fistp imul and mov pushq fisttpll push jb cmp and cltd adc rex.RB fdivrl std (bad) add add jge pop mov or mov jmp and (bad) xlat rex.RXB fwait and fidiv jno shlb mov movslq push icebp incb rorl cmp fs mov (bad) stc lahf pop mov iret and cmc (bad) roll add (bad) xchg movabs mov pushq jg jo xchg fadds push stos (bad) rex.XB int add je movabs (bad) rex.WRXB jle fs xchg cmpsl hlt lret movslq sub add and and mov add data16 jle jns icebp (bad) (bad) int scas xlat mov addr32 lods pop insb rex.WB or mov in movabs sbb lods outsl add (bad) (bad) mov add data16 hlt movabs out std pop add rex.XB rex.RXB add fsubs add add add mov out add (bad) negl test and cmpsb add add callq enterq and push jge xor push mov adc jle sub xchg (bad) movabs outsl push jns mov pushfq add jle mov mov sahf cmp sub fdivl adc pop in fnstsw cmp lock in mov jp cmp (bad) mov pushq es clc rex.XB subl and (bad) (bad) movabs adc cwtl push test stc jae pushq pop push mul add retq lods xor xchg lods rex.WX sbb lock rex.WX rex.WRX adc cltd fnsave insb pop jmp (bad) add xor test scas pushq add or sbb in sbb rex.X movabs mov push jg repnz add retq xor add (bad) adc (bad) mov insl lods (bad) rex.R std retq (bad) cmp (bad) xlat add movabs rex.R sbb sbb fild flds int3 movsl out clc ss sbb jl rex fsubl sub (bad) jbe (bad) retq push mov out add push push cwtl (bad) retq add jg jl in rex.WB add add retq rex.WX cmp add push (bad) xor jg (bad) ss (bad) add jmpq (bad) sbb (bad) (bad) mov xchg jle fidivl xor mov shrl add es mov rex.XB sbb push (bad) xor xchg sub loop (bad) jp pop add push (bad) lahf rex.RX ds movabs repnz in popq movsb rex.W cmp xchg test mov (bad) cmp rex.WRXB es std sub push sbb ds adc jns insl mov sub insb (bad) (bad) es or ficomp clc xchg (bad) (bad) faddl sub cld or push (bad) or add sets out mov (bad) push add fwait cmpsl mov or popfq cs retq add add movslq (bad) nop jo push jl sbb (bad) jb sar (bad) xor rep icebp mov (bad) xor sbb push (bad) movabs jae rex.RXB rex.X fwait out add pop cs test je pop mov imul test jmpq (bad) add pop jg je imul (bad) rex pushq rex.WRX movabs (bad) test mov (bad) (bad) mov pop rclb rex.WB mov lods jns test cmc mov push mov std or sbb scas test cli jl pushq rolb mov cmp jle (bad) jle sti lea fidiv xchg rex.X push fldenv fwait jp jo test cmpsb mov insl rex.XB sub (bad) mov (bad) mov loopne add xchg (bad) rex.W rex mov adc mov out (bad) addr32 cld test fs jle push jne ss lret add sub ja insb jae (bad) (bad) or and (bad) jmpq add adc ds lock jp (bad) rex.RXB pushq leaveq retq and imull (bad) mov (bad) movslq mov retq (bad) xchg mov rex.W cmp adc cli mov js (bad) or loopne (bad) push add mov pushfq add mov (bad) (bad) cmp xchg add pop add rex.WX jae add loope push mov cmpsb subl mov mulb add sti push clc add and fcomps pushq add cltd (bad) loop push push rex.WXB mov (bad) (bad) add jo sub loopne outsb add lock sub add push add mov in rolb rcrl sahf mov (bad) add mov imul rex.RX jns hlt sub movabs or add out loop cltd (bad) jge cmpsl movabs ja,pn retq jmpq rex.WRX jns imul std in mov mov test (bad) pushfq lock mov xchg imul add jg cs rex.B movabs cmp movsl xor sbb pop xor and jle pop sahf add mov jle in (bad) pop mov mov mov mov rex add data16 lret test ror push cmc sub pop adc lret lods and pop subb sub (bad) fnsave jl movslq xor rex jo sbb jne rex.WB mov (bad) mov pushfq (bad) mov pop xor sahf insl and mov (bad) loopne and es (bad) jg jle xchg (bad) push mov (bad) push movabs cli sbb test cmp shlb insl popfq movabs mov enterq mov (bad) (bad) push hlt es test (bad) xor es sub adc rex.RB (bad) cmp push test addr32 pop jg (bad) shrb cmpsb insl test pop incl leaveq test sbb jb add xchg int3 mov (bad) xchg rex.RXB imul push (bad) push add jmp or addr32 push adc cwtl jmpq int3 pop xchg jp movb cmpsl (bad) test or lahf adcl test mul idivb xor fbstp and pop adc cmp (bad) cmpsb int data16 jmpq imul retq test loope (bad) (bad) mov xchg xor retq adc mov fistl test rex.WRB xchg fmull out push callq outsl mov js sub fs outsb stos out jo js scas pop xor (bad) mov pushq out xor rex.WRXB adc stc xchg clc leaveq rorb sub jg and (bad) (bad) adcb rex.RX rex.XB in (bad) pop pop xchg xchg orl add (bad) jg (bad) jge pop or mov cmpsl or xor cmp (bad) cmp jle cmp or adc push jo (bad) negl outsl iret pop cmp xchg pop mov sub pop mov mov int3 je in pop in fisttpll mov movslq mov pushq add lret movsb leaveq adc push orps jns rex.XB imul (bad) xor sub (bad) xchg lock or outsb cli outsl out mov sub cmp jne data16 fisubrl xchg js test or outsb rex.WRX test pop mov fsubl cwtl scas fadds js mov (bad) clc adc push js addr32 (bad) test scas (bad) mov xchg mov mov in mov stos cmp pop xchg (bad) movsl lahf addl cltd adc out cmpsl add rex.RX (bad) in jae sub rex.WXB movabs xlat sbb imul sub pop jle mov rex.RB imul pushq lret pop out and fcompl int cltd cmp cmp cmc mov and mov insb jg rex.R push sub mov js cwtl je rex.WRX adc mov push out (bad) loopne movb rex and fstl movabs scas test js icebp nop in jl notl std cmpsb or std and lock jb es test add nop and movabs pushfq jbe lods pop (bad) push mov xchg loop leaveq jle push pushq pushq imul pop (bad) jl jb loop (bad) in cld movabs loop jno movabs retq adc loop push (bad) adc lahf sbb mov fisubr outsb (bad) push movsb add and mov icebp shrl pop shll (bad) (bad) jbe iret scas in (bad) mov and fcompl xchg and xor xchg stc jne add pop sti push adc hlt rclb fstl andb xchg rex.X fwait xchg out (bad) or fistl enterq cmpsl jl mov movsl jge jle in enterq (bad) mov jp add mov and cltd add (bad) out or jne add add cmpsb jbe jae add test (bad) lods enterq or push (bad) mov (bad) xchg add fstl movabs add push fisttpl cmp add pop in movsl icebp movabs or (bad) (bad) rex.RXB (bad) jnp lahf adc sbb fsubrp andl in loope mov cmpsl xor xor add (bad) pushq rex rex.WX (bad) fprem1 in (bad) rex.B (bad) add icebp imul add (bad) xor mov adc pop notb (bad) add in mov jle rex.WB fs mov push cmpsl sahf adc sbb xor cmp (bad) cmp (bad) fsubl xchg xchg mov (bad) add jae sub movsl or stos mov adc jmp add fs mov nop jge xor (bad) rex.W jb sub (bad) in cmp xor cmp test mov push rex.R rex.WXB pushq outsb (bad) rex.RXB imul ljmp imul sbb (bad) movsl add rcll push icebp sarb or bsr xchg mov adc (bad) adc mov ss cltd pop jle lahf stos mov icebp rex.B clc mov sub rex.RB jp (bad) (bad) or sahf (bad) fldl (bad) (bad) cmp hlt add imul mov repz rex.R rex.WB or adc mov mov cs (bad) add pushfq push test mov xchg xor sub and (bad) negb jrcxz std add mov add movabs xor (bad) std incb add sub fiaddl xchg callq sbb xchg jg jne out mov rex.WRB in mov add insl mov loop mull sub rex.RX movabs (bad) xchg loope outsb movabs push (bad) and cmc jg push mov movslq loop mov jmpq jbe sbb add jne mov sbb in icebp pushq jg rclb add xor divb cmp sbb fiadd cld pushfq add pushq stos fldl insl or movsb scas test (bad) jp (bad) jmpq and sbb fs jne sbb icebp sbb adc sub sub (bad) pop rex.RB (bad) add sub and add sti rolb rclb rex.WXB jo (bad) or add data16 leaveq mov mov int3 fiaddl (bad) sbb (bad) fwait push mov push ds cmpsb out add sbb jb loopne fsts mov jle sub lea mov or xchg mov (bad) rex.RB cmp lods idivb jno fidivrl sub je nop adc xor loope push jg shrb sbb mov cmp pop clc insb lods xchg in sbb rex test (bad) callq cmp cmc rolb (bad) clc (bad) repnz movabs pushq (bad) ss fsub js fisubrl push jbe loop mov pop sbb mov je rex.WRXB movl ja (bad) pop and in cmp add (bad) (bad) and mov movabs rex.RX fdivr mov rex.WR rex.WRB push (bad) sbb rex.WB icebp jb sbb out and iret xchg xchg adc jb or mov jp pop andb push pop push (bad) mov xchg (bad) pop retq loopne scas icebp push (bad) jl leaveq rex.WRXB out rex add xchg push jo sub rex.WX rex.R lea cmpsl (bad) cmp (bad) rex.W mov adc movabs (bad) lret icebp mov sahf pop pop (bad) stos (bad) add cmp and mov add xchg push shrb mov mov or add jl add xor outsl lods add xchg add (bad) rex.WB jl mov (bad) jle leaveq es movsb and es cmp rex.WXB cmp push and and (bad) pushq add sub (bad) xor nop (bad) cli repz or lock mov scas roll rex.X mov pop rex.X xchg (bad) rex.WX adc push sbb (bad) jno rcrb rex.RXB push adc jns jle callq pop cmp rex.RXB jmpq push add mov movslq std xchg xor (bad) movsb mov (bad) xor movabs jns out (bad) sbb in rex.X fnstsw add test cli hlt flds add jp (bad) ja xchg movsb outsl fs repz (bad) sti cmp rex.XB or je xchg or (bad) int rcl cmp fs rex.WR movabs cmc xchg add jnp sbb jb loope add fadds lret add (bad) rex.WRB jmpq andl repz xor add xchg scas add test add popfq pushq sub movabs or jnp mov icebp es sti test addl (bad) mov cmp push adc mov iret add rex.WRXB (bad) (bad) pushfq fistpll add (bad) (bad) xor (bad) outsl mov jmp and jrcxz (bad) test scas jge test rcl mov outsb fs mov js (bad) outsb xchg rex.WXB and faddl sbb jle in lods lahf cwtl mov cmp jl test test rex.XB (bad) jmpq rex.XB jp xlat (bad) add rcll xchg iret xlat (bad) sti xorl insl (bad) lods fimull imul shll rex.WB (bad) movabs cltd add xchg rex.W push mulb leaveq hlt (bad) movabs mov pandn rcrb xor cwtl jg insl rex.RXB lock lret rex.WRX mov xchg mov xor (bad) and int hlt fimull cmpsl xor xor (bad) out pop in rex.WB js jle je movabs out sbb mov in callq rex.WX (bad) jle fldcw es (bad) xchg pop cmp xchg mov mov push mov or fildll (bad) cmp rex.WX add (bad) xchg icebp (bad) mov pop jb mov gs xor fistpll rex.WRX sub pushq lods sub out or add out (bad) mov or rex.WXB rex.X addr32 imul (bad) loopne (bad) iret lret cld or adc xor test loop out sub lea imul mull test (bad) movslq mov cmp fisubr rex.XB imul cmp pushq mov negl sub jnp push xchg xor (bad) jne mov pop movabs jae stos test xchg mov sub mov (bad) cmp loope (bad) in addr32 and mov clc sti js (bad) jnp rex.RXB rex.WB xchg cs outsb jg rcrb cmp outsb cmpsb jrcxz mov in rclb cmpsl in (bad) jg xor add add xchg rex.WR sbb fildl xchg int (bad) pop pop xchg scas xor rex xor cmp jb notl rex.W data16 movabs sbbw leaveq in (bad) (bad) rex.XB jne rex.RX sarl jrcxz leaveq sbb fs repnz adc loope mov pushfq sbb (bad) (bad) test in leaveq add int3 orps mov (bad) mov pushq mov pop pushfq (bad) outsb rex.RXB scas sahf data16 mov and jle mov (bad) icebp jl pop pop pop pop jl cli scas rex.R (bad) ja out test xor rex.R hlt push (bad) mov imul sub rex.WR and pop push (bad) mov movsl cmp mov je jne repnz push xchg sbb add mov mov stos mov lret pushfq out cmpsl sbb (bad) jrcxz faddp xchg jge add scas test jno rex.RXB jns mov mov imul fdivr cld test in sub xchg cmp push xchg cmpl sub jge sti pushq xchg (bad) rex.WXB rex.WR test (bad) fcomps mov xor xchg out and xor or and (bad) pop sub (bad) or rex.X mov std mov pop rex.X xor stos pushfq fwait or and repz and callq mov rex.WX rex.RX or sbb mov (bad) loop adc rex.RB (bad) (bad) (bad) shrb psrld lock cmp jp scas cmc mov jb push xor (bad) fbld add test je sbb js rex.WR rex.WRX rex.WR mov iret and sbb cmp (bad) iret push lods fistpll push (bad) js (bad) out xchg (bad) rex scas jmp pushq pushq (bad) (bad) mov pop xchg add imul jbe int3 jl sar shr ja callq xorl (bad) insb lret outsl movabs or mov movabs add (bad) shrl (bad) rex.WXB cltd insl jp add xor xchg mov mov sti out (bad) je jb loope jg mov rex.XB int repnz push (bad) (bad) jae pop outsl imul adc xchg mov int test out retq xchg iret (bad) sahf sbb dec rex.WR xchg or jg rex.RXB or (bad) (bad) xchg cltd mov mov mov xchg rolb sar mov js add fs cmp (bad) add push add and add cmp or shll (bad) (bad) movabs fdivrs add loope pop xchg (bad) add cmpsb movslq mov in (bad) add pop outsl cs adc (bad) ds in fldpi mov jg or sbb (bad) (bad) int sub pop (bad) insl outsb cmpsb scas xchg fistpll push repnz int add rex.RX rex.WB pushq jle add add rex.XB (bad) (bad) jbe addl jmp int lret fcos jl (bad) (bad) mov (bad) (bad) rex.WB scas add or and popfq out jle mov pop mov test jns movslq (bad) movabs cmpsl outsb rex.W testb test ss jb xchg stos (bad) cmc sahf mov (bad) flds retq icebp rex.WRX xchg pushq in stos stc add cmc stos addr32 add sbb mov lret sub iret (bad) xor mov rex pop (bad) vpunpckldq jrcxz or push out jg mov add shl xchg (bad) sub jle mov mov mov test (bad) (bad) sub add pushfq jmpq rex.WXB movsl std fildl jle mov test or in (bad) mov xchg and (bad) xor pop je rex.WXB xchg rex.WX and and (bad) js gs lods mov mov mov jo jle or outsl sub (bad) mov pop add xchg pushq rex.WR rex.W xor add addr32 (bad) (bad) xchg jno rex.X lcall retq xor jo loop push lock movabs sub scas sub (bad) cmp pop add adc push xchg mov (bad) shlb addr32 ja (bad) xchg xor xor test (bad) (bad) add (bad) add out and sub sub out (bad) and stc iret xchg mov jbe or loope xor (bad) (bad) hlt out add ficompl push cmc sub sti jb xchg movabs jp callq fdivr pushfq cmp (bad) jno sahf ds mov outsl es mov rex jns jo and (bad) sbb jg sbb clc jle rex.RXB rex.WXB mov rex.WRX sbb outsb cmpl loop sub xchg rex.X mov rex.R hlt or addr32 xor iret pop add jnp jo cmc or rex.WX (bad) data16 jle rolb movabs movb rex.WR ss movabs (bad) push cld rex.X int or ss scas rex.WXB (bad) scas cli and sbb in int3 imul repz mov jrcxz sub jle push lods stc xchg addl rex.WRB out (bad) ss movabs jns (bad) rorl (bad) cmp xor movslq jge xlat rex.W sub rcrb add addb jnp lret pop jp (bad) add (bad) je add cmp (bad) je rex.RB repz wrmsr adc xor jle movslq rex.WRX lea rex.R jb mov push movsl (bad) (bad) rorb xchg sub or mov ss js jno adc mov in iret mov fiadd jne negl mov pushq jle push insl fs pushq insb clc iret and push jl (bad) jb ljmp push add int (bad) push pop js (bad) or fs cmp (bad) ss fiaddl rex.W pushq retq sbb (bad) or lods insb cld iret adc (bad) out sahf (bad) sub jne and cmpsl je adc es push xchg fadds rcl (bad) enterq add outsb cli rex.WX (bad) cmc jle add (bad) outsl (bad) mov in loop (bad) jle sub xchg retq jmpq jle lea rex.WXB xchg mov xchg xor movabs mov test std add (bad) mov sub jl ja sub mov or es push addr32 retq in (bad) (bad) jg decl (bad) rex.RX cmp push pop ja jmp and push jno xor adc pushq sub and movabs mov mov cmpsl xor pop add andl faddl stos je jg xchg andb rcrb xor (bad) mov (bad) cmp insl (bad) mov and std popfq iret mov mov xchg add jbe movabs jb sub sbb (bad) (bad) retq xchg add pop out rex.XB or add mov callq jg or and cmp adc xor xor add pop push mov pop (bad) mov movslq and (bad) rclb out setge push or stos movabs shr pop (bad) rex.XB pop (bad) xor je (bad) (bad) and jae callq outsb mov pop movabs (bad) out in movabs and lods xor (bad) add mov add sub sbb jrcxz ficomp add mov adc outsb mov orl insl add std sbb add icebp or rex.R adc jl (bad) sub rex.X add (bad) std ror outsb and (bad) mov (bad) shrb icebp jrcxz je (bad) xlat std rex.X (bad) jno rex.WXB (bad) loop push push mov (bad) mov mov push mov rex.XB sahf (bad) je insb cmp sti lret enterq jg rex mov js nopl ja sbb clc rex.RXB (bad) rex.WRX mov fldcw lret add (bad) fidiv in push lods mov (bad) insl retq and (bad) out add xchg cmp xor sub sub jg in mov jbe rex.WRX jg mov js retq xchg shll mov and movabs add (bad) andl or rex.XB fcoml jge cmp pop (bad) or cli retq sub rcl scas mov jbe mov xor jnp cmp add push fadd rex.RX fisttpll cmpsl scas mov xor jne lret jl repnz adc (bad) std xor (bad) (bad) movsb sar (bad) movsb jbe lods xor mov nop add idivb mov xchg jg add mov or mov (bad) rex.WRXB (bad) push jrcxz pop movabs lahf mov sub xchg sub lea shrl push sbb movabs push retq (bad) mov ss rcll jl fdivs mov js movslq push jb pushq rex.WB jp and in xchg mov (bad) jp (bad) jrcxz mov sub pop insl test sbb pop push stos (bad) rex.WRX mov sub jbe mov jbe adc gs pop js cmpl sahf lods (bad) (bad) in jmp (bad) and fisttp jl xchg rex.RB adc mov mov fs outsl jle xchg orb add xor mov sbb out pushq and or shll rex.B rex.WXB push insb sahf (bad) outsl jle adc fimul add (bad) jmp (bad) or jg ds fbld xchg add rex.RX movabs fdivrs mov sub ss push (bad) (bad) mov or fisttp adc movabs or add xchg push and lahf loopne and xchg (bad) (bad) roll pushq outsl xor fdecstp (bad) push add xor icebp (bad) cld mov mov lock in decl xchg int lods pushfq xlat add (bad) fdivrp add jb push fcmovnu pushq cmp and jne loope mov rex.WRXB sub mov fst mov hlt (bad) mov (bad) mov movsl adc (bad) loopne fldl2t rex.WX rex.WR in imul push push jle pop (bad) (bad) sbb std movabs outsb add (bad) rex.B rex.WRB (bad) rep (bad) sti jle add mov mov test add enterq out jmpq (bad) sbb mov stos sbb rex.WB jmpq jp and (bad) data16 jb imul fstl add (bad) sbb (bad) sbb (bad) pop jo mov test mov rex.R mov cmp lods test pop scas sub out xor rex.B (bad) or loop rex.WRX je mov in jge or (bad) lea clc and in and jae jb (bad) out jns fistpll (bad) clc fs rex.WRX insl (bad) mov xchg pushfq sahf loop ja jns push lods xchg sbb xor push or push repnz gs lret lea jge imull sub mov xchg and mov ss nop (bad) and rex.RX lcall jge pop (bad) rex.WRB mov fidivr xchg lea (bad) cld rorb cwtl add iret sbb add ss jl (bad) pushq enterq sub jl pushq addr32 cmpb sbb mov sub js (bad) cs rcr xor notl outsb rex.R rex.XB rex.WX jg shrb pushq (bad) lea mov jle xor rex.XB lock rex.RX sub jle pop sti mov (bad) push add mov imul xlat jle xchg mov adc rex.W xchg fnstcw adc jb pushq rex.WXB out and scas or mov sbb mov mov (bad) add jrcxz cmp (bad) add std outsb rex.WXB loopne add shlb xor xchg rex.X adc movabs mov sti add movabs cltd push add mov in in rex.WX fs out cld mov (bad) push movabs jbe outsl adc sahf sub dec sub bnd jnp iret xor test and or mov ds mov (bad) add rex.RB clc (bad) rex.WX leaveq rex.WRB mov mov and loope cmc lret and pop pmulhw (bad) jno rol movsb sub xchg test xor rex xlat loop sbb add push jl imul xchg rorb jg in jns or pop xchg icebp mov add add and repnz (bad) add fwait or (bad) xor push or (bad) mov retq sbb add sbb lods vpcmpgtw jnp sbb outsb cld je jle int3 mov and jg std (bad) mov loope,pn xchg cmp (bad) lock stos iret jp and pop jl in imul lahf subl cmp fidiv mov rex.RX xchg pop out mov mov mov (bad) (bad) data16 (bad) jmpq (bad) (bad) lods lret mov fwait (bad) jg xor lock fwait (bad) jno pushq jle test xchg fsubrl shl repnz pop lods pop loope xor jb rex.X ss jbe xchg shrb sub pop stos adc push and rcrb repz pushq imul stos or data16 insl cs adc cli (bad) imul and ss or loopne out popfq mov testb cmp test pop rsm fmuls adc mov or jb fnstsw imul xlat nop in shrl mov (bad) scas add mov (bad) pushq test ds add rex.X xchg (bad) sub (bad) cli or mov lret pop (bad) mov sti (bad) (bad) jrcxz or sbb push push xchg sub test data16 jge jo std sbb out fiadd add mov divl add push (bad) (bad) rcl iret test js or (bad) sti pop (bad) cwtl jle rorl (bad) (bad) pop jb rex.WR imul js insl mov pop jmp cs xchg andnps jbe cs or sbb xlat (bad) fildl fsts (bad) stos (bad) hlt ror movsb xchg movsl cmp xchg int sti sbb jbe jge rol int3 mov popfq cwtl adc sbb (bad) xor (bad) fmul add xor fsubl cli pop (bad) pushfq sub (bad) rcll xchg xor xchg jmp (bad) pop xchg rex.XB sahf shrb or jbe mov stc rex.X (bad) insl (bad) jle add cmp sub (bad) outsb sarb sar lods pop jl stos loopne pop in push retq or push rex.RB not (bad) add enterq jae (bad) push fild fidivr xor (bad) loop (bad) jg repnz scas mov ficom sbbl outsl or cmp push jmpq (bad) add out loopne es repz rex.B sbb xor scas (bad) movslq and jbe movabs loopne nop jle push push add notb pushfq or (bad) add fist insl or sub jle out mov cmpsb clc scas mov add (bad) push incl (bad) xchg (bad) (bad) mov xchg xor stos jle sub imulb add sarl push lock jge xchg (bad) lods ljmp (bad) jp cs mov jl rcll push jo (bad) lods rolb lods add rex add xor or add (bad) (bad) sub cld mov in jmp dec rex.X xor stos (bad) cmc rex.WX pop mov xchg xor (bad) jne test lods leaveq jge pop cmp mov pop (bad) rex.WRXB sbb push test idivl hlt cltd (bad) addr32 roll pop cmp (bad) cmp fs imul jae movabs cld (bad) test rex.RX lcall mov jmp push and and lods jbe pop mov jnp lods test sub push mov je sahf mov ss mov sub outsb jl cmp xchg (bad) testl jns std insl mov sarl jge insb in movsb int3 loopne jg xchg mov or mov mov sti (bad) (bad) jle int jrcxz roll movabs pop mov sub jb (bad) outsl out sti (bad) xchg pushq mov (bad) (bad) cmc jle xchg push fdiv mov jg mov sahf (bad) mov pop lock (bad) retq rex.WRB mov movabs fwait add mov insb xor out add xchg int3 loop movl mull adc fnstsw adc (bad) or fimull push cld jnp popq repz movsl popfq rex.WRX jb (bad) adc imul rex.WR movabs cmp rex.RX add rex.WRB rex.WRX enterq add xchg faddl push insl jge rex.RX test fcmovne fmuls xorl (bad) andl movsl imul cmovo mov xor push mov in jo js jg adc je rcrb (bad) (bad) mov pop (bad) clc rex.W mov lods jmpq jb fcoms lea sbb adc rex.RXB movabs mov jle rex.WR mov insb jns pop cmpsb outsb add cmp (bad) test jrcxz pushq addr32 add rex.W popfq cmp mov div sbb sub xchg fmull xor mov imul mov sbb (bad) adc and out lret js (bad) jmp (bad) pop jb test cmp jl jg mov cmpb cwtl (bad) lock shlb cmp pop outsl movabs in test add and xchg fs js jle jbe (bad) xchg rex jmp mov adc cs mov jp loopne in jae sub pushq lret rex.RXB lret xchg mov rex.WR (bad) pushq lock mov (bad) mov leaveq in xchg push pushq mov mov rex.XB es pushfq (bad) ja mov inc or lea nop jle fnstsw (bad) jp jp sub repnz (bad) or mov es movabs sub out scas cmc and pushq scas roll rex.WB lfs add xlat iret pop add ss movsb add movabs jle cmp lahf jo pop popq lods pop pushq cmp rorb adc jb and insb shrb (bad) in imul sarl add in clc add ror insb incb pop or lods xchg cmp add ja add jl (bad) gs jo in rex.X jno (bad) pmullw cmp jg cmp (bad) fdivs jg mov sub adc fadd jb mov sub test movabs (bad) xor cwtl (bad) pushq cmpsl pushq pushfq in add and sbb sbb mov cmp pop mov fidivl rex.WX add xchg sti iret mov cmp lret scas xchg or (bad) lahf (bad) or (bad) cmp add sub sbb rex.RX pop rex adc int3 callq push in sub xchg (bad) (bad) fidivrl jbe sbb lods mov (bad) fstpl movabs add cli and rex.WX rex ds mov jle loope pop out imul jo stc (bad) cmpsb add std xchg push (bad) test xchg (bad) outsl xchg cmp movsb rex.WXB xor and rex.WRX push lock movabs fidivrl rex.WB cmp add (bad) or lods (bad) mov out lret add sbb mov data16 outsb add enterq ja cmc sub (bad) cmpsb (bad) jle (bad) mov scas movabs push (bad) lock scas leaveq scas (bad) add pushq xlat cld push (bad) rex.RXB adc add and (bad) addb jnp jne fiadd stos jbe movabs or rorl xchg addr32 or flds pop mov push (bad) insl mov xchg pop mov rex.R mov xchg flds push (bad) (bad) movabs pushq xchg fild movslq add nop (bad) and rex (bad) (bad) pushq subl ss movabs shrb jg adc and lret add mov je cli (bad) rex.WB cmpsb (bad) repz retq jg and add fnsave mulb sub std fidivrl leaveq popfq andnps fidivr lods pop add mov (bad) sub cltd rex.WXB rex.R adc fs movabs mov rex.RXB (bad) mov xchg sub (bad) mov adc fisub pop adc pushq jo (bad) (bad) (bad) xchg xor mov rex.W add and (bad) and mov pop jle (bad) adc fimul imul nop rex.XB xchg rolb rex.W sbb jp jb or movsl test add sbb rex pop sahf fcoms sbbb in (bad) jae xchg test test (bad) add xor (bad) sbb cmp pop in add mov imul xor and add mov or sub lahf jb (bad) add movabs xchg loope sbb bnd jne jg fwait mov (bad) xchg add add jnp or (bad) (bad) (bad) (bad) mov mov add (bad) fidivr push mov push out sti add lock (bad) (bad) sub mov lods (bad) add pop mov jg and rex.B (bad) imul jge rex.WRB movsb (bad) mov scas (bad) mov cwtl cmp (bad) and (bad) add pushq imul mov add mov jge and pop jg sbb rex.WR movabs and fucomp rex.WRB test add enterq sub add mov retq mov pop (bad) (bad) add out jrcxz push (bad) (bad) and add pushq mov mulb (bad) sub fcomip (bad) pop out imul and sbb out and movsb lahf roll in cmp jp mov movl xchg (bad) pop nop jrcxz loop add (bad) sbb pop rex.X rex.R pushq add sub outsl (bad) adc scas je out and xchg (bad) jmpq rex.W cs adc (bad) clc test mov add xchg jge rex.WRXB in ficoml jle add sub jne mov scas leaveq and add (bad) rex movabs insb sbb rex.RB push shlb movabs jrcxz retq jnp retq iret std add cwtl rex.WXB addr32 xchg outsl (bad) jg stos rex.XB rol idiv jbe (bad) insl sti jg and xor outsb fistpll (bad) jg (bad) (bad) jbe jrcxz add xchg ss (bad) (bad) movslq insb gs pop stos callq adc mov mov test sbb iret add sub (bad) sbbl mov iret ds callq sbb retq cmpsl rex.X jb out addb sti mov add jnp outsl jp test pushfq push or mov retq and insl outsb (bad) pop xchg jg lahf outsb jne add in mov stos add rex.WRXB rex.B cmpsb (bad) cmp jp enterq cmp mov adc cmc mov lea and add push mov mov mov sub callq sub out mov lods jrcxz out add sarb mov fildll and cli or rex.WX jmpq testb (bad) jg (bad) sub ficom jp (bad) sbb jb outsl rex.X pop add movslq mov addl jle jae lea out push retq adc xchg mov cmpsl mov loopne (bad) add jns mull stos adcl adc popfq push add int3 movslq or push mov out jbe pop mov retq rcll stos cwtl push push lock and enterq (bad) sbb movabs sahf cmp xor pushq add shll mov push or pushfq rex.WRXB or xchg rex.X jle phaddwq rex.WRXB es add fs faddp mov mov mov or jle sbb enterq add add movabs (bad) xchg rex.X lea rex.WX jb stc mov mov add clc rcrb mov test (bad) (bad) mov add movsb sub and pop add outsb movsl jb movabs in sbb outsb repz add mov xor mov scas sub sbb stos rex.X mov out push ss ja outsb shrb out mov rex.WRB xchg push (bad) stos sti jno (bad) icebp mov mov sub fdivrl rex.WB sbb ja mov outsl cmpsb jae push lret add and and test je movabs stc fmuls insb movsl sar stc lods imull enterq out xlat jp cmp cltd movabs push (bad) (bad) loop (bad) stos movabs int3 pop outsb or cmpsb (bad) (bad) loope sbbl sbb and movabs jle rex.WB xchg push sbb loopne in mov movsb insl xor mov adc enterq adc (bad) sahf push add jle rex.WRX mov xchg lods (bad) (bad) (bad) add mov add lea (bad) (bad) sbb pop push ss js (bad) cmp rex repz mov rex.WX mov callq cmp sbb (bad) icebp cwtl rex.X fs movl or add mov rex.WRX add sbb or mov (bad) xor popfq outsb mov (bad) imul rex.WR enterq or push ja xchg pop add movslq loopne fsubrl and pop pop (bad) jns mov mov add (bad) loopne rex.RX lock adc (bad) xor add mov pushfq (bad) jg jp push jrcxz cwtl hlt cmpsb movabs jno xor lock cmp push add lret sahf sub (bad) std test push fildl sbb xchg xchg mov addr32 xchg and jge callq mov leaveq scas add notb adc jp,pt mov rex.R mov cmpsb imul fwait jbe je int and mov pop jo scas mov lock cmc (bad) jle (bad) cmp add add jrcxz adc nop (bad) icebp scas rex.WRXB std rclb jg adc iret nop outsb sti mov pushfq rolb movslq ja or jp jmpq retq in fs sbb pop adc (bad) (bad) or push mov es pop mov js push and jg in retq retq int (bad) rex.XB vcvtdq2pd sbb cld es mov or (bad) jrcxz outsb movabs (bad) mov (bad) jne hlt push (bad) and data16 xchg xchg pushq rex.RXB (bad) mov xchg outsb fldt (bad) (bad) stos sub xchg js in retq sbbb fs jl fldt jle push cmp xor mov cmc test fsubrs jg push adc (bad) loopne mov add mov pop or push cmp (bad) mov js mov stos cmp rex.WB adc (bad) (bad) pop push icebp pushfq jg mov lret cmpsb mov jnp rex.WR add decb adc popfq xchg (bad) rex.WRX (bad) insb jmpq and pop mov pop xchg (bad) add rex.WB rcr insl clc (bad) cwtl jns add sub rcrl (bad) in divl rex.W (bad) mov cld xor (bad) test callq push pushq ja (bad) lret mov sti in scas (bad) sub xor (bad) and jns cmp sub jg test (bad) out rolb subl imul rolb add jns cltd jne (bad) rex.X iret lret sub sahf pop add pop fdivrl sbb sub adc (bad) rex clc rex.XB mov test pop rex.XB xor sub (bad) adc add rex (bad) lret outsb test cld js cmp (bad) jbe in sub mov orl mov or (bad) stc xchg or and sub (bad) jno sahf mov stc push adc push scas jbe (bad) in sub add pop add mov mov mov sub or jg js insb mov jnp sti pushq add pop ja xchg js add cmp (bad) add in sub sbb (bad) sti cmp stos mov xor mov stc cmp rex.WR (bad) rex.XB jg sub pop add cmp (bad) outsl or addb jne test xor mov out pop movabs xchg popfq jle pushq std xor push or add rex.WRB gs test jns (bad) lcall and or movslq (bad) mov mov pop jp loop int3 test mov adc push jae sbb jns jle (bad) rex.WRX add or jp roll xor in outsl add rex.RB notb scas stos push imul stc lods (bad) or sub scas cmpl lods retq (bad) scas loop mov jg (bad) rex.WRXB rex.WX (bad) jnp (bad) (bad) jo fs mov cmp or rex.WXB repz adc retq add add cs mov sbb rex.RX mov add and add sbb (bad) jge cmpsb (bad) or jg add in iret adc ss sti push lea add and xor repnz fnop shrl clc stos pop iret out movsb push andb (bad) pop add rex.X mov (bad) rex.WX or mov cwtl sub xchg (bad) cmp push pushq fdivs movabs (bad) (bad) xchg jg mov (bad) sbb flds repz rex.RX test sbb mov and (bad) rex.X gs rex.WRX mov repnz and jle movsl (bad) std data16 mov out xor add (bad) cmp jb jp,pt or roll mov push jbe in sub int lahf pop xchg ficomp sti mov rex.W scas jle (bad) pushq (bad) cmp in mov and ja movslq (bad) (bad) mov (bad) ss add (bad) add jl mov (bad) jns andb js rex.W cs out (bad) adc int3 adc add insl (bad) movsl outsb rex.WRX jle cmp fistpl push (bad) loop jle (bad) jmpq cs pushq rex.R mov (bad) int3 add sbb fidivrl rex.WXB sub ja (bad) jb xchg pop sbb (bad) mov add jp loopne rex.RXB add sub ds add sub cmp pop jns je loope je,pn in push out fs cwtl and (bad) outsb callq or jp adc xchg andb jbe std (bad) cli rex.XB rex.RX cmp retq loop cld movsl xchg cmp fdivrs pop lea cmp xor rex.RX rex.WRX lahf jg int3 (bad) add and loope ja cmp (bad) cmpsb rex.WRX adc in cs add fs pop xchg lahf add push rex.R test pop sbbl (bad) imulb mov add or jge es (bad) or add adc (bad) xlat (bad) jg xchg (bad) jp (bad) (bad) mov std push in sti add roll jmp movslq loop cmpsb adc mov rclq test rex.RX repnz icebp add movslq jle push out and jbe hlt fdivr jns rex.X addr32 mov (bad) (bad) cmp mov (bad) iret stc cmpsb jge (bad) cmc pop mov mov sub data16 mov rex.WRB std mov add movsl pushq (bad) cld outsb (bad) pop add rex.XB shrb or popfq sub jmp jb fdivr hlt test divps jg adc add rex.WR movsl or add vpavgb hlt mov jle jp xor (bad) in fs (bad) push or rex.WX or add and rcll icebp or test (bad) mov movabs insl es mov (bad) push mov push or jmpq jle and negb and fbld test je or callq test and and (bad) popq jl jnp (bad) (bad) jl adc mov and int3 je rex.B outsb xor mov jne jb insl xor adc cmp int insb pop lods rex.W lock retq pop (bad) sbb sub jmpq and pop cld lahf repz outsb rex.WB lods jp sbb cwtl (bad) cmp and xor cmpsl rex.RX mov mulps and xor in jae jmpq sbb pushfq xchg insl retq negl (bad) lret imul (bad) lea (bad) cwtl mov add or (bad) stos add sbb idivl push (bad) unpcklps out mov (bad) add rex.W (bad) fiadd cmp sub cwtl fldl rcll mov xchg (bad) (bad) cmp loope mov rex.RB adc add movabs add cmp shr or loope (bad) cmpsb divl jbe lods in and lock rex.WR (bad) adc outsl xchg cmp decb mov rex pop lods add sub mov xor (bad) (bad) cmc (bad) jmpq movslq add cmp test lret add jp jo xchg rex (bad) jb out decb push (bad) repz nop sahf jrcxz jno loop mov xchg (bad) std add stos lret xchg adc (bad) add imul rcrl xlat push stos leaveq (bad) (bad) movabs sbb std loopne incb rex.WXB fwait rex.WRXB test shrl or jb movabs add pop rex and jb jbe jb xor fcomps add (bad) out push add icebp mov sub jb adc push mov cmp (bad) sbb push cmp (bad) (bad) pop stc mov jp negb cwtl cmpsb (bad) jle add xor sbb rex.WB (bad) rex.XB or push (bad) loope (bad) rex.WRXB add insb mov and sub sbb movabs ficomp rex.RX cmp rex.WR adc (bad) rorl add fnsave rex movsl add out rex.WX sbb (bad) sar movabs jb cmpsl clc pushq add std (bad) repnz (bad) sbb (bad) jmpq shll imulb mov adc add rolb movabs push rex.WRB add nop or mov xchg retq es iret jbe cmp or xor push fisttpll add xor mov mov fnstsw rex.RXB push adcl jmpq add jrcxz (bad) pop mov mov std fstpt jb lcall xchg movabs xor mov jo jg rex.W stos add cs xchg add sub adc pop repz shrb jle fwait (bad) (bad) xchg fistl (bad) mov iret sub mov fnstcw test cmp pushq int pop jp ds std xchg movabs rex.W clc pop xchg or (bad) adc out add cmp sti sbb cld mov add (bad) (bad) in (bad) rorl (bad) outsb add xchg stos xchg jg rex.WRXB insb (bad) mov jb test xlat (bad) mov adc add out outsb (bad) mov (bad) je cmp add jbe rorb pushq out and adc add mov out push jg pop fistp mov movabs mov data16 add rex.XB sbb and scas cmp jo cs stos mov jns sbb xor (bad) movsb pop sub mov jp (bad) std sahf cmp pop add pop and addr32 fdivrs mov cmovb rex.X int repnz je rorb fisttp jb mov lea pop cmp or adc mov (bad) (bad) rex.WRB pop xor rex.W sub mov cmp pop mov adc lods jge jge xor jmp callq jle mov int3 jg test mov fsubl rex.WRX cs and fcmovnbe lret andl cmpsl xor mov add jp in (bad) sbb out cmp jle movslq and cmpsl (bad) mov add jge and ja push rex.WXB addr32 sub add and lods mov fisttp mov loope jno push (bad) mov (bad) xchg add fstl jbe in fistp pop and push rorl rex.WX and rex.RB rex.WB sbb jmpq (bad) test (bad) (bad) (bad) (bad) pushfq pop adc xchg push dec xor (bad) jae adc pop or (bad) (bad) decb rclb in rex.X in and jle insl shrl sbb rex.RB std nop jle cs (bad) xor not cltd adc add pop or imul fimul lock rex.W adc ss (bad) sub xor iret mov xorl pushq insb bnd xchg sbb or push rex.WX (bad) idivb cmp mov sti fdivs add insb negl cmp sti pop jg sbb mov scas jmp mov and fstpl pop outsl cmp (bad) (bad) nop shrb push mov loope popfq insb outsb movslq (bad) jae (bad) add sub movabs jae jl pop and pop sahf xchg cmp scas mov sbb push rex.B pushq insb jmpq mov mov scas and sub lret or mov (bad) or (bad) loope sub ficompl push mov sub hlt retq jmp (bad) fbld push cli (bad) repnz (bad) rex.W sbb xor in rex.R ficompl roll adc (bad) and adc stos imul mov cli jp (bad) xor fildl mov push fs imul std jns rex.R in cwtl callq ud2 xor mov cmp int mov ljmp or outsb sahf rex.XB movabs rex.WR xchg (bad) es (bad) jmp js (bad) lock test or sarl psrld pop and shll mov ja sbb cmp jnp cld (bad) xchg mov outsl movabs add stos (bad) (bad) mov (bad) rex.WR repz sbb int movslq add add test jb adc cmovg jle int3 push adcl out xchg jle rorb mov cmp test (bad) (bad) iret js sbb mov data16 outsb xor or mov add outsl sahf rex (bad) xor rex.WR (bad) mov cmp adcl (bad) test add lcall cs or (bad) lret add pop in push rex.RX (bad) (bad) or xor add cmp mov int jnp xor test fcomi (bad) out add add xchg repz adc push (bad) loopne rex test and enterq (bad) sub popfq movsb add pushq (bad) pop ficom jp mov (bad) cld sbb mov mov xor notl adc (bad) cli or rclb test jb xor jmp fild (bad) fwait lret push rex.WRB stc clc add and cld fmulp add insb movsl (bad) rex.RX (bad) jnp (bad) add hlt add gs out add imul lock add test jb cmp cmc cs xchg out outsb add cltd sar jmp mov (bad) enterq adc ja lock pushfq stc callq adc add jno insl cld and rex.WRB outsb hlt insb jb push test jb cmp add lods icebp movabs out rex.RB pushq adc lea movslq test or shr and stos leaveq add pop stos sar repz cmp (bad) (bad) rex.WXB movl xor movabs sub loope std (bad) (bad) pushq cmc retq fs cmp mov retq out (bad) rex.WRXB cmp xchg mov fdivp lahf stos add push stc iret idivl add data16 or mov addb nop (bad) cmc push mov mov jle xor (bad) mov sti add add xchg ja roll mov mov pop sarb stc mov scas sti stc push jle mov nop (bad) sub sub xchg rcl pop test sbb xor rex.R jge in scas cmpsb rex.XB jl push fsub cmp cld add jo jb fsubl xchg shlb mov out movabs mov rclb sahf (bad) movslq imull adc idiv in add or (bad) sub rex.RX cmc sahf cmpsb leaveq (bad) jmpq xchg xor xchg add roll or out rex.WX cmp cwtl (bad) rex.WR in (bad) shl rcll add (bad) cli adc mov sahf out cmp rex.WR fwait adc add test or lea cmp (bad) fcmovnbe or (bad) in cmp (bad) add mov in imul add add sbb movabs stos jle adc sarb add cmp lods (bad) lret (bad) mov add add cmp adc iret outsl mov rex.RX (bad) jbe fdivl sbb (bad) cmp cli push or adc js jo add fdivs imul jle xchg ja pop mov negb xchg mov es mov pop rex.R xchg jbe push cmpsl sub pop (bad) stos movsl jnp in clc (bad) out sub pop rex.WRB rex.X pop mov (bad) or add mov jl fcoms idivb addb (bad) rex.RX mov jle jg (bad) (bad) xchg or pushq leaveq (bad) adc add push mov add xor cmp and sti fwait push out rex.W ss retq rex.X imul test adc cmpsb jg adc fistpl sub push add add jmpq ss jrcxz sbb sub rex.WXB jp push cmpsl add adc rex.W test push pushq pushq (bad) rolb pop cmc ss ja lahf cmp push imul out jno iret pushq sub jb jbe mov je push test rex.RX lret adc add push mov fdivr jne xor sbb add (bad) fstps mov or jg (bad) and mov add (bad) stc lret push jno jle stos sti and xor fs fildl rdmsr jmpq add xchg (bad) jno (bad) xchg pop add cmp pop clc sub mov (bad) mov jb (bad) rorb sahf rex.WX incb orb jl sub (bad) loopne out and add add or imul cltd mov (bad) add and push sub cmc xor mov xor in jns insb mov rex data16 enterq cmpsb movslq jmp (bad) mov rex.WRX mov in lea rex.WRXB movb jrcxz jg movabs lea mov int or out mov add (bad) rex.WRB addr32 pushq sub roll outsl sbb rex.WB rex.R rex.WX add in cltd xor imul jbe ficompl mov (bad) jo in and out lret out or movslq sub cmp jno add cmp mov or lret (bad) sbb movl add imul add push mov add mov jp lea int (bad) add (bad) adc jle xchg lock movabs cld pop cmp jg mov movabs or add xchg cmc sbb retq mov callq sub jp pop jle pushfq mov (bad) (bad) sbb lods jb mov jae lret rex.RXB add add jno mov (bad) fisttpl mov jmpq pop (bad) out std cmp add cld flds sahf mov int3 rclb rex.WXB lods (bad) divb cld sbb (bad) hlt movsb mov retq stos jnp and jle rex.WB insl and hlt pop ficom add pop (bad) cmp cmp mov add out clc fs xchg push pop cmpsl adc (bad) (bad) clc (bad) fcompl (bad) in cltd jnp rex jle popfq jl test jb pushq rcl (bad) js testl movslq hlt mov jmp jnp jne jae push leaveq stos add xchg xorl rex.WRXB cmp stos or jmp xchg cmpsl xchg shl (bad) (bad) iret or (bad) rex.WB sub pushfq leaveq int mov cmpl (bad) pop xchg loope xor push (bad) sahf or por lods notb (bad) (bad) sbb addr32 in rex.WB (bad) jge rex.X jge rex.RB retq lods imul int3 sbb jl imul rex.B out insl (bad) sub rex.R leaveq rex.WRB (bad) jbe jns rex.X jmpq jne cmp or mov loop jmpq (bad) pop stos jl jne pop divl and out lods xchg in imul adc incb fisttp (bad) jno pushq addr32 lods xor (bad) jrcxz (bad) xchg jne out sub imul lahf js sub pop test adc rex.B (bad) jbe sub rclb (bad) cmc rorl add (bad) mov stc rex.XB xchg mov push in mov callq scas ficom (bad) push mov cmp pushq and je std jo add callq outsb jle lock in insl pushq push mov (bad) mov xchg cs enterq add cmp lods push mov sbb (bad) es vpunpckhdq rex.WXB faddl scas jrcxz mov (bad) test cmp pop in lock and int lods mov (bad) imul pop push cmpsb (bad) mov and push mov pushfq xchg xor mov fmulp movabs sub xor or in out sbb jmpq xchg mov adcl sbb nop jne mov rex.WX jp (bad) or jge jae jmp (bad) cli lods rex.WRXB outsl or popfq (bad) loope push mov (bad) (bad) (bad) repnz movabs adc cmpb cmp movabs shlb outsl xlat add insb data16 (bad) (bad) fcomps retq insl xchg lret rclb fcoms movabs lods mov jb pop lret add fdivp lock (bad) rex in add xchg popfq sub cmp xchg xor fbstp (bad) rex.WRXB (bad) cld rorl pop rex.WX jns push jge xchg (bad) xorl js movabs rex.RXB push jrcxz mov adc movabs or add sbb rex.RB rex.WRXB iret jle addr32 or cwtl out fs jbe jg sbb outsl rex.RXB retq pushq (bad) lret (bad) cmp fstpl fmull in add retq mov jb add jae or (bad) movsl add movsb mov sub mov rex.WRXB (bad) and mov popfq adc jmpq pop fs sbb rex.WRXB gs jle xor rex.W sub roll fcomip adc jp or repz jle add cmp retq fild add jbe push adc pushq push and (bad) or clc push data16 (bad) adc xor stc sub enterq lods test lret (bad) sbb mov pop cli out push in push imul or xor rex.WR jg xorl mov rex.WRB rex.RXB mov je xchg (bad) rex.WX sub (bad) (bad) insb xor sub jl std nop fdivr movabs jge sbb or (bad) mov out callq mov shl cmp (bad) (bad) (bad) cltd xchg (bad) or push hlt frstor and rex.B pushq and pop cmc mov movslq add pushq lea mulb sub jl cli mov jmp orb scas hlt xor jrcxz sbb jnp mov rcrl outsl mov jp mov pop xchg mov test xchg adc stos add (bad) xchg sbb cmp cltd lcall pop clc enterq sarl rex.RXB psrad xor or and cmp shrl mull hlt mov (bad) push add sbb (bad) mov (bad) mov ss jle lret test fstpt (bad) (bad) divl push push add sti ja jns xchg mov (bad) jo (bad) and std (bad) pop (bad) sub sti add push mov popfq mov jle (bad) mov (bad) (bad) (bad) jnp outsl (bad) (bad) std pushfq loopne movsl sbb sbb out xchg (bad) bndldx (bad) push testb fwait jmpq add cld push xchg es mov movabs mov xlat xchg orl xchg js xor ja mov insb xor push js jns pop jo enterq pop out sub (bad) pop cmp loope (bad) in rex.RXB repnz fcomps icebp outsl cmp jle lods jne xchg or test adc adc and lret pushq xchg rex.R mov push pushq fs (bad) mov or popfq add movslq xor jp ficomp mov adc mov icebp (bad) (bad) xchg push nop (bad) fisub (bad) rex.WRB xor shr (bad) repnz pushfq pop push andb (bad) (bad) jae jrcxz lret xlat (bad) ficomp xor pop push cmp pushq jp fisub callq mull movabs add xor jle ja push std mov mov out xchg imul cs and cs pop push (bad) (bad) test push movsb outsb jae outsb and (bad) test xor cmp or and (bad) jo pop popq imull rex pushfq push mov scas mov es xchg xchg insb (bad) (bad) (bad) (bad) (bad) (bad) mov (bad) pop rex.B fildl imull (bad) dec es xchg sub stos (bad) (bad) xchg cld mov out enterq or jbe (bad) and cmp scas sti out (bad) xchg sbb mov jmpq xchg pop adc xchg rex.WR xor (bad) pop and sub scas (bad) lods or insl (bad) pop (bad) xchg ds sub (bad) mov xchg or jb (bad) push rclb test or jle jle sub xor out mov in mov mov jg and and loope jmp movsl pushq sahf mov or callq mov (bad) xchg adc in (bad) movsl cld push (bad) mov (bad) callq cmpl retq stos movsl insl and and mov movabs mov roll cld cmp sbb loop sbb sbb (bad) mov add cs jl roll imul scas cmp add and xchg (bad) mov adc scas pop (bad) je sbb add add (bad) insb push jb rex.WRB leaveq jg rex.XB xor insw pop (bad) xchg jb xchg outsb addb pop fwait mov (bad) rex.XB insb outsb retq orl ljmp mov es popfq and mov jne (bad) adc xor push pop mov (bad) (bad) enterq addl adc std popfq iret push sub pop or lea or mov xchg je (bad) (bad) sbb (bad) mov in lods loopne mov push mov rorb xchg push pop (bad) rex.XB rex.RX rex.WRB movslq and (bad) or sarb and out (bad) push push mov add rcrl loop int dec and and data16 pop movabs mov popfq xchg rex.WRXB loopne rex.WX std sub cmp or cltd rex.X rex.XB mov lret sarb adc fisub jg rex.RX nop mov fisttpll push sbb xor rex.WX mov rex.R divl mov or movabs mov fbld movabs iret movsb shrb sub fistpl (bad) mov rex.XB outsl (bad) xor fs repz popfq rex.WX sbb mov (bad) pushq push (bad) sub xor rex.RX jnp shlb out loope jno fwait jg out shrl ss (bad) sub or mov jno and popfq repnz add sbb cmp add rex.WRX out mov pop adc fstpl cmpl pop sbb push lahf cltd sub sub push subb or or (bad) insl xchg jg callq jle jp std xchg (bad) lea (bad) sbb int sub adc fs lods (bad) repz jl jno sbb mov add pop (bad) retq xchg enterq pop jg add pop xchg add sbb idivl (bad) add or jb outsb sbb cltd bswap add addl stos cmpb add rex.R (bad) mov xor jp add lock rex.X mov stos in (bad) (bad) xchg sub clc mov jmp (bad) (bad) (bad) flds jns mov add push pushfq (bad) (bad) xor jp add mov push outsb adc add movslq add cwtl retq scas xor sbb cmpsl imul or fldenv (bad) repz add cmp rex.RXB mov sbb cmp jo rex.WRX rex.WRB (bad) add (bad) mov and xchg mov outsl add pop jmp add rex.WRX repz out add rex.RB rex.W mov jg and (bad) add mov idivb (bad) fs push mov mov sbb in lret sbb jg fadds rex.X mov sti cmp cmp fbstp movabs and xor rex.XB (bad) mov push sarl fsubrl (bad) cmpsb (bad) (bad) cmp lahf (bad) cli (bad) add rex.WR add fst jb fstps pop cwtl xor cmp jrcxz adc add (bad) cli (bad) push or sahf (bad) xor jrcxz scas or (bad) bnd add xchg outsl pop jle mov sahf stos (bad) cmp xchg sub pop or xor add pop xor outsl xorb rex.X int3 rex.WXB mov lea sbb rex.XB movl sub (bad) fstl sub movabs rcll scas pushfq xchg add jne in lahf mov add mov add sbb add mov mov rex.WR (bad) sahf (bad) mov jo rex.WRB ss pushq (bad) and pop jb rex.WRB jle cli mov or jne push jmpq gs jge scas (bad) movabs subl sarl outsb repnz rex.WX mov xchg mov (bad) fwait push hlt fsubrl xchg and ja jns (bad) (bad) jbe sbb (bad) pop rex.WRB ss js repz outsl jae jge add xchg jg sahf or push cwtl xchg cmp xchg adc jo mov jbe cmp (bad) in sub fsts rex.WRXB (bad) retq xor xchg mov mov nop (bad) adc and push (bad) sbbb jbe retq ds (bad) mov push callq pop js jge jl mov (bad) (bad) mov popfq pop mov jnp (bad) mov rex.WRXB (bad) jns mov sub mov rex.WRX jp add sbb sub xor cmp add imul out xor (bad) pushq lea rex.WX es jrcxz (bad) repnz insl (bad) neg push nop add fs repnz cld or jge outsl shll xchg cmp cmpsb cli jnp (bad) pushq fwait and (bad) (bad) cli mov pop lods insl fs jrcxz fsubp (bad) je jge xchg cmpsl test push (bad) xchg rex.WRXB (bad) insb (bad) sub scas outsb retq jns scas or and ds fstps mov ja xchg (bad) pop (bad) or cmp pushq mov cmp in lock adc rex.WRX jbe rex.X lock cs xchg cmp jno pop scas (bad) (bad) add jmpq gs cmp add jae outsl loop ficoml iret (bad) mov and xchg insl int3 rex rex.WRB sub (bad) in jrcxz and (bad) (bad) loopne scas imul jmp (bad) icebp xor jmp sub shrb mov movabs pop jmpq (bad) mov (bad) push incb or iret (bad) (bad) cmpl scas push and movabs push pushq subl rol push cs (bad) pushfq mov mov andl retq or jge (bad) stos scas andl rex.RXB rex.WRXB mov or xchg mov pop movsl retq mov (bad) mov add fsts movabs mov data16 cmp (bad) or out (bad) mov sti sbb pop mov fildll cmp scas js lret jno pop movabs sbb in xchg add cwtl test pop stos int sarl (bad) (bad) lock jge ja mov js stos (bad) push movslq out jg jo movl lea sub and sbb adc cli xchg (bad) add and add (bad) test fdivs adc icebp add sbb int3 cltd jmpq and add add (bad) fistpll out (bad) mov mov lock (bad) sub (bad) out fnstcw popfq or jmpq in (bad) push add (bad) stos rex.WXB (bad) imul mov jle mov movsl rex rex.XB mov rex.WRXB jb frstor xor xor cmp jo pushq movslq jge rex.WXB jp (bad) mov movabs (bad) adc clc jmp std xchg (bad) rex.RXB push and addl adc jo mov fidivrl lret cli xchg (bad) fiadd (bad) rex.RB lahf stos rex.WR (bad) pop mov rcll je and cwtl fnsave lahf (bad) vucomiss ja out xchg add sahf lods jb cmp test sbb (bad) pushq test sbb fs xchg retq add cli jg cmp cld jl adc lret xor stos add rex.RB rex.R sar cmp sbb add ja lahf jle sub pop xchg popfq (bad) je mov movabs (bad) mov fsubrl mov xchg xor rcrl sbb pop xor push adc test cmp add (bad) (bad) rcll sbb hlt (bad) (bad) sub sti fs mov push pop jae push adc adc mov pop push cmp movabs jle out xchg (bad) rex.WX fs enterq xchg rex.WB (bad) notl xchg mov movabs test jle std outsb add lret jp mov (bad) adc add xor mov in lea (bad) cltd lods mov xchg pushfq or pop lahf add popq retq (bad) push (bad) (bad) shll movabs repz test sub add test mov cmp mov and pop stc or add push in fidivr jp jp movabs add jrcxz pushq sbb movsb sub mov and add (bad) push xchg in jnp add (bad) rex.RB frstor lods stc movslq rex.X jo nop rex.RXB pushfq add loop sub pop xchg retq adc xchg (bad) rex mov fidivl jp xor scas mov (bad) add pop or jl rex.WR push xchg cld scas xchg and and (bad) rex.W rex.WXB data16 (bad) xor in movabs xor adc sbb mov rol cmp leaveq retq pop int test sbb push push (bad) int sahf outsb xor or xor out push iret in (bad) (bad) mov cmc jp mov retq rex.RXB rex.RX cwtl js rex.XB es loope adc mov (bad) fwait jge xchg fidivrl int mov sarb in mov jne movabs int (bad) pop sub mov out xor rex.WXB fcompl sub xchg (bad) rex xor enterq ja outsl insb cs pop cs xchg (bad) push and and mov push mov data16 callq jmp xor xchg cld icebp scas (bad) je sub rex.X adc sub add test (bad) or (bad) add mov xchg cs mov add mov (bad) scas xor (bad) movabs popfq (bad) outsb or sti adc pushfw scas rex.RX xrelease or (bad) (bad) xchg lret rex (bad) add rcll in add xor jle pop stc jle mov mov pop or int3 push push jle packuswb mov sub rex.RB mov jnp sahf cmp out movabs stos imul popfq or mov stc sbb (bad) push insl (bad) loop insb movabs mov rex.WRXB add nop adc jle mov hlt fcom fnstsw fsubrp jo or sub sahf rcll (bad) (bad) (bad) or jle cmp femms outsb fisubrl loopne cmp sub shld jnp movabs fsubs pop add loopne int3 (bad) lea add rex.RX movabs mov add pop rex or push mov (bad) or and shl jge push rex.WXB pushq sub (bad) ja out pop adc incb (bad) in jge jle cmp shlb out rex jb fs mov or (bad) xchg sarb pushq pushq sbb push jrcxz roll xchg (bad) sbb or add mov adcl jp mov js (bad) cwtl movslq lods adc xor mov add ja rorb rex.W push (bad) xor xor fisttpll imulb xor stc and (bad) mov rex.XB cmp shlb xor cmp vmovups (bad) cmp add and movabs repz (bad) sub add sub jae (bad) div sarb (bad) repz lock movslq and (bad) add sti or jno xchg enterq (bad) callq ja mov gs (bad) roll fisttpll in push lods add add sub pushq cs rol rex.WR mov (bad) (bad) sbb add and (bad) js xchg xor xor xor sbb sbb sti fabs mov (bad) add test adc sub icebp jg mov (bad) js (bad) ja loop mov sub and or imul subl repz out mov rex.RB rex.WX mov xchg insl pop lea sub insl cltd add or mov (bad) lcall adc movabs xchg outsb pop sbb sub (bad) push fs (bad) cs mov jg movabs (bad) fdivs in test mov retq sub add sbb pop add test sbb rex.WR rex.RB rex.WX mov add (bad) cli and (bad) xchg cmp movl idivb fmull xor sbb sbb adc ja lock mov pop jg adc adc jbe scas mov shl rex.R xor cmp sub (bad) rex.WXB fadds stos sbb jb (bad) sahf pop repnz mov pushq cmpsb retq or fs push sbb mov lea sub sbb (bad) test mov es (bad) incl (bad) movslq cmc rex.X scas and cmp (bad) and cltd fadds xor add pop (bad) xlat rex.R (bad) iret pushq add fidivr adc add repz fs gs nop and test in roll push nop (bad) movabs and add xchg lret mull gs fistp jl subps sub rex push hlt pop int3 (bad) loop push rex.WB (bad) (bad) or pop push ss (bad) add js stos cli lea jnp push test mov add hlt xchg mov cwtl mov hlt addr32 fiaddl movabs leaveq pop lock xlat roll int3 rex.RX scas (bad) outsb xor movabs rex.WRB rex.WRX out mov je (bad) in movabs (bad) xchg movslq cli mov add mov movabs and add push and add and adcb adc sar callq movabs xchg jl in fsubrs incl movabs std pop rex.WR or mov adc lret xchg (bad) test clc add cmc adcl rex.W sub (bad) hlt (bad) cwtl lret loop sbb adc retq jnp (bad) jmpq (bad) sbb xor xlat (bad) sub (bad) movabs xor nop add (bad) cwtl xor push (bad) and jp cmp add mov xchg add xchg fisttpll add pop rex.WRXB cmpsl cmp outsb push iret in cmp mov pop int3 cli lahf (bad) add mov lret fdivr rex.X or sbb loopne (bad) ficompl or lret clc loope movslq sub (bad) xor cmp and mov (bad) add or cmc xor add (bad) mov out xor ss movabs fsubs jle xor (bad) adc pushq movsb flds loopne jmp add sbb mov jmpq or (bad) pushfq fnstsw je movabs jbe (bad) lahf mov add add adc push add mov xor xor enterq test jne rex.XB jg lret andb adc add push imul (bad) out rex.WB jno adc add mov pop rex.RX notl sbb fwait cmp cwtl test add rex.W mov js rex.WX jg push or add sbb outsl sub and sarl test test outsl lods retq int cmp pop mov rex.X (bad) cmp rex.RXB jle jge stos jp (bad) out lret (bad) outsb rol cmp cmp cmp stos insl out (bad) or lcall movsl fisub xchg add out xchg incb out mov imull insl (bad) popfq sarl out fwait jle lret mov clc mov mov fmull sbb fs jne mov lret add xor pushq stos icebp outsl pop out push (bad) sahf add pop mov add mov mov rex.RXB push imul sub push add mov out mov cmc jbe (bad) (bad) add (bad) rex.R mov loopne rex faddl (bad) movabs psubsb rex.WRX rex.WRXB je push lock cmpsb sbb imul and adc push (bad) mov gs rcrb rex.WB (bad) mov repz xchg xchg push pop nop addl add rex.WB jl xor (bad) adc loopne cs xchg int add push lods mov or add pop (bad) jno (bad) js rex.WRB sbb cmpsl mov add jo jg xchg icebp outsb rex.WX es jb mov rex.WRB repnz es js sub (bad) (bad) ja rex.WRB loope (bad) mov cli (bad) mov add popfq lret mov adc add mov (bad) (bad) jo lret add xchg retq rex.R gs jns nop cmpsl movabs js pushq jae fs rex.WB pop rex.W ss cmp movabs (bad) mov neg add sbb xchg or sub outsb (bad) xor (bad) cmc (bad) jae cmp data16 movabs imull pushq sti xchg jae callq or push xor pop movabs and subl cmpsl js jg sahf adc jb mov rex.WX fmuls paddusb pop jmpq std imul pop rex.WRXB rex.R movabs rex.X add out fs outsl (bad) add lahf rex.WR (bad) pop sbb add test and loopne (bad) add test xor cmp mov sub retq movsb sub (bad) hlt addl jge rex.X mov jnp (bad) or pop (bad) add cmpsb xchg cwtl (bad) pop pop or rcrb cmp cmp (bad) movslq add (bad) movsb mov sub incb add (bad) jne ja cmp (bad) (bad) fsubs jle or fdivrl sbb movabs nop add in scas xor xor mov mov movabs rorb lret adc jp or mov out add out clc insb stos js jp cmp icebp mov or idiv out or repz ss (bad) cmp add (bad) mov and notb mov add rorl and adc (bad) stc adc pushq (bad) or test jmp adc ja mov rol (bad) mov (bad) xchg cmpsl and xchg add pushfq rex.W insl sbbl out xor or push xor rex.WRX push xchg loope rex.B ss jg (bad) (bad) (bad) add cmp pop mov xor clc rex.RB in sbb (bad) (bad) xor roll rex.R xchg xchg mulps cwtl add insb andl rex.X test lahf mov push (bad) pushq or rex.RX cli rex.WRXB jo out pop and and stos mov std add movsl mov jrcxz jp xlat rex.WB or loopne (bad) add jle outsb (bad) mov mov leaveq scas insl cmp xchg mov jns test or sbb divb add (bad) notl (bad) jae rex.X sbb xchg movsb cmp add cld (bad) cli pushq (bad) add add faddl loop rex.RX jle (bad) and xchg addr32 adc addq adc xchg (bad) in adc decl gs xchg js rex.B add pushq xor jns out cld xor (bad) mov add rex.R (bad) cmp repz adc push mov rex.X in mov leaveq jl mov cmp lods je sub (bad) xor add iret insl test clc xchg jb movabs repnz out mov xchg scas (bad) jle sub (bad) orl je lret mov (bad) jae out (bad) (bad) callq cmc push xchg jb int3 xchg rex.RB (bad) lods callq fidiv (bad) (bad) clc cmpsl add fcomi lret out callq adc jg add sbb fmull jb (bad) pop jae lock movslq jnp mov cmpsl lahf mov movsb lods mov (bad) test data16 sub sub mov cmp xor (bad) mov jno movsb xchg lock xor add hlt sarl (bad) (bad) js cmp pop addl cmp adc add sub sar rex.R pop insl sbb mov (bad) jmp push xchg movsl clc xor xor imul mov movsl pop adc pop mov retq gs lods (bad) xchg test jge jl jae sub popfq pop fs adc enterq sbb adc lods mov jnp pop jne movsb stc mov lods test subl repnz pop (bad) jne fldcw cmpsl rex.W mov push (bad) out xchg fnstcw and rex.WR adc callq je cmpsl std rex.B in pushfq mov sbb sbb mov and mov iret adc loope (bad) cs movslq rex.WX pushq xor jb push js rcrl (bad) rex.WRX mov icebp stc (bad) rex.B xchg xchg lahf (bad) add jp (bad) int3 push movabs test add movsb retq push sbb adc mov and jmp int retq mov imul sbb (bad) jg rex.WRX push cmp add iret sub sti insb (bad) jrcxz add int adc jno add pop adcb stos mov (bad) add adc add cld push add out or push mov jle lar out shrb (bad) jo rex.WR movsl outsb fwait add mov add mov pop add sti (bad) push cmp sbb add jge mov sbb mov or test xor rex.RB rex.X lahf xor adc (bad) sub mov push sarl stos (bad) movabs callq push (bad) movabs out add (bad) iret rex.WRXB rcr sub mov cmpsb pushfq and jge mov nop xchg xlat add mov loope jb movabs loopne rex.X push (bad) loopne mov sbb je sub out retq jbe movsl or incb scas add adc out or sub add sbb cli pop xchg adc cmp sahf sub push (bad) cmpsb out (bad) or cmp sahf cmpsb rolb cwtl rex.R xor clc jge pushq xchg xchg and (bad) std rolb xchg mov add js stos es cmp mov fmul jg jl xchg push (bad) jl rorl (bad) jns xchg pushq (bad) (bad) sbb in ss iret movabs xor add mov jns cmc mov lahf mov mov mov (bad) repz inc (bad) fs (bad) icebp sub mov movabs imul add fiaddl xchg callq cmpsb (bad) pop insb sub clc mov jb loope jg jg jnp add jb jne rex.WXB jg stc rcrl or jns popfq sub xchg mov fwait rex.WRX cld (bad) (bad) adc add jg loop mov rex.RXB cltd fcom scas (bad) stos out rex.WXB jl sbb xchg cmp pushq outsl pop mov add js lock movabs hlt mov pop out jle insl rex.WRXB scas rex.RX jnp pushfq stos (bad) js mov cmpsb adc lea imul jge rex.RXB test xor push stos movabs mov cmpsl mov addr32 xor push lea stc int3 jge cli in (bad) jbe rex.XB jl sarl pushq (bad) stc cli cmp movabs faddp (bad) js push hlt stos ds sub pushq pop out (bad) jb rex.RXB jg sbb (bad) (bad) cld fs sub (bad) rex.WRXB lock clc mov rex.RX shl rex.X cmp and xor (bad) lods xchg (bad) sub jb xchg rclb mov pop sbb or fsts movl mov fsubs add xchg xor jle xor rex.RB outsb or rex.WRX jg (bad) mov (bad) and xchg outsb fidivrl popfq mov add je add rex.WRXB js jge jbe (bad) loope sbb incl clc (bad) adc (bad) cmpsb rex.RB rex.B retq jmp sahf addr32 (bad) xor add stc (bad) pushq add mov (bad) mov fidivl rex.RXB cmp or jns popfq sbb fadds jp movslq add jmp sbb lock or imul cli roll mov jne sub and add (bad) xchg adc ja or sub cli (bad) rex.RXB add (bad) retq movabs push xlat retq pop jg sub ds mov rex.WRXB std iret (bad) jle add sub (bad) mov fidivrl rex movabs xchg stos adc movabs xlat (bad) or outsb outsb pushq (bad) sbb or xchg popfq push leaveq (bad) (bad) mov jmpq rex.X pushq sbb (bad) jb insl int3 jnp repnz cmc addr32 rex.WRXB pop mov cmp (bad) push (bad) cs insb imull mov pop outsb sti divl jbe fst jg sbb push (bad) ss pop (bad) xchg jmpq lods jbe (bad) test add retq mov pushq jrcxz mov (bad) sub xchg rex.WB sbb push (bad) mov mov stos cmp (bad) fsubs cli cltd in cmp jbe (bad) (bad) cs ss mov cld jg jl ffreep movabs or mov push test rex.WXB cmp test jg nop imul rex.B or cwtl (bad) add adc xchg (bad) or rex.B jmp xchg ficom push rex.RXB div jns rex.RX mov cmp add sub adc retq add sub add jp test (bad) (bad) add movslq (bad) test ss rcl add lock (bad) mov and (bad) push xchg xchg popfq decb scas fistpl xchg (bad) out and jmp xchg pushq insl (bad) or outsb push popfq cmp mov pushfq push lock cmp in push nop add mov loopne in and adc pop sub (bad) jge stc sahf adc jnp add mov sbb xchg or repnz lahf test lahf rex.WRXB jae xor (bad) sbb or push stc push cmp or xor mov (bad) pop pop lock sub repnz sti jne lret movslq (bad) xor sub (bad) mov add cs rcll rorb out jp adcl and sub fldenv rex.WRX insl or rex.WR mov or cmpsl add fwait rex.RB mov pop xlat outsb js jl lret adc cs rex.WR add scas stc outsb lods add sbb (bad) popfq (bad) (bad) add pop divb pop rex.WX rcl in sbb adc add retq mov pop gs add rex.WRX add movslq jle (bad) sub rcrb lret lock add or fidivl pop add mov (bad) jmpq iret (bad) in fiadd jrcxz jg add mov scas outsl push jl add callq cmpl fs js sarl pop jg out int pushq sub sbb jg (bad) stos sub (bad) cmc jge test movabs xor mov mov (bad) mov cmp xchg ds adc (bad) movabs add (bad) fdivrs add es cmp test sub (bad) vmovq imul test (bad) mov rex.RX clc cwtl adc add movsl enterq mov add or std xchg xor sub mov mov retq rcrl xor push mov jle pushfq sub mov add test callq xor and (bad) adc push rex.WB rclb test xchg movabs cmp shl xor loopne enterq add cmp cmp xchg sub pop incl add cltd rex.RX push cmp jb test xor enterq rex.WX divl mov movabs mov rex.WB (bad) jge in nop xchg stos mov outsl rclb push test pop stc incb (bad) rex.WR xchg test rex adc rex.RX pushfq sbbl subb (bad) push pushq mov test (bad) pop sub add cmp cli adc mov out stc sub xor sysexit test add rex.WB cwtl mov add rex.WRX movabs (bad) rex.WXB pop sbb cmc jns mov pop cli pop movabs adc sub (bad) (bad) or sarl and loope (bad) add imul rex.X rex.W sub cmp mov std insb jg or (bad) add jnp (bad) add hlt (bad) pop (bad) xchg cmp jg pushq (bad) pushfq cmpsb loop retq sub add mov movabs (bad) nop (bad) mov (bad) sbb add and add pop stc mov (bad) repnz add movsl imul fs mov jmp rolb rex.WB push xchg scas sub add mov or stos cmc rex.XB or in (bad) (bad) fsubs (bad) (bad) out pop out add sbb rex.WRX lret add rex.WB roll adc jle popfq int3 cmp test and sbb movslq jno enterq cmp rex.RX mov add in xor pushq (bad) sahf cltd fcoms rex.WRX sub adc xchg iret outsb (bad) popfq jle xchg rex.WRXB pop mov cmpsl (bad) xchg jp (bad) adc lret sti movsb rcll jmp sub push andb gs xchg roll (bad) ficompl (bad) and add add rex test fidiv and sahf or outsl enterq loopne cmc mov fcomps movslq (bad) add adc pushq jb sbb cltd loopne (bad) out or mov adc mov xchg mov adc or mov rex.WB (bad) and addps movabs out in data16 (bad) lret andb cmpl sbb rex.WRXB add pushq repz retq cmp sub jb mov (bad) repz repz nop fisub negb mov imul rex.RB xchg scas xchg rcll push rex.W cld ds push and add es mov and cmpsl (bad) cli (bad) rcl (bad) jno sahf cmpsb cmp retw and jle pushq mov mov pushq loope mov sti (bad) jp sbb push rex.W push jbe fisttpll insl jnp (bad) movabs xchg (bad) imul jge imul add repnz (bad) (bad) jrcxz jle pop (bad) sbb (bad) mov mov movabs test rex.RX or test test ja cmp mulb push and jnp and cmpsl rex.XB test fimull (bad) orl push mov adc rex.R mov jle cmp movabs iret lods jle mov jle fidivrl fbstp push jmpq xor ss mov rex.W xor (bad) jge clc out mov xor outsb pop jne sub cli xor in or (bad) mov gs mov sahf add loop and jg add in rclb adcl scas (bad) sub cmp movsl imul rex.WRX outsl cld (bad) jrcxz lods sbb pushfq out xchg int add cmp rex.RX rclb xor (bad) add pop mov lods outsb mov mov mov cmpsl (bad) (bad) ficoml pop rex.XB not int adc cmpsb cld pop (bad) jg fisub imul enterq loop (bad) fsubrl cld outsb jno add mov pop (bad) or push outsl int3 xchg (bad) rex.WB testb pop xchg mov xor insb adc xchg fildll shll adc cmpsl mov sub jg out (bad) sbb iret jne add (bad) mov cltd mov pop add mov pop jl or sbbl je stos add add xchg jne xor jno xchg push (bad) cmpsb and mov jge fild jo jbe icebp sbb mov cli retq xchg mov outsb sub (bad) cwtl and pop xlat add (bad) fmulp sti rex.RXB (bad) jo shrb adc (bad) test sub stos rex.WR and addb jl adc cld (bad) rcrl add leaveq decq (bad) mov xchg rex.WR scas (bad) je notl jo pop repnz or jg retq mov add js mov orl fldenv mov rex.WRXB sahf xor (bad) (bad) add fstpt out sub pop rex.X or outsl cmp push mov (bad) mov pop cli cmp rex.WRXB ss mov (bad) mov in jp add shlb fcmovne cmc outsl jb cltd rex.WR ds scas and mov add add (bad) xchg rex.WRX stc rorl in rex.RX cs add xchg sub xchg mov scas mov add pushq in add rcll add (bad) (bad) movslq jb fwait (bad) xchg xchg ss pushq add (bad) lret adc sub cld add cmp gs add repnz test mov push add xchg clc add jg adc (bad) xor rex rex.RX (bad) in mov (bad) or xor rex.WX insl roll outsb (bad) ss jrcxz rex.WR jns pop loop or add cmpsl movabs (bad) es rex.WRX in mov mov loopne pop (bad) sbb mov jns incl retq outsl loop popfq xor movl and jb mov xchg insb xchg repnz xchg je retq sub push rcrl andl sbb sub (bad) jl cltd (bad) movsl add xchg add rorb outsl adc rex test mov sbb fstpt xchg push or sub imul cld imul fimul jmp adc int add jbe fcoms int3 imul mov jl cmp mov rol decl add add movabs insb mov (bad) jo add (bad) xchg cli add stc (bad) add push rex.WRX ja mov add or (bad) out cli and (bad) shr rorb incb or (bad) rex.WB stc mov xchg xor add adc fsubrs loop jae (bad) rex.RX (bad) push (bad) jp leaveq mov xchg ds jb movsl (bad) push xchg retq jmpq cmpsl cmpb (bad) xchg sahf ficomp xorb sub (bad) (bad) push xor jmpq movabs fisubl rex.RXB rex.WB (bad) jmp jp movslq xchg fdivrp (bad) xchg xchg and lods cmp xchg mov rex.RXB (bad) mov add (bad) push int3 loop or movabs mov rex.WX adc (bad) mov add out xor fisubl cmp (bad) loopne rcll cmpsb add (bad) mov or in imul callq cwtl data16 jl xchg (bad) rex.XB jmpq rex.WRXB (bad) xor stos cld xor (bad) scas jle add out xchg add (bad) pop jns movabs xchg cmp cmc mov (bad) int fcmove retq imul mov rex.RB sarb sub icebp mov xchg test sub (bad) (bad) fsubrs sub sub xchg hlt jmpq out xchg adc rex.RXB pop mov cmpl jge (bad) jnp (bad) rex.RX stos test es pushfq insl cli pop test rex.RB (bad) lods sbb lret pop xor in sub imul pop mov push adc mov scas movsl imul (bad) rex.RX cs leaveq and test movslq sti add push ja pop adc outsb cmp je mov jae jmp nop add add jbe and out addr32 jnp sti cmp fcomps fsubrp (bad) jge cli xchg test cli lahf jne (bad) sbb subl gs imul lods (bad) fnstcw (bad) mov jle out scas lahf popfq imul jo in movabs (bad) scas andl lahf xchg fcompl push mov hlt push add divb add js sti jnp rcl cli (bad) jno (bad) xchg (bad) ficomp push mov fnstsw jo and adc xor xchg pop mov ss (bad) and (bad) rex.WRB jae sub (bad) mov rex.W mov rex.XB stc jmpq jbe cmpb pushq xchg pop shr fimul add pop lods (bad) xor mov adc or (bad) pop xchg leaveq xchg ja out xchg mov push fstpt rex.WXB retq mov jmpq in pop rex.RXB add sti fwait jno js add nop xor sub add in mov stos pop sahf add ficomp cltd jb sub retq and jb cmp and fcomip (bad) rclb sbb sub (bad) rex jp rex.WXB adc (bad) cmp cmp imul (bad) (bad) cmp sbb or int3 pushq (bad) imul addb sbb pop add sub mov jmp cmc sbb (bad) rcr movabs sbb add sub rex.WB mov jge jrcxz pop adc rcrb mov and add sub int cmpl push or jrcxz add lret jle sbb mov pop add lret adc and out ja out pushq ljmp (bad) sbb mov jno mov stos andb jg sbb movsb je imul test push callq fwait add mov sti mov add in xor movsl (bad) jo rex.WRX movabs (bad) jg rex.WX sbb movabs jle repnz lret sub sbb movabs mov add xchg mov add jp xor cmp (bad) je pop cmp rex.R jge (bad) ds (bad) rex.WXB fs rex.WR xor xlat mov repz mov rex.X fs mull jg xor add shrl sbb xchg (bad) gs notb jle xchg vpshlb and jnp push rex.WRB mov add movabs push add or lcall out clc xor incb (bad) jmp adc or xchg and repz pushq roll pop retq movb pop sub pop rex.WR (bad) std out xchg add cmp sub pushq pop push mov jmp in cmp roll pmaxsw add rex.WRB mov or je rex.WR and xchg sbbb (bad) jp rex data16 jle cmp adc ja xchg fstl jl xor mov repz retq (bad) xchg rex.W jl cmp add sub (bad) add rcll movabs add movabs mov cmpb retq data16 mov jae xchg mov ss ds cmp mov sbb insb std or jp in movabs mov rex.WXB (bad) jne fsubl sub adc lahf jbe rcrb test rex.WB callq scas in mov ja pop (bad) and test out cmpsl xor out jp fidiv in jge xchg sbb insl mov clc mov cld nop je pop (bad) hlt insb outsb rex.WXB cmp movslq (bad) mov add repnz or (bad) (bad) subl mov test (bad) mov cmp jno xlat add out xor pop std shr sbb jo std (bad) or sbb xchg mov sahf add retq mov (bad) es (bad) (bad) out add lods or test jrcxz fs mov mov mov loop lahf out and sbb jbe xor xor ss cmpsb (bad) pop jmp outsb cld (bad) cmpsb push xor (bad) rex.W add or adc xchg lea icebp lods cmpsb sub push adcl jrcxz icebp jp add lahf shr sbb insl (bad) (bad) mov scas loope pushq subb sub pushq movsb (bad) imul in push add fidivl std (bad) in sti lahf adc out sti jb cmp outsb jo (bad) gs xchg shlb movsb rex.WB jg iret (bad) test jno jmpq jrcxz js xchg jg rex.WRB sahf adc jb rex.RX pushq xorl mov in mov cmp cmp pop sbb fldenv jo std and xor pop scas lea lret mov (bad) idiv mov sahf jrcxz mov pushq ficompl fsts rex.WX fs scas sub enterq mov (bad) pop and (bad) ds (bad) movabs sbb (bad) adc xorb (bad) jrcxz add je (bad) or pop cld add (bad) jp mov lods rex.RXB push push imul (bad) sub cmp cltd and rex.RXB xchg or (bad) mov pop sub insl mov jae out xchg (bad) xor xchg cli scas xchg (bad) cmp rex.RB lods shr mov roll (bad) xlat stos jb rex.R xchg fidiv jno pushfq xchg or xchg or mov mov (bad) (bad) mov (bad) (bad) add popfq rex.R (bad) cmp sbb pop insb movsl ss insl or setp jb lods (bad) stos js hlt punpckhdq retq xchg pop (bad) xor (bad) repnz or outsb mov js or jbe cmp sub cmp in rex.RB repnz lret outsl jne lock jl callq xor fcmovu fadds clc adc cmp add mull outsb add (bad) jg decl mov loopne xor pop add xchg test add sub xchg rex.RXB jrcxz outsb sysenter cmpsl gs jg sbb in add push cmp data16 (bad) pop cmpsb (bad) inc sbb outsb jb adc pop add rex.WXB movslq (bad) add nop xlat mov pop add add rex.XB rorl rolb add cmpsl je int or pushq (bad) loop xchg jle rep stc (bad) rex.WRB (bad) (bad) pushq (bad) jmp (bad) (bad) lock jle add out add fimul test rex.WXB add xor imul sahf add hlt and push in lods (bad) cmpsb repz ja or (bad) (bad) mov movabs outsb mov rex.X jo jg (bad) out mov sbb sarb (bad) xchg or jbe xor jnp (bad) (bad) push sbb xchg xchg rex.WB or or mov jo int3 pushq push sbb mulb xchg outsl xchg and fistpll retq mov callq mov out fwait addr32 jrcxz add pop mov out (bad) mov (bad) scas fiadd rex.R mov rex.XB fwait (bad) push lahf mov and not imul outsb xor (bad) xchg jg xchg and rex.B hlt adc adc pushq addl xchg push add out rcll adcb out (bad) add fwait xchg mov sub (bad) (bad) xchg cmpsl in rex.RXB sbb popfq cmp lods jle mov test cmp gs add sbb movabs rex.WRB fistl sbb xlat in jo mov push fsts (bad) ficom add pop (bad) callq rex.XB rex.R stos xchg sarb jp pushfq mov xor add adc jb xchg loope test fdivrp icebp mov (bad) jb xor loop mov jg cmp or movabs jl cld and movabs pop xchg xor xchg xchg add push lret cmp add jmp jb pushq add jb (bad) movsl rex.RX repnz pop jb fdivl sahf hlt (bad) add insl cmp (bad) xchg jns push mov shrl movslq sub ror cld test add fdivrl xchg lret push in movabs ds sub cmpl xchg stos sbb test enterq out mov (bad) movabs out or fistp pop mov jle rex.WRX and lods movabs mov popq scas fidiv pushfq movabs adc and jp (bad) sub insb (bad) rex.WX (bad) xchg mov callq rolb jae or sub cmp in push mov and mov mov (bad) popq (bad) test scas movsl rex.WB (bad) xchg jno adc add xor add movabs adc add sub (bad) add xchg and add test data16 imul and outsb rex.W add data16 or out (bad) mov cwtl cmc sbb (bad) sub add cltd (bad) add pushq adc push jge (bad) fwait jg insb data16 cs (bad) (bad) mov mov pop or jle loopne repnz cli add iret mov testb adc (bad) rex.XB (bad) (bad) add rex.WX sub adc out rex (bad) (bad) (bad) rex.WRXB xchg lods adc (bad) (bad) sub add add roll add rex.WRXB jg (bad) xor mov mov lahf (bad) (bad) scas int int3 add faddl in sub add push rcrl and out mov mov mov test add sub jrcxz pop xor fwait mov sbb jbe sbb (bad) jbe (bad) add pop adc insb retq jnp jl mov sarl decl negl (bad) out movslq lods add fdiv fstl pop xchg mov jmp cmc out jae jp sbb rex.WX mov xchg xchg adc js xchg (bad) callq retq data16 mov movabs pop in add (bad) pushq add in pop push (bad) add (bad) imul mov jno add notb mov jb push shlb lahf ror add ss pop mov stos rex.WX add rex.W fs lock or sub and sti and pop leaveq sbb rex.W (bad) adc (bad) test push or clc mov add jmp mov xchg insl sldt cmpsb (bad) mov (bad) sub pop add loope cmpsl add cmp xor sub mov fdivs (bad) divb retq (bad) (bad) push sub xchg xor push jnp (bad) testl (bad) outsb stos mov lods mov mov retq and rex.RB fmuls lods insb push push and mov std rex.RXB fcoms fcoml add sbb retq (bad) hlt mov mov jg jl (bad) cmp imul push test or or pop sub cld push imul (bad) iret xchg (bad) add enterq pop test jae mov sahf xchg (bad) leaveq (bad) xchg (bad) int or es pushfq jg retq cmp pushq jle cmp fiaddl cmp stc sbb stc mov sub sbb fdivrs or jle out ffreep or push push pop cmp andl movabs cltd popfq xor xchg scas jp (bad) (bad) loop pop outsl out xchg jp and stos es lea ss xchg mov rex.WRX mov rcrl addr32 sahf mov scas adc (bad) xchg rcl callq sbb sti push fidiv (bad) jg or or add (bad) xchg jbe movabs or fs rex.WX out add mov cwtl mov loope mov test ficompl cmp outsl mov xor xlat movsl (bad) jb xchg in gs jnp push mov fs rex.WXB add enterq jns or push add lret sbb push and cmp xchg add loope pushq in lods add add in jmpq rex.WR sarb add (bad) out add or add and push movsb add xor je leaveq shll add adc sub (bad) add jmp sbb (bad) jno out jo push cmp (bad) (bad) clc add (bad) mov jle cmp push stos cmp adc pop (bad) test adc mov cmp fwait cmc retq jnp push xchg xchg hlt or int3 add imul mov pop (bad) (bad) add rex.B and movsb stc rex.R mov xor add insb mov adcl rex.RB xor sahf cmp insb push mov fs pop and rex.WRXB ficoml (bad) stos add rex.X xchg shrb push movabs lahf popfq (bad) add jne and loopne jo (bad) (bad) add push (bad) imul adc sbb pop std jg lcall mov sub retq (bad) mov out xchg xor lret fwait (bad) (bad) test (bad) pushq sbbl add nop jnp (bad) cld jae (bad) xchg jg rex.W clc sbb lock loopne mov add sbb int (bad) enterq add sbb add pushq loop jle jl jo mov push (bad) mov movabs fs popfq adc (bad) nop lock (bad) rex.R and (bad) and rex.B rex.WRX jne popfq (bad) adc jae jmpq shr cmp jrcxz (bad) fidivr adc xor jns add in jb (bad) (bad) and xchg enterq (bad) pushq jrcxz cmpsl mov js (bad) stos repz jno rex mov jno sbb sub rex.WXB mov sub (bad) jl imul add or xor add icebp rex.WRX shrb or (bad) mov lahf stos int adc cmpsl push pop loop nop jp outsb (bad) jmp out rex.WB add xchg movsl movb cs rcll (bad) or pop lods ror jle cmc and (bad) stos pushfq (bad) mov add ss and (bad) push sbb (bad) (bad) mov sahf es pop add scas enterq mov addr32 rex.WXB jl mov rex.R push add or movabs (bad) stc test xor jmp jp ds lret rex push (bad) andl loope jg jge out rex.WB adc cmc (bad) stos loop mov mov adc mov cmp add lods enterq pop pop add out sbb jp cwtl sbb rex.WR std sbb add outsl add jbe rex loopne rex.RX (bad) xchg cld sahf enterq (bad) (bad) (bad) (bad) cltd fdivl test mov push pop jmp pop shlb lock int cmp lahf callq jle sbb fmull add mov sbbb push cli sti sub in movabs pushq hlt and push or jrcxz xchg mov fidivr adc leaveq add lret sub movslq (bad) jno xchg out xchg add (bad) mov data16 (bad) cmpsl add xchg test rex.WXB xchg jno mov sub int mov shrl xor data16 (bad) (bad) mov or cld pushfq add mov movslq rex repz outsl add lock movabs popfq add mov setp (bad) jmp out fidiv icebp mov xchg or rex.WB rex.RXB icebp jmp or cwtl stc cmp cmp add xchg int cmpsb pop xchg mov rex.WRB cwtl lret (bad) repnz lods add xchg rex.R fcmovnbe movabs cmp fwait mov ja cmp in insl movabs test pop stc sti cmp add jns xchg movabs xor rex.WRB mov pop je (bad) scas lock sbb (bad) cmp ja cld rex.WRXB sbb add lea je jb adc outsb sub int3 and (bad) rex.WRX in sbb rex.RX insl xor rcrq (bad) add cmp rex.WRXB mov pop and jmpq lret in lea push popq xchg cmp idivl shld mov xor loopne rex.X pop mov (bad) cli adc (bad) mov test add rex.WRXB addr32 popq stos test fs leaveq mov fwait add fwait in rex.WX lods push notb xor (bad) movabs mov and (bad) mov nop push adc jl pop sbb mov (bad) jns (bad) outsb stos lret fwait mov (bad) test (bad) or mov retq rex jp jmp loop notb (bad) scas in xor cmpsl out outsl or (bad) xchg jp rex.RX scas or rex.WB rex.W add int sbb pop jae push rex rex.W out (bad) jb xchg fiadd fbld jo (bad) pop sbb jbe mov retq xchg (bad) imul fnstenv adc rex.X (bad) (bad) stos in in add add or jbe outsl jle sbb movabs jb lret pushq pop rex iret rex.WRXB rex.R fs jb push (bad) movsb jno rex.B cmp fidivrl rex.WXB movabs mov rclb pop (bad) sub xor rex.WB cmp mov out push leaveq scas (bad) xchg shrl cld gs add pushq (bad) rex.RB fs push (bad) movabs and sar pop (bad) insl jp rex.B (bad) xor (bad) push stos pushq add sub (bad) (bad) rex.W add rclb (bad) mov movsl sahf (bad) mov jp pushq add cmp cmp add movabs xchg and mov int nop mov outsl sbb leaveq pop and xor (bad) and in rex.WRXB or xchg add jmpq out je adc xor or (bad) (bad) (bad) sbb xor jg cs repz and jnp rex.WRXB in pop jp (bad) lock out cs mov xchg rex.X pushq in pop loop rex jge push cmc rex.XB (bad) mov cmp sbb movabs xchg sbb mov xor add (bad) out (bad) outsb lods retq add data16 push cmpsb jp ja add adc (bad) addl sbb mov jle (bad) mov mov pushq std adc lods movsb mov xorb xchg icebp jnp cmp and (bad) (bad) shrd data16 pushq jbe sbb add lods xchg mov (bad) cwtl mov (bad) rex.W test jbe (bad) jb stos jp mov (bad) jp xchg sub rex.WRXB lock cmp and xchg (bad) pop mov jne ss movabs lahf (bad) popq sub push or in stos rex.RX cmpl mov add jg (bad) insb cwtl (bad) loopnel add add cld jbe (bad) movabs adc (bad) mov mov fmull jo mov (bad) mov mov (bad) imul xor and add mov or sub xor leaveq sub bnd stos outsb fwait roll movsl jg mov testl rex.WRB insb leaveq fiaddl (bad) mov xor sbb lret pop flds adc adc movabs jb rex.WRX fildl cmp mov sar leaveq add sub jle rex.W loope sarb gs adc sub sti mov xchg fs roll fildl rex.WR sahf pushfq jrcxz rex.RB (bad) (bad) insl jge xchg int3 lea fimul movsl leaveq es cmp (bad) rex.WX sti xlat (bad) add cmp in adcl outsb fnstsw (bad) movabs (bad) (bad) xchg iret test enterq fildll or xchg testl jbe and add jne out add pop pop clc mov jmp xchg retq (bad) mov stos adc xchg test loope rex.R or fmul rex.WRXB ss add xchg jno jns test out decb or jb (bad) push and pop jrcxz jo pushfq (bad) mov out xchg cmp xlat nop je stc and rex.WX mov movslq or ljmp stos pop add lea cmp push sub jrcxz sub pop imul adc xor outsb pop jns fist sbbl xor loop (bad) (bad) rex.RX pushq and lock (bad) mov jg mov add sbb xchg mov movsl adc and pushq mov mov and or jbe jrcxz lret xchg sbb (bad) pushq lods push push pop mov shlb ss lea test (bad) (bad) stos jp rex.RX lock or rex ss jne lahf stos cmpsb (bad) cld movabs (bad) adc mov ja int3 (bad) addl and sub (bad) mov movabs push sbbl rex add rex.XB sub movslq rex.WRXB jb rex.WRX ds pop cmpsl stc nop add retq jp (bad) mov repnz test add mov mov add (bad) mov add jp and (bad) xor xchg jg mov add sbb sub xor lock push iret mov movsb icebp (bad) mov jb cmc (bad) test jl jmp (bad) (bad) xchg rex.W and add cmp (bad) add popfq jg and (bad) jb pop add jg pushq mov adc lods andb add mov rex and jle adc enterq ja std or insl test mov jns (bad) add jp add retq sbb or mov xchg mull (bad) xor pushq rex.WXB sub rex.RXB jbe add movabs pop xchg (bad) rex.RXB cmpsb out rex.WB (bad) lock and adc lods or cmpsl add (bad) xchg cmp pushq (bad) sbb mov enterq mov test sub jp sar fdivl sbb pop in fdivrs add (bad) fwait jp lahf jb sbb es repz mov repnz fs out jp (bad) (bad) rex.WB fdivp sbb movsb imul rex.RX jnp (bad) ja (bad) out push lret and jb insl lret or rcrl rex insl rex adc sbb or adc cmp mov push (bad) (bad) xor sub add push (bad) xor jle xchg adc jae or (bad) xchg out (bad) insl add mov (bad) pop vmovaps lea jo movabs icebp loope (bad) adc jmpq rex.B ss callq in pushq jno jo mov ja (bad) movslq es (bad) jbe stos vmovaps push scas data16 xchg (bad) hlt add mov adc mov sub insl rex pushfq mov ss add adc fcomp (bad) add pushq xchg adc (bad) test test ja mov jrcxz rex imul rex.W fwait push mov and in and lods add mov jnp (bad) movabs mov push repnz jnp mov jle movabs rex.WR (bad) fwait callq rex.WRXB xchg push cmp pushq or in stos sahf test mov adc mov int loopne test (bad) sbb subl (bad) (bad) iret jmp fwait jp cmp imul jb rex.WRB fdiv movabs pushq (bad) (bad) sub scas sub xchg rex.WR repz flds scas test xchg mov cld sub (bad) xor (bad) movabs (bad) xchg mov sbb in jmp adc sarl insb ss push movhps leaveq xchg addr32 sub (bad) cmp cmp mov jp (bad) and pushq add fildl add adc pop jno xchg rex.R mov incb mov stos outsl in jp clc adc rex.WR outsb sub loopne cwtl pushfq vmovdqa xchg (bad) (bad) pop jg lret rex.WRX rex.RXB cld fdivrs es mov xor rex.WX rex.WRXB rex.WRXB leaveq and movsl jbe xor test cmp jno sbb (bad) lret insb add adc jbe outsl movslq push jo loop rolb add push sub xor mov jg imul cmpsb mov push (bad) addr32 movabs xor hlt rorb gs mov cmp shrl push sub jbe sub xor mov cmpsl or rex.X adc (bad) (bad) sbb and pop mov fistp lcall int add and (bad) rex.WXB stos xchg loop or outsb insb mov pushq push mov cli fsubrp movslq pop or jrcxz mov add add mov or jns movslq add rex.XB icebp xchg sbb jle ja add rex.RX (bad) push push adc pop loopne pop add (bad) add shrb (bad) (bad) rcrb test rex.B push add mov jp cltd mov ja fisubr push or movsl rex.RB mov cmpsl adc push (bad) jl roll cmc (bad) rex.WB or loop mov fucomp jbe,pn xor xor testl mov push adc mov mov rex.WRX push (bad) jg in push add lods sbb movabs xor mov cmpsl rex.WRB rex.XB packssdw movslq add mov push add jae shrl fsubrl lahf cmc rex.WRXB (bad) in fs add (bad) mov adc push andb popfq jp cltd mov cmp mov icebp and push sub add mov xchg movabs jo xor fmuls (bad) push outsb (bad) adc (bad) add push (bad) xlat jle test jne push and jrcxz (bad) mov cmpsl incl icebp sub (bad) rolb sbb push adc (bad) stos and pop jrcxz sbb sub mov jp mov sub imul mov xchg (bad) and clc jne jp mov jg lock out push cmpsb retq sahf (bad) movsl out rex.XB fwait cli mov orl add not xor mov movslq sahf incl (bad) mov movabs (bad) mov add cmp push jae mov mov fs (bad) (bad) or (bad) jae mov add adc adc add rex.XB lret pop and add (bad) hlt rex.WRB add rcl xchg lock rex.WRXB add scas sub (bad) jge adc (bad) loopne rcrl lahf decl adcb stos pop jmp xor cs jrcxz jmpq xchg xchg loop push decl cmp retq fdivl mov (bad) jns popfq xchg sbb imul lock fwait data16 in gs and (bad) test cld or (bad) movabs (bad) mov sbb jo xor int or and cmpsl pop and push sub (bad) test int3 xchg fdivrp jb jge adc (bad) jp add or xor or jnp rex.WB xchg add pop callq jne jge mov shrl sbbl pop xchg fwait mov outsb (bad) mov retq mov rex.WRXB (bad) sub add je jo repnz loope enterq addr32 rex.RX (bad) mov xchg movabs pushq insl ss and sbb jp fwait movsl cmc outsl push fidivr mov pop movabs mov (bad) add pushq push out xlat add addl out cli callq loopne popfq xchg and xchg icebp pop notb mov adc pop add xor (bad) push mov (bad) movabs out rex.WRXB mov (bad) popfq retq mov mov clc add or push lods add adc iret ja sub notl lea popfq sahf mov (bad) xchg std cld (bad) loop rex.WB retq int rex.RXB jne or (bad) (bad) mov adc (bad) sbb jo lods rex.X and loopne insb or scas sbb and sub xchg xlat cmpsb (bad) flds (bad) sbb pushq repz callq sbb push mov insb sldt jmp mov (bad) xchg (bad) add jmp jne jge pop adc sub (bad) add sarb pop sbb pop add push jge and mov (bad) or add xchg jg adc xchg adc lock pop jb mov ss (bad) jnp outsl (bad) pushq sub icebp retq fidiv cmpsl xchg adc scas cmp lahf or in pushfq test cmovo retq jl lods jb add (bad) stos in stos mov andl stc mov test ja add rex.RB rex.WRX lock fs add lahf imul fimul (bad) (bad) (bad) icebp jmp jl movslq cmp retq jl xchg and fstps adc addr32 push sbb cmp xor xchg icebp add ficom rex.WRXB vmovdqa fdivrl incb test adcb out adc jbe adc and mov (bad) leaveq stc (bad) and rex.W cmp sbb jmp pop icebp rex.W int3 add (bad) pop (bad) or sub mov (bad) xchg jle (bad) and out sahf xchg xor rex.RXB or or pop jno cmp sub lea (bad) and (bad) fpatan jbe fmul jns loope (bad) jg push and cmp sahf faddl cmpsb (bad) clc pop rex.WR cmp (bad) xchg cmp rex.B fwait fs mov add stos (bad) xchg or fs cmp push add and xchg orl insl mov push add cmpsl (bad) jle (bad) sbb rclb pop (bad) rex.RXB mov (bad) (bad) leaveq rex.WRXB add sbb fwait (bad) push retq shrb in shr pop cmpsb adc outsb xchg sub jg outsb push rclb out loope jnp (bad) js sbb jl jb sub jrcxz loopne rex.XB pop and adcb add (bad) (bad) clc xor popq cmpsb in and push test add lret subl lock lods mov or pushq (bad) pushq leaveq add xor je mov loopne (bad) pop in fs stos (bad) lock popfq cmp (bad) add movabs fcmovbe stc add or movabs popfq repz scas ror loop sub push movslq jnp sub (bad) mov (bad) cmpsb rex.X (bad) jg and add xor sub retw jb rorl movabs (bad) jmp sub insb cmpb pop jge jg in cwtl cmpsb cmp add icebp push repz cmp (bad) lods shll mov (bad) js (bad) repnz or pop sbb mov adc rex.XB jb xchg and sub (bad) (bad) or push ss jp (bad) jbe and outsl xor mov push and loopne stc lahf or shl mov es jae (bad) clc decb mov nop jp jg movsl xor mov rex.WRXB and gs lock lock mov mov int jb,pn in jno pop jnp fwait (bad) push jns cmc fs imul push (bad) xor mov imul scas mov fs jne (bad) mov mov pop push (bad) (bad) jb insl loop fnsave test rcrb push or mov (bad) divb out xchg (bad) mov (bad) rex.XB and xchg (bad) push cwtl (bad) pop and jl scas xor or xor jns sbb imul rex.RXB (bad) mov out or out cld adc xchg mov rex.X adc int jns je mov jae cwtl (bad) or push sarb fcmove sub icebp rcrb cld outsl xor fimul or rorl movslq lock in adc std sbb (bad) mov jl jns (bad) push lahf cmp mov add (bad) in cmp hlt xchg jne retq es and adc mov std fwait mov outsl jrcxz or mov jle jmp insl out cmpsl mov cwtl vpsllw or (bad) sbb mov jle rex.WX jo add movslq movabs fist jg fidivrl (bad) cmpsl outsl scas add add loop (bad) sbb jns insb rex.WRXB (bad) mov (bad) pop xchg push rex.X xchg in fcomp rorl rex.RX fistp pop (bad) xchg lock (bad) test repnz xchg out (bad) insl sbb push xchg jge (bad) pop repnz sti mov sub jl mov lret callq rex.WRXB sub or add scas mov lods xor rex.WRB xor mov xor sub in js and std rex.WX (bad) popfq in xchg (bad) movslq (bad) testl mov pop movabs pushq add xchg (bad) or jmpq sarb sti adc cmpsl rex.WB (bad) movsb cmp push loopne pop jle enterq cli jge or insb jae mov pushq (bad) fcoml adc int sahf mov test (bad) mov es test lods callq xor sbb mov lea retq rex je push rex.WXB cs retq lea add (bad) jp sub int (bad) movslq (bad) sahf xor cld (bad) rex.X sti repz jg (bad) sbb (bad) add jnp cmp (bad) pushq fildll pop jbe pop mov pop mov subb jl and andps add imulb rex.WRX stos rex.X es std (bad) xchg push decl sub (bad) (bad) rex.B callq loope push in (bad) jp cli pop test add clc jp stos fisubl add rex.WX add cmp add movabs sbb xlat movslq sub sbb rclb sbb jbe sub rex fs cli (bad) (bad) (bad) repz or add sub rex.WB sub mov add xor push repz jb mov shll add (bad) adc cs ficomp jnp (bad) jge divb (bad) in (bad) sbb jmpq push mov sti rcrb mov (bad) jbe rcl (bad) sti or jg mov push callq sub mov (bad) pop sub repz xor test mov outsl (bad) add sub and sub mov jl mulb rex.B rex and scas shll and adc push test sub mov (bad) pop add stc mov and js pushq ja or add repz in push mov sub or repz xchg adc cmp test mov xchg (bad) adc jno or xor hlt mov out pop adc stc (bad) mov push mov add mov xor jrcxz popfq xchg repz or repnz ja lahf fs sub sar mov adc jg or jp (bad) or movabs xchg mov jbe (bad) xlat add pop mov mov (bad) sbb (bad) cmp add rex.WRXB stc movabs movsl (bad) (bad) ss push stc xor push mov shll (bad) xchg leaveq mov push jp negl (bad) xlat fistl and lahf mov fimul add cmpsb movabs adc jg xor xor (bad) movabs callq jge loope and mov xor clc add rex.RX loope ja add pop (bad) sbb push sahf and push hlt jl (bad) jbe sub (bad) fild cmpsl in movsb notl rex.RXB pushq push insb xchg pop mov (bad) movabs hlt mov (bad) rex.XB xchg xorl lahf xor cmp out push rex.R insb or jb jb rex.WRX add sub mov data16 cmp xor dec cli repnz rex.RX pop data16 jl mov sub add pop (bad) rex.WR insl pop rex.WX incb cwtl callq jle rex.B mov imul xchg pop add rcll mov xchg jp out (bad) sbb rex.RXB jle (bad) fidivl fnsave jnp out ss (bad) xchg xor pushq mov (bad) add in rcrb mov int3 rcr pushfq stc outsl nop and rex.RX sbb (bad) rex.WB xor sbb imul xchg sbb add xchg pushq push or xchg scas and rex.RX sbb inc es (bad) movabs js jno js in movabs cmpsl (bad) add add insl rex.WB scas sub jbe test xor or ss xor (bad) lahf insl pop (bad) rex.WRX jns xor outsb in rex.WX js enterq movslq cmp in (bad) fistpl and push jmp mov pop sahf int xchg mov cmc add xor adc (bad) add jl pop fisttpl or clc adc add loop (bad) add movl movabs rex.WXB mov sub or sub lret jp insb rex.RX in add sar add fwait (bad) retq rex.WB mov add (bad) mov leaveq repnz decl add cmp (bad) mov jp rex.RX rex.WRX rex.WRXB movabs (bad) insb add sbb insl fwait sub (bad) (bad) pop xchg je nop (bad) cmp add mov cs imul (bad) sub (bad) je mov jbe rex.WRX xlat fnstcw mov mov rex.WXB pushq mov xchg sbb sahf (bad) jp xchg rex.WB add sbb loop xchg jp add sub adc mov loop push je add fs jbe sahf mov and sub fwait push jge or mov xchg rex.RB mov jb push xor repz movabs mov addl (bad) mov addr32 or jbe test cmc adc or mov xchg fnstsw sarb mov movslq sbb jae std rex.WRB (bad) loope add callq popfq cmp add cli lods fnstsw rex.X movabs mov jo test fnstcw add mov cmpsb xchg pushfq in mov fnstsw mov rex.WRX or rex.WR (bad) fs cs std sahf xchg xor (bad) jle,pt (bad) add es test movabs pop cmp add fdivp loopne iret nop mov (bad) in xor mov setnp addr32 (bad) add fild push insl rex.R ds pop fiaddl jns iret mov pop rex.W rex.X and adc fidivr cmc cs orb cmp int3 add sbb mov scas fisubl (bad) xor add (bad) movsl test xchg xchg in lock add pushq add rex.X pop lock rex movabs pop icebp add imul jle insl pushq in (bad) add enterq sub imul nop (bad) (bad) jae cmp xor jle (bad) repnz sahf retq mov loop xorl lret adc pxor mov cmp (bad) popfq jae iret std out lret callq shld out (bad) jl jb in test push add sahf rex.XB andl rex.X mov out cld pop rex.WXB mov xchg add adc (bad) lahf add cmpsb adc js jae,pt pushq xchg rex.WR rcrb mov add xchg add add sti mov (bad) xchg adc leaveq sub movabs mov rolb and add outsb (bad) pop (bad) jle jmpq rcll xchg add sub cli jge mov add mov cltd sub insl retq xor mov (bad) sub add (bad) jb jg out add (bad) xchg xchg add and icebp add out cli scas lods add stos push jp out icebp xchg loop or jb and xchg pop cmp sbb mov jl cmpl cltd push mov cmpsb xchg rex.WXB or pop xchg ss xlat jle lods xor add xor insl add xchg out std ja (bad) es out enterq push (bad) jb push mov add xchg retq shll (bad) add xor cld (bad) (bad) and cs fidivr or and cmp or mov jae rcll add (bad) pop sub cs pop (bad) lods push (bad) (bad) pop rex.X fs sbb lods nop sbb rex.RXB pop cmpsl fistpll and movslq rex.WR enterq imul push js or or rex.RB fwait mov popfq sub jo test notb cmp stc (bad) addr32 mov scas push mov sbb scas (bad) adc add cmp add mov and xor vmovshdup jl add rex.WB loopne (bad) rex repnz add rex (bad) cmpsb outsl (bad) cmp (bad) rex.WRX mov and cmp fimul (bad) nop sub and cmpsb add lahf add sbb xchg movsl push pushfq add out movsb xor pushq fnop push (bad) xchg sbb sbb (bad) jg movabs or add mov (bad) xchg (bad) shll mov jne ss notb retq (bad) sub and pop mov rex.XB test shr ja shr jnp pop test add rex.RXB jne xchg jg xor xor jns repnz mov lods add push jns add (bad) rex.RX pop cmp lock pushq mov jp scas mov (bad) leaveq push adc push lret sub xor mov add (bad) xchg insl jl add idivw (bad) mov mov rol (bad) fucomp sub sbb (bad) xlat sbb and cmc xor pop mov mov sbbl pushq jge lods mov add outsb rex.RB add pop imul rex.WRXB lock sub fdivr sub mov js sbb je in xchg in (bad) add mov movabs jns callq cli sbb jmp outsl lahf mov cmp stc jne jle loope mov (bad) xor lods iret movabs mov js mov in jno jb sub test xchg (bad) js cld push shlb and (bad) (bad) sbb loope rex jne rolb lea int sub pushq jle hlt (bad) cmc or add ss loopne retq cmpsb sub sbb rex.X fdivrp (bad) (bad) rex.WRX add ja cmp (bad) mov retq mov movabs add pop fbstp in mov clc mov roll push jmpq je (bad) xchg mov (bad) int (bad) cmp rex.WR rex.R mov jg and rex js and xchg rex.WB clc jmpq sahf pop add rex.W cmp push movabs rex.RXB (bad) or adc sub lret int es loop xchg imul mul and pop xchg (bad) test (bad) mov add int3 jp add mov sqrtps pushq stos xchg cmpsb ja roll cmp xchg (bad) (bad) in cli (bad) add test xor jb xchg add addr32 pop add cli js mov add cld ja xor pop add xor rex.WRB rex.RX int3 rex.W add cwtl fistpl stc rex.WRX pop mov movsb rex.WB sub xchg add out mov sub (bad) sbb cld sbb decb jl scas mov std movabs mov cvtpi2ps and jg (bad) ja xchg cmpsb mov and (bad) sub ja rex.X mov add xor rex callq jg pushq retq outsb add fild sbb mov sub loop int3 or cwtl lods in stc (bad) mov (bad) xchg xchg rclb rex sahf push ja mov (bad) or (bad) xchg test mov pushq pop jae sbb or (bad) (bad) mov cmp and jle mov (bad) sub add cmp cwtl cld nop (bad) adc pop mov enterq xchg add mov or fwait stos je and xor sbb movabs cmpsl mov (bad) sub (bad) mov movslq xor and (bad) rclb pop add xchg (bad) cmp fldl (bad) mov imul cmp cmc callq loopne popfq mov movabs loopne int rex.WX add rex.WRXB rex.X roll sub (bad) data16 mov cs cld and ficomp jnp sbbl shr (bad) jns add and rex.R adc rex.X sbb (bad) mov jp xor add scas callq add movslq add shr mov and xchg lock in (bad) in (bad) xchg sbb sbb add pop clc pop cmc xlat test add flds outsb push icebp jg add movabs movabs sbb sbb xchg (bad) sub sbb or cmp jns retq sub movabs fidivl icebp jle (bad) mov sbb jnp sti jo idiv mov xchg add (bad) push out xlat xchg or mov jg (bad) or sbb movabs mov fs sub add hlt sbb (bad) adc sbb adc mov rcrb add lret retq std pop fs cmpsl pop pop jl jrcxz jnp adc rorl popfq (bad) jae rol xchg xchg cltd cmp rex.RB sbb rex.RX loopne rex.WRX (bad) (bad) and or add sbb (bad) fstl rex.R or data16 jbe and insl xor (bad) add movabs (bad) movsb cmp (bad) rex.WRB pop xchg adc (bad) movabs gs (bad) fucomp cmp add rex.XB neg (bad) rex.W (bad) lea fiaddl jmpq jae,pt stos rex.R mov stos imul (bad) jp jg mov jmpq (bad) fisttpl ja movabs pushq (bad) js (bad) mov jb nop sub xchg jbe and xor movslq add cltd jg cmp pushfq jle sbb (bad) jns push repz cmp xchg cmp adc add retq and leaveq push pop xchg (bad) pop in add movsb (bad) add lods cli adc movb stos sahf sub hlt or rex.RX mov rcrb jae (bad) (bad) ja and jg mov push scas mov loopne (bad) (bad) pop addr32 mov sahf xchg jmp add or jp pushfq stc (bad) (bad) adc add jo mulps jp (bad) loopne shlb rex.WRXB rex.RX rex.RX add xchg mov rolb sti lahf mov cwtl pop fildl jp cld movabs push rex.WR pop mov rcrl adc adc stc pop cltd sub adc lea rcll lret (bad) or stc add div rcll xor add test add in insl (bad) int3 and add (bad) jmp jb imull mov fldt loope movabs mov or scas out cwtl fwait (bad) insl add mov js rex.WRX rex.WR pop loop rex.RB pop jg addr32 mov insl sub or fimul int3 enterq in in and gs pop (bad) xchg xlat pop adc add adc push callq xor movsb addl pop jp add or mov sub sarl insl (bad) (bad) xor add adc lahf cmp adc (bad) mov (bad) add fs scas mov jg sub xchg (bad) add sbb jne lret movabs retq test jb xchg mov fisub add mov pushq movslq test nop negl sbb incb (bad) sub cmp push sbb pushq adcl loopne in (bad) mov (bad) outsb sub jg cwtl push mov add mov add sub jne add mov in mov add (bad) sub cld fisttpll mov mov jl movsl stc lcall sbb movabs and fwait (bad) or test cwtl jmp out fiaddl outsl (bad) cmp fs rex.WX mov mov jge (bad) sbb fiaddl mov andl (bad) insb add add fdiv imul outsb adc rex repz cld rex.WRXB rex.RX (bad) sarl callq mov sbb fldl jmp rex.WRX out cld or jno add push sub xchg addr32 add pushq push sub callq int push sahf iret jp rex.RX mov rcrl sub (bad) movabs xchg pushq sub push add in jle add rex.B cmp movsb jg fimul leaveq fiaddl add or (bad) jb xor add loope fiadd fisttpll scas add jb jle xchg retq fildll adc (bad) (bad) lret jns outsb jmp pop (bad) mov test sbbl or jp cmc (bad) and pop mov jle cmpb fstl (bad) sbb mov mov ss jg,pn xchg popfq add (bad) stos mov lods mov stc (bad) (bad) es mov and mov cld xchg mov rex.RX rex.WRXB rex.RXB mov pop loopne jno mov sbb (bad) xchg pushfq cwtl ds fs mov movabs pop flds cmc icebp mov xlat add pop and movabs (bad) incl add push xchg movslq rex.RXB lods retq xor and mov and out rex.RB add cmp rex.R lock rex.WRB (bad) (bad) rex.WB hlt (bad) nop jbe jmp adc xchg rex.R movslq jb mov in mov lock pushfq lods (bad) sahf or push mov push xlat scas add (bad) jg negl (bad) jne jle cltd hlt (bad) sub sbb stc stos jp pop rex.WR (bad) addr32 add fbld sbb sahf stc jp xor xor (bad) add cmpsb push jae mov mov cmp test sub or xor (bad) jae mov add movsb imulb add rex.WX add outsl cli cmc add outsb out lods rex.WXB movabs jle scas (bad) pop fistpll xor sub add std jnp (bad) retq pop sub in nop (bad) pop xor (bad) adc popfq sub js loop cltd lods nop jle push (bad) roll sbb je in add (bad) adc xchg mov lret out (bad) jae jle jp es xchg pop pop fnstcw (bad) (bad) es mov lahf add popfq pop jae or lea iret sbb rex (bad) or movabs pop pop lret mov push (bad) ss and add rex.WXB leaveq sahf push clc rex.X rex.WRXB mov add rex.R leaveq add rex.B imulb xchg and and movabs (bad) rex.WRXB repz sbb jae adc mov jl cltd repnz sbb cmp cmpsb cs add (bad) rex.RX or or sti ds cmp pop movsl cmp icebp rex.X (bad) xchg movabs rex.WRXB in iret add js mov gs int3 mov mov movsb shll mov and loop (bad) leaveq (bad) jg movabs (bad) lods (bad) lret mov mov cli rex.WXB fucomi xchg in lret (bad) rcr or lods pushq sbb adc repz sahf std (bad) push (bad) push test (bad) je cltd cwtl divl xor popfq gs (bad) fildl (bad) shrb in xchg scas rex.W pop clc push std pmaxsw (bad) loop (bad) mov mov cmc jo xor lahf or xchg popfq leaveq and pushq cmpsb es add roll pop (bad) and in (bad) jae mov fstl js (bad) (bad) jle (bad) test sti xchg scas jno int fidivr rex.RXB sub pushq fnstsw loopne xorl sti (bad) cmpsb test rex.RX jl outsb movabs mov jno in out rex.XB rex.X mov (bad) mov mov and add add mov add lcall sahf (bad) adc cmp cmc (bad) hlt fcoms pushq push mov lods loopne cmp and std pop pop rex rex.RB jrcxz mov mov repnz (bad) ja int and mov andb (bad) (bad) sahf adc (bad) or shrb mov mov (bad) jb in test (bad) rex.WRXB jbe (bad) (bad) xchg mov in movabs addr32 in mov (bad) cvttps2pi adc insl movabs and pushq xor testb sub outsl rex.RB adc out sti pop pop loop repnz ja nop out sub mov and cmp mov data16 hlt sbb and mov (bad) push xchg fsubrs test gs fldl (bad) rex.WRB (bad) loope jnp cmp push xchg test push rex.WX clc pushfq rex.WRX add cmpsl (bad) mov jp rex.WXB jns or lret (bad) idivl sbb jnp jg add pop cltd (bad) (bad) movabs test pop (bad) (bad) cmp add xor jne jbe xchg xchg add (bad) adc movabs sub rex.RX (bad) mov (bad) rex.WRX or add jle lods sub insl ficompl jmpq es sub jp sahf loope (bad) je (bad) (bad) sbb cmpsl xlat xchg xor adcb rex xchg sbb xchg rex.WRX jle (bad) sbb add (bad) popfq enterq add rex.RB cmpsl jb xchg (bad) jbe icebp pop nop addl xchg shlb rex.WB cmp (bad) rex.WRXB mov adc jns std sbb (bad) (bad) xchg or test lods add jo adc cmpsb cmp sub mov int rex.WXB lock (bad) callq sbb or mov jb not int3 rex.RXB xchg push rex.W mov outsb mov lret rex.WRXB rex.RX push xchg mov add sti pop (bad) mov mov sub rex.WRB outsb push xchg xchg enterq jg scas add (bad) lahf jg insb push rex.WRX cmp stos scas cwtl data16 (bad) rex.WRB push (bad) xchg repnz jle loop fidivr pushq fiaddl stos sti in xchg retq (bad) (bad) push popfq xor ja movabs pushfq jle addr32 mov (bad) (bad) (bad) in mov mov jnp (bad) sub or add jge (bad) ja jno movsl add (bad) jbe mov cmp and or and rex.WXB (bad) cmp (bad) movzbl in pop popfq fcmove jmp jl enterq repnz push clc mov mov jb mov fidivr jg and push pushq loop iret jb test test pop movsb jb (bad) xchg lods orl and pushq (bad) rex.WXB (bad) mull shr out loopne movabs mov rex.RB or shrl sbb xor shll pop push imul ljmp mov or push loopne (bad) sub (bad) sub pushfq jg retq shrb mov and je xlat cs (bad) sti pop insb mov mov (bad) pushq sbb adc and sbb callq rex.R std rex.WRXB sbb sub mov rex.XB add out sub in sbb pop (bad) add mov push hlt mull test shr wrmsr add push int3 adc insb add push add shr incb (bad) xor cltd jo std jge pushq rclb jle lahf jbe or loop mov cmp jle sarl callq adc xchg mov (bad) cmp mov pop adc add (bad) iret or pop sub mov cmp mov sti (bad) cmp retq mov mov xor xor rex.WRB cli sub cmp rex.WX pop jg mov push callq lcall clc or pushq movabs sahf incl add xor jnp push rex.X lret (bad) jns add (bad) in xlat pushq xor mov adc add mov nop repnz rex.RXB test enterq and movabs jg and (bad) movabs rex.X cmp (bad) fs stos nop rex.RXB rex.R add adc xor lods cmpsb pushq xchg xor stos sub adc jnp mov mov and imul divl or xchg (bad) sub mov mov add cmp sub rol jp sbb jb (bad) cmp push cld (bad) jmp (bad) outsl fwait push in add jo lret (bad) iret fidiv je fs mov fild lock adc or pop popfq jnp jbe decb hlt push add in xor jg mov pop in popfq add loopne int mov add rex.WRX (bad) adc push cld xor add loope xchg icebp rex.X movsb es mov xor rex.W mov subl pop fldl lahf xchg mov jb mov xor roll sub (bad) mov fs movabs jrcxz in xor add movabs jae mov stos rex.WXB out imul ds sarb add retq add mov add (bad) push xlat iret add lods (bad) imul (bad) (bad) xchg cmp clc mov add pop mov add add jl sbb jp mov movabs in or (bad) je xchg (bad) cwtl (bad) out imul mov push add mov stos mov cmp loope orps retq mov jnp outsb movabs roll out (bad) sub jl movsl add sarq stos pop mov int3 sbb add ja (bad) icebp sbb out cltd enterq or and mov adc orl movabs sbb rex.WRXB pop push cltd rex.WRB and jno movsl mov sub add imul insl mov pop lahf cmpsl rex rex.WXB sarb and fcoml shl pop or outsl mov cwtl int mov lods rex.RB jle movabs and push roll rex.RB gs leaveq add movabs (bad) fcoml (bad) adc (bad) or and jg and adc jmp rex.RB (bad) mov fiaddl enterq adc add jb mov pop stc and mov fninit retq out enterq fyl2xp1 mov (bad) xchg ficom mov test stos (bad) add int3 data16 ds add stc (bad) fwait add mov pop or add outsl xor (bad) in sarl pop stos out jp,pt movabs (bad) flds imulb rex.XB shl adc (bad) add jns jp and jmp jnp incl stc and jg std cltd fild add rex.WR or ja fnstsw mov add mov gs (bad) movsb int3 xor in and sub rex.R push xor movslq mov push add in jo in stc jp jp fldt jne (bad) fdivp add sub add movabs adc cmp stos cld rex.WR or clc icebp sti (bad) pushfq movslq loop cmp add mov cld sub scas data16 shr iret outsb test callq (bad) mov pop (bad) and or jg push sub mov and (bad) out cwtl rol jp out sub xor (bad) (bad) sti xlat jg (bad) adc and rex.WB test fidivr xor rex.W (bad) scas pop mov add sub jle jp jbe cmp cwtl decb jnp push cwtl and scas and in rex.R lods pushq iret (bad) xor ss cs pushq push sub gs xlat mov lock rex.RB cmc adc sub rex.RX (bad) rolb pop or out add sub (bad) jg sub rex.WX js jo pop add outsb addr32 (bad) jg pushq (bad) sbb jo (bad) movsb and gs xchg test (bad) pop jb fcoms (bad) (bad) (bad) (bad) pop repz mov pop scas je add mov (bad) jmp sbb cwtl scas add test add (bad) jb cmp add out jae mov out jle in fdivrs xchg push hlt add ffreep movabs sti cmp fmull outsb mov pushq movsb je mov jl (bad) cwtl cmpsl (bad) outsb rex push sbb mov (bad) xor jp rex.WXB rcrl (bad) add fistl pop repz (bad) xchg add mov sub or mov jg adc adc jrcxz and loop cmpsl adcl ds mov repz lret xchg add lods in sbb add cltd add adc imul add (bad) jmpq fwait add hlt stos and (bad) push imul rex.RX fistp jmp fadds test scas je mov and sbb fisubr mov (bad) xchg in and mov cmpsb xor subl xchg mull mov mov js (bad) cmp imul sbb xchg add pushq (bad) loop cmp rex.RB rex.XB out add cmpsb lret sub rex.RB movabs push shll jl push (bad) movsb repnz mov xor (bad) adc jnp pop xor or xchg lods or in fbld cmp sbb xor xchg mov js rex.WRXB xor retq sub retq add fwait movabs cmp push rex.WR sahf loopne (bad) movsb (bad) push clc pop lods callq (bad) out rex.WRB lret cmp xor movslq jp rex.WB lret (bad) (bad) rcrb scas insl (bad) insb mov jnp (bad) imul rex.RXB mov xor mov (bad) callq and stos imul sbb push xor andl mov sub mov movabs icebp cmpsb rex.XB enterq gs (bad) xor (bad) pushq mov retq pushq adc pop rex.WRXB rex.XB gs shll pop sbb cmpl push out movsl add mov (bad) stos mov cmp test jle rex.W fstpt rex.WB sahf jl (bad) rex.W faddl cmp jnp pop in (bad) xchg jb cld rex.WX cmp (bad) retq add js fiadd jnp cli test decb adc fistp xor ss jle in xchg pop enterq movsl add mov xchg push je add xchg (bad) jb rex.WRXB add rex.WX mov cwtl push pushfq pop icebp (bad) xor (bad) (bad) sahf cltd jno sub rex out jbe jp xorb cs fldcw (bad) fdivp push (bad) push insb jp fdivl (bad) or sub mov jge movb mov (bad) cmp xor jg xchg in retq cwtl and std sub rex.XB cmpsb movabs fisubr ja jae sbb shrb (bad) xor pop out add jle push add (bad) cmpsl sbb (bad) add test pop out enterq sub jae pushq lahf mov std add and cmp cmp loopne or mov and sub mov out (bad) lods xchg mov and (bad) push sub push mov ror out pushfq jp adc and fildll jl jl (bad) int decl jno mov (bad) retq mov cmp jmpq cmpsb sti push cmp rex.WRXB add push scas enterq push (bad) cmpsl add rex.XB rex.WRX add mov jle jp adc xor lahf shll xchg jg (bad) xor rex.XB clc jl sub pop (bad) jb leaveq and rex.XB and add stos je rex.RX idiv or in movsb and test (bad) xor lods iret sub (bad) es xchg adc jg mov (bad) and (bad) (bad) mov rex.X (bad) imul rex.WR mov ja sub mov and faddl int jb out fadd (bad) rex.R in jg enterq cmp jl (bad) lahf rcrb fmuls adc jge mov out test (bad) rex.WRB xchg sub ficompl je xor cmp (bad) push imul cmc cmpsl mov xorl leaveq decb fiaddl lea rex.WRXB (bad) movabs movabs lahf (bad) incb xor mov (bad) xchg xor (bad) jp add jbe (bad) mov xor xchg (bad) out mov outsb rex.WXB jl add pop or sbb jns jg or std (bad) leaveq mov mov xchg xor pop adc jnp or push mul js (bad) add cmc (bad) out out rex.WB repnz hlt rex.WRX rex.WXB callq and stc repz rex.WRXB add xor mov pop out mov add (bad) int jp data16 pushq push gs adc out (bad) cltd sub add movabs add sti xchg psrlq bnd lret (bad) (bad) sbb fmull pushq rex.RXB (bad) jg sub sub add rex.WB mov mov repz pop xchg orb loope rex.RB rex.WX test stos in sbb jne gs jl rex adc (bad) xor add sti cmp fdivrs gs rex cmp cmpsl (bad) loop divb out push out jb loopne insl fiaddl std xchg cmp psllq (bad) (bad) out (bad) ja loopne gs push rex.WR jb je lahf clc mov icebp (bad) and xchg nop jp insl clc cli fcomps nop add ljmp adc (bad) xor (bad) outsb pop rex.RXB lods ja add xlat jae add xchg push jmpq xor jp (bad) (bad) lock movabs jle lea movslq sub mov jbe add mov mov add clc fistpll jno rex.RX (bad) add hlt add jle mov movabs jo,pn sub testl hlt rex.WRXB rcrl std jne xor pop xchg out je (bad) rex sub imul sbb fidivr (bad) gs rex jle (bad) jle (bad) mov pop test sub ja and jno movslq jb (bad) mov (bad) int3 loope mov (bad) (bad) movabs pop (bad) callq out and (bad) rex.X (bad) sub (bad) push pop movl (bad) jmp (bad) pop or (bad) xchg (bad) lock cld pop and not jg iret lods and cli (bad) or jl fmuls sub mov xchg xchg jns lods and jrcxz push (bad) addb jo cvtps2pd sti or jge jae fldenv pop xor (bad) test sbb (bad) pushq mov mov pushq cltd lea xor push sti jp push iret add out and jg xlat sarl adc xchg (bad) jb roll sahf push mov and mov jae (bad) adcb add push cmpsb add mov ficompl jrcxz bswap add xor cmp in mov (bad) mov adc lret stos add cmc cmpsl (bad) in add pushq imul sbb and movsl pop add mov jbe sub test scas pop pxor rex.WR push pop rex.WX (bad) test iret or lahf jrcxz (bad) adc (bad) jp nop and shr pushfq pop mov xchg sbb add mov rex.R rex.WX orl add insl jbe enterq add test in (bad) jg lock pop sub test add (bad) rex.WRB sahf fidivrl (bad) adc cmp pushq push movsb (bad) add sti mov xchg pushq (bad) lret add movsl and (bad) sbb rex.RX mov mov add loopne rex.X xor retq popfq cli jp mov loope push jns sarb add pop flds push cli stos sar int3 xchg jb in pop test jb jrcxz (bad) sbb (bad) repz mov lods sbb cmp and jnp jne fisttpl js rcrl out (bad) callq repz or lock or jno pop fistp xchg sub xor sub cmp lret in (bad) (bad) shrb imul push cs push cwtl rex.RB int (bad) int and pop add mov repz adc (bad) or (bad) fwait ja hlt sahf lock bsr in jl (bad) es cmp rex.WXB retq movsl cmp idiv (bad) ja stos add (bad) lods push adc add (bad) push movabs out test sbb insb jg jbe xchg loopne jrcxz lahf sbb nop fadds outsl test jae cli nop imulb add pop shr rex.WRB mov sbb sub rcl retq rex.XB fs sbb iret jns or xor callq mov add push or add int3 iret nop rex.RX and mov xchg (bad) je cli (bad) and (bad) lret lods sti or rolb movsl jrcxz outsl or xor outsb rex.WRXB rex.W orb add jge rex.WRX adc (bad) mov rex.WX rex.R mov (bad) int3 add add (bad) jnp (bad) jns or mov jmpq rex.R out lods stc pushq jne (bad) sub jp addl mov pmulhuw rex.WX and jrcxz sub (bad) jo scas lods in mov (bad) add (bad) adc add lret callq rex.WRB scas rclb and (bad) (bad) add xor out adc mov add ja pushq movsl sahf rex.WXB (bad) test add jno sbb mov mov pop or add mov (bad) cltd shl add rcr add sahf int3 add (bad) ja addr32 (bad) add adc (bad) jp in sahf push (bad) xchg movabs ja iret adc mov jbe jrcxz push imul rex.RX jg (bad) loopne pop mov fisttpll jg stc (bad) pop and push fs mov mov flds rclb fildl addr32 (bad) (bad) jg ficoml test sub xchg (bad) loopne cld (bad) adc rex.WR (bad) in (bad) ficomp mov xchg in cli add xor fidivr fwait add add in mull (bad) jb js jbe mov mov (bad) (bad) movl movabs or divb adcl and adc mov mov sbb mov mulb jmpq cltd pushq xchg fdivr jp xchg jnp fs (bad) imul cmp cmpsb rex.WR push loopne outsb xchg roll lahf mov xchg pop mov rex.W lods addb frstor or add rex.WX test mov jge jb (bad) add pushq cld retq fwait (bad) mov jge repnz callq mov jb scas movslq out pop xor (bad) (bad) jno fdivs invd add xchg pop mov movsb jnp movabs fmulp lahf (bad) cmp (bad) test sub enterq push roll shlb out rex (bad) mov add jmpq retq (bad) push jmp fsubs fs ds cmpsl xchg ss neg add movabs pop adc in mov sbb cmp (bad) push pushq repz test pop (bad) adc lods data16 scas mov jae or cmp fs sub fwait addl and leaveq fnsave std or adcl scas sti test out push add out xchg or data16 rex.W out (bad) jrcxz jae outsl and pop pop cli iret lods lret orl cwtl or fcmovb rex.RXB jae fidivl add callq xchg mov jp pushq lods push sbb fdivl cli (bad) lock iret (bad) cmp and movabs rex.WB add repz popfq rex.WRB or jo adc lods adc xor sbb xor (bad) orl rex.WRX push xchg (bad) imul clc add insl scas cmp jge pop (bad) jns out imul rex.WB shr rex rex.WRB jge cmpsb or (bad) jmpq int fmuls fiaddl rex.RB std rex.X out je rex.WX (bad) (bad) data16 icebp ss rex.WRXB repnz jg xlat add int3 sub xchg adc xor add pop push lods mov je jbe hlt mov clc add (bad) push (bad) xchg rex ss mov rep retq rex.W int3 pop mov jbe loope retq add or add mov add int add nop mov push mov add sub xchg jmp (bad) (bad) pop adc mov pushq cmp js (bad) cmp movsb add (bad) mov scas rex.WRXB push add (bad) sub (bad) cmp push roll jns pushq out jp retq push mov mov (bad) scas add movb fcompl add in sbb iret (bad) jle test xchg in and movabs test rex.WX es push sub mov scas mov xor add clc fistpl sar mov add mov rex.WRB pop sbb insl rex.WB jg (bad) out lea pushfq repnz rex.WRXB enterq add sbb pop rex.RB loop std add out scas incl fmul or mov (bad) jae push (bad) cmp icebp scas rex.WRX callq sub rolb xchg (bad) (bad) lods rex.WRB leaveq (bad) mov rcl fild (bad) sbb out add (bad) pop sub jns rex.WRXB pop test xor add (bad) int3 or repnz adc sbb sub rorb jg or test and xchg clc (bad) popfq jns mov nop rex.WRX rex.B ja push add vpaddb scas imul rex.RB leaveq adc (bad) fsubrp cmp ds mov cmc (bad) mov int xor (bad) mov add mov (bad) rex.WR rex.WRX and mov (bad) add adc or push jg adc rex.RX addb mov out jle insl rex.WXB or add rex.XB xchg add mov mov movabs pop jle mov es mov jp lahf js sub insl int3 jl fwait jnp and or jmp mov jl push adc pop mov push mov mov (bad) pop (bad) sub clc or (bad) movabs imul scas stc out sub movslq pop sahf nop fcoms jno add in pushq test push and int3 jrcxz test jne sub dec sbb rex.WRX sub and imul push mov rex.XB add add in rex.W or mov lret lahf mov and pop incb add or repnz enterq pop push sub ja (bad) outsl dec lods enterq icebp push and mov jp or push lods (bad) pushq mov sbb fistpll adc nop (bad) bnd rex shrb callq dec and mov pushfq (bad) or hlt or in mov sub add lea pop std push cmc add or scas sbb add pop (bad) jb (bad) cmp sbb jb rex.WRB jo (bad) xchg lods add (bad) fwait repnz cltd stos or (bad) (bad) sbb loopne jne xchg cld ss pushq mov rex.WB jle or mov xchg jg mov test clc je movsb rex.RB xor xorb ds mov (bad) in stc push pop rex.B repz and (bad) xor jnp stc push (bad) jae lock lods (bad) test mov add outsl or (bad) fistpll fnstsw xor (bad) push add cs in push (bad) jne clc jae (bad) rex.RX rex.WRXB add adc sahf mov jp test rex.WXB add add xlat rex.XB fisubr jg add pushfq add xchg repz stc cmp jl rex.XB add (bad) rcr jb (bad) outsl fcom sbb (bad) rex.RB out callq add pop loopne jge (bad) rex.RX jg rex.B in mov mov rex.WRX push or loope sbb mov jg and in adc movabs outsb orl cmpsl pop jmp sbb xlat hlt mov test jge and (bad) paddusb in (bad) es loopne movabs mov xlat pop mov stc push sbb scas (bad) cmp add fist movsb jnp mov lock rex.WRB addr32 add mov push mov sbb (bad) outsb cs je sahf (bad) sub nop mov popfq add jne lods (bad) out and rex.X xor (bad) hlt (bad) mov rex.WB rex.RX pop loopne sub and sarl rcrl (bad) mov pushq mov jrcxz add cmpsl movabs sub popfq push lods or loope rex.RX outsb (bad) (bad) add mov cld pushfq jb (bad) add add rex.R movabs add sub mov rex.WRB rex.WRX (bad) movabs xchg xlat jbe mov scas and mov in std jp loope jl add andb add addr32 je outsb (bad) loope (bad) repnz or (bad) (bad) mov push add movslq outsb negl imulb cmc icebp and nop je pop std xchg mov jbe test add pushfq jmp xchg mov lahf jns decl notb pop test cmpsb cmc or add gs xor ss (bad) xchg stc add (bad) pop mov xor gs rex.WRXB insb in sub movsl jns add mov sub fsubs lea fisub jg hlt mov fwait mov pop sti lea rex.RB std xchg pop add mov (bad) add sbb xor std icebp add (bad) cmpsb jae addl in mov clc rex.WRXB rex.WB pop icebp rex.WRX add cmp cmpsb pushq lods xor or push movabs std cld jbe jmp jg jnp rclb out fimull sahf xor xor nop (bad) mov js ss rcrl fildll ss nop mov stos lahf xchg cmp jbe (bad) nop cmpsb xor sub mov mov and lods ja ss pushq (bad) fcomi jg (bad) jg std out adc pushfq outsl xchg or test insb shlb gs movsl movabs incl mov rex repnz insl rex.WXB scas push fistl mov rex outsl sbb mov retq jbe sub push jl adc andb (bad) (bad) sub sub (bad) xchg cmp pushq (bad) lret (bad) stc jg or pop callq sub (bad) fmull mov or rex.WB push lods (bad) (bad) bnd stos cwtl mov cmp mov xchg (bad) imul js iret jnp ds test repnz adc (bad) jg jg movslq jge push cld (bad) mov add out ss out cwtl xchg lret js mov mov xchg (bad) out (bad) in and mov jmpq (bad) cmp jle test outsl sbb mov jge adc sbb cld jae push sbb fiaddl lods enterq rex.WB shlb inc sub pop hlt gs es enterq mov xor scas shrl rex.WR mov jle leaveq rex.XB rex rex.B mov (bad) std sahf push fwait rex.WR xchg (bad) fs adc rex.WRB (bad) jno mov incb (bad) popq nop (bad) fist pop (bad) (bad) or nop xor pushq mov out shrl pop fs (bad) xchg sti sub jg cmp js push rex.WRX sahf jp (bad) scas jb test imul test sbb movabs add fnstcw pop jrcxz lahf and rex.R js lea in rex.WX xchg data16 insb mov sub (bad) add pop test jb (bad) (bad) hlt mov decb rex.WXB jp cltd (bad) (bad) iret (bad) or sahf in and stc stos movabs ja outsl movsb (bad) sbb rex.W jge rex.WXB test lock fidivr fstps push test pushq (bad) movsb jp fdivrp sbb cli or scas (bad) rex.RB xchg roll (bad) pop mov mov (bad) (bad) testw cmp (bad) xor xchg sub sbb fdivrl (bad) add rolb add jg sub and mov xchg push rex.X pushfq movsl add jbe adc add xor ss (bad) mov rex.WRB (bad) movsb add and (bad) jle (bad) fistl cmc rex.XB shll adc add mov lret fcmovb jno leaveq fs sbb mov (bad) xor fisttpl rolb sbb pop cmp fldcw jp (bad) nop pushfq (bad) mov (bad) cmp (bad) in cmp ja lret cmp retq jnp icebp lods testl sbb (bad) add xor rex.WXB jle in add js stos lahf add (bad) retq mov insb or cs je sbb mov add xchg or rex.WR jb xchg roll enterq and out (bad) lock lods fs movabs (bad) in retq mov or push cmp pushq (bad) xlat jae decl lahf loope mov rex jbe rex.WX or out xchg push jge mov xchg insb (bad) add jg (bad) sbb es add in scas rex.WRX (bad) mull lea jb cmpsl fs add sti cmp cmp jno mov scas or xor cmp jb fnstcw mov mov adc mov jrcxz (bad) (bad) add pop jmp sti in adc (bad) mov add sub xchg pushfq insb and sbb xchg js mov jb jne jg rex.WRXB mov cmc push std in (bad) ss xor rex jl or cmpl popfq or mov cmpsl xor jmpq (bad) (bad) or mov rex.RXB add or (bad) mov rex.R push cmpsl jo add xchg sbbb test fwait (bad) mov sbb (bad) cmp (bad) or rex.WR (bad) add add rex.RX ficomp or enterq test retq (bad) imul lahf jle cmp (bad) movabs add pop retq mov add (bad) out insl out jge sbb add xchg add cld jle ror rex rex.WRX out cmp add add sub cmpsl add add fdiv push sbb mov mov (bad) cmpb mov ja jnp mov and mov (bad) rcl push jrcxz add mov cmpb rex.WRX (bad) std fimull cmpsb mov (bad) fs add xchg imul icebp sti jb callq and movabs mov jle,pn mov rex.W jnp out fistl and mov xor cmc or rex.RXB sarb scas mov (bad) loop sbb jp rex.X gs sahf fcomps or fmull movl (bad) jbe adc add mov imul jg andl xchg push stos rex.W or movslq (bad) (bad) xor push jb add (bad) pop (bad) js je (bad) rex.RB or jb pop add int cmp fs xchg mov xchg pop rex.WR test jnp (bad) (bad) or jrcxz mov data16 insl mov ja addr32 jg,pn mov loopne imul mov add (bad) jge stos fidivrl (bad) cltd mov rex.RXB sub jle test (bad) push cmpsl in adc in xchg movabs or fadds ficomp outsl xor pop (bad) xchg add mov xor (bad) mov sub mov pop rorb push mov pop int jge (bad) mov pushq fs cmp jl (bad) leaveq or xchg add adc jns mov mov jg (bad) add mov rex.RX jmp callq js jl jb in lea icebp (bad) mov mov rex.WXB sub rex.WRX (bad) int3 add std sub cld xrelease pop ja (bad) add cmp xchg imul lea and scas (bad) and (bad) (bad) jae jle jg lahf cmp (bad) nop jge rex.WB and xchg loope rex.WRX mov movsl fs lock (bad) je cltd jb pushq cmpsb add mov movabs mov outsl (bad) je (bad) sub pop push mov leaveq (bad) add fbld (bad) insb push repnz cmpb cli in rex.WRXB movabs rex.WXB in insb cli add or retq mov retq outsl (bad) sbb imul popq mov scas movabs stc test add xchg jnp lods imul cmp adc (bad) jle jge ja and (bad) add in lahf jno incb sub cld fild cmp xchg loopne je clc sub imul jl sbb xor add pop mov sub add out pop (bad) iret pop or (bad) mov leaveq mov rex.X jle outsb xchg (bad) mov sub push (bad) sti std test cmp test or lods xor cmp push jo (bad) adc stos movabs cltd jrcxz rex or pushq rex.WR insb push adc jge mov jp cltd pushq xchg gs jae ss in je (bad) outsl sub ja imul mov add (bad) rex.WRXB (bad) jg xchg lods mov rex.RXB xor sbb fnstsw (bad) loopne pop cmp jb add xchg jne jns (bad) or mov mov rex gs cmpsl xchg insb pushq out test rex.X rex.WX mov xchg lock push xchg ficoml loope loopne cmp jb fsubrp add cmc imul sahf rex.B add lret mov rex.R cmp or scas (bad) pushq adc movsl pop add mov cld jle or rex.WXB movabs add in sbb notl or (bad) and cwtl add icebp fld jns ficompl adc cltd jp data16 add push in add test out add xor xchg add mov push xchg cmpsb jge stc test or int rclb pushq and rex.WRXB jg and add repnz jmpq mov pop fwait (bad) add (bad) xchg rex.RB sub pop (bad) in and rex.X mov cmp (bad) mov scas insb pop rex.WB loop shrq add (bad) (bad) cmp rex.RX mov cltd xor cmp adc mov rex rex.WRB rex.X (bad) add nop fdivrl or int3 movabs and cld pop xor and cmp jmpq mov cli mov push xchg cmp sub xor xchg sbb jb div in pushq shr rex.W callq vpsllq mov loope jg jg je xchg notb (bad) iret lods mov mov pop es retq callq pop test sub movsb push rex.RXB mov xchg cs mov outsb pop and sub sub xor sbbl push sub mov (bad) psubsb cmc int3 rex.R rol mov je or sbb sbb out cmp scas sub pop rcrb (bad) push push xchg out rex.WB cltd add pop int test jnp xor sub adc (bad) jbe mov sub (bad) cmpsl sbb out push or je pushq mov sbb push push movslq cmp rex.W (bad) lahf (bad) adc (bad) jne shll jl (bad) scas rex.WB rex.RB sti insl add (bad) rex pop push repnz add and push (bad) sbb (bad) in psubb sarl (bad) sahf pushfq adc fisub mov pushq mov sub sub repnz jno push add stos int3 pushq outsb mov sarl and sahf loope and mov cvtps2pd negb add rex.RB jns es jp retq gs sarb (bad) fwait stos cmp (bad) (bad) adc jle out add mov add rex.WRXB add leaveq fadd sbb add scas outsl mov sbb in jbe mov jl pop add xor sub add adcl fstl je scas (bad) pop in rex.W rcrl (bad) add js cmpsb imul add (bad) sarb xor jl jmp mov jg mov add rex.WRXB rex.WR add sbb rex.B js test movslq sahf (bad) rex.RB adc sub and or jne pushfq int3 jo lock incb sbb jno or in cwtl movabs jle pushq je scas (bad) out add rex.RX movabs xchg adc (bad) neg nop outsl je rcrb adc (bad) icebp pushq (bad) mov js (bad) jae int3 test std mov rex.XB lock mov jle out mov xchg lret pop movsb add lods jge out rex.WR sbb (bad) rex.WRB or fs rex.X xlat jmpq sbb push mov add adc pop rex.RXB push pop cltd add mov mov xor jl xchg push sbb (bad) add cli (bad) fistpl adc jb cmp ljmp mov and movabs pop loopne rex.WX adc add (bad) lahf pop (bad) (bad) jmpq fistpll in pushq add (bad) (bad) pop add sub cmc mov and fs pop jge add scas push shl addl pushq push add clc fistpll mov out push (bad) shr mov push shrl xor mov cmp rex.WX and sbb int3 stc sbb fcoms rex sbb sahf or rex.B mov add push out rex.RXB sti stos (bad) jno jns add pop sbb sub jae add (bad) (bad) sbb pop mov cmp mov adc jp idivb sub (bad) rex.X rex.X or jns cmp jo xchg and int add fwait mov xor (bad) loopne add jg rep mov mov jnp jae add js adc cli (bad) lods push (bad) and push sbb xchg loopne stos or movabs xor (bad) cld mov cmp loop pop out fwait xchg rex.RXB or xchg fisubr rex.X cmp jbe add jrcxz lods or cld fstpt fldcw in (bad) mov rex.X sub rex.RXB outsl xor add adc rex.WRB sub rex.WRXB mov (bad) repnz (bad) je lret addl jno lock pop cmp add (bad) ficoml cld and pushq ja imul movsl jae sbb cmovs cmpsl sahf jb fs js pop (bad) (bad) ja mov enterq leaveq (bad) (bad) pushq int3 push mov jbe pop push rex (bad) mov xchg movsb lcall test jmpq mov (bad) cmpl or (bad) (bad) add jl movsb movslq js pop pushq mov movabs in mov and rex movsl int3 sbb adc out rex.RX fs (bad) xchg (bad) mov (bad) sub mov vmovapd lods fs repnz push (bad) rex.WRXB adc (bad) (bad) jrcxz add movabs insb adc fs cmp jg in (bad) xchg cmp jp sub and (bad) outsl fbstp fistp in movabs outsb sarb add jne lods jnp or sub je jl movabs movslq pop in shlb pop int3 lods cmp lahf sahf repnz push rcrl pop rex.WR out sbb scas imull pop mov pop pop (bad) test (bad) pop test push mov ja lods jg or mov xor sub fcmovnb sahf jle mov fldl rex.RX outsb retq (bad) xchg iret lods or adc movsl adc cs (bad) jge (bad) loop push add gs jl (bad) xchg stos leaveq clc (bad) insl in (bad) idivl and gs mov (bad) fisubl adc (bad) mov pop jb push jl mov xor mov addr32 adc mov sub xchg testb pop jrcxz in (bad) mov (bad) sqrtps jo int mov cmp lret orl outsb pushq adc sub outsb jb repnz (bad) (bad) int (bad) push out mov xor movsb jge pop sahf pop xor sbb mov fiaddl mov (bad) out test push scas in pushq jg (bad) rcrb nop mov cmpb jo xchg cli std movabs lods sbb jnp mov out out cmp (bad) (bad) jmp jg imul (bad) (bad) adc rex.RB lods fiadd lahf xor and mov rex.WR addr32 rex.WX movabs xchg lock pop push push jg mov (bad) outsb rcll fcomip pop test (bad) jae mov push xchg jns (bad) rex.X test movabs cld movl xor lods push mov pop jo rex.WX outsl xor rex.RXB cs repnz in rex.WB icebp jge pushq or and fsubrs es adc add jns pushq cld mov xchg mov jnp or xchg (bad) push (bad) ja (bad) and fmuls add xlat or pop sbb rex.WRX (bad) je out out mov cwtl rex.WXB cli test mov or xlat (bad) mov js xchg add (bad) pushfq cmp jl (bad) xchg or rex.W mov mov (bad) mov out sbb rorl (bad) cmp fmulp lock xor (bad) (bad) and insl sahf (bad) pop adc popfq jp jne jge jb (bad) rex pushfq sub lret or mov (bad) es cmc sub ds and (bad) fwait (bad) out (bad) std mov push rex.WRB divl mov (bad) icebp sbb in test ficom xor lock mov jg (bad) enterq jge lret sub divl (bad) scas addl (bad) sbb es xchg pop jno insl mov stc (bad) and fisub rsqrtps sub cmp cltd xor adc test mov jbe xor (bad) mov jae jb add mov rclb in adc rex.WX fwait test sahf retq lahf rclb (bad) rex.WB mov and mov and add repnz imul test sbb retq (bad) stos test decb jo test (bad) (bad) push add out popq add mov callw (bad) test add (bad) (bad) jno loope sahf insb stc sahf sub in mov rex.WRX add xor pop lock (bad) pushq or xchg (bad) mov xor loope rex.RX (bad) nop mov add rorl mov insl hlt xchg (bad) and fsubrp fninit lods lahf (bad) mov add xchg retq mov movabs jge xor mov mov add xor (bad) (bad) push or jns add and jnp add or or test insb lahf pop stc push jle imul scas (bad) pop xchg rex.WRXB add mul mov in and (bad) lock push movabs xchg sub rex.WRXB sub rex.WR ss outsb popfq in jp test push cwtl push jl jo insb adc add sbb retq push lods add (bad) rex.WX rex.XB add xchg rex.X lea jmp (bad) mov je mov (bad) jle sub popfq (bad) jg rex.R mov (bad) insl cmpb mov sti mov pop je mov callq rex.RX fwait notl pushq rex enterq (bad) repnz (bad) adc xor testb push (bad) xor add (bad) fmuls push (bad) push push pushq add push xor sbb rex.WRB notb rex.XB adc and cmp xor loopne sbb push pop (bad) fwait mov in mov sub add lods sbb sahf (bad) test add and hlt fdivrl cmpsb push (bad) rex.WRXB xlat mov adc pop mov lock add xor xor jle mov mov or jg pop hlt jmpq (bad) sub rcrl in (bad) add out (bad) rex cltd xchg add loopne movabs push cmp fnstsw add lret add outsb add test retq jrcxz add adc rcrb rex.WRXB iret je enterq ja icebp or xor jrcxz adc xchg mov jl add mov sub rex.RXB jne,pn (bad) add js and xor adc rex.WXB rex.WB test pop mov xchg fwait rex.WRXB rclb sar adc mov mov cmp push xchg mov outsl movslq (bad) jp xchg enterq (bad) or add sbb jp,pt loope jmpq pop (bad) pop add jb jle mov jg notl lahf xor jp pop (bad) sbb lock (bad) sbb adc movabs push rex.W sub out sub pop addb sbb xlat adc (bad) add or adc mov add insl repz xor imul (bad) and js adc add jle repz (bad) adc rex.WRX lods sbb rex.XB lahf (bad) pop sub int sbb stc cmp xchg mov (bad) and sbb imul leaveq out add test iret retq add pop loopne outsb cmp mov add cld cmpsl xor jnp ss out mov fdivr rex sarl lock (bad) xor sbb (bad) mov stos sub rex.RX xor (bad) cmp rex.WB or push push and (bad) imul rcrb stos (bad) scas xor (bad) mov xor insl add xor (bad) hlt fistpll add lret pop rex.WX sbb lret es mov cmp movabs jbe jle stos insl (bad) mov mul out repz ja push shll mov addr32 adc (bad) xlat jns sbb rex.W (bad) adc lods je sbb push xchg div pop cli retq jns stos js callq push sbb outsb mov jle add rex.RXB jns (bad) movabs add add xor adc jp roll jp je vminps xbeginq xchg fimul ss (bad) iret insl test adc jle lret fisttpll cmp cli scas shll xor clc sti insb pop (bad) adc (bad) jb add fidivr testb jg xchg (bad) (bad) (bad) leaveq or lods add xchg pop sbb xchg lahf sti (bad) (bad) in scas pop out add outsl mov rex.RX in movabs push scas mov pop mov jle subb jae (bad) (bad) iret pop jb (bad) (bad) mov (bad) rex fsubl lock jg mov insb movabs push jo add lret lock js and movabs mov and imul cmp pop testb jbe sbb pop sbb add sub adc add pop cmpsl in mov sbb movslq mov cld jbe (bad) gs sti jbe sahf je (bad) in push and mov outsb shrl jmpq jmpq xor rex.WRX jns paddsw pop cmp (bad) insl mov out adc sub xlat std rex.WRXB (bad) nop fsubrl (bad) outsl mov and mov jae add (bad) mov or push (bad) or jno insl adc fbld movsb rex.WRX mov fidivr cli insl movsl lods xor out (bad) cld add jge pushfq stos jb pop out mov add pushfq adc pop retq rorl mov repnz rex.WRX rex.WRB sbb jge push cmc out xchg jo rex.R pop jg rex.WB xlat nop cmp adc (bad) (bad) jne fs xor sub nop jg pop mov rex.WB fs enterq jb add and and lahf out rex.RB (bad) mov pushq vaddsd callq cld outsl lahf mov int imul lods cmc (bad) mov jo movsb cmpsl outsb jbe adc mov es jp xorb movabs mov movabs xorb fsubrl xchg rorl (bad) lret pop jnp (bad) std pop (bad) add sti (bad) imul out (bad) jne sbb xchg scas fiadd pushfq fildll test ja (bad) push (bad) scas loope cmp lahf mov push mov sti (bad) (bad) jmpq ja jle add (bad) outsb cmp (bad) (bad) (bad) (bad) fist jns popfq repz add cs vmulpd and add pop jo add mov rex.WRXB movabs and add rex.RB push (bad) jo mov rex.WX (bad) out (bad) movabs rex.WR clc add pop add popfq pushq (bad) or xor (bad) cmpsl and add or es cmc rex.WRX pop movups jle rex.X or mov pushq xor xorb jnp add fnstsw enterq add (bad) push int xchg imul push add sarb sbb rex.W int3 add movslq (bad) jb cmpsl sub mov rorl jg push rex.WB xor (bad) cmpsb cmp jle sub insl fstpl add (bad) (bad) adc mov movabs xchg pop lret mov out push jns pushq mov push xchg out (bad) (bad) or andl xor or imul jp add jg cltd push add (bad) data16 movabs push jbe (bad) jnp jne add pop pop adcl stos pop popfq pop cwtl (bad) (bad) jae jg scas imul add xor add adc (bad) scas jns push mov sarl rex.RXB lahf add (bad) jge add adc jne rex.WRX fisubrl addl (bad) rex.RXB add (bad) in add mov adc (bad) nop (bad) cmpsb je stos loope mov sbb add adc (bad) hlt rex.RX repnz lods jle insl ja or rex.WRXB xchg mov (bad) fimul add repnz jae mov xchg push lea clc add pop (bad) out sbb in (bad) xchg ss add (bad) adc adc je push mov adc sbb push rex.RXB add xor jg mov lock xchg or (bad) shrb and jge,pn rex.WXB xchg or ss icebp vcomiss jle rcrl (bad) lods pop sahf loope add movb add mov retq cs jle jg cmp lods (bad) popfq or movabs mov cli and xor (bad) and add (bad) loop mov mov jp xchg shr pop mov jmp fisttpl in xor rex.WR add add (bad) sub fstl jle shrb adc mov jmpq (bad) std sbb or (bad) pop sar movabs iret jb mov js lret pop movabs cli test rcrb xchg xchg lahf js adcb nop movabs or (bad) (bad) jrcxz adc (bad) clc shrl pop (bad) pop lahf rex.WRXB jg mov rolb imul mov cld decb (bad) push jb out retq rex.WX (bad) mov fpatan mov outsb lods (bad) pop js loopne or (bad) push xchg retq (bad) in pushq rex fs imul mov repz jle pop add xor (bad) push (bad) movsl mov rcll cmc add mov jg (bad) or (bad) nop and int jne fwait scas fsubs hlt (bad) outsb mov (bad) fistpll or mov (bad) ja push test stos add xchg pushfq jbe rex.B xchg (bad) pop or cmpsb fs push test addl je and pmullw cld rex.R rex.WXB jnp addl mov lret cmp movabs movabs rex.R add ss cmpsb movabs mov int3 pop stc jne (bad) (bad) push (bad) je (bad) iret movabs pop test xchg xchg sahf clc rex.WRX outsb (bad) (bad) jb mov add lods add add push (bad) pop int3 test add xchg insl cmp lods add (bad) cld sub xor ss scas rex.WXB (bad) (bad) cmc adc icebp (bad) mov jbe (bad) outsl imul jmpq sbb (bad) ja,pt (bad) rex.WR movabs jle lret cmp jbe xchg (bad) sub icebp add lea sbb xor sbb loop out pop push add cmp rex.WX rex nop fadds push lret xor fistp pop andl shlb icebp mov (bad) in sti cmp and movabs add mov cwtl hlt fptan jb fstl (bad) sar jmp cltd (bad) mov mov or sub retq add jrcxz rex.W or (bad) cmp jg add sbb rex.WR lock jle movabs pop jo sbb xor out (bad) js (bad) xor and loope adc or sbb xor add (bad) hlt stos pushq push jg or sub push sti pop and jne iret or xor (bad) add cmp sahf addr32 ror es and movabs xor cmpsb (bad) data16 sbb lea jle std mov jle pop mov mov callq rex.WRXB xlat mov (bad) jbe enterq jp movsb sub rex.WRXB (bad) nop retq jp and fsubrs pop xchg jmpq in movsb xor jnp addr32 xchg mov adc lret (bad) push push pushfq rex.WRX push (bad) (bad) stos lret push pop mov pop jo stos rex.RX xor jp (bad) popfq rex.W xlat movabs (bad) jbe (bad) ds rex.W pop add rex.RB or cmp movsl cmp rex.WRX rex.WR jno (bad) sub jae jbe adc mov loop add std (bad) (bad) jo sahf outsb neg cmpsb pop in mov cltd imul lods fcmovnbe int jg mov (bad) rex.XB adc jnp cmpsl mov shrb test bswap insl movsb rex in and xor imul jp jmp testl add add cltd xor stc mov rex.X gs imull cmp mov sbb fisttpll (bad) fxrstor (bad) mov (bad) outsl add xor add mov movabs lahf jno sarl push scas mov out leaveq add xchg shr (bad) cli bnd or test (bad) fmuls movabs stc retq (bad) mov addl mov pushq (bad) mov movslq xchg push and je jmpq outsb jmp push push sarb (bad) stc lods mov pop roll mov (bad) cs xlat insb xchg xrelease or sarl add fwait imul loopne push fdivr je fs (bad) insb cmpsl adc cwtl mov rex.WRB jle sub pop sub jg scas jg movabs pushq lahf jl pushq (bad) xchg mov in or xchg adc cmpsb add add mov fnstenv fs add (bad) and je jne cmp add rex.B ss mov pop xchg xor ds (bad) cltd (bad) add rex.WRX (bad) (bad) rex.WR jo and and lret clc push pushq adc fisubrl pop fwait add mov xchg (bad) fisubrl (bad) jrcxz cmp cwtl (bad) movsl pushq mov (bad) (bad) mov (bad) cmpsl cmp xchg add push add add int or (bad) fldl mov add (bad) jno xchg sar push fimul icebp (bad) mov gs mov repnz push cli rex.W cmc je cmp cmp (bad) cmpsl mov mov pushq sub jle movabs outsl xor sbb and and js sbb xchg popfq mov mov cli rex.B fwait (bad) jb cmp adc insl movabs movsb add cmp in mov cwtl insb in add adc or push sti insb push add nop icebp adc ss add cltd cli pop stos int xchg fadd fnstcw rex.RXB fwait sub lock je pop push in or add add adc add pop hlt in out xor (bad) rex.WX adc imul cli rex.R fwait (bad) (bad) jle in jl movsl int mov ss add pop adc sbb add jbe xor xor lahf scas mov pop adc scas jb insl mov cmp (bad) cmp rex.WR add jle sub outsl scas sti fwait rclb (bad) loope rex.W lock cltd out pushfq mov pop add icebp push lods pop (bad) test xchg iret mov rex.R pop mulps movabs retq add or xchg out jp repz clc movq sbb jb and lods fcmovnu cwtl loope sub adcb pop (bad) mov push outsb js in mov (bad) jl jne hlt test in lods rex.WRXB pop mov divl jbe js sarb jae rex.RXB sbb imul leaveq outsl sub test (bad) sub pop push mov rex.WRXB cmp adc jae clc mov imul mov (bad) jbe retq cmp imul ds push rex.RXB push cmp retq mov (bad) (bad) (bad) outsl adcl ds js es mov jg (bad) fsubrs stc rex.RB mov loope mov pop mov idivb jbe idivb imul mov cmc out jge (bad) jno (bad) mov stos sahf (bad) jg (bad) (bad) xchg fdivs xor (bad) btr add (bad) pushfq push shll movabs jrcxz add or icebp add xor xchg lahf js add (bad) out mov loope,pt cmp or test xchg push xor jmp or sahf jg loope xchg imul sbb in mov addr32 fbld add and or jno fisubl scas lret xchg (bad) pushq jnp,pn rex.WRB xchg retq jns in in mov jb rex.RXB rex.WRX (bad) mov (bad) add rex.XB fsubs out test je lret (bad) lods frstor jb data16 and sbb (bad) or add test in xchg jg jmp je jrcxz add cwtl xor outsb mov (bad) push (bad) push cmp mov stos add pop mov add je int and (bad) add jle add imul xchg (bad) mov rex.RX pop (bad) incl test or mov rex.RXB (bad) stos lea jp add (bad) ss (bad) insb vcvtss2sd clc add sbb lret add out push rex.XB rex.WXB add outsb and rolb jb movslq (bad) lods es pop jg pop dec adc xor push fimul add out addr32 pushq (bad) xor retq movsl cwtl (bad) and add or push push cld and js ss add sahf fcomi (bad) mov and rcrb mov add movsb (bad) and cmp rcl jbe test pushq jl mov sub xor ja (bad) rex.XB (bad) pop icebp add rex.R push (bad) xor stos xchg jg test jno or jg cmp (bad) xchg rex.WR adc sub jge and stos add push fisubl in adc test mov (bad) pop movabs cmpsl jb shlb cwtl mov cli sahf mov add xchg (bad) rex.X fisubl lret xor pop (bad) mov sub stc rex.WRX mov movabs (bad) mov adc callq sub gs add mov test jb xchg rcrb pop sub test jmpq add jne jrcxz out xor mov add xchg (bad) scas rex.WRX mov orl jl push cmp jo jg add xor int3 fwait pmaxub xor mov xchg xlat ljmp and mov in subl sub xchg imul (bad) lock mov enterq sti jbe sahf or (bad) out ja lods add add icebp and lret rex.WRXB jg mov push lods and fwait jge (bad) lock pop adc scas incb add or mov scas and mov xor sbb test icebp adc test (bad) es xchg (bad) sub mov addr32 fcomps jbe (bad) rex.X rex.WRB (bad) jmpq scas andl mov movsb pop xchg rex.XB add xor stos ljmp test or lahf jo (bad) (bad) rex.RX nop jle adc test xor sub rex.X (bad) (bad) js sub jbe in rcl lock (bad) rex.WRB xor (bad) and mov adc (bad) clc (bad) cmp fimull rex.B iret test mov add imul add enterq add and stos fisubr sub jnp repnz and lret adc lcall (bad) iret (bad) lods (bad) mov (bad) and push mov adc test (bad) movabs std fstps sbb loopne rex.RX mov mov retq (bad) mov pushq int3 adc rex.W xor and mov rex.RB pop jmpq ds pop imulb pop retq ds (bad) pop out adc scas push decl outsl pop cmp out xchg mov hlt pushq fwait or lods pushq (bad) adc xor xchg (bad) sbb shl clc repnz and rex.RB repnz xchg in (bad) insl movabs in jns xor (bad) jne rex.XB cmp (bad) out sub or mov popfq xchg xchg rex.WXB pop lret pop addr32 repz outsl sahf or jae or popq in mov mov (bad) fwait xchg cmp retq cmp jo xor push movabs cld (bad) popfq sbb and movabs movabs test cmp xchg mov push mov push movabs mov rex.X push mull pop sub fsubrs xor rex.RX push cmp mov mov or in lock jnp or outsl sub sbb loope (bad) or sub sub and and lods (bad) jge cmc lret pushfq xchg (bad) adc cmp movabs test (bad) imul pushfq jmpq adc rex.X (bad) or or fidivrl rex.WX xlat and cld mov mov jnp cmpsl add out rex.WR icebp fstl (bad) ds int3 (bad) lret add cwtl cmp (bad) jge,pn adcl adc jnp (bad) add pop fisttpll (bad) jl std xchg (bad) add mov mov mov jmpq jne (bad) movsb (bad) loopne rex.WR xor jbe insb movsl pop mov add jrcxz push out rex.RXB sbb (bad) lock jmp and add pop jge mov sahf and and add (bad) jmp mov std sub (bad) (bad) test or add jrcxz rex.WR xchg data16 fst icebp (bad) add unpcklps (bad) cli stc callq sub xchg movabs shll lock (bad) jrcxz xchg jne mov lahf out jle stos (bad) ljmp add popq jae js jrcxz jg jp nop movlhps int3 callq stos add mov fs (bad) outsb and mov mov in int sub add fbld jbe lea xor retq add gs outsl and (bad) xlat cmpsq and jp movslq lea pushq add xor test lods (bad) sti jp mov sub (bad) add hlt or adc rex.XB (bad) mov xchg jp sarl jno (bad) rex.RX cmc (bad) out lret (bad) xlat xchg or xorl repnz pop je jp loop and jns cmp push rex.B repz stos pop (bad) or out fnstcw mov fs (bad) jne rex.WRXB fs mov jb mov xchg ja xor retq jle fistl pop (bad) fdivl add data16 jne cmp xchg stos push fs retq (bad) (bad) stos ror test (bad) movslq insb lret jmpq fldenv mov mov add jno div (bad) xor add pop ror or rex.WB xchg sub (bad) (bad) je mov fcompl add push sbb and push (bad) (bad) add add jns sub sahf sbb popfq sub add add or stos adc add adc cli add movslq rex.WX cmpsb notb test pop test (bad) xor imul push jns pushfq xor jb push sbb (bad) mov xor je jae rex.WXB mov mov nop scas in rex.XB insb movabs mov mov add pushq (bad) fdivrs rorb (bad) cld pop (bad) js (bad) or pushq and lods vmovups add cltd rex.R mov shrl xchg out mov push scas (bad) js rex.XB (bad) (bad) mov (bad) cmc jno idivb out xchg lods sub test sbb add test sahf outsb (bad) rcll (bad) xchg push in imulb pushq fwait (bad) mov lret (bad) pop or add jp (bad) push movabs xchg fwait rex.WB not jo mov (bad) movsb mov xchg js sub stos mov pop sbb lea add add (bad) jge scas (bad) outsb cs jg sub (bad) mov rex.WB (bad) rex.RX rorb jmp jns jno jrcxz sub ja cmp popq stos or adc rex.WRXB xchg sahf (bad) es add add (bad) mov vpunpcklbw rex.W and incb iret xchg adc add jbe stos rex.WR add (bad) and or outsl mov add add add mov sbb add pop fcmovnbe mov push add (bad) jmpq rex.W jno pop clc callq sub push stos es sarb pop cmpsl sbb (bad) imul xor xor rex.WRX cmpsl in xchg mov in sbb jbe jle cli mov scas (bad) (bad) jp sti mov stc xor outsl jge mov sbb iret (bad) xchg rex.WB jns (bad) add lret jno sti (bad) mov imul std and insb push xor lahf add int push movabs or pop xchg lahf js ja imul jae (bad) enterq and xchg cmpsb xchg in int3 adc int jae mov mov rex.WXB callq sar xor fild insb fdiv nop cmp rex.R add rex.RB lock repz sub cltd (bad) xlat and mov jo push (bad) pop xchg add (bad) and subl mov lods pop jne adc retq insb or sarl jl rex.WR mov lods add cmp rex.WRX mov cmp cli cltd fisubl add out mov stos (bad) add jmpq out mov retq xchg sbb lret (bad) rex.RX rex.X pop (bad) mov rex.WR out add sub loopne (bad) (bad) xor jno mov mov movslq rcll (bad) rex.WRX (bad) test rex rex.XB rex.RXB add addr32 and add fdivrl (bad) rex.WRXB pop sub sub xchg gs imulb add rex.RB movsb jg (bad) rex.R rex.WX xchg mov rex.RXB or out (bad) and ja mov add jp xchg mov and add and sbb mov pop mov pop rex.R pushfq xor (bad) add sbb mov pop retq jb ja rex.R je leaveq xchg rex.WXB (bad) rex.RX out mov mov jne popfq xlat adc mov movabs rex.X jle stc data16 add push hlt and addr32 sub fcoms mov test pop movsb loope jnp int pushfq rex.R or jb mov push mov sti test lea sub jns,pn rex.R fs movabs jmpq mov out mull std ja scas (bad) push loopne shr jle js pop icebp add add (bad) sub movslq mov enterq sbb jmp and mov (bad) pushq stc jno scas mull (bad) mov ja rex.WXB adc xor (bad) jl outsl jle out sub cmp (bad) iretq pop (bad) push (bad) out negl je pop sti xor xlat test sbb outsb loopne enterq movabs or imul loop sbb stc je cwtl std (bad) add ror add movabs loopne and scas sub xchg imul or push cmpsl add sub imul pushq test adc callq fsubrs movabs or scas lock test jrcxz adc (bad) sarl lret jne addl movsl sbbl jbe in mov xchg (bad) rclb xor add jnp adc adc js out (bad) shrl fisttp adc xchg push stos pop fidivrl sbb mov sub in rex.WXB (bad) mov pushq xor lea pop (bad) mov jne jg adc (bad) insb std jbe stos (bad) test (bad) mov pop add adc jno mov movslq outsl pop add jne mov sub mov rcll sub add fisubrl (bad) add cmp xchg scas (bad) add mov (bad) in add (bad) test sub push xchg (bad) clc xlat jmp push mov nop rcl enterq add (bad) (bad) jae cmp in and rex.WRB xchg (bad) cmpsl fwait pop pop jae xor (bad) jg rex.W mov rex.R (bad) movslq jb rex.XB mov mov add jge movabs outsb sub push (bad) or (bad) lret sti add addr32 lock xor (bad) xchg xchg pushq xchg push cmp xor mov insb sahf jne jge xchg xchg mov fldl lock jne cmp xchg outsl and jbe sbb xchg outsb in sbb (bad) mov jge cld rex adc jge jl xor lret mov push sbb xor rex.WRB sti jbe jg xchg jo fisubrl sub xlat mov loopne pop (bad) hlt fs or sbb sarl cli push scas xor push xor sbb cwtl je (bad) repnz mov adc (bad) js jg or pop (bad) xchg push pop jp sbb test mov mov and sub test lods pop pop xchg jg adc test fldcw or and nop shll out insl (bad) (bad) jns and mov push rex.RX rex mov decb ss movsbl jae sub je in sub in fucomi pop sbb out sti jl loop mov insl (bad) xor (bad) pop lret je outsb add cmc and pop (bad) (bad) mov jp andl jmp pop xchg fnstenv lods (bad) mov mov shl adc rex.B cmpb jmp (bad) jnp xchg mov cmp mov test rcrl push je test rex.WB push outsb and (bad) (bad) leaveq or stos add lock push mov push insb (bad) jne rex.WRX xchg xor mov jb fisttpl cwtl (bad) cli (bad) (bad) mov (bad) push xor fildl sub rex.R vmovddup add sub adc enterq mov rex.B lahf imul rex.RB fsubp fsubrl ficompl and mov imul xchg scas mov iret rex.X mov xchg and and (bad) cli mov cli mov push rex.WX pop and mov adc cmp jp cmp repz or scas sti nop pop pop (bad) sub (bad) fldt (bad) pushq jp jnp cmp rex.RB movabs out imul pop sub rex.WX push pushq rex.WB rex.W decb retq rex.R popfq test rex.WXB mov movslq jbe sbb xchg (bad) sub insb setnp sarl setb orb mov loope fwait (bad) and rex.B fs (bad) rex.WXB jb mov out (bad) jge and test loope,pt (bad) fiaddl (bad) (bad) lret jge fildl ja jle push rex.WRB iret and lret pop rex.WB jae fwait cmp rex.WXB fdivp imul ss rex.WB jrcxz vcvtps2pd push jmpq imul imul cmpsl rex.B rex.WRB (bad) rex.B (bad) mov sbb (bad) pushq xchg xor or fstps cmp jnp jg int3 jbe push rex.WXB adc push (bad) jns out loop roll iret or fs mov fisubrl insl (bad) push (bad) pop pop adc stc js (bad) andb fnstsw clc xchg push push (bad) fiaddl (bad) loopne (bad) pop outsl lods pop pushq (bad) incb push (bad) pop push sti je adc sub (bad) cmpsl (bad) fiadd mov (bad) mov (bad) cmp jle add test iret jmp mov cmc jnp (bad) stc mov adcb lods clc xor ss movabs push (bad) rex.WRX and mov pop push imul cmc rex.RXB mov mov in in sbb jl fcoml hlt jmp movabs fadds outsb or cmp pop (bad) testl push jg adc (bad) loopne out mov rex.WRX fldenv jmpq (bad) xchg jg push ud2 sub (bad) repnz adc fdivrs scas add clc mov stos (bad) pushfq sub sub and decb jbe cmp sti jg jo,pn push jl repnz adc cmp jle in mov rex.W pop mov add or (bad) (bad) roll cmpsl movabs sub cmp jge rex.WX mov rex.X (bad) fbld fldl add bnd add add rex.WR rex.WRX sbb jg fiadd or sti lret (bad) (bad) adc (bad) xlat (bad) jg js mov lock (bad) lods xchg outsb add retq (bad) mov lea retq callq repz mov enterq (bad) add in xchg xchg icebp rcl jle fucomp loope xchg (bad) fsubp rolb insl in je out cs pop sahf (bad) imul ss (bad) sti out (bad) rex.W xchg jno adc lock add or xchg jle sub and xor mov insb cmc and (bad) mov stc push in test add (bad) callq and add callq sbb xor jb nop enterq rex.R addr32 icebp rex.WRXB (bad) (bad) cmpsb jge push add fs pop rex.X jle,pn int cmp xchg add callq mov (bad) xor movslq rex.W rex.WRB (bad) (bad) testl repnz add mov (bad) in negb xor add fwait add jb (bad) stos fmull (bad) xchg xor xchg out sbb pop xchg rex.RX mov loopne jle fs or (bad) xor insl leaveq or fcompl mov es imul and (bad) sub stc repz jne (bad) jno (bad) push sbb cli sub and xchg test jg pop cli cmp cmp movabs xchg rex rex.XB stos outsb (bad) outsl shlb nop mov mov mov jnp jmp lods adc rex.WXB cmp nop fsubl repz ficoml mov xor (bad) or stos scas add push push jp xchg sbb pushq sbb jns (bad) push cmp (bad) xchg outsl scas (bad) (bad) and mov push sub mov or or mov (bad) movslq fst stc push insl pushq (bad) mov sahf andl int3 sti sti push mov shr movabs lahf cmpsl sti adc es andl pushq retq cmp and cmp stos pushq mov (bad) movslq cmc cmp in (bad) repz es push out leaveq fistpll movabs jne (bad) rex.WRB sahf sub sub jl outsl (bad) jg lods pop xor mov rex.RX jl pop (bad) pop pop je (bad) out push ja lock mov in xchg cwtl addl rex jbe jp loopne adc (bad) mov sarb jae (bad) fild sub out gs (bad) pop clc push movsl push mov es xchg incl lret jno pop and cmpsl xchg incl (bad) push mov test jmpq pop out (bad) push adc cmp movabs sbb out iret rex.R clc (bad) cmpsl gs rex.RX push push int3 mov jbe fwait jbe jg adc sub (bad) leaveq push fadds push push movabs xor in mov adc pop rex.XB rex.WRB (bad) jg xor cpuid (bad) xchg add pop push sub gs clc mov (bad) rex.WB cmp (bad) mov cmp and js mov vucomiss push cmp fstl xchg pop sub (bad) sbb jnp (bad) mov pop scas jns (bad) cli rex.WR popfq pop mov out and scas rex.WRXB cld jg rorb xchg fdivrs add pushq rex.WRXB cmp (bad) rcl lods in xchg xchg xor mov (bad) jbe and test jp scas cmp in xchg cltd pmulhw or rex.R jns cmp retq (bad) and and mov out adc push loope jns and jg pextrw add ja jmp movslq xchg rex.WR std xchg add pop neg xchg (bad) mov add fstl leaveq adc stos rex.RX hlt add (bad) lods outsl add xor imul (bad) rex.WRXB fs add push rex.RX (bad) cld xor fisub cmp xchg cmp movslq cmp adc add mov mov jle push cmpsb mov fwait mov rex.B js sbb shlb cwtl jg hlt cld add rex.WRX std rex.XB addr32 mov jmp (bad) sbb repnz (bad) pop jb mov mov (bad) xchg adc je jge movabs jbe mov enterq jne add sub sub pinsrw out rex.WB rex.WX mov xchg xlat jp in js adc add (bad) movabs add pushq rex.XB (bad) sbb cmp jge out repz fisubrl sarl push (bad) rex.WRB std jg in lret or lods push mov pop add (bad) fcoms jne jbe sub xchg rex loop test pop test mov rex.RB mov fldenv (bad) ficom add jmpq jp rex.XB (bad) jnp mov push sub mov cmp push mov shrl ficom sub mov es cltd rex pop pop (bad) fdivrl outsl fs (bad) jnp (bad) push in sarl mov xchg sub movabs ss xchg sbb pushfq cmpsb and adc mov sbb jle imul mov icebp rclb add mov sub mov add (bad) (bad) (bad) jle lock iret and rex.WRX xorl mov (bad) shrl mov fistpll add or pop std add loop xchg pop or (bad) popfq (bad) rex.W jnp in out mov (bad) pushq (bad) loopne insl xchg mov sbb sahf xchg push xchg jl adc fwait lahf cmp mov or insb add (bad) cwtl (bad) jle jnp int add ja mov insb cld (bad) fisubrl pushq pushfq or sahf jb mov movsb fs clc (bad) iret fnsave (bad) add insb pop rex.WXB lret ficom sahf clc add (bad) and add sbb add cmpsb loopne neg rex.WXB rex.WX cmp fisubr (bad) add pop sub int3 xchg fs pushfq rex.WRB jrcxz add andb in xor rex.W enterq callq rex loop jo (bad) or rolb jae sub mov (bad) fucomp (bad) test and xchg xchg pushq insb outsb pop movsl cmp prefetch push (bad) rex shrb sbb or mov addr32 rex.WRX rex.W jae xabort mov jl xchg push jmpq fimull cli (bad) mov adc add (bad) movsl xor or (bad) (bad) sub push jnp in stos test pop sbb add mov (bad) add cmp (bad) out rex.X (bad) (bad) (bad) stc adc int roll push (bad) cmp fs mov pop jne imul data16 add xchg callq insl mov leaveq lods rex.X pop (bad) pushq callq mov (bad) push jg adc movslq sub (bad) sqrtps or pushq add and (bad) in leaveq icebp (bad) jl jmpq mov outsl repnz (bad) (bad) xchg hlt (bad) nop clc (bad) rex.B out rcr fs mov (bad) gs mov outsl sub test (bad) scas scas jns in rex (bad) cmp xchg sbb sarb je jmp mov rex.RB xor movslq insl pushfq (bad) mov xlat movabs mov rex.XB push rex.X jg sar mov mov push rex.XB mov jb std jne sarb loop add icebp mov (bad) repnz add (bad) (bad) (bad) jb rex.RXB add out lods callq lods out jb lea (bad) retq pop sbb pop decb shrb (bad) out js mov fldt and imul (bad) adc cli (bad) xor cmp push rex.WXB jb and js mov mov mov pop js (bad) pushq (bad) data16 jne push imul xchg cmc jbe jns or test roll loopne repz rex.WX (bad) adc and leaveq sbb fisubrl mov mov jns mov or outsb add rcr cld icebp pop sub jge cmp orb retq jnp (bad) out (bad) pushq in pop or jp (bad) cltd adc mov xchg lock movsl cmpsl loope lea jbe mov or jle mov nop movabs pop xchg add rex jo,pn rex.WRB mov (bad) cmp pushfq retq mov lret add imul pop rex.WRXB jb or lods (bad) xor movslq and mov rex.WRXB rex.XB xchg mov rex.B pop and mov (bad) jp rex.X push popfq mov sub mov rcrl or repz jb pushfq ss rex.XB cld (bad) rex.WR rex.RX lock hlt cld std jge mov mov push xchg push (bad) xchg (bad) out insl mov rex.WRX (bad) divl xchg in ds mov push (bad) lock (bad) lret (bad) data16 movabs (bad) (bad) addb add mov push js and loope mov pushq mov (bad) out hlt mov pop adc (bad) pushq xor pop jo rep xor and (bad) imul movslq (bad) sub out notl mov (bad) add jl sbb (bad) in ss (bad) xchg jle jrcxz sbb (bad) pop cmc outsb (bad) and (bad) and xchg add jno stc xor fldcw hlt pushq sbb add (bad) sub xchg bsf jmpq movslq mov add (bad) movsb out cmp or imull int jae (bad) cld in or sub mov leaveq fisubrl movabs add xchg sub add adc out ss add (bad) add lret (bad) add imul es and adc pop rex.X rex.WRB mov (bad) sbb popfq mov in stc and cmc (bad) test out add (bad) jmpq and add cmp out add adc nop mov mov mov xchg mov add ja cmp (bad) rex.RX adc pop (bad) ds add (bad) mov rorb cmovnp cld xor sub push stos js or sub add cmpsl pushq (bad) pushq jne fnsave (bad) sbb repz adc pop and idiv fsubs mov pop jno test jl (bad) add push (bad) xchg and movabs jmp nop ss sub orl fdivr pushq and js add xlat add and data16 and push add (bad) rex.WRXB adc sub push pop cld (bad) jae xor mov push loop xchg repz lods es rorb movabs fwait (bad) jmpq test fneni(8087 mov rex.R (bad) lods (bad) imul and (bad) mov js (bad) (bad) jge ja (bad) jg and (bad) (bad) xchg add and mov mov jg rex.RX jge mov outsl movsb xchg xlat (bad) sub sub movsl xor sub mov push rex.XB negl push xchg xor in (bad) adc mov (bad) adc mov loope (bad) push (bad) jne ss xchg insb cmpsb fisttpl pop pop lret rex.RX (bad) mov jmp insb out add xor xor fucomp mov mov (bad) mov mov mov pushq jp xor jne (bad) cmp idivb outsl mov and lods mov or rex.WR rex.B rex.WR pushq xor (bad) and movsb pop mov xor jge xchg or rex leaveq lods cmp rex.RB rex.WB mov out test (bad) pop (bad) or in rolb (bad) xor mov (bad) push pushq pop push mov rex.WR je (bad) mov (bad) jle xchg cmp and insl rex out mov (bad) mov fsub js jge jbe bswap sbb mov mov lock mov mov xchg cmc jg (bad) jae shrb cli (bad) pop lret js rol iret lods mov lods retq push cwtl addr32 pop movabs idiv (bad) (bad) repz stc add or jp (bad) (bad) pop add lods mov (bad) (bad) jmpq xchg mov add xchg fwait xchg add fwait cmp ja jle (bad) rex.RX rex.W out cmp test xor push or sbb movabs adc lret test decb lahf push pop xor int3 pop xor or (bad) (bad) mov jns jne jbe retq adcl jg out xlat movabs add addr32 outsl fs fimul stc mov rex.WRX pushq sub mov add loop (bad) sti (bad) sub repnz add icebp jmpq mov insl or xchg jb leaveq add out in (bad) test (bad) cmc (bad) test jle movsl xchg (bad) (bad) cmp mov jle xchg pushq add cmp (bad) hlt callq test xor push mov add jp sub add add jle pop insl mov scas pop mov jmp mov sub jle jns movsb rex.WRB mov cmp rex.WR fildl push or xchg xchg fnsave cmp out (bad) fnstenv adc push fisubl pushq in (bad) rex.RX sbb mov cmp fs loope ds mov cmpsb mov (bad) sbb es (bad) in fild xchg or (bad) lea movsl add pushq (bad) sub data16 test mov xchg add fimul sbb xor sarl (bad) addr32 mov (bad) (bad) (bad) out retq lods repnz movabs in mov add jnp push push or add cli test cld and jle in flds rex.WX add fldl adc (bad) (bad) std rex.R adc push add jge (bad) xchg xchg (bad) and xlat cmp mov js lret sbb pop jns movslq xchg jle adc mov xor mov add icebp out data16 enterq pushfq ds xchg stc xchg add nop rex.RB mov sahf clc and xchg fcmove cmpsb or mov outsl cwtl cmp xor jns lea fiaddl mov rex.X xlat fisubr movabs movsl add xchg adc jp (bad) xor (bad) jrcxz movabs and (bad) mov (bad) dec ja sub mov test (bad) jns rex and rex.WXB iret test iret std (bad) xchg rex.X imul xchg (bad) movl and rex.WRX rex.WXB fwait (bad) (bad) cmp (bad) je add pop movabs cwtl jle sbb jae mov (bad) movabs (bad) je rex.R movabs mov add sbb pop mov lahf sub add (bad) (bad) retq fcoml cmpsl rex.WRX jg jae mov retq (bad) lret (bad) mov incb or jg xchg jno sub mov jae (bad) and mov sahf loopne ljmp js rcll lcall lods repnz mov sar cmp test (bad) out fs pop in add cmp mov sti cmpsl test cltd cmp jle jno add xchg lret xchg cmp jnp jle (bad) rex.RXB add in mov clc push cmpb (bad) xchg (bad) ficoml jae cmp in add pop jl,pt push lea enterq std jl mov jmpq and es or add test add rex.X ss rex.WXB mov push add xchg in and or mov rcll pop xor jns xor (bad) (bad) push nop add cmc cmp iret fstps je (bad) rex.WX (bad) add add adc add js (bad) add cwtl adc rex.R add jmpq jp jl rex.WXB xor stc cmp rex pop mov pop xchg mov or xchg pop cmpsb mov rex.RB (bad) mov adc cmp stos jl andl mov cli jrcxz je jb pushq cmpsl sub push pop scas in jne pushq mov jle (bad) xor sub sub shr (bad) callq movabs adc fstpl stc mov xorl divl jrcxz add jbe xor xchg addb rex.WRXB push (bad) sbb or mov rex.WRB mov add cwtl xchg push ljmp movabs (bad) (bad) insb lods pop mov add push rorl jnp rex.WX data16 stc push std mov sti popq rex.RX out mov (bad) int and xor adc pushq faddl std mov mov mov mov pop mov and sbb test icebp outsb (bad) pop lods js gs xor mov jrcxz mov out fdivrs rorl ja stc sahf cmpsl rex.WRXB adc (bad) pop (bad) adc (bad) fisttpl cmpsl mov jno rex.X cltd pop jnp rex.WR xchg insl pop std mov push jo rex.RX mov jmpq out fistpl jmp cmp and popfq outsb jbe sbb (bad) xor out sub callq (bad) sbb in (bad) mov rex.R jg jnp or rex.XB hlt insl rex.WXB (bad) int mov std cwtl outsl scas (bad) test (bad) jl (bad) jmp mov ficompl jmp (bad) adcl leaveq (bad) cmpsb or sahf or (bad) (bad) jge mov (bad) xor rex.WRX imul ss sahf mov mov push outsl mov (bad) jg insl pushq mov out (bad) mov rex.RXB sarb mov mov or mov rex.B ljmp jmpq jns jge stos add (bad) mov jo add movabs out sbb rex.B outsl add or std and (bad) jmpq hlt mov repnz rorb movsb gs rex.WRB (bad) icebp cmp stc (bad) jnp jg movsb mov or mov (bad) mov iret mov mov notl jnp add sub or fs xchg (bad) rex.XB and in (bad) orl cmp add jb push jbe je jle pop mov sub sahf sbb push pop int rex.WRB (bad) cmp or (bad) in sbb push mov rex.WRXB repz sbb sub fs mov sub xor (bad) fnstsw add mov mov and in cmp popfq jb cmp test xchg cmp jnp cltd (bad) (bad) imul pop xchg sub mov roll pop imul pop jge (bad) cmp sub shrl xchg rex.RB stc hlt repz xchg repnz xor jg scas jmp hlt movsl sbb or hlt xchg popfq pop push (bad) (bad) adc scas xchg cmpsl ja (bad) push cli jg hlt mov jmp adcb jne movabs mov cli div scas repz cmp sbb negb pop insb (bad) int3 jne xchg (bad) (bad) (bad) pop (bad) mov sbb push fdivl add adc test movabs (bad) cvtps2pd (bad) stc outsb in xchg fsubs (bad) imul fisttpl or and movsb jns movabs rex.WX jne (bad) je mov insb (bad) enterq mov lret (bad) (bad) xor or movslq mov or (bad) fiadd jo rex.WRX loope push cmp repnz cli add out mov add out pop or (bad) (bad) (bad) cmpl jp std lahf clc (bad) out fisub fdivs cmc sbb (bad) push shrl xorl push ja and push add (bad) and lods cli cltd mov sbb addb in rex.WRXB mov jl adc or fstl add (bad) int3 (bad) ja jae or xchg add lret lahf or movabs pop mov (bad) pop jmpq rex rex repnz (bad) (bad) pop xor xlat mov fistpll in mov add xchg cld cs (bad) mov bnd cmp xchg xorl mov pushfq movabs test xorl (bad) (bad) jno mov add mov mov sti and mov cmp mov (bad) and add mov mov adc (bad) (bad) movslq loop jle xchg out movsb adc push adc add stos movabs xchg cwtl mov rex.W rex.WR or push insb jb mov push sbb jge cmp mov pop jp and shlb jrcxz pop repz iret adc xor cmp sti (bad) adc jle add jl callq (bad) std rex.RB femms insl (bad) es (bad) retq mov pushq repz xchg mov xor (bad) (bad) insl nop rcr sub lret in lods adc repz out or mov push (bad) movabs (bad) (bad) mov mov sub movabs repnz pushfq jnp and negl push fninit outsb push mov jno movabs and lods fbstp fwait rex.RX popfq add sub adc (bad) mov pop lahf add rex.WRB mov subl cltd (bad) mov and movabs mov rex.WB add cmp xor lods (bad) scas div add mov push add and rex.WRB rex.WRX imul sahf std pop mov mov xlat pushq rex.WRX lahf lahf gs callq (bad) addr32 jno test mov rolb outsl pop (bad) out (bad) je and pushfq fnstcw xchg callq hlt (bad) sub stos add (bad) push es stc and and pop mov sbb jl test add xchg add or mov movabs xor (bad) pushq mov cmc xchg pushq cmpsb (bad) fisttp insl push test (bad) loopne imul sar sbb mov cmp or rex.WRX sub mov push scas ss repz xor cltd rcl repnz add add add push jbe fdivl sar and (bad) sbb (bad) andl rclb push sbb movabs push (bad) fs (bad) (bad) rex.B repnz jnp jp shrl out fs jns stc pop addb adc lahf jae cmp movabs not add rex.RB pop (bad) (bad) movabs add (bad) add repz xchg xor clc movabs adc push enterq pop jp sbb mov loopne add fild mov (bad) mov fnstenv mov lock or mul xor sbb (bad) cmc out jrcxz fs js pop int data16 (bad) jbe fisubrl lods jg mov rex.B cmc mov imul mov or add (bad) (bad) (bad) and (bad) callq (bad) cmp (bad) add cmc testl roll adc jg popfq jo shrb cs jno sub add push push sti int fstp jb insb rex.WRXB hlt enterq rcrb (bad) stos add jne cli (bad) mov or jp out (bad) jmpq add repnz lods (bad) jb cmp stos stc and movabs jb xor rex.WX adc (bad) (bad) jb mov add mov lock fdiv in mov pop repz sub jg rclb sub (bad) cmp (bad) jge jmp mov je xor pop insb movslq jmp rcrb and (bad) cmp decl (bad) sub add rex.WRB add add jns mov (bad) int3 xor rex.WR out xchg sub jg int or fdivrp mov jnp stos add xchg fdivr in jnp outsl xor add mov int and jle pop push sarl lods rex.XB retq mov jmpq mov pop stos push mov lods cmp fs add stos sahf ss mov cmp test (bad) push sti cmp (bad) and rex.XB imul leaveq scas movabs rex.R jbe (bad) (bad) repz push rex.WRX popfq nop jmp and imul xchg addr32 xchg push mov testl (bad) push jp lcall or xchg lods lods push imul jne sarb es (bad) pop and mov imul xchg int3 ss jrcxz (bad) outsb adc scas iret rex.WB enterq sbb ficompl (bad) adc fnsave (bad) xor xchg movabs orl and or lock enterq outsl (bad) mov pop negl adcb nop mov mov retq xchg rex.R pushfq add rex.RX idivl in mov add jb cmp cmp xchg sar sub add pop mov add (bad) jne sub xchg jmp rex.WX loop js sub test stos jge iret mov rex.XB pop lahf sub add jne xorl in cmp rex.WX or and (bad) test rex.B shll mov sbb rex.WB insl add hlt cmp xchg rex.X out scas (bad) stc xor jge push add (bad) notb push rex.RXB int ficom mov and jg jb mov insl push mov mov xor adc out (bad) insb and xchg add push lea rex.WX adc push in rex.X (bad) sub (bad) mov mov enterq adc (bad) mov xor mov in sub add jg int3 je adc rex.WRXB mov xchg xlat pop jg loop add jns lahf (bad) push mov int cmpsb or jp jb insl (bad) (bad) rolb cltd push ss popfq and iret adc lock je (bad) sbb xchg fs pushq cmovo jnp mov loop retq cmp sub test xchg es loope (bad) and (bad) sbb out stos xchg sub and fldcw jg xor lods (bad) out rex.RB mov (bad) (bad) rex.X (bad) or (bad) hlt rex.XB push and rclb test sbb lahf mov es xor mov shrb rex.WRXB mov mov scas out pushfq test sub mov imul (bad) lahf icebp lea in (bad) scas (bad) pushq (bad) and jne pop mov adc jge sub push (bad) insb push divb iret addr32 xchg orl sbb rex.WRX divl (bad) adc xchg (bad) jo test mov rex.WX or (bad) cmpsb jp sub rex.B incb add jg ja and movsb (bad) adc add rex.WXB sub (bad) in add push xchg outsl movabs jp mov cmp add xchg pop lret in lods add mov cmc mov out add add and rex.R adc stos add cmp add (bad) push stos and es movabs pop loope pushq callq (bad) (bad) rolb insb (bad) outsb sbb pushq rex.W jle (bad) cwtl jrcxz jb enterq fildll stos pushq or fisttpll (bad) (bad) outsb (bad) add add xchg xor sbbl adc icebp (bad) and cmp rex.WX (bad) repz mov rex.X (bad) add decb clc adc rex.X rex.RXB sbb sub scas and shr rex.RX rex.B gs (bad) pop rorb add (bad) (bad) cltd movabs (bad) jb add jmpq add (bad) std movabs mov ljmp fsts sbb movabs cmp jle adc in adcl cmp xchg mov and sbb pop test enterq hlt and js js lahf (bad) jbe mov test mov rex.WRXB fbstp (bad) movslq mov (bad) pushq cwtl (bad) stos fistpll movabs andb adc cld push gs (bad) xor idivb (bad) fstpl loopne sub jmpq ja pop je mov jg mov xor pop test push retq cmp (bad) retq or iret (bad) fsubl insl sarl fmul xor scas imul mov mov xchg or ficoml jge (bad) addr32 (bad) mov (bad) outsb rorb test mov rex.RB not adc xchg mov pop outsb sub fwait addr32 xor mov and mov jnp (bad) cmp (bad) mov adcl outsl (bad) cmp xchg jp jp scas jrcxz lods iret pushfq nop retq cmpsb pushq callq insl (bad) lret (bad) rex.XB shrb lods out mov insb (bad) fild lods (bad) gs sub sarb out callq pop rclb xor (bad) xor cltd xchg cmpsb test pushq pushq push cmpsb out nop test lret outsb (bad) fsin jo sti adc (bad) adc lret jge pop sbb sarb cwtl xchg (bad) (bad) mov xor push or jp addr32 roll ds sahf (bad) sbb js mov jbe mov xor (bad) add (bad) mov fnop scas stos rcl cli xlat fwait in shr stos outsl push jns rex.RX sub int scas lcall mov sub cmp or insl mov mov mov jl shrl (bad) in adc sbbb jnp rex cmpsb or (bad) lock adcl mov stos test add movabs neg and sti out cs (bad) addr32 add pushfq shrb lods add add mov add cmpsl jne icebp adc (bad) popfq stos (bad) addr32 sarl movabs ss movabs mov faddl jns cltd in out (bad) jp adc stos mov insb (bad) cld (bad) mov xor addb push jno shlb add mov cmpsl adc (bad) xor rex.WB cmp add loopne or in cmp sbb pop sbb xchg (bad) xchg mov clc jb loopne jg incl (bad) int3 and adc icebp gs or je mov imul add pop popq (bad) fmull (bad) addr32 and xchg push add (bad) fdiv add retq sbb movabs notl or (bad) rex.X and rex.X movabs push jmp (bad) (bad) loop mov lea push out rex fcompl scas pushq mov js pushfq add add shll sbb fldl pop (bad) cmpsb push jp mov (bad) (bad) (bad) add shlb in (bad) rex.WXB adc sarl loopne (bad) xchg jle jnp xchg (bad) mov mov data16 (bad) (bad) movabs add pop rex.X mov xchg mov or cmp fcomps mov xor (bad) ss out pop or mov xor cmp mov (bad) xor mov rex.WB addr32 fwait cmp rex.W sbb (bad) ja xor push xchg (bad) (bad) pop pop stc add and xchg mov adc cmpps add inc mov out add and jo,pn out add sub rex.W cltd (bad) (bad) jmp outsl cmpb andnps mov and insb pop in mov notb add add shlb and movabs jl pop cmp hlt jb outsb (bad) (bad) add rex.WR push (bad) jbe add add (bad) mov jmp iret xchg add xchg addr32 sbb push pop jns (bad) fs jb mov stc data16 xlat rol and jo xchg or out mov (bad) pop scas add sub punpckhwd push sti sub or (bad) mov push sarl (bad) rcrb jp in pop jne or (bad) cmc xor xor mov xor and jp lahf es in mov rex.X sarl and rex rex.RXB (bad) jnp jl (bad) xor (bad) mov pop (bad) movabs lods or jp mov add and (bad) (bad) jns fs xor (bad) loopne cmpsl test jle rex.B rex.WX or fisttpll fisubr stos (bad) xor (bad) decb iret sub rex.RB mov rex.WR fcmovu sub cmp imul jmp loope rex.X movabs sub sahf (bad) scas fnop mov pop jle cwtl (bad) mov jno and jb jbe pop adc (bad) push cwtl sbb jne jl (bad) add pop sahf jg sti pushq (bad) push pop stos jno adcb mov sub sub rex.WR pushq add xchg cmp jle movsl test rex.B sbb (bad) jb xor jge movabs or fsubr out (bad) or xlat add (bad) (bad) (bad) xchg mov rex.RB or (bad) cmp jle rex.X andb cmpl rex.X jle sar xchg in testb sbbl pushfq mov (bad) (bad) shrl mov jmpq xor push in out pushfq gs and mov lahf lret pop insl mov stos test test push fsts (bad) (bad) sub (bad) jmpq mul (bad) es sub sarb cmpl jl or push hlt rex.WRX sbb repnz xchg (bad) (bad) sbb incl cmp xchg fldenv ja imul (bad) test pushq movabs and out sahf jg mov (bad) (bad) (bad) adc adc jb (bad) mov pop cmp (bad) push (bad) add (bad) mov mov jmpq xchg jrcxz adc push jbe cli testl lahf imul xchg xchg imul movsl mov sub add addr32 fsubl pushfq sbb ds (bad) lret xchg xchg rex.R (bad) adc lret pop jns cmpsl lock mov in (bad) jrcxz (bad) in (bad) movl cld icebp jg xchg sbb (bad) (bad) mov js loop xor nop scas (bad) mov (bad) sbb xchg mov or (bad) jle repz movslq push movsb outsb outsb in callq (bad) ss mov pop jns jg push stos cmpsb stc mov jg fs pop retq ss retq enterq pushfq or pop rex.WB add xchg int3 nop test (bad) ss insl rex.WXB data16 insl xchg nop xchg pop jl sub xor adc (bad) mov sub adc (bad) in int movabs test or scas rex.R cmpsb (bad) (bad) (bad) (bad) mov mov pop (bad) cmp mov (bad) adc (bad) jle cld lods sbb cmpsl lea js and (bad) (bad) jmpq lcall pushq add scas fadds (bad) icebp rex.R rex.WRB sub mov (bad) shlb add mov rcrb in cmp (bad) rex.RB mov or sub (bad) (bad) rex.RXB lock je rex.WB rex.RX pop add jns jge mov movabs test or loopne or cmp rex.X pushq rol fnstsw hlt pop and cmpsb cmp cmc in (bad) rex.WX add (bad) icebp xchg and outsl (bad) and add mov psubd ds mov scas xor add jg rex.WRXB sub rex.RB jno add scas cmp push iret add mov (bad) sbb imul rex.WXB in (bad) outsb (bad) add (bad) sar leaveq test jno lret repnz jmp imul std scas ss cwtl (bad) xor (bad) icebp add rolb test (bad) rex.X and lods mov mov and jg adc jne sbb (bad) mov xlat pushq mov adc add lods add adc rex rex.RB addl (bad) xchg scas outsb cmp stos add rolb (bad) or out cmp retq mov loopne sub and adc add adc movb sub icebp je xchg xor push (bad) push xchg fdivl and add jns pop clc sbb or sub add test mov (bad) movabs mov rex in mov cld (bad) icebp out pop mov xchg mov (bad) push fs mov (bad) mov and push rex.X xadd mov movabs (bad) jno int mov je movabs sbb add cli (bad) callq xor pop or and std fcmovu add rex rex.WRX push mov pushq (bad) (bad) pop ds rex.RX loop rex.WRXB push adc (bad) sbb push pop test loop jne or push add je,pn (bad) sub (bad) rcr pop (bad) mov xchg mov xor je subl xchg (bad) sbb stc (bad) fadd pop scas jb rex.B jne mov jle pop sbb lea rex.WXB sub push stos andl fstpl pushq jg add jle jno sahf stos int3 mov rex.WXB jge mov fmull mov mov notl (bad) mov sub movabs and sbb add (bad) pop sub mov add (bad) movabs int3 lock in xor rex.WXB js out (bad) rex add push jmpq add fcompl add data16 rex.RX mov mov jae xchg outsl imul sub sub sbb jbe mov mov jne fist cmpsb mov xor (bad) imul dec sbb and shlb pop mov push add retq sbbb (bad) or sti movabs iret mov push fidivrl jbe jle pushfq stos push rex.RXB jle imul movsb or sub sub pushq jle jb xor push (bad) shrl callq fstpt rex.R rex.W rex.WX lock shrl stc movabs clc rex sahf mov xchg xor xor (bad) add pushfq data16 jae push add stc cmp mov loope add jmpw incb push rolb mov and scas jnp mov lock (bad) lahf pushq and negb rex push xchg jp adc stc out nop jae (bad) xor ss (bad) sbb mov cmp enterq test jmp mov xchg add push scas xchg push sar pushq and hlt fadds out cld (bad) insb loope xor movsl add rcll ja movabs add loopne nop sbb (bad) cmp (bad) mov std fs enterq xchg xor rex.WRXB (bad) (bad) std (bad) pop (bad) lea rex.RX rex.W in mov sub pop imul xchg (bad) cmpsb add pop std test lahf add pop cmpsb mov lock mov add (bad) sub or fs or movsl add xlat cmp jns lods jle (bad) rex.WRXB push adc pushfq bnd mov or and adc lods retq (bad) popq test rex.WX (bad) insl pop enterq cli (bad) fisubl je add jg adc rex.RB mov data16 jp jbe jb (bad) jns (bad) fs sbb rcr xchg outsb jge mov retq (bad) jrcxz subl sub xchg pushq (bad) xor outsb xchg pop test sub xlat rex.WRX testl ss lods sarl jl rex.WB jae movsb cmpsl mov decl sahf (bad) push iret insl mov and push cwtl test mov (bad) (bad) (bad) mov rex.WRXB fwait xchg add rex.WRB rcll (bad) sub mov (bad) (bad) (bad) shll sahf sbb hlt icebp jne mov add ja sub cld mov insb movabs cmp (bad) jg sti mov stos jmpq rex.XB sahf popfq add in retq out loope mov mov xchg shll repz je mov mov imulb add rex.WXB insb sub rex.XB ja sahf (bad) ja sub sub xchg movsb (bad) rex.RB pop pop rex.RX test push pop leaveq fwait rex.RX decb movslq ja pop insl xor gs retq movsl xchg add repz sarb xor (bad) adc loope fldl or (bad) cmp or jnp adc mov (bad) jle popfq and (bad) outsl mov jle rex.WRB hlt add scas (bad) mov add test mov push jle movl xlat add cmp jbe rex.X sub cmpsb addr32 rex.XB icebp mov mov (bad) add and shrl (bad) fs xor sbb xchg jg (bad) push xchg fisttpl jbe sbb lret (bad) add pop jbe jb mov lahf iret push sbb divl movabs fidivrl shrb in xchg (bad) sbb fwait out jg jl or test rex.W (bad) sbb lods pushfq jo popq movsl popfq (bad) jo adc and mov fidivr in test mov flds (bad) movsb (bad) jmpq rex.WB rex.WR mov push mov in pop scas or rex.WRB notb movabs push movabs cld incl xchg (bad) jno and jg retq cmpsl (bad) faddl pushq sub (bad) sarb push (bad) mov add stos xlat (bad) push test lahf add jae ja in cmp rol adc add add mov cmp (bad) movslq pop jl pop callw std fsts jrcxz testl and rex.R rclb (bad) sbb (bad) scas or jne mov mov test pushfq cmp clc jp sldt rcrb add movabs or (bad) mov nop movabs pop es cmp callq out add sub mov cmc rex.WX mov sahf (bad) jb xchg js add xor jp vmovlps add rolb sub (bad) out fsubl (bad) cs fwait sbb fsubrs pushq popq pop movabs sbb and rex.R (bad) mov and out xor (bad) flds xchg sub (bad) (bad) rex.WXB (bad) test add (bad) std mov retq sbb addb lahf adc mov add mov mov jg loope fldcw std in cmpsb xor push pop in popfq loope mov outsl enterq cs and out fbstp movslq mov jns and add lret mov in xchg rex.W (bad) mov xchg std mov (bad) scas xor cmpsl jrcxz sub mov mov popfq mov (bad) xchg movsb rex.RXB cs mov fiadd mov or fidivl mov cmp xchg hlt rorb jb movabs sahf jnp sbb fimul sub xchg fwait fwait add std jle cli rex.RB sbb retq sbbb rex.WB lods pop cli cmp add sub lret mov mov (bad) jg in sbb push (bad) enterq xor add rex.WRB icebp or loope data16 ds sti or jnp xchg cmp mov scas test mov rex.WXB sahf test lret cmp add jnp movabs cld xor sbb (bad) (bad) (bad) add push (bad) int3 and callq leaveq test rex.RB nop rep and add test rex.RX cmp add (bad) lret jne icebp pop rex.W xor scas jno add add (bad) pop push rex.RB rex.W add je push sar push rex.R (bad) (bad) (bad) adc and push rcr adc add jne rex.X cmpsb rex.W add add rex.R and in icebp loopne pushfq hlt (bad) int or nop movabs movb adc insl rex.XB xchg add fwait mov cmpsb xor (bad) adc jns fsubp xchg (bad) cmpsl mov loopne pop pop cmp addr32 pushq fidivrl mov add and js mov xlat xor xchg (bad) and pushfq movabs push movabs add add rex.WRX add (bad) (bad) movsb in movabs mov adc or stos rex.B rex.X jg mov insl movabs sub or (bad) sub xchg add xor or cmpsb mov xchg jg adc rex.B jmp outsl fild sub jns or add rex sub je test or add insb add test lods jnp movabs or rolb jle mov jb xchg fistl sbb and add sub fild or flds jge add in cmp fidivl lods lret out push jne (bad) clc fild jg add and add cmc notl xor jp jle sbb fisub hlt xchg js sahf cmp mov cmpsb jp movsb (bad) out std rex.RB xchg subb or or nop fiadd movabs xchg shll (bad) icebp in rcrl movabs rex.W test imul cmp popq insb ss xchg push jge rex.XB (bad) loopne cmp cmp (bad) popfq imul je (bad) and (bad) push sbb out out pop (bad) xchg movabs xor in movabs mov clc ds rex.RB rex.RB xchg and fist movabs pop mov jae je jmp (bad) pop (bad) mov or mov jne fsubrs pushq rex.X repnz rex.RX scas cmp pop and push or movabs movabs shlb add nop rex.WRXB rcr hlt jb (bad) adc loop adc add jg (bad) sub rolb xchg test sbb rex.WRB iret insl hlt cmp movsl (bad) jg stos rex.R mov sub push mov test cmpsl (bad) cwtl rex.WRB rex sbb decb (bad) (bad) (bad) fild xchg mov sub retq xchg add rorb fildl rex.WRX pextrw add paddq rex.WXB testl pop jns in mov (bad) pop mov iret push cmp pushq rex.WRXB es jp repnz xchg cmp or in (bad) cmp loope lods in and jg cli imul pop (bad) pop (bad) rex.RX test xor movabs movabs and jp xchg mov test sahf fadds (bad) (bad) xor xchg sub rex.R ja sbb andl (bad) cli test imul rex.WXB fwait js pushfq outsl mov insl mov imul js jmpq ds shr nop (bad) shrl mov pushfq pop mov jmpq add cld jae pushfq jle repz out ja (bad) rex.WXB (bad) mov or (bad) pop (bad) rex.WRX movsl rex.WX sbb cwtl in scas rclb leaveq adc rex.WX xor nop and insl fimull jo or rex.WB mov int lods movabs cmp (bad) jne (bad) and or xchg mov mov jnp jge hlt js rcrb sub push imul jle pushq mov xor cmpsb movabs ror push jrcxz cmpsl mov rex.W lods xchg (bad) mov pushq jg outsl jae and mov in lods and lret pushfq xchg mov (bad) add fmull xchg (bad) pop fwait jns add out mov and js xchg fdivs sbb (bad) outsl (bad) outsl (bad) pop adcl rex.WRXB out mov cli shrl (bad) add (bad) nop or mov pop iret fidivl and xor rex.WR mov xchg int3 mov iret in or pop fcoml sub (bad) enterq repnz and (bad) (bad) (bad) cmp cmpsb clc ja roll fcmovb mov mov jbe repnz (bad) push cwtl rex.WR sbb (bad) (bad) loopne callq jne adc int3 jbe imul push xchg stos stos mov mov mov (bad) mov xchg loopne fnstenv mov jmpq imul pop push jmp movabs rex.X incl mov mov out loope mov sar jno cmp add push rex.WX (bad) movabs (bad) pushq and (bad) jrcxz mov pop adc sub push adc rex.RX repz push xorb push addr32 pushfq (bad) jnp (bad) xor loopne popfq cmp stos jrcxz pop cmp loopne xor lea add sub cmpsl repnz movabs (bad) popq xchg cmpl jmpq push idivl sub pop rex.RXB add mov add (bad) (bad) js loope add (bad) shl popfq push sbb rex.RX cs add movsl jge pushq imul in (bad) mov popfq jae rex.X pushfq lcall add fsubrs cmp icebp xchg and xor retq jp fcomps jmp jae popfq cmp cwtl jmpq or (bad) loopne and (bad) fwait add nop cmp jrcxz sbb sahf (bad) rclb insl pushq rex.RX rex.B (bad) push (bad) movsl callq cwtl repnz jno add add (bad) rex.RXB rolb xor rex.W add loopne mov inc cmpsl pop and and adc xor outsb add (bad) retq and add sub pushq xchg (bad) jno sahf (bad) (bad) fnop stc in or nop xor mov subl (bad) cwtl imul shll in rex.W cmp mov mov and mov lock cwtl jl repnz scas (bad) pop repz xchg jo xchg popfq (bad) xchg pop pushq jge xor andl mov cmpsb jle clc stos mov push or movabs pop xchg rex.WX (bad) add jno stos sti mov (bad) cltd test add adc and retq jmpq (bad) mov insl xchg (bad) mov scas lods push fidivr enterq (bad) add movabs pcmpeqw mov int3 add lock (bad) or (bad) xor add xchg fdiv (bad) xor and addr32 jrcxz movabs pop rex.WRX lea sbb xchg adc rex.RX or sub clc (bad) xor (bad) jnp divb (bad) xor rex.WRB scas push (bad) adc cmp (bad) pop rex.RXB outsb jbe rex.WRX (bad) mov icebp (bad) sbb xchg mov mov test add mov hlt and push lret add mov loop jle ja fwait push (bad) push movabs (bad) adc push add in mov lods rex.R xchg push jle rex.WXB push out loop fsubrl add sarl callq and add (bad) imul lock rex.W (bad) jp sub fld iret xchg pop (bad) add mov add cmp (bad) sahf add lret adc rex.WRXB fs rex.RB out jbe push jp cli (bad) cmpsl nop mov loopne sub cwtl rex.R mov mov add lret (bad) icebp rex.WR rex.WB push add xchg jno cmp addr32 icebp and (bad) sub (bad) add jne xchg loopne loope fs jnp (bad) jp mov callq jle adc scas add in nop movabs jns pushfq rex.WRXB cmc xor jmpq movabs add mov nop adc sbb scas (bad) (bad) (bad) test jl pushq roll xchg std add (bad) iret rol (bad) adc and out (bad) mov jl adc add adcl frstor mov and scas jmpq movabs shr fsts fs (bad) jne mov mov mov (bad) rex.RX (bad) sarb int3 in andl fisttpll (bad) scas outsb mov xchg cmp mov and (bad) cmpsb stc sub mov je jge insb push xor notl rex repnz rex.WRX jg leaveq pop movabs and (bad) repnz pop outsl movsb mov sahf (bad) rolb rex.WRXB ds jne fidivrl adcb outsb ds mov rex.WRXB rex.RX sub rex.WRB (bad) test rex.WXB (bad) xlat mov rex.B (bad) push mov (bad) pop rex.RB pushq rex.WXB jrcxz jne jrcxz (bad) xchg xchg and pop add mov cmp cmpsl jmpq movabs rex.WX rex.WRXB pop rex.W (bad) sbb add shl mov pinsrw loop add pop loop sub mov insb movabs xlat rex.X cmp push xor cmp rex.WRXB jnp or fsub stc jae pushfq jbe (bad) push movabs (bad) lods add jbe cmp stc (bad) stos rex.WRXB (bad) fstl add ss mov pop vpsubq rex.R (bad) (bad) (bad) outsl push hlt callq xor popfq pop jnp fisttp outsb jne sub in pop or (bad) (bad) jrcxz (bad) imulb sbb mov adc jmpq jp or loope orl scas cmp lahf push (bad) xchg mov mov (bad) hlt movsb xor cld pop stc pushq add retq xor in test pop jnp fs mov xor lidt out add rex.WXB fsubrl add xlat std (bad) rcrl mov repz (bad) (bad) add iret insl fiaddl test je xlat addr32 add xor jl add xlat (bad) sti (bad) mov (bad) imulb lock sbb jne fst (bad) add xor sbb rex.RX addr32 mov fdivr ds loope out mov (bad) mov adc sti add cmp mov stos add or (bad) ss add fildl add jnp cmp xor rcr cmp jle enterq pop (bad) jp lods loope out (bad) add movsb (bad) test pop (bad) mov mov jb js int psubsb data16 sub rex.WRXB sbb out cmp movsl (bad) fwait and cmp xchg mov jg gs jnp fisttpll fild mov lahf in sub (bad) and push pop mov mov pop (bad) retq scas rol ja add push es (bad) or sbb jnp sbb rex.RB jb ss rex.WRB jbe sbbb xlat jb callq test mov or xor pop pop lods jno cmpsl scas (bad) jl nop (bad) cld (bad) jp lretq movsb (bad) (bad) enterq out mov int3 xchg bnd rcl mov mov pushq fistpll cmc mov rex.B mov pushfq mov iret subl jrcxz and push jbe sahf rcrl mov add stos movslq ja rex.WXB fidivl hlt jns (bad) pop cmp vcvttpd2dq sub (bad) (bad) mov pushq sbb (bad) push dec jo lret cmp pcmpeqb jnp ss mov push rex.WRB movabs add int movslq outsb enterq cmpsb (bad) xor jp jns faddp sbb and mov jnp xor outsb (bad) negb mov sbb sbb loope jle rex.WX insl out jmp xchg (bad) out adc sbb loopne (bad) lods in lahf mov fsubrl and (bad) rex.XB repnz loope dec jns xor xchg rcll and xor add pop pop cmp (bad) cmc fidiv ja jmpq loopne jl cmp imul add test nop (bad) mov mov jle or mov shlb mov jo cmp lea and (bad) fs or imul (bad) gs (bad) jl push lea cltd pop insb jo int3 subb and out xchg (bad) sbb mov jbe es rex.RB xchg and cs mov push or rex.RX rex or or out jp pushq rex.WX mov rex.WRB rex.WRB rex.X mov pop xchg fidivr jg out rex.XB xor and int pop lea mov cwtl (bad) int3 stos ss push sbb rex.RX and repz rex.WR jle pop (bad) cmp rex.B testb rex.X sbb imul jp lea sub out outsl (bad) ficomp or sbb out sar push jbe or jp pushq mov loopne and jl (bad) mov adc xor movsb push jle out imul mov sub jge out jno ds sbb adc (bad) rex.W add jo (bad) lahf add js,pn mov or mov (bad) fprem insl mov mov enterq fnstenv adcl (bad) rex.X sub lods cmp pop pop leaveq imul jmpq jmpq (bad) rorb mov jo mov (bad) loope in adc push jb push (bad) cmpsb sbb in (bad) xchg pop xchg jbe movsb xchg cmc andl (bad) stc insl movabs scas or movsb rex.WRXB cmp (bad) ja sub or jno fnop pushq rex.RB leaveq movslq and insb jmp (bad) movabs or ss rex.RX push outsb rex.WXB sbb (bad) mov push jmpq rex.WB rex jbe mov push xchg adc cmp xchg mov movslq pop vunpcklps fcomps pop ja cld sti addr32 movabs mov outsl in push rex.W (bad) jne push adc pop leaveq (bad) popfq ss cmp movabs cwtl xchg rex mov sar add shrb lock rex.WB rex.XB jnp mov (bad) mov movabs sub cli mov outsb adc add (bad) (bad) int3 fisubl cld cmp hlt rex.WB rex.W rex.RXB sbbl mov lret add (bad) push mov add push icebp mov cld or lock and pop callq rex.WRX test push pushq loope add jns cwtl sbb (bad) jo lret scas (bad) xor add fsubs (bad) xor (bad) (bad) loope rex.XB leaveq (bad) xor cmpsl sarb cs (bad) jg jrcxz (bad) lods ljmp (bad) imul or pushfq movsl sahf (bad) rex.B xchg xor add fwait add jb rex.WRXB fnstsw mov (bad) xchg lcall add (bad) movabs sub rex.XB add (bad) and incb xor sub (bad) add push fchs jle rex.WX shll sti mov mov jae add mov push add cmpsl cmc mov rex.RXB mov cmpsb rex.RB mov test push out rol sbbb (bad) adc (bad) adc xchg add push fist je jmpq mov rex.WX mov scas cmp in add rex.WB int3 fs (bad) (bad) and sub add (bad) pop jbe rex.XB (bad) iret (bad) nop jle rex.WRXB (bad) sbb lock rorl callq pushq cld rex.X add xor add bswap cmpsb rcrb cmp out cwtl roll mov outsb mov imul rclb pushq (bad) out movsq rex.RX jge pop (bad) retq out jp cmpsb rex.W mov (bad) cmp and out mov ss fistpl or mov icebp mov out adc pop out outsb add retq in pushq (bad) int (bad) (bad) jmp pushfq out rex.RXB fs dec sbb bswap addl lret (bad) rex.WRB sahf (bad) xor stc stos sbb pushq or and jg pushfq andl (bad) jb or mov lret xor mov or rex.WXB cmpsl (bad) (bad) mov jle jp movslq xor fidivr mov pushq (bad) ja add (bad) pop popfq add rex.WB mov jmpq adc sbb pop ficomp and (bad) (bad) add mov sahf add xor movsl push scas and rex.WXB (bad) imul rex.RXB loop mov jbe add rex.WRX (bad) mov shrb leaveq iret add (bad) xor sahf stc pop cmp cmp jle jg rex.B sub (bad) mov insb movabs (bad) retq movslq add xchg (bad) (bad) mov (bad) add jmpq leaveq rclb mov jp rsqrtps pop cmp cmp mov lret repnz out scas jnp mov xchg jo (bad) jae cmp push rolb movabs jrcxz add sub adc sbb mov fdivrl (bad) lock movslq mov cmp rex.R sbb jl mov mov mov movsl andl out dec add insb cmpsl enterq jl mov callq imul jns sbb adc iret or rex.WRXB movsl sbb int jg or rex.WRXB outsl adc add pop add (bad) in movabs enterq sbb callq add (bad) jb adc jbe xchg leaveq jmp sub mov cmpsb pop int3 jrcxz (bad) rclb rex.W sarb mov pop mov cmp mov (bad) jp (bad) (bad) mov mov (bad) (bad) or subl add sbb out ss jns mov push rex.W mov jg in mov or js mov sub mov clc mov add icebp (bad) fs mov (bad) mov rex.WR movsl in (bad) or movslq sub cs push repz mov or push add adc imul popfq fsubl stos (bad) cltd fwait (bad) stc mov add fdivp jnp pop rex.RX cs (bad) add out (bad) adc jb movabs push cmpsb pop jg shr jno std mov cmp movabs test movabs iret insl add (bad) rex.RX test movslq xchg xchg mov jno orb jo sbb (bad) addr32 scas fsubl retq leaveq mov add (bad) (bad) and (bad) callq decb stos stc mov cli add (bad) (bad) sti (bad) out rex.WRXB add cmp je fwait in (bad) stc add stos cmp es cmp stc mov sbb and mov and fidivr rclb adc (bad) mov push (bad) or (bad) (bad) fiaddl add callq sbb push out (bad) add addr32 jo xchg mov sahf cmc push xchg (bad) (bad) fwait (bad) (bad) adc cmpsl add cmp popfq je rex.RB retq stc pushfq fidiv xor imulb add (bad) mov addr32 (bad) add mov mov sbb fsubs and xchg (bad) (bad) add rex.WX insl add fsubp cmp fdivrl xchg sub jb mov (bad) sub sahf fsubl sbb (bad) mov repz push sbb adc (bad) pop jns mov rex.RX fs and cld nop xor out decl pop jge andb in or lahf (bad) jae mov add or mov jbe lret cmovge add movabs fs movsb clc lods jg test adc (bad) jb mov cmc rex.B roll cld repnz test jno cmp loopne (bad) data16 out or xchg pop lock push or test (bad) add loope fs xchg lods jg std jp add fisub mov mov push sbb jbe (bad) std or (bad) stos mov mov jle mov mov (bad) and rcll (bad) cmp sub es sub ss (bad) xchg pop popfq fmuls ja data16 mov adc rcrl loop (bad) cmc ficompl pushq lcall push (bad) add jae xchg rclb pushq (bad) idivl (bad) out (bad) (bad) mov js cmp xchg jbe lods (bad) add jp jle stos and rex.WRB lods outsl lahf sub rex.RXB mov (bad) or xchg push mov icebp imul (bad) movabs and mov rex.WRXB cli mov adc cltd (bad) movslq outsl movabs movslq test insl mov out cmpsb add repnz mov jno movsb push out pop mov adc (bad) cld or es jnp js cmc movslq or push iret pushfq sub popfq leaveq (bad) (bad) sbb (bad) cs (bad) push add jne ja jle (bad) retq (bad) rex.R adc mov loope mov cmp rex.RX (bad) mov jle icebp mov cmpsb xchg pop out (bad) out mov push mov sub xchg mov push cmp retq (bad) push lock lods (bad) in (bad) out es rex.W fmull sub mov rex.WR movabs (bad) jns rex.X test loopne adc (bad) mov jp rex.RXB sbb add and (bad) pop clc adc or lock clc mov stos and mov fiaddl movsb (bad) rex.R sub cmp sbb add enterq jle xchg add shlb xchg lret xchg and jg test fsubrl gs lret or sti and (bad) fwait xor pop repz add divl rex.WRB int3 in add and (bad) jbe lock pop test (bad) ss mov or repnz (bad) (bad) cltd sbb xor sbb and mov xchg or test push rex.WRX rex add rex.WXB test (bad) repz xchg pushq cltd jb (bad) and or jp pushq (bad) sahf (bad) push fisttp cwtl mov push mov rex.R insl add cmpsb jl mov adc cmpsl pop (bad) adc and sub insb jl mov scas xor lods adcl fs lods nop xor mov add orl (bad) loopne jns fcoml scas jl out mov nop pushq (bad) pop pop stos sbb loope mov add rolb (bad) rex.WXB add fnsave loope (bad) add movabs (bad) iret sub sub rex.B (bad) adc jno add movabs and cmp (bad) (bad) jg mul mov add push movabs mov (bad) and jge xchg xor rex jns (bad) imulb pushq in jp jp outsb rex.X clc push add pushq repnz movabs push lods movsb js add cmp pop jl (bad) or (bad) pop and adc adc nop cmp adc xor mov push rex.WR add sbb stc sub cmp cmp movabs add sti rcrb rex.RX (bad) imul sahf push pushq mov int3 movsb lea adc add pop xchg add xor int3 jp (bad) push std mov mov movsl lahf and push (bad) jl out movabs add or push rex.WRB (bad) mov or js (bad) pushfq xchg shrb scas adc test (bad) lcall fsubrp faddl imul pop out fildll (bad) lea pushq xchg jrcxz (bad) jrcxz fldenv cmpl sbb and outsl jbe fdivr retq pop pushq sub add and cmp and push xchg rex.B mov jae popq jnp xor jp jg out add loopne sti sub repnz sbb ss mov insl or jb loop push test rorb loope js adc mov mov xchg mov rex.WRXB sti cld loope xchg ja pop vcomisd loope movabs lods cmpsl jrcxz (bad) outsb addl insl ss fmull add (bad) ja or (bad) rex.WB or out mov iret jrcxz (bad) (bad) movabs pop (bad) sarb sub push fnstsw rex.RB cmp jg iret sahf pop jle (bad) (bad) adc add or mov sub mov and jo jg sarl callq pop imul xor xchg xchg (bad) push js cwtl int3 lea movsb adc (bad) callq in cmp xor jmp (bad) adc cwtl test int mov cmp sarl (bad) (bad) xlat xor mov pop xchg cmpl rclb imul sbb outsb insb scas jle rex (bad) add jrcxz pop and imul (bad) jo in out xchg (bad) xorb outsb jbe xchg lret pop fidivrl (bad) jmpq and and jns xor mov adc rex.XB cwtl add movsb out and movslq and xor cmpsl shr (bad) rex.WRB cwtl test fwait sti lods mov (bad) in (bad) xor loop gs xchg rex add rex.WX jnp (bad) xchg sub mov (bad) (bad) nop pushq addr32 (bad) pop je mov popfq sahf cmp (bad) push add test xor add rcl (bad) add mov xchg cmp xchg and cmpsl jg xchg rex.RX lret fadds cmpsb cmp xor rcll add (bad) jle xor fadds mov insl fidivl rex.RX in xadd (bad) es add addl in not or rex.WRXB xor fidivrl js and out rcl rol (bad) scas mov ss lahf mov test xchg pop (bad) mov jo jle sub test and add push jmp pop out pop add (bad) sbb and pop push (bad) (bad) xor cwtl jle lahf rclb push lods jge jl js cld lods (bad) mov xchg ss rol rex.WRB mov jge adc addr32 pop (bad) sbb cmp or cmc mov nop rol push ja xor rex.WRXB rex.WXB sub mov and jle lret (bad) roll fsubrp rex.R mov cmpsl fs imul fdivl idivl add xor pop insl in cmp cli rex.RB fmull outsb push jb rex.WRX (bad) insl push insl retq (bad) mov rex.W jmpq pop movsb and sbb repnz outsb jno mov xlat rcr insl push jmpq xchg add jnp notb add (bad) xorl cmc movsl pop sub (bad) test adc sbb jl add push out mov (bad) adc scas mulb data16 (bad) (bad) (bad) movabs xchg jbe add mov or (bad) enterq fiadd rex andl add (bad) sub jl sahf fldcw (bad) jb jnp ja jp mov add adc shrl fwait mov cmpsb and rex.WRXB xchg sbb xlat jle outsl movl add stos (bad) icebp pushq lret rex.XB jae fnstenv xchg xchg adc adc pop mov cltd jb jrcxz mov (bad) and (bad) mov ds fiadd (bad) push out (bad) (bad) sahf or ficoml scas (bad) out pop lock sub movsb lcall push xor (bad) add jmpq add out mov (bad) cmpsb cmp rorb callq mov mov (bad) lods sti cwtl mov ss rex.WRB jrcxz xchg rex.WB rolb add mov rex.WB and mov je xchg adc xchg jmp rex.WRB test in xor pushq lahf and loopne jl jge pop mov add or (bad) cwtl (bad) jge mov fistl add or mov cmpsb andb sub cmp (bad) mov rex.WX enterq cli (bad) pop xchg cmp xchg mov std andb mov pop pop cmp sbb loop or (bad) (bad) sti (bad) mov (bad) mov pop mov jb rcrl (bad) ds mov movsl adc test rolb movabs in (bad) rex.RXB adc lret sbb (bad) mov nop cmpsl jo (bad) mov rex.RB ss outsl mov mov rex.XB jnp vcvtps2pd (bad) pop repz sub movabs stos jmp sub jno jns (bad) addr32 or fbstp pop (bad) rex.WXB jae cmp je (bad) fldl sbb jmp stos ds xor xor imul jmpq cmp movsb pop sub ss jne retq pop (bad) mov sahf insb imul loope jl,pt xor fildll scas movabs rex.W xor dec clc test ja rex.RXB movsb repnz jge or test cli mov ss rex jmpq neg movabs cmp in fsubrl iret mov ja es rex.RXB rex.WR xlat cmp imul addr32 cmp rcrl jbe fistl out loopne xor xor (bad) (bad) or imull imul popfq and out roll hlt sti xor imul cmpsb in mov mov (bad) sub rex.WB int rex.RXB rex.WR xchg outsb repz rex rex.RX fildll add jno mov xor mov int (bad) pop scas add rex in and add or es popfq and xchg cmp sub rex.WX jle sbb adc js dec outsl add mov jb mov mov (bad) insl loop mov mov add and in sbb push sahf movl sub rex.XB (bad) jle mov (bad) (bad) cmpsl or ficomp fcmovu sub sub add and imul pushfq mov xchg jg (bad) insb sbb cmpsl rolb addr32 (bad) punpcklbw (bad) rclb rex.X rex.WB add (bad) jge enterq add ss (bad) push add rex.WXB std rolb ds pop push rex.XB popfq xorl jle fsubr rex.B (bad) (bad) cmp jle ja retq fldl icebp add loopne out decb lret movabs scas fs jl mov and mov cld or add mov add rcll jnp xchg orl rex.B (bad) pushq add in negl xor shrl movsb mov add pop (bad) es mov (bad) adc decb mov add lock add push cmp mov sarb (bad) (bad) sub imulb (bad) repnz mov in fwait adc fidivr mov (bad) add mov xchg lahf jno and (bad) addr32 sub push mov pushq icebp cmp and sbb addr32 test mov mov mov jne shlb (bad) pushq fwait rex.B scas mov xor jno imul add jg cmp je fisttpll jnp add test incb xchg lods and mov pop loop add (bad) rex.WX loope (bad) and rex.WRX xchg lods adc rex.X lea mov lock out and add jp (bad) jno (bad) cmp add rex.X mov add (bad) add (bad) mov sti movsb (bad) and (bad) (bad) lea mov jp add outsl mov cwtl ffree (bad) outsl (bad) mov mov (bad) (bad) mov mov (bad) mov mov pushq rex stc xchg mov mov (bad) ss rex.RX xor add (bad) cmp add xchg fnstsw push adc sti jmp jb jmpq mov rex.W push out movabs imul add sub (bad) push (bad) add int add jg add xchg cmp andl cmp jne mov xchg cmpsb rex.B lea loopne fnsave and xor lock (bad) xor pop lock add cmp sub xchg mov mov push lret int pop xchg xchg in xor add rex.XB jle shrb fdivl pushfq leaveq jg test pop adc rex.R lods cld sub xchg jp add sbb mov (bad) ss test mov rex add mov cld xor (bad) movsb rcrl pop (bad) rex.WB rex.WRB movsb push scas movsl mov test (bad) repnz mov or test stos and (bad) (bad) scas xor orl fisub jns mov out sahf xchg js faddl lods sar push in mov cmp rex.WRB sahf add and js int subl fcoml movabs or jbe cld pushfq out sar lahf addl std pop shrb mov test (bad) (bad) scas mov sbb pushfq mov out jg (bad) insb add rex.WRX sbb xlat xor add jrcxz push sub rex.RX pop mov and insl (bad) je std test add and (bad) (bad) add outsl and rex.X ficoml sub sbbl pop mov add fnstcw pop rolb jp ds lahf (bad) rex.X rex.WRXB out cwtl adc psubusb insb loop rex.WB cmp push mov mov pop rex.WRB rex.WB (bad) nop fildl shll loopne fistp xchg add (bad) push jns mov push push sbb rex.WRX fwait rex.W insl mov mov pop (bad) scas int3 add mov stos sub pop cmp (bad) or mov mov cmp lret push out outsl fs stc popfq mov mov out rex.WB cmp cmpsb rex.W in jl (bad) (bad) jno mov test rolb mov repz mov jle mov callq mov int3 movabs movsb add jl (bad) adc jrcxz ja insl and jmp (bad) (bad) (bad) movsl mov and fidivrl jp add inc pop xchg xchg mov (bad) cmp jnp out (bad) sar rolb in rex.RXB movl pushq fisttpll roll iret jo (bad) rex.WRXB mov rex.R out (bad) adc vpcmpeqb add fldenv rex.X jg adc leaveq (bad) loopne or jl outsb sub add adc sub sbb sbb hlt imul add rex.X xchg mov pushq outsl imul out sbb jrcxz (bad) callq (bad) cltd fdivrp mov rex.WRB sbbl pop add rex.WRB rex.RXB (bad) (bad) adc jae pop sbb fstl adc cs and cmp sti xchg pop or xchg (bad) popfq vxorps cmp adc adc add faddl repz push fiadd or clc mov pushq xchg mov in xor pushq js movsl add cmp mov (bad) mov in add adc loopne out lret mov jb xchg jg lods js add jbe mov xor movabs sbb out repnz mov pop out movabs add xchg rex.RXB or lock pop (bad) jg movsl mov add sub fwait or xchg (bad) (bad) stos xor jl callq xchg rex.WRX cmc mov or (bad) mov test mov stc add rex.X (bad) and mov stc add mov (bad) xchg flds loope out (bad) (bad) cltd lret and cmp and (bad) nop fist sub jge je sub out xchg adcb cmp and cmp rex.RX pop je mov scas rcr (bad) and jp sbb sahf lods sbb mov jmpq shll push xchg divl (bad) data16 mov repnz xlat pop cmp add in push cmpl (bad) imul stos cmp repnz (bad) add rex.RB xor pop out fisubrl push (bad) sarb and rex.WRXB rex rex.WXB push mov adc (bad) imul subps movabs movabs pop jnp cld lock rex.WRXB pushfq mov add jno and fwait or xor pop lods cmp movlhps es jle jmp (bad) loope mov cli lods fadds mov fistp enterq xchg movsl pop gs movabs and adc idivl (bad) out shr lret cld adc imul out xlat mov push or (bad) pushq (bad) pcmpgtd and sbb mov (bad) jnp out fldenv int3 movabs mov mov push (bad) (bad) pushq rorl jle mov cltd ss and ljmp mov pop loopne int3 jrcxz (bad) push insl leaveq sbb jrcxz leaveq cli addr32 xchg or xchg mov (bad) add scas int3 test movabs xor mov frstor (bad) out mov scas (bad) (bad) (bad) outsl repz repz (bad) mov push pop (bad) out pop (bad) (bad) pop xchg pushq add (bad) pop (bad) xchg xchg jge movabs xor or mov mov test (bad) pop in rcr (bad) scas lods imul insb js adc xchg cli cmp jl xchg movsb mov jg lods xchg out int scas (bad) jne push cld pushq xchg nop (bad) and imul (bad) jp (bad) in (bad) push movsb cmp insl movabs insl xchg fnop stos (bad) add cmp (bad) mov shl mov mov bswap out jp xchg mov (bad) rex.W xchg jrcxz scas mov or xlat stc xlat js stos enterq ds (bad) jns xchg rex.RXB cmpsb movslq movabs mov (bad) ja rex.WR shrb (bad) rex.RB xor rex.WXB out xchg movabs repnz push fild pushq mov scas cltd sbbb jne popq add mov mov xchg (bad) xchg mov shrb callq rex.X cmp js adc xchg pop mov shr fdivs rex.W sub rex.RX nop ja pop xchg (bad) outsb js mov sub je (bad) mov jb fwait jns xchg lahf insb imulb fistpll cmpsl sti nop jg (bad) add xorb add (bad) cmp retq (bad) jg add mov loop out mov sbb (bad) mov in mov (bad) and add (bad) xor cmp popfq push (bad) shll xor test push ds movsl pop lahf ficompl add movb fadds pushfq sbb adc (bad) add retq rex.X rex.XB add (bad) push mov or cltd cmp clc xlat jb add out mov es xor mov push jge jnp jno add xor (bad) and adc callq push lock pop jge retq in add repz addl cmpsb jbe push and mov push leaveq rex sub or sar insb rex xor jp in (bad) push jb cmpsb int3 notb pop jbe sbb lods and movsb jmpq add (bad) lods push (bad) adcl rex.WX push jae adc xor leaveq jl rex.X (bad) ss shll (bad) movabs (bad) xchg mov insl cmp add nop sbb pop cs je (bad) (bad) fist test pop jl mov mov mov sub mov (bad) int mov and xorl (bad) loope xlat push and ja (bad) lods xchg in in xchg or cmp cmpsl cmp add jb,pn mov jmpq test mov gs lock cmp popfq adc mov and rex.X mov and mov pop pop adc or sarb and test fist cld push andb movl mov adc in jge mov push (bad) jp adc rex.RB cld add add add std cmp jg add je movsl add loop sub add rex.WX xchg lods seto jb xor add mov pop xchg (bad) mov shlb xor (bad) nop sub (bad) jle push outsl fnstsw xor pop jg jbe enterq xchg out add add cmpsb in lods mov jg pop (bad) stos sahf xor add xchg lea add (bad) cmp mov insb xor test cmc addl cld (bad) jle add (bad) movsb add (bad) popfq movabs push xchg mov rex.X test jg pop jns sbb cld pushfq movslq fwait xchg add testl adc loope in cwtl repnz adc movabs add js xor (bad) push sbb and and mov movb (bad) cmp rex.WRX add jns lods nop movabs out (bad) data16 movabs rex.WB (bad) in popfq or mov je leaveq and test xchg rorl enterq test (bad) mulb jg rex.WRB lock shrl sub add jge mov clc rex.WRXB push jp jnp pop sbb jrcxz push add fmul orl jb xor pop push (bad) mov nop repz fidivrl mov in fcoms (bad) pop jnp add mov scas cld rex.WRXB xor or retq roll (bad) mov pop jg iret or callq jns push jo xor add xchg mov and and loop mov mov outsb (bad) push fisubrl (bad) (bad) sahf rex.WX push xchg (bad) push rex.WRXB mov xchg jp mov movb jmpq xchg push js or hlt outsl sub jmp mov adc (bad) push cmp insl (bad) (bad) mov sti (bad) pop jl imul pop cld js cmp pop imul (bad) jg rcr xchg mov (bad) outsl imul rcr incl xchg xlat cmp or and cmp in jbe xor test (bad) (bad) rex.WRXB rex.RB popfq (bad) jmp ljmp rcr insb mov fwait rex.RB movabs jno add adc insb jle jg jb out fldenv lret rex.WX repnz (bad) repz in loop movslq data16 adcb std rex.RXB push es popfq ja xchg push (bad) (bad) (bad) sbb fsubrs clc or in std push cmp xor shrl test (bad) pushq fwait scas cmp pushfq pop callq and jbe fisttp mov mov add scas sbb push cwtl mov lods ja pushq divl sbb push (bad) (bad) xchg push (bad) and rex ljmp pop mov lods rex.WRB js (bad) or sub pop jb jge sbbl (bad) xchg rex.RXB fstpt (bad) or sbb cli and jle xchg fisubrl cmpsb insb add xchg movabs fist outsb sub mov (bad) cltd movsl rex.R jle adc mov (bad) xchg rex.WXB and xchg xor orl jnp mov mov add pop add adc add sbb fisttpll or mov lods pop je pop (bad) in mov pushfq out xchg movsb std jle mov (bad) and and cmpsb cltd fiaddl jne rex.WX rex.X fs xor mov push js xchg cmp (bad) clc cmp add or pushq test (bad) test mov (bad) lods rex.XB stc or (bad) (bad) insl rolb adc out sbb fldt add xchg rex.WR data16 xchg jl adc je (bad) fstps gs xchg movslq add jp add icebp rclb jns shrl jl test (bad) xchg movsb je add (bad) jnp jle jbe jb lock decb mov rex.WRXB fsubl test std add (bad) adc (bad) (bad) std cli jrcxz add clc xlat pop (bad) add movabs (bad) clc loop pushq jmp in repz add movsb mov outsb push enterq clc js or adc mov pop sub add xchg movslq and mov idivb mov jae loope movslq jp adc cmp or insl adc pop movabs mov movsb (bad) (bad) repnz ss mov test lock (bad) jge xor pop std mov add mov fisttp in sub movabs in ss add rex.WRX rex.WB cs (bad) pushfq cmpsl add iret push adc cwtl cmovne jge rex.RX or mov subb jg jge cli add sbb xchg jle (bad) xor stc std mov rex.WB cltd sub or repnz test (bad) jl mov or cld sahf je (bad) out rex.WRX popq rclb cmp out rex.WXB jg enterq (bad) jrcxz in adc xchg cmpsl (bad) add sbb repz rex.WRXB xchg (bad) rex.WX cmpsb sub xchg mov movslq cmp pop sbb sub jle sub out mov add rcrb add leaveq xchg nop sbb (bad) movsl sub shrb add imul jb cmpsb jne repnz (bad) jno movslq std lea push rex.RX add (bad) add pushq (bad) mov mov rex.WRB rex.WRXB jle retq rex.WXB and push test jo movabs lea pushq xchg rcrl pop xor (bad) sbb shrl mov sub sbb stos stc (bad) mov sbb jnp retq mov addl rex.W (bad) mov add rex.RXB rolb lods push cmp jmp mov (bad) adc (bad) push in jg add mov addl retq pushq cld push push test (bad) jno shll add jle insl sub xchg imul rex.WX (bad) (bad) (bad) mov add (bad) stc (bad) push movslq cmc cs and orl mov sbb (bad) add and ds rex.WR fwait sub movslq cltd repnz outsb rex.WRXB int push cmp rex.XB rex.RB rex.WXB out jg (bad) mov pop jge fiadd jb or imull rex.B pop lods es notb in (bad) insb (bad) leaveq movabs loope cmp movsb sub mov cmp test loop,pn int ja clc sahf pushq xchg js iret outsl lods rex.WR imul cmp mov (bad) sub incl or sahf add js retq stos sti fsubrp xchg mov clc and (bad) lret rex.WR insb out nop rolb sub lods sub mov shr addr32 rex rex rex.WX xor (bad) fldcw rclb push ja pushfq add adc (bad) mov cmp stc ja (bad) (bad) movabs shl out mov adc sbb (bad) jno fdivl add (bad) jl push leaveq (bad) ja iret jle adc fidivr add xor mov repz or lret (bad) (bad) mov (bad) std movabs pop mov and cmpl add lock rex.WR (bad) sub pop fwait cmp repz pop jne mov or rolb (bad) shrb (bad) sbb sbb leaveq add xchg add jrcxz imul fistl xchg xor jb popfq pop jnp and out pushfq add and jrcxz (bad) incb mov rex.W pop xchg lods add fild mov out insb pop cwtl (bad) lret stos lock push cmp add jo xor repz test jno pop add test cmpsl ss (bad) cmpsb (bad) rex.WRXB sar mov enterq rex.XB pushfq leaveq pop add xchg jmpq stos out and clc sub imul mov stc and lock sti movsb jae js test push callq push roll (bad) cs rex.RXB (bad) scas jbe mov pushq pop ds (bad) leaveq cmp and sub jmp (bad) imulb int3 jge mov sub icebp int (bad) test jno rex.WB hlt cs cmp jle mov jle faddl sub scas cs jg sbb rex.WXB mov cmpl rex.RXB scas mov jmpq pop (bad) jo mov (bad) sti jle mov orb mov (bad) fwait movslq loop sub add outsl pop jno lods rex.W (bad) rex.B test sub ficoml rex.W jae and rex.WRXB sysret add test and out jb pop std pushfq lods cmp and xchg rex.WRB rex.RXB rex (bad) leaveq (bad) shlb fsubrs scas sub callq cmp lods int push sbb xchg rex.WXB and push and xor (bad) shrl push test rex.WB (bad) (bad) jbe pop fsubrp jne cmp xor xor repnz jb lods imul or cld pop fldt sahf retq (bad) rex.WXB fs (bad) (bad) (bad) int sbb (bad) pop (bad) xchg lcall int outsb pop movabs loope rex.WRXB out add lods movabs (bad) cmpsl movabs mov (bad) ja xor out in xchg (bad) mulb (bad) and xor (bad) es cld scas (bad) stc mov rex.WB cbtw adcl js sbb jl jnp (bad) jl pop xor cmc add (bad) sbb pop (bad) loopne (bad) adc out negb out xchg movslq or jne (bad) and cld rex.WRX cmp mov and rex.WXB fwait xchg sbb (bad) (bad) cmp rex.XB rorl (bad) sub rex.RB es mov pushq mov (bad) jb mov mov push rcrl rex.WB rex.RX movabs in insb data16 (bad) insl mov pop ja or xlat incl mov outsl mov imul add (bad) mov cmp fild push lods rex.XB mov fimul push (bad) rex.WRXB sbb stc add iret (bad) fwait and sub callq (bad) cmp imul pop movsb fistpll (bad) in js and mov xor cmc (bad) outsb mov movsb cmpsl outsb (bad) jg push xchg lret loopne stos mov rclb (bad) ja (bad) add jb adc (bad) push pushfq scas add (bad) (bad) cld cmpsl xor add lock std addr32 or decb rex.XB adc pop mov pop adc or fnstcw sub rex.W test lods (bad) divb (bad) mov movsb jp icebp ja,pn (bad) mov nop mov xor mov out mov push decb lods out and (bad) mov adcl or jge push clc (bad) and (bad) jge (bad) (bad) mov mov xchg ficompl (bad) imul cwtl (bad) ss (bad) jg adc lret mov rex.WXB (bad) neg jle ds loopne outsl faddl adc fsubrs test cli ss fmull sbb jrcxz jne out (bad) jge or pop outsl fs cmpsb movabs jg or lret and mov (bad) loop (bad) (bad) jno sub sbb adc (bad) cmp push mov movabs rex.WXB popfq rex.RXB or (bad) mov or cmp (bad) mov or in stc rex.B sbb outsl imul rex.WRXB lret xor outsl cmp outsb lea loop xor retq movabs outsl popfq repnz pop push and cmp fdivrs je test (bad) loope mov (bad) sub and add (bad) mov loop jb sub rex.RX (bad) and jl sbb movsb pop fimull pushfq push (bad) outsb (bad) (bad) (bad) pop and pop loop mov sbb add lret rex.WB rex.WRXB loope cmpsb push jnp fbld xorb push out add mov fild and jrcxz test (bad) mov movabs lret and add mov sti mov pop enterq cmp pushq (bad) mov jb insb xor (bad) (bad) outsb push lods (bad) (bad) nop cmova (bad) pop nop adc pop cli lods (bad) fidivrl sbb rex.WB addr32 rex.WRB add mov imul mov mov mov and loope pop (bad) push movsl xor add mov or rex.WXB fldcw mov (bad) rex.WRX fsubr (bad) pushfq movabs add (bad) rex.WB orl fstl rex.B mov add in js adc popfq rex.RX jb mov leaveq mov rex.WRX rex.WRXB ss adc sbb ss (bad) jno push pop mov add xor (bad) rex.WRX (bad) nop fnop insl adc and cmc lret pop (bad) in (bad) pop add orl jrcxz in movabs push loop push sub jmp (bad) rex.RXB (bad) adc rex (bad) mov pushfq pop (bad) xchg gs retq jl rex.RB fs icebp jb int fsubp cmpb jge mov insb jle fiaddl sbb push mov test mov in in cmpsl adc (bad) ss addr32 loopne mov jo mov cmpb flds in (bad) xchg movabs clc (bad) (bad) nop pop decl jnp decl pop jge pop out push mov add (bad) mov in mov in sub lods or lret mov mov insb shl xchg jb outsb push mov mov add clc es rex.WRX rex.WX (bad) pushq test pop loopne push add fstpl add mov (bad) sbb sub (bad) add mov lret add mov (bad) jg rex.WX (bad) xor or and add in scas (bad) ja rex.X lahf (bad) fidivl rex.X xor sti jo and rex.W out sbb test lods pop (bad) test sub xor mov mov fadds pushfq (bad) (bad) sbb sub add xlat int3 test add lcall icebp add es xchg scas cld add adc jmpq push add mov sub mov jg stos (bad) push lods rex.RXB mov add xchg retq rex.WR cs add scas mov xor outsb add and xchg cmp jmp mov pop add xchg (bad) (bad) add (bad) and (bad) push callq rex.WX jb push cmp (bad) push movslq mov rex.RX xchg and adc nop cmp fsubrp cli (bad) lcall lods (bad) xor push nop lock cmp testl adc jle adc pop mov popfq stos mov push sub xchg int cmp rex (bad) rex.WXB (bad) (bad) jle pushfq fdivl hlt xchg and rex.RX lea add sti cmp imul out adc imul in cmc and mov mov or add rex.WR jp add or add push pushq jl (bad) (bad) (bad) movabs cmc jle sahf lock jmp (bad) mov rex.X mov nop push lods xor outsl imul xchg iret imull cmp xchg rex.W pop add sub add (bad) adc (bad) cwtl mov (bad) std rex.WB cmp push adcl pop icebp xchg sti (bad) fs mov pop jg mov scas rex test decb rex.WRXB mov cmpsl enterq and adc (bad) rex.B jp test (bad) (bad) rex.WRX rex.WRX outsl and stc jb push mov xorl (bad) fwait scas mov jle xchg adc js lods addr32 enterq jno rcll cmpsl divb jae movabs in sbb jmpq (bad) add (bad) jl (bad) fidiv repz push pop rex.WB jp jg (bad) mov add cmc cmp scas (bad) xor (bad) xchg mov rex.WXB push xchg in scas xchg cmp push (bad) and push cmp mov (bad) pop lret lea (bad) lea (bad) test rex.WRXB xchg push in outsb scas jne adc fstpt (bad) incb fcoml (bad) mov insl (bad) int gs adc loopne fnstenv lret push xlat add lods jl out mov or push movsb xor out rex (bad) stc sbb adcl (bad) pop repnz lret int (bad) (bad) pushq add jrcxz jge jnp add mov lea sub and insb cmp (bad) cwtl (bad) or (bad) xchg (bad) es je mov push rex.W (bad) jg xsave add rex.WRX rex.WR rex.X leaveq push outsb nopl test adc add retq add sti rex.RXB rex.R mov xchg flds add test xchg rex.XB mov (bad) pop je cmovbe (bad) (bad) add and or sarl rol push in cmp test pop cltd sub and pushq stc je iret sbb sbb (bad) pop shr in jle adc repnz xchg fmull pop cmp (bad) jb pop mov lods push (bad) sub (bad) cmp (bad) (bad) (bad) mov (bad) (bad) and lods add jmpq jb push xchg (bad) jne outsl insb repnz sub mov mov rex.WB push sub mov decb pushq sahf jl or pop jp push cmp lea mov or fs lock and in jb addl js jmp mov (bad) push (bad) outsb add mov rol lret pop push sbb rex.R rex rcrb pushq push mov pushfq (bad) add xchg or scas sub sub rex.WXB fwait (bad) rex.RB rex.RXB rex.WR ss ss mov (bad) rex.WX adc adc jl faddl outsl stos jle retq mov jne je test movabs push rex.WB (bad) rclb lret (bad) pop rex.W stc or insb pop pop cwtl cmp incb icebp push repz lock movsb rex xor rex.RB add push in ja loopne cmp jp (bad) push std pop add rex.WRX movabs push repz pushq (bad) push add movsb insb std (bad) add or jle mov pushq stos jg push fsubrs jno enterq andb cmpsb movslq sti add xor xor push clc mov and rcrl add pop mov pop rolb jmpq lock stc rex.WRX adc add and insl jle jno stos sti rex.WX rex.X mov jp out retq flds xlat cmp fbstp sub fwait jrcxz in (bad) data16 lea add push xor loopne rex.RX fwait int out (bad) out test and mov imul or (bad) jg jp mov and movsl mov lret ds rex scas jmp ffreep or stos fmull or jp testb xlat sbb ror sahf add test mov rex.R imul mov sub outsl jl add xchg rex.WXB scas fs repz mov add sub add sahf cli (bad) in jo rex.R rcrl add stos int retq add jle (bad) adc callq test (bad) mov test rex.R ror and fwait lret fcompl rex.R (bad) (bad) movsl dec xor push outsl add fcmovnbe lock leaveq lahf rex.WRXB rex.WRXB out sbb add mov rex.WRXB imul insl add xor mov cmpsb add xor jle (bad) or pop dec popfq push test add cmp push push add add cmp negb shrl add out jmpq or jmp (bad) add rex.WRX add (bad) xor stos mov and xlat push cli mov add mov lahf imul popfq int movsl (bad) add xor (bad) fnop in add (bad) or (bad) ss add rol (bad) jmp cmpsb pop add jp pop sbb jbe jae movabs (bad) std outsb in jns inc stos (bad) jmpq (bad) fcompl jl insb or mov xchg add iret pop cli in jg jae mov fdivrp or cmc rorb push mov mov lods push adc rex.RXB outsl insl lret imul xchg shll or (bad) pop lret jle rex.X fisttpl (bad) outsl lahf (bad) movabs rex.WX movabs sti mov insb push (bad) xchg add rex.WB xchg in pop (bad) rorb out fiaddl jae int3 cmp cltd xchg add xchg cmp add mov sub add stos (bad) je (bad) mov mov sub jb add shll add (bad) (bad) xchg (bad) mov pop xchg sub sub fwait lret std mov add rex.XB jl (bad) out es (bad) (bad) sbb jg jmp rex.WRX sub stos add fcoms in mov jg (bad) rex.RB addr32 (bad) movb mov rclb mov lea adc xchg jbe (bad) gs incb push in jle xchg movsl movslq sub cmp sub insb jle rex.RXB cmp rolb jns adc pop add movslq cwtl jmpq gs jp insl sub (bad) (bad) loope jl lret in pushfq mov jns mov fcomip rex.WRXB sahf add (bad) or popfq movsl shrl (bad) (bad) jle fdivp (bad) outsb cmp lret xchg mov push sarb add push sbb jge adc mov hlt push sub sub (bad) xchg sbb xchg cmc jrcxz pop adc lea (bad) pushq clc mov fnop add mov rex.RX retq add test sbb (bad) mov retq mov (bad) fcom sahf rex.WB sub fildl repz jle stc test mov insl rex push jb sbb (bad) rex.RX jg jmpq add or push jp vmovhps sahf outsl push sti jne and and add sbb mov add pushq pushfq movabs jrcxz in xchg add add push stos cmpsb insb adc cmc cmp stc jne (bad) rclb popfq (bad) cmc jle rex.WB (bad) mov and (bad) push jp movabs pop sub sbb mov jne cld mov test stos mov (bad) mov movsl mov xchg rex.WRXB jp mov push mov scas ds cmpsw (bad) (bad) xor xor xchg (bad) ficom retq out mov sbb fs in leaveq ljmp add cmp rex.RB cmp jle fild fcoml mov jmp std retq rex.WXB add sub lret xchg mov adc mov out jb and push add lret mov (bad) fs and lock adc jg or adc add xor (bad) and cmp push movsl (bad) (bad) add jrcxz add (bad) (bad) mov xor jb int3 rex.WB loop xchg add push insb (bad) xor xchg rex.RB or xor test ficoml xchg ror jb and and rex.WX lock add rex.XB jle xchg pushq jg sbb add push test (bad) xchg (bad) mov push mov xor or sbb add pop fs jge sub out add shlb nop add repnz lret rex.WRX or popfq mov jbe (bad) jne mov add rcrb fiadd callq pop add jge sub movsb add (bad) jne jbe xchg sub xacquire add outsb jg (bad) mov xor jle,pn cmp rex.B je push mov (bad) mov fild roll mov xchg imul add ja sbb (bad) jns fisubrl lock xchg pop rex.WX leaveq mov test (bad) (bad) in (bad) add pop (bad) add test mov mov roll jae fbstp (bad) push clc sbb or rex.WX pop sbb xchg jg xor mov (bad) push jp push or (bad) jg leaveq xchg add test rex.XB push mov (bad) (bad) add xchg pop (bad) rcrl or movabs sbb xor sahf add xchg and xor add leaveq mov shrb fwait rex.X (bad) mov add sub rex.RXB add and cwtl cmp pop push retq (bad) lret (bad) fsubs pop add xchg add cli (bad) jnp nop jb repz cld jbe add mov sbb pop mov scas ds lret sbb mov jns xlat fist (bad) (bad) cmp (bad) mov sahf adc out or adc (bad) mov xchg add rex.RXB pop gs lock sbb sbb andl mov mov xchg (bad) (bad) jg push or jo movslq pop test pop adc sar jle (bad) icebp (bad) (bad) mov (bad) out push mov or cmp mov retq fwait (bad) cmpb or mov in sub xlat subl xor add jae jno (bad) mov jle (bad) movsl cmp cmpsb add iret mov fnsave sbb repz std add (bad) push jl xlat adc add movsb sub jbe add stos pushq loopne jl retq mov repnz mov add outsb xchg xchg movabs callq mov jp jl jne (bad) add mov imul push lret nop fsub xchg rex.WRB (bad) (bad) jp cmp mov add mov (bad) jb jns or insb add movsb cltd sbb neg jns (bad) add mov repz mov (bad) mov retq loop in mov mov movslq ja mov mov cli lods (bad) (bad) push xor (bad) (bad) add push push add scas fnop adc add fimull pop (bad) leaveq add rex.WRXB rex.X and (bad) sub cmp or jmpq jns pop push mov (bad) (bad) jle scas mov jle fs (bad) fsubrl (bad) insb fwait out mov scas in jge mov xor rex.RB sub adc movabs stos mov fist jl jp xor add push je mov (bad) adc add xlat or or or adc in mov pushq stc movsb jle add sbb icebp fisub xchg add int pushfq rex.B rex.WRB add (bad) stos xor fmull adc (bad) cmp mov sti test and (bad) rex.W rex.WRX sti movsb or (bad) callq and sub push and (bad) scas xor callq adc out mov push insb and lcall jae adc (bad) (bad) (bad) xchg xor repnz jle in jmp mov cmp add pushq or (bad) add and je outsb in (bad) fwait (bad) add js add lock fcmovb outsb (bad) sub jrcxz fwait cmc sbb (bad) test add (bad) mov xchg subl xchg mov enterq (bad) (bad) out (bad) (bad) pop mov rcrb (bad) xchg mov adc or movabs pushq sbb (bad) xor out rex or loope rex.W pop add rex.RXB iret jmp fs shll mov jb cmp xchg lods (bad) add add (bad) mov add sti gs rex.RX test rex.X icebp fsubrl mov push and xchg adc (bad) mov add (bad) retq sub test xor decl mov mov movabs xchg mov insl popfq scas mov xchg movslq xchg data16 in clc jnp jrcxz lods (bad) outsb hlt mov rol xor ss test loop fxch mov (bad) and testl gs fsubl movabs stc adc (bad) in pop test jno jns cmp scas add (bad) jl or rex.WRXB add jg xchg lret (bad) (bad) xor je add (bad) pop xchg shll out adc pop lahf xor movabs repnz rex.WRX pushfq mov retq jne rex.X push movabs fisubrl xchg xchg cmpsb sub orl jmp outsl lods (bad) pushq mov and rcrl (bad) mov (bad) jae mov push adc mov rex.WB fwait xchg add mov mov xor cltd jmpq mov adc fwait jns gs sub rex.X jl adc es int3 rex.WRX movabs (bad) pop out mov (bad) (bad) jns push (bad) loopne sbbl mov mov (bad) (bad) div push cmc push pop or xchg xor sahf pop jbe stos lods sbb fnstcw mov scas sub xchg lcall sub rex.WXB add fsts (bad) cmpsl or mov (bad) fnop mov fimul ss xor jp push jmp adc xor test (bad) pushq loopne cmc out (bad) int pop lods loope out pushq imul insb rorb fnstcw rex.X xchg xchg (bad) jg je xor leaveq (bad) cmc jbe callq sbb xlat jl jbe lea nop (bad) add lcall rol adc leaveq add es and (bad) jb in or pop pushq retq stc and pop add or sbb pop cs lret add sbb xor mov addr32 imul jle (bad) retq movabs scas repz (bad) es clc and out jp out xchg mov (bad) cmp popfq fdivrs rolw xchg rex.RX pop (bad) out rex.X rex.WRXB cmp fistpll push out std movabs (bad) sub add (bad) (bad) lods or incb (bad) imul rex.RX xchg push out and (bad) add in retq (bad) add xor cmc movslq add clc movabs adc (bad) xor add jl test test sbb and (bad) (bad) mov stos imul hlt xchg or lahf int3 out movabs jmp (bad) add push mov fisttpl add jb outsb je popfq je lahf (bad) add rex.WRXB (bad) sbb push enterq jns and mov push adc movsl add (bad) es xchg lods mov rex.RB lahf nop sub cld out xchg movslq out cmp and adc mov rex.WRXB mov (bad) pushq test int3 sbb sbb add mov and mov mov lea (bad) lret xor lock cld mov jp movabs and movslq out xlat mov cmp xchg data16 fdivr cmpsb push jle lock xor std (bad) (bad) stos rex rex.R adc jl outsl sub incl push (bad) mov (bad) sbb add movabs and imul js cld sbb movslq add (bad) xchg addl imul xor mov add jnp sti jb jle (bad) cmp (bad) icebp ss (bad) outsb incb data16 add pop add fcomi (bad) or js cld imul (bad) jbe pop repnz test add in pushq imul add js je movabs sub int pop add xor cmp jle push pop cmp mov (bad) (bad) cltd je je sub std add test adc in shrb jle stc (bad) sub and test mov mov iret sldt push rolb enterq mov cmp sub mov loop mov (bad) std (bad) stc add fwait and (bad) int push cmpsl xchg pushfq add jbe add retq (bad) and test es xorb or (bad) gs stos (bad) adc (bad) mov (bad) iret mov mov cmpl cmp (bad) and stos (bad) (bad) pop jmp xchg mov gs enterq rex.B and xor or xor movsb and hlt mov or xlat repnz rex.WR adc test (bad) xor fstpt add addr32 or (bad) shll push shrb rex.RB enterq add loopne loope movsl jbe mov cmp leaveq add cmp jbe add (bad) jge movabs or lock fnstsw (bad) (bad) and add (bad) sahf cmpsb jbe fwait add andb gs pop push and add icebp xor mov push loope rex.RXB (bad) xor pushq fs loop (bad) mov add lods pushfq xlat movsl push (bad) jle adc xchg imul jle (bad) fucom mov (bad) pop xor or push divb clc (bad) clc in cwtl shr insb jl jg add jrcxz adc sbb cmpsb scas xor decl (bad) jne (bad) rex.B out mov (bad) rex.WRX rex.WX mov (bad) (bad) int3 insb rex.WX and scas mov and lahf shrb callq scas mov rorl scas lods pushq (bad) ss int cmp add mov jb addr32 insl rex.WX lods stc xor jp outsl rcrb mull in mov pop cld mov mov sarb (bad) push pop test rex.WRX in (bad) fnstcw iret jns cmc push adc imul lahf sbb adc insl jl or cld rorb (bad) cld or add mov pop subb sarb (bad) decl pop fiaddl add lock jrcxz js rclb es repnz rex.B pop insb push rex.WX add push sahf (bad) sarl jge out mov sub lret movabs pop xchg (bad) cmc in (bad) mov jge (bad) negl sub sbb mov fnstcw (bad) movsb out movabs mov in pop sbb (bad) jno mov fstpl add jmp xchg cmpsb xchg rex.RXB pop (bad) imul mov add xor rex.W pop jb add (bad) push jae jb (bad) pushfq std rex.WB jmpq (bad) sub mov out jns mov jg,pt in mov adc jg pop jmpq sub in pushq or rex.X add (bad) shrl push in test movabs rex.WB xorl add jp rcr sahf clc jb xchg (bad) or push add pop in rcr (bad) (bad) push sarb xchg xor cmp mov (bad) and and fstpt lret xlat add mov add mov or pop sub (bad) and xor mov xor rex.RXB rex pushq js pushq (bad) cs mov int3 (bad) ja addl sub out lods fs std rex.RX cmpl pushq cmp mov adc rex.R (bad) add lods stc ds sub xor add movabs (bad) or sub lods testb (bad) cmp jg (bad) jo movslq jp leaveq and (bad) push jg xchg add mov rex.WRB jno mov mov add jns rex.XB xchg mov cmpsb mov sub adc in add xchg mov jle add ror jns fdivs test mov in add (bad) sub mov int3 scas (bad) jge mov divb jrcxz xor sub jle mov out rex.W sub jns xor (bad) lods add movslq mov repnz push (bad) lret (bad) out pushq rex.WXB pushq adc cld push test es mov iret jne (bad) jrcxz jge sahf (bad) jl pushfq (bad) add rex.RB fsubrs (bad) or xor rcrb repz callq std adc and mov vmwrite sub (bad) push add add sbb xor hlt fstp mov sub loope imul (bad) mov out (bad) rex.X cs xor sub movsb add ja movabs imul movabs (bad) add cmp fwait sub (bad) mul mov and push loopne out mov rex.WR fbstp xor cltd adc adc pushq out stos cmp add outsb and shll pop int add (bad) mov or push jg lret sbb add rex.RX icebp ss add (bad) mov add callq shl xchg and rex.WB stos in jns leaveq insl pminsw imul push jle lret adc mov cwtl add (bad) pushq (bad) add retq mov xchg movabs add adc xchg sahf cmp adc loope (bad) jnp enterq (bad) pushfq rex.WRB outsl pop (bad) rcrb lods jb test callq rex.WX pop es lock retq mov and repz and xor (bad) or pop sahf (bad) test jge pushq rex.X (bad) mov leaveq pop scas mov add sub mov push mov mov test stos or mov lret movabs rorl pushq insl (bad) fucomip pushq jmpq add mov mov add sub push loopne clc in movsb (bad) sbb ljmp and movabs loop add imul insb add mov rex (bad) and rex.WRX mov stos sarb and mov je leaveq shrl std (bad) shrb fnstcw (bad) add mov xchg jmpq jle mov adc rex.WR jge (bad) xchg imul callq insl xchg xor (bad) cmc icebp mov es insb (bad) (bad) ds ja sub icebp jle imulb mov lahf movabs (bad) jle mov mov sbb iret add shll (bad) jbe hlt xlat (bad) adc and pop rex.WX add repnz mov adc movslq sbb adc shlb pop lock (bad) xor or or sahf xchg add xchg push jp hlt pushfq jae rex lret or add (bad) add sub out out je out fs rex.RX (bad) jle xchg movabs jbe (bad) mov cs pushq cmp (bad) mov xchg (bad) addr32 rex.RB (bad) jbe pushq rex.W and jp cmp lret loope shlb (bad) (bad) fisubrl push add in cmp adc mov push rex.WRB cmpsl rex mov mov xchg jns pop rex.RX add rcl lret js mov fsubl jge test jns rex.XB (bad) roll rep mov (bad) pop je and pop loope cmpsl scas xor icebp jle mov add decl adc sbb clc divb in movsb jle rex.B mov jl mov jmpq rex.RX adc adc int3 push push stos lods (bad) insb test outsl cwtl cld lods xor push pop insl cmp jmp jb (bad) mov and leaveq xchg outsb loopne xchg cmpsb lret sbb out rex.RXB rex.WRXB (bad) sbb icebp pop jp rex.WRB fsts push (bad) adc jno jge lret (bad) adc xor pop adc callq jnp sahf add mov pushq xchg rex.WXB xchg mov sahf add rex.R rep push mov mov jle xchg insl fisubr jle movabs rex.RX sub jo xchg or fsin mov jge sbb (bad) xlat (bad) loope rex.X push rex.X fsubp sarl cmc add mov or sub (bad) jl (bad) movabs movabs jmpq pop and sarl adc sub or scas rex.B out divl sub jmpq imul cmp out add sub adc jle outsb leaveq nop cmpsb mov jbe pop push negb add adc sub xchg gs jnp jo rclb xor mov push pop (bad) mov je (bad) mov sahf jae test pushq stos (bad) rex.W add lods mov xchg sub pop (bad) jge add pop lods pop fnstcw rex.RX mov pop (bad) or pushfq clc iret mov in pop data16 sar rex.WRX rex.X (bad) xor rex.WRB rex.R sbb sarl (bad) or mov (bad) mov idivb (bad) outsb pop hlt add rex.WB (bad) jnp (bad) in xchg jp scas ss jae pushq (bad) sub cmp mov pushfq out xchg stos push mov jb push subl xchg stc xor add (bad) outsl insw fiaddl cmp mov pop rex.X rex rex.WRX rex.RX add sub xlat jo negl mov jbe (bad) rex.B (bad) or xor fiadd xor rex.R rex.RXB retq jmpq sub fidivrl ja rorl in jp scas jg fimull pushq and adcl push mov insl mov add loopne xor xchg pop imul loopne clc and mov roll (bad) cmc out rex.WRXB jbe rex.RB clc push divl mov in (bad) movsb sti mov fisttp xor add (bad) sub mov cmp lret pop add js movslq lods rex.RB pop rex.WX outsb cmp jl jb xchg shl test out mov push test (bad) xlat cmp (bad) outsb jnp rex.WRXB push rex.RX ja (bad) (bad) xchg repz xlat (bad) movabs pushq sub (bad) pop add clc mov sarb (bad) rex.X rex.WXB rex.WX loopne and lea movabs imul shrl fmul sti repnz rcr vpermi2b mov rex.R es addr32 jp cmpb std (bad) movabs fs sub js jge fildll add retq pop fs pushq mov in jne jrcxz jge mov (bad) test jp push adc (bad) or mov xor bswap pop pushq icebp (bad) lock test int3 xor add (bad) add cmp sub (bad) out movabs xchg lods mov pushq (bad) adc (bad) push and pop callq je push mov mov xlat jns subl shrl rex.RX iret movsb in mov outsb rex.WB fs repz cltd mov int push and xchg rep (bad) pushq mov loopne (bad) mov sbb (bad) (bad) mov (bad) sbb outsb fs cmc out outsb fcmovb pushq xchg sub loopne xchg stos xchg nop mov stos cmp outsl xchg (bad) cmpsl pushq in xchg mov sbb mov rex.R jle addr32 mov scas rex.WRXB (bad) add and (bad) sub push pushq add rex.WRXB cs (bad) sbb orl xchg sti mov push pop rcrl ss je stos jle adcb cmp ja xchg pop pop movabs (bad) mov xchg mov (bad) test sbb mov jmpq adc test fldt repz (bad) (bad) imul sub movabs adc jne pop or mov fldenv iret and rclb xor sbb cld popfq sub sub loopne (bad) push (bad) adc jmpq mov es subl (bad) in iret sarl fucomi and or sub (bad) pushfq mov jo imul test add mov xor test fmul rex.WRXB xlat push mov andb shlb iret out rcll idivl bnd fbstp adc rex.RXB push jne jmpq mov pop mov cld mov rex.W hlt pop (bad) (bad) mov and push (bad) out (bad) adc cmp push faddl (bad) or jp ds or movabs rcrb xor (bad) jnp sahf pop xchg imull (bad) cmp mov xor movabs fidivr push pop leaveq xchg (bad) scas (bad) pop (bad) movabs js jb js ds cs repnz sbb jg rex.WR sbb js mov add fldt xor xchg cli rex mov mov out popfq repz (bad) (bad) sbb jl ja pushq xchg popfq movabs jg (bad) push jle cli or xchg (bad) (bad) ficoml icebp jae shlb or pop adc (bad) pushq (bad) mov rex.WR adc insb sbb ja pop jl imul rex.RB push movsl out jns sub add push cmp cld sub sbb (bad) (bad) mov rex.WR add rex.WB mov pushfq jg xchg (bad) cmp fdivrs cmp add std mov (bad) add xchg add rex.WRX retq int sbb add mov add (bad) mov mov rex.WB ja cmp nopl (bad) mov jae fcmovbe jmp sub rex.R and movsb imul scas stos rex rex.RXB (bad) (bad) adc add rex.X adc int cli movabs cmp loopne mov (bad) ss iret add (bad) (bad) imul ja jbe cmpsb rex.W mov mov add movabs in (bad) stos xchg or jl add insl cmpsl rex.WRX in adc rcrb outsb mov (bad) mov movabs cmp xlat push cwtl (bad) out pop movslq sub mov sbb mov jns movabs sub push or mov add (bad) xor mov popfq (bad) shrb or jge adc and (bad) and or jl push pushq pop jrcxz and xlat cmp jb hlt (bad) add (bad) movsl cmpsb mov (bad) xor sbb add pop ss stos out add rex.WX or loop (bad) idivb (bad) sbbl sbb movabs sbb movsl xlat (bad) fsubrp clc sub jrcxz (bad) push shrl mov add rex.R mov mov xchg xor and add (bad) pushq (bad) fdivrl stos rex.RXB rex.WX xchg jg pushq xor sbb xchg xchg in movabs add adc xchg rex.WX out fistl pop subl push pop mov sbb push cmp add (bad) xor in mov (bad) imul jl push jne outsl mov mov punpcklwd movsb cli rex.WRXB xchg jae and push xlat xchg movabs (bad) add adc cmpsb add mov movb fstl cmp sti cmp fs xor (bad) xor leaveq jge xchg jg or cmpsb rex repz add mulb and pushq out rex.XB cld jle (bad) sbb shlb hlt (bad) icebp imul push xchg xor rex ss fwait jmp xor add popfq rex.W jl fnstcw (bad) loope sub cwtl sti rex.W cmp jno add sahf or mov adc mov jp nop (bad) push xchg (bad) mov mov cmc (bad) add add fldt (bad) (bad) pop (bad) mov rex.WRB adcl je (bad) mov scas test (bad) mov xchg orb (bad) jmp fwait nop (bad) and mov lods mov rex xchg xchg insb and xchg fdivs pushq push orl fstl (bad) pop jg mov jl (bad) insl ror neg or lahf (bad) je (bad) or rex.WRB mov addr32 xor mov xchg jle scas jg gs (bad) fs rex.XB loopne rex.X jbe shrl pushq rorl xchg (bad) (bad) mov in xchg jne std fisubl sub mov mov ror in mov and rex.WRXB std rex.RX sub cltd std fcompp push pop int loop or retq (bad) jge frstor pop sbb repnz add (bad) lret lods and (bad) xor jle add jle outsl movsb mov insb outsb sub out add jno mov imul addr32 outsl jg repz mov add xor jb jg (bad) imul xor jl add fnstcw xchg mov (bad) scas add jg cmp jle ds cwtl out and mov ja push negb (bad) pop add add cmp (bad) sahf sbb xor shrl add and add (bad) sub add sbb mov add push fildl mov xchg (bad) mov mov or clc xor push pop add out (bad) rex.WRX push add in mov scas add mov (bad) jmp mov (bad) test int3 push test iret movslq (bad) std or mov movabs scas add cltd mov xchg jp (bad) pushq lret movabs mov (bad) jp add pop or (bad) rolb rex.WXB (bad) (bad) rex.XB lods fcoml loopne rex.WX mov test mov mov and (bad) xor shrl add and ds add rex.X decl out movd lock mov add addr32 ds add mov pushq in sbb (bad) rex.X es xlat (bad) jp out sbb jl add mov mov stos test cmp (bad) and scas add (bad) repnz jno sbb xchg xor adc clc pop pop outsl or ds or add adc and leaveq sub jle add (bad) rex.WXB sbb int movabs adc fisttp stc add int add (bad) mov push (bad) or rex.WRB scas pop jb xchg mov lock jbe movabs jne test jrcxz cs decl cmc pushq fnsave (bad) or divb rex.WRXB addr32 add (bad) pop movabs or gs xchg rex.W lret push icebp (bad) (bad) jmpq jrcxz std add cmp (bad) xchg pop jp (bad) pop jne add jae or movabs add mull jp repz jae xchg add lret retq jp int3 adc test pop rex.W pop movabs (bad) add rex.WRB stc cmpsb sahf mov pop add (bad) idivb cmpsl cmp (bad) jne or cld in xchg rcrb clc mov push and cmp add cwtl pop jb cmc cld callq mov (bad) push jp test mov or or cld pushq iret and jb xchg (bad) cmc rex.WRXB movabs in adc jg icebp push outsl std outsb (bad) repz add hlt sub add jg cmc add add enterq jbe and fisttpll (bad) ja (bad) add movabs jp and (bad) or xchg add xor (bad) (bad) xchg imul jne lret sti fimul xchg iret jb movsb add in sub rex.X (bad) movabs mov sub movabs (bad) leaveq and rex.W rex.RX xor mov rex.RXB cli fbstp jae retq es js jno push adc add in ds jne add fwait rex.XB jns xorl jae retq insl imul icebp fistl pushq (bad) jnp imul add rex.XB xor add negl pushq out mov jg xchg stos add and add mov in (bad) push mov (bad) jae xor out (bad) jg add cmpsb add cwtl loope xchg add enterq test lods xchg jnp scas (bad) shll sub jle jp mov out and xor xchg sub xchg cld test push xchg mov jmp lahf xor in pushq fiadd pop (bad) (bad) in out std jp rcll hlt rex.R rolb and cmp fdivr sahf lret add (bad) bswap (bad) divl fnstcw mov adc rex.X add xchg (bad) and cs and xchg xor mov xorl data16 (bad) add or scas jo lret sbb icebp jg movabs mov rex.RX rex.WXB sahf or add sbb loopne (bad) andps lldt mov mov mov in xlat incl icebp jg andl fistl (bad) movabs rex.X fnop jg (bad) loop cmp push push add es and jbe fildl push movabs sarl mov loopne (bad) movabs sahf fstpl test jle and xor and pop rex.B mov negl push add rex.WB add add lods sub (bad) enterq pop stos jmp ss insb sub cltd popfq lahf add movsl (bad) pop rex.WRXB cmovo fidivr xchg lret (bad) nop fiaddl fs jp pushq xor jnp stos mov vsubsd outsl mov jle (bad) rex.WRB rex.W add movslq outsb add test jbe rolb jle xor jle or repnz mov adc movsl jo adc jl in jbe loope cmp sbb enterq (bad) stos std push adc imul in pop rex.WB cli cld test repnz fisub out sti movabs clc int jmpq mov push in xor add pop or (bad) imul iret and jp stos cmp mov lret mov jle mov adc cltd mov (bad) fs cmp mov push jp jle mov jg popfq iret (bad) mov mov add xor cltq push out xor jl or jrcxz jg sub xor cmp std test jns (bad) fs adc movabs mov pop cmc rex.WRX rolb mov cmp xor rex.RX callq mov xor rex.WR pop add mov nop jp xchg clc rex.W fisubr cwtl add pop nop xor pop and add sub xor mov mov add mov pop add push xchg mov add sbb jl add outsl sbb or mov jg retq push (bad) and jmpq pushq icebp mov and (bad) callq repz sbb push cmpsb push je (bad) and addl xchg cwtl rex.X push cmpl mov icebp xchg jmp or or xchg lods fdivl pushfq jge jg loopne add addr32 (bad) adc mov std xorl scas mov lea fnstenv movabs sbb sarl cmp movabs (bad) cmovp (bad) add xor and xchg pop (bad) rex.WRB rex.RXB rex.W movsb (bad) divl xor hlt jle pop jge rex.RB ss sub lea (bad) push sbb mov adc fsubs (bad) ss in mov iret sub je push lock clc adc push sbb adc fwait sbb int3 mov xchg (bad) lods mov ds sbb iret or fcmovu loopne adc mov sub stos (bad) or (bad) jo insb repnz jnp jmpq add mov sbb mov pop repz pushfq sbb adc adc xchg movabs fwait rorb cmp pop (bad) (bad) xchg mov add (bad) mov pushq (bad) xchg xchg rex.W rex.WRB xor sub pop (bad) jns scas add add scas xor (bad) stc xchg or cltd cmp xor add and sub jg in int3 outsb out add mov test mov push (bad) rex.W and (bad) add add sahf (bad) shrb xor (bad) xlat outsb add rex.RX out mov jle fsubr jb (bad) lods lahf cmp sbb in pop or outsl sbb adc sbb rex.WXB add lods or add push cmp mov repnz jle add push push (bad) sbb push (bad) fs fs (bad) xor mov (bad) gs je and adc and mov rex.WXB add jbe xchg sub xlat add xchg sahf sub jle cmp outsl mov in (bad) fisub add rex.WX add push (bad) xchg movlps (bad) jg mov add xchg jns scas mov imul insb push leaveq (bad) xchg ds js lahf out push or test jmpq mov xor jrcxz mov movabs sti push mulb pushfq mov std (bad) pop std cld (bad) sub sub or out leaveq out scas xchg rex.X rex.RX add rex.WB pushq sbb rex.R sbb movslq sub divq push jmpq xchg fadds sub adc andl push out (bad) xchg imul xchg add cltd repz test add leaveq (bad) (bad) push rex.WXB data16 in fs stos outsb mov (bad) rcrb idivb (bad) loopne decl xor out add jno xchg cmp add movabs mov insl jnp cmp testl add mov (bad) push add shrl jl (bad) movsb fidivr xlat mov push add sbb lods sbb mov sub roll out rex.W mov rex.WB rex.RXB pop movsb jp xor lea adc mov add int jno (bad) mov adc js mov mov iret or jmp es (bad) fstpt mov mov js sbb (bad) jb (bad) lahf jp test jno (bad) out cmpsb mov add iret sub add push int3 mov adc movabs seto enterq stc xor jne push xchg cmp xchg sbb in add cmp jnp fistp fs mov (bad) jle lods add fs sti data16 mov or gs iret imul rex.RB cmp mov cld icebp rex.RB xchg pop cmp rorl out add leaveq jne rex.WB push jno push mov pushq and (bad) mov (bad) lret fucomi add jg push xlat mov pop fs mov and sbb rex.WRXB test xchg xor xchg lods xchg jl xor push or (bad) mov sub xchg (bad) insb xchg (bad) decl int3 (bad) out xchg and add xlat jnp sub sbb mov enterq add icebp mov jl mov add pop mov mov (bad) insl (bad) rex.WRXB adc (bad) sub rex.R mov (bad) scas mov (bad) adc cmp (bad) lcall and cmc rex.X add add (bad) sub popq jne repz (bad) fs movabs (bad) std in sbb cmp add jrcxz imul and pop sub shll mov rex.WB add xchg lods jmpq and je out sbb add push cmpsl cmp add pop mov jne leaveq std jle (bad) jo in cmpsb jns shrl andb retq (bad) popfq add lret cmp ss sbb adc sub mov or and pop add add lret pop rex.RXB fs mov enterq rex add loope xor icebp jmpq (bad) push decb jns mov test std adc pop rex.XB testb test rex.RB lret imul rex.RXB rcrl pushq (bad) lock xchg lods jle push cmp jo movabs add rex.WXB movabs xchg rex.WB rex.RX or mov pop mov in mov rex.R gs sbb rex.WR clc xchg cmp pop notb cs movslq (bad) clc icebp rex imul cmpsl push rex.WRX mov (bad) (bad) in movslq out push mov fidivr pop loope retq rex.R xchg test mov jp (bad) int (bad) xchg pushfq rex.RX (bad) sub cmpl std fdivrs clc cmpsl cld (bad) mov cmpsb repnz je sbb es mov add jle (bad) cmp or jg pushq add mov xchg scas cld and add rex.X mov pop sahf rex.WRX xor jg sarb jle xor jb xor push sub (bad) je (bad) rex.X (bad) or add (bad) jg pop popfq enterq repz sbb mov jbe cld (bad) xchg rex.X rex lret add jbe rex.RX retq test pop jge pop es jp adc rex.WRXB add sbb jg adc loopne movabs cmp cmpl mov (bad) sarl leaveq add rex.WRB sti rex (bad) jbe repz jb movsb lea lcall ss add mov test mov lahf mov or sbb enterq rex.WRXB jrcxz,pt fst fimul scas sub push jne movsb (bad) pushfq (bad) and pushq push lods (bad) xchg test sar iret ss (bad) mov loopne movabs xor movswl mov loope cmp rex.W jae add rorl cmp popq add iret sbb and sub stos outsb loopne lods add mov xor jle jnp test vandnps cmp std jmpq out mul (bad) movabs fcomi cwtl rex.RX (bad) sbb jge push hlt push adc mov push (bad) lods (bad) and cmp (bad) hlt add cmp cltd loopne (bad) in mov xor fdiv xchg pushq push add pop or and rex.WRXB (bad) popfq mov xchg mov fisttpll cli add movb fldt xor xor pushq and rex.B (bad) jge scas mov rex.WRXB lods jne xchg and pushq push pushq hlt nop scas mov ja insb fidivl nop js (bad) cli and pop iret fwait lods and jp rex.WB lcall mov lock insl push xchg mov (bad) xor pushfq push (bad) std rex.WRB mov nop shl rex push xchg mov scas push sbb (bad) rex.WRB jle xchg mov insb je mov (bad) mov callq (bad) insb scas rex.R out gs jrcxz or add mov imul sub push callq and mov in mov sahf add (bad) sti mov mov jle mov and sub cltd mov (bad) push insl add (bad) or jl or jge movslq test (bad) (bad) and leaveq lods lret and in xor lods adc xor (bad) and and cmpsl mov ss jns retq es (bad) out cwtl lahf pushq pop (bad) (bad) mov and mov mov jg lcall pop cli fs sahf xorl jae test pop (bad) (bad) out pop add lods lods jrcxz addr32 sbb add add lfs xchg rex.WB or (bad) (bad) or fidivr pushq loope (bad) int3 (bad) insb test push test test (bad) outsb nop fcoml (bad) pushq fstps imul movabs (bad) mov or rex.WRX (bad) fildll rex.WR js (bad) mov cs sub (bad) rex.WRX fidivr rex.RXB adc jp sbbb test and rex.WXB rex.W jo out repnz push xchg mov add mov jae popfq sbb (bad) add push jnp pushq jg xchg jnp cltd jge out rcrb fwait mov cmp popfq (bad) add lock lea movabs (bad) or pop lahf add cmp fmuls (bad) fs sbb addr32 (bad) (bad) mov leaveq rex.WRXB fdivrs or mov cs scas add cld mov addr32 out jmp jg mov mov xor movslq (bad) rex.WB (bad) cli cltd popq imulb pmaddwd add add cmp mov sbb pushq add test add (bad) jne lahf sub xchg std pushfq xor sahf mov (bad) or rex.WRX sbb add std enterq es and (bad) repnz xchg add cmp leaveq jbe push sub clc icebp and in (bad) and lock jp popfq (bad) xor sub and je xorb movsb mov pushq or (bad) (bad) jle ds rex rex.W rex.WRB xchg add (bad) xchg mov mov pushq std (bad) add sbb add (bad) mov rorb or movsl (bad) fs out movabs jp xor cmp rex.X sbb fidivr mov rex.WX mov add jp (bad) nop adc mov (bad) enterq fs (bad) sbb (bad) pop stos xchg rex.WRX rex.RX and xor cs faddl sbb js add jb xchg jne mov (bad) (bad) jle rex.WR leaveq int push and outsb cmpl stos hlt imul xorl out pop loope mov pop mov pop (bad) jns and rex.WRX add (bad) imul sbb scas or pop or lock std rex.B movsb rex.WRXB lret rex.WXB jns xchg outsb adc cmp (bad) add stc negl enterq pop xchg jle ja mov pushq add cmp (bad) fs and test add pushq (bad) (bad) jl adc mov rex.WRB movsb callq cli push andl xor fstps rex.WRXB fwait xor hlt test add add sbb out rex.WR movsl (bad) mov xor scas rex.WRB mov jmpq (bad) cmp or pop gs cli add mov mov outsl sarl pushq and jnp movslq cmp jg sbb jmpq test jle xchg movsl lret (bad) mov rex.RX movabs (bad) xor cli (bad) (bad) outsl jns callq mov (bad) add or jle rclb mov sahf add jb xorl jo nop rex.RXB cltd sarb pushq push sbbb xor (bad) push jmp add test cmp xchg add outsb rex.WRX pushq add push or add pop fisttpl roll xchg enterq insl or (bad) xor rex.W pop (bad) in xchg add and xor sub data16 xor pop addr32 rex.WB gs mov sub (bad) lock or pop rex.RB (bad) jge rorl jle je push data16 jl adc loope (bad) or xchg mov outsb (bad) sub xchg add imul add jb pushq rex.X fwait cmp add add insl mov xor icebp stos clc rex.RXB rex.R movabs fidivrl callw and cmp in lret cmpsb jg movabs sbb add sub mov or jg int3 (bad) mov pushq insl and incb movabs cmp add rex.R rex.WX cs xchg jle xor rex test insb icebp and jg sahf (bad) rcr sbb adc movabs fisubr fcompl jle jmp in stc mov add (bad) push fsubrs mov callq mov (bad) loope adc xor rex sub mov (bad) pop and cmp repz jno rcll xchg fidivl fdivs add popfq loopne and add (bad) (bad) (bad) push jmp sahf jle xor mov push fs jbe loop (bad) mov decl xor cmp jbe lods scas mov pop mov fsubl rcr pop mov push (bad) push sbb (bad) fsubrs cmp mov rex.WRXB stos add sub stos mov add (bad) (bad) add mov cmp rex.X push fidivr or add mov (bad) fstl scas roll (bad) (bad) or xor rex shlb in fiadd add in jle pop push nop jbe adc rex.B rex.RX xlat mov (bad) (bad) add xor sbb pop adc or xchg (bad) mov callq add or rex.R (bad) pop rex in pushq (bad) (bad) xchg rex.R xor add rex.XB xor (bad) femms sub int mov mov xchg (bad) xlat push rex.WRX sbb sub add sahf and jp nop xchg lret rex rex.WR fistpll stc and mov cmp int je xor and out (bad) and mov (bad) xchg jle mov (bad) js xchg sub fs adcl jle jns test pop add rex.WRB adc cmc in (bad) popfq adc (bad) add mov (bad) js sub add hlt fldt (bad) cmpsl add lods iret add and and xchg leaveq add test fs repnz stos outsb mov or add push xchg add (bad) rex.XB xchg lahf iret mov add repz add mov push shll add rex.RX pushq (bad) jle add rex.R mov pushq loop mov sti xorl imul (bad) cmp pushfq cli mov repz int sub shrb adc out std ja rex.RXB (bad) addr32 clc pop mov js jg imul (bad) (bad) jae and test lods lahf (bad) sub or pushq add (bad) test fcomps je int movsb pop gs pushfq jg (bad) insl rex.W rex.WB lret stc jle scas hlt and (bad) sbb (bad) jle jg vunpcklps add cmp popfq add test es or cmp push (bad) rcll mov or (bad) in add jbe sub movabs mov sub fistpl movsb sub jle sarb xorl jle push and pushq xchg xchg (bad) rorb insl lea incb (bad) lods (bad) (bad) cmc jg in adc add retq pushfq rex.RX jmpw push repnz cmp jmp out outsb mov pop imul int movabs or (bad) jno mov cmp ss add iret or xchg stos cmc xor sti fwait (bad) rolb jg mov and test jbe add xchg and (bad) (bad) jo sbb cmp callq pop add movsl (bad) cmp cmpsl imul cmp mov test jne hlt (bad) outsb rex jbe or (bad) nop rol lods cmpsb movabs jbe pop rclb js (bad) jl nop (bad) (bad) pushq mov push pushq rcr roll test insb lods jrcxz (bad) lods mov cmp mov (bad) repnz pushq or cmp iret test lods and (bad) sahf shrb push mov sahf movabs jns lret (bad) movabs in jmp or or xchg (bad) scas es jne,pt mov sub or jne sbb movabs cmp jb cmp xor add lahf mov (bad) push xchg stos xorl (bad) xchg jl pushq test rex.WR repz rex.WRB lods jne lahf (bad) (bad) jo pop jg rex.RXB adc fisttp rex.XB je xchg jrcxz (bad) rex.W notb add mov cmc cmp fildl cmp scas cmp sub cmp loope mov js sub mov cmc mov add jne jns rex.XB mov add (bad) add jnp push mov rex cmpsl clc add rex.WX adc rex.RX rex.WB (bad) adc or (bad) (bad) popfq (bad) xchg add stos pop out idivl (bad) rolb loop rex.WRXB rex.WRB and cmp xchg jle adc mov (bad) sahf and out xchg sbb xor lods repz pop jns add mov cmc rex.XB xchg (bad) sub (bad) cld test repnz cli movsl divb jmp icebp xchg and adc rex.WRXB add and pop mov mov add mov int3 jp fsubrs lock out rex.WX stos mov push xor pop in or mov (bad) xchg pushq lods leaveq jae pop (bad) (bad) (bad) pushfq out add lret sbb (bad) mov mov sbb nop add xchg jrcxz (bad) sahf mov (bad) outsl mov jg rex.WB jg (bad) jg and in (bad) lock js sub rex.WR rex.WXB pop jmpq fisttpl sub shr cmp add or jbe xchg mov movslq (bad) jnp pop or (bad) and (bad) sub (bad) jge add cmpsb (bad) imul xchg (bad) jg or mov jg (bad) (bad) rex.RB lock (bad) or ja mov add pushq (bad) xor xchg add xlat flds push and (bad) add ja rex.WB fst jne rex.RB out (bad) (bad) jge outsb (bad) sub decb add cwtl rorb (bad) (bad) mov int xor movabs hlt add xchg and jns rex.W stc adc mov pop jg in push (bad) add cmp rex.WX fisubr movabs mov sub add or in (bad) rex.WXB icebp cld add int loop out jp test sub and add xor int add hlt (bad) loop es repnz add movsb jg test rex.WXB cmpsb movabs xchg popfq and push xor (bad) pushq mov mov push in pop mov popfq rex.WX xchg add rorl and xlat fisttpll sbb iret lret out add add xorl (bad) outsl js jb xor cmp sarl add lahf push or mov iret out xor sub in decl int3 cmp andb add out pushq add rex.W rex.WX xor test add lods add shrb xor out ss cs rex.RX retq stos enterq add push pop mov addr32 mov roll xchg adc clc sub callq cmp xchg push (bad) sbb out and jne add push mov movabs (bad) stc (bad) jl lea cmp (bad) xchg imul mov xchg (bad) push fcmove mov fildl in (bad) (bad) sti fcmovbe testl lock mov movabs cmp and jl test or jg add add cmpsl (bad) xchg pushq sub cmp (bad) sbb push out in fldl nop (bad) in add pushq xor outsl mov jo in jno jg loope xchg cmp fwait rex add and (bad) mov fisttpll decl rex.RB rex frstor mov lea xchg push add sbb outsl out lods jbe add sub xchg push jrcxz adc callq pop pop lock repnz add mov movsl (bad) mov add (bad) cli mov imul fsubrl adc xchg (bad) cli out hlt push icebp rex.WRB adc add (bad) cs add jae mov jmpq cmp sbb jg mov jle sbb (bad) (bad) in or sub scas mov movslq mov (bad) xchg (bad) add negb cmp fisubr xchg (bad) (bad) icebp (bad) flds cli cmp (bad) fs add scas addr32 movabs xchg adc jo adc roll add movsb in add sub mov add xchg fistl leaveq test fnop mov rex.WRB lret xchg jle movsl ror (bad) pushq mov (bad) (bad) or lods jg adc and cmp and (bad) pop mov icebp sbb movsb mov jbe pushq (bad) jbe push cmp (bad) js and insl and pop (bad) cmovns stos sahf lods push pushq in cmp rex.XB (bad) js rex.WX repnz fsubrl out xor popfq mov (bad) pop jb stos ficompl lahf outsb and pop xor cs xchg cld push add rex adc or adc in jl ds push scas repnz add cli mov loopne mov out leaveq adc lcall sub cld (bad) (bad) cwtl rex.B nop sbb jo jrcxz jp rolb or (bad) idiv (bad) sahf imul jne push (bad) cmc sbb xchg test sub xchg adc fwait in mov rex mov fld mov orl outsb xchg mov mov jrcxz imul xchg xlat xchg and pushfq push rex.WRXB jle ficom xchg mov out adc (bad) xor mov and adc mov add mov out (bad) pop iret adc pop xchg jrcxz sub (bad) (bad) (bad) movabs mov cmp or (bad) fxch ja pop (bad) sub sbb mov cmpsb add sbb loope mov lods js pop rex.WRB retq js out (bad) xchg mov adc cmp (bad) jge cmp xor (bad) push (bad) pushq outsb (bad) js movabs test pushq lods pop loopne push rex jb fmul cmpsl jo add cmp rex.WRB cmp rex.X mov pushq repz jne cmpsb xor add sub add xor mov mov (bad) rex.X xor fist jo scas jmpq (bad) jno (bad) (bad) jns movabs sahf stos add and (bad) fisttpll int add cmpsb pop popfq xor jge test rcll rex.RX ficompl sbb and adc xchg or jp sbbl movsl jmpq loopne pushq mov cmpsb jno rex.R rex.WXB (bad) mov push add add movabs retq adc enterq in add push (bad) (bad) (bad) fdivs add sti cmp mov mov out add cmp (bad) sti fwait movabs repnz fs sub add jrcxz (bad) cmp add lods jno add retq pop cmpsb sbb xchg shld add mov fidivr xchg and movabs movabs xlat outsl cs and adc mov add iret mov mov xchg fdivl popfq xlat add punpckhbw es sub (bad) out push adc sub mov mov sbb cmpsb jb popfq sub rcrb add rex.WRB add rcr sub and mov insl (bad) roll (bad) outsb or addr32 insl jl in add rcll mov out adc cwtl mov xor movsl add enterq pop nop xor test (bad) (bad) jbe rex.RB xor outsb shr (bad) imul int3 jle (bad) pop mov std nop (bad) mov xchg xor add (bad) pushq (bad) push fs pushq mov jle rex.W and (bad) jp sbbl sbb add in sub or push add mov cwtl lret sbb (bad) (bad) lret andl add repz and xlat add movsl rex.X rex.X jle rex.R rex.WRXB lods (bad) push add (bad) xor add in orb mov xor out add add jae pop stc add jns repnz movsl or add (bad) jmp jle sbb add (bad) mov add adc or push mov mov sbb xchg loopne pop add sbb add adc xchg xchg xchg rex.W jnp movabs (bad) xchg push add cwtl cmp push es rolb and mov mov mov (bad) jl lea sbb add sbb cmp lcall pop ficompl jp loopne push sub add test fcmovnb add (bad) add rex.WRXB or add xor mov and rorb rcr insb or movlps js,pt cmpsl sub ja add add iret test rex.WB mov add out rcrl stc rex.WX add cmp (bad) mov in cmp test adc movabs rex.WXB jb mov scas (bad) add push add (bad) fstl cmp stos ds push clc rex.W lock mov fcompl add push rex.WXB rex.XB ss add pop icebp mov movabs int insb or lahf (bad) jle mov (bad) xlat and rorb add sub jne jg adc xor xor pushq or cmp icebp test je (bad) test xchg rex fnstcw xchg cmp (bad) and ss rex.RXB add out jb jb (bad) pop orl jle loop (bad) jo and gs add xor push mov rolb movabs xor fidivr leaveq cli js add jle test cmp shrl sbb lea mov add rex.XB rclb cmp stos iret jg mov xchg (bad) pop cmpsb outsb sub loop jg jl rex.WB xor (bad) add rcrl jns (bad) jmp (bad) adc imul xor xor bswap add mov fcmove cmp (bad) pop (bad) mov add gs iret int stos add (bad) scas (bad) stos pushfq add mov (bad) (bad) stc mov xor mov jg adc (bad) adc xor (bad) and icebp mov movabs (bad) divl add push int3 stos imul sbb (bad) je (bad) adc sbb lods pop movabs lea cmp retq add loop rex.WB addr32 jrcxz movsb (bad) cmc or jle mov jg stos mov add sub mov addr32 or test sub add loope sahf xor rolb out mov lods mov pop lea (bad) pop fnstsw insl rex.W mov jb pop lahf stos add pop (bad) add jns mov (bad) mov pop rex.W data16 cmpsl out rex.WXB xchg rex.WR cli jp xchg jp movabs gs pop int3 lahf push rolb repnz fisubl cld xor movabs push lods cmp and pushq adc mov test stc cmpsb adc in cmp adc push leaveq (bad) jno (bad) (bad) cmpps (bad) mov pop loop jb out retq cwtl (bad) and rex.W (bad) mov or cltd cs (bad) fs cmpsb mov sub movabs rorl movabs xchg (bad) jg cltd adc jp in mov nop (bad) jg rex.WRX and mov xchg adc rex.WB stos jb mov rex.W (bad) (bad) jp sub pop xchg xor sbb movsb add (bad) xlat (bad) repnz jb fmuls insb jae adc mov mov adc test jb lods mov push jnp addr32 jne xchg and jg mov mov nop jns (bad) jp sahf fistpll add (bad) mov add add pop (bad) (bad) (bad) sbb mov outsb lret mov sbb push xchg movsb (bad) adc mov (bad) push rex.X add add xor xchg jle push adc scas mov add or xchg sub (bad) loop jbe movl repnz rex.RXB sbb out or outsl lahf mov add mov add xchg lret sub (bad) mov (bad) mov mov xchg rex.XB js test add sub lret test (bad) mov lret stos cmpsb mov sub xlat cmpsb leaveq mov in mov xchg lret xchg stos lods rex.B test notl imul rex.WRX lss push fcomps addb insl faddp test sahf fcoml (bad) nop ficompl rex.WX xchg (bad) add adc jns jp cld (bad) retq lods sbb pop push insl xchg stos data16 test movsb movabs (bad) rex.X lods rex.RXB jg outsb sti fiaddl mov rorb (bad) iret xlat xor je pop retq sahf mov mov lret mov (bad) in pop lahf lahf jmpq (bad) rex.WX sub sbb in (bad) movabs test push mov add pop adc add cs add mov rex.WRB mov add adc cmp xor mov pop std adc jae xor (bad) sub callq cmp (bad) lret add and rol sub pop push push adc add movsb imul or (bad) rex.WX pop add jne adc mov pop fwait xlat adc sahf (bad) pop loope addr32 movabs add rex.RB cmp (bad) and cltd mov (bad) fnstcw (bad) (bad) loope cwtl sbb rex.X sbb cmpsl add cmp jg sbb pop mov mov (bad) (bad) jb int and mov adc xchg rolb mov out (bad) xlat cwtl add clc lea add fs repnz incb or int3 cld mov cwtl and xchg fdivrl (bad) shrl or int out rex.X cmp lea mov (bad) xor mov xchg sub adc cmc mov add sbb repnz xor jbe retq add (bad) lret cwtl jae cmp movabs push out in sbb icebp mov add rex.WR mov add fnstcw mov rcll cmpsb add leaveq sub push adc add sbb add (bad) out addl repz rex.WX rex.RX jrcxz adc (bad) imul mov cmp cmpsb insb push adc rex.X jg rex movabs rolb mov xlat loope add lods repnz sahf jrcxz hlt (bad) xchg add outsl clc mov and movabs (bad) xor jb mov rex pushq loop adc rex.RX adc cmc (bad) (bad) (bad) push mov add je outsl scas push push imul add in cld jl xchg (bad) (bad) xchg jns movabs jo rex.WRXB jl int3 add cmp xchg sub imul add or (bad) in sbb add push in mov jae push addl jg (bad) jmp pushq pop add rex.RXB rex.RX jnp test imul jge stc (bad) (bad) (bad) sbb lods xchg lods jle out or (bad) xor cs icebp jp pop and (bad) mov sahf rex.WXB push or mov xchg add jle rex.XB mov and jae retq add test jne sti testb xor in (bad) adc jle pop sub cmpsb rex.W mov adc (bad) ja mov ud2 (bad) loopne je repnz out or (bad) mov xchg lods xchg in out push add out and test divb hlt fsubrs mov (bad) (bad) je faddp rex.W setl add lahf xor mov movabs test and rex.WRX adc rex.WR push mov sbbl fnstenv pop pop jge fistl jbe sbb adc leaveq push std sbb push jrcxz (bad) in xlat (bad) xchg jg test fist scas sti fwait xchg add lahf fnstcw rex.X add cltd fistpl adc (bad) add pop loopne rex.XB mov adc fsubrs adc mov mov jbe je fwait out cmp xchg pop sti jg push mov sbb cwtl add xchg fistp add int3 or hlt test cmp add movabs and mov (bad) adc sbbl and cmp rex.XB imul sbb add pop adcl and (bad) push (bad) adc add xchg mov push test adc xchg add test add (bad) ss loope scas rex.WRXB pop or lods nop mov jl xorq (bad) std pushq sub or ss (bad) mov mov loopne or add add jo pushq push jnp jbe add (bad) test add movsl pop cmc cwtl fucomip (bad) jle pop cli movabs fs mov rex.RB sub rex.WX int lcall jns not xchg rex.RX mov mov (bad) sub mov push (bad) and jb (bad) xor in pop gs (bad) ror fsubrp mov (bad) jle mov mov mov adc outsb fwait testb shrl rex.RXB rex.WXB add mov jnp rex rex.WX (bad) rex.WRXB sbb sub nop xchg sbb lods pop xor rex.R sti jnp or sub cmp or rex.RXB movslq push mov add imul rep mov pushfq jno adc mov push mov push rol fs lods mov (bad) jmpq test andb mov popfq rex.RX add icebp rex.X test (bad) stc (bad) roll pushfq xor (bad) push add in cmpl rex.RX rex.WXB add lret mov cmpsb clc add jrcxz movabs xchg push rep mov push xchg jg std loop (bad) mov add iret or rex.R repz rex.WX ja xchg or (bad) movabs push lahf jge add add imul add add pop out mov (bad) fild cwtl repnz movabs push fwait loope rex.XB hlt movslq rex.WRXB rex.WX in mov add push adc (bad) pop xchg add or ja rex.WXB add (bad) mov add jno sahf jo imul xor jnp mov add rex cmp cmp xchg jg (bad) jne (bad) (bad) iret (bad) (bad) jnp pushfq mov rex.W pop std push add lret hlt insl jno xchg xchg js cmpsb jge (bad) retq push movslq sbb add xlat imul jno adc mov xchg or (bad) jns in sub cmp fwait jmp mov add (bad) push std fbstp es adc cmp cmp adc sahf imul (bad) mov pop in mov rex.WX (bad) push add or add rex.WRXB and (bad) cmp fdivrl (bad) insb or add sbbl (bad) (bad) stos (bad) loop mov (bad) lret xchg add (bad) icebp mov rex.R mov xor sahf fdivs add push mov rex setg stos mov (bad) (bad) add sub add and add fiaddl fmulp stos jp movabs incb scas iret (bad) out imul movabs xchg sub xchg outsb adc mov imul jle (bad) (bad) rex.WB cwtl iret inc add jb add cmpsb rex.X mov mov or xor jge (bad) lret subl adc in and jg sub hlt xchg pop xchg pop xlat (bad) (bad) add (bad) callq int and movabs in add xlat (bad) mov (bad) add lods jg add adc (bad) jb repnz rex.WR push flds pop fistp mov (bad) js rex.RX add setle add scas or (bad) rex.W rex.WRB jp out rex.WRXB or cmp out fs rex.WXB (bad) movabs rorb xchg mov or sahf ja imul ds (bad) jmp xchg pop js pushq add sbb (bad) (bad) jge jmpq in imul insb imull add rex.X cmpsl xchg cmp jge xchg or ficomp out add leaveq vsubsd rex shll clflush loope iret sbb (bad) sub (bad) movslq or mov jle and outsb sub addr32 jo pop mov movabs cmp sub jnp idivb add (bad) lods add test pop add lahf andb sbb jle push fcoml rex mov push out mov cmc add shll es add xchg cmpsl and insb (bad) mov cmp pop mov add (bad) rex.W add or gs jb (bad) adc sbb js add ficompl jbe pop and xchg add rex.W je,pn rex.R push sbb add push (bad) sbb repnz pop xor (bad) cmpsl pop lret xchg (bad) fs mov ds mov jns gs (bad) test add push add callq test lret push xor fdivr push (bad) add (bad) cltd add in roll push cmp sbbl out xchg add or adc mov out fwait xor mov rex.WXB scas stc (bad) jae cmpsl jg or push add xor lret (bad) add callq cmp mov xchg (bad) jle rex.XB pushq mov (bad) repnz js cmpsb mov push shlb sub (bad) stc add jno mov mov mov add cmp or add (bad) sbb icebp cmpsb je adc test enterq (bad) fnstsw movsb cmp add in xor out movabs mov jb ss shlb sbb iret cmp jle rex.R xor fmull (bad) sub fnstenv cmpsb mov retq add cmp add sub test (bad) and xor (bad) cltd add vmovntps push (bad) mov rcrl cli and in lahf sti movabs mov insb (bad) idivl rex.WB mov fistp stos imul xchg fisubl cmp std xchg (bad) rex.X jbe add push (bad) (bad) rex.W jns (bad) sbb cli (bad) iret jle test jge nop js and xchg iret add pushq (bad) mov sbb cli and (bad) mov rex.WR adc jp sub mov nop lods iret add retq mov imul jg mov and sub in xchg mov jle nop rcr (bad) movabs rex.W rex.X icebp add jb cs jge rex.WRX std popfq decb test push cmpsl mov rcrb add pop mov js mov out movntq in xor test add stos int3 sub sbb and (bad) and add (bad) jnp fidivr (bad) ss add enterq sbb (bad) mov retq and sub xchg mov scas movabs lods jl mov jrcxz (bad) outsb (bad) xor (bad) addr32 rex.X (bad) test xchg mov mov push jp rex.R fs pushq (bad) (bad) mov and decl rex.RB pop fmulp (bad) stos cs movsb rex.RX cmpsb test (bad) push es insl insl xchg js adc es test mov sub icebp jbe movslq cwtl jp out in movabs cmc (bad) push jb add cmc push add ss (bad) cli loopne rclb pushq mov jmp add rex.B (bad) mov cs pop lret not add jno movabs rex.WX push mov rex.WRB mov jb sbb insb or int3 mov xchg addr32 rcrl rex.RX pushq rex.WRXB rex.WX stos add or insl fcoml jmp (bad) (bad) xor (bad) pushq sub mov shr cld cld cmp mov xor or mov mov (bad) lahf rex.WRXB adc fucomip out or pushq mov add xor (bad) pop loopne repz in movabs ja cmp scas imul adc xor retq xor jne loop scas cmc (bad) vorps jo jle xor mov out mov mov push xchg add cmp mov mov jne mov stos push mov xlat out xor jb xlat outsb divl sub mov xor add lea in jae push add (bad) cmc push mov (bad) sbb push test (bad) rex.WRX sbb mov add mov mov fildl clc movabs fild mov rex add test (bad) jle jmp (bad) jnp in rex.WXB (bad) (bad) je or and and test xchg cltd xchg add fadd cmc fnop cltd jb adcb (bad) pop movsb (bad) (bad) (bad) pop lahf add movabs add pop enterq nop movslq roll (bad) jl xor cmp (bad) xchg add clc cli mov leaveq sub insb fcomps (bad) sbb xchg (bad) out cmpb adc and pop jmpq mov out push imul add movabs cli pushq test mov add xlat rex.R popfq (bad) jg or adc and movslq mov xchg scas fldenv movsb pop test js (bad) pop add lahf (bad) out int add (bad) xchg (bad) pop mov cli xchg shl rex.WB sbb xchg (bad) mov stc pushq sub outsl (bad) stos fs (bad) jno xchg rex cli cmpb pop out (bad) add mul sbb mov add pop adc out (bad) xchg loopne (bad) jle mov cs rex.WRX repz (bad) out xchg xchg clc fidivr je fcompl pop sahf jg jb cmc mov xor pop jp (bad) int3 in cmp jl (bad) cwtl jno fwait xchg add movsl loope fild rolb imul jrcxz adc and lahf sti add rex.RX push mov pop stc (bad) mov fs mov jmpq jae add jmp mov sub retq pushfq fsubp xor rex.RX fadd cmpsl add add rex.RXB add push pushq mov mov movsb mov iret or vpsubsw sar rcll add rex.WX (bad) in xlat (bad) pcmpeqw testl (bad) je rex.WB adc lahf (bad) mov mov (bad) rex.WX jle cltd cli push lods jae in lcall xor sbb rex.R rex.R (bad) imul pop add cmp data16 and fcomps add jrcxz sbb mov xchg sbb out mov (bad) sub fsub stos add (bad) mov lods xchg in jb jg jle xor add or loop sub jb fnop xchg sarl add jbe mov (bad) or mov xor shrb push mul je mov add pop cwtl mov jb pop mov and (bad) (bad) mov fist add mull int mov ficompl movsl movabs xchg mov add in outsb mov sub xchg (bad) callq out lea or add shr movabs out movabs mov fnstsw mov mov fs mov callq xchg adc (bad) cs test rex.WRB pop jle (bad) mov jg adc roll decb jp xor jg shlb add mov cmp add jmp sbb mov mov (bad) clc mov in add jnp rex.RXB sbb add fsubrl jg xchg lahf orl add loope in leaveq add (bad) cmp push imul (bad) (bad) test (bad) jg and pushq int3 (bad) (bad) movslq add cmp (bad) cmc add leaveq mov cmp sbb rex.X add or pop pop lock add shrb xchg sbb lods rex.XB insb and cmpsl (bad) out sub jge mov and rex.XB or or neg add test retq xchg rex.WR loopne sub std sbb add jne (bad) (bad) cmp fwait (bad) push cmpsl rex.RXB push add mov shrb xlat lret cmpsb rex.X xor outsb pop and add fildll lret out (bad) mov rex mov rex.WRB roll add push sbb and pop sahf imul lods movabs mov xchg fldenv rex.X add fdivl addr32 stos jmpq fwait pushfq (bad) pop shll mov jne jb sub leaveq or adc jbe add ja scas js pop sub push fsubrs cmp adc or nop or or xchg lods frstor jo rcrb (bad) icebp mov (bad) sub add adc loope add rex.B pop mov fnstsw scas test jbe mov rorl xchg in sbb jbe cltq pushq jge add add mov push out addl (bad) js lret or jg mov or fwait lea sbb stc cmpsb outsb add cmpsl cmp and (bad) cwtl jge int (bad) (bad) jg movabs sub add rcll (bad) push mov sbb xor cmpsb rex.WRB ds lret add adc cmp (bad) sbb jg cmp lock push test (bad) mov rex.WX (bad) fidiv xor (bad) rex.W rcrb add adc sub rex.WRB push icebp xchg jp hlt (bad) cmp shrb cmp rex.RX out mov adc cmpsb movabs (bad) and nop and mov and xor pop and (bad) mov rex.RX fnstsw lahf mov mov add and mov rcrl add add jl xchg rex or rex.R pop (bad) insb xor lahf mov (bad) adc cli (bad) (bad) add add cmpsb jle (bad) and (bad) push jle jl movsb movslq mov sub rex.WXB xchg imul or out xorl mov lods in add lock mov movslq js mov cmp cltd idivb outsb jp pop jmpq (bad) and adc test xor (bad) xor rex.WRB sbb icebp rex.WR fs (bad) in xor sti cmc jo rorl push (bad) decl sbb rcll jae mov jo retq (bad) cmp jg rcl outsb and (bad) (bad) sub int jg xchg mov add add insb cmpsb add cmp rorl xor es pop movabs xchg mov add mov xor sbb icebp (bad) (bad) (bad) and cmpsb jle rex.WRB pushfq mov (bad) sub (bad) jrcxz (bad) add jbe jnp pop rex.W ja xlat sti (bad) (bad) (bad) pushfq push rex.X mov add gs adc add out (bad) cmp repnz icebp xchg shlb xchg jbe rcrl sub orl (bad) sbb and (bad) xor movabs pop add (bad) adc (bad) xchg sarb lahf icebp sbb lret (bad) (bad) push fbstp data16 sti push xor xor movb leaveq jp mov mov jo sahf rex.B jge lock ss mov sbb imulb rex.WRB lods retq push popfq pop fs fs mov sub add (bad) or jle movups rex (bad) (bad) add push movabs mov mov jg test (bad) add (bad) mov imul adc add cs or (bad) pop callq je loopne push jrcxz and or (bad) rex.RB (bad) std xor rex.RXB out in sbb add jp movabs sbb mov push add mov xor mov mov in cmp sbb pushq lods sub cmpsl popfq mov jp and mov rex.X mov out sub (bad) in rex.X movabs movabs hlt movabs (bad) cmc rex.WRB (bad) pop in sahf adc retq push in jae (bad) movabs mov jmp fwait scas push incl insl jle ds adc add push int3 pop stc cmpsb loop xchg jge rex.XB rex.W sub xor push mov cmp (bad) out xor shrb xchg cltd mov test add adc movslq sahf clc (bad) (bad) idivb add mov mov pop mov add pop xlat lock jl mov cmp (bad) mov (bad) jb rex.RX or xchg (bad) add lahf insl (bad) mov xchg roll cmp xor sub xor (bad) lods pushq and rex stos cmp or cmp stc rex.X cli jle pop or (bad) int3 jmpq add rex.XB in sbb pushfq (bad) test push cmpsb lods add cmp add outsb mov (bad) cmp test rex.X jl xchg adc (bad) jp xchg in xchg (bad) cmp sti je jnp pop pop mov (bad) push or mov push sbb add mov popfq (bad) rex add cmpl rex.WB sub (bad) (bad) xor imul (bad) add rex.WR mov push (bad) (bad) xor insb sbb (bad) mov jle retq movabs repz xchg iret rex.WXB in adc add xor mov cmp sub cmp (bad) jp cmpsb and stos xor (bad) sub stos (bad) (bad) callq nop jle sti cwtl hlt mov movabs and mov add pop int add push mov cmpsl out lret (bad) push (bad) cmp add scas add js retq (bad) rex.R add mov cmp lahf xchg sbb decb or add (bad) (bad) fucomp (bad) and (bad) test jp test ss subl pop and mov imul imul (bad) sbb es and mov mov sarb lea jb (bad) xchg mov jl fdivrs fisttpll xchg sarl imul movslq cmp pop sbbl fs jl push add cmpsl push jp rex.RXB stc sub popfq add or (bad) add add test ja xchg rex.W fs cmc sub jp and (bad) pushfq callq jrcxz jle jne in cmp or stos rex.WRX xchg cmp rex.RXB xor lods and xlat jrcxz xor out push repz xchg push pushq cmc add lret jmpq loope std addr32 mov jno rex.WX fdivr xor add (bad) shr jb ficom (bad) mov hlt cmp enterq ss and rex.RB adc out add mov add jns ja xchg add imul outsb pop cmp iret (bad) int3 (bad) jp or (bad) mov pushq xor add add retq xchg mov (bad) rex.X cmp adc ja nop jb in fbstp hlt callq jrcxz sub xlat iret sbbl mov (bad) add test xchg rex.RX or add (bad) fisttpll data16 xchg lods (bad) mov nop (bad) fdivrp mov sbb cli push xchg lods pop or and movsb jae jns rex.WRXB sbbl movabs add jns add in push rex.RX sti and mov xor pop movslq rex.X rex.B add cwtl add cmpsb xlat (bad) out lret (bad) jp cmp fsubl sbb (bad) and fwait fwait mov cld outsl stos sbb lea xlat je or fbstp lret mov fsubp jne cmp (bad) jle jmpq loopne xor jo adc fcmovne mov xor jmp loopne movslq (bad) pop xchg cmpb imul sbb (bad) mov mov (bad) mov outsb (bad) jnp movabs xor jrcxz (bad) mov gs jne mov push xlat rex.R adc gs add (bad) fcmovbe shlb outsb (bad) pop nop push fidivl cmp xchg adc push js (bad) (bad) enterq insl xor or loopne adc sbb (bad) xor mov (bad) out ja cmp fistp xchg out (bad) add loopne (bad) mov jae ss mov pop popfq stos idivl addr32 rex pushfq sub (bad) cmp cmpsb nop (bad) std pop (bad) push xor pop movsl int3 push popfq outsb hlt mov xchg in sub es add xchg xchg lods mov mov rol outsl cmpsb (bad) add add sub (bad) add rex.RX fisub (bad) sbb sbb rex mov (bad) rex.RXB repz loopne (bad) jo in xchg clc mov pop sub (bad) xor push movslq fistl sti add jp rex.RXB rex.RB lahf jle leaveq xchg enterq mov test add movsb cld in imulb movabs hlt (bad) mov add sbb retq xchg fldl mov ja mov fcompl (bad) (bad) (bad) jmp mov sbb rex.WB ja je mov add sbb (bad) sti adc push test xor adc sbb lea sub rex.RX push xchg (bad) sahf mov cmc jge cmpsb pop int3 add mov xlat jp (bad) sbbl add pop callq (bad) add hlt rex.WRXB addr32 add imul or cltd movsl rex.RB test (bad) ja jp mov pushq jbe xor (bad) decb add cs mov in (bad) jne adc add add jp cmp or pop cmpsb insb in mov and (bad) xchg loop push xor scas push or jg addl cwtl jno (bad) jb in movabs add ja (bad) xor std add cmc repz test jl xchg jo in (bad) jne sti mov jne adc add pop sbb lret pushfq fstpt add rex.WRB mov xor jrcxz rcl movabs add stos gs nop rex.RX bndstx jbe xor in cmc mov cmp (bad) outsl mov pop pop or jl xor mov rex.B cmpsl es lcall data16 in cmc add nop/reserved pushfq jl retq rex.RB rex.R mov push in and fistpll fcoms fs jmp add (bad) rclb xchg xorl imul icebp (bad) sti fdivrs imul hlt (bad) xor add lret (bad) (bad) or movabs add adc (bad) mov rex.RB lods (bad) pop cmpsb in cmpsl add out or xor (bad) mov (bad) movslq sub or lock add sub sahf rex.R addr32 std cli sti je and mov nop (bad) add sbb adc add add loope (bad) jae or jrcxz sbb es or add add add and adc (bad) out sbb pop jle imul hlt jg cmp and shll movabs rolb jne add (bad) mov faddl std stos int (bad) jmpq xchg fldcw or add (bad) out (bad) rex.R sbbl (bad) rex.X (bad) decl adc movabs sub adc loopne mov mov pop mov lea addl je jbe sub (bad) sub or rex.B adc push mov cli fs push (bad) rolb loopne jg add jo and add mov add leaveq jrcxz push jb xlat data16 ja jg cmp (bad) sbb sbb cmp jb adc sub mov xchg add rex.X jno (bad) out add fs test xchg incl (bad) push xchg sub xchg fdivs mov cs (bad) jg ljmp (bad) sbb fiadd (bad) add movabs test lahf mov cwtl or movsl rcr fisubl pop xor lods xor sarb cmpsb loop and pop lret (bad) rolb add xlat insb pushq (bad) push jmp (bad) (bad) xchg fs rex.B rex.WRX rex.WX mov mov imul adc insl sub in add movabs sub (bad) movabs cmpsb add (bad) mull jl sbb jb stos stc shlb out mov out fisttpll lods (bad) xor fimul push jrcxz pushq rex.WRX xchg or ss nop (bad) cmc adc (bad) (bad) cwtl repnz stos push pushq sbb (bad) xchg lret fnstenv imul xchg rex.WB outsb (bad) mov (bad) incl cmp adc rex.R or mov pop lods sbb (bad) mov jbe mov imul popfq lods pop (bad) or sbb xchg (bad) jge rex.WRXB cwtl int3 bnd movabs cli movabs jns jbe movsb sub pushfq jrcxz mov jmpq cmpsl cltd out imul pushfq sbb xchg stc faddl add (bad) movslq (bad) cli jp (bad) ficom mov (bad) mov sbb and out jl sbb jne sub jo mov jp addr32 outsl pushq and stos (bad) loop (bad) cli push xchg sub jo sbb xor xor fwait (bad) jle add (bad) sbb mov sbb fadd es outsb (bad) lret es (bad) popfq notl pushq jg push add rex.WRX gs (bad) movabs push es xor roll jbe lods sub xchg movabs pushq bnd cmp (bad) insl imul repnz shrl (bad) cli out jg stos adc lea (bad) adc (bad) sub cmovnp sbb jbe xor (bad) jge roll adcl movabs (bad) ds loope jl lea cli and sub and movabs fs rex.RX jno js jb push jmp (bad) leaveq or add pop rorb xchg mov add add rex.XB repz and mov nop mov xor loopne stos retq add jg sub addb (bad) ja loope stos outsl add (bad) xor rex.WRX (bad) fdivl adc (bad) repnz mov add or adcb rex.B leaveq xlat out rex.WXB pop jle repnz fisubrl rex.W out (bad) imul or mov (bad) xor rex.WX sub iret std movabs (bad) fsts lret jg add add add push rex.W (bad) hlt faddl xchg rex.X add movabs loope (bad) xchg xchg add rex.WB sti movabs mov loopne (bad) rex.XB lock mov sbb rex.WRB rex.RXB cmp (bad) sub (bad) out cmp sti jb mov fnsave jp loop scas sub mov test mov leaveq add (bad) fisttpl rex.X (bad) cs movsb jne (bad) movabs (bad) jge mov sahf add push xchg xchg add sbb push test rex.WX jg rolb add int pop and fwait xchg adc xchg jb insl mov pushfq out pop not jp and mov (bad) enterq clc pop cld add lret mov (bad) and xlat sbb add push subb iret jrcxz rex cwtl add jne imul adc lods mov sbb rex.WRXB ss retq (bad) pop jrcxz and scas sbb sbb mov adc mov jo jns push lods (bad) mov mov imull and jne rex.RXB roll jo repnz in add xchg cmc lret cmpsl xchg adc adc imul xchg and jnp rex.XB mov movabs pushq repz cmpl or mov mov mov xchg (bad) rex.WRX push je mov int rex.RXB adc rex.WRXB es sti rex.RB pop (bad) jns repnz push std lods movabs xchg test fwait outsl cli mov jae test (bad) (bad) int3 sti andl test cmp and data16 and movabs mov xor ss and test mov rclb mov rcrb or movabs lods pop mov scas rex.WR cmpsl movabs adc xor mov (bad) (bad) adc mov movabs jp out mov sarb sbb (bad) fldt pushfq (bad) push (bad) jle add or outsl jge notl rex.XB fsubrs add push idivl stc adc movsl rex.RB shlb insb test rex.RX add (bad) (bad) cwtl pushq test (bad) scas loopne xchg insb add (bad) rex.W or rcll cli movsb xor push cwtl jne jb sub test fnsave loopne mov jle and adc je mov rex.X or (bad) rex.WXB xor jno add sbb (bad) jle add out and callq xchg jbe rex.WX add adc rex.WRX scas int3 repnz add sbb shrb add rex.RXB mov or movabs pop (bad) jbe and cmp mov gs (bad) jns push out pop adc fstpl mov push add rolb mov jle (bad) cmp mov add (bad) xlat xchg movsb minps jle (bad) mov and push imul sbb mov movsb (bad) sahf callq scas (bad) (bad) xor jmpq js rex.XB rex.X insb (bad) jmp xor rex.B rex.WR hlt (bad) int3 jns xchg sub add (bad) out mov and xchg std and lret add mov sbb orl leaveq adcb jp cld int3 rex.WRB sahf repnz mov cmc add (bad) sbb mov add lods jb xchg and out cmc std (bad) clc rex.RXB rex.WRXB rex.R add mov pop jns (bad) add pop jrcxz cmp and leaveq rex.WRXB rol sbb leaveq lret fcomip add (bad) xlat sub shlb insl and pop incb pushq movslq mov pushfq fild test cmpl cmc add mov cmp cmp adc xlat nop lods (bad) ss add xchg jg mov lcall or outsb jg rex.WR rex.RX mov cs mov add (bad) (bad) jb (bad) add (bad) xor andl (bad) mov jns add jae (bad) out movsl retq mov add mov insl hlt sbb or xor xchg rex.R pop pushfq and and cmp add rex.X sti rex xchg rex.WXB (bad) iret sub sub or icebp push and and (bad) cs cli rex (bad) mov (bad) fistpl (bad) jg or jnp xchg rex.X mov stos rex out xor (bad) (bad) pushq push add jg vsqrtsd pushq xchg jo xchg (bad) fstpt cs (bad) out and stos mov callq outsl xchg movslq push lret adc add pop or rex.WRB cmp fildl ja lods incb rex.WRX cmpsl (bad) jp icebp sub push xchg xor lret or mov ds mov push jb fidivr sarl and nop adc (bad) jp fstl jle sub xor sub add addr32 cmp rex.WX jg fbld cltd (bad) (bad) clc (bad) lock mov jl in (bad) jmp (bad) mov (bad) lods sarb xchg mov and sub pop and fnop stc test jb mov adc or mov xor jle xor add mov mov adc out leaveq sub sub cmpl iret shll xchg (bad) push test rex.WB cmpl cld nop shrb pop (bad) jb (bad) xchg xor test jmp pop push xchg rcr xor and rorl push pop adcb rex.B (bad) callq (bad) sbb retq pop mov (bad) and out nop test (bad) add push mov es (bad) mov (bad) imul pop pop (bad) or rex.WX jp std jno xor faddl out xchg xchg jl outsl mov mov and clc cmp or loope cmpsb mov xchg outsb pop rcl pop (bad) add mov rex.RX movabs pop jg (bad) rex.WRXB rex.RXB sub es xchg retq pushq rex.RX insb cmp imul mov xor adc jl (bad) (bad) pop jae or pushq (bad) fidivrl cmp jb or std pcmpeqd (bad) leaveq push mov cmp xchg imul mov pop (bad) and adcl insl and push and cmpsl jg or adc push retq (bad) notl add adc fiaddl (bad) jg out cmpsl cmp (bad) out xchg adc es cmc divl sti cmpsl xchg adc lret sahf (bad) js push push out add add push lock sub jle frstor mov add loopne rex.WRB and test sbb sahf add test xchg jbe imul rolb enterq sbb add sbb add movabs popfq rex.RX loopne cmc adc (bad) add jl loope cmp add jl addr32 stos jne out sahf and pop add rex.WR ja add jns in and mov clc (bad) cmp adc xor or rcrl (bad) sub rex.RX add fucom jae add lock (bad) mov mov (bad) jp fstpl not pushfq lahf fdiv lea push xchg movabs pushq (bad) cmp fiadd test lret xor test cmp loop xchg jbe and test and movabs xchg fs rex.WRX mov divl js pop lock adc sub sub rex.WRXB fabs xor adc movabs shll jp cmp (bad) scas sub stos std (bad) (bad) jns mov sbb sarl or add sub cltd (bad) pop fldenv movsb jbe xchg (bad) out movabs (bad) movabs adc push in sbb rex.XB fs and cmpsl movabs repz cld movsb stos push nop (bad) fdivl mov mov movabs xchg out sub jle xor jp or rex.WRX add movabs xchg (bad) jmpq icebp sub add sbbl add mov adc rex.WRXB movslq jbe xchg add mov (bad) jrcxz,pt add mov data16 mov mov sbb jo xchg mov frstor (bad) lods (bad) jp sub (bad) mov add jns fmul ss add pushq std jo cmpsl rex.RXB stc xor scas jl add movabs retq add rorl mov add (bad) (bad) jno scas jmpq clc imulb add (bad) callq mov addr32 (bad) add fstpt (bad) (bad) rex.WB rex.RX movslq clc loope (bad) lods fbstp and push adc mov and mov scas mov mov (bad) xchg and sub jbe (bad) cmp and mov add pushq fs movabs jmp (bad) js std push fwait cmp nop sub cmpsb cld xchg pop or rex.RXB ja (bad) (bad) jbe cmp insl in cmp insb (bad) (bad) iret rex.RB fwait out jmp loope fs movabs adc hlt xor xor (bad) divb mov jmp stos out in icebp rex jp (bad) std (bad) (bad) pop movabs pushq stos rex.RX (bad) xchg loopne movsb and jmp mov cmp sbb out xchg mov (bad) sti rex jno hlt rex.R gs pop mov movabs retq leaveq mov pushq outsl test (bad) xor xor ss xlat (bad) jno or jae push or lock ds testb movabs pop (bad) xor int and lahf rex.R add rclb jp xchg pushq or rorl xlat jrcxz and and mov mov (bad) rex.XB sub imul lods jns mov andb mov rex.WR xchg std pop sub idivb fs sbb push je retq (bad) outsb test insb add and and (bad) xlat mov mov sub movsb push (bad) hlt rex.W add callq out adcb out (bad) adc cmp (bad) pop push (bad) pop es xchg idiv (bad) jne sub ficoml (bad) outsb lods outsb (bad) (bad) cltd rex.X retq (bad) lret fdivl cmc hlt (bad) lret (bad) jnp mov jp movabs clc rol out fwait fs js cwtl std xchg (bad) mov pop data16 sbb mov xor jrcxz (bad) cmp lea lret jae fwait jmpq add cmpsl out mov lea cld mov adc add pushfq push iret movsl xlat adc (bad) (bad) or or jg xchg leaveq (bad) cmpsb (bad) add shrb (bad) rorb add cld rex.RX mov (bad) lock (bad) (bad) movabs movabs push (bad) movabs xchg and add insb pushfq add or jns rex.R fdivrl jmp stos imul cld add sbb test (bad) (bad) add or or mov stos xor repnz (bad) or jnp xlat (bad) add sub mov xchg mov out in mov jnp xor adc mov xchg movabs sbb xchg mov jp fcoml (bad) popfq (bad) js rex.WRB (bad) pop push and (bad) loop xchg cltd adc (bad) cs cld pop (bad) out and jle pop push adc xchg and mov rex.WXB fptan jp shrl lock push sbb push cmc mov fwait cmp cmp insl rex.WRX rex.WX jmpq (bad) add push or add rex.RB test sti jg push cmpsb retq std jle lea lahf movslq je jmpq add rex.RXB cmc fwait add sbb pop lcall add shr (bad) adc mov add add sbb push incl xchg xor push and mov dec or push sahf cmp xchg jg push int js (bad) or fs and push add pop pop ja and or xacquire pop xor or retq jp pushq fistpl outsl mov add fisub cmp pushq sbb roll sbb rex.XB js (bad) (bad) movabs push lods std (bad) or jge sub icebp idivb (bad) cmp in movabs mov or callq hlt test push lret movslq (bad) iret (bad) sbb and scas mov in insl rex.XB rex.RXB test (bad) add (bad) andl retq jo mov insb mov mov je xor add rex.RX (bad) pushq popfq int3 (bad) push add (bad) xlat loopne add ds mov and jmpq add cmc test sahf iret jne jl jl outsl femms (bad) jno or xchg jle xchg movsb fidivrl or popq lock je lahf movsb (bad) add mov mov leaveq pop imull sar mov add outsb and or jnp and out jns mov ds cmc stos add mov cmp (bad) rex.WR sub movabs (bad) mov fisubrl cwtl and xor and mov jg jmp movabs data16 pop sti cwtl movsl (bad) cmp jl (bad) (bad) fnstenv fs xor pushq jg and data16 rex.WB gs rex.X (bad) (bad) es sahf out (bad) and lock movabs (bad) lret (bad) or rex.RXB (bad) jbe test mov decb (bad) mov jmpq fmull stos (bad) mov js cs or cmp roll rorl shll (bad) mov sahf adc in and (bad) xchg (bad) leaveq jb cmp pop cli clc nop cs pushfq mov stos rolb (bad) jle pop sahf jle xor sub ror xchg (bad) loope mov rex.WXB test mov adc (bad) (bad) pop int3 sahf loop xchg adc insl enterq in add rex.WRXB (bad) outsl adc in push lcall adc and outsb addr32 movsb callq sbbl iret (bad) test and hlt incl xchg insl imull scas (bad) out mov jo (bad) sub sahf rex.RXB rex fs lods push popfq rex.W ss and or sub cmp imulb fsubrl jno add pushq insb sbbl ja (bad) sahf je fwait test (bad) hlt pop outsl pop add jge (bad) jno test (bad) mov fcomi cmp (bad) rex imul cld cmpsl jns mov (bad) adc mov jg mov adc add psubw std js add xor and (bad) retq or fxch add xchg adc jmp movabs xor add xlat rex.WR jae (bad) rex.WB rex.W callq (bad) sahf pop rex.X jmp (bad) out mov xchg fisttpll je xchg push rex.RXB xor mov je sbb retq adc fidivr jp add xor rex.WXB (bad) in fwait in out repnz (bad) mov scas or (bad) add clc stc (bad) (bad) fs add mov rex.X (bad) (bad) roll loop mov or (bad) (bad) add (bad) cli rex.W fisub movabs (bad) (bad) sbb outsb cmp add xchg out sar imulb mov jbe add adc pop cmp js lods callq fldl movsl add rex.R imul movabs sub mov mov mov (bad) jrcxz stc std test jl and (bad) cld jrcxz (bad) fisubrl (bad) test lods push cmc jns pushq add sti gs fidiv add mov xchg rex (bad) add add (bad) (bad) mull pop add (bad) sbb add leaveq scas pushq (bad) cmp rex.WX or push xchg (bad) adc (bad) iret (bad) jae adc ss rex.X mov jns maxps sub inc (bad) (bad) jb add fldl iret adc mov addl or rex.R (bad) lods retq (bad) mov test or add (bad) and add mov xor notl hlt add add mov fiadd xchg out sub insl (bad) movslq sub jbe lods addr32 (bad) std rex.RB test and fdiv jmp and xor (bad) add pop cltd movslq mov mov or add insl pushq lret (bad) ds add mov add and pushq pop (bad) cmp add test sbb sbb insl fimull (bad) out xchg sbb cmpsl (bad) stos jg cmp xor pop xchg add and xchg xor test sbbb js jno pop adc sarb cmp xchg (bad) add imul outsb (bad) stos xchg mov sbb mov pushq stos xlat xchg mov add push (bad) test sti mov add popfq jle stc out xor jl jno add paddd es add mov fs adc cwtl (bad) and scas es movabs fcmovb jb cmp out je movb add xchg fnstsw mov xchg mov out retq lea lret (bad) sbb or int rex.X (bad) push jg (bad) push rex.B or leaveq (bad) sbb fcmovnu or rex xchg rex.X add outsl push jle mov pop lret pop mov add adc adc (bad) and sub mov xchg or out movabs jnp outsl scas rex.RB cmp rex mov add pop subl outsl pushfq and pop nop (bad) lods leaveq add adc scas rex.WRB (bad) jne (bad) mov lock js in mov mov xorb sub xchg jle cmp faddp test (bad) rex.WR and in (bad) xor (bad) (bad) mov adc mov mov (bad) js fwait pop je add stos (bad) jmp cld add rex.WRB fwait scas (bad) pop rex.WRX adc jns lret (bad) mov jge (bad) repz test xor pop (bad) jp fs fwait addr32 mov and (bad) rex.WX (bad) jb cmpsb mov jno or sub js (bad) xor movabs cli (bad) jbe loope icebp mov out pop jnp (bad) mov movabs insl jmp mov mov add iret (bad) pushq pop sbb (bad) lock pop cmp outsb push sub stos movabs shlb and pop mov jl adc adc jrcxz add jle cld jg cltd je fwait lahf test out ss xor loop push (bad) pop mov gs in (bad) cmp pushq insl jbe jg fiadd mov rex.RXB rex.WRXB repnz mov (bad) mov (bad) push pop fsubl sarb rcrb and notb (bad) (bad) mov out (bad) jmpq (bad) imul je push in push pop stos add xchg rex.RX jrcxz rex.X jae adc add adc cltd sub lahf rex.WXB push mov jle rex.W pop (bad) jp or mov sbb or (bad) repnz push add pushq jo jae stos pushq mov jnp mov (bad) add es pop movabs add and xchg sbb sub iret (bad) pop and (bad) add rex.B xor add sarb in outsl mov mov push int3 add mov mov es outsl xlat out addl sbb jo (bad) std xor jp icebp mov cmpsb ficoml fstpl jbe mov (bad) stc rex.RX cs jne cli sbb outsb adc xchg mov add mull leaveq add mov mov sbb callq rex.W add mov pushfq add (bad) sarb push mov std xchg loopne (bad) repz jp (bad) icebp retq enterq jnp and leaveq (bad) rex.WRX scas fmuls push repnz mov test (bad) movsb pushfq add cmp jmpq sbb clc cwtl sbb mov iret (bad) add sub (bad) or movabs jbe add rex.X add rex.XB sahf test repz mov add clc (bad) nop rex.WXB scas movabs insb cmp rex.W xor not xchg add in mov imul jbe outsl lret adc fidivl (bad) (bad) jge inc push imul xchg mov rclb pushq (bad) xchg fistpl (bad) stc jmp (bad) jmpq (bad) (bad) adc out push rex.WRX mov xor add jg mov pushq (bad) mov int3 (bad) loop jo add lods imul (bad) (bad) fs adc and adc push imul int3 mov xor and rex.W std (bad) fldt lock jg mov cltd sbb sbb mov sub add jbe fdivrp nop fnop pop rex.R xchg mov rex.B sub outsb cmp add add pop test and pushq in lods jle pop jmp mov sarl test (bad) icebp loopne add sti es adc jmpq mov loop pop movsl lahf enterq (bad) add out xchg add loope loopne (bad) out jp jle cmp movabs add mov xchg test stos sbb sbb lahf outsb pop repnz jns (bad) outsl rex.WXB scas xchg imul cwtl add roll fcmovu pop or rex.RXB rex.WRB pop scas jle cmp rex.RX and fiadd jge push retq test jb jb pop pushfq xlat xor or rex.W insb pop add test add adc add rex.RXB std rex.R rex.RX (bad) addr32 cmp (bad) add insl push (bad) subl outsl cmp jrcxz mov bsf fs pop jl mov loopne add pushq xor jmpq test cmpsb pop jb (bad) movsb fmuls add insb push or adc jnp rex.X mov push mov jle xor push ljmp out (bad) add imul mov (bad) cmp pushfq add xchg mov repz add and jmpq jl orl stc test (bad) rex.X data16 nop xor sub (bad) (bad) imul int3 jae orl mov fildl cmp rex.R imul mov enterq lea xchg fwait rex.XB xor rex.W rex.W movb mov rex.R sbb add adc mov xchg cltd cmp pop rex.W xchg decb sbb adc js mov jmp mov jrcxz ficomp movsl mov rex.WRX and nop adc rex.RX leaveq int3 jg (bad) jns lods shrl (bad) cmp test cwtl outsb rex.RXB ss (bad) shr movsb mov cmc lahf outsb add adc mov add fsubr test fisubrl out int rex.W (bad) xchg rex.B lock out (bad) jbe lea rex (bad) pushfq (bad) movabs mov rex.WX rex.X loop jae ficomp lods push enterq (bad) pop jl,pt mov subl movabs fcompl add pop nop cli sahf cld and xchg and rex.WR loope (bad) cltd (bad) pop rcrb (bad) jnp fisub cmp mov insl xor fs lods cmp retq mov repnz sahf std retq jle cmc fidivrl pop out xor jrcxz fimul mov sub xchg pop mov stos jmpq or xchg push scas push cmp add cld lock add not mov clc (bad) (bad) jbe mov mov test jo lret movsb jbe sub xchg or pop push mov (bad) xor clc push or jrcxz je push rex.W xor mov jnp movsb jbe clc jnp sub (bad) (bad) stc (bad) (bad) fs jp jge pushq out mov shl cmpsb cmpsb push xchg sbb mov movabs sub rex.WRXB loopne mov fadd (bad) push jl or out fdivrp push jle,pn (bad) or jno mov shrb pop xchg pop shrl push sub rex.R movabs pop xchg push loop and cmp lods jbe jno rex.WR rex.WRXB rex.WRX mov insl mov lods mov adc andl mov nop mov or (bad) rex.WX rex rex.WRX fistl mov test data16 mov sbb fcompl rex.WXB int xchg (bad) rex.WB in or rex.RXB sbb pop clc sahf (bad) xor xchg mov insl je pushq (bad) data16 xchg pushfq (bad) repnz xor std lret (bad) mov and fcmovnu insb es mov stc gs push or pop rex.W imul orl clc pushq movabs and addr32 movl jb rex.RXB (bad) scas xorl push or or xor add fcmove outsb cmp sbb lods mov (bad) xchg in rex.WRXB icebp (bad) rex.R rex mov jge jbe lods mov xchg fcompl push lcall mov leaveq xchg int3 pop sahf rex.B adc pushq push fucomi add test gs mov fnstcw add pushq sub sbb jle mov lods movslq icebp mov sub fmul add divb enterq pop (bad) (bad) shl xchg add (bad) sahf repnz adc mov adc (bad) movabs jg adcl or ja (bad) (bad) fisttp cmp (bad) mov rex.XB or lods jmpq mov imul (bad) rex.RB rex.WRXB incl push out sar mov fisubr incl rex.X lods js jns retq add push jp (bad) mov sbb jrcxz paddw rorb rex.WRX fs jge sbb cmc cmpl jmpq push push (bad) mov push in xor loop (bad) adc scas stos add (bad) add sbb mov (bad) xchg jl idiv (bad) add frstor mov adc nop jg sub add mov (bad) or (bad) (bad) (bad) fdivrp jmpq addb es insb outsb (bad) rex.WB addr32 jno (bad) repz rex.WRX cwtl xor mov jmp sbb (bad) out add callq or addb cli sbb jb xor and pop (bad) jrcxz inc xchg ss cltd and mov xchg movabs mov (bad) and mov or gs push sub xchg pop (bad) jb adc push sarb cmp orl mov (bad) xor (bad) jge xchg (bad) jb adc sub jb rex.RB fiadd mov push movabs (bad) xchg jle xchg pushq mov push (bad) jp (bad) rex.XB sub mov sbb int3 int shll repz in add adcb mov scas jge sahf cmp mov xchg jrcxz lods mov adc mov (bad) add jmpq cmp stc and add add xchg rex.WRXB (bad) mov (bad) mov rex.WX pushq add add add xchg xor (bad) mov mov rcrb in mov jo mov ds verw sti cmp fs hlt rex.B cmp jge cs loopne xchg rex (bad) or and sahf jle (bad) sub mov movslq jg or vminss mov stc hlt mov xor ds add fs rex.XB rex.WRXB cmp mov in test cwtl loope (bad) mov rex.WR (bad) add pop rex.XB jle sti pushfq test in (bad) mov clc push outsb js rex.WRXB cmp rex.WXB or xchg jg (bad) (bad) fdivr sbb jle rcrb jl in (bad) xor jne cmp add and jmpq xchg fwait leaveq and nop mov mov outsb add pop (bad) ja add cwtl mov add loopne js stos callq outsb (bad) add (bad) movabs insb (bad) decl mov (bad) fldl jmp ror mov fstpl jns ds cmpsb sbbb add rorl sarl sbb (bad) lret push insl loopne jrcxz push xchg sbbb fcos sahf rex sbb mov jge rolb add out (bad) movabs xor movsb (bad) hlt mov (bad) addr32 rex.XB (bad) lock (bad) pushfq cmp test add in xchg jle xor (bad) out imul rex.WRXB lock cmp (bad) pop and add movabs add nop mov pop add stos mov pop mov insl mov jg sub retq retq mov add clc (bad) mov jns lods add push adc or lret rex.W lea jmp (bad) adc lock ss fstpl cwtl and push sbb add adc mov adc cmpsl mov outsl int3 (bad) test mov xchg add cli (bad) shll fcomi or push jrcxz rex.RX nop add sub insb clts clc scas jnp pop mov outsl add pushq (bad) (bad) (bad) (bad) mov and insl add and repnz jrcxz faddl add sbb xor xor repnz add sub jb test test (bad) adc imul xchg fistl lock (bad) mov xor sub add jg in scas mov mov fcoml leaveq jae je xchg jle addb (bad) scas test add rex pop hlt data16 sbb mov out add test rorl add push in rex.W rex.X retq in fdivrp lret stos (bad) rex.XB ss (bad) jb loopne (bad) or int3 (bad) push ss push out (bad) pop loop out mov callq mov (bad) mov and rcrl cmp movsb add iret jmp mov push add incb imul mov outsl leaveq add rcrb mov xor sarl nop xchg pushfq stos sahf or testl test (bad) movsl int mov sti fdivs push fs mov jno add cmp cmp hlt add jl rex.WR (bad) jmpq scas rex.RX rex xchg add in rex.XB mov repz rex.R pushq (bad) sti addl es mov retq cltd retq nop add cmp rex out fcoms mov or stos jae push out sub out push mov movslq (bad) pop xlat lret (bad) and add fcompl pop sbb pop (bad) add gs and cmp push popfq lret (bad) movabs or jb mov test pop sub add (bad) add jne lods iret pop jbe (bad) movsl mov cmpsb xchg jb fdivrs mov and retq or cmp roll movabs imul pop je test add sbb lea xor add jnp fistl cmp test repz insl mov (bad) rex.R leaveq add adc (bad) rex.WX int rex.XB in (bad) scas xor adc xchg mov in add push adc adc jg test (bad) jnp pushq rex.R jp movd (bad) lods lods mov adc xor add sub lret xchg adc mov loop pop add nop sub and pushfq data16 add jns rex.B mov (bad) hlt cli mov push fwait hlt xchg (bad) (bad) jle pop push xchg stos adc es mov (bad) ss mov add sub pushq adc out jp (bad) movabs fiaddl (bad) movsb test mov lock es cld roll jle adc fcoml jae gs or ficompl mov ficomp adc cmpsb pop or cmp cmp (bad) sbb (bad) rex.XB rex.RX movabs (bad) out xor idiv (bad) jno jrcxz add enterq clc sbb loope (bad) mov sub pop movabs lods in mov pushq fsubl cmp (bad) mov rex.WRB (bad) (bad) int jle test movabs movabs adc rex.X rex.W jle mov sbb jno cmp add jle jb cmp and cmpsl add push es (bad) mov rex.WRB test (bad) add (bad) rex.XB out mov loopne mov push pop (bad) jl (bad) add stos bnd rex.WRX add push mov movabs xor in mov push fistp mov fsts sahf or (bad) (bad) add out sbb ficompl push scas cmpb popq (bad) sahf cmp rolb mov test add out xchg push add mov (bad) jle retq mov cs rex.X cmp (bad) jb fistpll jmpq jo cmovg mov fprem1 stc push add mov and psubq push (bad) pop mov push jmp mov (bad) (bad) out sbb pop pop popfq psrlw cmp loopne sbb push jnp sbb push decl fcmovnbe or jrcxz rex.XB rex.WR test (bad) sbb mov jb rex.B sahf sub insl cmpsb cmc fidivr jns mov scas add adc mov xor adc add ds loop (bad) adc or adc pushfq std jle pop push sub jne jo rolb mov add jg mov loopne,pn movsl add fdivr adc fwait sbb rol stc cmc pushq or mov mov out sub xchg movabs push jns add cmp mov cmp sbbb xchg lret xchg sub xor xchg loope jrcxz test sub xor jg cld push jmpq shrl (bad) je pop (bad) mov adc jmp sbb mov cmc cli (bad) idivl jrcxz jle outsb or test sub or sbb push cmpsl mov leaveq rex xchg jle pop (bad) xor push jge fmull mov sahf sub fadds outsl add xchg mov imul (bad) insl fild rex.W imul out mov lahf mov or out clc lods rex.WX movslq insb (bad) (bad) stos or xchg rex.RX clc sub push add movslq cmp js xor add mov enterq out mov rex.RX lods pushfq pop rex.WXB mov sbb mov jl movslq push cmc mov xor cwtl mov pop xchg fisubr (bad) iret jne in mov rex.WRB mov (bad) pop rex movabs or (bad) fdiv retq sti js jp push pop or jmp (bad) imul jrcxz xchg (bad) jmp cmp jo (bad) (bad) cmc push adc jo rex.X xchg xchg mov or adc xchg xor lods lock jb sbb (bad) ds mov mov ss (bad) (bad) push cli movslq sarb pop cwtl retq lods mov repz sahf (bad) rex.WXB (bad) outsl scas sbb add repz popfq pop pushq pop sub clc jne gs or popfq (bad) adc neg xchg push fmul (bad) mov hlt adc retq sbb rex.RB callq adc jp xchg cmpsb movabs rex.R rex.WRB adc sahf mov fsubrl in out test and pushq rex.RX rex.WB (bad) movslq sub lods mov fstl outsb lret enterq xor jns xor add test es (bad) mov out sbb (bad) push (bad) jb callq sub (bad) jrcxz mov fadds (bad) xchg xchg (bad) sbb pop insb fcomi scas loopne jp jb cmp pop xchg and xchg and jbe mov or xchg roll pop and jle orl xchg insl sahf in add (bad) pop and out cli mov sahf xchg xor mov shll jb add push js cli jl xchg mov jge pop loopne add popfq fwait int cmp add pop mov lea cmpsb in cmp mov int movsb insl sub (bad) or jg adc (bad) pop (bad) rex.RX cmp mov add scas cmc movsl add jrcxz jmp (bad) enterq je pop mov add mov loop rex.R add rex.RX and (bad) push rex.WRX ja (bad) lret fsts (bad) cli xor movabs mov or (bad) xor stos addr32 mov es fisubrl jg pushfq sub xchg cmp out pushq (bad) or pop lea jp sti fdecstp movabs xchg (bad) adc mov repz punpckldq adc loop lods xchg jg rex.WR test je rex.B mov (bad) (bad) rex.W imul (bad) icebp xor (bad) (bad) add jrcxz add in decb add out mov (bad) pop rcrl adc outsb leaveq lods pop fdivs and (bad) fild mov test mov xchg sar (bad) ds jmpq (bad) jge movabs jp or fs retq mov lods loope adc and cmpl (bad) movsl add (bad) cli (bad) mov in decb movslq (bad) bnd hlt (bad) adc mov and push out (bad) xlat jbe and (bad) adc sbb jg popfq push fidivrl (bad) movabs jp sub test push pop sti fidiv popfq lahf add (bad) je pushq add movsl rex.X stos mov add cltd outsb jp pop (bad) (bad) rorb fs mov int add mov out in movsl (bad) pushq rex.R rex.WRXB decb js pop cltd scas (bad) (bad) out popfq xor and jmp icebp jg cmpsl mov jbe (bad) (bad) xlat imul movabs (bad) insl out xchg mov adc imul cwtl in fs retq mov or cmp shl pop add insl mov sub std rex.WX andl cmp data16 mov add (bad) nop sahf movslq rex.X push jle movabs add lock in (bad) mov xchg shll jg and rolb movabs or jrcxz mov add jmp movsb rex.WX jae add push js jne mov add or (bad) out cld add addr32 pop in rex or sub or add rex.XB jnp stos test push xor push hlt and adc test jmp jp add jno jle adc mov mov (bad) fs loop sub add pushq mov rex.R ss stos in movsbl jp (bad) pop jp movslq sti push and add cmp cltd rex.WX push icebp (bad) repnz movb jp xchg outsb push fs and enterq std cmp sarb cmp incl retq adc shrb add (bad) (bad) out scas mov testl andl add jnp rex.WB rex.WRXB adc (bad) add add mov jb retq jmp fs xchg add cmp jle jmpq mov clc int add fisubrl fadd add jle cmp mov or sbb and leaveq add cmp popfq (bad) cld sub jrcxz cmp jo icebp stos jl add (bad) cltd lods dec or add fild adc outsl rex.X data16 cmp sub fcoml insb fldt pop jne (bad) pop and (bad) jge and rex.RXB es xorb insb data16 xchg ss xchg pop adc lods sbb and jp sti or jbe jrcxz sti lea imull push pushq retq mull rex.WB pop xchg gs xor rex.WRX gs sbb rex.W (bad) in jb xchg jnp rex.RX popfq adc mov adc rex.WB or (bad) imul (bad) mov pop fist stc and mov sbb lock xchg jle cs rex.WR (bad) stos iret xchg rex test add xor out (bad) jb or pop imul and (bad) jmp mov add sbb test add add and jns shr rex.WXB jne jnp (bad) inc add and outsl add out cwtl pop test int jge nop sar sub (bad) rex.WX stos (bad) jns add in (bad) cmp cmp (bad) jb test out mov sub std and roll retq icebp cltd jle fildl add pop xor cmp (bad) mov lods pop pop (bad) movsl rex.RX jg mov mov xor movabs callq repnz rex.RB jp mov pop decb fldt cmpsl xchg in (bad) cs fs xchg sahf rex out sub jo ja cmc lret (bad) rex.W callq or and sahf (bad) add je sbb pop jbe fiadd popfq ljmp add movsb (bad) gs lock out lcall push pop xchg xlat pushq mov (bad) jmpq cmp rex.WRXB out ja pushw rex.WX lock js mov es lret and (bad) add cli (bad) (bad) and xchg jg test sub adc xor xchg adc nop pushq leaveq cmp (bad) xor (bad) and pop sbb test or pop mov lods cmp mov mov sub sbb add push popfq movslq loop add flds (bad) jl cltd movabs cmp repnz xchg test cwtl (bad) scas push xchg rex.RXB scas (bad) add nop adc loop roll sbb ss movslq (bad) sbb mov clc xor mov add scas stos mov jp xor repnz and and imul jnp sbb sbb mov mov (bad) jb fsubr adc jle popfq stos xchg hlt add mov and sbb out negl jb callq (bad) xor je add rclb mov or enterq and insb loop sub cmpl and add adc (bad) mov rex.WB cmp sbb (bad) lahf sarl rex jne adc sbb add add mov (bad) fmuls js rex.RB xor mov sub add mov jl lahf lret jg sahf stc mov and stos std xchg int3 cltq rex.WXB rex.RXB movabs push add mov lahf mov loopne scas lret pop (bad) enterq nop imul movabs cmpsb (bad) divl imul insl (bad) lock rex sar mov push xchg and mov movsl xchg cmpb pop rex.WRXB outsl movabs mov mov jg push andb jle or cli add fildll mov xchg cld jle cwtl rex (bad) mov xchg rex.X (bad) (bad) stos mov (bad) adc ficomp movslq (bad) repnz add fimul movabs lock test out pop xchg rex.RX cmp pop jp add add jb cmc add test pop rex.R jns jp lods (bad) rex pop fucomip outsb sub icebp and mov rex.WXB jnp,pn jo cld subl mov pop mov in add add (bad) in pop (bad) mov jae xor (bad) cld (bad) (bad) (bad) popfq mov fisttpll cltd pop push (bad) outsb add (bad) fmul sti lret sub shll push stos andl (bad) ja pop jmp (bad) push out sahf jo jns xchg addr32 (bad) push clc jge fsub callq (bad) jnp movabs fidivr movsb and mov in imul stos (bad) incl xchg cld push scas sbb mov imull ljmp (bad) xchg test (bad) in mov outsl sbbl fstpt xchg jo cmp (bad) repnz sub popfq jg mov sub jnp xchg pop nop mov movb outsl movabs sub mov addr32 add mov cs fs (bad) mov push jbe jle jg pop (bad) decl (bad) (bad) rex.RB scas es (bad) add push pop mov xchg and test lret rex.R jge out mov jns (bad) cmp scas and xchg retq add mov (bad) jmpq jmp jrcxz mov add push retq mov rorl jmpq (bad) movabs pop rex.RX pop fs mov imul xor pop sub pushq fmull add xor lock jp cmp fdivrl out xlat add popfq (bad) in mov movl (bad) sub jb (bad) jnp mov jb sbb (bad) pop out std jb ds lahf mov out mov add in xchg pop loop (bad) xlat mov sbb (bad) out stos mov or (bad) (bad) pop mov sbb and adc in add lods pop mov loopne add ss mov and jnp add push sbb jle nop xor ja cmp loop mov loopne xlat (bad) sahf (bad) cld jmp add movslq (bad) cmp in sbb pushfq int movabs mov jp insb pop fldl loope iret add pop adc jae (bad) add in rolb (bad) rex.WRB rex.R lock jle sti and sub iret in mov test rex.W in sti mov push (bad) jge jge xchg imul (bad) mov rolb scas out nop jbe imul or sub cmp xor lahf rex.WXB adc sarb mov add (bad) push sarl jle push add add rex.WXB lock (bad) repz int shll sub fs (bad) mov leaveq adc jbe or xor fmull rex.WB pop mov outsb rex.RB rex.WRXB rex.RX sbb movabs xor fistl mov sub rex.W (bad) incb cmp mov (bad) movsl (bad) mov push jb in xor hlt pop push add xorl add or fsubs push (bad) ss movslq test stos xchg xor (bad) cs in push pushq mov jge out sub outsl (bad) std jg (bad) xlat (bad) mov cmp int je sub (bad) (bad) jle sarb push stc (bad) and rex rex.B cmpsl pop int3 or ds add cli (bad) add pop out xor fdivrl movabs xlat jb nop repnz adc and test test (bad) push rex.WRXB adc fs (bad) mov loop (bad) add add hlt xor xlat pop sub jp rclb sbb jle cwtl mov (bad) (bad) repnz sarl (bad) stos movabs fsts in xor jnp add rex.B mov (bad) popq mov mov and mov xor fsub insl stos stc ds (bad) jp mull lret jg (bad) (bad) lahf pop mov jnp clc xlat (bad) leaveq add rcl subl adc jp sti (bad) sbb jns out (bad) mov or retq cmp rex.WRXB add (bad) rcrl (bad) in cmpsb rcll scas (bad) jle sahf xchg fwait jb insl (bad) xlat ja fstpl (bad) cmp push pop je and cmpsl sbb jne xchg in test (bad) addr32 (bad) stc push or (bad) pop outsb ds (bad) callq decb jnp cwtl jl jl (bad) (bad) fisubl adc cmp (bad) in ja mov (bad) sbb jle adc jb cmc sarb popfq xor (bad) test xor movabs push lods pavgw and jb movabs jrcxz mov mov imul (bad) movslq hlt push jp imul (bad) push (bad) retq jp or sti jl retq ss lods fdivr mov popfq (bad) pushq scas outsl rex.WXB (bad) push push test rex.B pushq mov xchg or shlb and xchg faddl out adc xlat add push push (bad) outsl cmp movabs mov (bad) xchg push push xor out (bad) (bad) cmp std sbb rex.WRXB add stos add mov jns loopel jmpq clc (bad) or nop imul sbb push push rex.XB and cmc pop stos xchg retq rex.XB scas idivl jg pop (bad) mov fcoms xchg push add rex.WX cmpsl test outsl push sbb mov subl rex.WB rex.WRX adc repnz rcrb jo js lea (bad) popfq adc (bad) insb pop add mov pop (bad) (bad) mov (bad) push pushfq pop fwait sub mov movsb mov (bad) rex.WRXB (bad) fucomp test pop and mov and rex.WRX fildll add jle movslq (bad) and cmp xchg pop add (bad) stc mov js jbe pushq jo xor (bad) and rex.WXB add cli movsb and idivl add fdivrl push jp (bad) mov sahf jae adc add sbb iret jmp rex.WB cltd movabs repnz sarb mov xchg shlb cmp rex.WB mov sbb sbb inc fmull add pop sahf sub insb cmp jb movabs push in lods or add (bad) mov mov lcall sahf rex.W push (bad) in mov (bad) (bad) scas adc mov add fs xchg (bad) movabs xchg mov add (bad) (bad) add cmp rex rex.RXB movsb pop in add (bad) mov adc add push lods rex.WR js add scas rex.WB sub or lahf shl jb,pt sti xor hlt (bad) (bad) stos (bad) fldl push adc or sbb jle pop callq xchg outsb xor cmpsb std or jg rex.WRB rex.WRX add adc ja add (bad) (bad) rex.WRXB cwtl push jbe adc imul xchg rex.W cltd jnp jns pop mov pushq add add xchg js leaveq lods (bad) imul push or (bad) add mov xchg leaveq jl add out sub xchg add (bad) and movsl outsb cmpsl retq mov repnz jg (bad) xor xor cltd movabs stos in (bad) add mov jl cmpsb xchg rex.WRX retq cmp jmpq add xchg add mov fldl sarl outsl sub add jne fisttpll or fildl cltd cli pop rex.WX rex.XB adc (bad) pushq loop movsb ja stos jg (bad) rex.W enterq mov add jg (bad) mov pop push sub xchg out and rex.RX rex.WRB rcrb jbe leaveq (bad) fdivrl (bad) sub pop add lret or adc mov nop mov mov (bad) and (bad) push and stc rex.WX lahf (bad) popfq mov xchg nop sbb retq add mov sub mov pop (bad) adc mov (bad) (bad) hlt add jg adc shlb add fs push add out xor hlt mov add pop jge jg cmp (bad) mov jle mov xor or push xor movsl out enterq jnp,pt jb out test (bad) cmpb rex.WR fnstenv adc and repnz add pavgb add stos fmul add sub imul pop (bad) loop popfq adc loopne push (bad) test icebp adc adc mov add sub mov in movabs test cmpsl (bad) cltd mov pop jnp adc (bad) or or pop rex.XB mov (bad) (bad) insb and outsl xchg out mov xchg insl push jrcxz ja xchg jle adc addr32 pop xor (bad) push jl ror sub cld movabs add push movabs movsb pop sbb (bad) add test add ss push sahf adc xor out (bad) (bad) sub mov mov retq movabs (bad) (bad) pop popfq mov sahf movabs (bad) notb jle int (bad) movl js out mov xchg xor mov neg repz mov lcall add lods and mov cmp lea cli movsl add imul jg sbb mov (bad) xchg jmp movsb rex.RXB jle push flds sbb ljmp lods jmpq or mov data16 cli orl mov mov lahf sub lahf sub mov (bad) sbb jle mov jmp xor mov jp sarb mov mov popfq mov (bad) mov divl rolb sub test add (bad) jo stos cli fdivp add push sbb xchg jnp lock vunpcklps sbb jp fadds movl shrb rex (bad) (bad) mov movabs sub iret mov rex.B repnz jp cmp cmc (bad) jmp add or (bad) xchg imul (bad) jne adc cmp and ja je pop push rex.WRB add add addr32 (bad) test rex.X fild outsl rex.WRX push cmc pop je add or movl (bad) xor jns cmp scas lahf pop push sub pop pop je rex.W rex.X ss rex.WR add lahf imul mov mov sbb (bad) pop adc insb add je int add sub fcoms xchg (bad) jg and add mov fiaddl rex.R lock or imul lret data16 fcoms jae (bad) jb jne mov jl mov fstp jrcxz push sbb fnstcw mov callq (bad) scas movslq insl mov cli xchg sbbb (bad) enterq in or mov sbb rex.W rex.X repnz rex.X sarl pop rex.WX cmc (bad) test mov outsb rex cmp cmp add fdivr popfq and mov stos incb (bad) sbb pushq jle je (bad) int js movabs add adc mov in or pop push cmp test adc add movsl test mov imul and scas sbb jle (bad) retq or lahf mov jp scas mov cmp pop adc cmp jne lods rex.RB rex.X leaveq jb sub outsb fidivrl cmp (bad) hlt fdiv mov jne add addr32 adc mov cmpsb push mov xor movabs xchg sarb jl mov xlat jbe cltd stc rex rcrl sbb sahf jbe fwait (bad) mov push mov lods jp push (bad) mov add mov add mov xchg (bad) lock add std (bad) mov jmpq movsl mov mov fadd (bad) or lods pushq (bad) cwtl jp xchg jns mov jle pxor sub mov cmp (bad) stos add xchg mov adcq adc rex.WRXB cmp and rex.X xor adc callq xchg cmpsl mov jo (bad) rol (bad) jbe stos pop add jno (bad) mov sete and mov callq fdivrl andl rex.WB mov jge pushq (bad) in mov add mov js ror mov test (bad) xchg faddl mov push jg pushq and test ds pshufw (bad) mov or sub lods jp (bad) sub rex.W xchg rex.XB icebp (bad) add or rex.WRB sahf mov add rex.RB adc rex.RXB jmpq in cmpsl sub mov lret adc movslq cwtl mov addr32 movabs push push and pop adc jg (bad) (bad) stos jb es lret pushfq and xor rex.WRXB movabs mov sarb adc rex.WRB cmc xchg cwtl out pop jno flds js out rcll or (bad) imul push pushfq pop (bad) cmp subb mov mov fs sbbl mov movb rex.WX rex test xchg jmp test mov add jmpq movabs mov cld mov jle cli and rorl (bad) (bad) xchg repz xlat callq pushq push jp js mov fcomip xchg sub or divl (bad) rex.WRXB or and sub cld movabs std leaveq xlat callq xchg pop (bad) jrcxz pushq mov xchg movabs or or sub pop (bad) ljmp jmpq sub jno enterq movsb (bad) (bad) jle rex.WRX lods test sbb sar (bad) jge (bad) popfq cmpsl mov pop stos btc mov rex.WX js fidivr rex.WB cmp (bad) int jbe in sub movabs mov mov (bad) pop pop imul es jnp xlat mov fnsave jle jnp (bad) xchg ds and movabs (bad) movabs and cmp (bad) jno and outsb jbe enterq callq push and jno jl shrb (bad) mov and adc jp push push (bad) es lods sahf ja,pn (bad) sub (bad) mov js jg lods pushq movsb pop pop repz (bad) imul xorl sbb cld pop and jrcxz jo int addr32 mov outsl adc test out mov xchg adc mov lret mov popfq jg (bad) sbb lods imul (bad) adc (bad) push icebp cmp mov outsb add (bad) xor (bad) mov sub pushq pop retq sbb (bad) or xor shll add test nop sahf xchg add xchg stos (bad) cli rex.R pushq mov (bad) iret (bad) lret push add hlt stos xlat sar cmp fisubr orl fnstsw movb pop push sahf (bad) fbld fcomip rex.WRXB (bad) movsb iret add in (bad) leaveq lods jle scas out adc insl and rex.RX adc insb rex.WR mov imul sarb mov int sti fist sbb mov ss gs pop lods cmpsb test ja movabs pop pop andl add lods rex.RX mov fdivrl (bad) gs pushq jno int sti ja roll scas push (bad) cmp (bad) cmp or (bad) xor sbbl fs adc add jmpq lret rex.W pushq rcrl add cmpsb insb cmp mov mov frstor pcmpeqd lret lods rex.WR add pop cwtl add (bad) in imul ss sbb pop xchg sbb movabs (bad) fldcw lahf (bad) (bad) fsubrl adc jnp cmp jne addb rex.RXB (bad) (bad) mov add xor xchg (bad) mov add pop xor pop sbb fistpll loopne rolb mov rol int outsl mov xor pop cmp js rex.RB pop shrb add cmp jno lods sbb adc outsb fmull loope mov stos test (bad) stos mov jns mov mov or sub mov rex.XB jge push sbb mov cmp mov mov movabs stos insl add nop pushq adc jle in xchg je xchg loopne jno adc (bad) xor and (bad) jne shrl rex.X and add (bad) out add mov clc mov adc pop adc jmpq (bad) xchg stos (bad) and cmpsb hlt adc jg popfq imul sub pushq sbb rcrl cmpsl jnp (bad) push sbb sub (bad) repnz fs insl lock cmc mov rcll callq mov punpckhwd pop cmp and test (bad) adc mov cmpsl mov in and jp jb rex.WRB movsb cmp sub jg add rex.W xor rex.WXB test rex.WX mov lret (bad) cmc cltd lock rex andl pop or mov (bad) ss rex.R jle out or sub rex.RXB mov add jmp (bad) jbe sarb imul jge (bad) push push lret xchg cltd xchg (bad) mov jbe add (bad) lret stos add in sbb rex.WX (bad) cmp rex.WXB lahf mov push add in adc xchg pop add (bad) mov and js test adc xchg (bad) popfq sbb xor add xor adc adc mov (bad) pop and (bad) and sub lahf xchg pop lods imul popfq jg lods pop jl shr xor or xor (bad) adc (bad) (bad) jrcxz jmpq lock mov imul sbb test pushfq xor push stc std add sub mov pop cmp add mov pop cmp movabs vmovsd adc adc adc mov sbb (bad) jl mov or pop movabs mov in push (bad) mov jrcxz (bad) xchg adc (bad) jmpq pop and cltd xchg scas out clc mov insl (bad) outsl popfq (bad) mov xchg xchg sub rex.WRX xchg repz lock adc xchg (bad) add mov shlb jp jle add cmpsb mov jb sbb add add addr32 movabs retq adc xor (bad) jbe pop mov (bad) mov mov or scas mov or fldl push sub mov mov add test xlat jle (bad) loopne mov addr32 xchg (bad) sub rex.W fwait stos repnz and rex.WRB (bad) rolb in mov int3 push movslq rorl rex.WXB sub test (bad) repnz mov and cwtl mov add test ja test je add jo jne jnp rex.WR sti (bad) sbb mov jb cwtl (bad) jb scas (bad) (bad) and and xchg xlat or jle jge xchg (bad) (bad) (bad) mov jrcxz rex.RX callq mov rex add stos in jae rcrl je pop add imul jg cwtl out repnz pop jnp jbe mov push (bad) push xor scas cli add (bad) retq stc rex.WXB rex.RXB (bad) stos mov adc outsl sti rex.WB rex.XB jge out insb nop add xor rex.R and adc pushq jl int3 add rex.WRX rex lock (bad) fcompl sbb sbb std in add rex.WR icebp mov cmp cs adc and out add movabs rex.RB xor mov scas and jno,pt or fisubr insb sub cmc xchg mov mov add (bad) adcb in test xor je add es std (bad) cmc pushq jrcxz jle lock in clc xchg (bad) and jle rex.X (bad) vmovdqa stc rcrl enterq mov nop mov jae movabs rex.RX fs test jae mov add sub mov jl mov callq add repz lock mov and in (bad) icebp shrb lret notl lea (bad) xchg jle cmp xchg fnstcw stc xchg jp lods mov movsb in push xchg in add sub sahf add fcom jbe (bad) rex.X (bad) lods jg jmp (bad) jne outsl imul (bad) rex.WR sub lods add mov (bad) adc (bad) mov nop scas xchg cmpsb or lods test pushq xor int (bad) lret pop rex.WB push cwtl sub add jge pop jp movabs rex.X xchg jne or jnp push std rex.R nop rex.WRXB (bad) (bad) repz jge adc xor (bad) (bad) sbb jl pop mov (bad) mov fs add add pushfq push lret mov fs (bad) cmpsb imull or fildll ds pop pop sub add push mov movsb add mov (bad) cmp xchg ja sub or lahf push (bad) (bad) push add shl es movsb fwait mov ds pop incb out int rex.RB fstl add (bad) rex.XB jg icebp decl xchg (bad) cmp (bad) add adc ss fs mov rex.WB callq or mov or std (bad) sub pushfq (bad) popfq in rex.R rex.WRX cmp imul insb int xchg subl cmpsb pop movabs or sahf xchg cmc pushq lods push or pushq (bad) and adc movabs (bad) xchg xchg jb movabs movabs ficompl je mov (bad) add add mov pop (bad) sbb repnz sbb (bad) jno rex.WXB rex.WRB stos jbe and (bad) std cmp jnp imul rex.RX jle (bad) mov adc xor orl xchg add lret and xchg hlt add adc add or in cltd (bad) callq push mov mov (bad) movabs flds xor sbb add mov add cwtl cmpsb adc add (bad) lea mov and movsl or scas mov lods frstor xor and (bad) jns (bad) popfq rex.XB (bad) mov lea out (bad) mov (bad) (bad) rex.B fs lods test and sbb ss data16 pop (bad) add rex.WXB js pop mov lret in push movabs (bad) rex.WR xor je mov add mulb push movsl or mov outsb jle jp fisubr pushq negl movsl pop fildll pushq push add mov and rex.WRXB cmp xor rex.W adc ss xor jae mov rex.RX pop repnz and pop xor out jg sbb iret jp fcmovb mov and cmp test jp mov jb sub movsb movsl (bad) rex.WX nop lret mov (bad) jp test sub adc sub rex.XB (bad) cmp insl movsb rclb xchg push (bad) adc pushq cmp or jle sub (bad) stos (bad) cmpb xor cmp or add adc cmp mov pop (bad) idiv jae push cmp add add stc sub add pushfq jle rex.RX sahf imul mov xorb rex.WXB (bad) push cs mov jns iret mov jb,pn (bad) (bad) rex.X mov rex.WRX (bad) jae and and adc push adc lret (bad) jbe xchg sar jl test xor push (bad) (bad) (bad) rex.WRXB mov sti mov rex.X fwait xor add mov subb add jp incl pop sarb test popfq rex.WRXB (bad) test sbb xorl cmp push test jp movabs retq mov sub loope movsl jle (bad) lret lea jmpq mov fs xchg add movabs pop add fnstcw jl (bad) xchg rex.WRX mov (bad) add cld mov lret fs fistl cmp sub sub jp pop xchg jo (bad) pop (bad) js (bad) jrcxz sbb imul rex.WRXB sub (bad) jo jl insb cli adc lock jne addl jns stc mov xor push leaveq adc push and (bad) imul (bad) mov add in (bad) mulb test (bad) loop fwait lods add rex.XB rex.WRB lock (bad) xor cmp sti ja (bad) push (bad) out pushq (bad) lock jbe jne stos rex or out xchg xor stc (bad) rex.WRXB mov pop orl jmpq movabs (bad) sbb cmpsb push rex.W jg stos je mov pushfq test (bad) rex.RX test jp insb in xchg rex.R (bad) cmp push pop add lods movslq (bad) mov loope cld sub in jle and (bad) fwait jge pop pop mov cmp loopne and rex sbb add cld lret hlt (bad) icebp sbb cmp (bad) xchg in xor cli xchg push add imul stos mov mov repz (bad) add rex.WX movabs xchg (bad) jne lea mov cmpsb xchg (bad) (bad) rex add or xor rcrb sbb insl (bad) cwtl fstl add add sbb pushq jle jge adc (bad) popfq jp mov rex.WXB (bad) out fimull js adc (bad) sbb jb xchg rorl int3 jp rex.W mov retq mov and clc cmp lock lock jmp popfq fwait loopne pop push insl and movslq (bad) mov fs test stos rex.WRXB movabs insl and (bad) xchg cmpsb add pop sbb xchg clc insl test cmp repz rcl (bad) pushq sarb cmp rex.X test mov xchg and (bad) jnp,pt pop xlat xor adc outsb cmp (bad) cmp jbe mov add cmp push jnp rex.WRB rol std sub stos test add (bad) imul idivb (bad) fdivr cld fstpt mov cmpsb sbb xor stos xchg sub rex.X (bad) rex.WRX movabs fdivrs andl add adc mov add pushq mov lahf xor loop sti jp mov mov mov rex.X es (bad) sbb pop outsl (bad) jl and fiaddl rex or fidiv push iret mov sub hlt rex.RB and (bad) jb movabs and enterq mull add rex.WX rex.X mov mov idiv add fmull pop jrcxz pop jle (bad) (bad) (bad) jg rex xchg jg fs icebp add lahf mov push test orl or add mov jp push ss cmp (bad) adc in (bad) stos bnd je or jbe adcl mov add sub mov add and rex.RB jle (bad) rex.WRXB jl xor sbb lea ja jnp (bad) lock push or test rex.WX fwait jmp jle fild out or xor sub push (bad) lret imul push fs add test hlt add cmp sahf lea mov add mov xor movsb (bad) iret (bad) cwtl add pop (bad) (bad) sahf cmp and adc push xor and lods (bad) (bad) jp add (bad) mov movsl add loopne in jp pop (bad) lods popfq mov test fmuls cs add rex.R (bad) add sti cwtl add sub sqrtps cmpw xorl add cli sti (bad) xchg xchg lret xor enterq mov frstor sbb or xchg add and sbbl rex.WR data16 sbb mov rex.B add xchg (bad) js rex.X jne and sub and xor add adc or add pop je or add and xchg clc jmpw and (bad) movaps (bad) mov xchg pop iretq rep jg or add movsl (bad) or int3 movabs jg jp add stos (bad) (bad) (bad) pop movsb add lods (bad) jp cltd add sub cmp and or mov movsl pop retq xchg fistpl gs (bad) lods xchg sar enterq add (bad) (bad) (bad) mov xchg jmp mov mov retq sti jne cmpsl xor sub movabs movabs stos pushq pop mov xor push jrcxz test rex.WXB popfq adc add jae pop mov (bad) and xchg sbb fs jo (bad) mov cmp retq (bad) (bad) sbb (bad) xor mov xchg rex.R pop in (bad) nop jo mov xchg roll sbb iret add pushq (bad) (bad) push rex.RB mov (bad) pop and mov jbe rex.WRB rolb xchg push jb,pn lahf sbb cmp jmpq push cmpl and (bad) mov (bad) (bad) cmp fimull mov and test pushq rex.WRX push enterq cmp movabs sahf jg (bad) rex.WX add mov mov insb loope (bad) sarl rex (bad) jb fiadd or pushq jg add cmp xor cmp mov mov lret add pop xchg fistp push mov clc leaveq jl xchg adc jp mov xchg adc add repz addr32 mov add pushfq outsb shll (bad) xor cmc test mov insl cmp cli jl lods (bad) mov push rex.WRX rex.W xchg (bad) fwait cmp mov sar adc mov (bad) (bad) (bad) jbe or rcrb mov xor mov sarl rol pushq add (bad) sarl adc xchg cld mov add xlat js pop fisubl (bad) in (bad) add mov lahf (bad) add mov xor sbb rex.W or repz test add xchg adc nop or rex.R enterq cmp cmp int3 push imul mov sbb xchg (bad) test sbb jb cs es and imul out mov mov adc lods jo loopne insb sti add and fldcw (bad) (bad) add imul add sub (bad) rex.RX cmp jmpq outsl mov add shlb rex.X jrcxz sbb loop (bad) jg imul movsb data16 repnz jmp xor loop add cmp movslq loopne mov pop (bad) outsl mov (bad) pop sarl ja,pn jbe rex.WXB mov xor movabs (bad) ss lcall repz (bad) xorl rcrl add xchg or jp pop (bad) fdivl add idivb in add fwait data16 jg mov sub sbb rex.WRXB sub and rex.WB cmpsb mov sahf ja (bad) pop fbld test scas (bad) and push jmp loopne fnstsw sub cmpl cmp stos mov pop sbb push clc (bad) rex.WRB jrcxz rex.X retq loope xor jg xor sbb or in sar (bad) mov testl nop rex.WRX jl mov pop jo out sub add xchg cld jp jmp rex.RX (bad) lahf or sbb add (bad) mov add xchg pop in jp test fmull lods out (bad) rex.X (bad) pop ljmp push pushq lods jmp pushq push out push add rex.W fldt divb xchg insb jo imul xor lret fstl iret (bad) in jrcxz scas (bad) cmp sbb add fs sbb xchg es (bad) add flds lods pop test rex.WX movslq add add lahf xchg add xchg add movslq outsb (bad) pushfq add pushq lods mov in sbb notb jp push pop push cmp sub pop cmp (bad) sub adc (bad) add callq add (bad) pop or repnz jbe movsl mov out lfs shl xchg cmpl enterq sub push mov testl cmc jle (bad) push (bad) rex.W mov loope cmpsb cltd or jmpq (bad) sar add (bad) xchg rex.WRXB (bad) int3 xorb cmc rex.XB cltd scas rex.R rex.WR rex.RB pop mov and jo jno,pn sub setbe add sub int3 pushq add (bad) std add lret subl (bad) (bad) fstpt jg rex.XB (bad) fimul imul test xor rex.WB mov xchg stc rex.WX outsl mov lret adc push or add and sub fs ja leaveq incl sub pop js xchg (bad) jl ss xlat jge lods popq nop scas sbb rorb callq jp jrcxz mov popfq add jp (bad) fwait mov fs push mov loopne cwtl imul fstpl mov rex.RX rex.R rex.RXB sub es (bad) fidivl je (bad) movsb or leaveq rex.WRX rex.RXB js add xchg push pushq fnstenv rex.X and jg xchg cmp jb and cmp xor leaveq imul (bad) mov jmp out movabs and imul add test (bad) fisttpl ficom (bad) stos add stc (bad) jbe or (bad) icebp fnstsw pushfq clc mov push add sub insb sbb (bad) xor rex.RXB jb cmp ss int (bad) sbb out mov mov push jae pop es rex.R xor cmp pop lahf mov stos icebp add xchg (bad) (bad) callq loopne xchg fcomp rex.R jg pushq popfq enterq pop pop cmp retq add jo movsl sbb fild scas xchg stos (bad) mov xchg (bad) and lahf jns add or lea sbb fs jp mov lahf mov pop add sbb push fisub test (bad) sbbl add mov sbb (bad) and xchg xor add mov xor add or push add popfq xor cmpsb add rex.WB in sub jp add cli pushfq and push (bad) imul icebp test (bad) sahf jb xchg (bad) lahf je (bad) rex.WR sub flds pop jg popfq cmpsl xchg cltd (bad) sbb mov rex.RXB data16 add pop (bad) xchg xor (bad) push mov callq xor add sbb rex.R int out (bad) in lods std out jmpq (bad) mov ficom sbb mov cwtl pop je loope adc fist scas iret jg scas movslq cmp add in test add and (bad) cli pop test ss orl push iret adc mov fisubl and fisubr (bad) rex.WRXB sub (bad) pushfq jns cmp fucom rex.WRB int jmp add (bad) mov (bad) rex.W add push out pop jb cmpsb test rex out add push cltd and sti add mov rex.XB rclb fstpt rex.B icebp lea rex.WRB add popfq mov push (bad) cmp scas rex.RXB cltd nop jb adc add jp mov and (bad) lock cmp stc xor (bad) jp sar add hlt rclb xchg mov add rex.RX and (bad) sub rex.WRX jbe rex.W cltd incb scas cmc (bad) in mov (bad) outsb test (bad) jg sbb gs mov (bad) scas pop jae xor cs (bad) sub jle (bad) pushq (bad) jle js rex.B (bad) jg cmc xchg (bad) pop movabs sbb mov cmpsl sub scas stc stos rex.WRXB rex.WRX rex.W mov int3 enterq push loope jg test sahf add je sbb notl lahf or jae sub jmpq adc rex.WX fs roll push add mov rex.X mov mov stos fisttpll (bad) outsb xor mov jl cmpsl push cmc movabs fs icebp jmpq movabs shrb and sub sti mov rcl rorb ja cmp rex.W jge push (bad) jl (bad) fdivl add sahf sub xlat jb mov (bad) pop adc sub add or add shr test jns cmp (bad) (bad) (bad) pop rex add adc add (bad) or out (bad) rex.XB addr32 rex.W lock jbe add int3 test push out cmp (bad) retq movabs mov xchg leaveq (bad) add nop rex.WRXB movzbl add xor bnd mov (bad) movabs lahf rex.W ja (bad) adc xor sub outsl stos imul (bad) jb out data16 sahf mulb rex.WRXB fs test push cli adc xchg mov je pop mov retq and or test rex.R fcomps fs mov sub (bad) data16 mov xchg or (bad) jle mov xchg push test adc rex.WRB add leaveq xchg rcll or (bad) cli jg not out and adc mov retq loope jb xchg push mov flds sahf sub push mov add (bad) rex.R (bad) movabs cld xorb (bad) mov int (bad) rolb xor rex.XB xor pushfq jl cmp nop jg lods (bad) add icebp sub enterq jg lea rex.WRB outsb jmpq xchg rex.RB jmpq (bad) rex xchg (bad) movabs jbe (bad) and add movsb rex.RX loop jrcxz mov add adc rex.WR (bad) icebp divb and lock movsb and scas inc hlt sti rex.WR add fs retq outsl mov es sbbb (bad) add lock (bad) insw mov rex.W jb repnz rex.RX and insb jle sbb cmc mov sub xor jp rex.WRXB sub insl and rex.WR cmp movsl imul push mov xchg nop out add lods sbb pushfq std outsl add jne xor rex.W xor repz scas jmpq fisubrl xor cltd insl sub add std sbb or (bad) jle xor mov mov stc and adc outsb out shlb mov (bad) adc rex.WR sub (bad) clc rex.WRB scas scas or add stos lods std loope repnz jp imul push hlt (bad) xchg sub mov mull cli imul imul (bad) movsb cmp sahf (bad) rex.RB (bad) adc (bad) jbe sub add or push stos add adc push pop mov in mov imul mov jp jbe retq outsb add push jg jle sbb sub mov jge rex.R sub sar push add jle mov pop iret and fs or mov (bad) jp out rcrl setno jl cli sbb mov jge xor or cmp iret mov rex.WX retq pop rex.W sbb mov test (bad) sub rex push mov adc (bad) rclb sbb (bad) cmp jle (bad) (bad) mov push sarb in stos jg (bad) (bad) mov xchg lahf jbe out or sub fcmovb lock add mov xchg (bad) add rex.RB mov pushq mov and mov or xchg xchg (bad) (bad) jo mov (bad) mov xor and jl (bad) data16 add mov jge js mov (bad) xchg nop jmpq lret nop mov mov sti add (bad) vmovaps push mov (bad) (bad) test mov rex.X fwait (bad) jns rex.WR rex.RB rex.WRX cmp and pop rex.RB jl (bad) out rex.WRXB pushfq fimul jbe pop (bad) mov mov and out (bad) adc (bad) sub ficompl gs xlat push jne movabs xchg (bad) test ss test and insl mov (bad) ja (bad) pop push or (bad) je lods xor (bad) sbb add cmp movslq mov int stc je jrcxz ja in sbb (bad) lret cmp in add addr32 test jne movsb (bad) out push lods cmp nop idivl (bad) and xlat fs and or shlb int nop rex.WXB or xchg sub rex (bad) rex.WR faddp decb xchg jmp xor ffree pop xchg insb (bad) sahf xor fs lock (bad) pushq rex.WRX pop movabs sti icebp xchg cmpsb add rex.RXB mov (bad) (bad) add and rex.W loop jae ss addb sarb xchg ja pushfq imul sub movsb fmulp (bad) xor rex.WR lahf (bad) rex.XB mov mov icebp add (bad) (bad) movabs xchg movsl rex.W jp sbb in in loop movabs adc movsb (bad) (bad) rex.RX mov cmp (bad) jmp movabs add repz pushq (bad) jmpq jg rex.RX mov mov sbb rex.X jno pop sbb jg rex.W rex.X movabs cmp add jo jge stc loope lods ja add (bad) xchg jl adc (bad) add stos sub sub xchg pushq (bad) fild in (bad) (bad) rex.XB cmp (bad) add int3 lods jp es sbb fucomp (bad) cltd fsub xlat stos (bad) xchg rex.R (bad) jbe in mov xor sbb cmpsl rex.WX popfq out pop add rex.WRXB jrcxz (bad) sbb popfw cltd (bad) (bad) callq jge movslq stc jno mov sub out movsb add rex.RX movabs (bad) cmp pop add push rep push and cld stc loop (bad) scas (bad) insl jle movabs or imul or (bad) (bad) xchg adc cli mov fidivrl sahf xchg enterq (bad) mov pop loop lods add jb cmp jp push je jmpq cltd add rol pushfq iret jno es sub std stos mov movb jns or xchg data16 push add movabs fiadd cmp or xchg and (bad) repnz mov pop (bad) sahf push push add push in roll jmp gs (bad) fdivr icebp and movabs iret add xchg (bad) xor mov cld push (bad) mov push or sahf add movabs (bad) and cli cltd jle mov fwait mov rex.WRXB mov xlat ja pushfq mov mov movabs jo test rex.WRXB xor clc incb lea mov (bad) (bad) jl (bad) popfq rex.WRXB stc (bad) fisttp pop mov fimull add mov flds rex.WXB cmpsb rex.W xchg jle (bad) retq pop or mov mov rex.XB rex.WB sub pop mov pop sarl jg sbb (bad) or add adc js clc cli jo add pop push xchg add fbld mov pop mov cmp jrcxz (bad) movabs mov pop sub xchg mov xchg sub (bad) and sub fs jg adc (bad) xlat pushq (bad) ds rex.R loop data16 movabs int push faddl jns sbb mov movabs or rex.WRXB cmp or imul jg scas iret pushfq jbe in std sar add mov jl or (bad) mov rex.WRXB xor nop jbe jb adc jl (bad) icebp cmp add push scas test add add (bad) mov cmp pushq mov cld (bad) jle (bad) movabs je xchg jp fsubrs push stc pop adc fwait add mov cmpsb testl cmp (bad) movabs test cmp jg push stc xchg out or mov (bad) jmpq rex.X in (bad) rex.W lret notl je movabs jge cwtl mov pop jmp rex.RB jbe (bad) (bad) mov rol div add addl outsb add (bad) test ja (bad) pop and xor (bad) (bad) pop jno lret or jb jg xchg sahf (bad) popfq sub add iret test iret rorl fiadd add fwait rex.WR sbb add imul cmpsl mov adc add es (bad) xor xorb xchg (bad) sub add insl (bad) xchg (bad) rex.RXB (bad) test jp jmp rex.R or sbb cmpsl jrcxz or sbb scas std and iret (bad) xchg mov sbb out movabs cmp rex.RXB movslq add jl pop mov es out cmpsb std test xor adc or add mov fisubr pop lea rex.W add (bad) rex.RXB add mov mov pop jo fldcw jle addb push sar outsb (bad) ja mov (bad) or add loopne addr32 mov rorl lret cmpsl xchg xor iret lock sub insl xchg orb mov rex.WR rex.XB jbe sbb mov lahf out (bad) cmp loope or rex.RX btc shrb xlat cltd jae push pushq (bad) repnz mov cmpsl mov jae xchg loope cmp loop pushfq jb test xorl (bad) fwait leaveq repz fistpl out (bad) fidivr cld pop mov lods std rex.RB (bad) (bad) callq sub mov and push push jle sub rex push insb xchg js cmpsl (bad) pop fsubl xor fildll (bad) rex.WXB loope xor shll rex.XB (bad) jmpq imul jns mov fstpl js mov xor lahf rcrl imul (bad) xchg lahf mov (bad) xor out pushq cmc mov sbb (bad) (bad) sub (bad) ja xor idivl (bad) test mov xchg imul nop mov movabs pop sub jno pop (bad) and and mov mov ja ss cs (bad) out fcoms lock cmp repnz imul adc jmpq addr32 rex.WB out rex.XB and xchg (bad) in (bad) xchg (bad) mov (bad) je mov imul cmc imul outsb xlat (bad) jg mulb xchg loopne mov add and shrl add pop add loopne xchg pushq pop (bad) mov sub loop outsb (bad) leaveq test sbb (bad) jns shll mov xchg xchg cmc insl ja lock fidivl xchg rorl je rex.RX cltd jg mov scas rex.RX lock rex.RX or push sahf fiadd add cmpsl xchg (bad) (bad) jae jg loopne test mov xor sbb sbb (bad) sub cmpl jp imulb cmp and repz push fwait mov hlt push scas add in orb jmpq fldenv pop add pushq fidivr rex.RB add fnstcw hlt push adcl (bad) pop jle xchg ss jp add nop test fs (bad) mov (bad) add data16 (bad) add in test or lret jrcxz sub adc jg rex.RXB pushq push adcb xchg (bad) or in outsb addr32 pop jbe add (bad) cmp movabs stos gs rex.WXB ja pop mov jbe mov (bad) pop movl rex rex.X sarb cmp push fs movabs rex.R and jb xchg mov (bad) (bad) lods sub (bad) rex.W fdivp add (bad) jg (bad) jb xlat lahf mov rex.WRB mov callq add (bad) rex.WRX test pop (bad) test pop rex.RXB or jg jb fs sbb sbb jp (bad) popfq cmp mov flds mov fcompl test cmp mov ror pop jp xlat mov std rolb lea cmpsb test (bad) or outsb (bad) repnz es (bad) xor add ds (bad) mov push adc add sub loop sbb pushq (bad) testl icebp and add movabs stos (bad) (bad) fiaddl (bad) repz add mov cmp leaveq (bad) int3 insl scas cmpsb add add sarb movabs fnstsw and and and jge in roll add loope mov fcomps in (bad) sbb (bad) icebp xchg notl out clc icebp jmp repnz (bad) (bad) lods jp (bad) cmp cmpsb orl xchg sub (bad) jmp scas loopne mov pushfq and pop add xor std pop mov movabs mov or iret rorb repz mov add (bad) (bad) fnstenv adc jg sbb jns je add adc std jp lea cmpsb lods sahf (bad) mov add add (bad) or adc mov xor retq divb mov je add sti adc add sbb or or add push rex.XB lea rex.RX (bad) incl cmpsl rex.R xor fdivr push mov cwtl add rex.WRX mov fs mov mov mov or sbb jg pop mov or (bad) push rex.XB add mov std add rex.WRX (bad) xor cmpb ds nop sub jp adc movabs rex je mov add cmp and out sahf (bad) add (bad) and xor loope out fnstcw sahf rex.WXB cmpsl in rorb xchg lea (bad) enterq add movslq add dec notb add enterq jno mov rolb test jge (bad) scas rex.WRX mov movsl jae lahf xchg add pop xchg pop lea rex.WX stc fdivs jo (bad) (bad) mov rcrl pushfq rex.WB or (bad) mov cmc fdivr pop or or push xor or (bad) xchg sbb xchg stos push push adc mov dec mov jmpq mov add jg imul cmp jmpq xor (bad) push leaveq outsl gs neg and pushq ds (bad) int push imul lret out outsb imul int mov mov adc nop or mov mov out jle js jp lods fwait jns jbe mov pushq xchg rex.WB rex.RB test pop push rcr gs int ja,pn (bad) mov fcomps (bad) sub sub jp loope or rcrl scas pushq mov mov xchg stos (bad) and imul rcrl int3 (bad) test pop (bad) rex.WXB adc in fs (bad) insb sarb cli add in add mov (bad) add shl clc add and stos out add and in xor xchg (bad) (bad) rex.XB jle sbb cmpsl cmp out repz jrcxz (bad) movsb add (bad) mov enterq and add test movabs rex.WB out fadds sqrtps cltd rolb movabs fs movslq jge clc rclb rex.WR cmpsb test add add in rex.WX fild or imul lods lods jrcxz xor add jo rex.WX sbb sub in add or shll mov xor push cmp out popfq in jle lret (bad) out or test pop adc rex.XB andl pop (bad) fist mov jp mov cmp xchg (bad) (bad) loopne mov mov movlps cmp ss test add xchg es (bad) add movabs add adc in (bad) (bad) test jb xchg leaveq pop outsb rex sub rex.RX sub sub jnp in sti push (bad) jrcxz mov fisubrl or es jl mov addb and cmp xlat imul mov jl rex.R sub mov mov mov enterq jp pop xchg mov retq (bad) popq jp mov pushfq outsl pop out add jg push pop mov movsb movabs pushq flds or test (bad) pop rex.R fdivl imul movabs mov add sar (bad) outsb pop sbb stc test (bad) scas xchg (bad) (bad) mov movabs sahf jg rex.RX adc (bad) xchg and fistl adc cmp decl rex.X sbb jrcxz jbe rex.W fldcw (bad) rex.X add data16 sbb cli add or xor movabs nop mov push rex.WRX sub test loope mov (bad) pop add (bad) test scas movsb jbe or add cmp mov add scas shr (bad) rex.RB push xchg rclb adc rex.WRB (bad) (bad) pop mov add xor outsb mov testl ss sbb (bad) xchg rex.RB add sti xor mov add and retq lock retq mov xchg (bad) or xchg shr rex.WB rex.WRX callq mov adc add decl (bad) test mov (bad) and scas xlat xchg mov (bad) shlb mov lahf rex.WRX movsl mov rex.RXB (bad) (bad) jmpq (bad) jp lock out leaveq pop (bad) mov cmp jb add xchg (bad) rex.RB jne outsb rex.WRXB outsl (bad) push movabs bnd cwtl shrl rex.WXB out add cmp add xchg pushfq adc fistp subl add repnz imull jle xchg (bad) in mov add jnp (bad) xor (bad) xor xor jp stc repnz cmp and (bad) rorl in out add scas imul stos icebp js sbb (bad) xchg rex.R (bad) push fild xchg mov rex (bad) sbb cmp add mov rex.WRB add loope outsb jp pop out mov (bad) add lea test lahf sub data16 jo movsb mulb add xchg xchg xorl negl sub mov js (bad) mov mov add (bad) cmp es repz rex.WRX or (bad) out (bad) rex.RB add mov jrcxz rex.X xchg (bad) insb out or (bad) cld add xchg rcrl add xchg rex.WRX int3 (bad) (bad) retq (bad) pop adc stc or int3 push xchg cld out pushq cld mov xor cmp push rex.WX xchg ror xchg mov imul sbb push pushq pop (bad) xchg andb cld xchg and stos fcmovne nop add mov push mov jg fsubrp (bad) clc movabs shr add rex gs adc mov xchg cltd divl sahf rex.WRX rex.WRX add cmpsl decl jle add mov sbbl movsb lahf jns (bad) (bad) imul xorb (bad) data16 pop test adc pop (bad) pop gs jbe push lods xor movb fmuls mov jo pop test cwtl insl (bad) add (bad) pop addr32 mov lcall mov movabs lods jmpq push jmp adc in mov push callq loope rex.WXB jge (bad) sub or in mov cmpb mov fsubl jb cli jmpq or rorb movsb jg xlat pop fist rex hlt (bad) pop (bad) mov (bad) je lods jl cmp scas fiaddl xchg pop enterq test rex.X cmp rex outsl xchg (bad) frstor sub iret sbb lods (bad) xchg leaveq jae cmpb lahf mov jl mov retq fsts in (bad) sbb je clc jne ja mov rex.RXB js movslq mov mov (bad) js out sbbl pushq jns (bad) xor sub mov rcrl cltd push (bad) xchg or stos sub fdivs lahf (bad) sbbb jns idivq popfq adc sub jmp add retq movabs in mov pushq in mov lods push adc (bad) pop and xor add lods mov cli xor jnp retq pop lahf push icebp pop xchg outsl pop clc outsl incb std mov (bad) (bad) or fidivl imul (bad) pop (bad) scas out loop xor pop fildll adc sub and cwtl xorl mov jmpq jmp out add int (bad) rex.WRX jp fild sahf jl push out pop rex.WXB pushq jp jp xchg xchg jl mov out push data16 sub je nop mov callq add ss callq insl (bad) jl (bad) wrmsr rex.RB cmp lods in je rorb jno loop addr32 minss sub add (bad) rex.WR repz (bad) mov (bad) jbe adc (bad) (bad) std nop mov addr32 insb (bad) ss xchg push xchg add add test sub sbb mov add pop (bad) movsb add or mov or xor jmp or lahf loopne (bad) js mov sbb pop addl movsl push push (bad) rex.W jbe roll fcompl jnp movabs push xor jae add xchg sub add and sub jne jp adc cmp mov fistp adc test repnz mov (bad) (bad) sub jg sbb movslq ss scas (bad) jrcxz mov es je jb stos jae out add movabs int xchg mov in sahf movabs rex.WR mov mov jbe fistpll int3 lock jae xchg (bad) pushq cwtl add jmp clc sub mov shr cs testl add movabs (bad) icebp jle push rex.X stos rex imul mov add mov (bad) repz out add xchg (bad) mov (bad) add rex.R fldl cmc pushq jnp mov mov (bad) (bad) xor ja fwait and (bad) xor mov add mov sbb adc mov xchg fiadd rex.WR test mov add pushq xlat sbb repz icebp (bad) or mov rex.WXB sub fwait xor jo popfq stc movabs xlat vpmaxub ss xchg xchg (bad) ja xchg mov cld sbb (bad) mov xchg fldcw icebp jb cmpsl pop (bad) pop sub int3 popq mov adc (bad) lret add (bad) and rex.WRB sbb jp add xor std loope out subb iret add (bad) jb andl (bad) cmp pushfq sbb rorb mov (bad) cld scas or adc mov movsl mov add cmp movabs jo repnz xor (bad) cmp (bad) pushq mov movslq add fdivl cmp mov (bad) fs (bad) cmp loope rex push pop (bad) sub (bad) adc fs fnstenv cmp test sbb jae testl rex.WRX lea add jrcxz lock or (bad) outsb test (bad) adc movslq sub imul rex.WRB sub outsb rex.WB mov retq fidiv imul rex.W lock add pop (bad) lods add mov icebp xor jp clc adc push addb mov std mov xchg je xchg dec jmp fmul (bad) int insb test sarl pop pop cld mov jne sub fsts xchg out xchg mov cmp adc test xor push (bad) mov push movabs xchg or xor push and sub div movabs mov jb rex.R mov int3 cmp and stos movslq scas frstor outsl rorb (bad) mov jge pop repnz hlt jbe fmull sbb and mov sbb xchg jle xchg adcl (bad) adc loope rex.XB xor pop (bad) scas pushq js (bad) ljmp sub pop pop ljmp cmp negb jnp,pn jp lods jge es nop rex.WRXB sbb xor icebp and (bad) cmpsl jnp out ss pop adc (bad) sbb mov fwait retq lahf lock lods (bad) fwait (bad) fcomps outsb imul jae jno xlat (bad) cs (bad) (bad) mov xor jl (bad) add loop cmp mov jbe mov test roll mov stos pop (bad) (bad) xor hlt mov adc test and lods ss mov jge mov mov js vandps sbb fsts pop callq popfq push rorl push cmp sahf jl rol pop movslq (bad) (bad) mov cli add out movsl rex.X fisubr loop lods insl callq xchg xchg push jrcxz in and (bad) loop add (bad) es (bad) xor sahf sbb mov pop icebp rex.R insl rex.WX mov mov fsubp mov jne rex.WRXB fs xor test test jb (bad) movabs rcrl xchg lock add cmp and rex.W xrelease mov (bad) (bad) mov mov outsb push mov xor or mov add jle lret jmp (bad) jne (bad) out (bad) jbe push (bad) rex.WRXB mov xor or (bad) loope xor icebp mov jo pushfq stos cli andb out ffree add xchg imul add (bad) (bad) add pop movabs gs fisttpl enterq (bad) (bad) mov xor (bad) (bad) rex.WXB nop add (bad) int (bad) adc fwait cmc (bad) add (bad) sbb es movl and je (bad) bnd jb jg xor xchg in and stc rol adc stos jp add mov (bad) (bad) rex.W (bad) add xchg int3 (bad) stos xchg in rex.RXB cld (bad) cmp or xchg (bad) pushq (bad) lret js mov push sbb add lea sbbb and jp cli ficompl mov jg (bad) (bad) mov fimul sub mov scas xor mov sbb or (bad) testb and cmp and retq or add fisub add pushq mov add movsl mov (bad) fs mov icebp mov and pop test pushq jge rex.WXB pmulhuw xor jge mov add cmpsb rorb enterq stc cmp adc mov std sahf (bad) sarb cmp (bad) adc rex.R mov mov std rcrl jb (bad) icebp rex.WRXB cmp rex.WRB fisubr rex.WX int adc xchg adc jl movabs sbbl add xchg movabs xchg adcl jb add retq jg cmp cmp mov (bad) pushq roll js stc vpsraw leaveq scas jmpq (bad) jg add imul cmc fnop icebp imul mov sub movsl (bad) callq roll in mov decl rex.RB cmpsb or icebp imul loope jp incb xor add xor adc rex pushq std rex.WRX add sbb add (bad) mov jb and cltd xchg jmpq movl add and xchg movabs icebp xor imul add adc cmp outsl (bad) mov pushq mov fiadd jne (bad) (bad) (bad) jle lods stos out push sub (bad) retq out rcll sbb in (bad) cmpsl out rex.W sub test lods add outsl cmp jp add mov xor fldt callq add (bad) jg jrcxz (bad) add jp mov (bad) loope push push mov or addl sub es test jle add sbb add (bad) loope adc (bad) add rex.RXB add xchg rex.X xchg test rex.WXB mov (bad) jmp cmp mov or (bad) rex.WRX rcl sub test sahf mov data16 push ds stos repz (bad) fiadd jmp jl (bad) xchg mov rex.WR (bad) ror mov repnz pop push movabs mov (bad) (bad) xchg sub js or enterq insl xor xchg and int cltd (bad) jrcxz add fidivr push je cmp test (bad) jnp pop jmpq add mov jrcxz mov (bad) cmp (bad) add mov (bad) mov (bad) cmpsb ljmp jmpq mov jmpq (bad) mov mov idivb je rex.WRX rex.XB rex.R xchg lods jo outsb loope je jge xchg callq xchg cmp push (bad) xor xchg jbe push lods jmp xlat mov outsb ja pushq (bad) mov add cli outsl sahf sahf sub rex.B cld notl lock rex.WXB (bad) mov fs fnstenv sub mov lahf add add rorb push (bad) rex.RX add insl xchg inc pop adcl addb fstl rex.RX adc or stos jno jmpq jbe push mov rex.WRB fild jo rex.X flds (bad) pop mov adc (bad) push mov rex.X loopne lcall or and (bad) pop (bad) jle sbb lahf xchg jnp popfq push or icebp movabs xor mov xor pop jg fcomp xchg sbb xlat (bad) jl cmpsl test cmpsl and insb sub xchg jl pop xchg ficoml push mov movl outsb rclb fistpl xor (bad) movabs pop sbb jp nop nop mov push cmpsb mov pushq repz mov std pop pop cmp xchg mov (bad) add rex.WRX lock jb (bad) (bad) fwait xor jne mov or outsl xor xchg retq (bad) sahf add and mov add std out scas sub fldl push sahf (bad) insb lahf je sbb (bad) ja movabs sbb mov push (bad) (bad) adc add scas sarb add (bad) (bad) ss sbb or mov cli fildl cmp hlt lock push movsb enterq add out mov (bad) add scas jle gs (bad) push std jg lock (bad) xchg test adc hlt add cwtl sti subl out add stos cmp std add fldl cwtl mov cmp es cmp (bad) sbb (bad) mov add rex.WX (bad) add pushfq and (bad) (bad) movsl mov add (bad) out mov (bad) jne add fnstsw (bad) fistp jg cmc int add add hlt xchg movabs decl negl cwtl or add mov (bad) mov push test adc jns repz fdivrp push (bad) loope mov js rex.WR jrcxz jp xchg (bad) repnz add fdivr (bad) and xchg (bad) add mov pop add and push rex.WRX mov sbb (bad) add cmp add jle (bad) loopne movabs lea mov (bad) rex.WRX rex int3 pushq jns,pn icebp mov leaveq jle rex.WRXB jnp loopne pushq lock sbb scas xchg (bad) mov stc ja jge icebp rex cld jae push (bad) cmp xchg mov jno out jle and sub cld sub cmpsb lods (bad) stos outsb adc push ss add rolb jl fisubrl jle sub in add cmpsl (bad) clc (bad) orl std mov add cmp sub out (bad) mov stc jl (bad) (bad) imul and jae (bad) (bad) (bad) add adc fnstenv (bad) out jo push xor gs adcl jrcxz (bad) data16 cwtl mov je jae (bad) (bad) movslq xor rex add pushq (bad) mov xor (bad) push jle cmp jg pop pop gs cmp sarb (bad) push scas incb fnstcw or in pop push (bad) movabs (bad) push fwait add mov add jmp jrcxz (bad) mov psubd jns in int3 movsb cld fadds mov xor push adc retq movabs or (bad) cmp (bad) xlat pushq add xchg jmpq jle (bad) and jnp loope cmp test in scas mov and xchg jg (bad) rex.RX (bad) lret test xchg xchg sub jmp jno outsl adc cmp xor pop jg mov rex.WR popfq or out add add loopne pushfq or mov sbb mov lret callq cmp imul jo xchg movabs sti cmpsb xor in jne or verr mov mov fwait (bad) (bad) xlat add js sub add mov jrcxz test je (bad) movslq push xor xorl (bad) lock xor (bad) add pop rex.WRX cmp jne data16 movb out (bad) sbb je jns leaveq and jrcxz imul add ds pop mov jbe fstpt jle xchg mov xchg (bad) iret jp add in add data16 mov mov outsl cmp nop je outsb pop mulb repnz pop jg add pop roll pop mov sub add fcomip leaveq stos mov or subl add jmp shl (bad) stc mov in ljmp add and or js add cmp sub (bad) xchg add (bad) jrcxz mov add lea mov insb jge and xchg (bad) int3 mov fildll enterq xchg loop pushq (bad) xchg lock add (bad) jl jp in lea rex.WRXB add scas (bad) xchg js rex.WXB repz add and gs sti pop add pop cmp cs adc test repnz rex.W stos out xchg movabs (bad) out and add mov cmpsb (bad) rex.RXB add xchg callq rex.W xchg (bad) jmpq add int3 paddsb rex.WRB subl mov mov es insb sbb cmp rex.WB pop cmp ja sarb (bad) or data16 (bad) hlt in cs out or cli rex.B repnz push sub test sarl cmpsb fmul insl mov adc stos jb scas xchg pop mov (bad) (bad) and rex.XB iret testl rex.WXB cmp in xchg rex.RX jge add mov sbb rex.R imul (bad) rex pop rcrl cld or adc movnti add mov lret mov (bad) (bad) rex.B (bad) in rex.RXB (bad) cmp insl rorl or cmpsl sub push mov sarb popq scas insl jno mov and jo (bad) push fs jae cmp movabs cmc in jp test pushq sub xchg (bad) repnz andl mov psubsw out jge xor movabs scas mov (bad) (bad) frndint jmpq adc mov cli (bad) lods outsb leaveq sbb jnp jae rorl test mov jmp cmp enterq pop cmp jmpq jge insb jbe sbb adc in (bad) fwait jbe push rex.RXB in jp pop mov popfq mov sbb pop lret (bad) (bad) setae movsb movabs cmp xchg (bad) fisub xchg jb in mov mov mov (bad) lea jb adc and mov jno sbb notb adc rcll (bad) (bad) incl retq sub push nop ror sbb sbbl stc jbe (bad) jl and movabs push xor movslq notb push andl sahf fild test mov lods mov or xlat imul rex.R or rex.WR data16 fstps je xchg out mov retq xor insl es xor sbb xor icebp fcmovbe movabs cmp outsb fs test loop in outsb or movabs clc pop ss fstl insb add out or mov ja mov jb int3 rex.WX add or (bad) in movabs outsl push (bad) (bad) js pop shll lret ja sub shlb in (bad) jbe gs cli out sub (bad) and leaveq ja lods pop popfq (bad) mov adc fsubrl rex.RB (bad) clc int3 rclb cltd outsl out (bad) pop movabs pop sahf push lods jl clc and stc (bad) xor add and movabs or mov lahf jmpq or popfq iret outsb mov jge (bad) jmpq jo int3 or push or negb (bad) and (bad) (bad) movabs cmc jp (bad) sbb and movsl sbbb cmp cmpsb std sbb jg or jne out pop movslq (bad) jb rcr pop mov jp jle pushq mov add cmpsb (bad) mov rex.XB out loopne lods sbb rex.RB lea xchg clc mov rex.WRB nop in xor fild stos divl rex.R out (bad) add push mov pushq xchg cs xorb push adcl mov es fadd pop push gs adc jrcxz xchg sbb mov sbb (bad) rol out add mov (bad) jle retq cmp outsb rex.RX imul mov jle adc (bad) in loopne mov int jmpq js retq add push sbb jmp mov hlt or cmc xchg rex.WRX lret pop xorl jrcxz (bad) divb stc cmpl jg (bad) (bad) jle mov ja hlt or ds push push (bad) cmp (bad) out js test adcl add mov scas jae repnz rex.RB add iret mov (bad) stos push add fisttpl insl cltd or fs sbb (bad) cld rex.WB addr32 callq rex.WRX sti mov cmp mov add imul mov push cmp cs (bad) jle in (bad) leaveq in cmp sbb clc (bad) jge xchg je add jno xchg jbe xor rex.W cli cld push (bad) cmp callq (bad) jo add roll cmp js rex.XB and jae idivb testl mov xchg add icebp es cli (bad) (bad) sarb rex.WRB lock sbb repz addb adc cmpsl pop lock jbe and shrl lods mov add cwtl or cmpsb (bad) imul (bad) mov rcll repz cmp data16 add sbb sub (bad) xor loopne imul adc (bad) and test sbb pop add push movslq addl push or jbe xor fildl sahf lock imul pop mov cmp jle add callq (bad) out rex.RB repnz movsb push jmpq (bad) add ja push mov movsl cmp jb cltd repz outsl xor add cmp pop rex.WXB icebp jp push mov push jg sbb add rex.RX rex.WRX rex.WRB pop rex.RB (bad) stc rex.R pop outsl rex.WRX adcl jp cmpsb outsl add add rex.B (bad) mov xchg mov movabs add mov callq int adc (bad) jrcxz xchg add mov scas (bad) add xlat and rex.RXB callq test jb ja add (bad) (bad) cmc (bad) fcmovb add lods test add retq sub (bad) fidivr push (bad) mov clc (bad) andl mov in cltd rex.WB sarl or add add rex.RXB mov fs xchg (bad) movslq out add loopne (bad) pop sbb push jg (bad) (bad) add add fldl cmp sbb xchg mov loope sub fistl (bad) es cs lods outsb (bad) sbb jbe ljmp cmp int3 or mov (bad) insb mov stc jp (bad) jg scas xor pop pop rex.XB (bad) outsb (bad) jne loopne xchg push movslq je imul xor pop je in or (bad) cmp add movsb jl callq xor int3 jp std cmpsb sub add push pop add stos mov or xchg (bad) mov in add std fnstenv movsl repz add psllw add mov xor (bad) pushfq push fstpt sahf in sub lret push cmpb (bad) cltd nop mov jbe push in (bad) je (bad) and mov mov movslq insl and mov in cmp lcall lock cwtl movl add jmp cld rex.WX (bad) mov rex.RX adc cltd xchg stos jle in mov jge and xchg rex.W mov (bad) (bad) rex.W cmpb (bad) jl sub add movsl mov rex.X (bad) lock mov popfq cmp mov or (bad) jg fildl rex.RX add push (bad) (bad) sbb std cmp pop mov cmc (bad) or out (bad) outsl jno rolb out hlt js xchg pop jg jmpq rex.B adc pop jp mov fdivrs mov xchg adc sbb mov add jg push pushfq out adc add jnp add (bad) loop add sbb add or xor cli cmpsb add mov cmp lods in test adc (bad) add ljmp add fsub out pop cmp mov (bad) rex.RXB xchg es add (bad) pop add add pop add jne add xchg cwtl retq rex.WRB add xchg pop out mov add push sub cmp jle or cmp je xchg (bad) and adc sbb jp mov (bad) rex.WXB (bad) (bad) cwtl rex pop movslq pop fcmove and cmp xchg (bad) rex.WX movabs jp mov (bad) (bad) sahf adc pop notl rex.W gs sbb movabs pushq add cmp jae xchg movsl mov sub pushfq jae (bad) add pop test cltd rex.W popq adc mov xchg pop iret sub or and (bad) cmc (bad) int cmp cs adc add retq pop in jmp (bad) jno mov stc adc repnz (bad) data16 xchg (bad) mov sahf mov icebp jb (bad) and (bad) ja cmpsb rex.W insl lock fneni(8087 cmpsl pop xchg cmp mov xor adc add movslq pop (bad) add xorl scas pop test sbb cmp rex.B rex.R adc add mov rex.RXB and or jmp add jno rex.WX cmp loop pop (bad) push out xchg (bad) adc mov fwait test jb jl or jb rex.RXB roll ss out xchg pop mov popfq je sbb test shr mov fistpl xchg xchg (bad) pop jnp lret xchg rex.RXB icebp movq mov retq mov jl rex.WX jl sub and lock mov rex.X (bad) mov (bad) jle sti outsl rex.XB ja or (bad) imul xchg fdivr sbb and add cmpsb sti add movabs mov clc movabs jbe out addr32 mov rex.RXB test cwtl mov mov rex.RX loopne pop (bad) (bad) (bad) xor or rex.WB decb lods mov rol mov sub stc add xchg mov and imul (bad) sub xor cmpsl cmp and or callq mov jo rex.WB jns rol icebp stos insb cltd out xchg (bad) repz movabs jg cmp xchg jno cmp sahf iret rex.XB loope cmpsb rex.WRX scas loope jp xchg or retq gs jg out xor cmpsl rex.R data16 (bad) es movsb loope jg add test add pop (bad) (bad) and neg add outsl rex.B mov out movabs lret rex.X int3 cltd callq add (bad) shlb cmpsb cmc sahf gs rex.RX decl mov (bad) add mov flds or jle (bad) rex.WRX (bad) (bad) rex (bad) (bad) xor int3 mov enterq orl (bad) jmp push fnop push stc mov (bad) xor add xchg mov stc cmp rcrb (bad) rex.WRX insl rex xchg xor (bad) (bad) jb fs (bad) and mov sbb xchg addl push mov nop fild adc loop sbb jb sub stc sub mov (bad) xlat add movabs add in xor imul jno movsb sub xchg fisttpl lahf jmpq stos add mov pushq cs clc fild (bad) outsl (bad) sub mov xchg add (bad) sbb and or fidiv cmpsb (bad) add and out movd jrcxz je xlat repz (bad) rex.WRX stos add mov mov add lahf sub es ds sbb xor (bad) jae testb retq out ficomp outsb movabs movabs loop fiaddl out lock jnp andl push stos cmp icebp sbb mov fmulp std fidivl shlb sahf mov adc (bad) movabs jns (bad) mov cmc rex.WRXB cmc fimul icebp ja and xchg (bad) je sub mov sub js (bad) test or movabs sbb pushfq xchg in adcl fbstp mov xchg cmpsl cmp movabs add add rex.WRXB xchg and and (bad) jo jg and rex.W data16 xchg orl push jp movabs rex.WRXB mov and fistpll rorl repnz jge mov stc movabs popfq sub or fsubrp insl pushq jne rex movabs add push mov mov rex.WRB rex.RXB add rex.WRX cmp (bad) cmp insl cwtl mov (bad) cmp mov jns retq js repnz test rex.WRXB add sysenter shlb pop test (bad) movabs std loop rex.RB mov sti adcl movabs xor jrcxz movabs mov rex.W roll sahf pop rex fstps rcll pop jbe push repnz xchg pop enterq mov pop ja adc (bad) ficom xchg mov decb xchg xor push or xchg mov and out add retq pushq clc jg (bad) leaveq adc scas or mov rex mov or rex.X push outsb rex.WRB int3 lret jo test rex.XB out xchg lret fdivr insb (bad) xlat xor push mov xchg out stos (bad) (bad) xor addr32 cmpsb pop scas (bad) and (bad) xor (bad) data16 rex.WB jrcxz movabs (bad) xor mov mov fucomip cmp jrcxz add and jo movabs or and mov xor pushq clc sbb xchg (bad) pushfq push (bad) jmpq push cmpsl push (bad) sbb pushq mull sbb rex.WRB pop je mov jle (bad) jge gs mov movsb xchg lock jp sti jp mov js mov (bad) xor pop rex.W sub in push ss xchg or or jrcxz mov stc xor repnz (bad) ds divl xchg mov jmpq out jl sub or xchg rcll rex.RXB mov icebp xor mov jae push movabs sub (bad) jmpq pushq add lret (bad) and sub xchg rex.RB xlat mov and jnp lret outsb (bad) pushq lret add fstpt rex.X lods jb rex.WB xchg icebp jmpq jae in jl (bad) int in fs imull scas xor stc mov movslq xchg push push sub pop sub js mov out rex rex.XB retq insb cmpsb (bad) jge retq imul (bad) cmp jg (bad) adc sahf (bad) (bad) incl sub (bad) fisubr loopne js and andl movabs (bad) pop mov cmp xchg cmp iret cmp fildll rorb lea cmp xor insb rex.RB xor outsl mov add cwtl rex.WRB stos (bad) fucomip stos xchg (bad) (bad) fstl pushq mov int push rex.WRX mov mov repz je scas xchg fs rex.RX (bad) or rcll xlat mov sbb fsubrp fs sbb fisubl (bad) outsb jb jmp lods push lods cmp and cmc insb pushq movb imul pushq in jp add in leaveq mull fs jp (bad) jns xchg cli pushq popq out callq rex.WRX jle mov jo push xchg xor cltd rex.RB fs sub jg out mov xor mov adc add (bad) sub (bad) sbb xchg mov stos lods mov scas cs movabs cmpsl jle adc cmpl cmp mov push cmp or sbb add ja xor test mov (bad) scas push cltd cmp jbe fs rex.X mov cmpsl callq jno add adc test (bad) (bad) (bad) lods sbb (bad) jp push movabs lahf push out insb cli adc and (bad) jmp jp sub (bad) mov mov rcrb pushq add mov rex.WRB add (bad) addr32 (bad) ja scas repnz mov pop lret and adc sbb mov (bad) test (bad) fwait add lret pop adc (bad) (bad) cmp (bad) pushfq mov mull rex.WRB rcrl add std cltd xchg mov cmp jae mov pop adc rex.WRB rex.WRXB (bad) xchg sahf rex.XB add or lret (bad) xchg cmp push xlat mov adc xor xchg lret int mov mov mov or jb rex.WRB fwait jno nop and cmp sbb fildll hlt (bad) add (bad) nop pop ds in (bad) (bad) mov repnz mov rex.W (bad) pop sub xchg mov (bad) jnp lods test (bad) cld adc jns movabs add enterq je lahf test mov repz fsts movabs xchg (bad) cs lock adc jle xor std rclb rcll xchg out and rex.WRX mov add lahf rex.WB (bad) loope pop rex.RXB loop or (bad) jne add jns (bad) jg xor add repz cmp or sub rex.W std add stc fwait cmp add lret popfq nop outsb jb scas test mov mov std stos jb adc xchg (bad) testb vcvtps2pd addr32 in data16 subl sbb out add (bad) (bad) mov xchg movsl (bad) int3 mov lods incb sub (bad) adc pmulhw add (bad) callq and (bad) (bad) es add add js rex.WR rol ss rex.X stos sbbl add mov (bad) xor jrcxz imul add sub stc (bad) jb rex.WR stos mov add and lock jrcxz callq (bad) out or add push and pushq popfq add (bad) movsl cmp mov pop mov mov and cmp add adc xchg imul mov add popfq fldl shrb (bad) cmp add mov sbb cmp rex.RB rex.XB pushq xor enterq cmp iret iret (bad) mov repnz movsb mov adc cmp add icebp rex.B add (bad) scas jbe in rex.X cmp outsl add sub add sbb add xchg rex.WRB push rex.WRXB movsl mov sub add xchg ficompl sarl mov movsb sti (bad) push xor jb rex.WXB repz rex.XB fldt out sbb jg adc add test fwait outsl xor mov and mov mov jb (bad) icebp loopne mov (bad) xor pop sub pushq (bad) pushq enterq xchg mov pop mov stc jl scas rex.RB cmp mov out push adc std fild movslq jg cld or fwait and retq sub rex.R rex.RX add imul stos rex.WXB jl add rex.B rex.WB mov nop sub pushq xor jl out (bad) mov insb cmc add adc pushfq lods es mov jnp mov (bad) mov (bad) cltd (bad) rex xchg cld mov xchg fs imul jrcxz es test stos sbb lods js cmp (bad) movsb std cmp jns lret sub jmp (bad) rex.WRB (bad) jl pop jg loope (bad) push and jle adc xchg pushq (bad) mov imul cmp xchg add es outsb (bad) mov jmpq lods rex.WXB jl nop fmull int insb rex.WXB and movabs sub mov (bad) leaveq subb adc (bad) frstor jp cmp adc cmpsb retq hlt test mov cmp pushq (bad) xchg addl sarb ja clc cmp std (bad) imul adc loop (bad) mov adc lods lret push jns cmp jge nop mov pop cwtl (bad) outsb jl lret xchg leaveq rex.WRB xchg adc sbb (bad) (bad) int3 adc jmpq jg (bad) movsb adc rex.XB rex.B rex.R popfq (bad) fiadd jbe mov jle cmp xor icebp (bad) rcrb lea retq (bad) (bad) or sbb cli loopne lods pop jge (bad) pop test xchg (bad) (bad) in (bad) scas add out xor pop adc mov jne mov pop callq rolb rex.B ds sahf xchg rex.RXB add je decl (bad) pop xchg xchg and mov push or or xchg movabs int (bad) stos add xor sub nop fcmovne stc mov add (bad) xor xor jb,pt mov xchg (bad) pop pop or mov and test imul jg cwtl int add paddd andl cmp retw rex.WB rex.RX lock mov rex.RXB xchg cmp sbb icebp adc movabs test int3 jle add repnz imul fs mov and ds sbb int3 imul xchg mov cmp mov push (bad) (bad) (bad) (bad) fistpll fnclex test in loope pop scas adc adc jp sub add out cs jo xor mov add rcr or jle mov testb test imul add xlat insb cmp sbb test mov cld out scas in cmp (bad) jne test rcr rex.XB mov callq iret ja jne (bad) (bad) cmpl cmp scas mov xor xchg (bad) pushq and div (bad) sbb es xchg jge jge fbstp (bad) sbb sub test rex.B mov or (bad) cltd mov imul (bad) cli clc mov movabs cwtl rex.RXB rex.R xchg jg (bad) rex.XB int add (bad) pop add rex.WX xor rex.RX add cmp push add adc jb movabs iret or pop (bad) cli jp (bad) mov sahf xchg mov ds sbb fsubrl mov out stos add add (bad) callq fdivs xchg pop sub rex.XB jle (bad) (bad) (bad) loopne xchg add and mov loope mov cmp jmp mov insl rex.WRX mov test jno (bad) sahf add jp or fldt jl add rolb and add sub (bad) xchg and jge loopne fdiv add sub adc mov pop rex.RX add add fnstenv rex.W rex.WRX fs movabs scas stc (bad) add jle add lret fcoml fisubr (bad) jl (bad) fs insb popfq retq mov (bad) (bad) (bad) fwait lods pushq adc sbb sti mov push mov xchg push sbb or int (bad) repnz pop stc sti movslq jl xchg push enterq xchg or jp add jge fimul test movslq jmpq loopne clc (bad) xchg rex.X popfq popfq jl adc lea cmc (bad) or (bad) add pop rex.B (bad) jmp sbb fdivrl ja xchg (bad) sbb shl iret clc (bad) mov (bad) (bad) fldenv mov mov outsl add movslq mov rex.WX popq rex.WRB jg popfq jle pop pop mov test mov jae and retq stos jbe mov lea test add pushq test rex.RXB (bad) cmp adc rex.WB outsb retq mov (bad) pop retq sub pop mov adc mov int3 and cmpsb add add movabs in mov or lret (bad) (bad) orb leaveq je icebp (bad) fidivr add (bad) xchg jle mull mov movslq in add xor push jp rolb stc (bad) sbb outsb icebp jb imul je cmp push (bad) add test or (bad) xorb pop or or rex.RX add imul test jb outsl scas (bad) adc cmp cmp (bad) imul (bad) in (bad) (bad) rex.WRXB fwait add (bad) lods int ss jp pop (bad) mov pushq add sbb sub jge rex.RXB add add test stc pushfq data16 (bad) scas (bad) lea rex.W jg xlat xchg repnz in jno,pn (bad) (bad) je lret xor (bad) and add and pushfq add mov pushq rex.WR jp xchg cmp (bad) add imul iret add in xchg adc loope jb sbb rex.WXB out (bad) add rex.WRX sub pop add or push add mov mov pop mulb (bad) mov loopne add or or stos (bad) jg adc rex.WXB fs lods jno add add and stos jmp js es gs and outsb pop mov lods push ja (bad) mov mov icebp and in xor pop lea sub jb (bad) in pushq callq pushfq (bad) mov loope cmp out sub add cmp sub insl leaveq pop mov shll and scas pop sbb in mov fldl mov repz add xchg (bad) mov adc or mov or jp movsl pop (bad) ss rex.RB (bad) xchg faddl lret adc loop callq rex.WRX sbb dec std incb and mov jg fldcw xchg loop callq add xchg jmp adcb hlt push pop retq (bad) test rex.RXB rex.WXB insb xor mov mov ja imul (bad) adc jle out sub and mov cs push lock push add test mov cwtl mov roll cmp jb out fild lahf rex.WB xchg add sbb ss mov mov mov push mov lods jp xor push jge (bad) jmpq callq icebp push (bad) pop jl mov and adc cmc adc pop mov or or mov adc add or xchg add in sbb mov (bad) sub adc mov (bad) lods js sbb cltd (bad) cli mov xchg mul in retq addb icebp pushfq leaveq outsl pushq xchg fild push ss push xchg iret sub rex.R or pop addl jl retq adc ss adc pop pop jb leaveq lock add add add add xchg xor jmp scas cmc jnp sbb popfq cli (bad) flds or (bad) (bad) rex.WXB jl roll addl cmp xchg and lret gs sti iret rex rex.XB lret (bad) mov sbb xor pop cli add stc fnsave push (bad) ds rex.RB enterq rex.WB jrcxz outsl (bad) out test push in std cmp loope mov add lret orl test (bad) stos (bad) rex.WRX push adc pop jg gs stos movslq (bad) mov sub add pop jbe mov icebp cmc sub xchg add ficompl sub (bad) std jge ja lahf leaveq and sub cmc (bad) cwtl jo and mov rex.RX test (bad) mov mov mov sbb add (bad) sarl (bad) add mov insb cmp xchg and cmc xor mov jg (bad) sub jbe shr rex.WXB sahf nop or rex.WRX and jle jns add sub loop test insb pop jmp adc movabs jmpq pop and pop fstps and mov adcl (bad) lret sbb or retq add and add div cli mov test movsb shrl popfq add nop rex.WRXB fimull movabs jle scas mov sti mov add (bad) imul pop test push stos rex.RX mov in jns sub rex.WB jbe fadds lods mov mov mov add and incb pop add fwait mov and rex.R rex.WRX rex.WXB rex.X push retq sub rex.WRXB xchg add mov xchg (bad) add mov (bad) mov xchg push adc rex.WRXB jle fs rex.R or mov mov cmpsl popfq rex.X cmp (bad) rex.X xchg jb sbb xchg push mov add xchg imul push in add rex.WRXB roll adc movl xchg xor int3 (bad) add xchg and fdivrp or jp add hlt repz lods (bad) in (bad) jg cmpsb pop loope or xchg fcomi push add pop rex.B ficompl jnp movabs sub jne mov test (bad) sub rex.R rolb movsl adc pop int3 (bad) rex.X popfq repnz jrcxz or addr32 jl retq sarl mov loopne cmp sbbl cmpsb rclb in jo cli callq mov add test stos fwait movb sub jl jle mov (bad) incl rex.XB lods fcoms iret jle xchg test cmc sub add int (bad) hlt and sbb add xchg add (bad) add rex.WXB rex.R pop jp mov outsl xchg mov (bad) and (bad) jle add (bad) rex.WRXB mov clc addr32 (bad) xor jne add add js mov in jg enterq rex.WRB jmp xchg out rex.XB jg scas sub movb (bad) mov in cmpl add (bad) rex.RB pushq cmp addl insl (bad) rex.RXB lods loop stc test mov sti addr32 xchg jp sahf idiv push lods (bad) push (bad) (bad) callq sbb cmp outsl lea (bad) leaveq test xlat xchg scas mov shll add mov jae out add stc and pushfq stc cmpsb pop add rex.WRB lock add sub rex hlt and (bad) sarl or or movsb add loop sbb (bad) nop add rex.WRB bnd rex.WR xor add movabs pop cmp rex.XB test sub mov rex.WB test (bad) rcrb rolb rex.R push adc imul jle or rex test (bad) in (bad) (bad) add mov (bad) div cmp xchg push xor add mov (bad) rex.XB add loop jnp and push movabs (bad) orl pop xchg sbb cld pushfq sub stc xchg jp (bad) xchg adc xchg pop sti movabs pop xor add std jg fmull cmp lods icebp rdmsr sub add pushfq pop stos xor jne pushq xor jle in add pop xchg out ljmp js and (bad) and in (bad) and (bad) loop rex mov mov je jg adc mov lods push mov fs add subps test adc (bad) mov xchg jle push (bad) cld cmp shrl retq std mov lahf add rex.XB int fdivl add je loope rex.WRXB add (bad) mov xor outsb (bad) xchg add add xor jo ja jb xchg xor movabs iret mov add jbe jb in xchg fs jge (bad) hlt rex.WRB (bad) fwait jb (bad) cmpsl test rclb outsb out rex.WRXB nop movsb ja jge xchg sbb add (bad) (bad) in retq (bad) orl ja and shl and mov pop outsb lret cli iret xchg in (bad) out retq xchg mov push (bad) movslq ja (bad) or movsl (bad) xor outsb xchg jmpq jle pop sub mov sbb movabs jbe mov (bad) rcll insb jle (bad) fisttp cmpsb js (bad) (bad) (bad) mov push cld loopne (bad) ficoml (bad) or cltd cmpsb (bad) adcl je test clc (bad) outsb (bad) rclb rex.WRB orb xor mov sahf add lahf add mov add fstpl rex.WX (bad) add (bad) or (bad) xor cmp insb pop add ds sahf repnz pushq retq pop lahf (bad) jne jns pop and je adc add lods jo test (bad) repnz mov out repz iret add (bad) jns (bad) insl xchg (bad) (bad) movsl vcvtps2pd (bad) xchg and mov out rex jbe ficoml mov fnstcw (bad) adc mov rex.RXB sbb push int3 rex.WR xchg mov rex.W (bad) jns icebp (bad) xchg sahf or adc rolb test xor rcrl add add jl loopne jg mov xor fistpll and mov popfq (bad) (bad) mov sbb fstl (bad) (bad) mov pushq std xor (bad) (bad) sbb add xchg or (bad) mov sbb outsb test add jae add movslq lret punpckhbw xchg rex.RB test sahf xchg push callq jmp mov add cmp add orb and movabs scas rex.WRXB (bad) loope vcvtdq2ps push sub add movsl mov cmpsb add push add mov mov negl add adc rex.WRX rex.W (bad) scas xor add sbb rex.RX std jmpq jle popq stos in out and rex.WXB jle (bad) sbb test and add clc jne mov push mov scas jg jle mov sbb cltd fdivrp or movsl add sbb jg,pn cmp xor add shrl pop outsl jrcxz callq add add (bad) xor movabs js pop (bad) add movabs xlat (bad) sbb (bad) rclb rex.WX jl movabs js xchg sub (bad) loopne add rex.WRX xchg movsl add notl sahf xchg mov rex.WB mov mov (bad) pushq jge sub pushq out xchg fiadd xor jge movb fs test insb (bad) (bad) mov (bad) andps cmp add mov or js rex.WX orl or xor cmp ficom nop shll (bad) sub stos jno (bad) sbb jbe cs int3 (bad) (bad) pop (bad) mov fcomip push stos or add xor add pop gs lods movabs (bad) callq xor (bad) lods test adc add xchg sbb xchg es fs jb xchg je test xor (bad) hlt sarb mov jp mov add movsb sahf jle je scas mov (bad) rcll es fcoms test movabs lock cmp mov std jle enterq movsb roll (bad) callq jnp jmpq xchg repz jo pop rex.RX push mov pop rex fs rcll and mov xchg imul sub (bad) (bad) stc (bad) jl ss andl insb test lahf stc (bad) adc (bad) in xchg mov push pop cmp movabs loop imul pushq pushq cs add cmp in cld jbe push sbb add pop mov mov or popfq fistpll fwait roll mov sbb addr32 mov mov add cmp (bad) addb mov add (bad) adc add rex.W fs xchg rex.RX rex.WRX fldl xchg movabs (bad) push (bad) shlb jg shlb add fstps jle (bad) nop lret es jg cld sub sti (bad) sub lods and xor add cs or (bad) add ss enterq rex.WB test mov mov xchg and and idivb stos in xchg mov add sbb rcrl movslq fistpll test (bad) repnz add xor int out rex.WRB rex.WB movsl add notb (bad) repnz jl (bad) out xor lock push (bad) addl sub fbld and popfq jp or cwtl je outsl and add adc (bad) xchg ds add xorb jb jo cli sub test add bswap fwait push xchg cld movabs rex.W imul adc jae fidivr mov jmpq (bad) sub lods pushq add (bad) add (bad) icebp cmp imul and pushq decl stc cld and es movabs (bad) pop jb sahf mov adc fiaddl cmc push loope pop mov mov or cmp sub add js clc leaveq rex.WRXB ss jmpq lea (bad) lret imul jge,pn fincstp jp movabs add ds jle andl jg jnp int jb add push add jle stos jns js,pn rex.RXB ja mov (bad) add fstps and mov add pushq jge cmp stc rex scas cmp scas sub jo (bad) sub mov mov jno popfq cmp (bad) cmc rex.WRB test fisubr or fildl mov sbb mov adcl and jno add enterq sbb adc cmp jg xchg lock mov add or movslq add jns and sub stc jp jl rex.X adc mov lods sbb jle rex.W add ss jp jbe insl (bad) xchg add rex.WXB (bad) stc xor jge lock lahf mov sti and xlat fwait add movslq and fs jbe hlt rex.WR jg cmc scas or cmp sti rex.RX cwtl or cwtl out adc testl fldl push stos mov xlat add mov roll and cmpsb fisttpll cmp sar add cmp cmp (bad) jg iret loope jle xchg ds testb push add cmp out xlat jge sbb cld xor not (bad) movslq and repz mov rex.WB rex.RB push int movabs (bad) addr32 sbbl je pop (bad) lods loope xchg insb jge or push mov test pop xor jp int3 movabs movsb adc lods iret (bad) (bad) mov pop repnz mov xorl cmp push (bad) mov (bad) movabs push xlat test add callq jb mov mov sarl jns addl sbb ss jb xlat fs (bad) jl mov sub outsb add lahf add mov retq adc xchg ficomp jle add jrcxz sbb mov jp xor cmp and (bad) sub scas add test in jb pop add sbb repnz enterq in add push mov jne jp (bad) fbld (bad) (bad) rex.WB mov rolb movslq push add and imul rex.WX cmp repz (bad) rex.WRB rex.X fildl rex.WXB jl je or pop pushq mov mov add (bad) cltd (bad) (bad) sbb and mov jb (bad) (bad) rex.WR flds pushq addb fidivrl hlt (bad) pop adc addr32 (bad) xlat pop out jbe mov xor sub movslq adc (bad) rex.W stos incb (bad) xorl add fsub test add cmp jbe sub or add movsb mov and cmp sbb add in pop rex.XB fisubl xchg xchg lock iret fnstcw jb (bad) (bad) or add mov adc jno int jp mov jb cmp jnp movabs cmp cmp xlat test mov rex.WRXB (bad) lea (bad) add rex.WB notl stos rex.WR push icebp and rex.X shr (bad) stc movabs add stos rex.WXB scas mov sub adc push in ljmp add mov repnz js testl fidivrl (bad) jae,pn movabs xchg leaveq xchg jp push push repz loope sbb shll insl push jae jo jmp movabs stos (bad) insl rclb jle rex.WRB fisubrl xchg mov (bad) out mov in mov (bad) or roll movabs pop or ja mov (bad) (bad) add jno lods sub push jp stos rex.X rex.R mov movl push jno enterq sahf stc movslq lahf mov sub loope xlat add nop add mov (bad) data16 mov xchg jl (bad) (bad) xor (bad) jbe mov add outsl stos addl adc (bad) sub jmpq mov add sbb rex.B cmp push rex.RB rex.W (bad) rex.X (bad) add (bad) clc std testl pushfq or xor loope mov cmc cmp sahf lea int pushfq adc out jmpq fs mov lahf sbb add mov cmpsl jp pushq jle xor scas scas (bad) popfq jbe cmp and push mov pop rex.WR rex.WRB pushfq jle xchg pop mov out mov rorb fdivrs (bad) mov test clc rex.RX mov xchg xchg or mov cmp cmp xor mov cwtl push rex.RX rcrb (bad) int3 add (bad) imul add add rex.B sub rex.W xchg (bad) mov scas jae movabs lret add rex.X mov (bad) pushfq rex.RXB xchg add fsubrs imul js xchg icebp (bad) scas mov mov mov and mov pushq stos add data16 jno stos mov lods (bad) loope (bad) in rex.WRX fwait or lret jmpq leaveq xchg pushq jl int fimul rex.WX mov (bad) rcll cmc rex.WB rex jp imul xchg cwtl sbb icebp notl ja fstl sub (bad) jmp (bad) popfq add mov insb mov (bad) and add sbb adc adc movabs jge add mov mov mov data16 or (bad) (bad) jne mov cmpsb push push rex.RX mov outsb or cmpsb (bad) sub mov rex.RX mov cmp out adc (bad) jmpq (bad) pushq lret leaveq jl mov cld mov (bad) cmp test lock sub icebp int3 lret out (bad) (bad) es sub imul (bad) push int rex.WRXB or xchg popfq (bad) and scas addl test rex.WRX nop cltd mov test xchg (bad) jp cmp push rex.R jg xchg outsb js mov rex rex fsts pop fisub xor xchg in mov outsb faddl rcr or fisubrl pop fsubrs xchg out fcmovbe xchg outsb rex.XB pushq test sbb cmp fistpl cltd fimul pop cli lret pop sub sub pop push testb lahf (bad) in rex push sbb callq xchg adc mov in movabs add and sbb and loope (bad) (bad) enterq retq or movsl scas jge rex.WRXB repnz iret adc movslq icebp retq add scas mov outsb pop pop cmp js,pn cmp jge or fstl pop sub (bad) pop ficoml mov mov pop insl rex (bad) (bad) xchg mov and rex js push mov test sahf mov (bad) lock mov pop mov lods or lods cmp xchg pop mov cltd mov jno nop cmc (bad) (bad) cs retq fs pop sti outsb dec ja mov mov fwait or jp rex.WRX cld sub stos and rex (bad) jrcxz jg insb push rcrb sub lock mov rex.RXB gs test jmpq mov lahf mov cmp (bad) xchg loopne adc test hlt add cmpl pushfq add pushq add rex.X pop gs andb xor xchg je mov out pop (bad) (bad) sub and xor push sbb movabs push rex.WRB (bad) fildl xor test push or pop scas adc cmp add jmp (bad) sahf mov sub movslq mov lahf fimul jmpq xor xor incl pop xchg idivl retq movsb rex.XB (bad) (bad) jp add and mov push rex.WRXB addr32 idivl xchg scas or sahf push jle (bad) mov and add rex.WRX cs popfq (bad) pop cmp (bad) xchg xor (bad) (bad) sbb xor (bad) (bad) jbe sbb or mov jae (bad) push xor mov add jp (bad) ja test cmp (bad) cmpb push pop pop add scas rex.WRB data16 add cwtl scas rex.W in in mov push mov movslq push in pop cmc (bad) or add rex.W or retq pushq gs ja mov (bad) add rex.WRX (bad) pop add movabs rex.WR rorb jle cld rex.RX jle scas sbb out xor or add rex.R imul (bad) pushq add lret cld stos rex.X data16 pushq and cmpsb xchg push push insb jno cs lahf add cmp jrcxz sub movsl cmp rex.WXB imul iret movsb or (bad) xchg add and jge callq sub cmp jns adc sub rex.RXB lahf rex.WR mov add add (bad) mov cs rex.WB mov sbb pop push jbe cmp lret rex.W int rex.RX fcoms retq cltd pop rex.RX ja ds lret popfq jae fisttp push rclb test add sti hlt xchg mov mov rex.WXB rex.R lock xchg js rex.WX jle,pn xchg pop mov xor jle or (bad) mov cmpsb sub cmp movabs rex.X icebp add jb xchg jge (bad) popfq stc and jg lea jle test rex.WB sbb faddl cli sbb push jg (bad) in mov insb xchg sub cmc movabs jge jmp xchg add fs rex.RX sub lret cmp (bad) push add add (bad) xchg stos and and (bad) icebp fsubp mov (bad) lahf mov (bad) nop push ror mov add int lock (bad) xor lods push rex.WRB in ss movabs clc icebp and jb rex.WR (bad) xor add lods xchg pushq jne,pt fs stc cmp mov (bad) hlt and jo mov jae or maskmovq (bad) lea xor hlt mov outsl jg rex.WRB ja jp jnp mov pop rcll in add push mov (bad) xor add sub xchg insl push pop in popfq movsb add push xor rex.WRB xlat or es shld out rex.XB adc add rex.B xchg xchg add callq add jnp femms xor add add (bad) sub add (bad) lret test mov rex.RX stos rex.WX push and or insb fisubrl roll rex.WB (bad) push (bad) fidivr jb mov mov xchg sub (bad) es rex.RB adc sbb vpminsw scas movsb cld or rex.WRX add pop rex.XB ss insl xchg rex.R (bad) (bad) rcrl popfq scas rex.WXB loopl cmp cld callq pop retq add cli adc fs mov or jno xchg or cwtl leaveq fistpll and cmc add xchg rcl adc pop mov repz mov jno stos add (bad) rex.W movsb rcrb insb lods jb or and stc rex.WRX rex.WRB (bad) add sub ficompl jge jb adc (bad) mov scas jle push (bad) or add xchg or pop dec jns add jg mov (bad) and hlt jl (bad) addr32 (bad) ljmp (bad) add sub push out jle js in rex.RX fild jb movabs int3 fdivrs or jb sub movabs cmp cmp sahf jle push ja out cmc xchg jmpq or (bad) add xchg nop rcl std (bad) add test (bad) add xchg int3 out sub (bad) add test fsubrs xchg retq stos xchg or addr32 lods add decl (bad) add insb scas adc mov clc adc retq ja sbb (bad) jle scas (bad) shll movsb jg hlt add movslq xchg test cmpsb orl (bad) xchg movsl pushq sti xchg xchg mov sub pmullw rex.WX movslq jl jb mov scas and addr32 adc (bad) jrcxz (bad) out mov jo (bad) mov mov movabs sbb push mov jb loope pop rex.B rex.WRXB jl add adc movsl sbb jrcxz (bad) mov xlat rex.WRXB mov pushq rcr out rex.WRX gs nop pop and hlt jle xchg or sbb cld push mull xchg cmp sub cld jmpq ja xchg (bad) mov add or (bad) jae mov (bad) xorl xor mov lock test movsl sbb repz mov mov (bad) mov or push mov repnz out movabs int3 fadds (bad) mov pop sbb push jne nop sahf mulb or (bad) (bad) callq insl mov test cmp fwait sahf jp and add jle adc xorl and push xchg xor movabs pop scas repz add iret int3 pop movsl movsl (bad) jne add hlt (bad) or fadds pop rex.X (bad) (bad) xchg jrcxz movaps (bad) push movsb stos jae mov mov jns in jl (bad) rex.RX movabs add cmpsb mov jb add (bad) js (bad) xor int3 outsb fidivr (bad) jle std jle cld lret sbb mov in add (bad) int mov (bad) (bad) jae add cltd (bad) jp,pn subl rex.W or jns mov jo out pop jle cmpsl sbbl rex jno add imul gs lret callq or mov (bad) popfq and and stc add add (bad) mull movsb mov lods in jb or or rex.WXB rex.RX sub repz xchg mov (bad) sti xchg add loope gs cli outsl jl or (bad) callq out (bad) sbb rex.WRXB adc cmc (bad) and fadd or sbb push rex.W and lret mov add mov hlt mov fwait rex.XB mov mov in repnz cmp fimul clc rcrl add repz scas sub adc sub mov (bad) lea xchg fadd (bad) (bad) rolb rorl addl add movslq xor sbb rex.WX rex.WXB sahf jae enterq xor xchg jp fadds mov retq (bad) and jb lahf insb outsb outsl cmp jrcxz rex.WXB rorb mov (bad) (bad) rex.RB outsl (bad) cmp add xchg jp pop xchg (bad) movb imul add (bad) adc push add add retq add mov mov jp cmp (bad) movabs jl add loop lea (bad) adc clc jg fcmovnu sti out leaveq or (bad) add (bad) lods std add imul jne cli psrld mov stc (bad) (bad) push xor (bad) (bad) (bad) divb out (bad) sub sahf fldt (bad) and jle (bad) callq (bad) stc mov add adc adc iret push xchg xor (bad) (bad) mov mov add fmuls (bad) jno int add adc fnstcw adc jl movslq mov jno (bad) (bad) sbb rex.WXB imul xor mov add cld movabs lods mov movsl add mov sub (bad) int xor loopne add (bad) add push data16 sbb or movslq fsub add mov (bad) leaveq jrcxz cmp lret xchg (bad) (bad) xor fimull loopne (bad) decb shr jmpq jle (bad) jg xor pop pop out sub js div (bad) (bad) sub sub (bad) xchg (bad) (bad) lock add sbb mov add cmpsb callq add std jne (bad) or rex.B add (bad) add loop jo add outsl (bad) movabs jae (bad) add (bad) ss xor cmp xchg lahf sub jp xlat stos fiadd pop addb insl pushfq scas (bad) hlt loope push mov rex.XB repz fsubl movsb sar or lea icebp retq mov (bad) rex.W jg scas insl cmc rex.WRX xchg rex.WXB add fisttp sarl (bad) pop addr32 (bad) mov callq xchg cmpsb jno add pop ljmp addr32 rex rex.RX rex.WRXB (bad) jg jp push movabs pop mov (bad) jle out and (bad) fstl xchg (bad) lea jne rex.WRX (bad) loop xor outsb ficom or jb (bad) insl (bad) fimul loope add add xlat add sbb push (bad) (bad) es clc mov js xlat movabs test add stos push rex.RX rex.R cmp (bad) movabs mov (bad) cmpsl movb ds add and in jrcxz xor pushq jae and ja add add xor add lock cwtl rex.XB mov mov rex.WXB jno je cmp jbe cltd sar and (bad) rex.WX xlat movsl rolw add rex.B rex.R lods mov pop test pop sub nop push jp popfq movslq and repnz jae sub ja lods mov xchg repnz jns xchg je lods rex.WX or mov lods cmpsl xchg ss (bad) sbb jg fucomp mov (bad) test movsl andl pop scas rex.WX movslq rex.R (bad) cmc pop xor jnp cmp lret retq sahf int pop cli jge push (bad) pushq adc add cmp vmovups xchg cmpsl fistpll sahf hlt xor rex (bad) (bad) sbb loop addr32 jl (bad) (bad) xorl fwait test sahf (bad) and jno (bad) (bad) andl add cmpsl imulb stos in jle jae fidivl pop add (bad) jl pop sub mov (bad) push cmp (bad) pushq sbb xchg std orl vsubsd jl test pushq rcll and (bad) retq mov rex.WR jmpq sahf mov lea sbb mov (bad) jns rex.WXB cli ja (bad) decb (bad) add and mov xchg jnp mov rolb callq adc insb rex.WR (bad) add fildl addr32 xchg sbb out rcrl mov add jae add add cltd mov lret pushq or out (bad) and (bad) sub xchg rex.RXB push (bad) jl rex.WRXB int fs je add loopne add int3 fucomip add div add mov pop lods jne and push sbb push movabs loop add add (bad) sbb (bad) cmp lods pushq and scas sub add sbb fdivr add imul rex.R rex.B fnstsw add movslq lods pop xchg mov xchg lock in rex pop mov movslq nop (bad) jle jbe (bad) out je (bad) mov jg xlat (bad) xchg mov (bad) pushq scas xchg add movabs (bad) xor push (bad) xchg pop xchg (bad) add int3 xorb roll (bad) movabs out idivb jno std add rex.RX adc ss add xor jmp test add lock push (bad) (bad) pushq push (bad) pop clc jg sbb fmull movabs jnp mov mov sub and xchg icebp decb callq add sub icebp add stc fsts popfq out sahf cmpsl int xchg (bad) jge add movabs movslq rex.WRXB or adc std mov jne xor iret std popfq sub or sub jg (bad) cld ss (bad) cs sub push jb xchg mov in jno xchg sub mov imul mov (bad) (bad) jle lods jne jo jge adc push add fsubrl nop movabs test movabs cltd ss sbb add (bad) callq (bad) jg sub femms jp repnz xchg stos jge hlt mov push idiv mov jp cmp pop mov pushq sub mov add test and rex fs or (bad) (bad) sub out (bad) stos sub fsub jne fidiv xchg cmp add cld (bad) adc iret (bad) je rex.WRB jnp mov push add jg clc rex test rex.XB outsb jb gs pushfq mov jo jae sarl jb (bad) add loope gs mov es repnz fistp add xchg rorl (bad) decb retq fcmovne add push movabs push in lock xor cmp nop lea idivb lock add movabs cli xor (bad) add shll lahf icebp (bad) pushq lods mov add (bad) sub mov (bad) icebp movsb callq or lret xchg pushq add lods retq retq sbb fisubr and add sub (bad) add subq (bad) (bad) add push (bad) lahf rclb add push xchg jno add (bad) (bad) je push data16 rex.WRB (bad) mov sbb insl rex.RX (bad) sbb mov outsl test jb sub (bad) push lahf (bad) rorb repz out sub movabs rex.RB (bad) test hlt mov cltd sub (bad) jno and mov (bad) rex.W cmp mov lret jne icebp imul jl cli jp push and movabs fstps in xchg (bad) imul or popfq cmp scas outsb pop ja (bad) jns loopne add lods xor add sbb flds cmp push js incl and add xor mov add lret stc ficomp (bad) callq bswap sbb rex.RXB lock and cmpsb shrb mov rex.X pop clc (bad) jle xor fisubr test jg std (bad) jne stc retq jg orl ss out jnp jrcxz mov xor cmpsb mov or mov test xchg cmp mov cmpsl or icebp addl xlat (bad) rex.WRXB jle push sahf jle int3 push out (bad) pop (bad) and jg mov mov xchg (bad) mov stos pushfq jle loop push (bad) outsl mov jl cmp iret iret add (bad) fsubs rex.WRB mov imul movslq (bad) mov pushq and rex.WX and xor repz add lret jle push sti sbb sbb movabs rex.RB movabs add shlb jbe ficoml mov stos jg mov imulb cmc and add mov lock (bad) outsb pop sahf (bad) adc add in hlt rolb movslq push loop cmp cli or out push pop jbe shlb (bad) stos insl rex.RXB jp rex.WX (bad) sbbl pop scas xchg jo jle rex.R clc mov add add adc jb pop add std cmp jnp jrcxz repz repz and mov lret nop cmp mov ficom scas jns add rolb or and jo rex.XB rex sub xor or mov adc jmp pop mov mov es and xchg (bad) sbb cmp test jbe rcrl (bad) imul jo mov mov cmp adc repnz jge data16 push jp (bad) ficoml jg repnz test (bad) movabs add adc pop mov movsl shll or test (bad) push idivq cs out out cld lock and xor outsl (bad) add cs lcall retq mov pop rex.X dec ja (bad) or pop or (bad) adc fildl sub div and hlt rcrl ficoml out fnstcw cmp (bad) mov rex retq stc mov mov rex.RB es or rorb shrb xor mov iret lock fisttp cmc pop jmpq mov nop fcmovb ds je insl jne imul xchg rex.WRXB es js mov jnp int push (bad) test sbb fldt (bad) test rex.WRX leaveq sbb push cmp (bad) loop (bad) rex.B rex.B out mov rex.B jp jne (bad) (bad) and mov pop mov rex.RXB sub jmpq rex.WRXB js (bad) jbe test push (bad) mov jno jnp movabs push sub sbb sub test sbb lods imul xchg jnp (bad) (bad) (bad) pushq fnsave sub (bad) (bad) rex.B rex data16 xchg rex.WXB xor cmp rex (bad) outsl xchg mov fildll pop jns sub xchg xchg icebp (bad) and mov test (bad) jbe jle movsb mov ja scas (bad) mov xor popfq push outsb jne (bad) gs pop jne cltd stos cmp or pop xor sub jge mov mov xchg test sti xchg xchg jg mov jne leaveq pop (bad) mov loopne add (bad) jmp stos add push rorl xor sbb xchg jg js jns (bad) fiadd iret mov rex.WXB (bad) pop cld add rex.WB cmc mov push (bad) jno add testl or xchg pushfq cmp fwait cmp cwtl add mov push (bad) sub lret (bad) mov add rex.X add test gs mov jbe jg sarb or dec (bad) cmc hlt rolb (bad) jbe sbb mov mov icebp add xor (bad) add movabs test (bad) lock mov pop sub movslq clc movabs add cwtl andl mov add rex.X rex.B adc (bad) sbb (bad) or add popfq imul jno mov rex.WRXB (bad) jae add cmpxchg add jae icebp (bad) out lret add and cltd add jrcxz sbb jb cmp rex.WRB add or fnsave push ja add in cmpsb rex.X rex.WX repnz rex.WRB jg (bad) rex stos clc xor mov fistpl fiadd add ss sti xchg (bad) cmc add jnp or fdivrs rex.WX mov sarb enterq js stos fcompp (bad) and test xor (bad) jge or mov xor (bad) frstor or push popfq fdiv insb mov fdivrl sbb and cltd xchg imull fisubl jo out mov scas xor (bad) gs icebp jg mov jno mov subb (bad) add xor and pop and lock retq (bad) (bad) jbe (bad) jno lahf (bad) (bad) cmp add sub (bad) sbb adc adc pop add lret adc jnp add or sbb fwait jne rex.X lahf (bad) mov cmpl outsb mov xchg cmp add (bad) mov (bad) fmull movq mov add (bad) or fwait rex.X rex.RXB hlt adc decl push mov pop pushq lret mov test xchg rex.XB (bad) jb xchg xor lods add lea cmp push add loope callq add rex.WR movslq xor xor jae movabs jbe,pt sarl stc or cmp jg pop (bad) jge ss xor (bad) xorl movsb or (bad) data16 jnp insl mov xchg mov jmp jge mov cmovb cltd and (bad) sbb mov push jp adc cli (bad) cwtl faddp inc jmp cmp add adc es callq stc push mov mov repz stos cmp lods xor test sub (bad) cmp mov pop adc jrcxz shlb cmpsb fs icebp ds lods pop push pop test jnp iret mov pushq (bad) loopne movabs (bad) stos sahf sub (bad) sti pop (bad) pop jle mov sarl mulb rex.WRB cwtl pushq (bad) add and nop push fsubrl loop retq negb mov shrb std rex.WRB and sub xor jbe loopne scas divb (bad) xor (bad) rex.RB (bad) push scas add pushq insl cmc xchg pop add jle and xor rex.WRX lea lahf rex.RXB movabs rex.WB pop sbb lods mov movabs sbb xor movaps sub (bad) xor sub jp mov (bad) xor fs and or int3 xor (bad) in or mov jl pop mov jo mov (bad) (bad) push pushq mov mov insb movslq in stos mov cmc test roll insb out jp cmpsl jle mov mov loop mov and jmpq or (bad) mov sub rolb gs (bad) mov pop pushq jge sahf cmp cmp push add fs rex.XB xor enterq pushq add cli (bad) rex.WRB stc push mov xor rex.RX lods in (bad) (bad) addb icebp jp (bad) roll lods sahf stc jbe or lret jbe mov (bad) movabs xchg popfq mov (bad) lock push sbb mov add movslq mov scas sub fs rex.X jmpq xchg mov lea out leaveq scas test (bad) jmpq lea jb iret ds pushq (bad) fidivrl shll (bad) stc cld shll and (bad) imul adc lods mov in add (bad) outsl movslq fwait lods mov stc outsl xchg or pop mov rex jbe jns jb (bad) std fisubr xchg sbb (bad) (bad) cmp xor add add (bad) and sbb mov int pop add (bad) mov mov lods repnz xchg push push icebp xchg movslq gs imul repz retq sub (bad) outsb jae xor jne mov scas mov (bad) xor add mov in (bad) cli leaveq (bad) fadds int addr32 add sub movabs pop sti movabs outsb lods in movabs cmp rex.W icebp cmpsb sbb add (bad) mov jle mov test jge in lods outsb out and push xchg adc andl mov add xor pop or ja rex.WXB pop or rex.WRB xchg (bad) mov cmp xchg pop (bad) jo movabs add rex.WRB adc cmp jge in repz (bad) outsb movabs (bad) push stc (bad) sub xchg fwait cmp rex.WX pushq cmpb (bad) repz in push mov fsubl (bad) xchg es test mov std jb add (bad) sub (bad) flds (bad) fstpt and scas loop xchg jg jns push rex.RX retq fs add movslq xor (bad) xchg (bad) iret add mov push xchg add mov pop outsl (bad) push add pop pop or and cmp repnz rorb jrcxz jno cmpsb mov scas stc lea jb nop jg adc movabs loope sarb rex jne mov rex.WRX sub add jbe fucomp mov xlat (bad) gs jge pop jg test or fisttpl or lret add callq cmpl (bad) iret and sub pop movabs or andl movabs testl in (bad) add push xor mov int jno (bad) jae mov sbb imul xchg lock fsubrl sahf fsubs jns and add iret std loope cmpsb (bad) add leaveq pop outsb xor xor and cs rex.WXB and and pop out fcmovbe jl and lock mov leaveq rex.WB (bad) add (bad) push push test jo and add int3 test fild or fstl lahf shrl push callq (bad) add sub jne adc mov gs hlt std (bad) (bad) mov sbb fbstp mov add sbb jle ja hlt mov ds xchg rex.WRXB sbb or add movabs mov jle add sahf cmp mov enterq gs rex.WRX rex.WRB add (bad) and leaveq clc jb scas or andb cmp cmp cmp clc movl xor (bad) jl push sbb movabs push xchg movabs (bad) in jp rex.XB (bad) fnstenv test cmp mov rorb jg or sub add (bad) (bad) scas out xor add sbb retq movslq rex.XB cmp hlt mov xlat (bad) lock (bad) xor rex.WRXB (bad) jae pop lods pop add push fcomps pop mov mov (bad) (bad) retq push int rex.WXB mov es je adc adc out (bad) (bad) xor sub cli jns popfq stc xchg xchg fbstp cmc jg (bad) jge add in jle or jb imul out rex.WX mov jle add mov cmc (bad) in jne add mov shrb jns rex.WX movabs test jp mov sbb (bad) add rex.RXB mov scas (bad) (bad) repnz ja or leaveq pop movabs cmp or movabs jle or int3 mov push mov mov sahf add jnp adc rex.WRB in lods std rorb imul cmp test test rex.X rex.RB movslq (bad) ds shrb add push xor rex.R (bad) push (bad) jb in retq xchg js jle cwtl (bad) cmp fcmove add sbb lods (bad) xchg fidivl push xchg pop (bad) jb and and xchg (bad) jle (bad) outsb jrcxz je out movsl add sub movabs (bad) pop pop mov and in cli pop movabs push rex.RXB pushq movabs rex.RB add (bad) fmull jl rex.WB or jle js xor adc add (bad) xor test ja cltd jle out pop add fdiv sbb sarb fld cwtl add cmp rolb cmp (bad) movsl add pop mov sub repz gs add and (bad) neg movabs nop dec and (bad) outsb (bad) mov clc mulb fstps jb rex.WRXB cmp sub add jge xor jmpq je xlat mov and sub mov (bad) movsl mov mov test jge xchg lea out jg data16 repz and rex.WXB or (bad) xchg sbb movabs push add sarl add stos or rex.WXB add lods fcoms fs sub cmp rex rex.WX jbe mov (bad) movslq mov (bad) sti (bad) add hlt je insb xchg retq adc and mov rex.RXB add test xchg pop adc (bad) movsb cld int add mov add (bad) xor cmp (bad) movsl mov cs in gs scas (bad) rex.WXB icebp rex.RX and pop cli cmp jle jns jge (bad) sbbl (bad) out callq mov cmp sti (bad) mov jp repnz fwait js outsl cs cmp sub movabs mov cmp xor mov movsl insb std (bad) jo add push lods fldl cli jne (bad) mov js (bad) mov pop xchg es xchg xor and es mov jae xchg push and insl jge sub movb stos (bad) push outsl loope mov xchg orb mov push (bad) add in jge (bad) add or hlt mov cs (bad) adc js lock cwtl (bad) jrcxz push (bad) cli adc mov jle ficoml sbb ljmp cmpsl insl callq pushq xchg jg xor jo xchg jmp je (bad) xchg pushq adc cld rcl jnp lea out add sub mov cmp adc sahf movabs lea add xlat (bad) jae lahf (bad) (bad) and cmp ja rex.R addb imul movabs int rex.WB mov gs test mov fprem1 cmpsl callq add xchg or xchg mov add pop ss out test or (bad) xchg shrl rex.WX adc cli sahf int3 (bad) mov (bad) pop cmp clc cmc (bad) clc imul (bad) xor (bad) xchg mov jle lods (bad) sahf and mov out xor jp lea enterq repz (bad) jle jns popfq sbb (bad) cmpsb jmpq add xor (bad) sti add rex.W (bad) or cmp adc add fwait xor add movsl outsl add iret add (bad) (bad) insb cld (bad) test mov (bad) (bad) (bad) sub add js (bad) add int3 mov out in rex.X stos (bad) add std outsb mov add jg add (bad) scas sbb out and rex.WXB jne roll test and fnstsw imul hlt fwait xor jne jp xchg (bad) xor xchg movsl add or push sub jb leaveq and rex.RX fs nop addr32 movsb pop fs jle ds (bad) sbb add out cmp and ja jns stos jae jle ss lea cwtl int (bad) nop mov add fdiv (bad) sub (bad) jle rex.WRXB (bad) sbb lcall (bad) (bad) scas pushq rolb sub rclb loop jle cmpsl movabs scas pop jnp out ds ss (bad) xchg (bad) std decb int3 cmpsb jno jg xor adc rex.WR movabs and (bad) scas mov rex.B sub enterq jae xor add stos icebp mov (bad) (bad) (bad) xchg add and add (bad) repz rex.WX rex.XB add mov jnp add or (bad) insb push stos add xor in leaveq adc (bad) mov add cmc je add pop jne jl xchg fcos xchg mov stos add fisubr add fs sti cltd cmp xchg rex.WRB loop add jns cli add xchg (bad) es (bad) add shl je adc shrl or (bad) xchg add (bad) stos insb push jp or imul add callq xor movabs and (bad) cmp jo adc sahf mov enterq movsb (bad) rex.R (bad) pop (bad) loopne repz rex.W pop and fdivrs adc test movabs and xor sbb mov or xchg xor iret add std test rex.RXB (bad) data16 jg adc add sbb je add loope fsubs xchg int3 jg lahf push (bad) (bad) add in (bad) xor cmpb rex.X (bad) add popfq ds xchg sbb fwait rex mov rex.W movabs and jnp mov push lods (bad) rex.XB loop insl test repz sub pop gs mov ds add cld in test and mov (bad) jg in cmp jmp xor lret (bad) (bad) xchg fldt add push mov (bad) cmpsl (bad) rex.RX add push test clc pop (bad) ja pop rorb movsl pop jle rex.W mov je add pop cmp scas outsb jmpq movabs add jrcxz jle mov repnz callq (bad) loope jle cmc outsl add cli and add sub (bad) add pop xchg (bad) sub push (bad) mov icebp stos pop rex.RX fs add cmp sbb rex.R mov hlt jl lods jmp add cmpsb (bad) and xchg (bad) rex.W pushq sbb movabs xorb xor (bad) cmc movsb jl xchg repz loope mov sti push sub movabs pop (bad) mov jge jge movabs push sti sbb loop add callq sbb stc pushfq ficom enterq ja paddd (bad) push cwtl pop and outsb xchg nop sub push mov sbb cltd add push andb cwtl cmp callq mov mov pop push cmp sbb mov jns mov rex.WRX (bad) cmove mov lock cmp rex.RXB rex.WX sahf (bad) mov popfq pop (bad) iret in jp movsb push jae sbb int3 (bad) jp push (bad) rex.RB sub (bad) rcll cld mov rex.RB fwait lret fidivl mov adc lret fwait mov xchg (bad) pop cmp pushq and rex.RXB rex.WRXB (bad) cltd add xchg shr mov (bad) xor push pushfq jrcxz sbb scas mov fdivrs jg adc (bad) cltd repz std xchg test add (bad) or add test shll out mov add mov fidivl (bad) jg sub xor xchg mov push lock leaveq cmp mov rex.X ja jg fist jge (bad) xchg jp push stc or jmp jo sbb mov cmpsl fs test mov retq rcr adc push out (bad) lahf adc test jbe pushq jnp jnp in jae add iret push pop xlat sub (bad) mov lock iret imul pop mov out pop rex.X (bad) fs test shll (bad) push cmp jge rcr sbb (bad) jb pop add rex.RB rex.WRX lock add icebp jns rex.X xchg movabs and ja (bad) xchg std decl nop pop jle cmp lahf xor (bad) mov add int3 mov scas (bad) mov icebp rex.WRX xchg (bad) xor movsb rex.RX rex.RX rex.WX cs movabs in jno loopne enterq push jp cmp add push mov scas test rex.RXB rex.RB pop lods ficomp sub rex.RX rex.B (bad) mov scas test (bad) cltd stc (bad) je lret lods js adc cmpl pushq or test in sbb nop mov sti mov rex.WRXB mov std pushq std test fldl rex add jmpq xchg (bad) cmpsb xor lock and xor jno rex.WB scas stos cli fisub cmp movsb (bad) popfq rex.WRX cmp (bad) lret (bad) (bad) rex.RX mov (bad) movabs test rex.X rex.WRX dec mov sub push icebp pop retq xchg mov or cmp mov mov stc std in add movabs and (bad) cwtl mov adc rex.R fsubs movsb mov push cld fwait or and xchg add lret shll (bad) retq movslq sbb pushq imulb lea sub jge lods or jo sbb push and nop repz testb loop,pt mov (bad) je lret mov or pop cmp out sar hlt push and pushq xlat cmp sub scas and xchg lea andl loopne jg rex.RX xor test jp (bad) add mov (bad) jno in mov cltd lods fs sbb fsubrs jle sbb sti push sbb and jns pushfq movsb rolb loope fsubrp iret rcr insb add ds sub jo xchg push test mov mov in sub sbb ss icebp xchg fcoms out es mov pushfq push (bad) ss nop mov (bad) cmp xchg rclb mov cmc push adc add add mov jb fwait mov cli lock nop mov scas incb xlat xor and (bad) mov add mov movabs jae add xor jle in jb movabs add jp test rex.B mov imul cmc xchg pushq adc cmpsb faddl mov and stos outsl adc fwait cmc (bad) jae mov pop and (bad) js insl (bad) mov or mov push mov jg fldt rex.RX (bad) cli jp rex.WXB outsl and add rex.RB jo (bad) fldcw add jrcxz jle rcr add pop test (bad) xchg int mov (bad) sub rcrl push add adc cltd (bad) add imul jle (bad) out cmpsl mov bswap mov sar sub addr32 add retq cmp rex.WRB pop mov cmp test js sub pop sti jl fwait jb int add nop (bad) lods jae pand xchg std pushq cltd mov (bad) xor cmpsl xor rex.X pop (bad) fnstcw rex (bad) fist or pop enterq jge jge test and xlat xchg data16 mov test faddl pop rorl pushq xlat cltd pushq mov add adc add movabs cmp lret sbb mov add pop out jrcxz (bad) pop shll outsb and sub xchg gs lret jae sbb rex.RXB xchg push icebp js out lods (bad) jg pushfq jge jb adc (bad) cmpsb gs sbb test pop enterq mov sarb sbb and fisubl test mov (bad) movabs jl popfq push mov push and mov jnp rex.WX add (bad) add movslq sbb in (bad) sbb cmpsb rex.RB xor pop (bad) cmp jl xor js ja rex.X popfq push decb push (bad) fdivl sbb es lret sbb sbb (bad) jns mov jo mov rex.WX out xchg fdiv fwait (bad) add or mov xchg pushq push pop jne dec out xchg mov lods jb pop adc mov (bad) mov rex.WB (bad) mov sbb fdivp jmp cltd fsubrl jne sub insb js (bad) (bad) rex mov pop jg (bad) rorl mov imul repz nop (bad) xchg cmp jb loop xchg lods xchg mov fwait mov lcall scas stos rex.XB (bad) fldt test (bad) stc cli rcll out fildll fldt sub rex.W add (bad) xchg retq test retq scas mov add clc pop repnz loop xchg rorb leaveq (bad) fnstenv (bad) xchg jp cmpsb test mov push rcrb mov rex.WRXB jo cwtl movabs (bad) rex.WRXB (bad) push jl insl mov leaveq lods (bad) scas rex.RB rorb jae sub lock xchg fcmovnbe add mov push rex.XB pop sbb and rex.RX cmc sub cmpb and out ss int3 fnstsw rex.WXB pop (bad) xor loop sti shrb (bad) (bad) mov add es xchg pop loop mov cli cltd (bad) rcll and andb hlt jns (bad) mov adc (bad) mov (bad) stos jmpq leaveq movabs cmp cmp sub sub lea (bad) add rex.WRXB test mov cmp mov (bad) xchg retq fs rex.WB movslq (bad) fisttpl jb jl fldenv mov (bad) adc (bad) stos add jl retq movslq sub enterq out lret jb or jle xor jbe add jno cltd xchg repz and add push imul push fs int3 or fdivrl movl jnp in xchg mov add cmp jge add jno cld mov rex.WR (bad) adc movabs jne (bad) (bad) rex.WB repnz cmp add jg push outsb (bad) xchg rex.X and add and pushq pop (bad) lahf and mul xchg in add sbb gs push sub rolb rex.RX sub mov jle gs or mov rolb sbb jmp (bad) out jle add rex.WX jmpq push lea (bad) sbb add xchg (bad) insb cmpsb imul (bad) rex.W addr32 clc xor xchg (bad) (bad) (bad) jg retq and (bad) push add pop stos add movsl and (bad) jp (bad) cmp mov add adc subps movabs xor add add pand xchg retq (bad) jl (bad) adc pop and mov rex.RX (bad) (bad) jmpq sti mov je rex.WXB and rex.RB add adc rex.WRX rex.WRXB (bad) jmp fidivrl rex.XB cld rex.WRXB mov fdivr cmp icebp rex in roll mov (bad) fstl (bad) rex.RX mov (bad) negb lock sbb xor add mov fs sub mov scas fstps sbb sarb jmpq jp add sub (bad) jle loop rcr movabs scas fs js cmpsl (bad) stos (bad) jg and sarl movabs movsb mov jg add jmp fisttpl add sub jo data16 mov cs addr32 callq rex movabs xor pushq (bad) loop (bad) sahf movsb (bad) jg or push add rex.WRB (bad) fild pushq pushq (bad) add out enterq xchg insb stos movl xchg out in mov rex.WRX rex.RXB incb pushq add rex.R clc test mov rex.RX cs push jp rex.WX stc data16 mov mov xchg (bad) cmp (bad) js icebp movb nop sbb (bad) cmp ja mov add xchg iret mov xor adc push sub add (bad) mov (bad) (bad) mov jno push or or rex.R ja rcr addr32 jl (bad) rex.WB fisubrl rex.WXB mov jrcxz std cli retq fisttp add mov outsb in repz add lcall rex.W stc rex.WRXB add adc test sti (bad) loop cmpb cmpsl pushq mov out xor mov movb mov sbb outsl (bad) sub (bad) testb rex.XB out add (bad) mov lods add push and pushq (bad) (bad) mov xchg leaveq loope and lods adc decb jmp std add (bad) pop jle (bad) test xchg xchg (bad) (bad) enterq imul callq push lahf sbb ror push mov jbe push add je in (bad) faddl (bad) xchg stos cld (bad) insl bnd sbb jns (bad) ja cmpsb outsb mov out fldl add (bad) lahf sbb and xchg jg sub or pushq (bad) xor (bad) insl test cld popfq rex.XB lret xor add cs xchg cmp mov nop and pushq mov jp sbb mov popfq xor sub rex.RX xchg adc rex.XB cld and rex.WRX fs xchg rex.WX push hlt icebp in mov add insb cmc and addl cmp movabs rclb fimul (bad) (bad) (bad) jbe rex.WR sbb or (bad) subb or adc push int (bad) (bad) sti push out clc movb xchg sub add sub adc rolb stc rex.RB lods shrl add lret pushq xchg ficomp cmc movabs add adc rex.X scas ficomp mov rcrl (bad) mov negl (bad) jg xchg fldl sbb fdivs and jl mov lea (bad) mov fwait popfq jbe xor (bad) jmpq rex.X in xchg (bad) es rex.RB rex.WXB callq clc (bad) out pop cmc hlt (bad) je (bad) (bad) incl xor xchg sahf xchg movabs and cmp jb in jp in and rclb lahf test pop xchg xor js or jno jle pop mov rex.RXB (bad) jb mov mov push rex.WX testb cmc add divl or xor or out (bad) adc stos ja push rex mov add int mov mov sub sarl adc mov ss xchg xchg (bad) shll test mov jbe push sub out cmc (bad) test add movsl (bad) mov pushq incb jb xchg rex.R repz lock mov iret pop addb lret cld cltd xor (bad) jne and insb add rex.RX int3 insl andb add jo mov hlt rex.WXB mull rex.B pop cli in or lret cmc add insb jnp loope jmp shlb add or sbb imul jo and sub jle and mov rex.RB (bad) add xchg push test sbb xchg jl pop (bad) jle adcl stos mov add ficoml jge shrl es rorl rex.WXB loopne ds leaveq mov (bad) movabs mov rex.W jrcxz jns (bad) std lea callq jbe mov repz test pushq jp add imul pop test movsb (bad) cmp dec mov (bad) adc (bad) sar sub (bad) (bad) rolb (bad) sbb fidiv insb sub jb fdivl add fldl2e scas adc rex.W outsb add adc lahf push or jl orl notl mov shll mov (bad) pop push movabs fdivr and add wrmsr (bad) hlt cmpsb out lods (bad) imul jnp jbe movabs (bad) rex.WX rex.RX rex.RXB rex.RB pop and pop clc jg icebp sahf (bad) retq or push in jg sbbl (bad) lea jb rex addr32 scas scas fisubr jp add sub mov retq rex.XB sbb sbb sahf (bad) mov popfq mov loope pop jne or test add andb iret fist sbb mov rcr movsl xlat add sahf out es (bad) xchg ds (bad) jo sbb jp rex (bad) pop and fisttp sarl (bad) imul add pop sbb adc rex.RXB add shr add add push jnp addr32 sub mov add add jmp fs (bad) mov add gs in outsb and test xchg rex (bad) movabs nop hlt add repz push add mov pop pushq and xchg jmpq rex.WRB pop retq add lods popq xor jae add mov gs pop cmpl mov jno idiv jbe xchg cld add or pop outsb rex.WR (bad) and mov test add stos mov sub pop mov sub int xlat and add lret in loope nop pop jl mov push jle pushq sbb test lret add (bad) (bad) adc (bad) (bad) rcll retq rex.RXB mov jge (bad) xchg cmpsb sub add jp push jp cmp movsl int (bad) fisttpl mov (bad) rex.WRX movsl rex.X mov outsl jne jno (bad) (bad) mov rex mov mov lock scas sbb cmp rex.X movabs movsl sub jg mov imul iret mov imulb and jl,pn sbb or sbb (bad) (bad) (bad) jae jbe movabs fildll sub mov rex.W vorps mov lea pop add in sbb addr32 ja fist roll push jl scas repnz cld mov cmp mov (bad) jmpq add out lret (bad) mov mov xor (bad) in add jb lods repz outsb nop mov retq stc xchg xchg push jle gs clc xchg mov lret adc test outsb test (bad) (bad) jg pushq (bad) xchg mov add out cmpsb std lret pushq cmc jg sub rex.RX xchg jg rex.RXB lods mov xor (bad) xorl add (bad) mov subb (bad) scas jo int cmp std insb pop rex.WR decl adc (bad) add rex jl cli rex.RB push and pop jg sub (bad) movabs gs jg nop cmp add and test nop movsb ja addr32 jae int3 jns xor mov jp pop nop (bad) incb pushq rex.B fwait (bad) mov jl retq jg jb mov shll lea rex.WX xchg mov pop in negb (bad) (bad) retq add (bad) add (bad) outsb sub jge cwtl shrl jg mov popfq outsl jge (bad) push add movabs fisttp (bad) jp cmp xor sub pop scas xor add imul mov mov jg add or pand mov (bad) xchg add clc sub (bad) fs adc add rex.R rex.B rex.WX add outsb (bad) or xchg pop rex.XB mov sahf jp jmp insb (bad) (bad) push (bad) add jb adc (bad) xor rex.W stc cmpsb rex.X repz (bad) jbe stos js test xor or movabs lahf rex.WXB stc movsb outsl xchg cld xchg add add mov movabs test jmp jl cmp jg pop mov pop insb (bad) xchg retq movabs add (bad) jae push rex.WRX and sub ds mov loopne mov push jbe and shll jb ja fiaddl fbstp loop add pop sub rex.RXB outsl xchg adc imul mov adcl cmpsb mov fs sub rex.WRXB test xchg cmp (bad) jg (bad) mov sub add idivl int in (bad) adc rex.RXB enterq je (bad) negl cli mov push (bad) add in cmpsl xor enterq (bad) (bad) mov and jno cmpsl lret add sbb lea jle stc jp hlt pushq (bad) xchg jrcxz xchg adc or imul mov push adc add fadds movabs pop mov fimul xchg add mov cmp int test insl and (bad) movsl je jp jle int or push out add and cld add jmpq fiadd (bad) test (bad) mov cmp scas stc rex.WX stos cwtl (bad) mov (bad) push or pushq sahf movabs retq rex.W mov (bad) or mov in (bad) rex.RX notb cli mov xlat pop rex.WRXB mov mov mov mov jg mov (bad) add (bad) movsb in sti rex.WR xchg rex.XB jne jb cmp movslq add adc out stos jle or out (bad) jp jp mov fwait inc movsb (bad) and lahf adc adc xchg mov mov add rex.RX lret loop test loope jl rolb addl xor fs rex.R (bad) (bad) add andl add mov add loopne jrcxz callq imul out scas rex.WRXB (bad) cli rex.W stos push addb shl and jne insl or pushq add jb test scas test add sub mov add and pop andb lret or imul test cld (bad) cwtl (bad) and rolq clc movabs fbld mov pop rex (bad) (bad) mov stos faddp in (bad) add pushq jge stos imul lahf xor mov push and (bad) rex.X rex.RX rex rex.B (bad) jl adc (bad) outsb sbb xchg cmp ja push sub (bad) or cmpsb add retq lea add in xchg (bad) rex.WB es pushq cwtl pop mov jge rex.WRX rex.XB out jnp jle jge (bad) movsb mov pop pop testb retq jno adcl cmpsl out sbb mov (bad) fisttpll mov xor sbbb (bad) insl (bad) jbe (bad) mov movabs out or mov outsb jle sub xor push lods xchg sub retq mov rex.WRB pop (bad) jrcxz (bad) stos pop movsb mov stos rorb cwtl sub pop adc je (bad) lods sti rex.RB jnp ja jnp xor stos jle or push fisttpl ss xchg mov rex.RXB push (bad) (bad) cmc jnp (bad) rex.R mov jp (bad) fistp pop int adc push jne loop cmp (bad) mov (bad) jge add fwait xchg (bad) (bad) xlat (bad) push cld js movsl ficom pop adc cmp cmp xchg test rex.WR (bad) insl xor outsl push sub or addb jmpq jp jne cltd ja in je cmp pushq mov scas rex.WB push (bad) pop retq and outsb pushq xchg push retq xor jbe sub (bad) (bad) (bad) (bad) or rex jge add jle sbb (bad) movabs jp rex.WXB cltd fstp (bad) ds lods add cwtl (bad) lock stc jns (bad) lock jne jno jp (bad) out cmpsb iret cld lods rex.WRX int3 imul lahf icebp mov sahf cmc jge enterq (bad) push adc cli (bad) (bad) cmc mov (bad) sub movabs (bad) adc xor mov (bad) mov add sub (bad) sahf int3 cltd adc jge mov enterq (bad) pop xor std (bad) mov cmp addr32 pop (bad) out jno addb in rex.WRB (bad) jg idivl and jns retq xchg leaveq out (bad) xor jg cmp add adc (bad) rex.XB lea (bad) sub nop ficomp (bad) rex.W push test (bad) iret cli imul lods mov sti xchg xor cmpl push (bad) sahf movabs mov sbbl add (bad) shll rex.RXB callq (bad) fiaddl mov rex.W jg (bad) push pushq std push rex.RX in test (bad) ror mov lret stos mov jbe imul add imul fisubl scas xor adc ja addl sahf iret mov (bad) pop sbb (bad) mov lret jl insb fisttpll movsl add xchg pop or fldl adcl xor testl test (bad) xchg bnd xlat adc or (bad) jle or rex.WRX rex.RXB add cmc (bad) xchg sub rex.WR test (bad) stc fwait (bad) fstpt rex.WRB mov lret xor mov sub rex.W pop add test lahf lret loop cwtl fnstsw add or (bad) pop lods in maskmovq divl insl (bad) pop rex.RB in sub jno (bad) xor (bad) scas sbb ja (bad) jb jge mov (bad) insl mov retq add jg (bad) (bad) outsb in mov movabs xor lods and cli scas in andl imul out (bad) cmpsl mov in lret push sbb lock add cmpsb and addr32 add (bad) js imul sub cmp pushfq jp in nop (bad) out hlt stos add lods cmpsb add loop popq addr32 mov rex.WB (bad) push mov lods cld or pop scas jbe add mov fnop sbb sub xchg xor jrcxz adc (bad) (bad) mov pop rcl sbb rex.XB test (bad) pop ja (bad) push mov in shrl mov (bad) rex.WR rex.X cmp out outsl (bad) push sbbb cld movabs cmp and or movsb (bad) xorb mov int3 rex.RB shl nop test push lret icebp jle push fldenv (bad) rex.R rex.WRB pop rex lret js cld (bad) insb je cmpsb push jmp (bad) xor push sub rex.XB imul retq pop es add (bad) add mov xchg data16 test popfq jnp mov jo sbb negl int3 repz jmpq jmp iret ds idivb mov or adc outsl xor mov lcall mov subl in jns (bad) xor cmp xlat movabs pushfq (bad) mov (bad) xchg jns ds (bad) sbb leaveq lahf xor and sbb rex movabs setno shr mov cwtl push adc add (bad) addl mov cmp rex.WRB jbe (bad) pop movslq out or (bad) xchg sub int3 mov xchg cmpb cmpsl jb jg fiaddl clc add sub jrcxz popfq in ja out mov jle push lea adc cmpsb js rex.WRXB hlt (bad) mov jl clc scas xchg idivl add (bad) inc mov es ja sbb pushq out and nop mov cli mov xor (bad) stos negl rex.X xor shrl adc pop cmpsl mov mulb (bad) scas cli rorl jmpq scas mov cs cmp movsl repnz xchg (bad) or outsl outsb xchg nop xchg movabs enterq negl lret cmpsb or xchg rex.W (bad) pop and callq (bad) shl movabs rex.RX loope stc sti cmp repnz or rex.WR jae imul rex.WXB in rex.WXB rex.RX mov add mov mov cltd and sarl gs (bad) mov mov and (bad) cwtl (bad) xor insb pop xchg (bad) adc out sub pop jp callq mov rex.XB cmp xchg cmpsb addl fnstenv push push sahf int test addr32 xchg out mov movabs (bad) callq adc cmp stc out and cmp in clc sbb xor fsubp add add add int hlt and jle rex.WRX pop cmp jge sbb ds adc rcrl sbb in cmp rex.WRX fs (bad) xchg jbe rex.WRB mov shrb in add mov (bad) rcll (bad) mov rex.RX movabs rex.RXB rex.R loope int3 xor (bad) push popfq js sub sbb fnop stc mov pop and rex.B sar or out xchg stc cmp pop (bad) jne icebp in idiv pop jg or test push pop rex.WB push cmp fmuls sbb lea (bad) out adc xchg incb (bad) mov (bad) mov rex.WB fs xchg cmp (bad) sbb and adc push add cmpsb je xchg sbb jns and imul ja cwtl mov repz movabs fs (bad) push push mov xchg ss mov add xchg sub loopne scas mov lahf jg mulb movslq pop (bad) (bad) sub rex.RX sbb jl cmpsl (bad) rex.XB jae js xchg mov add (bad) adc add ficomp or mov and outsl (bad) in rex.X rex.WRX add and js add cltd int3 push ficoml (bad) sbb add nop xlat adc xchg add cmp mov (bad) roll mov adc (bad) movsl lods add pushq fisub jmp mov in xchg xor test movabs add ficom mov pop jnp (bad) es or fdivs fptan rex.X mov and movabs xor fistpll repz push (bad) and cmp stos mov jb and push fcoms lock gs rex.W add es jge rolb insl add (bad) mov xlat pop and rex.RX (bad) jns cwtl xor icebp fimul (bad) jb cs (bad) mov clc cwtl jle (bad) sbb test add and and shrb jge sti mov movabs xchg mov jmpq retq (bad) mov subl or (bad) jg sqrtps iret or add mov adc add xlat xor add pop cmp movslq (bad) fs scas je cld nop (bad) (bad) ljmp adc shll (bad) popq jb sbb jle adc sti (bad) mov xor test xchg pop andl in mov fcmovne cmc rex.WRB sub push and sub pop clc xchg jo ja nop outsb mov ja (bad) out lret xchg cmp jmpq xchg pop imull mov sbb stos sub addr32 rorl mov add (bad) cmp sbbl pop je mov pushq insl pop add mov rex.X xchg xor outsb add outsl out pushfq rex.WXB cmpsl (bad) jmpq (bad) incl (bad) jge (bad) outsl fld mov xor xor (bad) add imul es cld cmp cmp add cli push cmp addr32 mov hlt fistpll rex.XB movsl gs js rex.WRB and sbb xor push out or repz fldenv callq xlat (bad) rex.W mov cmp jg fisttpll jle outsl jo xchg mov cli psrad (bad) subl callq mov adc mov or fincstp cmc rex.WRX fcoms movsb jg sbb cmp emms jle jnp xor mov xor push scas rex.WR and (bad) shrb jg push ja or jl retq bsf test mov add or mov vpmullw cmc (bad) and (bad) jno xchg hlt xchg jge rex.WRB rex.WXB shrl xchg (bad) and mov js je test scas add pop (bad) and movabs jge fildll adc (bad) pop xor mov (bad) or (bad) (bad) scas (bad) xchg rex.WRXB insl cmp cwtl rex.X fisttpll sbb clc pop addr32 xchg (bad) cmpsl (bad) xor xorl mov mov push rex.R rex.B cmp mov jo insb movabs movabs xor sti sbb mov mov int3 cltd add (bad) xor out cmp (bad) test mov int xor rex.WB mov mov (bad) mulb test adc out (bad) outsl cmp movabs iret add lahf movabs jns gs outsb or std jge sahf rex (bad) sub or mov (bad) shll mov out (bad) pop lret movnti pop and push pushq jbe sbb (bad) (bad) (bad) (bad) lahf outsl add test xlat shlb rex.B (bad) fstpt out icebp (bad) (bad) cmpsb and lahf mov and (bad) or (bad) fcoml mov and jns imul (bad) mov sahf xchg fisubr fistp jle cld xor callq pop mov jl sahf movabs jb (bad) cli adc xor jo (bad) outsl mov rex.B lret lods mov xchg sbb test stos jp sahf fnstcw cmp pushq rex.WRXB jne repnz pop scas insl push mov cld je add pop negb rex.RX xchg js nop test leaveq loopne add adc pop lock insb test repz jns cmp out (bad) mov mov rex.X es rolb adc sub jrcxz cli movabs fwait mov subl cld loope jmpq nop sub mov (bad) imul rex.WX divb xor xor (bad) pop callq pxor or rex.RX mov add jb cs (bad) sti jmp push xchg xor pushq (bad) rex.X retq mov out xchg jge adcb jp stos xor gs rex.WRB rex.WB add jne enterq scas js scas movsl cltd xchg mov mov cmp movabs mov pop jp stos fidivl callq js adc sub xlat int loop fwait movabs (bad) decb ss rorb add fs loopne add and mov out add pop lahf cmp movslq (bad) (bad) push xor jmpq mov (bad) xor out lock ss scas retq xchg mov jns xchg jg cs fcompl mov (bad) pushfq and fistpll rcrb xchg cwtl and rex.WRX ds rex.R cmpsb mov loopne push add (bad) addb (bad) hlt add (bad) cltd push (bad) sub sysexit or lock rex.X cmpsb cmp and jns enterq sahf pop jnp notb add retq push (bad) js fdivr imul jne addr32 (bad) stc (bad) nop mov movabs ss outsb xor pushfq pop cmp xor pop add sar pop jbe (bad) cmp mov xchg xor ss jbe (bad) adc data16 xor push pop mov cld stos mov jmp rex.RX cmc add outsl (bad) add insb cmp push xchg add mov icebp pushq add cmp or push retq add lret popfq mov (bad) rex.XB rorb jne clc rex rex.WX out sub fnstenv (bad) jp pop (bad) (bad) mov stc scas jbe je scas (bad) rex.X rex.XB jle jp add sbb scas and or (bad) (bad) in jne push push rex.R fwait (bad) pop jg ja lret rex.WRX cmpsl lahf roll lret retq movsb mov add lret xor sbb add adc rex.X rcll js cmc movslq jg jge xor rex.X add xor add ds hlt sbb jg push (bad) in jb popfq lret sbb adc (bad) jo rex.RB loopne (bad) cli (bad) push lock (bad) hlt add scas jp loop out jge (bad) jl jbe (bad) fild xchg cmp ror mov (bad) mov cmp sbb pop sub in mov retq repnz mov loope add jrcxz icebp mov (bad) in mov nopl (bad) (bad) jle test add (bad) lcall mov jne xor ds pop xchg callq add (bad) fnsave (bad) xchg mov xor and (bad) (bad) mov add adc fs add pop loopne (bad) sti (bad) outsl (bad) xor xor xchg stos imul jns (bad) (bad) movabs btr movslq xor out add xlat jrcxz movabs cmp sbb mov (bad) add push mov sahf cmp rex.WXB sub jns cmp movsb cmp jge add sub mov or insl rex.WRB scas jno pop jge rex.XB cli and fidivr in jg jo cmpsb negb rex.X movabs sub or xchg fistl xchg xchg add ror sbb stc jo or mov add or add and movsl int3 cltd (bad) or adc mov pop fcompl add sub mov leaveq icebp movsl sahf push (bad) mov cmc push xor (bad) and pop cmpsb repz hlt xor test add fs push sub fisubr setl jo fs int xchg subb addl out cwtl lods mov cmp jp xor loop (bad) in mov (bad) lahf sub cmpsl mov mov vpsllvq scas (bad) retq jae rex.RB sbb xchg nop int3 jbe imul sbb xchg (bad) (bad) lret repnz pop cmp test mov mov in xlat cltd fstpt rcll push pushq push pop ss mov cld adc imulb test out add movabs jnp scas add lea sarl sub mov and lods adc cmpsb cmpsb rex.WRB mov (bad) shlb scas stc fdivrs pop movsb fdivrl sub push adc adc xor and add mov loope mov jle pushq (bad) and add lret (bad) cmc rex.WRX rex.X lock mov (bad) (bad) add repnz sahf sub xchg movslq add pushq jne sub mov jb addr32 cmp enterq add (bad) lods xchg rex.RX shlb lock cmp fdivs (bad) push cmp pop outsb out cmp (bad) rex.WXB jp mov mov sar mov in mov test add gs lea (bad) iret rex.R stc rex.WRX jb mov sahf add mov xor (bad) mov std sub add sbb scas rex.XB jae rex.WRX xchg (bad) xor xor pop data16 clc fs push shll rex lret in push test rex.WRX xchg je or mov add (bad) fs lock (bad) xchg jae cmc add add cmpsb add (bad) pop cld mov fnstenv fs xchg jb sahf imul add testl cmp add stos cmpb mov test rex.XB adc js add xchg add xchg cli fdivs push test pop fwait enterq outsb test pushq movabs adc lcall adc rex.WR sahf lock add js leaveq (bad) adc enterq out rex.WR lock rex.WRB icebp sahf add sbb pushq jp xor cmc (bad) jrcxz pushq pop (bad) std ss (bad) jnp sahf jnp jb mov iret int loop scas cmp lcall outsb push (bad) jle (bad) (bad) decl cwtl jmp sbb jp testl iret mov (bad) adc (bad) xchg mov leaveq pop lods pushq rex.WXB jb add in mov adc sbb lret xchg lahf cmpsb (bad) and cwtl test jmpq or jmp pushq lods jmpq rex.W add (bad) (bad) subl sbb fs (bad) (bad) adc enterq rex.WRX push fist cmpsb fild rex.RX rex.R rex.WB rex retq mov hlt push movabs (bad) jle adc (bad) lret xchg (bad) rex.WXB mov sub ds add xor sub xor (bad) je cs mov sub push pushq mov subl xchg (bad) ja lahf movabs lods jne push rep leaveq (bad) rex.W insb mov cmp fst xchg test clc pushq jg or shrw jbe xchg fdivp imulb lret jo rex.RB pushq mov jne mov pushq xlat rex.R (bad) movabs (bad) imul (bad) pushq movsb lods fs movsl cmpsb not rex.WRXB (bad) fwait jbe or sub or and outsb and cmp mov jmpq test scas outsb insb nop (bad) (bad) (bad) fisubrl roll rex.X sub callq pop rex.RB out roll pushq pop callq mov xchg jrcxz insl in xchg pop test cltd jo cmp (bad) and negl leaveq xchg fsubr pop rex.WRB fstpt (bad) cld test scas fdivl push imul cmp (bad) mov and in js add jg or (bad) movabs cli (bad) (bad) fs xchg (bad) sahf jbe idiv (bad) cmc (bad) notl mov imul pushq mov movabs or (bad) lock mov test rex.WRXB repz jo mov mov sub mov jb hlt cltd jbe outsb and jrcxz lret (bad) jg pop (bad) imul js popfq jg mov rex.R repnz (bad) cld or cmp outsb lods adc adc cmp cld std jbe xorl es (bad) retq insb in rex.XB and mov (bad) (bad) fsubl int mov fldt mov push pop in jmpq mov pushq jl stos lret (bad) jl (bad) lcall js rex scas rex.XB xor out movslq decb imul rex.WRB rex.B xlat js iret lea jnp or mov test (bad) push imul out (bad) xchg push (bad) sub cmp test movabs xchg add jl movabs (bad) insl xor fstps (bad) out hlt add pop in or in rex.WRB fildl add (bad) (bad) rex.RB mov cli (bad) cmpsl movabs sbbb sbb outsb lods jmpq out pop in mov add jbe fwait rex.WRX (bad) enterq lcall adc (bad) jae xchg push fstpl jne cmp mov mov addr32 xor add (bad) sub cld sahf test fiaddl mov out jne,pn cmpsb (bad) insb adc imul test add sahf mov xchg or jmp jg movabs cmpsl mov stos rex.R (bad) decb ja sbb jp rex.X (bad) cmp fptan leaveq movabs pushq jp jge lods ss fwait testl mov (bad) mov rex.RX mov rex.B (bad) pushq sub (bad) rolb std addl (bad) mov jle jg (bad) (bad) icebp rex.WXB int rex.RXB test add sahf jb jle pop fimul cmp out cmpsb stc cmp pop or (bad) mov jb rex.X cmpsl mov jp jmp (bad) mov rcll jrcxz (bad) add fwait sbbl rex.R jp sub xchg add (bad) rolb movsb shrl pop sti out lahf sbb out add adc popfq (bad) (bad) xor cmp (bad) add callq push sbb in adc jno rex.W (bad) (bad) (bad) rex.WX add and rex.WR add push push mov or sub mov stc add xor xlat mov jge rex.R (bad) lock stc es or lods rex.WRB jg (bad) rex.B pushfq push sbb rex fldl rex.WXB iret mov xchg pop or or lret mov cmp pushq push xchg in decb push and push fldt (bad) stos cmp add xchg out mov sbb add mov je adc mov sub or jmpq enterq mov rex.WB or fcoml add ds rex.RX jbe and mov fsubp (bad) lahf retq jns or rex.WRXB sahf cmc in lmsw cmp test xor fldt jbe sub jno out hlt mov sub add mov and fwait or (bad) mov sbb (bad) mov xchg scas adc jg shrb rex.WR imul (bad) mov movabs loop xorl jge jmp fwait outsb jb popq sbb cmc sub (bad) je cmp xchg cwtl in adc mov lret mov testl add movabs adc rclb xchg push pop callq mov insb nop jg adc xlat sti lret in (bad) xchg (bad) xor mov clc mov pushq enterq xor add sahf pushq sub jb or sbbl enterq iret xlat add hlt (bad) and data16 mov add push jmpq xcrypt-cfb cmpsl and (bad) es sub xchg add callq add nop (bad) enterq mov (bad) lods mov insl add xacquire jl sbb jne test rex.XB adc mov cmp fld jl rcl add movabs sub or push rex.WX rex.RX (bad) nop sbb pushq sbb rex.WX push addr32 rex.WR cmp pushq cmp insl mov sbb (bad) jp sti sbb or int (bad) and rex.WB lret outsb pushfq notb (bad) jge or lret sahf int3 movabs imul sbb add lahf jb jns leaveq (bad) add xchg and xor testl lahf rcr str jno out jnp jle sbb test pushq jnp cmp xchg (bad) cli je mov add (bad) je and mov adc and mov add adc loopne xchg xor jp rorb pop (bad) outsb add incl mov (bad) lret sbbl cli (bad) rex.RX rex.WRXB (bad) cmp or push rex.RB jmp add callq (bad) (bad) xchg mov fildll mov adc mov and (bad) (bad) jbe testb out test fwait xchg push add fwait (bad) movabs shr add jbe addr32 cs lret fsubr mov mov xchg adc jne cmp sahf subl rex.WRX mov nop mov mov lods and cmp sti jp leaveq imul sbb cld fcoml sti or pop pushfq (bad) mov unpckhps out xor test (bad) or (bad) iret movsb js mov (bad) sub rex rex.WXB jnp nop subb pop sub in jg mov cmpsl xchg mov (bad) add (bad) divb sbb je sub in movabs mov mov (bad) mov fsin and addr32 mov movsl not cmpsl rex js mov repz pop push sbb rex.WRXB (bad) or add fs rex.XB test push cmpsl push ss in lods imul pushq (bad) jg mov pop (bad) cwtl clc jae test rex.WX rex.WR jp jbe and pop cmpsl in out pushq pop (bad) jne es clc hlt rex.RX rex.RB jmpq xchg rex repz (bad) stos rex.XB adc cmpsb rex.WRB jb cld mov cld (bad) (bad) int3 or rex.WRXB lock or fidivrl mov cmp and insl in rex.WRX je jo mov icebp mov or jb (bad) imul (bad) adc cld stos (bad) rex.RB repz add insl rex.WRX or mov mov (bad) mov stc jnp pop rex insl add pop stos jbe loopne cmc out cmp movabs movsl fdivl sahf jrcxz decb sub add xchg pushfq enterq movb jbe and imul je (bad) mov add jmpw sub pop mov sub stos (bad) cmp sti add rex.W mov enterq adc out (bad) movabs cmpsb je rex fsts add insb scas adc adc pop jb pop rep pop mov rcrl push rex.WRX es in xchg cmp fstpl cld or lods leaveq mov mov jg (bad) add callq cmp cmpsb fildll test rex.WXB mov jg out cli and sahf pop mov in rex.X or insb jne (bad) (bad) in rex.B rex.RX hlt movabs add movabs jo test (bad) pop enterq xor movabs icebp sahf mov mov (bad) rex.WRX pop sbb rex jns fnsave rcll xchg ja push adc mov xor mov (bad) add add fs gs ja scas (bad) adc (bad) dec out lret mov rex.WX stc mov stos rex.W cmp gs or rex.RXB mov jae mov pop cwtl sub pop add pop movsb icebp (bad) movabs xorl (bad) sti jae pop lea add jle rex.WRXB (bad) jbe jl mov out jg retq sub sbb push out mov jnp add xchg sbb callq movabs xlat cmc movabs (bad) (bad) mov divb cmp adc mov imul outsb popfq scas retq cltd cld outsb mov add out (bad) lock retq add in xchg add fsub add ss outsb and sahf jle cmp fbstp rex.WXB (bad) lods lahf jg jns (bad) in sbb jno mov cltd (bad) (bad) add mov in push sub fisub insb (bad) repnz (bad) stos jo out jrcxz cmp je adc adcl mov iret cmp mov add pushq out adc movsb pop xchg cmp cmp add (bad) sub orl rex.WB imul sbb rex.X sbb (bad) push outsl and mov add (bad) mov lods xchg outsb cld (bad) and (bad) (bad) mov mov callq and and (bad) xchg jl mov rex.WR pop or jbe mov int xchg sar add or test (bad) pop jmp jno cltd push cld rex.RXB outsb jmp jg add add rex.WRXB or or outsl rex.RB rex.RX (bad) (bad) fidiv addl jg in pop faddp xchg xor pushq mov movl mov lods and fidivr scas sub (bad) pop clc scas iret jb (bad) lods sbb (bad) jns (bad) add cmp sub (bad) sahf (bad) sub mov rorb jne js cmp adc fldl pop mov cmc rolb adcl fwait lret jb rex.XB or stc leaveq jmp insb add test enterq adc std incb insb (bad) ja rex.WRB (bad) cli xor xchg loopne lret and and sarb rex.WXB (bad) jrcxz lock (bad) push clc jb (bad) stos out movabs stc sbb out (bad) psubsw xor or movabs jg shrb and jns (bad) callq push jns idivl mov in (bad) and jo fidiv cld cmpsb add xor add in cmp (bad) xor xchg add movabs push (bad) (bad) or and rex.B (bad) jbe rex.W sbb (bad) enterq (bad) (bad) stc rex.X (bad) cmp scas sub mov stc lss xor add fiadd sbb (bad) pop jp lods add test fistl pop push sti enterq test movabs callq (bad) stos xchg push (bad) add lahf movabs out rex.WR xchg (bad) repz xor sahf mov stc lock add (bad) sbb lahf test add lods add (bad) js push mov and pop fidivr push (bad) hlt lods (bad) rex and rex.W mov mov rex (bad) cmpsb rex.W jae insb (bad) push cmpsl xchg movl decl (bad) rex.XB push adc (bad) mov jle cmp loop movabs lret (bad) add (bad) xchg rex.WXB mov pop adc ds sbb (bad) rex.WRXB paddd xchg add subl (bad) xor sub adc mov in adc add rex.X pushfq (bad) cmpsl cld adc or ss notb fs add add repz imul add (bad) jg (bad) pushq push test xchg jl (bad) lock adc xor (bad) mov scas int3 adc mov test (bad) stos mov adc (bad) in jne add (bad) out imul (bad) movsl mulb xor and popfq psrlw fdiv rex.W nop (bad) add mov rex.WR popfq push movabs jmpq test mov movabs lea (bad) add xchg and cmp movslq (bad) rex.WR rex.WX in loope rex.XB push xchg add out mov callq mov rex.WX decb (bad) rex.WRXB hlt add rex.W rex.RB repz js (bad) adc testl nop add add callq adc fisubr jg lret addr32 rex add in rex.WRXB sub jg and push rex.WRX in xchg xchg add movabs jrcxz sti lahf mov or add mov push out gs jge mov jg cmc movsb xchg rcrb xor imul (bad) (bad) push fstpt test jp rex.RXB std mov decb xchg repz (bad) jb xchg xchg cmp nop xor mov and mov movabs cmp jle (bad) (bad) (bad) and lea sub popfq rex.RXB or movsl (bad) rex.RX or add ja sub jle nop out jge sbb stos testb sti es add pop (bad) lods leaveq add or push sbb add in negl test sub (bad) fldl movsl mov es xchg (bad) or shr (bad) fwait push add cwtl test add in jo fnstcw or (bad) (bad) adc fst movabs rex.W (bad) mov (bad) xchg lret out mov (bad) pop nop insl lods (bad) movabs jmp jbe mov and jle xchg add hlt or shr xor rex.XB push sub sahf and or addr32 (bad) ja loop jg int3 jb mov jbe (bad) hlt pop scas rex.WR (bad) jge fs lock push or outsl out or imul in and and movsb xchg pop jne cli fiadd outsb scas movabs int3 jrcxz lock hlt rex.WXB lea xchg addb jp repnz cld pop out sbb (bad) iretq cmc pop rex.WRX movabs mov cmp xorl add (bad) rex.WRX (bad) imul or je fisub (bad) push (bad) mov movabs vpandq mov jae jg insl lock push cmp nop sahf (bad) cli test (bad) ja xchg add fimul xor mov push (bad) adc or xchg and fisubl jno repnz test (bad) je lods xchg (bad) jmpq movslq (bad) (bad) repz hlt cmp rorl add mov fisttp xor push adc (bad) insl (bad) retq outsb rex.WRXB cmp in xchg mov stos mov push mov pop cmp mov repnz test (bad) mov outsl (bad) adc cmp es movabs jrcxz pushq jno add xchg xor add fbstp mov sub jne jns jmpq (bad) (bad) ja rex.WB sti (bad) movsb mov pop sub outsl lcall add jne out adc jbe sub lock push (bad) rex.W sbb jnp movabs test jnp imul fild clc out sar cmpsl (bad) push in mov xchg retq test rex.R lret cmc stos xor (bad) test cld stos and jp rex.XB mov jp cmpsl pop xchg mov cmpl rex.WR sbb movabs rex.WRB add mov cmp add stos cmp or push mov out in insl add mov enterq retq push jp sub xchg retq gs add mov fchs jo rex.RX and incl pop out rex.WRB add (bad) sbb loopne clc sbbb and cs mov jb jae (bad) sar in cmpsb xchg push je cmp jnp jl (bad) sbb (bad) outsb test xchg pop mov add je fnstsw fwait pushq rex.X rex.XB adc movl mov fildl add (bad) iret (bad) out mov jne and (bad) pop out (bad) add mov add shrl rex.R ss fildl fnstcw insl addb movsb imul push cmpsl sub (bad) cltd mov int mov (bad) sbb mov xchg (bad) rex.X data16 xchg lods je mov pushq scas (bad) cli int3 ds mov sti (bad) xor rex.W pushq outsb retq push hlt add rex.WRXB fadds cmp (bad) mov mov adc cld mov outsl cmp add sub jmp ss jb in ja fucom (bad) push rex.XB repz movslq add jg insl test mov xchg jrcxz (bad) and xor in xor pushq movabs fisttpl add push lock ds (bad) add rex.WR pushfq xchg add xchg xchg insl mov pushq add retq mov push add (bad) or cld add mov jne mov repz adc (bad) add (bad) jge lods adc sbb jae and ffreep pop callq retq rex.RXB sbb adc cmpsb leaveq stos add mov pop mov ss rcrb jb out stos clc sbb xchg imul or xchg movabs mov xor jo retq jo pushq pop lods mov rclb jg or pop adc insl xor cld mov add sub jle cltd sbb mov rex.WRB xchg test or orb (bad) cmp (bad) callq paddd sahf retq or cmp lods mov add (bad) add mov mov xchg fstp pop sub add movabs (bad) push add rex.RB (bad) (bad) jmpq adc push lahf lret fcos cmpsb mov pop gs add sbbl cmpsb fs push (bad) jg jmp fiaddl pop sub pop jb gs pushfq callq out jle ss pop mov rex mov push mov hlt jle mov mov add iret scas je mov sub adc xor repz sti pop repnz or xchg jnp fstpl rex.WXB js sub test je outsb cmp mov mov jp (bad) mov rex.WX (bad) jb loop ljmp adc add lods out (bad) fidivl add pop nop leaveq mov movslq repnz sbb pushq pop stc xchg cld and ds movabs push jbe out mov repnz pushq and (bad) add rex.XB jle mov jo test ds sbb loop iret lret and sub adc add flds push mov (bad) pushq (bad) add (bad) (bad) add roll sub popfq jp,pn fdivr push jge add (bad) mov pushq rclb jle (bad) movabs and sbb stos addl sub adc add add rorb (bad) (bad) sub pop outsl xlat or in rex.RB rex.X incb sarb stos decb cmp rex.WR rex.RX in add (bad) and (bad) push (bad) leaveq lods cs add (bad) mov jle (bad) (bad) mov imul xor jg movslq xchg rex.R add and (bad) leaveq outsb add ficompl cmpsl cmp jbe out lods int movsl scas add adc out (bad) rex.WXB shrl rex.RX add pop sahf pop (bad) sbb sahf rex.WB outsb push clc addr32 in std sub test imulb es out rclb xor stc (bad) add test retq jb jno rclb xchg loope (bad) in or (bad) shlb and lret test mov sbb stos (bad) je cmp add test test std jle (bad) (bad) jb cmp xchg fistpl and (bad) add test loop (bad) jg stos rex.WR cmp jle mov adc fdivs jns sbb mov xor movsb outsl lea mov add jne (bad) mov fwait add insl mov je jmp (bad) lea pop fs pushq je mov pop std (bad) fisubr movabs fadds movabs test mov or (bad) jge rex.RB add add leaveq or rex.RX idivb jns rex.WX mov jp (bad) mov sbb sub out fimul add or xchg add pop (bad) jmp (bad) std mov loope movsb jo xchg iret outsb test movabs (bad) xor insb mov add fisubrl mov clc movups sub rex.WXB enterq mov pushfq notb ja sub lret stos sub pop nop (bad) iret or xchg jnp and mov es xor push iret xor rex.WX mov rex.B rex.WXB jge xchg mov test (bad) scas shrb (bad) cmp (bad) and lods adc sti ja mov mov adc cli mov xchg jne es mov sub retq rex.WRB (bad) jb,pt and nop push pushfq pop movabs (bad) (bad) fisub pushq sub jl jno jne mov (bad) fildll xchg pop nop or lea adc repz push jne mov jnp fs jle cmp or loopne rex.WB (bad) and imul out leaveq jle js mov repz (bad) jbe cwtl (bad) adc rex.R lahf outsl mov fucomip pop cmp loope,pn sarb (bad) push xchg pop jg cmp add push testb out (bad) jbe rcrb fmuls mov (bad) xor xchg cmpsl mov callq and add add xchg cmpsb jrcxz pop xchg stos (bad) (bad) out and jl add repnz xchg pop decl jrcxz (bad) cmp mov jb (bad) loopne jp int3 jne movabs xlat pop mov hlt push insl sbb pushfq cltd iret rex.WXB mov (bad) insb add (bad) cmpb jne add (bad) std sbb rex.RXB ds xor rex.WRX xchg jge (bad) rex.WRXB cmp (bad) cmp pop sub div push or cmp xor mov (bad) push and sbb in stos pop jnp (bad) xchg mov rex.W xchg loop and movabs (bad) ds nop mov rcrb push sbb rex.WRXB scas (bad) mov fidivrl popfq (bad) out cltd int mov mov in (bad) repz je jo mov xor stc mov add rex.WRXB jne iret cmove mov and je pushfq mov js (bad) mov icebp jle xchg rcl cmp mov popfq pushq hlt push mov leaveq rex jb test stos cli rex.RXB rex.WX xor repnz adc add fistpll lods or icebp add add cmp insb movabs mov mov pop addb or mov rex.WX data16 sbb lret xor cmp shr mov ja movb or push fisttp and adc adc (bad) jl or (bad) jmpq sbb loopne orb (bad) lahf sub faddl rex.WRB in lret (bad) insl pop stc pop mov (bad) ss adc cmpsb rorb xor callq jo leaveq adc add push cmp xchg cmp cmc mov cmp out pushfq sub cmp cmp negl mov xor (bad) jb push popfq (bad) test (bad) jne mov cltd idivb add sub jb (bad) jmpq retq out cmp (bad) test or ja test (bad) pop js push je jae sbbl icebp andb and jg pop mov xor (bad) adc mov cmp sbb imull add jge and adc jae addr32 xor add jbe test rex.WRB (bad) xchg (bad) sub pop jle cwtl sbb (bad) fimull and (bad) rex.WRX sbb add mov jg cqto icebp cmpb push cmp clc lea (bad) cltd (bad) jo adc jrcxz rex.RB leaveq xlat xor or rex.B rex.RX movsl in sbb mov jno loopne rex.WRXB xor xchg retq (bad) pushq push cmp lahf jo jle cmp outsl pop sub movabs movslq callq add rex.XB stos cld jg add mov sub sbb add test jl mov mov add out push sbb pop test sbb or movabs mov push sub insl mov out jp jmpq test lock (bad) (bad) jg and rex.WRB hlt jmpq rcrl xchg jne ja and adc mov rex sahf lea or scas jl pop sbb imul loop (bad) sbb xchg add test retq cld and movabs (bad) pop mov (bad) rcrl fdivrp cwtl push (bad) jmp insb cmpsb and xchg imul and insb jg,pn test test or cmp jle popq mov mov movslq adc add add rex.RXB rorl (bad) out add jb xor jp xchg push outsb cmp push ja pop and rex.WXB (bad) add outsl stos xor or (bad) xchg stc mov rex.RXB (bad) (bad) mov fdiv ficoml ds pop rolb rolb rex.R cld xor sahf xchg (bad) outsb sbb jae xchg fs sarb rex jge cmc (bad) rex.W repnz stc sbb add adc fs push enterq outsb or sub (bad) (bad) jns mov xchg cmp cmpl sbbl (bad) xchg mov rolb movabs out int3 mov in (bad) add and add adc (bad) (bad) mov out xor pop je insb mov es fs xor mov retq int mov retq push test sub push fwait add cmpsb jnp out je movb rex.X mov (bad) (bad) sub (bad) out cld cmpsl add mov clc sub push lret pop sahf pop add mov cmp (bad) int callq (bad) sbbl pop and add mov (bad) (bad) xor cli sbbl in movabs (bad) decl fisub insb cmpsl faddl jnp rolb jp rex.RX rex.WXB loopne rex (bad) imul fisubr test outsb sarb (bad) pop (bad) out test pop mov pushq cwtl cmpsb movabs fisttpll (bad) cltd cmp enterq pop ss iret jb rex.RXB retq callq mov xor hlt xor add sbb scas pop repnz loopne idivl sub adc or mov ds loop fild and sub adc mov jg xlat rorb pushq sub sbb xor (bad) mov (bad) sahf add sbb (bad) mov and jmpq in jge (bad) (bad) pop (bad) jp fidiv (bad) xor rex.WX xor pop movabs jg sub cmc push iret jmpq mov add mov callq icebp add (bad) (bad) je (bad) jp mov nop cmpsb outsl add jno rex.WR push mov mov in mov jmp or xor xor ficom testl fldt mov add (bad) (bad) in fildll jl je xchg rex.WXB icebp add (bad) jae xchg retq pushq cmp cli add mov movsb xor add mov movsl int3 push (bad) sar add xchg rex.WX lods roll fisubrl (bad) (bad) xchg rex.WR stc rol ja sti (bad) rex.R (bad) add mov sub and add jnp rex.WRB in test rex.WX xchg sbb xchg rex.RXB or jle xor cld rex lahf xchg (bad) (bad) fdivrs in jg cmp cmp subl (bad) push imul neg mov test (bad) pop jle outsb stos repnz sbb (bad) pushfq rex.RXB or scas xchg and (bad) jge sub mov cs cwtl or jae and rex rex.RXB add sbb mov add in fmulp cmpsb jo loopne int lea (bad) mov add jg rex.R addr32 lret rex.W cmovnp fcoml pop ja add (bad) add cli fistp cmp jmp lock (bad) and rex.X mov stos pushq lock in stos pop js sahf icebp es imul movabs add in sbb add (bad) cwtl mov push fstpl add or jmp (bad) in mov lods sbb lahf mov addb lret outsb xor cmp fadds jne jg pop jnp stc test pop rex.WRX adc or (bad) rex.B pushq adc fiadd adc repnz (bad) xchg mov jnp sahf movabs xor sti or fld fs add cmp mov divb (bad) callq rex.XB mov and clc add rex.WXB insl add jo mov or jb cmp js sahf sahf sub add push add jbe pop jrcxz std mov pop stc (bad) pushq add fcomps (bad) popfq add fistpll rex.XB rcl xchg rex.RXB (bad) rex.RB push out add retq scas sbb sub add add mov mov rex rex.RX sub add adc rex.R callq adc add mov sahf (bad) push rex.RX in (bad) sbb flds mov xchg add adc cmpl stc nop rex.RB add sbb jbe sub sarl adc rex.XB rex.WXB scas push add (bad) xchg mov test pop adc push movabs jl lods jle sub jg adc mov add movabs rcl cld pushfq (bad) jp rex.WB cmc fldcw mov mov out rcrl movslq leaveq fs fildl sar jmp pop or (bad) stc or add xchg mov (bad) rorl fnstcw in pop sahf rorb lret jmpq xchg (bad) scas mov or fistl lret lahf jae imul xchg rex.RXB rex.WB and jp add add cli popq push (bad) and and adc lahf jp pop jae pop jmpq pushfq rex.WXB rex.RX cmp fwait push mov jb movabs movabs add or add int outsl movsb ficompl add popfq jb rex.RX add (bad) mov (bad) cmp jmp (bad) push rolb (bad) (bad) mov cmp jle fwait pushq jg stos (bad) (bad) (bad) add test jge cmp rex.WR jb lea mov jno (bad) cmc add mov lods divl roll scas movsb (bad) add add subl loop sbb or lret movabs jb scas addl adc sub cld sahf (bad) scas (bad) jp movabs shld (bad) jno scas and faddl add hlt subl stos pushfq retq mov callq cltd pop movabs push in mov sahf add addr32 jns test sbb iret lret pushfq rex rcrl nop add and incl callq in cmc xchg or test iret pushfq (bad) mov std add add cmp mov out and (bad) sbb xchg add lock add pop pushq lahf rex.XB addr32 add (bad) nop lods fiadd (bad) pop jne (bad) add add mov rex.WRB repz mov cmp popfq sub fs jne and (bad) xor movabs xchg jp mov (bad) fimul js cli mov or add sarl insl repnz mov fwait (bad) std ljmp jle stc outsl sbb out mov rex.XB cltd jg rex.X push pop mov fcmovu sub es lret (bad) leaveq andl mov jg fadds jmp (bad) (bad) pop scas rex.WR insl repz or (bad) rex.R in je lahf loope jg popfq outsb rex.WR pushfq rolb retq cmp test jns (bad) and (bad) lea add (bad) mov jne cmpsl or mov or sbb add lret xor jno push stos imul add jg movabs or push fsubrl mov (bad) cmpsl push rex.WRX and jne shrb mov pop jae add mov add rex.WX hlt rex.X (bad) (bad) mov out roll in ds fmull mov callq pop jns or test lock xchg (bad) sub (bad) mov xchg ja rex.WB jb xor pop cmp subl (bad) callq negb pushq sbb xchg pushq rex.WX cld cmpsl icebp jo movabs rex.RB rex.RXB nop (bad) mov notb (bad) rcrl and out xlat mov xchg sbb ja mov push (bad) cltd xor (bad) test test repnz lods add in mov clc test jmpq xor cmpb add fstpt mov lods or xor jg movabs lods adc and sbb rcll jno rex.XB incl callq jb fldenv cli mov cli or test roll fisubr mov adc or cmp fstl jle sub lods sahf cmp adc mov stos enterq shll scas add out pop cmpsb jbe jp (bad) subb rex.RX (bad) mov scas outsl cld stos adc adc xor rolb rex.RX rex.WRB rex.WR rex.R cmpsb retq (bad) jmp cli rex.B loop lahf (bad) iret adc mov icebp ss sbb in fiaddl mov fadds adc jg gs mov test add es in rex.B movabs (bad) lods lret rex.XB int3 or fstpl cwtl setle xchg pop jb rex js,pt mov (bad) xlat or and test stos rorl rex.WX mov in mov sbb jl jge in mov mov jno mov jmp xlat fist sbbb rorl mov adc jb movabs loop mov iret stc jns roll andl fdiv and jnp pushq pop out enterq jmpq xchg add out icebp rex.R lahf push sbb in xor (bad) add xchg or fimul push out (bad) lea adc cmpsb (bad) rex.X xor cmp adc ficoml pop xchg cmpsb es (bad) outsb lret sahf (bad) and mov sbb rex.WXB push mov movl jbe fildl add add lahf mov int insb or jle jle sbb imul in (bad) data16 add lods sub rex.RXB std movsb jns loop loope fs xchg mov mov (bad) mov jae jle xchg test lock add rex.WXB sbb xchg loop mov (bad) lret rex.WXB es movsb rolb sbb mov lods add sbb pushq rex mov jmp jo fisttp pop xchg cmp mov mov cmp xorb and (bad) add sub sbb movsb jg cmp enterq xchg (bad) mov loop pushq and xchg mov (bad) adc mov (bad) (bad) iret mov mov sub cs and jnp in pop jle cltd test adc (bad) addr32 movsl add adc pop (bad) mov jg,pn stos test xchg jg pop xor (bad) mov fisttpll or lahf (bad) repz (bad) (bad) testl or sarb adc cmp sub movabs push rex.WB pop jg jb jmpq mov or cmp scas or adc (bad) add jne cmpl pop sti jmpq mov es xor adc push or (bad) push jp enterq sti mov sub (bad) cltd scas pop (bad) cmpsl rorb adc (bad) (bad) adc or mov jp loopne lahf out imul add sub iret stos rex.RXB jle leaveq callq ja jb imul imul (bad) jo js clc cwtl rex.R and outsb mov mov (bad) fist jo stc pop adc stos add in push xchg cmp fiadd (bad) mov stc sbb test cmpsl movabs add mov fstpt (bad) add pop hlt cwtl pop jae add js rex.WR push or mov retq lret rex.RXB repz data16 rex.RX incb xchg jbe cli sbb (bad) insb sub push out test and pushq fdiv fcmove imul rex.R jg test movsb out cmp hlt jo (bad) mov cmp fs (bad) cli cmp lock add jl shl mov jge (bad) mov fildl push xchg subl jle push int3 jmpq (bad) loop add push add (bad) xor xchg js push ss (bad) jg stc movl sub mov xchg mov cltd callq and xor add mov scas movb push js rex.WR mov movabs mov jno clc xor rex.WRXB repnz fwait xchg sahf lea and add rex.XB (bad) rex.RX xchg xor retq sbb mov in scas or sub rex.WR sub or pop out add mov (bad) movabs movabs movabs movsb add insb mov cmp (bad) (bad) outsb (bad) retq and leaveq xchg (bad) xchg mov out jp repnz add divb add rex.WXB add insl pushfq (bad) mov (bad) (bad) jle lret (bad) (bad) (bad) (bad) lahf out std test cli (bad) add lods rex.WXB jrcxz movabs (bad) jge add lahf cltd and (bad) (bad) jb sahf rex add sbb (bad) (bad) imul scas lods jno shrb jg adc push clc mov jle mov xchg rex.WRX xchg lret (bad) add cmpb xchg mov (bad) pop add in mov cmp add add in xchg jle mov sahf rcrb xor outsb js (bad) out ds (bad) jg (bad) rex.X or retq jl xor mov add (bad) xor adc rex.WRXB cld add jp test sarl cmp or rex.WRXB out and (bad) pop mov je test imul outsb cmp adc es and shlb movslq insl (bad) lock nop sub mov movabs sbb jp (bad) nop jle movsb (bad) add outsb pushq rex test stc jns adc addr32 mov mov lock add vsqrtps mov movabs pop add movabs (bad) push add xchg insl sub push shlb (bad) jp fnstsw imul scas ja and jp pop incb (bad) cmpsl in fcomps pop cs rolb (bad) xchg or add jmp xchg or movabs movslq (bad) (bad) cmp mov movsb jle dec cld callq adc sub (bad) add rex.WR movabs ja lods rcll add test sub (bad) lret out add push (bad) rex.W (bad) jge test rex.RXB sbb mov pop test rex.RX ficomp sub movabs adcl pop loope movabs sbb xchg rex.B ds in xor je (bad) xchg insb (bad) fildll rex.WX loop mov and loopne jb cmpsb mov xchg add nop mull int3 adc jg mov add ds push bnd pop iret stc xor jge (bad) movb (bad) insl (bad) int pop mov movslq loopne stos cld pushq mov rex.RX jnp cmp sbb test movabs addr32 mov mov cmp fidiv insb sub repz out repnz cmp cwtl pop xchg (bad) fsubrl xchg (bad) mov mov std and (bad) stc sub jnp xchg mov rorl sbb jge movsl mov jo test jbe (bad) loop jl jns movabs decl rex.R es (bad) sbb in xchg sar and cmp sbb scas lahf adc add int3 outsl jp add out mov out loop rex.X sbb adc sbb out testl retq retq jle sbb orl (bad) add cmc cs (bad) mov xchg (bad) (bad) stos outsb add (bad) movslq (bad) (bad) jmp nop rex.WRXB or rcr retq mov add xor loopne xor (bad) mov loope rex.XB clc xor sub add sahf clc or scas jg mov add addr32 test add xlat imul movb rex.B rex.RB and jg xchg jp adc or movsl jle push pop inc and jg jmp enterq (bad) jmp popfq add (bad) cwtl xor xor in lret data16 jl sbb (bad) sbb add jle retq push adc data16 leaveq rex pop adc jle (bad) repz mov rex.X sarb int3 sbb and add sahf sbb insl in xchg lahf in je enterq (bad) jb int (bad) lret sbb (bad) int3 cmpsb sub fwait movb xor jb (bad) (bad) (bad) (bad) jrcxz rex.WX int3 mov (bad) add rex.R xchg scas pop in stc jno sub jae jne imul movsb rcll scas xchg sti add (bad) push jl sbb (bad) pushq adc xor (bad) sahf mov lea cmp (bad) add jo rex.WXB or add mull adc cmp and addb cmpl push xchg out sbb in fsubrl add es pushq stc pop add rex.WRB imul (bad) ja movabs pop or popfq int3 and movsl add cmp (bad) mov mov fcoms mov movabs rex.XB rex.WRXB out add mov xor es and push out scas pop lods adc jg pushq sti add (bad) gs rex.XB mov add jle and xchg movl (bad) (bad) (bad) cmp mov mov adc rex.WR rex.WRB push mov shll mov add iret jb jle mov cmpsl fnstcw (bad) xchg (bad) jle add out test out push rex.R (bad) sub cltd jp cmp fwait pushq nop (bad) mov incb iret cmp je pop jb retq rex.WX test push movsl xchg mov retq or sub or rclb adc pop (bad) movabs popfq sub jo scas (bad) xchg mov pop and rex.R rex.WR cwtl jbe scas cmp rex.RB sub loop mov (bad) sbb xchg cmp loop (bad) cmp jle xchg fcmovb push lret adc lret add in imul or add xor sbb cmc (bad) sbb cli add popfq and rex.WRX std int3 mov add ficompl out jmpq (bad) mov repnz xchg rex.XB loop rex.WX or mov (bad) xor rex.WRB cmp xlat rex.X mov cmp mov and jl fs add (bad) pop adc add jge rex.WB pop rex.B jp xor xor stc (bad) (bad) xlat stc sub add add sbb rex.X sub add (bad) rcll test iret int icebp sarb mov (bad) adc and xor xchg mov js jns jg push sarw fs fsin int3 sbb ficoml pop lods lret fstpt rcl pop xor js (bad) add mov movabs sbbl mov rcrl jl pop sbb mov xbeginq int scas outsl jae (bad) pushq iret lods rclb (bad) imul sub jns mov xchg xchg cmp icebp mov sbb fisubr enterq mov rex.RX or (bad) and repnz mov movabs xor and pop (bad) int pushq xchg popfq rcr jo lea pop pop addr32 adc jg fsubrp jg imulb not insl int3 movabs fiadd add add cmp adc (bad) insl xor (bad) jl sbb (bad) adc (bad) enterq movsb jns leaveq pushq (bad) (bad) (bad) nop movabs mov rex.WR sub cld test cmp xchg xchg sub mov and clc iret test shr rex.XB (bad) cmp (bad) xor hlt out mov mov or xlat divb pop sbb pushq cli (bad) jnp fxch rex.WRX sub lahf (bad) xchg cmp mov cs pushq nop jbe nop cmp test (bad) sub jg pop xchg xor xor mov fbld mov (bad) mov movabs jl add sub pop add mov add rex.WRB rex.W cwtl jns mov sub and rex.WB movsb sub callq rex.B in add cltd (bad) in rex.WX rex.W fstpt mov or sbb adc (bad) mov sub rex.WRX add xchg cmp add xchg sub (bad) and scas (bad) shl jle jmp cld test push std pop fimull sahf iret xor js cld mov test hlt xor in xchg mov pop and lods outsb (bad) enterq outsb lods (bad) jb retq rex.WB pop sub (bad) jbe add adc fscale out cmp repz jl xlat rex.R jrcxz sbb jrcxz mov xchg cmovl mov xchg std (bad) pop pushq sbb sbb (bad) movabs cmc imul movabs outsb enterq cmp popfq xchg outsb (bad) xchg sub add stc je mov enterq sub loopne movabs nop sub loop lock pushq and push scas xchg loope popfq lods mov jle rex.RB lock insb fwait incb jne mov rex add lods cwtl rorl fbstp ljmp fnstsw gs fcoms xor hlt cmpsb add xchg insb and cmp jo xchg jl ror test lods xchg retq push jle repz xchg (bad) scas sbb mov jne add movabs nop add mov cltd sahf xchg add (bad) (bad) (bad) pop (bad) rex sahf sbb (bad) int3 pushq (bad) scas push mov jl mov lea (bad) insb rex mov rex.WRXB jrcxz (bad) and mov (bad) out (bad) or loope not imul jl lods fiadd rex.XB jmpq mov add cmp mov out jo lea mov add pop (bad) mov rex.WXB out lret es movabs fmull (bad) (bad) push (bad) leaveq push jl (bad) enterq loope (bad) rex.X mov xor add pushfq push (bad) rex.RX lock add jnp add sub mov and push rex.WX stos (bad) rcr test jmpq js fbld cmp jg popq mov jo sub jne lret callq outsl mov jno and shlb sub cmc cmpsl cmp xchg add inc sarl (bad) sti stc jg jp (bad) cmp lret cmpsb mov mov push (bad) jp fildl xchg rex.B sub jge xor out add jo rex.WB fnstenv mov mov xchg cwtl add outsl cltd mov mov add mov xlat xor push jb add sahf pop movabs movabs int rcrb mov cli out movl sarb xchg add adc (bad) jle or jrcxz cmp push jmp (bad) rex.WRXB popfq cltd insb movsl adc movabs stos sbb (bad) hlt adc xchg jae pushfq xchg mov std add add ds push lock (bad) (bad) adc mov test out rex.WB cwtl rex.WR sbb (bad) out rex.R lahf fidivrl pushfq add rex.RB rex (bad) (bad) mov add mov xchg ljmp xchg enterq retq mov (bad) sbb (bad) insl (bad) rex.WRX rex.RX int cmpsl std xor sub cmp rex.B sbb add or add stos pop sub cmc mov ss cmp push add pushq mov mov cltd lea (bad) or jg imul insb callq je jp fldcw sahf cmp jbe movsl jb jg mov jno (bad) in mov (bad) xchg jg (bad) lret out add xlat (bad) (bad) mov lods incl pop adcl mov rolb faddl push (bad) icebp sbbl add in xor cmp fistp fs add mov out jle rex (bad) (bad) fs rex sti (bad) xor add rex.WRX lock sbb add nop fild sbb xchg femms pushfq xchg test (bad) rex.RX lahf rex cmp (bad) jg insb mov std in xchg (bad) sahf fwait notl sarb sbb fmuls push add xor fbld js sub (bad) popfq mov (bad) adc adc sahf (bad) jne pushq rex.W je movsl fmull mov jno lods (bad) outsb jrcxz iret cmpl rex.WB push add jp push fstl xor jb or je movsl stc in cltd popq outsl out push scas xchg (bad) jae mov pushq gs add (bad) (bad) in xor cwtl pop sbb or sub mov sahf (bad) and repnz jae (bad) mov loopne outsl (bad) (bad) cmp mov hlt mov fsubrl jp lea addr32 movslq movabs cld mov rorb add test loope (bad) mov test jp mov pop push rex.WX sub jge mov mov xor callq jg,pt xor sbb mov jge movsl pop (bad) popfq mov add push outsl adc mov movabs jo add mov jge push rex.WRB (bad) cli (bad) jl xor fwait movabs add mov mov test rex.R cmc cmp ds pop or pop outsb jle popq enterq adc add rex.WB sbb mov pop orb add movabs (bad) (bad) adc and (bad) xlat cli jb testb lret mov push rex.WRXB fldcw add xchg pop or rex.XB jns adc mov test add or movl ss mov (bad) movsb add rex.XB mov loope (bad) outsl pushq icebp movsb add xor lret and clc outsb (bad) rex.WXB xor rex.WRX mov movslq add add fnstsw mov mov cmp ss mov jb stos js mov sahf pop hlt pop add test xor add mov icebp adc xchg setnp jg rex.WR cmpsl movabs add fistpll add out jbe xor lahf movabs push xchg xlat pop push mov mov (bad) clc rex.RX test and sbb mov imul (bad) xor sub xorl and imul (bad) and icebp mov mov (bad) mov jmp sti (bad) cmpsl insb xchg and sbb add jo shrb movabs jnp or lret xor ja mov jrcxz rex.RXB xchg sbb rex.W sbb jb hlt jae (bad) decb mov lea out (bad) (bad) xor (bad) or fisttp (bad) jb pop (bad) pushq jle addl mov push mov jbe cld or fdecstp and cmp fidivrl rex.XB rex.RX sub mov pop jnp add (bad) (bad) fcos mov rex.RX (bad) add add rex.RXB jl in and jg cmc sub add fidiv adc in movsb movslq std lods es (bad) sub (bad) ficom repnz movsl rex.R mov stos xchg mov std insl (bad) sub adc sub mov jmp add nop jle rex.WRXB xor xchg cli es (bad) (bad) (bad) pushq addr32 retq (bad) test xchg xor decl add add pop (bad) jb je mov pushfq movsb (bad) mov rex.B (bad) sbb sub decb movl cs (bad) jnp or stos fistpl popfq and rex.WRX movabs cmp out push callq xchg ffree (bad) and or retq enterq rex.WXB sbb cltd imulb xor (bad) js test add and (bad) xchg adc adc movsl rex.WB mov sub jne jae mov adc push jl and fs cmp rex rex data16 jno icebp scas (bad) stos clc (bad) lods add or lock (bad) jle (bad) in leaveq sahf mov roll jnp mov mov rex.WXB (bad) out stos add mov (bad) add in (bad) (bad) loop movabs rex.XB fisubr jbe mov xchg add sbb cltd add pop xchg push add out mov adc and movsl pushq or shrb adc mov cmp fimul (bad) rclb nop mov sbb hlt xor std movabs movsl jg cmp cmp pop out lret mov push sahf rex.W rex.WRB (bad) pop addr32 mov pop addr32 push movsb or add cmpsl test notl or lods movabs xchg pop and xor mov add in movslq out pop movsl (bad) jg js (bad) jne or xchg mov insl add adc lods (bad) jno enterq ror mov xor jae cltd negl mov test test (bad) hlt sub or mov mov jg (bad) in scas (bad) (bad) outsl jmpq mov mov std rex.WRXB mov ja in (bad) rex.W lahf lret xchg fnsave jle movabs mov jb rex.WRB (bad) or jg rex leaveq (bad) xchg rex.WRX out rex.RX cmc lahf mov mov mov lret and sub mov rex.R out jbe jl stc mov leaveq subl xchg notl rex.WRXB outsb mov jnp mov lret xchg xor (bad) jg add insl or mov or scas add movl int (bad) and rex.X and rex.RB pop add mov and leaveq adc rex.WX fcomps ss rex.X scas adc xchg jmp (bad) push ja cli sub gs loope icebp push xchg (bad) cmc cli mov cli pop rcrl (bad) movsb xchg pop insl roll (bad) jo enterq sbb fstp and adc cmp sub lock shrq sbb pop jle scas add sbb xchg sbb (bad) or roll add push jmp adc mov jle in out rcl or mov int xchg movabs mov imul cmp outsb cmpsl add (bad) frstor pop mov popfq fildl add jp ds and add mov cli fs rcll jge add movsb or mov sahf push xor enterq jg (bad) add (bad) add jae mov xor incb and in out cmc movabs outsl movabs adc add movsb cmpsb scas (bad) xchg popq fcoml test callq mov pop (bad) mov rex xchg mov rol jae sarb add (bad) loopne mov cmp andl (bad) lret jg push (bad) (bad) add sbb add pop cwtl cmp lret jl jrcxz and add add sbb add mov icebp pushq mov fdivrs mov jne pop stos add xchg fidivrl (bad) lret cmp rex.RX jle clc sub lods jg (bad) or (bad) repnz mov (bad) movl add cld pushq rex.XB loop rex.RX scas jle rex.WRXB rex.WRB sbb mov xor jmpq lahf add cmpsl jb sbb mov (bad) mov pop test sbb mov int3 xchg movabs cltd rex.X xor xchg scas repnz pop mov cmp sub add jmp jge xchg fs add pop (bad) in cmpsb xchg jl (bad) cmp sub and add iret sbb fwait jp roll add xchg retq mov or mov xchg sub mov in (bad) ja loop (bad) (bad) xchg sbb callq mov rex.WX mov add ss int3 cmp (bad) add and (bad) (bad) lret pushq lea push iret add mov popfq mov mov (bad) jo fcom nop loop jb callq stos pop out mov (bad) int3 rex.WRX mov xchg jp (bad) imul mov (bad) add jns xchg sub jg push adc subb sub jg ds jae stos test or pop (bad) (bad) nop lock rex.WX (bad) (bad) rex.WB adcl mov adc jge data16 stos jns jg outsl sbb rex.RB lret stos mov sub rex.X jmpq add (bad) test rex.W jrcxz adc adc and (bad) adcl sahf and movabs (bad) adc jnp sub icebp hlt fsubr add rex.RXB adc (bad) mull jl cmp and lock pushq rex.RX xchg faddl gs rex fs mov (bad) (bad) repnz mov and frstor sub rex.R adc std faddl sti in cmp rep mov gs pushfq loope lods push xchg (bad) push add pop jl js mov stos add decb (bad) sub loope fucomi (bad) out push add adc rex.WXB mov jne loop adc (bad) rex.X movsl ljmp xchg popfq imul add movslq cld fnstenv jae cmpsb addr32 add fdivrs xor (bad) out mov cmp jge jae (bad) mov cmp (bad) adc and mov callq fs popfq rex.WRX movabs cmp jnp mov jbe jle lret fidivr rorb pop xor xchg movb adc sub add mov sub and xchg (bad) xorl outsl ss xor icebp add (bad) lock pushfq stc mov (bad) in add xor test lret push jb add repnz rex.WRB and push lods shll jrcxz mov xor adc jle scas (bad) rex.RX (bad) or xchg (bad) add add rex.WX lret adc sub add jp jrcxz rex.WRB rex.WX xor or repz (bad) jmp rex.RB leaveq xchg (bad) rex mov or insl and fs sbb mov rex.RXB mov sub jl sub xchg xor xchg push lods mov (bad) jg mov and rex.XB pop (bad) add mov ss adc and add cmp (bad) mov mov nop loope xchg (bad) data16 and (bad) (bad) (bad) sti mov cli adc cmpsb mov test push or ja movabs (bad) lock jle cmp outsl mov mov data16 lock (bad) (bad) add lahf cltd loopne in lea sub adc jae cmp (bad) (bad) stos jo xchg lahf int3 adc add subl jp shll (bad) divb mov adc add (bad) sbb (bad) pop sub stc (bad) movsl mov je sbb loop sub lret mov add add retq pop outsl fcomip jle and or (bad) std sbb lods retq outsl add lods mov lock xchg push mov ficom adc mov mov mov jl rex.X in cmp adc xor sar jp adc movsb (bad) bswap stos cli add rex.RX iret movabs rex.WX rex.WB jmp add mov xchg (bad) mov add (bad) out pop rex.RX data16 jle mov sti cmpl (bad) sbb insb (bad) jg push (bad) (bad) pop movsb (bad) jle pushq pop test rex.WXB pushq xor push je pop jle imulb sahf ss (bad) jno jo,pn add sbb insl (bad) add es jbe fs add sahf fisttpl and std outsb jg cmp movabs in mov (bad) pushq sub rex.WRXB mov add (bad) xchg rclb icebp jle (bad) and js jno pushq jrcxz enterq (bad) outsl cmc (bad) movabs outsb cmp jp subl mov mov and sub (bad) push icebp (bad) jg jle jns mov lea icebp and rex.WRB rex.X sub cmp sub pop add jge icebp xchg sahf mov jle mov (bad) (bad) fisttpl xor pop add sbb nop (bad) lods pop add incb stos mov jp (bad) fdivl jns add mov sub rex.RXB (bad) sti mov mov xchg (bad) (bad) mull jg rex.RX std (bad) (bad) in or pushq test mov (bad) movsb mov jb lret mov cltd (bad) add movslq (bad) adc cmp movabs sbb lods jns xchg insb rex.WR sahf (bad) cwtl rex.XB sub addr32 xchg out sbb movabs fs iret add rex.WRB lahf jbe mov (bad) adc jg sub and sub mov mov in add push (bad) pop rex.WRXB rex.W mov jbe lret (bad) jg out pop jbe,pt test iret mov jo test sub pop pushq (bad) push sub in rex.RB lret test movabs (bad) lods icebp rex rex.WB add (bad) push (bad) mov (bad) push cld (bad) (bad) movabs xchg (bad) mov xchg rex.WRXB (bad) insb (bad) icebp movslq mov xlat data16 add clc cmp push add (bad) outsb add pop or scas xor xlat jns add add jbe and push loope rex.WRXB (bad) out jle cmpsb rex.WRX jnp (bad) (bad) int sahf adc stos ss rolb lahf movabs xchg adc addr32 mov (bad) xlat and pop mov enterq loope sub jns (bad) xchg insl push std rex.WRX fcmovnb cmpps repnz fimull mov movabs fwait cmpsb add rex.X sbb in push adc xchg (bad) mov add xor (bad) fisttp jle xor movsb subl stos mov mov jne rex.RXB fs cmp loop rex.WX mov cwtl add sahf jno (bad) cli and int3 sarl fistp cmp (bad) rex.WB rex.WRB loope out imul mov jo (bad) rex.RB nop sub (bad) mov rex.RX out mov cmc cmp lea sbb std callq jbe xorb imul jl pop or lods mov mov pop outsb stos xchg sub sbb notl xor (bad) mov mov xchg out jg popfq (bad) js cltd test pop out fcompl lret fnsave sbb outsl scas push sbb jns (bad) (bad) or rclb pop lods and js xor rcll cmp (bad) mov rex.R (bad) mov fsubr enterq (bad) xor idiv and (bad) push divl jrcxz movabs (bad) mov in sbbl and cmp (bad) cmp push (bad) rex.RXB jo (bad) xor cmc movabs retq rex.WXB lods mov mov jmpq lahf pushq or fisub (bad) (bad) mov add (bad) add loope add loopne pop cmpsb psrld jl adc mov test mov cs and mov cmpsl or xchg add sbb fild (bad) rex.RB test rex.X rex.WR xlat rex.XB repnz (bad) and pop out loop push add movabs fistpll add add movslq addr32 int3 movsb xchg (bad) cmp jl enterq cli shlb rex.R mov cmp and rex.WRB imul leaveq test (bad) (bad) mov jno add fistp (bad) pop loope fcoms lret add rex.RXB cltd mov pop cwtl callq jae (bad) pop cld add jne cltd mov xchg pushq rex.WRB repnz rex.WRXB (bad) clc rcrb (bad) (bad) hlt gs mov iret (bad) or out and push cmpsl js insl movabs (bad) push sbbl pushfq xor pop push push (bad) mov out rex.B addr32 (bad) enterq mov ljmp lods sbb mov jge jle jle adc adc jo pop repz (bad) and (bad) mov rol lret or fistpll pushfq jne scas rex.WX scas loopne in cmc (bad) in xor rex.RX lods in mov pop rex.RXB xchg sub iret cmp add rex.RB insb (bad) cmpsb loop rex.R imul and (bad) int out (bad) stos (bad) mov xor add mov loope (bad) movabs adc jg pop sbb add popfq sbb addr32 or lahf xor jmp and incb and sbb sbb sahf or cmpsl sub add popq add adc sti rcrb and (bad) (bad) (bad) nop nop and cwtl rex lock xlat enterq ds add lea or rex.WRXB nop mov jne add cmp rex.XB idivl rex.R rex.WXB icebp sub (bad) fbld cs xchg test sbb cs (bad) lea jle lret (bad) cmc mov repnz cld xor insb jmpq adc rex lret mov idivb movabs xor mov fbstp lock bnd cmpsb cmp scas mov add jrcxz insb ss cs mov sub jb xchg rex.RX mov sahf xor rex.WRX add pop mov (bad) xchg (bad) add and imul mov pushq add mov jl fdivl fisubr xchg fistpl (bad) push test mov rex.RXB mov or hlt (bad) or ds lods add mov scas add adcb jp,pn add cltd (bad) fwait mov cld loopne xor and adc pop sbb (bad) xchg jb xchg fstpt sbbb (bad) (bad) jge (bad) jno rex.R rcrb xor (bad) rex.WXB jae rex scas pop jge scas movabs andl add xor cmp jbe add flds test xor or mov rex.XB hlt mov iret stos pop pop rex.WB rex.RB add idiv ss mov in mov push mov (bad) and gs insb (bad) cmp js lahf enterq sarl imul rex.WXB or jg xchg sub pop sbb jrcxz sbb (bad) push add and rex.WX cli (bad) pushfq (bad) lock jb push fwait rex.WRB sahf pop or stos repnz adc add and outsb jg rex.RX jmpq loop repz add mov jge popfq notl std (bad) and (bad) jrcxz popfq mov pushfq in cwtl gs jl jge jns (bad) (bad) add (bad) js rex.WRX outsb add loope cmp xchg ffreep mov add int mov rex.WRB repnz rex.WB ficom (bad) mov movabs movabs mov adc out rex.XB retq (bad) pop fldl cmp mov scas adc scas xchg cmc mov (bad) (bad) addl push movslq mov push add pop hlt (bad) mov leaveq imul (bad) cmp (bad) mov rex.RB jns rex.WRX and test icebp add movsb pop mov jb xchg lret add rex data16 imul sub outsb jno int3 mov (bad) fucomi and sub add lahf cld xor mov jg and mov (bad) out push sub mov rex.XB pop sub jle rex.RB jg rclb adc stos in fistl lret adc or add mov movabs pop sbb mov cld push in test out imul xchg push (bad) lret (bad) mov ds jne add jl sti outsb (bad) xor xor movabs jp popq jnp lea outsb callq (bad) inc or xchg movabs xor (bad) jg fsts movabs sarb jae jle int sub rex sub shrl cli scas or callq (bad) jne pop (bad) data16 (bad) std movabs jg push movslq je lret sarl and sarb rex.W divl mov jge (bad) xchg imul lahf in xor loope push movslq std (bad) sub xchg int3 cmpsb pop xchg xor add mov cmp and cmpsl fnop mov leaveq (bad) xchg outsb rex.WXB add fs mov pop mov add lahf (bad) adc sbb pop movslq cmp rex.RX rex.WR addr32 jb mov sar xchg out callq pop cmpsb jmpq add pop mulb add pushq mov xchg mov push (bad) mov add rex.R mov rex.WRXB (bad) (bad) (bad) xchg and pop in add test or fwait add push rex.XB rex.B loop xchg loopne (bad) and pop enterq sahf xor cltd (bad) rex.WXB movabs (bad) cmp add xor sti mov sar cmpsl loop in jle xchg rex.RXB mov xchg sub fwait cmpsl and in add cmpsb jl xlat xor loop mov (bad) mov xor adc push mov (bad) out rorb jns shll (bad) mov popfq (bad) xchg jno add fmull add ficomp rex.WRX adc int (bad) rex.WRB sti outsl add add (bad) gs sub div (bad) in lods je sbb adc add xchg rex mov movabs sti add rex.WXB jb rex.X jg cltd ds mov nop decb jb std mov pushfq sbb add mov cmpsb (bad) cmp scas add je (bad) and mov push test or rex.B mov xchg jmpq loop rolb mov mov pop pushq stc mov add movsl cmp scas pop iret in add int push cmp movsb test xchg xor mov add pop mov jo mov (bad) test rex.W rorl ljmp pushq rcrl xchg or andl (bad) movl frstor cmp (bad) xchg jmp lods add push rorb push addr32 cld or xor cmp rex.RX fdiv rex.WRB jg sbb shl (bad) jns outsl rex.WR fs sub lock (bad) rcpps jnp repz or add sti andl adc movsb loopne (bad) or xorl fsubrl xchg adc fisubl or rex.R in and int3 cltd cmp add movabs bnd in push cli mov and jb rex.WRXB retq popfq (bad) and (bad) mov stos movabs sub stc jle (bad) pop jmp sbb jo pop sub ffree xor or jge (bad) std xchg ss jp xchg xor jnp (bad) xchg insl hlt je leaveq and scas imul mov xor stc xchg jne pushq (bad) data16 shrl (bad) (bad) push pushq (bad) nop add jl (bad) fs punpcklbw cli cmpsb (bad) xor test jle rex.WR stc adc rex.B sub int3 add mov mov xor (bad) mov (bad) out outsb sarl setnp sbb mov add sub out out loop xchg cli (bad) jno pop pop sub rex.RB mov jbe pop xor callq push mov push add pop push and (bad) cmp (bad) cmpsl test rex.B rex.RB out pushfq icebp push test cltd scas out cmp int xchg cmp rex.X lock jg in rorl lods add (bad) movabs jns pop add (bad) or sbb add add mov out xchg (bad) (bad) hlt in pushq fwait add insb sahf (bad) rex.RB xchg mov mov addr32 (bad) rex.WX xchg xchg mull or adc clc mov rex xor push rex.WRX idivb (bad) add or jle mov cmp gs cmp sub fildl sub and mov sub popfq (bad) jnp divl cltd jrcxz repz fs outsl movabs addb (bad) adc mov stos or add push rex.RB mov pop jmpq xor (bad) jb or (bad) (bad) shrl or mov insl pop jge (bad) jl rcll and shll mov mov rex.XB rex.WB enterq jae test (bad) rex.RXB cmp sti jnp cmp (bad) int3 and add test add mov mov outsl mov decl cmpsb jg or (bad) xchg (bad) sub adc rorl pushq rex.B mulb xchg mov push jle (bad) rex.R xchg add and rex.WRB hlt add lods loop add scas adc je jle xchg icebp xchg mov outsb outsb lahf std rex addr32 ja jg stc retq ljmp movsl jmp cld mov retq mov fimull (bad) movabs jle sbb sahf jle jl in fild mov rcrb jae sbbl movabs jg mov (bad) mov cmpsb add mov stos scas xchg fildl adc movabs and or sbb movabs push xor sbb outsb mov (bad) rorb in xchg jmp jg rex.W cs (bad) jle mov jrcxz mov and add pop add outsl (bad) popfq mov mov mov rex.W push rex.WRB pop out imul mov pop add maxps (bad) rex.RX cmp test pop add cmc xchg repz xchg sub in mov mov shrl mov shrl retq (bad) sub or movsb jp add sbb outsb pop sub rclb xor rex.WR cs repnz movsb pop and (bad) mov movabs je pushq outsb int test std and xchg icebp xchg add (bad) and push mov adc cld add or pop enterq decb cmpsb ja pop not mov lods leaveq (bad) and (bad) add rex.W add mov push icebp (bad) (bad) scas pop or es rcll rex.WXB add and add jge movabs loopne and cmp movsb cwtl xor rex.WR std scas xlat lret retq rolb add cmp (bad) jle leaveq mov scas cmp mov mov cltd xor ss mov test in rex.RB es lret pushq fcoms shll rex.WRX loop sub mov jg testl rex.WRXB (bad) or xchg jb adc sub mov retq pop js movabs movb sti (bad) add sub add imul clc mov xor shrb idivl jg sahf loope out mov mov idivb pop push rex.X mov nop in cmp xor mov rex.WRXB pushq pop fs cwtl pop outsl add and sub (bad) mov xchg jle je mov jg lcall (bad) cs push (bad) mov add jns rex.WRB lods mov movsl mov fs (bad) mov and add jmp (bad) movabs add std out clc sarl (bad) mov rex.WRX testb and sbb xchg push adc (bad) sahf push repz (bad) test addr32 fnsave decl andl nop add repnz jp cs pushfq jno jo fwait xchg pushq imul xchg pop outsb cmc mov mov and mov jle (bad) sbb or xor movabs jl xchg outsl fldcw cmpsl out push (bad) rex (bad) movsb jge movsl or jmp hlt mov jge cs push pop jge mov jl mov rex.WXB mov cmp (bad) xor push (bad) loopne (bad) (bad) (bad) (bad) mov adc jl xchg mov jne or mov sbb xor test in insl mov push hlt wbinvd pop jmpq pushq incb jb jns and outsl mov jl (bad) (bad) (bad) clc mov add (bad) jp imul cltd xor (bad) cmc pop (bad) insl push sub mov (bad) movslq push jge insb outsl iret jbe ja out jg adc in mov lock hlt mov rex.R cltd jmpq (bad) movabs lods mov out rex and shufps repz icebp cmc sahf test rex.B add lods rcrl add pop sbb out movabs lods jae iret jle mov je xchg fisubr subl sub adc xor test sub sbb jb fimull (bad) in (bad) jno test (bad) rex.RX jbe jae lods lea mov test (bad) (bad) (bad) rex.XB fstl jmpq (bad) incb add cmp xorl retq add std sub (bad) (bad) mov adc pushq cwtl (bad) outsb pop (bad) movabs add pushq fsts cld and je or (bad) retq (bad) jno mov (bad) (bad) cli fs jmpq mov mov mov in js (bad) add lret add mov icebp movabs pop jge jnp jbe adc repz movabs rcrb int mov add pushq lock mov (bad) jmp (bad) or (bad) rex.WRX rex.WB jnp pushq add retq lret lea add test sub notl shlb (bad) mov or es scas sbb lret xor in (bad) cmc push insb repnz retq jge mov add insl cmpsb (bad) fs jle fisttpl loope jg jbe mov leaveq cmp sarb add mov fidiv (bad) jge rex.R or (bad) jg (bad) imul lret jnp rex.WB mov (bad) cs mov or loop rcrl fwait movslq sbb insl xor jp (bad) sub xchg movsb add or mov mov jg (bad) movabs rex.WRX nop rex.WRB xor (bad) jno rex loope xchg movsl jmpq (bad) add xchg (bad) push mov mov add cmpsl mov fnstcw lret (bad) and std insb rex.WX rex.RXB sbb movsb movsl jb pushfq stos add pushq cmp jnp roll pop (bad) jno (bad) std pop add sub rex.WR cmp data16 add repnz (bad) push rex.WR xchg rex.RX shrb (bad) cmp add cmp jrcxz movabs scas bnd out jp stos sti fwait mov cmc lods pop movsb cmp push jns lahf adc (bad) adc leaveq pop jle pop cmp jns test jo (bad) lahf (bad) pop jle pop xchg mov and and jbe rex.B and es sti sub int3 rex.W lock lods mov nop or push scas rex.WB repz (bad) test push movsl adc push pushq ds mov fmul (bad) add sub mov loop or test paddb out (bad) (bad) negb lret add sahf add rex.WB (bad) mov (bad) nop iret lods callq jnp cmp mov rex.WX push (bad) mov in and cmpb fiadd fs or mov hlt callq cmp loop or je sub pop movslq pushfq int3 pop data16 xor (bad) sbb xchg scas (bad) push push xchg push iret nop rclb cli in mov (bad) cmp (bad) mov cmpsl adc adc push mov rex.WR mov test std ja mov jl pushq lods sbb jns mov sbb or pop jbe mov rex.WRX int3 cmpsb rex.WX (bad) fcompl rex.XB rex.X (bad) gs jbe xchg add add sbb rex.RXB leaveq mov mov (bad) xchg pop popfq jmp mov push cmc push mov rex.RB rex insb cmp xor (bad) in rex.X mov cld and int (bad) loope (bad) cs push lods jmpq cmp fstpl sbb cmpsb int (bad) add add pop int3 or cltd scas xchg adc shrb mov add (bad) pop pop mov nop out callq hlt pop mov jge xchg in js sbbb jns push movabs add insl mov mov cmp pop push cmp fcmovu jmpq sti jb rex.XB nop callq (bad) xor jge xchg (bad) fldt callq jne (bad) fcmove mov mov jb xchg and mov sbb rex.R js jne jl rorb cmp jrcxz jbe notb jnp or (bad) pop xchg stos popfq movsl insl in (bad) retq lods (bad) pop mov mov pushq scas mov loop jp movabs test cltd or (bad) mov xorl xchg shr add add mov ja (bad) jle xchg in sub adc mov adc and (bad) add cmp (bad) callq fwait in push sub ds mov je (bad) xchg mov (bad) xor ja cmp out mov xlat (bad) fdivrl icebp adc rex.RXB mov repnz loope (bad) fs rex.WRXB rex.WRB add jmpq and sub data16 jnp jbe push shll incb mov mov in out sbb push icebp and mov rex.RB or jbe adc insb jle in cwtl or outsl cmpsb in mov mov push and movabs (bad) mov mov rex.RXB data16 emms and add (bad) mov xor xchg mov adc or (bad) fdivrs out xchg adc jg or outsl mov pushq jg movabs nop adc (bad) add (bad) retq jle add lea mov hlt sub imul pop add enterq add movabs cmpsb stc adc rex.WB pop jl xor cld (bad) movabs test sbb (bad) (bad) rex.RX jge mov rex.WRB adc movsb retq xor and xchg jge adc rex negl mov cwtl pop adc cmpsl rex.X out outsl jl scas pop mov fisubl mov cs jp (bad) iret mov mov (bad) or push add (bad) or mov int jl jle or push (bad) (bad) rex.W mov icebp fucomip add xchg adc orl jge jb addb sahf mov (bad) rex.XB enterq jle xchg test movsb jle movabs stos mov and movabs push mov test or pushq (bad) cwtl rcr cmp (bad) mov jp mov and insl fcompl jnp xor js xor jno (bad) jle enterq clc (bad) cmp data16 xor fwait in (bad) movsb (bad) push xchg mov adc mov out push and fmuls rex.RX loope add cli or sub scas addb imul and out (bad) callq and cmpb jp fs (bad) cld xor mov rex.B (bad) negb cwtl adc (bad) xor outsb (bad) jns enterq in xchg ror jge add xchg sub mov pushq std mov (bad) es hlt mov (bad) test movabs je out xchg mov (bad) xor and mov mov fisttpl add jge jg rex.WR rex.B shll (bad) repz int jrcxz or cmp mov addr32 mov mov xchg jle jge mov outsl retq or (bad) rcr retq subl xor rex.WX scas outsl mov lock and push outsl adc shrl rcrb (bad) jp movsb jg add mov fcmovb mov (bad) loope (bad) jbe in idivl rcll iret subl rex.X rorb pushq mov test mov (bad) (bad) mov xchg sbb sub push movslq or pop addr32 (bad) int3 mov jae xor xchg fdivs (bad) jrcxz (bad) (bad) mov xchg rex.RB push js insb (bad) fsubs adc notb mov sahf mov fadds (bad) xchg lea xor adc insl xchg and pop rex.WXB stc or jp stc (bad) imul add adc (bad) push cmpsb rex.RX (bad) incl (bad) rex.WXB cs jg rex.W add sub push xchg rex.W es mov jns jl cmp push movabs push movabs (bad) mov sbb adc adc lock mov xchg retq rex.X andl es stos adcl fcoml (bad) pushq jle pushq mov push imul leaveq sub adcl (bad) sbb cmpsb (bad) or mov movabs xor rex xor (bad) sub cli push pushq rcll lret pop in lock in js xchg ss cmp movabs jne sub (bad) (bad) movabs mov je (bad) rex.WRXB repnz (bad) mov jnp or (bad) mov out fbstp lods add mov (bad) mov pop jge lock lcall (bad) rex.WRXB add jns ja nop xchg (bad) sbb fcomp (bad) mov add jae sti add and add (bad) sar retq add (bad) jmp jg repnz es pop xor adc enterq shrb stos jno pop jae mov add loopne outsb test or jne retq testl jg (bad) and add (bad) jg movabs cs add rex.WX data16 add addr32 (bad) (bad) rex.WRB pop add (bad) (bad) movabs rex.RXB rex.WXB sbb xchg (bad) sub pop adc xor rex.R in repnz xchg faddl gs test mov out adc pop adcl (bad) mov pop (bad) or sub add outsb je jb rex.WRXB xchg add notb sub subl in repnz shll (bad) stos pop pop jp push or loop rex.WRXB sarl (bad) in outsb xchg nop push jb sub insb mov fwait rex.WRX pushfq (bad) (bad) and add xor rclb sub push xchg fiaddl (bad) lahf (bad) (bad) cmp (bad) popfq rcrb movabs adc retq rex.WX rex.WRX mov lea in xor xor or or (bad) push mov (bad) mov retq cmp cmp in mov enterq add in or xchg (bad) jae mov movabs in xchg out (bad) sub jb pop (bad) push cmp add mov mov cwtl je add push sbb xchg ficomp nop jno xchg (bad) (bad) and xchg ffree pop jb xchg fiaddl lret push (bad) mov rex.WB sub fmulp getsec fist movabs jb xchg cmp fcomps test fimull add leaveq lods mov mov psllq (bad) mov sbb loope fiadd rex.RXB rex.RXB or (bad) cmpsl and jmp movabs test out (bad) (bad) int sub jg add rex.WR add rex.WXB subl callq lahf (bad) fsubrl sub sub jbe hlt imul mov push test es jg add in (bad) add (bad) or pushq rol xor rex.R (bad) jnp (bad) mov idiv adc sbb push in rex.WX xchg jmpq (bad) or imul lea clc add (bad) mov (bad) ja add cli cmpsl rex.WX or add rex.RX movabs (bad) mov or mov (bad) je mov out mov xor nop sarb sbb jno in (bad) (bad) retq out add add lea push mov (bad) rep test jmp rex.RXB sbb lahf pop add cmpsb movabs jmpq pop sub lods push push rcrl (bad) (bad) fstps jbe mov mov (bad) (bad) (bad) (bad) sbb xchg pop movsb mov jg (bad) (bad) adc and (bad) cmp cmpsl out es xchg mov pop adc scas loope jnp push sahf movslq verr rex.RXB rex.WRX mov add xor ja adc imul and test int3 cmp cs cmpsb rex.B and divb ja (bad) data16 movsl adc fild (bad) push scas in (bad) cmp or pop (bad) (bad) mov push rex.XB (bad) mov (bad) rex.WRXB and adc rex.WRX roll enterq jb jle jge loope (bad) mov mov rex.B rex.B jle xchg (bad) fcomi (bad) jo push sub add or add xchg jrcxz or cmp (bad) add (bad) in pop fwait stc add (bad) sbb ficomp add icebp jbe pushq add js leaveq lea push rex.WRB leaveq (bad) mov rex.WX mov add push enterq retq push jrcxz cmp or (bad) rex.WRX mov mov mov jle cmp movb sub clc adc push jp mov add je paddw repnz iret add pop roll sub out pushq (bad) (bad) add hlt cs lret ja add push (bad) (bad) add jb or xchg (bad) xchg or cmpsb rex.WRX add mov or xor add jrcxz mov popfq rex.WR (bad) mov int ficom jae decb jl out rex.WXB ja add jb fistpll (bad) lea mull js add pop xchg mov push andb mov pushq outsb sbb and insb sahf add movabs jb adcl jle (bad) jl (bad) sub (bad) jle rex.R movabs jb (bad) (bad) mov leaveq mov (bad) jle and jg jo push xor mov (bad) mov add and rorb (bad) cltd jg insb rex.X movabs in clc xchg or sub mov rex.WRX lret jb adc addr32 cltd sub test js sbb adc test mov enterq pop rex.WRB fldenv (bad) stc and (bad) add add mov and jp xor loopne dec xor mov insb sarl add (bad) and ja pop test insl cmpb jmp cmp add adc shrb (bad) rex.WRX rex.RXB es pushq (bad) cld adcl jne cmp rex.WB adc cmpsb mov rep cli scas cwtl adc orb push sarb add xor movabs lahf mov rcrb (bad) mov adc (bad) (bad) insb (bad) mov rex.RX add repz xchg in movabs or lea imull sbbl jno sbb xchg add (bad) jg cmc iret sub sbbl cmp and lret sub xchg adc cwtl add int3 fcomps movsl jp xor add and imul pushq in push xchg data16 outsb adc mov popfq (bad) add xchg xor (bad) nop (bad) test data16 (bad) xchg rex.RXB rex test lret xor (bad) xchg jbe adc idiv outsl jp jmpq rclb rex jbe lea mov push mov fnstenv and push rcrl mov (bad) jl xor idivb (bad) imul add gs mov xor pop rex.WRB rex.WRX pop fs fcompl add icebp mov pushq mov leaveq scas rex.XB (bad) mov cwtl enterq (bad) retq add mov fcoml add pop sbb sub cli add xor pushfq (bad) rex.WRXB cmpb ffreep add lea add callq push add imul add rex.WRXB xchg jb mulb (bad) movsb pop mov sbb jg (bad) push fisub xchg add rol loope xlat je adc icebp rex.WR iret retq sbb (bad) add rex.RB jmpq sub lahf mov add mov test (bad) mov js rex.W rex.X add rex.WRXB adc stos (bad) (bad) cmp (bad) insb js push (bad) pop (bad) rex ds (bad) rclb insl je cmp cmp nop sub repz mov sbb and (bad) fcmovnb jle cmc rex.X es mov (bad) cmp rex.RX rex.WXB ficom leaveq fmull stc mov xchg movabs jnp and in vpunpcklbw jp pop pushq mov mov mov scas hlt xchg sub (bad) paddq pop fisubrl sub pop rcr (bad) or mov add incl pop pushq jl cs jnp in nop cwtl fs push jns or int3 mov pop xchg push pop xchg jge scas pop lret lods and mov insl xchg add (bad) cmpsl adc xchg cs rex.B mov in imul imul sbb xor rex.WR (bad) movabs rex.WX mov movsl mov add mov (bad) (bad) imul adc cvtdq2ps mov mov leaveq movabs mov add xchg ds lods jno add loop movabs scas add mov add xchg add xorl rex.WXB add add cmp add out adc stos adc jmp pop rex.RXB movabs xor shl (bad) loope xorl add imul (bad) cmp iret std mov in jmp jl (bad) stos jo scas or mov movabs (bad) retq push cltd cli rex.X push or (bad) jbe rex.WRXB push sub jle lret fidivl mov xorl cmp xor mov loopne mov xor (bad) stos shlb add pushq (bad) fiadd mov xchg push pop add sub sub cmp in nop xchg movabs sbb mov mov int3 out and loopne mov jb mov add pushq hlt push (bad) imul movslq (bad) lock (bad) (bad) mov insb or cli add je ss mov movabs mov pushfq loop rex add addb xchg add (bad) rex.WB add (bad) push add scas mov (bad) imull rclb xor cs adc rex.WXB imul leaveq cmp add lock out sbb mov cs enterq jne adc (bad) add lock add or cmp mov gs and sarb rorl rex.W rex.W sbb jge test or jb and jno xchg mov jle ss clc loop mov stos and xchg movsb rex.WRXB imul rex (bad) mov and xchg movb jg pop out (bad) test xchg mov insl hlt movabs and movsb and loopne rex.WR jns add lods imul jle lret add push mov (bad) stc movabs jae and int3 mov stc rex.WR rex.WRX jns mov xor sahf and out rex.WB fisubrl (bad) icebp lret and out mov xchg add lods pushfq push loop movslq callq scas lret loopne or mov adc movabs rex.WXB xchg mov gs addr32 rex.WRXB jno mov add lret cmc add fwait push jo (bad) (bad) popq cs rex.WRX (bad) jg (bad) (bad) jg callq sub jle xchg (bad) sbb pop out jl add pop mov mov in add cwtl lret sbbb lea cltd xor rex.RB cs mov cmpsl cmp adc cld adc jns jb xor add adc xchg mov imul rex jl jo lods ja test stos cs push mov (bad) test ss (bad) mov enterq cs xchg (bad) lahf push xchg jne imul fs std popfq mov push mov cmp xchg rorb int jo and (bad) (bad) jmp add fmul sub scas add js mov jmpq out or mov fildl sahf xchg rex.RB or test rex.B int3 xchg cmp push (bad) rolb shrb add out sbb add rex.RB or or jle sub (bad) jne ds cmp add and sbb (bad) scas ss callq movslq cli sar sub out and (bad) add in (bad) add insb sub (bad) cmp mov out lea jne jo sarl (bad) adc cmc (bad) jl mov sahf (bad) xor sbb jg in sub jrcxz test out rex.R ds addl jae sbb sbb shl add (bad) lea mov xchg xor mov pushq es jne mov rex.WB lock xor outsb repz scas cmpsl mov callq jp out cmpsl cmp push retq sbb (bad) movabs push mov int add (bad) add movsb xchg nop clc jg cmp lret rex.XB cld movabs mov test jp cwtl mov outsb repnz push cld test jle pushfq loop loopne insl lock mov insb (bad) cmp mov lods fcompp add loop xlat clc add out jb js (bad) (bad) (bad) mov nop scas mov iret test or jle cwtl add pushq sbb mov pop movabs loope push mov fidivr xchg jle rex.WB (bad) repz jp rex.WRB decb jb out iret pop addr32 lahf (bad) popfq imull mov jbe mov jnp pop xchg rorb stos insl pop pop jb mov (bad) test pop pop push mov (bad) out rex.RX (bad) jne out or xchg loop jnp xchg leaveq mov cmp sbb rcrl rex.XB out (bad) in jb loop mov movabs movabs cmpsb jl (bad) out test in lods rex.WRB std jo fdivrl rex.RB (bad) (bad) mov insb mov test jns repz and pop popfq orb insl mov (bad) popfq sbb sub callq jg (bad) (bad) and xchg add jg xchg cld pop adc add adc addl mov add loop push stc sbb cmp mov mov adc vpackssdw add (bad) push (bad) movslq rcr lahf es add (bad) (bad) jp add sub rex.WRXB mov cmpl sti ss (bad) gs sbb nop rex.XB lret add test cmpsl jb (bad) repz mov rex.WXB (bad) jns (bad) sarb jne repz mov add pop out cmp xchg and and mov xor pop pop (bad) add sahf adc jge or pop test push add fisttpll jle out mov (bad) rex.RX iret outsl fwait rcrb mov movabs rex.RX xor pop add cltd add (bad) lret rex.WRX (bad) cmpsb add rex.B pop (bad) and and ds adc out mov or mov jle notb jle scas mov and rex.RX (bad) push test mov pop rex.X fwait sbb pop rex.WXB jg xlat cmc (bad) cmp cmp icebp pop clc movabs (bad) xor ljmp icebp lahf fucomi xlat sbb jns (bad) shrl test clc or jp jge leaveq (bad) add fdivrl jbe movabs in (bad) add insl mov (bad) fisubl cs (bad) movabs outsb or pop cmpl push sbb xor jb outsb xchg mov add int3 (bad) sbb adcl (bad) and sbb add (bad) xchg rex.RX and jl adc add pop out jrcxz js outsl or rex.X sub imul ds add cmp movslq add jae jb lods pushfq jb mov rex.B add (bad) xchg xor (bad) pushfq add repnz cmp sahf clc xchg mov mov rex.WX mov mov or jrcxz repz jb or mov add (bad) fimul rex.WB test add or mov sub add jb lahf jbe lea mov jle imul testl (bad) (bad) (bad) add in (bad) cmpsb cmp jne add fstps adc in test rex.RXB gs loopne jno adc and xor xor or rex.W cli int3 incb sub xchg ror stos mov cli jle cmp sbb (bad) (bad) mov gs insb movabs sarl popfq out xchg fildll add fidivl xchg pushq (bad) insl push pop imul jae je rex.WRB movslq add and mov es jle pop fstpl and lea fiaddl loope mov xchg add retq fwait cmp rex.WR pop jle movslq addb lret scas and cs sbb (bad) pop movsb rex.XB out xchg roll ficom (bad) add (bad) mov mov xchg pop jns rex.X js mov (bad) jno add movsl cli (bad) xor (bad) jmpq (bad) (bad) jrcxz pop mov mov xchg fisttpl (bad) clc fwait icebp push rex repnz xor out cld jle jb nop cmp icebp (bad) rcr insl or out scas push cli cmpsl (bad) cmp jns icebp (bad) mov (bad) out jmp loopne pop fstps pop cli xor (bad) pop push add (bad) jp cwtl callq fildl sarb ffreep mov fnsave xor rex.RB xchg jb sbb (bad) sbb xor lods fisub pushq mov mov jbe mov (bad) jnp out (bad) sti in rex.X (bad) xchg (bad) jne adc movabs xchg popfq (bad) adc xchg iret jrcxz (bad) xor mov testl xor mov jmp test pop outsl cmp and or rex lock add outsb (bad) adc cmpsb insb cmp sbb callq adc js gs and xor lahf jnp mov (bad) mov rex.WR rex.WB loope sbb mov loopne add mov (bad) test jae cwtl pop (bad) xor ja add mov mov add and out sub or (bad) (bad) and jmpq add pushfq pop add xchg insl rorl sub sbb add outsb jbe fs xchg xor jl (bad) cmc (bad) movabs xor mov adc push icebp int3 mov leaveq in test xor (bad) mov pop jp lock xchg lea (bad) add and add pop out fs loopne (bad) adc jmpq xchg and cmp sub or or ja and add rex.WRB out ss out rex (bad) out (bad) (bad) mov cmpsl mov scas sbb leaveq addr32 mov fnop lret test out (bad) mov mov or pushq add add and jle data16 jbe rex.WXB or jle (bad) sbb cmpsb xor or (bad) rex.WB mov rex.WX adc ds and or push pushq sarb not add jmp xor add cmp in fidiv ds callq test jp and xchg xor mov test int (bad) push lret cmpsb (bad) pop xor mov (bad) sbb fidivl jl rex.RX pop mov sbb shrb mov adc push (bad) pushfq mov push add rex.RB pop add xchg stos jb mov (bad) jg movabs sub (bad) ss (bad) mov ja int3 cld push lods (bad) mov cli (bad) mov push xchg sbb rex.WXB out popfq rex rex.RX rex rex.WRB jb (bad) cmp (bad) (bad) test fcompl adc std or xchg or fstl pop es xchg rcll mov (bad) and and cmp push movb iret stos or mov cmp int xor mov or xchg add scas adc subb out lret cmpb scas (bad) rex.B rclb in mov xchg hlt stc jo mov movabs adc jp sub mov pop icebp mov add cmp (bad) rex.R and fldln2 (bad) rex.WX push repnz add int jrcxz subl lods stos mov leaveq orb jmpq insl movsl rex.XB pop pop je pop sbb movsb jmpq mov fs rex.WR movabs retq jmp and movabs fdivr jb and (bad) pop imul cmp (bad) jmpq insl sub add leaveq (bad) xchg test lret (bad) xchg jnp (bad) (bad) rorl pop fucomip sbb (bad) push mov or fcmovbe pop jnp (bad) xchg (bad) outsb sbb test add mov xchg (bad) fisttp and (bad) or (bad) mov mov xor cwtl pop pushq out movabs iret and jrcxz mov enterq xchg repnz xchg (bad) xor fnstsw callq insb sbb or mov adcb and xchg js adc fdiv push rex.WXB in xor xor leaveq jle rex.X out add push leaveq (bad) add imul xor int sub pushfq sub xlat out push and mov jns addr32 push xchg lret xor sahf lods rex.WRX pop xchg mov sbb pxor rex.RB cltd fildll jge out pop popfq (bad) out mov out nop adc cwtl mov movsb add fcompl insb pop or pushq (bad) push rex.X push add dec sbb sahf pop pop in xchg stos push sub mov rex stos fidiv (bad) cwtl jg incb loop (bad) mov and sub test sub jns push sub lods xchg retq mov rex.X cmpl leaveq cltd or add ja jmp xchg movabs mov in movsl pop callq insl pushfq add xchg sbb pop (bad) rex.WXB add xlat adc add xchg (bad) add cmp pop add fist out xor addr32 (bad) cmp jne jg movsl cld mov (bad) rex.W jp outsb cmp ja add and jg jbe mov js repnz out sbb jle cwtl iret pop addl mov cmp sbb (bad) xlat loope pop imul add int3 or jo mov loopne loope sbb sbb rex.RXB mov push enterq or (bad) std out fistpll push add (bad) fisttpl rex.WXB sarb xchg mov add fbld mov andb cmc rex adc push in lods enterq add shl jbe pop add rex.WRB rex.RB add fmull add nop sbb xor pop and rolb mov subl pushfq sub add mov (bad) cmp sar xchg int3 movabs ds jmp in xchg (bad) mov xor fisubl shlb rex.X mov sbb sbb retq xor rex.RXB divl adc cmp jne sub and outsb (bad) (bad) cmp xchg movabs cmp xchg push sahf xchg jle out add cli jge lods mov movabs cld push jbe xchg add push (bad) jmpq in jne cmp add callq clc rex.WXB adc xchg mov sbb rex.WXB (bad) jl mov mov (bad) mov jae and movsb cld movslq or mov rex.RB insb or lods out jp pushq pushfq push add cltd adc rex.WXB out (bad) adc add add data16 (bad) xor mov (bad) jl ja mov insl in (bad) push xor push icebp fbld mov scas stos out mov addr32 pop (bad) fiaddl sbb data16 mov xchg pop or xor and test movabs mov loopne rex.RB popfq in add add cmp mov jrcxz mov (bad) out addl pop (bad) cmp cmpsb jrcxz add (bad) xor add stc movabs xchg mov (bad) out (bad) test cmp lret stc cmpsb data16 es std cltd mov push out rex.RX xchg loope rex.R shlb rex.XB js jbe xchg push (bad) (bad) stos mov loopne or rex.WX and movabs rex.WB data16 and push test (bad) out (bad) add (bad) and pop imul pop leaveq xchg (bad) repz push mov mov rcrl adc add test cmp loope fdivl ja cmc push (bad) out je add std rex.WRB rex.B addr32 rcrb cmpsb repnz sbb xor stos fldcw js movabs js pop mov (bad) rex.WRXB lock or ss scas rorl (bad) outsl je rex movabs mov rex xchg fist (bad) xchg add decb and idivl retq rex.WRX (bad) mov mov (bad) pushq movabs adc mov (bad) xchg jp jne xchg icebp sbb in mov mov rex.RX jle pop movabs jne jbe cmpsl rex.XB mov lahf je (bad) (bad) jmp add lret xchg incb sub sub (bad) fs push enterq xchg xor rex.WRXB and rex.RX adc sbb pushq lods gs xchg adc and rex.B popfq push movsb jle pushfq (bad) xchg fisttpll mov add push fucomip rex.WRXB icebp movabs xor mov (bad) push (bad) mov or loopne add movabs movabs mov add adc and stos div sbb or add cld sbb push xor pushfq sbb mov push (bad) mov pushq add out mov scas pop adc mov cwtl add jno rex.XB (bad) test fisubl add mov and jbe rex.WR add jl pop jp jle outsl movabs jrcxz xchg test (bad) mov (bad) (bad) pop ds (bad) in mov and push cmpsl test jp add vmulpd out cmp cmp retq rcl add (bad) hlt and and outsb xchg (bad) fcoml (bad) jne repnz fildll lods xor rex.W rex.R rex.WR mov scas cltd stos (bad) mov push xchg mov jp movabs or mov jl jle (bad) bswap add mov loopne rex.X xor movsb xchg outsb add rex mov popq ss (bad) add out sub pop cld rex.WXB add imul pushq rex.WR (bad) scas pop fcoms test lret cmp mov (bad) and add cmp pop adcb xchg enterq div jnp test xchg cmp in punpckldq (bad) cmc sub and cltd (bad) jmpq jns jrcxz lahf iret jle jno out cmp adcl rex.WX mov (bad) imul out (bad) and jg jo adc rex.WX fimull add fnstenv jnp rex.RXB test movslq insl (bad) (bad) push cmpl jg stos fidivrl (bad) stc ja xchg test mov mov movabs jg jne lret addb jbe movslq push rex.WRB add xchg pop ds add fistpll adc mov (bad) xchg movabs cmpsb mov adc and rorl adc test pop pushq pop orl adc adc (bad) push fdivrp jg stos mov add jl loop pushq sub mov stos jp or fcomp add or clc (bad) jbe rex.WRB push cmp mov or jne xchg (bad) (bad) jp (bad) rex.WR (bad) (bad) rex.WRX and scas outsl and cld xchg and cmpl movb (bad) testl int3 out jne out lods jb cmp jns (bad) (bad) (bad) jg mov and or insl (bad) rex.RB fld xchg insb pushq (bad) sti jle or push jg jo fxch pop jno lea gs loope movabs (bad) pushfq loop add pop mul int lahf push (bad) movabs lock (bad) ja add jae jns mov rcll mov mov stc repz rex.WRB sub sbb (bad) scas add sbb jp adc mov enterq ds add sub jnp add (bad) and (bad) mov (bad) std (bad) movsb mov es jrcxz add pop and pop (bad) jg movslq (bad) cmp jp or cmpsl test (bad) mov mov imul rcrl sbb out add and fdivp cli addb rcll add out sub rex.RXB adc jb sub rex nop cwtl add (bad) adcl add and jl mov lcall ficom cmpsb pop mov rex.WX nop pushq lock int3 sbb (bad) lret xor mov cmp xor scas xchg and and lahf (bad) (bad) (bad) loopne (bad) fdivrs pop iret cld pushq rex.X rex.W rex.RB callq addl rex.WRB (bad) rex.WRX cmp gs mov sub add insb out lods ss (bad) pushq int sub mov jp push or fcoms add or hlt sub int subl xchg mov repnz xor xchg pushq pop lods cmp (bad) decb sarb (bad) xchg jrcxz and lret cld xchg cmp movabs xchg lock mov jne jne rex.RX jge (bad) je outsb ss movslq outsb (bad) mov mov test rex.WX mov cli pop sub xchg (bad) mov je sub addr32 or loop sti fs (bad) lret mov xchg adc (bad) pop (bad) pop jle rex.WX cmp int or popfq lcall (bad) js (bad) imul sarl jne stos and sahf and and test xor (bad) sbb lods (bad) loope add fldcw or rex.XB repnz cmp mov mov sub jbe pop cmc cmp or (bad) mov stc mov mov (bad) rex.RXB fadds mov xor (bad) outsb (bad) jns (bad) or ficom rex.B nop lahf rex mov je fistpll fistp (bad) ja cmp lods (bad) sbb mov xchg (bad) mov adc jp mov je xchg mov xchg rex.X push loope xlat insl jl mov (bad) and in rex js jae (bad) ss jbe and jl repz outsb movsl stos mov sbb sub (bad) push sub lods xchg mov test sbb jo mull (bad) std fcomps jl jmpq jmp fdivs (bad) repz movsb mov movsbl (bad) xchg (bad) and stc pop cmp xorl scas cwtl (bad) pushq add (bad) int3 outsb in add cmp xchg jle (bad) imul add xlat incl outsb (bad) stc adc jg (bad) jne addr32 lods push xlat fldenv int3 add testb jl rex.RX je xchg add sar or rex.WX (bad) fimull or add rcrb mov pop jmpq xlat ja pushfq add lock jle (bad) jae rex.RXB add mov fstpt cmpsb movsq (bad) (bad) (bad) jrcxz adcb movabs sbb fs stos push jns sub jp or or sahf out xor fcomi mov and mov (bad) sub (bad) rex.R xor rolb lret outsl rex.XB rex.WRXB (bad) pop jrcxz scas fdivrl jns adcl pop xchg add stc popfq lahf mov mov hlt mov xchg add mov int cmpsb jle cmp add enterq cmpsl xor mov rorl jno jo xchg pushfq jmpq (bad) adc fsubs pop cli add (bad) add pop xlat jmp (bad) adc jbe incl cld (bad) push jmpq repnz sub cmp ja flds vmread movabs xchg rex.W rex.WB mov and mov in in femms rex.X lret mov enterq pop mov sbb add mov icebp in mov xor xchg in callq add adc rex.WRX cmp (bad) adc iret (bad) cwtl fs add jg sbb pop add imul ss loop (bad) jae (bad) adc lods lahf (bad) pop xchg sarl mov outsb add mov add stc test and hlt test mov cmp fnstenv jb and lahf jns rex.R add icebp (bad) xor and jmp sbb xchg loopne mov (bad) add sbbb add (bad) fwait cmp out addr32 popq lods cmc xchg push and adc jg fsubrs adc add and imul push sub jmp rex.W mov pop add add cmpsl sub mov stos mov jne jle xor jle adc xor rex.RB push jmp (bad) jrcxz shr push rex.WXB rex.WXB push xchg rex.WRX fs (bad) and adc cli xchg fcmovnbe (bad) xor mov movsb sarb std sub push pushq (bad) outsl adc loope add cli mov out add sub push stc rcrl js in mov sbb leaveq mov and rex.WRXB loope fnstsw fidivr add hlt mov jmp rex xor adc (bad) (bad) mov and rex.WX (bad) lea and rex.WRXB clc mov (bad) jae xchg xor jns jno lods movabs (bad) xchg pop movabs mov test lahf add xor adc iret mov iret jo xchg xchg jrcxz ss add test mov (bad) add and fldcw cmpsb cmp retq fs (bad) leaveq and mov jg and sbb movabs xor mov scas add mov or pop jo jle push (bad) test push test and mov mov xchg cmp fiaddl fist xchg xlat dec adc (bad) (bad) jrcxz movslq mov scas mov sti fcomp jmp sub lods ss stc mov mov rex.X jbe addb add imul mov cmp out (bad) xor jg add imul sub xchg xchg adc (bad) (bad) push cli out data16 (bad) jb (bad) xor mov mov and and add xor push retq fidiv rex rex.WRXB (bad) (bad) pop (bad) (bad) push jmpq jmp fimull cmp test push js pushq out or mov xor mov rex.B jb pushfq cld vcvtps2dq mov xchg jmp xchg retq lea rolb outsb pop push mov adc xchg (bad) pop je and fcoms movsb fcompl xchg adc sub insl sub cmp sbb fwait xor pop movsb leaveq and movabs or lret movslq std mov (bad) (bad) int pop lods pop or xchg rcll (bad) addl jmp movsl jnp (bad) mov mov push pushq sbb nop (bad) xchg cli jb jne sub mov add sti movsl cmp add lods mov or addl loop out fwait (bad) add cwtl push pop (bad) lock testb (bad) mov js,pt xor jg shrl out movsl (bad) jp in pushq mov jrcxz stos sarb (bad) or jg xchg sbb (bad) fwait cli sub (bad) or lods add adc popfq js in mov in jg sarb cld xor cmp mov (bad) xchg jb fnstenv popfq or addb sub jg add rex.B rex.WRXB js nop fistpll insb pop lea int3 add xor lods imul or enterq jae adc (bad) (bad) rex.WX add add xor jge jmpq (bad) loopne pop (bad) push add test ja pop jne rex.WB lock jp mov or add push push hlt pop (bad) out scas sub cltd test enterq retq pushq incl jrcxz (bad) mov add callq add vcomiss pushq (bad) mov movabs xchg sbb sarl (bad) (bad) cltd fist adc rex.WRX pop xor add (bad) mov (bad) (bad) mov xor (bad) jp pop lahf mov push (bad) int3 pop sub shlb rex.WRX rcl mov scas fs (bad) pop mov insl (bad) (bad) mov stc stc add xchg (bad) and push add sbb xchg loopne cmp mov mov or (bad) andl subl sbb xlat andl xchg add leaveq fwait mov mov mov test mov (bad) repz jle push jg jg mov rolb jb,pn adc in rex.WRXB (bad) scas sar pop (bad) add test mov and jmpq cld fwait (bad) jo pushq or add enterq sbb fisubrl ds and lods cmp add stos leaveq movabs fnstcw imull add sbb fwait add or mov icebp test adc retq mov and (bad) subl in roll jle mov movsb (bad) push (bad) rex.RB adc sarl xor leaveq pushfq (bad) loop jg pushq (bad) lret scas jnp out pop shlb insl pop (bad) rex mov xchg rex.WR push add mov clc out cmc mov mov lahf add sbb push and insl sub jns or enterq add jp movslq fninit lret icebp rcrb mov cmc add rolb sbb stos movabs (bad) (bad) jno mov push outsl lahf cmp rex.R cmpsl jg cwtl rex.WRX xchg jp (bad) (bad) int (bad) jg mov add roll xchg test sbb (bad) ss rcr add jrcxz sahf mov js cmp lods xchg xchg (bad) shr sarb push or xor jno retq lods jne cwtl jbe sub addr32 rex.WB shr fwait out cld ss xor scas and rex.WRXB mov push cmpl xchg (bad) sbb (bad) movabs add sbb mov (bad) jle (bad) sub push and add fs add lcall jle adcb leaveq mov pop rex.W ds push fiadd lret add rex.WRB (bad) (bad) cmpsb js push jge push ja push scas (bad) fs jl es and incb out jnp xchg add rex.WR add adc push mov adc lret or sti (bad) (bad) xchg ficomp or pop xchg sub mov rex.WRX jno movabs or adc or std leaveq jl xchg imul fs cmpsl iret jg (bad) int add jo loope rex.RXB mov (bad) xor scas movsb mov add movabs (bad) incl xchg xor add jns (bad) loopne (bad) cmc add cmpsl add or divb sbb push lea or sahf pop jge (bad) jmpq (bad) or mov (bad) jle mov cwtl cmpsb pop pop icebp rex.WR js or sarb (bad) loopne cmpsb add cmp rex.X movabs add ja insb xchg cmp rex.XB sbb loopne (bad) rex.X test cmpsl jbe (bad) xchg jle sar (bad) xchg or xchg loope scas cmp add rex.WX mov add push stos rex.RX mov cmc and (bad) es movabs (bad) repz insb push (bad) sbb (bad) dec cmpsl ficompl and (bad) add testl push fdivrp fdivs cpuid add mov xor ds rex.RB mov push mov sbb jne imul jp movsl scas and push cmp btc (bad) jb add rex.XB pushq mov add or ja shl test xor mov (bad) sub (bad) pushq xchg xchg push rorb (bad) mov pushfq out (bad) xor movabs (bad) js mov cmp push movabs sub test xor mov outsb mov out pop jge sbb (bad) lret movabs cmp fsubrl add or add (bad) cmp (bad) (bad) mov pop sbbl jl xchg fstl (bad) mov rex.B js xchg cmp rex.WXB scas (bad) retq add rex.W mov mov sbb scas rex.B jrcxz (bad) fild xor rex.RX mov add mov adc movabs mov mov xor hlt mov sti movsl js jns (bad) (bad) jg xchg lock outsb add out add jmp fadds mov mov (bad) fs addr32 jae adc mov and adc callq movabs jle je cli jp test xor (bad) imul rex.X test and sbb std (bad) cwtl jl orl iret icebp (bad) shrl insl repz vhaddpd (bad) lret add es push cmp rex.WB adc (bad) rex.X add je jnp repnz pop and pop in rex.RB pop cld and pop loop (bad) (bad) sbbl adc pop (bad) (bad) out xor je push xchg int3 mov (bad) rex.XB loopne mov movabs jrcxz mov and and (bad) xchg mov add (bad) xor add sahf add adc roll sub and (bad) mov movabs pop popfq xchg (bad) add loopne jg (bad) jnp add negl fmuls lret (bad) incl add movabs lret xchg xchg mov sbb add adc js ficomp lahf mov mov xchg (bad) xor xchg lods (bad) xor jle iret sub repz divb (bad) jp cmp movslq nop sbb (bad) (bad) mov mov push (bad) xchg lahf (bad) rex stc jp and cmpsb negb jne lods out add dec mov idivl (bad) stos test (bad) loope clc rex.RX add callq lea adc out mov xor add push sub rex.RX sahf rex.RB (bad) enterq add rex rcr add mov jo jae add cld loopne rclb add pop imulb retq cmpsl and adc mov or push add fwait push stos adc xor roll (bad) add and xchg lods push push adc add sub lret xchg add es (bad) (bad) add rex.RX test jb pushfq retq cmp jge lods cmpsb or and rex.WRXB js push and faddl cmp rex and fsubrl out je (bad) sahf imul jb (bad) mov jnp mov movabs stos rex leaveq xchg addl xchg inc push outsb sbb jp jg xor mov mov add mov callq jno jge mov xorl out test movsl mov add or mov push sbb jae add rol int fdivrl mov in xor xor pop in mov fisttpll lods fidivrl sbb test add loopne retq fs mov enterq add movslq lret scas mov paddusw rex.RXB decl enterq add in rex.WRX popq adc rex.WR rex.RX push rex.WRXB (bad) in add cmp (bad) jb sbb lret cmp rex.RXB rex.WXB jns icebp retq sub add add (bad) pushq adc jo xor (bad) (bad) ja jp,pt xchg icebp and stos (bad) cwtl jg out lahf fmull sbb (bad) push test lods in lock (bad) fs rex.W mov rex idivb cmc adc (bad) or jle mov jno popfq clc xchg add push sbbl jle fs mov cmp (bad) out add add pop fimul add stc sbb adc sub incl fwait scas add retq adc fidivl je std push add rcl or fmulp nop (bad) add or sbb pushfq imul movsb (bad) (bad) imul mov insb sbb push incl jae out mov rex.R loop fistp jo add pop xor (bad) xchg mov mov cli or (bad) jno rex.WXB callq cmc xor shll test add test (bad) idivb xor sub cmpsb cltd idivl add rex.WXB (bad) pop jle sbb xor rcrl lods or outsb fs xchg retq mov adc jg imul leaveq retq pushq adc in xchg jp mov (bad) fwait sbb adc (bad) pop jbe icebp or push mov cmp sbb sbb popfq js xchg jle mov xor (bad) or sbb rex.WX cmp jo loope add sub in lahf mov or xchg mov ficoml lret fistp rex.WX push sub pushq repz (bad) xor pop test cltd sub iret or fiadd and add fdivr pop nop mov add icebp cmpsb jno add movsb clc xor cmp cmp rex.R mov decl lea mov rep rex.WRB mov out push jmpq xor xor rex.WB out enterq out mov push lahf (bad) js sahf jne lret add sahf loope scas (bad) pop or vpmuludq movl mov lea movsb mov fdivrs mov mov (bad) sti sub rex.WR mov push ja (bad) mov xlat lods (bad) jb and pop sahf sub movsl addl stos scas jmp jg adc add imul andb cmp or (bad) (bad) (bad) add mov xor ficom sbb mov or (bad) pop adc mov add sub outsb adc rex fmull cmp sahf cmp (bad) and jo add sbb pop push outsl jmp pop mov rex.RXB loopne imul cmp lahf and xlat mov jns loope (bad) lret rclb decb mov mov pop movsl in (bad) fcom testb movsb pop mov movabs iret jl rex.B jg cwtl push push js mov cmp jle imul mov add (bad) mov stos cld (bad) (bad) addr32 cli lods nop (bad) mov cltd (bad) mov (bad) rex.WRX rex.WRXB (bad) mov cmp and shrb cmp mov rex.W fldl sahf push jle (bad) pop out sub jl adc fdivr iret rex.WRXB sti addr32 add (bad) and add (bad) (bad) xchg jg testl lods mov jg push sub (bad) outsl lret jb push (bad) (bad) sub adc (bad) mov rex.WX (bad) add mov cli divl mov sub data16 jmp fldt (bad) lret add insb and (bad) pop repz pushfq or jle ja fstpl cmpl add imul xor or xchg push nop add mov add subl mov (bad) adc and or (bad) shl popfq cltd jmp clc (bad) cmp (bad) push (bad) add mov mov cmp movabs or xchg mov rex.X and addr32 in movabs pop cmp adc push adc retq movslq (bad) xchg cmpsl add std mov or lods rex.B movslq rex.R jo or (bad) add insl sbbb fmull movabs cmpsl pushq cmovbe cwtl lahf in mov test rex.WRXB jle,pt sbb ss push repnz pop jp in jne or adc stc jg rex.RB (bad) jle jl fwait pushq jg or stos (bad) and add rcrb add (bad) mov add xlat movabs repz rex.R test cltd add mov rex.RXB xchg jb sti mov cmp (bad) cmp (bad) sbb (bad) (bad) mov scas add loope mov jae (bad) in or imul cmp adc cmp ficoml lret loope rex.RB iret fiadd cltd scas or stos xchg jb (bad) jb sub (bad) jo lret mov repnz pop add jp loopel adc adc (bad) add jns mov (bad) shrl jl in sbb notl xchg pushq in xchg rex and stos decl sub xchg jg (bad) adc jbe pushq adc outsb loope movsb (bad) adc push movabs rorl jl add (bad) (bad) movabs add rex je add repnz test iret out (bad) hlt and icebp push lods cs gs add add (bad) decb cmpsb xchg rex.WRX rex.X rex.RX movslq add (bad) mov fs mov xor jmp (bad) (bad) movabs mov (bad) sbb pop rex.W pushfq (bad) jge cmpsb sbb (bad) add xor cmp sar out add xchg add (bad) lea repnz rex.WB adc movsl jo stos out loope xchg sub add mov (bad) mov add fistl add rex.R lea add movslq retq adc lea rex.WX push mov gs sub add rcrb jg sbb xchg jl outsb fiadd pop and jle rcr xchg xor cmpsb js rex.X jg cld notb jge mov rex.WRXB (bad) cmp and sbb cltd cmp add sub mov jl xchg (bad) jno and add stos in (bad) mov nop jmpq pop rex add rex.RX es jl cmc adc cli (bad) pushq (bad) sub mov pop jne rex.X movslq ja xchg add add cmpsb xlat insl (bad) xchg in sbb sbb add mov cmp sbb pushq xchg jbe rex.WR out insb rclb cwtl je scas imul or adc jp xchg fisubl jg add (bad) roll (bad) mov xor (bad) jb rorb rex.X add and push repz add (bad) sbb pop lret cmp add loope jmpq xor rex.XB rex.XB mov jle movabs rolb jmpq (bad) (bad) scas (bad) xchg add (bad) adc add push callq jle std pop adc hlt test and loop stos mov cltd cwtl add jmpq mov mov mov mov cmp (bad) stc jl xor jmpq or xlat lods fdivs rclb pop jne mov pushq mov jb add sbb in add sbb (bad) xchg pop rex.RXB add rex.W jp rex.XB cli rex.WRXB xor pushq (bad) xchg mov add sbb clc rex.WRB rex.W fs (bad) xchg insl add mov mov jle rex.WRB jg mov (bad) rex.XB add or stos (bad) jl rex.WRB xchg outsb pushq fimul lahf lret loopne pop adc (bad) fcoml and pushq (bad) fwait add roll jp pop xor pop adc cmp rex.RX fcmovnb mov mov add pushq std rex.XB insb fwait mov lods sbb mov in fcmovne mov mov test mov xchg or rcrb sahf gs orb insb (bad) movb js loop and xchg or fucomi jle (bad) loopne xchg mov add shrl cmp (bad) pop pop scas mov and xchg (bad) sub (bad) sbb (bad) jne fldcw nop jge ss or (bad) ss (bad) jns or (bad) xchg (bad) pop mov fnop test pushq cmpsb outsb xchg pop (bad) xor and xchg incb pushq add imul outsl mov mov in cmp add or mov (bad) add (bad) js (bad) mov leaveq jae and add add std add adcl cmpsb (bad) adc jb push (bad) rex.XB insl jl jle or or incb test sbb add outsb clc push (bad) pushq add sub xchg adc rex.RX pop xlat testl sti mov cld stos add add fucomip xor pushq js incl sar imul jne enterq xor je js out jno loopne lret mov adc (bad) add callq sub add and lret loop (bad) pop (bad) jp mov cli rex.RXB lahf pop sbb js (bad) je xor or (bad) imul jo cmp lock jrcxz std jns rex.WX xor jle ror (bad) fildll sbb push addr32 add mov and jp (bad) xor pop or (bad) add mov add cmpsb andl adc loopne idivb sub add (bad) jb mov lea cmp imul stc jns cmp xor rex.R jb int3 jns in (bad) fmulp popfq fild mov clc jbe sahf mov add rex.R cmp (bad) jno sbb lret cltd cli push in xchg sbb jp roll (bad) xchg (bad) add test (bad) gs xchg pop or sub clc and pop add rex.R lldt add (bad) jne xchg stos (bad) fldt nop cmp (bad) xchg sub push jb clc movabs push xchg and pop sub (bad) icebp mov xchg add xchg in jnp sbb cmp sub (bad) stc adc push sbb xor rex.B mov xchg movsb jb adc stos (bad) ss or (bad) add mov test and adc cmpsl jns jg cs rex.X rex.RB (bad) cld mov lahf rex.RX ja xor xchg or fdivs mov add mov or sub or mov rex outsl add (bad) imul add movslq sbb add movabs (bad) xor xbeginq ss rex.WXB cmp mov add lret (bad) jg sbb mov idivb adc jrcxz mov cmp iret fidivr scas pop (bad) in push jb insb lods add test rex.WRXB sti jl jb mov fistpll lret (bad) rex.X adc jg movb xchg rex.RXB adc cmpl pop add (bad) mov shrl xchg addr32 add xchg lret andb or (bad) sbb (bad) (bad) out (bad) rex.WX ss xor jmp or add add lods mov and clc data16 mov add andl jno scas (bad) lahf ds cli (bad) (bad) mov xchg incb or (bad) loop insl stos sub enterq mov xchg (bad) mov sahf es andb mov and xchg out (bad) (bad) mov sbb rex.X cmp mov (bad) in xor out rex.WXB paddsw cmc add sbb (bad) xchg (bad) mov cmp (bad) movsl cmp lock (bad) lcall jle xor add mov hlt fist xchg add mov (bad) mov fnstenv loopne xor (bad) cmpl jge fwait push insb icebp mulb rex retq pop mov scas fisubrl cmp (bad) ficom adc shrb adc ficomp cld (bad) hlt loop rex.B bnd rex.B (bad) jbe fmull pop clc sub xchg rex.RB cmp jge in loopne add jl ss popfq and test ss rex.XB es insb loopne (bad) lret je shr jno hlt (bad) add xchg fwait add mov shrl jge add (bad) rclb (bad) xor rex.RXB jrcxz mov mov pushq shlb test xchg cmp jo xchg jle cs or mov (bad) jb push rex.RXB rex.W push addr32 sub lock lret in cmp (bad) outsb fdivrl cli rex.WRXB jbe loope or fisubr rex.RB repnz sahf jg (bad) movsl out mov movabs jno add (bad) (bad) (bad) xor add lret imul es insl mov pop mov jae push outsl adc (bad) sbb (bad) sub mov or pushq je insb add and sbb rex jl jg movabs mov add xchg int add adc or sub orl (bad) rex.W jle (bad) sub fdivrs cmp mov and adc (bad) repz rex.R cmpsb pushq rex.WX jns adc or rex.WRB (bad) add jge (bad) movslq imul rex.RXB add mov xchg sahf pushq mov (bad) fbld pushq test adc add (bad) cmp add mov pushq mov xchg test icebp (bad) cwtl rex insb cltd imul es and mov add mov jno jge mov fsubrs jg mov insb rex ds push in add xlat and jmpq sahf (bad) xchg (bad) pushq rex.B xchg fnstcw or (bad) xchg (bad) jl rex.R rex.RX (bad) mov fs rex or mov rex.W mov fnstcw sbb outsb (bad) add pop mov gs scas movlps cmp clc cli and (bad) mov outsb lods movsb rclb add pop (bad) mov imul rex.WRB int sbb insl xchg std (bad) pop insl pop pushq jg push xor pushq xchg (bad) cmp or sbb add jge xor movabs sbb pop rex.XB out rcll or in xchg pop fdiv (bad) mov add outsb insl sbb push mov jp fdivrl xor fcomps push mov insb or mov jg (bad) in retq fadd fidivl fistpll add loope rex.RB jp mov (bad) out test rex.WRXB add xor and pop lock or cs lods xchg (bad) sub rex.WX rex.X clc push cmp mov rex.WRB (bad) or mov mov jg (bad) mov fnstcw rex.B rex.X (bad) add rex.WRX push (bad) mov mov rex.WR and jge add jle pushq cmc test shl xchg sub jne mov rex.X rex.RB sbb lahf rcll rex.RX sti mov or add jns cmp lods add iret test mov push jp mov mov fimul out mov gs xor cmc rex.W mov int insb add (bad) add nop jno loope in (bad) (bad) imul sahf (bad) pop ja rclb sar xchg push or jp add adc in mov mov xor rex.R out rex.XB mov cmpsb pop rcrl sub insl imul and adc and push xchg scas movsl insl and pushq rex.X movabs (bad) xchg fmulp test (bad) push rorb (bad) fucomp or xor insl mov cmp insl or nop enterq add cmpsb jl rex.RB in mov leaveq mov or (bad) in adc push nop jle adc (bad) sbb mov (bad) sub mov and (bad) push jmp cmp in add jg fnsave adc adc sbb int movabs ds or nop lahf push rex.X cld (bad) jg jbe mov sbb mov (bad) mov add jmpq mov mov (bad) loope add ljmp adc rex.WRX pop or sarb movabs cli rex.XB adc sahf jnp imul cmp mov movabs movl jp (bad) callq (bad) sub mov rex.WR (bad) jmp add popfq xchg rex.WRX sahf (bad) rex.WRXB out rex.RX fs and push xchg mov add adc cwtl (bad) gs or sub jle (bad) (bad) cmpb fild nop push mov cli mov push jp xor roll es insb (bad) sub jmpq cmpsb jbe in (bad) push rex.W shll and incb jo retq xor repnz ror gs je int rex.RX sub movb jo in imul sarb and cmpsb mov lret scas sub adc (bad) mov out orl add or data16 insb cmp rex.WB rex.WRXB rolb mov cmp and mov scas cmpl rex.RXB cwtl out sahf (bad) sub mov (bad) xlat stos rex.B xchg jp jb sar loopne (bad) cmp repz mov cmp lods rex.WRXB (bad) (bad) jmp xchg mov mov xor rex.WX lock icebp movabs sub rex.WRB add (bad) cmp (bad) mov (bad) js (bad) in rex.WX and (bad) imul cld std (bad) callq jno add (bad) mov testl cwtl jbe mov jrcxz add sub pop adc xchg xchg (bad) jbe paddd leaveq imul jb xchg and je mov pop in loope loopne (bad) rex.W rex.WR fs pushq xor flds (bad) sbb rex.WXB rex.X add repz cmp out and int3 mov out cwtl add movslq cmp mov int3 rex.WRB rex.W lods rex.WRB or (bad) (bad) fdivrl jne add stos push pop fadds jb add (bad) fs es (bad) sbb mov cmp outsb stc jg in cmpsl test cmpsb fcom test cmp icebp sub or (bad) rex.WXB (bad) lods incb loopne xchg push xor test (bad) add jrcxz,pn fsts pop std cmpsb add movslq movabs in sbb rex.WR rex.RX (bad) out jp fimull add (bad) pushq push loop add (bad) add xchg retq test (bad) mov addl xor or add mov add je mov jno add xlat (bad) stos sbb cmpb pop movslq jmpq (bad) shrl cmp (bad) mov xor (bad) sbb mov stc jne push adc jg loop cmp (bad) sbb cli add mov rex.WRX (bad) xchg mov insl xor and add test es mov add jg pop add cli test je jecxz,pt jns test add imul rex.W add cmpsb fistl cs repnz mov imul in and sub add fucomi mov rex.X gs retq (bad) mov cwtl fdivp xchg pop je stc movslq pop je fdivrs out cwtl jmp sbb movabs (bad) (bad) rorb add jl and rex.W (bad) test (bad) mov jae stc add pop sarl js mov (bad) and sub add sbb xchg sbb rex.WRX movabs fstpl (bad) jp stos pop test sub not add (bad) insb mov (bad) lea pop mov add push add xor setnp jbe (bad) (bad) or clc sbb (bad) fsubs add (bad) jne adcl rex.W lock mov lea jl sbb mov or mov (bad) and and mov leaveq jae (bad) pushq sub sahf hlt jno mov (bad) jg rorb cwtl lods mov fimull fidivr (bad) es add movsb (bad) out add ds fstl xchg lahf mov lods mov add mov pushfq mov sub (bad) mov xor xchg imul xor out fdivl fist mov xchg push callq add icebp rex.WR rep addr32 (bad) mov insb rex.WB loopne lret in lods push pop xchg add mov xchg lahf retq cmp rex.WRXB mov push and xchg out rol xor xchg rolb orl (bad) stos add (bad) add xchg rex.W (bad) cmp je mov jbe shll rex rex.RX ss rex.RB xchg subl push (bad) repz adcl out insb add jp rex.WRB rex.WRX sbb push sahf mov jbe jae (bad) enterq mov rex.WRXB mov adc (bad) insl es mov sub movabs xchg add cmp xchg sub movsl add sub (bad) (bad) callq and in loop jmp movabs add sub sbb add (bad) (bad) mov test int3 xchg rcll add mov sbb mov es jl movabs jb (bad) adc add or pushq rex.X cmp clc scas jnp add push pushq (bad) add add divb std adc movsb and add mov mov sbb (bad) lea mov lods jmp fnstcw mov nop rex.RB sbb jge outsl (bad) (bad) movabs js fisttpl adc rcrb (bad) xchg lret cwtl rex.WRX and sbbl stos (bad) in lahf lods mov fnstcw (bad) ss in mov pop sub ds (bad) retq lret cmp add (bad) (bad) push repz xor incb mov in shr mov mov mov sub mov popfq rex.WXB (bad) repnz pop sbb lahf rex.WR data16 (bad) popfq fwait add sbb (bad) cli rex.WXB rex lods add mov (bad) callq je (bad) outsb xor pop push (bad) xor fisttpll pushq rex.WRB push sbb cmpsl or outsb jg (bad) mov je push es lret (bad) jmp and retq shlb (bad) hlt imul pushq push imul iret shll xchg test sbb pushq rex.B es test add fwait rex (bad) (bad) (bad) jmpq movsl mov negb (bad) jne out push rex jbe outsb mov xchg loop js pop add xor or fwait subl sub movsb push jo mov pushq mov xlat fdivs shlb push xor add cmp sbb int3 mov jp rol lods or push (bad) (bad) cmp (bad) adc adc adc scas add out mov mov scas (bad) xchg popfq fimul es rex.WRX loopne stos sub movabs pop push mov or and adc adc xor add push cltd (bad) (bad) insb js rex.RXB jl rex.RX xchg mov outsb rcrl std scas cwtl add and callq jo in je (bad) nop insb (bad) xor xor pop imul out retq (bad) lret decb lods (bad) rex.WX scas (bad) jne outsl sti (bad) data16 cmp int3 imul pop mov rex.WX mov insl sub sahf xchg nop (bad) cmp pop (bad) in jbe test int (bad) (bad) rex.RX in or adc (bad) xor sbb out imul sbb adc lock (bad) (bad) mov pop pushq lods jg jae loopne retq cmp (bad) out outsb adc or shll loope int3 rclb mov xor add (bad) jrcxz jns rolb sub mov sti lods in rex mov insl pop (bad) mov (bad) add loop addr32 int movsl add leaveq (bad) xor (bad) (bad) adc cmc jle addr32 pop js int3 enterq test jmpq push movabs (bad) push rcrl (bad) fstps add stc jg and add movabs mov (bad) xor repnz int callq lock mov pop (bad) mov cld mov jne cmp cmp jno movslq outsl pop movabs mov fiaddl rex.RX js rex.XB rex.X add loop fdivrs (bad) jbe pop movabs mov es jmpq sbb mov (bad) adc sbb (bad) mov (bad) cmp rex.RB (bad) leaveq jns jp sti mov rex.R sbb add retq push (bad) add test idivl jmpq mov test rex.WXB gs rex.WRXB loope sbb scas stos add (bad) mov (bad) adc or int setle add ds xchg movsl rclb movslq (bad) sbb and movabs mov rex.W or imul cmp jle ss (bad) jl push ficomp (bad) decl test rex add cld pop nop xor and mov add stc (bad) pop add in cld pushfq lahf retq rex.XB fisubr stos je stc and cwtl rex.WX (bad) xchg mov stos nop and pop mov or lret imul sub xor xchg movabs mov pop (bad) adc jns push divl pop sahf (bad) (bad) cmp jp adc (bad) pop and rcll push mov sub rex.RX (bad) lret es pop and adc add xchg sub push (bad) rex.WXB es xchg fldcw cmpsb xchg (bad) add push and rex.WX scas xchg pop rex.WB je pushq (bad) add rex.X scas int3 jbe fmull imulb sub mov xchg and mov data16 push add xor or pushfq (bad) bnd int or xchg incl mov test cld jne cli mov in jp sub mov xor rex.W fldl sub (bad) in pushq xor repnz lods add rex.RX vcomiss subl adc lret fild sub mov stos out cmp out cmc rex.R retq add mov (bad) add or in add push andl mov hlt rcrb fidivr loope add gs insb movabs fimull mov xchg (bad) rex.R rex.WR pop add cmpb cltd mov movsb fwait add lea setg lods xorl mov sbb outsb nop pop add (bad) movabs cmpsl mov add rcrb xchg lods jbe xor cltd and movabs stos outsl and es test (bad) callq or jbe jbe or adc int3 jno (bad) js or rex.R roll callq xchg (bad) fcmovbe cltd pop and lock movabs pop std pshufw cs divl (bad) jo mov mov xchg jmp movsb outsb jg pop rex.B sbb jmp jg mov (bad) add (bad) add (bad) in xor rcrb sti cmp insb cmp cld mov std sbb pop adc movsb rex.W cmp mov jbe (bad) popfq fbstp rex.WRB add (bad) rex.WB (bad) adc mov add or (bad) callq lret and mov (bad) in mov pushfq add (bad) mov cld (bad) jmpq mov (bad) retq (bad) cmp pop (bad) mov out cltd add movsb gs cld testl je lret sub add xor cmp (bad) add lea add data16 fsubrs js rolb ss roll pop addl adc or or sbb xchg xor add (bad) jno (bad) lret lcall add add cmp shrb (bad) mov ss mov xchg and lods ds or add sub (bad) (bad) and push add (bad) rex.WRB xchg sub (bad) sbb pop jns cltd lock sub sar cs js add outsl callq jp (bad) cltd repz imul insb outsl xchg js jbe rex.RX rex.WX jg (bad) iret (bad) pop jne sbb mov jp (bad) or test cmp sub jg sahf lods clc cwtl rex.WRXB pushfq adc shll (bad) and (bad) xlat and sub rex.RB rex.WX jmpq (bad) xchg jle loope cmpsl (bad) pop rex.XB push or cld test enterq (bad) sbb mov jle fmull add cld jg (bad) jnp scas sub add (bad) (bad) xlat add xor cmp movabs add add std add mov xchg mov add lret cmpsb leaveq jae (bad) adc rex cmp cmp cmc jmpq pop iret jnp (bad) jp icebp es adc (bad) es subl (bad) adc cltd jge add mov hlt test and fwait add je add jmpq movabs cwtl jp insl adc (bad) push jg jle add cli sbb xchg loope rex.RX sbb (bad) xor stc repz jnp xchg pop rex scas push addl out jp rex.WX (bad) or xchg (bad) cmp jnp jle lret (bad) cmp xchg lahf mov fs (bad) std (bad) jg cmpsb jle fiaddl pop ss and add add addr32 mov sbb xchg xor jp shr (bad) add sti add xchg adc rex.WRB pop pushq and (bad) (bad) scas xor push jrcxz add stos int3 jle lahf int sub mov or mov sbb clc (bad) add ffree sbb adc out xor add popfq jle sti pushfq cmp add (bad) xchg out rex.W add mov rex.WB add xor mov loop rex.XB rex.R pop xlat (bad) jle jne (bad) pop xchg jle cmpl (bad) adc leaveq enterq mov cltd movabs xchg (bad) notl jl movsb xorl jmpq xchg mov mov or int3 jge add jle int js or mov mov pop mov rex.W (bad) addr32 (bad) jmp inc outsb (bad) (bad) lahf mov jno sub rex.WXB es xchg jle retq imul or je sub xor sbb repz sub lret clc jae jns js jg (bad) (bad) xchg kandnb mov ds xchg xor rcll pop (bad) and shrl (bad) adc rex.WRXB mov fwait sub fiadd sbb pop rex.WX (bad) fnstcw jle xchg retq jmp and mov mov jle rex.B repz movabs adc rex.WR rex.WX jns fbld (bad) (bad) (bad) outsl (bad) hlt sbb fsubrl insl xor (bad) xchg fist rorl push sbb lcall mov sub adc (bad) xor (bad) mov sbbl mov and in xchg xchg push (bad) xchg fcoms cmpsb stc (bad) callq imul (bad) pop cmp (bad) jl sbb adcb sarb test adc (bad) incb lret xchg xchg (bad) add adc lods movabs es iret sub cli rex.WB xchg sbb jmpq mov and and int (bad) mov mov stos rex movabs (bad) icebp jg add jnp (bad) clc mov retq cs sbb add lods (bad) sbb idivl push or shr add (bad) je jne js xchg add clc nop pushq jle retq data16 insb incb adc and add out and in push adc sub adc outsb addr32 (bad) adc rex.B (bad) mov rex.X stc (bad) xchg (bad) clc or jp mov pop (bad) rex.R sbb (bad) xchg mov cmp pop jns xchg xchg pushfq (bad) jb xor jae lahf lods mov sbb pop lea and jrcxz cmp or sbb xchg sahf scas xchg mov add jg decb callq xchg xor (bad) fistl repz insl movabs rorb push stc rex.WRX loopne sbb xchg or add hlt (bad) xchg mov pop xchg lret push add jne int movabs adc add int3 rex.R js (bad) pop mov sub nop (bad) rex js movabs add and cmp (bad) mov xchg rex.RX push flds jns (bad) mov (bad) push insl imul or rex.R loopne cmp movsb stc testb xchg fsubl jle sbb cmpsl nop mov jb ss jnp insl movabs leaveq or je std mov repnz insb add rex.XB je jb (bad) mov or callq add mov rex.R (bad) add push pop cmp enterq pop xor xor jle ja scas mov (bad) jae mov rcrb (bad) punpckhwd mov data16 outsb mov rex.WB fs movabs jno cmp rex.RB rex.RB mov jbe jg ja lea (bad) mov pop lret xchg (bad) add rex.WRXB xchg xor jp test (bad) sub mov lea jge (bad) or jle add addr32 pushq add insl sub pop rex.WB sub rex.W add in fcompl imul jns or sub jg (bad) rex.W jbe mov (bad) fsub mov cmpsb rolb mov xchg jnp rep clc push xchg cs jp mov mov (bad) pushfq adc mov (bad) xchg repz xorl fldt out jbe js callq sahf scas lock repnz cmp or add (bad) addq cmp je lods xchg mov cmp int lcall rex.B cwtl or (bad) pop xchg (bad) addr32 loopne push scas (bad) rcrl sahf add roll (bad) (bad) (bad) lea fs test rex.WRX pop mov mov and xor rol add (bad) sub lea xor mov push out add or jle sqrtps jb lret int3 scas (bad) outsb jbe rex.WRB fist movabs icebp cmp push pop add in pop (bad) add push pushq es add rex.WX rex.X mov imul add loope xchg xor es (bad) and mov div push push jg jo scas lret cwtl mov adc rcrb shrb decl jl rex add or (bad) jp loope fwait (bad) mov movl mov jno sbb rex.RX xchg sub (bad) jle scas lahf jnp xor (bad) jp jmpq jge repz js mov leaveq xchg test mov sub enterq adc mov in rex.WX cmpsl (bad) (bad) mov sub es xchg sub and fldl pushq imul (bad) jg outsb rorb imul mov (bad) jbe in scas (bad) sub mov mov cli xchg ljmp test and pop (bad) (bad) ja adc mull fistl lods mull xor retq sbb xchg iretw clc cmp cmp ror cs in (bad) xchg xor (bad) xchg and push mov xchg mov mov iret push movabs je test mull mov lods (bad) mov in and adc nop (bad) pushq fildl sub (bad) mov test (bad) fs (bad) mov add (bad) (bad) out jg and mull rex.RXB mov cltd jp xchg je rex.W movabs mov andl mov sbb fmul xchg xor nop mov mov and mov es cwtl sub (bad) retq pushq jae (bad) xor rex.WX jnp fs mov xlat icebp sub mov add adc jp fisubl xor mov add or add rex.R repz or jae imul repnz add rex.RXB fmulp add fisttpl mov (bad) jl mov xchg cld adc add push cmp push (bad) sbb (bad) scas rex.WXB adc jns retq hlt cmpsb addl ljmp adc icebp jbe push add cmp or idivl lret mov add rex.W rex.RB rex.WRX out jne movabs xor sti iret retq mov movsb jle cmp rex.W lret (bad) add shrb repnz cmp add or hlt (bad) xchg fnstcw fimul pop and icebp roll xor mov lods rex.WRX rex.WRXB lods add mov fmul push (bad) add addr32 sbb imul adc xor (bad) sbb clc (bad) sub sti xchg (bad) cmp icebp iret and sbb mov (bad) mov (bad) add push retq (bad) (bad) pushfq add jmp cmpl rex.WRB sbb adc pushq cld xor popfq test lret (bad) add stc fs cmp xlat in testb jl pop mov stc mov rex.RX jrcxz mov rex.WX (bad) (bad) pop rorl mov (bad) add push xchg mov movsl xor (bad) jns push pushfq and xchg movslq xchg sbb outsb adc mov or in or pop mov in add add (bad) shlb jb mov add callq je mov and add movsb xlat add (bad) js add out callq cmp push sbb movabs xchg int out (bad) add pop xor cmpsl movsl insl (bad) movsb iret js (bad) (bad) mov pushq xchg xor push jne and xchg in add mov xchg (bad) push adc jle rex.RX and xchg nop test cwtl (bad) pushq repnz ds loop rex.WRB xor jo jg push jg mov xor sub xchg jp fs cltd (bad) idivl out (bad) (bad) sti jp pop xor fcmovnbe rex rex.X jnp (bad) push cmp rex.WRXB fldt rex.RB sub rex.WX ss shlb xchg cmp fwait test mov cwtl js rex.WRX js rex.X push xchg sar loop in push jbe sbb (bad) (bad) fwait cltd pushq cmp mov rex.X or mov add movabs loopne add loop mov add rex.WRX cwtl int3 sbb imul stc pop rex rex.WRB (bad) rcr (bad) addr32 mov mov movslq jnp sbb sti jle sbb pushq rex.WR xchg pop xlat add xor xor lahf sti xor rex std mov data16 (bad) add (bad) add push test jo cli mov xchg movsb icebp fsubrl xorl pushq out pop xchg xchg rol nop mov movsl (bad) iret in add (bad) mov enterq repz loop cmp rex.XB cld (bad) jbe and (bad) rex.RX inc int3 pop add mov pushq add jl cmp rex.WRX retq (bad) cmp (bad) and lock xor mov (bad) enterq retq repnz xor (bad) add lods jge cmp mov mov fildl roll or sbb rex.WRB popfq rex.RX lods adc sub pop nopl sbb adc cmp movsb add add jae sub or sub ror adc rex.X xchg (bad) (bad) fs stos xchg mov (bad) divb movabs stos add xchg rex.WXB js pop xchg fimul or and test push cltd jrcxz xor (bad) add fs icebp rex.WRXB pop retq cmp ss xor add rex.RB js (bad) cmpsl (bad) (bad) xchg add pop pushq xchg fldt imul jnp (bad) xchg cwtl movabs jnp rex.RB repnz pop clc data16 enterq add lret adc jmp outsl jo pushq and jns (bad) imul sub jge jns stos mov (bad) mov (bad) fwait (bad) mov es rex.RX jo jge test jle movsb ficompl sbb cmp add mull cmp sarl adcb sub add jae sbb mov and mov xchg push sub iret retq pop mov sbb fisttpll addr32 (bad) cwtl push add rex.WB add movabs mov (bad) sar (bad) pop jne xor out xchg and movsl adc jle pushq clc lock test sub insb mov movsl (bad) or cmp (bad) xor and pushq scas rex.WXB (bad) je push scas jno cmpsb jb popfq std mov pop lods (bad) cld movsb insl adc lea cwtl bnd movsl rex.WRXB mov and mov adc sub sbb es cmpsl (bad) adc (bad) (bad) add mov lret fs rex.XB loopne cmp rex.RX pop sub andl xchg (bad) mov xlat adc and jle int or (bad) jle and adc jmp std cli (bad) (bad) cmpsb xchg add movsb (bad) js js xchg movabs (bad) xchg fisubl cli cmp lock insl (bad) je cmp rol fild rcrb and leaveq cmpsl hlt xor cmpsl notb jo retq sub insb (bad) pushq pushq nop or jrcxz fdivrs cmp lods mov addb cmp sub (bad) fistl mov or sub push cmp loope xchg sbb rex.RXB lods ss mov test int sub (bad) pop jbe and leaveq retq test rex.B rex.RX rex.WB (bad) mov (bad) gs sahf xchg (bad) sahf mov (bad) shrl mull je fnstsw or sub adc xchg (bad) (bad) mull xlat cmp sar lods push data16 rex.WX fidiv add insb (bad) jno mov jae fildl movabs (bad) rex.XB rex.W (bad) pop out add popfq mov (bad) rex.WX pop retq add mov add out mov add scas xor hlt and shlb mov add jg popfq push (bad) loop,pn add (bad) in add mov pop ja (bad) add fcmovnbe sbb lods mov xorl add pop add ss rolb jg (bad) clc (bad) iret xchg add in in test add movsl mov (bad) divb rex fs movsb fist data16 shll adc rex.WX cli cltd and xchg fildll retq jg jmpq jne (bad) insl outsl mov add mov rex.R rex.WRX flds jbe loope rorl lret (bad) rex.WRB (bad) cmp lahf add cli sbb push (bad) stos (bad) jb jl fidiv (bad) loopne adc (bad) xor jle xchg stc and rcll loopne test or (bad) sub rex.R leaveq adc rex.WRX rorl mov add (bad) out cwtl vxorpd jb or sbb repz int sbb jl out pushq (bad) jae mov add js push fldl rex.WB jg (bad) pop cli rex.WX out cld cmpsl add push adc pushq icebp mov (bad) roll movsb add xchg (bad) (bad) out in adc jno loope cmp jmpq in stos sbb cmpsb cs jnp cs callq xor (bad) stos add (bad) push (bad) adc shr mov lea (bad) lret divl mov loop mov enterq (bad) (bad) leaveq mulb (bad) cltd add (bad) (bad) rex.XB icebp mov movslq pop (bad) or notl mov lcall add jbe sbb (bad) retq testb cmp (bad) adc (bad) subb jl add xor gs js cltd jge mov (bad) rex.WXB jb mov sahf clc jnp popfq (bad) add and sbb (bad) xor xor scas cmp or jge jbe xchg rex cmp xor imul mov cmpl mov pushfq xchg (bad) mov icebp mov movl (bad) outsb sub jg addl data16 (bad) movabs rex.RX mov jle and pop xor jg jge push (bad) adc xchg xchg push add enterq rorl (bad) pop (bad) xor test rex.WB cmp in fiaddl pop sbb cmp nop cltd (bad) jle jp and (bad) mov push or rex.WRX imul xor std retq xlat add fistpll rex.WXB mov (bad) cmp in movabs addr32 mov rex.WRB xor hlt (bad) add (bad) sti xor add imul lea je (bad) lea rex.R jl push (bad) pop (bad) idivb mov faddl cmpsb jns adc (bad) cltd adc sub xlat loope movabs jmp outsb and add fwait mov xor cmp push xchg xchg sarb jno (bad) lea jge jmpq loopne rex.WRXB lahf scas xchg add xorb in sub add adc ja adc rex.WX and scas inc mov mov adc add fisttp cmpsb clc pop add cld mov sub jnp loope (bad) add loop push xorps pop sbb decb adc mov or add mov decb cmc mov es push and mov jle rex.WB loopne mov jmpq ja or (bad) stc pop (bad) jp int push add add rex.WR mov shlb loop jmp sub movl mov fisttpll push and or cmp add sbb pop (bad) jp lret jle jle xor movabs scas imull (bad) sbb add outsl mov rex.X stos add jmpq adc add cmp mov adc rex.XB decl or (bad) or or lods popfq sarl mov sub loop insl (bad) rcrb mov cltd add (bad) jo (bad) imul lret rex.WXB and fidivrl sub iret xchg xchg shlb xchg rex.RXB mov (bad) pushq in xchg add rex.WX imul in add pop xchg fwait rex (bad) (bad) movabs pop insb (bad) mov movsl rcr mov xchg sub cmpsb xchg nop jg pushq sbb (bad) and fidivrl mov (bad) and (bad) notl sbb fwait rex.WR xchg push add push xchg lods movabs mov (bad) add (bad) mov test cmpsq lea insl rex.WRB sbb ja (bad) pushfq clc add test cmpsb xchg add mov (bad) jle pop testb jmpq push (bad) int3 (bad) jg xchg jmp pop callq pushq sbb or movslq mov (bad) mov and jmp jp int3 xchg icebp (bad) mov and adc repz jg sbb movsl (bad) rex.R rex.WR cmp mov add rex.X pushq insb (bad) rex.WRXB jle popfq xor sti rex.WR int lahf xchg fnsave mov push rex.WRXB shl add sub (bad) movabs (bad) pop lret add xor add (bad) int js movabs imul lahf add (bad) (bad) mov push pushq add (bad) out lret lods sbb xor clc gs jge xchg xchg lahf xchg fucomp add mov and (bad) push lret xchg pop (bad) (bad) adc jg out (bad) orl imulb (bad) test push insl jg mov (bad) (bad) cmc stos mov sbb movsl pop in (bad) loop iret (bad) jle pop int xchg rex.X and cwtl lea jrcxz sahf (bad) jmpq xchg movabs lods rorl outsb test in (bad) repnz sub out pop stc push (bad) fistp push (bad) nop movabs (bad) in shll test mov (bad) ss rex.WX sahf add ds pop mov xchg xchg and js mov jb pop nop (bad) xchg and mov movsb (bad) (bad) push (bad) lret in stos mov (bad) lahf (bad) jle repnz lods mov xor adc test adc lret mov rex.WXB shrl cltd and sahf scas out (bad) push and rex.X jge mov icebp fild and nop pop retq and retq rex.R imul adc scas sahf mov sbb clc insb callq adc js adc mov mull (bad) insl xor cmp jl or ja jle outsl addl rex.RB mov retq imul insl popfq jle sub and add shrl nop cli sub or pop test fimull js in pushq and pushfq cmpsb mov (bad) xchg (bad) mov hlt adc xchg xchg push add xchg xlat hlt in mov (bad) (bad) lock sbb out (bad) jl std rex.WR (bad) adc (bad) jae test jb insb movsb out jne mov sub loop jg fmuls cmc or gs rcll and xchg rex.WXB jl out (bad) jne outsb (bad) mov mov cmp xlat (bad) jg jrcxz in or rex rex.WR sbb cmpb mov (bad) lahf ja std test sbbl xor nop jb shrl pop xchg fnstenv js add in adc outsb (bad) or push (bad) idivl xor xlat cmp fmuls fildll cmc push notl (bad) fsub ror jmpq (bad) adc movsl cld (bad) (bad) (bad) jp push mov adc sub and push fs cltd adc (bad) (bad) cmc (bad) mov test mov fcmovnbe test sub add (bad) adc jns (bad) mov push cmp (bad) push pop out adc add xchg std pop cmp repnz popq sahf xor nop rex.W rex.WB es xchg gs movabs mov and (bad) lock sub lods (bad) add jge movabs lods xor addr32 rolb (bad) push lret cmp test xchg mov xchg pushq sbb cmc or or sbb rex.RX or xchg in mov push sub movabs ja add es mov pushq jbe mov imul or jl (bad) scas pop or (bad) cmpb out nop fdiv rex.RB pop addr32 lods lret or jl cmp rex.RX mov jb mov xor cmp sarb int mov jbe xchg jl sub add (bad) adc pop xor jge jg adc int (bad) test imul add sti cmp jbe (bad) (bad) insl cld and mov insb cwtl cld jge xchg (bad) pushq cmpsl outsb outsl (bad) imul and adc mov enterq mov jl shll stc movsb rorl rcrl rex.WX rex.WRX sahf fcoml ljmp mov test test in sbb sbb fistl (bad) sub jno push jno mov fdivrl mov (bad) adc (bad) in stc (bad) flds int or cmc rex.RXB or rex.WX sub and movsb adc rex.RXB (bad) stos rorq jo je (bad) jg pop jge sbb adc lret pop sahf fstpt loopne or div insb fiadd xor xchg jne fdecstp jl push rex fisttp test fsubrl mov sarb xchg xor sbbb xchg ja (bad) xlat cmp nop cs popfq std add xor rex.RXB repnz jmpq (bad) jb jnp pop cmpsl jne icebp jmp sbb movl jmp (bad) lahf rex.WRXB mov (bad) (bad) jmp imul (bad) mov adc mov movslq (bad) xchg and (bad) xor sbb mov add insb rex.R imul add (bad) adc jge imul jnp cmp jge sub rex.WX (bad) mov rex.WR rex.WRX insb mov fdivrs psrlq xor insl idivl scas mov rex.R (bad) or pop test (bad) ja pop xchg jmpq sahf and cmp test out rex.WRX test rex.R rcr adc in add cmpsb fstps add adc cmc adc (bad) mov xor mov jge movslq add pushfq jbe rex.WRX lock adc rex.WRXB (bad) and mov pop jl (bad) lods ja pop (bad) rex.WB out sub cltd push rex.X gs (bad) mul jle idivb insl retq xchg (bad) and sbb xchg jo xchg jge loop clc lods sti xchg jrcxz (bad) movabs pop mov sbbl add pop rex.WRB int3 icebp (bad) push xchg jmp pushq jbe (bad) (bad) jbe movabs (bad) add fs movabs (bad) fcomps xor (bad) sti sarb mov push fistl pushq sbb (bad) mov cmpsl (bad) movabs jbe stc mov jne sub loop out (bad) or scas rolb test (bad) cli add xchg fild imul and jbe roll cmpsl jg movslq rex.WRB repnz mov es pushq test rolb movabs leaveq movabs notb jge push jbe repz (bad) cmp mov rcll jge xor (bad) xor gs adc (bad) mov (bad) ficomp rex.R psrlw xchg pushq xchg outsl add mov out (bad) rex.WRB rex.RXB adc pop cmp rex.WRX (bad) adcl pop test jge mov jle jbe ficoml mov stos stos rex.WRXB repz loope out rorl js rex.RXB enterq lods or jne movsb (bad) and or test ds rex.RX rex.B mov push sub push jae mov hlt sub add xor mov (bad) pop fistp movabs cmpsb jb jno (bad) (bad) mov jl jrcxz xchg rex.RXB mov mov rcl jl icebp lods data16 mov cmp add sbb stos pop mov and loope or rex rex.WRB test cltd (bad) lods mov add adc outsl sbb jrcxz jmp xchg mov jle mov rex.WX rex.XB and jp xchg rex.WB (bad) (bad) ds jmpq (bad) fsubl ja rex.WRXB js rex.WXB add push mov mov xchg pop sub iret jno and cmpsb gs pushq mov rex.W ljmp xrelease stc (bad) xor fiadd mov (bad) movsl mov push add cmp (bad) cmp xor adc or (bad) int3 lea sbb cmp fisttpl jmp frstor movabs push mov jnp (bad) retq std movslq idivb sahf int3 sub adc loop ficoml push rex.W cld rex.WRB stc shrb movabs pop add mov icebp push or pop (bad) test insl and cmp add iret scas push add rorb outsb jnp rex.W rex.WRB insb mov lret (bad) (bad) test test or pushq (bad) pushq (bad) cli icebp popfq pop mov movsb fnop movsl (bad) adc mov stos loopne sub jns rcr sbb scas push sbb push mov je jle (bad) (bad) (bad) adc lahf xchg push rex.WX sbb test push sti movabs adcl (bad) fimull int3 cmc movabs add out cmpsl jp (bad) rclb xchg cmp jno push xchg outsb mov loopne pop std add rex.RX cmp add (bad) iret jge xor mov and test rex.B divl mov (bad) es (bad) imul pop jbe add and adc movsb jns retq mov add outsb xchg rclb jo or incb push lods in mov icebp mov add (bad) (bad) rex.WB (bad) ficompl and and insb lods pop push jle fdivrs out pop mov adc (bad) (bad) push test add add mov mov out add jg je fcoml pushq mov xchg movslq xor xchg (bad) mov mov sub xor testb rex.WXB push sbb xchg (bad) (bad) ds rex cld outsb sub rex.B add mov stc data16 imul xchg rcrl xor add sbb or cmpsl retq jo add (bad) (bad) jge scas test or insl lods fidivr sbb add (bad) (bad) sarl mov fstp (bad) or jg add mov fwait xchg testb cmp jns adc add add shrb mov stos add pop cmp rex.R mov add xor scas (bad) mov lahf jp pushfq jrcxz int rex.WRB pop out or lret imul rex in add cwtl pop adc jae mov mov push sbb jo mov test (bad) jg or out push cmc jge out shlb lods lods adc cs pushfq out js movsl mov add sbb stos xchg (bad) movabs xchg rex.RX (bad) lods add loop and cwtl jnp jge jrcxz ffreep retq fistl movslq cwtl jge fwait shrb rex.WRX popfq jno stc adc retq pop incl ss xchg and cs movl jp jae divb (bad) std fild insl (bad) lahf sub xor rex.XB insl fcomps jmp xchg jo rex.RX (bad) jnp fbld (bad) (bad) testb lods sti imul or sub rex.WRX xchg cmp mov mov mov lods adc mov js push mov rex.WB (bad) (bad) gs jnp xchg and (bad) rex.WXB cmp xchg pop push xchg cmp notl rex.WR and fisttpl sub mov jo cmp test xchg (bad) fildll test insb (bad) test rex.B movsb enterq jns stc adc jae mov (bad) sti adc fild xor rex.R rex.WRX adc (bad) ss add push rex outsl jp xor jl fistpll sti (bad) push xchg div jb div mov and mov mov push test mov cmp mov pop xor es jne sub mov xor (bad) push cmp push mov pop (bad) retq (bad) rex.WXB push sub or rex.WRXB leaveq xor rex.WRX enterq jne add loope (bad) test push mov add movabs in outsl and xchg cmp or cmpsl add scas (bad) popfq sub mov or js rex.RX lahf jno xchg faddl cltd out adc (bad) lock data16 paddd push rex.WX cmc fsubs (bad) cmp (bad) rclb mov push or mov jle rex.WXB in pushq jo int movabs movslq movabs sbb out add adc cmp sti mov mov dec xchg jnp jbe jge push (bad) pop lret pop es gs jmpq add (bad) sarl jl loop xor rex (bad) fcmovnbe movabs pushq xor stc repnz stos fsubr add xchg pop xor jns ror and pop jle insl (bad) xor push fldt nop pushfq lock or leaveq adc fcoms fstps pop imul insl push push (bad) pop movsb addr32 fwait adc cmp nop movabs out insl jns cli std (bad) xor loop test mov mov (bad) sub movslq loopne xlat rex.XB imul mov add jge cli rclb stos fst mov rex.W rex.WX cmpsb push sub movsb xchg jns outsl or mov adc lea addr32 mov repnz (bad) mov sub icebp mov rex.RB pop lock cltd movabs outsb fild or cli pop imul (bad) xor mov push xchg orb xor idivl mov addr32 mov cmp mov pop jne mov mov mov or (bad) and mov (bad) imul jo test adc outsb (bad) loop rex.XB fisub xor jle,pn mov vcvttsd2si (bad) popfq (bad) add pushfq adc add xor mov test add in ds (bad) int add movabs mov mov and rex.WRX cmp and sub pmaxsw rex.WRXB fs jl pop loope mov jge sub cmpsb out (bad) pop jno rex.WR mov add pop (bad) (bad) sbb in movabs xchg faddl jle mov shlb and jp adc out add popfq xor fidivl mov and fldl cltd int3 push lods out jne js leaveq in sbb xor rex.WB and add retq (bad) (bad) and (bad) sbb mov rex.WRX movslq std neg add add add xor add mov pushq mov xor pop and cmp (bad) rex.X hlt fwait rex.RXB int fmull and add mov loope (bad) adc (bad) sub pop xor or jle xor sub mov ss rex.WRB rex.WRXB xor scas (bad) je (bad) (bad) jb cmp pop sub adc jmp pop or movsl movabs jle jb jg or lahf scas (bad) (bad) add mov ss imul (bad) repnz icebp and in (bad) xchg cmp rorl add pop adcb add cltd pop outsb jg mov lret out iret (bad) icebp sbb mov mov (bad) mov mov (bad) roll fmull insb test jnp adc mov scas jns add or and pushq pop addb add rex shl (bad) push jrcxz rex.R add xor test push notl or cmp scas cltd cmp add xchg (bad) mov or add or sti retq mov stos movabs addl sahf rex.WX out add cmpsb or loop mov add pushq adc and cmp scas sbb (bad) incl mov and movsl (bad) (bad) push and clc and jp (bad) cmp pop mov jg cmpsl rex.R (bad) sbb (bad) dec jo xlat rolb pop lock jle rex.RX pushq (bad) retq imul out push (bad) sub test and outsl and add push scas (bad) fs rex.WRB pop sti insl (bad) xchg mov add cmp sbb cmp popfq rex.X shrb mov jns adc mov cmpsb rex.RXB mov fdivs lea pop or and add push jle mov lahf fcomps (bad) psubsb mov rex mov in cmp (bad) push movabs rex.WRXB jae (bad) retq (bad) mov mov and mov jmp addr32 (bad) xchg add xor (bad) cmpsb jne pop cmp mov push (bad) xchg in or test cld (bad) jp (bad) jno (bad) mov xchg add movslq add cmp lods (bad) stos nop rex movabs pop out out mov push rex.WRXB rex.WRB rex.X mov jg jg rex.RX stos sub (bad) scas (bad) (bad) jbe out jno xor repnz cmp data16 ficompl rex.WX cmp add add xor rex.WRB imul cltd jp fisttpll sub outsl mov mov jle or repnz rex.WB rex mov repz pop add (bad) mov sahf movabs pushq rex.XB jle repnz push lods mov and add and ficoml sbb rex.RB cmpsl xlat (bad) rex.WRXB add jp rex.R decl pop add cmpb faddp xor mov push xchg pushq nop adc popfq xchg xchg cmp mov movsl (bad) jmp mov jge jl jo nop push mov (bad) pushq cmp (bad) mov (bad) mov icebp in jp repz xchg jnp mov xlat mov (bad) fsincos (bad) adc movsl (bad) cli cmpsl sub rolb out push retq (bad) lret xchg out push je imul xchg jg sub movabs (bad) cld mov and rorb add and stc sub xchg lods cwtl ss sarb push cmp fiaddl adc fnstsw fcoml insb out mov (bad) (bad) cmp or rex.WRXB test and rex.XB add push int cmp jrcxz cmc add push mov movslq or mov in pushq fnstsw pop movabs fs mov nop cmp lods enterq (bad) rex.WRX retq movabs jbe pop sbb sbb xor adc icebp jp jl and outsb callq xchg add jle jg mov adc js rex.WRX mov mov cmp add sub rorb cwtl jg xor push and (bad) or jl jg ja adc jp xchg xor sub movslq add lock pop jno (bad) sahf cmp add (bad) (bad) adc pop mov add push pop adc mov mov and adc rex.X stos pop rex.XB mov and xor add xchg (bad) lods cmpsb or insl movsb jp pop cli rex.X or stc sbb pushq out out addl imul add and icebp xchg add cmp and in sbb xlat xchg (bad) rex.WR scas loopne (bad) mov add adc insl incb rex.RXB sbb int3 xor retq jns (bad) callq testl (bad) lock rex.RXB (bad) test jg jrcxz (bad) jb push repnz sub and add je adc in (bad) xor rex.WR rex.WXB rex.WB retq xor mov add in jae xchg (bad) callq mov pop jg xlat cs push add adc sub xor (bad) jb icebp push jmpq retq mov imul adc mov loop rex.RX rex.X xchg add pop xor psubsw add add xor xchg add sar mov add add (bad) retq adc jle pop jg rex.XB adc (bad) jmp sub fcmovb loope outsb rex.WXB xchg and (bad) (bad) mov jg cmc pushq (bad) movabs mov pop andb rex.RB retq xchg test rex.RB test int3 loop pop (bad) fdivp jo lea movsb xor cld rcr pushfq (bad) add movabs cmpsl lret popfq cmp mov sub cmpsb imul mov sarb add movslq xlat xchg flds lea lods mov push sbb movsl add and mov (bad) (bad) insl lods push (bad) lret (bad) cmp (bad) cwtl js xor (bad) sbb mov (bad) leaveq xchg movsb lock addr32 add data16 ds stos or imul xchg jp mov mov (bad) jns (bad) jo adc (bad) mov pop xor subb and add rex.RB rex.WRXB and mov cmp (bad) fisttp rex.WRXB cmp test test nop jnp or (bad) xor mov gs (bad) jns leaveq (bad) mov (bad) outsb rex.R pop jp pop xchg jg in jle (bad) (bad) shl mov or (bad) je mov rex.W xor sub cmp xchg rex.WX sti stos jbe fld sbb cwtl xchg cmpsb push rex.WRB scas push mov lret stos xor loop imul addr32 (bad) (bad) mov push pop mov cmp fwait mov xchg add push pop jo retq mov (bad) cmp add movsb (bad) xor jne pop test push pop sub out insb rex.RB js out je enterq push jl shl or rex.WRX rex.RXB xor callq and jge jmpq (bad) sub jnp fild orl xor push or mov stos (bad) add xlat jno adc xchg mov xor sub movabs test js mov (bad) adc fisubrl or and pushq cwtl mov adc jne fistpl push and add (bad) rex jne mov lahf fldl cmp stos addr32 (bad) mov fstps add cltd cmp sbb (bad) xchg flds (bad) mov (bad) add out xor in sbb xchg addl pushq rex.RX (bad) (bad) mov adc lret fs (bad) callq (bad) sbb cmpsl mov vmovss insl (bad) jb cmp xor pop mov sarl fisttp (bad) mov lea cmpsl fadds retq (bad) rex.WR rex.WX jmpq rex.R add sbb add notl xor pushfq and jp add (bad) pushq popfq add or sub insb add xchg add rex.W and cmpsl mov fisub fwait mov add fisubrl push push (bad) cmp rex.RXB add rcl (bad) movabs add sti cmpsl mov clc and in push cmp loope out mov fidivrl jg xchg (bad) push insb std jmp jb (bad) out movabs sbb movabs rex.X ljmp jo add fcmovnu movabs add push fiadd or sub push test insb test and (bad) lahf shlb add cltd (bad) push in mov rex.WRB ss mov (bad) int or popfq retq (bad) (bad) mov outsb (bad) sub sub (bad) stc (bad) rex.WR (bad) pop mov jno (bad) icebp push mov jae mov (bad) stc push out iret icebp iretw sub add or xor (bad) and cmpsb fnstsw jne and (bad) jp lods rex.WR movabs pushq push xor ds movabs std stos jns test and (bad) not sar fsubs (bad) (bad) mov add shl mov xchg sub stos or push fistpll movabs jns enterq (bad) pushfq (bad) movsl jb in int3 imul mov cmpsl add movabs mov mov and adc rex (bad) mov pushq stc sahf paddusb out or or je add xor (bad) nop mov jge mov movsl decl (bad) jp mov xor rex.WB rex.WRXB rex.WRB add sbb (bad) (bad) enterq pop jb (bad) lret mov sub fcomps scas insb cmp or pushq push fdivrl fxtract lock (bad) loopne jg addr32 std adc mov mov cmpl push popfq xchg sub xor int3 scas js rex.RX nop pop out mov jp cmp (bad) hlt and ljmp push fs adc mov adcl movabs gs rex.WB mov xchg fwait xor rclb iret jp add hlt loopne mov sahf (bad) lods xor and xchg ror add jmp fldl pop data16 mov jbe jnp addr32 mov ja or adc mov popq add out notl (bad) (bad) adc pop clc sar minps cwtl mov sbb shl xchg (bad) movslq xor xor js je test insl push jae jle fwait sub mov retq jrcxz pop pop or (bad) rclb mov add scas lea mulb (bad) add sahf ja pop jle stc movsl in add add sub push clc testb add rex.WR (bad) sti cs rex.B scas (bad) movabs sub (bad) (bad) add lods fisttpl (bad) je je ja stos mov int (bad) rex.WXB (bad) in jrcxz sbb adc sbb callq rex.WB add adc jle jmpq mov cmc cmp mov pop add pop imul cmp jle add xlat cltd sub mov hlt xchg (bad) jl (bad) leaveq add in repnz js xchg mov movsb fisubr xchg ljmp add (bad) mov test (bad) jnp push cmp jle rex.W sbb cmp mov lods add xchg stos int3 movabs mov addr32 (bad) in jg sbb add repz mov xchg cmpsl in add lea scas rex.WRXB rex.WRX add loop add rex.B pop jle and (bad) adc in repnz xlat xchg imul and cmp imulb rex.WRX and test icebp repnz (bad) iret sbb imull movabs add retq (bad) cltd je jno add clc mov mov divl push iret add (bad) lahf (bad) std jp loopne and out test (bad) push rex.B adc sub rex.RXB (bad) sbb fldt fisubr jb jp outsb and (bad) (bad) (bad) adc je mov pushq fnsave hlt (bad) jns pop insb add xchg (bad) lods movabs fiadd mov mov ss sahf sub lea mov (bad) fnsave movsb (bad) rex.WXB mov jg cli fildl cvtps2pd mov jns divb jnp movabs cwtl lods xchg divb lods or sub xchg jle lahf mov fist hlt jge rex.WB int jbe icebp add mov sub (bad) jl jg stos std rex.B (bad) and popfq fcomip notl jno jnp cld fisubl (bad) add insb pop in xchg scas rex.WRXB cmc jns (bad) fsts (bad) cmp jle add movabs pushfq jae or cltd push lods loop (bad) rex.RB adcl loope pop subl mov sub insl (bad) (bad) fs test (bad) lock test sbb (bad) outsl add leaveq cmp nop pushq and cwtl and (bad) cmp lods (bad) adc or (bad) fwait (bad) callq pop imul jrcxz jle xor (bad) mov sarb xchg mov imul rex.R mov (bad) xchg movabs es jne or cmp pop adc rex.RXB mov outsb rex.WRX rdmsr repz sub add jb out xor mov add (bad) jmpq xchg fist pop (bad) xchg (bad) mov (bad) mov sti je or xchg (bad) pop cmpsw rcrl test mov (bad) push jmpq push scas (bad) test push rex.B rex.RB (bad) jo or data16 push fwait or fdiv cmc hlt jp outsl pushq mov and in cmp rex.WB outsl neg (bad) loop and cmp xchg mov pop xchg repz rex.W pop outsl jge or pop pop rex.WRXB lods mov add loope movabs and sbb (bad) (bad) stos (bad) mov sub callq rorl iret scas gs mov fcomi es jb xchg xchg mov adc movabs (bad) (bad) rcrl stos std fnstenv mov adc sub stos sub jbe push sahf xor (bad) add adc cltd or jge vpaddw lahf fwait (bad) add retq jnp stos (bad) mov rex.X pop jg rex.WXB pop clc rex.W xor jmpq cmp sarl jnp mov (bad) jp in test repnz jg lret adc cld (bad) cmp (bad) sbb (bad) fstpl rex.W mov and popfq pop rex.WR int3 cmpsb add rex ljmp shrl add mov jge test imul out (bad) mov sub (bad) lret out xchg icebp add or and or (bad) rex.RX add cld add fisubl and add scas testl clc push test pop and (bad) and movabs push shlb or jle (bad) add insb pushq xchg pushq roll sub add rex.RX fadds sahf rex.WX rex.WXB pop roll add (bad) andl or cmp sbb jle xchg jl pop xchg (bad) jb fist and clc xlat rex.WRB jbe jns mov jp jge (bad) setp cmc xor shll imulb add andl add fiaddl in and (bad) (bad) and push (bad) and rex.W xor jp cs es push lret mov rex.WR xchg push cmpl mov rex.RB (bad) iret insl ss retq add and jnp stos add lods add mov mov mov pop mov mov jle (bad) jbe sub (bad) and or jle xchg add lahf jne or je and xchg lea mov std mov and push xor add ror lret add insb (bad) mov callq xlat pop mov sbb inc lock sub cli mov (bad) fwait movabs xor repz and add adc test mov movabs sti rex.W sub jmpq pop (bad) add fstpt fcmovu rex.RXB sti xor jbe cli mov stos add in sub sbb movsl jbe (bad) xorl xchg divl cmc push cld mov rex.RX movabs (bad) imul (bad) fsts es int3 jb rex.WRB mov xor jnp rex.WXB or cwtl data16 retq sbb jle mov pop jg jg (bad) xlat adc rex.WX cmp out sbb scas (bad) (bad) add (bad) (bad) mov adc icebp and cli xlat (bad) rex.X sbb mov jrcxz (bad) jp rex.WXB scas or jb,pn xchg and (bad) (bad) mov pop je or jle adc (bad) mov jp (bad) pop jrcxz rorb add xor out jmp (bad) jmpq fistpll xchg (bad) pushq xchg or jl jae mov xor test mov push loope add in (bad) mov movsb and mov outsl xor add sahf bnd loop jae int mov jp adc pushq movslq sub mov pushq add jb xchg lahf nop jg jnp sub (bad) out add repz xlat cmpl xchg fnsave iret xchg mov pop sti jb xchg sub scas enterq fwait pushq fldl clc xchg add test adc addb (bad) (bad) mov pop out loop rex.RB pushq (bad) rex.WX out repnz sarb (bad) sbb shrb enterq pop jp (bad) rex.X rex.W pop icebp fs adc jo sahf ror (bad) sub xchg je xlat pushq lea pop push rex.R (bad) mov repz andl rcrl jmp mov (bad) xor (bad) jg iret xor add mov rex.RX and mov lock add (bad) repz (bad) incb (bad) mov add or mov pushq pop jmpq lock sbb rex.WR (bad) out (bad) (bad) (bad) sti and cmp insb imul (bad) in (bad) add and jrcxz and or add int jne xor add out rcr je clflush (bad) jge pushfq sub cltd mov push (bad) rex.WR mov in stos add push xor enterq xchg sbb (bad) rex.WX rex.R cs fistl cs pop add outsb rex.WX imull push scas add add cmp xchg rex.WB add (bad) adc (bad) jrcxz (bad) add mov cmp retq pop (bad) pop adc jb xchg (bad) xor rex.WRXB xchg xor add (bad) fiadd cmp and (bad) sbb popfq jns push test fs add push (bad) imul mov jae scas cli fimul xchg (bad) pop insl xchg add (bad) in outsb rex.R or add (bad) pop and or xchg push add (bad) ss adc add rex.WRX enterq pop jnp lahf ds notb movabs adc (bad) out xchg and hlt xchg xor pop cmpsl stc movabs (bad) (bad) in outsl add jmpq (bad) sahf pushq in lock xor xchg add hlt or lea lods add jb (bad) (bad) test xchg or fsubrs sub stc rex.X rex.B jp movabs insb rex.WRB push sahf stos (bad) std testl xchg pushq jl add andl pop jmpq (bad) adc add or test (bad) cltd jl rolb (bad) sbb add int3 add and sbb add rex.WB add (bad) adc add fimul imulb add (bad) xor outsb jno sti scas add xor mov lret jmp sarl pushq mov mov pop mov loop add mov xor and psubb (bad) sbb mov add rex.WRXB addr32 jl and lea adc mov (bad) sbb rex.RB callq rex.WRB rex.RB cmp cmp mov mov ss xor imul pop add mov jmpq adc movsb and add lea fwait jb testb fildll (bad) jne mov add add callq imul xchg pop cli push jnp (bad) jae (bad) xchg (bad) add sbb outsb cmp jne movabs jle orl out lods xchg sbb jbe cli cmp mov pop mov pop leaveq (bad) rex.WRX jg,pt rex.WB rex.X (bad) and add xor adc mov (bad) jne shr sbb movabs mov xchg sub jrcxz sbb add add (bad) mov loopne clc xor out repnz add xchg fbld pop mov movabs push repz incq cmpsb add mov pop cmp lret (bad) mov retq (bad) sahf loope callq cmp mov (bad) cmpsb (bad) scas add sub xchg jl lcall add imul pop jno pop push retq (bad) jns rex.WX push xchg and data16 add and (bad) repnz mov cli fdivs rclb jmpq push mov sbb test jns xor pushq add (bad) mov (bad) (bad) jg out outsl mov add callq and sub mov add mov cs repz punpcklbw mov add int add cmpsb fmull cwtl cmp fdivr (bad) mov (bad) pushfq out (bad) data16 mov imulb rex.XB std movsl loop (bad) rex.WXB cwtl out pushfq jb nop pushq lods cmpsb int3 add fdivrp in adcl add mov jl xchg rex adc addr32 xor cs rex.WRB scas lret stos add fisttpll push rex.RXB rex.W add (bad) add cltd cli stc stos imul jbe out pop push xchg in rex.X insb fwait (bad) xchg (bad) or clc (bad) rex.WXB sub add rclb iret movslq add rex.X enterq test and (bad) (bad) stos fs xor jb (bad) in mov divb and sbb ss push jmpq or imul xor mulb movsb add mov testl rex.WRX hlt scas lods jg jrcxz (bad) int3 (bad) addr32 fsubrp mov cmc add ficoml add icebp and std lahf push hlt rex.WB (bad) pop rex.W or add (bad) add sarl rex.RB rex.RX (bad) lods xor rex.WR or cmp sbb sub scas callq or movslq jl (bad) (bad) imul sub add pop push mov rolb mov insb rex.X push pop rex.RXB test andl (bad) lret mov (bad) jne mov push sub mov sub add cmp incb mov pop andnps scas mov cli xchg pop mov jno add jg fwait mov (bad) jg int (bad) mov (bad) add (bad) cwtl xchg rex.W mov fcompl rex.B cs mov and rex.R add hlt imul (bad) cmp in shrl mov (bad) cli test lock loope sbb rex.RB repnz rex.RX ss push icebp rcr sub sbb clc adcl pop add mov (bad) pop add adc loopne jmpq shrb adc jge push jl cltd (bad) xchg test mov (bad) and or retq movabs inc (bad) add push cmpsb xchg add repz add add sbb jp (bad) popfq je rex.XB add in or sahf lods add rex.X (bad) rex.XB sub (bad) fldl mov mov imul rex.WX mov mov mov (bad) movabs xchg jnp clc movabs movabs jbe (bad) push retq jbe cmp (bad) cwtl jb jmpq (bad) xchg push xor jnp sub mov (bad) rcll jnp mov cmpsl (bad) mov adcl cld or test (bad) (bad) rex.WRX (bad) rex.RXB sub retq cli add xchg (bad) jmpq pop ljmp mov jg jl (bad) (bad) adc rex.RX cmp mov rex.WRXB (bad) callq adc (bad) test mov test xchg pop cmp (bad) xchg and data16 movslq scas rex.RX cli jae mov push pop movabs cmp leaveq add fs (bad) and or sub lahf stc ss sbb repz cwtl test adc shrb jg and mov (bad) push fisubl mov roll xor and jae lahf (bad) jns add rex.B rex.R add xchg insl xchg pop adc jnp jg pop and in es mov sar mov fldt mov ds add hlt and divl insl xchg (bad) push (bad) test fildll mov fdivr (bad) retq pushfq add sarl es mov outsb insb (bad) cld inc pop rex.WX lret (bad) js (bad) and out adc cmp jp std (bad) mov mov mov pushfq iret (bad) fsts jg mov rex rex.WRXB jbe add mov fistpl rclb mov jbe in repz (bad) pop movabs push fnstenv mov clc jne fwait add cli rcrl add cld push (bad) mov (bad) jae outsl (bad) (bad) movsb and sub rex (bad) and rcrb mov loopne cmp imul push int outsb mov and jl sbb jne decl (bad) jge out push add pop jns movabs push retq (bad) lret rclb pop jmpq push clc pop cmp add gs (bad) rex.WX mov jp rex.XB add popfq (bad) cmp wrmsr idiv (bad) adc test xchg push lret rex.RXB callq xchg fsubrl clc add sahf insb retq pushfq callq rex.R fwait out xlat jrcxz (bad) or lahf imul je sub adc rex.WB rex.WRX push mov lahf and (bad) clc fnstenv sbb xchg popfq mov rex.R in jl push rex.WB fldenv push add fist xchg rex.RB and rex.WR out cmpsb cmc push out add rex.R adc icebp movabs jl (bad) (bad) rex.W subb lods callq sbb rex.RX (bad) (bad) xchg cmpsb pop addl pop mov or test pop mov fisttpl gs cmpl es (bad) (bad) (bad) hlt pushq roll fdivrs mov (bad) mov fdivrs (bad) lret (bad) pushq adc (bad) mull adc mov sbb stos add imul add (bad) cmpsb mov ds jg mov stos add (bad) jae mov (bad) push fisub sub xchg and jle cmp sti mov (bad) rex.WRXB xor pop data16 orl and std add fstps jb (bad) adc callq and push jmp cmp adc rex.RB lock adc and cmp fs mov mov jmpq (bad) mov sti stos jg in mov (bad) cmp adc (bad) (bad) out out mov lret (bad) and enterq mov in rex.XB sarl rex.WRX rex.B xchg (bad) cmp sub (bad) int3 callq fisubrl and es out cld pop or jae leaveq add sbb (bad) jp or xor sarb frstor push rolq rex.RXB jge insb xchg rex.RX rex.RX outsl rex.WRB je (bad) (bad) jle lret sbb test xlat je movabs push mov add (bad) je lea jb sahf outsl (bad) xor sbb ss lret (bad) lea cld xor adc fisttpll std adc insb (bad) scas xchg pop or rex.WRB cli xor jp (bad) lock pop jbe (bad) adc fucomi movsb js sahf sbb out rex.X rex.XB orl cld rcl sub cltd adc popfq cmp pop pop movabs in add sahf xor xor rex.XB sahf mov fldl out cs (bad) sub (bad) mov fiaddl (bad) mov mov (bad) xchg and mov jmp (bad) (bad) rex.W pop mov or cwtl mov xchg xor lret sbb dec mov mov nop mov jge or jg (bad) cmp rex.RXB repz rex.RX fwait (bad) xchg jg mov (bad) and fisubr and decb (bad) or (bad) or rex.WB xchg mov jnp xor pop scas or add cmpsl jl adc sarb add mov int sar scas xor sub xor add mov jrcxz mov jrcxz add lret xor and fsts sub popfq test in fdivl pop add mov insb or add (bad) add xor rex.WRB sahf (bad) add mov insb cltd jb jne mov mov mov sub movabs adc mov (bad) pop adc je and cmc (bad) (bad) loopne popfq xlat xchg xor xor (bad) jle sub pop xchg mov pushq (bad) and loope mov cwtl pop pop add cmp jge retq mov (bad) or movabs sbb push and mov cmc jle hlt loopne test stc (bad) sub imul mov add pop out mov (bad) je ss cmpsl icebp add xchg xchg mov fwait js add (bad) ja add jb sti sub stos add enterq out rex.WRXB mov xchg xchg jle (bad) leaveq lods jnp (bad) fdivr jl jns js outsl add movabs (bad) push xor je retq sti movabs iret add (bad) mov jmp jp ds jl leaveq jg mov add mov lods pushq add cli lahf push (bad) push movl rex.X mov lock mov (bad) jb mov shlb repnz fldcw sahf jle cmp cmp roll mov mov (bad) (bad) mov cltd jns jp lods jmp (bad) test int vmovmskps fist rex.X in mov add jrcxz push jmp cmpsb add cmpsl mov (bad) rcl adc rex.WRB stos jp jb mov sub sub mov rex.R xor add (bad) mov (bad) (bad) cli mov (bad) and jge pop pop (bad) mov mov sbb (bad) and rex.RXB add popq add xor push es outsb js (bad) jns pushfq (bad) (bad) mov add int rex.WXB rex.WB rex.WX mov subl add push (bad) or movslq imull add xor xor mov xor sbb mov mov lret mov movsb jl sub outsl jg scas sbb pushfq rex.WRX movabs (bad) jbe leaveq outsl lods nop jg cmp (bad) sbb fsubs mov mov sti jno retq sbb (bad) mov jg nop rex.WRX insl out mov xchg or xchg cmp (bad) pop jae (bad) or (bad) mov (bad) jns sahf lsl add add rex.RX sbb (bad) stos lock jns mov add (bad) (bad) (bad) fwait cltd (bad) fsts xchg nop std xchg add sub movslq jmpq sahf outsl gs sub mov xchg imul mov sub fs add fmull callq (bad) pop sbb push shll cmpsl rex.RXB cmpsb mov rex.WR add in pushq rcrl jae retq cs fs (bad) stos add stos sti pushq add pop or test rex.RX test xor orb or rex.W add jbe mov (bad) in retq mov adc nop jle (bad) cmp xchg or test mov cltd js cmpsb adc xor jg insl outsl popfq mov or (bad) rorl pop and lret mov incb jnp jne push cmp movabs ja rex.WB repz je rex or (bad) lret jns rex.RX lret sbbl (bad) retq mov test cmp mov jne in icebp jge cmc imul sti ja data16 shl push cltd test movslq pop mov (bad) fisttp jle test stos sbb (bad) push insb mov scas retq mov (bad) out jbe add movabs and ljmp (bad) jb insl xchg (bad) mov mov (bad) and or rex.WX (bad) pop fwait addr32 xchg (bad) pop jg out mov verw lahf add add (bad) adc rex.RX and jge fmulp imul (bad) rex.X sti add sbb adc add retq testl xchg rex.WRX lock ss and cmpsb sub cmp add loope scas add (bad) scas push add enterq stc xchg add sub repz add sbb fs mov fcoml js mov mov scas and in (bad) or (bad) add xchg sbb add lahf cmovp add or hlt mov es rolb jp mov lret addr32 rex.WXB test jp and (bad) push sbb mulb push xchg pop ss and cld out mov jnp rex.WRB rex.RXB mov jns cmp rex sub rex.WXB and outsl add cld adc sti (bad) rolb xchg xor xor add lahf fsubrl jrcxz callq imul jp rex.RX movsl (bad) lea (bad) and scas sub mov test test popfq callq or sub (bad) (bad) test mov xor std jle rex.WRX mov mov push idivb jbe imul xchg mov movabs jnp add repz sub rex.XB add xchg adc sbb jbe pop mov add ss mov xor cmc xor lret (bad) insl jg rex.B xchg pushq movslq test cmp add out xor (bad) rex.WRXB jle (bad) in ja rex.B std mov cmp rex.R mov fs leaveq sar (bad) add jnp (bad) (bad) mov add stc movabs lahf cmp test cltd pop add xor adc ficoml rex.WR stos jle xor lahf lahf cmpsb cmp fidivl sub or outsb add lock add (bad) xchg leaveq mov jp jae fwait sbb and add sbb xchg rex.W outsl nop (bad) fcmovnbe cmp add add add (bad) xchg flds out movabs outsl jae insl mov addr32 (bad) cltd test add xor adc pushfq es cmp incl mov std add mov cmp mov outsb movslq fxsave pop sub and cmpsl (bad) pop jge ja je (bad) movabs add test outsl mov xor add out rex movabs subl jno add mov mov lea lret pop (bad) sub add pop pop (bad) hlt xchg sub in popq retq lahf cmp iret xchg jne int jb sti xor jg sub hlt jp and (bad) mov (bad) jbe push out adcl negb (bad) jle mov (bad) cmpsb rex.RX and js xchg mov (bad) xor out movabs cmp and pop rex.RX pushq rex.X jbe (bad) insb push enterq jp cmp xor pop rex.WRB xor sub nop divl (bad) xchg sbb jle pushq add (bad) (bad) cmp (bad) add push jmp adc rex.WB mov leaveq sub (bad) cli rex.WXB jno sub (bad) rex.WR (bad) cltd jb xor scas jg rex.WX xchg push sub and jns (bad) mov stos add rex.WXB retq movabs fbstp (bad) jg in pop (bad) rex.WRB int ja ja xor and add fdivl mov lea clc fisubr retq in sbb sti jrcxz test ds push mov adc pop jp mov push add (bad) mov (bad) (bad) int3 out xor pop and je (bad) clc mov fadd shrb cld repnz add mov je (bad) insb (bad) xor testl rex clc rex.WR insl sub xchg outsb pushq insb rex.WRXB mov rex.WRX rex.WB fs jnp (bad) mov (bad) iret repz pushq push andl lock loopne cwtl sub rcrb iret sub (bad) add sar addr32 xchg add popfq mov (bad) movabs jmpq leaveq sub imul (bad) cmc repnz jg (bad) mov mov jle ds (bad) outsl mov imulb xorl cltd (bad) xlat sahf pop (bad) rex.WRX leaveq cmpsb pop jge ja rorl fs rex.WR and lock sub jg push mov pop rex.W sub add pop callq rorb (bad) (bad) (bad) xor sbb out mov out mov xchg (bad) leaveq in scas pop hlt test and cmp movabs mov adc (bad) ds mov mov test push mov (bad) insb xchg movslq ja xor jle xor adc (bad) mov mov loope sbb add sub outsl adc out (bad) add mov mov fwait rex.W jp rex.WRB add cmp mov and add pushq pop repz rex btc push fsubrs add (bad) test mov (bad) pop sahf xor (bad) cmp mov rex.W xor rex.RX cld shlb adc rex.WRX outsb mov xchg (bad) sub add movabs shlb xor sahf insl jbe test xorl pop jge fdivrs jns cmp or rex.WX or sub out es sub lods (bad) sub repz pop stos rex fucom pushq movsl (bad) leaveq pop lods movabs out mov adc movabs outsb (bad) imul pop std loope (bad) cmc jmpq xor pop rex.RXB and callq lods shrb sbb mov scas lahf (bad) insl fisubl mov push iret xchg adc scas cmp jne retq sbb cmpl xchg lods scas jmp adc and or sbbl xchg xlat pop jge push sub fildl xchg mov cmp lock add (bad) add rex.WB (bad) push add cmpsl fisttpl rex.R rex.WRXB jb fsubrs movsl (bad) pop sub jb pushfq loop (bad) (bad) incl add mov mov sub add imul out xchg jne loop push je or in cs movabs mov fwait jg movabs loope jmpq rex.RXB mov lahf mov push add mov mov (bad) movslq push sar pop adc mov jg mov xchg jle and jg pop js and nop jl adc rex adc in (bad) jrcxz adcl callq sbb adc xor rcrl mov jl (bad) mov push add add xchg rex.B cwtl jns movabs mov fcmovnb jg push add rex.WRB jae pop jp sub in loop push xchg or fstpt and stos jnp (bad) ja (bad) push add jg pand rex.WRB add xchg add test out pop add mov addr32 std rex.WXB bnd xchg imul rol (bad) xchg xor pushq rex.WB (bad) out imul push repz retq movslq add jmpq jb fisttpll insb rex.WB xor ljmp nop shrl or jp pushq pushq ss loopne add pop mov outsl lret jo cmp lahf pop out movsb rex mov icebp cmp (bad) pop jb js ja add sub (bad) mov adc xchg lahf xchg test jl pushfq pop sbb jmp (bad) or xchg (bad) cmp add push mov or cmpsl scas leaveq js mov sbbb push or data16 andl movsb cwtl cmpsb (bad) lea fistpll in lea lods (bad) (bad) rex.WRB rex.WX jne mov nop or add (bad) outsb pop jmp jb cmp (bad) pop (bad) xor lret rex.WXB cmp clc fisubrl mov rex.RX or mov (bad) rex.RXB cs add rex.WRB data16 adc rex.W lahf fcoms jp mov movabs push add cmpsb add add data16 (bad) scas jp rex.WRXB lods xchg add rex.B fistl (bad) stos jle gs xchg sub jle out mov in movabs cmc (bad) std in jrcxz adc jo loop ss add sbb (bad) rex.RX loop test (bad) pop stos add fsubl jbe cltd jge (bad) sbb push (bad) adc jrcxz in rex.W rex.WRX pop add test pushfq rex.XB fcompp int jg (bad) scas stos add in lret rex.RXB rex.X cmp add (bad) rex.RX (bad) adc pop fwait outsl rex.B fimull add xor pop add enterq xchg leaveq rex.R in fs cltd test clc sahf jp jrcxz (bad) (bad) push xor rex.WRX sub add out mov fs jb loop sbbb add lods (bad) (bad) jne adc jns sbb (bad) and jo fnstsw mov ja pop (bad) stos (bad) xchg lock outsb clc adc outsb rorb mov out and (bad) jne test out (bad) adc add xchg xchg movsl fcomip negb (bad) sub sub ds or ds scas rex.XB pushfq adc hlt (bad) (bad) std and (bad) (bad) imul (bad) (bad) (bad) out sub iret and insl jae xorl gs pop stos xchg rex.W or rex.W rex pop pop adc adc fisubrl mov mov add (bad) mov iret jb mov insl insb mov callq rcl add (bad) jg sbb push hlt imulb cld add (bad) (bad) jle xchg (bad) jl pop xchg repz xlat mov pop movslq cltd (bad) pushq in rex.RB leaveq pushq xlat pushq rex.WRXB mov insl scas pop insb push iret enterq add jmpq and mov rex add xor xchg rex test cmp iret test pop jmp pop sub (bad) popfq (bad) gs (bad) fwait add jb enterq (bad) add (bad) or or jb (bad) rex.X cld push (bad) in mov and xlat add imul jne (bad) je mov (bad) or mov mov test movsb bnd sbb enterq pushq inc mov (bad) (bad) popfq fist insl and and mov rex.XB (bad) pop repnz (bad) add shll (bad) rex.WRXB (bad) xchg rex.WXB fnstsw jp cwtl and (bad) sahf icebp (bad) xchg fs adc jg (bad) shrb jp loop xchg rex.X es pop stos ss push (bad) sti sbb push add push (bad) pop xchg mov sbb add push stos and out pushq pop mov test (bad) (bad) push jb movabs jle out nop mov (bad) mov add fldcw and movabs fdivp ja jns sarl test cmpb negl (bad) jmpq mov (bad) or (bad) test adc mov or add sbb popfq jb rex.WRXB nop jbe rex.RX rex.WXB cmp pushq hlt pop pop mov jg jnp pop (bad) movabs jg int fdivs rex.WRX (bad) js hlt and es sbb jb xorl push pop (bad) rex.RB rex.WR (bad) add test xchg sub (bad) mov pop rex.W pop movabs rex sub (bad) popfq outsb xor pop pushq mov retq jbe nop enterq iret (bad) xor pop and rex.XB cs retq mov out cmc movabs pushq pop add xchg cmp pushq xchg add sbb adc sub add and pop rex.WX and or rex.R and (bad) pop adc (bad) cmc pushq pushfq movslq xchg (bad) jg movabs rcll adc cmp or (bad) (bad) iret out pop xchg add mov movabs (bad) (bad) cmp rex.WRXB lock push cwtl add mov xlat jb xor pop neg sbb rex.RXB rex.WRB mov out jl (bad) stos sbb in iret popq or (bad) lods xchg mov add pop add xchg lret nop pop push jb test mov cmp (bad) ss jp xchg fistpll (bad) movsl fst pop idivl and (bad) and sti push out adc mov movabs pop rex.R cmpsl mov fs jb repnz (bad) pop lods and (bad) xor (bad) add jb retq movb xchg test cmp retq out cs lods (bad) (bad) jl jle rex.RX (bad) rex.W (bad) (bad) std in push cmpsb rex.WB add xor pop out rex.WXB (bad) jg jb jb (bad) xchg pop scas jae rex.XB (bad) pop jmp sub (bad) adc (bad) js lods outsl rex.W xchg or cmp rex add lahf jb sbb push fidiv cmpsb sahf rex.WR mov insl push lret icebp xor cmpsl cld rex mov pushq and movabs cli insl sahf rex.RXB sbb and stos (bad) and adc xchg rex.WR (bad) xlat js add mov (bad) and mov (bad) (bad) cmc repnz loope fwait outsl cli jl (bad) js mov cmp rex.X (bad) (bad) rex.WRB sub std (bad) leaveq (bad) lods pop jp pop cwtl mov fs jne push outsl jmpq movslq (bad) mov nop (bad) mov (bad) cmpsb outsb test fucomi push jge push outsb mov rcrl pop movsl insl sbb adc rex.WB lret jmpq add mov adc mov push stos cmpsb sub (bad) hlt cvtps2pd adc rex.RB sti jbe cmp jg mov (bad) lock rex.WRXB jl rcl rex.WRB push rcl repnz ss rex rex.WRXB push imul mov movabs rex.WRXB mov fcoml insl xchg test (bad) adc xlat in adc test cmp mov push (bad) in jo xchg xchg mov rex.B decb je (bad) adc pop mov jae mov jge (bad) pop imul rex.WXB jmpq pop sub fnstcw cmp rex.WRB fisttpll adc andl jrcxz (bad) jrcxz sub shr (bad) xchg cld (bad) mov push sahf jle outsl (bad) jae jne and cmp pop pop test testl movsb mov cld push js je or add retq mov lods and (bad) nop add or jb (bad) (bad) adc add cmp jbe sub xchg decb and push add (bad) pop pop mov mov (bad) mov cmp notl stc push rex.XB sti xor adc orl add (bad) std movsb mov imul xchg fisttpl add fabs movabs in sbb (bad) pushq imul (bad) jg (bad) add lods sti ss (bad) movabs outsl sahf add imul sbb rex.W xchg jb sub int3 mov or push lock fist adc add mov mov mov mov repnz rex.WRXB (bad) adc movabs add pop enterq cmp (bad) mov sub add (bad) mov add sbb out add loop sub and rex.RB add lods mov (bad) callq mov movabs lcall push push jns push add fs (bad) scas popfq incl rorb movsb cmp add fistpll mov in xchg or xor xor jno es xchg rolb mov add hlt and sub (bad) push pop js repnz pop (bad) adc loope (bad) sbb nop leaveq lea mull add cs mov xor xchg retq mov push jno jl fbstp insl lahf jle push outsb jle test pushq (bad) rex.WXB or xchg (bad) and retq js pushfq (bad) (bad) jle out (bad) fsts jae mov rex.XB (bad) push jne test jb pop ja mov pop mov syscall adc cmp pushq clc test rolb (bad) mov (bad) sub mov mov and adc sbb xor mov rex.RB jrcxz test imul pop out cwtl cmp jle (bad) xor insb jnp mov rex.RXB out and jbe lods (bad) nop mov rex.WRXB rex.R imulb (bad) add rorb jnp mov xchg decl rex.WR rex.WX gs or pushq cmpsl mov insl (bad) mov jo stc (bad) xor stos lahf jno pop push out jo mov pushq cs mov mov rex.W (bad) data16 xchg fdivs xor jns xor (bad) jp push xor cmp fwait mov pop stc roll mov adc add insb sub sbb add std (bad) xchg mov add add pop mov pop cwtl fild jmpq xchg (bad) (bad) jbe rex.X jnp xchg sub add rex.WXB (bad) add rex.B cs cld add enterq (bad) mov rex.WRXB rex.WRXB add rex.B mov or outsl jg pushq or mov mov adc lahf ss jb jne outsl adc decb repnz clc (bad) ja mov push iret add test sub pop rex.XB rex.W pop rex.X (bad) push mov jg mov fmul pop xor add xor rex.WR (bad) mov push cmc cltd rex.RXB add mov mov add cmc jmpq in and xor add push mov push ja movabs jns out add (bad) fdivrl pushq rex.RX rex.RB test sub xchg or (bad) add xchg rex.WXB cltd mov adc xchg (bad) shlb cmp (bad) jb cmp addl test add testl (bad) fdivrp add (bad) jle cs cmpsl cmp fist rex.XB mov repz rex.WRX xlat je retq leaveq cmp and out (bad) scas jno xor or cwtl mov rex.WX xchg fs fistpl (bad) js add shlb enterq pop add (bad) fistpll cmp cmpsl rex.RXB rex.WB sbbb jl movsl xchg rex.RX fwait insl mov pop adc lret (bad) test pushq pop push (bad) pop adc fisubl push cmpsb (bad) pop ja push rex push add shll rex.W (bad) addr32 cmp jrcxz push jo sub rex jnp notq stos (bad) xchg outsl mov pop adc cmp (bad) out pushq loopne adcl (bad) lock insb sub nop test push repnz movsb (bad) mov adc (bad) and in sbb push (bad) movabs (bad) (bad) movabs jle push mov xor xor jl leaveq cwtl (bad) xchg sub (bad) test loop mov outsl or neg (bad) test retq ja rex fist stos jne mov pop xlat ds jo test sub cli mov data16 test sub or and iret js movslq (bad) in test (bad) mov sbb jne sub rex lock xchg xlat adc xchg rex.W xor ss icebp add sti pop and xchg outsl cmp lret mov xor jns shrb insl movslq or add out xchg divl add popfq mov adc js (bad) and jnp xchg cmp cmpsb (bad) pop jae idiv or out adc pushq rex jmpq (bad) (bad) mov sarl (bad) test xchg and xor jrcxz (bad) scas retq add mov sbb rex.WR hlt add icebp xor push callq iret rex.R sbb pop jg adc rex.WXB add fimull rex.WRXB jo movabs outsl lahf cmp (bad) cmpsb je cld and or pop add xchg imul adc add imul cltd fwait adcl and sbb movabs imul out mov jg xor jg in lea fs mov fs push mov mov and (bad) enterq callq sar sub sbbb repz imul add pop xchg movabs sbb and mov rex.RXB fidivl add pop pop test rex.WRB adc jno jl (bad) mov mov in (bad) pop test add jae cmp sti sbb movabs pop add and movabs rex.RXB add enterq cwtl fsub rex.RB sbb or (bad) add lret rolb int xor mov jl sub xor js or add scas (bad) cmp and (bad) add xor add (bad) rex cmp cmp and rex.WRX jmpq cmpsb cli fldenv xchg stos in sub cmp mov cmp cltd callq in sbb push adc push mov xor sub movslq rcrb (bad) add sbb xor (bad) cmpsl lret fnstsw xchg pushq fistp add sar test xor pop (bad) pushq (bad) adc jg loope adcb (bad) and pushq pop stos and jb add testl out rex.WRXB cmp cmp cmp movl add iret add jnp mov or rex.WRB andl sti js rex.RX sub setnp sub jmpq pop (bad) stos out or mov stc sbb out cmp add mov sbb mov out int cmpsb mov or adc jg stos xchg fs movslq cmpsl add movabs (bad) fs and (bad) add xchg mov retq mov movl (bad) jle adc data16 insb jg movabs ja fs mov sub fs mov fimul jmp (bad) mov rex.RX roll js (bad) or in ss pop (bad) popfq jb (bad) pushq rex.R in mov jmp pop (bad) or push outsl (bad) cltd adc pop jge rex out roll adc gs (bad) mov out stc jp fldl jmpq xchg (bad) (bad) push sub jne stos pop movabs xor (bad) xchg decb xchg sbb std pop adc imulb lahf jp and int sub (bad) (bad) sbb mov (bad) iret shrl lret sub add mov jg add movsb and add (bad) test sub pop enterq adc js sbb cli (bad) jae scas cs mov mov leaveq xor lods loope pushq add rex.RX rex.RXB jp rex.X fadds stc jne add (bad) add jb jae test add out mov jg xor mov add mov rex.XB xchg in insl rex.RB or add (bad) (bad) lock jb rex.WB rex.WRXB xchg jle mov out rex addr32 and cmc imul push (bad) add pop adc sbbl jnp add je (bad) and popfq fidivrl test xchg or (bad) cmp mov rex.WRX lock add in mov rex.RX lret (bad) (bad) jns adc xchg scas and or in rex.X jnp lcall or iret loop (bad) pushfq cmp jp cwtl outsb iret rex.XB sub (bad) pop sti lods lock mov rex.RB sub mov mov pop jns ds movl (bad) (bad) mov rex.WRXB (bad) add mov add ss addr32 fisubr mov movsb insl loope cli (bad) rex.WRB adc je ds (bad) add enterq es add jg insl mov lret xchg (bad) (bad) pop (bad) movabs pop imul (bad) jrcxz mov fisubrl mov (bad) rex.WR mov push retq jg cmp add sub (bad) (bad) jrcxz xor retq cmpsl fild add sub mov (bad) movslq lods cli imul movsb jge push fimull out or stos scas (bad) lret adc sub pop rex.RXB rex.XB mov sbb callq stos adc fwait (bad) test add mov jge xor xchg add rex.R pushq add sbb or xchg outsb movabs sahf imul cmc sub mov add mov (bad) cli jb mov (bad) rex.WB cmp out cmp cmpl jb js pop jno jno sub movabs mov mov mov add adc fs mov iret sbbl jg mov rolb enterq cmc sub (bad) movabs sti (bad) (bad) rex.WB xor cli jp jrcxz negl push push xor (bad) (bad) pop push in (bad) or icebp xchg pushq (bad) add mov and rcrb (bad) imul insl jg out jmpq jbe fildll add and add je rex.WX enterq push insl mov sub jp mov and out mov (bad) mov retq jge jg jl hlt (bad) xchg xlat (bad) (bad) (bad) repz jl add and (bad) test mov movabs cmp rex.WX (bad) jb imul cld adc jle mov xchg rorb push xchg and push insl imull or rex.RB lods sub pop loope jp fisubrl test sub pushfq sbb xchg mov adc (bad) lods fcoms (bad) fwait pushq (bad) xchg xchg rex.WXB rex.WXB rex.WX data16 pop addr32 sti fnstenv retq mov sub cbtw int mov out add jns (bad) jl fist or or jge cmp sbb rex.W leaveq ss adc mov jmp (bad) cmp and (bad) rex.WXB test test sbb or rolb (bad) mov sti insb es movsl xor pop cli data16 rorl jbe push mov insb push add loop adc fisttpll int3 test and jno push xor xchg (bad) or fstps pop add and push stc (bad) rex.XB movslq (bad) outsl rex.B sbb es add or orb rex.R rex.RB add js jle jmpq sbb mov rex.RX mov add scas out or rex.X and add add (bad) (bad) leaveq (bad) or jle rcll sbb ds mov sbb rex.W movabs repnz (bad) (bad) rex.X xlat lcall pop add jg,pn pop fimul xchg add push add mov clc imul and (bad) (bad) xor xchg adc (bad) jo jb jno rex.X add (bad) (bad) sub add sub cmp add adc lahf mov (bad) sbb rex.RXB outsl add or scas lret or lods pushq rex.WXB add jmp (bad) in jmpq insl leaveq (bad) insb js pop (bad) mov faddl fbstp jb iret or cltd pop loope xchg ja loop xchg cmp lahf int imul rex.RX (bad) sbb (bad) lods (bad) test rex.WRXB (bad) int xchg xor mov test jnp outsb add cmp cmc push pushq lahf jbe in insl jp (bad) mov jo cmp (bad) jle (bad) cli ja jg (bad) xchg xchg lock sbb (bad) bnd idivl ljmp rex.XB and pop adc incl sbb (bad) cmp pushq or lock loope and mulb out cli add sbb jl (bad) or (bad) repnz jrcxz (bad) enterq (bad) jno add and cmp or (bad) sbb push mov in push mov mov pushq xlat and mov add (bad) stc outsl add add loope out sub fs (bad) mov rex.WXB add scas movb (bad) (bad) push (bad) jge out pushfq in mov lods (bad) pop add movabs xchg xor mov sbb cmp (bad) (bad) mov push fst mov xchg (bad) ss adcl push sbb add (bad) push mov out mov or jbe fildl (bad) pop (bad) adc mov mov xor (bad) ficomp push rorl and adc rex.WRXB (bad) pop movsb (bad) mov scas sub mov out cmp test std (bad) add insb sti xchg fstpl out xchg nop sbb scas mov jl (bad) in or mov (bad) (bad) (bad) xchg jne fsubs mov (bad) enterq xchg jb (bad) outsl test fbld rex.WRXB js pushfq mov add lods add rex.WRXB add ja push movsl cmpl icebp cmpsb int3 insb (bad) mov (bad) jbe adc (bad) add lock pop jnp cltd or xchg fnstsw rex.X (bad) jg pop out push add push or mov mov xor cwtl (bad) adc stc icebp pop pop (bad) rex.RB add (bad) push rex.WRX lock (bad) mov outsl mov movabs fucomi xchg (bad) or sbb mov callq xchg jno mov icebp stc jne stos cmpb fwait mov (bad) mov add lods (bad) (bad) jmpq add rex.WX cmp movabs pop mov sahf add cmpsq sub stc rex.RXB or and pop (bad) mov jb (bad) lcall add lret jnp lahf mov scas (bad) jle (bad) es xchg lock loope add icebp push repz leaveq lods xor pushq adc (bad) (bad) pop add cmp out xor (bad) push mov and (bad) push sbb mov or repnz rex.X pop (bad) push fistl loope add xchg insl rex.WRB sub adc callq (bad) stc xlat cmp (bad) pop lea add and push lret cmpsl pop pop and jg repnz (bad) jb rcr int3 xlat ss push test imul add (bad) (bad) xor insl (bad) test inc add adc mov (bad) jb and test mov jg mov rex.XB stos int jmp add jo sbb cltd (bad) adc push ja xchg jp mov sub movabs (bad) or iret or (bad) xchg push (bad) add pushfq xchg and fdivl std (bad) pushq cli sbb (bad) nop xchg add mov and scas xor jae js std cmp stc data16 (bad) add push (bad) pop test pop xlat or and shll (bad) repz and in in fs movabs rex.RB xchg (bad) mov sub sahf jge add lret add adc (bad) fs push lods pop lret int rex.X es imul scas jle and add xchg mov movabs out pop adc sub add rex.RX pushq test icebp xchg jge add adc fsubrl mov add cli sub jae add (bad) int jb movabs xor rex.WRB (bad) mov cwtl xor adc sub adc movabs push push test repz or add scas out mov jb movabs es pushfq and rex.R cmp in cmpsb mov ja jb sti jmpq jl cmp movabs jp sub add jmp stos movabs fwait mov xchg loope (bad) mov (bad) sahf and ss add jl out cld mov xchg punpckhbw sub (bad) adc lret (bad) rcl jb rex.XB (bad) andl test xor push xchg int js push jle adc setg fistp in stc movabs (bad) movabs popfq mov out (bad) cmc sarl xchg jp adc insb rex.RXB jge callq xchg (bad) rex.WXB jae imul (bad) xor ss loope jl (bad) jmpq pushq xor lret mov mov push (bad) jg adc (bad) rex.WRB rex.RB movsb mov rex.W pushq add add pop add movslq sahf cli add rorl jl cmc ss pushq rex.R lock icebp mov and rex.WR mov rex.WRX xchg fldenv repnz and cmp ljmp add fadd pushfq mov add clc imul add fs jo rex.WXB rex.R sub jg or (bad) (bad) sbb in adc mov or idivb jge movslq pop roll leaveq mov sub jne lods mov popfq add jge pop rex.R andl addb cld pop jrcxz mov sbb sahf int cmp movslq (bad) cmpsb in mov mov popfq xchg rex.WX pop fs (bad) pop js (bad) ss (bad) add xchg rex.WRX fisubl rex.R (bad) movsb rex.WR out stos jl nop jle (bad) mov jno lcall lods (bad) enterq push xor mov retq enterq mov pushq cmp pop rex.R out mov mov retq (bad) (bad) jg mov add mov movabs insb mov jo negb xchg (bad) xor andl xchg mov add sub test xor lret lods adc shlb fcomi push (bad) fnstsw add pop adc add sub rex.WRB outsb and (bad) xchg mov pushq movabs (bad) and (bad) (bad) rex.WX sub sti (bad) (bad) and scas stc cld adc fcoml adc pushq cmp mov js (bad) test (bad) or mov cs leaveq mov out sbb fiaddl push iret inc nop and iret lahf (bad) loope movsb stos gs sbb loopne mov jbe out add xchg imul loope (bad) out (bad) pop insl loop fsubp add (bad) ljmp gs rex.WRXB ffreep movabs (bad) rex.WRXB lea orb (bad) jo pop mov (bad) fmuls iret stos stos and mov pop std push iret push jl xchg mov data16 xchg mov pushq dec lods xchg pop and and add add xchg lods or lahf (bad) fucomp xchg adc insl out and xchg push or rex.WXB sub jmpq xchg (bad) (bad) or xchg movabs xor shrb jl retq pop outsl jp outsb (bad) mov sub gs retq lods (bad) and jmpq (bad) cmp (bad) mov out fildl (bad) xchg jo iret movabs mov rex sbb mov lret cmpsb pop cmp xchg mov or pop (bad) jl in rex.RXB fs movsl pop and xor jbe mov iret rex.WR in lcall in (bad) (bad) or or mov rex jl out sub out push scas cmpsl mov mov (bad) pushq test lea sub push pop pop (bad) push jrcxz adc jbe retq loopne movabs rex rex.WXB stos out cmp xchg jl sti (bad) (bad) mov jl adc rcr adc (bad) test or jp in jns (bad) jne xchg rolb fsubr or (bad) fucomi mov movabs jns rclb movabs mov imul (bad) lods mov xchg ss jae mov or sub jg cs xor sbb adc loop mov stc sti jae cld fimul add rcrb xchg outsl sbb jg (bad) xchg lods rex.WXB rex.WX (bad) mov or add mov stos incl xchg ss (bad) (bad) int (bad) add stc sub sbb add cmp ja (bad) or (bad) xlat je adc lret xor out (bad) rex.WRB in addl sub rex.WX pushq jle rex.XB leaveq repnz add insl rex.WRB sub mov jnp add cwtl pushfq (bad) jp movabs repz mov cmp xor repnz sarb pop stos and push sbb sub in sbb add push loopne in movabs jl in (bad) or sbb jmp fldt sbb xchg mov cmp out (bad) and mov ficom je stos push mov adc (bad) xor rex.WRXB rclb xor jle stc xchg push divl mov (bad) (bad) or add (bad) jle adc (bad) add rorb rolb rcl jmpq (bad) lcall mov pop add in jb mov movabs add sub jnp pop jl or test mov jmpq lods jbe rex.W int mov (bad) (bad) (bad) add addl gs stc mov repz push (bad) in jo pop jl sar movabs rex.R hlt push sub repz mov in ja rex (bad) int3 out lret out ss jnp pop mov push cmpsl int3 mov mov rex.RB (bad) sahf rex.WXB (bad) xchg sub stos imul (bad) pushq in pushq jl sub add fsubrl add mov in sub lahf jnp jmp jne (bad) add xor ss rex.WB add (bad) hlt rex.WRXB xor add std data16 mov pop or sahf add mov rex.XB sarb ja (bad) callq xorl jnp (bad) (bad) rex.X cmp iret mov xchg jl lahf mov lods test (bad) int3 add (bad) add mov push imul lret mov (bad) loope cmp pop add out mov (bad) (bad) cmp cmp fnsave pop jnp xor insl pop sbb rex.WX (bad) sbb jb out and or jbe fdivs in pushq mov rex.RXB lods mov iret stos add movsb jb (bad) (bad) xor rex.RX sbb (bad) xor add pop jbe sub fistl and in and xchg jle sbb xor add adc test fs leaveq push decb pop push jmpq (bad) cmpsb sbb outsb fwait xor mov xchg adc mov scas add (bad) (bad) xchg mov (bad) (bad) test nop addr32 xchg rex.WRB (bad) jrcxz scas clc stc fisubrl jge lock cwtl (bad) xor rex.WB test int pushfq retq rex fs xor rex.WB jp jge enterq lods jno shrl outsb pop adc and or xor std add stos jmp add xor add adc xlat adc xor rex.W add sbb xor rcrl (bad) jrcxz xchg test cltd mov (bad) movabs lods jae sarb or cs je out pop xchg push (bad) or (bad) scas rcrb test fimul outsl (bad) (bad) xor mov ss and repnz (bad) pushq (bad) (bad) mov (bad) add (bad) icebp mov rex.X pop insl push (bad) clc rex.RB (bad) or cmpsb or mov stos mov pop rex.WRB lods mov rex.R cs mov and mov pop and pop xor push jmp xchg xchg mov xor cld (bad) (bad) rex.W (bad) lahf cmp jle sbb (bad) movsb rex.RXB std (bad) pushq pop fcoms rolb rex.WR test sub pushfq jle (bad) rex.R fcoms insb repnz sahf rex.WRX cld add cs nop jle imul or lahf adc sub movsl popfq test sub pop push add mov or or and (bad) push popfq jle js (bad) jne mov sub sbb nop (bad) (bad) add rex.XB push fsubr add out sbb fcoml lods decb jo mov add movabs cmp (bad) pushq outsb jp mov cli icebp (bad) loopne,pt or and or notl add (bad) lock movabs cmp cwtl negl (bad) pop add movabs rex.WRB movsq out jbe rex.B cmpsl test jrcxz jg sub sahf add rex.R (bad) jmpq jne (bad) lods (bad) add (bad) mov mov xor callq pop add jbe (bad) cld clc pop rex.WB (bad) in pcmpeqw lret xlat retq enterq repz stos icebp mov jns fs rex.R cmpsl xor int pop pushq (bad) mov test movl pushfq ds (bad) jb add imul sbb cmp or mov sarl jb adc pop jns insb icebp loop (bad) jrcxz loope (bad) pushq push scas (bad) adc jns mov and xchg movabs test xchg rex.WRXB add movabs loop (bad) mov (bad) insl xorb (bad) retq add xchg xlat in mov cmp movslq mov sub movabs cli sti adc xchg add xlat jns add jge mov add std cld adc xor adc in ds setp lret out cmpsb pop jle stos mov xchg xchg addl cmpsb mov (bad) (bad) leaveq mov cmp or pop fistpl icebp adc push pop add jae nop (bad) sub mov push clc movabs adc sbb sub sarl fstpl (bad) (bad) stos (bad) xor (bad) lock movabs sub rex.WR mov xchg jl sbb cmc retq retq add stos jg fcompl mov lods (bad) ja gs movslq adc (bad) rex sbb rolb xchg mov (bad) mov fs mov sub divl add adc movl mov sub loop lret movsb mov pop mov jne fwait (bad) decb cld xchg rex.W movsb rex.R rex.WX decb imull and fs pop loope imul and sub in fisub sbb mov sub (bad) jbe fs mov jb mov fbld jp mov (bad) and hlt testb orl jae out xor cmp (bad) add sub push test sbb (bad) movabs cmp and jno outsb jl xor xor and and xchg nop pushfq sbb enterq push lods (bad) sarb int3 leaveq movsb or cltd sbb (bad) xchg cmp xor pop pop rex.X cmp (bad) insl mul (bad) mov movabs movsl lock imul (bad) (bad) in fwait rex.X mov (bad) sti pushq addr32 push lret jge (bad) (bad) outsl imul pushq fldenv scas (bad) fimul xchg hlt xor sub hlt fsubs cmp cmp and (bad) push std jae and sarl jmpq pop jmp outsb (bad) or mov (bad) (bad) and add mov cli xlat idivl lock (bad) lods jno xor roll and lods sti cmp (bad) callq add rcl (bad) notl (bad) sbb pop mov faddl add or or fs or (bad) (bad) rex.WRXB inc pop out sub add imul add cmp xchg add and cmc add (bad) rex.RB jae mov pop movabs jg mov movabs add mov (bad) jle jno add rol adcl or push mov jbe (bad) (bad) (bad) rex int in (bad) mov sub rex.WXB push pop pop test sub (bad) vcvtss2si add xchg rex.R cli mull enterq jmp pop leaveq and cmc pop data16 (bad) or sub mov mov sub lods std xor (bad) (bad) (bad) je imul add xor (bad) mov cmp ds std sarb callw cmpsb int3 xor (bad) jle mov popfq scas (bad) mov stos (bad) rex.WR pop outsl mov outsb out ss setns ficoml and rex scas cmpsb jg sar rex.B rex.RX jl nop xlat xor lret xchg sarl cwtl mov (bad) jl and (bad) mov js xchg pop stos test insl sbb rex.WRX cmp mov pop pop mov int3 (bad) lret sub xchg rcl repnz jnp push retq pop jno xor sub sub cmp rex.B jmp sbb test (bad) out mov imul cld mov retq (bad) sahf fdivrl fnstsw rex.R (bad) pop (bad) imul jbe adc or adc mov insb movslq jg jmpq sbb add mov pop pop mov rex.XB (bad) in fcomps jns pushq pushq lods (bad) (bad) insl mov loop (bad) adc rex.RXB cmpl rex.RX (bad) (bad) (bad) int3 rex.X cmp rex.WRX fbld (bad) mulb or sub test roll stc insl adc pop push sbb jae mov mov xchg setl sbb adc mov in xor (bad) jb cmp insl sbb lea leaveq in jg (bad) rex.R (bad) (bad) xchg andnps cmpsl jo notb sub movslq loopne cs mov sub pop (bad) (bad) jle pushq rex.WRXB cmc (bad) sub imul fimull and sbb adc cmp xchg movabs push fidivrl jg cmp xchg stos mov pop outsl mov mov adc scas mov test movsb jrcxz movslq push (bad) adc cwtl rex.WX js push callq add in or imul (bad) mov test (bad) je jmpq add ds (bad) add sbb insb in xchg icebp andl (bad) rex.X sub sbb or (bad) insl mov fstps mov (bad) rex.RXB (bad) (bad) adc jg jbe pop pushq sbb rex.R shl jg movabs (bad) out rex.WB add je xor mov loope pop cmpsb scas lods jbe adc sub (bad) pop ficomp rex.X xor push jle lahf jl imul cld pop mov jle add mov xchg xor xor (bad) jp retq fistl push cvtps2pi adc insl mov adc xor rex.RX rorb test fs ljmp add jmpq (bad) mov jg cs sub mov sahf cmpsl add jmpq adc (bad) in xchg sbb callq scas rex.B sub cmpsl stos and jnp clc rex.RB rex.RX movsl (bad) jo sub rex.WR leaveq mov test outsl mov stc add rex.XB jns loope jle and in (bad) sbb jl and stos (bad) and ror repnz (bad) jle (bad) test (bad) fdiv jo scas xchg xchg jg sarl andb jne add jl mov or (bad) adc rex.XB in add retq or sub add (bad) pop pop xorl add push add (bad) outsb loopne xor and add mov add callq cli mov loope add mov (bad) int3 push outsb scas je xchg data16 sbb cmc (bad) add adc jl int or (bad) (bad) mov jne pop xchg jmpq (bad) sub and shll hlt xorl and pop insb add xchg rex.X cmp data16 or cmp ds (bad) push (bad) xchg lods movabs ficompl add ds mov add lret mov sub mov retq push (bad) jno or out add mov jbe neg rex lea cmp or push sbb add out (bad) cmp add rex.WR mov (bad) (bad) (bad) retq rep in add stc out out incl (bad) jl jle xor jp fsubrs pop xor pop xchg outsb in add and pop idiv in loop fstpl xor sbb add mov add movslq loopne data16 (bad) (bad) mov xchg mov jge cli (bad) mov jmpq adc fdivs add cmpsb and push jl xadd rex.WXB rex.R retq je shll (bad) add rex.WB clc sub xor shrl outsl xor lret sahf (bad) add mov add negl and add add ficomp jl mov es stos add imul lldt xchg push mov or push and jle jae test push sub adc add and adc mov cltd out rex.XB scas adcl mov xchg push (bad) push rorb rex.WR fs sub test pushq fadds fwait and mov add or test std push loop jmp cld rex.RXB jg jbe popq adc pushq add outsb sub jnp add std xchg icebp adc imul mov sbbl fisttpll push xor (bad) mov mov (bad) xchg cmp out xor loopne ficom rorb jne rorb cmc add pop decl add (bad) (bad) popfq xlat xchg pushq push test lret mov loope mov mov xchg (bad) (bad) jb cmpsl clc sub xlat (bad) or int3 (bad) adc mov adc incb add xchg sbb adc (bad) imul (bad) push rcll pop (bad) and int adc pop (bad) js cltd rex.RX (bad) (bad) pop lods stc (bad) cmpsb jo ficompl pushq mov rex.WRXB sub adc lods lea (bad) pop fidivl mov (bad) mov and repnz fcmovne jge scas (bad) addr32 (bad) pop and loop (bad) mov pop rex.WRXB xchg pop or (bad) pop dec xchg int3 cmp out rex.WRX xor nop rex.WRXB rcrb sbb rex.XB (bad) stos cmp loop rex.RX (bad) mov loope xlat testl jb in jle and rex.W xor ficomp scas rcrl mov (bad) mov cwtl add rex.WRB add push xchg orq xor sub cmp outsl movl mov xchg sbb (bad) lret rex movabs mov repnz adc icebp mov cmc sahf mov add int sub (bad) rex.WXB (bad) jbe fwait scas add je,pt (bad) push sub jg (bad) leaveq xchg pushfq (bad) mov xchg (bad) (bad) out mov popfq loopne mov imul (bad) rex.WX fimull jmpq xchg mov (bad) xor outsb or adc mov callq add pushfq jae pop (bad) data16 mov xchg pop idivb sub ja mov xchg jrcxz (bad) outsl (bad) push cwtl cpuid sub hlt cmp sbb stos sub xchg ss (bad) psrad add mov rex.XB ss gs mov rex.WB rex jp cld push scas fisub jnp (bad) xchg jae movabs or outsb push int (bad) (bad) outsb andb xor xchg and push add hlt callw lods and xor fcmovnb xchg ss sbb push lret mov outsl mov jg adc sbb sub push cmp pop mov movabs jb sbb pushfq test jb cmpsl add (bad) (bad) rex.X loope sub jo lods imul in stos pushq add rex.RB sarl lret enterq movabs movabs int3 jle mov insl cmpsb in mov jg (bad) (bad) sbb add movabs cmp jnp push mov add (bad) scas mov movabs popfq (bad) jno add fdivr movb add xor add add mov popfq mov fisubrl (bad) adc sub (bad) and and addb scas je adc add mov cmpsb jmp fstps add leaveq in retq out loope add orl jnp add jle xchg lods cmp in pop add (bad) (bad) fnsave rex.WRB adc jne sbb mov shrl (bad) div (bad) mov jne sub sbb xchg je xchg adc mov jle rex.WRX (bad) (bad) (bad) mov testl mov lahf (bad) emms fild (bad) (bad) shll (bad) pushq pop jp rex.WR lock jl sub ljmp push cmc jge adc (bad) (bad) rex.R retq xchg outsl jrcxz push sarb enterq jno scas (bad) cmp outsb mov (bad) (bad) or xchg mov rex.X (bad) decl mov enterq (bad) cmp mov jge in fwait in js (bad) (bad) pop jl sub jne adc sub pop je insl scas rex.WRB (bad) rex.W pop stos movsb es pop (bad) mov lret mov jne es (bad) (bad) jbe clc jne rex.RXB mov xchg mov and and push (bad) xchg fsubl lret cmc int3 iret or std (bad) int jge jmpq sub rcrb fsubrl nop shl mov xor jl mov lods hlt (bad) rorb jbe push and mov and (bad) shll retq mov add rcll adc or xchg retq sbb jno cmc xchg (bad) xchg repz (bad) pop movsl mov xchg int xor rcl xorl mov movabs (bad) enterq test out fs mov pushq (bad) pop mov fistp sub fwait push imul cmpsb jle jb (bad) (bad) (bad) enterq retq (bad) mov add js (bad) out xor (bad) mov js js rex.WRXB int xchg jg rex.X (bad) rex.WB mov and xchg xchg (bad) movabs cld jg in pushq cmp mov sub add repnz or sub gs (bad) jne scas shl rex.WRXB sub xchg out mov (bad) mov (bad) pop cld xchg (bad) xchg jl jge pop jl retq es jnp sub rex.X or or inc (bad) outsb push pop jnp retq pop rex.W (bad) xor lret jle loop test or jg rclb jns movsb jp jb (bad) jbe scas movsl ljmp add xchg (bad) test add pop callq add or fstpt sub imul sbb lods ss adc sub jne sbb rex.RB mov pushq pop or (bad) add pop test movabs push test jb mov (bad) scas and rex.RX add jg mov (bad) mov (bad) (bad) mov adc add push stc mov jns jbe or mov (bad) (bad) pop add xchg (bad) stc scas xor sbb add (bad) pushfq (bad) rex.W repnz cmp fsubr hlt rex.WR (bad) stos add xchg jmpq (bad) mulb rex.WB and lock cmp push mov fbstp (bad) movabs push loopne movsb mov cli in popfq sti adc mov add jrcxz scas jnp sbb jmp pop or movabs jno add rex.R mov and jg sahf sub jo adc push rorb test jp rcrl subl lock sti cmc rex.WB jrcxz ds cmp loopne scas rex.WRX adc fs movsl rex.B mov clc add outsb rex.WR rorl adc add (bad) mov nop imul std jg sbb add (bad) fbstp rex.WXB jmpq outsb push jp sbb fbld (bad) je jle mov callq (bad) pop or (bad) movabs hlt and pushfq pop and rex mov movabs and movabs cmpsl pushq jb (bad) xchg pop movabs movsl notl test nop (bad) imul or rorl and add or test clc or jns movabs vmaxss rex.XB cmpsl mov xor jmpq rdtsc movabs jrcxz add ds movsb (bad) movslq push andb (bad) (bad) add std fidivrl (bad) or stos add (bad) je int mov stc add or xor test lahf imul xlat rex.RX push std (bad) rex.RB rex.XB insb rex.X rex.B pushq insb (bad) cmp testb mov add mov xor and add rclb mov add pop cmp std (bad) cmpsb jb imul jge jbe pop or add mov rex.RB rex.X ss mov fnop add xor mov sub adc loope testl movabs rex add movsb cmpsl repnz jrcxz add jg push or leaveq xor pop lahf jbe test clc add cmpb movsb notl (bad) or addr32 out (bad) xchg outsb divl retq xchg (bad) cli adc xchg sbbl sub adc xlat rex.WR and cmp andl adc xchg fisubrl insl (bad) sub and jrcxz push adc mov or (bad) jbe rex.W mov or int3 xor std pmaxsw pop sbb cli fldcw insl flds movabs mov push fwait mov mov jg (bad) gs jge adc cmp mov push jnp rex.WXB cmpsl rex add rex.RXB stos lods jge (bad) and or jmp add stos push lods rex.XB icebp push pop addl adcl add mov (bad) xchg shrb xchg add cmc rex.WRX or (bad) movsb test add in sbb add in mov (bad) (bad) sahf cmp movslq jrcxz (bad) pushq (bad) lahf cli cli addr32 movsl or movabs movb int cld leaveq test adc lea gs stos (bad) (bad) jb rex.X (bad) rex.W (bad) (bad) mov jb cmp mov pop mov adc imul roll test jg xchg movslq add mov cmp test je movsl incl std js ficoml pop (bad) testl xchg mov lcall jg (bad) xorl lock mov pop (bad) adc mov test fiadd movsl pushq xchg (bad) cmp mov jb scas imul adc mov flds sti and rex.WB or rex.WR jge,pn and std (bad) ja (bad) add mov sti (bad) add movslq (bad) movabs loopne add rex.RXB rex.RB add sub push data16 je sti xchg shlb sbb ds in xchg or imul adc fistp xor sub stc xor jb mov ja insl rex.WRX jmpq pop add pop jne mov (bad) xor lahf add xchg xor or jp test es jg and movabs mov (bad) mov xor sub add add jns (bad) xor add mov fstpt pushq sar fmul jge sbb imul xchg mov test imul (bad) andl ja push fstpt or or mov or jo cli push lea jne rex.B add js and (bad) sbb xchg (bad) (bad) jno xor xchg (bad) pushq push mov icebp cwtl retq in std jl imul cmpsb in mov shlb pop pop fistpl scas xor and rex.WXB mov (bad) in fnstcw ja mov add rex.R add add jae (bad) je add (bad) cmp (bad) rex.X movslq rcll or add mov mov cwtl std (bad) iret (bad) cmp rex.RXB or popfq and jmp (bad) stc cmp int3 (bad) fcomi movsb add sub sbbl (bad) mov test mov lock rex.W iret rex.X mov add cs add (bad) (bad) gs mov adc rex.RX fs pop (bad) lret mov sub (bad) add adc hlt sahf cmp add out or jae adc iret add adc jb (bad) adc int rex.X sbb fbld xor retq ss (bad) loop push repz imul retq rex.RX jo cmp pushq rex.RB addq (bad) sub scas lret test loop loope xchg xor xorl out push iret (bad) xchg (bad) xchg fsubs pop and adc sbb pop movabs lret add (bad) jg mov sub movabs repz jmpq mov cmpsl dec and sub rcrl push ja cmpsb cmc ds repz es jp cs pop pushq movsb push jrcxz ja push add xor mov (bad) (bad) mov mov lods movslq add stos iret add movsl leaveq pop (bad) lods push mov mov or add lea sub (bad) pushfq adc movabs mov out cli test mov rex.WX push jp outsb mov add add xchg movabs jb and sbb push xor mov mov add mov sub scas add pop push mov (bad) xchg xchg pushq ds hlt fs sub outsl mov adc xor add fstps es mov (bad) (bad) clc mov (bad) movabs (bad) (bad) sbb lods cmovne (bad) callq es loope (bad) xchg js (bad) (bad) fiaddl clc rex.X lahf andb shr test xor notb sub jp out callq lret jns rex jne std nop (bad) test mov sbb (bad) nop adcl movabs mov (bad) cmpl addr32 stos jle or test mov cmp orb mov add rorb or jmp out (bad) fs (bad) jno lret xchg (bad) rex.RX rex.RXB (bad) rex.X add adc mov add adc sub movabs es ja in mov mov or out add cwtl cmp cmp xchg (bad) (bad) xchg in fstp sahf cwtl jno xor mov (bad) add (bad) xchg xor xchg outsb rex.X jle stc jnp rex.WX rex.W lahf add test mov hlt mov jl (bad) (bad) (bad) jne (bad) repnz mov sub shll ja mov popq je repz cmp cli jb mov rex.WRB jg rex.WX pushq fstps loopne (bad) ficomp jg lea lods mov (bad) jrcxz (bad) fisubrl insl mov pop add (bad) lods pop roll xchg pop rex.WXB (bad) rex.XB mov pop sar (bad) dec mov cs jbe rcrb and push mov ja insl lock adc add (bad) loop (bad) push (bad) mov mov ss cmpsl cmp rex.RXB push sub sarb push scas sbb (bad) (bad) push repnz pop pushq (bad) rex.WRB repnz adc (bad) pop cld in sub sbbb in (bad) hlt jbe pushfq lods mov pop add (bad) pop xchg xor xchg mov jmpq (bad) movabs retq or (bad) cmp cmpsl add rex.WXB jae pushq pop (bad) (bad) xor mov fs mov stos push out add mov jb jg int (bad) sarb fimull adc xchg rex.WB adc add in jmp lock (bad) jle (bad) rex.W stos (bad) rex.XB add sbb (bad) cwtl (bad) (bad) jne mov sub mov popfq jbe test sub data16 and add int fs cli mov in mov stc fs cwtl scas insl jg jae jle add retq (bad) cmpsl fs out pop (bad) mov jle rclb cmp test movabs in (bad) pop and int movabs (bad) rex.WB roll sbb and movsl add movabs clc or jg out cmp push mov (bad) hlt mov mov loopne cmpsl outsl cmp jbe (bad) lret scas adc xor fldl sti hlt jb mov lret pop fidiv and lea jmpq test out loop fsubr mov imul sbb stos rex.WRXB pop lret cmc rex.RB xor (bad) jbe cld mov movsl add cmpsb (bad) sub adcb push jb rex.WR add mov out lahf shlb xchg mov cmp fwait outsb push int or cmpsl loop xor or mov or adc push shl mov add mov add (bad) cmp test adc rcrl xor adc cmp xor in xchg rex.X fistl mov add mov mov xor pushq jae rex.X adc sub add test or mov (bad) je rex.B rex.W sub fsubs ss xchg insl sub rex.X rex.B test push movabs sahf mov popfq jp cmc out cs fistl (bad) stc loope jl mov jg xchg jg pushq mov repz rex.WRX movabs orl (bad) add xor xchg imul rcrb add (bad) test in cltd jg mov jg loop rex.B jns sub (bad) adc lods jbe adc cmp xchg xchg (bad) xchg iret enterq mov outsl and retq retq xor sarl lea jg mov mov js rex.XB std sbb and push data16 pop popfq xchg jl (bad) and cld mov or (bad) callq push pop push rex.WRX std (bad) mov add or pop pop and cmp (bad) add fidivl cmc fidivr scas (bad) sub pop mov rclb add jb rex.RB pop rex.RXB rex.B clc xchg mov repz fnstcw nop pop pop fcompl insl jns adc pushq rex.WRX add mov (bad) stos pop rex.XB sti jmpq (bad) jb or insb push fs faddl cld xchg (bad) mov mov popfq fs (bad) in sarb stc mov add mov sahf adc (bad) (bad) imull out (bad) js adc jg imul fcoms ds mov sti in sub fdiv xor stc jns ja push out add rex.WB cld sub (bad) xchg callq jae repnz jmpq sub cmp mov jle rcl loop mov rex.RB shlb adc push add enterq (bad) movsb mov add (bad) movabs xadd or pop jae mul (bad) cmp movsb push jg movabs and stos mov add out rex.WRB (bad) lret ja cmovno movabs pop (bad) js es leaveq test cs push xchg decb test push xchg mov xchg imul movabs pop out callq sub rex.RX pop jmpq pop test jb xchg xlat mov (bad) add movabs imul je jmpq movabs jmpq pop rex.RX (bad) jrcxz ficoml pop (bad) or loop add fs jrcxz cmp enterq divb (bad) outsl push fwait retq mov stos cmp test int test nop test div jmpq js fisubrl xor mov cmp in (bad) xor movsb mov (bad) cld movabs jle std jle movabs xchg push adc (bad) movabs test (bad) pcmpgtb retq outsl xchg lods (bad) movabs in (bad) out mov icebp xchg add roll outsl cmp pushq lahf mov (bad) jns (bad) in (bad) enterq push sub (bad) jmpq (bad) imul xlat mov cmp cli pop xor fdiv outsl and cmc fnstenv xchg jns rcll cmp and cmp fwait xor sahf test fmull sarl sbb jl sbb ror add jbe in mov pop rex.WRB add movslq adc fstpt mov (bad) xor rex.WRX jb mov rex.X stos testl rex.WRB rcrb xchg add movsl rex.WRX add sub jle (bad) push out (bad) cs and test and (bad) je jle sbb movsl (bad) cmp mov out (bad) repnz add pop rex.RX mov mov repnz stc xor jo out rex.WXB sub pushq cmpsl scas xchg in test add adc test (bad) rex.W stos lret jp test and xchg fdivrp cltd fiaddl lock scas adc cmpsl pushq (bad) sub mov cli out (bad) adc test outsb cli xor (bad) add (bad) xor sbb out mov pop push retq addr32 outsb callq stos mov lods cmp adc xchg mov push loop jle addr32 xor movabs cwtl pop adc mov ss mov cmp stos imul and in fcmovu (bad) rex.B add and xlat sbb and xlat pushq repz cmpb mov fsubrs lock movabs mov jrcxz imulb (bad) xor rex.W and lea rolb rex.WXB lods pop jp js mov (bad) xchg addb xchg cmp mov (bad) sbb jmp (bad) testb (bad) add xchg and and fcompl mov (bad) rex pop and add insb rex rex.WXB jo jrcxz data16 add adc gs pushfq scas insl mov jae (bad) add movsb (bad) xchg rex.RXB add xchg mov jp jae (bad) out outsl cmp mov mov xor (bad) cmpsl rex.XB repz or sti (bad) mov jnp movsl (bad) add insl push pop xchg pop out add push cltd (bad) fist out movabs xchg mov pushq rex.X xchg mov rex.WB fs xlat mov je notl jb fist mov add rex.WB (bad) sub out xchg (bad) jo (bad) fsts (bad) add (bad) fdivl (bad) fiadd in cmp jmpq sbb pop add int ja scas cmpsl roll callq fnstsw roll mov clc (bad) fistpl or adc xor insl cwtl stc cs add add outsl and jrcxz int3 addl out xchg test ficomp lock lea test movabs push sub (bad) add pop (bad) in int3 xor adc outsl loopne in movabs scas outsl mov fdivl pop rcl xchg mov mov adc or rex cs mov loop mov cmp cmp add xchg enterq or (bad) jg sub sub cmc test test (bad) (bad) (bad) iret mov jbe add cli xchg push jl add fsubrl rcrb scas lods out jl insl and movabs insl cmp outsb pop (bad) jne adcb andl sbb xor mov ss mov leaveq hlt sub cwtl fdivl retq pop sti mov outsl xchg ja (bad) ficomp shrl movabs (bad) out rex idivl add cmpsb mov jb movsl sub and outsb (bad) jbe pop mov xchg cmp pop and outsb fwait mov cmp int3 mov mov pushq mov test nop rex.WX imul insb test nop (bad) std adc lods mull mov jmp rex.X mov sbbl fs or test fnstenv xorb (bad) psrad pop rex.RXB jns (bad) (bad) or outsl scas jle popfq pushq sahf lods add (bad) push mov (bad) rclb jmp cmpsb lret lock sar xchg (bad) add insl jmp or add push add rex.WR and fldcw add (bad) jb jge jne mov fbld mov (bad) xor add je and out rex.R mov ds test pop int3 jb (bad) rex.X and adc cmp mov in mov in clc lret jmpq rex retq add jrcxz movabs pop sbbl (bad) dec cmpsb idivl (bad) pop jbe repz lahf sub push cmp rex.RXB outsl data16 adc imul stos mov (bad) jno cmp lahf testl rex.WRX movabs add fwait jge mov fwait jbe test fsts lods mov push mov ds leaveq add lods test xchg in (bad) rex.WRB es fidivr sub jns callq jle sbb rex add rorl push movabs cltd xor rex.RXB rorb cmpsl rex.WX xor mov (bad) mov push and mov xor xor (bad) (bad) and mov movsb icebp xorl mov or int3 out jp push add (bad) mov (bad) loop add (bad) sub (bad) mov fnstcw jo adc rex.WRX jne out adc jge cmpsb jnp push ficomp adc pushq (bad) repnz fwait insl jmpq stos fidivrl (bad) xchg movabs (bad) mov rorl shrb add lret mov pushq stc add (bad) mov rex.RXB (bad) jp mov popfq (bad) rex.RX bnd add in xor jae pop mov xlat jg cli fnclex (bad) mov push out (bad) add sub xchg add push rex.WB xchg mov mov std pop lods fildl (bad) repnz loopne push jle xor xchg mov pop lods leaveq insb repz pushq cli sarl mov fbstp scas xchg cmp and rex.B (bad) mov mov and lods add (bad) and xchg (bad) push lods stos jl cmp (bad) or sbb nop mov mov movabs (bad) lods fwait jo cmc outsb mov stos adc xor sub in fildll mov mov in rex.WRX cmovno movslq sub jns lea (bad) jg sbb (bad) js add cld hlt shrb cmp icebp (bad) mov movsb (bad) add or movl lret es add xor rex.RX (bad) push add pop cmp in int cwtl retq (bad) mov lock fstl int3 add (bad) rex.WB cmp or (bad) mov jmp jb mov fldl movabs fs iret (bad) add rex.XB rex.RXB adc mov (bad) push (bad) push jge xor callq enterq scas xadd mov sbb xor rcr (bad) rex rex.RX add (bad) icebp mov (bad) lea rex.RXB or (bad) (bad) and es mov enterq adc push incl jno xchg mov icebp rex.WR rex.WRXB movabs jg shrb pop add (bad) fdiv add jno xchg mov pushq cld rex.WRB mov cwtl (bad) std add mov mov sub (bad) (bad) je (bad) leaveq test (bad) add mov rex.WXB mov or scas in je loop (bad) fisub mov xchg (bad) mov pop je out cmp (bad) je addr32 push sub iret adc mov pop rex.XB imul jp (bad) (bad) adc cmp xchg mov xchg hlt (bad) out rex.WR jbe imulb and ja add in and (bad) cmp cmp test jns stc shl add scas (bad) mov mov or jmpq rex.WRB data16 xchg or cmpsl xlat sub movsb loopne scas jg pop jbe mov cmp fisubr xchg push addr32 (bad) add xchg adc (bad) sti lcall mov xchg mov (bad) hlt add (bad) (bad) je int roll jo rex.WX (bad) jb rex.R cmp mov jge sahf xor int jbe sub adc jmpq (bad) jb rex.RXB push ficomp movabs mov std xchg icebp je sub cmp sbb cmpsb rex.W loopne and movabs gs or push sbb loope jle pop movslq lahf cld (bad) add (bad) mov jp leaveq mov outsb cli xorl mov mov out movabs cmp outsl xor stos mov (bad) pop adc rex.RB add sub sti add mov loop shrb push cltd movabs leaveq fisttpll jrcxz mov paddq pop sti (bad) outsb lahf iret rex.WB ds mov adc sub mov add or fimull insl (bad) int xor stos retq jge (bad) sbb (bad) callq cmp jrcxz jns or push adc test xchg lea (bad) pushq add adc cld jl fild sbb jnp pop xor or pop (bad) in roll rex.WRB outsl sub test add and movabs mov in enterq jo (bad) ss cmp roll (bad) pop movabs pop clc jb repz es pop mov add jae cmp insb add xor (bad) rex.W pop mov movabs (bad) (bad) mov or rex.WRB add mov mov ja or (bad) repz mov mov push add mov jmp push loop testb test mov mov xorl mov pop adc push jg cmp out int3 mov jrcxz jl mov movabs scas sbb sbb xor jno push mov pop outsb (bad) cmpsl clc xchg enterq (bad) rex.WRB inc int fcmove xor xchg pop push mov sarl je push sub ds (bad) rex.WRXB jmpq shrb and lods fildl jbe adc sub mov xchg int in sub (bad) mov andl xchg adc (bad) or test lods xor out sbb add hlt pop insb rex.WX adc mov push mov cltd xchg out mov mov lret in rcl scas in xchg sub outsb int mov fsub fsubrs xor sbb xchg (bad) test sahf pop jle jne imul (bad) pushq jge mov es insl cmp (bad) adc orl (bad) sbb (bad) sbb ja add (bad) rex.W (bad) faddl js xor movsb movabs es mov (bad) push (bad) (bad) jp (bad) sbb and fwait insb add sub enterq jp leaveq xchg loope (bad) mov jle push cltd out outsl (bad) mov sub or mov movsl mov jrcxz scas test dec insl mov iret push xor fbld fcomps repz es add cmp (bad) add xchg pushq sbb (bad) mov mov stc fild add rex.W (bad) test jle data16 mov cld ffree jg fcmovnb imul lahf add rex.WR mov jnp xchg fsubl adc int3 (bad) add (bad) pop icebp sub and movb fsts (bad) incl (bad) (bad) mov and sbb nop jb pop rex.WRX int push (bad) xchg in jg rorl add popfq or and adc fs movslq (bad) iret out or add int mov xorb add and and rorl test lret sbb test xor rex.XB test add mov (bad) (bad) add and out mov sub jp test jnp add (bad) rex.WB mov adc mov rex.WRB rex rex.RXB movslq adc xor movsb sbb lock rex.RXB mov movabs cmp mov jrcxz pop cld fadds insb cmpsl add add add xlat mov sti add mov mov cmp jge ss leaveq testb mov fwait cltd movsl loopne add cld fcmovbe or (bad) stos (bad) jne pushq add mov lahf (bad) mov xor in cltd enterq or scas cwtl jp (bad) pop mov fisttpll js (bad) je jns outsl pushfq (bad) rex.XB mov or sahf rcll add jrcxz pop out xchg jp imul (bad) xchg ss fwait addr32 xchg and sub pop rex.X ss rol (bad) iret xor nop xor fs (bad) pop jb push mov stc or in jg (bad) sahf (bad) jle je jnp out in add out jp fwait pop callq pop (bad) add xlat (bad) add (bad) rex.RXB data16 (bad) and adc (bad) rex add mov cmp cmp data16 (bad) pushq or sub add jge (bad) add clc iret and sub std or xchg cwtl xor jb (bad) test fildll xchg scas stos (bad) jne mov xchg out rex.X cltd testl xchg fsubr rex.XB cmc (bad) ja xor sbb jbe jmpq rex.B lret test add xlat sahf clc add movslq jbe sub xchg cmc add push out rex.WRB retq notl add (bad) rcrb stos (bad) (bad) mov mov jg mov ror xor adc insb push add (bad) rex.WX (bad) retq fstps fistpl rex.W ss mov cmp (bad) sub jmp add sub add (bad) or lret retq lret jl cmp add xor (bad) xor int lret mov addl mov lods rex.RB push (bad) jg mov adc rex.WR mov cmp add jb fisubl cmp rex.WRXB cmpsl and iret imull retq pushfq in (bad) add jnp rex.RB je cmp pop push lock pushq repz xlat fwait and or popfq mov (bad) pushq fcom (bad) mov loop and (bad) je pop stos xchg pop (bad) (bad) rex.WX (bad) mov mov cltd mov cli (bad) mov xchg pop add (bad) cmp (bad) jno imul rex.RXB xor jb int insb repz test pushq xchg fs jae sbb add mov outsl mov (bad) lock pop fisubr imul jbe (bad) mov add sbb xchg xor loope adc sahf (bad) mov lret addl hlt rex.WXB xor repnz add enterq sbb clc fmull mov loop sbb sub mov add add (bad) stos jmpq push sbb stc jnp xchg es add or data16 push js pop (bad) movsl adc xchg lcall jae (bad) pop jns movabs add sbb mov lea jne add rex.WRB jnp addr32 fstps jbe jae js add rex.WXB jnp enterq (bad) pop jrcxz sbb mov out lods mov mov jno (bad) rex.WR movslq movsl insb add xlat (bad) movabs mov rol stos push cli pushfq mov mov or jp std mov (bad) adc sbbl test or imul (bad) lods xchg movsl stos add rex.WRB gs mov adc (bad) addl push or pop subb xor jp (bad) cmpsl out add lret add (bad) xor jno rex lods (bad) mov in mov iret loopne mov loopne retq and nop jg fldcw stos cmc (bad) pop ja jrcxz cld out out cmpsb cld repz mov mov test int3 pop xchg fdivrs cltd mov (bad) pop xchg js mov icebp sbb (bad) (bad) mov jbe (bad) xchg xchg mov in adc fsubrs xor insl mov jl outsl rcrl cmp mov (bad) xor xor rex.XB imul pushq xchg mov fistp outsb fmuls lods xor jge imul (bad) fimul (bad) in mov outsb mov outsb rex.WRB xchg jle pop jne and (bad) repnz cmp mov sbb sbb sub movslq push xchg cmp hlt lahf fiaddl or insl sbb fnstcw sbb lret xchg or out icebp lea shlb and mov xchg (bad) push push xchg push shll iret callq mov adc mov stos in add rex.RXB rex.WR jg adc pushq (bad) and jge (bad) rex.XB gs jne in cmpsb and pop (bad) adc jno pop pop ss or lea jg lods cmc sub sub (bad) in movabs sbb movabs pop testb cwtl adc rex.RX mov add (bad) mov (bad) fisub xor jno rcrb (bad) (bad) fstpl add pushfq xlat fsubs (bad) ss (bad) pushfq mov (bad) (bad) (bad) xchg rcrl mov add pop rorb adc in shrb and pushq cmpsl (bad) or pop add xor sbb xchg push cmp stc (bad) (bad) lret jmpq (bad) mov rex.WXB scas std jmp (bad) (bad) (bad) jge mov ja mov sbb sbb rex.WB mov jg pop fsub add in js out xchg pop cwtl fcmovu mov xchg (bad) jbe rex.WRXB repnz mov jns push mov ud2 mov rcrl loop cltd test add (bad) repnz mov out mov or rex.RB jp outsl mov (bad) cwtl add xchg xor add mov (bad) add and repnz rex.XB test je retq out add retq (bad) xor adc (bad) mov lahf loopne or (bad) jg mov fsubrp sub or jbe sub jg rex.RB ds (bad) xchg sbb xchg js jp pop mov popfq push fwait roll imulb ds rex.W (bad) xchg (bad) mov mov jg push mov (bad) jb jb xchg cwtl iret mov (bad) jne cmp xchg loopne add pop push rex.RXB (bad) add pushq movabs test rex.WRX sub mov (bad) and pop xchg jle pushfq (bad) pop mov push mov mov cmpsb rex rex popfq push add (bad) xor mov (bad) in or int mov rex rex.W rex.RX adc and rex.WR xor (bad) outsl add cwtl mov movabs sar xchg test rex.B movq add nop shrl xchg imul add sbb ds add adc (bad) int3 add cmpsl jle (bad) mov mov mov cwtl mov retq es push and clc and jae fsts movsb xor jg rex.WRX fisttpl mov jp (bad) lret orl sti jo cwtl (bad) adc push adc (bad) add jbe insl loope clc pop out rex.RB push pop xchg add (bad) fisubrl div mov or repz (bad) ja fwait mov xchg add pop xchg cmp mov add xchg (bad) rex.R adc scas rolb xor ss (bad) fmull fidivl jp xor cli idivb mov or pop add sub or adc lods jmpq enterq xchg (bad) pop (bad) out mov sub add or scas mov (bad) and mov cmp sub rex.R (bad) stos sub movabs (bad) or jg (bad) pushfq xchg rex.RB cmp js sbb (bad) mov mov rex es (bad) add cmp rex.RXB gs pop jl and cmp xchg and iret cmpl add mov mov test and xchg flds or insl xor out or add je add std sar sub sub rex.W (bad) mov add rex.WRXB je jbe rex.WRB icebp add adc jp (bad) or mov or andb fs loopne hlt pop xor mov cld imul (bad) and lret jae out rex.RXB (bad) neg jae add rex.RXB test xor (bad) jge add jmp fs (bad) rex.RXB or xor jmp adc out cmc movabs add pushq (bad) sub add (bad) add lret gs cmp hlt xor pushq (bad) test fsub and add and (bad) int3 (bad) cli or add fiadd (bad) testb ficompl fisttp pop jb movabs xor (bad) and test (bad) lods add popfq enterq lock add (bad) fs adc xchg (bad) es jg pop cmp and add sbb rex.RXB rex.RX mov xchg mov push (bad) sbb (bad) lods (bad) sti xor add test push rex.WR es rex.WRXB jle addr32 jmpq jge in rex cmp out add sub std pushq rex.RX stc mov out rex.RX rex.WX fdivs loope rex push cmp es lods adc xchg faddl rex.WXB sbbl add pushq jae rex.WRB stos cmp or add sbb lods and stos addr32 add shrl movabs retq (bad) add cmp jb adc adc rex.R sahf xor out retq add sbb push xchg (bad) sbb xor rex.RXB or add sub lods or imul mov mov sbb mov pop sbb repnz sub (bad) mov lret xchg adc insl test insb pushfq leaveq or rex.RXB rex.W push or cwtl push cmp cmp scas rex.RXB hlt jns loope and xchg (bad) or adc sahf scas or jl stos loopne (bad) cli (bad) xor xchg sahf adc pushq xchg mov movl (bad) (bad) xchg mov incl cmpsb cld jrcxz (bad) mov movabs (bad) xor movabs fs lahf (bad) (bad) int jg outsb nop jnp pop movabs int movabs add adc outsb in mov sbb cmp cmp push insl mov std cmp hlt (bad) mov rex.WRB mov sub lock cmp subb pop mov movabs sbb orb lods rex.W push out mov sub pop mov xchg (bad) movsl or (bad) or out adc fcoms mov loop jle rex.RX andq jnp addr32 cmc mov cmpsl or mov insl pop fsts rex cs adc insb rex.WXB sub rorb hlt test push xchg jnp enterq rex.WRXB xor jbe shll (bad) fistp lahf cmp rex fucomi repz pop mov pop insb scas (bad) sub sbb add (bad) mov movabs sub js pop mov mov scas sti fs xchg add (bad) (bad) retq jg callq mov cld mov (bad) std scas fadd add cmp push mov jbe lcall pop sub and incl fs cli rex.WRX cmp or in sub callq js jae imul mov add pop cmp cwtl fstps mov mov cmp lret (bad) fcompl adc jnp adc jle jb ja jge rorl pushfq mov pop sbb stc add scas xchg (bad) push testb jbe jp fwait movabs adc lea jno add outsb hlt add sub fs clc movabs leaveq roll mov lret sarb add movabs je int (bad) rex.R sub jp out rex.RXB (bad) xor xor or add adc pushfq es (bad) or (bad) movabs jmpq add jmp xlat jae clc mov mov jl pushq in jae (bad) outsb jmpq pushfq jg sub rex.W lock repnz push (bad) sbb test jne mov lcall (bad) cltd pop rcll sub (bad) push sbb (bad) pop rex.RB rex.WX pushfq (bad) sti sub out jl or loope lea (bad) jbe fsubrl jbe decb xor in xchg (bad) out lahf retq (bad) jg (bad) mov movabs outsb jmp mov callq (bad) xchg in (bad) rex.B jrcxz (bad) pop rorb push rex.WX (bad) data16 xchg rex.R rex.WRB add cwtl shrl cmpsb pop leaveq add xchg (bad) sub xlat test cli jae pop cld (bad) xor xchg fnstcw add or frstor mov jle rex.XB (bad) (bad) jno out jnp mov add in xor (bad) jmpq insl std rex.XB (bad) add int3 cmpsl and add rex.WRB movabs lahf cmp rex.R adc (bad) rex.B (bad) mov push jrcxz pop pop hlt xchg int sti fbld mov mov pop (bad) stc add in add or mov rex adc sahf ficompl js (bad) subb sub (bad) jp retq mov popfq add getsec sub add sbb add orl and stc push cli xchg or pop push (bad) xor (bad) fmull or test add xchg enterq in je test pop add (bad) and pop decl (bad) rex.W fidivl cmp rex.X js sahf cld (bad) and add mov cmp (bad) rex.W mov rex.XB callq jb lret cmpsb fisubr pop fadds orb push rex.X cmp xacquire (bad) jge sub mov add or (bad) fdivs faddl outsl rex.B rex.XB add adc push fmull js (bad) fiadd insb outsb mov jnp callq imul movl insl psraw jle xor sbb lret mov add rex.WX repz jae retq xchg rex.W and add xchg sbb (bad) sbb pushq lods (bad) callq nop int3 pop xlat movabs fisttpl jrcxz and rex.RXB fiadd cltd cmp sbb test rex.W add in rex.B rex.WRX and jg xchg jo sub rex.R es (bad) add add sahf sbb test xlat (bad) shrb fdivrl xor jmp movabs movb push (bad) in adcb rex.RX mov jo push rex.WRXB retq shll rex.WRX nop scas and movabs jp xchg push add je scas jle add rex.WXB push xchg add iret imul (bad) (bad) mov pushq in cld mov (bad) pop mov pop add jne imul rex.WXB xor es stos sahf or lock mov jg (bad) sub (bad) cmp (bad) rex.WX (bad) outsb xchg (bad) fs mov jle pushfq pop out mov (bad) pop cmp cmpsb cmp loope mov repnz imul lahf lock xor jne and pop (bad) loope add sbb sbb enterq pushfq lahf push xchg (bad) rex.W fs mov jb add mov pop fs outsl addb xchg es (bad) cmpsl or xor (bad) rex.X xchg cmp add sub mov add or add (bad) mov outsb jb mov outsl jl cmp and out mov jb cmp rcrl mov out stos iret int cmp rolb outsb pop lods (bad) pop cld out mov xchg cli cmp iret repnz icebp mov (bad) mov sbb fs add es sub cmc (bad) fistp fisubl (bad) movabs (bad) rex mov and out pop (bad) add mov push mov rcll je (bad) movabs xchg xor mov jb xor jp xor in out add (bad) cs mov xchg sbb sbb and pop mov jns movsl out fs mov add xchg sub roll mov fisubr xchg mov jns rex.X movabs cmp mov pop sub loope sub sbb (bad) or pushq leaveq je adc fisttpll add add (bad) add (bad) in cld add mov imul addl imul loop std jp xlat stc fstp enterq (bad) repnz repz in movsl and movabs add not rex.R out stos add sub lods outsb jg test ds xor and sub cmc and gs rex.W pushq sub add sub adc mov or pop sbb movslq add std lret and jle test sub data16 jno xor mov cld push xor rcrl adc rex.WB (bad) (bad) xor sub cmp jp lea xor mov movabs mov and or (bad) sti out add sahf test mov vsubpd jg xchg rex.B rolb add imul adc sbb pop (bad) add push (bad) loopne or add fcmovne mov jnp add sub in js jp cmpsw mov mov xor push mov (bad) adc pop mov (bad) add lret fs fdivrs callq jp retq loop ficomp movabs rex.XB mov add inc (bad) jb push js xor mov mov pushfq int3 xchg enterq sub mov sbb pop jmp ficomp (bad) jne fcomip leaveq (bad) mov mov in xchg cmp and cmpsq loop (bad) (bad) and (bad) rcrl jp comiss (bad) (bad) and (bad) mov iret (bad) jb,pn jg mov sar lods (bad) mov rex.WXB repnz popfq jge std jg jg mov lock adc xor fwait std in mov add xchg rex.XB rex.WRX mov rex.WX data16 rolb adc push rcll mov xor rex.B rorb rex.RX int rex.WXB enterq ss sbbl jnp pop sti rex jmpq pushq sub rex.WRX and iret testl cmc bnd rex.WRB or (bad) add fsubrs rex.WXB or jp gs add xchg and adc callq scas rex.WR clc mov mov sub movabs push add outsb rex.WRXB xchg test rex.WX (bad) jbe mov mov mov add mov subl sbb hlt (bad) or adc add (bad) lret decb and (bad) enterq retq icebp outsb rex.X push xchg xor pushq push fdivrl pop rex.RX xchg add or movabs mov pushq push (bad) xchg jnp pop stc jbe ja sahf and xchg xor clc jnp lods fistp xor out sar insl or push xchg out ror std mov (bad) cmc xchg (bad) lods adc movabs in (bad) add stos jge nop test mov test mov sahf xor lret rex.X adc ds add lock retq (bad) push xor cmp enterq rex.RXB cmpsb mov jmpq stos rex.WRXB rex.WRX jle jne leaveq mov (bad) pop lret and mov jg (bad) decb and rex.WXB ds nop mov jge imul rex.RB pop cmpsb xchg mov (bad) callq push xor sub cmp xchg cmp cmp outsl rcl lods lods adc lahf xchg rex.B (bad) mov add sti pop pop js jle xlat xor ds addr32 mov jbe lods (bad) test mov pushw outsl addr32 nop mov sub adc (bad) xchg cli int3 (bad) (bad) jbe (bad) retq mov movabs iret testb movabs jl pop jb sbb rex.RX movabs and (bad) js int3 stos jbe retq cmc (bad) (bad) or movabs jg add mov adc push outsb jg (bad) rex.WXB adc retq out xchg jmp mov (bad) jge rex.WRX sbb cmpsb jg (bad) ja rcrl lods cmp insl and fwait out pop pop sbb push mov sti rex.WRXB mov (bad) fstps jnp or adcl add mov fcom mov jno rex.WRB and add mov rex.RXB xchg add in pop mov (bad) stos xchg es rex.WRXB rex.R (bad) pushq std pop (bad) callq mov jbe int3 xchg mov (bad) (bad) jg or mov rcl push pop push sub rex.RX rex.RB negl rex.B cmpsb jbe insl mov ds je std rcr repnz (bad) mov mov add and push and xchg imul sub xchg (bad) sbb rex.WRX xor mov or pop cmp loop (bad) (bad) xor movabs shlb movslq lods xchg (bad) movabs jp (bad) test (bad) (bad) push add fnstcw out nop fisttpl jrcxz leaveq scas nop add scas (bad) jnp cwtl xor mov xor jp xchg cmc movslq sbb cld (bad) push pop (bad) xchg fs mov and pop add out js sar (bad) xor rex faddl mov add adc rcrl push mov xchg xchg (bad) outsl jmpq (bad) movl mov push jle movabs sbb add movabs icebp or add imul (bad) sub rex.X rex.WRXB mov mov (bad) int3 rex.RX and mov retq (bad) jmpq jns xor movabs je repnz push retq sar (bad) sub pop out (bad) rex.WXB sbb cmc or add mov pop mov (bad) (bad) xchg rex.XB xchg adc add mov push rex.RB cmp roll rex.X jge mov (bad) add outsl ja add or (bad) add xor pop mov fsubs retq notb xchg pop lods incl mov xchg movslq sti lods (bad) (bad) jp jle jp pushfq scas mov push add jmpq or or insl mov mov mov rclb and cmp lods out (bad) jae rex.B (bad) std add movabs pushfq movsl clc add (bad) and movsb push rex.RX add cld rcl js jne addr32 jp (bad) and (bad) ss xchg mov add andnps jo fiadd mov loopne and (bad) xchg mov fwait cmpsb add jno movabs rex.RX rex.WB mov (bad) rex (bad) add xor cmpsb in add add jo (bad) sbb rex.X mov mov cmp callq loope movabs out cld adcl rex.R movabs add mov sub rex.W jmpq jg mov mov cs cmpsl sub hlt decl fnstsw (bad) ljmp (bad) frstor jno and (bad) pop divl mov add push outsl rcrb mov add sub cmpsb rex.W rex.WB rex.X add (bad) icebp int cli rex.R cs add cmpsl leaveq cltd xchg xlat (bad) jmpq and jo (bad) add mov pop je push pop rex.WXB stos mov jmp es add rex.RXB out imul je jo in mov add stos repnz fs push add std adc add popfq mov cmc fs adc outsb xor out repz mov sbb fisubrl (bad) rex.WRX mov pmulhw repz (bad) add es cltd cmp jo fwait imulb push xchg repnz mov out adc jne xorb add jge add std nop fldl add (bad) ficompl (bad) or pushfq or fnstcw iret fwait cmovge cltd sti int3 jb repnz rex.WR jp in pushfq rex.WXB enterq retq std mov and jae pop mov rex.B and cmc push sub scas cmp and add add loop (bad) rex.WRXB je (bad) (bad) jb mov mov adc cltd rex.WRX add cmp add cmp test (bad) (bad) mov mov out (bad) rex.WX xor or jg repnz cmp rex.RX add pushfq xchg fidivr add lret (bad) cmp (bad) lock in jbe lods cmpsb jne (bad) test rex.WB rex.W pushq nop mov es xchg push xlat rex.X cmp (bad) sub jg (bad) incl ficomp (bad) xchg xchg rex.XB ja test sbb push cmpsb mov lods callq sbb stos cld imul jae sub lods mov pushfq movabs mov loop pushq jmp sub pop cwtl rex.WR rorl mov jbe lods sbb rorb sti outsl mov sbb push lods mov (bad) xchg outsb es fistp outsb xor pop mov xchg xchg or stos cwtl jrcxz stos imul cwtl jp lret rex.RB fimull imul sub lods sbb lods fnstcw (bad) mov jp adc std cld pop adc lea jno (bad) (bad) addl cli (bad) nop test addr32 mov xor rclb sub cmp sub and pop add mov insl hlt mov (bad) shll lods es mov ja xchg rex.WRX xchg sub xorl mov sub repnz cmp adc movabs retq sahf clc js (bad) and cmpsb or or imul push in mov add jbe ja xchg cli imul repnz fdivr pop jbe push (bad) mulb jg add xchg add (bad) pop jmp push mov add (bad) shrb cmp jbe rex.R add cmp pop movabs in (bad) jae test je adc (bad) stc js icebp cmpsl int cmp (bad) retq xchg imul rex.WRB retq decb rex.B jo and sub and rex.WX pushfq xchg rex.WR or ja rex.W sti (bad) (bad) (bad) mov cmp ror (bad) ror push mov hlt mov jb pop xchg push mov sahf jle add rex.WX pop (bad) outsb lods mov in (bad) cltd lret adc rolb in insl (bad) (bad) sub push or pop hlt mov mov lret mov pop rex.R pop pop (bad) jbe in iret cmpsl add add mov or mov movsl fs nop insl mov fiadd or adc add rex.WR sar add and pop rex jo data16 inc jbe (bad) rclb or mov mov rex.R and mov fisttpl retq pcmpeqd (bad) (bad) mov add stc sbb je (bad) jg or lods movd (bad) add rcrb mov rex.WR rex.WRB (bad) fnsetpm(287 je leaveq popfq cmp lret sbb roll hlt sub (bad) int3 jae out add (bad) loope rex.RX nop cmp sub test out (bad) ficomp icebp mov xor mov lret mov add (bad) mov xchg movsl jb lock movsb jo add enterq lods in rcrl adc add movabs movabs incl (bad) out add mov sbb jae sbb mov fiadd adc rcrl add movabs (bad) (bad) mov add test pop push enterq rex.RXB jg push sub imul rex.WR mov fisub movslq pop sbb rex.XB (bad) insb roll sti (bad) or jb loopne sub mov add int3 mov xor mov jmp rex rex.X in sub add mov (bad) sbb jle rex.XB and and callq test add in lret repz pushq add xchg mov cmp push sbb rolb loopne cs sub pop rex.RB xchg sbb test pop cmc add stc rex.B jl jrcxz mov xor in in (bad) sbbl (bad) lock add stos add adc sahf or and add xor movslq scas rex.W rex.R repnz add rex.RB repz rex.R add (bad) orl (bad) stc (bad) adc mov xchg or movslq (bad) jg (bad) add fdivl (bad) pop test xchg js sub outsl and xchg jb outsb loope sti fs and and add lods push insl adc xchg (bad) hlt lods std or (bad) hlt sbb or std jge fs (bad) in cld sub add jne (bad) in fwait cs int xchg add movabs cmp imul mov push push (bad) fldenv (bad) adc pushq test (bad) push rex.RX add cmpsb nop ss frstor push test mov add rex.RB ds adc fnstenv fnstsw nop or cmpsb mov jnp fildll push (bad) mov cmp (bad) out jne rorl xchg jb repnz mov push mov mov outsb (bad) test retq cmpsl int push fildll jns rex.WR notb jo fldenv and jmp (bad) nop pushq out mov sbb rex.RB adc mov (bad) xorb or in cltd push (bad) mov sub sub mov xchg jrcxz rex.W test movabs mov imull mov (bad) outsl (bad) (bad) jmp pop (bad) mov jle iret (bad) leaveq pop push rex.RX push (bad) rex.WXB jbe xchg jl pop incb cmp sbb outsb mov (bad) xchg rclb std cmpsl jmp (bad) and sbb movabs lret movslq jmpq rex.RB jns push in test decb adc cli (bad) fildl or sbb (bad) xchg jle cmp rex.WB lods adc jrcxz std rex.RX cld out jno jrcxz movsb rex.R cwtl rex.WRXB data16 jbe (bad) xchg mov (bad) xchg imul xchg fbld add test mov pop lock cmc (bad) jge notl or push add (bad) and jp (bad) lods cmp rex.B and outsl mov and push test sub (bad) (bad) sub fild sub nop mov test pushq mov imul shrb fwait out decl sti xchg (bad) add cmp mov fcmovb or pushq xchg pop cmp jo fs rex.RXB (bad) cmc cs lods sbb push outsl enterq push test mov cld stos xchg cmpsl push js sbb insb mov notb pop leaveq orl mov sarl add (bad) pop jrcxz ficom loopne xchg add (bad) int cmpsb pop pop test mov outsl clc in mov (bad) sub rex.WRB (bad) (bad) repnz lfs lret rex.WB rex.W sub add in mov (bad) rex.WXB sti and xchg test (bad) pop ds mov pushq stos xchg pushfq mov (bad) movabs imul movslq rex.XB insl add outsb mov mov adc (bad) (bad) pushq jne xchg (bad) cmp jnp fisttp pop mov fwait cmp pop sbb (bad) ds jg test retq lea jbe (bad) (bad) pop rex.WB sti in lods and jmp (bad) (bad) cmp jno popfq push lahf test xchg lods xchg loop xchg mov push or jbe in fisub (bad) movsb jns rex.XB push ja jne xchg movsb push outsb insl (bad) pushfq outsb test push pop fldl or or fisttpl cmp pushq (bad) movslq cli sub jge lret scas (bad) mov (bad) (bad) js jp (bad) andl rex.RX mov jle and gs rclb out add xor cmpb mov rex.WR (bad) (bad) (bad) mov (bad) and lea js or (bad) (bad) fbstp fimull (bad) rex sahf movabs es fs or (bad) xchg stos pop push (bad) xchg imull (bad) mov (bad) (bad) out scas xor xor mov xchg rex.W fistp pop and xor jns retq add fcmovb (bad) jle pushfq (bad) rcll and jno rcrb faddl jae add sbb pop movsb (bad) scas sahf jbe xchg xlat xor out xor scas jbe int3 (bad) sub (bad) mov test jb int jg sbb mov jns pushq rex.WRB cmp int3 (bad) rex.RX imul mov icebp imul nop xchg lods stc sub sub or jge mov pushq retq outsb bnd adc fsubl enterq mov or (bad) (bad) rex.RB popfq (bad) mov (bad) sub scas fiaddl sbb rex.W fiadd mov cmp (bad) outsl mov rex sbb xchg pop data16 in mov (bad) in retw loopne add xor mov or in sbb xor add lods outsl mov (bad) or jmp lret insl (bad) add mov movabs mov scas add xchg xchg rex.WRX pushq nop lods or sahf xor adc subl cmp sub sbb rcl pop jp out scas rex.WRXB xchg iret sub enterq push and fidivl sub cmp mov add rex.WRB movabs rex.RXB rex.RX stc sub xlat shr repz rex.WRXB rex.RB nop mov or push cmpsb rex.W and lret or stos and (bad) rex.WX testl cmc rex.R rex (bad) shr retq xchg add (bad) (bad) loopne and ficom (bad) bnd add rex.X sub fldl jbe jne add pop xlat adc jge movsb adc push add repnz rex.WRB add push sub jle (bad) pop cmc popfq rex.RB (bad) mov add addr32 pop (bad) (bad) or mov add cld jp in pushq (bad) jl ror jmpq or stc movsb sub (bad) mov repz es xchg add rex.WRXB sub xor movslq (bad) dec test jbe xor insb add cmp (bad) rex.WRB lock inc mov rorb pushq es xor xor int3 mov outsb and push mov sub or rex.WRX (bad) sbb rcll pop (bad) push or (bad) add out retq (bad) scas add fidivl (bad) mov jb gs fstpl adc out xchg lea adc mov test (bad) add sbb (bad) adc sbb (bad) mov (bad) (bad) add and mov pushq lea sbbb adc cmp (bad) scas rex.WRXB push (bad) xor lods xchg fsubrs mov mov push scas jge test sbb pushq lods (bad) adc in pop rex rex.WRXB (bad) jmpq (bad) (bad) jge enterq hlt (bad) jns adc (bad) mov cmc movsl xchg jg js (bad) (bad) rex.B (bad) or and imul rex.WRXB in out mov loop insl movabs cmp jne sub pop pop pushq cmp (bad) ja imul int pop (bad) cwtl mov movd rex.RB and (bad) mov (bad) pop (bad) push movabs fcomi insb rex.W jle pushq (bad) rex.RXB rex.R movsb cmpsb add (bad) mov mov and in add insl jle divl cmpsb or add rex.XB loop test cmp in lret xchg pop test add jle (bad) jne mov retq jb stos lods sub adc fimul (bad) mov lret xorl (bad) test add test or xor outsb push and test in xor cwtl (bad) (bad) rex.RX fistp jle mov add and jl add es test movsb in out (bad) add outsb mov iret xchg movabs add xchg sub (bad) movabs mov jae outsl retq add (bad) rex.RXB repnz add cmpsb add push mov pushq out add iret (bad) xor xor addl push jns xchg test std pop jge mov (bad) in rex.WX add (bad) cli mov jmp adc and cld cs jl (bad) (bad) sbb int3 xor subl xchg add addr32 loope (bad) loop sbb fidivr lahf add in icebp imul insl fbstp rcrl rex.RX jne movabs add rex.WXB test sti movabs jg jrcxz mov add (bad) retq outsb pop add sbb cmp xchg imul (bad) xor (bad) jl ss (bad) repz push stc mov sub add rex.WRXB and and cs outsb jbe movabs ss mov pop cmp outsb (bad) add xor out loop sbb rex.WRXB repnz insb lret lods es repnz (bad) es mov (bad) je (bad) or (bad) mov rex.WR rex pop cld mov (bad) push outsb int in mov (bad) ss rex.W or (bad) scas data16 (bad) xchg test push (bad) (bad) ss stos jnp or jge fist or mov cltd xchg (bad) out pop (bad) sub xchg out xchg pushq loope mov and pop ror pop (bad) push sbb mov push fstpl movabs stc in mov mov repnz jo retq rex.W stos jl rolb lret sub hlt fldcw push cmp or cmp pushq pushq jg cmp xchg xchg push jmpq cltd mov xchg (bad) pop push (bad) push neg xor iret cmp xchg test (bad) scas cli sbb retq mov jle mov test xchg (bad) stos jb (bad) cli xor in mov cltd rcrb add push jne mov scas mov sub push add rex.RXB jae iret xor mov mov out add mov pop push stc xor stos rex jbe and enterq xchg xchg (bad) xchg loop lock loopne jl fs add add insb (bad) repz roll adc (bad) xchg and in (bad) (bad) sahf (bad) cmc lock in mov (bad) and (bad) xchg xchg rex.XB rex.WRX fnstsw cwtl cmp rcpps mov xchg jg rex.B jp fwait rex.WRX psllq js pushq cld or lahf (bad) pop adc adc add nop mov loop mov rclb (bad) out add and jb or mov rex.RXB rcrb hlt (bad) cmp (bad) jp mov mov jge movslq sti cmpsb cs decb (bad) sahf mov rex.WXB fidivr add sbb mov cltd xchg sbb add (bad) add pop movsl loope adc and (bad) (bad) rex.WRB rex.WRX rex.W (bad) jae out xor movabs lods out rex.WRB jb lret imul mov jle cld fwait test and lock xchg fs add nop cmc mov or fimul push xchg jp (bad) jrcxz adc (bad) jmp add mov sbb xchg push pushq test xchg add and mov mov mov faddl je (bad) pop mov (bad) out add xchg popfq lret scas subl in add (bad) (bad) hlt (bad) cmp (bad) clc lahf xchg stc rex.RXB adc fwait lret in jl es (bad) mov add (bad) rex.XB stos enterq in imul (bad) (bad) push jo loop xchg add add roll clc out movabs (bad) subl imul inc mov jle loop mov lock cmp lea insl and andl adc rex.WR sub cmp mov sbbl jne scas rex.WRXB orl jb cmp (bad) mov push (bad) stc add cmp pushq jle jbe jo and (bad) rex.WRB xor (bad) pop xor mov cld pushq xchg ds clc (bad) stos loopne stos rex.XB rex.WX mov adc adc rex.XB icebp fsubl in out movabs adc adc pop cwtl xchg cmc add adc (bad) fildl stc outsb gs (bad) mov imul sbb mov rex.WB test (bad) jg ficompl ss jmp and stc shlb mov mov movsb cmp movabs and lret xor in cld iret sbb xchg rex.WRXB jb (bad) stc jp fdivrs mov add (bad) mov adc out sbb and out test jmp add add add sti add out mov rex.WR lahf outsl insb pushq repz adc movslq sub sub cmp jnp (bad) or add mov mov test in mov mov popfq rex.WX and adc lret stos (bad) jb (bad) (bad) in fidiv jb add jge push (bad) fisubrl (bad) (bad) test push (bad) rex.WRB mov mov mov xchg fdivrs je add rex.WX ja,pn (bad) jnp test cmpsl repnz es in shr popq push rex.WX or mov add (bad) jbe mov xor mov pop (bad) rex.W rex rex.X sbb outsb callq jmpq loopne xchg popq in push add (bad) fwait mov loop stos test mov hlt test xchg (bad) push (bad) out sub jnp div mov roll add or mov insb mov clc xchg pop rex.RXB cmc rex.WRXB (bad) mov test (bad) (bad) sub (bad) lret xchg lods rex.WRB leaveq icebp (bad) pop adc (bad) add push callq pop add fstl jmpq xchg fild jg (bad) adc xchg (bad) loopne jae (bad) rorb mov setne ss mov enterq callq add stos lcall testb stc (bad) pushfq jnp test imul xchg ja jbe mov imul xorb test lret sub (bad) push in nop hlt insb rex.W test or xchg (bad) and mov hlt (bad) sbbb rex.WXB mov gs (bad) jnp loopne mov pop sbb (bad) shll cli mov cmp (bad) outsb pushfq divl rex.R movabs ss data16 sti (bad) insl iret (bad) mov pop pop add movslq std addr32 lock insl (bad) cwtl mov fldcw rcr add jg in cld test jno push cmp repnz stos (bad) jg jne nop rex.W fs cs mov (bad) mov mov data16 or stos andl out mov fidivr rex.WX test (bad) stos push adc outsb rex.RXB (bad) repz xor jnp xchg mov sbb (bad) jns push adc popfq sbb mov xor icebp ljmp cs jns sti push imul je fisubl xlat repnz mov mov rex.WB addr32 and test fsubl outsb rcr fsubl (bad) cli jl mov ss push (bad) outsl or mov pushq jp lea xor sahf sbb fnstsw (bad) push popfq fadds (bad) psrld add cmp xchg (bad) push rex.WB sub jbe mov jl or test (bad) and jo std js jp lahf (bad) mov fcmove (bad) pop callq adc out add (bad) sub rex.RX or imul push mov jo (bad) (bad) and sub pop add add jne rex.WR rex.W add (bad) push iret jno jl add jl cwtl cltd jne mov cmp nop xchg and rex.WR retq sti xor (bad) movsb jl clc scas (bad) jbe incl (bad) xchg cmp (bad) adc insb jg (bad) retq mov (bad) cmp pushq sahf (bad) adc mov hlt sahf outsb pop rex.RX in add (bad) lret rex.RB and sbb push in pop in (bad) pop adc jp sbb mov movsb popq pop (bad) cmp test sbb movabs pop sti (bad) fstpt (bad) out loopne fsubrl jle,pn jle stc incl sub (bad) iret retq (bad) fwait jmpq mov mov xor xor push fadds rex.WRB rex xchg xor jo jne xor cwtl rex.RXB mov jb pop test lret loopne stos (bad) push imul stos mov jbe mov pushq fidiv (bad) mov rex (bad) callq pushq push sub mov (bad) movsb (bad) lret mov jae add test fs mov rex.WRX rcr push outsb out (bad) cmp add (bad) jp xchg roll int3 test adc mulb rorl or and divl imul clc push xchg (bad) jge sbb (bad) add std mov not rclb pop add (bad) mov (bad) ja lods (bad) add (bad) pop adc and (bad) mov and retq (bad) addr32 fdivrl (bad) xchg callq add fldcw mov (bad) out rex.R outsb (bad) nop and (bad) mov add decb sbb (bad) mov test sbb jo stc icebp mov movsb imul popfq xchg jne mov rcll jp lret xchg insl pop ljmp adc mov ja sbb mov divl jge or lods int fs lods ja push movsb mov jrcxz (bad) movabs nop (bad) push cmpsb in clc fsubrl fcomps mov out sub mov cmp mov cmp sub xor mov mov (bad) retq and jne rex.WRXB jl mov retq and add stos pop sub ficomp movsl test insl lret pop mov (bad) add or (bad) or adc sbb add pop xchg xor add scas cwtl (bad) rex.W lock cltd push push test imul pushfq imul and sbb add lods pushfq std jb rex.RB rex.R gs movabs rex.WX add (bad) int3 lea or rex.WRX insl std adc rex.WRB jne jb mov (bad) mov push jns rex.RX rex.RXB xchg push (bad) or test add imul int rcrl push jg sbb jrcxz mov outsb loopne mov add push addl sub (bad) add ja push rex.RB stos mov add repz sub push rex.WRXB add sahf mov incb adc outsb gs hlt sbb mov and mov (bad) add xorl (bad) jp mov (bad) pop mov pop (bad) bndstx test sub cmp add cmp or jp (bad) or jg jp or cmp sbb std (bad) add mov outsb add rex.R xlat cmp mov or (bad) pop jmp sbb (bad) mov cmp sub leaveq (bad) jno (bad) (bad) jge mov add xchg cltd (bad) or fs (bad) pop rex.WRB add mov (bad) (bad) or gs fcomps divl adc cwtl outsl xchg jle mov add jg (bad) jp xor (bad) jl add cld mov fiaddl in xchg (bad) sbb leaveq vpshufb lret (bad) addr32 mov push outsb (bad) imul (bad) (bad) out nop pop ja mov cwtl jle xchg or rex.WRB test movabs retq loop (bad) adc std mov out push pushq notl (bad) add jp jo test fiadd cmc or (bad) xorb push hlt jp cmp jp or sub (bad) jb mov and out test jmpq sbb (bad) loop sti sahf cmp add (bad) lcall (bad) andl add (bad) adc addr32 pop mov (bad) jb outsb cmp rcrb mov add add (bad) outsb mov leaveq jne sahf scas in (bad) cwtl scas (bad) pop add nop adc add movabs loopne rex.WX cs (bad) cmpsb rcr add push and rex.RB adc scas stos add jbe sar jle (bad) sbb (bad) lea add movsl scas pop rex repz jle lock rex.WB (bad) out xor and pushfq std out addl cmp (bad) adc add sbb add mov leaveq mov js and xchg mov leaveq outsl add movslq mov pop (bad) (bad) mov (bad) sub stos addl rolb cld imul sarl (bad) (bad) stos add rex xchg fisubl mov hlt xor movabs xchg lock add shr movabs movsb cmp (bad) add (bad) ds callq pop lret mov (bad) sub mov jrcxz xchg pop out (bad) mov cmp pop clc and xchg ficoml jmp mov lods sub push add mov test adc jg lret mov movsb xlat fcmovu mov sub (bad) push fcmovnu cmc pop movabs xadd mull scas fstpt pushq (bad) xchg testb (bad) pushq push push jbe fs cmp mov or cltd jl jg rex.XB (bad) fildll or out stos jmpq hlt cmpsb (bad) jnp mov (bad) rex.WB sub (bad) mov mov scas loopne divb add mov jmpq int sub imul in add cmp xchg jo jae pushq cmp (bad) mov shrl mov mov xor mov mov sbb mov js (bad) (bad) (bad) shrl (bad) iret push in sar jp xchg in js data16 jl jrcxz cmc mov movabs (bad) xchg rex.RB adc repz jno out fnstcw or cmp pop or (bad) jne shrl (bad) add (bad) cmp ja loope xchg pop (bad) lret rex.WX rex out or popfq sub fadds mov test mov outsb push mov mov cmp sbb adc pushfq cmp push (bad) out scas xchg nop rcrb cmp pop add jbe mov cmp imul add adc add leaveq iret or lea js cltd movabs lret xchg push (bad) add mov jb sbb leaveq pop pinsrw (bad) (bad) jg movabs sub xlat jb add test or sbb sub in (bad) je jp rex.WXB lock xchg jrcxz (bad) jl fsubl test xchg (bad) (bad) sub jb repz outsl cmpsb repnz jb mov fsubrs jns xchg cli add rex.RXB add push out (bad) (bad) push xchg add data16 sbb outsb rex.XB sub outsb test (bad) movsl jg jg in in and (bad) pop rex.WX mov rex.RX mov rex.WRX or cmp (bad) (bad) mov (bad) lods out jo add (bad) mov add jnp xor movl movsl cmp insb popfq or rex.RX shll rex.WRXB add pop pop data16 sbb xlat ss xor (bad) add mov rex.W xchg ss mov (bad) sarb xchg leaveq sahf cli xchg rex.RB nop (bad) (bad) pop add (bad) outsl cmp (bad) mov add shll jp stc out stos sub pminub mov retq rex.R pop mov xchg sbb (bad) add ror repnz sub xor jae sti pop mov mov add (bad) add je push lods lret pushq cld pop (bad) (bad) or add mov xor gs loop enterq or std rex.RX (bad) and xchg add (bad) lret cmc rex.WRB add sub insb (bad) testb es push out rorb cli dec lcall ficoml iret mov je pushq lods sub push (bad) add ds mov int and xchg mov add (bad) (bad) add rex.XB jle gs jo jmpq mov add ja mov rex.R rex.XB cs (bad) sbb jg pop jrcxz add mov (bad) sub adc mov mov rex.RB add push and mov adc jns sbb jp fdivrs rex.WRXB (bad) sub pushfq mov push je xor mov or incl mov (bad) stos jne mov nop xor cs or fs add cwtl and (bad) rex.W sahf pop testl (bad) (bad) sub (bad) mov add or xor mov rex.WX rol jmp add pushfq add (bad) test ja rex.WRB (bad) (bad) jrcxz mov (bad) rorb pop loop rex.WX rex.X fwait jg adc or mov cmp or retq test xor mull add and in pushfq pop hlt jp stc sub sbb rcl jg cmp loop rep adc (bad) and and jp jmp iret mov test and rex.RXB cs movslq jmpq mov cmp negb xor add (bad) (bad) mov adcb andl or pop mov lahf mov pushfq (bad) mov xchg pop stos test enterq and cmp cld add cmp add rex.WRXB (bad) notl push fistpll lret (bad) pop jle decb roll or rex.WXB popfq lahf (bad) leaveq mov fist fwait (bad) add rex.WR cmp jbe fildll fnstsw loop movabs retq rex lea jge test mov movb jno fwait add (bad) cli mov loopne or (bad) mov cmp std (bad) add ds scas add out rex.WRB rex.WX in jae mov jns stos addr32 jrcxz jle xor sub test xor shlb push loope out cmp nop add je mov sbb and retq test movd add pop movabs add mov fstps mov sub jno jo or mov add repz (bad) andb sbb in add lahf rex.WXB jl adc (bad) add pop fdivrl mov xor (bad) loop adc insl (bad) data16 test in add mov int3 xchg xchg cltd popfq add fimull jl (bad) outsb icebp or (bad) and and push lods lods jle pushq jg mov xchg pop sbbl (bad) push or jg sbb rex.RX jg jle sub fistl add rex.XB adc xlat (bad) jg sbb cmp jmpq or neg fisttpl push push pop xlat outsl hlt mov jle js fsubrp jo and ja rcll xchg mov (bad) xchg (bad) jns loope fstl rex.WRXB add sbb enterq cltd nop rex.R cmc rex ja (bad) (bad) xor std cld rex.RX rex movabs xorb cld (bad) (bad) nop jge xchg or nop out rex.RX sbbl mov insl rex.WX hlt cmp jl jle movslq ja mov int3 (bad) adc cmp mov rcrb xor and sbbl loope lcall (bad) lock mov mov lock (bad) rex.RXB or repz xor push out or (bad) rex.RB mov clc adc mov mov addr32 (bad) movslq jg add adc mov push xchg adc xor jle iret insl mov ss (bad) (bad) rex.WRX movabs or jno pop lea imul sub cmp (bad) cmpsb and mov jle (bad) jl popfq lret jae callq cs rex in add xchg jrcxz addr32 fdivrs rex.RX jb test out or (bad) movslq (bad) mov jo popfq test ds xor jle retq mov fs add cmp stc mov retq nop cmovnp pop sbb test jne pop fistpl jmpq adc cmp fwait and xor insl leaveq lret add xchg movabs cli pop (bad) pop callq repnz push jge mov xchg and test (bad) sahf jrcxz push lods and jno (bad) lea rex.RXB es iret jp (bad) (bad) add (bad) movabs add int3 add rex gs bnd movb (bad) retq fsubl rex.XB mov xchg (bad) insb sti xchg xchg xchg (bad) rex.RX rex.WRX mov cmp and flds fwait xchg (bad) xchg clc xchg xor push ror (bad) fcompl cli add push xor jb sbb pop (bad) in add rex.X out mov test out addb rex.RB xchg adc outsl rex.WB rex.W test (bad) jrcxz add stos loop scas xchg ss lock jp shr adc add jge (bad) jnp cmc mov xor mov (bad) in (bad) (bad) int3 jb pop xchg add rex.WRX sbb add xchg jmp lock (bad) (bad) jno test int3 xchg sar add add sub (bad) sbb add cmpsl jg push xor mov add (bad) (bad) (bad) xchg mov xchg add out pushq add callq jb push insb data16 rex.X push pop add sub and fs cld int3 popfq adc out jmpq sarl data16 rex mov out sti xor jge add (bad) pop (bad) xchg add movslq rex.R movsl xchg mov sub in (bad) pushq push rex.R xor xor fiaddl (bad) sbb jne jmpq in mov push mov or mov xchg js (bad) (bad) and mov (bad) lret (bad) jae adc xchg pop pop imul add stos rcll rex.WRXB js jb rex.B jb adc hlt adc (bad) rex.W movl (bad) xorps rex.RX rex.WX jb mov jp rex.R adc add ficom (bad) mov fcoml jl add sub lret adc mov mov test cmpsb xor (bad) pop and (bad) retq push push sub mov cmp sub sub sbb fsubr mov fimull xchg push scas (bad) leaveq nop push xchg test sub pushfq (bad) (bad) (bad) xchg roll loopne hlt loope fildl pop callq and jno test sub or fstp (bad) push (bad) movabs jp lea movslq lahf mov jg sbb mov lock rex.RX jl jl xlat imul and sub cs push lods outsb cmpsl mov in addr32 jl cmp test xor pushfq (bad) outsl pushfq push imul xor insl scas xchg (bad) add (bad) rdmsr js addr32 xchg adc mov cmp xchg mov addr32 notl jrcxz mov (bad) nop movabs rex.RB pushq jg pop or push scas pop test push (bad) mov pushfq incb pushq (bad) pop mov gs pop clc adc repz and leaveq repnz outsb jge jno outsb imul in (bad) data16 push and cwtl (bad) rex.R pop retq sbb mov xchg (bad) es rex.W (bad) (bad) out mov (bad) repnz jg xchg lock cmp jbe jrcxz retq cld jp jnp rex.B sbb jne lea jns adc mov (bad) and adc (bad) mov hlt add (bad) push sub out xchg in mov divb push mov jle js lods (bad) add jne gs lock pop stos rex.WRXB push test rcl fist mov out pop lret rex.XB sbb test stc xchg (bad) xor rex.WXB mov retq scas pop pop add (bad) mov stos push (bad) mov add pop mov xorb add loop (bad) add adc add (bad) (bad) stos data16 rex.X mov (bad) cmpsb pop out rclb pushfq mov movslq fcompl fs rcll xor add jo cmpl pop mov ficoml repz sti add adc fninit sbb jb mov rep lahf jnp (bad) shll mov (bad) je add out rex.WX xchg gs lahf jne (bad) xchg cmpsb jb scas (bad) jno lahf mov test add jbe test xor (bad) push testb shl rex.XB add idivl add leaveq sub insl add xor add jl outsb (bad) mov (bad) fstpl xor jne bnd xor jle cmpsl cmp notl and std mov int ja movabs mov add and add jg pop je push adc loop retq add push in push ds rex xchg sub pop add cltd es mov or scas rex.X repz mov or add pop jl cmpsb loop rex.WXB add cld (bad) in add jg (bad) add push and (bad) rex.X xchg rex.WRX sub xchg sub loop pushq (bad) (bad) retq rex.WXB idivb stos sub add rex.WR callq xor nop (bad) rex.RX decb sub and and fcoml sub add (bad) (bad) (bad) retq rex.X jle xchg rclb rex.WRX jnp (bad) add lock jne test enterq jno scas (bad) mov mov xchg fistl mov mov movabs scas mov int3 mov roll or xchg (bad) or (bad) (bad) mulb movabs std lock fcmovnb cwtl sub retq pop cmc add cmp (bad) xlat je andl or mov roll test rex.WXB andl mov push test jle pop mull rcr (bad) imul movb add fldenv sbb imul rex.WRXB or subb int pop (bad) popfq mov jb gs mov movslq imul (bad) jg pushfq mov cmp mov rex.RX or (bad) mov push jg (bad) sahf add adc movsb cli xor (bad) add mov rex.WRB push mov sahf fs out imul mov imull leaveq mov iret imul mov sbbb cmp jnp movabs fwait ss pushq or sbb xchg (bad) orl adc pop (bad) (bad) add imul (bad) mov rex.RX (bad) icebp out movabs leaveq in fadds movabs sub sub (bad) insl nopl int3 mov stos cli and mov sbb add divl (bad) or sti es stos imul (bad) rorl and add sarb out idivl mov add (bad) fbld add mov movsl insb scas cmp (bad) (bad) rex.WX fwait adc negl xor mov cmp (bad) mov add popfq addl jmp jle or fldenv shl scas and add lods stos pop jmpq test jno mov add retq fnstenv add fs cmp movabs movsb rex.RX or pop add outsb rex.WRX pushq imul or lahf movsb add test cld lea movb jo (bad) push fiadd imul jno adc sti mov jp test cmp jle add rex.RB (bad) (bad) mov jge addr32 addb mov (bad) (bad) out jp jrcxz rex pop push (bad) add iret int3 pop xchg out xchg rex.WRXB add retq rex.WRB or add jmpq jle sahf jrcxz subl or (bad) lahf rex.X add mov stos imul rex.RX imul xor rorb mov add cli (bad) rex.WRXB and cmp rolb shr roll out jb pop xchg mov mov add (bad) addr32 cmpsb cmp (bad) movabs jnp rex.RB xchg test stos movabs mov es or push lret mov repnz mov cltd loope jle add stos nop (bad) (bad) andb js pop in lods cmpsl rex.WRB sub in stos movabs jle leaveq adc and and mov jp xor (bad) movabs xchg jge push or iret pop and add (bad) and scas imul rex.W addr32 rex.R fistl pop stos (bad) paddw (bad) lret rcrb add jnp mov pushq outsb pop rex.WXB sbb int3 (bad) rex.W pop pop (bad) cltd jnp mov jl mov (bad) jle xchg mov sarb test cltd hlt orl (bad) data16 repnz rex.WRB rex.R pop int3 and mov add movsb pushq or lock adc test or add push rex test jo and insl xor xchg outsb jnp or (bad) or (bad) negl int3 sti and (bad) xchg (bad) and fist mov (bad) cmpsl in (bad) cltd mov out fildl pop (bad) imul cmp popfq fisttpll xor lock xor (bad) cmp outsl int3 mov and imul rex out gs rex.X (bad) mov test jrcxz xchg xchg loop push mov (bad) or mov rex.XB std jp lods scas icebp add movabs lahf rex.WRXB mov imul add out rex.W (bad) pop fsubr jmpq xor xchg je pushq add int outsb add push shrl (bad) rex.RXB fwait jb and xchg pushq lahf leaveq add xchg stos sub repz jle push sub jle and sub pop rex.WXB rex.WRX jp rclb fsubrs jg xor (bad) lahf add cmp (bad) sbb js rex.RXB add es fldt jae sbb (bad) (bad) nop mov mov sbb (bad) cmpsl jle imul retq jp lods jae mov (bad) add (bad) rcrl pop pushq (bad) jle xchg xchg sub pop sub outsw test mov sahf callq jp sbb outsl out rclb mov stos pop in cmp out cli cmovns fsubrl jae (bad) incl rex.RXB xchg xchg or or cltd ja mov lret and loope rex rex.WR callq and movabs xchg jae xor rex.WRXB rex.RXB (bad) js mov outsl decl mov ds add orl add rex.WRX (bad) insl xchg cli jg xchg cmp int rex.XB mov sbbl je (bad) sbb data16 sub or xchg (bad) ja out mov test jae enterq mov (bad) cmp retq pop pop scas mov or jmpq (bad) xor add jo (bad) rex.R repnz mov cli add rex.WRX out and std lods xchg (bad) add pushq callq pushq xor xor sbb in rcrl movsb je cmp lret nop cltd (bad) mov push stc rol movabs add xchg icebp out (bad) add pop test roll rex.WRX xlat (bad) add (bad) mov retq stos push or add hlt (bad) mov nop (bad) push jle enterq (bad) sbb stos out (bad) lret fidivrl in xchg add and mov mov fwait int3 rex.W xchg xlat (bad) add (bad) iret jg (bad) scas (bad) (bad) and mov rex.WRXB xor retq rcll jrcxz (bad) rex.WB jnp jae movabs add xchg shrb mov rex.RX xor (bad) cmpsb (bad) sbb push rex.RXB movslq in (bad) insl pop rex.WRX rex.W pop adc fcomi sub cmpl adc rex.X mov xor xchg mov (bad) fcomps jge jmp xchg push jl (bad) mov insb (bad) mov stos mov fnop add fcmovnbe mov and scas jns and rex.WX jae (bad) (bad) rex.XB mov rex.WXB rex.RXB es nop cmp adc push nop add imul adc sub lock ja mov and mov sahf lret jns int je jrcxz movabs lods mov retq out pushq add cmpsl push rex.B callq fcmovbe jae lret outsl rex.WXB mov jb loope divb jbe std popfq cmc mov rex.X jbe (bad) (bad) sahf cmp (bad) fwait addr32 cmova mov push test pop orl and pushfq cmp sbb and xchg imul sbb jle or in imul add out test (bad) jbe (bad) jnp rex.WX push add lret mov (bad) shrb and clc paddd roll retq lock sub popfq mov or paddq and sub pop (bad) mov fucom sahf fnstenv pop mov movabs hlt in stc retq icebp jle in (bad) and cmp xchg cmp stc nop mov (bad) mov imul (bad) jmpq hlt jae sbb pop (bad) add xor mull ja ss test (bad) add cmp pushfq rorb (bad) int jge lret lods (bad) xchg ja test nop movabs hlt insl rex.WX sahf test test push adc xchg jg xchg and pushq (bad) xchg fnstenv in mov (bad) sbb or test sbb xor mov jne jg outsl sarl (bad) es (bad) rex.WRX pop lahf fiaddl sbb push shrb outsl (bad) push jl adc icebp and test (bad) iret (bad) movabs rex.WRXB mov add mov mov jle cli fistl pop jge sbb add mov sub (bad) rex.WRX fwait jmpq adc sbb add xor pop xlat push cvtps2pd cld push mov testb mov (bad) cli cltd adc rol mov fidivrl je cmpsl flds add cmp lods iret xor add xlat jrcxz add jae mov lahf rex.W mov movsl or js xor jp (bad) mov jge rex.WRXB add jmp rex.XB xchg sub mov out pop (bad) js lret shll sbb add xchg xchg jbe rex pop mov (bad) adc (bad) int3 or outsb xor rcrl pop xchg rex.WB mov pop (bad) not (bad) (bad) cmpsb movslq rex.XB loope mov xchg outsb add push lea pop jge test jl and mov js in movslq (bad) stos (bad) mov nop rex.WB cs lret cmp pop imulb fs movabs leaveq rex.RXB cmp cmp insl fstpt int3 scas xchg and adc push xor out pop mov rex.RXB push cmp js rex.X (bad) pop out mov nop imul adc imul shrl cmpsb xor (bad) or cmp int3 movsl enterq rex cmp incl sub mov adc jrcxz or (bad) sbb mov (bad) retq mov pop adcl je sub jge mov cmc movsl mov push jrcxz mov (bad) jbe xor pop jne add in pushq cmp xchg sub (bad) sbb mov out (bad) add xchg in (bad) mov add mov and add ja sbb imul rex.RX fwait movslq in and and iret mov rorl (bad) icebp in xchg add (bad) rex.WX rex.RX (bad) mov xor cmp out subl add (bad) mov add cmp test add (bad) lret mov jle mov push stc nop std (bad) sub cmp jo out mov jmpq (bad) xchg in mov jno cwtl decl mov (bad) movabs fsubrs mov (bad) lock js adc (bad) jl pop fnstcw xor retq (bad) cmc (bad) leaveq sbb sbb or push imul mov sarl cltd push and pushfq insl add sub test jp (bad) jno (bad) mov imul and (bad) cltd jge (bad) mov fwait mov sbb rex.WRB es jge adc cmpsl pop imul sbb ljmp (bad) stos callq add mov (bad) add fsubrl add pop add push (bad) (bad) (bad) (bad) mov sub lods jle jrcxz shr jb nop sub jle add xchg or sub rex.B test pop add sbb rex.WXB add (bad) xlat xchg (bad) rex.RX rex.WRB ljmp mov out in movabs imul retq rex.WB cmp mov push loop add pop insl cmp jle rex.WB adc shlb xor es imulb cwtl mov (bad) (bad) icebp ds jb jb (bad) xor jg add cmc add mov jp xchg mov cmpsl insb add xor cmp jg or (bad) mov and rex.W pop orb mov jle push shr jl (bad) pop fisub imul sub cmp ficompl mov callq cmp jae add pop add movabs (bad) js or jg (bad) push rex.WX jp xor (bad) adc mov rex.R xchg out repnz or mov repz and lahf and imul mov fstps (bad) (bad) add sub push imul adc push lock (bad) fimull fsubrl mov callq push (bad) rolb xor rex.XB (bad) (bad) movabs and stc add mov add movabs xor sbb add movabs mov mov push push sbb mov (bad) cmp sahf (bad) lahf imul popq rex.WB mov std scas rex.WRXB sbb (bad) (bad) add (bad) (bad) mov pushq (bad) stos push (bad) fisubl rex.RXB add (bad) mov (bad) clc rorl jb fs (bad) std (bad) cmp fildll mov (bad) clc jae adc push jp mov jle movsb push in or add or test out xor jp ds sbb cmp or stc movabs rex.RXB pop pop cmc (bad) and incl rex.WX push rorb and xchg mov movsl jno icebp jp xlat (bad) cwtl mov out imul gs pop sahf in mov faddl jb iret scas rex.XB (bad) nop cmp pushq jrcxz mov mov push mov jae sub out cmp in add je fildll or cmp (bad) jb mov (bad) cmp outsl movabs testl iret jne push fmuls pop stos loop xchg xor test sahf int3 jb imul (bad) xor jrcxz mov rex.B xor xchg lods mov add xor data16 (bad) (bad) jle xorb mov stos jne or lods rex.WRXB out jnp (bad) lret mov mov lods insl cmc (bad) (bad) out pop mov jle (bad) jp (bad) pop mov insl psllq (bad) pop mov out popfq cmc out (bad) rolb cmp (bad) stos push icebp outsl mov rex.WB rex.WX pushq and mov (bad) jg adc (bad) add pop xor add test jge js mov fs jb and imul rex.XB fsts (bad) mov mov (bad) test add cmp (bad) add mov rex.RB lea jb rex.WRX add test mov cmc mov adcl mov test icebp add loope add (bad) nop xor pop out sbb es je cmp (bad) mov add (bad) (bad) pop xor (bad) mov enterq (bad) int and push lea mov add jg or add xor test jbe rorb add outsl push leaveq pop add rex.WR es (bad) jnp rex.WXB pop mov mov rex.RX pushq and out in mov div add mov sbb mov adc stc (bad) push lods sbb test (bad) pop adc in (bad) (bad) jle or (bad) cmp (bad) and (bad) out (bad) (bad) (bad) (bad) mov add (bad) sub lods lea xchg (bad) cli mov pushfq sub mov ss jge movabs pushq ror jl nop xor ds rex.RB jle (bad) or mov and xor fldcw loop retq mov movabs cltd (bad) pop sahf sbb cmp jge movslq movabs mov jno sbb std in fsubrl lret mov imul pop and fstps add pop addr32 pop out mov mov (bad) push jp mov (bad) mov xor or retq retq lock push in push rex.B repz (bad) movslq (bad) in pop (bad) mov rex.WRB fstpt (bad) jmp (bad) (bad) in fcmove rex.B (bad) xor int or add (bad) test (bad) clc retq sbb mov scas lock xchg repz fs cld mov test xchg scas mov (bad) jle xor pop mov xchg (bad) stc sub sub mov add cmp (bad) leaveq (bad) xchg outsl sahf sub jo lods scas (bad) cld mov sarl icebp jg (bad) loope lods jge add xor xchg (bad) mov xlat in fsubs push fidivr pop out jle rex.R test js add or js hlt sbb lea push adc loop cld adcl rex.RX rex.WB and imul sbb cmp rol add (bad) mov adc (bad) mov jp addr32 mov rex.WRX repnz sbb add cmpsl popq jge or add icebp cmp xchg mov or add movslq xchg add (bad) xchg mov cmp (bad) (bad) jle addr32 xchg faddl (bad) mov rex.RX jno out movabs add rex.WRXB (bad) sbb adc xchg mov (bad) (bad) lock mov sbb add (bad) push movabs xlat mov adc rex.X fwait rex.WB cwtl pushq loop push cmpl or xchg push add sbb test rex.RB sub add jg (bad) push jrcxz xchg mov rex.XB rex.WX add repnz (bad) rex add adc (bad) repz cltd int3 or rex.RX and add add fildll lods in add cmpsb jb add mov out fwait mov notb pushq in (bad) enterq (bad) xor xchg shll rex.WXB fisub jp lret cmc xor neg rex.XB pushq pop jbe ds es adc (bad) mov (bad) and rex.WX rex.WRB xor fldl add fidivrl in fsubl rep jg and mov xor cwtl (bad) out (bad) and movsl (bad) mov rex.WB adc (bad) test es rex.R fldt xor repz lret mov add sahf pop cmp xrelease callq pushfq ss jb,pn (bad) sti cltd rex.XB add sub mov pushfq xor outsl add lods mov (bad) lods xchg jl cmp stos or xor add (bad) jae sbb push or and (bad) mov adc leaveq movabs callq sti fiaddl lahf mov int3 jrcxz mov pop pop mov (bad) xor mov add (bad) iret mov (bad) (bad) jge mov cmpsw rex.W rex.WRXB mov xor movsb fwait pushq shr outsl cmp rcrb cwtl int3 push mov lock movslq jp (bad) gs popq (bad) in cmovae pushfq sub rex.B pop mov pop add jne adc (bad) jo add lea jl or scas jns rex.WRX or ficomp lea addr32 sbb popfq (bad) adc pop rex outsl clc xchg add mov (bad) lods fdivl and jne mov (bad) (bad) pop cmc mov fs adcl test outsb jmp sbb add (bad) jrcxz xchg loop add mov fisub insl or (bad) pop xchg mov (bad) adc add shll push jnp xchg js fldl jo ds jg jmp jns imul jno jo movabs add mov pop lods xor (bad) pop cli (bad) hlt sahf addr32 xchg sahf stc addr32 rex fadds xchg mov and mov jg lods insl fmul xchg or or pop js imul movabs scas movsb jle pop cwtl sub fucom (bad) (bad) insl pushq fs mov ficom in stc push xchg mov test push rex.RB mov (bad) mov rex.WRXB fs jns test rex mov push (bad) mov cmpb pop rorb rex.XB add (bad) (bad) addr32 adc mov lea and (bad) sbb add pushq imul loopne data16 jl add pop xor rex.RB out add xlat je (bad) jle es jo jle pop adc mov pop add or add (bad) jbe jb mov rex.XB mov add andl mov sbb pop movslq cmp std icebp xor lret mov and adc loope movslq cltd and sbb lock xchg lods or xor jg (bad) fisub sbb lret jg (bad) adc sub add pop pop lea (bad) (bad) (bad) sbb adc jb (bad) mov mov mov insl rex.WRB roll jno cmp or fidivrl pop (bad) cltd rex imul mov lea movsb repnz (bad) sbb decl and (bad) out jno (bad) (bad) rex.WR fwait (bad) add sbb callq icebp and cld (bad) ja decb sbb xchg jl xor in add movabs push mov or adc (bad) cmc sahf xchg test (bad) mov sub leaveq fadds xor jp movabs xlat (bad) (bad) rex.WB mov adc movsb xlat addl cmp push mov mov push jbe clc mov shl out rex.WRXB mov callq add jae xor add sti and fs (bad) sbb callq push rex.WRB cmpsb jl fbld (bad) and mov in mov xor sbb out rex.WRXB lods xor cmp push adc icebp mov jrcxz xor ljmp insl in mov (bad) lods sbb movabs movabs ja mov test loopne and or sbb xchg test fbstp rex.R lock xchg push adc and pushfq add mov or jg out repnz (bad) lods outsl add mov mov (bad) stos fldcw push repz fwait add orb xchg hlt (bad) jo rex.W mov and mov lods (bad) jnp rex.WX cmovns (bad) cmp rcr sub jge subl pop sbb lods in test sub mov (bad) fcomip (bad) rex.B lret rex.XB cltd (bad) jbe add leaveq stc lret shrb in pop rex.R cli xor out push jns mov (bad) mov jae mov js sbb je movsb jg and rex.RXB cmc insb or rex.XB sbb rex.WX sub sbb icebp cmpsl xchg (bad) ffree sbb fsts incl (bad) mov sbb (bad) xor adc (bad) mov (bad) or pushfq push fdiv sub or std rex.WRXB pushq (bad) or mov (bad) fisubr jle (bad) int3 push rex.RB rex cmc mov cld stos mov mov lods cmpsl movabs rex.WRX cmp xlat frstor fstps mov movl sub mov jge repz loope test sub pushq iret fsubrl mov xchg lahf jge (bad) sbb leaveq sub out mov test and fcmovbe cwtl mov loope jge jl fldl cmp mov xor (bad) loope lods adc or (bad) rex.RXB scas fcmovne (bad) es xor adc cltd and add rex.WXB xor cwtl and pop js lea jns mov xor test and pop icebp js (bad) retq (bad) imul mov hlt (bad) mov xchg lret in push leaveq cmp add fsubl xor (bad) js xchg (bad) jbe loop out rex.RB (bad) notb lea in jmpq test and mov rex.RX add test rex.XB fildl jp add push rex.B add fistp sub cmp add ja rex.WRX (bad) testb enterq movabs adc push jle (bad) imul outsl mov fmuls lock add lea xor rex.WRB (bad) js in (bad) (bad) pop (bad) fs jle mov sahf pushfq (bad) out (bad) jo add cmp xchg iret push retq int3 jmpq jle or add ss nop mov jle fsubs movsl push jg push jmp movabs push out jp cwtl rorb int3 outsb add mov stos setno (bad) mov loopne mov add xchg scas mov jp rex.WRB mov loopne ror (bad) jo rex.RB rex.RX movsb frstor mov or xchg sub jns add adc ja iret mov std (bad) and inc and mov shrb mov sar lea lock jns (bad) nop rex.RX imul scas (bad) (bad) cltd repz xlat add and (bad) ss add lahf pop (bad) (bad) test movabs andl enterq shr out rex.RXB mov rex mov js,pn (bad) movabs xchg mov (bad) add adc push (bad) or sub (bad) add roll add lahf jl (bad) add pop ss mov xor (bad) jle jge and (bad) mov imul in xchg mulb push (bad) mov jle (bad) cmp (bad) fdivrs (bad) repz cmp in movabs (bad) jno in leaveq xchg (bad) enterq mov rcr seto push repnz mov push outsb add cmp leaveq adc loopne cmp gs addr32 (bad) out (bad) (bad) (bad) test jge push (bad) xchg pop out movabs push test xchg (bad) pushq mov xchg cmp mov push shll pushq jne mov mov mov faddl int3 fcoms (bad) pop xchg imul (bad) outsl mov add (bad) jns lret stc (bad) add incb sub pushq rex.WRXB movabs cmp pushfq xchg mov sti sub faddp pop xor rex.WRXB push orl test and sbb loopne or adc movsb mov stos (bad) sbb rex.WR rex.WRB movabs lahf xchg pop imul sbb sbb fcmovnbe add movslq repz add mov cmp push roll add mov mov jmpq rex addb rorb fsts (bad) repz fwait jnp movslq sub xchg jge xchg xor xchg movb (bad) cmp push cli (bad) jbe add sbb mov test (bad) (bad) std clc rex.W movabs shr sub xchg (bad) addl in fwait jle rex.XB insl xor fwait (bad) outsb fldenv mov add (bad) sbb add (bad) (bad) adc scas addr32 or jnp jne (bad) bsr rex.X (bad) enterq subb pop mov fwait push movabs (bad) mov mov fnstcw add scas (bad) adc and add (bad) xor loop rex.WRXB mov xchg (bad) jnp fisub (bad) xchg cmp cmpl mov test cmpsl outsl cmp jnp test movb push pushq faddl fwait (bad) pop pushq lahf sbb sar cmc cmpsl stc ja rex.RXB lahf movabs (bad) rex.RXB movabs jl (bad) cmp lahf cmc (bad) adc jge stos out mov rex.WRX push push sarl sub add (bad) push add (bad) sbb sti (bad) cli (bad) ss push je (bad) data16 (bad) lods out mov jle outsl jge subb (bad) out xchg enterq mov pop adc cwtl (bad) rex.WR data16 (bad) (bad) mov rex.WXB add push jl cwtl or popfq mov xchg cmp add in rex.RX jg sub imul xchg lods push mov (bad) mov fisub addr32 push add stc imul xor (bad) (bad) xchg rolb (bad) rorb add rex.RB mov jg (bad) loopne add (bad) iret add loope fwait mov mov adc (bad) outsb lods xor xorl (bad) insb rex.X cmp (bad) leaveq xchg sub lock (bad) cmp (bad) rex pop (bad) mov or xchg (bad) hlt shl std add cli out lahf add adc scas or (bad) cmp in jg fs add insb jbe add sub stos add fisubr movabs mov cmp xor pushq (bad) or mov imulb ja cmc in adcb (bad) and ljmp enterq insl fs push mov (bad) xor jg and std add push xchg in sub rex.W int fwait add xor xchg addr32 rex.WXB (bad) jmp add mov mov rcrb jg sub stos mov add (bad) sub cld movsb (bad) and mov xor (bad) sub fwait push pop push add xchg gs (bad) lahf xlat sbb or pushq es mov (bad) pop sub pushfq pop lea (bad) xor rex.WX movabs and push and mov enterq movsb rex.WB add jne sub xlat repz in scas or add xor mov rex.B rex.RXB (bad) loope fistpl (bad) popfq (bad) pushq xor pop pop add (bad) push pop xchg xor xor (bad) pop (bad) decb rolb jnp retq pushfq rex.WR add stos in rex scas movabs xchg (bad) loopne jle sahf loop push movabs addr32 jns xlat add imul add (bad) movabs add (bad) add cmp movslq pop test cld rex.R test lret (bad) ja or lods add xchg pop addr32 cwtl adc jle add jg and mov retq (bad) imul pop in jnp rex.WB rcr rex.RX lea mov fiadd enterq or mov mov mov (bad) lock xchg rex.XB jg xacquire icebp lea mov push stc sub pushfq sub push or std mov add jne jp mov (bad) pop sub retq movslq rex.R or adc xchg imul loop pop push xchg rex.B (bad) ja add (bad) mov orl push xor (bad) (bad) lock mov (bad) add rex.WX jbe cmp (bad) add jae outsl mov cmpsl sahf mov test or xchg mull add add je cs iret or jle lods mov (bad) rex.WRX rex.RXB adc in fs (bad) test lret jb add leaveq jae mov rex.WRB rcr or adc jg cwtl xor (bad) and rex.W or lret add (bad) addr32 (bad) or lahf fsubrs lods push pop or icebp xchg add retq jb (bad) adc mov pop lods fcmovbe mov insl and pop adc insl add (bad) sbb jmp xor rex.R out add cmp fnstenv in or jle cmp jbe shll sub in retq jp rex.RX add jb (bad) hlt xchg sub mov rex rex.WRXB iret movsl insl cli fld mov (bad) mov jb lret scas xchg (bad) movabs jg std xchg (bad) stos sub add rex.B addr32 jno add movabs lods xchg xchg out (bad) mov rex.B mov lock testb mov mov jle adc scas imul (bad) scas rex.WRXB lret push imul mov out sbb test rex.WRXB mov je (bad) ficoml hlt (bad) fs (bad) pushq mov xor leaveq (bad) (bad) rex.RB sub push callq jnp popfq mov (bad) cmpsl jbe mov xchg (bad) jp movsl cmpsb cmp cmp rorl xor repz ss pushq in movabs in pop (bad) add xlat sahf push je cltd movabs cmp mov mov loopne (bad) cld or xlat andl xchg add movsl (bad) mov in mov insl mov jbe add sub sub add scas sarb (bad) cmpsb jns (bad) rex.W or rex.RX push es add shl callq jge insl rex.R insb notl cli (bad) fwait cmp fyl2xp1 (bad) cmpsb (bad) movsl add out andl ja (bad) loope cmp add callq mov jns mov and mov es test jo icebp add iret mov callq jno test (bad) mov ss cmp rex.WRX fs int rex.RB mov add rorb fnstcw loope add out pop (bad) fiaddl (bad) jne movsb idivb (bad) out xor push rol push imul rex.WR lods add movabs fs cmp pushfq pop test cmpsl callq adc notl sahf add rex.WRXB or in xchg negl rex.XB mov (bad) pushq cmpsb fisttpll sub lahf and push rex.RX fstpt (bad) jne mov xchg (bad) add popfq test setnp (bad) xchg add mov or xchg mov shlb ja xchg out (bad) add (bad) test mov jne mov clc add out movsl adcl sar sub jb ja rex.RX (bad) cmp test mov (bad) and js xchg cmp sub rorb push push xor int jle and mov rex.X sub cmp je pop sbb loope and and retq out mov xchg incl mov and sahf mov push mov mov pop add xchg rex.WRX test std rex.WRB add rex.B and mov outsb jp (bad) (bad) int3 cli (bad) cmp and bnd retq mov (bad) (bad) jle lret test rclb or push xorl cld pop (bad) insl retq jnp and shlb repz cmp mov cld ja data16 rex.WXB out adc and mov pop jne mov sbb sub xchg and pop (bad) (bad) add cltd xchg test out insl or retq or movabs (bad) (bad) (bad) and adc sub mov stos add or xchg movslq js or sub and popfq mov xchg add xor pop (bad) push test mov rex.RX sub scas sub outsb xor xchg cmp mov jg movabs addr32 pop test or xor add pop mov frstor (bad) notl jg jns faddl rex.B imul add rex.WXB xchg pushq (bad) jnp outsl xchg cmp jo in xchg jb fbld cmc adc (bad) and fwait rex.X pop out test in rcll mov sahf xor xchg add ds add mov and popfq add xchg cmpsl out add (bad) adcb add gs cld add popfq rex rex.RXB (bad) xlat jnp mov fwait push fstpt loop rex.WX adc sarb retq (bad) add mov cmpsl jge add mov por rex.WB test cmp cmp sub pushq loope rex.WRB sub rex.B sub mov jle in (bad) xor sarb repz adc leaveq pop (bad) push xor (bad) je sub cltd fwait pushq push repz repnz adc cmp fidivr es (bad) retq jno sbb jb movslq test xchg jne xchg mov mov outsb js sahf movabs mov push jmp rex.XB loop (bad) imul or push adc (bad) jmpq sahf sbb rex.R sbb add (bad) imul jrcxz rex.R xchg (bad) idivb (bad) and or fdivrs nop test mov xchg cmp lods lods test int3 out in adc jae rex.RX pop ljmp out rex.WRX add (bad) scas sti or xlat gs sub dec movslq loope pop pop (bad) jno (bad) add sub xchg cmp or mov retq mov jl (bad) idivb mov mov cmpsb cmc mov leaveq jg adc add movslq imul push jp rex xchg insl jp rex.RX (bad) test mov (bad) out cwtl (bad) fidivr add sbb insl cmp rex.R popfq (bad) cmpsb icebp xchg (bad) pop push fiaddl (bad) xor mov in mov adc add (bad) loop js pop test add shrl pop jae insl (bad) addr32 rex.WRXB rex imul int jmpq flds adc (bad) rex.X (bad) pop xchg pop mov gs out je testb rex.WRXB out jp add imul js jp rex.WR sub leaveq xchg clc jbe faddl in pop jb add retq mov rex.WXB rex.X (bad) loop (bad) pushq retq outsb cmpsl adc insl out sub loop rcrb xor mov fsubrl stos notl out adc add sbb xor (bad) adc sub jrcxz repnz lret pop sahf add clc rex test cltd vsubss adc pop push jle pushq adc (bad) (bad) cld std int3 stc cmp lods and stos scas (bad) add (bad) (bad) fmuls negb (bad) mov imul add adc int push cld (bad) fisubl rex.WR js (bad) cs mov lret movabs scas jrcxz test jp rex.WRB (bad) js xchg add mov add leaveq (bad) andl mov mov incb rorb pop xchg jp out jae ds cltd and xchg sbb (bad) xchg mov rex movsb (bad) data16 out imul mov hlt cltd sub (bad) (bad) (bad) rcrb movsb jrcxz jle lret add pop and add imul jp (bad) mov mov jle jb sti xor lahf sub jg xchg (bad) xor xchg rex.W (bad) rclb (bad) cmp lock sub es rex.RXB xchg outsb shrl lret add or rex xchg xor rex.WXB jg fldt pushq icebp movabs hlt pushfq int3 (bad) and add in or or retq or sub retq fisttpll sar pushfq out xchg lods incb (bad) and (bad) lret movabs pop push cld rex.RX outsb add mov scas or jb lea rex.X out mov adc (bad) imul sbb push (bad) mov jp add rex.WX add js retq je ja jb lock jmpq mov add (bad) (bad) movabs mov rex.XB jp movabs add cmp es (bad) (bad) movabs insl pushfq push (bad) add pushq test fldcw mov out add lahf add ss negb imul (bad) retq jns rex jge push lods in mov loop outsl mov xchg xor lret hlt js and std pop sub jle sub pushq pushq push push out cmc sbb rex.B int3 add xchg and push rex.WRXB or pop movslq jp (bad) or (bad) jg stos sbb (bad) pop (bad) out (bad) sarl mov cwtl xor flds fldcw enterq add ja or pop stos or in rex.RX add callq push add mov or stc add orb out add sbb (bad) stos (bad) mov xchg cmp cwtl add jg sub in outsl mov mov movslq mov add scas test loop neg hlt jl (bad) nop cmp adc rex.WXB push adc or jle add add clc imul xchg rex.WB sub xor fnstsw (bad) hlt add mul rclb ds (bad) mov add mov mov jo lret (bad) pop pop sahf addl push (bad) jrcxz jle adc pushq sar jno cwtl lods (bad) rex.WX movslq mov pop ja mov repz movabs lret mov add retq (bad) jg mov mov pop movsb xchg rcl sub or jle out push roll mov pop pop xlat push (bad) int3 insb (bad) je mov adc (bad) jne loope or mov (bad) xchg in (bad) imul rex.RXB mov fistp push fisubr rex.B push rex.RX (bad) (bad) out (bad) mov (bad) ds rex.X addl addl (bad) cltd test stos mov (bad) cmc pop fldenv js sbb stos mov mov test movabs movabs lods pushq xchg pop fldl lods cmp (bad) adc (bad) xchg imul (bad) xor mov jp mov scas rex.WB rex.WRXB xchg and or out fwait clc sub imul rex.RX rex.B sbb idivb es pushfq rex.B add jge fmull in shlb movsb fs (bad) xorb (bad) mov (bad) mov push rex.W rex.WRX scas rex.WRX (bad) in in ja adc iret mov sub xor rex.XB movsb test cmp (bad) cmp lret imul push movabs adc nop jns (bad) and hlt jp mov jg test rorl pop repnz (bad) mov jo cmc pop popq add imul add int3 (bad) and pushfq sbb pop jb (bad) sti jne cmpsl pop mov jae fiaddl retq jg sbb and cmp and add pushq adc loop (bad) (bad) jo xchg jg jne int3 xchg jp pushq mov mov adc rex.WR add jne rex.WRX jae adc ja pop pop insl fwait (bad) stos xchg imull add and test pushq out (bad) add data16 jae (bad) xchg callq (bad) rex.WX outsb xchg fsubrl or pop jrcxz xor push sub push and jrcxz mov nop pushfq (bad) repz rex (bad) sbb in mov (bad) add mov push (bad) movabs add js clc jl (bad) xchg mov js cmp stos push add sub mov (bad) or movabs cmp scas iret rex.WXB and lods (bad) (bad) add xor xchg add (bad) retq mov jnp (bad) jge (bad) pop mov outsb je cmp or jns mov xor jmpq pop sub xor jle adc pop xchg (bad) (bad) pop cltd mov stos enterq cmp leaveq xor (bad) pushq ja xchg pushfq rex or sbb (bad) push xchg cmp jge movslq or (bad) xchg repz sbb sbb fcoms xchg adc xchg (bad) xor scas (bad) jbe out (bad) jle xchg (bad) jle sbb sbb rex.WRX jo mov in mov xchg xchg and xchg negb or mov iret out mov mov stos (bad) (bad) pop cli rex cmpsb (bad) lea jne lods pushq fs std jno xchg cmp mov push rorl cmc rex.WRB jns rcr ja sti divl pop add cmp push lods rex.WXB iret sub rex.WRB incb cmpsl in in adc xchg cmp push fildll xchg cmp (bad) jbe retq ss mov or femms or retq xchg (bad) retq mov (bad) xor cmp (bad) pushq jae test stc jne int3 std retq (bad) jmpq (bad) push cltd movslq fnstsw xchg clc sub mov xchg imul adc mov test (bad) fsubrl leaveq mov rcrl sbb (bad) mov add movabs or xor mov and sub cwtl mov or push pop in pushq push clc adc (bad) outsl mov faddl je sti rex.WB sarb or cmc xchg (bad) push enterq stos fimul out scas (bad) pop loopne push js and andl or loop lods jp in (bad) (bad) (bad) pop xlat addl rex cs (bad) cmpsb xor or add pushq pop sub push cmpl out mov jrcxz,pt (bad) jnp push sub xor stos movsl lahf cmpl (bad) jrcxz mov xor cmp test xlat leaveq rex.WRXB sbb (bad) movabs retq pushq test mov jg jns cli push mov repz pop add rex.RX roll add test imul and mov jnp jns (bad) hlt cmpsl jle (bad) in movabs mov std (bad) jo (bad) pushfq cmpsb (bad) sub idivb mov callq xchg add (bad) sbb rex.WRXB rex.WXB mov rex.WR (bad) std add cltd repz adcl (bad) xor es (bad) or (bad) in add adc repnz xchg movabs data16 cmp or jle (bad) mov (bad) jae (bad) mov out (bad) fwait rorb add jp (bad) lods xchg jns imul es cmpsb outsb rex.WR jg fcmovbe rex add movabs test loop jg adc (bad) xlat xor imul repnz (bad) icebp mov mov adc (bad) xchg out jl cwtl mov movabs out sahf leaveq add jmpq roll mov rex.W cmpsb pop xchg (bad) jle rex.R test in jg jne jp pop jg and (bad) mov or add lahf adc (bad) imul outsb sti rex.WRXB add jns outsl mov adc xchg add cltd movabs iret add xor mov mov pushq imul leaveq sub and sahf (bad) (bad) jge cmp jo and (bad) jg gs nop mov or xor add rex.WR jne (bad) add adcb pop mov pop mov vpshaq cmp rex.WRB push xor pop xor push mov jmpq xchg xchg push sub (bad) (bad) pop ss data16 (bad) outsb sub push pushq add div int rex.X sbb stc pop xor clc fnstcw or pop ss fisttpl nop (bad) (bad) pushq pushq in push add (bad) push repz mov mov jg popfq rorb sbb (bad) cmp fs and scas (bad) and add cmpsl jne add (bad) (bad) out jp push (bad) (bad) retq cmc and xchg movabs pop (bad) cli jl mov test (bad) int3 xchg jle add mov pop roll xchg add or loopne jb scas movslq pop test mov and xchg movsb cmp and (bad) (bad) fstl repz add test imul jo jge pushfq (bad) lcall retq rex sub (bad) test insb mov push mov js rex.WRXB js rex.RX decb push pop xchg xchg roll (bad) sub (bad) (bad) mov xchg retq hlt xchg jg stos cli xchg rex.WB mov sub (bad) movsb (bad) cmp ss sbb jge cli fs jne (bad) xchg loopne (bad) and pop out xchg fidiv rex.RB ljmp test rex.WRX retq pushq sti push sbb in mov add add mov sbb pop xor add jg ljmp cmp adc (bad) stos mov jg (bad) (bad) jle lret int xor (bad) and cli rex.RXB adc xchg jp retq rex.WRX test pushq fiadd push (bad) pop or mov stos (bad) outsb sub jmpq xchg movabs xchg outsl movsb mov (bad) imul add rex.W lods (bad) rex.XB fidivrl popq mov (bad) xor cmp pop cmp rex.WRB push out in lahf rcrb mov hlt add mov cmc mov sub jbe pushq and xchg add sbb sub (bad) (bad) sub add fwait cmpsl rex.XB add pushq cltd (bad) add testb mov hlt fwait add sbb (bad) xor cs (bad) fs push (bad) xor xchg rclb (bad) cld jo sbb rex rex.WB callq pop add jbe int (bad) (bad) or (bad) movabs push movabs (bad) mov jns out and (bad) pop add jge std rex.WR mov mov js mull (bad) shrb jle xchg (bad) fildll insl adc clc (bad) imul mov addr32 std fldenv out sub (bad) int (bad) pop incb repz pushq jnp nop jns jle sub pop mov pop mov divl rex.WX andl mov je mov jnp xlat jp out sub mov shrb xchg or leaveq (bad) cmc jge sub jrcxz (bad) insl (bad) roll pop pop xchg and sbb (bad) mov rex.WB scas and ljmp data16 jle jns mov (bad) add cli ffreep (bad) lods rol and xchg xor rex jmp sahf and rex.RX mov cmp (bad) xchg and frstor push cld or and gs (bad) leaveq rex.RXB outsl jrcxz xchg loope pushq jge mov add and rex.XB xor scas lret mov push (bad) lret add mov movabs (bad) jg lock jmp add mov rcrb xchg pop mov or push lahf cmp movabs push add mov add pushq out sbb pop scas sbb and jp insb or repnz xor add ja in leaveq rex.WRXB (bad) movsl and ror test pushq movabs pop loop rex and pushq xchg mov and rex.RX xor std cwtl xchg ja or and test add sbb idiv adc js xor sbb jg lods fnstsw mov push xor (bad) scas rex.X jae or jb mov push retq test outsb push or scas adc testl sub jp add (bad) rex.WRXB inc rex.WX add (bad) push jnp js (bad) retq (bad) or enterq stc push std jg mov jb (bad) (bad) or rex.B fcmovnbe hlt fistp repz (bad) test adc es cwtl (bad) xchg lret mov sbb mov mov jle mov in and and or and cmp pushq cmp pop pushq xlat xchg and test jae cltd sub jle rex.R (bad) outsb push stos (bad) pop or add mov stc xchg lods iret (bad) or movabs (bad) (bad) pushq sar je out mov sub rex.X stc adc icebp fs mov add pushq rex.WXB xchg notb fidiv cmp jmpq movabs shl add xor add mov cld movabs (bad) (bad) pushq std mov xor out cmc jo (bad) (bad) xchg add jb jg add movabs cmp movsl mov cli or rex.X movabs xchg je add lahf stos movslq and rex (bad) rolb stos (bad) test stos shll in jg cmpsl rclb add jmpq rex.RX push mov xor jae adc rex.W mov maxps add hlt xchg xchg movabs repz or mov decb js lods test pop (bad) add (bad) (bad) (bad) (bad) sbb add adc add xchg sub jmp mov repz movsb mov pushfq stos callq (bad) and (bad) cmp rex.WB scas mov add xchg mov std add sbb xchg xchg mov fadds jp (bad) (bad) add jrcxz jnp and (bad) out (bad) test add mov add rorl push (bad) vandnps push (bad) jl sbb mov cmp int3 subps test add (bad) (bad) sub xchg rex.X lock je mov fistpl xchg add leaveq fs jb sub in incl rex.WRXB jae subb or lods lea sbb sub rcrl pop xlat jnp sahf jmpq mov add cmp add jmp sarl movabs lret mov jle (bad) xchg mov xchg xchg add and add sub pushq rex.WX rex.W (bad) jg or or adc rex.RB loop cmpl repnz xchg (bad) mov jne jg adc xor icebp and in test popfq add pop test js fnstenv push xchg orl rex.WRXB retq or orl movabs jnp ja xchg sbb loope lret hlt (bad) lods movsb push lahf clc (bad) scas cmpl stos lods cmp (bad) jp mov (bad) or stos and outsl cmp incl or insl repnz test (bad) push (bad) (bad) mov jns insl imull sahf je std (bad) rorl mov out movb pop (bad) jle rex.WRB rex.WX data16 mov and and ds push push (bad) sub fs xchg (bad) hlt xchg insb and (bad) jae (bad) rex.RB xchg fildll enterq jb loop or pop sub je add (bad) cmp (bad) xchg push stos (bad) (bad) (bad) adc xchg pushfq xchg imul stc pop xor in (bad) mov clc or xchg mov jo ds outsb lods ja (bad) jae cmp xchg (bad) insl mov push mov (bad) es (bad) jp lods mov pop sbb jge xchg xchg adc (bad) or cmpsb (bad) fs gs cltd and add mov in (bad) flds push out adc in cmpsl test sti (bad) jrcxz jns lahf rex.X add xor sub mov test (bad) retq iret sbb mov stc (bad) ds repnz add (bad) adc packssdw data16 movabs test js loop or (bad) jl insl cmp pop xor jnp (bad) (bad) imul stos sub rex.W out fs fistpl subl mov mov pushq vcmppd adc lret jl mov ds add shrl je mov (bad) mov mov push jae rex.R add jmp (bad) mov xchg or callq (bad) out fistpl push je mov rex.X cmp jl sti (bad) push (bad) add fildl sub pop xchg rex.WRX (bad) rex add add stc jbe sub (bad) and (bad) or add add jae xchg stc (bad) mov add rex.RX stos cmc rex.W xor cmp add rex.WRX fs fwait pop push sbb (bad) retq jb xchg (bad) jo (bad) ss lahf pop ja xor (bad) (bad) scas getsec fs jg rex.WR xchg pop in add fstpt (bad) or jno (bad) addr32 and add rex.WRXB add xor or rorb jle adc insl sarl xor add (bad) mov mov popq movabs test clc addb je jrcxz imul jle rex.WRB imul adc mov xor notb jno (bad) cmp cmpsb jae add (bad) rex.X enterq fwait add sub and add xor rex.X jrcxz sbb lahf or pushq (bad) retq sarb cmp sete enterq pushq (bad) rorb lahf add mov (bad) pop xchg (bad) (bad) add push repz adc mov cmp (bad) adc add rex.WX repnz callq (bad) test (bad) xchg je add test (bad) mov rex.WXB and sahf rex.XB in stc mov and jle (bad) pushfq or add cmpsb movabs fimull add ds lret (bad) in test clc outsb or jp pop int3 fsubl mov nop cltd pop callq mov (bad) mov ss rex.WR xchg (bad) test mov add rex.RX jle iret cmp xor lods std mov iret test repz (bad) popfq rex.X mov out rex.WXB rex.RB cmp add lret imul mov add rex add (bad) loopne loop and movsb callq xor sarl xchg out mov fldl mov mov xor ja add lcall xchg add sub cld repz sbb rex.W (bad) jbe mov sar add fdivs fiaddl out (bad) rex.WRB stos retq ja int out sbb cltd add mov xchg xor jb pop sub add adc pop mov add add (bad) push (bad) insb test rex.WRX mov xchg add out ss (bad) pushfq adc mov push mov lea jrcxz jle mov or ds (bad) add shr rex.XB testb xor movabs jb (bad) and rex.R rex.WRXB rex.WRX add jbe push std out sub (bad) fwait cltd rex.X jae adc mov fimull mov pushq movabs mov pushq jmpq out popfq jbe and pushfq mov add out or lahf xchg fs rex.RB pop lock test sti jns mov test mov shr cld lret rex.RX (bad) pop or add ss repz cvtdq2ps jb pushq fbstp lock mov out and rex.WRXB test jle sub sub mov rex.B nop mov (bad) movsl data16 jb or mov sbb scas loop (bad) (bad) mov (bad) (bad) pushq mov (bad) lock in pop rex.R sbb sarl (bad) (bad) mov (bad) sub pop xchg xchg (bad) rex.X push mov xor rex.X rex.WRXB lock jbe sbb ficom cmpsb (bad) jp rex.WXB orb cwtl add int3 pop mov jp xchg movsl pop pop jle callq jno mov ss jns (bad) rex.WRXB rex.X add retq cmpsb mov fisttp addr32 jp (bad) sti pushfq jge testb pushq or cwtl sar (bad) retq or (bad) and lret fcoms mov (bad) stos adc jrcxz sbb sbb sbb movslq movabs loop test (bad) ja mov popfq loope rex.RB hlt cmp jg sbb mov mov mov jp cmp rorl mov vpslld lock loop in lods loope cmp pop pop and movslq (bad) or add int lods sbb callq fisttp add sbbl decb push je mov mov retq adc or xor rex enterq add shrb stos mov lods pop ror loopne lock adcb add jno sarl div nop rex.RXB jp pop (bad) pop rex.WRX sbb outsb rcll mov cmc xchg (bad) std pop movsl rex.RB mov or movsb xchg (bad) leaveq mov xlat pop and loopne xchg imul test or in in iret xchg (bad) ficoml xchg adc cmp jg mov (bad) cmp sub (bad) cmp mov mov cmp in mov icebp and adc pop sti xchg imul or hlt or bndldx mov xlat xchg (bad) (bad) push sarl mov cmpsb jbe xor (bad) (bad) xor fidivr push sub idivl orl outsl mov (bad) jge iret lods (bad) pushq jg cmpl (bad) cli in jne movabs ljmp cmp xchg push rex.WB shrb jg add fwait xchg and pop mov sub outsb push or sahf sub divps pushq (bad) or mov (bad) mov push lods mov ja mov test (bad) push (bad) and jl pop ja outsb jle rex.WRX movslq (bad) and je jg sub or int3 pop roll inc leaveq add (bad) or outsb rex.RB sub mov lahf out add loop rex.RB js (bad) clc cmp cmpsb adc sbb add imul stos jne jno,pn add (bad) lret cmpsl data16 (bad) or (bad) movsb lcall adc add movabs clc xchg (bad) or leaveq in movabs mov (bad) jle or or outsl (bad) (bad) lock movsl (bad) jmp or adc (bad) (bad) mov xchg add mov jbe (bad) lret add rex.WR or sbb push mov out sub lret and retq rex.RX jp pushq xchg fistpll push (bad) cs and rcrl sbb add mov out xchg imul or sti and (bad) cwtl xchg sbb jo add (bad) mov jle jge jp (bad) mov cmc pop shll pop add (bad) mov push repz or pop xor mov imul add rex.XB sub test in rex.RXB rex.RX rex.WRB (bad) jbe icebp mov jne rex.RX (bad) mov add add je add mov jae (bad) rex.XB shlb iret add add and cmp test (bad) fsubr mov adc insb js or sbb jmpq sub jg mov ss adc cltd xor fildll mov mov popfq seto int rorb (bad) test cmp pushq lods test jge mov pushq popfq scas add rex data16 test insl (bad) (bad) cmp cwtl jo cs outsb (bad) sub (bad) pop ja and stos rex.WRXB shrl shrb je cmpl pop int3 (bad) idivl and xchg mov cmp (bad) push cmp pop adc (bad) rex.WRB repnz test jl push mov test cmp hlt rex.W push adc pushfq add sbb xor cmpsl pushq (bad) mov jne (bad) idivl (bad) sub (bad) test or gs (bad) (bad) jmpq imul add movsb int3 and clc rex.XB push int3 jnp jge jmp jg mov and (bad) jnp sub jae push jmp js,pn sbb add in js and insb test mov (bad) (bad) sbb (bad) add and xchg jg jge xor test es push mov sub mov jmp jg or movsb (bad) jmpq sub xchg stos negl xchg out lea jb sbb (bad) (bad) pushq movsl or divb jp xchg (bad) add fistpl rex.XB jo stos cmp mov add add (bad) sub xchg rex.X mov (bad) xor pop outsb rex.R fidivr pushq add int3 int mov callq (bad) pop add (bad) (bad) cltd push in in add lahf cmp in push std add (bad) and or jg xlat (bad) jg rex.WRX rex.W (bad) jnp rex pop push add xchg and sbb mov jno jl mov pop push add (bad) ss mov mov (bad) mov fstps pop mov and sub cmp fsubrs movsl push callq data16 loopne subb cmp xchg stos int maxps (bad) push movslq mov jns out fildll retq lock jp dec imull (bad) push (bad) mov add jmp rep lock jle cltd rex.WX jns xor cmpl outsb rex.X mov nop (bad) mov stc mov lods mov mov test mov std callq nop leaveq mulb lock or stos divb jb jg (bad) jns xor outsl sahf sub cmp mov xor je or js cs and imulb out (bad) xchg outsb mov mov shrb insl (bad) push movslq push mov in js pop rcrb imul fstpl cmp ss jmpq xorb rex.RB incb xchg cltd rex.RXB icebp popfq (bad) retq jrcxz adcl jmpq rex.XB jrcxz (bad) jmpq pop fs xchg mov or mov and jrcxz mov rex.WRXB jb (bad) loop jge mov adc orb (bad) data16 (bad) (bad) cltd out in test (bad) movabs sbbb mov and xor jmpq out (bad) cmp mov movsl (bad) cwtl and data16 pop es xor (bad) pop movabs outsl sub rex.WRB fildll sub fistpll (bad) pushq sarb jle repz or pop and outsl rclb ja jg pop data16 xor rcr rex.W pushq rex.X bsr adc clc scas rex.WXB js fnstenv pop rex.R es mov (bad) int3 push mov or lods jno cltd pop push test add jmpq add clc shrl hlt mov xchg mov pop (bad) std out cmpsb mov rex.WRB cmpsl cmp fist mov jmpq in sbb test cmpsb mov jl sbb and rclb mov sti xor cmp je lret push mov callq lock and jns test add (bad) sub mov add pop js adc rclb rex.W rex.WXB pushq pop test test cmpb rex.RB lret (bad) fbld std pop cmp xchg jo int insb pop xor imul cmp fsubl xor or pop jnp (bad) xor sbb loope cld out outsb cmp scas adc hlt jns pop vhsubps cltd test add push mov xchg push (bad) sbb in jae push (bad) lret mov stos jbe pushq in mov adc fwait lea out lret xor jp (bad) (bad) (bad) pushq and mov mov push test mov outsb rex.X (bad) jg icebp xchg rex.WB add cmc rclb ja xor add enterq cltd (bad) mov xchg xlat pop loopne cmp cmc push (bad) and add pop rex.XB add (bad) sbb or xor mov iret (bad) rex.RB rex.RX adc (bad) mov mov mov mov (bad) mov add int3 cld leaveq test icebp push (bad) (bad) je adc popfq push jnp xchg add (bad) mov add mov in mov incl (bad) add data16 jb or add mov sub jp rex pop adc and insb or (bad) or pop pop pushq jl lret add repz je (bad) retq (bad) jge mov rex.WRB and (bad) push xor jl adc or xor outsb clc sub insl je pop (bad) add (bad) mov (bad) sbb mov cmp scas add decl or callq sti (bad) fs scas rex.WRXB xor mov std jnp add cli je out add jmp pop mov adc mov lock add cwtl cmc rex.B lret jne mov test (bad) gs in icebp rolb rex.WXB jg (bad) movabs movabs cmc movslq xchg jnp popfq pop ja pop or mov pushq popfq lods pop sub out movsb add sbb mov add sbb cmp fdivs icebp rex.WRXB fs adc js (bad) lods jg pop mov jb sbb and (bad) fstpt push mov mov mov mov sbb rex.WRXB jb or cmp push xor (bad) rex.WXB pop js ja cli jp je cmpsl rex.RXB mov rex.RX add add imul stc and (bad) icebp rex.WR retq (bad) cmpsl jo ss insb lods movsl mov and flds in rex.W fs rex.WX nop rex.RX pop (bad) pop add cmp (bad) rex jge movabs mov roll push add rex.WRXB sbb rex.WR add test adc sub cmc orl pushq repz lea (bad) (bad) cli sbbb rex.WB movl (bad) fnstenv jp push (bad) mov stc out rex.WRX js in jbe lods mov (bad) xor add rex.RX add adc push jb ds imull stos and lods (bad) and mov retq pop push add outsl jrcxz xor pushq add push rex.RB enterq or or (bad) add pop std sbb sti lahf sub insl push adc fdivl jg push fwait xchg rex.RB pop (bad) test jo add rex.WXB pushq jne clc cld sbbb movabs cmc cli rex.WXB in es xchg sti (bad) mov mov jb rex.W xlat adc mov and or (bad) mov (bad) jmp mov add jl (bad) and jp rex.RXB jnp jp and repz rex.WRX xor pop mov or (bad) xchg xlat jle movabs sbb lret and outsb loope jrcxz jg rex.RB addr32 in adc (bad) mov or sub enterq rcrb mov mov add sahf stc add rex add rex.RB vmovaps sbb cwtl pushq mov or jnp (bad) mov rex.WRXB rex.RB cwtl int3 pop cli adc std sbb and fwait cmpsl cmp xchg (bad) mov jp out shrl (bad) enterq and cmpsl (bad) mov lods stc xchg sbb rex.WX (bad) (bad) sub add mov jle fsts add test (bad) sbb int scas or (bad) fisubr jmp (bad) rclb lret add sti rex.WRX cs rex.WR loop and imul mov (bad) mov pop mov rex.B add mov (bad) (bad) mov lea add adc fcom jle sbbb (bad) xchg lods mov mov iret (bad) add pop cmp rolb pushq xor (bad) lock push repz sbb sbb xchg (bad) xchg rex.WR mov movabs lods xchg add (bad) jrcxz (bad) lea outsl cmp rex.WRX repz push (bad) rclb jmp cmp (bad) pushfq fiaddl cltd and fisubr (bad) adc (bad) scas stc mov and or (bad) clc pop lret rex.RX int add rex fldt incb adc out decl popq test fucomp (bad) imul (bad) stos fcomps loopne xor xchg xchg rex.R rex.R (bad) insl (bad) cmp mov or (bad) shlb mov xchg xor (bad) pop (bad) pushq jmpq add sbb (bad) rex.WX sbb xor push jb add (bad) icebp loop jae lods and fild add mov (bad) (bad) testl jge decb in test xchg fisubrl sub add sti (bad) in or jge (bad) icebp sahf nop flds movabs (bad) fwait popfq loope cmp decl (bad) xor lock (bad) pop (bad) (bad) jbe jl adc (bad) sarl addr32 rex.B xor fcoml rex.RXB or adc hlt rex.RX (bad) lahf (bad) rex.WRXB or and jp retq rolb lahf je repnz lahf add add rex.WXB movsb add cmp mov sub pop mov addps loope adc lret jb flds repz movabs mov jb rex.WRXB mov mov repz movabs rex.WRXB mov cmpsb sbb add sub fs sbb (bad) es cmp movabs cmp in xchg imul jbe stc mov sbb outsl scas ja shll jno ja xchg (bad) js mov repz (bad) out insb jbe jns imul jg test jae rex.W add imul bnd jg clc cmp nop subl cmp mov ftst mov (bad) mov addr32 test sub mov je insb addr32 xor jl hlt and ja pop outsl fisttpl pushq pushfq test loope mov jg and mov ss mov (bad) mov (bad) cmp and adc incb sahf add add fisubrl and and cmpsq lret cmpl xor movabs and (bad) (bad) in rex.W outsb in and or icebp ljmp stos (bad) xor jnp test lret add loop rex.W rex.X and pop mov jg xchg stc test jg cwtl rex.WRXB cmp jp rolb add (bad) ds add stos pop add cmc retq icebp push sub jp jl (bad) add pushq lods add out lock xor faddp lret rex.RXB add out (bad) pushfq push cltd xchg mov movswl adc xor jae int (bad) lea (bad) add adc js jle mov (bad) movslq fs (bad) add loopne stos jmp and (bad) rex.WR pop xchg mov xchg and movsl (bad) clc add (bad) (bad) movabs rex.WX xchg pushfq (bad) add xchg or lock rex.RX push mov xchg enterq (bad) rex loope jmpq add rex.X adc (bad) jg (bad) jbe loop clc mov rex.W (bad) clc sub callq cmc scas callq out jb mov rex.WRX (bad) stc mov and cmp fiaddl mov popfq jbe jb shlb xorb cmp lret leaveq adc incl adc int add pop (bad) hlt cmpsb add (bad) shrb in mov sub pushq movabs ss xchg push add rex.RB leaveq and adc pushq (bad) cmp mov and cmp xchg rex.R gs movsb rex.B pushfq (bad) mov fs fadd (bad) add or mov add pop stc jl (bad) push (bad) leaveq paddd js (bad) cmpsb (bad) (bad) cs pop jmp (bad) push (bad) (bad) rex.WXB shrd mov mov loope sub (bad) cli (bad) int3 pop fistpll rolb movslq xor mov pop (bad) enterq (bad) cmpl lock (bad) (bad) pop popfq cmp rex.WXB ss mov (bad) pop sarl pop xchg loop push (bad) (bad) callq fisubl (bad) retq clc or movslq cmp add add or leaveq sub out add cs mov fsubrs rcrb xchg (bad) js sarl es xchg mov movabs mov cs adc jns (bad) mov sbb rex.WR cmpsb and (bad) icebp leaveq cwtl andl rex.R rex rex.X xchg jo (bad) adc minps rex.WR pop push xlat std js repnz gs jrcxz std pushfq add int3 (bad) (bad) cmp rex.RXB divb sub insl stc lahf mov add movsb outsb int loop add test rex.WRXB jle add movabs retq mov cmp std jle cmpsl xchg add pop test outsb rex.X in add (bad) cmp out jle incb sahf mov callq sub push js rex.W (bad) xchg lahf (bad) ss xor sub sbbb adc insb loopne xchg rex.WRXB fnstcw sbb retq adc add mov cmp jge xchg add lret push jp data16 xor enterq outsl stc jge (bad) (bad) fist pushfq outsb or ficoml pop jge xchg jge pop (bad) jae jnp add add pop (bad) jp rex.X (bad) jnp xchg xchg std jg mov fisubl rex.WXB xor (bad) hlt insl xchg (bad) jge in test or sbb xchg (bad) cmc sbb jb (bad) rex.B jmp (bad) push shrb rorl mov (bad) mov test repnz rcr (bad) pop (bad) (bad) jge push (bad) and jrcxz push rex.XB jle mull pop jle pop pushq outsl xchg jns xchg adc xchg in std jbe (bad) gs (bad) (bad) pop sub test mov push jnp (bad) mov jo sbb insl cli push push (bad) hlt (bad) mov addr32 in xchg or and cld xchg sbb sahf push xchg push out not leaveq or sahf and loope movabs (bad) adc jmpq cmpsb mov lock iret xchg mov (bad) lods pop mov rex.W rex.R outsl sbb insb add and cmovnp hlt or outsb jmpq jbe faddl movabs test xlat lea insl add (bad) loopne xlat outsb (bad) and (bad) sub icebp fdivrp xchg leaveq (bad) mov jnp lock pop mov rex.RX mov je ljmp mov mov pop or (bad) pop (bad) insb pop lahf sar mov cmpsb shrl outsb imul outsb sbb cs jp add rorl push mov mov (bad) jl test xchg rex.W (bad) mov repz jnp mov callq movslq mov (bad) loopne callq mov mov add rex.WR mov lods movabs scas std fldt stc jge (bad) xor in mov jmp xlat cwtl imul fdivl fbld pop (bad) (bad) mov (bad) cld adc mov movb and push (bad) push xchg rex.RB in rex.WB pushfq fildll (bad) rex.RXB scas (bad) mov cwtl pop mov (bad) sbb enterq (bad) mov push jnp cmc add jbe cwtl cltd add (bad) jns and mov rex.WRB rex.RB jbe loop rcll (bad) cmp je fmul mov mov rex.XB rex.RX mov shrb push pushq or pushq pop fdiv lock jl fcoms adc xor jb jl adc rclb es rcl fisttpl (bad) pushq push pop movabs jno fcomi ficoml cld jb stos mov sar je out cwtl (bad) xchg imulb sbb imul or xchg callq cli (bad) (bad) ja clc pop icebp cmp rex.WX jp pop sar rex.RB imul mov sbb lods mov (bad) mov cli test mov xchg mov rex.XB pushfq xchg js cmp xchg push test cld and and jge (bad) pushfq mov jno (bad) (bad) scas cwtl push cmpsb sbb xchg movabs adc iret decb xchg loop imul ja cwtl test pop mov icebp movslq (bad) and shrl (bad) push pop xchg (bad) sbbl pop stos sbb jnp loopne cmp pushfq pop enterq rex.WRXB lret jo jbe mov jbe std fdiv rex.XB xor (bad) or pushq insl jp (bad) mov and (bad) cmpb or lcall test cmc jrcxz movabs mov (bad) lea or in fisttpll push and (bad) (bad) adc sbb jg cmp gs xchg mov in mov js lock nop (bad) xor lods sbb mov test jne mov cmp int mul in jrcxz xchg icebp rcrl mov add hlt sub add xchg mov pop xor rex.RX jno leaveq mov mov test popfq jnp callq xchg scas jbe xchg cld pushq and (bad) jmp push mov and adc rex.B rex.XB add cmp (bad) (bad) rex.RB mov mov out jl and fldt jne pushfq imul mov (bad) xor add sti xor pop loopne sub (bad) leaveq sbb xchg adc push std and (bad) movslq xchg (bad) stc cwtl xor rex.XB addr32 fsubl xor xor rex.WRXB sub rex.R stos pop (bad) out test rex.WR outsb movabs xchg xchg push repnz xchg fcomp callq lock rcrl (bad) ljmp push rex.RXB xchg pop or xchg decb cs nop push and adc push test ror callq mov int3 adc mov ss popfq or leaveq pop mov lcall fsubs popfq jl (bad) pop lock lods mov mov mov pushq lahf sbb jle pop gs sbb and clc mov jnp (bad) movabs pop push outsb (bad) push sbb pop xchg iret push jle xor adc push xor mov test mov rex xchg pop mov xchg js enterq insl xor pop popfq imul loope adc mov loope pop pop cmp jg jae and sub (bad) int je mov jge addb rcll or std movabs sbbl or out push cmp jnp jmp pop (bad) or rex.WRX xchg outsl cmpsb (bad) cmp mov loop mov outsb mov ficompl scas fildl jnp jbe mov xor push (bad) and (bad) rex.RXB sbb sub (bad) mov pop mov xchg shlb add insl rex or jbe xchg sti push (bad) (bad) (bad) roll pushfq pop add add popfq xor or data16 push add iret outsb jg jo,pt push xchg (bad) jne pop rex.WR jae imul add cs sbb movslq (bad) (bad) rex.W mov sbb (bad) add stc jnp insb add add sbb (bad) add loopne gs mov rex.WRXB mov (bad) movsl sub (bad) jmpq lods adc add jrcxz mov mov movsb lret fsubs std jbe je cmpsb iret mov jno insl mov ds sub (bad) sub add rex.WRX or (bad) or (bad) int3 mov out push xor (bad) (bad) sub stc cmp (bad) jp pushq xchg lret (bad) jb iret in retq add adc cmp (bad) lock add fdivrp jl add in push (bad) es fstps sub xchg (bad) repnz jb (bad) rcll ds jbe rex.WB add pushfq push jmp rex.WR or mov movsl test sub pushq shrb add notb add loope (bad) adc rex.X repnz (bad) pop or add cmp lret jnp imul mov mov std (bad) sbb add xor cmpsl mov fidiv mov jne outsb cld insb (bad) (bad) add std int rex.B in jb sbb nop jbe cmp outsb sbb sbb movabs lret add sbb out movabs jae fsubl pop ss lahf cmpl movabs mov xchg ds cmp pop clc add adc orl test bnd pop scas cmp xchg fs cwtl sahf push sub mov lret mov sub mov cli add sti (bad) leaveq out jbe movsl (bad) pushq cmp rex orb test and jl mov pushq fildll or movabs scas clc push (bad) (bad) mov rex.B jbe jmpq es scas add mov xchg loopne push mov rex.X rex.RX or add pushq rex.R fcomps int mov pop decb rex.WB js cmp addr32 callq enterq repz mov stos xchg mov mov cmp (bad) sti push je pop (bad) rcr (bad) push scas jge jnp xor push (bad) movsl fist push adc cld fisttpl je enterq in add jl pop cwtl out mov loope jp (bad) mov sub mov add clc xchg sub add sub or cmp mov (bad) fnstenv jp sbb adc cmp jmpq cmp add mov cmpsl movabs in fdivr push jae (bad) rol pop insb rex.WRB jp leaveq popfq pop and xchg mov imul cmp retq (bad) add cmp (bad) sahf addr32 out sub data16 cld pushfq rex.XB (bad) fsub pop mov mov sbb jp adcl and mov xor mov (bad) mov add js cli sub out movabs adc and rex.WB or pushq test jmpq mov insb pushfq cmp pop jo mov mov xchg push adc ja cmpsb lods cmpsl (bad) mov (bad) (bad) mov jp jrcxz repnz push lods pop mov sbb mov (bad) pushfq jrcxz int pop or pop lret jp add outsl adc mov cs push jnp addr32 (bad) hlt jg mov mov test iret pushq lock push pop loopne int xchg mov add pushfq (bad) jbe cmp out test cs cwtl stos (bad) (bad) cmp retq xchg insl movabs fdivrl rex.X cmp pop jle mov enterq icebp cmp cmpsl (bad) lods leaveq (bad) jno pushfq pop popfq add xchg rex.W mov add clc or out in add jmp cmc xchg add or loope pop retq fs or ficom (bad) flds push mov stos jbe and mov fimul add mov xchg insl jl mov rex.WRB (bad) (bad) xchg cwtl jle iret sub (bad) sbb (bad) jnp mull lock mov movsl mov push jnp fs cmp rex.WB roll xchg out and scas (bad) scas jmpq (bad) sub jmp jg add mov (bad) (bad) fisttpll (bad) add xchg test lret sub fsub add (bad) rol rex.WRB cmp test ljmp and fmuls lock rex.RX test movabs scas jno add sbb xor jp out cmp cmp xchg rex.X mov loopne (bad) and test and mov rex.X xor outsl mov pop movabs xchg jg or in insl cmp xchg divb mov or mov js mov cmpsb (bad) and int3 jl fsubl add pop mov movslq cmp cmpsb out push mov (bad) xchg xor pop cli push rex.WB rorl xor popq adc pop and repz jp add pop xor pop or nop pop pushq movabs pop pop movabs iret push es popq icebp sub jae fwait retq adc in rex.RXB fnsave rex.XB pop cli or ja mov add mov (bad) xchg mov mov add adc rex.W pop or mov add nop sub mov rex.WR (bad) fiaddl sarb jae cli add movabs and lcall add (bad) test (bad) adcb jmp imul stc rcrl rex.RX icebp add cld pop push (bad) mov in add xor cmc cmpl fmul test add (bad) (bad) jge (bad) mov lahf pushq jl xchg mov sahf imul mov rorl jnp fs addl mov (bad) (bad) rex rex.RXB cwtl (bad) mov sti (bad) add (bad) stos loop hlt cmp (bad) cltq leaveq (bad) jae movsb ficoml add jmpq lret jle jbe jmp cmp and rex.XB jno cmp shl mov scas icebp add cmpsl gs add std test outsl push stos out test add scas in pop addr32 and add jne je enterq mov jg imul jmp xchg push mov outsb pop clc cmpsb (bad) (bad) imul incb push sub push lods popq add movsb mov cmp (bad) out mov sbb rex.WRX pop jnp mov add mov cmp cmp movabs or test cs sbb push adc add and (bad) sub enterq (bad) repnz or callq add retq xchg stc add (bad) imul jle (bad) rex.RXB sub xchg jb mov and cmpsb add jg leaveq pushq add (bad) es frstor out rex.WXB repz (bad) cmp push sbb jb rcrb rex.X rorb xor stos inc or repz (bad) add mov add imul add or add rex.WXB add sti sbb cmpsb pop ja mov lea (bad) xchg mov mull retq imul rex.WRX cltd add mov xchg or insl (bad) test (bad) hlt rex.WRXB clc pushq sub stos (bad) (bad) sub jne or repz xor pop add jmp shrb sub push jge (bad) add sub sbb adc sbb mov (bad) (bad) adc sbb mov (bad) pop pop add (bad) rex.WRXB gs lods pop jns add mov out rcrb retq sbb xchg add rex.X mov rorb (bad) or mov xor pushq cmp data16 or imul jl movslq rex.W rcrl ss mov cltd fdivrs mov rex.XB or pop add (bad) (bad) loope sbb movslq sub jge int3 mov lods xchg jb push (bad) sub (bad) sbb js add mov xchg rex outsb icebp sub fs repnz (bad) jmp rex.WRXB push add out nop mov add xor mov add adc xchg xor jb cmpsl jmp fcmovnu std out and add xor mov fdivrs lahf pushq fiadd mov rex.WRB lods sarl popfq cs push nop cmpsl add (bad) fsts xor jg mov enterq or fdivl push shrl jmpq add adc lret outsb addl adc pop mov fwait rex.W add shr loop jnp mov xchg and cwtl (bad) popfq pushfq test repz fild (bad) loopne sub add (bad) movslq scas mov rex add pushq add xlat movabs jo sub sub (bad) jl xor cmpsb addl test mov jmp test mov (bad) movabs or (bad) add shl fs retq jg add jno leaveq xor fisubl (bad) test out scas or jrcxz mov cmp js jo,pt xchg loope jp cltd rex.WR xchg or andb sti callq scas int3 add adc cmp loop xor pushfq push mov jle jbe insb (bad) rcll sub mov jp jmpq mov (bad) mov add mov std lods in xor (bad) xchg loop add subl negb scas or je jge sbb (bad) (bad) js jno ja outsl xor rex.XB cmp stos pop fwait pop jl and xor mov add mov (bad) jle jge add (bad) (bad) cs and cmp add (bad) hlt cmp xor mov jo rex.WX pop (bad) xorl mov hlt (bad) ja sub lahf repnz sub sub push scas jb sub fnstenv push add outsl sbb cltd pop lahf cmp ss jo sub outsb rex.WR movslq pop jne push fucomp mov or jb andl mov add add sahf roll (bad) rorl (bad) (bad) (bad) jbe and (bad) popfq (bad) sahf iret shrb mov (bad) add sub cmp (bad) add (bad) add push out pop int3 adc add rcll lea add pop jp xchg mov (bad) cmp out pop mov xor xchg and scas (bad) cld sub (bad) adc loopne add cli or (bad) or lahf rex.R push (bad) jg cli (bad) cmp (bad) lret jl rcrl sbb pushq add (bad) in mov adc sub adc std (bad) mov or pop pop sbb js xor rex.WRXB lock cltd cld adc loop jmpq rex stos rex.WRXB sub add in in test cltd jo js adc sub xor cmc mov rex.WRXB es xor add push sbb lods out test sbb or andl jns movsl ljmp jb push mov or add out mov mov rex.RB ss mov xor retq movslq data16 (bad) std cwtl callq popfq (bad) add (bad) rex.RB cmp imul sub add mov (bad) mov fcoml xor mov loopne xor cmp mov rex.WRXB (bad) add pop js adc push add rex.W or loop add rex jmpq hlt stos cmpsb add movabs mov add mov cmpsb (bad) (bad) int out sub add mov cwtl add je mov rex.RXB rex.WRX (bad) rex.XB movabs push ja test jbe add retq (bad) insl xor and rex.RX mov xchg jb enterq (bad) mov mov and xchg sahf mov (bad) cli sub imul (bad) (bad) jb lret sub add add sbb iret push add adc mov rex.WRX (bad) btc or cmpsl sti fucomip test stos rex.WXB jl (bad) (bad) mov rcl cld stc incl mov jmpq pop add cmp sbb add js sbb (bad) and (bad) mov out (bad) (bad) adc jrcxz pushq mov scas xor movabs adc rex.W and (bad) (bad) idivl mov adc leaveq cli fcom (bad) mov ss test add sub or mov out mov push (bad) sbb jb (bad) mov or sub add jnp rex.WXB mov push mov (bad) (bad) add movslq movsb mov mov xchg jl jg mov (bad) xor int pushq jb rex.W (bad) lods (bad) adc sbb add loope (bad) adc adc pushfq sar (bad) fist xor sub lods stos clc movslq jp jmp repnz pfrsqrt xchg add xchg jnp lods loopnel icebp rex icebp xchg scas push sbbl jne fisubr or add (bad) jnp orl mov pushw mov xchg add cwtl lret mov adc movabs fmuls cwtl je fcoml sbb int3 and ficomp rex.WRX xchg (bad) (bad) cmp sbb movabs outsl and pavgw xchg and sbb shll add loop adc out sbb in rex.R lods shl out jle rex.XB nop add movslq iret test stos mov push xchg hlt stc (bad) jle or sub or mov rex.WRX (bad) push mov xor adc (bad) rex.RXB add sub push adc lock sbb or pushq xor xchg add cmpsb retq push jns insl jb lods (bad) cli rex.WR rex.WX add (bad) mov retq (bad) imul scas mov mov cmpsl xchg (bad) (bad) test shrl xchg lods and rex.WXB add mov test (bad) jnp (bad) xchg xchg setbe or mov rex.WR (bad) jnp cs je fnop insl mov pop (bad) adc jb test jnp (bad) (bad) std xchg (bad) nop xor mov insl pushfq (bad) lock shl sbb imul sub xlat out jp and out mov rex insb sbb sti int3 xchg (bad) fsubrl mov mov adc retq (bad) pushq xchg or jb mov (bad) lea mov rex.WRXB repz ss (bad) xor mull or and in jmp retq in jmp (bad) sub push xchg mov cmc cmp or xchg stos add sbb (bad) mov xchg data16 jmpq push cld fildl outsb (bad) and or rex.RXB fistp int3 rorb (bad) sahf test leaveq mov jae mov jge jle test cli jg pushq decb loop and sar cwtl push pop sub int3 fsubrs (bad) sahf jp pushq (bad) and jrcxz xor fistl repnz rex.RB (bad) jne (bad) cmc rcl cmp xor mov xor mov jo addr32 outsb sahf setno (bad) insl mov mov (bad) fmul xchg (bad) adc rex.RX addr32 ja rex.RXB fstps leaveq sbb fiaddl rex.RB and pop jns callq nop (bad) cltd adc movb jle xchg rex.WRB scas jl scas and out ja insl pop sbb lahf add (bad) pop and pop outsb push fdivrl (bad) cld mov (bad) xor sub and or lock mov (bad) cld (bad) push imul pop mov ja fwait cld xchg movabs adc pop add adc push xchg retq jl (bad) pop (bad) adcl adc fsubp xchg cli mov push cmp (bad) sbb or sahf push pop (bad) jrcxz (bad) jrcxz xor rcll stc mov out add clc mov or in fs add pushq movsl and fiadd add fimul cmp fdivs sub (bad) movabs add (bad) fildl pop repnz iret jb stos cmp sbb xor retq rclb (bad) push and enterq rcr jb sbb addl add (bad) pop jrcxz lret (bad) add jp int in xor pop (bad) fnstsw (bad) jl iret es jb xor (bad) lret mov jbe,pt negb out (bad) sub outsb adc jg ja je punpckhwd cmpsl stc add mov popfq push sbb mov rorb jnp (bad) (bad) rex.WR rex mov rex.WB adc (bad) jrcxz and movsl test jb rex.WXB mov or adcl adc fs rcll jbe cwtl add xchg fsubl (bad) (bad) (bad) sahf rex.WRXB andl pop stc mov mov add fidivr clc lods test leaveq or or mov xchg data16 std mov add jmp scas add (bad) (bad) out mov (bad) push fs mov andl xlat fisttpl rex.W fs sub add mov add xchg insb ja sti test add jb cs pop adc iret sbb mov add mov rex.WRXB or jb icebp sub mov leaveq loopne mov rex.X sarl cmp add (bad) (bad) iret mov (bad) idiv outsb sub icebp repnz jbe movabs pushq add popfq rex.RX subb xor push cmp cli adc (bad) rex.W sbb or (bad) loopne xchg push mov mov xchg incb jnp xor cmpb jb jle mov xchg sub fildll xchg (bad) jbe rex.X mov stos fs rex.W ds stc test rex.WRB scas xchg mov xor ror (bad) (bad) nop mov fsubs pushfq decb jg cmp mov (bad) (bad) ja retq sbb lahf add jge andl pop jle test (bad) data16 add mov lahf stos add movslq rex.WRXB xor rex.B cmp (bad) mov (bad) push or stc rex.RXB mov rex.XB mov pushq (bad) jae pushq add lods cld rex.WRB jg ja jmpq xchg mov lock rcr jns xchg int3 retq (bad) (bad) xchg add jg mov rex.WRXB cltd mov (bad) int (bad) (bad) fiadd mov xor rex.RB pushq push rex.W mov (bad) jns rex.WX rex.RX (bad) add xchg add cmpsl jno (bad) sti ja sbb sbb sahf (bad) pop popfq mov (bad) adc insb rex.WX movslq (bad) fnstsw mul sub (bad) adc retq in scas and sbb ja je jl jbe rcrb idivl and leaveq cmpsl and scas cmpsb rclb nop push (bad) rcl lods fcmovu rex.WX sbb rcr loop cli (bad) (bad) push and insl jns rex.RB adc xchg pushq cld (bad) sub cmc jno push mov pop jne sub xchg movabs (bad) mov in test lock scas sbb xor (bad) jg adc rex.WX xor cmpsl push adc mov cmp push in fcoml repnz pop sub (bad) mov sti iret in pop stc (bad) ss xlat gs (bad) sti (bad) repz push imul lahf rex jge movabs idivl rex rex.W fisubr mov imul mov (bad) scas add (bad) (bad) popfq xchg push xchg fldl (bad) (bad) callq (bad) cmp jp nop rex.RXB out add rex.X rex.WRXB int3 jmp or fwait cmc jo mov pop pushq sub test rex.WRB mov (bad) (bad) scas pop or in (bad) movabs or (bad) (bad) xchg sbb cli sub sbb pushq add sahf jge (bad) fisubl (bad) xchg lahf movabs add mov retq lods pushq je jrcxz add (bad) xchg rex xor repnz jnp fild xchg mov insb (bad) push repz jbe insl movsb jmp or imul cmp popfq pushq (bad) (bad) (bad) shll es mov test rex.WX sbbl jmpq pushfq rex es cmp sbb scas adc mov cmp xchg ja rcr mov (bad) loopne fcomi cld lock jno cmp rex.XB cmpl icebp mov mov (bad) mov ficomp mov cltd sahf add repnz jge mov cli jle out sub mov (bad) xchg outsl add retq xchg add pushq xor out push add in pop mov and sbb jae (bad) (bad) (bad) movabs xor nop lods test push (bad) rex.WXB add retq xchg jns add enterq push xlat pop pushfq leaveq sahf add cmp push movabs movabs (bad) add jno fiadd (bad) jge (bad) adc push push popq add shlb out (bad) testl and out rex.X rex.XB sbb cmp (bad) lods push add xchg adcl (bad) rol lahf jp scas movslq (bad) sarb sbb mov xor rex.RXB lea (bad) sub add loope in test callq (bad) (bad) and pop push add enterq mov repnz and adc and (bad) and es jl shll stos or xor (bad) clc jb scas mov sub movntps adc add hlt adc sbb movabs jns jrcxz pop ds mov rex.R ds jo adc push mov and scas sbb (bad) push outsb std nop ficom sub (bad) jo mov vcvtsd2si fmul sahf sub adc ja test in lods clc movabs xchg sbb push (bad) push divb cmpsl rex.WB cmp cs test je popfq mov roll cmp push repnz movabs faddl pop rex.WR or xchg mov outsl pop rex.R xchg rex.RB jbe outsl add (bad) rex.WR (bad) push ja xchg fmul mov (bad) flds insl or push ficoml cmp std adc push mov sbb push xor mov jge imul fdivrl pushq or mov adc adcl pop rcll fmull shld (bad) xchg mov (bad) fs and fdivl insl cmp movabs (bad) xchg mov fbstp xor outsb rclb (bad) xor jno mov jbe mov xor rex.B mul ror je add (bad) jmpq push fs xchg fcoml sbb (bad) icebp mov stc data16 cmpsb sbb js xchg lods sub movabs int mov xchg cmpsb sub mov (bad) cmpsl fnsave lret (bad) add sets jge add rex.RXB (bad) adc rex.WRXB movsl jmpq push fnsave in test or (bad) lock pop rorb xchg rex.RXB scas (bad) outsl (bad) out adc shrl adcb (bad) add sub in clc add fisttpll mov xor in rorb push xchg insl pop mov jno cltd test cltd sahf ss or hlt add rex.W pop mov mov popfq (bad) xor retq rex (bad) nop in (bad) mov movabs out or outsl add and cmp lret pop add andl xor (bad) (bad) and cmp sub lea cmpsl (bad) rex.R or cmp repnz out push cmp jp movl rex.RB and adc (bad) pop mov sti enterq or sub (bad) int addr32 rex.WRX jle mov pop mov cld push jle fcmovnb (bad) lret mov mov pop retq cwtl and je cmp rex.W fs xchg add clc push test scas pop rol sub rex.RX mov out rex.WRX addr32 jb adc andb cli rex.RX xchg adc jnp cmp es adc adc pushfq cmpsb mov (bad) in popfq sbb scas ss (bad) nop in and (bad) (bad) jae (bad) add mov push (bad) mov (bad) jg sahf lahf sub and (bad) or push in movabs movabs push mov (bad) (bad) mov je xchg (bad) push xor (bad) sti sahf (bad) movsl insb (bad) ds jnp xor add (bad) scas testb outsb hlt or insb sarb (bad) test mov adc add xlat fisubrl sbb push push out sbb test pop notb xchg rex.RX mov outsl mov add lret add cmp loop orl (bad) (bad) sub jp rex.RXB rex.WXB addr32 callq movsl rex.RB add add add cli add or add negl int mov int3 loopne sbb add add xchg scas and adc insb (bad) push (bad) pop cmpsl jo (bad) mov pop mov mov rex.B enterq ds pop add sub lcall mov xlat cmc psadbw sub enterq in cmp clc pop add rex.WRB fwait rex.W sbb mov (bad) add lods (bad) or (bad) (bad) cs out pushq and jb stos addr32 jg sub retq lret and mov xchg (bad) cs add cmpsb or add mov mov sahf jne lret (bad) callq fcomip mov je rex.XB or in fstp push mov rex.RX (bad) (bad) (bad) jbe stc add (bad) pop rex.RXB rcr add test and mov or mov xor jbe movabs (bad) sub lods pop cmpsb cwtl mov jrcxz lahf (bad) jo mov jb add mov imul (bad) add hlt add (bad) cmpsb xchg cmp mov (bad) jb rex.WX xor mov jo (bad) add movabs and add loopne sbb in retq or mov loop mov insl jl push sub jb test xchg int3 add imulb cmp scas rex.R (bad) add sub neg or jle mov out mov movsl add (bad) fnsave pop add or jg lea imul es fs iret xchg (bad) mov (bad) add cmc cmp (bad) callq pop sbbl insl (bad) js fwait loope jbe push xchg sbb and jo (bad) jne xor pushq (bad) xchg pop in mov mov (bad) jne rex.WRX fwait std push (bad) jae pop pop out xor push cmpsb callq (bad) push pop jge out add pushq insb mov jbe xchg sub pushq (bad) lahf icebp outsb jg pop rex.B shr xchg clc rorl rex.X int3 ss xor (bad) lods mov xchg rol xor push cmpsl mov xchg jg (bad) fsubrp sbb sbb mov or (bad) jp gs cmp pop and out imul fsub and negl lea adc pop loop mov push (bad) pop jge (bad) roll add jmpq loope test fcompl insl jrcxz jge pop imul add cli repnz neg pop jno jrcxz rex.WB jg and jb cmp mov adc cwtl cltd lea adc jmpq movslq lods loopne xorb jb pushq clc retq (bad) pop js bnd callq jnp lock rex.WX jle ds sbb push loop cld fsubr (bad) stos movsb add out xchg fild imul lock hlt movabs adc popfq mov fild rex.B rolb in cmpb pop jl jmp mov cld iret je cmp loope mov rex.XB loopne rex.WRB pop adc xlat add in jmp jle cs sub mov cmpsb (bad) or fs add imul (bad) (bad) cmp push (bad) fisttp pop (bad) pop or nop callq xchg pushq nop sub jbe pushq xchg mov movslq jnp fwait test (bad) pop pushq push movabs rex.X cmc (bad) outsb rorl mov (bad) mov xchg vmovsd fdiv or jle mov sarl scas (bad) xor pop (bad) pop xor push popfq xor test hlt loopne add pop or xor mov lock push ja (bad) (bad) (bad) out loopne mov (bad) pop xor rex.XB mov sbb (bad) shr add je clc (bad) mov pop sbb (bad) mov stos int3 rcl adc push shr or int3 push iret lret leaveq test adc sarl out (bad) push pop jp add cmc and fs mov clc mov pop sub rex.WR sti cli insb (bad) (bad) movsl jl xor shrl imul data16 js clc (bad) pushfw mov xchg int3 rex.WXB mov outsb int pop xchg mov jg lret (bad) jo add jno mov rorl pop (bad) cmp or movabs add mov add jp int3 cltd enterq mov add cmp decl xchg add pop rol movabs push adc (bad) loopne or push stos rorb ss out sbb jmp callq jb mov (bad) fcmovne iret (bad) add and cmp mov adc pop push push cmpsb imul and hlt cltd (bad) es push pushq xor cmpsb and test lahf loopne mov movsb mov push add sub ja mov pop push lret out je (bad) or (bad) add adc jo add add xor mov (bad) rex.WRX (bad) (bad) (bad) (bad) xor adc cmp cld pop mov xchg push movslq add adc add lea (bad) movl sub adc (bad) mov (bad) rex.B cmpsb xor scas mov adc add lret xchg fiadd push and std adc xchg (bad) or cmp cmc jnp lods js adc pushq (bad) mov sbb cmp in scas out xchg cmp adc stos or mov movabs and jnp (bad) push retq jle jg or stc mov sub xor (bad) pop jl adc xor (bad) and lods xor mov loop jle (bad) mov and add repz jno (bad) mov add jl adc jns fildl (bad) mov cmp add test (bad) ds xlat (bad) clc (bad) mov sbb mov fs sub fiadd and cmp rex.X data16 mov clc in add pop cmp push cld loop jle iret adc in fcoml cmp movabs (bad) cmc push scas add cwtl mov xorb lret xor or push cmp cmp (bad) repnz add (bad) mov mov es (bad) push cmp outsl (bad) xchg mov cmpl cld push add repnz push icebp jg jmp mov out shrl lahf fwait xchg mov movslq pop rex.WRB je int (bad) fdiv add lahf repz xchg cmpsb jmp sub sarb pop data16 sahf jae (bad) (bad) (bad) and (bad) decl mov pushfq push js pop (bad) mov callq jb (bad) (bad) xlat cmp jg mov movabs xchg rex.WB rex.X (bad) mov or mov xorl push lock outsb mov cmpsb (bad) rolb in mov rex rcrl add and jb and jns test movabs pop adc int rcr loopne negb fwait add push (bad) stos add (bad) mov xchg (bad) lea mov js sbb rex.RX clc mov stos cmpsb add pop or add mov int cmp sarl test jno (bad) outsb (bad) (bad) loop sub xor mov adc rex cmpl cld (bad) mov xchg in xchg fsts xor outsl mov mov retq xor fiaddl or lcall loop cmp stos int3 push mov sub idivl fs cmp out cs (bad) mov insl cmp enterq xchg pushq loope out and jp sub shr sub iret repz and (bad) xchg mov lahf mov pushq mov add sub mov add (bad) rex.X rex.WB jl je ds cmpsl (bad) cmp mov mov nop fldenv xchg (bad) push data16 test and repz movsl sub (bad) test jp fst cli mov rex.WRX mov adc int3 cmpl lock rex.WB cwtl sub rex.WRX jae loope gs mov adc and imul ficom ja in and movabs xor movabs cmp pushq sbb mov mov jle out sbb retq xlat movabs cmp lods xor xchg mov outsb jmp mov mov nop xlat xlat fwait (bad) xchg cmp pop rex.WB data16 fs pushq scas repz xchg int lods fwait xchg mov insl pop adc cmp cmp fmull in and icebp popq jp je cmpsb or cltd jb pop rex.WB std movabs mov (bad) popfq (bad) pop (bad) add pop out adc cmpsb (bad) pop movabs adc lahf lret stc lret sti cwtl mov adc push movabs fcoml scas loopne add (bad) rex.WX movabs and and pushq mov (bad) jo sub and mov jno sub jl sbbb jle addl js movsl mov fxch and push mov clc (bad) cmp sub or cld xchg push movabs pop vminps fs sub (bad) and mov jg jp (bad) jb ss (bad) loop jmp leaveq (bad) add cmc add enterq xchg faddl (bad) pop (bad) mulb jle jb jge int fist movsb lret out xor mov push and rex.RX es (bad) fdivrl movabs rolb movabs mov lret jg ja jbe ficom and jmpq fwait cmp jl (bad) mov lods and js sbb sahf outsb add mov add repz movb mov rex.XB sar rorb js callq (bad) jnp add outsl repnz or xlat add rex.WXB movabs rex.XB xchg sahf add pop sbb adc and (bad) (bad) movsl jae mov jg (bad) sub pop (bad) ja sbbb xor (bad) idivl jb (bad) cmp push in add jno enterq pop add pop and (bad) fcomi add sub push add outsl jmp (bad) xor add push pop jne xchg jp movabs xchg add rex.RXB add xor jge lahf mov retq xchg repnz rex.R add cmp (bad) out push xchg sbb add pop add insb setle mov sbb (bad) jl fwait (bad) stos in jnp adc sbb mov sbb mov fadds es ds or cld test jl add jp mov (bad) push jg or mov pop (bad) jne rex.XB push pushq fildll insl (bad) jns mov jb loop mov gs xor test xchg xchg rcrb mov rex.WXB xchg (bad) or jbe xchg loop es (bad) pmuludq rcrb rex.WRXB repnz insb je or callq (bad) fnstsw xor add lahf (bad) or (bad) mov rex.WRB lahf sti (bad) xor loope pushq retq pushq int lret pop cmc lods pop test imull mov mov jmpq jl jb adc rex.RXB lret leaveq lea std je cwtl jle (bad) fucomp sti sbb pop mov jge mulb adc lret or rolb shll outsl sbb mov jmpq xchg (bad) shrb movsl cli sbb (bad) push rex.W xchg pushfq std ja movsb jle fsubrl js cmp pop push ss sbb xchg fldenv loop push jg (bad) rcrb or leaveq stc pop sbb cmp imul (bad) callq (bad) sarb sbb pushfq cmpl xlat int3 mov (bad) mov sub pop cmp lods pop leaveq imul or stos fstps rex.RB retq pop and push add setne jp loope (bad) xor rex.WRXB repnz (bad) (bad) jne push add incl (bad) mov rex.RX add sub jrcxz add push cmp push in mov add xor lahf rex.R push (bad) rex.WR cvtps2pi sbb movabs mov rex.X jp and andl addr32 (bad) jle lods (bad) rex.RXB (bad) jl cmp mov add pop nop mov jmp jrcxz rex.WR (bad) xchg stc out add add jno cwtl jg mov (bad) test and add rex add imul movabs mov add (bad) (bad) mov and add add mov jae push add jbe pop sub test xor pop shl add js or jae scas (bad) cmp jrcxz push xchg outsl xor and fidivrl xor adc rex.RXB add rex.WRX hlt mov movsl scas sub xor push adc mov jg lods mov add fdivs lock (bad) stos jb mov sub rex sub jno pushq mov repnz pop stos rex.WB mov jbe xchg movsl not outsl movabs xchg push or (bad) mov (bad) mov sti test xchg push mov sub mov retq lret cmp pushq sahf jmpq outsl xorb jbe add sub movabs and rex.XB or in mov sub shrl fnstcw push loope icebp cmp sub jnp rex sbb cmp jle out push rex.WR mov data16 (bad) mov cmpsb xor sarb outsl add adc data16 stos mov lods push (bad) pop add in movsl leaveq xor or js mov push outsl sub (bad) cmp mov subl sbb push fldcw (bad) adc mov loopne or fldl sti out pushfq (bad) out mov cmp cld rex.WRB rex.WX push add jle movabs add rex.RXB jnp jle rex.WX push out xchg (bad) cli mov jmpq in push mov (bad) (bad) jb rex.WRXB add lahf cmp clc test sub imul (bad) out stos xchg push jle adc (bad) push xchg xchg (bad) xchg movslq and cld xchg xor in lea sbb in pop test (bad) adc mov push jns add push vxorps divb retq mov cmp pop (bad) mov test mov rclb (bad) add xchg add fidivl out push xchg push mov push jmpq imul bnd pop (bad) sahf xchg add insb mov xor imull jne (bad) jle lods sarl mov add pop fild ljmp mov fwait add push mov gs out mov fdivrp add lea rex lock add jo mov rex.X (bad) mov fisubl data16 scas lret mov jae add imul in jg fnsave lods pop mov jle insl mov test cld mov addr32 add (bad) push test and (bad) loopne mov add xor rolb ja and xchg jo popfq js shll add ss repz jle cld mov out (bad) pushfq rex.X jae (bad) fwait jp jns roll mov fcmovnu mov cld add insl leaveq xchg and (bad) jle pushq push xchg scas test mov xchg (bad) lret add xlat (bad) pop icebp push sub adc repz push movabs rex.X rex.B test or xchg sub enterq iret pop add sbb push cmp xor sahf sub jge lret (bad) mov movabs jg pop or jns movl mov mov push popfq and negl in ljmp xchg pop outsl adc shrb (bad) pushq and jo (bad) stos pushfq push rcll rex.RX pushq fild sti scas callq pop cmp (bad) in rex.W pushq xor xchg or out retq mov or test rex.WRXB pop push rex (bad) int3 push (bad) icebp out sbb cltd (bad) and (bad) (bad) xor add movabs mov negb push movaps add iret lods xchg insb retq jno test pop xchg imul insb scas xor (bad) pushq (bad) pop or xchg out mov mov mov rex.WRB sub loop mov jp adc lods sbb xor int idivb outsb rex.WXB cwtl sub add jrcxz callq rex (bad) repz pushq fisub pushfq (bad) and retq fcoml adc jnp nop push adc pushq mov or (bad) cmp std insl (bad) stc mov shrl (bad) popfq pop test pushfq add jge xor ljmp decb movslq rex movabs rcrl je rcrb repz movabs adc (bad) jnp out rcr scas add and (bad) push callq outsl add push outsl jo (bad) cld or or rex.WXB mov lods rcl sbb mov rex test add shr sbb xorl sbb js ss js fadds cmp jp imul cmp or rcrb jmpq cmpsb jl mov jo mov push or cwtl mov (bad) insb jne iret rex.WR push test movabs sbb rex (bad) ficoml sahf mov rex.WRX and imul adc lret es sbb stos sub (bad) cmpsb mov add xor rex.X sub test mov add mov lret sub rex.WRXB jge jbe rex.W cmc test mov add and jg xor imul (bad) andl mov (bad) out xor add jns jmp (bad) rex push xchg shll jle (bad) icebp repz sbbl rex.WXB in fisubrl out pop or xor rex.RB xchg xlat xor test add in sub fistpl cmp xor pop movslq scas (bad) push jl cwtl decb pop (bad) xchg mov add movabs mov sub (bad) rcll xor imul test (bad) rex.WXB add faddl pushq jl (bad) rex.WRXB push mov sub or push and sub rex.B add movabs rex.WRX adc mov (bad) jae enterq or mov pop insb jl sbb sbb adc (bad) sbbl push movl jle mov jge lret mov retq std xchg (bad) out mov ja (bad) xor pushfq jb sarb cmp lahf lods lock ss rcrl jbe gs ja xor push fs jne xchg movslq stos cmc jl enterq sub xor fs cmp leaveq (bad) mov cltd rex.WRB addr32 mov cmp scas xchg jg leaveq mov addr32 sub movsb push xor pushq and mov lahf sbb ss out movabs push addr32 (bad) push and pop push test popfq mov (bad) scas push movabs or lods test imul (bad) gs (bad) sbb xor movsl rex.RXB mov fs (bad) ja sbb mov ds fisub rex.RB jno (bad) loopne int3 ss mov rex.WR push outsb (bad) (bad) rex.WRX insb pop rex jle sub repnz fwait movabs cmp adc pop sub leaveq jb movsb out (bad) movabs popfq mov rex fldcw imull repz and cwtl jp and mov adc (bad) fs mov xor jp (bad) rex.WX repnz sahf cmp and sbb xchg stos cmp mov jle mov flds adc sub out mov adc (bad) jo data16 mov (bad) (bad) rex.WX fwait push adc in pop popfq xchg scas out (bad) test (bad) sbb rex rex.RXB pop es adc xchg cmp ror insb add adc fldt push add cmp and mov stc es mov lea ffreep adc outsb rex.WRXB xchg stos add fimul stos add sbb outsb (bad) (bad) jle rex.WXB jne (bad) out mov push xchg rex.RB rex mov cmp pushfq retq rex.R or clc jp cmp retq notb mov mov rex.RXB jne (bad) ja lock jnp mov and movslq and xor jmpq add (bad) jb or fdivrs test or (bad) or (bad) pop cmpsb rex.RXB pop rex.R scas mov rex jl leaveq in and (bad) xchg rex.RB (bad) or cmp (bad) adc mov jg jmpq add add cmpsb add jns rex.R sub movabs std scas movslq decl pop data16 (bad) mov rex.X (bad) insl or jb outsb jns mov add out in out rorl (bad) and movslq (bad) sbb rex.WRB rex.RB (bad) rolb mov and loopne mov callq xchg sub add jmpq mov gs pop xchg iret (bad) push test jle js (bad) fisttp (bad) lods or ja (bad) cld adc int (bad) pushq mov (bad) rex.RB sar decb jle mov xor and xchg push add add mov or cmp (bad) (bad) fcoms add xchg movabs jo fsub je add in jae pop leaveq cwtl or lea cmp sbb cmpsb test rex.W imul mov xor mov stc push xchg push mov mov fsubrp adc push pop xchg out (bad) add xchg rorl int3 xchg add (bad) sub pushq (bad) (bad) (bad) pushfq add jg stc xor rex.XB mov cs pcmpgtb movslq push add (bad) mov push sti mov pop loope and sub movslq cmp push cmpsb mov fnstsw (bad) adc movabs jg jnp sub (bad) sar test add xchg fptan rex.RXB add and pop add shr js jge or jg xor push ljmp cmpsb and fwait retq stc (bad) rex.RB rex.RB rex test adc or (bad) movabs sbb pushfq push xor insl outsb xor lods insl pushq fistpl push mov lahf rcll outsl xor fmuls jbe repz stc int3 xchg add sbb push pushfq mov add add movabs xchg xor mov or outsb jnp xchg push decl (bad) js lret lret rex (bad) xchg rex.WR lahf outsb jp scas xchg adc cmc jle ja lea shrl xchg subl loope xchg add (bad) mov enterq rex rex.WXB fs mov scas xlat subb adc mov rex.WXB (bad) cmpsl imul or imul (bad) mov pop lods imul clc retq xchg rex.RX (bad) in jp mov andl cmp jl cs neg sti mov add mov cmp pushq (bad) rex.WX xor xchg retq in (bad) int3 mov xor jg mov cmp cltd add icebp clc addr32 mov and mov int add ficom hlt cwtl and cmpsb in xchg adc push and and scas cmp insb (bad) jnp loopne mov jrcxz gs xor mov push pop (bad) jmp mov push push pop add hlt add pushq pop pop pop jge cmp mov mov testb shrb add (bad) lods sbb (bad) stos or stc jb cmp or (bad) (bad) (bad) and rex.WRX sbb (bad) jg jmp lret fs cmp adc fwait js lock (bad) iret cmp cwtl and add std pop movabs jbe in or xlat mov movabs movslq sti adc xchg rex rex.WB pop jg (bad) sub idivl sahf jmpq add jmp xor rorb (bad) repz vmovaps rex.WRX jnp (bad) test fistl mov jg imul pop mov mov (bad) mov outsb loope in add cwtl callq jae push mov mov xchg rex.WB mov pushfq mov add xchg pop (bad) cmp nop add add push rex.XB jle jae movsb outsb stc (bad) sbb sahf mov andl loop icebp xchg adc rex.W fimul movsl out pop (bad) mov jle rex.X lods jl or mov lods (bad) fimul sbb (bad) pushq (bad) mov (bad) nop jle leaveq and (bad) pop mov repnz movabs cmp stos pop (bad) mov cmpsl sub enterq lock leaveq lods rex.WB and rex.W pop cld ja idivb (bad) mov mov and (bad) lods test (bad) xchg iret lods jmp mov push mov pop (bad) mov (bad) or (bad) pushfq ss sar fstpl add (bad) pop mov imul jmpq cmp mov adc int pop insl (bad) cmp cmpl lret jo jle rex.X jbe cmp or (bad) jne in (bad) (bad) int3 xchg adc mov jg rcl in pop ss gs (bad) (bad) rex.R and cs (bad) sub lods (bad) ss mov adc in nop add notb (bad) or out jne sub xor shlb outsb sub cmp fbstp faddl (bad) pop xchg int3 in (bad) stos outsl xchg rex.WXB (bad) rex.RXB sub stos and and (bad) es in xchg std cli and test cmovge test rex add (bad) and movsb jl sub mov outsb mov rex.WXB jmpq hlt lods xchg imul lret sub fcomp lods scas and mov out jo xchg xor (bad) cld rex.WXB imul cld cli test pop rex.RB pop imul es mov mov pop or or xchg ds push and rex.R jns or cmp int3 sub pop add add rorl fdivrs push fildll scas rcrb (bad) stos pop xchg je outsb test sahf pushq hlt push pushq sbb movabs add xchg cmp data16 (bad) add xchg xchg outsb lods xchg movslq lret add adc add movsl sbb leaveq and mov jrcxz or or sub and rcll xlat mov cmp xor faddl (bad) js pushq sub sub fstps mov loopne sbb movsl add rex.RX outsb (bad) cld roll scas loopne not mov jp push insl push stos mov sub loop cltd pop xchg (bad) jmp in add repnz (bad) (bad) add (bad) xchg (bad) fwait jmp sub and mov sbb (bad) insb (bad) and jp jns std mov adc xlat pop ds out cld add stos rex.XB add adcb loop or and mov in jnp jge cwtd push (bad) adc adc (bad) je add (bad) sbb sub mov push sbb (bad) fs lahf int rclb loope outsb (bad) fs rclb and gs adc imul push cmpl push mov jg sub jge mov movsl pushq jp out iret addb (bad) in (bad) cmp rex.WRB rex.RXB rex sbb lock xchg push jb stc fs mov enterq fcomi int3 xor fdivl jle mov or callq (bad) enterq addr32 xchg ss fdivs xchg mov mov sbb psubq popfq rex rex.WRXB rex.R std rex.RB loop cmc add negb (bad) (bad) (bad) ja or sub fwait jbe add xchg enterq push (bad) lahf mov sbb (bad) jge lret mov sbb mov cmp sub es shl jle ja or jg notl mov add in or sbb iret add add jnp (bad) mov add rex.WRXB fadds mov add leaveq iret or insb pushfq mov ja repz lods add icebp icebp xchg js cmp fs (bad) leaveq mov xor fcmovne ja addr32 fwait lods cmp xchg add sti enterq gs adc popfq rex.WRX outsb mov xchg mov cmp in mov sar pushfq cmp outsl rcr jb lods mov (bad) jne xor jns mov jp add insl enterq mov sbb test (bad) sbb mov and add rex.WRXB (bad) out rex.WRB or cmpsb int jb (bad) adc (bad) rcr add mov rex.WRX (bad) adc pop add adc (bad) es stc and js mov mov std mov jge fiadd jb mov fs rex.WX int fsubs xor jnp cmp pushq add pop and out mov sbb out adc in xchg (bad) int3 (bad) and mov adc rex.RB (bad) jno cli rex.WRB rex.RXB hlt rex.WR sub adc mov (bad) mov pop xchg movabs mov xchg rex.B popfq mov pushq or not (bad) (bad) jb xor (bad) (bad) outsb (bad) cwtl mov int (bad) je adc (bad) mov jg jns popq xor imul int3 mov sub jb rex.RXB rex.R (bad) and mov pushfq add mov sbb or movsb rex.WRXB in add lret (bad) add sub sbb mov out rex.B mov rex.RX fild lcall xchg fsubr mov sahf retq (bad) rex.WB jl xchg fwait mov imul or rex.W fs lret pushq pop xor sbb lods ds lock mov (bad) jnp test ja nop mov scas movabs jg (bad) popq lret js cmp jb jbe xchg andl mov mov (bad) int enterq jmp rex.RX rex.WRXB stos scas add sub cmp ja xor (bad) rex.X rex.W cmp mov std mov push clc add (bad) (bad) rex push and xchg jl retq test cwtl rcll leaveq nop mov (bad) loop sub (bad) sahf outsb and xchg push ficoml fcompl movabs push imul ss xlat testl jns stc (bad) ja (bad) jrcxz lods jle nop and jp xchg out in xchg rex.WXB divb (bad) int (bad) rex.WRXB stc jb es sbb jle mov (bad) shlb pop mov rclb jne jae cs xchg cmp popfq (bad) fwait mov mull cs rex.W je pushq sub push xchg mov jo rcll or fbld jg (bad) rex addps xor xchg push jne orl (bad) jl (bad) mov enterq xor shlb jl (bad) rex.XB pushq or gs xchg mov jno jno mov add cmpsl ja callq (bad) mov jmpq ficom push test add mov cmp out movsb add loope (bad) enterq fs mov xor mov xlat xorl fild sti xchg rex.RXB stc popfq sbb xchg decl (bad) (bad) xchg rex.X jb test sbb cmp mov add movb andl jae add movabs iret (bad) (bad) rex.WR and addl sbb pushq fdiv xor xchg pushq (bad) sub jg iret xchg fnstsw in push add xor mov test jl (bad) jno xchg mov rex std add (bad) jl test je sti fs rex.B jns xor sub xchg pushq (bad) rex.WRXB add scas roll imul rex.RX andl (bad) jg nop test cltd movsl sbb cld mov xor int3 outsb loope lock pop out rex.WR fs jge flds (bad) xor mov hlt andl add or push mov jns mov fstps in (bad) iret out rex.WB (bad) add loope xor fdivrl in mov rex.WB pushq hlt xchg (bad) callq outsb add cmpsl sti fwait sub rex.XB xchg addr32 shll pop fwait add loopne adc cmp or imul mov (bad) je mov movsb incb jrcxz (bad) movsl stos (bad) add (bad) sub cwtl scas adc adc gs mov rex.R jrcxz incb jb imul sbb or mov (bad) movabs cltd jno rex.RXB bnd cmp enterq jo rex.W rex.X and stos add or (bad) jrcxz push add add add scas (bad) and cmp not mov sub pop ror sti xchg ficom incb jne mov fildl es or add push and mov and lods adc xor jg pushq (bad) rex.WRB jae test (bad) scas sbb sub out xor jg sbb xor or adc rex.WXB rex.W adc movabs stc mov out es outsb fmull cmp push fs mov rex.WRXB cmp movabs xchg jrcxz and cli jnp or out lea fisttpl jns jnp sahf cmp pop (bad) cld pop push rex.WR notl cmp hlt (bad) (bad) pushq jno cltd cmp repz test rex.RXB lods (bad) cmc scas ja (bad) rex.RB sub js icebp test movslq sub lods shrl and xor rex.B and pop es mov xchg loop (bad) loop push jnp retq lods addr32 jg jg je jg adc xchg (bad) lock data16 cmp or adc (bad) jns,pt shrb (bad) imulb hlt mov mov rex.WX jne outsl pop mov and retq nop cli fbld push fist addr32 rex.WR repnz (bad) mov rex.WRX pop nop callq data16 fildll pop xchg sbb fs fildll sub (bad) mov or xor (bad) jge mov vhaddps fstpl leaveq rex.WR add (bad) (bad) jbe mov push orl (bad) pop jrcxz rex.RXB fnsave sbb movsb loope (bad) addr32 nop (bad) test shrl (bad) or mov mov (bad) and cmpsb rex.WX (bad) push mov (bad) sbb rex.R (bad) (bad) movsb push cli mov sub shrl out jo mov ja fcomps pop push rorl clc sub (bad) (bad) rex.W mov xor xor lods (bad) pushq (bad) push cli (bad) and data16 lods scas mov rex.WRB and sub jns int3 (bad) jmp jl cmc xor insb add rolb jb js ja adc iret (bad) xchg jb jns sbb cmp pop (bad) and xor in jp repnz cs outsb addr32 repz xchg jg ror adc cmp (bad) add in movb movsb out xlat or insl jbe repz sub jle mov rex.X (bad) test rex.WR xor std jmp and rex and mov jp int add mov push mov outsb (bad) (bad) outsb mov rex rex.WB lret or rex fnstcw adc repz add sub mov int3 mov adc loopne in leaveq gs lret add add cmpsb mov jge sbb (bad) (bad) rex.WRX add movsl (bad) cmpsb cmp retq stos (bad) pop sahf shll repnz leaveq rex.R xchg (bad) outsl out and sub loopne xchg movsb sbb mov and hlt nop outsb (bad) mov outsl sbb rex.WB cmpb jrcxz fldenv mov es jl ficomp push mov jo cmp jb sub (bad) or (bad) xor (bad) mov pop data16 (bad) fwait imul cli rex.WX rex.RX sub lret push (bad) jrcxz decl (bad) jnp outsb int sub ja adc cmpsb rex.RB sub adc and adc sbb jb rex.WRXB ds rex.WRXB scas pushfq enterq js (bad) cld (bad) (bad) clc lods scas sub (bad) addr32 xchg (bad) (bad) cmp rex.RXB (bad) jo fs mov addr32 out lret pop (bad) (bad) in std movsb sub xorl jp (bad) xchg scas jmp fidivl add lahf (bad) jl rcll in and rex.WRX xchg add ja lock rex.RB pop rex.WRXB mov (bad) nop add rolb adc (bad) scas (bad) (bad) sub test ds (bad) (bad) mov lret scas mov rex.WRB add in rex or rex.RXB out jle pop shrd mov mov mov loope sti (bad) callw mov adc ds lret jmpq pop (bad) cmpsb test repnz push (bad) lea pop jo insb jl xchg cmp outsb xchg (bad) std stos (bad) pop add push rorl fdivrs sarb or es (bad) cmp mov pushq rex.RXB rclb (bad) (bad) mov lret cltd ficoml or in gs and (bad) push rex.WXB lahf sbb stc and outsl js retq pushq rex.WR xchg push cmc mov fwait int3 fdivrl loop stos pushq fiadd (bad) insl roll rex.RB movabs jg mov pushq or es xchg leaveq fcoml insl lret (bad) iret and fidivr adc xor jle in cmp out xchg fidivrl cmp sub popfq negl stos (bad) es pop sahf and pop xchg add mov push xchg and jge rex.WRXB stos outsl incb retq xchg fildll add punpckldq js and rex.WB sub jg rex.W pop sahf mov pop enterq cmp mov retq scas cmp mov mov xchg mov outsb (bad) fs add (bad) loopne rex.WRX rex.B cmp nop pop ror jno insl lock out rex.W std movabs cmp push add cld (bad) jne xchg movabs repnz ficoml sub sahf add jrcxz rex.WRB xor rex.RX jbe rex sbb mov out add rex.R sub rcrl movsb (bad) fldt mov faddl cmp xor rolb cmp xchg mov mov movsb rex.XB rex.RXB (bad) add sub or pushfq add nop xor add ja scas xchg sbb xlat and add clc cwtl rex.RXB jae movslq (bad) (bad) rex.WRX sub rex.XB popfq fsubrs (bad) pushfq stos int3 inc lock cld test add adc adc sti add mov (bad) addr32 stos jp mov sahf decb rex.W and cmp rex.XB rex.R sbb adc sbb add jg jp ss (bad) add mov mov cltd sets rcll lods rex.WRX or and sub pop add push insb mov jle mov loop movsl cwtl stos or rex.XB jp rcrb push jg in push sbb mov ss rex.X mov ja push jmp (bad) push mov cmp rclb add jge rex.RX cmp add rex.WB (bad) rex.WXB in rex.WX push cltd or (bad) lea gs lock notb outsl cmp rex.WR add jle mov lahf cmp jle js rex.X movsb rep out add ficoml (bad) ss ja lret push (bad) test add (bad) xchg cmp or xchg sub add jae (bad) outsl mov mov push or add int std sarb (bad) jp in in adc icebp repz adc cmp add movsl stos and add and addr32 imul rex.WRB mov orb cmpsl (bad) pop (bad) repnz out mov clc retq or or js popfq leaveq jb and (bad) callq mov (bad) fwait add jrcxz sub jno or popfq (bad) (bad) mov adc scas (bad) sbb insb xchg in (bad) cmp std fsub sub icebp xchg out rex.WX movabs ds xor xchg shlb je idiv outsl jmpq rex.RX jns in jmp mov rex.RXB hlt add loopne out scas test (bad) pop pop sbb (bad) in fcomip rex.R iret add popfq pushq add retq or icebp xchg std fildl sbb sub (bad) scas add js pushfq int (bad) lea add sbb rex.B xchg xor ss mov test pushfq (bad) adc jne adc rex.WRX add xchg or cmc (bad) pushfq cmp adc sti sub and sbb adc outsb sbb mov rex.WXB xchg movsl lock cmc add out sub int3 outsb xor out mov mov xchg rex.RB scas rex add imul cmpl or icebp mov (bad) gs out test (bad) add adc xchg (bad) lret push hlt sbb cmpsb (bad) add pop stc xchg and enterq (bad) mov iret movsb clc repnz mov jp adc sub outsl xchg or lret sbb mov and add mov out xor (bad) adc fisub (bad) jle (bad) jmp xchg imul std add xor mov (bad) jb jge pop mov mov sahf xlat jbe es in movabs imul (bad) sub add (bad) jbe jb pushq jmpq in rex.W add sub or (bad) rex.RX pop rex loop std xor or jae add (bad) callq sbb cli lret or pop fs sub std dec xchg enterq (bad) and sub in rex.R (bad) (bad) (bad) xchg add mov rolb jp nop xor add or sub sbbl repz xlat and pop (bad) (bad) push jge jmpq movabs outsl jbe pop out mov js insl pushfq incb lods fist hlt mov insb add adc loope and xchg leaveq pop rorl push xchg xor push (bad) loopne data16 ja js add add rex.X adc jnp fs (bad) (bad) rex.WRX data16 xchg or (bad) or fwait add sbb xchg jl jnp icebp (bad) mov movslq jno jle rex.RB rex.R add add pop jb (bad) jno adc push pop or pushq (bad) incl (bad) jp fs movzwl or lods jg (bad) pushq in mov rex cmp add push scas (bad) je es jp hlt movslq jnp sub jle nop pop jg or jl stc add sub rolb adc xchg rex.X or outsb in jl mov out outsl rex.WR rex.WXB jmp div movb add xor sub in cltd sub xor add pushq mov (bad) data16 mov fldl rex.WX addr32 rex.WRX (bad) je push xchg mov add xor test repz repnz or mov (bad) movsb test pushq es sahf (bad) sbb jle sbb (bad) cmpsb push xrelease mov and out xor jns rex.WB int add sbb movsb pop pop jle mov (bad) sarl rex.W bswap and (bad) (bad) hlt movabs in pop testl jmp fnstsw rex.RX adc movsl lahf sub cmp or out mov test push (bad) mov pop loop sub rex.X add cmp (bad) (bad) sub cmpsb in add push subl testb add mov fnsave xchg sahf rex.RB and xor mov ds add xchg movabs test sub sub scas adc add movabs (bad) rcrl je sahf (bad) movabs mov pop rex.RX std insl add mov rex.X mov lea loop mov xor jae xchg data16 mov (bad) mov rcrb xchg fs (bad) xchg xor ja js xor (bad) xlat out push out xchg push add jp pop sbb sub outsb mov mov rorb pop (bad) repnz jp jno xchg fcompl sbbl (bad) xor pop hlt ficomp (bad) pop xchg mov mov mov test (bad) add cmp and mov rex rex.WRX rex.WRXB jns mov mov rex.WRXB (bad) (bad) jbe sub sti lock add (bad) fiadd jb pop (bad) mov (bad) fmuls rex.RX jmp jo push (bad) (bad) jg lods xchg mov insb jg xor mov fs movabs js rex.WB imul push fisubrl movslq rorb cmpsl rex sbb and out xchg jl sub mov adc xchg sbb rex.WR rex.WRX and jne (bad) mov rex.XB nop rex.W rex.WXB pop outsl sub cltd pop adc mov or shrd add out jno,pt xchg adc enterq cmp out je cmp push movslq cwtl (bad) retq xor (bad) rclb (bad) (bad) es incl and (bad) xor lock je (bad) push test jo pushq data16 jrcxz xchg (bad) adc sti (bad) xchg cmpl pop xchg movsb sub loop std and fnstenv rex.WR xchg loopne adc sarl stos jbe add movabs sti (bad) add jns test ficompl rcr (bad) sub mov popfq cmp pop imul mov (bad) jb imull fld (bad) (bad) js cmp mov mov scas or push lahf cmp cmp divl test fs leaveq xchg (bad) jg add mov pushfq negb sti mov movslq or xchg jne adc pushfq mov pop add rex.WB fwait (bad) incb pop outsb jmp add rex.RX rex.X rex.WRXB cmp add stos fistl push test adc neg rex.W sbb movabs sub push scas or jne mov pop sub std mov adc scas mov xchg mov scas and sub cmp rex.WB outsb or mov add xchg xor pushq rex.W icebp push retq rex.RXB mov (bad) movabs callq fild (bad) rex.WRXB std rex.X fstl rex.RB out mov push adc rex.WXB jge jg movsl cli xchg (bad) add (bad) (bad) out (bad) adc add mov and (bad) pushq rex.WRXB xchg cwtl push fsub std pop add sbb (bad) mov in (bad) lea int3 (bad) sub insb cs roll jo or xor jg cmc add add rclb in movabs and loopne add cmp sbb adc jmp xor in push add scas nop fbstp mov jne add add add mov and or push ja add (bad) mov push rolb xchg add mov push (bad) pushq (bad) add movabs xor sbb (bad) mov js sbb cmc sub int (bad) fs add or xchg push pop and lods jp jge xchg cmpl test fist pushfq cmp (bad) leaveq jmp scas jge in mov jp rolb mov mov data16 and lock loop shll cmpsb rex.X fstpt (bad) mov lret jp add or add or nop and xchg rex.RX add cmp (bad) test jnp rex.X in (bad) jmpq out mov icebp xchg add mov mov push out (bad) (bad) add int (bad) fistpll mov (bad) test fildl lock jne ds rex.WXB xchg jnp std pushq xchg cli add jmp (bad) or jle int3 test rex.WB jrcxz adc (bad) (bad) (bad) leaveq cmp scas adc xchg cmp push icebp jle outsl mull adc test xor (bad) movsl rex.WRX ds add or retq (bad) fstpt sub (bad) sahf sub idivl (bad) movabs movabs xorl std or scas jg pushfq test xchg fistpl seta push (bad) and add lods jp out addr32 and test xor (bad) xor (bad) rex.R (bad) incb (bad) add int lock cltd jne fs sahf xor jns or push rex.WB lea cli add push mov xlat mov incl jns and fmul mov and (bad) and (bad) (bad) in (bad) je mov add sbb cmc jl callq rex rex.WRXB xor mov rex.R rex.WR shlb push or jle jl adc fnstcw cmpsb je pop stos jne cmp or cs add (bad) mov jb adc rex.XB pop add lahf (bad) sub jp data16 rex.WX js rorl adc (bad) (bad) mov es jle out cmc hlt sub mov add (bad) mov sbb push std or mov sbb pop add clc test imul xchg movabs insl push jmp (bad) (bad) mov out add retq adc rex.WRX in add sar movabs or and adc lea add sahf nop es mov incl rclb movabs cmc sub xchg sbb pushq or xchg (bad) (bad) jg pop lret add xchg ror rex.WRB rex.RX add fwait sub pushfq (bad) jrcxz mov movslq scas add add jl push add rcr addr32 mov sub movabs out jrcxz jge cmpsb sti frstor rex.WX jmpq sub (bad) ss (bad) add and sbb mov pop add rcrl je mov mov sub add mov pop es rex.WRXB pop jb rex.X fmulp (bad) mov (bad) rex.WR (bad) sub andb (bad) (bad) cmp rex.RB (bad) cmp mov rex.RXB add xchg mov xchg jne pop add pushq jp in jrcxz rex.WRX insl cwtl leaveq lahf mov rex.WRB in xor cmpsl pop (bad) adc fdivrp cmp movabs push cmp push repnz (bad) add or adc je (bad) and xchg sub (bad) cltd fistp add (bad) ficom movslq je (bad) rex.X jle mov adc mov scas rex.WRXB pop sbb mov in fnstenv (bad) mov add (bad) mov (bad) (bad) cltd add subl sbb loopne pushq cmpsb cwtl cmpsl lahf insb (bad) or int3 xchg push xchg icebp fwait (bad) stos loopne sbbl sbb sti hlt jmp enterq push jb mov cltd xchg leaveq test imull push mov test rex.RX (bad) (bad) (bad) rex.X rex.RB rex.WX xchg lock rcll movsb or jg scas in test (bad) mov cmp lods repnz (bad) and rex.WRB mov (bad) mov fmuls mov jae scas leaveq adc loope fcoms and mov mov (bad) rex.WR roll in insl mov (bad) out (bad) std std cmpsl (bad) pop jle mov sbb lret movabs rex.RB xchg pop cmp mov cmp adc adc in xchg out jrcxz not add loope callq test jne std mov mov push (bad) mov rex.WRXB adc fisttp adc fs mov and mov and mov out retq (bad) ja (bad) cli (bad) in push xchg pop add jnp movl lea jb xchg rex.WX stos and je cmp retq (bad) mov orl fldenv add (bad) jo retq mov stos movabs sub jnp rex.RX movsl add rex.RXB rex.RB test cmpsb iret jle (bad) jle or xor (bad) or add (bad) (bad) int movabs rex.RB scas data16 mov es (bad) jg cltd add mov (bad) (bad) lret movslq rex.RXB insl (bad) rex.WRXB lret cmpsl mulb push sbb cld sub jle addr32 xor insb sahf (bad) mov test and add gs mov rex.WXB movsb and addb (bad) shll lret push (bad) lret ja and mov xchg sbb int3 retq sbb lret push or (bad) (bad) pop xchg add rex.W lret pop (bad) test add push test adc xchg cmpl cmp cmp xchg adc xchg sahf mov fstpl outsb int3 lods xor cmp sbb cld jbe and in test repnz add punpcklwd (bad) mov or rex.W movabs in scas rex.X adc (bad) push test lahf in xchg xchg xchg je movsl adc rex.RX fwait outsl jne in in outsb out adc (bad) cmp xor jl stos and test (bad) cld imul (bad) jg fdivr pop js cmc out rex.WRXB push movsl fcompl pop lret adc (bad) pop cmp data16 push std outsl cs or mov lock mov test add adc push movsl pop nop (bad) sbb sub addr32 pushfq jge xchg jl retq sti out pop cmp imul jae popfq (bad) mov jl roll push sbb insl test jne loopne lods jnp (bad) test js xchg sti jbe in out jnp lret fsubp notb lea cmp stos outsl jne shll fs leaveq out (bad) loop stos insb es fucom cmp (bad) movabs sub cmc fwait and jl fimul (bad) shrb xchg fcomps movslq rex.WRXB ss add or (bad) adc shrb scas fildl mov js in jl faddl cld or jne rex mov cmpsb jns xchg sbb out sbb (bad) add insb rex.RX in jns rolb adc mov mov test in mov loop movabs jno mov test xchg jp sbb (bad) (bad) loopne xchg (bad) sbb pushq out (bad) jg rex.XB rex.WXB (bad) leaveq xchg jne xor std add retq adc mov (bad) adcl je sarb rex.RB js pop jmpq (bad) std fldt or rex.WB hlt sbb and flds outsb and retq subl clc mov add (bad) out mov jns push rex.RX rex.R fdivrp (bad) rex.WRB and rex.RB and pop add sti rex.R cmpsb xchg xor xchg jl sahf add fidivr pop sub rex.R mov (bad) (bad) pop add lea in xor cmp (bad) jg (bad) jmpq js sbbb sar int3 pop (bad) cmp rex.R rex.XB and pushq movsl callq enterq jge xchg sbb sub and out icebp ja decb fdivr jle mov jrcxz fdivrl ss (bad) (bad) je rex.WB gs stos add add mov (bad) and es (bad) (bad) xor add scas xchg movslq icebp (bad) out mov sub push pop cli mov faddl sbb movsl (bad) sub jnp sub xlat xor xchg rex.X xor mov xchg jmpq or rex.WR shr (bad) add push xor loopne pop imul (bad) mov jl add scas mov jbe mov mov cmpsw add xchg or mov rex.W mov cli stc jns mov add scas xchg or retq maxps cmp (bad) or jbe mov (bad) mov mov sarl rex.WRX add jp neg mov xor (bad) fldt add push rex.RX imul (bad) in ss gs (bad) je adc jb scas imul mov (bad) (bad) jno fistpl sub rex.X (bad) mov gs js fdiv (bad) scas add pop lahf leaveq sub jns cmp fs int3 fmuls mov loop rex.RX in leaveq stos sbb cltd sub fidivr lods cmp xor jbe xor clc (bad) mov mov js jns or mov movsl jbe rcrl (bad) in rex.WX and and jg std rex.W pop and pop jl jbe mov sbb and retq add sub mov rolb pushfq or and (bad) jp mov (bad) sub (bad) push nop xor js loop cmp and cmp mov (bad) jmpq movslq (bad) mov movsb (bad) jl pop movabs or and pop add (bad) add (bad) rex.WRB push sub rex.XB out sbb (bad) xor adc add pushq cmp fdivs cmp pop shll orl adc add loopne pushq add xor add xor xorl add add add cmpsb (bad) mov (bad) add rex.X cmpsl fbstp mov leaveq movabs pop rex.WXB add cs xchg xchg cltd retq jb or xchg xor add jle add pushq push mov cli add pushfq je rex.WR mov (bad) je lret mov callq retq js (bad) adc test add mov cwtl gs fdivl add mov sbb xlat lret adc mov loope jb and (bad) mov outsl out cmp sub decl xor rex.R es fiaddl in (bad) cmpsb rex.WRX add gs or adc jg mov (bad) mov cmp xor (bad) fadds test insl push addb mov adc stos sub and in mov out and shrb (bad) fdiv icebp and mov mov adc jne rex.RB push pop cld or add pushq sub xchg jp (bad) xchg or sub scas (bad) pop cld jne mov adc scas shlb xchg callq jb jno ljmp or add mov test sub jge add xchg cmp jb and sbb sbb lods rex.B movabs ds xor fprem iret and icebp and add xchg jl gs add push mov (bad) rex jb xchg lea add xchg mov cmp add add adc stos fildl ja mov rex data16 outsb pop movabs xor mov mov mov push pop out rex.RB pop out sub and adc mov lods (bad) int test or popfq jg rex.WRXB addr32 rex mov sub add mov movabs lahf push shrl orl jmp movabs (bad) (bad) pushfq rex.WRXB add repz and stc sub jbe xor cwtl (bad) movabs fs jp leaveq (bad) push jnp add mov fs pop int3 push mov popfq (bad) std pushq pop rex.RXB loop xchg jmp mov mov je add push cmp (bad) xchg rex.WB ja cmpsb ds pushq std mov rex.WR repnz (bad) pop fst cld xchg addr32 jp cmp (bad) mov mov shlb rex.W add insb loop (bad) pop imulb jp mov mov enterq andl cli clc jb sbb in test jbe mov rex.WXB mov mov pop mov add cmp insb xchg jae sbb movsb rex.WRXB and jne jg (bad) or add (bad) sbb insb mov faddl cli sbb stc and test lock (bad) pushq test rex (bad) jp cmpsb jle or mov hlt jp rex.X fwait nop push mov mov xchg test add push movabs (bad) pop mov outsb rclb mov jno jmpq adc loopne rex.RXB sub data16 nop mov add add repz mov sti add js pop add cmc xchg movabs clc or add jg sub sbb loope xchg add shlb xchg (bad) rcrl lea lock xchg retq std mov out (bad) rex.WR (bad) iret adc stc outsb stos push jp (bad) jrcxz sbb repnz jle je mov jbe jns rex.RXB (bad) jp scas push jmp xchg adcl jmpq retq (bad) addr32 push (bad) mov rex.WXB callq mov jb in jge cld push mov jo pushq rorb (bad) sbb andl mov fsts jbe xchg and sub jno lahf int fsubrl std push xlat mov sub sbb notb jge cmc loop int3 imul rex.X jle stos pushq mov rex.R jle out xchg and addr32 (bad) xchg (bad) or push (bad) cmpsb and (bad) lods (bad) (bad) add (bad) test cmp mov adc int3 cli fnstenv xor jae mov (bad) imul (bad) test xchg jnp xchg pushfq orb (bad) int3 push and (bad) xchg mov (bad) pop or jns push xchg (bad) ja std sbb (bad) xchg push outsl jl push psubb push incl add sbb out test (bad) or (bad) pop ss mov ds mov add out lret addl pop sar mov jmpq add out rex.W adc rex.WRB popfq pop fnstenv xor mov je jb movabs rex.R ror jb mov xchg jle pop xlat orb pop add mov push lret (bad) cld add pushq sarl add add or (bad) add jmpq sahf retq or add lock retq rex.W mov xlat adc push (bad) fs (bad) (bad) and cli movabs xor insl (bad) movsl repnz test pop cltd (bad) cmp (bad) rex.RB es add movsl mov rex.XB rex.W rorl mov mov jrcxz rorb xchg rcll movabs orb jl lea (bad) mov scas (bad) add cmp clc iret jrcxz add jl (bad) add cwtl mov jb (bad) (bad) (bad) js hlt andl pushfq add rex.RXB cmp rcll pushq (bad) test callq retq lahf imul cmp add hlt test sub (bad) int3 lahf push sbb jl faddl (bad) rcrl mov jl (bad) rex.RB mov add fs mov movabs xchg add (bad) or add mov out insl add std pop adc test rex push jns pop xchg rolb sub xor lahf lods in cmp rex.WB xchg add xor add (bad) cmp mov pop xchg retq enterq sub movabs add sbb rex.WX add loope xchg sarl add retq xchg sbb movabs add ss leaveq in lea movabs fild jp loop xchg mov addr32 adc bnd out or add js (bad) lock movsl cwtl fildl lahf stos rex.WRB cs out xchg mov (bad) fdivrl scas addr32 sub movabs (bad) cmp (bad) xchg movslq sar stos imul (bad) sahf (bad) mov add (bad) jb xchg xor rex.WB scas fs jp and add cmp test push cmpl add rex.WB lahf fdivrl pop rolb jnp jae jno mov fwait bnd jp sub ja lret cmc (bad) jl roll jno add add movslq je test sub add pop (bad) mov rclb (bad) fiadd roll mov cltd add rex.WXB (bad) push adc mov cmp movsb imul notl pop out ja jo fisubrl test add int3 jbe lods or mov fbstp adc and (bad) mov mov add sub xor int3 stos movsb add cmpsl sar (bad) and add xchg test jge movabs (bad) add lods stc imull sahf in je cmp hlt mov fwait leaveq (bad) jg jns cmp fsubrl int3 rex.WB movabs test mov jge xor push (bad) stos and gs jmp cld rex.WX fiaddl (bad) cmp jle xor loopne movabs push add (bad) (bad) sahf loop ja sub mov (bad) data16 and pop nop outsb (bad) popfq rex.WX mov jl adcl xor lods js jo loope cmpsl in rex.WRX rex.RB xchg (bad) stos outsb (bad) xchg cwtl (bad) out push xor nop (bad) (bad) (bad) test xchg push xlat fwait gs loope adc cs lods sub sbb jp ja (bad) xor add push pushfq nop jrcxz xor and in mov scas (bad) out sbb (bad) jae jno,pt (bad) xlat mov adcl and divl jg cmp jmpq ljmp pop mov (bad) xor (bad) cmp sub (bad) jg pop fldt pop icebp mov jo fidivr pushq mov pop (bad) sbb (bad) rex.RXB rex.WRX fs jnp jrcxz cwtl xchg mov or loop xor (bad) imul rclb push add mov jae test push jmpq mov (bad) mov test sti (bad) jmpq cmp rex.X iret js sub cmp sbb xchg roll sbb loope (bad) or movsb lock sub cmp xchg xchg test lock mov xchg test pop adc idivb or cmpsb (bad) sub cmc or movabs popfq jp movabs jnp lahf (bad) (bad) in add (bad) jne rorl or add nop xchg add sub movsl std jns mov lret in out mov xacquire mov movabs in out and add pushfq cmpsb pushq in sub jle test sahf mov sub jb push icebp pop testb (bad) jb cli adc loope add (bad) pushq insb js add sbb sarl pop jp mov imul ficoml xor xchg sub repnz (bad) sub mov jae notl in iret mov add mov movsl add mov and sbb add (bad) pushfq or jg in adc sub (bad) fdivs mov in (bad) scas stc cli fs fisub mov je push loopne and (bad) adc add xorl movslq add jo divl xchg mov in cwtl out popfq fimul addl cmc xchg (bad) and (bad) xor andb pushq jns (bad) jne (bad) cwtl data16 adc (bad) jle outsl sub out repz test (bad) loope jle loop cmpsb xchg jp (bad) std pushq jno jmp jg sub mov fdivs pushq incb add cmp fiadd add push and loope pushq (bad) iret rex.RX adc mov stc xorb sub popfq cltd add xor sbb rex.WXB pop mov mov (bad) mov and pop sahf loop js (bad) nop fwait rclb or (bad) sub add add xchg adc fsubrl add mov xchg pop add enterq test add jge jb imul jmpq movabs test mov xchg jge stos pop (bad) cmp (bad) out nop mov adc xchg and (bad) imul pop mov lcall add mov callq rol rex.WX add jp add sub rex.X (bad) (bad) stos (bad) scas addl movsb sbb (bad) pop push xchg fstl or jle or rex.X mov cmp sub sbb push add mov jmpq lea incb add imul ss in add mov sub (bad) mov mov add imul leaveq test jp xchg in imul (bad) mov rex push imul lods (bad) jl jb jb jns (bad) sbb sub loope,pn cmp stos add stc fstl fidivl cmc nop rex.XB or jg mov add repz cmpsl rex.RX add add test rex.WB cs repnz mov add pop add (bad) fadds cmpsl or pushfq jne adc data16 adc lods sarb adcl fbstp push xchg xor cmp and jp mov cmpsb jno lock movabs (bad) cmp mov sub data16 rex.WRXB cmp (bad) xor fsubrl cmp cmp push js loop mov mov (bad) mov movabs xchg jle (bad) cmova jrcxz jge (bad) repnz mov stc loope pop in push je cmp mov out sarl mov nop outsb jp (bad) or test sbb stos rorb add ds ss xchg test mov shlb ja int imul rex.WR data16 mov repnz std (bad) (bad) sti add out mov (bad) out (bad) cmpsl hlt add jg mov out mov pop loope mov mov sbb sub xchg sub pop data16 adc clc sub stos std out (bad) mov and (bad) scas (bad) int3 jb push fcomps cmp imul outsl mov movabs rex.WX push lods adc in (bad) mov ja jb cmp callq jmpq std (bad) and test (bad) shrl xlat mov pushq and lods add jb shlb sbb cwtl mov fiaddl add cmp rex.W lret fld data16 xchg jnp (bad) js add add xlat (bad) push sbb (bad) adc cmc cmpsb stos rex.R add loopne and fimul out pushfq movslq icebp add rex.RB rex.RX lock cmp add jbe pop and jp xchg pop (bad) rex.RB in rex cmp add xor add or add (bad) imul xchg in mov test pushq (bad) lea cmp jl pop add loope subb roll pop fildl ss sub jp (bad) jb rex.XB add sbb (bad) (bad) (bad) mov lods enterq test (bad) sti adc es hlt nop mov in jle jp mov pop mov jl xor (bad) and rex.RXB add rex.WRX es xor push lock jg jle mov add sbb shl sub lods cli jge movabs inc xor (bad) add adc (bad) or sub mov add rex.RB mov sbb rex.B ja add push fisttpl push xor jg fist jp hlt mov (bad) sahf loop add in mov icebp imul add jg ffreep sub rex.RXB xchg rcrb (bad) decb test (bad) (bad) in imul and adc lahf pop rolb (bad) pop sbb mov stos movabs cwtl sarl outsb push lods lods data16 (bad) pop lcall fiadd in add rex.W (bad) (bad) push adc rcll adc or fcomps (bad) rex.WR lahf or cmp icebp jbe fsubl (bad) rex popfq jne stc add xor test mov ds data16 rex.WB std add (bad) jmp or push (bad) (bad) mov out mov callq sbb (bad) pop jle xor push (bad) rex.RX lahf lret (bad) xchg outsl add xchg cmp add scas mov jle fadd xchg (bad) cltd adc xchg add in sub jb outsl movslq rex.X xchg repz std jp adc (bad) mov and rorl cmp jg (bad) cmp notb jl decl add mov rex.RX cs push add sahf lods iret (bad) or (bad) lea int cmc xchg xchg jle lret sbb jb rolb cmp sti sbb out fild ja mov xchg std fs fiadd lock (bad) mov test jb sti cmp xchg or retq (bad) cld loopnel rex.WR repz or int3 xchg stos flds xorl enterq jg push xor scas adc rex add imul mov rex.XB pop in jb fnstcw sub pop (bad) (bad) (bad) (bad) gs (bad) rex.WXB jl push jb cs mov or je fdivrp pop repz xchg add loop imul jle lods mov xlat (bad) nop xchg (bad) jmp jg idivl jnp sbb add movabs scas (bad) (bad) mov add mov pushq add mov roll imul fs test add mov outsb sar stos cmpb jo lret jle add outsl rex.WX insb js xlat sub nop mov sbb data16 stos add xor xchg stc jg test xor (bad) rex.WB lahf jbe mov js out out mov mov movabs cmp and test rorl jp pushq sub rex.R clc jp outsb adc xchg or cwtl movabs xchg sbb mov (bad) ds rorl (bad) outsl retq sbb jge add (bad) es xchg sbb or xor out insb xchg in or scas rex.WRB add pushq xor stc cmp movsl (bad) sub lahf sbb cltd mov mov mov mov push sub outsb add pop out stos add (bad) mov mov xchg rex.WB sbb jg leaveq jle add sub popq rex.WX rex.WR cmp loope,pn (bad) pop leaveq cmpsq (bad) outsb fist mov cwtl fidivr fdivrl jb (bad) mov xchg push std rex.WX js add lock (bad) in rex.R ds xchg (bad) (bad) fiaddl xlat rcrl or cmpsl pop (bad) rex.X rex.WX and add (bad) adc jle sbb adc lock (bad) mov jg pushq movl pop (bad) repz es scas rex.WRXB ss sub sbb add mov add (bad) push pop or jns popfq callq js roll sub cltd mov adc fdivrp xchg hlt mov (bad) jp rex.WX rex.X int mov add rex.WXB mov pop insb sub push sub xor mov add xchg jbe jrcxz add (bad) movabs rex.WXB hlt insb push add test mov cmp add push pop or insl (bad) mov test (bad) stos add enterq pop (bad) (bad) pushq cmpsb pop jbe mov (bad) sub leaveq testb iret mov add enterq cmp callq fsubrs adc div push (bad) scas rex.WRB sub mov mov rex.WRX sbb add lahf xchg rex.WX gs adc jo cmp hlt (bad) clc fmull pop jmpq sub icebp pop imul rex.WX or or rex.B cmp (bad) fmull or sbb sub rex.R rex.WRXB addr32 movsl pop jp lods add cmp mov and jo sbb incb cmp retq jrcxz mov (bad) fstl rex.WRXB je cmp adc icebp jmp rex.WX cltd vmovups pop (bad) jae mov add cmp sbb fistp xchg rex.RB es icebp mov in adc jb repnz je fsubp (bad) hlt cmp mov mov and xchg push push xor add frstor lock mov repnz addb (bad) add mov movsb push mov jbe lods rolb and jg mov rex.WR jb or in jae rex.WRXB insb pushq std test roll jrcxz pop and (bad) pushfq sti add xor xor (bad) rorl xchg out fwait push gs icebp add (bad) je pushfq ds roll cmpsb sub jle cmp and rex.RXB add add ds stc add mov movsq jl add push or loope lea rex.R cmp stc movabs std shrl (bad) cmp or rex.WR in add test (bad) je sub addb sahf adc js jg cmc rex.WRX push loop adc (bad) sub mov lcall (bad) ds mov cli pop (bad) rex.WRX ja mulb rex.WXB icebp cwtl mov add sub sbb cmp outsb sub fsubrs push fldcw icebp add mov rex.XB xchg mov add int3 mov ficoml rex.RXB add add add fidivr push jg xchg imul mov rex.X xchg mov jge mov loopne push pushfq rex.WRX movsb sub adc (bad) and add mov sub cli xchg jp mov xchg sbb leaveq sahf jg xchg jb ja rex.WB lahf mov mov jp or (bad) rex (bad) sbb (bad) hlt rex.W and cmp (bad) nop add xchg add sub jae movsb cld je test jbe and jg (bad) sub add add rex.WX pop ja pop add ljmp add movabs or xchg fs add mov cltd add sbb ss mov rcrb jg xchg cwtl in sbbl adc int movabs xor sbb movabs add or leaveq or test jg cli pushq test je cmc and mov popfq test sbb je test sbb cmc rex.RXB (bad) (bad) push andl xchg stos rex.RXB ss cmpsl (bad) or (bad) mov push (bad) (bad) addr32 jmpq fucom sub (bad) and rex.R rex.WR add adc (bad) int (bad) rcrb mull push fsincos addr32 xchg neg cmpsb sub mulb pushq sbb jp stos fwait sub jmpq cli (bad) and adc jnp retq in movsb sbb outsl (bad) and pushq test insb cmpsl (bad) and (bad) flds xor insl cmpsb push ds or test pushq lahf pushfq rolb fstps (bad) in pop pop insl (bad) mov jg movsl bnd rex.WB mov rex.RB ds (bad) xchg fistp mov imul adc roll insl rex.WRB (bad) jo rex.WXB outsb rolb (bad) add cltd mov xchg cmpsb sub fcompl icebp cmp (bad) test leaveq mov test int3 rex.WB rex.R or sub cmpsb movslq or rex.WRB (bad) cmp mov jae stos mov loopne lahf ljmp pop (bad) int (bad) callq (bad) pop ja (bad) imul outsl mov (bad) mov stc push mov js pop or out ss (bad) mov loopne cmc cmp insb rex.R insl jae xchg mov pushq (bad) popfq fwait mov add xchg push mov pop stos pop sub mov jnp outsb je cs xlat scas movabs rolb (bad) jge and pop jrcxz loope sub test xchg retq jnp (bad) or push leaveq lods jno cmp pop pop mov jns in sbb cmc pushfq rclb add movabs jb enterq (bad) cmp mov in (bad) test callq rex.WB xor xchg jno (bad) pop mov mov xor xchg mov test add ror out repnz lock add adc add test movabs xor jmpq xchg mov (bad) outsb mov pop jnp rex.R leaveq pop rex.RX adc sarb in gs cmp (bad) rolb jle clc fsubr out mov callq mov lret fs xchg loop and fdivrl sbb imul movabs sbb sbbl (bad) je or add andb push jbe add in xchg xor and mov mov xchg stos xlat add inc jb or (bad) add sbb cltd rex.WRX jb (bad) cmp fidivr (bad) cli jl (bad) out add push icebp cmp xorb (bad) lcall add xchg (bad) test loope fwait cmpsl jle jnp cmpsb push mov and cmp cmp (bad) add scas pop xor rex.RXB iret mov pushfq mov jl fisubl add mov or mov mov movabs negb pop out fisubr or mov (bad) xchg movabs pop loop out pushq (bad) in rex.R gs jl xchg push xchg outsb (bad) out mov rex.W pop lret (bad) insl (bad) test pop cmp cltd (bad) add adc or jnp or jb testb add jae and movabs mov push enterq sub add sub fs add sub sub stc rclb rex and add adc std jb test insb cmp jne (bad) xchg lea lret xchg cmp lods (bad) add fbstp lock pop cs adc jg mov mov roll xchg mov out mov lret or add (bad) adc sub or addr32 and outsb je shlb (bad) (bad) jb adc ror mov movsl sub add jg or (bad) mov jp ficom push and pushfq out lea (bad) push push jns (bad) mov cmpsb popfq jg movabs pop add mov cmp (bad) movslq xor (bad) movabs rolb or scas in rex.WB mulb add rex.R jbe,pt pushq cmc mov adc rex.XB push retq sub mov rex.R jns rex.RX nop and sbb adc mov adc insl faddl rorl mov rex.WXB enterq (bad) and cli add movabs add shlb movslq add (bad) (bad) int3 and (bad) xchg pushq sub rex.WRX rcr add (bad) jnp iret fcmovnbe and imul add int rex.WRX mov mov in xor (bad) pushq xor mov sub stos (bad) (bad) mov rex.WXB movsb callq sbb (bad) xchg js xchg rex.W cmp push jb jno stos (bad) rex and sub pcmpgtd gs add cltd adc sti fiaddl je movabs rorl mov adc cmp jo stos insl or and sahf movabs rolb (bad) mov movabs cmp addr32 fwait and jg sub mov add scas xor shr (bad) cmpsl mov (bad) push mov (bad) out and cmp in cld rex.WRB add in jnp lock and adc (bad) rex.W movabs callq add imul rolb pushq icebp cmpsb and jg pop and add xor pushfq sbb mov jle lea mov sahf out (bad) add pop sahf adc jl and callq (bad) (bad) and addl or (bad) (bad) retq mov jb sub xlat rex.WRXB cmp (bad) retq std data16 fild jo shlb rex.WRX pushfq add push rorl (bad) cmp movb add js or jrcxz xchg adc (bad) add (bad) (bad) sub pop rex.RX mov mov loope out lea (bad) fs add add push lret outsl (bad) add (bad) (bad) rex.WR mov retq cmp loopne cmpsl push add sbb jrcxz pop mov or push je addr32 xchg (bad) jle mov jmpq (bad) (bad) add out sbb xchg imul rex.WRX jno jrcxz rex.RXB movabs cmp movabs fs lea lahf (bad) nop cld pop cmp in (bad) jae pushq retq mov jnp and mov jg popfq sbb add pop cmc mov (bad) mov je add jmp (bad) cltd jle fimull repnz std js jge pushfq jle pop cmp mov hlt lahf jle xchg incb xchg xchg (bad) sub add sahf add movabs sti add mov and (bad) xchg cltd es (bad) xchg push callq nop jb cli adc not test (bad) rex.RX rex jge mov mov lods xchg or jrcxz jno (bad) push (bad) pop mov cmpsb mov add insl add jb (bad) sub mov (bad) (bad) addr32 stc rex je xchg rex.WB add lret je fwait (bad) test fstl xor add mov sub rex.W cmc add jrcxz pushq int (bad) cmp (bad) (bad) test or cmp out jne mov ja (bad) mov outsb pushfq mov es mov jnp bswap sub add adc mov (bad) mov (bad) std (bad) imul mov sbb mov (bad) je gs sbb add cmp rex.RX repz jb movabs stc (bad) rex add pop imul adc fwait xor mov jp test (bad) pop pushq (bad) rex.WRXB stos jbe and (bad) (bad) rex.WRX mov imul push jl iret addr32 jae mov subb (bad) stos ja lods iret rex.RXB adc in add sti add mov rolb xor rex.RX cmp cld (bad) xor add (bad) jno cmp mov cmp rex.WX and sahf mov insb add pop sbb sbb add mov jle (bad) (bad) mov ds addr32 insb leaveq out lea pushq lret pushq rex.R lret rorb cmpsl (bad) cmc testb popfq stc lret adc jb add jge xor add mov pop push loope xor xchg lret add gs rex data16 scas (bad) add out sub (bad) jge sbb cwtl (bad) sbb xor pushfq fldt scas xchg movsl mov lea fwait mov comiss mov add add leaveq mov sti xor and test add rex.RX xlat or retq mov rex.WXB retq rex.X adc jrcxz imul (bad) add pop bnd jmpq cld sub (bad) (bad) add cmp mov int pop (bad) sub (bad) fstpt imul add mov rex.RB mov fnstsw and jno movabs fsubs add (bad) scas out fs cmp (bad) cmp jae sub lea or rex negl rex.X rex.R add or and sub out mov mov jmpq test retq in lods test int cmp add hlt (bad) in adc xchg fsubs int3 out rex.WRXB push mov rex.X gs movslq add imul (bad) sub sbb hlt rex.W (bad) mov add fbstp and push lods (bad) jle rcl or cwtl (bad) (bad) xchg add push icebp lods jrcxz jp mov movabs xor xchg cmp callq (bad) movsl enterq loop cmpsl jne jmp jg pop scas xchg jl (bad) mov fisttp add jle imul jne jg mov xchg add jnp sbb outsb and (bad) or pop pushq insb (bad) addr32 xor std in sub rex.RB pop sbb mov add (bad) cmp fstpt rcrb icebp movsl outsb rex.X movsb in pop (bad) xchg fdivs add in and (bad) loope out mov outsb pushfq add add (bad) xchg stos gs mov jne adc pushq xor repz rex rex.WRB (bad) add test xor pushq jg (bad) pushq imul int sbb pop hlt and (bad) sub faddl or rex.X sti push hlt out mov sbb rex.B lods pop cmp jge roll add insb movsl rex.RB xor (bad) (bad) imul and jo rex.XB ds movabs bnd mov (bad) mov add pushfq push add (bad) fstp (bad) jno add push sub js mov pause int3 or sbb mov nop add mov movslq iret jrcxz jp adc and fldl lahf out rex.R mov xor jle (bad) mov push rex.WB out js (bad) rex.WR adc add sbb jae in outsl add mov push xchg sub and (bad) mov push add sub lret nop loope (bad) rex.WX cmc mov rorb sbb xchg sub imul or (bad) add idivl or outsl (bad) add popfq test jge add sub or in jns (bad) sub push addl sub rex.R stc sti jle (bad) jb sub rex.W rex.WRB movsb add (bad) (bad) addb notb outsl xabort cwtl mov cli sub mov movabs adc add rex.WRXB add push xor (bad) jnp (bad) int cwtl xorl add out rex.RB mov out enterq mov rex.WRX rex.WRXB cltd xchg add (bad) movabs cwtl mov and ss mov jo rex.WX cmp lock push push rex.WR xor xlat mov pop divb cmp (bad) jmpq fsts pushq shlb popq imul xor xlat stc iret pop out rex.X jmpq (bad) xchg pop xchg clc insb mov push xchg add rex.RXB leaveq and gs loopne repnz mov es test movsb mov (bad) (bad) xchg add or xchg ja scas retq fistp pop mov cld add roll or sbb insl jnp jno mov add mov int cmc fiaddl pop (bad) je (bad) adc cmp mov pushq hlt jle jl popfq fdivr rex.WRB jmpq xchg or stos enterq xor repnz pop leaveq out cmp int js push xor (bad) mov xor int3 ffreep pop (bad) lret pushfq add (bad) sbb rcrl rclb sti or xchg mov rex.WRX rex.B adc mov mov (bad) (bad) (bad) data16 (bad) pop pushq (bad) fisttp jg xor pop xchg push divb jbe pushfq sub add (bad) mov mov fadds xchg jg sub cwtl ja out xchg fiadd hlt xor test xor movntps push mov nop add or pop xorb add mov (bad) xor rex.W ss in mov rcll ja xchg stos jbe sarb mov (bad) mov add fcomi fcompl adc jns retq vmovq cld mov iret (bad) mov mov movabs sub retq jle adc and lods (bad) jo imul out cld rex.RX out nop in mov and xchg (bad) rex.X sbb push add test mov insb lret pop pop sbb (bad) push sbb (bad) ds fcmovu fcoml cmc sbb flds insl scas jg xchg testb (bad) pushfq xchg lret rex.WX mov mov xor pop sti xor jne cmc cld test gs es or iret (bad) jg lods rex.RB (bad) sahf lahf sbb or (bad) ja adc push scas (bad) add pop lods push fimul add movabs push lods imul cmp or fistp cli add stos (bad) rex.RX adc (bad) imul pop icebp in add imul sahf rex.XB (bad) in (bad) mov rex.WX add iret xchg and or fs in in mov add jbe jge rex.WB fs mov pop rex.WRXB jle movabs (bad) cs insb test gs int3 movsl ss and sbb xchg rex.X in negb movabs es adc in (bad) movabs mov fs mov add insl pushfq (bad) in add cmpsb pop test sub jae and roll movabs push imul sub mov roll pop xor jge ja cmpsb movabs (bad) cld callq fdivrl nop jle (bad) movabs movslq mov popfq (bad) nop lahf xchg cmp add cmp jo (bad) jb add fbld pushq fist mov rex.XB push fwait (bad) repnz fs cmp (bad) rex.RB rex.WXB xchg std pop (bad) mov js cli lods mov ja sub outsb movslq cmp xchg adc fcmovnbe push add rex.WX gs (bad) (bad) (bad) (bad) mov sub xor ja xchg sub es and sbb jo mov movsb pop (bad) (bad) retq (bad) mov xor roll mov (bad) adc repz (bad) loopne xchg cwtl (bad) movabs insb add jo push cmpsb jo movslq adc jle mov int3 cmpsb rorb cli jnp je jle fisub sub and jge jbe pop xchg clc lret (bad) pop jne (bad) (bad) lods rex.WRXB addl rex.WRB imul push sbb divb (bad) jns add push add rex.WRB (bad) mov (bad) (bad) fstl rex mov je mov pop rex.WRB and rorb (bad) (bad) lea (bad) movslq mov xor mov hlt and add pushfq clc cmpsb lcall (bad) scas movsl add (bad) outsl sarl pop lahf lods leaveq test idivl pushq add pushq cli xor je xchg mov nop xor add jp xchg mov add (bad) lret pop ja add cmp add pop jp rex.WR sub stc fmuls xchg mov adcl lahf add jg popfq add ja (bad) xor adc mov add movabs test or (bad) xchg rex bnd in xchg or jl (bad) cli pop idivb stos insl add adc sbb or rex.X sub pushq cmp jl sbb pushq sbb add pop divl (bad) mov xchg xchg enterq movabs sbb xor sbb (bad) (bad) rolb (bad) jo xor mov lods mov mov (bad) (bad) cmp sbb pushfq sub cmpsb ja rex.RX movslq shlb rex.RB (bad) (bad) (bad) jns sbb mov psubq add fnsave adc add sbb add out cqto cmp (bad) mov push jge repz and (bad) and mov jrcxz lods add (bad) push jle add and push rex.WRB lods (bad) insl (bad) loope xor pushq mov (bad) mov imul cld movsl pushq add xor (bad) sub mov cmpsl xchg rex.R insb fnstsw (bad) lahf mov out stos in add popfq (bad) pop js (bad) xor sahf jno sbb push adc idivb rex (bad) xor outsb (bad) mov ffreep pop fdivrl add cmpsl and rex.X xchg fistp mov sub jno add add add rex.WXB fnstenv mov or (bad) add cmpsl stc rex.WRXB (bad) (bad) adc rex.WRB jae rclb add sbb test pop int cwtl or (bad) rex.WXB add xor rex.RX cltd lock in movabs jl (bad) (bad) or mov ja movabs fcompl xchg incl imul nop ds movsb je mov (bad) add rex.WXB push movabs pushq mov sahf je loope cmp sti jmp rex.WRX (bad) rorl (bad) adc scas cmp mov add push ja cltd sti add movabs imul add pop iret or jg jl push stos rex data16 and jns pop rcll jp jp int3 cmpl mov push (bad) (bad) movabs stos hlt or mov add in add rex.WXB sub jns,pn sub fs rex.XB xchg cmp xchg rex.B subl rex.R cmp vmovdqu mov rex.RX jno pop cmpl xchg out sbb insl enterq movsb xchg adc mov js cmp (bad) rclb and and push ffreep pushq gs retq add sbb ror pop (bad) cli je pushq or rex.RX loop push xchg xchg add (bad) jl (bad) (bad) movabs mov lret mov push jnp rex.WRB rex.B fdiv (bad) rex.WX mov jns (bad) cli enterq (bad) jnp or add test xor nop mov jrcxz xchg mov fildl movabs mov add pop adc shrb and adcb int add std xor jle xor leaveq fwait (bad) push cmpl jge rex.WXB sahf or jmp cmpsb idivb add (bad) pop jg js mov mov sub sahf xchg pushq jle andl adc movsl in jmp (bad) pop jrcxz faddl mov mov (bad) jo fwait cwtl jo repz rex.R fwait xchg and and xchg mov push std mov movabs xchg mov rex.X test callq fiaddl fadd sub pop jbe or xchg loope (bad) (bad) vpaddusw or jnp push xlat data16 cmpsl sub (bad) cmp sub and imul fbld (bad) rex.B rex.WXB pushfq push loope mov jrcxz out (bad) scas jb retq notl (bad) hlt cmpsl pushq and rcr stos (bad) (bad) ficom xor test cmp lcall callq lock movsb pushq (bad) rex.RX ss and popfq or cwtl fildl stos pop out (bad) mov pushq mov or (bad) add sbb cmp add adc sahf jns retq mov enterq cltd mov mov jge stos mov mov mov and push mov jp adc (bad) (bad) out jg adc clc pop sarb retq (bad) outsl mov add xor jp jns rex.WRX or sub and callq add std jbe add sub orb pop cli cmp loopne test cmpb out fisttpl adc repz (bad) popfq imul adc loop pushq add mov xchg movabs jp sti sbb addr32 rex.RX scas sbb lea in out test sti retq mov and test (bad) gs jb push imul rex.WR add insl xlat or vmovshdup add cmp mov jb (bad) mov (bad) popfq cltd cmc push mov icebp js rex.WX (bad) xchg rex in (bad) adc add (bad) add rex.RX xchg retq push xchg (bad) cmp pushq (bad) pop jb cmpsl rol push jle mov in add pop fwait or stos cmp scas add cltd cmp outsl cmp fs rex.WXB push mov and std sbb mov rex.WRXB movslq jge add xchg adc (bad) add in rex.RB add mov cmpsl sub cs xchg (bad) callq (bad) adc (bad) (bad) stos sub sar (bad) pop rex.RB popfq fidivr mov (bad) mov add pop (bad) ja mov sbb ror and add sub je sar lahf lock push (bad) lahf add add fwait cmpl jmpq lods leaveq cs xchg cmp imull shl add clc mov push add out in rex.RXB pushfq jg es rex.W pop outsb insl lea adc cmc pop rex (bad) and fwait callq lock (bad) jg lods jg add (bad) leaveq push pushq and mov std add rex.WXB and adc pushq jg (bad) and mov jg pop adc or stos in imul sbb sbb jbe js rex.W (bad) push icebp in jb out jrcxz rorl xchg sub xchg in and rex.RB imul loopne rex.WRB xrelease or and fisttpl in je jmpq rolb outsb mov iret jge leaveq (bad) add cmp rex.WRX mov push js add pop cmp jg mov mov js test jp repnz (bad) js jmpq leaveq and jae lret or int3 in mov mov add sahf (bad) cmp out xor fisub (bad) callq xchg fs sub retq movups xlat (bad) mov jne add push int sub mov add xor add adc xchg movabs xchg mov jg rex.WRXB sub fnstenv add (bad) adc (bad) xor mov cmp add rex.WRXB cwtl (bad) rolb add sbb cmp (bad) adc rex.WXB rex.RB fwait jl (bad) ss (bad) (bad) mull in enterq rex.RX mov fsubrs xchg int3 pushfq (bad) imul rex.X es cmc add and mov and sbb sbb xor pop (bad) fisttpll mov addr32 clc push mov xor test sbb fsubrl mov jle iret or xchg mov add gs (bad) lahf mov iret and mov sub js xchg cmp iret push jae and mov lods rex.WRX rex.RXB or (bad) mov xchg jae (bad) cwtl and decl retq lret xlat (bad) fucom ds pushq insb add mov mov sti test (bad) shlb jb cmc divl mov fidivrl (bad) jno and sti jo xchg (bad) js (bad) cwtl je (bad) xchg sub sahf cmp (bad) add adc hlt add push cmp negb xor xor add xchg fldt cmp in data16 cli rex.RXB push jmpq xlat stos mov (bad) cmp push sbb pop xor push icebp pushq push fs jle mov mov fildl and cmc sub cmpsb outsl hlt jrcxz (bad) rex.B xchg pushq (bad) sbb jl rex.RB cmp pushq in je movslq fstpl (bad) adc add jmpq in ss sbb mov shr sub add repnz movabs leaveq ljmp (bad) jb sbb pop mov ja xlat and jp loop fsts add fdiv xchg sbb push cltd repz mov pushq (bad) pop add (bad) in mov cmp popfq jle jns movsb xchg jno xchg test sbb rex.W (bad) pop or addr32 add add movsb imul test out (bad) cmp adc int3 jp cwtl adc test sti and or pop shl stos mov xchg (bad) and add xor (bad) out mov pop jg pushq movabs add stos xchg (bad) and sbb jge xchg rex.WR fldz pushq xor (bad) not cmp sub mov jo xchg divl rex.WXB es cmp and fldcw out (bad) movabs sbb outsb (bad) mov rcr (bad) rex.WX push and (bad) outsb add hlt sub add or adc jns pop movabs push mov imul (bad) loop fidivr mov pop jnp sbb cmc sub cmp mov xchg mov adc es or cmp mov cltd (bad) jp push lock int or cwtl hlt cli add je incl icebp jb (bad) int in (bad) pushq (bad) xchg jle callq sub lea cmpl and (bad) mov xchg rex.WRB jge xchg hlt fcmovu out loop add (bad) and (bad) cld (bad) neg (bad) (bad) lock insb rex.B rex.WRXB (bad) in cmc mov icebp (bad) insl stos cwtl add adc xor add and add jno movabs stc jae jg add movsl cmp or sbb mov lahf pop jae (bad) and (bad) cmc pop add rex.B sbb sub add mov (bad) jae loop rex.RX test retq adcl test mov sub add cld (bad) add or (bad) mov rol and hlt (bad) lahf cld rex.WRB add push jnp sbb rex.WXB rex.RXB addr32 mov mov outsl out rex.XB data16 jo (bad) rex.RXB (bad) fstl add shl movabs or (bad) cmp orl pushq push and xchg lret stc (bad) cmpsb imul mov (bad) jnp loope jg lods cmpsl xor pushfq mov sbb repz in mov sahf test mov xor pop rex.WX cs psraw mov leaveq lods (bad) test jle jo insb rex.WRX ja jg jae mov cltd mov mov lret shrl add jmpq pop jb xchg lods (bad) movslq xchg add leaveq fst movsl (bad) (bad) outsl callq pop div in lods rex.X fdivp adc cmc push rex mov mov cs cmc mov jmpq xchg pop data16 stos pause mov add xchg push mov fcmovnu stos and stos (bad) (bad) out rex.WR jge (bad) (bad) rcrb sbb (bad) scas lret (bad) (bad) adc test adc add jle rex repnz mov fmull loopne jg fsubs stc xor add (bad) jl add movabs cmc add jl add outsb (bad) std scas mov pushq push jae pop subl xchg and jp pop icebp xor mov rex.RXB add adc fidivr cmp fsubrp lods jle ror jmpq lea add movabs cmp (bad) adc movabs mov cmp fwait sub sub popfq mov mov lret or cltd xchg mov mov add ss outsb pop in clc js test jge push pop jle stos or jns sti notb outsb rex.X addl fwait cmp jg cmp push lret mov xchg vcvttsd2si nop push (bad) jl cmp in leaveq xor iret cmp pushq add loop movabs mov shufps pop scas add out xor js mov enterq xor or in sbb sub sar mov jae orl es mov gs (bad) xchg jge push xorl jb mulb fistp out (bad) jl (bad) mov mov mov pushq stc xchg mov cmc mov pop pushq and js (bad) (bad) push (bad) or mov lret mov rex.RX pushq jne xor xchg and rcl push rex.XB mov outsb mov mov std (bad) (bad) sahf rcr cld add insb (bad) fisubrl adc sbb push push (bad) test cmp mov adc (bad) insl in adc retq and sbb stc fidiv enterq insb in mov testb pop mov out jnp imul jnp ficomp retq lret clc add mov rex.RXB pop imul mov (bad) cltd jbe jle pop mov orb lods or rex.RXB jg sbb sub push sub rex.W mov movslq in adc test jb shrl push rex.WRXB or stos (bad) in data16 and test loope repnz sbb and jnp mov (bad) (bad) rex.WRXB pop mov xchg cmp incb int3 nop fdivs mov (bad) push pushq (bad) lods adc pushfq pop add rclb pop sbb cmp (bad) push push mov cltd (bad) hlt nop jg mov rex.RB out mov mov cld lods xchg movabs movabs (bad) jae (bad) sub jrcxz movabs (bad) xor (bad) jmpq jle popq cmovne sti in xor or (bad) add test (bad) cmp or leaveq lods clc xor dec lahf int and add pop (bad) repnz add addr32 or (bad) pushfq mov or andl sub (bad) cmp jle fisubr outsb (bad) jno cmpsb jae xchg and mov xchg cmpsl (bad) mov jp nop or fstps lods (bad) xor add es cltd lock xchg fbld idiv add cmpsl clc cmp stos retq lret add insb rex.XB addr32 xchg in (bad) (bad) sub (bad) sbb mov jmpq jp (bad) rex.R fcmove add and rex.WRX rex.RX (bad) pushq (bad) mov rex.R (bad) and jbe (bad) lods xchg js mov movabs lahf mov clc add (bad) xchg jg and (bad) movslq test sub (bad) adc mov rex.WB sbb cwtl addr32 mov add outsb and mov sbb (bad) iret sub jle add mov jge xor and insb add mov ja or rex.WX rex.WRX roll cmp xchg cld pop fistpll (bad) mov xchg popfq rclb mov mov movabs std rol (bad) sub cmpsb jmp flds (bad) rex.B rex.WRX pop incl (bad) (bad) push pushq movabs cmpsb mov rex.WRB shrl (bad) je (bad) and add cmp mov push add jp pop fadd mov or and jns mov xor sub jp pop push xor (bad) pushq add or sub jl,pn adc sub in (bad) es adc movabs callq jp,pn sub (bad) (bad) adc jno xchg xor adcb (bad) sub jl xor (bad) pop (bad) in and sbb (bad) push scas loopne movabs stc es out xchg in mov fs insb rex.X lret jg (bad) sub (bad) sbb lods xchg (bad) fwait mov fidivrl cmpsl and cltd sbb (bad) loop mov out (bad) pushq add pop xchg shrb xor and mov and add add pop enterq in (bad) (bad) rex.X push movabs mov jae mov enterq cwtl mov jmp (bad) xchg mov xchg jg sbb jnp jb sbb sub retq or (bad) cmp cmp lock cmp pop incl (bad) push jb retq pop cmp insb rex.RX mov lock ds rex.WR lret (bad) (bad) (bad) addr32 add rex.WRXB xchg cs pop cli (bad) out add test lret mov add icebp sbb xchg int3 rorb adc data16 add loop mov in sbb adc mov shlb xchg or es pop (bad) or vpunpcklbw sub sti adcl movabs pop (bad) (bad) scas jle mov test (bad) mov mov in (bad) clc jl add cmp push movsb add jbe jb adc jmpq rorb mov fmuls add out xchg pushq pop (bad) push lods rex.X cmc fwait mov add jmpq sub push jb mov add and push jb retq sahf movabs xchg cmp js in enterq out rex.R rex.WX jmpq movabs callq push sbb and and jns je sub xor cmp insl xor cmpsb (bad) jno add add (bad) enterq push pcmpeqd adc xchg fldenv jns sub push (bad) std xchg pop add cltd and rex.WXB nop mov jbe sub mov loop mov (bad) xchg nop icebp decl popfq lahf add sub jle (bad) jg (bad) xchg enterq add movabs jg rex.WRX je (bad) lea xchg mov std sbb (bad) js jle add rex.XB (bad) loopne pushq std mov xchg rex.WRX (bad) fs (bad) sbb mov (bad) (bad) xchg mov sbb add mov lret and rex.RXB cmp enterq mov test rex.X jae in add sub out pop jle or lea jg and xchg adc lods and rex.RB rex rex.WR rex sbb xchg push pushq cmc icebp and add (bad) add add jo test sub imull xor rcll mov repnz cld sbb mov (bad) or cmc lret mov lret mov insb addl (bad) scas sahf add adc rex.WX xchg test mov and (bad) adc mov (bad) jrcxz cmp and fldt add jg xchg rex.X es rex.RX je xor sti (bad) adc andb sbb (bad) jp sbb lock push (bad) repnz je sub rex.XB cmp rcr icebp push not mov (bad) repnz mov add or fs (bad) push jb push lods rex ss (bad) shr add xchg ss add fdivrs mov cmp scas rol (bad) and jle sbb adc shl sub sbbl stos mov (bad) psubd fidiv add (bad) jle cwtl jbe movslq int3 pop jge andl test (bad) add sbb rex.R fadds mov movabs (bad) movabs scas imul xor int3 callq (bad) mov sbb (bad) jg hlt sub test pushq mov (bad) (bad) (bad) mov fisubl jb cltd xor xlat sahf (bad) mov pop add in xchg movabs loop add cmp (bad) imul iret pop push push add std and jo mov or mov movabs add mov xchg jl adc jg js rex.WB iret callq xlat (bad) (bad) and fdivr jl scas or jp icebp in jrcxz (bad) add (bad) sbb cmp ss mov cwtl lahf (bad) xchg (bad) rex.R js xor pushfq out rex (bad) mov rex.W popfq andb (bad) sbb stos mov xchg movabs pushq cmp rex.WXB jo lods mov jmp mov (bad) scas jp je callq cli lret sub out pop imul (bad) sahf (bad) jg (bad) lock shll mov jns (bad) jne cmp clc lods add jp scas cmp imul (bad) out adc je pop in mov imul jb (bad) (bad) mov push adc (bad) sbb or nop add push (bad) out js xor cmp in jmpq insb test adc js outsl xchg cmp clc push rex.R scas add subb mov ss (bad) callq leaveq sbb xor lea push xchg callq movsl fmull data16 out js in scas pop fs decb lret lods callq repnz push retq or (bad) sub push xchg cmp sbb and sub pushq xchg cmpsl movabs xor cmc nop (bad) pop adc outsl and sbb jae rex.WR sub hlt mov adc mulb xchg pushfw rcrb xchg xchg add xchg enterq xchg xchg xorl hlt insb std sti sarb mov (bad) jge int mov lret (bad) ss test movabs out and (bad) jp mov repnz js idivl jmpq fbld pop test push (bad) jg out sub mov jle test (bad) mov add fwait cmpsl stc add mov jp ss lock push mov lods add mov lret rex cmp sbb pop pop mov shl movabs decl lock fdivr fmuls loope mov sarb or loop retq jns mov jg push cmpb add pop sub jno pop test mov add rex iret (bad) (bad) add xchg pop xchg movabs or sbb (bad) pushq imul stc (bad) jne rex.WRX jmpq rex.B sar xchg cmp xlat punpckldq xor (bad) adc movabs lahf sub rex.XB (bad) rex.WRXB (bad) je cmp stos mov pop sbb fldenv out xchg retq mov adc out sub and rex or enterq push rolb sbb movabs (bad) or (bad) test fwait mov and push stos cmp or movabs in jae rex.RXB xor movabs adc icebp xchg sub add cld rex.WX mov rex.RXB movslq rex.RX fild (bad) outsb (bad) (bad) lods add ss insb sahf movaps movabs rex.WRX nop movq rex.WRXB rex.RXB loope (bad) mov addr32 or int3 jno orl or imul jno (bad) or callq xchg jle pop cli in roll rex.RB adc push xor lret out loopne retq rex.RX (bad) jae mov nop std sbb rex.WB (bad) addr32 mov add je movb (bad) mov cmp pushfq add imul mov movb pushq cmpsb (bad) add push or sub stc adc movabs mov stos jno jle rex.RX (bad) movslq and movabs mov rex clc adc (bad) mov sbb rorl outsb mov hlt rex.WRXB rex.R lock test mov sti xor or mov sarb xlat adc iret in jg pop mov xchg ja sbb jns adc popfq add mov xchg (bad) (bad) lret add (bad) rex.WXB out js add xchg push cmp (bad) ja jge scas outsl sub lea iret (bad) imul jg rex jp add fdivrl push ficom mov cmpsl mov adc int test rolb sbb shrl stos (bad) xor rorl lret jp sub rolb mov pop movabs jl (bad) rex.WRX and cld fist rex.X shr adcl cmp rex.X adc cmp cli mov jle incl pushq repnz rex.RX cmpsl pushfq rex.RXB pop adc push rex.R (bad) imul pop cmc add mov (bad) jrcxz jle cmp retq lret (bad) mov rex jp jae ja mov rex.XB ds int sbb repz mov (bad) (bad) push notb (bad) imul rex.WRXB lock mov cmpsl pop (bad) sti movabs (bad) cli jbe xchg jmp retq repnz jl icebp push jo jno ficomp (bad) out test icebp jne cmp rcl (bad) mov fidiv mov jno and add (bad) jp jl div mov fadds sub push add rorb cmp movabs pop test (bad) lods fiadd out (bad) mov cmp (bad) sarb mov mov scas jrcxz jle cmp add rex.WRXB (bad) xor stc xor (bad) sbb sahf rex.W mov (bad) lcall (bad) rex.WX (bad) insl movb (bad) (bad) push cli add test and nop push adc test xchg lea jl adc xlat iret out movabs or test add jp mov xlat repz movsl jns xor notb (bad) rex.WRB out in sbb (bad) clc (bad) sub mov mov (bad) xchg add movsl and lcall stc sarl rex.B rex.RX lods mov ds (bad) pop mov mov jmp (bad) add add jb sub vcvttsd2si js jae mov adc (bad) ja mov mov pushq jnp out jb cmp jns jrcxz test xchg (bad) (bad) mov test xor jg mov mov (bad) add fwait (bad) leaveq fucomip jns stos xor scas rex.WRXB xchg ja iret jb push jle (bad) popfq jp (bad) js outsl sarl xor ss add xor (bad) (bad) fildl jg jo enterq nop jle (bad) push in mov movl sbb jnp sub mov (bad) in push in lahf pop mov (bad) jle cmp (bad) (bad) lock (bad) movsb enterq pop paddsw test mov jp rex.WRX mov fsubrs xor jnp popfq insl out scas xlat cmp mov in pushq mov (bad) (bad) cli (bad) mov (bad) loopne rex.RB fsubrl movabs and xor std (bad) add (bad) (bad) iret sar pop test sub push push std adc cmpsb and jp pop (bad) jmp rex.WX imul pop gs pop push retq (bad) (bad) sub sub ficomp pop xchg pop add and adc fadd add mov (bad) je (bad) xor jnp rex.RXB loopne in (bad) movslq rex.WRXB popq adc jmp xchg mov cmc push (bad) test insl xchg mov push or xchg cltd (bad) sbb adc stos (bad) pop jmp jp rex.WRB mov xchg (bad) push (bad) int add mov retq rex.RX loope dec sbb jb shrb scas pop rex.WRX pushq xor pushq sub rex.RXB sub test imul retq mov negl (bad) leaveq ss mov outsb mov data16 jmp fldl mov mov in mov movsb xchg mov add or mov rex.W xchg insl cmp jg sbb add enterq add iret pushq test dec rex.WRB jne xor mov pushfq sbb retq (bad) callq sbb lret push add (bad) cmpl hlt jp (bad) clts idivb jmp movslq push add out add popfq sarl fs stc rex.WRX negb add stos (bad) out (bad) sbb rex.WRB fmul xchg sub adc jbe rex rex.W add jmpq mov fisub mov add jp xor mov test cmp sub jle or (bad) and jp in rex.RB out pop jb mov jp rex.B push movsl xchg adc jg orb add (bad) in (bad) sbb (bad) (bad) jl retq (bad) cmp mov push add sbb (bad) mov fsubrp in jle rex.RXB imul add fidivr mov add push loop fidivrl jl rex.RX jae loopne mov sti pop jp outsl pop (bad) scas rex.WRXB mov sbb ds test rorl cltd push rex.R rex js or sbb (bad) mov (bad) jg (bad) in jo mov movabs (bad) jle add jg mov std xor lahf rex.RX repz js add xchg and pop xchg mov mov insb (bad) cmp ds lods sti jl (bad) ja loop push pushfw cmp add adc push (bad) (bad) stc movl and mov outsl pushfq add mov out xchg (bad) scas mov jg (bad) inc (bad) jb outsb pop or add pop mov ds push callq retq sarl jae add (bad) sub adc stos pushq xor pop adc mov movslq lock jge stos sbb fldl rex.WXB fild (bad) mov outsb push mov icebp movabs (bad) retq jb and xor cmc jno mov mov decl jg scas jle adc (bad) mov jp outsl push rex.WRX gs repz rcrl mov jb and and rex.RX cmp (bad) cmpsb add jp shrb xchg rex.XB lods xlat add cmc xchg es enterq jmp push cmp xlat ds add ficom jle add push out std retq rex xor xchg or pushq jl rex.RXB cltd (bad) cmc (bad) mov cmp rex.WRB shlb push mov xor rex.WR add (bad) add stos add movabs or jb lods fbstp mov and sbb (bad) xor ss out xor cli cmp cmp insb sahf mov jne lret adc rex.RXB and jle (bad) jmpq and sub cld add xchg or mov movabs cmpsl (bad) xchg js xor adc testl mov add std jl rex.WXB lock pop sbb pop nopl jns xchg std rorb add push (bad) jle adc xchg fcmovu mov jo xor in add mov and mov rorb adc jns out fwait or loop adc (bad) out pop imul fbld rex.WRX sbb movsl (bad) cwtl std loop jb cmp in pop xchg mov jo (bad) jo jmp imul cmp jp or ficomp and (bad) cmp adc sti and or jns add es (bad) push fcompl xchg and add mov enterq pop loope pop adc sbb cmp jl jmp clc (bad) insb mov movslq (bad) repnz adc out out pushq push add (bad) (bad) mov cmp cmp cmp add jl or add nop jmp jnp sub pop sub movslq sbb enterq add sbb mov and cltd (bad) (bad) (bad) mov (bad) test out cmp movslq rcrb rex.RB rex.X jle (bad) lea lock divb add add and insb jns fld pop cld shrb and and push cwtl rex.WRB jnp or jo (bad) mov loope (bad) lock sar or xor pop pmaxub fnstsw adc popfq sarb sahf push (bad) mov jae lock jns (bad) rex scas rorb jo mov rex.WXB rex.WRB jl in stc mov incb rex.RXB cltd scas sub and rex.X jmpq xchg divl jb adc movsb sbb (bad) mov mov jns xor movabs mov jae pushq leaveq mov test lods jmpq int3 add pop fcoml mov (bad) cmp mov add (bad) retq mov adc cmc cld fstpl es cwtl add jo (bad) mov (bad) cmp in rex.WRX cs xor jle (bad) add push rex.WB cs insb add test sahf add shr data16 mull fisttp mov bt test cmc add test cmc bt movzwl movsbw add btc jg mov cmc stc add jmpq jl adc jmpq pushq rex.WX mov (bad) mov cmp jle jae (bad) pop rex.B (bad) push pop mov sti rex.WRB (bad) jmpq cmp mov cmp stos (bad) rex.WB jrcxz fbld (bad) (bad) (bad) movslq push mov movl xor adc out movslq (bad) (bad) (bad) cld jmpq (bad) (bad) (bad) (bad) mov lret (bad) and out rex.W ss iret scas iret pop outsl adc mov mov jns push loop (bad) pushq lods test (bad) (bad) pop test jg fucomip nop (bad) mov movabs out (bad) cmp cmp jmpq jmpq clc cmc add cmp bt bt stc cmp jmpq jmpq clc stc add jmpq not clc cmc stc ror rol mov stos mov mov seto not mov jmpq adc xchg cmc and mov (bad) (bad) movabs jb fsts xor or rex.WRXB mov sbb xchg mov xor xor gs sub xor lcall pushq (bad) cli add cmp (bad) (bad) cld (bad) int3 cld xchg repnz sub fisubl (bad) xor and movabs lods sub xchg (bad) cli popfq (bad) loop,pt idivl rex.RX xchg lods push movabs xor fimull (bad) (bad) outsb cli (bad) push sbb add xor (bad) test add cmp sbb outsl insl jnp add rex.WRX rorl jle mov lahf mov jmp callq jge mov lods lret scas ficom lret (bad) (bad) (bad) callq xchg rex.RXB sti cmp retq jl lea sub sub mov xor xchg int3 insl outsl (bad) push cmp lret push clc in (bad) jno in (bad) nop (bad) xchg test (bad) sahf jmpq fnstsw mov movsb gs pushq xor fwait js scas sar cmc xchg rex.WXB scas push push jle mov cs rorl std out add sbb (bad) cmpsl stc jmp cmp jmp enterq (bad) and stc movsb rex.RX jae callq adc or cltd scas rex.R clc mov rex.X es test loopne psubsw ds sti jp lret add rex.WRXB rex.WR (bad) mov outsl fnstenv jl sahf pop bnd popq scas and xchg rex.RB cmp lods outsl cmpsl adc or mov (bad) sti lret rex.R (bad) cmp (bad) (bad) (bad) stos addl lods test negb cmc out add add outsl insb and (bad) cld xor xlat ror gs pop xchg pop sub (bad) mov push imul xchg rex.WB sbb loop fdivs hlt callq rex.XB cmp mov cmpsb add (bad) sub hlt pop (bad) movsl cmp out (bad) adc mov jbe movsb out fcomp mov and mov mov rex.WRB pop xchg sbb popfq mov and in es cmp out rex.W lea (bad) out (bad) push pushq xor ja rex.RX cmp fdivs hlt je pop fwait movsb enterq (bad) xor fsubl andl rex.WB nop movabs sbb jrcxz rex.RXB fwait rorb rex imul clc jno (bad) (bad) ljmp test cmp nop sbb xchg leaveq sbb or mov push cmp jns pop int (bad) mov or test stos cld push pop rex.R and add (bad) cmpsl (bad) (bad) add (bad) fsubl push jne pop or mov mov or pushfq mov jnp (bad) jae xor adc xchg mov jne xchg add repnz lock add (bad) lods insl and sbb mov (bad) mov xchg (bad) (bad) enterq sbb jno movsb mov cli fildll rex.WRXB adc mov (bad) test or fwait (bad) mov adc cld cld cmp (bad) test adc es rex.R rex.R (bad) (bad) push in rex.WRX (bad) pop (bad) cmc out xchg sti sub imul pop (bad) movsb adc cmp mov callq mov rep sarb outsb rex.WRX (bad) (bad) pop je sarl jge (bad) xor je (bad) mov cmpsl (bad) data16 jmpq callq jmpq and mov rex.WRX (bad) add or repnz rex.R leaveq cld pop lahf rex.RXB jbe (bad) push sbb sbb and rex.WX fidivrl (bad) jmp je jl cs cmpsl rcrb sti xchg and or subb sbb and jae fisttp insl jns cmp (bad) movabs fwait adc (bad) (bad) sti rorb (bad) (bad) lahf lret xchg enterq xor (bad) mov adc add rex.WRX adc out test ss sahf (bad) rex.RXB mov jnp (bad) pop leaveq pop adc mov (bad) repnz mov ja lret sub push and mov and shrb repz jp pushq jmpq jne jae or mov sar sbb cmc mov not bt bt mov bt sub stc jle cmc cmc repnz jmpq cmp mov ds add jne or scas rex.WX or xchg pop mov (bad) (bad) ss addr32 movslq (bad) retq or rex.B in cmc push rex.WR imul or sub ror sbbl (bad) add movabs jbe and stos andb add rex ss mov add and callq rorb lea mov and add and neg shl stc mov ror clc mov bt clc test repnz jmpq jmpq jmpq out std add (bad) mov gs xchg xchg pushfq mov add xchg imul sub in mov stos pop push cmpsl rex.WXB xchg cmc jrcxz mov in (bad) cmc xchg (bad) rex.WRX out sub mov xchg callq (bad) or insl or jmp fcmovnu jp mov add cmpsl pop fstl movabs xchg mov rcll adc (bad) xchg rex.WR (bad) stc rex.WRXB cwtl cwtl mov cmp pushq and out lock (bad) (bad) (bad) ljmp rex.WRB ja clc gs enterq sbb jmpq test movabs sbb sbb pushq imul mov rol mov cmp xor mov mov rex.RX rex.X add (bad) lea jmpq pushq push sub xchg (bad) jne,pn mov (bad) rcrb add rex.RXB mov and fsubr ds jge jp and rex.R adc add loope jae (bad) push retq je or mov rolb (bad) fwait jnp add mov subl pop pushq pop or (bad) (bad) cld rex.R nop rex.WRB (bad) (bad) jmpq (bad) cmp scas lea (bad) sahf (bad) mov (bad) rex.WXB mov mov xor xor out out fwait shl add add push xchg adc movabs (bad) and andb (bad) and rex.RX scas xchg cs pushq (bad) movabs lret or or fnstenv mov xchg (bad) pop xchg sub rorb push scas cmpsb rex.WRX pop lea int mov (bad) and int3 out add movabs (bad) stos pop sbb scas and pop fnstcw es test loopne cmp mov clc repnz lretw or test in cli jmp or or add callq mov jle (bad) mov (bad) (bad) sti lods sub and decb cmp mov add add or add mov es and rex.WX rex.XB (bad) rex.WRX add rex.XB (bad) lahf (bad) movslq push (bad) outsl (bad) jne movsl notb test (bad) (bad) negl scas mov (bad) mov (bad) vandnpd cli xchg push (bad) and loopne out lods (bad) rex.RX (bad) fisttp leaveq (bad) repz add sahf or loope (bad) mov rex.XB push xor cld pop xchg mov xor (bad) jle cmp adc ja scas pop pop ja cmp jp sarb fisttpl rex.W cli sbb (bad) cmp and imul (bad) icebp outsl in (bad) (bad) nop jae adc (bad) loop jbe sbb notb push (bad) (bad) in std (bad) enterq in in xchg (bad) insb add fdivrs retq loop (bad) (bad) std sub jne add add or sub fcmovne mov repnz pushq and cmp mov clc push lock ds insb (bad) mov lods push mov (bad) in pop or mov movsl movabs add pop xor (bad) xchg (bad) push sbb pushfq push rex.WR cmp adc int xlat hlt jmpq xchg pop jmpq fs xor in rex.WB jmp adc mov (bad) jb mov lods xorl test shll rex.RB sbb (bad) in pop add mov sub sub (bad) orl pop callq (bad) (bad) cli callq (bad) (bad) (bad) std enterq or xchg rex.X sbb stos movsb mov (bad) (bad) callq pop pushq rolb outsl imul cmpsl and callq pop in cmpsb xchg int3 pop sub incl or test jb xchg mov mov movsb xchg lods (bad) cmp test jmpq setg mov setb mov jmpq mov jmpq je rcl bsr push btr mov test neg sbb bsf sub movzbq bswap lea jmpq cmp cmp jmpq jmpq je movzbl not push bswap mov shld sub not movzbq movzbw setg lea jmpq sub pushfq rex.WRXB (bad) jb nop adc mov andl sub loope pcmpeqw sub and shr (bad) popfq cld pop addr32 sub or mov ds (bad) sbb (bad) pop (bad) sub jno (bad) push in and and jo xchg rex.WB int rex.X rex.X lock mov test jns (bad) (bad) std or (bad) add movsl sahf mov xor sub sbb stos jmpq (bad) (bad) (bad) std rex.WRX xchg test or xchg add add or rorl pop ja adc jmpq (bad) jns (bad) sbb in xor (bad) fdivs cmp cmp sub mov mov out fwait test mov in or and mov sbb popfq out (bad) test jp and addr32 in sub cs add orl jl cwtl pop in push movabs pop (bad) int movsb (bad) fcompl stos movsb rex.WR rex.R rcll (bad) pop pop or ds lret out add mov clc sahf add rex.RB andb fst adc (bad) callq rex.WRX js cmp mov xor xchg mov (bad) rcrb (bad) (bad) sti icebp adc (bad) (bad) (bad) rclb jns cmp xor je sub loope sub rex.WXB addr32 sub mov sub mov lret cmp mov add add sub clc iret fsts add in cmp (bad) mov mov negb js test stos and test xchg fs rex.W outsl ficom (bad) (bad) fistpll and int3 jmpq je test jmpq and lret or repnz rex.RX (bad) out sbb sbb movsl pop rex.WRXB cmp addr32 (bad) lock mov sbb adc addr32 fldcw adc int3 callq rex.RXB (bad) lret xor (bad) cmpsl (bad) jl rex insl fnstcw rex.XB data16 xor std push xchg add (bad) (bad) cld adc (bad) (bad) (bad) icebp mov insl mov fidivrl nop (bad) mov scas (bad) mov cmp or repnz xchg sahf cltd add add add in lahf mov je fwait cmc ficom pop leaveq imul sti push (bad) test (bad) sub push cmp std jo fwait mov and rex.RXB addr32 int3 pushq mov push pop icebp pop int3 icebp xchg (bad) mov hlt sub test stc out (bad) stc bt clc cmc cmp jmpq bt cmc mov jmpq add rex.WRX gs outsl movslq rex.RXB jne rex.B fs gs (bad) gs add bt rol jmpq cmp xchg cltd testb fmuls (bad) lock negl imul mov or adc faddl ja and rcr rex.RXB rex or jns leaveq and xor xchg pop (bad) jne fidiv ss sbb rorl fldenv mov jbe loop jrcxz or mov ds pop add notl mov jmp popfq jnp in pop std scas xchg lret orl mov jge (bad) rex.WXB movabs sub hlt add add or mov data16 fnstcw insb lret pop lahf mov jno movabs rex.RX pushq xchg mov rep mov es test jle jae adc movabs (bad) and sub subl pop jle sub fsubrl (bad) loopne xchg rex and pop int3 adc (bad) xor pushfq sbb rex.WXB rex.WRXB lock (bad) nop rex.W icebp (bad) adc adc loop xchg cltd pop mov mov (bad) xchg xchg push cmp sbb (bad) (bad) sti movsb sub jp (bad) (bad) (bad) incb or xchg pop (bad) lret (bad) orb and cmp mov fwait xor sbb (bad) cwtl push mov test js icebp pushq callq add add (bad) jo xor pushfq cmp cmp (bad) enterq mov add mov pushfq lods mov xor movabs jrcxz rex.WRX xor adc mov mov jmpq or jae (bad) (bad) (bad) (bad) mov (bad) (bad) mov retq sub xchg xorb mov adc and sub and and pop je (bad) xchg jrcxz (bad) in xchg xchg push (bad) mov in or out rex.WX rorl (bad) sub sbb pop xchg jl data16 fsubrl pop sub outsl fs adc addr32 gs (bad) (bad) sti sbb lods xchg (bad) (bad) std negl pop cmp in (bad) push mov cmp pop xchg out (bad) (bad) (bad) callq (bad) mov sbb rex.X jae (bad) lods mov mov push shlb jl (bad) mulb fidiv sbb jne jle mov repnz sub mov mov (bad) pop clc (bad) push pop pushq pushfq rex.WB loop jg sti (bad) jae jb adc cwtl add fnstsw (bad) (bad) mov es xor mov pop addr32 or adc cmp xor add rcll push xchg mov js or xchg fstps (bad) (bad) (bad) cld imul mov (bad) (bad) decl sarl lret sbb and loop add add or (bad) xchg pop xorl mov cli add js fwait cmp mov and int stc xchg jmpq push xor add maxps lea mov adc lods cmpsb (bad) out and xchg clc xlat pop movsl rex.WRB (bad) pushq jp int3 loop adc stos sbb cld retq (bad) (bad) stos shr out sbb out (bad) xchg cld sub test cmp (bad) mov cwtl mov jne fs (bad) fistpll mov xchg jne pop adc add adc jbe loope (bad) (bad) std xrelease cs pop push mov retq xor sarb mov jns cmp icebp int3 jno movslq jb (bad) idiv sbb xchg mov stc movsl (bad) (bad) (bad) (bad) decl retq add (bad) sbb rex.WRXB rex.WRXB cmp sub imul sub (bad) scas enterq push (bad) and scas adc fbstp (bad) mov jp cli retq mov mov mov or sub (bad) jmpq and sbb mov mov retq test stos lret movsb and sar jmpq rex.XB lret fnstcw mov test js int3 sub shrb callq (bad) pop rex.B mov incb xchg repz lock mov jo cmp mov add ja outsb fdiv rex.WRXB mov xor (bad) (bad) (bad) sti test (bad) (bad) (bad) decb clc jb and or jb xchg cmp jo cmp pop or cmp test xor mov movsl mov xor jb and sbb hlt or test xchg mov mov cmp jmpq pop test rex.WB or callq adc pushq rex.RX out fstpt xchg leaveq (bad) popfq pop mov out sar (bad) mul (bad) mulb int3 (bad) fmul cmpsb mov mov test repnz enterq out xor adc sbb cld and out cs fnsave (bad) (bad) (bad) (bad) clc stos push rorb add add js imul mov imul incl and mov rex.R (bad) fstpt std xchg jo mov sub rex ds mull out (bad) (bad) (bad) bt jmpq movabs pop and mov ds xchg loope scas in fadds dec cmpsb (bad) pop sbb xor pop rex.B rex.WR jl jb rex.WRB cltd jne jns lods rex.R retq adc std divb cmp (bad) (bad) (bad) mov add cmp or add rex.XB loope (bad) rex.WB rex.WR incb add add rcrl or cmp or pushfq adc sbb xchg (bad) pop movsl rex.RX loop paddsw (bad) sub add movsb out int cmp rcll cld mov popfq sti xchg iret cmp and fldl sub sahf (bad) jmp adc (bad) (bad) js jrcxz movabs rex.W xchg cmp (bad) ds push (bad) sub movabs rex out mov es fmuls rex.XB lea cwtl sbb imul hlt add cltd rex rex.WX jbe movsb xor mov (bad) jbe outsb mov add gs xor test rex.WB or cld push pop (bad) fs je sub fmulp loop cmpsl mov (bad) push mov (bad) rex.W or cmpl add rex.WRXB rex.R outsl mov cmp push (bad) (bad) (bad) std sub sub add add or lret mov add sti xchg mov andl in scas (bad) cmp lahf mov push cmp mov mov xchg out decl test pop add cmc cmp bt add cmp stc stc cmp jmpq xchg jg iret pop xor in cmc imul mov (bad) and or pop pop mov pop jne (bad) fdivl mov xor (bad) stos movsl jmpq popfq fcomi test cmp xchg (bad) and cltd sub (bad) movabs and xor (bad) movabs hlt sbb mov (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) repz fwait addl mov add imul and out movabs mov (bad) or gs xchg (bad) xchg rex.RXB movabs stos (bad) int jp (bad) jno mov mov cmp jmpq or jmpq jmpq jne movzbw not mov jmpq sub (bad) (bad) xor cmp retq push (bad) jle fwait sbb jnp push and xor mov cmp mov sahf (bad) mov scas cmpsb enterq mov movabs and movb or icebp out hlt push jmpq fwait movabs jbe add (bad) (bad) jmpq rex.WRXB add sar rolb fcmovnb mov xchg add add rex.WRX rex.X mov pop (bad) outsl adc (bad) and add lret movslq jns and and (bad) sub movabs pop in rex.RB add adc sub sbb and and cmp fistl add push (bad) pop sbb mov xor mov (bad) rcr cmp mov loopne mov gs rex.RXB jne mov sbb (bad) cli mov data16 (bad) ds (bad) sub add jb insb rex.RX icebp cmpsb test movabs nop push or (bad) stc add cmp (bad) pop mov xor mov out out sti (bad) pop mov (bad) push rex.WRXB cmp stos add ds (bad) (bad) sti sti test (bad) ficompl movabs lock pushfq out add (bad) icebp pop or neg out rex.R cld insl adc xchg mov sbb mov sbb jmpq sbb mov out sub adc mov mov jmpq jmpq je shld shl movsbw cmp push shl sar mov test cmc sub setno jmpq test jmpq clc bt or jmpq add push (bad) je rex.WRB je pushq add and add push pop out (bad) jmpq sub pop fs orl jae pop adc scas in lahf rex.W jp mov jp pop (bad) mov scas (bad) mov out adcb stos fucomi adc xor orl (bad) xor and fmul add std imul mov xor in xor cmp fcompl insl repnz or in push add (bad) mov out (bad) (bad) (bad) sti xchg insb (bad) and (bad) (bad) (bad) (bad) jb rex.R fs out rex.RX xchg jge fmuls es (bad) (bad) push cwtl rolb (bad) pop cmp adc sub movabs movabs icebp cmp push jg cmpsl mov push cmp fcomi push jmpq adc jne mov mov mov jmpq lea jmpq sub mov testb es sbb (bad) and in fdivr loopne xchg movsb sbb sbb push cmp xor ss shll nop in in cmp lods loope (bad) cmp jnp sbb in rex.RXB pushq (bad) (bad) (bad) (bad) and popfq leaveq movslq clc (bad) mov (bad) (bad) (bad) cld std fsubl mov callq pop adc (bad) cmp xor mov adc xor (bad) and jp (bad) rex.RB rex.WRX push add or sub movabs in js jmpq xor (bad) (bad) jmpq bt imul jmpq (bad) or rex.WRX adcl (bad) test rcl (bad) (bad) movabs mov int int3 mov push (bad) xor mov cmp mov sub jmpq mov xor push push je test xchg lods stos loop fmull cmp xchg rex.WX rex.XB sbbb mov mov sub sub insb popq pop mov icebp jno pop (bad) (bad) (bad) sti jmpq (bad) (bad) (bad) dec (bad) mov loope mov lahf sbb add add cltd (bad) jb push cmp xchg xchg xchg mov add (bad) (bad) pop std imul rex.WB mov sar push sti mov rex.X rex.WX sub (bad) and xor cltd cli sub out lea jmpq ja jmpq jmpq movb jmpq je lea movzbw lea lea movzbw movzwl bswap jge movzbw not lea jmpq not mov movsbw not mov setp bswap jmpq ja add cmp mov sub (bad) lock rol stc add and bts test sbb mov and test mov test repnz jmpq mov sub push add fs jge lods push mov sub retq xchg (bad) lret or or rex.R movabs imul (bad) jbe (bad) jnp rcll mov xlat mov xor addr32 cltd cmc (bad) cld (bad) or sub loope (bad) cmp loopne (bad) cmp gs ja int or (bad) xchg lret mov sub jno xor fcoml cvtps2pi movabs shlb xchg jl stos xchg mov int3 cmp jl sbb in imull add stos movsb mov mov retq (bad) lret cmp jl sub cmpl nop (bad) scas mov add ficompl mov jb adc loop rex.WB pushfq mov (bad) (bad) xor retw pushq mov rex.WRXB or (bad) add and push jge sub outsb pop insl (bad) stos xor pop lahf rex.WXB fild (bad) mov negq (bad) movabs mov stc fsubs push jo mov stos retq mov movabs sbbl (bad) outsl mov or mov sahf dec popfq retq mov rex.RX idiv xchg iret imul sti (bad) pop rex.RXB fwait (bad) fildl adc (bad) (bad) (bad) std jle frstor jnp outsb cmpsl iret fucom fistpll jae jnp (bad) and add (bad) cmp (bad) (bad) (bad) insl insb (bad) (bad) adc sub (bad) lcall jl cmp sub and mov (bad) in mov jrcxz adc notb popfq add xor add jle cmpl retq fwait sub cmp mov add lea jmpq rclb cld xchg sbb sti mov jge (bad) pop rex.W mov jmp mov (bad) fsts stos push push pushq or fs scas adc (bad) fistl (bad) sti or (bad) xchg mov mov out movabs (bad) adc mov imulb fsubp jns pop jmpq mov movabs out rex.WR rex.RB sbb (bad) repz xchg movslq jns iret cmpsl jg sar push rex.RB cs mov rex.WX lods pushq pop (bad) nop hlt xchg sahf mov (bad) (bad) callq jp jnp fwait lods mov cmp sbb stos (bad) mov (bad) movabs (bad) ss (bad) icebp test (bad) jne (bad) adc or rcll xor (bad) fdivrs cmp int3 add sub out or rex.RXB xor xlat sub (bad) rex.WRX movabs rex.RXB xchg jrcxz test test out adc in loop fdivrl rex.WRXB scas (bad) (bad) (bad) sti movslq fs (bad) (bad) (bad) incb out cli xor jp mov (bad) jl insb add fwait or cmp rex.WXB mov jae sbb xor movsb mov nop in adc push mul rex.WB rex.XB int jne imul jle (bad) xchg add movabs scas retq rex.WRX xchg imul xor leaveq hlt nop ds mov adc movabs or mov (bad) mov jge pop adcl xchg iret test or rex.RXB xchg mov addr32 push or rex.X pop hlt xchg (bad) mov (bad) (bad) (bad) (bad) cld xchg test mov (bad) pop (bad) pop adc enterq (bad) add xchg rex.X mov mov mov outsb test repz lock pop xor fadds test jge push movabs sub (bad) mov pushfq add (bad) (bad) pushq (bad) cmp rex.RX add push lret sbb repnz addr32 test jrcxz sbb icebp stos test rex.B push (bad) jns (bad) out js movabs (bad) sarl or adc (bad) sti fwait test jrcxz mov test mov xor mov jmpq jne inc xor mov rcr add sub xor mov bt sub cmc pushq test cmp cmc stc cmp jmpq add rex.RXB gs outsl fs imul add shlb mov and lods repz shld mov jmpq vpmaddwd mov xor loope (bad) pop (bad) sub (bad) in sbb xor out in (bad) add (bad) movabs adc add mov push push (bad) cmp fist adc push sub scas pushq std mov (bad) mov insb (bad) mov xor (bad) orl repnz addr32 nop add pop movabs std sub xchg add add or callq mov mov mov cmp sbb mov xchg lret adc cld pushfq xor rex ffreep iret mov (bad) js iret pushq test add cmp bsf mov jmpq lods xor rcrb movabs mov mov out in cmpsl sbb or mov xchg rex.R (bad) lret or mov rex.WB sub mov add sbb add cmpsl mov add (bad) clc push cltd xor and test rcll movslq sbb mov std test je leaveq insl mov xchg rex.WX popfq add adc fistpll (bad) jns add cmp movabs cmp in sahf cmpl sub rex.RX rex.B movabs cmc xchg (bad) adc cli loop xor push and add lret xchg loop insb adc iret cltd rex.WB (bad) (bad) add cmp movabs rcl rex.RXB rex.RB lret cmp or (bad) (bad) sti (bad) xchg lods cmp (bad) (bad) (bad) (bad) movsl iret rex.RXB jbe cmc adc xchg in and fimul push and sbb (bad) add add (bad) or xor roll sub and movslq (bad) xor scas and or xchg mov fwait jo push rex.X cmp nop mov hlt (bad) pushq xor push lock xor loopne shll lea fcoml (bad) mov (bad) adc mov rex.WRX (bad) (bad) push xchg mulb (bad) and movsb cmp imul adc (bad) negl add jb sarb sarl push mov pop scas pop or lea rex (bad) mov icebp rex.R (bad) (bad) sti cmp (bad) (bad) (bad) sbb lods enterq pushq popfq int jg loopne stos sbb jne movabs nop insl std xor jmp addb jno in (bad) (bad) ljmp rex.RXB cwtl (bad) scas fisubr movq (bad) (bad) popfq int jne or add pushfq xchg mov std pop std test push cmp movsb xchg (bad) xchg (bad) popfq add cmp insl sarb and fimul test clc test add jmpq test add mov ficomp mov add (bad) iret xchg add cwtl cmc shr rex.WX mov rex.WXB sub movabs loopne mov mov movabs (bad) roll cwtl stos mov cmp cmc jrcxz add hlt test mov insl cmpsl rex.WRB (bad) pop sbb icebp icebp add retq and pop (bad) rex.W insb (bad) jge int3 out (bad) mov pop clc fs outsl mov scas mov pushq (bad) (bad) (bad) cld rex.RXB pop (bad) (bad) (bad) decb sbb add add pushq pop add retq divb fcomps fucomp retq add fadds (bad) rex.X sub ja cmp movabs mov movabs out (bad) mov movabs (bad) cmp mov test (bad) fdivr fisub int3 jle cmpsl pop in int sub imul iret cmp jae add sub mov rcrl (bad) pop jb (bad) rex sarl sbbl xchg fisttp jmp repnz test imul sbb js jle mov movabs pop fcoms mov mov out out outsb (bad) (bad) (bad) cli nop jge pop mov (bad) (bad) cld sarl callq shlb mov imul (bad) (bad) mov adc (bad) sub xor int3 cld adc movabs mov sbb icebp movabs (bad) sub jge rex.RXB rex.R rex.XB or out xor sbb out jns add add xor ja movsl enterq push loope (bad) add rex.WRXB mov mov loope outsb adc outsl mov rex.X jmpq scas mov mov rex.WXB js (bad) rorb jo mov lret pop jb sub mov cmp rex.WRB flds sub mov (bad) (bad) hlt push (bad) stc add lret scas (bad) jbe rex.W pop pop add fild (bad) mov clc in hlt sahf (bad) push lods rex.RB sbb (bad) pushq or js out in in out or (bad) sbb (bad) (bad) sti xchg or (bad) (bad) (bad) jno cli or test pop sub movabs ss mov cmpsb adc scas rcrb out mov nop int3 and sti xchg cmpsb cmp ffreep movabs (bad) (bad) jmpq sub rex.WR fxch insb xlat (bad) jns (bad) (bad) fidivr xchg stos leaveq xor loope pop cmp sbb pop (bad) mov jne xchg mov and and movsbw not add ror mov cmp stc stc shr bt cmp jmpq ja movzbq pop setns setb movsbq pop jmpq jne bswap xor bsf cmp sub bts mov sbb sar clc add sar ror and jmpq cmp mov (bad) int3 or cld and (bad) scas (bad) lods mov add pop pop add mov sub (bad) adc hlt jp add xchg rex.RX mov xor pushq sub (bad) lock mov jmpq or (bad) repnz out outsb jmp jnp and and jo (bad) movsl (bad) (bad) (bad) sti and fstps (bad) (bad) incb xorl rorb xlat add (bad) (bad) incl loope negl mov pop mov icebp pop or int jae loope add pushq movabs sub jmpq mov (bad) mov adcl stc or jmpq (bad) gs adc or push (bad) cwtl (bad) sub (bad) rex.X push mov or mov xor (bad) imul mov callq nop cmp xchg jg int xlat sub frstor rex.RX (bad) and callq fcoms (bad) mov scas (bad) stos add pushfq push fs sbb rex.X add stc (bad) (bad) (bad) jmpq xor icebp xchg (bad) movabs mov lods rex.WRB xor stc (bad) xchg cmpsb sbb add add mov loopne movb cld rex.WR popfq (bad) gs loopne pushq fbstp mov jae mov sub fsubrl mov ss fdivrl sub rex.RXB mov leaveq pop int3 (bad) mov rcrb test cmc stc not jmpq jne cmp movb stc clc test jmpq test bt stc sub jmpq sbb lods (bad) outsb adc xchg cmp jae rex.XB rex.WR xlat add (bad) rex.WXB adc pop and mov nop (bad) cmp add rex mov movabs js pop loop sub jmpq xor cmp rex.R jo cmp adc jmpq rex jmpq pushq (bad) (bad) (bad) incl fimull cmp (bad) lods retq rex.WRXB mov add jmpq sub (bad) test pop cs mov insb rclb add in (bad) jle scas jbe or mov je imul jg mov xor fdivl fistp (bad) mov push add stc mov rcll movabs mov sub sub adc (bad) (bad) or mov cld out mov fs (bad) movsb jo mov mov xchg (bad) pop (bad) (bad) je pushfq rex.WR xchg xchg add andl sub (bad) or or (bad) fstpt jbe fnstsw (bad) (bad) (bad) sti insb lods gs (bad) (bad) (bad) decb (bad) jmp popfq xor xchg mov (bad) rclb stos (bad) jp xchg repz lahf (bad) ja and in outsl (bad) sahf mov or (bad) cltd ficom (bad) mov (bad) scas (bad) adc int adc pop adc add test stc pushq rex.RB retq (bad) repnz mov (bad) (bad) insb jp out pushq retq mov sarl xlat jnp movsb movsbw pop jmpq jp mov movabs and mov xor nop cmp rcl mov mov push xor (bad) adc adc outsb addr32 leaveq push or sti jg scas hlt xchg rex.WB pop add rex.WRX ror pop (bad) ss mov fsubrp add (bad) decb (bad) (bad) (bad) ljmp pushq push adcl and (bad) adc loop cmp mov sahf repz rex.WRB and mov lret rex.WRB jns lods mov jge repz rex.WRXB add mov jmpq (bad) mov sarb adc mov ja (bad) fistl mov add data16 sahf rex.RXB fs mov xchg rex.XB or and add rex.WB mov or rex.R in mov or (bad) rex.R xor fbld sahf scas push movsb cmp rex.WRXB or in sub cmpsl movabs (bad) cli fyl2xp1 (bad) jge adc pop rex.R rex.WRB (bad) (bad) cld addr32 (bad) (bad) incl mov or (bad) jno movsl mov add in (bad) stos fmulp pop roll jl (bad) (bad) xlat movsl add add push fs (bad) out lret idivl mov lret mulb in xchg pop int3 movabs pop lret (bad) scas shl mov mov pushfq stos mov lock scas leaveq mov (bad) mov (bad) (bad) pushq cmc push (bad) jae or cs insb xchg pop mov jp jp test rex.WRB jb adc mov lock fcoml and rex.WRX rex.WXB cmpsb jl rex.WRB jns rex.XB stos sbb movabs adc and rorb jrcxz cwtl xor adc push rex.W cs sub (bad) (bad) cld pushq (bad) (bad) (bad) incl rex.WRX imul (bad) cmp push gs pop (bad) rex cs test adc jp sub imul movslq movabs sarl add insl fstpt (bad) (bad) (bad) (bad) out mull add shll lahf (bad) mov adc je fbld cmp jo out and mov (bad) push (bad) pop jnp out push pop out mov jo jle jo cmp (bad) jbe jo sub (bad) pop jg lock or jo testb jge gs addr32 icebp sbb push jo and jo repz rex addr32 test jo fmull jo cmp mov outsb (bad) rex.WRX mov jo sub sub or repnz ss test and (bad) (bad) mov sbb rex.WRX jo sbb scas (bad) push jo sbb pop rex.WRX cmp rex or iret sbb jo push pop jo sbb xchg rex (bad) in jo pop jo push outsb mov mov (bad) rex.WRX repnz mov int3 out sahf pop movabs fsubrs jbe pop pop add or cmp jo jg xchg jo or jo push pop jo sbb (bad) out adc out rex.WRX outsl xor out lret cmp cmp add jo push repz pushq (bad) push jo lods outsb out push jo xor jo (bad) rex.WRX stc pop in loope rex and (bad) pop pop sbb mov mov lahf (bad) push pop (bad) outsb sbb (bad) cmp repz sub jo and xor (bad) jo hlt in cmp repz jmp rex jg sub in out push pop jo sbb cmovle (bad) jo js jo cmc push jo in out rex in outsb mov insl jo rex.WRB xlat rex.WRX pop rex.WR sbb scas (bad) jo fstps pop pop jnp fstpl xor mov (bad) (bad) pop int3 imulb pushq (bad) leaveq lods adc sahf pop (bad) rex.WRXB addr32 jo pop insl jo rex.WXB (bad) push xor mov jo sub jo mov jo rex.WXB xlat push xor scas outsb mov rex.WRX out shlb cmp js out insl outsb (bad) fcoml rex.WRX mov out cmp sub mov add jp add (bad) cmp cmpsl jl mov sub pop adc ljmp mull fistp (bad) pop cmp pop and xchg pop out pop (bad) cmpsl adc pop in outsb fisubr out sbb mov and jp xor xchg outsb jno (bad) jo xchg outsb (bad) pop rex.WRX xor pop (bad) (bad) sub out movabs pop cltd movabs in pop push fistl cmc sbb (bad) out movsl outsb rex.WRXB sbb pop fnstenv shrb out enterq rex.WRX mov outsb out pop (bad) jo add notl in out rex.RXB rex.WRX xchg jge pop and pop mov jo in (bad) push pop jo sbb out mov divl fstpl mov jo (bad) xchg (bad) (bad) jo rex.WRX fistpll rex pushq (bad) fldcw lahf pop adc pop test pop sub pop (bad) cmp xor negb mov rex.W mov pop and outsb or jo rex.WXB xor jo xchg (bad) notl push in js pop jo rex.X cmpsb adc jo xor push insl jo rex.WRB out rex.WRX pop movabs imulb in (bad) pop sbb jg (bad) (bad) xchg mov jo mov jae xchg xor lahf pop popfq imul xchg ja pop sbb js xchg iret pop sub pop (bad) out lcall mov (bad) vcvttpd2dq outsb scas xchg (bad) jo push rex.WXB mov jo push jo decb pop mov mov jo outsb rex.W sbb outsb pushq fcompl je mov scas (bad) push jo stc push and pop pushq in xlat push push jo outsb neg push jo test lahf pop xchg mov jl rex.WXB int sahf pop cmp rex.RXB pop iret sbb pop xor mov fnstenv sbb push repz rex.RB ds sub mov xor mov pop out loopne cmpsl mov pop pushfq outsb scas mulb jo rex.WRXB rex.XB sub (bad) pop fdivrl jg xchg rex.B cmpsl push pop jo sbb (bad) rex.WRX sbb out insl mov pop outsb add rex.R jo lock out in jo mov sahf pop pop cmp pop out outsl (bad) (bad) hlt pop mov jo rex.WRX adc push jo push (bad) jg std jp xlat lahf outsb out rex.WRX pop (bad) (bad) pop adc jo in xchg jo xor ss sbb mov rex.W cs test pop sbb pop movabs pop fld pushq sub and xchg sub outsb xchg pop out sbb outsb mov sahf rex.W mov jae xor and decb callq jo outsb add pop xlat jo mov jo and (bad) rex.WRB push rex.WRX mov stos mov (bad) iret pushq outsb cmp (bad) jo rex.RXB js mov sahf out out mov jo subb rex.WRX (bad) mov int cmp (bad) (bad) rex.WRX adc movabs adc imul or (bad) rex.WB ja rex.WRX cmpsl add push outsb js mov (bad) push (bad) pop negb cld rex.RB pop cmp adc pushq outsb (bad) push pop jo sbb push out (bad) outsb outsl out rex.WRX adc ja (bad) jmpq fidivl cmpsl jmp pop and xor lahf or iret (bad) imul pushq (bad) mov mov mov lods sub fidiv and imull jo in outsl push pop jo shr pushq rclb (bad) mov out sub cwtl sbb out divl (bad) push rex.WRXB rex callq fimul dec ja pushfq (bad) pop mov jo enterq pop (bad) jge fisubl (bad) pop cmp mov cmpsl out lcall rcrb (bad) pushfq pop push pop mov out lret mov sbb mov mov out in imul pop add mov std iret pop adc or (bad) pop in sub push ficomp test outsb (bad) (bad) addr32 mov mov sub js jo outsb pop fcoml sbb outsb mov in xchg push pop jo rex.WXB outsb jo sub jo pushfq pop out es pushfq (bad) adc rcrb pushq mov pop (bad) outsb mov rex.WRX sti xchg js std (bad) jo (bad) outsb mov push jo movabs callq jo sbb and cmp xchg je pop lods insl pop push nop sub rex mov lahf rcrl (bad) jns jns (bad) mov imul (bad) rex.WB rex.WB jo sub pop data16 sbb pop adc jo cmp mov outsb (bad) push outsl jo jo jo push pop jo sbb jg mov (bad) jo push pushq xlat notl pmulhuw push pop jo sbb and cmp pushq stos addr32 mov (bad) lahf pop imul pop jmpq sub mov outsb scas push outsl jo pop out (bad) rex.WRX rex repnz jo jo sub pop sub iret pop rex out sbb (bad) fist fwait push out (bad) jg sbb push jo (bad) (bad) mov jo rex.WRX leaveq rex.WX lea rolb (bad) rex.WRXB rex.WRX pop gs (bad) sbb jo in lea retq (bad) out mov cld out sbb sbb push repz xor out push jo cld outsb adc fisub cs mov (bad) (bad) pushq cmp cmp int3 pop (bad) and ja sbb push jo ja fistp pop outsb sahf xor fistp rex.WRX outsb cmpsl rex.WRB ficomp mov repnz sbb push and rex.XB sub (bad) repnz mov jo sbb je (bad) cmp sbb rex rex.WRX rolb jo rex.WRXB rex.WRB outsb ja outsl jo stc pop (bad) mov jo outsb iret fcoml sbb out notl sbb (bad) outsl (bad) cmpsb mov in and pushq out out rex.WRX jmpq je subb (bad) hlt sub mov jo xor pop test jg add jrcxz out out pop gs outsl mov pop pop mov outsb jg pop fnstsw ficompl (bad) rex.WRB movabs mov js jo outsb jg push jo (bad) (bad) pushq in (bad) xor jo rex.WXB iret push xor xlat outsb scas out push jo int adc mov (bad) (bad) mov fmuls (bad) pushq rorl (bad) (bad) (bad) pop (bad) iret fildl xor lret xchg (bad) sahf pop nop leaveq (bad) mov pop (bad) repnz (bad) (bad) addr32 (bad) rex.RXB pop movabs (bad) push outsl jo retq loopne add jo sti outsb cmpsb cmc push jo sbb (bad) rex.WRX (bad) in rex.WXB stos outsb (bad) insl jo rex.WXB idivb mov rex.WRX testl push mov mov push and sbb push cmc jo mov out pop pop sub or scas or sub lods out lcall xor jo rex.WXB xor jo stos test pushq test jo outsb adc fildll repz push (bad) int3 mov xor (bad) loopne or addr32 pop xor movabs in fist and pop (bad) pop mov pop lahf pop sbb xchg jo rex.WRX pop mov sahf pop xor xchg xchg (bad) mov out cmpsb pop push and lea pop cmp (bad) pop pop push mov push test (bad) jg out jo pushq out pop pop lock xchg in (bad) ficomp jns sub in jae cmp adc mov push cmpsl outsl rex.WRB rex.WRX negb (bad) shlb lods insl pop movabs pop push rex.W rex.WRX (bad) pop rex.WX (bad) jo add jo lock ja (bad) jo outsb push sub out outsl fmull mov jo rex.WRXB mov jo outsb (bad) push jo movabs int3 data16 pop add rex.WB cmp push pop and sahf ja repnz in cmp lahf cmp js jnp jo outsb add out xlat jo in (bad) (bad) scas push jo hlt outsb out pop rex.WRX mov in xor mull mov pop and (bad) pop sbb sub (bad) cmp sbb sub jo push outsb sahf and pop pop pop hlt (bad) in js insl pop ja sbb jb pushq imul and rex.WRB outsb (bad) cmp mov outsb out push insl jo rex.WXB (bad) cmp jbe callq pop (bad) sbb push cmc jo (bad) sarb rex movabs or add jo sbb push cmc jo sbb pop rex sahf push outsb xchg rex.RXB mov jo rex.WRX pop rex.WRB xor pop xor or (bad) pop and (bad) mov lahf or lods out (bad) jge fisubl incl sahf pop movabs add out rex.WRB rex.WRX pop (bad) (bad) loop loopne mov cld jle cli out push (bad) pop out (bad) mov (bad) clc js in insb or cmovo mov outsb (bad) (bad) mov loope rclb pop lods lods outsb fcmovbe mov pop pushq loopne push fistp fimull (bad) (bad) sbb rex.X (bad) out sub mov outsb push push outsl jo fsub jo push pop jo (bad) ss (bad) jo outsb jb and pop pushq in out pop jo sbb or cmp (bad) cmpsl btc jbe (bad) sahf cmp pop retq mov and iret (bad) (bad) lret outsb mov (bad) (bad) sbb rex.WRX sub int sub mov loopne mov jo mov pop (bad) add mov loopne pop loope sub pop pop test sub loop test ficomp jmpq sub ja jmp movabs xchg sub cmpsl rex.WRX pop jo jle (bad) jp add rex xchg outsb in (bad) jg pop sub out pop movslq push push pop pop mov (bad) repnz test int add fs scas idiv (bad) repnz idivb xlat sbb fcomps scas jo ror pop xchg rex.WXB xchg popfq (bad) sub mov pop xchg jo rex.WRX jo (bad) cmp rex.WRX rex.RXB movsl outsb cmp pop jo (bad) outsb pushq stc js mov jo outsb jo mov (bad) pop mov outsb fimul (bad) pop ljmp and jo pushq jo rex.WRX mov outsb (bad) push insl jo rex.WB push rex.WRX (bad) jrcxz nop/reserved rex.XB rex.WXB sub jo outsb movabs out (bad) pop cmpsb rex.W rex.WRX (bad) pop insb (bad) pop sbb jo outsb (bad) and mov jo (bad) outsb cmpsq (bad) (bad) (bad) (bad) outsb (bad) icebp movsl mov cmp jo (bad) pop jo es xor outsb scas mov outsb out rex.WRX pop and cmpsl pop jo in push add outsb (bad) pop rex.WRX cmp rex cmp jo (bad) outsb xchg push jo pop outsb cmpsb cmp (bad) cmp pop xchg xlat jge adc (bad) out cmp rex.WRX rex.WRX retq rex.WRX pop pop cwtl rex.R (bad) out movsl out cmp ja pushq js js rex rex.WRB cmpsl (bad) rex.X xchg sub jg sbb sbb xor (bad) pop sbb cmp pop cmp pop cmpsl or rex.WB lahf pop cmp sbb push in push jo (bad) pushq in (bad) pop pop jo decl scas rex.WRX jg (bad) rex push pushq std rex.WRB cmp movabs adc jo insb mov pop pop or jo (bad) cmc ja jo add jo out jg (bad) repz pop rex fsubrl push outsl jo in in xor jo sbb push cmc jo jmp pushq pop outsb mov jmpq outsb fildll incb sbb out (bad) in pushq rex.WRX in (bad) rex.WRB and cmp mov outsb (bad) push outsl jo loope xlat fcoml sbb outsb ja push jo in fist std and (bad) outsb mov rex.WRX xchg push outsl repz orb out cmp int jo push out movslq out rex.WRX insl (bad) lret (bad) fbld pop imul (bad) (bad) rex pop outsl mov out push outsb rex jo push jo mov mov jo outsb (bad) fcoml sbb cmp jo jo clc mov repz (bad) out sub fdivrl (bad) notl lods (bad) mov (bad) jo rex.WRX outsb xchg push jo imul negl mov sub fsub outsb (bad) (bad) mov sar jge and xor lock mov rex.WRX jp jo (bad) jo mov out mov (bad) rex.WRX rex.WX (bad) out sbb cmpsl (bad) mov (bad) pop sub movabs lahf (bad) mov push or insl pop jbe (bad) xor outsb cmp rex.WRX add (bad) pop (bad) cltd pop jo pop test pop callq (bad) xlat xchg pop sub sbb (bad) cmp mov sbb outsb push cmp fiadd mov add xchg cmp lahf push pop jg outsl scas push jo andl pop pushq in (bad) xchg jo outsb mov rex.WRX pop pop jnp (bad) (bad) add xchg jmp scas pop add adc (bad) sbb pop mov outsb ja divl jns xchg rex sbb jo rex.WRB sbb pop (bad) ja adc (bad) pop mov xchg out mov xchg cmp (bad) repz pop ffreep pushq mov jo push out (bad) outsb iret fcoml push cmc outsl pop addr32 pop ss and rex.WRX mov outsb mov rex scas lahf push jo rex.R gs rex mov jmpq (bad) int in addr32 (bad) sub pushq pop cmpsl sbb pop rorl iret pop mov lea or pop out (bad) (bad) jo pop and and xor mov (bad) rex.WRB retq in sahf imul push repz xchg and mov notl push data16 mov cmp xchg pop pop es or pop jrcxz iret pop fnstsw pop cmp pop xor rex.WRXB pop and rex.WRB pop addr32 jl pop (bad) push pop or int rex.WRX jnp cmp pop (bad) rex.RB push rex.WRXB jne sbb rex.WRX push pop jmp out adc out jge outsb sbb ja pop or sbb lods cmp (bad) (bad) (bad) lock xor out sbb add add (bad) sbb pop test cmpsl pop (bad) pop in xor mov sbb pop outsb decb push pop rex.WX pop lock mov (bad) mov pop push (bad) pop rex.RX mov pop cmpsl mov cmpsl je iret (bad) jo rex.W mov xchg pop push and pop mov (bad) iret in scas hlt pop or push sbb (bad) pop rcrb sbb rex.WRX pop pop push sbb mov push xlat pop pushfq sbb mov rex.WRX pop insl mov jo fsubs addr32 pop adc jo jb mov pop imul addr32 add pop and pop jg (bad) and fdivs (bad) mov (bad) rex.WRX pop sbb jo pushq cmp cmpsl push (bad) pop and sbb bnd imul jo out (bad) rex.WRX outsl cmpsl lock jo mov (bad) mov cli callq negb (bad) pop cli rex.W push loop mov pop movabs rex.WRXB (bad) (bad) rex.RXB fstp rex.WRB (bad) xlat pop (bad) cmp out jo xchg or sub (bad) sarl (bad) movabs out xchg outsl rcl or mov jo jo xchg shrb (bad) (bad) mov pop xor cmp jo push mov mov pop cmpsb pop rex.X xlat addr32 sbb outsb ja (bad) repnz sbb (bad) (bad) mov pushq enterq pop out in (bad) pop jo jle mov js (bad) mov xlat (bad) (bad) pop shrl lahf out sbb (bad) lea (bad) jo push pop fsubrs (bad) outsl mov addr32 sbb or jo (bad) rex.WRXB push mov (bad) rex.X jo sub and sbb pop jrcxz pop fistpll nop rex.WRXB ficomp mov pop fcoml push (bad) mov rex.RXB rex.WRX rex.WRB (bad) outsb incl rex.WRX mov lods outsb lahf rex.WRX push pop jo jmp fcomps rex.X gs ss mov sbb and jo movabs lods outsl outsb jb (bad) js cwtl rex.WRXB loop xchg or out jo jmp mov pop xchg pop repnz rex jbe scas pop sbb rex.WRX jmp jo rex.WRB rex.WRX pop (bad) cmpsl lgs enterq cmp mov rex.WRB or pop (bad) rex (bad) or mov jo rex.WRX pop (bad) jo cmp push pop fidiv movabs push xlat (bad) pop jne mov imull pop pushq pop rex.WRB jo rex.WRB rex.WRX rex testl sbb outsb and lahf negl jge adc ja (bad) push pop or iret pop (bad) sbb out pop cmp rex.WRX out pop rcr jo out pop (bad) mov rex.RXB rex.WR (bad) (bad) negb jo mov jo rex.WRX jrcxz or fistp (bad) cmp imul jo scas cmp (bad) pop mov rex.WRB rex.WRX rex.WRXB cmpsb outsb (bad) jb fnsave xor mov mov sbb (bad) xchg add pand cs and fucomip mov (bad) pop add rex.WRX mov out and callq mov rex.WX outsb (bad) push pop retq mov mov jo rex.W cmp adc jbe negl pushq mov enterq xchg (bad) imul cmp xchg rorl (bad) sbb rex.WRXB (bad) negb or pop loopne jmp and pop (bad) movsl add mov jo fidiv stos fisttpl sbb mov (bad) cmp in pushq negb (bad) movabs movabs rcl lea mov jo (bad) rex.WRX leaveq rex.WB pushq sbb outsb sbb retq rex.WXB out cmp jmp pop and adc jo jg jo or (bad) push or mov (bad) std jo jo mov jo rex.WRX rex.RXB pop cmp (bad) rex.WRXB icebp outsb out rex.WRB out pop movsl rex.WRB scas rex.WRX pop gs jo jo (bad) xchg cmpsl (bad) repnz sbb outsb iret rex.WRX cmp movabs (bad) mov in jg js jo push xlat addr32 pop pop in cltd scas int3 pop out pushq rex.RB imul pushq rex.X (bad) repnz pop xor xchg (bad) sbb sbb outsb (bad) notl cmp pop mov (bad) insb (bad) negb mov push pop shrb (bad) outsl adc fisubr push or pop (bad) jg pop scas fisttp rex.XB decl (bad) pop rex.R cltd fistp pop cmp (bad) pop cmp push cmp pop and sbb negb ja xchg (bad) mov test push (bad) jno lcall fldt sbb pop push rex.WRB pop cmp jnp jo xchg (bad) negb pop push out rex.WRX pop (bad) outsb movabs repnz rex.WR out cmp push out pushq push rex.WRXB or pop mov mov (bad) push cmpsl pop jo jle int (bad) sub sbb (bad) push out outsb fsubp in rex.RXB (bad) mov and fiaddl adc out divps rex.RB rex.XB sub push push (bad) pop rex.RB rex.B rex.WB rex.WRX pop lock sbb add push repz pop xchg (bad) push mov in (bad) pushq jb or in int rex.WRX (bad) pop xlat cmpsl rex.WXB xor xor (bad) pop fldl2e push cmp cmc xchg out (bad) mov pop and cmp and fucomp mov pop fldcw cmp icebp and mul pop mov rex.WRX rex.RXB add xor pop fwait (bad) pop or or pop and (bad) cmpsb pop sbb pushq jo adc outsb fsubs add push in int3 pop test push cld sub mov pop movabs jo out pop jo mov cmp add and fbld pop rex.WRX (bad) sbb jnp outsb rex rex.WRX andl mov jg callq hlt pop jo cmp (bad) jo push cmpsl pop jo (bad) sbb pop jno push outsl pop xor (bad) pop and adc sbb pop (bad) rex.WXB add jo (bad) and or negb (bad) (bad) (bad) sbb pop fist pop jo (bad) sbb pop iret or xor pop (bad) rex.WXB (bad) out cmp pushq pop push (bad) pop xchg (bad) or pop xlat jg pop (bad) and cli (bad) adc repz pop adc out mov loopne push out addr32 pop rorl xchg or (bad) rex.B pop and out xlat (bad) hlt pop (bad) add pop mov outsb sahf mov outsb mov add out fcomip pop xor rex.WRXB and pop fistl addr32 js rex.WRB pop int3 out mov retq cli (bad) xchg push and pop shrb mov mov jp xor (bad) mull data16 jo xchg (bad) lret rex xor and pushq hlt mov pushq lret and jo outsb scas lahf push jo fwait outsb mov test (bad) jle stos lock addr32 jo rex.WRX rex.RXB repz pop cs out xlat rex.WRX out sahf outsl movslq jge pop jbe pminsw pop out rex callq fisub jle fs out pushq in out insl jo rex.WXB or jo outsb mov rex.WRX cmc pop loop cmp cwtl outsb mov in fbstp rex.W (bad) outsl jo fisubr (bad) mov jo shrl cmp mov adc cmp rex.WRX rex.WRX pop test pop rex.RB cmp pop fdivl pushq fdivr (bad) js jo outsb mov (bad) jo mov (bad) cmp sahf (bad) jrcxz iret (bad) jnp jo outsb scas notl rex.WRB outsb and push jo pop (bad) (bad) fcoml sbb outsb (bad) cmp and mov std shl (bad) out pop outsb pop fsubr jo rex.RX (bad) push insl jo rex.WRB scas rex.WRX (bad) adc mov loopne pushq pop out incl pop sub sbb scas mov cli outsb scas scas pop jo fsubrl cmp sbb enterq push jo in (bad) push pop jo sbb rex.RXB rex.WRX cmp (bad) pop out fild out cs sbb pop retq ficompl pop rex.WRXB hlt outsb rex.W mov jo rolb std jp test (bad) push pop pop mov rex.X push out mov (bad) push jo test jo out and outsl xlat mov push pop jge (bad) xchg pop shrb notl not scas (bad) cmp mov outsb (bad) and lods (bad) (bad) mov pop cltd outsb add pop xlat jo in sbb jo sbb push divl stos sarb insl jo rex.WRB xchg insl pop xchg cmpsb and jp xor cmp (bad) jo pop shll pop rex.WR (bad) mov rex xchg (bad) and (bad) (bad) pop (bad) jo mov xor mov mov rex.WRX notl jo rex.WRXB xchg mov pop (bad) outsb cmp jo xchg and pop pushq (bad) outsb xchg (bad) pop mov mov pop rex.WB scas jg jo leaveq mov push jo outsb xlat cmp in (bad) push pop jo mov (bad) (bad) jo rex.WRX outsb addr32 rex.WRX push cmp pop data16 mov pop lods mov (bad) cmp mov outsb (bad) push imul jo (bad) or add pop or faddp outsb imulb jo pop push jo loope js rex.WRX jo in and gs pop jo movsl (bad) iret push pop jo sbb push out subl rex.WRX pop cmp jg push jle jo push push jo jl scas (bad) push jo leaveq outsb (bad) cmp mov outsb push push or jp adcl jo (bad) (bad) mov repz pop subl (bad) cmp jb jo push in outsb movabs jo jo jo push out nop outsb ffreep rex.WRX outsb or std in rex.WRB push outsb (bad) cmp jo or rex.RXB repz rex.WRX pop xchg jo and mov or cmp (bad) testl jo push xor imull pushq push out rex lods xor lahf imul jnp jo outsb scas scas push jo shrb rex.WRX rex.WR xor xor pop rex.WRX out test rex jg and jo and or (bad) rex.WRX cmp rex.RX push jo pushq fcoml sbb (bad) cmp push add rex.X push out cmp out rex.WRX cmp jge xlat rex.WXB (bad) xor push outsb scas (bad) push jo cmp jo (bad) outsb jg negl enterq push jo es cmp jo add (bad) xor pop mov outsb adc outsl jo ds cmpsb mov jo outsb pop rorb pop (bad) mov outsb xor lahf pop add cmp gs rex.WRB mov jo shrb insl jo rex.WRB out sahf pop scas cmp jo xorl pop pushq out ja pop insl pushfq pop mov jo jbe sahf add jp pop sbb decb cmp neg push (bad) jo rex.RXB sbb push jo in or outsb jo push jo jl (bad) sbb in addr32 lahf rex jns cwtl sub jo push out (bad) outsb (bad) out rex.WRX pop stc cmp jge and xor cld outsb mov rex.WRX pushq int3 std rex.WRX in (bad) push jo rex.WRX pop rex.WRX imul push pop pop jbe (bad) pop mov out mov outsb (bad) out xor movd xor and in mov pop jo sbb push (bad) adc cmp xchg (bad) push lods imul push pop addr32 or (bad) rex.WRX rex repz std jp (bad) sbb push out fwait outsb pmaxsw imul (bad) repnz jge out mov loop in xchg outsb xchg (bad) cld add fdivr (bad) pop rex.WR mov pushq sub cmp pop push pop mov jbe add (bad) (bad) jg pop push outsb (bad) mov pop and callq pop mov pushq jp (bad) lea rex.WX rex.WRB rex.WRX rex.W add (bad) gs pop mov pop (bad) mov lcall (bad) pop out ja pop adc packssdw repnz pop sbb jo (bad) (bad) jo out (bad) rex.WRX insl movsb pop pushq mov lea rcll (bad) scas pop pushfq mov rex.WRXB rex.WRXB (bad) loopne xchg push cmp pop jmpq mov out retq stos mov in mov out rex.WRX pop (bad) movsl ja push jo (bad) outsb (bad) rex.WRX (bad) (bad) lcall (bad) xchg in mov pop jle sbb rcrb cs sbb (bad) pop pop (bad) (bad) mov lcall (bad) out rorl pop jno mov loopne mov ficomp mov xlat rex js xchg in cwtl outsb and jg pop pop fisttpl movabs (bad) andl mov or pop pop jns xlat pop pushq xchg pop (bad) (bad) addr32 jge jo retq pop (bad) mov (bad) jo (bad) in pop mov xchg jmp mulb repz outsl jo xchg jg sbb insl sbb pop (bad) imul pushq imul (bad) out jo cmp mov pop int3 outsb or (bad) pop rex in xlat push pop jo jrcxz fcoms (bad) push pop and mov (bad) pop xor push testb jle push rex.RXB rex.WRB rex.WRX imul pushq cmc sub sbb pop pop (bad) (bad) leaveq (bad) rex.WRX mov scas negb cvtdq2ps xchg out (bad) pop sbb pop shrl cmpsb mov jo rex.WXB pushq scas jo callq cwtl pushq or or jo lret pushq pushq pushq pushq jbe movabs insb jo pushq mov out mov jo jg fidiv rex.WRB pushq pushq pushq addr32 leaveq (bad) outsb (bad) (bad) push jo xchg push (bad) jo pop pushq cmp or jo (bad) pop push leaveq push pop ja fidiv rex.RXB add pop sub cmp rex.WX jo mov (bad) pop sbb (bad) jo xchg sub mov mov rex.RXB out callq (bad) cld rex.RB loop push or cli xchg cmc (bad) pushq mov clc adc adc cmpsl mov pop stos (bad) xlat cmpsl pop (bad) xor idivb insl outsb cmpsl stc sub and hlt jo rex.WRX pop cltd (bad) and sahf pop sub mov pop lahf outsb cmovp lock (bad) (bad) iret rex.WRXB callq xchg jnp rex.WRX sahf pop sub jl xor pop mov mov jo outsb cld fstps or cs (bad) pushq pop mov in push leaveq outsb xchg ror in pop mov pop push and jge outsb (bad) iret (bad) addr32 pop callq int3 pop (bad) hlt outsb pop lret int pop mov out loope pop pushq rex std fisubl rex.WRB (bad) cmp (bad) and (bad) (bad) pop out fidiv scas pushq rex.RX pushq js mov outsb rex.W xor xchg outsb scas pushq outsb xchg or cmp cmc cwtl (bad) push fsubl lods vxorps pushq fidiv rex.RB outsb scas (bad) insl jo rex.WXB (bad) push xor xchg outsb scas notb rex.WRB outsl rex.WRX fimull outsb push rex.WRXB (bad) pop fsubs out jle (bad) add jge (bad) incl mov sahf retq mov ja pushq push addl jg adc movabs mov (bad) and xchg xchg (bad) mov and mov scas (bad) cmp retq shl push rex.W mov mov rex.X out jmpq loope (bad) mov outsb or sarl int3 xor rex.WRX fs cwtl xchg imulb (bad) pop (bad) push cmp div (bad) (bad) (bad) sti (bad) mov adc (bad) lret pop (bad) leaveq and or (bad) pushq rolb (bad) jmpq mov mov or (bad) (bad) sub roll gs and (bad) add ds cmp rex.WXB lahf adc xor rex.RX (bad) gs mov sahf mov cli mov out rex.WRB mov in sbb cld rolb sub (bad) (bad) clc scas movsb ds rex.XB rex.WRB xchg push rex.WX (bad) or jge jmp or or movl rex.WX stos sub rex.WR (bad) adc ficomp mov (bad) (bad) sti adc lret pushq rex.W clc rex.WX (bad) and jns lret stc fnstenv cmp mov adc xor cs scas (bad) cs mov es cs xor sbb lods mov mov (bad) callq and seta and add shr movzbw mov stc clc test jmpq je test add bt bt bt stc cmp jmpq lea lea mov jmpq test jmpq jne sub shl xor setge jmpq movl push (bad) cltd fimul cmpsl rex.WRXB push test pop rex.XB (bad) (bad) xchg outsb insl lret jl jb fiaddl xchg xchg scas mov sahf xchg jo,pt or (bad) jno lea jl mov xchg xchg cmpsl jb clc rex.WX mov movabs (bad) (bad) cld lods cmp xor (bad) (bad) (bad) in std loop stos movsl xchg xchg adc mov mov sub (bad) ror jb in ss mov pop mov cmp adc mov and es sti out adc fs xchg xorl xlat xor or movabs (bad) pushq loopne sbb fidivrl sarb and add (bad) mov (bad) jmpq callq shl neg shl add cmp mov stc jmpq enterq and scas mov rex stos adc int3 jmp div out fsts mov lock mov (bad) (bad) fwait add sbb mov pop jns rex.WRXB xchg (bad) ja lods rex.RX lret repz rex.WXB push (bad) (bad) (bad) decb jno mov stc cwtl mov in stos cs (bad) (bad) cld in idivl rex.RXB (bad) (bad) pushq pushq movsb mov imul pop lret insl sbb cmpsb pop icebp stc movabs jae rex.R cmpsl xchg adc (bad) mov pushq stos mov hlt mov std stos retq and mov mov retq leaveq rex.WX movabs sti repz neg mov in jo mov mov jns pushq rex.WR (bad) cmp mov sarb xor adc out rex.WR sti or or sub push (bad) stc add ja sub in sti (bad) jns (bad) (bad) insl add xchg sti sahf sub mov rex.B push (bad) or (bad) repnz cmpsl pop sbb (bad) (bad) sti ffree (bad) sbb (bad) (bad) (bad) (bad) mov cwtl ffreep iret ficom fildl ror je lock add cmp es (bad) mov mov outsb (bad) cmp cmpsb adc repnz add fildl shr rex.WRB cmp xchg lea ja stos mov inc fiaddl sub mov andb movabs notl in movabs stos push push fwait (bad) and pop cmp rex.WR decb shll sub push movsb xchg in (bad) (bad) (bad) in (bad) (bad) (bad) cli add (bad) retq mov (bad) sarl pop xchg movabs cld (bad) push pop in add rex.WRXB movsl push mov scas out (bad) cli ds rex.X (bad) (bad) cltd (bad) jno sub rex.WXB cmp test xchg xchg rex.R cmc mov movslq cmpsl (bad) fadd fld xchg (bad) (bad) add sahf xor (bad) hlt xchg movsb rex.WXB rex.WX xchg rex.RB adc je pop ucomiss fdivr (bad) cld lock or mov pop adc (bad) (bad) (bad) (bad) push jne rex sub or xor retq add rex.X or rcll cmp insb rex (bad) loope (bad) (bad) callq jb adcl (bad) cli mov (bad) cli cwtl enterq sti fwait je mov retq (bad) shrb insl (bad) roll psubd fisubrl push sti (bad) (bad) int fnsave mov (bad) sbb xadd cmp bt add bt clc jmpq xchg jl pushq jbe pushq jmpq jmpq je test bt bt sub jmpq add (bad) movabs negb insl push pushq sbb cwtl jnp ficoml adc scas sbb (bad) icebp out lock mov jo mov notl mov xor scas xor or jge cmp xchg shll test imul sti adc fcmovu jp test adc sbb pop (bad) test jrcxz and out movabs retq mov insb lret movsb (bad) mov fisubl xor (bad) movsb (bad) adc (bad) pushq or add xor scas adc lods out mov lods jl rcll jrcxz out repz adc push rex.RXB (bad) in addl (bad) pop rex.WX pop xchg fistp jmp popq (bad) jle pop mov insl add xor and jb xor gs hlt and (bad) sbb sti sub push cmpsl rex.WRB and rex.WRB ss (bad) (bad) sti mov (bad) (bad) (bad) (bad) xchg clc mov sub (bad) (bad) pop or add add repnz rex.RX rex.WRXB xchg movabs xchg mov (bad) push adc (bad) lods movabs rex.R add mov rex.R js sub jns sysenter (bad) cmpsl enterq mov add xchg jne bt jmpq jmpq test std cmp pushfq mov sub movabs and mov repz fldcw imul xchg rex.WX test (bad) callq stos lahf rex.X lret xchg sar or (bad) imul pop (bad) (bad) (bad) std and adc movabs mov push (bad) and cmp and cmp pushq push sbb xchg mov addr32 add mov rex.WXB stos lret std adc mov adc outsb add add or sub or cmpsl (bad) icebp movabs sti insb sbb popfq iret mov (bad) rex.RB push mov cmp add rex.B ds fadd and pushfq mov pop cmp pop jle add (bad) std movb (bad) jge cs xchg (bad) lods outsb mov xor xchg insl xchg push mov retq insl pop xchg push mov (bad) repz sub cmp sbb outsl mov rex.WRB pop stc jg (bad) and loop jo stos lret sub (bad) (bad) (bad) std (bad) in js and mov rex.WRXB cli (bad) jae mov and jp xor rex.XB rex.R (bad) pop jmpq or sti sahf rex.WRX mov (bad) (bad) (bad) jno sub test mov rex.B roll rorl mov int outsl out int3 lods in and mov stos int3 (bad) (bad) sbb (bad) retq pop (bad) mov insl lods test lahf fcoml (bad) (bad) mov xchg stc cmp out cmp lahf std lock (bad) (bad) push mov and xor loopne and cmp mov imul (bad) sub int xchg pop adc push in movabs std popfq add lods leaveq and sbb es (bad) adc (bad) clc or jmpq jmpq je cmc jmpq jmpq jmpq lret sub (bad) cli cld xchg adc fnstcw mov mov fdecstp enterq jb add outsb mov sahf hlt pop pop xchg out scas and lock sbb jnp or rex.WRB out rex.XB jge push mov xchg (bad) rex.WB js add cld sub fldl (bad) (bad) (bad) (bad) sti scas cmp xlat mov add add jnp seta rex.RXB int3 movsb xchg addr32 jo sbb add mov fwait mov cmp movsb mov in rex.WRB sbb popq mov repnz mov jp movslq loope (bad) sahf (bad) stos (bad) pop mov xchg rcr adc mov (bad) mov or pop mov xlat roll (bad) cmp leaveq jle jo xchg test mov mull cmp sti xchg insb icebp adc rcr int3 cmpsb sub movsb loope test (bad) sahf sbb fldcw mov mov cmp and wbinvd (bad) adc xor (bad) shlb mov adc cld (bad) (bad) (bad) (bad) xchg loope (bad) mov mov movabs (bad) loop push repz lahf rex.WXB adc mov rex.B fcmovnu rex.W movsl ds sub lcall and movabs mov (bad) (bad) rex.WB xchg sbb add jmpq rex.B rex.WRXB lock and ja jle pop ss jno mov shl hlt fwait rex.XB mov mov mov sbb cmp lahf and leaveq pop pop (bad) adc or mov rex.WXB mov test mov jge (bad) and jno cmpsb (bad) (bad) (bad) (bad) (bad) push mov adc addr32 xchg cmp xor loopne mov sbb push jbe test (bad) xchg js repz xlat sbb rol mulb (bad) (bad) jmpq xchg rex.WRB cwtl mov and clc rex.WRB and out rex.RXB (bad) je test rex.WRXB cs int3 xchg cli int3 pop pushq cwtl (bad) mov push rex.XB stos add adc mov (bad) outsb movabs cmc cmpb jmpq jmpq jmpq jmpq rep movsbq mov mov jmpq mov adc (bad) mov std cmc mov movabs pop mov (bad) mov pop push push cmp mov mulb mov (bad) jrcxz jmp fisubrl mov cltd (bad) fistpll adc js movabs movabs xor mov out jb xor rex.WXB add nop pandn add fwait div xchg mov pop cmp cmp lret ss cmp lods pop mov (bad) (bad) sti mov and (bad) (bad) (bad) (bad) addr32 int3 lahf cs callq sub jmpq stos imul movabs stos enterq push rex pop (bad) rex.WR in (bad) cld push loope lret imul retq repz es movabs jmpq mov cmc cmp cmc test jmpq adc pop lea sub sarb xchg imul pop rex.WB sbb pop cmp pushq xchg (bad) (bad) iret cmp in mov or sub cmpsb rex.RXB or xchg subb (bad) push data16 add out cltd sbb (bad) (bad) sti in and inc jno jae xor movabs stos (bad) jno sar test callq xchg (bad) and jns xchg push cmc clc hlt icebp gs test outsb lods add add add (bad) js and test sbb imul (bad) out and cld sti rex.WRXB pushq fwait mov cmc (bad) rex.R rex.WRXB fwait mov (bad) xchg jg adc (bad) (bad) addr32 insb add rex.WRB jne jmpq jge push add jmpq xor mov (bad) push xchg cwtl rex.WRB fs and or test loope (bad) jg repnz mov and mov repz clc (bad) stos stc jmpq cmp jns fwait rol jp mov lea cmp mov xchg push (bad) rex.RB mov rex.W jne int3 out sub lods sbb and sarl rex.WB mov (bad) cmpsb (bad) je rex.XB rex.WR fstps jo test (bad) (bad) (bad) (bad) sti cmc jno lods xchg (bad) (bad) (bad) (bad) lods (bad) pop jg lahf rolb ja (bad) or xchg test int3 cltd add add push lods (bad) mov outsl cmp hlt rolb rex repnz xor out (bad) or (bad) insl loopne mov jle pop sub pop adc int3 clc popfq lret rex.WB ss insb add mov or ja xchg add add add imul add mov mov test loopne callq test adc sub push stos pop stos (bad) stos pushq stos shrb stos lock clc stos sbb xor push stos add add add pop add add push movabs js andb movabs shlb stos pop stos pushq stos cwtl stos test mov stos callq stos sbb stos pop stos pushq stos add add add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add add add movsb shlb movsl adc rex push movsl (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test xor (bad) test nop test shrb test lock clc stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos test mov mov stos loopne callq stos add lods sub lods rex.W jo js test mov add add add movsb cwtl movsb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs cmpsl enterq fsubs lock clc cmpsl add sbb xor rex.W test test stos test mov mov add rex add subb test mov test loopne callq test adc sub stos rex.W push stos pop stos (bad) stos pushq stos subb stos movabs stos fsubrs lock clc stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs add add enterq callq scas sbb scas pop scas add add add lods or or add shlb add add jo cwtl movabs shlb movabs or and push movabs mov mov cmpsl shlb callq cmpsl add sbb xor rex.W test test test test test test test test test test test test test test test test test test test test test test and cmp push test pushq test nop test test mov mov test loopne callq test adc sub stos rex.W push stos pop stos enterq or mov mov mov stos shrb add add movabs js andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos sbb xor stos push stos pop stos (bad) stos pushq stos test add add sbb (bad) add add xor rex.W push scas pop scas (bad) scas pushq (bad) add (bad) add add add movabs add lock and movsb enterq add add add mov add rolb or add data16 lods add or sub add nop movabs fsubs or movsb movabs rex int3 add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add add add loopne callq movabs and push movabs callq movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb cmpsb (bad) cmpsb add add add xor mov cmp cwtl cmpsb mov cmpsl sbb xor callq test cmp pushq test mov test or cmp (bad) stos pushq lods rex lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas shrb scas loopne callq scas add xor add add lock sbb xor movabs callq movsl push movsl (bad) movsl mov fsubs (bad) cmpsb sub xor and (bad) lock rol add shr push rol rol movsbw push inc mov and rcr add shr mov rcr (bad) lock (bad) mov jmpq jmpq rex.X (bad) rex.RB fs ss scas sbb jb je (bad) ja jb (bad) (bad) (bad) xor (bad) cli scas movsb ds mov cli mov in retq mov test test cmp (bad) jge (bad) rex.WRX and popfq sbb xor jae push cli icebp (bad) hlt and movabs adc fcmovnb (bad) (bad) (bad) cld test (bad) (bad) (bad) decl (bad) test xlat rex.XB sbb mov test test loope xchg insb add or mov stos rex.WX outsl data16 mov imul jns pop jle adc (bad) and push movslq jrcxz (bad) insl add outsb jle test xor (bad) and pop stc (bad) adc in (bad) jmpq xor add lret xor (bad) movsb sar mull add insl push cmpps fwait stos rex.WX es ss and cwtl mov pushq (bad) in sbb fcoml jns jge cmp movsb (bad) xor fimull xor (bad) (bad) (bad) sti xlat std mov rex.X (bad) (bad) (bad) mov jmp sub rex.RX (bad) (bad) pop rep xor rex.WB in and jns ja (bad) (bad) and test scas xchg (bad) push jns adc add add int (bad) mov movabs rex.WR mov and imul (bad) repnz sbb (bad) (bad) jp xor adc (bad) test cs stc (bad) jno test es xlat and callq stc cmc test test cmp jmpq jmpq jmpq (bad) out imul jmp jne xor test and xor add rex.R (bad) fstl rex.WR rex.RXB mov xor cmp pop mov jrcxz rex.RB sbb mov xor repnz out (bad) mov mov pushq (bad) (bad) (bad) cli mov jae sahf (bad) (bad) (bad) std nop loope cmp fwait mov cmp movslq add in movabs enterq or gs fs (bad) (bad) inc gs xchg adc cs jb add (bad) (bad) out push cmp test (bad) mov shrl rex.RXB (bad) cli pop fimull outsl mov out mov movslq cmp adc rex.WB add or (bad) lea movzwl mov movzbl lea movsbq jmpq outsl insb xor cs insb add add jmpq jae clc bt cmp jmpq imul stc clc add jmpq jmpq ja bt mov (bad) lock test mov not add shrd shl cmp mov xor mov jmpq rex.WR rex.WRB sbb test cli add icebp cltd rex.RB mov orl stc sarb stos fdivr (bad) (bad) add in repnz cli mov xorl (bad) xchg mov rex.WRB mov mov cmp xor or (bad) stos sbb (bad) rolb mov (bad) mov and lods pushfq add fidivl imul icebp mov xchg movsb out test fs (bad) (bad) sti out movabs sbbl in pop pop rex.W leaveq pop xor test add add rex.RXB js rex.W (bad) pop out retq popfq out jne rex.WB insl sti xor mov xor mov (bad) (bad) sub rex.RXB movabs addr32 xchg mov lock or and loopne ja add sub jg test xor repz cwtl (bad) xor gs scas adc jl shrl rex.WB rex.WB hlt ss movabs stos andl jrcxz or mov add scas xor (bad) (bad) (bad) sti xchg sbb outsb (bad) (bad) (bad) (bad) je rex.XB and retq cmp (bad) jbe and stos jae popfq (bad) std mov fcompl pop fidivl mov or in sub (bad) std movntq (bad) cmc sarb pushq cli sbb scas xchg clc out hlt rex.WRXB (bad) rex.W imul rex.WRXB pushq and (bad) je and xchg mov (bad) int3 imul repz test (bad) mov or lret (bad) pop xor andl movabs jbe adc sahf mov fdivp rolb or push mov insb scas xchg (bad) add add cmc jmp popfq imul js pop xor sub add rex.RB movabs (bad) (bad) sti rex.WRX sub (bad) (bad) sub mov orb sti loop jb jne (bad) (bad) (bad) ljmp fwait rex.WRXB sbb xchg adc push xor (bad) lahf add sbb rex.X pushfq cwtl cmpsl and jae xor sub or (bad) mov sbb test jbe add je outsl fs imul add (bad) mov mov xor rex.W rex mov (bad) (bad) (bad) sti loopne cli sbb es pushq imul xchg rex sub or callq push jo rex.WXB (bad) jae xchg leaveq sahf (bad) jo rex.W (bad) out xchg add jg xor cmp in movslq mov leaveq retq lret xchg rex.WX pop mov cld rex.W adc (bad) (bad) (bad) sti out pop xorl lret adc hlt push add movabs mov cli mov insl mov fstpl movabs lods mov mov mov add add or mov jge cltd lret js pop ds mov jbe std popfq xor (bad) leaveq sarl (bad) sbb jnp cld pop cld jmpq jge (bad) mov sbb sbb mov sbb (bad) rex.WB nop rex.WXB push pushq jp push mov stc in (bad) mov jg cmp idiv out add jge imul (bad) xor fucomip rex.WX (bad) pushq pushq scas mov (bad) (bad) sub (bad) sbbl fldenv out imul fxch mov xor rex.WRB xor fs mov pop pop movsl mov mov (bad) add scas movabs clc cmp stc jmpq scas mov scas pop js bnd (bad) jl insl mov push push rex.WRX sub ffree add jmp xchg fmuls loope and (bad) lret (bad) subl fild pop mov sub mov jae data16 sbb (bad) (bad) nop fadd jbe jno rex.B shrl push rcll repz loop (bad) (bad) (bad) scas (bad) xchg cld mov icebp lods fmull (bad) adc cmp jmpq icebp sbb and mov xchg movabs mov cvtdq2ps in imul sub xchg ja rex fidiv lahf or (bad) (bad) hlt or (bad) jg fwait clc ja mov jg outsl (bad) cwtl mov sub sbb imul add sbb and cld jne clc jl cmp jne xor add cmp enterq jno xchg decl sarb leaveq rex.X push xchg lret sbb out and push cmpsl cld jne adc rex.RX addr32 xchg ffree sub test in (bad) mov mov mov lock out std xchg rex.WRB fs cmp mov (bad) (bad) sbb cltd (bad) sbb cld mov outsl mov rex.RX mov rex.RXB (bad) retq sbb outsl jrcxz rex.B in mov mov mov jns mov sbb and retq pop cld jne enterq (bad) push lods pop (bad) jne movabs sbb mov mov bt stc stc cmp jmpq or mov lret (bad) movabs in cmp mov mov (bad) not or (bad) cmpb xor test adc push (bad) test (bad) rex.WRB pop (bad) mov push push xor retq xlat sub insb icebp lret mov xlat or and rex.X rex.R movabs (bad) rolb lret adc or sbb cmc (bad) popfq xor xchg or jmp (bad) (bad) (bad) jbe pop rex.RB vpcmpeqd (bad) push rex.XB leaveq scas movabs sub fdivp fcomip clc test mov pcmpgtd adc clc sub (bad) insl mov std movsb adc rex.WB mov cmpsb cltd mov jb es je test cmp cmp retq je bt cmp clc clc cmp jmpq jp adc movsl (bad) sahf (bad) cmp ror repz sbb mov xor (bad) mov mov mov xchg (bad) cmp (bad) rex add (bad) cmpsb jg (bad) adc in push mov push cmp mov jnp lods sbb scas pop pop (bad) fisttpl enterq jrcxz (bad) jmp sbb ss mov cs xor rex jmpq rex.WB movabs fwait mov sbb cmp xchg sti (bad) (bad) (bad) ljmp sbb movabs xchg cmp je rex.W and jo nop test cmp mov xchg rex.RXB mov mov (bad) adc rex.WX es repz je rex.RX repz add add stos rex.WB cmp lret movabs ja push cmp rex.WRB rex.RX popfq push (bad) (bad) (bad) rex.WR rex.B rex.WRXB test rex.WX adc rex.WX sub enterq pop rex.WR rex.WRX mov or (bad) (bad) cld push (bad) cli retq (bad) (bad) pushq cmpsl add outsb loope (bad) rcrl movabs std push outsb rex.R outsb xchg sub add add rex.W rex.WX shr negl movabs xor sbb sbb (bad) sbb roll sub out rex.XB repnz (bad) rex.WX pop addr32 or ja std push cmp adc test sub mov add pushfq push (bad) clc movslq xchg lock std adc cwtl and enterq nop sti pop adc (bad) cmp mov je (bad) cld pop pop ds push (bad) movslq movabs and stc rex.RX xchg (bad) cmpsl xor rex.WRX jns test xor xlat loop out repz adc fdivr (bad) (bad) (bad) (bad) and jp (bad) (bad) (bad) (bad) stos mov sbb (bad) jbe out (bad) addr32 adc rcll scas (bad) callq scas (bad) push or outsb icebp movsb iret (bad) (bad) mov xchg fs pop xchg mov retq mov (bad) xor negl jno (bad) mov movabs add mov rex.WX push pushfq (bad) pop stos test sub in push or sbb out (bad) mov and lock jae clc bt stc add jmpq jmpq push or lahf jb add adc sub mov pop js mov or out xchg int3 mov xor loop (bad) mov jmp xchg xlat jne (bad) out outsb in cmp jb jrcxz and cwtl testl mov (bad) cmp cmp jae jle (bad) mov cmp insb jno and pop callq stos repz xor (bad) (bad) sti insb cwtl cmp rex (bad) (bad) decb adc or hlt push jmpq stos sahf and (bad) (bad) dec xlat div jrcxz xor std (bad) xor rex.WX push movsb mov movsl mov rex.XB mov sub out test sbb pop callq add (bad) pop rex.WX xor cld scas mov cmp nop (bad) in (bad) jmpq cmp in (bad) rex.WR mov push xor enterq lea pop adc xor rex.X rex.WXB sahf sbb lret imul sbb xor mov int jnp sub fsubrl and outsl jo add (bad) pushq adc pop lock in jrcxz xor stos pushq jrcxz (bad) (bad) (bad) cld adc (bad) mov (bad) (bad) (bad) (bad) icebp (bad) es rex.W push add xchg cwtl (bad) sti push sub retq add add out pushq push je mov lea (bad) pop rex.XB (bad) rex.B fs lock add pop and enterq add and (bad) cmpsl enterq xor xchg mov and rex.XB rex.WB imul add jg out scas (bad) out jmpq lret push ror inc shld mov mov bsr movsbw xchg mov movsbl sub mov cmp jmpq xor cmp lods adc mov sub rorb rex.XB sbb add cltd jrcxz xlat mov movsb push outsb push (bad) scas fiadd and lret xor stc mov outsl pop outsb push adc xchg (bad) jg addr32 (bad) movabs cmp or cmp pushq sti movabs or jge shll xchg xchg movabs faddl fmul ss (bad) retq jo jns rex.WR or add add pushq rclb pop (bad) mov mov or movsb xchg cli adc and nop (bad) (bad) rex.WXB rex.B enterq test (bad) (bad) in rex and fwait mov and pop xchg int3 callq btr jmpq callq jmpq pop cmpsl xlat add mov rex.WB js pop jg jae pop pop jge and scas (bad) sbb (bad) mov enterq jae (bad) (bad) (bad) rex.RXB in clc mov jg (bad) sbb (bad) fistl pushq (bad) out clc pushfq mov test cmp (bad) push adc (bad) fimull rex.RXB (bad) pop (bad) xchg (bad) (bad) decb lock pushfq insl enterq fld1 jmp sub loopne repnz add rex.WRB or sbb mov (bad) xor (bad) (bad) (bad) (bad) fisubr rol lods mov stos mov cwtl sbb (bad) sbb (bad) xchg imul in jo movsl (bad) stc and movabs hlt or (bad) (bad) cltd stc (bad) xchg (bad) adc sbb mov mov and xor jmpq callq jmpq push es xchg scas (bad) rex.R decl mov xchg jg xchg add addl cli fstp insl add mov cmpsb adc out fwait leaveq add mull test jrcxz sub imul gs cmp clc or stos movabs xor rex (bad) (bad) sti pushq (bad) (bad) (bad) incb mov xor clc pop cs mov rex.B cmc addr32 stos ficoml add rex.W xchg xorl (bad) ds mov or (bad) (bad) push xchg pop andl mov ss sahf mulb test (bad) not insl imul stos xor sub scas ja (bad) mov rex.WRX pop (bad) xchg vunpckhpd stos repnz or (bad) push (bad) int cmpsl (bad) lret rex.WXB js cmp rorb sbb lea imul or xchg cmp lock data16 lods mov or (bad) (bad) (bad) (bad) scas xor add and imul in mov or cmovns js cmp (bad) (bad) (bad) std xchg lret sti test add add jae pop stos test test and (bad) (bad) pushfq mov mov mov jns (bad) jae mov rex.WR mov int or xor lock lret mov xchg out incl sti setno btr movsbw inc add btr bt mov cmc cmp setne mov clc repnz jmpq movzwl dec bts shl mov bt cmp cmp test add bt mov jmpq add sub cmp shld rol mov stc cmc cmpb jmpq callq jmpq rex.RXB rex.R xor cs insb add cmc shl not not lods clc clc rol jmpq pop mov (bad) rex.RB cs or imul push push xchg (bad) push xor xorl mov div jmpq (bad) sub mov or in insb retq fwait test xor (bad) insb xor mov add (bad) mov ss add add xchg enterq sub movabs (bad) cld sbb (bad) (bad) (bad) idivl xchg leaveq movsl mov imul xor (bad) divl and test jl out jo (bad) imul movslq sbb rex.WRX add add rex.WRXB pop xchg retq fs (bad) sbb sti or out jg (bad) imulb lea mov lret lods xchg push outsl (bad) mov cmp (bad) (bad) cmp (bad) mov mov sub cs out (bad) jmpq xchg (bad) push sbb iret std jmpq xchg push movsl fcom or mov pop xor cmc in fildl push cmp add clc jmp fstpl fldl int pop fsubl cltd mov jbe rex.RX xchg vaddsubpd (bad) xchg ja movabs mov (bad) cltd xor mov push std jge sbb out shll (bad) test (bad) (bad) sti lock clc cmp (bad) (bad) dec idiv sub pushq lret and push or cli xchg cmp add add sahf jne test negb (bad) sahf pop sahf rorb xor rex.RX fnsave xor movabs cmp test jl mov loopne jle mov sub fstpl add jne jmpq add rex.WR rex.RX gs gs jb rex.X data16 xchg (bad) sbb jo in mov fucom (bad) fisubr (bad) test adc xor data16 mov and movabs lea cli cmc (bad) lahf (bad) add rex.WXB stos add loope jg (bad) rex.WX add sti rex.WB rex.WXB (bad) (bad) cli mov (bad) (bad) (bad) std cwtl cmp cmpsb (bad) mov andb jrcxz fadds fwait jl cmp pop mov (bad) (bad) (bad) lcall jg icebp push pop rex.R divps (bad) xor ss rex.WB cli pop add mov test subl or (bad) and pop sub repz adc (bad) sub xchg xchg add ja lods adc mov sub jo jmpq (bad) mov mov (bad) sarb xchg (bad) out outsl (bad) mov rex.X rex.RX data16 lods mov pop adc cmc ss rorb jg xchg lret (bad) and push or pand adc mov adc xchg mov rex.R cld mov fdivr (bad) (bad) sti (bad) mov cmp out mov rex.WR xchg mov out movabs (bad) cmp fcmovnb rex.R movabs and (bad) cmp imul fisub push (bad) add sub icebp or fidivr dec (bad) (bad) fcomi sub push add cs (bad) addr32 add add rex.WXB rex.WR cmc scas int3 repz loop add insb rex.R mov pushq pop rex.R mov fcmovb adc sub cmp ja outsl or rol xor mov xor mov sub rex.WR or jb rex.WR sub mov sub rex.W pop jle out adcl nop rex.R test xlat flds xor xorb movabs rex.R add sub ja loop hlt xchg adc or rex.RX mov (bad) (bad) sti test pushq outsb (bad) (bad) (bad) (bad) movslq in sub add (bad) mov cmpsl decl pop jb mov movslq xchg scas loop and add mov jp rex.WB or cwtl (bad) (bad) (bad) callq pop mov mov int3 cmpsb vpminub rex.WXB loopne or movabs adc cmp int3 test sbb and insl lcall mov sub jnp rex.WRX jmpq dec jmpq bt cmp or jmpq jmpq mov mov andl cld outsb xor adc or fsubp (bad) int sbb jo mov loopne jle gs sub addr32 addr32 lea scas jp cmp adcb mov or mov or leaveq cli out (bad) cmp in add cmp (bad) movslq out mov int3 mov rex.XB rex.WRXB addr32 cwtl (bad) and imul cli loopne push stc cmp (bad) (bad) std mov rex.WXB sub lock movsl (bad) (bad) (bad) ljmp add inc in mulb add cs pop in (bad) xchg push std cmc sub jmpq shrl notl xchg mov rex.WRB (bad) mov insl (bad) jne (bad) or xchg mov add not mov jmpq je lea not bswap not mov xchg bswap jne mov lea lea not jmpq jmpq je clc or jmpq mov xor movsb push mov adc or int3 (bad) mul fmuls int3 (bad) cmp sbb and ficomp (bad) (bad) cmp (bad) cmp or xchg xchg cmc fmull ja adc (bad) (bad) (bad) (bad) faddl (bad) xor cmp (bad) sub push lahf xchg cmp add (bad) (bad) (bad) std add xor (bad) (bad) callq cld add vandps ja adc pop xchg push hlt (bad) jge or mov jns xor adc xchg stc cmp mov jbe in rex.WX (bad) out lcall in (bad) mov fsubs stos lret mov jmpq stc add jmpq rclb mulb cmpsl (bad) mov xchg (bad) xor add int mov rex.WRXB push push mov fcoms shrl pop (bad) shr test pop (bad) (bad) (bad) (bad) incb sub loopne shr int (bad) pop rex.B add add fxch push movabs (bad) imul mov (bad) (bad) cld fistpll (bad) pushq mov (bad) adc rex push (bad) lock loopne rex.WR cmpsb rorb movabs push mov shll or test adc add leaveq mov lock pushq jae and mov xchg clc out in xor pop stos fidivr pop callq jno mov mov rex.RB or in cld popfq scas rorl push roll (bad) mov cmp loop jnp push test pop pop (bad) fistp xchg rex or mov enterq xor add and sahf rex.RX movsb sbb xchg int fimul sub sub lret (bad) cld and jmpq push cmp xchg (bad) pop (bad) clc cli test repnz (bad) (bad) jle frstor mov and xchg sub (bad) (bad) decb flds outsl movabs sub rex.WRXB xchg int3 lods mov rex.RX fwait mov push xchg std and je addr32 pop mov sub pop retq movslq rex.RB stos xor jnp int3 (bad) retq rex.WXB add cmpsl or sub insb rex.WRB and loop mov retq rex.B movsl (bad) mov pop cli retq mov rcrl es (bad) shlb mov fiadd cmpsb mov sarl rex fist movslq add pushq imul mov leaveq sti retq jmp adc or lods cmp je sub xor movslq loope (bad) mov jp sub in in stos or fnstcw mov lahf rex.WRXB fs scas push fdivrs jns push mov (bad) jo (bad) (bad) imul (bad) (bad) (bad) sti cmp gs (bad) (bad) (bad) (bad) (bad) js cwtl xchg es (bad) (bad) lcall (bad) adc es mov negl rorb in mov mulb scas xchg repz rex.R cmp insl subl jae nop xorb sbb (bad) test loopne rex.WRX rex.X repnz xor data16 fcmovu or pop adc jg xor jo adc test mov mov mov (bad) and jo imul xchg pop push add int3 stc or enterq loope movabs cmp fmulp pop mov and (bad) add and mov insl (bad) (bad) (bad) incb out movsl adc lahf pop xor (bad) (bad) (bad) incl xchg adc add mov (bad) jmp cmpsb enterq xor mov shlb xor cmpl push cli cltd mov push cmp subl push cld int xor sub mov xor push (bad) jmpq jmpq test cmp test or jmpq jmpq clc movb cmc jbe cmp clc test jmpq clc add clc cmc cmp jmpq push cmpsb clc mov add rex.WR sbb mov xor sbb rex.RXB pop (bad) (bad) jp test mov imull push sbb rex.WRB xor negb rex.WRXB and mov mov jb (bad) xchg rex.WRX rcr and sti scas add std and rex.WRXB (bad) idiv (bad) (bad) cld sbb (bad) (bad) (bad) cli movabs hlt jp loope mov outsb (bad) sti in mov pop push mov sbb and and add add xchg jg push mov mov cmpsl cmp callq lret cwtl add hlt xor and (bad) subl xchg add loope lods enterq stos jb jle sub lret rex.WR loop stos mov xor (bad) add (bad) rclb in mov cmpl iret out fildll stos pop (bad) rex.W xor cs or fisttp rex.WRX movabs sbb jns cli (bad) clc push xchg outsl sbb jne push rex.WRB (bad) imul mov jb mov pop mov data16 sub sub jle rex.WRX sarb outsl and imul mov enterq cmp xor jno adc (bad) pushq fdivrs sbb jmpq lahf rex.WX (bad) (bad) decb (bad) (bad) (bad) (bad) repz jae (bad) andl insl (bad) jne (bad) outsl or sbb push jb stos add sti movabs jl cmp adc lahf mov mov (bad) loopne ror or mov add cmpsl pop mov xor pushq jmpq jmpq stc je repnz fistp or xorl insl or sub mov add cmp push hlt out (bad) pop (bad) rcr mov leaveq jl cmp test xchg movsb pushq xchg (bad) (bad) imul movabs xor (bad) retq (bad) rex.RXB es and sbb sbb iret pop rex.WX xorl xor (bad) (bad) (bad) sti sbb pop (bad) (bad) (bad) (bad) std stc cmpsl fisubr (bad) mov (bad) js (bad) callq rex.RB lods (bad) ja movsl mov sub jmpq mov gs mov push cmp sub adc cs push gs rex.WRX add (bad) cmpsb retq outsb add xchg jge add ss mov mov cltd out fmull imul jp adc (bad) mov ss scas fnstsw add test mov add jnp add cmp (bad) leaveq hlt mov and rorb (bad) fldl (bad) data16 je (bad) xchg adc fildl rex.R sahf and mov cmc fist cmp xor shlb rex.RX rex.B jge mov mov xor xchg clc sti xchg xchg jns (bad) (bad) (bad) (bad) push mov push in loop xchg rex.R (bad) std sub add add add (bad) mov or stc out (bad) subl adc (bad) xchg jg callq pop icebp mov jrcxz and mov cmp rex.B pop xor mov adc es rex test fwait retq bt jmpq ja dec sub btc sbb dec add bswap mov cmp rcl mov stc stc repnz jmpq out psubq fucomip pop fwait repz test xor iret jne rex.WX xor testl add xchg pop rex.X and cmp pop mov and add fcomp (bad) mov jb fdivrs sub retq mov mulb icebp in fisubr rcr xchg xor push repnz (bad) leaveq imul movsl rex.X rex.WR push andl movabs jmp xor rex.WRX add rex.W cmp add imul (bad) jo push mov pop adc rex.RB (bad) (bad) rex.WB (bad) stos (bad) xor rex rex.RX repnz add sub cli cmp sbb (bad) or (bad) inc cmp movsbq xor inc shld mov shld mov jmpq rex.WRX rex.RB push xor cs insb add fcomp add xchg xchg (bad) movsb mov add out rex.XB test adc fnstsw xor in test lahf rex.WRX add push pop scas push (bad) int3 (bad) or cltd std rex.W pop xor retq mov (bad) retq add xchg icebp xchg xor insl add callq jnp loope rclb pop and pop mov xchg (bad) xchg (bad) (bad) (bad) sti lret pop pop (bad) jno (bad) (bad) (bad) stos xchg lahf jbe (bad) fnstcw in mov mov lods mov sub add add sub loopne mov lods lahf adc sub mov sub mov and mov xor rex imul xchg xchg lret (bad) rex.XB sbb sbb pop (bad) stos mov mov cmp test (bad) pop fild add cmc cmp jmpq not xor mov inc cmp sbb mov bt jmpq je stc bt sub cmp cmp jmpq int3 add mov pop icebp adc (bad) sub (bad) jmpq addr32 movsb sub cwtl add movsl xchg adc mov jns (bad) pop pop (bad) pop adc fsubrs rex.RXB pop xor retq jne outsb (bad) andb cmp fisttp or outsb cld in mov (bad) (bad) (bad) sti rex (bad) (bad) cmpsl pop (bad) test xor ja sub cltd loop,pn out fwait rex.RXB (bad) jno xchg (bad) xchg push mov pop out clc mov scas mov rex.XB jnp mov push mov retq push jrcxz lods sahf xor cmp sub rex.WRXB (bad) (bad) (bad) (bad) jmpq std xor lods add shlb adc sbb pop out pushq ds scas rex.W roll retq scas leaveq cmp ja add rex.RXB gs outsl fs imul js add cmpsb out mov rex.WRXB (bad) or xchg add cs (bad) mov mov (bad) pop jge mov adc jmpq ficom xchg cmpb mul mov rex.WRB cmp sub sbb pop jl sbb mov jbe (bad) sbb mov cltd rcr jno or (bad) push or je rex.RB scas in (bad) (bad) decb (bad) (bad) (bad) (bad) in imul pop xor cld xorl out sbb (bad) cmp imul mov cmp not pop adc fwait (bad) mov pop retq xchg (bad) (bad) mov (bad) fisubr js (bad) shr in cmp mov fidivrl mov jnp push scas push jrcxz (bad) or rex.WB mov or (bad) (bad) mov (bad) es sbb push retq jg and xchg imul fsts lea test (bad) push stos fsubs test (bad) (bad) jo cwtl pop test cltd sti pop rex.B or pushq (bad) stos rex.X (bad) std out sbb cmp cli xchg je cltd icebp xor fsubs test sti fs shlb add sub rex.WRXB rorb rex.WB test jno xchg rex.WB xor (bad) (bad) (bad) (bad) decb pushq jne xor mov test fsts xchg gs popq rex.RX push push jns cmp ja cmpsl fwait or sub ficompl outsl idivb jns stc in rex.R test retq mov cmp xchg jge (bad) rex.XB cmc testb add lods or stos adc (bad) (bad) (bad) jge sahf (bad) rex.WRX sbb push movsl lret (bad) cmpsl fwait or adc jae fsubrs insl add push test jne cmpsl xchg rex.WB or imul (bad) decb and loopne stos mov (bad) mov out in jae mov nop mov (bad) and rex.WR jg imul sub sub adc sbb sub and repnz push cmp es adc rex.WRXB shl bts mov cmc stc add jmpq jbe rol imull pop cmpsl rex.WRXB xchg out callq or or jo mov iret out fnstenv imul adc (bad) and mov (bad) xor lods incb movabs rex.WRX adc rex.RX fsub xchg rcr jo sahf mov (bad) lock out adc movabs or push idivl movabs (bad) (bad) (bad) cld rex.RXB (bad) (bad) decb popfq loope sbb add add pushq out jo or scas (bad) mov jmp test xchg mull ds xchg and sbb jns jl out sub out sub mov cmp adc in adc sub pushq add xchg (bad) and movsl adc jg rex.RX mov cmp xchg jp mov xchg add int3 add fwait lock popfq or mov rex.R sbb mov push fdivl (bad) adc xchg (bad) (bad) (bad) sti mov (bad) (bad) outsl (bad) (bad) (bad) (bad) imul cmp (bad) rex.WRXB rex.B adc fxch mov push rex.B cmp adc and xchg rolb xchg callq push notl sbb imull xchg test imul (bad) (bad) fistp enterq (bad) sub sbb movsl adc leaveq mov (bad) pushq clc sbb pushfq mov (bad) insl xchg mov mov mov sbb (bad) insl mull (bad) (bad) clc ffreep add rex.WR movslq rex.B insb outsl movslq jmpq movsbw lea jmpq add rex.XB (bad) je rex.XB insl jo je (bad) insb imul xchg scas adc pop (bad) mov (bad) (bad) xchg cmp mov and movabs adc mov sarl sets (bad) sub gs mov xor rex.RXB or (bad) fs rex.RB rex.RX fadd mov fs (bad) (bad) cld xor loop (bad) (bad) (bad) callq stos mov (bad) cli adc or out mov (bad) pop mov lods mov fist (bad) (bad) retq (bad) adcb pop fcomps fwait jge push xor std fcoms int3 add cmpsl xorl and add add or cmp mov mov rex.B mov (bad) cmp insl sti scas lods mov jg popfq rol jmpq scas sbb repnz lret outsb sbb cs fidiv cmc pop xor sahf rex.WRXB fstpl and or (bad) (bad) scas (bad) mov xor xor popfq ds mov push adc jns jg mov movsl sarb fistpll int cmp stos fsub sub (bad) movabs add test fwait (bad) rex.RB lods cwtl mov rex.RB fbld retq (bad) (bad) (bad) sti fdivrp (bad) xchg movsl (bad) (bad) (bad) (bad) mov push imul pop or (bad) push rex.X add ds (bad) xchg cli fisttp (bad) pop rex.R pushq movsb mov (bad) push movsb cli outsb adc mov stos enterq fadd (bad) stc push sub jns lcall jno lcall test (bad) rex movabs shl sub rol adc movzbl add btc or mov rol rol stc shl mov clc repnz jmpq (bad) lret and mov rorl (bad) or in rex.RXB and fnstenv adc cltd xor and (bad) mov add cwtl rex.WR mov (bad) mov fmuls fistl jge test mov je in xchg loop rex.WRX es cmpsb sbb rex.WB mov (bad) pop fisttp int pushq loope es adc xchg je cmc dec push lea bswap shr mov bt rcr setno sub movsbw lea jmpq xchg rex.WRX outsl lahf xor fwait cmp (bad) lock xchg callq sbb xor adc add in in fwait cmp (bad) repz fld adc cwtl jl (bad) rex.WRX xchg mov setle jl sub scas xchg out test adc xchg rex.WX cld push clc sub (bad) (bad) (bad) callq rex.RB rex.WB fwait mov push cmp (bad) cmc data16 (bad) loop clc or (bad) fisttpl fidiv ficoml movabs (bad) (bad) (bad) callq iretq addr32 rex.WB (bad) (bad) jmp rex.R out or rex.B shrl (bad) (bad) (bad) in xchg rex.RXB (bad) mov int imul lods enterq scas rorl loope movsb mov loope (bad) (bad) (bad) out (bad) push (bad) iret clc and test pushfq jg push rex.XB stc in mov pop mov mov (bad) adc (bad) (bad) push (bad) (bad) jrcxz pop callq xacquire in cmc and in rex.WX je or xor (bad) push (bad) (bad) push (bad) mov cmpsl and or (bad) push xchg loope fild jg ja xor xchg pushq mov mov repz (bad) push (bad) loopne push jns movslq (bad) (bad) clc mov rex.RB ds test fdivrl mov jbe cmp imul (bad) (bad) cli (bad) cli mov (bad) (bad) (bad) sti mov test add test (bad) adc xchg in xor xchg neg (bad) (bad) (bad) std or callq push (bad) (bad) (bad) decb mov mull xorl rex add cmp jbe mov fsqrt pop (bad) xchg lahf sti cmp (bad) hlt fs pop cmp and and (bad) sub sub stc cmpsb scas stos rcrl xchg jle sub adc bndldx sub sbb data16 or repz and shr mov sti cwtl xchg push mov xor mov rex.XB mov lahf (bad) add (bad) stc add rex.RXB (bad) je xchg negl push sub loope adc in mov cmp xchg xor (bad) mov mov repz cmpsb mov jae xor rex.WRB (bad) (bad) sti out rex.WR rex.WB (bad) (bad) (bad) dec mov mov jg mov (bad) sbb xchg sbb in leaveq cmc adc sti jle rex.RX rex.XB mov mov (bad) scas sbb por callq cmp incb add add add push insl (bad) sub xor cmp clc (bad) push add in cld push adc loopne mov adc jg fcmove mov push jmp sbb cmp add shrl sahf out incl mov add (bad) test cmp add mov pop retq (bad) (bad) push adc fdivrs andl adc std fcmovnbe mov (bad) or cmp adc mov cmp sbb xchg mov cmp cli ljmp (bad) outsb add repnz jl lret cwtl callq sub iret jge lock pop hlt xor movsl in sub (bad) out rex.W (bad) (bad) decb gs mov rex.WRX push add (bad) (bad) (bad) (bad) repz rex.WRX (bad) mov xchg (bad) and (bad) (bad) enterq fidivr test mov pushq movsb es cld ds and sub callq mov jl or cld sbb popfq test mov ficomp (bad) imul xchg incl add je pushq rex.R gs je jo sub mov pop (bad) sti mov int int3 hlt (bad) cs lock cmpsb retq sahf lret mov outsl cmp cmpsb scas adc (bad) in idiv sbb jns sbb push cmpsb fs sub and fs rex.R rex.WR (bad) pop (bad) fs sahf jp mov in push decb push (bad) cmp mov pushfq push xor addr32 (bad) (bad) cld callq (bad) jp adc lods retq rex.WRXB cmp jmp mov cmpsb lahf mov iret icebp fisttp cld out stos outsl fisub rex.RB add push test (bad) (bad) std push callq pop (bad) punpckhbw addr32 mov addr32 movabs mov xor int enterq and in enterq xor jae mov sbb stos xchg rex (bad) add pop and and adc (bad) (bad) (bad) inc roll clc cmp pop movabs pop push sar mov xchg cli clc int add (bad) test mov jb mov adc or cmpsl sbb push cmp je iret push retq cmc jp fmull icebp stc test retq or std imul xchg cld xchg int3 insl adc scas and mov out or loope add jne shld rcl mov cmc add clc cmc movzwl shrd neg add sar mov jmpq jmpq jmpq bsf mov bt test and cmp bt add bt stc add test sub jmpq jne cmp xchg out icebp fstpl rcll cltd rorb ds out fwait sbb mov jl test adc xlat gs mov movsl jle (bad) (bad) int3 callq mov rex.RX xchg fimul rex.WB cmpsl rex.WX movabs xchg clc rex.WX scas scas movsb jo xor jp (bad) test cmp rex.WRX (bad) sbb sti (bad) sub rex.X (bad) (bad) (bad) fldl (bad) movabs (bad) rex add add pop rex.WX iret (bad) std rex.WRXB push cmp cmpsb retq outsb add pop outsl lret gs scas sbb lea movabs mov push jle fcmovb repz rex.WX cmc movslq lret add add (bad) jl add add add add add xor add or sub vmovhps xchg sub vmovapd adc add add add add add push lods sub cmp sub xchg sbb add sub add movabs add add add rex.B add fucomp sub sbb add add add add mov add sub add add movabs sub add mov add add add sub add add jp sub cltd (bad) icebp loope sarl and loopne cmp (bad) or outsb jg test (bad) stc cwtl rex.RB or rcr rex.W rex.XB push cmp out sbb cmc (bad) cmpsl lahf rex.B (bad) mov (bad) ds (bad) (bad) sub rex.WR rex.WXB andb movabs push fdivr (bad) (bad) decl push cmp sub rex.B sti sub testb leaveq cmp shll xlat xor (bad) push add icebp rex.WXB lss movabs or int3 sub jrcxz stc cmp xor and mov fwait retq mov or in rex.B insb pop cmp sbb (bad) xor jg mov imul push mov rex.WXB (bad) sub (bad) out rex.WR push test clc cmp jmpq jmpq jmpq ja or add rcl not adc add sar adc ror xchg sbb xadd mov cmp (bad) repz rcr bt mov stc clc cmc bt push movzbq mov cmc bt stc test sub jmpq nop jb jo (bad) rex.X (bad) and and leaveq test roll imul ss xor mov cmpb fnsave repnz movabs fcos callq (bad) (bad) movabs iret rex.RXB mov (bad) mov or xchg rex.X clc xchg and jns pop test jge and callq adc mov xchg sbb (bad) (bad) sti mov movabs mov (bad) rcl js sbb rex.WB (bad) lret (bad) (bad) (bad) (bad) (bad) callq (bad) (bad) (bad) adc or pop imul fs sub (bad) rcrb movsb mov mov test add xor (bad) push insl rcr or popfq mov rex.WR int ja jmpq jmpq je movsbw xchg add movsbl movsbq (bad) repz data16 (bad) bsf add inc shr movsbw inc mov dec add rcr add cmp test mov stc cmp shr cmc jmpq pop movzbl pop movzbl lea xchg pop movzbl pop jmpq jne bsf mov clc clc bt test add bt clc test jmpq mov or mov xchg movabs addr32 imul and add movabs mov clc out movabs add rex.WX xor repnz (bad) xchg (bad) stc mov popfq shrl sbb rex.XB (bad) (bad) cld push cld (bad) rex (bad) (bad) (bad) (bad) xchg mov rex.WRB sbb rex.WX mov add sbb and outsb fiaddl insl rex.X mov (bad) push jne add add or jp leaveq jmpq cmp (bad) push cmp rclb pshufw adc cld lahf xchg scas or (bad) jge sub movabs rex.WRX mov out decl sub add movzbw adc dec mov adc bswap xadd or mov mov and btc mov cmp test jmpq jmpq jmpq jmpq jmpq pop rex.XB jb jle pop mov in fild imul fcmovb mov (bad) (bad) push xor std push sbb adc (bad) push rex.XB pop gs mov lret cld rex.RB push lock or sub mov jrcxz loopne sbb mov (bad) in push cmc mov jp (bad) (bad) out in rex.XB or or icebp iret insb add stos pushq lahf idiv sahf push xor in jns mov cmp add jae rex.RXB rex.WB rex.W (bad) (bad) (bad) insl mov cmp insl movabs idiv (bad) (bad) callq pushq (bad) cs in (bad) rex.RB jnp rex.R cs sbb retq push lock jb and rex.R in (bad) (bad) test stc xchg rex.WRX xchg scas rex.WRB rex.B adc mov outsl rex popfq xchg (bad) popfq mov movsl (bad) movabs cmc jmpq jb cmp cmp jmpq jmpq add rex.RXB gs outsl fs gs outsb fs gs sahf not (bad) xor xchg rex.WB mov pop pop ss add mov add rex.WXB movabs sbb (bad) ss mov (bad) pop cmp (bad) xor cmp jrcxz testb gs loope test lock rex.WX scas iret (bad) xchg jbe insb xchg andl jmpq (bad) (bad) (bad) (bad) cli out sbb sub (bad) jb mov fldl jl fwait sbbl xchg (bad) mov sbb pushq incb jae (bad) (bad) dec cmc (bad) (bad) stc (bad) push jp cmp jmp jae notl insb pop and push loopne rex.RX xchg test pop jo rex.RXB (bad) or xor pop (bad) or movslq xor in jge mov test bt test cmp jmpq adc xchg jne fistp loop jns (bad) shrl sbbl pushq nop rex.RX fs cltd (bad) push cmp stos loop (bad) xchg sub in rex.WRB in callq pop out fmul xchg (bad) jo test sub mov rcll xchg jnp,pt es and orl cld cli xchg (bad) (bad) cmp push int mov ljmp xchg loopne add add pushq stc sbb pushq or nopl (bad) in jne pop leaveq cld movabs adc jne gs mov mov (bad) or mov push hlt test jmpq jmpq (bad) lods sbb sarl jg xchg lret ror stc (bad) cmc stc hlt fwait mov rex.WR loop (bad) push adc data16 andb cmp jae imul add or lret fidivrl fidivrl lods lods pop cmp fistpll fstps std sbb cmp es or negl jp jmpq sub or add add mov rcll mov rex mov insb pushq jo xchg rex.WRX movabs je lods (bad) divb insb enterq cmc (bad) incl jmpq and mov test pushq pushfq jle not mov clc or mov nop mulb add (bad) cli (bad) sub pushq (bad) retq sub or rol mov imul lahf loopne sub shrl or stos rex.RXB movabs movsb jne push (bad) (bad) (bad) sbb (bad) (bad) (bad) sti (bad) ds (bad) (bad) (bad) (bad) mov pmullw loope test jb (bad) rex.WRXB out retq mov add insl cmc pop movslq movabs cmp icebp (bad) jg scas and pop movabs or xchg rex.RX int and mov pop xor sub bt sub jmpq pushq jmpq pop rex.X mov addr32 nop sub xchg imul lock (bad) and jl pop or (bad) add or or movsl nop mov loope sar (bad) xchg mov fidivrl (bad) lock lret or (bad) jo movabs shrb test mov imul jrcxz (bad) stos or mov mov cmp (bad) (bad) xchg test (bad) (bad) decl (bad) jb cmp cmp (bad) enterq add pushq (bad) out faddp mov jno rex.RXB (bad) gs pop pop adc lahf adc xor loop mov (bad) scas adc outsl (bad) cwtl int mov movslq sub adc and std pop out push and cmc add jmpq callq shl shld add shr add rcl mov test sar mov bt bt cmp cmpb jmpq fnstsw jb pushq sahf fadds (bad) (bad) cld loope push (bad) stos push rex.WRB (bad) repz mov imul (bad) int sbb sub mov repz mov (bad) test rex.R loope lods or fdivrl movslq rex.RXB xor (bad) mov (bad) pop icebp mov mov nop fs xlat mov jp jp scas (bad) mov and xchg std cmp (bad) add ds or sub xchg mov cmp jo cmp (bad) (bad) incl xchg pop test fimull callq (bad) cmc pop sbb (bad) loopne insl adc (bad) add cs sub add xchg jae jle adc and je js popq scas rex.WR hlt xor jbe cmpsb xchg and es fcomi lock js (bad) retq (bad) push test mov adc xor pop mov shll rcrb js iret rex int3 insb imul sub add (bad) popfq retq icebp xchg rex.WRXB icebp in out (bad) adc rex.RX (bad) (bad) (bad) decb lret and add fcomps push rex.WRX or cld outsb (bad) cmp adc jae in pop js sub (bad) mov movabs rclb imul (bad) xchg std push cmp cmp je (bad) jp (bad) (bad) (bad) jbe punpcklwd ror cwtl sahf (bad) outsb mov movabs mov mov and mov es jne or sti add (bad) push out incl addl fwait retq jmpq jmpq movb stc cmc test jmpq cmc (bad) imul callq sbb clc (bad) mov rex rex.WR clc cld (bad) rex.WRX shlb jle insl xchg pandn sub movabs xchg movabs insl out jmpq jg mov rex.W xor lods sub (bad) cli shrb (bad) (bad) (bad) std lahf cmpsl jrcxz adc mov iret (bad) cmp push (bad) jae out fmull mov cmp mov es xchg or mov rex.W mov lret (bad) lock (bad) (bad) (bad) jmpq addl xorl pop mov (bad) and lock and insl rex.WRXB gs jb movabs sti push ss sarl mov push mov js jmpq adc outsb in mov xchg jmpq icebp imul fistp adc test jl lahf and xor jmpq adc mov je add cmpsl and test jrcxz mull pop adc and xchg lods add or xor rex.XB lods (bad) xor (bad) mov (bad) xor jg cmpl rex.WRXB push mov popfq shrl jne push repnz mov and (bad) (bad) (bad) sti mov pop jmp (bad) (bad) (bad) (bad) xchg movabs sbb lock mov sti add (bad) sbb and sahf rcl adc clc in insb xor add add sbb sub xchg mov cmc enterq cmp jg cmp and int3 outsb (bad) push jge xchg lret sbb (bad) mov rclb push sti andl loop lods xorb cmpsl cmp pop insb lret stc fdivr and jl rex.RX nop adc shrb (bad) jp movsl rex.XB je sbb xlat (bad) sub adc mov or std push sbb callq xlat rex.X int3 (bad) fwait lret adc rex.WX jp mov data16 pop push icebp stos mov xor jrcxz rorb repnz jmp retq and (bad) (bad) movsb leaveq pushq or es (bad) movabs (bad) jle and cmc sub (bad) (bad) decb (bad) (bad) (bad) jmpq retq cld sahf (bad) (bad) mov rolb pop lret (bad) pop movslq jmpq jne rorl cli outsb imul int rex.WRXB pop leaveq mov xor clc (bad) lods (bad) cmp sarb mov jns mov pop rcll jne mov mov bt and sub shld mov bt cmc sub test clc pushq jmpq not movzbw bswap lea movsbw mov jmpq jmpq cmp jmpq jmpq jle or adcl loope in ficoml or xorb jl xchg data16 or (bad) push (bad) (bad) or (bad) mov rex.RXB lods fisubl mov negb pushfq orl adc (bad) (bad) mov (bad) (bad) (bad) (bad) (bad) mov jrcxz cmp fldt pushfq pushfq int jge cbtw cld lret xlat mov icebp xor test fwait xor (bad) rex.WR and cs pop sahf js (bad) stc iret sub not jb test jbe out (bad) rex.RXB jb pop mov pop jb cmp test cmp jmpq movzbw pop jmpq cmp jmpq rclb sbb sbb movabs movabs mov (bad) stos sbb fsub (bad) xchg rex (bad) retq (bad) or rex.WR cmp movslq (bad) sti or repz cmp callq (bad) rcrl int (bad) jnp (bad) mov sbb enterq out xchg adc (bad) imul rex.WX push out in (bad) mov jge (bad) sti movabs mov (bad) (bad) hlt add (bad) mov or imul (bad) imul imul push rex.WXB lahf (bad) xchg jnp xchg out movhps sub xchg mov mov (bad) fnstcw rex.WRXB pop addr32 sbb jp pop nop rex.WRB push adc xchg (bad) loopne (bad) jle adc rclb push (bad) fs mov sub lods cmpsb int3 pop xor mov add (bad) in jge add pushq movslq es and int3 (bad) pop rex.WRB out or (bad) addr32 out (bad) cmp rex.WRB sahf loop (bad) callq rex.WB mov pop xor jne cmpsl fimul mov rex.WRX (bad) (bad) (bad) sti fldenv (bad) mov mov (bad) ja push (bad) push xlat rcl mov cmp lcall fisttpl pop cmp clc add movabs jno movabs xor ja sbb push cmp and test or (bad) (bad) iret jge ds pop out leaveq cmpsl bswap pop jmpq fisttp cmpsl (bad) sbb lahf xchg mov pop xchg xchg shr (bad) (bad) mov movb and sbb pop sbb jnp,pn push insl (bad) sub mov test push loope (bad) out push ja in retq pop pushq adc (bad) jae fcomps jl push sub (bad) fistpll ss mov jae leaveq fimull cmp pop test cs int3 lods (bad) rex.WRB imul adc movslq (bad) jle jp xchg push movabs lea sar (bad) (bad) decb (bad) (bad) (bad) decl (bad) rex.RX movsb sarl lahf pop cmp xor test rol mov addr32 xor add andl xchg jl cwtl (bad) roll mov mov cmp es lea xor jmpq movzbw lea jmpq push rex.WB rex.XB push xor cs insb add and mov testb jno insl gs rex.X mov stos shlb mov gs xchg (bad) cmp rex.WXB cli lea rex or insb (bad) (bad) rex.RB int (bad) sub fldenv nop cmpsb (bad) jae adc (bad) xchg (bad) shld rex.XB roll in xchg out (bad) cmpl mov (bad) (bad) cld add insl int (bad) (bad) (bad) (bad) jrcxz add stc jne cs cmp or (bad) push pushq rex.XB add ja lock (bad) pop fs shl xchg add add insb (bad) nop cmp icebp rex.RB nop add ss pop cmp xchg sub mov in rex.B mov jns sub rex.WRB mov push loope jl mov pop addr32 xor test and add enterq bsf xor rcr ror btc mov inc dec rol add sbb stc mov cmc test cmp test jmpq jmpq jmpq je stc test cmp cmp jmpq outsb add xor int3 adc or insl adc movabs (bad) sti repz lea cmp xchg cwtl (bad) rcl mov xor fnstenv (bad) rex.WB (bad) subl rex.RB mov je add jb movabs (bad) or pushq mov jns rex.WRB pop jne or sbbb adc hlt ja callq callq (bad) pop or (bad) incl sti rex.RB add (bad) je rex.WRXB sbb xor cmp add pushq rex.W fsubs xlat in repz jns jg mov cmp xchg test push ss or and push outsb (bad) adc (bad) (bad) pop addr32 mov loopne es mov outsl add jmpq mov mov rex.WRX pop xor lods movabs enterq mov (bad) fnstcw scas loopne rolb jge sti xchg and jmpq jl push nop (bad) rex.WX jmpq rex.B in adc sbb xchg rex.R adc mov (bad) (bad) sti outsb cwtl test lods (bad) (bad) (bad) decb cs cmp add movabs push pushfq fdivrs repz or jrcxz pushq rcll (bad) mov (bad) rex.RXB or pop repz (bad) (bad) push repz jg (bad) xchg (bad) mov hlt data16 out fidivr loopne adc push ss fs lods (bad) test add or add mov or cltd sub pop pop int enterq test xchg and repz add retq shrd mov rcl inc sbb cmp add or clc rcr mov jmpq not setne mov lea jmpq movsbw not mov not movsbw jmpq and add add pop (bad) (bad) sbb (bad) out mov xor lods int pushfq pushq movabs loope rex.RXB sbb rex.WX cwtl adc pop es mov pop xor in (bad) sub test callq add out test repz incb stc mov sub (bad) lret and or push rex.WX push cwtl rcll (bad) mov movabs ja mov (bad) sti pop pop jl (bad) (bad) (bad) (bad) cmp pushfq mov mov add sub loop cmp sbb adc test gs int3 scas stc rex.WRXB test mov push (bad) mov (bad) add fisubrl mov js insl or and rex.WRXB (bad) add (bad) movslq or (bad) ljmp gs ss jmpq mov push popfq sbb in sub negl cltd rorl jl xor (bad) stos mov jge mov cmc lea xchg iret lock mov adc mov cld in mov movabs insl cmpsb (bad) mov or jg xchg adc push rex.WXB rex.WRB sub in fucom (bad) or jl mov or jno adc pushq rex.WRXB (bad) mov mov cmp push (bad) lock out retq mov (bad) data16 stc movabs lcall sub packuswb stos cmp addr32 movzwl jmpq (bad) xchg incb orb rex.W out adc lret lods xor cltd int jmp mov lret lret stos (bad) push mov out add rex.WRX fwait push cmp adc movabs hlt (bad) out cmp sbb iret rex.WRB lahf jnp and sub fs and (bad) adc (bad) (bad) (bad) sti fisttpll (bad) (bad) mov (bad) (bad) movslq imul push and add fcmovnbe fadd mov fstps xchg xchg test lret jl movabs add pushq rex.W (bad) mov push lock movslq mov jl iret jmpq negb xor mov (bad) (bad) push (bad) mov movabs add test pushq outsl movslq rex.RX gs cs stos or add adc sbb jne rex.WX or mov adc adc jo iret rorl xlat shrl xlat cli repnz int3 and push stc rol fs mov mov pop push movabs cmp fisubrl (bad) (bad) (bad) std fdivs cmp or sbb jg jrcxz je mov loopne outsb insl and cmpsl rex.XB jbe sbb hlt cwtl or mov popfq lahf scas add (bad) mov jbe mov mov loope jl addr32 fcmovu mov int jo fmuls add or in mov mov adc rex.WRXB xor mov negb mov mov (bad) sbb xor cmp jmpq jae pop jmpq jmpq bt add test cmc jmpq decb movslq jb pop incb je adc and rorb xor pushfq rclb jne jl (bad) sti loopne mov mov and test rex.WRXB cmp mov sub mov jnp push cwtl mov ds stos fidivr int3 insb imul imul adc (bad) retq movabs mov orl mov or and sbb adc cli (bad) or es jge push loope test sti scas mov add scas mov test (bad) jne mov subl xor ja outsl (bad) jmpq (bad) mov jo mov loope clc sbb scas rex.XB repnz fsubp nop pop xchg lea popfq and popfq push push xchg lahf testb (bad) (bad) jge and rorb mov cmp cld cltd cmc popfq (bad) test (bad) (bad) (bad) (bad) mov int cld cmp lcall jmp retq pop add xchg sti (bad) movslq (bad) add cmp cmc add adc (bad) repz pushq mov cwtl ss lret insb vaddsubps push mov icebp and mov cmp test mov adc (bad) (bad) add lea jmpq mov jmpq jae bt test test sub jmpq clc repnz jmpq jmpq sub mov or leaveq jmp mov imul retq ja (bad) push adc xchg movabs push mov sub lret xor (bad) out mov pop (bad) sub and mov fmuls fdivp jle (bad) (bad) (bad) sti push fcmovb and (bad) (bad) (bad) (bad) xor mov int3 (bad) scas mov test int3 mov (bad) cwtl rex.WB (bad) mov (bad) adcl mov fisttp jmpq rex.X (bad) pop andl test out lods mov (bad) incl fwait cmp loop or mov out mov jmpq movl sahf sahf mov pcmpgtd ljmp add mov in mov pushq mov not sar mov cmc jns cmp stc and bt stc add jmpq bt or jg je not seta add movzbw movsbw add and sub shl bts adc cmc shr clc btc not btc mov adc add shld sub not add xor and bts inc mov clc bt jmpq or jmpq mov movsbl not movzbw lea movzbw xchg jmpq push (bad) addr32 rex.WR adc and out rex.X or shll mov sub add or mov pushq (bad) fcmovu cld out es adc mov (bad) push mov jb jle xchg adc rex.WRX sbb outsl int cmp push icebp mov cmp sbb fsubrl rex (bad) (bad) cld cmp jmpq (bad) callq rex.WB mov sbb (bad) outsb int jmp push mov (bad) (bad) rex.WRXB fistl push push add add sbb and js mov sbb nop lahf pop repnz pop rex.WB (bad) push add mov pop retq xchg addr32 ja cmpsl mov mov (bad) int3 lahf mov pushq rex.W pop jmpq jmpq jmpq ja cmc clc imul cmp jmpq jmpq jmpq and std loop negb xorl insb (bad) rex.WX rolb rex.W sub pushfq jne test in mov scas (bad) rorl rex.RB (bad) and stos rorb push xor cmpb rex.WB gs fs sahf sbb cltd orl add lea sub jae imul ja fwait out imul xchg rex and and imul pop fidivl (bad) (bad) sti cltd (bad) mov cltd (bad) (bad) (bad) (bad) js cmp je (bad) sarb cmp push pop mov cli (bad) adc sub or add cmp ljmp cli lahf (bad) cmp push es rex.WB out xor pop lret pop rex.X cmp clc movsb lods mov cmp fnstenv push cmp je (bad) jnp mov pop mov test (bad) cwtl fwait iret fisttpll (bad) in movsl (bad) jmpq xlat adc gs sub (bad) cltd outsb imul xchg popfq cmp int3 stc repnz xor shrb mov roll fildll stos (bad) (bad) (bad) cld add shll (bad) (bad) (bad) loopne mov cmp add in (bad) rex.WXB fsubrl xor (bad) (bad) xorl (bad) sub (bad) outsb (bad) pop push ss icebp movabs pop or cltd mov add and push js rex.X loopne jge loop popq rcl mov sahf add push add add mov addr32 mov repnz cmpsb leaveq add insb adc xchg movslq fnstenv rorb movabs mov jl addl sbb (bad) scas mov pop cltd and jp sbb mov (bad) mov or cltd stos mov and rcll cmp xchg loop cwtl add imul xchg (bad) jrcxz rex.W xlat xor (bad) (bad) cwtl mov outsb int sub xchg and movabs jno lahf int ds imul js pop lock ss (bad) (bad) cld leaveq gs cmp movsb rex.WXB cmpl (bad) (bad) jb pop push mov jle rex.WRB sbb mov (bad) (bad) sti mov (bad) (bad) (bad) pushq mov in jp imul mov (bad) lret mov sbb mov or mov adc and hlt rex.WR push sbb pushq and xor cs add jb mov sub xor push push (bad) (bad) (bad) (bad) (bad) lods test cltd or push rex.WX ja rex loopne,pn out shrb ds mov adc movsl out push lock xchg mov out sbb xchg sub jp push es fcoml rex.WRXB and xchg std cs pushfq pop (bad) cld jmp rex.WXB es cltd rex.WRB fs (bad) mul (bad) mov (bad) (bad) lods es lret xlat xchg in mov iret js jg shrb fwait (bad) mov xor xchg jne rex.WRXB or fidivl out shrl add xor xchg jrcxz (bad) imul mov jmp rcl sub (bad) jbe lock (bad) (bad) sti lock xchg mov iret (bad) cld and add (bad) in jle xor jmpq add add rex.WRXB sti mov xor mov jg rex.R (bad) outsl gs cmp fwait mov jns rex.X clc shrl mov rex.RX es xor rex.WR out jns movaps mov outsb (bad) adc ja cmp (bad) push cmp sbb fisubl pop cmp out cmc sub sbb cwtl std movabs es (bad) scas jmp jle rcll (bad) push sub fsubrs (bad) rcrl or and shl out (bad) pop mov pop xor outsb mov and rex.WR fistp jno (bad) insb (bad) loope xor ss mov xchg movabs cld rex.RXB (bad) (bad) decb push addr32 xor add add pushq mov adc mov add ss cmp xor (bad) stos or xchg adc xor and js jrcxz sbb rclb rcrb jo int3 xor mov retq or sbb jbe leaveq repnz clc mov testb (bad) (bad) addr32 sub (bad) (bad) (bad) mov sub stos xorl jg movabs pop enterq loop in popfq movabs retq mov cli cld cmp int jl ror jle cltd and or (bad) (bad) (bad) sti mov (bad) mov decb push mov popfq ss push rex.R (bad) adc mov push rex.WX adc iret sub movabs add mov jl movabs and sub adc (bad) (bad) mov fldcw add (bad) or loope rex.WRXB fs rorb jle divb (bad) xchg add pop mov jo mov add jne rol bsr shl bswap mov bt jmpq stc cmp jmpq rex.X addr32 jmpq cmpl insb or lahf rex.WR rex.WB sub or rcrl movabs jbe or hlt jge rorl lock xor lods rex.WXB fnstcw test sbb pop rex.WRXB rolb sub adc mov add (bad) (bad) (bad) mov sbb out repz cs xchg xchg (bad) add movabs mov xchg cmc xor or (bad) and hlt sub cmp cwtl mov cmp lret jge rex.XB mov jno cltd (bad) cmp leaveq mov retq mov callq mov fist nop rex.WR xlat mov fisttpll rex.WRXB sbb xchg pop retq sahf (bad) add and test add add js (bad) rex.RB push divl add (bad) lea shll sbb sarb inc xchg cli pop cli jbe fldenv push retq in add leaveq out mov xor or add shlb jb xor cltd mov fcomp leaveq (bad) adc movsl hlt jg pop addb cmpsb out mov cwtl xchg rex.WX sub sbbl scas sub rex.WRX xor cmp enterq scas xor je out cmc or lods rex.WRX pop out xor adc add pushq add outsb (bad) jge (bad) (bad) std adc (bad) (bad) push jl scas cmc in adc jrcxz in jrcxz sbb (bad) sub mov add shll imul (bad) cmp rex.RX cmp (bad) outsb push jge mov or lret or push (bad) add repnz mov (bad) je jne pop imulb sarl mov je outsl pop int cmp adc fmull loopel cs (bad) xchg jno pop fcmovbe shl jp rex.WRB rex int jp test movabs cmp jne or mov out mov sbb jbe xor movabs enterq xchg jae mov jo and and sbb and xchg (bad) in cmp (bad) add imul (bad) cld sub fidivr test fsubrl or push jg mov mov xchg rcll rex.X testl rclb shl (bad) sahf cwtl (bad) jb sub scas mov sahf mov ds js hlt stos nop mov mov jp fmulp xchg adc cli movabs jb jmp and push out jo popfq mov push adc adc retq or add jmpq xchg ds mul xor mov ss cmp (bad) xchg add roll data16 (bad) mov imul push (bad) popfq (bad) icebp add (bad) outsl sbb xor cwtl rex.X stos push add xor loope jge (bad) mov xor movslq fldcw rcrl rex.XB mov sub rex.RX (bad) decl mov retq mov out test sti (bad) and sub rex.XB mov jbe xor mov add and xor and jns (bad) cmp sbb fs out xchg mov (bad) rex.WB stc xor cmpsl fs cmp insb retq stos fistpll push (bad) (bad) xchg push cli cmp sbb mov rex.R xchg rex.WX xor jae sub mov jle scas push jge sbb rex.WR popfq rex.RX orb sub rcrl adc add mov movabs fild sbb (bad) rex.XB pop in callq lods jrcxz jrcxz push or xchg out retq jmpq or add adc jge fiadd xchg xlat notl (bad) push (bad) pop data16 cmc jp sub (bad) sub (bad) (bad) (bad) cld adc (bad) (bad) icebp (bad) push fimull (bad) sti or popfq xchg mov xor lock fadds xchg (bad) (bad) push movabs gs jno xor div add add push xchg or sbb rex.R loop rex.WB loopne mov (bad) cld push rex.WXB pop sbb enterq out lods (bad) mov cmp rex.W scas (bad) (bad) cs push mov mov jne fisubl jmpq test repnz jmpq test stc test cmp jmpq mov int3 sbb mov enterq in (bad) or enterq retq sqrtps fcmovu cmp mov fucom (bad) push xchg (bad) pop mov in sbb mov nop rex.WX pop or lock pop rex.X test repz ficom and iret pop mov lret nop mov cli imul mov mov (bad) (bad) (bad) (bad) (bad) cld sbb push rex.WB lock (bad) (bad) (bad) sti xchg push sbb stos iret fstpl adc jae rex.RX xchg enterq add lret addr32 pop mov std scas (bad) cld xchg mov rcrl xor xlat out rex.WX sbb (bad) (bad) stc cwtl (bad) js jmpq jg mov push (bad) addr32 ja adc lock (bad) fmuls rex.WRXB fist lahf shrb and mov mov jmpq lea jne mov xor rex.WXB mov xor jns stos (bad) (bad) rex.WRX mov std (bad) retq (bad) xor jbe mov insb mov adc jo movabs orb imul pop scas test pushq (bad) (bad) (bad) sti mov movslq (bad) (bad) (bad) (bad) imul xor mov pushq jae and rcll ja mov mov (bad) xchg mov sbb cltd cmpsl (bad) xchg mov mov cmc push add jmpq movslq test mov lahf (bad) jne mov (bad) adc pop stc sub mov js mov (bad) and (bad) clc jmpq clc movzwl cmc inc bswap shrd mov cmc clc add clc mov stc test test jmpq jne mov jmpq mov bt mov inc add jmpq add push sbb adc in lea (bad) mov mov ficoml rex.R repz sbb mov fnsave cltd sbb out mov add cmp mov es mov sti add cmc cmp mov rex.RX loope (bad) xor imulb pop rex.R pop out rex out lea rex.B fstpl pop xchg je (bad) (bad) (bad) (bad) decb cli movabs rex ss stc xchg movsl xlat retq (bad) fucom add rex.WRB and (bad) movabs pushq mov mov (bad) pop (bad) (bad) (bad) (bad) repz fisttpll jle jg leaveq addr32 (bad) fisubr xchg pop leaveq cltd cli cmp pop cmpsb mov xor int3 pop mov jp (bad) mov mov push (bad) mov xor mov xchg adc enterq (bad) (bad) (bad) adc (bad) mov jns cmp jnp mov movzbw lea mov setl mov lea jmpq loop add (bad) rex.WB jmp sub mov in fwait rex.RXB (bad) xchg adc push cmpsl fimull (bad) mov xchg jbe callq (bad) lret jmpq js fidivl and rex.WRX rex.WXB retq mov iret (bad) (bad) (bad) sti in mov xor dec (bad) mov cld imull jle movsb (bad) lret push rex.XB js xchg (bad) out and (bad) and mov sbb cld adc or add add cmp cmp push test xchg imul orl (bad) rex.X mov (bad) add scas (bad) ja rex.W outsb (bad) xchg (bad) jae jnp (bad) (bad) stos movabs lea mull jo jmpq retq rex.RXB jbe retq xchg jb xchg add lods (bad) out sub push (bad) insb sbb js mov mov out icebp lahf push cmp xchg xchg or adc mov fdivrl and pop push (bad) (bad) mov or (bad) (bad) (bad) cld pushfq ja mov (bad) jnp sub add flds jne or leaveq mov cmp outsb mov stc cmp movslq cli pushfq rex.WB (bad) jae lods or movsb loop fwait sbb or outsb sti add add rex.WX (bad) add outsb jp add push (bad) push cmp cmp test mov rex.WRX (bad) insl movsl rcll add ds (bad) shrl cmp insb clc (bad) mov mov mov pushq es rex.WXB adc ror rol and add adc xadd shrd or sub test bsr seto shr bswap xchg jmpq jmpq jmpq hlt fildl mov rex.B imul lahf movabs repz and cs xchg mov lret stos cmp adc rex.RX orl mov jno insb rex.XB repnz cmp (bad) (bad) (bad) std mov (bad) cmp add add fcom mov push movabs (bad) rep rex.WRXB push hlt jae test and jnp rolb push cmpsb enterq mov fmuls enterq (bad) je (bad) mov leaveq (bad) gs outsb (bad) adc jbe xor and (bad) mov fistpll or subl (bad) scas mov jl and mov and push jb and xchg (bad) pushq add adc loopne sbb out xor rex.WRB (bad) test retq sbb xor xor ja cld in test adc lods fstp (bad) je rex.B sbb pop pop rex.XB int3 jle xchg lret mov (bad) fs std popfq lret cmpl pop xor mov push pushfq xlat test pushq movsl pop fwait imul movabs push test mov jmpq je jmpq jmpq movabs mov test lods or mov js adc xor loope cmp rex.WX mov (bad) (bad) xchg (bad) mul sahf rex.WX rex.R popfq sub jmpq mov (bad) adc add movsb cltd or sub fstps mov push xor out sbb (bad) xchg mov jp mov test (bad) (bad) fs (bad) (bad) adc rex.R cmp (bad) cld push push adc es (bad) (bad) (bad) xchg adc jge (bad) sub retq fdivrp cwtl sti xchg (bad) jmp faddl adc gs adcl (bad) cmc mov adc fwait cld retq push iret push pop rex ss pushq mov retq pushfq mov push add xchg add sub test out decl test movsbl sar sete bswap sub lea and mov ror clc stc sub add sbb adc bt bt mov test test test jmpq jmpq jne cmc bt xor jmpq jmpq popfq mov adcl cmpsl (bad) push cltd (bad) cmp icebp test cmpsl xchg pushq fnstcw mov (bad) cld in mov jle (bad) mov rex.R push pop cmp sub cmpsb push (bad) movslq adc xlat callq add pop adc xchg (bad) (bad) sti (bad) jbe mov mov (bad) (bad) push jns mov pop cmp enterq or and lea sahf sbb fld hlt rex.R xchg (bad) mov and add fs (bad) iret lods mov push add jle cmpsl pop jg adc pop xor (bad) rclb pop rex.XB sti mov add (bad) mov lahf rclb out mov push (bad) callq jg cli cs test jmpq je bt sub jmpq jmpq pushq jmpq (bad) fucom out xchg lea or rex.WX or or (bad) jrcxz sub int push xor movabs mov negl gs imul (bad) shrl cmp (bad) pop mov stc mov (bad) rex.W icebp xchg rex.WRXB outsl ds cmp xor movsb rcl jl mov lahf movabs pop pop outsl cmovp lret jg (bad) xchg jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) adc lret jg mov enterq push (bad) xlat rex.WR sbb jb pop repz (bad) enterq in add add or (bad) (bad) xchg movsl fnstcw xchg mul outsl ds movabs movabs popfq push and (bad) scas in push cmp sbb jp mov sbb push add (bad) (bad) mov fisubr (bad) test (bad) mov subl push lahf (bad) push jmpq jmpq jmpq jne shrd shl movsbw movsbl sub cmc or movsbl mov inc cmc mov add rcl inc sub sar mov stc jmpq jmpq bswap add neg shr bsr btr mov cmp cmpb jmpq sbb mov rol shr jmpq test cmp test jmpq rex.R jmpq mov or and (bad) mov es rex.XB fs sarb xchg (bad) stos (bad) (bad) (bad) imul cmp enterq xor mov mov sub (bad) (bad) sub and movsb shll push cmp cmp mov mov fs xorl (bad) cld mov mov cmp (bad) (bad) incl mov xchg loope adc in add in jge shlb je (bad) add mov movabs rex.WB scas jg adc loop gs ja es and sbb jb jmpq sbb test (bad) pop sti nop or jl sub shr mov sahf pop xor (bad) (bad) or loop or (bad) (bad) adc sbb cmp xchg rex.WR jae scas sbb rex.WB pop int (bad) out repnz in mov out rcrl rex.WRB out out (bad) rex.WRB sbb callq idivb (bad) (bad) sti pop xor and (bad) (bad) (bad) (bad) ds (bad) add sub callq sbb movabs add (bad) sar xchg rex.WRXB push xchg mov sub (bad) mov (bad) stc (bad) (bad) (bad) (bad) mov (bad) (bad) out (bad) push and repnz negl push retq subl or cmp (bad) adc xchg push mov data16 mov sarb pop rex ss rex.XB mov test mov and (bad) decl clc (bad) bsf stc add sub shl mov jmpq or sub push movabs je rex.WRB jp mov mulb lods adc xchg je lods rex.WX hlt xchg rex.WRB cs mov (bad) cli push pop (bad) xchg (bad) rex.WRXB rex.R pop retq es add lret sub in rorl and (bad) cwtl orl and stc xor jg test (bad) cld movabs in ja pop iret (bad) adc (bad) insb bnd and repz sti cmp (bad) jo xchg (bad) or iret repz flds add add imul insb (bad) int3 pushq cmp mov sahf mov lock lahf xchg (bad) data16 (bad) xor and fildll rex.WRX xor sbb push rex.RB rex.WRX cs insb add imul push scas lods pop (bad) (bad) popq ja adc test loop (bad) sbb rex.WRX jp insb (bad) out cmp ja rex.W or and pop add out rex pushq out (bad) jbe xchg movl subb (bad) lock outsb adc mov addr32 mov rex.RX retq push xor xchg sbb test jp pop xor mov push retq mov repz (bad) (bad) (bad) sti roll sar (bad) (bad) movabs outsb sldt add and mov retq (bad) xor sub jle mov xor (bad) xor fadds mov sub cmp mov rex.WX rol fnstenv int push (bad) (bad) movabs retq (bad) ljmp push retq xchg rex.WRX mov rex.RXB sbb mov mov movsl and iret lock fs rex.X roll lret mov loop cmp mov roll xlat callq xchg xor adc cld outsl cmp out in xchg callq (bad) (bad) (bad) sti or idiv (bad) (bad) std callq rex.RB lock add push add mov mov mov jae lret mov lret mov jge mov ficompl (bad) and cmp push sbb icebp movabs (bad) (bad) mov movslq (bad) cmp sarl test (bad) ja (bad) lea jrcxz in (bad) rex.WX shlb xor pop rcrl test es xlat sti push mov movzwl jmpq je stc stc clc cmp jmpq mov stc test test jmpq (bad) sar add sbb test rex.RB stc icebp out adc movabs addr32 and in rex.W rex.WX rex.WX outsb fcmovb sbb (bad) xor fadds pop stos and mov rex.B or sub adc (bad) cmp shrl mov movsl (bad) movq (bad) jmp push ror jae rex.RX addr32 xchg sub lods sbb jg repnz cmpsb pop js push retq imul sbb and mov rex.WRB addr32 (bad) (bad) (bad) cld fld cmp (bad) or (bad) scas rclb and jae adc movsb divl mov shlb pop adc addr32 pop movabs mov (bad) (bad) (bad) sti fwait in mov jnp (bad) mov push hlt repz rex.R rex.WRXB scas (bad) mov (bad) je movabs (bad) (bad) jle adc adc test jno fwait or and mov imul mov add sbb rex.XB mov test sbb (bad) pop rex.XB test sarb es (bad) adc incl cmp add imul mov (bad) test (bad) movslq lret or adc fsubp fdivrs movabs rex.WXB rex.WX and pop fdivr rcrb cmp rorb (bad) jg or imul fidivr xor andb xor ds roll int jp cli fnstenv cld idivb jp insl push cs ds insl rex.WRXB xchg cmp push rex.WRXB data16 rex.RX and push (bad) (bad) (bad) std sub jns add add or lock repz std imul scas addb jrcxz or mov scas mov negb pop lock mov mov (bad) (bad) imul popfq int loop xchg (bad) negb rex.WB sahf rex.RB or sahf cli push jno imul fcomps jne pop jle adc add ss rex.RB mov (bad) (bad) lret rex.R lret (bad) rex.WRXB cld rex.WRX rex.WRXB pushfq (bad) pop lods mov repnz clc xchg push insb or and outsb rcrl and mov rex.R cmp scas mov xchg lret rex.R (bad) mov lret (bad) (bad) (bad) (bad) xchg jno nop jbe (bad) (bad) (bad) cwtl insl add push pop enterq mov lahf cltd fstpl ss je fnsave scas rex jl or jmp adc cmpsl out movsb xchg push imul mov and jo pop rex.W (bad) scas int3 (bad) loop stos add rex.X jns and cmp lock cmp mov roll cvttps2pi jl pop cld push rcll add and popfq mov mov mov insb (bad) xor rcrb xchg rex (bad) sbb (bad) ds jns (bad) and (bad) psubd cmpsb sarl adc cmp sti movabs fs (bad) stos sub push jns sub lahf rex.R or fisubrl and (bad) (bad) (bad) negb in mov pop (bad) (bad) mov mov add rex.XB cmc test jmpq cmp (bad) lea (bad) rex.WX jle test (bad) push push pop jle (bad) imul sbb in jrcxz sub adc lahf jb (bad) rorb push (bad) rex.X push mov imul out mov sub cmp ja or in insb push lock stc mov xor scas (bad) (bad) (bad) sti or mov std jmp mov stos (bad) (bad) movabs repnz loopne movabs (bad) (bad) pushq callq mov vunpckhps adc (bad) out rex.B shlb loope test sub lock (bad) (bad) xor scas mov mov mov out mov xchg fistl add and ficom fsubrp xchg rol and mov movslq push sub fsubrs imul clc loope adc cld testb rex.RXB test jb pop sub test outsb ss (bad) (bad) ljmp subb fs or pop loop test mov vmovq sbb cmp lret (bad) rolb pushfq lea push (bad) (bad) std retq cmc rex.XB es repz fisubr (bad) test or outsl pop imul rex.WX (bad) repnz rex.WB mov gs rex.X (bad) cmp sar adc add fsubl mov (bad) (bad) cmp rex.WRX addr32 sti in fdivs addb rex.W (bad) lods fdivl sbbl in cwtl push (bad) movsl rex.WXB jo sub add in (bad) jl cmp (bad) rep or fucomp lret (bad) (bad) in jno push test add movsb jl mov cmpl movsl test int3 cmp lahf shrb add mov add movabs (bad) mov xchg sbb out lock (bad) jns in fstp xchg ja or scas add (bad) imul mov lea jne rep lea bswap pop jmpq jmpq jmpq mov movsbw mov jmpq jmpq int add mov (bad) lock (bad) fimull jb andb cwtl hlt enterq or int (bad) or or (bad) mov cmp fiadd sti adc and sbb sub jge fsts icebp movabs loopne xor idivb rex.XB es cmp scas repz mov div jle mov (bad) (bad) decb (bad) (bad) (bad) (bad) hlt or (bad) rex.WR int3 clc popfq cmc movabs push movabs jno lahf out mov or fcoms pop adc sbb sarb add insb cmp subl out pushq outsb cli (bad) or mov fstl out jmpq mov add jmpq jmpq add rex.RXB gs gs imul jns push clc xor xor sub clc neg and test add cmc bsr lea adc mov setl mov clc bt jmpq jmpq icebp hlt out loope sub ficom rex.WRXB xor imulb push push repz pop or pop ss fsts (bad) jge stos adc cld jrcxz or xchg retq rex.RB pop pushfq int3 scas add js (bad) int3 lock (bad) jmpq or mov xchg rol sub and pushq (bad) xchg cmp (bad) (bad) cld sbb pop xchg movabs xchg shrd add (bad) xlat mov pop pop mov (bad) (bad) xor cmp lods cwtl mov rex.WRX push add add pop or movslq test pushq cmp jno mov mov jrcxz rex.WB ss xchg std cmp and or mov mov jo rex.WXB rex.B (bad) mov pop mov movslq outsl (bad) addr32 enterq loopne callq movsb movzbw movsbw lea movsbw pop jmpq mov and shrb add (bad) cmp jmpq pop mov std sti sub in mov xor cltd movabs xor vcomisd stos cld cmp and (bad) sbb mov mov out repz stos rex.WXB movabs push lret push repnz (bad) lret cmpb (bad) (bad) (bad) sti es mov (bad) (bad) (bad) (bad) incb xchg mov sbb mov (bad) (bad) incl lock div out rex xor add std movabs in (bad) xor mov xor lods sub jrcxz adc callq in mov nop rolb cwtl (bad) jne fucomi fcmovbe (bad) shr mov popfq sbb xchg sbb rex.WRB subb jo jp xchg xchg xchg rex.WXB mov outsb adc (bad) rex scas (bad) in cmc xchg adc outsb mov ss vpaddsw cld pushq (bad) xor sub rex.RX (bad) (bad) sti data16 jg lods (bad) (bad) (bad) incb push adc xor movabs sub fldl rex.RX fmuls mov rex.W (bad) notb jno jbe in sbb (bad) (bad) pushq lret enterq pushq stos movabs xchg jne and int3 stos jg pop xchg mov or or mov loope and (bad) (bad) mov xchg mov jmp (bad) add out nop (bad) jae (bad) mov out mov fldcw stos retq stos lret fs (bad) cmp (bad) cltd mov jae jne imul cmp fidiv pushq in pop and mov sbb sub sub insl pushq (bad) (bad) cld and (bad) (bad) incl (bad) test xor hlt rex.RXB rex.X (bad) xchg xchg test sti jp sbb mov test std hlt mull iret fldl add add or movabs (bad) icebp scas mov imul xor fimul fwait cmp cmpsl clc rex.WRXB (bad) cmp movslq (bad) cmp movabs (bad) xchg lret repnz push mov mov sbb sub pop mov cmpsl lods rex.XB scas pop js jb rex.WR outsb pop jp (bad) (bad) std out mov xor mov callq jge xchg and mov mov xchg mov xchg jo cmp (bad) adc (bad) (bad) (bad) incl pop (bad) rex.RXB stos mov xchg movsb jge (bad) pop shlb mov stos flds pushq jo sbb jns repnz sar xchg and mov (bad) adc test icebp pushq add sbb push (bad) (bad) (bad) or stos (bad) (bad) imul mov rex.WXB rclb int movabs fidiv (bad) mov xlat cmp out xchg pop rex.XB rol scas movabs and mov xchg fldcw fimul test test add rcrl cltd out (bad) jmpq add rex.R gs jb jns outsb jbe jb outsb insl outsb je insb outsl movslq jmpq add rex.R jae jb add add jmpq rex.WXB jo fs fistpl (bad) sub lods imul mov jrcxz or xchg cmpsb mov (bad) (bad) push loope cmp mov scas sbb mov sbb out test cmp mov outsl pop xchg adc jae rex.WR sbb icebp outsl xchg (bad) movsl mov adc fisttp pushq sbb rex.W (bad) clc btc (bad) sub pop (bad) sbb (bad) (bad) cld cmp (bad) callq stc mov sbb add roll add push (bad) sub movb rex.R mov flds test add add (bad) and test rex.XB mov mov fwait mov and and xchg (bad) rex.X iret mov mulb (bad) and xchg out and pushq jmpq pop mov bswap pop jmpq jmpq jmpq jae cmp cmp jmpq bt test test jmpq and (bad) (bad) xchg fcomi jbe pushq pop (bad) or loopne xor mov rex.XB rex.RX mov loopne rex.WX sub jb (bad) jrcxz (bad) jno xchg js adc fstps (bad) hlt gs movabs sub jg and and (bad) (bad) sti add cld repz (bad) (bad) std loopne roll jl adc sbb sarb (bad) mov test sbb fmull mov xor (bad) cmpsb (bad) (bad) cmp lea add adc cmp leaveq movslq sub or jb movabs lahf je jmpq jne cmc jmpq jne rex.WB rex.WRB rorb sub (bad) leaveq icebp (bad) iret out shld mov mov push cmp clc movabs xorl sbb push bswap stos and mov test adc sbb (bad) or push jbe cwtl and push or imul sub mov ss sbb xchg add (bad) mov test out mov test push fcos (bad) (bad) cld jge in imul (bad) (bad) mov add xor lret out lock add add mov or fmuls push nop sarb (bad) jb lret and (bad) shrb xchg sbbl pop adc nop rex.WB movsb leaveq negl test add (bad) retq sbb cmpsb add sbb xchg mov sub pop xchg out sarb jnp loope movsl fcoms add es xchg add movsl pushq loopne adc mov mov int3 cmc subl cmp movl movabs imul jb push subb in repz rcrb insl sbb xchg in in pop idivl sub (bad) loope addr32 pop or xor (bad) push cmp xchg mov or in sbb pushq mov and sbb xor imul (bad) rex.WB pop and retq (bad) mov iret adc test (bad) xchg fyl2xp1 fstl sarl std xchg adc add cmpsl xlat testb imul sub push leaveq std repz out pushfq jns (bad) (bad) (bad) cli rorb (bad) (bad) std scas (bad) or rex retq fwait (bad) lea in es lret and out rex.WR movsb rex jp in xlat pop xchg jp es scas (bad) insl cmpsb sbb outsb push adc pop out leaveq cmpsl mov and pushq sub (bad) (bad) (bad) incl jl xchg lret sbb cmc or insb cs rcl jp in test movabs push rex.B rex.RXB rex.WX cwtl (bad) js stos mov mov and or (bad) jmp push rex.WRX lahf in clc test (bad) out (bad) loope out fmul cmpsb js xchg sbb (bad) sub pop rex addr32 sbbl es xorb (bad) pop scas (bad) sbb sub mov fsub (bad) mov pop gs and add js push and out cmp lret xlat pop (bad) (bad) (bad) sti (bad) std pop and (bad) (bad) (bad) std (bad) cmp enterq cmpsb mov rex.WX outsl loope scas rex.XB xor retq jrcxz push rex.X je rex.X mov lret sbb mov rex (bad) (bad) (bad) jmpq stos and (bad) fs rex.B scas (bad) std movabs packssdw loop shlb imul jp pop leaveq sarl sub es jno in xor sub (bad) rex.WRX rex.RXB mov callq xchg rex.WXB lods retq out rolb rex.WB sar or pop mov in sbb loop callq mov sbb pushfq cmp rorl rolb (bad) (bad) (bad) std sub movsl rol movabs jmp jmp push lock insl movabs xlat mov (bad) loope sbb jmpq pop mov push scas popfq xor xchg xchg pushq lods rex.WX or lret mov adc gs lock jns lret fdivs lods (bad) movabs mov movabs rex.WR mov clc mov add mov (bad) int adc jns xchg int fidiv mov retq out jmp (bad) movabs addr32 je (bad) mov addl andb loop repnz mov ljmp ja out loopne sbb pop sbb fnsave fidiv out add imul pop or push rex.B leavew pop fcomp fisttpl adc jno iret or rex.WRXB cmp enterq test (bad) (bad) std sub rcrb add add js in in cmp cmp cmp cmp pop adc movabs movabs adc rex.WRX sub imul retq xor lods (bad) (bad) (bad) xchg (bad) adc cltd cwtl cmp (bad) mov outsb adc mov repz cwtl rex.RXB callq rex.X rolb loopne movabs push addr32 loope ss jl rex.RXB repnz rex.W or stos mov (bad) (bad) (bad) sti xor shl push (bad) (bad) (bad) decb js jl or sbb and (bad) movabs test fisttp pop test (bad) (bad) (bad) fsubs pop movabs rex.RX repnz jle adc je gs sahf (bad) xor cmpsl jg and mulb scas std jo enterq mov test fwait pushfq mov mov test rex.RXB jmpq mov decb push dec bt or mov stc and sub jmpq bt stc add jmpq jmpq je jmpq (bad) in sbb addr32 (bad) outsb (bad) hlt movsl push cwtl push push cmpps test pop pop mov stos retq cmp jmpq lret (bad) pop movabs movabs lret (bad) add push sbb enterq rex.WR stc lods (bad) (bad) (bad) incb sub jle xor and (bad) (bad) (bad) cld ffreep (bad) (bad) movslq (bad) (bad) pushq (bad) stos cld cltd leaveq or pushfq push movabs adc clc push lock test icebp pop (bad) push clc insl outsl (bad) pushq (bad) push mov rex.WRX int3 mov pushfq in jmpq gs movslq jns jne scas mov push imul test (bad) nop adc xchg sub rex.WRXB gs pcmpeqb movabs stc (bad) (bad) icebp mov rex.WRX xchg xchg pop leaveq (bad) cmpsl sub or stos mov sbb (bad) add (bad) (bad) sti sbbl (bad) (bad) (bad) (bad) (bad) cmp fmuls fldl and in sub rex.RX test pop repz (bad) (bad) (bad) incl js rex.WRXB out mov sbb (bad) add stos rex.R push roll addr32 mov jl hlt xlat mov pushq mov jb mov sbb mov sahf (bad) sub loope adc rex loop or xchg (bad) cmp jo sbbl mov (bad) adc (bad) xor xchg xchg push cmp lahf push mov sbb and lret scas mov and (bad) pop push jbe insb fidivrl test rex.RX (bad) (bad) and lods insl (bad) (bad) (bad) cld pop mov adc (bad) (bad) (bad) (bad) cmp jp xor fisttp cld cld in or imul (bad) lock mov sbb int3 xchg rex.WR add add loop (bad) cmpsb shlb rex out mov (bad) (bad) (bad) jrcxz add pushfq add jb pop jmp and (bad) cltd and gs in cmp sarl xchg cmpb fnstsw mov sahf clc sub push jmpq test jmpq jmpq mov fistpl rex.WRB cld sub xchg sbb push movsl (bad) neg imul lret rex.XB jg pop sbb sub js addr32 sub rex.WB or fmull pop nop mov sti add test jl push icebp (bad) pop jo jle adc mov pop rclb jbe mov or mov sub loop jg push mov rex.X adc (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) repz lcall rex.W push rex.B (bad) adc cmp pop cwtl cltd cmp cmpsl mov cmpsl and push jle add jo fisub js sub fwait (bad) xchg (bad) cmp mov mov add (bad) mov in es and data16 roll jns pushq xor xchg int3 (bad) (bad) imul pop jnp fsubl jae sbb cmp mulb stos rolb mov movabs add stc mov mov xchg movzbw and or mov bsf bswap shl mov cmc cmp clc xor clc cmp stc clc repnz jmpq jmpq or cmp rex.RB xorl rex iret cld in fisttp fs rex.RX pop or outsb cli add lods (bad) adc (bad) cwtl in mov push sub pushfq cmc movabs iret fistpll (bad) (bad) (bad) std xor add add or sub lret out and cld cmp cmpsl mov imul adc movabs imul mov movabs add or rcl neg sar add test shl add add setne xchg movzbw ror bswap mov neg dec mov clc bt push or neg jae mov cmp jmpq rol stc shr jmpq dec cmc not jmpq movb bt test jmpq or and idivl lods jo sub or mov int3 (bad) divb mov rclb pop insl rex.WRX pop pop jg add insl test loop and push cmp adc (bad) cmp (bad) jmp rex.WRXB mov and out rcr rex.WRB push (bad) cmpsl iret xor mov and add mov (bad) (bad) (bad) std push adc stc add add xor (bad) sub mov out cmp out rex.WR or in insb (bad) xorl imul js movabs movabs sarl adc ffreep fbstp imul mov jle rex.WRX loope push rex.WRB repz mov retq sti push (bad) fs movsb mov (bad) (bad) xchg jge and mov movsl int lret or pop (bad) add mov add callq (bad) jmpq or int3 out rex.R cmpsb outsb xchg push pop adc add mov fs repnz rex.WX decb mov lea (bad) imul test negl es mov mov pop (bad) hlt add adc (bad) pop lea xchg push test (bad) lea pushq sbb pop cmc lock xor sbb (bad) (bad) sti cmc in scas test (bad) (bad) (bad) (bad) (bad) cmpsb rex.X fucomp test lods iret decl fmuls add push and and loope notl repnz (bad) rex.R or pop xlat mov mov pop (bad) push adcl movabs in rex.WXB mov mov movabs popfq test or cmp rex.XB gs cmp lret pop nop sbb callq push cmp sar or addr32 mov sub jno repnz rex.W (bad) (bad) incb fs adc flds cmp mov jle retq add cmp adc add ror pop rex.X cmp (bad) (bad) std and (bad) (bad) push (bad) fs cmp rex.B pop sub retq movslq xor push jo cmp xchg push shrl js cmp (bad) xchg rex (bad) mov (bad) xor fcmovnu xchg (bad) mov movabs movslq retq repnz sub lahf rex.W sbb (bad) in and jnp xchg adc adc sbb lahf push add outsl pop jg or xor rex.RXB mov sbb sub jnp sub cmp rol or xor out rex.RX (bad) cmc and outsb mov je pop mov cmp loopne and mov (bad) (bad) sti jl (bad) idivb pop retq sarl adc mov jl (bad) mov (bad) (bad) fstpt (bad) sbb cmpsl (bad) xchg jo mov or pop jrcxz pop std xlat js loope outsl pushq movslq jle and lea rorl mov movsb cld (bad) outsl int3 cmp movsb mov or callq cli cli mov notb in (bad) idivb xchg pushfq movq sbb cmpsb or scas or jno cwtl add lods push cmpsb (bad) pushq sbb mov or (bad) and scas adc and lea sbb and data16 std rex.WRXB or mov nop sub or (bad) (bad) sti or (bad) (bad) std (bad) rorl add sub fwait mov xchg jmpq push push push add (bad) callq sbb rex.X mov add adc mov push (bad) cmp or push mov (bad) data16 cli pop fmull (bad) test pop (bad) fidivr mov movsl (bad) push subl mov in decl xchg rex.WB decl test cmp jmpq je bt sub cmp cmp jmpq movzbw movzbl movzbw jmpq js rex.WR shl xchg out in rex.XB (bad) movsl mov pop xchg rex.WXB addr32 iret test or sub fcmovnu cmp std cmc (bad) mov rex.B add ds imul shl insb cmp adc (bad) out (bad) lret outsl sub lods imul jl add add fs movsl xchg or xchg jmpq adc movaps jp (bad) (bad) (bad) mov or (bad) icebp xor mov out adc jb mov rolb xchg and xchg add jle movabs xor out (bad) adc add cltd mov adc (bad) enterq mov (bad) mov jle pushfq test mov (bad) int rex.XB sbb sub mov (bad) rex.B pop rex rex.X sahf in leaveq rex.RB (bad) sub (bad) mov lea ljmp mov movabs mov (bad) movabs leaveq lods xchg (bad) (bad) (bad) xchg pop adc mov add add adc sbb notb cmp (bad) scas rex.RXB add cmp out ss and mov cmpsb out mov sbb (bad) imul xchg mov mov movabs add sbb add rex.WR sbb es pop rex.WB orl cs or callq sub cmc (bad) fist xchg leaveq sti fabs subb (bad) push rex.XB repz xor add pushfq (bad) and push mov out sub sbb retq xchg stc jge adc push or and cmpl push (bad) lods in fldt sub sar (bad) (bad) decb (bad) (bad) (bad) (bad) repz adc mov sbb jae xchg pop pextrw xchg out jnp vpunpcklqdq outsl pop (bad) mov rex.WB addr32 mov js (bad) pop fcmovnbe ja rex mov xlat mov lock xchg mov cwtl movabs in sahf mov test (bad) adc js xor (bad) (bad) fcmovnu sub and pop push xor in shlb add fstps jns mov (bad) (bad) jae rex.RB mov mov stc jns adc mov xchg pop sbb mov push sti (bad) test mov pushq add sbb ja cmc xchg (bad) xchg rex.WRX movsl mov mov (bad) in (bad) (bad) cld pop push int rex.WRB (bad) (bad) (bad) cmp (bad) mov and mov mov add add add add (bad) shrb fsubrs outsb or jbe sub mov outsb stc xor callq jb rex.WRX and out lock rex.WB mov test jne mov mov jmpq ja jmpq jne jmpq test clc add jmpq stos pop orl jmpq mov fsub (bad) test rex.RX xchg outsb xchg mov es nop jrcxz jb (bad) out xchg (bad) popfq sbb (bad) cli jg sbbl out add insl pushq (bad) rex.WRXB sbb rex.WX rex.WX es jmp xchg rex rex.WB scas movsb fcmovnb (bad) orb (bad) xor pop leaveq outsb movslq xchg test sbb sub xor bnd (bad) (bad) sti xor add decb mov std mov (bad) icebp (bad) mov stos rex.RX xor (bad) mov int3 cmp movslq rex cmp xchg mov mov stos xor retq push or (bad) iret pushq jne fdivrs sub lahf jl xor jrcxz es sti mov (bad) ja sbb or dec cmp sub lea mov add not mov test xor bt sbb mov clc clc repnz jmpq jmpq in fisubrl sub push ja mov sbb mov cmpl sub psllq mov (bad) cmp insb (bad) stos rex.WR (bad) rex.WR addr32 xchg mov (bad) (bad) mov outsl pop adc mov imul ss movslq imul movabs mov (bad) (bad) (bad) xchg test sbb cs and xchg add jbe sbb xor out retq (bad) or pop out jl push rex.RX scas movabs xchg jb cmpsl and rex.WRX icebp xchg or sub mov xchg lret popfq (bad) (bad) int3 cmpsl (bad) cmpsl sbb testb rex.W add cmc movslq jns movabs stos pop and mov test test or add mov lock (bad) fisttpll sbb lret fbstp lahf not inc xchg cmp lret js (bad) je notl or sbb lods sbb add movabs mov push rex.X rex.WRX in ds (bad) (bad) (bad) (bad) sti rex.X pushq test add ficomp mov jp pushfq lahf adc in xchg movsl callq imul (bad) iret sahf pushfq test sub cmp retq loopne rex.WRX cmp fldcw lret (bad) (bad) (bad) (bad) js push add xor (bad) (bad) (bad) (bad) clc (bad) in sub rolb (bad) (bad) jmpq rex.XB repnz and push out scas loop jae rex.R jg,pn push cld sti xchg int3 mov sub (bad) sub push cmp nop mov mov xor lods lahf mov lods push insl and jb stc test cmp cmp jmpq push push push rex.WB cs rex.WR rex.WR adc pushq je and repnz leaveq jmpq xchg rex.WX push movsl loop and out test fxam xchg adc sub rex.B ss mov jns (bad) rcrl rex.WR lods (bad) pop push imul or rex.RB in xchg ss shrl adc mov (bad) (bad) (bad) sti xchg xchg xor ds (bad) (bad) (bad) je cmp (bad) xor sbb js int xchg rex.WR (bad) (bad) push push sub callq lret (bad) scas sbb flds or repnz xchg mov repnz hlt movabs andl and pop int3 xchg mov xor lods js and out push jle sub jo xor (bad) sbb (bad) repz sbb scas sbb push or and fwait rex.RX movabs add mov push cmp jnp hlt cltd mov mov nop in jmp add data16 int cmp in cld sar (bad) and or xor popfq ss lock rex test xor xlat imull pushq fisubl (bad) sub adc (bad) and (bad) (bad) (bad) sti fsubrs je (bad) (bad) (bad) (bad) mov cmp sti data16 mov adc int3 fisttp add add sahf mov rorb pushq movsl roll cmp rex.B mov (bad) jle xchg adc sub movabs add (bad) jbe test es imull and push mov movabs add imul (bad) rol add (bad) pop jge addr32 mov mov subb mov mov add flds or movl mov out (bad) fs cmp xor (bad) (bad) sti movabs andl pop leaveq (bad) in jge cmpsl rex.XB jnp sarb ficoml mov sarb sub loope jno add mov add (bad) jae movabs add add cmp cmp mov (bad) mov gs push add cs rex.WR (bad) jb sbb mov leaveq movabs out ja or pushq lahf mov scas rex.W ljmp sti lock jbe add (bad) out cld pushq es rcrl add sarl loope rex.R fiaddl retq sahf jl repz stos sahf sbb mov sub (bad) xor push jle adc div (bad) (bad) or pop test jle sbb iret movsb test imul cld sahf lret lods (bad) sbb addl jrcxz sbb and roll cmpsl loope movabs xchg jae icebp (bad) (bad) (bad) decl shrl or sbb xlat pushfq mov xor jp sbbl (bad) jo push sub fcoml rex.WXB rex.WR jo add add cs loop cmc jmp or pushfq and in pop mov (bad) (bad) cs in (bad) roll roll mov or vmovhpd imul es int3 cmp jmpq (bad) and push rex.RXB mov (bad) mov sahf mov int (bad) test fwait and adc pop cmp push (bad) ffreep out mov js cmp out xorps mov mov jno xorl pushq and (bad) (bad) (bad) sti (bad) adc callq (bad) movsl sub xchg xchg test outsl adcl sbb ss mov or (bad) xor iret sbb test (bad) cmp adc repnz (bad) imul add add sbb fidivrl jbe adcb push (bad) nop sub mulb mov mov fwait int sbb sbb rex.RX lods je cmc push icebp add sub lods fnsave lcall add clc clc cmpb jmpq je movzbq movsbw lea mov not movzbl jb movzwl lea bswap movzbw lea mov jmpq inc cmc bt neg stc mov cmc add jmpq cmc bt cmp jmpq rex.WRXB and movabs jne mov mov mov (bad) mov (bad) push xchg mov jge xlat or (bad) sbb xchg mov andl test (bad) adc or mov cli xchg callq cld push (bad) fistpll and cmp (bad) or pop adc (bad) xchg sbb xor (bad) (bad) (bad) sti jnp pop sub cld fs sub sub jle push mov fs (bad) (bad) (bad) (bad) jl jb lock (bad) (bad) cmp (bad) pushq xor push cmp repz (bad) lahf jbe cmpsl mov mov jns movsl (bad) icebp jmp rex.RB (bad) xor (bad) divb rex.R rex.X out pushq loop mov jmpq xor sbb jmp rex.WRB (bad) (bad) icebp push mov push rex.XB fstpt stos (bad) fdiv movsb punpckldq cmp jl sub jnp (bad) (bad) (bad) (bad) (bad) (bad) or jb jl adc sbb (bad) jne jo mov mov (bad) pushq insl repnz push sub mov data16 std out loope retq test insb rex.WXB mov fadds lods sti (bad) (bad) lret (bad) adc cwtl add adc cmc movabs sti pop cmp test icebp xchg or xchg add add jo in xlat lock cltd cld rex.WB test or xchg mov insb (bad) rex.X sbb fidiv jnp xchg (bad) and push rex.RB (bad) sbb jb fisttpl es (bad) insl sti pushq cmp xchg retq mov (bad) lret repnz fs (bad) lea adc test cli push mov (bad) rex.B fs jb and (bad) sbb adc adc test jmpq mov jge xlat jo add xor (bad) (bad) movsb jg sub (bad) adc and pop (bad) out cwtl (bad) pop mov insb cmp cmp lldt adc (bad) pop cmp adc sarb rex.R in xor xchg pop push jge cmp in mov data16 rex.RXB jno sub mov rorb cmp scas cld push rex.WX (bad) je shlb rex.X leaveq xor xchg (bad) (bad) stos (bad) (bad) (bad) sti shrl jg gs (bad) (bad) (bad) mov sti mov xlat lock (bad) mov add push fidivrl mov shrl subb sahf add test add mov (bad) xchg addr32 rex.WRB test popfq mov add push rex.B xchg cli callq mov jmp rex.WR rcl shld add rcl mov neg sub bsf data16 (bad) mov clc bt bt cmc sub cmc test pushq cmp cmc cmp jmpq jl je bsr neg bswap shld add rcr sub shrd adc ror shr shld mov bsf add test shrd bts add cmc mov bt cmp clc stc shr cmc cmp bt cmp jmpq sahf mov (bad) mov mov ror push sete mov jmpq jmpq jmpq ja bt add stc cmc bt clc or jmpq lahf rex.WRX (bad) xchg mov pop rex.X rex.WB sti sbb bnd je test popfq test mov jg std sbb rex.W cs adc (bad) mov stos imul movabs sbb decb ss add pop shrl (bad) (bad) (bad) cli retq (bad) jg xchg (bad) (bad) (bad) std movabs rex.WXB (bad) cltd sbb mov rex.WXB hlt (bad) and (bad) mov and (bad) (bad) xchg (bad) sub rorl (bad) stos (bad) xchg stos lret mov xchg rex.R xor cwtl sti outsl jge (bad) test (bad) movsl and (bad) (bad) (bad) (bad) jmp es (bad) and cmpsl clc (bad) repnz in ja mov movsb pop xor sarb in mov cmp retq sti push stc outsb and xchg cli jl mov xchg es jmpq ja stc jmpq jmpq jmpq (bad) adc or fisubrl shr xor iret or mov test icebp in mov (bad) cmpxchg (bad) mov sub or (bad) mov (bad) test (bad) (bad) push fwait mov loop pop out sbb xchg cmpsl rcrl (bad) out js pop testb lods jg mov xchg mov scas rex.WX movsl (bad) (bad) (bad) std xor mov jg movsb mov sarb movslq jne lret hlt ja testb lock in loopne adc jle mov (bad) and outsb ja subl stc xchg (bad) (bad) mov add test jrcxz pop mov push rex.WRXB xchg push cmp test mov in or sbb loop add (bad) and xchg (bad) jmpq mov (bad) clc (bad) jo xchg pop ja lea push pushq (bad) insb pop cmp xor lods data16 (bad) movsb rex.WXB rex.XB rex.WRX rex.WR insl pop mov or pop pop (bad) (bad) (bad) (bad) hlt add and adc add movabs mov sbb xlat pop adc lods add sbb pop push cmp mov lahf cld addl pop pop outsb rex.WRXB retq add cmp jmp (bad) gs mov mov in (bad) mov push rex.WXB repz (bad) rex.W cld addl sbbl cmpsb insl faddp mov out loope pop mov xor ds outsl push mov fcoms movsl roll and clc mov movslq mov (bad) shl (bad) xchg xchg (bad) (bad) (bad) decb mov add add or cmp mov popfq mov xchg adc retq int xchg mov jb rex.X repz cmp jns loop test pcmpgtd add (bad) ja jl outsb push lahf ss cltd rex.WX js mov mov jmpq je clc cmp cmp bt cmp jmpq jae xor rcr mov mov bsf rol mov xor sbb mov clc clc sub cmc test test jmpq setae jmpq add movslq rex.RXB gs jb jbe jb gs jb jo imul (bad) xchg rex.WX jae (bad) sub pop (bad) (bad) ja mov lock or xchg adc sahf imul pop rex movabs (bad) mov stos (bad) pop (bad) sti cmc movslq add ds retq loope cmp sub stos and mov popfq cltd jmp xor add xor (bad) adc (bad) (bad) sti mov fsubrl cmc scas jns test fistpll (bad) jno (bad) imul or (bad) (bad) (bad) mov pop jge xlat or sarb rex.WRB jo sbb pop mov insl add loopne (bad) mov and or test cwtl sub jo js mov mov jne bswap rol dec mov btr rcl test sub lea bts mov shr mov cmc cmc cmp stc sub test bt bt pushq cmc test test cmc cmp jmpq clc cmp jmpq jmpq xchg repz mov nop (bad) xor imul cltd pop mov je mov xorl rex.WB (bad) jnp mov in out xchg fwait push adc movabs (bad) mov enterq mov lea pop in outsl (bad) (bad) (bad) std mov sbb add add adc add xor rol (bad) mov pushq outsl (bad) (bad) in movabs loop xchg xchg (bad) push movslq mov fsub idivb cwtl jnp js (bad) add adc (bad) sub (bad) (bad) jrcxz div (bad) sti mov (bad) xorl je mov outsb rex.WRB mov imul je jno clc scas lret mov sahf test sub jae movabs mov jmpq jns jp cltd rcl movabs fnsave fwait jbe lock jge pushfq adc jno jge xchg rolb (bad) mov movabs pushfq (bad) mov rex.XB rex movabs rex.WRB std adc jp rex.W pop addl out xor cmpsb mov (bad) mov (bad) (bad) rex.WRX popfq int rorb cmpsl clc sub lahf mull data16 mov cmpsb sahf cltd (bad) mov sti pop mov or std scas ja lahf (bad) jl or jnp lahf xlat fiaddl lret sub (bad) mov loope fwait jle sbbl nop rex.B (bad) popfq stc jmp or or test jns movabs pop push (bad) imul mov push addr32 (bad) rex.X repz loope nop insb and test push (bad) fistp test popfq sbbl movabs (bad) (bad) retq or add icebp test mov mov callq mov enterq jp (bad) jmpq (bad) test add rex pop iret scas test push mov (bad) (bad) pop pop stc sub rex.WRXB addr32 sahf int3 data16 and in rex.R xor test movsb mov (bad) rex.WB es (bad) mov mov jne bts bts lea sub btc mov rcl add and mov jmpq clc repnz jmpq rex.RXB xor jmpq repz pushfq push xor adc rex.RX cmp mov jge fdivr xlat je in hlt or negb (bad) loope (bad) jle (bad) (bad) inc mov mov (bad) jae (bad) rex.W rex.R movabs retq add mov (bad) test enterq movabs sub rex.WXB leaveq pop sahf cmp cwtl mov loope pushq (bad) (bad) sti cmp (bad) (bad) (bad) sbb roll ds xor lods jg loop leaveq xchg jb retq imul (bad) (bad) callq cmp test xchg push (bad) push mov (bad) pushq addr32 mov rex.B rex.WR out shlb rex.WB xchg idivl psubsb nop idivl mov es sarb mov mov repnz mov subl jmp sub popfq fsts sub cmp sub faddl pop xchg jns jge loopne movabs rcll pop rex.WRX ja add rex.WB movsl or jne mulb xchg push (bad) jne sbb test shrb (bad) push jrcxz fisubr cld rex.WX ds jle (bad) (bad) decb xchg cltd leaveq and hlt or rex.WX push ss in insb adc lahf mov (bad) pop xor (bad) (bad) or sbb mov push xchg test mov rex.X lods mov pop out xor je (bad) stos loopne and mov (bad) out rex.WR or pop mov movsb sti sub data16 and push add adc std icebp lock repnz jno add adc rex.B loope (bad) hlt (bad) movabs pushfq jmpq rex.WRXB pop xor movslq jmp std jl in outsb (bad) adc rex.WXB or rex.R jl or mov int3 outsl rex rex.WRX data16 test xor fnsave test (bad) (bad) sti mov rex.X cmp (bad) (bad) (bad) imul cvttps2pi (bad) (bad) (bad) (bad) jmp movabs outsb xor mov rex.X test or add int3 xlat fidivr out loopne jb cmpsl mov fistpl cli pop cld mov add mov rex.RXB sub cmc sti xchg jge in scas jg movabs and or fstpt rex.WRXB pop jl and (bad) (bad) lock ror (bad) mov callq xchg cli mov enterq adc pop je rex.WB mov (bad) fdivl sbb (bad) cltd add push rex.WRXB out sahf pop sbb sub adcl movsl and sub pop ds sub lcall retq stos jmp mov or mov lock (bad) (bad) (bad) decl shll ss (bad) jb xor cvttps2pi (bad) or bnd jge mov push ja sbb mov and movsb jno adc cltd mov rex.W fs jl pop int cmpsb cld push loopne in test mov es xchg add test add add rcr mov clc add jo test cmp bt movzwl cmc and mov jmpq fcmovb cli sbb pop lret xor add movabs push mov in xchg lods rex.W and cmp lret jge es pop cmp lahf mov (bad) sbb add pop out rex.WRX mov rex.WB and stos imul (bad) rex.RX rex.WB adc add jno jmpq mov (bad) cmp addr32 jg jns lock pushfq out or jno stos xor (bad) (bad) sti stc popq rex.WR (bad) (bad) (bad) fmul xchg sarb imul xor fs add add pop mov sbb rex.WX (bad) rex.WX xor (bad) pushq loop sbb and (bad) cld pushq insl xor add add (bad) out fimull (bad) data16 (bad) roll xchg stc mov (bad) fcomp mov jb jp push (bad) jbe mov pcmpgtd imul or add or push mov out rex.WX jmpq mov xchg movabs int add (bad) sub sbb (bad) (bad) cld jbe adc cmc (bad) (bad) (bad) callq in in pushq fsubrs in lahf pop sub rex.WR retq xchg rex.WX xlat sti mov (bad) mov (bad) or xchg je idivl mov pop (bad) (bad) rclb lcall mov add (bad) and lret pop add rorl rex.WX xchg jg jrcxz push sub adc mov (bad) retq mov rex push cmp cmpsb (bad) (bad) callq add (bad) and retq mov add add movabs jmpq test rex.R rex.RX fsubrl movsl sub jmpq adc movabs sbb cld rex.RB sbb lea rex.WR sbb int mov icebp mov scas (bad) jmpq test pushq sub test xchg xchg adc ss js (bad) add jo (bad) (bad) insb rex.WRXB mov mov adcb (bad) rcrl push ja (bad) movsl mov (bad) (bad) (bad) sti mov rex (bad) (bad) cld jns clc (bad) rcrl test in mov pushq (bad) (bad) (bad) decb add add or imul xchg mov cs shl sbb pop or cmp repz cmp std push jle lcall jno out rex.RXB (bad) decl push and outsl roll loope (bad) rex.WRXB lret cmp fwait xor and jo push or movabs and xor test or jmpq mov bswap bswap mov not lea movsbl xchg not lea mov movzbq setnp setl mov bswap movsbl mov jmpq pop (bad) data16 leaveq pop xor mov mov (bad) mov pop xchg push pop sub push push push cmp add (bad) mov movabs movsb in adc rex.R ja outsb sahf icebp retq lods mov rex.WRB jbe enterq push adc hlt cmp mull mov callq fcmovnu mov (bad) push jne ja mov ja fwait xor mov (bad) and sbb (bad) (bad) cld (bad) clc movabs (bad) push sbb or xchg xchg add int3 cli std pushq add jg insb test jge stos and fnstcw fsubrs es (bad) ja addr32 (bad) in jb mov jge (bad) lock push mulb push mov es mov pushq jmpq cmp xor xor loope movabs (bad) mov jl enterq jge fmull sub xor add notl rex xchg (bad) movabs rex.XB fwait rex.WRXB jb js sbb movslq (bad) jne in mov retq pushq andl and add (bad) (bad) (bad) cld jge shrl (bad) (bad) (bad) (bad) mov lea rex rclb jae add adc adc jnp xchg (bad) pushfq mov add add imul addl mov jrcxz cmp leaveq pop xor loopne scas rcrl popfq stos (bad) cmp (bad) rex.RXB mov outsl lret mov outsl (bad) (bad) rex.WRB es xchg enterq push sbb add in (bad) idiv push add out rex.RXB mov lods adc retq (bad) mov repz movsb scas add xchg repz lods cwtl int scas lods cli mov xchg (bad) rex.WX cmpsb fnstcw jns (bad) xlat adc outsl xchg or stos rex.WR addr32 sub repz rex.WRB mov nop in loopne push jg outsb push (bad) (bad) (bad) sti rex.W sub (bad) sub (bad) nop out movabs jrcxz addl ljmp and cmp lea lret test retq mov pop (bad) jmp rex.WRB lret fiadd mov (bad) xor outsb clc scas (bad) (bad) cmc movabs es (bad) jne jmpq lret (bad) out lahf add jnp (bad) (bad) scas jae mov insl xchg mov shl sar fs rorl scas and sub mov leaveq cli mov (bad) lret fdivs adc movabs idivb outsb mov xchg sbb (bad) (bad) in fsts loop (bad) xchg jbe cmp or lcall (bad) (bad) test mov loop (bad) sub stc fldpi rex rex.RX rex.RB rex.WB (bad) sub je sub (bad) or mov add add ja cmp cmp test rex.WRB movabs rex.WRXB (bad) adc and fnstcw sub and push cmp adc fs push loop jmp adc mov leaveq enterq pop loopne addr32 sbb int3 xor stos retq rcrl jrcxz rex.RX iret cmpsl xorl ds mov sbb out out lret in adc xchg sahf in stc (bad) xchg movabs jmpq and stos roll (bad) movabs or neg cltd rex.RXB rex rex.WB scas (bad) clc push (bad) scas (bad) rex.WX mov or jp lods and (bad) add (bad) sti std jrcxz mov fstpl out jmp stc sub (bad) sbb mov int lahf add add pop adc add jo jno pop (bad) (bad) (bad) or sub cli (bad) xchg (bad) (bad) je sbb sbb mov add jl (bad) (bad) jp fisttpl test xlat out (bad) jo jmp scas xorl shr in imul in callq leaveq jmpq callq jmpq jmpq outsb push rex.WRX pop push rex.X fisubrl test or retq sti rex.WRB in enterq mov add clc test lret rex.RX test mov insl mov cmp jle movabs insb scas mov std rex.RXB jle jne add (bad) xor (bad) (bad) sti jnp pushq or (bad) (bad) (bad) pop stos push retq int stos add cs push (bad) add (bad) lock ja movslq xlat rclb lahf rcrl leaveq adc retq ljmp faddp cwtl decl decl (bad) (bad) (bad) dec movsl addr32 movabs mul add fisttpl icebp test jle (bad) (bad) jns and int mov lock andb out sbb or add mov int3 adc rex.WRB add (bad) (bad) jmpq jne test movb cmp test jmpq jmpq jne shl not adc inc sub dec clc and mov shl add add not not mov cmc clc test jmpq lods sti frstor pop (bad) movsl xchg xor (bad) jmpq sub icebp (bad) iret cmp mov push cmp cmp cmp loopne cmp and shlb rex.RB (bad) rex.X sbb (bad) stc push rex.WR stos imul movsb clc (bad) imul jmp pop enterq (bad) loope push cld jnp mov rex.WRB add in mov ds (bad) std mov (bad) (bad) (bad) sti outsl pushq (bad) (bad) decb (bad) push cvtpi2ps jnp int add test mov (bad) dec xchg (bad) (bad) (bad) jmp cltd scas mov sbb outsl data16 mov cs jbe (bad) (bad) (bad) sbb nop (bad) add mov mov and (bad) faddl rorb scas int3 stos rol mov int3 jnp cvtpi2ps subl add mov and lods (bad) sub jmp int stos mov jmp in (bad) (bad) and mov loop mov pop cmp (bad) cmp fldt out and out cld adc mov movabs repz (bad) (bad) (bad) (bad) shll (bad) adc jne jge pushfq je and or or addb rex.XB (bad) push pop cmp (bad) lods pop (bad) (bad) (bad) callq rex.WRB fidivrl adc push rex.WRX rex sbb cmp (bad) push retq mov (bad) sub fidivrl scas xchg ss rex.WRXB sub addr32 mov decl test jp jmpq movabs fiaddl sahf nop add (bad) movslq cmp movabs iret mov xchg mov out callq mov jno popfq rex.RX retq mov push div pop rex.WRXB test rex.R mulps imul (bad) mov cltd rex.WRXB outsl sub repnz outsl pop lods loope push xor sbb mov out mov add rex.RX (bad) (bad) (bad) callq jrcxz sbb mov in mov fs sti fmull movslq mov lea adc adc out int3 mov jge mov rex.WRB sarb push callq cmp gs out rex.W rex.XB imul (bad) (bad) in (bad) imul fbstp lods jmpq rex.WB jnp pushq xor jl rex.B xor ficompl cmp fcomp add int3 (bad) and or data16 cmp vhsubpd (bad) mov xchg scas cmp mov xor pop push out mul in ss retq xlat rex.WX enterq and (bad) (bad) (bad) sti mov outsb retq (bad) (bad) (bad) (bad) xchg cmp mov test pop xor hlt cltd rex.RX add adc adc ds jns andb jge rex.WXB adc mov sub (bad) and (bad) sbb and rex.RX (bad) cltd mov iret mov jnp adc jmpq bt jbe cmp add jmpq jb jmpq jmp faddl fidivr jp add jg sbb nop cltd rex.X pushw lret cld cld lods or lock pushfq push add callq (bad) mov (bad) retq in in outsl lahf adc push rex.WRXB jb jle pop out sti add rex.WX rclb lahf fwait std sbb (bad) (bad) (bad) cld lea (bad) decl push pop stc js adc jrcxz retq movsb mov loope push add xor outsl (bad) add (bad) imulb push mov pushq rex.B fisttpll xor add shlb addr32 int3 hlt movabs (bad) pop jg pop in and rex.RX cwtl mov add add add pop rcll pushq lods scas (bad) popfq mov repnz mov rex.WRB movsl mov jno hlt cli rex.WRXB xor xor sbb fnstenv jrcxz repz movslq movabs mov rolb (bad) xor sarl in jrcxz out adc xchg rex.WB and and (bad) cmpsb adc cmpl pop pop rex sbb out test mov (bad) cmp lret cld push rex.RX fdivl in fsubrs mov stc jo test add (bad) (bad) (bad) std rex.WRX imul (bad) mov cmpsl adc xchg loope ror out jge and push fcoms idiv subb (bad) insb cmpsl mov (bad) mov subl add js sar xor mov add negl test jno pop (bad) push jl mov scas mov movabs mov ror (bad) jo ja sbb rcr sub bswap sub add movzbw shl mov mov inc inc cmp mov clc clc repnz jmpq shr push ror push sar test sbb adc push sar xor or push xor xadd sbb shr mov not mov and sbb lea mov cmp cmc stc or jmpq jae ror shrd and mov movsbq lea or bsf mov and rcr dec mov cmp bt bt xor cmp repnz jmpq (bad) sub xlat (bad) ja rex.WB mov rex.R xchg fld1 movabs mov pop (bad) fdivl cmpsl push push rex.W test insl (bad) add add mov cmp vcomisd jno sbb or and retq rex.WRXB test and int rcll sbb fstpt cld std test jns xchg in and cmp insb (bad) insb clc mov (bad) (bad) cld rex.RXB (bad) rex.WXB (bad) (bad) decb icebp pop cld xchg add add or mov movabs (bad) mov ja in xchg rol jo negb insl loopne jno mov mov fdiv (bad) fdivl pushq xchg decl movb jmpq jmpq xor js and push adc scas mov jrcxz (bad) out sar out pop jns scas incl sub (bad) jb jo push mov fwait cmp cld jnp xor push jmpq sub xchg (bad) cmp loop testl push lods rorl jb test mov sbb imul mov pushfq or xchg (bad) stos rcrb icebp pop je jmp outsb xchg mov loop xchg retq out sub orl sub rex.WRXB addr32 (bad) push fcompl (bad) (bad) std sub lods add add or (bad) xlat mov (bad) add jbe push (bad) rex cs clc mov andb (bad) mov (bad) fist and (bad) (bad) je lods add out outsl rclb rex.WRB mov mov add mov or callq rex.WX (bad) mov jns adc sbb push xor mov leaveq (bad) mov cmpl movabs addr32 pop rex.X cwtl fs cmp (bad) xlat cli test adc (bad) in xchg (bad) (bad) (bad) sti imul (bad) (bad) decb (bad) adc pushq dec or pop rorb rex.XB jrcxz rex.WRX xor rex.X shll push and push (bad) xchg push (bad) movabs mov imul insl outsl enterq mov (bad) ds rex.RX cs insl sti (bad) int3 (bad) (bad) add cmp stos ffree sub jp xchg xor jrcxz fwait jbe mov popfq test pushfq sbb jb rex.WRX lret or jno movsb (bad) push test (bad) and fisttp pushfq jg rex.W cmpsl sub pop xchg mov decb (bad) shrl jns mov mov jno push es bts sbb cmpsl loopne xchg (bad) (bad) (bad) cld rex.RXB (bad) (bad) decb sti push (bad) leaveq add add or fnop xor jo jns in (bad) mov imull (bad) rex.WRB js jmp outsb ja mov movabs rex in jle xlat xor or sti xchg (bad) xor (bad) int3 js and (bad) rcl mov int3 hlt cmp lods adc (bad) movabs ss sahf mov int add xlat (bad) std (bad) jno sub (bad) jb mov rex.B xor out test iret lret retq xchg (bad) rex.WRB mov int3 es jmp imul (bad) loopl lock rex.WRX rex.RXB lahf (bad) or rex.WB sbb fucomip (bad) (bad) (bad) rex.WRXB test fcompl or sar (bad) (bad) std sub rex add add or fwait in rex.XB add (bad) (bad) (bad) sbbb or push sti popfq fdivrs cli rex.WB mov xor pop repz ss repnz fmuls fwait loopne jmpq rex.R gs lahf retq add in rex.X rex.WRB jle or jbe add cmpsl adc add int (bad) rex.B adc hlt stc retq add shll xchg mov (bad) push fidivl xorl rex.WRXB or (bad) js insl out xchg pop (bad) push add pop push int3 (bad) xchg jne (bad) (bad) (bad) cld adc (bad) (bad) (bad) (bad) hlt imul mov (bad) (bad) mov add sbb lock push insl (bad) (bad) jmpq sbb mov sbb xchg repz inc mov cmpsb or fucomip rex.WX rex.WB push (bad) jno jae rex.WRXB xlat addr32 iret jmpq jne jmpq rex.RXB rex.WRXB jge sahf mov jg lcall (bad) (bad) stc pushfq cmp jnp in addr32 es scas es lret xor cmp rex.WB test xchg lahf (bad) (bad) (bad) std negl mov icebp (bad) lret data16 jmpq pop (bad) (bad) ja rex.WXB xchg jno push (bad) (bad) (bad) cld (bad) cmc mov (bad) jmpq or mov jmpq int3 scas add insl repz xchg ss shrb cmp int mov (bad) (bad) rex.WRXB xor insb dec (bad) jb cmpsl mov fdivrs cli imull lret ss rex.WB pshufw insl (bad) (bad) (bad) mov mov xchg ror cli add shlb mov (bad) or rex.XB ds (bad) push cmp sbb hlt in cmp (bad) jnp movabs imul mov sti in stos adc imul jl pop cltd cli jo insb shrl int3 rex.WX or mov push sbb (bad) sti (bad) stc xchg (bad) lock lock lods sub jae fs mov insb or addr32 jl push cmp pop callq ja pop (bad) (bad) (bad) std sub sbb add add mov stos fidivl cmp cmp data16 rex.RX xlat jno cld or in push sar xlat data16 xchg sbb movsl mov hlt jmpq jmpq jmpq callq jmpq test bt sub jmpq lea jmpq gs or (bad) cmp (bad) (bad) jmp repz lcall lea sub jae outsb mov rex.RXB push test adc jle lahf rcll push jg movabs loop (bad) test xor (bad) std sub and movsb pop je cmc (bad) idiv lods and mov fcmovu jbe punpcklwd (bad) sbb sub rex.RX scas add (bad) jno subl (bad) (bad) (bad) sti movsb lods or mov sub jmpq adc outsl int3 (bad) sub pop add add add lret xchg ss push cmpb jbe or stc pop rcrb pop mov insb adc jg add mov repnz and scas and (bad) addr32 lods fnsave (bad) adc out mov fstps xchg adc (bad) fimul fcoms hlt and (bad) cmp add pushq push rex (bad) (bad) (bad) or or (bad) (bad) xchg rex.WR cwtl rex.WRXB pop adc stos int movabs (bad) leaveq std fisubr sbb (bad) leaveq mov mov lods rex.XB rex.WX (bad) (bad) (bad) cli scas sti in mov std mov xor fsts js movabs jmpq mov push movabs push sub cmpsl mov (bad) (bad) (bad) callq loop repz fucomp test (bad) (bad) mov (bad) mulb push rex.R fs jns and sbb rex.WRXB xchg (bad) add xchg in fs stos (bad) cmp imul fnclex stc sbb cmp add (bad) add loopne add sub insl cmp add loopne add sub jo sub xor (bad) add sub sahf (bad) sub rex add sub push js add (bad) add add add add add add (bad) add add add add add rex.WXB add (bad) add add add add add (bad) add cmp add sub nop loopne add cmp add loopne add cmp add fwait sub mov (bad) add cmp add loopne add cmp add sub shl (bad) add cmp add test add loopne add cmp add jb add loopne add cmp add mov (bad) add cmp add (bad) add loope add sub jge (bad) add loope jmpq callq add shl add stc xor mov stc clc test cmpb jmpq pushq jmpq and xlat in cmp fcoms add pop rex.RX pop sub in (bad) adc xchg and jmpq pushq adc rex.WRXB (bad) (bad) cmovo mov (bad) lret xchg hlt cmpb xchg push rex.WRB fidiv xchg jrcxz in out cli (bad) loop sub cwtl out mov (bad) mov xchg push (bad) (bad) (bad) sti mov pushfq (bad) or (bad) (bad) (bad) xchg xor rex.XB cmp pop insb fldt mov pop adc xor test retq add (bad) enterq add xor (bad) imul jo callq test push or mov imul jae test in rex.WB ds cmp rex.WX rorb mov xchg sbb sub out mov pop rex.RXB mov mov fisubr cmp mov (bad) (bad) jmpq (bad) mov adc mov jae push mov pop mov dec repz xchg movabs jne adc in add cltd rex.WRB in or (bad) sub rex.RXB (bad) in cmpsb movb outsb (bad) xchg (bad) rex.WRB pop (bad) rcr mov lea sub addr32 rex.WXB (bad) (bad) cli jmp and imul (bad) std lret xor inc cmpsl lock repz retq imul in rex.WX (bad) incl mov test fnsave add push in (bad) cmp clc (bad) mov xor sbb pop fld xchg mov and (bad) fnstsw xchg add cmp jne popfq or add test fistp mov cmp cmp jmpq add rex.RB je jb movslq jae jbe xchg loop mov test subl rcrl nop insb por nop outsb (bad) pop xchg rex.WX fild cmpsb fdivl or xchg pop fmul rex.RXB outsb (bad) mov (bad) icebp add fst mov retq (bad) xchg faddl cs rex.WR movb (bad) jo and or int cmc popfq (bad) out shrb (bad) (bad) sti cmpsl cmpsl xor xchg (bad) (bad) (bad) incb cmp cwtl cli jmpq jle lods mov add add (bad) (bad) and movsb (bad) (bad) (bad) loopne rorb iret cmp (bad) rex.WRB sub lret mov xchg rex.WX psllq es rex.WRB jb clc stc test clc cmp jmpq je jmpq mov (bad) mov jl rex.RX int push subl jnp loop (bad) or pop mul cltd test rex.WRB adc xchg fsub stos mov popfq loop adc push nop xor cli loope rcll shlb outsl xchg lret stc int mov rex.WR ss cli in es pop mov int3 movabs jns movabs xor (bad) sub mov jne (bad) (bad) (bad) sti enterq xchg (bad) (bad) (bad) (bad) cmpsl push lods sub enterq add add (bad) rex.WRX pushq sub lcall movabs jle pop add (bad) pushq jns mov rex.WXB sub mov xor pushfq mov cmp pop xor (bad) push es (bad) rex.WRX es (bad) xchg movsl xor retq sub mov push mov (bad) xor sbb adc sbb sub (bad) rex test pop rex.RX (bad) outsl sub jl int lock sbb adc (bad) (bad) xchg repz test xchg cmc rclb (bad) pushfq pop (bad) and push xor sbb mov mov rex.W pop callq cmp or callq (bad) (bad) (bad) cld nop cltd movslq xor (bad) (bad) ljmp sub push sarb test rex.XB cmp mov (bad) (bad) xchg or add add rex.WRXB repz rex.XB (bad) jg loope movsb movslq mov push or or ficomp scas mov fsubl loop jo xchg mov fdivrs sub mov loop jo xchg retq stc cmp bt test cmp jmpq jmpq jmpq movl jle (bad) jbe rex.B and sbb cmp rex.B fs jle mov scas add mov (bad) mov xchg mov ffreep sbb ja std movsl cmpsl mov fistpll add pop pop mov pop enterq xlat mov xor xchg (bad) mov (bad) jnp (bad) (bad) (bad) sti mov (bad) sbb (bad) (bad) (bad) (bad) outsb sbb (bad) imulb ds (bad) xchg (bad) fdivrs mov cmpsb cmovle repz xor mov sbb xchg rex.RX in (bad) (bad) (bad) pushq sbb jp or mov rorl mov sahf add xor jno divl (bad) retq pushq movabs (bad) mov pushq xlat mov es scas mov add iret cmp sub rex.R movq jno stos cs or (bad) idiv mov push jne sub xor ja jnp fs mov (bad) roll xor rex.R mov mov enterq push cwtl fwait rex.R (bad) add or mov shrl pop js add (bad) popfq rex.RXB xlat gs (bad) (bad) cli fldt in (bad) (bad) (bad) std mov loop jne fstpt loopne cmp jp es out movsb lods mov xchg fistp stos (bad) data16 lret xor scas sbb push ss mov hlt lahf mov ror mov loope (bad) jae (bad) jb xor adc in stc mov jnp rex.WR es and jmp push bt test add jmpq jne or shld inc sub xor sub and mov adc cmc test sbb add and mov jmpq movzbw mov btc add clc bsr rcl seta add movzbw jmpq cmp jmpq mov rex.RXB (bad) xor fdivs adc sbb rex.WXB xor sarl rol retq rex.R (bad) insb jge adc pop mov jne add xlat or rex.RB mov adc (bad) (bad) (bad) sti (bad) mov (bad) (bad) decb repnz (bad) mov fcompl and or xlat (bad) or test (bad) rex.RB mov or xor sub incl sbb test mov icebp pushq rcrl in cmpsl (bad) add lret mov rex.WXB xchg (bad) xchg xor (bad) cmp std pop icebp pop or pushfq mov mov (bad) mov out cld in jb cmpsl (bad) incl rex.WRXB xor cltd clc imul jmpq jae rex xchg mov and (bad) (bad) lock jae pop test xchg movabs ficomp jp lock mov frndint fwait cmp mov adc loop lahf mov mov (bad) imul mov (bad) sub xor (bad) std or push (bad) leaveq (bad) (bad) (bad) xor rex.WRB cltd mov outsl (bad) cmp (bad) (bad) (bad) std rex.WRX (bad) decb mov add mov or jge jno xor xchg js mov mov adc mov popfq xchg pop or mov callq outsb rclb int3 enterq xor mov sbb or cs lods stc jl mov add lods fnstenv test mov out rex.RXB jmpq out sbb (bad) loopne enterq cld pushq or frstor mov push or xchg xor (bad) mull lods rex.W rex.W jo push and rex.B (bad) (bad) and int (bad) cmp add mov cmpsl mov pop sarb fcomps cltd (bad) (bad) (bad) (bad) sti sub repnz pop (bad) pop outsb in fisttpl fiaddl (bad) add rex.R push sbb xchg rex.W fildl or (bad) movslq mov (bad) (bad) out or test jne add add outsl or rex.WX (bad) pop jb lret or jbe loopne shlb addr32 (bad) jbe add mov adc (bad) movabs cmp mov (bad) mov cmp fdivl xor xor mov callq cmc jmpq pushq jmpq or fnstsw mov (bad) mov loop add test insb movabs (bad) xor sbb or ja (bad) rcl (bad) rex.RX and and rex.WRB loope mov std (bad) and (bad) mov rex.WRXB fstl cs jnp cmp jb retq jle es sub lock movabs xchg (bad) push mov test clc out cltd cs test mov int (bad) jge test xor pushq pushq xchg hlt cltd (bad) xchg jle (bad) js (bad) ds pop pop pop scas loop (bad) (bad) decb (bad) (bad) (bad) incl in pop outsl leaveq mov jbe cld movabs add fdivrs mov icebp stos cld jae pushq add (bad) insl insb rex (bad) (bad) fidivrl xlat add nop mov xor (bad) (bad) in (bad) mov callq adc mov cmp movabs icebp test add or cmpsb and gs movlps pushq mov mov lock (bad) mov sbb xchg jmpq (bad) (bad) (bad) decb fs jmp out sbb mov out rex.WB rex.WX (bad) lret pop xor or xchg lock ror fsts cmp push mov fsubs push xchg sbb adc mov imul je mov push rex.RXB jmpq cmp cmp movb cmp jmpq test jmpq je bt stc jmpq jne movsbl bswap mov mov jmpq jmpq lret movabs add imul and xchg pop mov repnz mov movabs je lods mov sub mov jg repnz callq popfq pop rex.XB insb (bad) or test push jg sub pushq (bad) rex.XB cli sbb (bad) (bad) (bad) cli mov (bad) (bad) (bad) std cltd pop sbb jbe iret (bad) lods xor jg sbb pop (bad) jg mov fnop (bad) sub enterq (bad) rex.RX (bad) (bad) lcall (bad) int xchg fs (bad) mov add (bad) movsl int jnp adc imul mov xchg mov rex.X and (bad) out sub (bad) (bad) in mov out jo (bad) jns in inc ja clc imul cmp test test bt add jmpq stc imul clc stc jmpq jmpq shr bt cmc test cmp cmp jmpq lea mov movzbw xchg mov jnp mov xchg bswap xchg mov not lea jmpq mov add rex.WXB cmp in imul (bad) mov adc leaveq hlt (bad) xchg pop fs (bad) sub (bad) stos callq xchg gs push cwtl sbb (bad) (bad) (bad) retq mov rex.R or and mov movabs (bad) (bad) callq jrcxz and lret rex.R or pop sti or and gs push and rex.R rorb orb adc (bad) mov xchg fidivrl cmp sub es or in in (bad) stc clc stc clc sub jmpq lea not pop lea xchg xchg not pop bswap bswap movsbl pop ja bswap pop retq jne setne rol rcl sub sbb mov sbb cmp add rcl (bad) lock sub mov clc bt test jmpq adc retq jmpq cmp (bad) pop push (bad) jnp mov mov icebp sub or loope out mov ss or sub sub adc cmpsb sbb stos (bad) lods add mov sbb (bad) insb pop rex.B cwtl (bad) mov pop cmp es jge shrl pop push sti lods cmpsl jbe adc shrl (bad) (bad) (bad) cld add xchg (bad) (bad) (bad) loope movabs test stc imul (bad) clc outsl (bad) xor mov clc (bad) movabs push (bad) outsl ja add add xor cmpsb and (bad) (bad) xchg std rex movsb (bad) loop stc pop adc xor repnz (bad) test or rex.X retq sbb outsb (bad) mov sbb rorl lret test icebp (bad) sahf (bad) not neg movzbw xor mov clc cmpb jmpq clc cmp jmpq cmc imul stc add jmpq stos jmpq jmpq jmpq je stc or mov push inc mov (bad) lock sub movzbl movzbw lea jmpq in pushfq ds sbb jb stos and xchg and cmpl (bad) xlat fdivrp cwtl cmc sub sbb addr32 jmpq outsl sub sub sbb mov sub xchg nop ja and movsl rex.XB sub jl test mov rorb cmc or adc mulb xchg scas pushfq test xor repnz (bad) (bad) (bad) mov testb (bad) or mov test (bad) xor push push add add xor mov sub (bad) mov and data16 cmp (bad) add cmp xchg sbb fnstenv xor jno test rex.WRB out sub bt clc cmpb jmpq pushq jmpq jbe jae jmpq addr32 or cltd roll push (bad) retq cmp pushq jle out xchg rex.RB rex.RXB mov sbb rex.RX or lret (bad) hlt movl (bad) icebp jo and outsb cltd xchg (bad) add js sbb pushq jae repz jns movabs loope (bad) mov cmpsl sbb sti push out rex.WRXB cld movabs pop cld cltd and mov rex.WXB and (bad) (bad) (bad) sti push movabs fildll test (bad) (bad) (bad) pushq insb adc mov push jns rex.RB clc push outsb adc mov fimull stc pop enterq xchg jg lret (bad) outsb fwait mov (bad) ja cmpsb sarb rex.WX xor xor (bad) jp mov out gs lret jmpq jmpq ja cmc sub bsf rcr sar add shr mov lea mov cmc mov clc repnz jmpq roll cwtl js (bad) or jo (bad) mov cmpl movabs xor (bad) jmp (bad) xchg push pop adc push (bad) sahf rcrb push adc shrl push sub lahf adc insl add jrcxz data16 loopne (bad) movabs push movsb push (bad) and and cwtl (bad) ror stos sub (bad) (bad) (bad) cld push push imul rex.R (bad) (bad) pushq fs sti nop mov xchg addr32 add fdivs leaveq pushfq adc out retq out add add out enterq rex.WXB mov lret jp ja,pn or frstor rex.W (bad) adc stos retq imul sub rol cmpsb (bad) sbb movabs mov lock negb out jmpq mov fild rex.WRB xadd sub and bsf cmc xchg shr shr shrd movabs stc mov jmpq xor stc repnz jmpq (bad) (bad) rex.RX adc fnop jbe cmp movabs rex.WRX lods insl or shll movabs rex.RXB imul rex.XB jg jmp data16 sub xor stc mov pushq (bad) loopne out jp mov jbe movslq imul rex.WRXB xchg cmp xor pop jrcxz cli jmpq sub outsl sub sbb movsl leaveq pushfq imul retq rex.WRXB fbstp or loop retq (bad) (bad) (bad) std sub xchg popfq add add or (bad) jl jle cld push rex.WX add shl mov int mov sahf jge lret mov and cmp (bad) adc leaveq mov mov fsts sbb cmp incl int3 je or rex.W rex.B add pushfq push jp mov outsb insl push outsl push lods mov jbe sub add and push (bad) jno mov or jp (bad) int3 cmpsb (bad) loopne out xchg cmp pop pop jne int3 test jg adc (bad) xor (bad) sbb sub and callq xor mov rex.XB std jle repz in mov pushfq mov jne mov xchg or gs in jo xor (bad) (bad) (bad) sti pop sub (bad) (bad) cmp xor lret (bad) sub test (bad) out (bad) (bad) (bad) mov and pop sarl ja adc jmp sub sbb rex.WRXB xchg retw jg imulb rex.RB or fcompl mov mov repnz gs sbb js (bad) flds sbb lret push xchg adc fsubl out xchg rex.X add test movabs mov (bad) imul lahf mov cmp mov or xchg fucomip rex.WX lods or (bad) sub jo pushq (bad) and (bad) (bad) (bad) cld mov (bad) (bad) (bad) ljmp rex.R jp mov rex.RX fwait and stc (bad) jae movsb (bad) mov sub push cld jnp pushfq xor and or callq fcmovnbe out cltd sub rol repnz movabs pop (bad) pop mov fcmovne add add ds js,pt mov movabs (bad) jo in push outsb lret enterq fcoms (bad) sbb jmpq cmp push jo and sub rex.W rex.X adc (bad) ds outsb add mov shrb int3 mov int pop (bad) sarl test cmp xchg add jge sub retq push retq mov rex.RX (bad) rcr pop xchg rex.X sub sbb es (bad) pop cmp mov rex ds xor pushq stos push (bad) mov push xchg jae mov (bad) (bad) decb pushq jle pop mov sub push mov or mov lret ds cld push lahf mov test outsb mov add (bad) (bad) (bad) (bad) incl int add retq cmp adc in cmpsb rex.WR je (bad) lods notb xchg push fisttpll mov mov xchg xchg (bad) int push rcrl test sbb jrcxz (bad) lods lret iret ja and rex.R std movabs movsl mov fisttpll sub rol mov test xor or jb mov in sbb xchg mov xor or sbb in hlt push sbb mov pop stos enterq pop jb repnz je shrl xchg rex.RXB xchg push stc add rex.WR cmp rorl (bad) lret lahf (bad) shrb and adc out xchg (bad) (bad) pushq (bad) jb test adc test xchg incl mov cmp rex in (bad) (bad) (bad) out movsl adc lods mov (bad) (bad) decb add (bad) push (bad) jg test stc (bad) popfq mov cwtl callq popq sub mov jb gs rex.B (bad) cmp cmpsb clc callq adc out rex.WRXB rex.WRX (bad) loope (bad) push jmp insb sbb adc adc jae movabs add mov idiv mov in in jmpq rorl iret push clc mov setle sub jmpq clc sub jmpq lea jmpq jmpq bt test bt add test jmpq bt sub js rep movzbw jmpq add rex.XB insl insl (bad) outsb imul addr32 add cmc jmpq stc bt cmp jmpq ja dec or shl ror add stc rcl add shr rol not setbe xchg shl ror adc mov not (bad) repz push bswap dec cmc mov jmpq enterq (bad) mov insb rex.XB mov (bad) cmpsl fimul (bad) and jo mov adc or es data16 push xchg jb (bad) popfq xchg lcall (bad) sub mov (bad) (bad) fmulp movsb sahf mov cltd mov sahf lea mov fbld jrcxz popfq repnz or in sbb fs out (bad) std repnz movabs sti repz adc (bad) (bad) (bad) (bad) xchg pop nop rex.W cmp addr32 mov or add add push mov test out xchg rex.WX jg rex.R leaveq rex.RXB icebp pop adc sbb stos mov fiaddl and xchg roll fnstcw rex.X adc imul insl (bad) cmp cmpsb mov idivl adc or xchg pop rex.B fwait pop rex.B and movabs and jne (bad) out rex.WR sahf rex.XB add scas test imul test cmp (bad) (bad) lahf pop enterq lret lods (bad) (bad) mov rex.WB add jg addr32 add add pushq incl movd sahf add pop (bad) (bad) (bad) sti jns (bad) insl (bad) (bad) (bad) (bad) (bad) pop mov and jae add sbb rex.B ds cmp (bad) (bad) fdivs (bad) iret (bad) sbb pop xchg lods lret or push idiv cwtl jmpq push rex.WXB (bad) mov mov cmp sub sub cmp pop cmp (bad) mov stc (bad) push retq cmp (bad) sbb xlat fwait jge pop or sub psrad (bad) lret mov jmpq mov (bad) sbb xorb pushfq pop or sbb pop ficom push out rex.WXB xchg (bad) cmp push mov lea (bad) (bad) nop mov js stos push jg (bad) (bad) (bad) cld pop and and (bad) cmp in cld imull cmp xchg cld fwait rcrl or adc rorb push or add add shrw adc xchg sti sub xlat sarl ja pushfq mov movabs out ljmp jnp cmp mov out rex.RB stc pop je jge test out (bad) clc clc cmc or jno je not xor test stc xchg movsbw mov shrd mov bt shr adc mov cmp jnp bt stc or jmpq mov jmpq (bad) out shrb adc adc cld mov sbb enterq sub loop mov (bad) (bad) (bad) sub rex.R scas sbb lahf rex.XB xor lret xchg mov mov (bad) pop xor icebp stos xchg adc xor pop scas cmp (bad) orb mov ds (bad) cltq cmp cmp rex.WRXB (bad) (bad) (bad) cld jge (bad) sub (bad) mov test movslq lahf push sub jae mov (bad) add adc and jo scas mov stc or cmc push in sub shrl cmp leaveq add add or loop (bad) repnz shrl pop adc adc addr32 jp and out xlat out rex.WX pop sbb (bad) sub (bad) rex.WRXB mov cli scas add sbb js rex.WRXB fild and pop cmpl jae mov lahf rex.WR rex.RB push rex.WR rex.R rex repz rex.WXB int3 pop rcr xchg rex.B xor mov sahf sub movabs jp int adc repnz scas cs pushfq (bad) es jnp lahf rex.WX fwait cld pop movabs and mov or fcmovne (bad) (bad) (bad) std rex.WRX out sbb stos push mov add add or (bad) test sti (bad) rex.WRXB adc rex.WRX rex.RB rex.RXB jo xor lahf mov sarb rex.WRX cmp test movabs xchg mov xor xor stos cmp (bad) mov jg iret jmpq (bad) fnstenv callq pop sbb add cmc clc cmp jmpq jmpq in out add xlat mov (bad) movslq cmpl jno (bad) std sti add (bad) sbb lock rcl leaveq add (bad) repnz push (bad) cmp mov pop (bad) enterq or add or sbb insb or jmp mov (bad) je jne push add imul out es (bad) shr mov cmp (bad) rex.WRB ficomp jns (bad) mov (bad) (bad) cld test sbb sub jg cmc (bad) xor sbb (bad) callq (bad) movslq rex.RXB push movsl (bad) rex.X repz lods sub sahf mov cmp add adc pop insl enterq jl je out (bad) mov or mov sbb mov ds mov (bad) (bad) jl repz xchg sub rex.WX mov fistpll (bad) imul sbb xlat pop push and cmp xchg fstl movslq out xchg rex.WRXB sub std movsl rex.RB mov callq push test rex (bad) (bad) (bad) cld sub (bad) (bad) (bad) decl in (bad) rex.WRB lock mov and sahf cmp mov push scas fcomps and test sbb fnsave std loope add add data16 cmp pushq jl retq jg cmpsl imull xchg rex.WX sbb outsb in out jns lret adc movabs jb rex.RX cwtl not (bad) (bad) jae es sbb (bad) es rex.RXB (bad) jb es cli rex.WRB add sub fsub (bad) rolb mov add xchg rex.WX (bad) cmc lock test mov scas rex loope (bad) pmuludq (bad) add (bad) (bad) stc repz outsl adc rex.WR add iret rcr fisub pop icebp movabs rex.WRXB and scas std jae (bad) sub (bad) cld sbb fld jbe (bad) (bad) (bad) cld xchg sbb sbb jae stos shrb ds sub test add add sub repnz adc gs cmpsb cmc (bad) add jmpq and mov rex.W lret clc push out pop cmp enterq mulb cld jge,pn repz xchg (bad) mov (bad) (bad) sub push push rex.RX gs gs outsl jb add sub (bad) (bad) js pop mov jmpq jrcxz jle rex.R xlat imul sbb xchg mov jb jmpq repz xchg rex.XB (bad) clc (bad) mov adc (bad) push sbb outsb adc push imul rex.WRX xor mov add scas (bad) out or mov stos rex.XB xor adc mov sahf pop pop mov xor in fcoms rex.WX insb cmp mov (bad) mov sbb scas rex.R rex.WRX retq (bad) (bad) (bad) cli vpunpcklwd movsb rorl mov mov sbb movabs sub mov (bad) (bad) decl (bad) iret ds lods fwait loopne rex.WX (bad) jne test sbbl leaveq movslq fwait mov (bad) cmp shrb and in rex.RX ror add in mov push mov ljmp (bad) rorl adcl sbb lea stc clc mov cmp mov rcr inc mov shld bswap mov bt stc xor cmc jmpq lods add rex.RXB add fsubl jnp data16 shll (bad) in (bad) stos mov sbb mov (bad) out adc insb repz rex.WRXB add mov (bad) stos movabs add out (bad) pop sbb jl loopne jp push and or (bad) dec xchg or test enterq add xchg mov loop cli sbb mov cmp jp sub jge cmc add stc callq xchg mov mov rex es jl xlat adc sbb mov (bad) add adc adc mov (bad) insl pushfq add fiaddl and xor stc in movsb cmp (bad) (bad) xchg xchg jge xor mov test add mov add add add cmpsb jnp (bad) and and push add imul fwait add lods movabs jg nop std add es movslq add mov xchg jbe out sub add add movslq push add or (bad) int3 jmpq pop outsb mov rex.RXB add cwtl add insb outsl cmc xor pop add insl stos lahf mov mov (bad) insl mov mov (bad) mov (bad) xor mov jnp cltd xchg retq cli imul data16 lock (bad) callq cmp orb mov mov rex.WR (bad) pushq rex.RX in pop cmc push sub sti callq add cmp roll mov mov mov movsb nop mov jg clc insb xor incb rex.WRX test adc pop (bad) popfq cmp rclb jb out outsl push add adc addr32 cmpsl mov cld cltd jp (bad) loope jge xor movsl insb icebp add test add xchg add mov (bad) gs xor test retq or pop sbb mov rex.WRXB rex.WX pop xchg stc ds pop out xchg jbe jns or xchg (bad) xor cmpl (bad) (bad) scas out cmpsb or (bad) mov xor movsl test movabs sbb (bad) idiv imul lahf sbb stos pushfq add mov sbb lock test sub add rex.R jae add jns or xchg mov cmp add icebp mov sbb movabs gs add xchg add movabs sub and (bad) jrcxz enterq pushq orl mov push add (bad) mov mov test add push cmp sub jg out rex test mov fucom (bad) (bad) mov rcll es add mov push add retq jb xor or (bad) lret (bad) (bad) mov (bad) faddl jg jg iret pushq rex.X add xchg pop nop (bad) sti pushq add xchg cld add adc or add or out jo lods (bad) icebp mov clc add iret (bad) mov (bad) cmp adc addr32 jo add scas stc (bad) (bad) (bad) lret (bad) jl cmp insb fdivr (bad) movsb sbb scas xor ja (bad) and scas mov jp add sub mov pop mov (bad) insb xor pop repnz (bad) adc rex.RB mov sub mov pop and retq add test lock adc (bad) mov out (bad) (bad) and cwtl push jle jno rcll sbb (bad) int jle sub mov jb mov or jg (bad) (bad) or je add xor mov loop add jae xlat fdivrp sub cmpsl jle cmp std push clc rorl (bad) adc push (bad) push ss js (bad) shr xchg movsb and jo sbb add fisubrl retq pushq repz rex.R jl movabs lret movabs ja add popfq (bad) (bad) lret in mov sub add insl (bad) lods add mov xchg jle push jg rorb icebp (bad) in test add and iret mov rex.R icebp sbb xor lcall push cmc (bad) out and push cmp rex.RXB fildll js cltd rex.X jrcxz (bad) stc add rex.RXB jbe xchg add (bad) (bad) pop or int3 or adc (bad) std movabs sahf and cs hlt xor jmp jns sbb movabs repz mov xchg out cli sti ja jbe add (bad) lods sbb cwtl mov clc add shll test mov rex.X stos push (bad) stos mov sub add push in (bad) gs jle (bad) movsl (bad) pop sbb xchg fstps jrcxz sahf adc rex.WRB rex.RB and int3 rex.WRXB sub outsb jle pop out data16 movsb mov (bad) add rex.WX add (bad) jne mov add mov out mov scas xchg pushfq jle pushq mov sbb rex.WRX fisubl add out movsl movsb in mov jg jg jnp rex.X rex.RX jmpq jl jle sub rex.XB data16 add xor mov enterq jle jl (bad) mov jg mov int3 add adc (bad) rex.X ss cmp jg and rex and (bad) stc stos sub sub cmp rex.WXB scas (bad) jp jle out mov sahf (bad) mov or out rex.R stc jg (bad) repnz sti add jbe (bad) jl incb int out pminsw pop pushq in rex.WRXB mov and (bad) push in rex.WR or decb callq (bad) or int lret sti push incb (bad) xchg outsb add add cltd cmp jp test jno rex.RX mov nop insb (bad) (bad) mov rex (bad) stos pop sub add (bad) jne rex.X std enterq push incb pushq movslq xchg push jb cmp mov and movabs rex.WRX rex.WX or jmp pushq lret adc add sbb sub xchg (bad) mov jae pop (bad) jne add jle (bad) lock (bad) (bad) add (bad) out enterq popfq (bad) add adc mov sub imul mov addr32 js jne mov jns (bad) rex.WRB mov mov (bad) rex.WB or jnp cmp add rex.WRB add out pop add push movb loope test jne addl jae loope add jl mov movsl pop in (bad) add adc jbe xor or (bad) jno add push movabs popfq sbbb jo,pn (bad) xor xchg jb stc add mov iret push rex.RX xchg add push add out jrcxz cmp push rex.R callq and (bad) push movabs or insl (bad) mov (bad) imul out insb add xor repnz test scas (bad) or (bad) jns (bad) cmc mov fisttp leaveq (bad) std (bad) addl rex.WRX out rex.WXB bnd imul shrb rex iret mov adc callq retq ljmp in clc sub out pop jmpq mov insb (bad) rex.WB (bad) mov js sub lods fimull mov sbb mov and movabs pop mov (bad) add mov (bad) rorb jle mov (bad) (bad) pop sub rex.X mov rex.R (bad) xor add rex not js add fadds iret sbbl xor mov loope (bad) (bad) jle sbb mov out jge (bad) cwtl rex.WR jmp add rex.XB mov xlat add mov mov jp and or (bad) mov jle (bad) loopne jg add scas cmp rex.RXB cmpsl mov fwait ja rex icebp fistpll mov pop (bad) out sahf mov sbb and mov pop pop jl imul jo scas fs sbb (bad) sti ficomp xor jle jno jle rex.X (bad) xchg mov xchg jbe rex.W imul (bad) mov cmpsl mov xchg lods (bad) movabs cmpsl (bad) (bad) movabs mov xor sahf xor loope push notb lahf mov (bad) (bad) (bad) mov jo xor push xchg pushq xor je jp lahf (bad) movabs sti jbe (bad) and cs adc jb jp and loopne add scas es fcompl cmc movabs outsl rex.WRB jbe cld movsl push pushq int out sub cmp jl sub jl sub stc and fdivl jo std (bad) jle negl fidivr mov jb js and loope xchg jnp push mov pop lahf cmp adc outsb jl xchg rex.WRX repz movabs out rex.WR je mov push mov xchg sub out (bad) rex ds out rex.WRXB jne ds pop lea jg,pn (bad) rex.WRX jb addr32 rex.R add pop xlat cmp ss cmpsl xor (bad) cmp fsubrs mov rex (bad) leaveq (bad) cmc outsl rex.RX rex.WRX rex.WRX (bad) or mov out jp cmp in stc outsb (bad) sti jl mov and pop fucomip and nop mov mov fwait xor movabs jne fsts mov mov sub push fbld movabs in mov mov rclb jmp movabs jo fild (bad) jge out out jnp data16 mov cwtl (bad) repz loop xlat push scas (bad) and fs and scas gs imul fs in sti cmc push fsts out jo sbb jns int stos jge cltd movsl mov adc ss rex.WRX stc movabs stos cmp pushq add in jg out rcl in cmc jo callq fisttpl jle jrcxz xlat std fcmovne insb fwait mov fwait xchg loope std sub cmc pushq cli sub cmp rex jno push je (bad) (bad) (bad) add cmpsl movabs movabs repz xchg je jo insb pushq pushq pop pop pop add push push push rex.WRX rex.WR rex.WX rex.R rex.X rex ds add ss xor sub add es and sbb add (bad) adc adc or add (bad) add (bad) std sti stc add cmc repz out in jmp add in loope fstp flds xlat (bad) rcl iret int leaveq add (bad) mov mov mov scas lods stos test movabs add test and jo outsl or insl stc push (bad) (bad) sub xchg movsl in rex.WRXB rex (bad) fwait pop (bad) add adc pushw (bad) fsubp xchg xchg mov rex.R rex.WRB push in jmp icebp rex.R sbb jnp (bad) xor (bad) lahf fistpl sbb rex.WB es ss xchg sbb lods pop xor rex.RB sub std push stos mov xlat mov mov xlat movsl fldcw scas jns mov pop mov loop (bad) push (bad) cmc xchg in jp mov rex.RX rex.WR out rex push pushq subl movabs xor ds xchg rex.W loop js sbb (bad) (bad) js fbstp mov test (bad) rex.XB shrl iret mov (bad) fist xlat pushq (bad) mov mov mov adc mov rex.RB cs xchg mov es lret fistpll mov (bad) in sti jmpq je or (bad) rex.WXB fild sahf (bad) sbb sbb movabs mov negb faddp rex.WB hlt xchg movabs and insl (bad) add cmp pop (bad) push fwait rex.WR stos rex.WXB rex.WRX and rex adc out lret pop push xor mov (bad) xchg insb adcl mov gs fs sub (bad) icebp sub fidiv ficomp pop adc push in (bad) xchg or lret xor insl rex.WRB mov sbb decb (bad) movsb rex.RX fcomi pop decb sahf enterq jg mov notb fldt out mov push fldt pushq fcmovnu xor (bad) movsl fnstenv sbb fwait xor cs in ficompl stos lods cmp and cmp cmc lcall xor mov mov xor movsl (bad) out (bad) and (bad) out push movsl sub int3 js lret mov rex.W lret cmp sti sbb mov (bad) stos movabs shrl sbb movslq sbb cmp (bad) rex.WRB mov jg (bad) mov fwait (bad) or or mov (bad) icebp (bad) cmp pop pop negb nop mov push movslq mov pop mov fwait rex rex.WX rex.W repz cmp mov fwait rex.X xchg addr32 rex mov sahf pushfq (bad) (bad) icebp lea (bad) pop mov pop mov fwait outsl (bad) orb iret in fcmovbe sti sbb jnp cmp sbb jns mov (bad) fistl (bad) push sub stos cmp (bad) and rex.RXB push lahf retq sub sub movsl mov jne mov sbb data16 scas mov cmc mov push (bad) (bad) or and scas sbb xlat repz (bad) jl (bad) adc mov std (bad) jrcxz jp rex rex.R (bad) pushq lea js,pt push add gs pop movslq out pop mov cmp (bad) jl icebp adc (bad) pop pushq (bad) jae jge lods rex.WB fdivrs pop jbe xchg mov lods and fucomip outsl sbb xor mov pop out jb mov fsubrs movabs mov jl outsl jb lahf mov mov rex adc (bad) cmpsb ja scas cmp jge jl jle jno pop jnp sbb or rex jl out scas xchg cmc jle jl jle rex.WB xor out jl cmpl xor or jle or fnstcw cmp loopne adc jns add jno insl imul movslq pop pop pop push add push rex.WRXB rex.WRB rex.WXB rex.WB rex.RXB rex.B cmp xor sub (bad) add sbb (bad) add or (bad) add cli clc testb repnz in (bad) callq loopne (bad) fcom add rcl (bad) int3 lret add retq mov mov mov lods stos test add cwtl xchg add mov sbb fdivrs popfq lods jmp sub jg fcoms pushfq xchg stos rex incb movabs loope stos movabs xor mov (bad) mov adc and xor test rex add out std mov out lea loope adc (bad) std lahf rex.WX jp mov mov lods rex.XB fwait mov insl es imul mov xor and (bad) in movabs xlat cld (bad) mov (bad) pop and fidivr lea movsl cmp xor adc outsb cmp out (bad) lret mov cmp (bad) scas and (bad) (bad) and or xor xchg (bad) ds stc leaveq (bad) (bad) cltd out xchg cmp jno (bad) std jne rex.WR (bad) flds lret or xchg xchg add mov rex.WR xor in push cs out rex xchg mov adc in or imul xchg and fldcw frstor fldenv rex.RXB lods mov rex.RB mov cltd rex.W fisubrl jmp cmp sbb (bad) sub lret pop incl mov shlb ds sbb adc jns flds out movsb sbb movabs and (bad) (bad) retq (bad) sbb outsb xor or add rex.WRB rex.WRX es imull mov sbb cmpl je pop fidivl mul pop outsb and add sub mov (bad) pushq sub outsl pop mov (bad) jnp not movabs pop add xor add xchg (bad) sarl loop mov (bad) insl fwait pop sbb lahf rex.W sbb jne lods pop (bad) jne fwait pushq push rex xor rex lret stc (bad) rex.WRB (bad) ds clc xor stos xor fisubr rex.WRB out out packsswb (bad) cmp outsl out (bad) mov fwait scas (bad) iret rex.W movslq (bad) std pop jmpq adc movl xor cmp movslq rex.W jo js pop testb mov (bad) fsts cmpsb out scas mov fwait mov movslq (bad) cmp pop out out mov fwait decb (bad) rex.W (bad) cmp pop (bad) out (bad) mov fwait (bad) (bad) rex.RXB rex.W rex.WRXB push cmp (bad) out lahf mov fwait out (bad) adc movslq (bad) pop (bad) sarb (bad) popfq sahf jo out movslq (bad) cmp pop out outsl mov fisttp (bad) rex.W xor pop (bad) out rex.WRXB fwait decl rex mov je ficomp out lahf mov xchg imul (bad) push push jo cmp mov cli add xchg test (bad) and (bad) or movsl iret loop (bad) loope (bad) xor shlb cltd lcall and movabs rex rex (bad) test iret sbb cmp add add lcall test xchg cmpsl mov cmpsb fbstp scas movabs cmpsl (bad) cbtw xchg rex rcrb mul push mov rex.WRX rex.WRX movsl mov rex.WB retq rex.RXB xchg lods xchg int3 fnstenv push mov fidivrl out movsl lahf pushq sbb mov cmp xor push movslq lea (bad) (bad) scas rex push mov xchg (bad) (bad) (bad) fwait mov (bad) (bad) movsl fistpll (bad) cmp mov movsl adc leaveq cwtl (bad) (bad) sub loopne mov sti cli out sbb sub data16 (bad) pop (bad) in and (bad) scas stos rex.RXB rex.RB rex sbb js pop mov push repnz xchg mov (bad) pop cmpsl mov sbb jrcxz scas test (bad) int xor ds callq rorb sbb rex.WX lea cltd rcrb test mov (bad) push rex.R jmpq fwait xor jl,pt fwait movsl push rex.X addr32 rex.R xchg popq rex.WRXB jns scas xchg adc push mov xchg or xchg (bad) ds or fbld rex.X push (bad) popfq divl adc movslq pop outsl pop (bad) jl mov pushfq test lea addr32 rex.WRB fistpl push or and (bad) flds (bad) mov mov cmc fmull cs rex ja xchg rex.WXB scas fidivrl xchg jb sub cmp (bad) lods xor (bad) cmp push in fild nop mov push iret lahf push (bad) movabs pop data16 imul scas mov fcomi jmpq add (bad) pop pop pop addr32 cmc sub (bad) (bad) icebp (bad) out mov std pop out shr sti mov fwait rex rex.WRX popfq out jae and in pop xor stc out (bad) leaveq and pop rex sub rex xlat out stmxcsr (bad) pop and jo pop cwtl movsb fwait (bad) out lahf pushq (bad) sub (bad) cmp mov jmp xor lret out (bad) lret and sahf pop (bad) (bad) addr32 sarl ficom mov icebp (bad) push repz imul fdivp (bad) xchg (bad) mov cmc stc std sub (bad) cmp fdivrp imul scas (bad) sti push pop loope pop jo rclb ja pop mov sarl push sbb adc xlat (bad) fcompp rex.WRXB scas retq outsl xchg (bad) cmp (bad) push addr32 sarl out (bad) mov imull jne repz movabs (bad) out jae (bad) out in (bad) es fimul (bad) stc in outsl mov sbb push stc lret ds push stc (bad) adc stc roll ja (bad) rex.XB lods sti or mov (bad) (bad) scas xor icebp sti fidiv sub (bad) jo cmc mov cmpsl and and push movabs (bad) rex.WRXB rex.RX add mov outsl jg (bad) adc scas jo fucomi mov xchg jo jmpq lret std repz pushq (bad) mov cmpsl rex rex pop jo xlat loope,pn mov fs fsubrl jg (bad) pushq rex.R adc fs gs test jno cmp std cmp loope cs icebp mov xorps lods or movsb popfq insl sbb fwait add and jmp rex.WRX rcll cmp (bad) outsb push std or xchg xchg fisttp lahf xchg sub pop loope,pt sbb adc sub cmp xor xor fs out pop xor xor jrcxz (bad) mov sahf addr32 (bad) (bad) jp (bad) cmp rex.RXB (bad) mov repz fldcw pop out jne rex.RXB jo repz scas (bad) fdiv mov mov cwtl (bad) cmp rex.WRB rex.RX ljmp mov movsl imul sbb add lea repz outsl (bad) rex (bad) add cmp orb cmp outsl lahf idivb (bad) mov je xlat (bad) lea movabs adc pushq imull or xchg sbb add (bad) out outsb pushq insb out push insl xor (bad) jmp js fs pop pop rex.WR (bad) or xor data16 (bad) pop cmc adc pop cmp flds cmp neg add pop out xor div movsl insl mov in xlat cmp cmpsl ljmp pop scas cmp push (bad) jrcxz scas adc cmp divl sarl mov scas fldenv pop stc js rex.W push sti rex push xor adc or js pop jmpq es adc or in sub xchg jl jle xchg xchg js jbe shrb (bad) test adc sub and jb mov xchg add pop add ds std je fldl mov sbb pop add cld push fstpt sahf cmp mov mov add callq add or xchg test repnz add cmc mov sbb cmc cmp cmc and push sub pushfq add je std fnsave mov jo sti (bad) sbb jle cmp fistpl and sbb sbb sbb lret (bad) (bad) insl std lahf fbstp repz jmpq (bad) rorl rol (bad) leaveq cltd or negl in xchg xchg xchg push in mov lret movsl lock cmpsb rex.WR rex.RB (bad) add jne fcomip icebp cmp stc popfq sbb xchg lahf xchg pop xchg movabs or fwait test ss fcoms fist movabs rex.WR retq jmp fstl xchg lods cmpsl out and mov xchg shr cld jmp in callq lods cltd callq mov add rex.B push mov mov mov xor sub imul movsl push mov scas mov (bad) xlat jrcxz pushfq sbb pushfw mov fcmovnbe test (bad) mov jp xchg movabs sbb mov xor lretw rex.WXB movsb (bad) pop (bad) or xchg bswap std mov sbb icebp cmpsl shll sbb add push lods pop iret in in scas pushq repz sub cmc iret sbb mov lods mov mull (bad) jo sub xchg in (bad) stc mov push (bad) jb jae mov rex.W (bad) push scas pop xor and rex.WX mov movsl (bad) xchg sub mov (bad) cltd sbb xchg sub or (bad) adc add jo out (bad) data16 cmp xor lea jns add imul mov pop rex.W mov cmp scas pop cmpsl sti mov stc (bad) sar cmp mov in ds lcall fwait and mov jg (bad) xlat sub rex scas (bad) jge pushfq popfq cmp insl (bad) xor jmp jnp xchg (bad) rex.WXB rex.RX rex.XB movabs mov fcmovnbe mov fisubl rex.RB cwtl adc sub movsl repnz iret add std xor rex.WXB sub xchg jbe out (bad) mov sub retq fptan movabs fmuls loop out rcrb imul out popfq or xlat mov pushq jb cmp out outsl (bad) jl sbb (bad) (bad) push lahf pop pop and mov in add cmp int3 sbb add xchg imul shr mov pushq push es rex.WX mov or scas in pop lea hlt and test xchg out pushfq in addr32 cmp sub incq sbb js js (bad) stc loope and cmp push rex.XB rex.WXB cli ljmp rex.WRX in (bad) iret adcl rex rcr mulps pop in nop mov movslq push jo sub fmuls pop (bad) push cmpsb add mov sub (bad) fisttp (bad) out sbb mov (bad) cs sub and outsl push sbb (bad) retq lret rex.WXB mov cltd mov sbb xor mov push (bad) pop stc mov in (bad) (bad) add mov mov fwait test xor xchg cmpsb sbb adc in stc (bad) (bad) imul movabs pop movabs and out adc (bad) std js cmp xor push xor xchg mov mov scas gs xlat rex.WRX push adc cmp cmpsb (bad) add cmpsb retq xor xchg and cmp in cmp movslq shll jo push lret xchg test fimul shr xchg int3 jl xchg xor (bad) shrl sub adc adc repz pop rex.WX mov addl mov (bad) jmp in jrcxz lock add repz movabs out sbb callq repz ds fwait push adc and outsl repz (bad) movabs pop mov (bad) (bad) pushq push shrb jne in movsl insl pop in fldenv movslq xchg imul test loop idivb test push (bad) rex.B repz xchg (bad) (bad) clc mov (bad) push imul (bad) int sub fnsave mov cmp scas rex.XB and sub int3 rex.RX cmc add push pop stos cmp out cld or leaveq or lea xor adc add (bad) xchg lods cmc repnz cwtl test pop movabs xorb push andb test rex.X push xchg callq xchg in (bad) cmp pop in mov pushfq rolb or pop (bad) xor cmpsl (bad) pop in cwtl mov ds (bad) (bad) lret idivb xor sub lock adc cmpsb imul imulb sarb (bad) or xchg pop fcoms (bad) movabs pop adc (bad) mov cmc fistpl rex.WRX mov jl mul out jg cs sti test fucomp xlat fisttp mov (bad) lock stc in and push ficompl and mov movabs or xor push stc adc adc jnp fistl (bad) loope out fnstcw std cmp int3 repz xchg scas add mov cmc rex.XB out mov cltd mov cmpsb movsl fcompl xor lret xor lods leaveq fsubl movsl callq rorl leaveq testl xor in mov in cltd cmpsb sbb in ja stos fst rex.R (bad) mov add popq sbb pushq add mov movabs test (bad) rex.WRXB scas adc (bad) add test xlat adc jmpq in out (bad) mov jmpq rex.X (bad) jrcxz fdivl adc imul (bad) out or movslq (bad) rex.WXB push pop pop mov jo mov (bad) fmul jmp mov mov mov stc rex.WRX push pop rex.WB repz adc repz push in idiv mov mov jne negl int in fwait repz fimull xor outsl imul pop in jmp mov js (bad) jrcxz outsl xchg pop stc xor cltd push push adc out in icebp jrcxz shr mov pop fnstcw (bad) (bad) callq int3 sbb mov in xchg or and mov mov jmp callq (bad) rcrb scas sbb adc sbb (bad) cmp add cmp pop adc mov popfq sahf sbb (bad) movslq adc pop (bad) out pop mov fwait (bad) adc cmp lahf out out mov fwait jo sahf and (bad) cmp pop rex.WRXB xor movslq (bad) test fistpll adc (bad) (bad) es lahf movslq (bad) cmp mov neg fwait (bad) (bad) lahf rex.W rex mov outsl fidiv decl movslq mov rex.WRXB fwait decl (bad) rex.W repz pop (bad) out outsl mov fwait out (bad) adc repz (bad) add cmp add cmp (bad) xor setnp (bad) outsl rex.W movslq fistpll push outsl (bad) xor (bad) xchg (bad) mov fwait adc (bad) rex.W repz pop (bad) sarb mov (bad) (bad) rex.W movslq (bad) cmp scas out out mov popfq mov icebp scas cmp pop push (bad) cmp cmp pop fisttp push rex.W repz pop (bad) out scas mov fwait jo and cltd xlat insb jo add sarl (bad) (bad) outsl pop xor (bad) cmpsl mov mov push mov imulb jl rex.RXB insb adc push testl cmpl ds cmp imull cmp rex.WX pop xchg je jb ja push and out sub adc add (bad) sbb sub cmp cmp roll add (bad) or or sbb es xor rex.X and (bad) cmpl cwtl cmpsb pop add (bad) popfq jle iret rex.B jmpq cmp pop decb mov (bad) add pushq adc push adc std movsl xlat mov es movsl push xlat adc or jbe,pt or clc pop (bad) callq pushq (bad) jnp data16 data16 addr32 xlat (bad) (bad) add outsb imull enterq (bad) adc push (bad) add sbb add movabs pop cmpsl movabs jb (bad) lods cmp mov mov retq icebp fcompl incl jbe repz (bad) xor imul sub (bad) sub xchg lock (bad) and (bad) stc jle pushq lods cltd scas popfq stc sub or lret add scas jrcxz push sub xor jrcxz push (bad) and cmp mov fsubrs (bad) mov or (bad) fistl gs or (bad) fwait adc pushfq loope cmp jnp mov stc leaveq test out decl rex rex.XB repnz (bad) (bad) mov test lea xor jg fwait mov rex.XB fwait lret add rex cmp mov outsb lods movabs cli cmp scas scas cmpsl (bad) jg rex.WRB add imul cs or scas (bad) fsubr or (bad) sub lods rex.R gs lahf jne mov xchg lods lea es pop (bad) adc sub or and xchg cltd push mov mov rex.WRXB rex.WRB xchg orl in pop lret jnp push rex.RB or pop pop ja mov imul in outsb retq lock cs jg (bad) rex.RB rclb je mov jle fistp movsl lods repnz (bad) mov out (bad) (bad) (bad) (bad) leaveq xchg pop lods mov jmp sti mul rex.R loope rex.RB add (bad) (bad) jg rex.RB pop xchg jbe jp pop and xor fwait adc push sbb pop fstl sub cmp imul pop adc (bad) ficom lret sub hlt std (bad) rex.WX jl popfq adc movslq mov and jrcxz std ja in lahf repz imull push (bad) loopne and movsl cmp pop (bad) mov ja rex es cmp push sahf ds sub mov pop jo jo outsb cmpsl mov adc push rcll movsb std (bad) add push iret (bad) rex.W cmpsb xlat lahf pushq sbb add fwait (bad) test sbb (bad) xor loope fld push ficomp out in sbb (bad) scas sbb cwtl incl jrcxz (bad) and rex.WRXB rex.WXB stos shr xor pop loop (bad) fistp and fdiv (bad) in fscale insb icebp xchg lods lods mov and idivl mov rex.R xor jbe rolb cmp pop (bad) int3 fnstenv lods stos and fstpt lret ja repz movabs fistpll iret in jmp (bad) jo ss fist (bad) (bad) sub fs jo in sarl sub mov sbb enterq sub (bad) jo in (bad) pushq in div fnstcw jge ss movabs divl outsb jge pop xchg (bad) imul cmp adc and xor xchg adc xor jmpq out mov mov nop rex.WR xchg fstl or nop test xlat (bad) clc jmpq push cli retq push fistl (bad) push and lret cmc test xchg cmp mov ss mov xchg rex.B rex.B rex.WR testb cltd fwait xor jo xchg scas jmp retq jl movabs cmp xchg fwait cmp jbe sub mov cmp imul movsl (bad) cmp add minps (bad) rex.RX cmp scas fcmovb in jl jp fcmovnbe push je mov mov xlat out mov xchg sbb jmpq insl cmp fldl sbb add es je (bad) rex.WRX jne pop (bad) jle rex (bad) xchg stc int rcr movsb xor gs (bad) (bad) cwtl jmp lods pop mov shr sbb jo xchg adc cli pop leaveq (bad) mov add adc or or movsb (bad) icebp mov cs movslq add fnstcw rex.X (bad) pushq shrl rex.WB out or xor (bad) movsl (bad) (bad) add cld mov (bad) rex.RB ds rex.WRX outsb xchg pop jne cmpsb mov pushq (bad) test xor mov (bad) (bad) (bad) fildl jmpq rcrl push cmc (bad) lea scas (bad) out mov push (bad) cltd loope stos insl pop ror fistl (bad) sbb xchg add jne rcl sahf mov and sbb (bad) fs xchg rex.RXB (bad) mov cs push out imull xchg in (bad) fucomip iret fild and pushfq or and out mov cmp sbb mov adc (bad) xchg (bad) fsubrs int jle pop push rex.WRX sbb (bad) adc jbe push sarl loopne sub mov pop cltd pop lock (bad) out movabs sbb rclb push in adc push push mov and sahf cmp test (bad) cmpb (bad) cmp movsb lahf xchg and (bad) std cmpsl mov movabs pushq add cltd enterq sub repz sbb int mov jmpq add (bad) jnp lea cmc std sbb scas xchg out push mov pop in mov and fdivrl ljmp repz jne loope jnp stos xchg out jns hlt retq cmp xchg idivb sub cmpl lods lret xchg mov or fistl pop jg cs scas (bad) leaveq mov loopne std rex or rex.R (bad) insl sub (bad) sarb leaveq cmp rex.WB leaveq mov out (bad) movabs in xchg sbb lods out sbb xchg mov add xchg shlb push jg pop pop pop cs loope pushfq adc or fnstenv push out shrl stos rex.R movsl repz pop hlt mov (bad) mov insl out jl cltd pushfq sahf sti incl (bad) sbb mov rex.RB jo lahf test incb fcompl jo movslq (bad) rex.XB rex.B (bad) rex.RX (bad) fidivr (bad) jp mov jg mov fldcw push mov (bad) mov xor sahf (bad) xor lahf mov pop jo,pt fwait push pushq (bad) fstps jo and xchg (bad) mov int pushq es nop popfq mov iret jrcxz hlt (bad) xchg sub jo or movzbl fwait adc adc fistp pop iret fcomip mov push mov cmp push (bad) xor rcr sbb sbb retq in (bad) fcompl movabs cmc sti rcrl not rex.WRB jmp rex.X imull cmc (bad) (bad) sbb stc pop gs rex.XB xor ficompl pop rex.X icebp jbe pop in outsb cmp xor pop cmp mov std or xor pand icebp sub rex.W addr32 (bad) ja adc (bad) jne cmp pop jnp xchg pop jl rex.RXB or test lea pop rex.W maxss xlat rex.B fs jmp xor (bad) pushq push xchg (bad) cmc (bad) pop or push cmc pop cwtl ja lods addr32 jnp pop push xor rex rex.WR rex.W sbb push or fbld rex.WRX data16 rex.WRX xor ds cmp sbb stos lahf scas mov pop getsec sbb ja cmpsb (bad) popfq lods or rclb ja jnp (bad) pop push jp out rex.WB std jae ficom rex.WXB push imull pop sbb cmp (bad) cmp adc fistp fidivr pop adc (bad) movsb mov movabs jo psubusw cmp xchg rex.X add fdivs (bad) mov test out cmp imul (bad) add jae sbb (bad) outsl (bad) scas pushq (bad) (bad) pop insb outsl fcmovnb rex.WXB sbb xchg xchg mov push jne add (bad) sti imull fwait sbb icebp rolb out push (bad) xor jo push (bad) rex.RX push fs rex.RB xacquire xor fmul int3 ds cmp movabs (bad) cmp jle sub in out cmp cltd lahf (bad) (bad) (bad) jae pushfq rex.RX divl xchg in pop mov cld and pop sbb imul movabs sbbl mov outsb imul (bad) jo loopne and rex.W (bad) sbb rex.RX xchg loope out jmp cmp adc or stc xor out rex.W pop scas push rex.RXB ds sub xor movslq outsl cmp mov loop jo and jge pop rex.R es sub xor (bad) adc stos adc add pop scas (bad) in lods (bad) or out push push xchg lods or movl stc xor cmpsl mov or sbb jmp scas (bad) fsincos (bad) inc cmp movabs (bad) (bad) push xchg rex.WB fldt rex.WB jne cmp or fisubr rex.W out xchg jnp sbb popfq scas (bad) out (bad) jmp scas outsl fwait or cmc scas pop ficoml jae jno adc (bad) pop (bad) adc pop ja (bad) jo xor sysexit pop and jle cmp xor lods pop (bad) out jle,pt cmc mov fsubp pop (bad) sub jle (bad) retq cmp std jo sub cmpsl pop jle,pt (bad) retq cmp sbb lret mull imul out cmp pop cmp mov out (bad) cmc pop std jo imul mov hlt cmp and ds pop in adc out add (bad) and cwtl imul pop lods push std cmc (bad) fisubl pop xchg sarl (bad) popfq idivl mov in (bad) and add repnz ds jle rex.WRB jbe pop cmc cwtl xchg popfq imul pop xchg sarl callq rex.RB fsubrl xor xor or cmc mov push repnz outsb xchg fildl jmpq cmp jge mov add rex.WXB jle,pt fldenv insb ss rex.WRB jo insb es movabs push out sbb and vphaddbw push out add (bad) and imul addr32 ss jmp loopne mov sarl out xor mov xor or sbb adc and imul in jle lods sbb xchg pop cmp or (bad) rcll out add pushfq cmp or cwtl xchg pushfq imul pop (bad) rcll out add jp rex.WRB cmpsl out (bad) gs nop mov js sub pop mov rex or cwtl insb xchg (bad) lahf (bad) rex.WB mov adc in addb out or (bad) movsb jbe sub (bad) lret scas jg out fsubrs fnstsw imul adc (bad) rex cmc (bad) and adcb cmc (bad) and movsl mov cmc (bad) mov jmpq rex.WB (bad) out js divl lret outsb and gs add outsb (bad) pop outsb adc (bad) shrb decl (bad) out (bad) js divl xor out add xchg and mov hlt (bad) and imul and cld (bad) jl push in cmpsl fcom rex mov (bad) pop outsb adc rex cli mov xor jge data16 jge (bad) and imul mov fisubl rex.WX rex.WRX lock sbb rex.WRX sub movabs xchg sarl out add (bad) cmpsl jns movabs icebp js std insb mov (bad) add or jge (bad) and imul ds mov int adc pop repz lods push outsl add jbe xchg add pop xor cmp sbbb xchg mov andb push outsl add stc (bad) cltd fwait xor jne (bad) cmp data16 pop xchg mov loope add jl movabs ss mov fsubl fxch xlat cmc in xchg ds (bad) out fisubr movb mov std insl sub mov xchg xor mov mov faddl div movabs adc hlt mov push sub pop or rex.WRXB jmpq or rex.R loopne cmc xchg xchg cs movabs outsb and mov stc fild pop (bad) in push int3 and rex.R ficom int jp icebp cmc or (bad) testb leaveq lods lahf (bad) in fild push insb std rex.WR mov shrl test adc sbb test fimul or add push cmpsl outsb mov andl pushfq xor retq jl je sbb (bad) sbb or (bad) cmp retq or mov js and (bad) sti addr32 cmp pop rex.R sub (bad) adc sti (bad) scas sub retq adc push sbb xchg test (bad) mov pop mov xchg movabs lahf in cltd gs adc jo mov (bad) mov mov (bad) scas add xchg (bad) stos nop leaveq jnp (bad) notl es jne movsw (bad) sbb rex movabs pop lods mov xlat fcom (bad) cmp loope mov test pop subl pop outsb mov xchg (bad) divl subb fldt jge fnstenv pop repnz (bad) sub rex.WR rex.WB shll rex.WRB lock enterq or pop or (bad) mov notl or push xor and ljmp insb (bad) jae movslq adc sti in jno mov xchg subl rex (bad) fisubrl in xchg cmc (bad) (bad) int lret jo xor out sub fildl fistl xchg mov outsb or (bad) mov mov cmp mov jae (bad) mov int sub in outsb fstps iret xchg xlat jns mov outsl (bad) push fcmovne std (bad) ds push in add xchg (bad) mov notb sbb sti orl pop test mov mov fiadd sub out pop xor xlat mov stos rex.R mov xor out sti data16 or cmp lret fadds in insl rex (bad) test sub out (bad) sub out jle xchg rorl (bad) sub sbb cs (bad) rex.WRX fwait sbb xor mov popfq scas (bad) in xlat jg cltd adc rcr add rex.WRX sub in stc xor fisttp rex.WXB cmpl push stc scas and rcrb (bad) sub iret add iret movabs in fildll loopne or (bad) rcrl pushq pop movabs lods repz mov push sahf movslq jne pop or pop movabs data16 xor rex.WRXB mull xor and insb jg (bad) cmc mov cmp (bad) rex.WRX rex.X rex.WX in rex.WRXB mov test cltd gs pushq and pop scas xchg mov (bad) jo rex.R hlt mov mov (bad) push pushq ficom jmpq xor loop xor adc jrcxz in or xor (bad) or rex.WRXB std xor out lret movabs insl (bad) pushq rex.WXB jp add and fistpl (bad) or movabs and test xorb jl movabs pushfq mov movabs sbb mov sbb movsl and movabs cltd divl fisubrl cmp sbb (bad) lahf rolb fisttp mov lret pushq cmp xchg mov scas lods mov push (bad) rex pop (bad) add jo lahf push adc icebp fisttpl (bad) jmpq leaveq fildll xchg pop stc (bad) (bad) mov (bad) std loope and mov cmpsl cmc fmuls mov or jo icebp (bad) push mov jbe fistp out lea pop movabs sbb fidiv (bad) mov mov lret data16 cmp subl fwait cmp in sbb pop add scas add jrcxz cmp icebp adc fsub mov jb xchg mov cmp xchg cmp stos and scas cmp sbb xor sbb in rex.WR fwait cmp pop add adc decl fucomp in xchg fs popfq (bad) enterq addr32 or pop in stos lea push rex.WX fldenv sti repz insb or movsb in fimul sti sbb rex.R add lea mov ja lret test xchg pop adc in sbb adc mov adc and sti ds repz lea pop (bad) rolb add (bad) stc in (bad) or push (bad) (bad) shl ss (bad) xor jo lret sbb jmp ss andb xchg cmp or lahf xchg (bad) (bad) insl xchg out push repnz mov pushq add outsl lock jno,pt in (bad) xchg xchg loope fsts iret (bad) (bad) mov pushfq out push (bad) jbe ss (bad) in (bad) cmp movabs cld fdivrl pushq addr32 push sahf (bad) and insl scas sub popfq icebp fs ja mov sahf (bad) jp sub addr32 xlat rex.WRB (bad) jrcxz or xchg out lock and repz insl or dec cmpsl mov mov sub adc mov and icebp sbb cs adc rcrl std mov ja xor outsl xchg movabs xor movabs andb mov xchg in jbe jrcxz outsb in xchg js cmpb (bad) sbb mov (bad) rex.WX mov xor cs cmp xchg fldt push xchg xchg sbb fisttpl (bad) or cmp cs push (bad) lock cmc or outsb cwtl xchg mov push stc mov std rex.X ss icebp (bad) (bad) imul jbe mul in jrcxz and rclb stos (bad) mov pushq xchg cmp icebp and (bad) and decb adc addl rex rex.RXB xchg (bad) rorl xchg pop cmp add in js (bad) es int3 rex.WX xchg xor sbb cmp mov pop xchg callq (bad) in mov test clc outsb xor mov cmp movsl test xor mov or jne sub (bad) insl xchg clc lahf test add lret outsb (bad) cld ficomp fs callq mov cmp xor jb fcom (bad) jg rorb adc (bad) idivb add cs hlt mov mov xor rex.WR jmpq sub icebp test (bad) fimull pand mov rex.WX (bad) js xor loop imul xchg jno outsl test sbb fisttp cwtl xor sbb (bad) xchg and outsb shrb and xchg or add xor test jp (bad) roll in rex.WRB test pop movabs rex.WX cmp or and sub retq xchg xchg mov out ja xchg (bad) add add scas mov loope rex.X nop callq imul (bad) fisttpl add rex.XB cmp and mov shr adc rex.RX cmpsl pushfq cs jle cs (bad) insl mov mov adc repz andl rex.RB or ja cltd rex.B cmp pop push add (bad) test cmp cltd (bad) xchg loope push retq cmp lods mov xchg test lea cs jb pop xor push stc (bad) add xor shr (bad) (bad) (bad) or cmp jno sub jmpq (bad) add loopne adc lods fidivl rex.WR rex.WRXB repz lret iret or test pop (bad) lea and sbb (bad) (bad) adc mov retq rex.WRB es jo mov sub mov mov icebp sbb (bad) fcoms jmpq rclb in outsl data16 es rex.WB int3 xor pop cltd adc iret jmpq sub outsb vorps mov fcos and lods mov xchg stos mull mov xchg scas fistl jae rex.WRB in (bad) movabs pop std rex.RB adc fs movabs (bad) mov mov (bad) push xchg or (bad) (bad) scas sub data16 rex.WR adc pop (bad) mov movsb add sbb scas mov hlt jmpq mov enterq mov sub push sbb (bad) mov outsb (bad) push sbb add rex.WRXB imul mov mov stc xchg es sbb lea cwtl mov lods sbb lock movabs mov push in jl push (bad) sub lahf int3 mov out (bad) jrcxz jo and xor outsb cmp sub pushq (bad) mov imul push pop (bad) cmpl mov insb int3 sahf data16 pop cmp stc or in movsl sbb stc cmp (bad) rorb xchg fstl rorl imul (bad) std hlt pop movabs mov es stc rex.WR adc and or sti ss gs add mov loopne and int andl and push fldcw pop mov cmp retq pop cmpsl sbb add out sbb add add (bad) (bad) std out mov cs scas imull lahf pop out push pop cmp repz fincstp subl and jbe in movabs loop rex.B rex.RXB retq cmp in lret push scas mov movabs out xchg sub cs xlat and fbld add rorb jl lods mov cmp scas xor pop fisttpl repz jmpq xor or cs pop adc rcll sub push rex.X and (bad) add add sbb rex.X cmp retq adc push (bad) repz adc pop loope push es out pop fsub xlat cmp and iret repz sbb std push jmpq rex.R mov sbb mov lret (bad) rex.WRXB pop sbb pop mov mov mov pop (bad) cmp fmull sarl (bad) lods retq icebp scas xor rex.R push icebp je and (bad) push addr32 sub (bad) fldt in (bad) mov xor mov jmp (bad) rex.X fstps and xor inc rex.WX pop test jno mov mov pop xchg in and sti sbb lods cmp xlat rex.WXB add in (bad) jb push out push lods fcomps xor cmp cli mov sbb rex.B lea mov hlt in rcr add lret cwtl movabs insb (bad) es lods sub cmp xor lret (bad) rex.R jne cmp nop movslq (bad) adc jbe jb,pn out mov sub and push scas out xor cmc (bad) (bad) pushq ficomp iret xor xor imul (bad) mov xor or in adc cmp fsts (bad) in retq sbb pop adc xlat lret scas push stc xchg (bad) loope push (bad) and pop add (bad) cs adc pushfq sub jnp lods adc jns mov rex.R ss fbstp xchg iret lret (bad) (bad) fnstcw jle jle js jl jp js pop jbe cmp outsl (bad) pop pop mov je jbe js jl data16 jle add mov rex.WRB js jo outsb out insb mov fwait pushq jle insb (bad) loope lea jae outsb out out sub mull rex.RXB out (bad) pop or testl sti pop cli cmp idivl mov cmp fistpl cmp negl fwait insl (bad) pop insb cmp jmp (bad) cmp imull stos insl stos pop rex.WR lret pop lret (bad) or cmp repz repnz divl mov mov push cmp rcrl cmp notl xchg insl xchg pop cmp jrcxz loop and and cmp retq pop retq testl jle jge std pop cld cmp idivl pop cmp fstpl cmp negl outsb cmp in pop in cmp imull rex.WRX int int3 cmp (bad) or jbe jne cmc pop hlt cmp divl push cmp (bad) pop (bad) cmp notl data16 in in mull rex.RX (bad) cmp testl jle pop mov fidivrl fadd cmp sbb cmp (bad) cltd fidivrl cwtl (bad) pushq cmp cmp jmpq cmp sub cmp (bad) test cmp rex.WX rex.WB leaveq fidivrl enterq or cmp (bad) mov cmp fidivrl jno cmp icebp fidivrl lock xor cmp (bad) mov cmp fidivrl push (bad) rcr cmp (bad) adc cmp (bad) xchg fidivrl nop (bad) (bad) fidivrl (bad) (bad) loope cmp (bad) and cmp (bad) movabs cmp cmp rcr rol cmc add cmp (bad) sbb sbb rex mov pop and divl insl xor push out iret pop adc idivl insl cmp pop out xlat pop sbb mov jne outsb idiv clc insl cmp mov test lahf test (bad) repz pop outsb pushq pop insl insb pop rex.WR pop fs idivl insl outsb pop rex.WRX outsb pop rex.RX pop pop pushq rex.WX push stos fwait (bad) negb jbe je jp pop jo outsb mov xchg pop pushq fs adc mov jp out push mov fwait push add rex.WRX rex.WR icebp rex.WX rex.W cs repnz jmp frstor jle movslq pop cmp pop (bad) push add push out push mov out rex.WRX and rex.W (bad) (bad) idivb (bad) insl je (bad) pop insb (bad) addr32 outsb push lret mov push rex.XB outsb adc outsb mov sbb outsb (bad) ss jg xor push pushfq jbe (bad) pushq jns mov std rcrb cmpsl (bad) (bad) xor int3 add es sub test stos (bad) rex.W and (bad) outsl pop (bad) cmp negl insl rex.WX rex.X out sub cmp idiv fldcw pop cltd cmp cmp es retq xchg mov sbb sub (bad) add xchg rex.WRX ds (bad) sbbb push cld movabs ror outsb jo pushq push rorb cmp (bad) fstpt and (bad) mov pop pushq or push add je cmp js jp jl negl movabs jmp sbb movabs retq lcall jl ja js jo mov hlt jbe sbb rex.WRB rex.X cs rcrb (bad) push mov retq jno rex nop insb std fs jbe cs sbb (bad) pop jg push and jb sub jb rex.WRB rex.WRX lahf add xor mov add enterq (bad) lea jg ficoml out outsb add cmpxchg rex.RX (bad) adc (bad) add stos out popfq or add (bad) lret mov (bad) movsl fstl fdivrs rorl pop (bad) (bad) test mov imul (bad) jle int3 cmpsl je mov xchg data16 out add out std jle (bad) fwait popfq mov fdivl (bad) js test fidivrl adc (bad) (bad) cmpsl rex.WRXB sti shr or decl (bad) sbb mov rol int fsubrl jb and xor jle fnstsw shr add add cmp sbb rex.WRB or jb xor jl jo add sbb pushq pushq jno movabs mov mov pop std (bad) xchg je add jle rex (bad) jb movabs add (bad) clflush jb sbb outsb push push rex.WRXB fs andl cmpsl add mov fstpl jge (bad) and (bad) movsb push test xor jo add mulb repnz (bad) mov fildll imul rolb jb es (bad) addr32 jle mov mov es xchg add cmp xor push (bad) testb fdivl mov lods lods stc xchg movabs mov js mov jp roll insb sub xchg or (bad) std jl (bad) outsl pushq jae rex rcrl (bad) jne add mov mov add fs retq rex.WRXB int3 or cmp ficomp (bad) (bad) (bad) lock jb sbb jge (bad) and movl movd mov sbb (bad) stos and xor js push (bad) cltd pop add mov add stos movsl data16 lret rorl rex.RB outsb pop xor jg sbb testl jo scas add je (bad) mov jg (bad) adc rex.WRX test add lret mov add jmp mov rorb movslq mov (bad) mov jg pop fdivrl adc (bad) shl mov mov roll add (bad) je add adc add lret (bad) out insb (bad) xchg jmp (bad) mov xchg movabs movabs mov add (bad) fisubl add push xchg pushq add or xor jp add or xor lret (bad) sub sbb xor adc (bad) loopne adc sub retq xchg mov add sub add test mov fwait pop iret roll jnp add mov add adc add movslq pop add add ror pushq jno jae mov (bad) add in add jge xor xchg mov js adc lret incb sub je (bad) pushq lea rex.XB lods and out hlt add (bad) movabs cli add jp mov add in lods in enterq add stos fsubl movb ror mov sar (bad) or adc incb sub retq sbb lods adcb ds (bad) mov sbb fnstenv cmp cmp fimul in rol xlat add mov add jl scas vcvtsi2sdl pushq cmp add jbe movabs punpckhdq rex.WX add mov rex.WRXB jg wbinvd (bad) (bad) (bad) stc or rorl add add incl iret pushq rex.X pop xchg sahf jb cmp (bad) outsl jp callq icebp in add add in and adc jp and push (bad) jl jbe (bad) add je rex.X add test pop (bad) jno hlt (bad) (bad) adc sub out jns rex.B (bad) xchg iret cld lods cmp rex.WRX sti loopne,pn sbb outsb xor (bad) orl rex.WRX add nop sahf js ja add pushfq out rex.WR sub stos mov cmp sbb stc lods nop add or mov int3 shll callq in xor imul int3 mov rex.RX rex outsl jl xchg outsb and rex.WRB rex.WRXB (bad) callq add or (bad) jl jns movabs andl js (bad) js out retq rex repz xchg add pop mov sahf rex.WR sbb js out test cltd mov lahf rex.B push (bad) movabs and (bad) rorl or adc add push imul movabs sahf fistpll pushq add jle (bad) cltd rex mov rex.X pop mov mov or jg xor add loope stc rex and sbb add pushq rex.X pop jg outsl (bad) (bad) (bad) (bad) cmp (bad) jo decb movabs rex.B rex.R jle scas mov sarb or out (bad) add fs mov xor rex.B scas pushfq out jge sbb cmp push pop rex.WRXB js js (bad) retq cmp rex.WRXB (bad) add (bad) mov sub cmp or rex.W rex.R rex pop pop rex.R add in lcall insl lret pop movabs sbb enterq outsl push jo jmp rex.B add xor add push (bad) xor xlat repz cmp add cmp icebp cli outsl (bad) (bad) mov sbb rex.WRXB out xchg rex icebp and sti sbb jge cmp add outsl out add btl outsb add movabs pop mov cmp fnstenv sub mull and (bad) mov pop add adc cmpb xchg adc popfq rex.X jb repz and (bad) mov lods (bad) cmovnp jg mov add and sahf rex.WRXB callq fwait jno lahf add movabs rex.R rex.RXB ficoml add (bad) (bad) add (bad) lock jmp cmp rex.RX rex.WRX add mov test mov outsb (bad) out add out (bad) mov push add rex.R adc in mov add and jmpq add sbb rex.X or add fiadd push fldcw out incl add rex.B xor jno add (bad) sarb cwtl sbb mov lret pop incb sahf clc loope imul adcb fdivs outsl add fldl dec (bad) xor idivl rex.X (bad) test (bad) cltd xchg shlb movabs (bad) add sub scas lea push xor push pop jno (bad) lahf (bad) (bad) (bad) jl lret rex.WRB scas add push jo add jp sbb clc inc rex.RXB js sub fcompl xchg jb jne add and repz lahf (bad) cmc insb lock mov (bad) lret jl sbb callq mov sub jnp rex rorl lods iret jl clc xchg icebp repnz xchg (bad) and jb (bad) icebp (bad) sahf adc pop jb pushq cmp movsl add loopne (bad) fistp adc js push rex.XB pop incb jo outsb add (bad) pop xchg jno (bad) rex imul add (bad) cmpsb leaveq scas pushq xor cmp mov (bad) cld out cmp xor jp rex.X lods popfq pop pop add cltd movsb (bad) jg int3 cmpsl adc (bad) add push add out mov xor add sbb jle cmpsl fdivs mov in lods jg (bad) jle mov test lock lcall mov out rex.R nop adc loope rclb adc cmp push jl xor jo pop sahf (bad) jnp push imul jg add jp (bad) rclb (bad) fdivrp add sub je mov add cwtl sub jo jbe fs repz (bad) ja addr32 rex.WX or movabs orl cltd test cmp test add cmpl pop (bad) rex.WRB js lock jl retq jnp rex.RB add (bad) rolb mov ja test add scas add rex.WRX fcompl xchg add rex.WRXB enterq mov sbb cltd pop hlt jo add (bad) (bad) fdiv jg jmpq pushq (bad) (bad) rex.RB add sbb xchg add retq mov xchg test add xor mov jl push xor outsl pop lock jns jg mov (bad) rex.WRX jl (bad) push sbb add add sub (bad) (bad) cli jl mov (bad) lret add adc jg rex.WR movabs cmc sbbl rex.W rex.WB (bad) sarl xchg rcrl jge callq adc mov repnz cli add xor in add mov jb cmp mov kmovw (bad) cmpsb jle lock loopne add rex.WB notb mov fldl add test cmp pop add mov (bad) sub lret sub jg mov pop add clc mov ficom push cmc xor fxch add or adc jg jg (bad) jl iret test add (bad) mov mov add rcrb push (bad) rex.WR imul or lahf lock rex.WRX add rex.RX or push jg add movabs cld cwtl jp and leaveq subl int incb add rex.WXB and jle cld rex.X retq mov fs fsubrs pop (bad) add (bad) sbb (bad) (bad) (bad) jp (bad) and (bad) cwtl outsb (bad) js clc rex.RX rex.WXB cmp add lahf xor (bad) js add sarb (bad) rcr mov leaveq (bad) stc sbb (bad) out outsb (bad) test add xchg jb add (bad) mov in cltd (bad) jp in (bad) fcmovnbe movabs clc movq jg jb rex.X mov pop (bad) xchg outsb sub rex add sub ficoml add out sub rex add icebp cmp mov mov add out jns add int movabs rex.WB add (bad) xor cmp idivl fisub sahf add callq pushq add jns xorl rcll pop repz add retq xor scas in sbbl adc fmuls rex.WRB stos mov (bad) je shrl add pop rex.W (bad) addl imul cmp mov or jbe (bad) add lock cmp or (bad) xor lea leaveq jmpq enterq and ss jg mov movb jbe cmp sub loope retq (bad) mov rex push mov jp mov (bad) jns outsl (bad) repz cmp (bad) pushq fnstenv mov add sar rex.RB add notb add movabs (bad) pushq (bad) xchg fistp xchg xchg retq nop rolb scas cmpsl movabs add fs cs rex xor in ds retq mov (bad) cwtl jp int3 outsl loop mov sbb test orb jbe (bad) xchg cld int3 push and shrl pushfq and add rex.B rex jg xor cltd (bad) xor sub add xchg add test out pushfq push (bad) shrl sub adc adc rex.WB and mov jno callq outsl and add push jb (bad) shlb and mov and or add sti stc sahf data16 add cltd jge xlat pop clc pushfq add lahf leaveq rex.XB push js stos xor mov sub cltd xor lret imul adc rex.RXB rex.WR or icebp adc add jmpq add adc add jns rorb mov rex.WRXB (bad) out loope punpckldq popfq fwait lea add mov out notl cmp sub jmpq jno leaveq rex.B adc (bad) rex.X sbb int (bad) sbb paddd rex.WRXB rex.X cmp movabs add pushq jg stc leaveq out push jl cmp mov mov iret jmpq js xor cmp mov (bad) jle (bad) in movabs jg rex.WX lcall (bad) jp cltd xor sbbb callq add jno rex.RB (bad) pop (bad) cmp sarl movabs (bad) pushq enterq roll add push (bad) mov jns rex.W pop (bad) (bad) fcomps (bad) add or int3 lahf xchg (bad) add leaveq sub push jo push addl rcll lahf fildll (bad) add rex.WRXB mov out add fcomp adc jb jo data16 jl cwtl mov or adc (bad) fnop stc push sbb rex.WRXB push (bad) mov (bad) cwtl (bad) jnp mov sub mov int3 xchg shl movsb lahf cltq leaveq roll stos cmp add cmpl sahf in and mov mov hlt push jg pushq (bad) outsl add shlb add mov xchg cmc pop fwait and sahf test incl icebp rep jp add add jle pushq clc mov cmpsl add sbb retq mov rex push fist out mov scas jmpq pop scas (bad) sub out mov pop xchg movabs loope fdecstp mov cmp add cmpsb sbb leaveq push xor mov jg (bad) jnp loope (bad) pushfq fidiv repz test (bad) pushq jp xor mov mov imul xor (bad) (bad) cltd (bad) xchg test mov add add test mov xchg mov (bad) (bad) (bad) fcomps jle scas ja (bad) rcrl jns add pushq rex.WRXB rex.RX rex.WRXB jle repz (bad) mov pushfq int3 add sub or std (bad) mov pushfq add (bad) (bad) add fst sub fidivrl add cltd add stos mov fcoms insl (bad) jmpq enterq scas mov (bad) add lret test fdivs jmp add out add cs cmp (bad) fnstenv rex.RB rex.WRXB push jp and rex (bad) sub pop jp adc xchg cmpsl std mov (bad) add adc retq add movabs add pop in retq sub xor jg fwait mov adc (bad) cltd flds lret pop std (bad) (bad) jb (bad) sbbb push fistp xlat movq loope jg fmuls pop or mov xor movb fiadd push shlb jae in mov cmc rex.WRXB rex.WB xor (bad) clc add rex (bad) incb popfq add fbstp adc mov push and add mov imul rex.RX roll cmp stos fildl rex.WX rex.W xchg mov (bad) (bad) sub cmpl rex.WX jnp pushq jb enterq sahf out (bad) cmpl sub pop fcmovnu pushq outsl (bad) (bad) (bad) leaveq or mov pop jle scas jns and mov (bad) rex.XB adc sub add decl (bad) add icebp insb cmp (bad) out out jrcxz fistl rolb xchg cmp (bad) or pmaxub pop mov jle (bad) add (bad) movsl add jo and jp xorb pop (bad) (bad) sub add mov lods mov mov sbb enterq (bad) lret jmpq or xor add repnz insl retq rex.WX add sbb callq fs push mov insb sub sbb (bad) (bad) add xor add mov out push add (bad) sub movslq iret pop xor adc push bswap add rex.XB cltd mov jmpq cmp insl (bad) jp lock (bad) sub (bad) add cmpsb icebp mov (bad) lods and pop mov (bad) add mov cmpsl add rex.WRB and roll sub and cmpsl ds fiadd sahf repz int mov movabs (bad) idivl add (bad) jge add rex.WX sbb ja (bad) mov adc rorb or (bad) stos jno test xor (bad) lock imul jbe movabs jmpq rex.WRXB add (bad) nop outsl jp movabs add loope rcrl rex sub push repz cwtl push lock fdivs mov mov push mov xor pop in add sbb xchg (bad) jl icebp ss mov retq cmp and fwait cmpl mov (bad) stos jns adcb fldt (bad) cwtl sbb add movabs xor sahf add (bad) popfq (bad) int3 xchg add test out sub mov lea mov and cmp decb add rol mov in movabs cmp movslq iret mov (bad) xchg sub fdivr cmpsl or rex.WRXB outsl xor ds fs lea movabs jmpq test or mov (bad) jge jg stc loop rex.WRXB scas add sti pushq rcrl fiadd leaveq (bad) scas mov (bad) mov add mov mov sbb push out add jp push (bad) outsl rex.WXB mov imul pop jb mov and (bad) (bad) (bad) add xchg rex.W rex.XB mov add mov out mov imul mov outsl xor mov mov adc (bad) outsb jg orl (bad) sti stos rolb lcall loopne pop movsb add xchg xchg (bad) add mov jbe cld rex.WRB lea fsubrp imul rex.R jle mov sbbb fdivrs rex.W adc sahf enterq rex.WRB pop fidiv (bad) repz pushfq mov cmp cmp mov jmpq addr32 adc in mov mov nop pop jl decb rex.X lahf or pushq (bad) (bad) pop movabs mov cltd (bad) dec iret test push add jno mov add mul fdivs mov sbb (bad) icebp (bad) fnstcw imul add (bad) (bad) add cwtl lock add push mov xchg inc out mov add callq cmpsb add (bad) add ja in mov add in push in mov lods ja lea repz pop jge ja rex.WR sub test mov repz lock retq mov js sti rex jmp and (bad) (bad) add outsb lahf adc scas es pushq (bad) (bad) add (bad) xor in add add imul sub (bad) sbb mov add rex.R mov adc sahf rex.XB add sbb sub sbb cmpsb sub pop lret rex.WB jle scas add test mov outsb (bad) rex.WRX pop pop movabs movabs (bad) gs pop fidivrl sbb xor stos imul xor jg outsl jg rex.WRXB add jge (bad) jl in fs or rex lods xchg jl addr32 (bad) jl (bad) jl in lock jl (bad) subl fwait js mov jge lret jle xchg out jl fdivrl jl (bad) jl sarl jl (bad) jl xor xor jo jo or jo scas rex.X add jp push frstor js mov sub jnp pop xchg add repnz add (bad) (bad) (bad) (bad) jo punpckldq rex.B movb dec or add mov xor add jmp mov mov (bad) (bad) rex sbb rex.B rex.RXB cmp ss jp (bad) enterq notb mov mov cmpsb loopne cmp ja jmp push (bad) cmp jo,pn int outsl insl cli rex.RX rex.WRB insl cmp cli cmc (bad) and rex.WXB (bad) cli cs cmp jo mov int and cmp sub fs movabs rex.WRX push or std pop add ds rex.WRX (bad) xchg add sub or (bad) rclb mov jl mov mov ds leaveq movsl (bad) (bad) out imul sti or jg rex.WR cs loope lretq jrcxz leaveq (bad) add or lods and mov add retq mov sbb or jne add fsubr lret add sbb int pop iret push add rex.WX movabs ds out repnz rolb (bad) mov enterq mov sub loopne mov rex.W pop out cli jg fistpll sub fimul xchg nop (bad) mov rolb fsubrl mov lcall retq or jg fwait mov xchg pop jb pop repz sbb add cmp or jbe js shrb jl lods sbb add ds pop and loop (bad) (bad) xchg jl rex.WRXB mov sbb or mov xchg (bad) iret testb sahf fsin sub mov add push movabs fisubl rex.XB int rex.WR mov out fnstcw jbe adc add jg vpandn add iret mov test (bad) sbb mov sbb std add and jnp pop loopne adc sahf insb fcomip rex.R rex.X rex.R fbstp xorb sbb jno (bad) (bad) out rex setle mov xchg fs out movb jo (bad) cs or pushq (bad) sub cmp adc sbbl fisttp pop push jg pushfq cmp add pushq mov outsl add loope jmp mov mov add rex.WRXB scas jp callq imul testl rex.XB rex.R (bad) bts popfq cwtl xor (bad) rex.WXB pop sbb sbb jl sub or callq mov adc sbb jo sahf (bad) mov mov pop movabs jle or (bad) jg scas push fistpll iret mov jmp lods lahf sub (bad) lret push stc mov mov cli (bad) or scas fidivl (bad) rex.WR push rex.RX rex add out movabs (bad) adc sub (bad) ljmp push add add jg outsl push lahf popq pop mov jo,pt (bad) (bad) cs pop (bad) sbb cmc data16 rex.XB iret (bad) cli add (bad) std mov sahf xchg pop mov add rex.WXB rex.WRXB add (bad) (bad) out add and cmp fisub pop sahf and rex.WX rex.WRXB jp orl (bad) mov push jl rex.RXB rex.WRXB sarb (bad) in add (bad) js leaveq sbb xchg mov xor sahf popq mov mov xor outsl push push adc add iret rex.WR jbe scas cld rex.RX and (bad) (bad) xlat lahf (bad) jns mov movslq jno or add jnp xor add iret adc movslq out (bad) jo (bad) mov jle rex adc mov (bad) or add adc and sub scas out (bad) add (bad) sbb (bad) mov jg outsl jb mov lods rex.WRXB rex.R mov rex.RX jle mov xchg rex.WXB (bad) repz or or int3 mov rex.WRXB pop test or callq adc fidivr out cmpsb jg outsl in pop loope add (bad) (bad) (bad) add add (bad) callq push rex.R lahf (bad) (bad) add sar mov mov jle jo sahf mov add incl fild iret movabs or and in add mov stos lods (bad) push pushfq rex.RB cmp xor out jg sub or imul rex.XB (bad) fs jle (bad) cmp mov xor push (bad) or fisubrl icebp (bad) add fldl (bad) (bad) ficomp xchg lahf xchg in pushq pushq fiadd jae or scas add lods cmp rex.R and or sahf pop (bad) jns sbb jl (bad) jp data16 sbb callq xchg rex.W cs add std rex.WX popfq add sbb rex.WB pop shll leaveq cmp (bad) iret rex.WRB out add sbb rex.B rex.X xor jge cmp mov add (bad) je add cltd cmp rex.WRB sub xchg ja (bad) jle cld (bad) mov sub rex.RX scas (bad) (bad) fiaddl pop fldl rex.WX add cmp mov (bad) es cmc retq or pushfq rex.WXB jg mov fdivl clc mov sbb (bad) setb and push (bad) xchg cmpsb rex.W sbb scas mov frstor (bad) add pop or add mov push add mov and cmp push loope xor imulb rex.WRB pop idivl rex test in stc jmp mov lea jge add (bad) jmpq mov push xchg scas lock outsw cmp (bad) flds cs rex.X rex.WX (bad) fcmovne rex.WRB xchg jb ja clc mov (bad) outsl pop add mov (bad) add push adc push cmpsl in xchg xor or mov lods add and pushq (bad) add xor rex icebp int mov jl (bad) rcll mov mov sub add add (bad) (bad) mov test xor pop add mov add pop (bad) rex.WRB adc (bad) (bad) rex.WX (bad) cld mov add (bad) out (bad) movabs (bad) or adc jg lret movslq sbb sub cld or ja sub add ds rorb sbb (bad) xlat rex.RXB sti xchg push fildll rcr add mov mov out shlb jb (bad) and jmpq add jge push and mov mov andl and pushq add adc fldl insb xor (bad) int (bad) jne add pop stc sub (bad) mov insb mov retq ja jp xchg jg jae rex.XB movl add (bad) sbb (bad) leaveq mov mov sub cli rex wbinvd add fcoml lods cmp add mov in loopne jl int push cli sbb test or cwtl add xor (bad) pushfq in jle (bad) stos psrlw rex.W in add jbe xor (bad) stos cmp jge jns outsl sub movabs rex.W and jg shll not xchg (bad) push sahf add mov stos data16 sbb jbe out or rex.WX pop popq or rex.WRXB rex.X rex.WR (bad) (bad) (bad) xor (bad) adc and add jle xlat rex.RX jno add imul pop add xchg add cmp push or add jne rex.WX scas sti cltd rex.X out inc (bad) xchg pushfq mov add adc xor xchg adc jrcxz leaveq int jb rcll cmpsl pop mov wrmsr jp rex.W es sub rex.WR add repnz shlb lea pop rex.X test mov xlat (bad) jle mov fiadd jmpq adc (bad) in sub fildll lods hlt jl test mov cli in xchg insl mov sbb cmc rex.R xor adc pop cmp jp add icebp sub push xor nop sbb xlat xchg in jbe gs pop sub sahf testb icebp (bad) mov stos in rex.W add loop lods cltd add and cmp outsb in iret movslq (bad) insl (bad) and add xchg pop rcrl mov add push test mov pushfq jb (bad) xor jge add mov fistpl add cmpl jle sub (bad) cmpsl shll xchg (bad) rex.W or pop out sti cmp xchg rex.WRXB jg mov push cli imul rex.WRX outsb mov fs fs (bad) (bad) xchg mov add (bad) repnz xchg callq divb test and adc cmp sub out fisub stos outsl mov jb test rex.RXB jle cmp subb add xchg push jg sub stos (bad) lock mov mov or jp jne mov (bad) (bad) xor insl jle (bad) lods sbb xchg add and sub rex.RX add mov add xchg addr32 repnz xchg callq testl adc cmp add data16 fbld fisubr test rex.RXB xor cmp cltd cmp (bad) jg mov lahf push add out (bad) test pop loopne rex.XB popfq (bad) mov push add fildl rex.WX cld rex.RX je (bad) jnp out add lea add rex.WXB (bad) adc jp (bad) sub jns scas loopne add test (bad) xor xchg and sti (bad) xchg add push es jle idivb mov stc movabs (bad) add stos xor callq fcomi enterq add add lock (bad) jb stos (bad) xchg insl sarb mov mov jp (bad) pushq jne pop jo jbe,pt sarl sub imul adc (bad) mov adc jns ss xchg (bad) add rex.B rex.WR rex.W adc add push (bad) addps popfq (bad) add shrb gs mov sub pushq std shl retq xchg rex.X adc dec and out add (bad) adc jle push retq rex.WRXB fistpl rex.WRB stos fisubrl rex.RB mov lods rex.RXB rex.WR and loope adc repz lahf sbb hlt push popfq sahf orl neg movsl lods (bad) jle fadd rex sbb mov std faddp (bad) add xor pop iret stos repz mov (bad) cmp addr32 rex.XB pop insl xlat push rex.X outsl (bad) adc add stos and negb (bad) outsl mov cmp jg add xor and cltd jl iret jns movabs movabs jl testl jb ficom sub rorb mov jp (bad) retq (bad) (bad) retq add xchg clc sbb cli mov sbb pushq data16 jb repz out ficomp (bad) add xor jmpq and add enterq (bad) mull iret in sti int add lret or sbb (bad) mov (bad) testl xchg rex clc jmp or jrcxz cmpsl add mov mov mov add xchg sub jg jne in (bad) xchg (bad) jns or cmpsl jne (bad) or or add sbb sub add add insl (bad) cmpsl (bad) push add adc sub and out iret mov add rex.B mov jle mov in (bad) (bad) shll mov data16 add rex.X stc sub rex.WRX cs flds getsec sbb movabs mov cmc sbb and test xor jl out rex.XB mov subl test rex.RXB mov (bad) sub rex.R mov lock in cmp push in (bad) hlt jae sbb rex.XB mov pushq clc jne (bad) stos rex.RX lret (bad) rex.WR (bad) iret add mov lock fs jle xor (bad) rex.WR fimul sub cmp mov cmpsb add rex.R add lods and add xchg mov (bad) rex.XB lock jns add mov jge jrcxz jl (bad) jp and mov xor mov jle cmpsl scas insb outsl cmpsb rex.RXB pop sarb add cmpsl cli adc test pop leaveq add testl pushq insb mov cli rex.WX imul mov cwtl cs xor not test jmp int out adc repz hlt xor xor add add push (bad) rex.WXB (bad) or imul push add rep stos rex.WR push add mov add test cld add rex rex.R (bad) sub xor in in pushq (bad) cmpsl vmovdqa sub (bad) mov movabs sahf rex.W jp (bad) mov fwait or add je rex.WR stos lea (bad) mov rex.B rex.WB sbbb movslq jnp mov jno repnz rex.B sar jle retq cwtl adc ficomp push add fisubr lahf mov cwtl lahf cmpsb xchg jg cld rex.RXB adc idivb rex.RB imul std add jb scas or add jg insb mulb in pop rolb fs lahf test jp xchg mov rex.RB rex.W rol data16 or andl movabs verw testl add lock mov rcr xchg pushfq movsl (bad) popfq js jle or roll in jge rex.XB pop add jl jmpq incl int mov add cltd in mov rex.WX xchg jp xchg out subl sub (bad) rex.WRB mov enterq lods jp (bad) (bad) adc nop data16 push (bad) fwait rex.WRB in loop xorb sbb add shlb int3 rex.WRB mov mov jo sbb jno pop movsl sub cmp add hlt sbb in rex.RB loopne add mov or jg xor lock cmp ss or jrcxz pop lea jbe sti fsubs rex.WR rex.RB pop loop mov jnp mov adc mov cli add or movabs adc cli (bad) loope movabs xor sarb and pop add rex.RB add mov add stos push sub xchg int3 rex.R imul sahf (bad) cltd nop scas add mov xchg add jbe and rex.WRXB push add pop jp jmpq or shlb jbe (bad) (bad) hlt push jg cmp lahf add fadds jrcxz test pop sbb sub loopne sub loop,pn (bad) rex.RB cmpsb xor std addr32 rex.RXB mov scas sti rex.WRXB or jrcxz pushq cmp iret outsl or repz stc rex.WX mov cwtl jmp sub push pushq jo add or cmpsl mov out (bad) add sub (bad) push add iret jp leaveq movabs shlb test lea sub (bad) add mov mov mov jbe rex.WX (bad) lock jle adc mov add cmc and add sbb rex or out (bad) mov add sbb scas (bad) xlat jrcxz int in lea (bad) sub add loope gs (bad) (bad) adc mov fidiv cld sub test add add sar and add rex.RXB and cmp (bad) cwtl mov xor (bad) rex.W (bad) add mov movslq lock (bad) mov sub or rex.WRXB xor inc fwait testb movabs (bad) rex.X ss rex.WRB (bad) jne pushfq out mov lahf ss or jmpq orl xchg pop rclb add adc es leaveq add lret pop gs add movslq add mov mov adc (bad) add retq movslq jno js and jle fs sub add sbb cmp sbb add (bad) or xorl and add or pushq rex.RB xor mov (bad) add popfq sbb sahf and mov pop cwtl or pop add cmp pop add sub jmpq cmpb cmp push (bad) mov (bad) rex.WRB mov add decb add rex.W (bad) outsl xchg scas jb retq je xchg leaveq movabs stos mov (bad) and add add insb (bad) jns adc pop (bad) add movslq and mov rex.WRB xchg popfq rex.XB add mov lret add shl enterq rex.WRXB sub (bad) (bad) outsb subl add sub rex.RX ds movslq sub (bad) or (bad) rex addps mov sbb jns cltd mov rex.WRX rex.WRB sti rex.B rex.RXB mov add add imul stc jmp repnz rex.X add stos and (bad) add data16 cmp add mov push mov paddusb (bad) or jg insb mov cmpsb xchg and jle (bad) rex.WXB rex.RXB push and sti (bad) cmpsb fldl fucomip jrcxz (bad) (bad) add imul mov popfq cmpsb cmp stos (bad) jb pop imul or and (bad) (bad) pushq jb (bad) stc and push sbbl mov add rex (bad) (bad) fstpt mov sahf lea pushq pop scas push jb rex.RX ds jle mov add insb out leaveq out ss sti int fbld (bad) jmp (bad) outsl (bad) rex.RXB rex.RX mov (bad) gs add scas or add sbb outsb jb pop lods std popfq xchg sub (bad) add test lods add jo jrcxz or jge (bad) clc stos xorb (bad) xchg (bad) add enterq iret xchg pop jp test cld adc (bad) scas jmpq mov or out in mov mov fstpt xor (bad) es cmp (bad) rex.XB mov mov xor or jmp (bad) jns (bad) movb sbb push cmpsl in cmp ja add movsl mov enterq mov cwtl (bad) imul in or xor repz xchg sbb (bad) out (bad) movsl (bad) mov ja push in movabs mov je lahf xor or test movabs mov cltd mov and (bad) jns mov add cmp add out mov add icebp mov push xor fs cmp jg pop or add sbb jl mov test jrcxz movabs (bad) jle cmp mov jl add movabs data16 not scas adcl mov adc imul xor sub xchg and rex.R sub add (bad) stc outsb (bad) jae add pushq cmp mov jno (bad) add loope imul icebp outsb insb test xchg mov out rex.WX mov adc (bad) sbb icebp mov add add rex.WX rcrb mov out add lahf xchg add rex.RB popfq mov add pushq or (bad) sbb (bad) jl pop rcll cmp add xor imul and add (bad) add sbb je push (bad) jb xchg movsl push cmp cmpsb cmp add movabs and push cmp shlb rex.WX cmpsl fldpi add mov xor test cs scas and mov add xchg insl out add pop mov jb fcoml pop xchg add (bad) decb cmp retq cmp add callq addb sub adc jle rex.WRX fcomps ja (bad) cwtl and (bad) rol hlt sub and pop cld out cli (bad) callq rex.WX mov movabs xchg pushq outsb jge repnz (bad) (bad) movabs rex.XB pop jmp adcl stc mul incl stos sub es sbb xchg outsl outsb fisttpll je mov int3 cmp rex.B decb insb movsl (bad) cmpsb sets mov jbe rex.X rex.WB jmp push fldl fiadd mov mov rex.WX rcll jbe out mov jp rex.WRX dec test xchg jo add retq lock jbe (bad) cmpsb cwtl out add lods sti ds imul mov push out (bad) mov cmp (bad) lret mov fnstcw mov outsb or xchg xlat add data16 cmc rex.WRXB (bad) push add movabs cwtl outsl cmp pop rex.X or mov mov pop (bad) cmpsb sti rex.W xchg scas jge adc mov mov or movabs jne fcompl sarb add mulb cmp push test add push rex.RXB or add fnstsw out cmp imul mov xor add xchg shrl scas jge (bad) sub push ficomp (bad) (bad) xchg mov pop and pushfq out mov rex.WR int3 mov test rcll lock enterq fs (bad) pop jmpq fs movsb xchg xchg push hlt notb jle (bad) enterq mov rorl xor jp fs or adc add sbb add enterq mov sub in imul jb xor cwtl add (bad) int jne xchg add jo mov jb rex.WXB movslq mov adc rex.RB std mov push mov pushq rex rex.XB or mov jg rolb rex.R rex.WRX add mov enterq stc lea fwait rorl add retq push jbe out cmp (bad) outsl repnz and fild in in cwtl add and fidivrl pushq jg sub jne cmp push lea mull jb xchg movslq rex.RX lret add (bad) retq mov add movsl push (bad) jge insl adc jno mov and rex.B sbb lret add movsb (bad) cmc callq stos scas cmpsb movabs jns (bad) jo cmp xchg add jae pop nop sbb loop out pop xchg add (bad) idiv fsubs std fs lea test mov xchg xchg rex.WX movsl shrl xchg flds xor out push mov lea pushq (bad) iret clc (bad) js pop lahf rex.X fs (bad) rex.WXB jae xchg insb (bad) and callq add mov (bad) rex.WB rex.R test jle sub cmpsl retq sbb add jrcxz je (bad) movabs int add adc sti sar push add sahf fucom sahf nop rex.X rex.WR in add or xor jg fsts pushq scas mov rex.WB rex.WRXB stos sahf nop xlat adc in add push jne rex.WRX (bad) loopne sub add mov rex.W or jae or hlt (bad) sub adc (bad) mov fneni(8087 add imul sub pop rex.X retq scas add data16 mov lret add add test stos add mov repnz (bad) scas sbb jae add adc rex.WB sub out push jp (bad) jnp cmpsl add (bad) rex.W cmp add cld lret add jbe loop (bad) add push or jae jmp add xor rex.B fwait add iret push mov pop mov jp decb lea add incl xor int not rex.W loop fnsave add mov add adc xchg movb adc js rex.WRB jne retq mov pslld loop stos cmpsb mov addl out loope xor mov (bad) lods xor jp imul mov add cmpl fs cmc sbb mov (bad) xchg rolb cmp and shlb nop (bad) (bad) fidivl jb sub push ds mov mov push cmp retq pushq and push (bad) outsb sub jns adc and int add sbb cmp out add sub jb mov fild add movabs add rex.XB mov add (bad) flds sbb rex.WRB (bad) (bad) sub rex.RXB (bad) add xchg movabs stos jrcxz (bad) jmpq stc sbb data16 sbb pop jne (bad) jnp and cmpsl loope in sbb jg add (bad) rex.WRX cmpsb fisttp imul jrcxz icebp jbe (bad) stos sub push or add pop out imul jno rex.RB add mov nop insb adc in rex.WRX sub jb jg stos jns out pop sub (bad) in add and test cmpsl mov pop cmp or cmp cmpsl add shrb callq add addr32 cmpsl ds add or fbld sahf add xchg outsl jle mov push sbb add addl loope (bad) cs enterq sbb mov stc adc xchg (bad) add add jae lret adc fistpl jo push add push ds xchg xor imul ds sub and sub jmpq and mov je insb jmp repz movabs xchg xchg loope cmpsb mov jge mov movabs test out test out int (bad) movsb add or ja imul orl in or movabs rex.WRXB sbb push rex.RX mov movabs sahf (bad) cld xor jl movslq flds retq xchg (bad) pushq push mov sub icebp movsb cmc sarb add popfq (bad) (bad) test jle lea and jb (bad) and jmp xor or lods (bad) movabs adc sbb jp fidiv xchg mov jns lret xchg mov lods (bad) (bad) rolb outsl push or add (bad) stc fcomps js mov cmp rex.W or mov jle gs add adc rex.RX (bad) xchg movl mov stos push lods fucomp add sti (bad) jrcxz,pn jle std rclb (bad) gs rex.RB pushq callq jns addr32 jle add jg mov retq notb loope ss jmpq mov in shl lretq rex.W ss (bad) jp out xor retq sub out (bad) mov (bad) stc add xchg jb push mov push hlt cwtl add xchg sarb push add (bad) add xchg mov fsubrs sub subl and sbb add or add rex.WRXB xor lfs add cmp jp jne (bad) pushq push fildl test sbb ds xor je add push cmc es (bad) int rcrl in and xchg xchg iret mov jp and pop int sbb push mov or cmp adc insb add fiadd lea cmp push rex.W rex.WXB pop adc hlt retq out in scas stos (bad) adc popfq adc (bad) xchg sub (bad) jle int3 and in (bad) inc rex.X pushq add imulb (bad) add rex.WRXB or addl mov int jne loop scas clc movabs (bad) push (bad) xor callq insb outsl cmp and iret es test mov and cmp in int3 (bad) mov out test mov cmp adc and rex.WB (bad) repnz or int mov je cmp test add jb rex.WR lods mov sub js and cmp fcoml retq fldt sub movabs jne lea (bad) test or fs testb stos mov xchg rex.W adc or cmp cmc in lret (bad) movslq add add mov add and jle insb adc sub add test (bad) rex.R mov add mov or sahf shr xor (bad) in (bad) (bad) rex (bad) out movsl sub and out (bad) jle and mov xor mov outsl mov test sub in add sbb add leaveq xor add data16 (bad) jle fwait rex.W (bad) roll (bad) fisubl jns or insb data16 (bad) andl push adc mov jno mov mov in movabs cmpsl add imul js (bad) pop jns jg in iret xor rex.RX sbb out fadds push sti (bad) mov mov int3 or (bad) mov nop cmp pushfq popfq loope mov (bad) fiadd rol pop adc and pushq add std mov (bad) pushfq in nopl xchg add jg mov fs xor clc rex.WB mov add out mov cli addl (bad) pushfq cltd rex.XB sub (bad) push rex.W cld (bad) (bad) jrcxz (bad) cmpsb popfq jae (bad) iret add xor lods std movabs test (bad) fsubrp cmp movsl add fildl icebp add pcmpeqw mov repz fsts rex.RX in loop andb jae rex.W rex.XB mov sbb rex.WXB rex.WRX sarl int add add jne adc rex.WRXB fwait cs js pop cltd (bad) add rex.WRX stos xor sbb mov lods xor and (bad) and adc (bad) movsb (bad) mov (bad) imul push lea rcrb cmp lods pop xchg push fwait mov add push xor movabs xchg (bad) (bad) (bad) cs rex.WRX jno mov out cli mov stos (bad) xor gs mov stc (bad) insl repz cmp test add int fimul leaveq ss or sbb pop pushq push or mov (bad) ljmp or (bad) lcall (bad) in jp rex.X cmp rex.W mov outsl scas movsb clc jge in out gs jno fs adc fnop and lock stos jl nop repz je mov push rex.WRXB mov add fldt add sahf cmp xchg (bad) sub cmp mov jb mov int inc imul rex.B pushfq insb scas xorb xchg ss add iretw push add outsl (bad) enterq add push sbb jno add jg add (bad) add mov (bad) rex.W lods sbb xchg (bad) and sub xchg out mov icebp cmpsl jmp mov leaveq (bad) in fisub cmc sub fndisi(8087 mov jl fldl (bad) (bad) rex mov pushq fisubl andl sbb (bad) imul and mov test test js std or mov in fildll imul xchg sbb pop rcrl fwait pop stc movabs adc rcl (bad) (bad) xor jbe,pt es xchg addl scas (bad) pop mov loop (bad) cmp lods in loop sbb movabs test test mov pushq mov and sbb adc adc mov pushq xchg mull (bad) stc add rex.WRX rex.R (bad) xor std (bad) not mov lahf shr insl and xor fs lods xchg cmc pop ds (bad) (bad) loope outsb rcll cmp mov idivl (bad) xor scas (bad) rep fsubr xlat xorl (bad) xor mov rorb (bad) ds and mov cmpl cld (bad) add (bad) movsb pop je and cmp jl xor (bad) cmp (bad) jmp pop push jg testb sbb out (bad) sub push retq push (bad) (bad) clc rex.R mov movabs in mov mov jp rex.WB ss mov push cmp xchg (bad) (bad) in sub push cmp pop fcoml jl lahf mov (bad) fisubrl ds test cmpsb retq rclb mov data16 mov push shll mov xlat rcr test rolb cwtl (bad) xor in adc popq (bad) scas (bad) mov jbe (bad) in sub out cs out pop rcl lret scas xor ror sbb (bad) xchg jnp sub fcmovbe xchg add pmuludq jge ficom pop sub jge movsb cmp test rex.WX rex.X or rex.R cltd sub sub xor jl and add push mov pop outsl jne pop rcrl popq (bad) mov lahf fcomi cltd fxch roll xor (bad) jmpq nop mov iret xor xchg push outsl push (bad) xor outsb in rex.XB rex.R (bad) cmp push mov movsl xor push add rex.WX pop (bad) cmp sti (bad) push cltd rex.WB cmp jrcxz rex.B jmp pop fbld lods iret shr repz nop out mov rex.WR mov cmp cs mov (bad) (bad) stos cltd cmp or fistp cmovbe sti jbe stos fnstenv movabs (bad) fwait pop sub cmp sarl cmp cmp addr32 (bad) jnp xchg (bad) xor (bad) (bad) notl roll mov rex.WR leaveq outsl sti adc jb test jnp mov js pop icebp and mov cmpsb push push roll test std jrcxz out or fisubrl insl adc and (bad) adc (bad) es in negl clc (bad) mov movsb push callq mov xor movabs movabs scas rex.X (bad) mov rex.WRB xor xchg int rcrb scas lea out in mov (bad) rex.B mov jo jmpq cmp cmp cmp movabs (bad) cmp test fistpll jg adc and xchg mov cmp mov xchg cmp lret xchg mov mov out jno rex.X (bad) in lods jge movabs cmp cmp jne jmp fistpl sbb rex.W rex xchg jmpq xchg jne imul mov rex.WXB cltd cmpsb pop lods movabs test bswap or movabs in jg mov pop pop jnp or and (bad) cmp mov (bad) cwtl (bad) out and stos test cmp pop (bad) push (bad) xor cmp sub and iret or jo xor (bad) rex.W xor ds jb in (bad) fildll (bad) (bad) pop jmpq xchg mov mov jmp cmp sub sahf popfq jp (bad) and pop (bad) and rex xchg cmp or jne ljmpw (bad) mov jmp cmp rex rorl retq pop sbb ds icebp jg negl cli (bad) in or sbb xchg pop jb cmpsb sbb rex.R out and stc xchg incl (bad) std adc and xor and retq adc sbb push mov (bad) mov (bad) rcrb fnstenv sahf (bad) scas or and cmp or out pop sub (bad) (bad) cli out (bad) mov sahf fild or add rex ljmp or mov cmc (bad) std retq cmpsb std pop or jmp (bad) ljmp sar (bad) mov jne stc add outsl inc idivl insl jl push cmp jo js mov push fisub (bad) cs movabs icebp jno rex.WRB add outsl jb (bad) in add insb rex.W fnsave sub and int (bad) cmp imull sub jmpq out (bad) fbld pop xchg jmpq (bad) jl mov xor add (bad) jl jnp lock cmp jg fidivr rex.WRXB outsb (bad) in (bad) push sahf and mov (bad) sub (bad) jrcxz sahf jecxz jg xchg and ss xchg mov ds mov mov mov ficomp push fidiv or loope lcall (bad) (bad) pushq callq push (bad) xor (bad) mov add loope (bad) fldenv (bad) in xor ja xlat cmp fild js (bad) insb pushq push and push pop (bad) cs (bad) xchg icebp sarl adc (bad) pop leaveq rcrl (bad) or xor sbb addr32 ds shl cmp (bad) add iret decb pop pushq sahf mov (bad) pushfq jl cmp cmp jo leaveq (bad) divl (bad) mov rex.WB out movl (bad) pop rex.WRXB xor (bad) xor and mov (bad) mov pushq out adc push faddp rex.XB testb (bad) pop xor cmpl and fbld (bad) (bad) mov mov mov mov js (bad) sbb sub jo (bad) repnz movabs mov movsl sahf in outsb (bad) jle cmpsl incl iret rex.WRX cs rex.WRB adc rex jg lahf lcall insl jg out jle (bad) (bad) ficom sub jne (bad) cmp (bad) fidivr jg pushfq jge rorl mov fidivr add rex jle (bad) lods leaveq jg jp setp xor xlat fstpt (bad) adc (bad) data16 pop incl mov rex mov repz mov outsl retq out jno (bad) sub outsl pop jo (bad) lret (bad) out (bad) xor mov (bad) (bad) jbe and lods rex.WRXB add nop (bad) cwtl imul pop (bad) (bad) (bad) rex.X (bad) xchg gs repz (bad) xchg rex.R js xlat out add xor jo fucomi out rex.WRX fisttpl hlt (bad) movabs lods rex.X int (bad) lock xor pop and outsl add pushfq and (bad) jo ja lret rex lretq add out mov out xor sub pop rex.WRXB rex mov fisubr jg cmp popfq fist nop jo (bad) ds nop lock xchg fist out mov jg iret idivb rex.WRXB (bad) pop out mov mov (bad) xor xchg outsb (bad) jp (bad) cmp (bad) pop (bad) push or (bad) xor (bad) mov cli (bad) mov jo mov fiaddl outsl (bad) (bad) (bad) fidivr mov rex.RXB xlat out outsl xchg (bad) fmull cmp mov rex in movabs mov enterq rex.WRX std out fisubl and out mov outsl (bad) and rex.WRB cmp rex rex.WR out rex.WRX sahf mov cmp jbe js rex.WRXB sahf push (bad) mov lods jo cmp rex adc jmp and cmp mov outsl rex.RB mov (bad) rex pop stos pop fidivr js pop incb leaveq lahf pushq scas (bad) pop pop cmp idivl (bad) jg outsl mov or scas int mov xor out push mov sbb rex.W push sahf addr32 (bad) jo pushfq jrcxz push add out mov add out mov xchg decl pushfq jg rex repz lods fimul fisub (bad) (bad) xor push fisttp icebp xchg pop testb (bad) rex.WX mov mov fiadd outsl sub stc outsl (bad) mov gs negl xchg (bad) stc (bad) (bad) (bad) iret jle std scas ficoml pop lahf pop and mov cmp mov jg fs mov xor cmp insb sbb pop mov (bad) je pushq xchg pushq mov in jo mov (bad) (bad) sarb pop (bad) sbb pop outsb or pop (bad) mov mov jo pop je (bad) lahf jle adc pop sbb pop pushq xchg jl xor mov (bad) mov mov jl insb jbe (bad) (bad) pop repnz mov pop sahf (bad) mov sub rex.WRXB pop jo pop jg (bad) jg push jle push mov adc push (bad) in or mov sbb (bad) mov sbb push mull pushq (bad) mov rex.WRX sub out rex.W cltd add push (bad) push lahf push mov mov (bad) in pop cmp jo xor xor rex.WR rex.WX (bad) sahf (bad) fs jo jb je,pn (bad) or pop movabs pushq mull (bad) sbb outsb imul sbbl imul lahf scas lahf movabs jo fs data16 (bad) xchg pop cmp in rex.WRX (bad) ficom mov ljmp pop jmpq callq sub mov rex.WRXB xrelease and sbb or xor out pop insb mov es pushfq cmp (bad) js out pop jle pushq mov mov add rex.WRX push rex.RX jo clc jg add mov insl outsb push rex.WRX sbb cmp rex.WRX adc (bad) jo (bad) jg fs xor push rex.WRX jo (bad) jl sbb (bad) jnp rex.WRB lahf pop jo js ja mov insb (bad) retq repnz outsb lret movzbl jge (bad) out fcompl push mov pushq (bad) jne fidivr fsubr out pop je push or fistp sub rex ds pop je xor std jns jo,pn cmp rex.WRX (bad) sbb (bad) (bad) test (bad) sbb fcoml rex.WRX fidivl pop out (bad) pop fs mov adc (bad) popfq xorl loop xlat (bad) retq retq rex fs (bad) sbb push and outsb sub mov sbb pop cmp je mov rol (bad) pop cmp cs stos pop movabs mov (bad) pop lahf push (bad) (bad) iret stc (bad) mov in fidiv (bad) or pop (bad) adc lcall sbb and ja mov rex.WRXB mov out sbb mov outsb pop fbld out rex pushq sahf (bad) (bad) xchg (bad) (bad) cmp jo fstpt xor andps mov jl lahf js jp insl (bad) rex.WX rex.WRX outsl ja in jle and (bad) out ja in adc (bad) (bad) data16 ds cwtl mov outsb insb or push sbb out movslq (bad) fidivr jmp xor rex pushq rex.WRX es cmp rex.WX push jg stc fs insb sahf jle mov jl pop out mov cmp fidivrl (bad) pop jb mov (bad) lret insl fbld out pushq (bad) jo fistpll loope jle outsb sbb lcall push icebp mov xlat fs (bad) mov (bad) fisubr mov repnz pop je mov jo or mov jb loopne rex.WB rex.WB jg xchg movslq pushfq mov sbb (bad) rex.WX out rex.B and push pop push cmp lahf pop mov iret pop rcll cli mov jge push outsb jg repnz fs jmp xchg ss rex.WX fidivr jo cmp outsb rex.WRB (bad) (bad) addr32 in or ss insl jle lods pop jb je (bad) (bad) xlat pop sub xor mov rex.WXB fist (bad) mov js pushq sbb sahf out out (bad) xchg sbb (bad) jrcxz int sbb jo xchg rex or ss idivb pop xlat movabs cmp jb ja (bad) pop mov lret int3 out pushq sbb sbb fwait sbb cmp int mull cmp rex.RB cqto pushq mov idivl mov sbb jb in mov mov fstl mov pop fildll out sti adc (bad) (bad) fdivl std jo cmp icebp mov push pop (bad) ja pushq cmp mov and mov ficomp insl cmp pop jle cli movabs mov sbb sahf idivl rex.WRX (bad) (bad) mov rex.WX (bad) rex.WR mov cmp out outsl pop jle icebp mov stc rex retq mov rex.WRX std mov (bad) jge push jnp adc or cmp pop es cmp xlat rex.W push int (bad) rex.WRX rex.X data16 (bad) cmp je push sbb lods pushq sbb int3 outsl lods idiv jmp mov repz pop pop jbe rex.WRX rex.R mov cmc (bad) mov shrl (bad) mov mov (bad) cmpsb (bad) (bad) rex.WR sahf xchg callq js sahf xchg jge or gs rex.WRXB (bad) outsb pop (bad) xor jae mull insl pushq ds (bad) iret fildll xor outsb pop jo jb je outsl addr32 rex lock leaveq push iret (bad) (bad) cmp mull jge fs outsl hlt rex.WRXB cmpsb outsb xchg xor mov jo,pn (bad) xor enterq jmpq insb jge outsb or pop push fcmovu mov fstpt jp push (bad) push retq adc (bad) jbe cmpsb sbb jp pushq hlt jbe cmp jle (bad) adc out or (bad) insb fcmovnu rex.WRXB andnps rex.W sbb stc int (bad) in pop out (bad) push stos mov (bad) mov sbb (bad) rex.WRXB rex.RX lods pop scas fcmovu rex.WRX mov (bad) rex.WRB jle sahf mov outsb rex.W outsl fidiv (bad) mov rex.WRX (bad) add lock jbe,pt xchg hlt (bad) pop xor (bad) rex.X clc push (bad) outsb and sub divb lods mov cmc pushq cmp mov or xor jbe push (bad) js pop hlt js bnd int loope (bad) or cwtl pop lods pushq (bad) mov mov outsb (bad) mov fwait add sbb or jge insb pop (bad) jo xchg (bad) (bad) insb insl outsb jl and (bad) pop movsb rex.W mov xlat std pushq xlat pushfq (bad) (bad) (bad) and out cwtl flds pop xchg in mov (bad) cmp cmp mulb (bad) sbb out rex.W or data16 mov insl outsb or in rex.W (bad) callq sti ja mov scas cmp rex.WB jo mov mov rex.W rex mov mov sub jrcxz hlt jo (bad) mov pushq (bad) imul (bad) sbb adc (bad) rcrb outsb pop sbb (bad) jmpq push idivb scas pop out (bad) mov pushq addr32 fcoml (bad) idivl repz jo bnd iret mov lahf (bad) sbb rex.WB (bad) retq outsb rex.W out mov lods pushq pop outsl cltd jno popq repz rex rolb sub mov rex.WXB pop xlat jnp adc pop jo push iret mov cli pop sahf (bad) mov (bad) js jo jb add pop cltd out xchg subps jp adc jno sbb je (bad) xchg (bad) and mov pushq mov or (bad) (bad) (bad) mov negb rex.W repnz scas jno imul pop pushq sahf std rex.WRXB cltd hlt outsb out pop mov pushq out pop push cmp mov push (bad) js pushq callq lock (bad) insl rex.WX mov jb sub pop sahf pop mov pushq (bad) (bad) (bad) or cs (bad) in div sbb (bad) movsbl jo pop rex.WR movabs sbb iret (bad) (bad) ljmp imul outsb out jo sbb lahf xchg jp push outsb cmp imulb sbb push out (bad) mov cmp xor fs jo sbb mov lahf mov xor iret rex.WRB jbe stc pop rex.W bnd and (bad) fistp outsb (bad) adc out mov (bad) xlat (bad) out movabs jle jb (bad) (bad) jp lahf jl mov outsb cmp callq mov adc test fisubr pop mov sub js pushq pop sbb xor in and js add jb rex.W rex.WX cs rex.WXB out xor scas xlat sbb pushq out imul mov jg outsl pop outsb sahf mov pushq out push (bad) fcompl cmp cltd (bad) out pushfq cmp sub mov in fs out mov and sbb jns cmp imul mov jrcxz notl xor jle outsl (bad) xor sbb mov rex.WRX mov rex mov (bad) rex pushq in push iret sbb sbbl push outsb (bad) (bad) or lret jg fs data16 cmp (bad) jne sbb imul xchg rex.WRB sub and or xor rex.WX pop stc or outsb out (bad) iret jmp cltd (bad) scas notl xchg lahf and rex mov jae es sbb and stos and stos hlt js jae imul push (bad) js loope rex.WX rex rex.RB rex.RXB xlat rex.R or std pushq rex.WRX ds out rex.W ja sbb movsb mov js (bad) jno (bad) (bad) (bad) jp cmp pop jg (bad) rex.WR int3 jge push insb ja mov or sahf sbb rex.WB rex.W rex.RX data16 in mov mov loope fild jb mov adc (bad) outsb rex.X movabs lahf mov (bad) mov sbb rex.RB std outsb ja rex.WRB jp xlat sub mull imul pushq rex.WXB decq pop (bad) addr32 cs mov data16 jno outsb jle mov pushq rex.WB rex push outsb adc or pop gs lahf in (bad) jg mov adc je outsb cs push (bad) imull jo lea (bad) cltd sbb fidiv (bad) sbb cmp iret adc rex.W adc xor jnp rex.W push rex.WRX pushq xchg (bad) pop xor pushfq outsb mov (bad) (bad) xor pop out sbb jrcxz (bad) retq pushq add push (bad) out pushq push sbb jrcxz push or jns imulb negb push rex.W lret jle (bad) rex.WRX pop sub adc xchg in xor mulb push sbb rex mov out mov (bad) sub stc outsb (bad) push mov mov fisub sbb mov fstp or jo rex.WRX rex.RX sbb jl js int xchg fstl jle insb mov (bad) or sahf cmpsl (bad) int3 iret jl jle addr32 pop mov divb jmpq xchg in xlat jrcxz pushfq fs outsb (bad) cmpsl lahf lret adc mov outsb pop (bad) imul jo jge (bad) adc pushq in js out adc pop xchg sub or incb (bad) xchg addr32 repnz pushq sahf rex.WRX addr32 or out or mov ss adc (bad) or lahf mov hlt (bad) fwait scas je cmpsl (bad) pop mov (bad) mov (bad) fildll rex.WRXB rex.WRXB neg fs push (bad) jno outsb fsubl pushq sbb add fcmovnbe (bad) mov sub pushq outsb push (bad) fsubrp sbb outsl stc mov out rex.WRXB pop rex.W shrb and sbb loope (bad) (bad) lret xor fstpt cmp (bad) xchg sahf movabs stos mov (bad) jge jo add ds pop leaveq (bad) jle movabs and pop jo jb pushq pop rex.WRX rex (bad) pushq (bad) lret and imul jo (bad) (bad) loop add xchg mov sahf stos lock cmpsl jmp rex.WRB test movslq (bad) (bad) xor xlat pop insl (bad) jl popfq mov pushfq ja push cmp mov sub xor jmp mov pop pushq movabs popq rex.RB rex insl (bad) pop (bad) cmp loop rex.WX (bad) xchg push mov fistpl xlat mull retq pop mov (bad) incb in xlat sbb fwait pop push pop test outsb mov rex.WRX xor xor mov negb xchg mov movsb pop ficoml pop rex.WRX pop xor pushq mov jo rex.X pop paddsw add rex.WRX pop sbb or xchg adc fs push cwtl rex.WRXB rex.B rex.WB mov mov js or fildl add rex.WRX lods pop in push push (bad) (bad) xor imul pop (bad) (bad) xchg rorl cmp stc push sbb xchg lahf (bad) jo jb je pop push cmp outsb cmpsl rex.R xchg or scas lods pop iret iret jo cmc (bad) sub rex add (bad) sub (bad) push rex.WRX (bad) lahf xlat fnstsw xlat mov jp out (bad) rex.WXB ja cmp rex.WRX pop lods (bad) jp pop (bad) rex.X (bad) sbb xlat push push jne pop xchg jbe ds rex.WRX iret dec cmp mov outsl shr fucomp out rex.WX xchg sub pop add sahf roll imul adc loope rex.R js and fstp rex.WRX sub cmovb (bad) jge cli push outsb (bad) iret pop pop (bad) pop (bad) mov (bad) or cvtdq2ps mov adc outsb rex ljmp imulb mov jmpq adc mov (bad) (bad) (bad) mov jle and out mov mov (bad) outsb iret (bad) (bad) (bad) cmp fnstcw jle xor jge rex.WRX pushfq fidiv pop jrcxz and or je pop outsb xor rex cmp divps (bad) fdivrp mov xchg out mov repz outsl push insb mov (bad) movabs push stc mov jo adc out jo sarl ja (bad) pop pushq jne pop rex.W cwtl lea lahf push push movl jo jno push rex.WRX mov ja ja imul mov pushfq sahf and divb lock iret (bad) xchg jo mov (bad) xlat je movl adc jo scas pop pop xchg cmp push je outsb ss cmp scas cmp xlat pop cmp jo (bad) int3 clc lahf pushfq imul pop out insb (bad) out (bad) pop push or mov (bad) out out jmp incl xchg out es sub pushq pushq (bad) outsb (bad) (bad) repz (bad) mov push rex.WR rex.W rorl outsb jle mov pop negl jne mov (bad) rex.WRXB outsb cmp (bad) cmp (bad) div push pop sbb pop push mov scas out outsb pop jo cwtl (bad) cmp idivl (bad) pop push out div pop cmp push sbb ds jle sbb out jo (bad) push (bad) fninit push xchg jo in mov punpckhdq out pop add xchg sbb mov mov imull push fcomip add mov rex.R (bad) sub test cmp scas rex.WXB sub rex rex.WRX ds pop iret movabs fstpl add jbe (bad) in push ficom (bad) (bad) push out out outsl in mov pushq cmp sub out pop xlat cs adc movabs scas cmp neg fbstp hlt adc imul pushfq pop push lahf mov imul jns push ss rex.XB rex.WRX mov js sti insb jle ss and add push rex pop jge ds adc (bad) mov sbb divl rex.W mull test jg jo outsl repnz cs jo sbb sbb jnp xor lahf rex.RXB addr32 negl and pushq adc (bad) neg sub pop and rex (bad) (bad) (bad) jae fwait pushq and xchg and push or pushq (bad) pop xlat (bad) divl mov xchg idivl sbb (bad) mov (bad) lahf pop (bad) mov pushq (bad) (bad) pop ja mov (bad) (bad) fistl imulb pushq (bad) fldcw cmpsl xor (bad) (bad) pop imul (bad) cmp jl pushq popfq out (bad) idiv popfq lahf clc jle add jg pushfq iret pop cmp (bad) icebp add mov sub or push int cli cmc jg sub fisttp lahf out mov outsb (bad) mov sbb lods imul sbb pop pop int (bad) pushq xor xor pushq or addr32 mull jge jle or sub xchg (bad) push xor adc out (bad) (bad) mov (bad) lcall mov mov mov rex.W xor (bad) jo rex.RX rex.WRX cvtps2pd adc jle mov out (bad) in push xor push imul sbb out div test (bad) jbe push xor (bad) or mulb in and xor sub nop jo insl rex.WRX xor (bad) leaveq xchg xchg mov outsb out rol fwait jbe (bad) push (bad) outsl add xchg push cs (bad) pop mov out mov pushq (bad) fcmovbe push out pop (bad) fcomp jle xor xchg (bad) (bad) test cmp ds (bad) (bad) cmp pop pushq insb movsl or xchg jo outsl (bad) cs rex.RXB rex.R out in and xchg (bad) pop orl cltd out sub fistpl (bad) jo (bad) lock cmc jl cld jl cmp fbld stos addr32 popfq fsubl sbb loope push pop mov decl sarb (bad) jo retq jl sub out pushq (bad) ljmp (bad) outsb addr32 ds outsb (bad) (bad) mov out (bad) clc or jl div rex.XB add add lret sbb mov mov xchg sbb pushq lcall rex.XB rex.WRXB (bad) sbb out (bad) jmp cmovle pushfq mull and and pop pop (bad) jl (bad) mov (bad) jo lret sub add sub (bad) rex.RX cs mov rex.W (bad) pushq (bad) mov leaveq fs (bad) (bad) loop push cmpsb xchg adc pop imulb or rex.RB jle jne repnz (bad) xchg movslq lods sbb js jg jne rex pop (bad) mov cmpsl cmp lea fwait jbe jmpq pushq fucomip mov outsl jg jo sbbl leaveq rex.W mov (bad) pop xchg xchg fistpll rex.W mov js mov cmp rex.WRX sbb lods (bad) mov and incl push pushq cmpsb rex.WR rex.WRX mov sbb pop scas push lahf (bad) rex.R mov pop mov or xlat (bad) jo sarb out movswl xchg mov cld jle movabs xlat cmp pop and (bad) sbb out push pop outsb (bad) pushq rex jle icebp rex.WRXB (bad) mov pop (bad) cmp push sbb jae pop fbld and adc jno paddw adc jne adc mov movabs rex out jrcxz dec and cmp push mov rex.WX out xor out pop outsl (bad) (bad) in sub lods callq mov and jo pop mov mov rex.X repz repz icebp pop cmp sub (bad) lahf xor mov sahf (bad) fistp int3 push add icebp cltd cmp pop cmp (bad) mov pop mov cmc pushq jp push outsb push and outsl pushq retq (bad) enterq xchg xchg out js xchg xor rex.X movabs insb and out or pop je hlt outsb es and pop imul jge movd jl es sbb data16 and (bad) jge (bad) js mov fidivr test jae rex.RXB xor outsl cmc cmp iret cmp test idivl push lods sub lods rex mov mov pop fisubrl outsl stos mov xchg cld mov mov cmp ds cmp (bad) jmp xor mov jo ja mov jle jo pop xchg leaveq (bad) rex.WRXB mov pushq pop jne fldl (bad) callq mov (bad) and clc jp jle mov (bad) push cmp cmp cmp (bad) push fidivr (bad) mov sub (bad) sub (bad) pushq outsl idivl insb fldenv push imul (bad) mov rex.WRB fmuls xor pushq (bad) push (bad) out insl pop adc movslq push cwtl fldcw mov sbb (bad) idivb rex.W sbb (bad) pop adc jge pushq lahf pop js xlat outsl sahf outsl jnp loop cli jo sbb sub (bad) sti mov mov jg mov sbb mov (bad) cmp hlt cmp jnp (bad) rex.WRB rex.W movslq rex.WRX push pop fisubl jb and (bad) (bad) mov rex.RB (bad) scas cwtl pop jg push movsb pushfq push push repz repz xchg mov mov mov sbb js outsl jp rex.WRB jg mov or pushfq push cmp (bad) icebp test out mov cmp sub pop sti (bad) out rex.RB rex.RB rex.RXB cmp repnz (bad) jmpq sbb xchg xor or in retq or rex.WRX ds sbb rex.RXB (bad) cmp hlt stc mov jns jo rex.WR sbb insl (bad) rex.WR rex.WRX test sbb xlat mov fist jo pandn (bad) (bad) repz rex.WRX pop jbe pushq js mov mov xchg sub cmp (bad) (bad) pushq xchg rex.RB rex.RXB rex.WB push adc btr push nop jo mov cli xchg add cmp jo movabs movsl pop fidivrl and imulb rex.RX out pop pop jbe jle js pushq sahf push ficoml and and sub mov pushq scas mov mov rex.WRX rex.WX jg jnp mov rex.W (bad) pop cmp fbstp cmpsb iret cmc fidiv mov or mov cltd pushq movabs mov jo out sbb popfq xchg jmpq loopne pop pushfq mov xchg (bad) sti sbb loopne cs pop mov and adc outsl and js insb mov push lret nop insl outsb xor loop fldt (bad) movsl fild push xlat (bad) pop fs (bad) out (bad) and adc (bad) xchg (bad) in (bad) cs push mov rex.WRX insb jnp (bad) movsl (bad) (bad) fs leaveq (bad) popq cmc out adc notb xlat fs jrcxz add pop mov (bad) js movabs scas jg insb fwait (bad) scas mov cli addr32 (bad) addr32 (bad) push rex.WRB mov (bad) movabs jo mov insl sub (bad) out in add xor pshufw (bad) pop lahf mov cmp callq (bad) mov imul adc jmpq jp rex.RXB rex.WRX jle rex.X sbb pop sub mov mov fistl fiadd cs lret xlat sti (bad) leaveq and rex.XB shrl jo (bad) jge sarb fbstp (bad) fildl jmpq (bad) (bad) mov je js jo outsl (bad) (bad) out pop lret pop adc sbb pop pop rex pop or scas std pop es es movsl (bad) addr32 jo (bad) jmp (bad) xlat cs pop pop mov mov pop pop pop and add hlt out pop js (bad) cmp sti mov js xor neg mov decb mov jo add shll mov cmp rex add xchg pop (bad) sahf jge jg outsb xchg out xor (bad) push out (bad) sti xchg rex.XB rex.XB jb notb (bad) retq xchg mov rcrl sbb mov sub jrcxz (bad) scas test pop (bad) push ss jp (bad) rex.WRX test (bad) jle iret sbb sub rex.RXB (bad) js lahf xchg or xor (bad) lahf (bad) push (bad) jbe sarl add in mov sahf and (bad) repz movabs (bad) pop pop cmp (bad) (bad) sbb rex.XB and cmp es pushq ftst (bad) cmp push outsl sub xor xor test jl or (bad) pop jnp pushfq rex.WRX and (bad) sbb scas pop xor cmp scas xlat push mov pop ficoml cli lods (bad) fildll rex cs xchg (bad) adc sbb std out cltd pop outsb adc mov (bad) (bad) add mov (bad) rex.WRX insl (bad) xor icebp in jle add and jnp out mov sub popq (bad) cmp notl xor (bad) out rex enterq mov mov (bad) xchg fnstsw (bad) in icebp xchg sbb rex.RX rex.WX sbb lret mov cmp mov cmpsl (bad) sub (bad) or (bad) rex rex.WRX (bad) ljmp (bad) outsb xor fwait add jo (bad) idivb xchg je push (bad) fs (bad) xchg cmp movsb (bad) out mov outsb js sub mov jo sbb rex.RX mov sbb imul js push pop mov pop loopne rex.R (bad) pop rex.WR sbb cmp fwait mov outsb (bad) lret jmpq xchg fldl (bad) outsb cmp pop (bad) je xchg (bad) add sbb pop lods jo adc rex.WRX cmp (bad) sub (bad) jo pushfq push add (bad) icebp loopne (bad) outsl and rolb (bad) mov cmp (bad) test push pop mov out (bad) sarb sbb push lock hlt test (bad) jl push cmc pushfq rex.WRX rex.WR outsl sahf (bad) cmp cmpsb cmp pop lock lock notl pop popq (bad) retq js fdivl xchg outsl cli sub (bad) std mov rex.RXB mov pushq pushq sbb comiss mov mov mov retq adc cltd rex.WRXB cwtl jg xchg jg std rex.WB rex std adcl adc jb ficom (bad) rex.WX scas rex.WRB push adc ja fidivrl rcr (bad) cmp adc jrcxz (bad) (bad) rex.WB ss (bad) sbb sahf xor imulb add (bad) pop je rex jb and (bad) mov lock (bad) es (bad) sub (bad) out (bad) (bad) jle stc (bad) out mov mov sbb pop jo sarl test andl sahf xor and pop jne mov (bad) fistp cmpsl loopne pop (bad) jg (bad) outsl pop or mov rex.R push rex.X xor xchg (bad) (bad) vphadduwd and sbb (bad) (bad) jo mov mov out mov cmp sub scas rex.WRXB sahf mov cmp out xchg mov int3 add push jnp or pop xor (bad) scas (bad) std fdivrp je (bad) mov and divb in cs rex.RXB addr32 jle out (bad) (bad) out rex.W fs (bad) or pop add (bad) out (bad) pop (bad) xor out fnop jo cmp (bad) mov rex.R (bad) (bad) jg pushq (bad) (bad) mov je je add jno fs rex.WR (bad) cmpsb push adc sbb (bad) pop mov add or retq mov rcrl xchg mov xlat or xchg cmpsl mov je cmp pop out cmp jo js pushq scas sub stc rex.RXB repz jne loope outsl nop or pushq fsubr outsl sbb adc jmpq insb mov fidivr mov jo (bad) out rex.RB or stc rex.W or (bad) pop (bad) rex.RXB imul pushq repz mov pop rex.XB sub push outsb (bad) pushq rex.RXB pushq repz pop (bad) (bad) pop (bad) mov push adc rex.WRX loope cmp cmp (bad) push xor ds (bad) out insl adc push rex.RX jb out rex.R ss adc (bad) jb sbb jrcxz rex.R nop xlat loopne adc pop cli insl (bad) rex.WX fidiv or insl sub fistp jo xchg (bad) push ljmp icebp (bad) adc (bad) (bad) (bad) sub (bad) xchg fsts hlt rex.WRX rex.W fs jo mov outsb rex.RXB mov xor ficomp jle test test (bad) sbb jle xor mov rex.W fs or sbb (bad) jne pop js (bad) rex.XB (bad) (bad) in out decl (bad) (bad) jl sub test pop mov leaveq push movsl (bad) test lods ljmp cmp cmp cmc pop rex.WRX rex.WRXB movslq out rex.WB rex sbb pushq jg jrcxz fistpl cmp adc (bad) xchg movabs mov loope ficoml pop sbbl cmp in outsb cmpsb iret iret sbb jrcxz fidivrl cmpsb lahf adc xor pushq mov cmp rex fbstp and mov clc outsb ja int jle outsb stc insl jo in retq pushq (bad) out pop xor imul imul (bad) cmp popfq scas xor (bad) jg es cmpsl (bad) cmpb (bad) icebp sbb test rcll cmp pop sub or (bad) xor push xchg push and adc (bad) nopl (bad) pop (bad) jo (bad) ss jbe pop jp push xor cmp add out rex.RXB jle (bad) (bad) in jnp rex.X jmpq rex.WRB (bad) xchg adc orl adc or cli (bad) hlt fdivrs ds pop loop (bad) rex.WRB out (bad) xor insb loopne jo faddl notb jg cs pop out cld xor jle (bad) pop fsubp xor pop cs clc rex.W rex.R cs pop sbb push idivb scas (bad) idivb (bad) test div jg imul (bad) fs jmpq movabs mov mov mov mulb out pop rex.W and pushq sahf hlt mov xor retq cli int3 lahf xor cmp incl cmp pushq rex.RX (bad) pop pop lret xchg (bad) (bad) push lahf rex.WRXB int fidivrl sbb popfq (bad) lahf and xchg jge rex.RXB outsb js fstl jb adc sub rex push ds out sahf ljmp mov (bad) (bad) pop pop in and stc pop ja pop add and lods rex.RB sahf div cmp cli rex.WRX mov ds rex.RX sub out pop fldl outsb sbb rex.WRB jg lahf adcl fs and jrcxz xchg cs pop lods xchg pop scas xchg (bad) js rex.W xlat push cld xchg xchg pop cmc xlat rex icebp jg (bad) rex.WRB in outsl (bad) mov rex.RXB sahf pop (bad) lret popfq mov mov pushfq mov xchg cmp rex.R cmp pop lock (bad) (bad) pop mov cmpsb outsl adc adc movabs (bad) in addr32 pop pop fcmovnbe pop rex.W iretq ds cmpsl xchg cmp rex.R rex.RX out or rex.RXB rex.WXB add retq ja xor insl cmp std out pushq (bad) xor int3 pop (bad) sti push sbb iret repz jg sub and cmp decl pop xor rex rex.W cmp repz fisubl xchg roll mov int sahf (bad) jo fist pop (bad) add rex (bad) fbld xchg or sub cld rex.WR ds fbstp xor cmp pop pushq xor out negb xchg outsl mov imul (bad) (bad) sub push (bad) pushfq push jmpq shrb push sub or mov lahf stos insl jo fstl psubsw cs xchg jnp imul rex.WRX fistp orps mov xor jo (bad) mov mov (bad) jo (bad) mov test fidivr fbstp popfq (bad) and xor or push and lahf (bad) movl push outsl rex lahf mov (bad) sub outsb cmp sahf sarb icebp punpckhdq stos enterq stos jne testb push (bad) mov mov (bad) fdivr (bad) sbb pop jle xchg ficomp fstps rex xchg mov jae xchg (bad) sub addr32 (bad) (bad) insb push mov pop mov pop and (bad) or mov (bad) mov retq cmp push sbb imull or sbb (bad) outsl cs jo mov jne xlat cmp mov rex.RB repz (bad) movsl (bad) (bad) cmc fwait add cmp mov rex.WRX mov (bad) movslq mov fisubrl jo shll (bad) (bad) sbb iret xchg cs sub and rex.RXB pop fdivr retq mov ja xchg sar rex.RXB pushq sbb test (bad) in pop and xor pop adc pop pop mov mov divb fildl rex.B movabs jno (bad) pop sub or ja fwait pop (bad) rex.WX mov addr32 in pop insb pop mov icebp push imul fistpl (bad) sbb cmc (bad) leaveq out mov sub mov rex mov push je scas or or cmp scas and rex rex es jge (bad) pushfq push push repz and or stc jnp xchg sbb (bad) cmc (bad) nop ja (bad) xchg in insl stos movabs add incl push (bad) (bad) outsl std lock jg pop data16 sbb (bad) (bad) scas ja rorl rex.RB xor incl rorb negb cmpsb adc (bad) jg mov cmc fistp cmp (bad) cmp (bad) rex.WRXB sti sbb push (bad) mov sbb (bad) cmp icebp sbb lret adc (bad) (bad) fist mov mov fdivl jle movabs inc scas (bad) xor sahf std gs mov and (bad) rex.WX fcoml mov and push (bad) idivb adc mov (bad) push movsb movabs rex (bad) decb (bad) imul rex mov int3 rex (bad) sahf rex.WXB pushq or fldt xchg cmp xor rex.RXB rex.WRXB adc mov (bad) movabs movsb jmp (bad) push sbb (bad) fisubl pushq rex.RXB rex.WRXB movsb jbe sbb pop xchg push bswap (bad) mov pop (bad) (bad) rex.W xor (bad) rex.WRB retq mov (bad) mov pop rorl or sbb sbb cmp (bad) (bad) or retq sbb mov jl addr32 outsl mov lods and rex.WRXB pop pop rex.WXB sahf rex.WRB xor fistp sbb rex or fucomip lock lock mov (bad) pop adc or xor (bad) addr32 mov hlt (bad) add mov insl (bad) scas jae (bad) (bad) movslq rex.WRB add cmp xor imul mov rex out fildll pop lahf cmp xchg push pushq (bad) sbb pushfq iret (bad) push pushfq xor pop (bad) or mulb or hlt scas (bad) idivb mov and or insl fstpl cmp push push lret jl adc mov adc sahf mov mov mov (bad) mov jo mov cmp (bad) (bad) cmp and orl hlt mov (bad) cmpsb insl pushq lea scas out lock (bad) ror jo and popfq (bad) (bad) xor xchg xor xchg mov jle mov in jge cmpsl lahf sarl adc cmpsl (bad) loopne pop mov lcall (bad) and adc or pop stc or in outsl imul (bad) fild fdivrl pushfq mov (bad) out cmp xchg (bad) pushq jno cmp lcall jg cmpsb jo cwtl lock insl cwtl xchg int3 cmp xchg cmp sbb sbb sub and sahf shr xchg fistp repz or out jns xchg cmp rex.WRXB cmp ja rex.R push scas mov movabs pop jo (bad) mov sub addr32 cmp pushfq xor loop,pn insl data16 out mov (bad) and mov ds (bad) notb mov (bad) scas pop (bad) jrcxz,pt (bad) out mov icebp (bad) fidiv mov cmp loop cli mov (bad) rex.XB jg mov stc sbb jb xor push (bad) insl or pop add (bad) mov in (bad) (bad) and push ficom xor add pop push mov (bad) mov sub rex.WRX add xchg jl (bad) push je outsb adc jo xchg xchg rex.W gs mov rex.W out fsubrl cmp jne pushq mov pop insb push cltd outsl push jo xchg mov retq rex adc lahf jae repz push (bad) mov jo mov loope pushq (bad) (bad) jo and callq push sbb cmp out ror (bad) loopne (bad) add and add xor (bad) std xor or mov cmp (bad) pop mov (bad) mov outsb push mov out rex.WRB mov sahf xor fnstsw movabs pop rex.WRX pop adc cmpsb sbb out rex.RB jo xchg (bad) (bad) outsb scas mov pop add rcll fimull push rex.RX jge and js push out (bad) pop (bad) pop (bad) adc cwtl pop cmp cmc jo sbb insl decb addr32 mov outsb rex.W cmp jle out pop (bad) icebp fimul rex.WR (bad) mov sti jle mov outsl and (bad) ds mov cli rex push (bad) addr32 (bad) ds jl pop pop and mov pop sub xor pop jl (bad) mov pop idivb jo jo (bad) (bad) out mov fisub jno mov out out mov pop lahf (bad) jmp outsl pop icebp (bad) out js (bad) fsubr (bad) outsb pop and sahf (bad) (bad) (bad) mov (bad) out pop jl adc mov (bad) pop out sub popfq xchg push sub movslq (bad) xor mov sub add and sbbl xor and sti mov jnp add pushq rex.RB jb xchg sar jle pop scas mov add (bad) add iret jnp (bad) sub rex.RXB fwait rex.WXB add xchg push rcrl and sub (bad) mov adc (bad) hlt (bad) adc xchg in xor pop cli add pushq xchg (bad) add cmpsl (bad) mov retq imul xchg movsb push mov sub cli and scas mov jno mov loop mov adc adc mov pop xchg rex.WRX pushq stc add (bad) shrl (bad) push fwait or lea pop btc add sub std mov xchg mov (bad) jb lahf add mov xor sbb (bad) (bad) out mov add std add leaveq mov (bad) lods loope lock test add popfq cmp or callq (bad) (bad) je rex.X push mov rex.R lcall (bad) add sti rex.WRXB jl idivl cmp xor idivb fisttpl (bad) out out mov popfq rex movslq xchg xchg out (bad) mov fwait (bad) (bad) push rex.W icebp stos cmp pop or cmp (bad) mov icebp (bad) cmp movslq (bad) mov fwait adc xor movslq mov mov fwait (bad) (bad) rex.WXB rex.W icebp stos cmp pop imul sbb rex.R jo movabs repnz andl sbb in outsb rex.W or rex.WRX rex.W add lahf pushq jns lret xor (bad) jo sti pop adc xor push xchg scas mov rex.W repnz (bad) cmp pop imul mov fwait mov xor (bad) (bad) lret incl fs xchg fldenv jo (bad) pop fsubrp mov sbb movslq pop cmp cmpsl out lret mov fwait sbb rex rex.RX cmpsb jns icebp fisubrl movslq (bad) mov sbb jae xchg rex.W icebp fstpt negl out insb mov xchg addr32 (bad) cs jo or (bad) mov fwait outsl (bad) mov movslq mov cs pop fucomip pushq insb rex.W jg mov cmp pop add (bad) mov fwait push (bad) (bad) out (bad) xor mov imul xor push stos movslq lret pop (bad) out (bad) mov fwait jg scas lretq movslq idivl and rex.W pushq (bad) rex.W cmp lahf pop (bad) (bad) (bad) add and mov scas cmp mov fwait rex.R jo mov popfq cmp mov fwait (bad) (bad) push andq cmp pop push mov or and icebp cmp push pop js mov movabs (bad) pop addr32 movabs movslq pushq cmpsb mov fwait punpcklbw xchg ficomp (bad) mov mov sbb or mov jno,pt andl pop jae xchg mov lahf lret jl mov rex.XB rex.WRB and xor jo jo sahf andl scas jle loope cmc xlat rex.RXB rex.WRXB mov jbe loopne pop (bad) sbb movabs or rex.WRXB out add es test ficom xchg fwait and divb jo rex.W cmp pop pop (bad) mov stos fwait (bad) (bad) pushq jo fstpt movabs xchg imul fwait and (bad) rex.W xchg pop jo imul mov sbb sbb jo out fbstp jo mov and fs cwtl jmp adc retq jo (bad) outsl mov mov (bad) cs jo rex.XB (bad) jp mov rex.RXB out out movslq or pop jnp js mov jg in rcrl pop mov fwait js jo outsb movslq push cmp out cltd mov fwait jbe sbb movslq jl (bad) pop pushq (bad) mov fwait insb (bad) notb out movabs (bad) jo push push mov and push xchg jl adc (bad) xor rex.WRB out mov xor push (bad) jae adc fwait jo xchg nop icebp (bad) rex.XB rex.WB add fwait hlt es jnp jp mov mov (bad) rex.WX xor (bad) loop test pushfq mov lock add mov movslq fs retq fidivr sub jno sub (bad) (bad) add rex.WRB push rex.WX sub push rex.WRXB (bad) (bad) jrcxz cmpsb add add lcall outsl adc rex.W rex.RX out mov jle cmp stos clc (bad) pop xor addl sbb add rex.RXB sub std nop jp fiadd test cmp stc xchg or xor sti fisubl sahf cwtl jg pop iret ficomp jle jne fwait movabs xor flds andl jp jae jns rex.RX rex.RXB or adc jp pop (bad) mov iret addl cmc test (bad) jp shl (bad) xchg rex.W xchg rex.B add cli mov add lret in push jle rcl js add xor or jnp add out mov add repz out cli add rex or (bad) add movabs incl lahf (bad) (bad) sub cmp (bad) jno add (bad) popq (bad) adc mov leaveq xchg lret add enterq outsb add mov loopne mov add cmp xchg add in lea jp lahf add andb add mov test adc rex.XB mov lock iret jns imul pushq (bad) popfq add mov pop in mov imul js add stos (bad) jnp test (bad) fmul movslq fwait xchg lahf sbb test sahf add (bad) je sub cmp outsb jle (bad) (bad) (bad) xlat loop hlt xor cmp mov add push movb lahf sub pop cmp gs fdivrs xchg jne add pushfq lahf push or and mov stos add rex.WX xlat cmp movsb sub jb hlt (bad) jo adc cmp mov xchg pushq in lahf (bad) out jb sub add xor jp jb cwtl int cmp (bad) add lods cmp cmpsl outsb repnz (bad) out pushq xchg pop cmc int add js mov jl clc popfq (bad) mov sub add imul (bad) testb cltd mov in adc repz rex.W sbb or adc rex.R imul xorps rex.RXB jp cs addr32 jg cmp and fs leaveq lret sbb movsb je lahf iret add xchg mov xor sarl rex.RX rex.WR decl sub adc (bad) (bad) jle sub movsb (bad) lods sub std add sbb mov mov add pushfq xchg mov sarb rex.XB lock xchg pushq mov mov stos lea pop (bad) mov in je retq insb outsl jle (bad) sub jnp movsl lahf rex.XB jp iret or test outsl xor xor mov jp jb cld ficoml add (bad) sahf movd (bad) loop (bad) and jo jnp mov adc pushq cmpsb mov xchg js sub jge jno cmp fsub cld adc mov (bad) cmpsl add out stos sarl pop (bad) push (bad) scas in rex.B sbb lock (bad) movsl (bad) js rex.WRB or nop pushfq xor jg (bad) loopne jbe (bad) jb loope test insl xchg sysret add rcll scas jl sbb xchg movabs push in test add (bad) mov xor cld mov rex.WRB lock (bad) rex.WX idivl (bad) xor loope jg cmpsl adc cmp cmp retq pushq and cmpsl add mov icebp add out rex.WRXB (bad) adc (bad) xor rcll xchg or rex.W rex.W rex.W add xor es add ss jns mov pop movabs retq in insb rex.W rex.XB add rex.WRXB rex.RB repnz xlat and cmp rex.WX cltd test (bad) add pop leaveq (bad) add ja xchg fstpt add rex.WR es hlt (bad) lods add roll add cmp add movabs jg stos pop (bad) or fwait fwait movabs (bad) or scas fstpl mov insl sbb jb pop nop add xchg sbbq adc rex.XB jb mov jnp mov cmp sub and pop rex.WRX or push popq insb mov add test sub or xchg xchg iret rex.WRB and xchg (bad) xchg sbb jmpq lock pop sahf add test in mov xchg pop nop xchg sub jg subl shll (bad) pushq jno jle retq mov sub lret jb xchg fadds mov movslq jg (bad) int3 xchg add rorl rex.WX es add (bad) sahf in sarl push movabs shrl in gs add cmp sbb je out jg sub and mov sbb pushq (bad) iret test rex.XB jp mov (bad) (bad) xor add mov es popfq mov add movabs (bad) pop add cs (bad) jns fbld gs std push add orl incb add (bad) (bad) (bad) add scas rorb decl xchg (bad) (bad) idivl clc mov add popq int movabs pop xor jg cmp test or jl and push cmp test flds mov sub sahf pushq lods adc jle (bad) (bad) sbb add jle pop leaveq imul icebp add rex.X rex.RX rex.WRX adc cmp push int3 (bad) sub xchg (bad) (bad) movabs jb xchg callq loope pop sub je lahf mov (bad) jae jle add movsb movabs rex.RX xchg lahf mov fs jne out sahf (bad) lret fwait add je mov xchg rex.B bnd rex.RX (bad) and add (bad) jg or or and sub (bad) jns lahf nop or jnp fidiv data16 or xorl test sbb in push pop add add pop and or jnp jge xchg (bad) addl (bad) (bad) xor retq test sub xor adcl sbb jnp jo fs rex.WRX jle or xor subl fwait cmp xchg jno es mov movslq sbb js push repz rex.WXB shl jp cmp icebp mov jnp adc stos imul mov gs xlat and scas iret jle roll mov (bad) fiadd add mov jae xor in outsl jne pushq data16 jmpq adc add adc (bad) add scas push orl mov sub jg xchg rex.X xchg (bad) enterq xchg cli add rex.RXB xor mov cmp add decb out and sahf sahf imul clc es (bad) mov bswap add jmpq mov sub shlb xor (bad) pop xor mov sub add retq mov mov (bad) adc add rex.WR rex.WB insb add (bad) rex.RXB pop add mov rex.RX mov leaveq lahf (bad) imul idivb jns fmuls xchg (bad) mov fnstcw faddl (bad) cmp (bad) leaveq xor in mov (bad) mov repz rex.RX lods push rex.WXB rcrq add jnp sbb addb fcomi data16 and (bad) mov out add xor pop sub or sub adc incb add or pop (bad) cmp mov out int mov fsubp mov cwtl or jo cmc mov jge and lret mov pop mov scas loopne xor jb add mov and in cs adc orl imul cmc fs fwait (bad) jge mov hlt sbb jb mov push movabs (bad) mov (bad) and ss fdivrp stos add mov xorb (bad) jg js je clc (bad) cltd scas adc add (bad) clc mov mov jo callq callq movsl lock (bad) add callq mov rex.WRX xor lret out mov add movabs or int outsl (bad) jb lahf rex.W out pop sub movabs rex.WXB lods jns xlat pop sarl mov add mov loope push frstor (bad) xchg jle or push movsb fdivl stos out mov andl add mov (bad) mull and movsb out fisttpl pushfq add scas test (bad) out nop and mov test test add fnsave (bad) mov pop (bad) or or jo jrcxz callq and mov mov cmp add outsb and popfq outsl add fisubrl movabs xor sbb jmpq pop jg push xchg rex.WRXB fisttp or add (bad) add mov test add pop imul lret test jg insb rex.WRB (bad) mov pop pushq rex.WR out notl outsl add pop pop cmpsb add mov rex.B sbb test add add (bad) sub xchg adc xchg sarl sarl pop scas rex.WX (bad) movabs out sbb mov mov jnp stos (bad) pushq enterq (bad) or xchg add cwtl mov cmp mov xor add sti push fwait sarb cmp test (bad) (bad) sub add lods (bad) lret push or in adcl fadds retq mov js fbld adc ds jne cmp mov callq add or fwait lahf rorl add xor rex.RX jb add cmp outsb pushq rcrl addl xchg pop out xor movabs sahf movsb jae rex.RX scas jmpq mov (bad) cwtl (bad) add callq lahf jp jbe rex.RX fnstcw sbb add rex jle pushq (bad) and scas jrcxz cmp add xor sahf js rex.WRXB fidivr callq gs xor jg cmp callq push cltd not add movabs pop mov jb sbb scas movabs add rex.WRB popfq jmpq cli add decl (bad) add sbb adc fiaddl out (bad) loop (bad) add add jb in (bad) mov js and rcrb sub (bad) fdivs mov xchg add push test pop callq rex.W rex imul repz std rex.RB and addr32 rex.W xchg (bad) pushfq add (bad) (bad) cmp xor movsl (bad) clc inc test add cli xlat fidivrl (bad) std add push cwtl fmul sub add push pushfq xor pop mov add rex.RX outsb mov mov cmp int3 (bad) cmpsl mov jp xchg testb or cmpsl retq pop scas (bad) rex.WRX (bad) int3 cmpsb push (bad) stos xor iret movabs rclb xchg in add rex.WB xchg pminub add jge cld add pop add popfq fldl xchg mov repnz negb rex.XB fs jg test rex.B pushq dec mov addr32 and add cmpsb rex.WB (bad) fnstenv sub or xchg pop mov je and sub fs pop mov (bad) add lahf in (bad) rex.WR add sub add int3 xchg cwtl repz adc lahf adc sbb (bad) retq outsl cltd push (bad) mov or add cmp jne jb (bad) rex.RB data16 (bad) pushfq (bad) jle clc xchg leaveq jbe pop lahf int3 xchg scas cmpsb gs out scas (bad) push (bad) (bad) repz xchg sbb outsl jb movslq add fs stos xchg mov scas clc mov rex.WRB adc (bad) add xchg sbb (bad) jb mov add iret add xor (bad) jne movsl sarq movabs mov adc xchg mov jp movabs or (bad) push (bad) jle gs mov mov and jge fs outsl test (bad) mov pop es mov push xor jg or (bad) add cmpsl insb and movabs sbb add idivl sub gs jge (bad) movabs lahf (bad) add add test (bad) cmp jge test movb or nop push (bad) add pushq vcvtpd2dqy adcl jg jmp and mov (bad) retq fbstp cmp psubd xchg stos lods pop (bad) sub add shll xor fldl je push rex jle rex.WR scas sub rcll add retq imul mov rex.RB rex.WX (bad) add jg xorl neg js add hlt (bad) retq add xchg repz lret rex.W pushq rex.X movsl cltd fidivl sbb or add jae callq jg pushq pop je xor and (bad) mov add stos jg fidiv mov (bad) (bad) (bad) add nop movabs xchg sarb repz outsb scas push (bad) (bad) add pop xor stc test adc pushfq cmp data16 mov retq lahf vmaxss or add sub (bad) push rex.RXB xchg cs pushq enterq fwait cmpeqps xorq cmpsb add cmpsl or (bad) hlt movabs mov rex.WRX xchg lea xchg outsl mov and (bad) xor rex.WRXB jnp jno lahf stc rex.W (bad) add lret (bad) add xchg cmpsb mov sbb jg jp sbb jle,pt pop rex.RX or cli (bad) pop jnp std (bad) callq lods cmp jrcxz mov out rex.XB rex.WB sub jle lods (bad) (bad) cmp sub mov rcrl jb stos (bad) mov rex or gs movabs (bad) (bad) mov mov clc movsb lret pushfq subb add cwtl (bad) jbe fwait cmc jg and movabs cmpsl (bad) addr32 pop jp pop (bad) and pop xchg sub fs add add out in (bad) xchg lea pop mov mov test pop movslq add je cwtl mov mov or pop jb out sub jmp jmp clc sub add scas xchg (bad) mov push jb adc out cmpsl (bad) int out (bad) (bad) retq rex.WRXB mov sub (bad) jno add jle rex.WB rex.RXB jb out ficomp lahf sbb xchg pop callq cmpsb lods jnp in rex.RX cld push rex.WXB xchg mov repz fsubrs stos add js rex.WRXB jae sub adc and sub add outsb enterq add es add or cmpsb (bad) adc (bad) push mov data16 movabs jb and cmpsb (bad) andl addr32 cmp loop lret mov add (bad) mov cltd rex.WR rex.X rex.WRX int3 mov (bad) mov (bad) callq je (bad) lret add fstpl add sbb insl rex.RXB rex.WXB pop (bad) adc callq (bad) je clc icebp ficom (bad) mov xchg loope outsb decl push hlt movabs fwait add fdivp mov movabs rex.WX addr32 adc rex.B rex.WRXB jp callq (bad) and xor and (bad) adc mov outsl (bad) sub xchg out stos addr32 mov xor (bad) (bad) cli adc stos xor jle xlat rex.RX jl lret adc add sub (bad) jne mov (bad) (bad) outsl data16 ljmp (bad) mov cmp lods fstpt and mov or (bad) fwait mov movslq int jae add callq jp or sbb (bad) mov (bad) jp stc (bad) push fs mov jb mul mov (bad) mov sub jbe xchg pop mov add movslq idivb (bad) (bad) jl xor sbb and ficoml cwtl xchg fcoms push mov mov or rex.RXB or (bad) rex.WXB out (bad) lahf out fs and lea lret jle insb (bad) movsb rcll rex.WX add (bad) jb cwtl fimul test callq subb adc xchg je in movsl (bad) push rex.W sbb rex.RXB and mov jge cmp mov pushq test add lods mov rex.W jle rex.XB fiadd add cmc cmp sub mov cmp or sar fiadd testl jb rex.WX stos (bad) add jbe mov lahf movabs add xor out lahf sub in idivb add adc scas jmpq or xchg (bad) add rex (bad) xorl mov xchg xlat insl add xchg movabs jmpq mull rex.WRXB xchg imul repz (bad) add rex.B rex.WB xchg cmp and cmp add rex.RX (bad) imul jae mov xor scas mov (bad) popfq mov lret popq movabs cmp retq adc loopne and and loope push add jl sbb xchg repnz push mov rorl add or lret xor sbb adc (bad) add push lods callq fsubrl add (bad) jo movabs jle (bad) vphaddbd cmc rex.WRXB pushq push test add (bad) adc scas movsb sbb (bad) and sub mov pop mov int3 pushfq cld fstl sub lods adc jge xchg jne rex.RXB cmp out or xor sbb (bad) fbstp rex.RX repnz rex.WRB and (bad) (bad) fs pushq xchg mov push shlb (bad) (bad) (bad) sti adc adc (bad) (bad) (bad) (bad) std repz push rorl andb pop (bad) rex.WXB fldl jno loope mov movabs jl xchg rex.WRXB enterq sub push rex.R lret (bad) rex.WRX (bad) (bad) cwtl mov mov nop subl sub test fwait rex.RX mov fimull fidiv clc xor adc bt bt or jmpq imul cltd mov rex.WB adc mov mov rex.RB adc pushq cli in (bad) (bad) xchg sbb jne mov in leaveq out push mov mov ds mov addr32 and test (bad) rex.RX mov loop sub mov lret stos rex.WB adc adc mov pushq push push stc hlt mov xchg sub cmc sub clc (bad) retq js test popfq xor fs (bad) (bad) (bad) sti pop icebp mov push (bad) (bad) (bad) (bad) cmp loopne rex and rex.WRX (bad) xor rex.XB cmpsl (bad) (bad) (bad) (bad) mov cmpsl (bad) jp add cld rex.WRXB subb pop xchg clc pop out rcll and mov movsl mov cmp pop lret mov (bad) mov xlat mov fimul (bad) fidiv adc pushfq mov test subb (bad) mov test pop adc adc outsl jmpq mov push add std test xor in add mov mov (bad) retq rex.R mov (bad) push sbb out fimul sbb (bad) cmpl mov minps gs gs retq pushfq (bad) mov rex.X repz es push mov fild rex.WRXB mov rolb rex.WRB addr32 out fidivrl jb push rex.WR loope rex.RXB and add and jl nop mov xor xor xor movsb cmp imul imul xor icebp (bad) (bad) (bad) decb push out (bad) mov in negl not mov out rex.RB in movabs push movsl (bad) cs (bad) pop fmull loope jl (bad) cmp (bad) (bad) cmp out mov int jge (bad) and xchg int cmp sub add add mov scas mov xor scas sbb mov sub out (bad) sub rex.WRB and loopne pop lock xchg sbb rex.R mov sahf pop stos rex.WR ds in rorb hlt rex.RX insb fimull rex.WXB movsb mulb mov jbe rex.WRX (bad) (bad) sti ror mov (bad) (bad) (bad) (bad) mov outsl cmpsb std jo fnsave movabs cmc sbb rex.WRX scas adc adc out repnz rcll pushq mov or mov in rolb add rex.RX rclb sub (bad) movsb rex.XB mov icebp test outsl lret pop adc jb jp lods es rex.XB lods lret (bad) rex.XB in in sarb rex.WX (bad) mov loopne jg popfq push rcl mov test movzbw rcr push and bsf shrd push xor xchg push mov push shr xadd push btc xchg adc mov shrd add mov sar mov cmp or jmpq vdivpd adc stos callq jmpq negl rex.WRX movabs ss out test lods addr32 movsb (bad) fsincos (bad) je sbb insl fldenv (bad) mov (bad) or scas add (bad) and jrcxz (bad) cmp mov (bad) shlb hlt lret in cmpsl (bad) jo (bad) mov cmp xchg rex.R xor rex.WRX loop sbb (bad) (bad) std (bad) lods cmp cmp mov push sub or pushfq or rorl adc sar (bad) (bad) jmpq mov jne xor mov and cmp pop mov cmp jmp sub jl xor sub and leaveq movslq loopne andl testb (bad) jmpq clc cmp jmpq stos jmpq push lock std std xchg rex.WRXB jns sbb (bad) sub setns xchg (bad) movabs or jge test test (bad) pop push roll (bad) test lods xchg mov rex.WRX mov (bad) rex.RX xor scas (bad) xchg (bad) xchg rex.RXB enterq flds adc lock pop mov rex.RXB xor jns and pop out insb rex rex.RXB mov add (bad) xor lret in and pop xchg and enterq int (bad) in mov leaveq out xchg negl rex.WRX adc add and add (bad) sub out cmc outsb jo outsl repz pushfq (bad) pop jmp (bad) int (bad) (bad) sti addl out (bad) (bad) (bad) (bad) (bad) test adc jmpq (bad) (bad) (bad) jmpq jbe lods push cmp fsubs shlb jnp sub xchg and (bad) (bad) cli pop jns sub lods mov clc fmull rex.XB (bad) sub int pushq jbe rex.WX in movslq rex.WX stc bt stc cmp cmp jmpq jmpq rcrl (bad) cmp or (bad) ficompl movabs pop (bad) movsl stos stos (bad) fdivrs adc mov jle mov rex.WRXB mov pop mov xor xchg add rex.WRXB rex.W rex.X out movsb roll rex.B fsubr mov or (bad) sar rex.WRXB cmp xchg clc (bad) and jne repz pushq xchg (bad) (bad) sti test (bad) (bad) (bad) decb xchg mov add add or mov pop pushq jne pushq mov xor sub adc lods push clc (bad) pop fs add nop clc clc scas mov je movsl xchg sbbb fidiv (bad) mov in xchg cmp or jmpq jmpq je adc movsbw movzbl add mov data16 testl shld bsr shr lea jmpq loopne sbb lock (bad) (bad) movabs clc fwait mov (bad) fdivrp rcll (bad) sub xor (bad) or sub lods es push cmp (bad) jrcxz mov out sahf xchg mov clc cltd xor (bad) sub mov pop in loope mov fstpt jb imulb (bad) adc and (bad) (bad) sti and sahf fwait (bad) (bad) (bad) incb pop outsb (bad) outsb and and outsb add (bad) (bad) incl mov push in lea mov and push xor xor je,pt (bad) jae mov sub movsl retq cltd and (bad) xor mov mov in and addr32 (bad) enterq movsl and adcl jbe movabs add and cmp add xchg or out fcmovnb add test retq adc clc adc add (bad) loope (bad) xchg retq cmp ficompl (bad) (bad) sti xchg movsb cmpsl cmpsl mov (bad) (bad) (bad) jbe sti mov or or pop adc scas decl and sahf rex.WX movabs cmp (bad) fidivrl fwait movsl cld or xor (bad) (bad) callq movsb push ror jmpq adc cld cmc mov cs lahf mov (bad) (bad) or pop insl (bad) and adc and mov jle cmpsb cmc jle jg adc xchg cli rex.XB mov out mov and rex.RB (bad) jmpq outsl pop fisttpl jae sub stos mov fbld pop cmp sub (bad) pop jle rcrb (bad) negb neg scas sbb xchg out movabs mov pushq (bad) pop pop cld (bad) iret mov in or mov sub cmp sbb ss mov adc inc push pop (bad) (bad) (bad) sti movabs sbb rex.WXB movabs jg adc int3 (bad) xor add or sbb roll pop (bad) mov cli clc xchg (bad) mov sub sub in mov add add jp add nop rex.WR outsl add jrcxz jae mov in cwtl add adc jae xchg rex.WB push jmpq (bad) (bad) rex.WXB outsl leaveq lret (bad) xlat jb push sbb cld out mov out fdiv pop xor xor lret test (bad) sub xorb jb push mov pop loop lret cmpsl rolb loope (bad) (bad) stos jnp mov (bad) mov jmpq callq jo and outsb imul lods rex.WB es fdivl mov pop mov negb int3 pushfq push (bad) (bad) out or gs rex.RX fisubr movsl rex.X adc (bad) pop mov xchg out popfq xor cmp mov or (bad) (bad) sti xchg nop loopne sub (bad) (bad) (bad) jno sahf mov roll jae imul fnclex (bad) (bad) (bad) push stos (bad) popfq addr32 stc movabs adc sub mov sub rcrl outsb (bad) sti mov cmp mov jmpq test xchg and test callq leaveq jmpq je jmpq jne mov not movzbw mov jmpq jmpq callq jmpq je stc cmp jnp je jmpq rex.RXB test (bad) jae mov cwtl fs jmpq sahf (bad) rex.R rex.WR data16 in faddl jno rex.RB jo pushq addr32 add imulb addr32 cmp mov (bad) pop jmpq pushq test mov fidivrl cmp sbb sbb (bad) jle out xor cmp (bad) (bad) decb (bad) (bad) (bad) (bad) repz (bad) (bad) mov sbb (bad) mov test rex.WRXB (bad) mov ss addr32 mov test sti (bad) lahf (bad) jb loopne movabs test ficoml xor cmp sub add stc (bad) or jmp retq int3 add mov jmpq jb jrcxz and (bad) sbb push loop sub stc fistpll or mov (bad) frstor imulb xor (bad) mov cmp and jns mov xchg lret (bad) push movabs (bad) mov cmpsl lods (bad) cmp out outsb jne mov stos (bad) mov clc out xlat mov cmc icebp test rex.WX cmp test (bad) cmp mov mulb (bad) (bad) sti mov rex (bad) xchg xchg fimull fisubr outsl and (bad) rolb add add cwtl addl (bad) mov mov xorl rex.RX negl add rcr movsb int3 xchg cli cmp pop pushq rorb jmp sbb jne stc jmpq not seta movzbw mov jmpq cmp cmp clc cmp jmpq mulb subl mov rex.X je popfq cmp lods rorl out adc (bad) sti xchg jae add or out sub rex.WRX repz fnstsw jbe sub rcrb out cmp (bad) or out rex.WB jmpq (bad) (bad) (bad) std leaveq add xchg test sbb adc rcr (bad) (bad) movabs (bad) callq mov imul push sbb (bad) rex.W scas xchg (bad) (bad) xor mov pop ds pushq mov (bad) sub pushq cmp movabs test adc movabs insl xchg lret jmpq push (bad) pop xchg mov mov callq xorb popfq rex.RX (bad) fwait rex.WB mov ffree stc test shr xstore-rng cmpsl vpsllq scas adc (bad) xchg cmp mov rex.RX mov sbb xor nop loop fdivrp (bad) (bad) cld mov (bad) (bad) (bad) (bad) incl jrcxz mov xor int3 and (bad) sbb xor int3 sbb add add add or add (bad) add mov sti (bad) movslq cmpsb lea or insl int xor rcll lock and rex.R xchg jmpq outsl jbe sub (bad) je sub or in lret (bad) cmc jrcxz push (bad) insl jmp jnp cli out shrb pop lods sub test cmp adc jg (bad) mov (bad) sub xor notb (bad) outsb xchg ds push (bad) or sti in (bad) insl jnp pop (bad) insb pushfq mov repnz (bad) imul (bad) sti inc pop leaveq pushq (bad) (bad) (bad) (bad) movsl rex.W cli mov dec cmc lods or femms mov mov std movsb mov and add add xor cmp adc or xchg xchg leaveq mov (bad) sub sarl (bad) push adc lahf adc (bad) or (bad) jo fsubrs in rex.WR stos mov in retq (bad) jmpq jmpq jb test bt bt stc cmp jmpq je pushq movabs pop pop jle mov movabs js in (bad) push (bad) xchg lock pop mov loopne mov xchg lock xchg fucomip mov movabs push add xor in mov jl sub add or out ffree sbb (bad) (bad) cli icebp jbe mov (bad) (bad) (bad) std (bad) mov (bad) push mov movabs sbb mov movslq push sbb (bad) (bad) (bad) (bad) callq (bad) orl jg jle stos xchg (bad) stos and (bad) xor push shlb (bad) push test jns mov shrb ds mov out pop out jb jmpq jmpq mov ja pop retq je ror sbb sub and push bsf bswap mov shr jmpq leaveq lahf rex.WB stos (bad) imul movabs pop push scas sub clc lods (bad) xor movabs sahf jb sahf and mov cmp icebp cld mov (bad) (bad) adc addr32 rex.XB mov xchg lahf sti popfq ja adc fnstenv cmp movsl adc push mov and and mov cmpsb data16 (bad) (bad) cli shll (bad) std mov (bad) cmp or repnz insb xor mov push nop cwtl add push (bad) (bad) (bad) dec rex.RB mov (bad) push lock xor mov push loop or cmovle push ds lods test jnp lcall pop loop (bad) (bad) jg outsl std movabs and jae (bad) mov out mov lock sarb rex.WR (bad) sub cmp xchg push movabs xor (bad) xadd sub pop xor push push xor notb (bad) divb jl popfq fildl (bad) jo movsl repz jg testb out in loopne sahf retq es cli mov jns rex.WXB mov lret (bad) clc (bad) fsubl mov imul shrb ficoml (bad) sti loop and (bad) inc xchg mov add xchg jmpq cli or (bad) popq mov (bad) jb mov sbb mov pushfq cld pop rex.X push es xor in (bad) imul (bad) notl (bad) push sub (bad) imul xchg (bad) fisttp icebp or fs (bad) lret movsl and (bad) (bad) (bad) jmpq popfq rex.W rex.WRXB pop je xor out or sbb (bad) (bad) sub mov rex.X rex.RB and sub notb mov pop sbb sbb jne insb (bad) mov in fcmovnbe lea (bad) iret imul addr32 jnp (bad) (bad) sti pushfq sub (bad) (bad) (bad) jnp mov and pop data16 loopne mov notl add (bad) movsl and jbe mov adc mov jbe sbb (bad) cmc fs clc rex.X movabs (bad) (bad) (bad) jmpq fs insb sub pop cmp movabs or rex.WRXB (bad) (bad) (bad) rex.RB lods sti test rex.WXB rex.R (bad) out stc (bad) lahf std mov mov movabs enterq (bad) xacquire pop cwtl cld sub add add movabs (bad) rex.WR xchg loope or sub (bad) cmpsl xchg rol movabs jbe (bad) movabs rex.WR movsl int adc sbb repnz jbe or neg sub jmpq or repnz push loop (bad) (bad) insb test jae (bad) pushq rex.RXB push xchg (bad) out sbb ss mov in cli xor stc loop sbb loop sbb (bad) in lret cli (bad) adc (bad) negb (bad) ror in xor or (bad) lods (bad) cmp rex.W (bad) (bad) cld pushq rex.WB (bad) (bad) (bad) decl stc orl stos insl sbb sbb adc xchg ficomp (bad) addr32 test xchg leaveq adc lods add adc cs (bad) cs rex.WRXB rex.RX xchg imul jge fisub fwait add sbb rex.XB sub jg xor add add pop mov movsl jae sbb movslq (bad) push imull jns mov (bad) leaveq pop jo and (bad) cltd sbb pop rex.WX push xor (bad) cmp xchg sti (bad) cmp je mov repz add callq clc lahf (bad) sub sarl rex.X xor xlat mov movslq rex.WR rex.WB lock jae mov xorl ja (bad) lret (bad) fst sub out (bad) lret test rex.WRXB gs mov jb lock jb outsl add and fwait cmp scas xchg rex.XB jge mov mov mov (bad) (bad) (bad) cld rex.WXB fwait jp (bad) (bad) (bad) (bad) ljmp (bad) movsb rex.RXB rex.RB adc sub sbb sbb and mov (bad) cli xchg mov xor jp pop xchg adc add add sub (bad) gs movabs test roll lret scas mov fs addr32 (bad) pushfq mov rex.RXB outsl stos jg repnz int xchg push movslq (bad) add outsb rclb in (bad) xchg fsts push mov adc mov out (bad) xor (bad) std out rex.WRX lret lods fnstenv (bad) pop hlt mov popfq lahf rex.X es jb popq mov movsb int jne mov out (bad) xor mov mov sbb pop (bad) sub (bad) (bad) (bad) cli lods cmpsl (bad) mov (bad) (bad) (bad) std (bad) imul jg cmp xchg push xchg scas (bad) or mov roll movabs adc (bad) jle movabs imul rex.X fnstenv sbb callq or rex test jns rcll xor pop or ja sbb addr32 retq add or stc (bad) (bad) mov test and fimull pushfq cmp decl mov xor test (bad) (bad) (bad) int addl and sub mov (bad) xchg xor (bad) sti std jo adc lods std (bad) movabs pushfq jl cmp (bad) (bad) cld mov (bad) ljmp xchg or or rex.WRX addr32 out enterq movsb (bad) add pop (bad) test xchg cwtl rex.RXB (bad) rex.B ss incl cmp fiadd icebp xor (bad) mov xor xor xor mov je xchg adc movabs pushq cmp (bad) push out lods enterq mov add in rcrl stos (bad) negl int mov push xor (bad) mov cmc out out push adc mov (bad) and and and mov leaveq rex sbb rex.WR movabs xchg rex.WR (bad) adc movabs movabs out push sti movabs sbb in movsb sbb adc (bad) (bad) decl out xchg addl (bad) and imul clc (bad) adc push xor callq xor je (bad) orl cmc rex.X mov subb jge push (bad) adc fs (bad) sti rex.WX adcl (bad) mov jmpq bt clc cmp jmpq jmpq jne movzbq ror bts mov cmc sub bswap not sub and mov clc sub stc test pushq test bt cmp jmpq jmpq and (bad) and or mov add lods iret outsb rex.WRX insl sub rex.RXB fs xlat add (bad) mov cwtl ds loop loope xor mov (bad) movaps pop fs mov fidivrl sub ficoml jnp js pushq sti rex.WRXB pop fdivr (bad) (bad) (bad) cs enterq fdivl nop sti in insl mov adc popfq (bad) (bad) rclb clc popfq cmpsb sti cmp lea insb rex.WRB fstp repnz fs rorl sti sub lahf int3 xor mov and jmp (bad) xchg xorl sahf clc gs pop rex.R repnz cmp fwait mov jbe data16 pop cmp adc jns rex.WRXB ss jns (bad) clc xor hlt movsl push movabs stos pushfq xor add outsb xor pop jl repnz cli (bad) movabs jmp rex.X xchg rex.WB (bad) fadd (bad) movsb pop fs (bad) mov cwtl retq sub sub in jne mov jrcxz (bad) push cmp pop (bad) (bad) (bad) sti pmuludq (bad) std out xor in out mov and (bad) test or push rex.WRX rol push mov cmc (bad) jp out cmp lea nop fwait mov lcall movslq jns mov rolb mov (bad) jrcxz in rcr mov out shrb sbb std (bad) mov pop fsubs cmp addr32 push push cmp mov clc fisubr std rex.W jb xchg int3 mov cmp in push (bad) or fcoms xor rex.R ja (bad) lret sti xchg mov insb (bad) lret cmp push (bad) or cmp jp in out fwait (bad) clc xlat cld orl mov rex.RX fs cld mov xlat int (bad) idiv (bad) mov cltd mov pcmpeqb pushfq out adc frstor lods adc callq fadds jb rex.WR sahf xor scas (bad) (bad) (bad) cld por (bad) imul (bad) (bad) out sub or lods mov and add jno adc (bad) movabs push test pushfq cmc or rex.WB rex.RX (bad) (bad) andl (bad) fwait fwait add andl mov stc xchg mov movsbw lea jmpq retq and xchg int3 rex.X stos (bad) out adc pushfq mov test rex.RB rex.RXB pop test ficompl xchg sahf rex cmp xor js jnp (bad) (bad) (bad) std (bad) cmc and or pushq fcoml cmpsl rex.WB xchg pop (bad) lock repnz in push (bad) mov jge jmp pushq sub (bad) (bad) cld fmuls (bad) (bad) ljmp or fisubl (bad) (bad) add sahf xchg out pop fisubrl sub rex.WRXB rex.WRB lods mov adc (bad) (bad) sub xor rex.XB mov (bad) pushq cli mov cmp jmpq mov movslq jbe or cmp out in rex.WRXB mov xor sub vpand xor cltd rex (bad) jae lcall xchg (bad) (bad) (bad) xor fisubl pop rex.B push mov insb mov (bad) (bad) (bad) in cmpsl sbb (bad) rex.WRX (bad) std or (bad) (bad) (bad) fist fs rex.WRX rex.X rcrl mov (bad) (bad) pushfq mul jbe (bad) rex.B or (bad) jae xor or xor rex.RX ja out xor cmp fistpll mov (bad) (bad) stc test cmc cmp jmpq pushq jmpq negl mov rex.W (bad) in fdivr (bad) fidivrl insb or sti cmc cmpl repnz cwtl cld rcll (bad) lods test rex.RXB in mov scas std roll adc cld jno cmp pop je (bad) shr loopne (bad) test adc fmuls sbb movsb lea sahf hlt cltd js je movabs pop pushfq (bad) sar fistpll (bad) (bad) (bad) sti (bad) xor (bad) incb pop (bad) rex.WRX sahf nop or mov xor loopne (bad) (bad) (bad) incl and movslq (bad) fnstenv jmpq or xchg mov xchg addb mov subb xchg add in nop mov pop rolb rex.WRX adc or mov cld pop jmpq fucomi fidivrl cs gs mov outsl xor (bad) mov xchg push mov leaveq mov mov sbb sbb and add pushfq mov and add xor loopne rex.W rcrb cmp and fisttpll mov xor iret and or add fs push jge rex.WRXB cld addr32 pop decb mov mov mov rcr bswap sub stc mov movzbw sbb mov jmpq rcr sar sbb mov setl movsbw ror cmp push movzbw bsf adc mov bt push rol sar or push add sar jmpq (bad) fnsave pop cmp stos jb bnd (bad) int loope mov (bad) fldt (bad) mov jl pushfq rex.RB test ja push movabs cmp mov xchg (bad) (bad) enterq in push out rex.RB outsb (bad) retq (bad) jno (bad) pushfq test cmp (bad) retq push movslq fidivl mov imul pop xor cmp (bad) ss callq or cld (bad) (bad) (bad) cld (bad) mov jle (bad) retq mov stc mov jp lea hlt addr32 rex.X sub mov cmp and jnp out cmp movabs movabs mov rex.RXB xchg mov add rex.RXB mov fldcw enterq adc push (bad) (bad) (bad) sti lahf (bad) (bad) (bad) jae (bad) (bad) (bad) jle sbb cmp mov sbb movslq fildll movabs add in mov and xchg add loop (bad) (bad) (bad) (bad) cmp sub loop fs xchg xchg mov pushq mov lret (bad) add pop js fdivrs sbb xchg pop int orb hlt cmp sbb fucom xchg push sub roll clc clc cmc jae rol jmpq pop scas add sahf cmpsl cmc add (bad) fild xchg mov gs mov cmp test mov flds outsb rex.RB (bad) (bad) enterq loopne or mov rex.WRB fs je mov test xchg scas jo stos loopne nopl mov movabs jp (bad) (bad) (bad) cwtl and (bad) sbb lock loop movabs imul pop lods add push mov mov xchg lods movslq (bad) decb or fldt push retq je add add sahf pop jge dec popfq stos rex.WR mov iret (bad) (bad) movabs cmp mov (bad) retw xchg jl mov bnd (bad) mov sbb mov add lret es jmpq jmpq jmpq bt cmp jmpq jmpq or mov rex.RX xor lret movsb cld callq cli cld sub and xlat xchg movabs (bad) movabs and fisttpl loopne mov fcmovu (bad) jmpq and movabs adc add jmp add movabs pop test mov xor jge push mov retq (bad) out jno mov sbb (bad) (bad) sti movabs (bad) jae pop es (bad) mov rex.WR adc nop (bad) dec add add add in clc jrcxz fcmovnbe je rex.WRB sbb outsl lahf fisttp sbb popfq mov and out cmp sti (bad) xor pop (bad) pop add xor mov jrcxz pushfq sub or scas adcl add and test cmp test test test jmpq mov and movsbl rol mov rol test jmpq jb cmc cmp clc jmpq repnz jmpq lods add pop in jg sbb fmuls push stos sbb insb xchg (bad) in sub jmpq or rex.R (bad) mov fadds mov sbb cld insb (bad) sti or repnz clc in jnp mov mov cmp (bad) push cmp add (bad) xor cmpsb mov sbb sbb pop fbstp in or in (bad) (bad) (bad) decb sub stos int gs loopne or (bad) (bad) repz push and in pop (bad) (bad) test incw or rex.WRXB loop (bad) lods mov sub movabs pop int (bad) (bad) outsb pop (bad) xchg xchg std push sub and in rex.R sbb (bad) jmpq fwait loope cmpsb (bad) cmpsb (bad) fwait mov imul clc movsbl lea jmpq clc mov bt cmc stc test jmpq sete movzbq mov jmpq jl in add (bad) rex.WRX ja add leaveq cmc xchg divl fsubrs pop out clc and test xchg cmp outsb jp and (bad) rex.XB (bad) repnz pop cmpsb fwait imulb jns outsb jno test movsb or adc sub pop push (bad) ja fwait and (bad) repz jge xchg xchg insb adc rcr sub mov scas movabs (bad) (bad) (bad) cli (bad) std fist (bad) std lret ss mov sub add jae (bad) icebp or (bad) fprem1 out (bad) (bad) (bad) incl rex.WX pushq mov sub cmp scas mov sub (bad) jno in sub (bad) push rex.WRX or sbb (bad) psraw sub fwait sub mov shr sub add enterq bswap lea jmpq or jmpq ja cmc clc jmpq jrcxz sbbb andl adc adc rex.WRX data16 shrb push xchg out xchg mul fisubrl cmp rex.RB mov (bad) cmp (bad) mov adc in shrb ds outsl rorl cmpsl andl xor xchg (bad) pushq jle (bad) (bad) cld (bad) pop cmp out (bad) (bad) (bad) (bad) jo (bad) gs jbe xor and xchg sbb ds je ss push loopne mov rex.B adc stc jle mov or ss and xchg out mov sub add add stc je test adc out lods xchg push and sub out gs and fwait cmp mov in nop mov jp int mov xor outsb (bad) lahf fildll and sbb rex.WX in mov add adc or popfq mov rex.WRB icebp jrcxz test (bad) mov xchg rcll (bad) fldl rex.W insb mov callq shll jp xor ja outsb imulb cmp adc rex.WRB xchg rex.X in sbb pop rolb je rex.WXB adc push (bad) test push cmp idivb (bad) (bad) cld addr32 cmpsb push loope (bad) (bad) incl (bad) push enterq fistpl hlt xor (bad) add in or std rex.WRXB mov icebp andl and (bad) mov (bad) cmc sahf nop jbe pop movsl sub add sbb rep movabs in (bad) repz (bad) sub (bad) cltd mov iret pop rex es mov add fisub movabs jne (bad) mov xor cmp cmc fbld sarl or jmp jrcxz sar push (bad) mov (bad) jno int add and rex.WXB icebp rex.WRB jns rex.RX fisttp (bad) cli sub jne rex.RXB add lret jnp lods add (bad) (bad) lret rex.WXB sub movsb hlt push pop popfq pop out and (bad) imul xlat (bad) adc lock imul sti rex.B lock adc (bad) (bad) (bad) (bad) and fwait mov mov jmpq js ffree shl iret shlb xchg push sbb (bad) rex.WX push insl (bad) rex.WX data16 push jge mov mov xchg (bad) xchg data16 stos mov sub adcb gs push sbb xor (bad) adc out rcr mov (bad) rex.WRB rex.WRXB rex.XB (bad) in pop addr32 imul push xchg xchg or sbb pushq sub pop lods push pop rcll imul rex.RX pop xchg rex rex.R or (bad) jp movabs xchg add mov rex (bad) pop xchg lods mov (bad) (bad) (bad) decb (bad) (bad) (bad) decb cmpsl mov mov (bad) js stos test xor and vandnpd rex.W repnz pushq jb adc jg (bad) xor imul lahf rex.WR rex xor orl rex.WRB mov jmp sub xchg and retq jne mov mov jmpq jmpq jbe shr sub neg mov dec mov jmpq cmp jmpq jmpq jmpq (bad) (bad) (bad) (bad) (bad) mov out (bad) mov insb mov (bad) rex.WRXB fs push test (bad) lods (bad) movsb neg scas (bad) sahf adc push (bad) and insb adc movabs sbb loopne and rex.R push (bad) pushq rex.RB rex.R jp mov xchg add loopne cltd movslq movslq (bad) ss pop mov fs in (bad) (bad) (bad) (bad) cld adc test (bad) repnz std outsl (bad) add xchg mul rex.WR add add jb (bad) (bad) fistl jle mov push (bad) pop rex.WRXB cld scas movabs pop rex.XB jl (bad) (bad) lahf clc jrcxz adc int3 pop (bad) rex.RXB mov repz cmp adc or push (bad) lret lods fucomp cltd xchg adc loopne xor pushfq jne (bad) xchg fiadd add rex.W sti test pop or pop pop ss ja mov (bad) (bad) or imul rex cli (bad) (bad) mov (bad) fptan lock movabs sbb or jae fwait cmp adc cltd pop rex.WRX (bad) (bad) sti movabs addl pop xor add add push fs test loope rex.WRX ss loope roll pushfq cmp xor in jp (bad) jrcxz lret in xchg rex.R in jb callq (bad) mov rex.XB (bad) test popfq mov mov or clc cmc clc jmpq cmp cmc bt mov lea mov jmpq jmpq movb stc cmc cmc cmp test jmpq push sub btr sub sbb mov stc bt sub jmpq (bad) outsb rex.WRB (bad) loope (bad) outsl test sbb mov add jmpq rex.WX stos push jo (bad) cmpsl ffree or mov rex.WR or ja clc popfq fmul sub rcr (bad) enterq in cwtl mov xchg outsb scas callq adc pop movslq xor (bad) rex.WR (bad) (bad) sti std fiaddl (bad) (bad) fdiv cmp rex.R cs rex.R cmpsb push (bad) jns adc (bad) stc mov pushq int3 lock movabs mov cmc lock add jno cld (bad) movsb mull xchg rex.RX cli push jg or lea rex.WR mov xchg fiaddl jp cmp adc imull in pop mov (bad) (bad) jns adc rex.X rcl sbb xor clc test punpckhdq adc ja xchg sbb imul (bad) stos jne adc (bad) pop cmp pushfq loopne pushfq sub mov sbb sahf and int xor (bad) movsb addr32 adc mov std fdiv (bad) (bad) (bad) std and add add or rclb xchg addr32 cmp cltd pop cmp (bad) sbb fldt jg mov sub lahf (bad) movabs imulb std jns jg movaps push mov adc mov or ss or sbb test int3 movslq cmpsb sbb mov sti sub (bad) (bad) stos jmp xchg sub jmp xor (bad) sbb (bad) mov (bad) jg jbe add or out jns mov cli sbb sub pop jle (bad) rex.B insb stc xchg cs movslq loop (bad) in (bad) nop int3 and (bad) (bad) sti rex.WB mov test (bad) (bad) (bad) sub fs xor cmpsl push lods adc or enterq fdiv out (bad) (bad) push jle rcr jns xor fsqrt repnz (bad) mov jge lock lods rex.X loop cmc movabs in loop movabs add mov or fnstcw push js mov jmpq adc push xchg cmp movabs push sub movabs movabs xlat (bad) (bad) jmp mov (bad) in lea test jp (bad) (bad) (bad) sti mov sahf pop pop xchg movabs std or or sbb (bad) (bad) insl rex jbe cltd retq pop (bad) jae jno cmp addr32 icebp imul add or movsl and sbb in mov add (bad) sub lret scas sbb sti push jrcxz cmp add jns int3 (bad) addr32 mov mov es mov (bad) add cmpsb orl decl add btr sub stc mov dec cmp bt btr mov shl dec rol movsbl mov cmp clc sub stc repnz jmpq xlat stos adc test int3 test cmc push je pop or mov rex.X and xchg jp clc ficomp rex.WRX xchg (bad) add rex.X mov xchg xchg mov movslq add (bad) (bad) jnp jae sbb test (bad) lret pushq xchg movabs (bad) cld sub (bad) (bad) (bad) callq (bad) movsb out mov xchg add pop pop adc (bad) (bad) and (bad) mov out adc add add sbb jno scas or cli fstp jno rex.WR xchg jg addr32 mov mov xchg outsl adc push adc xchg (bad) mov rex.WX pop xchg add jne sub sub mov (bad) (bad) jmpq jae clc cmp jmpq jb cmp jmpq jmpq callq cmp movzbl add js mov bt cmc cmpb je jne shr sub sbb add mov or jmpq lea bswap mov jmpq jne cmp test jmpq int xchg and or sub enterq add pushq fdivp sahf mov adc (bad) add add mov mull mov subb xor or movabs xor rex.WX fyl2xp1 adc and rex.RX rex.B ror adc (bad) (bad) sti mov push pushq (bad) (bad) (bad) decb push repnz add js (bad) sbb mov and rex.WRX pop in (bad) (bad) enterq cli (bad) xchg add retq (bad) xchg mov (bad) add add rex.WXB xchg add mov mov scas (bad) in rex.B sub sub rex.WRX loopne mov rex.RX add js cmpsb sarl xorl lret js mov mov psubsw fild lods loope jnp mov (bad) lods shrl (bad) sbb int3 loop (bad) enterq (bad) (bad) jb test mov (bad) push mov fwait adc popfq stos (bad) push movsl mov (bad) jno fdiv (bad) gs jne pop sub rex.RX and xchg lods push retq mov in (bad) (bad) (bad) loop mov lock data16 (bad) (bad) (bad) mov movabs mov cwtl add test pushq cmpsb jmpq push push or test xchg es and rex.WRB movsb sbb add fimul cmp ss lret imul lret gs sbb and and mov jg and repnz stos (bad) mov add (bad) rex.RXB (bad) repz out and popfq lret add xchg pop hlt mov adc cmp (bad) mov sub xchg rex.RB jb lret repz jle xchg pushq rex.RXB fdivrl sub xor out jmp imul fstpl pop (bad) lret jmp mov mov repz lret outsl jmpq mov pop xor mov lea ss int3 movb movabs outsl (bad) xor add fidivrl sti or (bad) (bad) std callq sbb sti push test jmpq sbb adc (bad) (bad) jmpq out callq or fist push push rex.WX (bad) cmp cmpsb (bad) cmc popfq lret and mov iret mov fbstp (bad) add mov xchg rex.WRX xchg (bad) test retq cltd leaveq mov adc jb mov (bad) (bad) jmpq not clc clc rol cld std cmc stc popfw jmpq gs (bad) push sti fwait test xchg xor loop hlt jmpq adc or mov in out xor pmulhuw xchg rex.XB fbstp (bad) cmpsb mov mov cmp cmpsb sbb leaveq mov xor cwtl (bad) movabs mov rorl cmpsb fwait jge add pop rex.RXB (bad) (bad) cld rex.WRXB pushq (bad) ljmp (bad) add out subl push (bad) callq lea lret jns (bad) imul test leaveq retq mov rex.WR jp and fstpl movsl (bad) (bad) cmc push pop add add rex.W rex.WR fisttpl or sub (bad) test movabs (bad) sub (bad) jg mov jg adc rex.RB jno movslq outsb or lods add pop fsubrs fs fisttpl repz stc xor jmpq cmp cmpb jmpq movabs rex.WRB pushq (bad) scas scas sysexit test (bad) push fs stos mov loopne (bad) jo movabs pop adc scas sbb or rex.RXB rex.WB xchg test rex.RXB mov mov movabs sub mov (bad) jae add add (bad) loop imul (bad) movabs roll data16 rex.WB jno push or fimull movabs retq fimull push (bad) callq rex.WRXB in ficompl jnp push rex pushq and (bad) icebp and fiaddl ja ss retq js (bad) movabs outsb add scas fisttp pextrw stos (bad) lods rex.XB rex movsb rex.WX (bad) jns (bad) pop leaveq repz insl rex mov fidiv sti rex movsl leaveq sbb jl rex mov jnp xor jno sub mov rex sub lret mov add rex.WR out pop push mov or or fs fucom (bad) mov sahf push jnp rex.X jae rex.XB xor xor push pop (bad) jae rex.X mov adc loope or repz cmp jns sarl rex.X sarb mov add lods rex.RX (bad) jg rex.RX mov or rex.WB cmp fnstsw rex.RB rex.RB out jbe rex.RX rex.WX vmovsldup cltd nop icebp std scas sub xchg (bad) cmp scas (bad) fisubl lods (bad) cld pop (bad) stos pop (bad) js rex.WRB sbb (bad) lods lahf xchg rex.WRX jle jb (bad) adc fstps lahf lods (bad) (bad) cmp (bad) (bad) or (bad) (bad) sub enterq rex.RXB sbb icebp icebp xor jl jb (bad) mov cmpsl (bad) sbbb or and rex.WXB sbb sbb pop subl nop fdivr add rex.WXB mov and jns xchg pop mov rex.WX (bad) mov adc cmp (bad) sbb int rex.RX adc fcoml int cmp outsl (bad) mov jbe repz cli adc mull xchg mov push (bad) rex.W jp imul fs nop jnp mov pop testb (bad) (bad) or stc add mov (bad) rex.W rex.WXB pop mov pop cld icebp xchg mov outsb int3 (bad) lods fwait add jae insb jp scas add mov (bad) mov cltd cld rol stc stc cmc popfw jmpq jmpq callq stc cmc bt or jmpq cmc in add xor int out pushq faddl (bad) cmp int sbb (bad) int3 gs mov push out rex.R mov jmpq fidivrl test (bad) stos push sub add ja loope (bad) out (bad) sbb mov mov jmpq rex.RXB cmc xor cmpsl rex.WRXB and push xchg mov (bad) mov rex.RB sub or mov (bad) jae mov lret sahf lock (bad) sbb out cld fdivr sbb rex.WXB andb jmpq sti (bad) cmp add (bad) (bad) (bad) (bad) movsl jbe add outsb (bad) rex.W or add add cmp sbb (bad) gs fstpl sar jrcxz push repz pop sub xor cmp mov js cmp scas add (bad) push cmp rex.WRB loop mov sbb rex.B rex.WRXB add (bad) jmpq jge test (bad) ficom pushfq movabs add (bad) pop jbe test mov lret movabs (bad) cmp adc rex.RB push sbb cltd add stos (bad) scas int jnp and cwtl and or jnp sub (bad) out out (bad) add add or add push rex.WXB fdivs loopne xchg test push (bad) fistl cmpsb test (bad) xlat mov fdivs (bad) lret sbb rex.RXB retq sbb lods cmpsl test fcoms mov sbb sahf repz callq jmpq rep mov lea movsbw pop jmpq jmpq rol bswap sbb sub not jmpq cmp movb stc test jmpq je bt jmpq mov not lea mov not jmpq jmpq rex.B rex.R push xor cs insb add xchg in std jmpq movsb xlat or (bad) add shld rcl lea bsf mov stc test inc rcr add mov movl shr rcl mov stc stc test cmp jmpq jmpq ja test rcl sub (bad) lock shl add neg movsbl sar mov inc mov bt stc bt stc repnz jmpq mov bsr cmp mov bt sub jmpq je cmp sub clc cmp bt cmc cmp jmpq xchg jbe sarl popq (bad) push jle cld imul es xchg ds pop adc lret movabs xchg movsb repnz js mov ja repnz mov add std mov (bad) fildl lcall rorl retq sbb jmp jge jge outsl clc cmp (bad) or and push pushfq xchg repz (bad) jae jmp fildl test (bad) (bad) sti clc (bad) loopne (bad) (bad) (bad) (bad) (bad) xlat pushfq js or push (bad) fisubr sbb int3 mov adc movabs popfq divb jns mov jne pushfq mov add add rex.W rex.WRX rex.RXB pop (bad) popfq int movabs enterq fs adc sbb or and mov data16 (bad) jno hlt or scas rclb rex.RX fwait (bad) fdivrl cld xchg rex.WRX adc popfq scas jmpq jmpq je jmpq js or push mov fs jno mov and (bad) movsl pushq lret and in movb mov mov cmc cltd pop add rex.WXB mov rex.X mov mov movabs lret and cmpsb jnp sbb lahf jno sbb pop insb (bad) leaveq pop lods pop fnstcw mov shufps (bad) (bad) sti lcall (bad) (bad) (bad) loop test addr32 jb jge jl mov sbb add (bad) push mov notb pushq mov fld out mov jle sbb xor (bad) loopne (bad) outsb mov sbb punpcklwd movabs movabs (bad) in (bad) cmp cmc push xadd mov or cmp and sub jmpq repz movabs jo rex or (bad) xchg sbb mov ss rcr add jp (bad) mov xchg cwtl rex.RXB test mov or leaveq fcmovne pop (bad) add mov pop sti rex.RXB (bad) rex.W test rex.WRB repz rex.WR (bad) (bad) cld rex.WRXB imul (bad) (bad) ljmp div sub xchg mov (bad) out rex.B add push test rex.X sub outsb sub adc pop rcrb (bad) sbbb jge je clc pop ds xor nop mov pushq push ja pop (bad) sub xchg mov xor pushq adc (bad) sbb fs mov sbb xchg cwtl and ds es addr32 or (bad) (bad) push (bad) movsl (bad) rex.WRXB loopne sub xchg pop rex.WB sub adc mov fcom sarb and data16 cwtl hlt loop and sub rex.WRB (bad) add push (bad) rex.WXB rex.RB js test popfq mov (bad) cli movsl (bad) add ja (bad) cld shrl (bad) loope insb xchg rex.WB (bad) jns adc loop (bad) (bad) (bad) std out fcoms sub cmc test sub jne or adc decb (bad) (bad) dec es pushq (bad) add or lea xor sub pushq adc xchg push insl adc fmull ds hlt fidiv pop stc xor addr32 sbb je jmpq test clc cmp jmpq add or pop jns outsb retq push leaveq rex.R data16 (bad) clc lock imul mov outsb cmp test subl imul jae (bad) (bad) test (bad) (bad) sbb cmp in rex.WXB cli mov cwtl rex.X adc fs stc loope cmp mov cli mov (bad) push mov es jge outsl sbb push cmp lret cmp xchg cwtl idivl sub sti cmp (bad) (bad) (bad) (bad) sbb cmp or jbe pop adc test (bad) (bad) lcall pop (bad) xor pop pop movsl xchg retq jae rex.WRX fnsave movabs push sub sbb test xchg lret xchg test jbe push (bad) notb adc mov (bad) xor and popfq mulb cmp std push mov retq xchg rex.XB pushfq (bad) out cmpsb pushq scas rex.RXB mov int xchg repnz stc (bad) nop adcl sub in mov mov rcrl adc movabs movabs iret mov (bad) sub rex.WB rex.X mov mov sbb mov fnop xchg int test sbb movabs (bad) sbb cmp movabs jmp xor fbstp adc and (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) xchg fstps (bad) clc mov add add fildl jno pop fs jnp outsl add popfq insb (bad) ss pop in decl sbb and mov rorb mov out jp add jo loope xchg add stos add mov (bad) imul callq clc sub shrd test sub rcl add shld mov dec mov clc repnz jmpq sub loope sbb ja popfq (bad) mov and (bad) cmp imul (bad) (bad) mov add add mov pop (bad) rex.X mov mov add xor mov sub (bad) mov rex.WXB (bad) mov mov fdivrs jo repz (bad) stc (bad) jge (bad) sub fdivrp (bad) lret lret (bad) lock cmp jo jbe (bad) (bad) notb (bad) (bad) (bad) sti mov push rex.RXB (bad) (bad) (bad) (bad) xchg mov jle cwtl cmp sti cmp push rcll mov cmp add add insb out icebp (bad) push cmp adc push rex.WX (bad) push rex.RX push adc int mov callq gs retq stos cmp movabs mov mov xchg add ss outsb pushq movslq (bad) or mov xor lock rex.B rex.WB lock lea rex.B add add pop gs (bad) or sub rex.RB mov rex.X out adc push lods sbb mov cmovno test testl cmpsb (bad) (bad) (bad) (bad) xor (bad) (bad) rex.WB rex.R or test sbb movsb jge push add (bad) push out or jb repz imul pop pop adc xor (bad) (bad) (bad) pushq xor fdivrl add mov rex.WRXB sub ss (bad) jmpq sub adc retq rex.RXB (bad) test je cmp hlt test add jmpq mov jmpq (bad) pushq mov rex.WRX sbb cs cld sarl xlat fistl (bad) hlt loope jmp retq (bad) cs or sti (bad) fist cmc pop movabs mov movabs cs or mov mov ds cmp emms cli mov rex.B sbb sti (bad) test (bad) (bad) dec jmpq xchg mov push (bad) and mov stos adc add add cs ficoml jb std movabs pop rex.R xor cmp mov (bad) out out pop int test stos rex.WRB loope sbb mov jp movslq ds and pop fisub leaveq stc mov add out pushq shl fmuls rex.WRXB cs cmp iret cmpsb mov sub mov nop add fnstsw (bad) sbb lret mov sub sbb and sbb std jrcxz lahf mov lock mov mov mov (bad) rex.WXB rol rol jge (bad) (bad) cld mov (bad) (bad) (bad) callq mov or or (bad) imul jmp out (bad) adc push icebp rex (bad) mov adc adc fstp rex.WRB (bad) addr32 jmpq lea jmpq mov mov (bad) xor mov mov in fnstenv int and or fcmovnbe add pop push insb pushq (bad) sbb callq push movsl cmp (bad) xor movabs xchg sub and and fwait adc jmp rol popfq cmp (bad) (bad) cli mov cmp std xchg lods sbb movsb lahf jge pushq mov rex.WRXB and fwait (bad) (bad) mov scas out pop xchg (bad) rex.RXB in (bad) mov adc (bad) (bad) push js and sub xor jb jae mov and mov movabs rcll (bad) loop out (bad) and movslq comiss or rex movslq push insb cwtl in adc jmpq xor (bad) xor in sti cs rex.RXB loope rorl push add in btr pushq popfq sarl pop out (bad) scas xchg dec idivb adc (bad) jb out (bad) movslq fisubrl loope mov add mov jl clc stc sti fwait mull rex rex.WRX mov jnp movsb in movsl test pushq (bad) (bad) (bad) decb in sbb cmpsb test mull add addr32 movabs retq (bad) jno (bad) or mov and negl repnz (bad) (bad) (bad) fstpl insb jae jb fld sbb or int3 shll mov and (bad) shrb (bad) rex.X xor js xchg ljmp jl (bad) (bad) mov and divl (bad) std push adc outsb mov and jmpq lea jle callq sub movsbw (bad) testl bts clc mov stc test jmpq je cmc bt add cmc cmp jmpq not mov retq jbe insl clc cld fmuls lret (bad) jg lahf (bad) mov stos (bad) (bad) (bad) mov mov and hlt out fsubs retq (bad) fucomp (bad) mov movabs lods pushfq pop and callq (bad) xchg (bad) stos popfq (bad) (bad) adc jle pop cmp (bad) insb sbb (bad) retq js movabs fcmovnbe (bad) mov adc hlt adc cmc je add rcr (bad) (bad) mov lods add loop (bad) xchg adc outsb jo (bad) (bad) push out sub rex.WRB movslq gs jnp push xchg fcmovnb imul (bad) mov test (bad) (bad) (bad) std ds sub or xor rorb gs cmp sbb push rex.RX (bad) icebp mov (bad) (bad) (bad) cld add jp,pt (bad) (bad) (bad) (bad) fucomip (bad) or icebp (bad) ja hlt cmpsl out and shll rex.W cmc sar fisttpll (bad) lret jno movsl out or mov add add pop lock push cmp pop enterq lret (bad) (bad) mov rex.RXB enterq jns js cltd xchg pop jl jbe pushfq cld (bad) fs scas int3 stc push add movsl (bad) add (bad) cmpsl or mov (bad) (bad) xchg cmp add jne push fmuls repnz mov adc add mov mov loop rex.WX pop sbb cli (bad) cld cld (bad) je stos (bad) push rex.WXB rex.WRB mov (bad) notb xchg mov movsl stc repz (bad) (bad) sti callq mov leaveq stc rex.WR adcl cmpl cmpsl (bad) ficompl (bad) (bad) (bad) incb (bad) mov (bad) xor sub xor mov (bad) (bad) (bad) (bad) (bad) mov mov in (bad) and scas xchg movabs test pop loop jb push rex.XB cmp mov out jmpq pop push cmp xchg callq (bad) roll mov (bad) (bad) and gs decl test and (bad) cmp rex.R or movsl clc lret cmp movsb adc or out fcomp es movsl gs lods clc lahf fldt rex.RXB or rcrl jle xorb (bad) shrl imul test enterq add jae xchg ficomp movabs jp add (bad) rex.XB jge (bad) (bad) cld add out fwait movabs pop jrcxz in sbb imul sub add rex.RX (bad) addr32 (bad) or mov clc or mov ds push rex.R xchg pop out in retq (bad) cmp adc and xor push (bad) jo mov push cmp sbb mov sub xchg mull sar mov jmpq (bad) jno pop nop (bad) jbe outsl pop pop movslq (bad) add rex.WXB (bad) xchg fldl jb movsl xchg (bad) movabs mov sbb or jle pushfq pop xchg addr32 jmp xchg in pop rex.WX iret lods rolb fildll stos pushq or orb mov iret or retq push and rolb sbb (bad) jb jno adc jo rex.WB std cmp outsl (bad) or adc shll rex.RXB (bad) (bad) cld rex.RXB enterq (bad) (bad) decb sbb add add pushq xchg ficompl rex.W cld mov sbb (bad) xlat mov movsl cmpl add retq (bad) shrl pushfq lea cld fbstp lea (bad) or stos and mov xchg movsbl adc mov shl add std leaveq popfq test mov loopne movabs cmp mov in add bswap insb (bad) movabs rex.XB andl ja or out adc jrcxz out (bad) (bad) scas movabs (bad) sti retq pop (bad) (bad) (bad) (bad) movabs movabs jmpq movabs cli adc retq pushq fisubr movsl mov sbb pop rex.X (bad) mov (bad) sub (bad) mov add sub sub mov movabs ds or pushq sub sbb sbb rex.WRXB add jp repz sub jg pushq subl sub ds movabs rex.RB adc stos lsl (bad) mov (bad) rorb xlat (bad) lock (bad) imul pushfq add in add pop fs scas add xchg rex.WX cmp or (bad) sbb or xchg fldcw popfq mov hlt loopne and add jge jns mov jno imul rorl xchg adc (bad) (bad) (bad) sti lods clc mov (bad) decb test adc sbb test movsl (bad) (bad) mov push (bad) pop loope scas iret (bad) js sub in cli movabs xor lret push push ja adc out movabs jbe xchg movsl xor jle xchg xadd retq or xor in movsb add cmp add (bad) jle rex.WX push jae mov push sub xchg mov or roll movsl or fwait mov insb jp nop std (bad) jae sbb outsl (bad) addr32 mov add testl mov cmc cmp jmpq adc (bad) rex.XB cmp (bad) rex.RX sar stos callq adc mov mov fldcw (bad) (bad) mov test jae (bad) sub pop mov std rex.WRXB xchg (bad) (bad) add (bad) lahf jno cs repnz (bad) cmp sub pop enterq mov movabs xor es mov stc insl push lret xchg jrcxz cmc movabs rex.WR scas or sbb jb rex.RB add (bad) add add jbe xchg (bad) lea sbb jb (bad) lods add jae loop push jae adcl sub movsb xchg mov out (bad) rex.R (bad) cld push jle rex.WRXB push sbb cmp mov rcrl jns adc mov (bad) divl sahf decb je sub mov not movzbw mov jmpq (bad) (bad) mov movslq pop in sbb cmp movabs shr int xchg xor out add rex.B (bad) mov outsl push cmp rex.RXB bnd fwait pop ds mov mov addr32 (bad) mov jle js cmp (bad) add xchg jne (bad) (bad) mov retq sbb cmp sbb mov add insb (bad) (bad) (bad) sti cwtl jl jmp (bad) (bad) (bad) (bad) ja xor data16 not adc pop sbb add test lcall scas add cmp loop (bad) (bad) js icebp and xor rcrb (bad) outsl stos (bad) fidivrl jne cwtl (bad) mov outsl int3 mov xchg enterq or mov (bad) xor or jnp (bad) test cs std (bad) imul and (bad) (bad) jmpq mov pop retq sbb jno sbb movsb leaveq movsb (bad) pop jg pop xorl sub icebp (bad) mov outsb sahf rex.RX xor rex.X push adc fist cmpb (bad) mov rex.RB clflush pushq push mov xchg leaveq (bad) lods cwtl notb movslq mov (bad) cmp sbb notl rex.X mov lods (bad) or rex (bad) (bad) sti ja shlb (bad) (bad) (bad) push loope outsl and outsb adc in jg (bad) sahf lret and retq sti (bad) (bad) (bad) callq fdivs cmp (bad) mov mov (bad) test insb leaveq (bad) lods mov pop (bad) cmp mov (bad) (bad) mov cmp (bad) add je movabs js lret mov (bad) test cmp jmpq xor jns mov cmp xchg mov jl loop or gs mov movabs and xchg (bad) ja pushq test repz (bad) mov ss cmc push or je (bad) fs pop pop adc cmpsl (bad) fstps sub and jnp outsl pushq pop cmp (bad) outsl cltd sub jnp xchg rex.WB in sbb mov (bad) (bad) (bad) sti out sbbl inc stos je xchg rex.WB cmpsl mov imul jle (bad) movabs sub (bad) xlat rcrl (bad) rex.R add xchg mov sbb and cmp (bad) andl or jg push xor movabs mov xor int rex.WRXB or pop enterq pushq jbe sbb clc jmpq retq loope shll out out xor (bad) and (bad) adc (bad) test adc cwtl insl pushq movsb movsl mov adc mov xrelease mov stos fisubl (bad) (bad) cld sbb shrl dec retq fsubl pop fist cmp add mov in xor mov pop (bad) (bad) (bad) sti movabs adcl fdivl psllq int mov or add add std mov push push sbb (bad) fcomi insb (bad) sbb (bad) rex.WR rex.WRXB fnstcw rcl je mov pop clc mov (bad) outsl jrcxz mov push cmp rex.B mov sub addr32 idiv bt cmpb jmpq jmpq movzbw mov js cmc test cmc and cmp jnp cmc add jmpq imul stos fdivrp popfq (bad) insb push (bad) pushq rorl mov (bad) (bad) push push test add (bad) (bad) cmp (bad) cmp fwait pop or push cmc mov test xchg mov mov retq mov imul (bad) (bad) xor (bad) mov mov rex.WRXB rex.WRXB (bad) pop jae (bad) jb xchg mov (bad) repz rex.XB in xchg icebp xchg fistpll sbb mov (bad) insb push pop cmp (bad) decb (bad) (bad) (bad) dec outsl (bad) and sub rex.WRXB sbb (bad) mov (bad) or jbe push cmp (bad) fldl movaps adc pop mov xor cmp lret xchg jae sbb ds pop loope or mov cmp lret add outsl (bad) sub adc xor imul (bad) rex.RXB push shl in (bad) nop std xor loope add mov xor jge rex.B push stc int3 icebp lahf rex.X and in (bad) hlt (bad) cmp cli cltd rex.RX jg cltd rolb rex.WRB jmpq sbb cmpsb sbb pop (bad) cmp rex.R mov push fild (bad) clc rex.WX sbb (bad) (bad) decb imul sub sub xor (bad) cmpsl cmpl xor xchg in jle iret pop loope jnp mov data16 sti movsl stc fisttp jne cld pop in (bad) xchg mov outsl or lock (bad) push jne mov outsl (bad) rex.WXB (bad) or rex.WRX retq sbb in rex.XB lret pop insl jmpq rex.W (bad) pop jne movabs mov rcl (bad) leaveq hlt mov sbb movsl adc shrb retq add mov rcrl (bad) (bad) (bad) mov (bad) in hlt rex.XB jmp rex.R sbb js pushq in fs es cmp xor mov or add xchg (bad) jge andl loop (bad) (bad) cld jae out or (bad) (bad) callq cmp rex.WR jno int std mov sub (bad) rex.WRXB or push xchg and add add (bad) hlt lock (bad) rex.W (bad) pushfq mov imul mov rex.WR fs (bad) movabs sbb (bad) fwait (bad) (bad) xlat jno jl rex.WRB xchg rex.XB (bad) imul xor movb bt cmp test cmp test jmpq cmp jmpq jmpq jae jae js jne js stos jmpq je test movb test clc cmp test jmpq jb bt cmp jmpq callq and movzbl inc add add mov test jmpq xchg subl negb lock jmpq cld fsubrp xchg (bad) jmpq lods mov ja rex.XB mov je movsl pushfq (bad) push out sub mov mull add addl sbb (bad) mov add push xchg fimul pop xchg sarl fidivrl js mov (bad) (bad) sub sar (bad) hlt rex.RX in (bad) adc rex.RXB (bad) (bad) decb nop pushq push jg rorl add or in rex.WXB (bad) ss cmpsl sbb rex.X movabs je (bad) jbe xchg mov insl mov out jnp scas mov out jbe movsl mov xor cmc bt cmp jmpq je jmpq stc shr sbb clc mov clc stc test or jmpq jmpq stc test jmpq test jmpq jnp jb jmpq (bad) stc testl mov or rex.X test sarl loop rex.WRB rex mov outsb or movabs xchg sbbb movsl mov cmp mov shrl rex.R (bad) iret pop sub gs and jmpq out (bad) (bad) (bad) cli stos xor loop (bad) (bad) (bad) std mov mov push (bad) pop sub ja add nop int and (bad) int xchg and (bad) int3 mov or imul add add add rex.B mov fmuls cmc (bad) rcrl push or rex.WRB adc pop xchg mov sub mov jns rcr idiv sbb jge mov xchg cld cld insb add xchg rex.WXB shlb mov out out sbb (bad) imul loopne notl movabs push ror scas rolb int xchg add test test (bad) add mov sub (bad) mov sbb (bad) jb xchg sarl sbb jo enterq out rex.WRX pushq or test xor or retq add (bad) (bad) sub (bad) sub mov rex sbb mov (bad) je (bad) (bad) sti stc sti rex.R gs or jmpq (bad) jb fld (bad) (bad) xchg add mov movsl (bad) cmp adc xchg not cli movabs std push (bad) mov xchg adc lret xchg mov rex.WRXB rex.XB (bad) (bad) loop xor jno cmp (bad) jae jb push mov sub movb insb sub (bad) int3 clc loopne orb jge (bad) mov imul sub jae fild adc (bad) mov rex.WRXB repz out jmpq sub jrcxz jmpq (bad) sti lock pop (bad) (bad) (bad) (bad) dec js fsubrs and jp ds jns xor rex.WRXB in lcall (bad) int (bad) push cmp and (bad) jle mov in fidivrl mulb adc jge (bad) xchg mov fidivrl sub (bad) bnd (bad) or ds cwtl (bad) xchg sbb test cmp (bad) lahf hlt mov cli callq loop sti jp or insl pop lea mov sbb xor cltd jp rex.X adc rolb add (bad) jne icebp mov rex.B gs or xchg in (bad) ss in fadds sti (bad) fdivrl mov (bad) jns xchg mov jp rex.R lock xchg (bad) xchg and (bad) (bad) (bad) sti xor xchg or (bad) (bad) (bad) adc mov cld sahf (bad) fist scas xchg movsl bndldx retq jae (bad) (bad) xor push jb (bad) (bad) push sbb add insl rex rex.RB rex.RXB imul out mov shll loope xchg fidiv lret movsb in mov cmp cmp addr32 pushq repz test ds movabs cmp (bad) vunpckhpd or sub (bad) es stos mov jmpq shrb movabs lahf stc adc (bad) rcrb or cmp cmp (bad) cld outsb (bad) (bad) sar (bad) (bad) decl mov add pop mov fcom adc mov pop or (bad) (bad) add add or je out (bad) push (bad) sarl pop (bad) movabs (bad) lret (bad) push xor rex.WB (bad) or pop sbb (bad) enterq rex.WRXB pushfq (bad) (bad) ja (bad) (bad) mov cmp stos movsb scas jmpq jmpq adc movabs in (bad) jrcxz adc rex.XB out retq adc cmpsb or rex.W shl loope sub lahf jp je (bad) adc rorb mov jb (bad) (bad) and sbb out sub add lret sarw (bad) popfq out and push cmc (bad) adc xor (bad) (bad) (bad) cld mov callq (bad) (bad) negl movabs (bad) fwait add fisttp lret hlt (bad) adc shrl in ss jge add sbb and iret pushfq mov hlt push xchg mov add add or cld stc or mov xchg (bad) nop (bad) mov mov (bad) (bad) (bad) pop rex rcrb hlt push cli mov (bad) pushq adc std (bad) mov cmp callq fdivr (bad) mov insb rex.WRX add and xchg cmp rolb incb stos (bad) rorl (bad) ss or (bad) sar hlt mov rex.B sub mov gs adc cmp mov pop jmpq test xor cmp sbb sub push stos (bad) (bad) (bad) cld (bad) xor adc (bad) (bad) incl rex.XB jne adc (bad) cwtl and (bad) enterq mov or xchg rex.WXB add xor lahf mov callq (bad) jae imul xor and and sbb jns (bad) rex.WR adc add xor pop ss xchg mov addr32 (bad) repnz pop ss jmpq stc shr cmc cmp cmp jmpq fimul and mov sbb negb ficoml mul leaveq movabs cmp rex.RX rex.RX shll pop clc xchg (bad) jrcxz (bad) mov adc subl sti rex.WRXB xor mov and sbb (bad) xor (bad) xchg xchg ds or fdivl mov mov test (bad) push (bad) (bad) (bad) cld jl sub or (bad) (bad) lcall rex.WRXB rex.RX mov pop push in data16 xchg repz (bad) mov add add (bad) push xor and pop test mov adc mov out jno loopne jns test fldcw cmp pushq mov jmpq xchg mov fidivl xchg rex.RX int div (bad) movabs cmp pop clc cltd leaveq sbb cmc bswap lock rex.XB sbbb (bad) (bad) adc movsb adc in hlt enterq adc mov xchg mov mov out mov movslq repz mov cltd mov fcoms es cli out or add pop loopne (bad) (bad) sti rex.WRX jmp (bad) (bad) (bad) (bad) sub xor mov sbb rex.RX (bad) (bad) ljmp incb and pushq and pop shrb pop rex cmp repz movabs and mov js sub (bad) shlb (bad) jmpq ror mov dec shld btr btc sub dec neg mov cmp mov test jmpq cmpsb or test in in adc enterq rex.RXB add sub mov push mov pop (bad) in stc shlb rex.WX (bad) mov movsl movabs shrb mov mov cmp scas or cltd lods leaveq ds rex.X cs rex.WRX stc cld movabs movabs (bad) add pop movabs (bad) (bad) (bad) sti test (bad) (bad) (bad) decb cmp (bad) adc sti movabs add int3 mov pop std stc (bad) xor mov mov jp (bad) mov add (bad) stc popfq and (bad) jl (bad) movslq add movb (bad) mov jns test xchg and rex.WB jrcxz fsubr in js repnz (bad) jmp sub add sub mov (bad) sti lret icebp mov xor rex.WB jrcxz cmp mov popfq xchg es or (bad) test stc push and rex.WB retq (bad) rcl jle jmp xor enterq (bad) in pop rex.WR out callq (bad) and sub cmc lods (bad) xor mov adc js stos in rex.RB (bad) retq rex.WX mov (bad) sti jp nop rex.WRX (bad) (bad) (bad) pop rex.W loopne in pushq cmp pushq (bad) (bad) fnstenv icebp or sub xlat or icebp mov test sub std xlat js and clc pop clc mov rex.W (bad) stos std rex.WRXB (bad) ss mov jge outsb (bad) sub mov sahf lea mov lea mov jmpq (bad) (bad) shrl insb cmp test (bad) push (bad) mov fucomip rcrl or mov (bad) lock lock or (bad) shlb test scas sub (bad) mov in (bad) cmp sti outsl mov ja mov or adc sub or test xchg (bad) mov sub sbb fstps test in jb mov (bad) movabs movsb addr32 (bad) mov push pushfq push cmp cmp jp (bad) fwait xchg mov cmpsb mov pop mov jle insb add imul mov (bad) movslq (bad) icebp movslq sub (bad) mov lods cmpsl lret xchg (bad) (bad) std test rex.WX (bad) incl jrcxz (bad) (bad) decb (bad) (bad) (bad) decl mov jmp rex.XB push test (bad) hlt (bad) sub (bad) add jno imulb sar push insl (bad) adc jl jbe or lods movabs jns decb rex.WX test jne lock mov jmp sub jrcxz sbb fadds add cmc test sub shr mov bt cmp cmc stc test jmpq jmpq je jmpq fsubrp jrcxz (bad) jl lahf rcrb int3 pop scas mov sub sbb cmp fcmovbe es fldcw mov adcl vpaddw out adc lods (bad) mov xchg pop cli jno push mov add (bad) pop addr32 fs mov xchg (bad) cmp lock sbb (bad) movslq xor cmp adc rex add (bad) (bad) std fs mov mov sbb stos xchg rex addr32 xchg lods movabs mull neg popq (bad) loop insl adc pop sbb push xor push rolb icebp mov pop cli mov cli mov pop rex.RB fstpl cmp adc cli add rex.WRB retq adc mov sub int lahf loopne cli notb rex.X rex.X or (bad) mov stos mov in out jo (bad) jmp ja rex.WXB rol sbb jne (bad) movabs out xchg iret cmc cmp ss cmp sbb jmp enterq xchg (bad) (bad) rex.WXB rex.RX (bad) (bad) (bad) cld lea mov (bad) (bad) (bad) (bad) ljmp push sbb mov mov xchg addl adc (bad) int movslq add loop popfq (bad) retq or in xchg in xor sahf rex.WX addr32 cmp rex.WRXB or adc mov (bad) hlt adc out mov movabs xor mov rex.R xor repnz rex.WR (bad) jg,pn enterq (bad) xor (bad) lods movsl (bad) rex.WX rex.WXB fwait lret sub test jo or xor jno movabs cmp enterq rex.WRB ds js pop std movabs ds rcrl retq cmc subl push or cmp rex.RXB lret loop mov cmp outsb rex (bad) mov mov fisubr jnp lods (bad) (bad) (bad) sti mov sbb mov (bad) (bad) (bad) xchg xchg orl rex.WR or (bad) pop add add adc xor (bad) (bad) (bad) cltd test ss repnz out cmp jrcxz push add pushq pop (bad) add push rex (bad) outsb rex.W (bad) insl jnp sub cmp jmpq pushfw not mov stc clc clc cmc rol jmpq jmpq jmpq jb jmpq shrb cltd shrl cs jp (bad) mov (bad) push (bad) (bad) add test je outsb xchg (bad) outsb rex.WRB testb jnp mov (bad) pop xchg retq (bad) mov and ja repz cmc (bad) pop data16 (bad) adc mov (bad) mov fnsave xor xchg mov pushq loopne int retq (bad) (bad) (bad) cld sbb (bad) (bad) (bad) idivl stos (bad) sbb (bad) ffreep cmpsb cli fs stos (bad) lods movsl test cmpsb movsl (bad) insb stc pushfq scas std icebp mov int test rex.RXB (bad) retq movabs in ds fdivs jbe mov add add pushq idivl sub mov (bad) sti pop or sbb movslq adc movsl mov movslq add rex.WRB xor or fisttpll mov rorb or sbb and add imul add ss xor add or add popq jmpq add jmpq push jmpq cmp jmpq jmpq push jb push jmpq jmpq jns mov jmpq push jmpq jmpq mov jmpq pushfq jmpq jmpq mov jmpq jmpq push movzbw cmp or sub and jmpq movzbw pop jmpq push jmpq jmpq jmpq push jmpq pushfq jmpq push jmpq inc bt cmc clc stc neg cmp cmc clc clc sub test cmp jmpq cmc add jmpq jmpq jmpq jmpq sub jmpq jmpq jmpq setae mov ror bsf sbb xor stc rcl mov not ror stc rol bsr adc xor movsbw ror rcr jmpq push jmpq jmpq jmpq push jmpq dec or movzbl bt not xor cmc rcr sub jmpq push jmpq lea jmpq mov jmpq mov jmpq stc sbb (bad) lock mov mov cmc bswap cmc stc jns add jmpq jmpq data16 lock bsr movzww bt test test stc xchg bt xor jmpq push jmpq push jmpq mov jmpq jmpq push jmpq push jmpq jmpq push je push jmpq sub jmpq jne pushfq jmpq bswap mov cmp mov jmpq mov jmpq push jmpq popq jmpq jmpq jmpq push jmpq push jge push jmpq jns push jmpq push jmpq jmpq jmpq push jmpq mov jmpq je stc cmp jmpq add jmpq jmpq jmpq xor cmp test xchg cmp jmpq push jmpq jmpq sub jmpq jmpq mov jmpq not jmpq jmpq cpuid cmp test stc sub cmc jmpq push jmpq push jmpq push jmpq lea bt cmc rdtsc test bt jmpq jmpq je cmc clc cmp jmpq mov jmpq shrd bts or rcr mov mov add jmpq pushfq jmpq push jmpq push jmpq push jne push jmpq push jmpq push jmpq push jne push jg push jmpq or mov cmc inc rcr mov test jmpq je stc addl test sub cmc clc xor bt cmc cmc bt xchg stc stc cmp test cmp jmpq mov jmpq mov jmpq jbe push jmpq jmpq jmpq not seta mov jmpq jmpq ja jne je jmpq push jmpq jmpq dec cmc clc test cbtw bt bt stc cwtl cmp jmpq jmpq jmpq jmpq jmpq jmpq popq jmpq jle mov jmpq mov jmpq pushfq jmpq xadd not cmp cmc mov shld stc btc setg mov bt clc not test stc not jmpq jmpq jmpq bswap movzbw mov jmpq add add mov add rex xor add (bad) adc xor add loopne imul xor add rex addr32 and outsb add loopne insb add mov xor add (bad) test add (bad) test add loopne insb add rcr add movabs (bad) xor add loopne add add and outsb add rcrb xor add and outsb add (bad) adc xor add shrb add movabs (bad) pushq add add add add add add add add add adc xor add movabs subb add add insl add movabs stc imul fsubrl add add add add adc xor add sub xor add loopne imul xor add movabs stos pushq xor add movabs (bad) add add and imul mov add movabs sahf pushq xor add and add movabs fs add sbbb add rex fs add subb xor add rex rex.R add add imul (bad) addr32 movabs lock add rcrb xor add add add (bad) outsb add and outsl add add insb add add add and insb add (bad) adc xor add (bad) rex.R xor add rcrb xor add and insl add movabs mov add sbbb add sub xor add and imul xor add and outsl add rex fs add movabs mov xor add rorb xor add rex rex.W xor add (bad) or xor add (bad) iret add add xorb add pushq xor add rex xor add rcr add movabs iret add add loopne insl add mov xor add adc add and imul xor add rex add xchg xor add movabs loopne add cmpb add movabs or add movabs movabs add add and imul shrl xor add rex add movabs (bad) imul pop insl add and add subb xor add movabs adc xor add sarb add rcrb xor add subb xor add cmpb add orb add loopne pushq xor add and imul (bad) insl add sub xor add (bad) or xor add add insb add and add shrb add and add loopne outsl add rorb xor add and imul rex.WRX add sub xor add (bad) in insl add sub add movabs rex.R add rex fs add rex insl add movabs or xor add rcr add loopne add add (bad) rex.R xor add and add add pushq add (bad) add add movabs (bad) insb add movabs callq add rex addr32 rolb add add add movabs pushq add movabs subb add add lea xor add and add rex fs add and imul xor add subb xor add (bad) je add movabs mov xor add rex rex.R add rex addr32 loopne pushq xor add movabs (bad) outsb add orb add (bad) iret add add rolb add rex insl add rex xor add rex xor add adc add (bad) adc xor add adc add and add loopne pushq xor add add add loopne insl add (bad) test add (bad) test xor add and imul callq add (bad) xor xor add add add rcrb xor add (bad) test add (bad) in insl add rcrb xor add and insb add shrb add (bad) xor xor add subb xor add add add outsl add rex insl add movabs (bad) pushq xor add xor add add insb add cmpb add movabs adc xor add loopne outsl add loopne insb add movabs mov add and imul xor add movabs (bad) addr32 loopne pushq xor add xorb xor add rex add and imul stc insb add rex addr32 (bad) or xor add loopne imul xor add rex fs add (bad) je add shrb add add mov add (bad) je add rex insl add and insb add loopne pushq xor add movabs cmp xor add loopne pushq xor add rex addr32 and outsb add loopne insb add loopne pushq xor add movabs pop imul xor xor add (bad) test add xchg xor add and add adc add movabs sbb xor add cmpb add rex xor add add pushq add imul add add xchg pushq xor add (bad) test jge add bsr and rol lea cmp bt jmpq jmpq jmpq jne jne mov jmpq jmpq jle pushfq jmpq push jmpq jmpq jmpq push jmpq jmpq jmpq mov jmpq jno pushfq jmpq inc movabs bswap mov setle lea mov seto movzbw dec push jmpq jmpq jmpq jmpq mov jmpq jmpq bt ror cmp clc bt stc xor cmc test cmp mov jmpq push jmpq jmpq jmpq push jmpq lea jmpq bswap cmc shld sar mov test sub jmpq jmpq push jmpq jmpq jmpq clc mov sub neg bt setl mov test cmc sub cmc shrd jmpq jmpq je stc cmp jmpq jmpq setb ror adc xadd not inc bsf bt inc mov stc jle sub sub btc and bsf cmp mov sub stc shr lea clc movabs clc adc btc add test lea btr mov shld inc ror add neg jmpq jo pushfq jmpq jmpq or neg bts mov shr jmpq rep data16 (bad) or stos (bad) add dec pop cmp or mov pop std std cmc test popfq jmpq jmpq mov jmpq dec bt lea cmc clc clc xor test sub jmpq jmpq je setp lea not lea mov jmpq jmpq jmpq inc stc bt ror jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq jmpq push jmpq mov jmpq pushfq jmpq jmpq pop cmp cltq cmp jmpq jns popq jmpq clc add jmpq jmpq push jmpq jmpq jmpq je jmpq jmpq mov jmpq sbb shl xadd stc mov add sbb bt mov stc add jb mov jmpq push jmpq movzbq movsbw push movzbw movabs jmpq movzbw not sar mov movzbw dec mov clc stc cmc jmpq push jmpq push jmpq jmpq jmpq bts bsf bsr mov clc pop clc dec lea pop bsr std ror pop std cmc test pop lea adc pop jmpq jmpq push jmpq es mov jmpq add cmp movzbl mov jmpq stc sub jb mov jmpq push jmpq jmpq jmpq setne pop lea mov not movabs pop retq jmpq push jmpq mov jmpq push jmpq mov jmpq jmpq jmpq jmpq jmpq sub inc mov cmp test add jmpq rcl add and sub mov jmpq push jmpq mov jmpq popq jmpq push jmpq cmp bt add jmpq jmpq jmpq movsbq not setae seta mov jmpq lea lea dec mov not jmpq push jmpq popq jmpq jmpq pushfq jo popq jmpq mov jmpq jmpq jmpq not cmc add test bt cmc add clc cmc bt cmp xor test bt jmpq jmpq push jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq clc and jmpq push jmpq push jmpq push jmpq push jmpq test clc add jno not jmpq ja jmpq mov jmpq jmpq push jmpq setno mov jmpq push jmpq je movsbl movzbq lea mov jmpq jp popq jmpq lea dec mov bswap lea movsbw inc bswap lea jmpq mov jmpq push jmpq mov bt jmpq push jmpq mov not not mov jmpq mov lea mov jmpq push jmpq jmpq cmp jmpq pop bswap mov mov pop bswap mov jmpq pushfq jmpq mov jmpq push jmpq jmpq push jmpq jmpq pushfq jmpq jmpq jmpq cld cld jmpq dec cmc bt lea cmc stc clc test xor test cmp cmc cmp sub jmpq jmpq popq jmpq push jmpq jne cmp sub stc cmp xchg cmp jno test test sub jmpq pushfq jmpq jmpq ja jmpq mov jmpq jmpq jmpq jmpq mov jmpq pushfq jmpq inc test clc neg jmpq mov pushfq mov push cld mov jmpq jmpq push jmpq pushfq jmpq push jmpq jne bsf cmp or neg xorb mov bswap setle pop jmpq bt sub clc cmp shr jmpq pushfq jmpq mov jmpq push jmpq pushfq jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq mov cmp cmc xchg cmp stc xor jmpq jmpq movsbq btr and sbb jmpq jmpq cmc test cmp jmpq push jmpq jmpq lea dec movsbw bt jmpq jmpq test sub test shl jmpq push jmpq mov jmpq push jmpq pushfq jmpq not jmpq jmpq neg setle lea mov inc add cmp inc mov adc test clc mov bt bt clc add clc shrd jmpq jmpq push jmpq push jmpq stc jmpq add jmpq inc stc clc not cmc cmc cmp clc add cmc cmc cmp cmp add cmc test bt bt xor test cwtl test cltq bt jmpq push jmpq jmpq rep shld pop shld clc btc cld pop std std popfq jmpq jmpq je cmp bt clc clc cmp jmpq push jmpq jmpq mov jmpq jmpq stc cmp xor cmc cmc cmc stc sub jmpq push jmpq push jmpq popq jmpq mov jmpq jmpq popq jmpq jmpq push jmpq jmpq push jmpq cmc shl jmpq push jmpq sar mov cmp cmp stc add jmpq push jmpq je cmp cmp jmpq je test jmpq jmpq je test bt cmc bt cmp jmpq push jmpq jmpq push jmpq jmpq bt test stc sub bt imul jmpq jmpq push jmpq push jmpq push jmpq popq jmpq mov jmpq jmpq not rcr mov and stc bts mov (bad) icebp rcl mov stc bt clc sub stc jmpq push jmpq mov jmpq not lea push setns not mov push not lea push dec jmpq push jmpq push jmpq popq jmpq jmpq mov jmpq push jmpq lea jmpq push jmpq lea xchg inc btr btc movzbq ror ror add sub not cmc sbb mov cmc rcr sub bsr shr cmp bsr and neg cmc inc mov setae shrd lea btr btc or movabs clc data16 repz stc sub bsf mov sets cmc add movzbl mov neg neg sub sbb cmc neg rcr add data16 repnz (bad) cmc ror movzbw neg shl sub bswap rol sub lea clc movzbq mov bt movzbl mov stc ror test stc test test add jmpq jmpq push jmpq jmpq jmpq push jmpq xadd adc jmpq jmpq push jmpq jmpq mov jmpq jmpq jmpq stc sub jmpq push jmpq push jmpq bsr bsf and movsbw shld mov and ror lea not movabs mov shr lea add adc shld mov or add sbb clc dec mov not neg sub dec ror add movsbw sar bswap not sets rcl neg sbb sar sub adc bts bt rcl sub bt bt movzbq movsbl mov rol seta mov clc jmpq add jg mov jmpq popq jmpq push jmpq (bad) lock repz bts cmp xor sub add stc mov shrd cmp ror add and mov and adc shr sub sar neg add bt dec btc stc not data16 data16 (bad) neg lea sub sbb cmc sub cmc bt cmc movzbq mov mov bt clc bt ror bt stc add jmpq jmpq jmpq shrd bts jmpq push jmpq jmpq push jmpq popq jmpq jmpq push jmpq jmpq push jmpq push jmpq push jmpq popq jmpq push jmpq mov jmpq push jmpq jmpq mov jmpq push jmpq jmpq push jmpq jmpq jmpq push jmpq push jmpq jmpq mov movsbq mov jmpq jmpq divq jmpq push jmpq mov clc mov stc bt sub jmpq mov jmpq xadd mov lea mov clc add jmpq jmpq mov jmpq cmc cmc stc and jmpq dec cmc clc bt xor jmpq jmpq jmpq jmpq push jmpq cmc cmp sub jle mov jle lea jmpq jmpq jmpq lea jmpq jmpq push inc not xchg mov bswap inc bts xchg jmpq jmpq push jmpq rep test pop btc rcr pop stc cmp cmp cld popfq jmpq mov jmpq push jmpq jmpq jmpq jmpq push jp push jmpq jmpq jmpq jmpq lea jmpq push jmpq pushfq jmpq push jmpq mov jmpq push jmpq push js push jmpq jmpq jmpq movzbq movzbw rcl cmc rcr mov jmpq popq jmpq add jmpq jmpq je jmpq callq bswap seta not mov jmpq test add jmpq push jmpq push jmpq push jmpq jmpq movsbw lea shr stc mov jmpq push jmpq jmpq bt jmpq push jge push jmpq movzbw bswap mov movsbw push mov bswap not movsbw mov jmpq jns popq jmpq lea jmpq jmpq not jmpq jmpq mov jmpq jmpq jmpq (bad) hlt add mov cmc mov mov cmc bt jmpq jmpq jmpq push jmpq clc mul jmpq push jmpq jmpq mov jne pushfq jmpq push jmpq shrd mov cmp dec xor movsbw lea sub mov bswap jmpq inc cmp stc not cmp bt bt sub bt add bt xor stc cwtl cmp cmp stc stc sub jmpq shrd cmp ror clc mov cmp add jmpq mov jmpq push jmpq cmp jmpq bt clc stc stc xor jmpq jmpq jns mov jmpq mov jmpq je stc cmp cmp jmpq jmpq je cmp xor stc clc cmp jns jbe or lea clc lea jmpq mov jmpq mov jmpq jmpq jmpq push movsbw not push lea bswap movsbw push not repz not inc push jb mov movzbw push dec jns mov bswap push dec push movsbw movsbw xchg pushq js movabs movsbw movsbq not setle mov xchg bswap jmpq jmpq push jmpq push jmpq jmpq jmpq push jmpq mov jmpq mov jmpq jmpq push jmpq jmpq mov jmpq addl bt push bt test stc clc sub jmpq push jmpq jmpq jmpq push jmpq mov jmpq push jmpq sub cmc jne bt imul jmpq jmpq lea shl shr mov clc add mov cmp cmp bt jmpq jmpq push jmpq clc jmpq mov jmpq jmpq sub jmpq jmpq pushfq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq jmpq push jmpq sets pop lea setle pop jo xchg xchg pop mov setb jmpq jmpq push jmpq jmpq clc bt add cmc cmc cmp mov jmpq mov jmpq jl popq jmpq push jmpq mov jmpq jmpq jmpq jbe shl lea stc lea cmc clc clc jmpq push jmpq jmpq jmpq jmpq mov jmpq pushfq jmpq jmpq shr movzbl dec clc add bswap jmpq jmpq push jmpq popq jmpq rol btr bt mov stc clc xchg stc xor jmpq popq jmpq add test cmc jmpq sub bt clc shr jmpq jmpq mov jmpq jmpq jmpq not jmpq callq movzbw movsbw jmpq jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq bsf inc mov shl mov cmc test sub bt jmpq push jmpq jmpq jmpq push jmpq push jmpq test clc stc test ja je test test test cmc addl stc bt bt clc sub cmp cmc sub clc xchg test bt bt cmp cmp jmpq jmpq push jmpq lea movzbw movsbw mov jmpq jmpq jmpq jmpq lea sub setne bswap movabs bswap add bt inc rcr mov neg and add movsbw movzbw test cmc mov add add dec neg sub clc dec shl add add adc rcr inc not add add rcl neg rcl sub adc movsbl ror sub rol cmc rcl rcl movzbq rcl movzbq rcr mov clc ror stc test add jmpq push jmpq rcl stc btr mov cmp test add jmpq jmpq jmpq dec stc stc xor clc stc clc bt cbtw jnp cwtl stc cmc cmc stc cltq jmpq push jmpq jmpq push jmpq push jg push jmpq jmpq push jmpq push clc ror bswap cmc sub data16 repz cmc clc cmp clc sub clc jmpq jmpq jmpq jmpq pushfq jno popq jmpq jmpq push jmpq jmpq popq jmpq jmpq pushfq jmpq jmpq jmpq mov jmpq jmpq push jmpq shr sub movsbq jmpq sub bt clc stc bt imul jmpq jmpq mov jmpq push jmpq mov jmpq push jmpq jmpq stc imul jmpq cmc add clc jmpq jmpq push jmpq popq jmpq jmpq push jmpq jmpq jmpq je setne jmpq mov jmpq add jmpq push jmpq mov jmpq jmpq jmpq push jmpq jmpq jmpq mov jmpq jmpq push jmpq jmpq pushfq jmpq dec stc test cmp lea clc stc cmc xor cmc stc sub jmpq jmpq popq jmpq popq jmpq push jmpq rol jmpq push jmpq mov xor or dec sub and add rcl lea bt and not add neg and sar shld sub shl sub movzbw mov cmc jmpq ja push jmpq jmpq jmpq jnp mov jno mov jmpq mov lea std std push movsbw jmpq je bswap movzbw mov jmpq stc bswap stc bt test test sub bt ror jmpq push jmpq push jmpq ja jmpq push jmpq jmpq shl neg inc and movzbl cmc clc xor clc cmp bt add jmpq push jae push jmpq xor cmp stc bt sub jmpq jmpq rol setge ror shld add stc or not shr xor not movzbw bswap dec dec bsr lea neg or mov stc bt jp sub jmpq popq jmpq jmpq push jmpq push jmpq rol jmpq mov jmpq jmpq cmc cmc cmc clc add jle mov jmpq popq jmpq pop jmpq push jmpq popq jmpq push jmpq test jbe bt add jmpq cld mov movsbq lea std push mov lea movzbw mov ja std std cld jmpq mov xor test btr shr lea jmpq push jmpq jmpq jmpq mov jmpq clc cmp add jmpq pushfq jmpq push jmpq jmpq jmpq push jmpq jmpq seto pop lea lea lea pop retq push jmpq push jmpq jmpq jmpq movzbw xchg mov neg mov test bsf mov cmc cmc add jmpq jmpq jmpq mov jmpq jmpq clc sub jmpq pushfq jmpq ja shrd btr clc mov cmc xchg clc bt xor jmpq mov jmpq jmpq bsf xor bt mov jmpq jmpq cmpl jmpq jmpq not cmc mov mov bswap mov jo sub clc bt mul jmpq pushfq jmpq jmpq push jmpq push jmpq jmpq mov jmpq push jmpq jmpq jmpq jmpq movzbl jmpq jmpq mov jmpq push jmpq dec jmpq movsbw bswap notq neg mov cmp cmp cmp stc sub jmpq jmpq popq jmpq jmpq jmpq jmpq jne shl mov xor movzbl mov cmp cmp jmpq mov std jmpq jmpq mov jmpq jmpq jmpq push jmpq mov jmpq cmp jmpq clc test sub clc bt cmc stc shr jmpq push jmpq mov jo mov jmpq not jmpq mov jmpq jmpq dec jmpq cld cld jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq mov bt test bt add ja callq jmpq push jmpq jmpq push jmpq push jmpq push jmpq push jmpq add jmpq pushfq jmpq popq jmpq jp sub bt imul jmpq push jmpq sar shld (bad) testb rex.RX xchg retq movzbw inc inc setnp inc (bad) repnz neg setle rol bsr btc dec add mov bsr not mov jo cmc add jmpq push jmpq jmpq jne je clc cmc cmc jmpq clc mul jmpq push jmpq jmpq jmpq test sub stc stc cmp cmp shl jmpq jmpq mov mov jb mov jg mov jmpq jmpq jmpq mov jmpq jmpq mov jmpq jmpq jmpq jmpq pushq setnp movsbw jmpq push jae push jmpq push jmpq jmpq not shr rol mov shl not test mov cmc not test not test cmc cmp clc sub clc and jmpq push jmpq jmpq je setae not movsbw mov jmpq pushfq jmpq jmpq cmc xor cmp cmp jmpq movsbw push jmpq jmpq jmpq jmpq push jmpq jmpq decl jmpq push jmpq mov jmpq jmpq jmpq mov jmpq mov jmpq jmpq push jmpq jmpq jmpq jmpq jmpq mov mov setge movabs xchg mov bswap bswap movzbq jmpq push jmpq pushfq jmpq jmpq push jmpq jmpq sub clc test jmpq inc cmc jne clc cmp not stc add cmp stc test clc add bt xor stc cwtl bt stc cltq cmc cmc jmpq callq jmpq test movl clc or jmpq push jmpq jmpq popq jmpq jmpq push jmpq push jmpq cwtd mov sbb dec test movzbw mov jmpq jmpq jmpq clc sub jns bt sub jmpq push jmpq jmpq js push jmpq inc cmc lea bt clc bt not jmpq jmpq push jmpq mov jmpq push jmpq mov jmpq mov jmpq jmpq jmpq inc test neg clc sub stc cmc add bt stc cmc test sub jmpq jmpq movsbw data16 repnz btc mov cmp cmp cmc stc add jmpq push jmpq push jmpq clc bt cmp pushq bt clc cmc add cld popfq jmpq popq jmpq mov jmpq jmpq mov jmpq add btr mov shr setns mov clc sub jle divl jmpq mov jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq sar shr mov shl rol add mov js bt sub clc cmc stc shr jmpq popq jmpq popq jmpq push jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq popq jmpq jmpq mov jmpq mov jmpq push jb push jmpq mov jmpq jmpq popq jmpq cmp movzbw mov sbb rcl mov test clc sub test clc stc cmp shl jmpq mov test rol movzbl cmc jmpq push jmpq push jmpq bt mov stc cmc cmp sub test add jmpq jbe sbb lea cmc stc lea stc test jmpq push jmpq jmpq jmpq jmpq push jmpq test add jmpq sbb dec mov rcr mov cmp stc sub jmpq sub clc test cmc jmpq bsf rcl notl not btr rcr mov stc sub bt clc bt clc and jmpq not jmpq push jbe push jmpq jmpq jmpq mov jmpq push jmpq lea jmpq push jmpq jmpq push jmpq jmpq shld mov cmc cmp bt cmc sub jmpq shld jmpq pushfq jmpq push jmpq push jmpq pushfq jmpq dec test jmpq push jmpq push jmpq popq jmpq jmpq jmpq jmpq jmpq cmp jmpq jmpq mov jmpq push jmpq bt add jmpq push jmpq push jmpq jmpq jmpq jmpq jmpq jmpq je mov jmpq jmpq jmpq jmpq jmpq jnp push jmpq jne push jmpq neg movzbl test xor test cmc stc test add jmpq jmpq push jmpq mov jmpq push jmpq shld adc (bad) icebp mov neg bt cmp mov cmp cmc jmpq jmpq clc shr jmpq lea jmpq jmpq popq jmpq cmc bt clc mov jmpq jmpq clc addl cmp clc cmc jmpq jmpq push jmpq jmpq mov jmpq je cmc bt jmpq mov jmpq push jmpq mov jmpq mov jmpq jmpq push jmpq jmpq cmp sub jmpq (bad) lock rol sbb mov clc xor cmc clc cmc cmc ror stc stc xor clc jns ror test cmp test xor jmpq push jmpq popq jmpq cmc ror cmp bt cmc stc add jmpq push jmpq shl movzbw neg mov bt cmp shrd add jmpq cmp not mov test jp test bt sub jmpq jmpq je test cmc cmp jmpq mov jmpq jmpq sub jmpq jmpq bsr and xchg mov bsf shl btr mov cmp sub jmpq push jmpq jmpq push jmpq mov jmpq lea push jmpq jmpq jge push jmpq push jmpq push jmpq jmpq jmpq jmpq rol rcl clc mov cmc clc jmpq push jmpq push jmpq jmpq jmpq jmpq jmpq jmpq jmpq bt cmc btc mov cmc jmpq jmpq jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq jne sar mov bt and stc cmp jle jne rcl movsbl shld xorb movsbw pop jmpq jmpq jmpq push jmpq mov jmpq dec jmpq jmpq jmpq jmpq jmpq jmpq pushfq jmpq jmpq push jmpq jmpq jmpq rol sbb not add inc shrd ror (bad) (bad) sub mov lea movzbl inc movsbw or mov xor mov jmpq mov jmpq mov jmpq jmpq jmpq jmpq clc sub jmpq div jmpq pushfq jmpq jne mov inc sbb mov cmc and test cmp clc cmp jmpq rcr btr ror movsbw xchg not cmc btc bsf mov stc xchg sub jmpq rcl mov add (bad) lock jmpq mov jmpq push jmpq push jmpq push jmpq push jmpq jmpq push jmpq mov jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq clc stc clc stc cwtl clc clc cltq cmp cmc sub jmpq push jmpq xchg mov movzbw lea shrd mov jmpq push jmpq clc sub jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq popq jmpq push jmpq pushfq jmpq movzbw xor btr mov bt shl stc stc shr cmp or stc cmc cmp xor stc jmpq shld mov or inc mov shr mov bt (bad) icebp mov test add stc shld jmpq cmc mov test mov shld mov stc cmp jmpq push jmpq jmpq jmpq jo ja sub or setge not mov sbb lea xchg test bsf sub bt clc lea sub shl and rol sub lea movsbw mov movzbl pushfq jmpq push jmpq cmp jmpq jmpq jmpq jle pushfq jmpq push movabs push mov bswap lea movsbw push lea setbe push movzbw lea push movzbw mov mov setge push jmpq push jmpq jae push jmpq jmpq push jmpq pushfq jmpq jmpq cmc mov jmpq jmpq jmpq pushfq jmpq push jmpq lea stc stc stc jmpq jmpq mov jmpq mov xor bsr bswap movzbl inc xor sar btr not add mov not dec setb movzbw dec not jb clc shr xor mov ror movzbl bt cmc stc jmpq mov jmpq cmc clc cmp jmpq cmc cmp jmpq jmpq lea jmpq xadd shld data16 lock push add movsb loopne movzbw (bad) lock stc bt jmpq pushfq jmpq jmpq popq jmpq jmpq push jmpq mov jmpq push jmpq lea jmpq push jmpq jmpq sub jmpq push jmpq jmpq jmpq jmpq jae popq jmpq popq jmpq mov jmpq push jmpq sub jmpq bsf mov bt stc jmpq jmpq mov jmpq jmpq xor bt mov cmc neg clc mov stc sub clc mul jmpq mov jmpq ror bts test setae add bsf or shr shld xor btc not bsr movzbw mov jg add jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq or pop shrd shl popfq lea pop bswap pop jmpq mov jmpq jmpq jmpq test bt and jmpq mov jmpq jmpq push jmpq jns sub jmpq seto pop movsbw movsbw pop not jmpq jmpq jmpq jmpq jmpq bswap bt test test sub cmc bt clc ror jmpq jmpq jmpq jmpq test jmpq pushfq jmpq sete lea not pop movzbw pop mov movzbl pop bswap mov pop mov mov mov mov pop movsbw jmpq mov jmpq jmpq ror rcr bswap movzbw not and rcr movzbl mov lea xadd test sub movzbl lea bsf sbb and inc bts mov neg jmpq jmpq pushfq jb popq jmpq rol not sbb mov mov cmp cmp sub jmpq jmpq jmpq jmpq jmpq push jmpq mov jmpq push jmpq inc stc clc clc cmc ror cmc clc bt jmpq xadd ror mov jno bts neg mov jmpq push jmpq jmpq jmpq pushfq jmpq push jmpq cmp jmpq inc sbb bts sar add bswap btr rcl xor rcl btc neg shld add lea stc or bsf add shr setle shld xor mov test bt test jmpq pushfq jmpq mov stc cmp bt sub cmp movl clc or jmpq popq jmpq sub jmpq xchg seto movsbq xchg push inc setl inc movsbw push dec dec dec pushq setl movabs dec lea mov dec push bswap mov movsbl jmpq jmpq jmpq push jmpq push jmpq jmpq mov jmpq jmpq sub jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq push jmpq inc xor shl btc xor cmp movzbl jmpq jmpq push jmpq jmpq jmpq push je push jmpq jmpq jmpq jmpq jmpq jmpq jmpq push jmpq pushfq jge popq jmpq jmpq jmpq jmpq jmpq jmpq jmpq clc jae add jmpq jmpq jne adc shrd btr xorb movsbw movzbl pop jmpq push jmpq push jmpq mov jmpq jmpq jmpq popq jmpq push jmpq push jmpq mov jmpq cmp sub test test xchg test stc stc cmp jmpq jmpq jb mov jmpq jmpq jmpq add shl add btr sbb add inc mov cmp clc bt add jne mov jmpq push jmpq bt test add jmpq jmpq mov jmpq jmpq push jmpq popq jmpq jmpq push jmpq jmpq add ror mov cmc sub jmpq jle mov jmpq push jmpq popq jmpq jmpq push jmpq push jmpq push jmpq mov jmpq je stc stc clc bt addl cmc cmc sub clc jmpq lea inc rcl jmpq push jmpq push jmpq push jmpq popq jmpq cmp cmc cmp sub cmc jmpq rcl movsbw clc mov add jmpq push jmpq movzbw mov not mov jmpq push jmpq jmpq clc add jmpq add jmpq mov jmpq push je push jmpq not mov setle mov jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq cmc test jmpq mov jmpq push js push jmpq mov jmpq jle not jmpq mov jmpq jmpq jmpq divl jmpq jmpq rol mov jo xor jmpq jmpq jmpq jmpq popq jmpq cwtl bt test bt cltq test cmc stc test sub jmpq jne lea xorb jmpq push jmpq mov jmpq mov jmpq mov jmpq jmpq jmpq inc mov xor bsr rcr bt mov stc cmp add jmpq push jmpq ror cmc add jmpq push jmpq push jmpq mov jmpq xadd cmc mov sbb mov shr and mov clc jmpq popq jmpq jge popq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq ja shld add mov btc neg clc lea stc sub shr neg lea movzbw btr and shl shl movsbl btc sub movzbw movsbq mov jmpq push jmpq 